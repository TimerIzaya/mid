try {
    new Float64Array(8);
} catch(e7) {
}
try {
    new BigUint64Array(257);
} catch(e11) {
}
try {
    new Uint32Array(3269);
} catch(e15) {
}
class C16 {
    [0.9615551625912561] = Uint32Array;
    [-3.0] = 257;
    static {
        const v18 = super.a;
        let v19;
        try { v19 = v18(v18, v18); } catch (e) {}
        let v22 = 268435456;
        const v23 = 8 ** 8;
        v23 | 9007199254740991;
        const v25 = v19 | v19;
        v22--;
        try {
            Math.log1p(v23);
        } catch(e28) {
        }
        +v25;
        !3269;
    }
}
new C16();
const v32 = new C16();
const v33 = new C16();
try {
const t0 = 0.9615551625912561;
t0(C16, 1073741825);
} catch (e) {}
throw v33;
try {
    v32.length = 2690561821;
} catch(e39) {
}
let v41 = -9223372036854775808;
-v41 << Uint32Array;
-55591;
--v41;
