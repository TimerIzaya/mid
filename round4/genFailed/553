let v0 = 4096;
try {
    new BigUint64Array(v0);
} catch(e3) {
}
try {
    new Uint8Array(1411);
} catch(e7) {
}
try {
    new BigUint64Array(3261);
} catch(e11) {
}
let v12 = 15n;
-Infinity;
class C18 {
    set b(a20) {
        try {
            a20.g = this;
        } catch(e21) {
        }
    }
    m(a23, a24, a25, a26) {
        for (let v27 = 0; v27 < 32; v27++) {
            a26["p" + v27] = v27;
        }
        return a25;
    }
}
const v30 = new C18();
const v31 = new C18();
const v32 = new C18();
try {
    v32 - 1411;
} catch(e34) {
}
try {
    C18[9] = v31;
} catch(e35) {
}
-9007199254740991 - v12;
const v40 = v12++;
const v41 = --v0;
const v42 = v40 + -9007199254740991;
try {
    Math.cosh(v30);
} catch(e44) {
}
try {
    Math.sign(v41);
} catch(e46) {
}
try {
    Math.tanh(v42);
} catch(e48) {
}
