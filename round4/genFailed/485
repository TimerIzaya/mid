const v0 = [];
function f1() {
    return v0;
}
const v2 = [v0];
let v3 = [v2,v0,v2,v2];
const v4 = [v2];
let v6 = new Map();
const v7 = [Map,v0];
const v8 = [v7,v7];
[Map,v7,v7,v8];
function f10() {
    return f1;
}
function f11(a12, a13, a14) {
    const o19 = {
        [a14](a16, a17) {
            switch (a16) {
                default:
                    try {
                        a13 **= Map;
                    } catch(e18) {
                    }
                    break;
            }
            return v7;
        },
        "d": v2,
        __proto__: v6,
        ...a12,
        "f": v4,
    };
    return o19;
}
f11(v0, v8, v4);
let v21 = f11(v4, f10, v2);
f11(v4, v21, v0);
for (const v23 of v8) {
    v3["unshift"](..."unshift", ...v8, f11, v21, ..."unshift", ..."unshift");
    ("unshift")[f1];
    try {
        v3 -= v3;
    } catch(e27) {
    }
}
({"length":v21,...v6} = v4);
