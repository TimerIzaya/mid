const v0 = [];
try {
    new Int8Array(3);
} catch(e4) {
}
try {
    new Int8Array(1412);
} catch(e8) {
}
try {
    new Int8Array(62);
} catch(e12) {
}
let v14 = "h";
class C16 {
    static valueOf(a18, a19, a20, a21) {
        try {
            v0.length = a19;
        } catch(e22) {
        }
        let v23;
        try { v23 = a21(); } catch (e) {}
        ({"c":v23,"g":v23,...v14} = a21);
        return 3;
    }
    [3];
    6 = Int8Array;
    static [-1];
    #h = v14;
}
const v24 = new C16();
new C16();
let v26 = new C16();
Object.defineProperty("object", 8, { configurable: true, enumerable: true, value: Int8Array });
try {
    v26 = v14;
} catch(e27) {
}
class C28 {
    static [v24] = v24;
    static 4013 = Int8Array;
    [Int8Array] = Int8Array;
    b = C16;
    e;
}
new C28();
new C28();
new C28();
