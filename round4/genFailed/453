const v0 = [];
try {
    new Uint8ClampedArray(5);
} catch(e4) {
}
try {
    new Float32Array(6);
} catch(e8) {
}
let v9 = 0;
try {
    new Uint16Array(v9);
} catch(e12) {
}
class C13 extends Uint8ClampedArray {
    constructor(a15, a16) {
        let v14 = this;
        super(a16);
        try {
            Math.cosh(Uint8ClampedArray);
        } catch(e22) {
        }
        try {
            Math.atan2(Float32Array, Uint8ClampedArray);
        } catch(e24) {
        }
        -(-6.719437180720715e+307);
        Float32Array - Uint8ClampedArray;
        ++v14;
    }
}
new C13(5, 6);
new C13(6, 5);
new C13(6, 6);
delete v0?.length;
const o32 = {
};
const v34 = new Proxy(C13, o32);
try {
    Uint8ClampedArray & v34;
} catch(e36) {
}
try {
    v9 = 6;
} catch(e37) {
}
