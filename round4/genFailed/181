const v0 = [1.0,-3.0,-6.296806851085687,-702740.4903318053,-558138.6135527786,-3.0];
const v1 = [2.2250738585072014e-308,415922.941207075,560001.2012567807,-1.415597389496161e+308,-5.554804320719011e+307];
const v2 = [2.0,120.20625216821873,-1.194971544272182e+308,Infinity,460.5865024729658,Infinity,824939.7637565564,-1e-15,4.197718636421383];
try {
    new Uint16Array(127);
} catch(e6) {
}
try {
    new Uint32Array(254);
} catch(e10) {
}
try {
    new Int32Array(73);
} catch(e14) {
}
class C15 extends Uint16Array {
    constructor(a17, a18) {
        super(a18);
        [4294967297,65536];
        const v20 = [702332335,-1024,1102191003,-2,1024];
        [15631,-2147483649,-48276,-834936855,268435439,9];
        try {
            v1.findIndex(a17, v20);
        } catch(e23) {
        }
    }
    static [v1] = 73;
    static #c = Int32Array;
    static 536870887;
    static 4294967295 = v2;
}
new C15(Uint16Array, 254);
new C15(v0, 254);
const v26 = new C15(127, 73);
try {
    C15.fuck(254, v1);
} catch(e29) {
}
v26[73];
for (let [v31,v32] of v1) {
    try {
        v31.length = 8;
    } catch(e34) {
    }
}
