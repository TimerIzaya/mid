function f0() {
    const o13 = {
        __proto__: "assign",
        ["search"]: "search",
        "d": 65537,
        n(a5, a6) {
            const v8 = Symbol?.asyncIterator;
            a6[v8] = v8;
            const o9 = {
            };
            try {
                new Proxy("assign", o9);
            } catch(e12) {
            }
            return a5;
        },
    };
    return o13;
}
const v14 = f0();
const v15 = f0();
const v16 = f0();
function F17(a19) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v15;
    } catch(e20) {
    }
}
new F17(v14);
new F17(v15);
const v23 = new F17(v16);
const v24 = [-4294967297,3387,-65535];
[-2,10,6,55332,-46888,-23900,-4294967295];
[15];
const v27 = /\p{Script=Greek}E*/iydvs;
/a{1,2}?/gmv;
const v29 = /^\u003z/igd;
const v33 = v23?.f;
const v34 = v29?.[-2];
let v35;
try { v35 = v33(v24, v34, v15, 128n); } catch (e) {}
try {
    v27.valueOf = v35;
} catch(e36) {
}
try {
    Math.expm1(1073741824);
} catch(e42) {
}
-3.7754078588613205e+307 * -3.7754078588613205e+307;
5 - 50128n;
