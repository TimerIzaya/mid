function f0() {
}
const v1 = [-1.0,7.803689507848842e+307,-810229.6198788466,3.0];
const v2 = [-87179.35507006967,1000000.0,368.31995442587345];
const v3 = [-4.675778838069573e+307,0.951039392403573,-1.2233194405345696e+308,4.0];
const v4 = /7w[R(?<!a)]/iydv;
const v5 = /o[\ca]\p{Changes_When_NFKC_Casefolded}/yvs;
/8/iuys;
function f10(a11, a12) {
    const o24 = {
        "e": v2,
        ...v3,
        [v1](a14, a15) {
            try { a12.asIntN(); } catch (e) {}
            let [,v17,v18] = "bHA";
            return super.e;
        },
        "d": v5,
        get f() {
            f0();
            try {
                super[this] = v4;
            } catch(e22) {
            }
            v3?.length;
            return "symbol";
        },
    };
    return o24;
}
const v25 = f10("symbol", v5);
const v26 = f10("valueOf", "valueOf");
const v27 = f10("valueOf", "symbol");
function f28() {
    return v5;
}
try {
    new f28();
} catch(e30) {
}
async function f31(a32, a33, a34, a35) {
    function F36(a38, a39, a40, a41) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.b = a40;
        } catch(e42) {
        }
        try {
            this.g = a32;
        } catch(e43) {
        }
        try {
            this.e = a40;
        } catch(e44) {
        }
    }
    new F36("bHA", a34, v25, a34);
    new F36("symbol", "bHA", v27, v25);
    new F36("valueOf", v4, a34, v27);
    return await "bHA";
}
f31(v1, v2, v26, v26);
