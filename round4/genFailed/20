class C3 {
    constructor(a5, a6) {
        let v7;
        try { v7 = a5(this, this, a5, a5, a5); } catch (e) {}
        const t4 = "boolean";
        delete t4[v7];
        [["boolean"],this];
        [v7,this,"boolean"];
    }
    static #a = -1000.0;
    static p(a13, a14) {
        with ("HH6") {
            length = this;
            a14 instanceof a14;
            try {
                const o16 = {
                };
                this.fuck(a14, o16);
            } catch(e18) {
            }
        }
        return a14;
    }
}
const v19 = new C3(-1000.0, "boolean");
const v20 = new C3("HH6", "HH6");
const v21 = new C3(C3, v20);
const v22 = [C3,C3,-1000.0];
const v23 = [v22];
const v24 = ["HH6",v19,v21];
function F25(a27, a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a27;
    } catch(e31) {
    }
}
const v32 = new F25(v20, v22, v24, v22);
const v33 = new F25(v24, v32, v20, v22);
new F25(v22, "HH6", v22, v19);
new WeakSet();
const v40 = v32?.b;
try {
    v20[v33] = v20;
} catch(e41) {
}
try { v40(-1000.0, v40); } catch (e) {}
try {
    v33 >>> v23;
} catch(e44) {
}
