const v3 = [7900101,7900101,-61237];
const v4 = [7900101,v3,7900101,v3];
const v5 = [-1,7900101];
function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a9;
    } catch(e12) {
    }
}
new F6(v5, v5, v4, 7900101);
let v14 = new F6(7900101, v3, v5, 7900101);
const v15 = new F6(-61237, v3, v4, -61237);
class C16 extends F6 {
    static #n(a18, a19, a20, a21) {
        [7.457098093046662e+307,1.2815227661290845e+308,-7.86231082690886,0.7469272403076821,-226.2559455293125];
        const v23 = [2.0,8.754132219890671e+307,-446.2039831848846,821.4949684163785,1.6369811332022877e+308,123.00025468110971,1.0,1000.0,5.0,0.519605407989946];
        [-2.0,0.5749231802878274];
        return v23;
    }
    static set a(a26) {
        try {
            v3[this] = a;
        } catch(e28) {
        }
    }
}
new C16();
new C16();
new C16();
for (let [v32,v33,v34,v35] of v4) {
}
let v39;
try {
const t0 = -1;
v39 = t0(v4, v15);
} catch (e) {}
try {
    v14 = v39;
} catch(e40) {
}
