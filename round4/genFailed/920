class C3 {
    toString(a5, a6) {
        let v7;
        try { v7 = a6.set(); } catch (e) {}
        ({"h":v7,} = a5);
        try {
            super.n(a5);
        } catch(e9) {
        }
        return this;
    }
    constructor(a11, a12) {
        try {
            Math.sign(268435456);
        } catch(e16) {
        }
        268435456 >> this;
        +(!14242);
    }
}
const v20 = new C3(14242, 512);
const v21 = new C3(v20, C3);
const v22 = new C3(v20, v21);
class C23 {
    d = 512;
    static p(a25, a26, a27, a28) {
        try {
            v21 - -999.5857825465741;
        } catch(e30) {
        }
        const v32 = new Set();
        v22?.[1];
        return v32;
    }
    [-1];
    static 16;
    [v20] = 14242;
}
const v34 = new C23();
const v35 = new C23();
new C23();
const v40 = [C3,v21,[-999.5857825465741,[v34,v35],-999.5857825465741],512,C23];
try {
    v20[8] = 14242;
} catch(e41) {
}
const v45 = v21?.[3];
try { v45(14242, v22, v34, v45, 512); } catch (e) {}
