let v0 = -37648485n;
const v3 = [0.06913698928770073,1000000.0,0.4644609381674797];
const v4 = [-1.3856349700051322e+307,2.220446049250313e-16,-159781.4119397574,3.1155103584140946e+307,0.11180712976273433,2.0,-528.0275309028436,1000000000.0,0.2623122042859036];
const v5 = [-2.7775513920592907e+307,2.2250738585072014e-308,-1.7976931348623157e+308,-1000000.0];
class C9 {
    constructor(a11, a12, a13) {
        super[268469214];
        new WeakMap();
        try {
            super[WeakMap] = this;
        } catch(e17) {
        }
    }
    static 6;
    10 = 64n;
    65535 = 64n;
    #b = v3;
}
const v18 = new C9(v4, 64n, v3);
const v19 = new C9(-6, v0, v5);
const v20 = new C9(v19, 64n, 268469214);
const v22 = [v20,v18];
const v23 = v5?.findLastIndex;
Reflect.apply(v23, v20, v22);
function f25(a26, a27, a28, a29) {
    'use strict';
    const v31 = Symbol?.isConcatSpreadable;
    v22[v31] = v20;
    ({"g":v0,} = v31);
    return v31;
}
f25(v18, 129, v19, v23);
