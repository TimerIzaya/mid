const v0 = [];
try {
    new Uint16Array(4096);
} catch(e4) {
}
try {
    new Uint8Array(8);
} catch(e8) {
}
try {
    new Uint8Array(128);
} catch(e12) {
}
try {
    new Int32Array(16);
} catch(e16) {
}
try {
    new BigInt64Array(10);
} catch(e20) {
}
try {
    new Float32Array(4096);
} catch(e24) {
}
const v25 = v0[10];
try {
    v25.e = v25;
} catch(e26) {
}
%VerifyType(10);
const v27 = `g${v25}number${BigInt64Array}string${Uint16Array}TB5D${16}search`;
let v28;
try { v28 = v25(8, Int32Array, 4096); } catch (e) {}
Reflect.construct(Uint16Array, [v27,128,v28], v25);
