class C3 {
    8;
    constructor(a5) {
        Object.defineProperty("replaceAll", a5, { enumerable: true, value: this });
        try {
            a5[1] >>>= 1;
        } catch(e6) {
        }
    }
    #g;
    static #h = "toLowerCase";
    static h;
    h;
}
const v7 = new C3("toLowerCase");
new C3(C3);
new C3("toLowerCase");
class C10 extends C3 {
    d = v7;
    #valueOf(a12, a13, a14, a15) {
        const v20 = "replaceAll" - "replaceAll";
        try {
            Math.max(38808);
        } catch(e22) {
        }
        try {
            Math.exp(38808);
        } catch(e24) {
        }
        a12 ^ v20;
        a12 % 257;
        return v7;
    }
}
new C10();
new C10();
const v29 = new C10();
function f30() {
    return v29;
}
let v31 = 10;
for (; v31--;) {
    try {
        new Uint8ClampedArray(5);
    } catch(e36) {
    }
    try {
        new BigInt64Array(8);
    } catch(e40) {
    }
    try {
        new Float32Array(1024);
    } catch(e44) {
    }
}
