try {
    new Uint8Array(3525);
} catch(e3) {
}
try {
    new Int16Array(175);
} catch(e7) {
}
try {
    new Int32Array(1121);
} catch(e11) {
}
/[\0]x/iv;
const v13 = /Q[^a[a]zsXAxyz{93}]/gum;
const v14 = /xyz{0,1}/ymvs;
class C15 {
    static [v13];
    n(a17, a18) {
        try {
            a17 >> this;
        } catch(e20) {
        }
        return v13;
    }
    [Int32Array] = v14;
    constructor(a22, a23) {
        try {
        } catch(e24) {
        }
        [-1000.0,2.0,1e-15,-619596.3559668305];
        [-0.3945748407318028,0.646014217496618,-274515.4878052509,545.5475831466119];
        [0.7147444610804274,893.64918323711,4.0,4.0,-2.220446049250313e-16,0.6842992180219598,1000000.0];
    }
}
new C15(3525, 175);
const v29 = new C15(175, C15);
new C15(175, C15);
for (let i33 = 0; i33 < 3; i33++) {
    let v39;
    try { v39 = v29.n(175); } catch (e) {}
    try {
        C15[v14] = v39;
    } catch(e40) {
    }
}
