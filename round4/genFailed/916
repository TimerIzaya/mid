const v0 = [35488];
const v1 = [9223372036854775807,268435456,4];
const v2 = [1,-4294967297,65537,-10,-15,-992427786,5,1026765576,52694,51918];
class C3 {
    2 = v0;
    static #n(a5) {
        try {
            this[1] = v0;
        } catch(e6) {
        }
        return v1;
    }
    static f = v0;
    static a;
    [v1] = v1;
}
const v7 = new C3();
const v8 = new C3();
new C3();
class C13 extends C3 {
    [v7];
    static #g = C3;
    static {
        const v18 = v8?.[1573][Symbol?.hasInstance];
        try {
            C3.fuck(v18, -6);
        } catch(e20) {
        }
    }
}
new C13();
new C13();
const v23 = new C13();
function* f24(a25, a26, a27, a28) {
    'use strict';
    const v30 = new Map();
    v30[Symbol?.species] = a25;
    yield* v2;
    return v23;
}
f24(-727544447, C13, -9223372036854775808, -727544447);
