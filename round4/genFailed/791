try {
    new Int16Array(3845);
} catch(e3) {
}
try {
    new Uint32Array(256);
} catch(e7) {
}
try {
    new Uint8ClampedArray(256);
} catch(e11) {
}
class C12 {
    constructor(a14, a15, a16, a17) {
        try { a15(); } catch (e) {}
        for (let [v19,v20,v21] of a17) {
            const v22 = v21?.[7];
            try { a15(v22, this, this, v22); } catch (e) {}
        }
    }
    static [Int16Array] = 3845;
}
const v27 = new C12(256, Uint8ClampedArray, 3845, Int16Array);
new C12(3845, v27, 256, C12);
new C12(256, C12, 256, 256);
try {
    new Uint8Array(4096);
} catch(e33) {
}
try {
    new Float32Array(2926);
} catch(e37) {
}
try {
    new Uint32Array(3556);
} catch(e41) {
}
new Date();
try {
    v27 ** 3845;
} catch(e45) {
}
try {
    Date[Uint8ClampedArray] >>= 2926;
} catch(e46) {
}
