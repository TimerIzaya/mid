class C3 {
    static #n(a5, a6) {
        function F7(a9, a10) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.c = a9;
            } catch(e11) {
            }
            try {
                this.e = a10;
            } catch(e12) {
            }
            try {
                this.a = a5;
            } catch(e13) {
            }
        }
        new F7(F7, a6);
        new F7("4W", F7);
        const v16 = new F7("POSITIVE_INFINITY", a5);
        return v16;
    }
}
const v17 = new C3();
const v18 = new C3();
const v19 = new C3();
const v20 = [v17];
const v22 = [v18,v18,-11217,"4W",[v19,v18,v17]];
function F23(a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a25;
    } catch(e27) {
    }
    try {
        this.e = a25;
    } catch(e28) {
    }
}
const v29 = new F23(v17, v20);
new F23(v29, v18);
new F23(v17, v20);
for (let [...v35] of v22) {
    for (let v36 = 0; v36 < 32; v36++) {
        v22["p" + v36] = v36;
    }
}
try {
    new BigUint64Array(512);
} catch(e42) {
}
try {
    new BigUint64Array(9);
} catch(e46) {
}
try {
    new Float64Array(4);
} catch(e50) {
}
