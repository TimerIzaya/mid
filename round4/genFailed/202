try {
    new Int16Array(6);
} catch(e3) {
}
try {
    new Float32Array(7);
} catch(e7) {
}
try {
    new Int32Array(0);
} catch(e11) {
}
function f12(a13, a14, a15) {
    const o24 = {
        o(a17, a18, a19, a20) {
            return 7;
        },
        "a": a13,
        2: a14,
        "h": 6,
        "d": 6,
        "f": Int32Array,
        3: 6,
    };
    return o24;
}
const v25 = f12(0, 0, 0);
const v26 = f12(0, 0, 6);
const v27 = f12(7, 7, 0);
class C28 extends Int32Array {
    d = f12;
    8;
    #toString(a30, a31, a32) {
        a32[a31];
        class C34 {
            static 102279694;
            static #g = v26;
            static 64 = v27;
        }
        new C34();
        new C34();
        new C34();
        return a30;
    }
}
new C28();
new C28();
new C28();
function F41(a43, a44, a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = 7;
    } catch(e47) {
    }
    try {
        this.g = a46;
    } catch(e48) {
    }
}
new F41(v27, v25, 0, 7);
new F41(v26, C28, 0, 0);
new F41(v27, v27, 6, 0);
