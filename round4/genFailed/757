[7.551885113450059,1e-15,481.9540027990038];
const v4 = [0.5216373943126315,0.7884427043844162];
const v5 = [1000000000.0];
class C6 {
    static #m(a8, a9) {
        try {
            new Float64Array(163);
        } catch(e13) {
        }
        try {
            new Uint8ClampedArray(224);
        } catch(e17) {
        }
        try {
            new Uint8ClampedArray(1024);
        } catch(e21) {
        }
        return 9007199254740990n;
    }
}
const v22 = new C6();
new C6();
new C6();
[536870889,268435440,268435456,-34478];
[-61547,-17448,536870888];
[-65535,-2,-11,536870887];
for (let v31 = 0; v31 < 32; v31++) {
    v4["p" + v31] = v31;
}
delete v5[5];
const v36 = v5["findLast"](9007199254740990n);
try { v36(9007199254740990n, 9007199254740990n); } catch (e) {}
v22[Symbol?.isConcatSpreadable];
