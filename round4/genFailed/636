function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 9;
    } catch(e3) {
    }
    try {
        this.g = 9;
    } catch(e4) {
    }
}
new F0();
const v6 = new F0();
new F0();
[0,-19789,1073741824];
[536870887,-6824,-4096,536870889,-61082,-4096,2,-1634903048];
let v10 = [-1837129700,-5,10000,1,-256,55830,268435439,10,-55963];
try {
    new BigUint64Array(5);
} catch(e14) {
}
try {
    new Uint32Array(256);
} catch(e18) {
}
try {
    new Int16Array(10);
} catch(e22) {
}
[-2.220446049250313e-16,728902.9337053243,-2.0];
const v24 = [-1000000.0,-1.0,-2.0,1.0,753335.899501492,4.0];
const v25 = [-2.2250738585072014e-308,300.79270322836874,-1.5417438531594385,-376.58853573331965,2.2250738585072014e-308];
new BigUint64Array(v24, 5);
new Array(1000);
Object.defineProperty(v6, 2, { get: URIError, set: URIError });
delete Array?.prototype;
try { Array.isArray(v25); } catch (e) {}
const t37 = 1000;
t37[7] = 256;
try {
    v10 = v24;
} catch(e33) {
}
