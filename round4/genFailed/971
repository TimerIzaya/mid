try {
    new Int32Array(128);
} catch(e3) {
}
try {
    new BigUint64Array(3639);
} catch(e7) {
}
try {
    new Float64Array(9);
} catch(e11) {
}
function f15() {
    return 128;
}
try {
    new Uint16Array(475);
} catch(e19) {
}
try {
    new BigUint64Array(2121);
} catch(e23) {
}
try {
    new Int8Array(1769);
} catch(e27) {
}
for (let v28 = 0; v28 < 32; v28++) {
    const t28 = 128;
    t28["p" + v28] = v28;
}
new BigUint64Array(-394765335, 128, 128);
try {
    new Uint32Array(66);
} catch(e35) {
}
try {
    new Uint8Array(2198);
} catch(e39) {
}
try {
    new Uint8Array(4);
} catch(e43) {
}
