const v0 = [];
class C1 {
    static {
        const v3 = v0[this];
        try {
            ~v3;
        } catch(e5) {
        }
        for (let v6 = 0; v6 < 32; v6++) {
            v3["p" + v6] = v6;
        }
    }
}
new C1();
const v10 = new C1();
const v11 = new C1();
function f12() {
    return v11;
}
const v13 = [256,2147483649,5,536870912,-2137659757,65536,65536,-4294967295,5,1174929799];
[-5,4,10000,1,-1401103305,1073741823];
const v15 = [536870912,1000,1357096751,517946237,4294967296,-117506859,-4294967297,1000];
class C16 {
    e = v11;
    static #f;
    valueOf(a18, a19, a20) {
        try {
            v15 & v10;
        } catch(e22) {
        }
        return v11;
    }
    [-2] = v13;
    268435456 = v13;
}
new C16();
new C16();
const v25 = new C16();
v0[C16];
class C29 extends v15?.constructor {
    static #d;
    [v25];
}
const v30 = new C29();
try {
    v30 && v25;
} catch(e32) {
}
