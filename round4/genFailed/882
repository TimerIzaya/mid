const v0 = [];
try {
    new Uint32Array(512);
} catch(e4) {
}
try {
    new Int8Array(2);
} catch(e8) {
}
try {
    new Uint8Array(223);
} catch(e12) {
}
class C13 extends Uint8Array {
    static [223] = v0;
    b = Uint32Array;
    #toString(a15, a16) {
        try {
            v0[Uint8Array] = this;
        } catch(e17) {
        }
        return a16;
    }
    [Int8Array] = 512;
}
new C13();
const v19 = new C13();
new C13();
class C22 extends v19?.constructor {
    128 = Uint32Array;
    1373 = Uint32Array;
}
new C22();
const o29 = {
    "maxByteLength": 2247,
};
const v31 = new ArrayBuffer(2247, o29);
try {
    new Uint8Array(v31);
} catch(e34) {
}
