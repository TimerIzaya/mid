function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 536870912;
    } catch(e6) {
    }
    try {
        this.c = a5;
    } catch(e7) {
    }
}
const v8 = new F3(1034090168);
const v9 = new F3(536870912);
const v10 = new F3(1034090168);
function f11(a12, a13, a14, a15) {
    const o28 = {
        __proto__: a13,
        1914229993: 0,
        ...a15,
        "f": a13,
        9: 0,
        m(a17, a18, a19) {
            try {
                Math.acos(this);
            } catch(e23) {
            }
            try {
                Math.pow(this, 536870887);
            } catch(e25) {
            }
            try {
                Math.cbrt(536870887);
            } catch(e27) {
            }
            return a17;
        },
    };
    return o28;
}
const v29 = f11(1034090168, v8, v8, v10);
const v31 = f11(0, v10, f11(0, v10, v9, v29), v29);
try {
    v31.toString = f11;
} catch(e32) {
}
delete v29[v10];
v10 === v9;
/[(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10]/imv;
/[2h\P{scx=Greek}]/gys;
/(5Cfoo[z]*)/ydv;
try {
    v31.f = 1034090168;
} catch(e38) {
}
