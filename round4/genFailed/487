function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 1188036785;
    } catch(e3) {
    }
    try {
        this.g = 1188036785;
    } catch(e4) {
    }
    try {
        this.f = 1188036785;
    } catch(e5) {
    }
}
new F0();
new F0();
const v8 = new F0();
try {
    new BigUint64Array(9);
} catch(e12) {
}
try {
    new Int16Array(4096);
} catch(e16) {
}
try {
    new Float32Array(5);
} catch(e20) {
}
for (let v21 = 0; v21 < 32; v21++) {
    v8["p" + v21] = v21;
}
class C24 extends Float32Array {
    7 = 9;
    [BigUint64Array] = Float32Array;
    b;
}
new C24();
new C24();
new C24();
