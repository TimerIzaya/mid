const v0 = [];
let v2 = "16092";
function f7() {
    return "e";
}
class C8 extends f7 {
    ["h"] = f7;
    o(a10, a11) {
        const v12 = super.slice(v0, v2);
        try {
            const t10 = "4096";
            t10.__proto__ = "4096";
        } catch(e13) {
        }
        return v12;
    }
    7 = "10";
    [f7] = "e";
    b = v2;
    [v0] = f7;
}
new C8();
new C8();
const v16 = new C8();
[v2] = v16;
const v20 = (a21, a22, a23) => {
    try { v2(v0, 2147483648, "resize"); } catch (e) {}
    v0?.length;
    Object.defineProperty("h", 8, { configurable: true, get: f7, set: f7 });
    a23[Symbol?.toPrimitive] = a21;
    return v0;
};
