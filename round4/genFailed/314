let v3 = [0.11395663576753101,0.3154377397613606,-5.0,-0.0,5.1786798758108184e+306,-3.448416438706985e+306,1.7976931348623157e+308,-1.456644295699392e+308,-2.2250738585072014e-308];
[363280.70728309336,1e-15,5.730160424621351,1.0,967451.7601936434];
[-4.0,-2.220446049250313e-16,3.0,4.46022008652702];
new Map();
const v8 = -Infinity;
class C11 extends Map {
    constructor(a13, a14) {
        super(v3);
        try {
            a13[v8] %= -65537;
        } catch(e15) {
        }
    }
    static #n(a17, a18, a19) {
        try {
            v3.#n();
        } catch(e21) {
        }
        return a18;
    }
}
new C11(Map, NaN);
new C11(C11, v8);
const v24 = new C11(-65537, NaN);
const v25 = `
    let {"a":v26,"c":v27,"size":v28,} = v24;
    v3++;
    try {
        Math.log10(-4294967297);
    } catch(e34) {
    }
    try {
        Math.expm1(v3);
    } catch(e36) {
    }
    try {
        Math.sqrt(v26);
    } catch(e38) {
    }
`;
eval(v25);
