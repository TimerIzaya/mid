let v2 = 128;
class C3 {
    constructor(a5, a6) {
        for (let v7 = 0; v7 < 32; v7++) {
            this["p" + v7] = v7;
        }
    }
    static e = 2;
    #a;
    42;
}
new C3(v2, v2);
const v11 = new C3(-1516189870, -1516189870);
const v12 = new C3(v2, -1516189870);
class C13 {
    #d = v12;
    268435439;
    static get h() {
        try {
            v2 *= -1516189870;
        } catch(e15) {
        }
        return this;
    }
    #g = 2;
}
const v16 = new C13();
new C13();
new C13();
let v19 = new C13();
try {
    v19 = C3;
} catch(e20) {
}
throw v11;
try { v16(); } catch (e) {}
C3?.[2];
const v24 = Symbol?.iterator;
const o33 = {
    [v24]() {
        let v26 = 10;
        const o32 = {
            next() {
                v26--;
                const v30 = v26 == 0;
                const o31 = {
                    "done": v30,
                    "value": v26,
                };
                return o31;
            },
        };
        return o32;
    },
};
