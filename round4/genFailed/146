const v1 = new WeakMap();
try {
    new Uint8ClampedArray(4);
} catch(e5) {
}
try {
    new Uint8Array(6);
} catch(e9) {
}
try {
    new BigInt64Array(204);
} catch(e13) {
}
class C17 {
    constructor(a19, a20) {
        try {
            super.flatMap();
        } catch(e22) {
        }
    }
    65536 = BigInt64Array;
    #m(a24, a25, a26) {
        [0.0,-1e-15,1.0,-393927.5328388086,485998.00346940965,2.0,-1.6887695662904331e+308,-4.353456854008342,1000000000.0];
        const v28 = [1000000.0,-590.1224023832408,7.156793276895325,-73928.62757790368,7.743705635766169,-1e-15];
        [-371070.26134776813,170572.02275943384];
        a24 >>> a24;
        !v28 ** v28;
        return v1;
    }
}
const v36 = new C17(BigInt64Array, 6);
new C17(v36, 4);
new C17(-942984528, 6);
const v39 = new BigInt64Array(-1073741824, 6);
new C17(v39, -942984528);
let v41 = 0;
do {
    v41++;
} while (v41 < 10)
