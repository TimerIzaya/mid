class C3 {
    static toString(a5) {
        try {
            super.f = a5;
        } catch(e6) {
        }
        return a5;
    }
    constructor(a8, a9) {
        try {
            this ^ this;
        } catch(e11) {
        }
    }
    static [536870888] = 536870888;
}
const v12 = new C3(7, 7);
const v13 = new C3(536870888, 536870888);
const v14 = new C3(-1654301826, 536870888);
class C15 extends C3 {
    c;
    static {
        new C3(7, 7);
        try {
        } catch(e18) {
        }
    }
    static [v14] = 536870888;
    #m(a20, a21, a22) {
        try {
            super[v12] = v13;
        } catch(e23) {
        }
        function f24() {
            return -1654301826;
        }
        return a20;
    }
}
new C15();
new C15();
new C15();
try {
    new Uint8Array(109);
} catch(e31) {
}
try {
    new Int8Array(1024);
} catch(e35) {
}
try {
    new Uint8ClampedArray(1644);
} catch(e39) {
}
throw Uint8Array;
const v40 = v13 in C3;
try {
    v12[9] = v40;
} catch(e44) {
}
const o47 = {
    "maxByteLength": 536870912,
};
const v49 = new SharedArrayBuffer(54, o47);
try {
    new Int8Array(v49);
} catch(e52) {
}
