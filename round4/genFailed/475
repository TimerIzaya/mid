try {
    new Uint32Array(7);
} catch(e3) {
}
try {
    new BigUint64Array(64);
} catch(e7) {
}
try {
    new Int16Array(230);
} catch(e11) {
}
class C12 extends BigUint64Array {
    #toString(a14, a15, a16, a17) {
        try {
            super[this] = Int16Array;
        } catch(e18) {
        }
        return a15;
    }
    15;
    constructor(a20, a21, a22, a23) {
        super(a21);
        let [v24] = this;
        v24?.[64];
        const o26 = {
            __proto__: v24,
            "g": this,
        };
        try {
            new Int32Array(257);
        } catch(e30) {
        }
        try {
            new BigInt64Array(3918);
        } catch(e34) {
        }
        try {
            new BigInt64Array(9);
        } catch(e38) {
        }
    }
}
const v39 = new C12(64, 64, 230, 230);
new C12(230, 7, 7, 7);
new C12(230, 7, 64, 230);
const v42 = [-39.2750367638896,3.0,0.3428331069004025,0.7721335782611602,0.7183976230720538];
[NaN,-1000.0,-1000000.0,0.1662225068923373];
const v44 = [-1.2277999445527792e+308,6.716506544697712e+307,195.28410150570812,-1000000000000.0];
/tM3p1a{0,1}?QO8foo(?=bar)baz/idv;
const v46 = /a(?!b)[\w|\d(ab|cde)\1]/v;
/Ga+bL010*/uys;
try { v46(v39); } catch (e) {}
for (const v49 of v42) {
    let {"c":v50,"e":v51,"length":v52,} = v44;
    [7.520794309913967,3.0,-1000.0,-9.634467606505302,-3.0,130.56747749149554];
    [1e-15,-652.0906538038835,1.6257060070939568e+308,5.0,-1e-15,5.0,-2.0,NaN];
    [Infinity,-362.73682832397355,-2.0,250.4153714082829,-444131.0513972647,1000.0,2.2250738585072014e-308,-3.0,134.78017132353352,-5.0];
}
let v57 = 10;
const v59 = v57--;
try {
    Math.asinh(v57);
} catch(e61) {
}
const v62 = v59 << v46;
try {
    Math.cbrt(v62);
} catch(e64) {
}
+v46;
v62 >> v62;
