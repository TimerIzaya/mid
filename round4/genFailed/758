class C3 {
    constructor(a5) {
        try { a5(a5); } catch (e) {}
        delete this[512];
        a5[Symbol?.hasInstance] = a5;
    }
    static 3;
    #n(a11) {
        let v12;
        try { v12 = new a11(a11, 8, a11); } catch (e) {}
        try {
            const t11 = "sin";
            t11.toString = v12;
        } catch(e13) {
        }
        return -4.0;
    }
}
const v14 = new C3(-4.0);
const v15 = new C3(C3);
const v16 = new C3(v15);
class C17 extends C3 {
    constructor(a19, a20, a21) {
        super(8);
    }
    [-1];
    static set g(a26) {
        try {
            super[C3] = C3;
        } catch(e27) {
        }
    }
}
new C17(C17, v14, v15);
const v29 = new C17(v16, v14, C17);
new C17(C3, v29, v29);
const v31 = [-256,-20242,10,536870889,-9,4,-1096521715];
const v32 = [64,396733664,11450,4096,13922,2872,1,-372043595];
[-12,-9223372036854775807,-4294967296,-9223372036854775808];
[-4.0,v16,v14,...v31,...v32];
typeof -4.0 === "symbol";
%VerifyType(-4.0);
class C38 extends C17 {
    11;
    static #g;
    static #a = "symbol";
}
new C38();
new C38();
new C38();
