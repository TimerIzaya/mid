const v1 = new Set();
try {
    new Float32Array(127);
} catch(e8) {
}
try {
    new BigInt64Array(1820);
} catch(e12) {
}
try {
    new Uint16Array(10);
} catch(e16) {
}
class C17 extends BigInt64Array {
    1073741824;
    #c;
    c;
    m(a19, a20, a21) {
        ("sticky")[a19];
        try {
        } catch(e23) {
        }
        return Uint16Array;
    }
    6 = Uint16Array;
    4294967296;
    7 = v1;
    [1820];
}
new C17();
const v25 = new C17();
new C17();
let v27;
try { v27 = C17.valueOf(v25, v1, "sticky"); } catch (e) {}
if (v27) {
    try {
        const t36 = "f";
        t36[268435456] = "floor";
    } catch(e28) {
    }
} else {
    const v29 = C17?.__proto__;
    try {
        v29[Float32Array] = v29;
    } catch(e30) {
    }
}
