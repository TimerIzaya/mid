const v0 = [];
class C4 {
    [-16];
    #d;
    static #m(a6, a7) {
        try { a6(); } catch (e) {}
        try {
            this.#d = v0;
        } catch(e9) {
        }
        try {
            this & -536870912;
        } catch(e11) {
        }
        return v0;
    }
}
new C4();
const v13 = new C4();
let v14 = new C4();
class C15 extends C4 {
    set a(a17) {
        new Date();
    }
    constructor(a21, a22, a23, a24) {
        super();
        function F25(a27, a28, a29) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = v13;
            } catch(e30) {
            }
        }
        new F25(this, a21, a22);
        const v32 = new F25(this, this, a23);
        new F25(v32, v32, a24);
    }
}
new C15(-16, -536870912, -16, -536870912);
const v35 = new C15(268435456, -536870912, -536870912, -16);
new C15(268435456, -16, -16, -536870912);
268435440 | v14;
try {
    Math.floor(-9223372036854775808);
} catch(e45) {
}
const v46 = v14++;
try {
    Math.asinh(v35);
} catch(e48) {
}
+v46;
19393n ^ v46;
