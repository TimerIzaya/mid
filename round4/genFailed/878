function f0() {
    const o4 = {
        [8]: 2.2250738585072014e-308,
        ...2.2250738585072014e-308,
        "g": 2.2250738585072014e-308,
        ...0,
        [0]: 2.2250738585072014e-308,
        __proto__: 0,
        [2.2250738585072014e-308]: 8,
        "e": 0,
        "f": 2.2250738585072014e-308,
        "c": 2.2250738585072014e-308,
        "b": 0,
        "d": 0,
    };
    return o4;
}
const v5 = f0();
const v6 = f0();
const v7 = f0();
try {
    new Uint16Array(4);
} catch(e11) {
}
try {
    new Uint8Array(1784);
} catch(e15) {
}
try {
    new Int8Array(82);
} catch(e19) {
}
function f20() {
    return v5;
}
try {
    new Uint32Array(6);
} catch(e24) {
}
try {
    new Uint8Array(129);
} catch(e28) {
}
try {
    new Float32Array(1901);
} catch(e32) {
}
const v33 = f0();
for (const v34 of v6) {
    try {
        -f0;
    } catch(e36) {
    }
}
new Int8Array(Uint8Array, 1784, 82, Float32Array, 1784);
function F38(a40, a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a42;
    } catch(e44) {
    }
    try {
        this.e = 1784;
    } catch(e45) {
    }
}
new F38(v7, v5, 82, 82);
new F38(v7, v33, 6, 1901);
new F38(v5, v5, 6, 6);
