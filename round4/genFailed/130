function f0() {
    let v3 = -8.094893358354957;
    const o13 = {
        ["MAX_SAFE_INTEGER"]: v3,
        toString(a5) {
            try {
                super.g -= a5;
            } catch(e6) {
            }
            return this;
        },
        m(a8, a9) {
            try {
                super[a8] = v3;
            } catch(e10) {
            }
            try {
                v3 = a9;
            } catch(e12) {
            }
            return v3;
        },
    };
    return o13;
}
f0();
f0();
const v16 = f0();
try {
    new Int32Array(16);
} catch(e20) {
}
try {
    new Int8Array(127);
} catch(e24) {
}
try {
    new Uint16Array(16);
} catch(e28) {
}
let v33 = "construct";
Object.defineProperty(v33, f0, { get: f0, set: f0 });
%VerifyType(Int8Array);
try {
    127 | 1e-15;
} catch(e36) {
}
({"b":v33,} = v16);
-8.165688054140682e+307;
+127;
+-18061;
try {
    Math.asinh(8.165688054140682e+307);
} catch(e43) {
}
