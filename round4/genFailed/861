const v0 = [];
let v1 = 1713;
try {
    new Uint8Array(v1);
} catch(e4) {
}
try {
    new Float32Array(2167);
} catch(e8) {
}
try {
    new BigInt64Array(1063);
} catch(e12) {
}
class C13 extends BigInt64Array {
    static #d;
    p(a15, a16) {
        try {
            super[BigInt64Array] = 1063;
        } catch(e17) {
        }
        return 2167;
    }
    [1063] = Float32Array;
    static [2167] = 1063;
    [v0];
}
const v18 = new C13();
new C13();
const v20 = new C13();
typeof v20 === "object";
try {
    v1++;
} catch(e25) {
}
const v27 = new Float32Array(v18, v1);
[...v0,v20,...v27,...v20,v18];
