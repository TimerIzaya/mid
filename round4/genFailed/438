const v3 = /O\p{General_Category=Decimal_Number}G/dv;
const v4 = /6hd?/gmdv;
const v5 = /\1(a)\xf0\x9f\x92\xa9*/uys;
function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a11;
    } catch(e12) {
    }
}
new F6(v4, 5n, -2115884342n, 5n);
new F6(v4, 11n, -2115884342n, -2115884342n);
const v15 = new F6(v3, 11n, 11n, 5n);
const v16 = [5n,v3,v5,5n,v15];
const v17 = [5n];
[v17,v5,v17,5n,11n];
try {
    F6 ^= F6;
} catch(e19) {
}
try { v16.concat(v3); } catch (e) {}
function f21(a22, a23, a24) {
    let v28 = +-947052468;
    let v29 = +11n;
    --v29;
    try {
        Math.fround(v29);
    } catch(e32) {
    }
    v29 / v28;
    try {
        Math.cosh(11n);
    } catch(e35) {
    }
    v28++;
    return a24;
}
f21(-2115884342n, v17, 5n);
