class C3 {
    [-2.2250738585072014e-308] = "valueOf";
    get a() {
        try {
            const t4 = "valueOf";
            t4[-2.2250738585072014e-308] = "valueOf";
        } catch(e5) {
        }
        return -256;
    }
    static #valueOf(a7, a8) {
        try {
            /[(?:a+)+[^a\w]]/imvs;
            /(?<a>)*/igmdv;
            /OTa{1,2}?\1111/ys;
        } catch(e12) {
            try {
                e12 ** e12;
            } catch(e14) {
            }
        }
        return this;
    }
}
const v15 = new C3();
const v16 = new C3();
const v17 = new C3();
function f18() {
    return -256;
}
function f19(a20, a21, a22) {
    const o40 = {
        [a21](a24, a25, a26, a27) {
            try {
                new Float64Array(3699);
            } catch(e31) {
            }
            try {
                new Uint8Array(2);
            } catch(e35) {
            }
            try {
                new Float64Array(0);
            } catch(e39) {
            }
            return f18;
        },
    };
    return o40;
}
const v41 = f19(C3, v17, v15);
f19(v41, v41, f18);
const v43 = f19(v15, v16, "valueOf");
function f44() {
    return v43;
}
try {
    new Float32Array(4096);
} catch(e48) {
}
try {
    new Int16Array(129);
} catch(e52) {
}
try {
    new Float32Array(2173);
} catch(e56) {
}
try {
    Math.atanh(Float32Array);
} catch(e60) {
}
+2173;
try {
    Math.floor(v43);
} catch(e63) {
}
+v43;
try {
    Math.abs(2173);
} catch(e66) {
}
