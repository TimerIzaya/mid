const v0 = /z/iums;
const v1 = /s(x)(x)(x)\3*/gum;
const v2 = /Nrl\x01/gmv;
try {
    new Uint16Array(1);
} catch(e6) {
}
try {
    new Float64Array(0);
} catch(e10) {
}
try {
    new Float32Array(3568);
} catch(e14) {
}
function f15() {
    return v1;
}
try {
    new BigUint64Array(973);
} catch(e19) {
}
try {
    new Float32Array(146);
} catch(e23) {
}
try {
    new Float32Array(128);
} catch(e27) {
}
const v28 = new Float32Array(v0, 3568, 1);
const v30 = [f15];
Reflect.apply(v28?.filter, v2, v30);
const o33 = {
    __proto__: v30,
    ...v30,
    "h": BigUint64Array,
    7: 146,
};
