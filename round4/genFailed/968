const v0 = /d(\1a)/gmvs;
const v1 = /6+/igs;
const v2 = /a*?/igv;
function f3(a4) {
    const o19 = {
        __proto__: v2,
        3065: v1,
        set f(a6) {
            try {
                new Uint8ClampedArray(0);
            } catch(e10) {
            }
            try {
                new Int16Array(2208);
            } catch(e14) {
            }
            try {
                new BigUint64Array(2);
            } catch(e18) {
            }
        },
    };
    return o19;
}
const v20 = f3(v1);
const v21 = f3(v0);
let v22 = f3(v0);
function f23(a24, a25, a26, a27) {
    const o33 = {
        "a": v2,
        o(a29, a30, a31) {
            try {
                super[a30] = v20;
            } catch(e32) {
            }
            return v2;
        },
        "d": v1,
        ...v2,
        __proto__: v2,
        "c": v2,
    };
    return o33;
}
let v36 = f23(f23(f23, f23, f23(v0, v0, v22, v22), v20), v2, v1, v21);
[v36];
[v22];
[v2];
try {
    Math.cbrt(v36);
} catch(e43) {
}
v22 << f3;
const v46 = v22 >>> v36--;
try {
    Math.asin(v46);
} catch(e48) {
}
v22++ << f3;
