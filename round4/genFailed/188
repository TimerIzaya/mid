const v0 = [-1.0,530784.0550584355,-0.0,-0.0];
const v1 = [-1000000000.0,-1.3202710584984854e+307,566703.1373369982,1000000000.0,1.0,-1.7976931348623157e+308,0.228025563168743,-0.7167191268750805];
const v2 = [-2.0,-465796.4722589918,7.087094986783204e+307,-0.0,3.0,1000000000.0,-0.0,1000000000.0,6.084055186708599e+307];
function f3(a4, a5) {
    const o11 = {
        "a": a5,
        [a5]: v2,
        "f": v0,
        "b": a5,
        "d": v1,
        toString(a7, a8) {
            try {
                this & a4;
            } catch(e10) {
            }
            return a8;
        },
        "c": v2,
        __proto__: v2,
    };
    return o11;
}
let v12 = f3(v0, v1);
f3(v2, v2);
const v14 = f3(v2, v2);
const v15 = /(?:ab|cde)/ydvs;
/G(?:a+)*/iymdv;
const v17 = /[\c!]/ids;
try {
    new Float32Array(5);
} catch(e21) {
}
try {
    new Int16Array(189);
} catch(e25) {
}
try {
    new BigUint64Array(788);
} catch(e29) {
}
for (const v30 in v14) {
    v14?.f;
    /a\sc/igd;
    /oa(?!b)a(?!b)xyz{1,}\xed\xa0\x80/ydvs;
    /ysa|bc?/uyds;
}
v15 instanceof BigUint64Array;
try { v17.compile(f3); } catch (e) {}
new BigUint64Array(v1, 5);
const v41 = ~(v12 || v12);
try {
    Math.max(1141796706);
} catch(e43) {
}
try {
    Math.sinh(1141796706);
} catch(e45) {
}
try {
    Math.log2(v41);
} catch(e47) {
}
v12++;
