try {
    new BigInt64Array(128);
} catch(e3) {
}
try {
    new Int16Array(0);
} catch(e7) {
}
try {
    new Uint8Array(241);
} catch(e11) {
}
const v15 = ["g",BigInt64Array,Int16Array,"undefined",241];
const v16 = [Uint8Array,"undefined",Uint8Array,"-65535","-65535"];
const v17 = [Int16Array,"g",Int16Array,"-65535"];
Object.defineProperty("g", 1, { configurable: true, enumerable: true, value: v17 });
new Uint8Array(v15, 128, 0);
const v19 = 128 instanceof BigInt64Array;
for (let v20 = 0; v20 < 74; v20++) {
    const v21 = ("-65535")[v20];
    let v22;
    try { v22 = v21(v20, Int16Array, v20, v16, v20); } catch (e) {}
    %VerifyType(v22);
    try { v16.indexOf(v19); } catch (e) {}
}
try {
    v17[1] += 128;
} catch(e24) {
}
