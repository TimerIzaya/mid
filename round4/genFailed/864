let v0 = -4294967297n;
function f3(a4) {
    const o12 = {
        valueOf(a6) {
            try {
                a4 = v0;
            } catch(e7) {
            }
            return 281453537n;
        },
        n(a9) {
            try {
                -9007199254740990n - this;
            } catch(e11) {
            }
            return -9007199254740990n;
        },
    };
    return o12;
}
const v13 = f3(281453537n);
const v14 = f3(-9007199254740990n);
const v15 = f3(281453537n);
class C16 {
    constructor(a18, a19, a20, a21) {
        try {
            v14.n(v15, a18, a19, a20);
        } catch(e23) {
        }
    }
    [v14];
    static a;
    #d;
    e = 281453537n;
    71;
    static 3708 = 281453537n;
    static #b = v15;
}
new C16(-9007199254740990n, f3, v13, v14);
const v25 = new C16(v0, v15, v0, v13);
new C16(v25, v25, v15, v25);
[-872845417];
let v28 = [-27785,2147483649,2147483649,65536,57950,-6,-1228719260,9];
const v30 = C16[[6,-65535,2147483648,-4,-12,1073741824,-1]];
try {
    v0 %= v30;
} catch(e31) {
}
function f32(a33, a34, a35) {
    function f37(a38) {
        f3(v0);
        %PrepareFunctionForOptimization(f3);
        f3(v0);
        f3(v0);
        %OptimizeFunctionOnNextCall(f3);
        f3(v0);
    }
    this.onmessage = f37;
    try {
        v28 = a35;
    } catch(e43) {
    }
}
const v46 = ["function",v13,281453537n];
const o47 = {
    "arguments": v46,
    "type": "function",
};
new Worker(f32, o47);
