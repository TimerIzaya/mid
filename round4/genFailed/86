try {
    new BigUint64Array(256);
} catch(e3) {
}
try {
    new Uint32Array(3);
} catch(e7) {
}
try {
    new Int32Array(225);
} catch(e11) {
}
const v12 = [0.5793825272537881,-2.220446049250313e-16,2.0,1.856064319714047e+307,1000000000.0,-0.0,-1.0,-673.4864811998384,373.3111883394495];
[-172.57462073267834,-1.0823725391743864,-1000000.0,-0.0,3.6679672319606595,8.583952937311135,-1000000000000.0,-46278.19991050637];
const v14 = [479.90790881047997,-510261.4963350531,-420.73206594727776,807029.4140804026];
class C15 {
    static #p(a17, a18) {
        function f19() {
            return v14;
        }
        return v14;
    }
    static [3] = 256;
    86 = 256;
    [256];
    static f = BigUint64Array;
}
const v20 = new C15();
const v21 = new C15();
const v22 = new C15();
const v23 = v12[Uint32Array];
let {"c":v24,} = v22;
try {
    v20[5] = v23;
} catch(e25) {
}
new Int32Array(v21, 3, v23);
const v28 = Symbol?.matchAll;
v23[v28] = v28;
