const v0 = [];
function f1() {
    return v0;
}
const v2 = [1000000.0];
const v3 = [-5.0,3.5076232931764165e+307,-1.0];
[1000000000.0,-287661.58074944664,-2.220446049250313e-16,5.49686016538111e+307,-3.876441557136621,8.530884057370749e+307,Infinity,-2.320074585912137e+307,261785.66222363524,63.651763435341536];
class C8 extends f1 {
    static c;
    #toString(a10, a11) {
        ({"g":a10,"h":a11,} = a10);
        const v12 = ("2Wrg")?.[-1];
        try { v12(v12, v2); } catch (e) {}
        --a10;
        try {
            Math.fround(65535);
        } catch(e18) {
        }
        65535 >>> a10;
        try {
            Math.log(a10);
        } catch(e21) {
        }
        return 65535;
    }
}
new C8();
const v23 = new C8();
new C8();
for (const v25 of v2) {
    Object.defineProperty(v2, v25, { get: f1, set: f1 });
    v23["reduceRight"](v25, f1);
    try {
        v25 < v3 ? v25 : v3;
    } catch(e30) {
    }
}
