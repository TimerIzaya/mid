class C3 {
    static e;
    static #c = "number";
    constructor(a5) {
        const o18 = {
            valueOf() {
                let v6 = this;
                super.a;
                -206809213 & 268435440;
                v6++;
                ~-206809213;
                try {
                    Math.sin(a5);
                } catch(e15) {
                }
                try {
                    Math.sqrt(2147483649);
                } catch(e17) {
                }
                return -206809213;
            },
        };
    }
}
const v19 = new C3(-206809213);
const v20 = new C3(v19);
new C3(v20);
class C25 extends C3 {
    static 153 = "getInt16";
    static set h(a27) {
        try {
            super.valueOf(this, v20);
        } catch(e29) {
        }
        -64;
        const v34 = 64 << this;
        try {
            Math.atanh(v34);
        } catch(e36) {
        }
    }
}
new C25();
new C25();
const v39 = new C25();
const v40 = v39?.__proto__;
[139.39211110597716,685746.548023066,..."getInt16"] instanceof v40;
try {
    Math.cbrt(65536);
} catch(e47) {
}
try {
    Math.max(139.39211110597716);
} catch(e49) {
}
try {
    Math.sin(v19);
} catch(e51) {
}
try {
    Math.pow(139.39211110597716, 139.39211110597716);
} catch(e53) {
}
try {
    Math.cos(139.39211110597716);
} catch(e55) {
}
