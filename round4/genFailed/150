const v0 = [];
[0.5645041370542379,-9.311096557337631,7.188531718647116];
const v2 = [-4.7861640569144475e+306,2.0,0.13236151926963324,-Infinity];
const v3 = [1000.0,-830.2671591467001,1000000.0,2.8453506745288944e+306,0.8523614958444684];
try {
    new Int8Array(81);
} catch(e7) {
}
try {
    new Uint8ClampedArray(684);
} catch(e11) {
}
try {
    new Int32Array(2729);
} catch(e15) {
}
function f16() {
    return 2729;
}
class C17 {
    static [v3] = v3;
    static {
        for (let v19 = 0; v19 < 32; v19++) {
            this["p" + v19] = v19;
        }
    }
    #toString(a23, a24, a25) {
        function f26() {
            return a24;
        }
        return v0;
    }
}
new C17();
new C17();
const v29 = new C17();
new Int8Array(...v2, Uint8ClampedArray, Uint8ClampedArray, 81);
const v34 = -1407568719;
try {
    Math.pow(v34, v29);
} catch(e36) {
}
try {
    Math.abs(1407568719);
} catch(e38) {
}
1407568719 / v34;
!v29;
try {
    Math.sin(1407568719);
} catch(e42) {
}
try {
    Math.abs(v34);
} catch(e44) {
}
