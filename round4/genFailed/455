const v2 = -Infinity;
class C3 {
    #g;
    [v2] = v2;
    static [1343700435] = v2;
    static [v2];
    get d() {
        function f5(a6) {
            return a6;
        }
        class C7 extends f5 {
            #c;
        }
        return 1343700435;
    }
}
const v8 = new C3();
const v9 = new C3();
const v10 = new C3();
function F11(a13, a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a15;
    } catch(e16) {
    }
    try {
        this.d = v10;
    } catch(e17) {
    }
}
const v18 = new F11(v9, v8, v9);
const v19 = new F11(v8, v18, v18);
new F11(v8, v8, v8);
/S[\cZ]*/igymvs;
const v25 = /a\D/igymdvs;
const v26 = /ha\sw(?:ab|cde)/u;
let v27;
try { v27 = v26(C3, v25, 65535n, v26, v26, v19); } catch (e) {}
for (const v28 of v27) {
    -2147483648 - -1380905456;
    const v37 = +-2147483648;
    try {
        Math.sign(-2147483648);
    } catch(e39) {
    }
    -1000000.0 * v37;
    (-1000000.0) ** -2147483648;
}
