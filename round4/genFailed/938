try {
    new Uint16Array(3);
} catch(e3) {
}
try {
    new BigUint64Array(10);
} catch(e7) {
}
try {
    new Float64Array(255);
} catch(e11) {
}
try {
    new BigInt64Array(3802);
} catch(e15) {
}
try {
    new Int32Array(65);
} catch(e19) {
}
try {
    new Int16Array(7);
} catch(e23) {
}
class C24 extends Int16Array {
    constructor(a26, a27, a28) {
        super(a27);
        class C29 {
            static h;
            b = this;
            static f;
        }
        new C29();
        new C29();
        new C29();
    }
    [65];
    static f = BigUint64Array;
    [Int16Array] = Int16Array;
    [BigInt64Array] = Int16Array;
}
new C24(3802, 3802, 7);
new C24(7, 3, 10);
const v35 = new C24(65, 255, 65);
const o36 = {
};
try {
    o36.e = 255;
} catch(e37) {
}
try {
    const o38 = {
    };
    o38.e = 255;
    o38.b = Int32Array;
} catch(e39) {
}
try {
    const o40 = {
    };
    o40.e = 255;
    o40.b = Int32Array;
    o40.f = v35;
} catch(e41) {
}
try {
    const o42 = {
    };
    o42.e = 255;
    o42.b = Int32Array;
    o42.a = 65;
} catch(e43) {
}
