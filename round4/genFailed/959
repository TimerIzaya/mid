function f0() {
}
new WeakMap();
try {
    new Int8Array(16);
} catch(e9) {
}
try {
    new Int32Array(4096);
} catch(e13) {
}
try {
    new BigInt64Array(4);
} catch(e17) {
}
[210139.9786405866,-960371.7766138315,1000000000.0,-0.0,-1e-15,-1000000000.0,-1.7976931348623157e+308];
const v19 = [-1e-15,-2.2250738585072014e-308,-7.256162064155962,-2.220446049250313e-16];
const v20 = [-1000000.0,-2.0,723617.5784514761,460679.4229302835,Infinity];
const v21 = new BigInt64Array(v20, 16, 1795);
v21?.byteOffset;
let v23 = 10;
for (; v23--;) {
    Object.defineProperty(v20, v19, { configurable: true, enumerable: true, set: f0 });
    function F25(a27, a28, a29, a30) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.g = Int8Array;
        } catch(e31) {
        }
    }
    new F25(v19, v19, -25739, Int32Array);
    const v33 = new F25(v19, 4096, 5, Int32Array);
    new F25(v20, F25, 5, v33);
}
