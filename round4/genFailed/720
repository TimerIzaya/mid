try {
    new Int32Array(4);
} catch(e3) {
}
try {
    new BigInt64Array(3934);
} catch(e7) {
}
try {
    new Float64Array(5);
} catch(e11) {
}
const v12 = [1073741824,41604];
[2,-14,-1392823894,-256,4,-1073741824,268435441,4096,-1073741824];
const v14 = [2018802023,0,5,-9007199254740991,3,65537,-65535,19484];
class C15 extends Int32Array {
    static 6;
    166 = BigInt64Array;
    static toString(a17, a18) {
        with (this) {
        }
        const v23 = Int32Array & -1;
        const v24 = -1 >> v23;
        try {
            Math.cbrt(v24);
        } catch(e26) {
        }
        v23 << Int32Array;
        return a18;
    }
}
new C15();
const v29 = new C15();
const v30 = new C15();
[4,Float64Array,v30,v29];
const v32 = [v12,5,v29];
[[4,v30,v32,[BigInt64Array,[v32,v29,v14,v29]]]];
function f37(a38, a39, a40) {
    function f42(a43) {
        [-375792.11261640454,-1.6019188286997405e+308,-0.5411244679100946,-5.0,0.36220734534298926,-5.0];
        [-5.748927327556144e+307,1000000000.0,9.950496812311975,2.2250738585072014e-308,-599.4195122875872,454.6243670958013,1e-15,-2.220446049250313e-16,-0.0,926655.4903747428];
        [-2.220446049250313e-16,1.0,-871730.8443602016,-1.0,5.0,2.0,2.734935105431274e+307,456906.6277528596];
    }
    this.onmessage = f42;
    try {
        a39 >> 5;
    } catch(e48) {
    }
}
const v51 = [f37,"function",v12];
const o52 = {
    "arguments": v51,
    "type": "function",
};
new Worker(f37, o52);
