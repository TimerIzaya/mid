function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 129;
    } catch(e3) {
    }
    try {
        this.b = 129;
    } catch(e4) {
    }
}
const v5 = new F0();
new F0();
const v7 = new F0();
class C8 extends F0 {
    constructor(a10) {
        let v9 = this;
        super();
        try {
            Math.exp(1707);
        } catch(e14) {
        }
        try {
            Math.expm1(a10);
        } catch(e16) {
        }
        1707 & v7;
        a10--;
        ++v9 - v9;
    }
}
new C8(v5);
const v22 = new C8(v7);
const v23 = new C8(v22);
let v27;
try { v27 = v23.setInt32(v23); } catch (e) {}
function f28(a29, a30, a31, a32) {
    try {
        v7[4294967295] = a30;
    } catch(e33) {
    }
    return a29;
}
f28(v7, v27, v23, 5n);
f28(v7, 14n, v7, F0);
%PrepareFunctionForOptimization(f28);
f28(v7, 14n, v7, F0);
f28(v7, 14n, v7, F0);
%OptimizeMaglevOnNextCall(f28);
f28(v7, 14n, v7, F0);
