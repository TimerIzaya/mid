let v1 = "65537";
class C3 {
    static a = "string";
    constructor(a5) {
        let v4 = this;
        [v4,,a5,v1] = a5;
        [v4] = "string";
    }
    get h() {
        let v7;
        try { v7 = v1.copyWithin("-4331", "-4331", v1, this); } catch (e) {}
        try {
            super.p(v7, v1, "-4331", "-4331", "-4331");
        } catch(e9) {
        }
        return v7;
    }
}
const v10 = new C3(v1);
new C3("string");
new C3("-4331");
class C13 extends C3 {
    static #m(a15, a16, a17) {
        function f18(a19, a20) {
            ("-4331")?.length;
            try {
            } catch(e23) {
            }
            return arguments;
        }
        f18(a15, a15, a17, f18, f18);
        return f18;
    }
}
new C13();
const v26 = new C13();
const v27 = new C13();
[0.0,-370.8811003467647,Infinity,0.9495938110341656,0.6653882996641172];
[-3.0,0.40687483335422636,4.453855149160136,5.0,-2.220446049250313e-16,-2.2250738585072014e-308,288358.89876562566,3.3623257235435453,2.2250738585072014e-308];
const v31 = [v10,"-4331",[NaN],v26];
const v32 = [v1];
const v33 = [v10,v10,"-4331"];
try { v27.deleteProperty(v33, v33); } catch (e) {}
const v35 = v31;
const v36 = [v35,v35,"string"];
const v37 = ["string"];
[v36,v26,v37,v32,v37];
[557152.5494410894,Infinity,2.2250738585072014e-308,3.0];
[0.9570167024247933,-0.0,-1000000.0,-551455.6386363613];
[0.1824865220177163,-267.18225675511076,2.220446049250313e-16,7.472261112729293e+307,3.596606276273113e+307];
