[2398.6371266249334,861492.7304871923,814.332647752683,-1e-15,1.9092766083364314e+307,0.15362251951533945,-Infinity,3.0];
const v1 = [-2.853065324157873,1.0,-2.2250738585072014e-308,-1.0,579.2116765072371,-Infinity];
const v2 = [6.689596256064515,-1.7976931348623157e+308,-716.8683525202692,-1e-15,0.8545191129048387];
let v3 = 3650;
try {
    new Int32Array(v3);
} catch(e6) {
}
try {
    new Int8Array(3559);
} catch(e10) {
}
try {
    new Int16Array(4054);
} catch(e14) {
}
function f15() {
    return v2;
}
let v18 = 10000;
[,v18,v3] = v1;
Int32Array in v3;
const v22 = Reflect.construct(f15, [], v18);
try {
    v22 & 4054;
} catch(e24) {
}
try {
    Reflect.a = Int16Array;
} catch(e25) {
}
