const v0 = [-1851772308,-1109875333,-10,-62860];
const v1 = [339938217,5,-1073741824,-128,9223372036854775807,65536,-40231,-10];
const v2 = [19542,-65536,-1605275137,-1407634420];
class C3 {
    get g() {
        [275991.5578868906,Infinity,-219.95011490634204,-886.962588944944,-924.390467277932,-1.0,-3.0,-1.2851206468217136];
        [-2.0,-111.54243336648744,-0.0,-3.0,0.9437789231360639];
        return [-0.0,579.0149601100445,-2.2250738585072014e-308,2.220446049250313e-16,0.13484321171023883,-998.0065191379808];
    }
    h = v1;
    static #c = v1;
    static set a(a9) {
        try { new a9(v1, a9, v0, v0, v0); } catch (e) {}
    }
}
new C3();
new C3();
const v16 = new C3();
class C17 {
    h = C3;
    3061 = v2;
    set g(a19) {
        v1?.length;
        this[Symbol?.toPrimitive];
    }
    static 3207222605 = v16;
    static #a;
    #d = v1;
    #b;
    static g;
}
new C17();
new C17();
new C17();
try {
    new Uint16Array(12);
} catch(e30) {
}
try {
    new Float32Array(255);
} catch(e34) {
}
try {
    new Int16Array(128);
} catch(e38) {
}
function f39() {
    return v16;
}
for (let [v40,,v41,v42] of v0) {
    try {
        Uint16Array >>> Uint16Array;
    } catch(e44) {
    }
}
