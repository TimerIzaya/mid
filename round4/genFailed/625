const v0 = [1,-256,1000,3,914601354,1073741824,2147483649,8];
const v1 = [417455903,-916995309];
const v2 = [44251,4,4294967297,9789];
class C3 {
    e = v1;
    static set a(a5) {
        const v6 = this >= v1;
        [this,v6,v6,v1,v0];
        [[a5,v0,a5,v0,this],this,v2];
    }
    toString(a11) {
        const v12 = [this,...v1];
        for (const v13 of v0) {
            try {
                this[this] = v0;
            } catch(e14) {
            }
        }
        return v12;
    }
}
new C3();
new C3();
const v17 = new C3();
/Wi3M/iyms;
/(\1a)*/gymdv;
const v20 = /a/iy;
const v22 = new Set();
let v23;
try { v23 = v22.add(v22); } catch (e) {}
for (let i25 = 0; i25 < 1; i25++) {
    try { v23(i25, v17, C3, i25); } catch (e) {}
    const v33 = [v23];
    Reflect.apply(v20?.test, C3, v33);
}
