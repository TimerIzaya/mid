const v5 = new Array(1589);
const v6 = [-9223372036854775807n,-9223372036854775807n,v5,-4096n];
const v7 = [Array,v6];
const v8 = [v7,-9223372036854775807n,-1231544354n];
function f9(a10, a11, a12, a13) {
    const o30 = {
        get f() {
            try {
                super.e = this;
            } catch(e15) {
            }
            return -1231544354n;
        },
        __proto__: a12,
        set c(a17) {
            try {
                new Uint16Array(110);
            } catch(e21) {
            }
            try {
                new Int16Array(3421);
            } catch(e25) {
            }
            try {
                new BigInt64Array(2116);
            } catch(e29) {
            }
        },
    };
    return o30;
}
const v31 = f9(-1231544354n, -9223372036854775807n, v6, -1231544354n);
const v32 = f9(-4096n, -9223372036854775807n, v8, v8);
let v33 = f9(-9223372036854775807n, -4096n, v7, 1589);
try {
    new Uint16Array(1024);
} catch(e37) {
}
try {
    new Float64Array(1039);
} catch(e41) {
}
try {
    new Uint32Array(805);
} catch(e45) {
}
v5.forEach(-9223372036854775807n, v32, Uint32Array, ...v6, -1231544354n, ...v5);
try {
    v6.length = 268435440;
} catch(e49) {
}
try {
    v33 &= v31;
} catch(e50) {
}
