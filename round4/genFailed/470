function f3(a4) {
    const o22 = {
        [a4]: 3,
        "c": a4,
        [452338481]: 3,
        "h": 452338481,
        "b": a4,
        "e": 3,
        toString(a6, a7) {
            e?.[this];
            const v12 = e / e;
            !v12;
            try {
                Math.cosh(256);
            } catch(e15) {
            }
            const v16 = +256;
            try {
                Math.min(v12);
            } catch(e18) {
            }
            try {
                Math.expm1(e);
            } catch(e20) {
            }
            ~v16;
            return a4;
        },
    };
    return o22;
}
const v23 = f3(-256);
const v24 = f3(3);
const v25 = f3(-256);
class C29 extends f3 {
    #e = v23;
    static o(a31, a32, a33, a34) {
        return this;
    }
    p(a39, a40) {
        for (let v41 = 0; v41 < 32; v41++) {
            v24["p" + v41] = v41;
        }
        try { this.toString(f3, v23, 3); } catch (e) {}
        return -1000000000000.0;
    }
}
new C29();
const v46 = new C29();
const v47 = new C29();
try {
    v24[268435456] = -1000000000000.0;
} catch(e48) {
}
try {
    v47[4] = v25;
} catch(e49) {
}
let v51 = -8;
--v51;
-18499;
try {
    Math.min(18499);
} catch(e56) {
}
v46 ^ v46;
v46 / 18499;
