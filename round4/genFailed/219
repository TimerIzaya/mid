function f0() {
}
class C1 {
    constructor() {
        delete this[3];
        let {"f":v4,"g":v5,} = this;
        for (let v6 = 0; v6 < 32; v6++) {
            this["p" + v6] = v6;
        }
    }
    e = f0;
    [-1] = f0;
    [f0] = f0;
    static #h = f0;
}
const v9 = new C1();
const v10 = new C1();
const v11 = new C1();
function f12() {
    return C1;
}
class C13 extends f12 {
    static #d = v11;
    constructor(a15, a16) {
        super();
        try {
            f12 >> v11;
        } catch(e18) {
        }
    }
    a = v10;
    256 = f0;
    #h = C1;
    [C1];
    static #c;
}
new C13(v9, v11);
new C13(v10, v11);
new C13(v9, v10);
try {
    new Float32Array(129);
} catch(e25) {
}
try {
    new Float32Array(532);
} catch(e29) {
}
try {
    new Uint16Array(13);
} catch(e33) {
}
C1[C1];
const o35 = {
    268435440: v10,
};
for (let v36 = 0; v36 < 100; v36++) {
    f0();
}
C13 == Uint16Array;
[-23278,2147483649,268435441,480710036,-1283617452,1956382293,-4096];
[4,728610852];
[-1702861242];
