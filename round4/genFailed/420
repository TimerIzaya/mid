const v0 = [15369,-1839936950,9223372036854775807,56981,3,-26965338,1274571408,268435440,536870888,-14755];
const v1 = [4294967295,756859795,65535,-24591,-9007199254740991,536870888,-2,-37696,64930];
let v2 = [-4294967296,-9227];
function f3(a4) {
    const o8 = {
        "f": v0,
        ...v2,
        valueOf(a6) {
            try {
                super.e -= v2;
            } catch(e7) {
            }
            return v0;
        },
        "e": v2,
        [v2]: a4,
        ...v1,
        "b": v2,
        __proto__: v2,
    };
    return o8;
}
const v9 = f3(v1);
f3(v2);
const v11 = f3(v0);
class C15 extends f3 {
    [v11] = v9;
    static #valueOf(a17, a18) {
        [4096,-27577,4];
        [-17158,-1];
        [-1125343843,268435440,-6079,536870912,-65536,2147483648,536870912,145604490];
        const v22 = a18?.__proto__;
        try {
            v22 | v11;
        } catch(e24) {
        }
        return v22;
    }
    [v0] = v11;
    b;
}
new C15();
new C15();
const v27 = new C15();
const v28 = v27[v27];
try { new v28(f3); } catch (e) {}
Object.defineProperty("string", 1, { configurable: true, enumerable: true, value: v28 });
[v2] = v0;
try {
    v11[v2] = v9;
} catch(e30) {
}
new Map();
