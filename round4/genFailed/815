const v0 = [];
let v3 = -831364394n;
function f7() {
    return v0;
}
const v8 = [129264.02573303226,455.1621111659915,0.9037040239833289,2.220446049250313e-16,-1000000.0];
let v9 = [5.42806768785657e+306,-249179.4590251029,-816159.7758949178,8.22125164834962e+307,1000000.0,0.3461822668349285,2.2250738585072014e-308,5.0];
[4.0,1.773383706912575e+308,-0.0,-1e-15,-319946.01838468027,183614.69358625822,1e-15];
class C11 extends f7 {
    #n(a13, a14, a15) {
        [20210,-1,1000,31293,-4294967296,43333,-4096,58156];
        [-5,-1,127,64668,2,536870888,-1,-38348,-1024,551487788];
        [-32356,129,1073741824,1751941409,257,255,1073741823,9007199254740991];
        for (let v19 = 0; v19 < 32; v19++) {
            this["p" + v19] = v19;
        }
        return a14;
    }
    b = f7;
    [-2] = v8;
    static d;
    8 = v0;
}
const v22 = new C11();
new C11();
new C11();
v0?.[512];
v22["concat"](v22, "concat", v3);
let v28 = v9?.[230];
({"g":v3,"h":v28,"length":v9,} = "concat");
try {
    -16n + v0;
} catch(e30) {
}
try {
    new C11();
} catch(e32) {
}
