const v1 = new Map();
class C2 {
    #b;
    #valueOf(a4, a5) {
        try {
            super[a4] = Map;
        } catch(e6) {
        }
        return this;
    }
    [Map] = v1;
    static 4197726378;
    4 = Map;
    #a;
}
const v7 = new C2();
const v8 = new C2();
const v9 = new C2();
function f10(a11, a12, a13) {
    const o19 = {
        "g": a11,
        [v8]: a11,
        set h(a15) {
            super.g;
            try {
                v7 & a15;
            } catch(e18) {
            }
        },
        ...a13,
        [a12]: v8,
        __proto__: a13,
    };
    return o19;
}
f10(v7, v8, f10(v7, f10(v8, C2, v9), v7));
try {
    new Uint32Array(1473);
} catch(e26) {
}
try {
    new Float32Array(2223);
} catch(e30) {
}
try {
    new Float64Array(16);
} catch(e34) {
}
try { f10(Map, f10, ...Uint32Array, 9007199254740990, Float64Array); } catch (e) {}
delete v1[2];
let [v41,v42] = v1;
v41[Symbol?.unscopables];
