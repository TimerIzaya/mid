function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -658226062;
    } catch(e3) {
    }
    try {
        this.h = -658226062;
    } catch(e4) {
    }
}
new F0();
new F0();
new F0();
new Date();
try {
    new Uint16Array(2550);
} catch(e13) {
}
try {
    new Int8Array(3846);
} catch(e17) {
}
try {
    new Int32Array(129);
} catch(e21) {
}
const v22 = [442261.55305305496,-3.0757999355905217e+307,0.5495883261335534];
[-22.302564701524943,4.0,9.887612474200612,-996.7283969527579,2.2250738585072014e-308,-8.130845783475767e+307,-5.0,-2.220446049250313e-16];
[-642516.1347518812,-536322.2167859894,-2.0,4.640752573545184,1000000.0,-2.220446049250313e-16,-767458.148473928,1.4831570190002103e+308,1.3370017468682319e+308,2.2250738585072014e-308];
class C25 {
    static h;
    [v22] = Int32Array;
}
new C25();
new C25();
new C25();
const v30 = v22["toLocaleString"]("toLocaleString");
let v32 = -5;
const v33 = v32 + v32;
const v34 = --v32;
v32 >> v30;
const v36 = v32 ^ v33;
try {
    Math.cbrt(v30);
} catch(e38) {
}
v34 % v36;
