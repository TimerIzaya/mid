class C3 {
    static {
        throw this;
        try { ("Z").endsWith("Z", 4); } catch (e) {}
        try {
            const t5 = "Z";
            t5[4174818938] = -3.0;
        } catch(e6) {
        }
    }
    static #b = -3.0;
    #m(a8, a9) {
        const v11 = a8?.[a9?.[4096]];
        try {
            const t14 = "Z";
            t14[-3.0] = v11;
        } catch(e12) {
        }
        return -3.0;
    }
}
const v13 = new C3();
const v14 = new C3();
const v15 = new C3();
try {
    new BigUint64Array(128);
} catch(e19) {
}
try {
    new Int32Array(4096);
} catch(e23) {
}
try {
    new Int8Array(833);
} catch(e27) {
}
new WeakMap();
try {
    v14[BigUint64Array] = v13;
} catch(e30) {
}
const v31 = WeakMap <= v15;
if (v31) {
    const v32 = [Int32Array,v14,"Z","Z",Int32Array];
    const v33 = [v31];
    [v32,v33,v33,v32,v33];
} else {
    ("Z")?.length;
    try {
        C3.h = v14;
    } catch(e36) {
    }
}
