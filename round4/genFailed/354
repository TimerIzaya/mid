function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -16;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
try {
    new BigUint64Array(16);
} catch(e10) {
}
try {
    new Float32Array(0);
} catch(e14) {
}
try {
    new Uint8ClampedArray(1);
} catch(e18) {
}
class C19 extends BigUint64Array {
    5 = Uint8ClampedArray;
    constructor(a21, a22, a23) {
        super(a21, 1, 16);
        if (a23) {
            try {
                new Float32Array(this, -2147483649, 1);
            } catch(e26) {
            }
        } else {
            try {
                v4[5] = 1;
            } catch(e27) {
            }
        }
    }
}
new C19(v6, C19, Uint8ClampedArray);
const v29 = new C19(v5, C19, C19);
new C19(C19, v4, v29);
let v31 = 0;
while (v31 < 9) {
    for (let i35 = 0; i35 < 3; i35++) {
        new C19(...v29, v29, i35, C19, 1, BigUint64Array);
        new C19(Uint8ClampedArray, 0, Uint8ClampedArray, 0, v4);
    }
    v31++;
}
