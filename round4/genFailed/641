let v0 = WeakMap;
new v0();
try {
    new Uint16Array(1590);
} catch(e5) {
}
try {
    new Uint8ClampedArray(255);
} catch(e9) {
}
try {
    new Uint32Array(4006);
} catch(e13) {
}
try {
    new Uint8Array(4096);
} catch(e17) {
}
try {
    new Float64Array(268);
} catch(e21) {
}
try {
    new Float32Array(129);
} catch(e25) {
}
try {
    --v0;
} catch(e27) {
}
for (let [...v28] of Uint8Array) {
    try {
    } catch(e29) {
    }
}
const v33 = -268435456 ^ 2182;
v0 / -268435456;
+v33;
try {
    Math.floor(2182);
} catch(e37) {
}
