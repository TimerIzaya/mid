try {
    new Int32Array(169);
} catch(e3) {
}
try {
    new Uint8Array(3);
} catch(e7) {
}
try {
    new Int32Array(129);
} catch(e11) {
}
class C12 {
    4096 = Uint8Array;
    static m(a14, a15, a16) {
        with (this) {
            try {
                super.a = a14;
            } catch(e18) {
            }
        }
        return Int32Array;
    }
    d = Int32Array;
    e = Uint8Array;
}
const v19 = new C12();
const v20 = new C12();
new C12();
let v25;
try { v25 = v20(); } catch (e) {}
if (v25) {
    const v26 = v19?.[268435456];
    try {
        v20[v26] -= 129;
    } catch(e27) {
    }
} else {
    const o28 = {
    };
    try {
        new Proxy(v19, o28);
    } catch(e31) {
    }
}
