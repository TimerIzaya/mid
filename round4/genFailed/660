const v1 = new Map();
const v2 = [Map,v1,Map];
const v3 = [v2];
[Map,v2,v3,v3];
function f5() {
    return Map;
}
class C6 extends f5 {
    static #h;
    #o(a8, a9, a10) {
        try {
            Math.atanh(0.2526305129984969);
        } catch(e15) {
        }
        const v16 = 0.2526305129984969 >> 268435440;
        const v17 = f5--;
        268435440 - v16;
        try {
            Math.cbrt(268435440);
        } catch(e20) {
        }
        v16 / v17;
        return this;
    }
}
new C6();
new C6();
new C6();
try {
    C6.f = 65535n;
} catch(e28) {
}
new Set();
const o33 = {
    "maxByteLength": 2021,
};
const v35 = new ArrayBuffer(2021, o33);
try {
    new Uint8ClampedArray(v35);
} catch(e38) {
}
