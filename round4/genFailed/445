const v0 = [-2.4730948536383828,0.14678640953513877,0.9241151248037277,-Infinity];
let v1 = [0.15337556053457735];
const v2 = [0.0,0.7783255060226959,2.2250738585072014e-308,284692.22187565756,1000000.0,0.22262185579924565];
function f3() {
    return v2;
}
class C4 extends f3 {
    10000;
    #n(a6, a7) {
        %VerifyType(f3);
        v0 === this;
        try {
            v1 = a6;
        } catch(e9) {
        }
        return v0;
    }
    h = v0;
    static [v2];
    [f3] = v2;
}
new C4();
const v11 = new C4();
new C4();
try {
    new BigUint64Array(1180);
} catch(e16) {
}
try {
    new Float32Array(9);
} catch(e20) {
}
try {
    new Float32Array(1499);
} catch(e24) {
}
try {
    C4[0] = v2;
} catch(e25) {
}
let v26 = 0;
while (v26 < 9) {
    try { C4.p(v1, 1499, v11); } catch (e) {}
    try {
        f3();
    } catch(e32) {
    }
    v26++;
}
