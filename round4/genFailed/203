class C3 {
    constructor(a5) {
        ("MIN_VALUE")["matchAll"](a5);
        /[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]/mdv;
        /(xyz{0,1}[\u0034(T1X)])/ivs;
        /a\Sc\P{gc=Decimal_Number}/umds;
        try {
            super["MIN_VALUE"] = "MIN_VALUE";
        } catch(e11) {
        }
    }
    static ["MIN_VALUE"] = 256;
    [256] = -1073741824;
    static 1776099326;
    ["MIN_VALUE"];
}
new C3(256);
const v13 = new C3("MIN_VALUE");
new C3(C3);
const v15 = /((?:ab){4,7})/igmds;
const v16 = /wia*b/ud;
const v17 = /(?:a{5,1000000}){3,1000000}/uy;
class C18 extends C3 {
    constructor(a20, a21) {
        super(a20);
        try {
            v15[193] <<= 256;
        } catch(e22) {
        }
    }
    static 2 = v15;
    static n(a24, a25) {
        try { a24(C3); } catch (e) {}
        try {
            new Float32Array(83);
        } catch(e30) {
        }
        try {
            new Uint32Array(257);
        } catch(e34) {
        }
        try {
            new Float32Array(10);
        } catch(e38) {
        }
        return v16;
    }
}
const v39 = new C18(v15, v16);
const v40 = new C18(v17, "MIN_VALUE");
const v41 = new C18(v17, v40);
[-4294967295];
[-56555,6,-2,20210,482710609,512];
[268435441];
try {
    v39[v41] <<= -1073741824;
} catch(e45) {
}
try {
    C3.valueOf = v16;
} catch(e46) {
}
try {
    C18.c = v13;
} catch(e47) {
}
