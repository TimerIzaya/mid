function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 1024;
    } catch(e3) {
    }
    try {
        this.e = 1024;
    } catch(e4) {
    }
}
const v5 = new F0();
let v6 = new F0();
const v7 = new F0();
class C8 {
    #m(a10, a11) {
        function f12(a13, a14, a15) {
            const o16 = {
                "a": this,
                "b": v6,
                __proto__: a15,
                "h": a13,
            };
            return o16;
        }
        f12(a10, v5, v6);
        f12(v6, v7, a11);
        return f12(a11, this, v7);
    }
}
const v20 = new C8();
const v21 = new C8();
const v22 = new C8();
function f26(a27, a28, a29) {
    const o43 = {
        "g": a29,
        [C8]: a28,
        [v7]: a28,
        __proto__: C8,
        6: a27,
        ...v20,
        get a() {
            let v35 = ~this;
            const v36 = -8;
            v6++;
            -v35;
            this >> v36;
            v35++;
            try {
                Math.sign(v35);
            } catch(e42) {
            }
            return -9223372036854775807;
        },
    };
    return o43;
}
f26(v22, C8, v7);
f26(v6, v7, -61935);
const v46 = f26(v21, v22, v20);
try {
    v46.length = 1;
} catch(e48) {
}
for (let [v49,,v50,v51] of C8) {
    try {
        v51 |= v50;
    } catch(e52) {
    }
}
