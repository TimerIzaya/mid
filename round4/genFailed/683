const v0 = [-4294967295,1032531544,-19315];
const v1 = [9,8,268435456,-836200524,-55846,-9,-1654612487,255,37334];
const v2 = [0,-53442,0,1879698027];
const v3 = [1e-15,-2.204483903073193,-2.220446049250313e-16,-0.0,1000000000000.0,1000000000.0,0.16721904320723113,1.6400154512097421e+308,-27.883245286037095,-1000000000000.0];
const v4 = [1000000000.0,NaN,0.8808097244432423,-1000000000.0,2.2250738585072014e-308,-8.992741772595898e+307,-4.0,2.220446049250313e-16,482931.31699608616,2.0];
[-1000000000.0,0.5319467366136839,1000000.0,1.9490192482608254e+307,1e-15,-498258.2279583976,-1000000000.0];
const v6 = /a+(x)(x)(x)\2/iuys;
const v7 = /\b*/ydvs;
const v8 = /((?<a>.)+)/gyd;
function F12(a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = v7;
    } catch(e16) {
    }
}
new F12(v3, v8);
new F12(v4, F12);
new F12(v2, v7);
new F12(v4, -16);
const o21 = {
    __proto__: v6,
    "d": v0,
    [v0]: v4,
};
v1?.[3];
try {
    new Uint8ClampedArray(2478);
} catch(e26) {
}
try {
    new Float64Array(9);
} catch(e30) {
}
try {
    new Float32Array(2);
} catch(e34) {
}
