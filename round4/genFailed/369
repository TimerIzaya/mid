class C3 {
    static set h(a5) {
        try { new a5(a5, "boolean", "boolean"); } catch (e) {}
    }
    #n(a10, a11) {
        "boolean" instanceof "boolean";
        const o13 = {
        };
        try {
            o13.d = this;
        } catch(e14) {
        }
        try {
            const o15 = {
            };
            o15.d = this;
            o15.c = "boolean";
        } catch(e16) {
        }
        try {
            const o17 = {
            };
            o17.d = this;
            o17.c = "boolean";
            o17.a = "bigint";
        } catch(e18) {
        }
        try {
            const o19 = {
            };
            o19.d = this;
            o19.c = "boolean";
            o19.b = a10;
        } catch(e20) {
        }
        return "bigint";
    }
}
const v21 = new C3();
const v22 = new C3();
const v23 = new C3();
function F24(a26, a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = "boolean";
    } catch(e30) {
    }
    try {
        this.c = "boolean";
    } catch(e31) {
    }
    try {
        this.e = a27;
    } catch(e32) {
    }
}
new F24("boolean", "boolean", C3, "boolean");
const v34 = new F24("number", "boolean", "number", v22);
const v35 = new F24("bigint", "number", v34, v34);
class C36 {
    constructor(a38, a39) {
        v23?.b;
        try {
            Math.tanh(C3);
        } catch(e45) {
        }
        -"bigint" ** "bigint";
    }
    9 = "number";
}
new C36("number", "number");
new C36(v22, "boolean");
const v50 = new C36(v22, "bigint");
const o51 = {
};
try {
    o51.b = v21;
} catch(e52) {
}
try {
    const o53 = {
    };
    o53.b = v21;
    o53.d = v50;
} catch(e54) {
}
try {
    const o55 = {
    };
    o55.b = v21;
    o55.d = v50;
    o55.e = "number";
} catch(e56) {
}
try {
    const o57 = {
    };
    o57.b = v21;
    o57.d = v50;
    o57.e = v35;
} catch(e58) {
}
