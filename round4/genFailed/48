try {
    new Uint32Array(10);
} catch(e3) {
}
try {
    new BigInt64Array(512);
} catch(e7) {
}
try {
    new Uint32Array(32);
} catch(e11) {
}
const v12 = [-9,1073741824];
const v13 = [-9007199254740991,4294967295];
const v14 = [6205,-739562613,11,0,-2147483647,11,-65535,537,-3];
const v15 = /abc+/igumds;
/[0a\fb\nc\rd\te\vfa\Sc*]/igdv;
const v17 = /Fa+b(?<a>)\p{Changes_When_NFKC_Casefolded}*/gus;
let o18 = {
    __proto__: v17,
    "h": v14,
    "g": v15,
    [v13]: Uint32Array,
};
const v24 = ++o18;
try {
    Math.trunc(2112160762);
} catch(e26) {
}
try {
    Math.sqrt(v12);
} catch(e28) {
}
681398701 / 2112160762;
!v24;
try {
    Math.acos(512);
} catch(e32) {
}
try {
    Math.atanh(512);
} catch(e34) {
}
