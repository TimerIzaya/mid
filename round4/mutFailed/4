const v0 = [];
const v1 = [v0,v0,v0,v0];
const v2 = [v0,v0,v1,v0,v1];
[v0];
class C8 extends Date {
}
const v12 = [Array,Array];
const v13 = `
    const v14 = v12.fill(v13, 268435456, -9007199254740991);
    v14 == v14;
`;
class C16 {
    static {
        function F18(a20, a21, a22, a23) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                function f25(a26, a27) {
                    class C29 {
                    }
                    const v30 = new C29();
                    65536n > v30;
                    arguments[BigUint64Array] = arguments;
                    return f25;
                }
                f25();
                new Map();
                129 * 16;
                this.d = this;
            } catch(e39) {
                new Uint16Array([-3.811806707213245e+307,-1.0858765783934642e+307,-1.7148887567441236,0.14352235203775188,752219.0721807263]);
                return [];
            }
        }
        const v44 = new F18(this, v1, this, 1576022375);
        new F18(v2, v1, F18, 1576022375);
        new F18(v0, v1, v44, 1);
    }
    2867 = v2;
    #e = 604196248;
}
new C16();
const t41 = 268435456;
new t41();
new C16();
const o54 = {
    1692881379: 9,
    [9]: 9,
};
const o55 = {
    ...o54,
};
[0,10000,9007199254740991,-16080];
try {
const t0 = -9223372036854775807;
t0();
} catch (e) {}
v12.toLocaleString();
const v61 = new Date();
const v63 = v61.getYear().flat();
const o65 = {
    "arguments": v63,
    "type": "function",
};
