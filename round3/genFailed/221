class C3 {
    constructor(a5, a6) {
        try { this.valueOf(NaN, this, 0.27452726285091245, a5, 0.27452726285091245); } catch (e) {}
        try {
            a6 = NaN;
        } catch(e8) {
        }
    }
    get e() {
        try {
            super[this] = 0.27452726285091245;
        } catch(e10) {
        }
        [4.593206072633958,-7.695323679946715,-1e-15,1.0,-1000000000000.0,0.9232124460483233,1000000000.0,-1000.0,1000.0,1000000000.0];
        [-1.0];
        return [-2.220446049250313e-16,-23040.666722767637,-1.2999848185206075e+308,1.7976931348623157e+308,7.2208612294338295,0.0,-1.0,-1.7976931348623157e+308,Infinity,1000000.0];
    }
}
const v14 = new C3(NaN, NaN);
new C3(0.27452726285091245, 0.27452726285091245);
const v16 = new C3(v14, NaN);
try {
    new BigInt64Array(4009);
} catch(e23) {
}
try {
    new Uint8Array(1);
} catch(e27) {
}
try {
    new Int16Array(3);
} catch(e31) {
}
function f32(a33, a34, a35) {
    const v36 = new BigInt64Array(a35, 1024);
    try {
        v36.toLocaleString("POSITIVE_INFINITY");
    } catch(e39) {
    }
    return v36;
}
f32(NaN, v16, C3);
