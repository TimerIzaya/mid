const v0 = [-861.6988233736897,-2.0,110.40192772811747,3.0,-936.5841629559854,-4.0];
const v1 = [-768870.203305293,-1000000000000.0,742809.6350244705,1000000000000.0,0.14618953898032472,-673.9030569572589,3.0,-7.875432099084594e+307,976654.2682013018,6.85793450052962];
[0.2630127758734859,4.0,-1000000.0,1000000000000.0,-3.0,0.619532618372984,184762.21395024378,-2.220446049250313e-16];
class C3 {
    toString(a5, a6) {
        super[a5];
        super[a5];
        return v1;
    }
    set b(a10) {
        super.e;
        try {
            this.g = a10;
        } catch(e12) {
        }
        new Set();
    }
    #g;
}
new C3();
const v16 = new C3();
new C3();
let v26 = v16 < v0;
if (v26) {
    const o29 = {
        "maxByteLength": 10,
    };
    const v31 = new ArrayBuffer(5, o29);
    try {
        new Int32Array(v31);
    } catch(e34) {
    }
} else {
    try {
        Math.tan(v26);
    } catch(e39) {
    }
    const v40 = -9007199254740990 * -9007199254740990;
    const v41 = v26--;
    ~v40;
    try {
        Math.random();
    } catch(e44) {
    }
    try {
        Math.cos(v41);
    } catch(e46) {
    }
}
