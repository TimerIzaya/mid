function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 26076;
    } catch(e3) {
    }
    try {
        this.b = 26076;
    } catch(e4) {
    }
}
new F0();
const v6 = new F0();
const v7 = new F0();
try {
    new Uint8Array(345);
} catch(e14) {
}
try {
    new Float64Array(97);
} catch(e18) {
}
try {
    new Float32Array(6);
} catch(e22) {
}
class C23 extends F0 {
    static get d() {
        try {
            this.length = 1;
        } catch(e26) {
        }
        return 1;
    }
    valueOf(a28, a29) {
        Object.defineProperty(v6, a28, { writable: true, enumerable: true, value: this });
        this[2190];
        with (v7) {
            const v32 = v6.__proto__;
            v32 in e;
            delete v32?.[5];
        }
        return F0;
    }
}
new C23();
const v37 = new C23();
new C23();
new Uint8Array(46122);
let v40 = 0;
while (v40 < 0) {
    try {
        -345;
    } catch(e44) {
    }
    v37[97] ^= -4294967296;
    v40++;
}
