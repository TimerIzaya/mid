class C3 {
    static #toString(a5, a6) {
        try { a6.p(1073741823, 1073741823, this, a5, a6); } catch (e) {}
        [-8844,29129,8,-55485,512,536870887,-5242,-1365311536,268435439,-2];
        [-2147483649,-65536,697896949,51705,9007199254740990,268435441,2571];
        [-1482854140,-4096,255,6404,-2,1,1,-4294967296];
        return this;
    }
    static {
        this[1073741823] >>>= 1073741823;
        const v12 = this.__proto__;
        try { v12(this, this); } catch (e) {}
        this instanceof v12;
    }
    static 1 = 536870889;
    #e = 536870889;
}
const v15 = new C3();
const v16 = new C3();
const v17 = new C3();
function F18(a20, a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 1073741823;
    } catch(e24) {
    }
    try {
        this.a = 536870889;
    } catch(e25) {
    }
    try {
        this.b = v15;
    } catch(e26) {
    }
}
const v27 = new F18(v15, v15, v16, v16);
const v28 = new F18(v15, C3, v27, v16);
const v29 = new F18(v28, v15, v28, v27);
const v30 = [F18,v29,v29];
let v31 = [v29,v17,536870889];
const v32 = [F18,v15,v31];
class C33 extends C3 {
    static set g(a35) {
        let v37 = -52188;
        const v39 = F18++;
        const v40 = v15 * F18;
        +v37;
        v39 & (F18 * v15);
        ++v37;
        v40 >> F18;
    }
    static c = v32;
    d;
    11;
}
new C33();
new C33();
const v48 = new C33();
try { v32(v27, v48, v27, ...v30, v15, ...v48); } catch (e) {}
v29[v31];
function f51(a52, a53) {
    try {
        v31 = v17;
    } catch(e54) {
    }
    [] = v30;
}
new Promise(f51);
