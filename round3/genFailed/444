try {
    new Int32Array(229);
} catch(e3) {
}
try {
    new Float32Array(6);
} catch(e7) {
}
try {
    new Uint8Array(257);
} catch(e11) {
}
class C12 extends Int32Array {
    2147483647 = 6;
    64;
    static h;
    1024 = 257;
    2917 = Float32Array;
    #e;
    get b() {
        try {
            this.#e |= 257;
        } catch(e14) {
        }
        try { this(this, 257, this); } catch (e) {}
        return Float32Array;
    }
}
const v16 = new C12();
const v17 = new C12();
const v18 = new C12();
const v20 = [v16];
[Uint8Array,[Int32Array,6],257,v20];
v20.length *= 257;
function F23(a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a26;
    } catch(e27) {
    }
    try {
        this.h = a26;
    } catch(e28) {
    }
    try {
        this.g = a26;
    } catch(e29) {
    }
}
new F23(v18, v16);
new F23(v17, v16);
new F23(v17, v17);
