try {
    new BigInt64Array(92);
} catch(e3) {
}
try {
    new Float64Array(127);
} catch(e7) {
}
try {
    new Int8Array(1216);
} catch(e11) {
}
function F12(a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a14;
    } catch(e16) {
    }
    try {
        this.d = a14;
    } catch(e17) {
    }
    try {
        this.e = a15;
    } catch(e18) {
    }
}
const v19 = new F12(Float64Array, 92);
const v20 = new F12(BigInt64Array, 1216);
new F12(Int8Array, 92);
/f\011/gd;
/(?=.)?/giu;
const v24 = /(foo(?<!bar)baza$\p{Changes_When_NFKC_Casefolded}+)/yisv;
try { v19.valueOf(); } catch (e) {}
delete v20[1];
BigInt64Array >= Float64Array;
let v31 = 0;
while (v31 < 10) {
    v20 instanceof F12;
    const v35 = v24[65535];
    try {
        v20.toString = v35;
    } catch(e36) {
    }
    v31++;
}
