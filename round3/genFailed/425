try {
    new Uint32Array(256);
} catch(e3) {
}
try {
    new Int32Array(6);
} catch(e7) {
}
try {
    new Float64Array(129);
} catch(e11) {
}
const v12 = [-5.0,1000000000000.0,-5.0,-1.3502327810881263e+308,-252.1471356675993,-276570.8351055167,4.0,1.7976931348623157e+308,-3.0,-868.9236938178277];
const v13 = [-396.5767746113944,-7.784381528926165];
const v14 = [-1e-15,0.4377708602831587,0.0,-993.4932504262413,4.0,-7.075810350176816e+307,-5.802106188083969e+307,0.0,-1.7976931348623157e+308];
class C15 {
    constructor(a17, a18, a19) {
        Reflect.construct(Int32Array, [a19,a18], a18);
    }
    #n(a25, a26, a27) {
        var h = a25;
        for (let v28 = 0; v28 < 32; v28++) {
            this["p" + v28] = v28;
        }
        return 6;
    }
}
new C15(v13, C15, 129);
let v32 = new C15(v12, Int32Array, 129);
new C15(v14, 129, 6);
try {
    v32 = v13;
} catch(e34) {
}
try { v13(C15, 6); } catch (e) {}
for (let i37 = 0; i37 < 3; i37++) {
    new Date();
}
