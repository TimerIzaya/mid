let v1 = Int8Array;
try {
    new v1(128);
} catch(e3) {
}
try {
    new Uint8ClampedArray(2087);
} catch(e7) {
}
try {
    new Uint8ClampedArray(1024);
} catch(e11) {
}
const v12 = [v1,2087,Uint8ClampedArray];
const v13 = [v12,v12,2087,v12,v12];
const v14 = [v13,1024,v13,2087];
class C15 extends v1 {
    static #b;
    #m(a17, a18, a19) {
        try {
            v1++;
        } catch(e21) {
        }
        v14[Uint8ClampedArray];
        try {
            ~128;
        } catch(e24) {
        }
        return Uint8ClampedArray;
    }
    b = v12;
    [128];
}
new C15();
const v26 = new C15();
const v27 = new C15();
[-2.2250738585072014e-308,155062.11934718722,1.0073745638032137e+308,0.9021669038673733,-1.0,-911.4829123303845,5.842948629410845,2.220446049250313e-16,5.157290016711277,-1000000000.0];
[1000000.0,-1.7976931348623157e+308];
[8.632099823147769,-2.220446049250313e-16,-4.767966217228798];
try {
    v27.__proto__ = v13;
} catch(e31) {
}
let [v32,...v33] = v26;
class C34 {
    static 4 = 1024;
}
new C34();
new C34();
new C34();
