function f0() {
    const o10 = {
        __proto__: "transfer",
        "a": "transfer",
        "c": "il",
        ["isInteger"]: "isInteger",
        ["transfer"](a5, a6) {
            [-9007199254740990,-4294967295];
            [-9,-38694,2147483648,65536,4];
            [20528,536870912];
            return "transfer";
        },
        "f": "transfer",
        "d": "isInteger",
        "b": "il",
    };
    return o10;
}
const v11 = f0();
const v12 = f0();
const v13 = f0();
class C14 {
    constructor(a16) {
        f0();
        [45704,9007199254740991,-25299,0,1607534612,1615565339,4096,39965928,10,1945129446];
        [6,27983,10000];
        [-9223372036854775807,-536870912,5112,-5,-4294967297,-281];
    }
    static c = v12;
    m(a22, a23) {
        const o26 = {
            "maxByteLength": 1073741824,
        };
        const v28 = new SharedArrayBuffer(2, o26);
        try {
            new Uint16Array(v28);
        } catch(e31) {
        }
        return o26;
    }
}
const v32 = new C14(v12);
new C14(v13);
new C14(v11);
new Date();
function f40(a41, a42) {
    function f44(a45) {
        Object.defineProperty(v32, "a", { get: f0 });
        try {
            a45 &= a45;
        } catch(e46) {
        }
    }
    this.onmessage = f44;
    try {
        v11[a41] = C14;
    } catch(e47) {
    }
}
const v50 = [-14n,1n];
const o51 = {
    "arguments": v50,
    "type": "function",
};
new Worker(f40, o51);
