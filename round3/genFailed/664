let v2 = -2.0;
class C3 {
    #o(a5, a6) {
        try {
            a5.__proto__ = a6;
        } catch(e7) {
        }
        return a5;
    }
    constructor(a9) {
        const t10 = super[v2];
        t10[a9] += v2;
        try { a9(this, -9007199254740991, v2, a9, a9); } catch (e) {}
    }
    4 = -9007199254740991;
    static 3 = -9007199254740991;
    static h = v2;
}
const v12 = new C3(v2);
const v13 = new C3(C3);
const v14 = new C3(v13);
let v17 = 2.2250738585072014e-308;
class C18 extends C3 {
    static #a;
    static 3002394236;
    constructor(a20, a21) {
        super(v2);
        try { a21(...a20, a21, this, v12, a21); } catch (e) {}
        try {
            v17 = 898.7463207033745;
        } catch(e23) {
        }
    }
    #toString(a25, a26, a27, a28) {
        try {
            v2 %= 898.7463207033745;
        } catch(e29) {
        }
        return a26;
    }
}
const v30 = new C18(C3, v17);
new C18(v14, -4.0);
const v32 = new C18(v12, -4.0);
const o36 = {
};
try {
    new Proxy(v32, o36);
} catch(e39) {
}
try { v30.toString(-4.0); } catch (e) {}
const v42 = Symbol.iterator;
const o51 = {
    [v42]() {
        let v44 = 10;
        const o50 = {
            next() {
                v44--;
                const v48 = v44 == 0;
                const o49 = {
                    "done": v48,
                    "value": v44,
                };
                return o49;
            },
        };
        return o50;
    },
};
