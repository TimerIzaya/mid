try {
    new Uint16Array(6);
} catch(e6) {
}
try {
    new Int32Array(1923);
} catch(e10) {
}
try {
    new Uint8Array(138);
} catch(e14) {
}
class C15 {
    constructor(a17, a18, a19, a20) {
        try {
            super.setFloat64(-1000000000.0, a17);
        } catch(e22) {
        }
    }
    [-1000000000.0] = 1923;
    36 = 1923;
    [Uint16Array];
    #b = Int32Array;
}
new C15(1923, -1000000000.0, 1000.0, 1000.0);
const v24 = new C15(6, 1000.0, -1000000000.0, 1000.0);
const v25 = new C15(138, -5.0, -1000000000.0, -1000000000.0);
for (const v26 of Uint8Array) {
    v25[Symbol.toPrimitive];
    v24 == v26;
    var f = C15;
}
/[a{12z}}]/yisd;
/yXa+?/gsdv;
/R/gysu;
