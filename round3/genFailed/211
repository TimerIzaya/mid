const v0 = [];
function f1() {
    return v0;
}
const v5 = [4.610956453159062,3.0,445776.8946026794,0.9855548105103468,1000000.0,4.550122072596048,-Infinity,0.6735722942302597,-1000000000000.0];
const v6 = [-1000000000.0,-1000000000.0,-3.0,1000000000000.0];
const v7 = [-554.7218867366562,-1e-15,-1000000000.0,758.6097605215261,-1.0500710087983145e+308];
class C8 {
    m(a10, a11, a12) {
        let v13;
        try { v13 = v6.reverse(); } catch (e) {}
        typeof v13 === "symbol";
        return v6;
    }
    constructor(a18, a19) {
        super[a19];
        delete v5?.length;
    }
    b;
    #g = v6;
    static [268435441] = v5;
    h;
}
const v22 = new C8(v7, v0);
const v23 = new C8(v0, v5);
new C8(v0, v23);
function F25(a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a29;
    } catch(e30) {
    }
}
new F25(F25, v7, 4294967295);
new F25(v23, v6, 4294967295);
const v33 = new F25(v6, v7, 268435441);
async function* f34(a35, a36) {
    try { v22.m(-2147301983, v23, a36); } catch (e) {}
    v7[8] = v23;
    await a36;
    try {
        yield* v6;
    } catch(e39) {
    }
    return a36;
}
f34(-2147301983, v33);
