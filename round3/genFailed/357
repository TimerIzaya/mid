class C1 {
    #p() {
        try {
            this[200] = this;
        } catch(e3) {
        }
        %VerifyType(false);
        try {
            this.__proto__ = this;
        } catch(e4) {
        }
        return this;
    }
    #d;
}
const v5 = new C1();
const v6 = new C1();
const v7 = new C1();
function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a10;
    } catch(e12) {
    }
    try {
        this.f = a10;
    } catch(e13) {
    }
}
const v14 = new F8(F8, v5);
const v15 = new F8(v14, v14);
new F8(F8, v5);
function f17(a18, a19, a20, a21) {
    const o40 = {
        [a19]: v6,
        [v6](a23, a24, a25, a26) {
            v6 < a18;
            try {
                new Int16Array(1024);
            } catch(e31) {
            }
            try {
                new Float64Array(257);
            } catch(e35) {
            }
            try {
                new Uint32Array(9);
            } catch(e39) {
            }
            return a21;
        },
    };
    return o40;
}
const v41 = f17(C1, v14, v14, v14);
const v43 = f17(v15, v15, v5, f17(v14, v14, v7, C1));
for (const v44 of v41) {
    const v45 = v43[3];
    try {
        v45.valueOf = v45;
    } catch(e46) {
    }
}
