class C3 {
    static toString(a5, a6) {
        a5[6] = a5;
        try {
        const t0 = 0;
        t0(-12, 2);
        } catch (e) {}
        const v11 = 0 || 500301886;
        const v12 = v11 + v11;
        try {
            Math.atan(a5);
        } catch(e14) {
        }
        try {
            Math.asin(-12);
        } catch(e16) {
        }
        try {
            Math.sign(v12);
        } catch(e18) {
        }
        v11 >> v12;
        return -9007199254740991 << 500301886;
    }
}
new C3();
new C3();
let v23 = new C3();
let v24 = 2147483648;
[4,628444017,-4096,-14,-9,1648832061,8,10];
let v31 = [257,-13,-1,7,-1024,-1,1537532888,-4294967297,-16,-15];
[536870912,-3,-9007199254740990,-259632415];
try { v31.includes(v31); } catch (e) {}
try {
    v23 = "8";
} catch(e34) {
}
let v35 = 0 !== "8";
({"a":v31,"e":v24,"length":v35,} = "number");
Object.defineProperty(v23, v35, { configurable: true, value: 0 });
try {
    new BigInt64Array(4);
} catch(e39) {
}
try {
    new Float32Array(134);
} catch(e43) {
}
try {
    new Int16Array(1389);
} catch(e47) {
}
