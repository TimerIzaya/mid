class C3 {
    64;
    static n(a5) {
        const v7 = new Map();
        try { ("boolean").matchAll(a5); } catch (e) {}
        try {
            v7.length = 0;
        } catch(e10) {
        }
        return 165338026;
    }
    b = 165338026;
    ["boolean"];
    268435440 = "boolean";
}
const v11 = new C3();
const v12 = new C3();
const v13 = new C3();
function F14(a16, a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v12;
    } catch(e19) {
    }
    try {
        this.g = v12;
    } catch(e20) {
    }
    try {
        this.f = a16;
    } catch(e21) {
    }
}
let v22 = new F14(C3, v12, v11);
new F14(-40912, v11, v13);
new F14(v12, C3, v11);
const v25 = [-4.346044916913485,-1000.0,-4.0,1e-15,1000000.0,-228.6018743732767];
let v26 = [-9.624726693526039e+307,-454.3952752610596];
const v27 = [-1000000000.0,-5.0,3.0,0.5624950711882228,-385079.90747987584,584288.5371722106,-5.0,577597.7074374605,-5.0,2.220446049250313e-16];
try {
    new Int16Array(12);
} catch(e31) {
}
try {
    new Uint32Array(7);
} catch(e35) {
}
try {
    new BigInt64Array(1);
} catch(e39) {
}
C3 !== v25;
let v41 = 0;
do {
    ({"f":v26,"g":v22,} = v22);
    v41++;
} while (v41 < 9)
let [v45,v46] = v27;
