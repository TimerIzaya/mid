[1073741825,-65535,9007199254740991,-2147483647,1,701120811];
const v1 = [129,10,8];
const v2 = [10000,-24611,-1036187340];
class C3 {
    1;
    128;
    n(a5, a6) {
        const v7 = super[this];
        function f8(a9, a10, a11) {
            function f13(a14) {
                try {
                    a11 -= v7;
                } catch(e15) {
                }
            }
            this.onmessage = f13;
            let v19 = -1.7976931348623157e+308;
            const v20 = v19--;
            try {
                Math.min(v20);
            } catch(e22) {
            }
            try {
                Math.log(857517478);
            } catch(e24) {
            }
            ~v20;
            v20 & 857517478;
            try {
                Math.tanh(7);
            } catch(e28) {
            }
        }
        const v31 = [v2,"function",v2];
        const o32 = {
            "arguments": v31,
            "type": "function",
        };
        const v33 = new Worker(f8, o32);
        return v33;
    }
}
new C3();
new C3();
new C3();
try {
    new BigUint64Array(1);
} catch(e43) {
}
try {
    new Int32Array(2303);
} catch(e47) {
}
try {
    new Float32Array(5);
} catch(e51) {
}
class C52 extends BigUint64Array {
    static [2303];
    2764 = v1;
    [Int32Array];
}
new C52();
new C52();
new C52();
const o58 = {
    "maxByteLength": 6,
};
const v60 = new ArrayBuffer(2, o58);
try {
    new BigInt64Array(v60);
} catch(e63) {
}
