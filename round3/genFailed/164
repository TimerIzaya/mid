function f3(a4, a5) {
    const o11 = {
        [-14n]: a5,
        "e": a5,
        ...a4,
        [a4]: 2n,
        "f": a5,
        set g(a7) {
            a7?.[isNaN];
            try {
                super.c = a5;
            } catch(e10) {
            }
        },
        [a5]: a5,
    };
    return o11;
}
const v12 = f3(-2147483649n, 2n);
f3(-2147483649n, -14n);
f3(-14n, -14n);
[v12];
const v16 = [-14n,2n];
[v12,-2147483649n,-2147483649n];
/Ja+b|c/gyisdum;
let v19 = /[^(?:a?)?]/gisdvm;
const v20 = /9/ydvm;
class C21 extends f3 {
    static get c() {
        let v23 = this[this];
        try {
            v23 += v23;
        } catch(e24) {
        }
        try {
            v19 &&= this;
        } catch(e25) {
        }
        return v16;
    }
    static [-2147483649n] = 2n;
    static #d;
}
const v26 = new C21();
new C21();
new C21();
try {
    v16 && v26;
} catch(e34) {
}
f3(v20, 2n);
%PrepareFunctionForOptimization(f3);
f3(v20, 2n);
f3(v20, 2n);
%OptimizeMaglevOnNextCall(f3);
f3(v20, 2n);
