const v0 = [1.7976931348623157e+308,-1000000000000.0,0.11793441803921689,2.2250738585072014e-308,0.0,-1.474582563156832e+308,-746020.5925043148];
const v1 = [-789.5279196936249,1.7976931348623157e+308,Infinity,-1.7976931348623157e+308,-3.0,4.0];
[-756.0742851020286,0.9436259350215683,800735.6712204125];
[208.99264204074257,1.0827489075624032e+308,1.0,-1000000000.0,-2.220446049250313e-16,315349.1549872174,-293479.20710297255,-Infinity,1.4535508793599394,0.979198749205491];
[-0.0,0.923791868485566,0.6174961332471146,-1.4700073425283616e+308,-942.6035658821125];
[-1.7976931348623157e+308,-0.0];
try {
    new Int32Array(1000);
} catch(e9) {
}
try {
    new Uint8Array(9);
} catch(e13) {
}
try {
    new Int32Array(4010);
} catch(e17) {
}
const v22 = [Int32Array,v1];
const v23 = v0.find;
const v25 = Reflect.apply(v23, v0, v22) <= v0;
if (v25) {
    v25[6] = v23;
    [255,-40703,6];
    [256,59396,-1191812320,-6,-4294967296,536870888,9,6];
    [65535,1811197643,2091969694,3,1073741824,246430490,-23691,1024,1544328523];
} else {
    try { new v23(); } catch (e) {}
    try {
        const o30 = {
        };
        v1.filter(v23, o30);
    } catch(e32) {
    }
}
