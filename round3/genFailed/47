class C3 {
    constructor(a5) {
        a5[6] = this;
    }
    [-9007199254740991] = "Z";
    c = "boolean";
    ["boolean"];
    ["Z"];
    #toString(a7, a8) {
        try {
            ("Z").#toString("boolean", "Z");
        } catch(e10) {
        }
        try {
            a8 / a7;
        } catch(e12) {
        }
        return a7;
    }
}
const v13 = new C3("Z");
const v14 = new C3(v13);
const v15 = new C3(C3);
function F19(a21, a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = v15;
    } catch(e25) {
    }
    try {
        this.d = C3;
    } catch(e26) {
    }
    try {
        this.e = C3;
    } catch(e27) {
    }
}
const v28 = new F19(1000, v14, -9007199254740991, C3);
new F19(1000, v28, -9007199254740991, v28);
new F19(-9007199254740991, v15, 1000, v28);
const o36 = {
    valueOf() {
        try {
            super[-16] = v28;
        } catch(e35) {
        }
        return -16;
    },
};
v13.__proto__;
