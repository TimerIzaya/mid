try {
    new BigUint64Array(1297);
} catch(e3) {
}
try {
    new Int16Array(26);
} catch(e7) {
}
try {
    new Uint32Array(4);
} catch(e11) {
}
try {
    new Uint32Array(10);
} catch(e15) {
}
try {
    new Float64Array(6);
} catch(e19) {
}
try {
    new Uint8ClampedArray(5);
} catch(e23) {
}
for (let [v24] of Float64Array) {
    try {
        v24 -= Uint32Array;
    } catch(e25) {
    }
}
try {
    Uint32Array[BigUint64Array] = 26;
} catch(e26) {
}
