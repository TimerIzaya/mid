function f3(a4, a5) {
    const o11 = {
        "c": "toString",
        [a4](a7, a8) {
            try {
                super["toString"] = a5;
            } catch(e9) {
            }
            ("getUint8").__proto__;
            return a8;
        },
        "a": a5,
        136: a4,
        "h": a4,
    };
    return o11;
}
const v12 = f3("toString", "toString");
const v13 = f3("subarray", "getUint8");
const v14 = f3("subarray", "getUint8");
function F15(a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a17;
    } catch(e20) {
    }
    try {
        this.h = a17;
    } catch(e21) {
    }
    try {
        this.d = a18;
    } catch(e22) {
    }
}
new F15(v14, v14, "toString");
new F15(v12, v12, "toString");
const v25 = new F15(v13, v12, "toString");
class C26 {
    constructor(a28, a29, a30, a31) {
        try {
            a31 = "subarray";
        } catch(e32) {
        }
        let v34 = 1073741824;
        const v37 = --v34;
        !v12;
        try {
            Math.log2(-0.0);
        } catch(e40) {
        }
        v37 / "toString";
        try {
            Math.pow(v12, v12);
        } catch(e43) {
        }
        (-11) ** v37;
        v12 << -11;
    }
}
const v46 = new C26(v14, f3, C26, "getUint8");
const v47 = new C26(v46, "toString", v46, "subarray");
new C26(v47, "subarray", v25, "subarray");
let [,v49] = "subarray";
("getUint8")["search"](v49);
[8.151012138505021e+306,-1.0,1000000000.0,0.2919836864502571,-1000000000.0,-1000000000.0,4.783361552438205];
const v53 = [-2.220446049250313e-16,334.28653835582804,NaN];
[-159784.9771236051,2.252798096040042,-1000000000.0,-1000000000000.0,0.6202117753899513];
try {
    v53[2] = v14;
} catch(e55) {
}
