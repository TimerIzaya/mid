try {
    new Uint16Array(0);
} catch(e6) {
}
try {
    new Int8Array(900);
} catch(e10) {
}
try {
    new BigUint64Array(94);
} catch(e14) {
}
class C15 extends BigUint64Array {
    static #h = 127;
    static [-2] = 0;
    65535;
    constructor(a17, a18, a19, a20) {
        super(1073741824, a19);
        try {
            this.#h = a17;
        } catch(e21) {
        }
        try { this.copyWithin(127, 0, 900); } catch (e) {}
    }
    #a;
    static d = 900;
    d = Int8Array;
    f;
}
new C15(1073741824, 127, 1073741824, 34130);
const v24 = new C15(1073741824, 127, 1073741824, 1073741824);
new C15(1073741824, 127, 900, 900);
[-5.0,-5.0,0.0];
[-5.930932710879602,-914.0699568526655,356395.5185507771,-1000000000000.0,2.122157136103187,1000000000000.0,-1.761537643455771];
[-2.577206845272853,-Infinity,0.8137463014876847,0.11388604894411836,-2.7774580205038435e+307,-3.8988884416745827e+307,678.9028042963696,-1.3434133331569818e+308,-9.470381687776525];
for (let i31 = 0, i32 = 10; i31 < i32; i31++, i32--) {
    try {
        v24.with(127, 2147483647n);
    } catch(e42) {
    }
}
