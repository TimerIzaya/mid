try {
    new Uint8ClampedArray(1435);
} catch(e3) {
}
try {
    new Float32Array(5);
} catch(e7) {
}
try {
    new Float32Array(12);
} catch(e11) {
}
[268435456,3,2147483647,-1636388401,65535,128,13,1149898590];
const v16 = [17454,5553,-4414,65537];
[-9223372036854775808,51372];
class C18 {
    constructor(a20, a21, a22) {
        [-16035,1021876179,9007199254740990,-65535,5,-4096,65535];
        [536870889,-9007199254740990,127,1062952121,268435439,-1];
        const v25 = [37331,-22967,-268435456,-1073741824,-25153,2147483647,536870889,-9007199254740992,-4294967295];
        try {
            this.toString = v25;
        } catch(e26) {
        }
    }
    static #d = Uint8ClampedArray;
    [Uint8ClampedArray] = v16;
    static b = -4096;
    static e;
}
const v27 = new C18(1435, 12, 1435);
const v28 = new C18(36139, 1073741824, 1073741824);
const v29 = new C18(1435, 1435, -4096);
const o30 = {
    [Float32Array]: -4096,
};
try { v27(); } catch (e) {}
delete v28[Float32Array];
Number(v29);
Number[9] &= 1073741824;
try {
    v28.length = 2;
} catch(e36) {
}
