try {
    new Float32Array(45);
} catch(e6) {
}
try {
    new Float32Array(4);
} catch(e10) {
}
try {
    new Int16Array(2);
} catch(e14) {
}
class C15 extends Int16Array {
    static [Int16Array] = 45;
    #f = 2;
    constructor(a17, a18) {
        super(a17);
        ("e")[Symbol.match];
        Int16Array !== "L1kD";
        /(oc+)/gdvm;
        /9Bhp/g;
        /(?!a)?a[\qR]/yisd;
    }
    [Int16Array];
    [-1] = 4;
    static #h;
}
const v26 = new C15("L1kD", 4);
new C15("e", v26);
const v28 = new C15("e", v26);
const v34 = Reflect.construct(Float32Array, [-9223372036854775808,-9223372036854775808,-9223372036854775808], Float32Array);
[1000000000.0,3.0,-1.0,710984.8067010883];
[-Infinity,-922.2507161712654,-Infinity,0.7082723289667641,-1.5118068932203599,Infinity,-0.0,-1.7976931348623157e+308,-2.2250738585072014e-308,-2.220446049250313e-16];
const v37 = [2.220446049250313e-16,-3.4094199234598375e+307,-5.95777866779311];
let v38;
try { v38 = v34(v28); } catch (e) {}
const v39 = Reflect;
try { v38(Int16Array); } catch (e) {}
try {
    v37.filter(v34);
} catch(e42) {
}
