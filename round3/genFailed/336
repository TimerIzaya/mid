try {
    new BigUint64Array(9);
} catch(e3) {
}
try {
    new Uint16Array(1);
} catch(e7) {
}
try {
    new BigInt64Array(8);
} catch(e11) {
}
try {
    new Uint8Array(166);
} catch(e15) {
}
try {
    new Int16Array(2944);
} catch(e19) {
}
try {
    new Float64Array(8);
} catch(e23) {
}
[1000000000000.0,1e-15,1000.0];
const v25 = [-391.7480090544145,NaN,0.005271334582385823];
([-1.7976931348623157e+308,0.0])["forEach"](v25);
const o31 = {
    "maxByteLength": 16,
};
const v33 = new SharedArrayBuffer(16, o31);
try {
    new Int8Array(v33);
} catch(e36) {
}
