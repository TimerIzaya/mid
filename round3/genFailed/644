[];
const v4 = /Uxyz{0,1}?/yiu;
/a+?/yidvm;
const v6 = /(x)(x)(x)\3*H(?<=a)*/gim;
function f7(a8, a9, a10) {
    const o22 = {
        [a10](a12, a13) {
            const o16 = {
                "maxByteLength": 3275,
            };
            const v18 = new SharedArrayBuffer(1680, o16);
            try {
                new Int32Array(v18);
            } catch(e21) {
            }
            return o16;
        },
    };
    return o22;
}
const v23 = f7("8", "number", v6);
const v24 = f7(v23, "8", v23);
f7("number", "number", v24);
try {
    new Uint16Array(150);
} catch(e29) {
}
try {
    new Float64Array(120);
} catch(e33) {
}
try {
    new Int8Array(9);
} catch(e37) {
}
for (let i39 = 0; i39 < 2; i39++) {
    v4.multiline;
    f7(v24, "8", v4);
    v4[-2];
}
