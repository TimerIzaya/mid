const v0 = [255];
[-1,1024,-4096,1945391626,55056,889636471,8,12,1073741823];
[332180901,-54492,-10,6534,-5340,13];
try {
    new BigUint64Array(903);
} catch(e6) {
}
try {
    new Float64Array(3937);
} catch(e10) {
}
try {
    new Uint8Array(4096);
} catch(e14) {
}
class C18 extends BigUint64Array {
    get h() {
        v0[this] &= this.length;
        [978.5025010871525];
        [-1000000000000.0,6.305425678799146,0.8429761806133345];
        return super[[1000000.0,-3.0,0.14134426788018484,-1.7976931348623157e+308,-984814.2536454228]];
    }
    static [Float64Array];
    10000 = 903;
    1 = Uint8Array;
    static #a;
    #d;
}
new C18();
new C18();
new C18();
let v28 = 0;
do {
    new Date();
    v28++;
} while (v28 < 10)
throw 3937;
