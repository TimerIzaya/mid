[];
try {
    new Int32Array(512);
} catch(e4) {
}
try {
    new Uint8ClampedArray(13);
} catch(e8) {
}
try {
    new BigUint64Array(145);
} catch(e12) {
}
const v13 = [Uint8ClampedArray,BigUint64Array,Uint8ClampedArray,Int32Array,Int32Array];
[Int32Array,v13];
[v13,BigUint64Array,145,145];
/\cA/isdvm;
const v17 = /H[\cz]/gyism;
const v18 = /(?<a>.)\k<a>/idu;
class C19 extends Int32Array {
    e = BigUint64Array;
    static f;
    static d;
    [145];
}
const v20 = new C19();
new C19();
const v22 = new C19();
const v24 = [v17,v18];
Reflect.apply(v20.every, v22, v24);
