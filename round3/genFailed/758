class C3 {
    static get h() {
        let v5 = this.g;
        try {
            v5 = -841.769937438482;
        } catch(e6) {
        }
        return "9223372036854775807";
    }
    static d = "9223372036854775807";
    1073741823;
    ["9223372036854775807"];
}
const v7 = new C3();
new C3();
const v9 = new C3();
class C10 {
    p(a12, a13) {
        let v11 = this;
        try {
            v11 = a13;
        } catch(e14) {
        }
        return a13;
    }
    static a = "9223372036854775807";
    f = "9223372036854775807";
    static #e;
    [-1290589860];
}
const v15 = new C10();
const v16 = new C10();
const v17 = new C10();
delete v16[171];
if (d <= v17) {
    let v21;
    try { v21 = v7.concat(v9, v15, d); } catch (e) {}
    let v23 = 1635655924;
    --v23;
    !(8160 >> v21);
    const v28 = +8160;
    try {
        Math.log2(v28);
    } catch(e30) {
    }
    try {
        Math.abs(v21);
    } catch(e32) {
    }
    !8160;
} else {
    C3[8];
    new C3();
}
