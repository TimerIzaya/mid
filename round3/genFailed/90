const v0 = [-5,536870889];
[16,-9223372036854775807,-14,1939851928,4294967296,-5341,-9007199254740990];
const v2 = [16,-4096,30942];
const v4 = new Set();
class C8 {
    static #f;
    [2147483649n] = 2147483649n;
    n(a10, a11, a12) {
        function F13(a15, a16, a17) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = a17;
            } catch(e18) {
            }
            try {
                this.f = a17;
            } catch(e19) {
            }
            try {
                this.h = a16;
            } catch(e20) {
            }
        }
        new F13(a10, v2, v2);
        new F13(a11, a11, v0);
        const v23 = new F13(a12, a11, a11);
        return v23;
    }
}
new C8();
const v25 = new C8();
new C8();
v0.length ||= 10n;
try { v4(v2, v25, 2147483649n, v2); } catch (e) {}
let v29 = -2147483649;
const v30 = v29++;
v29 - v30;
+2147483649n;
try {
    Math.atanh(v2);
} catch(e34) {
}
try {
    Math.max(v30);
} catch(e36) {
}
try {
    Math.exp(2147483649n);
} catch(e38) {
}
try {
    Math.log1p(v2);
} catch(e40) {
}
