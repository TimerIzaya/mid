function f0() {
}
class C1 extends f0 {
    #o() {
        this < this;
        try {
            new f0();
        } catch(e5) {
        }
        return f0;
    }
    [f0] = f0;
    d;
    #d = f0;
    h;
}
new C1();
const v7 = new C1();
const v8 = new C1();
const v9 = /J\p{Script_Extensions=Greek}+/gsdv;
const v10 = /3/gy;
const v11 = /a[a-z]/gium;
const v12 = [v11,v11];
[v12,v12];
[v7,v10];
class C15 extends f0 {
    constructor(a17, a18, a19) {
        let v16 = this;
        super();
        super.e -= v8;
        try {
            v16 >>>= a18;
        } catch(e20) {
        }
        try {
            new C1();
        } catch(e22) {
        }
    }
}
new C15(v10, v10, v10);
const v24 = new C15(v11, v11, v9);
new C15(v11, v24, v9);
try {
    new Uint8Array(4);
} catch(e29) {
}
try {
    new Uint32Array(2274);
} catch(e33) {
}
try {
    new Float64Array(5);
} catch(e37) {
}
