try {
    new BigInt64Array(8);
} catch(e3) {
}
try {
    new Uint32Array(4);
} catch(e7) {
}
try {
    new Int8Array(11);
} catch(e11) {
}
function F12(a14, a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a14;
    } catch(e18) {
    }
    try {
        this.b = a16;
    } catch(e19) {
    }
}
const v20 = new F12(4, 4, 4, 4);
const v21 = new F12(8, 4, 11, 4);
new F12(11, 11, 8, 4);
[v21,v20,v20,Int8Array];
const v24 = [v21,v20,Int8Array,Int8Array,v20];
const v25 = [v20,Int8Array,8,v24];
new Uint32Array(v24, 11);
for (let v30 = 0; v30 < 32; v30++) {
    v25["p" + v30] = v30;
}
[-1000000000000.0,1.082777817287087e+308,0.45023431114582113,1000.0,0.6223988863954624,598293.4843177404,-4.0];
[1000000000000.0,2.220446049250313e-16,1000000000000.0,2.2250738585072014e-308];
[2.0,0.6367906389171869,-1.4467695857719427e+308,-2.832827560495428,1000000.0,-1.3055724728925728,556.8734458021966,-3.3390122024542927e+307,5.0,-1000000000.0];
throw v21;
