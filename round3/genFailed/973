const v0 = [0.28885353903449484,-2.2250738585072014e-308];
[-3.0,0.0,-976.5756455217738,387.77206519886636,287.39268589420726];
const v2 = [0.017993410783576747,-1000000000000.0,1000000.0,739.7865940896118,6.915503102493009,-5.996370617844544];
try {
    new Float64Array(215);
} catch(e6) {
}
try {
    new BigUint64Array(101);
} catch(e10) {
}
try {
    new Uint32Array(2766);
} catch(e14) {
}
function F15(a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 101;
    } catch(e20) {
    }
    try {
        this.d = v0;
    } catch(e21) {
    }
}
new F15(215, 101, v2);
const v23 = new F15(2766, 101, v2);
new F15(v23, 101, v0);
/h/gyi;
/[(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10]/isdv;
/ab\b\d\bcd/gm;
function F31(a33, a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a35;
    } catch(e37) {
    }
    try {
        this.c = Uint32Array;
    } catch(e38) {
    }
}
new F31(-1024n, -1024n, 2766, 101);
new F31(-1024n, -9223372036854775807n, 2766, 2766);
new F31(0n, 0n, 101, 2766);
