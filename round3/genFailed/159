function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 1805234738;
    } catch(e3) {
    }
    try {
        this.f = 1805234738;
    } catch(e4) {
    }
    try {
        this.b = 1805234738;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
class C9 {
    static toString(a11, a12) {
        v6[this] -= v8;
        [Infinity,-1000.0,0.5095801683820902,346806.2318885564,-2.0,-269833.5914043422,1000000000000.0,0.7765690856827695];
        [440610.68679970223,3.0,-0.5771771069408587,-5.1326212156809685,-231145.56641180872,-245715.12569416873,-343226.4054169749];
        [0.6672382852197845,0.46170379977790754,1.0,1000000000.0,-0.18650419993330303,-222.3019060075968,-4.0,-6.09138972664486,166196.77010118798,-1.4229148355479853e+308];
        return this;
    }
    [F0] = F0;
    [v6] = F0;
    #e = v6;
}
new C9();
new C9();
const v18 = new C9();
try {
    new Float64Array(139);
} catch(e22) {
}
try {
    new Float64Array(1298);
} catch(e26) {
}
try {
    new Uint16Array(255);
} catch(e30) {
}
1298 === v7;
class C33 extends v18.constructor {
    static [F0] = v8;
    e;
    static #c;
}
new C33();
C33 < Uint16Array;
