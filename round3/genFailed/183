let v0 = Date;
const v1 = new v0();
function F4(a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a7;
    } catch(e8) {
    }
}
const v9 = new F4(true, true);
const v10 = new F4(v9, v9);
new F4(v1, v10);
class C12 extends v0 {
    static {
        let v14;
        try { v14 = v0.parse(this); } catch (e) {}
        v14?.[v1];
        try {
            Math.asinh(v0);
        } catch(e20) {
        }
        --v0;
        const v23 = (-1 / v0) + 4294967295;
        try {
            Math.fround(v0);
        } catch(e25) {
        }
        v23 + v23;
    }
}
const v27 = new C12();
const v28 = new C12();
const v29 = new C12();
const t33 = null;
t33[9] = v1;
function f30(a31, a32, a33, a34) {
    let v35;
    try { v35 = a31.getTimezoneOffset(); } catch (e) {}
    const o36 = {
    };
    try {
        o36.h = v35;
    } catch(e37) {
    }
    try {
        const o38 = {
        };
        o38.h = v35;
        o38.f = v35;
    } catch(e39) {
    }
    try {
        const o40 = {
        };
        o40.h = v35;
        o40.f = v35;
        o40.g = v35;
    } catch(e41) {
    }
    try {
        const o42 = {
        };
        o42.h = v35;
        o42.f = v35;
        o42.c = a31;
    } catch(e43) {
    }
    return v10;
}
f30(v28, v29, v10, v27);
