try {
    new Int32Array(3999);
} catch(e3) {
}
try {
    new Int16Array(2946);
} catch(e7) {
}
try {
    new BigInt64Array(4096);
} catch(e11) {
}
class C12 extends Int16Array {
    get c() {
        return -1264896619;
    }
    constructor(a18, a19, a20, a21) {
        super(a20);
        [257];
        [-65537,1473181144,-14,3,-2,3,-1549553831,1073741824,55255,10000];
        [-65349,1073741824,-9007199254740990,-65536,3,57415,536870889];
    }
}
const v25 = new C12(3999, 4096, 4096, 4096);
const v26 = new C12(2946, 4096, 3999, 2946);
const v27 = new C12(3999, 2946, 2946, v26);
[-13711,-2147483649,1,9,9223372036854775807,3,-65536];
[268435456,-1,1454055618,483974661];
const v30 = [3,1073741823,1073741824,-11,-536870912,-9,1073741823,-10];
let v31;
try { v31 = v25.entries(); } catch (e) {}
let v32;
try { v32 = v25.map(v31); } catch (e) {}
const v33 = v32;
try {
    v33.b = v30;
} catch(e34) {
}
v27[512] &= v33;
throw v31;
let v37 = -1900262525;
-v27;
!v37;
4096 ^ v26;
--v37;
try {
    Math.cbrt(1899807283);
} catch(e43) {
}
