try {
    new BigInt64Array(1);
} catch(e3) {
}
try {
    new Float64Array(257);
} catch(e7) {
}
try {
    new Uint32Array(358);
} catch(e11) {
}
try {
    new BigInt64Array(3);
} catch(e15) {
}
try {
    new Uint16Array(13);
} catch(e19) {
}
try {
    new Int16Array(8);
} catch(e23) {
}
for (let v24 = 0; v24 < 32; v24++) {
    Uint16Array["p" + v24] = v24;
}
for (let v27 of 8) {
    continue;
    try {
        v27 >>>= v27;
    } catch(e28) {
    }
}
