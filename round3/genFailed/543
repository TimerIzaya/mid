try {
    new Int16Array(1441);
} catch(e3) {
}
try {
    new Uint16Array(2994);
} catch(e7) {
}
try {
    new Float64Array(1);
} catch(e11) {
}
class C15 extends Uint16Array {
    9 = -2.0787614105161503e+307;
    p(a17, a18, a19, a20) {
        try {
            super[1441] = Float64Array;
        } catch(e21) {
        }
        try {
            const o22 = {
            };
            new Uint16Array(o22);
        } catch(e24) {
        }
        return -270012.0904274228;
    }
}
new C15();
const v26 = new C15();
const v27 = new C15();
function f28() {
    arguments[1] **= 2994;
    let v31 = 1760950949;
    const v32 = ++v31;
    1441 >>> 1441;
    1441 | arguments;
    try {
        Math.asin(1441);
    } catch(e36) {
    }
    ~v32;
    return arguments;
}
f28(v27, -2.0787614105161503e+307, Float64Array, v26);
