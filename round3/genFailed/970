try {
    new Float64Array(9);
} catch(e3) {
}
let v5 = Int32Array;
try {
    new v5(64);
} catch(e7) {
}
try {
    new BigInt64Array(2232);
} catch(e11) {
}
class C12 {
    static #m(a14, a15, a16) {
        let v19 = 536870888;
        a15 >>> 9;
        a15--;
        9 && 10;
        v19 || v19;
        return v19--;
    }
    static [BigInt64Array] = BigInt64Array;
}
new C12();
let v27 = new C12();
const v28 = new C12();
class C29 extends Float64Array {
    set f(a31) {
        try {
            v5 ^= v5;
        } catch(e32) {
        }
        try {
            this[64] = 9;
        } catch(e33) {
        }
    }
    static #a = v28;
    [64] = v5;
    147;
}
new C29();
new C29();
new C29();
try {
    new C12();
} catch(e38) {
}
try {
    v27 >>= C29;
} catch(e39) {
}
[v28,v5];
[C12,Float64Array,C12];
[64,C12];
