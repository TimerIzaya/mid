try {
    new Int16Array(3);
} catch(e3) {
}
try {
    new Uint16Array(8);
} catch(e7) {
}
try {
    new BigInt64Array(2683);
} catch(e11) {
}
class C12 extends BigInt64Array {
    constructor(a14, a15) {
        super(a15);
        this[511172043];
        try {
            Math.cbrt(Int16Array);
        } catch(e21) {
        }
        const v22 = Uint16Array >> 13;
        try {
            Math.atan(v22);
        } catch(e24) {
        }
        try {
            Math.cbrt(Int16Array);
        } catch(e26) {
        }
        v22 ** (-464709.796021 - -464709.796021);
    }
}
new C12(3, 2683);
new C12(8, 2683);
new C12(8, 2683);
try {
    new BigInt64Array(3);
} catch(e35) {
}
try {
    new Uint8Array(64);
} catch(e39) {
}
try {
    new Uint8ClampedArray(15);
} catch(e43) {
}
try {
    BigInt64Array != BigInt64Array ? BigInt64Array : BigInt64Array;
} catch(e46) {
}
64 instanceof Reflect.construct(Uint8ClampedArray, [15,3,8], BigInt64Array);
function f51() {
    return 8;
}
