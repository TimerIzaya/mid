/U(ab)\1/gyisu;
const v1 = /(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\11/gys;
const v2 = /[m(?:a+)?]/ysvm;
[219.08916341493637,-1.7976931348623157e+308,600633.2694718514,5.0,4.0,-1.7976931348623157e+308,-1000000000000.0,2.5859400259737377,-0.0,3.0];
[-6.818768361805425,-1.6779079094553574e+308,-373.69297091560713,1.2608001913599737e+308,-7.856384448307745,0.5920843636670818,-2.0,-4.222960746593491e+307];
const v5 = [-1.7976931348623157e+308,1000000.0,144544.74491929612,879.092388150794,42690.84145452967,-3.0,1e-15,4.0,-278104.20018822164];
class C6 {
    [v1];
    static #m(a8, a9) {
        let v7 = this;
        -v7;
        try {
            Math.sinh(a9);
        } catch(e15) {
        }
        let v16 = 1073741824 & 1073741824;
        const v17 = ++v16;
        try {
            Math.atanh(v17);
        } catch(e19) {
        }
        ++v7;
        return a8;
    }
}
new C6();
new C6();
new C6();
try {
    new Uint32Array(5);
} catch(e30) {
}
try {
    new Uint8Array(2416);
} catch(e34) {
}
try {
    new Int32Array(4);
} catch(e38) {
}
new Uint32Array(v5, 2416, 4);
const o40 = {
};
try {
    o40.f = v2;
} catch(e41) {
}
try {
    const o42 = {
    };
    o42.f = v2;
    o42.h = "toString";
} catch(e43) {
}
try {
    const o44 = {
    };
    o44.f = v2;
    o44.h = "toString";
    o44.c = "number";
} catch(e45) {
}
try {
    const o46 = {
    };
    o46.f = v2;
    o46.h = "toString";
    o46.d = Int32Array;
} catch(e47) {
}
