class C3 {
    static #valueOf(a5) {
        try {
            a5 &&= -1.2636399124022846e+308;
        } catch(e6) {
        }
        return 1000;
    }
    #toString(a8) {
        7 >> a8;
        try {
            Math.atanh("50379");
        } catch(e14) {
        }
        try {
            Math.hypot(7);
        } catch(e16) {
        }
        "50379" % a8;
        return 1000;
    }
}
new C3();
new C3();
new C3();
/[\c~]v\xe2\x81\xa3+/gysm;
/g?/yidvm;
const v26 = /pa$?/iv;
const v27 = async (a28, a29, a30, a31) => {
    let v35 = v26 & -1205583539;
    const v36 = Infinity + a30;
    v35--;
    try {
        Math.trunc(v36);
    } catch(e39) {
    }
    try {
        Math.max(-1205583539);
    } catch(e41) {
    }
    const v42 = a29 && Infinity;
    await v42;
    return v42;
};
