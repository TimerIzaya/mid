try {
    new Int8Array(256);
} catch(e6) {
}
let v7 = 3068;
try {
    new Int8Array(v7);
} catch(e10) {
}
try {
    new Int8Array(10);
} catch(e14) {
}
class C15 extends Int8Array {
    static toString(a17, a18) {
        try {
            v7 |= a18;
        } catch(e19) {
        }
        return v7;
    }
    [-2];
    4063 = 256;
    f = "freeze";
    static c;
    [256] = "isView";
    static d = "freeze";
}
const v20 = new C15();
new C15();
new C15();
try {
    Int8Array % Int8Array;
} catch(e24) {
}
try {
    v20.toString = v20;
} catch(e25) {
}
("isView").__proto__;
try {
    v7 >>>= v7;
} catch(e27) {
}
