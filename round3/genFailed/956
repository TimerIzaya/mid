function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 9223372036854775807;
    } catch(e3) {
    }
    try {
        this.f = 9223372036854775807;
    } catch(e4) {
    }
}
const v5 = new F0();
new F0();
const v7 = new F0();
class C8 extends F0 {
    static 128 = v7;
    2369 = F0;
    static #h = F0;
    static get g() {
        try { F0(); } catch (e) {}
        try {
            super.o(F0, F0, v5, v7);
        } catch(e12) {
        }
        return this;
    }
}
new C8();
new C8();
new C8();
for (const v19 of v7) {
    const v22 = new Array(163);
    const v25 = 257 | v22;
    try {
        Math.asinh(v22);
    } catch(e27) {
    }
    try {
        Math.sinh(v25);
    } catch(e29) {
    }
    const v30 = v25 >>> v22;
    try {
        Math.log(163);
    } catch(e32) {
    }
    v30 >>> v25;
    v30 ^ 257;
}
