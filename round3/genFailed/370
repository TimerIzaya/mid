const v3 = /a[bc]d/yivm;
const v4 = /ma|b/gdu;
const v5 = /brS9?/isdum;
const v6 = /(?<!a)+/gs;
const v7 = /w/gdv;
const v8 = /[5a{1,2}?]/gyidv;
function f12(a13, a14, a15) {
    const o45 = {
        [v7]: a14,
        ...v8,
        ...v6,
        set e(a17) {
            let v18;
            try { v18 = a14.compile(a17); } catch (e) {}
            v18[a15] **= 3;
            function f19(a20) {
                function f22(a23) {
                    a13.sticky;
                }
                this.onmessage = f22;
                try {
                    new Uint16Array(255);
                } catch(e31) {
                }
                try {
                    new BigUint64Array(1845);
                } catch(e35) {
                }
                try {
                    new Int32Array(1024);
                } catch(e39) {
                }
            }
            const v42 = [a13];
            const o43 = {
                "arguments": v42,
                "type": "function",
            };
            new Worker(f19, o43);
        },
    };
    return o45;
}
f12(v8, v5, 19433n);
f12(v3, v7, 8n);
f12(v3, v4, 8n);
try {
    +16;
} catch(e50) {
}
try { v7.exec(f12); } catch (e) {}
for (let v52 = 0; v52 < 32; v52++) {
    v3["p" + v52] = v52;
}
