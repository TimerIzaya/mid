let v1 = "bigint";
try {
    new Int8Array(2627);
} catch(e6) {
}
let v7 = 1125;
try {
    new Uint8Array(v7);
} catch(e10) {
}
let v12 = Uint8ClampedArray;
try {
    new v12(512);
} catch(e14) {
}
try {
    new Uint32Array(43);
} catch(e18) {
}
try {
    new Uint8ClampedArray(7);
} catch(e22) {
}
try {
    new Uint32Array(16);
} catch(e26) {
}
[,v7,v1,...v12] = "ERNK2";
for (const v27 of v12) {
    const v28 = v27 in v27;
    try { new v1(v27, "ERNK2", v28, v28); } catch (e) {}
}
Object.defineProperty("ERNK2", "b", { writable: true, configurable: true, value: Uint32Array });
[Uint32Array,v1,Uint32Array,16,"dgce"];
