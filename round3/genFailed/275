try {
    new Uint16Array(666);
} catch(e9) {
}
try {
    new BigInt64Array(10);
} catch(e13) {
}
try {
    new Float32Array(8);
} catch(e17) {
}
class C18 extends BigInt64Array {
    static #f = Float32Array;
    [10] = 666;
    static p(a20, a21, a22) {
        const v23 = this[2];
        try {
            v23.#f &= a20;
        } catch(e24) {
        }
        return v23;
    }
    static #h;
    #e = BigInt64Array;
    static #d = Uint16Array;
    b = 555613763n;
    [4] = 8;
}
new C18();
new C18();
new C18();
const v28 = `
`;
eval(v28);
[-998.77072880288,1000000000000.0,-1.3603479409554518e+308,4.0];
[Infinity,-1.0,-378782.3658167848];
[333428.2766160865,757.4986092594077,-416.8954672904108,4.0,NaN,341.72816955528447,Infinity,-2.391705192262586e+307];
