let v2 = -1000000.0;
class C3 {
    d;
    h = v2;
    0;
    valueOf(a5) {
        function* f6(a7) {
            'use strict';
            try {
                v2 ^= a5;
            } catch(e8) {
            }
            yield* [2,v2,a7,a7,v2];
            return a7;
        }
        f6(-1.7326842875276594);
        return 2;
    }
}
new C3();
const v12 = new C3();
const v13 = new C3();
function F14(a16, a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v12;
    } catch(e20) {
    }
    try {
        this.a = a17;
    } catch(e21) {
    }
    try {
        this.h = a19;
    } catch(e22) {
    }
}
const v23 = new F14(v12, v12, v12, v12);
new F14(C3, v12, v12, v23);
new F14(v23, v13, v12, v13);
[0.013460285495351165];
[2.0,Infinity,152831.83693900215,-518.8797871340528,0.0,-4.0,803.991170075778];
[1000000.0,-627.4606982633148,-1000.0];
const v30 = new WeakSet();
C3[-1];
new WeakSet(v12);
v30[Symbol.unscopables];
try {
    const o36 = {
    };
    new WeakSet(o36);
} catch(e38) {
}
