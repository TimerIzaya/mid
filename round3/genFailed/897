function f3(a4, a5) {
    const o10 = {
        "g": a5,
        [a5]: 1000000000000.0,
        ...a4,
        [1000000000000.0](a7, a8) {
            try {
                this[536870889] = this;
            } catch(e9) {
            }
            return 1000000000000.0;
        },
        "a": 0.0,
        "c": a5,
        "e": a4,
    };
    return o10;
}
const v11 = f3(0.0, 0.0);
const v12 = f3(0.0, 1000000000000.0);
f3(1000000000000.0, -1000000000.0);
const v16 = new Array(8);
class C17 extends f3 {
    constructor(a19, a20, a21) {
        super(1000000000000.0, 1000000000000.0);
        a20[a19];
        const o26 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o26);
    }
    [-1000000000.0];
}
const v28 = new C17(0.0, v11, v12);
const v29 = new C17(1000000000000.0, C17, v28);
let v30 = new C17(1000000000000.0, v28, v29);
({"e":v30,"g":v30,...C17} = v28);
for (const v32 of v12[f3]) {
    try {
        Array(489123980);
    } catch(e35) {
    }
}
let v39 = NaN || v16;
try {
    Math.asinh(-1);
} catch(e41) {
}
v39--;
NaN - 0.0;
