function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 2147483647;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
new F0();
class C10 {
    static {
        Object.defineProperty("Zg", 202, { writable: true, configurable: true, enumerable: true, value: "number" });
        for (let v12 = 0; v12 < 32; v12++) {
            this["p" + v12] = v12;
        }
    }
    static {
        try {
            super[this] = v4;
        } catch(e16) {
        }
    }
    #c;
}
const v17 = new C10();
new C10();
const v19 = new C10();
new Map();
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = Map;
    } catch(e26) {
    }
    try {
        this.b = v5;
    } catch(e27) {
    }
}
new F22(v4, "a");
const v29 = new F22("number", v19);
new F22(v5, v17);
try {
    v29[v5] = NaN;
} catch(e32) {
}
try {
    const t48 = "Zg";
    t48.__proto__ = v17;
} catch(e33) {
}
/\xf0\x9f\x92\xa9/iv;
/(?<!a).[\cZ]?/yisv;
/mY/sdv;
