const v0 = /3/ysdum;
let v1 = /\xed\xb0\x80/isdum;
const v2 = /(6[\cZ])/ym;
try {
    new Uint32Array(9);
} catch(e6) {
}
try {
    new Uint16Array(2391);
} catch(e10) {
}
try {
    new Int8Array(512);
} catch(e14) {
}
class C15 extends Uint16Array {
    get h() {
        try {
            Int8Array ^ Uint32Array;
        } catch(e18) {
        }
        return this;
    }
    [v0] = Int8Array;
    c;
    static #b;
    [9];
}
const v19 = new C15();
new C15();
new C15();
try { v2.exec(v19); } catch (e) {}
C15[536870887];
try {
    v2.compile("3");
} catch(e26) {
}
try {
    --v1;
} catch(e28) {
}
