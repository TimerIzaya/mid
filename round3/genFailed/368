function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 255;
    } catch(e3) {
    }
    try {
        this.g = 255;
    } catch(e4) {
    }
}
new F0();
const v6 = new F0();
new F0();
try {
    new Uint8ClampedArray(182);
} catch(e11) {
}
try {
    new Float64Array(199);
} catch(e15) {
}
try {
    new Int8Array(0);
} catch(e19) {
}
class C20 {
    static #o(a22, a23, a24) {
        if (182 !== this) {
            try {
                super.d = 0;
            } catch(e26) {
            }
        } else {
            /E\u{12345}\u{23456}/gysum;
            /t\u{12345}\u{23456}*/sd;
            /(\p{gc=Nd})/ysdu;
        }
        return Int8Array;
    }
}
new C20();
const v31 = new C20();
new C20();
if (v6) {
    function F33(a35, a36) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.h = a35;
        } catch(e37) {
        }
        try {
            this.a = a36;
        } catch(e38) {
        }
    }
    new F33(199, Uint8ClampedArray);
    new F33(199, v31);
    new F33(0, v31);
} else {
    const o45 = {
        "execution": "sync",
        "type": "minor",
    };
    gc(o45);
}
