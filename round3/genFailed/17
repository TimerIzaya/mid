try {
    new Uint32Array(125);
} catch(e3) {
}
try {
    new BigUint64Array(2168);
} catch(e7) {
}
try {
    new BigUint64Array(1);
} catch(e11) {
}
function f12(a13, a14, a15) {
    const o24 = {
        __proto__: BigUint64Array,
        "e": BigUint64Array,
        4: BigUint64Array,
        13: 2168,
        o(a17, a18, a19, a20) {
            try {
                a17--;
            } catch(e22) {
            }
            try {
                this[13] = a13;
            } catch(e23) {
            }
            return a18;
        },
    };
    return o24;
}
const v25 = f12(125, 2168, 125);
const v26 = f12(2168, 2168, 1);
const v27 = f12(2168, 1, 1);
const v28 = [v27,v25,v27,BigUint64Array];
[[125,v26,v28,v28],2168,f12,2168];
if (f12 <= BigUint64Array) {
    const o35 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o35);
} else {
    f12(1, 1, 125) < 1;
    try {
        f12 * BigUint64Array;
    } catch(e40) {
    }
}
