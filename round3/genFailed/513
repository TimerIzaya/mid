class C3 {
    #a;
    static {
        const v8 = this instanceof "object";
        try {
            super.c = v8;
        } catch(e9) {
        }
    }
    static [-1];
    2019920146;
    [-1098339620];
}
const v10 = new C3();
const v11 = new C3();
const v12 = new C3();
function f13(a14, a15) {
    const o23 = {
        [v12]: C3,
        ...a15,
        "c": v11,
        "h": v10,
        set b(a17) {
            e = v10;
            try { a17(this, C3, a14); } catch (e) {}
            const o19 = {
            };
            try {
                new Proxy(a15, o19);
            } catch(e22) {
            }
        },
    };
    return o23;
}
const v24 = f13(-1098339620, v12);
const v25 = f13("boolean", "boolean");
const v26 = f13("boolean", v24);
function f27(a28, a29) {
    const o36 = {
        7: v24,
        get d() {
            const o34 = {
                "execution": "sync",
                "type": "major",
            };
            gc(o34);
            return a28;
        },
        "a": v26,
        2147483649: v12,
    };
    return o36;
}
f27(v25, v10);
f27(v24, v25);
f27("boolean", v12);
const v40 = delete v10[f27];
for (const v41 of "boolean") {
    let v42;
    try { v42 = v12.o(v41, v40); } catch (e) {}
    %VerifyType(v42);
}
const v44 = Symbol.search;
v25[v44] = v44;
try {
    v25 + v25;
} catch(e46) {
}
