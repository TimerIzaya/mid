try {
    new Float32Array(1);
} catch(e3) {
}
try {
    new Int16Array(201);
} catch(e7) {
}
try {
    new Uint8Array(101);
} catch(e11) {
}
class C12 extends Int16Array {
    [Float32Array];
    2 = Uint8Array;
    static m(a14, a15, a16) {
        try {
            a15.d = Float32Array;
        } catch(e17) {
        }
        return Float32Array;
    }
    [1] = Uint8Array;
}
new C12();
new C12();
const v20 = new C12();
try {
    Uint8Array >>> 101;
} catch(e22) {
}
try {
    v20 >>> 201;
} catch(e24) {
}
/\cA+/gysdum;
/ws/yum;
/vPg2/isdvm;
