function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = -2147483649;
    } catch(e3) {
    }
}
new F0();
new F0();
const v6 = new F0();
try {
    new Float64Array(160);
} catch(e10) {
}
try {
    new Uint16Array(3);
} catch(e14) {
}
try {
    new Int32Array(9);
} catch(e18) {
}
class C19 extends Float64Array {
    set f(a21) {
        this[this] &&= 9;
        const v22 = delete v6?.h;
        try {
            this.byteOffset = v22;
        } catch(e23) {
        }
    }
    static #e = F0;
    [3] = Uint16Array;
    static 1073741824;
    static #d = Int32Array;
    #g = F0;
}
new C19();
new C19();
const v26 = new C19();
const o27 = {
};
try {
    o27.d = Uint16Array;
} catch(e28) {
}
try {
    const o29 = {
    };
    o29.d = Uint16Array;
    o29.g = 160;
} catch(e30) {
}
try {
    const o31 = {
    };
    o31.d = Uint16Array;
    o31.g = 160;
    o31.f = v26;
} catch(e32) {
}
try {
    const o33 = {
    };
    o33.d = Uint16Array;
    o33.g = 160;
    o33.c = Int32Array;
} catch(e34) {
}
