try {
    new Int16Array(6);
} catch(e6) {
}
try {
    new Int8Array(176);
} catch(e10) {
}
try {
    new BigInt64Array(3225);
} catch(e14) {
}
function f15() {
    return BigInt64Array;
}
try {
    new Float64Array(3916);
} catch(e19) {
}
try {
    new Int32Array(512);
} catch(e23) {
}
try {
    new Uint8Array(2181);
} catch(e27) {
}
for (const v28 of 176) {
    Reflect.construct(BigInt64Array, [2181], Float64Array);
}
(6).__proto__;
f15();
%PrepareFunctionForOptimization(f15);
f15();
f15();
%OptimizeFunctionOnNextCall(f15);
f15();
