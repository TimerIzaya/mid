function f0() {
}
const v1 = [0,9,2,1740287663,2,2,15];
const v2 = [-2,6,1679419730,1073741823];
[1073741823,-4294967295,-978195500,57244,-1073741824];
try {
    new Uint32Array(1053);
} catch(e7) {
}
try {
    new Uint16Array(1100);
} catch(e11) {
}
try {
    new Int32Array(161);
} catch(e15) {
}
class C16 extends f0 {
    static 3673685141;
    constructor(a18, a19) {
        super();
        throw this;
        try { v1.copyWithin(1100, a19); } catch (e) {}
        try { new a19(); } catch (e) {}
        function f22() {
            return 161;
        }
    }
    e = Uint32Array;
    b;
    536870889 = Uint16Array;
}
const v23 = new C16(v1, Uint32Array);
const v24 = new C16(v1, v23);
const v25 = new C16(v2, v24);
try {
    ~v23;
} catch(e27) {
}
const o28 = {
};
try {
    o28.e = v1;
} catch(e29) {
}
try {
    const o30 = {
    };
    o30.e = v1;
    o30.a = f0;
} catch(e31) {
}
try {
    const o32 = {
    };
    o32.e = v1;
    o32.a = f0;
    o32.b = Int32Array;
} catch(e33) {
}
try {
    const o34 = {
    };
    o34.e = v1;
    o34.a = f0;
    o34.c = v25;
} catch(e35) {
}
