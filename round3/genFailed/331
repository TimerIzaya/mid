const v0 = [-9223372036854775808,-2147483649,1676845749,-4294967296,38838,0,536870889];
const v1 = [4294967295];
const v2 = [10,4096,40126,-128,2,-536870912,268435456,268435440,1066547533];
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = v1;
    } catch(e7) {
    }
}
const v8 = new F3(v0, v0);
new F3(v8, v1);
const v10 = new F3(F3, v0);
/a\q/ydm;
/(?:ab)/gisdum;
/[\11a]\x60/gisdm;
let v20;
try { v20 = v2.findLast(v8, v8); } catch (e) {}
/(?=a){9,10}a(ab)/ysdm;
/a/gim;
/(a)/gyvm;
v20[Proxy] **= 3;
try {
    Math.imul(v10, 268435456);
} catch(e32) {
}
const v33 = ~268435456;
try {
    Math.log10(268435456);
} catch(e35) {
}
v33 + v33;
v10 * 268435456;
try {
    Math.sinh(v10);
} catch(e39) {
}
