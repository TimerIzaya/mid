let v1 = Float32Array;
try {
    new v1(7);
} catch(e3) {
}
try {
    new Uint8ClampedArray(736);
} catch(e7) {
}
try {
    new Uint8Array(801);
} catch(e11) {
}
function f12() {
    return 7;
}
const v13 = [Uint8Array];
[v13,736,Uint8Array,[801,v13]];
/[(?=)]/gdv;
const v17 = /(ER\p{Script_Extensions=Greek}k.r)/yum;
/YHrd\1\2(a(?:\1(b\1\2))\2)\1+/iu;
try {
    v17[f12] = Uint8Array;
} catch(e22) {
}
[,v1] = "ROheB";
f12();
v13[16];
try {
    a + Uint8ClampedArray;
} catch(e27) {
}
