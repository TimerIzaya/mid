try {
    new Int16Array(15);
} catch(e3) {
}
try {
    new Uint32Array(2859);
} catch(e7) {
}
let v8 = 335;
try {
    new Int8Array(v8);
} catch(e11) {
}
[9635,-6,1553635110];
const v14 = [9007199254740991,-1073741824,-9007199254740990];
[14,-1777615885,-2147483648,7,1,-863099959,-12,-268435456,-724489881,-25451];
[3.0,56.39402927305241,1.0,1.4125116411518684e+308];
[-2.220446049250313e-16,1.7976931348623157e+308,1000000000000.0,-998313.1196152819,-2.0089722045959313,-2.220446049250313e-16,3.0];
[6.790021809202443,1000000.0,-401699.64914618107,1000000.0];
const v20 = Symbol.iterator;
v14[v20] = false;
const v25 = v20 + v8;
-536870912 ^ 4.514903723400067;
try {
    Math.atan(1637603796);
} catch(e28) {
}
v8++;
v25 ** (v20 << 4.514903723400067);
