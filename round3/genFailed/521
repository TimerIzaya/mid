const v0 = /(?:ab)|cde/sum;
const v1 = /(?!(a))\1/gyiu;
const v2 = /(abc|def|ghi)/gsu;
function f3() {
    return v2;
}
const v4 = [-2.2250738585072014e-308,-263.6047692178731,2.2250738585072014e-308,-4.0,160.64496402771397,7.675944737548901e+307,1000000.0,-964936.4079408385,1000000000000.0];
const v5 = [52.313065890022926];
const v6 = [3.0675439379204477,1.7976931348623157e+308,-0.11306207564363646,1.7976931348623157e+308,2.2250738585072014e-308,-2.220446049250313e-16,-577.3127897696453];
const v7 = [v1,v6];
const v8 = [v7,v1];
const v9 = [v8,v8,v4,v6];
const v10 = /yJS(a)\1/gyisdum;
const v11 = /\p{Changes_When_NFKC_Casefolded}/isum;
const v12 = /\P{Any}*/gydm;
class C13 {
    constructor(a15, a16, a17) {
        f3();
        const v19 = super.c;
        function F20(a22, a23, a24) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = v11;
            } catch(e25) {
            }
            try {
                this.c = this;
            } catch(e26) {
            }
            try {
                this.b = this;
            } catch(e27) {
            }
        }
        new F20(v10, a17, v10);
        new F20(v19, v12, v10);
        new F20(v12, v8, v2);
    }
}
new C13(f3, v5, v12);
const v32 = new C13(v0, v6, v1);
new C13(v32, v8, v1);
v4.length /= v9;
let v34 = 0;
while (v34 < 0) {
    try { v7.findLast(f3, v10); } catch (e) {}
    v34++;
}
try {
    v8.length = 14;
} catch(e40) {
}
