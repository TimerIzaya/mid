const v1 = new Date();
const v2 = /[\0](?:a+){0,0}+/gyisvm;
const v3 = /[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]/gysdm;
const v4 = /e/gu;
const v5 = [v4,v1,v4,Date];
const v6 = [v5,v5];
const v7 = [v3,v2,v2,Date,v3];
class C8 extends Date {
    static #toString(a10, a11) {
        let {"a":v12,} = v1;
        try {
            new Date();
        } catch(e14) {
        }
        return a11;
    }
    #m(a16, a17) {
        Object.defineProperty(this, a17, { enumerable: true, get: Date, set: Date });
        try {
            v2[512] = v3;
        } catch(e18) {
        }
        let v19;
        try { v19 = a16.reverse(); } catch (e) {}
        return v19;
    }
}
let v20 = new C8();
const v21 = new C8();
const v22 = new C8();
[v22];
[v5,v22,v5,v2,v6];
const v25 = [v6,v2,C8];
try {
    new C8();
} catch(e27) {
}
const v28 = [v6,v1,v7,C8,v20];
[v28,v21,[v21,v28,v21,v25,v6]];
try {
    v20 = v1;
} catch(e31) {
}
