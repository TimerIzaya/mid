try {
    new Float32Array(3352);
} catch(e3) {
}
try {
    new BigInt64Array(129);
} catch(e7) {
}
try {
    new Float64Array(6);
} catch(e11) {
}
class C12 extends Float64Array {
    static 9 = 3352;
    static n(a14, a15, a16, a17) {
        super[Float64Array];
        new Date();
        try {
            a14 ^= 3352;
        } catch(e21) {
        }
        return 6;
    }
    [129];
    c;
    d;
    a;
}
new C12();
const v23 = new C12();
const v24 = new C12();
const v28 = [-2.2250738585072014e-308,0.5450056346072648,0.13585754915532366,1.705804186361054e+308,5.0,0.09467643256383951,NaN,2.2250738585072014e-308,-214.73113764813536,-1.0];
const v29 = [1000000000.0,1.0,-197.4948838393284,-178.95919707503288,0.5100996616328266,-2.220446049250313e-16];
[NaN,-6.087967765088411e+307,1.0083158362199716e+308,2.220446049250313e-16,2.220446049250313e-16,5.0,-1000.0,2.2250738585072014e-308,0.1645550564488607];
let {"byteOffset":v31,...v32} = v24;
const v33 = 6 instanceof Float64Array;
try {
    v33 % v23;
} catch(e35) {
}
delete C12[1000.0];
new Float32Array(129, 3352, 129);
try {
    v29.__proto__ = v28;
} catch(e38) {
}
