let v0 = Date;
const v1 = new v0();
function f2(a3) {
    const o10 = {
        ...v1,
        "d": v1,
        "c": v0,
        "g": v0,
        __proto__: v0,
        "e": a3,
        2886: v1,
        p(a5, a6) {
            this in v0;
            v0["now"]();
            return v1;
        },
        [a3]: a3,
        8: v1,
    };
    return o10;
}
const v11 = f2(f2);
f2(v1);
const v13 = f2(v11);
const v14 = [923.0667846208487];
[6.775399038421142,1000.0,95266.5511000061,-4.0,5.0,2.735496372862752e+307,6.045771907074773];
const v16 = [-7.1118651595364035,1.5639108479682744e+308,0.9030346538442072,-2.220446049250313e-16,1000000000000.0,2.0,2.0,-3.0,-2.2250738585072014e-308];
function F17(a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a20;
    } catch(e21) {
    }
    try {
        this.b = v13;
    } catch(e22) {
    }
    try {
        this.d = a20;
    } catch(e23) {
    }
}
const v24 = new F17(v11, v16);
new F17(v13, v14);
new F17(v14, v14);
try {
    new Int32Array(2006);
} catch(e30) {
}
try {
    new Float64Array(3);
} catch(e34) {
}
try {
    new BigInt64Array(64);
} catch(e38) {
}
class C39 extends F17 {
    #b;
    g = v24;
    static [Int32Array];
    static 0 = v13;
}
new C39();
new C39();
new C39();
try {
    v0++;
} catch(e44) {
}
