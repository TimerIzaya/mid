try {
    new Uint8ClampedArray(3);
} catch(e3) {
}
try {
    new BigUint64Array(127);
} catch(e7) {
}
try {
    new BigInt64Array(4);
} catch(e11) {
}
try {
    new Uint8Array(1984);
} catch(e15) {
}
try {
    new Float32Array(1604);
} catch(e19) {
}
try {
    new Uint32Array(3525);
} catch(e23) {
}
class C24 extends Uint32Array {
    static [BigInt64Array] = Uint8Array;
    [4];
    [Float32Array] = Uint32Array;
}
new C24();
new C24();
new C24();
const o30 = {
    "maxByteLength": 1073741825,
};
const v32 = new SharedArrayBuffer(128, o30);
try {
    new Uint8Array(v32);
} catch(e35) {
}
