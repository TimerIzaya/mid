let v1 = "Of94f";
class C3 {
    static #o(a5, a6) {
        try {
            a5[a5] = this;
        } catch(e7) {
        }
        return a6;
    }
    m(a9, a10) {
        try {
            v1 & v1;
        } catch(e12) {
        }
        let v13;
        try { v13 = new this(v1, "g", this, this); } catch (e) {}
        try {
            const t17 = "setUTCFullYear";
            t17["setUTCFullYear"] = v13;
        } catch(e14) {
        }
        return a9;
    }
}
new C3();
new C3();
new C3();
let v18 = [64,-41983,64103,64,-14,7,371498165,-10,-65535];
let v19 = [315912272,10,-65537,-61142,5899,0];
const v20 = [49435,-12,-128,-9223372036854775807,-14,51914];
function f21() {
    return v20;
}
class C22 extends f21 {
    static m(a24, a25, a26) {
        "g" != a26;
        let v28 = delete a25[-1];
        [v1,v28,v18,v19] = a25;
        a25 instanceof v18;
        try {
            Math.imul(f21, v1);
        } catch(e33) {
        }
        const v34 = -9223372036854775808 & f21;
        v1++;
        try {
            Math.log2(v1);
        } catch(e37) {
        }
        const v38 = v1 | v34;
        try {
            Math.acos(v38);
        } catch(e40) {
        }
        return v20;
    }
}
let v41 = new C22();
new C22();
new C22();
let v47;
try { v47 = ("boolean").toUpperCase(); } catch (e) {}
try {
    v41 = v47;
} catch(e48) {
}
const v49 = "g" instanceof v19;
try { new v47("g", v20, v49); } catch (e) {}
