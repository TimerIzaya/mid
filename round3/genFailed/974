const v0 = [5,-50236,-9223372036854775808,311494413];
const v1 = [5,10000,268435441,7,1073741824,13,-1671512731,10,-823698256,27949];
const v2 = [97341503,1848256133,-9223372036854775807,-6,536870889,-65536];
const v4 = new Date();
function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = v1;
    } catch(e12) {
    }
    try {
        this.a = a10;
    } catch(e13) {
    }
}
new F8("R", "qW");
const v15 = new F8("-12", "R");
const v16 = new F8("R", "R");
function F17(a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = "R";
    } catch(e22) {
    }
}
const v23 = new F17(v15, v0, "qW");
new F17(F8, v0, v23);
const v25 = new F17(v16, v1, v16);
Object.defineProperty("qW", v4, { configurable: true, set: Date });
const v27 = v1["shift"](..."shift", ...v2, ..."-12", ..."R");
Date.prototype *= v27;
Date.prototype += v27;
try { v27(v16, F17, "qW", v27, "shift"); } catch (e) {}
v25[8];
const o30 = {
    "call": Date,
    "getOwnPropertyDescriptor": Date,
    "getPrototypeOf": Date,
    "preventExtensions": Date,
};
try {
    new Proxy(Date, o30);
} catch(e33) {
}
