try {
    new Int16Array(9);
} catch(e3) {
}
try {
    new BigUint64Array(973);
} catch(e7) {
}
try {
    new Float32Array(1024);
} catch(e11) {
}
function f15() {
    return 536870888;
}
class C16 extends BigUint64Array {
    constructor(a18, a19, a20, a21) {
        super(a21);
        const o22 = {
        };
        try {
            o22.e = Int16Array;
        } catch(e23) {
        }
        try {
            const o24 = {
            };
            o24.e = Int16Array;
            o24.h = Int16Array;
        } catch(e25) {
        }
        try {
            const o26 = {
            };
            o26.e = Int16Array;
            o26.h = Int16Array;
            o26.c = a20;
        } catch(e27) {
        }
        try {
            const o28 = {
            };
            o28.e = Int16Array;
            o28.h = Int16Array;
            o28.c = Float32Array;
        } catch(e29) {
        }
    }
}
const v30 = new C16(C16, 1024, 45509682, BigUint64Array);
const v31 = new C16(536870888, 257, 45509682, 257);
const v32 = new C16(BigUint64Array, Float32Array, 45509682, Float32Array);
new f15();
for (let v34 = 0; v34 < 32; v34++) {
    v32["p" + v34] = v34;
}
function F37(a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a39;
    } catch(e41) {
    }
    try {
        this.e = 45509682;
    } catch(e42) {
    }
}
new F37(v30, 536870888);
new F37(v30, 9);
new F37(v31, 973);
