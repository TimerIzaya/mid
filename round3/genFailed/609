try {
    new BigUint64Array(848);
} catch(e3) {
}
try {
    new Uint16Array(1);
} catch(e7) {
}
try {
    new Uint16Array(175);
} catch(e11) {
}
class C12 extends Uint16Array {
    p(a14, a15, a16) {
        function f18() {
            return this;
        }
        return Uint16Array;
    }
    static [-1] = Uint16Array;
    static #d = 1;
    f = Uint16Array;
    [175];
}
new C12();
const v20 = new C12();
new C12();
let v22 = 1000;
try {
    new Uint16Array(v22);
} catch(e25) {
}
try {
    new Int16Array(64);
} catch(e29) {
}
try {
    new Int16Array(423);
} catch(e33) {
}
for (const v34 in v20) {
    for (const v35 of v20) {
        const v40 = v22 * -2137876190;
        const v41 = v22--;
        913.9581696540224 >> v40;
        !v41;
    }
}
