268435440 ** 2700;
const o11 = {
    o(a6, a7, a8, a9) {
        class C10 {
            static #b;
        }
        return this;
    },
};
class C13 {
    static valueOf(a15, a16) {
        try {
            super.h = Infinity;
        } catch(e17) {
        }
        Math.log10(268435456);
        Math.asinh(268435440);
        const v22 = [128,8,8,-48969,65536];
        class C23 {
        }
        v22[2874] = C23;
        const v24 = this === a16;
        try { a15(v24, a16); } catch (e) {}
        return -815602111;
    }
    static #f;
    static g;
    g;
}
const v28 = new WeakMap();
v28.set(BigInt64Array);
Array(-2010366698);
C13.f = C13;
const v33 = new C13();
v33.g = v33;
const v34 = new C13();
const v35 = new C13();
class C36 {
    static #f;
    static [v34] = v33;
    constructor(a38, a39, a40, a41) {
        this[1622] = this;
        a38.b = a38;
        const v42 = a40?.constructor;
        const v43 = [0.10181248412114619];
        v43 >>> v43;
        Math.pow(-2, 268435440);
        try { new v42(); } catch (e) {}
        const v51 = Symbol.match;
        Symbol.for(v51.description);
        a40[v51];
    }
    static #h = Infinity;
    #a = v34;
    static 5 = C13;
    1622;
    static 10 = v33;
}
const v56 = new C36(v35, Infinity, v33, C13);
v56[1622] = v56;
const v57 = new C36(v33, "number", v35, C13);
new C36(C13, v57, v34, v34);
2147483647 != 2147483647;
class C63 {
}
[Float32Array,Int32Array,Float64Array];
Map.name;
class C71 extends Map {
    constructor(a73, a74) {
        super();
        const v75 = super.entries();
        try { v75.next(); } catch (e) {}
        v75[65535] = -5n;
    }
}
C71.length;
new C71();
