let v3 = 35969;
const v4 = -v3;
class C7 {
    m(a9, a10, a11) {
        this.e;
        const v13 = v3;
        return 536870887;
    }
    constructor(a15, a16) {
        a15 >>> a15;
        a16 !== a16;
        try {
            v3 = -1;
        } catch(e19) {
        }
    }
    static 5;
    10 = 1223037909;
}
C7.prototype = C7;
C7[5] = C7;
const v20 = new C7(v3, 536870887);
const v21 = v20?.constructor;
let v22;
try { v22 = new v21(v4, 1223037909); } catch (e) {}
const v23 = new C7(536870887, 536870887);
v23[10];
const v25 = new C7(64902, 1223037909);
v25[10];
v25[10] = 5;
const v27 = [v20,v25,64902];
v27[0] = v27;
const v28 = [C7,-1,v23,v25];
try { v28.reduceRight(-1); } catch (e) {}
const v30 = [v20,v20];
try { v30.map(v30); } catch (e) {}
const v32 = /\b/ysdvm;
function f33(a34, a35) {
    try {
        new Int16Array(10);
    } catch(e39) {
    }
    try {
        new Int8Array(4096);
    } catch(e43) {
    }
    try {
        new Uint32Array(2);
    } catch(e47) {
    }
    return v22;
}
v32[Symbol.toPrimitive] = f33;
v32.b = v32;
const v52 = 5 & 5;
Math.floor(v32);
Math.tan(v52);
