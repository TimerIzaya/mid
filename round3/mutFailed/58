function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = F0;
    try {
        this.f = 54742;
        const v3 = [868927.7057093903,-3.0,NaN,Infinity];
        try { v3.find(this); } catch (e) {}
        Set.length = Set;
        const v6 = new Set();
        try { ("function").trimLeft(); } catch (e) {}
        ("function")[6];
        const v10 = [v6,v3];
        const o11 = {
            "arguments": v10,
            "type": "function",
        };
    } catch(e12) {
    }
}
new F0();
const v14 = new F0();
const v15 = new F0();
v15.f;
let v17;
try { v17 = v15.hasOwnProperty(F0); } catch (e) {}
v17 && v17;
function f19() {
    return v15;
}
const v21 = true || true;
v21 || v21;
const v23 = v21 || v21;
v23 && v23;
1998818886 >>> 1998818886;
807261310 | 807261310;
function F31(a33, a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    a33++;
    -a35;
    try { this.propertyIsEnumerable(v17); } catch (e) {}
    a33 >> a33;
    -a35;
    this.f = a35;
    try {
        this.f = a35;
    } catch(e41) {
    }
    try {
        this.e = v14;
    } catch(e42) {
    }
    try {
        this.a = a33;
    } catch(e43) {
    }
}
F31.arguments;
const v45 = new F31(807261310, v14, 807261310);
const v46 = new F31(v45, -514223608, 1998818886);
const v47 = v46.a;
v47.f = v47;
v47.e.f;
const v50 = new F31(F0, null, 807261310);
const v51 = v50?.a;
try { new v51(); } catch (e) {}
let v53;
try { v53 = new v51(); } catch (e) {}
v53.d = v53;
let v54;
try { v54 = new v51(); } catch (e) {}
v54.f;
class C57 {
}
const v58 = C57?.toString;
try { new v58(); } catch (e) {}
const v60 = new C57();
try { v60.hasOwnProperty(1998818886); } catch (e) {}
function f62(a63, a64, a65, a66) {
    return v60;
}
Object.defineProperty(v60, -1.6442526835335361e+308, { enumerable: true, get: f62 });
