class C3 {
    p(a5) {
        let v6;
        try { v6 = new this(a5, a5); } catch (e) {}
        const v7 = delete v6?.[2234];
        try {
            v6[v7] = v6;
        } catch(e8) {
        }
        return 1000;
    }
    static f = 127;
    static #a = 127;
    e;
    static #toString(a10) {
        C3[a10] &&= -75711282;
        try {
            this.length = 2;
        } catch(e12) {
        }
        return this;
    }
    [127];
}
new C3();
const v14 = new C3();
const v15 = new C3();
function F19(a21, a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    function f25() {
        let v26;
        try { v26 = a24(1000, v14); } catch (e) {}
        try {
            this[a23] = v26;
        } catch(e27) {
        }
        return 2.0;
    }
    a23[Symbol.toPrimitive] = f25;
    if (this !== -75711282) {
        try {
            a23--;
        } catch(e32) {
        }
    } else {
        a23[11] /= -75711282;
    }
    try {
        this.e = 2.0;
    } catch(e33) {
        Object.defineProperty(v15, "e", { enumerable: true, value: 89.32391462570445 });
        const o34 = {
        };
        try {
            new Proxy(C3, o34);
        } catch(e37) {
        }
    }
}
new F19(2.0, -75711282, v15, 2.0);
const v39 = new F19(2.0, -75711282, -75711282, 89.32391462570445);
new F19(2.0, -75711282, 127, 89.32391462570445);
function f43(a44) {
    class C46 extends Uint8ClampedArray {
    }
    return a44;
}
const v48 = Symbol.toPrimitive;
Uint8ClampedArray[v48] = f43;
try {
    Uint8ClampedArray(v14);
} catch(e50) {
}
try {
    Float32Array(1661);
} catch(e54) {
}
const v58 = [[-1936613813,476353957,-6]];
function f60() {
    return v39;
}
function f61(a62) {
    try {
        v48.c = a62;
    } catch(e63) {
    }
}
Object.defineProperty(BigInt64Array, 2, { configurable: true, enumerable: true, get: f60, set: f61 });
v58["toLocaleString"](BigInt64Array);
try {
    Float64Array(89.32391462570445);
} catch(e67) {
}
const v68 = [-4.431203448016287,-3.672933541010808,-2.2250738585072014e-308,-253.08789507660492,-653.7457948308585,1.7232345413685356e+308,-709.3641981834688,20.071785972232306,-Infinity];
v68[3369] = -75711282;
const v69 = [-730214.4690320502,-692979.2538207422,-1.0,NaN];
const v70 = [-5.597376826900087e+307,-1.2904579632989784e+308,744454.3081307365];
function F74(a76, a77, a78) {
    if (!new.target) { throw 'must be called with new'; }
}
const v79 = new F74(1153, 4, 1153);
const v80 = new F74(1153, 1153, 1153);
v80.h = 1000;
new F74(4, 1661, 4);
v79.h &= 4;
v80.h;
v68[3369];
delete v69[Uint8ClampedArray];
v70 instanceof Float32Array;
