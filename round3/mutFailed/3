const v0 = [2.1238778521464845e+307,1.7976931348623157e+308,0.7320828796931522,-1.7117736772097074e+308];
const v1 = [916576.6019078919,1.294119920238646e+308,-3.7657497409427733e+307,1.0,-2.0,-2.0];
const v2 = [-1000000000000.0];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "length", { enumerable: true, value: F3 });
    const v6 = this?.constructor;
    try { new v6(v2); } catch (e) {}
    try {
        this.d = v0;
    } catch(e8) {
    }
}
F3.name;
const v10 = new F3(v2);
const v11 = new F3(v1);
v11.e = v11;
const v12 = new F3(v1);
function f13() {
    return v0;
}
function f14(a15) {
    new Uint16Array([10,255,10,1073741824,8,536870887,-353817650]);
}
Object.defineProperty(v12, "length", { get: f13, set: f14 });
v12.length;
let v22 = -13;
v22++;
class C24 {
    [-8];
    static {
        try { new this(); } catch (e) {}
        function F27(a29, a30) {
            if (!new.target) { throw 'must be called with new'; }
        }
        const o34 = {
            set c(a32) {
            },
            get b() {
                return this;
            },
        };
        v10.__proto__;
        for (let v36 = 0; v36 < 24; v36++) {
            Int8Array.length;
            try {
                new Int8Array(1);
                const v42 = new WeakMap();
                function f43() {
                    return v42;
                }
                f43.prototype = f43;
            } catch(e44) {
            }
            const v46 = /U\x01/yum;
            const v47 = /C?/gysu;
            class C48 {
                static #e = v46;
                #valueOf(a50, a51, a52, a53) {
                    try {
                        --a51;
                    } catch(e55) {
                    }
                    return a50;
                }
                127 = v0;
                h = v0;
            }
            C48.name;
            const v57 = new C48();
            function f58(a59, a60) {
                for (let v61 = 0; v61 < 100; v61++) {
                    f14(a60);
                }
                return a60;
            }
            v57[Symbol.toPrimitive] = f58;
            let v65;
            try { v65 = v47.compile(v57); } catch (e) {}
            const v67 = Uint8Array?.constructor;
            try { new v67(v65); } catch (e) {}
            try {
                new Uint8Array(8);
            } catch(e70) {
            }
            8 === 8;
            try {
                new Float64Array(8);
            } catch(e75) {
                ["function",,];
                ([-208752.70627004432,267478.74687256874]).__proto__;
            }
        }
    }
}
const v81 = new F3();
v81.d;
new C24();
new C24();
let v85 = 2.220446049250313e-16;
false < 65535n;
class C89 {
    #m(a91) {
    }
}
try { new C89(); } catch (e) {}
Math.acos(v85++);
