try {
    new Int32Array(129);
    function f6(a7, a8) {
        return f6;
    }
    class C9 extends f6 {
    }
    for (let v10 = 0; v10 < 5; v10++) {
        function f11() {
            return f11;
        }
    }
} catch(e12) {
}
try {
    new Int16Array(116);
} catch(e16) {
}
try {
    const t19 = -808330.1779470039;
    new t19(48);
} catch(e20) {
}
try {
    new Float64Array(873);
} catch(e24) {
}
try {
    new BigUint64Array(3462);
} catch(e28) {
}
try {
    new Uint8ClampedArray(3085);
} catch(e32) {
}
class C36 {
    static #p(a38) {
        a38[7] /= a38;
        super.g;
        return -4096;
    }
    1 = 7;
    static a = Uint8ClampedArray;
    toString(a41) {
        function f42(a43, a44) {
            const o45 = {
                ...a43,
                6: 7,
            };
            return a41;
        }
        f42(f42, a41);
        f42(492.9155430730859, f42(492.9155430730859, f42));
        return 492.9155430730859;
    }
}
const t56 = -443.8704094644934;
const v49 = new t56();
const v50 = new Uint8ClampedArray();
const v51 = new BigUint64Array();
function f52() {
    try {
        C36 = v49;
    } catch(e53) {
    }
    return 129;
}
v51.toString = f52;
const v54 = [-3.726452911385767,1e-15,1000000000000.0,4.0,0.39067843659676393,-1000.0,-1.7976931348623157e+308];
48 ** v51;
const v57 = -128 >> 7;
try {
const t0 = 48;
t0(v54, v57, v50);
} catch (e) {}
