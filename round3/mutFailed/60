const o1 = {
};
function f2(a3, a4, a5) {
    return o1;
}
try {
    new Int32Array(1605);
} catch(e8) {
}
try {
    const t10 = 128;
    new t10(128);
    const o14 = {
        set f(a13) {
        },
    };
    class C15 {
        constructor(a17) {
            try {
                a17[1073741825] = this;
            } catch(e18) {
            }
        }
    }
} catch(e19) {
}
try {
    new BigInt64Array(1);
} catch(e23) {
}
const v24 = [1605,1,BigInt64Array];
[Uint32Array,1605,v24];
[1605,v24,1,Int32Array];
for (let v33 = 0; v33 < 25; v33++) {
    class C35 {
    }
    class C36 extends C35 {
        constructor(a38, a39) {
            const o42 = {
                set b(a41) {
                },
            };
            Promise.any();
            super();
            const o47 = {
                "maxByteLength": 3360760420,
            };
            const v49 = new ArrayBuffer(3717, o47);
            try {
                new BigInt64Array(v49);
            } catch(e52) {
            }
        }
    }
    const v53 = new C36();
    new C36(v53, v53);
    function f55(a56, a57, a58) {
        return a56;
    }
    class C60 extends Map {
    }
    const t61 = "a";
    const v61 = new t61();
    const t63 = [5.0,-2.0,-1000.0,-Infinity,2.220446049250313e-16];
    t63.__proto__ = [1.0,1000000.0,-2.0,5.0,792.4008429556027,-1.0];
    v61.acos();
    const o66 = {
        "maxByteLength": v33,
    };
}
