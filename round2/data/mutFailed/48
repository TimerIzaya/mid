class C3 {
    static {
        try {
            this[-1439309421n] /= this;
        } finally {
            try {
                super.padStart(this, this, -1439309421n, this, this);
            } catch(e6) {
            }
        }
    }
    static g = 4n;
    #f = -1439309421n;
    static [4n] = -1439309421n;
}
new C3();
const v8 = new C3();
const v9 = new v8();
function F10(a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a12;
    } catch(e15) {
    }
    try {
        this.b = a13;
    } catch(e16) {
    }
    try {
        this.c = v8;
    } catch(e17) {
    }
}
new F10(4n, 198213604n, 198213604n);
new F10(4n, 4n, 4n);
new F10(198213604n, 4n, 4n);
function F24(a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
}
const v28 = [NaN,-1000000000.0];
[-1e-15,-7.123248535241268,0.9391312789822176,-1.5770788962113171e+308];
function F30(a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
}
const v34 = new F30(v28);
try {
const t0 = 11;
t0(v9);
} catch (e) {}
/(?:a{5,1000000}){3,1000000}((((.).).).)*/iv;
const v41 = Array(Array);
class C42 {
    static #f = v41;
    static f;
}
delete v34.f;
