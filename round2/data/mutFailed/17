const v6 = Reflect.construct(2147483647n, [Reflect,2147483647n], 2147483647n);
try { new v6(Reflect, Reflect, Reflect); } catch (e) {}
256n * 256n;
try { Map.constructor(0n); } catch (e) {}
const v16 = new Map();
35416 !== 35416;
-1350795545 <= -1350795545;
class C22 {
    get f() {
        const v25 = super.c;
        v25 << this;
        let v27;
        try { v27 = this.unregister(); } catch (e) {}
        super[v27] = v16;
        typeof v25 === "symbol";
        try { h(256n, 2147483647n, h, 5n, -1350795545); } catch (e) {}
        return 2147483647n;
    }
    g = 2147483647n;
    static p(a33, a34) {
        let v35 = 10;
        for (; v35--;) {
            [a33,v16,a34,-1350795545,-128n];
            [-1350795545,35416,a33];
            [0n,35416];
        }
        return -735432460;
    }
}
C22.length;
new C22();
new C22();
new C22();
try { WeakMap.toString(); } catch (e) {}
const v46 = new WeakMap();
let v50 = v46 & [2.220446049250313e-16,1.7893102174045842e+308];
v50++;
function f0() {
}
const v2 = new Date();
class C7 extends Date {
    static #h = f0;
    [false] = false;
    get b() {
        v2[Symbol.search];
        return this;
    }
    #toString(a16, a17, a18) {
        try {
            new Float32Array(512);
        } catch(e22) {
        }
        try {
            new Float32Array(128);
        } catch(e26) {
        }
        try {
            new Uint8ClampedArray(2033);
        } catch(e30) {
        }
        return Float32Array;
    }
    static valueOf() {
        super.c.__proto__;
    }
}
switch (v2) {
    case 2.108213825957695e+307:
        const v37 = f0();
        %PrepareFunctionForOptimization(f0);
        f0();
        class C40 {
            static get h() {
            }
            static ["h"];
        }
        f0();
        %OptimizeMaglevOnNextCall(v37);
        f0();
}
Math.expm1(512);
class C47 {
    constructor(a49) {
    }
}
class C50 extends 512 {
    #p(a52, a53, a54, a55) {
    }
}
new C7();
new C7();
new C7();
function f65() {
}
function f66(a67, a68) {
    const o74 = {
        "g": f65,
        ..."-6",
        o(a70) {
            try {
            } catch(e71) {
            }
        },
        "f": a68,
        ..."symbol",
        get e() {
            super.e **= this;
            return [a68];
        },
        [f65]: a67,
        "a": a67,
        ..."Zda",
    };
}
f66("-6", -1);
[1000000000.0,NaN,NaN,NaN];
const t77 = 16;
t77[4294967295] = 4096;
try { ("symbol").includes(); } catch (e) {}
f66(8, -1);
for (let i87 = 0; i87 < 3; i87++) {
    const v93 = 1160470269 >> i87;
    for (let v94 = 0; v94 < 100; v94++) {
        f66(i87, v93);
    }
}
