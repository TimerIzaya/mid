let v0 = 254;
const v2 = new Uint16Array(v0);
function f3(a4) {
    function f5(a6) {
        const o7 = {
            249: a6,
        };
    }
    return v2;
}
v2.toString = f3;
function f10(a11, a12) {
    try {
        new f3(a11);
    } catch(e14) {
    }
    return Float64Array;
}
Float64Array.toString = f10;
const v15 = new Float64Array(3272);
const v18 = new Uint32Array(3);
const o21 = {
    get c() {
        return 61387;
    },
};
const v22 = [v15];
v22.toString = f3;
let v23 = [3,v2];
function f24() {
    return f3;
}
Object.defineProperty(v23, Symbol.toPrimitive, { configurable: true, enumerable: true, get: f24 });
const v27 = [Float64Array,Float64Array,3,v23,v23];
const v29 = Symbol.toPrimitive;
v27[v29] = f10;
class C30 {
    #p(a32, a33, a34, a35) {
        this.length = -2;
        v23 **= v23;
        return v23;
    }
    constructor(a39, a40, a41) {
        this[v22] = a41;
    }
    static {
        const v43 = /(\1a)/d;
        const v44 = /\p{gc=Nd}/gmiv;
        const v45 = /g/yidu;
        function f46(a47) {
            function f48() {
                function f49(a50) {
                    v44["exec"](a50);
                    return v29;
                }
                return f49;
            }
            Object.defineProperty(a47, Symbol.toPrimitive, { enumerable: true, get: f48 });
            const o61 = {
                __proto__: v43,
                [v43](a56, a57) {
                    try { new a57(this, v43, v44, a57); } catch (e) {}
                    v44.exec("4");
                    return v44;
                },
                ...v44,
                "b": a47,
                [v43]: v45,
            };
            return o61;
        }
        const v62 = f46(v44);
        f46(f46(v44));
        class C65 extends f46 {
            [v44] = v62;
            [f46];
            constructor(a67, a68, a69, a70) {
                super(v62);
                try { new a68(); } catch (e) {}
                new Uint8ClampedArray(7);
                new Uint32Array(127);
                new Uint16Array(55);
            }
        }
        const v81 = new C65(v44, C65, C65, v43);
        const v82 = new C65(v45, v62, v81, v45);
        new C65(v44, v45, v82, v43);
        this % v27;
        [undefined / "lXnv"];
        const v94 = /[a{[x]]/gmyis;
        const v95 = /9Gabc|def|ghiabc|def|ghi/iu;
        function f96(a97, a98, a99) {
            const o105 = {
                "g": v94,
                [3272]: "toString",
                0: "12",
                "b": 12,
                valueOf(a101, a102, a103, a104) {
                    return v94;
                },
                ..."12",
                5: v95,
                __proto__: "12",
                "e": a99,
                "h": a99,
            };
            return a97;
        }
        %PrepareFunctionForOptimization(f96);
        const o116 = {
            "maxByteLength": 268435456,
            toString(a107, a108, a109) {
                a107.__proto__ = a107;
                return a108;
            },
            toString(a111, a112, a113) {
                h = this;
                return gc();
            },
        };
        const v118 = new SharedArrayBuffer(128, o116);
        new Uint8ClampedArray(v118);
    }
    #h;
    [v2];
    [v27] = v15;
}
const v121 = new C30(3, v0, Float64Array);
const v122 = new C30(v23, 3272, v121);
new C30(3272, 3, v27);
try {
const t0 = 3;
t0(v27, v27, v122);
} catch (e) {}
class C130 {
    [89600334n];
}
const v133 = new Uint16Array();
const v135 = new Float64Array();
v133.fill(v135, 64, -22358);
!-9007199254740990;
Math.floor(v0);
v0--;
Math.cos(-9007199254740990);
4294967296 + v0;
+-9007199254740990;
const o146 = {
};
new Proxy(BigUint64Array, o146);
const v153 = [5.359746256575079,0.0,-1000000000.0,4.164502382987703,-1000000000.0,476.7419312217587,0.0,-1000000000000.0,758.9264994226157,NaN];
const v154 = [0.0,-1.0436720911939331e+308];
const v155 = [-0.0,-4.0,-1.502939508712535e+308];
function F157(a159, a160) {
    if (!new.target) { throw 'must be called with new'; }
}
const v161 = new F157(v154, v153);
const v162 = new F157(v154);
function f163() {
    return v153;
}
if (v161 != C30) {
    try {
        [0.4306441036802884,v154,1.0,f163,v162];
        v161.getUint8(-988.5600280220855);
    } catch(e167) {
    }
} else {
    [v155,107695627n];
    const v169 = [8250,v161,-988.5600280220855];
    [v155,v169,v169];
}
const v171 = [1073741823];
v171[1] = v18;
const v173 = ([-2147483647,1,268435440,268435440])[1.0];
v171[v173] %= -4.0;
try { v173(null); } catch (e) {}
function f0() {
}
const v2 = new Date();
class C7 extends Date {
    static #h = f0;
    [false] = false;
    get b() {
        v2[Symbol.search];
        return this;
    }
    #toString(a16, a17, a18) {
        try {
            new Float32Array(512);
        } catch(e22) {
        }
        try {
            new Float32Array(128);
        } catch(e26) {
        }
        try {
            new Uint8ClampedArray(2033);
        } catch(e30) {
        }
        return f0;
    }
    static valueOf() {
        super.c.__proto__;
    }
}
switch (v2) {
    case 2.108213825957695e+307:
        f0();
        %PrepareFunctionForOptimization(f0);
        f0();
        class C40 {
            static get h() {
            }
            static ["h"];
        }
        C40();
        %OptimizeMaglevOnNextCall(f0);
        f0();
}
Math.expm1(512);
class C47 {
    constructor(a49) {
    }
}
class C50 extends C47 {
    #p(a52, a53, a54, a55) {
    }
}
new C7();
const t53 = 164.27243346570594;
new t53();
new C7();
function f65() {
}
function f66(a67, a68) {
    const o74 = {
        "g": f65,
        ..."-6",
        o(a70) {
            try {
            } catch(e71) {
            }
        },
        "f": a68,
        ..."symbol",
        get e() {
            super.e **= 1160470269;
            return [a68];
        },
        [f65]: a67,
        "a": a67,
        ..."Zda",
    };
}
f66("-6", -1);
[1000000000.0,NaN,NaN,NaN];
const t78 = 16;
t78[4294967295] = 4096;
try { ("symbol").includes(); } catch (e) {}
f66(8, -1);
for (let i87 = 0; i87 < 3; i87++) {
    const v93 = 1160470269 >> i87;
    for (let v94 = 0; v94 < 100; v94++) {
        f66(i87, v93);
    }
}
