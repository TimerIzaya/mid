const v7 = new Int16Array(255);
new Int8Array(v7);
630191454 - 630191454;
let v12 = 2 >> 2;
v12--;
const v15 = new WeakMap();
try { v15.get(v12); } catch (e) {}
Array.length = Array;
const v18 = Array.prototype;
try { v18.toString(); } catch (e) {}
function F21(a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
}
const v25 = new F21();
v25.length = 51638;
const v27 = new BigUint64Array(v25, F21, v25);
with (v25) {
    class C29 extends v27.constructor {
    }
}
3483 >>> 3483;
new Array(3483);
new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
function f34() {
    const o40 = {
        valueOf(a36, a37) {
            Math.sin();
            return a36;
        },
    };
    o40.length = o40;
    return o40;
}
class C41 extends f34 {
}
const v42 = new C41();
v42.length = BigUint64Array;
const v44 = new Float32Array(v42);
v44[Symbol.toPrimitive] = f34;
v44 <= v42;
function f48() {
    return 11n;
}
try { f48.toString(); } catch (e) {}
/\p{gc=Nd}/yv;
let v52 = 300376181n;
v52 **= 12n;
("1073741824").replace("1073741824");
let v59 = 2345;
v59++;
const v0 = [1.210730136274171e+308,1000000000.0,1000000000.0,844.6098635881476,0.8877643734080972,0.5026304331770306,-632.1340190006357,4.1296337087708304e+307,-5.193904954180406];
const v1 = [-5.0,-7.767734830770077];
[2.220446049250313e-16,0.34993621191237134,-8.196652290924617e+307,-181.6126840775969,-3.0,-3.96722609351945e+307,-4.0,6.154992885698089,3.0];
const v6 = /(?:foo)\xed\xb0\x80/sdgmuy;
const v7 = /[Hxyz{0,1}?w\1(a)]/sdv;
const v8 = /((((.).).).)/gmyv;
class C9 {
    static 2412 = -1735140181n;
    4 = v0;
    536870887;
}
new C9();
new C9();
new C9();
class C13 {
    static d;
    p(a15, a16, a17) {
        let v18;
        try { v18 = new a17(v1, a15); } catch (e) {}
        a17?.h;
        v6["test"](v18);
        return -1735140181n;
    }
    e;
    [13n] = 6n;
    static #f = v6;
    static #c = v7;
    #g = v8;
}
new C13();
new C13();
new C13();
function f26() {
    return 268435440n;
}
for (let v27 = 0; v27 < 5; v27++) {
    f26();
    %OptimizeFunctionOnNextCall(f26);
}
