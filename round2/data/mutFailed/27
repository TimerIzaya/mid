class C6 {
    constructor(a8, a9, a10, a11) {
        new Uint8ClampedArray(236);
        class C15 {
        }
        super["MAX_VALUE"];
    }
    ["MAX_VALUE"];
    2792457004;
    o(a18, a19, a20) {
        for (let v21 = 0; v21 < 32; v21++) {
            this["p" + v21] = v21;
        }
        return a20;
    }
    static ["f"] = 0.15578974331101236;
}
const v24 = new C6(0.15578974331101236, "f", "f", C6);
const v25 = new C6(-1e-15, "f", v24, v24);
new C6(0.15578974331101236, -1e-15, -1e-15, v25);
function F28(a30, a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = 0.15578974331101236;
}
new F28(v25, 147.10566459609072, "f");
new F28(v25, 0.15578974331101236, "h");
new F28(v25, 0.15578974331101236, "f");
function F36() {
    if (!new.target) { throw 'must be called with new'; }
}
const v38 = new F36();
new Int32Array();
const v42 = (257).values();
const v46 = new v38(419);
class C47 {
    static get g() {
        for (const v49 of 419) {
            continue;
        }
    }
}
const v54 = ("string").localeCompare(v42, v42, "string");
([-929484741,2147483647,-2,-16,-13])["1073741824"];
class C59 {
    static ["constructor"] = v54;
}
class C61 extends WeakMap {
    [v38] = v38;
}
const v62 = new C61();
function f63(a64, a65, a66) {
    return f63;
}
Math.log2(1519924412);
v46["indexOf"]();
const v74 = [C61,v62];
const o75 = {
    "arguments": v74,
    "type": "function",
};
new Worker(f63, o75);
function f0() {
    const v2 = -Infinity;
    let v3 = 6;
    const o7 = {
        ..."692204762",
        "d": "692204762",
        get g() {
            if (this) {
                try { new v2(this, "692204762"); } catch (e) {}
            } else {
                ++v3;
            }
            return v2;
        },
        "a": v2,
    };
    return o7;
}
const v8 = f0();
f0();
const v10 = f0();
v10.toString = f0;
class C11 extends f0 {
    o(a13) {
        try { this.clz32(a13); } catch (e) {}
        try {
            super.p(v8);
        } catch(e16) {
        }
        return a13;
    }
    static #e;
    2130 = v10;
    [v10] = v10;
}
C11.prototype = C11;
const v17 = new C11();
v17[2130] = v17;
new C11();
const v19 = new C11();
v19[2130] = v19;
try { ("-2147483647").blink(); } catch (e) {}
let v25 = "-44185";
v25 -= "-177909898";
