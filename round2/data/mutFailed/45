class C3 {
    static n(a5, a6) {
        %VerifyType(a5);
        try {
            ("flags").replaceAll("flags", "boolean");
        } catch(e8) {
        }
        return "flags";
    }
    ["flags"] = "boolean";
    a = 127;
    #c = "boolean";
    static a = "flags";
    9 = 127;
    static ["flags"];
}
const v9 = new C3();
const v10 = new C3();
const v11 = new C3();
class C12 {
    e;
    #a;
    p(a14, a15) {
        C3[11];
        const t23 = 127;
        t23[0] = "boolean";
        try {
            a15.#a;
        } catch(e18) {
        }
        return v9;
    }
    10;
    #b;
    [v11] = v10;
}
const v19 = new C12();
const v20 = new C12();
const v21 = new C12();
class C22 {
    constructor(a24, a25, a26) {
        a26.e <<= 127;
        v21["p"](a24, v19, v21, 127);
    }
    static 3 = C3;
    static #h = v10;
    set e(a30) {
        const v31 = C3["flags"];
        try { v31("flags"); } catch (e) {}
    }
    d;
    #a = v19;
    0 = v19;
}
const v33 = new C22(v20, v20, v19);
new C22(v33, C12, v21);
new C22(v33, v21, v21);
const v38 = new BigUint64Array(1);
const o39 = {
};
v38.findLast(o39);
class C3 {
    static {
        try {
            this[4n] /= this;
        } finally {
            try {
                super.padStart(198213604n, this, -1439309421n, this, this);
            } catch(e6) {
            }
        }
    }
    static g = 4n;
    #f = 4n;
    static [4n] = -1439309421n;
}
const t15 = 198213604n;
const v7 = new t15();
const v8 = new C3();
new C3();
function F10(a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a12;
    } catch(e15) {
    }
    try {
        this.b = 198213604n;
    } catch(e16) {
    }
    try {
        this.c = v8;
    } catch(e17) {
    }
}
new v7(4n, 198213604n, 198213604n);
new F10(-1439309421n, 4n, 4n);
new v8(-1439309421n, 4n, 4n);
const v25 = Array(Array);
class C26 {
    static #f = v25;
    static f;
}
const t42 = 2117930446n;
delete t42.f;
