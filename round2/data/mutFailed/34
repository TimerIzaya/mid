new WeakSet();
new Uint8Array(2);
new BigInt64Array(2);
new Float64Array(-9007199254740991);
const v24 = `
`;
eval(v24);
const v0 = [479.7814820845606,2.0,-1000.0,-1.2349066913662117e+308,0.0,-1000000000.0,53.1819211496711,0.5199655878571378,0.7416484647716317,-1.380090869740806e+308];
let v1 = 10;
for (; v1--;) {
    function F3(a5, a6) {
        if (!new.target) { throw 'must be called with new'; }
    }
}
Symbol.toPrimitive;
const v10 = Symbol.iterator;
class C11 {
    static #p(a13, a14, a15) {
        a15.#p();
    }
}
for (let i19 = 0; i19 < 3; i19++) {
}
v10.length = 7;
const v25 = [-1000.0,1.0703535837149169e+307,1000.0,Infinity];
const v26 = [1000000000000.0,3.0,2.2250738585072014e-308,1000000000000.0,0.03365222226214748,-634614.6908616796];
function F27(a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a29;
    } catch(e31) {
    }
    try {
        this.b = a29;
    } catch(e32) {
    }
    try {
        this.g = a29;
    } catch(e33) {
    }
}
new F27(v25, v26);
new F27(v25, v0);
const v36 = new F27(v25, v25);
class C37 extends F27 {
    c;
    static #p(a39, a40) {
        let [v41] = a39;
    }
    get f() {
    }
    static set g(a44) {
        function f45() {
            return v36;
        }
    }
    4 = F27;
    f = v26;
    static {
    }
    static 3696789628 = v0;
    static set d(a48) {
        a48(...this);
        delete a48?.[147];
    }
    static #c;
    d = v0;
}
new C37();
const v55 = new C37();
new v55();
new String("1918534793", String, String);
([52865]).filter;
const t65 = 2809;
delete t65[132784632];
function f65() {
    return 10000;
}
function f68(a69, a70) {
    const o72 = {
        [a70]: "trunc",
        [a69]: "cHfW",
        get b() {
            return this;
        },
        ..."cHfW",
        3682847432: a69,
        6: a69,
    };
    return "trunc";
}
