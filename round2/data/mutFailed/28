class C6 {
    constructor(a8, a9, a10, a11) {
        this[2792457004] = this;
        a11.length;
        new Uint8ClampedArray(236);
        class C16 {
        }
        super["MAX_VALUE"];
    }
    ["MAX_VALUE"];
    2792457004;
    o(a19, a20, a21) {
        for (let v22 = 0; v22 < 32; v22++) {
            this["p" + v22] = v22;
        }
        return a21;
    }
    static ["f"] = "f";
}
const v25 = new C6(0.15578974331101236, "f", "f", C6);
v25[2792457004];
const v27 = new C6(-1e-15, -1e-15, v25, v25);
v27[2792457004] = v27;
new C6(0.15578974331101236, v27, -1e-15, v27);
function F30(a32, a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    a32[2792457004] = a32;
    -a33;
    this.e = 147.10566459609072;
}
try { new F30(147.10566459609072, v25, v25); } catch (e) {}
const v37 = new F30(v27, 147.10566459609072, "f");
const v38 = v37?.constructor;
try { new v38(false, v27, v25); } catch (e) {}
new F30(v27, 0.15578974331101236, "h");
const v41 = new F30(v27, 0.15578974331101236, "f");
function F42() {
    if (!new.target) { throw 'must be called with new'; }
    const v44 = this?.__defineGetter__;
    try { new v44(v41, v25); } catch (e) {}
}
const v46 = new F42();
v46.b = v46;
Int32Array.length;
const v49 = new Int32Array();
const v51 = v49.values();
const v52 = v51?.next;
try { new v52(); } catch (e) {}
const t48 = "string";
t48[1] = "string";
const v57 = new Uint8ClampedArray(419);
class C58 {
    static get g() {
        for (const v60 of 419) {
            continue;
        }
    }
}
const v65 = ("string").localeCompare(v51, v51, "string");
const v66 = [-929484741,2147483647,-2,-16,-13];
try { ("1073741824").codePointAt("1073741824"); } catch (e) {}
v66["1073741824"];
class C71 {
    static ["constructor"] = v65;
}
try { C71.toString(); } catch (e) {}
class C74 extends WeakMap {
    [v46] = v46;
}
const v75 = new C74();
const v76 = v75?.constructor;
try { new v76(); } catch (e) {}
function f78(a79, a80, a81) {
    return f78;
}
try { new f78(v41, 419, 419); } catch (e) {}
Math.LN10;
Math.log2(1519924412);
v57["indexOf"]();
const v91 = [C74,v75];
v91.g = v91;
const o92 = {
    "arguments": v91,
    "type": "function",
};
new Worker(f78, o92);
function f0() {
    const v2 = -Infinity;
    let v3 = 6;
    const o25 = {
        ..."692204762",
        p(a5, a6, a7, a8) {
            a7 ^ a8;
            function F10(a12, a13, a14) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                } catch(e15) {
                }
            }
            new F10(a8, f0, a8);
        },
        "d": "692204762",
        get g() {
            if (this) {
                try { new v2(this, "692204762"); } catch (e) {}
            } else {
                ++v3;
            }
            new Int8Array(2875);
            const v23 = [6,268435456,21438,27887,1000,-53950,20059,-8932,-4294967295];
            const o24 = {
                __proto__: v23,
            };
            return v2;
        },
        "a": v2,
    };
    const v26 = o25?.propertyIsEnumerable;
    try { new v26(v2); } catch (e) {}
    return o25;
}
const v28 = f0();
const v29 = v28();
const v30 = f0();
class C31 extends f0 {
    o(a33) {
        try { this.clz32(a33); } catch (e) {}
        try {
            super.p(v28);
        } catch(e36) {
        }
        return a33;
    }
    static #e;
    2130 = v30;
    [v30] = v30;
}
C31.prototype = v28;
const v37 = new C31();
v37[2130] = v37;
const v38 = new C31();
const v39 = v38?.propertyIsEnumerable;
new WeakMap();
const o42 = {
    4294967295: v39,
};
try { new v39(C31); } catch (e) {}
const v44 = new C31();
function f45() {
    return v30;
}
WeakMap.log1p(v29);
o42[2130] = v44;
let v50;
try { v50 = ("-2147483647").blink(); } catch (e) {}
v50[1] = v50;
const v54 = [0.3028317396299145,2.0];
v54[-536870912] = [-3.0,9.240317919927701e+307,-1.3735711501606418e+308,748670.5779014626,638.9635758495224];
v54[129] = 93710.9153270286;
let v57 = "-44185";
v57 -= "-177909898";
