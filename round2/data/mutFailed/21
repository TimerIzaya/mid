const v0 = [NaN,0.07813602574010303];
const v1 = [-713407.3481522141,-503.85494367114416];
const v2 = [NaN];
[BigUint64Array,10];
("-65537")[9];
const v9 = v1.constructor;
class C10 extends v9 {
    static [732];
    static [v2];
    static 3;
    valueOf(a12, a13, a14) {
        57274 ^ "-65537";
        -7 || "-65537";
    }
    static 2557398950;
    static #g;
    #g = 10;
    #b = 732;
    #h;
    static 113 = v1;
    [v9];
}
const v19 = new C10();
const v21 = new BigInt64Array(732);
try {
    v21.toString(v19, C10);
} catch(e25) {
}
v1[BigInt64Array] = 257;
new Int16Array(257);
new Float32Array(8);
new BigUint64Array(2322);
function* f34(a35, a36) {
    return a36;
}
new Int32Array([-1,-9007199254740991,-57631,129,2,1433655057,-11598,10,5]);
new Uint16Array(127);
v0.toString = Int16Array;
let v43;
try { v43 = v9(Uint16Array, v19); } catch (e) {}
new BigUint64Array(256);
function F50(a52, a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
}
const v55 = new F50(F50, null, null);
v55 - null;
v43.indexOf();
class C60 {
}
function f61() {
    return BigInt64Array;
}
const v66 = new BigUint64Array(1000, 1000, 8);
function f67(a68) {
    arguments[4] = BigUint64Array;
    return 12;
}
f67(f61, v66, Uint32Array, 12, 1000);
Math.tan(-4294967296);
[1.210730136274171e+308,1000000000.0,1000000000.0,844.6098635881476,0.8877643734080972,0.5026304331770306,-632.1340190006357,4.1296337087708304e+307,-5.193904954180406];
const v1 = [-5.0,-7.767734830770077];
[2.220446049250313e-16,0.34993621191237134,-8.196652290924617e+307,-181.6126840775969,-3.0,-3.96722609351945e+307,-4.0,6.154992885698089,3.0];
const v6 = /(?:foo)\xed\xb0\x80/sdgmuy;
const v7 = /[Hxyz{0,1}?w\1(a)]/sdv;
const v8 = /((((.).).).)/gmyv;
class C9 {
    static d;
    p(a11, a12, a13) {
        let v14;
        try { v14 = new a13(v1, a11); } catch (e) {}
        function f15() {
            return f15;
        }
        const o22 = {
            __proto__: null,
        };
        class C23 {
            static {
                do {
                    this[f15];
                } while (0 < 0)
            }
        }
        a13?.h;
        v6["test"](v14);
        return -1735140181n;
    }
    e;
    [13n] = 6n;
    static #f = v6;
    static #c = v7;
    #g = v8;
}
new C9();
new C9();
new C9();
function f37() {
    return 268435440n;
}
for (let v38 = 0; v38 < 5; v38++) {
    f37();
    %OptimizeFunctionOnNextCall(f37);
}
