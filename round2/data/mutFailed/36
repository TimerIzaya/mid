class C3 {
    [2147483648] = "-10647";
    #a;
    2147483647;
    constructor(a5) {
        const v8 = 536870887 | 536870887;
        Math.pow(v8, this);
        Math.asin(v8);
        Math.sign(this);
        Math.cbrt(536870887);
        Math.imul(v8, v8);
    }
    static g = "-10647";
    ["-10647"] = 2147483648;
    [C3];
    h = 2147483648;
    #e;
    b = 2147483648;
}
const v14 = new C3(C3);
new C3(v14);
new C3(v14);
new WeakMap();
/W\8/gms;
/La\xed\xa0\x80/gmsdu;
/([\111]vD8?)/isd;
/[(?<!a)(HB\u{12345}\u{23456}a\D)]/sdu;
class C3 {
    8;
    n(a5, a6) {
        const v7 = [1000.0,-1.7976931348623157e+308,1000.0,-2.2250738585072014e-308,-2.2250738585072014e-308,371.9625849700201,792443.1173229332,-1000.0];
        [235.30651769233327,-9.419826762752003e+307,-4.0,2.0,3.0,-1e-15,829.5821803144463,-959796.2319451985];
        [-0.0,-2.2250738585072014e-308,2.220446049250313e-16,5.0,-5.052574192167299,1000.0,-237334.70996649947,-1e-15];
        v7["flatMap"](a6, v7);
        return "flatMap";
    }
    m(a13) {
        function f14(a15, a16) {
            a15?.[this];
        }
        new Promise(f14);
        const o20 = {
            "call": f14,
            "construct": C3,
            "get": f14,
            "NaN": f14,
        };
        try {
            new Proxy(a13, o20);
        } catch(e23) {
        }
        return C3;
    }
}
const v24 = new C3();
const v25 = new C3();
const v26 = new C3();
class C27 {
    static d = C27;
    static [1000000000.0];
    static set g(a29) {
        try {
            C3.b = this;
        } catch(e30) {
        }
    }
    static 5 = C3;
    #h;
    static get a() {
        function F32(a34, a35, a36, a37) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = a34;
            } catch(e38) {
            }
        }
        const v39 = new F32(v26, v24, v24, v24);
        const v40 = new F32(v24, v26, v39, v25);
        new F32(v40, v40, v26, this);
        return v24;
    }
}
new C27();
const v43 = new v24();
new C27();
const v46 = new Map();
function F47(a49, a50, a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a50;
    } catch(e53) {
    }
    try {
        this.f = a49;
    } catch(e54) {
    }
    try {
        this.d = a52;
    } catch(e55) {
    }
}
const v56 = new F47(C3, -4939, v43, v25, v43, 1000000000.0);
const v57 = new F47(v26, v56, v24, v56);
new F47(v26, v57, v46, C3);
class C60 {
    ["replaceAll"];
}
new C60();
const o63 = {
    get d() {
        return this;
    },
    __proto__: v24,
    "b": C60,
};
