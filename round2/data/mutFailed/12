const v0 = [];
const v1 = [v0,v0,v0];
const v2 = [v1,v0,v1,v1,v0];
const v3 = [v2];
class C4 {
    toString(a6, a7) {
        a6 / a6;
        const v9 = a7 ^ a7;
        let v10;
        try { v10 = a6(v0); } catch (e) {}
        const o11 = {
        };
        new Proxy(v2, o11);
        Math.abs(C4);
        351058572 >>> C4;
        const v20 = Math.trunc(351058572);
        Math.cbrt(-3);
        Math.asin(-3 | -1.5644149615329557e+308);
        Math.sinh(351058572);
        super.h **= v10;
        for (let i26 = 0; i26 < 0; i26++) {
            const v32 = i26 | a6;
            new Int16Array();
            function F35(a37, a38) {
                if (!new.target) { throw 'must be called with new'; }
            }
            const v42 = new Int8Array(276);
            v42.includes(Uint16Array);
            v32[9] = v32;
        }
        a6[v9] = this;
        try {
            this.valueOf(8.53048871236366e+307, v20, "XF", v1);
        } catch(e47) {
        }
        return this;
    }
    valueOf(a49) {
        /j/gis;
        /0v[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]/gmyiu;
        return /ta[bc]d/mysdu;
    }
    static #b;
    static #d;
    [v0];
    [v3];
}
const v53 = new C4();
let v54 = new C4();
const v55 = new C4();
class C56 {
    constructor(a58, a59, a60, a61) {
        const v62 = a59?.constructor;
        try { new v62(); } catch (e) {}
        try { a60.toString(v0, v55); } catch (e) {}
        for (let v65 = 0; v65 < 21; v65++) {
            v65 * v65;
            let v67;
            try { v67 = a60.toString(v65, v65); } catch (e) {}
            v67.h = v67;
            ([5.0,3.8275893489813555e+307,2.0,5.0,4.993248671588251,-1000000000.0,-1000000000000.0,-1.0,-2.3070892649776883e+306,-2.0])[4];
            const v70 = [-3.0,2.2250738585072014e-308,-1e-15,-1.7976931348623157e+308,-602910.904097734,2.220446049250313e-16,-765759.4818266728,697657.4195438619];
            try { v70.toSorted(C4); } catch (e) {}
            [1000000000000.0,101685.13670722954,-642421.1949600396,1.7976931348623157e+308,315705.6305273776,1000000.0,0.0,-712795.9199189815,-0.3874955617853999];
        }
    }
    [v2] = v1;
    static toString(a74, a75) {
        let v76 = Math;
        v76.abs(v54);
        [...v3,this,v76,-1071006372];
        v3 / v53;
        v76--;
        new Int32Array(127);
        new BigInt64Array(550);
        new Uint8ClampedArray(2874);
        v2 & v3;
        v54++;
        const v94 = v2 >> v2;
        !-1071006372;
        try { Uint32Array(Int16Array, Uint8ClampedArray, 1801, Uint8ClampedArray, Uint32Array, ...2650); } catch (e) {}
        v76.asin(-190148.62045439763);
        v76.clz32(v94);
        let v104;
        try { v104 = a74(); } catch (e) {}
        Object.defineProperty(v55, 2, { configurable: true, value: a74 });
        let v107 = -411889825;
        --v107;
        Math.trunc(-20154);
        Math.abs(v55);
        v55 + v107;
        v3 + -20154;
        Math.atanh(v55);
        v107 && v107;
        return v104;
    }
}
const v115 = new C56(v3, v54, v55, v53);
const v116 = new C56(v2, v115, v54, v115);
v116.e = v116;
const v117 = new C56(v116, C4, v54, v53);
v117.length = v117;
try {
    new C4();
} catch(e121) {
}
const v122 = v117 + C4;
v122[764] = v122;
function F124() {
    if (!new.target) { throw 'must be called with new'; }
    const v126 = this?.constructor;
    try { new v126(); } catch (e) {}
}
const v128 = new F124();
v128.length = v128;
const v129 = new F124();
v0.concat(525417201);
/a\W/gmyiu.flags;
new Int16Array([822.3190985723445,7.893923520134731,-5.0,1000.0,1.7976931348623157e+308]);
v129.length;
function f138(a139, a140) {
    const v141 = a139?.__defineGetter__;
    try { new v141(-5, a139); } catch (e) {}
    const o143 = {
        2: a139,
        255: v129,
        "c": v128,
        "f": a140,
        1: a139,
    };
    return a140;
}
f138.name;
%PrepareFunctionForOptimization(f138);
const v145 = f138(v129, v129);
const t135 = /Z/gyisu;
t135.valueOf = 691787953;
new BigUint64Array(4096);
v145.length = v145;
f138(v129, v129);
%OptimizeFunctionOnNextCall(f138);
f138();
let v0 = [65536,8,-2,1,-9007199254740990,9007199254740991,1073741824,-1];
const v1 = [1119897228,536870912,-15763,-3];
const v2 = [20290864,-702335753,-2147483647,0,2147483647,16,-29350,-42779,65537,257];
class C6 {
    constructor(a8, a9, a10, a11) {
        try {
            v0 /= v2;
        } catch(e14) {
        }
        try {
            new BigInt64Array(2368);
        } catch(e18) {
        }
        try {
            new BigInt64Array(14);
        } catch(e22) {
        }
        try {
            new Int32Array(129);
        } catch(e26) {
        }
        v1.length = 4;
        Uint8ClampedArray.log1p(196);
        [98,Int8Array];
        try {
            v1.__proto__ = "kP3wB";
        } catch(e34) {
            class C35 {
            }
            const v36 = new C35();
            function f37() {
                return v36;
            }
            %OptimizeFunctionOnNextCall(f37);
        }
    }
    256 = 4;
    1;
}
const v38 = new C6(v2, v0, v0, 4);
new C6(v0, v1, v38, 8);
new C6(v0, v1, v38, 4);
function f41() {
    return v1;
}
class C44 extends Date {
    6 = Date;
    static b;
    f = v2;
    static [C6];
    b = v38;
    constructor(a46, a47) {
        super("setInt16");
    }
}
new C44(Date, Date);
