function f0() {
    const o14 = {
        p(a5, a6) {
            super[("-9223372036854775808")[10]] = a6;
            return -1573824782n;
        },
        "f": "-9223372036854775808",
        "e": "-9223372036854775808",
    };
    return o14;
}
const v15 = f0();
const v16 = f0();
const v17 = f0();
function f18() {
    return v16;
}
class C19 {
    #p(a21) {
        try { this.n(v15, a21, f0, a21, v17); } catch (e) {}
        return this;
    }
    constructor(a24, a25) {
        typeof a25 === "function";
        Object.defineProperty("function", 8, { writable: true, configurable: true, enumerable: true, set: f0 });
        v17.__proto__;
        function F30(a32, a33, a34) {
            if (!new.target) { throw 'must be called with new'; }
            this.a = v16;
            this.e = f18;
        }
        new F30(a25, this, v17);
        new F30(this, a25, v15);
        const v37 = new F30(v17, a25, this);
        function f38() {
            return v37;
        }
        v17[257] <<= a25;
        new Int8Array(3125);
        new Int16Array(64);
        new Uint8ClampedArray(9);
    }
}
const v48 = new C19(C19, C19);
const v49 = new C19(C19, v15);
const v50 = new C19(v15, v15);
class C51 {
    static set h(a53) {
        this[v50];
        try { C19.log1p(f18); } catch (e) {}
        [0.5506970891689936,-2.220446049250313e-16,695.4202276729213,-1000000000.0,-1.0,0.03964839571039036];
        [-5.0,0.6302826443222458,7.631387925061539,4.334860604655766,-678.9963633487248,491992.7783919482,2.0,980.4679797824133,1.7976931348623157e+308,-3.121641493695345e+307];
        [-0.0,-4.0,2.220446049250313e-16];
    }
    constructor(a60, a61) {
        super[a60];
        try {
            f0();
        } catch(e64) {
        }
    }
}
const v65 = new C51(v16, v16);
new C51(v49, v65);
new C51(v15, v49);
function F68() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = -1;
}
const v71 = new F68();
const v72 = new F68();
const v73 = new F68();
let v74 = 9223372036854775807;
function f79(a80, a81) {
    const o84 = {
        256: a80,
        set f(a83) {
        },
        "g": -24776,
        "e": 446.68388735528197,
        "c": v73,
        "f": -24776,
        "a": -24776,
    };
    return o84;
}
const v85 = f79();
const v86 = f79();
v85.c **= v74;
v73[v86] = -24776;
const v87 = new F68();
v87.h = -7;
v74 = -24776;
v48.__proto__ = v72;
f18();
const o92 = {
    "execution": "async",
    "type": "minor",
};
gc(o92);
with (v87) {
    f = v72;
    v72[v71] *= -7;
}
Math.pow(!v71, v74);
Math.atan(-13856);
class C1 {
    m() {
        for (let v3 = 0; v3 < 32; v3++) {
            this["p" + v3] = v3;
        }
        return this[16];
    }
    static get a() {
        const o8 = {
            __proto__: C1,
            "c": this,
            "b": this,
        };
        return SyntaxError;
    }
}
const t16 = false;
new t16();
const t18 = false;
new t18();
new C1();
[-4.0,Infinity,904.3073227968914,0.0,Infinity,2.0,-9.799810446229412,1.0881278822777486e+308,1e-15,0.0];
[-1.7976931348623157e+308,1000000000.0,756.4963388269596];
[0.6210903375814748,1000000.0,228595.37437098264,NaN,0.8838600831039497,210796.8883552309,2.6464726074498035];
new Date();
function F25(a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
}
const v29 = new F25(65535n, F25);
%PrepareFunctionForOptimization(Array);
%OptimizeMaglevOnNextCall(1024n);
try { v29.m(); } catch (e) {}
