function f3(a4, a5) {
    ("o")[0];
    const o17 = {
        [f3]: "g",
        1: "g",
        "h": a4,
        p(a8, a9) {
            if (a9) {
                this.g = a5;
            } else {
                const o12 = {
                    "maxByteLength": ArrayBuffer,
                };
                const v14 = new ArrayBuffer(10, o12);
                new Uint32Array(v14);
            }
            return this;
        },
    };
    o17[1];
    return o17;
}
f3("f", "f")[1];
const v22 = f3("f", "o")[1];
f3("g", "f");
const v29 = ([-5.0,7.355590538032568e+307,-955.7132060496369,0.9644367167222642,-1000.0,1.6892922151045164e+308,0.2722344891945132])?.__defineSetter__;
try { new v29(-13n, "o"); } catch (e) {}
const v32 = ([3.016644926412777,2.0,3.0,-1000000000.0,1000.0,1.4328949632959407e+308,-1.0,1e-15])?.every;
try { new v32("f"); } catch (e) {}
[0.0,7.904877680692934,2.2250738585072014e-308,-2.0,1.0];
try { new WeakMap(); } catch (e) {}
new v22();
undefined < "multiline";
class C3 {
    static {
        try {
            try {
                C3.length = 3;
            } catch(e6) {
            }
            this[4n] /= this;
        } finally {
            try {
                super.padStart(this, this, -1439309421n, this, this);
            } catch(e8) {
            }
        }
    }
    static g = 4n;
    #f = -1439309421n;
    static [4n] = -1439309421n;
}
const v9 = new C3();
const v10 = new C3();
const v11 = new C3();
function F12(a14, a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a14;
    } catch(e17) {
    }
    try {
        this.b = 198213604n;
    } catch(e18) {
    }
    try {
        this.c = v10;
    } catch(e19) {
    }
}
for (const v20 of v11) {
    v11.e /= v20;
    v11 instanceof C3;
}
function F22(a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a24;
    } catch(e27) {
    }
}
new F22(-1439309421n, v11, 4n);
const v29 = new F22(4n, v9, -1439309421n);
new F22(-1439309421n, v29, 4n);
new F12(4n, 198213604n, 198213604n);
[8,536870912];
[15,1073741825,-65536];
[1330184279,-45745,12,1063701538,3,2,-8,129,1073741824];
new F12(-1439309421n, 4n, 4n);
new F12(-1439309421n, 4n, 4n);
const v44 = Array(Array);
class C45 {
    static #f = v44;
    static f;
}
delete C45.f;
