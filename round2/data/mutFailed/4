[-0.7555788406695498,-4.0,-2.85845806810256e+307];
const v1 = [2.2250738585072014e-308,1000000000.0,-367759.09080500284,-845609.1086681206];
[1.7976931348623157e+308,0.91681246237445,-2.2250738585072014e-308,335904.0627526939,1000000000000.0];
const t0 = 9007199254740992n;
new t0();
const v11 = [47811,-60307,7,1334701906,-12,7];
[-65537,-1141536626,15,536870889,-4294967295,9,-55098];
[-4096,612953295];
new BigUint64Array(v1);
new Uint16Array(4096);
new Int32Array(v11);
const v27 = new Uint16Array(Uint16Array);
11 instanceof "-128";
v27["every"](Date);
true && true;
const v5 = [-1070587540,10,-8,-46343,1073741825,-65535,415236697,1073741825,-1024,1073741824];
[-6,8,0,-15];
const v7 = [128,1073741825,-4294967296,26360,8];
let v8;
try { v8 = v7.includes(20375); } catch (e) {}
const v9 = [-6,v7,v7];
[2,20375,v5,[v9]];
const v12 = [-16,-42412,2147483648,-1697357024,-11];
const v13 = [10000,129,255,-65537,1024,268435439,11];
function f14() {
    function F15(a17, a18, a19, a20) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.f = v8;
        } catch(e21) {
        }
        try {
            this.b = a18;
        } catch(e22) {
        }
    }
    new F15(-6, F15, v8, 2);
    const v24 = new F15(20375, v9, 20375, -6);
    new F15(2, v24, 20375, -6);
    return v24;
}
v13.valueOf = f14;
class C26 {
}
let v27;
try { v27 = new C26(); } catch (e) {}
const v28 = new C26();
v28?.constructor;
try { new C26(); } catch (e) {}
const v31 = new v27();
delete v31.h;
v13.flat();
Object.defineProperty(v12, "e", { writable: true, enumerable: true, value: v28 });
try { Math.clz32(v13); } catch (e) {}
v5 / Math.log10(-2.0560114246876875);
