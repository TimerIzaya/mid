class C2 {
    g = -4.0;
    4112887752 = C2;
    constructor(a4, a5) {
        try {
            super.next(C2);
        } catch(e7) {
        }
    }
}
new Int8Array(559);
new Uint32Array(16);
new Uint32Array(2496);
function f19() {
    try {
    } catch(e22) {
    } finally {
    }
    new ArrayBuffer();
    const o30 = {
        "f": 4,
        "a": 4,
        get g() {
            try { this(4, this); } catch (e) {}
            this[(257).match] = 4;
            return 0.9077957438204406;
        },
        "b": 4,
        ...4,
        __proto__: 0.9077957438204406,
    };
    return o30;
}
const v31 = f19();
const v32 = f19();
f19();
class C34 extends f19 {
    f = f19;
    static #m(a36) {
        const v37 = this & v32;
        try {
            new f19();
        } catch(e39) {
            const v41 = new WeakSet();
            v31 - v41;
            [1829623864,-15,-646305010,268435439,19936,1073741824,-16,4];
            Math.sin(WeakSet.__proto__);
        }
        return v37;
    }
    3 = v31;
    static h;
    1073741824;
}
class C48 {
    constructor(a50) {
        /}(?<a>.)\k<a>a{z}*/gmid;
    }
}
new C34();
const v59 = new Uint8ClampedArray(4096);
const v62 = new Int16Array(127);
const t62 = -5n;
const v64 = t62();
try { new Int16Array(v64, ...127, 5, 6); } catch (e) {}
v32.__proto__ = Uint32Array;
v59["lastIndexOf"](..."lastIndexOf", 5, f19, Int16Array, ..."lastIndexOf", ...v62);
class C3 {
    static {
        this[4] = 198213604n;
        try {
            this[4n] /= this;
        } finally {
            try {
                super.padStart(this, this, -1439309421n, this, this);
            } catch(e6) {
            }
        }
    }
    static g = 4n;
    #f = -1439309421n;
    static [4n] = -1439309421n;
}
new C3();
const v8 = new C3();
new C3();
function F10(a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a12;
    } catch(e15) {
    }
    try {
        this.b = 198213604n;
    } catch(e16) {
    }
    try {
        this.c = v8;
    } catch(e17) {
    }
}
new F10(4n, 198213604n, 198213604n);
new F10(-1439309421n, 4n, 4n);
new F10(-1439309421n, 4n, 4n);
function F24(a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
}
const v28 = [NaN,-1000000000.0];
[-1e-15,-7.123248535241268,0.9391312789822176,-1.5770788962113171e+308];
function F30(a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
}
const v34 = new F30(v28);
try {
const t0 = 11;
t0(v34);
} catch (e) {}
/(?:a{5,1000000}){3,1000000}((((.).).).)*/iv;
const v41 = Array(Array);
class C42 {
    static #f = v41;
    static f;
}
delete C42.f;
