const v0 = /\P{sc=Greek}/gmysdu;
const v1 = /5(?=)\xed\xa0\x80((?:ab)|cdefoo|(bar|baz)|quuxdkyDa\nb\bc+)*/yisu;
/m(ab)\1/gisv;
const v11 = [[,],,1.448609815409092e+308,v1,v0];
[0.20407506665918973,858.5338143514753];
new BigUint64Array(257);
new Int16Array(799);
const v21 = new Float32Array(127);
for (const v22 of v21) {
    [-128,4580,-1765292425,2147483647,-9,4,-8];
    const v24 = [-13,255,-4096,3,-3656,-889709493,918329797,4294967295,2];
    [-59828,-4096,-6,5,14250,2192113];
    v0[v22];
    v24[0.0];
}
const v28 = new BigUint64Array(v11, 127);
v0[v28] = 257;
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 2147483649;
    } catch(e3) {
    }
    try {
        this.h = 2147483649;
    } catch(e4) {
    }
    try {
        this.b = 2147483649;
    } catch(e5) {
    }
}
const v6 = new F0();
new F0();
new F0();
try {
    new Float64Array(512);
} catch(e15) {
}
try {
    new BigUint64Array(120);
} catch(e19) {
}
try {
    new Uint32Array(3917);
} catch(e23) {
}
/Wabc+?/dgmy;
/bg(?<a>)?/sim;
/[^123]/muy;
new WeakSet();
BigUint64Array & -150.3568092353496;
class C30 extends Float64Array {
    b;
    10;
    g = v6;
}
new C30();
new C30();
new C30();
