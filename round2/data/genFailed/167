const v3 = [1e-15,-1000000000000.0,-1000.0,0.45114370256138925,0.9392420298031734,409.7547348074029,-1.5672985783041185,2.2250738585072014e-308];
const v4 = [0.0];
[924.2347972626269,-2.7523882247978886,-0.0,-4.314867465412496,7.391316565546312e+307,2.220446049250313e-16,-1e-15];
function f9() {
    return v3;
}
class C10 extends f9 {
    constructor(a12, a13) {
        super();
        let [] = a12;
        const o16 = {
            "maxByteLength": 2562,
        };
        const v18 = new SharedArrayBuffer(2562, o16);
        new BigInt64Array(v18);
    }
}
const v21 = new C10(v4, 31543);
new C10(v21, 31543);
new C10(v21, 3);
function f24(a25, a26, a27) {
    const o28 = {
    };
    o28.f = v3;
    const o29 = {
    };
    o29.f = v3;
    o29.b = a26;
    const o30 = {
    };
    o30.f = v3;
    o30.b = a26;
    o30.c = v4;
    const o31 = {
    };
    o31.f = v3;
    o31.b = a26;
    o31.c = "a";
    return o31;
}
f24(3, f9, -65537);
try {
    new Uint8ClampedArray(2326);
} catch(e3) {
}
try {
    new Float32Array(5);
} catch(e7) {
}
try {
    new Float32Array(128);
} catch(e11) {
}
const v15 = [129,536870887,-7,29566,-12949,65535];
[0,-1244598286,5,-53961,712333112,-26430,9,890828740,-1308870861];
[-6206,1,4294967295];
new Map();
try { v15.pop(); } catch (e) {}
let v22 = -7;
const v24 = v15 ** -1n;
10000 | v22;
const v26 = v22 || -1n;
Math.tanh(10000);
++v22;
v24 ^ v26;
