const v4 = new Set();
const v5 = [696.9766902978267,7.74936282335814];
const v6 = [0.7774919697932788,0.0,7.857882421609734,-1.452973999294515e+308,0.004370825549420032,-9.769892982455071e+307,1e-15,-2.2250738585072014e-308,5.0,-453.9686684747695];
const v7 = [0.5152362856271399,360.3059617878653,Infinity,0.2385740554936362,0.7382090456983103,2.0];
const v11 = ["bind"];
[[v6,4294967297n,-553451391n],v7,v5,v6];
new Set(4294967297n, Set, Set, v4);
let v15 = 0;
do {
    const v16 = v11.__proto__;
    const v17 = ("bind").length;
    function F18(a20, a21) {
        if (!new.target) { throw 'must be called with new'; }
        this.d = v17;
        this.h = Set;
        this.a = a21;
    }
    new F18(4294967297n, v6);
    new F18(1091474068n, v16);
    new F18(-553451391n, v6);
    v15++;
} while (v15 < 1)
try {
    new Float32Array(2993);
} catch(e3) {
}
try {
    new Int8Array(64);
} catch(e7) {
}
try {
    new BigInt64Array(183);
} catch(e11) {
}
const v12 = [-1000000000000.0,2.220446049250313e-16,-64286.848877175245,-9.987629256005243e+307,0.858045568558968];
[-1000000000000.0];
const v14 = [-5.0,1.7023866519775616e+307,-735.0643653145416,-880.3767235016022,0.7433283112962891,0.3002017720407798,Infinity,385296.044278638];
class C15 {
    static e = BigInt64Array;
    static #h = v12;
    static toString(a17, a18) {
        try {
            super.e = a18;
        } catch(e22) {
        }
        return v14;
    }
    4;
}
new C15();
new C15();
new C15();
Reflect.construct(v12[2310], [v14], C15);
for (let v30 = 0; v30 < 87; v30++) {
    v30 * 8;
    v30++;
    let v37 = 7 ^ v30;
    ~-2.2250738585072014e-308;
    v37++;
}
