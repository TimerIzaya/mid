const v0 = [-1000000000.0,292.92807810065915,Infinity,1000.0,357.3906161956004,-736945.2107155825];
const v1 = [-17836.618363867165,-5.512708401761078,1e-15,-444961.38864807296,2.3112398909541376,-803361.0035475092,-7.515811906494458,-1000000.0,NaN,1.424679097067152];
const v2 = [429809.65964109916,4.0,138.56780389286087,-9.337416306707064e+307,-7.590494021406502];
class C3 {
    h;
    toString(a5, a6) {
        super.g = a6;
        let v7 = 0;
        while (v7 < 4) {
            const v12 = [a6,v1];
            Reflect.apply(a5.findLastIndex, a6, v12);
            v7++;
        }
        return v2;
    }
}
new C3();
const v17 = new C3();
const v18 = new C3();
class C19 {
    #p(a21, a22) {
        function f23() {
            return a21;
        }
        for (let v24 = 0; v24 < 32; v24++) {
            v17["p" + v24] = v24;
        }
        return v0;
    }
}
new C19();
new C19();
new C19();
v1 ^ v1;
let v31 = new C19();
++v31;
v0["reduce"](v18);
const o35 = {
    __proto__: v0,
    ...v1,
};
try {
    v0.values();
} catch(e37) {
}
[0.15719396719587497,1000.0,-419.75273970393664,5.329700971814688,-2.964833485829093];
[-412285.3655859529];
[-8.085944993581606e+307,-1.3291385883108896e+308,4.0,-865.728826306182];
%VerifyType(-2147483647n);
[-2.2250738585072014e-308,24396.503598171053,-2.349212970880763];
[-1.0,-2.220446049250313e-16];
const v16 = [-2.220446049250313e-16];
try {
    v16.f = "F";
} catch(e17) {
}
let v20 = -6.841986808274552;
!v20;
const v22 = v20++;
v22 / -6042n;
Math.abs(v22);
Math.log2(v20);
Math.min(v22);
