const v3 = ["MIN_SAFE_INTEGER","6","MIN_SAFE_INTEGER","6","6"];
["6",v3,v3,"MIN_SAFE_INTEGER"];
["MIN_SAFE_INTEGER","g","MIN_SAFE_INTEGER","6"];
[-1024,-9,-14,0,1854410583,4,10000,1024,-65537,-9];
const v7 = [-2147483649,-9007199254740990,-10,-1,49519];
[9223372036854775807,536870912,268435439,510403795,3,129,1774077248,22756];
new Int8Array(128);
const v17 = new BigUint64Array(7);
const v20 = new Float64Array(5);
v3.length = 128;
v20.byteLength;
v7[178] = v17;
class C22 extends Int8Array {
    #g = 7;
    268435439 = v3;
    [v7];
    static #d = "MIN_SAFE_INTEGER";
}
new C22();
new C22();
new C22();
let v0 = "of";
let v5 = -15;
let v12;
try {
const t0 = 4096;
v12 = new t0();
} catch (e) {}
try {
    const t8 = "e";
    t8[v12] = 8;
} catch(e13) {
}
try { v0.trimEnd(); } catch (e) {}
({"e":v5,"f":v0,"g":v0,} = v12);
try {
    new Float32Array(129);
} catch(e18) {
}
try {
    new Uint32Array(2983);
} catch(e22) {
}
try {
    new BigInt64Array(1160);
} catch(e26) {
}
