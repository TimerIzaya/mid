const v2 = new Uint16Array(2172);
const v5 = new BigUint64Array(255);
const v8 = new Uint32Array(4096);
class C9 {
    static [v2];
    h = BigUint64Array;
    constructor(a11, a12) {
        class C14 extends v8.constructor {
            a = this;
            static d = BigUint64Array;
            static 536870912 = 255;
        }
        new C14();
    }
    [Uint32Array] = 255;
    [2172];
}
new C9(2172, 2172);
new C9(255, 255);
const v18 = new C9(255, 255);
const v19 = [Uint16Array];
class C20 extends Uint16Array {
    static #c;
    static [C9] = v18;
    6 = v19;
    static [v5];
}
new C20();
new C20();
new C20();
function f6(a7, a8) {
    const o15 = {
        get f() {
            const v11 = ("p")["trimLeft"]();
            let v12;
            try { v12 = v11("p", 1073741824, v11, 9223372036854775807, this); } catch (e) {}
            return v12;
        },
        "c": "function",
        get d() {
            try {
                super[a7] = 9223372036854775807;
            } catch(e14) {
            }
            return this;
        },
    };
    return o15;
}
f6("536870889", "536870889");
const v17 = f6("536870889", "p");
f6("536870889", "function");
function f19() {
    return "536870889";
}
const v23 = f19(..."function", v17, 3, 12, ..."p", -4);
Object.defineProperty("p", 455108729, { configurable: true, enumerable: true, set: f6 });
function* f24(a25, a26, a27) {
    const v31 = (-8.663290828338267e+307) ** a25;
    !-2147483648;
    const v34 = --a25 + -8.663290828338267e+307;
    -2147483648 >> -2147483648;
    v34 & -2147483648;
    yield v31;
    return v23;
}
f24("function", 9223372036854775807, 3);
