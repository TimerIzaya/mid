let v1 = 1n;
function f3(a4) {
    const o14 = {
        [v1]: a4,
        __proto__: a4,
        "d": v1,
        [13709n](a6, a7) {
            var d = this;
            !v1;
            Math.ceil(1.1561201267839309e+308);
            --v1;
            return a6;
        },
    };
    return o14;
}
const v15 = f3(v1);
f3(23057n);
const v17 = f3(v1);
class C18 extends f3 {
    toString(a20, a21, a22) {
        this.d %= this;
        try {
            f3(13709n);
        } catch(e24) {
        }
        return 23057n;
    }
    static [23057n] = f3;
    a = f3;
    static #d = 23057n;
}
new C18();
new C18();
const v27 = new C18();
let v28 = v27.a;
let [v29,,v30] = v28;
v28 &= v29;
function f31() {
    return v15;
}
v17.valueOf = v30;
const v0 = [];
const v1 = [6,1367387771,-4294967297,-268435456,268435439,-24496,-36368,65535,-10,0];
const v2 = [8036,3];
const v3 = [9007199254740992,1073741825,1000,4294967297,0,-536870912,65537,7];
class C7 {
    static #g = v1;
    #h = v0;
    constructor(a9, a10) {
    }
    #m(a13, a14) {
        try {
            super.setInt8(a14, v3);
        } catch(e16) {
        }
        try {
            new Uint8ClampedArray(6);
        } catch(e20) {
        }
        try {
            new Float64Array(144);
        } catch(e24) {
        }
        try {
            new BigUint64Array(879);
        } catch(e28) {
        }
        return Float64Array;
    }
}
new C7(0n, v1);
const v30 = new C7(51660372n, v1);
new C7(51660372n, v1);
try {
    new BigInt64Array(129);
} catch(e35) {
}
try {
    new BigInt64Array(8);
} catch(e39) {
}
try {
    new Float32Array(1024);
} catch(e43) {
}
with (v3) {
    length = v1;
    try {
        v3[8] = 463987444n;
    } catch(e44) {
    }
}
g = v1;
v30[v2];
for (let v46 = 0; v46 < 32; v46++) {
    v3["p" + v46] = v46;
}
