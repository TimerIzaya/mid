function f0() {
}
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    this.b = f0;
    this.d = f0;
    this.a = f0;
}
const v3 = new F1();
const v4 = new F1();
const v5 = new F1();
const v9 = [268435439,v3];
const v10 = [v9,10000];
const v11 = [v10,v5,v10,2036412406,v10];
class C12 {
    static 2147483647;
    static {
        this instanceof F1;
        class C15 {
            static g;
            static #d;
            g = v9;
            c = v11;
        }
        new C15();
        new C15();
        new C15();
    }
    [v4] = v9;
    static b = 10000;
}
new C12();
const v20 = new C12();
new C12();
delete v3[217];
C12[v5];
for (let i26 = 0, i27 = 10; i26 < i27; i26++, i27--) {
    Object.defineProperty(v4, 3540270994, { enumerable: true, value: i26 });
    continue;
    try { v10.push(Proxy, 268435439, 268435439, v20); } catch (e) {}
    continue;
}
