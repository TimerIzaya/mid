function f3(a4) {
    const o15 = {
        set a(a6) {
            this[4294967295];
        },
        "c": 268435441,
        [-9223372036854775808](a9) {
            const o13 = {
                "execution": "sync",
                "type": "major",
            };
            gc(o13);
            return "major";
        },
    };
    return o15;
}
f3(268435441);
const v17 = f3(268435441);
const v18 = f3(-9223372036854775808);
const v21 = new Uint32Array(6);
new Uint32Array(3);
const v27 = new Int32Array(12);
12 & v27;
const v29 = 6 & Int32Array;
try { v17.o(v29, v18); } catch (e) {}
for (const v31 in v21) {
    const o34 = {
        "maxByteLength": 3988,
    };
    const v36 = new SharedArrayBuffer(3988, o34);
    new Float64Array(v36);
}
let v0 = [0.5022985744697827,0.9799465718038467,-569756.9738324339,-842.0241198465058,-2.220446049250313e-16];
const v1 = [-2.0];
[2.2250738585072014e-308,-1000000000000.0,447.15023424330593,-5.0];
try {
    new Uint16Array(2);
} catch(e9) {
}
let v11 = Uint32Array;
try {
    new v11(1284);
} catch(e13) {
}
try {
    new Int8Array(1114);
} catch(e17) {
}
function f18(a19, a20, a21) {
    const o27 = {
        [Int8Array]: v0,
        [-2.5789720160597973]: Uint16Array,
        ...v0,
        [v0]: a19,
        2: a21,
        "a": a21,
        o(a23, a24) {
            function f25() {
                return a19;
            }
            a21 + a24;
            return a20;
        },
        "e": v0,
    };
    return o27;
}
const v28 = f18(2, -0.0, v1);
const v29 = f18(1114, -2.5789720160597973, v1);
f18(1114, 479356.3755225707, v0);
v0.length /= -2.5789720160597973;
({"a":v11,"e":v0,} = v28);
function f34(a35) {
    return v29;
}
class C36 extends f34 {
    static {
        try {
            f34(16n);
        } catch(e40) {
        }
    }
}
