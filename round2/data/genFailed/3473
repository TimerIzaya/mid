function f3() {
    return 1000n;
}
const v6 = new Uint8ClampedArray(7);
const v9 = new Int32Array(13);
new Uint16Array(1);
let v13;
try { v13 = v9.reduce(f3, v6); } catch (e) {}
let v14;
try { v14 = v13(v13, Uint16Array, Int32Array, Int32Array, f3); } catch (e) {}
v6[Uint8ClampedArray];
[-1.7976931348623157e+308,1000000000.0];
[-889127.1300175036,-844707.0170563586,2.5246651825598505,-1e-15];
[5.0,1000000.0,452.0678382234514,1000000000.0,0.18950496682747464,2.220446049250313e-16,-4.0];
Object.defineProperty(v14, Uint8ClampedArray, { writable: true, configurable: true, enumerable: true, set: f3 });
new Float64Array(2);
new Uint8ClampedArray(1);
new Int8Array(0);
