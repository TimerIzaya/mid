const v2 = new Array(9);
let v5 = new Uint8Array(91);
let v7 = Int16Array;
const v8 = new v7(3529);
let v9 = 2629;
let v11 = new Float64Array(v9);
v11.toString = Array;
v11 %= v11;
({"byteOffset":v9,"length":v7,} = v8);
v5 /= v5;
const v13 = Symbol.toPrimitive;
const o16 = {
    [v13]() {
        v2[this];
        return v9;
    },
};
class C3 {
    #m(a5, a6) {
        try {
            this[-2] = 12;
        } catch(e7) {
        }
        const o10 = {
            "maxByteLength": 255,
        };
        const v12 = new ArrayBuffer(124, o10);
        try {
            new Uint16Array(v12);
        } catch(e15) {
        }
        return this;
    }
}
const v16 = new C3();
const v17 = new C3();
const v18 = new C3();
class C19 {
    static 0 = 12;
    #valueOf(a21, a22, a23) {
        try {
            C3[1] = a22;
        } catch(e24) {
        }
        return 268435456;
    }
    9 = 35603;
    constructor(a26, a27, a28, a29) {
        const v30 = this[2];
        try { v30.sign(12, C3, v16); } catch (e) {}
        this === a29 ? this : a29;
    }
}
const v34 = new C19(C3, 35603, C3, C3);
const v35 = new C19(v17, 12, v34, C3);
new C19(v35, 35603, v18, v34);
class C37 {
    [-2] = v18;
    static f = v16;
    #g = C19;
    [268435456] = v17;
    toString(a39, a40) {
        try {
            v35[this] = v35;
        } catch(e41) {
        }
        return v17;
    }
    #d;
    f = v17;
    #a;
    #h;
}
new C37();
const v43 = new C37();
const v44 = new C37();
class C45 extends C3 {
    static #h = v16;
    [v43] = 35603;
    #a = v35;
}
new C45();
new C45();
const v48 = new C45();
v44[v48] >>>= 12;
delete v35[C45];
