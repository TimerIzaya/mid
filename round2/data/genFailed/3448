new BigUint64Array(129);
const v5 = new Float32Array(4);
const v8 = new Int32Array(4);
function f9() {
    return v5;
}
class C10 extends Int32Array {
    static #toString(a12, a13, a14) {
        super.byteLength;
        v8.__proto__ = v8;
        super.buffer;
        return BigUint64Array;
    }
    4;
    static #h;
    p(a18, a19, a20) {
        let v21 = Int32Array >= a20;
        if (v21) {
            v8[Int32Array] = a18;
        } else {
            v21 *= v21;
            new Map();
        }
        return 4;
    }
}
let v24 = new C10();
const v25 = new C10();
const v26 = new C10();
v26.d = Int32Array;
v24.length = 0;
let v28 = 10;
for (; v28--;) {
    v24 = v25;
}
