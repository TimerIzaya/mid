class C3 {
    static 10;
    get e() {
        this[this << this] = this;
        return 1000;
    }
    1024;
    #n(a7, a8) {
        return a7;
        try { ("9007199254740990").trimLeft(); } catch (e) {}
        super.b;
        return a8;
    }
}
new C3();
const v12 = new C3();
const v13 = new C3();
new Set();
const v20 = new Set();
try {
    v12.slice("b", Set, -44794);
} catch(e22) {
}
const v24 = [];
const t24 = Reflect.apply(v20.clear, v13, v24);
delete t24?.[2];
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 4294967296;
    } catch(e3) {
    }
}
new F0();
new F0();
let v6 = new F0();
const v8 = /qoa\sc+/dgmv;
/a\w*/simv;
/(?=.)a||bca+b|c?/sdguy;
/a*ba\b!/sidgyv;
/\P{Any}P/idgmv;
/(?=)*/smu;
for (let v20 = 0; v20 < 22; v20++) {
    const v24 = -Infinity;
    --v6;
    +v8;
    -(!v8);
    v8 >>> v24;
}
