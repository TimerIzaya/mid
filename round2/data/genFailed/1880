class C3 {
    toString(a5, a6) {
        const v7 = this.a;
        super.g ||= 1e-15;
        let v8;
        try { v8 = new v7(a6, 1e-15); } catch (e) {}
        v8[a5] &= a6;
        try { v8(v7); } catch (e) {}
        return 1e-15;
    }
    ["7F"];
    [1e-15];
    static 1073741824;
    #d = "multiline";
    0 = 1e-15;
}
const v10 = new C3();
const v11 = new C3();
const v12 = new C3();
const v13 = [848332286,-2,9007199254740990,536870889,7];
const v14 = [-65535,4096,512,65536,-18687,257];
let v15 = [9,155610842,4294967296,-62753,52749,39428,-1030777977,536870912,91270166];
function F16(a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = v12;
}
let v20 = new F16(v15, v14);
const v21 = new F16(v13, v14);
const v22 = new F16(v20, v21);
function* f23(a24, a25, a26, a27) {
    a27["7F"];
    yield v13;
    return v10;
}
f23(v13, v14, v13, v11);
v20 = v22;
F16 | v15;
v15 = v13;
"multiline" % v12;
