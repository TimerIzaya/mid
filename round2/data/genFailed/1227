const v5 = new Uint8Array(1685);
new Float32Array(19);
new Int16Array(1318);
function F12(a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a15;
    this.c = a14;
}
new F12(-1000.0, 1318);
const v17 = new F12(1318, Int16Array);
const v18 = new F12(v5, v17);
function f19(a20, a21) {
    arguments.callee = a21;
    a21 instanceof a20?.[Uint8Array];
    return arguments;
}
f19(v18, v17, Float32Array)[v17]?.[8];
const v3 = ["e","e","then","e"];
const v4 = ["includes",v3];
[v4,"then","then","includes",v4];
class C9 {
    static o(a11, a12, a13, a14) {
        return -9007199254740991n;
    }
    static #g = v4;
    #b = v3;
    #toString(a19, a20, a21, a22) {
        class C23 {
            static #g;
            #a = 65536n;
        }
        new C23();
        new C23();
        new C23();
        return -65535n;
    }
}
new C9();
new C9();
new C9();
class C30 {
    static {
        for (let i33 = 0; i33 < 2; i33++) {
            ([..."then",-9007199254740991n]).length;
            v3[5];
        }
    }
}
const v42 = new C30();
new C30();
const v44 = new C30();
v44[0] >>= "then";
/VbwH/dmv;
/^xxx$KMMsk{K/dgm;
/Fx((((.).).).)\u{12345}\u{23456}?/igmv;
with (v42) {
    let v49;
    try { v49 = new h(C9, C30); } catch (e) {}
    v49[5] += h;
    Math.log2(v49);
    Math.cos(4294967297);
    v49 * 4294967297;
}
