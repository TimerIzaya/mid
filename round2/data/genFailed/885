function f0() {
}
function f1() {
    return f0;
}
new Uint8Array(257);
const v7 = new Uint8ClampedArray(1);
const v10 = new BigInt64Array(11);
class C11 extends Uint8Array {
    n(a13, a14) {
        [-9,1000,422186681,268435441,59431,-13,5];
        [8,-1317463338];
        [-9223372036854775807,-9223372036854775808,10000,30839];
        return super.subarray() >> 1;
    }
    static [v7] = 257;
    static #b;
    static #d = v10;
    2106564142;
    a;
}
new C11();
new C11();
const v22 = new C11();
class C23 {
    a;
    9 = Uint8Array;
    static [Uint8ClampedArray] = C11;
    2147483647 = f0;
}
new C23();
new C23();
const v26 = new C23();
v26 % v22;
const v0 = /ga*ba*bBvea[a]3Y/sidgmyv;
const v1 = /[CSy(?:foo)+]/sidmyv;
const v2 = /EILabc|def|ghi/gmv;
const v3 = [v2];
const v4 = [v3,v0,v3];
const v5 = [v4];
function f6(a7, a8) {
    const o11 = {
        "c": v3,
        "a": v0,
        "f": v1,
        [v2]: v5,
        get d() {
            try {
                v1[4294967295] = this;
            } catch(e10) {
            }
            return a8;
        },
    };
    return o11;
}
const v12 = f6(v3, v5);
const v13 = f6(v4, v2);
const v14 = f6(v5, v13);
const v15 = v14 > v3;
if (v15) {
    const o16 = {
    };
    try {
        o16.d = v13;
    } catch(e17) {
    }
    try {
        const o18 = {
        };
        o18.d = v13;
        o18.g = v14;
    } catch(e19) {
    }
    try {
        const o20 = {
        };
        o20.d = v13;
        o20.g = v14;
        o20.c = v12;
    } catch(e21) {
    }
    try {
        const o22 = {
        };
        o22.d = v13;
        o22.g = v14;
        o22.c = v15;
    } catch(e23) {
    }
} else {
    var g = f6;
}
