function f0() {
    const o7 = {
        [-1781840760](a5) {
            try { a5(a5); } catch (e) {}
            return a5;
        },
        "e": 1.7976931348623157e+308,
        "c": -1781840760,
        ..."4294967297",
        ["4294967297"]: -1781840760,
        ..."4294967297",
        [-1781840760]: "4294967297",
    };
    return o7;
}
const v8 = f0();
f0();
const v10 = f0();
function f11() {
    return v8;
}
function f12() {
    return f0;
}
class C13 extends f12 {
    static #o(a15, a16, a17) {
        let v18 = super.b;
        v18 -= v18;
        a17 * v10;
        return f0;
    }
    static [f11];
    e;
    static [-1];
    static h;
}
new C13();
const v21 = new C13();
new C13();
let [v23] = v21;
v23.toString = f12;
v10.valueOf = f11;
Math.cbrt(f12);
Math.min(-4294967297);
const v28 = -4294967297 % f12;
Math.acosh(f12);
v28 % v28;
Math.sin(f12);
Math.acosh(-4294967297);
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -47585;
    } catch(e3) {
    }
    try {
        this.c = -47585;
    } catch(e4) {
    }
}
const v5 = new F0();
new F0();
new F0();
class C8 extends F0 {
    constructor(a10) {
        super();
        try {
            a10.toString = a10;
        } catch(e11) {
        }
    }
    static h;
    g;
    12;
}
const v12 = new C8(C8);
new C8(v12);
new C8(v5);
[1.0,-2.220446049250313e-16,2.0,-0.0,-3.0,-815958.067422661,-1000.0,-424.0593091521596,9.36153448078625];
[-8.906054712453493,-1.0,-1.424365861266162e+308,-1.4305015099979603e+308];
const v20 = [-440.37486476692345];
try {
    v5.fuck(536870888, 536870888, v20, false);
} catch(e24) {
}
v12 > "ignoreCase";
