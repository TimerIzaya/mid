function f0() {
}
const v3 = new Float32Array(175);
const v6 = new Float32Array(9);
new Int16Array(3768);
class C14 extends Float32Array {
    #b;
    [3768];
    m(a16, a17) {
        v3 ^ super.slice(a16);
        function f20() {
            return -3337;
        }
        return 9;
    }
    static #p(a22, a23, a24, a25) {
        v6[536870912] = a24;
        this[4123458308] = -3337;
        const o29 = {
            valueOf() {
                const v27 = new Int16Array(this, -128, 1399096040, false);
                new Float32Array(v27, a24, a24);
                return a25;
            },
        };
        return o29;
    }
}
new C14();
new C14();
const v32 = new C14();
const v33 = new f0();
switch (v33) {
    default:
        Object.defineProperty(v32, f0, { writable: true, configurable: true, enumerable: true, get: f0 });
        break;
}
f0();
%PrepareFunctionForOptimization(f0);
f0();
f0();
%OptimizeMaglevOnNextCall(f0);
f0();
const v1 = new WeakMap();
v1[3877];
try {
    v1[3] = -3;
} catch(e12) {
}
const v13 = new WeakMap(v1);
function f14() {
    return 4.118816526015889;
}
v13.c;
