function f0() {
}
const v3 = new Int32Array(2435);
const v6 = new Uint16Array(0);
const v9 = new Uint32Array(3);
class C10 extends Uint16Array {
    constructor(a12, a13) {
        super(0);
    }
    o(a18, a19, a20, a21) {
        const o25 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o25);
        return o25;
    }
}
const v27 = new C10(0, 2435);
new C10(0, 0);
new C10(0, 3);
try { v6.values(); } catch (e) {}
const v31 = 3 + v27;
let v32;
try { v32 = C10.o(Uint16Array, v31, v9, v9, v3); } catch (e) {}
[10,65537,5,-9223372036854775807,-2147483649,-65535];
[-1073741824,14,4294967297,-9007199254740991,-1024,-27758,255];
const v35 = [2147483649,1073741823,536870912,-866920767,129,22835,3];
f0();
try { v3.at(0); } catch (e) {}
v35.length &&= v32;
const v0 = [];
const v1 = [v0,v0,v0];
const v2 = [v1,v1,v1,v0];
const v7 = [v2,[v1,v1,v1],-1.7976931348623157e+308,-0.0];
const v8 = [v7,v7,v0];
[v1,v2,v7];
function f10() {
    return v2;
}
for (const v11 of v2) {
    try { v11(v11, v11, v0, v11); } catch (e) {}
    v8.length <<= -1.0;
    continue;
    try {
        v0.at(-52781);
    } catch(e15) {
    }
}
