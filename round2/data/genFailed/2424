const v0 = [-353459460,-9223372036854775807,536870888,-41943,5904,1012573292,4,4294967297,-2];
const v1 = [-1314392009,-2147483648,56162,13,11,4294967296,268435439,127,65537];
const v2 = [9,-1073741824,6558,1,255,15,-65536,-29442,257];
class C4 {
    #m(a6, a7) {
        delete v1[2];
        with (a6) {
            length * length;
        }
        v2[Symbol.species];
        return v2;
    }
    #d;
    static 3 = v0;
    g;
    static [v1] = v2;
}
const v14 = new C4();
const v15 = new C4();
const v16 = new C4();
function F17(a19, a20, a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = v2;
}
const v23 = new F17(false, v15, v16, v16);
const v24 = new F17(v1, v16, v15, v23);
const v25 = new F17(C4, v14, C4, v16);
function F26(a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = v1;
    this.h = v25;
}
new F26(v24, v14, v15);
new F26(v23, v16, C4);
const v33 = new F26(v23, v16, v16);
v2.__proto__;
delete v15[v15];
v0.b = C4;
v33.h = F26;
function f36() {
    return v2;
}
const o37 = {
};
new Proxy(v1, o37);
