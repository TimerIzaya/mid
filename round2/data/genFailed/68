class C3 {
    static 9 = "toString";
    #n(a5, a6) {
        this.f ^= a6;
        let v7 = 0;
        while (v7 < 4) {
            a5 /= this;
            v7++;
        }
        return "toString";
    }
    5 = "toString";
    ["aQwg"];
}
const v11 = new C3();
const v12 = new C3();
const v13 = new C3();
function f14(a15, a16) {
    const o28 = {
        "h": a15,
        "d": C3,
        get c() {
            let v18;
            try { v18 = ("aQwg").padStart(997977355, "toString"); } catch (e) {}
            [["aQwg",this,[v18,a16,this,v18],a15,997977355],a15,v12];
            return a16;
        },
        2: C3,
        set a(a23) {
            const o24 = {
                __proto__: "aQwg",
                [a16]: a23,
            };
            Reflect.construct(C3, [], a23);
        },
    };
    return o28;
}
f14("toString", v12);
const v31 = f14(f14("toString", C3), v11);
new Uint8Array(2234);
new BigUint64Array(121);
const v40 = new Uint8ClampedArray(9);
let v41;
try { v41 = v13.o(v12, v31); } catch (e) {}
v41[0] = v41;
let v42 = 0;
while (v42 < 10) {
    v40[Uint8Array | Uint8Array];
    v42++;
}
class C6 {
    ["boolean"];
    static {
        let v7 = this;
        try {
            v7 &&= "boolean";
        } catch(e8) {
        }
    }
    get a() {
        const t10 = "E";
        t10["object"] **= -9007199254740990;
        try {
            super.preventExtensions();
        } catch(e11) {
        }
        return this;
    }
}
const v12 = new C6();
new C6();
new C6();
function f16() {
    return "boolean";
}
switch ("boolean") {
    default:
        try {
            v12.a = -6;
        } catch(e17) {
        }
        break;
}
let v18;
try { v18 = ("E").search(C6); } catch (e) {}
v18[Symbol.asyncIterator] = -9007199254740990;
