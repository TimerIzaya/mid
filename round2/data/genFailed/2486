function f6(a7, a8, a9, a10) {
    const o20 = {
        "b": "p",
        ["bigint"](a12, a13, a14) {
            const o18 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o18);
            return "bigint";
        },
        ["-15"]: a9,
        "f": "a",
    };
    return o20;
}
const v21 = f6("Yrky8", "Yrky8", "mmE", "bigint");
const v22 = f6("a", "-15", "-15", "Yrky8");
f6("p", "mmE", "mmE", "Yrky8");
class C24 {
    static 6 = "bigint";
    static 9;
    static #c;
    static get g() {
        const v26 = [this,"bigint",v22,this];
        const v27 = [v21,"bigint",v26,"a","a"];
        [v26,v27,f6,v27];
        const o31 = {
            "maxByteLength": 1462,
        };
        const v33 = new SharedArrayBuffer(10, o31);
        const v35 = new BigInt64Array(v33);
        return v35;
    }
}
new C24();
new C24();
const v38 = new C24();
[v38,v38,"Yrky8"];
["a","bigint",v38];
["Yrky8",v21];
new f6("p", "bigint", "Yrky8", v21);
const o46 = {
    "apply": f6,
    "call": f6,
    "construct": f6,
    "defineProperty": f6,
    "getOwnPropertyDescriptor": f6,
    "getPrototypeOf": f6,
    "has": f6,
    "isExtensible": f6,
    "ownKeys": f6,
    "preventExtensions": f6,
    "setPrototypeOf": f6,
};
new Proxy("Yrky8", o46);
