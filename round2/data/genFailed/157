const v0 = [256,2109995919,2147483649,2147483648];
const v1 = [9007199254740990,-60231,-1619284893];
const v2 = [1073741825,2147483649,1079745522,1258658258,6,-37960,7,5,7658,1653963480];
const v4 = new Map();
class C5 extends Map {
    a = v4;
    constructor(a7) {
        super(a7);
        this[Map] = this;
        a7.d = this;
        const o10 = {
            "maxByteLength": 2580628333,
        };
        const v12 = new ArrayBuffer(9, o10);
        new Int32Array(v12);
    }
}
const v15 = new C5(v0);
new C5(v0);
new C5(v1);
new Uint32Array(512);
new Int16Array(1024);
const v26 = new Float64Array(1041);
function F27(a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a29;
}
new F27(v1, v1);
const v32 = new F27(v2, v2);
new F27(v2, v1);
v32.length = 0;
try {
const t0 = 0;
t0(v26, v0, v2, v15, v4);
} catch (e) {}
v1[4294967296];
const v3 = [-929168.9536382459,0.9408982540088618];
const v4 = [6.743277732690586,8.501457533128374,239.45166350582554,141.98421534107115,-5.654629463849989,2.2250738585072014e-308,-198540.28428704513];
const v5 = [981947.4170000087,402.4482116533816,0.29905390289346234,0.8305035278418318,Infinity,1000000.0];
const v6 = [v4,v3,v5];
const v7 = [1000.0,v3,v6,v4];
const v8 = [v6,v3,v7,v6];
function F9(a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = v8;
    } catch(e14) {
    }
    try {
        this.f = a12;
    } catch(e15) {
    }
    try {
        this.b = a12;
    } catch(e16) {
    }
}
new F9(v6, v6, -1.9864997075111184);
const v18 = new F9(v7, v5, -1.9864997075111184);
const v19 = new F9(v6, v5, v7);
let v20;
try { v20 = v7(v5); } catch (e) {}
const v21 = v20 + -0.0;
try {
    v18.a = v21;
} catch(e22) {
}
v19 instanceof v20;
v19 | v19;
v7[1607215036] &= 1000.0;
