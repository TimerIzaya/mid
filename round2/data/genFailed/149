const v0 = [587.5987499465564,1000000000000.0,1000000000.0,Infinity,1.452172128749268e+308,1000000.0];
[-9.578233991834255,1.6444635982936213e+308,-1000000000000.0,-1000000.0,-1000.0];
const v2 = [-459941.84962847724,-2.0,4.6157404092408997e+306,-9.55080848348321,-1000.0,-1000000000.0];
function f6() {
    return -65535n;
}
class C7 extends f6 {
    5 = -526305114n;
    constructor(a9, a10) {
        super();
        b = this;
        const v11 = f6();
        try { v2.copyWithin(v11, 2n, a9); } catch (e) {}
        new Map();
        let v17 = -61818;
        Math.asin(f6);
        --v17;
        ++a10;
    }
}
new C7(-526305114n, -65535n);
new C7(2n, -65535n);
new C7(-65535n, -65535n);
[2.0,-1000000000.0,-405.2913632598892,-171778.66696844308,1000000000.0,1000000000.0];
const v26 = [-1000000.0,1.0,-6.259693069187959,-1000000000000.0,1.0055157104456023e+308,-1.0262593093018487e+308];
[-145.7065499451669,538043.1114633265,-1000000000.0];
let v34 = -25154 ^ -65535n;
-65535n >>> v34--;
v0[13] = -526305114n;
v26[Symbol.search] = -2.90507896080591e+307;
for (const v12 of -6) {
    v12.__proto__;
    function f14() {
        return -9223372036854775807;
    }
}
2 | 49341;
