const v0 = [4294967297,-4,257];
let v1 = [4294967296,1454231131,5,129,-128,-64899];
const v2 = [1000];
const v5 = new Float64Array(965);
const v8 = new Uint32Array(557);
const v11 = new Uint8Array(1000);
class C12 extends Uint32Array {
    n(a14, a15) {
        function f16(a17) {
            return a17;
        }
        class C18 extends f16 {
            #h = a14;
        }
        return C18;
    }
    [965] = v0;
    static d = v5;
    [v5];
    static c;
    [v1] = v5;
}
const v19 = new C12();
new C12();
new C12();
v8[2] *= 965;
let v22;
try { v22 = v19.reduceRight(Uint8Array); } catch (e) {}
v1[v5] ||= v22;
v1 = v2;
%VerifyType(Uint32Array);
v11[v22] = Uint8Array;
/\cA/gmysd;
/a(?=b)/gmu;
/[^U[\cA]]/midu;
v5[v2];
