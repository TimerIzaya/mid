const v0 = [13];
const v1 = [1073741824,14,1162302049,-10,558927174,127,-65536,-55247];
const v2 = [268435440,17940,-65537,-2082035124,5648,1024];
function f3(a4) {
    const o13 = {
        [a4]: a4,
        "b": a4,
        "a": v1,
        "e": a4,
        "h": a4,
        608: a4,
        set c(a6) {
            this || a6;
            delete this[1000];
            const v10 = [];
            Reflect.apply(v0.toString, this, v10);
        },
    };
    return o13;
}
const v14 = f3(v2);
let v15 = f3(v0);
const v16 = f3(v15);
function f17() {
    return v14;
}
function f18() {
    return v16;
}
v16[268435441n] >>>= v1;
throw TypeError;
v15 &= v14;
let v30 = -427.20530866129786 | 11;
const v31 = v30 ^ 11;
const v32 = v30++;
Math.sqrt(v31);
Math.trunc(v32);
v14 << v31;
!v32;
class C6 {
    [-400.399652912625] = 3;
    static valueOf(a8, a9, a10, a11) {
        try {
            super[-400.399652912625] = -400.399652912625;
        } catch(e12) {
        }
        let {"e":v13,"f":v14,...v15} = this;
        try {
            super.a = -1e-15;
        } catch(e16) {
        }
        return 1073741824;
    }
}
new C6();
const v18 = new C6();
const v19 = new C6();
try {
    new Int32Array(3486);
} catch(e23) {
}
try {
    new Int16Array(2);
} catch(e27) {
}
try {
    new Uint8Array(2561);
} catch(e31) {
}
delete v19[-2];
for (const v33 of v18) {
    v18[3];
    h = v33;
    try {
        new Uint32Array(1);
    } catch(e38) {
    }
    try {
        new Int16Array(8);
    } catch(e42) {
    }
    try {
        new Uint8Array(3809);
    } catch(e46) {
    }
}
