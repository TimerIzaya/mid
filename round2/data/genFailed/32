class C3 {
    n(a5, a6) {
        new Int32Array(2);
        new Uint16Array(1117);
        new BigUint64Array(15);
        return Int32Array;
    }
}
const v16 = new C3();
const v17 = new C3();
const v18 = new C3();
function f19(a20, a21, a22) {
    const o37 = {
        get b() {
            let v24 = 0;
            while (v24 < 2) {
                new Uint32Array(127);
                new Int32Array(255);
                new Uint16Array(512);
                v24++;
            }
            return C3;
        },
    };
    return o37;
}
const v38 = f19(v17, v18, v16);
const v39 = f19(v38, v38, v18);
const v40 = f19(v18, v16, v16);
const v41 = /p(?:a?)*/msu;
/((((.).).).)[\xe2\x81\xa3a\Bb(?:ab){4,7}CFE\xed\xa0\x80]+/myisdv;
/SW/gyv;
const v44 = new C3();
let v45 = 0;
while (v45 < 9) {
    v39[-2] = v44;
    try { v41["test"](...v16, ..."test", ..."test", ..."test", ..."test"); } catch (e) {}
    Math.tanh(16);
    16 * v40;
    ~(-16);
    ~16;
    v45++;
}
function f0() {
    const o8 = {
        "h": "bigint",
        [-1]: 1024,
        ..."bigint",
        "b": 1000.0,
        toString(a5) {
            let v6;
            try { v6 = a5.n(this, 1000.0); } catch (e) {}
            const t9 = v6?.[v6];
            t9[7] = a5;
            return 1024;
        },
        64: 1024,
        __proto__: "bigint",
        "a": "bigint",
        "e": 1024,
        "c": 1024,
    };
    return o8;
}
const v9 = f0();
const v10 = f0();
const v11 = f0();
class C12 {
    #toString(a14, a15) {
        const v19 = +v11;
        Math.log2(v10);
        Math.expm1(v19);
        Math.cosh(v11);
        v9 * v9;
        return -163984.46516517096;
    }
    static 18;
    static #h = v9;
    #e = v10;
    static [v11];
}
const v24 = new C12();
const v25 = new C12();
const v26 = new C12();
let v27 = -2058156111;
let v28 = -64244;
let v31 = BigUint64Array;
try {
    new v31(3423);
} catch(e33) {
}
try {
    new Uint16Array(806);
} catch(e37) {
}
try {
    new BigInt64Array(1);
} catch(e41) {
}
let v42;
try { v42 = v25.p(C12, Uint16Array, 3423, 806); } catch (e) {}
({"a":v31,"e":v27,"h":v28,...v42} = v9);
let v43 = 0;
while (v43 < 3) {
    try { v28(...Uint16Array, v42, v24, ...v11, BigInt64Array); } catch (e) {}
    v26[257] &&= v28;
    v43++;
}
