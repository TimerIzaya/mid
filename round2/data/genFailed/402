function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a5;
}
const v7 = new F3(752.7746284422662, -5.05208682461494e+307);
const v8 = new F3(-5.05208682461494e+307, 752.7746284422662);
const v9 = new F3(-796.3717142814309, -796.3717142814309);
function f10() {
    return v9;
}
const v14 = v9[v7];
try {
    v7.getInt8(v7, -796.3717142814309, 752.7746284422662);
} catch(e16) {
}
const v17 = v8[4];
v9[752.7746284422662] = v14;
v7.b = v9;
v17.c = f10;
new Uint32Array(8);
new Uint8Array(3022);
new BigUint64Array(255);
const v0 = /[Soa[a-z]]/idgu;
const v1 = /h(a)\1/idv;
const v2 = /{12,E3\xed\xb0\x80/idmy;
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v1;
    } catch(e6) {
    }
    try {
        this.b = v0;
    } catch(e7) {
    }
}
new F3(v0);
const v9 = new F3(v1);
new F3(v1);
try {
    new Uint32Array(5);
} catch(e14) {
}
try {
    new Int16Array(813);
} catch(e18) {
}
try {
    new Int32Array(512);
} catch(e22) {
}
const o23 = {
    __proto__: v9,
    "c": Uint32Array,
    129: 512,
};
v2[5];
const v25 = [45465,1734674282,30718,-5,-9007199254740992,256,-4096,268435439,1073741823];
[-268435456,9119,-7,-3,58552,58510,57917,34046];
const v27 = [1024,0,-1073741824,-1894075188,-65535,8509,-501089468,-1024];
try {
    v25[9] = v27;
} catch(e28) {
}
