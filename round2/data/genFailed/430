const v0 = [877.9730853821266,375.17950763597537,166702.42578366213,-1.0,0.7952469989833889,0.10585193005829319,-1000000.0,-Infinity];
const v1 = [2.0,-2.2250738585072014e-308,-349.79223431474634];
const v2 = [-1.7976931348623157e+308,-3.0,-7.505649033126106e+306];
const v4 = new Set();
const v7 = new Uint16Array(3719);
const v10 = new Float64Array(2301);
const v13 = new Uint32Array(23);
function f14(a15, a16, a17, a18) {
    const o30 = {
        toString(a20, a21, a22) {
            a17.toString = a15;
            a18 % a17;
            return this;
        },
        n(a25, a26) {
            const o27 = {
            };
            new Proxy(this, o27);
            return a26;
        },
        ...v4,
        "g": v7,
        ...v10,
    };
    return o30;
}
const v31 = f14(Uint32Array, v10, v1, v4);
f14(2301, 23, v2, v13);
const v33 = f14(v31, v10, v0, f14);
let v34;
try { v34 = v1.forEach(f14, v31); } catch (e) {}
const v35 = [-4294967296];
[4,-9007199254740992,-2147483649,-1,-1251423372,64,65535,2649];
[2147483648];
v33[v35] = v34;
const o40 = {
    "maxByteLength": 536870887,
};
const v42 = new SharedArrayBuffer(5, o40);
new Uint16Array(v42);
function f0() {
    const o13 = {
        ["boolean"]: 2.0,
        129: 2.0,
        n(a5, a6) {
            const v7 = 2.0 != this;
            v7 ? 2.0 : this;
            let v9 = 0;
            while (v9 < 0) {
                const t9 = "boolean";
                t9[1073741824] |= a5;
                a5[v7] -= 2.0;
                v9++;
            }
            return "boolean";
        },
    };
    return o13;
}
const v14 = f0();
const v15 = f0();
f0();
[-2,-6,4294967297,4294967295,-4294967296,268435456,1073741823,-2147483648];
[1073741823];
[268435456,2,2147483647,9665,64872,52651];
const v26 = [-279.20371378135815,175478.16577603435,-497922.23569695815];
[-1000000.0,1000000000000.0,-539462.186826735];
for (let [...v29] of [4.0,2.220446049250313e-16,-258.95813036784966]) {
    delete v15[3315931864];
    v14 ^ -1;
    const o32 = {
        "call": f0,
        "defineProperty": f0,
        "get": f0,
        "getOwnPropertyDescriptor": f0,
        "ownKeys": f0,
        "preventExtensions": f0,
    };
    try {
        new Proxy(v26, o32);
    } catch(e35) {
    }
}
