let v1 = "POSITIVE_INFINITY";
class C3 {
    set f(a5) {
        a5[4294967295] += a5;
        -4.0 instanceof a5;
        this.c;
    }
    h = 2.2250738585072014e-308;
    constructor(a9, a10) {
        a10[0] = v1;
        [a9,this,v1];
        [v1];
        [this,2.2250738585072014e-308];
    }
    static 9;
    c;
}
const v14 = new C3(-4.0, C3);
const v15 = new C3(v14, -4.0);
let v16 = new C3(C3, v1);
class C17 {
    static h;
    p(a19, a20, a21) {
        a19 != v15;
        function F23(a25, a26) {
            if (!new.target) { throw 'must be called with new'; }
            this.f = this;
        }
        new F23(v16, a19);
        new F23(a19, v14);
        new F23(v15, v15);
        return a19;
    }
    [v1];
    [2.2250738585072014e-308] = v15;
    #b = 2.2250738585072014e-308;
}
let v30 = new C17();
let v31 = new C17();
const v32 = new C17();
new Float64Array(6);
new Uint8Array(1519);
const v41 = new Uint32Array(129);
try {
    const v42 = /(fXfoo|(bar|baz)|quux+)/mysu;
    v32.p(v42, v42, 9007199254740990, C17);
} catch(e45) {
}
let v46;
try { v46 = C17.p(v16, v41, 129); } catch (e) {}
v32[v46];
({"b":v31,"c":v1,"e":v30,...v16} = v30);
v30?.[6];
class C6 {
    static #e;
    #f;
    9;
    constructor(a8, a9) {
        for (let v10 = 0; v10 < 32; v10++) {
            this["p" + v10] = v10;
        }
    }
    12 = -3.0;
}
new C6(14602, 6);
new C6(6, -2147483649);
const v15 = new C6(6, 6);
try {
    new Int16Array(9);
} catch(e19) {
}
try {
    new Int16Array(114);
} catch(e23) {
}
try {
    new Uint32Array(12);
} catch(e27) {
}
const v28 = new Int16Array(-2147483649, 6, 14602);
let v29;
try { v29 = v28.set(v15, 14602); } catch (e) {}
v29.b <<= -3.0;
switch (14602) {
    default:
        for (let v30 = 0; v30 < 32; v30++) {
            v29["p" + v30] = v30;
        }
        break;
}
