const v0 = [];
const v1 = [251787627,6431,-9007199254740991,7,157928708];
[-65536,-31043,33228,1073741823,-4294967296,-7,-1714968984,-268435456,1,257];
[-1755224567,106099401,13,16,536870912,-268435456,255];
new BigUint64Array(47);
const v12 = new Int32Array(49);
const v15 = new BigUint64Array(3045);
for (const v16 of v12) {
    delete v0?.length;
}
Reflect.construct(Int32Array, [v15,47,3045], BigUint64Array);
try {
    v1.unshift(v1, BigUint64Array, BigUint64Array);
} catch(e22) {
}
const v0 = [];
let v6 = -2;
try {
    new Float32Array(16);
} catch(e10) {
}
try {
    new Int16Array(5);
} catch(e14) {
}
try {
    new Float32Array(54);
} catch(e18) {
}
try {
    v6 = 4294967297;
} catch(e19) {
}
delete v0[12];
const v22 = [-1024];
Reflect.apply(v0.flatMap, v0, v22);
