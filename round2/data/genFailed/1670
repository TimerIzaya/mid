class C3 {
    536870887 = -1e-15;
    e;
    static d = -1e-15;
    #m(a5) {
        const v6 = a5;
        try {
            this.cosh(false, a5, a5, false);
        } catch(e9) {
        }
        const v11 = Symbol.iterator;
        const o20 = {
            [v11]() {
                let v13 = 10;
                const o19 = {
                    next() {
                        v13--;
                        const v17 = v13 == 0;
                        const o18 = {
                            "done": v17,
                            "value": v13,
                        };
                        return o18;
                    },
                };
                return o19;
            },
        };
        return -1e-15;
    }
}
const v21 = new C3();
const v22 = new C3();
new C3();
const v24 = [-1.124560597909376e+308,-655245.7302157091,-1.9116176064089044e+307,-9.143249050309993e+307,NaN,1.1643854072999361e+308,NaN,1.5035094268335427e+308,-4.0];
const v25 = [1e-15,0.8572667925538824,0.0,-1.767206287456152e+308,0.5704414308079482,2.6445641419979076,0.8071978172727861,-1.269190106741361e+308,-502465.54324224713];
const v26 = [100.7138679348891,5.0,852.8600315016708,-8.034100164081226,1000.0];
class C30 extends C3 {
    #valueOf(a32, a33, a34, a35) {
        v25.length = -62942;
        const v36 = delete a35[2112342754];
        try {
            ("size").#valueOf(v36, a32, a34, v36, a35);
        } catch(e38) {
        }
        return C3;
    }
    valueOf(a40, a41) {
        throw a41;
        super.e;
        return v21;
    }
}
new C30();
let v48 = new C30();
const v49 = new C30();
v48 &= v49;
try {
const t0 = 360855066;
t0(v22, "size", v24, v26);
} catch (e) {}
new Uint8ClampedArray(3);
new Int8Array(21);
new Int8Array(1024);
