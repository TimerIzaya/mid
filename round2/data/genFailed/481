let v0 = -1.0;
class C3 {
    n(a5) {
        super["-12"] = a5;
        new Uint32Array(9);
        new Int8Array(8);
        new Float32Array(1432);
        return Uint32Array;
    }
    2 = -1000000.0;
    [v0] = "-12";
}
const v15 = new C3();
const v16 = new C3();
const v17 = new C3();
class C18 {
    static get e() {
        const o23 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o23);
        return gc;
    }
    static c = v15;
    c;
    #a = v17;
    536870888 = v0;
}
new C18();
new C18();
new C18();
let v35 = -13;
let v37 = --v35;
--v0;
+"d";
++v37;
-4294967295n >> v0;
let {"g":v42,"h":v43,} = v16;
/ifoo(?=bar)bazX/misv;
/{,}*/mid;
/g[x]/iu;
try {
    new Int16Array(9);
} catch(e6) {
}
let v7 = 257;
try {
    new Float32Array(v7);
} catch(e10) {
}
try {
    new Float64Array(3503);
} catch(e14) {
}
function f15() {
    return Float64Array;
}
class C16 extends Float64Array {
    [f15];
    get a() {
        this.buffer;
        super.buffer >>= 9;
        var d = -3.931965290788179e+307;
        this[-952.2124140638743];
        e = Int16Array;
        return Int16Array;
    }
    a = Float64Array;
    [-3.931965290788179e+307];
    #a;
}
new C16();
new C16();
const v22 = new C16();
try {
    v22.valueOf = f15;
} catch(e23) {
}
try {
    f15();
} catch(e25) {
}
let v28 = 2147483649;
-1000000.0 + -952.2124140638743;
Math.sinh(-1000000.0);
let v32 = v7++;
Math.cbrt(v32);
++v32;
~-952.2124140638743;
--v28;
