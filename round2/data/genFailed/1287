let v4 = Uint16Array;
new v4(1000);
new BigInt64Array(58);
new Int16Array(0);
const v14 = new Uint8Array(55);
const v17 = new Int32Array(4);
new Uint16Array(2283);
function f21(a22, a23, a24) {
    0 / 0;
    return a24;
    return a24;
}
const v27 = f21(58, 4, 4);
v17[8] = v14;
new BigInt64Array(v14, v27, 4);
v4 &= Uint16Array;
[-9223372036854775808,-1083007889,-9007199254740990,-4294967296,-5671222,-23011,38656,-51430];
const v1 = [65535,-2147483649];
const v2 = [-27585,1557408411,16];
new Map();
function f8(a9, a10, a11) {
    const o18 = {
        "c": a10,
        [239.06634928988683]: a9,
        [Map](a13, a14, a15, a16) {
            try {
                a13[7] = a16;
            } catch(e17) {
            }
            return this;
        },
        ...v2,
    };
    return o18;
}
f8(1000000000000.0, 239.06634928988683, -1.1037598122073586e+308);
f8(1000000000000.0, -1.1037598122073586e+308, -1.1037598122073586e+308);
const v21 = f8(-1.1037598122073586e+308, 1000000000000.0, 1000000000000.0);
f8 ** v1.length;
function f24(a25, a26, a27) {
    'use strict';
    const v28 = new Map(v21);
    try {
        f8(-1000000.0, -1.0, 1.0737890198004368e+307);
    } catch(e33) {
    }
    return v28;
}
f24(-1.1037598122073586e+308, -1.1037598122073586e+308, 1000000000000.0);
