const v0 = [];
const v1 = [v0,v0,v0,v0];
const v2 = [v0,v1,v0];
const v3 = [v1,v2,v2,v1,v2];
const v5 = new Set();
class C9 extends Set {
    set c(a11) {
        new WeakSet();
        try {
            this.has(v3);
        } catch(e15) {
        }
    }
    static e;
    static [-444534853n];
}
const v16 = new C9();
new C9();
new C9();
const o19 = {
    3005053258: v5,
    __proto__: v3,
};
let v20 = 0;
do {
    let v21 = 0;
    do {
        const v22 = v16[2985773386];
        let v23;
        try { v23 = v22(); } catch (e) {}
        const v25 = [];
        Reflect.apply(v0.toReversed, v23, v25);
        v21++;
    } while (v21 < 4)
    v20++;
} while (v20 < 2)
class C3 {
    static #n(a5, a6) {
        const v10 = (-712721.9683314947) ** 4096;
        Math.pow(4096, v10);
        Math.min(v10);
        return 4096;
    }
    constructor(a14) {
        let v13 = this;
        const t9 = 1.3309488200589119e+308;
        t9[4] = a14;
        -1343422556 << -1343422556;
        const v18 = --a14;
        -1343422556 && a14;
        a14 & v18;
        --v13;
    }
}
new C3("bigint");
new C3("-1024");
const v24 = new C3("bigint");
const v30 = new Array(648);
try {
    new BigUint64Array(1723);
} catch(e34) {
}
try {
    new Float32Array(0);
} catch(e38) {
}
try {
    new Int16Array(5);
} catch(e42) {
}
let [,,v43] = v30;
class C46 extends v30.constructor {
    ["-1024"] = v24;
    static [-2] = 0;
    static f = "bigint";
}
const v47 = new C46();
v47[9] = C46;
