function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.g = -30853508;
}
const v3 = new F0();
const v4 = new F0();
const v5 = new F0();
class C6 extends F0 {
    toString(a8, a9) {
        a9.__proto__ = v4;
        new WeakMap();
        return a9;
    }
    valueOf(a13) {
        new F0();
        [-76879.78541138361,-1.7976931348623157e+308,0.0,0.9537507352450646,-235.9265863605666,1.6609493321340364e+308,0.9940174912520673,-565.1434106192262];
        const v16 = [-4.0,1000000000.0,34019.69226585794,-461078.199921928,-3.582666548719407e+307,1.1634914686832616e+308,-1000000.0];
        [1000000000000.0,-449.18582309855265,7.125774824583502e+307,-Infinity,1000000.0];
        v16 | a13;
        return v5;
    }
}
const v19 = new C6();
const v20 = new C6();
const v21 = new C6();
function f22(a23, a24) {
    const o35 = {
        [a24](a26, a27, a28, a29) {
            const v31 = [];
            const v32 = Reflect.construct(C6, v31, F0);
            try {
                super.setFloat32(v32, a24, v31);
            } catch(e34) {
            }
            return a28;
        },
        "e": v19,
        129: v3,
    };
    return o35;
}
f22(v4, f22(v19, v21));
f22(v21, v21);
for (let v39 = 0; v39 < 98; v39++) {
    %VerifyType(v3.g);
    f22(v20, v39);
    %PrepareFunctionForOptimization(f22);
    f22(v20, v39);
    f22(v20, v39);
    %OptimizeMaglevOnNextCall(f22);
    f22(v20, v39);
}
