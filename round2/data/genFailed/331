const v0 = [991443808,13,8,-9007199254740992,-215744765,-363493657,512,-65536,256];
[-13133,-5,16,-2,3306];
[4294967296,15169,50018,8];
let v4 = Int16Array;
const v5 = new v4(1359);
let v8 = new Float64Array(16);
const v11 = new Uint8Array(156);
let v12;
try { v12 = v11.set(v0, 1359); } catch (e) {}
[v8,v12] = v0;
const v14 = [1359,1359];
Reflect.apply(v5.copyWithin, v12, v14);
Reflect.construct(v4, [Reflect,1359], Float64Array);
v4 = v12;
function f6(a7, a8, a9, a10) {
    const o25 = {
        "g": 1576914996,
        0: 2147483648,
        m(a12, a13, a14, a15) {
            super.g;
            super[-6];
            const v20 = -Infinity;
            +v20;
            Math.cosh(a9);
            Math.pow(v20, v20);
            return Math.atanh(a9);
        },
    };
    return o25;
}
f6(2147483648, 268435456, 268435456, -6);
f6(1576914996, -11, -11, -11);
f6(-11, 1576914996, 268435456, f6);
const v29 = [662.1481890607361];
[2.7265988362633356e+307];
const v31 = [-6.031197276851168,0.49595708088421675,-1000.0,-1000000000000.0];
for (const v32 of v29) {
    Reflect.construct(v32, [Reflect,v32], v32);
    try {
        v31.__proto__ = v32;
    } catch(e37) {
    }
}
