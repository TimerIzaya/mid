class C3 {
    p(a5, a6) {
        this[1073741824] = this;
        new BigUint64Array(133);
        new BigUint64Array(4096);
        new Int32Array(2771);
        return BigUint64Array;
    }
}
const v16 = new C3();
new C3();
const v18 = new C3();
new Int32Array(138);
new Uint8ClampedArray(105);
const v27 = new Int32Array(8);
const v28 = v18[2147483648];
v28[Symbol.match] = 105;
v16.__proto__ = C3;
v18[v27];
C3.b = v28;
v16[10] = 138;
const o34 = {
    "maxByteLength": 3556,
};
const v36 = new ArrayBuffer(129, o34);
new BigInt64Array(v36);
try {
    new Int16Array(9);
} catch(e3) {
}
try {
    new BigInt64Array(95);
} catch(e7) {
}
try {
    new Uint8ClampedArray(0);
} catch(e11) {
}
function F12(a14, a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a17;
    } catch(e18) {
    }
}
const v19 = new F12(0, BigInt64Array, 9, 9);
const v20 = new F12(9, 0, Int16Array, 0);
const v21 = new F12(95, v19, BigInt64Array, 9);
const v22 = [v19];
const v23 = [Uint8ClampedArray,v22,v21,v20];
const v24 = [v22,Int16Array,v22];
const v25 = v23[2925];
try { v20.setHours(F12, v24, v25, BigInt64Array); } catch (e) {}
const v27 = (a28, a29) => {
    a28.__proto__;
    return 9;
};
h[128] &= 95;
new Set();
