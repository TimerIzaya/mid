const v1 = new WeakSet();
function F2(a4, a5) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = v1;
    this.e = a5;
}
const v6 = new F2(F2, F2);
const v7 = new F2(F2, F2);
const v8 = new F2(F2, v1);
class C9 extends F2 {
    constructor(a11, a12, a13) {
        let v10 = this;
        super(v6, a13);
        v10 *= a12;
        try { a11(v10, a11, v6, a11); } catch (e) {}
        a13[Symbol.matchAll];
    }
    #p(a19, a20, a21) {
        return super[v8];
    }
    3 = WeakSet;
}
const v23 = new C9(WeakSet, C9, v6);
const v24 = new C9(v6, v8, v7);
const v25 = new C9(v23, v24, v24);
new Uint16Array(3618);
let v29 = 132;
const v31 = new Int16Array(v29);
new Uint8ClampedArray(0);
v8[1073741825] ^= 3618;
for (let v35 = 0; v35 < 70; v35++) {
    var c = v7;
    v8.e;
}
new WeakSet();
v31.__proto__ = v25;
v29--;
!v23;
