function f0() {
    const o13 = {
        "h": -1.3139784543234875e+308,
        ..."toString",
        "f": -5.0,
        ["toString"]: "toString",
        m(a5) {
            return a5;
            function F6(a8, a9) {
                if (!new.target) { throw 'must be called with new'; }
                this.d = a5;
                this.b = -5.0;
            }
            new F6(F6, a5);
            new F6(-5.0, F6);
            const v12 = new F6(a5, "toString");
            return v12;
        },
    };
    return o13;
}
const v14 = f0();
let v15 = f0();
const v16 = f0();
function f17(a18) {
    const o24 = {
        [a18]: v16,
        268435456: a18,
        get h() {
            for (const v20 of a18) {
                new Map();
                ~this;
            }
            return v14;
        },
        [v15]: a18,
        "g": a18,
        268435439: a18,
        "d": v14,
        "c": a18,
    };
    return o24;
}
f17(f17);
const v26 = f17(v15);
const v27 = f17(f0);
function f28() {
    return v16;
}
const v30 = new WeakMap();
function F31(a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = v16;
}
const v35 = new F31(v26, f0);
const v36 = new F31(v35, v35);
const v37 = new F31(v27, v36);
WeakMap % v15;
v15[4] = f28;
const v39 = delete v30[1073741824];
const v41 = Symbol.toPrimitive;
const o45 = {
    [v41]() {
        let v43;
        try { v43 = v37.toString(this, v39, f28, v27, v30); } catch (e) {}
        [v26,v30,v43,v39];
        v15 -= v36;
        return v39;
    },
};
