class C3 {
    constructor(a5, a6) {
        let [v7,v8,v9] = "kz";
        [1,12,1];
        [536870887,-9007199254740991,9007199254740991,-829901680];
        [-1252472076,4362,-41547,1018628281,-9007199254740990,-268435456,51434,3];
    }
    static 2483;
    [-2] = "kz";
    static d;
    static #g = "55061";
}
const v13 = new C3("55061", C3);
const v14 = new C3("kz", v13);
const v15 = new C3(291859.5933356155, "kz");
const v16 = [-974285.9813489806];
[0.7615795061529413,-2.220446049250313e-16,-869.6084710111653,0.5641661516307134];
const v18 = [6.892857009565261e+307,NaN,1000000000.0,1.0,-1.7976931348623157e+308,596356.8463765008,-784.2591108730121];
try { v18.sort("55061"); } catch (e) {}
const v20 = v16 ^ 291859.5933356155;
const v21 = C3[v20];
let v22;
try { v22 = v21(v14); } catch (e) {}
const t23 = "55061";
t23.length **= v22;
v16[0] |= v20;
v21[v15] = v13;
let v0 = -964334.2871729041;
class C3 {
    n(a5, a6) {
        let v7;
        try { v7 = a6(a6, a6); } catch (e) {}
        super.a &&= 8;
        try {
            v0 = v7;
        } catch(e8) {
        }
        return a6;
    }
    #g;
    [v0];
    static g;
    ["bigint"] = "bigint";
}
const v9 = new C3();
const v10 = new C3();
const v11 = new C3();
class C12 extends C3 {
    static b = v11;
    constructor(a14, a15, a16) {
        super();
        try {
            new C3();
        } catch(e18) {
        }
    }
    6 = v11;
    static [8] = v0;
    f;
    static #e = v11;
    e;
}
new C12(C3, v9, v10);
const v20 = new C12(8, v11, "bigint");
new C12(v20, v9, v20);
Reflect.construct(v0, ["bigint","p","p",Reflect,v9], C3);
v11 << !v11;
v11 / 3.23962570086141e+307;
Math.clz32(v11);
Math.acosh(v9);
v9 >> 3.23962570086141e+307;
