new Int16Array(5);
new Uint8Array(8);
new Int32Array(1024);
const o17 = {
    "maxByteLength": 2088334703,
};
const v19 = new SharedArrayBuffer(1483, o17);
const v21 = new Float32Array(v19);
v21[v21];
const v1 = new WeakMap();
const v4 = new Array(128);
function f5(a6) {
    const o12 = {
        "g": WeakMap,
        "a": v1,
        toString(a8, a9) {
            delete v1?.a;
            a8 <= 128;
            return v4;
        },
        "f": WeakMap,
        256: WeakMap,
        2655: v4,
        __proto__: a6,
        "e": Array,
        "b": WeakMap,
    };
    return o12;
}
const v13 = f5(WeakMap);
f5(v1);
let v15 = f5(128);
const v16 = [10000,-1073741824,12,26507];
[64];
[1000,-9007199254740992,1339292023,-1207184977,57297,6];
try {
    new Int16Array(64);
} catch(e22) {
}
try {
    new BigUint64Array(1);
} catch(e26) {
}
try {
    new BigInt64Array(14);
} catch(e30) {
}
++v15;
let v32 = v16[BigInt64Array];
Object.defineProperty(v16, "g", { get: Array });
try {
    v32 = v13;
} catch(e33) {
}
try {
    Array[64] = v32;
} catch(e34) {
}
