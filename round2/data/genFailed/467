let v1 = 0.7803834137538339;
function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a11;
}
new F6(-1000000.0, F6, -1000000.0, -268435456);
const v13 = new F6(-1000000.0, -41289, -1000000.0, -1000000.0);
const v14 = new F6(-2.215075820235281, -41289, v1, F6);
class C15 extends F6 {
    static #b = -1000000.0;
    5 = v14;
    constructor(a17, a18, a19, a20) {
        super(-2.215075820235281, a17, -2.215075820235281, a18);
        let v21 = 0;
        while (v21 < 10) {
            v1 = -2.215075820235281;
            const o24 = {
            };
            o24.d = a19;
            const o25 = {
            };
            o25.d = a19;
            o25.f = a19;
            const o26 = {
            };
            o26.d = a19;
            o26.f = a19;
            o26.e = a17;
            const o27 = {
            };
            o27.d = a19;
            o27.f = a19;
            o27.e = F6;
            v21++;
        }
    }
}
const v29 = new C15(-268435456, -41289, -41289, 14);
const v30 = new C15(-41289, v14, 14, -268435456);
new C15(v30, C15, -268435456, 14);
new Float64Array(4049);
new Int32Array(256);
const v40 = new Uint16Array(2739);
v40.sort(Int32Array, v29, ...v40, -1000000.0);
-Infinity;
function f45(a46) {
    return C15;
}
class C47 extends f45 {
    [4049];
    static [v13] = v13;
    #h;
    8 = -2.215075820235281;
}
class C3 {
    static #toString(a5) {
        const v11 = 6 || a5;
        2.2250738585072014e-308 - v11;
        Math.trunc(-863601817);
        const v14 = -863601817 && 2.2250738585072014e-308;
        -(v14 % v14);
        Math.trunc(-863601817);
        return v11;
    }
}
const v18 = new C3();
const v19 = new C3();
const v20 = new C3();
class C21 {
    static #d;
    5 = C3;
    static 0;
    #f = "gA";
    static toString(a23, a24) {
        typeof v18 === "number";
        return v19;
    }
}
const v31 = new C21();
new C21();
const v33 = new C21();
function F34(a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 2.2250738585072014e-308;
    } catch(e38) {
    }
}
new F34(v31, C3);
new F34(v20, v31);
const v41 = new F34(v33, v19);
~v41;
v18 - 65536n;
function f47(a48, a49, a50) {
    try {
        arguments.length = 16;
    } catch(e53) {
    }
    return arguments;
}
f47(f47);
