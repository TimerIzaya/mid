const v0 = [170.35617135603798,-545.4313873726846,0.767387309712571,-Infinity,871840.5851457745];
const v1 = [5.161389370079213e+307,-6.714008240878632,504942.458735188,3.0,-0.0,4.5007854301600005,2.2250738585072014e-308,-2.2250738585072014e-308];
const v2 = [Infinity];
function f3(a4) {
    const o15 = {
        set f(a6) {
            /a\b!/ysd;
            /a\W8*/midv;
            /y\w|\d/gmdu;
        },
        "b": v1,
        set c(a12) {
            %VerifyType(a12);
            try {
                super.o(a4, v2, a12, v1, v0);
            } catch(e14) {
            }
        },
    };
    return o15;
}
f3(v2);
f3(v1);
let v18 = f3(v2);
const v20 = new Set();
--v18;
const v30 = !v20;
14 % v20;
Math.fround(14);
function f33() {
    return v30;
}
Object.defineProperty("-9007199254740992", 122, { writable: true, get: f33, set: f3 });
try {
    new BigUint64Array(8);
} catch(e3) {
}
try {
    new Uint8ClampedArray(441);
} catch(e7) {
}
try {
    new Int32Array(512);
} catch(e11) {
}
function f12(a13, a14, a15) {
    const o25 = {
        ...441,
        [a15]: Int32Array,
        "a": a13,
        m(a17, a18) {
            const v19 = a17 < Uint8ClampedArray;
            if (v19) {
                let v20;
                try {
                const t0 = 512;
                v20 = t0(a17, a17);
                } catch (e) {}
                try { v20(); } catch (e) {}
            } else {
                const v22 = [v19,a17];
                [v22,v22];
                [this];
            }
            return a13;
        },
    };
    return o25;
}
const v26 = f12(8, 8, 8);
f12(512, 512, 8);
f12(512, 8, 512);
const v29 = /J/sdmv;
/zH/dguy;
/[Q[a-zA-Z0-9]?]/dgmuy;
v26[2282104889];
[-16,-3];
[-32821,127,-7,13938];
const v35 = [2147483649];
class C36 {
    static d;
    static a = v29;
    f = v35;
    static #e = v26;
}
new C36();
new C36();
new C36();
