const v0 = [];
function f1() {
    return v0;
}
const v10 = new BigUint64Array(127);
const v13 = new Float32Array(259);
const v16 = new Uint8Array(39);
4.631329412521152 + -4294967297;
~127;
-256n | -4294967297;
Object.defineProperty(v10, 14n, { writable: true, configurable: true, enumerable: true, set: f1 });
v16[268435441] = 14n;
v13[38382n] = -4294967297;
function f0() {
}
const v1 = [f0,f0];
const v2 = [f0,v1,v1,v1,v1];
const v3 = [v2];
function F4(a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a6;
    } catch(e8) {
    }
}
const v9 = new F4(v1, v2);
const v10 = new F4(v1, v3);
const v11 = new F4(v2, v2);
const v12 = [2.220446049250313e-16,0.37863823422279186,0.24825142192467142,1e-15,-2.0,0.17488737146671174,-Infinity];
[-8.983127185762482,-0.0,6.339726466897055,0.9419583036801509,-1.561571667815061e+308,-379603.4260890733,0.6634439426330193,2.0,1.7976931348623157e+308,-1.0];
const v14 = [0.3113914082108352,-2.0,-147156.22837416537,1e-15,759505.4128995168,-744.8338680348722,-1000000.0,-2.5483111120532094,0.0030387652663390607,182.04775306283932];
const v16 = [v9,v9];
Reflect.apply(v12.with, v10, v16);
function F19(a21, a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a21;
    } catch(e25) {
    }
}
new F19(v14, v1, v10, v11);
new F19(v14, v2, v10, v9);
new F19(v16, v3, F19, v9);
