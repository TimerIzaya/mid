new Uint32Array(3458);
const v8 = new Uint16Array(6);
new Int32Array(12);
v8[-2] = 256n;
const v15 = Math.cos(12);
Math.log(12);
Math.atan(3.5582128859446964);
Math.tanh(12);
const v21 = -13 / v15;
(v15 - 3.5582128859446964) << v21;
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a5;
    } catch(e7) {
    }
    try {
        this.b = a6;
    } catch(e8) {
    }
}
new F3(1073741824n, 1073741824n);
new F3(9n, 1073741824n);
const v11 = new F3(9n, 1073741824n);
[2.220446049250313e-16,1e-15,3.54962672981652,913.1397447011393,511012.3431072554,-2.2250738585072014e-308,-3.0];
[0.9071848306456523,418171.2468945524,700112.9248368761,3.768234201014103,425.27611502753894,669796.7936303671];
let v14 = [-Infinity];
v11.c &= v14;
const v17 = !v14;
const v18 = 9223372036854775807 << v14;
const v19 = ++v14;
Math.clz32(9223372036854775807);
9223372036854775807 >>> (v17 << v19);
v18 ^ v14;
