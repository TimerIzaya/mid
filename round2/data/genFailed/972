const v2 = new Int32Array(2453);
const v5 = new Float64Array(2957);
const v8 = new BigInt64Array(64);
const v9 = [v2];
[2957,BigInt64Array,[2957,Int32Array,2957,v2,v5],v9,v5];
function f12(a13) {
    try { arguments.test(v2, v8, arguments); } catch (e) {}
    v2[129];
    return arguments;
}
v9.b = f12(v5, v9, Float64Array);
v8[9];
v8[64] = v9;
try {
    new Uint32Array(1000);
} catch(e3) {
}
try {
    new Uint16Array(1);
} catch(e7) {
}
try {
    new Uint8ClampedArray(13);
} catch(e11) {
}
try {
    new Uint8Array(94);
} catch(e15) {
}
try {
    new BigUint64Array(9);
} catch(e19) {
}
try {
    new Uint8ClampedArray(33);
} catch(e23) {
}
for (const v24 of Uint32Array) {
    v24 instanceof Uint16Array;
    try {
        v24[9] = 9;
    } catch(e26) {
    }
}
typeof 1000 === "string";
