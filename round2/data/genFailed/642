[];
const v7 = [8n,4n];
const v8 = [831648819n,v7,v7,1n,v7];
[831648819n,v7];
new BigInt64Array(10);
new Uint16Array(9);
new Int16Array(3108);
const v22 = new Uint16Array(v8, 9, 3108);
function f23(a24) {
    return 1n;
}
class C25 extends f23 {
    #e = v22;
    #f;
    #b = "p";
    static [2147483647n] = 1n;
}
class C3 {
    ["message"];
    constructor(a5, a6) {
        for (let v7 = 0; v7 < 32; v7++) {
            const t4 = "o";
            t4["p" + v7] = v7;
        }
    }
    static {
        [1000.0,0.6864361746240771,-304401.2432153274,-1000000.0,7.544254072276427];
        [-0.0,-2.220446049250313e-16,169799.61483851913,-Infinity,535289.4746633824,0.3465290516983126,0.0,-4.0,-3.0,1.7976931348623157e+308];
        [-435.85550601621196,-145.96791168155755];
    }
    b = "message";
    ["o"] = "message";
}
const v14 = new C3(C3, C3);
const v15 = new C3(C3, 300109.25147974165);
const v16 = new C3(C3, v15);
class C21 {
    static valueOf(a23, a24) {
        ("message")[228];
        for (let v26 = 0; v26 < 32; v26++) {
            v15["p" + v26] = v26;
        }
        return 512n;
    }
    #toString(a30, a31) {
        function f32(a33, a34, a35, a36) {
            'use strict';
            a30 instanceof C3;
            try {
                a35 = -9223372036854775807n;
            } catch(e38) {
            }
            return a36;
        }
        f32(v14, v16, 512n, a31);
        return this;
    }
}
const v40 = new C21();
new C21();
new C21();
function F43(a45, a46, a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = C21;
    } catch(e49) {
    }
    try {
        this.e = a45;
    } catch(e50) {
    }
}
const v51 = new F43(v40, "o", -9223372036854775807n, -10n);
new F43(v51, v51, -9223372036854775807n, 512n);
new F43(null, v15, 512n, 512n);
