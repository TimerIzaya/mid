const v0 = [5.775241074062711e+307,-1000000000.0,4.643423066541889,-1.7976931348623157e+308,-1.7976931348623157e+308,0.7633588521785107,-1000.0];
let v1 = [350518.021043716,565.5484944092957,2.220446049250313e-16,9.854829513206393,2.2250738585072014e-308];
const v2 = [1.4779842471777282,-2.0,-1.1045654997981472e+308];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = v0;
    this.a = v2;
    this.g = v1;
}
const v6 = new F3(v0);
const v7 = new F3(v2);
const v8 = new F3(v2);
const v9 = [-268435456,7,-37515,-41983,39302,1700714720];
const v10 = [-174335563];
let v11 = [1630387056,6,-268435456,16];
let v14 = "n";
let v15;
try { v15 = v14(v14, v14, v0, v9, v0); } catch (e) {}
v1 = v15;
function f16() {
    return v7;
}
v11 *= v2;
v14 ^= c;
function F18(a20, a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = a20;
}
const v24 = new F18(v10, v1, v9, v8);
new F18(c, v24, v2, v6);
new F18(v1, v8, v1, v2);
