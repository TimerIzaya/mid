class C3 {
    static #c;
    constructor(a5, a6) {
        function f7(a8, a9, a10) {
            function f12(a13) {
            }
            this.onmessage = f12;
            const o19 = {
                "maxByteLength": 75,
            };
            const v21 = new ArrayBuffer(73, o19);
            new BigUint64Array(v21);
        }
        const v26 = [f7,this,1073741823];
        const o27 = {
            "arguments": v26,
            "type": "function",
        };
        new Worker(f7, o27);
    }
}
const v29 = new C3(0.0, 0.0);
new C3(-256, v29);
const v31 = new C3(C3, v29);
function F32(a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a35;
    this.a = a36;
}
new F32(v31, v29, v31);
const v38 = new F32(v29, v29, v31);
new F32(v31, v38, v29);
%VerifyType(-2);
function f46(a47, a48) {
    [1073741824,54692,-52348,6,1073741824,536870887,8,-65535];
    [-8,36851,1895124809,4,11,9223372036854775807,-4294967296];
    [-9223372036854775807];
    Reflect.construct(Worker, [Worker,a47], Worker);
    return Worker;
}
f46(v31, v31);
/Dabc+?(?:ab)|cdea(?!b)+/sidgu;
const v5 = /Ea./idmu;
const v6 = /D5j(x)(x)(x)\4*/sigm;
class C10 {
    #h = 0.4871548604602538;
    b;
    static {
        Math.floor(1000000000000.0);
        Math.tan(12);
        Math.abs(1000000000000.0);
        -this;
    }
    #c;
    #b = v6;
    #d;
}
new C10();
new C10();
new C10();
v5.ignoreCase;
const v23 = new C10();
let v24 = 0;
while (v24 < 7) {
    try {
        v23.b = v6;
    } catch(e27) {
    }
    v24++;
}
