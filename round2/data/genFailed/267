const v8 = new Uint16Array(2435);
new Float64Array(64);
const v14 = new Uint8Array(2586);
-36314n * v14;
const v16 = v14[Float64Array];
try { v16.includes(v8, v14, v14, v16); } catch (e) {}
v16.__proto__;
const o22 = {
    "execution": "async",
    "type": "major",
};
gc(o22);
let v4 = 5.807173828167127;
const v6 = /\p{Changes_When_NFKC_Casefolded}/dgv;
const v7 = /a+?/sgmu;
const v8 = /xyz{1,}?6\xed\xa0\x80*/smuy;
function f9() {
    return v8;
}
try {
    new Int16Array(3422);
} catch(e16) {
}
try {
    new Int32Array(48);
} catch(e20) {
}
try {
    new BigInt64Array(6);
} catch(e24) {
}
%VerifyType(3422 <= Int16Array);
if (257 >= d) {
    v7.__proto__;
} else {
    Object.defineProperty(v6, 5, { configurable: true, get: f9 });
    try {
        v4 = -3.0;
    } catch(e29) {
    }
}
