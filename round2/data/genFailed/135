function f0() {
}
[660137.3952940342,714591.3932748006];
const v5 = [9.252898163198255e+307,1e-15,2.2250738585072014e-308,7.524438946328097,0.2962733851728966,-857293.386011367,-91035.09096802305,2.0,719928.965880498];
[-1000.0,-4.0,1000.0,1000000.0,0.8020868264796993,-1.006244782014705e+308];
Object.defineProperty(v5, "b", { writable: true, enumerable: true, set: f0 });
class C13 extends f0 {
    static #f = 62618;
    #e;
}
new C13();
new C13();
new C13();
class C3 {
    static #f = -268435456;
    f = -268435456;
    #g = 1000.0;
    p(a5, a6) {
        let v7;
        try { v7 = a5.m(a6, -268435456, this, 1000.0, 1000.0); } catch (e) {}
        const v8 = v7?.[1];
        try {
            super[v8] = 1000.0;
        } catch(e9) {
        }
        return v7;
    }
}
const v10 = new C3();
const v11 = new C3();
const v12 = new C3();
function F13(a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = v12;
    } catch(e18) {
    }
}
const v19 = new F13(v10, v12, v10);
new F13(v12, -268435456, v10);
new F13(v11, v19, v11);
new F13(v12, v19, v10);
Math.round(536870889);
Math.imul(-12n, -12n);
536870889 - 536870889;
%VerifyType("d");
var c = v12.f;
C3[536870887];
