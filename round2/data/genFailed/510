const v0 = [15,65536,1073741824];
const v1 = [179432811];
[-65537,-713140655,1073741825,-16,-2147483648];
[8,-9007199254740992];
const v7 = [-19144,16];
[-2147483648,2,-1];
function f9() {
    return v1;
}
[512,-65536,11423,-20182,1248410109,-1830625028,-23431];
const v11 = [-9,-21467,-1920159603,6];
[-12,512,-1602014974,2958,1073741824,8,1722632570,4,536870887];
const v13 = new f9();
let v14 = v0 !== v13;
if (v14) {
    Object.defineProperty(v7, v11, { writable: true, configurable: true, get: f9 });
    v14 **= v14;
} else {
    const v15 = v11[v7];
    v15 instanceof v15;
}
v13 >= v1;
class C3 {
    g;
    f;
    static g;
    static #m(a5) {
        try { ("number").trimRight(); } catch (e) {}
        return a5;
    }
    a;
    5;
    #a = "number";
}
new C3();
new C3();
new C3();
try {
    new Float64Array(428);
} catch(e16) {
}
try {
    new Int32Array(5);
} catch(e20) {
}
try {
    new Int8Array(439);
} catch(e24) {
}
class C25 extends Int8Array {
    static #a = 439;
    static #e;
    static #b;
    1073741824;
}
new C25();
new C25();
const v28 = new C25();
v28[v28] >>>= 5;
