new Date();
const v4 = new Int16Array(3);
new Uint32Array(740);
const v10 = new BigInt64Array(1885);
new Int32Array(1757);
const v16 = new BigUint64Array(12);
const v19 = new BigInt64Array(7);
v10[71] = Uint32Array;
v19[BigInt64Array];
const v21 = v16[4096];
try { v21(BigUint64Array, BigUint64Array, Int16Array, 740, 1885, Int32Array); } catch (e) {}
function f23(a24) {
    return a24;
}
class C25 extends f23 {
    11;
    [v4] = BigInt64Array;
}
function f0() {
}
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = f0;
    } catch(e3) {
    }
    try {
        this.g = f0;
    } catch(e4) {
    }
    try {
        this.a = f0;
    } catch(e5) {
    }
}
new F1();
const v7 = new F1();
new F1();
class C9 {
    static n(a11) {
        try {
            super.c = this;
        } catch(e12) {
        }
        return a11;
    }
    static 4294967296;
    static h = v7;
    2893796678;
    static #e = f0;
}
new C9();
new C9();
const v15 = new C9();
let v17 = -6;
for (const v19 of f0) {
}
try {
    v17 = 2;
} catch(e23) {
}
try {
    v15.toString = f0;
} catch(e24) {
}
