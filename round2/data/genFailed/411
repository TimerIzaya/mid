const v0 = [-31056,13,2147483649];
const v1 = [8,782442754,0,-128,13,0,3,128,257];
const v2 = [11,1024,-65536,1,-28301,42699,62477,-4096];
function f3() {
    return v0;
}
new Int8Array(127);
const v9 = new Uint8Array(512);
new Uint8ClampedArray(6);
function F13(a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = v9;
    this.g = a15;
    this.f = a15;
}
new F13(v1, v2, 6);
new F13(v2, v1, 512);
const v20 = new F13(v2, v1, 127);
const v21 = f3();
with (v2) {
    length = v21;
    v20.toString = f3;
    Math.cbrt(1908595719);
    Math.clz32(v0);
    const v26 = v1 >>> v0;
    const v27 = v26 << v26;
    v1 + v27;
    ~v27;
}
const v3 = [1073741824,1728342033,4294967296];
[256,19392,-1073741824,-1024,87921128,2147483649,536870912,9007199254740990,4294967295];
const v5 = [-729829132,3,-1336647339,-4,-256,65537,-365092072,257,12,5];
[-0.1676676271841604,-2.0,1000000.0];
const v7 = [1000.0,-2.220446049250313e-16,321.2702541500141,Infinity,-1000.0,NaN,958.5086414559667];
const v8 = [NaN,-1e-15,-807.06458742441,-0.0,3.6736952904036446,-2.2250738585072014e-308];
class C9 {
    static #o(a11, a12, a13, a14) {
        function f15(a16, a17, a18) {
            try {
                a18 = a16;
            } catch(e19) {
            }
            return a13;
        }
        return f15(a12, v8, 65537n);
    }
    static #b;
    static b = v3;
    static 3;
}
new C9();
new C9();
new C9();
try {
    new Int8Array(315);
} catch(e27) {
}
try {
    new Int8Array(7);
} catch(e31) {
}
try {
    new Float32Array(816);
} catch(e35) {
}
const v36 = new Int8Array(v3, 816);
v36 / 65537n;
v5[5] += 816;
[2.0,1000000000000.0,0.3215113984141338,-2.220446049250313e-16,-1000000000.0];
[0.801821562314093,0.3447019184998018,-2.0,-1000.0,-2.0,0.01846418668139993,0.2406864441166673,-Infinity,2.0,0.8322326318901135];
const v43 = [-3.0,NaN,0.0024513890654866977,796880.7277061117];
function F44(a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v5;
    } catch(e48) {
    }
    try {
        this.c = Int8Array;
    } catch(e49) {
    }
}
const v50 = new F44(-9223372036854775808n, v7);
new F44(-9223372036854775808n, v50);
new F44(65537n, v43);
