let v0 = [-2,-4294967295,7,268435456,128,4294967295,-9223372036854775808,7,1351712697,3];
const v1 = [9007199254740991,-1024,7];
const v2 = [4,14];
const v6 = [10];
const v8 = [[v6,v6,v2,v6],v1,v6,2147483649];
function f12(a13, a14, a15) {
    const o22 = {
        get g() {
            try {
                super.p(this, v1);
            } catch(e18) {
            }
            const o19 = {
            };
            new Proxy(v8, o19);
            return -65535;
        },
        __proto__: v1,
        "c": v0,
        "h": 4294967295n,
        "d": a15,
    };
    return o22;
}
const v23 = f12(-1382860537n, -65535, -65535);
const v24 = f12(4294967295n, v0, -65535);
f12(-32334n, v0, 2147483649);
%VerifyType(v24);
for (let v26 = 0; v26 < 45; v26++) {
    let v27;
    try { v27 = v23.n(v26, v26, v26, v6); } catch (e) {}
    v23.h = v26;
    Object.defineProperty(v27, "a", { enumerable: true, get: f12, set: f12 });
    v0 = v6;
    let [] = v27;
}
const o31 = {
    "execution": "async",
    "type": "major",
};
gc(o31);
try {
    new Int8Array(6);
} catch(e3) {
}
try {
    new Uint8ClampedArray(10);
} catch(e7) {
}
try {
    new Float64Array(0);
} catch(e11) {
}
try {
    new Uint16Array(4);
} catch(e15) {
}
try {
    new Int32Array(3172);
} catch(e19) {
}
try {
    new Uint8Array(3315);
} catch(e23) {
}
let v24 = Int32Array[536870888];
v24[2147483648] &= 10;
v24.e *= 0;
const t27 = v24?.[211];
delete t27?.[0];
try {
    v24 ^= 6;
} catch(e28) {
}
