const v2 = new Uint32Array(8);
const v5 = new Uint8ClampedArray(15);
const v8 = new Float32Array(3);
class C9 extends Uint8ClampedArray {
    #p(a11, a12, a13) {
        super[Float32Array];
        v8[9];
        return a12;
    }
    static [Uint32Array];
    #d;
    #e;
    #b;
    0;
    d = 15;
    [3];
}
new C9();
let v20 = new C9();
new C9();
new Float64Array(257);
const v28 = new BigInt64Array(216);
const v31 = new Int16Array(142);
Object.defineProperty(v28, "g", { enumerable: true, value: v5 });
let v32;
try { v32 = v31(Uint32Array, Float32Array, v2); } catch (e) {}
[255,536870889,255,0,4096,-46713,-9223372036854775808,-6332,1,63046];
[3,9223372036854775807,1685571877,-2147483648,59746,381376595,-9007199254740990,8];
const v35 = [-9007199254740991];
try { v35.findLast(v32, v8); } catch (e) {}
const v37 = new C9();
+v37;
v8[1073741824];
v20 *= v37;
