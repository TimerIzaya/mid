let v1 = -1085849670;
const v3 = /cd+/gmdv;
/eja?\cj\cJ\ci\cI\ck\cKVabc|def*/gmys;
/[(?:a?)*]/myv;
[328599.0726501583];
[-365.149271867218];
[4.084405101115475,-813153.0741488803,1.7976931348623157e+308];
v1 = -2147483647;
const o18 = {
    "execution": "async",
    "type": "minor",
};
gc(o18);
v3.__proto__;
try {
    new BigUint64Array(512);
} catch(e6) {
}
try {
    new Float64Array(8);
} catch(e10) {
}
try {
    new Float64Array(128);
} catch(e14) {
}
class C15 extends Float64Array {
    [Float64Array];
    static #toString(a17, a18, a19) {
        try {
            a19 -= a19;
        } catch(e20) {
        }
        return a19;
    }
    static #a;
    [BigUint64Array];
    #f = "acosh";
    static a = "acosh";
    [128];
    f;
}
new C15();
new C15();
const v23 = new C15();
try {
    new BigUint64Array(16);
} catch(e27) {
}
try {
    new Uint8Array(191);
} catch(e31) {
}
try {
    new Float64Array(119);
} catch(e35) {
}
function f36() {
    return "Z6kZC";
}
if (16) {
    try {
        v23.buffer = "Z6kZC";
    } catch(e37) {
    }
} else {
    try {
        new BigInt64Array(3);
    } catch(e41) {
    }
    try {
        new Uint8ClampedArray(127);
    } catch(e45) {
    }
    try {
        new Uint32Array(256);
    } catch(e49) {
    }
}
