const v0 = [];
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    this.d = v0;
}
new F1();
const v4 = new F1();
const v5 = new F1();
function f6() {
    return v4;
}
[-852.2805178450794,722200.8260519404,9.950564420226626e+307,2.735657699174888e+307,1.0,2.0,0.8310751640772438,2.220446049250313e-16];
const v8 = [5.0,0.599929515278472,2.0,1.7976931348623157e+308,-2.269525165197459,3.0,-5.0];
[-367043.3861902072,-1000000000.0,-333.13761472507974,736319.9919570754,2.2250738585072014e-308,3.0];
class C10 {
    [f6];
    1 = v0;
    static get g() {
        new Uint8Array(145);
        new Uint8ClampedArray(1049);
        const v20 = new BigUint64Array(14);
        return v20;
    }
}
new C10();
const v22 = new C10();
new C10();
new WeakMap();
const v26 = [2.2250738585072014e-308,-8.290660544511375e+307,-1.0,1.7976931348623157e+308,1000.0,-1e-15,-122.93031945788948];
[362147.13988000434,1000000.0];
[-5.0,-2.2250738585072014e-308,0.8784233221887869,1.7607474693977576e+308,-749589.9423124078];
v26.length += c;
const v31 = v5 == v0 ? v5 : v0;
try { v31.m(v8, f6, c); } catch (e) {}
v22[63];
f6();
%PrepareFunctionForOptimization(f6);
f6();
f6();
%OptimizeFunctionOnNextCall(f6);
f6();
