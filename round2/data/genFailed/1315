function f0() {
}
let v3 = new Float32Array(4);
const v6 = new Uint8Array(3);
const v9 = new Uint8ClampedArray(82);
class C10 {
    static #e;
    static get g() {
        v3.byteOffset &= 82;
        v3 = this;
        super.f = f0;
        return Uint8Array;
    }
    #n(a13, a14, a15, a16) {
        return a14;
    }
    static b;
}
new C10();
new C10();
let v22 = new C10();
const v23 = delete v3[2];
v6 % v9;
3 & v23;
let v26 = 10;
for (; v26--;) {
    ({"c":v22,} = v22);
    C10[4294967295];
}
class C3 {
    static #valueOf(a5, a6) {
        [-33833,-4,-779700798,11];
        [-3,-1,1073741825,9007199254740991,1024];
        [9007199254740992];
        return a6;
    }
    [2.0];
    #a = 70357.47699838341;
    static set f(a11) {
        a11[536870912] *= 2.0;
    }
}
const v15 = new C3();
new C3();
const v17 = new C3();
/Hb(x)(x)(x)\1/sigu;
const v19 = /(?<a>)(?:ab)/dgmv;
/(a+?(?<=)?)/u;
class C21 extends C3 {
    e;
    static [v17];
    static #o(a23, a24, a25) {
        return 1024;
    }
    [C3];
    [v17] = "m";
    static 246 = v15;
    g;
}
new C21();
new C21();
new C21();
const o33 = {
};
try {
    new Proxy(v19, o33);
} catch(e36) {
}
let v37;
try { v37 = C3.toString(C21, v17, v19); } catch (e) {}
v37[4] = C21;
v15[-2];
