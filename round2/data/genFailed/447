class C3 {
    c;
    static #toString(a5, a6) {
        let v7;
        try { v7 = ("14").codePointAt(a6); } catch (e) {}
        a6 ^ v7;
        [33.28221469728578,-681488.8553118092,1e-15];
        [-3.2885789828062713,7.443684090634042e+307];
        [1000000000000.0,0.3362040099158037,-624.5351277371323,0.8568808682422238,1000.0,-1000000.0,9.128687574950728,-1000.0,-2.220446049250313e-16];
        return this;
    }
    #g = "2147483648";
    ["2147483648"];
    [-9007199254740990] = "14";
}
const v12 = new C3();
const v13 = new C3();
const v14 = new C3();
function f18(a19, a20, a21, a22) {
    const o25 = {
        __proto__: v12,
        "g": a21,
        [a20]: a19,
        0: a22,
        set e(a24) {
            let v23 = this;
            [C3,,v23,...v23] = "14";
            a24.b = a24;
        },
        "d": 5,
        "h": "2147483648",
        "f": 4294967296,
        [a19]: -9007199254740990,
    };
    return o25;
}
const v26 = f18(v12, -9007199254740990, "2147483648", 4294967296);
const v27 = f18(v14, 8, v26, -9007199254740990);
f18(v13, 8, v26, -9007199254740990);
Object.defineProperty(v12, 268435440, { writable: true, configurable: true, get: f18, set: f18 });
const o30 = {
    valueOf() {
        Object.defineProperty(this, 128, { enumerable: true, value: v27 });
        v13[65536] = 8;
        return "2147483648";
    },
};
4294967296 ^ v26;
for (let v32 = 0; v32 < 32; v32++) {
    const t49 = "2147483648";
    t49["p" + v32] = v32;
}
let v1 = Float64Array;
try {
    new v1(101);
} catch(e3) {
}
try {
    new Uint32Array(4);
} catch(e7) {
}
try {
    new Uint8ClampedArray(2);
} catch(e11) {
}
class C15 extends Uint32Array {
    constructor(a17, a18, a19, a20) {
        super(a19, 2);
        try {
            this[this] = a20;
        } catch(e21) {
        }
        super.length;
        this.byteOffset;
    }
    [-1] = 2;
    [-1];
    50845783 = 1073741823;
    static [101];
}
new C15(101, 9007199254740990, 4, 1073741823);
const v25 = new C15(1073741823, 9007199254740990, 4, 2);
const v26 = new C15(9007199254740990, 1073741823, 1073741823, -1);
v26 + v25;
C15[3];
const v31 = Uint32Array << Uint32Array;
Math.atan(13);
Math.cosh(C15 >> v1);
Math.atan2(v31, 13);
--v1;
