function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.g = 16;
}
new F0();
const v4 = new F0();
new F0();
function f9() {
    return F0;
}
new Int8Array(131);
new BigUint64Array(64);
const v18 = new Float64Array(986);
const v19 = delete v18?.buffer;
Object.defineProperty(v18, "f", { writable: true, configurable: true, enumerable: true, get: f9, set: f9 });
async function* f20(a21, a22, a23, a24) {
    try {
        new Int8Array(a23, 64);
    } catch(e26) {
    }
    await a21;
    yield* a23;
    return a21;
}
f20(v19, v4, 986, v19);
try {
    new Float64Array(12);
} catch(e3) {
}
try {
    new Uint32Array(3486);
} catch(e7) {
}
try {
    new Uint8ClampedArray(798);
} catch(e11) {
}
const v12 = [Infinity,-397.0861386869242,829719.8328233648,-3.0,-269460.40502076654,-898503.8387473492,-538923.7222362491];
const v13 = [1.7976931348623157e+308,123322.29431621381,1.2639389373698823e+308,-4.32761549721177,-485.41139690390173,990260.3175965031,-Infinity,9.780548310619392e+307,0.8846041790460946,0.6152066222134629];
const v14 = [770.8218189034553,1.7976931348623157e+308,-Infinity,-1.6736463025417585,-243411.68673501268,413889.8298306451];
new WeakMap();
function f17(a18, a19, a20, a21) {
    const o31 = {
        "e": WeakMap,
        "g": a19,
        toString(a23, a24, a25) {
            a23[a24];
            new Float64Array(a23, 12, 798);
            return a24;
        },
        __proto__: v12,
        ...v14,
        ...v12,
    };
    return o31;
}
const v32 = f17(WeakMap, 798, v13, 12);
const v33 = f17(v32, 12, Uint32Array, 12);
const v34 = f17(f17, 798, v14, 798);
let v36 = -481951139;
v33 && v34;
++v36;
~v33;
Object.defineProperty(v33, "a", { configurable: true, enumerable: true, value: Math.fround(v33) });
const v42 = 798 << v32;
try { new f17(WeakMap, v42, ...-0.0, 3486, Uint8ClampedArray); } catch (e) {}
