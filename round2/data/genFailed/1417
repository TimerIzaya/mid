class C3 {
    static #valueOf(a5) {
        this.c;
        const v7 = typeof -1000.0;
        v7 === "boolean";
        return v7;
    }
    get b() {
        function f11(a12, a13, a14) {
            function f16(a17) {
                a17 >> a14;
            }
            this.onmessage = f16;
            try { this.trimStart(); } catch (e) {}
        }
        const v22 = ["function",Worker,1000000.0];
        const o23 = {
            "arguments": v22,
            "type": "function",
        };
        const v24 = new Worker(f11, o23);
        return v24;
    }
}
const v25 = new C3();
new C3();
const v27 = new C3();
[v27,v27];
[v25,v27,-1000.0];
[1000000.0,-1000.0];
const o36 = {
    "maxByteLength": 3011,
};
const v38 = new ArrayBuffer(3011, o36);
const v40 = new Int32Array(v38);
const v42 = [v40,3011,v40,"object",3011];
Reflect.apply(("16798").concat, v40, v42);
