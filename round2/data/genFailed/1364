const v0 = /f/yiv;
const v1 = /\p{General_Category=Decimal_Number}p((((.).).).)*/myisv;
const v2 = /iab\b\d\bcdZa*b/myu;
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a6;
}
new F3(v0, v2);
const v8 = new F3(v0, v2);
new F3(v1, v0);
new Uint8Array(44);
const v18 = new Int32Array(512);
const v21 = new BigUint64Array(232);
function f22() {
    return v21;
}
let [] = v21;
try {
    for (let v23 = 0; v23 < 32; v23++) {
        v21["p" + v23] = v23;
    }
} catch(e26) {
    v8[e26] -= e26;
    let v28 = 4294967297;
    const v30 = +638590.9231663614;
    Math.ceil(e26);
    Math.log2(v28);
    const v33 = v28--;
    const v34 = v28 << v30;
    (v33 || e26) << v34;
} finally {
    let [] = v18;
    const o39 = {
        "maxByteLength": 5,
    };
    const v41 = new SharedArrayBuffer(3, o39);
    new Float32Array(v41);
}
/\u{12345}/mu;
const v7 = /L/siv;
const v8 = /[^S(?:a{5,1000000}){3,1000000}((((.).).).)(?:a?)+(a\1)]/du;
const t3 = "object";
t3[v8] ^= -9007199254740992;
typeof "1917511878" === "object";
-2147483649 | "object";
v7.__proto__;
new WeakSet();
WeakSet | v8;
[2.0,-1000.0,0.9677144002239154,1000000.0,-3.5691275021879075e+307,-5.0,5.0,5.0,-Infinity];
[-2.220446049250313e-16,0.6690999100500037,-1.7976931348623157e+308];
[2.220446049250313e-16,1.0,1.5327083831944642e+308,-Infinity,NaN,8.879049213356646e+307,-767.5160551453653,0.18538495679473466,0.8657107592785096,-5.0];
