const v0 = /h/gsdv;
const v1 = /[xyz]/ysu;
/67I(?:a{5,1000000}){3,1000000}*/myisdv;
const v7 = new Set();
let v8 = 1000000000000.0;
class C11 {
    get g() {
        for (let v13 = 0; v13 < 32; v13++) {
            v0["p" + v13] = v13;
        }
        v7.__proto__ = v1;
        return this;
    }
    static h;
    static d;
    [Infinity];
    #h = v7;
}
new C11();
new C11();
new C11();
new Float32Array(110);
new BigUint64Array(3259);
new Uint8Array(91);
v8 = -2.2250738585072014e-308;
class C3 {
    static #toString(a5) {
        const v6 = -0.4479773927970694 & a5;
        try { a5.n(this); } catch (e) {}
        const v8 = a5?.g;
        try {
            super.toString(v6);
        } catch(e10) {
        }
        return v8;
    }
    10 = -0.4479773927970694;
    static #h;
}
new C3();
const v12 = new C3();
const v13 = new C3();
const v14 = [9,-51504,7,12,-1];
const v15 = [1024,-4,-2147483647,536870889,8550,-10,9007199254740992,3,-11];
[2,1073741825,0,2147483649];
v15["find"](268435439, -0.4479773927970694, ...v15, ...v14, ..."l");
let {"f":v22,"g":v23,"length":v24,} = v14;
v12.__proto__;
try {
    v13.fuck(-1e-15, undefined, 15, v15);
} catch(e30) {
}
