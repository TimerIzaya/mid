function f3(a4, a5) {
    const o22 = {
        "c": a4,
        "b": -2147483647,
        __proto__: a4,
        "f": 1024,
        "g": a5,
        "h": a4,
        valueOf(a7) {
            function f8(a9, a10) {
                function f12(a13) {
                }
                this.onmessage = f12;
                a10[a4] &&= 2;
                this[4294967296] += -2147483647;
            }
            const v19 = [a5,"function"];
            const o20 = {
                "arguments": v19,
                "type": "function",
            };
            new Worker(f8, o20);
            return -2147483647;
        },
    };
    return o22;
}
const v23 = f3(2, 2);
const v24 = f3(2, 2);
const v25 = f3(2, 2);
const v31 = new Uint16Array(16);
const v34 = new Int32Array(1854);
new Uint32Array(3);
const v38 = v34[60];
switch (Int32Array) {
    case v38:
        try { v38(Int32Array, 1024, 1854, Int32Array); } catch (e) {}
        break;
}
v24.b += 1854;
v23["valueOf"](f3, v23, v31, -2147483647, Uint32Array);
Math.asinh(v25);
-8.579313405284971e+307 * (-8.579313405284971e+307 / 64n);
~f3;
