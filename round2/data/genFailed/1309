const v0 = [-1206,-268435456,-1883618877,19543,-10,-3560];
const v1 = [-11,12,-9223372036854775807,-2147483649,4294967297];
const v2 = [-17992,28099,-4294967297,-1,2093460918,-713949070,-293584395,1000];
const v6 = [-8384,2147483648,-8384,2147483648,-8384];
const v8 = [[v2,v6],v6,1073741823,v2];
const v12 = [1073741823];
[v0,536870887n,64n,v12,v12];
const v14 = [v1,536870887n,v6];
v1 instanceof v2;
try {
    v8[2958295966];
} finally {
}
const o21 = {
};
o21.a = v8;
const o22 = {
};
o22.a = v8;
o22.d = v0;
const o23 = {
};
o23.a = v8;
o23.d = v0;
o23.b = v14;
const o24 = {
};
o24.a = v8;
o24.d = v0;
o24.b = v14;
const v0 = [1000000000000.0,1000.0,2.0,-7.284068974554574e+307,8.824774470412294,0.1176060253555391,6.023398384406214,1000000000.0,-5.0,2.220446049250313e-16];
const v1 = [-1000.0,-200985.70988293597,1.7976931348623157e+308,0.5477495744037414,9.112858441498712,-3.0,881872.6122877642,-358.04013889195096,0.6695399824288633];
const v2 = [0.6801940048186909,0.5019959169766876,-336.33712078633766,-1000000000000.0,-3.0,2.0,-Infinity];
const v4 = new Set();
try {
    new Float32Array(16);
} catch(e8) {
}
try {
    new Uint8Array(1354);
} catch(e12) {
}
try {
    new Uint8Array(512);
} catch(e16) {
}
class C17 extends Uint8Array {
    constructor(a19, a20) {
        let v18 = this;
        super(v2);
        new Uint8Array(512, 16);
        ({"c":v18,"length":v18,} = v0);
        try {
            a20[v1] = v2;
        } catch(e22) {
        }
    }
    static set e(a24) {
        let v27 = -1000.0;
        Math.random();
        const v29 = 16 || v27;
        ++v27;
        Math.max(16);
        const v32 = 16 && 1073741825;
        Math.imul(v32, v29);
        v32 ** v27;
    }
}
const v35 = new C17(Float32Array, v1);
const v36 = new C17(1354, v4);
const v37 = new C17(v0, Set);
if (v36) {
    v37[Symbol.split];
} else {
    delete v35[6];
}
try { v0.findLastIndex(v0, v4); } catch (e) {}
new Uint8Array(v35, 1354, 1354);
try {
    v37[145] = v37;
} catch(e44) {
}
