let v4 = Int8Array;
const v5 = new v4(87);
let v6 = 128;
const v8 = new Float64Array(v6);
let v9 = 464;
const v11 = new BigUint64Array(v9);
class C12 extends v4 {
    constructor(a14, a15, a16) {
        super(a16);
        v5 >> v8;
    }
    g = v5;
    8;
    3053;
    #e;
    #g;
    static [v11] = 4294967295;
    static #b = v9;
}
new C12(4294967295, 4294967295, v6);
new C12(v6, 87, v6);
const v23 = new C12(4294967295, v6, v9);
let v24 = v11[v23];
try { v24(v11); } catch (e) {}
({"a":v6,"buffer":v4,"byteLength":v9,...v24} = v23);
try { v6(); } catch (e) {}
if (50867 < v5) {
    new BigInt64Array(2037);
    new Uint8Array(127);
    new Float64Array(1);
} else {
    [409608.8016759881,-Infinity,3.0,-8.56327833828974,60.9973928832419,523310.6012405751,0.7099710858713055];
    [0.9214525782503786,-1000000000000.0,1e-15,4.0,678728.041961659,3.0,0.6114217664436085,3.0,-1.5889288443590743,-3.0];
    [-1000000000000.0,456509.2411637991,4.0,2.0,-672180.6339460418,-1000000.0,-1.0];
}
