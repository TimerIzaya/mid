new Map();
function F5(a7) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a7;
    this.c = 833856.5065717481;
}
const v8 = new F5(-1e-15);
const v9 = new F5(833856.5065717481);
const v10 = new F5(833856.5065717481);
new Array(1293);
class C14 {
    static #c = v10;
    toString(a16, a17, a18, a19) {
        super.d = a16;
        const o20 = {
            "apply": Array,
            "call": Array,
            "defineProperty": Array,
            "deleteProperty": Array,
            "getPrototypeOf": Array,
            "preventExtensions": Array,
            "set": Array,
            "setPrototypeOf": Array,
        };
        const v22 = new Proxy(v9, o20);
        return v22;
    }
}
new C14();
new C14();
const v25 = new C14();
`setInt32${v25}eS${v10}valueOf${Map}n`;
let v27 = new Array(1293);
C14[v8] = v27;
let v29 = [];
Reflect.construct(C14, v29, Map);
({"f":v29,"h":v27,} = Reflect);
try { v27(833856.5065717481); } catch (e) {}
[16,9007199254740991];
[-1808896517];
[1398243678,13699,2147483649,-56631,5,8,-199911775,-4294967295,-2];
