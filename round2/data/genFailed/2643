const v0 = [-279704.9362021708,879.7878561032953,-5.0,3.0,414508.8217241003,8.858804946192875e+307,407.68549321711066,0.9275406602150547,-1.0,2.220446049250313e-16];
const v1 = [5.0,-1000.0,-1000000.0,-7.566694833857142,7.501820934791349e+306];
const v2 = [-2.0,-3.0,1000.0,Infinity,0.9207567068728362,4.045366864306478,-4.0];
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = v2;
    this.d = v2;
}
new F3(v1, v0);
const v8 = new F3(v0, v0);
new F3(v1, v2);
function f10() {
    return v2;
}
new Int8Array(5);
new BigInt64Array(4);
const v23 = new Uint32Array(30);
const v25 = [4,30];
Reflect.apply(v23.subarray, v8, v25);
const v29 = Symbol.iterator;
const o38 = {
    [v29]() {
        let v31 = 10;
        const o37 = {
            next() {
                v31--;
                const v35 = v31 == 0;
                const o36 = {
                    "done": v35,
                    "value": v31,
                };
                return o36;
            },
        };
        return o37;
    },
};
