const v2 = new Uint32Array(0);
const v5 = new Int16Array(177);
new Int32Array(1599);
let v10 = -9007199254740991n;
v5[2147483647n] = ++v10;
let v13 = v2.forEach(Int32Array, 1599, v10, v10, ...v2);
let v14 = 0;
do {
    [v13] = v5;
    v14++;
} while (v14 < 9)
const v0 = [-1000000000.0,17.22462144585245,1000000.0,-0.0007367753954934386,-6.150451365596655e+307,1.184364926130053,8.617492718204999e+307,0.5444788207803716];
const v1 = [-1e-15,2.740099784731355e+307,-Infinity,268.4039742959071,-772050.5519817959,1e-15,1.0,680197.6991660646];
const v2 = [-78609.0558339993,-3.5790767876288516,3.0,0.7826734485090927];
const v8 = new WeakSet();
const v9 = [9667,65535,-1707727294,0,-1,8987,17486610];
[6,1091627733,9,-9223372036854775808,1105580572];
const v11 = [11,-1073741824,13122,-1322787990,-1154016124,7,255,257];
const v12 = v11[886389191];
v12.__proto__;
const v14 = [v2];
[v12,v14,v1,v9,v0];
[v1,v2];
const v18 = [];
Reflect.apply(v14.slice, v11, v18);
try {
    v0[v1] = v8;
} catch(e21) {
}
