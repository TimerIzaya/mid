const v2 = new Uint8ClampedArray(3);
new Uint8Array(257);
const v8 = new Float32Array(4096);
class C9 extends Float32Array {
    5 = 4096;
    static toString(a11, a12, a13) {
        let v14;
        try { v14 = v2.every(v8); } catch (e) {}
        return v14;
    }
    n(a16, a17, a18, a19) {
        return 257;
    }
    #o(a22, a23) {
        this[1000] = a23;
        function f24(a25, a26, a27, a28) {
            [] = this;
            return URIError;
        }
        f24(a23, a22, 4096, a22);
        return Float32Array;
    }
}
const v31 = new C9();
const v32 = new C9();
new C9();
[36830,-2147483647,-2147483649,257,-51413,65537,4294967296,1073741824,9753];
const v35 = [-256,6,-65536,1454566352,-1,12,-63361];
[3,11,-2,10000,-5,1073741825,-121097070,-1028070795];
v35["findIndex"]("findIndex", v31);
for (let i40 = 0; i40 < 0; i40++) {
    try { v32.fill(i40, i40, 3); } catch (e) {}
    C9.f = i40;
}
