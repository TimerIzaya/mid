const v0 = [-2020984244,268435441,-8,4,9007199254740992,1073741824,512,7];
const v1 = [14,-8613,-3,1,42743,568753688,-4096,2147483648];
const v2 = [1889151857,50757,-57515,-1617765159];
function f3(a4, a5) {
    const o18 = {
        "a": a5,
        "e": v0,
        "d": v0,
        3: a4,
        "h": v2,
        "b": v1,
        "f": a4,
        "g": a4,
        [v2](a7, a8) {
            const v12 = !a7;
            v12 && a7;
            Math.atan2(v12, a7);
            -a5;
            Math.log1p(3.0);
            !a5;
            return a7;
        },
    };
    return o18;
}
const v19 = f3(v2, v0);
const v20 = f3(v0, v0);
const v21 = f3(v1, v1);
class C22 extends f3 {
    static f;
    [f3] = v19;
    static #valueOf(a24, a25, a26) {
        v20.toString = a24;
        let v27 = super[v21];
        super[a25];
        const v29 = super[v19];
        v27 = a24;
        try { v27(v29, v19, ...a25, ...v0, v27, this); } catch (e) {}
        return v27;
    }
    g;
    #h = v1;
    static c;
    #a;
}
new C22();
new C22();
const v33 = new C22();
[-2.220446049250313e-16,0.39857835230426464,-8.201330467172];
[-194.8712536314889,8.006913144187923e+307,7.203876883589977,1.0,-462749.77330189524];
const v36 = [1.3736741926332563,-0.0,-1.7976931348623157e+308,-1.0,-0.0,397.1752384317151,-1.0];
[-4535,4294967297,4294967297,-6,268435441];
[-2147483648,7,-9007199254740991,257];
const v39 = [9007199254740990,-1526174936,65535];
const v40 = v33.a;
try {
    v36.at(1073741825);
} catch(e43) {
}
v39 >> v2;
Reflect.construct(C22, [], v40);
class C3 {
    1024 = 0.5747799490186475;
    #o(a5, a6) {
        this.g;
        [2.220446049250313e-16,90950.14434445836,-1.0,3.0,NaN,0.33146960655476587,-2.0];
        [1000.0,-4.0,-5.0];
        [-95862.64688847028,-7.780469705720088,1e-15,-1.7252935357018725e+308,-1.0,0.03715518779019544];
        return a5;
    }
    [0.5747799490186475];
    static #f;
    7;
}
new C3();
const v12 = new C3();
const v13 = new C3();
try {
    new Int16Array(129);
} catch(e20) {
}
try {
    new Uint8ClampedArray(128);
} catch(e24) {
}
try {
    new Uint32Array(16);
} catch(e28) {
}
Object.defineProperty("atan", Uint32Array, { writable: true, configurable: true, value: C3 });
`number${v13}stringify${"atan"}f${-1000000000000.0}536870888${"2"}536870888`;
const o30 = {
};
try {
    o30.c = v12;
} catch(e31) {
}
try {
    const o32 = {
    };
    o32.c = v12;
    o32.f = Int16Array;
} catch(e33) {
}
try {
    const o34 = {
    };
    o34.c = v12;
    o34.f = Int16Array;
    o34.h = Int16Array;
} catch(e35) {
}
try {
    const o36 = {
    };
    o36.c = v12;
    o36.f = Int16Array;
    o36.e = 129;
} catch(e37) {
}
