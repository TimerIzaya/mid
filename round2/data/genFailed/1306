const v0 = /n3DAa\Sc+/gmiv;
const v1 = /(?:ab){4,7}/misu;
const v2 = /(?:foo)?/u;
class C3 {
    static #g = v1;
    static [v2] = v0;
    static 7;
    c = v0;
    [v1];
    [v2];
    1073741825 = v2;
    static d = v1;
    d = v1;
    [v0];
}
new C3();
const v5 = new C3();
const v6 = new C3();
const v7 = [42661,27210,536870889,-880548615,-2,-9223372036854775807];
const v8 = [536870889,-8616,6,257,-1758373557,13611,-2146056671];
[3,11,-902838407,2,-44363,1073741823,-1024,-1316577147];
const v14 = v8["find"]("find", v7);
let v15 = 0;
do {
    v6[v5] = v14;
    let v17 = 8;
    Math.sign(v17);
    v8 & v8;
    v17 | "find";
    v17--;
    v8 >> 0.18550719762684598;
    -v8;
    v15++;
} while (v15 < 2)
try {
    new Uint16Array(255);
} catch(e6) {
}
try {
    new Int16Array(1000);
} catch(e10) {
}
let v12 = Uint8ClampedArray;
try {
    new v12(9);
} catch(e14) {
}
g = -59445n;
1024n - "6a5";
let v19;
try { v19 = Int16Array(1000, 9); } catch (e) {}
("wn8").length;
v19?.c;
var d = --v12;
let v25 = -1000000.0;
const v26 = v25++;
~"wn8";
v26 ** "wn8";
Math.acosh("wn8");
