const v5 = new Int8Array(257);
new Int8Array(1193);
const v11 = new Int16Array(204);
class C12 extends Int8Array {
    constructor(a14, a15, a16) {
        super(a16);
        const t6 = "valueOf";
        t6.d = v11;
        class C17 extends Int8Array {
            static [Int8Array];
            3;
            a = a14;
        }
        new C17();
        new C17();
        new C17();
    }
    #a = v5;
    [257];
}
new C12("valueOf", "n", 257);
new C12("n", "n", 257);
new C12("species", "species", 257);
for (let i25 = 0; i25 < 2; i25++) {
    const t24 = "species";
    t24.length *= i25;
    i25 instanceof Int16Array;
    const t26 = "valueOf";
    Int8Array >>> delete t26[10];
}
const v0 = [];
const v1 = /mhO\p{Script_Extensions=Greek}/mu;
const v2 = /a\P{Any}M((((.).).).)?/sdu;
/0a(?!b)/du;
class C7 {
    static 268435439;
    #b = v0;
    static #c;
    constructor(a9, a10, a11) {
        let v12;
        try { v12 = new v0(a11, "-13", "-13", a11); } catch (e) {}
        [25521,-929887492,-2147483649,512,2,19652,-232007067,-12752];
        [268435456,1,-4294967295];
        [60985,10873,257,-9223372036854775808,2147483647,3,1,3,127,5];
        return v12;
    }
    1092645767;
    ["m"];
    static [v1];
}
const v16 = new C7("-13", v2, v1);
const v17 = new C7(v16, v1, v2);
new C7(v17, v1, v1);
const v19 = ["m"];
let v21 = [v0,["6",v17]];
try {
    v21 -= v16;
} catch(e22) {
}
[-Infinity,5.869706714105638,NaN,3.0];
[-2.2250738585072014e-308,3.0,-1000.0,-1.6276015551681476e+308,Infinity];
[303.71046664680784,-1.0267516965589777e+308,-250709.1035718281,-1e-15,3.0,-4.0,5.905864812726627,0.0,-2.2250738585072014e-308];
v0.length += v21;
%VerifyType(v2);
try {
    v19[1676] = "6";
} catch(e26) {
}
