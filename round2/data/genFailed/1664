function f0() {
}
function f1() {
    const o9 = {
        2150: f0,
        [f0]() {
            let v4;
            try { v4 = this["o"]("o", f0); } catch (e) {}
            const v5 = v4.__proto__;
            v5 > this;
            this[Symbol.asyncIterator] = v5;
            return v5;
        },
        "c": f0,
        ...f0,
    };
    return o9;
}
const v10 = f1();
const v11 = f1();
const v12 = f1();
const v14 = [[f1,v12,v10,f1,v11]];
const v15 = [f0,v12,v12,v10,v12];
v15.length = v14[v11];
for (let v23 = 0; v23 < 62; v23++) {
    v12.f = 1n;
    try {
        f0();
    } catch(e25) {
    }
}
("symbol").normalize("NFKD");
