class C3 {
    get d() {
        const v6 = (this && "o").constructor;
        class C7 extends v6 {
            #g = "abs";
            [v6];
        }
        new C7();
        return "abs";
    }
    10 = "o";
    [-26930] = -26930;
    ["o"];
    static d;
    ["abs"];
}
const v9 = new C3();
new C3();
const v11 = new C3();
const v12 = [C3];
const v13 = [v9,C3,-26930,v11];
const v14 = [v13,v11,C3];
function f15(a16, a17, a18, a19) {
    const o35 = {
        [-26930]: a16,
        valueOf(a21, a22, a23, a24) {
            a22 = "o";
            let v26 = 43587;
            Math.tanh(a17);
            let v29 = -v26;
            v29--;
            Math.min(v26);
            ~0.9242188564454563;
            const v33 = v26++;
            !v33;
            return v33;
        },
    };
    return o35;
}
f15(v11, v11, v9, v12);
const v37 = f15(C3, v11, C3, v14);
f15(v37, v9, f15, v14);
function F39(a41, a42) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a42;
}
new F39(v14, v14);
new F39(v14, v12);
new F39(v13, v12);
for (let [v46,v47,v48] of "o") {
    throw v48;
}
for (let v49 = 0; v49 < 32; v49++) {
    v14["p" + v49] = v49;
}
let [v52,,v53,...v54] = v12;
try { v53(v11, v9, v37); } catch (e) {}
