new Uint8ClampedArray(8);
const v5 = new Int8Array(1183);
const v8 = new BigInt64Array(2609);
const v9 = /za(?=b)/gmisv;
const v10 = /9(?=)+/gmydu;
const v11 = /a[bc]d0s(x)(x)(x)\1t[xyz]?/gysv;
function F12(a14, a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = a16;
}
const v18 = new F12(v11, v9, v11, v10);
const v19 = new F12(v9, v8, v10, v11);
new F12(v10, F12, v11, v11);
let v21;
try { v21 = v5.copyWithin(1183, 1183, 1183); } catch (e) {}
v21 += F12;
v19[v11] = 2609;
try { v18(v11, Uint8ClampedArray, ...Uint8ClampedArray, v19, F12); } catch (e) {}
