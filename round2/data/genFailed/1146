[782467261,-256,268435439,1356408342,-9007199254740990,233258463,289757335,-4294967296,65535,-1466229711];
const v1 = [-506070418,-9007199254740990,127,-4294967297,1,-9007199254740991,-12764,-1049569161];
[-15,60446,2147483648,-28899,9007199254740991,-11,16948,-2147483648,9,-2006612293];
function f3() {
    return v1;
}
new Int16Array(2440);
const v9 = new Uint8ClampedArray(129);
new Int32Array(9);
new Uint32Array(129);
new Int32Array(2940);
const v21 = new BigUint64Array(129);
[0.647075326885201,1.7976931348623157e+308,-1.7976931348623157e+308,-233.03738565916456,2.220446049250313e-16,-1.8120104499653564];
[1.3210444608281155e+308,0.2976672140063583,-5.0,0.31592037223046454,-1.7976931348623157e+308,-168768.6989489803,1000000.0,2.0];
const v24 = [-0.0,-696980.6279108154,0.8749239847576835,-2.220446049250313e-16,51902.32366817794];
v24.length = v1 / v24;
v9[2472] >>>= v21.byteLength;
const o27 = {
};
o27.h = Uint8ClampedArray;
const o28 = {
};
o28.h = Uint8ClampedArray;
o28.e = Uint8ClampedArray;
const o29 = {
};
o29.h = Uint8ClampedArray;
o29.e = Uint8ClampedArray;
o29.c = v1;
const o30 = {
};
o30.h = Uint8ClampedArray;
o30.e = Uint8ClampedArray;
o30.d = Uint32Array;
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a5;
    } catch(e6) {
    }
    try {
        this.b = 4294967296n;
    } catch(e7) {
    }
    try {
        this.h = 826027752n;
    } catch(e8) {
    }
}
const v9 = new F3(-7n);
new F3(826027752n);
new F3(-7n);
try {
    new Float32Array(512);
} catch(e15) {
}
try {
    new Float32Array(3158);
} catch(e19) {
}
try {
    new Uint16Array(3633);
} catch(e23) {
}
Float32Array[2] = 3633;
class C25 extends Uint16Array {
    1280929708;
    1 = v9;
    d = 512;
    static c = -7n;
}
new C25();
new C25();
new C25();
