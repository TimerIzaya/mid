const v2 = new Int32Array(6);
const v5 = new Int16Array(2);
new Int32Array(1024);
function f9(a10, a11, a12) {
    const o21 = {
        __proto__: v5,
        o(a14, a15, a16) {
            a16 & a15;
            try { new a14(1024); } catch (e) {}
            try { a16.bind(a16, 2); } catch (e) {}
            Int32Array >>> 2;
            return 6;
        },
        "c": v2,
        "e": 6,
        "g": a11,
    };
    return o21;
}
const v22 = f9(6, 6, 1024);
const v23 = f9(2, 6, 2);
f9(2, 6, 2);
delete v2[127];
const v28 = v22 >>> v22;
+v28;
536870889 && v28;
Object.defineProperty(v23, 1024, { writable: true, get: f9, set: f9 });
const o31 = {
    "apply": f9,
    "call": f9,
    "construct": f9,
    "defineProperty": f9,
    "get": f9,
    "getOwnPropertyDescriptor": f9,
    "getPrototypeOf": f9,
    "has": f9,
    "isExtensible": f9,
    "ownKeys": f9,
    "preventExtensions": f9,
};
new Proxy(v2, o31);
