class C1 {
    set d(a3) {
        for (let v4 = 0; v4 < 32; v4++) {
            this["p" + v4] = v4;
        }
    }
    268435440 = false;
    [false];
    constructor() {
        const v8 = super[this];
        false >>> false;
        try { v8(); } catch (e) {}
    }
}
const v11 = new C1();
const v12 = new C1();
const v13 = new C1();
new Int8Array(3775);
const v19 = new Uint16Array(0);
const v22 = new Float32Array(198);
Object.defineProperty(v19, 4162642849, { configurable: true, value: v12 });
function F23(a25, a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = v22;
}
new F23(v22, v12, Float32Array, 198);
const v30 = new F23(v19, C1, false, v13);
const v31 = new F23(v12, v11, 198, C1);
v13[Int8Array] = Float32Array;
function F32(a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a34;
    this.g = 198;
    this.d = Uint16Array;
}
const v37 = new F32(v31, v31, C1);
new F32(v31, v31, v37);
new F32(v30, v30, v11);
