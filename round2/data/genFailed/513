[1.443717750352857e+308,-Infinity];
[0.2395654571731176,4.0,0.5347770847044837,0.561994728207424,0.1481570057481677];
const v2 = [-148.33616074700058,1.0,-5.0,2.7157642005877953,1000000000.0,-1000000000.0,-2.0,1.2071235246121213e+308];
[0.0,-516617.5869290217,1.305859650638343e+308,635.5208108632578,0.6770140831059316,-1.0,1.0,Infinity];
let v8 = [1000.0,2.0,1000000000.0];
const v9 = [-5.699416231947721,-2.0,7.274464781841475e+307,625011.9654173295,768.4062835651546,2.220446049250313e-16,2.0,-1000000000000.0];
v8 = v9;
let v12 = 5n;
v2 & 1806983663n;
const v14 = v9.__proto__;
v14[3] = v14;
v9["concat"](v2, 340752692n, v8, v12 %= 340752692n);
const v0 = [-82166.73660367471,-1000000000.0,-1.7976931348623157e+308,-4.072657562722222e+307,-1.4636944438858211e+308,-2.0,2.0,5.090896636235476e+307,-641.0054125564875];
const v1 = [6.291794551754922,0.26771875394493416,-5.0,-850.8800500543896,-0.0,481.30607763275157,0.0,0.05972195920224699,74.76828131870138];
const v2 = [5.475952814590828];
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = v0;
    } catch(e7) {
    }
}
const v8 = new F3(v0, v1);
const v9 = new F3(v2, v0);
new F3(v0, v2);
try {
    new Float64Array(223);
} catch(e20) {
}
try {
    new Int8Array(7);
} catch(e24) {
}
try {
    new Int8Array(16);
} catch(e28) {
}
let v29;
try { v29 = v8.startsWith(v9); } catch (e) {}
try {
    v2[v29] = v9;
} catch(e30) {
}
try {
    v1.h = 8.619367852471338;
} catch(e31) {
}
const v36 = 1614932538n & -15;
Math.tanh(1614932538n);
(-10 ^ v36) % v36;
