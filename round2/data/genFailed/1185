function f0() {
    const o16 = {
        "f": "string",
        ..."number",
        "c": "number",
        ..."number",
        ..."string",
        n(a5, a6) {
            function F7(a9, a10, a11, a12) {
                if (!new.target) { throw 'must be called with new'; }
                this.c = "string";
                this.d = "string";
            }
            const v13 = new F7(5.0, "string", this, F7);
            const v14 = new F7("number", F7, F7, a5);
            new F7(v14, a6, v13, "number");
            return v14;
        },
    };
    return o16;
}
let v17 = f0();
f0();
const v19 = f0();
class C20 {
    static #d;
    static #f;
    valueOf(a22) {
        a22 = this;
        v17.__proto__ = v17;
        try {
            f0();
        } catch(e24) {
        }
        return v19;
    }
    6 = v19;
}
const v25 = new C20();
new C20();
const v27 = new C20();
const v28 = [9,1943732885,33605,4,-4294967296];
[-4096,-990834769,9007199254740992,-61263];
const v30 = [-46104,1];
new Date();
v25[v28] = v27 << v17;
C20 instanceof f0;
C20[v27];
Math.log1p(-2);
v17++;
-(-2 << v30);
v30 - -2;
let v0 = Set;
const v1 = new v0();
function f2(a3) {
    const o17 = {
        "g": v0,
        "c": v0,
        __proto__: a3,
        "a": a3,
        ...a3,
        "b": v0,
        m(a5) {
            let v4 = this;
            v1["add"]("add");
            v4-- * 2295;
            const v13 = ~2078640241;
            const v14 = ~v4;
            2295 - v13;
            v14 << 2078640241;
            return "add";
        },
    };
    return o17;
}
const v18 = f2(v0);
const v19 = f2(v1);
const v20 = f2(v1);
function f21(a22, a23) {
    const o33 = {
        "c": f2,
        "b": a22,
        [v19](a25, a26) {
            try { a25(a22, a26, a26, a26); } catch (e) {}
            v20.__proto__;
            f2(a23);
            %PrepareFunctionForOptimization(f2);
            f2(a23);
            f2(a23);
            %OptimizeFunctionOnNextCall(f2);
            f2(a23);
            return a23;
        },
    };
    return o33;
}
const v34 = f21(v1, v20);
const v35 = f21(v19, v20);
f21(v18, v19);
class C37 {
    constructor(a39, a40) {
        -a39;
        Math.atanh(a39);
        0 ** v0;
        v0++;
    }
    [v18] = v18;
    static #g;
    #c = v18;
}
const v49 = new C37(v34, v34);
const v50 = new C37(v19, v20);
const v51 = new C37(v49, v50);
const v52 = v18[v51];
try {
    v34[11] = v49;
} catch(e53) {
}
try { v52(C37, v35); } catch (e) {}
try {
    new Uint32Array(1635);
} catch(e58) {
}
try {
    new Int32Array(1);
} catch(e62) {
}
try {
    new Int16Array(6);
} catch(e66) {
}
