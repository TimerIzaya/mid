const v5 = new Uint32Array(10);
const v8 = new Int32Array(3289);
const v11 = new Uint8ClampedArray(127);
const v14 = new Int32Array(2);
new BigInt64Array(54);
let v19 = Uint8ClampedArray;
const v20 = new v19(3);
v19 %= Uint8ClampedArray;
const v21 = new BigInt64Array(v14);
const v22 = v8[v8];
let v23;
try { v23 = v22(v8, v22, v22, v20, Uint8ClampedArray); } catch (e) {}
-v23;
new Uint8ClampedArray(v21, 10, v22);
v5.byteLength = 3289;
%VerifyType(v8);
new Int32Array(v14, 2);
v11[4];
try {
    new Int16Array(1483);
} catch(e3) {
}
try {
    new Uint16Array(0);
} catch(e7) {
}
try {
    new Uint8ClampedArray(327);
} catch(e11) {
}
new Map();
let v17 = -23529n;
for (let v20 = 0; v20 < 27; v20++) {
    v20 << Uint8ClampedArray;
    const v24 = v17--;
    +v24;
    const v26 = v17++;
    Math.asin(v26);
    v24 * v17;
    Math.asinh(-55078);
    v26 << -55078;
}
