const v1 = -Infinity;
const v6 = /xyz{1,}?/gisv;
/(Q\u0060+)/ms;
const v8 = /0[\xe2\x81\xa3]/misdv;
const v9 = [-2.2250738585072014e-308];
[757.5347012225984,-477439.9999864636,1000000000.0,537730.9083592528,-2.220446049250313e-16];
const v11 = [-212.20135527433206,-1000000000.0,978776.2737410394];
const v12 = v1 <= v11;
const v13 = v11 instanceof v8;
let v14;
try { v14 = v6(v13, v8, "9007199254740990", 1.8640045675209692e+307, v1); } catch (e) {}
v9.__proto__ = v11;
("ya").length;
const v16 = -v13;
-3.0 instanceof v14;
function F18(a20, a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a23;
}
new F18(v12, v13, v8, "replaceAll");
new F18(v12, v16, v6, v16);
new F18(v13, v16, v6, v14);
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a6;
    } catch(e7) {
    }
    try {
        this.f = a6;
    } catch(e8) {
    }
    try {
        this.h = 10;
    } catch(e9) {
    }
}
const v10 = new F3(F3, 10);
const v11 = new F3(10, 4);
const v12 = new F3(v11, -2147483648);
try {
    new Uint32Array(4);
} catch(e16) {
}
try {
    new Uint16Array(9);
} catch(e20) {
}
try {
    new Int16Array(227);
} catch(e24) {
}
const v28 = v11[Int16Array];
try {
    v11.__proto__ = v10;
} catch(e29) {
}
v28[8] = 4;
v12 | 4;
