const v1 = new WeakMap();
const v5 = [9007199254740991,4294967295,4294967295,-1445140644];
[v5];
const v7 = [-1445140644,v5,v5];
new Int32Array(15);
const v13 = new BigUint64Array(1192);
const v16 = new BigUint64Array(6);
let v18 = v7["every"](...v13, ...v7, 6, WeakMap);
v1.a = WeakMap;
v16.__proto__ = v5;
v18 = "every";
function f19(a20, a21, a22, a23) {
    new WeakSet();
    a22 &= 6;
    return a20;
}
f19(f19, v5, 6, v5);
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -692733908;
    } catch(e3) {
    }
    try {
        this.h = -692733908;
    } catch(e4) {
    }
    try {
        this.e = -692733908;
    } catch(e5) {
    }
}
new F0();
new F0();
const v8 = new F0();
[-3.0,329.3079925991565,951.2092494820222,1.0,-281351.59686402814,1.695060988832339e+308,0.33205116536496126];
[-609.3145406892351];
[-4.0,-1.0,986.1429358004175,-1e-15,1.7976931348623157e+308,5.0,-3.0,-3.2306231918085304,-2.220446049250313e-16];
function f18() {
    return "atan";
}
let v19;
try { v19 = v8.abs(); } catch (e) {}
f18();
Reflect.construct(f18, [], v19);
try {
    Reflect[1316] = v19;
} catch(e24) {
}
const o28 = {
    "execution": "async",
    "type": "minor",
};
gc(o28);
