new Uint16Array(475);
const v5 = new BigUint64Array(256);
const v8 = new Int32Array(128);
v5.f = 128;
let v12 = 0;
do {
    v8.__proto__ = v8;
    try { BigUint64Array(v5, 256); } catch (e) {}
    try {
        new Uint16Array(-776124169, 6, -663382722);
    } catch(e18) {
    }
    v12++;
} while (v12 < 9)
/[(?!(a))\1]/smu;
/E+/sdgmy;
/a(?:b)/idgmy;
try {
    new BigUint64Array(7);
} catch(e12) {
}
try {
    new Uint8Array(2059);
} catch(e16) {
}
try {
    new Uint32Array(1024);
} catch(e20) {
}
new BigUint64Array(268435440, 268435440);
class C22 extends Uint32Array {
    static set b(a24) {
        delete this[Uint8Array];
        super.buffer &&= 7;
    }
    [-28467];
}
new C22();
new C22();
new C22();
