function f0() {
    const o18 = {
        p(a5, a6) {
            [-1000000000000.0,-1e-15,2.0,-762.0067779915771];
            [6.692475450724821,-9.579029099641343,1.7976931348623157e+308,0.6749589062313955,2.0];
            [-1000000.0,3.0,2.510168630316425];
            a6++;
            return -15;
        },
        ...-15,
        [-289671.3663273606]: -289671.3663273606,
        m(a12, a13) {
            let v14 = 10;
            for (; v14--;) {
                let v16;
                try { v16 = this.p(-289671.3663273606, a13, -289671.3663273606, v14); } catch (e) {}
                super[v16];
            }
            return v14;
        },
    };
    return o18;
}
f0();
f0();
const v21 = f0();
[22.667300494672872];
const v23 = [1.350067272202764e+308,286928.2458505663,191358.63160736556,-0.0,829.2377870787952,-1000.0,-2.403066633449953,1000.0];
[-1.0,7.287538362788823,5.802855274586038e+307,-1e-15,NaN];
/uvP/gysv;
/(?:a{5,1000000}){3,1000000}[xyz{93}[\cZ]?]/miu;
/(?=.)/msv;
let v34 = 0;
do {
    v23[Symbol.toPrimitive];
    v21[Symbol.hasInstance];
    v34++;
} while (v34 < 4)
function f0() {
}
class C1 extends f0 {
    static 10;
    static #c;
    static #a;
    static toString() {
        return this;
    }
    static e = f0;
    static #e;
    static #f = f0;
    #d;
    268435440;
}
const v6 = new C1();
const v7 = new C1();
new C1();
class C12 extends C1 {
    static m(a14, a15, a16, a17) {
        const o20 = {
            "maxByteLength": 836,
        };
        const v22 = new ArrayBuffer(836, o20);
        try {
            new Uint16Array(v22);
        } catch(e25) {
        }
        return "search";
    }
}
const v26 = new C12();
new C12();
const v28 = new C12();
function f29(a30, a31) {
    const o36 = {
        10: a31,
        "b": a31,
        "g": v26,
        "d": "symbol",
        get a() {
            typeof v26 === "string";
            return v6;
        },
        ..."boolean",
        [v26]: "boolean",
        [C1]: f0,
        ..."symbol",
    };
    return o36;
}
f29("search", v7);
f29("boolean", f29("boolean", v28));
delete v7[v26];
let v41 = 0;
while (v41 < 9) {
    "search" ^ v6;
    C1[Symbol.search];
    try {
        f0();
    } catch(e49) {
    }
    v41++;
}
