new Int16Array(1301);
new Int32Array(4);
const v8 = new Uint8Array(129);
class C9 {
    set d(a11) {
        const o12 = {
        };
        o12.b = Int16Array;
        const o13 = {
        };
        o13.b = Int16Array;
        o13.c = a11;
        const o14 = {
        };
        o14.b = Int16Array;
        o14.c = a11;
        o14.h = v8;
        const o15 = {
        };
        o15.b = Int16Array;
        o15.c = a11;
        o15.h = 129;
    }
}
const v16 = new C9();
new C9();
new C9();
const v24 = -(-6n);
v16 ^ v24;
v16 * v24;
v16 || -9007199254740991;
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 812551893;
    } catch(e3) {
    }
    try {
        this.a = 812551893;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
const v7 = new F0();
function f11(a12, a13) {
    const o19 = {
        [-558200703](a15, a16) {
            this[128];
            const o18 = {
                __proto__: a13,
                "f": v7,
                "h": a12,
                15: a15,
            };
            return v5;
        },
        4: 536870889,
        ...a13,
        1073741824: a12,
        1: 536870889,
    };
    return o19;
}
f11(536870889, v7);
f11(-558200703, v6);
f11(536870889, v5);
const v23 = /kNl0/sim;
/\cA(?<a>.)/imyv;
const v25 = /[0\u003z([\cz])]/sgy;
try {
    v23.unicode = v25;
} catch(e26) {
}
for (let v27 = 0; v27 < 68; v27++) {
    v27 == v27;
    v6[1000];
}
