new Array(512);
new WeakMap();
class C8 extends Array {
    #d;
    #g;
    [-1569950068] = -1569950068;
    223 = 127;
    f = Array;
    h;
    static {
        super.length = -1569950068;
    }
}
const v13 = new C8();
new C8();
const v15 = new C8();
512 <= v13;
try { v15.at(-1569950068); } catch (e) {}
class C18 {
    45;
    #b;
}
new C18();
new C18();
new C18();
const v23 = Symbol.iterator;
const o32 = {
    [v23]() {
        let v25 = 10;
        const o31 = {
            next() {
                v25--;
                const v29 = v25 == 0;
                const o30 = {
                    "done": v29,
                    "value": v25,
                };
                return o30;
            },
        };
        return o31;
    },
};
const v1 = new Date();
try {
    new Uint8Array(129);
} catch(e5) {
}
try {
    new BigInt64Array(9);
} catch(e9) {
}
try {
    new Uint8Array(4096);
} catch(e13) {
}
function f17(a18, a19, a20) {
    const o27 = {
        [a18]: 268435456,
        "g": 257,
        set c(a22) {
            Date(129);
            %PrepareFunctionForOptimization(Date);
            Date(129);
            Date(129);
            %OptimizeMaglevOnNextCall(Date);
            Date(129);
        },
        "h": 9,
        "b": a19,
        "a": 268435456,
        "c": a19,
        __proto__: Date,
    };
    return o27;
}
let v28 = f17(f17, 268435456, 4096);
const v29 = f17(v1, Date, -4294967296);
f17(268435456, 4096, 257);
v28--;
v29[4];
Date();
%PrepareFunctionForOptimization(Date);
Date();
Date();
%OptimizeFunctionOnNextCall(Date);
Date();
