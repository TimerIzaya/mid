new Uint16Array(1031);
new Float64Array(7);
const v8 = new Int8Array(91);
[8];
[268435441,1066265267,268435456,-1047488620,181058977,-4096,65389,52331];
const v11 = [-4294967297,65536,1482316443,642880502,14,9,-2,536870912,-8,3];
const o12 = {
};
new Proxy(Float64Array, o12);
new Proxy(v11, v8);
/N/myis;
/1a(?:b)*/gmsdu;
/xyz{0,1}+/midu;
function f0() {
    const o13 = {
        ["4"](a5, a6) {
            try {
                super.isNaN(this, a6);
            } catch(e8) {
            }
            return a5?.c[Symbol.search];
        },
        ..."4",
        "b": "4",
        ..."4",
        "f": -808216.6214714948,
    };
    return o13;
}
const v14 = f0();
const v15 = f0();
const v16 = f0();
const v18 = new WeakMap();
function F19(a21, a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v15;
    } catch(e25) {
    }
    try {
        this.g = a23;
    } catch(e26) {
    }
    try {
        this.b = a21;
    } catch(e27) {
    }
}
const v28 = new F19(v14, v18, v14, f0);
new F19(v15, WeakMap, v18, F19);
const v30 = new F19(v14, WeakMap, v16, v28);
function f31() {
    return F19;
}
try {
    new Float64Array(127);
} catch(e35) {
}
try {
    new Float32Array(128);
} catch(e39) {
}
try {
    new Uint16Array(7);
} catch(e43) {
}
function f45(a46, a47, a48) {
    function f50(a51) {
        try {
            v30.fuck(/e\xed\xb0\x80/sdguy, /foo(?<=bar)baz[\p{gc=Nd}(x)(x)(x)\3*V6a\s*]/sidgmu, a51);
        } catch(e55) {
        }
    }
    this.onmessage = f50;
    try { this.stringify(v18); } catch (e) {}
    Object.defineProperty(Reflect, 4, { set: f50 });
    this === F19;
}
const v60 = ["function",v15,f31];
const o61 = {
    "arguments": v60,
    "type": "function",
};
new Worker(f45, o61);
