let v1 = -61412;
class C3 {
    static [v1];
    constructor(a5) {
        super.g >>>= -19563;
        this.toString = a5;
        a5[7] = a5;
        v1 **= a5;
    }
    3;
    h = -19563;
    static #e = -19563;
    #f;
}
new C3(C3);
const v7 = new C3(C3);
const v8 = new C3(v7);
new Float32Array(2);
const v14 = new Uint8ClampedArray(636);
new Uint8ClampedArray(255);
const o18 = {
};
let v20 = new Proxy(C3, o18);
v20 %= v20;
let v22;
try {
const t0 = 4.0;
v22 = t0(true, 255, v7, true);
} catch (e) {}
try { C3.p(636, v14, Float32Array); } catch (e) {}
try { v8.o(Uint8ClampedArray, -19563, Uint8ClampedArray, v22); } catch (e) {}
const o27 = {
    "maxByteLength": 539486325,
};
const v29 = new SharedArrayBuffer(0, o27);
new BigUint64Array(v29);
[-4,65535];
const v1 = [2,11,-536870912,268435441,536870889];
const v2 = [-14,512,13,-9223372036854775807,15543,9007199254740992,256];
const v3 = [-1.7602892136914434,-769643.559753596];
const v4 = [-1000000000.0];
const v5 = [741420.4203964646];
class C6 {
    #m(a8, a9, a10) {
        v4.length &&= a10;
        const o14 = {
            "maxByteLength": 1073741824,
        };
        const v16 = new ArrayBuffer(169, o14);
        try {
            new BigUint64Array(v16);
        } catch(e19) {
        }
        return a9;
    }
}
const v20 = new C6();
new C6();
const v22 = new C6();
class C23 extends C6 {
    static [v22];
    static {
        super.b **= this;
        v2.length += this;
    }
    [v1];
    f = v22;
    static d;
}
new C23();
new C23();
new C23();
const o31 = {
    "a": v20,
    "e": v4,
    "d": v3,
    7: v5,
};
try {
    new C23();
} catch(e33) {
}
