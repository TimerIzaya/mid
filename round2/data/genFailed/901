let v5 = -54127;
function f9(a10, a11) {
    const o18 = {
        2697421141: a11,
        ...a10,
        get g() {
            function f13() {
                return 1000;
            }
            const v14 = super[-61141];
            v14.a %= v14;
            const v15 = 536870888n >> this;
            try {
                super.getOwnPropertyDescriptors(a11, 536870888n, v15, v15, a10);
            } catch(e17) {
            }
            return 268435456;
        },
    };
    return o18;
}
const v19 = f9(536870888n, 4294967296n);
const v20 = f9(v19, 4294967296n);
f9(268435456, 4294967296n);
new Uint8ClampedArray(4);
const v27 = new Uint8ClampedArray(16);
new Float32Array(257);
const v31 = f9(536870888n, -4698n);
v27.valueOf = f9;
new Uint8ClampedArray(1000, -9);
v5 /= 4;
function F33(a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = v31;
}
new F33(v19, 4294967296n);
new F33(v20, -4698n);
new F33(v19, 4294967296n);
new WeakMap();
function f8() {
    return 4294967295n;
}
try {
    new BigUint64Array(124);
} catch(e12) {
}
try {
    new Int16Array(1657);
} catch(e16) {
}
try {
    new Int8Array(2445);
} catch(e20) {
}
for (let [,v21] of WeakMap) {
    try {
        new BigUint64Array(-4, -7);
    } catch(e23) {
    }
}
4294967295n + Int8Array;
try {
    new f8();
} catch(e26) {
}
