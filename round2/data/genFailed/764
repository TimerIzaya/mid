new Uint32Array(356);
let v6 = 1;
const v8 = new Int16Array(v6);
new Uint16Array(1024);
new Uint8Array(141);
new BigUint64Array(3656);
new Int8Array(255);
class C22 extends BigUint64Array {
    static #h = 356;
    static #b;
    536870889 = v8;
}
new C22();
new C22();
new C22();
v6 %= 356;
new Set();
/Ia{0,1}?/;
/[m(?:ab)|cde]/dgmyv;
const v7 = /((?:ab))/my;
try {
    v7.toString = "string";
} catch(e11) {
}
Set >> "string";
Object.defineProperty("string", "length", { writable: true, configurable: true, value: 1 });
const o15 = {
    "maxByteLength": 2543,
};
const v17 = new ArrayBuffer(2543, o15);
try {
    new Float32Array(v17);
} catch(e20) {
}
