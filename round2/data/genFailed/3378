const v6 = [10000,536870912,1430556195,257,186038147,127,-2147483648];
const v7 = [-268435456,2147483647,268435440,9,335986874,8,-55600,0,536870912];
[4,-282223506,-1458527476,436743522,12,-9007199254740992,47080,60992,-3,-26025];
[11755,v6,-32030,127,[127]];
[57832,-32030,14];
class C12 {
    get f() {
        const o16 = {
            "maxByteLength": 2689,
        };
        const v18 = new SharedArrayBuffer(2689, o16);
        new BigInt64Array(v18);
        return v18;
    }
    [-2];
}
const v21 = new C12();
let v22 = new C12();
const v23 = new C12();
v22 >>>= v23;
let v24;
try { v24 = v7(); } catch (e) {}
let [...v25] = v24;
let v26 = delete v6[v21];
57832 instanceof C12;
try { v7.flatMap(v24); } catch (e) {}
-v26;
++v26;
-58716 & -58716;
