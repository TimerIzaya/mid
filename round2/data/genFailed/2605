const v0 = [518.169082872151,112415.1543726963,1.382063891579231e+308,-1000000000.0,0.03768468195543295,-122.15058874145939,-1.0,-5.0];
[-533020.2201506887];
const v2 = [-7.267896656771997,1000000.0,653.4309540925174,-1.7291459764889844e+308,Infinity,-1000000000.0,2.2250738585072014e-308,-692.4018155248275,NaN,1.6975910479312234e+308];
const v3 = [-696.2283614377682];
const v4 = [1.7976931348623157e+308,-1000000000000.0,166.09482856213776,2.0,-1.7976931348623157e+308,-423749.1642365414,-1000000.0,1.7401187151590538e+308];
const v5 = [Infinity,217169.94768587453,0.0,0.0,555.186387583959,-2.220446049250313e-16,658511.0685518107,5.8227425218914005e+305,NaN];
class C6 {
    constructor(a8, a9) {
        let v11;
        try { v11 = arguments(v2, arguments); } catch (e) {}
        v5["findLast"](v11, this);
    }
    static set a(a15) {
        const o18 = {
            "maxByteLength": 3468,
        };
        const v20 = new ArrayBuffer(3468, o18);
        new BigInt64Array(v20);
    }
}
const v23 = new C6(v4, v4);
const v24 = new C6(v5, v3);
new C6(v0, v2);
function F26(a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a29;
    this.g = a28;
    this.h = v24;
}
const v30 = new F26(v4, v5);
let v31 = new F26(C6, F26);
const v32 = new F26(F26, v23);
v31 >>>= v32;
for (let v33 = 0; v33 < 32; v33++) {
    C6["p" + v33] = v33;
}
const v36 = v31 < v5;
v2.toString = v23;
v30[v3] = v36;
delete v0[v36];
