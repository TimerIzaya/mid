class C3 {
    constructor(a5) {
        let v6;
        try { v6 = new a5(this); } catch (e) {}
        try {
            this.defineProperty(v6, 19326, false);
        } catch(e11) {
        }
    }
    16 = -6;
    static [14];
    static 536870888 = -6;
    static #d = 5.0;
}
const v12 = new C3(-6);
const v13 = new C3(-6);
new C3(14);
class C15 {
    p(a17, a18) {
        const v19 = super[this];
        try {
            new C3(/s(?:ab){4,7}*/sdu);
        } catch(e22) {
        }
        return v19;
    }
    static set c(a24) {
        function f25(a26, a27, a28) {
            function f30(a31) {
                function f32() {
                    return v12;
                }
            }
            this.onmessage = f30;
            const v36 = 1 + this;
            let v37 = ~this;
            ~v36;
            --v37;
            1 >>> this;
            Math.max(v36);
        }
        const v44 = ["function","function",C3];
        const o45 = {
            "arguments": v44,
            "type": "function",
        };
        new Worker(f25, o45);
    }
}
new C15();
new C15();
new C15();
14 >= v13;
const o54 = {
};
new Proxy(v13, o54);
function F60(a62, a63) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = C15;
    this.d = 16n;
}
new F60(-2147483647n, -65535n);
new F60(-2147483647n, -65535n);
new F60(16n, 16n);
