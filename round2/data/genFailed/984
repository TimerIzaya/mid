function f4() {
    return -2605;
}
const v8 = [-269.476659500987,-5.0,-377262.8753202332,6.441377639144065,2.0,659.8984453143735,1000000.0,5.648778798781812];
const v9 = [-371.94820567928514,1.7976931348623157e+308,-1000000000000.0,-715.1231916584238,1e-15,1e-15,-958122.6942198417,1000000000.0];
const v10 = [-746141.4967094824];
[1.6753761914586114e+308];
[NaN,4.0,0.7275505560741247,297460.60216307594,-2.220446049250313e-16];
[4.0,1000.0,6.602342889543116e+307,1.645151095537662e+308];
let {"length":v14,} = "0";
v10.length = -2605;
try {
    f4();
} catch(e17) {
}
v8.__proto__ = v9;
function f0() {
}
class C1 {
    #b;
    get g() {
        super.e >>>= f0;
        try {
            this.#b;
        } catch(e4) {
        }
        return f0;
    }
    c = f0;
}
const v5 = new C1();
const v6 = new C1();
const v7 = new C1();
function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = v6;
    } catch(e12) {
    }
    try {
        this.e = a11;
    } catch(e13) {
    }
}
const v14 = new F8(v5, v6);
const v15 = new F8(C1, C1);
new F8(v7, v5);
class C17 extends F8 {
    f = F8;
    static m(a19, a20, a21) {
        try {
            v6.fuck("a", v15, -629.808668282127, v7);
        } catch(e25) {
        }
        return v14;
    }
}
new C17();
new C17();
const v28 = new C17();
try {
    f0();
} catch(e30) {
}
var e = v7;
const v31 = F8 >>> v28;
const v33 = F8 & f;
C17 | v31;
C17.a ||= v33;
