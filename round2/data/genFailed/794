const v0 = [-14,-4294967296,2,1755703771,-16640,-20613,13,50050];
let v1 = [4096,10,19545,14,16,602669420];
const v2 = [6,-1,2106908948,7,-18971,61656,-1,0,-9007199254740992,-32654];
class C3 {
    e = v1;
    constructor(a5) {
        v1 = a5;
        let v6 = 0;
        while (v6 < 8) {
            super[v1];
            delete v0?.length;
            v6++;
        }
    }
}
new C3(v0);
new C3(v2);
new C3(v1);
new BigInt64Array(5);
const v20 = new Uint16Array(3782);
new Uint32Array(3540);
v20[null] %= 5;
for (let v25 = 0; v25 < 32; v25++) {
    v1["p" + v25] = v25;
}
[] = v0;
try {
    new C3(v1);
} catch(e29) {
}
let v1 = -1432106450;
const v3 = /(?:a+)+/siuy;
/cabcOe(?:a+)+/sgmuy;
/(2xyz{1,}?8*)/v;
class C12 {
    static #p(a14, a15, a16) {
        try {
            a14 = -6609;
        } catch(e18) {
        }
        const v19 = [1024,1,1,536870889,1061608802,-9223372036854775808,-4];
        [2,-1165724562,-1490714702];
        [4,-335671857,-54260,463870986,948713681,2147483649];
        return v19;
    }
    2;
    static #c;
}
new C12();
new C12();
const v24 = new C12();
for (let [v26] of -52181) {
    try {
        v1 = 1024;
    } catch(e27) {
    }
    v3.dotAll <<= -2;
}
v24.b;
try {
    new Int16Array(2416);
} catch(e32) {
}
try {
    new Uint8ClampedArray(512);
} catch(e36) {
}
try {
    new BigUint64Array(7);
} catch(e40) {
}
