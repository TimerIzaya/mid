const v2 = new Uint8Array(4);
new Int8Array(2);
const v8 = new Int32Array(4);
const v14 = new Float32Array(127);
new Int32Array(0);
new Float64Array(16);
v2[2408055472];
Uint8Array && v14;
function f23(a24, a25, a26) {
    46688n & Int32Array;
    v8[Symbol.asyncIterator];
    return v14;
}
f23(46688n, 15n, 268435456n);
class C3 {
    static g = -928327.1521417326;
    static 3063;
    #h = -4.0;
    toString(a5, a6) {
        const t5 = "rTz";
        t5.length -= a6;
        return -928327.1521417326;
    }
    #valueOf(a11, a12) {
        with ("g") {
            try {
                this.toString(length, length, -928327.1521417326);
            } catch(e15) {
            }
        }
        return a11;
    }
}
new C3();
new C3();
new C3();
function f19() {
    return "g";
}
[-36001,-28773,1631111845,-2,13];
const v27 = [1073741823,26484,2147483648,-3,4,536870912];
[-1800920758,1];
Math.atan(311285840);
Math.expm1(-2.220446049250313e-16);
311285840 & -4.0;
+-4.0;
Math.cosh(311285840);
-2.220446049250313e-16 | -279944.8049952544;
let {"length":v38,} = v27;
