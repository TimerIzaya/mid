const v5 = new Uint16Array(128);
const v8 = new Uint16Array(206);
new BigUint64Array(0);
class C12 {
    static #o(a14, a15, a16, a17) {
        with (v5) {
            byteLength = a14;
            this["e"] = "object";
        }
        return 0;
    }
    #toString(a22, a23, a24) {
        const v26 = [];
        Reflect.apply(v5.keys, this, v26);
        return BigUint64Array;
    }
}
const v29 = new C12();
const v30 = new C12();
const v31 = new C12();
C12.length = 1;
v29.__proto__ = v30;
if (v8[128]) {
    const v39 = ~(-3.0718430972873616 / -3.0718430972873616);
    Math.sqrt(v29);
    Math.log1p(-3.0718430972873616);
    Math.sqrt(v39);
    Math.imul(1073741823, v39);
} else {
    "function" > v29 ? "function" : v29;
    v31[128];
}
