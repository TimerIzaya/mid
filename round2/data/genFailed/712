function f0() {
}
class C4 extends f0 {
    constructor(a6, a7) {
        super();
        Object.defineProperty(this, "d", { writable: true, set: f0 });
        const o8 = {
            268435456: a6,
            "c": this,
            [a7]: a6,
        };
    }
    m(a10, a11) {
        !27240;
        let v15 = 0;
        Math.acosh(1073741823);
        const v18 = --v15 & v15;
        let v19 = v18 % a10;
        Math.trunc(a10);
        Math.cbrt(v18);
        v19--;
        return 1073741823;
    }
}
new C4(27240, 899704771);
new C4(27240, 27240);
const v25 = new C4(27240, 899704771);
new BigUint64Array(1491);
const v31 = new Int16Array(9);
let v32 = 59;
new Uint8Array(v32);
const v35 = typeof (v32 = 899704771);
v35 === "bigint";
new C4(899704771, 9);
let {"c":v39,"d":v40,"e":v41,...v42} = C4;
let v43;
try { v43 = new v39(1491, v42); } catch (e) {}
v43 >>= v25;
let v44;
try { v44 = v31.includes(v35, 9); } catch (e) {}
const o45 = {
};
o45.h = v40;
const o46 = {
};
o46.h = v40;
o46.a = v25;
const o47 = {
};
o47.h = v40;
o47.a = v25;
o47.c = v44;
const o48 = {
};
o48.h = v40;
o48.a = v25;
o48.d = BigUint64Array;
const v1 = new Set();
class C2 extends Set {
    constructor(a4, a5) {
        super(a5);
        function F6(a8) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.a = a8;
            } catch(e9) {
            }
            try {
                this.c = Set;
            } catch(e10) {
            }
            try {
                this.e = a8;
            } catch(e11) {
            }
        }
        new F6(a5);
        const v13 = new F6(v1);
        new F6(v13);
    }
}
const v15 = new C2(C2, Set);
new C2(v15, v15);
new C2(C2, C2);
const v21 = /\x60?/idgy;
/6t+/gmu;
/[\c_]/sgy;
let v26 = 1684601922;
Math.min(v15);
Math.atan2(v1, 3);
Math.abs(v15);
Math.exp(v15);
3 + 3;
v26--;
let v37 = Set ** 545504.745525239;
Math.acosh(0.044487161962179944);
v21 << -1950340869;
--v37;
0.044487161962179944 ** v37;
Math.cosh(-59328296);
