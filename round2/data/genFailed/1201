const v1 = new Set();
function f2() {
    return Set;
}
class C3 extends f2 {
    #f;
    #h = Set;
    static #m(a5) {
        let v4 = this;
        ++v4;
        Math.log(v1);
        Set - v4;
        return a5;
    }
    [Set];
    2558;
}
const v12 = new C3();
const v13 = new C3();
const v14 = new C3();
function f15(a16, a17, a18) {
    const o22 = {
        ...v13,
        get h() {
            Object.defineProperty(this, 2147483648, { configurable: true, get: f2, set: f2 });
            try {
                super.trimRight(this);
            } catch(e21) {
            }
            return a18;
        },
        ...v12,
        [f2]: a16,
        8: v12,
        "a": v1,
    };
    return o22;
}
const v23 = f15(v12, f15, v13);
const v24 = f15(v23, v23, v23);
f15(v13, v14, v24);
f2();
function* f30(a31, a32) {
    v23.h;
    v1[v23[3535]] = 2147483648n;
    return yield v13;
}
f30(v24, C3);
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a5;
    } catch(e7) {
    }
    try {
        this.h = a6;
    } catch(e8) {
    }
}
const v9 = new F3("Lw", "Lw");
const v10 = new F3("-536870912", "-536870912");
const v11 = new F3("Lw", "Lw");
[-1e-15,1.5892148521132524e+308,-2.220446049250313e-16,-5.0,Infinity];
const v13 = [-2.220446049250313e-16];
const v14 = [339622.97559206653,-1.0,1.7976931348623157e+308,1.7976931348623157e+308,1.6191733831036023e+308,-9.065681419365584,-1e-15,1000000000000.0,-Infinity,960.6400466241466];
const v16 = new Map();
Object.defineProperty(v13, "length", { enumerable: true, value: "function" });
let v20;
try { v20 = v11.getOwnPropertySymbols(v13, 6797); } catch (e) {}
const o21 = {
    __proto__: v13,
    ...v16,
    ...v13,
    "f": v14,
};
let v22;
try { v22 = v20(v10, 6797, v9, v16); } catch (e) {}
try { new v20(v22, v16, v22); } catch (e) {}
