function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.b = 536870889;
    this.d = 536870889;
}
const v3 = new F0();
let v4 = new F0();
const v5 = new F0();
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a9;
    this.e = v4;
}
const v10 = new F6(v4, v4);
const v11 = new F6(v5, v4);
const v12 = new F6(v4, v5);
function F13(a15, a16, a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a15;
}
let v19 = new F13(F13, v3, v4, v12);
new F13(v19, v5, v5, v11);
const v21 = new F13(F6, v3, v4, v10);
Object.defineProperty(v21, "a", { writable: true, value: v4 });
v3 in v3;
[v19,F6,v4] = v3;
try {
    const o23 = {
    };
    v21.getFloat64(o23, o23);
} catch(e25) {
}
new BigInt64Array(2697);
new Uint8Array(2);
new Int32Array(1024);
