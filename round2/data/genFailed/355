function f0() {
}
let v1 = 1941345817;
class C4 extends f0 {
    [5] = v1;
    static #f = -1893936689;
    static [v1];
    [-1893936689];
    constructor(a6, a7) {
        super();
        v1 >>> -1893936689;
    }
    121 = f0;
    3486;
    static a = -1893936689;
    static 252;
}
const v9 = new C4(-1893936689, -1893936689);
let v10 = new C4(5, 5);
const v11 = new C4(-1893936689, -1893936689);
let v12 = [f0,v11,5,v11];
let v13 = [v9,f0,v12];
const v14 = [f0,5,v13,v10,v1];
class C15 extends C4 {
    constructor(a17, a18, a19) {
        super(a17, 5);
        let v21;
        try { v21 = this["m"](a17, a17, a18, v1); } catch (e) {}
        v21.e &&= v21;
        [,v10] = v12;
        ({"e":v1,"length":v13,} = v12);
    }
    [v11];
    #b;
    9 = v11;
    #c = -1893936689;
}
const v22 = new C15(5, v14, 5);
const v23 = new C15(5, C15, -1893936689);
const v24 = new C15(v1, v23, 5);
const v25 = C4.a;
%VerifyType(v22);
v14[5] = -5.0;
v12 = v22;
Object.defineProperty(v1, v22, { enumerable: true, set: f0 });
function F29(a31, a32, a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a32;
    this.f = a31;
    this.g = a31;
}
new F29(v22, v24, v10, v14);
const v36 = new F29(v11, v10, 0.8836175192881647, 927299.7751557115);
new F29(C15, v36, -5.0, v25);
function f0() {
    const o7 = {
        [-266.29902417842754]: -266.29902417842754,
        "f": 1545302192,
        __proto__: "symbol",
        "e": 1545302192,
        "d": "symbol",
        set c(a5) {
        },
        ..."symbol",
        "h": "symbol",
        ["symbol"]: "symbol",
        "c": "symbol",
        "a": "symbol",
        54131464: 1545302192,
        ..."symbol",
    };
    return o7;
}
const v8 = f0();
const v9 = f0();
const v10 = f0();
const v11 = [2.0,-1.7976931348623157e+308,-742.1888619190382,-1000000000.0];
const v12 = [305.5824467526736,3.440132869550961,-4.159718024103961e+306,0.10774035818132821,0.8943781623520528,-3.0];
const v13 = [1000000.0,0.04405093598978571,3.0,-1000000000000.0,-3.132567386120339];
class C14 extends f0 {
    constructor(a16, a17, a18, a19) {
        super();
        v12 & v9;
        a16 - a18;
        [] = a18;
    }
    [v12];
    static get d() {
        try {
            f0();
        } catch(e25) {
        }
        return f0;
    }
}
const v26 = new C14(v12, v8, v13, v9);
new C14(f0, v26, v13, v10);
new C14(v10, v9, v13, v10);
class C32 extends C14 {
    set c(a34) {
        class C35 extends C14 {
            static [this] = C14;
        }
        new C35();
        new C35();
        const v38 = new C35();
        try { v38.m(v38, v26); } catch (e) {}
        delete a34?.f;
    }
    static {
        v8[55] >>= -3.7731587524325594;
        this.e;
        Object.defineProperty(v12, 512, { get: f0, set: f0 });
        C14 in v10;
    }
}
new C32();
new C32();
new C32();
try {
    f0();
} catch(e48) {
}
for (const v49 of v11) {
    const v50 = [536870912,7,-1083552307,1663239218,-45387,8];
    [536870888,20421,15,15];
    f0[3] = [16,54376,128,1477748949,-285201756,4096,536870887];
    try { v50.reduceRight(f0, v13); } catch (e) {}
}
