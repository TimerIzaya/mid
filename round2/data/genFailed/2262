let v0 = [0.0,-0.0,-820.5516699972964,-1000000.0,1000.0,-4.0,0.284446857776689,0.0,4.0,1000000000.0];
let v1 = [0.0016872705187216397];
const v2 = [-984.5972451721893,2.0,-1.265510187714391e+308,-2.220446049250313e-16,1.208485713306538e+308];
function f3(a4) {
    const o9 = {
        "d": v2,
        ...a4,
        valueOf(a6) {
            v0 = a4;
            v1 &= a6;
            const v7 = this >> a6;
            try { new v7(); } catch (e) {}
            return a4;
        },
        "c": a4,
        ...v0,
        0: v0,
    };
    return o9;
}
f3(v0);
f3(v1);
f3(v1);
[-279.67348659606466,1000000000000.0,5.050379634902832,3.2667464409428923,NaN,963706.8574070069];
[849.4213402252681,4.095523932238175e+307,-925.3360090125773,619197.0401419662,0.049632084730473536,-1.7976931348623157e+308,-1000000.0,-0.0,7.22914115294612];
[-0.5927218045318554,-433.20292622387785];
const o21 = {
    "maxByteLength": 1280,
};
const v23 = new ArrayBuffer(5, o21);
new Int16Array(v23);
new BigInt64Array(257);
new Uint16Array(4096);
new Uint8ClampedArray(2343);
