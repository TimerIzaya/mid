const v0 = [];
const v1 = [-65536];
const v2 = [-5817,64256,-881354966,-9223372036854775807,9,-34136,9223372036854775807,1073741825,-255716311];
const v3 = [-14,255,2135237023,1318695173,127];
const v4 = [3.182903143594479e+307,163684.67946623755,-3.0,-576.5170797511265];
const v5 = [3.0,0.0,652227.2720891491,0.9046820034438928];
const v6 = [-1.2851953267381402e+308,-0.6261643121263631,-1000000000000.0,5.310618241014868,261567.16220221622,-1000000000000.0,-6.312507415717801,0.7141217857094744,0.05587783365101906];
class C10 {
    [2n] = v2;
    static #a = v5;
    static #valueOf(a12, a13) {
        const v15 = +v0;
        try { new a12(v6, v15, a13, v1, v2); } catch (e) {}
        super.e;
        return a12;
    }
    static #f = v4;
    static [2n] = v5;
}
new C10();
new C10();
new C10();
2n >>> -325435037n;
v5.length = v0;
for (const v22 of v4) {
    v0[3701];
}
try {
    v3.flat();
} catch(e25) {
}
const v0 = [];
function f1() {
    const o5 = {
        "e": v0,
        m() {
            new Map();
            return Map;
        },
        __proto__: v0,
        "d": v0,
        ...v0,
        ...v0,
        "h": v0,
        [v0]: v0,
        "b": v0,
    };
    return o5;
}
f1();
const v7 = f1();
const v8 = f1();
try {
    new Uint16Array(512);
} catch(e12) {
}
try {
    new Int16Array(129);
} catch(e16) {
}
try {
    new Uint32Array(7);
} catch(e20) {
}
class C21 extends Uint16Array {
    10 = 129;
    [-1] = Uint32Array;
    static [Int16Array] = v7;
    static toString(a23, a24, a25) {
        const v26 = /[U[\d-z]]/idy;
        /Va[a-z]+/sidu;
        /j(?:a?)*/gmuy;
        return v26;
    }
    e = Uint16Array;
}
new C21();
new C21();
new C21();
const o35 = {
};
new Proxy(C21, o35);
v0[9] = v8;
