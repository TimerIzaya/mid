new Float32Array(128);
new BigUint64Array(256);
const v8 = new BigUint64Array(10);
class C9 extends BigUint64Array {
    get a() {
        v8.__proto__ = this;
        super.every(this);
        const o15 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o15);
        return 10;
    }
    1;
}
new C9();
new C9();
new C9();
try {
    new BigUint64Array(40864, 3, 4294967297);
} catch(e27) {
}
new C9();
[-911629.9023492844,8.940468104916604,-4.0,0.3235836065256421,797945.708873217,1e-15,0.05446664784688526,-6.3797972381374795];
[5.710541794311572,193.5178034117232,0.23144050042123798,885.155397575631,410582.6283749151,-891655.2791280352,882.403470615656,0.0,-1.7753647476178713,-1.4488329896238909e+308];
[-Infinity,-1.1429093852758183e+308,278230.5872133088,-2.0,963.1152513036279,-4.1048535080701544e+306,-0.0,0.0,2.220446049250313e-16,1000.0];
function f3(a4) {
    const o10 = {
        __proto__: a4,
        1: 9007199254740992,
        ...a4,
        get g() {
            if (60523 <= this) {
                a4[Symbol.species];
            } else {
                var c = 9007199254740992;
            }
            return this;
        },
    };
    return o10;
}
const v11 = f3(f3);
const v12 = f3(-4);
const v13 = f3(60523);
const v14 = [v12,v11];
[v14,-4,f3,v14,f3];
[v13,[-4,f3,[-4]],v11,v11,v12];
[v14,v11,60523];
const v23 = +-50321;
const v24 = ~v23;
const v25 = v23 * -50321;
c * (v24 ^ -50321);
v23 - v25;
Math.log2(v25);
