const v2 = -Infinity;
class C3 {
    2147483647 = v2;
    constructor(a5) {
        for (let v7 = 0; v7 < 99; v7++) {
            a5 in a5;
        }
        try { new a5(v2, 0.0); } catch (e) {}
        a5?.[2];
    }
    static [-2147483647];
    536870887 = -2147483647;
    static #e;
    static #b = v2;
}
const v11 = new C3(C3);
new C3(C3);
const v13 = new C3(v11);
const v15 = new Map();
/V1Sabc+/gsdv;
/[xyz{0,1}^xxx$*]/myu;
const v18 = /(?:a*)+/v;
const v19 = [-44354,268435441,-10,-4294967295,-9223372036854775807,4,6,-353301967,-2147483647,9223372036854775807];
const v20 = [62361];
[220961409,-4294967296,-58112,-9223372036854775808,512,4,4294967296];
class C22 extends Map {
    d;
    static [C3] = v18;
}
new C22();
new C22();
const v25 = new C22();
new C3(...v19, C3, ...v25, v13, ...v15, 0.0);
const v27 = v20;
const o28 = {
};
new Proxy(v27, o28);
const v0 = [8.778644604396444];
const v1 = [Infinity,-1.0676466673603961e+308,0.28219467548367183,-5.0,-1000000.0,1000000000000.0,-1000.0,-4.0];
const v2 = [-42640.747816742514];
function f3() {
    return v0;
}
class C5 extends f3 {
    static m(a7, a8) {
        const v9 = v2.__proto__;
        return;
        try { v1.forEach(f3, a7); } catch (e) {}
        try {
            super[f3] = v9;
        } catch(e11) {
        }
        return f3;
    }
    7;
}
const v12 = new C5();
new C5();
new C5();
new Map();
try {
    v1.length = Map;
} catch(e17) {
}
with (C5) {
    e = v12;
    new Map(f3());
}
try {
    new Uint8Array(2906);
} catch(e23) {
}
try {
    new Uint32Array(2496);
} catch(e27) {
}
try {
    new Float32Array(1727);
} catch(e31) {
}
