const v6 = [1n,1519652629n,-12n,268435441n];
const v7 = [v6,-4294967296n,3n,v6];
const v8 = [268435441n,3n];
class C9 {
    get a() {
        class C11 {
            #h;
            static #d = -4294967296n;
            static #b;
        }
        new C11();
        new C11();
        new C11();
        return v6;
    }
    static #d;
    #e = -12n;
    h;
}
const v15 = new C9();
new C9();
const v17 = new C9();
v15.__proto__ = v15;
v8.valueOf = v7;
function f19() {
    return 268435441n;
}
let v21;
try { v21 = v17.all(3n, this); } catch (e) {}
new C9();
v21 && -12n;
let v28 = 7 << 7;
const v29 = ~this;
v28++;
let v31 = 26888 || this;
--v31;
Math.clz32(v29);
try {
    new Uint32Array(255);
} catch(e9) {
}
try {
    new BigUint64Array(82);
} catch(e13) {
}
try {
    new Uint8Array(257);
} catch(e17) {
}
let v21 = 10;
for (; v21--;) {
    -2147483647n >>> (255).f;
}
(1496983993n)[-2147483647n];
