const v0 = /(o\P{sc=Greek})/gyu;
const v1 = /(?:ab)?C(x)(x)(x)\1*/ysu;
const v2 = /(?:ab)?/ms;
function f9(a10, a11) {
    const o21 = {
        3578018568: a10,
        get h() {
            function F13(a15, a16, a17) {
                if (!new.target) { throw 'must be called with new'; }
                this.g = this;
            }
            new F13(v0, -9007199254740991n, this);
            new F13(v0, a11, a11);
            new F13(v1, 10n, a10);
            return F13;
        },
        [-2]: a11,
        "f": "-1073741824",
    };
    return o21;
}
const v22 = f9("d", 1657839427n);
const v23 = f9("d", "d");
const v24 = f9("-1073741824", v23);
const v25 = v2 * 1657839427n;
f9("sticky", -9007199254740991n);
function f27() {
    function F29(a31, a32, a33) {
        if (!new.target) { throw 'must be called with new'; }
        this.c = a33;
        this.h = arguments;
        this.a = arguments;
    }
    new F29(v23, "d", 1657839427n);
    new F29(v22, "-1073741824", 1657839427n);
    new F29(v24, "-1073741824", v25);
    return arguments;
}
f27(v23, v1, f27, "d", -9007199254740991n);
let v15;
try { v15 = (1073741824n).o(-10n, -33400n, 6295, -4.0, 15n); } catch (e) {}
with (v15) {
    try {
        a[1024] = -12;
    } catch(e17) {
    }
}
try { v15.assign(4.459507785672689e+306, -10n, 2.0, -99, -99); } catch (e) {}
