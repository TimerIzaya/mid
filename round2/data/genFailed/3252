const v0 = [];
class C1 {
    static get d() {
        try {
        const t0 = 4096;
        t0(4096);
        } catch (e) {}
        const v8 = new WeakMap();
        try { v8.set(v0, -1338211538); } catch (e) {}
        return -1338211538;
    }
    static #d = v0;
    b;
    5;
    [v0] = v0;
    static #c;
}
const v10 = new C1();
new C1();
const v12 = new C1();
/sG/m;
const v14 = /Z[\118]Oc/gmyi;
const v15 = /[(?!(a))\1+]/gmysv;
function F16(a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = a18;
    this.e = a18;
    this.a = v10;
}
new F16(C1, v14);
const v21 = new F16(F16, v15);
const v22 = new F16(v21, v15);
function f23() {
    return v14;
}
const v24 = [-70.91805157242015];
[1e-15,-3.0,-8.857501559910072e+307,1.102445442871564e+308];
[-7.5952576042557585,-2.077170822432654,1.1732883603687327e+308,864.2773700911043,1.0,1.3436667961403933e+308];
function f27(a28, a29, a30) {
    let v31;
    try { v31 = a29.n(v12, a29, f23, v12); } catch (e) {}
    return v31;
}
var d = f27(v22, v12, v24);
let v34 = 40785;
let v35 = -1;
const v36 = ++v34;
Math.pow(f27, f27);
f27 ** v36;
v35++;
