[];
let v3 = new BigInt64Array(14);
let v4 = 6;
let v5 = Float32Array;
const v6 = new v5(v4);
const v9 = new Float64Array(928);
function F10(a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = a13;
    this.h = v9;
    this.g = v6;
}
const v15 = new F10(14, 14, 928);
const v16 = new F10(14, v4, 928);
new F10(928, 928, v4);
v3 >>= v3;
const v20 = Reflect.construct(Float64Array, [v16,14], Float64Array);
let v21;
try { v21 = Reflect.getOwnPropertyDescriptor(v20, v20); } catch (e) {}
v21.__proto__ = v6;
[8.516992755168278,988028.7815727061,-4.569437521584778,0.8876352816769995,5.0,-1.5428322030773156];
[1.7976931348623157e+308,1000000000.0,-2.2250738585072014e-308,-2.2250738585072014e-308,1000000000.0,1.55809455843998e+307,0.8716608313914855,-2.2250738585072014e-308,-4.0,4.0];
[0.3219528236828699,-346277.73218018794,-1000.0,-2.2250738585072014e-308,0.2878039720620198,-873.1188982061606,1000000.0,0.39726527889004937,-1000000.0,2.220446049250313e-16];
({"h":v4,...v5} = v15);
