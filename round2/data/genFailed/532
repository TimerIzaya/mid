class C3 {
    #a;
    constructor(a5, a6) {
        a6.b = a6;
    }
    static m(a8) {
        return 8;
    }
}
const v13 = new C3(-6.508345449527782e+307, -101164.62200560351);
const v14 = new C3(v13, v13);
const v15 = new C3(v14, v14);
v15.b = 0.3827034824180391;
[-75277821,-6.508345449527782e+307];
[-6.508345449527782e+307,C3,-101164.62200560351,-101164.62200560351];
[0.23964807523775433];
const o24 = {
    "maxByteLength": 256,
};
const v26 = new SharedArrayBuffer(256, o24);
new Float64Array(v26);
class C3 {
    get h() {
        return delete this[5];
    }
    static #g = -2147483647;
    toString(a7, a8) {
        a8 >> this;
        try {
            new Float64Array(1448);
        } catch(e13) {
        }
        try {
            new Uint8Array(256);
        } catch(e17) {
        }
        try {
            new Int32Array(1024);
        } catch(e21) {
        }
        return this;
    }
}
const v22 = new C3();
const v23 = new C3();
new C3();
[4.0,-3.0,1.6535328691896767e+308,936631.2429983285];
const v26 = [-98272.65204309032,-2.2250738585072014e-308,0.5593487174277836,3.9574783559860916e+307,-1.287228421430672e+308];
const v27 = [-3.0];
let v28 = /sJX/gmyv;
/[](?:a+)*/sgyv;
if (/6ab|c/si == v27) {
    v23[8] = -2147483647;
    try {
        v23[v26] = v26;
    } catch(e32) {
    }
} else {
    let v34 = 1087929733;
    const v35 = 249436006 * v34;
    let v36 = ++v28;
    v34 << 249436006;
    249436006 ** v22;
    v34++;
    ++v36 << v35;
}
