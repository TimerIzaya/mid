function f3(a4) {
    const o8 = {
        "c": "GV",
        7: "GV",
        toString(a6) {
            a6 = "-10";
            function f7() {
                return a6;
            }
            return "-10";
        },
        "g": a4,
        ["-10"]: a4,
    };
    return o8;
}
f3("EPSILON");
f3("GV");
f3("EPSILON");
new Int16Array(512);
new Uint8ClampedArray(4029);
const v20 = new BigUint64Array(256);
Object.defineProperty(v20, "f", { writable: true, configurable: true, get: f3, set: f3 });
let v21 = 0;
while (v21 < 2) {
    const o27 = {
        "execution": "sync",
        "type": "major",
    };
    gc(o27);
    v21++;
}
const v1 = new WeakMap();
class C2 {
    #a;
    static [WeakMap] = v1;
    m(a4, a5) {
        a4 != this;
        let v7;
        try { v7 = a4.from(); } catch (e) {}
        new WeakMap();
        try { a5.o(v7, WeakMap, v1, a5); } catch (e) {}
        return this;
    }
    8;
    h;
    static f = WeakMap;
}
new C2();
new C2();
const v14 = new C2();
try {
    new Uint32Array(498);
} catch(e18) {
}
try {
    new Uint32Array(1024);
} catch(e22) {
}
try {
    new Uint8ClampedArray(11);
} catch(e26) {
}
let v30 = -23918n;
try {
    v14.__proto__ = C2;
} catch(e33) {
}
let v35 = -810321804;
Math.atan(v35);
const v38 = ++v30;
-2.067647180414771 + v30;
Math.acos(-2.067647180414771);
v35 | v38;
v35++;
