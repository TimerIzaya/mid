function f0() {
}
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    this.e = f0;
    this.f = f0;
    this.g = f0;
}
new F1();
const v4 = new F1();
const v5 = new F1();
const v6 = [9,64977,512,10,1073741824,-13];
const v7 = [-4,4096,-1024,-1024,15,-6286];
const v8 = [-3,6,1944339184];
function f9(a10, a11, a12, a13) {
    const o24 = {
        set c(a15) {
            +v4;
            v8.length;
            [-764.6383144689992,355485.5870997128,-2.2250738585072014e-308];
            [1.5017214828636982e+308];
            [1.0,1.3437690682530952e+308,-2.2250738585072014e-308];
        },
        "d": v7,
    };
    return o24;
}
f9(v8, v4, v6, v8);
f9(v7, v5, v6, v8);
f9(v6, v5, v8, v7);
let v28 = "boolean";
Object.defineProperty(v4, v5, { writable: true, enumerable: true, get: f9, set: f0 });
f9 instanceof f0;
v28[v8];
++v28;
const v37 = 10000 % v28;
Math.sin("ta");
+10000;
Math.sinh(v37);
10000 / 10000;
