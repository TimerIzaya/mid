new Uint16Array(2443);
new BigUint64Array(3);
const v8 = new BigInt64Array(0);
512 >> 2443;
var g = 2443;
class C14 extends BigUint64Array {
    g;
    a;
    1707160742;
    static #f = v8;
}
new C14();
new C14();
new C14();
try {
    new Uint32Array(1000);
} catch(e3) {
}
try {
    new Uint16Array(1075);
} catch(e7) {
}
try {
    new BigInt64Array(257);
} catch(e11) {
}
function f12(a13, a14) {
    const o19 = {
        "c": a13,
        15: 1000,
        [a14](a16, a17) {
            super.g;
            return 1075;
            return this;
        },
        __proto__: a14,
        3: Uint16Array,
        [BigInt64Array]: Uint32Array,
        1: 1075,
        [-2]: a13,
    };
    return o19;
}
f12(1075, 257);
const v21 = f12(257, Uint16Array);
let v22 = f12(257, Uint32Array);
class C23 extends Uint16Array {
    static set f(a25) {
        super.byteOffset;
        %VerifyType(v21);
    }
    static 4184772989;
    #a;
    get f() {
        try {
            v21.c = Uint16Array;
        } catch(e28) {
        }
        return this;
    }
}
new C23();
const v30 = new C23();
new C23();
typeof v21 === "object";
new BigInt64Array(v21, 1000, delete v30?.length);
try {
    v22 >>= v21;
} catch(e38) {
}
