let v0 = "n";
class C3 {
    m(a5, a6) {
        const o9 = {
            "maxByteLength": 268435441,
        };
        const v11 = new SharedArrayBuffer(133, o9);
        new Float32Array(v11);
        return -4.0;
    }
    static #d;
    [v0] = 4.0;
}
const v14 = new C3();
const v15 = new C3();
const v16 = new C3();
new Int32Array(64);
new Float32Array(129);
const v25 = new Float64Array(64);
const v29 = new Float64Array(v25, 64, 64);
try {
const t0 = 64;
t0(v0, v16, Float32Array, 64);
} catch (e) {}
const v32 = v16["m"](33685, v29, 129);
const v33 = v0--;
v29.f = 4.0;
function F34(a36, a37, a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = v16;
    this.e = a38;
    this.c = v14;
}
const v40 = new F34(v15, v14, 33685, 65536);
const v41 = new F34(v14, v40, 65536, -2147483648);
new F34(v41, v14, v33, v32);
