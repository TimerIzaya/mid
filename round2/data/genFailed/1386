const v2 = new Float64Array(129);
const v5 = new Int16Array(4);
const v8 = new BigUint64Array(2);
class C9 {
    static valueOf(a11, a12, a13, a14) {
        let v10 = this;
        const v15 = super[129];
        v10 %= v10;
        v5[3] = a12;
        try { v8.find(v15, v15); } catch (e) {}
        return "-12";
    }
    2 = v8;
    static 16 = v2;
    [-2] = v8;
    static f;
    [v2] = Int16Array;
}
new C9();
new C9();
new C9();
const v25 = new Int16Array(7);
new Int8Array(4035);
new Uint8ClampedArray(5);
const o32 = {
    __proto__: v8,
    "c": 129,
    8: v5,
    "f": v25,
};
v8[3] = v5;
const v36 = +23847;
const v37 = -2;
Math.floor(v8);
Math.fround(v8);
Math.acos(v37);
(v36 << v37) >> v8;
