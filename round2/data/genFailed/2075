let v1 = -16;
class C3 {
    #valueOf(a5, a6) {
        [-6];
        [1484783824];
        [4,9,536870887,257,-4294967297,1073741824,9007199254740992,256,-1,65536];
        v1 ** this;
        return 0.10301290153366338;
    }
    static get c() {
        const v12 = this / "e";
        const t11 = "e";
        t11[v12] **= v12;
        v1 = v12;
        0.10301290153366338 - super[v12];
        return this;
    }
}
const v15 = new C3();
const v16 = new C3();
const v17 = new C3();
const v21 = [-858.5639798786931,1000000000000.0,2.0,-455945.1663910621,1.7976931348623157e+308,-772405.0776709293,-17412.607102317736,0.2683722643275963,3.9191605632210087e+307,-145311.2531143675];
const v22 = [-8.792874553169005,-1.0,0.7465503097918723,Infinity,0.8127002651702656,-1.7976931348623157e+308,-206.08787102049632,2.220446049250313e-16];
const v23 = [4.0,-5.0,-1000000000000.0,194323.0211199969,2.220446049250313e-16];
function F24(a26, a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = a28;
    this.a = a28;
    this.f = -1024n;
}
new F24(v22, v23, v21, 65465n);
new F24(v23, v21, v22, 3n);
new F24(v17, v16, v15, -1024n);
if (v15) {
    const v33 = v16[10];
    v33.g = v33;
} else {
    C3[5] = v21;
}
v21[-2] -= v1;
let v34;
try { v34 = v23.with(v1, v17); } catch (e) {}
const o35 = {
};
o35.f = -1024n;
const o36 = {
};
o36.f = -1024n;
o36.e = v34;
const o37 = {
};
o37.f = -1024n;
o37.e = v34;
o37.d = C3;
const o38 = {
};
o38.f = -1024n;
o38.e = v34;
o38.d = 65465n;
