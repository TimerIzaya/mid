const v1 = [-2.220446049250313e-16,-1.7976931348623157e+308,-594.5020590620187,-262376.8126191894,-1.7976931348623157e+308,2.220446049250313e-16,246.3080424920422,-18.561079657529035];
[-2.0,-1.3902619205263286e+308];
const v3 = [-2.1478827790505335];
const v5 = new Map();
const v9 = [268435439n,268435439n,268435441n,v5];
const v10 = [-4096n,-4096n,v9,268435439n,v3];
const v11 = [v5,null,v10,v3,v1];
class C12 extends Map {
    static #p(a14, a15, a16, a17) {
        super[v3] = a15;
        this[0] = a14;
        return this;
    }
    toString(a19, a20) {
        typeof a19 === "function";
        return v11;
    }
    [v10];
    static 10000 = v9;
    536870912;
}
let v24 = new C12();
new C12();
new C12();
const v27 = v24++;
let v28;
try { v28 = v1(v3, v27); } catch (e) {}
function f29(a30, a31, a32) {
    const o33 = {
        1: 268435439n,
        "g": v1,
    };
    return o33;
}
f29(268435439n, 268435441n, v11);
f29(268435441n, 268435441n, f29(v28, 268435441n, v3));
try {
    new Int32Array(48);
} catch(e3) {
}
try {
    new Uint32Array(6);
} catch(e7) {
}
try {
    new Int8Array(3);
} catch(e11) {
}
function f12(a13, a14, a15, a16) {
    const o24 = {
        "c": 48,
        ...a14,
        6: Int8Array,
        ...a14,
        o(a18, a19) {
            try {
                a18[5] = a13;
            } catch(e20) {
            }
            new Array(15);
            return Int32Array;
        },
    };
    return o24;
}
const v25 = f12(Int8Array, 3, 48, 48);
f12(6, 6, 6, 48);
const v27 = f12(v25, 48, 3, 3);
try {
    new Float32Array(128);
} catch(e31) {
}
try {
    new Uint8Array(10);
} catch(e35) {
}
try {
    new Int8Array(6);
} catch(e39) {
}
/m\x60/sgmu;
const v41 = /4/smy;
/xyz{93}*/siguy;
v25.c;
v25[4] != v41;
v27[Uint8Array];
try {
    new Uint32Array(11);
} catch(e50) {
}
try {
    new Float32Array(3967);
} catch(e54) {
}
try {
    new Int32Array(512);
} catch(e58) {
}
