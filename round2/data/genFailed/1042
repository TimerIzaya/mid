const v2 = new Int16Array(245);
const v5 = new Int32Array(118);
const v8 = new Uint8Array(3);
v2.h = Int16Array;
v8[v8] = v5;
/(?<!a)+/gmyidv;
/1d0(?:ab)+/myiu;
/pa\Bb*/gmyisu;
let v15 = 0;
while (v15 < 10) {
    new Int16Array(118, 118, v15);
    v15++;
}
class C3 {
    static get c() {
        const v5 = [this,this,this,this,20477n];
        [this,v5,v5];
        [-3n,v5,20477n];
        return 20477n;
    }
    static 127;
    constructor(a9) {
        try {
            this[7n] = 20477n;
        } catch(e10) {
        }
    }
}
const v11 = new C3(20477n);
const v12 = new C3(-3n);
const v13 = new C3(7n);
let v14 = "2";
class C17 {
    constructor(a19, a20, a21, a22) {
        function f23() {
            return a22;
        }
        [-3n,20477n,f23,...a20];
    }
    static [v14];
    6;
    [-3n] = v12;
    #f = "xrz4W";
}
new C17("object", v13, v14, v11);
const v29 = new C17("xrz4W", v14, v12, "object");
const v30 = new C17(v14, v29, v29, "xrz4W");
({"g":C17,} = v30);
v12[Symbol.hasInstance];
try {
    v14 = "object";
} catch(e34) {
}
try {
    new C3(20477n);
} catch(e36) {
}
