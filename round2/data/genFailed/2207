class C3 {
    #a;
    toString(a5) {
        [3.0,-9.338370021340719,1000.0];
        const v7 = [2.2250738585072014e-308,-2.2250738585072014e-308,4.991796592355341e+307,-3.0,864.9738597751868,5.0,5.937592006486639e+307,4.0];
        const v8 = [-2.2250738585072014e-308,1.7976931348623157e+308,-1e-15,-723899.5875415828,1e-15,115.28391744507576,43144.51656987914];
        try {
            v8.#a = a5;
        } catch(e9) {
        }
        return v7;
    }
    static #c;
    h;
}
new C3();
const v11 = new C3();
const v12 = new C3();
class C13 extends C3 {
    6 = v12;
    static {
        this[v11] = this;
        const v15 = new C3();
        ("m")[true];
        v12 - v15;
        super.b = this;
    }
    [-2.9046283345651087] = "m";
    static g;
    3;
    d = "m";
}
const v19 = new C13();
const v20 = new C13();
const v21 = new C13();
const v22 = [-3,64830,-11300,-13,-4294967295,5,255];
[1073741823,-536870912,-38043,59453,127,-2020931568,1692383012,-1309903659];
[749307474,10000,60792,2];
let v25;
try { v25 = v12(C13, v20, "m", v19); } catch (e) {}
const v27 = ["m",v25];
Reflect.apply(("HV").split, v25, v27);
let v30 = 0;
while (v30 < 4) {
    try { v21.toString(v21, v22); } catch (e) {}
    try {
        v12.toString(false, -12n);
    } catch(e37) {
    }
    v30++;
}
