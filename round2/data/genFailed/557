class C6 {
    #toString(a8, a9, a10, a11) {
        return 30581;
    }
    constructor(a16, a17, a18, a19) {
        const v20 = this[3202];
        this[536870888] = this;
        this.b = v20;
    }
}
new C6(30581, 30581, 113614.17962303245, 536870912);
new C6(30581, 30581, 493.5748804660252, 536870912);
new C6(30581, 255, 113614.17962303245, 30581);
const v24 = /Kfoo(?!bar)baz/idv;
/xyz{0,1}*/gmyiu;
/[xyz]/gmydu;
v24 | true;
for (let v29 = 0; v29 < 32; v29++) {
    C6["p" + v29] = v29;
}
!v24;
v24 >> (255 + 255);
Math.imul(false, false);
function f0() {
    let v2 = 2.0;
    let v3 = -846094.5732496928;
    const o8 = {
        p(a5) {
            try {
                v2 >>>= 190932.17395358556;
            } catch(e6) {
            }
            this[v2] %= 190932.17395358556;
            try {
                v3 = 190932.17395358556;
            } catch(e7) {
            }
            return 190932.17395358556;
        },
        "c": v3,
        9: v3,
        [v3]: v2,
    };
    return o8;
}
f0();
f0();
f0();
const v15 = /a(?!b)/sguy;
const v16 = /O[\cz]*/suy;
/(a?k\xed\xb0\x80)/sdmu;
try {
    new Uint16Array(255);
} catch(e24) {
}
try {
    new Float32Array(104);
} catch(e28) {
}
let v29 = 7;
try {
    new Float64Array(v29);
} catch(e32) {
}
v16 ** v29;
try {
    v16[v15] = Uint16Array;
} catch(e34) {
}
for (const v35 of v29) {
    let v39 = v29--;
    Math.sqrt(10);
    ++v39;
}
