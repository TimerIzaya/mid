const v1 = new WeakSet();
new Date();
const v4 = [-1000000000.0,-9.913620085899306e+307,-Infinity,5.0,-2.0,499074.7845374977,2.0,-1000000000000.0,2.220446049250313e-16];
[5.0,1.7395758472554413e+308,-1000000000.0,0.7404184908964394,0.7860781508876225,0.34446441891836166,-9.346985012861524,-1000000000000.0];
[1.158761354633955e+308,683.6113884424508,2.220446049250313e-16,0.2872938553317548,1000000.0,-2.2250738585072014e-308,-1.1897870979871768e+308,0.4599068417315627,-6.485104713701462];
new Uint32Array(4);
const v12 = new Uint32Array(6);
new Int32Array(129);
new WeakSet(v4);
let v17 = v4.constructor;
class C18 extends v17 {
    e = 4;
}
new C18();
v17 = v1;
let v21 = 9;
Math.exp(v12);
const v23 = -v21;
++v21;
Math.acos(v12);
Math.max(v21);
v23 - v23;
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -256;
    } catch(e3) {
    }
    try {
        this.g = -256;
    } catch(e4) {
    }
    try {
        this.d = -256;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
function f9() {
    return v8;
}
const v13 = [v7,-1.6186627557189914e+308];
const v14 = [v13,-1000000000.0,v6];
const v15 = [209.13710253613385];
({"length":F0,} = v13);
function f16() {
    return v8;
}
const v17 = v13.reduce(-1.6186627557189914e+308, 209.13710253613385, 209.13710253613385, v6, -1.6186627557189914e+308, v7);
v14[4294967296];
try { v17(f16, v13, v15, -1.6186627557189914e+308, 209.13710253613385); } catch (e) {}
[-1.6186627557189914e+308,[v17,209.13710253613385,v6,[v6]],v14,v7];
