function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = 45779;
    this.h = 45779;
}
const v3 = new F0();
const v4 = new F0();
const v5 = new F0();
function f7(a8) {
    const o23 = {
        [F0]: a8,
        __proto__: v3,
        1024: a8,
        "b": a8,
        toString(a10, a11, a12) {
            ({"b":F0,...a10} = this);
            for (let i14 = 0; i14 < 3; i14++) {
                i14[2] = a8;
                const o20 = {
                };
                new Proxy(this, o20);
            }
            return this;
        },
    };
    return o23;
}
const v24 = f7(v4);
const v25 = f7(v5);
const v26 = f7(F0);
const v28 = new Date();
class C29 extends Date {
    e;
    static o(a31, a32, a33, a34) {
        const v36 = [F0 + a31,v26,a34];
        [a34,v36,v26];
        [false,v28];
        return v36;
    }
    static get h() {
        const v40 = Date[v28];
        const v41 = delete v40?.b;
        try { v40(F0, v40, v41); } catch (e) {}
        try {
            new Date(-3);
        } catch(e45) {
        }
        return false;
    }
}
new C29();
const v47 = new C29();
const v48 = new C29();
v24[v25] = v48;
try { v24.toString(v3, false); } catch (e) {}
const o50 = {
    __proto__: v3,
    ...v47,
    "c": false,
    10: false,
};
delete o50?.f;
for (let v52 = 0; v52 < 32; v52++) {
    o50["p" + v52] = v52;
}
const v0 = [4294967295,-408540075,-51958,-2147483647,2,10];
const v1 = [6,51310,-753789369,-6551];
const v2 = [257,-1268260447,17544,-268435456,65536,825086269,1073741823,-1073741824];
function f12(a13, a14, a15, a16) {
    const o22 = {
        [v0]: v2,
        get f() {
            switch (this) {
                default:
                    const o18 = {
                    };
                    try {
                        new Proxy(v0, o18);
                    } catch(e21) {
                    }
                    break;
            }
            return a13;
        },
    };
    return o22;
}
const v23 = f12(-2n, -2n, v2, 779567154);
f12(-2147483648n, -2147483648n, v0, v2);
const v25 = f12(-2n, 255n, v1, 44396);
f12(-2147483648n, -2147483648n, v1, v25);
const v27 = v25.f;
-943151859 + -1.3062687226026927e+308;
Math.acos(v27);
Math.log1p(-1.3062687226026927e+308);
v27 & -1.3062687226026927e+308;
delete v23[9];
