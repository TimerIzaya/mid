const v0 = [-959651278,-4,2147483647];
const v1 = [729657066,0,16,1073741823,16,2147483648,-4294967296,37311];
const v2 = [-8,-789660140,1073741824,-11];
let v3 = [9223372036854775807,-65536,3,-2];
const v4 = [127,313381599,512,-2028306292,536870912,-17308,20435];
const v5 = [-536870912,-9223372036854775808,257,10049,1633065570,4294967296,-646,-10];
const v6 = [1945807019,-1361731020,-9007199254740991,268435441,-14,-1,65537,-9223372036854775808];
const v7 = [1073741824,-1024,-1,-16,128,-9,-31352,-436141295];
[-4294967295,4,372415545];
function F9(a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a11;
    this.c = v5;
}
const v14 = new F9(v5, v3, v5);
new F9(v14, v6, v0);
new F9(v4, v1, v1);
v3 = v5;
v0.length = v1;
if ((v3 >> v0) == v7) {
    %VerifyType(v2);
} else {
    const o22 = {
        "execution": "sync",
        "type": "minor",
    };
    gc(o22);
}
let v1 = "ENQtS";
function f3() {
    return "boolean";
}
function f4(a5) {
    const o13 = {
        "c": v1,
        set e(a7) {
            try {
                v1 = "bigint";
            } catch(e8) {
            }
            [-1000000.0,0.384443183374219,-530.372235164034,-605824.773044853,0.0,230.59514804175546,-3.0,-5.0];
            [0.7392755024944301,-1.7976931348623157e+308,5.0,-8.77592800921024,-7.373897089053781,383.1350954023012];
            [1.2799325741721538e+308,-147.39263620628674,-4.0,NaN,-2.220446049250313e-16,403375.3353344905,569.817211413633,-1.162179643320256e+308];
        },
        "g": a5,
    };
    return o13;
}
f4("bigint");
const v15 = f4("bigint");
f4(v15);
[-1000000.0,4.6002343984983786e+306,-0.0,897222.1670812776,-1000.0,8.10836186272979];
const v21 = [-Infinity,3.0];
[-Infinity,437118.5366218765,-1.0,1000.0];
throw v1;
const v24 = "function" & "bigint";
let v25;
try { v25 = v15.trimLeft(v21, f4); } catch (e) {}
try {
    v25.a = v21;
} catch(e26) {
}
Object.defineProperty("function", "h", { get: f4, set: f3 });
v24 != "boolean";
