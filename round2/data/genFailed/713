function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a9;
}
const v10 = new F6(F6, 1.5506976270697663);
let v11 = new F6(F6, -59451.362029881566);
const v12 = new F6(v11, 1.5506976270697663);
class C13 extends F6 {
    #valueOf(a15, a16, a17) {
        a16 & a16;
        ~-380107.4330489364 + F6;
        Math.tan(F6);
        a16 * 1024;
        Math.cos(1024);
        return a15;
    }
}
new C13();
const v29 = new C13();
const v30 = new C13();
const v31 = v30 in v11;
16n % C13;
try { v10.setPrototypeOf(v31); } catch (e) {}
[129,1073741823,4096];
[-34763336,-1,-15,9,-124289454,268435439,2147483649,14895,-1374823625,5];
([-9223372036854775807,-15,0,-128,-1024,536870912,124779048]).__proto__;
new C13();
v11 = v12;
v29[v29] = 1.5506976270697663;
try {
    new Uint16Array(151);
} catch(e3) {
}
try {
    new BigUint64Array(5);
} catch(e7) {
}
try {
    new BigUint64Array(2551);
} catch(e11) {
}
new WeakSet();
let v20;
try { v20 = ("function").charAt(151); } catch (e) {}
try { v20(); } catch (e) {}
class C22 extends BigUint64Array {
    #c;
    7 = BigUint64Array;
    static 2694;
    h;
}
new C22();
new C22();
new C22();
