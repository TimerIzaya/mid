function f0() {
    const o11 = {
        __proto__: -43061,
        ...262.2615956586101,
        "b": -43061,
        set c(a5) {
            let v6;
            try { v6 = new a5(a5); } catch (e) {}
            try { new v6(262.2615956586101, v6); } catch (e) {}
        },
        [-0.4547997364722143]: 262.2615956586101,
        ...-43061,
        "h": -0.4547997364722143,
        "f": -0.4547997364722143,
    };
    return o11;
}
const v12 = f0();
const v13 = f0();
const v14 = f0();
function F15(a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = v13;
}
const v19 = new F15(v14, v12);
const v20 = new F15(v14, v12);
const v21 = new F15(v13, F15);
function f22(a23, a24, a25, a26) {
    const o42 = {
        set h(a28) {
            let {"a":v29,"d":v30,"e":v31,...v32} = this;
            let v34 = -6;
            const v36 = v34 + v34;
            51550 / 51550;
            const v38 = ~v19;
            51550 / v36;
            v36 % v38;
            v34++;
        },
        [f0]: v14,
        10: f0,
    };
    return o42;
}
const v43 = f22(v20, v20, v21, v21);
f22(v21, v20, v20, v19);
f22(v20, v19, v21, v20);
function f46() {
    return f22;
}
new Float32Array(257);
new BigUint64Array(238);
new BigInt64Array(1326);
for (const v57 of v43.__proto__) {
    continue;
    v21 <= 1326 ? v21 : 1326;
}
BigUint64Array ^ v13;
[-70787922,-15,-256,2418,3,-4294967295,1073741824];
[1073741824,-659798737,-15,2147483649];
[-3,-4,-58960,-10,6,-36095];
const v3 = /p\u{12345}\u{23456}/gmyv;
/a[^a](5*)+/sidmyv;
const v5 = /z\cA/igyv;
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = v5;
    } catch(e10) {
    }
    try {
        this.h = 4n;
    } catch(e11) {
    }
    try {
        this.c = 16n;
    } catch(e12) {
    }
}
new F6(4n, 16n);
new F6(16n, 4096n);
const v15 = new F6(4n, 4n);
try {
    new Float32Array(4096);
} catch(e20) {
}
try {
    new Uint8Array(3);
} catch(e24) {
}
try {
    new BigInt64Array(4);
} catch(e28) {
}
try {
    v3[F6] = Uint8Array;
} catch(e29) {
}
try {
    v15.__proto__ = v5;
} catch(e30) {
}
throw 4;
try {
    v3.e = false;
} catch(e31) {
}
