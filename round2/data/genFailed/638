function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a6;
}
const v7 = new F3("c", "c");
const v8 = new F3("Eaz", v7);
const v9 = new F3("h", v8);
class C14 {
    constructor(a16, a17, a18) {
        let v19;
        try { v19 = a16(a16, v7, F3, a16); } catch (e) {}
        v19[4086] >>>= -2;
        v19 / false;
        v9.b = F3;
    }
    static #valueOf(a22, a23, a24, a25) {
        a25.__proto__;
        F3 & v9;
        a22[9] = c;
        return a22;
    }
    static #f;
    1073741825 = -2;
}
const v29 = new C14(-2, C14, v7);
new C14("h", F3, v7);
new C14(v7, v7, v29);
function f32(a33, a34, a35, a36) {
    const o37 = {
        "g": a33,
        "h": "c",
        ..."Eaz",
    };
    return o37;
}
f32("Eaz", C14, -146571294, -146571294);
f32("h", v9, -58921, -146571294);
f32("Eaz", v9, -58921, -2);
try {
    new Float32Array(1024);
} catch(e6) {
}
try {
    new BigInt64Array(256);
} catch(e10) {
}
try {
    new Uint32Array(127);
} catch(e14) {
}
[-13,32419];
const v16 = [512,-1503702952];
[64,-2,12,14,-456855231,11,4];
function f21(a22, a23, a24) {
    Math.ceil(4096);
    Math.floor((268435439 * (a23 % (4096 % 268435439))) + 268435439);
    return BigInt64Array;
}
f21(v16, -972073769n, v16);
