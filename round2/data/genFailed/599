const v2 = new Array(15);
function f3(a4) {
    const o17 = {
        26: v2,
        "d": a4,
        6: a4,
        get h() {
            v2[4033479698] *= a4;
            Array[a4] = v2;
            const v7 = Symbol.iterator;
            const o16 = {
                [v7]() {
                    let v9 = 10;
                    const o15 = {
                        next() {
                            v9--;
                            const v13 = v9 == 0;
                            const o14 = {
                                "done": v13,
                                "value": v9,
                            };
                            return o14;
                        },
                    };
                    return o15;
                },
            };
            return v2;
        },
    };
    return o17;
}
const v18 = f3(15);
f3(v2);
f3(v2);
new BigUint64Array(3);
new BigUint64Array(3);
new Uint8Array(128);
for (let v30 = 0; v30 < 46; v30++) {
    const v31 = v30 * v30;
    const v32 = new BigUint64Array(128, 128, v30);
    Array % v31;
    Object.defineProperty(v32, 9, { configurable: true, set: f3 });
    Uint8Array >= v18;
}
try {
    new Int16Array(2605);
} catch(e3) {
}
try {
    new Uint16Array(407);
} catch(e7) {
}
try {
    new BigInt64Array(64);
} catch(e11) {
}
const v12 = [0.4649234450969786,NaN,1.7070060128394556e+308,-7.296248337815561];
const v13 = [-2.220446049250313e-16,-58.63442143628663,1.13554930099547e+308,1000000000000.0,3.010273773559433];
const v14 = [2.391230821832227e+307,-1000000.0,521760.49999666377,5.229264834770557,1000000.0,0.7995022475066785,-1.4663531905983245,-2.947765519448583e+307,1e-15,570.0980578706638];
function F15(a17, a18, a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 2605;
    } catch(e21) {
    }
}
const v22 = new F15(v13, 2605, v14, v13);
const v23 = new F15(v14, 64, v14, v12);
new F15(v14, 64, v12, v14);
[v14,Int16Array,v23];
const v26 = [64,407,v22];
[407];
%VerifyType(Uint16Array);
try {
    v12[BigInt64Array] = v23;
} catch(e28) {
}
v26["find"](Int16Array, v13);
