class C3 {
    static #h;
    static set e(a5) {
        const v6 = a5 >= 1000000.0;
        if (v6) {
            Math.exp(v6);
            Math.acos(v6);
            this || 1000000.0;
            const v12 = this % 4294967297;
            Math.ceil(4294967297);
            v12 + this;
            Math.abs(v12);
        } else {
        }
    }
}
const v19 = new C3();
const v20 = new C3();
const v21 = new C3();
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = 3.0;
    this.g = a24;
}
const v26 = new F22(3.0, v21);
const v27 = new F22(v26, v19);
new F22(1000000.0, v27);
const v33 = Math.fround(v20);
const v34 = 0.3952735537711689 ** -1019782604;
Math.log(v21);
const v36 = v26.g;
let v37;
try { v37 = v36(C3, F22, v34, v33); } catch (e) {}
v37.valueOf = v37;
function f3(a4) {
    const o31 = {
        m(a6, a7) {
            for (let v8 = 0; v8 < 32; v8++) {
                this["p" + v8] = v8;
            }
            return this;
        },
        [4294967297n](a12) {
            const v13 = super[a4];
            function f14(a15, a16) {
                a15?.[1073741825];
                const v19 = Symbol.iterator;
                const o28 = {
                    [v19]() {
                        let v21 = 10;
                        const o27 = {
                            next() {
                                v21--;
                                const v25 = v21 == 0;
                                const o26 = {
                                    "done": v25,
                                    "value": v21,
                                };
                                return o26;
                            },
                        };
                        return o27;
                    },
                };
            }
            new Promise(f14);
            return v13;
        },
    };
    return o31;
}
f3(f3(4294967297n));
const v34 = f3(401603208n);
function f41() {
    return 9094n;
}
v34[1] |= 268435440n;
try {
    new Int8Array(5);
} catch(e45) {
}
try {
    new BigUint64Array(7);
} catch(e49) {
}
try {
    new Float64Array(4);
} catch(e53) {
}
