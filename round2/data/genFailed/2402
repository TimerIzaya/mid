function f0() {
    const o8 = {
        m(a5, a6) {
            const t3 = "SHw";
            t3[3808] -= a6;
            a6?.d;
            return a5;
        },
        ..."SHw",
        2392218870: -7,
        "h": 4.993917445252896,
        ..."SHw",
        2: "SHw",
        [-7]: 4.993917445252896,
    };
    return o8;
}
const v9 = f0();
f0();
const v11 = f0();
function F12(a14) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a14;
    this.e = a14;
    this.a = a14;
}
const v15 = new F12(v11);
new F12(v11);
let v17 = new F12(v9);
v9 > -56960 ? v9 : -56960;
v17 >>= v15;
const v24 = [256];
Reflect.apply(v11.m, v15, v24);
const o29 = {
    "maxByteLength": 85,
};
const v31 = new SharedArrayBuffer(85, o29);
new BigInt64Array(v31);
