const v0 = [];
const v6 = new Uint32Array(4);
const v9 = new Uint32Array(16);
const v12 = new Float64Array(129);
const v13 = delete v6?.buffer;
const v15 = [v13,v12];
Reflect.apply(v9.forEach, v9, v15);
v12.length >>>= v13;
v0 === Float64Array ? v0 : Float64Array;
function f9(a10, a11, a12, a13) {
    const o30 = {
        toString(a15, a16, a17, a18) {
            try {
                const t4 = "iterator";
                t4.__proto__ = a17;
            } catch(e19) {
            }
            return 9007199254740992n;
        },
        n(a21, a22, a23, a24) {
            const o28 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o28);
            return a10;
        },
    };
    return o30;
}
const v31 = f9("1073741825", -268435456n, -2147483647n, "iterator");
const v32 = f9("56632", f9, v31, "56632");
const v33 = f9("56632", v32, -268435456n, "56632");
var g = "1073741825";
const v35 = ("1073741825")["slice"]("slice", v31);
try {
    v33.d = v32;
} catch(e36) {
}
1073741824n | v35;
const v41 = !9;
let v42 = 1073741824n || 2.0;
v41 || 9;
1073741824n + 2.0;
v42--;
+2.0;
