const v6 = [268435441,-9223372036854775807,4294967297,85755419,-832262503,1695694578,-1,4294967296,14];
const v7 = [-11292,2,-4294967297,-4294967297,128,-46245,512];
[-56366,2147483647,1000,-245815580,1463160906,15870,36124];
let v14 = 6727;
function f15(a16, a17, a18) {
    'use strict';
    const v19 = v6[a18];
    const v20 = a18[65537];
    try { v20(v19, v19, ...a18, ...v6, -9286n, v20); } catch (e) {}
    const t9 = "b";
    t9[3269] <<= v14;
    return v6;
}
f15(v14, v7, "b");
v14--;
[v7,v6,-16,v7];
[["b",-9286n,"acos"],v6];
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -3;
    } catch(e3) {
    }
    try {
        this.d = -3;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
const v7 = new F0();
function f8() {
    return v7;
}
const v9 = [v7,f8,v5,F0,v5];
const v10 = [f8];
const v11 = [v5];
function F12(a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v7;
    } catch(e16) {
    }
}
const v17 = new F12(f8, v5);
new F12(v17, f8);
new F12(F0, v5);
function F20(a22, a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a24;
    } catch(e26) {
    }
    try {
        this.b = a22;
    } catch(e27) {
    }
}
new F20(v7, v5, v9, v9);
new F20(v5, v6, v11, v9);
new F20(v7, v6, v10, v11);
for (let [...v31] of v9) {
    for (let v32 = 0; v32 < 32; v32++) {
        v31["p" + v32] = v32;
    }
}
const o38 = {
    "execution": "async",
    "type": "major",
};
gc(o38);
