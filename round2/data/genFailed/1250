const v2 = new Uint16Array(16);
new BigInt64Array(2);
const v8 = new Int8Array(127);
function F9(a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a13;
    this.d = v2;
    this.g = 16;
}
const v14 = new F9(16, 2, 16);
const v15 = new F9(2, v14, 16);
const v16 = new F9(127, BigInt64Array, 2);
class C17 {
    [Int8Array] = F9;
    #h;
    n(a19, a20, a21, a22) {
        super[a22] = this;
        try {
            this.#h = v2;
        } catch(e23) {
        }
        return 2;
    }
    static 9 = v16;
    [v15] = BigInt64Array;
    static #f;
    #b = v8;
}
new C17();
new C17();
new C17();
const o29 = {
    "maxByteLength": 2021,
};
const v31 = new ArrayBuffer(2021, o29);
new Uint16Array(v31);
let v35 = 9;
const v37 = !0.14130463497662937;
v8 << v37;
Math.asinh(v37);
Math.imul(v37, v8);
v35--;
function f0() {
}
class C1 extends f0 {
    d;
    static #d = f0;
    valueOf() {
        try {
            f0 <<= f0;
        } catch(e3) {
        }
        return this;
    }
    static {
        let {"f":v5,"g":v6,} = this;
        let {"a":v7,"g":v8,} = v6;
        function f9() {
            return this;
        }
    }
}
new C1();
const v11 = new C1();
new C1();
[-0.0,-1.0,-1.6828422108150013e+308];
[-1.6549790668798395e+308,638320.961721628];
const v15 = [2.2250738585072014e-308,NaN,Infinity];
[1000000000.0,-766.0421555144012,-2.756980817375767e+307,-342.23299081988716,1.7845279472911455e+308,3.1458794262330155e+307,-231.64641031720885];
[2.2250738585072014e-308,-251.6672683575008];
if (v11 < [0.8765820578014014,1.8885588911645623,1000000000000.0,-779107.9944210413,-5.240172053197262e+307,2.0,2.6990917659994125]) {
} else {
    try {
        v15.valueOf = f0;
    } catch(e26) {
    }
}
