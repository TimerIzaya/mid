const v2 = new BigInt64Array(7);
new Int32Array(8);
const v8 = new Uint8Array(2928);
function f9() {
    return v2;
}
const v13 = /d\P{Any}Xa[a-z]((\xed\xa0\x80))\x02/myu;
/Upa*b+/gmd;
/0H[^123]/myisd[203];
for (let [v17] of v8) {
    v17 ** v17;
    const o19 = {
        "isExtensible": f9,
    };
    new Proxy(v17, o19);
}
try {
    v13.exec("yqE");
} catch(e24) {
}
[0.8130202893876914];
const v4 = [-1000000000.0,1000000000.0,-0.0,-1000000000.0,1000.0,1.5622564473837297];
[-378154.0087398576,-603652.7157410793,1000.0,9.15351974083127e+307];
class C9 {
    constructor(a11, a12, a13, a14) {
        [12,a11,this,13,13];
        const v16 = [-1647168889,12,13];
        [257n,12,this,v4];
        try { new a12(-1647168889); } catch (e) {}
        -14n >> a12;
        typeof v16 === "undefined";
    }
    static #c;
    [-14n];
}
const v23 = new C9(v4, v4, 257n, 257n);
const v24 = new C9(v4, v23, C9, 257n);
const v25 = new C9(v4, v24, 48808n, -14n);
function f26(a27) {
    return v25;
}
class C28 extends f26 {
    2 = 13;
    static 268435441 = v4;
    [48808n] = 12;
    static 167;
    static 10;
}
