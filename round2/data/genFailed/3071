function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.e = -2;
}
new F0();
const v4 = new F0();
new F0();
const v9 = [7,12];
const v10 = [1335279712,8,-65537,268435439,-1,-12,1073741824,41819,-4294967295];
const v11 = [536870912,15];
function f12(a13, a14, a15) {
    const o23 = {
        "g": "toString",
        "f": "string",
        ...a15,
        ...a15,
        valueOf(a17, a18, a19) {
            const v20 = a13?.[64];
            v20.h = v9["copyWithin"](a17, v20);
            super.d **= a13;
            return a14;
        },
        16: v9,
        "e": v9,
        51: v4,
    };
    return o23;
}
const v24 = f12(f12, v9, v11);
f12(f12(v9, v11, v11), v10, v10);
Object.defineProperty(v4, 9, { configurable: true, value: -65535 });
Math.abs(v24);
const v35 = ~0.444897591648475;
Math.log2(v24);
Math.sign(F0);
!v35;
0.444897591648475 << v24;
