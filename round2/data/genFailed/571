[1n,4,268435456n,1n];
[268435456n,[9223372036854775807n],65536,9223372036854775807n];
new Float32Array(3358);
new Uint32Array(16);
new Uint32Array(3986);
class C21 extends Uint32Array {
    536870912 = 3358;
    [3358] = 1n;
    static #a = 3358;
}
new C21();
new C21();
new C21();
const v0 = [15,9223372036854775807,-240161247];
const v1 = [562465308,0];
const v2 = [1073741825];
class C3 {
    constructor(a5, a6) {
        let v7;
        try { v7 = new a6(a5); } catch (e) {}
        try { v1.unshift(v7, v1, v7, v1, a5); } catch (e) {}
        try {
            a6 = v1;
        } catch(e9) {
        }
    }
    static 268435456 = v2;
    #f;
    static 3;
    static 6 = v2;
    [v0];
    [v2];
}
const v10 = new C3(v0, v2);
const v11 = new C3(v10, v1);
new C3(v11, v11);
try {
    new Uint32Array(16);
} catch(e16) {
}
try {
    new Float64Array(3);
} catch(e20) {
}
try {
    new Uint8Array(116);
} catch(e24) {
}
v1.length **= 8;
v2[3];
v10 ^ v2;
const o33 = {
    "execution": "sync",
    "type": "minor",
};
gc(o33);
