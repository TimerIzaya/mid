const v1 = new Map();
const v2 = [-4294967296,-1348755685,257,32480,1024,-256,-65536];
const v3 = [2,-1,1774414664,3,-1952894205];
const v4 = [1073741825,1656477605,-256,6,-58355,1073741823,10511,2014680189];
function f8(a9, a10, a11) {
    const o19 = {
        set a(a13) {
            v1[this] = a11;
            let v14;
            try { v14 = a13(); } catch (e) {}
            v14 in v2;
            for (let v16 = 0; v16 < 32; v16++) {
                v3["p" + v16] = v16;
            }
        },
        [v1]: a9,
        __proto__: v1,
        [0.58044010693483]: 1000000.0,
        "g": v1,
    };
    return o19;
}
f8(1000000.0, 0.58044010693483, -1000000000.0);
f8(0.58044010693483, 1000000.0, -1000000000.0);
const v22 = f8(-1000000000.0, -1000000000.0, -1000000000.0);
function F23(a25, a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = -1000000000.0;
}
const v29 = new F23(v2, v3, v2, -1000000000.0);
const v30 = new F23(v2, v2, v22, -1000000000.0);
const v31 = new F23(v3, v4, v29, -1000000000.0);
try { v22.throw(v30, v31, v4); } catch (e) {}
for (let v33 = 0; v33 < 32; v33++) {
    v29["p" + v33] = v33;
}
new Map(v3);
for (let v37 = 0; v37 < 32; v37++) {
    v22["p" + v37] = v37;
}
