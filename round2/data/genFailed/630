function f0() {
}
const v3 = new Uint8ClampedArray(11);
new Float64Array(193);
const v9 = new Int16Array(6);
const v10 = [11,11,f0,v9];
const v11 = [193,6,Int16Array,Float64Array];
[193,11];
v10 | Int16Array;
v3["map"](...v10, Float64Array, ..."map", 6, ...v11, ..."map");
v11 > "map";
let v18 = 0;
do {
    try {
        f0();
    } catch(e20) {
    }
    v18++;
} while (v18 < 5)
try {
    new Int16Array(3);
} catch(e6) {
}
try {
    new Uint8Array(7);
} catch(e10) {
}
try {
    new Uint16Array(217);
} catch(e14) {
}
[7,11,11,3,3];
const v16 = [Uint8Array];
const v17 = [Uint8Array,v16,11,268435439];
const v22 = Symbol.isConcatSpreadable;
v16[v22] = 11;
delete v17?.length;
const v24 = v22 >>> "30165";
v16[Uint8Array];
try {
    v16.e = v24;
} catch(e26) {
}
