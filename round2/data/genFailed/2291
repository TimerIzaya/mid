function F6(a8, a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = -2147483649;
    this.a = -536870912;
}
const v11 = new F6(-2147483649, -536870912, -536870912);
new F6(11, 11, -536870912);
new F6(-536870912, 11, -536870912);
function f14() {
    return v11;
}
class C18 extends f14 {
    static #h = -256;
    static #b;
    e = -256;
    n(a20, a21, a22) {
        try {
            const t17 = "vm";
            t17.#h = a20;
        } catch(e23) {
        }
        Object.defineProperty("vm", 49, { get: f14, set: f14 });
        let v26 = -2147483649;
        a21 / a21;
        -(-2);
        ++v26;
        return a20;
    }
}
let v30 = new C18();
new C18();
new C18();
delete v30?.a;
throw 11;
f14();
%PrepareFunctionForOptimization(f14);
f14();
f14();
%OptimizeFunctionOnNextCall(f14);
f14();
v30++;
