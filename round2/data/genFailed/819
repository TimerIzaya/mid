const v2 = new Uint16Array(3083);
new BigUint64Array(1173);
const v8 = new Int8Array(48);
[9.880496226380913,0.08551516789549851];
const v10 = [0.08198092511157429,-1.0,-0.918081314852202,-3.1770825757265335,1e-15,0.03988161480744412,-1e-15];
[0.04511970080543537,-2.0,-325022.5289645678,2.0];
v2[7] = v8.__proto__;
v10.length = 48;
const o13 = {
};
new Proxy(v2, o13);
const v1 = new Set();
const v5 = [-20904,-5,13882,-1170834429];
const v6 = [-24025,-429215296];
const v7 = [4096,-367220265,-9007199254740991,1161658028,-75295744,-2147483647,-53578,952041127,1632970661,-2648];
class C8 extends Set {
    3 = v1;
    static #c;
    a = v7;
    constructor(a10, a11, a12) {
        super(v6);
        function F13(a15, a16) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = a15;
            } catch(e17) {
            }
        }
        new F13(a12, a10);
        new F13(a10, v5);
        new F13(1024n, a10);
    }
}
const v21 = new C8(C8, 129n, -9007199254740992n);
new C8(v1, 1024n, 129n);
new C8(C8, 129n, 129n);
try {
    new Int32Array(7);
} catch(e27) {
}
try {
    new BigInt64Array(2);
} catch(e31) {
}
try {
    new Int32Array(213);
} catch(e35) {
}
try {
    v21[7] = v7;
} catch(e36) {
}
const v37 = C8[9];
const v38 = v7[129n];
v21["forEach"](v38, C8);
BigInt64Array <= v38;
new Set(v37);
