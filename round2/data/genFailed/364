const v3 = new BigUint64Array(2162);
let v4 = 257;
const v6 = new Uint8Array(v4);
new Float64Array(0);
const v10 = v3[Uint8Array];
const v12 = [v10,v10];
v3[268435441] = Reflect.apply(v3.toLocaleString, v10, v12);
v6.find(Float64Array, v10, ...v3, ...v3);
v4 *= 0;
Math.atanh(-1488495412);
-836.4843196775789 * v6;
-836.4843196775789 - v6;
const v0 = [-1024,56444,795241478,16,256,-1653804591,-1139119041,65535,13819,-57470];
const v1 = [-39975];
const v2 = [-9223372036854775808,536870889,4,268435441,5,-1269547894];
try {
    new BigInt64Array(1);
} catch(e6) {
}
try {
    new Uint8ClampedArray(64);
} catch(e10) {
}
try {
    new Uint8Array(128);
} catch(e14) {
}
Object.defineProperty(v0, "e", { configurable: true, enumerable: true, value: 64 });
var b = -639761782;
try {
    v0.toString = -1024;
} catch(e18) {
}
v1[BigUint64Array];
Reflect.construct(BigInt64Array, [v2], BigInt64Array);
