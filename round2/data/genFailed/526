class C6 {
    constructor(a8, a9) {
        a8 = a9;
        let v10;
        try { v10 = new a9(a9); } catch (e) {}
        try { new v10("1622747525"); } catch (e) {}
    }
    198;
    set c(a13) {
        let v14;
        try { v14 = new a13(a13, a13, "object", "object", 8); } catch (e) {}
        try { a13(v14, a13, -419571503, "eJGh", this); } catch (e) {}
        this.valueOf = a13;
    }
}
new C6(-419571503, -419571503);
new C6(8, 8382);
new C6(8382, -419571503);
const v22 = [-2.220446049250313e-16,NaN];
const v23 = [-750091.4698486323,458.7158476115935,-1.7976931348623157e+308,-655.6992572255006,Infinity,2.2250738585072014e-308,1.0112943998483917e+308];
const v24 = [-2.2250738585072014e-308,2.1174236411967906e+306,5.0,-1000000.0,471.32877862849705,0.7706513654106043,-8.52655113677928,-2.0];
v23[6] = "eJGh";
v23.c = v22;
[9007199254740990,-9007199254740991,335392731,-514339112];
[-19160,7,-63148,-65535,36279,1024,4294967296,-11,536870888];
const t23 = [-1073741824,1024];
t23[2276] *= 8;
v24.length;
const o29 = {
};
new Proxy("eJGh", o29);
try {
    new Uint32Array(147);
} catch(e3) {
}
try {
    new Float32Array(2);
} catch(e7) {
}
try {
    new Uint8ClampedArray(3);
} catch(e11) {
}
class C15 extends Uint32Array {
    set h(a17) {
        let [] = this;
    }
    #n(a20, a21, a22, a23) {
        const v25 = Symbol.match;
        a20[v25];
        return v25;
    }
    c = Uint8ClampedArray;
    25 = Uint32Array;
    static #e = "h";
}
new C15();
const v28 = new C15();
new C15();
const o33 = {
    "execution": "sync",
    "type": "minor",
};
gc(o33);
const o35 = {
};
try {
    o35.b = "minor";
} catch(e36) {
}
try {
    const o37 = {
    };
    o37.b = "minor";
    o37.e = v28;
} catch(e38) {
}
try {
    const o39 = {
    };
    o39.b = "minor";
    o39.e = v28;
    o39.d = "sync";
} catch(e40) {
}
try {
    const o41 = {
    };
    o41.b = "minor";
    o41.e = v28;
    o41.f = "boolean";
} catch(e42) {
}
