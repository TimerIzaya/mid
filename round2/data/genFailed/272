const v0 = [996337.1196211032,6.407438704506894e+307,1.0608394559083845e+308,2.7091914791629357,-1.7976931348623157e+308,947.7903836084542,0.01027726764342718,170995.71837639785,-1000.0];
const v1 = [1000000000.0,3.0,-5.987131525301852e+307,-690387.5212156016,2.950468060203851e+307,0.24469887985669825,-727.0966182194807,-7.264448590306866];
const v2 = [1000.0,1000000.0,2.2250738585072014e-308,-919.1608850201318,1.7976931348623157e+308,952.7259910674127,-1.7976931348623157e+308,1000000.0];
[v0,v0,v1,v2];
[v0,v2];
const v5 = [v2,v2];
[-1825758013,12495,-1981236069];
[-15,536870888,4294967295,1,8,536870889,7560441];
const v8 = [13,-256];
Math.round(v5);
const v16 = 7 || -7;
const v17 = 7 - 7;
v17 & v16;
Reflect.construct(v8, [Reflect,-2147483649,v2,v16,~7], v17);
class C3 {
    #h;
    static #a = -514240.634101351;
    valueOf(a5) {
        const t4 = "o";
        t4.length **= a5;
        return "o";
    }
    constructor(a7, a8) {
        a7[3704] += a7;
        try {
            this.#a;
        } catch(e10) {
        }
    }
}
const v11 = new C3(-514240.634101351, C3);
const v12 = new C3(v11, v11);
const v13 = new C3("o", v12);
new WeakSet();
[982646893,7,1024,64,-36780,64];
[7];
const v18 = [12,10,5,-4,23317];
for (let v19 = 0; v19 < 32; v19++) {
    v18["p" + v19] = v19;
}
try {
    v13[8] = v12;
} catch(e22) {
}
try {
    new Float64Array(1785);
} catch(e26) {
}
try {
    new Int32Array(16);
} catch(e30) {
}
try {
    new Float32Array(32);
} catch(e34) {
}
