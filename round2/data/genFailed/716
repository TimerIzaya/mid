const v1 = new WeakSet();
function f2() {
    return v1;
}
new BigInt64Array(129);
new Int16Array(1000);
const v11 = new BigUint64Array(1306);
v11[Int16Array] = -9929n;
try {
    f2();
} catch(e16) {
}
const o19 = {
    "maxByteLength": 2443,
};
const v21 = new SharedArrayBuffer(257, o19);
new Uint16Array(v21);
class C6 {
    constructor(a8, a9) {
        try {
            a9.f = -40405;
        } catch(e10) {
        }
    }
    [14];
    static toString(a12, a13) {
        let v14 = 0;
        while (v14 < 6) {
            const v17 = super[14];
            try {
                v17[6] = 1747903653;
            } catch(e18) {
            }
            v14++;
        }
        return -1;
    }
}
new C6(13, 1747903653);
new C6(14, 1747903653);
const v22 = new C6(13, 14);
const v31 = Math.max(46898);
Math.sin(-2n);
let v33 = 4294967297 & 46898;
--v33;
let v35 = v33--;
v35 & 4294967297;
++v35;
try {
    v22.fuck(undefined, 8.508952980532385, v31, 8.508952980532385);
} catch(e41) {
}
