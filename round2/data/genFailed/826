[4,-40223,-11,-9223372036854775807,5,65535,-65537];
[648045278,2147483648,-28842];
[-1578683743,-1073741824,16];
[1.7976931348623157e+308];
const v4 = [2.1622379712516718e+307,-2.4664227424978975];
[-2.2250738585072014e-308,1e-15];
new Int16Array(1);
const v11 = new Uint8Array(0);
const v14 = new Int8Array(152);
[-256,-256,-7];
[2,-16,-9007199254740990,9007199254740990,2];
[-48659,65536,65536];
Int8Array & Int8Array;
Object.defineProperty(v14, 2, { value: Int16Array });
let v19 = 0;
while (v19 < 7) {
    throw 152;
    v11 & v4;
    v19++;
}
const v0 = /n(?<!)/sidguy;
const v1 = /(?:a+)?/simuy;
let v2 = /(?:a{5,1000000}){3,1000000}\ud808\udf45*/sidgmy;
class C3 {
    128;
    static 0 = v1;
    static 255 = v2;
    n(a5, a6) {
        return 257;
    }
    static toString(a11) {
        const o12 = {
        };
        try {
            o12.h = a11;
        } catch(e13) {
        }
        try {
            const o14 = {
            };
            o14.h = a11;
            o14.g = v0;
        } catch(e15) {
        }
        try {
            const o16 = {
            };
            o16.h = a11;
            o16.g = v0;
            o16.f = v2;
        } catch(e17) {
        }
        try {
            const o18 = {
            };
            o18.h = a11;
            o18.g = v0;
            o18.c = a11;
        } catch(e19) {
        }
        return v1;
    }
}
new C3();
new C3();
const v22 = new C3();
try {
    new Float64Array(15);
} catch(e26) {
}
try {
    new Float64Array(64);
} catch(e30) {
}
try {
    new BigInt64Array(6);
} catch(e34) {
}
class C35 extends BigInt64Array {
    #p(a37, a38) {
        [-3.499687775464211,Infinity,-1.7353262883977676e+308,2.220446049250313e-16,-697.8398066411806];
        [-998859.4358089309,-8.80027629453684];
        [5.760445059354925,0.1369240466973043,429.6724059383703,-9.649471705896968e+307,43.11865182968745,-2.275541940962926];
        return v2;
    }
    4;
    set b(a43) {
        super.length %= a43;
        try {
            new Float64Array(v22);
        } catch(e45) {
        }
    }
}
new C35();
new C35();
new C35();
function f49(a50) {
    function f52(a53) {
        v22.c <<= a53;
        ({"a":C35,"c":v2,"g":a53,...a53} = C35);
    }
    this.onmessage = f52;
    ~this;
}
const v57 = [BigInt64Array];
const o58 = {
    "arguments": v57,
    "type": "function",
};
new Worker(f49, o58);
