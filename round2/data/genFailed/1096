const v3 = [-4294967296n,4096n,-4294967296n,4096n,4096n];
const v4 = [-2147483649n,v3,v3,v3];
[4096n,4096n];
new Float64Array(2475);
new Uint16Array(0);
const v14 = new Uint8Array(2);
const v15 = v14[Uint16Array];
const v16 = v4.length;
try { v15(4096n, v16); } catch (e) {}
Reflect.construct(Uint16Array, [v3,2], Uint8Array);
try {
    v3.includes("-2", 2);
} catch(e23) {
}
class C3 {
    static set d(a5) {
        let v4 = this;
        --v4;
        try {
            super[v4] = 5;
        } catch(e7) {
        }
    }
    268435440 = 5;
    512 = 5;
    static #h;
    static [0.0];
    #c;
}
new C3();
new C3();
const v10 = new C3();
function f11() {
    return v10;
}
for (let [v18,v19,v20] of 11) {
    try {
        v19[v19] = 7n;
    } catch(e21) {
    }
}
[11];
for (let v23 = 0; v23 < 100; v23++) {
    f11();
}
