function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.d = -12;
}
new F0();
const v4 = new F0();
new F0();
/[^a*b(foo[z]*g6\p{Script_Extensions=Greek}a+?k+)]/mydu;
/n(?:a*)+/gmyidu;
/2[\p{Script_Extensions=Mongolian}&&\p{Number}]foo(?<!bar)baz(Cabc|def)/sv;
new BigInt64Array(2);
new Uint8Array(64);
new Int32Array(255);
let v20 = 2147483649;
let v21 = -545.0610055843983;
v21 ^ v20;
Math.acos(v20);
+(++v21);
--v20;
const o27 = {
};
new Proxy(v4, o27);
const v0 = [];
const v1 = [16,572643743,-1743816399,59474,9007199254740990,-514332097,9,-268435456,-2147483647,0];
[-13,-65536,-65535,48430];
const v3 = [-1157066938,4294967297,-16,15836,1000,28225,514773598,15785];
const v4 = [v3];
const v5 = [v0,v1,v3,v4];
[v3,v5,v4,v5];
const v10 = [0.03406089141685131,-1000.0,1e-15,-0.0];
[-2.220446049250313e-16,0.5887551558406754,-1.7976931348623157e+308,2.2250738585072014e-308,1e-15,1.0];
[2.121550291837853e+307,2.220446049250313e-16,0.058767974699015735,1.0238075128981298e+308,-4.0,-8.899380623562728,-9.967615496103882,Infinity,-1000.0,0.659522954121475];
const v15 = -Infinity;
%VerifyType(v5);
try {
const t0 = 0.9700181273649163;
new t0();
} catch (e) {}
let v17 = [-1000000.0];
const v18 = [1.0,-1000000000.0,-3.8721077735541893,1000000000000.0,-1000000.0,4.0];
[0.611199782670353,-1e-15,0.7949779085282224];
v17++;
v18[v15];
throw 0.9700181273649163 >> v5;
v3[v10];
