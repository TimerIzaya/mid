class C3 {
    static f = 256;
    constructor(a5, a6) {
        for (const v7 in this) {
            const o8 = {
            };
            new Proxy("clz32", o8);
        }
    }
    536870889;
    #h;
    #f = "clz32";
    #d = "clz32";
    static #g;
}
const v11 = new C3(256, "clz32");
const v12 = new C3(-389029044, C3);
const v13 = new C3(v11, v12);
new Int16Array(9);
const v19 = new Uint8ClampedArray(9);
new Float64Array(989);
try { v13("clz32", v19); } catch (e) {}
for (let v24 = 0; v24 < 32; v24++) {
    v13["p" + v24] = v24;
}
const v29 = new Array(6);
Int16Array * v29;
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = -51085;
    } catch(e7) {
    }
    try {
        this.a = a6;
    } catch(e8) {
    }
}
const v9 = new F3(-51085, 1);
new F3(1, 2147483649);
new F3(v9, 2147483649);
try {
    new Uint32Array(462);
} catch(e18) {
}
try {
    new Int16Array(47);
} catch(e22) {
}
try {
    new Uint8Array(3070);
} catch(e26) {
}
const v29 = Math.pow(3070, 47);
Math.abs(3070);
const v31 = 462 % 15;
for (const v32 of 462) {
    let v33;
    try { v33 = v32(15, v32, v32, v31, v32); } catch (e) {}
    const v34 = v33 >>> v32;
    const o35 = {
    };
    try {
        o35.d = v34;
    } catch(e36) {
    }
    try {
        const o37 = {
        };
        o37.d = v34;
        o37.h = v29;
    } catch(e38) {
    }
    try {
        const o39 = {
        };
        o39.d = v34;
        o39.h = v29;
        o39.f = F3;
    } catch(e40) {
    }
    try {
        const o41 = {
        };
        o41.d = v34;
        o41.h = v29;
        o41.f = v34;
    } catch(e42) {
    }
}
