const v3 = /oT(?:a?)*/mysdu;
const v4 = /[E[^(x)(x)(x)\3*]]/giv;
/xyz{1,}?/gyisdv;
class C6 {
    #d = 536870912;
    o(a8, a9, a10, a11) {
        [a10,a11,a8] = this;
        return a8;
    }
    f = v4;
    static 2;
    #c;
    e = 536870912;
    static #g = v3;
    static f;
    [v3] = 536870912;
}
const v12 = new C6();
const v13 = new C6();
new C6();
function F16(a18, a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = C6;
}
new F16(v13, C6, v12);
new F16(v13, C6, v13);
new F16(C6, v12, v12);
function f24(a25, a26) {
    const o27 = {
        10: v3,
        "f": a25,
    };
    return o27;
}
f24(-10877, -10877);
f24(-65535, 536870912);
f24(-10877, -10877);
function f0() {
    let v3 = "kyj";
    const o14 = {
        "g": 1e-15,
        __proto__: "POSITIVE_INFINITY",
        p(a5) {
            a5.__proto__;
            let v8 = -65536;
            Math.asin(v8);
            const v11 = v8--;
            --v3;
            return !v11;
        },
    };
    return o14;
}
const v15 = f0();
const v16 = f0();
const v17 = f0();
let v18 = [v17,v15,v16,v16,v15];
const v19 = [v18];
[v17,v17,v16];
function f21() {
    return v15;
}
if (f21) {
    Object.defineProperty("toString", 127, { enumerable: true, get: f21, set: f21 });
    try {
        v18 = v19;
    } catch(e25) {
    }
} else {
    const t32 = "toString";
    delete t32[7];
    delete v16[v15];
}
