const v0 = [-1918531214];
const v1 = [-81,-9007199254740991,-13,-62131,-39149];
const v2 = [-4,-11,-1700095721,9,-4096,4,128,-128,-51982];
function f3() {
    return v2;
}
[8,-1288543158];
const v5 = [-18051];
let v6 = [-2147483649,-4,-7,512,29174,256,268435440,12276,-53772,0];
function F7(a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a10;
    this.b = v2;
    this.h = f3;
}
new F7(v0, v0, v0);
const v13 = new F7(F7, v5, v1);
new F7(F7, v13, v1);
class C15 {
    static n(a17, a18) {
        this.toString = a18;
        const v19 = super.a;
        new F7(v19, v19, a18);
        this[2];
        return v5;
    }
    toString(a23, a24, a25, a26) {
        let v22 = this;
        const v29 = v6--;
        const v30 = --v22;
        Math.log2(a26);
        !v30 >> v29;
        v6 ** v30;
        Math.log2(9715);
        return v2;
    }
}
new C15();
new C15();
const v38 = new C15();
let v39 = 0;
while (v39 < 4) {
    new WeakSet();
    Reflect.construct(WeakSet, [v38], F7);
    v39++;
}
