const v2 = new BigInt64Array(64);
new Float64Array(253);
new Int8Array(5);
new Set();
let v11 = 0;
do {
    v2.__proto__ = v2;
    v11++;
} while (v11 < 0)
const o17 = {
    "maxByteLength": 799399557,
};
const v19 = new SharedArrayBuffer(881, o17);
new Uint16Array(v19);
function f6() {
    return "undefined";
}
const v7 = /i\1(a)+/smv;
const v8 = /aXy/sigm;
/wta+b[(a)\1]/sidv;
new Map();
function F12(a14, a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a15;
    } catch(e18) {
    }
    try {
        this.e = -2.2250738585072014e-308;
    } catch(e19) {
    }
    try {
        this.f = "-9223372036854775808";
    } catch(e20) {
    }
}
new F12("-9223372036854775808", v8, "undefined", v7);
const v22 = new F12("undefined", v7, "-9223372036854775808", v7);
const v23 = new F12(-5.0, v7, "undefined", v7);
v22 >> 3.0;
function f25(a26, a27, a28) {
    try {
        v23[a27] = Map;
    } catch(e29) {
    }
    return f6;
}
f25("-9223372036854775808", -5.0, v8);
-5.0 << f6;
