const v0 = [-1.0,-2.0,894345.1560623909];
const v1 = [6.574068660530852e+307,-1000000000000.0,-Infinity,-1.102015077748197,-2.220446049250313e-16,-4.0,0.599989087019889,-360638.43920350575,4.0];
[1.602269160500759e+308,1000000.0,-Infinity,NaN,-1.4662063202489286e+308,0.8202204890359922];
function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a11;
}
const v13 = new F9(-720717279, -1);
const v14 = new F9(-710946585, 1073741824);
new F9(1073741824, -720717279);
v14[v13] === -1;
for (let [v18] of v1) {
    function F19(a21, a22) {
        if (!new.target) { throw 'must be called with new'; }
        this.c = a21;
        this.d = a22;
    }
    new F19(v18, -710946585);
    new F19(v18, -1);
    new F19(v0, -1);
}
try {
    new Float64Array(6);
} catch(e3) {
}
try {
    new BigUint64Array(685);
} catch(e7) {
}
try {
    new Uint8Array(3091);
} catch(e11) {
}
const v12 = [685,3091,BigUint64Array,Float64Array,Uint8Array];
[v12,BigUint64Array,[v12],6,6];
/(?:a+){0,0}/dgyv;
/(?<a>(?<b>(?<c>(?<d>.).).).)/sdyv;
/IKj[a*b|c]?/igmu;
const v19 = Symbol.toPrimitive;
const o22 = {
    [v19]() {
        Object.defineProperty(this, 10, { enumerable: true, set: Symbol });
        super[Float64Array];
        return 685;
    },
};
throw o22;
