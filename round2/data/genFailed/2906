new Uint16Array(1);
const v5 = new Int16Array(256);
const v8 = new Float64Array(256);
class C9 {
    constructor(a11, a12, a13, a14) {
        let v15;
        try { v15 = v5.lastIndexOf(a11); } catch (e) {}
        v8 in v15;
        const v17 = +Int16Array;
        try { v15(this); } catch (e) {}
        Math.abs(Int16Array);
        const v23 = Int16Array || (v17 * v17);
        const v24 = -Int16Array;
        Math.asinh(v24);
        v24 ** v17;
        Math.sinh(v23);
    }
}
const v28 = new C9(1, 1, 1, 256);
let v29 = new C9(256, 1, 1, 1);
new C9(1, 1, 1, 256);
const v31 = delete v28[268435440];
[,...v29] = v5;
C9[v31];
for (let [v33] of v5) {
    let v34;
    try { v34 = v33(v33, v29, Float64Array, C9, v33); } catch (e) {}
    v34?.[1];
    const o36 = {
    };
    o36.e = v33;
    const o37 = {
    };
    o37.e = v33;
    o37.d = Int16Array;
    const o38 = {
    };
    o38.e = v33;
    o38.d = Int16Array;
    o38.a = 256;
    const o39 = {
    };
    o39.e = v33;
    o39.d = Int16Array;
    o39.a = v33;
}
