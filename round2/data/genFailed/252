class C3 {
    ["symbol"];
    #b;
    constructor(a5) {
        new Array(2478);
        Object.defineProperty(a5, "nhTrz", { writable: true, configurable: true, set: Array });
        "nhTrz" <= "nhTrz" ? "nhTrz" : "nhTrz";
        const t6 = "nhTrz";
        t6[2478] >>>= 4.0;
        const o13 = {
            "maxByteLength": 2958,
        };
        const v15 = new SharedArrayBuffer(2958, o13);
        new DataView(v15);
    }
}
const v18 = new C3("symbol");
const v19 = new C3(C3);
const v20 = new C3(v19);
function f21() {
    return 4.0;
}
function f22() {
    return C3;
}
function f23(a24, a25, a26, a27) {
    const o36 = {
        m(a29, a30) {
            v20[3023454145] = super.c;
            try { a25(); } catch (e) {}
            return a27;
        },
        set g(a34) {
            return f22;
            return C3;
            delete a24[9];
        },
        "b": a26,
        ...a27,
        __proto__: v20,
        "a": a27,
    };
    return o36;
}
let v37 = f23(v19, v18, "nhTrz", v19);
const v38 = f23(v37, 4.0, v18, v19);
const v39 = f23(v20, v37, "nhTrz", "nhTrz");
function F40(a42, a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a44;
}
new F40(4.0, "nhTrz", v39);
const v46 = new F40(C3, v19, v18);
const v47 = new F40(v46, v39, v37);
v37 = v38;
v38 / v20;
Object.defineProperty(v18, 2854045723, { writable: true, configurable: true, get: f21, set: f21 });
try {
    new F40(f22, v46, v38);
} catch(e50) {
}
v47[f23] >>>= 4.0;
try { v19.reject(f21, f23); } catch (e) {}
try {
    v46.match("3", /7Ga\bc/mi);
} catch(e55) {
}
class C3 {
    static {
        this[Reflect] |= Reflect.construct(this, [-43816,this], -43816);
    }
    static 7;
    static #f;
    ["-25646"] = "-25646";
    static 1;
    static #d;
}
new C3();
new C3();
new C3();
[52176,-1174223159,-36629,9223372036854775807,257];
const v15 = [10000,36125];
let [,,v17,v18] = [65537,6,-30207,2147483649,129,536870887,-10,13613,1073741824];
v18?.[536870888];
for (let v20 = 0; v20 < 32; v20++) {
    v15["p" + v20] = v20;
}
try {
    v18[1528285023] = 1528285023;
} catch(e23) {
}
