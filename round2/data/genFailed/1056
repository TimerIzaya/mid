const v0 = [];
function f1() {
    const o7 = {
        "e": v0,
        "a": v0,
        o() {
            if (v0) {
                v0[v0];
            } else {
                super[v0];
                this === this ? this : this;
            }
            return v0;
        },
        2846: v0,
        3970734139: v0,
    };
    return o7;
}
f1();
f1();
f1();
new Int16Array(137);
new Float64Array(946);
const v19 = new Int8Array(64);
Object.defineProperty(v19, "h", { writable: true, get: f1, set: f1 });
const o22 = {
    "maxByteLength": 505198103,
};
const v24 = new ArrayBuffer(80, o22);
new Int8Array(v24);
try {
    new BigInt64Array(1000);
} catch(e3) {
}
try {
    new Uint16Array(64);
} catch(e7) {
}
try {
    new BigUint64Array(5);
} catch(e11) {
}
try {
    new Float32Array(0);
} catch(e18) {
}
let v19 = 5;
try {
    new Uint32Array(v19);
} catch(e22) {
}
try {
    new BigInt64Array(2001);
} catch(e26) {
}
const v27 = BigInt64Array.h;
function f28() {
    return Uint16Array;
}
try {
    v19 = 2001;
} catch(e29) {
}
let v30;
try { v30 = f28(64n, v19, v27, ...1000, ...v27); } catch (e) {}
-1659986817n in v30;
