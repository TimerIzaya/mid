const v0 = [-4535,-65537,-4294967296];
const v1 = [1255846632,1073741823,10,-11,9007199254740991];
let v2 = [-1097397609,8,-9007199254740990,-536870912,-2,-1663073375,-65535,16,0,65537];
class C6 {
    static set c(a8) {
        v1.valueOf = a8;
        v2.length = a8;
        super[a8];
    }
    n(a11, a12, a13) {
        const o14 = {
        };
        o14.h = a11;
        const o15 = {
        };
        o15.h = a11;
        o15.a = 9n;
        const o16 = {
        };
        o16.h = a11;
        o16.a = 9n;
        o16.c = 9n;
        const o17 = {
        };
        o17.h = a11;
        o17.a = 9n;
        o17.b = a11;
        return o16;
    }
}
const v18 = new C6();
const v19 = new C6();
let v20 = new C6();
function f21(a22, a23, a24) {
    const o39 = {
        __proto__: C6,
        toString(a26, a27, a28, a29) {
            v20[109];
            try { v0.entries(); } catch (e) {}
            v2 = v0;
            return a22;
        },
        get e() {
            v20 >>= v19;
            try { v0(v1, v19); } catch (e) {}
            C6 << this;
            const o36 = {
            };
            new Proxy(a23, o36);
            return 256n;
        },
    };
    return o39;
}
f21(v20, v19, -147577557n);
f21(v0, v19, -147577557n);
f21(v2, v18, 9n);
Object.defineProperty(v0, "c", { writable: true, configurable: true, enumerable: true, get: f21, set: f21 });
const v43 = delete v18?.a;
try {
    const o47 = {
    };
    v2.forEach(v43, o47);
} catch(e49) {
}
const v1 = new Map();
class C2 extends Map {
    constructor(a4) {
        super(v1);
        function f5() {
            return Map;
        }
        v1[1][Symbol.matchAll];
    }
    b = v1;
}
const v10 = new C2(v1);
new C2(v10);
const v12 = new C2(C2);
function f13() {
    return v12;
}
new Map();
[-256,-101261348];
[-65535,255];
const v21 = [1071,-1659802760,257,1004077315,-16,8674,5,9,8];
f13();
const v23 = (a24, a25) => {
    'use strict';
    a25 ^ 49;
    const v28 = v21["keys"]();
    try { v28("keys", Map); } catch (e) {}
    new Array(1024);
    return a25;
};
