const v0 = [1.7976931348623157e+308,-1000000000.0,721307.9625224373];
const v1 = [1.112598886149164e+308,1.5678257723440948e+308,3.0,2.0,1.7082127621572704e+308];
const v2 = [1000000.0,0.0];
function f6(a7, a8, a9, a10) {
    const o18 = {
        [a7]: a10,
        "g": a8,
        m(a12, a13) {
            try { a10.unshift(a13, a13, a8); } catch (e) {}
            [6.6571997872486754,2.2250738585072014e-308,0.210327768389733,-1e-15,-211217.27577292407];
            [561282.106552677,932.6706378347812,1000000000000.0,-825.27036205953,1.7976931348623157e+308,-899405.0974707797];
            [-5.674141300442292,2.0,1000000.0,0.0,-1.0226526826079098e+308,-741613.6323753342];
            return a12;
        },
        ...a8,
        "a": a7,
    };
    return o18;
}
const v19 = f6(v1, v1, v2, v1);
f6(v0, v1, v1, v2);
f6(v0, v0, v2, v0);
[536870887,16,10,9223372036854775807,1073741825];
[-49370,536870889,6,255,8,268435456,-1798589634,60015,1];
for (let [v25,,,v26] of [-1024,-61607,-1073741824,442317118,-102753625]) {
    v25 !== v2;
    function F28(a30, a31, a32, a33) {
        if (!new.target) { throw 'must be called with new'; }
        this.h = v26;
        this.f = f6;
    }
    new F28(8, v26, v25, 4294967296);
    new F28(v25, v26, F28, 4294967296);
    new F28(4294967296, v26, v19, 4294967296);
}
