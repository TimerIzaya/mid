const v0 = [-1093466944,1073741825,1073741825,-4096];
const v1 = [1383940530,7,-10,1,64,1666456168,9223372036854775807,-4,536870888,-14];
const v2 = [-9007199254740991,64,-9007199254740992,-536870912,6,7];
class C3 {
    [v0];
    static #m(a5) {
        a5[v2] = v1;
        return this;
    }
    static #valueOf(a7) {
        const v8 = v2[9];
        Math.atanh(-9);
        !-9 >> v8;
        Math.fround(-9);
        Math.ceil(!1036749990);
        return a7;
    }
}
const v18 = new C3();
const v19 = new C3();
const v20 = new C3();
function F21(a23, a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a24;
}
new F21(v1, v19, v0, v2);
const v28 = new F21(v20, F21, v18, C3);
new F21(v19, F21, v0, v28);
const v30 = v2 >= v28;
v30 ? v2 : v28;
let v32 = [v1,v28,v1,v2];
const v33 = [v0,v0,v0,v30,v32];
v32 = [v28];
let v35;
try { v35 = v28(v33, v18, v28); } catch (e) {}
try { v35(F21, v20, v0); } catch (e) {}
for (let v37 = 0; v37 < 32; v37++) {
    v35["p" + v37] = v37;
}
