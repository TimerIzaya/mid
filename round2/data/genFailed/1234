const v0 = [-1.0,0.060526630574450846,2.220446049250313e-16,0.20187032694015916,-379.5744045905492,-1e-15,1000000.0];
const v1 = [1.0,3.545089708056334e+307,525902.947176429,-1.136837418379116e+308,2.2250738585072014e-308,2.6699098266218346];
const v2 = [1.4245171803120876e+308,-8.970156050209932,376.39411315725215];
const v3 = [v1,v2,v2,v2,v2];
const v4 = [v2,v1,v0];
const v5 = [v4,v4,v3,v4];
function f6(a7, a8, a9, a10) {
    const o24 = {
        9: a9,
        __proto__: v3,
        toString(a12, a13) {
            const v14 = a10;
            function f15(a16, a17, a18) {
                new Array(3219);
                return arguments;
            }
            f15(v14, v2, v14, v14, v4);
            return v4;
        },
    };
    return o24;
}
const v25 = f6(v5, v1, v1, v0);
f6(v3, v3, v1, v25);
f6(v3, v5, v5, v5);
[-1.0,903.7343821750635,-1000000000000.0,-3.0,-1000000000.0,3.0779385922729556,2.0,1.0,-0.7370778955970181,-2.2250738585072014e-308];
[-1e-15,4.0,2.0,0.6069760380567051];
[1000000000.0,67929.1076509403];
class C31 extends f6 {
    c;
    static g = v3;
}
new C31();
const v33 = new C31();
new C31();
800377394 && v33;
-8.395204176256463 * v25;
let v40 = -8.395204176256463 || v25;
--v40;
try {
    new Float64Array(26);
} catch(e9) {
}
try {
    new Float64Array(75);
} catch(e13) {
}
try {
    new Uint32Array(4);
} catch(e17) {
}
let v19 = -366689393;
Math.atan(v19);
const v22 = v19++;
(-1753914382n) ** 580142586;
const v24 = -1753914382n % v22;
Math.trunc(-1753914382n);
Math.exp(v19);
v24 | v22;
