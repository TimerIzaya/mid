[-1000.0,-1000000000.0,5.0,-4.941673707375059e+307,3.621757204144803,0.053685315932959554,265.30610438309327,-4.0,0.9383912849284257,-0.0];
[1.0,-2.778374407710899,5.0,9.628818171021749,-3.0,0.3522357299568232,-Infinity,0.3811530450724735,0.4014713821553977,1.0];
[-2.0];
[-1,-4096];
const v4 = [1073741824,-56419,8];
[11,30103,-19784];
new Int16Array(0);
new Int32Array(194);
new Float64Array(2085);
[183488.38648386206,831.0179334620548];
[1000000.0,6.904157911379685e+306];
[378.3391707266144,636.6406103861189,-5.0,-0.027328026033274,0.0,-2.2487585200021627,-1000.0];
v4.length -= 194;
0 + 26471;
-1000000000000.0 || -1000000000000.0;
26471 ** 0;
Math.random();
class C3 {
    static {
        delete this[1228165326];
    }
    static #h;
    a = 128;
    set c(a7) {
        a7.b &= a7;
        ("L").__proto__;
        try {
            new BigInt64Array(1);
        } catch(e12) {
        }
        try {
            new Int32Array(2);
        } catch(e16) {
        }
        try {
            new Int32Array(787);
        } catch(e20) {
        }
    }
}
const v21 = new C3();
const v22 = new C3();
const v23 = new C3();
function f24() {
    return v23;
}
function F25(a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = "L";
    } catch(e30) {
    }
    try {
        this.d = a29;
    } catch(e31) {
    }
}
new F25(v22, v23, C3);
new F25(v22, v22, v22);
new F25(v22, v21, v21);
class C35 extends f24 {
    static n(a37, a38, a39) {
        new F25(a38, a39, a38);
        new Date();
        return 35723;
    }
    #d;
    static #b = C3;
    #c;
    e;
}
const v46 = new C35();
new C35();
new C35();
v22 < F25 ? v22 : F25;
for (let v51 = 0; v51 < 21; v51++) {
    C35[152] ^= v51;
    (-357878603 & v21) << v46;
    Math.log10(v21);
    Math.clz32(-357878603);
}
