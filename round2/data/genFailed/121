const t0 = "l1xan";
t0[3] += 3089;
let v15;
try {
const t0 = 9;
v15 = new t0();
} catch (e) {}
let {"a":v16,"length":v17,} = "7goqB";
for (let v18 = 0; v18 < 32; v18++) {
    v15["p" + v18] = v18;
}
[55878,-6195,-2,39810,6,4294967296,9223372036854775807,-424465278,-65536,904093653];
[-1,-5,2147483647,4096];
[49163,536870912,779600636,-3];
class C3 {
    c = "UTC";
    static o(a5, a6) {
        this[1] |= a5;
        try {
            ("isView").toLowerCase();
        } catch(e8) {
        }
        return this;
    }
    static #e;
    ["UTC"];
    static 1239 = "-297594879";
}
const v9 = new C3();
const v10 = new C3();
new C3();
class C12 {
    [v9];
    #o(a14, a15, a16, a17) {
        Reflect.construct(C3, [], C3);
        return v10;
        return v9;
    }
    #f = "UTC";
    1 = v10;
    #b;
    static #h;
}
const v21 = new C12();
new C12();
new C12();
try {
    new Uint16Array(3999);
} catch(e27) {
}
try {
    new BigUint64Array(269);
} catch(e31) {
}
try {
    new BigInt64Array(4054);
} catch(e35) {
}
let v36;
try { v36 = ("-297594879").substring(4054); } catch (e) {}
const v38 = Symbol.toPrimitive;
const v39 = v36[v38];
Reflect.construct(C12, [], v39);
[v21,v9,[[v38]],4054];
