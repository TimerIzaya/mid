const v0 = [Infinity,909675.4850929976,243035.31624561455,Infinity,-1.0,-1e-15,-1.0,1e-15,-830.8741081265912,-1e-15];
const v1 = [4.145920503778502e+307,-1.0,-1.7976931348623157e+308,-1.7976931348623157e+308,-2.2250738585072014e-308,-1e-15];
const v2 = [1000.0,1.2055454918155106e+308,-1.0,-4.0];
class C6 {
    static #e = 8;
    valueOf(a8, a9, a10) {
        const v12 = Symbol.replace;
        a10[v12] = v2;
        const v14 = Symbol.iterator;
        const v15 = a10[v14];
        let v16;
        try { v16 = new v15(a9, a9, -2007005858, v14, v12); } catch (e) {}
        return v16;
    }
    static #f = v2;
    #g;
}
new C6();
new C6();
const v19 = new C6();
const v20 = [-260050723,65536,13];
const v21 = [9223372036854775807,2,-1619607167,60143,-1523329491,663028648];
[5];
const o23 = {
    __proto__: v19,
    "f": v1,
    "b": v0,
    ...v20,
};
try { v20.copyWithin(-2007005858, -2007005858, -2007005858); } catch (e) {}
v1[6] = 8 ** v19;
v21.__proto__;
