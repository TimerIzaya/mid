class C3 {
    static 1 = -42490;
    static set d(a5) {
        try { a5(a5, a5, a5, -42490); } catch (e) {}
    }
    constructor(a8) {
        Reflect.construct(a8, [], a8);
    }
    h;
}
new C3(-42490);
const v13 = new C3(8);
const v14 = new C3(8);
const v18 = [2.220446049250313e-16,-1.0,0.4353606407928411,6.083414003431379];
const v19 = [-3.436905594811357,-1000000.0,0.7830989589483444,-757.0505150641579,-1.2401960239537082e+308,9.577254792601];
const v20 = [-8.469114957866083,708549.2479468631,900125.648338764,-0.0];
v20[-907132958] = v14;
function F21(a23, a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = v20;
    this.d = a25;
}
new F21(v20, 4, v14, v19);
new F21(v20, 4, v13, v19);
new F21(v18, 8, v13, v18);
let v6 = -1324393658n;
new Set();
class C11 {
    static #n(a13, a14) {
        try { a14(this, Set); } catch (e) {}
        try { new a14(4, a14, -6n); } catch (e) {}
        v6++;
        ("symbol")[0];
        return "-7155";
    }
    static 65536 = "symbol";
    static #toString(a20, a21, a22, a23) {
        [5.0,-9.482258300427598e+307,0.2940970981675469,522.9131353532505,1000.0,3.8711462289578107e+307,-350.5877443264867,517864.255056415,-3.0,Infinity];
        [354.44233832905456,7.743349413179359e+307,-1000000.0,-2.2250738585072014e-308,-1000.0,-251.53986299003645,1e-15];
        [-2.0,7.622389379080271,1000.0];
        return "h";
    }
    static f;
}
new C11();
new C11();
new C11();
const v34 = 935.2036201318633 ** -4096;
Math.random();
Math.abs(v6);
Math.log10(v34);
Math.cbrt(-4096);
+-4096;
