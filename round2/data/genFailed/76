class C9 {
    static #c;
    static #valueOf(a11, a12, a13) {
        try { ("getSeconds").split(a13, a11); } catch (e) {}
        a11 = -60600;
        super[-12] = "8";
        super["8"] = a11;
        return a13;
    }
    g;
    #d = "valueOf";
    static #a = -12;
}
new C9();
new C9();
new C9();
function F18(a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a21;
    this.c = 252697451;
}
new F18("g", 252697451);
new F18("getSeconds", -12);
new F18("asinh", -60600);
const o27 = {
    "maxByteLength": 222,
};
const v29 = new ArrayBuffer(9, o27);
new Uint32Array(v29);
try {
    new Float32Array(129);
} catch(e3) {
}
try {
    new BigInt64Array(246);
} catch(e7) {
}
try {
    new Uint8ClampedArray(0);
} catch(e11) {
}
class C15 extends BigInt64Array {
    static #d = 0;
    47 = -22234;
    static {
        const v17 = super[this];
        function F18(a20, a21) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = this;
            } catch(e22) {
            }
        }
        new F18(129, -22234);
        new F18(v17, 129);
        new F18(129, -22234);
    }
}
new C15();
const v27 = new C15();
const v28 = new C15();
try {
    v27[6] = v28;
} catch(e29) {
}
for (let v30 = 0; v30 < 84; v30++) {
    const v32 = new WeakSet();
    try {
        v32.valueOf = WeakSet;
    } catch(e33) {
    }
}
