function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.b = 6955;
}
const v3 = new F0();
const v4 = new F0();
const v5 = new F0();
function f6(a7, a8) {
    const o9 = {
        [a8]: a8,
        [a7]: F0,
        ...v4,
        ...a8,
        ...a7,
        "g": v3,
        __proto__: a8,
        "f": v4,
        [v3]: a8,
        ...a7,
        "d": v3,
    };
    return o9;
}
const v10 = f6(v5, v3);
const v11 = f6(v5, v4);
const v12 = f6(v5, v4);
function f13() {
    return v10;
}
class C14 extends F0 {
    constructor(a16, a17, a18) {
        super();
        return v4;
        try {
            super.sqrt(a18, this, a17, a17);
        } catch(e20) {
        }
    }
    static 156481826;
    static [f13] = f6;
    static #g = v4;
}
const v21 = new C14(v3, f6, C14);
new C14(v21, C14, v11);
const v23 = new C14(v4, f6, v12);
f13();
%PrepareFunctionForOptimization(f13);
const v25 = f13();
f13();
%OptimizeFunctionOnNextCall(f13);
let [v28] = f13();
v23.b = C14;
v25.f = v12;
v3[1] = F0;
