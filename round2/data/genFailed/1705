const v2 = new Float64Array(79);
const v5 = new Uint8Array(1024);
new Uint16Array(3);
class C9 extends Float64Array {
    f;
    constructor(a11, a12, a13, a14) {
        super(a12);
        let v15;
        try { v15 = this.reverse(); } catch (e) {}
        v5[v15] = a11;
        super[a14] = a12;
        try {
            new Uint8Array(59525, a13);
        } catch(e18) {
        }
    }
}
new C9(79, 79, 79, 1024);
new C9(79, 79, 1024, 1024);
new C9(3, 3, 1024, 79);
var e = Float64Array;
v2.byteLength &= 79;
for (let i23 = 0; i23 < 0; i23++) {
    const v29 = ~1024;
    const v30 = [v29];
    [v30,v2,v30,v29];
    [v30];
    const o35 = {
        "maxByteLength": 16,
    };
    const v37 = new ArrayBuffer(16, o35);
    new BigUint64Array(v37);
}
