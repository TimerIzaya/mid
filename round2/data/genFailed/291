let v1 = -1000000000.0;
class C3 {
    #n(a5, a6) {
        const v7 = ("push")[1847];
        v7.__proto__ = v7;
        v1 * v1;
        v7[1] = v7;
        return v7;
    }
    constructor(a10) {
        super.h >>>= v1;
        try { new a10(..."push", a10, this, this, ..."push"); } catch (e) {}
    }
    #f = v1;
    static #g;
    static #d;
}
const v12 = new C3("push");
const v13 = new C3(v1);
const v14 = new C3(v13);
class C15 extends C3 {
    [v14];
    set f(a17) {
        v1 |= a17;
        Object.defineProperty("push", "length", { configurable: true, value: a17 });
    }
    constructor(a19, a20, a21) {
        super(a20);
        const t28 = "push";
        t28.f = "push";
        v14[4];
        [-1063458558,16];
        [-256,9007199254740992,1,603326620,26074];
        [9007199254740992,2147483648];
    }
    #d = v14;
}
const v26 = new C15(v13, "push", C3);
new C15(C3, v26, C15);
let v28 = new C15(v13, C3, v13);
class C29 extends C3 {
    16;
    static g = v13;
    static [v1] = C15;
    static m(a31, a32, a33) {
        const v37 = !a33;
        34938 << 36448;
        a32 / v37;
        return v26;
    }
    [v13] = v13;
    #g = v12;
}
const v40 = new C29();
new C29();
const v42 = new C29();
new C15(C3, v40, v12);
let v44 = 0;
while (v44 < 0) {
    let v47 = null;
    ({"c":v28,"f":v47,} = v42);
    v44++;
}
try {
    new Uint8Array(3);
} catch(e6) {
}
try {
    new Float32Array(2823);
} catch(e10) {
}
try {
    new BigUint64Array(220);
} catch(e14) {
}
function F15(a17, a18, a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 220;
    } catch(e21) {
    }
    try {
        this.a = BigUint64Array;
    } catch(e22) {
    }
    try {
        this.g = a18;
    } catch(e23) {
    }
}
const v24 = new F15(9, 3, Uint8Array, 268435456);
const v25 = new F15(220, 3, v24, 9);
new F15(9, 2823, v24, v24);
class C27 extends Uint8Array {
    10000;
    static #p(a29, a30) {
        Float32Array[8] = a29;
        const v31 = v25.a;
        try {
            super[v31] = this;
        } catch(e32) {
        }
        return v25;
    }
    [2823];
    static 220;
    844;
    static d;
    f = -2;
}
new C27();
new C27();
const v35 = new C27();
[-12184];
const v37 = [36069,256,-602087740,-60522];
[3,9,-48159412,44569,-40959,10,1024];
function f39(a40, a41, a42) {
    'use strict';
    v37 !== a42 ? v37 : a42;
    return C27;
}
f39(268435456, v35, v24);
const o48 = {
    "maxByteLength": 10,
};
const v50 = new SharedArrayBuffer(10, o48);
try {
    new BigUint64Array(v50);
} catch(e53) {
}
