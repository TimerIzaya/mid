function f3() {
    return 1.7976931348623157e+308;
}
function f4() {
    return -0.0;
}
[-1565980155,1470928914,-128,-21404,2,6,-4096,36602,21384];
const v9 = [477042016,-9,-10,-4294967295];
[-9223372036854775808,-1,4294967295,-4294967297,-11477,-2147483647,8,805971109,2147483648,5];
function f11() {
    return -0.0;
}
const v15 = ("undefined")[9];
const v16 = ("setMinutes")[f3];
if (v9 < f11) {
    Object.defineProperty(v9, 512, { writable: true, configurable: true, set: f4 });
    Reflect.construct(v15, [], f11);
} else {
    [] = "myDo";
    f11 = v16;
}
const v0 = [1.0555314414588969e+308,5.0,930.7878764526092,2.0,1.2505452050562357e+308];
const v1 = [-540680.0587295049,2.220446049250313e-16,0.46532415963746665,-1000000000.0,1000000000.0,-4.0,1.7976931348623157e+308,-1.3153292087889037e+308,-2.9739979590702584e+307];
const v2 = [Infinity,-43780.132862915285,-267783.2175159642,-234901.6185224275,0.0,104526.20462093991,-2.220446049250313e-16,1.8738096588163629];
const v3 = /(?:foo)/sdv;
const v4 = /Hrxyz?/imu;
const v5 = /abc+?0a{0}J(?:ab)I(?:a*)*/igv;
function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v3;
    } catch(e12) {
    }
}
const v13 = new F6(v5, v3, v2, v1);
const v14 = new F6(v3, v4, F6, v0);
const v15 = new F6(v5, v5, v2, v0);
const v16 = v4[1764];
for (const v17 of v1) {
    try {
        v14.__proto__ = v14;
    } catch(e18) {
    }
}
v13.d <<= v16;
v15 - v13;
Reflect.construct(v16, [v16,v15,Reflect,v1,Reflect], F6);
