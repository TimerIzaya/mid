const v0 = /PMab\b\d\bcd/myid;
/(?=.)((?=.)?)/misdu;
const v2 = /(\xed\xb0\x80)\x01abc+/gydv;
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = v2;
}
const v6 = new F3(v0);
new F3(v0);
new F3(v2);
[-1.7976931348623157e+308,1000000.0,-3.4214923706726914,-9.258689529713887e+307,1.7976931348623157e+308,1.7884348217337974e+308];
[843.1566459159349,-5.0];
const v11 = [1000000000.0,8.202957853819317,0.08255419744073189,0.0,-5.0,159.65481538061817,1e-15,-1000000000000.0,7.939801920719063];
class C12 {
    toString(a14, a15, a16, a17) {
        let v18 = 0;
        do {
            const v19 = super[a16];
            v2.source &&= v18;
            const o20 = {
            };
            new Proxy(v19, o20);
            v18++;
        } while (v18 < 2)
        return a15;
    }
}
new C12();
new C12();
const v28 = new C12();
function f29() {
    return v28;
}
let v31 = -6;
let v32 = 0;
++v31;
const v34 = +v11;
v34 % v32;
F3 + v11;
++v32;
v11 ** v34;
v6[f29];
