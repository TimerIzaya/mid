let v8 = -128n;
const v9 = ["apply","expm1",-2147483648n,-47505n,v8];
[-2147483648n,-2147483648n,v9,v9];
const v11 = [-793n,v9];
class C12 {
    get h() {
        super["bigint"] = "expm1";
        let v17 = +1669247692;
        --v17;
        v8++;
        const v20 = ~v17;
        !v8;
        Math.tan(1669247692);
        return v20;
    }
    10 = -47505n;
}
new C12();
new C12();
const v25 = new C12();
let {"length":v26,...v27} = "apply";
6n ^ v27;
const v29 = v11.length;
const v31 = [];
Reflect.construct(C12, v31, C12);
v25[v11] = v8;
try {
    v31.fill(-1.7976931348623157e+308, v29, 5);
} catch(e36) {
}
