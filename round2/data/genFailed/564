class C3 {
    static a = 128;
    [-2.2250738585072014e-308] = -1000000000.0;
    static #p(a5, a6) {
        a5[this] = this;
        super[a5] = a6;
        return a6;
    }
    #f = -2.2250738585072014e-308;
    g;
    34;
}
const v7 = new C3();
new C3();
const v9 = new C3();
[2.0,-209776.1081164846];
[NaN,NaN,3.4038086413801594,1.0,-2.525533583298687,-5.707097842688769];
const v12 = [1.506278003920631,0.014538369906981208,0.09660430436659162,-941.359669372223];
C3[0];
-1000000000.0 < v9 ? -1000000000.0 : v9;
v7.g;
for (let [v17,,v18] of v12) {
}
v9 / v7;
let v25 = C3--;
Math.abs(C3);
const v27 = ++v25;
++C3;
Math.clz32(v27);
C3--;
class C3 {
    set h(a5) {
        const v6 = a5?.[129];
        let v7 = 10;
        for (; v7--;) {
            -(v6 - -572839.9715386049);
            Math.sign(-572839.9715386049);
            ~this / 10000;
        }
    }
}
new C3();
const v18 = new C3();
new C3();
[-1000000000000.0,-4.348884093898877,0.8383725564938838,-386.7749710811745,1.7976931348623157e+308,-342648.2300396027];
[-1.0,0.663491185419191,1.7976931348623157e+308,-57675.50854656566,2.220446049250313e-16,-2.220446049250313e-16,9.598274435172861,-2.220446049250313e-16,2.689437559062071];
[-2.2250738585072014e-308,-860117.9323664301,0.3091716377259923,-Infinity];
try {
    new Float64Array(8);
} catch(e29) {
}
try {
    new Uint8ClampedArray(3149);
} catch(e33) {
}
try {
    new Int16Array(129);
} catch(e37) {
}
class C38 extends Uint8ClampedArray {
    static [v18];
    536870912;
    g;
    #a;
}
new C38();
new C38();
new C38();
