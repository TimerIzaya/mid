class C3 {
    set e(a5) {
        for (let v6 = 0; v6 < 32; v6++) {
            const t3 = "caller";
            t3["p" + v6] = v6;
        }
    }
    static #c;
    [-1000.0] = "function";
    ["caller"];
    2;
}
new C3();
new C3();
new C3();
function f12() {
    return "function";
}
const v13 = [11,1,-256,16,1024];
[268435456,65537];
[1073741824,-9223372036854775807,947862076,16,-1,-65537,4,305825517];
let v19;
try { v19 = f12(..."-4294967297", ...C3, ..."-4294967297", v13, ..."-4294967297", -1000.0); } catch (e) {}
v19 instanceof v19;
for (let v21 = 0; v21 < 62; v21++) {
    const o24 = {
        "maxByteLength": 1073741823,
    };
    const v26 = new ArrayBuffer(129, o24);
    new BigUint64Array(v26);
}
const v0 = [-2.0,1e-15,-2.0,5.459572733209493,-Infinity,-2.0,0.883770202877773,-664400.0198474922];
const v1 = [-608.475751356945];
const v2 = [-9.734872963971934,0.7394257712801022,0.6602623455342941,1.3687919558776765e+308,1.0,0.8673967622381917,-1000000.0,3.0,0.7426195560841556,1.2873044831459902e+308];
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a6;
    } catch(e7) {
    }
    try {
        this.a = v2;
    } catch(e8) {
    }
}
const v9 = new F3(v0, v1);
const v10 = new F3(v2, v1);
new F3(v0, v2);
function f12(a13, a14, a15, a16) {
    const o28 = {
        set f(a18) {
            v1 - Uint8Array;
            let v22 = 536870887;
            const v23 = -v22;
            --v22;
            const v25 = -v23;
            Math.ceil(v25);
            -v25;
        },
    };
    return o28;
}
const v29 = f12(v10, v10, v2, v1);
const v30 = f12(v1, v9, v2, v0);
f12(v29, v10, v0, v0);
v10.a -= v30;
Object.defineProperty(v0, "length", { set: f12 });
f12(v30, v10, v0, v2);
let v33 = 0;
while (v33 < 0) {
    v33++;
}
