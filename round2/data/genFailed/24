class C3 {
    valueOf(a5) {
        Math.tan(this);
        Math.atan2(-12, this);
        Math.acos(a5);
        Math.tan(a5);
        let v13 = -1073741824 - a5;
        return v13--;
    }
    d = "undefined";
    [794986.0606372748];
    [NaN];
}
new C3();
new C3();
new C3();
/[a(?:b)(?:a+)?abc|def1?]/myiv;
/Wa[bc]d()[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]*/gmv;
/(?!\1(a\1)\1)\1?/ms;
const v24 = [64,8,2,307973175];
[925,2147483648,127,59145,5855,-10,268435440];
[12,12,-35877];
const o27 = {
};
o27.b = v24;
const o28 = {
};
o28.b = v24;
o28.g = C3;
const o29 = {
};
o29.b = v24;
o29.g = C3;
o29.d = v24;
const o30 = {
};
o30.b = v24;
o30.g = C3;
o30.e = v24;
try {
    new Uint32Array(2479);
} catch(e3) {
}
let v4 = 963;
try {
    new Uint16Array(v4);
} catch(e7) {
}
try {
    new Uint32Array(512);
} catch(e11) {
}
class C12 extends Uint32Array {
    m(a14, a15, a16) {
        const v17 = a16 ** 2479;
        let v18;
        try { v18 = this.subarray(a14, v17); } catch (e) {}
        try { v18.valueOf(); } catch (e) {}
        v18?.[123];
        return Uint32Array;
    }
    b = 512;
    536870889 = Uint32Array;
    [-1] = Uint32Array;
    f = v4;
}
new C12();
new C12();
new C12();
new Array(7);
try {
    const o27 = {
    };
    new Uint32Array(o27, 7, 7);
} catch(e29) {
}
let v32 = -9223372036854775807;
-v32;
const v34 = v32--;
++v4;
const v36 = v32 >> v4;
!v34;
Math.asin(-62716);
Math.sign(v36);
