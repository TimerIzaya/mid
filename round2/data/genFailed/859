/(?<!)?/gmysdv;
/y\u{12345}\u{23456}/yisv;
const v2 = /(N[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf])/ysdv;
const v5 = new Int32Array(15);
const v8 = new Float64Array(3875);
new Uint16Array(13);
const v12 = [-1000000.0,1.7976931348623157e+308,1000.0];
const v13 = [1000000.0,4.5941294945947995,-8.294758207299186e+307,-1000000.0,884.5082620272872,1.7976931348623157e+308,-670.0133155394248,-4.637640779077071,0.7525006748965551,95.58967855891296];
[-1000000.0,-3.0];
function f15() {
    return v5;
}
new Float64Array(13, 13, 3875);
[774256187,-268435456,-1,1552167625,10,-6,-9007199254740992,-33424];
const v18 = [-55751,-10412,128];
const t13 = [-9007199254740992,-3,2147483648,127,5,2147483647,-8,-37106,4294967297,16];
t13.__proto__ = v13;
[v8];
[15,v2,v18];
[v12];
const v6 = /E\xed\xb0\x80/sidmyv;
/a$(x)(x)(x)\2O*/sidv;
/Rk/gmu;
const v9 = /(?<=a)z()(?:ab)?/idgv;
/[(\1a)a{1,2}?]/igv;
const v11 = /D(?<=a)*/dgm;
function f12() {
    return v11;
}
function f13(a14, a15, a16) {
    function f18(a19) {
        Math.abs(a19);
        -a19;
        Math.ceil(256);
    }
    this.onmessage = f18;
    try {
        v11.toString = f18;
    } catch(e26) {
    }
}
const v29 = [v9,v6,268435456n];
const o30 = {
    "arguments": v29,
    "type": "function",
};
new Worker(f13, o30);
