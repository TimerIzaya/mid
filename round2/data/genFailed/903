const v1 = new Set();
class C2 extends Set {
    m(a4) {
        return a4?.[a4];
    }
    constructor(a7, a8) {
        super(v1);
        this[4294967295] >>>= a8 || a8;
        super[this];
        super[a8] = a8;
        const v11 = a7?.[a8];
        for (let v12 = 0; v12 < 32; v12++) {
            v11["p" + v12] = v12;
        }
    }
}
const v15 = new C2(Set, C2);
const v16 = new C2(C2, C2);
const v17 = new C2(v1, v1);
class C18 {
    set c(a20) {
        try { a20(a20, Set); } catch (e) {}
        function f22(a23) {
            return v16;
        }
        class C24 extends f22 {
            b = f22;
            3;
        }
    }
    constructor(a26, a27) {
        const o31 = {
        };
        o31.e = v17;
        const o32 = {
        };
        o32.e = v17;
        o32.b = C2;
        const o33 = {
        };
        o33.e = v17;
        o33.b = C2;
        o33.g = v16;
        const o34 = {
        };
        o34.e = v17;
        o34.b = C2;
        o34.f = v15;
    }
}
const v35 = new C18(v16, v16);
let v36 = new C18(v1, v16);
const v37 = new C18(Set, v16);
class C38 extends Set {
    static n(a40, a41, a42, a43) {
        return ("p").normalize("NFD");
    }
    static #p(a48, a49, a50, a51) {
        a50[-2] = a48;
        return a51;
    }
    static m(a53, a54, a55, a56) {
        const v57 = a55[this];
        a55[7];
        let v59 = 0;
        while (v59 < 10) {
            v36 >>= this;
            const v62 = v57 instanceof C18;
            v62[6] = v62;
            super.size;
            v59++;
        }
        return v17;
    }
}
new C38();
new C38();
const v67 = new C38();
const v68 = [v67,v1,C18,v37];
let v69 = [v35];
let v70 = [v37,v16,C2,v69,v15];
try {
    new Set(v70);
} catch(e72) {
}
const v73 = v69 && v17;
C18.__proto__ = v68;
({"__proto__":v70,...v69} = C18);
v73.__proto__;
[-1024,-1024,8];
const v4 = [-4096];
const v5 = [v4,v4,-4096];
function f6() {
    return 8;
}
new Array(257);
try {
    new Uint8ClampedArray(453);
} catch(e13) {
}
try {
    new Float32Array(814);
} catch(e17) {
}
try {
    new Uint16Array(154);
} catch(e21) {
}
let [v22,v23,v24,v25] = v5;
new Uint16Array(-1024, 453);
[691392070,-15217,-9007199254740991,840386741,-4294967295,-4];
[536870912,-1073741824,536870912];
let v30 = ([7,65536,5,703150122]).length;
try {
    v30 ^= 814;
} catch(e31) {
}
