new Int16Array(2);
let v4 = Float64Array;
new v4(10);
const v8 = new BigUint64Array(10);
let v10 = new WeakSet();
const v11 = [v10,2];
const v12 = [Int16Array,v10,v10,10,v11];
const v13 = [10];
let v18 = new BigUint64Array(10);
({"b":v18,"d":v4,"length":v10,} = "object");
delete v12[16];
function f20(a21, a22, a23) {
    try { a21(Int16Array, ...v13, WeakSet, 10, a21, Int16Array); } catch (e) {}
    return BigUint64Array;
}
f20(v11, v18, BigUint64Array);
v8[4] = v12;
try {
    new Int16Array(2);
} catch(e7) {
}
try {
    new Int16Array(2939);
} catch(e11) {
}
try {
    new Uint8ClampedArray(6);
} catch(e15) {
}
const v17 = new Set();
for (let i19 = 0; i19 < 10; i19++) {
    Object.defineProperty(v17, 268435440, { value: i19 });
}
