const v0 = [-2.0,-4.0,-9.86090937083578,-4.0,-1.5525284993863814e+308,-1000000.0,1.0,1000.0,-167516.61596694763,0.8895132427438579];
const v1 = [-2.220446049250313e-16,0.48234975577306827,-1000.0,1000.0,-838050.1010860472,-8.133683665801943,-914264.4253377526,2.3714550921052364,2.0];
[-3.0,-247923.23184459715,-2.4280616853634545,5.0,-1000000000000.0];
const v5 = new Float32Array(1538);
new Uint8ClampedArray(14);
new Float64Array(127);
class C12 extends Float32Array {
    static 4016 = v5;
    set f(a14) {
        try { v0.slice(); } catch (e) {}
    }
    d;
    n(a20, a21) {
        class C22 {
            static #e;
            c = v1;
            static e;
        }
        new C22();
        new C22();
        new C22();
        return v0;
    }
}
new C12();
const v27 = new C12();
const v28 = new C12();
class C30 extends v27.constructor {
    static c;
    20;
    3;
}
new C30();
Float32Array in v28;
[1.468734938658714e+308,168601.71317100362,0.5973553365871801,-447574.6688507694];
[291522.3361916349,-2.0,-1000.0];
[-51.29198414741734,1000000.0,-Infinity,-532.089123857367,890.4923843508402];
function f3() {
    return 536870888n;
}
const v5 = [f3,[536870888n,9n,9n,9n]];
const v6 = [9n,9n,f3,v5,f3];
class C10 extends f3 {
    c;
    [536870888n] = 9n;
    #p(a12, a13, a14, a15) {
        const v16 = /(?:ab)YaO\u0060Z*/gv;
        /a\sc/imu;
        /(?:ab)|cde/siduy;
        const v19 = super.a;
        try { new v19(v16, f3, v16, 881.1876320344718); } catch (e) {}
        return 1.7491221842160118e+308;
    }
    g;
}
const v21 = new C10();
const v22 = new C10();
const v23 = new C10();
v6[249];
Object.defineProperty(v5, v6, { configurable: true, enumerable: true, set: f3 });
v23[v5];
if (v22 != v6) {
    Object.defineProperty(v6, "length", { set: f3 });
} else {
    try {
        v21.toString = f3;
    } catch(e27) {
    }
}
