let v2 = -1519181352;
class C3 {
    static 8 = -4294967295;
    constructor(a5) {
        const v6 = this[10];
        v6 instanceof v6;
        super.b &= -4294967295;
    }
    static get f() {
        v2 = -4294967295;
        this[10];
        super.d;
        /\xed\xb0\x80/yd;
        const v12 = /cg(x)(x)(x)\3/iu;
        /ixxyz{1,32}?/gyisdu;
        return v12;
    }
}
new C3(C3);
const v15 = new C3(-3.0);
const v16 = new C3(v2);
const v17 = [934925.7795799735,0.5126670437148554,-Infinity,NaN,Infinity,-7.169559661285783,-1000.0,5.0];
[-2.2250738585072014e-308,-1.7976931348623157e+308];
const v19 = [0.39740582561349014,5.0,-2.333592909775204,-9.281966360296255e+307,Infinity,2.220446049250313e-16,-5.0,0.10545963020447158,-4.096531334129267,1.7976931348623157e+308];
function F20(a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a23;
    this.f = v16;
    this.c = v17;
}
new F20(v2, v16);
new F20(-4294967295, v15);
const v26 = new F20(v16, v19);
try { v19.findLastIndex(v26); } catch (e) {}
const o30 = {
    "maxByteLength": 64,
};
const v32 = new SharedArrayBuffer(7, o30);
new Uint32Array(v32);
