function f0() {
    const o16 = {
        o(a5, a6) {
            new Uint32Array(417);
            new Uint8ClampedArray(90);
            new Int16Array(1493);
            return 1000.0;
        },
    };
    return o16;
}
f0();
f0();
const v19 = f0();
const v20 = /p(\2)(\1)/gsdu;
/M\u{12345}/msdu;
/(ab|cde)^xxx$[]/miu;
const v23 = [4.6861737057140544,0.0,-0.0,-507967.2296125917,-1000000000000.0,4.597850721146148,1e-15,-2.0,5.088710568245801];
[-1.553719533696029e+308,-1e-15,0.0,-1.0,-3.0,-1000.0];
let v25 = [-769120.9917580708,544137.8912177861,Infinity,1000000000.0,Infinity,2.220446049250313e-16];
[16,9007199254740991,-1488,9223372036854775807,-13,-9223372036854775808,127];
[-4294967296];
const v28 = [-65536,-1,-1218274080,-267344451,6,-268435456,842161786,-25488];
function f29(a30) {
    return v19;
}
class C31 extends f29 {
    [v20];
    static 7;
}
v23.length = v25 += v28;
try { v28.flatMap(f29, v25); } catch (e) {}
