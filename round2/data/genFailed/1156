new BigInt64Array(9);
const v8 = new Int32Array(3);
new Uint32Array(103);
function f12(a13, a14) {
    const o28 = {
        __proto__: v8,
        [-1]: "OfY3",
        ..."n",
        set e(a16) {
            const v18 = Symbol.iterator;
            const o27 = {
                [v18]() {
                    let v20 = 10;
                    const o26 = {
                        next() {
                            v20--;
                            const v24 = v20 == 0;
                            const o25 = {
                                "done": v24,
                                "value": v20,
                            };
                            return o25;
                        },
                    };
                    return o26;
                },
            };
        },
    };
    return o28;
}
const v29 = f12("127", 103);
const v30 = f12("OfY3", 9);
f12("OfY3", 9);
throw 4.80489386299662e+307;
let v35;
try { v35 = v30.register(1.5010862331311866e+308, "n", BigInt64Array); } catch (e) {}
v35 = 1.5010862331311866e+308;
v8.byteLength = 3;
v29.__proto__;
class C3 {
    [0.14005831334448604] = 9007199254740990;
    static g;
    4;
    static #c;
    static #e = 9007199254740990;
    n(a5, a6) {
        try {
            super.h = 0.14005831334448604;
        } catch(e7) {
        }
        return 9007199254740990;
        return this;
    }
    #d = 2;
    static 65536 = 2;
}
new C3();
new C3();
new C3();
let v12 = 483750483;
/\cj\cJ\ci\cI\ck\cK/sgmuy;
/\b(?=.)MC^xxx$?/dmv;
/cabc|defnn8/v;
if (6) {
    try {
        new BigInt64Array(516);
    } catch(e23) {
    }
    try {
        new BigUint64Array(6);
    } catch(e27) {
    }
    try {
        new Float32Array(213);
    } catch(e31) {
    }
} else {
    try { v12(6); } catch (e) {}
    try {
        v12 = 6;
    } catch(e33) {
    }
}
