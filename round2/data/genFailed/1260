const v1 = new WeakSet();
new Float32Array(129);
const v13 = new Float32Array(4096);
new Uint8ClampedArray(7);
try {
    new Float32Array(v1);
} catch(e18) {
}
Object.defineProperty(v13, 217, { writable: true, enumerable: true, value: 1000n });
const o19 = {
};
new Proxy(v13, o19);
%VerifyType(129);
function f0() {
    const o21 = {
        4: -3.083658471921864,
        "a": -4.982487049072299,
        "g": -3.083658471921864,
        142: "u",
        [-3.083658471921864]: "u",
        [-4.982487049072299](a5, a6) {
            let v7 = 10;
            for (; v7--;) {
                this.__proto__;
                const v11 = Symbol.iterator;
                const o20 = {
                    [v11]() {
                        let v13 = 10;
                        const o19 = {
                            next() {
                                v13--;
                                const v17 = v13 == 0;
                                const o18 = {
                                    "done": v17,
                                    "value": v13,
                                };
                                return o18;
                            },
                        };
                        return o19;
                    },
                };
            }
            return v7;
        },
    };
    return o21;
}
const v22 = f0();
const v23 = f0();
const v24 = f0();
let v27 = 13394;
const v28 = [-1,f0];
const v29 = [v28];
const v30 = [f0,v22,9007199254740992,v22,v29];
function f31() {
    return v30;
}
class C32 {
    static {
        this / this;
        (v27 * v23) | 9007199254740992;
    }
    constructor(a41, a42, a43) {
        try {
            new f0();
        } catch(e45) {
        }
    }
}
const v46 = new C32(v29, C32, v29);
const v47 = new C32(v46, v24, v30);
new C32(v47, v28, v30);
for (let [v49,...v50] of v30) {
    const v51 = v50 >>> v28;
    try {
        v27 = v51;
    } catch(e52) {
    }
}
f0 ** v46;
