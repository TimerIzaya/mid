[2.220446049250313e-16,1000000000.0,0.0,0.6079840124118028,247737.60195002914,-4.562054628930926e+307,-1000000.0];
const v4 = [0.3642172701209201,2.2250738585072014e-308,2.220446049250313e-16,-9.007937505793533,-2.0,-1000000000000.0,1000000.0,-356398.94570018817,Infinity,-1.0992156038167657e+306];
const v5 = [-4.222602659132935,-881.0215951938159,0.584871382233093,-2.0,2.220446049250313e-16,-2.477740345131818,1000.0,-4.0,1.0979703307199216e+308,-6.23178885029784e+307];
const v11 = new BigInt64Array(8);
const v14 = new Uint8Array(613);
const v17 = new Uint32Array(4);
v17 != 4;
Object.defineProperty(v5, 3560814100, { value: 127 });
v11 == 4;
v14[2];
v11[6] = 38264.42910257017;
let {"length":v24,...v25} = v4;
const v27 = Symbol.iterator;
const o36 = {
    [v27]() {
        let v29 = 10;
        const o35 = {
            next() {
                v29--;
                const v33 = v29 == 0;
                const o34 = {
                    "done": v33,
                    "value": v29,
                };
                return o34;
            },
        };
        return o35;
    },
};
[];
try {
    new Uint8Array(86);
} catch(e4) {
}
try {
    new Uint16Array(1428);
} catch(e8) {
}
try {
    new Uint8Array(127);
} catch(e12) {
}
const v13 = [-1.7976931348623157e+308,3.0];
[2.285708343217955,-591319.2986854332,419440.32583678537,1000.0,-1000000.0,-988.674751855263,-1.4131345371726975e+307,-1.7976931348623157e+308,3.0];
[1e-15,596661.1994064588,0.3682099120535812,-Infinity];
let v19;
try { v19 = Uint16Array(v13, 86, 1428); } catch (e) {}
Reflect.construct(Uint8Array, [86], v19);
try {
    v19.valueOf = v19;
} catch(e23) {
}
