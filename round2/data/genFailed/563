const v2 = new Uint16Array(512);
new Int8Array(0);
new BigUint64Array(256);
const v9 = [0.2576389594876901,436.2271206996429,-0.7000947762566856,0.6378419074790681];
const v10 = [1e-15,0.6635410797325023,-5.26758517483739,-2.2250738585072014e-308];
[Infinity,-3.0];
const v13 = new Map();
const o16 = {
    "maxByteLength": 1073741823,
};
const v18 = new ArrayBuffer(257, o16);
new Int16Array(v18);
v13["set"](...v10, Int8Array, ...v9, v2);
class C3 {
    set b(a5) {
        [this,this,a5];
        /K[^123]/smyv;
        /[a[^a]((?<a>.)\xf0\x9f\x92\xa9a(?!b))]/dgmv;
        /(K*)/siyv;
    }
    d;
    constructor(a11) {
        try { this(this, -4096n, -177048734n, a11); } catch (e) {}
        this.d;
        try {
            new Uint16Array(3854);
        } catch(e20) {
        }
        try {
            new Int8Array(3190);
        } catch(e24) {
        }
        try {
            new Int32Array(255);
        } catch(e28) {
        }
    }
}
const v29 = new C3(-177048734n);
new C3(1n);
const v31 = new C3(-177048734n);
class C32 {
    static get h() {
        async function f34(a35, a36, a37, a38) {
            ({"d":a35,} = a38);
            let v39;
            try { v39 = this.setUTCMilliseconds(-177048734n, a35, a36); } catch (e) {}
            Math.fround(1913038299);
            const v44 = Math.tanh(v39);
            Math.fround(1913038299);
            v29 ^ 1523662857;
            Math.random();
            await v44;
            return this;
        }
        f34(v31, -177048734n, 1n, v31);
        return -177048734n;
    }
}
new C32();
new C32();
new C32();
function f53() {
    return -4096n;
}
try {
    new BigInt64Array(4);
} catch(e60) {
}
try {
    new Int16Array(9);
} catch(e64) {
}
try {
    new Int32Array(16);
} catch(e68) {
}
