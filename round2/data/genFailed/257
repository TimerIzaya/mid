function f0() {
    const o10 = {
        set a(a5) {
            a5 = this;
            for (let v7 = 0; v7 < 32; v7++) {
                Symbol["p" + v7] = v7;
            }
        },
        "g": 56709,
        "a": 56709,
        10: -2.220446049250313e-16,
        "c": 56709,
    };
    return o10;
}
const v11 = f0();
f0();
const v13 = f0();
/a\Sc/myu;
const v15 = /s(?<a>.)/gmdv;
const v16 = /\P{Decimal_Number}[\cA]/gmiv;
function F17(a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a19;
    this.b = a19;
    this.a = a20;
}
new F17(v16, v13);
new F17(v15, v11);
new F17(v15, v11);
[1000000000000.0,797.7959901802863,-0.0,694.1962886364397,-2.2250738585072014e-308,-1.7976931348623157e+308,64.73418166755187,-5.0,2.2250738585072014e-308];
const v25 = [-536.4779721738506,-4.0,0.0,-28.604071807861033,2.5823115716804174e+307,1.7976931348623157e+308,-1000000.0,0.14573121827002067,1000000000.0,-4.844898306280778e+307];
const v26 = [-5.523986734391603e+307];
Object.defineProperty(v15, "h", { writable: true, enumerable: true, get: f0, set: f0 });
try {
    v11.raw(v25, true, f0, v11);
} catch(e29) {
}
Math.min(v26);
17487503 + v26;
Math.imul(v11, 17487503);
+-4096;
let v2 = "search";
class C3 {
    m(a5) {
        5 * 5;
        let v10 = v2 - v2;
        v10++;
        5 ^ v2--;
        return 14249;
    }
    e = 14249;
    5 = v2;
    [v2] = 0.41831683450640234;
}
const v14 = new C3();
new C3();
const v16 = new C3();
[-1,-9223372036854775807];
const v18 = [-35665,4,23899,4294967297,-2134714220];
const v19 = [-1];
try {
    new Uint32Array(2);
} catch(e23) {
}
try {
    new Int16Array(512);
} catch(e27) {
}
try {
    new BigInt64Array(10);
} catch(e31) {
}
const o32 = {
    __proto__: v14,
    "b": v16,
    "f": Uint32Array,
};
const v35 = v18["reduce"](0.41831683450640234, v19) >= 0.41831683450640234;
try {
    v19[-2] = v35;
} catch(e36) {
}
