let v2 = 15;
class C3 {
    constructor(a5, a6) {
        const t3 = "o";
        t3.length **= a5?.[a6];
        const v8 = this ^ v2;
        v2 = v8;
        try { a6(1338289884, ..."o", v8, 1338289884); } catch (e) {}
    }
    static #b;
    static #g = 1338289884;
    static #f;
    static f;
    static [1338289884] = v2;
}
new C3(v2, C3);
const v11 = new C3("o", v2);
new C3(1338289884, v11);
new Int8Array(127);
new Float32Array(2750);
const v24 = new Uint16Array(512);
const v26 = [];
const v28 = Reflect.apply(v24.toString, "o", v26);
let v29;
try { v29 = v28.m(C3); } catch (e) {}
h = Int8Array;
v11[Float32Array] = C3;
const t27 = v29?.[8];
t27[1] = 52590;
%VerifyType(Int8Array);
const v3 = /(ab)\1/sdgmy;
const v4 = /ta+b/sdgmv;
const v5 = /a[a]/siy;
[1000000.0,1.7976931348623157e+308];
const v7 = [-9.790670128198784,2.371238965937394e+306,108.48035926356442,1000000.0,2.220446049250313e-16,3.2653918505921897,-2.5579037135955263,-1000.0];
const v8 = [1000.0,523.1756286479053,1000000.0,1.0,Infinity,5.0];
class C12 {
    constructor(a14, a15, a16) {
        v4.dotAll <<= 127;
        let v18 = 744355699;
        ++v18;
        Math.asinh(a14);
        v18 | 1.1992610261034027e+308;
    }
    get e() {
        try {
            new Uint8Array(6);
        } catch(e27) {
        }
        try {
            new Float32Array(1370);
        } catch(e31) {
        }
        try {
            new Float32Array(256);
        } catch(e35) {
        }
        return this;
    }
}
const v36 = new C12(v3, -610651503, v7);
const v37 = new C12(v4, -610651503, v36);
new C12(v5, 268435456, v37);
for (let v39 = 0; v39 < 32; v39++) {
    v8["p" + v39] = v39;
}
%VerifyType(v36);
new C12(v4, -610651503, -610651503);
v37[1];
function f44() {
    return 127;
}
