const v0 = [];
class C1 {
    static 3477;
    static #b;
    static toString() {
        try {
            this.#b = v0;
        } catch(e3) {
        }
        return this;
    }
    [v0];
    g = v0;
    static [v0];
    static g = v0;
}
new C1();
new C1();
const v6 = new C1();
[-1000000000000.0,-80550.97742437292,-9.008447013682675,3.906812580365925e+307];
[2.2250738585072014e-308,-1.0,37.154646900437,2.2250738585072014e-308];
const v12 = [1e-15,-Infinity,-1000.0,-561.9174917191367,39.56721588651271,2.0,1.7976931348623157e+308];
function f16(a17, a18) {
    v6.b = C1;
    C1[3134];
    const o20 = {
    };
    new Proxy(a17, o20);
    return "toString";
}
f16("toString", v12);
function f0() {
}
const v1 = /t\w|\d/sigmv;
const v2 = /BNa\bc/sidgmyv;
const v3 = /[^[]]/sdgyv;
class C7 extends f0 {
    constructor(a9, a10) {
        super();
        const o11 = {
            "apply": f0,
            "call": f0,
            "construct": f0,
            "defineProperty": f0,
            "deleteProperty": f0,
            "getPrototypeOf": f0,
            "isExtensible": f0,
            "ownKeys": f0,
            "preventExtensions": f0,
        };
        try {
            new Proxy(v2, o11);
        } catch(e14) {
        }
    }
}
new C7(v2, v1);
const v16 = new C7(v2, v3);
new C7(v2, v16);
let v22 = 10;
15 * 15;
const v25 = -9007199254740992n * -9007199254740992n;
Math.cos(v22--);
Math.cosh(v25);
let v29 = 15 + 15;
++v29;
