function f0() {
    const o19 = {
        [-4.0]: -4.0,
        set f(a5) {
            let v4 = this;
            v4 >>= v4;
            v4 / v4;
        },
        valueOf(a8, a9) {
            a8 = -256;
            new Float64Array(128);
            new Float32Array(127);
            new Uint32Array(3546);
            return "1073741824";
        },
    };
    return o19;
}
const v20 = f0();
const v21 = f0();
const v22 = f0();
/^((\xed\xa0\x80))\x02\xed\xb0\x80a(?=b)c/misdu;
const v27 = /x(?!\1(a\1)\1)\1*/isu;
const v28 = /\118JJ\b*/d;
const v29 = [10,-1,16,65537,4,-58120,1];
const v30 = [33711,-12322];
const v31 = [-10,2016397813,-6,-9007199254740991,2147483649,9,1382982381,65536];
f0();
for (let v33 = 0; v33 < 86; v33++) {
    v30 >= v33 ? v30 : v33;
}
let v36;
try { v36 = v27.compile(v31); } catch (e) {}
let v37;
try { v37 = v21.valueOf(v29, v31, v31, v21, v30); } catch (e) {}
%VerifyType(v27);
try { v22["valueOf"](...v37, v22, v29, v36, v20, v28); } catch (e) {}
