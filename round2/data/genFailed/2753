const v5 = new Float32Array(7);
const v8 = new Float32Array(3680);
const v11 = new Uint32Array(2623);
class C12 extends Float32Array {
    constructor(a14, a15, a16, a17) {
        super(a14, a14);
        v11.byteLength = 2623;
        v5[2];
        this[3503522820] = super[v11];
    }
    static #a = 65537;
    get g() {
        try {
            v8.#a;
        } catch(e22) {
        }
        return Float32Array;
    }
}
const v23 = new C12(65537, 2623, 129, 7);
const v24 = new C12(3680, v23, 3680, 7);
new C12(2623, v24, 7, 129);
C12.d ^= 129;
let v26 = Array;
let v28 = new v26(129);
let {"a":v29,"byteLength":v30,...v31} = v23;
v23[5] *= 65537;
v26[3680] %= 7;
try { v24.values(); } catch (e) {}
v26 &= v26;
v28 -= v28;
