const v0 = [-1569629385,1024,-7,-256,7,623011051];
const v1 = [-44874,7,256,1862963877,4,176373329,2388,2,5];
[545480210,1,-4294967296,-65537,-1098212757,-4,-4294967297,6,36232];
new Int32Array(10);
new Float32Array(10);
let v10 = BigInt64Array;
const v11 = new v10(2336);
/[^((\xed\xa0\x80))\x02]/isv;
/J/myd;
const v14 = /(5xyz{93}(a\1))/gmisd;
v10 &= v10;
v1[257];
%VerifyType(v1);
try {
    new Int32Array(v14, -7);
} catch(e18) {
}
v0.__proto__;
const o20 = {
};
new Proxy(v11, o20);
const v1 = new Set();
class C2 {
    static [v1];
    static #m(a4, a5) {
        %VerifyType(a4);
        const v6 = a5?.[8];
        const o7 = {
        };
        try {
            o7.c = v6;
        } catch(e8) {
        }
        try {
            const o9 = {
            };
            o9.c = v6;
            o9.e = v1;
        } catch(e10) {
        }
        try {
            const o11 = {
            };
            o11.c = v6;
            o11.e = v1;
            o11.d = v1;
        } catch(e12) {
        }
        try {
            const o13 = {
            };
            o13.c = v6;
            o13.e = v1;
            o13.d = this;
        } catch(e14) {
        }
        return o7;
    }
}
const v15 = new C2();
const v16 = new C2();
const v17 = new C2();
class C18 extends C2 {
    [v16] = v15;
    static #b;
    constructor(a20, a21) {
        super();
        try {
            v15.f = v16;
        } catch(e22) {
        }
    }
    static #valueOf(a24, a25) {
        v16[a25];
        for (let v27 = 0; v27 < 51; v27++) {
            [v27,v27,...v27] = v1;
        }
        try {
            v17.#b &= v16;
        } catch(e28) {
        }
        return a24;
    }
}
const v29 = new C18(v1, v16);
const v30 = new C18(v15, v29);
const v31 = new C18(C2, C2);
class C33 {
    set b(a35) {
        try {
            new Float32Array(2103);
        } catch(e42) {
        }
        try {
            new Uint8Array(3);
        } catch(e46) {
        }
        try {
            new Float64Array(2543);
        } catch(e50) {
        }
    }
}
new C33();
new C33();
const v53 = new C33();
v1["forEach"](v30, v53);
try {
    var h = v31;
} catch(e57) {
    let v58 = v17.f;
    try {
        v58 = v1;
    } catch(e59) {
    }
} finally {
    /bt/gy;
    /Ha{z}vJAIa(?=b)/sm;
    /uZTt[\0]*/sy;
}
