class C3 {
    static {
        const v5 = [-9223372036854775808,this,this];
        const v6 = [v5,v5,-9223372036854775808];
        [v6,-9223372036854775808,"Vav","Vav",v6];
        try {
            ("Vav").normalize();
        } catch(e9) {
        }
    }
    static toString(a11, a12) {
        this[1073741825] = -9223372036854775808;
        Math.round(a11);
        a12 & a12;
        Math.sqrt(a11);
        return 11;
    }
}
const v19 = new C3();
new C3();
new C3();
const v25 = /(ab|cde)+/gmiv;
/(\xed\xb0\x80)\x01+/gys;
/A(?<=a)j[^123](m(?:a*)+x\1112+)/gyd;
new Int16Array(2051);
new Uint16Array(61);
const v36 = new Float64Array(512);
const v38 = Symbol.search;
v36[v38];
`y${Uint16Array}d${v38}c${v25}bigint`;
v19 >> C3;
try {
    const o42 = {
    };
    new Int16Array(o42, 536870889);
} catch(e45) {
}
let v6 = [-4096];
const v7 = ["boolean",-1170959016,"boolean"];
const v8 = [-1170959016,"string",-4096,-4096,v7];
function f9() {
    return v8;
}
class C10 {
    #e;
    h = -1170959016;
    #h = f9;
    constructor(a12, a13, a14) {
        try {
            v6 = v7;
        } catch(e15) {
        }
        a13[-2] <<= -4096;
    }
    c;
}
new C10("boolean", "boolean", v8);
new C10("string", "string", v7);
new C10("boolean", "string", v6);
const v19 = v6.length;
typeof f9 === "undefined";
try {
    ("undefined").repeat(v19);
} catch(e24) {
}
for (let v25 = 0; v25 < 32; v25++) {
    v8["p" + v25] = v25;
}
