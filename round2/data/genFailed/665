const v2 = new Uint8ClampedArray(2029);
new Uint32Array(16);
const v8 = new Int16Array(6);
const v9 = [v8,6];
[16,16];
const v11 = [v8,2029,Uint32Array,v8];
let v12 = 256;
let v14 = 9;
v11[v14 += v12--] = v2;
v9.d = 16;
let v16 = 0;
while (v16 < 8) {
    const o21 = {
        "maxByteLength": 185,
    };
    const v23 = new SharedArrayBuffer(185, o21);
    new Int32Array(v23);
    v16++;
}
class C3 {
    static [2.220446049250313e-16];
    #o(a5, a6) {
        1000.0 && -49467;
        -49467 % a5;
        Math.atanh(-2147483647);
        return a5;
    }
    static #d;
    static h = -49467;
    #b = -1.0;
    static [-49467] = 2.220446049250313e-16;
}
const v13 = new C3();
new C3();
new C3();
[3.0];
[0.05814823832935889,-4.0,NaN,-908813.8789148943,1000000000000.0];
[0.9198836945106897,5.0,-299.0969630709683,0.0];
[1000000000.0,0.4179911244737109,8.060613969216157e+307,5.0,NaN,1000000000000.0];
[-2.0,0.9152249360942987,-9.326561359244948];
"string" + [2.220446049250313e-16,0.4703122645330362,0.37355595091914506,-3.0,5.0,348.0543384550451];
try {
    const t23 = "3";
    t23.__proto__ = "3";
} catch(e29) {
}
v13[8].__proto__;
