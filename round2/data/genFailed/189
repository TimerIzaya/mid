new BigUint64Array(1024);
const v5 = new Int8Array(3);
new Int32Array(1);
function F9(a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = v5;
}
new F9(3, 3, 1024);
const v15 = new F9(1, 1, 1024);
const v16 = new F9(1024, 1024, 1);
try {
    let v17 = delete v16[v15];
    const v20 = v17--;
    v17 << BigUint64Array;
    !v20;
    BigUint64Array && 4294967297;
} catch(e24) {
} finally {
    const o28 = {
        "maxByteLength": 2438579862,
    };
    const v30 = new ArrayBuffer(257, o28);
    new Float32Array(v30);
}
function f0() {
}
try {
    new Uint8ClampedArray(7);
} catch(e4) {
}
try {
    new Int8Array(1000);
} catch(e8) {
}
try {
    new Float64Array(849);
} catch(e12) {
}
const v14 = new WeakSet();
function f15(a16, a17) {
    const o22 = {
        65535: Float64Array,
        "e": 1000,
        n(a19, a20) {
            let v21;
            try { v21 = this.return(a16, a20, a19, a19, this); } catch (e) {}
            return v21;
        },
        "d": a16,
        924852012: f0,
        ...a17,
        "c": 7,
        [a17]: a17,
        [849]: Int8Array,
        [Uint8ClampedArray]: v14,
    };
    return o22;
}
const v23 = f15(849, WeakSet);
const v24 = f15(1000, 1000);
f15(7, 1000);
throw v14;
try { v24.n(Int8Array, f0, Float64Array, v24); } catch (e) {}
function f27(a28) {
    return v23;
}
class C29 extends f27 {
    static #e;
    #f;
}
[-1249021473,-915004824,-46403];
[1073741825,-1407734374,5861,16,570738577,-1,-775724939];
[-540866734,65535,129,2147483649,-4294967297];
