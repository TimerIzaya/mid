new BigInt64Array(282);
const v5 = new Int16Array(1);
const v8 = new BigInt64Array(5);
class C9 extends BigInt64Array {
    h;
    static {
        try {
            new BigInt64Array(v8, 282);
        } catch(e12) {
        }
    }
    static #f = 282;
    static [v8] = 5;
    f = 1;
    [1];
}
const v13 = new C9();
new C9();
const v15 = new C9();
if (v15) {
    const v17 = [BigInt64Array,v15];
    Reflect.apply(v5.map, v13, v17);
} else {
}
function f0() {
}
[2132597245,26932];
const v2 = [12685,-16,2,129,508572678];
const v3 = [-4294967296,6,6,-680349257,9007199254740990,-25758,1,-2147483647];
const v4 = /abc+i\cA+/dguy;
/gKGs/siduy;
const v6 = /a(?=b)+/sidv;
[53211,v6,v3];
const v11 = [128,v6,v2];
[53211,v11,v11,v6];
[0.984772582950338,395669.5982139339,1e-15,1.2283697581950908e+308,0.790041239828669,0.27985534502771026,0.5279662384162959,-1.1146920152055344e+308,-1000000000.0];
const v14 = [1000.0,0.3018197570060298,Infinity,4.0,1.460448210815981,0.36890152132261467,4.0];
const v15 = [-3.0,0.5667917413389311,1000000000000.0,5.0];
f0();
v4[257] >>= 1073741824;
v15.length |= 1073741824;
[] = v3;
try { v14.forEach(f0, v14); } catch (e) {}
const o21 = {
    "execution": "sync",
    "type": "minor",
};
gc(o21);
