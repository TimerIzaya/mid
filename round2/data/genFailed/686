let v0 = [];
class C1 {
    static 536870912;
    toString() {
        class C3 {
            #e;
        }
        new C3();
        new C3();
        const v6 = new C3();
        return v6;
    }
    2962;
}
const v7 = new C1();
const v8 = new C1();
const v9 = new C1();
const v11 = new WeakSet();
class C12 extends WeakSet {
    3981 = v11;
    static [v9] = v8;
    a = v11;
    static #m(a14, a15) {
        super.delete(this);
        for (let v17 = 0; v17 < 32; v17++) {
            a15["p" + v17] = v17;
        }
        return v11;
    }
}
const v20 = new C12();
const v21 = new C12();
const v22 = new C12();
v0 = v8;
let v23 = 10;
for (; v23--;) {
    try { v11(C12, C1, WeakSet); } catch (e) {}
    let v26;
    try { v26 = C12.deref(v22, v20); } catch (e) {}
    function F27(a29, a30, a31) {
        if (!new.target) { throw 'must be called with new'; }
        this.d = v7;
    }
    new F27(WeakSet, v0, v21);
    const v33 = new F27(v11, v9, v22);
    new F27(v33, v33, v26);
}
const v1 = new WeakMap();
const v2 = [v1,v1,v1,v1];
const v3 = [v2,v2];
const v4 = [v3];
function f5(a6) {
    const o13 = {
        __proto__: a6,
        "g": v4,
        ...v3,
        "f": a6,
        set b(a8) {
            v1 / this;
            super[WeakMap];
            try {
                v2.length = 268435456;
            } catch(e12) {
            }
        },
    };
    return o13;
}
const v14 = f5(v4);
const v15 = f5(v4);
f5(v2);
v14.g &= v1;
Object.defineProperty("boolean", "c", { enumerable: true, set: f5 });
function f20(a21) {
    return a21;
}
class C22 extends f20 {
    #e;
    static 36 = v15;
}
("4096").__proto__;
