let v0 = "iterator";
let v2 = 574334688;
class C3 {
    toString(a5) {
        -2 * v2;
        const v10 = -v2;
        v10 - -65180;
        v2++;
        v10 >> -65180;
        Math.acos(v2);
        return 19302;
    }
    static 2;
    static #g;
    static h;
}
new C3();
const v16 = new C3();
new C3();
let v19 = 25954n;
const v24 = [3n,"468790642"];
const v25 = [3n,v24,v2];
const v26 = [v25];
({"d":v19,"g":C3,"h":v0,} = v16);
let v27;
try { v27 = new C3(v26, 2n); } catch (e) {}
-Infinity;
let v30 = -1.0458888107961127e+307;
v26 + v16;
try { v27.trimLeft(-2, v25, v0, "number", "number"); } catch (e) {}
v24.length = v27;
v30 = v2;
const t31 = "stack";
t31[2455631866] = v24;
