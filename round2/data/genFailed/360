let v3 = 255;
const v5 = new Uint8ClampedArray(v3);
new Int32Array(1);
const v11 = new Float64Array(128);
class C12 {
    e;
    constructor(a14, a15) {
        this.__proto__ = this;
        const v16 = new Int32Array(a14, a15, a15);
        v16[268435456];
        [43976,9223372036854775807,-9223372036854775808,1024,9223372036854775807];
        [41832,6,62235];
        [4294967295,1073741825,-9007199254740990,-1,15767,1630785162,-10];
    }
    get g() {
        super.f = Uint8ClampedArray;
        v11[710] = Uint8ClampedArray;
        v3 = 128;
        v5.length /= 464.1638573564833;
        return 464.1638573564833;
    }
}
new C12(v3, v3);
new C12(1, 1);
new C12(128, 128);
v11.buffer;
function F26(a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a30;
    this.g = Uint8ClampedArray;
    this.a = 1;
}
new F26(1.7968160853448212e+308, 1, 464.1638573564833);
new F26(464.1638573564833, v3, 1.7976931348623157e+308);
new F26(464.1638573564833, 128, 1.7968160853448212e+308);
/u(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10[a(?=bbb|bb)c*]?/gyisdv;
/NT((((.).).).)/mis;
/a+bn*/gmyd;
function f0() {
}
const v1 = [f0,f0,f0,f0];
const v2 = [f0,v1,v1,f0];
[v2,v2,v2,v2,v1];
[15296];
const v5 = [-522759099];
const v6 = [2147483649,-487050389,9007199254740991,4,536870887,2147483647];
class C7 extends f0 {
    static #d = v5;
    #b;
    static h;
    static set a(a9) {
        v6[a9];
        try {
            v1.#b = Set;
        } catch(e12) {
        }
    }
    static #a = v1;
    static c;
    static [f0];
}
new C7();
new C7();
new C7();
/\p{Script=Greek}/muy;
/\u{12345}\u{23456}a?/siu;
/kd(?:a*)+(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\101G/sidguy;
[1073741825,-4096,-1290516682,9,-2120248313,1073741824,10,12,-1740100494,29588];
[256,2147483648,1949719608,-1];
[1,1073741823];
let v22 = 10;
for (; v22--;) {
}
