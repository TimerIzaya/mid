const v0 = [];
let v2 = 20610;
function F4(a6) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = v2;
}
const v7 = new F4(v2);
const v8 = new F4(v2);
const v9 = new F4(v8);
function f13(a14, a15) {
    const o25 = {
        "c": v7,
        set f(a17) {
            try {
                super.log(this);
            } catch(e19) {
            }
            super.e &= 11;
            const o23 = {
                "execution": "async",
                "type": "major",
            };
            gc(o23);
        },
    };
    return o25;
}
const v26 = f13(v7, v7);
let v27 = f13(11, v9);
f13(v27, v9);
if (v2) {
    v27 = v26;
    try { v0.find(f13); } catch (e) {}
} else {
    v8[v8];
    let {"d":v31,"f":v32,"h":v33,...v34} = v8;
}
v2 = 11;
const v39 = 1934587406n >> 536870889;
Math.sqrt(v39);
1934587406n & F4;
Math.trunc(129);
~F4;
Math.atan(536870889);
v39 | v39;
