let v0 = 10;
new BigUint64Array(v0);
const v5 = new Uint16Array(3);
new Int32Array(4096);
v0 = 4096;
for (const v12 of v5) {
    const o13 = {
    };
    new Proxy(v12, o13);
}
function F16(a18, a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = 48174n;
    this.e = 3;
}
new F16(-2147483648n, 3, 4096);
new F16(536870912n, v0, 4096);
new F16(-2147483648n, 4096, v0);
let v0 = 5;
try {
    new Float32Array(v0);
} catch(e3) {
}
try {
    new Uint8Array(754);
} catch(e7) {
}
try {
    new Int8Array(4096);
} catch(e11) {
}
[491704959,12,4];
const v16 = [-63941161,2147483649,5087];
const v17 = [2089270329,512,65537];
28105n != Uint8Array;
try {
    v17[1126032969] = 4096;
} catch(e19) {
}
for (let [,v20] of v16) {
    for (let v21 = 0; v21 < 77; v21++) {
        try {
            v0 ||= v21;
        } catch(e22) {
        }
    }
}
