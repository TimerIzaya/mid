const v2 = new BigUint64Array(127);
new Uint8Array(12);
const v8 = new Float64Array(6);
switch (215938009) {
    case 9.707857071483001e+307:
        v8.h = 0;
        break;
}
v2["set"](v2, 215938009);
class C3 {
    valueOf(a5, a6) {
        ["2",a6,a5];
        const v8 = ["-2","-2",this];
        return [v8,v8,a5];
    }
    constructor(a11) {
        const v13 = ("2")["indexOf"](..."indexOf", ..."indexOf", ..."indexOf", ..."indexOf");
        let v14;
        try { v14 = v13("2", v13, a11, "2"); } catch (e) {}
        v14[5] = "-2";
        try {
            super[v13] = "2";
        } catch(e15) {
        }
    }
}
const v16 = new C3("Z8");
let v17 = new C3("2");
const v18 = new C3("Z8");
function f22(a23, a24) {
    const o37 = {
        "c": a23,
        "h": "-9",
        "a": "13",
        [a24]: "-2",
        o(a26, a27) {
            function F28(a30, a31, a32) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.d = a32;
                } catch(e33) {
                }
            }
            new F28("13", a27, "Z8");
            new F28(a27, "13", "-2");
            new F28(a27, a27, a23);
            return F28;
        },
    };
    return o37;
}
f22("Z8", v18);
f22("2", v18);
f22("2", v18);
Object.defineProperty(v16, "-9", { get: f22 });
"eA" >>> "2";
Object.defineProperty("2", 0, { configurable: true, enumerable: true, set: f22 });
for (const v42 of "Z8") {
    v18[C3] %= v42;
    try {
        v17 = v42;
    } catch(e43) {
    }
}
