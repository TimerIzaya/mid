class C3 {
    toString(a5) {
        const v6 = this instanceof this;
        function F7(a9, a10, a11) {
            if (!new.target) { throw 'must be called with new'; }
            this.h = "-986579331";
            this.a = v6;
        }
        new F7(this, a5, this);
        new F7("set", "set", a5);
        new F7("set", "-986579331", a5);
        return F7;
    }
}
new C3();
const v16 = new C3();
let v17 = new C3();
let {"length":v21,} = "-986579331";
let v22 = ("set")[7];
let {"e":v23,} = C3;
v17 <<= v23;
v22 = v16;
for (let i25 = 0; i25 < 8; i25++) {
    const o33 = {
        "maxByteLength": 1073741825,
    };
    const v35 = new SharedArrayBuffer(8, o33);
    new Int16Array(v35);
}
const v1 = new WeakSet();
const v12 = [v1];
if (Reflect.construct(WeakSet, v12, WeakSet)) {
    /\u{12345}\u{23456}/sidmuy;
    /i^j/yv;
    /foo[z]*/gmv;
} else {
    try {
        v12[6] = -25871;
    } catch(e17) {
    }
}
