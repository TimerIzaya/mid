let v2 = Infinity;
class C3 {
    #e = 347.92857100923516;
    [v2] = 1.7976931348623157e+308;
    #n(a5) {
        try { this["unregister"](); } catch (e) {}
        --v2;
        this["unregister"];
        try {
            ("unregister").#e;
        } catch(e11) {
        }
        return v2;
    }
    static [347.92857100923516] = 347.92857100923516;
    static [v2] = 1.7976931348623157e+308;
}
const v12 = new C3();
const v13 = new C3();
const v14 = new C3();
[v12];
const v16 = [v14];
const v17 = [v16,v2,v16,1.7976931348623157e+308,v16];
class C18 extends C3 {
    constructor(a20, a21) {
        super();
        let v23;
        try { v23 = a20["getMilliseconds"](); } catch (e) {}
        const v24 = super.d;
        try { v23("getMilliseconds", v23, a20, v24); } catch (e) {}
        a20[3142430263] = v17;
    }
    static [v17];
    [v17] = v16;
    static set d(a27) {
        new WeakMap();
    }
}
let v33 = new C18(C3, v17);
new C18(v14, C3);
new C18(v13, C18);
const v37 = new Map();
function f38() {
    return v37;
}
[v33,v2] = v17;
const o41 = {
    "maxByteLength": 268435439,
};
const v43 = new SharedArrayBuffer(257, o41);
new BigUint64Array(v43);
