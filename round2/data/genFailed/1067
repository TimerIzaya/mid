new WeakSet();
function f2() {
    return WeakSet;
}
const v3 = [-1000000.0,1.0346246761045914e+308,-4.0,-1e-15,1.7976931348623157e+308,-3.0,1000000.0];
const v4 = [-7.950357397242607e+307,0.4639180635230935,1000.0,-7.328869423461251,-2.220446049250313e-16];
const v5 = [-358.9809929241669,-1.7976931348623157e+308,-549453.1501374322,-580.6676040600032,0.0];
function f6() {
    return f2;
}
const v11 = [v3,v3,v4];
const v12 = [v11,256];
const v13 = [v12,11690,f2,v4,v12];
function F14(a16, a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = a16;
    this.g = a18;
    this.b = v5;
}
new F14(-713224256, v12, 256);
new F14(256, v13, 256);
new F14(11690, v12, -713224256);
Object.defineProperty(v12, 2836110023, { writable: true, configurable: true, set: f2 });
[-2.220446049250313e-16,0.7566516008196241,-263855.0848081724,8.395720843252942,5.4689319351015975,-9.622022351810348e+307,-503.14739882537316];
[465946.44280571677,-Infinity,-2.2250738585072014e-308,-1.5727665612745163,99454.63892914145,478.60525821992087,1.0,1000.0,189.95461124208828];
[-3.0];
null * null;
const v28 = -1784446575 / v11;
Math.imul(v11, v28);
Math.ceil(v28);
[-9072,2];
const v4 = [-65537,-16,-256,4];
const v5 = [0,64,268435439,16,7];
try {
    new Int16Array(14);
} catch(e9) {
}
try {
    new BigUint64Array(1469);
} catch(e13) {
}
try {
    new BigInt64Array(190);
} catch(e17) {
}
function f18(a19, a20, a21, a22) {
    'use strict';
    const v24 = [BigInt64Array];
    Reflect.apply(v5.find, v4, v24);
    return a21;
}
f18(1745673522, 255, 255, 14);
for (let v28 = 0; v28 < 32; v28++) {
    v5["p" + v28] = v28;
}
