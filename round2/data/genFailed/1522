const v1 = new Set();
function f2(a3, a4) {
    const o14 = {
        5: Set,
        512: a4,
        8: a3,
        ...v1,
        ...a3,
        ...v1,
        set g(a6) {
            let {"d":v7,"g":v8,} = a4;
            let v13 = v1 - v7?.c;
            v13 = a3;
        },
    };
    return o14;
}
const v16 = f2(f2(f2, Set), Set);
f2(v1, f2);
const v18 = [1.0,2.4099180896812644,0.8513812281671347,-5.0,-147746.7998957556,636.8973490647409,6.499759643646868,0.29525794791447213];
[1000000000000.0,-815127.2787837574,390.2828479453008,-1.7976931348623157e+308,2.0,-1000000000.0,5.0,0.3224239778878317];
const v20 = [0.6422252621891644,-0.0,-870.0464895190263,-544.2773121666609,-9.225658731917388,546.5786295580078];
const v21 = [6,8];
[-22747,-2,2,-3];
[-2124892448,-9223372036854775807,2147483648,4294967295];
for (const v27 in v21) {
    const v28 = v16.g;
    Reflect.construct(v28, [v27,v18], v28);
}
v18.length = 2;
for (let v33 = 0; v33 < 32; v33++) {
    v20["p" + v33] = v33;
}
