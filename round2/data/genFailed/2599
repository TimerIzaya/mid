class C3 {
    static #b = 1438462066;
    f = 1438462066;
    static 268435439;
    static #valueOf(a5, a6) {
        let v7;
        try { v7 = new a6(a6, 1438462066, a6, a5); } catch (e) {}
        return v7;
    }
    o(a9) {
        try { a9(1438462066, this, a9, 9223372036854775807); } catch (e) {}
        a9[5] = a9;
        try {
            a9.#valueOf(-2.2250738585072014e-308);
        } catch(e12) {
        }
        return a9;
    }
}
let v13 = new C3();
const v14 = new C3();
new C3();
const v16 = [-2.2250738585072014e-308,1438462066];
const v17 = [9223372036854775807,v16,v16];
const v18 = [v17];
class C19 {
    get g() {
        v13 ||= v14;
        try {
        const t0 = "function";
        t0(C3, this);
        } catch (e) {}
        return "global";
    }
    set h(a28) {
        for (const v29 in this) {
            this.g;
            super.d;
        }
        try {
            new C3();
        } catch(e33) {
        }
    }
}
const v34 = new C19();
const v35 = new C19();
new C19();
function F37(a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a40;
    this.g = a39;
}
new F37(v16, v18);
new F37(v17, v18);
const v43 = new F37(v17, v18);
const v44 = v43 in v43;
v14.toString = f;
const v46 = v43[9223372036854775807];
v14[1073741824] &&= 1438462066;
function f47(a48, a49) {
    %VerifyType(v46);
    let v50;
    try { v50 = a49.includes(v44); } catch (e) {}
    v13 << v16;
    v50 = a49;
    v34[C19];
    return v14;
}
f47(v17, v35);
