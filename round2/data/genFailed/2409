const v2 = new BigUint64Array(9);
new Uint32Array(8);
const v8 = new BigUint64Array(1000);
class C9 {
    h;
    static 5 = BigUint64Array;
    constructor(a11, a12, a13, a14) {
        const t7 = v8[Uint32Array];
        t7.d = v8;
    }
    static c;
    static #d;
    static {
        new BigUint64Array(this, Uint32Array, Uint32Array, this, this);
    }
    [v2] = 8;
    c;
    #f = Uint32Array;
    f = v8;
}
const v18 = new C9(v8, 8, 8, 1000);
const v19 = new C9(v18, 9, 9, 8);
new C9(v19, 8, 8, 8);
class C21 {
    static #g = Uint32Array;
    p(a23, a24, a25, a26) {
        let v27 = 10;
        for (; v27--;) {
            super[a23] = BigUint64Array;
            try { a25(a25); } catch (e) {}
        }
        return v2;
    }
    536870912;
    g = 8;
}
new C21();
new C21();
new C21();
for (let v36 = 0; v36 < 32; v36++) {
    const t40 = "e";
    t40["p" + v36] = v36;
}
new WeakSet();
