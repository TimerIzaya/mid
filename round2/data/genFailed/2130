let v1 = -9007199254740992n;
class C3 {
    static 1073741823 = v1;
    static [9007199254740991n];
    static c = 268435439n;
    #m(a5) {
        let v6;
        try { v6 = this.o(this, this, this); } catch (e) {}
        v6.d = v6;
        return 9007199254740991n;
    }
    [268435439n] = v1;
    static 16;
}
const v7 = new C3();
new C3();
new C3();
[1073741823,4294967297];
[2147483647,257,-1,-4096,-1073741824,5,-16882,970274142,1665116881,13];
[9,64,536870889,-144797139,128];
v1 = 268435439n;
let v13;
try { v13 = C3(); } catch (e) {}
const v15 = Symbol.split;
C3[v15] = v15;
if (268435439n == v7) {
    v1 - v13;
    for (let v18 = 0; v18 < 32; v18++) {
        v7["p" + v18] = v18;
    }
} else {
    const v24 = v15 && v15;
    const v25 = v24 + v15;
    Math.sin(4096);
    Math.cos(v25);
    !v24;
    +-1.4418452080893283e+308;
    +4096;
}
