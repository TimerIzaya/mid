const v0 = [-1.7976931348623157e+308,-Infinity,-4.11539193467876e+307,0.2171313618821875,-1.3558695214124596e+306,658657.4100442675,-2.220446049250313e-16,-2.220446049250313e-16];
[-0.8663245430070639,-1.0];
[673.6270335888489,0.17804786243402915,0.8853600760444909,-3.0,1000000000.0,3.0,4.0,1e-15,9.57700167047594];
new BigInt64Array(2496);
const v14 = new Int8Array(6);
new BigUint64Array(2);
%VerifyType(v0);
const v20 = v14[Symbol.search];
for (let v21 = 0; v21 < 32; v21++) {
    v20["p" + v21] = v21;
}
try {
    new Float32Array(5);
} catch(e3) {
}
try {
    new BigUint64Array(5);
} catch(e7) {
}
try {
    new Int16Array(224);
} catch(e11) {
}
class C12 extends Float32Array {
    h = BigUint64Array;
    constructor(a14, a15, a16) {
        super(a16);
        super.forEach(a15, this);
    }
    [5];
    268435440 = 5;
    #p(a19, a20, a21) {
        const v22 = [-584947.8669837248];
        [941.3913940149912,-786015.4033410006,3.0,1000000000000.0,-638460.5547176361,-1.7976931348623157e+308,-1.0,-760.5348448631919,4.0];
        const v24 = [1.7976931348623157e+308,4.0,1.0,-3.807218172994787e+306,-1000.0,-1.1797840836479397e+307,Infinity,444.5933411911574,-39572.089948955574,0.2833491496896471];
        try {
            v22.toString = v24;
        } catch(e25) {
        }
        return 5;
    }
}
const v26 = new C12(5, BigUint64Array, 224);
const v27 = new C12(224, v26, 5);
new C12(5, 5, 5);
new WeakMap();
try {
    v26[v26] = 224;
} catch(e31) {
}
const o32 = {
};
try {
    new Proxy(v27, o32);
} catch(e35) {
}
