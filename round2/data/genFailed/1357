[];
[-5,-8,-9,33044];
const v2 = [-65536,8];
const v3 = [256,-11,2147483648];
let v7 = [881.0068354838288,1.742241597295651,3.0,-1.7857826532207415e+308];
[-79.04253249343049,1.7976931348623157e+308,-4.976817194419196,1.0,3.0,966217.849951312,-1000.0,-1.7976931348623157e+308];
[-1000000000000.0,-4.0,-157.77172287810617,0.22093150571512477,0.030502478164251,1.7976931348623157e+308,977.5040656894564];
for (let [v10,v11,v12] of v2) {
    -v3;
    ~-1000000.0;
    Math.abs(v3);
}
Math.sign(v7);
Math.random();
const v24 = --v7;
Math.max(v24);
v7 & 65537;
Math.asin(v24);
const v0 = [4294967295,-24406,-2006448384,-65535,-7,-5,2147483648,-1367314218,-536870912,-2];
const v1 = [-13,-1839429631,7,-1056000194,4096,3,-34643,8906];
const v2 = [9,-1920241140,-9223372036854775808,-128];
class C3 {
    static set e(a5) {
        v2 || this.__proto__;
        this > v2;
        let v10 = 14;
        Math.fround(v0);
        const v14 = ~(v10++);
        Math.exp(v1);
        ~this;
        -v14;
    }
}
new C3();
new C3();
new C3();
try {
    new Uint16Array(4096);
} catch(e24) {
}
try {
    new BigInt64Array(1024);
} catch(e28) {
}
let v30 = BigInt64Array;
try {
    new v30(956);
} catch(e32) {
}
function f33() {
    return Uint16Array;
}
f33();
Object.defineProperty(v0, "length", { enumerable: true, get: f33, set: f33 });
Math.expm1(v30);
const v38 = ++v30;
let v39 = v30 >> -584144733;
Math.atan2(v39, v38);
v39--;
v2.__proto__;
