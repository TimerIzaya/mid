class C3 {
    static {
        try { new this(1000.0, this, 1000.0); } catch (e) {}
        %VerifyType(1000.0);
        const v6 = "LetDZ" << 1000.0;
        v6 == 255 ? v6 : 255;
    }
    get d() {
        let v10 = 0;
        while (v10 < 3) {
            v10 += v10;
            v10++;
        }
        return 1000.0;
    }
}
new C3();
new C3();
const v16 = new C3();
function f17() {
    return 1000.0;
}
const v21 = /[azaa|b?]/gysv;
/k+/msdu;
/e\x3z+/mid;
const v24 = v21.constructor;
class C25 extends v24 {
    d = 4294967296;
    #e = v21;
    h = 4294967296;
}
new C25();
v16.d **= v24;
for (let v27 = 0; v27 < 32; v27++) {
    v24["p" + v27] = v27;
}
function f0() {
}
[4.0,1000.0,2.2250738585072014e-308,1000.0];
const v2 = [0.7302700110266347];
[-2.0,2.0,-2.220446049250313e-16,-542137.1993431032,-2.2250738585072014e-308,-5.0,NaN,-572394.125545738,-72.81823382836876,337987.37968253787];
class C4 extends f0 {
    n(a6) {
        function f7() {
            return a6;
        }
        try {
            this.valueOf = f0;
        } catch(e8) {
        }
        return v2;
    }
    #a;
    f;
}
let v9 = new C4();
const v10 = new C4();
const v11 = new C4();
function f12(a13, a14) {
    const o30 = {
        n(a16, a17, a18) {
            Math.sin(536870888);
            Math.sin(536870888);
            let v26 = -(v10 ** v10);
            const v27 = --v26;
            const v28 = Math.ceil(v26);
            v27 / v27;
            return v28;
        },
    };
    return o30;
}
const v32 = f12(f12(v9, v9), v10);
f12(v32, v11);
new f0();
let v35 = v11[1945];
[v9,...v35] = v2;
const v37 = f12 + C4[8];
try {
    v32.h = v37;
} catch(e38) {
}
v37 in v9;
