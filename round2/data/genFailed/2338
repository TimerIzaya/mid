function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.e = 47734;
    this.d = 47734;
}
let v3 = new F0();
const v4 = new F0();
const v5 = new F0();
class C6 extends F0 {
    p(a8, a9) {
        v3 = this;
        return F0;
    }
    h = v5;
    constructor(a11) {
        super();
        class C13 extends this.constructor {
            static 1453 = v4;
        }
        new C13();
        F0[2] = a11;
    }
}
const v15 = new C6(C6);
const v16 = new C6(C6);
const v17 = new C6(v15);
function F18(a20, a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = v17;
    this.c = v16;
}
const v23 = new F18(v15, v16, v3);
const v24 = new F18(v16, v16, v16);
new F18(v4, v17, v16);
v23[-9223372036854775807] = v15;
new Date();
F18 >>= F18;
let v34 = -8.139767111157788;
Math.log1p(v24);
v24 >>> -1073741824;
v34--;
