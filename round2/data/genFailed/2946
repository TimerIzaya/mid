class C3 {
    static get g() {
        this[3333322732] = 2;
        let v5;
        try { v5 = this(2, this, 5, this); } catch (e) {}
        this.__proto__;
        return v5;
    }
    static {
        const o11 = {
            __proto__: this,
            "c": 7,
            "a": 5,
        };
        super[o11] = o11;
        const o12 = {
        };
        new Proxy(this, o12);
    }
}
new C3();
const v16 = new C3();
const v17 = new C3();
function F18(a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = 2;
    this.b = v16;
    this.g = a20;
}
const v22 = new F18(v17, v17);
const v23 = new F18(C3, v17);
const v24 = new F18(v22, v22);
function F25(a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a27;
    this.h = v22;
    this.e = a28;
}
const v29 = new F25(5, 5);
new F25(2, v29);
new F25(5, v17);
try {
    v16.from(undefined, [F25,2,v17,v23,5], v16, /i\u0060*/misdu);
} catch(e36) {
}
%VerifyType(v24);
const o40 = {
    "execution": "async",
    "type": "major",
};
gc(o40);
