const v2 = new Float64Array(8);
const v5 = new BigInt64Array(127);
const v8 = new Uint8ClampedArray(257);
class C9 {
    static {
        v2[5];
        super.e;
    }
    h;
    constructor(a14, a15) {
        this[127] = this;
    }
    get g() {
        function f17(a18, a19, a20) {
            this[3915] = 257;
            a20 /= 127;
            this & this;
            return arguments;
        }
        return f17(f17, v5, v5, Uint8ClampedArray);
    }
}
new C9(127, 257);
const v25 = new C9(8, 257);
let v26 = new C9(257, 127);
let v29 = -2;
v29 &&= v29;
let v30 = 10;
for (; v30--;) {
    v26 ^= C9;
    try { v26(v25, ...257, 305308798, ...v8); } catch (e) {}
    const o35 = {
        "maxByteLength": 536870912,
    };
    const v37 = new SharedArrayBuffer(3, o35);
    new Int16Array(v37);
}
