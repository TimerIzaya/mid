function f0() {
    const o11 = {
        "c": 0.8778666383452929,
        "g": 0.8778666383452929,
        "f": 0.8778666383452929,
        m(a5, a6) {
            try { new a5(a5, 0.8778666383452929, -33269, a5); } catch (e) {}
            super.g;
            Object.defineProperty(a5, "g", { configurable: true, value: a6 });
            try {
                super.subarray(0.8778666383452929, 0.8778666383452929, -33269, a6, a5);
            } catch(e10) {
            }
            return -1514606860;
        },
    };
    return o11;
}
let v12 = f0();
const v13 = f0();
f0();
class C15 extends f0 {
    get b() {
        let v17 = 0;
        while (v17 < 0) {
            v12 |= v13;
            v17++;
        }
        return v13;
    }
}
const v21 = new C15();
const v22 = new C15();
new C15();
const v26 = new Int8Array(16);
const v29 = new BigInt64Array(217);
const v32 = new Int8Array(347);
for (let v33 = 0; v33 < 32; v33++) {
    v32["p" + v33] = v33;
}
const v36 = v21.b;
Object.defineProperty(v26, v22, { writable: true, enumerable: true, get: f0 });
Object.defineProperty(v12, v21, { writable: true, configurable: true, get: f0, set: f0 });
v29[Int8Array];
const v40 = ~347;
v36 ** -44564;
v40 | -44564;
~16;
