const v0 = [0.619102273214307,0.3057932677855526,-1000000.0];
const v1 = [-5.0,9.278373883282189,2.2250738585072014e-308];
const v2 = [790.204325443272,-0.0,-8.640575570034752e+307,-5.643935793407953,-3.0];
const v3 = [1000000000.0,665.0890329710055];
const v4 = [-1000000.0,-1.7976931348623157e+308];
const v5 = [4.939657112539697,-2.220446049250313e-16,-797249.26751751,-3.5693312866648594e+307,438445.4118388607,0.9927749999970205,-1.6770031699385196e+308,2.2161064596416415e+306];
const v10 = [v5,[v3,v0,v5,46412],46412,4294967297,v4];
const v11 = [v0];
const v15 = v5 < v2;
const v16 = v15 ? v5 : v2;
let v17;
try { v17 = v16(v16); } catch (e) {}
v17 *= v15;
delete v10[-13];
const v19 = v1[8];
try { v10.find(v19, v19); } catch (e) {}
Object.defineProperty(v10[2], v11, { writable: true, configurable: true, enumerable: true, value: -13 });
v3[129];
function f3() {
    return "-4294967295";
}
try {
    new Float64Array(1430);
} catch(e7) {
}
try {
    new Uint32Array(620);
} catch(e11) {
}
try {
    new Int32Array(1024);
} catch(e15) {
}
/n(?:a*)+/dgmu;
/abc+?/m;
const v18 = /Ra\w[\ca]/igm;
function f19() {
    return "1061240283";
}
Object.defineProperty("3", "b", { get: f3 });
try {
    v18.multiline = Uint32Array;
} catch(e20) {
}
%VerifyType(-1325537566n);
try {
    new Int32Array(1024, 1024);
} catch(e25) {
}
