let v0 = "b";
let v1 = "toPrimitive";
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = v0;
    this.c = a5;
}
const v7 = new F3(v1, v1);
const v8 = new F3(v1, v1);
const v9 = new F3(v0, "4");
const v13 = v8 >= -3.279134015044731;
v13 ? v8 : -3.279134015044731;
[v0,...v1] = v0;
v0 **= v7;
let v15;
try { v15 = v1(v13); } catch (e) {}
const v18 = Reflect.construct(F3, [v1,v15], v1);
try {
    new F3("4", [v18,v7,F3,v9,-3.279134015044731]);
} catch(e21) {
}
