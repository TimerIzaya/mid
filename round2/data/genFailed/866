let v3 = -6574;
let v4 = 13;
new BigUint64Array(1254);
const v11 = new BigUint64Array(185);
const v14 = new Uint8Array(10);
v4 = -6920;
let v15 = Reflect;
const v16 = [v11];
const v17 = v14.set;
const v18 = v15.apply(v17, v14, v16);
let v19;
try { v19 = v14.sort(v17); } catch (e) {}
65535 ** 1254;
({"a":v15,"c":v3,...v19} = v18);
try { v18(Uint8Array); } catch (e) {}
v11 && v15;
const v0 = [4.0,0.0,0.6831953672255687];
const v1 = [-27.238976513317198,2.9360462543984323,-2.220446049250313e-16,201.26367591205667,-481.859182791325,-458274.0868473487,1000000.0,2.2250738585072014e-308,-123614.29879474977,1000000.0];
const v2 = [1000000000000.0,-1.7976931348623157e+308,982.4933656136682,-5.084704234315652,3.0,-1.438734904509926e+308,-1000000.0,0.0];
class C3 {
    [v0];
    constructor(a5, a6) {
        let v7;
        try { v7 = a5(v1, this, v0, a5, a5); } catch (e) {}
        const v9 = v2["every"](v7, a5);
        try {
            v2.__proto__ = v9;
        } catch(e10) {
        }
    }
}
let v11 = new C3(v1, v2);
const v12 = new C3(v1, v11);
new C3(v0, v2);
class C14 {
    [v1];
    [v0] = v1;
    p(a16, a17) {
        super.a >>= a17;
        return this;
    }
    #e;
}
new C14();
const v22 = new C14();
new C14();
Object.defineProperty(v22, 65537, { writable: true, configurable: true, enumerable: true, value: v12 });
Math.log2(-256);
Math.random();
-2147483648 + C3;
Math.abs(C3 + C3);
v11++;
