const v0 = [];
function F10(a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a14;
    this.g = 3.0;
}
const v15 = new F10(1686940116, 1000000000.0, v0);
new F10(1686940116, 1000000000.0, 131160.74922160595);
new F10(536870887, 3.0, 1000000000.0);
let v18;
try { v18 = v15.p(v0); } catch (e) {}
Reflect.construct(v18, [v18], v18);
try {
    let v22;
    try { v22 = v18(3.0); } catch (e) {}
    v15 in v22;
} finally {
    const v24 = new F10(536870887, 3.0, 3.0);
    1000000000.0 === v24;
}
class C3 {
    #toString(a5, a6) {
        with ("FJLiO") {
            length = "FJLiO";
            let v10 = ~"object";
            Math.pow(1000000000.0, ++v10);
        }
        return "object";
    }
}
new C3();
new C3();
const v15 = new C3();
const v16 = [-4294967295,-16802,536870912,-16,-9223372036854775807,-950284271,4294967297,-4294967297,12,-22067];
[-7,-9223372036854775807,-2,1060480639];
const v18 = [29099];
/Not/simu;
/((\xed\xa0\x80))\x02/idmv;
"object" && /(?:a?)?/idyv;
if ("FJLiO" == v15) {
    v18.length;
} else {
    v16.__proto__;
}
