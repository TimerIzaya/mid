const v6 = [-9007199254740990,159107097,0,-10064,8,16,-4294967297];
[-10,2147483647,5,928993886,8,1049303129,4096,-57159];
[-4294967296,-59171,10000,-1073741824,-9223372036854775807,-1];
new Float32Array(3728);
new Int8Array(1798);
const v20 = new BigUint64Array(255);
const o23 = {
    "maxByteLength": 5,
};
const v25 = new ArrayBuffer(5, o23);
new Int16Array(v25);
try { v20.forEach(v6, v25); } catch (e) {}
const v0 = [5.0,-1.270214240281473e+308,1e-15,1000.0,-1.0513246739725696e+308,-1000.0,1e-15,-726.3016522717978,-1.028572527866915e+308,-5.601218521962786e+307];
const v1 = [-7.898520517244525,1.2685274018672955e+308];
const v2 = [-Infinity];
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a6;
    } catch(e7) {
    }
    try {
        this.d = v0;
    } catch(e8) {
    }
}
const v9 = new F3(v2, F3);
new F3(v2, F3);
new F3(v1, v9);
try {
    new BigInt64Array(764);
} catch(e15) {
}
try {
    new Uint8Array(256);
} catch(e19) {
}
try {
    new Int16Array(3372);
} catch(e23) {
}
with (v2) {
    length = F3;
    try {
        new Int32Array(128);
    } catch(e30) {
    }
    try {
        new Uint32Array(0);
    } catch(e34) {
    }
    try {
        new Uint16Array(2129);
    } catch(e38) {
    }
}
