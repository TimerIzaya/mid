class C3 {
    static [1e-15] = 1e-15;
    set h(a5) {
        const v6 = [a5];
        Math.floor(127);
        let v11 = 127 % v6;
        v11 >> v6;
        --v11;
        --v11;
    }
    #a;
    static [0.10579802645897496];
    d;
}
new C3();
new C3();
new C3();
let v29 = -4.0;
9007199254740992n & v29;
Math.tan(v29);
v29++;
Math.asin(v29);
65535 >>> v29;
Math.round(v29 && 65535);
const v0 = [-4096,1494283772];
const v1 = [65535,-896885903,-8,-14];
const v2 = [7698,14532];
class C9 {
    static 4282270978;
    #g;
    static {
        const o13 = {
            "maxByteLength": 268435439,
        };
        const v15 = new ArrayBuffer(1024, o13);
        try {
            new Int8Array(v15);
        } catch(e18) {
        }
    }
}
const v19 = new C9();
new C9();
const v21 = new C9();
function F22(a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a25;
    } catch(e27) {
    }
    try {
        this.d = a26;
    } catch(e28) {
    }
    try {
        this.c = -1355149470;
    } catch(e29) {
    }
}
new F22(v1, 55129n, 9007199254740990);
new F22(v19, 637416596n, -1355149470);
new F22(v1, 637416596n, 11);
const v33 = v21[55129n];
const v34 = ~55129n;
const t40 = v1[v34];
t40[Symbol.matchAll] = v0;
try {
    new F22([11,v1,v34,v2,v33], 637416596n, 9007199254740990);
} catch(e40) {
}
