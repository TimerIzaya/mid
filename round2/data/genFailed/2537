const v0 = [2028588676];
const v1 = [-9007199254740991,65536,-2];
const v2 = [2147483648];
const v4 = new WeakSet();
const v5 = /y[3N(?:a?)?tk[^123](?=)]/msdu;
const v6 = /M2eh/myisdu;
const v7 = /t[\cz]/myisd;
const v8 = [v4,v7,v1,WeakSet];
const v9 = [v8,v0,v2,v0,v8];
const v10 = [v9,v5,WeakSet,v9];
function f11() {
    return v9;
}
let v12 = delete v9?.length;
let v13;
try { v13 = new v12(v10); } catch (e) {}
v12 <<= v7;
try { new v13(v6, v1, v8, v12); } catch (e) {}
try {
    v5.valueOf = f11;
    const v16 = Symbol.iterator;
    const o25 = {
        [v16]() {
            let v18 = 10;
            const o24 = {
                next() {
                    v18--;
                    const v22 = v18 == 0;
                    const o23 = {
                        "done": v22,
                        "value": v18,
                    };
                    return o23;
                },
            };
            return o24;
        },
    };
} catch(e26) {
    f11();
    %PrepareFunctionForOptimization(f11);
    f11();
    f11();
    %OptimizeFunctionOnNextCall(f11);
    f11();
}
