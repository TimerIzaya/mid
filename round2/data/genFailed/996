const v0 = /[\xe2\x81\xa3(?:a+)?foo(?<!bar)baz(?:ab)?]/iu;
const v1 = /(a)(x)(x)(x)\16Lxa*b|c/gmisdu;
const v2 = /o[\cz]/yd;
function f7() {
    return -9223372036854775808;
}
const v8 = /(va{0})/gmisdv;
let v9 = /a(?!b)*/mysv;
/\ud808\udf45*\u{12345}*/gsdv;
const v13 = new Array(257);
v13[v13] += 475321417;
v1.unicode;
[v0,-9223372036854775808,[607249.5164149075,v8,-1000000.0,[475321417,Array.__proto__]],607249.5164149075,v0];
v9 = v2;
function f0() {
}
const v1 = [f0,f0,f0];
const v2 = [v1];
const v3 = [f0,f0,f0,f0,v2];
function F7(a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a9;
    } catch(e12) {
    }
    try {
        this.c = 659528.56038762;
    } catch(e13) {
    }
}
const v14 = new F7(v1, v2, v1);
new F7(v2, v3, -1.3890855686808745);
const v16 = new F7(v2, v1, v14);
v3.length &&= -1.3890855686808745;
function f17() {
    return f0;
}
const v18 = v16[v16];
let v19 = 0;
while (v19 < 4) {
    try {
        v16.fuck(v18, v18);
    } catch(e23) {
    }
    v19++;
}
