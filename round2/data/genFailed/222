function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.b = 642675666;
}
const v3 = new F0();
new F0();
new F0();
/a\D5[x]\u{12345}\u{23456}*/gysd;
/[\ca]8/gmdu;
const v8 = /U(x)(x)(x)\2+/gv;
function f9() {
    return v8;
}
try { v8.exec(v3); } catch (e) {}
const o17 = {
    "execution": "async",
    "type": "minor",
};
gc(o17);
Object.defineProperty(o17, 6, { writable: true, configurable: true, get: gc });
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 65536;
    } catch(e7) {
    }
    try {
        this.c = a5;
    } catch(e8) {
    }
}
const v9 = new F3(65536, 41609);
new F3(41609, 65536);
const v11 = new F3(127, 41609);
for (let [v15] of 536870887) {
    v11[v15];
}
if (F3 !== 127) {
    v11.d;
} else {
    try {
        v9.toString = v9;
    } catch(e19) {
    }
}
