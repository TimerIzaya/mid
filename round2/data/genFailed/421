let v2 = 9;
class C3 {
    #e = v2;
    set h(a5) {
        try {
            this.isFinite(v2, [this,0.8627101730566817,10000,v2,a5]);
        } catch(e8) {
        }
    }
    constructor(a10) {
        let v11 = 0.8627101730566817 instanceof a10;
        ({"a":v11,...v2} = a10);
        try {
            super.valueOf(10000, a10, this, a10);
        } catch(e13) {
        }
    }
}
new C3(C3);
const v15 = new C3(C3);
const v16 = new C3(v2);
class C20 {
    #c;
    static #p(a22, a23) {
        return a23;
    }
    #m(a28, a29) {
        const o30 = {
        };
        new Proxy(v16, o30);
        v15 * this;
        return this;
    }
}
new C20();
new C20();
const v36 = new C20();
v36.a = v36;
const o37 = {
    "f": 0.8627101730566817,
    "e": C20,
};
let [,,v41,v42] = 1983741462n;
C3.h;
new WeakMap();
const v5 = [-1000.0,-1e-15,1000.0,-289.3924492545492,5.0,-1000000000.0,-4.648343792194871];
const v6 = [Infinity,1.394498487927884e+307,0.9256781741204597,0.4258578001939447,9.605783029375287e+307,-1.0];
const v7 = [0.7772539181714753,-2.2250738585072014e-308,1.7976931348623157e+308,1000.0,-2.220446049250313e-16,-735929.636519814];
function F12(a14, a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = v5;
    } catch(e17) {
    }
    try {
        this.e = v6;
    } catch(e18) {
    }
    try {
        this.c = v5;
    } catch(e19) {
    }
}
const v20 = new F12("undefined", "number", v5);
new F12(127n, "number", v7);
const v22 = new F12(F12, "undefined", v6);
const v23 = -"undefined";
try { v20(v22, ...v6, ...v7, v23, v23, false); } catch (e) {}
new WeakMap(v22);
const o26 = {
};
try {
    new Proxy(v20, o26);
} catch(e29) {
}
