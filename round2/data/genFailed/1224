function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = a5;
    this.c = "y";
}
new F3("y", "g");
new F3("every", "g");
const v9 = new F3("g", "g");
const v12 = new Int8Array(3);
new Int16Array(152);
const v18 = new Uint8ClampedArray(2405);
v12.byteOffset;
v18.__proto__ = v18;
Math.tan(1257961005);
~1257961005;
Math.tan(1257961005 + -7);
v9 ^ v9;
Math.tanh(v9);
class C3 {
    constructor(a5, a6) {
        try {
            new Uint8ClampedArray(257);
        } catch(e10) {
        }
        try {
            new Uint8ClampedArray(2068);
        } catch(e14) {
        }
        try {
            new Uint8Array(1551);
        } catch(e18) {
        }
    }
}
const v19 = new C3(-930063216, -930063216);
new C3(-1073741824, -3);
const v21 = new C3(-3, -3);
function f22(a23, a24, a25) {
    const o31 = {
        ...C3,
        [a24]: v19,
        "c": a24,
        "f": -3,
        set h(a27) {
            /[x\dz]?/iduy;
            /\p{Script=Greek}/sgmu;
            /(?:ab){4,7}*/sidmv;
        },
        [a25]: C3,
        2147483648: a23,
    };
    return o31;
}
f22(-3, -930063216, -3);
const v33 = f22(-1073741824, -3, -930063216);
f22(v21, -3, -1073741824);
let v37 = 5656;
const v39 = --v37;
-2147483649;
let v41 = v37--;
const v42 = v41 + v39;
f22(v33, 2147483649, -3);
try {
    v41 = v42;
} catch(e44) {
}
