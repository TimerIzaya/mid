let v2 = "toStringTag";
function f3(a4) {
    const o9 = {
        ..."f",
        638453947: a4,
        p(a6, a7) {
            super.c = a6;
            v2 &&= this;
            %VerifyType(a4);
            return delete a4[128];
        },
        "c": v2,
        "g": a4,
        9: v2,
        "b": v2,
        ...a4,
    };
    return o9;
}
const v10 = f3("f");
f3(v2);
const v12 = f3("f");
[2.0,3.0,-284.8129968059368,-2.220446049250313e-16,-2.608173242028662,0.0,9.946639139156531,0.07360749785455134,1.4439817004226874e+308];
[248273.35491509712,1000.0,0.94243456672728,1000.0,-40166.91983580147,1e-15,-3.0,-363.85173587625513];
[-222.03179565952348,-Infinity,13685.265054718358,-4.0927642867645833e+307,6.791040792922085e+307,1000000000.0,1.7976931348623157e+308,-348410.7894282966];
let v16 = 5;
1789551777n in "toStringTag";
for (let v23 = 0; v23 < 49; v23++) {
    v16 /= v23;
    ~-4;
    v10[Symbol.toStringTag];
}
try { v12.p(8); } catch (e) {}
const t33 = "toStringTag";
t33[v12] ^= 8;
class C3 {
    b;
    static set g(a5) {
        function f6() {
            function f8(a9) {
                try { a5.n(a9, 65537); } catch (e) {}
            }
            this.onmessage = f8;
            a5?.d;
            Object.defineProperty(this, "g", { configurable: true, enumerable: true, set: f8 });
        }
        const v14 = [];
        const o15 = {
            "arguments": v14,
            "type": "function",
        };
        new Worker(f6, o15);
    }
}
const v17 = new C3();
new C3();
const v19 = new C3();
const v24 = new WeakMap();
const v25 = v24[v24];
for (const v26 of v25) {
    let v27 = v19[v26];
    try {
        v27 = v25;
    } catch(e28) {
    }
}
try { v25(v25, v17, 2.4786060167787127, -1024); } catch (e) {}
WeakMap ^ -5.0;
