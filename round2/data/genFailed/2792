let v2 = new BigInt64Array(64);
const v5 = new Uint16Array(255);
let v8 = new BigUint64Array(115);
function f9(a10, a11) {
    const o14 = {
        "c": v8,
        "d": v5,
        "f": a10,
        get g() {
            v2.__proto__ = v8;
            this.__proto__;
            v2 >>= a11;
            return this;
        },
        [Uint16Array]: 255,
        "e": Uint16Array,
        ...a11,
        __proto__: a11,
        7: a11,
    };
    return o14;
}
const v15 = f9(255, v5);
f9(255, v5);
const v17 = f9(64, v2);
[64];
const v19 = [115,v5,v17,v8,v15];
const v20 = [115,64,v19,v19];
115 != 115 ? 115 : 115;
try {
    new BigInt64Array(64);
} catch(e24) {
}
v8 >>= v8;
const v25 = v20[v20];
try {
    f9(1073741824, v25);
} catch(e28) {
}
