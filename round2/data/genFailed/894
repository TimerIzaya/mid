class C3 {
    static {
        const o5 = {
            __proto__: this,
            "e": this,
            "d": 1.2720770777813856e+308,
        };
        ("boolean")[Symbol.toPrimitive];
    }
    #f = 4294967295;
    #e = 1.2720770777813856e+308;
    static 0 = "boolean";
    static [1.2720770777813856e+308];
}
const v9 = new C3();
const v10 = new C3();
const v11 = new C3();
function f12(a13, a14, a15) {
    const o28 = {
        get a() {
            this.h;
            new Array(1318);
            return this;
        },
        [C3](a22, a23, a24) {
            h = a22;
            a22 % C3;
            try {
                new C3();
            } catch(e27) {
            }
            return v11;
        },
    };
    return o28;
}
const v30 = f12(v11, v11, f12(v10, v11, v11));
f12(v10, f12, v30);
Object.defineProperty("-1371384217", v10, { configurable: true, set: f12 });
async function f35(a36, a37, a38, a39) {
    ("3").__proto__;
    await a38[a39];
    return a38;
}
const t44 = "-1371384217";
t44[f35(v10, v11, v30, "-1371384217")] = "boolean";
-v9;
try {
    new Int8Array(512);
} catch(e3) {
}
try {
    new Int8Array(1147);
} catch(e7) {
}
try {
    new Int16Array(9);
} catch(e11) {
}
class C12 extends Int8Array {
    static #b;
    static d;
    3;
    536870889;
    static {
        try {
            super[this] = 1147;
        } catch(e14) {
        }
    }
}
const v15 = new C12();
new C12();
const v17 = new C12();
new Map();
new Int8Array(v17, 1147, 1147);
v15.byteOffset /= 9;
const v21 = new Int8Array(v17);
try {
    v15[v21] = Int8Array;
} catch(e22) {
}
[1e-15,-39.04441963940394,0.4705977381768527,-102.05178429782165];
[-0.6174034751363529,986929.5910201571];
[-1.564622710435162e+308,-3.0,-3.0,-803.8847970839413,Infinity,2.220446049250313e-16];
