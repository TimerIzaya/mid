let v2 = 9007199254740990n;
function f4(a5) {
    const o11 = {
        get a() {
            this[4];
            try {
                const o8 = {
                };
                this.m(10000n, o8);
            } catch(e10) {
            }
            return this;
        },
        __proto__: a5,
        "c": v2,
    };
    return o11;
}
const v12 = f4(10000n);
const v13 = f4(0n);
const v14 = f4(0n);
/(?=a){0,10}a/y;
/(ml(?:a*)*q(?!a)?a\1a[^a]+)/ms;
const v18 = [/Y/gysdv];
[v14,v13,v12,[v18],null];
v2 += v2;
for (const v21 of v18) {
    v12[v21] = v21;
    try {
        f4(-935510025n);
    } catch(e24) {
    }
}
const o27 = {
    "maxByteLength": 255,
};
const v29 = new ArrayBuffer(31, o27);
new Int32Array(v29);
try {
    new Float32Array(56);
} catch(e3) {
}
try {
    new Int16Array(6);
} catch(e7) {
}
try {
    new Int8Array(7);
} catch(e11) {
}
class C12 {
    static c = 6;
    static #h = 6;
    #d = 56;
    static p(a14, a15, a16, a17) {
        [-1000000000000.0,2.220446049250313e-16,-6.782384810340275e+307,5.131356593178826e+307,-1000000000.0,-1000000000000.0];
        [-1.7817732491620996e+307,3.3905553802207437e+307,-2.2250738585072014e-308,1000000000.0,-550591.4743679459,2.2250738585072014e-308,-1000000.0,-1000000000.0,-Infinity,0.42103075576839544];
        [-0.0];
        return a14;
    }
    static [Int8Array] = Float32Array;
}
const v21 = new C12();
const v22 = new C12();
const v23 = new C12();
for (const v25 of v22[v21]) {
    try {
        v23[v25] = v25;
    } catch(e26) {
    }
}
[-1000.0,-8.667159278451667,901.3254035581995];
[0.1111104086680933,-198318.5755748629,1000000000.0,0.3798865965825674];
[-2.0];
