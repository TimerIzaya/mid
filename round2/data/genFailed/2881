function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = -1024;
    this.h = -1024;
    this.d = -1024;
}
const v3 = new F0();
const v4 = new F0();
const v5 = new F0();
class C6 extends F0 {
    [v3];
    constructor(a8) {
        super();
        try { v5.toString(this); } catch (e) {}
        F0[6] = v3;
        const o13 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o13);
    }
}
const v15 = new C6(v3);
new C6(v5);
const v17 = new C6(v5);
with (v3) {
    f = 2.220446049250313e-16;
    let v24;
    try { v24 = new C6(v17, ...v15, 10, v17, v4); } catch (e) {}
    const o25 = {
    };
    new Proxy(v24, o25);
}
v15[v5] = v5;
2.220446049250313e-16 + F0;
