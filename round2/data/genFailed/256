const v0 = [];
const v2 = new Date();
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a5;
    this.h = v0;
}
const v6 = new F3(Date);
const v7 = new F3(v2);
const v8 = new F3(v0);
class C9 extends F3 {
    toString(a11, a12, a13) {
        Object.defineProperty(a11, 13, { writable: true, set: Date });
        v7.valueOf = a12;
        delete v0[v2];
        return v2;
    }
    static get a() {
        try {
            super.setYear(v0, this, v7);
        } catch(e17) {
        }
        return v0;
    }
}
const v18 = new C9();
const v19 = new C9();
const v20 = new C9();
const v22 = new Set();
!v2;
const v25 = v0["reduce"](..."reduce", Set, v8, v20, v6);
let v26 = 0;
do {
    try { v25(...v22, v26, v18, ...v0); } catch (e) {}
    try {
        v19.toString(v7, F3);
    } catch(e32) {
    }
    v26++;
} while (v26 < 8)
class C3 {
    static #e = -1000000000.0;
    256 = -1000000000.0;
    static toString(a5) {
        try {
            this.#e = this;
        } catch(e6) {
        }
        return 1000000000000.0;
    }
    static 199 = -1000000000.0;
    2218612183 = 1000000000000.0;
}
new C3();
const v8 = new C3();
new C3();
const v10 = [-815.5437301495907,0.9472055553925283];
[-2.2250738585072014e-308,-1000000000000.0,-778211.2980174818,1000000000000.0,-1.0,1.0,-3.0,1.7976931348623157e+308,0.5445949150456622,NaN];
const v12 = [-1000000000.0,1.243981677099177e+308,NaN,-2.0,1.7976931348623157e+308];
let v13 = WeakMap;
new v13();
const v18 = v10.map(8615, v8, 1073741823, v8, v13, ...v12);
Math.imul(v18, v18);
const v22 = v13++;
Math.min(v18);
let v24 = v18 >>> v22;
--v24;
