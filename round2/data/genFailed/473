const v1 = new Date();
const v2 = [2.2250738585072014e-308,1000.0,-2.2250738585072014e-308,4.0,1.0,NaN,-968002.1420743521];
const v3 = [-856393.9774915883];
const v4 = [7.975759091086793,0.6715275752828973,4.478443671906884];
const v5 = [16,-48066,-6,64,-2147483647,-10,13,268435456];
[5];
[-9,536870889,2,6,-9007199254740992,49882];
let v9 = 10;
new WeakSet();
class C13 extends WeakSet {
    constructor(a15, a16) {
        super(v5);
        v2 + v3;
        a16?.[this];
    }
    #n(a20, a21) {
        const v22 = a21[2147483648];
        v5 << this;
        a21[4] = v22;
        new BigInt64Array(153);
        new Int32Array(255);
        new Int8Array(7);
        return this;
    }
}
const v33 = new C13(268435456, WeakSet);
const v34 = new C13(268435456, v1);
new C13(2147483648, v4);
var e = Date;
v9 = 268435456;
v5[10000] = v5;
v34.b = v34;
Date(2147483648);
Date(2147483648);
v2[15n] = v33;
const v4 = new Date();
function F5(a7, a8) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a8;
    } catch(e9) {
    }
    try {
        this.d = a7;
    } catch(e10) {
    }
    try {
        this.a = -13484n;
    } catch(e11) {
    }
}
const v12 = new F5(-2147483649n, -13484n);
const v13 = new F5(-13484n, -2147483649n);
new F5(v13, -13484n);
const v15 = /(?:a*)*/igmv;
const v16 = /[a{0,1}?]/siv;
const v17 = /mU/iyv;
class C18 extends F5 {
    static valueOf(a20, a21, a22) {
        try {
            new Date();
        } catch(e24) {
        }
        return v16;
    }
    #g = v4;
    static m(a26, a27, a28, a29) {
        const v30 = v4 >> v17;
        for (let v31 = 0; v31 < 100; v31++) {
            Date(v30);
        }
        a26[7] = v4;
        try {
            Date.#g = a27;
        } catch(e33) {
        }
        return v15;
    }
}
new C18();
new C18();
new C18();
Math.tan(24491);
!24491;
Math.max(0.28180770958040036);
!(7 >> v12);
v12 - 7;
