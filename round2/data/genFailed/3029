const v2 = new Uint32Array(65);
const v5 = new Float32Array(1024);
const v8 = new Uint8Array(7);
class C9 {
    75 = v5;
    static #p(a11, a12) {
        super.h = v8;
        this[Proxy] /= 65;
        super.c = v8;
        return v8;
    }
    static d;
    static c = Float32Array;
    static [Uint8Array] = 7;
    static 3;
    236 = v5;
}
new C9();
const v15 = new C9();
const v16 = new C9();
let v17;
try {
const t0 = 7;
v17 = t0(C9, ...7, v16, ...v8, v15);
} catch (e) {}
v2.valueOf = v17;
const v19 = new Uint8Array(Float32Array << v16);
v19.length;
v16[9] = v15;
const v21 = v15[25];
v8.length **= 7;
let v22 = new Uint32Array(v8, 7);
[...v22] = v21;
