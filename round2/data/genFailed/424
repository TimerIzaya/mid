const v1 = new WeakMap();
const v2 = [WeakMap,v1,WeakMap,v1,v1];
const v3 = [WeakMap,WeakMap,WeakMap,v2];
let v4 = [v3,WeakMap];
function f5() {
    return v4;
}
function F6(a8, a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a9;
}
new F6(v3, v3, v3);
const v12 = new F6(v3, v4, v2);
new F6(v3, v3, v4);
/a\SY[ratb5k(?:ab)?]+/ysv;
/\P{Any}?/gysu;
/Mxyz{1,32}\xed\xa0\x80/mdu;
v4 = v2;
function f20(a21, a22, a23) {
    function f25(a26) {
        try { v12.toString(a26); } catch (e) {}
    }
    this.onmessage = f25;
    v12[a22] = a23;
}
const v30 = [f20,"function",1073741824];
const o31 = {
    "arguments": v30,
    "type": "function",
};
new Worker(f20, o31);
class C3 {
    p(a5) {
        try {
            this - 2.0;
        } catch(e7) {
            try {
                this[this] = e7;
            } catch(e8) {
            }
        }
        return -2.0;
    }
}
const v9 = new C3();
const v10 = new C3();
const v11 = new C3();
new Array(2469);
let {"d":v18,} = v9;
const v19 = Array.from(v18, v18, v18, -1820509690);
const v20 = [5,0.0,Array,v11];
const v21 = [v10,v19,2.0];
[v9,13,5,v21,v21];
for (let v23 = 0; v23 < 26; v23++) {
    new C3();
    try { v18(); } catch (e) {}
}
try {
    v20[8] = v21;
} catch(e26) {
}
