[14,-1389527419,-11,1,536870887,65536,4096];
[-938847974,45480,536870912,0,-16,-256,15,21434,255,-25475];
const v2 = [536870888,1000,-2147483649,-15,50290,-9,-1636791720,65537,9007199254740991];
const v6 = [0.23511059279904378,-2.2250738585072014e-308,302.9555255192429,1e-15];
[4.02303993242916,-2.0,-Infinity,-676.8397958676094,3.0,5.0,0.8911867168736531,-872.9702305638496,-0.0];
[5.486376988513737,-4.0];
const v11 = new Int8Array(7);
const v14 = new Uint8Array(1675);
const v17 = new Uint16Array(922);
v11[2] |= -699691650;
v6.toString = v2;
v14.valueOf = Int8Array;
class C18 {
    static 3265632571;
    static [v6] = v17;
    3298258678;
}
new C18();
new C18();
new C18();
class C3 {
    static {
        let v4 = this;
        const v9 = v4--;
        7n / v4;
        -3.0 ^ v9;
    }
    p(a13, a14) {
        try {
            super[-65537n] = a13;
        } catch(e15) {
        }
        super.e;
        this.__proto__;
        const o20 = {
            "maxByteLength": 257,
        };
        const v22 = new SharedArrayBuffer(1, o20);
        try {
            new Float64Array(v22);
        } catch(e25) {
        }
        return 7n;
    }
}
const v26 = new C3();
const v27 = new C3();
new C3();
class C35 extends C3 {
    h = -65537n;
    static #n(a37, a38) {
        super[-600.3558943516325];
        super.a;
        try {
            super.b = "e";
        } catch(e41) {
        }
        return a37;
    }
    static p(a43, a44, a45) {
        const o49 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o49);
        return "sync";
    }
}
const v51 = new C35();
new C35();
new C35();
v26[v51];
function F55(a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a57;
    } catch(e59) {
    }
}
new F55(2.220446049250313e-16, 7n);
new F55(-1000.0, v27);
new F55(-1000.0, -65537n);
