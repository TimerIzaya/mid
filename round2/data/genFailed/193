function f3() {
    return "fromCodePoint";
}
const v4 = ["fromCodePoint","fromCodePoint","string","fromCodePoint"];
[["fromCodePoint",v4,"string"],v4];
class C7 extends f3 {
    static #o(a9, a10) {
        try {
            new f3();
        } catch(e12) {
        }
        const v13 = new f3();
        return v13;
    }
    c;
    2357;
    ["fromCodePoint"];
}
new C7();
const v15 = new C7();
new C7();
for (let v17 = 0; v17 < 100; v17++) {
    f3();
}
f3(..."fromCodePoint", ...v15, ...v4, "string");
function* f20(a21, a22, a23, a24) {
    try {
        f3();
    } catch(e26) {
    }
    yield* "string";
    return a22;
}
f20(v15, "string", "fromCodePoint", v15);
function f0() {
    const o16 = {
        "d": 1197852352,
        [1197852352]: 89805.76472967118,
        p(a5) {
            let v8 = -1000.0;
            const v9 = +v8;
            const v10 = v8++;
            Math.asinh(v9);
            !-9.469432323759e+307;
            let v13 = +v10;
            ++v13;
            Math.hypot(1197852352);
            return this;
        },
    };
    return o16;
}
f0();
const v18 = f0();
const v19 = f0();
/y/suy;
const v21 = /5r(?!\1(a\1)\1)\12l(?:ab)+/sgv;
/xyz?[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]/idyv;
class C23 {
    static toString(a25, a26, a27) {
        let v24 = this;
        try {
            v24 = v18;
        } catch(e28) {
        }
        try {
            new Int32Array(9);
        } catch(e32) {
        }
        try {
            new Uint8ClampedArray(512);
        } catch(e36) {
        }
        try {
            new Float64Array(255);
        } catch(e40) {
        }
        return v19;
    }
}
const v41 = new C23();
const v42 = new C23();
new C23();
for (const v47 in v41) {
    v47 < v47 ? v47 : v47;
}
v42.__proto__;
if (v19 > v21) {
    function f52() {
        return v41;
    }
} else {
    new WeakSet();
}
