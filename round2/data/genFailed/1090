new WeakSet();
new Uint8Array(537);
new BigInt64Array(1000);
const v13 = new BigInt64Array(8);
v13[8] ||= 537;
new Int32Array(6);
new Uint16Array(512);
new Uint16Array(128);
class C3 {
    n(a5) {
        super.c;
        return this;
    }
    constructor(a8) {
        try {
            this.f = this;
        } catch(e9) {
        }
    }
    static [65537n];
}
const v10 = new C3(5743n);
new C3(-6n);
const v12 = new C3(65537n);
const v13 = [20192,127,-6,-1024,9223372036854775807,4,1073741824];
const v14 = [3006];
[1073741823,0];
function F16(a18, a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a21;
    } catch(e22) {
    }
}
const v23 = new F16(v13, -6n, 65537n, C3);
new F16(v14, -6n, -6n, v10);
const v25 = new F16(v13, 5743n, 65537n, v12);
v23.h *= v14;
let v27;
try { v27 = a(a, v25, v25, -6n, a); } catch (e) {}
v27 in v27;
let v29 = 0;
do {
    -6n !== v13;
    try {
        const v33 = new Array(2147483648);
        const o35 = {
        };
        new F16(v33, -6n, 9n, o35);
    } catch(e37) {
    }
    v29++;
} while (v29 < 10)
