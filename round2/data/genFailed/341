class C3 {
    constructor(a5, a6) {
        try { this.o(-4294967296, a6, 235.72960121987762, a6); } catch (e) {}
        a5[this] = a6;
        new Date();
    }
    1024 = "getMinutes";
    static [-1];
    [-4294967296] = -4294967296;
    #a;
}
new C3(C3, "getMinutes");
const v11 = new C3(-4294967296, "getMinutes");
new C3(-4294967296, v11);
const v15 = new Int16Array(255);
new Int16Array(255);
new Uint32Array(3831);
const v23 = new Date();
Object.defineProperty(v15, "d", { writable: true, configurable: true, enumerable: true, set: Date });
C3 /= C3;
let {"a":v24,...v25} = v11;
v25.__proto__;
v23 + v23;
try {
    v25.atan(255, false, false, 3831);
} catch(e30) {
}
const v0 = [-464.836773917442,-0.0,-408.7652860793794];
const v1 = [0.7196305041461284,-1e-15,4.0,271.8985273365438,1000000.0,-4.879536005611103,2.220446049250313e-16];
const v2 = [-7.691828844621822,1.206271230801189];
class C3 {
    static {
        try { v2(); } catch (e) {}
        v1 !== this;
        %VerifyType(this);
    }
    static {
        Reflect.construct(this, [Reflect,this,Reflect,v2], v0);
    }
    static #e;
    static [-2];
    d = v1;
}
const v11 = new C3();
new C3();
new C3();
[268435441,-9,2147483647,-6999,-13,512,12,4];
const v15 = [2,256];
[-9007199254740992,536870912,31405,-1024,-268435456];
const v17 = [C3];
const v18 = [v17,v11,v1,v17,v1];
[v18,v18];
class C21 extends v1.constructor {
    6;
    #a;
    static #f;
}
new C21();
v15.length;
("ZU").normalize("NFKC");
