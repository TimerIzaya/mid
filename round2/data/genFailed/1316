class C3 {
    static {
        switch (this) {
            case this:
                "valueOf" <= "JjLY8";
                break;
        }
    }
    o(a10, a11) {
        %VerifyType(this);
        const t10 = "valueOf";
        t10.e = "reject";
        [1.5443495414492219,7.636119393743865,-1.1707558473322e+308,1000.0,1000000000000.0,0.0];
        [-1000000000000.0,0.6073453220558162,-4.411716329188438,1000.0,Infinity,4.497203991230105,-307030.4865112257];
        return [-4.0,4.0,4.987569856064037e+307,2.220446049250313e-16,803.8575551301121,2.0];
    }
}
const v15 = new C3();
let v16 = new C3();
const v17 = new C3();
class C18 {
    e = C3;
    f = v17;
    static #m(a20, a21) {
        ["valueOf",this,v17,this];
        [[v15,"reject",a21]];
        v16.g;
        return v17;
    }
    5;
    static set d(a27) {
        try {
            this.#m(a27, "JjLY8", C3, C3, this);
        } catch(e29) {
        }
    }
}
const v30 = new C18();
const v31 = new C18();
const v32 = new C18();
let v35 = 512;
v16 = C18;
const t41 = "reject";
delete t41[12];
v15.b <<= 9;
let {"b":v40,"c":v41,...v42} = v15;
--v35;
v17.c;
new Set();
v30.__proto__;
v17.o(-8920, v31, 12, v32);
try {
    new Int8Array(1);
} catch(e6) {
}
try {
    new Float64Array(512);
} catch(e10) {
}
try {
    new Float32Array(127);
} catch(e14) {
}
class C15 {
    [Float32Array];
    valueOf(a17, a18, a19) {
        for (const v20 in "bigint") {
            try {
                super.e = v20;
            } catch(e21) {
            }
        }
        try {
            new Uint8Array(127);
        } catch(e25) {
        }
        try {
            new Float32Array(12);
        } catch(e29) {
        }
        try {
            new Float32Array(256);
        } catch(e33) {
        }
        return Float32Array;
    }
}
const v34 = new C15();
new C15();
new C15();
try {
    new BigInt64Array(1);
} catch(e40) {
}
try {
    new Uint8Array(4015);
} catch(e44) {
}
try {
    new Uint32Array(512);
} catch(e48) {
}
throw v34;
const v49 = `
    try {
        new C15();
    } catch(e51) {
    }
`;
eval(v49);
