class C3 {
    static d;
    constructor(a5) {
        const o8 = {
            "maxByteLength": 4294967295,
        };
        const v10 = new SharedArrayBuffer(127, o8);
        new Float64Array(v10);
    }
}
const v13 = new C3(61922);
new C3(1.2704752340168976e+308);
new C3(1.2704752340168976e+308);
class C16 extends C3 {
    static {
        for (const v18 in C3) {
            new Float32Array(127);
            new BigInt64Array(4);
            new Int32Array(94);
        }
    }
}
new C16();
const v29 = new C16();
const v30 = new C16();
function F31(a33, a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a34;
    this.f = a35;
}
new F31(C3, v30, v13);
new F31(F31, C16, v29);
new F31(v30, v29, C3);
try {
    const o39 = {
    };
    new F31(C16, o39, o39);
} catch(e41) {
}
new WeakSet();
for (let v45 = 0; v45 < 32; v45++) {
    v13["p" + v45] = v45;
}
