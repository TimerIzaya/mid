const v0 = [65536,-10,-1,-8,-42042];
const v1 = [268435440,-4096,4294967297,-6,-1487885426,65535,-65537,-10,2036585687];
const v2 = [7458,2147483648,-32146,-41630,268435440,13,-28900,1,55506,-9211];
class C3 {
    constructor(a5) {
        this[this] **= this;
        this << v2;
        a5 = v1;
        a5 = this;
        v2 << v1;
    }
    g;
    valueOf(a9) {
        const v10 = v1.__proto__;
        try { new v10(v2); } catch (e) {}
        return v1;
    }
    #a;
}
new C3(v0);
new C3(v1);
const v14 = new C3(v1);
const v15 = [-2147483648,1000,-14,41344,7,49202,-7,-15,2147483647,9223372036854775807];
const v16 = [-5724,14,512,-1073741824,1073741824,10000,-425588354,30233,38710991];
[-12,536870889,-1,65535,126168432];
const v19 = new Set();
new Set(v14);
try {
    new Set(v0);
} catch(e25) {
}
try { v15(Set, v19, v1); } catch (e) {}
v1[1] = v16;
function F27(a29, a30, a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = v1;
}
new F27(v0, 729627.7742686167, 0.3815770431084734, F27);
new F27(v16, -1e-15, 0.3815770431084734, v14);
new F27(v15, 0.3815770431084734, 0.3815770431084734, v15);
