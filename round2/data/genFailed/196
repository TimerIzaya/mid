let v0 = 1675511364n;
new Float32Array(3513);
const v8 = new Uint16Array(4);
const v11 = new BigUint64Array(332);
function f12() {
    return 536870887n;
}
const v17 = Symbol.iterator;
v8[v17] = v0;
v0 = 536870887n;
v11[2] = Uint16Array;
v17[6];
v8.length = 37615;
[14,1082751197,231595668,536870912,-54777,46602];
[-456465982,-131670955,11,1,268435456,255,6,-51414];
[64];
function F6(a8, a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a8;
    } catch(e11) {
    }
    try {
        this.f = a9;
    } catch(e12) {
    }
    try {
        this.d = a8;
    } catch(e13) {
    }
}
const v14 = new F6(-718239332, 2.0, -718239332);
new F6(-718239332, 0.0, 2.0);
const v16 = new F6(128, 0.0, 128);
const v17 = [F6,v14,-11804,-11804,v14];
[v14,v17];
[v17];
const v20 = async (a21, a22) => {
    -a21;
    return new.target;
    await -11804;
    return a21;
};
!-11804;
new F6(-11804, 0.0, 128);
try { v14["n"](v17, v20, v16, "n", "n"); } catch (e) {}
