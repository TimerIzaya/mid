[];
const v1 = [1073741825];
[1073741824,7,9,45697,42529,-835723732,-1936069104,-42537,-5];
[-1320662434,-4,536870887,1325719156];
new Uint8Array(2477);
new Float32Array(128);
new BigInt64Array(129);
for (let [v13] of v1) {
    new Uint8Array(9);
    new Int32Array(2469);
    new BigInt64Array(3);
}
function f0() {
}
const v2 = -Infinity;
function F4(a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 0.3198271832565506;
    } catch(e8) {
    }
    try {
        this.g = a6;
    } catch(e9) {
    }
}
const v10 = new F4(-718.3762772258467, v2);
new F4(-718.3762772258467, -718.3762772258467);
const v12 = new F4(v2, v2);
try {
    new Uint8Array(257);
} catch(e19) {
}
try {
    new Uint32Array(1000);
} catch(e23) {
}
try {
    new Uint32Array(16);
} catch(e27) {
}
f0();
class C29 extends Uint8Array {
    [v10] = v10;
    [v2];
    static #d = 16;
}
new C29();
new C29();
new C29();
v12 | 0.3198271832565506;
