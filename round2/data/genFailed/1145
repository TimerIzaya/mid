const v3 = [0.5858199445379779];
[1.0,198251.7974023919,-0.0,5.0,2.0];
let v5 = [9.136750863350677,5.0,-128.9343421043576,-1000000000000.0,-1.401635628244928e+308,-4.0,-765.2904812282828,7.546270567340328e+307];
const v13 = v3["find"](-2101470789, "find");
let v14;
try { v14 = v5.fill(-268435456, 9, v13); } catch (e) {}
let v15 = 0;
do {
    v5 -= v14;
    let v16;
    try { v16 = new v13(12, -1, v13, -1); } catch (e) {}
    const t11 = "find";
    t11[v16] = v16;
    try { v14(v16, v15, v16, -4096); } catch (e) {}
    v15++;
} while (v15 < 8)
[4.0];
(["c",4.0,[4.0],-842570.709651727])["reduce"]("m", "c");
const o20 = {
    valueOf() {
        try {
            super.getUTCMilliseconds("reduce");
        } catch(e19) {
        }
        return -842570.709651727;
    },
};
