const v4 = new Date();
const v5 = [127,0,Date,0,v4];
const v6 = [0,127,0,Date];
[-14,Date,0,v6];
function f11(a12, a13) {
    const o23 = {
        "c": v4,
        "g": a12,
        [-14](a15, a16, a17, a18) {
            Object.defineProperty(v6, a12, { writable: true, configurable: true, enumerable: true, get: Date, set: Date });
            function f22() {
                return -14;
            }
            return -2.2250738585072014e-308;
        },
        ...v5,
    };
    return o23;
}
f11(127, -3n);
f11(-3n, Date);
f11(f11, -3n);
new Date(127);
let v31 = -3.0;
const v32 = v31++;
v32 - -3n;
-3n || 6;
-v32;
Math.cbrt(v31);
function f0() {
    const o8 = {
        "h": -2.514452008627355,
        __proto__: 4.0,
        536870887: 4.0,
        ...-40787,
        toString(a5) {
            this.h;
            try {
                super.g = -2.514452008627355;
            } catch(e7) {
            }
            return this;
        },
    };
    return o8;
}
const v9 = f0();
const v10 = f0();
const v11 = f0();
function f12() {
    return v10;
}
class C13 extends f0 {
    static {
        try {
            this.e = this;
        } catch(e15) {
        }
    }
    static o(a17) {
        try { this["toString"](f0, v9, "toString"); } catch (e) {}
        super[f0];
        return f0;
    }
}
new C13();
const v22 = new C13();
new C13();
function F24(a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = f0;
    } catch(e28) {
    }
    try {
        this.a = v9;
    } catch(e29) {
    }
}
new F24(v9, v11);
let v31 = new F24(v11, v10);
new F24(v22, v9);
v9 | f12;
Object.defineProperty(v9, "a", { enumerable: true, get: f12 });
for (let [,v34] of v10) {
    [v11];
    const v40 = 128 >> v31++;
    let v41 = !v40;
    --v41;
    v40 - 536870889;
    536870889 && v40;
}
