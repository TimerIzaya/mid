let v2 = -256n;
const v3 = [v2,v2,v2,268435439n];
const v4 = [v3,v3,-10n,v2,-10n];
const v5 = [v2,v3,-10n,v4,v3];
class C6 {
    toString(a8, a9, a10, a11) {
        v5["findIndex"](v2, v4);
        return a11;
    }
    static 9;
    static e = v2;
    #f;
    static 0;
    static #h = v3;
    h;
}
const v14 = new C6();
const v15 = new C6();
new C6();
const v17 = [-221131.15490307414,-685.9654292216148,2.0,-1000000.0,-3.0];
const v18 = [-1000.0,-2.96432560316656];
[-2.220446049250313e-16,1000.0,-1000000.0,519.4814452838705,0.58102397409661];
v17.length = v5 > (v2 = -10n);
const v23 = v18[Symbol.replace];
v15[v15] = v2;
try { v23(v15, v14); } catch (e) {}
Math.cbrt(v5);
-40402 ^ 1857890501;
Math.tanh(-40402);
