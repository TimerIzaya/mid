const v3 = [1119329214,4294967296];
const v4 = [-9483,-6,15043,852870845,1961222611,-1024,-9223372036854775808];
[-13,1073741825,3,-2147483649,-1073741824,7,8,16203,-65535,3];
const v6 = /zU[\xe2\x81\xa3]/gdu;
const v7 = /6a{0,1}?/isv;
const v8 = /\x01/gmisdv;
class C9 {
    #a = v3;
    constructor(a11, a12) {
        const v15 = [v3[127]];
        Reflect.apply(v8.test, a11, v15);
    }
    #b = v8;
    static d = v8;
    static b = 257;
    388058712;
}
const v18 = new C9(v8, -14135);
const v19 = new C9(v18, -2147483647);
new C9(v19, 257);
const v21 = v19[v4];
let v22;
try { v22 = new v21(v21, v21, v7); } catch (e) {}
try {
    v19[7] = v4;
} catch(e23) {
    const o26 = {
        "maxByteLength": 4096,
    };
    const v28 = new ArrayBuffer(4096, o26);
    new Int32Array(v28);
} finally {
    v6[v22] <<= -14135;
}
const v0 = [];
class C1 {
    get g() {
        try {
            this.__proto__ = this;
        } catch(e3) {
        }
        const v5 = [Reflect,this,Reflect];
        const v6 = Reflect.construct(v0, v5, v0);
        const o7 = {
        };
        try {
            o7.b = v5;
        } catch(e8) {
        }
        try {
            const o9 = {
            };
            o9.b = v5;
            o9.d = v5;
        } catch(e10) {
        }
        try {
            const o11 = {
            };
            o11.b = v5;
            o11.d = v5;
            o11.a = v6;
        } catch(e12) {
        }
        try {
            const o13 = {
            };
            o13.b = v5;
            o13.d = v5;
            o13.a = v6;
        } catch(e14) {
        }
        return Reflect;
    }
}
const v15 = new C1();
new C1();
const v17 = new C1();
try {
    new Float64Array(1000);
} catch(e21) {
}
try {
    new BigInt64Array(4);
} catch(e25) {
}
try {
    new Float64Array(255);
} catch(e29) {
}
try {
    new Int32Array(3);
} catch(e33) {
}
let v35 = Uint32Array;
try {
    new v35(333);
} catch(e37) {
}
try {
    new Int32Array(12);
} catch(e41) {
}
for (const v43 in v0) {
    try {
        v35 %= v35;
    } catch(e44) {
    }
}
v15.g;
try {
    C1[v0] = v17;
} catch(e46) {
}
