function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.e = 1073741823;
}
const v3 = new F0();
const v4 = new F0();
new F0();
[854.0636870222006];
[301254.232327431,-1.7976931348623157e+308,-Infinity,-1000.0,2.2250738585072014e-308,Infinity,4.0];
[-1.7976931348623157e+308,81018.89150979486,-1.1820149970151695e+308,NaN,0.4281314604138353,-1e-15,1000.0,-1000000000000.0,1.313013555626394e+308];
new Uint8Array(257);
new Uint8Array(10);
const v20 = new Uint32Array(2);
function F21(a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = 2;
}
new F21("268435441", v3, "268435441");
const v27 = new F21("268435441", v4, v20);
const v28 = new F21("9", v4, v27);
v28.__proto__;
delete v4?.e;
v4 != v28;
const o32 = {
};
new Proxy("268435441", o32);
try {
    new Float64Array(167);
} catch(e6) {
}
try {
    new BigInt64Array(10);
} catch(e10) {
}
try {
    new BigUint64Array(0);
} catch(e14) {
}
new WeakSet();
class C17 {
    g;
    static get d() {
        function f19() {
            return this;
        }
        return BigUint64Array - BigInt64Array;
    }
    c = Float64Array;
    static #b;
    static [-1];
    [-2] = 0;
}
new C17();
const v22 = new C17();
new C17();
const o26 = {
    valueOf() {
        try {
            C17 ^= this;
        } catch(e25) {
        }
        return 167;
    },
};
-13n >>> v22;
