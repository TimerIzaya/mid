class C3 {
    static 129 = "symbol";
    constructor(a5) {
        const v6 = "number";
        ("symbol")["9007199254740992"];
        v6.length;
        v6.length = 0;
    }
    static 641;
    1816673881 = "symbol";
    a;
}
const v10 = new C3("number");
new C3("symbol");
const v12 = new C3("9007199254740992");
function F13(a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = "symbol";
    this.e = a16;
}
new F13(v10, "number");
const v18 = new F13(v12, "number");
new F13(v18, "symbol");
new Float32Array(1);
const v25 = new Int16Array(1793);
new Int8Array(4);
let [] = v25;
class C3 {
    set a(a5) {
        const v6 = ("ownKeys")[268435439];
        const o7 = {
        };
        try {
            o7.c = 704608.2141829904;
        } catch(e8) {
        }
        try {
            const o9 = {
            };
            o9.c = 704608.2141829904;
            o9.a = 704608.2141829904;
        } catch(e10) {
        }
        try {
            const o11 = {
            };
            o11.c = 704608.2141829904;
            o11.a = 704608.2141829904;
            o11.e = this;
        } catch(e12) {
        }
        try {
            const o13 = {
            };
            o13.c = 704608.2141829904;
            o13.a = 704608.2141829904;
            o13.e = v6;
        } catch(e14) {
        }
    }
}
new C3();
new C3();
const v17 = new C3();
let [v21,,v22] = "valueOf";
Reflect.construct(v22, ["ownKeys"], C3);
v17.a;
+"valueOf";
Math.cos(-7 ^ 0.09375203977459046);
