const v3 = [5.0,-1.7976931348623157e+308,-4.771752521340221e+307];
const v4 = [945051.8760234306,-1.2023208918736802e+308,386269.28820778476,-2.0];
const v5 = [-5.0,-4.0,-1000000.0,0.17820869297148112];
class C9 {
    toString(a11, a12) {
        try {
            super.n(a12);
        } catch(e14) {
        }
        function F15(a17, a18, a19) {
            if (!new.target) { throw 'must be called with new'; }
            this.e = a17;
            this.f = a11;
            this.a = v3;
        }
        new F15("35031", this, a11);
        new F15("35031", F15, 58067);
        new F15("function", 58067, v3);
        return a12;
    }
}
new C9();
new C9();
new C9();
const v28 = new Float64Array(366);
new Int16Array(257);
const v34 = new Uint8Array(969);
v28["reduce"](...v34, ..."u", ..."reduce", 969, 536870888, C9);
for (let i38 = 0; i38 < 8; i38++) {
    Object.defineProperty("reduce", "f", { enumerable: true, value: i38 });
    const v44 = delete v4?.length;
    try { v44.raw(v5, Int16Array, v34); } catch (e) {}
}
const v0 = [];
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = v0;
    } catch(e3) {
    }
    try {
        this.h = v0;
    } catch(e4) {
    }
    try {
        this.e = v0;
    } catch(e5) {
    }
}
new F1();
const v7 = new F1();
new F1();
function f12(a13, a14, a15) {
    const o22 = {
        n(a17, a18) {
            for (let v19 = 0; v19 < 32; v19++) {
                this["p" + v19] = v19;
            }
            return a17;
        },
        "c": v7,
        "d": -536870912,
    };
    return o22;
}
const v23 = f12(v0, 65537, -536870912);
const v25 = f12(f12(1073741824, -536870912, 1073741824), v23, 1073741824);
let v26;
try { v26 = v7.setBigInt64(v23, v25); } catch (e) {}
for (let i29 = 0, i30 = 10; i29 < i30; i29++, i30--) {
    v26.__proto__;
}
