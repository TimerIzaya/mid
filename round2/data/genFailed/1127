function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a5;
    this.e = "-21524";
}
const v6 = new F3("p");
const v7 = new F3("p");
const v8 = new F3("-21524");
new WeakSet();
function F12(a14, a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a17;
    this.e = WeakSet;
    this.d = undefined;
}
const v18 = new F12("number", "-21524", v6, v7);
new F12("-21524", "number", v7, v7);
new F12("-21524", "number", v8, v6);
let v22;
try { v22 = v18["toGMTString"](v18, "toGMTString", "number"); } catch (e) {}
const o23 = {
};
new Proxy(v22, o23);
[-1823077575,7,30070,336141387,-2,37434,4294967296,35755,8,-15];
[536870912,-9223372036854775807,16,9];
const v28 = [12,8];
const t26 = "number";
t26[v28] = v28;
class C3 {
    static p(a5, a6) {
        const v8 = delete d?.["H"];
        a6 < d;
        let v10;
        try { v10 = new a6(v8); } catch (e) {}
        super[v10];
        return a5;
    }
    m(a13, a14) {
        return -1.1002022545077952e+308;
    }
}
const v18 = new C3();
new C3();
new C3();
class C21 extends C3 {
    static toString(a23, a24) {
        const o28 = {
            "execution": "async",
            "type": "minor",
        };
        return gc(o28);
    }
    static 268435439 = -548202.7535842292;
    #e;
}
const v30 = new C21();
new C21();
const v32 = new C21();
try {
    new Int16Array(1498);
} catch(e36) {
}
try {
    new Uint8Array(214);
} catch(e40) {
}
try {
    new BigUint64Array(9);
} catch(e44) {
}
if (v30 > 214) {
    e = v32;
} else {
    v18[C21];
}
