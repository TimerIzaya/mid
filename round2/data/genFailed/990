new Float64Array(3225);
const v5 = new Int8Array(4096);
new Float64Array(11);
const v13 = v5["toSorted"](Float64Array);
function f14(a15, a16, a17) {
    const o18 = {
        "c": a15,
        "e": a15,
        "a": v13,
        ...v13,
    };
    return o18;
}
f14(3225, 3, 16);
f14(3225, v13, -854941173);
f14(v13, 3225, 3225);
function f0() {
    const o19 = {
        set d(a5) {
            delete this[2062];
            try {
                new BigUint64Array(129);
            } catch(e10) {
            }
            try {
                new Float32Array(1647);
            } catch(e14) {
            }
            try {
                new BigUint64Array(2);
            } catch(e18) {
            }
        },
    };
    return o19;
}
const v20 = f0();
const v21 = f0();
const v22 = f0();
let v23 = Array;
new v23(24);
class C26 {
    static d = f0;
    constructor(a28, a29) {
        d = a29;
    }
    #h = v22;
    d;
    static #p(a34, a35) {
        const v36 = this << v21;
        try {
            v20.#h &= v36;
        } catch(e37) {
        }
        a35.d >>= 24;
        this[89];
        return v20;
    }
}
const v39 = new C26(v22, v20);
new C26(v39, v39);
new C26(v20, C26);
[-143050036,268435441,-9,10,65535,-1095002242];
[128];
[-9,-2,-57128,129,10000];
const o51 = {
    valueOf() {
        try {
            v23 ||= new.target;
        } catch(e50) {
        }
        return 4096;
    },
};
