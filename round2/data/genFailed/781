new BigInt64Array(2);
const v14 = new BigInt64Array(45);
let v17 = new BigUint64Array(1024);
v17.toString = -1645818977;
v17 -= v17;
const v18 = `isInteger${"c"}matchAll${BigUint64Array}-4294967297${v14}string${-58420}a`;
v18[v18] |= -1645818977;
"number" | "string";
function f20() {
    return v18;
}
try { v18.codePointAt(65536); } catch (e) {}
const v22 = -16293;
function f3(a4) {
    const o15 = {
        set h(a6) {
            const v10 = ~a4;
            v10 & v10;
            Math.hypot(847.3100839278243);
            Math.cosh(a4);
            v10 ^ -1417178824;
        },
        "d": a4,
        __proto__: "isInteger",
        ...a4,
    };
    return o15;
}
const v16 = f3("isInteger");
f3("f");
f3("f");
const v22 = /[(x)(x)(x)\1*(?:a+){0,0}u?]/siu;
const v23 = /b/syv;
const v24 = /\bd*/idgmyv;
v24.global += 255;
delete v22[-536870912];
Object.defineProperty(v23, "h", { set: f3 });
const o26 = {
    __proto__: v16,
    ..."f",
    "h": "e",
    "g": "e",
};
Object.defineProperty(v24, 244, { value: o26 });
