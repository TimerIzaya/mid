[-1.2389652289791673e+308,-1.2389652289791673e+308,-1.2389652289791673e+308,-722.8258647781955];
const v4 = [1000000.0];
const v5 = [-722.8258647781955,v4];
new WeakMap();
class C11 extends WeakMap {
    constructor(a13, a14) {
        super("string");
        a14 >= v4;
        function f18() {
            return -722.8258647781955;
        }
    }
    static b;
    static #a = 1000000.0;
    #g = v5;
    #f;
}
const v19 = new C11(-722.8258647781955, -722.8258647781955);
new C11(1000000.0, -1.2389652289791673e+308);
let v21 = new C11(1000000.0, -722.8258647781955);
v21 = v19;
let v23 = 1;
const v25 = v23++;
const v26 = Math.tanh(v23);
Math.cbrt("e");
2.5936794658414857e+307 << v25;
try { v23(v26, -1.2389652289791673e+308, v21, "isView", v23); } catch (e) {}
try { v19.has(-1.2389652289791673e+308); } catch (e) {}
try {
    new Uint32Array(129);
} catch(e6) {
}
try {
    new Int32Array(9);
} catch(e10) {
}
try {
    new Float64Array(1954);
} catch(e14) {
}
class C15 extends Float64Array {
    constructor(a17, a18) {
        super(a17);
        super.byteLength **= 129;
        this.byteOffset *= 129;
    }
    static #toString(a20, a21) {
        try {
            this.__proto__ = this;
        } catch(e22) {
        }
        let v23;
        try {
        const t0 = 0.0;
        v23 = t0(Uint32Array, a20, -654.4504908053755, 129, a21);
        } catch (e) {}
        return v23;
    }
    static #d;
    g = 1954;
}
const v24 = new C15(1000000.0, 1954);
new C15(v24, 9);
new C15(0.0, 1954);
const v30 = [-268435456,9007199254740991,-268435456,0.0];
[v30,C15,v30,1000000.0,9007199254740991];
[v30,-268435456];
class C33 extends Int32Array {
    get a() {
        try {
        const t0 = 9;
        t0(9, this, this, 129, C15);
        } catch (e) {}
        return v30;
    }
    #d;
}
new C33();
new C33();
new C33();
