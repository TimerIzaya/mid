const v0 = [];
class C1 {
    constructor() {
        try {
            [-1000000000.0,5.736977380644076e+307,Infinity,0.03431633132508871,-0.09170113535158997,-0.0,0.22353877013164414,3.7466479146083813,-1.7976931348623157e+308,4.0];
            [0.42433017091969505,-1000000.0,-2.2250738585072014e-308,420.36681090041975,4.678587892071741,NaN,-1.0791447590496293e+308,-Infinity,0.2889645493880745];
            [-2.0,-2.6551972974134923];
        } finally {
            let [] = v0;
            delete v0?.length;
        }
    }
    [v0];
    #a;
    static 9;
    d = v0;
    static b = v0;
}
new C1();
new C1();
new C1();
const v11 = new Map();
const v14 = new Uint32Array(257);
new Uint32Array(2927);
new Int8Array(1628);
const v23 = v11[Symbol.toStringTag];
let v24;
try { v24 = v23(); } catch (e) {}
v14[10] = v11;
try { v14.reduceRight(v24, v14); } catch (e) {}
C1.f = v11;
