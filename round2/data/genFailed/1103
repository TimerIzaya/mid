let v1 = Uint32Array;
new v1(98);
const v5 = new Float64Array(1862);
const v8 = new Uint32Array(1733);
const v9 = /(?=a){0,10}ama\fb\nc\rd\te\vf?/id;
let v10 = /((((.).).).)(?:a+)+/gmsdv;
const v11 = /SgX[\ca]/gisdu;
[1733,v9,v1,v8,v11];
[v1];
const v16 = v5["map"](v9, [v8,1862,98,1862]);
const o17 = {
};
const v19 = new Proxy(v1, o17);
v1 = v19;
++v10;
v16[536870888] = v11;
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = -1664186923;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
const v9 = new Array(2085);
[-4.0,0.12437097994151003,1000000.0];
const v14 = [NaN,719.9507096129216,-33946.42970543925,1000000000.0,606779.255305331,-4.674326446017768e+306,-2.0,1000.0];
const v15 = [2.0,-1.0,2.0,-1000000000.0,1000000000000.0,5.957880678814586e+307,0.2809833075714552,332296.525885344];
function F16(a18, a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v6;
    } catch(e22) {
    }
    try {
        this.a = a20;
    } catch(e23) {
    }
    try {
        this.h = v14;
    } catch(e24) {
    }
}
new F16("valueOf", "function", v9, v4);
const v26 = new F16(v14, "valueOf", v15, v6);
let v27 = new F16(v26, "valueOf", v14, v6);
const v28 = --v27;
function f29(a30, a31) {
    Array(v28);
    const o35 = {
        "maxByteLength": 1000,
    };
    const v37 = new ArrayBuffer(1000, o35);
    try {
        new Int8Array(v37);
    } catch(e40) {
    }
    return a30;
}
f29(v14, v5);
