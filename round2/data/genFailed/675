-Infinity;
new BigInt64Array(102);
const v8 = new Uint16Array(15);
new Int8Array(255);
const o18 = {
    "execution": "async",
    "type": "minor",
};
gc(o18);
v8[10];
Object.defineProperty("minor", 9, { configurable: true, value: 102 });
class C3 {
    f = "MIN_VALUE";
    4294967295;
    ["-2"];
    get c() {
        super.f ||= 6309;
        const o8 = {
        };
        try {
            new Proxy("-2", o8);
        } catch(e11) {
        }
        return -2147483648;
    }
}
const v12 = new C3();
const v13 = new C3();
const v14 = new C3();
function f18() {
    return v14;
}
function F19(a21, a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = -9007199254740992;
    } catch(e25) {
    }
}
new F19(-9007199254740992, 1000, v13, "IXl");
const v27 = new F19(-937362786, -937362786, v14, "IXl");
new F19(-9007199254740992, -937362786, v13, "MIN_VALUE");
Object.defineProperty("-2", 9, { enumerable: true, get: f18, set: f18 });
function f29(a30, a31, a32, a33) {
    Math.atanh(-1000000.0);
    Math.imul(a32, -1000000.0);
    ++a32;
    return a33;
}
f29(1000, v27, -9007199254740992, v12);
