[];
const v1 = [-8.492951347096522e+307];
const v2 = [1.0,2.0,-1000000000.0,903.6920805575708,1000000.0,-2.2250738585072014e-308,-8.01249725747754,-1000.0,-431250.39994638483];
[455.8453724595306,0.881512785039062];
const v4 = [1208093187,-1,-9223372036854775808,65535,-1826745161,4294967297];
const v5 = [-4294967295,64816444];
const v6 = [65536,140505196,472167560,-2147483648,-47979,10000,9,-4,-1529,-10];
const v7 = /IH9T?/yisdv;
const v8 = /[86(\2)(\1)]/gmydu;
const v9 = /(?<a>.)\k<a>/gm;
function F10(a12, a13, a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = a14;
}
new F10(v9, v1, v5, v7);
const v17 = new F10(v7, v4, v1, v8);
const v18 = new F10(v8, v4, v5, v7);
const v19 = new F10(v7, v18, v2, v8);
try {
    v19.p(v17, v6, -3.149705231616295);
} catch(e22) {
}
typeof v4 === "bigint";
v18 instanceof F10;
class C3 {
    g = -9007199254740991;
    n(a5, a6) {
        try {
            this.fuck(-9007199254740991, "-462538174", "MIN_SAFE_INTEGER");
        } catch(e10) {
        }
        return a5;
    }
    #b = 65537;
}
const v11 = new C3();
const v12 = new C3();
const v13 = new C3();
const v14 = [-15011,-6,-2147483649];
[37931,46227,-3,2147483648,6,1211445440,13,-2];
const v16 = [255,5,1694042586,1000,-39377,8,16134,-15];
class C17 extends C3 {
    static get a() {
        try {
            C3 = this;
        } catch(e19) {
        }
        return v11;
    }
    static e = -9.274301600102248;
    #c;
    [v14] = v11;
    [v12] = -9007199254740991;
}
new C17();
new C17();
const v22 = new C17();
let v23;
try { v23 = v22(...v14, ...v22, C3, v22, -9007199254740991); } catch (e) {}
try {
    v13.toString = v23;
} catch(e24) {
}
for (let [v25] of v16) {
    try {
        new C17();
    } catch(e27) {
    }
}
