function f0() {
}
const v2 = new Date();
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = a5;
    this.d = Date;
}
const v7 = new F3(Date, F3);
const v8 = new F3(Date, v7);
const v9 = new F3(f0, f0);
const v10 = [v2,v2,f0,F3,v9];
const v11 = [Date,v8,v10,v10,v10];
[F3,Date,v7,v9,v7];
const v16 = v7[f0];
Object.defineProperty(v2, "d", { writable: true, get: f0, set: f0 });
for (let v17 = 0; v17 < 100; v17++) {
    Date(127);
}
[9007199254740991,8,-4294967296,268435440,-536870912,12196,28412,9096,-12];
[35212,10,801609519];
let v21 = [16,0,34916,268435440,129,12899,-62611,243700281,268435456,-9223372036854775807];
v21--;
const v26 = +v16;
~8595;
v11 && v26;
try {
    new Int16Array(2);
} catch(e3) {
}
try {
    new Int8Array(0);
} catch(e7) {
}
try {
    new Uint8ClampedArray(6);
} catch(e11) {
}
class C12 extends Int8Array {
    987;
    static #m(a14, a15, a16, a17) {
        try {
            a16 ^= a14;
        } catch(e18) {
        }
        const v20 = new Set();
        [...a16] = v20;
        return a14;
    }
    4096 = 2;
    e = 2;
    b;
    static 350 = 0;
}
const v21 = new C12();
const v22 = new C12();
new C12();
const v24 = [-1861966844,2];
const v25 = [268435441,536870887,2147483649,6,7,13,2147483647,2,-2147483647];
const v26 = [-24291,10,268435441,2016940132,-9007199254740992];
let v28 = "bigint";
for (const v30 in v21) {
    try {
        v28 %= v30;
    } catch(e31) {
    }
}
%VerifyType("J68");
let v32;
try {
const t0 = "J68";
v32 = t0("uijaH", C12, Int8Array, v24);
} catch (e) {}
try { v32(v22, v25, v28, "J68", v22); } catch (e) {}
const o34 = {
};
try {
    o34.d = v26;
} catch(e35) {
}
try {
    const o36 = {
    };
    o36.d = v26;
    o36.h = v28;
} catch(e37) {
}
try {
    const o38 = {
    };
    o38.d = v26;
    o38.h = v28;
    o38.c = Int16Array;
} catch(e39) {
}
try {
    const o40 = {
    };
    o40.d = v26;
    o40.h = v28;
    o40.a = 6;
} catch(e41) {
}
