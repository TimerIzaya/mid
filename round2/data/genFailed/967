class C3 {
    n(a5) {
        super[-1.0] = this;
        ["HNR",this,this,"HNR"];
        [a5];
        [this];
        return "iIdDS";
    }
    static set e(a10) {
        this === "HNR";
        new Uint8ClampedArray(190);
        new Int32Array(2620);
        new Float64Array(4096);
    }
}
const v21 = new C3();
const v22 = new C3();
const v23 = new C3();
function f24(a25, a26) {
    const o30 = {
        [a26]: v22,
        268435439: "iIdDS",
        get d() {
            let v28;
            try { v28 = this.pow(); } catch (e) {}
            v22.__proto__ = a26;
            Object.defineProperty(a25, 65536, { enumerable: true, value: "iIdDS" });
            function f29() {
                return -1.0;
            }
            return v28;
        },
        6: a26,
    };
    return o30;
}
f24(v23, "HNR");
f24(v21, v21);
const v33 = f24(v21, "iIdDS");
const v36 = new Uint8Array(257);
new Float64Array(8);
new Uint8ClampedArray(4096);
Object.defineProperty(v36, 2802209248, { writable: true, configurable: true, set: f24 });
Object.defineProperty(v33, v36, { writable: true, configurable: true, value: Uint8ClampedArray });
for (let v43 = 0; v43 < 10; v43++) {
    const v44 = f24(v23, -1.0);
    let v46 = -9223372036854775807;
    v46++;
    -1.0 * v44;
    Math.cos(v46);
    Math.round(v44);
    -1.0 - -1.0;
    Math.random();
}
function f3(a4, a5) {
    const o11 = {
        get e() {
            [3.0,-632500.0636257578,9.413317089315989,1.7976931348623157e+308,-1000000000.0];
            [-1000000000.0,NaN,2.2250738585072014e-308,NaN,0.941044702618618,5.0,-1000000000.0,Infinity,2.0];
            [1e-15,1.1660306977280447e+308];
            return a4;
        },
        [a4]: -4294967295,
        get a() {
            this[512] -= -4294967295;
            return a5;
        },
        __proto__: 4294967296,
        ...-4294967295,
        "d": -4294967295,
    };
    return o11;
}
const v12 = f3(-4294967295, 4294967296);
f3(-4294967295, 512);
[f3,f3(-4294967295, 4294967296),35541n,35541n];
const v19 = [4294967296,f3];
const v20 = [v12,v19,-4294967295,f3,-1742563502n];
try {
    v20.toSpliced(4294967296);
} catch(e25) {
}
v20.push(..."-8408", -4294967295, ...v19, ..."bigint", 512, -1742563502n);
Math.atanh(-1742563502n);
3 * -1742563502n;
!-1742563502n;
~3;
