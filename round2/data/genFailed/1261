function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a6;
}
const v7 = new F3(-9, 11);
const v8 = new F3(11, -1);
const v9 = new F3(11, 11);
const v12 = new Array(1);
const v13 = [v9,F3,1,v12,Array];
const v14 = [-9,-1,11,F3];
[v13,v14,F3,-1,v8];
function f16(a17, a18, a19) {
    Object.defineProperty(v7, a19, { writable: true, configurable: true, enumerable: true, set: Array });
    v13.length;
    const o24 = {
        "execution": "sync",
        "type": "minor",
    };
    return gc(o24);
}
f16(v14, v14, v13);
function f6(a7, a8, a9) {
    const o20 = {
        268435456: a8,
        __proto__: "charAt",
        [-14]: a8,
        toString(a11, a12, a13, a14) {
            this["string"];
            /aWWzcea[bc]d\u0034/dmu;
            /(\2)(\1)E*/sy;
            return /d[[\ca]]/uy;
        },
        "b": "string",
        "c": a7,
        [a7]: 256,
    };
    return o20;
}
const v21 = f6("charAt", "string", -14);
const v22 = f6("4oN", v21, -14);
const v23 = f6("4oN", "4oN", 256);
function F24(a26, a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a28;
    } catch(e30) {
    }
}
const v31 = new F24("4oN", "4oN", 256, v21);
let v32 = new F24("4oN", "4oN", -14, v23);
new F24("4oN", "4oN", -14, v21);
for (let v34 = 0; v34 < 63; v34++) {
    let v35;
    try { v35 = ("4oN").padStart(4294967295, "charAt"); } catch (e) {}
    try { v35(v22, "string"); } catch (e) {}
}
try {
    v31.__proto__ = "charAt";
} catch(e37) {
}
try {
    v32 /= v32;
} catch(e38) {
}
