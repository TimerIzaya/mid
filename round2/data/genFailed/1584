class C3 {
    #g;
    set e(a5) {
        try {
            this.#g = a5;
        } catch(e6) {
        }
        a5?.d;
        [[a5,[-2016291703],-2016291703,256,-6],-2016291703];
    }
    [-2016291703] = 256;
    g;
}
const v11 = new C3();
const v12 = new C3();
const v13 = new C3();
class C14 extends C3 {
    static {
        [-4.0,2.2250738585072014e-308,-1.6399623769493227e+308,-4.0,-4.348053984033915,3.0,418.667218474641,-683.7409188678771,0.5886312880026816];
        [1e-15,0.3960676756158812,-438.9687466969026,-493656.67525196064,1.038893695302831e+308,7.359839805958497e+306,-1000000.0,0.3177213312061695];
        [-4.46840894450054e+307,-340.18818241093913,2.0,-9.488363241049997,4.0,4.0];
    }
    constructor(a20, a21, a22, a23) {
        super();
        this.length = 2;
        C3[this] = v12;
        f = this;
    }
    [256];
}
const v25 = new C14(-2016291703, C14, -2016291703, v11);
new C14(256, v25, -6, v25);
new C14(256, v11, -6, C3);
[[256,[256,-2016291703,C3,v13,256]],v13,-2016291703,C14];
const v32 = Symbol.toPrimitive;
const o39 = {
    [v32]() {
        try { v25["valueOf"](v12, 256, "valueOf", v12, this); } catch (e) {}
        return 256;
    },
};
