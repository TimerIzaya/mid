class C3 {
    get a() {
        ("split")["trimStart"]();
        const v7 = [2,-801361836,4096,-128];
        [-1073741824];
        [1,64221,65535,-65535,-536870912];
        return v7;
    }
    static {
        try {
        const t0 = "split";
        t0(this);
        } catch (e) {}
    }
}
const v17 = new C3();
const v18 = new C3();
const v19 = new C3();
class C20 {
    static a;
    static get c() {
        const t21 = "m";
        t21[10] = v17;
        let v22;
        try { v22 = v19(1.0, v18, "split", this); } catch (e) {}
        let v23;
        try { v23 = new v22("split", v22); } catch (e) {}
        return v23;
    }
    constructor(a25, a26, a27, a28) {
        v18.a = a26;
        delete v17[-1];
    }
    [C3];
    static 4;
    #g;
}
const v30 = new C20(C3, v17, C20, v19);
const v31 = new C20(v17, v18, v18, v18);
new C20(v18, v31, v30, v17);
for (const v36 of "m") {
    let v39 = 268435456;
    const v40 = ~C20;
    v39 >>> C20;
    ++v39;
    Math.acosh(v40);
    Math.log10(C20);
}
