const v0 = [];
const v3 = new Int8Array(1921);
const v6 = new BigUint64Array(128);
let v8 = Int8Array;
const v9 = new v8(5);
class C10 extends BigUint64Array {
    p(a12, a13, a14, a15) {
        let v16;
        try { v16 = a13(v3, v0, this, v9, v3); } catch (e) {}
        let v17;
        try { v17 = v16(v16, 1921, v16, v16, BigUint64Array, v16); } catch (e) {}
        this[a13] -= v17;
        super[a12] = a15;
        return v6;
    }
    static a;
    1051011238;
    5;
    static 0 = 5;
    9;
    3526379777;
}
let v18 = new C10();
new C10();
const v20 = new C10();
({"length":v18,...v8} = v6);
for (const v21 of v0) {
    v20[536870912] = 1921;
    [-4096,-8684];
    [1024,41688,256,-4294967297,58904,-268435456,2];
    [41869,-9,744475668,-12,-1025813620,65536,-21249,4,-750];
}
Object.defineProperty(v6, "f", { writable: true, configurable: true, enumerable: true, value: v18 });
