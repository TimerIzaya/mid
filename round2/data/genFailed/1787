function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = 30056n;
    this.e = a5;
    this.g = a5;
}
new F3(-39074413n);
new F3(-39074413n);
new F3(61262n);
function f9() {
    return F3;
}
const v12 = new Int16Array(2918);
const v15 = new BigUint64Array(2);
const v18 = new Uint16Array(3);
Object.defineProperty(v12, 30056n, { enumerable: true, value: v18 });
function f19(a20, a21, a22) {
    function f24(a25) {
        2 - f9;
    }
    this.onmessage = f24;
    try { this.setUTCMinutes(-39074413n, 3, a20); } catch (e) {}
}
const v30 = ["function",2918,v15];
const o31 = {
    "arguments": v30,
    "type": "function",
};
new Worker(f19, o31);
