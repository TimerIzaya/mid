function f0() {
    const o9 = {
        [3]: 3,
        1073741824: 3,
        p(a5) {
            return a5;
        },
        ...16,
        "e": 16,
        "a": -65536,
        [16]: 16,
        388: 3,
        7: 16,
    };
    return o9;
}
f0();
const v11 = f0();
f0();
class C16 extends f0 {
    static {
        v11[this] = this;
        [256,-10,-65536,33037,65537,1024,-536870912,-2147483648,-1736924978];
        [1073741824,-210235168,-1934993267,4096,-1024,536870888,2147483648];
        [918255625,8,-1073741824,-2,-13,4060,-1,5,2147483647,2051150639];
        [-3.406375134777802,-395.759347422509,0.8737521899395625,-1000.0,0.1156978885176615];
        [-1000000.0,1.4797535667398262e+308,-640871.3325962849,-1000000.0,-4.0,-3.0,-5.324196853863416];
        [-1.7976931348623157e+308,1.0,-1000000000.0,226.6319753844091,-9.125774974133227,-Infinity,0.778064398112365,2.0,Infinity,-4.0];
    }
    n(a25, a26) {
        [] = a26;
        return "boolean";
    }
}
new C16();
new C16();
const v32 = new C16();
new BigUint64Array(256);
const v38 = new Uint16Array(16);
new Int8Array(1024);
class C42 extends BigUint64Array {
    static [f0] = 16;
    static 268435456;
    static #f = "610741873";
}
new C42();
new C42();
new C42();
Object.defineProperty(v38, "length", { get: f0 });
Object.defineProperty(v32, v38, { writable: true, configurable: true, enumerable: true, set: f0 });
try {
    new Float32Array(64);
} catch(e3) {
}
try {
    new Uint32Array(1687);
} catch(e7) {
}
try {
    new Int16Array(54);
} catch(e11) {
}
const v12 = [64];
const v13 = [Uint32Array,v12,v12,54];
const v14 = [v12,54,v12,Uint32Array,v13];
const v15 = [0.6577760228722174,0.08389481928387077,-4.0];
const v16 = [-2.2250738585072014e-308,1000000.0];
[0.0,4.0,9.109876624081569,-Infinity,-488768.4612056127,2.0,-1.374323782793837e+307,0.3914522261980482];
try {
    new Uint32Array(v14);
} catch(e19) {
}
throw v16[v13];
%VerifyType(v15);
v13[Symbol.isConcatSpreadable];
