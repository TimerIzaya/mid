function f0() {
    const o12 = {
        ..."toString",
        "h": 460542.34332059976,
        ..."toString",
        "b": 460542.34332059976,
        "g": 460542.34332059976,
        "f": "toString",
        ["toString"]: 12,
        "e": 12,
        [460542.34332059976]: 460542.34332059976,
        ..."toString",
        get c() {
            const v5 = this["toString"];
            const v6 = "toString" !== this;
            super[v6] = this;
            v6 instanceof v5;
            super["toString"];
            return -6.356698416073774;
        },
    };
    return o12;
}
const v13 = f0();
const v14 = f0();
let v15 = f0();
class C16 {
    #valueOf(a18, a19) {
        try {
            super.setUint32(this);
        } catch(e21) {
        }
        const v22 = v15.b;
        this[v22] = v14;
        function f23() {
            return v22;
        }
        return f0;
    }
    static 140057818 = v15;
    static [v13] = v14;
    static #f;
}
const v24 = new C16();
new C16();
new C16();
let v28 = -4294967296;
class C30 extends f0 {
    static set d(a32) {
        let v31 = this;
        ({"b":v28,"e":v15,"f":v31,} = a32);
        Object.defineProperty(v24, C16, { value: 1972573021 });
    }
    [C16];
    set b(a35) {
        function f39() {
            return -0.0;
        }
        new f39();
    }
}
new C30();
new C30();
new C30();
v15 = f0;
v15--;
const o47 = {
    "maxByteLength": 7,
};
const v49 = new SharedArrayBuffer(7, o47);
new BigUint64Array(v49);
