const v0 = [];
function f1() {
    const o19 = {
        "d": v0,
        "h": v0,
        m() {
            return 4 || v0;
        },
        get f() {
            const v8 = v0 >>> this;
            try { this(v8, v8, this); } catch (e) {}
            const v12 = -v8;
            !v8;
            Math.random();
            Math.cos(v12);
            +v8;
            v12 / this;
            1024 << 1024;
            return v0;
        },
    };
    return o19;
}
const v20 = f1();
f1();
let v22 = f1();
[-5];
[536870912,-31250346,347128144,-80625871,37928,-1,-1024];
[41404,2147483648,536870887,512];
new Float32Array(225);
const v31 = new BigUint64Array(127);
new Uint16Array(2377);
v31.byteLength;
[1230153756,1,-2147483648,1,-59245,-60563,2];
[-128,-553384277,-4294967297,-761406679,1024,-4096,-586827026];
[-41548,-2147483647,-7,-6374,9007199254740992,268435441,536870912,31891,30151,268435439];
v22 = v20;
const o42 = {
    "maxByteLength": 787769044,
};
const v44 = new ArrayBuffer(257, o42);
new Float64Array(v44);
