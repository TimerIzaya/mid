[4.0,-1.0,-3.822173605990981];
const v1 = [1000000000000.0,212.1195635933875,-2.220446049250313e-16,-1e-15,612206.3182617787];
const v2 = [-596.8511721378644];
[-1.7976931348623157e+308,2.2250738585072014e-308,-7.03595465021429e+307,1.566609458242834e+308,-1000000000000.0,-443.43184063141746];
const v4 = [1000000.0,-781.023887928247,-1000.0,0.0,-5.610871298902074,-1000000000000.0];
const v5 = [-1.6007049850172587e+308,NaN,Infinity,2.0,-1000000000.0];
function f6() {
    return v4;
}
class C7 {
    static c;
    constructor(a9, a10, a11, a12) {
        try {
            f6();
        } catch(e14) {
        }
        v4[Symbol.species] = v1;
    }
    static 1108902014;
    [v5];
    static e;
}
const v17 = new C7(v1, v2, v5, v4);
let v18 = new C7(v2, v1, v17, v17);
new C7(v17, v18, v18, v1);
for (const v23 of v1) {
    f6();
}
const v25 = C7[v5];
f6++;
const t30 = "findLast";
t30.length += v1["findLast"](v25);
[] = v2;
const v31 = v18--;
Math.sin(60046);
Math.clz32(v31);
