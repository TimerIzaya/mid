function f0() {
}
function f1() {
    const o16 = {
        ...f0,
        "c": f0,
        33625267: f0,
        "f": f0,
        m() {
            this[0] = f0;
            for (let i5 = 0, i6 = 10; i5 < i6; i5++, i6--) {
                try {
                    new f0();
                } catch(e15) {
                }
            }
            return this;
        },
    };
    return o16;
}
const v17 = f1();
const v18 = f1();
const v19 = f1();
class C20 extends f1 {
    constructor(a22) {
        super();
        super.m(f0, this, v18);
    }
    get g() {
        Object.defineProperty(v18, "d", { writable: true, configurable: true, set: f1 });
        v19[this] **= this;
        delete this[1073741824];
        return f1;
    }
    e;
    4096 = f1;
}
const v26 = new C20(C20);
const v27 = new C20(v26);
const v28 = new C20(v27);
function f29() {
    return f0;
}
new Set();
try {
    const o33 = {
    };
    v17.m(v28, undefined, o33, o33);
} catch(e35) {
}
v19[1] = Set;
[12593437,-4294967295,-1886701505,33516];
[10000,-10,10741,-1023749975,-268435456];
[1];
class C3 {
    constructor(a5, a6) {
        Object.defineProperty("symbol", 16, { configurable: true, value: -32926 });
        try {
            this.fuck(["symbol",-32926,"pop",this,a5], -Infinity);
        } catch(e10) {
        }
    }
    static e;
    f = "pop";
    static 7 = -32926;
    6 = "pop";
    #e = -32926;
    d;
}
const v11 = new C3("pop", C3);
new C3(v11, v11);
const v13 = new C3("symbol", -32926);
const v22 = -Infinity;
try {
    const t20 = "-708655708";
    t20["keyFor"] = v22;
} catch(e23) {
}
try {
    v13.g = 683.576185834103;
} catch(e24) {
}
("species")[-2.0];
