class C3 {
    static f;
    static ["512"] = -2147483647;
    static 1 = -1.4827400435059572e+308;
    n(a5) {
        let v6;
        try { v6 = a5(-1.4827400435059572e+308, "512", "512", this, a5); } catch (e) {}
        const v7 = -2147483647 | a5;
        let v8;
        try { v8 = a5(v7, v6); } catch (e) {}
        const v10 = [];
        Reflect.apply(("512").trim, v8, v10);
        return "512";
    }
    7 = -1.4827400435059572e+308;
    #g;
}
new C3();
new C3();
new C3();
new Int32Array(127);
new Uint16Array(4);
new Uint8ClampedArray(15);
let v32;
try { v32 = ("512").startsWith("-13", -2147483647); } catch (e) {}
function f33(a34, a35) {
    try { a35(-2147483647, false, a34, "512"); } catch (e) {}
    const t27 = "512";
    t27[2] = v32;
}
new Promise(f33);
Object.defineProperty("-1024", 65, { writable: true, set: f33 });
v32 = false;
let {"c":v39,"f":v40,} = C3;
