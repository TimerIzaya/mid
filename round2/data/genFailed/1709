const v2 = new Int32Array(3);
new BigUint64Array(129);
const v8 = new Uint8Array(132);
function f9() {
    return v8;
}
class C10 extends Int32Array {
    constructor(a12, a13) {
        super(a13);
        a12[3] = v2;
        try {
            v8.entries();
        } catch(e15) {
        }
    }
    static toString(a17, a18, a19) {
        f9() | Uint8Array;
        f9();
        %PrepareFunctionForOptimization(f9);
        f9();
        f9();
        %OptimizeFunctionOnNextCall(f9);
        f9();
        return v2;
    }
}
new C10(v8, 129);
new C10(132, 129);
new C10(C10, 3);
const v29 = new Int32Array(129, 132, 132);
v8 >= -331.2228077738906 ? v8 : -331.2228077738906;
v29[1000.0];
try { C10.toString(1000.0); } catch (e) {}
