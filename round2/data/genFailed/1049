new Uint8Array(208);
new Uint8Array(512);
new BigUint64Array(127);
class C9 {
    toString(a11, a12, a13) {
        super.g = this;
        const o17 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o17);
        return BigUint64Array;
    }
    static [Uint8Array];
    static #b;
}
new C9();
const v20 = new C9();
const v21 = new C9();
switch (208) {
    case 512:
        v21.h >>>= 208;
        break;
}
v20 < C9;
v20.e = -30514;
class C3 {
    #g;
    b;
    constructor(a5, a6) {
        2 instanceof a6;
    }
    m(a9, a10) {
        for (let v11 = 0; v11 < 32; v11++) {
            a10["p" + v11] = v11;
        }
        return 2;
    }
}
const v14 = new C3(0.16648101485985234, 2);
const v15 = new C3(v14, C3);
new C3(v14, 2);
class C17 extends C3 {
    m(a19, a20) {
        this[0.16648101485985234] - this;
        return -418.58054248406313;
    }
    8;
    5;
    3523711617 = 0.16648101485985234;
    a = 0.16648101485985234;
    static c = v14;
    static [2] = -418.58054248406313;
}
new C17();
new C17();
let v25 = new C17();
if (2 === 0.16648101485985234) {
    try {
        new Int8Array(5);
    } catch(e30) {
    }
    try {
        new Float64Array(1);
    } catch(e34) {
    }
    try {
        new Int32Array(125);
    } catch(e38) {
    }
} else {
    v25++;
    const v44 = +C3;
    -338;
    338 >> v15;
    338 + C3;
    C3 + v44;
}
