[31488];
[35306,6,16];
[-4294967296,268435441,-65536,-2,65535,-1742680741,24861,9007199254740990];
let v4 = 268435441n;
let v6 = 5;
const v11 = new Uint32Array(11);
const v14 = new Uint16Array(6);
let v15 = 11;
new Uint32Array(v15);
for (let v18 = 0; v18 < 32; v18++) {
    v14["p" + v18] = v18;
}
[v15,,v6] = v11;
let v23 = 581891.5447065227;
Math.atan2(-2, -2);
Math.round(-2);
++v23;
const v27 = v4--;
Math.max(-2);
Math.clz32(v27);
-v23;
const v1 = new Date();
function f5(a6) {
    const o18 = {
        [a6](a8, a9, a10) {
            const v11 = /1a+?/sgv;
            /Hk/sdgyv;
            /abc+?/gv;
            v11.__proto__;
            return a9;
        },
        "c": 268435439,
        [a6]: a6,
        __proto__: v1,
        "d": -14,
    };
    return o18;
}
const v19 = f5(-65462);
const v20 = f5(-65462);
const v21 = f5(-65462);
class C25 {
    4 = Date;
    static #h;
    static get e() {
        v20[1024];
        [-256,1073741823,536870889,2707,3,-18220374,16,1073741824,104542497,7];
        [129,0,1073741825,257,6,4294967296,-657734584];
        [-2147483648,0,-1,1073741824,-5,0,23378,4];
        return 1000000000000.0;
    }
    constructor(a32, a33) {
        function F34(a36, a37, a38, a39) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = v20;
            } catch(e40) {
            }
            try {
                this.a = v19;
            } catch(e41) {
            }
            try {
                this.d = v20;
            } catch(e42) {
            }
        }
        new F34(268435439, -1e-15, v20, 268435439);
        new F34(-14, 629.4939425061764, v1, this);
        new F34(a32, -1e-15, this, F34);
    }
}
new C25(268435439, v20);
let v47 = new C25(-65462, v20);
const v48 = new C25(-14, v19);
4096 || v47;
v21 ^ 4096;
const v53 = v47--;
+v21;
Math.expm1(v47);
4096 && v47;
Math.asin(v53);
v48.d;
