function f9() {
    return -256n;
}
const v10 = /()/gu;
const v11 = /Ub3a[bc]d59/gmydv;
const v12 = /a.*/gmd;
class C13 {
    static #toString(a15, a16, a17, a18) {
        let v19;
        try { v19 = a18(NaN); } catch (e) {}
        if (v19) {
            v10[1647] &&= 4096;
            v12[NaN] >>>= 0.6054252322586056;
        } else {
            a17 = -256n;
        }
        return 4096;
    }
    0;
    12;
    #g;
    static 223 = v12;
}
new C13();
new C13();
const v22 = new C13();
C13[v12] = v22;
v11[688] /= 0.6054252322586056;
const v28 = +v11;
const v29 = +0;
Math.fround(v28);
Math.expm1(v29);
let v32 = !v29;
0 >> 4n;
v32--;
