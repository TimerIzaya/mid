new Int8Array(2801);
new Float64Array(0);
const v8 = new Int8Array(3473);
[v8];
[Int8Array];
const v11 = [Float64Array];
class C12 extends Float64Array {
    static #d = v11;
    set d(a14) {
        +-1.7976931348623157e+308;
        this * this;
        -a14;
    }
    4;
    static b;
    static [Float64Array];
    c;
}
new C12();
new C12();
const v23 = new C12();
const o24 = {
};
o24.d = v23;
const o25 = {
};
o25.d = v23;
o25.e = v23;
const o26 = {
};
o26.d = v23;
o26.e = v23;
o26.g = v8;
const o27 = {
};
o27.d = v23;
o27.e = v23;
o27.b = v8;
class C6 {
    constructor(a8, a9, a10) {
        this[3];
        try {
            const t4 = "string";
            t4[22798] = -1542784424n;
        } catch(e15) {
        }
    }
    #b;
    127;
    static #h = -1542784424n;
    240 = 12n;
}
new C6(6, 22798, -1542784424n);
new C6(22798, 6, -1542784424n);
new C6(60613, 60613, 12n);
[-4096,4,-9007199254740990];
const v23 = [65535,4,-1,257,6,-105126103,9];
const v24 = [-1556277419,-9007199254740992,-1378082099,1073741823,1732114950,1073741824,64,1596145528,-12,-16];
function f25(a26, a27, a28, a29) {
    try { a26.o(); } catch (e) {}
    a29 ^ 22798;
    const o32 = {
    };
    try {
        new Proxy(v24, o32);
    } catch(e35) {
    }
    return a28;
}
f25(v23, 6, 22798, -2n);
