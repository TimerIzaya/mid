function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.e = 23508;
}
const v3 = new F0();
const v4 = new F0();
const v5 = new F0();
const v9 = /a+b|c[Bq]*/ysdu;
const v10 = /U1((((.).).).)/is;
const v11 = /AiwV?/gmsv;
function f12(a13, a14, a15, a16) {
    const o29 = {
        8: v5,
        "d": a16,
        "c": a15,
        "b": v5,
        set e(a18) {
            a15--;
            new Float32Array(1642);
            new Uint8ClampedArray(850);
            new Uint16Array(1212);
        },
    };
    return o29;
}
f12(v11, v4, v9, v3);
f12(v9, v9, v9, 0.0);
f12(v11, -2.220446049250313e-16, v10, v3);
const o35 = {
    "maxByteLength": 10,
};
const v37 = new SharedArrayBuffer(10, o35);
new Uint32Array(v37);
const v42 = 10 | 10;
Math.max(10);
const v44 = 10 + -51816;
10 >> -51816;
Math.floor(10);
Math.min(v44);
Math.ceil(v42);
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = -65536;
    } catch(e3) {
    }
}
new F0();
new F0();
new F0();
const v7 = [-888.0462904931179,0.34320028825925253,-2.2250738585072014e-308,4.0,-7.625920434272587e+307,0.5291262731737943,-898936.1781045566,3.053234603502993,29.96387501586446,363369.3300842601];
const v8 = [-1000000.0,18809.780722440104,1000000000000.0,0.3880111836700557,-275.83463095079503,1000000.0,-205654.16254160332,-2.220446049250313e-16,-914263.158847868];
const v9 = [-1000000.0,1.0];
let v15 = "wgY";
try { v7(v9); } catch (e) {}
try {
    const t16 = "7cys";
    t16[0] = v8;
} catch(e17) {
}
try {
    v15 = "7cys";
} catch(e18) {
}
-65536n >> v9;
