const v0 = [-4294967295,1614101724,1073741824];
const v1 = [4294967297,4294967296,-4294967297,-256];
[4294967295,55067,34314,-9223372036854775807];
const v5 = new Float64Array(1392);
const v8 = new Float64Array(16);
const v11 = new Uint16Array(129);
class C12 extends Float64Array {
    o(a14, a15) {
        const o16 = {
            "d": a15,
            "a": v5,
            "c": v1,
        };
        [-Infinity,696.2029410348666,-2.2250738585072014e-308,-1000000.0,-1e-15,0.035078245230873994,-268.168750842676];
        [783.2807919766067,3.0];
        [1000000.0,-3.0,2.8557354080661117,1000000.0,-4.0,-2.9680135992835455,6.231349916341106];
        return this;
    }
    4;
    4009987009 = 129;
    static #g;
    static [Float64Array];
}
new C12();
new C12();
new C12();
try {
    v5.some(v8);
} catch(e24) {
}
for (const v25 of v11) {
    try { v25(...v1, v25, 1392, ...v0, ...Float64Array, ...v5); } catch (e) {}
}
