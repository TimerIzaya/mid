const v1 = new WeakMap();
const v5 = ["1024",v1,v1,"1024","POSITIVE_INFINITY"];
const v6 = ["1024","POSITIVE_INFINITY","1024","1024"];
let v7 = ["POSITIVE_INFINITY",v6,v6];
function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = v1;
    this.e = "POSITIVE_INFINITY";
}
new F8(v7, "4UI");
let v13 = new F8(v7, "POSITIVE_INFINITY");
const v14 = new F8(v6, "4UI");
const v15 = v7 && v14;
v1.toString = F8;
v7 = v5;
const v17 = [v1];
Reflect.apply(v1.delete, v15, v17);
v13 = Reflect;
new WeakMap("1024");
[4,-65536,-6,-610847737,2147483649,-49495];
[0,-9007199254740990,2147483648,-1024];
[536870888,-500315517];
const v0 = [];
let v2 = -2;
class C4 {
    static #toString(a6) {
        return "F5La";
    }
    constructor(a11) {
        try {
            v2 -= a11;
        } catch(e12) {
        }
    }
}
const v13 = new C4(68921261);
const v14 = new C4(-10);
new C4(68921261);
class C16 {
    static [68921261] = v0;
    get e() {
        this[1] **= -10;
        return v0["reduceRight"](..."reduceRight", ..."reduceRight", 68921261, ..."reduceRight", -10, v14);
    }
    #n(a21, a22, a23) {
        Reflect.construct(a23, [Reflect,Reflect,a23,Reflect,68921261], a21);
        return a23;
    }
}
const v27 = new C16();
new C16();
const v29 = new C16();
try {
    v13[C16] = v27;
} catch(e30) {
}
let v32 = "257";
v29.e;
[v32] = "iH";
[256];
[-256,-1,-513530595,65536,-1136734423,36833,4];
[60895,-4,662191612,25984,-2147483649];
