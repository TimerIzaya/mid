function f0() {
    const o15 = {
        "c": -65535,
        get f() {
            const v5 = ("f")[this];
            try { new v5(v5, v5); } catch (e) {}
            return super[-65535];
        },
        6: 0.4170442569561721,
        "g": 0.4170442569561721,
        toString(a9) {
            class C10 {
                3 = a9;
            }
            const v11 = new C10();
            const v12 = new C10();
            const v13 = new C10();
            try { v11.log2(v13); } catch (e) {}
            return v12;
        },
    };
    return o15;
}
const v16 = f0();
const v17 = f0();
f0();
let v21 = 65536;
const v23 = new Set();
class C24 extends f0 {
    static g = Set;
    set f(a26) {
        super.g = v17[v17 + a26];
    }
    [v23] = 26983;
    static [v23];
    #d = v17;
    #n(a30, a31) {
        super[++v21];
        return v21;
    }
    static [v16];
}
new C24();
new C24();
new C24();
function f37() {
    return f0;
}
[1000000.0,241.52367098589502];
[-2.220446049250313e-16,-1000000000.0,Infinity,1.0,1.7976931348623157e+308,-1e-15,-6.075500511168117e+306,-3.0,2.2250738585072014e-308];
[859148.585309942,1000000000.0,190741.86533005792,4.0,1.0,2.2250738585072014e-308,1.7976931348623157e+308,1000.0,5.012859969615782,985.0804208811089];
const v42 = Symbol.iterator;
const o51 = {
    [v42]() {
        let v44 = 10;
        const o50 = {
            next() {
                v44--;
                const v48 = v44 == 0;
                const o49 = {
                    "done": v48,
                    "value": v44,
                };
                return o49;
            },
        };
        return o50;
    },
};
function f0() {
}
try {
    new Uint16Array(512);
} catch(e4) {
}
try {
    new BigInt64Array(129);
} catch(e8) {
}
try {
    new Int8Array(132);
} catch(e12) {
}
try {
    new BigUint64Array(9);
} catch(e16) {
}
try {
    new Float32Array(4);
} catch(e20) {
}
try {
    new Uint32Array(1);
} catch(e24) {
}
try {
    const t27 = 255;
    t27.toString = f0;
} catch(e28) {
}
let v29;
try { v29 = (185065698).o(); } catch (e) {}
for (let v30 = 0; v30 < 32; v30++) {
    v29["p" + v30] = v30;
}
