function f0() {
    const o16 = {
        __proto__: 1631362278,
        "f": 268435456,
        "b": 1631362278,
        [268435456]: -4,
        6: -4,
        ...-4,
        o(a5) {
            this.f;
            Math.log10(268435456);
            Math.tanh(268435456);
            Math.log10(268435456);
            const v12 = -49700 & -49700;
            268435456 ** 268435456;
            -(+v12);
            return -49700;
        },
    };
    return o16;
}
const v17 = f0();
const v18 = f0();
const v19 = f0();
const v20 = [NaN,0.0320219516030944,Infinity,-364406.5928829496,-1000000000.0,4.0];
const v21 = [0.791649005487779,0.1562212515648972,-427757.81673719874,-878.0573843001997,5.0,-4.0,-1000000.0,1.7976931348623157e+308,63377.03560356749,0.1183890201600919];
let v22 = [-1.7976931348623157e+308,920.8759860720936,-340197.03565035167,1.0,3.0,1e-15];
function F23(a25, a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = f0;
}
const v29 = new F23(v19, v21, v22, v22);
const v30 = new F23(v17, v20, v21, v21);
const v31 = new F23(v18, v22, v22, v20);
class C32 extends F23 {
    b = v19;
    constructor(a34, a35, a36, a37) {
        super(a35, v20, v22, v20);
        try {
            new f0();
        } catch(e39) {
        }
        [983140.990618476,5.0,NaN,-4.0];
        [-119.41711412134111,6.01376131365538];
        [-1000000000.0,0.0,1.2792858254424967e+308,-0.0];
    }
    [v30] = v29;
    d = v31;
    e;
    4096 = v31;
}
const v43 = new C32(v31, v19, F23, v21);
new C32(v31, v17, C32, v43);
new C32(v30, C32, v19, v31);
let v46 = 0;
while (v46 < 8) {
    Object.defineProperty(v43, "b", { writable: true, set: f0 });
    v22 >>= v21;
    v46++;
}
v21.length = v22;
try {
    new Int16Array(9);
} catch(e3) {
}
try {
    new Uint32Array(512);
} catch(e7) {
}
try {
    new BigInt64Array(127);
} catch(e11) {
}
[-1073741824];
[-1186647869,-22070];
[268435439,-4294967296,1663685196,4,1000,-536870912,1448891488,149160455,128];
const t12 = -65536;
t12[4] = -1710901055;
for (let v18 = 0; v18 < 28; v18++) {
    class C19 extends Int16Array {
        #b;
    }
    new C19();
    new C19();
    new C19();
}
new Int16Array(-65536, 9, -1710901055);
