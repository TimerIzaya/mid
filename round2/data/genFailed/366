const v5 = new Uint8ClampedArray(129);
new Uint16Array(431);
const v11 = new BigUint64Array(1278);
const v13 = [[BigUint64Array,v11,431,431,1278],1278,431];
const v14 = [4230985,689901697,v13,BigUint64Array];
let v15;
try { v15 = v14.reduce(...689901697, ...v14, 129, Uint8ClampedArray, ...v14, 431); } catch (e) {}
v11.b = 431;
Object.defineProperty(e, v13, { configurable: true, value: v5[Uint8ClampedArray] });
const o18 = {
    "a": v11,
    [BigUint64Array]: Uint16Array,
    ...v14,
    "b": 431,
    "f": v15,
};
const v1 = new Set();
const v4 = new Array(112);
new WeakSet();
[3,1137053435,1073741825,512,10000,-33061,65536,256,25588];
[517549897,8083];
[2147483647,-11,1073741823,38641,-48425];
new Set();
Array(112);
const v14 = [];
let v16 = Reflect.apply(v1.keys, v4, v14);
try {
    v16 = 112;
} catch(e17) {
}
v14.__proto__;
