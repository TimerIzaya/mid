function f9() {
    return 8;
}
typeof 64 === "bigint";
let v13 = 0;
while (v13 < 9) {
    v13[1] = 128;
    Math.sinh(1559269339n);
    Math.round(7226);
    Math.fround(7226);
    Math.floor(7226);
    Math.tan(7226);
    v13++;
}
function f0() {
    const o9 = {
        __proto__: "-536870912",
        ["-536870912"]: -2.2250738585072014e-308,
        9: "-536870912",
        "e": -2.2250738585072014e-308,
        toString(a5) {
            try {
                a5.g = -2.2250738585072014e-308;
            } catch(e6) {
            }
            this[Symbol.isConcatSpreadable] = "-536870912";
            return this;
        },
        "d": -3.0,
    };
    return o9;
}
const v10 = f0();
const v11 = f0();
const v12 = f0();
let v13 = 4;
try {
    new Uint8Array(v13);
} catch(e16) {
}
try {
    new Int8Array(4096);
} catch(e20) {
}
try {
    new BigInt64Array(8);
} catch(e24) {
}
class C25 extends Uint8Array {
    #n(a27, a28) {
        super.byteLength *= v13;
        super[a27];
        return a28;
    }
    constructor(a31, a32, a33, a34) {
        super(v12);
        try {
            f0();
        } catch(e36) {
        }
        g = a31;
        try {
            super.buffer = this;
        } catch(e37) {
        }
    }
}
new C25(v10, v12, BigInt64Array, C25);
new C25(v10, v12, f0, v11);
const v40 = new C25(v11, v12, Uint8Array, v10);
[BigInt64Array];
[Uint8Array];
[f0,v11,f0,f0,8];
delete v40[8];
[3.0,807.250405689769,1.0,-8.536920224560411,NaN,7.8357553187779345];
const v46 = [5.230499079360296,1.7976931348623157e+308,-205994.72822626948,2.0716780878565406e+307,-1.4161331025945276e+308,-1.0502092574323063e+308];
[660841.4251049014];
for (let [v48] of v46) {
    Math.asinh(v13);
    Math.atan(14);
    Math.trunc(v13);
    Math.sign(14);
    Math.cbrt(v13++);
}
