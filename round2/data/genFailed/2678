const v0 = [-4.150166898929692,-1000000.0,538817.2428127376,-5.0,0.1637010945300995,-566.6507441328656,432865.5481268517];
const v1 = [-192396.4930321473,-1.7976931348623157e+308,-1e-15,1.0056582201898086e+308];
const v2 = [986766.6574551289,-6.1304091382967645,-1.0502774150903734e+308,-237085.1447210305,1.7415352538987104e+308,1.6307939774360567e+308];
class C3 {
    static #a = v0;
    constructor(a5) {
        try { v2(v1, a5); } catch (e) {}
        for (let v7 = 0; v7 < 32; v7++) {
            v2["p" + v7] = v7;
        }
    }
    [v2] = v1;
}
const v10 = new C3(v1);
new C3(v1);
new C3(v0);
v10[122] &= -2669858n;
Math.asin(1);
Math.acos(!(C3 - 536870887n));
Math.fround(536870887n);
Reflect.construct(C3, [v2], C3);
