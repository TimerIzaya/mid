class C3 {
    set b(a5) {
        const t2 = "C";
        t2.length &= a5;
        function f6() {
            return this;
        }
        Object.defineProperty(this, 2147483649, { writable: true, configurable: true, enumerable: true, set: f6 });
    }
    static g;
    ["C"] = 2147483649;
    268435439;
}
const v7 = new C3();
const v8 = new C3();
const v9 = new C3();
let v10 = [-4294967297,-34723,536870912,1151934229,-14,65535,-1054897808,8];
const v11 = [2,-4294967296,65084,5,16,-21448,-8];
([820908910,31348])[v8];
("2147483647")[10];
const v15 = ++v10;
v11.length = 9;
for (const v17 in v9) {
    v7[v7];
    v11[95] = v10;
    Object.defineProperty("C", 1000, { writable: true, configurable: true, enumerable: true, value: v15 });
}
try {
    new Int16Array(3042);
} catch(e3) {
}
try {
    new Float32Array(3);
} catch(e7) {
}
try {
    new Int8Array(129);
} catch(e11) {
}
[10000,-25176,4294967297,9,-8883,-63874,-55165,-410478610,1073741823];
[268435456,-536870912,-1472811508,4294967295,-536870912,-6452,-32820];
const v14 = [9];
const v20 = new Array(90);
try {
    v14[v20] = v20;
} catch(e21) {
}
function f22(a23, a24, a25) {
    function f27(a28) {
        try { a28(a28, -914092726n, a28, a28); } catch (e) {}
    }
    this.onmessage = f27;
    try {
        v20.toString = a24;
    } catch(e31) {
    }
}
const v34 = [-914092726n,13916n,13916n];
const o35 = {
    "arguments": v34,
    "type": "function",
};
new Worker(f22, o35);
