function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.a = -9007199254740991;
    this.b = -9007199254740991;
    this.c = -9007199254740991;
}
const v3 = new F0();
let v4 = new F0();
const v5 = new F0();
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a9;
    this.e = a9;
    this.h = F0;
}
const v10 = new F6(v5, v5);
new F6(v3, v10);
new F6(v3, F6);
let [] = F6;
if (v5 > F6) {
    ({"a":v4,} = v5);
} else {
    v4[delete v10[3]];
    var h = F6;
}
v3 >> F6;
const v3 = [-2,-256,10000,-9223372036854775807,-51379,-4,-9007199254740991,5,-96718835,-268435456];
[-1733028389,536870912,-22807,-13,12,9007199254740992,-1835813072,536870888,-2];
const v5 = [54347678];
const v6 = /t/imyv;
/a\SY[]/idgm;
const v8 = /\111+/sigmy;
function f9() {
    return 1877662158n;
}
[v3,1877662158n,v6,v3];
[v6,-8n];
const v12 = [v8,1877662158n,-8n];
const o13 = {
    __proto__: v8,
    6: v12,
    ...v12,
};
v8 - 65536n;
const v15 = v5 / f9;
try { v5.toReversed(); } catch (e) {}
v15 < 1877662158n;
delete v6?.global;
