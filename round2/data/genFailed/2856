const v6 = ["string","string",-1.2183684170173507e+308];
const v7 = ["6uU8",580.4830773004221,-1.2183684170173507e+308];
const v8 = ["6",v6,"6",-0.0,-0.0];
function F9(a11, a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = a12;
}
new F9(v7, v8, v8, "6");
const v16 = new F9(v7, v6, v6, "6uU8");
const v17 = new F9(v8, v7, v6, "6uU8");
"6uU8" << v16;
try { v17.p(F9, "string"); } catch (e) {}
const v21 = new Date();
let v22;
try { v22 = v21.getDate(); } catch (e) {}
new Date(...v6, v22, -0.0, v21);
const o24 = {
    "apply": Date,
    "call": Date,
    "construct": Date,
    "defineProperty": Date,
    "deleteProperty": Date,
    "get": Date,
    "getOwnPropertyDescriptor": Date,
    "getPrototypeOf": Date,
    "has": Date,
    "isExtensible": Date,
    "ownKeys": Date,
    "preventExtensions": Date,
    "set": Date,
};
new Proxy("6", o24);
