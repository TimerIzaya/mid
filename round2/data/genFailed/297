function f6() {
    return "bigint";
}
class C7 extends f6 {
    ["description"];
    constructor(a9, a10, a11) {
        super();
        const t7 = this[-12];
        t7[1073741825] += a9;
        const t9 = "description";
        t9.toString = a10;
    }
    [-9007199254740990];
    static #f;
    static ["bigint"];
    27314249 = "description";
}
const v13 = new C7(1594194488, "description", "MIN_VALUE");
const v14 = new C7(-12, v13, "MIN_VALUE");
new C7(1594194488, "MIN_VALUE", v14);
const v17 = [-12];
const v19 = Reflect.apply(v14.repeat, "description", v17);
try { v19(f6, f6, v19, v14); } catch (e) {}
let v23 = 16;
const v24 = ++v23;
const v25 = --f6;
v24 >> v24;
~v25;
try {
    new Uint32Array(24);
} catch(e6) {
}
try {
    new Int16Array(2);
} catch(e10) {
}
try {
    new Uint8Array(129);
} catch(e14) {
}
let v15 = undefined;
function f16(a17, a18) {
    const o30 = {
        ...a18,
        [24]: a17,
        "b": Uint32Array,
        "d": Uint32Array,
        "f": a18,
        [24](a20, a21) {
            this && a17;
            Math.atan2(25512, v15);
            Math.exp(v15);
            --v15;
            --v15;
            return a18;
        },
    };
    return o30;
}
f16(24, 255);
f16(2147483649, 129);
f16(129, 2147483649);
for (let [v36,v37,v38] of -Uint32Array) {
    Math.log10(v37);
    -1706330473 && -190622957;
    Math.random();
    Math.acos(v38);
}
