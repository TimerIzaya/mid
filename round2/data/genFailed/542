[-2,127,65536,-206055527,10000,-356273509,-9223372036854775808];
const v1 = [4294967297,1825578805];
const v2 = [268435440,-536870912,-128,-9223372036854775807,268435456,0,-9,-4,-536870912,1];
function F9(a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = a12;
    this.f = 1073741823;
}
const v14 = new F9(-9223372036854775807n, 1408113210, v2);
const v15 = new F9(-9223372036854775807n, 917720645, v1);
const v16 = new F9(-9223372036854775807n, 1073741823, v1);
function f17(a18, a19, a20, a21) {
    v2.length = a19;
    return a20;
}
f17(0n, 0n, v14, 9007199254740991n);
const v23 = f17(-9223372036854775807n, f17, v16, -9223372036854775807n);
const v24 = v2 - v15;
try { v15.n(v24); } catch (e) {}
delete v15[1408113210];
v23[Symbol.asyncIterator];
const v0 = [-4294967295,-12847,941508276,14,1073741825,-204030207];
const v1 = [-2104958592,14191,-604801573];
const v2 = [257,-4,-458528341,10000,1073741824,1339890779];
new Set();
function f5(a6) {
    const o23 = {
        [a6]: a6,
        valueOf(a8, a9, a10) {
            const v12 = new Map();
            let v13;
            try { v13 = v12.values(); } catch (e) {}
            super.h -= v13;
            Math.hypot(-719222857);
            const v18 = Math.round(a10);
            const v19 = -(-719222857);
            Math.trunc(this);
            268435440 - v19;
            this | v19;
            return v18;
        },
    };
    return o23;
}
f5(v0);
const v25 = f5(v1);
f5(v1);
[-768917.9203914169,2.5509826719780904];
const v28 = [Infinity,-2.6551365822891597,608.5631951780547,3.0,-1.0];
[-5.0,-2.0,3.405281651702328,-7.267341903923736,-4.0];
[-8,-977635294];
const v31 = [536870887,1073741825,65320,0,536870888,1073741825];
let v32 = [13,7];
let v33;
try { v33 = v1.slice(v2, v28); } catch (e) {}
v25 & v33;
try {
    v32.toString = f5;
} catch(e35) {
}
Object.defineProperty(v25, 1473588210, { writable: true, configurable: true, value: f5 });
const v36 = v31.length;
Math.sinh(v32);
const v40 = ++v32;
const v41 = -1112735251 - -1112735251;
Math.min(v36);
v41 >>> v40;
