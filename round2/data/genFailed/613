function f0() {
    const o6 = {
        __proto__: "BPy",
        "f": "BPy",
        "d": 127,
        12: "BPy",
        "g": 127,
        1024: 4.1594211410895205,
        get e() {
            this.length = 149;
            const t10 = "BPy";
            t10[127] = 4.1594211410895205;
            return 149;
        },
    };
    return o6;
}
const v7 = f0();
f0();
const v9 = f0();
const v10 = /aa\s/is;
const v11 = /(a*?M)/yi;
/[(a)\1\P{Decimal_Number}]/isd;
function f13() {
    return v9;
}
const v14 = [v11,f13,v10];
const v15 = [v14];
let v16 = [v14,v15,v15];
delete v7[v16 = v14];
const v18 = v9[12];
v15[1073741825] = v9;
function f19(a20, a21, a22) {
    'use strict';
    const o25 = {
        "maxByteLength": 175,
    };
    const v27 = new ArrayBuffer(175, o25);
    new Int16Array(v27);
    return v18;
}
f19(v18, v10, v10);
const v0 = [536870888,-10841,-4294967297,-6,2147483649,-7329,-6223,-53351,29075,-1081788585];
const v1 = [-64456,-14];
const v2 = [-25543,255,256,1,4294967296,-1366040413,-7,-2147483647,512,-9007199254740991];
function f3(a4, a5) {
    const o11 = {
        p(a7) {
            let v9;
            try { v9 = this["p"](v0, a5, a4, v1, "p"); } catch (e) {}
            try {
                v1.length = v9;
            } catch(e10) {
            }
            return a7;
        },
        "d": v1,
        __proto__: a5,
        [v0]: a5,
        "f": v2,
        [a5]: v2,
    };
    return o11;
}
const v12 = f3(v2, v2);
const v13 = f3(f3, v1);
const v15 = [v0,f3(v2, v1),f3,v13,f3];
[v15];
[v12];
try {
    new Int16Array(14);
} catch(e24) {
}
try {
    new BigInt64Array(255);
} catch(e28) {
}
try {
    new Int32Array(1000);
} catch(e32) {
}
const v34 = Symbol.replace;
v1[v34] = v15;
4096 && h;
for (let v37 = 0; v37 < 32; v37++) {
    v34["p" + v37] = v37;
}
