class C3 {
    #toString(a5) {
        super.f;
        a5 **= super[this];
        return this;
    }
    m(a9) {
        try { this["isNaN"](this, this, this); } catch (e) {}
        return 65537n;
    }
    e = 65537n;
}
new C3();
new C3();
const v14 = new C3();
new Int8Array(8);
const v20 = new Uint8Array(14);
const v23 = new BigUint64Array(178);
let v24;
try { v24 = v14(v14, v20, v14, v23); } catch (e) {}
const v26 = [v24,v14];
Reflect.apply(v20.find, v23, v26);
const v29 = BigUint64Array;
for (let v30 = 0; v30 < 32; v30++) {
    v26["p" + v30] = v30;
}
