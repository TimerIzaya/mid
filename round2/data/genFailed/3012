const v0 = [-4328,65536,268435441,13,-12,512];
const v1 = [-9007199254740990,11,-536870912,-65536,255,-256];
const v2 = [7,257,1000,1918484118];
function f3(a4, a5) {
    const o14 = {
        valueOf(a7, a8) {
            function f9() {
                return a4;
            }
            return a7;
        },
        "e": v1,
        n(a11, a12) {
            a5.length = 0;
            return 0;
        },
    };
    return o14;
}
const v15 = f3(v1, v1);
f3(v0, v0);
const v17 = f3(v15, v1);
class C18 {
    set f(a20) {
        const o24 = {
            "execution": "async",
            "type": "major",
        };
        gc(o24);
    }
    10 = v17;
    e;
}
new C18();
const v27 = new C18();
const v28 = new C18();
function f29(a30, a31, a32) {
    const o55 = {
        __proto__: a30,
        1: a32,
        o(a34, a35, a36) {
            v28[a32] >>>= a36;
            return a35;
        },
        [a31](a38, a39, a40, a41) {
            f3(delete a40[112], a31);
            delete a30[2447];
            try { a40.with(a41, this); } catch (e) {}
            new Int8Array(22);
            new Float32Array(243);
            new Float32Array(0);
            return v27;
        },
    };
    return o55;
}
f29(v1, v1, v0);
f29(v2, v1, v2);
f29(v0, v2, v1);
var f = f3(f3, v2);
const o62 = {
    "maxByteLength": 2581,
};
const v64 = new SharedArrayBuffer(2581, o62);
new Uint32Array(v64);
