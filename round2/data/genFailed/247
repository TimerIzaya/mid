new Uint32Array(217);
const v14 = new Float32Array(0);
const v17 = new Uint8ClampedArray(0);
v17.toString = 0;
let v18;
try { v18 = v14.map(-13n, v14); } catch (e) {}
let v22 = 0;
while (v22 < 4) {
    const v25 = 9007199254740992n >>> 4096;
    Object.defineProperty(v18, "h", { writable: true, configurable: true, enumerable: true, value: 0 });
    let v28 = -2147483648;
    const v31 = v28++;
    !47770;
    const v33 = this | v25;
    Math.cbrt(v33);
    v33 & v31;
    +v33;
    v22++;
}
const v0 = [];
function f4(a5) {
    const o19 = {
        [4294967295]: v0,
        1073741823: a5,
        p(a7) {
            function f8(a9, a10, a11, a12) {
                const o16 = {
                    "execution": "async",
                    "type": "minor",
                };
                return gc(o16);
            }
            f8(4, v0, 4294967295, 4);
            return f8;
        },
    };
    return o19;
}
f4(f4);
const v21 = f4(f4);
f4(4);
[9007199254740992,256,2];
const v24 = [-16,9007199254740991,14434,-1836262917,-2,-9223372036854775808,-1260523490,-535029560];
[4294967297,1073741824,65320,-10,-37081,257,4294967295,-1911676117,9007199254740990];
try {
    new Int32Array(7);
} catch(e29) {
}
try {
    new Int16Array(14);
} catch(e33) {
}
try {
    new Float32Array(2);
} catch(e37) {
}
v21[Int32Array] **= 7;
for (let [v38,v39,v40,...v41] of v24) {
    +14;
    const v47 = +(-1e-15 || -2147483647);
    Math.log1p(v47);
    -2147483647 >> 14;
    14 >> v47;
    Math.sin(v47);
}
