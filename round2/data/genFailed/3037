function f0() {
}
function f1() {
    return f0;
}
function f2() {
    return f1;
}
const v3 = [f2,f2,f1,f0];
const v4 = [f1,v3,f1,v3];
const v5 = [f1];
function F6(a8, a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = a8;
}
const v11 = new F6(v5, v4, v5);
const v12 = new F6(v4, v4, v3);
new F6(v4, v4, v5);
const v14 = [-2.220446049250313e-16,2.0,-0.9862918875441089,5.4041922539532266,796.5736501034673,0.9438578565183036,1.0];
const v15 = [2.0,-1.0];
const v16 = [-1000.0,9.111928094628484e+307,9.052459463446514,0.41402138764282126,5.0,5.714677648665305,2.0,-587.2885506786524,1000000000000.0];
v11[Symbol.replace] = f1;
let [] = v16;
Object.defineProperty(v11, 10, { writable: true, get: f0 });
try {
    let [] = v14;
    Object.defineProperty(v3, f2, { writable: true, enumerable: true, set: f1 });
} finally {
    v12.h = v16;
    const v19 = [v14,v4,f2,v15];
    const v20 = [v19];
    [v19,v20,f0,v20];
}
