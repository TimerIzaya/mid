function f0() {
    const o18 = {
        set f(a5) {
            [4.005044705487329,-8.743569485001642e+307,2.220446049250313e-16,0.7713444553492526,1000000.0,0.33008889258693985,719553.7061577751,-1000.0,6.691952042161624e+307];
            [452683.73599027307,-186.3887006793725,5.180689907966423];
            [0.05109381839400007,-2.5424752891247397,5.146650636728236,1000000000.0,-1000000000000.0];
            try { a5(536870887); } catch (e) {}
            ~this;
        },
        m(a12, a13) {
            const v15 = Symbol.toPrimitive;
            const o17 = {
                [v15]() {
                    return this;
                    Object.defineProperty(a13, a12, { writable: true, configurable: true, get: Symbol, set: Symbol });
                    return 536870887;
                },
            };
            return 536870887;
        },
    };
    return o18;
}
const v19 = f0();
const v20 = f0();
f0();
[409890504,4];
[-1073741824,-2147483649];
const v24 = [10000];
const v29 = new Set();
new Array(97);
Object.defineProperty(v29, v24, { configurable: true, set: f0 });
let v33;
try { v33 = v19.m(v20); } catch (e) {}
new Array(11);
Object.defineProperty(Array, "prototype", { get: Array });
v33 &= Array;
try {
    Array.from(/a\bc/is, Array);
} catch(e39) {
}
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 1;
    } catch(e6) {
    }
    try {
        this.e = a5;
    } catch(e7) {
    }
}
const v8 = new F3(-47146);
const v9 = new F3(65455);
const v10 = new F3(1);
function f11(a12, a13) {
    const o19 = {
        [-2]: a13,
        "h": v10,
        "b": 1,
        [a13]: a12,
        set a(a15) {
            [-2.2250738585072014e-308,2.0];
            [5.0,2.9393785720540707e+307,2.2250738585072014e-308];
            [-Infinity];
        },
        "f": v8,
        __proto__: v9,
        "c": 1,
    };
    return o19;
}
f11(v9, 65455);
f11(v8, 65455);
f11(v10, 65455);
let v23 = "dxa";
Object.defineProperty("floor", 4, { set: f11 });
v8.c &= 1;
try {
    v8.toString = f11;
} catch(e26) {
}
f11(v8, -47146);
try {
    v23 |= "p";
} catch(e28) {
}
