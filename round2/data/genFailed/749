const v0 = [];
const v1 = [v0];
const v2 = [v0];
[v2,v0,v2];
new Uint16Array(202);
new Float64Array(3);
new BigUint64Array(13);
new Array(129);
for (const v16 in v1) {
    try {
        new Uint16Array(-10);
    } catch(e19) {
    }
}
Object.defineProperty(v2, "length", { configurable: true, enumerable: true, get: Array, set: Array });
const v3 = [-484364.1734623456,-3.111693385396734,-1000000.0,946438.7222411742,-360.97312182233395];
const v4 = [-4.0,0.0];
const v5 = [5.0,5.0,-2.220446049250313e-16,-617.3330361694656,0.4518615467983135,-1.7976931348623157e+308,4.845729883429425e+307,1000000000000.0,-Infinity];
function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a9;
    } catch(e12) {
    }
    try {
        this.b = 196214380;
    } catch(e13) {
    }
}
new F6(v5, v5, 196214380, v3);
new F6(v5, v5, -11, v4);
new F6(v3, v3, 196214380, v3);
for (let v20 = 0; v20 < 51; v20++) {
    v3.length <<= 65535;
    new WeakMap();
}
try {
    v3.pop();
} catch(e24) {
}
try {
    new Uint8ClampedArray(1);
} catch(e28) {
}
try {
    new Uint8ClampedArray(4096);
} catch(e32) {
}
try {
    new Uint16Array(5);
} catch(e36) {
}
