const v0 = [1,34337];
const v1 = [156348281,2147483648,1073741823,-1977358706];
const v2 = [14,-2,64,1073741824,12,-3,1469400601,-8,-1742755333,-65537];
class C3 {
    static toString(a5, a6) {
        try {
            v2.shift();
        } catch(e8) {
        }
        return v0;
    }
    valueOf(a10) {
        this.d = a10;
        const v14 = a10 % -266.8871624541997;
        Math.expm1(37676);
        a10 % v14;
        !-266.8871624541997;
        return -266.8871624541997;
    }
}
const v18 = new C3();
const v19 = new C3();
const v20 = new C3();
class C21 {
    constructor(a23, a24) {
        a24[this] += a23;
        const v26 = v1["filter"](a23, v19);
        v0 + a23;
        const v28 = a24[v0];
        try { new a23(v28, v20, "filter", v18, v26); } catch (e) {}
        ("filter")["toUpperCase"]();
    }
    static #f = v1;
    268435439 = v18;
    16 = v20;
    #c;
}
const v32 = new C21(v0, v0);
new C21(v19, v32);
const v34 = new C21(C21, v1);
const v37 = new Uint32Array(14);
new Int32Array(1024);
const v43 = new Int8Array(2429);
const v44 = 14 && 1024;
v0.valueOf = v34;
v43.__proto__ = v2;
C3.toString = v44;
v37.length = 9;
