function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = -8;
    this.b = -8;
}
const v3 = new F0();
const v4 = new F0();
new F0();
[4294967296,-11,13741,-9007199254740991,8,-16,-11872,23102];
[6,1748681496,2144552224,31428,-128,256,44659,2068463993];
[256,10,1004464916];
false ^ 60269n;
try {
    try {
        v3.o(v3, 1000000000000.0);
    } catch(e19) {
    }
} catch(e20) {
    9223372036854775807 in v4;
} finally {
    typeof F0 === "undefined";
}
const v3 = [-1.8655076134993715e+307,-0.36889339633274076,-2.2250738585072014e-308,2.220446049250313e-16,-1.0511951512581483e+308,0.5896365243038378,-3.58206838806312,-2.0];
const v4 = [0.8515015502605005,9.677212706821972,0.7452924636793158,375.3950126060654,77.1650122672063,0.12465951779227946];
const v5 = [0.6494080918329275,-2.746751908159542];
[v3,v5,16];
const v10 = [v3,v3,-9223372036854775808];
[-9223372036854775808];
new Set();
let v14 = 3;
try {
    new Uint16Array(v14);
} catch(e17) {
}
try {
    new Float32Array(16);
} catch(e21) {
}
try {
    new Float32Array(2357);
} catch(e25) {
}
for (let [,...v26] of v5) {
    try {
        v4.toString();
    } catch(e28) {
    }
}
Reflect.construct(Uint16Array, [v10,-9223372036854775808,4096], Float32Array);
try {
    v14 %= 261511012;
} catch(e32) {
}
