const v4 = new WeakSet();
class C5 extends WeakSet {
    constructor(a7, a8) {
        let v6 = this;
        super(v4);
        try { v6(v6); } catch (e) {}
        const v12 = v6--;
        let v13 = v4 ^ v6;
        !5;
        Math.cos(v12);
        Math.random();
        v13--;
    }
}
new C5(-28548, 2147483649);
new C5(-28548, 1087579143);
const v20 = new C5(-28548, 1087579143);
new WeakMap();
class C23 extends WeakMap {
    constructor(a25, a26, a27) {
        super(a27);
        let v28;
        try { v28 = new a26(this); } catch (e) {}
        v28[1087579143] = this;
        super.g **= a25;
    }
    static g;
    f;
    8 = C5;
}
const v32 = new C23(-28548, 1087579143, v4);
const v33 = new C23(1087579143, v32, C23);
new C23(-28548, v33, v20);
for (let v36 = 0; v36 < 17; v36++) {
    v32.e = -28548;
    v20[238];
    const o40 = {
        "maxByteLength": 2970100136,
    };
    const v42 = new SharedArrayBuffer(14, o40);
    new Int32Array(v42);
}
