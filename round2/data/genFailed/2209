[];
function f4(a5, a6) {
    const o21 = {
        [a6](a8, a9, a10, a11) {
            a6.length <<= a8;
            delete this[a9];
            const v17 = -275521.2938526479 ^ -275521.2938526479;
            a9 << -275521.2938526479;
            !a9;
            5 * v17;
            return -9223372036854775807;
        },
        ..."Q",
        __proto__: "flags",
    };
    return o21;
}
const v22 = f4("Q", "Q");
const v23 = f4("flags", "flags");
const v24 = f4("flags", "d");
function F25(a27, a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = v22;
    this.b = a30;
    this.c = a30;
}
new F25(v22, v24, "Q", "flags");
const v32 = new F25(v23, v22, "d", "Q");
const v33 = new F25("d", v32, "d", v32);
function f34() {
    return v33;
}
function f35() {
    return v23;
}
[-1073741824,-14,-11,-2147483649,65537];
[-2027950790,-78065670,4096,64];
[536870889,-5,257,-25683,59072,-4,-268435456,1073741824,-2013762062];
for (let v39 = 0; v39 < 100; v39++) {
    f34();
}
delete v24?.a;
try { ("d").slice(-4096, -4096); } catch (e) {}
f4 <<= f35;
Object.defineProperty(v23, "d", { writable: true, enumerable: true, get: f35, set: f35 });
