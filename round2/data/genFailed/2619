const v0 = [];
const v1 = [3.0,2.0,0.09207835147075938,1000.0,1.5674985857822477e+307,1000000.0,928.249169121375,1000000000.0,-2.5509887033949396e+307];
const v2 = [-993217.7799210132,108.64066679245343,-242500.5173406531,1000000.0,1000.0,Infinity,2.2250738585072014e-308,9.619549336468552,0.18205857354717914];
[0.0,2.220446049250313e-16];
let v13;
try { v13 = v2(v1, 1000.0, "n", "h"); } catch (e) {}
const v14 = 1000.0 !== v0;
const t6 = "h";
const v15 = delete t6[1];
let v16;
try { v16 = v0.reduceRight(v13, v15); } catch (e) {}
for (const v17 of v16) {
}
const v24 = -2.220446049250313e-16 + 4;
const v25 = 4 % v24;
!v14;
Math.imul(-2.220446049250313e-16, v25);
(-857010011) ** v24;
