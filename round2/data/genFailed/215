const v0 = /\x60?/gmyidv;
const v1 = /a(?!b)*/misv;
const v2 = /a+b|c/s;
const v3 = [-1073741824,2147483647,-981876965];
const v4 = [15,-5,64889,-2147483648];
const v5 = [-22284,-12,1356158177,-65537,1934766779,0,-1976184549,-4294967297,257,256];
let v6 = true;
function f7(a8, a9) {
    const o15 = {
        "a": a8,
        [a9](a11, a12, a13) {
            function f14() {
                return a8;
            }
            super[v6] = f14;
            %VerifyType(a8);
            return this;
        },
        "h": v4,
        "g": v5,
        "f": v4,
        [a8]: v6,
    };
    return o15;
}
f7(v0, v0);
const v17 = f7(v2, v1);
f7(v0, v0);
class C19 extends f7 {
    static [v5] = v6;
    h;
    static 2147483648;
    d = v17;
    [v3] = f7;
    b = f7;
    static set h(a21) {
        try {
            const v24 = new RegExp("bigint");
            f7(v24, /wa(?=b)/gmyisdu);
        } catch(e27) {
        }
    }
}
new C19();
new C19();
const v30 = new C19();
let v31 = 10;
for (; v31--;) {
    v2.__proto__;
    v17.__proto__ = v30;
}
v6 &= v6;
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 127554825;
    } catch(e3) {
    }
    try {
        this.a = 127554825;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
const v7 = new F0();
try {
    new Int32Array(7);
} catch(e11) {
}
let v12 = 1979;
try {
    new Uint16Array(v12);
} catch(e15) {
}
try {
    new BigInt64Array(6);
} catch(e19) {
}
class C20 {
    static get h() {
        function f22(a23, a24) {
            function f26(a27) {
                function F28(a30, a31, a32) {
                    if (!new.target) { throw 'must be called with new'; }
                    try {
                        this.e = this;
                    } catch(e33) {
                    }
                    try {
                        this.b = a24;
                    } catch(e34) {
                    }
                    try {
                        this.a = v5;
                    } catch(e35) {
                    }
                }
                new F28(a24, a23, v6);
                new F28(v6, a27, v6);
                new F28(v5, a27, a24);
            }
            this.onmessage = f26;
            v7.a;
            try {
                v12 = 6;
            } catch(e40) {
            }
        }
        const v43 = [Uint16Array,"function"];
        const o44 = {
            "arguments": v43,
            "type": "function",
        };
        const v45 = new Worker(f22, o44);
        return v45;
    }
}
new C20();
new C20();
const v48 = new C20();
for (let [v49] of v48) {
    const o52 = {
        "maxByteLength": 268435440,
    };
    const v54 = new ArrayBuffer(255, o52);
    try {
        new Int16Array(v54);
    } catch(e57) {
    }
}
