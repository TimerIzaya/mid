new Uint8ClampedArray(93);
const v5 = new Uint16Array(64);
const v8 = new Int32Array(7);
class C9 {
    #d;
    static #n(a11, a12, a13) {
        return a13;
    }
    constructor(a18, a19, a20, a21) {
        a18.a = 93;
        v5[a20] = a20;
        !Uint16Array;
        a18 = Uint8ClampedArray;
        try {
            this.setMonth(undefined, undefined, a18);
        } catch(e25) {
        }
    }
}
const v26 = new C9(64, 93, 93, 7);
const v27 = new C9(v26, 64, 64, 64);
new C9(v27, 93, 7, 93);
function f29(a30) {
    return 7;
}
class C31 extends f29 {
    static #c = v8;
}
new Array(3222);
v27.b;
const v0 = /6(a)+/sdmu;
const v1 = /2N?/sgv;
/(?:a?)?/dmuy;
function f6(a7, a8) {
    const o17 = {
        "b": -12n,
        [a8]: a7,
        get c() {
            a8[3] = this;
            let v13 = +1073741825;
            !this;
            Math.atan2(1073741825, v13--);
            return 239902147n;
        },
    };
    return o17;
}
f6(v1, 3n);
f6(v1, -12n);
f6(v0, 3n);
[18878];
[1671320646,-15];
[257,-536870912];
function f24(a25, a26, a27) {
    function f29(a30) {
        v1.multiline;
        try {
            a26 = a30;
        } catch(e32) {
        }
    }
    this.onmessage = f29;
}
const v38 = [v1,f6,239902147n];
const o39 = {
    "arguments": v38,
    "type": "function",
};
new Worker(f24, o39);
