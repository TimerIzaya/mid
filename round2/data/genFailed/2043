function f0() {
    const o13 = {
        n(a5, a6) {
            let v4 = this;
            Object.defineProperty(a5, -47838, { writable: true, configurable: true, enumerable: true, value: a6 });
            a5[63.66396200004283] &&= 63.66396200004283;
            v4 = a6;
            return a6;
        },
        "g": 63.66396200004283,
        [-47838]: -1.7976931348623157e+308,
        [63.66396200004283]: -1.7976931348623157e+308,
        valueOf(a8, a9) {
            return 63.66396200004283;
        },
    };
    return o13;
}
const v14 = f0();
const v15 = f0();
const v16 = f0();
function F18(a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a20;
    this.e = a21;
    this.b = a21;
}
const v22 = new F18(F18, v15);
const v23 = new F18(F18, v14);
const v24 = new F18(v22, v14);
const v27 = new Array(1000);
class C28 {
    static #c = v23;
    get c() {
        const v31 = v16 > v24 ? v16 : v24;
        [-1024,943346739,-2147483647,-65537,65536,-1583207919,-4294967295,-128,-2147483649];
        [3,4,-8,9007199254740990,127,-10,-60708,-1,9007199254740992,10000];
        [-4096,268435456,8,13,-9223372036854775808,536870912,9007199254740990];
        this[-2] = f0;
        return v31;
    }
    #g;
    [F18] = v22;
    static [f0] = v23;
    static 3;
}
new C28();
new C28();
new C28();
v16 >>> v27;
const o41 = {
    "maxByteLength": 2147483647,
};
const v43 = new SharedArrayBuffer(5, o41);
new Int16Array(v43);
