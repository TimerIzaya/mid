const v0 = [5,-11,1,536870887,2];
const v1 = [6,2,8395,268435441,1614523386,47167,41395,1,-395754878,-1024];
[970645751,1,26737,-65536,1073741823,256,-9007199254740991,1753865242,10,2];
const v3 = [1073741824,6,2147483649,-128,-2147483649];
[-7,346173365,-825646896,2147483649,-22372,30624];
[1053,44425,7,51343,15,2147483649,-1024,7,-536870912];
[0.5432079470641145];
const v7 = [-462.44277084793237,-628.3833509364008];
const v8 = [0.7473059775645269,3.0,-2.2250738585072014e-308];
const v10 = new WeakMap();
v7.length /= v8;
v0[5] = v8;
[v10,[v7,v1,[v8,v3,v1,v10],v0]];
const o16 = {
    "maxByteLength": 532750080,
};
const v18 = new SharedArrayBuffer(1000, o16);
new BigUint64Array(v18);
const v0 = [-5948,0,1073741823,8,-1236459557,42741,-18014];
const v1 = [16,2147483647,-5,12];
const v2 = [4,-4096,-15,-65537,64,-9007199254740992,13,10,832365052,9];
const v3 = [-48824,-9223372036854775807];
const v4 = [-65537,12,1511971727,-4294967297];
[-536870912,-773910587,9,-2,-11884];
class C6 {
    static get e() {
        try {
            super[this] = this;
        } catch(e8) {
        }
        return v4;
    }
    toString(a10, a11) {
        with (v1) {
            try { v2.toSpliced(length, length, length, length, length); } catch (e) {}
        }
        return this;
        return a11;
    }
}
const v14 = new C6();
const v15 = new C6();
new C6();
function f18(a19, a20, a21, a22) {
    const o36 = {
        set g(a24) {
            new C6();
            [10];
            [-1788634149,-8,65537,-65536];
            [4,9];
        },
        ...v15,
        11: a21,
        valueOf(a30, a31, a32, a33) {
            try {
                a19.length = 1073741824;
            } catch(e35) {
            }
            return a33;
        },
    };
    return o36;
}
f18(v3, v2, v4, v2);
f18(v0, v14, v14, v0);
const v39 = f18(v2, v14, v3, v1);
+v1;
try {
    v14.toString([v0,v2,v39,v15,null], false, false);
} catch(e44) {
}
v39["valueOf"](v1);
