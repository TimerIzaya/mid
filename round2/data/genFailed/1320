class C3 {
    9 = -2.0;
    [-2.0] = -2.0;
    static 268435440;
    toString(a5, a6) {
        a6 = this;
        super[this] = this;
        return this;
    }
    static #c;
    536870888;
}
new C3();
const v8 = new C3();
new C3();
class C10 {
    toString(a12, a13) {
        %VerifyType(a13);
        a12[(-2.0) ** a13] = -2.0;
        try {
            new C3();
        } catch(e16) {
        }
        return v8;
    }
}
new C10();
let v18 = new C10();
new C10();
const v21 = Symbol.toPrimitive;
const o24 = {
    [v21]() {
        v8[-2.0] = this;
        return -7.11323560980887;
    },
};
v18++;
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 241156451;
    } catch(e3) {
    }
    try {
        this.c = 241156451;
    } catch(e4) {
    }
    try {
        this.g = 241156451;
    } catch(e5) {
    }
}
new F0();
const v7 = new F0();
const v8 = new F0();
const v10 = new WeakMap();
[[v10,-21287359n,v7]];
const v16 = [-65536n];
F0 * -65536n;
for (let v18 = 0; v18 < 32; v18++) {
    v8["p" + v18] = v18;
}
try {
    v16[2] = 1141391016n;
} catch(e21) {
}
