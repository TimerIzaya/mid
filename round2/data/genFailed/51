const v0 = [];
function f8() {
    return 1425995110;
}
const v9 = /Iy/iu;
const v10 = /[a\W]/gyis;
/a*bh/v;
const v15 = v9.dotAll;
if (v15 == v15) {
    1915700106 ** 14n;
    try {
        v10.compile("replaceAll");
    } catch(e20) {
    }
} else {
    v0.length;
}
try {
    new Int32Array(8);
} catch(e3) {
}
try {
    new Uint32Array(3730);
} catch(e7) {
}
try {
    new Uint8Array(512);
} catch(e11) {
}
/a+?/dv;
/[\x01?]/smyv;
/[xyz?3ta{0}a{0}]/sidyv;
const v22 = Symbol.iterator;
const o31 = {
    [v22]() {
        let v24 = 10;
        const o30 = {
            next() {
                v24--;
                const v28 = v24 == 0;
                const o29 = {
                    "done": v28,
                    "value": v24,
                };
                return o29;
            },
        };
        return o30;
    },
};
