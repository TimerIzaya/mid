class C3 {
    static [4294967295] = 1.0012925406895938e+308;
    constructor(a5, a6) {
        const v8 = a5?.[1.0012925406895938e+308]?.[0];
        v8[7] = this;
        v8?.a;
    }
    #h;
    static {
        super.h;
        this.f = this;
        this || 1000.0;
    }
}
const v13 = new C3(1000.0, 1000.0);
new C3(C3, 1.0012925406895938e+308);
const v15 = new C3(4294967295, 1.0012925406895938e+308);
class C16 extends C3 {
    #p(a18, a19, a20) {
        try {
            new C3(a19, 1000.0);
        } catch(e22) {
        }
        new Float32Array(3211);
        new Float64Array(1544);
        new Float64Array(1024);
        return 4294967295;
    }
}
let v32 = new C16();
const v33 = new C16();
new C16();
new Uint32Array(11);
new Uint32Array(876);
const v43 = new Int8Array(2972);
v32 = v43;
v32 -= v15;
class C44 {
    #b;
    static #g;
    static [v33] = v13;
}
new C44();
new C44();
new C44();
function f0() {
}
let v1 = "f";
const v4 = [-20746,4294967297,16,4294967295,8,58028];
const v5 = [-9,268435439,-60622,-14,268435439,1];
[128,1069556296,536870887,-52509];
try {
    new Float64Array(129);
} catch(e10) {
}
try {
    new BigUint64Array(4084);
} catch(e14) {
}
try {
    new Uint32Array(1979);
} catch(e18) {
}
with (v5) {
    length = v5;
    const v19 = v5[f0];
    let v20;
    try { v20 = v4.toSorted(v19); } catch (e) {}
    try { v20(Float64Array, v19, v20, v20, v19); } catch (e) {}
}
try {
    v1 ||= "1964";
} catch(e22) {
}
