class C3 {
    2147483648 = "g";
    constructor(a5) {
        this[55] |= a5;
        const t4 = "-13";
        t4.g = "1";
        const t6 = "g";
        t6.__proto__ = "1";
    }
    static {
        let v7 = this.__proto__;
        ++v7;
        super.f;
        ("-13").length;
    }
    268435441 = "g";
    static #a;
}
const v11 = new C3("g");
const v12 = new C3(C3);
const v13 = new C3(v12);
const v14 = [v13,v11,v11];
const v15 = ["1",v11,"-13",v12,v12];
[[v15,v12],v11];
const v18 = ["1"];
const v19 = [v11];
v15.d = v19;
`14`;
const v28 = [v14];
typeof Reflect.apply(v18.find, v19, v28) === "string";
try {
    new Float64Array(256);
} catch(e4) {
}
try {
    new Float32Array(7);
} catch(e8) {
}
try {
    new Int16Array(9);
} catch(e12) {
}
const v16 = [9,Int16Array,-1181014934,Float64Array];
const v17 = [13,Float32Array,7,,];
[v16,v17,1,13,-1181014934];
function F19(a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a22;
    } catch(e23) {
    }
    try {
        this.c = a22;
    } catch(e24) {
    }
    try {
        this.b = 1;
    } catch(e25) {
    }
}
const v26 = new F19(256, 9);
new F19(-1181014934, -1181014934);
new F19(-1181014934, -1181014934);
try {
    new F19(-65536, 1);
} catch(e31) {
}
1 + Int16Array;
const v33 = v17.length;
let v34;
try {
const t0 = 1;
v34 = t0(v17, v17, 256, Int16Array, v33);
} catch (e) {}
v34.f ^= delete v26?.b;
