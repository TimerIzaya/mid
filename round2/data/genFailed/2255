class C3 {
    constructor(a5, a6) {
        Object.defineProperty(a5, a5, { enumerable: true, value: a6 });
    }
    #n(a8, a9) {
        function f10() {
            function f12(a13) {
                [-3393];
                [11,-2,4294967296,63521];
                [6,-754785943,65535,20393941,7,2035659359,-1601162584,-5];
            }
            this.onmessage = f12;
            [[[-7.766257436486158e+307,f12,this,-7.766257436486158e+307,a8],1.526353343269844e+308,f12],-7.766257436486158e+307,this,a9];
        }
        const v22 = [];
        const o23 = {
            "arguments": v22,
            "type": "function",
        };
        new Worker(f10, o23);
        return Worker;
    }
}
new C3(C3, 1.526353343269844e+308);
const v26 = new C3(566518456, -7.766257436486158e+307);
new C3(v26, v26);
function f28() {
    return 566518456;
}
class C29 {
    n(a31, a32, a33, a34) {
        try { a34(-7.766257436486158e+307); } catch (e) {}
        a32 / C3;
        return "toString";
    }
    #c;
    a = -7.766257436486158e+307;
    static [-7.766257436486158e+307];
}
new C29();
new C29();
const v43 = new C29();
-1.7976931348623157e+308 / v43;
Math.exp(v43);
let v49 = 1073741824 << v43;
Math.imul(-1.7976931348623157e+308, v43);
++v49;
v43 % C3;
