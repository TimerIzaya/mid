function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = 10000;
    this.g = 10000;
    this.h = 10000;
}
const v3 = new F0();
const v4 = new F0();
const v5 = new F0();
const v6 = [33952,-9007199254740992,10076,-34416,49267502,-10];
const v7 = [3,12,-2147483649,536870912];
const v8 = [55024];
function F12(a14, a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a16;
    this.c = a16;
}
const v18 = new F12(v7, v4, v3, v4);
new F12(v8, 4n, v3, v3);
const v20 = new F12(v7, v4, v4, v5);
v6.length &&= v20;
const o21 = {
};
new Proxy(v18, o21);
function f24(a25, a26, a27, a28) {
    var b = a25;
    try { a25.reduce(o21, v7); } catch (e) {}
    return v7;
}
f24(o21, v7, -4294967297n, v3);
