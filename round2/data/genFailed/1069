function f0() {
}
[0.1119072320536092,0.4210494927424525,-2.2250738585072014e-308,3.0];
const v2 = [-6.531543520805499e+307,519840.08336597285,-2.6005719917762544,347531.8480750085,6.548030078949093,-Infinity,-1.0];
[-1000000000.0,2.2250738585072014e-308,-3.9803545310327344,-2.0];
[-555.9399377532945,-1000000.0,0.25238067908938766,-1.0,1e-15];
[1e-15,-742.2601009376729,6.239313196245661,0.0,-348.8113975877543,-696239.3093804636,-390509.76769779646,2.2250738585072014e-308,4.0,-1000000000000.0];
const v6 = [1000000000000.0,91587.55041055777,0.3478526733038283,-1.4902063681150689e+308,-3.0,Infinity,-1000.0,-1000000.0,-1000000.0];
[64405,-30262,-4096,16,7,-4294967295,1024];
[56595,268435456,-256,9007199254740991,-10,-341896902,7933966,-2,-41853];
const v9 = [4,4,129,1863983207];
const v10 = v2[208];
let v11;
try { v11 = v10(v10, v10, v10, v10); } catch (e) {}
v11 < v9;
v6.length &&= v11;
v2.__proto__ = v6;
new Uint8ClampedArray(256);
new Uint32Array(5);
new Float64Array(14);
const v0 = /[uabc|def|ghi+]/sgy;
const v1 = /y(a)*/sgmy;
const v2 = /nXj[x]I/smyv;
function f3(a4, a5) {
    const o10 = {
        1000: v1,
        "e": a4,
        ...a4,
        get g() {
            let v7;
            try { v7 = this(v2, this, this, this, this); } catch (e) {}
            delete this[v7];
            try {
                v1.__proto__ = this;
            } catch(e9) {
            }
            return v7;
        },
        __proto__: a4,
        "g": v1,
    };
    return o10;
}
f3(v2, v2);
const v12 = f3(v1, v1);
f3(v0, v1);
function f20(a21, a22, a23) {
    const o39 = {
        [v12]: "1073741824",
        ..."1073741824",
        m(a25, a26, a27, a28) {
            let v32 = 188.62170619370931;
            Math.ceil(v32);
            const v34 = a22 && a22;
            Math.atanh(a27);
            v32++;
            Math.tanh(v34);
            Math.acos(a25);
            return 3;
        },
    };
    return o39;
}
f20(-14294, -14294, v1);
f20(536870912, -14294, v0);
f20(3, 3, v1);
const v44 = Symbol.toPrimitive;
const o54 = {
    [v44]() {
        const o48 = {
            "maxByteLength": 1024,
        };
        const v50 = new SharedArrayBuffer(1024, o48);
        try {
            new BigInt64Array(v50);
        } catch(e53) {
        }
        return 536870912;
    },
};
