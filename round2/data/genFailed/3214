class C3 {
    toString(a5, a6) {
        super.a = a6;
        new Uint8Array(0);
        new Int32Array(13);
        new BigInt64Array(5);
        return this;
    }
}
const v20 = new C3();
const v21 = new C3();
const v22 = new C3();
const v23 = [5n];
const v24 = [15n,5n,v23,v20];
const v25 = [15n,v22,v21,v23,C3];
function F26(a28, a29, a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = a29;
}
const v32 = new F26(128n, v24, v24, 128n);
const v33 = new F26(15n, v24, v20, 128n);
const v34 = new F26(128n, v24, v25, 128n);
const o35 = {
    __proto__: v34,
    [128n]: 128n,
    "e": v32,
    "c": 15n,
};
v33[F26] &= C3;
v32[F26] *= v22;
v23["concat"](128n, v33);
