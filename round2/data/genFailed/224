const v0 = [];
function f1() {
    return v0;
}
class C2 {
    get g() {
        class C4 {
            [v0] = this;
            f;
        }
        new C4();
        const v6 = new C4();
        new C4();
        return v6;
    }
    static #f = v0;
    2214292375 = f1;
    b = f1;
}
const v8 = new C2();
const v9 = new C2();
const v10 = new C2();
class C11 extends f1 {
    [v10] = f1;
    static #m(a13, a14, a15, a16) {
        v0[Symbol.species] = this;
        super.length;
        return f1;
    }
    #c = v9;
    [v9];
}
new C11();
new C11();
const v25 = new C11();
class C26 {
    [v25] = v10;
    static c;
    set c(a28) {
        let v30;
        try { v30 = v8["p"]("p"); } catch (e) {}
        Reflect.construct(v30, [v10,"p",Reflect], C2);
    }
    static f;
    506;
    #f = C11;
    1 = C11;
}
new C26();
const v35 = new C26();
new C26();
const o37 = {
};
new Proxy(C11, o37);
v35.toString = f1;
C26 &= C26;
f1();
f1();
v35[4128053359];
v25.length;
function f0() {
}
class C1 {
    e = f0;
    static #e;
    toString() {
        try {
            f0 -= f0;
        } catch(e3) {
        }
        try {
            this.#e = f0;
        } catch(e4) {
        }
        return this;
    }
}
const v5 = new C1();
new C1();
const v7 = new C1();
class C11 extends C1 {
    static m(a13, a14, a15, a16) {
        Object.defineProperty(this, a16, { value: this });
        [-4.0,1.1995053776799288e+308,155.07441304109147,289.5821998835836,-7.203678767987447e+307,-1.7976931348623157e+308,-115718.54697358061];
        [1000000000.0,5.627677225421169e+307,-1000.0,6.225601889947381,0.4112298574231382,3.370206397601031,0.9928596177968697,-638.7408198342013,103577.07952802838,1.7976931348623157e+308];
        [0.22269239857314505,4.933253616242567,4.4017344869445445,0.2112289367558392];
        return v7;
    }
    1;
    static [v5] = v5;
    a;
    8 = C1;
}
new C11();
new C11();
new C11();
Reflect.construct(C1, [], C1);
const v29 = -857448209 + 536870912;
-857448209 >> 536870912;
!f0;
Math.acosh(v29);
Math.log2(-857448209);
