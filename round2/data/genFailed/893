let v0 = 1584;
let v2 = new Float32Array(v0);
new BigUint64Array(129);
const v8 = new BigUint64Array(64);
[-3];
const v10 = [10,9,-87174492];
const v11 = [-13,9007199254740990,-27394,-1699556383,1,-27630,-57791,4096,-4294967297];
function f12() {
    return BigUint64Array;
}
v11.length = -4096;
v2 %= v2;
let v16;
try { v16 = v8.slice(v0, v0); } catch (e) {}
({"length":v0,} = v11);
function* f17(a18, a19, a20, a21) {
    'use strict';
    Object.defineProperty(a20, "d", { enumerable: true, get: f12, set: f12 });
    v16?.[a20];
    const o23 = {
        "apply": f12,
        "call": f12,
        "construct": f12,
        "defineProperty": f12,
        "get": f12,
        "has": f12,
        "preventExtensions": f12,
        "setPrototypeOf": f12,
    };
    new Proxy(a20, o23);
    yield* a21;
    return v0;
}
f17(9007199254740991, v11, v10, 9007199254740991);
const v0 = [-268435456,1000,-15,188,4294967295,-9223372036854775808,1073741825];
[0,7,-2,-128,-4294967296,1809,256,41220];
const v2 = [9007199254740991];
let v5 = new Set();
function f9() {
    return Set;
}
class C10 extends f9 {
    f;
    e;
    constructor(a12, a13, a14, a15) {
        super();
        v0[1073741824];
        let v18 = v2["flatMap"](...v2, ..."flatMap", ..."flatMap", 9007199254740990);
        try {
            v18 >>>= this;
        } catch(e19) {
        }
    }
    static #d;
    static h = 536870887;
}
const v20 = new C10(536870887, -44146, v2, v0);
new C10(9007199254740990, -44146, v0, v0);
const v22 = new C10(536870887, 9007199254740990, v2, v2);
v5[v2] || v2;
const v25 = v20 ** v22;
({"a":v5,} = v5 <= v25 ? v5 : v25);
const v28 = delete v20[2];
try {
    v22[v28] = C10;
} catch(e29) {
}
