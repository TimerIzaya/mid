let v2 = 129;
class C3 {
    [10];
    static {
        v2 = 10;
        this[6] >>>= 10;
        this[10];
        const v6 = super.h;
        v6[this] ||= v2;
        v6[256] = v2;
    }
    1982 = v2;
    1000 = 10;
}
new C3();
new C3();
new C3();
new C3();
try {
    new C3();
} catch(e18) {
}
class C19 extends C3 {
    static #c;
    c = -4294967295;
    10000;
    [v2];
}
new C19();
new C19();
new C19();
const v0 = [];
try {
    new Uint8ClampedArray(3);
} catch(e7) {
}
try {
    new Uint8Array(13);
} catch(e11) {
}
try {
    new Int8Array(6);
} catch(e15) {
}
class C16 extends Uint8ClampedArray {
    [Uint8ClampedArray];
    static get d() {
        super.byteOffset;
        return 6;
    }
    static [Int8Array] = 13;
    9 = -41118;
    static #h = 1907542756;
    h;
    static g = -41118;
    static #g = -1458748635;
}
new C16();
const v20 = new C16();
new C16();
a = 6;
v0[v0];
const o26 = {
};
try {
    o26.b = 13;
} catch(e27) {
}
try {
    const o28 = {
    };
    o28.b = 13;
    o28.g = v20;
} catch(e29) {
}
try {
    const o30 = {
    };
    o30.b = 13;
    o30.g = v20;
    o30.e = Uint8ClampedArray;
} catch(e31) {
}
try {
    const o32 = {
    };
    o32.b = 13;
    o32.g = v20;
    o32.f = 64;
} catch(e33) {
}
