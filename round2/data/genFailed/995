function f0() {
}
class C4 extends f0 {
    constructor(a6, a7) {
        super();
        Math.ceil(2147483649);
        const v11 = -1n - -1n;
        Math.exp(v11);
        +v11;
        2147483649 | ~2147483649;
    }
    #c = f0;
}
const v16 = new C4(-7n, -7n);
const v17 = new C4(-7n, -1n);
const v18 = new C4(v16, -1n);
function F19(a21, a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = -10n;
}
new F19(C4, v16, -7n, -7n);
const v26 = new F19(v18, C4, -10n, -10n);
new F19(v18, v26, -1n, -1n);
Object.defineProperty(C4, -10n, { writable: true, configurable: true, value: F19 });
f0();
%PrepareFunctionForOptimization(f0);
f0();
f0();
%OptimizeMaglevOnNextCall(f0);
f0();
try {
    new C4(v17, 4294967297n);
} catch(e34) {
}
class C9 {
    static set c(a11) {
        try {
            a11.__proto__ = this;
        } catch(e12) {
        }
        try {
            super.f = a11;
        } catch(e13) {
        }
    }
    static [-5.2156853440499];
    #a;
    f;
    #b = 5n;
}
new C9();
const v15 = new C9();
const v16 = new C9();
function f17() {
    return 5n;
}
-13n & (-5.2156853440499 === v16);
let v22 = 16;
Math.tanh(v15);
const v24 = v15 >> v15;
Math.trunc(v24);
v22++;
v22 * v24;
