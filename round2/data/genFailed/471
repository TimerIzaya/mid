function f3(a4) {
    const o10 = {
        get f() {
            class C6 {
                static 1000 = this;
                f = a4;
            }
            new C6();
            new C6();
            new C6();
            return this;
        },
        [340582.0777415773]: 340582.0777415773,
    };
    return o10;
}
f3(1.0);
f3(1.0);
const v13 = f3(1.0);
class C14 {
    static set b(a16) {
        let v20 = 979883464;
        a16--;
        --v20 >>> v20;
    }
    static [v13];
}
new C14();
new C14();
new C14();
[4294967297,-65536,4,-536870912,5,-657426603];
[39925,617731174,40185,-9,-604950958,-9223372036854775808,-63085,-2147483648,-1531071794];
[49096];
C14.b;
const o34 = {
    "maxByteLength": 16,
};
const v36 = new ArrayBuffer(2, o34);
new Uint32Array(v36);
try {
    new Uint32Array(6);
} catch(e6) {
}
try {
    new Float64Array(255);
} catch(e10) {
}
try {
    new BigUint64Array(4);
} catch(e14) {
}
const o18 = {
    9: Uint32Array,
    4: "p5TIH",
};
function f19(a20, a21) {
    function f23(a24) {
        try { a20(a21, a24, a24, a24); } catch (e) {}
        const v27 = Symbol.isConcatSpreadable;
        this[v27] = v27;
    }
    this.onmessage = f23;
    const v29 = [[o18,"p5TIH",a20,f23],"number",4];
    [v29,v29];
}
const v33 = ["getMinutes",-44554n];
const o34 = {
    "arguments": v33,
    "type": "function",
};
new Worker(f19, o34);
