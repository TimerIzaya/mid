function f0() {
    const o12 = {
        ["toString"](a5, a6) {
            let v7;
            try {
            const t0 = "268435441";
            v7 = t0(a5, "maxByteLength", this);
            } catch (e) {}
            const v9 = [v7];
            Reflect.apply(("268435441").matchAll, a6, v9);
            return a5;
        },
        ..."268435441",
        "e": "toString",
    };
    return o12;
}
const v13 = f0();
const v14 = f0();
let v15 = f0();
const v16 = [-1000000000.0,1000000000000.0,2.2250738585072014e-308,-1.7976931348623157e+308,104690.31530887564,-596124.3663160012,0.8574821020655085,NaN];
const v17 = [0.5552724374759068,43745.892772974796,587765.7269573621,NaN,5.0,1.6028117005485143,2.2250738585072014e-308,-2.220446049250313e-16,-955.2406560094026];
[-0.722051626332906,-2.0,4.4794802794994077e+307,0.7380949354706631,-5.0];
class C19 extends f0 {
    static p(a21, a22, a23, a24) {
        a22 /= v16;
        f0 instanceof f0;
        const v26 = v15 & v14;
        super[v26] = v26;
        return this;
    }
    #e = v17;
    b = v13;
    #d;
}
new C19();
new C19();
const v29 = new C19();
Math.acos(v15);
let v34 = 9007199254740990 && (9007199254740990 >>> v29);
const v35 = ++v15;
--v34;
Math.atan2(v35, v15);
delete v13?.e;
try {
    f0();
} catch(e40) {
}
