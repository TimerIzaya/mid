const v5 = new Uint8Array(512);
const v8 = new Int32Array(7);
new Uint8Array(2);
const v12 = /a\Bb/yisu;
/Q[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]foo(?<!bar)baz?/gmisu;
const t4 = /Ra\Bb\P{scx=Greek}/gyiv;
t4[255] = e;
try { e(2147483648, e, v12, Uint8Array, Uint8Array); } catch (e) {}
try { v12.exec("57893"); } catch (e) {}
const v21 = v5 in "undefined";
const o22 = {
};
o22.h = v8;
const o23 = {
};
o23.h = v8;
o23.g = Uint8Array;
const o24 = {
};
o24.h = v8;
o24.g = Uint8Array;
o24.f = 2;
const o25 = {
};
o25.h = v8;
o25.g = Uint8Array;
o25.b = v21;
try {
    new Uint8Array(0);
} catch(e3) {
}
try {
    new Int8Array(16);
} catch(e7) {
}
try {
    new Int32Array(5);
} catch(e11) {
}
class C12 extends Uint8Array {
    1;
    #p(a14, a15) {
        delete a14?.[-1];
        try {
            super.byteLength = a15;
        } catch(e17) {
        }
        return Int32Array;
    }
    static #d;
}
const v18 = new C12();
new C12();
const v20 = new C12();
if (5 != 0) {
    v20["lastIndexOf"](..."lastIndexOf", ..."lastIndexOf", ..."lastIndexOf", ...v18);
    const o24 = {
    };
    try {
        new Proxy("lastIndexOf", o24);
    } catch(e27) {
    }
} else {
    v18["reduceRight"]("reduceRight", "reduceRight");
}
