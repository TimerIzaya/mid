function f0() {
}
class C1 extends f0 {
    static set g(a3) {
        const v4 = /mSfoo|(bar|baz)|quux/msu;
        /(?:a+)*/mydu;
        const t6 = /(a)\1xyz?[(?:foo)Oh(?:a+){0,0}]?/ysu;
        t6[7] = v4;
    }
    o() {
        function f8() {
            return this;
        }
        const v12 = -f8;
        ++f8;
        Math.tanh(v12);
        1073741825 ^ 1073741825;
        return f0;
    }
}
const v16 = new C1();
const v17 = new C1();
new C1();
const v19 = [358.4288580562038,0.09027173098375318];
const v20 = [2.0,1.5191481036374945,Infinity];
const v21 = [0.6934772782769955,-Infinity,0.8178026590088553,0.0,-5.0,1000.0,-173.07165844384565];
function F22(a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a24;
    this.d = a26;
    this.e = a24;
}
new F22(v21, v16, v21);
let v28 = new F22(v21, v17, v19);
const v29 = new F22(v20, v28, v21);
const v31 = new WeakSet();
v31.d += F22;
v28 <= f0;
delete v29?.d;
v28 = v31;
Object.defineProperty("n", 2147483647, { writable: true, configurable: true, enumerable: true, set: f0 });
let v2 = Int32Array;
try {
    new v2(714);
} catch(e4) {
}
try {
    new Uint8Array(639);
} catch(e8) {
}
try {
    new BigUint64Array(3576);
} catch(e12) {
}
class C13 extends v2 {
    static get g() {
        this | Uint8Array;
        Math.imul(23232, null);
        const v19 = -3576;
        +23232 || v19;
        return this;
    }
    static #g;
    f = 714;
    [3576] = 639;
    #e;
}
new C13();
new C13();
new C13();
const v25 = [-10,9007199254740991,-9007199254740991,5,2134860442,-9223372036854775808,-12496,9007199254740990];
const v26 = [1756096698,-4294967295,1,79946594,-23620,-2033187396,8,8,18140];
const v27 = [-9007199254740990,29656,0,-48106,6,1,44614,1021745917,59884];
let v30 = 1000 ** 1000;
const v31 = v2--;
const v32 = --v30;
v2 << v31;
const v34 = Math.round(v31);
v30 && v31;
v2 - v32;
function F37(a39, a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v26;
    } catch(e42) {
    }
}
new F37(v30, v25, v32);
new F37(v30, v25, 3576);
new F37(714, v27, v34);
