class C3 {
    static #toString(a5) {
        try {
            const o6 = {
            };
            this.p(o6, o6);
        } catch(e8) {
        }
        return -7n;
    }
    static #g;
    static [-7n];
    static [64n];
    #a = -268435456n;
}
const v9 = new C3();
const v10 = new C3();
let v11 = new C3();
const v12 = /a*b/gsdu;
/[\1111]a{}+/gmi;
const v14 = /[V^*]/sdv;
class C15 extends C3 {
    get d() {
        v9 | this;
        const v18 = new C3();
        v11 ^= v9;
        C3[v12] = v18;
        return v14;
    }
    static a;
    #a;
    170 = -7n;
    [-268435456n];
    static [v10];
    536870889 = v12;
}
new C15();
const v20 = new C15();
const v21 = new C15();
v21[512] = C3;
for (const v22 of v20) {
    let v26 = -210845.64448411157;
    --v26;
    const v28 = -9223372036854775808 | v26;
    v22 ** (v22 % v28);
    v28 ^ 1073741824;
}
[-12,-4096,9435,-7,-9007199254740992,-377,504912648,-2147483648];
[-143230377,-13,-1];
[3,65535,-2147483647,1073741825,268435439,16,-256,281345062,0,-36318];
const v12 = (a13, a14, a15, a16) => {
    %VerifyType("source");
    const t5 = -2.220446049250313e-16;
    t5[3] = "d";
    a14 >>> a13;
    return a14;
};
Object.defineProperty("source", 1024, { enumerable: true, get: v12, set: v12 });
const o20 = {
    "maxByteLength": 1594220028,
};
const v22 = new ArrayBuffer(1000, o20);
try {
    new Uint32Array(v22);
} catch(e25) {
}
