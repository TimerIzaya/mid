class C3 {
    set a(a5) {
        try {
            super.p(this, this, this);
        } catch(e8) {
        }
    }
    #o(a10, a11) {
        class C12 {
            f = a10;
        }
        new C12();
        new C12();
        new C12();
        return this;
    }
}
const v16 = new C3();
const v17 = new C3();
const v18 = new C3();
v16.d = v18;
let v25;
try {
const t0 = 268435440;
v25 = t0(-1.8450205876597998);
} catch (e) {}
const v26 = C3[-2];
if (v26) {
    function F27(a29, a30, a31, a32) {
        if (!new.target) { throw 'must be called with new'; }
        this.f = v17;
        this.g = v25;
        this.e = a32;
    }
    const v33 = new F27(v17, F27, "caller", v25);
    const v34 = new F27(v33, v33, "caller", "m2jH");
    new F27(v34, v34, "getUTCMonth", "m2jH");
} else {
    v26[Symbol.isConcatSpreadable] = v26;
}
