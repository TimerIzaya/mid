let v1 = new WeakSet();
function f2() {
    return v1;
}
const v3 = /a.Ha/myisu;
const v4 = /a1C\u00602cBP+/gidv;
const v5 = /foo[z]*a\W+/gyisv;
function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a9;
    this.g = a8;
    this.f = a8;
}
const v12 = new F6(v4, v3, v3, v4);
new F6(v3, v4, v4, v5);
const v14 = new F6(v3, v3, v5, v3);
[2.220446049250313e-16,-1.4452859242081075,-1000000.0,1.7976931348623157e+308,2.2250738585072014e-308,-3.0,-1e-15,0.11298076732417073,372.02344442737285,NaN];
[-Infinity,1000000.0];
[-684.9760649685612,7.360125912732229,-1e-15,631.9017033970422,-2.928471871374201e+307,0.25687057497943777,1.5023782669845716e+307,881.1271571481498];
v1 = v14;
const v21 = Math.acos(v14);
const v22 = Math.min(-234.95516174295767);
3 >> -234.95516174295767;
let v24;
try { v24 = v22(v1, v12, -234.95516174295767, F6, v21); } catch (e) {}
Reflect.construct(WeakSet, [v14], v24);
