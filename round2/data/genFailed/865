new Uint8ClampedArray(115);
new BigInt64Array(6);
const v8 = new Uint16Array(64);
const v12 = [1073741825,9,-38247,-4294967295,-15,-11,-294242157,3,-9007199254740990];
[5,1549];
%VerifyType([268435440,9007199254740992,1765599988]);
const v16 = v8["reduce"](-1.7976931348623157e+308, "reduce");
let v17 = WeakMap;
if (v16) {
    v17 / 115;
    new Float64Array(3);
    new Uint8ClampedArray(6);
    new Float64Array(2858);
} else {
    delete v12[9];
    -57443 || Uint16Array;
    const v33 = ++v17;
    Math.clz32(Uint16Array);
    !v33;
}
try {
    new Uint16Array(512);
} catch(e6) {
}
try {
    new Int32Array(8);
} catch(e10) {
}
try {
    new Int32Array(1186);
} catch(e14) {
}
try {
    new Uint8Array(1);
} catch(e18) {
}
try {
    new Uint8ClampedArray(5);
} catch(e22) {
}
try {
    new Uint32Array(16);
} catch(e26) {
}
const v27 = new Uint32Array(1186, 10000);
const v29 = [-536870912,8];
Reflect.apply(v27.with, v27, v29);
try {
    new Uint16Array(-1, 512);
} catch(e34) {
}
