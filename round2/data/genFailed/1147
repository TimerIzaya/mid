class C3 {
    static #g = 0.0;
    static o(a5, a6) {
        a6[this] = -9223372036854775807;
        try {
            a6.#g;
        } catch(e8) {
        }
        return this;
    }
    248 = 0.0;
    65536 = 268435439;
    [268435439];
    #b = 268435439;
    static b = -9223372036854775807;
}
const v9 = new C3();
const v10 = new C3();
const v11 = new C3();
function f18(a19, a20, a21, a22) {
    const o33 = {
        get h() {
            v9[v9] = this;
            return delete C3[38];
        },
        "d": a19,
        get b() {
            a20[this];
            const v30 = (-1061715446 * -1061715446) | -1061715446;
            Math.sin(a20);
            -1061715446 ^ a20;
            return v30;
        },
    };
    return o33;
}
f18(-9223372036854775807, v10, 15n, 1073741824);
const v35 = f18(-16, v9, 15n, -9223372036854775807);
f18(v35, v11, 15n, -16);
function f37(a38, a39) {
    v35[a39];
    return a;
}
const v42 = f37(-9223372036854775807, 15n);
try { v42(f18); } catch (e) {}
const o47 = {
    "execution": "sync",
    "type": "minor",
};
gc(o47);
let v0 = 5.0;
class C3 {
    n(a5) {
        let v7 = -9011;
        ++v7;
        Math.log2("split");
        v0 && "1073741824";
        -v7;
        Math.expm1("split");
        ++v0;
        return "split";
    }
}
const v16 = new C3();
const v17 = new C3();
const v18 = new C3();
function F19(a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a22;
    } catch(e24) {
    }
    try {
        this.g = v0;
    } catch(e25) {
    }
}
new F19(C3, v16, v17);
const v27 = new F19(v16, C3, v0);
const v28 = new F19(v17, v16, v27);
for (let v32 = 0; v32 < 32; v32++) {
    v18["p" + v32] = v32;
}
2n * v28;
[4294967297,-9223372036854775808,65535,16,30669,-11,-40945];
[1299150365,811937134,-715619836,-403497633,4294967295,80905439,129,16,2];
[536870912,16,902410462,-14,-9007199254740991,-268435456];
