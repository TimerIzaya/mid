let v2 = -1;
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a6;
    this.c = a5;
}
new F3(v2, 255);
const v8 = new F3(v2, v2);
const v9 = new F3(9223372036854775807, v2);
const v13 = [v9];
[v13,F3,"-128",v13];
const v15 = ["Sa"];
const v18 = new Array(1886);
Array[v18] &= 9223372036854775807;
Reflect.construct(Array, [v2], Array);
try { v9.n("UTC", "Sa"); } catch (e) {}
function f23(a24, a25) {
    let v26 = a25++;
    v8[v26] *= 9223372036854775807;
    ({"length":v2,...v26} = v18);
    return Reflect;
}
f23(v15, 9223372036854775807);
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -4294967297;
    } catch(e3) {
    }
    try {
        this.e = -4294967297;
    } catch(e4) {
    }
}
new F0();
new F0();
new F0();
/[^(?=.)?]/sguy;
/[8a(?=b)]/dgyv;
/\w|\dPs/muy;
const v17 = -14 >>> -2147483648;
Math.sinh(-14);
let v19 = -14 && -2147483648;
(-2147483648 * v17) * -14;
try {
    v19 = v17;
} catch(e22) {
}
