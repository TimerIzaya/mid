const v0 = /[\ca]G/gsdv;
const v1 = /((((.).).).)?/yidu;
const v2 = /Ka+?/gyisdu;
class C3 {
    constructor(a5) {
        this.toString = a5;
        let v6;
        try { v6 = v0.test(a5); } catch (e) {}
        let v7;
        try { v7 = v1.compile(v6); } catch (e) {}
        try { new v7(a5, ...v7, v7, v6, ...v2, v1); } catch (e) {}
    }
    static set e(a10) {
        v0[a10] = a10;
        for (let v11 = 0; v11 < 32; v11++) {
            this["p" + v11] = v11;
        }
    }
}
new C3(v0);
const v15 = new C3(v1);
const v16 = new C3(v15);
function f17() {
    return v1;
}
const v19 = new Date();
new Float32Array(9);
const v25 = new Int8Array(9);
new Uint16Array(3245);
const o29 = {
};
new Proxy(C3, o29);
const v32 = C3;
const v33 = o29[10000];
Object.defineProperty(v15, v25, { writable: true, get: f17 });
let v34;
try { v34 = v33(o29, v16, Float32Array); } catch (e) {}
const v35 = v2 in v19;
try { v34(v35, v16, 3245, v1, v19); } catch (e) {}
class C3 {
    get d() {
        for (const v5 in this) {
            const o6 = {
            };
            try {
                o6.a = v5;
            } catch(e7) {
            }
            try {
                const o8 = {
                };
                o8.a = v5;
                o8.h = -228498786;
            } catch(e9) {
            }
            try {
                const o10 = {
                };
                o10.a = v5;
                o10.h = -228498786;
                o10.f = v5;
            } catch(e11) {
            }
            try {
                const o12 = {
                };
                o12.a = v5;
                o12.h = -228498786;
                o12.f = v5;
            } catch(e13) {
            }
        }
        return -23335;
    }
}
let v14 = new C3();
const v15 = new C3();
const v16 = new C3();
class C17 {
    536870888;
    toString(a19, a20, a21) {
        try {
            a19 += a20;
        } catch(e22) {
        }
        return v16;
    }
    static set g(a24) {
        try {
            new Uint32Array(1024);
        } catch(e28) {
        }
        try {
            new Float64Array(0);
        } catch(e32) {
        }
        try {
            new Uint16Array(2310);
        } catch(e36) {
        }
    }
}
const v37 = new C17();
const v38 = new C17();
new C17();
const v41 = new Date();
try {
    v14 = v41;
} catch(e42) {
}
Object.defineProperty(v14, "d", { enumerable: true, value: v15 });
%VerifyType(C17);
[-1.8386806652551346,225516.5282188994];
[1e-15];
[-494180.05279178056,52118.45799357747];
v38[v37];
