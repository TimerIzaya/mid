let v3 = -8n;
const v6 = [-3.2142776645572546e+307];
const v7 = [-Infinity,-1000.0,5.0,-523.4778162976775];
[2.0,2.14273607743338];
new Set();
[...v3] = "getUTCMonth";
-673.9636223925773 ^ v6;
Math.atan2(1073741824n & -673.9636223925773, 1073741824);
try { v7.with(5, "sE"); } catch (e) {}
class C3 {
    static {
        this[this] ||= 65535n;
        Reflect.construct(65535n, [Reflect], this);
    }
    b;
    static #toString(a9) {
        function f10(a11, a12, a13) {
            function f15(a16) {
                return a16;
            }
            this.onmessage = f15;
            a13 >>> a11;
        }
        const v20 = [-4294967297n,12n,-4294967297n];
        const o21 = {
            "arguments": v20,
            "type": "function",
        };
        new Worker(f10, o21);
        return o21;
    }
}
const v23 = new C3();
const v24 = new C3();
const v25 = new C3();
function f29(a30, a31, a32, a33) {
    const o53 = {
        "e": 65535n,
        [-4294967297n](a35, a36, a37) {
            let v38;
            try { v38 = C3.toString(a30, a33); } catch (e) {}
            let v40;
            try { v40 = v24["has"](this, a36, v25); } catch (e) {}
            function F41(a43, a44, a45, a46) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.c = a43;
                } catch(e47) {
                }
                try {
                    this.d = a43;
                } catch(e48) {
                }
                try {
                    this.f = a43;
                } catch(e49) {
                }
            }
            new F41(a33, v38, 12n, a33);
            const v51 = new F41(v25, a32, a35, v40);
            new F41(v24, a37, v51, v25);
            return v25;
        },
    };
    return o53;
}
f29(65535n, 65535n, 12n, v23);
f29(-4294967297n, -4294967295n, 65535n, v23);
const v56 = f29(-4294967295n, -4294967297n, -4n, v23);
try {
    v56.fuck(v25, undefined, f29, f29);
} catch(e59) {
}
Math.log1p(-5.720073891375311);
12n ** -5.720073891375311;
let v66 = 587711421 - 587711421;
Math.cbrt(v66);
++v66;
