const v0 = [10,257,9007199254740992,4,4294967295,1073741823,-256,50224,-28347];
[-44390,4294967295,-2038035787,5,1000,-627150306];
const v2 = [4294967295,9,-4294967297,2,15,-1305447566,0];
function f3() {
    return v0;
}
const v6 = new Int32Array(512);
new Float32Array(284);
const v12 = new BigInt64Array(255);
for (let [v13,v14] of v12) {
}
const v19 = [v0,284];
Reflect.apply(v6.indexOf, v12, v19);
Object.defineProperty(v2, f3, { set: f3 });
let v2 = "callee";
class C3 {
    static #f = "X";
    constructor(a5) {
        try {
            const v6 = /(?<a>.)\k<a>[(a\1)]/sdgu;
            this.fuck(a5, a5, v6, v6);
        } catch(e8) {
        }
    }
    8;
    #e;
    a = "xQ";
    d = v2;
}
let v9 = new C3(C3);
const v10 = new C3(v2);
const v11 = new C3(v10);
let v13 = new WeakMap();
[v9,C3,C3,["xQ",v10],v9];
let v16 = [v11,"xQ"];
({"a":v16,"c":v9,"d":v13,} = v9);
let v17 = 0;
while (v17 < 7) {
    try {
        v2 = "xQ";
    } catch(e20) {
    }
    v17++;
}
