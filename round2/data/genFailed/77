const v2 = new BigInt64Array(3696);
new Int16Array(8);
new Uint32Array(177);
function f9() {
    return BigInt64Array;
}
let v11 = "-2147483649";
let v13 = 0;
do {
    v11 = "1252090951";
    Object.defineProperty("XE", 536870887, { get: f9 });
    let {"buffer":v14,"byteLength":v15,"length":v16,...v17} = v2;
    const o20 = {
        "maxByteLength": 606,
    };
    const v22 = new SharedArrayBuffer(3, o20);
    new BigInt64Array(v22);
    v13++;
} while (v13 < 2)
const v6 = [-1,268435440,512,255,0,65537,-647910682,-65535,2147483649];
[-2147483648,65535,268435456,0,255,-4294967295,8,-10,65537,-822395];
const v8 = [1495901152,65019,-1321553121,536870887,700831868,-2147483649,-3];
class C12 {
    #a;
    [256];
    static #m(a14, a15, a16) {
        try {
        const t0 = -6;
        new t0(a14);
        } catch (e) {}
        /(ab)\1/sdgyv;
        /a[a]yG(?<=a)+/imv;
        /a(?=bbb|bb)c/dmuy;
        return 2147483647;
    }
    #valueOf(a22, a23) {
        if (2147483647 > 256) {
            try {
                v6.#a = 536870912;
            } catch(e25) {
            }
        } else {
            v6.length;
        }
        return this;
    }
}
const v27 = new C12();
const v28 = new C12();
new C12();
let v31 = 65536;
v31 ^ -5;
-v31;
--v31;
3 & v31;
v28 instanceof C12;
Object.defineProperty(v8, "a", { value: 1024 });
try {
    v27.f = 536870912;
} catch(e38) {
}
