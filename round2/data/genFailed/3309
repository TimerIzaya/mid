const v0 = [-9007199254740991,-1,23252,2147483647,-1024,-10];
const v1 = [22664,129,129];
let v2 = [255,2,536870887,65537];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = a5;
    this.c = a5;
}
const v6 = new F3(v0);
const v7 = new F3(v1);
const v8 = new F3(v2);
class C9 {
    g = v8;
    get e() {
        super[v0] = v8;
        this[this] %= this;
        v2 = v1;
        return v6;
    }
    268435456;
    #c = v7;
    88 = v8;
}
const v11 = new C9();
new C9();
const v13 = new C9();
let v14;
try { v14 = v6.bind(v11, v13); } catch (e) {}
[v0,-128,v14,6];
([-128,[v1,v0]])["with"](6, "with");
const v24 = Symbol.iterator;
const o33 = {
    [v24]() {
        let v26 = 10;
        const o32 = {
            next() {
                v26--;
                const v30 = v26 == 0;
                const o31 = {
                    "done": v30,
                    "value": v26,
                };
                return o31;
            },
        };
        return o32;
    },
};
