let v2 = 127n;
const v3 = [1919572313n,1919572313n,-1024n,-1024n,v2];
let v4 = [-1024n,v2];
let v5 = [1919572313n,v2];
function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = v4;
    this.h = a8;
    this.d = v5;
}
new F6(v3, 1919572313n, v3, v4);
const v13 = new F6(v5, 1919572313n, v5, v3);
new F6(v3, 1919572313n, v3, v5);
const v19 = new Set();
let v20 = 0;
while (v20 < 10) {
    [...v2] = v4;
    [v2,v4,v5] = v19;
    v20++;
}
v13.__proto__ = v19;
const v3 = [774508.8066185336,774508.8066185336,774508.8066185336,2.0,-1.7976931348623157e+308];
const v4 = [v3,774508.8066185336,-1.7976931348623157e+308,2.0];
const v5 = [v4,774508.8066185336,774508.8066185336];
let v12 = ("K").length;
let v13;
try {
const t0 = 36356;
v13 = new t0(v4, v5);
} catch (e) {}
[v3,2147483648,v4["reduce"](v13, -5)];
Math.tanh(v5);
const v23 = v12 || 5;
v12++;
Math.sinh(v23);
"getTimezoneOffset" >> v23;
Math.exp(5);
