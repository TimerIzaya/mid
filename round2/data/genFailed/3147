const v1 = new Set();
class C5 extends Set {
    [v1] = 1697017266n;
    static [1697017266n] = 1697017266n;
    #toString(a7) {
        if (a7 != 681n) {
        } else {
            v1 >> v1;
        }
        return Set;
    }
    static [Set];
}
let v13 = new C5();
const v14 = new C5();
const v15 = new C5();
function F16(a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = v13;
    this.h = C5;
    this.a = a19;
}
new F16(v1, 1697017266n);
const v21 = new F16(v15, 536870889n);
new F16(v14, v13);
const v23 = [1.1082325129036507e+308,-2.0,7.273315832682785e+307,-12764.408320694114];
[1e-15,-1e-15,2.220446049250313e-16,3.702471953247869,-1000.0,2.0,1000000000.0,-468.2188132388976,2.2250738585072014e-308,298682.80745185143];
const v25 = [1.7976931348623157e+308];
[v13,C5] = v14;
try {
    const v26 = v14[v21];
    try { v13(v26, v1); } catch (e) {}
} finally {
    let [v28,v29,...v30] = v14;
}
v23.length;
v13.__proto__;
delete v21[v25];
