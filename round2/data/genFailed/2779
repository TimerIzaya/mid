let v0 = 232;
const v2 = new Uint32Array(v0);
const v5 = new BigUint64Array(3300);
const v8 = new Float64Array(3716);
const v9 = [12708,-256,-539614336,4294967295,-7442,255,268435456,-2147483649,536870888];
[-65535,-9223372036854775808,3999,-15142,-9007199254740991];
const v11 = [-4294967295,4294967297,268435439,128,-27262,-536870912,-2027188919,-9007199254740991];
class C12 {
    #o(a14, a15) {
        a15?.[v5];
        try {
            this.#o(Float64Array, a15);
        } catch(e18) {
        }
        return a15;
    }
    toString(a20, a21) {
        const v23 = Float64Array && 3716;
        return v11;
    }
    static c = 3300;
    [Uint32Array] = v5;
}
const v24 = new C12();
new C12();
let v26 = new C12();
v24 ^ v24;
v0 **= v0;
v2 % v9;
v5 >> v2;
v5.__proto__ = v9;
v26 = v8;
try {
    new C12();
} catch(e31) {
}
