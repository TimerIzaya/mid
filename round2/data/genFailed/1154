class C3 {
    static h;
    constructor(a5) {
        this - this;
        ("o")["o"];
        for (let v8 = 0; v8 < 32; v8++) {
            const t6 = "o";
            t6["p" + v8] = v8;
        }
    }
}
const v11 = new C3("symbol");
const v12 = new C3("number");
const v13 = new C3(v12);
[-582279685,1,-54613,-1784373495,4,-1031266945,-65537,-9007199254740992];
[3];
const v16 = [7,0,9,362463839,-3,256,1433999221,1073741825,-9223372036854775807,-1225918180];
let v17 = 0;
while (v17 < 2) {
    const v20 = new C3(v17, ...v16, v12, v13, v11);
    v20 | "o";
    v17++;
}
let {"c":v23,"e":v24,} = v13;
class C6 {
    set f(a8) {
        const v9 = a8?.c;
        try { v9.p(-2147483649, 872.2965420253909); } catch (e) {}
        super.e;
        -14 & (this ** -14);
        const v18 = ~1073741824;
        this - NaN;
        Math.sinh(v18);
        Math.cosh(NaN);
    }
}
const v22 = new C6();
const v23 = new C6();
const v24 = new C6();
const v25 = [-2147483647,-574572379,1823316455,9,2147483649,2,-1484057689];
[-3];
const v27 = [-7,-1];
let v28;
try { v28 = v23.valueOf(v24, v27, v27, v24); } catch (e) {}
for (let [...v29] of v27) {
    const v30 = [v29,v29,-6.466641346880147e+307,v29];
    [v28,v29,[v29,v30,-6.466641346880147e+307,v30,v24]];
}
try {
    C6.fuck(v22, v25, C6);
} catch(e34) {
}
