function f0() {
    const o4 = {
        "g": 9,
        __proto__: "function",
        "h": 9,
        ..."function",
        10: "function",
        "e": 5.0,
        "c": 5.0,
        [9]: 9,
        ..."function",
        "d": 5.0,
        "f": 9,
        "b": 9,
    };
    return o4;
}
f0();
const v6 = f0();
f0();
class C8 extends f0 {
    constructor(a10) {
        super();
        let v11;
        try { v11 = v6.slice(); } catch (e) {}
        v11 | this;
    }
    m(a14) {
        let v13 = this;
        ({"b":a14,"h":v13,...v13} = a14);
        Promise[0] >>= a14;
        let v18 = -1270733111;
        Math.log2(v18);
        --v18;
        const v21 = -45958 + f0;
        v21 / v21;
        Math.sin(-45958);
        f0 - -45958;
        return v6;
    }
}
new C8(C8);
new C8(v6);
new C8(C8);
new BigUint64Array(5);
new Uint8ClampedArray(1000);
new Int32Array(10);
const o39 = {
    "maxByteLength": 1824373210,
};
const v41 = new ArrayBuffer(403, o39);
const v43 = new Float32Array(v41);
const o44 = {
};
o44.d = Uint8ClampedArray;
const o45 = {
};
o45.d = Uint8ClampedArray;
o45.f = v43;
const o46 = {
};
o46.d = Uint8ClampedArray;
o46.f = v43;
o46.h = 1000;
const o47 = {
};
o47.d = Uint8ClampedArray;
o47.f = v43;
o47.e = o39;
class C3 {
    1;
    set e(a5) {
        const t3 = "IOB7f";
        t3[Symbol.split] = a5;
    }
    m(a9, a10) {
        try {
            super.c = "IOB7f";
        } catch(e11) {
        }
        return 1000000000.0;
    }
}
const v12 = new C3();
const v13 = new C3();
const v14 = new C3();
class C15 extends C3 {
    constructor(a17, a18, a19) {
        let v16 = this;
        super();
        try {
            v16 >>>= v16;
        } catch(e20) {
        }
    }
    static #g = -1236152620;
    [v12] = -1236152620;
    g = v14;
    static 994 = v14;
}
new C15(v14, C15, v14);
let v22 = new C15(v14, v14, v14);
let v23 = new C15(v12, C3, v13);
try { v13.m(v14, C15, v12, v22); } catch (e) {}
try {
    v22 &= v13;
} catch(e25) {
}
class C26 extends C15 {
    toString(a28, a29, a30) {
        try {
            v23 -= this;
        } catch(e31) {
        }
        return this;
    }
}
new C26();
new C26();
new C26();
