function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = 1073741824;
}
const v3 = new F0();
const v4 = new F0();
const v5 = new F0();
const v9 = [-1024,2,9007199254740991,16,60967,65537,198218016];
const v10 = [9,46670];
const v11 = [4294967297,12,4294967296,1073741825,-2,-9,-14];
class C15 {
    constructor(a17, a18) {
        `sinh${this}boolean${v10}object${128}trimRight`;
        v3.__proto__;
    }
    static toString(a23, a24, a25, a26) {
        -1.5118558463110646e+308 && v9;
        function f28(a29, a30) {
            [-1862519974,536870889,-404532539,-9223372036854775808,-10,-536870912];
            [-256,255,15,128,255,4294967296,1073741823,-256,-5,536870912];
            [536870887,-50048,-9007199254740990];
            return v5;
        }
        f28(-1000000.0, a24);
        return 64;
    }
}
const v35 = new C15(v4, 590.6978659269221);
new C15(v4, -1.5118558463110646e+308);
const v37 = new C15(v3, -1000000.0);
const v38 = v11[128];
new C15(v3, -1000000.0);
try { new v38(v35, v37, 64, v11, -1000000.0); } catch (e) {}
C15[-16];
[909.7982609798912,-1000.0,5.288772997970883e+307,-2.0834073393061336,-1.551405686998201e+308,-1.0799725889918618e+308,0.7127714813005366];
[5.0,0.0,6.429197262978683,1000000000.0,-Infinity,4.0,-2.220446049250313e-16];
[-2.220446049250313e-16];
v9.__proto__ = v9;
("o").normalize("NFD");
const v0 = [-1.0,0.509928449681938,-559222.5076807183];
const v1 = [-1.3383429732049765e+308,-1000.0,0.14361798611168286,0.938554861722263,-1.0,984886.3071204482,1000.0,-1000.0,-2.0];
const v2 = [693453.0037084243,-4.0,-2.2250738585072014e-308,-82.6568965151298];
function F6(a8, a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = v2;
    } catch(e11) {
    }
    try {
        this.e = a8;
    } catch(e12) {
    }
}
const v13 = new F6("f", "hasInstance", v2);
new F6("hasInstance", "symbol", v1);
new F6("f", "hasInstance", v2);
class C19 extends F6 {
    static a = v2;
    static {
        new F6("f", "symbol", v0);
        v2["findIndex"](9007199254740990);
    }
    [v0];
    get b() {
        super.c;
        let [] = v2;
        try {
            const t28 = "f";
            t28.__proto__ = this;
        } catch(e26) {
        }
        return v13;
    }
}
new C19();
new C19();
new C19();
class C30 {
    n(a32, a33, a34, a35) {
        try {
            super[19144] = a35;
        } catch(e36) {
        }
        return 19144;
    }
}
new C30();
new C30();
new C30();
