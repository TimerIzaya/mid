[-62041,1832095232];
[16,4294967295,127,-34647,10000,-4294967297];
const v5 = [1073741825,-47151,0,9,-3275];
function f6() {
    return v5;
}
class C7 extends f6 {
    static [f6] = 8.144754663624482;
    #f;
    static h;
    #d = 8.144754663624482;
    o(a9, a10, a11, a12) {
        try {
            a12.#d = a9;
        } catch(e13) {
        }
        return a11;
    }
}
const v14 = new C7();
new C7();
new C7();
const v17 = [10,-16,12,1262210089,-1073741824];
[268435440];
const v19 = [-268435456,4,-2147483649,-56382,4294967295,-1,1532689761,-9007199254740992];
let v20;
try { v20 = v19.toString(); } catch (e) {}
try {
    f6();
} catch(e22) {
}
try { v20(8.144754663624482, v17); } catch (e) {}
C7 / v14;
new Map();
class C5 {
    2;
    static set h(a7) {
        const o11 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o11);
    }
    f = "21831";
    static [Map] = "toString";
    static 4096;
}
const v13 = new C5();
const v14 = new C5();
const v15 = new C5();
function f16(a17, a18) {
    const o29 = {
        ...a17,
        ...v14,
        [Map]: a17,
        "f": C5,
        [v13]: a17,
        "b": a17,
        [a17]: v15,
        toString(a20, a21, a22, a23) {
            let v24;
            try { v24 = ("toString").replace(a17, a18); } catch (e) {}
            a23[a22];
            [6,-7,-12];
            [65535,-1,3,536870912,-455052475,303994550,2];
            [-640066852,-11];
            return v24;
        },
    };
    return o29;
}
const v30 = f16("toString", "toString");
f16("toString", "toString");
f16("toString", "21831");
f16("21831", "21831");
f16("toString", "toString");
Math.pow(v30, v30);
Math.clz32(v30);
const v43 = C5 ^ 1073741824;
1073741824 + v30;
1073741824 / C5;
!v43;
