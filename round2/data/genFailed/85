const v6 = new Uint16Array(216);
const v9 = new Uint8ClampedArray(64);
new Int8Array(7);
v9[1000] = 65537n;
v6.byteLength *= 216;
let v16 = 0;
do {
    v16 ** 2147483649n;
    delete v9[512];
    v16++;
} while (v16 < 10)
let v1 = 100525844;
class C3 {
    static #toString(a5) {
        %VerifyType(this);
        const v6 = super.h;
        try {
            v1 *= v1;
        } catch(e7) {
        }
        return v6;
    }
    c;
    e = 10000;
    h;
    static 209;
    #f = -959860923;
}
new C3();
new C3();
new C3();
try {
    new BigUint64Array(5);
} catch(e20) {
}
try {
    new BigUint64Array(3);
} catch(e24) {
}
try {
    new Int16Array(129);
} catch(e28) {
}
for (const v29 of -959860923) {
    const o30 = {
    };
    try {
        o30.f = 10000;
    } catch(e31) {
    }
    try {
        const o32 = {
        };
        o32.f = 10000;
        o32.b = 0.6102348030587518;
    } catch(e33) {
    }
    try {
        const o34 = {
        };
        o34.f = 10000;
        o34.b = 0.6102348030587518;
        o34.g = v29;
    } catch(e35) {
    }
    try {
        const o36 = {
        };
        o36.f = 10000;
        o36.b = 0.6102348030587518;
        o36.c = 129;
    } catch(e37) {
    }
}
