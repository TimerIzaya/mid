const v0 = [];
class C1 {
    constructor() {
        let v3;
        try { v3 = v0(this, this); } catch (e) {}
        v3.c = this;
        function F4(a6, a7) {
            if (!new.target) { throw 'must be called with new'; }
            this.h = v0;
            this.b = v0;
            this.e = a7;
        }
        new F4(F4, this);
        new F4(F4, this);
        new F4(v0, v0);
    }
    static a = v0;
    #d;
    [v0] = v0;
}
const v11 = new C1();
new C1();
new C1();
function f14(a15) {
    const o26 = {
        1073741823: v0,
        [C1]: a15,
        [a15](a17, a18, a19, a20) {
            a19 ** v0;
            try { a17.expm1(); } catch (e) {}
            try {
                a17.call(a19, v11, a18, 989776.0427829497);
            } catch(e25) {
            }
            return a15;
        },
        "c": C1,
        "b": v11,
        [v0]: v0,
    };
    return o26;
}
const v27 = f14(v11);
f14(f14(v11));
new Float32Array(1056);
new Float32Array(0);
new Uint8Array(13);
C1.__proto__;
v27.__proto__;
v0[Uint8Array];
f14(v0);
%PrepareFunctionForOptimization(f14);
f14(v0);
f14(v0);
%OptimizeMaglevOnNextCall(f14);
const t55 = f14(v0);
delete t55[129];
