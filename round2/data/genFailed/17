class C3 {
    set d(a5) {
        new BigUint64Array(255);
        new Float32Array(0);
        new Float32Array(2829);
    }
    65535 = 0.16789258755229475;
}
new C3();
new C3();
const v17 = new C3();
new BigUint64Array(3);
const v23 = new Float32Array(1);
const v26 = new Uint8ClampedArray(1413);
const v27 = new Float32Array(1413, 1, 1);
v27.__proto__ = v27;
C3[0] <<= 3;
try {
    const o28 = {
    };
    v27.findIndex(v17, o28);
} catch(e30) {
}
try { v17.toString(v23, Uint8ClampedArray, v17, v26, Uint8ClampedArray); } catch (e) {}
function f0() {
    const o19 = {
        o(a5, a6) {
            try {
                new Float64Array(5);
            } catch(e10) {
            }
            try {
                new Int16Array(256);
            } catch(e14) {
            }
            try {
                new Uint16Array(1845);
            } catch(e18) {
            }
            return this;
        },
    };
    return o19;
}
const v20 = f0();
const v21 = f0();
const v22 = f0();
const v23 = [v20,f0,v22,v20,v20];
[v23,v21,v23,v23,v22];
[v22];
try {
    new Int8Array(129);
} catch(e29) {
}
try {
    new Float32Array(1);
} catch(e33) {
}
try {
    new Uint8ClampedArray(99);
} catch(e37) {
}
for (let v38 = 0; v38 < 32; v38++) {
    v23["p" + v38] = v38;
}
v20 > v20 ? v20 : v20;
let v43 = f;
const v44 = f0;
Math.tanh(0.8110630357565569);
1 >> --v43;
const v52 = -1;
1 & 1024;
Math.tanh(v52);
