function f4(a5) {
    const o10 = {
        "a": null,
        "b": -1837157364n,
        ...17059n,
        __proto__: -1837157364n,
        ...1073741825n,
        "f": null,
        [a5](a7) {
            let v8;
            try { v8 = this.p(null, a7, null, this); } catch (e) {}
            a5 <= v8;
            return a5;
        },
    };
    return o10;
}
const v11 = f4(17059n);
f4(1073741825n);
const v13 = f4(1073741825n);
let v16 = -440122.78759855474;
try {
    v16 ^= v16;
    let v17 = FinalizationRegistry;
    v17 |= v17;
} finally {
    Object.defineProperty(v11, f4 || v13, { enumerable: true, set: f4 });
}
v11.b &= -4.645330545753269e+307;
new f4(1073741825n);
const v1 = new WeakSet();
function F5(a7) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 4;
    } catch(e8) {
    }
    try {
        this.g = a7;
    } catch(e9) {
    }
    try {
        this.f = a7;
    } catch(e10) {
    }
}
const v11 = new F5(-1947726901);
const v12 = new F5(4);
const v13 = new F5(-1947726901);
for (const v17 of v13) {
    let v18;
    try { v18 = v17(); } catch (e) {}
    try {
        v12[978] = v18;
    } catch(e19) {
    }
}
const v20 = -1947726901 == -1947726901;
try { v11(-1024n, v1, -4096n, F5, v20); } catch (e) {}
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = -1947726901;
    } catch(e26) {
    }
    try {
        this.c = v11;
    } catch(e27) {
    }
    try {
        this.f = a25;
    } catch(e28) {
    }
}
const v29 = new F22(-6, -1947726901);
new F22(v12, v29);
new F22(F5, WeakSet);
