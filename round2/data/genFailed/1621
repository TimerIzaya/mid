function f0() {
}
class C1 {
    static #n() {
        const v8 = (-5.0 + -5.0) ^ 268435439;
        this % 268435439;
        return v8;
    }
    d;
    #d;
}
const v10 = new C1();
const v11 = new C1();
let v12 = new C1();
class C16 extends f0 {
    128;
    static get b() {
        let v17 = this;
        v11[v17] = v17;
        v11.d += -1;
        ({"a":v17,"d":v17,"f":v12,...v12} = v10);
        return v17;
    }
    constructor(a19, a20, a21) {
        super();
        try {
            v11.o(f0, undefined, -1, undefined);
        } catch(e24) {
        }
    }
}
new C16(-13, -1, -1);
new C16(-13, -13, -13);
new C16(-13, -2147483648, -2147483648);
let v28 = 0;
do {
    let v29;
    try { v29 = C1.valueOf(f0); } catch (e) {}
    [v29,v12] = v29;
    v28++;
} while (v28 < 0)
f0();
