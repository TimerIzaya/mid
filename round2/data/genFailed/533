const v2 = new Uint16Array(0);
const v5 = new Uint8Array(262);
const v8 = new Uint32Array(16);
function f9() {
    return 262;
}
function f10(a11, a12, a13) {
    const o20 = {
        "c": 0,
        1073741823: a11,
        [-2]: Uint16Array,
        "g": a13,
        "a": 0,
        [a11](a15, a16, a17) {
            v5[5] %= a13;
            v5[2] = a13;
            try {
                super.toString(a17, Uint8Array, a13);
            } catch(e19) {
            }
            return 16;
        },
    };
    return o20;
}
const v21 = f10(16, 16, 262);
const v22 = f10(262, 0, 16);
f10(16, 262, 262);
const v25 = [f9,v5];
Reflect.apply(v2.forEach, v22, v25);
v8[v2] >>>= 16;
const v29 = new Uint8Array(v21, 16, 262);
[v29,16,Uint8Array,v29];
[v8,[f10],Uint8Array,16];
function f0() {
}
class C1 extends f0 {
    [f0];
    set a(a3) {
        a3 | this;
        Object.defineProperty(this, 2147483649, { enumerable: true, value: this });
    }
    get c() {
        const v7 = new f0();
        with (this) {
            a = this;
            super.b;
        }
        f0 >> v7;
        return this;
    }
}
const v11 = new C1();
const v12 = new C1();
const v13 = new C1();
function f14(a15, a16) {
    const o30 = {
        __proto__: v12,
        "g": f0,
        536870887: C1,
        ...v13,
        "c": a16,
        p(a18, a19) {
            return v11;
            const v20 = [a16,this,f0,a16];
            [v20,this,a16,a19];
            [v12,a16,a19,C1];
            try { a16(v20, a15); } catch (e) {}
            let v26 = 9007199254740990;
            v26--;
            -1143657643 & -1143657643;
            Math.pow(f0, f0);
            return a16;
        },
    };
    return o30;
}
f14(v12, v11);
f14(v11, v12);
f14(v11, C1);
-14n / -14n;
[1000,-21130];
[41219,536870889,9007199254740992,-31146,129,9007199254740991,74022365,-32526,1817337828,-57181];
[-1063874723,-420485201,3,-268435456];
const v45 = Symbol.iterator;
const o54 = {
    [v45]() {
        let v47 = 10;
        const o53 = {
            next() {
                v47--;
                const v51 = v47 == 0;
                const o52 = {
                    "done": v51,
                    "value": v47,
                };
                return o52;
            },
        };
        return o53;
    },
};
