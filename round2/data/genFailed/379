const v0 = [];
function f4() {
    return v0;
}
class C5 extends f4 {
    #c = v0;
    #e = f4;
    static #n(a7, a8) {
        v0[3954] = a7;
        const v12 = Reflect.construct(a8, [f4,Reflect,f4,a8,Reflect], f4);
        super.length |= v12;
        return v12;
    }
    c = v0;
    7 = 16n;
}
const v13 = new C5();
new C5();
new C5();
class C16 {
    static #m(a18, a19, a20, a21) {
        [6.344258339271725,-0.0,116.02415321698277,-1000.0,-1000.0,0.0,0.0,Infinity,-5.0,0.18293990285234807];
        [-0.0,0.5416142103977816,-1000000.0,926.502115006353];
        [0.08485105795327774,-3.0,1000000000.0,-3.0,-4.0,0.7253994217757915,-558.7350871169306,732.5970552207525];
        return 35818n;
    }
    n(a26, a27) {
        let v28 = 0;
        while (v28 < 5) {
            const v31 = super.g;
            try {
                super.isFrozen(a26, v31, v31, v31, 16n);
            } catch(e33) {
            }
            v28++;
        }
        return 35818n;
    }
}
new C16();
new C16();
new C16();
v13 + 536870888n;
function f39() {
    return C5;
}
f4 ** 35818n;
try {
    new f39();
} catch(e42) {
}
C16[257];
try {
    new Int16Array(80);
} catch(e6) {
}
try {
    new Float64Array(7);
} catch(e10) {
}
try {
    new BigInt64Array(1722);
} catch(e14) {
}
try {
    new BigUint64Array(512);
} catch(e18) {
}
try {
    new Uint8Array(128);
} catch(e22) {
}
try {
    new Float32Array(3754);
} catch(e26) {
}
const v27 = /(?<=a)[[^123]]/sgv;
/MWb/sidgy;
for (const v30 of /\1(a)/dgu) {
    try {
        v27[8n] = 1722;
    } catch(e31) {
    }
}
("getMonth").normalize("NFC");
