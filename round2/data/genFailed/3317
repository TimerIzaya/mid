/iu3a[a-z]Sa[^a]*/yidu;
const v1 = /[^a[bc]d]/v;
const v2 = /a[a-z]/gyv;
let v3 = 127;
new Float64Array(v3);
const v8 = new Int16Array(6);
const v11 = new Uint32Array(1);
const v12 = (a13, a14) => {
    'use strict';
    let v15 = gc;
    ({"flags":a14,...v15} = v2);
    v3 = a13;
    v2.source <<= a13;
    try { v8(v15, a13, v1, Int16Array); } catch (e) {}
    return a13;
};
v12(Int16Array, Int16Array, v12, 1, 1, v1);
try { v11.every(v12, v2); } catch (e) {}
