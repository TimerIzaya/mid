class C3 {
    constructor(a5, a6) {
        ("getMonth")[4];
        let {"f":v11,"g":v12,} = a6;
    }
    static #a = "boolean";
    #b;
    #h = 1000.0;
    b = "getMonth";
    static ["boolean"] = "getMonth";
}
const v13 = new C3(1000.0, 1000.0);
const v14 = new C3(v13, v13);
new C3(v14, "boolean");
const o22 = {
};
const v24 = new Proxy("getMonth", o22);
o22.b = v24;
function f25() {
    return "undefined";
}
const o28 = {
    "maxByteLength": 2337,
};
const v30 = new SharedArrayBuffer(127, o28);
new BigInt64Array(v30);
/Bpd(?<=)[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]JKAh+/sguy;
const v1 = /[^5f?]/dgmv;
const v2 = /a*?/idgmv;
const v3 = [-1e-15,-1.0,0.2105041933160141,-2.528243604062223e+306,-1000000000000.0,-636053.3966716395,Infinity,-2.220446049250313e-16];
[-2.0875930148952e+307,4.937593467681715,-9.672033651254228e+307,-118.1188762557124,38.23058943570345,-1.7976931348623157e+308,0.15682357342934783,-6.349209410558611,495.2310667784293,4.0];
const v5 = [-1.078237765395414e+308,0.5133606337231815,-1000000.0];
function F9(a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a13;
    } catch(e14) {
    }
}
const v15 = new F9(-2147483649, v1, v3);
new F9(65535, v1, v5);
const v17 = new F9(-2147483649, v2, v3);
try { v15(65535, -2147483649); } catch (e) {}
const v19 = v17[536870889];
const o20 = {
};
try {
    new Proxy(v15, o20);
} catch(e23) {
}
v19[-2] /= -65537;
