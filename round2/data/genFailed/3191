const v0 = [-61463,-15,-2147483647,-4294967297,-812675817,-849544049,-9,7,127];
const v1 = [6,9007199254740991,12,2147483648];
let v2 = [268435456,-9007199254740992,-12,6,-5,879626307,5595,65535,-2043868363];
function f3() {
    return v1;
}
function F4(a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = v1;
    this.f = a6;
}
let v8 = new F4(v1, v0);
const v9 = new F4(v1, v2);
const v10 = new F4(v0, v2);
class C11 extends f3 {
    constructor(a13, a14, a15, a16) {
        super();
        super.length /= v9;
    }
    n(a18, a19, a20) {
        f3();
        const v23 = Symbol.iterator;
        const o32 = {
            [v23]() {
                let v25 = 10;
                const o31 = {
                    next() {
                        v25--;
                        const v29 = v25 == 0;
                        const o30 = {
                            "done": v29,
                            "value": v25,
                        };
                        return o30;
                    },
                };
                return o31;
            },
        };
        return v8;
    }
}
const v33 = new C11(v1, v0, v9, v10);
const v34 = new C11(v0, v1, v9, v10);
const v35 = new C11(v0, v34, C11, v10);
function f36() {
    return f3;
}
let v40 = v0.__proto__;
v1[-1e-15] = v0;
({"d":v2,"f":v8,"length":v40,} = v1);
Object.defineProperty(v35, "length", { configurable: true, enumerable: true, get: f3, set: f36 });
-39023 * -39023;
-763570769 << -39023;
!(v33 >> C11);
+(-763570769 * -39023);
Math.random();
