const v1 = [-4294967297,7];
[268435456,10000,1073741825,3,-12,-2147483647,6,-39655,-128];
[257,4294967295];
[-27114,4294967296,-391119705,-9223372036854775807,-32830];
const v5 = [-9933,4294967295,2147483647,5,1024,24494];
[-1004967025,-530339627,1000,128,4294967295,-1376400972,42907];
function F10(a12, a13, a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = a13;
    this.e = a15;
}
const v16 = new F10("n", "-13", v5, "-13");
const v17 = new F10("n", "stack", v5, v16);
const v18 = new F10("n", "n", v5, v16);
a = v18;
v17 instanceof F10;
for (let i22 = 0, i23 = 10; i22 < i23; i22++, i23--) {
    const v32 = ["stack","n"];
    Reflect.apply(("n").localeCompare, v1, v32);
}
let v0 = 1073741825n;
class C3 {
    #a = v0;
    static get b() {
        try {
            v0 = 1073741825n;
        } catch(e5) {
        }
        return v0;
    }
    g;
    [-1];
    3 = v0;
    15 = 1073741825n;
}
new C3();
const v7 = new C3();
const v8 = new C3();
for (const v15 of 1e-15) {
    try {
        v7.g = v15;
    } catch(e16) {
    }
}
try {
    C3[v8] = 59423;
} catch(e17) {
}
