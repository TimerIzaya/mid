function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a5;
    this.e = 2;
}
const v6 = new F3(-4294967297);
const v7 = new F3(56242);
new F3(56242);
function f9() {
    return F3;
}
const v10 = [268435456];
[65535,-7];
[444104457,-128,-39309,10,12];
class C13 extends f9 {
    constructor(a15, a16) {
        super();
        try {
            super.apply(a15);
        } catch(e18) {
        }
        function f19() {
            return this;
        }
    }
    [v10] = 56242;
    4 = 56242;
    static [2];
    268435440 = v10;
}
new C13(v7, C13);
const v21 = new C13(v7, v6);
new C13(v21, v21);
class C23 {
    static #b = -4294967297;
}
new C23();
new C23();
new C23();
const o29 = {
    "maxByteLength": 1792,
};
const v31 = new ArrayBuffer(3, o29);
new Int16Array(v31);
class C3 {
    static {
        this >>> 1.7976931348623157e+308;
        Reflect.construct(this, [Reflect,Reflect,Reflect,Reflect], 3.0);
    }
    #c;
    #valueOf(a10, a11) {
        const v12 = a10?.[256];
        try {
            this[v12] = 3.0;
        } catch(e13) {
        }
        return v12;
    }
}
new C3();
new C3();
const v16 = new C3();
const v17 = [512,-47546,-4294967296,6,1,-4294967296,-375603722,5,129,-1842193515];
const v18 = [-1419641515,14284,4294967296,1317075514,14,512,-4294967297,-1207725951];
const v19 = [-34850,-1024];
function f20() {
    return v19;
}
function f21(a22, a23, a24, a25) {
    const o44 = {
        [1.7976931348623157e+308](a27, a28, a29, a30) {
            f20();
            try {
                new Uint8Array(175);
            } catch(e35) {
            }
            try {
                new Int32Array(231);
            } catch(e39) {
            }
            try {
                new Int16Array(3192);
            } catch(e43) {
            }
            return a24;
        },
    };
    return o44;
}
f21(v19, v19, f21(v16, v18, v16, v19), v19);
f21(v19, v18, v19, v18);
try {
    const v50 = new Array(-4294967297);
    f21(v19, v17, v50, v17);
} catch(e52) {
}
[-35582,255,-5];
[268435456,-834926480];
[-1073741824,256,-9];
