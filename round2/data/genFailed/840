class C3 {
    static get e() {
        const v5 = this instanceof "object";
        super.g = this;
        "object" > this;
        return v5;
    }
    constructor(a8) {
        let v9;
        try { v9 = a8(a8, a8); } catch (e) {}
        const t10 = "object";
        t10.f = this;
        const v10 = v9 - v9;
        const v11 = a8[v9];
        try { new v11(v10, v11, "symbol", v11, ..."boolean"); } catch (e) {}
        Math.cos(v11);
        const v17 = "object" % -2;
        !v17;
        "object" / ("object" + v17);
    }
}
const v21 = new C3("symbol");
let v22 = new C3("boolean");
new C3(v22);
/q(ab)/gysdu;
/xyz??/mysd;
/N/gv;
const v35 = Reflect.construct(C3, [v21], C3);
v22 ^ 2n;
if (v35) {
    v22 >>= Reflect;
} else {
    function f37() {
        return "boolean";
    }
}
const v0 = [NaN,Infinity,-1.7976931348623157e+308];
const v1 = [0.3523194475533835];
const v2 = [-Infinity,8.194661612018496,0.878377718589549];
function f3(a4, a5) {
    const o6 = {
        __proto__: v1,
        "h": a4,
        5: a5,
        "b": a4,
        "a": a4,
        "f": a5,
        "c": v2,
        "d": v0,
        6: v2,
        ...v1,
        [v1]: v1,
        "g": v0,
        ...v2,
    };
    return o6;
}
f3(v2, v2);
f3(v0, v1);
f3(v2, v2);
try {
    new Int32Array(7);
} catch(e13) {
}
try {
    new Int8Array(128);
} catch(e17) {
}
try {
    new Uint16Array(10);
} catch(e21) {
}
class C25 extends Uint16Array {
    1;
}
new C25();
new C25();
new C25();
[15];
[-3,-4,4294967297,-53614,-65537,256];
[1539987874,65536,1437006703,-54415,256,4096];
