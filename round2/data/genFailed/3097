function f0() {
}
function f1() {
    return f0;
}
const v2 = [f1,f1,f1];
const v3 = [v2];
const v4 = [f1,f1,v3,v3,f0];
function f5(a6, a7) {
    const o16 = {
        ...v3,
        1073741823: f0,
        [a7](a9, a10, a11, a12) {
            f0 in a9;
            try {
                v4.findIndex(f1, a10);
            } catch(e15) {
            }
            return a10;
        },
        "c": v2,
        "g": a7,
    };
    return o16;
}
f5(v4, v2);
const v18 = f5(v4, v4);
f5(v2, v3);
const v22 = new Int32Array(128);
const v25 = new BigUint64Array(259);
new Int16Array(1677);
Object.defineProperty(v25, 1670, { enumerable: true, get: f1 });
v25[3] = Int32Array;
f0();
const v30 = v18[3598];
v22[v25] = v2;
+v30;
12 << 1956987523;
!12;
