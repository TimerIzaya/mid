function f0() {
}
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    this.a = f0;
    this.c = f0;
    this.b = f0;
}
new F1();
new F1();
const v5 = new F1();
class C9 {
    static toString(a11, a12, a13) {
        v5[10000];
        new Array(1639);
        [5.0,-5.0,-279431.42749711056,-1.4832698967394367e+308,-1000.0,-9.53506786402677e+307,-608.1599664507033,91508.85539178853,-43.589988717499295,0.0];
        [1.7976931348623157e+308,-1000000000.0,0.0];
        [-475591.3894427242,1000000.0,Infinity,0.6554546466831377,3.0];
        return f0;
    }
    2;
    #g = 536870887n;
}
new C9();
new C9();
const v23 = new C9();
const v27 = Math.sinh(536870887n);
Math.exp(v23);
const v29 = --0.0;
const v30 = v29 + v29;
Math.hypot(1073741824);
v23 >>> v23;
function F33(a35, a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a35;
}
new F33(v27, v5, v5);
const v39 = new F33(v27, v5, v5);
new F33(v30, v39, v5);
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -2147483648;
    } catch(e7) {
    }
    try {
        this.a = a6;
    } catch(e8) {
    }
    try {
        this.c = a6;
    } catch(e9) {
    }
}
new F3(363627376, 363627376);
new F3(536870887, -2147483648);
const v12 = new F3(363627376, 536870887);
try {
    v12.a = 536870889n;
} catch(e16) {
}
let v17 = 0;
do {
    65536n ** F3;
    try {
        new BigUint64Array(141);
    } catch(e22) {
    }
    try {
        new Uint32Array(4096);
    } catch(e26) {
    }
    try {
        new Int16Array(129);
    } catch(e30) {
    }
    v17++;
} while (v17 < 6)
