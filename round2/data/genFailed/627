const v0 = /h+/gsdu;
const v1 = /ga+?ab|c/yiu;
const v2 = /{(x)(x)(x)\3/gyisd;
new WeakMap();
const v5 = /6/myiv;
const v6 = /ab\b\d\bcda\Sc/su;
const v7 = /Gxa||bc/myidv;
class C8 {
    static {
        try {
            new WeakMap(v6);
        } catch(e11) {
        }
    }
    constructor(a13, a14, a15) {
        let v20 = -32828;
        !a14;
        Math.expm1(v20);
        const v24 = --v20;
        const v25 = a14 << v24;
        v24 >>> v25;
        Math.clz32(-12);
        Math.hypot(v25);
    }
}
new C8(v7, v6, v1);
let v30 = new C8(v5, v0, v7);
new C8(v2, v0, v2);
v30 /= "d";
Reflect.construct(WeakMap, [v6], WeakMap);
typeof 4294967297n === "bigint";
let v12 = 0;
do {
    %VerifyType("bigint");
    -9223372036854775808n & "bigint";
    try { ("string").padEnd(15079, "string"); } catch (e) {}
    v12++;
} while (v12 < 10)
