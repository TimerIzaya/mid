function f3() {
    return "replaceAll";
}
function f4() {
    return "repeat";
}
[-11927,11,2147483647,24527,3,3,256,127];
const v6 = [-2,5,-1,2147483648,35680,-2147483649,1073741825,-1168879621,3,256];
const v8 = ["repeat",[-536870912,-9007199254740990,4941,-14327,268435439]];
[v6,v6,v6,"toString",f3];
const v10 = ["repeat","toString",v6,"repeat"];
new Int32Array(4096);
new Uint32Array(15);
const v22 = new Uint8ClampedArray(10);
for (let [v23] of v22) {
    function F24(a26, a27, a28, a29) {
        if (!new.target) { throw 'must be called with new'; }
        this.h = Int32Array;
        this.f = a29;
    }
    new F24(4096, v23, v8, Uint32Array);
    const v31 = new F24(4096, v23, v10, v6);
    new F24(4096, 10, v6, v31);
}
const o35 = {
    "maxByteLength": 1073741823,
};
const v37 = new ArrayBuffer(6, o35);
new Uint8ClampedArray(v37);
const v3 = [-319522623,0];
[-1024,-59528,-65536,941377449,10,212214858,-4294967295,5];
const v5 = [-1723285218,-65536,177555475,3,1313278472,-9,746084808,1729704923];
function f6() {
    return v3;
}
[143349.1278420959,0.5436271584754113,927302.7397825385,-3.179877863136711,1000000.0,1000000.0,-381582.980121637,-8.578084080122142e+307,277.14966714431307];
[-8.02591534957959e+307];
[1.2018407695427708e+308,-2.8994803666152836e+307,649906.2295490075,4.0,-4.941559253974182,NaN];
v5.length;
/a??[azQc[\cz]+]/iu;
/xyz{1,32}?/idv;
/a?\c!l/sgm;
const o17 = {
    "execution": "async",
    "type": "minor",
};
gc(o17);
