new Array(7);
function f9() {
    return "m";
}
class C10 {
    #f;
    static #b;
    ["function"];
    constructor(a12, a13, a14, a15) {
        const t9 = "10";
        t9.length >>>= 7;
        for (let v16 = 0; v16 < 32; v16++) {
            const t12 = "function";
            t12["p" + v16] = v16;
        }
    }
    [f9];
    static 188;
    [Array] = "function";
}
new C10("m", 1e-15, -3.0, "function");
new C10("10", 2.0, -3.0, "m");
const v21 = new C10("10", 2.0, 2.0, "m");
let v22;
try { v22 = v21.getPrototypeOf(1e-15, "10", v21, "10", C10); } catch (e) {}
const v23 = f9();
for (let v24 = 0; v24 < 32; v24++) {
    v23["p" + v24] = v24;
}
v22?.e;
typeof "function" === "undefined";
const v0 = [242.38600265393825,-Infinity,549925.6508354463,0.8698873761628334];
[-1000000000000.0,6.929382452653382];
const v2 = [-Infinity,-Infinity,0.3202459674222521,3.656639759324346];
let v3 = 1;
try {
    new BigUint64Array(v3);
} catch(e6) {
}
let v8 = Float32Array;
try {
    new v8(0);
} catch(e10) {
}
try {
    new Int16Array(10);
} catch(e14) {
}
let v15 = [v2,v8,v2,BigUint64Array];
let v16 = [10,v3,BigUint64Array,0];
let v17 = [v0];
[v15,v17,v3,v16] = v16;
v0.length **= v3;
let v18 = v17 < 0;
try {
    v8 **= v15;
} catch(e19) {
}
v17?.[v2];
try {
    v18 ^= v15;
} catch(e21) {
}
