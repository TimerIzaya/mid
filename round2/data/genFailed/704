const v0 = [];
[2.220446049250313e-16,0.0,-2.220446049250313e-16,NaN];
[-1000000000000.0,-1.7976931348623157e+308,6.209816455488525,3.918861965936724,32.81614086566424,8.935016243839358e+307,-9.118231329412351,2.0];
[-962.4570932886727,-0.0,-1.7976931348623157e+308,2.0,-1000000000000.0,-6.724896365450097];
const v4 = /((x)(x)(x)\1*vu)/gmyidu;
/(x)(x)(x)\1/gmyisv;
/[^xyz{93}]/gdv;
new Uint16Array(10);
new Int8Array(127);
new Uint8Array(8);
function f16(a17, a18, a19) {
    const o22 = {
        "maxByteLength": 127,
    };
    const v24 = new SharedArrayBuffer(127, o22);
    new Float32Array(v24);
    return v0;
}
f16(v0, f16, v4);
try {
    new Int8Array(1857);
} catch(e3) {
}
try {
    new Float64Array(2145);
} catch(e7) {
}
try {
    new Uint16Array(1024);
} catch(e11) {
}
[-724949.1661870717,-1000000000.0,4.0,1.7976931348623157e+308,-2.220446049250313e-16,-2.0,1e-15,4.0];
const v13 = [1000000000.0,-2.0,1e-15,0.49511711335017516,1000000.0];
const v14 = [-3.0,5.0,-1.7976931348623157e+308,-1000000000000.0,-0.0,-3.0,-1000.0,-8.097319094362005e+306,0.11986268865128058];
let v15 = -2147483648n;
const v18 = [-1000.0,1.6480015640207604e+308,NaN,1.7976931348623157e+308,0.9789301719560878,1000000.0,-1e-15,-2.0,-224878.15130421612];
const v19 = [0.4237768382331253,Infinity];
[-3.0];
function f21() {
    return Uint16Array;
}
v15++;
if (-2147483649n != Int8Array) {
    let v24;
    try { v24 = new Int8Array(...Int8Array, ...v19, ...Float64Array, 1255737004n, ...v13); } catch (e) {}
    v24 + v15;
} else {
    try {
        v18.__proto__ = v14;
    } catch(e26) {
    }
}
