new Uint16Array(5);
const v11 = new BigInt64Array(3994);
const v14 = new Uint32Array(8);
with (v14) {
    length = 1073741824;
    if (1073741824 >= 1073741824) {
        v11["findLastIndex"]("findLastIndex", "findLastIndex");
    } else {
        try {
            new Uint16Array(-4, 1073741824);
        } catch(e19) {
        }
    }
}
class C3 {
    ["GgeO"];
    2;
    g = 4096;
    [4096] = 4096;
    static #e;
    static {
        let v5;
        try { v5 = this.o(4096); } catch (e) {}
        const v6 = this instanceof v5;
        let v7 = 0;
        while (v7 < 7) {
            let v10;
            try { v10 = this.ceil(4096, v6, 4096, v7, 4096); } catch (e) {}
            try { new v10(v10, v10, this, "1ZLh"); } catch (e) {}
            let v14 = 688218250;
            ++v14;
            v5--;
            4096 + 4096;
            v7++;
        }
    }
}
const v19 = new C3();
const v20 = new C3();
const v21 = new C3();
const v22 = [10];
const v23 = [13,-48274,408399270,-1,1878792659,2147483647,-8,-256,-65537,-9007199254740991];
const v24 = [-441257265,512,257,4096,9007199254740990,-4294967297,-219469090];
function F25(a27, a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a28;
    } catch(e31) {
    }
    try {
        this.h = a27;
    } catch(e32) {
    }
}
let v33 = new F25(v23, v21, v22, "1ZLh");
const v34 = new F25(v24, v33, v22, v20);
const v35 = new F25(v22, v34, v24, v22);
const v37 = [v35,[v24,v33],v33];
const v38 = [v23,v37,v20,"1ZLh"];
-v33;
Math.hypot(536870887);
const v44 = Math.round(536870887);
const v45 = --v33;
[v38,[v22,v37,v37],9,v38];
[v44,v45,v19,4096,9];
