function f6() {
    return 463300620n;
}
class C7 {
    [463300620n];
    static [f6] = -4096n;
    0;
    static m(a9, a10, a11) {
        f6();
        return -4096n;
    }
    static valueOf(a14, a15, a16) {
        f6(...a14, ..."yQ", ...a16, "p", ..."fAu0");
        a16[new.target] = "fAu0";
        const v19 = this["fAu0"];
        try { new v19(463300620n, 1000n); } catch (e) {}
        return -4096n;
    }
}
const v22 = new C7();
new C7();
const v24 = new C7();
function F25(a27, a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a29;
}
new F25(463300620n, v22, "fAu0", "yQ");
const v32 = new F25(463300620n, "p", "fAu0", "yQ");
new F25(-4096n, "yQ", "yQ", "yQ");
f6 * -4096n;
if (v32 <= f6) {
    v32[241];
    let v39 = 1.1956366676209175e+307;
    ~6;
    Math.round(6);
    ++v39;
} else {
    v24[1];
    new Uint8Array(11);
    new Uint8ClampedArray(1666);
    new Int16Array(3638);
}
try {
    new Int16Array(6);
} catch(e3) {
}
try {
    new BigUint64Array(129);
} catch(e7) {
}
try {
    new Uint8Array(1000);
} catch(e11) {
}
try {
    new Uint8Array(7);
} catch(e15) {
}
try {
    new Float64Array(1415);
} catch(e19) {
}
try {
    new Uint16Array(1095);
} catch(e23) {
}
new Date();
{
    Date.prototype;
    throw BigUint64Array;
}
