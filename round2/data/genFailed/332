const v1 = new WeakMap();
class C5 extends WeakMap {
    static #p(a7) {
        const t3 = v1[721377886];
        t3[847404.3569839923] = v1;
        return -9.020461457612948;
    }
    c = 4.0;
    constructor(a10, a11) {
        super(v1);
        v1.h += 847404.3569839923;
        [-9.020461457612948,WeakMap];
        [[this],-9.020461457612948,847404.3569839923];
    }
}
const v16 = new C5(4.0, -9.020461457612948);
new C5(847404.3569839923, 847404.3569839923);
new C5(4.0, 847404.3569839923);
[-5,9,0,1073741823,-40208];
const v20 = [536870889,512,65536,-7];
[65536,6];
function F22(a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a26;
}
const v27 = new F22(v1, 4.0, -9.020461457612948);
new F22(v27, 4.0, 847404.3569839923);
const v29 = new F22(v16, 847404.3569839923, 4.0);
v29 instanceof F22;
const v33 = 4.0 << -11062;
const v34 = -11062 << 4.0;
Math.pow(v20, v20);
const v36 = v34 % 4.0;
4.0 << -11062;
Math.sign(v36);
Math.atan2(v33, -11062);
function f6() {
    return -1.0;
}
const v7 = [-1.0,-1,-1,-1];
[650072.4497113721];
const v9 = [-8,-1.0];
const v10 = v9 <= v7;
v10 ? v9 : v7;
const v13 = v9["shift"]();
const v16 = Reflect.construct(v13, [], v13);
let v17;
try { v17 = new v13(55860, ...v7, Reflect, 55860, v16, v16); } catch (e) {}
try {
    v17 |= v10;
} catch(e18) {
}
