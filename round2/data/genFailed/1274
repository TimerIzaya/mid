function f0() {
}
/x*/myisd;
/(?<a>.)/gmyisv;
/(?:ab)?abc|def+/ydv;
const v7 = [6];
const v8 = [-39678,2147483647,268435440,-16579,1024,-4096,-1696468113,0];
[304739256];
function f10() {
    return 128n;
}
new Uint8ClampedArray(2736);
new BigInt64Array(9);
const v19 = new BigInt64Array(9);
let v21 = [v19,9];
Reflect.construct(Uint8ClampedArray, v21, f0);
try { v8.push(Uint8ClampedArray, 128n, 0.0, 9); } catch (e) {}
v21 = v7;
const v27 = v7[-5.0];
const o28 = {
    "call": f0,
    "construct": f10,
    "defineProperty": f0,
    "deleteProperty": f0,
    "getOwnPropertyDescriptor": f10,
    "getPrototypeOf": f10,
    "has": f0,
    "isExtensible": f0,
    "ownKeys": f0,
    "set": f10,
    "setPrototypeOf": f0,
};
new Proxy(v27, o28);
let v2 = 1;
const v3 = /2\x60a\w[a-zA-Z0-9]y(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10*/igyv;
const v4 = /v/i;
const v5 = /a[a-z]/iguy;
let v8 = 8.100246870818992;
class C9 {
    constructor(a11, a12, a13, a14) {
        try { a13(v5, 14); } catch (e) {}
        let v16;
        try { v16 = a12(2.0); } catch (e) {}
        const v17 = v5 ^ v16;
        d = 2.0;
        try {
            v2 >>>= v17;
        } catch(e18) {
        }
    }
    127;
    static [v2];
    static b = 14;
}
new C9(12184, v2, v8, 12184);
const v20 = new C9(v4, v3, 2.0, 12184);
new C9(v20, v20, C9, 12184);
-C9;
Math.atan(1073741824);
1073741824 >>> -1.2290664977105096e+308;
Math.min(C9);
try {
    v8 = Infinity;
} catch(e29) {
}
