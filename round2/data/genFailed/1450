const v3 = /(?:a*)+/gmyd;
const v4 = /tca[a]/myisdv;
const v5 = /ea$+/gmv;
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a8;
}
const v10 = new F6("GqE2h", "message");
const v11 = new F6("message", "GqE2h");
const v12 = new F6("message", "GqE2h");
function f13() {
    return v3;
}
const v14 = [];
Object.defineProperty(v12, v14, { configurable: true, enumerable: true, get: f13, set: f13 });
v5.a = v14;
function* f15(a16, a17) {
    const v18 = f13();
    f13();
    function F20(a22, a23, a24, a25) {
        if (!new.target) { throw 'must be called with new'; }
        this.f = a25;
        this.g = v11;
    }
    const v26 = new F20(v4, "message", a17, a17);
    new F20(v5, "reduceRight", v10, v10);
    new F20(a17, "GqE2h", v10, v11);
    yield* v18;
    return v26;
}
f15(v10, v12);
