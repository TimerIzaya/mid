function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = a6;
    this.g = a6;
    this.h = a5;
}
let v7 = new F3(-4096n, -4096n);
const v8 = new F3(2n, F3);
const v9 = new F3(2n, v8);
function f10() {
    return v9;
}
Object.defineProperty("sort", "g", { writable: true, enumerable: true, set: f10 });
let v19 = 1073741825;
v19-- % v7;
v19 >> 512;
+-398092.6435515579;
Math.atan(512);
v7++;
/[xyz{0,1}*]/dmyv;
/f1/imuy;
/t/sidgyv;
new WeakMap();
[2101306107,225580876,3,-4294967296,2];
[-4096,9,255,59687,2049797898,-938152625,-9007199254740990];
const v7 = [57967,-737680151,-586917304,3569475,-1932603973,-54393];
[2147483648,1073741823,-28597,6,-1027680664,8,536870889,-3972];
const v9 = [-2,16,64];
const v10 = [127,-21322,58925,9223372036854775807];
try {
    new Float32Array(2576);
} catch(e14) {
}
try {
    new Int16Array(8);
} catch(e18) {
}
try {
    new Int8Array(1464);
} catch(e22) {
}
[0.5893122696810412];
[-3.677182236705958,1.0];
[-1000000000.0,-1000000.0,-2.2250738585072014e-308,695.4544843795848,1.6745907051249336e+307,1.1217057918554683e+308,-2.2250738585072014e-308];
try {
    v9[v9] = Float32Array;
} catch(e26) {
}
const o27 = {
};
try {
    o27.c = Float32Array;
} catch(e28) {
}
try {
    const o29 = {
    };
    o29.c = Float32Array;
    o29.d = v10;
} catch(e30) {
}
try {
    const o31 = {
    };
    o31.c = Float32Array;
    o31.d = v10;
    o31.e = v10;
} catch(e32) {
}
try {
    const o33 = {
    };
    o33.c = Float32Array;
    o33.d = v10;
    o33.e = v7;
} catch(e34) {
}
