let v2 = 30921n;
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a6;
    this.c = a5;
    this.g = a6;
}
const v7 = new F3(v2, -2n);
const v8 = new F3(-536870912n, -536870912n);
new F3(v2, -2n);
class C13 {
    static [-1] = F3;
    static #m(a15, a16) {
        let v17;
        try { v17 = a16(F3, 19632, -3, v7, v8); } catch (e) {}
        const v18 = v8[v17];
        let v20;
        try { v20 = this["m"]("m", "m"); } catch (e) {}
        let v21;
        try { v21 = v20("m"); } catch (e) {}
        function F22(a24, a25, a26) {
            if (!new.target) { throw 'must be called with new'; }
            this.h = this;
        }
        const v27 = new F22(-3, a15, 536870889);
        new F22(536870889, v27, -3);
        new F22(536870889, v2, v18);
        return v21;
    }
}
new C13();
const v31 = new C13();
new C13();
class C33 {
    static [-536870912n] = -3;
    [-3];
    o(a35, a36, a37, a38) {
        try {
            C13.transfer(C13, F3, a37, F3);
        } catch(e40) {
        }
        return a37;
    }
    constructor(a42, a43) {
        const o44 = {
            __proto__: this,
            "e": this,
            "f": 536870889,
        };
        v2 ||= a43;
    }
}
new C33(-536870912n, -536870912n);
new C33(-536870912n, -2n);
new C33(-2n, -536870912n);
20833 || 1;
let v55;
try {
const t0 = 20833;
v55 = t0(v31, v2);
} catch (e) {}
let v56 = 0;
while (v56 < 7) {
    let [v59,v60,v61,v62] = v55;
    v56++;
}
function f0() {
}
const v1 = /B\cj\cJ\ci\cI\ck\cK(?=)s\P{sc=Greek}?/mu;
/abc|def|ghiGD\P{sc=Greek}*/sgmu;
const v3 = /[\xe2\x81\xa3]/dgyv;
for (let v13 = 0; v13 < 32; v13++) {
    v3["p" + v13] = v13;
}
let v16;
try { v16 = v1.exec(257n); } catch (e) {}
const v17 = v1[9];
try { new v16(147830887, v17, -4, -4, v17); } catch (e) {}
-65536 / 257n;
const v20 = v17;
