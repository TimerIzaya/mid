class C3 {
    static n(a5, a6) {
        super.g = -52922n;
        this[0n];
        return 0n;
    }
    7 = -4096n;
    static 7 = -1457006876n;
    [-1457006876n];
    #d = -1457006876n;
}
new C3();
new C3();
const v13 = new C3();
class C17 {
    222 = -4096n;
    constructor(a19, a20, a21) {
        const o22 = {
        };
        new Proxy(a19, o22);
    }
    static toString(a26, a27, a28, a29) {
        const v30 = this.__proto__;
        try { v30.indexOf(a26, v30, -2147483648n, a26, -1073741824n); } catch (e) {}
        return -1073741824n;
    }
}
const v35 = new C17(C3, -1457006876n, -4096n);
new C17(C3, 1073741824n, -2147483648n);
new C17(v13, -1457006876n, -2147483648n);
function f38(a39, a40, a41) {
    function f43(a44) {
        const v45 = a44?.[7];
        -1073741824n + v45;
        v45.g = v35;
    }
    this.onmessage = f43;
    const v50 = ~1021705903n;
    Math.random();
    v50 && 1021705903n;
}
const v55 = ["function","function",-1457006876n];
const o56 = {
    "arguments": v55,
    "type": "function",
};
new Worker(f38, o56);
class C3 {
    static #d;
    constructor(a5) {
        Reflect.construct(a5, [this,this,-959197.9461831502,-959197.9461831502], a5);
    }
    static {
        super.b;
        const o14 = {
        };
        try {
            new Proxy(this, o14);
        } catch(e17) {
        }
    }
}
new C3(-4294967296);
new C3(C3);
new C3(C3);
new Set();
let v23 = 1073741823;
[-2,2147483647,-9007199254740992,2147483649,-1410132591,-65536,0,594372489];
const v27 = [255,4294967295,199139986,-2147483648,-721854762];
const v28 = [9,772366100,19268606,8];
try {
    v23 = -4294967296;
} catch(e29) {
}
function f30(a31, a32) {
    v27 ^ a31;
    return Reflect.construct(Set, [a31], C3);
}
f30(v28, -939815048);
