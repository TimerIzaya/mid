function f0() {
}
function f1() {
    const o8 = {
        [f0]: f0,
        "e": f0,
        536870887: f0,
        set d(a3) {
            [a3,[this.e,f0],this];
            [this,this];
        },
        "g": f0,
        "d": f0,
    };
    return o8;
}
const v9 = f1();
const v10 = f1();
const v11 = f1();
function f12() {
    return f0;
}
class C13 extends f0 {
    static toString(a15, a16) {
        super[this];
        return a15;
    }
    static b = v10;
    n(a19, a20, a21, a22) {
        for (let v23 in a21) {
            a22.__proto__ = a19;
            257 >> 257;
            v23 ^ 257;
            let v30 = v23--;
            --v30;
            Math.atanh(-8.591639635353687e+307);
            Math.round(-8.591639635353687e+307);
            -8.591639635353687e+307 >>> v23;
        }
        return v9;
    }
}
new C13();
const v36 = new C13();
new C13();
try {
    f12();
} catch(e42) {
}
v36[-1864386347n] += C13;
[-936895223,-1554126126,-1908033011,1024,-2];
const v44 = [-11,-2147483648,1051893545,2];
[-12,25525,-128,433920691,-1851549960,14,177253700];
try {
    v44.concat(f0, v11);
} catch(e47) {
}
