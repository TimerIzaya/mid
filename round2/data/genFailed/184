class C12 {
    #c = 4n;
    constructor(a14, a15, a16, a17) {
        super[268435439];
        Math.min(-486145771);
        +0.7015236865697615;
        const v23 = ~0.7015236865697615;
        Math.tan(-876988379n);
        v23 && this;
    }
    static [-4.0];
    static 2560873820 = 532295597;
    4294967296 = 0.7015236865697615;
}
new C12(9007199254740990, 251.80247460654482, 4n, -876988379n);
const v27 = new C12(27476, -4.0, 4n, -876988379n);
const v28 = new C12(532295597, 0.7015236865697615, -876988379n, 4n);
v27[0] = v28;
v28.f;
for (let v30 = 0; v30 < 88; v30++) {
    Math.asinh(-5 - 5124);
    let v37 = v28 / -2.2250738585072014e-308;
    const v38 = ++v37;
    256 ^ v38;
    v38 || v37;
}
try {
    new Uint8Array(257);
} catch(e3) {
}
try {
    new Float64Array(7);
} catch(e7) {
}
try {
    new Float64Array(9);
} catch(e11) {
}
function F12(a14, a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a17;
    } catch(e18) {
    }
}
new F12(9, 257, 9, 9);
const v20 = new F12(7, 257, 9, 257);
const v21 = new F12(7, 257, 7, 7);
for (let [v25,v26,v27,...v28] of Float64Array) {
    try {
        v20.e = 22552;
    } catch(e29) {
    }
}
try {
    v21.length = 114;
} catch(e31) {
}
