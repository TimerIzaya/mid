function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = 61274;
    this.a = 61274;
    this.g = 61274;
}
const v3 = new F0();
new F0();
const v5 = new F0();
const v6 = /ta/misu;
const v7 = /(?<a>.)\k<a>{,}?/i;
const v8 = /y/yisd;
class C9 {
    static 536870889 = v5;
    static toString(a11, a12) {
        delete a12[this];
        let [v14,,v15] = a11;
        return v15;
    }
    n(a17, a18, a19) {
        [a17];
        [a19];
        [a17,F0,this,v8];
        v6[7];
        return this;
    }
}
let v24 = new C9();
const v25 = new C9();
const v26 = new C9();
class C27 {
    o(a29, a30, a31, a32) {
        return Reflect.construct(F0, [], C9);
    }
    7 = F0;
    #f;
    constructor(a37, a38, a39, a40) {
        v6[857876134] = v25;
        C9["toString"]("toString", v25, "toString", "toString");
    }
}
new C27(v7, v7, v8, v8);
new C27(v6, v7, v6, v8);
new C27(v6, v8, v6, v6);
try { C9(); } catch (e) {}
v24 = v26;
class C49 extends v7.constructor {
    [v3] = v5;
    d;
}
new C49();
try { C49["log10"](C27, v7, "log10", C9); } catch (e) {}
