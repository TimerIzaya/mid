class C3 {
    p(a5, a6) {
        let v8 = -886746279;
        const v9 = -Infinity;
        Math.atan(this >> v9);
        ~v9;
        v8++;
        return a6;
    }
    #e;
    d = 1.0;
}
const v14 = new C3();
const v15 = new C3();
new C3();
try {
    C3.m(1000.0, [-4.0,-278825834,1000.0,9223372036854775807,v14], -2);
} catch(e26) {
}
Object.defineProperty(v15, 1.0, { value: -278825834 });
v15.valueOf = -278825834 || 9223372036854775807;
const o30 = {
    "maxByteLength": 10,
};
const v32 = new SharedArrayBuffer(10, o30);
new Uint32Array(v32);
const v0 = /Vn[\011][xyz{1,32}?]/sy;
/Ba\sca(?!b)?/igu;
const v2 = /(?:foo)?/dmyv;
class C3 {
    #m(a5) {
        const v6 = super[this];
        try { new v6(a5, a5, v0, v6, this); } catch (e) {}
        [1.2590504090048393e+308,-284975.9689180134,-765534.0428144273,-0.0,0.044589016989183605,8.275537133791331e+307,-4.35867907507276];
        [1000000000.0,-1000000000.0,-6.263363878719357e+307,Infinity,-207.31555648294716,-121512.63124339248,244.92125833530918,-504.68074091565643];
        [-730.3588306370716,-759818.7835858306,1000000000000.0,0.0,0.5833461001633239,1000000000000.0];
        return a5;
    }
    #c = v2;
    #e = v0;
}
new C3();
new C3();
const v13 = new C3();
const v17 = v13.f;
let v18;
try { v18 = v17(); } catch (e) {}
for (const v19 of v18) {
    Object.defineProperty(v0, "d", { configurable: true, enumerable: true, value: v19 });
    try {
        new Uint16Array(235);
    } catch(e23) {
    }
    try {
        new Int16Array(8);
    } catch(e27) {
    }
    try {
        new Int16Array(2136);
    } catch(e31) {
    }
}
