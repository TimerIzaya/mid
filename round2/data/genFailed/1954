new Uint8ClampedArray(2449);
const v5 = new Int16Array(302);
const v8 = new Int8Array(255);
const v9 = [-193885727,127,1073741823,512,45613,-62020,-8,4096];
const v10 = [3,-9];
const v11 = [-8,-12,-15,1,875813417];
function f12() {
    return v11;
}
function f13() {
    return v8;
}
class C14 extends Int16Array {
    static d;
    constructor(a16, a17, a18) {
        super(v5, 302, 2449);
        a18[this];
        delete a18[Uint8ClampedArray];
    }
    toString(a22, a23) {
        [-53767,1073741823,-28830,12,10000,2,256];
        [4294967296,-9007199254740992,-59095,-536870912];
        const v26 = [-1269907118,-871516310,-9007199254740990,257,1000,46431,-536870912,-13,9];
        class C28 extends a23.constructor {
            [Int16Array];
            c = v26;
        }
        new C28();
        return v8;
    }
}
new C14(255, v10, v9);
new C14(302, v10, v11);
const v32 = new C14(255, v9, v9);
delete v9[v32];
for (let i36 = 0, i37 = 10; i36 < i37; i36++, i37--) {
    const v46 = Symbol.iterator;
    const o55 = {
        [v46]() {
            let v48 = 10;
            const o54 = {
                next() {
                    v48--;
                    const v52 = v48 == 0;
                    const o53 = {
                        "done": v52,
                        "value": v48,
                    };
                    return o53;
                },
            };
            return o54;
        },
    };
}
