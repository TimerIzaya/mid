function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.d = 9007199254740991;
}
const v3 = new F0();
const v4 = new F0();
const v5 = new F0();
class C6 extends F0 {
    static [v4];
    n(a8) {
        let v9 = 0;
        while (v9 < 9) {
            super.d <<= v9;
            new Uint8ClampedArray(2362);
            new Uint8Array(2587);
            new Uint8ClampedArray(255);
            v9++;
        }
        return a8;
    }
}
const v22 = new C6();
new C6();
const v24 = new C6();
function F28(a30, a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = F0;
    this.h = v22;
    this.f = a30;
}
new F28(-731916.0001665412, -199.38509081262202, v24);
const v34 = new F28(-731916.0001665412, Infinity, v22);
const v35 = new F28(-199.38509081262202, -199.38509081262202, v24);
const v37 = new Map();
v37.valueOf = v22;
const v38 = v22[v35];
const v39 = typeof v3;
const v41 = v39 === "undefined";
try { v38(Infinity, -731916.0001665412, "undefined", v41, v5); } catch (e) {}
const v43 = new Map(v24, v34, Infinity, Map);
try { v34.toString(v22, v43, v37, v39); } catch (e) {}
