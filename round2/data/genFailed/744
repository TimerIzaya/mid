class C3 {
    #b;
    set f(a5) {
        const o9 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o9);
    }
    static e;
    c = "-9007199254740992";
}
new C3();
const v12 = new C3();
const v13 = new C3();
const v14 = /a(\1a)R\xf0\x9f\x92\xa9?/gy;
const v15 = /a?/gmyv;
const v16 = /iS/md;
function F17(a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = v14;
    this.d = a19;
    this.c = C3;
}
const v21 = new F17(v15, C3);
new F17(v16, v21);
new F17(v14, v16);
try { v21["toString"]("in6", F17, C3, "toString"); } catch (e) {}
for (const v27 of v13.__proto__) {
    const t29 = "in6";
    const v28 = delete t29?.length;
    const o29 = {
    };
    o29.d = v28;
    const o30 = {
    };
    o30.d = v28;
    o30.c = v12;
    const o31 = {
    };
    o31.d = v28;
    o31.c = v12;
    o31.e = v28;
    const o32 = {
    };
    o32.d = v28;
    o32.c = v12;
    o32.g = v28;
}
function f0() {
    let v2 = "p";
    const o7 = {
        "f": 257,
        ["n"](a5) {
            try {
                v2 = "n";
            } catch(e6) {
            }
            return this;
        },
        "e": v2,
        "d": v2,
        __proto__: "n",
        "c": "n",
        ...v2,
        "h": 257,
        "a": v2,
    };
    return o7;
}
const v8 = f0();
const v9 = f0();
const v10 = f0();
function f11(a12) {
    const o24 = {
        "e": a12,
        "d": v8,
        ...v8,
        toString(a14) {
            try {
                super[v9] = v8;
            } catch(e15) {
            }
            let v18 = -171247047;
            v18 || v8;
            v8 & v8;
            v18++;
            Math.trunc(v8);
            Math.floor(a12);
            return a12;
        },
    };
    return o24;
}
f11(v8);
const v26 = f11(v8);
f11(v10);
function f28() {
    return v26;
}
function f35(a36) {
    return a36;
}
class C37 extends f35 {
    0 = -2147483647;
    [1073741825] = -2147483647;
}
Object.defineProperty("toString", f0, { writable: true, value: "9419" });
