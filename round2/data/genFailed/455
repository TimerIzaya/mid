const v0 = /(?:a{5,1000000}){3,1000000}/midu;
const v1 = /q(?:a*)+((ab)xyz{0,1}(?:a?)*)/mysu;
/(?:a+)*/gmisdv;
const v11 = new Uint16Array(32);
new Int8Array(4096);
const v17 = new BigInt64Array(2);
try {
    const o18 = {
    };
    new BigInt64Array(o18);
} catch(e20) {
}
try { v11.sort(-609275205n); } catch (e) {}
const v22 = v17.__proto__;
v0.source;
v1[v22] = 129n;
function f3() {
    return -536870912n;
}
const v4 = [f3,-536870912n,37006n,37006n];
const v5 = [v4,f3,f3,v4,-536870912n];
let v6 = [-536870912n,v5];
let v7 = "e";
let v9 = "1ppDV";
[59422,1073741825,1,899748556];
const v11 = [1002078342,13,268435456,512,6,1073741823];
const v12 = [268435456,-3];
class C13 extends f3 {
    static #p(a15, a16, a17) {
        super[this];
        return a15;
    }
    o(a20, a21, a22, a23) {
        return this;
    }
    constructor(a28, a29, a30, a31) {
        super();
        this >>> v6;
        const v33 = a28[3];
        Math.asin(v7);
        --v7 & (v33 - v7);
        Math.clz32(v33);
        Math.random();
        Math.random();
    }
}
new C13(v12, v5, v4, v9);
new C13(v4, v5, v4, v9);
new C13(v7, v6, v11, "xBCcc");
const v46 = [257,1573207003,-13141,-30951,-4294967296,128];
[257,10000,1073741824,2147483649];
const v48 = [65535,-2350,16517,61545,467617168,536870888,166917672,228709826,5,4096];
[v9] = v48;
if ((f3 == v46) > v12) {
    try {
        C13[1024] = v48;
    } catch(e51) {
    }
} else {
    try {
        v6 = v12;
    } catch(e52) {
    }
}
