const v6 = [NaN,5.0,12,NaN];
const v7 = [NaN,3,5.0];
[5.0,2.2250738585072014e-308];
/MW\x01/mdv;
/a+bX/sv;
const v11 = /(?<=)/msdv;
new Uint8ClampedArray(512);
new Float32Array(127);
new Int32Array(1803);
for (const v22 of v6) {
    const v23 = v7[v22];
    try { v23(12); } catch (e) {}
}
const v25 = `
    const v27 = [v25];
    Reflect.apply(v11.compile, v7, v27);
`;
eval(v25);
