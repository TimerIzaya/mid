const v2 = new Float64Array(1849);
const v5 = new BigUint64Array(16);
new BigInt64Array(6);
const v10 = new WeakSet();
v5 | 16;
v10 || 16;
Math.cos(v10);
+v5;
const v19 = [10000,v5];
Reflect.apply(v5.findIndex, v2, v19);
function f0() {
    const o8 = {
        __proto__: 0.7829828083534361,
        36: -57413,
        toString(a5) {
            try {
                super.p(0.7899446865586813);
            } catch(e7) {
            }
            return this;
        },
        "h": -57413,
        "b": 0.7899446865586813,
        "g": 0.7899446865586813,
        "e": 0.7899446865586813,
        "c": 0.7899446865586813,
        ...0.7829828083534361,
    };
    return o8;
}
f0();
const v10 = f0();
const v11 = f0();
const v12 = [v11];
[f0,v12,v10,v11];
const v14 = [v12,v12];
const v15 = [-4,-9,49435,-2];
const v16 = [10,-2147483648,6568,1792870004,-15,-695458686,-12,536870889,1,256];
const v17 = [129,-33465,913496664,-4294967296];
function F21(a23, a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v17;
    } catch(e27) {
    }
    try {
        this.g = f0;
    } catch(e28) {
    }
}
const v29 = new F21(v12, v16, v15, -34814n);
const v30 = new F21(v17, v14, v29, -34814n);
const v31 = new F21(v15, v12, v30, 129n);
Object.defineProperty(v11, -34814n, { configurable: true, enumerable: true, get: f0, set: f0 });
delete v11?.b;
Object.defineProperty(v12, "length", { configurable: true, enumerable: true, get: f0 });
try { v14.reduce(f0, 129n); } catch (e) {}
[v11,v10,v30,v11];
delete v29[1];
Object.defineProperty(v16, "a", { enumerable: true, get: f0, set: f0 });
v31 >> -1024;
Math.sqrt(1073741823);
Math.log(1073741823);
Math.pow(1710233633n, 1073741823);
Math.pow(v31, 1073741823);
1710233633n && v31;
