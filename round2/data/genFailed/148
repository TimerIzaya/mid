[-730181960,-9007199254740990,1000,-9223372036854775807];
[-2147483648,1073741823,1433469009,28646,-128,10,256,-536870912];
const v5 = [-365583819,-1508222546,1057625115];
const v8 = new Int8Array(255);
const v11 = new Uint32Array(1865);
const v14 = new Uint8Array(1566);
v11.buffer = v14;
const o15 = {
    "h": Uint32Array,
    "a": v5,
    __proto__: v8,
};
o15 * -4096n;
let v17;
try {
const t0 = -4096n;
v17 = t0();
} catch (e) {}
-Uint32Array;
try {
    v8.forEach(v17);
} catch(e20) {
}
try {
    new Uint8Array(257);
} catch(e3) {
}
try {
    new Uint8ClampedArray(6);
} catch(e7) {
}
try {
    new Int32Array(3811);
} catch(e11) {
}
let v14 = -62606;
const v17 = [[9,v14,9,-10100],9,6,[Uint8ClampedArray,3811,6,Uint8ClampedArray,v14],Uint8Array];
class C18 extends Uint8ClampedArray {
    set a(a20) {
        try {
            super.h = 257;
        } catch(e21) {
        }
    }
    set b(a23) {
        Object.defineProperty(this, Uint8Array, { configurable: true, enumerable: true, value: Uint8Array });
        const t23 = -10100;
        t23[0] = 257;
    }
    static 2;
    [9];
    static d;
}
new C18();
new C18();
new C18();
function f27(a28, a29) {
    Math.cos(3811);
    const v34 = -2.0;
    const v35 = 128 % 3811;
    ++v14;
    let v38 = v14 ** (2.0 << v35);
    ++v38;
    return v34;
}
f27(v17, 257);
