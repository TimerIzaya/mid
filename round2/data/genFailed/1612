const v0 = [1777221524,3,-65536,12,129,-2147483649,-514996179,834330227,128,3];
const v1 = [-13812,1000820696,268435441];
const v2 = [12,1073741824,-21754,-4294967297,1];
class C3 {
    static #m(a5, a6) {
        function F7(a9, a10) {
            if (!new.target) { throw 'must be called with new'; }
            this.f = a10;
            this.g = a6;
        }
        const v11 = new F7(F7, a5);
        const v12 = new F7(this, a5);
        new F7(v12, v0);
        return v11;
    }
    static valueOf(a15) {
        const v17 = [v0,v2,Reflect];
        const v18 = Reflect.construct(v1, v17, v1);
        try { a15.slice(v18); } catch (e) {}
        v17 != v18 ? v17 : v18;
        Reflect[v2];
        return v17;
    }
}
new C3();
const v24 = new C3();
const v25 = new C3();
new Array(4);
const v29 = [-6.36260481287368e+306,2.2250738585072014e-308];
const v30 = [-1000000000.0,-1000000000.0,-181446.52903611073,-1.0,-9.39955976200826e+307,1000000000.0,494050.0873683854,-Infinity,-0.0,0.3110887324886775];
[-7.288322079318612];
function F35(a37, a38, a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = 4;
}
new F35(1000, v25, v24, 1000);
new F35(1000, v2, 1000, 15);
let v43 = new F35(4, v1, v29, 15);
v43 /= C3;
let v46 = -4294967296;
Math.cbrt(v30);
Math.expm1(v46);
const v49 = v46--;
Math.cos(v30);
v46++;
v46 % v46;
9 || v49;
