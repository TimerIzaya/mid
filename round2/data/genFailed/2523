function f0() {
    const o13 = {
        m(a5) {
            function F6(a8, a9) {
                if (!new.target) { throw 'must be called with new'; }
                this.b = a9;
                this.g = this;
                this.c = 0.03984652731592675;
            }
            new F6(a5, "iterator");
            const v11 = new F6(-518290638, a5);
            new F6(F6, "iterator");
            return v11;
        },
        "c": -518290638,
    };
    return o13;
}
const v14 = f0();
const v15 = f0();
const v16 = f0();
function f17(a18) {
    const o24 = {
        get a() {
            f0();
            return v15;
        },
        __proto__: a18,
        [v14]: a18,
        "c": a18,
        "b": v14,
        [a18]: v16,
    };
    return o24;
}
const v25 = f17(v14);
f17(v15);
const v27 = f17(v16);
const v31 = [256n,v25,256n,256n,256n];
[v15];
[v25,v31,v14];
new f0();
-8n % v14;
new Set();
const v38 = new f0(v25, ...v31, ...v31, v27);
v14.c = v38;
let [,v39,v40,v41] = v31;
new BigUint64Array(127);
new BigInt64Array(64);
new Uint32Array(1);
