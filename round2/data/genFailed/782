[3.0];
[0.9690141355400275,-1.5198148140438957e+308,1.7976931348623157e+308];
[1.7976931348623157e+308,-1.0,1.0219836414810921e+308];
/[ZM(?:a?)+]/gysv;
/BG\u{12345}\u{23456}[\cz]c/ydv;
/(?:a*)*/gyisd;
const v16 = Symbol.toPrimitive;
const o23 = {
    [v16]() {
        super.g = this;
        const o21 = {
            "execution": "async",
            "type": "major",
        };
        gc(o21);
        return -1000000000.0;
    },
};
class C6 {
    static get g() {
        const o8 = {
        };
        try {
            o8.g = 255;
        } catch(e9) {
        }
        try {
            const o10 = {
            };
            o10.g = 255;
            o10.d = 10000n;
        } catch(e11) {
        }
        try {
            const o12 = {
            };
            o12.g = 255;
            o12.d = 10000n;
            o12.c = -5n;
        } catch(e13) {
        }
        try {
            const o14 = {
            };
            o14.g = 255;
            o14.d = 10000n;
            o14.c = 10;
        } catch(e15) {
        }
        return this;
    }
}
const v16 = new C6();
new C6();
new C6();
const v23 = 11 && 11;
876530083n / 84.94378672735661;
const v25 = !11;
let v26;
try {
const t0 = 5;
v26 = t0(v25, v23, 5, 876530083n);
} catch (e) {}
const v27 = 10000n * v26;
try { v16.n(11, C6, 11, -5n, v27); } catch (e) {}
