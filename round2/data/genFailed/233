const v0 = /(ab)\1/gmisdv;
/[^4\111]/gid;
const v2 = /2(?:a+){0,0}/mysv;
function f4() {
    return v0;
}
new WeakMap();
class C7 {
    static toString(a9, a10, a11) {
        h = f4;
        Object.defineProperty(a9, a9, { configurable: true, set: f4 });
        v0[a9] = a11;
        Reflect.construct(f4, [], f4);
        return v2;
    }
    n(a16, a17) {
        try {
            const o18 = {
            };
            new WeakMap(o18);
        } catch(e20) {
        }
        return WeakMap;
    }
}
const v21 = new C7();
const v22 = new C7();
new C7();
[15,-5,57711,-40597,-256,-2];
const v25 = [0,-33671,9,-28539,-6,2147483647,935394702,-2147483648];
[1073741824,1073741824,-739416504,9];
const v27 = C7[2365];
new WeakMap(v25);
for (let v30 = 0; v30 < 83; v30++) {
    function F31(a33, a34, a35) {
        if (!new.target) { throw 'must be called with new'; }
        this.g = a33;
        this.h = v30;
        this.a = v27;
    }
    new F31(v21, null, v0);
    new F31(v21, null, v0);
    new F31(v22, null, v0);
}
class C13 {
    constructor(a15, a16, a17, a18) {
        let v19;
        try { v19 = ("copyWithin").substring(-11, a15); } catch (e) {}
        v19.c %= -11;
    }
    #b = 1073741823n;
    static o(a21, a22) {
        return a21;
        return ("symbol")[1643];
    }
    6;
    static #h;
    ["copyWithin"];
    static #c;
    [1073741823n];
}
const v24 = new C13(0n, "-9223372036854775808", 1073741823n, 0n);
new C13("symbol", "symbol", -14n, 1784649125n);
const v26 = new C13(0n, "-9223372036854775808", 0n, 1073741823n);
const v30 = [,v26,6];
[-1671224857,[,C13],10,v30,v24];
let [] = v30;
