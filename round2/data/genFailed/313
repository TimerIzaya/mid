function f0() {
}
const v1 = [8,-41338,4096,-1476744764];
[-65536,-128];
const v3 = [-429281566,2157,65537,674003832,60921,-65259,-1017615146];
function f4() {
    return f0;
}
const v7 = new BigInt64Array(3085);
new Uint16Array(157);
new Float32Array(2826);
const v16 = new BigUint64Array(512);
new Uint8Array(1);
new Float32Array(1569);
v7.length;
const o24 = {
};
new Proxy(v16, o24);
function f27(a28, a29, a30, a31) {
    Object.defineProperty(v3, arguments, { writable: true, configurable: true, enumerable: true, get: f4, set: f0 });
    %VerifyType(arguments);
    new BigInt64Array(64);
    new BigUint64Array(2);
    new Uint32Array(128);
    return arguments;
}
f27(v1);
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 673833369;
    } catch(e3) {
    }
    try {
        this.b = 673833369;
    } catch(e4) {
    }
    try {
        this.f = 673833369;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
function f12(a13, a14) {
    const o22 = {
        "a": v6,
        ...v7,
        [v7]: a14,
        "c": v6,
        241: v8,
        [v6](a16, a17, a18) {
            return 22217n;
        },
    };
    return o22;
}
f12(9223372036854775807n, v7);
const v24 = f12(9223372036854775807n, v6);
f12(16n, v24);
for (let [v26,v27] of f12) {
}
try {
    v7.f = v6;
} catch(e31) {
}
for (let v32 = 0; v32 < 32; v32++) {
    v24["p" + v32] = v32;
}
