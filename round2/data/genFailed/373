const v2 = new Array(2069);
new BigUint64Array(2627);
const v11 = new Int32Array(11);
const v14 = new Int8Array(2);
v14[212] = v14;
v11.byteLength |= 9007199254740992;
const o15 = {
    "apply": Array,
    "preventExtensions": Array,
};
let v17 = new Proxy(v14, o15);
v17 = v2;
v17.length = -1374063653;
let v1 = -4294967295n;
try {
    new Uint8ClampedArray(9);
} catch(e6) {
}
try {
    new Float32Array(3);
} catch(e10) {
}
try {
    new Float32Array(2360);
} catch(e14) {
}
const v15 = [-195118.7392315903];
const v16 = [2.0,-1.2467567664929477e+308,-1e-15,-1000000000000.0,1.0,0.34166960244321076,764916.190135061,-4.621793410461391e+307,1.822620245426881e+307];
const v17 = [1.3033667383004434e+308,-1000000000.0,-8.489529028954049,1.3665004426165103e+308,-2.2250738585072014e-308,9.288260193113729,-1e-15,-5.165847521085989e+307,987.07791158393];
with (v15) {
    length = 1073741823n;
    try {
        v1 = 1073741823n;
    } catch(e18) {
    }
}
try {
const t0 = 2360;
t0(v17, 2360);
} catch (e) {}
const v21 = [2360,3];
Reflect.apply(v16.slice, v17, v21);
