class C3 {
    #b;
    static c = -15;
    toString(a5) {
        delete this[1];
        Reflect.construct(a5, ["valueOf"], a5);
        return "valueOf";
    }
    static #e;
    static {
        const o13 = {
            "maxByteLength": 1643,
        };
        const v15 = new ArrayBuffer(1, o13);
        new BigInt64Array(v15);
    }
}
let v18 = new C3();
const v19 = new C3();
new C3();
const v24 = [1729337198,-65535,536870887,-11,-15];
const v25 = [3,-2,-65536,20029,127];
const v26 = [-28553740,26715];
function f27() {
    return v24;
}
function f28(a29, a30, a31, a32) {
    const o49 = {
        3027: 9523,
        [v19]: a29,
        [v26]: -15,
        [a32]: v24,
        "a": v25,
        ...v24,
        [a32](a34, a35, a36) {
            try {
                new C3();
            } catch(e38) {
            }
            v18--;
            const v43 = !-3;
            ++v18;
            --a32;
            Math.sin(a32);
            v43 ** v18;
            Math.cbrt(a32);
            return this;
        },
    };
    return o49;
}
const v52 = f28(f28(f28(-803237380, -803237380, -15, -256), -803237380, -803237380, -256), 9523, -256, -15);
function F53(a55, a56, a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = "valueOf";
    this.e = a58;
    this.b = a58;
}
new F53(v25, -256, v24, v24);
new F53(v26, -15, v24, C3);
new F53(9523, -803237380, v19, v52);
[127];
[4294967296];
[-9,5,-4096,536870888,3,255,-37726];
