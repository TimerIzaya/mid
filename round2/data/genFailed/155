[];
function F5(a7) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a7;
    this.h = a7;
    this.a = a7;
}
const v8 = new F5("g");
new F5("g");
const v10 = new F5("9007199254740992");
const v12 = [1000000000000.0,2.220446049250313e-16];
[224653.72759423545,-1000000000000.0,-599868.6730518911,0.0,-1.7169742530276169e+308,-1000000000.0,-5.0,-7.974408467250164e+307,0.2982820480574091];
[-1000000000000.0,-652.0078527333612,274.5941234642628,-Infinity,-5.0,-1.7976931348623157e+308,-1e-15,-30.76129299397462,-1000000000000.0];
const o15 = {
};
new Proxy("undefined", o15);
let v18 = 0;
do {
    const v20 = v12[0];
    try { v8.charAt(v20, v10, false, v12); } catch (e) {}
    v18++;
} while (v18 < 8)
function f6() {
    return -2147483648n;
}
try {
    new Uint8ClampedArray(256);
} catch(e10) {
}
try {
    new Float64Array(1024);
} catch(e14) {
}
try {
    new Uint8Array(3307);
} catch(e18) {
}
let v22 = 0;
while (v22 < 3) {
    ("a")[Uint8ClampedArray];
    Object.defineProperty("toStringTag", "c", { enumerable: true, get: f6 });
    v22++;
}
Math.acosh(-9223372036854775807);
-4.0 & 24634n;
!1024;
61888 && 61888;
