new Float32Array(6);
const v11 = new BigUint64Array(10);
new BigUint64Array(1);
v11[393999] = 268435440;
%VerifyType(-1);
const v15 = [-37451,2147483647,-888653672,-12493,1333398573,7,255];
[15,7,370738612,6];
[536870888];
v15[Symbol.hasInstance];
-1 === 6 ? -1 : 6;
const v7 = new Set();
class C11 extends Set {
    [-9007199254740992n] = -9007199254740991n;
    constructor(a13, a14, a15) {
        super(a13);
        function F16(a18, a19, a20, a21) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.g = a20;
            } catch(e22) {
            }
        }
        new F16(-979668.4917361138, -9007199254740991n, -9007199254740992n, 1213889923n);
        new F16(a15, 536870888n, 536870888n, 10000n);
        new F16(-979668.4917361138, 536870888n, 536870888n, -9007199254740991n);
    }
    static #e;
    f = -9007199254740990n;
}
new C11(-2.0, -5.0, -2.0);
const v27 = new C11(v7, -2.0, -979668.4917361138);
new C11(-9007199254740992n, -5.0, -5.0);
try {
const t0 = -1.7976931348623157e+308;
t0(-1.7976931348623157e+308, -5.0, ...v7, -1.7976931348623157e+308, ...v7, -979668.4917361138);
} catch (e) {}
v7.size;
const v35 = Symbol.iterator;
v27[v35] = 914.0502445177515;
try {
    v35[9] = Set;
} catch(e36) {
}
