class C3 {
    m(a5, a6) {
        [1.6280765265037488e+308,[[this,a5],1.6280765265037488e+308],a5,a5];
        return 1.6280765265037488e+308;
    }
    constructor(a11) {
        let v12 = delete this[128];
        super[this] = 1.6280765265037488e+308;
        try { new a11(a11, 2147483649, a11, this, v12, 1.6280765265037488e+308); } catch (e) {}
        const t9 = 1.6280765265037488e+308;
        t9[3] = a11;
        --v12;
        Math.pow(a11, a11);
        Math.pow(a11, 4294967295);
    }
}
new C3(1.6280765265037488e+308);
new C3(1.6280765265037488e+308);
new C3(C3);
new Int32Array(129);
new BigInt64Array(2885);
new Uint16Array(8);
try {
    new C3(0n);
} catch(e37) {
}
[0.412233559856384,293477.8455648497,247.23079184768199,-3.0,1.7976931348623157e+308];
[-2.220446049250313e-16,3.0,0.0,-2.841303415515364e+306,-2.4049960997135056,4.0,-4.0,1000.0,3.7724249641439016];
[-246.28580886060342,299.5371176117703,-713137.4267727665,-276267.987343048,5.0];
Reflect.construct(Uint16Array, [2147483649,8], BigInt64Array);
class C3 {
    #o(a5, a6) {
        try {
            a5 += 5.0;
        } catch(e7) {
        }
        return "getFloat64";
    }
    constructor(a12, a13) {
    }
}
new C3(-624537845, -1.73424206573839e+308);
new C3(-624537845, C3);
new C3(-624537845, -624537845);
const v21 = new Map();
new Array(4);
[1000000.0,-1000000000.0,-1.7976931348623157e+308,-377498.3581534312,0.06244382610809274,107.28381847391256,-230.93618705290544,1.7584879964908097e+308];
const v26 = [1000000000000.0,-2.2250738585072014e-308,1000000.0,-1.7976931348623157e+308,759.3979446552921,113238.72012444655,-298123.2161488092];
[-1000000000000.0,4.0,5.8260517090830675,-156.03598398338295,4.0,0.8551585802174245,0.2564674932532053,1000000.0,5.0];
for (const v28 of v26) {
    const v29 = Array(-624537845);
    try {
        v29[v29] = v21;
    } catch(e30) {
    }
}
[6.418160746651842e+307];
[0.7722445156344723,1000000.0,-1000000000.0,1000.0,3.0];
[3.0,551352.7402491891,-2.0,602.6790089716733,515.7621080774261];
