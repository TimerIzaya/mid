let v4 = 3;
class C6 {
    3805;
    static c;
    valueOf(a8, a9, a10) {
        let v11;
        try { v11 = new a10(a10, this); } catch (e) {}
        for (let v12 = 0; v12 < 32; v12++) {
            v11["p" + v12] = v12;
        }
        return 6973;
    }
    static [-1240697377] = -1024;
    [-4207] = v4;
    #f = -1024;
    c = 6;
}
new C6();
const v16 = new C6();
const v17 = new C6();
function f19() {
    return undefined;
}
[10,121055890,4294967295,4,802260232];
const v21 = [-4294967295];
[455249415];
with (v21) {
    length = v17;
    v4 = 6;
    const v23 = new C6();
    v16["valueOf"](v23, ..."valueOf", ..."valueOf", v21);
    new Uint8ClampedArray(257);
    new Float64Array(167);
    new BigInt64Array(0);
}
try {
    new Uint16Array(15);
} catch(e3) {
}
try {
    new Uint8Array(128);
} catch(e7) {
}
try {
    new BigInt64Array(9);
} catch(e11) {
}
function f18(a19, a20, a21) {
    function f23(a24) {
        a20.g *= 15;
    }
    this.onmessage = f23;
    let v25;
    try { v25 = a21.getUint32(BigInt64Array, a21); } catch (e) {}
    v25 | 0.10327597359728524;
}
const v29 = [-65536n,"function",15];
const o30 = {
    "arguments": v29,
    "type": "function",
};
new Worker(f18, o30);
