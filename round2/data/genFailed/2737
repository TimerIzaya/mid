let v1 = 2;
class C3 {
    get h() {
        super.h;
        return this / v1;
    }
    #d = 54470;
    2096;
    static 204 = -11;
    constructor(a8, a9) {
        try {
            this.#d -= a9;
        } catch(e10) {
        }
        this[v1] = 54470;
    }
}
const v14 = new C3(54470, C3);
const v15 = new C3(54470, v14);
const v16 = new C3(v1, C3);
class C17 {
    m(a19, a20, a21, a22) {
        function f23(a24, a25) {
            v15[Symbol.isConcatSpreadable];
            return arguments;
        }
        f23(v15);
        return a22;
    }
    [C3];
    6 = v15;
    static 6 = v16;
    763 = v16;
}
new C17();
new C17();
const v33 = new C17();
class C37 {
    static get d() {
        super[this];
        const v40 = v1++;
        /D?/ysv;
        /[xyz]/gy;
        /(?:a+)*/gmi;
        return v40;
    }
    static toString(a45, a46) {
        v33.a /= 54470;
        C17.c;
        -11 << -11;
        return -11;
    }
    128;
}
new C37();
const v50 = new C37();
new C37();
C37[v50] = 11;
const o54 = {
    "maxByteLength": 1299,
};
const v56 = new SharedArrayBuffer(1299, o54);
new Int16Array(v56);
