const v3 = [354830.260348544,-1.7976931348623157e+308,767445.758257401,5.0,-0.0,21851.59263797896,2.220446049250313e-16,-0.0,-134.1278165757882,-1e-15];
const v4 = [-1.0,-1000.0,1.0];
[0.6487174605615119,4.0,4.009804889490425,-7.701811376340267,2.834565070787788e+306,1000000.0,7.852120436302606e+307];
[1.0,-5.912643928122576,1000.0,515.5041365882769,-830428.0771663368,-Infinity,0.27022544788721325,1e-15,3.0];
const v7 = [-1.2423927009485153e+307,0.739152753710474,6.871094003456456,-5.0,0.4792805481537794,1.6902557960309185e+308,0.0356274491801879,9.161394180030772e+307,-4.0];
[0.0,-1.7976931348623157e+308,Infinity,-19.550905623240396,2.220446049250313e-16,7.569220133670048e+307,-1000000000.0,666596.3893149507,0.9239267336024872];
let v14 = new Array(8);
Object.defineProperty(v7, 4096, { writable: true, get: Array, set: Array });
class C16 extends v3.constructor {
    255;
    static [v14] = v4;
    static 207;
}
const v17 = new C16();
v14 **= v3;
8 === v17;
try {
    new Float32Array(171);
} catch(e3) {
}
try {
    new Int16Array(2896);
} catch(e7) {
}
try {
    new Float32Array(6);
} catch(e11) {
}
const v12 = [1073741824,9,12,-39332,-19092,536870887];
[11,-1024,-4294967297,-268435456];
const v14 = [1872087742];
try {
    new Uint16Array(16);
} catch(e18) {
}
try {
    new Float64Array(1);
} catch(e22) {
}
try {
    new Int32Array(10);
} catch(e26) {
}
v14["filter"](Float32Array, v12);
let v29 = 0;
do {
    try {
        v12.with(6, 171);
    } catch(e31) {
    }
    ("filter")[238];
    v29++;
} while (v29 < 5)
