const v2 = new BigUint64Array(1);
const v5 = new Uint16Array(45);
new Uint32Array(77);
const v11 = new Array(1024);
const v15 = new BigUint64Array(v5, 1024, 1024);
async function* f19(a20, a21) {
    v2 <= a20;
    const v24 = v11[v15.byteLength];
    v15.__proto__ = Array;
    await 1024;
    yield v2;
    return v24;
}
f19(9007199254740991n, Infinity);
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 536870912;
    } catch(e3) {
    }
    try {
        this.c = 536870912;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
new F0();
const v8 = [-7.295392127424858e+307];
const v9 = [1000000000.0,NaN,-1.7976931348623157e+308];
const v10 = [-15.190174809298014,-3.0827303933405314,-1000000000.0,2.2250738585072014e-308];
class C11 extends F0 {
    static #h = v5;
    static #b = v10;
    constructor(a13, a14) {
        super();
        const v15 = delete v9?.length;
        try {
            a14[v15] = v8;
        } catch(e16) {
        }
    }
    [v10] = v5;
    static #e = v6;
}
const v17 = new C11(v6, v10);
new C11(v6, v9);
new C11(v5, v8);
const v23 = v10 > 1077472632;
var d = v6;
const v24 = v17[v5];
let v25;
try { v25 = v24(F0, v24, F0, v8); } catch (e) {}
if (v25) {
} else {
    65535 % v23;
}
