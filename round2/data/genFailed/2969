const v2 = new Uint16Array(231);
const v5 = new BigInt64Array(394);
const v8 = new BigInt64Array(128);
class C9 extends Uint16Array {
    #c = v5;
    d;
    #p(a11, a12) {
        this[Symbol.toPrimitive];
        return a12;
    }
    constructor(a17, a18, a19) {
        super(128, 231, 128);
        v8.length = 2784;
        try {
            v5.#c = 394;
        } catch(e21) {
        }
    }
}
let v22 = new C9(394, BigInt64Array, 128);
const v23 = new C9(394, BigInt64Array, 128);
const v24 = new C9(231, v23, 394);
class C26 {
    b;
    [v2] = 128;
    set f(a28) {
        try {
            new BigInt64Array(-13, 257);
        } catch(e32) {
        }
    }
    g = v8;
    static [231] = v22;
    #d = C9;
    #h;
    d;
}
new C26();
let v34 = new C26();
new C26();
C26.b;
(v22 = v24)["reverse"]();
for (let v39 = 0; v39 < 32; v39++) {
    const t43 = "reverse";
    t43["p" + v39] = v39;
}
v34 += C26;
