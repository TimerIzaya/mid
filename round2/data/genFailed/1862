const v3 = [2.220446049250313e-16,2.220446049250313e-16,1000000000000.0,0.5855833745131707];
const v4 = [2.0,62.57486375013036,-2.0,-6.989024502475045];
[-4.0,-2.0,0.0,Infinity];
const v7 = new WeakSet();
class C8 extends WeakSet {
    static [v3] = v4;
    get c() {
        new Float32Array(16);
        new Int32Array(16);
        new Int32Array(5);
        return v3;
    }
    h = WeakSet;
    #h;
}
const v19 = new C8();
const v20 = new C8();
const v21 = new C8();
new Int32Array(14);
const v27 = new Uint8ClampedArray(128);
const v30 = new Float64Array(8);
v7.__proto__ = v4;
const v31 = v7 - WeakSet;
v30.byteLength;
try { new Uint8ClampedArray(...Int32Array, 129, v21, 8, ...-416358826, ...v27); } catch (e) {}
if (v31 == v4) {
    v19 >>> -416358826;
    v4["includes"](Uint8ClampedArray);
} else {
    const v39 = [14];
    Reflect.apply(v20.add, v19, v39);
}
