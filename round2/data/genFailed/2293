function f6(a7, a8, a9, a10) {
    const o24 = {
        get d() {
            this < this;
            const v14 = Symbol.iterator;
            const o23 = {
                [v14]() {
                    let v16 = 10;
                    const o22 = {
                        next() {
                            v16--;
                            const v20 = v16 == 0;
                            const o21 = {
                                "done": v20,
                                "value": v16,
                            };
                            return o21;
                        },
                    };
                    return o22;
                },
            };
            return 65535;
        },
    };
    return o24;
}
f6(65535, 65535, -395906887n, -2n);
f6(65535, -63160, -395906887n, 10000n);
f6(65535, 65535, -395906887n, -395906887n);
new Float32Array(9);
new Float64Array(3792);
new Float32Array(1113);
const o41 = {
    valueOf() {
        new WeakSet();
        return 1113;
    },
};
const o44 = {
    "maxByteLength": 93235222,
};
const v46 = new SharedArrayBuffer(1253, o44);
new Float32Array(v46);
