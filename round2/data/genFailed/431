class C3 {
    constructor(a5) {
        let v6;
        try { v6 = new a5(this, 0.3638346429713245, this); } catch (e) {}
        const v7 = v6?.c;
        v7.valueOf = v7;
        v7.length = 0;
    }
    [4.0];
    static #h;
    e = -1000000.0;
    #a = 0.3638346429713245;
    #g;
    static 10;
}
new C3(4.0);
const v10 = new C3(4.0);
new C3(-1000000.0);
function f15() {
    return v10;
}
class C16 extends f15 {
    [4.0] = 0.6210448749046216;
    #p(a18, a19, a20, a21) {
        try { a21.getOwnPropertyDescriptor(a18); } catch (e) {}
        const v23 = /a(?=bbb|bb)c*/mys;
        /xyz{0,1}/gis;
        /\x01/mdv;
        return v23;
    }
    #e;
    static 201 = -1000000.0;
    #f;
    d;
    [v10];
}
new C16();
new C16();
new C16();
const o31 = {
    "maxByteLength": 512,
};
const v33 = new ArrayBuffer(512, o31);
const v35 = new Float32Array(v33);
v35[0];
const v0 = [5,22540,268435439,4,2147483648];
const v1 = [-601639144,-5,1660292871];
const v2 = [1694031797,1,-9007199254740990,1,-1610437233,-7,2088781426,-5,129];
class C6 {
    valueOf(a8, a9) {
        const t5 = "matchAll";
        (delete t5?.length)[Symbol.hasInstance];
        const o16 = {
            "maxByteLength": 3739,
        };
        const v18 = new SharedArrayBuffer(3739, o16);
        try {
            new Uint32Array(v18);
        } catch(e21) {
        }
        return o16;
    }
}
const v22 = new C6();
const v23 = new C6();
new C6();
class C25 extends C6 {
    toString(a27, a28, a29) {
        try {
            super[v22] = v1;
        } catch(e30) {
        }
        return v2;
    }
    static #m(a32, a33) {
        const o40 = {
            "execution": "sync",
            "type": "major",
        };
        return gc(o40);
    }
}
new C25();
const v43 = new C25();
const v44 = new C25();
const v45 = [C25,v44,v23,v1];
[v1,v23];
let v47 = [v0,v43];
const v51 = --v47;
Math.ceil(v51);
v51 && 0.5885466640942403;
const v54 = Math.log(C25);
try {
    C25[v54] = v45;
} catch(e55) {
}
