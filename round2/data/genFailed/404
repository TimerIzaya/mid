const v3 = /xyz{1,32}/myi;
const v4 = /Da(?=bbb|bb)ca[bc]d/ysdv;
const v5 = /(sV[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]*)/yisu;
function f9(a10, a11) {
    const o12 = {
        "c": -2.0,
        __proto__: a10,
        "g": -909.1344114234544,
        [-1]: a10,
        "f": a10,
        "e": a10,
        "a": v5,
        "d": 981224.8490738298,
        [v5]: v5,
        "b": 464.0036656137195,
    };
    return o12;
}
f9(v5, -909.1344114234544);
f9(v3, 981224.8490738298);
f9(v3, -1000000000000.0);
for (let [v17,v18] of v5) {
    v3.__proto__;
    let v20;
    try { v20 = v18.toString(2.0); } catch (e) {}
    v3.multiline;
    f9(v4, v20);
}
f9(v4, 2.0);
const v1 = new Set();
function f2() {
    return Set;
}
function f6(a7, a8, a9) {
    const o14 = {
        get a() {
            var g = a7;
            for (let v11 = 0; v11 < 32; v11++) {
                v1["p" + v11] = v11;
            }
            return "throw";
        },
        "g": v1,
        "b": Set,
    };
    return o14;
}
const v15 = f6("throw", "throw", "KQm");
const v16 = f6("throw", "hasInstance", "hasInstance");
const v17 = f6("throw", "hasInstance", "throw");
function F18(a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = f6;
    } catch(e22) {
    }
}
new F18("throw", v16);
new F18("KQm", Set);
const v25 = new F18("KQm", v17);
if (f6) {
    +f2;
} else {
    f6 & F18;
}
const v31 = Reflect.construct(Set, [v15], F18) >= v25;
try {
    v25.g = v31;
} catch(e32) {
}
