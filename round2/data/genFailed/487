class C3 {
    e = "symbol";
    static #n(a5, a6) {
        try { ("symbol").indexOf("symbol"); } catch (e) {}
        [4294967296,-536870912,5,-1073741824,348007712];
        [-472922723,-57612,-4294967295,-41141,512,-4096,130184678,268435456,16,526132006];
        [6,4294967297,-273558597,-59553,-909241898,129,8,-43239,6,3];
        return a5;
    }
    static #f;
    static b = "SqZGA";
}
new C3();
const v12 = new C3();
const v13 = new C3();
const v14 = [C3];
const v15 = ["symbol",v14,"SqZGA",v13,C3];
const v16 = [v14];
for (let [v17,v18,v19,v20] of v15) {
    v18 = v19;
    v18 = v12;
    C3[1073741824];
}
let v22 = 0;
while (v22 < 9) {
    const t25 = "getUTCDay";
    t25.__proto__ = "symbol";
    v16 + "symbol";
    v22++;
}
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -1;
    } catch(e3) {
    }
}
new F0();
new F0();
new F0();
[-128];
[-9223372036854775808,-256,5];
[256,1,16,-256];
let v16 = /3ft(?:ab)?a\q/sdg;
/[(?<a>.)\k<a>?]/iguy;
const v18 = /(?:a{5,1000000}){3,1000000}R/sguy;
try {
    v16 **= v18;
} catch(e19) {
}
function f20() {
    return F0;
}
new f20();
f20();
%PrepareFunctionForOptimization(f20);
f20();
f20();
%OptimizeFunctionOnNextCall(f20);
f20();
