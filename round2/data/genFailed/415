let v2 = -2n;
function f3(a4, a5) {
    const o10 = {
        "c": v2,
        "f": -6628n,
        5: a5,
        ...v2,
        set b(a7) {
            v2 = a5;
            let v8;
            try { v8 = a7(); } catch (e) {}
            v2 instanceof v8;
        },
        "h": 9007199254740992n,
    };
    return o10;
}
const v11 = f3(9007199254740992n, v2);
f3(-6628n, -6628n);
f3(v2, 9007199254740992n);
[128,9007199254740992,2147483648,257,-268435456];
[-7,10];
const v16 = [3,-53816,536870912,-44783,9223372036854775807,268435456,16,257,-256,14615];
for (let v17 = 0; v17 < 14; v17++) {
    v17 < v16;
    const v19 = v11.h;
    const o20 = {
        "apply": f3,
        "call": f3,
        "construct": f3,
        "defineProperty": f3,
        "deleteProperty": f3,
        "get": f3,
        "getPrototypeOf": f3,
        "has": f3,
        "isExtensible": f3,
        "ownKeys": f3,
        "preventExtensions": f3,
        "setPrototypeOf": f3,
    };
    new Proxy(v19, o20);
}
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -2136880296;
    } catch(e3) {
    }
    try {
        this.g = -2136880296;
    } catch(e4) {
    }
    try {
        this.c = -2136880296;
    } catch(e5) {
    }
}
new F0();
const v7 = new F0();
new F0();
[-632596.3065343077,1.5199211319062858e+308,-558.1921933069161,-1.6306573420174134e+308,21.153731499249602,-1000000.0,-484123.20528132067,0.1850496612766216,391936.8233089398,0.9038184362092914];
[-1000000000000.0,-7.409797287004447,-4.0,-477883.0821553144,0.954443544650177,-1000000000000.0,-4.0,0.3137885001737164,-1.0805339953385903e+308];
[0.052923223277957954,-1000000.0,-4.0,0.7592683380993548,1.253347496729291e+308,Infinity,1000.0];
const v12 = [8,64,1319228712,1073741825,9223372036854775807,2,43652];
const v13 = [-9007199254740992,46127];
[536870887,128,1,-28421,-944352364,-16,-9007199254740992,807501390,-20280,257];
[2.220446049250313e-16];
const v16 = [-492.0205201138228,-1000000.0,-1.7976931348623157e+308,-0.0];
[0.1626372297041142,-1.7976931348623157e+308,-3.0];
try {
    v7[v16] = v12;
} catch(e21) {
}
for (let [,v22,v23] of v13) {
    const v27 = ++v23;
    Math.cos(v27);
    +0.07571939835726127;
    0.07571939835726127 - v27;
    59475 || 59475;
}
