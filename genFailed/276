function f0() {
}
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = f0;
    } catch(e3) {
    }
    try {
        this.b = f0;
    } catch(e4) {
    }
    try {
        this.h = f0;
    } catch(e5) {
    }
}
const v6 = new F1();
const v7 = new F1();
const v8 = new F1();
const v9 = [2.220446049250313e-16,-7.181953916199937,2.220446049250313e-16,-1e-15,-4.710852498053682e+307,462.90191149960606,2.2250738585072014e-308,-177.76035184865918,-71.34227492632351];
const v10 = [-1e-15,-2.0,NaN,0.7243783905567578,-3.0,0.38758145126059873,0.8079246964433313,-4.0,-6.667929221281989,-5.0];
const v11 = [-963.062244288184,-1e-15,1e-15,-8.501056362792095,-7.906848935969705,0.2170078442333454,-3.0,-599.6678217763349,-2.220446049250313e-16];
class C12 extends f0 {
    static #valueOf(a14, a15) {
        function f16() {
            return a14;
        }
        return v6;
    }
    constructor(a18, a19) {
        super();
        [-2.0,-816.1979611816028,0.8705037179358261,6.423665436413376,-3.0,-1000000.0,-1.0,3.6917102463097073,1000.0];
        [944.1800719751577];
        [Infinity,0.13928405842770875,-8.082145303476162,403516.02497826726,1000000.0,-Infinity,-2.3553207671186875,-1.0];
    }
    static #b;
    static #d;
}
const v23 = new C12(v8, v6);
const v24 = new C12(v23, v7);
let v25 = new C12(v23, v7);
function f26(a27, a28, a29) {
    const o30 = {
        "f": v11,
        "d": a28,
        "c": a29,
        "g": a27,
        [a27]: F1,
        __proto__: C12,
        [a29]: v11,
        1024: v9,
        ...a28,
        4: v25,
        "h": v23,
        2147483647: a28,
        "a": C12,
        9: v7,
    };
    return o30;
}
const v31 = f26(v24, v8, v10);
let v32 = f26(v24, v24, v31);
const v33 = f26(v31, v24, v32);
v32 = v31;
let v34;
try { v34 = v7.getPrototypeOf(F1, F1, F1); } catch (e) {}
let v35;
try { v35 = v32.o(v23, v34, f0, f26, v24); } catch (e) {}
v6[248] = v32;
v25 = v33;
v25[v33] &= v35;
const o36 = {
};
try {
    o36.d = f26;
} catch(e37) {
}
try {
    const o38 = {
    };
    o38.d = f26;
    o38.b = F1;
} catch(e39) {
}
try {
    const o40 = {
    };
    o40.d = f26;
    o40.b = F1;
    o40.f = C12;
} catch(e41) {
}
try {
    const o42 = {
    };
    o42.d = f26;
    o42.b = F1;
    o42.a = v33;
} catch(e43) {
}
