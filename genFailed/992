function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = -1161253021;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
const v7 = [v4,v5,F0,v5,F0];
const v8 = [v7,F0,v4,v4];
const v9 = [F0,v5];
class C10 {
    set c(a12) {
        const v13 = v8 || this;
        let v14;
        try { v14 = v5.register(v6, v4, v9, v7, v4); } catch (e) {}
        Object.defineProperty(v14, v14, { writable: true, configurable: true, value: v13 });
        v8 ** v13;
    }
    11 = v6;
    static #e;
    #f;
}
new C10();
new C10();
new C10();
switch (v6) {
    case v6:
        v6.__proto__;
        break;
}
v8.length -= 1000000.0;
