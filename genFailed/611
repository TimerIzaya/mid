function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = -4n;
    } catch(e7) {
    }
    try {
        this.d = a6;
    } catch(e8) {
    }
    try {
        this.b = a6;
    } catch(e9) {
    }
}
new F3(65536n, -4n);
const v11 = new F3(65536n, 65536n);
const v12 = new F3(2n, 65536n);
const v13 = [v12,v11,65536n,F3,2n];
const v14 = [v13,v12,F3];
const v15 = [v14,v14];
try {
    v14.f = v13;
} catch(e19) {
}
function f20(a21, a22) {
    function f24(a25) {
        a25 |= a25;
    }
    this.onmessage = f24;
    const o29 = {
        "execution": "sync",
        "type": "minor",
    };
    gc(o29);
}
const v33 = [v15,Worker];
const o34 = {
    "arguments": v33,
    "type": "function",
};
new Worker(f20, o34);
