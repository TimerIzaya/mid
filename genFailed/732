function f0() {
}
const v1 = [f0,f0,f0,f0,f0];
const v2 = [v1,v1,v1,v1,v1];
const v3 = [v1,v1,v2,v2,v2];
const v6 = new Float64Array(3);
new Int32Array(5);
new BigUint64Array(256);
class C13 extends f0 {
    constructor(a15, a16, a17, a18) {
        super();
        throw BigUint64Array;
        a15[6] = a16;
        function f19() {
            return this;
        }
        a17 != f0;
    }
    e;
    p(a22, a23, a24, a25) {
        v6.byteLength ^= 5;
        delete a22?.[a23];
        const o29 = {
            "maxByteLength": 72,
        };
        const v31 = new SharedArrayBuffer(64, o29);
        new Uint8ClampedArray(v31);
        return a24;
    }
}
let v34 = new C13(3, v2, v1, v3);
new C13(3, v1, v2, v3);
new C13(3, v3, v2, v3);
let v37 = 0;
do {
    v34 -= C13;
    const o40 = {
        "maxByteLength": 1073741825,
    };
    const v42 = new ArrayBuffer(84, o40);
    new Uint32Array(v42);
    v37++;
} while (v37 < 6)
