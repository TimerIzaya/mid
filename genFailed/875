function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 9;
    } catch(e3) {
    }
    try {
        this.b = 9;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
const v7 = new F0();
function f8() {
    return v6;
}
function f12(a13, a14, a15) {
    const o39 = {
        toString(a17, a18) {
            return this;
        },
        [f8](a23, a24) {
            function f25(a26, a27) {
                'use strict';
                -479767320n >> a15;
                new Int16Array(1673);
                new Uint8ClampedArray(7);
                new Int8Array(127);
                return a23;
            }
            f25(a24, 65536n);
            return a13;
        },
    };
    return o39;
}
const v40 = f12(15n, v5, 15n);
const v41 = f12(-479767320n, v40, f8);
const v42 = f12(-479767320n, v7, v5);
function f43(a44, a45) {
    const o57 = {
        8: -479767320n,
        valueOf(a47, a48, a49, a50) {
            v41[v41];
            let v53 = -10736;
            v53--;
            v6 ** -v6;
            return v41;
        },
        9: v42,
        "e": a44,
        "g": v5,
        "d": a44,
        "b": a45,
    };
    return o57;
}
f43(v42, 15n);
const v59 = f43(v40, -479767320n);
const v60 = f43(v41, 15n);
RegExp[3696] = F0;
v41 ^ 15n;
Object.defineProperty(v6, 634972159, { enumerable: true, set: f12 });
for (const v63 of f43) {
    break;
}
try { v59.valueOf(v60, v7, f12, v7); } catch (e) {}
[v42];
let v68 = -1335327733;
Math.cosh(4096);
++v68;
Math.hypot(v68);
