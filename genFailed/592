const v2 = new Uint8ClampedArray(256);
new BigInt64Array(4);
const v8 = new Uint32Array(5);
class C9 extends Uint32Array {
    m(a11, a12) {
        try {
            v2.every(a11, v8);
        } catch(e14) {
        }
        super.toString();
        a11 = 5;
        const o18 = {
            "maxByteLength": 2147483649,
        };
        const v20 = new SharedArrayBuffer(16, o18);
        new Uint32Array(v20);
        return this;
    }
}
new C9();
new C9();
const v25 = new C9();
[348366816];
const v27 = [13,8,11,92016168,0,-2147483648,-9007199254740992];
[257];
class C29 {
    268435456;
    static #c = v25;
}
const v30 = new C29();
new C29();
new C29();
v27.length **= 256;
C9 / v30;
C9[8];
