const v2 = new Uint8ClampedArray(1);
const v5 = new Float64Array(1457);
const v8 = new Float32Array(129);
class C9 extends Float32Array {
    static #p(a11, a12, a13, a14) {
        super.buffer;
        a13 *= Float32Array;
        return Uint8ClampedArray;
    }
    h = v8;
    187;
    #valueOf(a17, a18) {
        this.byteLength;
        return a17;
    }
    static [v5] = v2;
    #a = v2;
}
new C9();
new C9();
new C9();
const v26 = new Int8Array(1);
new BigUint64Array(136);
const v32 = new Int16Array(512);
512 + v32;
Object.defineProperty(v2, BigUint64Array, { value: Int8Array });
Math.log1p(Int16Array);
-(-1000.0) || Float64Array;
Math.cosh(Int16Array);
-1000.0 % v26;
