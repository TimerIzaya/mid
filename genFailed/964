const v0 = [];
class C7 {
    static a;
    m(a9, a10, a11) {
        v0[a9 = 6n] *= 256;
        this[16] = 16;
        return a10;
    }
    static get h() {
        try {
        const t0 = 6n;
        t0(this, this, this, 10000n);
        } catch (e) {}
        function f15() {
            return f;
        }
        return 10000n;
    }
}
const v16 = new C7();
new C7();
const v18 = new C7();
v16.a **= 9223372036854775807;
try { C7["o"](2147483647n, 6n, 16, v16, v18); } catch (e) {}
let v26 = 1;
Math.ceil(16);
Math.asin(-1849968974n);
const v30 = -1849968974n || Infinity;
v26++;
Math.min(v30);
