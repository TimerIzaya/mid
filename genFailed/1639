const v4 = new Set();
function f5() {
    return Set;
}
function f6(a7, a8, a9, a10) {
    const o30 = {
        "a": Set,
        toString(a12, a13) {
            return "-100661422";
        },
        "f": a9,
        "c": a7,
        m(a18, a19, a20) {
            new Int16Array(36);
            new Int32Array(5);
            new Float32Array(257);
            return "-100661422";
        },
    };
    return o30;
}
f6(Set, "-100661422", "flatMap", "-100661422");
const v32 = f6("-100661422", "flatMap", "-100661422", "-100661422");
const v33 = f6("flatMap", "stack", "stack", "-100661422");
class C34 {
    constructor(a36, a37, a38, a39) {
        a39[1073741825] = Set;
        class C40 extends Set {
            #c = v4;
            static d;
            [f6] = v32;
        }
        new C40();
        new C40();
        new C40();
    }
    64;
    [Set] = f5;
    10;
    e = Set;
}
new C34("flatMap", v33, v32, "-100661422");
new C34("flatMap", v32, v32, "-100661422");
new C34("-100661422", v32, v32, "stack");
new Uint8ClampedArray(1000);
new Int32Array(7);
new Uint8Array(3600);
let v56 = 0;
while (v56 < 9) {
    for (let v59 = 0; v59 < 100; v59++) {
        f5();
    }
    v56++;
}
