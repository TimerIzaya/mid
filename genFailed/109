const v2 = -Infinity;
const v3 = [672.4026829121694,v2,672.4026829121694];
const v4 = [672.4026829121694,672.4026829121694,1e-15,v3,v3];
const v5 = [672.4026829121694,v3];
function f6() {
    return v5;
}
class C7 extends f6 {
    constructor(a9, a10) {
        super();
        a9[v3];
        const v12 = v3.constructor;
        class C13 extends v12 {
            128;
            f = v12;
        }
        new C13();
    }
    static #a = v3;
    #d;
    f = 1e-15;
    6;
}
new C7(v4, 672.4026829121694);
const v16 = new C7(v5, v2);
new C7(v4, 1e-15);
const v20 = new Uint8ClampedArray(257);
new Int16Array(96);
new Int16Array(6);
v16.f /= 672.4026829121694;
try {
    f6();
    %PrepareFunctionForOptimization(f6);
    f6();
    f6();
    %OptimizeFunctionOnNextCall(f6);
    f6();
} catch(e31) {
    new BigInt64Array(0);
    new Int16Array(1);
    new BigUint64Array(129);
} finally {
    try { v5.filter(f6, v20); } catch (e) {}
}
