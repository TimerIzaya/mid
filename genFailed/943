const v1 = new WeakSet();
class C2 extends WeakSet {
    0;
    constructor(a4) {
        super(v1);
        this[v1];
        function F6(a8) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = v1;
            } catch(e9) {
            }
            try {
                this.f = a4;
            } catch(e10) {
            }
            try {
                this.g = v1;
            } catch(e11) {
            }
        }
        const v12 = new F6(WeakSet);
        new F6(v12);
        new F6(WeakSet);
    }
}
const v15 = new C2(C2);
const v16 = new C2(WeakSet);
let v17 = new C2(v16);
class C18 extends C2 {
    #c = v17;
    f;
    constructor(a20, a21, a22) {
        super(a20);
    }
    static p(a27, a28) {
        v17 = v15;
        class C29 {
            3411584953;
            static [C2] = WeakSet;
        }
        new C29();
        new C29();
        const v32 = new C29();
        return v32;
    }
}
new C18(C2, v17, v17);
const v34 = new C18(v15, v1, v15);
new C18(v34, v15, v34);
[268435440,1024,-268435456,-9223372036854775808,-128,4096];
[65535,33884,-4,-4294967295,350794265];
const v38 = [65536,1024,268435440];
let v39 = 0;
do {
    const v40 = v38.length;
    Math.asinh(1073741824);
    Math.hypot(129);
    129 % v40;
    Math.asin(1073741824);
    v39++;
} while (v39 < 8)
