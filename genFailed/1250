const v2 = new Uint8ClampedArray(1522);
new Int8Array(214);
const v8 = new Float32Array(64);
class C12 extends Int8Array {
    static {
        const v17 = super.fill(128, -9223372036854775808);
        const v18 = v17 >>> v17;
        v17 && v2;
        v18 === 214 ? v18 : 214;
    }
    static n(a23, a24) {
        try {
            new Int8Array(1000);
        } catch(e27) {
        }
        return Uint8ClampedArray;
    }
}
const v28 = new C12();
new C12();
new C12();
function F31(a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 0.11953491147874318;
    } catch(e35) {
    }
}
new F31(v28, 64);
new F31(v8, 64);
new F31(Int8Array, 64);
0.11953491147874318 && -2.220446049250313e-16;
