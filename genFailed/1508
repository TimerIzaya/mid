function f0() {
    const o13 = {
        "b": 165672.24499215605,
        o(a5, a6) {
            let v7;
            try { v7 = new a6(this); } catch (e) {}
            function f8(a9, a10) {
                this / 4.799340661724326;
                return v7;
            }
            f8(v7, 165672.24499215605);
            return 165672.24499215605;
        },
        "a": "0KF",
        "f": 4.799340661724326,
        ..."0KF",
        ..."0KF",
    };
    return o13;
}
const v14 = f0();
const v15 = f0();
f0();
function f17() {
    return v14;
}
new Set();
new Uint16Array(1);
const v28 = new Uint8ClampedArray(950);
new Uint8ClampedArray(1024);
async function f32(a33, a34) {
    await 1024;
    return f0;
}
f32(3n, v15);
Object.defineProperty(v28, 16, { writable: true, configurable: true, enumerable: true, get: f0 });
