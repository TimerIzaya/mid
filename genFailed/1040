function f0() {
    const o14 = {
        __proto__: "object",
        n(a5, a6) {
            switch (this) {
                default:
                    const v9 = 4096 * 4096;
                    Math.expm1(a5);
                    Math.asinh(a5);
                    Math.imul(a5, v9);
                    v9 << v9;
                    break;
            }
            return a6;
        },
    };
    return o14;
}
const v15 = f0();
const v16 = f0();
const v17 = f0();
class C18 extends f0 {
    constructor(a20, a21) {
        super();
        v17 instanceof a21;
    }
    #p(a24, a25) {
        try {
            new f0();
        } catch(e27) {
        }
        return v16;
    }
}
const v28 = new C18(v15, f0);
const v29 = new C18(v16, v28);
const v30 = new C18(v29, v28);
const v33 = new BigInt64Array(16);
new Int32Array(1024);
const v39 = new Int32Array(186);
v39 instanceof C18;
function F41(a43, a44, a45) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a45;
    } catch(e46) {
    }
    try {
        this.e = v33;
    } catch(e47) {
    }
    try {
        this.g = a45;
    } catch(e48) {
    }
}
new F41(1024, 16, v15);
new F41(16, v33, v16);
new F41(186, Int32Array, v30);
