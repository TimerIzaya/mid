const v2 = new Uint32Array(598);
new Uint32Array(1024);
const v8 = new Int16Array(1000);
class C9 extends Int16Array {
    #f = 598;
    static #c = 598;
    #a = 1000;
    static #p(a11, a12, a13, a14) {
        try {
            this.fuck("byteOffset", /(ab)/gvdsy, undefined);
        } catch(e19) {
        }
        return a14;
    }
    static #e;
}
new C9();
new C9();
new C9();
[-285289.4602542977,-1000000000000.0,4.346429092250918e+307];
[1e-15,935.5366918893146,-6.812580123770111,9.959625223016985,-7.110353030441127e+307,791.1049004916852,0.0];
[-176.21575997141338,-1000000000000.0,518.7847692963537,-2.220446049250313e-16,1e-15,0.27935767404358536];
let v26 = e;
new C9();
if (v26) {
    v26 |= Uint32Array;
} else {
    let v28;
    try { v28 = v26(v8, Uint32Array, Int16Array, Int16Array); } catch (e) {}
    try { v2.sort(v28); } catch (e) {}
}
