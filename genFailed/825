const v5 = new BigInt64Array(37);
new Uint16Array(3);
new Float64Array(127);
class C12 extends Float64Array {
    static #b;
    g;
    4;
    constructor(a14, a15, a16) {
        super(a15, -8);
        typeof 3 === "bigint";
        Math.cos(a16);
        Math.asin(-25573);
        (-25573) ** -1288857875;
        +-25573;
        Math.expm1(a16);
    }
}
const v28 = new C12(v5, -2147483648, 3);
new C12(-2147483648, -8, 127);
new C12(v28, -8, 3);
const v31 = [-976.8921233881063,669551.1124099572,-1000000.0];
[-2.0,1.0,1e-15];
let v33 = [1.5327396498082552e+308,224.6470997061856,1.7976931348623157e+308,-7.776240211872669,-587.72550105135,2.0];
const v34 = --v33;
const v35 = v5[-8];
let v36 = 0;
do {
    let v37;
    try { v37 = v35(v31, v35, v5, v28); } catch (e) {}
    try { v37(...v5, WeakMap, v37, v34, v37, WeakMap); } catch (e) {}
    v36++;
} while (v36 < 1)
