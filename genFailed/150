const v0 = [];
const v1 = /[(x)(x)(x)\3]/gvs;
const v2 = /xyz{0,1}?/uims;
const v3 = /j(?:a?)?/gvdms;
const v4 = [1.0,-1000.0];
const v5 = [1.460725062468523e+308,-5.0,2.2250738585072014e-308,1000000000000.0,629.0131106708739,9.685327367804891,-647.8402298520521,2.2250738585072014e-308];
const v6 = [0.00046208852596074657,2.0,1.0,-2.138365705843772,1.0,-1.6407089519478599e+308,-312.3836648869926,-4.0,242611.62632370368];
function F7(a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a11;
    } catch(e12) {
    }
}
const v13 = new F7(v3, v1, v4);
const v14 = new F7(v1, v2, v5);
new F7(v1, v3, v5);
const v19 = [10000,v6];
[v19,v13];
const v21 = [v19,v14,v4];
function f22(a23, a24, a25) {
    function f27(a28) {
        %VerifyType(v3);
    }
    this.onmessage = f27;
    v1[f27] = v0;
    v21 & v1;
}
const v33 = [F7,-1902361112,"function"];
const o34 = {
    "arguments": v33,
    "type": "function",
};
new Worker(f22, o34);
