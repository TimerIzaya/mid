const v3 = [3.0,-447.37834994149716,-1.0,1000000000000.0,1.1815940049326123e+308,-0.0,3.6813514002004677,1.342321708011244e+308];
const v4 = [-886021.6266723542,4.0];
const v5 = [-2.220446049250313e-16,-0.0,0.06196568991752094,-470.8666097128422,-629.5412767909407,0.08693849263035613];
let v6 = true;
const v8 = new WeakSet();
function F9(a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a12;
    } catch(e14) {
    }
    try {
        this.h = a11;
    } catch(e15) {
    }
}
const v16 = new F9(WeakSet, F9, v8);
const v17 = new F9(v5, v3, v16);
let v18 = new F9(v17, v16, v5);
class C19 extends WeakSet {
    constructor(a21, a22) {
        super(a21);
        v18 = this;
        this["has"](v6);
        v6 &&= v6;
        v5[Symbol.iterator];
    }
    static set f(a29) {
        try {
            const v30 = /k\xe2\x81\xa3q*/umsy;
            this.fuck(v30, this, v30);
        } catch(e32) {
        }
    }
}
new C19(v16, 8);
const v34 = new C19(v16, 2139656307);
const v35 = new C19(v17, 8);
class C37 extends v17.constructor {
    static [v4] = F9;
    1073741824 = WeakSet;
    static #f = v34;
}
const v38 = new C37();
let v39;
try { v39 = new WeakSet(v38, v17, ...v38, v35); } catch (e) {}
try { new v39(v16); } catch (e) {}
v34[-2];
