function f0() {
}
class C1 {
    static #p() {
        +this;
        return this.c;
    }
    set e(a6) {
        let {"c":v7,...v8} = a6;
        delete v7?.[this];
    }
    3131712850 = f0;
}
const v10 = new C1();
const v11 = new C1();
const v12 = new C1();
function F13(a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a16;
    } catch(e17) {
    }
    try {
        this.h = a16;
    } catch(e18) {
    }
    try {
        this.b = a16;
    } catch(e19) {
    }
}
const v20 = new F13(v10, v10);
const v21 = new F13(v10, v12);
const v22 = new F13(v20, v21);
/o/gvimsy;
/(?:a+)+/gvmsy;
/a(?!bbb|bb)c/gm;
Object.defineProperty(v12, F13, { writable: true, enumerable: true, get: f0, set: f0 });
try {
    f0();
} catch(e27) {
}
v22 < v21;
try {
    v11.e = v12;
} catch(e29) {
}
