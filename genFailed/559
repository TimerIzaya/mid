function f3(a4) {
    const o10 = {
        [a4](a6) {
            super[a4] = a6;
            try {
                this.fuck([a4,a6,this,-42972n,9n], a6);
            } catch(e9) {
            }
            return a6;
        },
        [-42972n]: 9n,
        "c": 1073741824n,
        128: 1073741824n,
    };
    return o10;
}
f3(1073741824n);
f3(1073741824n);
const v13 = f3(-42972n);
new BigUint64Array(4);
new Int16Array(9);
const v22 = new Uint8ClampedArray(128);
try { v13.n(128, v22); } catch (e) {}
let v24 = 0;
do {
    128 ** -42972n;
    v24++;
} while (v24 < 8)
const o31 = {
    "maxByteLength": 512,
};
const v33 = new ArrayBuffer(8, o31);
new Uint32Array(v33);
