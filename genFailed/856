function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 17685;
    } catch(e3) {
    }
    try {
        this.f = 17685;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
let v7 = new F0();
function f8(a9, a10) {
    const o14 = {
        ...a10,
        56: v7,
        "d": v7,
        "h": v7,
        [F0]: F0,
        get e() {
            a10 = this;
            this.h;
            try {
                a10.d = v5;
            } catch(e13) {
            }
            return a9;
        },
    };
    return o14;
}
const v15 = f8(v7, v7);
const v16 = f8(v6, v7);
f8(v7, v16);
function f18(a19, a20) {
    const o26 = {
        "f": v15,
        "a": F0,
        [v5](a22, a23) {
            Object.defineProperty(v16, "g", { get: f8 });
            --v7;
            return f8;
        },
        "b": a19,
        __proto__: v16,
        "g": a20,
        "d": a20,
        [a19]: F0,
        "e": a19,
    };
    return o26;
}
f18(f18(f18(v15, v7), v6), v6);
[-9223372036854775808];
[16,-115448697,65537,-191755549];
[-536870912,2147483649,65535,9223372036854775807,-9007199254740991,-36045,-55857,-14];
const v33 = `
    v16[1024] = v33;
    delete v6[1];
`;
eval(v33);
const o39 = {
    "maxByteLength": 283365312,
};
const v41 = new ArrayBuffer(1, o39);
new Float64Array(v41);
