const v0 = [];
[1.0,2.220446049250313e-16];
[1.7976931348623157e+308,971646.74916382,0.7657270942629929,-4.0,-1.7976931348623157e+308,160.39251411312716,-2.2250738585072014e-308];
const v3 = [-1.4513036454964261e+307,1000000000000.0,1.3223400587655553e+308,1000.0];
const v4 = [64,19254,4294967297,4,36942];
const v5 = [-1880280798,-65536,9007199254740991,4096,268435439,18042,7,16];
const v6 = [-19394,37749];
class C7 {
    constructor(a9, a10, a11) {
        const v13 = new WeakMap();
        v13 + v13;
    }
    static {
    }
    #e;
}
new C7(v3, v5, C7);
const v23 = new C7(v3, v4, v3);
const v24 = new C7(v23, v0, v6);
let v26 = -285391322n;
`h`;
C7[0] = v23;
try { v24.valueOf(12n, v23, v24); } catch (e) {}
let v34 = 5;
const v36 = v34++;
v34 >>> v34;
v26++;
v36 & v26;
