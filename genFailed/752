new Uint32Array(2123);
const v5 = new Int32Array(128);
const v8 = new BigUint64Array(51);
function f9() {
    return 51;
}
class C10 extends f9 {
    static b;
    constructor(a12, a13, a14) {
        super();
        for (let v15 = 0; v15 < 32; v15++) {
            this["p" + v15] = v15;
        }
    }
    #c = Int32Array;
    f = Int32Array;
    static 2967 = v5;
}
const v18 = new C10(v5, v8, 2123);
new C10(Uint32Array, v5, 51);
new C10(51, v18, 128);
[1.7976931348623157e+308];
[-1000000.0,0.22820261240620665,5.0,-1000.0,2.2250738585072014e-308,-Infinity,-1000.0,-3.0,-1.0];
if (([0.9091618487351417])[v8] < 128) {
    try {
        new f9();
    } catch(e27) {
    }
} else {
    const o30 = {
        "maxByteLength": 2,
    };
    const v32 = new SharedArrayBuffer(2, o30);
    new Int32Array(v32);
}
