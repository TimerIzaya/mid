const v3 = [4294967295n,-1073741824n,4294967295n];
const v4 = [4294967295n,v3,v3,10n];
const v5 = [10n];
class C6 {
    [-1073741824n];
    static #a;
    constructor(a8, a9, a10, a11) {
        delete v4?.length * a8;
    }
    p(a16, a17, a18) {
        try {
            this.b = a18;
        } catch(e19) {
        }
        return 10n;
    }
}
const v20 = new C6(-1073741824n, C6, 10n, 4294967295n);
new C6(10n, C6, -1073741824n, 10n);
const v22 = new C6(4294967295n, 10n, 4294967295n, 4294967295n);
new BigUint64Array(2962);
new Float32Array(1058);
new Uint8ClampedArray(2927);
d = v22;
4294967295n & BigUint64Array;
const v34 = [v4];
Reflect.apply(v5.filter, v20, v34);
try {
    new C6(-1073741824n, "sqrt", 16n, 16n);
} catch(e40) {
}
