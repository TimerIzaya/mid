function F4(a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a6;
    } catch(e7) {
    }
}
const v8 = new F4("b");
const v9 = new F4("-19438");
const v10 = new F4("-19438");
class C11 extends F4 {
    get d() {
        const t12 = "string";
        t12["string"] = "-19438";
        Math.log10(10000);
        Math.imul("string", "string" & this);
        Math.exp(10000);
        Math.log10(5.0);
        return "string";
    }
    4 = "-19438";
    2147483647;
    static #c = v8;
}
new C11();
new C11();
new C11();
new WeakSet();
function f26(a27, a28) {
    const o36 = {
        set b(a30) {
            a27 * a28;
            [,a30,a30,C11] = "-19438";
            ("-19438").length;
            a27 = 1073741825n;
        },
        129: a28,
        "c": "string",
        "a": a28,
        "f": a27,
        "h": "string",
        ..."b",
    };
    return o36;
}
let v37 = f26(v8, F4);
f26(v37, v37);
f26(F4, "string");
v9 || "-19438";
v37 = v10;
[-64670,-7409,65536,-12,63334];
[268435440,4096,-65535,-34017,-27923,-128,268435441];
[7,-2147483649,58902,2127463841,257];
const o46 = {
    "maxByteLength": 65535,
};
const v48 = new ArrayBuffer(9, o46);
new Int16Array(v48);
