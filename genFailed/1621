function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -10;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
new F0();
class C7 {
    #toString(a9, a10) {
        let v11 = a10 || F0;
        v4.f;
        let v15 = 0;
        Math.log10(37207);
        const v18 = v11 ^ v11;
        v11++;
        a9 ** v15;
        ++v11;
        const v22 = --v15;
        Math.sign(v18);
        return v22;
    }
}
const v24 = new C7();
const v25 = new C7();
const v26 = new C7();
function f30() {
    return C7;
}
function f31(a32, a33, a34, a35) {
    const o49 = {
        "f": v5,
        p(a37, a38, a39, a40) {
            const v41 = super[a39];
            try { a38.assign(-8.101852613401245, this, v24, a38, this); } catch (e) {}
            return v41;
        },
        "h": -1000000000000.0,
        set e(a44) {
            try { a44(a34, v4, 840636.8039949678, a35); } catch (e) {}
        },
        ...a35,
    };
    return o49;
}
const v51 = f31(f31(v5, -8.101852613401245, v26, v4), -8.101852613401245, v25, v26);
let v52 = f31(v51, -1000000000000.0, v51, v4);
class C53 extends f30 {
    g = f30;
    static 5 = F0;
}
const v54 = new C53();
new C53();
new C53();
let {"d":v57,"f":v58,} = v5;
({"g":v52,} = v54);
throw v57;
