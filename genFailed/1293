const v0 = /DUa/gvms;
const v1 = /sa\nb\bc+/vdmsy;
const v2 = /[\d-z]/s;
const v4 = new WeakMap();
class C5 extends WeakMap {
    static n(a7) {
        typeof a7 === "symbol";
        return WeakMap;
    }
    constructor(a12) {
        super(v1);
        [-1024,5,1020753623,1261664298,9223372036854775807];
        [6,23630,32118,-9223372036854775807,-503245737,686703693,45787,-5,7,1073741824];
        [-8,268435439,-130125561,2147483648];
        v0[Symbol.asyncIterator] = v1;
    }
}
const v18 = new C5(v0);
const v19 = new C5(v1);
const v20 = new C5(v0);
const v21 = [v0,v20,v18,v20];
[v1,v19];
const v23 = [v19,v4,v19,v2];
new Uint16Array(1024);
const v29 = new Uint32Array(865);
const v32 = new Uint16Array(4);
v2.exec(...v32, ...v29, ...v32, 865, ...v23);
/DUd4t/v;
/C[]*/udis;
/\c~/ds;
function f37(a38) {
    function f40(a41) {
        this ^ a41;
        v23[Symbol.replace];
    }
    this.onmessage = f40;
    f40(v21);
    %PrepareFunctionForOptimization(f40);
    f40(v21);
    f40(v21);
    %OptimizeMaglevOnNextCall(f40);
    f40(v21);
}
const v52 = [v0];
const o53 = {
    "arguments": v52,
    "type": "function",
};
new Worker(f37, o53);
