[268435439,1872433864,-6,2147483648,-9007199254740992,1024,-8,-29566,257];
const v1 = [-1,-538417030,-15,1492595833,1];
let v2 = [2147483647,-9223372036854775807,268435440];
class C3 {
    m(a5, a6) {
        a5 >>= v2;
        return v1 ** this;
    }
    valueOf(a9, a10) {
        for (let v11 = 0; v11 < 23; v11++) {
            Reflect.construct(this, [this,v11,Reflect], a9);
        }
        return v1;
    }
}
const v15 = new C3();
const v16 = new C3();
let v17 = new C3();
function f18() {
    return v2;
}
[[v16,v15],v2,v2];
[v15,f18,v16];
const v24 = --v17;
let v25 = -v17;
Math.floor(v24);
Math.sin(v25);
v2--;
v25++;
