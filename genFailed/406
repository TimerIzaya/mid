const v2 = new Array(534);
function f3(a4, a5) {
    const o14 = {
        __proto__: v2,
        "b": 534,
        1: v2,
        "d": Array,
        set f(a7) {
            const v8 = this >= this;
            if (v8) {
                /\u0060RQ\x60E(?:a+)+/vdimy;
                /(a\1)/udim;
                /\xf0\x9f\x92\xa9/gvim;
            } else {
                this || v8;
            }
        },
    };
    return o14;
}
const v15 = f3(534, Array);
const v16 = f3(v15, f3);
[f3(v16, f3),f3,v15];
[v2,534];
const v20 = [v2,v16,v2];
class C21 {
    get f() {
        [46185,-4294967296];
        [14,-1024,129,-67748613,42273,-56858,857737518,10000,-9007199254740991];
        [51765,-406224024,-1789822619,10000,14716,-193244019,4294967295,12];
        for (let v26 = 0; v26 < 32; v26++) {
            v20["p" + v26] = v26;
        }
        return v16;
    }
    d = v15;
    static b = f3;
    [Array];
    #d;
}
const v29 = new C21();
new C21();
new C21();
const o37 = {
    "maxByteLength": 1000,
};
const v39 = new ArrayBuffer(13, o37);
new Float32Array(v39);
1000 != v29;
