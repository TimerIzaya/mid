new BigUint64Array(5);
new Uint32Array(187);
const v8 = new BigInt64Array(4080);
class C9 extends BigUint64Array {
    static b;
    2;
    constructor(a11, a12, a13) {
        super(v8, 5, a13);
        try {
            this.valueOf = a11;
        } catch(e14) {
        }
    }
    static #f = BigUint64Array;
    8;
    5;
    static 2147483648;
    2831134841;
    c;
}
const v15 = new C9(4080, 4080, 4080);
const v16 = new C9(5, 187, 187);
const v17 = new C9(4080, 5, 4080);
function F18(a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a21;
    } catch(e22) {
    }
    try {
        this.e = v16;
    } catch(e23) {
    }
}
const v24 = new F18(v15, v15);
const v25 = new F18(v17, v17);
new F18(v16, v16);
C9.b;
let v28 = b;
try { v28(C9, v28); } catch (e) {}
v25 && BigUint64Array;
v28 *= 5;
let v31 = 0;
do {
    v24[4080];
    v31++;
} while (v31 < 5)
