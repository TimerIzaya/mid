const v3 = /a\nb\bc/vi;
let v4 = /[Ba*b|c+]/vdmy;
/Qt(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/gudms;
class C6 {
    static toString(a8, a9, a10, a11) {
        v4 ||= a9;
        new Uint16Array(5);
        new Int16Array(1);
        new Float32Array(128);
        return a11;
    }
    [-1.1701557281551462] = v3;
}
const v21 = new C6();
new C6();
const v23 = new C6();
const v25 = new WeakSet();
class C26 extends C6 {
    valueOf(a28, a29) {
        super[C6] = -1.1701557281551462;
        try {
            new C6();
        } catch(e31) {
        }
        return a29;
    }
    static #e = v23;
    static get d() {
        let v33 = 0;
        do {
            try { this(C6); } catch (e) {}
            new WeakSet(-1.1701557281551462, v4, v4, v21, this);
            v33++;
        } while (v33 < 2)
        return -1.1701557281551462;
    }
}
new C26();
new C26();
new C26();
try { v25.add(Uint16Array); } catch (e) {}
function f44(a45, a46) {
    %VerifyType(a45);
    Math.atanh(a46);
    Math.tan(a46);
    536870887 - a46;
    const v53 = ~a46;
    Math.hypot(v53);
    Math.sqrt(v53);
    v53 & a46;
}
new Promise(f44);
