const v0 = [1.1042271411933946,-4.0,1.6085035869587454];
[2.220446049250313e-16,-153.00056501804636,1.0078899940850666e+308,0.0,-7.345361616484858e+307,-6.659333680811653,Infinity,-6.999279563636832e+307];
[-7.885070268908678,-Infinity,1.0,-4.0,-1e-15,-728500.5813632401,0.7806337076156776];
const v3 = [-714834.3998601721,1000.0,4.327600619645551e+306,-7.840249691334362e+307];
const v4 = [2.2250738585072014e-308,-6.833591219698904e+307];
const v5 = [4.0,-9.907628441813056];
function f7() {
    return v0;
}
class C11 {
    n(a13, a14, a15, a16) {
        function f17(a18) {
            return a16;
        }
        class C19 extends f17 {
            static g = f7;
            128 = f17;
        }
        return v3;
    }
    10 = v4;
    [v0] = v4;
    [v3];
}
new C11();
const v21 = new C11();
new C11();
Object.defineProperty(v0, "e", { writable: true, enumerable: true, set: f7 });
for (const v23 in v21) {
    v5[Symbol.isConcatSpreadable] = -1.7976931348623157e+308;
    v21 != v23 ? v21 : v23;
}
f7();
const v30 = Symbol.toStringTag;
v5[v30] = v30;
