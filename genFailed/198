const v5 = new BigUint64Array(64);
const v8 = new BigInt64Array(153);
new Uint32Array(125);
class C12 extends Uint32Array {
    o(a14, a15) {
        let [v16,...v17] = this;
        Math.atan2(Uint32Array, BigUint64Array);
        const v22 = Math.cbrt(BigUint64Array);
        let v23 = Uint32Array / Uint32Array;
        Math.min(Uint32Array);
        --v23;
        ~-6;
        Math.ceil(Uint32Array);
        return v22;
    }
}
new C12();
new C12();
const v30 = new C12();
const v32 = [C12,125];
const v34 = Reflect.apply(v30.fill, v5, v32);
%VerifyType(v8);
C12[3];
const v36 = v8 | "eblp";
let v37 = v32[153];
new BigUint64Array(v34, 153, v37);
v37 = v36;
