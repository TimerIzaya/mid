function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 2147483647;
    } catch(e3) {
    }
    try {
        this.h = 2147483647;
    } catch(e4) {
    }
}
new F0();
const v6 = new F0();
new F0();
const v8 = [1000000.0,0.26633920628277463,0.38332743719110507,1000.0,-1000000000000.0,-6.216604973032139,0.6446825064369566];
const v9 = [-2.220446049250313e-16,-144910.47687417886,-2.220446049250313e-16];
const v10 = [1000.0,Infinity,-1.6619091882401082e+308,-1000.0,1000000000.0];
function f11() {
    return v9;
}
[0.35254859453810006,-2.3360824340000175,-1000.0,-1.9539583122411237,3.0,-6.346822835001027,-Infinity,0.6033519272222224,-1000000.0];
[3.0,2.2250738585072014e-308,7.817997549465289];
const v14 = [-2.465258400683366,-0.9691541147544118,0.5517230870428076,-1.0,6.219910811802755,2.220446049250313e-16,508754.0459641116,1000000000.0,-8.48424071402118,-5.0];
function f15() {
    return v6;
}
class C16 extends f11 {
    set h(a18) {
        const o21 = {
            "maxByteLength": 65535,
        };
        const v23 = new ArrayBuffer(2020, o21);
        new BigUint64Array(v23);
    }
    256;
    #c = v8;
    static [v9] = v10;
}
new C16();
new C16();
new C16();
[-1000.0];
const v30 = [-1000000000000.0,-2.2250738585072014e-308,-0.6080954547997486,-7491.263063296792];
[-4.70112496545342,0.6644411963252801,7.910957945689429,-1000.0,-1.0,-0.0,-2.2250738585072014e-308];
if (v14) {
    for (let v32 = 0; v32 < 100; v32++) {
        f15();
    }
} else {
    try {
        C16.fuck(undefined, undefined, v8, v30);
    } catch(e36) {
    }
}
