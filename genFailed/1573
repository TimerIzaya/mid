let v1 = "flatMap";
class C3 {
    get a() {
        try {
            v1.trim();
        } catch(e6) {
        }
        return v1;
    }
    f;
    static set f(a8) {
        try { new a8(this, a8, a8, v1, this); } catch (e) {}
        super.b;
        new Int8Array(2);
        new Uint32Array(2352);
        new Uint8ClampedArray(765);
    }
}
new C3();
new C3();
const v22 = new C3();
const v28 = new Float64Array(0);
let v31 = new BigInt64Array(512);
let v34 = new Uint8Array(4096);
({"buffer":v1,"byteLength":v34,"e":v31,...v1} = v31);
v22[1];
const v37 = [];
Reflect.apply(v28.keys, C3, v37);
v37 || "2a";
