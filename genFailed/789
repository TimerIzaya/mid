function f0() {
}
new WeakSet();
const v3 = [524173552,65535,64,-1639493395,-2,1431074869,7,257,1073741824];
const v4 = [4096,-10,-61162];
[11,128,1073741823,-4294967295,-901353517,4294967296,-128,3,-6064,65424];
const v6 = /a??xyz{1,32}+/udims;
const v7 = /nsmxyz{93}/gvmsy;
const v8 = /(xyz{0,1})/gvdiy;
v6[1005290613] <<= v7;
const v12 = [-8850,-9007199254740991,0,-4294967295,43228,65536];
const v13 = [-9007199254740990];
const v14 = [10,788810670,-4294967295,8,1073741823,-2147483647,1073741824,-3,-54407];
if (v4 == v13) {
    v14["copyWithin"]("copyWithin", ..."copyWithin", ..."copyWithin", ..."copyWithin", 4294967295n);
    Reflect.construct(WeakSet, [v3], WeakSet);
} else {
    function F21(a23, a24, a25, a26) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.b = v7;
        } catch(e27) {
        }
        try {
            this.f = 4294967295n;
        } catch(e28) {
        }
        try {
            this.a = f0;
        } catch(e29) {
        }
    }
    new F21(v4, v6, v6, v6);
    new F21(v13, v7, v6, v8);
    new F21(v12, v7, v8, v7);
}
