const v1 = new Set();
let v3 = "7";
class C5 extends Set {
    #p(a7) {
        v3 **= a7;
        let v8;
        try { v8 = v1.add(a7); } catch (e) {}
        super[v8] = a7;
        return this;
    }
    p(a10, a11) {
        if (a10) {
            v1[a11];
        } else {
            const t14 = "is";
            t14[4] = Set;
        }
        function f13() {
            return "is";
        }
        return a11;
    }
}
const v14 = new C5();
new C5();
const v16 = new C5();
function f20(a21) {
    return v1;
}
class C22 extends f20 {
    static [f20] = -6n;
    a = v14;
    [-6n] = v3;
}
Object.defineProperty(v14, v16, { writable: true, configurable: true, get: eval });
