const v0 = [];
class C1 {
    constructor() {
        /(x)(x)(x)\1a{1,2}?/umy;
        /\P{Decimal_Number}/gudim;
        /aLbp0B/gvdmy;
    }
    valueOf() {
        this[Symbol.iterator];
        return v0;
    }
}
const v10 = new C1();
let v11 = new C1();
let v12 = new C1();
function f16(a17, a18) {
    const o23 = {
        "c": "h",
        __proto__: a18,
        n(a20, a21, a22) {
            v11 = a21;
            return a17;
        },
        [v12]: "h",
        [a18]: v10,
        [C1]: v12,
        ["h"]: "h",
        ...a18,
    };
    return o23;
}
f16("replace", "replace");
f16("h", "replace");
f16("10", "10");
function f27(a28, a29, a30) {
    v12 = v10;
    Object.defineProperty(a28, 268435456, { writable: true, enumerable: true, set: f16 });
    function F31(a33, a34, a35, a36) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.f = a28;
        } catch(e37) {
        }
        try {
            this.c = a30;
        } catch(e38) {
        }
    }
    new F31("h", "h", C1, "h");
    new F31("h", a29, a29, a28);
    new F31("replace", a28, v11, a28);
    return C1;
}
f27("h", v0, f16);
