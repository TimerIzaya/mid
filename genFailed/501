const v2 = new Uint8ClampedArray(2374);
const v5 = new Float64Array(255);
new Uint32Array(2);
class C9 extends Float64Array {
    2;
    static #p(a11, a12) {
        let v13;
        try { v13 = v2.findLast(a12); } catch (e) {}
        const v15 = [v13];
        return Reflect.apply(v2.forEach, this, v15);
    }
    [v5];
}
const v18 = new C9();
const v19 = new C9();
const v20 = new C9();
try {
    v18.toString = Uint32Array;
} catch(e21) {
}
const v23 = [Uint32Array,v20,v20];
[v19];
[C9,v18];
v5[8] = Uint8ClampedArray;
try { v5.lastIndexOf(v23, 2374); } catch (e) {}
