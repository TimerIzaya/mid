function f3(a4, a5) {
    const o13 = {
        "a": a5,
        "g": 268435441,
        toString(a7, a8) {
            super.g = 268435441;
            const v9 = a4 + a4;
            a8[268435441] = a5;
            [a8,v9];
            const v11 = [this];
            return [v11,v11,-2070786192,v9];
        },
        1: -2070786192,
        122: 268435441,
        "b": 268435441,
        "c": a5,
    };
    return o13;
}
const v14 = f3(268435440, -2070786192);
const v15 = f3(-2070786192, -2070786192);
const v16 = f3(-2070786192, 268435441);
class C17 extends f3 {
    static 1073741824;
    get f() {
        function F19(a21, a22) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.f = 268435440;
            } catch(e23) {
            }
            try {
                this.e = 268435441;
            } catch(e24) {
            }
        }
        new F19(this, v15);
        new F19(this, v14);
        new F19(this, v16);
        return 268435440;
    }
}
const v28 = new C17();
new C17();
new C17();
class C34 {
    static n(a36, a37) {
        const v38 = v15[268435441];
        const v39 = v38 * v14;
        try {
            this.valueOf = v38;
        } catch(e40) {
        }
        return v39;
    }
    static p(a42, a43) {
        super.d -= -9627;
        Object.defineProperty(this, "b", { writable: true, enumerable: true, get: f3, set: f3 });
        a42 >>= a42;
        new C17();
        return -2070786192;
    }
}
new C34();
new C34();
new C34();
v28 >> v16;
const o51 = {
    "maxByteLength": 1106,
};
const v53 = new SharedArrayBuffer(1106, o51);
new Int8Array(v53);
