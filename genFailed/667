const v2 = new Array(16);
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = v2;
    } catch(e6) {
    }
}
const v7 = new F3(16);
const v8 = new F3(v7);
const v9 = new F3(F3);
new Map();
function F12(a14, a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v2;
    } catch(e17) {
    }
    try {
        this.f = a14;
    } catch(e18) {
    }
}
new F12(v7, v9, v9);
new F12(v9, v9, v7);
new F12(v8, v9, v7);
const o24 = {
    "maxByteLength": 536870888,
};
const v26 = new SharedArrayBuffer(185, o24);
const v28 = new Int16Array(v26);
try { v28.entries(); } catch (e) {}
