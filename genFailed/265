function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -4096;
    } catch(e3) {
    }
    try {
        this.g = -4096;
    } catch(e4) {
    }
}
const v5 = new F0();
new F0();
const v7 = new F0();
const v11 = [-183851871,48589,65535,-65537,5,268435440,10,-9007199254740990];
const v12 = [65535,-445,268435440,5,65537];
const v13 = [13,2147483648];
[v12];
const v15 = [F0];
const v16 = [v5,v15,v7];
function f17() {
    return -699524157n;
}
9n * v13;
const v20 = Symbol.split;
v15[v20];
for (const v22 in v20) {
    v16 / -7n;
    try {
        v11.valueOf = f17;
    } catch(e24) {
    }
}
