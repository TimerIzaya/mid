function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 65536;
    } catch(e3) {
    }
    try {
        this.a = 65536;
    } catch(e4) {
    }
    try {
        this.e = 65536;
    } catch(e5) {
    }
}
let v6 = new F0();
new F0();
const v8 = new F0();
function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a11;
    } catch(e13) {
    }
    try {
        this.d = v6;
    } catch(e14) {
    }
}
const v15 = new F9(v8, v8);
new F9(v6, v6);
new F9(v6, v6);
class C18 extends F0 {
    n(a20, a21, a22) {
        new F0();
        new Uint16Array(2);
        new Uint16Array(128);
        const v32 = new Int32Array(1458);
        return v32;
    }
}
new C18();
const v34 = new C18();
const v35 = new C18();
v34[v35] = v35;
({"a":v6,} = v8);
const o36 = {
};
new Proxy(v15, o36);
const o41 = {
    "maxByteLength": 1219,
};
const v43 = new ArrayBuffer(1219, o41);
new Float64Array(v43);
