class C3 {
    1 = 257;
    constructor(a5, a6) {
        try { new a5(this, a6); } catch (e) {}
        a6 >= a6 ? a6 : a6;
    }
    [3];
    get a() {
        return this[5];
    }
    [257] = 2147483649;
    static 253;
    #h = 3;
}
const v12 = new C3(3, 2147483649);
const v13 = new C3(2147483649, 3);
const v14 = new C3(3, 3);
function f15() {
    return v14;
}
function F16(a18, a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v13;
    } catch(e22) {
    }
    try {
        this.h = a21;
    } catch(e23) {
    }
}
const v24 = new F16(v14, 3, v13, v13);
const v25 = new F16(v13, 257, v12, F16);
const v26 = new F16(v14, 2147483649, v12, 3);
[[f15]];
[f15,v24,v26];
new C3(2147483649, 2147483649);
v25 | v25;
try {
    new f15();
} catch(e33) {
}
const o36 = {
    "maxByteLength": 2147483649,
};
const v38 = new SharedArrayBuffer(54, o36);
new Float32Array(v38);
