function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 255;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
class C13 extends F0 {
    constructor(a15, a16, a17, a18) {
        super();
        const t13 = "function";
        t13[a17] = v5;
        try { a16(...a15, 0.7019533055530699, ...a16, -7335.099002323113, ...a16, F0); } catch (e) {}
    }
    static #m(a21, a22, a23, a24) {
        "ecT" === (a22 >= a24 ? a22 : a24);
        return a21;
    }
    3 = "arguments";
    static #b = F0;
    static [-2] = 0.7019533055530699;
}
const v28 = new C13(v6, "function", "arguments", v6);
new C13(C13, "ecT", "arguments", v28);
new C13(v5, "function", "function", v4);
new Float64Array(2228);
new Uint8ClampedArray(10);
new Float32Array(2861);
v6[Float32Array];
