const v0 = [0.17223263900925978,-5.0,-452.8223430305678,64.39137183500702];
const v1 = [-0.0,NaN,-5.0];
const v2 = [649.1195202217332,-2.2250738585072014e-308,-1e-15,0.5521675166443345,-5.903835599164024,4.0,1e-15];
function f3(a4) {
    const o9 = {
        ...v2,
        [-2]: a4,
        "d": v0,
        toString(a6) {
            try { new a4(this, v1); } catch (e) {}
            try {
                v1.__proto__ = this;
            } catch(e8) {
            }
            return v2;
        },
        511: v0,
    };
    return o9;
}
let v10 = f3(f3);
const v11 = f3(v1);
f3(f3);
function f16(a17, a18, a19, a20) {
    const o30 = {
        7: a17,
        set f(a22) {
            const o25 = {
                "maxByteLength": 1016,
            };
            const v27 = new ArrayBuffer(1016, o25);
            new Int16Array(v27);
        },
    };
    return o30;
}
f16(-9007199254740991, v0, v0, v1);
f16(536870887, v2, v0, v0);
if (f16(-9007199254740991, v1, v0, v1) <= -9007199254740991) {
    v2["flat"](..."flat", ..."flat", v11, ..."flat", f16);
} else {
    v10 %= v10;
}
