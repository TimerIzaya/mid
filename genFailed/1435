function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = -45189;
    } catch(e3) {
    }
    try {
        this.c = -45189;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
new F0();
[9,2147483649,9007199254740990,26026,1173328809,10,-3];
const v12 = [308276645,9,10,10];
const v13 = [512,-12,-9223372036854775808,9,-2412,1073741823,-11,0,127443852];
const v15 = new Date();
class C16 extends Date {
    static #o(a18, a19, a20, a21) {
        v15[this] = 10000n;
        class C22 extends Date {
            e;
            static [-9007199254740992n];
        }
        new C22();
        new C22();
        new C22();
        return v6;
    }
    #c = v6;
    static #h = 163667127n;
    #f;
    static b = v15;
}
new C16();
new C16();
new C16();
function f29(a30, a31, a32) {
    function f34(a35) {
        v13[0];
    }
    this.onmessage = f34;
    v5[Symbol.hasInstance];
}
const v42 = [v12,"function",163667127n];
const o43 = {
    "arguments": v42,
    "type": "function",
};
new Worker(f29, o43);
