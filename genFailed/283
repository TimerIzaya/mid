function f3() {
    return 0;
}
const v6 = new Int32Array(127);
new Uint8ClampedArray(2575);
const v12 = new Int8Array(3);
let v16;
try { v16 = v12.reduce(f3, 65536); } catch (e) {}
for (const v17 in v12) {
    v12.length;
    v16.__proto__;
    const v21 = [];
    Reflect.apply(v12.reverse, v16, v21);
}
try {
    v6.g = -709475394;
} catch(e24) {
}
