const v0 = [];
class C1 {
    b = v0;
    constructor() {
        super.b = v0;
        try {
            super.n(this, v0, v0, this);
        } catch(e4) {
        }
    }
    static #n() {
        try {
            this.e = this;
        } catch(e6) {
        }
        Object.defineProperty(v0, v0, { configurable: true, value: v0 });
        return this;
    }
}
const v7 = new C1();
new C1();
new C1();
const v17 = [-1.2204756172558184,0.0,-3.0,-5.0,-1000000.0,-2.2250738585072014e-308,-346.47616931821017];
[-Infinity,-688063.4564999042,-1.7976931348623157e+308];
const v19 = [-2.2250738585072014e-308,6.5458538071430326,1e-15,9.591479894622213e+307,-1e-15];
const v20 = v19[536870889];
let v21;
try { v21 = v20(v19, 0.45359706093830154, v20, v7, v20); } catch (e) {}
try { v21(v21); } catch (e) {}
v21[true] &&= v20;
try {
    v17.findIndex(v21);
} catch(e24) {
}
new Int32Array(2);
new Float64Array(203);
new Float32Array(276);
