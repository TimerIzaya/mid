new Int8Array(1812);
let v5 = new BigUint64Array(3787);
new Float64Array(6);
class C9 {
    static set f(a11) {
        v5 ||= a11;
        [1873143584,14014,65536,268435439,-4994];
        [-15,-20022,9007199254740991];
        [9007199254740992,4,1824727905,9007199254740990];
    }
    #toString(a16, a17, a18, a19) {
        a18 << a16;
        try {
            new Float64Array(3787, 1181155014, 1181155014);
        } catch(e23) {
        }
        return BigUint64Array;
    }
}
const v24 = new C9();
const v25 = new C9();
const v26 = new C9();
class C27 extends Float64Array {
    static [Float64Array];
    static #e;
    static h = BigUint64Array;
    #p(a29, a30, a31, a32) {
        const v33 = /a[^a]/gudis;
        /USL*/gvisy;
        /(ab|cde)\1/gimsy;
        try { v5(3787, v33); } catch (e) {}
        return 3787;
    }
    [3787];
    1000 = v25;
    static #g;
    #d = Int8Array;
}
new C27();
new C27();
new C27();
let v40 = 10;
for (; v40--;) {
    v26[v24] = v26;
    [6.7852019823669565,-1e-15,NaN];
    [0.45576706629019614,-438690.7115782781];
    [-1.3310021949067794e+308];
    6 || Int8Array;
}
