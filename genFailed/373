const v2 = new BigUint64Array(11);
let v4 = Int16Array;
new v4(256);
const v8 = new Int16Array(3490);
function f9() {
    return v2;
}
[,...v4] = v2;
const v12 = Reflect.construct(BigUint64Array, [Reflect,256,3490], Int16Array);
for (const v13 in v8) {
    new BigUint64Array(v8, v12, 256);
    const o16 = {
    };
    try {
        o16.e = 3490;
    } catch(e17) {
    }
    try {
        const o18 = {
        };
        o18.e = 3490;
        o18.b = 3490;
    } catch(e19) {
    }
    try {
        const o20 = {
        };
        o20.e = 3490;
        o20.b = 3490;
        o20.h = v13;
    } catch(e21) {
    }
    try {
        const o22 = {
        };
        o22.e = 3490;
        o22.b = 3490;
        o22.h = false;
    } catch(e23) {
    }
}
