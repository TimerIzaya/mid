let v0 = 1.7976931348623157e+308;
function f6(a7, a8, a9) {
    const o23 = {
        [a9]: a9,
        get b() {
            this[v0] = this;
            const v12 = new Set();
            v0 = super.a;
            let v15 = 256;
            Math.asinh(15n);
            const v17 = 15n / v15;
            v12 ^ v0;
            const v19 = v12 | v17;
            Math.exp(v17);
            v15++;
            -v19;
            return -869.4967338170602;
        },
    };
    return o23;
}
const v24 = f6(v0, 490934837n, -869.4967338170602);
const v25 = f6(-5.0, 490934837n, -5.0);
f6(-5.0, v0, v0);
const v27 = [536870912,977858100,-8,-1021809784,9007199254740992,268435439,4,-5,9007199254740992];
[-456835914,-3,1073741825,-58866,40807083,9007199254740991,-268435456,5,-9223372036854775808];
[-11,9007199254740991,2147483649,10000,-256,129,-62319,-2082091123];
15n | v27;
try {
    v25.d = -869.4967338170602;
} catch(e31) {
}
async function f32(a33, a34) {
    const v35 = v24[7];
    const o39 = {
        "execution": "sync",
        "type": "minor",
    };
    gc(o39);
    await v25;
    return v35;
}
f32(-9223372036854775808n, v0);
