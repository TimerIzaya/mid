function f0() {
}
function f1() {
    const o10 = {
        3: f0,
        [f0]() {
            function F3(a5) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.e = this;
                } catch(e6) {
                }
            }
            const v7 = new F3(f0);
            const v8 = new F3(v7);
            new F3(v8);
            return this;
        },
        __proto__: f0,
    };
    return o10;
}
const v11 = f1();
f1();
f1();
new Uint8ClampedArray(2348);
const v19 = new Int32Array(1256);
new Uint8Array(0);
f0 * v19;
for (const v25 of v11[6]) {
    const o26 = {
    };
    try {
        o26.h = v11;
    } catch(e27) {
    }
    try {
        const o28 = {
        };
        o28.h = v11;
        o28.d = v25;
    } catch(e29) {
    }
    try {
        const o30 = {
        };
        o30.h = v11;
        o30.d = v25;
        o30.b = v25;
    } catch(e31) {
    }
    try {
        const o32 = {
        };
        o32.h = v11;
        o32.d = v25;
        o32.b = 0;
    } catch(e33) {
    }
}
