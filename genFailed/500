const v2 = new Float32Array(133);
new BigInt64Array(1944);
new Int32Array(11);
class C9 extends BigInt64Array {
    [1944];
    set c(a11) {
        new BigUint64Array(7);
        new Uint8ClampedArray(2852);
        new Uint16Array(3667);
    }
    static #h = Float32Array;
    #f;
    2746 = BigInt64Array;
}
const v21 = new C9();
const v22 = new C9();
new C9();
class C24 extends Int32Array {
    [1944];
    [Int32Array];
    #b;
    static #toString(a26, a27, a28) {
        return -1237512554;
    }
    constructor(a33, a34, a35, a36) {
        super(v22, a35, a33);
        [-14,39610,2147483649,-1,52775];
        [-4294967296,1073741823,-35694,268435456,-65535,1646580163,3,-2147483649,-5];
        [-13,4,-256,-939196902,-7];
        const o42 = {
            "maxByteLength": 3674,
        };
        const v44 = new ArrayBuffer(3674, o42);
        new Uint16Array(v44);
    }
}
const v47 = new C24(v21, 1944, 11, v22);
const v48 = new C24(v47, v47, 133, v22);
const v49 = new C24(1944, v2, 133, v22);
new Float32Array(v22, 11);
[1.7976931348623157e+308,-3.0,1000000000000.0,1000000000.0,1.0,1000000.0,-1.0,-270798.3881005454,-6.52296497013929e+306,226891.75282575982];
const v55 = [745.4489076453553,9.924099150161215,-2.2250738585072014e-308,-1.7976931348623157e+308];
[-1.2027105769060473e+308,0.8077114675445786,163613.15587612102];
const v57 = new Int32Array(4);
new BigInt64Array(...v57, ...v22, BigInt64Array, ...v2, 4);
function F59(a61, a62) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v55;
    } catch(e63) {
    }
    try {
        this.c = a61;
    } catch(e64) {
    }
    try {
        this.b = 11;
    } catch(e65) {
    }
}
new F59(v47, 11);
new F59(v49, 11);
new F59(v48, 4);
