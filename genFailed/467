let v0 = -1995423796n;
const v3 = [1.0,-0.0,-5.0,5.650435268995833e+307,-1e-15,0.7547989734665111,4.0];
const v4 = [-935788.5021015089,5.690249365073671e+306,1.4368065696720299e+308,-616988.6635528426,793.6849865886625,-1.7577634026049598e+308,-1.3298191995057672e+308];
const v5 = [2.803904834804623,0.19468011700089094,-5.067989551654087e+307,-4.0,2.548509909280398,-3.0];
function f6(a7, a8, a9, a10) {
    const o14 = {
        ...v5,
        1073741824: a10,
        "d": v4,
        get g() {
            const v12 = this - this;
            a9[6] = -1024n;
            function f13() {
                return v12;
            }
            return a7;
        },
        __proto__: a8,
    };
    return o14;
}
const v15 = f6(f6, v3, 41720n, v4);
const v16 = f6(v5, v5, 41720n, v5);
f6(41720n, v5, -1024n, v3);
let v19 = [true];
[v16,v19];
const v21 = [41720n,v5,v3,v3,v15];
v19 %= v21;
const v22 = v21 - true;
try {
    v4.findIndex(f6);
} catch(e24) {
}
v3[v0] = 41720n;
v15[v22];
let v28 = --v0;
const v29 = +v0;
(-16) ** 41720n;
Math.sin(v29);
v29 % 41720n;
v29 << v29;
++v28;
