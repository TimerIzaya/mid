class C3 {
    constructor(a5) {
        switch (237024516n) {
            default:
                const v6 = 4n;
                237024516n + v6;
                break;
        }
    }
    static m(a9) {
        4n ^ 9.46906647491393;
        return 237024516n;
    }
}
const v14 = new C3(237024516n);
const v15 = new C3(v14);
new C3(v14);
function F17(a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a20;
    } catch(e22) {
    }
}
const v23 = new F17(65535n, C3, 65535n);
const v24 = new F17(4n, v15, 65535n);
const v25 = new F17(237024516n, C3, 4n);
class C26 extends C3 {
    constructor(a28, a29, a30) {
        super(a28);
        new BigInt64Array(1);
        new Uint8Array(6);
        new Int8Array(3901);
    }
    64 = v15;
    a = 65535n;
}
new C26(65535n, v24, v24);
new C26(4n, v15, v23);
new C26(4n, v25, v25);
Math.abs(F17);
const v48 = v24 + (2019253295 << 4n);
2019253295 >>> F17;
+-456669590;
2019253295 - v48;
f = 2019253295;
