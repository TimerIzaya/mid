class C3 {
    constructor(a5, a6) {
        a5.length **= this;
        try { a5("isConcatSpreadable", this, a6, a6); } catch (e) {}
        super["isConcatSpreadable"];
        try {
            a6.trimEnd();
        } catch(e10) {
        }
    }
    static ["D"] = "qfH";
    ["qfH"];
    ["D"];
}
const v11 = new C3("D", "qfH");
new C3("isConcatSpreadable", v11);
const v13 = new C3("isConcatSpreadable", v11);
new Uint16Array(3);
new BigInt64Array(463);
let v22 = new BigUint64Array(108);
v22 ||= v13;
for (let i24 = 0; i24 < 10; i24++) {
    ("symbol").normalize("NFKD");
    const v34 = new String("symbol");
    i24 in v34;
}
