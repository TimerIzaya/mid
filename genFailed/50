new Int8Array(102);
new Int32Array(16);
new Float64Array(64);
[-0.0,0.6296387045928098,-Infinity,7.611961648786637e+307,0.08851597755192575,2.2250738585072014e-308,0.4512242915094625,-1000000000.0,0.11937264810649129];
const v10 = [-1.4146377902874489e+308,-428.83236586371015,0.165516185457669,-3.0,0.0,-557.4893718221139,-567125.993009666,-2.220446049250313e-16];
const v11 = [-839.1170896786813,2.0,-238.90056435626047,-7.688939850663239,3.0,NaN,573173.4592047881,-Infinity,-1.765577060696866e+308];
function F12(a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 16;
    } catch(e16) {
    }
    try {
        this.g = a15;
    } catch(e17) {
    }
}
const v18 = new F12(102, F12);
const v19 = new F12(64, 16);
const v20 = new F12(102, 102);
function f21(a22, a23, a24) {
    const o25 = {
        ...v18,
    };
    return o25;
}
f21(16, v18, v10);
f21(102, v19, v11);
f21(16, v20, v11);
const o31 = {
    "maxByteLength": 5,
};
const v33 = new SharedArrayBuffer(2, o31);
new BigUint64Array(v33);
