const v2 = new Uint8ClampedArray(2124);
const v5 = new Uint8ClampedArray(135);
const v8 = new Int32Array(3);
[2124,3];
[v5,Int32Array,Uint8ClampedArray,[v2,Uint8ClampedArray],v8];
function f12() {
    return 2124;
}
[-2.2250738585072014e-308,600838.6754753762];
const v14 = [-1000000000000.0,-3.0];
const v15 = [1e-15,-2.220446049250313e-16,0.0,443987.55381654087];
v8[3] = Uint8ClampedArray;
try { v14.toSorted(f12); } catch (e) {}
with (v8) {
    byteOffset = Int32Array;
    Object.defineProperty(v15, "length", { configurable: true, value: Int32Array });
    v14 <= v8;
    try {
        v5.byteLength = 2124;
    } catch(e18) {
    }
}
