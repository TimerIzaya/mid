class C3 {
    static o(a5, a6) {
        let v7;
        try { v7 = a6(this); } catch (e) {}
        try { v7(v7, this, a5, v7); } catch (e) {}
        a5[0] = a6;
        return v7;
    }
    constructor(a10) {
        function f11(a12, a13) {
            a12?.[a12];
            return a10;
        }
        const v15 = f11(f11, -4.962472052422638e+307);
        v15 || v15;
        Object.defineProperty(this, "e", { writable: true, enumerable: true, get: f11, set: f11 });
    }
}
new C3("40");
const v18 = new C3(C3);
new C3(C3);
function F23(a25, a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a27;
    } catch(e28) {
    }
    try {
        this.a = -2;
    } catch(e29) {
    }
    try {
        this.e = a27;
    } catch(e30) {
    }
}
new F23(268435456, -1000244421, v18);
new F23(268435456, -680305857, v18);
const v33 = new F23(268435456, -2, C3);
const o34 = {
};
try {
    o34.a = 268435456;
} catch(e35) {
}
try {
    const o36 = {
    };
    o36.a = 268435456;
    o36.b = v18;
} catch(e37) {
}
try {
    const o38 = {
    };
    o38.a = 268435456;
    o38.b = v18;
    o38.f = v33;
} catch(e39) {
}
try {
    const o40 = {
    };
    o40.a = 268435456;
    o40.b = v18;
    o40.d = F23;
} catch(e41) {
}
