function f3() {
    return 1e-15;
}
function F4(a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -5.689739327305794;
    } catch(e7) {
    }
    try {
        this.g = 1e-15;
    } catch(e8) {
    }
}
const v9 = new F4(0.2915255434219277);
const v10 = new F4(0.2915255434219277);
const v11 = new F4(0.2915255434219277);
function f12() {
    return v11;
}
class C16 extends F4 {
    n(a18, a19, a20, a21) {
        const v23 = new Set();
        return v23;
    }
    constructor(a25, a26) {
        super(a25);
        return 0.2915255434219277;
        const v27 = [0.2915255434219277,v11,0.2915255434219277,1e-15,1e-15];
        [-5.689739327305794,f12,f12];
        [f3,v27,1e-15,this,v11];
    }
    [-80003431] = f3;
    static #b = F4;
    static a = f3;
}
new C16(f3, 0.2915255434219277);
new C16(v11, 0.2915255434219277);
const v32 = new C16(0.2915255434219277, 0.2915255434219277);
let v33;
try { v33 = v32.n(v9, v10, -5.689739327305794, 0.2915255434219277); } catch (e) {}
new f3();
if (v33) {
    const o39 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o39);
} else {
    --C16;
    9223372036854775807 - (9223372036854775807 ** 9223372036854775807);
    +5.0;
}
