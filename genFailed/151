function f0() {
    const o10 = {
        1582: 2.7807453232522743,
        "f": -9007199254740992,
        get h() {
            super[2.7807453232522743] = this;
            const o8 = {
                "execution": "sync",
                "type": "minor",
            };
            gc(o8);
            return "sync";
        },
    };
    return o10;
}
const v11 = f0();
const v12 = f0();
const v13 = f0();
const v14 = /[(ab)\1]/gvdmsy;
const v15 = /(?<=)/udimy;
const v16 = /[a[a]VC+]/gvdis;
class C20 {
    m(a22, a23) {
        const v24 = [this,v14,a22,f0];
        [v15,f0,a23,[a22,v11],v16];
        try {
            v24.concat(v12, v11, v24);
        } catch(e28) {
        }
        return a23;
    }
    7 = -536870912n;
    #f;
    [65537n] = v15;
    #g = v16;
}
new C20();
new C20();
let v31 = new C20();
let v32;
try { v32 = v11.m(); } catch (e) {}
if (v32) {
    v11[f0];
} else {
    v13[4] = v14;
    v31 |= v31;
}
function F34(a36, a37, a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a36;
    } catch(e40) {
    }
}
new F34(v15, v14, v15, v31);
new F34(v15, v16, v14, v12);
new F34(v16, v31, v15, v13);
