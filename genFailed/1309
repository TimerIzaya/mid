function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a5;
    } catch(e6) {
    }
    try {
        this.c = a5;
    } catch(e7) {
    }
}
const v8 = new F3(-7n);
const v9 = new F3(-7n);
const v10 = new F3(16n);
class C11 extends F3 {
    [v10] = v9;
    [16n] = -7n;
    136;
    toString(a13, a14, a15) {
        try {
            super.o(-7n, -7n);
        } catch(e17) {
        }
        return v9;
    }
    e;
}
new C11();
new C11();
const v20 = new C11();
if (v8 <= v20) {
    const o22 = {
    };
    new Proxy(C11, o22);
} else {
    v8.g *= v20;
    let v26 = 1000;
    --v26;
    (v8 >> 0.6159289730196957) | -7n;
}
