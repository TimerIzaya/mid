class C3 {
    static set e(a5) {
        let v7;
        try { v7 = a5["next"](-5.0, 10, this); } catch (e) {}
        -5.0 ^ v7;
        /oi((((.).).).)[i[a-zA-Z0-9]a\W]/udimy;
        /(D(ab|cde)\1)/gvdimsy;
        /abc+/ds;
    }
    constructor(a13) {
        const v19 = ~1024;
        1024 && (v19 >> v19);
        Math.round(this);
    }
}
const v23 = new C3(C3);
const v24 = new C3(v23);
const v25 = new C3(-386520.03495679144);
function f26(a27, a28, a29, a30) {
    const o38 = {
        set f(a32) {
            v24[137] &= 10;
            const o36 = {
                "execution": "sync",
                "type": "minor",
            };
            gc(o36);
        },
        "g": a27,
        "b": a30,
        "a": a27,
        "d": -386520.03495679144,
    };
    return o38;
}
const v40 = f26(f26(v24, v24, v25, v25), v24, v24, -386520.03495679144);
f26(v40, v40, f26, v24);
const v44 = new Float32Array(9);
let v47 = new Float64Array(249);
new BigUint64Array(9);
const o51 = {
};
new Proxy(C3, o51);
if (9 !== Float64Array) {
    const v58 = v47--;
    v47--;
    -386520.03495679144 + v47;
    Math.asin(v58);
} else {
    v47 **= v47;
    const v62 = v44;
    C3.__proto__;
}
