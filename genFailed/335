function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 4294967296;
    } catch(e3) {
    }
    try {
        this.d = 4294967296;
    } catch(e4) {
    }
}
const v5 = new F0();
new F0();
new F0();
function f8() {
    return v5;
}
[-1073741824,6,10,9007199254740992,-9,3,64,-4];
const v10 = [536870888,-580384531,362934139,-55992,-9007199254740992,-1032115653,-5,3,-2147483647,536870912];
const v11 = [1073741823];
[-1.324676257225624e+308,2.220446049250313e-16,8.071486766897497e+307,2.220446049250313e-16];
let v13 = [-1.7976931348623157e+308,2.414431289428253e+307,-7.7534981738445286,1.0,7.347384332455846e+307,0.4467867556593258,-5.0];
[-1.5677385944752054,-1.6200190408950775e+308,-946.0226332743844,8.92279629970393,3.0,-1e-15,9.231397798940796e+307,-1000000000.0,-2.220446049250313e-16,-1000000000.0];
let v19 = 65536;
(v11 % v19) / v19;
--v19;
v13 = v10;
const o26 = {
    "maxByteLength": 10000,
};
const v28 = new SharedArrayBuffer(10, o26);
new Float64Array(v28);
