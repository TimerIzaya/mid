const v2 = new Uint8ClampedArray(242);
const v5 = new Int16Array(3);
const v8 = new Int32Array(171);
class C9 extends Uint8ClampedArray {
    g;
    #valueOf(a11, a12, a13) {
        super.buffer = this;
        v5[7] = v5;
        ++a12;
        try {
            v8.c = Int16Array;
        } catch(e15) {
        }
        return 171;
    }
    static [Uint8ClampedArray] = v8;
    #a = 242;
    [-2];
}
const v16 = new C9();
const v17 = new C9();
new C9();
let v22;
try {
const t0 = -234438163;
v22 = t0(242, -234438163);
} catch (e) {}
typeof -2147483648 === "symbol";
try {
    const t29 = "symbol";
    t29.toString = v22;
} catch(e26) {
}
try { v22(v5, ...v5, ...v16, Uint8ClampedArray, ...v17, v22); } catch (e) {}
v2.byteLength;
