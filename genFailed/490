function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = 492966997;
    } catch(e3) {
    }
    try {
        this.d = 492966997;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
const v7 = new F0();
function f11(a12, a13, a14) {
    const o26 = {
        ...a14,
        ...a14,
        "f": v6,
        "a": a14,
        get d() {
            function F16(a18, a19) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.e = a13;
                } catch(e20) {
                }
                try {
                    this.c = a14;
                } catch(e21) {
                }
                try {
                    this.h = a19;
                } catch(e22) {
                }
            }
            new F16(-1563819598n, -9n);
            new F16(-1563819598n, -1563819598n);
            const v25 = new F16(a12, -736050430n);
            return v25;
        },
    };
    return o26;
}
const v27 = f11(v6, -1563819598n, v7);
const v28 = f11(-736050430n, -9n, v6);
const v29 = f11(F0, -9n, v7);
function f30(a31, a32, a33) {
    const o42 = {
        10000: v27,
        ...v28,
        ...a31,
        valueOf(a35, a36, a37) {
            f11(a31, a35, a32);
            function f39(a40) {
                return a35;
            }
            class C41 extends f39 {
                static 2073770174;
            }
            return -1563819598n;
        },
        __proto__: a31,
        "g": a32,
    };
    return o42;
}
const v43 = f30(v28, F0, v29);
f30(v27, v5, v27);
const v45 = f30(v29, -736050430n, v28);
Object.defineProperty(v45, 2, { writable: true, get: f11, set: f11 });
v43[127] = v7;
Object.defineProperty(v28, "f", { writable: true, value: -1563819598n });
for (const v46 in v45) {
    function f47(a48) {
        return v46;
    }
    class C49 extends f47 {
        128;
    }
}
