const v2 = new Int32Array(2768);
const v5 = new Uint8ClampedArray(1838);
const v8 = new Int32Array(1);
class C9 {
    [v8];
    static 2147483647 = Int32Array;
    constructor(a11, a12) {
        const v14 = [Int32Array];
        const v15 = v8.map;
        const v16 = Reflect.apply(v15, v2, v14);
        try { v15(v16, v8, a11); } catch (e) {}
    }
    [v2] = v2;
    #a;
    #h;
    [1838] = 1838;
}
const v18 = new C9(1, 2768);
new C9(1, 2768);
const v20 = new C9(1, 1);
try {
    C9.valueOf = v8;
} catch(e21) {
}
let v22 = 0;
do {
    try { v5.find(C9, v18); } catch (e) {}
    v18[v20] **= v22;
    v22++;
} while (v22 < 10)
