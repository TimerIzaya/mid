let v2 = "boolean";
class C3 {
    constructor(a5) {
        v2[this] = "o";
        ["o",a5,"o",this,this];
        ["o",this,["o"],v2];
    }
    static c = v2;
    toString(a10) {
        let v13 = 0.7718396943837558;
        a10[a10] = v13;
        v13 = Infinity;
        return this;
    }
}
const v15 = new C3("MAX_VALUE");
const v16 = new C3(v2);
const v17 = new C3(v2);
const v18 = [v17,v17,v15,C3];
const v19 = [v17,v17,v18];
const v20 = [C3,v19,"MAX_VALUE","o"];
const v22 = new WeakSet();
class C23 {
    [v19] = C3;
    constructor(a25, a26, a27) {
        try {
            v16.c = a25;
        } catch(e29) {
        }
    }
    f = v22;
    get c() {
        let v31 = 0;
        do {
            C3[7] = v20;
            ("o")["o"];
            v31++;
        } while (v31 < 9)
        return v16;
    }
}
const v36 = new C23(v16, v19, v20);
new C23(v36, v17, v16);
const v38 = new C23(C23, v20, v15);
new WeakSet(v2);
try { v38["trimStart"](v18, v22, v18); } catch (e) {}
v36[149013185] = v16;
v16[4] = WeakSet;
try {
    v36.f = C23;
} catch(e42) {
}
--v2;
