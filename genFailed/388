class C3 {
    set c(a5) {
        const v6 = -6 >>> this;
        const v8 = [];
        Reflect.apply(("function").toLowerCase, this, v8);
        try { ("function").charCodeAt(v6); } catch (e) {}
    }
    toString(a13, a14) {
        try { new a14(a13, -6); } catch (e) {}
        const v17 = `boolean${("function").__proto__}9XtH${-5.861993809451227}function${this}toISOString`;
        -(-5.861993809451227);
        Math.sqrt(-5.861993809451227);
        Math.log(-490.69887605578487);
        return v17;
    }
}
const v25 = new C3();
const v26 = new C3();
new C3();
const v30 = new Float32Array(8);
const v33 = new BigUint64Array(1024);
new Uint8ClampedArray(11);
v33[1] = 11;
if (v30 < BigUint64Array) {
} else {
    v25[7];
    v26[9] += 10;
}
