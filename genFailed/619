function f0() {
}
function f1() {
    const o5 = {
        "b": f0,
        [f0]: f0,
        "d": f0,
        "g": f0,
        "e": f0,
        get c() {
            try {
                this.fuck(f0, this, f0, f0);
            } catch(e4) {
            }
            return this;
        },
    };
    return o5;
}
f1();
f1();
const v8 = f1();
let v11 = new Uint8ClampedArray(55);
new BigUint64Array(2220);
new BigUint64Array(127);
v8[10] -= 55;
const v18 = f0();
delete v8?.d;
function f20() {
    return v18;
}
v8[v8] >>= 55;
v11[8];
Object.defineProperty(v8, v11++, { writable: true, configurable: true, enumerable: true, set: f20 });
