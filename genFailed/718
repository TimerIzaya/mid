const v0 = [21177,1470599710,-2147483647,2,127,255,1842415330,1024,997144711];
const v1 = [257,302687799,268435441,-63180,741614257,-25937];
const v2 = [-4294967296,-2,127];
function f3(a4) {
    const o12 = {
        7: v2,
        ...v1,
        "b": v2,
        toString(a6, a7) {
            try { a7(a7, a4, this, a6, v0); } catch (e) {}
            for (let v9 = 0; v9 < 32; v9++) {
                a6["p" + v9] = v9;
            }
            return v1;
        },
    };
    return o12;
}
let v13 = f3(v0);
const v14 = f3(v0);
f3(v0);
[894274.7340015571,-5.710913876613019e+305,1.7976931348623157e+308,4.0];
const v17 = [1000000000000.0,-7.71001745384015,-1000000.0,-503135.0922135551];
const v18 = [1000.0,2.0,1000000000.0,-1.0,0.3405812300633462,2.0,656.6481302730535];
function f19() {
    return v17;
}
v13 /= v14;
try { v14.toString(v18, f19, 9007199254740990); } catch (e) {}
new Uint8Array(8);
new Float64Array(7);
new Int16Array(0);
