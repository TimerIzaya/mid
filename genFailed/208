const v0 = [];
class C1 {
    #b;
    constructor() {
        const v4 = this >= v0 ? this : v0;
        try {
            v4.#b = this;
        } catch(e5) {
        }
    }
    static set h(a7) {
        try { new a7(this, this, ...v0, this, a7); } catch (e) {}
        class C9 {
            static [v0] = v0;
            #e;
            1024;
            static 132;
        }
        new C9();
        new C9();
        new C9();
    }
}
new C1();
const v14 = new C1();
new C1();
class C19 extends C1 {
    toString(a21, a22) {
        !9007199254740991;
        +this;
        Math.fround(10);
        const v29 = this ^ this;
        Math.sin(v29);
        return Math.pow(v29, 10);
    }
    #h;
    f;
}
const v32 = new C19();
const v33 = new C19();
new C19();
[9007199254740991,v33,[v14]];
[v32];
let v38 = 10;
for (; v38--;) {
    const o43 = {
        "execution": "sync",
        "type": "minor",
    };
    gc(o43);
}
