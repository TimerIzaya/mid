function f0() {
}
class C1 extends f0 {
    #c;
    #a = f0;
    valueOf() {
        try {
            super.sin(f0, 3n, 2147483647n, f0);
        } catch(e7) {
        }
        return f0;
    }
    static e;
    [f0];
}
const v8 = new C1();
const v9 = new C1();
const v10 = new C1();
class C11 extends C1 {
    #b = f0;
    [f0] = f0;
    constructor(a13, a14) {
        super();
        try {
            a14.b = C1;
        } catch(e15) {
        }
        this[this] = a14;
        super[this] = a13;
    }
    [C1] = v8;
    static e = v8;
}
const v17 = new C11(v10, v8);
const v18 = new C11(f0, v17);
new C11(v17, v10);
function F20(a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v8;
    } catch(e25) {
    }
}
const v26 = new F20(v18, v18, v8);
const v27 = new F20(v26, v17, v9);
new F20(v9, v18, v10);
const v29 = [-9,-4,-12,-2147483648,-4294967297,-13,2,-2];
[-65537,9,-9007199254740992,1661046107,15];
[-1,-65536,14,0,37223,27324,536870888,-1894868062,-9223372036854775808];
v29[v17] <<= v27;
Object.defineProperty("valueOf", v8, { configurable: true, value: null });
delete v10?.e;
new BigInt64Array(2880);
new Int16Array(14);
new BigInt64Array(9);
