new BigUint64Array(2997);
const v8 = new Float32Array(129);
const v11 = new BigInt64Array(12);
function F12(a14, a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a16;
    } catch(e18) {
    }
    try {
        this.e = Float32Array;
    } catch(e19) {
    }
    try {
        this.b = "b";
    } catch(e20) {
    }
}
const v21 = new F12(Float32Array, 129, "b", 129);
const v22 = new F12(BigUint64Array, v21, "oSY", 129);
new F12(v11, v22, "b", 12);
for (let v24 = 0; v24 < 68; v24++) {
    const v25 = new BigUint64Array(v24, v24, 2997);
    v25.__proto__;
}
let v30;
try { v30 = v21.n(BigInt64Array); } catch (e) {}
%VerifyType(v22);
v8["findLast"](v30);
