class C3 {
    6;
    static 3;
    static #toString(a5, a6) {
        a6 >> 4294967295n;
        let v8;
        try { v8 = this(-13n, -13n, -13n, -9223372036854775807n, -9223372036854775807n); } catch (e) {}
        return v8;
    }
    static #a = -9223372036854775807n;
    104 = 4294967295n;
    f = -13n;
    static a;
}
const v9 = new C3();
const v10 = new C3();
const v11 = new C3();
function f12(a13, a14, a15) {
    const o25 = {
        "f": a14,
        ...a14,
        [v11]: 4294967295n,
        "d": 4294967295n,
        o(a17, a18, a19, a20) {
            this.f;
            a13 & -13n;
            a17[Symbol.search] = this;
            return v9;
        },
    };
    return o25;
}
const v26 = f12(4294967295n, v11, 4294967295n);
const v27 = f12(-9223372036854775807n, v26, -13n);
f12(-13n, v26, -9223372036854775807n);
try { v27.o(v9); } catch (e) {}
const v34 = v11 / C3.a;
for (let v35 = 0; v35 < 100; v35++) {
    f12(4294967295n, v10, v34);
}
+4294967295n;
