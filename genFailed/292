class C3 {
    8;
    #n(a5, a6) {
        Math.cos(8);
        return !(this << -129969472);
    }
    static 9;
    get f() {
        const v15 = new Uint32Array(6);
        new Uint16Array(4028);
        new Float64Array(512);
        return v15;
    }
}
const v22 = new C3();
const v23 = new C3();
const v24 = new C3();
class C25 {
    static n(a27, a28, a29, a30) {
        [-65536,929208600,5];
        const v32 = [-58119,15,7,-15,512,53463,-9,-16];
        [-29428,4,-1024,2147483648];
        function F34(a36, a37, a38) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.a = a36;
            } catch(e39) {
            }
            try {
                this.h = a38;
            } catch(e40) {
            }
        }
        new F34(C3, v24, v32);
        new F34(v22, v24, v32);
        const v43 = new F34(v23, a29, v32);
        return v43;
    }
}
const v44 = new C25();
new C25();
const v46 = new C25();
class C50 extends C25 {
    o(a52, a53) {
        if (a53) {
            let v56 = 800.8632659672685;
            const v57 = v56--;
            Math.cbrt(C3);
            const v59 = v57 << C3;
            Math.tanh(C3);
            Math.sqrt(v57);
            Math.tanh(a52);
            Math.abs(v59);
        } else {
            super[v46[v44]];
        }
        return -57519;
    }
}
new C50();
const v67 = new C50();
new C50();
for (const v69 of C3) {
    v23.__proto__;
    let v72 = -872285635;
    Math.asin(v72);
    Math.max(v72);
    const v75 = v67 >> v72;
    const v76 = ++v72;
    Math.atan(v75);
    v72 || v76;
    Math.log(v76);
}
