const v0 = /a(?=bbb|bb)c/vdms;
const v1 = /F[^4h{1z}]/gdsy;
let v2 = /G/msy;
class C3 {
    #toString(a5, a6) {
        let v7 = a6 << this;
        v7 >>= v7;
        return v7;
    }
    constructor(a9, a10) {
        v2 **= v1;
        function f11(a12, a13) {
            try {
                this.__proto__ = a10;
            } catch(e14) {
            }
            return a10;
        }
        f11(v0, this);
    }
}
const v16 = new C3(v2, v0);
const v17 = new C3(v16, v16);
const v18 = new C3(v17, v17);
const v19 = [C3];
const v20 = [v1,v1,v16,C3];
const v21 = [v19,v20,v20,v20,v20];
const v22 = [-985.7612825208606,239420.59661800112,-5.0,4.0,-1e-15,7.755936217505091,-1e-15];
[-692.9830208008278,0.0];
[5.0,134287.82755971164,5.0,-7.974647821745828e+307];
function F25(a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a28;
    } catch(e30) {
    }
}
new F25(v1, v21, v21);
new F25(v1, v18, v21);
const v33 = new F25(v17, C3, v16);
v0[v22] = v33;
const o36 = {
    "maxByteLength": 65536,
};
const v38 = new ArrayBuffer(1409, o36);
new Int32Array(v38);
