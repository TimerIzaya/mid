const v0 = [15,-7,9007199254740990,1,-326698827,128,-47052,3,22655];
const v1 = [4,40606];
const v2 = [1,9007199254740992,4,203678597,46492,64,963658061,44987];
class C3 {
    static #toString(a5, a6) {
        class C7 {
            static 12 = this;
            b;
        }
        new C7();
        new C7();
        new C7();
        return v2;
    }
    [v2] = v0;
}
const v11 = new C3();
new C3();
new C3();
[0,268435441,1517095421,-12];
const v18 = [-4294967295,268435439,-10,-15,-4,-2147483648];
[-10,9,15,-256,-55874,-12,9007199254740992];
+v2;
v18 % v1;
const v24 = [Reflect];
const v25 = Reflect.construct(WeakMap, v24, WeakMap);
try { v25(v2, v25, C3, v11, v24); } catch (e) {}
Math.expm1(15);
-4.0 % 256;
~54349;
