function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -2;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
let v6 = new F0();
function f7() {
    return F0;
}
const v10 = new Int16Array(238);
const v13 = new BigUint64Array(16);
new BigInt64Array(2);
v6 = v5;
const v18 = [f7,v13];
Reflect.apply(v10.find, v6, v18);
try {
    v18.flat();
} catch(e22) {
}
v4 ^ v6;
