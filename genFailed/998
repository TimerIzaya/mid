const v1 = new Map();
function f2() {
    return Map;
}
function f3(a4, a5) {
    const o12 = {
        "e": a4,
        "b": a5,
        ...v1,
        "f": a4,
        __proto__: a4,
        "a": a5,
        "h": a5,
        "c": Map,
        [Map](a7) {
            a4 = v1;
            f2();
            %PrepareFunctionForOptimization(f2);
            const v9 = f2();
            f2();
            %OptimizeMaglevOnNextCall(f2);
            f2();
            return v9;
        },
    };
    return o12;
}
const v13 = f3(f2, Map);
const v14 = f3(f3, f2);
const v15 = f3(Map, f2);
function f16(a17, a18) {
    const o24 = {
        "d": f2,
        get b() {
            const v20 = this;
            [-4.0,-213750.81853967078,-Infinity,-1e-15,NaN];
            [-94.72577959919829,-5.008400459145806e+307,-7.152398476423687,-1.7976931348623157e+308,7.895522831930655e+307,-7.990090068723337,-Infinity,-1e-15,1.7976931348623157e+308,1000000.0];
            [-5.0,4.0,-1000000.0,-1e-15,1000000000.0,-1000000.0];
            return a18;
        },
        __proto__: a18,
        "e": a17,
        "h": f2,
        "b": f2,
        "a": a18,
        "c": v13,
    };
    return o24;
}
f16(v14, v13);
const v26 = f16(v15, v13);
f16(v13, v14);
new Map();
const v32 = new Uint32Array(128);
new Float32Array(9);
new Float64Array(149);
try {
    v13.valueOf = f2;
} catch(e39) {
}
v15[v15] = Float64Array;
function f40() {
    return v15;
}
let v41 = v26[65];
v41 <<= v32;
