const v0 = [4294967297];
const v1 = [268435440];
const v2 = [1073741824,-866769002,1084989764,-4294967295,268435440,536870887];
function f3() {
    v2 - v2;
    const o6 = {
        "execution": -2052704445,
    };
    return o6;
}
Object.defineProperty(v2, Symbol.toPrimitive, { enumerable: true, value: f3 });
const v12 = [-65536];
const v13 = [v2,1073741824,v12];
function f14(a15, a16) {
    return Math.sin(-352500.6925442775);
}
v13.toString = f14;
try { v13.slice(v13, v12); } catch (e) {}
[v0,v0,v1,64,v0];
class C22 {
    #n(a24, a25) {
        return a25 >= this;
    }
    static {
        -0;
        try {
            this.length = 0;
        } catch(e30) {
        }
    }
    get h() {
        switch (-65536) {
            case this:
                v0 ^ -65536;
                break;
        }
        return v0;
    }
}
const v33 = new C22();
v33.constructor = f14;
const v34 = v33?.constructor;
let v35;
try { v35 = new v34(); } catch (e) {}
const v36 = new C22();
v36.constructor = f3;
const v37 = v36?.constructor;
v37.toJSON = v0;
try { new v37(); } catch (e) {}
new C22();
function f43(a44, a45, a46) {
    function f48(a49) {
        try {
            v2.shift();
        } catch(e51) {
        }
    }
    this.onmessage = f48;
    try {
        const o52 = {
        };
        this.fuck(o52, a44);
    } catch(e54) {
    }
}
const t65 = "function";
t65[1] = "function";
const v57 = [C22,"function",1073741824];
const o58 = {
    "arguments": v57,
    "type": "function",
};
const v59 = new Worker(f43, o58);
Math.sin(9007199254740990);
const v62 = Math.exp(!undefined);
v62 >> v62;
function F67(a69, a70, a71, a72) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = -65536;
    a69 < a69;
    a70--;
    a71++;
    ~a72;
    const v77 = this?.constructor;
    try { new v77(7, a71, 7, a69); } catch (e) {}
    a71 >>> a71;
    a72 & a72;
    try {
        this.d = a69;
    } catch(e81) {
    }
    try {
        this.h = a70;
    } catch(e82) {
    }
}
F67.length = F67;
new F67(7, 9007199254740990, 9007199254740990, 9007199254740990);
const v84 = new F67(7, 1, 9007199254740990, 7);
const v85 = v84.d;
v85 * v85;
new F67(1, 7, 7, 7);
function F88(a90, a91) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "length", { writable: true, enumerable: true, value: a90 });
    -a90;
    const v93 = this?.__defineGetter__;
    try { new v93(F67, F67); } catch (e) {}
    try { new v93(F88, F88); } catch (e) {}
    a90 + a90;
    try {
        this.h = 9007199254740990;
    } catch(e97) {
    }
    try {
        this.b = a90;
    } catch(e98) {
    }
}
const v99 = new F88(9007199254740990, 1);
function f100() {
    return v35;
}
function f101(a102) {
    try { v59.postMessage(v84, v57, a102, a102, f43); } catch (e) {}
}
Object.defineProperty(v99, "length", { enumerable: true, get: f100, set: f101 });
v99.length = v99;
const v104 = new F88(7, 9007199254740990);
const t129 = v104?.isPrototypeOf;
t129();
Math.asinh(9007199254740990);
