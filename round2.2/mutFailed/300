new Map();
/Qa[a-z]/guy;
/4(ab|cde)\1(a\nb\bc)/mu;
const v4 = /\p{Nd}(?:ab|cde)/gu;
function F8(a10, a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    function f14(a15) {
        const o16 = {
        };
        try {
            o16.e = Map;
        } catch(e17) {
        }
        try {
            const o18 = {
            };
            o18.e = Map;
            o18.b = 2147483649;
        } catch(e19) {
        }
        try {
            const o20 = {
            };
            o20.e = Map;
            o20.b = 2147483649;
            o20.d = a15;
        } catch(e21) {
        }
        try {
            const o22 = {
            };
            o22.e = Map;
            o22.b = 2147483649;
            o22.d = a15;
        } catch(e23) {
        }
    }
    Object.defineProperty(this, "f", { writable: true, configurable: true, enumerable: true, set: f14 });
    this.a = 53682;
    try {
        this.h = a12;
    } catch(e24) {
    }
    try {
        this.f = a11;
    } catch(e25) {
    }
    try {
        this.a = 53682;
    } catch(e26) {
    }
}
new F8(53682, 53682, 53682, 2147483649);
new F8(2147483649, 53682, 2147483649, -6);
new F8(-6, 2147483649, 53682, v4);
try {
    new Uint16Array(8);
} catch(e33) {
}
try {
    new Int16Array(4);
} catch(e37) {
}
try {
    new BigUint64Array(16);
} catch(e41) {
}
const v46 = ([1734019710,-Infinity,Map,Map]).length;
const o49 = {
    "type": "function",
};
const v51 = new Int8Array(4);
function f52(a53, a54) {
    return v51;
}
v51[Symbol.toPrimitive] = f52;
Math.cos(v46);
let v59 = !26120498;
Math.acosh(++v59);
