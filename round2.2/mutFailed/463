function f0() {
    const o2 = {
        ...f0,
        get e() {
            return this;
        },
        "g": f0,
        __proto__: f0,
    };
    return o2;
    const o10 = {
        "g": 536870889,
        12: "undefined",
        "e": f0,
        2147483648: "undefined",
        183: 536870889,
        "b": f0,
        ..."undefined",
        get a() {
            /[^123]*/myi;
            /Pa|b/mgsdvi;
            /bIA1\P{scx=Greek}/gsyi;
            return "undefined";
        },
        "d": -1000.0,
        __proto__: "undefined",
        [536870889]: "undefined",
    };
    return o10;
}
class C11 {
}
new C11();
("bigint").normalize();
const v15 = f0();
const v16 = f0();
const v17 = f0();
561.9191260543432 - 561.9191260543432;
let v22 = 127;
Int32Array.f = Int32Array;
try {
    new Int32Array(v22, Int32Array, v17, 27271.064629631932);
} catch(e25) {
}
try {
    new Int16Array(10);
} catch(e29) {
}
const v33 = v16 || -1000.0;
-1000.0 / -61083;
--v22;
const v36 = v33 + -1000.0;
let v37;
try { v37 = v36.italics(); } catch (e) {}
Math.log10(v22);
try {
    function f40(a41, a42) {
        [-2.0,-6.999305293325298,5.5334494800183,1000.0,2.0,0.7671207116579285,1000000.0,0.0];
        const v44 = [-337430.1008789826,4.0,-0.06974846651996103,-379379.8236026064];
        [6.902712815718456];
        return v44;
    }
    f40(f40, v37);
    new Uint32Array(512);
} catch(e48) {
}
try { Math.exp(10); } catch (e) {}
let v52 = -1.0;
v52++;
%VerifyType(v52);
try { Symbol(); } catch (e) {}
const v56 = Symbol.unscopables;
Symbol.for(v56.description);
v15[v56] = v22;
for (let v60 = 0; v60 < 32; v60++) {
    Math["p" + v60] = v60;
}
Math.pow(-9223372036854775807, v52);
