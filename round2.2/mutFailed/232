const v5 = [-1.7976931348623157e+308,Infinity];
try {
    v5.toLocaleString("NKXm", "NKXm");
} catch(e8) {
}
with ("bigint") {
    const t6 = "s";
    t6.length |= length;
}
function f16() {
    return f16;
}
const v17 = [-11,1024,-12102,536870887,2087293967];
const o18 = {
    __proto__: v17,
};
class C21 {
    static c;
    constructor(a23) {
        function f24(a25) {
            function f27(a28) {
                a23.__proto__;
            }
            this.onmessage = f27;
            with (o18) {
                let {"g":v32,} = e;
                const v34 = Symbol.iterator;
                const o43 = {
                    [v34]() {
                        let v36 = 10;
                        const o42 = {
                            next() {
                                v36--;
                                const v40 = v36 == 0;
                                const o41 = {
                                    "done": v40,
                                    "value": v36,
                                };
                                return o41;
                            },
                        };
                        return o42;
                    },
                };
            }
        }
        const v46 = ["function"];
        const o47 = {
            "arguments": v46,
            "type": "function",
        };
        new Worker(f24, o47);
    }
}
const v49 = new C21();
new C21(v49);
function f52(a53) {
    return 9007199254740990;
}
class C54 extends f52 {
    [-808166206] = "s";
}
const o61 = {
    set f(a58) {
    },
    set d(a60) {
    },
};
for (let v64 = 0; v64 < 10; v64++) {
    class C65 {
    }
    const v66 = [38662.40328402922,-198523.96142691502,-2.220446049250313e-16,-1000000.0,-5.0,-129096.9908578383];
    ([-1576198342,16,-12,1,-5,13,-4294967295,-128,-9,1493862325]).includes(-9223372036854775807, -9223372036854775807);
    function F70(a72, a73, a74) {
        if (!new.target) { throw 'must be called with new'; }
        this.g = a74;
        this.a = a72;
    }
    [C65,v66];
}
