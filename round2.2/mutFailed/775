function f2(a3, a4, a5) {
    a5.arguments = a5;
    return a4;
}
new Float64Array(Float64Array, Float64Array);
const v10 = Symbol.toPrimitive;
const o13 = {
    [v10]() {
        v10 + this;
        return -53541;
    },
};
o13.h = o13;
const v14 = [-1610290396,128,-648297534,4,-15,4294967297];
const v15 = [-9223372036854775808,10000,-7265,-61899,10,-1024,1,18603];
const v16 = [25010];
try { WeakSet.apply(o13, v16); } catch (e) {}
const v19 = new WeakSet();
try { v19.delete(v19); } catch (e) {}
function f21(a22, a23, a24, a25) {
    const o40 = {
        __proto__: v19,
        set b(a27) {
            for (let v28 = 0; v28 < 32; v28++) {
                a22["p" + v28] = v28;
            }
            new Float32Array(12);
            let v34 = 0;
            v34++;
        },
        "a": a23,
        "e": a22,
        [-2]: a24,
        valueOf(a37, a38) {
            v14.join(v15);
            return v14;
        },
        ...o13,
        "g": WeakSet,
        "b": a22,
        ...v16,
    };
    o40[0] = o40;
    return o40;
}
f21.d = f21;
const v42 = [-561367.0250811658,-2.220446049250313e-16,5.0,-5.332793456959677,-1000000000.0,-1000000000.0,1e-15,-964.0035813807732,1.0,-1.0];
function F43(a45, a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a47;
    } catch(e48) {
    }
    try {
        this.b = a47;
    } catch(e49) {
    }
}
const v50 = new F43(NaN, F43, v42);
try { v42.join(v50); } catch (e) {}
const v52 = f21(v16, v15, v16, 1453478926);
v52[0];
f21(v19, v16, -32124, 1453478926);
f21(-53541, v14, WeakSet, -53541);
class C56 {
    a;
    set b(a58) {
        function f60() {
            function F61(a63, a64, a65, a66) {
                if (!new.target) { throw 'must be called with new'; }
                this.e = a65;
            }
            class C67 {
            }
            return a58;
        }
    }
    constructor(a69, a70) {
        a69 >>> a69;
        a70 < a70;
        a69 <= this;
        super.g;
        super.g /= 1453478926;
        class C75 {
            o(a77, a78, a79, a80) {
            }
        }
        new C75();
        [6];
        [-818];
        const t88 = [129];
        t88[v52] += 1453478926;
    }
}
try { new C56(WeakSet, v16); } catch (e) {}
new C56(-53541, -32124);
new C56(-32124, -53541);
new C56(-32124, 1453478926);
const o91 = {
    ...F43,
};
class C92 {
}
new C92();
try { Int32Array(v15, Symbol, v15); } catch (e) {}
new Int32Array(949287958);
