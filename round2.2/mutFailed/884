let v0 = 9007199254740990;
let v1 = 268435439;
let v2 = -2147483648;
class C3 {
    g = v1;
    4294967295;
    constructor(a5) {
        ({"e":v0,"g":v1,"h":v2,} = this);
        let v6;
        try { v6 = new v0(v2, this, v2, a5); } catch (e) {}
        v2[this] &&= v6 | this;
    }
    #toString(a9) {
        try { a9(a9, this, v1); } catch (e) {}
        return 65536;
    }
}
const v14 = new C3(v2);
const v15 = new C3(v0);
const v16 = new C3(v0);
let v19 = new Array(0);
class C20 {
    b;
    constructor(a22, a23, a24, a25) {
        try {
            v19 = a23;
        } catch(e26) {
        }
    }
    #d;
    static {
        delete v15[4];
        new v15();
        let v30 = 1073741825;
        v30 *= 9007199254740992;
        const o36 = {
            ..."n",
            set g(a34) {
                try {
                } catch(e35) {
                } finally {
                }
            },
        };
        for (let [i44, i45] = (() => {
                [[55378,-15,2,290876069,4294967296,-1,-2,65537,-16,1650399133]];
                const v40 = [NaN,-4.0,-1000.0,-1000000.0,-4.442340764522288,-5.04383349707844e+307,-1.7976931348623157e+308,-1.7976931348623157e+308,8.400677120218507,-239767.44387590187];
                v40.concat([v40]);
                return [0, 10];
            })();
            i44 < i45;
            i44++, i45--) {
            try {
                new Uint32Array(1);
            } catch(e56) {
            }
            try {
                new Uint8Array(1024);
            } catch(e60) {
            }
            try {
                new Int8Array(1000);
                typeof -2.220446049250313e-16;
                const t62 = [729709.7062958758,0.6050821778172064];
                t62.length <<= 128;
            } catch(e68) {
            }
        }
    }
}
const v69 = new C20(v14, v14, v14, v15);
new C20(v15, v69, v15, v15);
new C20(v14, C20, v16, v15);
([-0.0]).toLocaleString(false);
