class C3 {
    o(a5) {
        this[5] = this;
        1.5083660628928862e+308 && this;
        try {
            a5.e = a5;
            Array(this);
            for (const v11 in 536870912) {
            }
        } catch(e12) {
        }
        return this;
    }
    static [536870912] = 304.6600253417714;
    #e;
    0;
    [304.6600253417714];
}
const v13 = new C3();
const v14 = new C3();
const v15 = new v13();
class C16 {
    static #f = C16;
    get e() {
        const v18 = super.g;
        function F19(a21, a22, a23, a24) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.c = v18;
            } catch(e25) {
            }
            try {
                this.a = a22;
            } catch(e26) {
            }
        }
        const v27 = new F19(v15, v13, v13, this);
        new F19(v27, v14, v14, v13);
        new F19(this, v14, v13, v14);
        return v13;
    }
}
new C16();
new C16();
new C16();
try {
    new Uint16Array(40);
} catch(e36) {
}
try {
    new Uint8ClampedArray(5);
} catch(e40) {
}
try {
    new Float32Array(2212);
} catch(e44) {
}
const v45 = [];
class C46 {
    static #p() {
        for (let v48 = 0; v48 < 5; v48++) {
            function f49() {
                return f49;
            }
        }
    }
}
const v50 = new C46();
try { v50["endsWith"]("endsWith", v45, 0.08537700316731323); } catch (e) {}
const o56 = {
    "maxByteLength": 6,
};
new SharedArrayBuffer(6, 304.6600253417714);
