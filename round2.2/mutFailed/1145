const v0 = -Infinity;
let v2 = 0.9401903262869492;
class C3 {
    constructor(a5) {
        try { new a5(a5); } catch (e) {}
    }
    static e;
    get c() {
        let v10 = ++v2;
        Math.sqrt(v0);
        const v12 = Math.sign(v0);
        Math.log(128);
        v2 & v0;
        v10++;
        return v12;
    }
}
C3.g = C3;
new C3(4294967296);
new C3(C3);
new C3(C3, v2);
class C25 {
    ["q2"] = 3.0;
    n(a27, a28) {
        const v29 = -4294967296;
        let v30;
        try { v30 = this.toString(3.0, v29, v29, "q2"); } catch (e) {}
        super[this];
        try {
            super.g = v30;
        } catch(e32) {
        }
        return a27;
    }
    [3.0] = "q2";
}
const v33 = new C25();
v33[3];
const v35 = new C25();
new C25();
function f40() {
    return C25;
}
function f41(a42) {
    ("m").__proto__;
}
Object.defineProperty(Array, "e", { writable: true, get: f40, set: f41 });
const v45 = new Array(512);
class C46 extends Array {
    o(a48) {
        const o49 = {
        };
        try {
            o49.g = v45;
        } catch(e50) {
        }
        try {
            const o51 = {
            };
            o51.g = v45;
            o51.e = this;
        } catch(e52) {
        }
        try {
            const o53 = {
            };
            o53.caller = v45;
            o53.e = this;
            o53.c = a48;
        } catch(e54) {
        }
        try {
            const o55 = {
            };
            o55.g = v45;
            try {
                C46 = o55;
            } catch(e56) {
            }
            try {
                o49.toString = a48;
            } catch(e57) {
            }
            o55.e = this;
            o55.h = a48;
        } catch(e58) {
        }
        return Array;
    }
}
C46.e = C46;
new C46();
const v60 = new C46();
v60[0] = v60;
try { v60.splice(C46, v45, -5850, "m"); } catch (e) {}
const v62 = new C46();
try { v62.values(); } catch (e) {}
function f64(a65, a66) {
    this.onmessage = -4294967296;
    function f68(a69) {
        ~C46;
    }
    this.onmessage = f68;
    [867.3915472371577,-311872.3332901179,-2.2250738585072014e-308,800.6146456097772];
    [0.6822435020154707,-436279.64433140587,2.2250738585072014e-308,-1.5041310085857756e+308,-492738.39164594];
    [0.19231757306288688,-3.0];
}
try { f64(f64, f64); } catch (e) {}
const v77 = [v62,"q2"];
const o78 = {
    "arguments": v77,
    "type": "function",
};
new Worker(f64, o78);
WeakMap.e = WeakMap;
new WeakMap();
try {
    const v84 = new Uint8ClampedArray(11);
    v84.valueOf = f40;
    v84[1] = v84;
} catch(e85) {
}
let v87 = Int8Array;
v87.g = v87;
try {
    new v87(129);
} catch(e89) {
}
try { new BigInt64Array(1073741825, -5850, o78); } catch (e) {}
try {
    new BigInt64Array(6, "q2", Worker);
} catch(e94) {
}
let v95 = 0;
while ((() => {
        const v97 = v95 < 10;
        !v97;
        return v97;
    })()) {
    try {
        const v100 = new Uint8ClampedArray(1760718952);
        v100[1656841714];
    } catch(e102) {
    }
    v95++;
}
-2 + -2;
class C106 {
    m(a108, a109, a110) {
        return a108;
        try { a110("q2", Set); } catch (e) {}
        Math.log1p(-5850);
        const v117 = -4.0 >> -5850;
        Math.sin(v117);
        return v117 || 65535;
    }
}
new C106();
const v121 = new C106();
new C106();
function f123(a124, a125, a126) {
    const o129 = {
        set f(a128) {
        },
        ...v35,
        "a": Array,
        ...v62,
        "e": f123,
        "h": -4294967296,
    };
    return o129;
}
-536870912n >> -536870912n;
Array(129);
try {
    v87 ^= v87;
} catch(e133) {
}
f123();
for (let i136 = 0; i136 < 0;) {
    Proxy(v121);
}
