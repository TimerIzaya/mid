new Map();
class C16 {
}
Object.defineProperty(C16, 268435441, { writable: true, enumerable: true, value: Int16Array });
const v18 = [16,50418,-1024,1597066917];
v18.ignoreCase = 2147483647n;
v18.lastIndexOf();
const v20 = /k/mgu;
function f21(a22) {
    ("a")[10];
}
Object.defineProperty(v20, "g", { writable: true, configurable: true, set: f21 });
v20.g = v20;
/a?/du;
const v25 = /1tD/msdu;
function F26(a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    a28.ignoreCase;
    const v31 = this?.constructor;
    let [] = "undefined";
    function f37(a38, a39, a40, a41) {
        a39 > a39;
        a40 >>> a40;
        a41--;
        const o46 = {
            9: 4,
            "b": a41,
            get e() {
            },
        };
        o46[Symbol.toPrimitive] = f21;
        return o46;
    }
    const v49 = f37(4, 536870887, 1816591506, 64);
    function f50() {
        return f37;
    }
    function f51(a52) {
        try { new Map(16n, 4, ...a52, ...9007199254740990n); } catch (e) {}
    }
    Object.defineProperty(v49, "valueOf", { writable: true, get: f50, set: f51 });
    f37(v49, 1816591506, 1816591506, v49);
    try { new v31(this); } catch (e) {}
    this.h = a28;
}
F26.toString = f21;
F26.toString().strike();
new F26(v25);
new F26(v18);
class C60 {
}
const v61 = new C60();
for (const v62 in v61) {
}
