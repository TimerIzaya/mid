function f0() {
    function f3(a4, a5, a6) {
        const o9 = {
            set f(a8) {
            },
        };
        return o9;
    }
    const v10 = f3();
    f3(v10, f3, v10);
    const o52 = {
        4294967296: "536870887",
        "d": -742357.9090837375,
        toString(a14, a15) {
            for (const v16 in "536870887") {
                super.g >>= a15;
                v16[3] = v16;
            }
            try {
                try {
                    new Uint16Array(255);
                } catch(e20) {
                }
                try {
                    new a14();
                } catch(e24) {
                }
                try {
                    new Float32Array();
                } catch(e28) {
                }
                let v34;
                try {
                const t0 = 257;
                v34 = t0(6804);
                } catch (e) {}
                async function* f35(a36, a37) {
                    const v38 = f0.__proto__;
                    var f = 1024;
                    const o39 = {
                    };
                    o39.h = 475706.3264717425;
                    const o40 = {
                    };
                    o40.d = 1000000000.0;
                    try {
                        const o41 = {
                        };
                        o41.g = v38;
                    } catch(e42) {
                    }
                    await a36;
                    yield 6;
                    return a36;
                }
                f35(Float32Array, v34);
                super.n("536870887", -742357.9090837375, a15, "536870887");
            } catch(e47) {
                const t58 = -742357.9090837375;
                const v48 = new t58(f0);
                "268435441" in v48;
                class C51 {
                }
            }
            return this;
        },
    };
    return o52;
}
f0();
const t69 = f0();
t69();
const o67 = {
    "maxByteLength": 1435,
};
const v69 = new SharedArrayBuffer(1435, o67);
new DataView(v69);
