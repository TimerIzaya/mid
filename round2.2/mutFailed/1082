const v0 = [1.7976931348623157e+308,-0.0,509304.9752100196];
const v1 = [2.220446049250313e-16,1000.0,-2.0,0.65747215072459,525686.1611219032,-758.468304613005,-1000000000000.0,1000000000000.0];
const v2 = [3.8542537755180852,681.9241226315698,1.0,4.0,4.692152027912378,627.5948268288735,1000000000000.0,-1.7976931348623157e+308];
function f3(a4, a5) {
    const o6 = {
        "a": v1,
        ...v1,
        "h": a4,
        "c": a5,
        [a5]: a4,
        "b": v1,
        7: a4,
        "f": a4,
        __proto__: v0,
        ...v0,
        128: v1,
        "e": a5,
        ...v1,
        "g": a4,
        "d": v1,
        "e": v1,
        ...a5,
        /*
        __proto__: a4,
        */
    };
    return o6;
}
const v7 = f3(v1, v1);
const v8 = f3(v1, v1);
const v9 = f3(v2, v2);
function f10() {
    return v0;
}
const v11 = [f10,v2,f3];
let v12 = [v11,v0];
const v13 = [f10,v12,v0];
class C14 extends f10 {
    constructor(a16, a17, a18, a19) {
        super();
        Math.pow(v13, v13);
        1024 || v12;
        v12 & v12--;
    }
    #f;
    static #b = v1;
    static #g = f10;
    static [v0];
}
new C14(v7, v12, v11, v8);
new C14(v0, v12, v11, C14);
new C14(v7, v9, v11, v7);
let v32;
try {
const t0 = "valueOf";
v32 = new t0();
} catch (e) {}
try {
    Float32Array(4096);
} catch(e36) {
}
([64,3,10,14,268435441,-321778196,33616,65536,-9007199254740991]).unshift();
["valueOf",4096,Float32Array];
[4096,Float32Array];
try {
    Int16Array(Int32Array);
    class C49 extends Int32Array {
        constructor(a51) {
        }
        #h = Int16Array;
    }
    new C49();
} catch(e53) {
}
class C56 {
}
const v57 = new C56();
const v58 = v57?.__defineSetter__;
try { v58(C56, Int16Array); } catch (e) {}
for (let v61 = 0; v61 < 25; v61++) {
}
gc();
function f65(a66, a67, a68, a69) {
    const o70 = {
    };
    return o70;
}
if (v32) {
    Reflect.construct(Uint32Array, [4,64,64]);
}
const v74 = f65(Int32Array, 2, 1, 4);
class C77 extends Uint8Array {
    g = 5;
}
function F78(a80, a81, a82) {
    if (!new.target) { throw 'must be called with new'; }
}
new F78(F78, F78);
let v84 = 10;
for (; v84--;) {
}
f65(v74, 4);
const t101 = [-2.2250738585072014e-308,1.5867612318974208e+308,-1.5401430863213223e+308,-66487.31988072337,-8.274702295136258,-3.0,1000000.0];
t101.f = Uint32Array;
