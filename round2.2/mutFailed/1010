try {
    new Uint32Array(629);
} catch(e3) {
}
try {
    new Uint8Array(244);
} catch(e7) {
}
try {
    new BigInt64Array(6);
} catch(e11) {
}
class C15 extends Uint8Array {
    [6];
    constructor(a17, a18, a19, a20) {
        super(a19, a17, a19);
        try { a20.toString(); } catch (e) {}
        try {
            super[244] = 1073741824;
        } catch(e22) {
        }
        super.with(1073741824, a18);
    }
    static d;
    static 4294967296;
    #b;
}
const v24 = new C15(6, 6, -1, -1);
const v25 = new C15(Uint8Array, 1073741824, 244, v24);
v24[9] ||= 6;
BigInt64Array >> 629;
try { v24.forEach(Uint32Array, C15); } catch (e) {}
try {
    v24[-1] = C15;
} catch(e28) {
}
new C15(Uint32Array, 1073741824, -1, v25);
([NaN,1000.0,2.2250738585072014e-308,4.563977870137233,1000.0,1000000000000.0,0.439572514002633])["sort"](Array);
