class C3 {
    static ["-2"];
    constructor(a5) {
        new Array(2818);
        a5[2818] >>= 2818;
    }
    static {
        let v9 = this;
        Math.min(-11);
        Math.trunc(v9++);
    }
}
const v15 = new C3("3");
const v16 = new C3(v15);
new C3("charAt");
try {
    new Int8Array(2943);
} catch(e21) {
    delete v16[64];
    const o25 = {
        "maxByteLength": 129,
    };
    const v27 = new SharedArrayBuffer(4, o25);
    try {
        new Uint16Array(v27);
    } catch(e30) {
    }
}
try {
    new Int8Array(1841);
} catch(e34) {
}
try {
    new Uint32Array(1000);
} catch(e38) {
}
const v42 = [-2.2250738585072014e-308,-2.2250738585072014e-308];
const v44 = new Set();
function f47() {
}
let v48;
try { v48 = v42.findLast(f47, v42); } catch (e) {}
Object.defineProperty(v42, Set, { value: 857232994 });
try {
    v44.entries();
} catch(e50) {
}
("-2").length;
try {
    v42.reduceRight(f47, ["-2",v42,-2.220446049250313e-16,2943,4.520830444566471]);
} catch(e54) {
}
try { v48(1000n); } catch (e) {}
