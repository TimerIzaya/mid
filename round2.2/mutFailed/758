const v0 = [];
[v0,[v0]];
[v0];
new Map();
try {
    new BigInt64Array(3);
} catch(e12) {
}
try {
    new Uint16Array(4058);
} catch(e16) {
}
function f19(a20, a21) {
    const o22 = {
        ...a20,
        "a": 1000000000000.0,
        [1000000000000.0]: a20,
    };
    return o22;
}
f19(1000000000000.0);
try {
    new Int16Array(258);
    const o28 = {
    };
    o28.execution = v0;
    class C29 {
    }
    536870889n << 536870889n;
    new Int32Array([-1.7976931348623157e+308,0.6968499374219972,3.0,2.220446049250313e-16,0.047053379102353854,0.25658787075451894,-1000.0]);
    o28.type = 82;
    function F35() {
        if (!new.target) { throw 'must be called with new'; }
        this.c = 4294967296;
        try {
            this.c = 822223171;
        } catch(e38) {
        }
    }
    const v39 = new F35();
    const v40 = new F35();
    const v41 = new F35();
    function f42(a43, a44) {
        const o54 = {
            "f": v39,
            p(a46, a47, a48, a49) {
                class C50 extends F35 {
                    5;
                }
                new C50();
                new C50();
                const v53 = new C50();
                return v53;
            },
        };
        return o54;
    }
    const v55 = f42(v41, v40);
    f42(v40, v39);
    const v57 = [536870887,-2147483648,38638,4294967295];
    const t60 = [1,268435456,-17443,-32622,512,255,-7880468,3];
    t60[3702013189] = v57;
    const o61 = {
        set f(a60) {
        },
    };
    new C29(v40, v55);
    gc(o28);
} catch(e64) {
}
function f65() {
    const v69 = ("xqH7").normalize();
    function f71() {
        const o74 = {
            "e": 2147483647,
            129: "-4096",
        };
        return o74;
    }
    Object.defineProperty(f71(), "h", { configurable: true, get: f71, set: f71 });
    function f77() {
        function f78() {
            function F79() {
                if (!new.target) { throw 'must be called with new'; }
            }
            F79 >= Uint16Array;
            return 1000000000000.0;
        }
        return f78;
    }
    function f82(a83) {
        class C85 extends Float64Array {
        }
        new C85();
    }
    Object.defineProperty(Int8Array, "toString", { writable: true, configurable: true, get: f77, set: f82 });
    ("o").toLocaleUpperCase();
    Date.UTC().constructor;
    const o92 = {
        [Int8Array]: 1,
    };
    const o102 = {
        "e": 2147483647,
        129: "-4096",
        valueOf(a94, a95, a96, a97) {
            return v69;
        },
        [3](a99, a100) {
            delete a100?.h;
        },
    };
    return o102;
}
const v103 = [0.6917663306378821,7.964404708275576e+307];
const v104 = [404160.84300830355,5.0,0.9365490307246082,-1.7976931348623157e+308,717139.3851262208,-5.0,-2.2250738585072014e-308,0.22735776552706988];
try { v104.toLocaleString(v103); } catch (e) {}
function f106() {
    const o115 = {
        valueOf(a109, a110) {
            /Ta||bc/msui.test(Float32Array);
            function f114() {
                return f114;
            }
        },
        9: "0",
    };
    return o115;
}
f106();
class C117 extends f106 {
    static {
        eval();
        eval("");
    }
    constructor(a124) {
        super();
        Reflect.construct(f106, []);
    }
}
let v129;
try { v129 = undefined.repeat(); } catch (e) {}
if (v129) {
}
class C131 {
    static #p(a133, a134, a135, a136) {
    }
    valueOf(a138, a139, a140, a141) {
        try {
            ("cu").#p();
        } catch(e143) {
        }
    }
}
new C117();
for (let v145 = 0; v145 < 10; v145++) {
    Object.defineProperty(f65(), "h", { configurable: true, get: f65, set: f65 });
}
([-2.5498032935394535e+307]).toLocaleString();
class C149 {
}
Array[Symbol.match] = f106;
Array[Symbol.match] = -9223372036854775807;
new Int32Array(949287958);
this[1530] = 16;
