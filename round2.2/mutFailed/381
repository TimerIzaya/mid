let v3 = 0;
while (v3 < 9) {
    v3++;
}
function f13() {
    Object.defineProperty([[]], 6, { configurable: true, value: 2n });
    function f17() {
        return f17;
    }
    class C18 extends f17 {
        static [f17];
    }
    return -2n;
}
const v21 = new Int8Array(4096);
const v22 = [255];
v21[-2];
Object.defineProperty(v22, 1000n, { writable: true, enumerable: true, value: f13 });
Math.acosh(f13);
const v29 = --f13;
Math.tan(3.0);
!f13;
Math.min(v29);
function f33(a34, a35, a36) {
    a36[a35.matchAll] = v22;
    Symbol.split;
    return a35;
}
class C46 {
    static #e = 0;
    static a;
    static #d;
}
new C46();
new C46();
new C46();
const v51 = [-1000000000.0,-474543.5428367342,-2.0,-1.5059691624765054e+308,-508962.78678965976,757.7053565895317,0.0,790.2898938093756,2.2250738585072014e-308,-1.0945802631095708e+308];
for (let i = 0; i < 5; i++) {
    let [...v53] = v22;
    let v54;
    try { v54 = v53.m(v53, f13, v53, f13); } catch (e) {}
    try {
        Symbol[84] = v54;
    } catch(e55) {
    }
    const t45 = 32688;
    const v58 = t45()[Symbol.split];
    const v61 = [Uint16Array,Int8Array];
    try { v58.m(v61); } catch (e) {}
    v61 >= Uint16Array;
    const o64 = {
        "g": v54,
    };
    !-1n;
    let [] = v51;
}
