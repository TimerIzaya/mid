class C3 {
    [-1.0];
    #o(a5) {
        const o9 = {
        };
        try {
            new Proxy("X", o9);
        } catch(e12) {
        }
        return 6;
    }
    b;
}
try { new C3(); } catch (e) {}
const v14 = new C3();
const v15 = new C3();
const v16 = new C3();
try { v16.toLocaleString(); } catch (e) {}
try {
    const t19 = -50122;
    t19.b = 6;
} catch(e19) {
}
try {
    v14.b = v15;
} catch(e20) {
}
-2147483647 - -2147483647;
const v24 = [2147483647,268435456,-160463299,-806512449,14165];
let v25 = [-62355,-64406,3,-1024];
try { v25.toReversed(); } catch (e) {}
const v27 = [2,63580,746238109,-1,10,-52252,-9007199254740991];
function f28() {
    return v24;
}
const v29 = [v14,v27,C3,6,v14];
const v30 = [5,v15];
try { v30.map(v30); } catch (e) {}
[v15];
function F33() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        function f36(a37, a38) {
            function f40(a41) {
                try {
                    v25 = this;
                } catch(e42) {
                }
            }
            this.onmessage = f40;
            v29.length /= -1.0;
        }
        const v48 = [268435456,C3];
        const o49 = {
            "arguments": v48,
            "type": "function",
        };
        new Worker(f36, o49);
        this.f = 268435456;
    } catch(e51) {
    }
    try {
        this.c = 268435456;
    } catch(e52) {
    }
    try {
        this.h = 268435456;
    } catch(e53) {
    }
}
F33.d = F33;
const t71 = 6;
new t71();
const v55 = new F33();
v55.f = v55;
Math.round(975.7954728229099);
const v61 = +1073741823;
Math.min(975.7954728229099);
-v61;
const v64 = new F33();
v64.f;
const v66 = [0.27357153605087436,-4.0,-708732.5224868315];
const v67 = [1.4193569084661582e+308,-3.0,-1000000000000.0,-1000000000.0,5.0,NaN,495994.00559417787];
const v68 = [-2.0,-6.819658699695559,0.7210595588355979,-5.7284975524704755,-0.0];
class C69 {
    static n(a71, a72, a73, a74) {
        return v67;
    }
}
try { C69.apply(f28, f28); } catch (e) {}
const v76 = new C69();
v76.m = C69;
let v77;
try { v77 = v76.m(v64); } catch (e) {}
try { v77(v55, v77, v66); } catch (e) {}
f = v68;
