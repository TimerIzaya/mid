try {
    new Uint32Array(3608);
} catch(e3) {
}
try {
    const t5 = 3608;
    new t5(512);
} catch(e7) {
    function f8(a9, a10) {
        try {
            new Float64Array(127);
        } catch(e14) {
        }
        try {
            new Uint32Array(3700);
            function* f18(a19, a20, a21) {
            }
            let v23 = 46626n;
            v23 **= 5n;
            new Int32Array();
            new Uint8ClampedArray([49522]);
        } catch(e29) {
        }
        try {
            new BigInt64Array(8);
        } catch(e33) {
        }
        return 3700;
    }
    f8(512, f8);
}
try {
    new Uint8Array(Uint32Array);
} catch(e38) {
}
function f39() {
    return 512;
}
function f45(a46, a47, a48) {
    return a48;
}
class C49 extends f45 {
    static {
        super.h |= 1053050818;
        this.h = 2147483649;
    }
}
class C51 {
    4 = -1292453399;
    constructor(a53, a54, a55) {
        super();
        this.copyWithin(a55, a54);
    }
    /*
    constructor(a58, a59) {
        let v57 = this;
        try {
            v57 &= a59;
        } catch(e60) {
        }
    }
    */
    toString(a62, a63) {
        Object.defineProperty(this, 4, { value: C51 });
        for (let v65 = 0; v65 < 32; v65++) {
            this["p" + v65] = v65;
        }
        try {
            new BigInt64Array(BigInt64Array);
        } catch(e71) {
        }
        ("valueOf")["localeCompare"]("localeCompare", "-47923");
    }
    #c = f39;
    #valueOf(a75, a76) {
    }
    /*
    constructor(a78, a79) {
        [a79,arguments];
    }
    */
}
new C51();
