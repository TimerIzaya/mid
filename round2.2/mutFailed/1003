const v0 = [-250919.09721316653,349.6412551451242,8.77805619563901,-2.625331034542131,-1000000000.0,-1e-15,1.26258416531873e+308,0.13084785791022435];
const v1 = [1.0,0.9853746099006571,-1000.0,0.8677642990192607,2.2250738585072014e-308,1000000000.0,-4.346551438668433,-1e-15,2.220446049250313e-16];
[-5.0,368.41789626425157,-1000.0,-7.134250828428311e+307,5.678202758174608,-1000.0,0.9965485520397406,-5.1647950500716515,5.0];
function f3() {
    return f3;
}
const v4 = [1e-15,-5.0,-1000000000000.0,-5.972686936111036e+307,-1.275814996674151e+308];
v4.unshift(v4, undefined);
[1.2945696000467763e+307,-1.2221204347694377e+308,6.133816054570771e+307,-1.7030195909916845e+308,-790.2302712947977,1.7976931348623157e+308,78.08125605014834,789.4714305357345,-801383.2262207436,-2.0];
v1[512];
function F11() {
    if (!new.target) { throw 'must be called with new'; }
}
new Uint8ClampedArray();
for (const v24 in "string") {
}
const v25 = [-1,-1073741824,4294967295];
const v26 = [1480653349,-256,-10,1073741825,55342959];
const v28 = new Set();
class C29 extends Set {
    static 216 = v4;
    #b;
    a = v25;
    static #m(a31) {
        try {
            v26.toString = a31;
        } catch(e32) {
        }
        try {
            super[this] = v0;
        } catch(e33) {
        }
        return v28;
    }
}
const v34 = new C29();
const v35 = new C29();
try { v34.keys(); } catch (e) {}
v35[v26] **= 593320742;
class C38 {
    constructor(a40, a41) {
        ("string").lastIndexOf("valueOf", 9);
        const v46 = [-222.92643044002784,Infinity,-1000000000000.0,-840.9159553999352,-6.6051039197093475,1.0,-3.848917906236722e+307,1000.0,-2.220446049250313e-16,2.0];
        [v46,"64",v46,"string"];
        this[this] = a41;
        Uint32Array[Symbol.iterator] = f3;
        try {
            new Uint32Array(Uint32Array);
        } catch(e52) {
        }
    }
}
const v53 = new C38(C38, C38);
class C55 extends v53.constructor {
    h = -13;
}
new v53();
