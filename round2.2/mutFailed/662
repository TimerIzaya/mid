function F2(a4) {
    if (!new.target) { throw 'must be called with new'; }
    a4 * a4;
    const v6 = this.constructor;
    try { new v6(this); } catch (e) {}
    a4 != a4;
}
try {
    try {
        new Int32Array(2097);
    } catch(e12) {
    }
    try {
        new Uint32Array(110);
    } catch(e16) {
    }
    try {
        new Uint16Array(103);
    } catch(e20) {
    }
    new Uint8Array(2097);
} catch(e22) {
}
const v25 = new Int8Array(129);
const o56 = {
    set b(a28) {
        1073741825 in this;
        try {
            new Float64Array(2097);
        } catch(e36) {
        }
        try {
            new BigUint64Array(64);
        } catch(e40) {
        }
        try {
            super.valueOf(64, 1073741825, 129, a28, 1198101031n);
        } catch(e42) {
        }
        const v44 = [Float64Array,this];
        Reflect.apply(this.findLast, v25, v44);
        const o52 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o52);
        try {
            new BigInt64Array(4);
        } catch(e55) {
        }
    },
};
let v57 = 6;
v25[1073741825];
try {
    v57 &= v57;
} catch(e61) {
}
try {
    new Float64Array(v57);
} catch(e63) {
    gc();
    class C68 {
        ["1907013482"] = 443.91452255485115;
        5;
        0 = "1907013482";
    }
}
class C69 {
}
("YgfbU").normalize();
function F72(a74, a75) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a74;
}
const v76 = new F72(129);
try {
    c.__proto__ = v76;
} catch(e77) {
}
try {
    new c(836);
} catch(e81) {
}
function f83(a84, a85) {
    const o89 = {
        "e": a84,
        get d() {
            return this == a85 ? this : a85;
        },
        "g": a84,
        "h": 836,
        __proto__: a85,
        "a": Float64Array,
        1024: Uint8Array,
        "f": a85,
        "c": Uint8Array,
        ...a85,
    };
    return o89;
}
const v90 = f83(129, Uint8Array);
let v91 = f83(2097, v57);
const v92 = new Float64Array(v91, v57, 836);
let {"byteOffset":v93,} = v92;
try {
    v91 = v90;
} catch(e94) {
}
f83(2097, false);
[-634738723];
[1000,9223372036854775807,-536870912,935615338,59287,-13];
[-3,536870889,129,-1,5512,7,15,4294967297,1073741825];
new v91();
const v103 = `
    function f104() {
        return f104;
    }
`;
class C105 {
    get b() {
        delete this?.e;
    }
}
/D\c~/sd;
