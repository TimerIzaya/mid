function f0() {
    const o9 = {
        [0.7656063034897986]: "d",
        __proto__: "d",
        5: 0.7656063034897986,
        1: -2147483647,
        get f() {
            ("d").length;
            const v7 = Symbol.toPrimitive;
            ("d")[v7];
            return v7;
        },
        "a": "d",
    };
    function f10(a11) {
        let v12 = 11;
        --v12;
    }
    Object.defineProperty(o9, "fuck", { writable: true, enumerable: true, set: f10 });
    return o9;
}
const v14 = f0();
v14.fuck = f0;
const v15 = f0();
const v16 = f0();
v16[5];
class C18 {
    static #n(a20) {
        try {
            v14.__proto__ = v16;
        } catch(e21) {
        }
        return v16;
    }
    m(a23, a24) {
        try {
            super.p(v15, 441.45698879726365, v15, a24);
        } catch(e29) {
        }
        return v16;
    }
}
const v30 = new C18();
function f31(a32, a33) {
    function f36(a37, a38) {
        const o39 = {
            [a38]: 1000.0,
            "g": a38,
            3329: -4.0,
        };
        return -4.0;
    }
    const v40 = f36();
    function f41(a42, a43, a44, a45) {
        const o47 = {
            get a() {
                return v40;
            },
            __proto__: a42,
            ...a42,
        };
        return a44;
    }
    return v16;
}
v30.constructor = f31;
const v48 = v30?.constructor;
try { new v48(); } catch (e) {}
new C18();
new C18();
new Array(1564);
257 >>> 257;
try {
    new Int32Array(257);
} catch(e59) {
}
Uint16Array.BYTES_PER_ELEMENT;
try {
    new Uint16Array(1614);
    try {
        v14.fuck(-1692612483n, 1, v30);
    } catch(e70) {
    }
} catch(e71) {
}
try {
    const v74 = new Int16Array(8);
    function f75() {
        return f31;
    }
    function f76(a77) {
        function f78(a79, a80) {
            a80(a79);
            return a79;
        }
    }
    Object.defineProperty(v74, Symbol.toPrimitive, { configurable: true, get: f75, set: f76 });
    v74.valueOf = f0;
    v74[5] = v74;
} catch(e84) {
}
const v85 = [];
try { v85.findLast(v85); } catch (e) {}
v85.includes(-9223372036854775807, -9223372036854775807);
