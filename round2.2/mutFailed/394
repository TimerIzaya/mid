let v0 = 128;
try {
    new Uint16Array(v0);
} catch(e3) {
}
try {
    new Uint8Array(24);
} catch(e7) {
}
let v9 = Uint16Array;
try {
    new v9(129);
} catch(e11) {
}
try {
    v0 = 24;
} catch(e13) {
}
try {
    v9 = Uint16Array;
} catch(e14) {
}
const v15 = new WeakMap();
class C16 extends Uint8Array {
    static set d(a18) {
        const v20 = super.toSorted(this.g);
        v20 > v20;
    }
    [v0] = 24;
    5;
    static [C16] = v15;
    static #h;
    static 5 = 129;
    #d = Uint8Array;
    [Uint8Array] = WeakMap;
    static f;
}
new C16();
new C16();
new C16();
let v29 = eval;
const v30 = v29("");
v29(v30);
v29 -= v30;
