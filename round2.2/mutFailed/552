function f0() {
}
const v1 = /(?:a*)*/mgsv;
const v2 = /zg(\1a)(ab|cde)\1/gduyi;
/Ebh9\cA.+/mgu;
[4,-1073741824,1073741824,56556,-1,257,-2147483647,4096,-4];
const v6 = [188730596,-25876,16,-2147483648,14];
[49100];
try {
    new BigUint64Array(817);
} catch(e11) {
}
try {
    const v14 = new Float64Array(8);
    try { v14.entries(); } catch (e) {}
} catch(e16) {
}
BigUint64Array.d = BigUint64Array;
try {
    const v19 = new BigUint64Array(4);
    try { v19.slice(v1, v2); } catch (e) {}
} catch(e21) {
}
116222.5467369433 >>> 116222.5467369433;
class C26 {
    2873886967 = "f";
    static {
        let v27 = this;
        v6.d = v27;
        try {
            v27 |= v27;
        } catch(e28) {
        }
    }
    [-4.0];
    static #m(a30) {
    }
}
try { new C26(); } catch (e) {}
const v32 = new C26();
const v33 = new C26();
const v34 = v33[2873886967];
const v35 = new C26();
class C36 extends C26 {
    constructor(a38, a39, a40) {
        super();
        try { new v34(); } catch (e) {}
        const v43 = Symbol.iterator;
        const o45 = {
            [v43]() {
            },
        };
        o45.d = o45;
    }
}
const v46 = new C36(v35, v33);
v46[2873886967];
const v48 = new v46();
function F49(a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    const v53 = this?.__defineGetter__;
    try { new v53(this, a52); } catch (e) {}
}
const v55 = new F49();
v55.length = v55;
if (!v48) {
    throw v32;
}
try {
    [F49,v32];
    v55.fuck();
} catch(e58) {
}
