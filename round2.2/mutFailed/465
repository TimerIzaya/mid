function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 1073741824;
    } catch(e3) {
    }
}
const v4 = [-2.2250738585072014e-308,1000.0,-317770.80357727257,2.220446049250313e-16,Infinity];
v4.b = F0;
const v5 = [1073741824,-9007199254740991,8,1073741824,3,3,-1239223627,-65537,48309];
const v6 = [-60487,536870889,65536,-8];
function f7() {
    return v5;
}
class C8 extends f7 {
}
const v9 = new C8();
const v10 = new C8();
v10[14] = v4;
let v11;
try { v11 = v10.reduce(v4); } catch (e) {}
class C12 {
    constructor(a14, a15, a16) {
        function f17(a18, a19) {
            const v20 = [v11,v10,a19];
            const v21 = [v20,a19,v20];
            [a19,v21,a16,this,v21];
            return a14;
        }
        a15[Symbol.toPrimitive] = f17;
        a14[1];
        -a15;
    }
}
try {
    new Int32Array(4);
} catch(e30) {
}
new C12(v6, v4);
v9[14] = v10;
const o34 = {
    set b(a33) {
    },
};
for (let v35 = 0; v35 < 5; v35++) {
    v35 < 1;
    v35++;
}
v6.length = 77;
const v40 = new F0();
const v41 = new F0();
v41.e;
const v43 = new F0();
v43.b = v11;
1073741823n % 1073741823n;
const v48 = [1e-15,-5.0,-1000000000000.0,-5.972686936111036e+307,-1.275814996674151e+308];
v48[6] = v41;
v48.unshift(v48, undefined);
const o53 = {
    valueOf() {
        try {
        } catch(e52) {
        }
    },
};
6n % 6n;
function F55(a57, a58, a59) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = Int32Array;
    Symbol.match;
    function f64(a65, a66, a67, a68) {
        const o69 = {
            __proto__: a67,
        };
        return Float32Array;
    }
    f64("n0qBZ", f64(), Float32Array);
    const v72 = this?.constructor;
    try { new v72(536870887n, a58, a58); } catch (e) {}
    a57.b = a57;
    try {
        this.b = a57;
    } catch(e74) {
    }
    try {
        this.h = v40;
    } catch(e75) {
    }
}
try { new F55(v4, v4, 77); } catch (e) {}
const v77 = new F55(v41, v41, v40);
new F55(v43, 536870887n, v77);
new F55(v43, v41, F0);
for (let i = 0; i < 25; i++) {
    new Uint8ClampedArray();
}
