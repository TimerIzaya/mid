class C3 {
    constructor(a5, a6) {
        a6[1] = 1;
        this[1];
        (-2.2250738585072014e-308).length;
        [-536870912,4294967295,536870887,-883582259,-1547980108];
        [-135716250,-9007199254740991,-58674,256];
        const t3 = [4,-65537,1073741823];
        t3[2] = a6;
    }
    [1] = "toUpperCase";
    #d = 1;
    static #c;
    #h;
}
C3[1] = -2.2250738585072014e-308;
try { new C3(1, "toUpperCase"); } catch (e) {}
const v13 = new C3(C3, C3);
C3[1] = v13;
const v14 = new C3(1, "toUpperCase");
const v15 = new C3(C3, v14);
try {
    new Uint8Array(49);
} catch(e19) {
}
256 >> 256;
try {
    new Uint8Array(256);
} catch(e24) {
}
116 !== 116;
try {
    const v28 = new Int16Array(116);
    try { v28.find(1); } catch (e) {}
} catch(e30) {
}
function f31() {
}
class C32 extends f31 {
    constructor(a34, a35) {
        super();
        function f36(a37) {
            function f38(a39) {
            }
            return C32 = f38;
        }
        const o42 = {
            "type": "function",
        };
        Object.defineProperty(o42, "arguments", { configurable: true, value: o42 });
        new Worker(f36, o42);
    }
}
new C32();
const o46 = {
};
o46.f = o46;
const v47 = v15.propertyIsEnumerable("charAt");
v47 || v47;
