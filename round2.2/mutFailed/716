const v3 = /a(?:b)6\p{General_Category=Decimal_Number}/mgdy;
const v4 = /(?:ab)?eabc+?/mdvy;
const v5 = /[(?<a>(?<b>(?<c>(?<d>.).).).)(x)(x)(x)\1]/msuyi;
const v7 = new Map();
function F8(a10, a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = v4;
    } catch(e14) {
    }
}
const v15 = new F8(v4, v4, -1000000000.0, v4);
new F8(v15, v5, 3.0, v3);
new F8(v7, v4, -1000000000.0, v3);
class C21 extends Int16Array {
    constructor(a23, a24, a25) {
        super();
        this.copyWithin(a25, a24);
    }
    /*
    constructor(a28, a29, a30) {
        const v31 = this.constructor;
        try { new v31(); } catch (e) {}
    }
    */
    /*
    constructor(a34) {
        `number${a34}toISOString${this}species`;
        try { a34(); } catch (e) {}
    }
    */
}
new C21(4096, 4096, 3116);
