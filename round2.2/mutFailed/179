function F3() {
    if (!new.target) { throw 'must be called with new'; }
}
[1.3134437051764952e+308,1e-15,-3.0,-2.1629377040710055e+307,198453.04015245452,-1000000.0,-1000000000000.0] >>> -65536;
class C8 {
    #p(a10, a11) {
        const v12 = super.h;
        try {
            super[v12] = 536870887;
            function F13() {
                if (!new.target) { throw 'must be called with new'; }
            }
            function F15(a17, a18) {
                if (!new.target) { throw 'must be called with new'; }
            }
            class C19 extends F15 {
                [F13];
            }
        } catch(e20) {
        }
        let v21 = Uint8ClampedArray;
        v21--;
        return -4294967295;
    }
    static #h;
    [10];
    constructor(a24, a25, a26, a27) {
        super(-4294967295, a25, a24);
        let v28;
        try { v28 = this.subarray(a26, -4294967295); } catch (e) {}
        const v29 = delete this?.byteLength;
        try {
            v28.toString = v29;
        } catch(e30) {
        }
    }
    792060629 = -4294967295;
    [-4294967295];
    static g;
}
C8.length;
const v32 = new C8();
v32[792060629];
new C8();
const v35 = new C8();
v35[792060629];
let v38 = 256;
v38++;
"boolean" == "boolean";
-17600 & -17600;
const v48 = [-680147.9390065788];
v48.fill(v48, 2147483648, -17600);
