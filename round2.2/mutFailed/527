[];
new WeakMap();
const v3 = [-1000000000.0,1.0,7.958018680768056,-0.0,1e-15,1000000.0,1000000.0,8.091768917183828e+307,7.7568417485016];
[3.0,0.15654002140122014,-6.9065394217419644,-363198.5444040948];
const v5 = [-504.7155965087255,-1e-15,-1000000.0,5.591908320085715e+307,-1000000000.0,751.9544818399099,1e-15,-2.0,0.7284586994687774,-1e-15];
const v9 = [3.0,0.0,-1.0,-390.08146994127355];
[893206.9754198024,0.02121236339559862,-1000000000000.0];
const v11 = [1000000000.0,2.304853840724025e+307,1000000000.0,-Infinity,-1.0,0.28043539901205605];
class C12 {
    set f(a14) {
        Math.tan(a14);
    }
}
const v17 = new C12();
const v18 = new C12();
class C19 extends C12 {
    n(a21, a22) {
        v17.f = this in v18;
    }
}
const v24 = new C19();
v5 ** v24;
let [...v26] = v3;
let v27;
try { v27 = v26.trimRight(WeakMap, v5, v9, v5); } catch (e) {}
Reflect.construct(v27, [v11,C19], WeakMap);
const v31 = new C19();
const v33 = [v24,v24,v24];
Reflect.apply(v31.n, v24, v33);
