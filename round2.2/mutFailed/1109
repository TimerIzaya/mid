class C3 {
    #d;
    h = "3";
    n(a5) {
        try {
            super[this] = "-10";
        } catch(e6) {
        }
        try {
            this.#d &= this;
        } catch(e7) {
            const v9 = new WeakMap();
            class C10 extends C3 {
                b = v9;
                set a(a12) {
                    super.c &&= a12;
                    const o13 = {
                    };
                    try {
                        Proxy(v9);
                        class C16 {
                            valueOf(a18, a19) {
                            }
                        }
                    } catch(e20) {
                    }
                }
                static valueOf(a22, a23) {
                }
                d;
                constructor(a25, a26, a27, a28) {
                    super();
                }
                #e;
                static 268435441;
            }
        }
        return "-10";
    }
}
const v29 = new C3();
new C3();
new C3();
class C33 extends C3 {
    #toString(a35, a36, a37, a38) {
        const v39 = this.h;
        try {
            C3[-2] = v39;
        } catch(e40) {
        }
        return "-10";
    }
    E = v29;
    static 9;
}
new C33();
function f42() {
    return f42;
}
function f43() {
}
C33[f43] %= f43;
new C33();
new v29();
try {
    new Int16Array(126);
} catch(e49) {
}
try {
    new Uint16Array(403, null, "3", C33);
} catch(e53) {
}
try {
    new Int16Array(129);
} catch(e57) {
}
class C58 extends Int16Array {
    n(a60, a61, a62) {
        super.slice(126, 403);
        let v65 = -65536;
        v65++;
        gc();
        f43(f43, f43, f43);
        return this[ArrayBuffer.replace];
    }
    #g = 403;
    constructor(a73, a74, a75, a76) {
        super(126, a74, a73);
        function F77() {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = -2147483647;
            } catch(e80) {
            }
            try {
                this.f = -2147483647;
            } catch(e81) {
            }
            try {
                this.h = -2147483647;
            } catch(e82) {
            }
        }
        let v83;
        try { v83 = this.subarray(a75, 129); } catch (e) {}
        const v84 = delete this?.byteLength;
        try {
            v83.toString = v84;
            const o89 = {
                "h": -2.220446049250313e-16,
                ...65537,
                get g() {
                },
                "g": -2147483648,
            };
        } catch(e90) {
        }
    }
}
const v91 = new C58(129, 129, 126, 403, 126, C58, 129);
let v92 = new C58(129, 403, 126, 129);
let v93 = new C58(126, 129, 403, 403);
const v94 = [1717804318,2147483649,271900802,1901566192,-536870912,-25703];
[-14,913866214,-65537,1073741825,2147483647,10000,-4294967297,4294967297,-65536,65537];
[32903393,536870889,-64982,10,-9783,7,10,-4,-5];
[-2.0];
[1000.0,727.6267580273732,-1000000.0,-4.524552355079856];
[352.8316382959554,3.8347420577607334,1000000000.0,1e-15,-1000000000000.0,450.1070303237241,0.7457642511667586,-1000.0];
v94 * 129;
function f101() {
    return v91;
}
126 | v94;
try {
    v93 <<= v93;
} catch(e103) {
}
++v92;
Math.atanh(v92);
function f108() {
    return f108;
}
class C109 {
    valueOf(a111, a112, a113) {
        while (0 < 7, a112) {
        }
    }
}
Math.fround(v92);
const v118 = ++v92;
Math.acos(v118);
-(16811 | v118);
