function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 129;
    } catch(e3) {
    }
    try {
        this.h = 129;
        let v5;
        try { v5 = undefined.n(); } catch (e) {}
        if (v5) {
        }
        -4294967295 ^ -4294967295;
    } catch(e8) {
        Date.UTC().constructor;
        class C16 {
            [0.28139245852187433] = 1.0;
            7;
            #d = 0.28139245852187433;
            d = Infinity;
        }
        const v17 = new C16();
        class C18 {
            [14n] = v17;
            [C16];
        }
        new C18();
    }
}
new F0(F0);
new F0();
new F0();
("1073741825").normalize();
for (let v29 = 0; v29 < 500; v29++) {
    const o31 = {
    };
    gc(o31);
}
class C34 {
}
const v35 = new C34();
function f36(a37, a38, a39) {
    a39.arguments = a39;
    return a39;
}
f36(f36, v35, f36);
Int16Array & Int16Array.f;
const o49 = {
    get a() {
        return 963.510974665131;
    },
    4294967295: 963.510974665131,
};
const o50 = {
    ...o49,
};
class C54 {
    constructor(a56) {
        return /\p{Script_Extensions=Greek}/d;
        function f60(a61, a62) {
            const o67 = {
                __proto__: 7,
                p(a64, a65, a66) {
                    a62 = 2147483649;
                    return f60;
                },
            };
            return f60;
        }
        for (let [v68,v69] of "-1") {
            class C72 {
                static {
                    this in this;
                    for (let v75 = 0; v75 < 32; v75++) {
                        this["p" + v75] = v75;
                    }
                }
                [NaN] = -1.241357395341478e+308;
            }
            super.e **= v68;
        }
    }
}
new C54();
const v82 = /\xed\xb0\x80?/mgdyi;
try { o50.constructor(v82, v82); } catch (e) {}
function f85() {
    return BigUint64Array;
}
class C87 extends Uint32Array {
    constructor(a89) {
        const v90 = this < a89;
        if (v90) {
            try { ("-1").trimLeft(..."-1", 10, this, ...v90, 1073741825, this); } catch (e) {}
        } else {
        }
    }
}
const v92 = new C87();
const v93 = new C87();
v92[255] = v93;
