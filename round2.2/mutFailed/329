const v0 = [-65535,46385,512,-48155,9223372036854775807,-12012,15,-1,-1055983173];
const v1 = [-584565192,1165520708,-1073741824,-2147483647,-65536,257,-2144026700];
[444514940,-65535,-10,15];
class C3 {
    static set b(a5) {
        v0[a5] &&= a5;
    }
    static #a = C3;
    #c = v0;
    p(a7) {
        let v10 = 2147483649 | a7;
        const v11 = --v10;
        const v12 = v10 & v10;
        Math.max(v11, v12, v10, v0);
        v11 % a7;
        2147483649 * v12;
        return --a7;
    }
}
new C3();
new C3();
const v19 = new C3();
new WeakSet(WeakSet, v19);
function f22() {
    return v1;
}
const v27 = new WeakSet();
try {
    new Float32Array(9);
} catch(e31) {
}
try {
    new Uint8Array(8);
} catch(e35) {
}
try {
    new Uint8ClampedArray(512);
} catch(e39) {
}
try {
    const o43 = {
    };
    new WeakSet(o43);
} catch(e45) {
}
switch (512) {
    case v27:
        break;
}
for (let i51 = 0; i51 < 6; i51++) {
    const t50 = "Em";
    t50[v27] += 9;
    const o59 = {
        "type": "minor",
    };
    gc(o59);
}
