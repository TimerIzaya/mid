class C3 {
    n(a5, a6) {
        let v7;
        try { v7 = this.from(835903469n, a5, a6); } catch (e) {}
        try {
            try {
                this.e = this;
            } catch(e8) {
            }
            new this("e", a5, this);
            this.fuck(v7, 13n, a6, 13n);
            class C12 {
                static {
                    const v14 = `
                        try { this["setInt8"](); } catch (e) {}
                    `;
                    eval(v14);
                }
            }
        } catch(e19) {
        }
        return 13n;
    }
    constructor(a21) {
        const t24 = -10n;
        new t24();
        function f25(a26) {
            const o27 = {
                [a26]: "65535",
            };
        }
        class C28 extends f25 {
            constructor(a30, a31, a32, a33) {
                super();
                f25();
                f25("-1679538088");
            }
        }
        %VerifyType(this);
    }
    static [835903469n];
    #h = 13n;
}
new C3(835903469n);
new C3(13n);
const v38 = new C3(13n);
/mf/gdv;
/SY/mgdi;
/(?:ab)+/gsyi;
const v47 = [1e-15,-1000.0,-1000000000000.0,0.24718469695380962,9.59320331048082];
class C48 extends Float32Array {
    #e;
    constructor(a50) {
        this.b = this;
        this?.constructor;
    }
    [v47];
    /*
    constructor(a53, a54, a55, a56) {
        super(a55);
        const o59 = {
            "type": "minor",
        };
        o59.execution = v38;
        gc(o59);
    }
    */
}
const v61 = new C48();
new C48(v47, 257, 257, 257);
for (let v65 = 0; v65 < 10; v65++) {
    ["number",BigUint64Array,[]];
}
v61[257] = v47;
