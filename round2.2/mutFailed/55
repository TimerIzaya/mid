function f0() {
}
class C1 {
    set c(a3) {
        let v4 = g;
        try {
            v4 = a3;
        } catch(e5) {
        }
    }
    constructor(a7, a8) {
        super();
        const o12 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o12);
    }
    static 3434762103 = f0;
    /*
    constructor(a15) {
        super();
        Reflect.construct(f0, []);
    }
    */
    [f0] = f0;
    3;
    static e = f0;
    static 2097426201;
    #c = f0;
    d;
}
new C1();
const v20 = new C1();
const v21 = new C1();
function F22(a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a24;
    } catch(e25) {
    }
}
const v26 = new F22(v21);
function f27(a28) {
    const o29 = {
        ...a28,
        2147483647: a28,
    };
    return o29;
}
new F22(v20);
const v31 = new F22(v21);
function f32() {
    return C1;
}
const v33 = [53026,4294967296,-3,-34947,10,6,10000];
const v34 = [51641,9,1100370343];
Symbol("bigint");
class C38 {
}
const v39 = new C38();
const v40 = new C38();
function f41(a42, a43, a44, a45) {
    const o52 = {
        [v40](a47, a48, a49) {
        },
        set d(a51) {
        },
        __proto__: a42,
    };
    return a44;
}
f41(C38, v39, v40, v40);
[-65535,4294967296,-12731,63160,255,16,45791,536870912,-532667547,65536];
function F55(a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        class C60 {
            static {
                super[2.2250738585072014e-308];
            }
        }
        this.f = a57;
    } catch(e63) {
    }
}
new F55(v26, v34);
new F55(v31, v33);
class C66 {
}
const v67 = new C66();
const v70 = ["function",delete v67.f];
const o71 = {
    "arguments": v70,
    "type": "function",
};
new F55(v26, v34);
Int32Array.__proto__ = Float32Array;
