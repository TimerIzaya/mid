try {
    new Uint8ClampedArray(3512);
} catch(e3) {
}
try {
    new Uint16Array(127);
} catch(e7) {
}
try {
    function F10() {
        if (!new.target) { throw 'must be called with new'; }
    }
    try {
        new Float64Array(7);
    } catch(e16) {
    }
    new Int16Array(2);
} catch(e18) {
}
class C19 {
    static m(a21, a22) {
        const v23 = new Int16Array(a21, a21);
        const o24 = {
        };
        try {
            o24.e = a21;
        } catch(e25) {
        }
        try {
            const o26 = {
            };
            o26.e = a21;
            o26.b = v23;
        } catch(e27) {
        }
        try {
            const o28 = {
            };
            o28.e = a21;
            o28.b = v23;
            o28.f = Int16Array;
        } catch(e29) {
        }
        try {
            const o30 = {
            };
            o30.e = a21;
            o30.b = v23;
            o30.g = Int16Array;
        } catch(e31) {
        }
        return o24;
    }
}
new C19();
const v33 = new C19();
const v34 = new C19();
function F35(a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 2;
    } catch(e39) {
    }
    try {
        this.a = a38;
    } catch(e40) {
    }
    try {
        this.g = 127;
    } catch(e41) {
    }
}
new F35(127, 2);
new F35(C19, Uint16Array);
new F35(v34, Uint8ClampedArray);
function f45() {
}
new WeakSet();
function f49() {
}
function f50() {
    return f45;
}
Object.defineProperty(f49, Symbol.toPrimitive, { writable: true, configurable: true, enumerable: true, get: f50 });
try { f49(); } catch (e) {}
class C54 extends f49 {
    constructor() {
        super();
        function f56() {
            return f49;
        }
    }
    static 189;
    #f;
    static [f49];
    3;
    d;
    179;
    #c = f49;
}
const v57 = new C54();
v57[179];
Object.defineProperty(v57, "f", { configurable: true, set: f49 });
let v61 = 513355.8447510137;
v61--;
1.6250968645626418e+308 + 1.6250968645626418e+308;
function f66() {
    return WeakSet;
}
const v67 = f66?.bind;
let v68;
try { v68 = v67.bind(WeakSet); } catch (e) {}
try { new v67(v61); } catch (e) {}
2052 % 2052;
try {
    new Uint8Array(2052);
} catch(e74) {
}
5 - 5;
"async" == "async";
const o80 = {
    "execution": "async",
    "type": "minor",
};
5 % 5;
Int16Array.length;
function F84() {
    if (!new.target) { throw 'must be called with new'; }
    function f86() {
        function f87(a88, a89) {
            Date.parse("8");
            return v68;
        }
        return f87;
    }
    Object.defineProperty(this, "toString", { writable: true, enumerable: true, get: f86 });
    const v93 = this?.constructor;
    try { new v93(); } catch (e) {}
    try {
        this.c = 822223171;
    } catch(e96) {
    }
}
const v97 = new F84();
const v98 = new F84();
v98.toString = f49;
const v99 = new F84();
function f100(a101, a102) {
    a101.toString = f66;
    try { a101.toLocaleString(); } catch (e) {}
    const o113 = {
        "f": v97,
        p(a105, a106, a107, a108) {
            class C109 extends F84 {
                5;
            }
            new C109();
            new C109();
            const v112 = new C109();
            return v112;
        },
    };
    o113.d = o113;
    return o113;
}
f100(v99, v98);
f100(v98, v97);
Int16Array.name;
try {
    const v117 = new Int16Array(5);
    function f118(a119) {
        v33[1787167803];
    }
    Object.defineProperty(v117, "g", { set: f118 });
    v117.g = v117;
} catch(e121) {
}
16 & 16;
try {
    new Uint8ClampedArray(16);
} catch(e126) {
    new Uint8Array([[["function","function","function","function"],"function"],2371]);
}
const v135 = [/\x01?/gy];
try { v135.toLocaleString(); } catch (e) {}
v135 & 268435456;
const v139 = 2052 * 2052;
v139 * v139;
-2147483648 >>> -2147483648;
const v144 = /8\p{General_Category=Decimal_Number}(a\1)/mgsdvi?.toString;
try { new v144(); } catch (e) {}
const v148 = new Int32Array(949287958);
v148[726475987];
-1.0 + -1.0;
const o153 = {
    [5.161624552045739]: 5.161624552045739,
    [5.161624552045739]: -1.0,
};
o153.h = o153;
gc();
async function f156(a157, a158, a159, a160) {
    await a158;
    return a158;
}
f156();
o153.h = o153;
