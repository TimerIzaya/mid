function F0() {
    if (!new.target) { throw 'must be called with new'; }
    function f2() {
        gc();
        return gc;
    }
    this.toString = f2;
    try {
        this.d = -736428879;
    } catch(e6) {
    }
}
const v7 = new F0();
function f8(a9, a10) {
    a9[F0] &= a10;
    function F11(a13, a14, a15) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v16 = new F11(F11, F11, F11);
    try {
        v16.fuck();
    } catch(e18) {
    }
    return v7;
}
v7.toString = f8;
const v19 = new F0();
const v20 = new F0();
function F24(a26, a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a26;
    Object.defineProperty(a27, Symbol.toPrimitive, { writable: true, configurable: true, value: f8 });
    try {
        this.f = a27;
    } catch(e32) {
    }
    try {
        this.a = F0;
    } catch(e33) {
    }
}
new F24(v20, 65537n, v19, -18697n);
new F24(v7, -18697n, v20, -18697n);
const v36 = new F24(v7, F0, v7, -18697n);
class C37 extends F24 {
    static [F0];
    static #h = 32773n;
    p(a39, a40) {
        a40 === v7;
        try {
            v19.#h;
        } catch(e43) {
        }
        return a40;
    }
    64 = v20;
    [v7] = -18697n;
    static f;
    static 0;
    static [65537n];
}
new C37();
new C37();
const v46 = new C37();
const v47 = [-732247010,10136,-65536,-536870912,1073741824];
v47.toJSON = v36;
const v48 = [v47];
function F49(a51, a52, a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
    this.toJSON = a54;
    a51.toJSON = f8;
    this.a = a51;
}
const v55 = new F49(v48);
v55.toJSON = v46;
function f56(a57) {
    return a57;
}
const v60 = [v55];
const o61 = {
    "arguments": v60,
    "type": "function",
};
new Worker(f56, o61);
