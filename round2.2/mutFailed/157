class C3 {
    g;
    ["undefined"];
    h;
    get h() {
        this[Symbol.asyncIterator] = this;
        return this;
    }
    #o(a11, a12) {
        const v13 = super.e;
        try {
            const t11 = "undefined";
            t11[1] = v13;
        } catch(e14) {
        }
        try {
            this.g = v13;
        } catch(e15) {
            const v16 = [];
            const o17 = {
                "arguments": v16,
                "type": "undefined",
            };
        }
        return -9.15324775518423;
    }
}
const v18 = new C3();
new C3(v18, v18, "toString");
new C3();
const o24 = {
    [5.2369139786157675]: 5.2369139786157675,
    set d(a23) {
    },
    "d": 5.2369139786157675,
};
class C25 extends C3 {
    536870889 = "toString";
    toString(a27, a28, a29, a30) {
        e = null;
        function f32() {
            return "toString";
        }
        return a27;
    }
    static #b = v18;
    8 = -9.15324775518423;
    1240880650;
}
const v33 = new C25();
const v34 = new C25();
new C25(-9.15324775518423);
const v36 = [];
v36["shift"]();
let v41 = Symbol;
Array[v41.match] = -9223372036854775807;
Reflect.apply("undefined", "2", [Reflect]);
const o48 = {
};
function F49() {
    if (!new.target) { throw 'must be called with new'; }
}
const v51 = new F49();
Object.defineProperty(v51, v41++, { writable: true, configurable: true, enumerable: true, value: v41 });
function f55() {
    return f55;
}
const o60 = {
    ["toString"]: 18932,
    "e": v41,
    [18932](a58, a59) {
    },
};
class C61 extends f55 {
}
const v62 = new C61(v34, v33);
function f63(a64, a65) {
    Math.atan2(-1999, 5.430720508079137);
    return -9223372036854775807;
}
try {
    v36.f = v34;
} catch(e70) {
}
3483 >>> 3483;
v62[Symbol.source] = f63;
Math.exp(~v62);
