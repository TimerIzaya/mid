const v0 = [64644,1581361415,36193,-65536];
const v1 = [1394491226,128,4294967296];
const v2 = [9007199254740991,268435456,-3,6,9007199254740992,1590,-9007199254740991,509099675];
const v6 = [];
function f7() {
    return v6;
}
class C8 extends f7 {
}
const v9 = new C8();
v9 > BigInt64Array;
function f12() {
    async function f13(a14, a15, a16, a17) {
        await a15;
        return a15;
    }
    const v20 = [12,4,-65536,-1024,-11,-1934425457];
    try {
        v20.map(-4294967296n);
    } catch(e22) {
    }
    return v0;
}
class C26 extends f12 {
    [f12] = v1;
    static ["-611423956"] = "g";
    #toString(a28, a29, a30) {
        class C32 extends Int32Array {
        }
        new C32();
        function f34() {
            const o35 = {
            };
            return o35;
        }
        const v36 = f34();
        function F37(a39) {
            if (!new.target) { throw 'must be called with new'; }
            this.h = a39;
        }
        const v40 = new F37(f34);
        function f41(a42, a43, a44) {
            const o48 = {
                __proto__: v40,
                "g": v36,
                [a42](a46, a47) {
                },
                ...a42,
                [F37]: a42,
            };
        }
        f41(v40, f41, f41);
        v2[128];
        const v56 = new f12("p", "b", Int32Array);
        new f12("g", "function", v56);
        const o61 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o61);
        return a30;
    }
}
new C26();
new C26();
new C26();
try {
    new Uint32Array();
} catch(e71) {
}
const o76 = {
    o(a75) {
        return a75;
    },
};
const o84 = {
    toString(a79, a80, a81, a82) {
        super[this];
        return a80;
    },
};
const o85 = {
    "execution": "async",
    "type": "minor",
};
gc(o85);
