const v0 = [];
try {
    new BigUint64Array(3);
} catch(e11) {
}
switch (-47616) {
    default:
        ArrayBuffer[1];
        const o18 = {
            "maxByteLength": 2276607640,
        };
        const v20 = new SharedArrayBuffer(1000, o18);
        try {
            new Uint8ClampedArray(v20);
        } catch(e23) {
        }
        break;
}
const o24 = {
    "maxByteLength": 4294967295,
};
const v26 = new ArrayBuffer(10, o24);
try {
    new BigInt64Array(v26);
} catch(e29) {
}
try {
    new Uint8ClampedArray(116);
} catch(e32) {
}
try {
    new Uint32Array(3435);
} catch(e36) {
}
class C37 {
}
function f38() {
    return f38;
}
class C39 extends f38 {
    constructor(a41, a42, a43) {
        super();
        Object.defineProperty(undefined, 256, { get: f38 });
    }
}
new C39(f38, C37, v0);
C39[10];
f38();
%PrepareFunctionForOptimization(f38);
f38();
f38();
%OptimizeFunctionOnNextCall(f38);
f38();
new v0();
