let v0 = 64;
try {
    new Int8Array(4096, -4294967297, v0);
} catch(e9) {
}
const v10 = (1000000.0)[4];
const v15 = 4.0 ^ v0;
v0--;
const v17 = -65535;
+v15;
try {
    new Uint16Array(4096);
} catch(e22) {
    function F23(a25, a26) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.e = a26;
        } catch(e27) {
        }
        try {
            this.d = v15;
        } catch(e28) {
        }
        try {
            this.h = Uint16Array;
        } catch(e29) {
        }
    }
    new F23(-1906613873, v15);
    new F23(-4294967297, v0);
    new F23(1000000.0, v17);
}
for (let v35 = 0; v35 < 32; v35++) {
    v10["p" + v35] = v35;
}
try {
    new BigInt64Array(5, Int8Array);
} catch(e39) {
}
const v40 = [831718659,-265172310,55689,268435439,4273,-61632,1024,-5];
class C42 extends Uint16Array {
}
new C42(v40);
