class C3 {
    512;
    #c;
    static floor(a5) {
        try {
            new Date(64);
        } catch(e9) {
        }
        try {
            new Int16Array(7);
        } catch(e13) {
        }
        try {
            const v16 = new C3(7);
            try {
                v16.toString = C3;
            } catch(e17) {
            }
            try { this.m(2.220446049250313e-16, v16, v16); } catch (e) {}
        } catch(e19) {
        }
        return a5;
    }
}
const v20 = new C3();
const v21 = new v20();
const v22 = new C3(-20885, 2.220446049250313e-16);
try {
    new BigInt64Array(241);
} catch(e26) {
}
try {
    new Int16Array(241);
    let v30 = 0;
    do {
        try {
            v22.valueOf = v22;
        } catch(e31) {
        }
        v30++;
    } while (v30 < 2, v30)
} catch(e35) {
}
try {
    new Uint8Array(241);
} catch(e39) {
}
class C40 {
}
new C40();
v21 >= BigInt64Array;
