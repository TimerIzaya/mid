function f3(a4) {
    const o12 = {
        set a(a6) {
            try {
                a4 = -1.0;
            } catch(e7) {
            }
            this[a6];
            const v9 = a6.__proto__;
            try { v9.split(-1.0, v9, v9, v9); } catch (e) {}
            try {
                this[6] = a6;
            } catch(e11) {
            }
        },
        2428: a4,
        4: a4,
    };
    return o12;
}
f3(-4.259110414303762);
const v14 = f3(-4.259110414303762);
f3(-4.259110414303762);
class C16 extends f3 {
    static g = f3;
    static e;
    static #c;
    static [-4.259110414303762] = -1.0;
    #toString(a18, a19, a20) {
        try {
            a19.#toString(-4.259110414303762, a19, -4.259110414303762, a20);
        } catch(e22) {
        }
        return 427162967;
    }
    6;
}
const v26 = new C16();
const v27 = new C16();
const v28 = new C16();
function F29(a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -4.259110414303762;
    } catch(e33) {
    }
    try {
        this.g = a31;
    } catch(e34) {
    }
}
new F29(v28, f3);
const v36 = new F29(v14, v26);
new F29(v27, v36);
class C39 {
}
const v40 = new C39();
v40.toString = f3;
class C41 extends Int16Array {
    [v40];
}
new C41();
