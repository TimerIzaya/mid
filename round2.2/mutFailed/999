class C3 {
    constructor(a5) {
        SharedArrayBuffer[4] = "c";
        try { a5(a5, SharedArrayBuffer, 8.964764946896511e+307, -1016194425, a5); } catch (e) {}
        SharedArrayBuffer[4];
    }
    static 1756295693 = 8.964764946896511e+307;
    5;
    static #a;
    b = -1016194425;
    static #d = -1016194425;
}
const v9 = new C3("c");
const v10 = new C3(-1016194425);
new C3(v10);
try {
    new Float32Array(279);
} catch(e15) {
}
try {
    new BigInt64Array(9223372036854775807, v9);
} catch(e19) {
}
try {
    new Float32Array(256);
} catch(e23) {
}
Object.defineProperty(Array, 126, { configurable: true, value: v10 });
Array(256);
const v26 = [];
v26.toString = Array;
class C27 {
    20 = v26;
    static #h;
    #g;
    #f;
    [v26] = v26;
    #a;
    static f;
    #e;
}
const v28 = new C27();
v28[Symbol.toPrimitive] = Array;
const v31 = new C27();
function f32(a33, a34) {
    const o35 = {
        3131164112: v26,
        [a33]: v28,
        "a": Array,
        __proto__: Array,
    };
    o35[126] = Float32Array;
    return o35;
}
const v36 = f32();
function f37(a38, a39, a40, a41) {
    a39.toString = f37;
    const o42 = {
        [a39]: v31,
        65536: a40,
    };
    return o42;
}
f37(v28, v28, v36, v26);
const v46 = 126 | [1717804318,2147483649,271900802,1901566192,-536870912,-25703];
v36[v46] *= v46;
function F48() {
    if (!new.target) { throw 'must be called with new'; }
}
new F48();
function F51(a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
    function f55() {
        return this;
    }
    function f56(a57) {
        [-18282];
        [57594,1782839652];
        [1073741824,-34776,-1073741824,10,14];
    }
    Object.defineProperty(this, "c", { enumerable: true, get: f55, set: f56 });
    const v61 = this.length;
    try { new v61(); } catch (e) {}
    const t83 = [56.58259139696702,2.2250738585072014e-308,Infinity,17.815683236450468];
    t83.length = 256;
    new Date();
    gc();
    function F68() {
        if (!new.target) { throw 'must be called with new'; }
    }
    new F68();
    new F68();
}
const v72 = new F51(F48, 1.6454902033346629e+308);
v72.c = v72;
