const v1 = new Map();
class C2 {
    static get f() {
        try {
            super.valueOf(Map);
        } catch(e5) {
            9007199254740990 >> 9007199254740990;
        }
        v1[10] <<= Map;
        return Map;
    }
    536870912;
    187;
    g;
    [v1];
}
new C2();
new C2();
new C2();
new WeakMap();
const o62 = {
    n(a36, a37, a38, a39) {
        function f40() {
            try {
            } catch(e41) {
                class C43 extends Float64Array {
                    constructor(a45, a46, a47, a48) {
                    }
                }
                const v49 = /A\ud808\udf45*Lh?/mgsdvy;
                function F51(a53, a54, a55, a56) {
                    if (!new.target) { throw 'must be called with new'; }
                    Object.defineProperty("jTR", 1, { get: f40, set: f40 });
                    a37 ^ a37;
                    this.f = v49;
                }
            }
            return a39;
        }
        const o60 = {
            "type": "function",
        };
        o60.arguments = WeakMap;
        new Worker(f40, o60);
        return f40;
    },
};
o62.n();
gc.apply();
