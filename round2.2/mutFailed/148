function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 16;
    } catch(e3) {
    }
    try {
        this.f = 16;
    } catch(e4) {
    }
}
const v5 = new F0();
new F0();
let v7 = new F0();
for (const v11 in -688899.663833704) {
    v11 ^ 2.2250738585072014e-308;
    [-1000000.0,-5.0,-1.0,1000000.0,-1.7976931348623157e+308,-4.0,-131.91361467668037,25946.805427963962,4.0];
    [-57.26400770516932,Infinity,3.0,0.6791616200135256,7.1525744176816e+307,1.8183664818629787e+307,0.9732396731516997];
    [-7.30460401650942e+306,2.220446049250313e-16,1.7833798319920367e+308,1000000.0,2.2250738585072014e-308];
}
class C16 {
    constructor(a18, a19) {
        a18 + v7;
        try {
            new Float64Array(951);
        } catch(e24) {
        }
        try {
            new Int8Array(231);
        } catch(e28) {
        }
        try {
            new Uint8Array(6);
        } catch(e32) {
        }
    }
    static toString(a34, a35, a36, a37) {
        let v38;
        try { v38 = new a35(this, a35, a37, a34); } catch (e) {}
        %VerifyType(v38);
        ++v7;
        return v5;
    }
    #h = -688899.663833704;
    #d = v7;
    13;
    3;
}
const t48 = -688899.663833704;
new t48();
new C16();
new C16();
[1.0113125857529994e+308,[1e-15,-0.0,-0.0,-967734.5746858956,-4.0,629596.6199738199,5.0,2.220446049250313e-16,-5.094626256974437]];
class C47 extends Set {
    constructor(a49, a50, a51, a52) {
        super(a50);
    }
}
new C47();
