const v0 = [-0.0,-1e-15,1.9502575673706666,1.0537465539196678,-5.392885975291368];
const v1 = [-3.313516667202624e+307,-1000000.0,0.0,1000.0];
const v2 = [-2.8852813461178476e+307];
[1073741824n,1073741824n,v1,1073741824n];
const v11 = [v2,[-56812n,v2,v2,-877465924n]];
v11[1] = v11;
function f14() {
    const o20 = {
        ..."AwbP",
        [536870912](a18, a19) {
        },
    };
    return o20;
}
255 - 255;
const v26 = new Float64Array(255);
try { v26.set(255); } catch (e) {}
v26.indexOf(Uint8Array);
function f29(a30) {
    a30 | a30;
    gc();
    gc.apply(gc, BigInt64Array);
    const o47 = {
        "h": -4.259110414303762,
        "d": a30,
        "a": -1.0,
        [-4.259110414303762]: 0.4421422727196833,
        "e": -1.0,
        set a(a38) {
            try {
                a30 = -1.0;
            } catch(e39) {
            }
            this[a38];
            const v41 = a38.__proto__;
            try { v41.split(-1.0, v41, v41, v41); } catch (e) {}
            try {
                this[6] = a38;
            } catch(e43) {
            }
        },
        [-1.0](a45, a46) {
        },
        "defineProperty": f14,
        [f14]: v26,
        2428: a30,
        4: a30,
    };
    return o47;
}
f29.prototype;
const v49 = f29(-4.259110414303762);
switch (-1.0) {
    default:
        v49[0.4421422727196833];
        break;
}
const v51 = f29(-4.259110414303762);
v51[4] = v51;
const v52 = f29(-4.259110414303762);
v52[4] = v52;
class C53 extends f29 {
    static d = f29;
    static e;
    static #c;
    static [-4.259110414303762] = -1.0;
    #toString(a55, a56, a57) {
        try {
            a56.#toString(-4.259110414303762, a56, -4.259110414303762, a57);
        } catch(e59) {
        }
        const v64 = Array(255);
        for (let v65 = 0; v65 < 25; v65++) {
            v64[781];
        }
        return 427162967;
    }
    6;
}
const v68 = new C53();
const v69 = new C53();
const v70 = new C53();
function F71(a73, a74) {
    if (!new.target) { throw 'must be called with new'; }
    function f75(a76) {
        a76?.[1];
        f14();
        %PrepareFunctionForOptimization(f14);
        f14();
        f14();
        %OptimizeMaglevOnNextCall(f14);
        f14();
        return f29;
    }
    Object.defineProperty(this, "toString", { writable: true, configurable: true, value: f75 });
    try {
        const o87 = {
            ..."AwbP",
            [536870912](a85, a86) {
            },
        };
        this.f = -4.259110414303762;
    } catch(e88) {
    }
    try {
        this.g = a73;
    } catch(e89) {
    }
}
new F71(v70, f29);
const v91 = new F71(v51, v68);
v91.f = v91;
const v92 = new F71(v69, v91);
try { v92.toLocaleString(); } catch (e) {}
Object.defineProperty(Int16Array, "c", { writable: true, configurable: true, value: v0 });
Int16Array.c = Int16Array;
class C95 {
}
const v96 = new C95();
v96.toString = f14;
const v97 = v96?.__defineSetter__;
try { new v97(v51, v51); } catch (e) {}
class C99 extends Int16Array {
    [v96];
}
C99.length = C99;
