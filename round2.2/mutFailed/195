try {
    new Int8Array(9);
} catch(e3) {
}
try {
    new Int8Array(127);
} catch(e7) {
}
try {
    new Uint8ClampedArray(9);
} catch(e11) {
}
[-6306,7880,-2147483649,2037122148,7,10000];
[-5];
const v14 = [-1711016157,1073741823,-256,6,257,536870889,-1408390109];
class C15 extends Int8Array {
    static toString(a17, a18, a19, a20) {
        super.length;
        try {
            const o22 = {
            };
            this.fuck(Int8Array, o22);
        } catch(e24) {
        }
        return Int8Array;
    }
    static #e;
    static #a;
    d;
    9;
}
new C15();
new C15();
new C15();
try {
    new v14(1024);
} catch(e31) {
}
try {
    new Int32Array(4);
} catch(e35) {
}
try {
    new Float64Array(14);
} catch(e39) {
}
function f40(a41, a42, a43) {
    typeof -758370.4741002044;
    return a41;
}
%OptimizeFunctionOnNextCall(f40);
f40(f40, f40, f40);
