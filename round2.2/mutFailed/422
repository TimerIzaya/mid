let v0 = [447.02856353522225,-Infinity,1e-15,2.2250738585072014e-308,0.20060266890292278,-1.7976931348623157e+308,3.0,1000.0,-4.442728204623776];
const v1 = [1000000.0,-5.0,4.0,-3.0,-Infinity];
const v2 = [1000000000.0,-4.476357197686481,8.420013744329423e+307,-9.275387383027937];
const v4 = [0.27480288890259574,-378.60126209808516,-1.617449933768894e+308];
[0.9594636287263684,-2.220446049250313e-16,8.364721538648237,858359.5654441649,0.04449048581988224,406.2141781617963,0.013344004920187613,516.6865964543513,0.9616869272314462,-1000.0];
[-1e-15];
Math.fround(5 / 5);
const v11 = Math.hypot(5);
const v12 = v0 * 5;
Math.hypot(v12);
const v14 = ++v0;
new Date();
try {
    new Int32Array(731);
} catch(e26) {
}
function f27(a28, a29, a30, a31) {
    const o32 = {
        ..."s",
    };
    return v2;
}
f27("s", v1, v12, v14);
f27(v0, v4, 731, "b");
f27(v0, v2, v11, "o");
try {
    new Uint32Array(4096);
} catch(e39) {
}
try {
    new Uint8ClampedArray(10);
} catch(e43) {
}
function f44() {
}
class C45 extends Uint32Array {
    constructor() {
        super();
        function f47() {
            return f44;
        }
    }
    static 189;
    #f;
    static [f44];
    3;
    d;
    179;
    #c = f44;
}
new C45();
const v49 = new C45();
new C45();
try {
    new Int16Array(1024);
} catch(e54) {
}
try {
    new Uint8Array(5);
} catch(e58) {
}
try {
    new Int8Array(1267);
    try {
        new Uint8ClampedArray(109);
    } catch(e65) {
    }
    try {
        new Uint16Array(2);
    } catch(e69) {
    }
    try {
        new Uint8Array(64);
    } catch(e73) {
    }
} catch(e74) {
}
let v76 = 0.6556715645392962;
for (let i81 = 0, i82 = 10; i81 < i82; v76++, i82--) {
    Object.defineProperty(v49, "f", { configurable: true, set: f44 });
    const o93 = {
        "execution": "sync",
        "type": "major",
    };
    gc(o93);
}
