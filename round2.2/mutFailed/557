const v6 = [13n,-1000.0,-1000.0,462283371n];
const v7 = [13n,685.7093816336442,v6,255n,v6];
function F9(a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a11;
    } catch(e12) {
    }
}
new F9("yPtst");
[v7];
function f20(a21, a22) {
    const o25 = {
        [-1.0](a24) {
        },
        [a22]: a22,
        1024: a22,
    };
    return o25;
}
f20(f20, f20);
f20(827.1669934861252, -1.0);
const v30 = new Int16Array(1000);
function f33(a34) {
    const o42 = {
        "h": "56495",
        "e": a34,
        get a() {
            Object.defineProperty(a34, a34, { configurable: true, value: this });
            let {"e":v36,"h":v37,...v38} = this;
            for (let v39 = 0; v39 < 5; v39++) {
                const t31 = "object";
                t31["p" + v39] = v39;
            }
            return v38;
        },
        __proto__: "object",
        ["56495"]: "56495",
        "a": a34,
    };
    return o42;
}
class C44 {
    toString(a46) {
        return this;
    }
}
const v47 = new C44();
function f48(a49, a50) {
    const o51 = {
        "e": a50,
    };
    return o51;
}
new Date();
class C54 {
}
Math.cos(268435456);
const v58 = f48(-5.0, v47);
const v59 = f48();
const v60 = v58.e;
undefined();
try {
const t0 = "getMonth";
t0();
} catch (e) {}
function f66() {
    return Int16Array;
}
%OptimizeFunctionOnNextCall(f66);
try {
    v59[v60] = f48;
} catch(e67) {
}
v30.includes(-566.161264588733);
