[-420931565];
const v1 = [-36679,-41714,4096,9007199254740991];
const v2 = [-65536,149437406,-1357182973,127,-2085365680,4294967296,268435456];
function f3() {
    return v1;
}
class C7 {
}
const t8 = [];
t8(f3, f3);
function F10() {
    if (!new.target) { throw 'must be called with new'; }
}
new F10();
class C13 {
    [v2];
    n(a15, a16, a17) {
        0.3451462281223664 >>> this;
        15 ** this;
        const v23 = 2147483648n >> a15;
        !0.3451462281223664;
        v23 / 0.3451462281223664;
        class C28 {
            constructor(a30, a31, a32, a33) {
                7 ^ Int16Array;
            }
        }
        Math.fround(a15);
        class C38 {
            static g = -546.4178417432124;
            [-546.4178417432124] = -546.4178417432124;
        }
        const v39 = new C38();
        class C41 extends C38 {
            [WeakMap];
            static [v39] = -546.4178417432124;
        }
        return v23;
    }
}
new C13();
new C13();
new C13();
function f45(a46, a47) {
    return a47;
}
const o50 = {
    "type": "function",
};
const v51 = new Worker(f45, o50);
v51.terminateAndWait();
class C54 {
    static #p(a56, a57, a58, a59) {
    }
    valueOf(a61, a62, a63, a64) {
        class C65 {
            constructor(a67) {
            }
        }
        const v68 = C65.toString(C65, C65, C65, C65);
        new Int32Array(Symbol, v68, v68);
        try {
            ("cu").#p();
        } catch(e73) {
            e73.stack;
        }
    }
}
const v75 = new C54();
Math.acos(v75);
const v78 = [];
try { v1["endsWith"]("endsWith", v78, 0.08537700316731323); } catch (e) {}
const v82 = [-2.6178318138274365e+307,-1000.0,-1000000000000.0,5.331996602369138e+307,2.0,-2.220446049250313e-16];
const o84 = {
    "c": v82,
};
const v86 = [3,o84];
const o87 = {
    "arguments": v86,
    "type": "function",
};
