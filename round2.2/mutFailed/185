function f0() {
    -3.2772672347425473 > -3.2772672347425473;
    const o14 = {
        [0](a6, a7) {
            function f8(a9, a10) {
                a10?.[-3.2772672347425473];
                return a7;
            }
            const v12 = f8(a6, -3.2772672347425473);
            try { v12.catch(v12, "-1", a7, this, this); } catch (e) {}
            return "-1";
        },
        8: -3.2772672347425473,
        ["-1"]: "-1",
        "c": 0,
        "f": 0,
        "b": 0,
    };
    return o14;
}
const v15 = f0();
const v16 = v15();
const v17 = f0();
const v18 = [v16,v16,v17,v15];
v18[3] = v18;
const v19 = [v18,v16,v18,v18];
const v20 = [v19,v17,v19,v18,v18];
[v17,v18,v19,[v15,v15,f0]];
const v23 = [v20];
try { v23.groupToMap(v17); } catch (e) {}
let v25 = 3062;
v25++;
v15.prototype;
try {
    new BigInt64Array(v25);
} catch(e30) {
}
try {
    new BigInt64Array(4096);
} catch(e34) {
}
let v35 = 129;
v35--;
try {
    new Uint8ClampedArray(v35);
} catch(e39) {
}
const v41 = new Date();
/TV\1111(?:a*)+/msy.test(v41);
