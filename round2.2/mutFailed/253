function f0() {
    const o9 = {
        "c": "T",
        get f() {
            return this.c;
        },
        "f": 11,
        __proto__: "getYear",
        ..."T",
        "g": "T",
    };
    return o9;
}
const v10 = f0();
Object.defineProperty(v10, Symbol.toPrimitive, { writable: true, value: f0 });
const v13 = f0();
const v14 = f0();
function F15(a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = F15;
    try {
        this.f = v10;
    } catch(e19) {
    }
    try {
        this.b = f0;
    } catch(e20) {
    }
}
function f21(a22) {
    new Date(255);
    return Date;
}
F15.toString = f21;
const v26 = new F15(v10, v13);
const v27 = new F15(v13, v10);
const v28 = new F15(v14, v13);
class C29 extends F15 {
    static 13;
    static get g() {
        `e${v28}string${f0}e`;
        super.b;
        return F15;
    }
    constructor(a34, a35, a36, a37) {
        a37[Symbol.toPrimitive] = f21;
        super(a37, a36);
        try { new a35(); } catch (e) {}
        const v44 = a36 & a36;
        Math.hypot(2);
        const v47 = (a36 % F15) & v44;
        let v48 = 2 / -2.220446049250313e-16;
        v48--;
        -2.220446049250313e-16 << v47;
    }
}
const v51 = new C29(v27, v26, v13, C29);
new C29(v51, v51, v10, F15);
new C29(v27, v26, v14, v27);
Math.acosh(-2147483649);
