try {
    new Uint16Array(128);
} catch(e3) {
}
try {
    new Uint8Array(24);
} catch(e7) {
}
try {
    new Uint16Array(129);
} catch(e11) {
}
new WeakMap();
class C14 extends Uint8Array {
    static set d(a16) {
        const v18 = super.toSorted(this.g);
        v18 > v18;
    }
    [128] = 24;
    [Uint8Array] = WeakMap;
    static f;
}
new C14();
const v24 = new C14();
new C14();
let v27 = eval;
const v28 = v27("");
v24["find"](v28);
const v33 = Symbol.iterator;
const o42 = {
    [v33]() {
        let v35 = 10;
        const o41 = {
            next() {
                v35--;
                const v39 = v35 == 0;
                const o40 = {
                    "done": v39,
                    "value": v35,
                };
                return o40;
            },
        };
        return o41;
    },
};
v27(v28);
v27 -= v28;
