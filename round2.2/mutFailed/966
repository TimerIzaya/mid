let v2 = -18653;
const v4 = [[-9223372036854775807],-9223372036854775807,v2];
const v5 = [v2];
class C9 {
    [v2] = -536870912;
    a;
    valueOf(a11, a12, a13) {
        return delete this[129];
    }
    #n(a16, a17, a18) {
        const v19 = a18 << -536870912;
        const v20 = v5 * 9;
        try {
            v2 >>>= v20;
            try { new C9(-536870912, v19); } catch (e) {}
            try {
                v4[4] = a16;
            } catch(e22) {
            }
        } catch(e23) {
        }
        return -9223372036854775807;
    }
}
new C9();
new C9();
new C9();
class C30 extends Float64Array {
    constructor(a32, a33, a34, a35) {
        super(a34);
        a35.b >>>= 9;
        try {
            a34 *= 2.220446049250313e-16;
        } catch(e39) {
        }
        super.buffer;
    }
}
const v41 = new C30(8, 8, 8, Float64Array);
const v42 = new C30(v41, 8, 128);
const o43 = {
    ...v42,
};
async function* f44(a45, a46, a47) {
    const v49 = await a47[-9223372036854775807];
    try {
        yield v49;
    } catch(e51) {
    }
    return a47;
}
f44(8, C30, o43);
class C53 {
}
const v54 = C53.bind();
function f55(a56, a57) {
    function f58() {
        return v54;
    }
    return v54;
}
v54.toString = f55;
v54.toString();
