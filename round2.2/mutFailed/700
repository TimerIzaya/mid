class C3 {
    valueOf(a5, a6) {
        const v7 = delete a5?.f;
        +a5;
        this.tan(a6);
        return -(+v7) << -2.2250738585072014e-308;
    }
}
const v16 = new C3();
const v17 = v16?.constructor;
try { new v17(); } catch (e) {}
const v19 = new C3();
const v20 = new C3();
const v21 = v20?.constructor;
try { new v21(); } catch (e) {}
function f23(a24) {
    const v25 = a24 & a24;
    function f26(a27, a28) {
        const o29 = {
            "e": a28,
        };
        return o29;
    }
    try { f26(f23, v25); } catch (e) {}
    return -2.2250738585072014e-308;
}
v20[Symbol.toPrimitive] = f23;
class C33 {
    7 = C33;
    [C3] = v16;
    static 1698853746;
    constructor(a35, a36, a37) {
        this[7] = this;
        a35.name = a35;
        const v38 = a36?.constructor;
        try { new v38(); } catch (e) {}
        a36.toString = Symbol;
        try {
            a36[a36] = v16;
        } catch(e40) {
        }
    }
    static [-1.6125639445589946e+308];
}
C33.length = C33;
const v41 = new C33(C3, v16, v20);
v41[7];
v41[Symbol.toPrimitive] = Symbol;
const v45 = new C33(v19, v41, C33);
const v46 = new C33(v19, v20, v45);
v46[7] = v46;
7 | 7;
0 - 0;
class C55 {
    constructor(a57, a58, a59, a60) {
        7 ^ Int16Array;
    }
}
