const v0 = /[f(x)(x)(x)\3]/mgsdv;
const v1 = /\c_/mi;
const v2 = /H(a)/mvy;
[v1,v2];
[[v0]];
[-2147483649,1628,365231273,65537,-2147483649,65537,2,1073741825,1244958633,536870888];
[-7,-4,1073741825,321384353];
[-323565681,4294967297];
function f9() {
    return v2;
}
[-0.0,-1.7976931348623157e+308,-1000000.0,215706.88135075057,-0.0];
[0.8246895394000368,-0.46536375157300824,-532931.6441136643,1000.0];
[-1000.0,-2.220446049250313e-16,561.7024898596185,0.5937720568070347,-1000000000000.0,-2.0,498085.9396730552,-54419.23176000337];
function f13() {
    return v0;
}
try {
    new Uint8Array(2);
} catch(e17) {
}
Math.acosh(-2147483649);
class C23 {
}
try {
    new Int8Array(4);
} catch(e25) {
}
try {
    const v29 = [5n];
    const v31 = new Map();
    function f32(a33, a34, a35) {
        a35.name = a35;
        const o42 = {
            ...v29,
            __proto__: v31,
            toString(a37, a38, a39) {
                super.d;
                a34 & a33;
                return a38;
            },
        };
        return o42;
    }
    f32(5n, f32, Map);
    %PrepareFunctionForOptimization(f32);
    new Uint8ClampedArray(2495);
} catch(e45) {
}
function f50(a51) {
    function f53(a54) {
        Reflect.construct(a51, [Reflect,Reflect,a54,Uint8ClampedArray], Uint32Array);
    }
    this.onmessage = f53;
    `n${this}undefined`;
}
const v61 = [1024];
const o62 = {
    "arguments": v61,
    "type": "function",
};
new Worker(f50, o62);
