const v1 = new WeakMap();
[-65536,-536870912,512,982193205,15008,512,-536870912];
const v3 = [268435441,10000,-9223372036854775808,-17660,268435441,-15];
const v4 = [10,-1024,-1558819517];
const v5 = /(?<!a)/du;
const v6 = /K5/guy;
const v7 = /0M/syi;
function f8(a9, a10, a11) {
    Proxy();
    Math.atan2(13, 64);
    const o22 = {
        "d": v3,
        "b": a11,
        "c": v4,
        get f() {
            function f19(a20) {
                return a20;
            }
            class C21 extends f19 {
                b = v1;
                [a11] = a9;
                [a10] = a11;
            }
            return C21;
        },
    };
    class C23 {
    }
    new C23();
    for (const v25 in v3) {
    }
    return o22;
}
f8(v3, v6, v5);
f8(v4, v6, v7);
f8(v3, v7, v6);
try {
    new Uint8ClampedArray(6);
} catch(e32) {
}
const v33 = /[a\Sc]/gyi;
delete v33[v33];
class C35 {
    constructor(a37, a38, a39) {
        arguments[6] = a37;
    }
}
try {
    new BigUint64Array(680);
} catch(e44) {
}
try {
    new Int16Array(11);
} catch(e48) {
}
class C50 extends URIError {
}
new C50();
