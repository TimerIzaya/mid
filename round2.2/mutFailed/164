const v0 = [];
const v1 = [5,-9223372036854775807,268435456,-189238032,1073741825];
[10,-17057,536870887,2147483649,129,932071944,1042888912,7,257,536870887];
[2147483647,-6,-536870912,-1,4294967296,2147483649,2,268435440];
function f4() {
    return v0;
}
const v5 = /[A+]/gvi;
const v6 = /a|bc/mgsdv;
let v7 = /a\s/sdvy;
try {
    new Uint8Array(3);
} catch(e11) {
}
let v12 = 0;
do {
    -v6;
    new f4();
    v12++;
} while (v12 < 3)
try {
    new Uint8ClampedArray(3);
} catch(e21) {
}
try {
    new BigInt64Array(f4);
    f4();
    -802131.1369220776 | v0;
    (-802131.1369220776) ** 4294967297;
    v7++;
} catch(e33) {
}
[[f4,BigInt64Array],f4,v1];
[BigInt64Array,3,3];
class C40 {
    constructor(a42) {
        function F43(a45) {
            if (!new.target) { throw 'must be called with new'; }
            this.g = this;
        }
        const v46 = new F43();
        new F43(v46);
        new F43(this);
    }
    static #n(a50, a51) {
        f4();
        a51 ** this;
        for (let v54 = 0; v54 < 32; v54++) {
            v5["p" + v54] = v54;
        }
        return a51;
    }
}
new C40();
new C40(32906);
new C40();
class C60 extends C40 {
}
new v5();
