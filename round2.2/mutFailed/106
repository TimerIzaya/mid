class C3 {
    static 7 = 481.18917876604246;
    static [1000000000.0] = 10629;
    static [1000000000.0] = 481.18917876604246;
    #f = 481.18917876604246;
    constructor(a5, a6) {
        a5 >>> a5;
        const v8 = this?.constructor;
        v8[1000000000] = v8;
        try { new v8(C3, a6); } catch (e) {}
        a6--;
        %VerifyType(10629);
        try {
            a5[1000000000.0] = this;
        } catch(e11) {
        }
        1 << 1;
    }
}
let v16;
try { v16 = new C3(1000000000.0, 481.18917876604246); } catch (e) {}
const v17 = new C3(C3, 1000000000.0);
v17.length;
const v19 = new C3(C3, C3);
const v20 = new C3(1000000000.0, v19);
const v21 = [481.18917876604246,v20,v19,481.18917876604246,v20];
v21[2];
const v23 = [v19,C3,v17,481.18917876604246,v20];
const v24 = [v21];
try { v24.pop(); } catch (e) {}
function f26(a27, a28, a29) {
    a28.d = a28;
    const o48 = {
        n(a31, a32, a33, a34) {
            function f36(a37) {
                function f39(a40) {
                    try {
                        a40 *= a40;
                    } catch(e41) {
                    }
                }
                this.onmessage = f39;
                this.__proto__;
            }
            const v45 = ["function"];
            const o46 = {
                "arguments": v45,
                "type": "function",
            };
            new Worker(f36, o46);
            return v17;
        },
    };
    try { a28.n(o48, o48, a27, C3); } catch (e) {}
    return o48;
}
const v50 = f26(v24, v20, 481.18917876604246);
const v51 = C3?.propertyIsEnumerable;
try { new v51(C3); } catch (e) {}
f26(v23, v20, v24(v19, v50, f26));
class C56 {
    constructor(a58, a59) {
        ("isFrozen")[536870887];
        for (let v61 = 0; v61 < 10; v61++) {
        }
    }
}
try { C56(v20, v16); } catch (e) {}
new C56();
new C56();
