let v2 = -18653;
const v4 = [[-9223372036854775807],-9223372036854775807,v2];
let v6 = eval;
v6 -= v6("");
class C8 {
    constructor(a10) {
        delete this[a10];
    }
}
const v12 = [v2];
class C16 {
    [v2] = -536870912;
    a;
    valueOf(a18, a19, a20) {
        return delete this[129];
    }
    #n(a23, a24, a25) {
        a25 << -536870912;
        const v27 = v12 * 9;
        try {
            v2 >>>= v27;
        } catch(e28) {
        }
        return -9223372036854775807;
    }
}
new C16();
let v30 = new C16();
new C16();
class C35 extends Float64Array {
    constructor(a37, a38, a39, a40) {
        super(a39);
        super.buffer;
    }
    #e = v4;
    static #d;
    static toString(a43) {
        try {
            const t38 = "";
            t38[3201] = this;
        } catch(e44) {
        }
    }
}
const v45 = new C35(8, 8, 8, Float64Array);
const v46 = new C35(v45, 8, 128);
const o49 = {
    valueOf() {
        try {
            v30 = "";
        } catch(e48) {
        }
        return "";
    },
    ...v46,
};
class C50 {
    constructor(a52) {
        let v53;
        try { v53 = a52(this); } catch (e) {}
        try { v53.toString(v53, C50, v53, a52, v53); } catch (e) {}
    }
}
class C55 {
}
const v56 = C55.bind();
function f57(a58, a59) {
    function f60() {
        return v56;
    }
    return v56;
}
v56.toString = f57;
const v61 = [536870887,-2147483648,38638,4294967295];
const t74 = [1,268435456,-17443,-32622,512,255,-7880468,3];
t74[3702013189] = v61;
const t76 = 8;
new t76();
Symbol()[Symbol.split];
v56.toString();
