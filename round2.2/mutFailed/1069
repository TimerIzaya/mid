const v0 = [1.2210860589333646e+308,1e-15,1.7976931348623157e+308,-1.0,0.27597709604677645,325976.19601972704];
const v1 = [0.8784512155891941,-1000.0,817.013363572237];
const v2 = [2.220446049250313e-16];
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    const v7 = v2?.constructor;
    try { new v7(a6, v1); } catch (e) {}
    a6[0];
    try { a6.some(v0); } catch (e) {}
    try {
        this.g = v2;
    } catch(e11) {
    }
    try {
        this.a = v2;
    } catch(e12) {
    }
}
F3.d = F3;
const v13 = new F3(v2, v0);
v13.length;
const v15 = new F3(v0, v0);
v13.a = v15;
new F3(v2, v15);
const v20 = 15465 >>> 15465;
[-2.220446049250313e-16,0.5237434700393077,2.2250738585072014e-308,0.0,2.478787694784938e+307];
[-6.398449456948782,2.220446049250313e-16,438730.5060686765,798.0140803754684,-142087.2453064737,438.25228490243285];
[0.04299213269706004,847098.3983817827,-1000000000.0];
/foo(?=bar)baz/mui;
function f29(a30) {
}
function F32(a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    const v37 = this?.__defineGetter__;
    try { new v37(4294967297, F32); } catch (e) {}
    function f39(a40, a41, a42) {
        [1.4569602108728237,2.2250738585072014e-308,-8.749849594183809,1.7976931348623157e+308,-750575.5072173113,-6.39093359150717e+307,-478042.0120175524,0.9013003501587332,-2.2250738585072014e-308,889.3168632024424];
    }
    f39.d = f39;
    const o46 = {
        "type": "function",
    };
    const v47 = new Worker(f39, v20, o46, -1);
    const v48 = v47?.constructor;
    try { new v48(); } catch (e) {}
}
new F32();
