try {
    new BigInt64Array(3);
} catch(e3) {
}
try {
    new Uint32Array(2417);
} catch(e7) {
}
try {
    const v10 = new BigUint64Array(143);
    Object.defineProperty(v10, -1, { configurable: true, enumerable: true, value: v10 });
    const v12 = 2417 | (2417 || v10);
    new Uint32Array(3, v12, v12);
    function f14() {
        return v10;
    }
    f14();
} catch(e19) {
}
class C20 extends BigInt64Array {
    constructor(a22, a23, a24) {
        super(a23, 2417, a22);
        try {
            new BigUint64Array(4);
        } catch(e28) {
        }
        try {
            new Uint8ClampedArray(3686);
        } catch(e32) {
        }
        try {
            new Int16Array(8);
        } catch(e36) {
        }
    }
}
const t36 = 2417;
new t36(3, 3, 2417);
const v38 = new C20(143, 143, 2417);
const v39 = new C20(3, 143, v38);
[2.94898712028665e+306];
[-3.996177762408054e+307,-8.842172553273353e+307,1.2476009030520116e+308,-1000000.0,0.0];
function f43(a44, a45, a46, a47) {
    arguments[64];
    return a46;
}
f43(3);
[5.0,1000000000000.0,-3.5511520382043754e+307,-7.591488774587532,2.4593689282666512e+306,0.5577219597487572];
/(?:a+)+/gsdvyi;
const v57 = [-1,"ignoreCase"];
const v58 = [BigInt64Array,1000.0];
[v58,v57];
Date();
class C65 extends Date {
}
const v67 = new Array(3);
try {
    const o68 = {
    };
    o68.g = v67;
    o68.e = v58;
    o68.c = v39;
} catch(e69) {
}
const o70 = {
    "execution": "async",
    "type": "major",
};
gc();
[536870888,-4294967296,-256,-1405734208,9,13,1073741823,-2296,1073741824,9007199254740991];
const t68 = -300860.4839574412;
t68[Symbol.iterator] = -9.798467176038198;
