function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = -1211550597;
    } catch(e3) {
    }
    try {
        try {
            this.fuck(undefined, [,-1211550597,F0,this], -872655138n);
        } catch(e8) {
        }
        this.d = -1211550597;
    } catch(e9) {
    }
}
function f10(a11) {
    Symbol.hasInstance;
    return Symbol;
}
F0.toString = f10;
new F0();
new F0();
const v16 = new F0();
let v18 = 4.0;
try {
    with (v16) {
        d = 174704.61455962388;
    }
    new Int16Array(1862);
} catch(e26) {
}
try {
    new Float32Array(7);
} catch(e30) {
}
try {
    v18 = 174704.61455962388;
} catch(e31) {
}
let v34 = 5375.36498257739;
Math.atanh(F0);
v34++;
const v37 = +v34;
const v38 = -v34;
Math.sinh(174704.61455962388);
Math.cos(174704.61455962388);
Math.cos(v38);
try {
    new Int16Array(1857);
} catch(e45) {
}
class C46 {
    static {
        this.o = v37;
        try { this.o(this, this); } catch (e) {}
    }
}
