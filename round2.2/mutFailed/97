let v0 = -0.0;
for (let v3 = 0; v3 < 32; v3++) {
    v0["p" + v3] = v3;
}
class C6 {
    #p(a8, a9) {
        a8.a += -9.254766827132215;
        function f10(a11, a12) {
            try {
                a8.length = 191;
            } catch(e14) {
            }
        }
        new Promise(f10);
        return 268435456;
    }
    374 = -9.254766827132215;
    536870889 = -9.254766827132215;
}
const v17 = new C6();
const v18 = new C6();
const v19 = new C6();
class C20 {
    [-9.254766827132215];
    static [C6];
    n(a22, a23, a24) {
        ({"d":C6,"g":v0,} = C6);
        return this;
    }
    [v0] = v17;
    constructor(a29, a30) {
        try {
            C6.a = a30;
            const v32 = Symbol.iterator;
            const o41 = {
                [v32]() {
                    let v34 = 10;
                    const o40 = {
                        next() {
                            v34--;
                            const v38 = v34 == 0;
                            const o39 = {
                                "done": v38,
                                "value": v34,
                            };
                            return o39;
                        },
                    };
                    return o40;
                },
            };
        } catch(e42) {
        }
        super[v0][Symbol.toStringTag];
    }
}
new C20(v17, v18);
new C20(v18, C20);
new C20(v18, v19);
try {
    new Int8Array(257);
} catch(e53) {
}
try {
    new Int16Array(11);
} catch(e57) {
}
delete v17[268435456];
v18[v0];
try {
    new Uint16Array(8);
} catch(e66) {
}
const v67 = [831718659,-265172310,55689,268435439,4273,-61632,1024,-5];
class C69 extends Uint16Array {
}
new C69(v67);
