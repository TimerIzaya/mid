function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a5;
    } catch(e6) {
    }
    try {
        this.g = 2147483647;
    } catch(e7) {
    }
    try {
        this.f = a5;
    } catch(e8) {
    }
}
const v10 = [4096];
v10[0] = v10;
const v11 = v10.toLocaleString("setTime");
const v12 = new F3(352992623);
function f13() {
    2147483647 | v11;
    class C18 {
        #b;
        [3681] = Int8Array;
        #e = 127;
        h;
        #g;
    }
    return 3457;
}
v12[Symbol.toPrimitive] = f13;
const v21 = new F3(352992623);
v21.e = v21;
v21.e = v21;
const v22 = new F3(3457);
function f23(a24, a25) {
    with (v22) {
        try { f(f, f, f); } catch (e) {}
    }
    return 2147483647;
}
v22.toString = f23;
function f28(a29, a30, a31) {
    a29.b = v10;
    a31[Symbol.toPrimitive] = f28;
    a30 >> a30;
    a31.b = a31;
    const o35 = {
        "h": a31,
        [2147483647]: a29,
        268435440: a31,
        [v22]: F3,
        "d": a31,
        168: a30,
        [a29]: v12,
        "f": F3,
        [v21]: a30,
        "e": a29,
        ...a29,
    };
    return o35;
}
f28(v21, 352992623, v21);
const v37 = f28(v12, 3457, v22);
v37.a = v37;
f28(v21, 2147483647, v21);
try {
    Uint16Array(196);
} catch(e42) {
}
try {
    Int8Array(13);
} catch(e46) {
}
const v48 = JSON?.stringify;
try { new v48(v21, v21, v10); } catch (e) {}
try {
    JSON(Uint16Array);
} catch(e51) {
    e51.message;
}
const v53 = [JSON,196,13];
const v54 = [JSON,13,Uint16Array];
const v55 = [v54,196,v54];
const v56 = [v53,v54,196,Uint16Array];
const v57 = [v56,v56];
try { v57.groupToMap(v55); } catch (e) {}
const v59 = [196,v55,JSON,196,v55,v55,JSON,v53];
123 | 123;
Array(123);
try { new Int32Array("setTime", v56, v56); } catch (e) {}
try {
    class C66 extends Int32Array {
    }
    C66(v59);
} catch(e68) {
    e68.message = e68;
}
