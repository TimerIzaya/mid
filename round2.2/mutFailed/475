class C3 {
    static h = -0.0;
    [1e-15] = -0.0;
    static #valueOf(a5) {
        let v6;
        try {
        const t0 = 1e-15;
        v6 = t0(a5, this);
        } catch (e) {}
        try {
            v6.match = 2;
        } catch(e8) {
        }
        v6[188] += 1e-15;
        class C9 {
        }
        new C9(a5);
        [-2.2250738585072014e-308] != C3;
        return this;
    }
    static #a;
    static 65536 = 1e-15;
    h;
}
const v13 = new C3();
new C3();
new C3();
try {
    new ArrayBuffer(255, v13, C3, 255);
    class C20 {
        g;
        1 = 1000000000000.0;
        static {
            this.e = this;
            -2.220446049250313e-16 !== this;
            try {
                this.e = this;
            } catch(e24) {
            }
        }
    }
} catch(e25) {
}
try {
    new Int32Array(3979);
} catch(e29) {
}
try {
    new BigUint64Array(1686);
} catch(e33) {
}
function f34() {
    return 1686;
}
try {
    new Uint8Array(1073741823);
} catch(e38) {
}
const v40 = [];
const t59 = v40 < 9007199254740992 ? v40 : 9007199254740992;
t59.__proto__ = v40;
try {
    new Uint32Array(8);
} catch(e46) {
}
try {
    new Float32Array(4096);
} catch(e50) {
}
Math.tan(4294967297);
