let v1 = 13n;
class C3 extends Int16Array {
}
-9223372036854775808n ^ -9223372036854775808n;
~-1000.0;
Math.log1p(-1000.0);
Math.cos(796705278);
++v1;
class C15 {
    n(a17, a18) {
        let v19;
        try { v19 = this.from(835903469n, a17, a18); } catch (e) {}
        try {
            this.fuck(v19, v1, a18, v1);
        } catch(e21) {
        }
        return v1;
    }
    constructor(a23) {
        %VerifyType(this);
    }
    static [835903469n];
    #h = v1;
}
const v24 = new C15(835903469n);
const v25 = new C15(v1);
const v26 = new C15(v1);
/mf/gdv;
/SY/mgdi;
("number")[-1];
function f31() {
    return f31;
}
class C32 extends f31 {
    static [f31];
}
/(?:ab)+/gsyi;
const v39 = [1e-15,-1000.0,-1000000000000.0,0.24718469695380962,9.59320331048082];
class C40 extends Float32Array {
    #e;
    constructor(a42, a43, a44, a45) {
        super(a44);
        const o48 = {
            "type": "minor",
        };
        throw 835903469n;
        try {
            v24.#e = v25;
        } catch(e50) {
        }
        o48.execution = v26;
        gc(o48);
    }
}
const v52 = new C40();
new C40(v39, 257, 257, 257);
v52[257] = v39;
