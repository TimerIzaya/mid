for (let v1 = 0; v1 < 10; v1++) {
    class C2 {
    }
    [C2,[38662.40328402922,-198523.96142691502,-2.220446049250313e-16,-1000000.0,-5.0,-129096.9908578383]];
}
class C7 {
    10;
    static b;
    #f = "unscopables";
    m(a9, a10) {
        try { new a9("unscopables", "unscopables", a9, this, a10); } catch (e) {}
        try {
            const t12 = 255;
            new t12(2832);
        } catch(e15) {
        }
        try {
            new Float64Array(2);
        } catch(e19) {
        }
        try {
            new Float32Array(1452);
            const v24 = new Map();
            const v25 = [1.0,0.4865366298314271,-2.2250738585072014e-308,-1.7976931348623157e+308,-5.0];
            try {
                v24.g = v25;
            } catch(e26) {
            }
        } catch(e27) {
            let v29 = -256n;
            v29 **= 5663n;
            return Int32Array;
        }
        return 255;
    }
}
new C7();
const v32 = new C7();
const t38 = 255;
const v33 = new t38();
try {
    new Uint8ClampedArray(151);
} catch(e37) {
}
try {
    new Uint16Array(9);
} catch(e41) {
}
const v44 = [2147483647,-51611,41438,257,240493485,256,268435456,15];
for (let v45 = 0; v45 < 5; v45++) {
    delete v44[v45];
}
class C48 extends v33 {
}
const t54 = 3806;
const v49 = new t54();
v49["lastIndexOf"]();
try {
    new Float32Array(3806);
} catch(e53) {
}
let v54 = -2147483648n;
const v56 = `
    try { v44["setInt8"](); } catch (e) {}
`;
try {
    const t66 = "size";
    t66["size"] = "unscopables";
} catch(e60) {
}
const v61 = [536870889,268435440,-8,115969482,283498361,-9223372036854775808];
const v64 = [v44];
function f65() {
    return v44;
}
v64.toString = v32;
[false,v64];
try { new Int8Array(Int8Array); } catch (e) {}
try { v61.flat(-1539777981n); } catch (e) {}
v54 <<= 5074n;
const v70 = /V+/mguyi;
function F71(a73, a74) {
    if (!new.target) { throw 'must be called with new'; }
    const v75 = this?.constructor;
    try { new v75(a74, a74); } catch (e) {}
    try {
        a73.b = a74;
    } catch(e77) {
    }
    this.f = v70;
}
