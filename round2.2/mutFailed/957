class C3 {
    a = "-128";
    constructor(a5, a6) {
        a6.d = a6;
        for (let i8 = 0; i8 < 9; i8++) {
            try {
                const v16 = new Uint8Array(155);
                try { v16.copyWithin(i8, C3); } catch (e) {}
            } catch(e18) {
            }
            try {
                const v21 = new Uint8ClampedArray(255, this, a5);
                try { v21.find(Uint8ClampedArray); } catch (e) {}
            } catch(e23) {
            }
            Uint32Array.prototype = Uint32Array;
            try {
                const v26 = new Uint32Array(1);
                v26[0];
            } catch(e28) {
            }
        }
    }
}
try { C3.toString(); } catch (e) {}
const v30 = new C3("-128", C3, 6, 1000000000.0, 1000000000.0);
v30.b = v30;
const v31 = new C3(v30, C3);
const v32 = new C3(C3, v31);
v32.a = v32;
/R\P{Decimal_Number}r(?:ab|cde)a[a]+/mgvy;
/a\bc?/mgdi;
/(?:ab)?/msdi;
const v39 = [831718659,-265172310,55689,268435439,4273,-61632,1024,-5];
Uint16Array.length;
class C42 extends Uint16Array {
}
try { new C42(); } catch (e) {}
new C42(v39);
9 + 9;
let v49 = 536870888;
v49++;
function f52(a53, a54, a55) {
    a53 & a53;
    const o57 = {
        "g": -9223372036854775808,
        541717691: "1000",
        __proto__: "ziXf",
        "a": "ziXf",
        [9]: null,
        "f": a53,
        [a54]: "ziXf",
        ...a55,
        "d": 9,
        "a": v49,
    };
    return o57;
}
f52(v49, v49, f52(-9223372036854775808, -9223372036854775808, "toString"));
%PrepareFunctionForOptimization(f52);
const v60 = f52(v49);
v60.d = v60;
%OptimizeFunctionOnNextCall(f52);
f52();
