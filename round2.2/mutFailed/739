const v0 = [666275.6649405388];
const v1 = [8.834054602898118e+307,3.842527229495925,0.0,NaN];
function f2(a3) {
    function F4(a6) {
        if (!new.target) { throw 'must be called with new'; }
        this.e = a6;
    }
    return F4;
}
Object.defineProperty(v1, Symbol.toPrimitive, { configurable: true, value: f2 });
const v9 = [6.221650769469775];
function F10(a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v0;
    } catch(e14) {
    }
    try {
        gc();
        Uint16Array.toString = Symbol;
        function F18() {
            if (!new.target) { throw 'must be called with new'; }
        }
        if (F18 >= Uint16Array) {
        }
        this.a = a13;
    } catch(e21) {
    }
}
new F10(v9, v1, v9);
const v23 = new F10(v1, v9);
function f24(a25) {
    try {
        v9.toString = Symbol;
    } catch(e26) {
    }
    return v23;
}
v23[Symbol.toPrimitive] = f24;
const v29 = new F10(v9, v9);
v29.toString = Symbol;
[10.224256827322506];
const v31 = [258035.34747140785,3.1827448825502387,-160.27377638261692,11994.290907660965,0.949738605390156];
v31[Symbol.toPrimitive] = Symbol;
const v34 = [0.7481743353715221,-1000000000000.0,202.04928110615901];
function f35(a36, a37) {
    return 43721;
}
v34.toString = f35;
const v41 = [v34,v29,v31,v23];
v41.toString = Symbol;
[v41,v31,v41,v0];
const v43 = [v1,v41,v34,v0,v41];
v43[Symbol.toPrimitive] = f24;
new Map();
const v51 = [-65536,2147483649,-1,-65536,-65536];
try {
    new Map(133);
} catch(e55) {
}
const v56 = [-65536,v51,-65536,v51];
const v57 = [2147483649,v51,v56];
-1e-15 - -1e-15;
-(-19.33004984485433);
function f63(a64, a65) {
    a65 - a65;
    const o94 = {
        ...v51,
        toString(a68, a69) {
            return this;
        },
        o(a71, a72, a73) {
            return v0;
        },
        "h": -19.33004984485433,
        "d": -19.33004984485433,
        o(a75, a76, a77, a78) {
            function F79(a81, a82, a83) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    try {
                        BigInt64Array(8);
                    } catch(e87) {
                    }
                    this.split = v57;
                } catch(e88) {
                }
                try {
                    this.c = a76;
                } catch(e89) {
                }
                try {
                    this.a = -65536;
                } catch(e90) {
                }
            }
            new F79(a77, a75, a77);
            new F79(a64, a75, a65);
            new F79(v57, a75, v51);
            return a64;
        },
    };
    return o94;
}
const v95 = f63(v56, -1e-15);
v95.f = v95;
v95.f = v95;
const v96 = f63(v51, -737.1319223227008, -1e-15, -65536, v43);
function f97(a98, a99) {
    const o100 = {
        "deleteProperty": f63,
    };
    try {
        new Proxy(v57, o100);
    } catch(e103) {
    }
    return a98;
}
v96.then = f97;
f63(v57, -19.33004984485433);
function F105(a107, a108) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.__defineGetter__(a108, this); } catch (e) {}
    try {
        this.a = a108;
    } catch(e110) {
    }
    try {
        this.h = -19.33004984485433;
    } catch(e111) {
    }
    try {
        this.e = this;
    } catch(e112) {
    }
}
const v113 = new F105(2147483649, -737.1319223227008);
const v114 = new F105(-19.33004984485433, -1e-15);
new F105(v114, -737.1319223227008);
let v116 = -9007199254740992n;
-v116;
function F119(a121) {
    if (!new.target) { throw 'must be called with new'; }
    this.toString = f97;
    this.constructor = f63;
    try { this.constructor(a121); } catch (e) {}
}
const v123 = new F119();
function f124() {
    return f63;
}
function f125(a126) {
    try {
        undefined();
    } catch(e129) {
    }
}
Object.defineProperty(v123, "toString", { writable: true, enumerable: true, get: f124, set: f125 });
try { v123.toString(); } catch (e) {}
try {
const t0 = 1n;
t0();
} catch (e) {}
try {
    v116 >>= v43;
} catch(e132) {
}
const o141 = {
    "execution": "MIN_SAFE_INTEGER",
    2147483647: f63,
    "execution": "MIN_SAFE_INTEGER",
    "execution": "MIN_SAFE_INTEGER",
    o(a137, a138, a139, a140) {
    },
    "type": "minor",
};
gc(o141, v96);
try { v96.then(gc, v113); } catch (e) {}
