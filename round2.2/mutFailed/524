const v6 = ~-993150.0442454629;
v6 / v6;
const v8 = [-7,-28728,16];
function F9(a11) {
    if (!new.target) { throw 'must be called with new'; }
    class C12 {
    }
    new C12();
    a11[3];
    this.h = v8;
    this.f = a11;
    this.a = a11;
}
const v15 = -11675n / -9223372036854775808n;
try { Uint32Array.apply(Uint32Array, -1448595506n); } catch (e) {}
const v18 = new Uint32Array(Uint32Array);
("665815241").normalize();
const v21 = [v6];
try { v21.entries(); } catch (e) {}
v21[[64584,-65536,-4,23049,20286]] <<= v6;
v15 * v15;
try {
    v15[-993150.0442454629] = -1448595506n;
} catch(e25) {
}
2352 & 2352;
try {
    new Int32Array(2352);
} catch(e30) {
}
-4096;
try {
    new Float32Array(4096);
} catch(e35) {
    const v36 = [-1000000000.0,-474543.5428367342,-2.0,-1.5059691624765054e+308,-508962.78678965976,757.7053565895317,0.0,790.2898938093756,2.2250738585072014e-308,-1.0945802631095708e+308];
    for (let i = 0; i < 5; i++) {
        let [...v38] = v36;
        Symbol()[Symbol.split];
    }
}
BigInt64Array.length;
try { new BigInt64Array(Uint32Array, ...2147483649n); } catch (e) {}
try {
    class C48 extends undefined {
    }
} catch(e49) {
}
Int16Array.BYTES_PER_ELEMENT = Int16Array;
try {
    const v52 = new Int16Array(134);
    gc();
    6 % 6;
    const o63 = {
        [6]: 255,
        [6](a59, a60, a61, a62) {
        },
    };
    const v64 = v52[31];
    v64 >>> v64;
} catch(e66) {
}
const v68 = new Set();
try { v68.add(undefined); } catch (e) {}
function f70(a71, a72) {
    const v74 = a71.arguments?.propertyIsEnumerable;
    try { new v74(v18); } catch (e) {}
    const o79 = {
        valueOf(a77, a78) {
            return this;
        },
    };
    class C81 extends Float64Array {
        constructor(a83, a84, a85, a86) {
            super();
            try {
                this.buffer = a84;
            } catch(e87) {
            }
        }
    }
    return Set;
}
f70.prototype;
try {
const t0 = 4096;
t0();
} catch (e) {}
const v90 = (4096).__proto__;
try { v90.toString(F9); } catch (e) {}
const v92 = [];
try { v92.reverse(); } catch (e) {}
1024 % 1024;
v92.fill(1024, 2033518258);
const v98 = f70(f70, v68);
v98.d = v98;
4294967297n << 4294967297n;
const v102 = [4294967297n,v98,v68,f70];
try { v102.toSorted(-9n); } catch (e) {}
class C104 {
    static valueOf(a106, a107) {
    }
}
function f108() {
    return f108;
}
const v109 = /Fa(?=bbb|bb)c/msdu;
Symbol.prototype = Symbol;
v109[Symbol.iterator] = f108;
let v112;
try { v112 = v102.push(Int16Array); } catch (e) {}
v112 >>> v112;
v102 >= -9n;
