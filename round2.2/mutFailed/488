function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 31407;
    } catch(e3) {
    }
    try {
        this.d = 31407;
    } catch(e4) {
    }
    try {
        this.b = 31407;
        let v5 = "4294967295";
        class C7 {
            constructor(a9, a10) {
                v5 **= "6";
            }
        }
        new C7();
        new C7();
        new C7();
    } catch(e14) {
    }
}
const v15 = new F0();
const v16 = new F0();
const v17 = new F0();
function f18(a19, a20) {
    const o31 = {
        "d": v16,
        o(a22, a23, a24, a25) {
            a25[64];
            for (const v27 of a24) {
                v15[Symbol.species];
            }
            return this;
        },
        __proto__: a20,
        ...v17,
        "f": v15,
    };
    return o31;
}
const v32 = f18(v15, v15);
const v33 = f18(v16, v16);
f18(v17, v17);
[-15,128,1,4294967296,2147483648,-65537,9223372036854775807,1941010507,4294967297,-9223372036854775808];
const v36 = [-4294967295,-1078895290,40944,-8,3];
const v37 = [-16,1073741824,30063,16530,-268435456,9007199254740992];
class C38 extends f18 {
    constructor(a40, a41) {
        super(v17, a41);
        super.o(a41, this);
    }
    143 = v32;
    static b;
    e;
    get b() {
        v16[this] |= this;
        const v44 = f18(v16, v16);
        const o45 = {
            "call": f18,
            "getOwnPropertyDescriptor": f18,
            "getPrototypeOf": f18,
        };
        try {
            new Proxy(v44, o45);
        } catch(e48) {
        }
        return v44;
    }
}
new C38(v36, v15);
new C38(v36, v33);
new C38(v37, v37);
function f53(a54, a55) {
    return a54;
}
const v56 = f53(f53, f53);
const v57 = f53();
const v58 = [v56,v56];
const v59 = [v56,v56];
const v60 = [v56,v56];
const o61 = {
    [f53]: v60,
    "g": 9,
    "h": 9,
    "c": v56,
    "e": 9,
    "d": v58,
};
delete o61.d;
v59[9] = v57;
v59.length = 9;
