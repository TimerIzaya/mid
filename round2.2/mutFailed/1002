function f0() {
}
-Infinity;
-864.3546497554648 === -864.3546497554648;
247 >> 247;
try { Int32Array.bind(-864.3546497554648); } catch (e) {}
try {
    new Int32Array(247);
} catch(e10) {
}
try { ("number").toWellFormed(); } catch (e) {}
const v17 = [64,-16];
const v18 = [10,-65535,10000,-15,1549548396,2088147870,-275245129];
const v19 = [-2,1183579921,-1185159695,535180521,-4294967296,16,-2];
[["symbol",v18,v19,"symbol"],v19,v19];
const v22 = [v19,"number"];
try { ("object").toUpperCase(); } catch (e) {}
-1000000000000.0 !== -1000000000000.0;
function f31(a32) {
    const o36 = {
        "h": a32,
        "f": v17,
        toString(a34, a35) {
            return -1000000000000.0;
        },
    };
    const o40 = {
        "h": -1.7976931348623157e+308,
        5: 519490.8189746933,
        [519490.8189746933]: -1.7976931348623157e+308,
        ...519490.8189746933,
        [-1.7976931348623157e+308]: 519490.8189746933,
        get g() {
            return 519490.8189746933;
        },
    };
    return o40;
    return a32;
}
class C41 extends f31 {
    valueOf(a43, a44) {
    }
}
function F45(a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    a48.length;
}
const v50 = new F45(F45, F45);
-1024n >> -1024n;
function f53(a54, a55, a56) {
    2290 !== 2290;
    new f0(2290);
    class C62 {
        static #p(a64, a65, a66, a67) {
        }
        static p(a69, a70) {
            return "cu";
        }
        valueOf(a75, a76, a77, a78) {
            try {
                ("cu").#p();
            } catch(e80) {
            }
        }
    }
    try { new C62(); } catch (e) {}
    const o83 = {
        valueOf() {
            return f53;
        },
    };
    const o97 = {
        12: a56,
        "a": a55,
        n(a85, a86, a87, a88) {
            a85["trim"](this, v50, -1024n, "trim", a55);
            return a55;
        },
        get f() {
            this.p(v50, this, Int32Array);
            return Int32Array;
        },
        "e": v18,
        m(a94, a95, a96) {
        },
    };
    const v99 = [-1.7976931348623157e+308,Infinity];
    new Int16Array([0.9435937689505415,-1.7976931348623157e+308,-2.2250738585072014e-308,603229.2597569963,4.277815125009424,-659598.8215397063]);
    try {
        const v103 = [-1576198342,16,-12,1,-5,13,-4294967295,-128,-9,1493862325];
        const v104 = v103?.filter;
        try { new v104("feO"); } catch (e) {}
        v103.includes(-9223372036854775807, -9223372036854775807);
        class C108 {
            static 1517041233;
            3382289756 = v103;
        }
        try { new C108(); } catch (e) {}
        const v110 = new C108();
        v110[3382289756];
        v99.toLocaleString("NKXm", "NKXm");
        const o115 = {
            3294873877: "1A",
            2147483648: "-268435456",
        };
        const o116 = {
            ...o115,
        };
    } catch(e117) {
    }
    return o97;
}
const v119 = f53()?.n;
try { new v119(2.2250738585072014e-308, f31, f31, "valueOf"); } catch (e) {}
%PrepareFunctionForOptimization(f53);
f53();
%OptimizeFunctionOnNextCall(f53);
f53();
try {
    const v123 = new Int32Array(167);
    try { v123.join(v22); } catch (e) {}
} catch(e125) {
}
7 >>> 7;
try {
    new Uint32Array(7);
} catch(e130) {
}
function f132(a133, a134) {
    try { a134.apply(BigInt64Array, a134); } catch (e) {}
    a133();
    return f132;
}
try { f132.toLocaleString(); } catch (e) {}
const v139 = new Promise(f132);
try {
    v139[4] = v22;
} catch(e140) {
}
Object.defineProperty("object", 2623, { configurable: true, get: f132 });
const v142 = new BigInt64Array(v139.then(Promise), f132, BigInt64Array);
try { v142.toSorted(v142); } catch (e) {}
