const v3 = [536870889n,-2n];
function f4(a5) {
    return 4294967296n == 129;
}
v3.valueOf = f4;
const v9 = [v3];
v9.toString = f4;
const v10 = [7n,v3,-2n,v3];
v10[1] = v10;
function F11(a13, a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = v3;
    Object.defineProperty(a14, 2, { writable: true, value: a13 });
    function f16() {
        return f4;
    }
    Object.defineProperty(a15, "toString", { writable: true, configurable: true, get: f16 });
    let v17;
    try { v17 = a14.toString(); } catch (e) {}
    const o21 = {
    };
    o21.g = this;
    try {
        o21.g = 1938440558n;
    } catch(e22) {
    }
    try {
        const o23 = {
        };
        o23.g = 1938440558n;
        o23.b = -21185n;
    } catch(e24) {
    }
    try {
        const o25 = {
        };
        o25.g = 1938440558n;
        const v26 = [];
        v26[Symbol.toPrimitive] = f4;
        [v26];
        const o33 = {
            "a": v26,
            [v26](a31, a32) {
            },
        };
        o25.b = -21185n;
        o25.c = this;
    } catch(e34) {
        while (0 < 7) {
        }
    }
    try {
        const o38 = {
        };
        o38.a = a13;
        o38.g = 1938440558n;
        o38.b = -21185n;
        o38.a = 1938440558n;
    } catch(e39) {
    }
    a15[2];
    const o45 = {
        "f": v17,
        set h(a43) {
            super.d;
        },
        ...v17,
        "g": 2450,
    };
    try {
        this.e = a14;
    } catch(e46) {
        class C50 {
            static 1517041233;
            constructor(a52) {
                for (let v53 = 0; v53 < 25; v53++) {
                    this["p" + v53] = v53;
                }
            }
            /*
            constructor(a57, a58, a59) {
                if (a58) {
                    this <= this;
                    try {
                        new Uint8Array(127);
                    } catch(e64) {
                    }
                    try {
                        new Float64Array(3017);
                    } catch(e68) {
                    }
                    7n > undefined;
                    function F76(a78, a79, a80, a81) {
                        if (!new.target) { throw 'must be called with new'; }
                    }
                    const v82 = new F76(F76, F76, Set, F76);
                    const v83 = (a84, a85, a86, a87) => {
                        try {
                            a85[Set] = "g";
                        } catch(e88) {
                        }
                        return a85;
                    };
                    v83(F76, v83("A", v82), F76, v82);
                    try {
                        new Int8Array(3);
                    } catch(e92) {
                    }
                }
            }
            */
        }
    }
    try {
        this.f = v10;
    } catch(e96) {
    }
}
const v97 = new F11(-2n, v9, v10);
v97.toString = f4;
try {
    v3.toString = -2n;
} catch(e98) {
}
new F11(F11, v97, 536870889n);
const v100 = new F11(7n, v10, v10);
("undefined")["matchAll"]();
function f104() {
    const o106 = {
        [10]: 10,
        2: 10,
        1601746401: 10,
        123: f104,
    };
    return o106;
}
const v107 = f104();
const o108 = {
    ...v107,
};
v100.f;
const v110 = new F11(7n, v9, v9);
v110.f;
const v114 = new Float64Array(16);
v114.reverse();
const v116 = [];
const v117 = [-4.0,1.0,-1.7976931348623157e+308,0.6175352379554376,218339.60799626866];
v117[Symbol.toPrimitive] = f104;
const v121 = [v117,v117,v117,v117];
v121.toString = Symbol;
Map.e = Map;
const v123 = new Map(v116);
v123.e = v97;
function f124(a125, a126, a127) {
    Object.defineProperty(a127, "e", { value: a126 });
    try { a126.toString(); } catch (e) {}
    a127[0] = a127;
    try { a127.map(v117); } catch (e) {}
    a127.e = a127;
    const o136 = {
        ...v121,
        5: 5n,
        __proto__: v123,
        "g": 5n,
        toString(a131, a132, a133) {
            super.d;
            a126 & a125;
        },
    };
    o136[30] = f124;
    o136.map = a125;
    const v137 = o136[5];
    v137 << v137;
    o136[30] = o136;
    return o136;
}
f124(f124, v121, f124(5n, f124, Map));
%OptimizeFunctionOnNextCall(f124);
