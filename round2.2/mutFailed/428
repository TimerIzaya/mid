const v0 = [0.0,-2.220446049250313e-16,-2.2250738585072014e-308,-1.6358379147548961e+308,-1.7976931348623157e+308,0.28065076653541654,Infinity];
const v1 = [45238.33944342239,2.0,-Infinity,2.266200926985986,-9.10382771606012,-574.8936133938687];
const v2 = [2.1975402432617344,-214.88748474921567,4.0,-Infinity,2.220446049250313e-16,0.8715535476050643,688172.4876977187,1000.0];
function f3(a4, a5) {
    a4 << v2;
    try {
        v2.toString = a4;
    } catch(e7) {
    }
    return a5;
}
v2.toString = f3;
class C8 {
    static #c = C8;
    #a;
    [v2] = v0;
    7 = v0;
    p(a10, a11) {
        v2[v2];
        return -1073741824n;
    }
    f = v2;
    static [v2];
}
const v16 = new C8();
new C8();
const v18 = new C8();
const o24 = {
    "maxByteLength": 127,
};
const v26 = new ArrayBuffer(127, o24);
try {
    new Float64Array(v26);
} catch(e29) {
}
[1719866080n,v1,v16];
[v18,v1,1073741824n,1073741824n];
[C8];
function F33() {
    if (!new.target) { throw 'must be called with new'; }
}
new F33();
new F33();
const v38 = new F33();
[757.5772170166554,-433076.5098646643,2.0,-1000000.0,830204.0178039675,0.6364887197842011,1000.0,-232643.88317577157,0.48315539648647576];
try {
    v16.f = 127;
} catch(e40) {
}
[Infinity,1.1617990056877035e+308,-2.0,2.2250738585072014e-308,-2.220446049250313e-16];
let [] = "undefined";
gc();
for (let v48 = 0; v48 < 32; v48++) {
    v38["p" + v48] = v48;
}
[268435441,4,6,4294967296,44218];
