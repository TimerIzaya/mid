let v0 = [];
[268435440,9007199254740991,-6,-2147483648,-5];
const v2 = [536870888,-2147483647,-54628,-2147483647,-4294967295,-1073741824];
const v6 = Date.UTC(3.6965337729794445, 3.6965337729794445, 3.6965337729794445, 3.6965337729794445, 3.6965337729794445, 3.6965337729794445, 806516.7407475726);
const v7 = v6?.constructor;
const v8 = new Date(v7);
v0--;
e = Date;
Object.defineProperty(v0, 10000, { configurable: true, enumerable: true, get: Date, set: Date });
try {
    v8[4294967296] = 3.6965337729794445;
} catch(e10) {
}
[-290239023,65535,255,-46198,16,5,9,-12];
const v16 = Symbol.match;
Array[v7] = -9223372036854775807;
try {
    v6[v16] = v2;
} catch(e17) {
}
const v18 = v2[Array];
const v21 = /a+/mduy;
/()*/sduyi;
function F23() {
    if (!new.target) { throw 'must be called with new'; }
}
class C25 {
}
[2.2250738585072014e-308,1000000.0,-0.0,1e-15,5.0,7.530241632350826,-1000000000000.0,0.5572189052537632,1.0292100673898448e+308];
for (const v27 in v2) {
    function f28() {
        return "m";
    }
}
/D?/gsui;
class C33 {
    static {
        const v35 = [];
        const v42 = v21["compile"]("compile");
        try {
            v35[NaN] = Infinity;
        } catch(e43) {
        }
        this.constructor;
        new WeakMap();
        const o50 = {
            ...v7,
            get f() {
                return 2147483647n;
            },
            [256n]: 6n,
            "arguments": v18,
        };
        class C51 extends v42 {
        }
        new C25();
    }
}
