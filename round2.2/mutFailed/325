/nI/sdvy;
const v4 = /\1(a)/gvyi;
v4.sticky = v4;
const v5 = /a$I/sdvi;
try {
    new Uint16Array(218);
} catch(e9) {
}
const v11 = 10 - 10;
try {
    new BigInt64Array(10);
} catch(e14) {
}
221 + 221;
try {
    new Float32Array(9007199254740991);
} catch(e19) {
}
const v22 = new Array(7);
let v23;
try { v23 = v22.indexOf(v22); } catch (e) {}
function F24(a26) {
    if (!new.target) { throw 'must be called with new'; }
    a26[4] = a26;
    try {
        this.f = v22;
    } catch(e27) {
    }
    try {
        this.d = a26;
    } catch(e28) {
    }
    try {
        this.b = 7;
    } catch(e29) {
    }
}
function f30() {
    return v5[Symbol.replace];
}
F24[Symbol.toPrimitive] = f30;
const v36 = new F24(F24);
const v37 = new F24(v22);
v37.findLast = v36;
const v38 = new F24(v36);
const v39 = [v38,v22,F24,v23,F24];
v39.toString = f30;
v39[1];
const v41 = [v22,Array];
const v42 = [v39,v37];
try { v42.find(218); } catch (e) {}
class C44 extends F24 {
    get f() {
        Object.defineProperty(this, this, { writable: true, value: this });
        try {
            try {
                v22.length = 7;
            } catch(e46) {
            }
        } catch(e47) {
            new e47(e47);
        } finally {
            try {
                C44[this] = v42;
            } catch(e49) {
            }
        }
        return v41;
    }
}
function f50(a51, a52) {
    function F53() {
        if (!new.target) { throw 'must be called with new'; }
        this.f = 25142;
    }
    const v56 = new F53();
    const v57 = new F53();
    function f58(a59, a60, a61, a62) {
        const o63 = {
            __proto__: a60,
            ...v57,
            "f": -1156523309,
        };
        return o63;
    }
    f58(-1156523309, f58(-1156523309, v56));
    return F53;
}
C44[Symbol.toPrimitive] = f50;
try { new v37(); } catch (e) {}
const v69 = new C44();
v69.e = v69;
new C44();
new C44();
for (const v72 of v42) {
    function f73() {
        return v11;
    }
    Object.defineProperty(v72, "findLast", { enumerable: true, get: f73 });
    try { v72.findLast(Uint16Array); } catch (e) {}
    const v75 = C44 % v42;
    try { new v72(7, 9007199254740991, v38, v75); } catch (e) {}
    /(ab)/guyi;
    const v78 = /Sfoo(?<=bar)baz/mdui;
    const v79 = /a\w0/svy;
    try { v79.compile(v78, v23); } catch (e) {}
}
