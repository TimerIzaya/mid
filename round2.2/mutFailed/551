try {
    new Int8Array(3991);
} catch(e3) {
}
try {
    new Int8Array(6);
} catch(e7) {
}
try {
    new Int16Array(4);
} catch(e11) {
}
class C12 extends Int8Array {
    constructor(a14, a15, a16) {
        super(4, 3991, 4);
        const o17 = {
        };
        o17.c = this;
        try {
            o17.c = Int16Array;
        } catch(e18) {
        }
        try {
            const o19 = {
            };
            o19.c = this;
            o19.g = 4;
        } catch(e20) {
        }
        try {
            const o21 = {
            };
            o21.g = this;
            o21.c = C12;
            o21.g = Int16Array;
            o21.e = a14;
        } catch(e22) {
        }
        0 < 10;
        Math.log10(Math);
        try {
            const o29 = {
                ...this,
                get e() {
                    super.e &= this;
                    return this;
                },
            };
            return "setSeconds";
            /viW(?<a>(?<b>(?<c>(?<d>.).).).)+/sduyi.test(o29);
            function F33(a35) {
                if (!new.target) { throw 'must be called with new'; }
                class C36 {
                    static h;
                    static {
                    }
                }
            }
            o29.h = o29;
            o29.c = Int16Array;
            o29.g = 4;
            o29.h = 6;
        } catch(e44) {
        }
    }
}
const v45 = new C12(4, 4, Int8Array);
new C12(4, v45, Int16Array);
new C12(3991, 6, Int8Array);
function f48() {
    return 4;
}
const v49 = [-1073741824,4,256,8,9007199254740992,128,5,4096,1024];
Array(1639);
class C54 {
    constructor(a56) {
        for (let [v57,v58] of "-1") {
            super.e **= v57;
        }
    }
}
new C54();
[268435440,536870889,65536,127,-925461098,-65535,56409,-4,268435439];
[-16,813319233,51733,-30234,512,-1891813364,256,-2147483649];
class C66 {
    constructor(a68) {
        delete this[v49];
    }
    [16755] = 16755;
}
new C66(16755);
