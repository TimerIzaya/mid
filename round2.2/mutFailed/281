let v1 = 949894134;
class C3 {
    static [6];
    e = -2147483647;
    [-2147483647];
    b = -2147483647;
    static get c() {
        const o5 = {
        };
        try {
            o5.g = this;
            try {
                super.e = 6;
            } catch(e6) {
            }
            var e = -2147483647;
        } catch(e7) {
            const o10 = {
                set b(a9) {
                },
            };
            return o10;
        }
        try { ("bigint").match(C3); } catch (e) {}
        [-239116175];
        [129,-9223372036854775807,10000,0];
        [-9007199254740992,-914380172,-4,-38787,65535,-8250,-4294967297,-999022707];
        super.c;
        function f21(a22, a23, a24) {
            const o30 = {
                "d": "description",
                [false](a26, a27, a28, a29) {
                    return a24;
                },
                ..."bigint",
                "g": "r",
                ["arguments"]: "bigint",
            };
        }
        try {
            const o31 = {
            };
            o31.g = this;
            o31.c = -2147483647;
        } catch(e32) {
        }
        try {
            const o33 = {
            };
            o33.g = this;
            o33.c = -2147483647;
            o33.e = -2147483647;
        } catch(e34) {
        }
        try {
            const o35 = {
            };
            o35.g = this;
            o35.c = -2147483647;
            o35.d = this;
        } catch(e36) {
        }
        return -2147483647;
    }
}
new C3();
let v38 = Uint32Array;
let v39 = Symbol;
const v40 = v39.split;
try {
    new v38(v40);
} catch(e42) {
}
new C3();
const v44 = new C3();
/4Exyz{1,32}AeU*/dvi;
const v46 = /xyz{1,32}?/i;
let v47 = /[Y]/sdv;
function f48(a49, a50) {
    try {
        v44.fuck(undefined, -4294967295, undefined, C3);
    } catch(e55) {
    }
    return a50;
}
v47.valueOf = f48;
Object.defineProperty(Symbol, Symbol.toPrimitive, { configurable: true, enumerable: true, value: v39 });
6 * Symbol;
v46["test"]("test");
Math.asin(v39);
let v67 = --v39;
const v68 = --v38;
++v67;
v68 - v47--;
--v38;
Symbol.toPrimitive;
v1--;
const v78 = [[4.0,-1.7976931348623157e+308,-1000.0]];
const v79 = Reflect.construct(Uint8Array, v78);
v79.toString = f48;
Reflect.get(v78, v79);
const v82 = new Int32Array(3);
v82.valueOf = f48;
v82[1] = v82;
