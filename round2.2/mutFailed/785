let v0 = 8.65622892215869;
let v5 = 0;
do {
    try {
        const t4 = -1024;
        t4[7] = 313642369;
    } catch(e6) {
    }
    v5++;
} while (v5 < 10)
try {
    const t11 = -618150.6746164387;
    t11.a = -1024;
} catch(e10) {
}
try {
    const t16 = -106739.68941591447;
    t16[313642369] = 313642369;
} catch(e11) {
}
class C13 {
    [C13] = v0;
    b;
    [-1024] = C13;
    static 2147483647 = v0;
    #b;
    static n(a15, a16) {
        super[a15];
        try {
            v0 ^= a15;
        } catch(e18) {
        }
        return 960146966;
    }
    [-1024];
    #h = -618150.6746164387;
    #b;
}
const v19 = new C13();
new C13();
const v21 = new C13();
try {
    const v24 = v21.b;
    try {
        v19[10] = v24;
    } catch(e25) {
    }
    const t47 = -106739.68941591447;
    new t47(256);
} catch(e27) {
}
try {
    new Int32Array(512);
} catch(e31) {
}
try {
    new Uint8Array(518);
} catch(e35) {
}
class C39 extends Uint32Array {
}
const v40 = new C39(2);
function f41(a42, a43, a44) {
    return a44;
}
const v47 = [Uint16Array,"function",v40];
const o48 = {
    "arguments": v47,
    "type": "function",
};
new Worker(f41, o48);
