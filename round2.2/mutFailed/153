Uint16Array.from(Uint32Array);
const v14 = [-59105,129,-8];
const v15 = [536870888,53946,15,554131037,-27007,13,40511,25964,22603];
const v16 = [1818003191,13,3];
const v18 = new Map();
const v19 = [v15,"-256",v18,"undefined",v18];
const v20 = [v16,v16,v18,"undefined"];
const v21 = [v19];
const v22 = v21 >= "undefined";
const v23 = v22 ? v21 : "undefined";
let v24;
try { v24 = v22(v23, v20, v15); } catch (e) {}
try {
    const t13 = "g";
    t13.valueOf = v24;
} catch(e25) {
}
("undefined")["undefined"];
v14.length >>= v24;
const o28 = {
};
try {
    o28.g = "g";
} catch(e29) {
}
try {
    const o30 = {
    };
    o30.g = "g";
    o30.f = "concat";
} catch(e31) {
}
try {
    const o32 = {
    };
    o32.g = "g";
    o32.f = "concat";
    o32.e = -1000000000.0;
} catch(e33) {
}
try {
    const o34 = {
    };
    o34.g = "g";
    o34.f = "concat";
    o34.e = -1000000000.0;
} catch(e35) {
}
("-256")["concat"](v21, v18);
function f38() {
    return -3.0;
}
function f41(a42, a43, a44, a45) {
    a42[Symbol.hasInstance];
    return 2147483649n;
}
f41(v24, v20, v16, o28);
function f53(a54, a55) {
    const o56 = {
        ...a54,
        "a": Uint32Array,
        [1000000000000.0]: a55,
    };
    return o56;
}
f53(1.0);
%PrepareFunctionForOptimization(1000000000000.0);
f53(-3.0);
