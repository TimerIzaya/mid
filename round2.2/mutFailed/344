-Infinity;
try { Array.isArray(-2147483648n); } catch (e) {}
129 != 129;
const v10 = new Array(129);
v10.b = v10;
const v11 = [-2147483648,-4096,-1111098373,512,-5,-37617315,8];
const v12 = [2147483647,10,24392,536870889];
const v13 = [0];
function f14(a15, a16, a17, a18) {
    function f19() {
        return Array;
    }
    Object.defineProperty(a15, "toString", { get: f19 });
    a15 << a15;
    a17 !== a17;
    try { a18.reduce(3n); } catch (e) {}
    const o37 = {
        [3n]: 3n,
        valueOf(a24, a25, a26, a27) {
            try {
                a27 ^= a25;
            } catch(e28) {
            }
            return 3n;
        },
        n(a30, a31) {
            const o35 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o35);
            return a16;
        },
    };
    try { o37.n(o37, -2.324359356027229e+307); } catch (e) {}
    return o37;
}
try { new f14(v12, 3n, 129, v12); } catch (e) {}
f14(-2147483648n, -2147483648n, 6n, v13);
f14(-2147483648n, 6n, v13, v10);
const v42 = f14(-2147483648n, 6n, f14, v11);
try { ("1907013482").strike(); } catch (e) {}
class C46 {
    ["1907013482"] = C46;
    5;
    0 = "1907013482";
}
const v47 = v42?.constructor;
try { new v47(443.91452255485115); } catch (e) {}
const v49 = new C46();
const o50 = {
    ...v49,
};
o50[1907013482] = o50;
