function F0() {
    if (!new.target) { throw 'must be called with new'; }
    function f2(a3, a4) {
        a3 ** this;
        function F6() {
            if (!new.target) { throw 'must be called with new'; }
        }
        return F0;
    }
    this.toString = f2;
    try {
        this.h = -65536;
    } catch(e9) {
    }
    try {
        this.f = -65536;
    } catch(e10) {
    }
}
const v11 = new F0();
function f12() {
    const v13 = v11 / F0;
    const t21 = [];
    t21[1726] &= 13;
    return v13;
}
v11.toString = f12;
const v16 = new F0();
function f17() {
    const o24 = {
        [1.7976931348623157e+308]: 1.7976931348623157e+308,
        8: "E",
        [10000](a22, a23) {
        },
    };
    return o24;
}
%PrepareFunctionForOptimization(f17);
f17();
f17();
%OptimizeFunctionOnNextCall(f17);
f17();
const v28 = new F0();
class C29 extends F0 {
    constructor(a31) {
        super();
    }
    3063155631 = v28;
    static #f = v16;
    3045982067;
    static [v11];
}
const v35 = new C29(v16);
const v36 = new C29(v35);
new C29(v36);
const v41 = [];
class C42 {
    constructor() {
        let v44 = v41(C42, C42);
        --v44;
    }
}
