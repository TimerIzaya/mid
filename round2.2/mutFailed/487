function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 31407;
    } catch(e3) {
    }
    try {
        this.d = 31407;
    } catch(e4) {
    }
    try {
        this.b = 31407;
    } catch(e5) {
    }
    const o9 = {
        "execution": "sync",
        "type": "minor",
    };
    gc(o9);
}
const v11 = new F0();
const v12 = new F0();
const v13 = new F0();
function f14(a15, a16) {
    const o27 = {
        "d": v12,
        o(a18, a19, a20, a21) {
            a21[64];
            for (const v23 of a20) {
                v11[Symbol.species];
            }
            return this;
        },
        __proto__: a16,
        ...v13,
        "f": v11,
    };
    return o27;
}
const v28 = f14(v11, v11);
const v29 = f14(v12, v12);
let v30 = f14(v13, v13);
[-15,128,1,4294967296,2147483648,-65537,9223372036854775807,1941010507,4294967297,-9223372036854775808];
const v32 = [-4294967295,-1078895290,40944,-8,3];
v11 - v30;
const v34 = v32 % v30;
v11[v34] /= v34;
try {
    v30 = v29;
} catch(e35) {
}
const v36 = [-16,1073741824,30063,16530,-268435456,9007199254740992];
class C37 extends f14 {
    constructor(a39, a40) {
        super(v13, a40);
        super.o(a40, this);
    }
    143 = v28;
    static b;
    e;
    get b() {
        v12[this] |= this;
        const v43 = f14(v12, v12);
        const o44 = {
            "call": f14,
            "getOwnPropertyDescriptor": f14,
            "getPrototypeOf": f14,
        };
        try {
            new Proxy(v43, o44);
        } catch(e47) {
        }
        return v43;
    }
}
const v48 = new C37(v32, v11);
new C37(v32, v29);
new C37(v36, v36);
v48.f;
try {
    v28.valueOf = f14;
} catch(e53) {
}
function f54(a55, a56) {
    return a55;
}
const v57 = f54(f54, f54);
const v58 = f54();
const v59 = [v57,v57];
const v60 = [v57,v57];
const v61 = [v57,v57];
const o62 = {
    [f54]: v61,
    "g": 9,
    "h": 9,
    "c": v57,
    "e": 9,
    "d": v59,
};
delete o62.d;
v60[9] = v58;
v60.length = 9;
