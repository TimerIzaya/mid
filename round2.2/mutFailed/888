function f0() {
}
let v1 = WeakSet;
function f2(a3, a4) {
    try { a4["o"]("o", a4, a3); } catch (e) {}
    return v1;
}
v1[Symbol.toPrimitive] = f2;
const v9 = new v1();
function f10() {
    return f0;
}
function f11(a12) {
    const v13 = [];
    [v13,v13,v13,v13,v13];
}
Object.defineProperty(v9, "toString", { configurable: true, get: f10, set: f11 });
class C15 {
    static d;
    static {
        const v21 = v1 && 0.8620960773109678;
        --v1;
        v21 - v1;
    }
    [v9] = f0;
    h = v1;
    249;
    #g;
    [v1];
}
const v24 = new C15();
const v25 = new C15();
const v26 = new C15();
v26[Symbol.toPrimitive] = f11;
const v29 = [v9];
const v30 = [v29,v1];
[v30];
class C32 {
    [v26] = v25;
    #valueOf(a34, a35, a36, a37) {
        %VerifyType(this);
        try {
            f0();
        } catch(e39) {
        }
        return v24;
    }
    #b = C15;
    constructor(a41, a42, a43) {
        Math.clz32(-2.220446049250313e-16);
        ~v1;
        Math.log1p(-566033942 && this);
        Math.acosh(--v1);
    }
}
const v53 = new C32(C32, v25, v26);
new C32(v24, v53, v53);
const v55 = new C32(v24, v25, v25);
class C56 extends C15 {
    valueOf(a58, a59) {
        try {
            super.toString(a59, v29, a59);
        } catch(e61) {
        }
        return v55;
    }
    static [v24] = C15;
    m(a63, a64, a65, a66) {
        try {
            super[a63] = v30;
        } catch(e67) {
        }
        delete v9?.a;
        try {
            new f0();
        } catch(e70) {
        }
        return a63;
    }
}
new C56();
new C56();
new C56();
try {
    new BigInt64Array(7);
} catch(e77) {
}
try {
    new Uint8ClampedArray(7);
} catch(e81) {
}
try {
    new Int32Array(4);
} catch(e85) {
}
/\P{scx=Greek}/mvy;
const v87 = /a[a]/gsvi;
const v88 = /(?:a+)+/gy;
try {
    new BigUint64Array(4096);
} catch(e92) {
}
let v93 = 2054;
try {
    new Float32Array(v93);
} catch(e96) {
}
try {
    new BigUint64Array(1000);
} catch(e100) {
}
let v104;
try {
const t0 = 7;
v104 = t0("268435441", BigUint64Array, "-624792606", v88);
} catch (e) {}
v93--;
new Int32Array("268435441", v104);
const t118 = "268435441";
t118.f = v87;
