const v0 = /O[\d-\d]/mgsdyi;
const v1 = /(?:a*)+Sxyz{1,}?/sdvyi;
const v2 = /[h0]/sdvi;
class C3 {
    1749378793;
    268435440 = v1;
    static 1073741823;
    [v2] = v1;
    static 9;
    constructor(a5, a6) {
        a5.dotAll = a5;
        a6.length;
        this[1749378793];
        this[3810] = this;
        try {
            a5.f = a5;
        } catch(e9) {
        }
    }
    3810;
    static f = v0;
}
C3.name;
try { new C3(v0, C3); } catch (e) {}
try { new C3(v0, C3); } catch (e) {}
const v13 = new C3(v1, v1);
const v14 = new C3(v1, v0);
v14[1749378793] = v14;
const v15 = v14[3810];
v15[1749378793] = v15;
const v16 = new C3(v14, v0);
v16[1749378793] = v16;
v16[268435440] = v16;
function F17(a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    a19.source = a19;
    a21[268435440];
    a21[1749378793];
    const v24 = this?.constructor;
    v24.b = v24;
    try { new v24(a19, a19, a20); } catch (e) {}
    try {
        this.h = C3;
    } catch(e26) {
    }
    try {
        this.d = v2;
    } catch(e27) {
    }
    try {
        this.g = C3;
    } catch(e28) {
    }
}
const v29 = new F17(v1, C3, v13);
v29.d;
new F17(v16, v16, v0);
const v32 = new F17(v2, v1, v14);
class C33 extends C3 {
    f;
    12;
    [v32] = v13;
    static [v14];
    get h() {
        v16.__proto__;
        const v37 = Symbol.iterator;
        const o46 = {
            [v37]() {
                let v39 = 10;
                const o45 = {
                    next() {
                        v39--;
                        const v43 = v39 == 0;
                        const o44 = {
                            "done": v43,
                            "g": v39,
                        };
                        return o44;
                    },
                };
                return o45;
            },
        };
        return o46;
    }
}
C33[1073741823];
new C33();
new C33();
const v50 = new C33();
v50.f;
2.2250738585072014e-308 - 2.2250738585072014e-308;
10 >> 10;
let v59 = 268435441;
v59--;
try { Map.apply(v29, C33); } catch (e) {}
for (let v64 = 0; v64 < 25; v64++) {
    continue;
}
