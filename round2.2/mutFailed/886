let v0 = 9007199254740990;
let v1 = 268435439;
let v2 = -2147483648;
class C3 {
    g = v1;
    4294967295;
    constructor(a5) {
        ({"e":v0,"g":v1,"h":v2,} = this);
        let v6;
        try { v6 = new v0(v2, this, v2, a5); } catch (e) {}
        v2[this] &&= v6 | this;
    }
    #toString(a9) {
        try { a9(a9, this, v1); } catch (e) {}
        return 65536;
    }
}
const v14 = new C3(v2);
const v15 = new C3(v0);
const v16 = new C3(v0);
let v19 = new Array(0);
class C20 {
    [v19];
    constructor(a22, a23) {
        try {
        } catch(e24) {
        }
    }
    b;
    /*
    constructor(a26, a27, a28, a29) {
        try {
            v19 = a27;
        } catch(e30) {
        }
        ([16,-2147483649,1073741823,-1,-664561063,6,512,0,-268435456])?.values;
        function f33() {
            const o40 = {
                [1.7976931348623157e+308]: 1.7976931348623157e+308,
                8: "E",
                [10000](a38, a39) {
                },
            };
            return o40;
        }
        f33();
    }
    */
    #d;
    static {
        delete v15[4];
        for (let i46 = 0, i47 = 10; i46 < i47; i46++, i47--) {
            try {
                new Uint32Array(1);
            } catch(e58) {
            }
            try {
                new Uint8Array(1024);
            } catch(e62) {
            }
            class C67 extends Array {
                [1000];
                static {
                    try {
                        const t64 = "size";
                        t64["size"] = "boolean";
                    } catch(e69) {
                    }
                }
                constructor(a71, a72, a73, a74) {
                    super(a71);
                }
            }
            new C67(1000);
            try {
                new Int8Array(1000);
            } catch(e78) {
            }
        }
    }
}
const v79 = new C20(v14, v14, v14, v15);
new C20(v15, v79, v15, v15);
new C20(v14, C20, v16, v15);
const v84 = [-2.0];
for (let v85 = 0; v85 < 25; v85++) {
    v84.__proto__;
}
for (let v87 = 0; v87 < 5; v87++) {
    v87 < 8;
    const o91 = {
    };
    gc(o91);
}
([-0.0]).toLocaleString(false);
