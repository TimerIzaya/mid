try {
    new Int32Array(512);
} catch(e3) {
}
const v4 = [0,-60352,-16,255,512,1023958910];
const v5 = [16,-28174,268435439];
const t6 = v4[[v4]];
t6[v5] = Int16Array;
try {
    const v11 = /abc|def|ghi/sy;
    function f12() {
        return v11;
    }
    const v18 = -2036353315 % ("o").lastIndexOf();
    Reflect.construct(Date, [-2036353315,-2036353315]).setFullYear("4", v18, v18);
    new Float64Array(222);
} catch(e24) {
    function F25(a27, a28, a29) {
        if (!new.target) { throw 'must be called with new'; }
        this.__lookupSetter__();
    }
    new F25(F25, F25, F25);
    Math.log2(1);
}
try {
    new Int8Array(3297);
} catch(e38) {
}
try {
    ([]).includes(-9223372036854775807, -9223372036854775807);
    const v44 = [1,-2147483647,22019,-10639,35035,478392429,-1019683570,1073741824,1073741825,-2147483648];
    const v45 = [-268435456,-9007199254740992,1073741824,8,536870887,10705497,-1791971074,2147483649,-9253];
    for (let i49 = 0, i50 = 10; i49 < i50; i50--) {
        v44["push"](i50, ...v45, ..."8gXv");
    }
    new Uint8Array(5);
} catch(e60) {
}
const o67 = {
    toString(a62, a63, a64, a65) {
        super[this];
        return a63;
    },
};
try { o67.toString(); } catch (e) {}
try {
    new Float64Array(4096);
} catch(e72) {
}
try {
    new Uint32Array(184);
} catch(e76) {
    function f77() {
        const o84 = {
            [1.7976931348623157e+308]: 1.7976931348623157e+308,
            8: "E",
            [10000](a82, a83) {
            },
        };
        return o84;
    }
    f77();
    f77();
}
268435441n > undefined;
const v90 = /YElci/vy;
([5]).fill(v90, 16, 13);
