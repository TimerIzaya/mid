try {
    new Uint32Array(2259);
} catch(e3) {
}
try {
    const v6 = new BigUint64Array(5);
    try { v6.sort(Uint32Array); } catch (e) {}
} catch(e8) {
}
try {
    const v11 = new Int32Array(1714);
    v11[1231];
} catch(e13) {
}
let v17;
try { v17 = ("jw").codePointAt(2259); } catch (e) {}
5 + 5;
Uint16Array.BYTES_PER_ELEMENT;
try {
    new Uint16Array(5);
} catch(e23) {
}
Int16Array.prototype = Int16Array;
try {
    new Int16Array(239);
} catch(e27) {
}
try {
    new Uint32Array(236);
} catch(e31) {
}
1714 || "jw";
let v40 = -4294967295;
const v41 = v40 % -87018153;
const v42 = --v40;
Math.sqrt(v42);
Math.acos(-87018153);
v42 ** v40;
Math.cos(v41);
const v47 = +-87018153;
13 instanceof v17;
try {
    const t42 = "-45185";
    t42[-2] = v47;
} catch(e52) {
}
2.2250738585072014e-308 & 2.2250738585072014e-308;
SharedArrayBuffer.name;
2100076023 + 2100076023;
(-1.688342711220072e+308) ** 1e-15;
