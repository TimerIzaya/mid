function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 1073741824;
    } catch(e3) {
    }
    function F4() {
        if (!new.target) { throw 'must be called with new'; }
        this.g = 536870889;
    }
    class C7 extends F4 {
        m(a9, a10, a11) {
        }
        valueOf(a13, a14) {
        }
    }
    new C7();
}
const v16 = [-2.2250738585072014e-308,1000.0,-317770.80357727257,2.220446049250313e-16,Infinity];
Int8Array(257);
const v23 = ["major"];
Reflect.apply(("async").localeCompare, "async", v23);
const v26 = [1073741824,-9007199254740991,8,1073741824,3,3,-1239223627,-65537,48309];
const v27 = [-60487,536870889,65536,-8];
function f28() {
    return "async";
    Date();
    function f32(a33, a34, a35, a36) {
        return Date;
    }
    return v26;
}
class C37 extends f28 {
    #h;
    3;
    constructor(a39, a40, a41, a42) {
        for (let v43 = 0; v43 < 25; v43++) {
            a40["p" + v43] = v43;
        }
        a40.__proto__ = this;
    }
}
const v46 = new C37();
const v47 = new C37();
class C48 {
    constructor(a50, a51, a52) {
        -a51;
    }
}
new C48(v27, v16);
v46[14] = v47;
v27.length = 77;
const v56 = new F0();
const v57 = new F0();
const v58 = new F0();
const v59 = [];
const v60 = [-5.421864874194631,0.9750012337280324,2.0,0.050641997620567425,-2.220446049250313e-16,-1.4049892895188477e+308,2.0,-1.6641117549639581,0.022213676122987303];
try {
const t0 = "toPrimitive";
t0(1610, 1396, ...v59, 1396, ...v60, ...v60);
} catch (e) {}
function F68(a70, a71, a72) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a70;
    } catch(e73) {
    }
    try {
        this.h = v56;
    } catch(e74) {
    }
}
const v75 = new F68(v57, v57, v56);
new F68(v58, 536870887n, v75);
new F68(v58, v57, F0);
for (let i = 0; i < 25; i++) {
    new Uint8ClampedArray();
}
