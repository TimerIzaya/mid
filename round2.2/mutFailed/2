function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    const v12 = this?.constructor;
    try { new v12(7, a10, 7, a8); } catch (e) {}
    a10 >>> a10;
    a11 & a11;
    try {
        this.d = a8;
    } catch(e16) {
    }
    try {
        this.h = a9;
    } catch(e17) {
    }
}
const v18 = new F6(7, 9007199254740990, 9007199254740990, 9007199254740990);
~(-1208203693);
++F6;
Math.clz32(9.234219658176581);
const v26 = new F6(7, 1288811186, 9007199254740990, 7);
v26.d;
new F6(1288811186, 7, 7, 7);
function F29(a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    const v33 = this?.__defineGetter__;
    function f34(a35, a36, a37) {
        a37 >= this;
        return 1208203693;
    }
    f34(this, this, v26);
    let v40;
    try { v40 = new v33(F29, F29); } catch (e) {}
    a31 + a31;
    try {
        v18.__proto__ = v40;
    } catch(e42) {
    }
    try {
        this.h = 9007199254740990;
    } catch(e44) {
    }
    try {
        this.b = a31;
    } catch(e45) {
    }
}
const v46 = new F29(9007199254740990, 1288811186);
v46.length = v46;
const v47 = new F29(7, 9007199254740990);
v47.h;
new F29(9007199254740990, 7);
-65537;
Math.exp(65537);
