function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = -2147483649;
    } catch(e3) {
    }
    try {
        this.h = -2147483649;
    } catch(e4) {
    }
    try {
        this.b = -2147483649;
    } catch(e5) {
    }
}
new F0();
const v7 = new F0();
const v8 = new F0();
try {
    new v7(2721);
} catch(e15) {
}
try {
    new Uint8Array(4);
} catch(e19) {
}
try {
    const t27 = -5.0;
    new t27(5);
} catch(e23) {
}
const v24 = [];
class C25 {
    20 = v24;
    static #h;
    #g;
    #f;
    [v24] = v24;
    #a;
    static f;
    #e;
}
const v26 = new C25();
const v27 = new C25();
const v28 = new C25();
function f29(a30, a31) {
    const o32 = {
        3131164112: v24,
        [a30]: v27,
        "a": v26,
        __proto__: v26,
    };
    return o32;
}
let v33 = f29();
const v34 = f29();
f29(v26);
v34.a %= 2721;
f29 ** 5;
try {
    v34[Int8Array] = v24;
} catch(e37) {
}
function f38(a39, a40, a41, a42) {
    const o43 = {
        [a40]: v28,
        65536: a41,
    };
    return o43;
}
f38(v27, v27, v33, v8);
class C48 {
    static toString(a50) {
    }
    4294967295;
}
new C48();
new C48();
new C48();
const v54 = [];
[];
try {
    v26.__proto__ = "fw";
} catch(e57) {
}
"f" >= "fw";
v54 ** (v54 & v54);
f38();
const v62 = f38(f29, v26);
new v34();
new Int16Array();
class C71 extends Int16Array {
    constructor(a73, a74, a75, a76) {
        super();
        try { this.subarray(a75); } catch (e) {}
        delete this.byteLength;
    }
}
let v79 = new C71(129, 403, 126, 129);
let v80 = new C71(126, 129, 403, 403);
const v81 = [1717804318,2147483649,271900802,1901566192,-536870912,-25703];
[-625198623,10,16,-2068472766,9007199254740992];
[32903393,536870889,-64982,10,-9783,7,10,-4,-5];
[-2.0];
const v85 = v81 * 129;
const v86 = 126 | v81;
v62[Int16Array] ^= v85;
v33[v86] *= v86;
v33 /= C71;
v80 <<= v80;
++v79;
Math.atanh(v79);
let v91 = Math.fround();
const v92 = ++v91;
Math.acos(v92);
-(16811 | v92);
