const v0 = [0.5922911838055624,-3.6916913539613185e+306,1000000000000.0,89287.61448573461,-1e-15,-1e-15,211.7689021567253,-9.575591932702437,-803287.6043206987];
[0.0];
const v2 = [1.7976931348623157e+308,-2.0,1000000.0,0.9746421707269453,0.7776625361374233,0.5910932993681529];
function f3() {
    return v2;
}
[-13333,1906883424,-13333,-1446527022];
[1906883424,1906883424,1906883424];
const v18 = [-1446527022];
const v19 = [257];
let v20;
try { v20 = v19.indexOf(v18); } catch (e) {}
[9007199254740992,-4294967295,8438];
[-25209,32718,536870888,415118063,-8,-1515289688,47888,9,-11,3106];
/x6(?: foo )/mgsdvy;
/(fS1(?<a>)VOa)/suyi.dotAll;
const v26 = /(m(?:ab)|cde)/gv;
v26.b = v26;
try {
    new Float64Array(1863);
} catch(e30) {
}
BigUint64Array.d = BigUint64Array;
try {
    const v33 = new BigUint64Array(1000);
    try { v33.reverse(); } catch (e) {}
} catch(e35) {
}
try {
    new Uint8ClampedArray(255, v18);
} catch(e39) {
}
const v41 = new WeakSet();
const o42 = {
};
new isFinite(v41, o42);
gc();
class C47 {
}
const v48 = new C47();
const v49 = v48?.constructor;
let v50;
try { v50 = new v49(); } catch (e) {}
const v54 = [];
const v55 = [-4.0,1.0,-1.7976931348623157e+308,0.6175352379554376,218339.60799626866];
const v57 = [5n,5n];
const v59 = new Map();
function F60() {
    if (!new.target) { throw 'must be called with new'; }
    if (v49) {
        try {
            this.__proto__ = v20;
        } catch(e62) {
        }
    } else {
        try {
            const t56 = "n";
            t56[this] = 1906883424;
        } catch(e63) {
        }
    }
    Object.defineProperty(this, "a", { writable: true, enumerable: true, value: F60 });
    try {
        this.d = -4096;
    } catch(e65) {
    }
}
const v66 = new F60();
const v67 = new F60(v66, v66, v66);
const v68 = new F60();
const v69 = [v68,F60,v68,v68];
const v70 = [v67,F60,v69,F60,v66];
[v70,v70,v70];
class C72 extends F60 {
    static #o(a74, a75, a76, a77) {
        function f78(a79, a80) {
            function f82(a83) {
                try { a75["charCodeAt"](this, "charCodeAt", v68, v69); } catch (e) {}
                for (const v86 in this) {
                    try {
                        new Uint16Array(0);
                    } catch(e90) {
                    }
                    try {
                        new Int16Array(9);
                    } catch(e94) {
                    }
                    try {
                        new Uint16Array(129);
                    } catch(e98) {
                    }
                }
            }
            this.f = f82;
            try {
                this.valueOf = a80;
            } catch(e99) {
            }
        }
        const v102 = [v68,v68,a75,a74,this];
        const o103 = {
            "arguments": v102,
            "type": "function",
        };
        new SharedArrayBuffer(f78, o103);
        return this;
    }
}
new C72();
function f106(a107, a108, a109) {
    const o117 = {
        o(a111, a112, a113, a114) {
            class C116 extends v70.constructor {
            }
        },
    };
}
for (let i = 0; i < 10; i++) {
    function F118(a120, a121) {
        if (!new.target) { throw 'must be called with new'; }
        const v122 = this?.constructor;
        try { new v122(this, a121); } catch (e) {}
    }
    new F118();
}
function f125(a126, a127, a128) {
    a126.d = a126;
    a128[48] = a128;
    a128[0] = a128;
    try { a128.map(v55); } catch (e) {}
    a128.name = a128;
    const o136 = {
        ...v57,
        5: 5n,
        __proto__: v59,
        "g": 5n,
        toString(a131, a132, a133) {
            super.d;
            a127 & a126;
        },
    };
    const v137 = o136[5];
    v137 | v137;
    o136[5] = o136;
    const o142 = {
        "execution": "p",
        "type": "major",
    };
    gc(o142);
    return o136;
}
try { f125.apply(BigUint64Array, 1000); } catch (e) {}
f125(f125, v54, v57);
const v146 = f125(5n, f125, Map);
%PrepareFunctionForOptimization(f125);
f125(f125, v57, v146);
%OptimizeFunctionOnNextCall(f125);
class C149 extends v48.constructor {
}
if (v50) {
    ("di").length;
} else {
    const v151 = v0[10];
    const o152 = {
    };
    try {
        o152.a = v151;
    } catch(e153) {
    }
    try {
        const o154 = {
        };
        o154.a = v151;
        o154.f = v151;
    } catch(e155) {
    }
    try {
        const o156 = {
        };
        o156.a = v151;
        o156.f = v151;
        o156.c = v151;
    } catch(e157) {
    }
    try {
        const o158 = {
        };
        o158.a = v151;
        o158.f = v151;
        o158.b = v151;
    } catch(e159) {
    }
}
