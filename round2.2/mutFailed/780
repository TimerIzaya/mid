function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -10;
    } catch(e3) {
    }
    try {
        this.f = -10;
    } catch(e4) {
    }
}
new F0();
new F0();
const v7 = new F0();
new WeakSet();
const v10 = [63467,14443,-43322490,268435441];
const v11 = [-24842,-15,4,-14];
const v12 = [7,53163,257,4,4096,-9007199254740992,1073741824,2121037398,127,536870888];
class C13 extends WeakSet {
    static #d = v10;
    constructor(a15, a16) {
        super(v7);
        try { a15.toReversed(); } catch (e) {}
        this.e /= a16;
        delete v10?.length;
        Math.atanh(-7);
        (-7) ** -7;
        (-7 << 2147483648) & 2147483648;
    }
}
new C13(v10, v12);
new C13(v12, F0);
new C13(v11, v11);
-451330.8617065976 * 20.900827738993712;
Math.pow(!-451330.8617065976, 20.900827738993712);
