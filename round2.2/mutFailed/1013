try {
    new Uint32Array(629);
} catch(e3) {
}
let v4 = 244;
try {
    new Uint8Array(v4);
} catch(e7) {
}
try {
    const v10 = new BigInt64Array(6);
    let v11;
    try {
    const t0 = 6;
    v11 = t0(v4, Uint32Array, 629, v10, 6);
    } catch (e) {}
    Math.log(63644);
    Math.log10(63644);
    63644 ** 63644;
    63644 + v11;
} catch(e19) {
}
class C23 extends Uint8Array {
    [6];
    constructor(a25, a26, a27, a28) {
        super(a27, a25, a27);
        try { a28.toString(); } catch (e) {}
        try {
            super[v4] = 1073741824;
        } catch(e30) {
        }
        +-2;
        Math.asin(-2);
        +this;
        -this;
        super.with(1073741824, a26);
    }
    static d;
    static 4294967296;
    #b;
}
const v39 = new C23(6, 6, -1, -1);
%VerifyType(C23);
[1073741824,-1,v39,629,C23];
[Uint8Array];
[Uint8Array];
try {
    v4 = 257;
} catch(e43) {
}
const v44 = new C23(Uint8Array, 1073741824, v4, v39);
new C23(Uint32Array, 1073741824, -1, v44);
([NaN,1000.0,2.2250738585072014e-308,4.563977870137233,1000.0,1000000000000.0,0.439572514002633])["sort"](Array);
