let v0 = "h";
const v3 = [1000000000.0];
const v4 = [-9.626221095771065e+307,1000000000.0,-935.4757279638726,1.5382159900984384e+308,8.820471053326823];
const v5 = [-2.220446049250313e-16,994640.1907029992,-585849.9097362079,2.0,-2.2250738585072014e-308];
const v6 = /abc+/gdu;
const v7 = /Ofoo(?=bar)baz((((.).).).)/guy;
const v8 = /zea{1,2}?6q^xyz{1,}?/mgdyi;
class C9 {
    [v7];
    static valueOf(a11, a12, a13, a14) {
        const v15 = v3;
        const v17 = [[v15,v8,this],v6,a12,v8,v5];
        [v3,v17,a11,v17];
        return a13;
    }
    static 2 = v4;
    constructor(a20, a21, a22, a23) {
        let v24;
        try { v24 = new C9(this, this, ...a22, ...a22, this, ...a20); } catch (e) {}
        try {
            v24.__proto__ = a21;
        } catch(e25) {
        }
    }
    static [v7] = v6;
    set h(a27) {
    }
    b;
    static #e = v6;
    e = C9;
    #f = v6;
    static h;
    static [-1];
}
new C9();
const v32 = [-382552.0856578939,-1.0,0.1760122731667172];
class C33 {
    constructor(a35, a36) {
        try { new a35(this, a36, a36, this, ...a36, a36); } catch (e) {}
    }
}
const v41 = new WeakMap();
const v42 = [26469,2039392990,8,-8716];
function f43(a44, a45) {
    return v42;
}
const v46 = f43(f43, v42);
for (let v48 = 0; v48 < 10; v48++) {
    class C49 {
        constructor(a51) {
            try { this.propertyIsEnumerable(C49); } catch (e) {}
        }
        static 6;
        #g;
    }
}
const v53 = !129;
const v55 = "unscopables" & (129 << v53);
const v56 = [4.393551214980064,-4.0,-1.0,222973.0536805673,3.5076507802002013,5.8109532407374775];
const o59 = {
    "execution": "async",
    "type": "minor",
};
const v60 = [-1000000000.0,0.0,0.5517300003275041,849703.1746318885,-0.0,-1000000000000.0,156.50910068642952,158033.4749639267,1000000.0];
function f61(a62, a63) {
    v60 & C9;
    return a62;
}
f61(v56, v41);
try {
    ("trimRight").trimRight();
} catch(e67) {
    ("1054907282").localeCompare("c");
    function f71() {
    }
}
try {
    class C73 extends Uint32Array {
    }
    const v74 = [];
    const v76 = v74 < -44921;
    for (let v77 = 0; v77 < 68; v77++) {
        try { C73.p(v74, Uint32Array, v76); } catch (e) {}
        v74[4];
    }
    -65537 - v53;
    Math.round(-65537);
    +Uint32Array;
    v0 *= "unscopables";
} catch(e86) {
}
with (v32) {
    length = C9;
    ("trimRight")["toLowerCase"](-5n, v53, ...v32, v46, ..."toLowerCase");
    v46["unscopables"] **= v55;
}
([[-5n,-5n,-5n,-5n],-5n,1485003564n])["toLocaleString"]();
