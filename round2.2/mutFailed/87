[0.18182424034284117,0.4065558619952029,-1.7185122859874448e+308,4.0,1.4159134654405498e+308,-380.20232644137945,-1.7976931348623157e+308,0.20401775688920254,-138.8934696909754];
[849497.0022552002,459751.5172970607,4.320459614326046e+307,-1000000.0];
const v2 = [-1e-15,2.2230649648652605,-237713.18667819456];
[-8.379664420649869];
const v4 = [-2.2250738585072014e-308,-2.220446049250313e-16,311775.86660730187,90320.51739436504,1.7976931348623157e+308,1.7976931348623157e+308,-2.220446049250313e-16,-641384.880555501,-1000000000.0];
[NaN,0.7733851907788947,0.19975519471723358,1.0,37400.357011746266,-1.7976931348623157e+308,2.2250738585072014e-308,-1000000000.0];
let v9;
try { v9 = ("p").replaceAll("p", v2); } catch (e) {}
-32180 / -32180;
-(-6);
class C15 {
}
try { C15.call(-32180); } catch (e) {}
class C17 extends C15 {
    constructor(a19, a20, a21) {
        super();
        class C24 {
            static valueOf(a26) {
                function F27(a29) {
                    if (!new.target) { throw 'must be called with new'; }
                    const v30 = this?.constructor;
                    try { new v30(-1.0); } catch (e) {}
                    this.e = a29;
                    this.h = a21;
                }
                new F27(a26);
                const v33 = new F27(NaN);
                v33.b = v33;
            }
        }
        try { new v9(); } catch (e) {}
        function F35(a37, a38, a39, a40) {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v41 = new C17();
        const v42 = v41?.constructor;
        try { new v42(-1.0, NaN, v4, v41); } catch (e) {}
        for (let i = 0; i < 5; i++) {
            C24 % v41;
        }
    }
}
C17.name;
const v46 = new C17();
v46.length;
