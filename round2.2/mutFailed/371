("number")[-1];
Math.log10(-65535);
function F11(a13, a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = this;
    const v16 = this?.constructor;
    try { new v16(F11, a13, this); } catch (e) {}
    a13 >>> a13;
    try {
        this.d = a13;
    } catch(e19) {
    }
    try {
        this.b = 1073741824;
    } catch(e20) {
    }
}
new F11(1073741824, 64, 3);
new F11(3, 64, -9007199254740991);
new F11(-2, -9007199254740991, 1073741824);
let v24 = 268435456;
function f26() {
    return "boolean";
}
([1734019710,-Infinity,Map,Map]).length;
v24--;
class C36 extends BigInt64Array {
}
const v37 = new C36();
v37["lastIndexOf"]();
1.7976931348623157e+308 - 3;
[705051605,2,9007199254740992,10801,2147483648,29518,4096];
const t29 = -9007199254740991;
delete t29[5];
const v51 = [-2091751,-1073741824];
let v52 = [-12,78903253,4294967296,36050,4,5,-1486474753,-268435456,-8,65537];
[-1532550922,8,-12,-10,16,2147483649,1073741824,23312,26461,-4294967297];
function f54() {
    return v51;
}
function f55() {
    return f54;
}
function f56(a57, a58, a59, a60) {
    a60[9];
    const o66 = {
        __proto__: "number",
        ["setMilliseconds"](a63, a64) {
            try {
                const t49 = "o";
                t49.toString = f55;
            } catch(e65) {
            }
            return a59;
        },
        8: v52,
        256: f54,
        "g": a57,
        ...a57,
    };
    return o66;
}
f55();
const t62 = 64;
const v72 = new t62();
try { v72.reduce(v72); } catch (e) {}
let v74 = [Infinity];
++v74;
v52--;
try { new Uint8Array("jPw", "jPw", Uint32Array); } catch (e) {}
let v81 = 268435440;
v81++;
1n | 1n;
1.7976931348623157e+308 || (1.7976931348623157e+308 & -268435456);
const v88 = -268435456 & 1.7976931348623157e+308;
v88 / v88;
