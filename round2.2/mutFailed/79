const v0 = [];
const v5 = new Set();
class C6 {
    constructor(a8, a9) {
        new Set();
    }
    static #d = -9007199254740992;
    b;
    static [23337];
    [v5];
    static 4 = -9007199254740992;
    static #toString(a16, a17) {
        new Set(v0);
        v5[9] &= a16;
        return this;
    }
}
new C6(-860918484, 23337);
new C6(23337, 23337);
let v24 = new C6(-860918484, -9007199254740992);
class C25 extends C6 {
    constructor(a27, a28) {
        super(-860918484, a27);
        try {
            v24 &= v24;
        } catch(e29) {
        }
    }
    get c() {
        ~this;
        try {
            new Int16Array(129);
        } catch(e35) {
        }
        try {
            new Int32Array(3);
        } catch(e39) {
        }
        try {
            new Int16Array(135);
        } catch(e43) {
        }
        return 135;
    }
}
const v44 = new C25(23337, -9007199254740992);
new C25(-9007199254740992, -860918484);
new C25(-9007199254740992, v24);
[257];
[5,59910,-4294967297,-11];
const v49 = [-415977838,268435440];
const v50 = [-9223372036854775808,-1787892749,-2147483647,536870888,-65536,268435441,12];
const v51 = [35938,-15,61914,-444704995,512,1,-10,-2];
class C52 {
    #f;
    1;
    #e;
    toString(a54) {
        a54();
    }
    o(a57, a58) {
        try {
            C25.fuck(undefined, a57, Set);
        } catch(e61) {
        }
        return C52;
    }
    f = v50;
    [v51] = v50;
}
C25[6] *= C25.b;
Object.defineProperty(v49, 1073741823, { configurable: true, enumerable: true, value: v44 });
try {
    v24 /= C6;
} catch(e63) {
}
const v64 = new C52();
try {
const t0 = 2147483649n;
t0();
} catch (e) {}
const v67 = v64.constructor;
class C68 extends v67 {
    h;
    static b = -860918484;
    constructor(a70) {
        a70?.[3098603236];
    }
    [v67];
}
const v72 = new C68();
v72[2147483649n];
