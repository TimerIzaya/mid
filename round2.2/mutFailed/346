const v0 = /7a??/mgdu;
const v1 = /[(?:ab)+g(?:a?)?]/mgsduy;
const v2 = /[a(?!bbb|bb)c]/msvy;
const v3 = [10,1951501210,-1416393673,-2,-13,-16,9007199254740992,2147483647];
const v4 = v2[3600];
const v5 = v3 ** v4;
try {
    v3[v4] = v2;
} catch(e6) {
}
const v7 = [124350457,10,16,-1046838627,-10,10,-9,-1421,25359,10000];
const v8 = [-13,-2147483648,536870912,-5210,4294967297,-1,512,-15,-6];
const v9 = [0.5939691576530376,1.7976931348623157e+308,-5.173978860537851,0.00468259021869788,805.9201582501851,0.0,451.78203149516753,4.0,0.924486364918454];
const v10 = [Infinity,49458.08137057442,-1.7976931348623157e+308,0.3224258030883168,0.2842986777696094,-1000000000000.0];
const v11 = [-7.8355958225404265];
function F12(a14, a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = v0;
    } catch(e18) {
    }
    try {
        this.d = a15;
    } catch(e19) {
    }
}
new F12(v0, v11, v2, v3);
new F12(v0, v8, v1, v10);
new F12(v2, v9, v0, v7);
function F23() {
    if (!new.target) { throw 'must be called with new'; }
}
const v25 = new F23();
const v26 = new F23();
function f27(a28) {
    const o31 = {
        "h": v26,
        2: a28,
        268435440: a28,
        "e": a28,
        ...v25,
        [F23]: v26,
        [v25]: v25,
        "c": v5,
        "f": v5,
        "a": v26,
        1482032005: a28,
        "d": a28,
        [a28](a30) {
        },
    };
    return o31;
}
%PrepareFunctionForOptimization(f27);
f27(v25);
f27(v25);
%OptimizeFunctionOnNextCall(f27);
f27();
