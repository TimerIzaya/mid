const v0 = [3,-1833536868,15057];
const v1 = [129,-9007199254740990];
const v2 = [0,4096,-1242978900,16,6,10,4294967296];
const v3 = [v0];
([329733224,-494174817,-1,1091125639,-1,1165229256]).sort();
const v7 = new Map();
[v7,v7,v7];
const v9 = [v1,v1,v2];
const v10 = [v2,v9,v0,v9,v1];
function F11(a13, a14, a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a13;
    } catch(e17) {
    }
}
new F11(v2, v10, v0, v9);
new F11(v10, v10, v1, v3);
new F11(v10, v0, v10, v0);
1.7976931348623157e+308 & 512;
new v9();
const o34 = {
    "d": -55078,
    __proto__: null,
};
eval("");
class C36 {
}
C36 < -11n;
class C41 {
    valueOf(a43, a44) {
        "h" || -721249606;
    }
}
function f49() {
}
f49();
const v51 = f49();
function F53(a55, a56, a57) {
    if (!new.target) { throw 'must be called with new'; }
    const v58 = this.constructor;
    try { new v58(); } catch (e) {}
    new Int16Array(4096);
    new Uint16Array();
    new Uint32Array();
}
new F53(v51, -4096);
([-2.5498032935394535e+307]).toLocaleString("").matchAll(/(?:a+)+/gsdui);
function f72() {
}
const v75 = new Int32Array(3);
v75[1] = v75;
