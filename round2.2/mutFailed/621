class C3 {
    static #m(a5) {
        let v4 = this;
        try {
            try {
                new BigUint64Array(15);
            } catch(e9) {
            }
            try {
                new Uint8ClampedArray(3);
            } catch(e13) {
            }
            v4[Symbol.matchAll];
            super[v4];
            try {
                v4 ^= v4;
            } catch(e19) {
            }
            try {
                new C3(64);
            } catch(e22) {
            }
        } catch(e23) {
            super[e23];
        } finally {
            function F25(a27) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.h = -2147483647;
                } catch(e28) {
                }
                try {
                    this.d = F25;
                } catch(e29) {
                }
                const v30 = -2147483647;
                try {
                    this[a27] = v30;
                } catch(e31) {
                }
            }
            const v32 = new F25(F25);
            new F25(v32);
            new F25(8);
        }
        return -2147483647;
    }
}
const v35 = new C3();
const v36 = new C3();
const v37 = new C3();
function f38(a39, a40, a41) {
    a41.toString = f38;
    const o46 = {
        "a": -9223372036854775807,
        [v35](a43, a44) {
            try {
                super.f = this;
            } catch(e45) {
            }
            return a40;
        },
        __proto__: C3,
        "b": -2147483647,
        "h": a41,
        "c": C3,
    };
    return o46;
}
const v47 = f38(-2147483647, v37, v35);
const v48 = f38(-9223372036854775807, -9223372036854775807, C3);
const v49 = f38(8, v48, v35);
function f50(a51, a52, a53) {
    const o62 = {
        __proto__: v47,
        [v36]: a53,
        "h": v49,
        43: -2147483647,
        set g(a55) {
            const v56 = this <= a55;
            function f57() {
                return v56;
            }
            this ^ v49;
            Reflect.construct(a55, [this], a55);
        },
    };
    return v36;
}
f38(v49, -2147483647, v37);
f50(v48, -2147483647, 8);
f50(v48, -2147483647, -2147483647);
class C68 {
    static #toString(a70, a71) {
        for (let i74 = 0, i75 = 10; i74 < i75, a70; i74++, i75--) {
        }
    }
}
const v83 = new C68();
const v84 = new C68();
const v85 = new C68();
function F86(a88, a89, a90, a91) {
    if (!new.target) { throw 'must be called with new'; }
}
function f92() {
    return v85;
}
new C68();
Object.defineProperty(v49, 7, { enumerable: true, get: f50, set: f50 });
const v94 = new F86(v83, "-52997", v85, C68);
const v95 = new F86(v83, v94, v83, v83);
new F86(v95, v85, v84, v83);
try { ("-52997").substring(40230, 40230); } catch (e) {}
try {
    v83.fuck("x", C68, /H()[-123]*/mgi);
} catch(e101) {
}
