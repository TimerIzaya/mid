class C3 {
    static set g(a5) {
        typeof this;
        "symbol" === "symbol";
    }
    static o(a10, a11) {
        try {
            super[7.5963838984453105] = a11;
        } catch(e12) {
        }
        try {
            this[255] = a10;
        } catch(e13) {
        }
        return 7.5963838984453105;
    }
    h = -22641;
    static #b;
}
const v14 = new C3();
const v15 = new v14();
const v16 = new C3();
const v19 = new Array(2);
class C20 {
    78;
    7 = C3;
    static #h = v19;
    static [C3];
    o(a22, a23, a24) {
        function F25(a27, a28) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.f = a23;
            } catch(e29) {
            }
            try {
                this.a = v16;
            } catch(e30) {
            }
        }
        new F25(v14, a23);
        new F25(C3, a23);
        new F25(7.5963838984453105, v15);
        return 63273;
    }
}
const t46 = 7.5963838984453105;
new t46();
new C20();
new C20();
function f37() {
    try {
        const v38 = /c(a\1)nxyz{1,32}?/gsdu;
        const o40 = {
        };
        C3.o(f37, v38, 13017n, o40);
    } catch(e42) {
    }
}
%OptimizeFunctionOnNextCall(f37);
C20.b;
let [,v44] = v19;
try {
    v44 = 2;
} catch(e45) {
}
f37();
