const v3 = [-9.328407244034855,0.7875911846558997,-5.999254908905738e+307,4.0,-2.220446049250313e-16,-Infinity,-616139.5569304706,-1.3774621326697637e+308,0.00482737104877673];
[-2.2250738585072014e-308,0.3499630826431579,-1.0,-143.32008308191143];
[8.060989972972365e+307];
-325634631 - -325634631;
let v8 = 536870887;
v8 >>> v8;
try {
    new Uint8Array(849);
} catch(e14) {
}
try {
    new Uint8ClampedArray(164);
} catch(e18) {
}
try {
    new Int8Array(2);
} catch(e22) {
}
const v25 = [-1000000.0,NaN,-Infinity,1000000000.0,4.0,0.6454623723660227,-639484.2592792367,-1.222260547575251e+307];
let v26;
try { v26 = v25.groupToMap(9); } catch (e) {}
try {
    v26.a = 9;
} catch(e27) {
}
try {
    v3[v3] = -325634631;
} catch(e28) {
}
const v29 = [-1000000000.0,1.7976931348623157e+308,Infinity,-1.0,0.731215938127622];
[134175.34184512775,797101.1063738954,1e-15,-36547.02102571307,0.09546846980151191,0.0010333928718895269,-1.1649895587045265,0.6313593618320364];
const t30 = [128,v29];
t30[Symbol.asyncIterator] = 128;
v29[2] = "toPrimitive";
class C38 extends v26 {
}
try { new C38(); } catch (e) {}
const v40 = new C38();
v40.e = v40;
const v41 = new C38();
const v42 = v41?.constructor;
try { new v42(); } catch (e) {}
v41.e = v41;
class C44 {
}
try { C44(); } catch (e) {}
const v46 = new C44();
const t47 = v46.constructor;
const v48 = new t47();
const v49 = v48?.constructor;
try { new v49(); } catch (e) {}
const o52 = {
};
o52.c = o52;
const v53 = undefined?.constructor;
let v54;
try { v54 = v3(); } catch (e) {}
("object")[2];
const v57 = [3];
const t59 = [-16,4294967297,-1728414155,-65536,16,-49207,536870889];
t59.length = v57;
const v59 = [v25,v25,v25];
try { v59.toLocaleString(); } catch (e) {}
let v61;
try { v61 = v59.with(v53, v25); } catch (e) {}
const o62 = {
};
o62.h = o62;
const v63 = [4,-456675475,-4];
let v64;
try { v64 = v63.findLastIndex(v61, v57); } catch (e) {}
function f65() {
    function f67(a68) {
        try {
            v8 = 2;
        } catch(e69) {
        }
    }
    this.onmessage = f67;
    try {
        v48[10] = v59;
    } catch(e70) {
    }
}
const v73 = [];
const o74 = {
    "arguments": v73,
    "type": "object",
};
new Worker(f65, o74);
const o76 = {
};
const v77 = [-1.3932181377177156e+308,3.0,-1000000000.0,-732.7359410626135,-1000000000.0,-Infinity,-1000000000000.0];
const v78 = [-1.9343106152701246,2.220446049250313e-16,0.9943572918947954];
try { v78.valueOf(); } catch (e) {}
let v80;
try { v80 = v78.group(WeakMap); } catch (e) {}
const v81 = v63.toLocaleString();
const o84 = {
    "maxByteLength": v54,
};
new SharedArrayBuffer(3343, o84);
try {
    new Int8Array(o76);
} catch(e89) {
}
v81.replace(v77, v81);
class C91 {
}
const v92 = [4.0,-951657.9961229328,-1.0,0.7190859574110413,746.0181860749346,-Infinity,0.6013729385265305,1000000000000.0,-718.3044757817424,-892213.8343004808];
try { v92.push("toPrimitive"); } catch (e) {}
v92[6] = v92;
const v94 = v92.__lookupGetter__;
const v95 = v94.toString;
try { v95(v80, C38, C91, v64, v26); } catch (e) {}
try { v94(v94, "object", v94, v94, v54); } catch (e) {}
let v98 = 2147483647n;
v98 % v98;
const v100 = v98++;
v100 <= v100;
const v102 = [4.641649318850067,0.37400148924652876,-816545.7805143001,-3.0,NaN,-1.0,1000000000.0,0.35126267915247544,Infinity,-Infinity];
class C103 {
    static #d = v102;
}
C103.e = C103;
const v105 = [1000000000000.0,0.870824343130118,3.0,-753.6917130924656,-5.0,-4.79204912516727e+307,1000000.0];
const v107 = ([-222.92643044002784,Infinity,-1000000000000.0,-840.9159553999352,-6.6051039197093475,1.0,-3.848917906236722e+307,1000.0,-2.220446049250313e-16,2.0])[4];
v107 / v107;
const v109 = [v105,"64",v25];
try { v109.copyWithin(v80, v3); } catch (e) {}
class C111 {
}
const o112 = {
};
o112.g = o112;
