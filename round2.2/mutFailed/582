const v0 = [-1000.0,-2.6950415627203385e+307,793243.922656117,2.220446049250313e-16,-2.220446049250313e-16];
const v1 = [34.83558981827446,-1000000000.0,5.0,-816.1111774452584,823.4470435171686,-1.334117836725514e+307,1e-15,720070.575491145];
const v2 = [-3.0];
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v1;
    } catch(e7) {
    }
    try {
        this.d = v1;
    } catch(e8) {
    }
}
const v9 = new F3(v2, v2);
const v10 = new F3(v9, v0);
new F3(v2, v1);
v1 ** v10;
const v13 = v9.__proto__;
const v14 = v9[2];
Reflect.construct(v14, [v14,v2,v13], v14);
class C25 {
    g;
    1 = 1000000000000.0;
    static {
        -1.7976931348623157e+308 !== this;
        try {
            this.e = this;
        } catch(e29) {
        }
    }
}
const v30 = new C25();
const v31 = new C25();
class C33 {
    static {
        class C35 extends C25 {
            [v31] = "e";
        }
    }
}
try {
    v30.fuck();
} catch(e37) {
}
