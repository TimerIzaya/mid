class C3 {
    static ["boolean"];
    set h(a5) {
        try {
            new BigUint64Array(1725);
        } catch(e9) {
        }
        try {
            new Float64Array(391);
        } catch(e13) {
        }
        try {
            new Uint8ClampedArray(450);
        } catch(e17) {
        }
    }
}
new C3();
new C3();
const v20 = new C3();
[-1371429789,39362,32571];
[-1024,9,-61259,9835,13,-2147483647];
[3];
const v30 = [];
class C31 {
    valueOf() {
        function f33() {
            const o36 = {
                "execution": "async",
                "type": "minor",
            };
            return "async";
        }
        this.valueOf = f33;
        %VerifyType(this);
        try {
            Int32Array(887);
        } catch(e40) {
        }
        let v41 = 2;
        v41--;
        new Int32Array(221);
        return 887;
    }
}
function f47(a48, a49) {
    class C51 extends Uint8ClampedArray {
    }
    return v20;
}
C31.toString = f47;
new C31();
const v53 = new C31();
const v55 = Symbol.toPrimitive;
v53[v55] = f47;
function f56() {
    function f57(a58) {
        const v59 = /NN/mgsui;
        v59.c = v59;
        const v60 = /rMP+/gsdv;
        try { v60.test(v59); } catch (e) {}
        return v30;
    }
    return f57;
}
function f62(a63) {
    class C65 extends f56 {
        static f = v53;
    }
    new C65();
    new C65();
    C65();
    -65535 | -1.5876749514476599e+308;
}
Object.defineProperty(v53, "toString", { get: f56, set: f62 });
class C73 {
    #f = 481.18917876604246;
    constructor(a75, a76) {
        function f77() {
            return f56;
        }
        function f78(a79) {
            try { a79.isFrozen(C3, C73); } catch (e) {}
        }
        Object.defineProperty(this, "constructor", { enumerable: true, get: f77, set: f78 });
        const v81 = this?.constructor;
        function f82(a83) {
            try {
                const t88 = "boolean";
                t88[Symbol] = a83;
            } catch(e84) {
            }
        }
        Object.defineProperty(v81, 1000000000, { writable: true, configurable: true, enumerable: true, set: f82 });
        v81[1000000000] = v81;
        try { new v81(C73, a76); } catch (e) {}
        a76--;
    }
}
C73[1000000000] = v55;
new C73();
const v88 = new C31();
function f89(a90) {
    let [v91] = "boolean";
    Math.pow(-9223372036854775807, -1.0);
    return v20;
}
v88.valueOf = f89;
try { new Date(v53, f56, v88, v53, f56, C31, v53); } catch (e) {}
new Date();
class C99 {
    [v53] = Date;
    a;
    #f;
    e;
}
new C99();
new C99();
new C99();
let v103 = -1000.0;
v103--;
const v105 = [-1e-15,0.05394196410500551,1000.0,-5.0,585299.8328042016,Infinity];
const v106 = [2.2250738585072014e-308,0.12004125653619546,0.2632771561876589,143847.09445406147,0.3865903452538286,-1.7760864233222768e+308,-0.005230145368461336,-0.0,3.1016465509548414,-1.0061115275161033e+308];
const v107 = [5,15,-1,-14,1,-11,-128,-1308524206,3,1891930221];
v106[v105.toLocaleString()] = v107;
try { Reflect.isExtensible(v103); } catch (e) {}
Reflect.construct(Date, [v103], f62);
({"prototype":f56,} = Date);
const v115 = [-1000000000.0,-474543.5428367342,-2.0,-1.5059691624765054e+308,-508962.78678965976,757.7053565895317,0.0,790.2898938093756,2.2250738585072014e-308,-1.0945802631095708e+308];
const v116 = [3.396269082693733,0.0918823468018174];
v116[1];
function F118(a120, a121, a122, a123) {
    if (!new.target) { throw 'must be called with new'; }
    this.length = f89;
    const v124 = this?.constructor;
    try { new v124(this, Reflect, f56, this); } catch (e) {}
    let v127;
    try { v127 = a121.toLocaleString(); } catch (e) {}
    try { v127.toWellFormed(); } catch (e) {}
}
const v130 = new F118(v116, v115);
function f131() {
    return f47;
}
function f132(a133) {
    Math.asinh();
}
Object.defineProperty(v130, "length", { configurable: true, enumerable: true, get: f131, set: f132 });
v130.length;
new F118(v116, v103);
try { Float32Array(v130, f62, C31); } catch (e) {}
new Float32Array();
const v141 = [4294967295,12,-1073741824,-28740,65536,4096,-65536,-4294967297,10];
v141[Symbol.toPrimitive] = Date;
const v144 = [-268435456,52156,8,268435456];
v144.keys();
class C146 {
    constructor(a148) {
        this.b = this;
        const v149 = this?.constructor;
        try { new v149(); } catch (e) {}
    }
    f;
    [-2] = v144;
}
C146.prototype = C146;
const v151 = new C146();
new C146();
class C153 extends C146 {
    static #o(a155, a156, a157) {
        try {
            new WeakMap();
            a157 ^= a157;
            [12451,-4294967295,2];
            [9223372036854775807,21385,7,-630691097,3,4294967295,4096,-256];
        } catch(e163) {
        }
        return a155;
    }
    [v141] = v151;
}
try { C153(); } catch (e) {}
new C153();
for (let i = 0; i < 25; i++) {
    const v168 = 0 < 5;
    v168 || v168;
    new C146(v141);
    let [...v171] = v115;
    function f172(a173) {
        const v174 = [];
        return v174;
        return v174;
    }
    v171[Symbol.toPrimitive] = f172;
    Symbol(v171)[Symbol.split];
}
