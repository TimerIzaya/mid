class C3 {
    toString(a5) {
        const v6 = "toString" & a5;
        const v7 = v6 > v6;
        typeof -758370.4741002044;
        function F10(a12, a13) {
            if (!new.target) { throw 'must be called with new'; }
        }
        ("h")[/[x\dz]*/mgdvyi];
        v7 ? v6 : v6;
        try { a5(); } catch (e) {}
        const v19 = this.f;
        -1426935986 > v19 ? v19 : v19;
        return v19;
    }
    5;
    3;
    536870888;
    6 = "toString";
}
const v22 = new C3();
const v23 = [-5.0,-2.0,-1.0];
256 <= v23 ? 256 : v23;
class C27 {
}
new C27();
const v29 = new C3();
const v30 = new C3();
class C31 extends C3 {
    constructor(a33, a34, a35, a36) {
        super();
        try {
            this[a36] = this;
        } catch(e37) {
        }
        a35.b;
        new WeakMap();
    }
    static f;
    1073741824;
    2147483649;
    /*
    constructor(a42, a43, a44) {
        super();
        class C47 {
            static valueOf(a49) {
                function F50(a52) {
                    if (!new.target) { throw 'must be called with new'; }
                    this.e = a52;
                    this.h = -1.0;
                }
                new F50(-1.0);
                const t52 = 256;
                new t52(NaN);
            }
        }
        function F55(a57, a58, a59, a60) {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v61 = new F55();
        for (let i = 0; i < 5; i++) {
            C47 % v61;
        }
    }
    */
    [v22] = v22;
}
const v63 = new C31(v22, v30, v22, -1426935986);
const v64 = new C31(v29, v29, v30, v63);
new C31(C3, v64, C31, v63);
Symbol.species;
Math.pow(128, 128);
Symbol.atanh(128);
function f76(a77, a78, a79) {
    return a79;
}
class C81 extends WeakSet {
}
class C84 {
    valueOf(a86) {
        arguments[a86] = 655720442;
    }
}
