const v0 = [];
let v1 = 37061;
let v4 = Map;
new v4();
class C6 {
    a = v1;
    n(a8, a9, a10) {
        %VerifyType(Math);
        const o12 = {
        };
        try {
            o12.f = a9;
        } catch(e13) {
        }
        try {
            const o14 = {
            };
            o14.f = a9;
            o14.a = this;
        } catch(e15) {
        }
        try {
            const o16 = {
            };
            o16.f = a9;
            o16.a = this;
            o16.g = 268435441;
        } catch(e17) {
        }
        try {
            const o18 = {
            };
            o18.f = a9;
            o18.a = this;
            o18.g = a10;
        } catch(e19) {
        }
        const v22 = -1156599857 & -44133;
        Math.atan2(v1, -1156599857);
        Math.fround(-1156599857);
        --v1;
        Math.round(v1);
        v1 ^ ((-44133) ** v22);
        return v1;
    }
}
new C6();
const v30 = new C6();
const v31 = new C6();
class C32 extends v4 {
    constructor(a34, a35) {
        super(C6);
        const v37 = v0.findIndex(...v0, c, c, v1, v4, v30);
        let v39 = -4096;
        Math.cbrt(v39);
        const v42 = v39 || v39;
        Math.atanh(v37);
        Math.imul(v42, v42);
        [1950932105,-4294967297,2042978142,-626478600,4294967297];
        [65537,9007199254740991];
        [-65537,604900327,-10,-36263,7,-9007199254740992,15,20016,-1];
        v39 % 268435456;
        ++v39;
        v37 >>> this;
    }
}
new C32(v31, v1);
new C32(C6, v1);
new C32(v30, v4);
class C57 {
}
const v58 = new C57();
function f59() {
    return v58;
}
v4++;
new f59();
v58.hasOwnProperty(C57);
