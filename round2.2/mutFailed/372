const v3 = [2.945214150447919,1000000000000.0,-1000.0,4.0,-1e-15,-3.0,0.9421097406757916];
const v4 = [1.2628884290576554,-0.4585709225127932,5.0];
const v5 = [-7.793626082995357e+306,-1000000000.0,-1.0,-4.020366852164246,1.1139435684982857,0.059757566514858196];
class C9 {
    #e = v3;
    static [16] = 1073741824;
    static [v5];
    b = 1073741824;
    #c;
    static get e() {
        function* f11(a12) {
            return f11;
        }
    }
    static a = 1073741824;
    #b = v5;
    3;
    m(a14, a15, a16) {
    }
    constructor(a18, a19, a20) {
        super();
        try { this(); } catch (e) {}
    }
    static #n(a23, a24) {
        const v25 = this % 1073741824;
        ~a23;
        const v27 = v5[2];
        try { v27(0.6931507318462037, a23, 0.6931507318462037, 16, v25); } catch (e) {}
        return this;
    }
    [v4];
    [16];
    static #d;
    static #h;
    #g;
    6 = C9;
    403 = 1073741824;
    static 13 = 1073741824;
    static d;
}
new C9();
new C9();
new C9();
class C35 {
    p(a37) {
        let v36 = this;
        class C39 {
            h = 0.6880057527508144;
        }
        const v40 = new C39();
        const v41 = new C39();
        function f42(a43, a44, a45, a46) {
            const o48 = {
                get a() {
                },
                ...v41,
                "e": 0.6880057527508144,
                "h": a46,
                [v40]: a46,
                "c": C39,
                "a": 838.6523127984444,
            };
            return f42;
        }
        ++v36;
        class C52 {
            valueOf(a54, a55) {
                "h" || 83847411;
            }
        }
        const o60 = {
            "maxByteLength": 24,
        };
        const v62 = new SharedArrayBuffer(24, o60);
        try {
            class C64 {
                static get e() {
                }
            }
            new C64();
            new Float32Array(v62);
        } catch(e68) {
        }
        for (let i70 = 0;
            i70 < 0;
            (() => {
                function F74(a76) {
                    if (!new.target) { throw 'must be called with new'; }
                }
                class C77 extends F74 {
                }
                const v78 = new C77();
                for (let v79 = 0; v79 < 25; v79++) {
                    const v80 = v78.b;
                    try { v80["toString"](); } catch (e) {}
                }
            })()) {
            var f = a37;
        }
    }
}
function f90(a91, a92, a93) {
    'use strict';
    return Symbol;
}
