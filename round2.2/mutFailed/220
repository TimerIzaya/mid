let v2 = "bigint";
class C3 {
    static h;
    m(a5, a6) {
        return a6;
        const v7 = a6 & this;
        try {
            v2 = this;
        } catch(e8) {
        }
        return v7;
    }
    h = 5.97233380129458;
    [C3];
    c = "undefined";
}
new C3();
new C3();
new C3();
new Map();
new Array(16);
[1000000000.0,910007.0410135388,186549.7701476633,0.9729401674706774,456.343564504057,-5.965402839398157,348.52581428984513];
[0.44411536418095454,-7.944598685196036e+307,-2.220446049250313e-16,2.2250738585072014e-308,-648.542911719821,240665.43383913464,979.1027738019498];
[-346.8826951088413,2.0,3.821943895966655e+307,-5.0,-1000000000.0,9.778791642394062];
function f20() {
    const o28 = {
        __proto__: 1000,
        [-3](a25) {
            this.fuck(false);
        },
    };
    return -65537;
}
function F29(a31) {
    if (!new.target) { throw 'must be called with new'; }
}
const v32 = new F29(F29);
class C33 extends v32 {
    static get c() {
        f20();
    }
}
const v36 = new C33();
let v37;
try { v37 = v36.getUint8(); } catch (e) {}
const v38 = v32 === v37;
v32.a /= v38 ? v32 : v38;
