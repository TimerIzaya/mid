try {
    new Uint16Array(3);
} catch(e3) {
}
try {
    const t5 = 128;
    new t5(128);
} catch(e7) {
}
try {
    const v10 = new Uint32Array(129);
    v10[116];
} catch(e12) {
}
-2147483649;
class C17 extends BigUint64Array {
    #d = 47295;
    static {
        this.__proto__.name;
        for (let v21 = 0; v21 < 32; v21++) {
            "p" == "p";
            const v24 = "p" + v21;
            v24[1];
            this[v24] = v21;
        }
    }
    c;
}
const v26 = new C17();
const v27 = v26?.map;
try { new v27(47295); } catch (e) {}
new C17();
new C17();
341.2286837230158 - 341.2286837230158;
const v33 = [-4096,495677618,-9007199254740992,-8,-2147483648,-39708,60983];
class C34 {
    static set f(a36) {
        let v35 = this;
        super.h;
        v35 = a36;
    }
    g;
    static [341.2286837230158];
    static d;
    g;
    constructor(a39, a40) {
        341.2286837230158 in this;
    }
}
try { new C34(Uint16Array, C17); } catch (e) {}
const v43 = new C34();
v43.g;
const v45 = new C34();
try { BigInt64Array.from(129); } catch (e) {}
new BigInt64Array(95);
const v54 = new BigInt64Array(128);
try { v54.findLastIndex(v45); } catch (e) {}
class C59 extends 341.2286837230158 {
}
const v60 = new C59();
function f61(a62, a63) {
    try { new a62(55, a62, a62); } catch (e) {}
    return v33.apply();
}
f61(BigUint64Array, BigUint64Array);
class C68 extends f61 {
}
v60.subarray();
const o70 = {
    __proto__: C68,
};
o70.name;
try { o70.bind(); } catch (e) {}
