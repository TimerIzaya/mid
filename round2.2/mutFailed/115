try {
    new Int8Array(1);
} catch(e3) {
}
try {
    let v6 = 0;
    do {
        Uint8Array in v6;
        new Uint8Array(v6, 1, v6);
        v6++;
    } while (v6 < 3, 16)
    new Uint8Array(16);
} catch(e13) {
    e13.message;
}
const v16 = 3402 << 3402;
try {
    new Int32Array(3402);
} catch(e19) {
}
function f23() {
    return Int8Array;
}
const v24 = [1];
try { v24.flat(); } catch (e) {}
const v26 = [1];
const v27 = [1];
try { v27.toString(); } catch (e) {}
let v30 = 1000000000.0;
v30--;
class C33 {
    #f = 481.18917876604246;
    constructor(a35, a36) {
        const v37 = a35 >>> a35;
        const v39 = (v37 <= v37)?.constructor;
        v39[1000000000] = v39;
        try { new v39("-9223372036854775807", a36); } catch (e) {}
        a36--;
        try {
            a35[v30] = this;
        } catch(e42) {
        }
    }
}
const v43 = new C33();
const v44 = v43?.constructor;
try { new v44(v43, v26); } catch (e) {}
const v46 = new C33(C33, C33);
const v47 = new v16();
const v48 = v47?.constructor;
try { new v48(Int32Array, v46); } catch (e) {}
