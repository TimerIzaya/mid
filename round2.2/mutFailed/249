function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = -478330941;
    } catch(e3) {
    }
    try {
        this.f = -478330941;
    } catch(e4) {
    }
    try {
        this.e = -478330941;
    } catch(e5) {
    }
}
new F0();
const v7 = new F0();
const v8 = new F0();
try { v8.toString(); } catch (e) {}
[5.0,1.0,-4.0,-2.2250738585072014e-308,1000.0,-1000000.0];
[-935096.9955114725,2.2250738585072014e-308,687210.9992469796,-4.0];
[0.8480645112794915,0.9739794106435965,-1000000000000.0,Infinity,0.04562789500368469];
-4294967295n >> -4294967295n;
const v17 = -4294967295n | -4294967295n;
v17 / v17;
2831 >>> 2831;
2440 - 2440;
let v23 = -4294967295;
v23++;
const v26 = [2831,v7,2440,v23 >>> v23];
const v27 = [2831,2831,2831];
const t31 = 2831;
t31.h = v27;
let v28;
try { v28 = v23(); } catch (e) {}
const v30 = v26["splice"](v28, v23, 2440, "splice");
try { v30.findLast(v27); } catch (e) {}
const v32 = delete v27[v23];
v32 >> v32;
