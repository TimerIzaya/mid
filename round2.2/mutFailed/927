const v0 = /[n\u003z]/mgsdy;
const v1 = /^xyz{0,1}?/mgsuy;
const v2 = /5NX(?:a{5,1000000}){3,1000000}/gvy;
const v3 = [-465839.36844238255,-2.220446049250313e-16,-1.3844193608244538e+308,-2.2250738585072014e-308,-791.6736446940016,0.3382667370873177,-4.0,1000000000.0,-0.0,1000000000.0];
[0.0,6.691192429672064,1e-15];
const v7 = new Float32Array(1790);
function f8(a9, a10) {
    let v11;
    try { v11 = a9(); } catch (e) {}
    const o12 = {
    };
    try {
        o12.c = a10;
    } catch(e13) {
    }
    try {
        const o14 = {
        };
        o14.c = a10;
        o14.a = v11;
    } catch(e15) {
    }
    try {
        const o16 = {
        };
        o16.c = a10;
        o16.a = v11;
        o16.h = a10;
    } catch(e17) {
    }
    try {
        const o18 = {
        };
        o18.c = a10;
        o18.a = v11;
        o18.h = a10;
    } catch(e19) {
    }
    return v0;
}
v7[Symbol.toPrimitive] = f8;
v7[1750] = v7;
const v22 = [1000.0,751.067745408965,-2.9737434327290055e+307,0.9973384899821353,-1.0,-1.7976931348623157e+308,-568.8653861615824,-4.0,-4.06878678695509e+306,0.0];
function f23() {
    return v22;
}
new WeakMap();
class C29 {
    static {
        Object.defineProperty(v2, "d", { get: f23, set: f23 });
        async function* f31(a32, a33, a34) {
            Object.defineProperty(f23(), v3, { configurable: true, get: f23 });
            await this;
            try {
                yield 1073741824;
            } catch(e38) {
            }
            return v1;
        }
        f31(9, v2, 1073741824);
    }
}
new C29();
new C29();
new C29();
Int32Array.d = Int32Array;
function F49(a51, a52, a53) {
    if (!new.target) { throw 'must be called with new'; }
    a53.d = a52;
    this.d = "function";
    const v54 = this.constructor;
    try { new v54(a52, 4096); } catch (e) {}
    a53.d = a53;
}
const v56 = new F49("p", "b", Int32Array);
new F49("g", "function", v56);
