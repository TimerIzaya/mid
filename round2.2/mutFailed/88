[0.18182424034284117,0.4065558619952029,-1.7185122859874448e+308,4.0,1.4159134654405498e+308,-380.20232644137945,-1.7976931348623157e+308,0.20401775688920254,-138.8934696909754];
[849497.0022552002,459751.5172970607,4.320459614326046e+307,-1000000.0];
const v2 = [-1e-15,2.2230649648652605,-237713.18667819456];
[-8.379664420649869];
const v4 = [-2.2250738585072014e-308,-2.220446049250313e-16,311775.86660730187,90320.51739436504,1.7976931348623157e+308,1.7976931348623157e+308,-2.220446049250313e-16,-641384.880555501,-1000000000.0];
const v5 = [NaN,0.7733851907788947,0.19975519471723358,1.0,37400.357011746266,-1.7976931348623157e+308,2.2250738585072014e-308,-1000000000.0];
let v9;
try { v9 = ("p").replaceAll("p", v2); } catch (e) {}
const v11 = -32180 / -32180;
-(-6);
class C15 {
}
let v16;
try { v16 = C15.call(-6); } catch (e) {}
class C17 extends C15 {
    constructor(a19, a20, a21) {
        super();
        class C24 {
            static valueOf(a26) {
                const v31 = Symbol.iterator;
                const o40 = {
                    [v31]() {
                        let v33 = 10;
                        const o39 = {
                            next() {
                                v33--;
                                const v37 = v33 == 0;
                                const o38 = {
                                    "done": v37,
                                    "value": v33,
                                };
                                return o38;
                            },
                        };
                        return o39;
                    },
                };
                function F41(a43) {
                    if (!new.target) { throw 'must be called with new'; }
                    const v44 = this?.constructor;
                    try { new v44(-1.0); } catch (e) {}
                    this.e = a43;
                    this.h = -1.0;
                }
                new F41(-1.0);
                const v47 = new F41(NaN);
                v47.b = v47;
            }
        }
        try { new C24(); } catch (e) {}
        function F49(a51, a52, a53, a54) {
            if (!new.target) { throw 'must be called with new'; }
            new F49(a52, F49, this, a20);
            function f56() {
                return C17;
            }
            this[202275328];
        }
        const v58 = new F49();
        class C59 {
            #b = this;
        }
        new C59();
        new C59();
        new C59();
        const v63 = v58?.constructor;
        try { new v63(-1.0, NaN, v4, v58); } catch (e) {}
        for (let i = 0; i < 5; i++) {
            C24 % v58;
        }
    }
}
const v66 = C17.name;
const v67 = new C17();
const v69 = v5["shift"]();
let v70;
try { v70 = v69(C15, "p", v66); } catch (e) {}
v5[848] |= v11;
try {
    C17[88] = v9;
} catch(e71) {
}
v67.length;
try { ("number").trimStart(); } catch (e) {}
/ja\s/uy;
/a[^a]/mgy;
/JbUOLug+/mgsv;
v70[4] = v16;
