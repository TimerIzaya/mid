function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -10;
    } catch(e3) {
    }
    const o6 = {
        "execution": "async",
        "type": "minor",
    };
    try {
        this.f = -10;
    } catch(e7) {
    }
}
!true;
const o11 = {
};
gc(o11);
new F0();
new F0();
const v15 = new F0();
new WeakSet();
268435440 || 268435440;
9007199254740991 ^ 9007199254740991;
function f22() {
    const o26 = {
        "h": 10,
        [10]: 10,
        2: 10,
        1601746401: 10,
        set a(a25) {
        },
        "g": 10,
    };
    return o26;
}
const v27 = [63467,14443,-43322490,268435441];
const v28 = [-24842,-15,4,-14];
const v29 = [7,53163,257,4,4096,-9007199254740992,1073741824,2121037398,127,536870888];
class C30 extends WeakSet {
    static #d = v27;
    constructor(a32, a33) {
        super(v15);
        try { a32.toReversed(); } catch (e) {}
        this.e /= a33;
        delete v27?.length;
        class C38 extends Int8Array {
        }
        ~128n;
        const v42 = [36.672551722454045,-2.220446049250313e-16,-2.0,2.0,265.7401490824768,0.8681647091345572,396.04974613216586];
        async function f43(a44, a45) {
            await v42;
            return v42;
        }
        f43();
        Math.atanh(-7);
        (-7) ** -7;
        (-7 << 2147483648) & 2147483648;
    }
}
new C30(v27, v29);
new C30(v29, F0);
new C30(v28, v28);
Math.pow(!(-451330.8617065976 * 20.900827738993712), 20.900827738993712);
