this[1530] = 16;
const t1 = [-32299,5];
t1.__proto__ = [-12];
try {
    new Float64Array(0);
} catch(e7) {
}
const t7 = 16;
new t7();
const o16 = {
    ..."function",
    ..."resizable",
    get c() {
        return this;
    },
    set c(a15) {
    },
};
try {
    new Int32Array(512);
} catch(e18) {
}
Uint8ClampedArray.prototype = Uint8ClampedArray;
try {
    const v21 = new Uint8ClampedArray(118);
    v21[19] = v21;
    function f23() {
        return Uint8ClampedArray;
    }
    %PrepareFunctionForOptimization(f23);
    f23();
    %OptimizeFunctionOnNextCall(f23);
    f23();
} catch(e26) {
}
function f28() {
    return f28;
}
class C29 {
    7 = f28;
    [f28];
    constructor() {
        for (const v31 in this) {
        }
    }
}
let v32 = 710170.1035642787;
let v35 = 863367991;
v35--;
-(-14879);
118 ** v32;
-268435456 >>> -268435456;
const v44 = -14879 * 0;
v44 << v44;
class C49 {
}
try {
    v32 = 2.0;
} catch(e50) {
}
C49[Int32Array] -= 6;
const v51 = new Float64Array();
v51.byteLength;
"-2" >> v51;
