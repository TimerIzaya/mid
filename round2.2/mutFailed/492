function f3() {
    return 1449569530;
}
class C4 extends f3 {
    o(a6, a7) {
        const v8 = this[this];
        function F9(a11, a12, a13) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                a11[799] = this;
            } catch(e17) {
            }
            try {
                let v21 = v8 || -9223372036854775807;
                ~v8;
                ++v21;
                (-9223372036854775807) ** v21;
                v21 & -9223372036854775807;
                this.a = a13;
            } catch(e26) {
            }
            try {
                this.d = a7;
            } catch(e27) {
            }
        }
        new F9(a7, a7, -4303);
        new F9(-9, -4303, v8);
        new F9(a6, a7, -9);
        return v8;
    }
}
const v31 = new C4();
new C4();
new C4();
/[y(\1a)]/mgdv;
/N/;
/7Y/mi;
try {
    new Uint8Array(5);
} catch(e40) {
}
try {
    class C44 extends v31.constructor {
        #a;
    }
    new C44();
    new Int32Array(12);
} catch(e47) {
}
try {
    new BigUint64Array(1);
} catch(e51) {
}
class C57 {
    static [6];
    [9] = Int32Array;
    static m(a59, a60, a61, a62) {
    }
    [Float64Array];
    [Int32Array] = Float64Array;
}
const v63 = new C57();
let v64;
try { v64 = v63.n(); } catch (e) {}
const v66 = v64 >= Uint8Array ? v64 : Uint8Array;
v66[268435439] = v66;
v66.a = C57;
