class C3 {
    constructor(a5, a6) {
        var a = a5;
    }
    static #f;
    10232199 = "setUTCMinutes";
    h;
    static b;
}
const v10 = new C3(-21625, "setUTCMinutes");
const v11 = new C3(C3, v10);
new C3(v11, -21625);
class C13 {
    static o(a15, a16, a17, a18) {
        try {
            a18.valueOf = a16;
        } catch(e19) {
        }
        return a16;
    }
    static [-21625] = v10;
    2448;
    h;
}
new C13();
new C13();
new C13();
function f23() {
}
new WeakSet();
function f27() {
}
try { f27(); } catch (e) {}
class C29 extends f27 {
    constructor() {
        super();
        function f31() {
            return f27;
        }
    }
    static 189;
    #f;
    static [f27];
    3;
    d;
    179;
    #c = f27;
}
const v32 = new C29();
v32[2210];
Object.defineProperty(v32, "f", { configurable: true, set: f27 });
let v36 = 0.6429003764771205;
v36--;
const v40 = 1.6250968645626418e+308 + 1.6250968645626418e+308;
function f41() {
    return WeakSet;
}
const v42 = f41?.bind;
try { v42.bind(WeakSet); } catch (e) {}
try { new v42(v36); } catch (e) {}
2052 % 2052;
try {
    new Uint8Array(2052);
} catch(e49) {
}
5 - 5;
"async" == "async";
const o55 = {
    "execution": "async",
    "type": "minor",
};
5 % 5;
Int16Array.toStringTag;
function F59() {
    if (!new.target) { throw 'must be called with new'; }
    const v61 = this?.constructor;
    try { new v61(); } catch (e) {}
    try {
        this.c = 822223171;
    } catch(e64) {
        class C67 extends Uint8ClampedArray {
        }
        const v68 = new C67();
        const v69 = new C67();
        function f70(a71) {
            for (const v72 in v68) {
            }
        }
        v69.toString = f70;
        v69[-7] = v69;
    }
}
const v73 = new F59();
const v74 = new F59();
const v75 = new F59();
function f76(a77, a78) {
    try { a77.toLocaleString(); } catch (e) {}
    const o89 = {
        "f": v73,
        p(a81, a82, a83, a84) {
            class C85 extends F59 {
                5;
            }
            new C85();
            new C85();
            const v88 = new f23();
            return v88;
        },
    };
    o89.d = o89;
    return o89;
}
f76(v75, v74);
v42(v74, v73);
Int16Array.name;
try {
    const v93 = new Int16Array(5);
    v93.g = v93;
} catch(e94) {
}
16 & 16;
try {
    new Uint8ClampedArray(16);
} catch(e99) {
    new Uint8Array([[["function","function","function","function"],"function"],2371]);
}
const v108 = [/\x01?/gy];
try { v108.toLocaleString(); } catch (e) {}
v108 & 268435456;
v40 * (2052 * 2052);
-2147483648 >>> -2147483648;
const v117 = /8\p{General_Category=Decimal_Number}(a\1)/mgsdvi?.toString;
try { new v117(); } catch (e) {}
const v121 = new Int32Array(949287958);
v121[726475987];
-1.0 + -1.0;
const o126 = {
    [5.161624552045739]: 5.161624552045739,
    [5.161624552045739]: -1.0,
};
o126.toPrimitive = o126;
