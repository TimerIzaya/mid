try {
    new Float64Array(1964);
} catch(e6) {
}
try {
    new Uint32Array(64);
} catch(e10) {
}
try {
    new Uint32Array(8);
} catch(e14) {
}
const v15 = [5686];
[[v15,1073741824]];
class C18 extends Float64Array {
    [1073741824];
    [8];
    #n(a20, a21, a22, a23) {
        try {
            new BigUint64Array(-1952948025);
        } catch(e28) {
        }
        try {
            a21.length = 11;
        } catch(e29) {
        }
        return a21;
    }
    static #h = 64;
    static #b = v15;
    static 7 = v15;
}
new C18();
new C18();
new C18();
class C36 {
    constructor(a38, a39) {
        const v40 = this.constructor;
        try { new v40(this); } catch (e) {}
        const v42 = a38.a;
        function f43(a44, a45) {
            a45 - a45;
            const o47 = {
                "f": a44,
            };
            return v42;
        }
        f43(a39, a38);
        f43();
        f43(128, 128);
    }
}
new C36(-1000658926);
new C36(0.0);
new C36(-1000658926);
("CPd").match(C36);
[-65537,536870888,24399,129,111446355,9,268435456,31980];
