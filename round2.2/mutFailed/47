try {
    new Float32Array(2849);
} catch(e3) {
}
try {
    new Float32Array(10);
} catch(e7) {
}
class C10 {
    m(a12, a13) {
        a12[-1004949580] = this;
    }
}
Int8Array.prototype = Int8Array;
try {
    new Int8Array(5);
} catch(e16) {
}
const v17 = [268435456,-20395,49225,-2,-1];
[-31859,127,9,64889,-13135,-31442];
const v19 = [536870888,536870887];
try { v19.reduce(v17); } catch (e) {}
8 + 8;
const t22 = [3.0,728.7710136286514,7.58009139855735];
t22.length += C10;
class C30 {
    static g;
    static [65536] = "g";
    static b;
    static #b;
    static #f;
}
-(-2147483649);
function f34() {
    return Uint8ClampedArray;
}
let v35 = 2.220446049250313e-16;
v35--;
try {
    this.__proto__ = this;
} catch(e38) {
    e38.byteOffset = e38;
}
class C39 {
    set f(a41) {
        Math.tan(a41);
    }
}
const v44 = new C39();
const v45 = new C39();
class C46 extends C39 {
    n(a48, a49) {
        v44.f = this in v45;
    }
}
new C46();
