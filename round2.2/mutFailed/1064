let v0 = 1974644757n;
let v1 = 4294967295n;
Math.asin(v1);
Math.cos(v0);
Math.atan2(v0, -9);
28451 + -9;
v1--;
28451 % -5.0;
const v14 = new WeakMap();
[-2.841552619997066e+306,-3.0,2.220446049250313e-16,44842.3908649236,177329.84183810698,-1.325751360669682e+308,1e-15];
const v16 = [5.644834604904553,0.0,-3.0,1.5633806000469406e+308,845617.4615961015];
const v17 = [5.547825844520675,863.2795946837055,-0.0,NaN,-729.7690880373789,781670.0702187,5.632626322989257,804437.9728866799,6.807781099279811];
class C18 extends WeakMap {
    constructor(a20, a21, a22, a23) {
        super(a22);
        try {
            v0 = v1;
        } catch(e24) {
        }
    }
    [v14];
    [v16];
    static #d;
    static p(a26, a27, a28, a29) {
        const v30 = super.delete(28451);
        try {
            this[a29] = 28451;
        } catch(e31) {
        }
        return v30;
    }
    static [v17] = 2n;
}
new C18(v1, v1, v16, v0);
new C18(2n, 2n, v17, v0);
new C18(2n, 2n, v16, 2n);
const v37 = new Float64Array(16);
v37.reverse();
