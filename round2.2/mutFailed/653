function f0() {
    let v2 = "Ezt";
    class C5 extends Float32Array {
    }
    new C5();
    const v7 = /ZO/ui;
    const v8 = v7[v7];
    try {
        v2.unicode = v8;
    } catch(e9) {
    }
    const o16 = {
        ..."number",
        [-1]: "number",
        __proto__: v2,
        [-5.915426228657175]: v2,
        "g": v2,
        "f": -5.915426228657175,
        [v2](a11) {
            const o14 = {
                set f(a13) {
                },
            };
            return o14;
            throw this;
            try {
                v2 = "number";
            } catch(e15) {
            }
            return -5.915426228657175;
        },
    };
    return o16;
}
let v17 = f0();
const v18 = f0();
f0();
try {
    new Uint32Array(2873);
} catch(e23) {
}
try {
    v17.__proto__;
    const o29 = {
        "maxByteLength": 1080,
    };
    const v31 = new SharedArrayBuffer(512, o29);
    try {
        new Uint32Array(v31);
    } catch(e34) {
    }
    new Float32Array(3584);
} catch(e36) {
}
for (const v37 of f0) {
    new Uint32Array(v17, v37);
}
try {
    v17 = v18;
} catch(e39) {
}
class C42 {
    constructor(a44) {
        let v45;
        try { v45 = a44(this); } catch (e) {}
        try { v45.toString(v45, C42, v45, a44, v45); } catch (e) {}
    }
}
try {
    new Uint32Array(16);
} catch(e48) {
}
new Map();
gc();
