const v3 = [-6.654402254185316e+307,671.759878619175,-913.6978829673748,0.8984778205485342];
const v4 = [-838271.284994536,3.0,-1e-15,-1.3883902581252133e+308,57.65618441110428];
const v5 = [-1000000000000.0,0.5552874636640893,2.0,1000000000.0];
function f6(a7, a8) {
    const v9 = a7 * v5;
    new v4();
    return v9;
}
v5[Symbol.toPrimitive] = f6;
class C13 {
    #toString(a15, a16, a17, a18) {
        !9n;
        let v21 = -65536;
        +(a17 * v21);
        const v24 = --v21;
        Math.log(-2147483648n);
        !v21;
        return !v24;
    }
    c = -2147483648n;
    6;
    1531;
}
const v28 = new C13();
const v29 = new C13();
const v30 = new C13();
function f31(a32, a33) {
    const o42 = {
        "h": a32,
        valueOf(a35, a36) {
            -2147483648n >> a36;
            const v38 = `
                try { v3.reverse(); } catch (e) {}
            `;
            eval(v38);
            v3.c &&= a33;
            return v5;
        },
        "e": -2147483648n,
        [v5]: v28,
        "f": a32,
        503: a32,
    };
    return o42;
}
f31(v29, v29);
f31(v30, v28);
f31(v29, f31);
try {
    new Uint16Array(6);
} catch(e49) {
}
try {
    new Uint32Array(7);
} catch(e53) {
}
try {
    new Uint16Array(3371);
} catch(e57) {
}
function F58() {
    if (!new.target) { throw 'must be called with new'; }
}
class C60 extends F58 {
    b;
}
const v61 = new C60();
delete v61.b;
