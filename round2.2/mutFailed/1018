[210.64244396255617,0.9968883358770344,2.0];
const v1 = [1.7805613774364185e+308,0.39786281325693873,-647257.0689628585,-9.101984840816568e+307,5.0,0.6422818319845014];
const v2 = [-916474.5216648402,249812.39087430155,1000000000000.0,-1e-15,-138931.74010715634];
const v3 = /tN(ucA\u{12345})?/msv;
const v4 = /0d?/gdui;
const v5 = /a\Sc*/mduy;
function f6(a7, a8, a9, a10) {
    const v11 = a7?.constructor;
    try { new v11(v4, v2); } catch (e) {}
    const v13 = a9.ignoreCase;
    a10.c = a10;
    const o21 = {
        "f": v3,
        ...a8,
        __proto__: v4,
        "c": v1,
        toString(a15, a16) {
            const o17 = {
                "b": this,
                "e": a15,
                "d": v13,
                __proto__: a9,
                "c": a15,
            };
            try {
                new Proxy(a16, o17);
            } catch(e20) {
            }
            return v2;
        },
    };
    try { o21.toString(o21, o21); } catch (e) {}
    return o21;
}
const v23 = f6(v4, v5, v3, v5);
[2.2250738585072014e-308,1000.0,3.0,8.427776133180135];
[Infinity,NaN,1.0,-3.0,-1.485911419916931e+306,-1000000000.0,7.448010087794156,-649.8330065423419];
[0.0,1e-15,-912.7623642268035];
v3.sticky;
v5.global &&= f6;
v23.c = v23;
const v28 = f6(v5, v5, v3, v5);
const v29 = f6(v3, v3, v4, v5);
const v30 = [v3,v3];
try { v30.entries(); } catch (e) {}
[f6,v30,[v28,v30],v3];
Uint8Array.length;
const v37 = new Uint8Array(230565159);
try { v37.find(v29); } catch (e) {}
function F39(a41, a42, a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    a42 | a42;
    a43 >>> a43;
    -F39;
    let v50 = ~F39;
    ++v50;
    ++F39;
    const v53 = this.constructor;
    try { new v53(); } catch (e) {}
}
new F39();
new F39();
