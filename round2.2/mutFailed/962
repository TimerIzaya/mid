const v0 = [964630.4240687753];
function f1() {
    try {
        v0[2] = v0;
    } catch(e2) {
    }
    return v0;
}
v0.toString = f1;
const v3 = [4.0,1.425770205350363e+308,-543330.6674839002,4.0];
const v4 = [1.242308840030704,0.905087725481446,0.3904262953413089,-943.2464371320151,-7.430612184297192,0.7673147203278589,0.5257373142371395,-516213.18133927986];
v4.g = v0;
function f5(a6, a7) {
    a6.valueOf = f1;
    try { a6.push(v3); } catch (e) {}
    a7.g = a7;
    const o27 = {
        "h": v0,
        [-2]: a7,
        get b() {
            try {
                new Int16Array(3189);
            } catch(e13) {
                const v14 = [536870887,-2147483648,38638,4294967295];
                const t24 = [1,268435456,-17443,-32622,512,255,-7880468,3];
                t24[3702013189] = v14;
                v14 <= e13;
                ("species").normalize();
            }
            try {
                new Uint8ClampedArray(4);
            } catch(e22) {
            }
            try {
                new Uint32Array(127);
            } catch(e26) {
            }
            return Uint8ClampedArray;
        },
    };
    return o27;
}
function f28(a29) {
    const o30 = {
        "call": f5,
        "construct": f5,
        "deleteProperty": f1,
        "get": f1,
        "getOwnPropertyDescriptor": f1,
        "getPrototypeOf": f5,
        "isExtensible": f5,
        "ownKeys": f5,
        "setPrototypeOf": f1,
    };
    try {
        new Proxy(v3, o30);
    } catch(e33) {
    }
    return o30;
}
f5.toString = f28;
f5.length = f5;
const v34 = f5(v0, v4);
v34.push = v3;
v34.e = v34;
const v35 = f5(v3, v0);
f5(v3, v35);
const v37 = [f5,v0,v35,v0];
function f38() {
    return f1;
}
Object.defineProperty(v37, Symbol.toPrimitive, { configurable: true, enumerable: true, get: f38 });
const v41 = [v3,v3,v35,v37,v37];
v41.toString = f38;
try { v41.toSorted(v35); } catch (e) {}
class C45 extends Uint32Array {
    constructor(a47, a48, a49) {
        super(a49);
        for (let i = 0; i < 5; i++) {
            try {
                a47[15] = 1548;
            } catch(e50) {
            }
        }
    }
}
const v51 = [v37,v34,v41];
try { v51.map(f5); } catch (e) {}
function F53(a55, a56, a57) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = f38;
    a56.toString = f1;
    Object.defineProperty(a57, Symbol.toPrimitive, { writable: true, value: f1 });
    const v60 = this?.__defineSetter__;
    try { new v60(v3, v3); } catch (e) {}
    a56[2] = a56;
    try { a57.with(a56, f5); } catch (e) {}
    try {
        this.b = v34;
    } catch(e63) {
        const v64 = [-2.0945234989366046,1e-15,-1.5583676274359639e+308,222704.18946408946,Infinity,4.0,-1e-15,NaN];
        const v65 = [-1000000000.0];
        const v66 = [v64];
        ([v65,v65]).join(v66);
    }
    try {
        this.e = v35;
    } catch(e69) {
    }
    try {
        this.h = v34;
    } catch(e70) {
    }
}
new F53(v51, v41, v37);
const v72 = new F53(v3, v37, v0);
v72.b = v72;
const v73 = new F53(v3, v37, v41);
v73.b = v73;
function f74() {
    return f74;
}
const v78 = f74();
const v79 = f74();
const v80 = f74();
function f81() {
    return f38;
}
Object.defineProperty(v80, "valueOf", { writable: true, configurable: true, enumerable: true, get: f81 });
-27406 >> -27406;
-48686 + -48686;
class C87 extends f74 {
    constructor(a89, a90, a91, a92) {
        super();
        class C94 extends v78.constructor {
            [-1];
            static 512;
            6 = this;
        }
    }
}
16 !== ((v80 ** f74) || v79);
try { this.printErr(); } catch (e) {}
