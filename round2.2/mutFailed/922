const v0 = -Infinity;
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    F3.b = 0.5265993676689643;
    this.localeCompare();
    for (let i11 = 0, i12 = 10; i11 < i12, i11; i11++) {
    }
    try {
        this.b = -45718.98568034812;
    } catch(e19) {
    }
    try {
        const t12 = "setMonth";
        t12.a = 0.5265993676689643;
    } catch(e20) {
    }
    try {
        this.f = a5;
    } catch(e21) {
    }
}
const v22 = new F3(v0, 0.5265993676689643);
new F3(0.5265993676689643, -45718.98568034812);
new Map();
"HqF" >> 0.5265993676689643;
function F28(a30, a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
}
const v33 = new F3(-45718.98568034812, v22);
function f34() {
    return v33;
}
F28 ** 1e-15;
try { (-2.0)["HqF"](); } catch (e) {}
[-Infinity];
[-529505.597515716,-6.812129766411492,0.9224934985854104,-899.0410127109385];
[1000000.0,0.008562025619742064,4.0,NaN,-7.227370057750675];
const o44 = {
};
gc(o44);
Symbol.match;
Float32Array[1] = o44;
const v49 = new Float32Array(Float32Array, Float32Array);
v49.copyWithin();
