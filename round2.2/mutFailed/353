try {
    new Int32Array(Int32Array);
} catch(e3) {
}
try {
    const v6 = new BigUint64Array(129);
    const v7 = v6?.constructor;
    try { new v7(1024, Int32Array, 1024); } catch (e) {}
} catch(e9) {
}
try { new Float64Array(Int32Array, Int32Array, Int32Array); } catch (e) {}
try {
    new Float64Array(68);
} catch(e14) {
}
try { ("43509").strike(); } catch (e) {}
("7")[0];
5 >>> 5;
function f25(a26, a27, a28) {
    return a26;
}
const v31 = [Worker,"function",-946.8643548427116];
const o32 = {
    "arguments": v31,
    "type": -946.8643548427116,
};
new Worker(f25, o32);
