const v1 = new Map();
const v2 = [-1092,1120390896];
const v3 = [-9007199254740990,9,19720,512];
try { new Int8Array(v2, 16, v2); } catch (e) {}
const v7 = new Int8Array(16);
try { v7.keys(); } catch (e) {}
Number.isNaN(Math.sinh());
[2147483647,3];
function f18() {
    return f18;
}
let v19;
try { v19 = f18(); } catch (e) {}
function f20() {
    return f20;
}
f20.length;
let v22 = 3724;
const v23 = v22++;
const v24 = new v3(v22);
new WeakMap();
-65537 - -65537;
v19[2];
/(ra\bc)/gdu;
/Q/mgv;
/\u{12345}\u{23456}/mgsdui;
v24[Map];
try {
    const o40 = {
    };
    o40.b = o40;
    new Int8Array(o40, v23, -2121477748);
} catch(e43) {
}
function F45(a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    for (let i52 = v1, i53 = 10; i52 < i53;) {
        function f59() {
            return f59;
        }
    }
}
