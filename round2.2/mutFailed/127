const v1 = new WeakMap();
function F5(a7) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a7;
    } catch(e8) {
    }
    try {
        this.e = v1;
    } catch(e9) {
    }
    try {
        this.d = v1;
    } catch(e10) {
    }
}
const v11 = new F5(v1);
const v12 = new F5(2);
new F5(v11);
function f17() {
    return v12;
}
let v23 = [2,1885835501];
v23[Symbol.toPrimitive] = f17;
--v23;
function f27(a28, a29, a30) {
    return a28;
}
const v33 = [v23];
const o34 = {
    "arguments": v33,
    "type": "function",
};
new Worker(f27, o34);
