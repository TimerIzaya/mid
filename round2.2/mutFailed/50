function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a5;
    } catch(e6) {
    }
    try {
        this.c = -14n;
    } catch(e7) {
    }
    try {
        ("description").indexOf();
        const o10 = {
        };
        ([-1,-1567147178,64,-3]).toLocaleString;
        this.e = -4n;
    } catch(e13) {
    }
}
11n < BigUint64Array;
function F17(a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
}
const v22 = new F17();
const v23 = new F17();
v23["boolean"] >>>= v22;
new F3(-14n);
const v25 = new F3(11n);
new v25(-14n);
const v30 = [366.10026087466804,Infinity,-2.0,1000000000.0,2.220446049250313e-16,-6.4086229189184944,1.0,1000000.0,NaN];
[-1000000.0,1000000000000.0,1000000.0,31.425421848002316,1.0,-1000000000.0];
[-479.04213348484495,-1000.0,-1.0,Infinity,498.37525047229155,-8.28416265783339,-2.81496134674488,-8.466021952957622,-1000000.0,-7.750719566148071e+307];
function F33(a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a35;
    } catch(e37) {
    }
    try {
        this.b = 2147483648;
    } catch(e38) {
    }
    try {
        this.h = v30;
    } catch(e39) {
        let v41 = eval;
        v41 -= v41("");
        Date.UTC(2703, 2703, 2703, 2703);
    }
    class C46 {
        constructor(a48, a49, a50) {
        }
        /*
        constructor(a52, a53, a54, a55) {
        }
        */
        static set d(a58) {
            for (let [i66, i67] = (() => {
                    const v60 = [-1.0,-267238.1378309665];
                    try {
                        v60.length = -3556;
                    } catch(e61) {
                    }
                    class C65 {
                    }
                    return [0, 10];
                })();
                C46;
                ) {
            }
        }
    }
}
new F33(9007199254740991, 9007199254740991);
const v75 = new F33(9007199254740991, 9007199254740991);
class C76 {
    constructor(a78, a79, a80) {
        function f81(a82, a83) {
            ({"f":a79,} = this);
            return a82;
        }
        new Promise(f81);
    }
}
new F33(v75, 2147483648);
function f88(a89, a90) {
    return a89;
}
const o94 = {
    valueOf() {
        try {
            super.a = v23;
        } catch(e93) {
        }
        return 0;
    },
};
false instanceof f88;
