class C3 {
    static f;
    #m(a5) {
        this ^ a5;
        return this;
    }
    static p(a11) {
        const v12 = this[277327095];
        function f13(a14) {
            return a11;
        }
        class C15 extends f13 {
            181 = v12;
            static [-9007199254740992n];
        }
        return 404218656n;
    }
}
function f16(a17) {
    new Date();
    return Date;
}
C3.toString = f16;
new C3();
const v21 = new C3();
new C3();
class C23 {
    static m(a25, a26, a27, a28) {
        try { v21.valueOf(a27); } catch (e) {}
        Math.log1p(-1.5544126518189235e+308);
        (a27 || a26) || this;
        return a26 - a26;
    }
    static b;
    [C3];
}
new C23();
new C23();
new C23();
[65535];
[-256,-2147483648,536870912,48769];
[536870912,-15,1,25039,-13,15,-735215864];
try {
    Int16Array(5, 5);
} catch(e46) {
}
try {
    Uint32Array();
} catch(e50) {
}
try {
    Float32Array(8);
} catch(e54) {
}
function F55(a57, a58, a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
}
const v61 = new F55(5, 8, 5, 5);
const v62 = new F55(5, 8, 5, 8);
const v63 = new F55(5, 5, 5, 5);
v63.finally = v63;
const v64 = [-14,60606,-16407];
const v65 = [536870889,-1];
const v66 = [-65537,65537,4294967297,-1170382801,65535,536870888,1073741825,-1];
class C67 {
}
const v68 = new C67(v65, v61, v64);
new C67(v66, v68, v68, v62);
try { v63.finally(); } catch (e) {}
