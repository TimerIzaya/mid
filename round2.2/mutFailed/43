const v3 = /va\b!/gsdu;
const v4 = /2\P{Decimal_Number}/mgdi;
const v5 = /N(?=)*/si;
const v6 = [-365972.520332191,1000000.0,-1.0];
const v7 = [-1.7752372661426336e+308,1.1688493284107504e+308,23.71493949557407,-1000000000000.0];
function f8(a9) {
    try {
        BigInt64Array(1000);
    } catch(e13) {
    }
    return v7;
}
v7.toString = f8;
const v14 = [1000000000.0,276428.1893349348,-141113.14681571163,0.2163223768714756,-1000000.0,-926608.0179886351,0.18128777734530144,0.06615652813218365,-3.6816101762326747];
function f15(a16, a17, a18) {
    a16.toString = f15;
    const o23 = {
        ...a16,
        "e": v3,
        "f": v6,
        __proto__: a16,
        set d(a20) {
            try {
                this.h = a16;
            } catch(e21) {
            }
            this[a20 / a18] ||= a20;
        },
        ...v7,
        [v7]: a18,
    };
    return o23;
}
const v24 = f15(v14, v14, v3);
const v25 = f15(v6, v7, v5);
const v26 = f15(v7, v7, v3);
function F27(a29, a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = f15;
    } catch(e32) {
    }
    try {
        this.e = v3;
    } catch(e33) {
    }
}
const v34 = new F27(v4, v25, v24);
new F27(v5, v34, v26);
new F27(v4, v5, v24);
Error().toString();
