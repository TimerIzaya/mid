const v0 = [1e-15,2.220446049250313e-16,447.2199775181123];
[-1000000.0,0.2916707214211187,2.220446049250313e-16,330005.2223105654,-1.0,-3.0,700969.9778212942,0.32765977126782975,-8.863797379239127,1000000.0];
[5.399018986779833,-714.0421389737414,1.1827476112383586e+308,4.0,-8.730112307175175e+307,-1000.0,983.7920232439765];
[1.0];
const v4 = [1000000000.0,0.8333657473467936,-8.065201549154583e+307,544.2840917708324,0.5312959922422469,441.387755995883,305.49207167561485,3.6866068750777448];
const v5 = [1000000.0,2.0,0.6956836114638827,-136517.7237083926,561497.8787017572,2.2250738585072014e-308,-4.0,-1000000000.0,-5.0];
class C6 {
    static #valueOf(a8, a9, a10, a11) {
        try {
            [];
            class C16 {
                static e;
                static #toString(a18, a19) {
                    let v22 = -9223372036854775808;
                    let v24 = ~a18 * v22;
                    Math.sign();
                    --v22;
                    try {
                        [-307453.1961484386,9.892406389862916,-2.0,-2.268374148487058];
                    } catch(e28) {
                        const v29 = Math;
                    }
                    return ++v24;
                }
            }
            new C16();
            try {
                Int8Array();
            } catch(e35) {
            }
            const o39 = {
            };
            try {
                this();
            } catch(e42) {
            }
            try {
            } catch(e44) {
            }
            gc();
            this.#valueOf();
        } catch(e48) {
        }
        return v4;
    }
    e;
    d;
    #h;
    9 = v0;
}
new v5();
new v5();
new C6();
class C55 {
    static {
        class C58 extends this.constructor {
        }
        new C58();
    }
}
