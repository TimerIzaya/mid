const v0 = [-1.0,563875.9663130206,-1000000000000.0,Infinity,-0.0];
const v1 = [147.25999423362782,0.8845548325629409,-0.0,1000000000.0,-3.0,Infinity,0.2397075835102077,641.1880152265303];
const v2 = [-4.0];
const v4 = ("65536")[4];
let v7;
try { v7 = ("s3H").codePointAt(v4); } catch (e) {}
function f8(a9, a10, a11) {
    const v12 = a10?.toLocaleLowerCase;
    let v13;
    try { v13 = new v12(); } catch (e) {}
    try { v13.pop(); } catch (e) {}
    const o25 = {
        valueOf(a16, a17) {
            let v19 = 765507649;
            const v22 = -(--a17);
            --v19;
            return v22 & 2125739038;
        },
        "b": v0,
        "d": "s3H",
        ...a11,
        "g": a9,
    };
    try { f8.valueOf(a10, o25); } catch (e) {}
    return o25;
}
const v27 = f8("65536", "65536", v1);
v27[1] = v27;
f8("65536", "s3H", v2);
f8("p", "65536", v1);
try {
    const v32 = [-4.0,1.0,-1.7976931348623157e+308,0.6175352379554376,218339.60799626866];
    let v33;
    try { v33 = v27.map(v32); } catch (e) {}
    gc.bind();
    Math.atanh(0.8852546898875066);
    const v39 = new BigInt64Array(1);
    v39[0] = v39;
    new Float64Array(v7);
    function f43(a44, a45) {
        for (let v47 = 0; v47 < 25; v47++) {
            v33["p" + v47] = v47;
        }
        return f43;
    }
} catch(e50) {
}
v4.sign();
let v53 = 1000000000.0;
v53--;
try {
    v2[v53] = v0;
} catch(e55) {
}
257 != 257;
try {
    /(?=a){1,10}a/dy;
    new Float32Array(257);
} catch(e67) {
}
try {
    function f70(a71, a72) {
        return a72;
    }
    const o75 = {
        "type": "function",
    };
    const t67 = "function";
    new t67(f8, o75);
    new Float64Array(4);
} catch(e78) {
}
3.8550854770401665e+307 % 3.8550854770401665e+307;
530.011274033993 % 530.011274033993;
-268435456 % -268435456;
10 >>> -4294967297;
