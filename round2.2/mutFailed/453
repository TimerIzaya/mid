function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -1880006078;
    } catch(e3) {
    }
    try {
        this.b = -1880006078;
        const v4 = [-9.917839929428682,2.0,-3.0,Infinity,-2.2250738585072014e-308,0.7500989095026612,-0.0,2.2250738585072014e-308];
        const t9 = v4.constructor;
        t9(-439.4601290456019, v4[3]);
    } catch(e9) {
    }
    try {
        this.f = -1880006078;
    } catch(e10) {
    }
}
const v11 = new F0();
const v12 = new F0();
const v13 = new F0();
class C14 {
    set h(a16) {
        class C21 extends BigInt64Array {
            constructor(a23, a24, a25, a26) {
                super();
                super[a25] = 7;
            }
        }
    }
    p(a29, a30) {
        try {
            super[a29] = this;
        } catch(e31) {
        }
        a30[4096] &&= F0;
        return a29;
    }
}
const v32 = new C14();
const v33 = new C14();
C14.unicode = v33;
const v34 = [1007962301,1305633920,-2147483649,4294967296,-1,-11];
[v34,v34];
const v38 = ([v12,v34]).fill(undefined);
const v39 = new C14();
function f40(a41, a42, a43) {
    const o44 = {
        "g": a43,
        "a": v33,
        "c": v39,
        "b": C14,
        ...v33,
        ...v13,
        128: a41,
        __proto__: a41,
        "d": C14,
        "h": C14,
        "f": undefined,
        5: v11,
        "e": v13,
    };
    return o44;
}
const v45 = f40(v11, v11, v13);
f40(v45, C14, v45);
f40(v11, v12, v45);
class C48 extends F0 {
    get d() {
        try {
            new Int32Array(1024);
        } catch(e53) {
        }
        try {
            new Int32Array(127);
        } catch(e57) {
        }
        try {
            new Int16Array(10);
        } catch(e61) {
        }
        for (let [,v62,,v63] of v11) {
            try {
                const o66 = {
                    set b(a65) {
                    },
                };
                async function f68(a69, a70, a71) {
                    return v33;
                }
                super.f = v62;
                this.matchAll;
                536870889n << 536870889n;
                try {
                    new Float32Array(2981);
                } catch(e79) {
                }
            } catch(e80) {
            }
        }
        return v32;
    }
    static 174;
    a;
    [C14] = v45;
    static b;
}
new C48();
const v82 = new C48();
new C48();
const v85 = [1.7976931348623157e+308];
class C86 extends Uint32Array {
    constructor(a88, a89) {
        super(v34, a89, C86);
        super.buffer;
    }
    static #e = v38;
    static #e;
    static valueOf(a92, a93, a94) {
        class C102 extends Date {
            static #e;
            static h;
            b = -352500.6925442775;
            static #b = v82;
            2029784578;
            constructor(a104, a105, a106) {
            }
        }
    }
    /*
    constructor(a109, a110, a111) {
        super(v85);
    }
    */
}
new C86(v85, C86, C86);
