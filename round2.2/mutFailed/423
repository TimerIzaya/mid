class C3 {
    static #p(a5, a6) {
        const v7 = /[6+]/msvi;
        const v8 = /g(?:a+){0,0}xyz{1,32}\x60?/sduy;
        /a\nb\bclsH/u;
        try {
            C3[4294967297] &&= a5;
            try { new a5(4, C3, v7, v7); } catch (e) {}
            try {
                arguments[5] = arguments;
            } catch(e12) {
            }
            this.#p(this, 4294967297, a6, a5, -779521793);
        } catch(e14) {
        }
        return v8;
    }
    f;
}
new C3();
new C3();
new C3();
function f18() {
    return f18;
}
function f19() {
}
function f20() {
    return f19;
}
Object.defineProperty(f19, "toString", { configurable: true, enumerable: true, get: f20 });
class C26 extends f19 {
}
new C26();
const o29 = {
};
function f30(a31) {
    try {
        Array(-500611223);
    } catch(e35) {
    }
    return C26;
}
o29.get = f30;
const v37 = new Proxy(C26, o29);
v37[v37];
try {
    new Int8Array(28);
} catch(e45) {
}
try {
    new BigUint64Array(2);
} catch(e49) {
}
try {
    new Uint8ClampedArray(128);
} catch(e53) {
}
new Map();
([-457,128,-65535,8321,0,58273,4294967296]).toLocaleString();
