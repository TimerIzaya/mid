const v0 = /(?=a){1,10}a/mgyi;
let v1 = /en/yi;
/(x)(x)(x)\3/mguy;
const v6 = [0.3343841240548131,NaN,107231.99854644295,-8.670493485273367,-609.0464973976407,1.7976931348623157e+308];
const v7 = [-2.220446049250313e-16,-1.0529078696659998e+307];
const v8 = [-1000000000.0,-473.96839496024404,0.0];
const v9 = [-4.0,0.8708255163235739,-5.107139985534772e+307];
function f10() {
    return f10;
}
Math.log2();
[-153699.75884747645,-2.220446049250313e-16,2.0,5.0,1000000000.0];
[-1000000.0,NaN,2.2250738585072014e-308,3.0,1.0,-0.8140602058077562,5.734770902284531,-1.7976931348623157e+308,-1.0];
function F15() {
    if (!new.target) { throw 'must be called with new'; }
    const v17 = this?.__lookupGetter__;
    try { new v17(this); } catch (e) {}
}
const v19 = new F15();
let v20;
try { v20 = F15(-27785, v0, v19, ...v8, v19, F15); } catch (e) {}
const v21 = [0.8709348737940914,726.5220338649585];
function f22(a23, a24) {
    %VerifyType(a24);
    return /BP1()Af/mdyi.exec(/Pa\9\118\c!/msd);
}
const v29 = Symbol.toPrimitive;
Symbol.for(v29.description);
v21[v29] = f22;
const v33 = [-1e-15,1e-15,-2.0,-625.0246966318889,405.6753440231114];
const v34 = [5.0];
v34.g = v34;
function f35(a36, a37) {
    try { a37.map(v29); } catch (e) {}
    try { a36.map(f35); } catch (e) {}
    const o49 = {
        "a": v21,
        ...v33,
        "b": a37,
        __proto__: a36,
        [a37]: v33,
        268435441: v21,
        ...a37,
        "d": a36,
        "e": v34,
        set g(a41) {
            [1e-15,0.42910311427000813,0.0,866.0612006138062];
            const v43 = [-0.0,-1000000000000.0];
            [784.0051522163478,-1000000000.0,3.2417869715692045e+307,-1000000000.0,706673.1140600892];
            -v34;
            for (let v46 = 0; v46 < 10; v46++) {
                v43["p" + v46] = v46;
            }
        },
    };
    const v50 = o49[268435441];
    try { v50.push(o49); } catch (e) {}
    return o49;
}
const v52 = f35(v33, v33);
v52[1] = v52;
v52[268435441] = v52;
v9[v6] += -27785;
const v53 = v7.length;
let v55 = Uint8Array;
try {
    new v55(6);
} catch(e57) {
}
17249n <= 17249n;
9007199254740990n << 9007199254740990n;
try { Int8Array.bind(-27785); } catch (e) {}
try { BigUint64Array(v9, v9, v52); } catch (e) {}
try { new BigUint64Array(17249n, 3029, BigUint64Array); } catch (e) {}
try {
} catch(e79) {
    var e = Uint8Array;
} finally {
}
try {
    new Float64Array(2905);
} catch(e82) {
}
try {
    new BigInt64Array(16);
} catch(e86) {
}
const v87 = new F15();
function f88(a89) {
    const o92 = {
        "h": v87,
        2: a89,
        268435440: v53,
        "e": a89,
        ...v6,
        [v20]: v87,
        [v19]: v19,
        [a89](a91) {
        },
    };
    if (f88 <= BigInt64Array) {
        try { v87.p(-27785, F15, 16); } catch (e) {}
    } else {
        try { Math.expm1(Int16Array); } catch (e) {}
        Math.expm1(v55);
        let v100 = v55++;
        v100 + v100;
        const v102 = Math.sin(1000000000000.0);
        v102 >>> v102;
        Math.random();
        const v105 = ~v55;
        v105 != v105;
        function f107(a108, a109) {
            const o110 = {
                __proto__: a109,
            };
            return a108;
        }
        ++v100;
    }
    return o92;
}
%PrepareFunctionForOptimization(f88);
f88(v19)[2];
const v114 = typeof v87;
try { v114.valueOf(); } catch (e) {}
const v117 = v114 === "symbol";
v117 || v117;
const v120 = -9223372036854775807 >>> -9223372036854775807;
v120 >>> v120;
Symbol.match;
function f123(a124, a125) {
    return a125;
}
let v126;
try { v126 = v20(v0, v117, v20, v117, v0); } catch (e) {}
try {
    v1 = v126;
} catch(e127) {
}
f88(v19);
for (let v129 = 0; v129 < 25; v129++) {
    v129 >>> v129;
    const v132 = ("p")?.constructor;
    try { new v132(v19); } catch (e) {}
    v19["p" + v129] = v129;
}
%OptimizeFunctionOnNextCall(f88);
f88();
