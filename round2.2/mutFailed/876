try {
    new Float64Array(1964);
} catch(e6) {
}
try {
    new Uint32Array(64);
} catch(e10) {
}
try {
    new Uint32Array(8);
} catch(e14) {
}
const v15 = [5686];
const v16 = [v15,1073741824];
[5686];
class C18 extends Float64Array {
    [64];
    [8];
    #n(a20, a21, a22, a23) {
        try {
            a21.length = 11;
        } catch(e25) {
        }
        return a21;
    }
    static #h = 64;
    static #b = v15;
    static 7 = v15;
}
new C18();
new v16();
new C18();
class C32 {
    constructor(a34, a35) {
        const v36 = this.constructor;
        try { new v36(this); } catch (e) {}
        const v38 = a34.a;
        function f39(a40, a41) {
            C18 - a41;
            const o43 = {
                "f": a40,
            };
            return v38;
        }
        f39(a35, a34);
        f39();
        f39(128, 128);
    }
}
new C32(-1000658926);
new C32(0.0);
const t51 = 64;
new t51(-1000658926);
("CPd").match(C32);
[-65537,536870888,24399,129,111446355,9,268435456,31980];
