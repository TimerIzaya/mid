try { ("string").toWellFormed(); } catch (e) {}
let v8 = 545991.1277210775;
v8++;
function f12() {
    class C13 extends "number" {
    }
    Math.asinh("b");
    try {
        Uint16Array(3533);
    } catch(e19) {
    }
    ("0")[0];
    const o25 = {
        valueOf(a23, a24) {
        },
        9: "0",
    };
    return o25;
}
f12();
f12();
class C28 extends f12 {
    constructor(a30) {
        super();
        Reflect.construct(f12, [])[9];
    }
}
C28.length;
new C28();
const v37 = new C28();
const v38 = new C28();
try { v38.valueOf(v37, "number"); } catch (e) {}
const v40 = f12();
const o41 = {
};
function f42() {
    return o41;
}
f42();
v40[9];
%OptimizeFunctionOnNextCall(f12);
class C46 {
    static {
        for (const v49 of [8.81989968612977,1000000.0,-3.0]) {
        }
    }
}
f12();
