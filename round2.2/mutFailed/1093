const v0 = /[f(x)(x)(x)\3]/mgsdv;
const v1 = /\c_/mi;
const v2 = /H(a)/mvy;
[v1,v2];
const v4 = [v0];
[v4];
[-2147483649,1628,365231273,65537,-2147483649,65537,2,1073741825,1244958633,536870888];
[-7,-4,1073741825,321384353];
const v8 = [-323565681,4294967297];
function f9() {
    return v2;
}
const v10 = [-0.0,-1.7976931348623157e+308,-1000000.0,215706.88135075057,-0.0];
const v11 = [0.8246895394000368,-0.46536375157300824,-532931.6441136643,1000.0];
[-1000.0,-2.220446049250313e-16,561.7024898596185,0.5937720568070347,-1000000000000.0,-2.0,498085.9396730552,-54419.23176000337];
function f13() {
    return v0;
}
try {
    new Uint8Array(2);
} catch(e17) {
}
try {
    new Int8Array(4);
} catch(e21) {
}
try {
    v10[6] **= 2;
    const o24 = {
    };
    try {
        o24.a = v11;
    } catch(e25) {
    }
    try {
        const o26 = {
        };
        o26.a = v11;
        o26.e = v8;
    } catch(e27) {
    }
    try {
        const o28 = {
        };
        o28.a = v11;
        o28.e = v8;
        o28.f = v2;
    } catch(e29) {
    }
    try {
        const o30 = {
        };
        o30.a = v11;
        o30.e = v8;
        o30.f = 2495;
    } catch(e31) {
    }
    new Uint8ClampedArray(2495);
} catch(e33) {
}
function f38(a39) {
    function f41(a42) {
        const t62 = Reflect.construct(a39, [Reflect,Reflect,a42,Uint8ClampedArray], Uint32Array);
        delete t62?.[9];
        %VerifyType(this);
        try {
            v4[2841006352] = v11;
        } catch(e47) {
        }
    }
    this.onmessage = f41;
    v1 / f41;
    const v49 = f41 - v11;
    try {
        this[65536] = v49;
    } catch(e50) {
    }
    `n${this}undefined`;
}
const v54 = [1024];
const o55 = {
    "arguments": v54,
    "type": "function",
};
new Worker(f38, o55);
