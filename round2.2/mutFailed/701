const v0 = [13,-2,-52688,4096,-11,-1289239302,825627929,-223093247,10,3];
const v1 = [9,-2147483647,65536,2147483648,-9007199254740990,-268435456,8,1073741825];
const v2 = [-4294967295,-346934382];
class C3 {
    static {
        const v5 = v0.length;
        let v6;
        try { v6 = new v1(v1, v5, v0); } catch (e) {}
        v1[4] = v6;
    }
    f = v0;
    static #c = v2;
    constructor(a8, a9) {
        this[0];
        try {
            v2.#c %= v2;
        } catch(e11) {
        }
    }
}
const v12 = new C3(v0, v1);
const v13 = new C3(v0, v0);
const v14 = new C3(v1, v0);
function F15(a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = v1;
    } catch(e20) {
    }
    try {
        this.b = a19;
    } catch(e21) {
    }
}
const v22 = new F15(v13, v12, v0);
const v23 = new F15(v14, v22, C3);
const v24 = new F15(C3, v14, v23);
class C25 {
    m(a27, a28) {
        try {
            super.b = v24;
        } catch(e29) {
        }
        return C25;
    }
    [F15];
    #d = v12;
    static [v14] = v1;
    static [v0];
    #e;
}
new C25();
const v31 = new C25();
new v31();
const v33 = [512,1000,-11,1930083367,-20405];
class C36 {
}
v33.concat(2147483647, 638507719, C36);
