try {
    new Uint8Array(2344);
} catch(e6) {
}
try {
    new Int8Array(3389);
} catch(e10) {
}
try {
    new Uint8ClampedArray(16);
} catch(e14) {
}
[2344,"n",Int8Array];
const v16 = [Int8Array,"n"];
[v16,v16,"t",Int8Array,"t"];
class C21 {
    ["q2"] = 3.0;
    n(a23, a24) {
        const v25 = -4294967296;
        let v26;
        try { v26 = this.toString(3.0, v25, v25, "q2"); } catch (e) {}
        super[this];
        try {
            super.g = v26;
        } catch(e28) {
        }
        return a23;
    }
    [3.0] = "q2";
}
const v29 = new C21();
const v30 = new C21();
new C21();
const v36 = new Array(512);
class C37 extends Array {
    o(a39) {
        const o40 = {
        };
        try {
            a39.g = v36;
        } catch(e41) {
        }
        try {
            const o42 = {
            };
            o42.g = v36;
            o42.e = this;
        } catch(e43) {
        }
        try {
            const o44 = {
            };
            o44.g = v36;
            o44.e = this;
            o44.c = a39;
        } catch(e45) {
        }
        try {
            const o46 = {
            };
            o46.g = v36;
            try {
                C37 = o46;
            } catch(e47) {
            }
            try {
                o40.toString = a39;
            } catch(e48) {
            }
            o46.e = this;
            o46.h = a39;
        } catch(e49) {
        }
        return Array;
    }
}
new v29();
new C37();
const v52 = new C37();
new WeakMap();
try {
    new Uint8ClampedArray(11);
} catch(e58) {
}
let v59 = 129;
try {
    new Int8Array(v59);
} catch(e62) {
}
try {
    new BigInt64Array(6);
} catch(e66) {
}
let v67 = 0;
while (v67 < 10) {
    try {
        new Uint8ClampedArray(1760718952);
    } catch(e72) {
    }
    v67++;
}
class C75 {
    m(a77, a78, a79) {
        return a77;
        try { a79("q2", Set); } catch (e) {}
        Math.log1p(v59);
        const v87 = -4.0 >> -5850;
        (3389).sin(v87);
        return v87 || 65535;
    }
}
new C75();
const v91 = new C75();
new C75();
function f93(a94, a95, a96) {
    const o99 = {
        set f(a98) {
        },
        ...v30,
        "a": a96,
        ...v52,
        "e": f93,
        "h": -4294967296,
    };
    return o99;
}
const v100 = f93();
class C102 extends Float64Array {
}
const v103 = f93(v100, f93, v100);
%OptimizeFunctionOnNextCall(f93);
f93(f93, v103, v100);
for (let i106 = 0; i106 < 0; v59++) {
    const o112 = {
        "apply": Array,
        "construct": Array,
        "defineProperty": 6,
        "getOwnPropertyDescriptor": f93,
        "getPrototypeOf": C21,
        "has": f93,
        "isExtensible": f93,
        "preventExtensions": f93,
        "setPrototypeOf": f93,
    };
    try {
        new Proxy(v91, o112);
    } catch(e115) {
    }
}
