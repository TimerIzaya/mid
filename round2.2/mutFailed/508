const v0 = [-536870912,-2,1073741824];
const v1 = [-536870912,1573533989,-1904591781,-15,-1112499086,-12,-1,-2];
const v2 = [-756947372,-43330,6,-9223372036854775808,9007199254740992,53491];
try {
    new v0(8);
} catch(e6) {
}
let v7 = 8;
try {
    new Uint8ClampedArray(v7);
} catch(e10) {
}
try {
    new Uint16Array(6);
} catch(e14) {
}
class C15 extends Uint8Array {
    p(a17, a18, a19) {
        try { v2.findLastIndex(a19, v1); } catch (e) {}
        for (let v21 = 0; v21 < 32; v21++) {
            this["p" + v21] = v21;
        }
        return Uint8ClampedArray;
    }
    [Uint16Array];
}
new C15();
new C15();
new C15();
[Infinity,-3.0,1000000000.0,-1e-15,-1.6663738889916442e+308,0.153104172771235,-2.220446049250313e-16,NaN,-534647.5011196625];
let v29;
try {
const t0 = -128;
v29 = t0(Uint16Array);
} catch (e) {}
const v31 = new Map();
function f32(a33) {
    return Uint8ClampedArray;
}
v31.toString = f32;
const v38 = Math.sin(v31);
let v39 = +Map;
[,v39,...v7] = v31;
gc(v38, v29, 6);
