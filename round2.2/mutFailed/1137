function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = -9223372036854775808;
    } catch(e3) {
    }
    try {
    const t0 = -9223372036854775808;
    t0();
    } catch (e) {}
    [-2.0,-4.0,3.0,-2.0,NaN,5.939828217330758,-995.5637595225526];
    const v6 = [-1000.0,-1000.0,-288.0030634373471,-1000000000000.0,-1000.0,0.5132642864666013,-6.1469877865087135];
    [0.8977499455446627,Infinity,1.2402480217406637];
    let [v8,...v9] = v6;
    v8 + v8;
    try {
        this.e = -9223372036854775808;
    } catch(e11) {
    }
}
new F0();
let v13 = new F0();
new F0();
[3.0,796.2097006502429,0.26975222030017787];
const v16 = [-7.895536286851832,1.6718366543836851e+308,0.06956426215601974,-1.0,561.2288163771539,-1e-15,2.434899870106036e+307,2.2250738585072014e-308,-1.4355536045425676];
let v17;
try { v17 = v16.map(v13); } catch (e) {}
[77919.53584141075];
class C19 {
    set h(a21) {
        function f22() {
            return a21;
        }
    }
    toString(a24, a25) {
        try {
            v13.fuck(true, "p", false);
        } catch(e30) {
        }
        return v13;
    }
}
const v31 = new C19();
function f32(a33) {
    try {
        v13 <<= v13;
    } catch(e34) {
    }
    return C19;
}
v31.constructor = f32;
const v35 = v31?.constructor;
try { new v35(); } catch (e) {}
new v17();
new C19();
-9007199254740990n / -9007199254740990n;
let v41 = 1073741825n;
v41++;
-2147483648n + -2147483648n;
let v50 = 65535n;
v50--;
const v53 = [7.022036070551813,5.0,Infinity,-576.1184741035177,-9.414760522146459e+307,1.7976931348623157e+308,-Infinity,-1000000000.0];
try {
    v53.length = 2n;
} catch(e54) {
    e54.b = e54;
}
