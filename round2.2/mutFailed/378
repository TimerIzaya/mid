const v0 = [-1.6548922225087532e+308,1000000000.0,841.6038489118705,-816.7972859323631,-3.0,-374.1483866349695,274763.0085904987,-1000000.0];
const v1 = [0.3329363965076393,2.2250738585072014e-308,0.9751153747526798,-1000000.0,0.8336195248968341];
const v2 = [-2.2250738585072014e-308,-1000000000000.0];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a5;
    } catch(e6) {
    }
}
new F3(v0);
new F3(v2);
const v9 = new F3(v0);
[1041717404,9,536870889,-7,5,-9007199254740992,-9429,5,9];
const v11 = [-691944330,9,-10,256,2081592589,1073741824,268435456,6];
const v12 = [9223372036854775807,-513432069,16,1073741824,-723353551,-12];
const v13 = /1wa\sc+/syi;
/EK/sui;
const v15 = /9w(ab|cde)/syi;
function f16(a17, a18) {
    const o33 = {
        "g": F3,
        "f": F3,
        "c": a18,
        __proto__: v15,
        "h": v1,
        [a17]: v13,
        p(a20, a21) {
            let v22 = 0;
            while (v22 < 2) {
                Math.cos(this ^ this);
                1073741825 && this;
                v22++;
            }
            return a21;
        },
    };
    return o33;
}
f16(v11, v2);
v9(v11, v1);
f16(v12, v11);
function f37() {
    return f37;
}
function F38(a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a40;
}
const v42 = new F38(f37, f37);
for (const v43 in v42) {
}
v9.toString = f37;
