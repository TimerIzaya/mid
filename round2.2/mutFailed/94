class C3 {
    constructor(a5, a6) {
        let v4 = this;
        try {
            v4 >>>= v4;
        } catch(e7) {
        }
    }
    [0.0];
    #d;
    static get g() {
        const v9 = super.g;
        for (let v10 = 0; v10 < 32; v10++) {
            const v12 = [];
            try { v12.with(v12, v10); } catch (e) {}
            const v14 = new C3();
            const v15 = new v14();
            let {...v16} = v15;
            const v17 = "p" + v10;
            "p" + v10;
            for (let v21 = 0; v21 < 5; v21++) {
                const v22 = new Float64Array(v21);
                Object.defineProperty(v22, "length", { writable: true, configurable: true, enumerable: true, value: v21 });
            }
            v9[v17] = v10;
        }
        return v9;
    }
}
const v23 = new C3(-1.0, 3.0);
const v24 = new C3(3.0, C3);
const v25 = new C3(0.0, v23);
class C26 {
    [-2];
    set b(a28) {
        let v29;
        try { v29 = a28(this, v25); } catch (e) {}
        try { v25.p(v29, -1.0, this, 0.0, v29); } catch (e) {}
        (!268435440 / v29--) & v29;
        Math.exp(v29);
        +v29;
    }
}
const v39 = new C26();
const v40 = new C26();
const v41 = new C26();
function f42(a43, a44, a45) {
    const o52 = {
        2: C26,
        set c(a47) {
            v24 >> this;
            try {
                v23[1937537386] = a44;
            } catch(e49) {
            }
            0.0 != 3.0 ? 0.0 : 3.0;
        },
        [C26]: v41,
        __proto__: v39,
        "h": a43,
    };
    return o52;
}
f42(3.0, v41, v24);
f42(3.0, v40, C26);
const v55 = f42(0.0, v41, v25);
const v56 = [-7,-28728,16];
function f58(a59) {
    const o60 = {
        [a59]: "65535",
    };
}
v25();
const v62 = [-6.769516358090053];
const v63 = v62.toLocaleString();
for (let v64 = 0; v64 < 5; v64++) {
    v62.length = v64;
}
const v65 = [536870912,7,-13,12,9,-373844588];
const v66 = [170750627,64,5];
for (let i68 = 0; i68 < 6; i68++) {
}
function F74(a76) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a76;
}
const o78 = {
    "execution": v63,
    "type": "minor",
};
const v79 = new F74(v65);
new F74(v66);
const v81 = new F74(v66);
5 / 5;
new Int8Array(v62, v62, Int8Array);
v56.e = Int8Array;
const v86 = v56.length;
v86[3] = v62;
try {
    v79.valueOf = v56;
} catch(e88) {
}
let v90 = ~-9223372036854775808n;
v90--;
function F92(a94, a95) {
    if (!new.target) { throw 'must be called with new'; }
}
const v96 = [-11,4294967297,536870887,268435456];
const v97 = F92 % v66;
try {
    v96.length = v97;
} catch(e98) {
}
try {
    class C100 {
    }
    const v101 = [-1.9051759137413093e+307,524838.8464725164,1.0];
    function F102(a104, a105) {
        if (!new.target) { throw 'must be called with new'; }
        const v106 = this?.constructor;
        try { new v106(a105, C100); } catch (e) {}
        a104 - a104;
        try {
            this.d = a104;
        } catch(e109) {
        }
        try {
            this.h = C100;
        } catch(e110) {
        }
        try {
            this.e = v79;
        } catch(e111) {
        }
    }
    F102.length;
    new F102(3852, v90);
    new F102(5, v81);
    new F102(v86, v56);
    const v118 = Reflect.construct(C100, [v101,v101,v101,v101]);
    const t140 = v118?.__lookupGetter__;
    new t140(v96);
    const v122 = Reflect.getPrototypeOf(v118, v118, v118, ...v101, Reflect)?.constructor;
    try { new v122(); } catch (e) {}
    Math.cos(-62183);
    const v128 = new Map();
    const v129 = [v128,v128,Map,Map,Map];
    [[v129,v128,v128,v129]];
    new Float32Array(3852);
} catch(e133) {
}
try {
    new Float64Array(8);
} catch(e137) {
    let v138 = 9007199254740992;
    v138++;
    const v140 = [1,17930,5,-9,-13,-726243331,6,65536];
    for (const v142 in [4294967297,-9007199254740992,1073741824,-13,-506158675,268435456,10000,0,4294967295]) {
        v140.length <<= v140.__proto__;
        class C144 {
        }
        new C144();
        function f146(a147, a148) {
            const o150 = {
                get e() {
                    super.e &= this;
                    return a148;
                },
                ...a147,
            };
            return o150;
        }
    }
}
function f151(a152, a153, a154) {
    const o159 = {
        set f(a156) {
        },
        ...v63,
        "type": v63,
        "execution": v63,
        set f(a158) {
        },
    };
    return o159;
}
const v160 = f151();
const v161 = v55(v160, f151, v160);
%OptimizeFunctionOnNextCall(f151);
const v162 = f151(f151, v161, v160);
v162.type = v162;
