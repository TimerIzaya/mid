function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    const v6 = this?.constructor;
    let v7;
    try { v7 = new v6(a5); } catch (e) {}
    if (v7) {
        [1073741824,10,13,9007199254740990];
        [4096,-14,-678686963,-9007199254740991,-2,1000];
        [-282476864,2083526231,4294967295,-45128,-128];
    } else {
        Object.defineProperty(this, "b", { writable: true, value: 50600 });
    }
    try {
        this.f = a5;
    } catch(e11) {
    }
    try {
        this.e = 50600;
    } catch(e12) {
    }
    try {
        this.b = 50600;
    } catch(e13) {
    }
}
const v14 = F3.arguments;
const v15 = new F3(6);
new F3(v15);
const v17 = new v15(6);
const v19 = new Date();
try {
    v17[0] = 10;
} catch(e25) {
}
!9n;
new v14(2, v14);
try { v19.getUTCFullYear(); } catch (e) {}
%VerifyType(v14);
v17 || 6;
2 << 2;
try { Date.parse(v14); } catch (e) {}
try {
    v17[10] = Date;
} catch(e35) {
}
Date.g = Uint16Array;
try { new Float32Array(Float32Array, Float32Array, Float32Array); } catch (e) {}
try { BigInt64Array(BigInt64Array, Date, Float64Array); } catch (e) {}
const v45 = /Pa\xf0\x9f\x92\xa9foo|(bar|baz)|quux(ab|cde)\1/vyi;
v45.b = v45;
