function f3() {
}
Math.log();
Math.asinh(20859);
class C8 {
    static set e(a10) {
        const v11 = a10 < a10;
        const v12 = v11 ? v11 : a10;
        try { new v12(1000000.0, v12, v11, 1000000000.0, v12); } catch (e) {}
    }
    static 64 = 0.0;
    static get f() {
        try {
            const o17 = {
                get f() {
                    return this;
                },
            };
            const o18 = {
            };
            o18[0] ||= 1000000.0;
            Object.defineProperty(this, 1, { writable: true, value: new.target });
            try {
                super.exp();
            } catch(e21) {
                function F22(a24, a25) {
                    if (!new.target) { throw 'must be called with new'; }
                }
                new F22();
                [-7n,[-7n,-7n,-7n,-7n]];
            }
            this.fuck(false, o18);
        } catch(e31) {
        }
        return this;
    }
}
const v32 = [];
const v33 = [v32,v32,v32,v32];
class C34 {
    #e = v32;
    constructor(a36) {
        function f37() {
            function f38(a39) {
                try { C8.asinh(a39, a36, C34); } catch (e) {}
                try {
                    Uint8Array(2122);
                } catch(e44) {
                }
                return a39;
            }
            return f38;
        }
        function f45(a46) {
            Object.defineProperty(v32, C34, { configurable: true, enumerable: true, set: f37 });
        }
        Object.defineProperty(a36, Symbol.toPrimitive, { configurable: true, get: f37, set: f45 });
        super[a36] = v33;
    }
}
const v49 = new C34(C34);
v49.toString = f3;
new C34(v49);
new C34();
class C52 {
}
C52.v48 = f3;
const v53 = new C52();
function F55(a57, a58, a59) {
    if (!new.target) { throw 'must be called with new'; }
}
const v60 = new F55(3, C52, 3);
with (C52) {
    d = 3;
    v53.__proto__ = v60;
    Symbol.match;
}
new C8();
const v64 = new C8();
v64[Symbol.toPrimitive] = f3;
new C8();
for (let v74 = 0; v74 < 10; v74++) {
    function f75(a76) {
    }
    class C77 extends C8 {
        static [v74];
        [v64];
        static set b(a79) {
        }
        p(a81, a82) {
            let [] = a81;
            /((((.).).).)/msyi;
        }
    }
}
