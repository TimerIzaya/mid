function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -10;
    } catch(e3) {
    }
    try {
        this.f = -10;
    } catch(e4) {
    }
    function F5() {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.f = 268435456;
        } catch(e8) {
        }
        try {
            this.c = 268435456;
        } catch(e9) {
        }
        try {
            this.h = 268435456;
        } catch(e10) {
        }
    }
}
new F0();
new F0();
const v13 = new F0();
new WeakSet();
const v16 = [63467,14443,-43322490,268435441];
const v17 = [-24842,-15,4,-14];
const v18 = [7,53163,257,4,4096,-9007199254740992,1073741824,2121037398,127,536870888];
class C19 extends WeakSet {
    static #d = v16;
    constructor(a21, a22) {
        super(v13);
        try { a21.toReversed(); } catch (e) {}
        this.e /= a22;
        delete v16?.length;
        Math.atanh(-7);
        (-7) ** -7;
        (-7 << 2147483648) & 2147483648;
    }
}
new C19(v16, v18);
new C19(v18, F0);
function f34(a35) {
    return a35;
}
function f36() {
    return f36;
}
class C37 extends f36 {
    static [f36];
}
new C19(v17, v17);
Math.pow(!(-451330.8617065976 * 20.900827738993712), 20.900827738993712);
