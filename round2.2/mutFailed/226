function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -29474;
    } catch(e3) {
    }
    try {
        this.c = -29474;
    } catch(e4) {
    }
}
new F0();
const v6 = new F0();
const v7 = new F0();
const v8 = /a{0}/msuyi;
const v9 = /(?!\1(a\1)\1)\1ta$?/msv;
const v11 = [F0,v8,/v/sduy,F0];
const v12 = [v11,v9,v11,v6];
[v12,v8];
class C14 {
    h = v11;
    #toString(a16, a17) {
        a16.flags;
        return v7;
    }
    e;
    0 = v6;
    static #f;
    get b() {
        v7[1] = super[v11];
        try {
            super.c = v12;
        } catch(e21) {
        }
        return F0;
    }
}
new C14();
new C14();
new C14();
function F25(a27) {
    if (!new.target) { throw 'must be called with new'; }
    const o28 = {
    };
    try {
        o28.b = this;
    } catch(e29) {
    }
    try {
        const o30 = {
        };
        o30.b = this;
        o30.a = this;
    } catch(e31) {
    }
    try {
        const o32 = {
        };
        o32.b = this;
        o32.a = this;
        o32.e = a27;
    } catch(e33) {
    }
    try {
        const o34 = {
        };
        o34.b = this;
        o34.a = this;
        o34.d = F25;
    } catch(e35) {
    }
}
class C36 extends F25 {
}
const v37 = new C36();
for (let v38 = 0; v38 < 25; v38++) {
    const v39 = v37.b;
    const v40 = v39;
    v40?.h;
    typeof v12[536870888] === "string";
    try { v39["toString"](); } catch (e) {}
}
