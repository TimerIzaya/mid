class C3 {
    static #m(a5) {
        try {
            this.h = 13;
        } catch(e6) {
        }
        return 13;
    }
    d = 13;
    g;
    14;
    1 = 45393;
}
C3.name = C3;
new C3();
new C3();
const v9 = new C3();
class C10 {
    #n(a12, a13, a14) {
        a14[v9] *= 45393;
        class C17 {
            static [13234];
            static 4;
            static 512 = 13234;
        }
        function f18(a19, a20, a21) {
            const o22 = {
                ...C17,
            };
        }
        try { a13(); } catch (e) {}
        return a13;
    }
    static #c = 13;
    static c = v9;
    #d = C3;
    [13];
    [C3];
}
C10.length;
const v26 = /(g)/gvyi;
const v27 = ("match")[1830038714];
for (const v28 in v26) {
    const v30 = new Set();
    Object.defineProperty(v30, "a", { writable: true, configurable: true, enumerable: true, value: v27() });
}
const v32 = new C10();
function F33() {
    if (!new.target) { throw 'must be called with new'; }
    const v35 = [-1722402122,743024026,4294967296,-10,6,-9007199254740991,-3,64,12];
    const v36 = [10,-52222,-165834406,699394532,-2147483649];
    for (const v38 in v35) {
        v36.length = 9;
    }
    try {
        this.d = -65536;
    } catch(e40) {
    }
    try {
        this.g = -65536;
    } catch(e41) {
    }
    try {
        this.e = -65536;
    } catch(e42) {
    }
}
const v43 = new F33();
new F33();
const v45 = new F33();
const v46 = [v43];
const v47 = [v45,F33,v43,v46];
const v48 = [v47,v47,v45,v43,v43];
const v54 = [v45,1073741824,v45,[[v43,51428,v47,v46,v46],v45]];
try {
    new F33();
} catch(e57) {
}
let v58;
try { v58 = v46.splice(...-13, v45, ...v48, ...v48, ...v54, -1366042045n); } catch (e) {}
("number")[-1];
class C62 {
    static {
        try {
        const t0 = "zx6g";
        t0(this);
        } catch (e) {}
    }
}
try {
    const v67 = [1073741824,,];
    function f68() {
        return f68;
    }
    Object.defineProperty([512,257,v67,Uint8ClampedArray], 3, { get: f68 });
    v46.__proto__ = v58;
} catch(e73) {
    const o75 = {
        ...1087439364,
    };
    const o77 = {
        4294967296: undefined,
    };
}
e = v46;
v32[13];
new C10();
new C10();
-5 * -5;
class C83 {
    constructor(a85, a86) {
        try {
            a85[4294967295] = a86;
        } catch(e87) {
            const v88 = e87?.constructor;
            function f89(a90) {
            }
            Float32Array(8);
            try { new v88(45393); } catch (e) {}
        }
    }
}
const v95 = new C83(-5);
v95.length;
