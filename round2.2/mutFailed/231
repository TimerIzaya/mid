try {
    new Int8Array(7);
} catch(e3) {
}
try {
    new Uint8Array(1);
} catch(e7) {
}
try {
    new Uint16Array(10);
} catch(e11) {
}
let v13 = -9.283294308656023;
class C16 {
    n(a18, a19, a20, a21) {
        try {
            this[a21] = -1554.8361872886308;
        } catch(e22) {
        }
        return Int8Array;
    }
    [v13] = -1554.8361872886308;
    static 3631474386 = Uint8Array;
    static #d;
    d = v13;
    static [Uint8Array];
    #h;
}
const v23 = new C16();
new C16();
let {"c":v25,"d":v26,"f":v27,} = v23;
try {
    v27 >>= v23;
} catch(e28) {
}
new C16();
const o31 = {
};
let v36 = 0;
do {
    v36++;
} while (v36 < 8)
new Uint16Array();
o31.toString();
const o52 = {
    "execution": "sync",
};
gc(o52);
delete undefined[5];
v26?.h;
try {
    v13 = BigUint64Array;
} catch(e57) {
}
