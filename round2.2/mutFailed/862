let v0 = [0.2164028950629021,1.0,-7.61193853455131,-1.0,-2.0,0.06569079027620206];
const v1 = [1000000000.0,2.2250738585072014e-308,1000000.0,5.3941139853593825,0.7111084628225556,0.6903036334731029,-4.820409442539113];
const v2 = [-0.0,-950.9154690088346,-472948.0406090376,669986.8846097172,-599.2092118032826,3.0,-1.2629054070160883,-0.0];
try {
    new Int8Array(1);
} catch(e6) {
}
let v9 = 0;
while (v9 < 3) {
    ({"length":v0,} = v0);
    v9++;
}
try {
    const v16 = new Uint8ClampedArray(64);
    if (v1 === v9) {
        try {
            v1[3] = v2;
        } catch(e18) {
        }
    } else {
        64 % v16;
        v16 % 1.0;
        1.0 + 1.0;
    }
} catch(e25) {
}
try {
    new BigInt64Array(16);
} catch(e29) {
}
class C30 extends Int8Array {
    static {
        /a{0,1}?/mvi;
        /ho[\ca]aj6/sdvi;
        /l*/msuy;
    }
    static d;
    10 = 1;
    static 1073741825 = BigInt64Array;
    static 3189123582;
    static #g;
}
const v35 = new C30();
v35[3965774876];
let {"b":v37,"e":v38,"length":v39,} = v2;
try {
    v1.f = v39;
} catch(e40) {
}
new C30();
new C30();
const v44 = [2147483647,-51611,41438,257,240493485,256,268435456,15];
Object.defineProperty(v44, 4, { enumerable: true, value: "setFloat32" });
for (let v45 = 0; v45 < 5; v45++) {
    delete v44[v45];
}
