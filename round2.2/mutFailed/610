const v2 = new Array(181);
function f3() {
    return v2;
}
[-10,2147483649,-509140806];
[1073741823,-1313557506,-842761591,-4294967296,2,4];
[-8,-2028129733,4294967296,-805376587,16,512];
function f13() {
}
const v14 = [-1,-9223372036854775807,10000,226876034,-2019549079,16199];
let v15 = [-65535,13];
for (let v16 = 0; v16 < 57; v16++) {
    ({"c":v16,"e":f13,"length":v15,} = v14);
}
const v17 = [676166339,12,129,9,-7,128,5,-1024,-2147483649,7];
try {
    new Function(242);
    const v29 = Symbol.size;
    const o37 = {
        [v29]() {
            let v31 = 10;
            const o36 = {
                o() {
                    v31--;
                    const o35 = {
                    };
                    return o35;
                },
            };
            return f13;
        },
    };
} catch(e38) {
}
try {
} catch(e39) {
}
const o40 = {
    "apply": Array,
    "defineProperty": f3,
    "getOwnPropertyDescriptor": f3,
    "getPrototypeOf": Array,
    "has": Array,
    "ownKeys": Array,
    "set": Array,
};
try {
    new Proxy(v14, o40);
} catch(e43) {
}
function f44() {
    try {
        v17[3799254340] = f44;
    } catch(e45) {
    }
    Array[3102];
    const o47 = {
    };
    return o47;
}
const v48 = Proxy();
const v49 = [-1.1001958026409064e+308,1.0,1000.0,-8.595874110189621,0.65085784464364,1000.0,719374.0663061251,0.0,NaN];
const v50 = [1000000000000.0,-1000000000.0,-761340.8901113225,5.0,0.6604209586114759,247.06468907365343];
const v52 = new Set();
let v53 = -1e-15;
v53--;
181 && v53;
class C56 {
    constructor(a58, a59, a60) {
        const v61 = this?.constructor;
        try { new v61(a58, this, v50); } catch (e) {}
        a58.g = f13;
        a60?.constructor;
        try { new a60(); } catch (e) {}
        try { a58.slice(1000000.0); } catch (e) {}
        try { a60.reduce(a60); } catch (e) {}
    }
}
new C56(v48, v15, v52);
new C56(v49);
