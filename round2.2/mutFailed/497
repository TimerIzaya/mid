const v0 = [];
class C1 {
    static #o() {
        f = this;
        this[8] = 11;
        v0[11];
        return v0;
    }
    static 39;
    #a;
    static 2147483648 = C1;
    [C1];
}
new C1();
new C1();
new C1();
3.0 >>> 3.0;
BigUint64Array.BYTES_PER_ELEMENT;
try {
    new BigUint64Array(5);
} catch(e18) {
}
const v20 = 1000 >>> 1000;
try {
    new Int32Array(1000);
} catch(e23) {
}
try {
    new Uint32Array(884);
} catch(e27) {
}
function f28() {
    let v29 = 268435441;
    const v30 = v29--;
    const o38 = {
        65537: v29,
        ...5,
        m(a34, a35) {
            let v36;
            try { v36 = a35(); } catch (e) {}
            return super[v36];
        },
        "c": -2.220446049250313e-16,
        "a": f28,
        __proto__: 3.0,
        "b": -2.220446049250313e-16,
        ...v29,
        /*
        __proto__: 1000,
        */
        "g": C1,
        "a": v29,
        "e": v30,
        "d": -2.220446049250313e-16,
    };
    C1[65537];
    return o38;
}
f28();
const v41 = f28();
const v42 = f28();
-v20;
-35140380 / -35140380;
~-4096;
-4096 + -4096;
function F50(a52, a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
    a53 & a53;
    a54 & a54;
    const v57 = F50?.constructor;
    v57.length = v57;
    try { new v57(f28, f28, v41); } catch (e) {}
    try {
        this.b = f28;
    } catch(e59) {
    }
    try {
        this.f = -4096;
    } catch(e60) {
    }
}
const v61 = new F50(v41, -2046010351, -35140380);
const v62 = v61?.constructor;
try { new v62(v42, C1, 1.7779584531239176e+308); } catch (e) {}
function f64() {
}
v41[-1000.0] = Uint8ClampedArray;
