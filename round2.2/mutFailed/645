[1000000000.0,0.11968906010713709,-299.8420363391092,-4.0,1.0,1000000000000.0,949870.4618653727,5.713773746337267,822076.0028518387,-1000000000000.0];
[0.41041579024480146,-1.7381079270067465e+308,-1.6468501205573063e+308,-1.474742309480853e+308,-1000000000000.0,-1.5959889515248165];
const v2 = [-1.792413506566388e+308];
class C6 {
    p(a8, a9, a10, a11) {
        const o14 = {
            "maxByteLength": 165,
        };
        const v16 = new ArrayBuffer(165, o14);
        try {
            new Float64Array(v16);
        } catch(e19) {
        }
        return 46027;
    }
}
const v20 = new C6();
const v21 = new C6();
const v22 = new C6();
class C23 extends C6 {
    static #a;
    static #d = 46027;
    b;
    constructor(a25, a26, a27, a28) {
        super();
        let v29;
        try { v29 = a25(46027, this, v2, a25, a25); } catch (e) {}
        a25[v29] **= 0;
        const o33 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o33);
    }
}
const v35 = new C23(0, v20, v22, v22);
const v36 = new C23(v35, v22, v35, v22);
new C23(v20, v22, v21, v36);
function F38() {
    if (!new.target) { throw 'must be called with new'; }
}
function f45() {
    return f45;
}
class C46 extends Float32Array {
    constructor(a48, a49, a50) {
        super(a50);
        a50[5] %= a48;
    }
}
const v51 = new C46(0, 0, f45);
new C46(236, 0, v51);
new C46(0, 5, C46);
new F38();
const v55 = new F38();
new F38();
try {
} catch(e65) {
}
try {
} catch(e68) {
}
try {
} catch(e71) {
}
delete v55.g;
try {
    /4a*?wj\1(a)(ab|cde)/gsu;
} catch(e77) {
}
