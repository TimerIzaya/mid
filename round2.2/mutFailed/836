try {
    new Uint16Array(3);
} catch(e3) {
}
try { new BigUint64Array(3, BigUint64Array, 128); } catch (e) {}
try {
    new BigUint64Array(128);
} catch(e8) {
}
const v11 = Uint32Array?.constructor;
try { new v11(Uint16Array); } catch (e) {}
try {
    const v13 = new Uint32Array(129);
    let v14 = v13[116];
    v14++;
} catch(e16) {
}
const v19 = -2147483649;
v19 >>> v19;
class C22 extends BigUint64Array {
    #d = 47295;
    static {
        this.prototype = this;
        const v24 = this.__proto__;
        v24.BYTES_PER_ELEMENT = v24;
        const v25 = v24.name;
        try { v25.bold(); } catch (e) {}
        for (let v27 = 0; v27 < 32; v27++) {
            v27 >> v27;
            "p" == "p";
            const v31 = "p" + v27;
            v31[1];
            this[v31] = v27;
        }
    }
    c;
}
const v33 = new C22();
const v34 = v33?.map;
try { v34.call(-8); } catch (e) {}
try { new v34(47295); } catch (e) {}
new C22();
new C22();
const v40 = 341.2286837230158 - 341.2286837230158;
v40 >>> v40;
[-4096,495677618,-9007199254740992,-8,-2147483648,-39708,60983];
class C43 {
    static set f(a45) {
        let v44 = this;
        super.h;
        v44 = a45;
    }
    g;
    static [341.2286837230158];
    static d;
    g;
    constructor(a48, a49) {
        341.2286837230158 in this;
    }
}
try { new C43(-8, -8); } catch (e) {}
try { new C43(Uint16Array, C22); } catch (e) {}
const v53 = new C43();
v53.g;
const v55 = new C43();
95 <= 95;
BigInt64Array.d = BigInt64Array;
let v61;
try { v61 = BigInt64Array.from(129); } catch (e) {}
try { v61.entries(); } catch (e) {}
new BigInt64Array(95);
128 <= 128;
const v67 = new BigInt64Array(128);
try { v67.findLastIndex(v55); } catch (e) {}
6 - 6;
class C73 extends BigUint64Array {
}
const v74 = new C73();
const v75 = v74?.constructor;
try { new v75(); } catch (e) {}
function f77(a78, a79) {
    let v80;
    try { v80 = new a78(55, a78, a78); } catch (e) {}
    try { v80.set(v80); } catch (e) {}
    return gc.apply();
}
f77(BigUint64Array, BigUint64Array);
class C85 extends f77 {
}
v74.subarray();
const o87 = {
    __proto__: C85,
};
o87.name;
try { o87.bind(); } catch (e) {}
