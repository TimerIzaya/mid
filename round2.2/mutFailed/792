class C3 {
    get g() {
        try {
            const t3 = "p";
            t3.__proto__ = this;
        } catch(e5) {
        }
        try {
            super.all("HPO", this);
        } catch(e7) {
        }
        return "0";
    }
}
new C3();
new C3();
const v10 = new C3();
function f11() {
    return v10;
}
f11.e = f11;
Float64Array.name;
try {
    const v18 = new Float64Array(1);
    const v19 = v18?.constructor;
    try { new v19("HPO", v18, v18); } catch (e) {}
} catch(e21) {
}
let v22 = 1199;
try {
    const v24 = new Int32Array(v22);
    v24[101] = v24;
} catch(e25) {
}
try {
    new BigUint64Array(14);
} catch(e29) {
}
function f30() {
    return 1;
}
try { f30(); } catch (e) {}
class C32 {
    static 3441497194 = BigUint64Array;
    b;
    #o(a34, a35, a36) {
        v22--;
        Reflect.construct(Int32Array, [this,a35], BigUint64Array);
        try {
            super.call(a35, a36);
        } catch(e42) {
        }
        return a34;
    }
}
C32[3441497194] = C32;
const v43 = new C32();
new C32();
new C32();
Int16Array.name;
try {
    new Int16Array(8);
} catch(e50) {
}
Uint16Array.length;
try {
    new Uint16Array(2389);
} catch(e55) {
}
try {
    new Uint32Array(5);
} catch(e59) {
}
const v61 = new WeakMap();
try { v61.delete(9007199254740991); } catch (e) {}
function f63(a64, a65, a66) {
    function f68(a69) {
        try {
            new Int32Array(this);
        } catch(e71) {
        }
    }
    this.onmessage = f68;
    new BigUint64Array(this, 8);
    try {
    } catch(e74) {
    }
}
f63.g = f63;
Worker.prototype;
const t89 = "function";
t89[1] = "function";
const v78 = [v22,v43,v43];
const o79 = {
    "arguments": v78,
    "type": "function",
};
o79.arguments = o79;
new Worker(f63, o79);
