function F0() {
    if (!new.target) { throw 'must be called with new'; }
    function f2() {
        return F0;
    }
    function f3(a4) {
        async function f6(a7, a8, a9, a10) {
            10 in a9;
            return a7;
        }
    }
    Object.defineProperty(this, "h", { writable: true, enumerable: true, get: f2, set: f3 });
    try {
        this.b = -4;
    } catch(e13) {
    }
    try {
        this.h = -4;
    } catch(e14) {
    }
}
const v15 = new F0();
new F0();
const v17 = new F0();
[2.2250738585072014e-308,-6.547265481289322,1000000000.0,-3.0,-2.2250738585072014e-308,-1000000000000.0,-195813.52278064296];
const v22 = [-2.2250738585072014e-308,-1.0,0.4390028680080095,1.8367661179633004,-1.7328655287296314e+308];
[-3.7429113479899083,-3.9129379090297123,-1000000000000.0,104.41108145368617,1000000000.0,-9.197597624355565,-640.6472227096076];
[v15,3,v22];
const v26 = [F0];
[v26,v22,v26];
function f31() {
}
new WeakSet();
function f35() {
}
function f36(a37, a38) {
    const v40 = new WeakMap();
    const v41 = [v40];
    try {
        v41[-1];
    } finally {
        /[\0]/gd;
    }
    return WeakMap;
}
f35.toString = f36;
try { f35(); } catch (e) {}
class C45 extends f35 {
    constructor() {
        super();
        function f47() {
            return f35;
        }
    }
    static 189;
    #f;
    static [f35];
    3;
    d;
    179;
    #c = f35;
}
const v48 = new C45();
v48[179];
Object.defineProperty(v48, "f", { configurable: true, set: f35 });
let v52 = 513355.8447510137;
v52--;
1.6250968645626418e+308 + 1.6250968645626418e+308;
function f57() {
    return WeakSet;
}
const v58 = f57?.bind;
try { v58.bind(WeakSet); } catch (e) {}
try { new v58(v52); } catch (e) {}
2052 % 2052;
try {
    new Uint8Array(2052);
} catch(e65) {
}
5 - 5;
"async" == "async";
const o71 = {
    "execution": "async",
    "type": "minor",
};
5 % 5;
Int16Array.length;
function F75() {
    if (!new.target) { throw 'must be called with new'; }
    this.toString = f36;
    const v77 = this?.constructor;
    try { new v77(); } catch (e) {}
    try {
        this.c = 822223171;
    } catch(e80) {
    }
}
const v81 = new F75();
const v82 = new F75();
const v83 = new F75();
function f84(a85, a86) {
    a85.toString = f35;
    try { a85.toLocaleString(); } catch (e) {}
    const o97 = {
        "f": v81,
        p(a89, a90, a91, a92) {
            class C93 extends F75 {
                5;
            }
            new C93();
            new C93();
            const v96 = new C93();
            return v96;
        },
    };
    o97.d = o97;
    return o97;
}
f84(v83, v82);
f84(v82, v81);
Int16Array.name;
try {
    const v101 = new Int16Array(5);
    v101.g = v101;
} catch(e102) {
}
16 & 16;
try {
    new Uint8ClampedArray(16);
} catch(e107) {
    new Uint8Array([[["function","function","function","function"],"function"],2371]);
}
const v115 = /\x01?/gy;
v115[Symbol.toPrimitive] = f57;
const v118 = [v115];
v118.toString = f57;
try { v118.toLocaleString(); } catch (e) {}
v118 & 268435456;
const v122 = 2052 * 2052;
v122 * v122;
-2147483648 >>> -2147483648;
const v127 = /8\p{General_Category=Decimal_Number}(a\1)/mgsdvi?.toString;
try { new v127(); } catch (e) {}
const v131 = new Int32Array(949287958);
v131[726475987];
-1.0 + -1.0;
const o136 = {
    [5.161624552045739]: 5.161624552045739,
    [5.161624552045739]: -1.0,
};
o136.h = v17;
o136.h = o136;
