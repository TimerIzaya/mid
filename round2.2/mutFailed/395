const v2 = Symbol.iterator;
const o4 = {
    [v2]() {
    },
};
try {
    new Uint16Array(128);
} catch(e7) {
}
function f8() {
    return f8;
}
const v10 = -Infinity;
class C11 {
    static #d = v10;
    get h() {
        this[6] = -1564488561;
        try {
            super.c = this;
        } catch(e13) {
        }
        return v10;
    }
    #g;
    #h = v10;
    #f;
    0;
    #b = -1564488561;
    2542;
}
const v14 = new C11();
class C15 {
    set d(a17) {
        [65535,-1024,268435456,-1,-65536,8,64,-1];
        const v19 = [536870889,-51104];
        [-4,2147483647,-9,168216825];
        %VerifyType(v19);
        try {
            v19.__proto__ = v19;
        } catch(e21) {
        }
    }
    static a = -1564488561;
    e;
    6;
    static #a;
    static [v14];
}
try {
    new Uint8Array(24);
} catch(e25) {
}
try {
    new Uint16Array(129);
} catch(e29) {
}
new WeakMap();
class C32 extends Uint8Array {
    static set d(a34) {
        const v36 = super.toSorted(this.g);
        v36 > v36;
    }
    [128] = 24;
    [Uint8Array] = WeakMap;
    static f;
}
for (let v41 = 0; v41 < 5; v41++) {
    v41 < 0;
}
try {
const t0 = "getMonth";
t0();
} catch (e) {}
const v48 = ("getMonth")[Symbol.iterator];
try { v48(11n, -2147483648n); } catch (e) {}
new C32();
new C32();
new C32();
let v56 = eval;
const v57 = v56("");
v56(v57);
v56 -= v57;
