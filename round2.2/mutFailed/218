const v0 = [-1000000000000.0,611076.5466650496,7.225434145608401e+307];
const v1 = [1000000.0,1.0570732122694388e+308,-7.882636195386299e+307,-1000000.0,-1e-15,-1.7976931348623157e+308,806868.605668813,310.86315929625766];
const v2 = [1000000000.0,-1000000000000.0,5.0,-2.0,-4.0,0.4888679560684377,1.7976931348623157e+308];
const v5 = v2 >= 527;
function f6() {
    return Float32Array;
}
const v7 = delete v1?.length;
Float32Array.prototype = Float32Array;
let v8;
try { v8 = new Float32Array(v2, v2, Float32Array); } catch (e) {}
try {
    new Float32Array(527);
} catch(e10) {
}
try {
    const v13 = new Float32Array(2);
    v13[1] = v13;
} catch(e14) {
}
Uint8ClampedArray.prototype = Uint8ClampedArray;
try {
    const v17 = new Uint8ClampedArray(1024);
    v17[375];
} catch(e19) {
}
class C20 {
    16 = v8;
    static #g = 2;
    #h = v5;
    static [v7] = v0;
    static 16 = Float32Array;
    m(a22, a23, a24) {
        +a24;
        const v26 = new Float32Array(2, a22, a22);
        try {
            new Uint8ClampedArray(a23, 2, 1959345117);
        } catch(e29) {
        }
        return v26;
    }
    static [1024] = Float32Array;
    static #h = Float32Array;
    [2];
}
let v30;
try { v30 = new C20(); } catch (e) {}
v30[2] = v30;
new C20();
new C20();
const v33 = new C20();
v33[2];
const v35 = [];
try {
    v35.__proto__ = v35;
} catch(e36) {
    try {
        new BigUint64Array(15);
    } catch(e40) {
    }
    try {
        new Uint16Array(2007);
    } catch(e44) {
    }
    try {
        new Float64Array(5);
    } catch(e48) {
    }
    e36.g = e36;
}
