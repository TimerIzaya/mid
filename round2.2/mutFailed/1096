const v0 = /[f(x)(x)(x)\3]/mgsdv;
const v1 = /\c_/mi;
const v2 = /H(a)/mvy;
[v1,v2];
[[v0]];
const v6 = [-2147483649,1628,365231273,65537,-2147483649,65537,2,1073741825,1244958633,536870888];
const v7 = [-7,-4,1073741825,321384353];
[-323565681,4294967297];
function f9() {
    return v2;
}
[-0.0,-1.7976931348623157e+308,-1000000.0,215706.88135075057,-0.0];
const v11 = [0.8246895394000368,-0.46536375157300824,-532931.6441136643,1000.0];
const v12 = v11.__proto__;
const o16 = {
    "execution": "async",
    "type": "minor",
};
gc(o16);
[-1000.0,-2.220446049250313e-16,561.7024898596185,0.5937720568070347,-1000000000000.0,-2.0,498085.9396730552,-54419.23176000337];
function f19() {
    return v0;
}
try {
    const v22 = [v6];
    [v22,v11,"async",v22];
    const v24 = [o16];
    const v26 = [];
    Reflect.apply(v7.toSorted, v24, v26);
    new Uint8Array(2);
} catch(e30) {
}
try {
    new Int8Array(4);
} catch(e34) {
}
2 === 2495 ? 2 : 2495;
%VerifyType(v12);
try {
    gc();
} catch(e39) {
}
try {
    new Uint8ClampedArray(2495);
} catch(e42) {
}
function f47(a48) {
    function f50(a51) {
        Reflect.construct(a48, [Reflect,Reflect,a51,Uint8ClampedArray], Uint32Array);
    }
    this.onmessage = f50;
    `n${this}undefined`;
}
const v58 = [1024];
const o59 = {
    "arguments": v58,
    "type": "function",
};
new Worker(f47, o59);
