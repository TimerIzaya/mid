const v0 = [];
class C1 {
    static [v0] = v0;
    1121083602;
    20 = v0;
    static #h;
    2147483648 = v0;
    #g;
    #f;
    [v0] = v0;
    #a;
    static f;
    #e;
}
const v2 = new C1();
const v3 = new C1();
const v4 = new C1();
function f5(a6, a7) {
    const o18 = {
        3131164112: v0,
        [a6]: v3,
        o(a9, a10, a11) {
            try {
                a10 = a6;
                const v12 = super[a9];
                try { a9(v12, a11, a10, v12); } catch (e) {}
                v3[-1] % v12;
                a7?.g;
            } catch(e17) {
            }
            return this;
        },
        "a": v2,
        __proto__: v2,
    };
    return o18;
}
let v19 = f5(v2, v4);
const v20 = f5(v19, v0);
const v21 = f5(v2, v20);
function f22(a23, a24, a25, a26) {
    const o31 = {
        get d() {
            super.c >>= a23;
            for (let v28 = 0; v28 < 32; v28++) {
                v2["p" + v28] = v28;
            }
            return this;
        },
        [a24]: v4,
        65536: a25,
    };
    return o31;
}
const v33 = f22(v2, v20, v21, f22(v3, v3, v19, v0));
const v34 = f22(f5, v2, v21, v2);
try {
    new Int16Array(126);
} catch(e38) {
}
try {
    new Uint16Array(403);
} catch(e42) {
    let v43;
    try { v43 = e42.o(v2, f22); } catch (e) {}
    let v44;
    try { v44 = v43(v43, v0, v2); } catch (e) {}
    let v45 = !v44;
    try {
        v45 **= v43;
    } catch(e46) {
    }
}
function f49() {
    try {
        f49 **= Uint16Array;
    } catch(e50) {
    }
    Math.log1p(f5);
    Math.imul(f5, f5);
    (-4294967295) ** 2147483648;
    Math.log2(2147483648);
    -4294967295 ^ v3;
    const o59 = {
    };
    return o59;
}
try {
    new Int16Array(129);
} catch(e61) {
}
class C62 extends Int16Array {
    n(a64, a65, a66) {
        super.slice(126, 403);
        return this[Symbol.replace];
    }
    #g = 403;
    constructor(a72, a73, a74, a75) {
        super(126, a73, a72);
        let v76;
        try { v76 = this.subarray(a74, 129); } catch (e) {}
        const v77 = delete this?.byteLength;
        try {
            v76.toString = v77;
            try {
                v19.toString = f49;
            } catch(e78) {
            }
            const v80 = Symbol.iterator;
            const o89 = {
                [v80]() {
                    let v82 = 10;
                    const o88 = {
                        next() {
                            v82--;
                            const v86 = v82 == 0;
                            const o87 = {
                                "done": v86,
                                "value": v82,
                            };
                            return o87;
                        },
                    };
                    return o88;
                },
            };
        } catch(e90) {
        }
    }
}
const v91 = new C62(129, 129, 126, 403);
let v92 = new C62(129, 403, 126, 129);
let v93 = new C62(126, 129, 403, 403);
const v94 = [1717804318,2147483649,271900802,1901566192,-536870912,-25703];
const v95 = [-14,913866214,-65537,1073741825,2147483647,10000,-4294967297,4294967297,-65536,65537];
[32903393,536870889,-64982,10,-9783,7,10,-4,-5];
[-2.0];
[1000.0,727.6267580273732,-1000000.0,-4.524552355079856];
const v99 = [352.8316382959554,3.8347420577607334,1000000000.0,1e-15,-1000000000000.0,450.1070303237241,0.7457642511667586,-1000.0];
const v100 = v94 * 129;
function f101() {
    return v91;
}
const v102 = 126 | v94;
f5(126, v33);
v34[Int16Array] ^= v100;
v19[v102] *= v102;
try {
    v19 /= C62;
} catch(e104) {
}
try {
    v93 <<= v93;
} catch(e105) {
}
++v92;
Math.atanh(v92);
Math.fround(v92);
const v111 = ++v92;
Math.acos(v111);
const v113 = 16811 | v111;
for (let [...v114] of v95) {
    v114.a >>>= v114;
    try {
        v99.valueOf = f5;
    } catch(e115) {
    }
}
-v113;
