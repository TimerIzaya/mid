const v0 = [1000000000.0,0.11968906010713709,-299.8420363391092,-4.0,1.0,1000000000000.0,949870.4618653727,5.713773746337267,822076.0028518387,-1000000000000.0];
[0.41041579024480146,-1.7381079270067465e+308,-1.6468501205573063e+308,-1.474742309480853e+308,-1000000000000.0,-1.5959889515248165];
const v2 = [-1.792413506566388e+308];
class C6 {
    p(a8, a9, a10, a11) {
        try { v0.unshift(this, C6, a11, 0, this); } catch (e) {}
        try { new C6(a11, -1427019235, a9); } catch (e) {}
        const o20 = {
            "maxByteLength": 165,
        };
        const v22 = new ArrayBuffer(165, o20);
        try {
            new Float64Array(v22);
        } catch(e25) {
        }
        return 46027;
    }
}
const v26 = new C6();
const v27 = new C6();
const v28 = new C6();
class C29 extends C6 {
    static #a;
    static #d = 46027;
    b;
    constructor(a31, a32, a33, a34) {
        super();
        let v35;
        try { v35 = a31(46027, this, v2, a31, a31); } catch (e) {}
        a31[v35] **= 0;
        const o39 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o39);
    }
}
const v41 = new C29(0, v26, v28, v28);
const v42 = new C29(v41, v28, v41, v28);
new C29(v26, v28, v27, v42);
function F44() {
    if (!new.target) { throw 'must be called with new'; }
}
new F44();
const v48 = new F44();
new F44();
try {
} catch(e58) {
}
try {
} catch(e61) {
}
try {
} catch(e64) {
}
delete v48.g;
try {
    /4a*?wj\1(a)(ab|cde)/gsu;
} catch(e70) {
}
