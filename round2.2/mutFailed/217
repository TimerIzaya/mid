const v1 = new Map();
const v5 = [268435439,14,391926311];
const v6 = [1073741824,9,536870888,268435440,65537,65120];
function f7(a8, a9) {
    function f10(a11) {
        return a11;
    }
    return f10;
}
v6.valueOf = f7;
const v12 = [1073741823,268435440,6,256,536870912,9223372036854775807,-11,-7,8];
class C13 {
    #f = v1;
    constructor(a15, a16, a17, a18) {
        a15 - a15;
        a17[0] = a17;
        function f20() {
            return -14438n;
        }
        const o21 = {
        };
        try {
            o21.c = v6;
        } catch(e22) {
        }
        try {
            const o23 = {
            };
            o23.h = o23;
            o23.c = v6;
            try {
                v6.#f *= this;
            } catch(e24) {
                e24.message;
            }
            v6 << 856054321n;
            o23.e = a17;
        } catch(e27) {
        }
        try {
            const o28 = {
            };
            o28.h = o28;
            o28.c = v6;
            o28.e = a17;
            o28.b = this;
        } catch(e29) {
        }
        try {
            const o30 = {
            };
            o30.c = o30;
            o30.c = v6;
            o30.e = a17;
            o30.b = a15;
        } catch(e31) {
        }
    }
}
const v32 = new C13(-14438n, v6, v12, -4294967295n);
const v33 = new C13(-4294967295n, v32, v6, 856054321n);
v33[0] = v12;
const v34 = new C13(-14438n, v32, v33, -4294967295n);
const v35 = v34?.__defineGetter__;
try { new v35(v33, C13); } catch (e) {}
const v37 = [v5,v12];
try { v37.entries(); } catch (e) {}
const v39 = [v32,v37,v12,v6,v6];
v39[4];
[v39,v6,C13,v32];
const v42 = /foo(?=bar)baz/dv;
const v43 = /DGa??[9u]/msdyi;
const v44 = /([xyz])/sdui;
7 | 7;
function f49() {
    return v43;
}
const v52 = new Array(4);
class C53 extends f49 {
    static #p(a55, a56, a57, a58) {
        try {
            f49();
        } catch(e60) {
        }
        return 43607;
    }
    static a;
    toString(a62, a63) {
        if (43607 > a62) {
            try { a63.test(Array); } catch (e) {}
        } else {
            try {
                a63.exec("flags");
            } catch(e68) {
                for (let v69 = 0; v69 < 100; v69++) {
                    f49();
                }
                super.compile(C53);
                this[7] = Map;
            }
        }
        return a63;
    }
}
C53.g = C53;
const v72 = new C53();
v72.b = 31819;
v72.hasIndices = v72;
const v73 = new C53();
v73.b = v73;
const v74 = new C53();
let v75;
try { v75 = v74.compile(v74, C13); } catch (e) {}
function f76(a77, a78) {
    Object.defineProperty(a77, "e", { enumerable: true, value: a78 });
    a78.e = a78;
    const o88 = {
        __proto__: C53,
        "g": v44,
        m(a80, a81, a82, a83) {
            v72[3325212449] &= 31819;
            try {
                a77.__proto__ = v42;
                for (let v84 = 0; v84 < 79; v84++) {
                    this >>> v39;
                    try {
                        a83 = Map;
                    } catch(e86) {
                    }
                }
            } catch(e87) {
            }
            return a81;
        },
        1: a77,
        "e": a77,
        "c": a77,
        "a": v43,
        "f": a77,
    };
    return o88;
}
f76.e = 7;
f76.prototype;
f76(v72, f76)[1];
f76(v43, C53);
f76(v44, C53);
let v94 = 0;
while (v94 < 9) {
    const o97 = {
        "arguments": v39,
        "f": v75,
        "defineProperty": f49,
        "deleteProperty": f76,
        "get": f76,
        "getOwnPropertyDescriptor": Array,
        "isExtensible": f49,
        "setPrototypeOf": Array,
    };
    function f98() {
        return v6;
    }
    function f99(a100) {
        try { a100(a100); } catch (e) {}
    }
    Object.defineProperty(o97, "e", { configurable: true, enumerable: true, get: f98, set: f99 });
    const v102 = o97?.deleteProperty;
    try { new v102(o97, o97); } catch (e) {}
    ([5,38477,-9007199254740991,-1,256]).pop();
    try {
        Proxy();
    } catch(e109) {
    }
    try {
        new Proxy(v52, o97);
    } catch(e111) {
    }
    v94++;
}
