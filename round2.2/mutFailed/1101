class C3 {
    n(a5, a6) {
        a6 - a6;
        const v8 = this[253];
        v8?.[v8];
        return v8;
    }
    constructor(a11, a12) {
        var a = 1073741823n;
        try {
            this.d = a11;
        } catch(e13) {
        }
    }
}
const v14 = new C3(1713629354n, 1073741823n);
const v17 = v14 / 1713629354n;
Math.max(v14);
1713629354n / v17;
new C3(1713629354n, 1713629354n);
new C3(1713629354n, -12n);
try {
    new Int8Array(1000);
} catch(e25) {
}
try {
    new Int16Array(24);
} catch(e29) {
}
try {
    new Uint16Array(1);
} catch(e33) {
}
for (let v35 = 0; v35 < 5; v35++) {
    v35 < 2;
    if (0 != "minor") {
        try {
            new Int8Array(-25865);
        } catch(e46) {
        }
    } else {
    }
    const o51 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o51);
    v35++;
}
1713629354n | -0.0;
~C3 && 1713629354n;
Math.cbrt(C3);
-3517 * 1713629354n;
