let v0 = -47969n;
function f3(a4, a5, a6, a7) {
    arguments[64];
    return a6;
}
class C11 {
    3911535748;
    static {
        try {
            v0 |= -9223372036854775808n;
        } catch(e13) {
        }
    }
    static #e = v0;
    [-9223372036854775808n];
    179;
    409785783;
    4294967295;
    set e(a15) {
        try {
            super.cbrt();
        } catch(e17) {
        }
    }
    static #p(a19, a20) {
        let {"a":v21,"b":v22,...v23} = this;
        try {
            v22.#e;
        } catch(e25) {
            const v28 = new a19();
            const t30 = "Em";
            t30[v28] += 9;
        }
        return v23;
    }
}
function f30() {
    const o31 = {
    };
    ("1869940897").replace;
    function f35(a36, a37) {
        const o40 = {
            [-1.0](a39) {
            },
            [a37]: a37,
            1024: a37,
        };
        return o31;
    }
    return o31;
}
f30();
f30();
const v43 = new C11();
const v44 = new C11();
new v43();
const v50 = v44[7];
new Map();
new Map();
const v57 = [65536,-1386934305,0,1038220152,1000];
const v58 = [2118634892,0,-1186219978,7,-7705,44779,2,36070,65537,12];
const v59 = [-256,-1127405330,4294967297,1,-1,2147483648];
function F60(a62, a63, a64) {
    if (!new.target) { throw 'must be called with new'; }
}
const v65 = new F60();
v65[536870889] &&= v59;
function f67(a68, a69, a70, a71) {
    const o76 = {
        "d": a70,
        [a69](a73, a74, a75) {
        },
    };
    return o76;
}
1472041967 ^ !f67(v58, f67, v58, f67(v57, v58, 1472041967));
[2147483649];
[-2147483647,5,1073741825,-60486,4294967296,-1073741824,4096,-2147483647,-1294112728,-9223372036854775808];
function f83(a84, a85, a86) {
    const o87 = {
    };
    return o87;
}
for (const v89 in f83()) {
}
[536870887,268435441,672010370,-536870912,-4,1058113868,2147483647,-11896];
function F91() {
    if (!new.target) { throw 'must be called with new'; }
    Math.expm1(+-1073741824);
    function f99() {
        return v50;
    }
}
new F91();
new F91();
const v102 = new F91();
[757.5772170166554,-433076.5098646643,2.0,-1000000.0,830204.0178039675,0.6364887197842011,1000.0,-232643.88317577157,0.48315539648647576];
function f105() {
    -2.220446049250313e-16 * -2.220446049250313e-16;
    const o115 = {
        65537: 268435441,
        ...15,
        m(a111, a112) {
            try { f105(); } catch (e) {}
            super[v102];
            return -2.220446049250313e-16;
        },
        "c": -2.220446049250313e-16,
        "a": f105,
        __proto__: -2.220446049250313e-16,
        "b": -2.220446049250313e-16,
        ...15,
        /*
        __proto__: 268435441,
        */
        "g": -2.220446049250313e-16,
        "a": 268435441,
        "e": 268435441,
        "d": -2.220446049250313e-16,
    };
    return o115;
}
const v116 = f105();
function F118(a120, a121, a122) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.isPrototypeOf(-35140380); } catch (e) {}
    a121 << a121;
    -a122;
    const v126 = this?.constructor;
    try { new v126(f83, f105, v116); } catch (e) {}
    try {
        this.b = f105;
    } catch(e128) {
    }
    try {
        new Int16Array(4096);
    } catch(e132) {
    }
    try {
        new Uint16Array(256);
    } catch(e136) {
    }
    try {
        new Uint32Array(179);
    } catch(e140) {
    }
    try {
        this.f = 64;
    } catch(e141) {
    }
}
("-1344988452").toUpperCase();
const v143 = async (a144, a145, a146, a147) => {
    return a144;
};
[Infinity,1.1617990056877035e+308,-2.0,2.2250738585072014e-308,-2.220446049250313e-16];
for (let v149 = 0; v149 < 32; v149++) {
    const v151 = "p" + v149;
    v102[v151] = v151;
}
[268435441,4,6,4294967296,44218];
