const v0 = /u[-\xf0\x9f\x92\xa9]+6n/gsdy;
const v1 = /(?:ab)|cde/gdu;
const v2 = /^xyz{1,}?/gsuy;
function f3() {
    try { v2.test(v2); } catch (e) {}
    try {
    } catch(e5) {
    }
    return v2;
}
v2.toString = f3;
function f6(a7, a8) {
    function f9(a10, a11) {
        new Set([-6,22324,-9018,-1989873926,2147483648,-37294297,-11,-1525610275,5,-4]);
        return Set;
    }
    a7[Symbol.toPrimitive] = f9;
    a8.dotAll = v2;
    a7.h = a7;
    a8.dotAll = a8;
    const o29 = {
        [v2]: v1,
        valueOf(a18, a19) {
            a18.valueOf = f6;
            function f20(a21, a22, a23, a24) {
                this > a19 ? this : a19;
                try {
                    a8 &= a8;
                } catch(e27) {
                }
                return a18;
            }
            return f20(a7, a7, a7, a18);
        },
    };
    function f30() {
        function f31(a32) {
            v2 === f9;
            function f34() {
            }
            class C35 {
                set c(a37) {
                    let v38 = g;
                    try {
                        v38 = a37;
                    } catch(e39) {
                    }
                }
                static 3434762103 = f34;
                [f34] = f34;
                3;
                static e = f34;
                static 2097426201;
                #c = f34;
                d;
            }
            function f40() {
                return C35;
            }
            const v41 = f40.caller;
            try { v41(); } catch (e) {}
            return f6;
        }
        return f31;
    }
    Object.defineProperty(o29, Symbol.toPrimitive, { configurable: true, enumerable: true, get: f30 });
    return o29;
}
f6.dotAll = v2;
const v45 = f6(v2, v0);
try { v45.valueOf(v0, v45); } catch (e) {}
f6(v2, v45);
const v48 = f6(v2, f6);
const v49 = [v45,v48,v48];
const v50 = [v49,v0];
const v51 = [v0,v50,v50,f6];
9007199254740992 * 9007199254740992;
let v54 = -923318812;
v54--;
[v0,v50,v2];
[v1,9007199254740992,f6,v54,v1];
[v51,f6,-7,v49];
let v60 = 1000;
v60++;
const v63 = new BigUint64Array(v60);
v63.reverse();
const v65 = [v60];
const v66 = [-4.0,1.0,-1.7976931348623157e+308,0.6175352379554376,218339.60799626866];
const v68 = [v60,v60,v60];
const v70 = new Map();
function f71(a72, a73, a74) {
    a74[1] = a73;
    a72.d = a72;
    a74[1] = a74;
    a74[0] = a74;
    try { a74.map(v66); } catch (e) {}
    a74.name = a74;
    const o82 = {
        ...v68,
        5: 5n,
        __proto__: v70,
        "g": 5n,
        toString(a77, a78, a79) {
            super.d;
            return a73 & a72;
        },
    };
    o82.map = a73;
    const v83 = o82[5];
    v83 * v83;
    const v85 = v83 | v83;
    v85 * v85;
    o82[5] = o82;
    return o82;
}
f71(f71, v65, v68)[5];
const v89 = f71(5n, f71, Map);
v89.map = Map;
v89[2] = v89;
%PrepareFunctionForOptimization(f71);
f71(f71, v68, v89);
%OptimizeFunctionOnNextCall(f71);
f71(5n, 5n, Map);
