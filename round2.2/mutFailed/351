function f1() {
    const o14 = {
        "d": true,
        [true]: true,
        p() {
            let v3;
            try { v3 = new this(); } catch (e) {}
            const v7 = 4.883388882183128e+307 ** v3;
            const v8 = -2147483648 - true;
            Math.round(-2147483648);
            Math.abs(v7);
            let v11 = +-2147483648;
            Math.atan2(v8, true);
            return ++v11;
        },
    };
    return o14;
}
f1();
f1();
const v17 = f1();
try {
    new Int32Array(1);
} catch(e21) {
}
128 - 128;
try {
    const v25 = new Uint16Array(128);
    try { v25.slice(v25, f1); } catch (e) {}
} catch(e27) {
}
for (let v30 = 0; v30 < 5; v30++) {
    v30--;
    const v32 = new Float64Array(v30);
    Object.defineProperty(v32, "length", { writable: true, configurable: true, enumerable: true, value: v30 });
}
try {
    v17.d = true;
} catch(e33) {
}
try {
    const v38 = new Uint16Array(499);
    v38[30] = v38;
} catch(e39) {
    function f40(a41) {
        return f40;
    }
    -2.0 instanceof Float64Array;
}
class C46 extends BigInt64Array {
}
const v47 = new C46();
v47["lastIndexOf"]();
