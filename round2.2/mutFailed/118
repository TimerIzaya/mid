try {
    new Int8Array(10);
} catch(e3) {
}
try {
    new Uint16Array(2400);
} catch(e7) {
}
try {
    new Uint16Array(255);
} catch(e11) {
}
try {
    const v14 = new BigInt64Array(257);
    try { v14.reduce(10); } catch (e) {}
} catch(e16) {
}
try {
    new Float64Array(6);
} catch(e20) {
}
try {
    new Int16Array(64);
} catch(e24) {
}
1554 - 1554;
try {
    const v28 = new Uint8ClampedArray(1554);
    try { v28.toSorted(64); } catch (e) {}
} catch(e30) {
}
Float64Array.name = Float64Array;
try {
    new Float64Array(64);
} catch(e34) {
}
2 - 2;
function f38(a39) {
}
const t39 = 1554;
const v40 = new t39();
for (const v42 in v40) {
    for (const v43 of "a") {
    }
}
try {
    new Int16Array(2);
} catch(e45) {
}
class C48 {
    static {
        try { this.o(this, this); } catch (e) {}
    }
}
43427 - 43427;
try { BigUint64Array.from(255); } catch (e) {}
15 - 15;
try { BigInt64Array.from(BigInt64Array); } catch (e) {}
/((?=.)(a{0}[^a\n]))/msvi;
