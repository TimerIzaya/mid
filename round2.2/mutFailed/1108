class C3 {
    #d;
    e = "3";
    n(a5) {
        try {
            super[this] = "-10";
        } catch(e6) {
        }
        try {
            this.#d &= this;
        } catch(e7) {
        }
        return "-10";
    }
}
const v8 = new C3();
new C3();
new C3();
class C12 extends C3 {
    #toString(a14, a15, a16, a17) {
        const v18 = v8.h;
        try {
            C3[-2] = v18;
        } catch(e19) {
        }
        return "-10";
    }
    c = v8;
    static 9;
}
new C12();
new C12();
new C12();
try {
    new Int16Array(-4294967295);
} catch(e26) {
}
try {
    new Uint16Array(403);
} catch(e30) {
}
try {
    new Int16Array(129);
} catch(e34) {
}
class C35 extends Int16Array {
    n(a37, a38, a39) {
        super.slice(-4294967295, 403);
        return this[Symbol.replace];
    }
    #g = 403;
    constructor(a45, a46, a47, a48) {
        super(-4294967295, a46, a45);
        let v49;
        try { v49 = this.subarray(a47, 129); } catch (e) {}
        const v50 = delete this?.byteLength;
        try {
            v49.b = v50;
        } catch(e51) {
        }
    }
}
const v52 = new C35(129, 129, -4294967295, 403);
let v53 = new C35(129, 403, -4294967295, 129);
let v54 = new C35(-4294967295, 129, 403, 403);
const v55 = [1717804318,2147483649,271900802,1901566192,-536870912,-25703];
[-14,913866214,-65537,1073741825,2147483647,10000,-4294967297,4294967297,-65536,65537];
[32903393,536870889,-64982,10,-9783,7,10,-4,-5];
[0.5012128245013949,4.0,-2.220446049250313e-16,5.0,6.374104633436982];
[1000.0,727.6267580273732,-1000000.0,-4.524552355079856];
[352.8316382959554,3.8347420577607334,1000000000.0,1e-15,-1000000000000.0,450.1070303237241,0.7457642511667586,-1000.0];
v55 * 129;
function f62() {
    return v52;
}
-4294967295 | v55;
try {
    v54 <<= v54;
} catch(e64) {
}
++v53;
Math.atanh(v53);
Math.fround(v53);
const v70 = ++v53;
Math.acos(v70);
-(16811 | v70);
