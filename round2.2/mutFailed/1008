const v1 = new Date();
const v2 = [-839944.4576305395,1000000000.0,1.7976931348623157e+308,-0.0,1000000000.0,-1000000000.0,-2.0,0.4047521797644045,0.0566382786579791];
const v3 = [132803.4716193315,-898.8906964969243,1.7976931348623157e+308,2.0,7.144150507940937e+307,4.0];
try { v3.group(v3); } catch (e) {}
const v5 = [7.787624035170537e+307,-4.0,-0.0];
v5.toString = Date;
const v6 = [v1];
const v7 = [v6,v6,v6,v6,v6];
v7.toString = Date;
const v8 = [v3,v7,v5];
class C9 extends v1 {
    static 1236978192 = v1;
    static #c = v2;
    constructor(a11, a12, a13, a14) {
        super(v8);
        const v15 = this.__proto__;
        try { v15.setDate(v15); } catch (e) {}
        try { v15(); } catch (e) {}
    }
    e;
    set a(a19) {
        [-2.0,1.0];
        [0.0,-5.373658545239229e+307,0.6265565520517817];
        [Infinity,0.005272352746069853,-650043.3602475];
    }
    static b;
}
new C9(v6, v2, v7, v6);
const v24 = new C9(v5, v5, v6, v5);
function f25(a26) {
    function f27(a28, a29, a30) {
        class C32 {
        }
        const t33 = "2147483647";
        let v33 = new t33();
        return v33 ^= "2147483647";
    }
    f27(f27, f27, f27);
    return v3;
}
v24.toString = f25;
try { v24.getSeconds(); } catch (e) {}
new C9(v6, v8, v2, v5);
try { Date.toUTCString(); } catch (e) {}
class C42 {
}
try { new C42(); } catch (e) {}
function F44(a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.constructor(a47, a47); } catch (e) {}
    try { new a46(); } catch (e) {}
    const v50 = a46.constructor;
    try { new C9(v24); } catch (e) {}
    try { v50(-4, a46); } catch (e) {}
}
new F44(C42);
