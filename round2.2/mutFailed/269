const v3 = [-2n,1073741825n,-2n,-2n,1073741825n];
([-2n,v3,v3,-2n])[1];
const v6 = [-2n,1073741825n,-3693n,1073741825n];
try { v6.pop(); } catch (e) {}
function f10(a11) {
    return 1073741825n;
}
Float32Array.valueOf = f10;
const v16 = ~Float32Array;
const v17 = Math.asin(v16);
v17 >>> v17;
class C19 {
}
try { BigUint64Array.from(v16); } catch (e) {}
try {
    new BigUint64Array(13);
    for (let i24 = 0; i24 < 1; i24++) {
    }
} catch(e30) {
}
const v32 = 0 / 0;
try {
    class C35 extends Uint32Array {
    }
    new C35();
    const v37 = [1e-15,-5.0,-1000000000000.0,-5.972686936111036e+307,-1.275814996674151e+308];
    v37.unshift(v37, undefined);
    new Int8Array(0);
} catch(e41) {
}
536870889n > 536870889n;
536870889n << 536870889n;
const v49 = ("JSPWa")["matchAll"]();
const v50 = v49?.next;
try { new v50(); } catch (e) {}
class C52 {
    static #h = v49;
}
class C56 {
    constructor(a58, a59) {
        let v57 = this;
        try {
            v57 >>>= v57;
        } catch(e60) {
        }
    }
    [0.0];
    #d;
    static get g() {
        const v62 = super.g;
        for (let v63 = 0; v63 < 32; v63++) {
            const v65 = [];
            try { v65.with(v65, v65); } catch (e) {}
            const v67 = new C56();
            const v68 = new v67();
            let {...v69} = v68;
            const v70 = "p" + v63;
            "p" + v63;
            for (let v74 = 0; v74 < 5; v74++) {
                const v75 = new Float64Array(v74);
                Object.defineProperty(v75, "length", { writable: true, configurable: true, enumerable: true, value: v74 });
            }
            v62[v70] = v63;
        }
        return v62;
    }
}
const v76 = new C56(-1.0, 3.0);
const v77 = new C56(0.0, v76);
Object.defineProperty(v77, "p", { writable: true, configurable: true, enumerable: true, value: f10 });
let v78;
try { v78 = v32("matchAll", v77); } catch (e) {}
try { v77.p(v78, -1.0, "matchAll", 0.0, v78); } catch (e) {}
0.0 != 3.0 ? 0.0 : 3.0;
try { C52.bind(v3); } catch (e) {}
try {
    gc.d = gc;
    const v84 = gc();
    for (let v85 = 0; v85 < 25; v85++) {
        v84["p" + v85] = v85;
    }
    new Uint16Array(5);
    const o90 = {
    };
    o90.type = -21916n;
    function f91() {
        function f92() {
            return f92;
        }
        function f93() {
            const o94 = {
                ...f92,
                __proto__: f92,
            };
            return o94;
        }
        f93();
        f93();
        return f91;
    }
    const v97 = /Fa(?=bbb|bb)c/msdu;
    class C98 {
        static {
            Math.asin(this);
        }
    }
    v97[Symbol.iterator] = f91;
} catch(e104) {
    e104.stack;
}
const v106 = [6.215264509048341e+307,0.4455972226583942,1.0,1000000000.0,0.2355160100422543];
try { v106.group(v106); } catch (e) {}
const v108 = [-1000000.0,1.0,-1000000000.0,-463.6918735848219,1000000000000.0,-4.13933717725204,5.823580571769699e+307,-175.32422780224488,NaN];
class C109 {
    static 5 = v108;
    static 167;
    static c;
    static f = v106;
    static e = v108;
}
C109[167];
[-1,-1567147178,64,-3];
const v112 = [257,44826,2147483647,13,1073741823,-65537,-1073741824,-9007199254740990,536870912,9007199254740991];
function f113(a114, a115) {
    const v120 = -2.0 >> a115;
    const v121 = Math.trunc(-10);
    a115 - -10;
    -10 >> v120;
    return v121;
}
v112.toString = f113;
try { v112.toString(); } catch (e) {}
const v126 = [Reflect];
const v127 = v126.toLocaleString;
try { v127(); } catch (e) {}
Reflect.apply(v127, v112, v126);
