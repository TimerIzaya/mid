function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -29474;
    } catch(e3) {
    }
    try {
        this.c = -29474;
    } catch(e4) {
    }
}
new F0();
const v6 = new F0();
const v7 = new F0();
const v8 = /a{0}/msuyi;
const v9 = /(?!\1(a\1)\1)\1ta$?/msv;
const v10 = /v/sduy;
const v11 = [F0,v8,v10,F0];
[[v11,v9,v11,v6],v8];
class C14 {
    h = v10;
    0 = v6;
    static #f;
    get b() {
        const v16 = super[v9];
        v7[1] = v16;
        try {
            super.c = v16;
        } catch(e17) {
        }
        return F0;
    }
}
new C14();
new C14();
new v10();
function F21(a23) {
    if (!new.target) { throw 'must be called with new'; }
}
class C24 extends F21 {
}
const v25 = new C24();
for (let v26 = 0; v26 < 25; v26++) {
    const v27 = v25.b;
    try { v27["toString"](); } catch (e) {}
}
