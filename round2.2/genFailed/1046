try {
    new BigUint64Array(64);
} catch(e6) {
}
try {
    new Float32Array(5);
} catch(e10) {
}
try {
    new Int8Array(6);
} catch(e14) {
}
function f15(a16, a17, a18) {
    const o23 = {
        ...a17,
        [Float32Array]: 64,
        "d": a16,
        "b": Float32Array,
        get h() {
            const v20 = a17?.e;
            v20[3799666241] *= v20;
            let {"c":v21,"g":v22,} = a17;
            return 6;
        },
        ...a17,
        "f": a18,
        ...a17,
        [a17]: a17,
    };
    return o23;
}
const v25 = f15(64, f15(-65536, 5, -5), 6);
f15(-5, BigUint64Array, 5);
const v33 = v25 * 1000000000.0;
let v34 = -1534956572 && 536870889;
536870889 & v34;
v25 * v33;
++v34;
v25.b;
/(?:ab)|cde?/ui;
/^a|b/gsv;
/(wa$3)/mgsduyi;
