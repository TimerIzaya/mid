try {
    new Uint8ClampedArray(16);
} catch(e3) {
}
try {
    new Uint32Array(127);
} catch(e7) {
}
try {
    new Int16Array(7);
} catch(e11) {
}
class C15 {
    toString(a17, a18, a19, a20) {
        try {
            this[7] = a20;
        } catch(e21) {
        }
        return Uint32Array;
    }
    static [Int16Array] = -9205;
    static [16];
    static [-1073741824] = 7;
}
const v22 = new C15();
const v23 = new C15();
const v24 = new C15();
v22.__proto__;
const v28 = 7 << 15796;
const v29 = Math.sqrt(7);
7 >> v28;
-15796;
15796 ^ v28;
delete v24[v29];
let v36 = 4294967295;
Math.max(v23);
const v39 = v36--;
Math.log1p(Uint8ClampedArray);
Math.sign(v36);
Math.cosh(Uint8ClampedArray);
+Uint8ClampedArray || v39;
