function f0() {
}
function f1() {
    const o8 = {
        set d(a3) {
            class C4 {
                [this] = a3;
                536870888 = a3;
                static #f = f0;
            }
            new C4();
            new C4();
            new C4();
        },
        "c": f0,
        __proto__: f0,
        "d": f0,
        "e": f0,
        [f0]: f0,
    };
    return o8;
}
const v9 = f1();
const v10 = f1();
const v11 = f1();
class C15 extends f1 {
    #h = f1;
    constructor(a17, a18, a19, a20) {
        super();
        a18[a17];
        function f22() {
            return a19;
        }
        const v23 = v9 instanceof f1;
        try { this.min(f1, v23, v23); } catch (e) {}
    }
    #g;
    static 158 = f0;
    static [536870912];
    b = f1;
    [256] = 536870912;
}
const v25 = new C15(C15, v11, v9, v10);
const v26 = new C15(v9, v10, v9, v25);
new C15(v26, v9, C15, v26);
/(1(?<!))/su;
const v29 = /[5a\fb\nc\rd\te\vf]/msvyi;
new C15(/xyz??abc|def/v, v11, v26, v26);
v25[v29];
v26[3] = 256;
let v33 = 0;
while (v33 < 5) {
    Object.defineProperty(v26, "e", { configurable: true, set: f1 });
    v33++;
}
