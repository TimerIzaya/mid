class C3 {
    static #n(a5) {
        const v6 = super.g;
        let v7;
        try { v7 = new v6(a5, a5, a5, v6, 1e-15, a5); } catch (e) {}
        try {
            this.fuck(v6, v7, v6);
        } catch(e9) {
        }
        return "2147483648";
    }
    e = 1e-15;
    #c = 1e-15;
    d;
}
new C3();
new C3();
new C3();
const v13 = [-6,-65535,5,536870887,-55375987];
const v14 = [1144654493,536870912,127,127,4294967296,34076,65537];
[-268435456,9007199254740990,-7,15,4294967297,-1073741824,-9223372036854775807];
try {
    new Uint16Array(56);
} catch(e19) {
}
let v20 = 12;
try {
    new Uint16Array(v20);
} catch(e23) {
}
try {
    new Uint16Array(3142);
} catch(e27) {
}
const v28 = v20 / 1e-15;
for (let [,v29,v30] of v13) {
    const v31 = [3142,v30,"reduceRight"];
    const v32 = [v14,1e-15,1e-15,v29];
    [v32,Uint16Array,v31,v32,v32];
    try {
        v20 >>>= v28;
    } catch(e34) {
    }
}
