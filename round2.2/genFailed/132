try {
    new Uint32Array(14);
} catch(e3) {
}
try {
    new Uint8ClampedArray(1329);
} catch(e7) {
}
try {
    new BigInt64Array(10);
} catch(e11) {
}
class C15 extends BigInt64Array {
    static #valueOf(a17, a18, a19, a20) {
        a19["padEnd"](..."padEnd", ..."padEnd", ...a17, ...a17, ..."padEnd");
        return this;
    }
    f = 14;
    static 1387 = "number";
    5 = Uint8ClampedArray;
    #e = 14;
    static #h;
}
let v24 = new C15();
new C15();
new C15();
Uint8ClampedArray << v24;
({"byteLength":v24,} = v24);
const o28 = {
};
try {
    o28.h = 14;
} catch(e29) {
}
try {
    const o30 = {
    };
    o30.h = 14;
    o30.d = Uint8ClampedArray;
} catch(e31) {
}
try {
    const o32 = {
    };
    o32.h = 14;
    o32.d = Uint8ClampedArray;
    o32.b = 10;
} catch(e33) {
}
try {
    const o34 = {
    };
    o34.h = 14;
    o34.d = Uint8ClampedArray;
    o34.b = "60794747";
} catch(e35) {
}
