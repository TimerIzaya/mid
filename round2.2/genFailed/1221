try {
    new Int32Array(12);
} catch(e3) {
}
try {
    new Int16Array(1000);
} catch(e7) {
}
try {
    new Uint8ClampedArray(8);
} catch(e11) {
}
/(x)(x)(x)\3*/sduy;
/foo(?=bar)baz\P{gc=Decimal_Number}/gsdv;
/\p{General_Category=Decimal_Number}q(ab|cde)\1(?<=a)+/gd;
class C18 {
    static #d = Int32Array;
}
new C18();
new C18();
new C18();
const v23 = Symbol.iterator;
const o32 = {
    [v23]() {
        let v25 = 10;
        const o31 = {
            next() {
                v25--;
                const v29 = v25 == 0;
                const o30 = {
                    "done": v29,
                    "value": v25,
                };
                return o30;
            },
        };
        return o31;
    },
};
