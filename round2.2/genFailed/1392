function f3(a4) {
    const o24 = {
        __proto__: a4,
        2: a4,
        [257n](a6, a7) {
            [2.220446049250313e-16,1000000.0];
            [3.0];
            [-7.355746097370464,-1.0,-3.0,-1000000.0,-1.9336035575378236,2.2250738585072014e-308];
            for (let i13 = 0, i14 = 10; i13 < i14; i13++, i14--) {
                try { this["cos"](a4, "cos", a6, "cos"); } catch (e) {}
            }
            return 28296n;
        },
    };
    return o24;
}
const v25 = f3(257n);
const v26 = f3(f3);
const v27 = f3(v26);
const v28 = [v27,v27];
const v29 = [f3,f3,v26];
const v30 = [v25,28296n,v25];
function F31(a33, a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v30;
    } catch(e37) {
    }
    try {
        this.f = f3;
    } catch(e38) {
    }
    try {
        this.d = a34;
    } catch(e39) {
    }
}
const v40 = new F31(v28, v29, v29, v27);
const v41 = new F31(v27, v25, v26, v40);
new F31(v29, v41, v29, v27);
const v43 = /lb/mgyi;
const v44 = /J(?=a){0,10}a/myi;
const t41 = /(x)(x)(x)\3pHT/m;
t41[5] = v27;
if (v43) {
    Object.defineProperty(v44, 15n, { configurable: true, enumerable: true, value: v25 });
    Object.defineProperty(v41, v27, { get: f3, set: f3 });
    const o46 = {
    };
    try {
        o46.a = 28296n;
    } catch(e47) {
    }
    try {
        const o48 = {
        };
        o48.a = 28296n;
        o48.c = 28296n;
    } catch(e49) {
    }
    try {
        const o50 = {
        };
        o50.a = 28296n;
        o50.c = 28296n;
        o50.f = v43;
    } catch(e51) {
    }
    try {
        const o52 = {
        };
        o52.a = 28296n;
        o52.c = 28296n;
        o52.e = f3;
    } catch(e53) {
    }
} else {
    try {
        v29.at(-983299807);
    } catch(e56) {
    }
}
