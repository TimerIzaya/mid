function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 1;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
const v7 = [9007199254740991,1087492255,0,1,38451,-13,9007199254740992];
const v8 = [65535,-536870912,268435439,64,-4294967296,-5,256,4];
const v9 = [-7,30072];
class C13 extends F0 {
    static m(a15, a16) {
        let v14 = this;
        const v17 = [2.0,F0,a16];
        [a16,v5,v6,v17];
        let v19 = [v9,v14];
        [v14,v19,v19,v19] = v19;
        return v17;
    }
    static #n(a21, a22) {
        const v23 = v9 + v7;
        with (v7) {
            Object.defineProperty(v9, length, { writable: true, enumerable: true, value: v23 });
            const v25 = [v8,a22,v23,4.3367672549240195e+307,v6];
            [v25,F0,this,a22,length];
            [v25];
        }
        return 2.0;
    }
}
new C13();
new C13();
new C13();
const v32 = new Map();
const o33 = {
    __proto__: v32,
    "h": v7,
    "e": 1.7976931348623157e+308,
    [4.3367672549240195e+307]: C13,
};
try { v4(4.3367672549240195e+307); } catch (e) {}
function f35() {
    return v8;
}
