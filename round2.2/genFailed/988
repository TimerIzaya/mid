function f1() {
    return false;
}
function F5(a7) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a7;
    } catch(e8) {
    }
}
const v9 = new F5(-256);
const v10 = new F5(v9);
const v11 = new F5(false);
try {
    new Uint32Array(2);
} catch(e18) {
}
try {
    new Float32Array(2387);
} catch(e22) {
}
try {
    new BigInt64Array(14);
} catch(e26) {
}
6n >>> false;
Object.defineProperty(v10, 536870912, { configurable: true, enumerable: true, get: f1 });
try { v11.o(); } catch (e) {}
try {
    v9.length = 0;
} catch(e30) {
}
Object.defineProperty(v9, 724330126, { set: f1 });
try { v10["setBigInt64"](); } catch (e) {}
