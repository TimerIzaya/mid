try {
    new Int8Array(22);
} catch(e6) {
}
try {
    new Uint16Array(512);
} catch(e10) {
}
try {
    new Int8Array(127);
} catch(e14) {
}
class C15 extends Uint16Array {
    [2n] = 127;
    static #valueOf(a17, a18, a19, a20) {
        let v21;
        try { v21 = a18(this, 512, a20, a19, a20); } catch (e) {}
        new Int8Array(127, 512, 127);
        try {
            v21.#valueOf(v21, v21, a20, Int8Array);
        } catch(e24) {
        }
        return Int8Array;
    }
    [-1073741824n];
}
new C15();
new C15();
const v27 = new C15();
for (let i29 = 0; i29 < 3; i29++) {
    const o35 = {
    };
    try {
        new Proxy(v27, o35);
    } catch(e38) {
    }
}
