let v4 = BigInt64Array;
try {
    new v4(169);
} catch(e6) {
}
try {
    new Uint8Array(3911);
} catch(e10) {
}
try {
    new Int16Array(8);
} catch(e14) {
}
class C15 extends v4 {
    static f = 3911;
    constructor(a17, a18, a19) {
        super(a17, 2, 536870888);
        try {
            this[8] = this;
        } catch(e20) {
        }
    }
    static h = 8;
    e;
    2147483648;
    static 1;
    static 3 = 2;
    #d;
}
const v21 = new C15(2, 2, 169);
const v22 = new C15(3911, 536870888, 2);
const v23 = new C15(2, 3911, 169);
class C24 {
    #n(a26, a27, a28, a29) {
        let v31 = 1350091018;
        const v32 = v31++;
        const v33 = v4++;
        v4 ** v4;
        v33 << v32;
        v31 - +v32;
        v31 * v31;
        return C15;
    }
    static 2;
    10 = 8;
}
const v39 = new C24();
const v40 = new C24();
const v41 = new C24();
let v42;
try { v42 = Uint8Array(v41); } catch (e) {}
const v44 = [2,Uint8Array,2,Uint8Array,[v39,v22,8,v23,v39]];
[2,v44,v39];
let v46;
try { v46 = v21.forEach(v42, v44); } catch (e) {}
try {
    v46 ||= v41;
} catch(e47) {
}
v40.b;
