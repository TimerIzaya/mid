class C3 {
    [-1.0];
    static #m(a5, a6) {
        let v10;
        try { v10 = a5.valueOf(); } catch (e) {}
        this in a6;
        try { v10["toString"]("toString", v10, 2147483647n, "toString"); } catch (e) {}
        return "toString";
    }
    static e;
    b;
    static [-2.220446049250313e-16] = "dotAll";
}
const v14 = new C3();
const v15 = new C3();
const v16 = new C3();
const v18 = new Map();
new Map();
function F21(a23, a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a24;
    } catch(e27) {
    }
    try {
        this.e = a24;
    } catch(e28) {
    }
}
new F21(v16, v15, v15, v18);
new F21(v15, v16, v16, -2.220446049250313e-16);
const v31 = new F21(v15, v14, v14, -1.0);
Object.defineProperty("dotAll", -1.0, { writable: true, value: F21 });
const v34 = v31.e;
try {
    v18[2] = v34;
} catch(e35) {
}
this.__proto__;
