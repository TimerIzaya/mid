function f0() {
}
const v3 = new Array(2924);
-Infinity;
try {
    new Uint8ClampedArray(54);
} catch(e10) {
}
try {
    new Int16Array(4096);
} catch(e14) {
}
try {
    new Int32Array(0);
} catch(e18) {
}
try {
    new BigInt64Array(127);
} catch(e22) {
}
try {
    new Uint8ClampedArray(233);
} catch(e26) {
}
try {
    new Float64Array(1616);
} catch(e30) {
}
f0();
const v32 = Array[10];
try { v32["with"](v3, Uint8ClampedArray, Array, Int16Array, "with"); } catch (e) {}
Object.defineProperty("with", "g", { configurable: true, set: Array });
let v38 = 4096 ^ 4096;
!4096;
let v40 = ~v38;
++v38;
Math.sign(4096);
v40++;
!v40;
