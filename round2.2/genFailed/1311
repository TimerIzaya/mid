try {
    new Float64Array(3);
} catch(e3) {
}
try {
    new Uint32Array(9);
} catch(e7) {
}
try {
    new Float64Array(256);
} catch(e11) {
}
try {
    new Uint16Array(12);
} catch(e15) {
}
try {
    new BigUint64Array(10);
} catch(e19) {
}
try {
    new Uint32Array(4);
} catch(e23) {
}
if (256 !== 9) {
    4 in 256;
} else {
    Set.g;
}
const v28 = (9).c;
try {
    v28[268435456] = 10;
} catch(e29) {
}
