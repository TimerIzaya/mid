try {
    new Int32Array(245);
} catch(e3) {
}
try {
    new Uint8ClampedArray(257);
} catch(e7) {
}
try {
    new Int8Array(1);
} catch(e11) {
}
class C12 {
    static {
        try {
            new Int8Array(65536, -5);
        } catch(e17) {
        }
    }
    static {
        try {
            super.f = 245;
        } catch(e19) {
        }
        this[this] **= 1;
        for (let v20 = 0; v20 < 32; v20++) {
            this["p" + v20] = v20;
        }
    }
}
const v23 = new C12();
const v24 = new C12();
new C12();
[-1000000000.0,-502882.42391793657,NaN,Infinity,1000000000000.0,2.0,-1.0,35501.252347585745];
[-5.0,0.0402361707658635,0.01614460483571445,-1.017707428647395e+308,1000000.0];
const v31 = [2.220446049250313e-16,0.7418826025486602,5.0];
v23[10];
for (let [v33,v34,v35] of v31) {
    try { v33(v33, Uint8ClampedArray, C12, ...Int32Array, v34, v23); } catch (e) {}
    new Int8Array(257);
}
let {"a":v38,"h":v39,} = v24;
v23 * v39[Symbol.match];
