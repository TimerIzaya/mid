const v0 = [-Infinity];
const v1 = [-1000000.0];
[755180.7033477712,4.0];
try {
    new BigUint64Array(6);
} catch(e6) {
}
try {
    new Int16Array(3081);
} catch(e10) {
}
try {
    new Int16Array(167);
} catch(e14) {
}
let v16 = 161112.22607096843;
class C18 {
    o(a20, a21, a22) {
        try {
            super.o(a22, v16, this, a21);
        } catch(e24) {
        }
        return v0;
    }
    m(a26, a27, a28, a29) {
        let v30 = 0;
        while (v30 < 10) {
            try {
                v1.__proto__ = this;
            } catch(e33) {
            }
            v30++;
        }
        return this;
    }
}
const v35 = new C18();
new C18();
const v37 = new C18();
try {
    v16 -= 0.0;
} catch(e38) {
}
const v39 = v37[v0];
BigUint64Array * 6;
const v42 = [v39,6];
Reflect.apply(v1.with, v35, v42);
