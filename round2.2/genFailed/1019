const v1 = new Map();
class C2 extends Map {
    static n(a4, a5) {
        try {
            super[this] = v1;
        } catch(e6) {
        }
        return a4;
    }
    constructor(a8, a9) {
        super(v1);
        v1.size in a9;
    }
}
const v12 = new C2(C2, C2);
const v13 = new C2(C2, C2);
const v14 = new C2(v13, v12);
class C18 {
    constructor(a20, a21) {
        const v22 = super.f;
        try { v22.getUTCHours(C2); } catch (e) {}
        throw Map;
    }
    static [Map];
    get g() {
        try {
            this.__proto__ = v14;
        } catch(e26) {
        }
        return C2;
    }
}
new C18(v14, -4);
new C18(v13, -56980);
const v29 = new C18(v12, -4);
try { v29.o(-4, C2, v29); } catch (e) {}
let v32 = 954936153;
v32 & 743.536056666899;
let v36 = ~268435439;
--v36;
v36 << 743.536056666899;
v32++;
