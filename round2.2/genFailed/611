class C3 {
    [12];
    1000;
    static #h;
    #n(a5) {
        this[5] ^= a5;
        const o9 = {
            "execution": "sync",
            "type": "minor",
        };
        return gc(o9);
    }
}
new C3();
const v12 = new C3();
const v13 = new C3();
try {
    new Float64Array(10);
} catch(e17) {
}
try {
    new Float64Array(2068);
} catch(e21) {
}
try {
    new Float32Array(76);
} catch(e25) {
}
class C26 extends Float32Array {
    p(a28, a29, a30, a31) {
        const v34 = typeof v12 === "symbol";
        try { new a28(10, 10, v34, a29, Float32Array); } catch (e) {}
        try {
            a30[a29] = v13;
        } catch(e36) {
        }
        return a31;
    }
    [-1] = 76;
    static #a;
    [Float64Array];
}
new C26();
new C26();
new C26();
[-931591.7485666596,-1.7976931348623157e+308,482.33355599340666,0.9093028254579307,-928.8496286846324,1.3360199374007777e+308,-0.0,935.5777146082803];
[4.671653928561685,-832.6569244464872,-2.0,4.0,Infinity,627921.3328487817,838.7622055743188];
[2.0,-1.0560748792404002,-1000000000.0] < v13;
let v44 = 10;
for (; v44--;) {
    [-3,453490614,4294967297,257,-9007199254740991,4096,256,-4294967296];
    const v47 = [536870912];
    const v48 = [9,-9007199254740991,426785534];
    try { v48.flatMap(v47, 2); } catch (e) {}
}
