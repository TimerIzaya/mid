try {
    new Float64Array(3355);
} catch(e9) {
}
try {
    new Float64Array(63);
} catch(e13) {
}
try {
    new Int8Array(64);
} catch(e17) {
}
class C18 extends Float64Array {
    p(a20, a21, a22, a23) {
        try { ("function").search(a20); } catch (e) {}
        const v29 = [["function","-65536"],"a"];
        [Float64Array,"9007199254740991",a21];
        return v29;
    }
    [3355] = 3355;
    4 = "9007199254740991";
    e = 0.7136373388882755;
}
const v31 = new C18();
const v32 = new C18();
new C18();
let v34 = 0;
while (v34 < 7) {
    try { v31.toSorted(63); } catch (e) {}
    const v38 = new Float64Array(v31, v34);
    %VerifyType(v38);
    v32.buffer;
    v34++;
}
