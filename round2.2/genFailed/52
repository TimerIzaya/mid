class C3 {
    static #h = 0.1786943346780625;
    constructor(a5) {
        try {
            super[a5] = a5;
        } catch(e6) {
        }
        try {
            super.b = a5;
        } catch(e7) {
        }
    }
}
let v8 = new C3(C3);
const v9 = new C3(2);
const v10 = new C3(v9);
class C11 extends C3 {
    static [-1];
    [255];
    [v9];
    get h() {
        let v13;
        try { v13 = this(v9, v10, this, 0.1786943346780625); } catch (e) {}
        536870889 >> ((536870889 + -4.0) | 536870889);
        v13 ** v13;
        return v9;
    }
}
new C11();
new C11();
const v23 = new C11();
let v24;
try { v24 = v23.replace(255, 255, 0.1786943346780625, v23, 2); } catch (e) {}
function f25() {
    return v24;
}
const v26 = v24?.[0.1786943346780625];
try {
    v8 = v24;
} catch(e27) {
}
255 instanceof v26;
