function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 1718127351;
    } catch(e3) {
    }
}
let v4 = new F0();
const v5 = new F0();
const v6 = new F0();
function F13(a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a15;
    } catch(e17) {
    }
    try {
        this.f = -4.0;
    } catch(e18) {
    }
}
new F13(v5, -19729);
new F13(v4, -1640005111);
new F13(v6, -19729);
const t24 = v5[Symbol.iterator];
t24[F13] &= -4.0;
try {
    v4 &= v6;
} catch(e25) {
}
const o28 = {
    "maxByteLength": 1471,
};
const v30 = new SharedArrayBuffer(1471, o28);
try {
    new BigInt64Array(v30);
} catch(e33) {
}
