function f0() {
    const o15 = {
        ["15"](a5, a6) {
            const o7 = {
            };
            try {
                o7.g = a5;
            } catch(e8) {
            }
            try {
                const o9 = {
                };
                o9.g = a5;
                o9.d = a6;
            } catch(e10) {
            }
            try {
                const o11 = {
                };
                o11.g = a5;
                o11.d = a6;
                o11.h = -24380;
            } catch(e12) {
            }
            try {
                const o13 = {
                };
                o13.g = a5;
                o13.d = a6;
                o13.h = a5;
            } catch(e14) {
            }
            return "15";
        },
    };
    return o15;
}
const v16 = f0();
const v17 = f0();
f0();
try {
    new Float64Array(13);
} catch(e22) {
}
try {
    new Uint8Array(2076);
} catch(e26) {
}
try {
    new BigUint64Array(2845);
} catch(e30) {
}
class C31 extends BigUint64Array {
    static h = f0;
    g = v16;
    o(a33, a34, a35, a36) {
        super.buffer **= a36;
        let v39 = 0.21871030805807057;
        ++v39;
        13 - a35;
        a35 ^ a35;
        return BigUint64Array;
    }
    d = 13;
    10 = BigUint64Array;
    [v17] = BigUint64Array;
}
new C31();
new C31();
new C31();
class C46 {
    n(a48, a49, a50) {
        try {
            a50 &= f0;
        } catch(e51) {
        }
        f0();
        a48++;
        return a50;
    }
    16 = v16;
    static valueOf(a55, a56, a57, a58) {
        try {
            a56.valueOf = f0;
        } catch(e59) {
        }
        function f60() {
            return C31;
        }
        return a55;
    }
}
new C46();
new C46();
const v63 = new C46();
try {
    C31 = v63;
} catch(e64) {
}
try {
    v17[2845] = v16;
} catch(e65) {
}
