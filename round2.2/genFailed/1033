function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 2147483647;
    } catch(e3) {
    }
}
new F0();
const v5 = new F0();
const v6 = new F0();
function F7(a9) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = F0;
    } catch(e10) {
    }
}
const v11 = new F7(v5);
const v12 = new F7(v5);
const v13 = new F7(v5);
function f14() {
    return v13;
}
function f15(a16, a17, a18) {
    const o24 = {
        6: a18,
        "d": v13,
        "c": v12,
        toString(a20, a21, a22) {
            try {
                v5[536870887] = a21;
            } catch(e23) {
            }
            return a17;
        },
        "a": v6,
        "g": v13,
        __proto__: a18,
        1: a17,
    };
    return o24;
}
const v25 = f15(v11, v5, v11);
const v26 = f15(v13, v25, v25);
const v27 = f15(v11, v25, v5);
function f28(a29, a30, a31, a32) {
    const o37 = {
        "f": v6,
        "e": v11,
        "b": v6,
        set c(a34) {
            try {
                a31 %= this;
            } catch(e35) {
            }
            F0++;
        },
        ...a29,
        __proto__: v13,
        ...a32,
        [a31]: v12,
    };
    return o37;
}
const v38 = f28(v27, v25, v13, v13);
const v40 = f28(v5, v26, v38, f28(v27, v25, v38, v12));
if (f15 != v26) {
} else {
    ~v40;
    try {
        new f14();
    } catch(e47) {
    }
}
