let v4 = Uint8Array;
try {
    new v4(60);
} catch(e6) {
}
try {
    new Float32Array(7);
} catch(e10) {
}
try {
    new Int8Array(67);
} catch(e14) {
}
new Array(3310);
class C18 extends Int8Array {
    static [3310];
    536870887 = v4;
    constructor(a20, a21, a22, a23) {
        super(7);
        a23 ** 5.0;
        const v28 = v4++;
        a23 / -3;
        -3 ^ v28;
        !-3;
    }
}
const v32 = new C18(5, 7, 60, 67);
new C18(5, 67, 5, v32);
new C18(3310, 7, 67, 67);
[789890110,268435441,9007199254740991,127,0,64,-5,23466];
const v36 = [-10,5,9,8,-1404088984,129,128,2,1207];
[54843,-9,4096];
try {
    try {
        new Uint8Array(171);
    } catch(e41) {
    }
    try {
        new BigUint64Array(14);
    } catch(e45) {
    }
    try {
        new Uint8Array(4);
    } catch(e49) {
    }
} catch(e50) {
    const v54 = e50++;
    Math.sin(v54);
    Math.tan(e50);
    Math.asinh(v54);
    Math.exp(e50);
    Math.cos(v36);
    -12 / -12;
}
