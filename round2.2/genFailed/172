function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 9007199254740990;
    } catch(e3) {
    }
    try {
        this.e = 9007199254740990;
    } catch(e4) {
    }
    try {
        this.a = 9007199254740990;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
function f9(a10) {
    const o16 = {
        "g": F0,
        m(a12) {
            return Reflect.construct(F0, [], F0);
        },
        ...a10,
        "f": F0,
        4: v7,
        "e": v8,
        "h": v6,
        "c": v7,
    };
    return o16;
}
const v17 = f9(v8);
f9(v6);
f9(v8);
new Set();
function f22() {
    return v17;
}
const v26 = new Set(v8);
Object.defineProperty(v6, v26, { configurable: true, enumerable: true, set: f9 });
const o33 = {
    valueOf() {
        const o31 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o31);
        return -0.0;
    },
};
