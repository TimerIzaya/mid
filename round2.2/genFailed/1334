const v0 = [-Infinity,0.0,3.0,444.04874214907977];
const v1 = [-6.587744760622332,843424.9698451713,311795.61417271383,-1.1160596067266333,-140.65492877433996,-Infinity,-1.4627113796744324e+308,-3.0];
const v2 = [1000000.0,1000000000000.0,-679717.0084679574];
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a8;
    } catch(e10) {
    }
}
const v11 = new F6(v1, v0);
new F6(v0, v0);
const v13 = new F6(v2, v0);
class C15 extends F6 {
    n(a17, a18) {
        this[false];
        try {
            super.h = a17;
        } catch(e20) {
        }
        return a18;
    }
    5;
    [v2] = v11;
    #c = v2;
    #g = F6;
    [v13];
}
const v21 = new C15();
new C15();
new C15();
for (let v24 of v2) {
    const v25 = 536870889n in C15;
    v25[3] = v25;
    try {
        v24 /= C15;
    } catch(e26) {
    }
}
const v29 = -963864542;
const v30 = v29 ** v29;
Math.cos(963864542);
v30 + v21;
v21 | 536870889n;
-963864542;
