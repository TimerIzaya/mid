function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -693167035;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
let v7 = [62170,1567437811,1000,-12,4294967295,-1063020811];
const v8 = [1024,257,268435456,981724609,4294967295,1229774894,255,1864817728,-1832571543,56523];
let v9 = [536870912,49525,850143254,283051545,-9007199254740991];
function f10() {
    return v6;
}
class C11 extends f10 {
    #e;
    static #c = f10;
    [v5] = v6;
    static 8;
    set g(a13) {
        const v14 = super[v4];
        v7 >>> v7;
        try {
            v7 = v14;
        } catch(e16) {
        }
    }
}
new C11();
const v18 = new C11();
new C11();
({"c":v9,"e":v7,} = v6);
let {"c":v20,"h":v21,} = v6;
try { new v9(v20); } catch (e) {}
let v23 = v20?.[1024];
v5[16];
let v25 = 0;
while (v25 < 5) {
    [v23] = v8;
    delete v6[v18];
    v25++;
}
