try {
    new BigInt64Array(9);
} catch(e3) {
}
try {
    new BigUint64Array(8);
} catch(e7) {
}
try {
    new Uint32Array(1921);
} catch(e11) {
}
const v12 = [268435441,4096,816196755,512,10,9992,4294967297,62821];
[4096,-13,-4096,-4096,0,-22622303,1073741824,56672];
[-1876931227,2147483648,-65535,65535];
function F15(a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v12;
    } catch(e20) {
    }
}
new F15(v12, F15, 9);
new F15(v12, v12, 8);
new F15(v12, 1921, 1921);
[29546,-9007199254740992,9,41740,2147483648,-65535,5,15,27607,246895166];
const v25 = [13,-536870912,512,1709220417,64,4,-3,1654312653];
for (let [v27,v28,v29] of [2,-1473577706,-43554,4294967295,4096,8,1000,1599478158,391809987,-9223372036854775807]) {
    v25[Symbol.toPrimitive];
}
const o33 = {
    [1921]: 1921,
};
