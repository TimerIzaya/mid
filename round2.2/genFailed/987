function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = -2147483647;
    } catch(e3) {
    }
}
new F0();
new F0();
const v6 = new F0();
try {
    new BigInt64Array(9);
} catch(e10) {
}
try {
    new Uint8ClampedArray(16);
} catch(e14) {
}
try {
    new BigInt64Array(256);
} catch(e18) {
}
const v25 = F0 ** 9;
for (const v26 of BigInt64Array) {
    let v27;
    try { v27 = v26(v26, 256, v26, F0); } catch (e) {}
    throw v27;
    try { new v27(v27, v25, -1000.0, 16, v27); } catch (e) {}
    v6.a <<= 2.2250738585072014e-308;
}
const o31 = {
    "maxByteLength": 127,
};
const v33 = new SharedArrayBuffer(5, o31);
try {
    new Int32Array(v33);
} catch(e36) {
}
