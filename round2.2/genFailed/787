const v0 = [255,14,512,-1691807431,512,0,5,-1599572272,-9223372036854775807,5];
const v1 = [3,268435440];
const v2 = [13,12,-11,-9007199254740991,6,-9007199254740990,13,-42569,-3];
const v6 = [9007199254740991,4294967296,2147483647,v1,v0];
const v7 = [4294967296,v1];
const v8 = [9007199254740991,v0,v6,4294967296,v6];
function f9(a10, a11, a12, a13) {
    const o29 = {
        [a11](a15, a16, a17) {
            super[a11];
            function F19(a21, a22, a23) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.d = a23;
                } catch(e24) {
                }
                try {
                    this.e = a17;
                } catch(e25) {
                }
            }
            new F19(9007199254740991, a13, a11);
            new F19(v8, v7, 4294967296);
            new F19(v1, v1, a12);
            return a15;
        },
    };
    return o29;
}
f9(9007199254740991, 4294967296, v8, 4294967296);
const v32 = f9(9007199254740991, 2147483647, 2147483647, f9(4294967296, 9007199254740991, v7, f9));
v2[61351n] -= 9007199254740991;
v32[Symbol.asyncIterator];
+f9;
Math.fround(61351n);
57235 & 61351n;
v2 & v2;
