try {
    new Uint8Array(512);
} catch(e3) {
}
try {
    new BigInt64Array(97);
} catch(e7) {
}
try {
    new BigInt64Array(257);
} catch(e11) {
}
const v12 = [-984599969,1024,1000,65536,1];
const v13 = [-1742615089];
[-53952,1073741824,16,-2147483649,15,6,791389263,63296,16];
const v15 = [2.2250738585072014e-308,-214.43660453008295,0.0,4.0,-2.2250738585072014e-308];
[1e-15,-160662.32673908968,-9.641960263116776e+307,-19.086163074285764,-5.0,-0.0];
[1000000.0,-Infinity,-934.9751488074205,-1000000000000.0,-682.7844499530653];
class C18 {
    65536 = v15;
    #o(a20, a21, a22, a23) {
        try {
            a23 >>= v15;
        } catch(e24) {
        }
        return v12;
    }
    set g(a26) {
        const v27 = super.h;
        const v28 = this + v27;
        try {
            super.valueOf(this, this, v27, v28);
        } catch(e31) {
        }
    }
}
new C18();
new C18();
const v34 = new C18();
-Infinity;
class C38 extends BigInt64Array {
    static [257];
    [v13] = v34;
}
new C38();
new C38();
new C38();
