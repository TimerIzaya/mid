try {
    new Int32Array(442);
} catch(e6) {
}
try {
    new Uint32Array(3592);
} catch(e10) {
}
try {
    new Int32Array(15);
} catch(e14) {
}
[2147483648,472249919,4,-1,1965665626,32693,7,1576023635,31250];
let v16 = [64,-1,-256,9007199254740990,-1158852140,33619,-53941,9,34507,57139];
const v17 = [8];
class C18 extends Int32Array {
    static #n(a20, a21) {
        const v25 = super[a20];
        try {
            super[v25] = 2147483648;
        } catch(e26) {
        }
        return this;
    }
    [-1] = Uint32Array;
    static #b;
    static 96630797;
    static 10000;
}
new C18();
new C18();
new C18();
try {
    v16 |= v16;
} catch(e30) {
}
const o31 = {
};
try {
    o31.h = 1;
} catch(e32) {
}
try {
    const o33 = {
    };
    o33.h = 1;
    o33.b = v17;
} catch(e34) {
}
try {
    const o35 = {
    };
    o35.h = 1;
    o35.b = v17;
    o35.g = 3592;
} catch(e36) {
}
try {
    const o37 = {
    };
    o37.h = 1;
    o37.b = v17;
    o37.c = v16;
} catch(e38) {
}
