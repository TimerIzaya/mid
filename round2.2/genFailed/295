try {
    new Float64Array(263);
} catch(e3) {
}
try {
    new Uint16Array(140);
} catch(e7) {
}
try {
    new Int8Array(31);
} catch(e11) {
}
/gab\b\d\bcdua{1,2}?/gduyi;
const v13 = /c8/mgs;
/\xed\xb0\x80xa+b|c/mgsdui;
function f15() {
    return 263;
}
const v16 = [f15,Uint16Array,140];
[v16,263];
const v18 = [Int8Array,v13,140,263];
try {
    new Int32Array(656);
} catch(e22) {
}
try {
    new Uint16Array(255);
} catch(e26) {
}
try {
    new Uint8Array(883);
} catch(e30) {
}
const v32 = [v16];
const v33 = v13.exec;
Reflect.apply(v33, v18, v32);
if (v33) {
    try {
        v13[v32] = v16;
    } catch(e35) {
    }
} else {
    try {
        new Int16Array(8);
    } catch(e39) {
    }
    try {
        new Int16Array(3494);
    } catch(e43) {
    }
    try {
        new Float64Array(9);
    } catch(e47) {
    }
}
