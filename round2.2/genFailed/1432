class C3 {
    toString(a5) {
        a5[Symbol.asyncIterator];
        return "valueOf";
    }
    constructor(a10, a11) {
        const v12 = a10 == this;
        const v13 = v12 ? a10 : this;
        const t7 = "-13";
        t7[Symbol.hasInstance] = this;
        v13 ** v12;
    }
}
const v17 = new C3(0.5122566900714786, "valueOf");
const v18 = new C3(0.5122566900714786, 0.5122566900714786);
new C3(v17, v18);
new Set();
class C22 extends C3 {
    static toString(a24, a25, a26) {
        const o30 = {
            "maxByteLength": 2420402598,
        };
        const v32 = new ArrayBuffer(127, o30);
        try {
            new Uint8ClampedArray(v32);
        } catch(e35) {
        }
        return 2420402598;
    }
}
new C22();
new C22();
const v38 = new C22();
var a = "valueOf";
const v41 = v18 + v18;
-65537 * v17;
const v43 = Math.log(v41);
try {
    v38[v43] = v18;
} catch(e44) {
}
