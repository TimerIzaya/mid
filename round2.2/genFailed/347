class C3 {
    static ["bigint"];
    static {
        with ("bigint") {
            this >>> this;
        }
    }
    0;
    c;
    static f;
    ["parse"] = "bigint";
}
const v10 = new C3();
const v11 = new C3();
const v12 = new C3();
try {
    new Int32Array(2232);
} catch(e16) {
}
try {
    new Int8Array(128);
} catch(e20) {
}
try {
    new Int16Array(192);
} catch(e24) {
}
function f25(a26, a27) {
    const o33 = {
        set b(a29) {
            super[a29];
            try {
                v11.fuck(Int16Array, Int16Array, C3);
            } catch(e32) {
            }
        },
        ...v10,
        "f": 192,
        635: v11,
        "b": "string",
        __proto__: a26,
        "a": "string",
        "d": C3,
    };
    return o33;
}
f25(v12, 192);
f25(v11, 128);
f25(v12, 192);
d = f25;
function f37() {
    return "parse";
}
for (const v38 of "bigint") {
    let v42 = 0.6138167653218061;
    Math.ceil(Int8Array);
    Math.log1p(10);
    const v45 = --v42;
    let v46 = 10 % v38;
    Math.round(v42);
    ++v46;
    Math.asin(v45);
}
