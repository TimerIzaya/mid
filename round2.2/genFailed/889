try {
    new Uint32Array(166);
} catch(e6) {
}
try {
    new Float64Array(163);
} catch(e10) {
}
try {
    new BigUint64Array(2284);
} catch(e14) {
}
class C15 {
    #d;
    6;
    static #e = 166;
    b;
    constructor(a17, a18, a19, a20) {
        const v22 = [a18];
        Reflect.construct(a20, v22, a20);
        v22[Reflect];
        super[-13];
    }
}
const v26 = new C15(2284, -13, 2284, BigUint64Array);
new C15(1073741825, 1073741825, -318608642, -13);
const v28 = new C15(-13, v26, 166, C15);
let {"b":v29,"f":v30,} = v28;
const o34 = {
    "execution": "sync",
    "type": "minor",
};
const v35 = gc(o34);
try { v29(2284, gc, v35, Uint32Array, o34); } catch (e) {}
