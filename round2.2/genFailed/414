const v1 = new Map();
const v2 = [Map,Map,v1];
[v2,Map,[v2,v1,v1],v1];
class C8 extends Map {
    a;
    toString(a10, a11, a12, a13) {
        for (let v14 = 0; v14 < 32; v14++) {
            a11["p" + v14] = v14;
        }
        return a10;
    }
    #n(a18, a19, a20) {
        super[this];
        this.size;
        this[a20];
        v1 ** v1;
        -Infinity;
        return -36.86778475755932;
    }
}
let v28 = new C8();
new C8();
const v30 = new C8();
class C31 extends C8 {
    static {
        1024 << v30;
        Math.sinh(1.584885402075793);
        const v38 = ++v28;
        -1024;
        (v38 % v28) - v30;
    }
    9;
    static #f;
    static #h = 4294967297;
    static [4294967297];
}
new C31();
new C31();
const v44 = new C31();
const o45 = {
};
try {
    new Proxy(v44, o45);
} catch(e48) {
}
try {
    C31 = o45;
} catch(e49) {
}
