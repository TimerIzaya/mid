const v6 = [-14,-27562,9007199254740992,128,-31099,10,2147483648,31802,268435441];
const v7 = [1073741825,1892870167];
[-29138,536870887,7592,268435440,-4294967297,-128,11,257,-1];
try {
    const t4 = "byteLength";
    t4[13] = "getFloat32";
} catch(e12) {
}
function f13(a14, a15, a16) {
    function f18(a19) {
        this[Symbol.iterator];
    }
    this.onmessage = f18;
    const v24 = Symbol.iterator;
    const o33 = {
        [v24]() {
            let v26 = 10;
            const o32 = {
                next() {
                    v26--;
                    const v30 = v26 == 0;
                    const o31 = {
                        "done": v30,
                        "value": v26,
                    };
                    return o31;
                },
            };
            return o32;
        },
    };
}
const v36 = [v6,v7,-44789n];
const o37 = {
    "arguments": v36,
    "type": "function",
};
new Worker(f13, o37);
