const v2 = new Array(256);
class C3 {
    toString(a5, a6) {
        v2[a5] %= a5;
        return v2;
    }
    9 = 256;
    [256];
    static get g() {
        let v10 = 129;
        Math.sin(256);
        let v12 = v10++;
        255 >> v12;
        v12--;
        Math.max(v10 % 256);
        return v10--;
    }
}
const v18 = new C3();
const v19 = new C3();
const v20 = new C3();
class C21 {
    [v2];
    constructor(a23, a24, a25, a26) {
        try {
            super.h = v18;
        } catch(e27) {
        }
    }
    static get h() {
        ~v2;
        Object.defineProperty(this, this, { get: Array, set: Array });
        return this;
    }
    #d = v2;
}
const v30 = new C21(v2, C21, v18, Array);
const v31 = new C21(v2, v20, v18, v30);
new C21(v19, v20, v18, 256);
/a{1,2}?/mgduy;
/qa[bc]d/gsdvy;
const v35 = /m(?:foo)/mu;
Object.defineProperty(v31, v19, { configurable: true, get: Array });
for (const v36 of v2) {
    try { new v36(C3, v36, v36, v20); } catch (e) {}
    try {
        v20.b = C3;
    } catch(e38) {
    }
}
try {
    v35.valueOf = Array;
} catch(e39) {
}
