let v2 = -9529n;
const v3 = [v2];
const v4 = [v3];
const v5 = [v3,55824n,v4,55824n];
class C6 {
    o(a8, a9, a10, a11) {
        [-2016245940,0,48217,65535,-16,-4294967296,3,12];
        [-2147483647,268435439,345446090,1134357075,129,1925763250,536870889,5,4096,536870888];
        [-1352675097,256,512,8,2147483648,1864206385,4,-884946050,536870888,-5];
        return v3;
    }
    static n(a16, a17, a18, a19) {
        try { new a17(); } catch (e) {}
        try {
            v2 = a16;
        } catch(e21) {
        }
        return delete this?.h;
    }
}
new C6();
new C6();
new C6();
function F26(a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a28;
    } catch(e30) {
    }
}
new F26(v5, v3);
new F26(v5, v3);
new F26(v3, v3);
function f34(a35) {
    function f37(a38) {
        let {"b":v39,...v40} = this;
        this[a35];
    }
    this.onmessage = f37;
    [-37414,624873942,65537,-232957462,35141];
    [7,12];
    [410527318,5,2110036449];
}
const v47 = [v4];
const o48 = {
    "arguments": v47,
    "type": "function",
};
new Worker(f34, o48);
