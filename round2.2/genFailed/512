const v2 = new Array(10);
function f3(a4) {
    const o20 = {
        "d": 10,
        set f(a6) {
            const v7 = Array > this;
            Object.defineProperty(this, 1024, { configurable: true, enumerable: true, get: Array, set: Array });
            this ** v7;
            function F9(a11, a12, a13) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.f = a13;
                } catch(e14) {
                }
                try {
                    this.h = v7;
                } catch(e15) {
                }
                try {
                    this.e = a12;
                } catch(e16) {
                }
            }
            const v17 = new F9(v7, v7, Array);
            const v18 = new F9(v17, a6, v17);
            new F9(v18, a4, a4);
        },
    };
    return o20;
}
const v21 = f3(Array);
f3(v2);
const v23 = f3(v2);
let v24 = "n";
function f27() {
    return v2;
}
[0.0,1.4127224754870953e+308,-1000000.0,-3.0,1000000.0,0.933712835973525];
const v29 = [8.581121424103799,-6.141799410653313,-2.0,702098.7302669634,0.7291099901561507,2.900009691470576e+307,-2.0];
[-373283.08872770634,1000.0,1.7976931348623157e+308,-1.7976931348623157e+308];
v21[f27] ^= 10;
Object.defineProperty(v24, "f", { enumerable: true, get: f3, set: f3 });
if (v23 === v21) {
    f27();
} else {
    v29[v24];
    try {
        v24 = "c";
    } catch(e34) {
    }
}
