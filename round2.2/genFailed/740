let v1 = "g";
let v2 = 2;
class C3 {
    static #g;
    #n(a5) {
        let v6 = this.e;
        try {
            v6 = v1;
        } catch(e7) {
        }
        return this;
    }
    constructor(a9) {
        try {
            super[v2] = this;
        } catch(e10) {
        }
    }
}
const v11 = new C3(-1218863746);
const v12 = new C3(v2);
const v13 = new C3(v2);
const v17 = [5,65535];
const v18 = [-1218863746,v13,-1218863746,v11,v13];
[-1218863746,v11,v12,v11,v11];
class C20 extends C3 {
    2147483647 = v12;
    static #valueOf(a22, a23, a24) {
        try {
            super[-1532013422] = -1532013422;
        } catch(e25) {
        }
        try {
            v11.#valueOf(v11);
        } catch(e27) {
        }
        return a24;
    }
    [C3] = v18;
    static [v11] = -1532013422;
    [5] = -1218863746;
}
new C20();
const v29 = new C20();
const v30 = new C20();
let v31;
try { v31 = v30.isFrozen(-1532013422, v12); } catch (e) {}
const v33 = (v29 % v31) >> 65535;
let v34;
try { v34 = v31(v33, v33, 5, v33); } catch (e) {}
[v2] = v17;
try {
    v1 = v34;
} catch(e35) {
}
/[((((.).).).)(x)(x)(x)\1*P+]/msuy;
/8/mgsdy;
/4ca.wa\W*/dui;
