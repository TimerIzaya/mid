try {
    new Uint8ClampedArray(243);
} catch(e6) {
}
let v7 = 167;
try {
    new BigInt64Array(v7);
} catch(e10) {
}
try {
    new Int32Array(4047);
} catch(e14) {
}
class C15 extends BigInt64Array {
    866069713;
    valueOf(a17, a18) {
        const v22 = -1000000000000.0 ^ v7;
        const v23 = --v7;
        Math.clz32(0);
        const v25 = v22 % v22;
        0 && v23;
        Math.ceil(v25);
        Math.atanh(-1000000000000.0);
        return BigInt64Array;
    }
}
const v29 = new C15();
const v30 = new C15();
new C15();
let v32;
try {
const t0 = 243;
v32 = t0(4047, v30, Uint8ClampedArray, v29, Uint8ClampedArray);
} catch (e) {}
[11549,-11,396617555];
const v34 = [6,1813932044,536870912,46878,13,-51192,-483222870,9223372036854775807];
[-65537,512,9007199254740992,9,268435456,352842536,8,52445] << v30;
try {
    v34.toString = v32;
} catch(e37) {
}
try {
    new Uint32Array(13);
} catch(e41) {
}
try {
    new Int32Array(712);
} catch(e45) {
}
try {
    new Float64Array(2943);
} catch(e49) {
}
