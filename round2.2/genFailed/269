function f0() {
    const o11 = {
        toString(a5) {
            try { a5(a5, a5, "a"); } catch (e) {}
            return this;
        },
        "h": "a",
        ..."a",
        get e() {
            let v9 = "o" >= this ? "o" : this;
            try {
                v9 = "o";
            } catch(e10) {
            }
            return v9;
        },
    };
    return o11;
}
f0();
const v13 = f0();
f0();
try {
    new Uint32Array(23);
} catch(e18) {
}
try {
    new Int32Array(1);
} catch(e22) {
}
try {
    new Uint8Array(3);
} catch(e26) {
}
[1965995762,-3];
[128,476090487,37963,4294967295];
[-1800903320,-268435456,1];
let v31 = 499700637;
0 | v13;
Math.expm1(v13);
-v31;
Math.acos(v31);
let v37 = ++v31;
--v37;
0 instanceof f0;
