function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -4096;
    } catch(e3) {
    }
    try {
        this.b = -4096;
    } catch(e4) {
    }
    try {
        this.f = -4096;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
function f9(a10, a11) {
    const o12 = {
        "e": v8,
        "b": a11,
        "d": v6,
        ...a11,
        ...a11,
        6: a11,
        "a": v6,
        [a11]: v6,
        "g": a11,
        "f": a10,
        "h": v7,
        __proto__: a10,
        "c": v7,
    };
    return o12;
}
const v13 = f9(v8, v6);
const v14 = f9(f9, v13);
const v15 = f9(F0, v14);
function F16(a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a19;
    } catch(e20) {
    }
    try {
        this.e = a18;
    } catch(e21) {
    }
    try {
        this.f = v8;
    } catch(e22) {
    }
}
new F16(v14, v15);
const v24 = new F16(v6, v13);
new F16(v15, v24);
try {
    new Int32Array(11);
} catch(e29) {
}
try {
    new BigUint64Array(775);
} catch(e33) {
}
try {
    new Int8Array(5);
} catch(e37) {
}
[[5,F0],Int32Array];
const v40 = [775,11];
const o41 = {
};
try {
    o41.f = v7;
} catch(e42) {
}
try {
    const o43 = {
    };
    o43.f = v7;
    o43.g = v40;
} catch(e44) {
}
try {
    const o45 = {
    };
    o45.f = v7;
    o45.g = v40;
    o45.h = Int32Array;
} catch(e46) {
}
try {
    const o47 = {
    };
    o47.f = v7;
    o47.g = v40;
    o47.h = Int32Array;
} catch(e48) {
}
