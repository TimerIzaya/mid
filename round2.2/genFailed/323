function f0() {
}
[-6568,-10763,-9007199254740992,-40424,-9223372036854775808,4];
let v2 = [27906,65536,-9007199254740990,-36259];
const v3 = [-52497,44873,9007199254740990,268435456,-9223372036854775807,-1024,-565920882];
class C4 {
    1 = f0;
    set e(a6) {
        const v7 = this >= v3;
        if (v7) {
            this[v7];
        } else {
            this[2263912960];
            try {
                v2 /= v2;
            } catch(e10) {
            }
        }
    }
}
const v11 = new C4();
new C4();
new C4();
new Map();
try {
    new Float32Array(10);
} catch(e19) {
}
try {
    new BigUint64Array(148);
} catch(e23) {
}
try {
    new Int8Array(256);
} catch(e27) {
}
Object.defineProperty(v11, v11, { configurable: true, get: f0 });
typeof 256 === "function";
class C31 extends Int8Array {
    b;
    [v2] = Float32Array;
    static 5;
    148 = BigUint64Array;
    [10] = 10;
}
new C31();
new C31();
new C31();
