try {
    new Float64Array(7);
} catch(e3) {
}
try {
    new Float64Array(10);
} catch(e7) {
}
try {
    new Uint32Array(3404);
} catch(e11) {
}
/ab|c3a(?=b)c\x01/mduy;
/.\1112/myi;
const v15 = /[7sZ*]/msd;
class C16 extends Uint32Array {
    valueOf(a18, a19) {
        this[0] = 3404;
        const v20 = a18 ** this;
        try {
            a18[this] = v20;
        } catch(e21) {
        }
        return v15;
    }
    static #g;
    [10];
    static #b;
    127 = 10;
}
new C16();
new C16();
new C16();
let v25 = 0;
while (v25 < 0) {
    const o28 = {
    };
    try {
        o28.c = false;
    } catch(e29) {
    }
    try {
        const o30 = {
        };
        o30.c = false;
        o30.e = Float64Array;
    } catch(e31) {
    }
    try {
        const o32 = {
        };
        o32.c = false;
        o32.e = Float64Array;
        o32.g = 7;
    } catch(e33) {
    }
    try {
        const o34 = {
        };
        o34.c = false;
        o34.e = Float64Array;
        o34.d = 10;
    } catch(e35) {
    }
    v25++;
}
