function f0() {
    const o15 = {
        [1.5526635174313872e+308](a5, a6) {
            [7,-270155574,1,127,-23485,-65537];
            [-1745559832,-1482907907];
            [2147483647,-627508196,7,9,-4096,9007199254740990,1073741825,1073741825,19752];
            const o13 = {
                "execution": "async",
                "type": "minor",
            };
            return gc(o13);
        },
    };
    return o15;
}
const v16 = f0();
const v17 = f0();
const v18 = f0();
const v19 = [v18,f0];
const v20 = [v18,v18];
[v20,v18,v16,v20,v17];
try {
    new Int32Array(2394);
} catch(e25) {
}
try {
    new Int16Array(2825);
} catch(e29) {
}
try {
    new Uint16Array(1844);
} catch(e33) {
}
throw Int32Array;
function f34(a35) {
    function f37(a38) {
        try { a35(a38, Int32Array, Int16Array, v19, a38); } catch (e) {}
    }
    this.onmessage = f37;
}
const v45 = [v17];
const o46 = {
    "arguments": v45,
    "type": "function",
};
new Worker(f34, o46);
