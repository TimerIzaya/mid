const v5 = new Array(1578);
function f6(a7, a8, a9) {
    const o19 = {
        get d() {
            Array(a8);
            let v12 = 0;
            do {
                v12++;
            } while (v12 < 4)
            return 1578;
        },
        __proto__: v5,
    };
    return o19;
}
const v20 = f6("1154646005", "symbol", "NEGATIVE_INFINITY");
const v22 = f6("NEGATIVE_INFINITY", 1578, f6("NEGATIVE_INFINITY", f6, "symbol"));
const v23 = [Array,v20,"1154646005"];
const v24 = [v22,"1154646005",1578];
[1578,f6,f6,v24,v24];
const v31 = 4294967297 && 4294967297;
let v32 = !v31;
++v32;
new Array(v31);
let v35;
try { v35 = ("1154646005").normalize(); } catch (e) {}
let v36;
try { v36 = new v35(-128, "NEGATIVE_INFINITY", v24); } catch (e) {}
try { new f6(v36, v20, ...v36, ...v23); } catch (e) {}
try {
    Array[1] = v31;
} catch(e38) {
}
