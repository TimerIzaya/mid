try {
    new Uint8ClampedArray(257);
} catch(e3) {
}
try {
    new Int16Array(221);
} catch(e7) {
}
try {
    new Uint8Array(0);
} catch(e11) {
}
function f12(a13, a14, a15) {
    const o25 = {
        "g": a14,
        "d": 0,
        m(a17, a18, a19, a20) {
            a18[4] = a20;
            super.b?.[Uint8ClampedArray];
            const v24 = new WeakMap();
            return v24;
        },
        841: a14,
    };
    return o25;
}
const v26 = f12(221, 0, 0);
const v27 = f12(0, 257, 221);
f12(0, 0, 257);
class C29 extends Uint8Array {
    constructor(a31, a32) {
        super(a31);
        function f33() {
            return v27;
        }
        super.byteLength;
    }
    0 = Uint8Array;
}
new C29(221, 221);
const v39 = new C29(257, 0);
const v40 = new C29(0, 221);
let v41 = 0;
while (v41 < 8) {
    v26[2497384007];
    v39[268435440];
    v40["keys"]();
    v41++;
}
