const v0 = [1719410896,-8187,12868,14,1554715992,-13,2147483649,1021644007];
const v1 = [536870912,512];
const v2 = [65535,17627,-2143682354,-9223372036854775808,-128,2];
class C3 {
    valueOf(a5) {
        const v6 = this * v2;
        const o7 = {
        };
        try {
            o7.e = v6;
        } catch(e8) {
        }
        try {
            const o9 = {
            };
            o9.e = v6;
            o9.f = v6;
        } catch(e10) {
        }
        try {
            const o11 = {
            };
            o11.e = v6;
            o11.f = v6;
            o11.b = v0;
        } catch(e12) {
        }
        try {
            const o13 = {
            };
            o13.e = v6;
            o13.f = v6;
            o13.g = v6;
        } catch(e14) {
        }
        return a5;
    }
}
new C3();
const v16 = new C3();
const v17 = new C3();
function F19(a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a21;
    } catch(e23) {
    }
    try {
        this.g = a21;
    } catch(e24) {
    }
}
const v25 = new F19(v17, v16);
new F19(v25, v16);
new F19(v25, v25);
let v28;
try { v28 = v1.join(v0); } catch (e) {}
try { v2.fill(v28); } catch (e) {}
try {
    v16[3] = v25;
} catch(e30) {
}
v17 & v16;
v28?.c;
const o33 = {
};
try {
    new Proxy(v16, o33);
} catch(e36) {
}
