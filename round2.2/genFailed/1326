const v0 = [];
try {
    new Uint8Array(3916);
} catch(e4) {
}
try {
    new Int16Array(88);
} catch(e8) {
}
try {
    new Uint8ClampedArray(11);
} catch(e12) {
}
[-2.2250738585072014e-308,-513238.5903749783,-1e-15,4.712428609671003,-4.570759423303994e+307,5.0,-328.3137213214668];
const v14 = [-1000000000.0,0.6591327983165152,264194.5723729215,-1000000000.0,1000000000000.0,4.0,0.17235895909866294,Infinity,0.1048420462060996];
const v15 = [2.0,1000000000000.0,1.581999633436147e+308,1000.0,-0.0,4.0,0.36246250507815014,2.0,-1.6298912224397215e+308];
class C16 extends Uint8Array {
    static get b() {
        super.buffer;
        const v19 = super.byteLength;
        try {
            v0[88] = this;
        } catch(e21) {
        }
        return v19;
    }
    static #g;
    static [-2];
    #b;
    11;
}
const v22 = new C16();
new C16();
new C16();
3916 !== v15 ? 3916 : v15;
v22[v15] >>= 11;
try {
    v22.__proto__ = v0;
} catch(e27) {
}
try {
    v0.g = v14;
} catch(e28) {
}
