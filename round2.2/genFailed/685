const v1 = new WeakSet();
const v2 = [-Infinity,37679.5391437707,-Infinity,409.20498656025393,-4.0,-745841.6996572618,5.0,0.7028558900228202,-0.0,-7.336392636266458];
[-0.4229631372199947,1000000000.0,-1000000000000.0,9.992027947874679,1.1041980644987032e+308,-5.0,-2.981576825713053e+307];
const v4 = [-2.0,-9.529083020017,-1.0,-4.0,2.5826098754312187e+307,-903110.1692126802,1.1940456832661963e+308,0.6218364569117274,0.703456999923239,122869.56212687772];
class C5 extends WeakSet {
    b = WeakSet;
    static f = v2;
    constructor(a7) {
        super(v2);
        function F8(a10, a11) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.f = a10;
            } catch(e12) {
            }
            try {
                this.c = WeakSet;
            } catch(e13) {
            }
            try {
                this.g = this;
            } catch(e14) {
            }
        }
        const v15 = new F8(v1, this);
        const v16 = new F8(v15, v15);
        new F8(F8, v16);
    }
}
new C5(v2);
new C5(v2);
new C5(v4);
[NaN,0.8714492077512423,0.020859170906390556,-1e-15,-1.216412183991206e+307,-1.0343511378262049e+308,6.025221891531864];
const v22 = [1000000000000.0];
const v23 = [1000.0,2.220446049250313e-16];
try { v1(v22, v22, v23); } catch (e) {}
class C28 extends WeakSet {
    #c = C5;
    c;
    static 10;
}
new C28();
new C28();
new C28();
