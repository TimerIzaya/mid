class C3 {
    constructor(a5) {
        try {
            super[a5] = 1430928546;
        } catch(e6) {
        }
    }
    2;
    #c;
    static #b = 1430928546;
    static #a;
    static #e;
    [1430928546];
    8 = 256;
}
const v7 = new C3(256);
new C3(1430928546);
new C3(1430928546);
class C10 {
    get h() {
        /a\w8/msdui;
        /a(?!bbb|bb)c/gdvy;
        /[mY(?!(a))\1+]/gdu;
        return C3;
    }
    valueOf(a17, a18, a19) {
        const v20 = a18 >>> C3;
        function F21(a23, a24) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.g = 256;
            } catch(e25) {
            }
        }
        new F21(a18, a19);
        new F21(v20, a19);
        new F21(-9223372036854775807, -9223372036854775807);
        return this;
    }
}
const v29 = new C10();
const v30 = new C10();
const v31 = new C10();
function F32(a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a35;
    } catch(e36) {
    }
    try {
        this.g = v7;
    } catch(e37) {
    }
    try {
        this.a = -9223372036854775807;
    } catch(e38) {
    }
}
const v39 = new F32(v31, v31);
new F32(v29, v31);
new F32(v30, v29);
try {
    new C3(7);
} catch(e44) {
}
let v45 = 0;
while (v45 < 10) {
    break;
    Object.defineProperty(v29, "a", { writable: true, configurable: true, value: v39 });
    delete C3?.c;
    v45++;
}
