const v0 = /eg/mdv;
let v1 = /g(?=)/mgsdv;
const v2 = /a*?(x)(x)(x)\2/msui;
class C3 {
    [v2] = v2;
    5 = v2;
    get d() {
        for (const v5 of this) {
            v0 !== this;
            super[this];
        }
        try {
            this.d = this;
        } catch(e8) {
        }
        return v1;
    }
    6;
}
new C3();
const v10 = new C3();
const v11 = new C3();
try {
    new Uint32Array(512);
} catch(e15) {
}
try {
    new Float32Array(3891);
} catch(e19) {
}
try {
    new BigUint64Array(130);
} catch(e23) {
}
class C24 {
    constructor(a26, a27, a28, a29) {
        v11.d;
        let v33 = 9;
        a28++;
        v1--;
        +v1;
        v33++;
    }
    a;
    [v1] = 3891;
    static 127 = v10;
}
new C24(v11, 3891, v1, 512);
const v40 = new C24(v11, 130, v0, 130);
const v41 = new C24(C24, 3891, v2, 130);
try {
    v41.length = 3;
} catch(e43) {
}
function* f44(a45, a46, a47, a48) {
    try {
        v40.fuck([3891,512,a47,C24,C3], /[\011]/mgsdyi, undefined, a46);
    } catch(e53) {
    }
    yield* [a45,a47,v40,3891];
    return v10;
}
f44(3891, 3891, v2, v40);
