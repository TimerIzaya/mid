const v0 = [-915810.0003421002,0.3804473219770399,-2.220446049250313e-16,1.0,-0.0,5.351301705160593e+307,1000.0,-6.930710927016537e+306,0.3221948372472555,-717071.1727227719];
const v1 = [272.8294754727481,1.7631760286512138e+308,-1000000000.0,0.3644564566983435,3.7911587059655516e+307,-2.220446049250313e-16];
const v2 = [555.6373836438765,-5.0,-1000000.0];
const v4 = new Map();
const v5 = [v4,v1,v0];
const v6 = [v1,v1,v2,v4];
const v7 = [v4,v6,Map,v5,v2];
class C8 extends Map {
    static #d = v4;
    [v0] = v2;
    toString(a10, a11) {
        try {
            a11.valueOf = a10;
        } catch(e12) {
        }
        return this;
    }
    [-2] = v1;
    256;
    [Map];
    e = v1;
}
const v13 = new C8();
new C8();
new C8();
const v16 = [v6,v1];
const v17 = [v13,v5,v0,v7,v16];
[v16,v0,v16,v16];
class C20 extends v16.constructor {
    5 = v13;
    static #e;
    g;
}
new C20();
let v24 = 63856;
Math.sinh(-v17);
v24--;
Math.exp(v17);
v17 >>> v24;
Math.acosh(2.220446049250313e-16);
