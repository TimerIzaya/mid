function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = -3.0;
    } catch(e6) {
    }
    try {
        this.d = -759.1754903292738;
    } catch(e7) {
    }
}
const v8 = new F3(-3.0);
let v9 = new F3(2.220446049250313e-16);
const v10 = new F3(2.220446049250313e-16);
function F11(a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a13;
    } catch(e15) {
    }
    try {
        this.g = a13;
    } catch(e16) {
    }
}
new F11(-759.1754903292738, v8);
new F11(-759.1754903292738, v9);
const v19 = new F11(-759.1754903292738, v10);
[-47928.70750194299,5.877237605987446,2.0,NaN,-1.0,-556156.6120286407];
const v21 = [548402.0544555511,1.7976931348623157e+308,0.9012647888382341,-2.2250738585072014e-308,5.0,1000000.0];
[1000.0,-1000.0,-4.1502187811821044e+307,4.3390905528725865e+306,-3.9849468015233285];
try {
    new Int16Array(127);
} catch(e26) {
}
try {
    new Uint16Array(4);
} catch(e30) {
}
try {
    new Int8Array(5);
} catch(e34) {
}
if (v19) {
    127 * -759.1754903292738;
    const v37 = [127,127];
    Reflect.apply(v21.flatMap, v21, v37);
} else {
    try {
        v9 -= v10;
    } catch(e40) {
    }
}
