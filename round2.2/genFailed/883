try {
    new Uint32Array(5);
} catch(e3) {
}
try {
    new Int8Array(1);
} catch(e7) {
}
try {
    new BigInt64Array(0);
} catch(e11) {
}
class C12 extends Int8Array {
    constructor(a14, a15) {
        super(a15, a14, a14);
        const v16 = super.map(a14, this);
        super.buffer ^= a14;
        const o17 = {
        };
        try {
            new Proxy(v16, o17);
        } catch(e20) {
        }
    }
}
new C12(5, 5);
new C12(0, 0);
const v23 = new C12(0, 1);
[BigInt64Array,BigInt64Array,v23,Uint32Array,Uint32Array];
const v25 = [Uint32Array,1];
let v26 = [v25,v25];
class C28 extends v26.constructor {
    40;
    88 = 1;
    [v23] = BigInt64Array;
}
const v29 = new C28();
try {
    v26 += v29;
} catch(e30) {
}
