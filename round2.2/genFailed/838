try {
    new Int16Array(0);
} catch(e3) {
}
let v4 = 128;
try {
    new Uint8ClampedArray(v4);
} catch(e7) {
}
try {
    new Uint32Array(53);
} catch(e11) {
}
const v12 = [53,Uint32Array];
const v13 = [Int16Array,Uint8ClampedArray,v12];
const v14 = [v4,v13,v12];
class C15 {
    static #a = 0;
    constructor(a17, a18, a19, a20) {
        [...v13,...a20];
        const v25 = -1 - -1;
        Math.asinh(v25);
        const v27 = v4++;
        -v25;
        Math.sinh(v27);
        +-3.0 * -3.0;
    }
}
new C15(v13, Uint32Array, v4, v12);
const v33 = new C15(v12, C15, 53, v13);
const v34 = new C15(v14, v12, 0, v33);
with (v34) {
    c = Uint8ClampedArray;
    try { v4(Int16Array, Int16Array); } catch (e) {}
    try {
        v13[3982819652] = 1601383142n;
    } catch(e39) {
    }
}
