const v2 = new Array(255);
try {
    new Int16Array(3);
} catch(e6) {
}
try {
    new Int32Array(1024);
} catch(e10) {
}
try {
    new Int8Array(257);
} catch(e14) {
}
const v15 = [Int32Array,Array,1024,v2];
let v16 = [Array,Int16Array,v15,v15];
[257,Int16Array,Int16Array];
class C18 extends Int16Array {
    constructor(a20, a21) {
        super(a21, 3, a20);
        if (a20 == a21) {
            try {
                this.reduce(Array, /a{1,2}?/u);
            } catch(e25) {
            }
        } else {
            v15.length;
        }
    }
    static d = Int8Array;
    25;
}
new C18(1024, 1024);
new C18(257, 257);
new C18(1024, 3);
if (Int32Array) {
    [0.4657910340652891,0.2022084985645355];
    [3.0,NaN,-4.0,283.784671794469,-857162.3965908801,-1000000.0,2.2250738585072014e-308,-2.2250738585072014e-308,-4.0,-2.0];
    [2.2250738585072014e-308,0.0,1.7976931348623157e+308,819766.1364580926,0.2318678571236218,-2.220446049250313e-16,-144.97747106397378,-1.7976931348623157e+308];
} else {
    const v33 = Array(257);
    try {
        v16 = v33;
    } catch(e34) {
    }
}
