try {
    new Uint32Array(257);
} catch(e3) {
}
try {
    new Int32Array(129);
} catch(e7) {
}
try {
    new BigInt64Array(75);
} catch(e11) {
}
function f12() {
    return Uint32Array;
}
const v13 = [-1.594142324633685,5.0,-1e-15,-1.4471764763906256e+308,1000000000000.0,1000000000000.0,-1000.0];
const v14 = [2.0,-2.2250738585072014e-308,-4.0,-4.119634581370838e+307,2.220446049250313e-16,-Infinity,-2.0,-1000.0,0.7338999906263666,656793.5484219946];
let v15 = [-1000.0,243.1171414778364,-2.2250738585072014e-308,3.0,861.0655057857391,177.42965185200887];
new Map();
let v18 = 0;
do {
    const v19 = new Map(...v14, v18, ...v13, ...v13, f12);
    ({"b":v15,"size":f12,} = v19);
    v19[Symbol.iterator];
    v18++;
} while (v18 < 1)
