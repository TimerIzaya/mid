try {
    new Uint8Array(3);
} catch(e3) {
}
try {
    new Int32Array(1024);
} catch(e7) {
}
try {
    new Uint16Array(7);
} catch(e11) {
}
class C15 extends Uint16Array {
    static g;
    7;
    static p(a17, a18, a19, a20) {
        const v23 = typeof a20 === "function";
        try { ("function")["startsWith"](this, -1092719108, ..."startsWith", v23, ...7, ..."startsWith"); } catch (e) {}
        return Uint16Array;
    }
    constructor(a27, a28) {
        super(a27, a28);
        try {
            super[this] = Uint8Array;
        } catch(e29) {
        }
    }
}
new C15(3, 1024);
new C15(-1092719108, 1024);
const v32 = new C15(-1092719108, -1092719108);
const v33 = [v32,v32];
[-1727762245,7];
[-1727762245];
Object.defineProperty(v33, "a", { configurable: true, value: v33 });
try {
    new Uint16Array(3);
} catch(e39) {
}
try {
    new Uint8Array(2908);
} catch(e43) {
}
try {
    new BigUint64Array(2);
} catch(e47) {
}
