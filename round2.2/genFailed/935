class C3 {
    static a = "number";
    constructor(a5) {
        const v8 = Reflect.construct(a5, [a5,"number",a5,-1762,Reflect], a5);
        try {
            super.toString(Reflect, v8);
        } catch(e10) {
        }
    }
    static {
        try {
            this.length = 2;
        } catch(e13) {
        }
    }
}
new C3(1000000.0);
let v15 = new C3("number");
new C3(v15);
function f17() {
    return "number";
}
try {
    new Uint8ClampedArray(1000);
} catch(e21) {
}
try {
    new Uint16Array(6);
} catch(e25) {
}
try {
    new BigInt64Array(64);
} catch(e29) {
}
try {
    v15 = "number";
} catch(e31) {
}
function F32(a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a34;
    } catch(e36) {
    }
    try {
        this.h = undefined;
    } catch(e37) {
    }
    try {
        this.f = a34;
    } catch(e38) {
    }
}
new F32(1000, -1762);
new F32(6, -1762);
new F32(1000, 64);
