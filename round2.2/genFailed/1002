function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 9;
    } catch(e3) {
    }
    try {
        this.h = 9;
    } catch(e4) {
    }
    try {
        this.e = 9;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
const v9 = /(?:ab)|cdefoo(?!bar)baz/mgsduyi;
const v10 = /a{0,1}?/mdui;
const v11 = /xyz{93}/gsuyi;
function f12(a13, a14, a15, a16) {
    const o17 = {
        2: v8,
        "a": v6,
        9: v10,
        3: a14,
        ...a13,
        ...a15,
        ...a15,
        247: a15,
        "g": v7,
        "d": a14,
        "c": a13,
        [a16]: a16,
        "f": a13,
        __proto__: v11,
    };
    return o17;
}
const v18 = f12(v10, v11, v7, v8);
f12(v11, v11, v8, v7);
const v20 = f12(v9, v9, v7, v8);
try {
    new Int32Array(86);
} catch(e24) {
}
try {
    new Uint8ClampedArray(255);
} catch(e28) {
}
try {
    new Uint8ClampedArray(6);
} catch(e32) {
}
let v33;
try { v33 = v6.setUTCMilliseconds(); } catch (e) {}
try { v9.test(6, 86, ...v6, v20, 86, v8); } catch (e) {}
if (v33) {
    255 >>> v33;
    try {
        v10.exec("undefined");
    } catch(e38) {
    }
} else {
    v11[6] * v18;
}
