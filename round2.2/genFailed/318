function f0() {
    const o9 = {
        "e": -276.33191988760905,
        [-276.33191988760905]: 1000.0,
        [50660]: 50660,
        set a(a5) {
            try { new a5(-276.33191988760905, this, this, -276.33191988760905); } catch (e) {}
            a5?.a;
            try {
                this[-1] = 50660;
            } catch(e8) {
            }
        },
    };
    return o9;
}
f0();
const v11 = f0();
const v12 = f0();
new Array(165);
try {
    new Uint8ClampedArray(1472);
} catch(e19) {
}
try {
    new Float32Array(22);
} catch(e23) {
}
try {
    new Uint16Array(1000);
} catch(e27) {
}
function f28() {
    return Float32Array;
}
Array.prototype >>= 1472;
if (v12 >= f28) {
    try {
        v12.fuck(Uint8ClampedArray, Float32Array);
    } catch(e31) {
    }
} else {
    let v32;
    try { v32 = v11.n(f28, f28, 1472, v11); } catch (e) {}
    v32.__proto__;
}
