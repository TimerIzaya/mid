class C6 {
    g;
    static {
        function F8(a10, a11, a12, a13) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.a = 16;
            } catch(e14) {
            }
        }
        const v15 = new F8(65536, 16, 16, 169873924);
        new F8(this, 65536, 16, 65536);
        new F8(v15, 16, 16, 65536);
    }
    #c;
    a;
}
new C6();
new C6();
new C6();
[0.5091165073285886,-1000000000000.0,1.0,-1.815124833900125,1000000000.0,-673138.3366806405,559.0476813898954];
const v22 = [-712569.759974356,-0.0,0.3576665564147802];
[-7.982108117338988e+307,1000000000.0,-513900.2133340476,-0.0,-9.244679777953709e+305];
[-22709,2147483649,-12,1864391676,1504062062,2052007086,-1170464832,50392];
const v25 = [4,-2,231849435,9223372036854775807,-9223372036854775808];
const v26 = [8,268435439,-1747891109,-16901,-33796,2,4,2006768485];
for (let [v27,v28,v29,...v30] of v22) {
    class C31 extends C6 {
        static [v22] = C6;
    }
    new C31();
    new C31();
    new C31();
}
try {
    v26[65536] = v25;
} catch(e35) {
}
