let v1 = NaN;
const v3 = [-783811356,64,4,128,-502839835,64,1794308137];
const v4 = [-8,-1];
const v5 = [4,-2147483647,255];
function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v1;
    } catch(e12) {
    }
    try {
        this.h = v4;
    } catch(e13) {
    }
}
new F6(v1, v4, v1, v1);
new F6(8.953427751745398, v5, 8.953427751745398, v1);
const v16 = new F6(8.953427751745398, v4, v1, 8.953427751745398);
delete v16?.h;
const v21 = [268435456,268435456];
const v22 = [0];
[-9,1448375213,4979,-1251159067,0,10572];
for (let [v24,v25,,v26] of v22) {
    try { v25.n(v26); } catch (e) {}
    v3.length;
    v21.length;
}
try {
    v1 = 8.953427751745398;
} catch(e30) {
}
