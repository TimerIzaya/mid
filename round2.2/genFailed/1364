function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 1073741823;
    } catch(e3) {
    }
}
new F0();
new F0();
const v6 = new F0();
function f7() {
    return v6;
}
class C11 {
    valueOf(a13, a14, a15) {
        for (let i17 = 0; i17 < 9; i17++) {
            const v24 = Symbol.asyncIterator;
            a15[v24] = v24;
        }
        return a15;
    }
}
new C11();
new C11();
new C11();
try {
    new F0();
} catch(e32) {
}
const v35 = Reflect.construct(C11, [], F0);
Reflect.construct(v35, [], v35);
