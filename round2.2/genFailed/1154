function f0() {
    const o11 = {
        m(a5) {
            try { a5(a5, this, a5, 21601n); } catch (e) {}
            try {
                a5 = this;
            } catch(e10) {
            }
            return 289705047n;
        },
        "f": "m",
    };
    return o11;
}
const v12 = f0();
const v13 = f0();
f0();
const v15 = [7.210563193395917,-0.0,-0.8420681140950492,-1.703812025436867e+308];
const v16 = [0.7236872020358707];
const v17 = [917.3053730257695,1000000000.0];
class C18 extends f0 {
    static valueOf(a20, a21, a22, a23) {
        v16[Symbol.isConcatSpreadable];
        return a23;
    }
    static p(a28, a29, a30) {
        super.m(a28, v17, a30, this);
        function f32() {
            return a29;
        }
        return v12;
    }
}
new C18();
new C18();
const v35 = new C18();
v35 >>> 2147483647n;
const v40 = v12 % -1516202040n;
try {
    v17[v13] = v40;
} catch(e41) {
}
v17 | v15;
v12 / v16;
try {
    v17[2516497753] = v17;
} catch(e44) {
}
