try {
    new Int16Array(4);
} catch(e3) {
}
try {
    new BigInt64Array(177);
} catch(e7) {
}
try {
    new Float64Array(5);
} catch(e11) {
}
const v13 = new Map();
[v13,Float64Array,4];
[BigInt64Array,5,Map,5,Map];
const v16 = [Map,177,Float64Array];
class C17 extends Float64Array {
    static #o(a19, a20, a21, a22) {
        try {
            const o24 = {
            };
            a20.every(a19, o24);
        } catch(e26) {
        }
        return this;
    }
    2088 = 5;
    [Float64Array];
    static c;
}
new C17();
new C17();
const v29 = new C17();
v16[6] &&= 177;
function f31(a32) {
    v16[4103807707];
    try {
        a32.d = v29;
    } catch(e36) {
    }
    return arguments;
}
f31(v16);
