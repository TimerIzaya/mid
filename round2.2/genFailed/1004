function f0() {
    const o13 = {
        valueOf(a5, a6) {
            const v7 = this[101];
            const v8 = [v7,14,v7,"c","c"];
            const v9 = [14,v8,v8];
            ([v8])["findLastIndex"](v7, v9);
            return v9;
        },
        [14]: "c",
        "c": "c",
        "a": 14,
        "d": 14,
        "g": 14,
    };
    return o13;
}
const v14 = f0();
const v15 = f0();
const v16 = f0();
-Infinity;
const o27 = {
    [v14]: true,
};
v16 << o27;
new f0();
let v30 = 0;
do {
    Object.defineProperty(v15, "b", { enumerable: true, get: f0, set: f0 });
    try { v16.valueOf(); } catch (e) {}
    v30++;
} while (v30 < 2)
