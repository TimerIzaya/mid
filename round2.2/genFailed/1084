let v2 = -1073741824;
class C3 {
    toString(a5) {
        for (let v6 = 0; v6 < 32; v6++) {
            this["p" + v6] = v6;
        }
        return this;
    }
    o(a10, a11) {
        function F12(a14, a15) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.h = a15;
            } catch(e16) {
            }
            try {
                this.c = a15;
            } catch(e17) {
            }
            try {
                this.f = a11;
            } catch(e18) {
            }
        }
        const v19 = new F12(-2.220446049250313e-16, F12);
        new F12(v19, F12);
        new F12(v2, this);
        return -2.220446049250313e-16;
    }
}
new C3();
new C3();
const v24 = new C3();
new Set();
[374.73538429915175,-3.8405439744029267e+307,0.9988426257492574,339993.5525543222,-1000000.0,-1.7976931348623157e+308,-2.2250738585072014e-308,1e-15];
[522437.65673790895,0.978698418160859];
[-3.1553711506379774];
try {
    new Uint8Array(35);
} catch(e33) {
}
try {
    new Uint8ClampedArray(1000);
} catch(e37) {
}
try {
    new Uint8Array(2454);
} catch(e41) {
}
const v42 = new Set(v24);
for (let v43 = 0; v43 < 16; v43++) {
    [v43,v43,...v2] = v42;
}
const v47 = 2454;
Uint8ClampedArray > v47;
try {
    new BigUint64Array(3404);
} catch(e52) {
}
try {
    new Int32Array(2689);
} catch(e56) {
}
try {
    new Int16Array(14);
} catch(e60) {
}
