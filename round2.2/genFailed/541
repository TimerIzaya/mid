function f0() {
    const o15 = {
        10000: 7832,
        o(a5, a6) {
            const v9 = new Array(3180);
            try { a5(a6, ...7832, this, a5, a6, ...NaN); } catch (e) {}
            const o11 = {
            };
            try {
                new Proxy(v9, o11);
            } catch(e14) {
            }
            return a6;
        },
    };
    return o15;
}
const v16 = f0();
const v17 = f0();
const v18 = f0();
class C19 {
    get d() {
        with (this) {
            try { d(this, f0, v17, d); } catch (e) {}
            try {
                super[d] = f0;
            } catch(e23) {
            }
        }
        return v18;
    }
    static #h = v17;
    static [f0] = v17;
}
new C19();
const v25 = new C19();
const v26 = new C19();
function f27(a28, a29, a30) {
    const o41 = {
        ...C19,
        [f0]: a30,
        "f": a28,
        n(a32, a33, a34, a35) {
            a33--;
            const v37 = [this,a30,a28];
            [v16,[v25,this,v16,a28],a33,v37];
            const v40 = new C19();
            a30.h /= a35;
            return v40;
        },
        "a": a30,
    };
    return o41;
}
const v42 = f27(v26, v25, v18);
const v43 = f27(v25, v25, v16);
f27(C19, C19, v16);
class C45 {
    #e = v43;
    static valueOf(a47, a48, a49) {
        a48 ^ v42;
        return C19;
    }
    constructor(a55, a56) {
        function F57(a59, a60) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.b = v16;
            } catch(e61) {
            }
            try {
                this.h = this;
            } catch(e62) {
            }
            try {
                this.g = v42;
            } catch(e63) {
            }
        }
        const v64 = new F57(v16, v16);
        const v65 = new F57(v16, v16);
        new F57(v65, v64);
    }
}
const v67 = new C45(v16, v42);
new C45(v67, v42);
new C45(v26, v42);
try {
    f0();
} catch(e71) {
}
try {
    C45 /= v25;
} catch(e72) {
}
const o76 = {
    "execution": "async",
    "type": "minor",
};
gc(o76);
