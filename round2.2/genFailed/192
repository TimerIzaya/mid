try {
    new BigUint64Array(64);
} catch(e3) {
}
try {
    new Int16Array(1000);
} catch(e7) {
}
try {
    new Uint32Array(128);
} catch(e11) {
}
class C15 {
    constructor(a17, a18, a19, a20) {
        const v24 = -972023161;
        this[v24];
        /(?:a+)*NAxyz{93}/mgsvy;
        /[^(?:ab)|cde]/msvyi;
        /a\wabc|def1a(?!b)/msduy;
    }
    set a(a30) {
        this[Symbol.hasInstance] = 128;
    }
}
const v33 = new C15(1000, 4n, 64, -30340n);
const v34 = new C15(64, -30340n, 1000, 24092n);
new C15(1000, 24092n, 64, 4n);
try {
    new Float64Array(129);
} catch(e39) {
}
try {
    new Uint32Array(4);
} catch(e43) {
}
try {
    new BigUint64Array(2075);
} catch(e47) {
}
v33 !== BigUint64Array ? v33 : BigUint64Array;
for (let v53 = 0; v53 < 62; v53++) {
    delete v34?.a;
    268435441 && 1570454910;
    Math.sinh(47561.37421987241);
    Math.min(C15);
    v53 >>> C15;
    !v53;
}
