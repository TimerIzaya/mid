try {
    new Uint8Array(1212);
} catch(e3) {
}
try {
    new Uint16Array(2);
} catch(e7) {
}
try {
    new Uint8Array(128);
} catch(e11) {
}
try {
    new Float64Array(900);
} catch(e18) {
}
try {
    new Int32Array(1674);
} catch(e22) {
}
try {
    new Uint16Array(257);
} catch(e26) {
}
if (-29816n) {
    e = Uint16Array;
    2 in 128;
} else {
    const v28 = new Uint8Array(1674, 128);
    try {
        v28.toString = v28;
    } catch(e29) {
    }
}
