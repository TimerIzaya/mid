try {
    new Uint8Array(128);
} catch(e6) {
}
try {
    new Uint32Array(135);
} catch(e10) {
}
try {
    new Float64Array(1);
} catch(e14) {
}
const v16 = new Set();
class C17 {
    constructor(a19, a20, a21, a22) {
        a20[Symbol.hasInstance] = -4294967296n;
        let v27 = 64;
        +1073741824;
        a20 / a20;
        Math.log10(--v27);
    }
    257;
    static 244663544 = v16;
}
new C17(-1983265207n, Uint32Array, -1983265207n, 1);
new C17(-4294967296n, v16, -4294967296n, 135);
const v34 = new C17(-1983265207n, 135, -1983265207n, 135);
try { v34.valueOf(1, Set, 1000.0); } catch (e) {}
Math.asin(135);
const v43 = 127 && Float64Array;
Math.pow(Float64Array, v43);
Math.tan(1000000000000.0);
v43 << v43;
