class C3 {
    static #f = "a";
    constructor(a5, a6) {
        super.b;
        [9007199254740992,-7,129,256,-21607,-152907166,2147483647,-1226171988,-188583832];
        [-10021,-999676441,-8,882463521,-9007199254740990,2,-2058491361];
        [-912237532,128,536870912,1989564060,648459076];
    }
    #toString(a12) {
        let v13;
        try { v13 = a12(-9007199254740990, a12, a12); } catch (e) {}
        const v14 = v13?.g;
        function F15(a17, a18, a19) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = a17;
            } catch(e20) {
            }
            try {
                this.d = -9007199254740990;
            } catch(e21) {
            }
            try {
                this.h = "object";
            } catch(e22) {
            }
        }
        new F15(-9007199254740990, this, F15);
        const v24 = new F15(v14, F15, -9007199254740990);
        new F15(this, F15, "object");
        return v24;
    }
}
new C3("a", -9007199254740990);
const v27 = new C3("object", "a");
new C3(v27, "object");
[8.420006356980053,808203.6385414449,1.1676460802522257,-5.0,-4.684040888152321,-1000000000.0,1e-15,600950.7988543285,2.0,-Infinity];
[-2.849593425178928e+307,-9.275536935496411e+307,1.0];
let v31 = [0.04976241161710793,-1000000.0];
try {
    new Uint32Array(3799);
} catch(e35) {
}
try {
    new BigInt64Array(2357);
} catch(e39) {
}
try {
    new Int8Array(2013);
} catch(e43) {
}
let v44 = 0;
while (v44 < 4) {
    new BigInt64Array(v31);
    const v51 = v31 || v31;
    6 << v51;
    Math.asin(v31);
    v31++;
    Math.log2(v51);
    Math.sinh(v31);
    v31 && -128;
    v44++;
}
