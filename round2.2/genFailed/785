const v0 = [1000000.0,-5.0,3.419809466592576e+307,-88.640509923497,1000.0,-1.0248071512902506,9.331895447861413,NaN,787409.8907038732];
[1000000000000.0,1.7976931348623157e+308,-479.1528353427095];
let v2 = [6.957263618355626,-846524.3513482863,1000000000000.0];
const v3 = /a+b/di;
/k/mi;
/\P{gc=Decimal_Number}\w|\d[6u]+/mvi;
try {
    new Uint32Array(255);
} catch(e12) {
}
try {
    new Uint8Array(10);
} catch(e16) {
}
try {
    new Float32Array(3848);
} catch(e20) {
}
try { Float32Array("isConcatSpreadable", 255); } catch (e) {}
v3["compile"]("zx");
for (let [v24] of v0) {
    try {
        v2 = v24;
    } catch(e25) {
    }
    try {
        v24 += v24;
    } catch(e26) {
    }
}
