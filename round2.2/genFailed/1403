function f0() {
    const o8 = {
        [-15]: -8.052313081432843e+307,
        1520271500: -8.052313081432843e+307,
        __proto__: -8.052313081432843e+307,
        [-15](a5) {
            try {
                super.padStart(-15, this, this);
            } catch(e7) {
            }
            return -8.052313081432843e+307;
        },
        ...-15,
        "d": -8.052313081432843e+307,
        "e": -15,
        5: -8.052313081432843e+307,
        "g": -15,
    };
    return o8;
}
f0();
const v10 = f0();
f0();
try {
    new Float64Array(0);
} catch(e15) {
}
try {
    new Uint32Array(10);
} catch(e19) {
}
try {
    new Int16Array(1540);
} catch(e23) {
}
class C27 extends Uint32Array {
    1073741824 = v10;
    valueOf(a29, a30, a31) {
        [2.2250738585072014e-308,0.0,4.0,21660.978516542935];
        [-1000000.0,-2.220446049250313e-16,0.0,-2.5504215693678773,1.7976931348623157e+308,-5.0,-8.574492131135678,-1e-15];
        [5.8196353285260845,0.3232438378345617,-1000000000.0];
        try {
            f0();
        } catch(e36) {
        }
        return 16;
    }
    static 65536 = -16;
    e = 0;
    [0];
    7 = 0;
}
const v37 = new C27();
const v38 = new C27();
const v39 = new C27();
try {
    v38[v39] = 16;
} catch(e40) {
}
for (const v41 in v10) {
    for (let v42 = 0; v42 < 100; v42++) {
        f0();
    }
}
try { C27.getInt16(v37, C27, v39); } catch (e) {}
