const v1 = new Map();
function f2() {
    return Map;
}
function f3() {
    return v1;
}
class C4 extends f2 {
    get f() {
        try {
            v1.size = this;
        } catch(e6) {
        }
        Object.defineProperty(v1, 5, { set: f3 });
        v1[Symbol.asyncIterator];
        return this;
    }
    static 1073741823;
    [f2] = f3;
}
new C4();
new C4();
new C4();
[1024];
[-35687];
const v18 = [-1041872790,-3,57288];
class C20 extends f2 {
    #c = 512;
    static [v18];
}
const v21 = new C20();
new C20();
new C20();
try {
    v21[f2] = v1;
} catch(e24) {
}
