class C3 {
    get b() {
        return 64;
    }
    n(a9) {
        let v10;
        try { v10 = this.m(-256, this, this, 64); } catch (e) {}
        super.h += a9;
        try {
            v10[v10] = 64;
        } catch(e11) {
        }
        return this;
    }
}
new C3();
const v13 = new C3();
new C3();
function f18() {
    return C3;
}
try {
    new Uint8ClampedArray(19);
} catch(e22) {
}
try {
    new BigUint64Array(3);
} catch(e26) {
}
try {
    new Int16Array(4);
} catch(e30) {
}
let v33 = 39255n;
new C3();
Math.sqrt(-(v33++));
!v13;
Math.abs(852781448);
