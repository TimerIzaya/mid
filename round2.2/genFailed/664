const v3 = [57335,16,57335,57335];
const v4 = [57335,-424730187,57335,v3,-424730187];
const v5 = [v3,v3];
class C6 {
    [v5];
    toString(a8, a9, a10) {
        try {
            a8[v4] = v4;
        } catch(e11) {
        }
        const v13 = 16 / (a10 << 16);
        try {
            super[v13] = 16;
        } catch(e14) {
        }
        return a10;
    }
    #f = 16;
}
const v15 = new C6();
const v16 = new C6();
const v17 = new C6();
class C18 extends C6 {
    static #m(a20, a21, a22, a23) {
        16 << a22;
        new C6();
        v16.d;
        return v17;
    }
    constructor(a29, a30, a31) {
        let v28 = this;
        super();
        try {
            v28 = a31;
        } catch(e32) {
        }
        new C6();
    }
}
new C18(16, v4, v3);
const v35 = new C18(16, v3, v4);
const v36 = new C18(-424730187, v17, v5);
const v38 = [57335,v5,C6,v35,[v36,v36,v15]];
[v3,v3,v38,v38,v17];
try {
    new Uint32Array(3748);
} catch(e43) {
}
try {
    new BigInt64Array(15);
} catch(e47) {
}
try {
    new Float32Array(237);
} catch(e51) {
}
