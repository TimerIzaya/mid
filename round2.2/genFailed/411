class C3 {
    static #p(a5) {
        try {
            super.trimEnd(-0.07943345325381479, -7.575032990049588, -7.575032990049588, this, a5);
        } catch(e7) {
        }
        let v10 = this * -0.07943345325381479;
        Math.log(9007199254740991);
        const v12 = -a5;
        ++v10;
        Math.log1p(a5);
        9007199254740991 && v12;
        !9007199254740991;
        return v10;
    }
}
const v17 = new C3();
const v18 = new C3();
new C3();
try {
    new BigInt64Array(2038);
} catch(e23) {
}
try {
    new BigUint64Array(3);
} catch(e27) {
}
try {
    new Uint8ClampedArray(233);
} catch(e31) {
}
const v33 = new Date();
let v34 = 0;
while (v34 < 3) {
    Date(v34, v18, BigInt64Array, v17);
    Object.defineProperty("MIN_SAFE_INTEGER", "e", { configurable: true, enumerable: true, get: Date });
    v34++;
}
v33[Symbol.match];
