const v0 = [];
const v1 = [-268435456,38455,14];
const v2 = [-49366,10771,7,-33676,39548,9007199254740990,536870912,1000,-80036114,268435440];
const v3 = [4294967295,-701002953,-57285,26788];
function F4(a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = v0;
    } catch(e8) {
    }
    try {
        this.d = v2;
    } catch(e9) {
    }
    try {
        this.g = a6;
    } catch(e10) {
    }
}
new F4(v1, v1);
new F4(v2, v1);
const v13 = new F4(v1, v1);
class C17 extends F4 {
    [v0] = v3;
    #c;
    static #m(a19, a20, a21, a22) {
        super.g;
        [1436486403,-1024];
        [65535,-1945702595,1692209283,-2,1073741823,65535,702365519,9];
        return [536870912,14,-63358116,268435441];
    }
    [v13];
    static a;
    #e = v1;
    #h;
}
const v27 = new C17();
const v28 = new C17();
const v29 = new C17();
for (const v30 in v29) {
    v0["toSorted"](..."toSorted", v28, ..."toSorted", v30, C17);
    v27 instanceof F4;
}
const o36 = {
    "maxByteLength": 1073741825,
};
const v38 = new SharedArrayBuffer(8, o36);
try {
    new Uint16Array(v38);
} catch(e41) {
}
