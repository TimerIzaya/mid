class C3 {
    [-3.0] = -3.0;
    #c = -3.0;
    constructor(a5, a6) {
        /mJz[xyz]/sdu;
        /[]w[\0]/msvyi;
        /f?/gdyi;
    }
    d = -2.0;
    static [-2.0];
    static [-3.0];
    #a = -2.0;
    #d = -2.0;
    static 3981 = -2.0;
}
new C3(-3.0, 1000000000.0);
const v11 = new C3(1000000000.0, -2.0);
new C3(-2.0, 1000000000.0);
[1073741824,291015513,-14,536870912,-2];
const v14 = [268435441,536870888,64,5,-1979356354,15,-2147483649,128,-1159552134,4];
[-4];
const v19 = v14 - 9n;
const v22 = [];
Reflect.construct(h, v22, C3);
e = v11;
try { h(v22, v11, v19); } catch (e) {}
let v26 = -256;
Math.sin(h);
Math.round(h);
v14 && v14;
v26++;
++v26;
NaN ** v26;
