/[abc|def|ghiq*]/mguy;
/[x\dz]/mgsdvyi;
const v2 = /[^\w|\d]/mvy;
try {
    new Uint8Array(0);
} catch(e6) {
}
let v7 = 109;
try {
    new BigUint64Array(v7);
} catch(e10) {
}
try {
    new Float32Array(16);
} catch(e14) {
}
try {
    new Uint8Array(811);
} catch(e18) {
}
try {
    new BigUint64Array(16);
} catch(e22) {
}
try {
    new Int8Array(144);
} catch(e26) {
}
try {
    v7 >>= 811;
} catch(e27) {
}
v2[811] **= 811;
const o28 = {
};
try {
    o28.g = BigUint64Array;
} catch(e29) {
}
try {
    const o30 = {
    };
    o30.g = BigUint64Array;
    o30.a = Float32Array;
} catch(e31) {
}
try {
    const o32 = {
    };
    o32.g = BigUint64Array;
    o32.a = Float32Array;
    o32.e = v7;
} catch(e33) {
}
try {
    const o34 = {
    };
    o34.g = BigUint64Array;
    o34.a = Float32Array;
    o34.c = 811;
} catch(e35) {
}
