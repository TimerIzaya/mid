try {
    new BigUint64Array(257);
} catch(e3) {
}
try {
    new Int32Array(7);
} catch(e7) {
}
try {
    new Float64Array(159);
} catch(e11) {
}
try {
    new Uint8ClampedArray(109);
} catch(e18) {
}
try {
    new Int16Array(0);
} catch(e22) {
}
try {
    new Int8Array(128);
} catch(e26) {
}
let v27;
try {
const t0 = 257;
v27 = t0(9n, -1n, 0);
} catch (e) {}
const v29 = delete b?.[Float64Array];
`-9223372036854775808${159}p${Float64Array}string${Uint8ClampedArray}getBigInt64`;
for (const v31 of v27) {
    c = 159;
    let v32;
    try { v32 = v29(v29, v31, Int16Array, v29); } catch (e) {}
    try {
        v31[v32] = v32;
    } catch(e33) {
    }
}
