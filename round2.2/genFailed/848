try {
    new Int16Array(16);
} catch(e6) {
}
try {
    new Uint16Array(1688);
} catch(e10) {
}
try {
    new Int8Array(5);
} catch(e14) {
}
try {
    new BigUint64Array(2993);
} catch(e18) {
}
try {
    new Int8Array(136);
} catch(e22) {
}
try {
    new Uint8Array(3079);
} catch(e26) {
}
try { ("string").substring(1688, 1688); } catch (e) {}
const v29 = Symbol.match;
const v30 = ("valueOf")[v29];
const v31 = new BigUint64Array(136, 5, 5);
v31.values(3079, Uint8Array, ..."106", 2993, 1688, Int16Array);
v30 >= v30 ? v30 : v30;
Object.defineProperty("string", Uint16Array, { writable: true, configurable: true, value: v29 });
