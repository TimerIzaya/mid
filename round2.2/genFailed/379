let v2 = 1000.0;
class C3 {
    constructor(a5, a6) {
        a5 ** v2;
        function f8(a9, a10, a11) {
            this[4] >>= a6;
            return a10;
        }
        f8(-1.0, a6, -1.0);
    }
    #o(a14) {
        const o15 = {
        };
        try {
            new Proxy(this, o15);
        } catch(e18) {
        }
        return 9.515888049036455e+307;
    }
}
const v19 = new C3(9.515888049036455e+307, 9.515888049036455e+307);
new C3(v19, v2);
new C3(C3, -1.0);
const v22 = [536870889];
[-2,9223372036854775807,1073741824];
const v24 = [3,20064,1,8,-16,1174944605,790846690,64,-4096];
const v25 = [v22];
[v24,v24];
[C3,v22,v25];
class C28 {
    static #valueOf(a30, a31, a32, a33) {
        try { a31(this); } catch (e) {}
        v22[16];
        super.h;
        a32 != v19 ? a32 : v19;
        return a30;
    }
    static #toString(a40, a41) {
        if (a40) {
            [-2.220446049250313e-16,2.0,0.3837269955599617,3.0,226.6519764429438,1000000.0,-9.396836818249587e+307,-1000.0,-2.0];
            [-6.705427674853082e+307,2.0,-2.0,-1000000000000.0,0.40418369700637413,1000000000.0];
            [4.0,9.191415527937412,-58.20878533237294,-624120.9875161003,-3.9809825115466335,0.598350476767944,2.371083414156761,8.350281131264811,-1000000000.0,0.2102383715148033];
        } else {
            const o45 = {
            };
            try {
                new Proxy(v25, o45);
            } catch(e48) {
            }
        }
        return v2;
    }
}
new C28();
const v50 = new C28();
new C28();
try {
    v2 %= -1.0;
} catch(e52) {
}
for (let v53 = 0; v53 < 99; v53++) {
    C28.e;
    delete v25[1073741824];
    Math.sqrt(Infinity);
    ~Infinity;
    v50 | Infinity;
    268435456 & 268435456;
    Math.atan2(v50, 268435456);
    Math.random();
    Math.log2(Infinity);
}
