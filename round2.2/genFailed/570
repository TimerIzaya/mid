try {
    new Float64Array(3900);
} catch(e3) {
}
try {
    new Uint32Array(64);
} catch(e7) {
}
try {
    new BigInt64Array(5);
} catch(e11) {
}
const v13 = new WeakMap();
class C14 extends WeakMap {
    #o(a16, a17, a18, a19) {
        try {
            a17 = this;
        } catch(e20) {
        }
        return 3900;
    }
    constructor(a22, a23, a24, a25) {
        super(v13);
        try {
            new Int8Array(228);
        } catch(e29) {
        }
        try {
            new Float64Array(16);
        } catch(e33) {
        }
        try {
            new Float64Array(1);
        } catch(e37) {
        }
    }
}
const v38 = new C14(5, 64, 5, 3900);
const v39 = new C14(64, 64, 3900, 3900);
const v40 = new C14(3900, 3900, 5, 3900);
try {
    new BigUint64Array(4);
} catch(e44) {
}
try {
    new Uint32Array(8);
} catch(e48) {
}
try {
    new Int32Array(186);
} catch(e52) {
}
function f53(a54, a55, a56, a57) {
    const o58 = {
        "b": v38,
        "d": 64,
        ...v13,
        "f": a54,
        "h": 186,
    };
    return o58;
}
f53(v39, C14, f53(f53(v38, v39, v39, 64), v40, v40, 64), 4);
