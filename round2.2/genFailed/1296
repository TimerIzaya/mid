const v0 = [];
const v1 = [-1.548254829035115e+308,-1000.0,5.457130055027629e+305,0.4621983675316894,144313.33689836226,-3.564664781612848];
[972063.0078207713];
const v3 = [7.252114155682441e+307];
class C4 {
    n(a6, a7) {
        a6[this] &= this;
        return v3;
    }
    toString(a9) {
        function F10(a12, a13) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.f = a13;
            } catch(e14) {
            }
            try {
                this.d = v0;
            } catch(e15) {
            }
        }
        new F10(a9, v1);
        new F10(v1, a9);
        new F10(v3, v1);
        return v3;
    }
}
new C4();
const v20 = new C4();
new C4();
try {
    new Uint16Array(4033);
} catch(e25) {
}
try {
    new Int16Array(128);
} catch(e29) {
}
try {
    new Uint8ClampedArray(512);
} catch(e33) {
}
v20 % v20;
const o37 = {
    "maxByteLength": 129,
};
const v39 = new ArrayBuffer(129, o37);
try {
    new Int16Array(v39);
} catch(e42) {
}
