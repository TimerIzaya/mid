try {
    new Float32Array(100);
} catch(e3) {
}
try {
    new Uint16Array(3808);
} catch(e7) {
}
try {
    new Int16Array(2);
} catch(e11) {
}
class C12 {
    static 2;
    #n(a14, a15) {
        const v17 = Symbol.iterator;
        const o26 = {
            [v17]() {
                let v19 = 10;
                const o25 = {
                    next() {
                        v19--;
                        const v23 = v19 == 0;
                        const o24 = {
                            "done": v23,
                            "value": v19,
                        };
                        return o24;
                    },
                };
                return o25;
            },
        };
        return Float32Array;
    }
}
new C12();
new C12();
const v29 = new C12();
[-256,-730759658,256,-11676,-40075];
const v31 = [699565832,9,268435440];
const v32 = [-9007199254740991,2147483647,8,4,9007199254740992,7];
try {
    v32[v31] = Uint16Array;
} catch(e33) {
}
try {
    v29.fuck(C12, undefined, 100, /[^[\cz]]/muyi);
} catch(e37) {
}
