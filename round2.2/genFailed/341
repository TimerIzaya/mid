const v0 = [268435456,-7007,-39733,2101261554,-268435456,268435456,10,-56053];
const v1 = [7,128];
const v2 = [8,-1024,9,-65537,-1060,-4294967295,-12,-16,12,91932543];
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = v2;
    } catch(e7) {
    }
    try {
        this.g = v2;
    } catch(e8) {
    }
}
new F3(v0, v1);
new F3(v2, v2);
new F3(v1, v0);
try {
    new Int16Array(8);
} catch(e15) {
}
try {
    new Uint8Array(127);
} catch(e19) {
}
try {
    new BigUint64Array(3137);
} catch(e23) {
}
const v27 = new BigUint64Array("match");
new BigUint64Array(...v27, Int16Array, ...v27, Int16Array);
try {
    const t32 = "keyFor";
    t32.f = v2;
} catch(e29) {
}
new Uint8Array(3137);
let v33 = -536870912;
v33++;
const v36 = "keyFor" && 1355493019;
Math.fround(F3);
const v38 = v33 * 1355493019;
v36 && 1355493019;
v38 + "keyFor";
