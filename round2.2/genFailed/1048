const v0 = [-4.0,-7137.988984341966,543.7273617429596,-5.0,2.2250738585072014e-308,3.0,378876.17979679373,-1.0,942.5599394291778];
const v1 = [-1000000000000.0];
const v2 = [-1.7976931348623157e+308,-1000000000000.0,868041.4748761291,-922705.1888237223];
function f3() {
    return v2;
}
function f4(a5, a6) {
    const o16 = {
        "d": v0,
        [a5]: a6,
        toString(a8, a9, a10, a11) {
            const v12 = f3();
            /Y\11*/gi;
            /\xed\xa0\x80(?<=)a[a]a|bca(?:b)/gsdvy;
            /tZxn/mgdu;
            return v12;
        },
        "h": v2,
        "c": v1,
        __proto__: v0,
        6: v0,
    };
    return o16;
}
const v17 = f4(v2, v2);
const v18 = f4(v2, v0);
const v19 = f4(v0, v2);
class C20 {
    constructor(a22, a23, a24, a25) {
        for (const v26 in a23) {
            v1.length += a23;
            try {
                v19.c = v1;
            } catch(e27) {
            }
        }
    }
    static [v17];
    static d = v17;
    3;
    [-1];
}
new C20(v0, v19, v17, v1);
const v29 = new C20(v2, v19, C20, v0);
const v30 = new C20(v1, v17, v18, v29);
try {
    v30[129] = C20;
} catch(e34) {
}
try {
    C20.fuck(f4, C20, v1);
} catch(e36) {
}
const o39 = {
    "maxByteLength": 4294967296,
};
const v41 = new SharedArrayBuffer(40, o39);
try {
    new Uint8ClampedArray(v41);
} catch(e44) {
}
