new Date();
new Array(497);
function F8(a10, a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 30221;
    } catch(e13) {
    }
    try {
        this.g = a10;
    } catch(e14) {
    }
    try {
        this.a = a11;
    } catch(e15) {
    }
}
new F8(9007199254740992, 497, 497);
new F8(497, 30221, 30221);
new F8(497, 0, 30221);
const v19 = /E[\cA]/sdvyi;
/V(?<=a)?/msdy;
/Ek(?<a>.)/gvy;
let v22;
try { v22 = v19.exec(v19); } catch (e) {}
v22.__proto__;
const o27 = {
    "apply": Array,
    "construct": Array,
    "deleteProperty": Date,
    "get": Array,
    "getOwnPropertyDescriptor": Date,
    "getPrototypeOf": Array,
    "has": Array,
    "isExtensible": Date,
    "ownKeys": Date,
    "preventExtensions": Date,
};
try {
    new Proxy(Date, o27);
} catch(e30) {
}
