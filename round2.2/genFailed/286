const v1 = new WeakSet();
try {
    new BigInt64Array(1);
} catch(e5) {
}
try {
    new Float32Array(102);
} catch(e9) {
}
try {
    new Uint16Array(8);
} catch(e13) {
}
class C17 extends BigInt64Array {
    static #e;
    257 = 268435440n;
    [BigInt64Array];
    7 = v1;
    static #c = 102;
    toString(a19, a20, a21, a22) {
        try {
            new BigUint64Array(244);
        } catch(e26) {
        }
        try {
            new Uint8ClampedArray(64);
        } catch(e30) {
        }
        try {
            new Uint8ClampedArray(13);
        } catch(e34) {
        }
        return 244;
    }
}
new C17();
const v36 = new C17();
new C17();
for (let v38 = 0; v38 < 66; v38++) {
    [9007199254740990,-1299469408,-398390321];
    [314,536870888,-4294967295,4,56332,-59989,8];
    const v41 = [-1];
    try {
        v41.includes(WeakSet);
    } catch(e43) {
    }
}
v36 !== Uint16Array ? v36 : Uint16Array;
