function f0() {
    let v1 = 5.0;
    const o15 = {
        [v1]: 1073741823,
        [f0]: "string",
        "h": f0,
        [1073741823](a5) {
        },
        valueOf(a7, a8) {
            --v1;
            const v11 = Symbol.toPrimitive;
            const o14 = {
                [v11]() {
                    try {
                        this.toString = a8;
                    } catch(e13) {
                    }
                    return 1073741823;
                },
            };
            return 1073741823;
        },
    };
    return o15;
}
const v16 = f0();
const v17 = f0();
const v18 = f0();
class C19 extends v18 {
    #a;
}
C19.g = C19;
class C21 {
    static #b;
    constructor(a23, a24) {
        try {
            a23.#b = 860736081;
        } catch(e25) {
        }
    }
}
const v26 = [v17,v17,v17,v17];
const v27 = [v26,v16,v26,v17];
[v27,f0,v17,v27,v18];
new Int8Array(4);
new Uint8ClampedArray(4);
new Int32Array(64);
function f38() {
    const o39 = {
    };
    return o39;
}
const v40 = f38();
const v41 = f38();
class C42 {
    constructor(a44, a45) {
        for (let v46 = 0; v46 < 32; v46++) {
            a45["p" + v46] = v46;
        }
    }
}
new C42(v41, v40);
const o50 = {
    ...v40,
};
function f51(a52, a53, a54, a55) {
    %OptimizeFunctionOnNextCall(a54);
    return a53;
}
%OptimizeFunctionOnNextCall(f51);
