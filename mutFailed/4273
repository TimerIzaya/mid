function f0() {
    const v4 = new f0();
    new Float64Array(0);
    const v10 = new Float32Array(257);
    new Uint8Array(128);
    const o32 = {
        "a": -7.961777106260854,
        get e() {
            let v15;
            try { v15 = this.p(this, -7.961777106260854); } catch (e) {}
            v4[v15];
            let [] = v10;
            const v18 = new Map();
            const v22 = [6,-7.961777106260854,v15,9.912411103668674,9.912411103668674];
            e = super.h;
            v15[Uint8Array] = -6.209286209852689;
            v4[f0] ^= 9.912411103668674;
            v18["has"](v22);
            [-7.961777106260854];
            [this,v15,-7.961777106260854,this];
            return -7.961777106260854;
        },
        get d() {
            super.e = -7.961777106260854;
            let v29;
            try { v29 = this.raw(9.912411103668674, this, -7.961777106260854, this, 6); } catch (e) {}
            const v31 = Symbol.replace;
            v29[v31] = v31;
            return 6;
        },
    };
    return o32;
}
f0();
f0();
f0();
const v37 = new WeakMap();
class C38 {
    #c = f0;
    static #e;
    toString(a40, a41, a42, a43) {
        super.e = WeakMap;
        a41 &= f0();
        return v37;
    }
    b = f0;
    static 8;
}
new C38();
new C38();
new C38();
function f54() {
    return f54;
}
const v55 = f54.arguments;
function f56() {
    for (let v57 = 0; v57 < 5; v57++) {
        Array(36862, v55, v57 & v57);
    }
    return f54;
}
%PrepareFunctionForOptimization(f56);
f56();
%OptimizeFunctionOnNextCall(f56);
f56();
