class C3 {
    #valueOf(a5) {
        const o8 = {
            "maxByteLength": 543,
        };
        const v10 = new ArrayBuffer(5, o8);
        new Int16Array(v10);
        return o8;
    }
}
new C3();
const v14 = new C3();
const v15 = new v14();
const v16 = [v15,v15,"iYlxF",v15];
const v17 = ["getTime"];
const v18 = [v17,"number"];
function f19(a20, a21, a22) {
    const o36 = {
        "h": "number",
        toString(a24, a25) {
            const v26 = super[a21];
            function F27(a29, a30) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.a = v15;
                } catch(e31) {
                }
                try {
                    this.d = a30;
                } catch(e32) {
                }
            }
            new F27(a21, v17);
            new F27(v26, a20);
            new F27(a20, v14);
            return this;
        },
    };
    return o36;
}
class C40 {
    static #e;
    static [-2];
    static {
        try { this(this, -5.0, this, ...this); } catch (e) {}
    }
    #g;
    static #toString(a44, a45) {
        ("minor").split("toString");
        const v53 = new Date();
        try { v53.setFullYear(26578n); } catch (e) {}
        const o55 = {
            __proto__: a45,
            "a": "async",
            "b": "async",
            "e": 1073741823,
            "f": "async",
            "execution": "async",
            "type": "minor",
        };
        gc(o55);
        return f19;
    }
    static c;
}
function F58(a60) {
    if (!new.target) { throw 'must be called with new'; }
    const v61 = this.constructor;
    v61.bind();
    try { new v61(); } catch (e) {}
}
const v64 = new F58();
function f65(a66, a67) {
    %VerifyType(a67);
    Object.defineProperty(v17, 2147483648, { writable: true, enumerable: true, value: v64 });
    return a66;
}
const v69 = f65(v64, 145253519);
new C40();
const v71 = new C40();
const v72 = new C40();
Math.atan2([], -40875);
class C81 extends WeakMap {
    536870887;
}
const t85 = 536870912;
new t85();
const v87 = 536870912n << 536870912n;
-v87;
class C89 {
    static #a;
}
try { v72.getUint16(-16, v69, 16, 6, v87); } catch (e) {}
const v91 = v71[f65];
try { v72.m(v91, 1073741823, C89, v72, v91); } catch (e) {}
v91 >>> v72;
-5.0 < 1073741823;
f19(v17, C3, v17);
f19(v18, v18, v18);
f19(v16, v15, v14);
new Uint8ClampedArray([-1000000000000.0,-1.6023671870362022e+308,3.612724278583076e+307,-8.572552822954835,377868.06762097357,0.35752124726168266]);
