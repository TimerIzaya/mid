function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = this;
    } catch(e3) {
    }
    try {
        F0.h = -4294967296;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new v5();
const v7 = new F0();
v7.h = v7;
const v8 = [v5,v6,v6];
const v9 = [v8,v8];
let v10;
try { v10 = v9.map(v5); } catch (e) {}
const v11 = [v9,v6,v5,v7];
function f12(a13, a14, a15, a16) {
    a16.values = a13;
    a15.h;
    try { a16.values(); } catch (e) {}
    const o29 = {
        __proto__: v10,
        "f": a15,
        get b() {
            let v24 = v9 ** v9;
            let v25 = a13++;
            const v26 = v24--;
            v25++ % -2147483648;
            return v26;
        },
    };
    return o29;
}
try { f12(v5, f12, v7, v8); } catch (e) {}
const v31 = f12(v11, v6, v5, v9);
v31.values = f12;
f12(v8, v7, v7, v11);
f12(v9, v7, v8, v31);
[1];
const v35 = [-1073741824,-9007199254740990,-1,16,0,9,8];
try { v35.values(); } catch (e) {}
[-41479,1,-9007199254740990,1355561350,4,-11848,129,-268435456];
("6Ct").normalize();
