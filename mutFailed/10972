class C3 {
    [-2147483649] = -9223372036854775807;
    toString(a5, a6) {
        try {
            this.c = a6;
        } catch(e7) {
        }
        const t7 = 3193;
        new t7(3193);
        const v13 = new Float64Array(129);
        const t10 = -9223372036854775807;
        new t10(2359);
        return v13;
    }
}
const v17 = new C3();
const v18 = new C3();
const v19 = new C3();
new C3();
let v21 = v18.c;
try { v21(v19, -9223372036854775807, v19, -9223372036854775807); } catch (e) {}
v21 = -32660;
/a\S+/vim;
const v24 = /E?/gudm;
/l(?:ab)|cde/uy;
[2.0,-1000.0,-0.0,0.019813091002293337,-4.0,-5.91661660037079,-1000000000000.0,-3.6539751187289444e+307,-375.08220777112024,-1000000000.0];
const v27 = [6.025943444207434e+307,1.0,-3.901473022058406,-938836.3901776768,3.0,868.5585044368313,1000.0,0.08234163854879839,2.0,2.2250738585072014e-308];
const v28 = v17.d;
C3.f;
-2147483649 > v24;
function F31(a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a33;
    } catch(e35) {
    }
    try {
        this.h = a34;
    } catch(e36) {
    }
    try {
        v21.d = -9223372036854775807;
    } catch(e37) {
    }
}
new F31(v28, v18);
new F31(v24, v17);
const v40 = new F31(v24, v17);
[286649.6474688845];
new Int32Array(240);
new Uint32Array(2837);
new v40(4);
function F54(a56, a57) {
    if (!new.target) { throw 'must be called with new'; }
    const v58 = this?.constructor;
    try { new v58("a", "a"); } catch (e) {}
    try {
    } catch(e60) {
    }
    try {
    } catch(e61) {
    }
    try {
    } catch(e62) {
    }
}
new F54("a", "-2147483648");
new F54(v27, "yRMy");
function F65(a67, a68, a69) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e70) {
    }
}
function F71(a73, a74) {
    if (!new.target) { throw 'must be called with new'; }
}
