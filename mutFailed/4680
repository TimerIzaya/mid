class C3 {
    static 10 = "CGZh";
    static #n(a5) {
        const o6 = {
        };
        function f7(a8) {
            const o9 = {
            };
            return o9;
        }
        const v10 = f7();
        class C11 extends f7 {
        }
        const v12 = new C11();
        function F13(a15, a16) {
            if (!new.target) { throw 'must be called with new'; }
            const v17 = this.constructor;
            try { new v17(a15, v17, v17, o6, v17); } catch (e) {}
            v10[v12] = o6;
        }
        return -2.220446049250313e-16;
    }
    toString(a23) {
        let v22 = this;
        v22 = a23;
        const v24 = super.h;
        var a = v22;
        %VerifyType(v22);
        try { new v24("CGZh", v22, "CGZh", v22); } catch (e) {}
        try {
            v24.toString = a23;
        } catch(e26) {
        }
        return 536870889;
    }
}
class C27 {
}
async function f28(a29, a30, a31, a32) {
    await C27;
    return a31;
}
new C3();
new C3();
const v36 = new C3();
("65535").lastIndexOf(128, 65536);
("CGZh").constructor;
new WeakMap();
class C47 {
    static n(a49, a50) {
        Object.defineProperty(this, 4, { writable: true, configurable: true, enumerable: true, value: ++a49 });
        "CGZh" >> "CGZh";
        try {
            this.h = this;
        } catch(e53) {
        }
        return 0.026040916315574036;
    }
    [WeakMap];
    static #h = v36;
    constructor(a55, a56, a57, a58) {
        super();
        function f59() {
            return a58;
        }
        for (let v60 = 0; v60 < 5; v60++) {
            f59();
            %OptimizeFunctionOnNextCall(f59);
        }
    }
    d;
}
new C47();
new C47();
new C47();
function f65() {
    return f65;
}
function f66() {
    return f65 == f66;
}
%PrepareFunctionForOptimization(f66);
f66();
%OptimizeFunctionOnNextCall(f66);
f66();
