const v2 = new Int16Array(1752);
new Int32Array(474);
const v8 = new BigInt64Array(3235);
class C9 extends BigInt64Array {
    257 = v8;
    static get h() {
        try {
        const t0 = 474;
        t0(Int32Array);
        } catch (e) {}
        try {
            v2.values();
        } catch(e16) {
        }
        return C9;
    }
}
new C9();
new C9();
new BigInt64Array();
class C21 {
    static {
        try {
            const t23 = null;
            t23.valueOf = this;
        } catch(e23) {
            e23.stack;
        }
    }
}
const v25 = [null,null];
function f26() {
    const v27 = -v25;
    new Float32Array();
    -(v27 && v25);
    return C21;
}
%PrepareFunctionForOptimization(f26);
f26();
%OptimizeFunctionOnNextCall(f26);
f26();
