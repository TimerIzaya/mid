const v6 = /xN()?/viy;
const v7 = /foo(?=bar)baz*/vdms;
const v8 = /([\c~])/gdis;
v8.dotAll = v8;
const v9 = [-2.0,2147483648,0.9211707428677609];
const v10 = [v9];
const v12 = ([v10])[0];
class C13 {
    static [2147483648] = 16;
    static #h;
    7;
    e = C13;
    m(a15, a16, a17, a18) {
        try {
            %VerifyType(v8);
        } catch(e19) {
            super[e19];
        } finally {
            try { v7.exec(a18); } catch (e) {}
        }
        const v24 = new BigUint64Array(1448);
        function f25(a26, a27, a28) {
            return a27;
        }
        v24.toLocaleString(([-1000000000000.0,-1.7976931348623157e+308,294500.85018206923,-Infinity,-0.0,-7.010036940344757e+307,1.0,-Infinity,-1000.0,-1.1645821156926988e+308]).reduce(f25));
        return v10;
    }
    static #g;
}
C13[2147483648] = C13;
new C13();
const v33 = new C13();
new C13();
const v36 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
for (let v37 = 0; v37 < 25; v37++) {
    v37 >> v37;
    const v40 = "p" + v37;
    v40[1];
    v36[v40] = v37;
}
const v43 = [601759695];
v43[0] = v43;
const v44 = [1073741824,1073741823,1376142744,1073741825];
function f45(a46, a47, a48, a49) {
    function f50() {
        const o64 = {
            toString(a54) {
                function f56(a57, a58, a59, a60) {
                    arguments.toString = f45;
                    arguments.toString();
                    return f56;
                }
                %OptimizeFunctionOnNextCall(f56);
                f56(-4294967297n, f56);
                return a54;
            },
        };
        o64.toString();
        a48 = a46;
        function f67(a68) {
            return -9007199254740991;
        }
        v10.toString = f67;
        -v36.length;
        try {
            v44.forEach();
        } catch(e73) {
            e73.message = e73;
        }
        const v75 = Symbol.toPrimitive;
        const v77 = v75.description;
        Symbol.for(v77);
        const o83 = {
            toString(a80, a81) {
                return a49 && Float64Array;
            },
        };
        try { o83.toString(v75, a48); } catch (e) {}
        const o85 = {
        };
        o85.g = o85;
        new Proxy(Uint8ClampedArray, o85);
        o83[9] = v12;
        const o95 = {
            "type": v77,
            "c": v9,
            set b(a89) {
            },
            ...v33,
            [-4294967297n](a91, a92, a93, a94) {
            },
            ...v43,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            5: -4294967295,
        };
        return f45;
    }
    f50();
    %OptimizeFunctionOnNextCall(f50);
    return -4294967297n;
}
try { f45(v8, C13, -1073741824, v6); } catch (e) {}
for (let v98 = 0; v98 < 10; v98++) {
    f45();
}
%OptimizeFunctionOnNextCall(f45);
const v100 = f45(v43, v43, v36, v36);
v100 ^ v100;
