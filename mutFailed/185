class C6 {
    7 = "boolean";
    get f() {
        const v9 = [17452,4294967295,64,-8];
        try {
        const t0 = "boolean";
        new t0(...v9, -1.6798118066934893e+307);
        } catch (e) {}
        function f12(a13, a14) {
            Array(3).unshift(3, a13);
            return f12;
        }
        const o20 = {
            "maxByteLength": 2579,
        };
        const v22 = new ArrayBuffer("boolean", o20);
        new DataView(v22);
        return v22;
    }
    10000;
    static valueOf(a26) {
        this.#c = "-1070811373";
    }
    set g(a28) {
        2 || a28;
    }
}
class C30 {
}
const v31 = new C30();
const o32 = {
    __proto__: v31,
};
const v33 = new C6();
const v34 = new C6();
const v35 = new C6();
function F36(a38, a39, a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = "boolean";
    try {
        this.f = a41;
    } catch(e42) {
    }
    try {
        this.e = C6;
    } catch(e43) {
    }
    try {
        this.a = C6;
        new Int8Array(7);
        ([586209.1308562411,9.273207833056233,-793.5051180378861,-88.02009084622205,1000.0,5.993768942190951e+307,0.6895260767593681,3.203916786355496,1.7976931348623157e+308,-1.0422896205696638e+308]).fill(-1073741824, -27205);
    } catch(e51) {
    }
}
const v52 = new F36(-13, v33, v35, "-1070811373");
new F36(2, v35, v34, "-1070811373");
new F36(2, v35, v52, "-1070811373");
const v56 = [1.7976931348623157e+308,-5.063738949828065,-1000000.0,-4.0,4.0,1.368499884638594e+307,0.0,-1.2131530743918297,-1000000000.0,-2.809909548595164];
function f57() {
    return f57;
}
v56.constructor = f57;
const v58 = new Uint8Array();
const v61 = new Uint32Array(104);
for (const v62 in v61) {
    104 in v58;
    typeof Uint8Array;
    function F65() {
        if (!new.target) { throw 'must be called with new'; }
    }
    Math.imul(v56);
}
