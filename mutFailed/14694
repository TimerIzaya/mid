const v0 = [];
function f1() {
    const o11 = {
        "b": v0,
        set f(a3) {
            const v7 = v0 > -8.802414161109713;
            const v8 = v7 ? v0 : -8.802414161109713;
            a3[536870888] = -1000000000.0;
            try { (-8.802414161109713)["toSpliced"](v7, a3, v8); } catch (e) {}
        },
        [v0]: v0,
        ...v0,
        "e": v0,
        "d": v0,
    };
    return o11;
}
const v12 = f1();
const v13 = f1();
const v14 = f1();
function f15(a16, a17) {
    const o23 = {
        set a(a19) {
            let v18 = this;
            Object.defineProperty(v14, "e", { writable: true, enumerable: true, get: f1, set: f1 });
            f15 -= v18;
            ({"b":a19,"e":v18,} = v13);
        },
        get b() {
            a16[this] = a16;
            try {
                super.sort(a17, this, this);
            } catch(e22) {
            }
            return v0;
        },
        [a16]: v14,
        [a17]: a17,
    };
    return v14;
}
v13(v12, v13);
f15(v14, v12);
f15(v14, v14);
new Int8Array(4096);
new Int8Array(2091);
new Uint8ClampedArray(3);
const o36 = {
};
const v37 = v13.constructor;
v37.isFrozen(v37);
