try { ("-1024").blink(); } catch (e) {}
-4;
const v11 = new Uint8ClampedArray(4);
try { v11.find(v11); } catch (e) {}
new Uint8Array(4);
let v16 = 16;
class C17 extends Uint8ClampedArray {
    1205 = true;
    static f = "RQwHt";
}
const v18 = new C17();
new C17();
const v20 = new C17();
v16--;
new Int32Array(v16);
let v26 = ("-1024")[v20];
v26 = v18;
new C17();
const o31 = {
    "execution": "sync",
    "type": "minor",
};
gc(o31);
class C35 {
}
function f36() {
    const o37 = {
    };
    return 8;
}
C35.toString = f36;
try { C35.toString(); } catch (e) {}
const v39 = new C35();
const v40 = v39?.constructor;
try { new v40(); } catch (e) {}
const v42 = [-2.220446049250313e-16];
v42.g = v42;
const v44 = [-2.220446049250313e-16,[8]];
v44[2] = v16;
const v45 = v44.push(8);
v45 / v45;
const v47 = ("number").slice();
const v49 = ("1G")["trimEnd"]();
function f50(a51, a52, a53) {
    a52[4];
    const o55 = {
        ...a53,
        268435441: v39,
    };
    o55.toString = f50;
    return o55;
}
const v56 = f50(v42, v47, v44);
try { v56.toString(); } catch (e) {}
v56[512] = v56;
const v58 = f50(v49, v49, v56);
v58[0] = v58;
