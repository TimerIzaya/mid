const v0 = [2.2250738585072014e-308];
const v1 = [1.7976931348623157e+308,2.2250738585072014e-308,928419.7587767004,-279.06139374957183,1000.0];
const v2 = [0.8548727716928929,511.7046300964207,-1000000.0];
function f3(a4) {
    a4[1] = a4;
    a4[1] = a4;
    const o10 = {
        [v1](a6) {
            for (let v7 = 0; v7 < 32; v7++) {
                a4["p" + v7] = v7;
            }
            return v0;
        },
        __proto__: v1,
        "f": v2,
    };
    try { o10.concat(f3); } catch (e) {}
    return o10;
}
f3.d = f3;
f3(v1);
const v13 = f3(v2);
v13.f = v13;
const v14 = f3(v2);
try { v14.concat(f3); } catch (e) {}
try { v14.find(v2); } catch (e) {}
[4294967297,-1,-2147483647,33144,9,11,1,-5,-25872];
[-1073741824,-1148326039,-2147483648,-974034580,921200097,-9223372036854775808,-4096,-399667599,-1];
[3,512,43016];
const v20 = /(?:a*)+q(?<a>.)/guds;
v20.lastIndex;
function f22(a23) {
    try { a23.compile(a23, a23); } catch (e) {}
    const o28 = {
        set b(a26) {
            this.b = this;
        },
        get d() {
            return a23;
        },
        __proto__: v20,
    };
    o28.d = o28;
    o28.b = o28;
    return o28;
}
for (let [i33, i34] = (() => {
        -0;
        return [0, 10];
    })();
    (() => {
        i34 - i34;
        const v36 = i33 < i34;
        !v36;
        return v36;
    })();
    (() => {
        const v40 = i34--;
        v40 << v40;
        v40 >> v40;
    })()) {
    i34 * i34;
    for (let v46 = 0; v46 < 50; v46++) {
        f22(v20);
    }
}
