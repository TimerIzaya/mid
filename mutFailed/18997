const v4 = new Map();
let v5;
try { v5 = v4.delete(1073741824); } catch (e) {}
const v6 = [320005.5944618583,-9.406160257944066,1.7976931348623157e+308,4.984584899352564,4.0,1000000000.0,-7.553006249463343,-1.0];
const v7 = [3.0,0.9158150915710171,5.456591896255006,2.220446049250313e-16,132044.28773082024,-0.0,1000000.0];
const v8 = [4.0,734262.9959691507,-1.7976931348623157e+308,-551.8506662150487,1.0];
function f9(a10, a11) {
    a11.constructor(a11);
    return f9;
}
new Promise(f9);
v8.g = v6;
class C15 extends Map {
    #d;
    m(a17, a18) {
        v7["with"](129, v4);
        -Infinity;
        return 129;
    }
    static {
    }
    valueOf(a26, a27, a28, a29) {
        for (let v30 = 0; v30 < 5; v30++) {
            function f31(a32, a33, a34, a35) {
                return v30;
            }
        }
    }
    #b = 1073741824;
    [4294967295] = 129;
    [Map];
}
try { new C15(); } catch (e) {}
const v37 = new C15();
const v38 = v37?.constructor;
let v39;
try { v39 = new v38(); } catch (e) {}
new C15();
new Int16Array(4);
Uint32Array.d = Uint32Array;
new Uint32Array(v39);
2036 / 2036;
BigUint64Array.prototype = BigUint64Array;
new BigUint64Array(2036);
new C15();
class C54 extends v5 {
    [12];
}
try { new C54(); } catch (e) {}
try { new C54(); } catch (e) {}
