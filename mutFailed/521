let v0 = undefined;
const v3 = new Array(5);
class C4 {
    constructor(a6) {
        v0 = a6;
        const t4 = "minor";
        t4[2] = "minor";
        const o10 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o10);
    }
    static [v0];
    static h;
    static #d;
    [Array];
}
const v12 = new C4(v0);
const v13 = new C4(v3);
const v14 = v13?.__defineGetter__;
try { new v14(Array, v12); } catch (e) {}
const v16 = new C4(v3);
function f17() {
    return v0;
}
Uint8Array.name;
new Uint8Array(155);
try { Uint8Array.from(v16); } catch (e) {}
const v29 = new Uint8Array(6);
v29.BYTES_PER_ELEMENT = v29;
new Uint8Array(8);
const v33 = /(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/u;
const v34 = /\c4a.[(x)(x)(x)\4*(x)(x)(x)\3*]/gmy;
v34.lastIndex;
const v36 = /G(a)\1a+8?/vdimsy;
const v37 = [Infinity];
try { v37.pop(); } catch (e) {}
const v39 = [2.2250738585072014e-308,1.949684848262672,4.0];
let v40;
try { v40 = v39.push(v33); } catch (e) {}
v40 & v40;
const v43 = ([342.12300421344116,0.3998304334347528,-1.5569468467414895e+308,929110.7069466491,0.8403359879371063,928.8415619105033,5.0])?.toStringTag;
let v44;
try { v44 = new v43(); } catch (e) {}
let v45 = -198895178;
let v46 = v45 | v45;
v46++;
24356 % 24356;
class C50 {
    static #n(a52, a53) {
        function F54(a56, a57, a58, a59) {
            if (!new.target) { throw 'must be called with new'; }
        }
        v36[243] -= v44;
        ++v45;
        F54(v34);
    }
}
