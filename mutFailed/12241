function f0() {
}
function f1() {
    const o4 = {
        __proto__: f0,
        "d": f0,
        ...f0,
        "h": f0,
        [f0]: f0,
        n() {
            try {
                this.toString = f0;
            } catch(e3) {
            }
            return f0;
        },
        "g": f0,
    };
    return o4;
}
const v5 = f1();
const v6 = f1();
const v7 = v5 ^ f1;
for (let v8 = 0; v8 < 100; v8++) {
    f1();
}
const v10 = v5.h;
const v11 = f1();
class C15 extends f0 {
    set b(a17) {
        f1();
        function f19(a20) {
            return v6;
        }
        class C21 extends f19 {
            static #h;
        }
    }
    static [f1] = f1;
    b = v11;
    2808626752;
    static #e;
}
C15[6] = v5;
const v22 = v7 | f0;
v10[v22] = v22;
try {
    v5.g = C15;
} catch(e23) {
}
new C15();
new C15();
const v26 = new C15();
class C33 {
    static #o(a35) {
        this.g **= -1e-15;
        try {
            ("-2147483648").normalize();
        } catch(e37) {
        }
        return 268435456;
    }
    a = -1e-15;
    static 27 = 268435456;
    static f;
}
try { new C33(); } catch (e) {}
const v39 = new C33();
v39.a = v39;
new C33();
const v41 = new C33();
8 - 8;
let v47 = -15;
const v49 = 344.61638667171496 & -11;
Math.sqrt(-11);
Math.floor(v49);
v47--;
const v53 = new Int32Array(8);
let v54;
try { v54 = v53.constructor(v41, -1e-15, 8); } catch (e) {}
new Uint32Array(2950);
28 | 28;
const v61 = new Uint32Array(28);
let v62 = 0;
class C65 {
    #b = v62;
    g = 1.1408591040999836e+308;
    static {
        this.e = this;
        const v70 = v62++;
        -v70;
        ~v62;
        Math.log10(44149);
        const v74 = 44149 + v62;
        v74 >> v74;
        Math.fround(v70);
    }
}
const v77 = new C65();
v77.g;
new C65();
const v81 = -Infinity;
v81 << v81;
C65.g ^= -1e-15;
const o99 = {
    "execution": "async",
    set e(a90) {
        let {"a":v91,"e":v92,"execution":v93,} = this;
        try {
            new Int32Array(53099, 53099, 53099);
        } catch(e96) {
        }
        this[344.61638667171496] = this;
        try {
            v26.fuck(v54, 344.61638667171496);
        } catch(e98) {
        }
    },
    "type": "major",
};
const v100 = o99?.constructor;
try { new v100(v61); } catch (e) {}
gc(o99);
const t122 = "major";
t122[108] /= -1e-15;
