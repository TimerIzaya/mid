let v0 = "5214";
let v1 = 4.569740480344176;
class C3 {
    #o(a5) {
        a5 ^= a5;
        try { this(); } catch (e) {}
        let [v7,...v8] = v0;
        this[this] >>>= v1;
        super.h %= v8;
        return this;
    }
    valueOf(a10, a11) {
        [-65537,316981811,11,47829,-17021,-688491388];
        [33608,0];
        [257,256,5,10,-2116317909,37131,-4294967295,1113384491,-2];
        try {
            v0.toString = a11;
        } catch(e15) {
        }
        return a10;
    }
}
const v16 = new C3();
let v17 = new C3();
[v0,C3,v1,v17] = v0;
try { v1(v16, v0, v0, C3, v17, v17); } catch (e) {}
let v20;
try { v20 = v0["expm1"]("expm1", v16, 4294967297, v0, "expm1"); } catch (e) {}
try { v20["keyFor"](v1, v20, "keyFor", C3, v20); } catch (e) {}
new C3();
new BigUint64Array(7);
new Float64Array(1000);
new Int16Array(1440);
for (let v33 = 0; v33 < 5; v33++) {
    function f34() {
        return f34;
    }
    const o37 = {
        "type": "function",
    };
    new Worker(f34, o37);
}
