const v2 = new Float64Array(255);
let v4 = BigInt64Array;
v4 &= v4;
const o7 = {
    "maxByteLength": 1594631674,
};
const v9 = new SharedArrayBuffer(16, o7);
new Int16Array(v9);
new v4(112);
Int32Array[0] = 255;
new Int32Array(Int32Array);
function f16() {
    if (o7) {
        for (let v17 = 0; v17 < 100; v17++) {
            f16();
        }
    } else {
        new f16();
    }
    return Int32Array;
}
function F24(a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
}
let v28 = new Float64Array();
class C29 {
    constructor(a31, a32, a33) {
        let v30 = this;
        ({"c":v28,...v28} = a32);
        try {
            v30 **= super.n(v2, F24, a33, a31, f16);
            super[f16] = v28;
            super.a |= a32;
        } catch(e38) {
        }
        const t35 = "undefined";
        delete t35?.length;
    }
}
