function f0() {
    const o2 = {
    };
    gc(o2);
    return gc;
}
const v4 = [128,215394418];
try { v4.entries(); } catch (e) {}
class C9 {
    static 7;
    static [-1] = "string";
    #n(a11) {
        a11 = this;
        a11.e >>>= a11;
        const o15 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o15);
        return this;
    }
}
const v17 = new C9();
const v18 = new C9();
const v19 = v18?.__defineGetter__;
try { new v19(v17, v4); } catch (e) {}
function F26() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        [this];
        ["h",1141300185,F26];
        let v31 = [this];
        v31++;
        Math.asinh(536870887);
        +this;
    } catch(e37) {
    }
    try {
        class C39 extends this.constructor {
            static [1141300185] = F26;
            e = F26;
        }
        new C39();
    } catch(e41) {
    }
}
new Float32Array(3674);
new BigUint64Array(213);
new Int16Array(255);
for (let v50 = 0; v50 < 5; v50++) {
    function f51() {
        let v54 = 1864489360 << ("c").toLowerCase();
        new Int8Array(255);
        [601759695];
        (3).unshift(3);
        const v60 = v54--;
        v54 & v54;
        return v60;
    }
    ("async").lastIndexOf();
    function f64(a65, a66, a67, a68) {
        function f69() {
            function f70(a71) {
                return f64;
            }
            f70(f70);
            return f64;
        }
        f69();
        f69();
        %OptimizeFunctionOnNextCall(f69);
        return a66;
    }
    f51();
    %OptimizeFunctionOnNextCall(f51);
}
