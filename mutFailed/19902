[-1073741824];
[-4294967295,5,9223372036854775807];
[-9007199254740992,-1643134841,1864027337,-9223372036854775808,536870912,128,-1759039800,3,1470773214,-4294967296];
function f14(a15, a16, a17) {
    const v18 = a17 >>> a17;
    (v18 - v18) - a15[1];
    return 160;
}
new Array(6);
new BigUint64Array(0);
const v31 = ([-Infinity,1000000000.0,Infinity,-1e-15,14.557700682017867,-1.7976931348623157e+308,-4.0,6.029322461126224,-2.220446049250313e-16]).toString();
Date.parse(v31);
function f34(a35) {
    const o36 = {
        ...v31,
    };
    return o36;
}
new Int32Array(256);
const v38 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v39 = [1073741824,1073741823,1376142744,1073741825];
function f40(a41, a42, a43, a44) {
    function f45() {
        try {
            v39.forEach(a42, v38);
        } catch(e47) {
        }
        return a41;
    }
    f45();
    const v50 = eval();
    %OptimizeFunctionOnNextCall(f45);
    return v50;
}
new Int32Array(6);
function F54() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        class C57 extends this.constructor {
            e = C57;
        }
        new C57();
    } catch(e59) {
    }
}
new F54();
function F61(a63, a64, a65, a66) {
    if (!new.target) { throw 'must be called with new'; }
    const v67 = this.constructor;
    v67.prototype = v67;
}
for (let [v68,v69,v70,v71] of Date) {
}
