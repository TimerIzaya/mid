class C3 {
    static #m(a5) {
        try {
            a5.toString = this;
        } catch(e6) {
        }
        return "random";
    }
    1;
    #b = "function";
    #g = "random";
}
const v7 = new C3();
new C3();
new C3();
new Int32Array(v7);
new Int32Array(7);
new Uint8Array(Uint8Array);
const o18 = {
    ...7,
};
new BigInt64Array(6);
new Uint8ClampedArray(995);
function F27(a29) {
    if (!new.target) { throw 'must be called with new'; }
    let v30;
    try { v30 = this.constructor(); } catch (e) {}
    const v31 = this.constructor;
    try { new v31(v31, F27, v31, v31); } catch (e) {}
    try {
        a29 % 257;
    } catch(e35) {
        ("gV9")["toLowerCase"](v31, ...-5.0, ...v30);
    }
}
const v38 = [];
const v39 = [v38,v38,v38,v38];
const v40 = [v39,v39,v39];
function f41() {
    return v40;
}
%OptimizeFunctionOnNextCall(f41);
Uint8ClampedArray();
