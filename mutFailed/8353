let v4 = 9.076248904425327e+307;
v4--;
7 >>> 7;
let v11 = -9007199254740991n;
v11--;
const v15 = [];
function f16() {
    function f17(a18, a19) {
        function f20() {
            class C23 {
            }
            const v26 = `
                try {
                    new Float64Array(127);
                } catch(e28) {
                }
            `;
            let v29 = -65535;
            v29 * v29;
            v29 / v29;
            const o90 = {
                __proto__: 352326470,
                next() {
                    v29--;
                    const v35 = v29 == 0;
                    const o36 = {
                        "done": v35,
                        "value": v29,
                    };
                    return o36;
                },
                ...352326470,
                /*
                __proto__: 1261703539,
                */
                "f": v29,
                m(a38) {
                    a38.h = a38;
                    const o39 = {
                    };
                    function f40(a41, a42, a43) {
                        function f45(a46) {
                            a42[5] ||= f20;
                        }
                        this.onmessage = f45;
                        const v49 = new SharedArrayBuffer(35);
                        new BigUint64Array(v49);
                    }
                    try {
                        o39.e = v29;
                    } catch(e52) {
                        const v56 = new Uint8ClampedArray(512);
                        new Uint8ClampedArray(798, ...v56, o39);
                    }
                    try {
                        const o58 = {
                        };
                        o58.e = 1261703539;
                        o58.g = a38;
                    } catch(e59) {
                    }
                    -9007199254740991 >> -9007199254740991;
                    Math.sin(-9007199254740991);
                    class C66 {
                        o(a68, a69, a70, a71) {
                            class C72 {
                                static 44 = "EV";
                            }
                            new C72();
                            new C72();
                            new C72();
                            return 0;
                        }
                    }
                    new C66();
                    const v79 = new Int8Array(3938);
                    let v80 = 3;
                    v80++;
                    let v82 = 0;
                    v82 >> v82;
                    for (let i = 0; i < 5; i++) {
                        v82 < 8;
                        [...v80] = v79;
                        v82++;
                    }
                    const o87 = {
                    };
                    o87.e = 1261703539;
                    o87.g = a38;
                    try {
                        const o88 = {
                        };
                        o88.g = a38;
                        o88.h = 352326470;
                    } catch(e89) {
                    }
                    return this;
                },
            };
            let v91;
            try { v91 = o90.m(o90); } catch (e) {}
            class C93 {
            }
            const v94 = new C93();
            const v96 = new Float32Array(v94, "nt", Float32Array);
            const t105 = "nt";
            const v97 = delete t105[v96];
            let v98;
            try { v98 = v94.floor(v97); } catch (e) {}
            for (const v99 in v98) {
            }
            v91.e = v91;
        }
        return a19;
    }
    return f17;
}
Object.defineProperty(v15, "constructor", { writable: true, configurable: true, get: f16 });
try { v15.slice(1000000.0, 1000000.0); } catch (e) {}
function F101() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v15;
    } catch(e103) {
    }
}
new F101();
const v105 = new F101();
v105.d = v105;
const v106 = new F101();
function f107(a108, a109) {
    const o118 = {
        "h": v106,
        199: f107,
        "b": F101,
        "a": v15,
        n(a111, a112, a113) {
            try {
            } catch(e117) {
            }
        },
    };
}
new Int8Array(1000);
