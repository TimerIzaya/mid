const v0 = /a\D/vimy;
const v1 = /H(?:a?)*B[x\dz]/gvdi;
const v2 = /a\q/dy;
class C3 {
    set b(a5) {
        super.h = this;
        const v6 = v0 >= this;
        try { new a5(v6, v2); } catch (e) {}
        let {"g":v8,} = this;
    }
    #e;
    static #b = v0;
    static #d = v2;
    constructor(a10) {
        let v11;
        try { v11 = v1.exec(a10); } catch (e) {}
        v1["compile"](..."compile", v2, ..."compile", "compile");
        let v15 = 1073741824;
        const v17 = v11 - --v15;
        Math.exp(v11);
        let v19 = v17 / v15;
        ++v19;
        Math.atan(v15);
    }
}
new C3(v1);
new C3(v1);
new C3(v2);
(-2.2250738585072014e-308).call();
const v29 = [601759695];
const v30 = [1073741824,1073741823,1376142744,1073741825];
function f31(a32, a33, a34, a35) {
    function f36() {
        v30.forEach(a33);
    }
    new Int8Array();
    for (let v40 = 0; v40 < 5; v40++) {
    }
    try { v30["find"](..."find", a35, ...v29, ...v30); } catch (e) {}
}
for (let v43 = 0; v43 < 5; v43++) {
    f31();
}
new Int32Array(255);
new Uint8Array(29);
new Uint8Array(1000);
-5;
function F59(a61) {
    if (!new.target) { throw 'must be called with new'; }
    const v62 = this.constructor;
    try { v62("toString"); } catch (e) {}
    a61[5];
    this.d = "message";
}
new F59("message");
new F59("message");
const v68 = new Uint16Array(5);
const v69 = new F59("toString");
v69.e = v69;
const v72 = new Int8Array(7);
const t60 = v72?.constructor;
new t60(7, v69, v69);
new Uint8ClampedArray(1);
function f78(a79, a80) {
    const o84 = {
        "c": Uint16Array,
        set g(a82) {
        },
        39: v68,
    };
}
f78("message", 5);
f78("3SEJ", 5);
let v89 = Math.atan(0.6146752851534484);
v89--;
