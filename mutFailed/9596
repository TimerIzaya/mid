class C1 {
    static {
        [];
        try {
            super.setInt8();
        } catch(e5) {
        }
    }
}
function F7() {
    if (!new.target) { throw 'must be called with new'; }
}
const v9 = [-1.7976931348623157e+308,1.567547754457685];
const v11 = new Uint32Array(v9, v9, Uint32Array);
const v12 = v11.constructor;
const v13 = new v12(v9);
let v14 = 3;
const v15 = [-256,97556949,38459,257,536870889,1000,1029231334];
const v16 = [2147483648,6,-990911132,-9223372036854775808,4294967295,-6];
const v17 = [9007199254740992,2,45716,-481946537,-4096,45358,-9007199254740991,536870889];
class C18 {
    static m(a20, a21, a22) {
        this[4294967295n] ^= v14;
        super.e = this;
        try {
            v16.__proto__ = v17;
        } catch(e28) {
        }
        try {
            v17.__proto__ = this;
        } catch(e29) {
        }
        let v32 = Int16Array;
        v32.g = -49300;
        function f33() {
            4294967295n | v32;
            return -222991958;
        }
        class C37 {
        }
        const v38 = [-268435456,-9007199254740990,11,-25356,-536870912,4294967296,1520296454];
        function f39(a40, a41) {
            function F43(a45) {
                if (!new.target) { throw 'must be called with new'; }
                139837843 in this;
            }
            new v12();
            +(v14--);
            v32 | v13;
            Math.asinh(v13);
            --v32;
            v13 >> v32;
            new F43(a41);
            const o58 = {
                __proto__: v38,
            };
            return o58;
        }
        v15.group(f39);
        return a20;
    }
    static [C18] = 1073741823;
    set d(a61) {
    }
    static 268435439 = C1;
    #o(a63, a64) {
        const v65 = super.h;
        a63 > 1073741823;
        return v65;
    }
    [v15];
}
new C18();
const v68 = new C18();
new v68();
[v17,[v68,v68],-26272];
function f72() {
    for (let v73 = 0; v73 < 5; v73++) {
        function f74() {
            return f74;
        }
        Array(36862, C18);
    }
    return C18;
}
[-26272];
Math.cbrt(Math);
