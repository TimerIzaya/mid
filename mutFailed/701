const v1 = new Map();
class C2 extends Map {
    static 10;
    constructor(a4, a5) {
        super(a5);
        a4[1731] -= a4;
        /5u(x)(x)(x)\1*/gvdimsy;
        /a$\p{Script=Greek}a?fa\W?/udim;
        /(a+(?: foo ))/di;
        try {
            v1.size = a4;
        } catch(e9) {
        }
    }
    static #a = v1;
    static #h = Map;
}
const v10 = new C2(Map, Map);
const v11 = new C2(v10, v1);
const v12 = new C2(Map, v11);
function f13() {
    return v12;
}
function F17(a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = Map;
    } catch(e22) {
    }
    const v23 = [];
    function F24(a26, a27, a28, a29) {
        if (!new.target) { throw 'must be called with new'; }
        a26.lastIndexOf(a26, a27);
    }
    const v31 = new F24(v23);
    const v32 = v31.constructor;
    try { new v32(); } catch (e) {}
    try {
        this.b = v1;
    } catch(e34) {
    }
    try {
        this.a = a20;
    } catch(e35) {
    }
}
new F17("c", v1, "2oIN");
new F17(f13, v12, "2oIN");
new F17(F17, v10, "2oIN");
const t49 = "9007199254740992";
t49["255"] &= 7;
