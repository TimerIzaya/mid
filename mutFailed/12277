const v3 = [585096469,-9223372036854775807,2,114851117,-5,-1911773618,-128,-1];
try { v3.group(4294967295); } catch (e) {}
v3[0];
let v6;
try { v6 = v3.unshift(-65537); } catch (e) {}
-v6;
v6 >>> v6;
[10,0];
const v10 = [9007199254740992];
try { v10.find(-65537); } catch (e) {}
[-13,-1024,-2359,-7,-38072,1024];
const v13 = [10,536870912,-9,1000,54909,129,1375855966];
v13.e = v13;
const v14 = [64,-45623,-4294967297,127];
v14[1] = v14;
4096 - 4096;
new Array(4096);
const t17 = "-1723624938";
t17[3] = "-1723624938";
const v21 = ("-1723624938").slice(9);
try { v21.sub(); } catch (e) {}
const v23 = v21?.strike;
try { v23(); } catch (e) {}
try { new v23(); } catch (e) {}
9 - 9;
try { ("maxByteLength").strike(); } catch (e) {}
let v30;
try { v30 = ("maxByteLength").localeCompare("maxByteLength"); } catch (e) {}
v30 & v30;
class C32 {
    constructor(a34, a35) {
        a35[10] = a35;
        try { a35.blink(); } catch (e) {}
        this.h = this;
        a34--;
        const v38 = this.constructor;
        try { new v38(this, v21); } catch (e) {}
        a35.sup();
    }
}
try { new C32(-65537, -65537); } catch (e) {}
const v42 = new C32(9, "maxByteLength");
const v43 = v42.constructor;
try { new v43(); } catch (e) {}
