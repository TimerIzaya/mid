function f0() {
    gc();
    function F3() {
        if (!new.target) { throw 'must be called with new'; }
    }
    class C8 {
        static #a;
        static n(a10, a11) {
            const v12 = super.d;
            try { v12(); } catch (e) {}
            return a10;
        }
        [1];
        static [1] = 255;
        [255];
        f = -65536;
    }
    const v15 = Int32Array.bind(Int32Array, Int32Array, Int32Array, Int32Array, Int32Array);
    new v15();
    class C17 {
        #e;
        set b(a19) {
        }
    }
    const v24 = new C17();
    class C25 {
    }
    function F26(a28, a29, a30) {
        if (!new.target) { throw 'must be called with new'; }
    }
    new F26();
    ([v24]).constructor;
    ("-1073741824").localeCompare(v15);
}
[127,-961855727];
[128,1,1000,536870888,9,536870889];
[-50406,10000,1,3,-1370005032,1073741825,255,-4];
new Float64Array();
for (let [i52, i53] = (() => {
        ("valueOf").localeCompare(Math.atan(+-1.0406565190769766e+308), "valueOf");
        const t0 = 0;
        const v48 = new t0("valueOf");
        const v49 = v48.constructor;
        new v49(v48, v48, v49, v48, "valueOf");
        return [0, 10];
    })();
    i52++, i52 < i53;
    (() => {
        [1073741824,1073741823,1376142744,1073741825];
        for (const v62 of Array(4087)) {
        }
        function f63(a64, a65, a66, a67) {
            return a67;
            return 36924;
            function F69() {
                if (!new.target) { throw 'must be called with new'; }
                this.c = 5;
            }
            const v72 = new a64();
            const v73 = new F69();
            function f74(a75, a76) {
                const o77 = {
                    "h": v73,
                    6: v73,
                    128: a76,
                    "e": v72,
                    __proto__: a75,
                    "a": a76,
                    ...a76,
                };
                return o77;
            }
            f74();
            const v80 = f74(v72, f74());
            function f81() {
                return f74;
            }
            const v84 = new Float32Array(218);
            for (const v85 of v84) {
                Object.defineProperty(v80, Float32Array, { configurable: true, enumerable: true, get: f74, set: f81 });
            }
            function f86(a87, a88) {
            }
        }
        for (let v89 = 0; v89 < 5; v89++) {
            const v90 = [2.220446049250313e-16,-2.0,9.472378156545009,0.0,1e-15,0.3751557433004281,0.0,-474740.46049005154];
            const o96 = {
                set h(a92) {
                },
                __proto__: v90,
                o(a94, a95) {
                },
            };
            f63(v89, f63, i52);
            new Uint8Array(268435440);
            const v103 = new Float64Array(231);
            v103.fill();
        }
    })()) {
}
new Float64Array(64);
const o119 = {
};
gc(o119);
const v122 = new Uint8ClampedArray();
v122.reverse();
new Int32Array(2289);
const v126 = new Uint8Array();
const o127 = {
    ...v126,
};
new BigUint64Array(1539);
function f131() {
    for (let v132 = 0; v132 < 5; v132++) {
        for (let v133 = 0; v133 < 5; v133++) {
            Math.atanh(v133);
        }
        new WeakMap();
        try { DataView.call(DataView); } catch (e) {}
        const v140 = /(?:a*)+q(?<a>.)/guds;
        function f141(a142) {
            a142.dotAll = a142;
            const o146 = {
                set b(a144) {
                },
                get d() {
                    return a142;
                },
                __proto__: v140,
            };
            return o146;
        }
    }
    return BigUint64Array;
}
f131();
%OptimizeFunctionOnNextCall(f131);
f131();
