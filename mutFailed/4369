class C3 {
    #a = -776238783;
    static g;
    c;
    static {
        this[NaN] = -776238783;
        super.f ||= -776238783;
        const v5 = this * this;
        v5 || v5;
    }
    toString(a8, a9) {
        delete this["PI"];
        [...a9,..."PI",a8,-776238783];
        return C3;
    }
    static #f;
}
new C3();
new C3();
const v14 = new C3();
[-6.732081871148349e+307];
const v16 = [-283.07861425450074,445913.3269117675,-1000000000000.0,-1.0,0.23922878150976778,-2.2250738585072014e-308,1e-15,0.1168696778038727,-1000.0,2.0];
const v17 = [0.5660431531623998];
class C18 extends C3 {
    get f() {
        try { this.toString(NaN, this, NaN); } catch (e) {}
        try {
            new C3();
        } catch(e22) {
        }
        return this;
    }
    p(a24, a25, a26) {
        let v27;
        try { v27 = a26.fill(a25, -776238783); } catch (e) {}
        class C31 {
        }
        async function f32(a33, a34, a35, a36) {
            return (await C31).call(v27);
        }
        const v39 = f32.call(C31, C31, f32, f32, f32);
        v39.then(f32, v39, v39, v39, v39);
        return NaN;
    }
}
new C18();
const v42 = new C18();
const v43 = new C18();
const v45 = [v17,v14,[C3,v42,v16,C18,v14],C3,v42];
[v43,C3,v45];
const v48 = new WeakMap(WeakMap, WeakMap, v45);
v48.delete(v48);
new Int8Array(964446029);
new Uint32Array(257);
