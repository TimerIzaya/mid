const v8 = 55005 ** ("p" * -10);
-55005;
Math.clz32("boolean");
const v11 = "p" >> "p";
class C12 {
    n(a14, a15) {
        return a15;
        Object.defineProperty(this, 54129, { value: this });
        a14 = 54129;
        return 255;
    }
    [54129];
}
function f19(a20) {
    const t14 = "p";
    t14[129] = a20;
}
Object.defineProperty(C12, 0, { writable: true, configurable: true, enumerable: true, set: f19 });
const v21 = new C12();
const v22 = new C12();
function f23() {
    function f24() {
        return f24;
    }
    return f24;
}
v22.toString = f23;
const v25 = new C12();
v8 ** 54129;
let v27;
try { v27 = new C12(...1.2647390638516653e+308, C12, v25, ...v21, v21, "boolean"); } catch (e) {}
const t31 = "boolean";
const v28 = delete t31[v22];
C12[v11] = v22;
delete v21[v22];
new Uint16Array(4096);
Float32Array[1] = v28;
new Float32Array(8);
for (const v37 in v21) {
    const v38 = ("p").length;
    [v38,v38,v37,v22,v37];
}
v11 << v27;
new Int8Array(22);
const v44 = new Float32Array(Float32Array);
for (let v45 = 0; v45 < 25; v45++) {
    function f46(a47, a48, a49, a50) {
        a47[1];
        for (let v53 = 0; v53 < 5; v53++) {
        }
        const v55 = arguments.__lookupGetter__;
        try { v55.constructor(); } catch (e) {}
    }
    for (let v57 = 0; v57 < 10; v57++) {
        f46(v44);
    }
}
