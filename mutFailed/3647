const v2 = new Int16Array(129);
new Uint8ClampedArray(1570);
new Int16Array(256);
[[v2,v2,Int16Array,Int16Array]];
[v2];
const o12 = {
};
const v13 = o12[o12];
for (const v14 of v13) {
    v13();
}
new Uint32Array(2394);
new Float64Array(257);
const v24 = new BigInt64Array(3168);
([601759695]).unshift(3);
v24[8];
function F33() {
    if (!new.target) { throw 'must be called with new'; }
}
const v35 = new F33();
const v36 = new F33();
try {
    v35.h = v36;
} catch(e37) {
}
[1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0];
class C41 {
    constructor(a43) {
        const o45 = {
            "maxByteLength": 1000,
        };
        new Int8Array(1392);
        ("valueOf").localeCompare(a43, "valueOf");
    }
}
new C41();
