const v0 = [52054];
const v1 = [9,-8,9007199254740990,2144166095,-44996,0];
const v2 = [1024,6,288052571,-9007199254740990,12,1000,1380650735,-9007199254740991];
function f3() {
    return v2;
}
f3.arguments = f3;
const v4 = [-320410647,-4294967295,268435441,-65535,-2,-2147483647,4096];
const v5 = [9007199254740992,9007199254740990,-279345971,-60356,-8,-6,65535];
v5[4];
const v7 = [-65535,4,-2147483647,9007199254740991,128,-1790858391,8,-12];
const v8 = [3.0,723.6448841133979,-0.0,926216.2217825563,102.25232267810497];
const v9 = [0.9898948998947978,1000000000.0];
try { v9.includes(v4); } catch (e) {}
[1e-15,183.50127529118276,2.0,0.18954838344058045];
class C12 {
    set e(a14) {
        try {
            new f3();
        } catch(e16) {
        }
    }
    #b;
    15;
    static #f = v0;
    constructor(a18, a19) {
        try { a18.sort(v9); } catch (e) {}
        try {
            this.valueOf = a18;
        } catch(e21) {
        }
    }
}
function f22(a23) {
    function f24(a25) {
        function f37() {
            return a23;
        }
        const v38 = [a23,f24,f3,v4,4];
        0 >= v38 ? 0 : v38;
        class C44 {
        }
        for (let v46 = 0; v46 < 5; v46++) {
            const v47 = [-Infinity,2.220446049250313e-16,-1.7976931348623157e+308,2.220446049250313e-16,Infinity,38895.10169439507,0.0,-839.2678689183415,0.9830891302642997];
            for (let v50 = 0; v50 < 25; v50++) {
                function f51() {
                    return f51;
                }
                function f52(a53, a54, a55, a56) {
                    f51();
                    Int8Array(v47, v50);
                    return f51;
                }
                f52(v47);
            }
            function f65() {
                return 45725n;
            }
            function f67() {
            }
            class C68 extends f67 {
            }
            class C70 {
            }
            for (let v71 = 0; v71 < 10; v71++) {
                for (let v72 = 0; v72 < 32; v72++) {
                }
            }
        }
        class C73 {
        }
        return C44;
        try {
            new C12(-12, -12);
        } catch(e91) {
        }
        const o103 = {
        };
        for (const v105 of 0) {
        }
        return C44;
    }
}
Object.defineProperty(C12, "d", { set: v8 });
C12.d = C12;
new C12(v5, v7);
const v107 = new C12(v1, C12);
new C12(v7, v107);
let v110 = -1;
const v111 = v110--;
let v112 = 1;
v112--;
try { v111.trimLeft(); } catch (e) {}
let v121 = 3816;
v121--;
const v124 = new Int8Array(Int8Array);
for (const v127 of "some") {
    const v128 = v127[1];
    let [,,,...v129] = v124;
    const o130 = {
    };
    o130.a = v128;
    const o131 = {
    };
    o131.a = true;
    o131.c = o131;
    o131.a = v128;
}
