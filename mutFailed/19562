new Symbol(3240, 129, 3240 - 3240, Symbol);
64 & 64;
function F11(a13, a14, a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    a14 <= a14;
    -a15;
    a16 - a16;
    try {
        this.g = 64;
    } catch(e20) {
    }
    try {
        this.d = -5;
    } catch(e21) {
    }
    try {
        this.g = a15;
    } catch(e22) {
    }
}
new F11(-9223372036854775808, -5, 129, 1115734248);
new F11(64, -5, -5, 129);
new F11(-5, -9223372036854775808, -9223372036854775808, -9223372036854775808);
function F26(a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    const v32 = arguments?.callee;
    try { new v32(1115734248, a29, arguments); } catch (e) {}
    return arguments;
}
try { F26.bind(-9223372036854775808); } catch (e) {}
const v36 = new F26();
v36.e = Uint8ClampedArray;
v36.e = v36;
