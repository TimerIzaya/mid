class C3 {
    4;
    static #o(a5, a6) {
        try { this.toString(); } catch (e) {}
        ("5H").__proto__;
        return a5;
    }
    #m(a10, a11) {
        this["function"] = a10;
        const o12 = {
        };
        const v13 = o12.constructor;
        let v14;
        try { v14 = new v13(); } catch (e) {}
        function F15(a17, a18, a19, a20) {
            if (!new.target) { throw 'must be called with new'; }
            a17.lastIndexOf(a17, a18);
        }
        let v22 = 0;
        return -65537;
        class C25 extends Array {
        }
        const v26 = new C25();
        1073741823n == v26;
        do {
            super.b;
            const o34 = {
                [v14](a32, a33) {
                },
            };
            v22++;
        } while ((() => {
                let v39 = 144;
                const v40 = v39++;
                function f41(a42) {
                    return v40;
                }
                return v22 < 8;
            })())
        return v22;
    }
}
const v45 = new C3();
const v46 = new C3();
new v45();
const v48 = [0,16,407180691];
[2147483648,-1,-5,-2,536870889,-29045,-14];
for (let v50 = 0; v50 < 5; v50++) {
    function f51() {
        function f52() {
            return v50;
        }
        return f52.call(v50);
    }
    const v54 = f51();
    for (let i = 0; i < 10; i++) {
        v46[v48];
    }
    class C58 {
        static #m(a60) {
        }
        set d(a62) {
            this.#m();
        }
        constructor(a65) {
            function f66() {
                return f66;
            }
            Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f66 });
        }
    }
    const v67 = new C58("string");
    v67.length = -4294967296;
    %OptimizeFunctionOnNextCall(v54);
}
const v68 = [-2147483648];
function F72() {
    if (!new.target) { throw 'must be called with new'; }
    const v74 = [-5.0,-4.0,-1.7976931348623157e+308,-897.6003446951657,-1000000.0,1.8928166106024224e+306,-2.0,-1000000000000.0];
    function F75(a77, a78, a79, a80) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v81 = new F75(v74, F72, v74, F75);
    const v83 = [101.2980265931285,-1.7177856293756712e+307,-1000000.0,-8.49664044843577];
    const o84 = {
        __proto__: v83,
    };
    const v88 = new o84(C3);
    function f90(a91, a92) {
        new F72();
        function F95(a97) {
            if (!new.target) { throw 'must be called with new'; }
            this.h = a97;
        }
        const o106 = {
            4294967296: 15,
            "d": 30492,
            [30492]: F95,
            "type": "atan2",
            toString() {
                super[this];
            },
            "d": v88,
            [o84]: a91,
            536870888: "5H",
            "g": a91,
            "h": 2.220446049250313e-16,
            ..."-176972982",
            m(a101, a102) {
                const t109 = 4294967297;
                t109[5] = a102;
                return a92;
            },
        };
        return o106;
    }
    f90(C3, o84);
    const v108 = [F72,F72,F72,F72];
    Reflect.apply(v74.indexOf, v81, v108);
}
[-65535,536870889,4096];
for (let v112 in v68) {
    v112--;
    Math.log10(v112);
    v112 ** 1000000000000.0;
}
const v123 = -25283n >> (-25283n && -25283n);
v123 | v123;
