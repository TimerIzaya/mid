function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -43108;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
class C7 {
    set g(a9) {
        const v10 = -v5;
        try {
            v5.fuck(a9, "search", v10);
        } catch(e13) {
        }
    }
    static n(a15) {
        function F16(a18, a19) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = a19;
            } catch(e20) {
            }
            try {
                this.h = F0;
            } catch(e21) {
            }
        }
        new F16(a15, v6);
        const v23 = new F16(v4, v5);
        new F16(a15, a15);
        return v23;
    }
}
new v6();
new C7();
new C7();
new Float32Array(16);
new Int16Array(3);
new BigUint64Array(129);
function F37(a39, a40, a41, a42) {
    if (!new.target) { throw 'must be called with new'; }
    const v43 = this.constructor;
    let v44;
    try { v44 = new v43(v43, a42); } catch (e) {}
    new Float32Array(165);
    for (const v48 in this) {
    }
    const v49 = typeof v44;
    const o51 = {
    };
    v49 === "symbol";
}
new F37();
new F37();
const v58 = new BigUint64Array(10);
for (const v60 in v58) {
    new Float64Array(2147483647);
}
