[-9.072239665150537e+307,-1000000.0,-4.0,Infinity,0.24829442630739418,-0.0];
[2.220446049250313e-16,1000000000.0,Infinity,0.4370161881630601,2.0,-2.015330271501943,635.4561024273873,-2.0];
[-1.0,769430.3162333325,-2.2250738585072014e-308,-1000000000000.0,-1.1417552818768464e+308,-1.2894481616360001e+308];
class C10 {
}
const v11 = new C10();
const v12 = [-2,257,-107178159,-35269,9223372036854775807,1203530861,-32678];
const o13 = {
};
const v15 = new Proxy(v12, o13);
v15.unshift(v11);
const o17 = {
    __proto__: v15,
};
-450746.69945373747 ^ -450746.69945373747;
function f21() {
    return f21;
}
const t18 = /C/gumy;
t18.constructor = f21;
new Int8Array(38);
new Int32Array(1790);
for (let v27 = 0; v27 < 25; v27++) {
}
function F29() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = true;
}
new Float64Array(4);
const v34 = /xyz{1,32}?/gusy;
class C35 {
    268435440 = v34;
}
o13.strike();
function F37(a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    const v41 = this.constructor;
    try { new v41(F37); } catch (e) {}
    const v45 = [10000n];
    const o46 = {
        "arguments": v45,
        "type": "function",
    };
    a40 / a40;
}
("vZa2U").normalize("NFKC");
new F37();
new F37();
