const v2 = new Array(255);
class C3 {
    #p(a5, a6) {
        new C3(226);
        new Int8Array(129);
        new Float64Array(10);
        return 255;
    }
}
const t9 = 255;
const v16 = new t9();
const v17 = new C3();
const v18 = new C3();
function f19() {
    const v20 = [-6.078081144782104,3.0,-1000.0,4.739392359408212,-1.3763335971087312e+307,5.0,0.8267200417626637,276.24411996178765,2.2250738585072014e-308];
    for (let v21 = 0; v21 < 25; v21++) {
        v20["p" + v21] = v21;
    }
    return 255;
}
const v25 = [v17,255,[v18,Array,v2,v18],255,C3];
let v26 = [v18,C3,v2];
class C27 {
    static [v18];
    #o(a29, a30, a31) {
        super.d -= a29;
        v26 = a30;
        return a30;
    }
    static #p(a33, a34, a35, a36) {
        Array(255);
        %PrepareFunctionForOptimization(Array);
        Array(255);
        Array(255);
        %OptimizeFunctionOnNextCall(Array);
        const v40 = Array(255);
        let v41 = 0;
        do {
            v16[2147483648] = v18;
            try {
                a33.b = v2;
            } catch(e42) {
            }
            v41++;
        } while (v41 < 8)
        return v40;
    }
    #e;
    static [v17];
}
Object.defineProperty(C27, v18, { value: v17 });
const o46 = {
};
try {
    o46.c = v2;
} catch(e47) {
}
try {
    const o48 = {
    };
    o48.c = Array;
    o48.e = 255;
} catch(e49) {
}
try {
    const o50 = {
    };
    C27.c = Array;
    o50.e = 255;
    o50.f = v25;
} catch(e51) {
}
try {
    const o52 = {
    };
    o52.c = Array;
    o52.e = 255;
    o52.f = 255;
} catch(e53) {
}
new C27();
new v18();
new C27();
let v58 = -16n;
function f59() {
    v58 *= -1911645276n;
    return -1911645276n;
}
f59();
f59();
f59();
