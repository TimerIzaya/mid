function f0() {
    ([-7.127262073336987e+307,9.142894664271836,5.0]).toLocaleString();
    function F5() {
        if (!new.target) { throw 'must be called with new'; }
    }
    let v8 = 536870887;
    const o23 = {
        "a": v8,
        o(a10, a11) {
            [2147483647,[[2147483647],a10,2147483647],a11];
            return a10;
        },
        set c(a16) {
            v8 = 2147483647;
            this["o"](a16?.[178], -14, ..."o", a16);
        },
    };
    function f24(a25, a26) {
        function F27(a29, a30, a31) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.c = f0;
            } catch(e32) {
            }
            try {
                this.d = a30;
            } catch(e33) {
            }
        }
        new F27(-4294967297, a26, v8);
        new F27(a26, a25, a25);
        new F27(v8, v8, 2147483647);
        return f0;
    }
    o23.toString = f24;
    return o23;
}
const v37 = f0();
const v39 = new Map();
function f40(a41, a42) {
    const o43 = {
        [a41]: v39,
        146: v39,
    };
    o43[146];
    return Map;
}
for (let v45 = 0; v45 < 790; v45++) {
    f40();
}
const v47 = f0();
function f48() {
    function f49(a50, a51) {
        try {
            new Map(v37);
        } catch(e53) {
        }
        return v37;
    }
    return f49;
}
function f54(a55) {
    for (let i = 0; i < 5; i++) {
        new Date();
    }
}
Object.defineProperty(v47, "toString", { writable: true, configurable: true, enumerable: true, get: f48, set: f54 });
const v58 = f0();
const v59 = [-14,9,16,2147483649,-65536,9007199254740992,-2147483647,-4096];
[-128,45517,-9007199254740990,-65535,-63708,-2,1073741824,2159,536870888];
const v61 = [2,10,54537,31943,536870888,1073741823,1,-1073741824,-4491];
v61.toString = f0;
class C62 {
    static {
        this << v61;
        new SharedArrayBuffer();
        function F67(a69, a70) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.c = a70;
            } catch(e71) {
            }
        }
    }
    constructor(a73, a74, a75) {
        super.e *= v47;
        a74[4] = v59;
        try {
            new f0();
        } catch(e77) {
        }
        function f78(a79) {
            return a79;
        }
        let v80 = [4.55590263310031,1e-15,2.220446049250313e-16,4.0,3.0];
        v80 = a74;
    }
    static [v59] = v59;
}
const v81 = new C62(v58, v59, v47);
v81[4] = v59;
const v82 = new C62(v37, v61, v58);
new C62(v58, v81, v82);
new BigInt64Array(1091060517);
