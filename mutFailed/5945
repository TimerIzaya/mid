class C3 {
    p(a5, a6) {
        try {
            a6.a = 782.3857007142519;
        } catch(e7) {
        }
        return a5;
    }
    256 = 3.0;
    set a(a9) {
        async function f10(a11, a12) {
            let v13;
            try { v13 = this.p(3.0, 3.0, a9, a11); } catch (e) {}
            const v16 = v13 >> 782.3857007142519;
            const v17 = ~a11;
            const v18 = -a11;
            v16 - v17;
            Math.exp(-6);
            a11 >>> v18;
            782.3857007142519 ** v16;
            await a11;
            return this;
        }
        f10(a9, 9007199254740992);
    }
    p(a26, a27, a28, a29) {
    }
    static p(a31) {
    }
    static #h;
}
new C3();
new C3();
function F34(a36, a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
}
const v39 = [];
const v40 = [v39,v39,v39,v39];
const v41 = [v40,v40,v40];
function f42() {
    return v41;
}
new C3();
class C47 extends C3 {
    #c;
    valueOf(a49, a50, a51, a52) {
        const o53 = {
        };
        try {
            o53.h = a51;
        } catch(e54) {
            const o56 = {
                84: arguments,
            };
            ("h").split(65535);
        }
        try {
            const o60 = {
            };
            o60.h = a51;
            o60.f = 782.3857007142519;
        } catch(e61) {
        }
        try {
            const o62 = {
            };
            o62.h = a51;
            o62.f = 782.3857007142519;
            o62.a = a49;
        } catch(e63) {
        }
        try {
            const o64 = {
            };
            o64.h = a51;
            o64.f = 782.3857007142519;
            o64.a = a49;
        } catch(e65) {
        }
        return o53;
    }
    constructor(a67, a68) {
        this.propertyIsEnumerable(F34);
    }
    static {
        try { this(this, 782.3857007142519, this, ...this); } catch (e) {}
    }
}
new C47();
new C47();
new C47();
class C80 {
    static ["22307"] = "AanB8";
    #m(a82, a83) {
        function f84() {
            return a83;
        }
        super[a83] = "MIN_SAFE_INTEGER";
        %VerifyType(a83);
        return f84;
    }
    b;
}
new C80();
new C80();
const v94 = [34352,4,-9223372036854775808,1092764849,-2147483647,-1162070362,-4294967297,8,-591755449];
new Uint16Array(v94);
Symbol.hasInstance;
const o100 = {
    "execution": "async",
    "type": "minor",
};
gc();
class C103 {
    #n(a105, a106) {
        let v108;
        try { v108 = a106["matchAll"](1000000000000.0, 128, this); } catch (e) {}
        const t117 = "matchAll";
        t117[9] = 128;
        v108?.[1726887188];
        class C111 extends Uint8Array {
        }
        let v113 = 1000000000000.0;
        const v114 = v113--;
        class C118 {
            constructor(a120) {
                const v122 = new Float32Array();
                try { v122.entries(); } catch (e) {}
                const v124 = new Uint16Array(12, -4294967296, v114);
                new Float32Array(v124, -4294967296, 268435439, v113, v124);
            }
        }
        const v126 = new C118(257828.6336153492);
        const v127 = new C118(-4294967296);
        const v128 = [v127,C118];
        class C129 extends C118 {
            [v126];
        }
        const v130 = new C129();
        try { v130.m(v128); } catch (e) {}
        return this;
    }
    static b = 1000000000000.0;
    static #e;
    #b = 128;
}
new C103();
new C103();
new C103();
Uint8Array.d = Uint8Array;
function f139() {
    for (let v140 = 0; v140 < 5; v140++) {
        for (let v141 = 0; v141 < 5; v141++) {
            Math.atanh(v141);
        }
    }
    return f139;
}
function f144() {
    Math.expm1(3375);
    const v150 = new Float64Array(64);
    v150[5] = v94;
    [v150,v94];
}
const v152 = [-1539,1,12];
function f153() {
    return f153;
}
function f154(a155, a156) {
    const o157 = {
        [a155]: v152,
    };
    return a155;
}
f154(f154);
f154();
f154(f153);
new f144();
