const v0 = /[Za(?:b)]/gviy;
const v1 = /ya\S/vms;
const v2 = /((\xed\xa0\x80))\x02a.a+/gvi;
class C3 {
    static #e = v2;
    get b() {
        function f5() {
            return v1;
        }
        return this;
    }
    set g(a7) {
    }
    static b = v0;
    #g = v2;
    f = v2;
}
const v11 = new C3();
new C3();
new C3();
class C14 {
    268435439 = C3;
    toString(a16, a17, a18) {
        try {
            v11.fuck(v11, v11);
        } catch(e20) {
        }
        return a16;
    }
    #m(a22, a23, a24) {
        new Uint8Array(4);
        new Int8Array(7);
        new Int16Array(51);
        return v2;
    }
}
class C34 {
}
const v35 = new C34();
Math.tanh(-v35);
new C14();
const v40 = new C14();
new C14();
function f42() {
    return v0;
}
function f43() {
    return v40;
}
function F47(a49, a50) {
    if (!new.target) { throw 'must be called with new'; }
}
const v51 = new F47();
function f52() {
    return f52;
}
const v53 = /{}(x)(x)(x)\4*a{0}a|b/msy;
const v56 = new BigUint64Array();
function F57(a59, a60, a61) {
    if (!new.target) { throw 'must be called with new'; }
    const v62 = this.constructor;
    try { new v62(BigUint64Array, v56, v56); } catch (e) {}
    a61[1];
    function f66(a67, a68) {
        a68 / a68;
        arguments[1];
        arguments.toString = a67;
    }
    try { f66(f52, v53); } catch (e) {}
    f66(v62, 8077n);
}
const v74 = new F57(BigUint64Array, 4, v56);
const t72 = v74.constructor;
new t72(v51, v51, v53);
