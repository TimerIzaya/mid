const v0 = [-Infinity,Infinity,959819.665748626];
const v1 = [0.881533214430694,1000000000000.0,-2.6561951388069446e+306,1e-15,-601975.7256958171,-2.0,1.0,-1000000000000.0,-5.0];
const v2 = [-6.825886894231237,-1000000000.0,-7.405832553829715,-5.0];
function f3() {
    return v0;
}
v0.length;
try {
    v1.f = v0;
} catch(e7) {
}
let v9 = "toString";
function f17() {
    const o20 = {
        "maxByteLength": 183,
    };
    const v22 = new ArrayBuffer(84, o20);
    new Int8Array(v22);
    let v26 = 1000000000000.0;
    const v27 = v26--;
    -v27;
    let v30 = 257828.6336153492;
    v30--;
    class C33 {
        static #m(a35) {
        }
        constructor(a37) {
            const v39 = new Float32Array();
            try { v39.entries(); } catch (e) {}
            const v41 = new Uint16Array(12, -4294967296, v27);
            new Float32Array(v41, -4294967296, 268435439, v26, v41);
        }
    }
    try { new C33(12); } catch (e) {}
    const v44 = new C33(v30);
    const v45 = new C33();
    const v46 = new C33(-4294967296);
    const v47 = [v46,C33];
    [v30,v46,v44,v46,v47];
    const v49 = [v46];
    class C50 extends C33 {
        [v44];
        #n(a52, a53, a54, a55) {
            return v49;
        }
    }
    const v56 = new C50();
    function f57(a58, a59) {
        return a59;
    }
    Set.toString = f57;
    Set.constructor(Set);
    const v62 = v49.constructor;
    try { v62.isArray(v49); } catch (e) {}
    class C64 extends 268435439 {
    }
    C64.a = C64;
    const v65 = new C64();
    const v66 = v65?.constructor;
    try { new v66(); } catch (e) {}
    Object.defineProperty(v65, 65537, { value: v45 });
    try { v56.m(v47); } catch (e) {}
    const o69 = {
        "e": Uint16Array,
        __proto__: 3.4890473589784586e+307,
    };
    return Int32Array;
}
%PrepareFunctionForOptimization(f17);
f17();
f17();
%OptimizeFunctionOnNextCall(f17);
[v9] = v1;
const v72 = ("function")[v9];
Int32Array in v2;
v72 & null;
f17();
