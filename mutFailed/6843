const o5 = {
    ...1.0,
    set b(a4) {
    },
};
([-7.127262073336987e+307,9.142894664271836,5.0]).toLocaleString();
const o16 = {
    ..."raw",
};
function f17() {
    return f17;
}
function f19() {
    Object.defineProperty(arguments, 13, { enumerable: true, set: f17 });
    return o16;
}
const t16 = "n";
const v25 = new t16();
v25.getPrototypeOf;
new Int32Array(1519);
Date.UTC(-64.87258063624915);
function f32(a33, a34, a35) {
    new Uint8ClampedArray(4);
    function f39() {
        return ([f39,f39]).constructor.isArray();
    }
    return f32;
}
new WeakMap();
class C45 {
    toString(a47, a48, a49, a50) {
        try { this["throw"](); } catch (e) {}
        const v56 = new Uint8ClampedArray(512);
        new Uint8ClampedArray(995);
        function f61(a62, a63) {
            a63(a62, a62, a63, f61);
        }
        const v66 = new BigInt64Array("throw", "throw", "throw");
        const v67 = `
            var c = v66;
        `;
        function f68() {
            return "growable";
        }
        const t44 = eval.bind();
        const v71 = new Uint8ClampedArray(798, ...v56, t44());
        ([-7.127262073336987e+307,9.142894664271836,5.0]).toLocaleString();
        class C74 {
        }
        const v75 = new C74();
        ReferenceError(v75);
        v71[521] = v71;
    }
    constructor(a79, a80) {
        for (let i = 0; i < 10; i++) {
            this[this];
            return -65536n;
            const v86 = new Uint8Array();
            const v89 = new Uint32Array();
            function f90(a91, a92, a93, a94) {
                const o98 = {
                    "f": 2,
                    "b": a91,
                    "c": a94,
                    ...v86,
                    n(a96, a97) {
                        v89[a91] = v89;
                    },
                };
            }
            f90(2, 2, 1, 2);
        }
    }
}
new Uint8Array(268435440);
const v103 = [-349055.72992167494,-1000000000000.0,-8.263641716323854e+307,1.050616183420453e+308,1000.0,1000.0,6.087868782871141,-1.7976931348623157e+308,3.0];
const v105 = new Int16Array(v103, Int16Array, Int16Array);
const v106 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v109 = new Uint32Array(2684, 2684, 2684);
const v111 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v112 = [601759695];
const v113 = [1073741824,1073741823,1376142744,1073741825];
function f115(a116, a117, a118, a119) {
    function f120() {
        try { new Int32Array(v103, a119, v105); } catch (e) {}
        new Int32Array();
        [-0.685155357392599,5.0];
        let v128 = -4294967295;
        v128--;
        let v130 = Float64Array;
        v130 = a117;
        b = v112;
        const v131 = v106.length;
        try {
            v113.forEach(a117, v106);
        } catch(e133) {
            e133.name = e133;
            Float32Array[2] = a116;
            const v135 = new Float32Array(Float32Array, Float32Array, Float32Array);
            function f136() {
                return v103;
            }
            Object.defineProperty(v135, "h", { configurable: true, enumerable: true, get: f136 });
        }
        Symbol.toPrimitive;
        const o142 = {
            toString(a140, a141) {
                return -4294967297n;
            },
        };
        const o156 = {
            [522675525n](a145, a146) {
            },
            [v131](a148) {
            },
            [-1]: 2684,
            1073741824: v109,
            "maxByteLength": -268435456,
            "b": v128,
            [-4294967297n](a150, a151, a152, a153) {
                eval();
            },
            "arguments": v111,
            256: a119,
            ...v112,
            ..."Vre",
            4: "Vre",
            "type": "Vre",
        };
        return o156;
    }
    f120();
    eval();
    %OptimizeFunctionOnNextCall(f120);
}
new C45();
