function f0() {
    const o10 = {
        [8]: 288889.69560962985,
        "e": 288889.69560962985,
        "g": 14466,
        valueOf(a5) {
            const v6 = [14466,a5,this,288889.69560962985];
            try {
                v6.toString = a5;
            } catch(e7) {
            }
            try {
                super.p();
            } catch(e9) {
            }
            return this;
        },
    };
    return o10;
}
f0();
f0();
f0();
new BigInt64Array(1651);
new Int16Array(8);
new Uint8Array(15);
function F23() {
    if (!new.target) { throw 'must be called with new'; }
}
function f25() {
    [Math.atanh(1651)];
    return Math;
}
class C30 {
    static {
        for (let v32 = 0; v32 < 25; v32++) {
            function f33() {
                return C30;
            }
            const v34 = [601759695];
            const v35 = [1073741824,1073741823,1376142744,1073741825];
            function f37(a38, a39, a40, a41) {
                function f43() {
                    return a38;
                }
                const v44 = f33();
                const v46 = new Int8Array();
                const v49 = new Uint32Array(4);
                [v49];
                const v53 = BigUint64Array * 536870887;
                v53 ** v53;
                function f55(a56, a57) {
                    return v44;
                }
                const v58 = f55();
                const v59 = v46.buffer;
                Object.defineProperty(a41, "constructor", { writable: true, configurable: true, value: Date });
                new Int8Array();
                v59.slice(2147483648);
                %OptimizeFunctionOnNextCall(f43);
                let v64;
                try { v64 = v35["find"](..."find", a41, ...v34, ...v35, ...522675525n); } catch (e) {}
                Symbol("find");
                new Uint8ClampedArray();
                const o69 = {
                    ...C30,
                };
                v64 <= a40;
                return v58;
            }
            for (let v71 = 0; v71 < 5; v71++) {
                f37(this, v71, v71, v71);
            }
        }
    }
}
