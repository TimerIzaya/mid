const v3 = (5.918647712342657e+307)[5.918647712342657e+307];
try {
    v3.f = 5.918647712342657e+307;
} catch(e4) {
}
let v7;
try { v7 = v3(233, 233, v3, Float64Array); } catch (e) {}
new Float32Array(2636);
new Int32Array(0);
const v16 = new Int16Array(1041);
new Float64Array(396575.21948614344);
const v20 = new Uint32Array(Float64Array);
const v23 = new Uint8Array(2643);
let v24 = 0;
do {
    v23 instanceof v7;
    v24++;
} while (v24 < 10)
const v29 = async (a30, a31, a32) => {
    %VerifyType(a32);
    await v23;
    return v20;
};
const v35 = new BigUint64Array();
const v37 = new Uint32Array();
[] = v37;
v35 && BigUint64Array;
try {
const t0 = -2.0;
t0();
} catch (e) {}
/(ab)/us;
/Ha+b/diy;
/4a\w/vmsy;
v29(v16, Int16Array, Int16Array);
%PrepareFunctionForOptimization(v29);
v29(v16, Int16Array, Int16Array);
v29(v16, Int16Array, Int16Array);
%OptimizeFunctionOnNextCall(v29);
v29(v16, Int16Array, Int16Array);
