let v1 = -Infinity;
class C3 {
    static 536870912;
    b;
    static [-3613];
    static #g = 536870912;
    static [v1] = v1;
    static {
        f = 536870912;
        for (let v6 = 0; v6 < 32; v6++) {
            this["p" + v6] = v6;
        }
        if (C3) {
            super.g;
        } else {
            Number[9] = -3613;
            v1 >>>= v1;
        }
    }
}
const v10 = new C3();
new C3();
new C3();
[213434.2615775948];
let v17 = [-3.3682072320756774e+307,0.8331783904063061,2.753981075947326,1000.0,-1e-15,1000000.0,0.4758631820495509,7.422947081866734e+307,2.220446049250313e-16,-1.0390623527629173e+308];
const v18 = [-7.862051231128897,656513.5175178815,Infinity];
for (let v19 = 0; v19 < 25; v19++) {
    const v20 = [601759695];
    const v21 = [1073741824,1073741823,1376142744,1073741825];
    function f22(a23, a24, a25, a26) {
        try { v21["find"](..."find", ...a26, ...v20); } catch (e) {}
        return v19;
    }
    for (let v29 = 0; v29 < 10; v29++) {
        f22(f22, v20, v29, v20);
    }
}
const o31 = {
};
new Proxy(v10, o31);
Math.ceil(1746560094);
const v38 = ++v17;
Math.log2(0.3825822029324242);
const v40 = +v38;
~v18;
Math.log10(v17);
Math.imul(v40, v38);
