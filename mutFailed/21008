function f0() {
}
const v1 = [-2147483649,129,127,-45363,-40292,1,1,42664,65536];
const v2 = [-47421,9223372036854775807,-918500167,1,-3,964144174,1000];
[9,-1073741824,231505787,-42915,-9,-508763709];
Date[Symbol.species] = Date;
const v7 = new Date();
new Int32Array(9);
for (let [v12,...v13] of "atan2") {
}
function F17(a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a19;
    } catch(e22) {
    }
}
new F17(v2, v1, 739.4849141378031);
new F17(v1, v1, F17);
new F17(v1, v1, v7);
const v27 = /Cs[\cz]*/vi;
function f28(a29, a30) {
    -172467.09787742724 - -243185118;
    (-172467.09787742724) ** -243185118;
    (-243185118 >> v2) << -172467.09787742724;
    return F17;
}
Object.defineProperty(v27, Symbol.toPrimitive, { writable: true, value: f28 });
class C42 {
    static {
    }
}
for (let v44 = 0; v44 < 25; v44++) {
    function f45(a46, a47) {
        const o49 = {
            get h() {
                return this;
            },
        };
        return o49;
    }
    for (let v50 = 0; v50 < 5; v50++) {
        const v51 = f45(f45, v50);
        Object.defineProperty(v51, v50, { enumerable: true, get: f45, set: f45 });
        Reflect.preventExtensions(v51);
    }
    [601759695];
    let v55 = /a|b/vdy;
    let v56 = /7Z(?:a?)+/gudsy;
    const v57 = /\coQ/gdy;
    function F58(a60) {
        if (!new.target) { throw 'must be called with new'; }
        this.g = v56;
        try {
            this.e = v55;
        } catch(e61) {
        }
        try {
            this.g = a60;
        } catch(e62) {
            v57.dotAll >>= e62;
            let v63;
            try { v63 = e62(e62, v56); } catch (e) {}
            v56 = v55;
            return e62;
            v55 = v63;
        }
    }
    const v64 = new F58(v55);
    let v65;
    try { v65 = v56(F58); } catch (e) {}
    const v67 = v64 === v65 ? v64 : v65;
    const o68 = {
        [v44]: v27,
        "f": v67,
    };
    [1073741824,1073741823,1376142744,1073741825];
    function f71(a72, a73, a74, a75) {
        Object.defineProperty(arguments, "g", { enumerable: true, value: arguments });
        for (let v78 = 0; v78 < 5; v78++) {
            v78 < 2;
            try {
                arguments.g = v78;
            } catch(e81) {
            }
            v78++;
        }
        function f83() {
            return a72;
        }
        const v85 = new Int8Array();
        function f86(a87, a88) {
        }
        f86();
        const v90 = v85.buffer;
        Object.defineProperty(v90, "constructor", { writable: true, configurable: true, value: Date });
        class C94 {
        }
        function f95(a96, a97, a98, a99) {
            let v100 = 10;
            for (; v100--;) {
            }
            try { a97.apply(a96); } catch (e) {}
        }
        f95(v44, C94);
        -(46598 / v27);
        Math.log1p(46598);
        v90.slice();
        try { ("find")["find"](); } catch (e) {}
        const v113 = new Uint8Array(2707, 2707, 128);
        let v114;
        try { v114 = v113.findLastIndex(v113, v113); } catch (e) {}
        const o115 = {
            [v114]: Uint8Array,
        };
    }
    for (let v116 = 0; v116 < 5; v116++) {
        f71();
    }
}
