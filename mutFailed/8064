[];
const v2 = new Map();
const v5 = -1852664045n << -1852664045n;
6 | 6;
6 - 6;
const v11 = new Uint8ClampedArray(6);
const v12 = v11?.constructor;
v12.prototype = v12;
let v13;
try { v13 = new v12(Uint8ClampedArray, -9223372036854775807n, v5); } catch (e) {}
try { v13.filter(v13); } catch (e) {}
3979 / 3979;
new Int8Array(3979);
Uint8ClampedArray.prototype = Uint8ClampedArray;
new Uint8ClampedArray(100);
2 === 2;
try { new Float32Array(2, 2, 2); } catch (e) {}
const v26 = new Float32Array(2);
Int32Array.name = v2;
const v28 = new Int32Array(v26, 2);
try { v28.lastIndexOf(Map); } catch (e) {}
const v30 = Float32Array;
const v31 = v28.fill(...v30);
try { v31.set(Int32Array); } catch (e) {}
