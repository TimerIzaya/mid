const v0 = [];
const v1 = /abc|def|ghi/um;
const v2 = /J\1(a)/vmy;
const v3 = /]a{12z}/gdsy;
function f4(a5, a6) {
    a5.b = a5;
    a6.dotAll = a6;
    const v8 = new Float64Array();
    try { v8.entries(); } catch (e) {}
    -1.5286188982640463e+308 << -1.5286188982640463e+308;
    const v12 = delete v8[-1.5286188982640463e+308];
    v12 || v12;
    Uint8Array.e = Uint8Array;
    new Uint8Array();
    const o41 = {
        "g": a5,
        __proto__: a6,
        [v1](a17, a18, a19, a20) {
            let {"global":v21,"sticky":v22,...v23} = v3;
            a19[a6] /= a19;
            this[a5] = v22;
            try { a18.compile(a19); } catch (e) {}
            let v26 = -65536;
            let v27 = --v26;
            const o29 = {
                84: arguments,
            };
            const v30 = a18 < a18;
            const o34 = {
                "b": v21,
                "c": v8,
                n(a32, a33) {
                    return v30;
                },
            };
            const v35 = v27++;
            let v36 = !v21;
            v36 << v21;
            v36++;
            --v36;
            Math.round(v35);
            return a6;
        },
    };
    return o41;
}
f4(v1, v3);
try { SharedArrayBuffer.propertyIsEnumerable(SharedArrayBuffer); } catch (e) {}
SharedArrayBuffer.prototype = SharedArrayBuffer;
new SharedArrayBuffer();
new Uint16Array(231);
const v49 = f4(v3, v3);
v49.e = v49;
const v50 = f4(v1, v3);
class C51 {
    constructor(a53, a54, a55) {
        try { this.toLocaleString(); } catch (e) {}
        a53.flags;
        const v58 = a54?.constructor;
        try { new v58(v2, f4); } catch (e) {}
        const v60 = a53.multiline;
        v60 || v60;
        const v62 = a54.constructor;
        v62.rightContext = v62;
        try { new v62(a54, a54); } catch (e) {}
        class C64 extends v62 {
        }
        C64.prototype;
        let v66;
        try { v66 = new C64(); } catch (e) {}
        v66.lastIndex = v66;
        new C64();
    }
    static {
        this.name = this;
        const v70 = this.prototype?.constructor;
        try { new v70(this, 231, 231); } catch (e) {}
        try {
            v1.multiline = f4;
        } catch(e72) {
            e72.stack;
        }
    }
    /*
    constructor(a75, a76) {
        for (let i = 0; i < 10; i++) {
            this[this];
        }
    }
    */
    static #f;
    /*
    constructor(a79, a80) {
        const v81 = v50.g;
        try {
            v81.#f = v49;
        } catch(e82) {
        }
    }
    */
}
try { C51.propertyIsEnumerable(v2); } catch (e) {}
const v84 = new C51(v2, v1);
const v85 = v84?.__defineSetter__;
try { new v85(v2, v84); } catch (e) {}
new C51(v3, v1);
const v88 = new C51(v3, v1);
const v89 = v88?.constructor;
try { new v89(v89, v89, v0); } catch (e) {}
try { new v89(v3, v50, v88); } catch (e) {}
function f92() {
    return v88;
}
3824 ^ 3824;
new Int16Array(3824);
let v97 = 8;
v97++;
function f99(a100, a101, a102) {
    return f99;
}
try { ("29753").toLocaleLowerCase(); } catch (e) {}
let v106;
try { v106 = ("29753").charAt(v97); } catch (e) {}
try { v106.lastIndexOf(231); } catch (e) {}
const v108 = ("29753").replaceAll("29753", "b");
try { v108.strike(); } catch (e) {}
const v111 = new Int16Array(v97);
try { v111.join(v88); } catch (e) {}
let v113 = 1621;
v113++;
Int32Array.BYTES_PER_ELEMENT = Int32Array;
new Int32Array(v113);
class C118 extends BigInt64Array {
}
C118.length;
