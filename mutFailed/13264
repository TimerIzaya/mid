function f1() {
    ("D")[0].substring().charCodeAt();
    return "D";
}
%PrepareFunctionForOptimization(f1);
new BigUint64Array(276);
let v8 = 4096;
v8--;
Int32Array.length;
Math.acosh("9g9Ak");
"9g9Ak" % undefined;
new Int32Array(v8);
127 >>> 127;
const v20 = [];
function f21() {
    const o25 = {
        toString() {
            super[this];
            return this;
        },
        ...v20,
        n() {
            return this;
        },
    };
}
const v27 = new Int16Array(127);
class C31 extends BigUint64Array {
    toString(a33, a34, a35) {
        new Float64Array(256);
        new Uint8Array(148);
        const v44 = new Uint8Array(1920);
        return v44;
    }
    c = v27;
    static b;
    static #m(a46, a47, a48, a49) {
    }
    constructor(a51, a52, a53, a54) {
        const t39 = this.constructor;
        t39();
        a52 >>> a52;
        -0.0 >>> -0.0;
    }
}
C31.length;
new C31();
new C31();
const v66 = new Float64Array(3575);
new Uint16Array(v66);
new C31();
Float32Array.name = Float32Array;
class C70 {
}
const v71 = C70.__lookupGetter__;
v71.length = v71;
v71.apply(Float32Array);
