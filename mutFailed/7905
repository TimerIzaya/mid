const v0 = [-2705,-43660,9223372036854775807,55806,10];
const v1 = [12,4294967297,-12866,1028637768,10,12];
const v2 = [728292771,55927,26879,-65535,5];
function f3() {
    return v2;
}
function F4(a6) {
    if (!new.target) { throw 'must be called with new'; }
    const v7 = this?.constructor;
    try { new v7(v7); } catch (e) {}
    try {
        this.a = a6;
    } catch(e9) {
    }
    try {
        this.g = a6;
    } catch(e10) {
    }
}
const v11 = new F4(v2);
const v12 = new F4(v1);
new v12(v1);
const v15 = new WeakMap();
try { v15.get(v0); } catch (e) {}
class C20 {
    4;
    constructor() {
        this.e = this;
        super.f >>= this;
    }
    b = v2;
    n(a23, a24) {
    }
    2658944561 = -2.2250738585072014e-308;
    static 134;
    #c = -65535;
    static [-2.2250738585072014e-308] = -2.2250738585072014e-308;
}
const v25 = C20?.__lookupSetter__;
try { new v25(v11); } catch (e) {}
const v27 = new C20(2142097854, -2.2250738585072014e-308);
v27[2658944561];
new C20(-2.2250738585072014e-308, v27);
new C20(2142097854, C20);
new WeakMap();
const v35 = new Uint8ClampedArray();
const v36 = v35?.findLast;
try { new v36(v2); } catch (e) {}
Uint8Array.BYTES_PER_ELEMENT = Uint8Array;
const v39 = new Uint8Array(64);
Int32Array.prototype = Int32Array;
const v43 = new Int32Array(v39);
v43[61];
const v46 = new BigInt64Array();
const v47 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
const v48 = [-1.7976931348623157e+308];
try { v48.copyWithin(v47, 64); } catch (e) {}
function f50(a51, a52, a53, a54) {
    try { a53.entries(); } catch (e) {}
    const o60 = {
        toString(a57, a58, a59) {
            return 64;
        },
    };
    function f61() {
        const o65 = {
            [3](a64) {
            },
        };
    }
    try { new f61(); } catch (e) {}
    return a51;
}
f50.caller = f50;
f50(v46, 129, v48).length;
v12(v43, 129, v47);
try { v35(-85357.59116785484, v39); } catch (e) {}
