const v0 = [];
const v3 = new Uint32Array(256);
const v6 = new BigInt64Array(10);
new Int8Array(2801);
class C10 {
    constructor(a12, a13, a14, a15) {
        v3 << 256;
        v6.__proto__;
    }
    static n(a19, a20, a21, a22) {
        [a21,2801,256,...v6,a22];
        let {"buffer":v24,"byteOffset":v25,"length":v26,} = v3;
        return a20;
    }
    #f;
    1 = 2801;
    #e;
    static #c = Int8Array;
    #b;
}
const v27 = new C10(C10, BigInt64Array, 10, 2801);
new C10(v0, Int8Array, 2801, 2801);
new C10(Uint32Array, v27, 10, 10);
const v33 = [];
const v34 = [0n,0n,0n,0n];
class C35 {
    constructor(a37, a38) {
        function F39(a41, a42) {
            if (!new.target) { throw 'must be called with new'; }
            const v43 = this?.constructor;
            try { new v43(v34, this); } catch (e) {}
            a42 ^ a42;
            this.b = v33;
        }
        new F39();
        const v47 = new F39();
        new v47();
    }
}
new C35();
new C35();
new C35();
const o55 = {
    "type": "minor",
};
gc(o55);
