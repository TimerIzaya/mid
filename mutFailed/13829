function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    a5.trimLeft().strike();
    const v9 = this.constructor;
    try { new v9("a", "a"); } catch (e) {}
}
new Int8Array(9);
const v17 = new BigInt64Array(4096);
new Float32Array(7);
function F21(a23, a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
}
const v27 = new F21();
const v28 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
class C29 {
}
const v31 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v32 = [601759695];
function f34(a35, a36, a37, a38) {
    function f39() {
        let v42 = Float64Array;
        v42 = a36;
        b = v32;
        v28.length;
        f39()?.b;
        7 & 7;
        function f47() {
            return f47;
        }
        try {
            v28.forEach(a36);
            function F50(a52, a53) {
                if (!new.target) { throw 'must be called with new'; }
                const v54 = this.constructor;
                try { new v54(); } catch (e) {}
                const o57 = {
                    0: "1ya",
                    162: "1ya",
                };
            }
            new F50();
        } catch(e60) {
        }
        const v61 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        let v63 = Symbol.toPrimitive;
        const o76 = {
            toString(a65, a66) {
                new Int8Array(16);
                [-2,-13,-56984,-56984];
                const v74 = a38 && a36;
                a65 *= v63;
                v74 <= v61;
                return v32;
            },
        };
        const o99 = {
            "c": -4294967297n,
            "d": F21,
            "type": "n",
            "e": v17,
            valueOf(a79) {
            },
            [522675525n](a81, a82) {
            },
            "c": v32,
            valueOf(a84, a85) {
                return a84;
            },
            "b": -4294967295,
            [-268435456](a87, a88, a89, a90) {
            },
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v31,
            ...v27,
            [v63]() {
            },
            "type": Symbol,
            ...-4294967295,
            valueOf(a93, a94) {
                return a94;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": a35,
            toString(a96, a97, a98) {
                return C29;
            },
            5: -4294967295,
            6: -268435456,
        };
        v63 = v42;
        new Float32Array(1334);
        new Float64Array(3);
        new Uint16Array(2);
    }
    f39();
    const v111 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
    new Int16Array(v111);
    [/LD/vds,1000.0];
    %OptimizeFunctionOnNextCall(f39);
    return v31;
}
for (let v117 = 0; v117 < 5; v117++) {
    f34();
}
new Int8Array(Int8Array);
for (let [i128, i129] = (() => {
        const v122 = [-6.078081144782104,3.0,-1000.0,4.739392359408212,-1.3763335971087312e+307,5.0,0.8267200417626637,276.24411996178765,2.2250738585072014e-308];
        for (let v123 = 0; v123 < 25; v123++) {
            v122["p" + v123] = v123;
        }
        return [0, 10];
    })();
    i128 < i129;
    (() => {
        i128++;
        const o134 = {
            ...v32,
        };
        const v136 = new Set();
        class C137 {
            [v136];
            static {
            }
        }
    })()) {
}
