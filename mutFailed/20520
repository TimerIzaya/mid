[];
new Uint32Array(619);
const o9 = {
};
const v11 = new Proxy(BigInt64Array, o9);
let v13;
try { v13 = o9["toTimeString"]("toTimeString", -2.0924111841617065e+307, 60); } catch (e) {}
const v14 = new BigInt64Array(619);
Object.defineProperty(v14, "e", { writable: true, configurable: true, value: v11 });
/\u0060/vims;
/gM/gudi;
/3abc|def|ghi[x](?:ab)*/gudiy;
v13.byteOffset **= 619;
new Int32Array(2452);
const v21 = [];
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    const v26 = this.constructor;
    try { new v26(a24, v21, F22, a24); } catch (e) {}
    v21[129];
    Math.asinh();
}
new F22();
new F22();
