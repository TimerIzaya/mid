const v0 = [];
-2109345452n / -2109345452n;
class C5 {
    [v0];
    #toString(a7, a8) {
        try {
            function f9() {
                return -2109345452n;
            }
        } finally {
            const v10 = this;
        }
        return -310411688n;
    }
    [-310411688n] = -2109345452n;
    #b;
}
new C5();
const v12 = new C5();
const v13 = v12?.toLocaleString;
try { new v13(); } catch (e) {}
const v15 = new C5();
class C16 {
    get a() {
        v0.forEach(C5, C5[v15], v12, this, v15);
        return -2109345452n;
    }
    static #b = v12;
    static get g() {
        this instanceof C5;
        v12[1961575001];
        const v24 = new Map();
        return v24;
    }
}
const v25 = new C16();
const v26 = v25?.constructor;
try { new v26(); } catch (e) {}
new C16();
new C16();
function F30(a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = this;
    const v34 = a33?.constructor;
    try { new v34(); } catch (e) {}
    try {
        this.c = a33;
    } catch(e36) {
    }
}
new F30(-2109345452n, v25);
const v38 = new F30(-310411688n, C5);
v38.__proto__ = v38;
new F30(-128n, v25);
function f40() {
    const o75 = {
        set a(a43) {
            let v45 = ~1531487198;
            const v46 = [748666.7832804511,3.0];
            class C48 extends Float64Array {
                [v46];
            }
            const v49 = v45++;
            class C50 {
                static #m(a52) {
                }
            }
            const v53 = C50();
            const v54 = C50();
            const v55 = [];
            const v56 = [v54];
            class C57 extends C50 {
                #n(a59, a60, a61, a62) {
                    for (const v63 of a61) {
                        const t74 = super.b;
                        t74[v46] = -2147483647;
                    }
                    try { v55.shift(); } catch (e) {}
                    function f66() {
                    }
                }
                #g;
            }
            const v67 = C57();
            class C69 extends v56.constructor {
            }
            const v70 = new C69();
            Object.defineProperty(v70, 65537, { value: v53 });
            try { v67.m(v55); } catch (e) {}
            !v49;
            let v73;
            try { v73 = a43(); } catch (e) {}
            v73[-2147483647];
        },
    };
}
10 >> 10;
const v80 = new BigUint64Array(10);
for (const v82 in v80) {
    try { v82.trim(); } catch (e) {}
    new Float64Array(2147483647);
}
f40();
