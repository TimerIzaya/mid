class C3 {
    static 0;
    constructor(a5, a6) {
        a5 - a5;
        a6 / a6;
        Symbol.hasInstance = Symbol;
        const v10 = Symbol.iterator;
        Symbol.for(v10.description);
        const o22 = {
            [v10]() {
                const o21 = {
                    __proto__: a6,
                    ...this,
                    "c": 10,
                    "d": 65537,
                    ...Symbol,
                    next() {
                        let v16 = this;
                        v16--;
                        const v19 = 65537 == 0;
                        const o20 = {
                            "done": v19,
                            "value": 10,
                        };
                        return a6;
                    },
                };
                return o21;
            },
        };
        o22.h = o22;
    }
}
try { C3(-3.946201731759088e+307, -5.0); } catch (e) {}
const v24 = new C3(-3.946201731759088e+307, 65537);
const v25 = new C3(v24, v24);
const v26 = new C3(C3, v24);
const v27 = v26?.constructor;
try { new v27(v26, -5.0); } catch (e) {}
let v32 = 1856;
const v34 = new Float32Array(v32);
const v35 = v34?.constructor;
try { new v35(Float32Array, 4n, 4n); } catch (e) {}
new BigInt64Array(14);
new Uint16Array(1064);
-1073741824 % -1073741824;
let v45 = v32--;
v45++;
[1073741824,1073741823,1376142744,1073741825];
536870887 != 536870887;
const v52 = BigUint64Array * v25;
const v54 = ~(v52 ** v52);
const v55 = new Int8Array(v25);
v55.includes(v54);
~v55.lastIndexOf(-1073741824);
