class C3 {
    constructor(a5, a6) {
        try { a5.blink(); } catch (e) {}
        new Uint32Array(129);
        3804 * 3804;
        const v14 = new BigUint64Array(3804);
        v14[2407];
        new Uint32Array(1756);
    }
    static #b;
    b;
    7 = "w";
}
new C3("-268435456", "w");
new C3("1992236988", "1992236988");
const v21 = new C3("-268435456", "1992236988");
v21[7] = v21;
const v22 = [-Infinity];
[-2.586742783734042,-Infinity,Infinity,0.23548415193239136,-2.220446049250313e-16,1.7976931348623157e+308];
function F24(a26) {
    if (!new.target) { throw 'must be called with new'; }
}
9907n * 9907n;
for (let i = 0; i < 5; i++) {
    try {
    const t0 = 9907n;
    t0();
    } catch (e) {}
}
[1e-15,-4.0,-4.0];
2.2250738585072014e-308 - 2.2250738585072014e-308;
2147483647n / 2147483647n;
class C39 {
    toString(a41, a42) {
        function f43(a44) {
            let v45;
            try { v45 = a44.atanh(a44, a41, 9907n, "-268435456", 2147483647n); } catch (e) {}
            let v46 = "-185650492";
            v46 = v45;
            return C39;
        }
        this.toString = f43;
        const v47 = this?.toString;
        try { new v47(C3, C3); } catch (e) {}
        class C49 {
            constructor(a51) {
                for (let v52 = 0; v52 < 32; v52++) {
                    v52 - v52;
                    for (let v54 = 0; v54 < 5; v54++) {
                    }
                    try { a51(); } catch (e) {}
                }
            }
        }
        const v56 = new C49(a41);
        new C49(v56);
        const v58 = new C49();
        try { v58.propertyIsEnumerable(9007199254740991n); } catch (e) {}
    }
}
try { new C39(); } catch (e) {}
const v61 = new C39();
function f62(a63) {
    function f64() {
        return f64;
    }
    return a63;
}
v61.constructor = f62;
try { v61.toString(C3, 7n); } catch (e) {}
function f66(a67, a68, a69, a70) {
    const o74 = {
        [v61]: a68,
        "arguments": v22,
        set a(a72) {
            v22.g;
        },
        "execution": "1992236988",
    };
    return v61;
}
const v75 = f66(f66, f66, f66, v61);
const v76 = v75?.constructor;
try { new v76(); } catch (e) {}
f66();
const v79 = f66(C39, C39, v75, C39);
v79.length = v79;
v79.length;
