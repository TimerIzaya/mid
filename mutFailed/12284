const v0 = [14,1059049426,9223372036854775807,2147483649,9];
const v1 = [18123,10,-1248048968,65537,2147483648,-58863,-2,12,-57937];
const v2 = [1591675279,9223372036854775807,29085,0,-4739];
class C7 {
    static #g = -536870912;
    valueOf(a9, a10, a11) {
        try {
            try { this.values(a9); } catch (e) {}
        } catch(e13) {
            function F14(a16, a17) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    Object.defineProperty(a10, F14, { configurable: true, enumerable: true, value: a10 });
                    const v18 = v2.length;
                    new F14(F14, -268435456);
                    const v22 = -536870912 | 1073741825;
                    Math.log10(v22);
                    const v24 = v22 ** v22;
                    Math.cos(v24);
                    v18 ^ 1073741825;
                    v24 & 1073741825;
                    v18 / v24;
                    this.d = a16;
                } catch(e29) {
                }
                try {
                    this.f = a11;
                } catch(e30) {
                    function f31(a32) {
                        return this;
                    }
                    class C33 extends f31 {
                        [-268435456];
                    }
                }
                try {
                    v0.c = a17;
                } catch(e34) {
                }
            }
            new F14(v0, this);
            new F14(v2, e13);
            const v37 = new F14(v1, v2);
            let v38;
            try { v38 = C7(this, -536870912, e13, v37); } catch (e) {}
            [-4294967297,-389765985,-8,-1,4,16];
            [-1,606598277,-9007199254740991,1073741824,291215490,0,47166,1232986518];
            [16,1924530634,4,-626882158,1024];
            try { new v38(); } catch (e) {}
        } finally {
            try {
                this.fuck(v0, a10, v0);
            } catch(e44) {
            }
        }
        return v2;
    }
}
new C7();
const v46 = new C7();
new C7();
v46 ** "Ji";
("MIN_VALUE").__proto__;
new Float32Array(2);
new BigInt64Array(66);
new Uint32Array(2608);
class C66 {
    static set f(a68) {
        C66 = -256;
    }
    e;
    static g;
}
function f70() {
    return f70;
}
class C71 extends 2 {
}
class C72 extends C71 {
}
function f75(a76, a77, a78, a79) {
    try {
    const t0 = -4.883782808310617e+307;
    t0();
    } catch (e) {}
    a77 & a77;
    const v82 = 3 | C72;
    v82 * v82;
    const v84 = a76 / a76;
    const v85 = a77 < a77;
    const o89 = {
        n(a87, a88) {
            return v85;
        },
    };
    return v84;
}
for (let v90 = 0; v90 < 500; v90++) {
    f75(Uint8Array);
}
let v94 = undefined;
const o95 = {
};
v94 = o95;
