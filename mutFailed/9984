new Float64Array(3695);
new BigInt64Array(88);
new Float64Array(0);
class C12 {
}
for (let v13 = 0; v13 < 5; v13++) {
    function f14() {
        ("number").slice();
        return f14;
    }
    f14();
    %OptimizeFunctionOnNextCall(f14);
}
function f18() {
    return f18;
}
const v19 = /(?:a*)+q(?<a>.)/guds;
function f20(a21) {
    const v22 = a21.constructor;
    const v24 = new Uint8ClampedArray();
    const v26 = v24 ^ 3;
    try { v22(a21, f18); } catch (e) {}
    class C28 {
    }
    return v26;
}
for (let [i38, i39] = (() => {
        new Uint8ClampedArray(1366016546);
        C12.call();
        const v34 = [1000];
        const v37 = new Int8Array(1342);
        Object.defineProperty(v37, v34, { writable: true, enumerable: true, value: v37 });
        return [0, 10];
    })();
    (() => {
        const v40 = i38 < i39;
        let v42 = 0.0;
        function f43(a44) {
            return a44;
        }
        let v45 = -1000000.0;
        class C46 {
            static g = 2.2250738585072014e-308;
            #c = v42;
            #e;
            static set a(a48) {
                v42 ^= 2.2250738585072014e-308;
                ({"b":v42,"c":a48,"g":v45,} = a48);
            }
            get f() {
                const v50 = v45 % v42;
                const v52 = Symbol.replace;
                2.2250738585072014e-308 || 2.2250738585072014e-308;
                try {
                    v52.#e;
                } catch(e55) {
                    return [923.3408061449261,-6.350919708227568e+307,-2.220446049250313e-16,0.04850379751250988,4.009495502233909];
                    ([134133844,-339370636,65535,-4294967295,536870888,-324130953,536870912,268435439]).length;
                }
                return v50;
            }
        }
        let v59;
        try { v59 = new C46(); } catch (e) {}
        const v60 = new C46();
        const v61 = new C46();
        const v62 = [v61,v61,v60];
        const v63 = [v61,v62];
        const v64 = [2.2250738585072014e-308];
        try { i39.groupToMap(f43); } catch (e) {}
        const v66 = new f18(2.2250738585072014e-308, f18, v63);
        v66.a = v66;
        const v67 = new f18(v62, v66, v64);
        const v68 = new f18(v67, v67, v62);
        const v70 = [134133844,-339370636,65535,-4294967295,536870888,-324130953,536870912,268435439];
        function f71(a72, a73, a74, a75) {
            function f76() {
                const v77 = v70.length;
                const v79 = v68.__lookupSetter__.length;
                class C82 extends Uint8Array {
                    constructor(a84, a85) {
                        v67.__proto__?.[a85];
                        new Int16Array(2);
                        new Uint16Array(192);
                        new Float64Array(588);
                        ([636.0619904743435,-1.0,1.02880264701966e+308,-656.9941137140671,-29.012861243904695,1000000000000.0])["flat"]();
                        function F102(a104, a105, a106) {
                            if (!new.target) { throw 'must be called with new'; }
                            const v107 = this.constructor;
                            try { new v107(); } catch (e) {}
                            this.h = -6.336273045214518e+306;
                            this.g = -1.7976931348623157e+308;
                        }
                        const v110 = new Uint16Array();
                        function f112() {
                            let v115 = 257828.6336153492;
                            v115--;
                            class C118 {
                                static #m(a120) {
                                }
                            }
                            const v121 = new C118();
                            [-13,8,-1073741824,-9007199254740990,536870889,47670,-36072,9,268435441,1];
                            new C118();
                            const v124 = new C118();
                            const v125 = [v124];
                            new BigUint64Array(2141);
                            v125.map(v110);
                            const v129 = [];
                            for (let i131 = 0; i131 < 2; i131++) {
                                new F102(undefined, v121, undefined);
                            }
                            class C139 extends C118 {
                            }
                            C139.prototype = C139;
                            const v140 = v129.constructor;
                            !v140.isArray();
                            class C143 extends v140 {
                            }
                        }
                        a84[1] = Float64Array;
                        super(a84);
                    }
                }
                function f146(a147) {
                    const o150 = {
                        "g": 1000000000.0,
                        set a(a149) {
                            a149.h = this;
                        },
                        "h": a147,
                        "d": 1000000000.0,
                        "f": v79,
                        __proto__: C82,
                        "e": a147,
                        "a": a73,
                        "b": a72,
                        "b": -1.1013479045636231e+308,
                        2: a147,
                    };
                    return o150;
                }
                f146();
                const v152 = v77 >>> v77;
                const v153 = v152 % v152;
                v153 - v153;
                a73[v153 & v153] += v59;
                const o156 = {
                    "apply": Date,
                    "construct": f146,
                    "defineProperty": f146,
                    "deleteProperty": f71,
                    "get": Date,
                    "getOwnPropertyDescriptor": f146,
                    "getPrototypeOf": f43,
                    "ownKeys": Date,
                    "setPrototypeOf": f76,
                };
                new Proxy(C82, o156);
                return f71;
            }
            try { f76(); } catch (e) {}
            new Int32Array(2528);
            new Int8Array([v62]);
            f76();
            %OptimizeFunctionOnNextCall(f76);
            return f76;
        }
        return v40;
    })();
    i39--) {
    for (let v172 = 0; v172 < 50; v172++) {
        f20(v19);
    }
}
