const v0 = [-88.83830040480836,-1000.0,-235.94036235389933,612109.8796272252,1.0927281907511203e+308,2.0,321410.7768492764,1.7976931348623157e+308,680657.7883940514];
const v1 = [1000000000.0,7.537889039905519e+307,4.001134329047108,-8.680908518716515e+305,5.380956761166125,1000000.0];
const v2 = [-2.2250738585072014e-308,-1.072785420916429e+308,-117.12894567893397,-1000000.0,8.61601954663439,-1e-15,-1000.0];
const v4 = new WeakSet();
let v7 = new Array(255);
const v9 = new WeakSet(255, v1, 255);
class C10 extends WeakSet {
    static n(a12, a13) {
        !v9;
        v4[1024] || a12;
        let v17;
        try { v17 = v7.keys(); } catch (e) {}
        Object.defineProperty(v2, "g", { writable: true, get: Array, set: Array });
        v7 = v0;
        try { v17(this, v0, v7, v0, a13); } catch (e) {}
        return a12;
    }
    static c = WeakSet;
    e = v4;
    static [-1] = v7;
    8;
}
new C10();
new C10();
new C10();
function f22() {
    const v25 = [8n,8n,8n,8n] > 255;
    let v26 = 0;
    for (let v27 = 0; v27 < 5; v27++) {
        Array(36862);
    }
    while ((() => {
            const v33 = [65537,1073741825,7841,-12,13];
            const v34 = [1073741823,4294967295];
            v34[1] = v34;
            function F35(a37, a38, a39) {
                if (!new.target) { throw 'must be called with new'; }
                const v40 = this.constructor;
                try { new v40(a37, a38, a38); } catch (e) {}
                a37.pop();
                a39.g = a39;
            }
            new F35(v33, v34, v33);
            const v44 = new F35(v33, v34, WeakSet);
            new F35(v34, v34, v44);
            return v26 < 10;
        })()) {
        for (let v47 = 0; v47 < 5; v47++) {
            "n" + v47;
        }
        v26++;
    }
    return v25;
}
%PrepareFunctionForOptimization(f22);
f22();
%OptimizeFunctionOnNextCall(f22);
f22();
