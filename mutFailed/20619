new Map();
const v4 = new Array(2);
function F5(a7) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a7;
    } catch(e8) {
    }
}
const v9 = new F5(v4);
const v10 = new F5(Map);
const v11 = new F5(v10);
function F12(a14, a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a14;
    } catch(e18) {
    }
}
new F12(v11, v11, 2, v9);
const v20 = new F12(v11, v11, v4, v9);
new F12(v11, v11, v20, v11);
new Uint8ClampedArray(237);
new Int32Array(128);
new Float64Array(4);
class C34 {
    constructor(a36, a37) {
        const v38 = a37 - a37;
        let v39;
        try { v39 = new a36(-5.869943149384486, a37, a37, a37, ...0.2510089730549625, 512.29276402866); } catch (e) {}
        try {
            super.m(v10);
        } catch(e41) {
        }
        a37 = v38;
        try { ("m").match(a36); } catch (e) {}
        try { v39["m"](v39, "m", a36, this, v39); } catch (e) {}
        Math.sign(0.8907211315752046);
        const v50 = -2 & 0.8907211315752046;
        Math.sqrt(0.8907211315752046);
        !-1;
        v50 + v50;
        ~0.8907211315752046;
    }
    [-5.869943149384486];
    c;
    static e;
    h = -5.869943149384486;
}
try { C34.apply(C34); } catch (e) {}
const v57 = new WeakSet();
const o58 = {
};
const v60 = new Proxy(v57, o58);
new C34(-5.869943149384486, 0.2510089730549625);
const v62 = new o58();
const v63 = v62?.constructor;
let v64;
try { v64 = new v63(C34, C34); } catch (e) {}
const v65 = new C34(512.29276402866, 512.29276402866);
v60[5] = v63;
try { v64(0.2510089730549625, Map, Map); } catch (e) {}
v57.a |= v64;
new Uint8Array(2);
new Uint8ClampedArray(5);
new v64(127);
new v63();
const v79 = new F5();
[v65,v79,v65,C34];
const v81 = [-5.869943149384486,v62];
try { v81.sort(Map); } catch (e) {}
function f85() {
}
