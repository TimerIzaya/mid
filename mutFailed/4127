function f1(a2) {
    Date[a2];
    class C4 {
        constructor(a6, a7, a8, a9) {
            const v10 = this.constructor;
            try { new v10(); } catch (e) {}
            Float32Array.from([-3.942521664036782e+307,-3.942521664036782e+307,[a8,a8]]);
        }
    }
    const v17 = new C4();
    return v17;
}
Date.toString = f1;
const v18 = new Date();
const v22 = /(g\1\2(a(?:\1(b\1\2))\2)\1)/gudmy;
this - this;
new Uint8ClampedArray(129);
/iknifoo(?<!bar)baz*/dsy;
/A2QF/udmy;
function f30(a31, a32, a33) {
    const o54 = {
        ...v22,
        [Date]: a31,
        "f": Date,
        n(a35, a36, a37, a38) {
            var g = v18;
            v22[512] %= a37;
            super[16n] = a35;
            function F39(a41, a42) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.h = a32;
                } catch(e43) {
                }
                try {
                    this.b = 9n;
                } catch(e44) {
                }
                new BigUint64Array(1448);
                new Float64Array();
                a38.buffer;
            }
            new F39(16n, -2147483647n);
            new F39(a35, a35);
            new F39(a37, a38);
            return Date;
        },
    };
    -(-1e-15);
    Math.pow(-15 >> 129, -1e-15);
    return o54;
}
f30(16n, 16n, 9n);
f30(-2147483647n, -2147483647n, 16n);
f30(-2147483647n, 9n, 16n);
new BigUint64Array(3);
class C69 extends Array {
    2 = 64;
}
new C69();
for (let v71 = 0; v71 < 5; v71++) {
    function f72() {
        const v74 = ("Vre").toLocaleUpperCase;
        let v75;
        try { v75 = new v74(); } catch (e) {}
        return v75;
    }
    f72();
    %OptimizeFunctionOnNextCall(f72);
}
