new BigUint64Array(2683);
const v5 = new Float32Array(127);
new Int16Array(256);
class C9 {
    constructor(a11, a12, a13, a14) {
        function f15(a16, a17, a18) {
            return a13 % BigUint64Array;
        }
        f15(a13, 256, 127);
        for (let v21 = 0; v21 < 32; v21++) {
            const v23 = "p" + v21;
            function F24() {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.g = -3;
                } catch(e27) {
                }
                try {
                    this.f = -3;
                } catch(e28) {
                }
            }
            const v29 = new F24();
            const v30 = new F24();
            const v31 = new F24();
            function F32(a34, a35) {
                if (!new.target) { throw 'must be called with new'; }
                const v36 = this?.__lookupGetter__;
                try { v36(a34); } catch (e) {}
                try { this.constructor(F32, this); } catch (e) {}
                a34.e = a34;
            }
            F32.arguments = F32;
            const v39 = new F32(v31);
            const v40 = new F32(v39, v30);
            v40.e = v40;
            ("Hyo9")[1];
            const t36 = "at";
            t36[1] = "at";
            const v45 = ([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap;
            const v46 = v45?.constructor;
            try { v46("Hyo9"); } catch (e) {}
            try { v45(v29); } catch (e) {}
            [-4.202468609045087];
            const v50 = [0.8434386161503777];
            try { v50.findLastIndex(v50); } catch (e) {}
            const t46 = "4i";
            t46[1] = "4i";
            const t48 = "RpXR";
            t48[1] = "RpXR";
            ("c")?.toLocaleUpperCase;
            class C57 {
                constructor(a59) {
                    ("valueOf").localeCompare(a59, "valueOf");
                }
            }
            const v61 = new C57(v31);
            const t57 = v61.constructor;
            new t57(C57);
            v5[v23] = v21;
        }
    }
}
const v64 = new C9(BigUint64Array, 2683, 127, 256);
const v65 = new C9(v64, 2683, 256, 2683);
new C9(v65, 2683, 2683, 2683);
function F67(a69, a70) {
    if (!new.target) { throw 'must be called with new'; }
    const v71 = this.constructor;
    try { new v71(F67); } catch (e) {}
    a70 / a70;
}
new F67();
new F67();
