[9007199254740992];
[2,64,11462,1073741823,268435439,-65536];
const v8 = [2147483647,-4294967297,15,-1024,4096,-4096,22622];
class C9 {
    p(a11, a12) {
        let v16 = -128 / 1073741825;
        return Math.ceil(v16--);
    }
    static #f;
}
new C9();
new C9();
new C9();
let v22 = Map;
const v23 = new v22();
class C24 {
    set d(a26) {
        a26[this] = v22 >>>= this;
    }
    #m(a28, a29) {
        let v30 = "jER";
        const v31 = [17452,4294967295,64,-8];
        [v30] = v31;
        try { new v30(...v31, -1.6798118066934893e+307); } catch (e) {}
        a29 ^ a28;
        v22 * this;
        new BigInt64Array(1433);
        const v41 = new Uint8Array(255);
        new Float32Array(299);
        return v41;
    }
}
const v45 = new v22();
const v46 = new C24();
v46.b = v46;
const v47 = new C24();
v47.d;
function F49(a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    const v53 = a52?.constructor;
    try { new v53(a51, v47); } catch (e) {}
    try {
        this.c = v23;
    } catch(e55) {
    }
}
const v56 = new F49(v47, v46);
v56.c;
new F49(v8, v46);
const t49 = -4294967296n;
new t49(v45, v47);
let v62 = -319780339n;
v62--;
function f64() {
    return v62;
}
/a|bc*/udisy;
const v66 = /Q?/gud;
v66.dotAll = v66;
/[x\dz]/dms;
Math.tan(-532550611);
