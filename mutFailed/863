[Reflect,Reflect,Reflect,Reflect];
new Uint32Array(91);
new Date();
function F11(a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    const v15 = this.constructor;
    try { new v15("-268435456"); } catch (e) {}
    a13.prototype;
}
class C18 {
    #b = Date;
    constructor(a20) {
        Date[7n] = Date;
        new Date(a20);
    }
    static #g = 2n;
    d;
    static 5;
    o(a23, a24) {
        try { b.p(7n, 2n); } catch (e) {}
        new Date();
        return a23;
    }
}
new C18(4096n);
new C18(4096n);
new C18(7n);
const v41 = [];
function f42(a43, a44) {
    const v45 = [-15,-2147483649,-899333997,3,1455560807,-1024,-4294967297,2098301778];
    class C46 {
    }
    const v47 = C46.constructor;
    try { v45.some(v47); } catch (e) {}
}
f42[Symbol.species] = f42;
v41.constructor = f42;
v41["concat"]();
