const v4 = new Set();
class C5 {
    ["resolve"] = Set;
    constructor(a7, a8) {
        let v9;
        try { v9 = new a8(a7, this, a7, v4); } catch (e) {}
        !(-9223372036854775807 << -9223372036854775807);
        -536870912 || v9;
    }
    [C5];
    [Set] = "hasInstance";
}
const v16 = new C5("resolve", "r");
const v17 = new C5("hasInstance", v16);
const v18 = new C5(C5, v17);
const v19 = ["resolve"];
[v18,v16];
["resolve",v19,v17,Set];
const v23 = [Array,v18];
class C24 {
}
const v25 = new Array();
const v27 = [v25];
Reflect.apply(Array.of, v23, v27);
