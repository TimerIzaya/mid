function f0() {
}
/\p{gc=Nd}/udsy;
/sbke/uims;
/H(?:a*)*/vdy;
const v9 = new Int8Array(3948);
v9[1188] = v9;
Float32Array.length = Float32Array;
const v12 = new Float32Array(7);
try { v12.constructor(v12, v12, v12); } catch (e) {}
const v16 = new Uint8Array(1841);
v16[218];
class C18 {
    #m(a20, a21) {
    }
    [-1];
}
const v22 = new C18();
const v23 = v22?.constructor;
try { new v23(); } catch (e) {}
class C25 {
    2 = v22;
}
const v26 = new C25();
v26[2] = v26;
function f27(a28, a29) {
    return f27;
}
try { ("function").normalize(); } catch (e) {}
const v33 = [v26];
const o34 = {
    "arguments": v33,
    "type": "function",
};
new Worker(f27, o34);
