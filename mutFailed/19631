const v1 = new Set();
let v2 = -3;
function f5(a6) {
    a6 ^ a6;
    const o22 = {
        set h(a9) {
            let v8 = this;
            for (let v10 = 0; v10 < 76; v10++) {
                for (const v11 in a6) {
                    Object.defineProperty(a9, v8, { configurable: true, set: f5 });
                }
                v2++;
            }
            a9[6] = a9;
            Math.exp(!2005898468);
            +(++v8);
        },
        "d": v1,
    };
    return o22;
}
const v23 = f5(v2);
const v24 = f5(v2);
Object.defineProperty(v24, "constructor", { writable: true, configurable: true, enumerable: true, value: f5 });
let v25;
try { v25 = v24.constructor(-22224); } catch (e) {}
const v26 = f5(v2);
class C27 {
    static 11;
    static p(a29, a30, a31) {
        a31[9] = a30;
        try { v26.n(a30, -22224, v1, a29, v1); } catch (e) {}
        v1[6] = this;
        [this,v1,a29,v2,v23];
        [810669073,-108026069,255,-11,-9223372036854775807,1073741823,40580];
        [257,-22347];
        return [9223372036854775807,-38055,-536870912,1073741825,-60194,65537,-268435456,-4294967295,65537];
    }
    #b = -22224;
    static a = f5;
}
function f37() {
    return f5;
}
Object.defineProperty(C27, "toString", { writable: true, configurable: true, enumerable: true, get: f37 });
let v38;
try { v38 = v25(v26, Set, -22224); } catch (e) {}
-1952578177 - f5;
try { new C27(); } catch (e) {}
const v44 = new C27();
function f45() {
    Object.defineProperty(v1, "f", { writable: true, enumerable: true, set: f5 });
    Math.acos(21527);
    Math.tanh(-1);
    Math.cbrt(v23);
    v23 / -1;
    return Math.sin(21527);
}
v44.constructor = f45;
if (v38) {
    const o57 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o57);
} else {
    C27[C27] = v23;
    const o59 = {
        "apply": f45,
        "call": f45,
        "construct": f45,
        "defineProperty": f5,
        "deleteProperty": f45,
        "getOwnPropertyDescriptor": f45,
        "getPrototypeOf": f5,
        "has": f5,
        "isExtensible": f45,
        "ownKeys": f5,
        "preventExtensions": f5,
    };
    new Proxy(v23, o59);
}
try { v44.constructor(); } catch (e) {}
new C27();
const v64 = new C27();
Object.defineProperty(v64, "constructor", { writable: true, configurable: true, value: f5 });
const v65 = v64?.constructor;
try { new v65(); } catch (e) {}
function f68(a69, a70) {
    return f5;
}
BigInt64Array.valueOf = f68;
function f75() {
    const o77 = {
        __proto__: 2,
    };
    o77.e = o77;
    const v78 = new Uint16Array();
    v78[1] = v78;
    return BigInt64Array;
}
try { new f75(); } catch (e) {}
const v81 = new BigInt64Array(218);
v81.sort(f75);
