const v0 = [1.3685661989928516e+308,242679.53223885293,9.10244560640811,2.2250738585072014e-308,Infinity,-1.5206695591677492e+308,0.16153243963986674,-4.536952088383499];
const v1 = [0.16416252150433708,73.3092740389286,-5.0,-1.173627794242502e+308,-1.4302189443254812e+307,0.9289243275382324,1.1184402341905701e+308];
const v2 = [0.40885143928181933,1000000.0];
const o3 = {
};
o3.h = o3;
try {
    o3.e = v1;
} catch(e4) {
}
try {
    const o5 = {
    };
    o5.f = o5;
    o5.e = v0;
    o5.g = v1;
} catch(e6) {
}
try {
    const o7 = {
    };
    o7.e = o7;
    o7.g = v1;
    o7.h = v2;
} catch(e8) {
}
try {
    const o9 = {
    };
    o9.e = v0;
    o9.g = v1;
    o9.h = v0;
} catch(e10) {
}
class C11 {
    static #toString(a13, a14) {
        this[this] = a13;
        this[v0];
        return this;
    }
    #g = v2;
    static 49;
    o(a17) {
        try { v2(a17, a17, a17); } catch (e) {}
        try {
            v1.flat();
        } catch(e20) {
        }
        try { C11(v1, v0, a17); } catch (e) {}
        try {
            v2.#toString(v2, v1, C11);
        } catch(e23) {
        }
        return v0;
    }
}
try {
    new C11();
} catch(e25) {
}
v0 + v0;
const v27 = new C11();
try { v27.toString(); } catch (e) {}
const v29 = new C11();
try { v29.o(o3); } catch (e) {}
const v31 = new v1();
try { ("3zW").codePointAt(v31); } catch (e) {}
function f36(a37, a38) {
    try { a38(); } catch (e) {}
    const o54 = {
        128: a37,
        n(a41, a42, a43, a44) {
            return a44;
            super[a38] = a44;
            new Int8Array(238);
            new Float32Array(13);
            new Int16Array(1);
            return a38;
        },
    };
    return o54;
}
f36(v1, f36(v0, C11));
f36(v1, v2);
9 >>> 9;
Array(9);
const t82 = 3;
t82.length = 3;
