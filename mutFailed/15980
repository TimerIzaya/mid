const v0 = [9,256,15834,-2147483648,-1768646377,7,-11];
new Float64Array(2534);
function f4(a5, a6) {
    a6();
    return f4;
}
new Promise(f4);
const v10 = [-2119663328,1073741824,11,-659685725,-769488614,2147483647,-11891,6,-1175764269];
const v11 = [-222294998,-65537,525,-1768352287,536870912,0];
const v12 = [v10];
const v13 = [v12,v12,v11,v11];
[v13,v11,v11];
const v15 = [-12,19194,4096,65628450,-42495,1944451265,525,-1682827479];
v15.toString = f4;
const v16 = [-10,1976307905,-55979,7,512,-9223372036854775807,690507438];
const v17 = [17320,1297008777,16,-1024,16,9007199254740990,-4294967295,-14,-256];
class C21 {
    #m(a23, a24) {
        super.b = Promise;
        new Promise(a23);
        try { C21(v16, v17, 1.7976931348623157e+308); } catch (e) {}
        v0[65537] = 1.7976931348623157e+308;
        v13.__proto__;
        try {
            const o28 = {
            };
            function f29(a30, a31, a32) {
                return a32;
            }
            [1,2534,[Uint8ClampedArray,Uint8ClampedArray]];
            v16.push(o28, a23, undefined);
            const o39 = {
                "getPrototypeOf": f29,
            };
            new Proxy(v17, o39);
        } catch(e42) {
        }
        for (let v43 = 0; v43 < 5; v43++) {
            const o45 = {
            };
            gc(o45);
        }
        return this;
    }
    static c;
    [v15];
    static #f;
    constructor(a48) {
        function f49() {
        }
        Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f49 });
    }
    9;
    static [-710264.2380150955] = 1.7976931348623157e+308;
    static {
    }
}
new C21();
new C21();
new C21();
let v55 = -1.0;
const v56 = v55++;
v56 - v56;
function f58(a59, a60, a61, a62) {
    return arguments;
}
new Int8Array(1073741823);
new Uint8Array(1073741823);
