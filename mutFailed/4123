const v3 = [9,1768667446,3,268435456];
const v4 = [536870912,15,-1606623015];
const v5 = [-3,-65536,64,7362,-33458,-1095266202,-37575,-16];
const v6 = [v5,v4,v5,v5];
["kfYF",v3,"asin"];
["kfYF",v3,v6,v3,"asin"];
let v15 = -7;
let v18 = 15;
v18--;
new Int16Array(v18);
const v24 = new Uint8ClampedArray(6);
new Int16Array(3699);
"2147483649" == "2147483649";
class C32 {
    static #p(a34) {
        function f35(a36) {
            return a36;
        }
        class C37 extends f35 {
            static [-1] = v24;
            static [a34];
            static 268435441;
        }
        const v38 = [];
        const v40 = /[a-zA-Z0-9]/gvisy;
        const v41 = /abc?/gvmy;
        v41[-2] ^= v40;
        v41.exec("Q8F");
        const t27 = "Q8F";
        t27[2078209647] = v38;
        return a34;
    }
    [0.028957958839558873];
    static {
        for (let v47 = 0; v47 < 32; v47++) {
        }
    }
    static 2147483648 = C32;
    static #g;
    #a;
}
function f49() {
    function F50(a52, a53) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.f = a53;
        } catch(e54) {
        }
        try {
            const v55 = [];
            class C56 {
                constructor(a58, a59, a60) {
                    function f61(a62, a63, a64) {
                        v55.copyWithin();
                        try {
                            f61(-268435456, 0.6683462416314783, [-268435456]);
                        } catch(e70) {
                        }
                        const v71 = this >> -268435456;
                        v71 >> this;
                        return -v71;
                    }
                    f61(this, this, a58);
                }
            }
            class C75 extends C56 {
            }
            new C75();
        } catch(e77) {
        }
    }
    return v18;
}
C32[Symbol.toPrimitive] = f49;
function f80() {
    const o82 = {
    };
    o82.type = 20061;
    return gc(o82);
}
C32[(6).toPrimitive] = f80;
try { C32(); } catch (e) {}
const v87 = new C32();
v87.constructor = f80;
try { BigInt64Array(BigInt64Array); } catch (e) {}
function F91(a93) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = this;
}
const v94 = new F91(v5);
with (v94) {
    h = Int16Array;
}
const v96 = v87?.constructor;
Object.defineProperty(v96, Symbol.toPrimitive, { configurable: true, enumerable: true, value: Symbol });
v96[Symbol.toPrimitive] = f80;
let v101;
try { v101 = new v96(); } catch (e) {}
function f102() {
    d = "asin";
    return v15++;
}
v101.constructor = f102;
const v104 = v101?.constructor;
try { new v104(); } catch (e) {}
const v106 = new C32();
let v107;
try { v107 = v106.propertyIsEnumerable(C32); } catch (e) {}
const v108 = !v107;
const v109 = new C32();
const v111 = /[\11]/gm.flags;
/(?:a*)*/gudm;
const v113 = /a(?!bbb|bb)c/vi;
v113.toString = Symbol;
const v114 = v113?.toString;
try { new v114(); } catch (e) {}
[4096];
const o121 = {
    "execution": "async",
    "type": "minor",
};
~117;
Object.defineProperty(Uint16Array, 1, { configurable: true, enumerable: true, value: v109 });
Uint16Array[0] = v96;
const v124 = new Uint16Array(Uint16Array);
let v125 = v124[1];
v125--;
const v129 = v111.name;
new Int32Array(31);
function f133() {
    const v134 = Symbol(v129);
    let v135;
    try { v135 = v87.toString(v108, v134, v111); } catch (e) {}
    return v135;
}
Uint32Array.toString = f133;
let v136;
try { v136 = Uint32Array.toString(); } catch (e) {}
try { v136.small(); } catch (e) {}
const v138 = new Uint32Array(128);
v138[72];
function f140() {
    3.4890473589784586e+307 > 3.4890473589784586e+307;
    let v143 = 1000000000000.0;
    v143--;
    257828.6336153492 - 257828.6336153492;
    -4294967296 >> -4294967296;
    class C150 {
        static #m(a152) {
        }
        constructor(a154) {
            Object.defineProperty(this, "g", { writable: true, enumerable: true, value: "async" });
            function f155() {
                return 9007199254740992;
            }
            Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f155 });
            const v156 = f155?.__defineSetter__;
            try { new v156(22227, 22227); } catch (e) {}
            new Float32Array();
            try { Uint16Array.apply(Uint16Array, "2147483649"); } catch (e) {}
            const v162 = new Uint16Array();
            const v163 = new Float32Array(v162, -4294967296, a154);
            v163.f = v163;
            v163.f = v163;
        }
    }
    const v164 = new C150(C150);
    v164.g = v108;
    v164.g = v164;
    const v165 = new C150(C150);
    v165.length = -4294967296;
    v165.length;
    const v167 = new C150(-4294967296);
    const v168 = [v167,C150];
    [257828.6336153492,v167,v164,v167,v168];
    const v170 = [v167];
    class C171 extends C150 {
        [v164];
        #n(a173, a174, a175, a176) {
            function f177() {
            }
        }
    }
    C171.name = C171;
    const v178 = new C171();
    class C180 extends v170.constructor {
    }
    try { v178.m(v168); } catch (e) {}
    const o184 = {
        "e": Uint16Array,
        o(a183) {
        },
        ...v143,
    };
    return Int32Array;
}
try { f140.bind(v15); } catch (e) {}
%PrepareFunctionForOptimization(f140);
f140();
f140();
%OptimizeFunctionOnNextCall(f140);
const v188 = f140();
v188.prototype = v188;
