const v2 = new BigInt64Array(1);
const v5 = new Int32Array(2);
const v8 = new Int16Array(1);
const v13 = [v8,[536870888,15,BigInt64Array,536870888,v2],Int32Array,536870888];
v13[3] = v13;
[-4294967297];
let v16 = 4.0;
const v19 = new Date();
v16 **= v16;
const o25 = {
    set d(a22) {
        this["cos"]();
    },
};
try { o25.propertyIsEnumerable(Int16Array); } catch (e) {}
class C27 {
    constructor(a29) {
        o25.d = a29;
    }
}
WeakSet.name;
const v32 = new WeakSet();
try { new Map(); } catch (e) {}
const v35 = new Map();
let v37 = -11n;
v37--;
class C40 {
    e;
    a;
    static {
        try { this(); } catch (e) {}
        Date.length = Date;
        let v46 = 10;
        v46--;
        for (let v48 = 0; v48 < 50; v48++) {
            0 < v48;
            class C50 extends Date {
            }
            [601759695];
            const v52 = [1073741824,1073741823,1376142744,1073741825];
            function F54(a56, a57) {
                if (!new.target) { throw 'must be called with new'; }
                v52.a = a57;
            }
            new F54(522675525n);
            const v59 = new F54(522675525n);
            const v60 = v59?.constructor;
            try { new v60(v2, v5); } catch (e) {}
            for (let v62 = 0; v62 < 10; v62++) {
            }
            v48++;
        }
    }
}
try { C40.propertyIsEnumerable(Int32Array); } catch (e) {}
const v65 = new C40(v32, -8.576381465737261e+307);
v65.a;
new C40(v19, -818878.473853753, v65, v37);
const v68 = new C40(-8n, v16, v35, v37);
v68.e = v68;
function f69() {
    return f69;
}
f69.arguments;
let v76 = 5;
v76--;
class C78 {
    static #valueOf(a80, a81, a82) {
    }
    set e(a84) {
    }
}
const v85 = new C78();
8n & 8n;
const v89 = [];
try { v89.findLastIndex(v89); } catch (e) {}
v89.valueOf = f69;
%PrepareFunctionForOptimization(f69);
9 - 9;
new Uint32Array(9);
Int8Array.prototype = Int8Array;
v32[4] = v76;
try {
} catch(e97) {
}
try { v85.o(v85, v76); } catch (e) {}
