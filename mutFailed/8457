function f0() {
}
[-128035143,268435440,-12,-9007199254740991,3,13,-4,-536870912];
[9007199254740991,-3,-18292,13615,14,268435456,-473331251,15,512];
[-6,-4,-2,1429947991,1813561545];
new Uint8Array(228);
new Int8Array(482, 228);
new Uint8ClampedArray(1429);
const v18 = new NaN(4294967295);
const v21 = new Float32Array(7);
let v22;
try { v22 = v21.filter(4294967295); } catch (e) {}
try { Int32Array(7, Float32Array, Int32Array); } catch (e) {}
new Int32Array(256);
function F27(a29, a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    const v32 = v18?.constructor;
    try { new v32(NaN, a31, a31); } catch (e) {}
    a29 * a29;
    a31++;
    this.d = a29;
    try {
        this.description = v18;
    } catch(e36) {
    }
    try {
        Int32Array.g = Int32Array;
    } catch(e37) {
    }
}
let v38;
try { v38 = new F27(F27, 256, 256); } catch (e) {}
new F27(256, v38, 4294967295);
const v40 = v22?.g;
let v41;
try { v41 = new v40(NaN, v21, 7); } catch (e) {}
new F27(7, 7, 4294967295);
new F27(256, v41, 256);
Math.asinh();
Math.sin(3.862600614459211e+307);
