function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -16;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new v5();
class C7 extends F0 {
    static #d = v4;
    constructor(a9, a10) {
        super();
        try {
            super.toString(v6, v5);
        } catch(e12) {
        }
    }
    10 = v5;
    533421814 = C7;
    static 0;
}
const v13 = new C7(v6, v4);
new C7(v6, v6);
new C7(C7, v13);
class C20 {
    [-55801.39760616061];
}
const v21 = new C20();
function f22(a23, a24) {
    return a23;
}
v21[Symbol.toPrimitive] = f22;
const o31 = {
    p(a28, a29) {
        for (const v30 in v21) {
        }
        return C20;
    },
};
o31.p(C20, C20, -55801.39760616061);
