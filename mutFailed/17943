-Infinity;
/[\9xyz{1,32}Ha??[a(?:b)]]/ims;
const v4 = /(x)(x)(x)\1*/d;
const v5 = /5/gvdms;
v5[v5] <<= 815108.2184509493;
function f8(a9, a10, a11, a12) {
    return a9;
}
const v13 = f8();
const v15 = [601759695];
function f16(a17, a18, a19, a20) {
    a18 * a18;
    a19 == v5;
    arguments[2] = arguments;
    arguments.toString(v15, -128);
    function f25() {
        ("Vre").toLocaleUpperCase;
        ("Vre").fixed();
        const o34 = {
            "c": v15,
            valueOf(a32, a33) {
            },
            "e": -268435456,
        };
        const v35 = o34.valueOf();
        v35 * v35;
    }
    Int8Array.a = Int8Array;
    const v38 = new Int8Array();
    v38.buffer;
    %OptimizeFunctionOnNextCall(f25);
    ("find").strike();
}
f16(f16(), f16, -128, v13);
new Uint16Array(251);
class C47 {
}
new C47();
class C49 {
    constructor(a51, a52) {
        const v53 = this.constructor;
        try { new v53(Uint16Array); } catch (e) {}
        let v55 = 0;
        for (let i = 0; i < 10; i++) {
            Math.atan();
            v55++ - C49;
        }
    }
}
new Int32Array(-1600041767);
new Uint16Array(8);
new Set();
const v70 = [];
function f71() {
    return f71;
}
class C72 extends Set {
    constructor(a74, a75, a76, a77) {
        super();
        function f78() {
            return f78;
        }
        const v81 = new Date(-128, 1000.0);
        v81.setMonth(1000.0);
        function f83() {
            const v84 = [];
            function f86(a87, a88) {
                const v89 = [-1024,257,-495437172,-200813600,-1024,-9007199254740991,5,21171,60860];
                function f90() {
                    const v92 = new Int32Array(1355501490);
                    v92[1073741824] = v89;
                    return v92;
                }
                f90();
                return -588750793;
            }
            Float32Array.toString = f86;
            v4[6] = 4294967295;
            const o122 = {
                set b(a97) {
                    const v98 = Float32Array >>> Float32Array;
                    function f99() {
                        const o100 = {
                        };
                        return o100;
                    }
                    const v101 = f99();
                    const v102 = v101();
                    ([Uint8Array,Uint8Array])["indexOf"](v101, v102);
                    v98 != 4294967295 ? v98 : 4294967295;
                    v84[2119717574] = Float32Array;
                    try {
                        this.__proto__ = this;
                    } catch(e109) {
                    }
                    new Float32Array(64);
                    const o115 = {
                    };
                    o115.type = -9007199254740991;
                    gc(o115);
                    function f117() {
                        return f117;
                    }
                    try {
                        Symbol(-12302);
                    } catch(e121) {
                    }
                },
                "arguments": v70,
            };
            return o122;
        }
        for (let v123 = 0; v123 < 5; v123++) {
            f83();
            %OptimizeFunctionOnNextCall(f83);
        }
    }
}
new C72();
