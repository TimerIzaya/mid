function f0() {
    function F1(a3, a4, a5) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v6 = new F1();
    new F1(F1, F1, v6);
    ("128").fontsize();
    const o17 = {
        "g": "race",
        "c": "name",
        4: "race",
        "h": "race",
        get e() {
            this.toString = f0;
            this[this] = "race";
            return ("name")[Symbol.split];
        },
        "type": "128",
        __proto__: 0.9604406093582539,
        ...F1,
        8: "race",
        /*
        __proto__: "name",
        */
        "b": "race",
        ["race"]: f0,
        "a": f0,
    };
    function f18() {
        return f0;
    }
    Object.defineProperty(o17, Symbol.toPrimitive, { enumerable: true, get: f18 });
    return o17;
}
const v21 = f0();
const v22 = f0();
const o23 = {
    [v22]: v22,
    ...v22,
};
const v24 = delete v21.h;
const v25 = f0();
function F26(a28) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = this;
    try {
        this.h = v25;
    } catch(e29) {
    }
}
const v30 = new F26(v21);
const v31 = new F26(v30);
const v32 = new F26(v22);
function f33(a34, a35) {
    const o41 = {
        __proto__: a34,
        p(a37, a38) {
            48752008 ^ this;
            return this;
        },
    };
    return o41;
}
f33.toString = f0;
const v42 = f33(f33);
Object.defineProperty(v42, "toString", { writable: true, configurable: true, enumerable: true, value: f0 });
try { v42.p(); } catch (e) {}
[f0,[v32,v30,F26,v32,v31]];
[v21];
function f47() {
    return f47;
}
const v48 = [f47,f47,f47,f47];
function f49(a50) {
    class C51 {
    }
    const v52 = new C51();
    const o53 = {
    };
    new Proxy(v52, o53);
    return v52;
}
v48.constructor = f49;
const o57 = {
    "maxByteLength": 201,
};
function f58(a59) {
    v48[v24];
}
Object.defineProperty(o57, "a", { writable: true, configurable: true, enumerable: true, set: f58 });
try {
    o57.a = 10137;
} catch(e62) {
}
v48.flatMap(f47);
