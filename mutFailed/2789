class C3 {
    static #h = -2384;
    #toString(a5, a6) {
        function F7(a9, a10, a11) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = 65537;
            } catch(e12) {
            }
        }
        new F7(a5, a5, a6);
        const v14 = new F7(F7, 65537, -2384);
        new F7(F7, a6, -2384);
        return v14;
    }
    static #b;
    static [65537] = 65537;
}
function f16() {
    function f17(a18, a19) {
        let v20 = "max";
        class C21 {
            set a(a23) {
                v20 = this;
                const o24 = {
                };
                o24.g = v20;
                const o25 = {
                };
                o25.g = v20;
                const o26 = {
                };
                o26.g = v20;
                const o27 = {
                };
                o27.g = v20;
            }
        }
        C21 += v20;
        return 1024;
    }
    return f16;
}
function f28(a29) {
    [a29];
}
Object.defineProperty(C3, "toString", { enumerable: true, get: f16, set: f28 });
const v31 = new C3();
v31.toString = f16;
const v32 = v31?.constructor;
function f33() {
    v31 << f16;
    /Aabc|defmxyz{1,}?qMa{0,1}?/gvdis.exec();
    return v32;
}
v32[Symbol.toPrimitive] = f33;
try { new v32(); } catch (e) {}
const v40 = new C3();
const v41 = v40?.constructor;
try { new v41(); } catch (e) {}
const v43 = v40?.__lookupGetter__;
try { new v43(v31); } catch (e) {}
const v45 = new C3();
const v46 = v45?.constructor;
try { new v46(); } catch (e) {}
const v48 = v45?.constructor;
const v50 = Symbol.toPrimitive;
v48[v50] = Symbol;
const v52 = Symbol.toPrimitive;
let v55 = Symbol.for(v52.description);
v48[v52] = f16;
let v56;
try { v56 = new v48(); } catch (e) {}
v56.constructor = Symbol;
const v57 = v56?.constructor;
try { new v57(); } catch (e) {}
function f59() {
    return v40;
}
f59.toString = Symbol;
f59.g = f59;
const v61 = [9954,1327872855];
function f62(a63, a64) {
    const o65 = {
    };
    try {
        o65.h = a63;
    } catch(e66) {
    }
    try {
        const o67 = {
        };
        o67.h = a63;
        o67.d = a63;
    } catch(e68) {
    }
    try {
        const o69 = {
        };
        o69.h = a63;
        o69.d = a63;
        o69.c = v55;
    } catch(e70) {
    }
    try {
        const o71 = {
        };
        o71.h = a63;
        o71.d = a63;
        o71.c = a63;
    } catch(e72) {
    }
    return a64;
}
v61.constructor = f62;
try { v61.splice(f59, v31); } catch (e) {}
const v74 = [361049365,-1779374679,1012886178,-1082209793,-9007199254740990,9,12,-6];
function f75(a76) {
    v55 = v50;
    return -4;
}
v74.toString = f75;
try { v74.toString(); } catch (e) {}
let v81;
try { v81 = v74.splice(-2384, C3); } catch (e) {}
[52185,65536,-2111264531,81865167,2133765832];
-1 >>> -1;
const v87 = /a\w/gudsy;
v87.dotAll = v87;
const v88 = /ka{0}/guims;
const v89 = v88?.compile;
try { new v89(-3, v88); } catch (e) {}
const v91 = /ab|c/udmy;
class C92 {
}
try { new C92(); } catch (e) {}
v48.name = C92;
const v94 = new C92();
v94.constructor = f16;
function f95() {
    gc();
    return -1;
}
v88.constructor = f95;
const v98 = v94?.constructor;
v98.sticky = v89;
let v99;
try { v99 = new v98(); } catch (e) {}
const v100 = new C92();
function f101(a102, a103) {
    a102.sticky = a102;
    a102.sticky;
    const o105 = {
        ...v81,
        "d": v100,
        "c": a103,
        "g": a103,
        "f": a102,
        "a": v94,
        7: C92,
        __proto__: C92,
        "e": v88,
        "b": v88,
    };
    o105.c;
    return v99;
}
const v107 = f101?.__lookupSetter__;
try { v107.apply(v45, v48); } catch (e) {}
try { new v107(-2384); } catch (e) {}
%PrepareFunctionForOptimization(f101);
const v110 = f101(v91);
function f111() {
    return v40;
}
function f112(a113) {
    f101(a113, a113);
}
Object.defineProperty(v110, "sticky", { writable: true, enumerable: true, get: f111, set: f112 });
const v115 = v110?.constructor;
try { new v115(); } catch (e) {}
const v117 = f101(v91);
const v118 = v117?.constructor;
try { new v118(); } catch (e) {}
%OptimizeFunctionOnNextCall(f101);
f101(v117, v91);
