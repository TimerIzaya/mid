function f0() {
    const o14 = {
        "d": "W",
        "c": "number",
        "f": "W",
        ["W"]: "number",
        "a": "number",
        3: "number",
        7: "number",
        o(a5) {
            ("number").localeCompare("number", "toString");
            const v9 = new Uint8Array();
            104 in v9;
            ("number").length;
            try {
                const t15 = "W";
                t15.valueOf = a5;
            } catch(e13) {
            }
            return 1102358345;
        },
    };
    function f15() {
        return f0;
    }
    function f16(a17) {
        const v18 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
        const v21 = new Uint32Array(v18, 2684);
        const v23 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
        const v24 = [601759695];
        const v25 = [1073741824,1073741823,1376142744,1073741825];
        function f27(a28, a29, a30, a31) {
            function f32() {
                let v35 = Float64Array;
                v35 = a29;
                b = v24;
                const v36 = v18.length;
                try {
                    v25.forEach(a29, v18);
                } catch(e38) {
                }
                const v39 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
                const v41 = Symbol.toPrimitive;
                const o45 = {
                    toString(a43, a44) {
                        a43 *= v41;
                        return v35;
                    },
                };
                const o62 = {
                    [522675525n](a48, a49) {
                    },
                    "c": v24,
                    valueOf(a51, a52) {
                    },
                    [v36](a54) {
                    },
                    [-1]: 2684,
                    1073741824: v21,
                    "maxByteLength": -268435456,
                    "b": -4294967295,
                    "arguments": v39,
                    [-4294967297n](a56, a57, a58, a59) {
                        eval();
                    },
                    "e": -4294967295,
                    "e": -268435456,
                    "arguments": v23,
                    256: a31,
                    ...v24,
                    "type": "Vre",
                    ..."Vre",
                    4: "Vre",
                    "c": -268435456,
                    "type": "Vre",
                    "type": "Vre",
                    6: -268435456,
                };
                return o62;
            }
            f32();
            const v65 = new Int8Array();
            const v66 = v65.buffer;
            eval("");
            Uint32Array[2] = 1;
            v66.slice(2147483648);
            %OptimizeFunctionOnNextCall(f32);
            let v74;
            try { v74 = v25["find"](..."find", a31, ...v24, ...v25, ...522675525n); } catch (e) {}
            return v74 <= a30;
        }
        for (let v76 = 0; v76 < 10; v76++) {
            f27(v25, v76, v76, v76);
        }
    }
    Object.defineProperty(o14, Symbol.toPrimitive, { configurable: true, enumerable: true, get: f15, set: f16 });
    return o14;
}
f0.valueOf = f0;
f0();
f0();
const v82 = f0();
class C86 extends f0 {
    a = "d";
    constructor(a88, a89) {
        super();
        Math.log2(f0 % -f0);
    }
    1073741824;
    0;
    [v82] = v82;
    #c = "object";
}
const v95 = new C86(v82, "d");
new C86("VCc", "object");
new C86(v95, "VCc");
const o108 = {
    m(a103) {
        const v106 = new Int8Array(3938);
        v106.includes(-65535);
        return -65535;
    },
};
o108.m();
