const v0 = [-147707.52733624715,2.2250738585072014e-308,-3.0,686122.7734966248,93018.6306604601,NaN,Infinity,-2.2250738585072014e-308,-1000000.0];
[5.386553263000492e+307];
const v2 = [0.2502159154304213,-5.0];
255 / 255;
const v7 = new Uint16Array(255);
v7[157];
let v9 = 64;
new BigUint64Array(v9);
let v12 = 64n;
v12--;
-22037n & -22037n;
-16n;
v2 & v0[5];
Math.sin(-268435456);
v9--;
gc();
const v29 = [-9007199254740990,-1024,256,-64592,45766,-10,-7];
let v31;
try { v31 = v29["some"](); } catch (e) {}
const v32 = delete v31?.[1062];
v32 && v32;
function f34() {
    return v32.__proto__;
}
function f38() {
    return f38;
}
const v41 = new Int16Array(128);
Uint8Array.BYTES_PER_ELEMENT = Uint8Array;
const v43 = Uint8Array.from(v41);
const v44 = v43?.toReversed;
try { new v44(); } catch (e) {}
const t32 = "string";
t32[5] = "string";
const v47 = [23795,8,259058917,-256,1,-36806,4096,-9,-1,-18943];
try { v47.map(f34); } catch (e) {}
try { v47.splice(16n, "number"); } catch (e) {}
try { new Date(gc, gc, v43, gc, v43, Date, Date); } catch (e) {}
-1000000000000.0;
const v55 = [1000000000000.0];
v55[1] = v55;
class C56 {
}
C56.length = C56;
new C56();
let v58;
try { v58 = Date.now(); } catch (e) {}
v58++;
let v60 = Date.UTC(9007199254740990n, f38, "string");
v60++;
class C62 {
    constructor(a64, a65) {
    }
}
0 - 0;
while (0 < 5) {
    let v70 = v58++;
    v70--;
}
const v72 = new Date(-2, v47);
v72.toTimeString();
