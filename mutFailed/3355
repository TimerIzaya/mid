let v1 = 1.0;
class C3 {
    static #n(a5, a6) {
        this["95"];
        try {
            this.#n();
            class C10 extends Array {
            }
            new Uint8ClampedArray(9);
        } catch(e14) {
        }
        return v1;
    }
    a = "95";
    [-10];
}
try { new C3(); } catch (e) {}
const v17 = [0.0,C3];
const o18 = {
    __proto__: v17,
};
o18.push(0.0);
new C3();
const t23 = 0.0;
new t23();
const v22 = new C3();
v22.a = v22;
const v24 = 3 >>> 3;
new Float32Array(255);
class C28 {
}
class C29 {
}
const v30 = new C28();
try { v30.propertyIsEnumerable(C29); } catch (e) {}
new C29(3);
const v36 = new Float64Array(1352);
v36[1000];
1 * 1;
new Int32Array(1);
const v43 = new v30();
const v45 = new Set();
try { v45.has(3); } catch (e) {}
v45.add(v43);
let [v48,,...v49] = v24;
try { v48.setFullYear(v48, v49, v49); } catch (e) {}
v48.setUTCFullYear();
v1--;
