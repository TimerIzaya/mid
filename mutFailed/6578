class C3 {
    f;
    static {
        this[3] = "replaceAll";
        try {
            super.p("isConcatSpreadable", 1.457255432236491e+308, this, 1.457255432236491e+308);
        } catch(e6) {
        }
    }
    #c;
    static #f;
    9;
    c = C3;
}
new C3();
new C3();
const v9 = new C3();
const o20 = {
    valueOf() {
        const v18 = /gk4b*/vmsy;
        Object.defineProperty(v18, -9223372036854775808, { enumerable: true, set: this });
        return v18;
    },
};
for (let v21 = 0; v21 < 5; v21++) {
    Math.round(o20);
}
function f24() {
    return f24;
}
class C25 extends "replaceAll" {
    constructor(a27) {
    }
}
try { new v9(); } catch (e) {}
