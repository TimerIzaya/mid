let v2 = "-4294967297";
class C3 {
    get b() {
        v2[1073741825] = v2;
        super.e;
        v2.__proto__;
        ~this;
        --v2;
        Math.floor(16 >> 16);
        return this;
    }
    [v2];
    d = -473821.46328186756;
}
const v14 = new C3();
const v15 = new C3();
const v16 = new C3();
class C19 {
    set h(a21) {
        v15.d;
        v14[-473821.46328186756];
    }
    static #o(a25, a26, a27) {
        try {
        const t0 = 129;
        t0(this, 129, this, -473821.46328186756);
        } catch (e) {}
        return this;
    }
    #e = -473821.46328186756;
    o(a30, a31, a32, a33) {
        function f34() {
            return this;
        }
        Object.defineProperty(this, -473821.46328186756, { configurable: true, get: f34, set: f34 });
        const o37 = {
            "maxByteLength": 536870887,
        };
        const v39 = new ArrayBuffer(11, o37);
        new Int16Array(v39);
        return -473821.46328186756;
    }
}
const v42 = new C19();
const v43 = new C19();
new v16();
class C45 extends C3 {
    static [v2] = v43;
    toString(a47, a48, a49) {
        super[a47] = false;
        %VerifyType(v14);
        return a49;
    }
    constructor(a51, a52) {
        super();
        const v53 = a51;
        const v54 = new C19(v53, a51, C3);
        try {
            v54.toString = a51;
        } catch(e55) {
        }
        [453239876,1,5,-360278013,-9];
        [256,-1148422316,-11,-65025,0,128];
        [19683,10000,1997612562,-4,-10307,-1073741824,16,-40244,2147483648,536870887];
    }
}
const v59 = new C45(v2, v42);
const v60 = new C45(v59, v43, v59);
new C45(v60, v42);
const v62 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v63 = [1073741824,1073741823,1376142744,1073741825];
function f64(a65, a66, a67, a68) {
    function f69() {
        try {
            v63.forEach(a66, v62);
        } catch(e71) {
        }
        return a66;
    }
    f69();
    RangeError();
    %OptimizeFunctionOnNextCall(f69);
    return v63;
}
for (let v75 = 0; v75 < 5; v75++) {
    f64();
}
