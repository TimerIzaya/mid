class C3 {
    constructor(a5, a6) {
        let v4 = this;
        function f7(a8, a9) {
            try { a9(a9, a9, a8); } catch (e) {}
            v4 <<= a9;
            return 2147483647;
        }
        a5[Symbol.toPrimitive] = f7;
        super[a5];
        try { a5(); } catch (e) {}
        const o18 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o18);
    }
}
const v20 = new C3(0.013941505311341862, 256);
const v21 = new C3(v20, 256);
const v22 = new C3(v21, 256);
const v23 = [3.500754431944646,-388.804133052014];
[-1.0,3.9209373870934456,-420.1718899556008,9.452493828191848e+307,-1e-15,-1000000000.0,-564059.0952023537];
const v25 = [-1000000.0,Infinity,1.41264885152046e+306];
function f26(a27, a28, a29) {
    const o40 = {
        set h(a31) {
            super.h = this;
            const o32 = {
            };
            try {
                o32.e = this;
            } catch(e33) {
            }
            try {
                const o34 = {
                };
                o34.e = this;
                C3.c = v25;
            } catch(e35) {
            }
            try {
                const o36 = {
                };
                o36.e = this;
                o36.c = v25;
                o36.h = this;
            } catch(e37) {
            }
            try {
                const o38 = {
                };
                o38.e = a31;
                o38.c = v25;
                o38.b = a29;
            } catch(e39) {
            }
        },
    };
    return o40;
}
f26(v23, v23, v23);
f26(v25, v25, v25);
f26(v20, v22, v25);
URIError();
