function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    a5 + a5;
    try {
        this.b = -128;
    } catch(e7) {
        e7?.a;
        %VerifyType(a5);
        const o12 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o12);
    }
}
new F3(-309135284);
const v15 = new F3(4096);
new F3(4096);
class C22 extends v15.constructor {
    static 11;
    static 536870889;
}
C22.prototype = C22;
new C22();
const v26 = /v*/vdms;
class C27 {
    1855;
    static {
        this.name = this;
        const v29 = new F3(this);
        try { v29.toString(); } catch (e) {}
    }
    [v15] = -128;
    12 = 4096;
    [v26];
}
const v31 = new C27();
v31[1855] = v31;
3706 >> 3706;
function f34(a35, a36, a37, a38) {
    ~a36;
    a37.d = a37;
    a38[1855] = a38;
    const o40 = {
        [a36]: a38,
        ...a38,
    };
    return a37;
}
f34.d = f34;
const v41 = f34(3706, 3706, C27, v31);
v41.b = v41;
f34(3706, v26, v41, v31);
