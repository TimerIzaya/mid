const v0 = [654585325,-4,57170,-750,-1699180418,59553];
const v1 = [-1024,-1073741824,15,1925];
const v2 = [-536870912,-1795964385,-56127,953649236,7,1,-50892];
-10n ^ -10n;
2147483649n * 2147483649n;
function f7(a8, a9) {
    a9[3] = a9;
    try {
        v2.b = v1;
    } catch(e10) {
    }
    return v2;
}
f7(v1, v1);
let v12 = 268435440n;
function f13(a14, a15, a16, a17) {
    a16 << a16;
    try {
        v1.length = a16;
    } catch(e19) {
    }
    const v20 = [1,-4096,-1301835671,-65537];
    try { v20.fill(a17); } catch (e) {}
    [-8,14,1794930060,255,-9223372036854775808,1000,-9007199254740991];
    [128,-2048284248,1073741824,-39255,-1331886781,39377,13,-1];
    const o38 = {
        [v2]: v1,
        ...v1,
        [2147483649n]: a15,
        [a16](a25, a26, a27) {
            v2.length <<= a26;
            let v28;
            try { v28 = a26(); } catch (e) {}
            super[v28] = 2147483649n;
            new Uint32Array(1);
            new Float32Array(14);
            const v37 = new Uint8ClampedArray(1790);
            return v37;
        },
    };
    o38[1] = o38;
    return o38;
}
const v39 = f13(v2, v1, 2147483649n, 2147483649n);
v39[3] = v39;
const v40 = f13(v1, v0, 2147483649n, 2147483649n);
v40[1] = v40;
const v41 = f13(v39, v39, v12, -10n);
v41[2147483649] = v41;
function f42(a43, a44) {
    a43 + a43;
    a44.length;
    const o56 = {
        [v12]: a44,
        "g": a43,
        "b": a44,
        "f": a44,
        m(a48, a49, a50) {
            v12 ||= a44;
            return f13;
        },
        "c": -10n,
        [2147483649n]: v0,
        [a44](a52, a53) {
            const v54 = super.h;
            try {
                this.b = v54;
            } catch(e55) {
            }
            return v2;
        },
    };
    return o56;
}
try { new f42(f42, v12); } catch (e) {}
const v58 = f42(v12, f13);
f42(2147483649n, v41);
f42(v12, v58);
const v63 = new Float32Array(9);
new Int8Array(v63);
