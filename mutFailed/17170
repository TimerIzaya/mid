new Uint32Array(0);
const v11 = new Uint16Array(512);
const v14 = new Uint8ClampedArray(2);
class C18 {
    m(a20, a21) {
        super[a21];
        a21?.[11];
        const o25 = {
            "execution": "async",
        };
        const o27 = {
        };
        gc(o27);
        return 5.0;
    }
    constructor(a30) {
        function f31(a32, a33) {
            const v34 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
            const v35 = [3,-6,7268,-554513674,5,4294967295,861325878,17152,2147483647,5];
            const v36 = [256,64];
            function f40(a41, a42, a43) {
                const o54 = {
                    ..."-669555958",
                    "e": v36,
                    "c": v34,
                    __proto__: a43,
                    toString(a45, a46, a47, a48) {
                        a43 instanceof a45;
                        try { a48.trimEnd(); } catch (e) {}
                        return "-1024";
                    },
                };
                return a42;
            }
            f40(v35, v35, "848379313");
            f40(v35, v34, "UZ");
            return 11;
        }
        this[Symbol.toPrimitive] = f31;
        class C59 {
            static [11] = this;
            static d = 11;
            static [this] = this;
        }
        new C59();
        new C59();
        new C59();
    }
}
v14[536870889] >>= 0.8317100509072541;
new Uint16Array(C18, 11, 512);
function f64() {
    return 0.8317100509072541;
}
const v65 = new C18(11);
const v66 = new C18(11);
v66[Symbol.toPrimitive] = f64;
const v69 = new C18(-5.0);
function F70(a72, a73) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = v11;
    try {
        this.h = a72;
        new Set();
        const o78 = {
            set b(a77) {
            },
        };
    } catch(e79) {
    }
}
const v80 = new F70(v65, v69);
const v81 = new F70(v66, v69);
new F70(v80, v69);
function f83() {
    return v65;
}
new Map();
class C90 {
    constructor(a92) {
        ("buffer")["search"](..."buffer", ..."search", ..."search", a92, ..."search", 52021);
        super.d = arguments;
    }
    static h;
    static #a;
    [-5.0] = -5.0;
    #g = "buffer";
    static #c;
    static #e = C90;
}
const v96 = new C90(C90);
const v97 = new C90(v96);
new C90(v97);
const v100 = new WeakMap();
new BigInt64Array(129, v81, BigInt64Array, v100);
new Int8Array(12);
const v109 = new Uint32Array(1024);
function f110() {
    const v111 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
    function f112(a113, a114, a115, a116) {
        function f117() {
        }
        class C118 extends f117 {
        }
        for (let i121 = 0, i122 = 10; i121 < i122; i122--) {
            for (let v129 = 0; v129 < 5; v129++) {
                function f130() {
                }
            }
        }
    }
    for (let v131 = 0; v131 < 10; v131++) {
        f112(v111);
    }
}
f110[Symbol.toPrimitive] = f110;
f110();
const v136 = /1xyz{1,}?/gims;
const v137 = /h\p{gc=Nd}/vdy;
const v138 = /\xf0\x9f\x92\xa9a*/us;
Map.valueOf = f83;
class C140 extends Map {
}
function f141() {
    const v144 = Array();
    v144[0] = f141;
    return v144.unshift(3);
}
class C149 {
    static {
        this[Symbol.hasInstance];
    }
    #p() {
        let v155;
        try { v155 = this.p(undefined, this, this, this, this); } catch (e) {}
        try {
            v155.#p(undefined, v155, v155, undefined);
        } catch(e157) {
        }
        return undefined;
    }
    static #a = undefined;
    c = undefined;
}
const v158 = new C149();
const v159 = new C149();
const v160 = new C149();
function f161(a162) {
    const o171 = {
        15: a162,
        valueOf(a164, a165) {
            super.h = a165;
            a162?.[15];
            super[this];
            Object.defineProperty(C18, 64, { get: f64, set: f83 });
            v65.f;
            Object.defineProperty(v138, "c", { get: f161, set: f110 });
            try { C149.stringify(a162, a162, this); } catch (e) {}
            try {
                C149.c = v158;
            } catch(e170) {
            }
            return a165;
        },
        2147483647: undefined,
        __proto__: v159,
        "c": a162,
        ...a162,
        "f": a162,
    };
    return o171;
}
const v172 = f161(v109);
f161(v160);
f161(v172);
for (let i197 = (() => {
        let v175 = -908890636;
        v66 & --v175;
        const v180 = new Uint8ClampedArray(4);
        const v182 = new Int8Array(v180);
        f110();
        let v189 = -16;
        const v190 = v189 / f110;
        Math.exp(257);
        Math.tan(v190);
        v189--;
        Math.random();
        v182.lastIndexOf();
        return 0;
    })();
    (() => {
        let v198 = 1000.0;
        class C199 {
            static {
                ++v198;
            }
        }
        return i197 < 5;
    })();
    i197++) {
    try {
    } catch(e209) {
    }
}
const v212 = new Int32Array();
v212.toString = f161;
const v214 = new BigUint64Array();
try { v214.with(Map, v212); } catch (e) {}
function F217(a219, a220, a221, a222) {
    if (!new.target) { throw 'must be called with new'; }
}
const v223 = new F217(v138, 1, -1263139894, F217);
const v224 = new F217(v136, v138, -23596, v223);
const v225 = new F217(v137, F217, -23596, 1);
function f226() {
    try {
        v81.h = Uint8ClampedArray;
    } catch(e227) {
    }
    return C18;
}
v225[Symbol.toPrimitive] = f226;
const v230 = v225 | F217;
let v231;
try { v231 = v224(v138, v230, v230); } catch (e) {}
if (v231) {
} else {
}
