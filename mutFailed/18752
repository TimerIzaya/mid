const v4 = new WeakSet();
class C5 extends WeakSet {
    static #toString(a7) {
        C5 = v4;
        super.h = v4;
        try { ("toString").concat(v4); } catch (e) {}
        new Uint32Array(8);
        new Uint8Array(129);
        new Uint16Array(15);
        return "2147483647";
    }
    get b() {
        const v23 = Symbol.toPrimitive;
        const o33 = {
            [v23]() {
                super.has(-6.2155674919665564);
                this[-2] = v4.e;
                delete Symbol[2134347159];
                this["has"](-6.2155674919665564);
                return 1.0;
            },
        };
        return -1.030968290102886e+307;
    }
}
const v34 = new C5();
const v35 = new C5();
const v36 = new C5();
class C37 extends WeakSet {
    #g;
    #a = WeakSet;
    constructor(a39, a40) {
        super(a39);
        throw v36;
        -1.030968290102886e+307 <= v35;
    }
    #d = -6.2155674919665564;
    static h = -6.2155674919665564;
    e;
    #o(a43, a44) {
        delete v35?.b;
        return super[a44];
    }
}
const v51 = Symbol.iterator;
const o60 = {
    [v51]() {
        let v53 = 10;
        const o59 = {
            next() {
                v53--;
                const v57 = v53 == 0;
                const o58 = {
                    "done": v57,
                    "value": v53,
                };
                return o58;
            },
        };
        return o59;
    },
};
const v61 = new C37(C5, 1.0);
const v62 = new C37(C5, 1.0);
const v63 = new C37(v4, -6.2155674919665564);
class C64 extends WeakSet {
    constructor(a66, a67, a68, a69) {
        super(a67);
        const v70 = v35.a;
        super.f ||= 1.0;
        super.g <<= 1.0;
        try {
            v34.valueOf = v70;
        } catch(e71) {
        }
    }
    #c = v4;
    h;
    static #e;
    #d = v62;
    static [v4] = WeakSet;
}
new C64(v62, v62, v61, v34);
new C64(v62, v61, v63, v62);
new C64(C5, v62, v4, v62);
function F75(a77) {
    if (!new.target) { throw 'must be called with new'; }
}
const v78 = new F75(F75);
const v79 = new F75();
const v80 = v79.constructor;
const v81 = new v80(v78, v80);
([536870912,268435441,9007199254740992,57419,129,-2147483647]).indexOf(v78, v81);
