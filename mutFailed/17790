[3.0,934484.4409814407];
const v1 = [-4.0,0.8480379571453528,-1e-15,-9.154358187198783,3.0];
const v2 = [-345.77051917482197,-2.0];
/mI(ab)/umsy;
/W\p{gc=Nd}/gi;
const v6 = new Uint8Array();
class C7 {
    static {
        this.__proto__ = v6;
    }
    static set g(a10) {
        try {
            super.keys();
        } catch(e12) {
        }
    }
}
C7.g += Date(v6)[v2];
/Muw\p{gc=Nd}?/vdimy;
class C20 {
    static {
        const v25 = new Float64Array(1);
        v25["indexOf"](4, 4);
        let v28;
        try {
        const t0 = -2147483648n;
        v28 = t0(this, v1);
        } catch (e) {}
        let v33 = -2147483649 - v28;
        Math.atanh(v28);
        const o35 = {
        };
        o35.propertyIsEnumerable;
        try {
        } catch(e37) {
        }
        -2147483649 + 64;
        function f42() {
            let v43 = -1000000000.0;
            const o51 = {
                o(a45, a46) {
                    function f47(a48, a49, a50) {
                        v43 |= a46;
                    }
                },
            };
        }
        f42();
        Math.atan2(536870912, -9);
        const v55 = [1000000000000.0,1e-15];
        v55[3] = -1000000.0;
        delete v55[2];
        v33--;
        new Uint8Array();
        for (let v60 = 0; v60 < 10; v60++) {
            const v61 = [601759695];
            const v62 = [1073741824,1073741823,1376142744,1073741825];
            try { v62["find"](..."find", undefined, ...v61, ...undefined); } catch (e) {}
        }
    }
    static [-2147483648n] = 128n;
}
new C20();
new C20();
new C20();
function f73(a74, a75) {
    const o77 = {
        [8.946504243780264e+307]: a75,
        get g() {
            return a75;
        },
    };
    return o77;
}
const v78 = f73(-9.389413203732939e+306, 2.0);
const v81 = ("-1723624938").slice(9);
class C84 {
    constructor(a86, a87) {
        const v88 = this.constructor;
        try { new v88(this, v81); } catch (e) {}
        a87.sup();
    }
}
const v91 = new C84(9, "maxByteLength");
v91.constructor;
f73(-9.389413203732939e+306, -1000000000000.0);
const v95 = Symbol.isConcatSpreadable;
const t84 = 9;
new t84();
Symbol.toPrimitive;
Float32Array.bind();
v78[v95];
const v103 = ["bpkzx","bpkzx","bpkzx"];
"bpkzx" * [v103,v103,v103];
const v107 = new Float64Array(Float64Array);
const v108 = [601759695];
v108 + v108;
function F112(a114) {
    if (!new.target) { throw 'must be called with new'; }
    let v115;
    try { v115 = this.constructor(); } catch (e) {}
    const v116 = this.constructor;
    try { new v116(v116, F112, v116, v116); } catch (e) {}
    try {
        a114 % 257;
    } catch(e120) {
        ("gV9")["toLowerCase"](v116, ...-5.0, ...v115);
    }
}
const v123 = new F112(F112);
new F112(v123);
function f125(a126, a127, a128, a129) {
    Object.defineProperty(arguments, 4, { writable: true, enumerable: true, value: v107 });
    arguments[4] = arguments;
    return v108;
}
