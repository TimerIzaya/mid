for (let v5 = 0; v5 < 5; v5++) {
    function f6() {
        return f6;
    }
}
const v10 = new BigUint64Array(1000);
const v12 = v10.name;
v10.toString().lastIndexOf(v12);
const t7 = "4x";
const v16 = new t7();
const v17 = -Infinity;
try { v16.for(BigUint64Array, -0.0, "4x", 2.0, v17); } catch (e) {}
new Uint16Array(3388);
const v24 = [-20096,4294967296,-65537,-2];
const v25 = [-1947047520];
[[v25,v25,v25,v24]];
function F29(a31) {
    if (!new.target) { throw 'must be called with new'; }
    const v32 = this?.constructor;
    try { new v32(); } catch (e) {}
    try {
        this.f = 145253519;
    } catch(e34) {
    }
}
new Uint8Array(1922);
const v37 = [];
async function f39(a40, a41, a42) {
    return a41;
}
class C44 extends Date {
}
("p").localeCompare(v37);
class C46 {
}
const v47 = new C46();
v47.constructor;
const v50 = new Uint8ClampedArray(Uint8ClampedArray, Uint8ClampedArray, Uint8ClampedArray);
v50.length;
