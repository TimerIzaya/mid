const v0 = [];
const v1 = [v0];
[v1,v1,v0,v1,v0];
[v1,v0];
function f9() {
    const o15 = {
        __proto__: -4.784057961755419e+307,
        [f9]: f9,
        get e() {
            return 0.043152456200264866;
        },
        8: 0.043152456200264866,
        get a() {
            Math.acos(0.043152456200264866);
        },
    };
    return o15;
}
const v16 = f9();
const v17 = f9();
function F19(a21, a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = 257;
    this.h = a22;
}
const v25 = new F19(v17, v16);
function f27(a28, a29, a30) {
    const v34 = new Uint16Array(821);
    new Uint8Array(v34);
    function f37(a38) {
    }
    a28[1] = a30;
}
const v41 = [v25];
class C44 {
    #a = -2;
    constructor(a46, a47) {
        try {
            ("symbol").#a;
        } catch(e49) {
        }
    }
}
const o50 = {
    "arguments": v41,
    "message": "function",
};
function f51(a52, a53) {
    return f51;
}
try {
} catch(e54) {
}
new Worker(f27, o50);
new Float32Array(4);
new Uint32Array(254);
new Float64Array(1331);
const v65 = new Float64Array();
function f67() {
    const o71 = {
        [null]() {
            try { this.null(f67, this, this, f67); } catch (e) {}
            super.b;
        },
    };
    return o71.null();
}
const v76 = new Float32Array(4096);
const v78 = [v76,Uint32Array,[v65,Uint32Array,v76]];
v78[v78] >>= 1000;
