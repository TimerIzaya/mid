function f0() {
    const v6 = new WeakMap();
    const v7 = v6.set(Uint16Array);
    const v8 = [];
    function f9() {
        -v8;
        return f9;
    }
    const o37 = {
        m(a12) {
            try {
                const t11 = "log10";
                t11.length = 0;
                const v14 = [601759695];
                const v15 = [1073741824,1073741823,1376142744,1073741825];
                function f16(a17, a18, a19, a20) {
                    a20 - a20;
                    function f22() {
                        return a17;
                    }
                    function f23(a24, a25) {
                        return a24;
                    }
                    try { f23(); } catch (e) {}
                    const v27 = f23(v15, v7);
                    try { v27.toString(); } catch (e) {}
                    try { v15["find"](..."find", a20, ...v14, ...v15); } catch (e) {}
                    return v7;
                }
            } catch(e31) {
            }
            return 0;
        },
        o(a33) {
            const o35 = {
            };
            return gc(o35);
        },
        "h": "log10",
        [-3.0]: "log10",
        __proto__: "log10",
    };
    return o37;
}
const v38 = f0();
const v39 = f0();
const v40 = f0();
[1000.0,4.0,0.0,1e-15,-1000000000000.0,-5.461736008413327];
const v42 = [-1e-15,301.7054214649738,-Infinity,964846.214316749,-1.7976931348623157e+308,1.2659823006684134e+308,-1.0,0.790121162282597,-1000000000000.0,Infinity];
const v43 = [0.04883067135293839,799591.7668324637,-5.0,0.5792916651083484,0.13132222469377997,-802.5262487574339,-5.0];
const v44 = [f0,f0,v43,v40,v39];
const v45 = [v40,v42,v43,v39];
class C46 {
}
const v47 = new C46();
for (const v48 in v47) {
}
[v45,v40,v38,v44];
const v50 = [723200.4184824808,-1000.0,-523437.54204506474,-964793.6675249395];
for (let v51 = 0; v51 < 20; v51++) {
    let [,v52,...v53] = v50;
}
const v54 = new f0();
v54.reverse();
function f57() {
    return f57;
}
f0();
function F59() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v63 = Array(19793);
        for (const v64 of v63) {
        }
        const v65 = [v63,v63,v63,v63,v63];
        [[v65,v65,v65]] >= Uint16Array;
    } catch(e70) {
    }
}
function f74() {
    const v77 = [3.4890473589784586e+307 === Uint8Array];
    v77.constructor.isArray(v77);
    return f74;
}
%PrepareFunctionForOptimization(f74);
f74();
%OptimizeFunctionOnNextCall(f74);
f74();
