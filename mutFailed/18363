function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = F0;
    try {
        this.b = -2147483648;
    } catch(e3) {
    }
    try {
        this.e = -2147483648;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
const v7 = new F0();
v7.h = v7;
const v8 = [v6];
try { v8.find(v8); } catch (e) {}
[v5,v6,v8,v5];
const v11 = [F0];
v11.g = v5;
v11.g = v11;
class C15 {
    static valueOf(a17, a18) {
        if (a18) {
            !a18;
        } else {
            for (let v20 = 0; v20 < 32; v20++) {
                a17["p" + v20] = v20;
            }
        }
        return -235123675;
    }
}
let v23;
try { v23 = new C15(); } catch (e) {}
const v24 = new C15();
const v25 = new C15();
function f26(a27) {
    const o28 = {
    };
    o28.e = a27;
    try {
        o28.e = a27;
    } catch(e29) {
    }
    try {
        const o30 = {
        };
        o30.e = a27;
        o30.d = v23;
    } catch(e31) {
    }
    try {
        const o32 = {
        };
        o32.e = o28;
        o32.e = a27;
        o32.d = v23;
        o32.g = a27;
    } catch(e33) {
    }
    try {
        const o34 = {
        };
        o34.e = a27;
        o34.d = v23;
        o34.g = v25;
    } catch(e35) {
    }
    return F0;
}
v25.constructor = f26;
const v36 = v25?.constructor;
function f37(a38, a39) {
    function f40() {
        return v24;
    }
    return v11;
}
v36[Symbol.toPrimitive] = f37;
try { new v36(); } catch (e) {}
new C15();
class C47 {
    static {
        this.f = 255;
        this.f = f26;
        try { new this(); } catch (e) {}
        this.f += "MAX_SAFE_INTEGER";
    }
    static #a = "undefined";
}
C47.name = C47;
for (let v50 = 0; v50 < 5; v50++) {
    const t94 = "undefined";
    t94["p" + v50] = v50;
}
