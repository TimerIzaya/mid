const v2 = -Infinity;
function f4() {
    return v2;
}
[2.2250738585072014e-308,1.1608046808693852e+308,-552.580771638101,-1.7976931348623157e+308,1.485605398624001e+308,0.8478832439522475];
let v8 = 18699;
Math.sign(6.177510545432251e+307);
const v11 = --v8;
v8 ** 6.177510545432251e+307;
Math.sin(v8);
-6.177510545432251e+307;
[140.03355465539494];
[-1.0,13.136490109897409];
let v20 = 1017544606;
v20 = 536870889;
const v23 = [0.5409128672281204];
[v23,[f4,v20,v11,v23,4294967295]];
v23[9];
let v28 = Map;
const v33 = v28--;
const v34 = [-4.0,-1e-15];
const v35 = [-260907.94204962405,2.0,1000.0,-1.7976931348623157e+308,-27915.17724513053,-750069.0020602955,9.81145717093733e+307,1.0,1000000000000.0];
v35.pop();
function F39(a41, a42, a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    const v45 = this?.__defineGetter__;
    try { v45(undefined, undefined); } catch (e) {}
    try { a41.unshift(a42); } catch (e) {}
    a43 != a43;
    let v49;
    try { v49 = a41.toSpliced(a42, a42); } catch (e) {}
    const v50 = v49?.__defineSetter__;
    try { v50(); } catch (e) {}
}
new F39(v35);
new F39(v34, v33);
function f54() {
    return -4294967295;
}
Reflect.setPrototypeOf(f54, [], f54);
const v62 = new Uint8ClampedArray(16);
const v64 = new WeakSet(v62);
try {
    f4();
} catch(e66) {
}
v64[3] = true;
