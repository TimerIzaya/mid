-13 != -13;
const v7 = [1000000000.0,641.1534790118683,-41719,-41719,1000000000.0];
[-41719,-13,2147483648,-41719];
const v9 = [v7,-41719,-41719,2147483648];
const v10 = [-939015.8128644328,-2.0,647420.7836887757,0.4645054866127778,-1e-15,9.686400545772567];
const v11 = [4.0,1.0,1000000.0,2.220446049250313e-16,533350.8402277301,-2.2250738585072014e-308,1000000.0,1.566394140636886];
const v12 = v11.toLocaleString();
function F13() {
    if (!new.target) { throw 'must be called with new'; }
}
new F13();
const v16 = [-1.571301030924602e+307,-5.0,3.0,-2.220446049250313e-16,1.0];
try { v16.map(v16); } catch (e) {}
const t13 = -3.0;
const v18 = new t13();
for (let v19 = 0; v19 < 5; v19++) {
    const o21 = {
    };
    gc(o21);
}
const v23 = [1000000000.0,-691705.6419631084,-3.0,-1000000000.0,629645.4407772962,-2.245207994427602,1e-15,-870.1489994050739,-77641.16710447718,0.155508539439296];
const v24 = v23?.find;
try { new v24(v9); } catch (e) {}
for (let v26 = 0; v26 < 50; v26++) {
}
function f27() {
    return 1000000000.0;
}
function f29() {
    try { v24.getOwnPropertyDescriptor(v10, v12); } catch (e) {}
    v23[512] >>>= 641.1534790118683;
    return -3.0;
}
Float32Array[Symbol.toPrimitive] = f29;
const o35 = {
    "execution": "async",
    "type": "minor",
};
function f36(a37, a38, a39, a40) {
    const v41 = /(?:a*)+q(?<a>.)/guds;
    for (let [i68, i69] = (() => {
            0 >>> 0;
            const v45 = [601759695];
            function f46() {
                let v50 = -4294967297n;
                const v51 = v50--;
                for (let v52 = 0; v52 < 5; v52++) {
                    function f53() {
                        b = v45;
                        const o60 = {
                            [v51](a56, a57, a58, a59) {
                            },
                        };
                        return Date;
                    }
                }
                return v50;
            }
            return [0, 10];
        })();
        (() => {
            const v70 = i68 < i69;
            try {
                delete v11[a38];
                this[v18];
            } catch(e74) {
            }
            function f75(a76, a77) {
                return f36;
            }
            return v70;
        })();
        (() => {
            i69--;
            const t0 = (-41719).constructor;
            t0().toFixed();
            const v85 = ("-1723624938").slice(-13);
            class C86 {
                constructor(a88, a89) {
                    const v90 = this.constructor;
                    try { new v90(this, v85); } catch (e) {}
                    a89.sup();
                }
            }
        })()) {
        for (let v95 = 0; v95 < 25; v95++) {
            v41.hasIndices = v41;
        }
    }
    return f36;
}
for (let v96 = 0; v96 < 10; v96++) {
    f36(v96, v96, f36, v96);
}
function f98(a99, a100) {
    return -588750793;
}
Float32Array.toString = f98;
function f102(a103, a104, a105) {
    return f102;
}
try { f102(2147483648, v10, 641.1534790118683); } catch (e) {}
class C107 extends f102 {
}
C107.prototype = C107;
Object.defineProperty(C107, Float32Array, { enumerable: true, get: f102 });
class C109 {
    constructor(a111, a112) {
        new Uint16Array(a111);
    }
}
