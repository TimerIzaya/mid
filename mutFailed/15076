class C3 {
    m(a5, a6) {
        a6++;
        return a6;
    }
    constructor(a9, a10) {
        const v11 = this >>> this;
        try { a10(a9, a10, v11); } catch (e) {}
        1 - a10;
        %VerifyType(1);
        try {
            a10.a = 1;
        } catch(e14) {
        }
    }
    #e = C3;
}
new C3(1, 57263);
const v16 = new C3(57263, C3);
new C3(57263, v16);
new Boolean();
function f23() {
    return 57263;
}
[4294967297,-490029764,-11,-1073741824,-1024];
[2147483649];
[248761179,-9007199254740990,49243,722624917,1073741824,65537,536870888,832939849,-59237,-419823121];
const v27 = /(J5a{0,1}?)/y;
class C28 {
    static {
        for (let v30 = 0; v30 < 25; v30++) {
            const v31 = [601759695];
            const v32 = [1073741824,1073741823,1376142744,1073741825];
            function f33(a34, a35, a36, a37) {
                ~a35;
                try { a34(); } catch (e) {}
                const v40 = a36 << a36;
                v40 % v40;
                class C42 {
                    n(a44, a45) {
                    }
                }
                class C46 {
                }
                const v47 = new C46();
                class C50 {
                    constructor(a52, a53, a54) {
                        function f55(a56, a57) {
                            return a56;
                        }
                        this[Symbol.toPrimitive] = f55;
                        a53[4] = v47;
                        for (let v60 = 0; v60 < 25; v60++) {
                        }
                    }
                }
                new C50(Int8Array, Uint32Array);
                function f63() {
                }
                const v65 = new Int8Array();
                this.length;
                const v69 = BigUint64Array * 536870887;
                let v70 = v69 - v69;
                v70++;
                v69 ** v69;
                try { Number(v27); } catch (e) {}
                const v76 = v65.buffer.__defineGetter__;
                try { v76(); } catch (e) {}
                try { v32["find"](..."find", a37, ...v31); } catch (e) {}
            }
            for (let v80 = 0; v80 < 5; v80++) {
                f33(this);
            }
        }
    }
}
