new Uint32Array(2);
const v5 = new Uint8ClampedArray(1000);
v5[287];
Uint8ClampedArray.f = Uint8ClampedArray;
const v9 = new Uint8ClampedArray(2517);
v9[333] = v9;
new Uint8Array(8);
new undefined(3313);
const v18 = new Uint8Array(99);
try { Array.toString(); } catch (e) {}
const v22 = Array(8);
try { v22.sort(v22); } catch (e) {}
function f24() {
    return f24;
}
const v25 = f24?.apply;
try { v25(v25, v25); } catch (e) {}
try { v25(8, v22); } catch (e) {}
const v29 = new Map();
try { v29.set(Array, f24); } catch (e) {}
function f31() {
    return v29;
}
let v32;
try { v32 = f31(8, 2); } catch (e) {}
try { v32.forEach(v22); } catch (e) {}
const v34 = /(?=.)ha\nb\bc/gum;
v34.dotAll = v34;
class C35 extends f31 {
    static {
        try { new this(); } catch (e) {}
        const v38 = v22.length;
        try { this.m(this, v38, Map, v34); } catch (e) {}
    }
}
C35.prototype = C35;
let v41 = 4087;
v41++;
try { new Float64Array(v18, Array, Array); } catch (e) {}
