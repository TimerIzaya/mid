class C3 {
    static #g = "-13";
    #h = -499.9862152789649;
    static {
        this.g;
        [45341];
        [-9223372036854775808,-4294967296,536870912,127,5,11,1211900580];
        [-13,65535,-10,-19743,1281198915,-14,-65705909];
    }
    ["-13"] = -0.0;
    static ["-13"];
    g = -0.0;
    c = "-13";
    #d = "-13";
}
const v9 = new C3();
const v10 = new C3();
const v11 = new C3();
const v12 = /7(?=.)+/gvdimsy;
const v13 = /{z}pN3/gisy;
const v14 = /CcT/gvm;
class C15 {
    o(a17, a18) {
        const v19 = v12[255];
        const v20 = super.b;
        try { v20(v19, v20, "-13", a17, v14); } catch (e) {}
        return v12;
    }
    #toString(a23, a24) {
        for (let v25 = 0; v25 < 71; v25++) {
            super.g >>= -0.0;
        }
        %VerifyType(C3);
        v9[a24] >>= a24;
        v13[1] = a23;
        %VerifyType(v11);
        try {
            const o26 = {
            };
            this.o(o26, -0.0);
        } catch(e28) {
        }
        [a23,a24];
        return v11;
    }
}
new C15();
new C15();
new C15();
const v33 = [];
class C34 {
    [v33];
    set a(a36) {
        a36 === v33 ? a36 : v33;
        [v33,a36,a36,v33];
        [v33];
        [a36,v33,v33,v33,v33];
    }
    static [v33];
    #f;
    h = v33;
}
const v42 = new C34();
new C34();
const v44 = new C34();
const v47 = v13 !== -14;
if (v47) {
    const o48 = {
    };
    try {
        o48.c = v47;
    } catch(e49) {
    }
    try {
        const o50 = {
        };
        o50.c = v47;
        o50.b = v12;
    } catch(e51) {
    }
    try {
        const o52 = {
        };
        o52.c = v47;
        o52.b = v12;
        o52.h = v11;
    } catch(e53) {
    }
    try {
        const o54 = {
        };
        o54.c = v47;
        o54.b = v12;
        o54.a = v10;
    } catch(e55) {
    }
} else {
    new WeakMap();
}
function F59(a61, a62, a63, a64) {
    if (!new.target) { throw 'must be called with new'; }
}
const v65 = new F59(-12, -56455, v44, v33);
const v66 = new F59(v42, -14, v42, v44);
const v67 = new F59(v42, -14, v44, C34);
v67 - -12;
Math.round();
v65 << -1.0;
try { v66(); } catch (e) {}
