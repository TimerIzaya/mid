const v2 = new BigUint64Array(3023);
new Uint32Array(3967);
const v8 = new Float32Array(6);
class C9 extends Float32Array {
    1073741824 = 3967;
    static #c = 3967;
    static 3173 = 6;
    constructor(a11, a12, a13) {
        super(v2, a13);
        v8.set(a11, 3967, BigUint64Array, ...this, a11);
        try {
            this.#c %= BigUint64Array;
        } catch(e15) {
        }
    }
}
new C9(6, 6, 6);
new C9(6, 3967, 3967);
new C9(6, 3023, 6);
const v19 = /LD/vds;
const v20 = /a\s/vims;
const v21 = /SO/uis;
function f25() {
    return v19;
}
[12,65535,536870912,-8,1000,-9223372036854775808,-8,2,13];
[2,30964,-9223372036854775808,8,536870887,61212,-9223372036854775807,10000,-380609068];
[-527931172,-2147483647,1073741823,1913461086,9007199254740991,128,-2008902983,-7];
function f29(a30, a31, a32, a33) {
    const v36 = new BigInt64Array(4046);
    let v37 = undefined;
    const v38 = v37++;
    v38 + v38;
    const v40 = v38 >> v38;
    v40 >>> v40;
    let o42 = {
    };
    [,...o42] = v36;
    return f29;
}
for (let v43 = 0; v43 < 5; v43++) {
    f29();
}
const v45 = [v19,1000.0,v20];
const v46 = [v19,1000.0];
[v20,v46,v21,1000.0,v46];
for (let v48 = 0; v48 < 22; v48++) {
    const v49 = v20[v48];
    try { new v49(v49); } catch (e) {}
    v45[v21];
    const o55 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o55);
}
