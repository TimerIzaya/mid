new Int32Array(1024);
const v5 = new Int8Array(7);
new Float32Array(3);
function f9() {
    return v5;
}
const v16 = [0.3083488057663979,0.3083488057663979,0.3083488057663979];
function f18() {
    function F19(a21, a22) {
        if (!new.target) { throw 'must be called with new'; }
        const v23 = a22.constructor;
        try { new v23(); } catch (e) {}
        this.c = Float32Array;
    }
    new f18(f18, F19);
    new f18();
}
Float32Array.toString = f18;
class C28 {
    static [C28] = undefined;
}
class C29 {
    constructor(a31, a32) {
        /W(jy2)/udy;
        const v34 = /(u4(?:a?)*)/gudimsy;
        Uint8Array(v34, C29);
        const v38 = Uint32Array(4294967296, a31, a32);
        function f39(a40, a41, a42, a43) {
            const o47 = {
                ...Int8Array,
                n(a45, a46) {
                    v38[a41] = v38;
                    return a46;
                },
            };
            return C29;
        }
        for (let v48 = 0; v48 < 5; v48++) {
            f39(Uint8Array);
        }
        a32 = v34;
        for (let v50 = 0; v50 < 5; v50++) {
            v16["p" + v50] = v50;
        }
    }
}
function F54(a56, a57) {
    if (!new.target) { throw 'must be called with new'; }
    const o58 = {
    };
    try {
    } catch(e59) {
    }
    try {
        const o60 = {
        };
    } catch(e61) {
    }
    try {
        const o62 = {
        };
    } catch(e63) {
    }
    try {
        const o64 = {
        };
    } catch(e65) {
        function f66(a67, a68) {
            const o72 = {
                o(a70) {
                    super.c;
                    return a70;
                },
            };
            let v75 = 9;
            --v75;
            let v77 = e65 >> Symbol;
            v77++;
            Math.sinh(-5420);
            Math.tan(-5420);
            return o72;
        }
    }
    try {
    } catch(e81) {
    }
    try {
    } catch(e82) {
        const o83 = {
        };
    }
    try {
    } catch(e84) {
    }
}
const v85 = new F54(-1066825740, 4294967296);
const v86 = new f9(9007199254740990, 4294967296);
try { v85.getYear(F54, v86, v85, v86, 9007199254740990); } catch (e) {}
/8foo(?=bar)baz*/vdisy;
const v89 = /([x]a[a]+)/gdisy;
/(\2)(\1)/gudimsy;
v89[F54];
