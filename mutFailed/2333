function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 65537;
    } catch(e3) {
    }
    try {
        this.f = 65537;
    } catch(e4) {
    }
    try {
        this.a = 65537;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
class C9 {
    3;
    get g() {
        try {
            v6.fuck(this, v7, "IgnuM");
        } catch(e14) {
        }
        return v8;
    }
    [v8];
    [v6] = F0;
}
C9.b = C9;
new C9();
const v16 = new C9();
const t33 = v16[3];
new t33();
(-0.12353456030320231 / -0.12353456030320231) >>> C9;
0n === 0n;
function F29(a31) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.constructor(3n); } catch (e) {}
    const v33 = a31 ^ a31;
    v33 * v33;
    const v35 = this?.constructor;
    v35.length = v35;
    try { new v35(3n); } catch (e) {}
}
const v37 = new F29(0n);
try { v37.constructor(349865170n); } catch (e) {}
const t48 = 349865170n;
const v39 = new t48(349865170n);
const v40 = v39?.__lookupGetter__;
try { new v40(v37); } catch (e) {}
const v42 = v39?.constructor;
try { new v42(v39); } catch (e) {}
