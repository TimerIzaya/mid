const v3 = /(yF(ab|cde)\1*)/vdm;
const v4 = /xyz{93}/vds;
/(x)(x)(x)\4Sfoo|(bar|baz)|quux/disy;
let v12 = [v4,1653423345n,v3,-1942436738n];
function f13() {
    new Uint16Array(209);
    return 209;
}
const v19 = new Int8Array(268435456);
const v22 = Float64Array << f13;
const v24 = ("function")["repeat"](268435456, v22, ..."function", v3);
function F25(a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a27;
    } catch(e29) {
    }
    try {
        this.g = Int8Array;
    } catch(e30) {
    }
    try {
        this.a = v22;
    } catch(e31) {
    }
}
const v32 = new F25(127n, v3);
new F25(127n, v3);
new F25(127n, v24);
let v35 = Float64Array.of();
v35 = 2.220446049250313e-16;
function f36() {
    return "5";
}
v4 || "repeat";
v35.toString = f13;
new Date(Array, v35);
[-1000000000.0,-1000000000.0,127n,v12];
[-1000000000.0];
/[[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]]/vim;
for (let i44 = 0; i44 < i44, i44; v12++) {
    try { v12.trimEnd(); } catch (e) {}
    try {
        const o52 = {
        };
    } catch(e53) {
    }
}
v12[8];
Object.defineProperty(v19, v22, { configurable: true, get: f13 });
delete v32[2.220446049250313e-16];
-1000000000.0 in v3;
new Int8Array(253);
new Uint32Array(0);
new BigUint64Array(129);
