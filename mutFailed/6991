function f0() {
    const o13 = {
        "b": 1220274566,
        "e": -9.09147594581428e+307,
        ..."n",
        get f() {
            const o5 = {
            };
            try {
                o5.h = this;
            } catch(e6) {
            }
            try {
                const o7 = {
                };
                o7.h = this;
                o7.g = this;
            } catch(e8) {
            }
            try {
                const o9 = {
                };
                o9.h = this;
                o9.g = this;
                o9.a = 1220274566;
            } catch(e10) {
            }
            try {
                const o11 = {
                };
                o11.h = this;
                o11.g = this;
                o11.b = this;
            } catch(e12) {
            }
            return this;
        },
    };
    return o13;
}
const v14 = f0();
const v15 = f0();
const v16 = f0();
class C18 {
    #d;
    static m(a20, a21) {
        this % v14;
        super[f0];
        return 1073741823;
    }
    static 8;
    static c;
    static g = v15;
}
new C18();
const v28 = new C18();
new C18();
class C30 {
    static a;
    static 4;
    #f = v14;
    static #p(a32, a33, a34, a35) {
        super.g = super[v28];
        try {
            a33.#f = a33;
        } catch(e37) {
        }
        return v16;
    }
}
new C30();
new C30();
const v40 = new C30();
const v41 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const o44 = {
    "maxByteLength": 2557389451,
};
const v46 = new ArrayBuffer(0, o44);
new BigInt64Array(v46);
const v50 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v51 = [601759695];
const v52 = [1073741824,1073741823,1376142744,1073741825];
function f54(a55, a56, a57, a58) {
    function f60() {
        let v63 = Float64Array;
        b = v63 = a56;
        v41.length;
        try {
            v52.forEach(v63);
        } catch(e66) {
        }
        const v67 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v69 = Symbol.toPrimitive;
        const o75 = {
            toString(a71, a72) {
                const v73 = a58 && v63;
                a71 *= v69;
                return v73 <= v67;
            },
        };
        try { arguments["p"](); } catch (e) {}
        const o81 = {
            "maxByteLength": 6,
        };
        const v83 = new SharedArrayBuffer(2, o81);
        new Uint32Array(v83);
        const o105 = {
            "c": -4294967297n,
            [522675525n](a88, a89) {
            },
            "c": v51,
            valueOf(a91, a92) {
                return a55;
            },
            "b": -4294967295,
            [-4294967297n](a94, a95, a96, a97) {
            },
            "e": -4294967295,
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v50,
            ...v51,
            "type": "Vre",
            ..."Vre",
            valueOf(a99, a100) {
                return v67;
            },
            ...v63,
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            toString(a102, a103, a104) {
                return a58;
            },
            5: -4294967295,
            6: -268435456,
        };
    }
    f60();
    const v108 = new Int8Array();
    const v109 = v108.buffer;
    v109.constructor = f54;
    v109.slice(2147483648);
    %OptimizeFunctionOnNextCall(f60);
    let v113;
    try { v113 = v52["find"](..."find", a58, ...v51, ...v52, ...522675525n); } catch (e) {}
    v113 <= a57;
    return arguments;
}
for (let v115 = 0; v115 < 10; v115++) {
    f54();
}
C18 << v40;
Object.defineProperty(C18, "g", { writable: true, get: f54, set: f0 });
v51[-1] = null;
try {
    v52.__proto__ = v16;
} catch(e118) {
}
%OptimizeFunctionOnNextCall(f54);
f54();
