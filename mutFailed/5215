class C3 {
    static a;
    static f = 592031.2273305163;
    constructor(a5) {
        this[10];
        const o10 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o10);
    }
}
new C3(592031.2273305163);
const v13 = new C3(592031.2273305163);
new C3(592031.2273305163);
let v18 = 591114.0785999324;
v18++;
const v21 = [v18,v18,v18];
function F23() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.toString(this, F23, F23, this); } catch (e) {}
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    try { Date.toString(F23, 9223372036854775807); } catch (e) {}
    Date();
    let v33;
    try { v33 = new Uint32Array(Uint32Array, Uint32Array, 4); } catch (e) {}
    Uint32Array.BYTES_PER_ELEMENT = Uint32Array;
    const v34 = new Uint32Array(5, v13, 5);
    try { v34.reduce(Date); } catch (e) {}
    const v38 = new Set(v21);
    const v39 = v38?.e;
    try { new v39(v33); } catch (e) {}
    let v42;
    try { v42 = ("map").blink(); } catch (e) {}
    v42[4] = v42;
    const v43 = v38["map"](839612.5677247904);
    v43 || v43;
    const v45 = v43 || v43;
    const v46 = v45 && v45;
    const o48 = {
    };
    o48.b = o48;
    o48.e = 19793;
    try { new Array(9223372036854775807); } catch (e) {}
    let v52;
    try { v52 = ("getPrototypeOf").replace(); } catch (e) {}
    try { v52.strike(v18); } catch (e) {}
    class C55 {
        ["getPrototypeOf"] = -1.7976931348623157e+308;
    }
    class C56 extends C55 {
        ["getPrototypeOf"] = C55;
    }
    try { new C56(); } catch (e) {}
    C56.e = C56;
    const v58 = new C56(4);
    const v59 = v58?.getPrototypeOf;
    try { new v59(); } catch (e) {}
    const v61 = v58.constructor;
    try { new v61(F23, v46); } catch (e) {}
    const v63 = Array(19793);
    for (const v64 of v63) {
    }
    const v65 = [v63,v63,v63,v63,v63];
    let v66;
    try { v66 = v65.includes(839612.5677247904); } catch (e) {}
    v66 % v66;
    BigUint64Array.e = BigUint64Array;
    const v69 = new BigUint64Array();
    try { v69.reduceRight(v21); } catch (e) {}
    for (let v71 = 0; v71 < 5; v71++) {
        v71 >> v71;
    }
    [[v65,v65,v65]];
}
new F23();
new F23();
const v78 = new BigInt64Array();
function f79() {
    const v81 = v78[undefined] instanceof f79;
    const o82 = {
    };
    o82.g = o82;
    const o83 = {
    };
    o83.PI = o83;
    try {
        const o84 = {
        };
        o84.h = o84;
        o84.a = v18;
        o84.h = v81;
    } catch(e85) {
    }
    -12n << -12n;
    return undefined;
}
%PrepareFunctionForOptimization(f79);
const o88 = {
    "apply": f79,
};
const t101 = o88.apply;
new t101();
%OptimizeFunctionOnNextCall(f79);
f79();
