[-1073741824,13376,14];
const v4 = [11,-9,-2147483648,-1318566313,65535,-810138413,19863,-9223372036854775807,9,-1622822144];
const v5 = [-268435456];
function f6() {
    return v5;
}
class C7 {
    2 = v4;
    static set a(a9) {
        super.c = a9;
        function f10() {
            return a9;
        }
    }
    static p(a12, a13, a14, a15) {
        function F16(a18, a19) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.f = a12;
            } catch(e20) {
            }
            try {
                this.h = a14;
            } catch(e21) {
            }
            try {
                this.a = a15;
            } catch(e22) {
            }
        }
        new F16(a13, a13);
        new F16(a13, -4n);
        new F16(-57848n, -4n);
        return f6;
    }
}
new C7();
new C7();
new C7();
new Uint32Array(4096);
new Float64Array(512);
new Float64Array(2690);
const v42 = new Int32Array();
function f43() {
    function F44(a46, a47, a48, a49) {
        if (!new.target) { throw 'must be called with new'; }
    }
    return F44;
}
v42.constructor = f43;
const v53 = new Uint8ClampedArray(129);
const v54 = new Int32Array(3208);
const t52 = v42.constructor;
new t52(v53);
Int32Array.from(v54);
const v58 = [];
function f59(a60) {
    try { new a60(a60, a60, a60, 268435440, 268435440); } catch (e) {}
    return v54;
}
v58[Symbol.toPrimitive] = f59;
function f65() {
    const o68 = {
        ...v58,
        "c": v58,
        "e": v58,
        "f": v58,
        set b(a67) {
        },
        "arguments": v58,
        __proto__: f65,
        [v58]: v58,
        "h": f65,
        ...v58,
        "d": v58,
        4169472433: v58,
        1000: f65,
    };
    v58.e = o68;
    65537 == 4096n;
    const v74 = new Int32Array(1024);
    for (const v75 of v74) {
        const o78 = {
            "maxByteLength": 1293466293,
        };
        new SharedArrayBuffer(1796, o78);
    }
    return o68;
}
f65();
f65();
