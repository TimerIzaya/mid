class C3 {
    b;
    static [1] = "-10";
    [-4] = "-10";
    #p(a5) {
        let v6;
        try { v6 = new a5(this, a5, -4); } catch (e) {}
        try {
            v6.__proto__ = a5;
        } catch(e7) {
        }
        [-504863.1885363821,-248378.80818527355,-147.11467188198264,-1.7039705769992093e+308] | -4;
        class C10 {
            static toString(a12, a13) {
                this.d = this;
                const v15 = super[a13];
                try {
                    delete this[v15];
                    this[C10];
                } catch(e18) {
                }
            }
        }
        return "-10";
    }
    g;
}
C3.prototype = C3;
const v19 = new C3();
const v20 = new C3();
const v21 = new C3();
/qua+b|c/gviy;
const v23 = /jia[z-\d]/gimy;
v23.b = v19;
v23.b = v23;
v23.b = v23;
const v24 = /txyz??()a\sc+/gvdisy;
v24.lastIndex = v24;
class C25 extends C3 {
    constructor(a27, a28) {
        super();
        try {
            super.compile(v24, a28);
        } catch(e30) {
            e30.e = a28;
            e30.e = e30;
        }
    }
    static set f(a32) {
        while (0 < 5) {
        }
    }
    static #toString(a41, a42) {
        C3.b >>= -4;
        let v45 = 0.5531426347482487;
        --v45;
        Math.hypot(1073741825);
        let v48 = v45 | this;
        v48--;
        Math.cos(a42);
        ~v45;
        Math.random();
        return -4;
    }
}
try { new C25(v20, v23); } catch (e) {}
const v54 = new C25(C3, C3);
v54.a = v23;
const v55 = new C25(C3, v21);
v55.b = v55;
function F56() {
    if (!new.target) { throw 'must be called with new'; }
}
const v58 = new F56();
const v61 = new Int16Array();
for (let v65 = 0; v65 < 100; v65++) {
    const o71 = {
        valueOf(a67) {
            return v65;
        },
        [0](a69, a70) {
        },
        "execution": 2430,
        __proto__: v58,
    };
    function f72(a73, a74, a75) {
        const o81 = {
            [f72](a77, a78, a79, a80) {
            },
        };
    }
    Object.defineProperty(f72, Symbol.toPrimitive, { writable: true, configurable: true, enumerable: true, value: f72 });
    try {
        v54.a = f72;
    } catch(e84) {
    }
    const o85 = {
    };
    o85.g = -261.99102172609366;
    const o86 = {
    };
    o86.g = -261.99102172609366;
    o86.a = v61;
    const t103 = (2430).constructor;
    t103();
    const o89 = {
    };
    o89.g = -261.99102172609366;
    o89.a = v61;
    o89.f = v20;
    const o90 = {
    };
    o90.g = -261.99102172609366;
    o90.a = v61;
    f72(undefined, f72());
    class C93 {
        constructor(a95, a96, a97) {
            const v98 = a97.concat();
            v98[1] = v98;
        }
        static #o(a100, a101) {
        }
        n(a103, a104) {
        }
    }
}
new C25(v21, v55);
const v106 = [];
const v107 = v106.toSpliced(v106);
function F108(a110, a111, a112, a113) {
    if (!new.target) { throw 'must be called with new'; }
    const v114 = this.constructor;
    try { new v114(); } catch (e) {}
    try {
        v107 & 12620;
    } catch(e118) {
    }
}
for (let v119 = 0; v119 < 250; v119++) {
    for (let v121 = 0; v121 < 10; v121++) {
        function f122() {
            for (let v123 = 0; v123 < 5; v123++) {
            }
            const v124 = typeof 522675525n;
            function F127(a129, a130) {
                if (!new.target) { throw 'must be called with new'; }
                const v131 = this?.constructor;
                try { new v131("a", "a"); } catch (e) {}
                try {
                } catch(e133) {
                }
                try {
                } catch(e134) {
                }
                try {
                } catch(e135) {
                }
            }
            return v124 === "undefined";
        }
        f122();
    }
    function F138() {
        if (!new.target) { throw 'must be called with new'; }
        this.g = this;
        this.g = 1469121131;
    }
    const v141 = new F138();
    const v142 = new F138();
    function f143(a144, a145) {
        a144.b = a144;
        const v146 = a145.g;
        v146 != v146;
        const o156 = {
            set c(a149) {
                new F138();
            },
            [-2]: a144,
            get h() {
                /[]ba{12,3bd(x)(x)(x)\4*/imsy;
                /\p{Script_Extensions=Greek}tA(?:a+)*/vdim;
                const v154 = /a{12,3b/disy;
                try {
                    a144.f = v154;
                } catch(e155) {
                }
                return v141;
            },
            "d": F138,
            "b": v141,
            ...v142,
            "h": a144,
            "g": v142,
        };
        return o156;
    }
}
