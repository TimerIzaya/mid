const v0 = /C(\xed\xb0\x80)\x01foo|(bar|baz)|quuxaLBha(?=b)c/gvy;
const v1 = /pa*?(?:foo)/udisy;
const v2 = /(?<!a)(a)?/gvds;
[1000000000000.0,-986841.7580909579,NaN,3.1257425958338416,0.022651443302947882,0.29957262952432184];
const v4 = [143481.63081177277,1.2849976070542439e+308,-2.0];
const v5 = [1000000.0,-1000000000000.0,1.7976931348623157e+308,-72956.28712674812,-1000000.0,0.8720476531688223];
function f6(a7, a8) {
    const o15 = {
        m(a10, a11) {
            const v12 = super[v4];
            try {
                super.add(v0, v5, v12, this);
            } catch(e14) {
            }
            return v1;
        },
        [a7]: v0,
        "c": v2,
        "h": v0,
        [a8]: v5,
        __proto__: v4,
    };
    return o15;
}
const v16 = f6(v0, v5);
f6(v0, v5);
f6(v1, v5);
[-1.5629215085014763e+308,945.4690002392815,1.7976931348623157e+308];
[1.7976931348623157e+308,5.0,1.4297952743814884e+308,-1000000.0,410.6958905293602,-0.0,-8.131360653586122e+307,0.06856496647366517];
[0.3892132226098173,3.0,547869.3852198154,309.73446689845923,2.5354070831230313,-1.4113608368439153e+308];
function f23(a24) {
}
const v26 = new Map();
function F28() {
    if (!new.target) { throw 'must be called with new'; }
    const v31 = Date.toString();
    const v33 = v31[23].trimRight;
    const v34 = v33.toString;
    try { v34(); } catch (e) {}
    try { v33(); } catch (e) {}
    const v37 = v31.replaceAll();
    v37[30] = v37;
    const v39 = new Uint32Array();
    v39[2] = v39;
    const v40 = v39[2];
    const v42 = new Set();
    try { v42.add(); } catch (e) {}
    class C44 {
    }
    const v46 = Array();
    for (let v47 = 0; v47 < 5; v47++) {
        const v48 = v46.includes;
        try { v48(); } catch (e) {}
        const v52 = new BigInt64Array(2325);
        for (const v53 in v52) {
        }
    }
    const v54 = v16.keys();
    const v55 = v42.add;
    v55.g = v55;
    const v57 = v42[v54]();
    const v58 = v57 || v57;
    const v59 = v58 || v58;
    const v60 = v59 && v59;
    const v61 = v58 && v58;
    const v62 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    try {
        v46.forEach(f23, v62);
    } catch(e64) {
    }
    const v65 = v61 || v61;
    const v66 = v65 || v65;
    v66 && v66;
    const o68 = {
    };
    const v69 = new Array();
    v69[0];
    const v72 = ("getPrototypeOf").blink();
    const v73 = v72[28];
    const v74 = v73.strike();
    v74.split(v74, v60);
    const v76 = v72.strike();
    const v77 = v76.search;
    try { v77.call(); } catch (e) {}
    const v79 = v76.replace();
    try { v79.slice(4, v26); } catch (e) {}
    class C81 {
    }
    let v82;
    try { v82 = C81(); } catch (e) {}
    v82?.hasOwnProperty;
    class C84 extends C81 {
        ["getPrototypeOf"] = C81;
    }
    const v85 = new C84();
    const t95 = v85.constructor;
    new t95();
    const t97 = v85.constructor;
    new t97();
    const v90 = new C84();
    const t100 = v90.constructor;
    new t100();
    const t102 = v90.getPrototypeOf;
    new t102();
    const v96 = BigUint64Array.of();
    try { v96.entries(); } catch (e) {}
    const v99 = Uint8Array.length;
    v99 + v99;
    const v101 = new C84();
    const v102 = v101.getPrototypeOf;
    const v103 = v102.toString();
    try { v103.italics(); } catch (e) {}
    const v105 = new v102();
    v105.getPrototypeOf % v102;
    const t113 = v101.getPrototypeOf;
    const v109 = new t113();
    v109.getPrototypeOf = v109;
    const v110 = new C84();
    v110.getPrototypeOf;
    let v112;
    try { v112 = f6(); } catch (e) {}
    try { v112.toString(); } catch (e) {}
    const v114 = v110.getPrototypeOf;
    let v115;
    try { v115 = v114(); } catch (e) {}
    const v116 = v115?.constructor;
    let v117;
    try { v117 = v116.call(v73); } catch (e) {}
    let v118;
    try { v118 = v117(); } catch (e) {}
    try { v118.__defineSetter__(v40); } catch (e) {}
    const v120 = v110.constructor;
    try { v120(F28, v61); } catch (e) {}
    for (const v123 of Array()) {
    }
}
new F28();
new F28();
