function F7(a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    const v12 = this?.valueOf;
    try { new v12(); } catch (e) {}
    a9.e = a9;
    try {
        this.a = -1097595727;
    } catch(e14) {
    }
    try {
        this.c = 4n;
    } catch(e15) {
    }
    try {
        this.g = a10;
    } catch(e16) {
    }
}
const v17 = new F7(F7, 4n, 8n);
const v18 = v17.length;
const v19 = new F7(59774n, 59774n, v17);
const v20 = new F7(v17, 8n, false);
v20.c = v20;
const v22 = new Map();
try { v22.set(v20, v22); } catch (e) {}
function f24(a25, a26, a27) {
    a25 & a25;
    a26++;
    a27.length;
    const o40 = {
        __proto__: v19,
        "g": a25,
        "c": v17,
        "d": Map,
        ...v22,
        "a": a27,
        "f": v22,
        "h": 4294967296,
        [F7](a32, a33) {
            typeof v19[v18.toPrimitive];
            "string" === "string";
            return a32;
        },
    };
    return o40;
}
function f43(a44) {
    const o45 = {
        ..."toStringTag",
    };
    return o45;
}
class C46 extends f43 {
    ["15036"];
}
let v47;
try { v47 = new v17(); } catch (e) {}
const v48 = new C46();
for (const v49 in v48) {
}
const v51 = f24(8n, -1073741824, f24(4n, -1073741824, v17));
v51.f = v51;
f24(59774n, -1073741824, v51);
try { Math.abs(v22); } catch (e) {}
v47.asin();
