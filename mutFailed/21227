const v3 = /(4)/gusy;
v3.d = v3;
const v4 = /a(?:b)+/gdmy;
v4.dotAll = v4;
const v5 = /z(?:a?)+/gvims;
v5.d = v5;
const t6 = "object";
t6.length = "object";
const t8 = "m";
t8.f = "m";
try { ("string").localeCompare("m"); } catch (e) {}
/(?<!)\P{Any}(ab|cde)\1Txyz{0,1}?/gudim;
const v11 = /\xed\xb0\x80\x01xyz?/ims;
const v12 = /wfoo(?<=bar)baz0?/dm;
try { v12.compile("string", "object"); } catch (e) {}
const v14 = /Wxyz{1,32}3Y/i;
let v15;
try { v15 = v14.toString(); } catch (e) {}
const v16 = /La*?/gimsy;
v16.sticky = v16;
const v17 = /OoJ+/uimsy;
let v18 = Map;
v18--;
const v20 = [-4.0,-1e-15];
try { v20.toSorted(v11); } catch (e) {}
v20.g = v20;
v20[2] = v20;
const v22 = [-7.264687027014153e+307];
function F23(a25, a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    try { a25.pop(); } catch (e) {}
    let v30;
    try { v30 = this.toString(); } catch (e) {}
    try { v30.toLocaleLowerCase(); } catch (e) {}
    a25 instanceof a26;
    this !== this;
    try { a27(a28, v18); } catch (e) {}
    delete this[v17];
    const v39 = a25?.__defineSetter__;
    v39.length;
    try { new v39(v22, v11); } catch (e) {}
    for (let v42 = 0; v42 < 25; v42++) {
        try { BigUint64Array.from(3375); } catch (e) {}
        const v46 = new BigUint64Array(3375);
        let [v47,,v48,...v49] = v46;
        v48 << v48;
        try { v49.entries(); } catch (e) {}
    }
    let v52;
    try { v52 = a25.unshift(a26); } catch (e) {}
    v52 & v52;
    v52 >>> v52;
    let v55;
    try { v55 = a25.toSpliced(); } catch (e) {}
    v55[1];
}
const v57 = new F23(v20);
const v58 = v57?.constructor;
try { new v58("object", "object", "string", v17); } catch (e) {}
function F60() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -65536;
    } catch(e63) {
    }
    try {
        this.b = -65536;
    } catch(e64) {
        ("object").length;
        -793809026n !== v12;
    }
    try {
        this.e = -65536;
        if (v4 > -65536) {
            v15?.[v14];
        } else {
            %VerifyType(v17);
        }
    } catch(e72) {
    }
}
const v73 = new F60();
const v74 = new F60();
new F60();
[4294967297,-9,-9007199254740990,-43006,4294967297,2147483649,-9007199254740990,7,536870888,-16];
[9];
const v78 = [256,9007199254740991,-2147483649,2];
class C79 {
    static e;
    16 = v78;
    e = F60;
    constructor(a81, a82) {
        try {
            a81.fuck(false, this);
        } catch(e85) {
        }
    }
}
const v86 = new C79(v74, v73);
const v88 = new WeakSet();
const v89 = v88[v86];
try { v89(); } catch (e) {}
const o91 = {
};
%VerifyType(Proxy());
function f94(a95) {
}
class C96 extends f94 {
}
const v97 = C96?.constructor;
try { new v97(f94); } catch (e) {}
