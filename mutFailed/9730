let v1 = -1.5734192343500078e+308;
class C3 {
    e = v1;
    #e = v1;
    static [-24831];
    #g = v1;
    o(a5) {
        const o8 = {
            "toStringTag": 16,
        };
        return v1;
        let v9 = [3.0,0.0,-737.846045465437,542.6100987040365,-228229.8872212969,5.0];
        [1.7976931348623157e+308,-1.7446387053264303,-1000000.0,113.60430537848993,0.19976540940858323,-63.319563591655424,-1000.0,-3.0,0.6746487438216927,-5.0];
        v9 = [-2.0,1000000000.0,-1.4392911880476923e+308,1.4751420364409203e+308,900.9990028056734,982.0811212705773,-2.7712659571278664,1.4698583134424781e+308,1.0,0.3016513453473393];
        const v13 = new ArrayBuffer(-16, o8);
        new DataView(v13);
        return -16;
    }
}
const v16 = new C3();
const v17 = new C3();
const v18 = new C3();
[v18,v17,"1whw"];
const v20 = [-24831];
try {
    const t25 = "1whw";
    t25.valueOf = v20;
} catch(e21) {
}
function F22(a24, a25, a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a27;
    } catch(e28) {
    }
    try {
        this.b = -24831;
    } catch(e29) {
    }
    try {
        this.e = a26;
    } catch(e30) {
    }
}
const v31 = new F22(v16, C3, v18, v20);
const v32 = new F22(v18, v17, v16, v31);
new F22(v18, v32, v18, C3);
[v16,C3,v1,v18];
v1 &= v1;
v20[v18] = -24831;
let v38;
try { v38 = v31.n(); } catch (e) {}
-2n >= -2n;
v38 %= -16n;
const v41 = new Int16Array();
const v44 = new Int8Array(1);
v41[v44] = v44;
