function f0() {
}
function f1() {
    return f0;
}
function f2(a3) {
    a3.g = a3;
    const v6 = /9f8\xf0\x9f\x92\xa9/diy["compile"]();
    v6.b = v6;
    return [601759695];
    const o8 = {
        "h": v6,
        [f0]: a3,
        10: f0,
        __proto__: a3,
        "d": f0,
        ...a3,
        "c": a3,
        [f1]: f1,
        ...a3,
        7: f1,
        "f": f1,
    };
    return o8;
}
f2.d = f2;
const v9 = f2(f1);
const v10 = f2(f1);
let v11;
try { v11 = v10.some(f0); } catch (e) {}
const v12 = f2(f2);
const v13 = [v10,v9,f1,v9];
const v14 = [v10,f2,v9,v13,f1];
const v15 = [v14,v14,f2,v12];
const v17 = new WeakSet();
class C18 {
}
const v19 = new C18();
const v20 = v19?.constructor;
try { new v20(); } catch (e) {}
const v22 = new C18();
const v23 = v22?.__defineGetter__;
try { new v23(f2, v9); } catch (e) {}
const v25 = new C18();
function f26(a27, a28) {
    const v29 = [];
    const v30 = [v29,v29,v29,v29];
    v30[1];
    const v32 = [v30,v30,v30];
    -4;
    const v37 = v15.reject(C18);
    0.29489550717955537 + 0.29489550717955537;
    const v41 = new Uint32Array(v37, 36002, 4);
    v41[0.29489550717955537];
    const o43 = {
        __proto__: a27,
    };
    const v44 = o43?.__defineSetter__;
    try { new v44(v13, v13); } catch (e) {}
    const v47 = ("by").normalize();
    try { v47.anchor(v32); } catch (e) {}
    function f49() {
        4087 === v13;
        const v53 = Array(4087);
        const v54 = v53?.__defineSetter__;
        try { new v54(Array, v19); } catch (e) {}
        for (const v56 of v53) {
        }
        return f49;
    }
    f49();
    return v19;
}
f26(v19);
const v59 = f26(v22);
const v60 = f26(v25);
try { v60.propertyIsEnumerable(v9); } catch (e) {}
try { v59["n"](); } catch (e) {}
-63523 >= 127;
const v67 = f2 ? -63523 : 127;
v67 + v67;
const v70 = -(-63523);
const v71 = [0.021647043302781555,982.9822277058386,68.55386187204931,-3.6548181863708407e+307,0.20797002453168356,1000000.0,-569469.7761417266,-3.877892592640821,Infinity,5.0];
try { v71.entries(); } catch (e) {}
v71.toLocaleString();
try { v11.localeCompare(v17); } catch (e) {}
127 >>> 2534;
new Float64Array(2534);
Math.asinh(v70);
Math.acosh();
