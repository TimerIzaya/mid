class C3 {
    static c;
    h;
    static set f(a5) {
        a5.e &&= -15;
        a5?.[this];
    }
    static [-2] = -536870912;
    static toString(a8, a9) {
        try {
            super.n(a8, a8);
        } catch(e11) {
        }
        try {
            this.__proto__ = this;
        } catch(e12) {
        }
        return -15;
    }
}
const v13 = new C3();
const v14 = v13?.constructor;
let v15;
try { v15 = new v14(); } catch (e) {}
const v16 = new C3();
const v17 = new v15();
v17.h = v17;
class C18 extends C3 {
    valueOf(a20, a21, a22) {
        let v23;
        try { v23 = this.filter(v16, a20); } catch (e) {}
        a22 >> v23;
        return this;
    }
    #b;
    o(a26, a27, a28) {
        async function f29(a30, a31) {
            const o32 = {
            };
            try {
                o32.e = a30;
            } catch(e33) {
            }
            try {
                const o34 = {
                };
                o34.e = a30;
                o34.c = C3;
            } catch(e35) {
            }
            try {
                const o36 = {
                };
                o36.e = a30;
                o36.c = C3;
                o36.b = -15;
            } catch(e37) {
            }
            try {
                const o38 = {
                };
                o38.e = a30;
                o38.c = C3;
                o38.b = a28;
            } catch(e39) {
            }
            await C3;
            return a31;
        }
        f29(a28, 213696563);
        return C3;
    }
}
C18.name;
new C18();
new C18();
new v13();
new Int32Array(312);
new Uint8Array(5);
try { Uint16Array(312, 312, v13); } catch (e) {}
new Uint16Array(2199);
try { gc(); } catch (e) {}
const v59 = v14.valueOf();
try { v59.link(Int32Array); } catch (e) {}
v59.split(v59)[1];
