function f0() {
    const o10 = {
        get b() {
            const v5 = super[this];
            try {
                const t5 = "3";
                t5.a = v5;
            } catch(e9) {
            }
            return "fromCodePoint";
        },
    };
    return o10;
}
f0();
f0();
f0();
const v16 = new Uint8Array(129);
/Mrn(?:a*)+IhCO/udimsy.__proto__;
function f20() {
    function f22(a23, a24, a25, a26) {
        a23.BYTES_PER_ELEMENT = a23;
    }
    for (let v27 = 0; v27 < 5; v27++) {
        f22(Uint8Array);
    }
}
new Int8Array(46);
new Uint8Array(v16);
class C36 {
}
function F37(a39, a40, a41, a42) {
    if (!new.target) { throw 'must be called with new'; }
    const v43 = this?.constructor;
    try { new v43(Date, Date, a39, Date); } catch (e) {}
    a40[2147483648] = a40;
    a42[2147483648] = a42;
    try {
        this.h = a40;
    } catch(e45) {
    }
    try {
        this.d = C36;
    } catch(e46) {
    }
}
new Float64Array(3106);
function f49() {
    const o73 = {
        "c": 3106,
        "has": Date,
        m() {
            Math.log1p(2.220446049250313e-16);
            for (let i57 = 129; i57 < 10;) {
            }
            const v65 = new Uint8Array(Uint8Array, Uint8Array);
            v65[Math.atan2(-988.8649474800335, 10000)] = 10000;
            const o71 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o71);
        },
        __proto__: 2,
        ...2,
    };
    const v74 = new Uint16Array(o73, 2, 2);
    v74[Symbol.toPrimitive] = f0;
    v74[1] = v74;
    return 2;
}
const v79 = new BigInt64Array(218);
v79.sort(f49);
