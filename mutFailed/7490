function f2() {
    return "28j";
}
function f3(a4) {
    const v5 = [-1073741824,2147483648,9];
    [1438332090,-15,128];
    [65536,1112929699,7,268435440,-886259494,268435456,20210466,-13];
    return v5;
}
f2.constructor = f3;
f2.constructor;
const o14 = {
    210: "valueOf",
    ..."replace",
    get c() {
        super[this] = -4.0;
    },
    12: "replace",
};
new Int32Array(2913);
("28j").constructor;
new Float64Array(257);
const v21 = [2.220446049250313e-16,-Infinity,NaN,-1e-15,-4.0,-2.2250738585072014e-308,-742.8087895557678,-4.0,Infinity,655658.0990783614];
function f22(a23, a24) {
    d = o14;
    const o25 = {
    };
    return o25;
}
v21[Symbol.toPrimitive] = f22;
parseInt(v21);
const o31 = {
};
const v33 = 6.221456434799227e+306 << 6.221456434799227e+306;
Date[Symbol.iterator] = f2;
new Uint8ClampedArray(Date);
const v39 = new Int16Array(129);
v39.dotAll = v39;
const v41 = new Float32Array(v33);
const v44 = new Int32Array(8);
v44.set(v41);
new Int32Array(16);
for (let i53 = 0, i54 = 10;
    (() => {
        for (let [i60, i61] = (() => {
                /Aabc|defmxyz{1,}?qMa{0,1}?/gvdis.exec("function");
                return [0, 10];
            })();
            i60 < i60;
            ) {
        }
        return i53 < i54;
    })();
    i53++) {
}
Symbol.keyFor(Symbol());
