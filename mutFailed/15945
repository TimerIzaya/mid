const v0 = [-65535,257,2,12,3,57631,4294967297,1192354579];
[-65535];
const v2 = [7,1600573703,815917831,536870889,1073741824,4294967295,-59177,1665429516];
let v4 = -9223372036854775808n;
v4 %= 45725n;
Math.atan2(-0.0, 2.0);
class C12 {
    #e;
    static set c(a14) {
        try {
            v2.some(a14);
            if (C12) {
                let v17 = 4;
                const o20 = {
                    "type": "function",
                };
                function f21() {
                    return o20;
                }
                const o23 = {
                    "type": "function",
                };
                new Worker(f21, o23);
                -Infinity;
                let v26 = --v17;
                Math.clz32(-37590);
                const v28 = v26++;
                class C30 extends Date {
                }
                new C30();
                function f32(a33) {
                    return arguments;
                }
                ++v26;
                -37590 + (v28 - -37590);
            } else {
            }
        } catch(e39) {
        }
    }
    static [-37590] = v0;
    [-37590];
    #g = v2;
}
const o42 = {
    "maxByteLength": 10000,
};
const v44 = new ArrayBuffer(3471, o42);
new Uint8Array(v44);
const v47 = new C12();
let v48 = new C12();
new C12();
try {
    new C12();
} catch(e51) {
}
delete C12[v47];
v2[3] = -37590;
v47.b;
let v58 = -1.0;
const v59 = --v48;
++v48;
const v61 = ++v58;
-v58;
const v63 = (-1) ** v61;
([1073741824,1073741823,1376142744,1073741825]).forEach(Math);
function f66(a67, a68, a69, a70) {
    function f72(a73) {
        return arguments;
    }
    Object.defineProperty(arguments, "toString", { enumerable: true, value: f72 });
    arguments.toString(a68, f66, f66);
    function f75() {
        let v76 = -268435456;
        const v77 = v76--;
        v77 << v77;
        return f66;
    }
    f75();
    return arguments;
}
v59 ** v63;
1024 % 1024;
const v82 = new Uint32Array(4096);
v82[6] = 35.31700069890553;
