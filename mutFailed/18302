const v3 = [1277201898n,32360n];
let v4;
try { v4 = v3.groupToMap(32360n); } catch (e) {}
const v5 = [1277201898n,32360n];
const v6 = [v5,v3,v5];
[1e-15,466564.6713604734];
[1.7976931348623157e+308,2.2250738585072014e-308];
try { v4.lastIndexOf(v6); } catch (e) {}
const v10 = [-3.0,-0.0,-0.16457892349736447,8.845134314803681e+307];
function f11() {
    return 32360n;
}
Int8Array.name;
const v18 = new Int8Array(16);
v18[0];
new v10(4096);
v4.name;
new Int16Array(16);
function f27(a28, a29) {
    function f30(a31) {
        function F32() {
            if (!new.target) { throw 'must be called with new'; }
        }
        return F32;
    }
    a28[Symbol.toPrimitive] = f30;
    const o41 = {
        __proto__: a28,
        "a": a29,
        "f": "7",
        "e": -1424307078n,
        "g": a28,
        "h": a28,
        p(a37, a38) {
            48752008 ^ this;
            return this;
        },
    };
    o41.b = Symbol;
    return o41;
}
const v42 = f27(f27);
v42.b = v42;
try { v42.p(); } catch (e) {}
