const v2 = new Uint8Array(64);
const v5 = new Uint32Array(3);
const v8 = new Int8Array(10);
class C9 extends Uint32Array {
    set e(a11) {
    }
    #toString(a13, a14, a15) {
        super[Int8Array] = 64;
        const v16 = [v8,a15,a13];
        12204n <= -16;
        const v20 = [0.5690334337241484,-1.0,-Infinity,-6.831251836501173,-5.039519767346096,-2.0,0.6826335106801482,1000000000000.0];
        try { v20(); } catch (e) {}
        [v16,this,v5,v5];
        new WeakMap();
        class C26 {
            b = "c";
            static #h;
            268435439;
            static #c;
        }
        [-788.7260290236088,C26];
        [v5,v8,a13,10];
        [2069578788,-45525,-9007199254740991,9,1];
        [9007199254740991,512,65537,-4096,7,-1332880888,1024,256];
        [20605,1,-65536];
        try { a14(a15, a15, ...v5, 10, ...a13); } catch (e) {}
        ~a14;
        v5.byteOffset;
        function f36() {
            function f37(a38, a39) {
                a39(f37);
                return f37;
            }
            new Promise(f37);
            return Promise;
        }
        %PrepareFunctionForOptimization(f36);
        return this;
    }
    constructor(a44, a45) {
        super(a45, a45, 64);
        let v47 = this["toReversed"](a44, Uint32Array, ...v5, ..."toReversed", ..."toReversed", ...this);
        function f48(a49, a50) {
            v47 = Uint32Array;
            return a50;
        }
        f48(v5, 10);
    }
}
const v52 = new C9(10, 3);
const v54 = Math.__defineSetter__;
try { v54(); } catch (e) {}
const v60 = v2[10];
let v61;
try { v61 = v60(7, 7, 4); } catch (e) {}
function F62(a64, a65) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = 256;
    } catch(e66) {
    }
}
try { v61(256, 7, Float32Array, F62); } catch (e) {}
const v68 = new F62(7, 7);
function F69(a71, a72) {
    if (!new.target) { throw 'must be called with new'; }
}
F69(F69, v68);
new C9(v52, 3);
const v76 = new Date();
v76.toLocaleDateString();
([5]).fill;
new C9(Uint32Array, 64);
const v84 = [-6.672391061426152e+307];
try { DataView.call(DataView); } catch (e) {}
function f87() {
    ("undefined").localeCompare("undefined");
    65537 < 4096n;
    -(~v84["pop"]());
    return DataView;
}
%PrepareFunctionForOptimization(f87);
f87();
%OptimizeFunctionOnNextCall(f87);
f87();
