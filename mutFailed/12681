const v0 = [268435456,-128,-9223372036854775807,-1,1234071697];
const v1 = [-1,-2147483648,4294967295,615796870,-6523,8,536870889];
const v2 = [-14,6,1780629901,-65536,4294967297,1,1073741823,1];
const v6 = [-4.471918964526685,-2.220446049250313e-16];
const v7 = [-1.7976931348623157e+308,5.0,-1.7976931348623157e+308,1.7976931348623157e+308,0.05520706464111702,1e-15,756547.3676886663];
const v8 = [-525.2586143117778,-9.898836048144524,-1000000.0,0.0,-453.3094610989783,8.841728715512499];
[v1,v6,-7,v0,v6];
const v11 = [v2,0,v7,[v1,v8,v7],v6];
function f12() {
    function F13(a15) {
        if (!new.target) { throw 'must be called with new'; }
        const v16 = this.constructor;
        const v17 = v16.bind(F13, F13, F13, F13);
        let v18;
        try { v18 = v17(v17, F13, f12, f12, a15); } catch (e) {}
        v0[v1] = v18;
        try { v11.map(v17); } catch (e) {}
        v11.length ^= -7;
        let v20;
        try { v20 = v8.toSpliced(v17, -7); } catch (e) {}
        for (let v21 = 0; v21 < 32; v21++) {
            v20["p" + v21] = v21;
        }
        try { new v16(); } catch (e) {}
    }
    new F13();
}
const v26 = [f12];
const v27 = [v26];
const v28 = [v26,f12,v26];
new BigInt64Array(3444);
class C33 {
}
new C33();
const v36 = [];
function f37() {
    const o38 = {
        __proto__: v36,
    };
}
new Uint8Array();
new Uint8ClampedArray();
const v44 = new Date();
const v46 = new BigUint64Array();
v46[v44] = v44;
f12(BigInt64Array, f12, ...v27, 3444, 1024, ...v28);
f12();
f12();
[0.9830880735406903,-0.6660198851192867,729.1589343121786,6.490727458123557e+307,-1.2538779643386477e+308,-1000000000.0];
[638.8226705123661,3.0,-2.2250738585072014e-308,771474.4832247959,816263.8956170448,2.220446049250313e-16,5.0];
const v52 = [8.944191192251868,-1.4998894798282654e+308,4.0,-0.0,-1000000000000.0,-5.0,-2.220446049250313e-16];
[-5.83623517593701,-1.0,-1e-15];
[692.912813481568,126686.58689393173];
function f56(a57, a58) {
    const o62 = {
        [a57](a60, a61) {
        },
    };
}
const v63 = f56(v52, 128);
/j(x)(x)(x)\2/gud;
/[\0](?:ab|cde)/vimsy;
/^xxx$/uisy;
try { v63.p(); } catch (e) {}
