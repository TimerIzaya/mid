const v0 = [];
class C1 {
    static #valueOf() {
        let v3;
        try { v3 = new this(this); } catch (e) {}
        v0[389041133] = this;
        for (let v4 = 0; v4 < 32; v4++) {
            const v6 = "p" + v4;
            delete v0?.length;
            %VerifyType(-268435456);
            v3[v6] = v4;
            const o15 = {
                "execution": "sync",
                "type": "major",
            };
            gc(o15);
        }
        return v0;
    }
}
let v17 = new C1();
const v18 = new C1();
for (let i20 = 0;
    (() => {
        let v22;
        try { v22 = v17.UTC(i20); } catch (e) {}
        let v24 = 1000;
        --C1;
        -1048747118 && C1;
        v22 || C1;
        Math.cosh(C1);
        v24--;
        Math.sign(-1048747118);
        v24--;
        return i20 < 6;
    })();
    (() => {
        i20++ <= C1;
        ({"f":v17,} = v18);
        v17 ^= C1;
        new Int16Array(2);
        new Uint8ClampedArray(7);
        new Uint32Array(0);
    })()) {
    try {
        v0.length = i20;
    } catch(e47) {
    }
}
const v48 = new C1();
function f49() {
    return v0;
}
[v48,v17,v17,v48];
[v18,C1];
[v0,v18,v48];
async function f56(a57, a58, a59) {
    return a57;
}
const t59 = f56.constructor;
t59();
