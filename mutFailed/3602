class C3 {
    c = 1073741824;
    static o(a5, a6) {
        for (let v7 = 0; v7 < 32; v7++) {
            this["p" + v7] = v7;
        }
        let v10;
        try { v10 = this.every(51538, this, a5); } catch (e) {}
        const o11 = {
        };
        try {
            o11.g = v10;
        } catch(e12) {
        }
        try {
            const o13 = {
            };
            o13.g = v10;
            o13.f = 1073741824;
        } catch(e14) {
        }
        try {
            const o15 = {
            };
            o15.g = v10;
            o15.f = 1073741824;
            o15.h = v10;
        } catch(e16) {
        }
        try {
            const o17 = {
            };
            o17.g = v10;
            o17.f = 1073741824;
            o17.h = 51538;
        } catch(e18) {
        }
        return o11;
    }
}
C3.length = C3;
const v19 = new C3();
const v20 = new C3();
const v21 = v20.c;
const v22 = new C3();
2350 >> 2350;
try { new Int16Array(C3, v22, 13); } catch (e) {}
let v27;
try { v27 = new Int16Array(v22, v19, C3); } catch (e) {}
try { v27.join(v19); } catch (e) {}
new Int16Array(2350);
1062 + 1062;
1062 ^ 1062;
BigInt64Array.BYTES_PER_ELEMENT = BigInt64Array;
new BigInt64Array(1062);
new Int32Array(1024);
try { ("31248").strike(); } catch (e) {}
try { ("string").concat(v21); } catch (e) {}
128 & 128;
class C47 {
}
const v48 = new C47();
const v49 = v48?.constructor;
let v50;
try { v50 = new v49(); } catch (e) {}
try { v50.propertyIsEnumerable(1062); } catch (e) {}
class C52 {
    static #e;
    static {
        try {
            v48.#e = this;
        } catch(e54) {
            e54.h = e54;
            let v55;
            try { v55 = e54.toString(); } catch (e) {}
            v55[36] = v55;
        }
    }
    static n(a57, a58, a59) {
        v48.#e;
    }
}
C52.g = C52;
try { new C52(); } catch (e) {}
const v64 = 2147483648 - 2147483648;
v64 >>> v64;
