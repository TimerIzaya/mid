const v2 = new Int16Array(1024);
new Uint16Array(10);
const v8 = new Float32Array(2051);
const v12 = [-53613,268435440,268435440,2,-65536,-2147483647];
const v13 = [8];
const v14 = [-1024,-2147483647,-37738,-2,21596,2147483649,9007199254740992,-2039218916];
class C15 {
    m(a17, a18) {
        v2.byteOffset >>>= -9007199254740991;
        return 2.220446049250313e-16;
    }
    static #f;
    static set f(a23) {
        a23(this, this, a23, v13);
    }
    constructor(a26, a27, a28) {
        a28 ||= this[146];
        a28 ^= v2;
    }
    /*
    constructor(a31) {
        this.e = v13;
        try { a31(C15, -1073741824); } catch (e) {}
        const o35 = {
            "maxByteLength": 1993,
        };
        const v37 = new SharedArrayBuffer(3, o35);
        new BigUint64Array(v37);
    }
    */
}
new v8(v13);
new C15(v14);
const v42 = new C15(v14);
let v45;
try { v45 = v42.reduceRight(4294967295, v14, C15); } catch (e) {}
v14[6] ||= -10;
function f46(a47, a48, a49, a50) {
    const v51 = v13 in a47;
    try { v45(...v13, ...v12, v14, ...v51); } catch (e) {}
    return f46;
}
f46();
