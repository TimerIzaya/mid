let v1 = -1942854513;
class C3 {
    static set a(a5) {
        Reflect.construct(C3, [Reflect,Reflect,35163], a5);
    }
    constructor(a10) {
        [35163,-5.0,this,[v1,[v1 &= a10],35163,this,v1]];
    }
    static #h;
}
const v14 = new C3(-5.0);
const v15 = new C3(v1);
const v16 = new C3(C3);
function F17(a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = C3;
    } catch(e21) {
        function F22(a24, a25) {
            if (!new.target) { throw 'must be called with new'; }
            const v26 = this.constructor;
            try { new v26(v26); } catch (e) {}
        }
        e21.constructor;
    }
    try {
        this.b = a20;
    } catch(e29) {
    }
}
const v30 = new F17(C3, v16);
const v31 = new F17(v14, v30);
const v32 = new F17(v30, v31);
function F33(a35, a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a36;
        let v38;
        try { v38 = v15.expm1(-5.0, this, this, a37, F33); } catch (e) {}
        v15[v31] += v38;
        v30.d %= v38;
        try {
            const o41 = {
            };
            v15.fuck("1473178240", "c", o41);
        } catch(e43) {
            class C44 {
                constructor(a46, a47, a48) {
                    for (let v49 = 0; v49 < 5; v49++) {
                        function f51() {
                            const o59 = {
                                [a35](a53, a54, a55, a56) {
                                    eval(C44);
                                },
                            };
                            return f51;
                        }
                        f51();
                        %OptimizeFunctionOnNextCall(f51);
                    }
                }
            }
        }
    } catch(e61) {
        a35 + C3;
        v16.__proto__;
        try { a37.o(a37, v1, v32); } catch (e) {}
        const o66 = {
        };
        new Proxy(v31, o66);
    }
}
new F33(v31, v32, v31);
new v1(v15, v15, v31);
const v73 = Array(19793);
[[v73,v73,v73,v73],v1];
new F33(v14, v30, v32);
const o77 = {
};
function F78(a80, a81, a82, a83) {
    if (!new.target) { throw 'must be called with new'; }
    for (let v87 = 0; v87 < 100; v87++) {
        const o91 = {
            968: undefined,
            [268435439n]: 2105444095n,
            __proto__: a82,
            "g": a83,
            "b": v87,
            "f": this,
            valueOf(a90) {
                return v1;
            },
        };
    }
}
const v92 = new C3();
const v93 = new F78();
new F78(v93, F78, v92, v93);
