const v0 = [];
class C2 extends Int32Array {
}
function f3() {
    -1781241988 > -1781241988;
    const o15 = {
        "e": -1781241988,
        8: -1781241988,
        "c": -1781241988,
        ..."g",
        ..."g",
        [1](a9, a10) {
            Object.defineProperty("n", "d", { writable: true, value: "n" });
            let v14;
            try { v14 = ("construct").concat(f3, Uint8ClampedArray, this); } catch (e) {}
            v14["n"] = Uint8ClampedArray;
        },
    };
    return o15;
}
function F17(a19, a20, a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    a19.propertyIsEnumerable();
}
const v24 = [10,-9007199254740991,512,7];
function f25(a26) {
    const o27 = {
        ...v24,
    };
    return f25;
}
new Uint32Array(26);
function f30(a31, a32, a33) {
    ~a33;
    const o35 = {
        "e": v0,
        4: Uint32Array,
    };
    return o35;
}
try { f30(f25, Int32Array, f25); } catch (e) {}
const v37 = f30(v24, Int32Array, 26);
function f38(a39, a40) {
    const v41 = [-0.23549034038133065];
    async function f42(a43, a44, a45, a46) {
        return await v41;
    }
    f42();
    return F17;
}
v37[Symbol.toPrimitive] = f38;
const v52 = f30(F17, Uint32Array, f30(C2, v37, v37));
const v55 = new Uint32Array(2719);
const v57 = new Date();
v57.toLocaleDateString(Date);
class C62 {
    4;
    constructor() {
        function f64(a65) {
            -2147483648 ^ 8.868704382732872e+307;
            return this;
        }
        this.valueOf = f64;
        this[2658944561];
        super.f >>= this;
    }
    b = -2.2250738585072014e-308;
    n(a71, a72) {
    }
    2658944561 = -2.2250738585072014e-308;
    static 134;
    #c = -65535;
    static [-2.2250738585072014e-308] = -2.2250738585072014e-308;
    toString(a74, a75, a76, a77) {
        try {
            f3();
        } catch(e79) {
        }
        return -65535;
    }
}
const v80 = new C62(2142097854, -2.2250738585072014e-308);
new C62(-2.2250738585072014e-308, v80);
Int8Array.BYTES_PER_ELEMENT = Int8Array;
const v84 = new Int8Array(1363);
try { v84.reduce(26); } catch (e) {}
function f86(a87, a88, a89, a90) {
    a90.prototype = a90;
    const o103 = {
        [2719]: v55,
        "a": a90,
        ...v84,
        get g() {
            v80.constructor;
            const o97 = {
                "h": true,
                ...true,
                get c() {
                    return this;
                },
                set d(a96) {
                },
                "d": true,
            };
            a88 = a87;
            const v99 = (v84 | 1363) - a87;
            try { a90(a87, a87, v99, v99, a90); } catch (e) {}
            a90[1363] /= v99;
            const v102 = Symbol.split;
            a90[v102] = Int8Array;
            return v102;
        },
        __proto__: v24,
    };
    o103.prototype = a88;
    return o103;
}
f86(1363, 1363, 1363, Int8Array);
const v105 = f86(1363, 2719, 26, v0);
v105.prototype = v105;
v105[2] = v105;
const v106 = f86(2719, 2719, 2719, v105);
v106[2] = v106;
class C107 {
}
const v108 = new C107();
Object.defineProperty(v108, Symbol.toPrimitive, { value: f30 });
try { v108.propertyIsEnumerable(Date); } catch (e) {}
const v112 = `match${v108}-20124`;
try { v37.getOwnPropertyNames(1363, f86, Int8Array); } catch (e) {}
try {
    v52.toString = f86;
} catch(e114) {
}
for (const v115 of v112) {
    class C116 {
    }
    const v117 = new C116();
    function f118() {
        function f119(a120) {
            return a120;
        }
        return f119;
    }
    Object.defineProperty(v117, "constructor", { enumerable: true, get: f118 });
    const v124 = v117?.constructor;
    try { new v124(); } catch (e) {}
    this.__proto__ = v117;
    const o128 = {
        get h() {
        },
    };
    function F129(a131, a132, a133) {
        if (!new.target) { throw 'must be called with new'; }
        const v134 = this.constructor;
        try { new v134(); } catch (e) {}
        o128.h = o128;
        try {
            this << o128;
            [-0.0,0.35331453774891175,0.0,171.67492280642023,0.015915737133018082,-390268.7701156768,-1000000000000.0,-0.0,5.0,-2.220446049250313e-16];
            const v138 = [607.0076449847468,-818.8860494127688];
            v138[0];
            v138[2];
            v138[3];
        } catch(e142) {
        }
    }
}
