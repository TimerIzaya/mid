class C3 {
    static set b(a5) {
        super.g *= a5;
        [9,-9007199254740990,256,2065399794];
        [-488325438,9007199254740992,-2,402178753,19402495];
        [23812,2147483649,-7761,13,536870887,2147483648,4096,-1741711346];
    }
    static get a() {
        let v10;
        try {
        const t0 = -4;
        v10 = new t0(-4, 2147483648);
        } catch (e) {}
        function f11(a12) {
            let v13;
            try { v13 = this.valueOf(2147483648, a12, v10, this); } catch (e) {}
            v13[45] &= 2147483648;
            a12 += f11;
            return this;
        }
        return f11(2147483648);
    }
}
new C3();
const v16 = new C3();
new C3();
[-216140.2054118677,-727563.6020025802,1000.0,5.953022119720803,-0.0,2.0,-1.102909869976442e+308,-470444.68240127095,-649.4224325425898,Infinity];
[7.57125960452948,1000000000000.0,-1.7976931348623157e+308,7.263662152827505e+307];
[1.227253016925315e+308,1000.0];
new v16(7);
function f37() {
}
function f38() {
    const o56 = {
        valueOf() {
            try {
                for (let v43 = 0; v43 < 10; v43++) {
                    with ([4294967297,-1648241970,9,3,-2,0,-4294967296,10]) {
                        length | length;
                    }
                    function F50(a52) {
                        if (!new.target) { throw 'must be called with new'; }
                        (2147483648).b;
                    }
                    new F50();
                }
                this.valueOf = f37;
            } catch(e55) {
            }
        },
    };
    return o56;
}
const v57 = f38();
f38();
function F64(a66, a67) {
    if (!new.target) { throw 'must be called with new'; }
    a66.valueOf();
    const v69 = this.constructor;
    try { new v69(a66); } catch (e) {}
}
new F64(-22872n);
new F64(v57);
