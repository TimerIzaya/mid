function F4(a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -9007199254740991n;
    } catch(e8) {
    }
    try {
        this.e = a7;
    } catch(e9) {
    }
    try {
        try { Reflect.set(); } catch (e) {}
        this.g = 1751097824n;
    } catch(e12) {
    }
}
const v13 = new F4(1751097824n, 7n);
new F4(7n, 7n);
const v15 = new F4(v13, 1751097824n);
new Map();
const v18 = [-Infinity,-9.561006595467143,-3.0,-3.799690775513274e+307,3.0,0.4266791832312069,-1e-15,-696.548157201736,0.982541855096097,-1.0];
[-3.0,965.67851583783,2.0,0.03734702067160245,762938.8065455109,524721.709622541];
const v20 = [1000000000000.0,-1000.0,0.587088746147587,1000000.0,5.3098649392109,-1000.0,0.22723133964417863,0.5575123309219886];
const v21 = [F4,v20,null];
[v20,-9007199254740991n,v21];
[v21];
class C25 {
    static {
        for (let v27 = 0; v27 < 25; v27++) {
            Math.cosh(Math);
            for (let v30 = 0; v30 < 5; v30++) {
                v18.unshift(3);
            }
            function f33() {
                return C25;
            }
            const v34 = [601759695];
            const v35 = [1073741824,1073741823,1376142744,1073741825];
            function f37() {
                return f37;
            }
            const v38 = /[r(?<!)]/uim;
            const o44 = {
                set a(a40) {
                    let v39 = this;
                    [-910865.3408997525,626.3279856071824,-234.8554751364569];
                    [-3.0,5.0,0.030403066145865854,-2.2250738585072014e-308,-1e-15];
                    const t45 = [0.0,-2.0,-4.4315495470280674e+307,2.220446049250313e-16,1.176246364365651e+307,-6.320855532259336e+307,2.0];
                    t45[6] = v38;
                    v39 = v15;
                },
                "e": v38,
                "d": this,
                ...C25,
                "a": C25,
            };
            function f45(a46, a47, a48, a49) {
                function f51() {
                    class C52 {
                    }
                    function f53() {
                        return C52;
                    }
                    return a46;
                }
                const v54 = f33();
                const v56 = new Int8Array();
                arguments.constructor;
                const v60 = [1000000.0,4.0,877990.5497759602,-506457.5906391711,1.5877136832764825e+308,-5.0,0.37988723353754195];
                class C62 {
                    #valueOf(a64, a65) {
                    }
                    static #a = v21;
                    #g = 536870887n;
                    static #f = v60;
                    #b;
                }
                const v67 = new Uint32Array(4);
                const v68 = [v67];
                const v71 = BigUint64Array * 536870887;
                v71 ** v71;
                function f73(a74, a75) {
                    return v54;
                }
                f73();
                const v77 = v56.buffer;
                Object.defineProperty(v77, "constructor", { writable: true, configurable: true, value: Date });
                new Int8Array();
                v77.slice(2147483648);
                %OptimizeFunctionOnNextCall(f51);
                let v82;
                try { v82 = v35["find"](..."find", a49, ...v34, ...v35, ...522675525n); } catch (e) {}
                const v84 = Symbol("find");
                const v86 = new BigUint64Array();
                const o94 = {
                    __proto__: v68,
                    [v38](a88) {
                    },
                    toString(a90, a91, a92) {
                        a46[v84] = BigUint64Array;
                        return 255n;
                    },
                    ...v86,
                };
                v82 <= a48;
                return arguments;
            }
            [];
            -1073741824 - -1073741824;
            Math.E = Math;
            const v104 = Math.round();
            for (let v105 = 0; v105 < 10; v105++) {
                v105 / v105;
                async function f107(a108, a109, a110) {
                    a110 >>> a110;
                    Number.isNaN(await v104);
                    const v116 = [0.8307152163010869,1.0,0.0];
                    v116[2] = v116;
                    v116.length = v105;
                    %VerifyType(v116 instanceof -24894);
                    return f107;
                }
                try { f107(-788.7260290236088, -1000000000.0, -1000000000.0); } catch (e) {}
                const v119 = f107(Math, "b", v104);
                try { v119.hasOwnProperty(-788.7260290236088); } catch (e) {}
            }
            let v123 = Symbol;
            const v124 = v123.toPrimitive;
            Math.log10();
            Array();
            new Uint32Array(127);
            new Uint8Array();
            let v138 = -8;
            let v139 = 48510;
            let v140 = 1073741823;
            class C141 {
                4259938026;
            }
            const v142 = new C141();
            ({"a":v139,"b":v123,"c":v138,...v140} = v142);
            new Int16Array(2690);
            new Uint16Array(16);
            function F148(a150, a151, a152) {
                if (!new.target) { throw 'must be called with new'; }
                class C153 {
                }
                const v155 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
                function F157() {
                    if (!new.target) { throw 'must be called with new'; }
                }
                function F159(a161) {
                    if (!new.target) { throw 'must be called with new'; }
                }
                const v162 = new F159();
                class C163 extends F157 {
                }
                class C164 {
                }
                const v165 = new C164();
                function F166(a168, a169) {
                    if (!new.target) { throw 'must be called with new'; }
                    const v170 = [a169,a169,a169,a169,a169];
                    class C171 {
                        constructor(a173, a174, a175) {
                            function f176(a177, a178, a179) {
                                v170.copyWithin();
                                let v182 = 0;
                                for (let i = 0; i < 25; i++) {
                                    try {
                                        const o183 = {
                                        };
                                        o183.c = C163;
                                    } catch(e184) {
                                    }
                                    try {
                                        const o185 = {
                                        };
                                        o185.h = v162;
                                        o185.f = v165;
                                    } catch(e186) {
                                    }
                                    v182++;
                                }
                                try {
                                    f176(a174, a175, [-268435456]);
                                } catch(e190) {
                                }
                                this >> -268435456;
                                return -268435456;
                            }
                            f176();
                        }
                    }
                    class C193 extends C171 {
                    }
                    new C193();
                }
                new F166();
                const o201 = {
                    "e": 16,
                    ...v155,
                    ..."Vre",
                    "c": v124,
                    "f": "-1073741824",
                    84: arguments,
                    ..."Vre",
                    valueOf(a199, a200) {
                        return this;
                    },
                    ..."Vre",
                    4: "Vre",
                    "c": -268435456,
                    5: 16,
                    6: -268435456,
                };
            }
            new String();
            [-536870912,12,65535,268435440,59916,438058862,-15,1073741823,-9007199254740990];
            const v207 = new F148();
            function F208(a210, a211) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    class C213 extends [this,this,this,this,this] {
                    }
                } catch(e214) {
                }
            }
            new F148(F148, F148, v207);
            for (let v217 = 0; v217 < 5; v217++) {
                v207 || undefined;
            }
            for (let v219 = 0; v219 < 5; v219++) {
                f45(this, v219, v219, v219, f33);
            }
        }
    }
}
