let v3 = 4;
const v4 = v3--;
new Float32Array(v3);
v4 >> 3;
new Uint32Array(3);
let v13 = new Uint32Array(144);
4046 === 4046;
let v21;
try { v21 = new BigInt64Array(Uint32Array, BigInt64Array, BigInt64Array); } catch (e) {}
const v22 = new BigInt64Array(4046);
115 != 115;
function f26(a27, a28) {
    v13++;
    a27++;
    let o32 = {
        "d": a27,
        ...a27,
        get e() {
            return a28;
        },
    };
    [,...o32] = v22;
    const v33 = a28[4046];
    const o36 = {
        "maxByteLength": 3035,
    };
    const v38 = new v33();
    v38.d = v38;
    const v40 = new Float32Array();
    try { v40.reduceRight(o36); } catch (e) {}
    return 115;
}
f26(4046, 3768);
v21(4046, 4046);
try { new Uint8ClampedArray(41081, 4046, -290057152); } catch (e) {}
