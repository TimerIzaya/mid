new Int32Array(9);
new Uint8Array(6);
const v11 = new Float32Array(295);
v11 - Uint8Array;
function F20(a22, a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    function f26() {
        return F20;
    }
    class C27 extends f26 {
        constructor(a29) {
            const t11 = "of";
            t11[+this] = f26;
            let {"b":v31,"c":v32,"d":v33,} = this;
            !-59444n;
            const o37 = {
                "maxByteLength": 536870912,
            };
            const v39 = new ArrayBuffer(204, o37);
            new Uint8ClampedArray(v39);
            super();
            for (let v42 = 0; v42 < 25; v42++) {
                this["p" + "p"] = v42;
            }
        }
    }
    new C27();
}
function f46(a47) {
    Symbol.toPrimitive.description;
}
Object.defineProperty(F20, "pp", { configurable: true, set: f46 });
new F20();
