class C3 {
    static #h = "MXypJ";
    set b(a5) {
        let v4 = this;
        let v6 = 0;
        do {
            v4 = 0.5694937224232901;
            v6++;
        } while (v6 < 2)
    }
    #a = "-18958";
}
new C3();
const v11 = new C3();
const v12 = new C3();
class C13 extends C3 {
    static [C3] = v11;
    static 1535556431 = v12;
    #h = 0.5694937224232901;
    static n(a15, a16, a17) {
        try {
            this.valueOf = a15;
        } catch(e18) {
        }
        return "o";
    }
}
new C3();
new v12();
new C13();
function f28() {
    function F29(a31) {
        if (!new.target) { throw 'must be called with new'; }
        const v32 = this.constructor;
        const v33 = v32.bind(F29, F29, F29, F29);
        try { v33(v33, F29, f28, f28, a31); } catch (e) {}
        try { new v32(); } catch (e) {}
    }
    new F29();
}
const v37 = [f28];
const v38 = [v37];
const v39 = [v37,f28,v37];
new BigInt64Array(3444);
class C44 {
}
new C44();
[];
function f48() {
    const o49 = {
        __proto__: v38,
    };
}
new C44();
new Uint8ClampedArray();
const v55 = new Date();
const v57 = new BigUint64Array();
v57[v55] = v55;
f28(BigInt64Array, f28, ...v38, 3444, 1024, ...v39);
f48();
f28();
[0.9830880735406903,-0.6660198851192867,729.1589343121786,6.490727458123557e+307,-1.2538779643386477e+308,-1000000000.0];
[638.8226705123661,3.0,-2.2250738585072014e-308,771474.4832247959,816263.8956170448,2.220446049250313e-16,5.0];
const v63 = [8.944191192251868,-1.4998894798282654e+308,4.0,-0.0,-1000000000000.0,-5.0,-2.220446049250313e-16];
[-5.83623517593701,-1.0,-1e-15];
[692.912813481568,126686.58689393173];
function f67(a68, a69) {
    const o73 = {
        "maxByteLength": 536870889,
    };
    const v75 = new SharedArrayBuffer(217, o73);
    try { v75.grow(); } catch (e) {}
    function F94(a96) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v97 = new F94(536870889);
    with (v97) {
        function F98(a100, a101, a102) {
            if (!new.target) { throw 'must be called with new'; }
            const t79 = this.__lookupSetter__;
            t79(Float64Array);
        }
        let v105 = 10;
        for (;
            (() => {
                const v106 = v105--;
                v106 >>> v106;
                return 10;
            })();
            ) {
        }
    }
    const o111 = {
        [a68](a109, a110) {
        },
    };
}
const v112 = f67(v63, 128);
/j(x)(x)(x)\2/gud;
/[\0](?:ab|cde)/vimsy;
/^xxx$/uisy;
try { v112.p(); } catch (e) {}
const v119 = new C44(104);
v119.toLocaleString().toLocaleLowerCase();
const v127 = new Array(7);
const v128 = [v127,v127,7];
try { v128.findLastIndex(v128); } catch (e) {}
[v128,v128,v127];
[Array];
let v134 = 129n;
v134--;
Set.g = Set;
const v137 = new Set();
const v138 = [-13,-9,1,529969044,1022331071,-15,1073741825];
[-51943,-4294967297,-2680,127];
const v140 = [257,0,536870888,4924869,1073741823,-11381,-4096];
v140[0] = v140;
let v141 = 1473;
v141++;
const v144 = new Int32Array(v141);
v144[580];
151 >>> 151;
const v149 = new Int8Array(v138);
v149[2];
try { new Uint16Array(v137, v127, v137); } catch (e) {}
new Uint16Array(7);
2.2250738585072014e-308 << 2.2250738585072014e-308;
const v164 = new Int16Array(2183);
new Uint8Array(255);
const v170 = new Int16Array(8);
async function f172(a173, a174, a175) {
    a173 > a173;
    a175 + a175;
    delete v170[-1000000000.0];
    let [v179,v180,...v181] = v164;
    v179 >>> v179;
    v164[5];
    const v184 = await v180;
    v184 | v184;
    return v179;
}
+-36313;
