new Uint16Array(2974);
const v8 = new Uint16Array(1703);
const v11 = new Uint8Array(1721);
class C12 {
}
function F13() {
    if (!new.target) { throw 'must be called with new'; }
}
const t8 = 2974;
const v15 = new t8();
const v16 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v18 = 9007199254740991n * 9007199254740991n;
let v19 = 0;
while (v19 < 5, v8) {
    const t14 = "f8d";
    t14[1000] &&= 2974;
    v19++;
}
for (let v23 = 0; v23 < 5; v23++) {
    function f24() {
        for (let v25 = 0; v25 < 5; v25++) {
            try { ("p").substring(C12, C12); } catch (e) {}
        }
        try {
            v16.forEach();
        } catch(e29) {
            v23 == 1703;
            [-2,64,4,257];
            let v32 = [-16,29862,1024,-9007199254740991,1940207004,-1,-1024,-1,1000,1660632748];
            const v33 = [2147483648,536870889,-1764755847,-9223372036854775808,-29464,1333674561,-6,6,11];
            v32 >>>= v32;
            e29.a = v15;
            e29.a = v33;
        }
        const t34 = "valueOf";
        t34[1721] ^= 1721;
        for (let v34 = 0; v34 < 32; v34++) {
            v15["p" + v34] = v34;
        }
        const t39 = ("1073741824").constructor;
        t39(v18);
        return "1073741824";
    }
    f24();
    %OptimizeFunctionOnNextCall(v11);
}
