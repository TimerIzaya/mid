let v2 = -0.0;
class C3 {
    static #h;
    static #toString(a5) {
        try {
            v2.d = this;
        } catch(e6) {
        }
        return this;
    }
    static #g;
    static f = "48776";
}
function f7() {
    function f8(a9, a10) {
        Math.asin(a9);
        const v16 = ~-1000000000000.0;
        Math.atan(v16);
        return v16;
    }
    return f8;
}
Object.defineProperty(C3, Symbol.toPrimitive, { configurable: true, enumerable: true, get: f7 });
const v20 = new C3();
v20.valueOf = Symbol;
const v21 = v20?.constructor;
function f22(a23) {
    try {
        new f7();
    } catch(e25) {
    }
    return a23;
}
const v27 = Symbol.toPrimitive;
v21[v27] = f22;
try { new v21(); } catch (e) {}
const v29 = new C3();
const v30 = v29?.constructor;
function f31(a32) {
    new BigInt64Array(4046);
    return v2;
}
v30[Symbol.toPrimitive] = f31;
try { new v30(); } catch (e) {}
const v39 = new C3();
const v40 = v39?.constructor;
try { new v40(); } catch (e) {}
function f42() {
    return v39;
}
function f43(a44) {
    const o47 = {
        "maxByteLength": 1293466293,
    };
    const v49 = new SharedArrayBuffer(1796, o47);
    function f51(a52, a53, a54, a55) {
        function f57(a58, a59) {
            for (let [i63, i64] = (() => {
                    0 + 0;
                    return [0, 10];
                })();
                i63 < i64;
                i63++) {
            }
            return a59;
        }
        arguments.constructor = f57;
        const t67 = arguments.constructor;
        t67();
        const v73 = new Uint32Array(a55, a55);
        v73[1];
        const v75 = [f51,f51,f51];
        [v75,[v75,v75,v75,v75]];
        Object.defineProperty(v75, "d", { writable: true, configurable: true, enumerable: true, value: Uint32Array });
        return v49;
    }
    return v27;
}
f42[Symbol.toPrimitive] = f43;
class C80 extends f42 {
    static ["48776"] = C3;
    set f(a82) {
        super.f = this;
        v2 = C80;
        this ^ v39;
        const v87 = -31540 * C80;
        C3 | v87;
        !v87;
        v20 || a82;
    }
    4;
    ["48776"] = "48776";
    f = v29;
    a = v29;
    static #a;
    [C3] = "48776";
    static 2;
    [v20] = v29;
}
C80.name = C80;
new C80();
new C80();
new C80();
v29 * v20;
f42 ** "-4294967296";
const v102 = new Float64Array(512);
v102.g = v102;
3390 >> 3390;
Int8Array.name;
new Int8Array(3390);
7 % 7;
new Int16Array(7);
for (let v113 = 0; v113 < 10; v113++) {
    const t113 = "-4294967296";
    t113[Symbol.match] = 5.0;
}
