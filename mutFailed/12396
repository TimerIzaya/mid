let v2 = "toLowerCase";
class C3 {
    static #h = 65536;
    static #d;
    static m(a5, a6) {
        [v2] = v2;
        /[\u0034a\Sc]/gdy;
        /U7(?<a>.)\k<a>/gudisy;
        return /\P{sc=Greek}/vdmy;
    }
    #e = v2;
    constructor(a11, a12) {
        a12[2] = a11;
        try {
            a11.#e = this;
        } catch(e13) {
        }
        try {
            v2.#h;
        } catch(e15) {
        }
    }
}
const v16 = new C3(C3, v2);
const v17 = new C3(65536, v16);
new C3(65536, C3);
const v22 = [108209328,-9007199254740991,65535];
const v23 = [4294967296,-9007199254740990,-7,1073741824,-4294967295,-1474049696];
[-4294967295,255,-226044956,2147483647];
const v25 = [v16,v16,v17];
[v2,-125406268n,v22,v25,[v2,v23,v25,v25,v16]];
function F30(a32, a33, a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    const v36 = this.constructor;
    try { new v36(a32); } catch (e) {}
    this.ignoreCase = a32;
}
new F30(645404.1417989694, v17, -125406268n);
new F30(-1.093925554716035e+308, C3);
