class C3 {
    static {
        try { this.toString(); } catch (e) {}
        const o8 = {
            "maxByteLength": 255,
        };
        const v10 = new SharedArrayBuffer(255, o8);
        new BigInt64Array(v10);
        let v13;
        try { v13 = this(this, -5n); } catch (e) {}
        try {
            v13.d = 3n;
        } catch(e14) {
        }
    }
    n(a16) {
        new Int32Array(6);
        new BigInt64Array(1024);
        new Uint8ClampedArray(3484);
        return a16;
    }
    static m(a27, a28) {
        this[2268501565] = this;
        for (let v30 = 0; v30 < 28; v30++) {
            try { a28(v30, v30); } catch (e) {}
        }
        a27 % this;
        try {
            g.d = g;
        } catch(e36) {
        }
        return a27;
    }
}
C3.name;
const v38 = new C3();
new C3();
const v40 = new C3();
const v41 = v40?.constructor;
try { new v41(); } catch (e) {}
const v45 = new Array(8);
const v47 = [Array,[8,v38],3n,C3,v45];
try { v47.indexOf(v38); } catch (e) {}
[Array];
const v52 = new BigInt64Array(256);
v52.includes(undefined);
const v55 = [23795,8,259058917,-256,1,-36806,4096,-9,-1,-18943];
let v56 = -2;
v56--;
const v59 = new Date(v56, v55, v55, v55, v56);
try { v59.setTime(v52); } catch (e) {}
