function f0() {
    let v3 = 0.0;
    v3--;
    v3 + v3;
    const o20 = {
        "c": 127,
        p(a7, a8) {
            let v9;
            try { v9 = new a8(127); } catch (e) {}
            const v10 = delete v9?.e;
            try {
                v10.valueOf = v9;
            } catch(e11) {
                v9.constructor;
                function F13(a15, a16) {
                    if (!new.target) { throw 'must be called with new'; }
                }
                const v17 = new F13();
                class C19 extends v17.constructor {
                }
            }
            return v10;
        },
        "b": 127,
        "h": 0.3132177720366115,
        __proto__: 0.3132177720366115,
        "e": v3,
        "f": 0.3132177720366115,
    };
    return o20;
}
const v21 = f0();
const v22 = f0();
f0();
const v24 = [127,-9007199254740990,1073741824,-657854854];
const v25 = [-4294967297,9007199254740992,-32740];
const v26 = [2119928670,-536870912,127,93328846,64,5,-9007199254740992];
try { v26.slice(v25, f0); } catch (e) {}
v26.g = v26;
1000000.0 >> 1000000.0;
1000000.0 ^ 1000000.0;
function f33(a34, a35) {
    a35.f = a35;
    let v36;
    try { v36 = a35.p(a35, a35); } catch (e) {}
    v36 || v36;
    const o43 = {
        15: f0,
        90: a34,
        9: v24,
        m(a39, a40) {
            super[a40] = 1000000.0;
            try {
                f0();
            } catch(e42) {
            }
            return a34;
        },
        ...a35,
        "g": a35,
        512: v21,
        ...v25,
    };
    return o43;
}
const v44 = f33(v24, v21);
v44[1] = v44;
const v45 = f33(v26, v22);
const v46 = f33(v24, v21);
v46[1];
v46[90];
class C49 {
    static valueOf(a51, a52, a53) {
        v22[256] &= 8.344041629896682e+307;
        let v55 = 6;
        Math.cos(v26);
        const v57 = Math.min(v26);
        ++v55;
        Math.sinh(v26);
        Math.expm1(++v55);
        return v57;
    }
    static #c;
    a = -1000000000000.0;
    static #f = 8.344041629896682e+307;
    static #e;
    static 1073741825;
    constructor(a63, a64) {
        let v65;
        try { v65 = this.toLocaleString(); } catch (e) {}
        try { v65.trimStart(); } catch (e) {}
        try { v65.search(this); } catch (e) {}
        for (let v68 = 0; v68 < 25; v68++) {
            v68 << v68;
            for (let v70 = 0; v70 < 10; v70++) {
                const v71 = [601759695];
                const v72 = [1073741824,1073741823,1376142744,1073741825];
                try { v72.groupToMap(v68); } catch (e) {}
                try { ("find").trimRight(); } catch (e) {}
                try { v72["find"](..."find", undefined, ...v71); } catch (e) {}
            }
            1159 <= 1159;
            const v81 = new Int8Array(1159);
            try { v81.toSorted(v81); } catch (e) {}
            Uint8ClampedArray.prototype;
            const v85 = new Uint8ClampedArray();
            const v86 = v81[2];
            v86 & v86;
            try { ("forEach").blink(); } catch (e) {}
            try { v85["forEach"](v86); } catch (e) {}
        }
    }
    f = v46;
}
C49[1073741825] = C49;
new C49();
const v92 = new C49();
v92.a;
const v94 = new C49();
v94.b = v94;
class C95 {
    constructor(a97) {
        let v98;
        try { v98 = this.toString(); } catch (e) {}
        try { v98.substr(v45, v45); } catch (e) {}
        for (let v100 = 0; v100 < 32; v100++) {
            v100 >>> v100;
            for (let v102 = 0; v102 < 5; v102++) {
                function f103() {
                    return f103;
                }
                const v105 = f103()?.constructor;
                try { new v105(C49); } catch (e) {}
            }
            gc.name;
            const o109 = {
            };
            o109.b = o109;
            class C110 {
            }
            C110.d = C110;
            -9524 >> -9524;
            arguments[0] = arguments;
            Object.defineProperty(arguments, 4, { writable: true, enumerable: true, value: -9524 });
            gc(o109);
        }
    }
}
const v115 = C95.name;
try { v115.valueOf(); } catch (e) {}
new C95(C95);
const v118 = new C95(C95);
v118.d = v118;
const v119 = new v46();
const v120 = v119?.constructor;
let v121;
try { v121 = new v120(C95); } catch (e) {}
v121.length;
