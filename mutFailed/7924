const v0 = [];
let v6 = 536870887n;
v6++;
const v8 = ["-1024"];
const v9 = [v6,-2147483648n];
const v10 = ["-31338",v8,v9,v9];
v10.g = v10;
const v11 = [v8,-2n,v10];
const v12 = [v10,v8,v10,"-1024",v8];
const v13 = [v11,v11,v12,"-31338"];
const v14 = [v0,v11];
try { v14.map("deref"); } catch (e) {}
[v11,v14,v9,v8];
const v17 = [v10,v10,-2147483648n,v13];
function F18(a20) {
    if (!new.target) { throw 'must be called with new'; }
    a20.arguments = -2147483648n;
    a20.arguments;
}
F18.arguments = F18;
const v22 = new F18(F18);
function f23(a24, a25) {
    a25 - F18;
    try {
        v17.e = v12;
    } catch(e27) {
    }
    return v13;
}
v22[Symbol.toPrimitive] = f23;
const v30 = v22?.constructor;
try { new v30(v10); } catch (e) {}
function f32(a33) {
    const v35 = Symbol.toPrimitive;
    Symbol.for(v35.description);
    return v35;
}
v22.toString = f32;
class C39 {
    static [v22];
}
