class C2 {
    #g = C2;
    static #c;
}
function F3(a5, a6, a7, a8) {
    if (!new.target) { throw 'must be called with new'; }
}
const v9 = new F3(F3, F3, F3, F3);
for (let v10 = 0; v10 < 25; v10++) {
    v9["p" + v10] = v10;
}
const v13 = new BigUint64Array(1486);
new Uint8Array(129);
const v19 = new Int32Array(Int32Array);
let {...v20} = v19;
0 == 268435440n;
const v25 = new Uint8Array(204);
function f26(a27) {
    return f26;
}
function f28() {
    const v29 = [];
    v29[6] = f28;
    v29[6] = v29;
    const o32 = {
        set b(a31) {
        },
    };
    return 0;
}
for (let v33 = 0; v33 < 5; v33++) {
    f28();
    %OptimizeFunctionOnNextCall(f28);
}
function f35(a36, a37, a38, a39) {
    const o64 = {
        [129]: 1486,
        n(a41, a42, a43, a44) {
            v25[a39];
            super[a36] = a41;
            function f46() {
                return f46;
            }
            function f47(a48) {
                const o59 = {
                    [a48](a50, a51) {
                        super[f46];
                        (268435456 >>> (268435456 % 268435456)) ^ -3.0;
                    },
                };
                return o59;
            }
            v13.byteLength;
            const o61 = {
            };
            const v63 = new Proxy(v13, o61);
            return v63;
        },
        [a39]: a38,
        __proto__: v13,
        ...v13,
        "e": a36,
        "h": a36,
        "c": BigUint64Array,
        "f": a37,
    };
    return o64;
}
function f65(a66) {
    Uint8Array || f26(C2);
    return v20;
}
f35[Symbol.toPrimitive] = f65;
f35(1486, 204, v25, 129);
const v72 = f35(1486, 129, f35, 1486);
const v73 = f35(129, 1486, BigUint64Array, 129);
let v74 = 144;
const v75 = v74++;
v72.e;
let v77 = f35(f35, v13, v13, f35);
v77 = v73;
129 - 204;
let v79 = "n";
v73[v79](...v79, ...v79, ...v79, 204, v77, v75);
class C81 {
    constructor(a83, a84) {
        this.propertyIsEnumerable(C81);
    }
}
function f86(a87) {
    return v75;
}
const v89 = Symbol.toPrimitive;
const v90 = [-3,47741,-16128,9007199254740992,-1024,-58567,268435439,-4294967296,1807295090,-9223372036854775808];
v90.constructor = f65;
v90.flat();
class C93 {
    static 9 = 9.187362692894364;
}
for (const v94 in C93) {
}
C81[v89] = f86;
const v95 = new C81();
v79 = v95;
try {
    v89.description = "FXM3";
} catch(e99) {
}
