/(?<=a)/vsy;
const v1 = /qT/gu;
const v2 = /\p{Script=Greek}a$ab\b\d\bcd/uis;
class C6 {
    static get a() {
        -1000000000.0 + v1;
        return v1;
    }
    m(a10, a11) {
        v2[679589764] ^= -4.6835644205631315;
        try {
            this.g = -1000000000.0;
        } catch(e12) {
        }
        [-14,-2147483648,-128,31543,536870889,-1947,65536,-9007199254740990,-65536,4294967295];
        [-2,-128,12];
        return [-4294967295,268435441,-1073741824,-10];
    }
}
const v16 = new C6(C6, -1000000000.0, -1000000000.0);
const v17 = new C6();
const v18 = new C6();
function f19() {
    return -4.6835644205631315;
}
const v20 = [v18,v18];
const v21 = [-1000000000.0,v1,v16,v17,v20];
[v18,v21,v21,v20,v2];
function f23() {
    const o63 = {
        m(a25) {
            a25.f = a25;
            try { a25.next(f23); } catch (e) {}
            a25.c = a25;
            a25.h = a25;
            const o27 = {
            };
            function f28(a29, a30, a31) {
                return f23;
            }
            try {
            } catch(e32) {
                const v36 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(536870912, ...v36, o27);
            }
            try {
                const o38 = {
                };
            } catch(e39) {
            }
            const v41 = Math?.expm1;
            try { new v41(f28); } catch (e) {}
            let v43 = -9007199254740991;
            v43++;
            const v45 = v43 >> v43;
            function f46() {
                return f46;
            }
            for (let v47 = 0; v47 < 5; v47++) {
            }
            arguments.f = f19;
            const v49 = arguments.MIN_VALUE;
            const v50 = [];
            Object.defineProperty(v50, "constructor", { enumerable: true, value: f28 });
            v50["concat"]("concat");
            class C53 {
            }
            const v54 = C53.name;
            try { v54.codePointAt(Math); } catch (e) {}
            new Int8Array(3938);
            let v59 = 3;
            for (let i = 0; i < 5; i++) {
                [...v59] = v49;
            }
            const o60 = {
            };
            try {
                const o61 = {
                };
            } catch(e62) {
            }
            return v45;
        },
    };
    o63.f = o63;
    o63.m(o63);
    return o63;
}
f23();
f23();
