class C3 {
    static {
        const v9 = Symbol.matchAll;
        const t3 = "SXJ";
        t3[v9] = v9;
    }
    static #e;
    static {
        const v11 = this[536870912];
        try {
            v11.#e = this;
        } catch(e12) {
        }
        "SXJ" - v11;
    }
}
new C3();
new C3();
new C3();
class C17 {
    constructor(a19, a20) {
        const o22 = {
            84: arguments,
        };
    }
}
new Uint16Array(3017);
new Int32Array(127);
new Int8Array(257);
function f34(a35) {
    const o36 = {
        ..."toStringTag",
    };
    return o36;
}
class C37 extends f34 {
    ["15036"];
    #h = "toStringTag";
    toString(a39, a40) {
        const v41 = `7${this}dm${"SXJ"}m`;
        function F42(a44, a45, a46) {
            if (!new.target) { throw 'must be called with new'; }
        }
        F42(F42(), "SXJ", v41);
    }
}
const v49 = new C37();
for (const v50 in v49) {
}
