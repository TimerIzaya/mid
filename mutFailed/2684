const v2 = new BigUint64Array(BigUint64Array);
const v4 = 4 / 4;
let v6;
try { v6 = new Uint8Array(BigUint64Array, Uint8Array, Uint8Array); } catch (e) {}
(4).name;
v4[8];
new Uint8Array(4);
const v12 = new BigInt64Array(v6);
[4.0,-3.0,-1000000.0,-2.0,-2.2250738585072014e-308];
[325.12322720830707,1e-15,0.23893181779869666,-1.0,2.0,-79.18454867299033,-1000000000000.0,2.2250738585072014e-308];
const v15 = [-121153.73651159555,1000.0];
try { v15.slice(v15, v12); } catch (e) {}
let v18;
try { v18 = new Float64Array(BigInt64Array, BigInt64Array, BigInt64Array); } catch (e) {}
Float64Array.d = Float64Array;
const v19 = [Float64Array];
try { v19.sort(v4); } catch (e) {}
const v21 = v19?.constructor;
try { new v21(v12); } catch (e) {}
try { new v18(v2); } catch (e) {}
for (let v24 = 0; v24 < 5; v24++) {
    v19.length = 2;
}
