class C3 {
    constructor(a5, a6) {
        a6.g ||= 1.212488027753892;
        a5[a6] ^= 1.212488027753892;
    }
    set g(a8) {
        super[this] = this;
        const v9 = this[2147483648];
        const v11 = [v9?.[a8],4.0];
        [[v11,4.0,v9],v11];
    }
}
const v14 = new C3(-536870912, C3);
const v15 = new C3(4.0, -536870912);
const v16 = new C3(v15, v15);
function F17(a19, a20, a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        new F17(a22, "1024", -6.877645481955348, undefined);
    } catch(e27) {
    }
    try {
        this.b = -536870912;
    } catch(e28) {
    }
    try {
        this.h = v14;
    } catch(e29) {
    }
    try {
        this.f = v15;
    } catch(e30) {
    }
}
new F17(v14, v15, v15, v14);
new F17(v16, v14, C3, v16);
new F17(v15, v15, v15, C3);
function f34(a35, a36, a37, a38) {
    const v39 = /(?:a*)+q(?<a>.)/guds;
    for (let [i43, i44] = (() => {
            0 >>> 0;
            return [0, 10];
        })();
        (() => {
            const v45 = i43 < i44;
            function f46(a47, a48) {
                return f34;
            }
            return v45;
        })();
        (() => {
            if (a37) {
                v39["test"](i44, ..."test", v16, i44, ..."test", i43);
            } else {
                a36 | -796968526;
                Math.max(a36);
                Math.pow(a36, a38);
                a36 << -796968526;
            }
            i44--;
        })()) {
        for (let v63 = 0; v63 < 25; v63++) {
            v39.hasIndices = v39;
        }
    }
    return f34;
}
for (let v64 = 0; v64 < 10; v64++) {
    f34(v64, v64, f34, v64);
}
%OptimizeFunctionOnNextCall(f34);
f34();
