const v5 = new Int8Array(9);
const v8 = new Float32Array(12);
new Uint16Array(0);
const v13 = new WeakSet();
[5,-256,Int8Array,0,[v13,[v8,5]]];
class C17 {
}
class C18 {
}
new v5();
function f21(a22, a23, a24, a25) {
    const v26 = a23 >>> a23;
    const v27 = v26 >>> v26;
    v27 != v27;
    for (let v29 = 0; v29 < 5; v29++) {
        try { new C17(463086674, v29, Float32Array, ...v29, a23); } catch (e) {}
    }
    const v32 = (9).max(a23);
    v32 - v32;
    return -256;
}
for (let v34 = 0; v34 < 5; v34++) {
    f21(v34, v34);
}
%OptimizeFunctionOnNextCall(f21);
C18();
