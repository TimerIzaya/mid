new BigInt64Array(0);
new Int8Array(1952);
const t2 = 0;
const v8 = new t2(0);
class C9 {
    [0];
    set g(a11) {
        try {
            v8.buffer = this;
        } catch(e12) {
        }
    }
    static set h(a14) {
        try {
            v8.includes(127n, 4294967296);
        } catch(e18) {
        }
    }
}
new C9();
const v20 = new C9();
new C9();
let v22 = 591114.0785999324;
v22++;
const v25 = [v22,v22,v22];
function F27() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.toString(this, F27, F27, this); } catch (e) {}
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    try { Date.toString(F27, 9223372036854775807); } catch (e) {}
    this();
    let v37;
    try { v37 = new Uint32Array(Uint32Array, Uint32Array, 4); } catch (e) {}
    Uint32Array.BYTES_PER_ELEMENT = Uint32Array;
    const v38 = new Uint32Array(5);
    try { v38.reduce(Date); } catch (e) {}
    const v42 = new Set(v25);
    const v43 = v42?.add;
    try { new v43(v37); } catch (e) {}
    let v46;
    try { v46 = ("delete").blink(); } catch (e) {}
    v46[4] = v46;
    const v47 = v42["delete"](839612.5677247904);
    v47 || v47;
    const v49 = v47 || v47;
    const v50 = v49 && v49;
    const o52 = {
    };
    o52.b = o52;
    o52.e = 19793;
    try { new Array(9223372036854775807); } catch (e) {}
    let v56;
    try { v56 = v20.blink(); } catch (e) {}
    try { v56.strike(v22); } catch (e) {}
    class C59 {
        [839612.5677247904] = -1.7976931348623157e+308;
    }
    class C60 extends C59 {
        ["getPrototypeOf"] = C59;
    }
    try { new C60(); } catch (e) {}
    C60.e = C60;
    const v62 = new C60();
    const v63 = v62?.getPrototypeOf;
    try { new v63(); } catch (e) {}
    const v65 = v62.constructor;
    try { new v65(F27, v50); } catch (e) {}
    const v67 = Array(19793);
    for (const v68 of v67) {
    }
    const v69 = [v67,v67,v67,v67,v67];
    let v70;
    try { v70 = v69.includes(839612.5677247904); } catch (e) {}
    v70 && v70;
    BigUint64Array.e = BigUint64Array;
    const v73 = new BigUint64Array();
    try { v73.reduceRight(v25); } catch (e) {}
    for (let v75 = 0; v75 < 5; v75++) {
        v75 >> v75;
    }
    [[v69,v69,v69]];
}
new F27();
new F27();
const v82 = new BigInt64Array();
function f83() {
    const v85 = v82[undefined] instanceof f83;
    const o86 = {
    };
    o86.g = o86;
    const o87 = {
    };
    o87.h = o87;
    try {
        const o88 = {
        };
        o88.h = o88;
        o88.a = v22;
        o88.h = v85;
    } catch(e89) {
    }
    -12n << -12n;
    return undefined;
}
%PrepareFunctionForOptimization(f83);
const o92 = {
    "apply": f83,
};
const t108 = o92.apply;
new t108();
%OptimizeFunctionOnNextCall(0);
f83();
