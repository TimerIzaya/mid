const v0 = [5.0,1000.0,-694.8140083328576,-1000.0,0.3497195424049322,-3.0,-2.406032470206931,2.2250738585072014e-308];
const v1 = [825.9348093536919,3.0,-1000000000.0,-Infinity];
const v2 = [-Infinity,-1e-15,NaN,2.0,5.907301174607302e+307,-9.286146235683022,-1.7976931348623157e+308,-23679.926852350705,1.7976931348623157e+308];
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a5;
    } catch(e7) {
    }
    try {
        this.a = a5;
    } catch(e8) {
    }
}
const v9 = new F3(v1, v0);
const v10 = new F3(v1, v2);
const v11 = new v10(v2, v2);
class C15 extends F3 {
    constructor(a17, a18, a19, a20) {
        super(a17, a17);
        v11[v11] = a17;
        function f21(a22, a23) {
            const o24 = {
                [a19]: v11,
                ...v9,
                [v1]: v11,
            };
            return o24;
        }
        f21(a19, v9);
        f21(v2, this);
        f21(v2, this);
    }
}
const v28 = new C15(v0, -1829250658, v0, -9223372036854775808);
new C15(v2, C15, v2, -1829250658, -9223372036854775808, v28);
const v30 = new C15(v2, v2, v0, -268435456, v0, v1);
new Int8Array(129);
new Uint8ClampedArray(v2);
const v42 = new Int32Array(7, 7, Uint8ClampedArray, v9);
function F43(a45, a46, a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a46;
    } catch(e49) {
    }
    try {
        this.f = a47;
    } catch(e50) {
    }
}
let v51 = new F43(154, 129, 129, 154);
new F43(154, 129, 129, 129);
const v53 = new F43(v30, 154, 154, 129);
const v54 = v42.buffer;
try { v54(Uint8ClampedArray, Int8Array, 129, v54); } catch (e) {}
typeof 8n === "string";
v51 = v53;
