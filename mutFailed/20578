const v3 = Math.round();
async function f4(a5, a6, a7) {
    const v8 = "c" ** f4;
    try { BigInt64Array(v8); } catch (e) {}
    const v12 = new BigInt64Array(4096);
    v12[1087];
    for (let i = 0; i < 5; i++) {
        class C14 {
        }
        for (let v15 = 0; v15 < 5; v15++) {
        }
    }
    await v3;
    const v17 = [-1.5424212036356715e+308];
    v17.shift();
    const o19 = {
    };
    const v20 = [1073741824,1073741823,1376142744,1073741825];
    function f21(a22, a23, a24, a25) {
        try { v20["find"](..."find", a25, ...v17); } catch (e) {}
        return a22;
    }
}
new Date();
let v30 = 2147483647;
function f32() {
    return 4294967296;
}
function F33(a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a35;
    } catch(e37) {
        class C38 {
            #toString(a40, a41) {
                new Int8Array(2);
                new BigInt64Array(56);
                new Float32Array(257);
                return 257;
            }
        }
        const v51 = new C38();
        class C52 {
            [v51];
            #valueOf(a54, a55) {
                function f56() {
                    return a55;
                }
                try {
                    a54.__proto__ = a54;
                } catch(e57) {
                }
                return "c";
            }
            constructor(a59, a60, a61, a62) {
                this.constructor;
                [-3.942521664036782e+307,-3.942521664036782e+307,[a61,a61]];
            }
            f = v51;
        }
        new C52();
    }
    try {
        this.b = a35;
        function f69() {
            ("Vre").charAt(4294967296).lastIndexOf();
            const v74 = new Float32Array();
            function f75() {
                return v74;
            }
            const o88 = {
                [-4294967297n](a77, a78, a79, a80) {
                    const v81 = [];
                    v81[0] = v81;
                    function F82(a84) {
                        if (!new.target) { throw 'must be called with new'; }
                    }
                    new F82();
                    eval();
                },
            };
            return o88;
        }
    } catch(e89) {
    }
    try {
        this.h = Date;
    } catch(e90) {
    }
}
new F33(1, 4294967296);
new F33(4294967296, 4294967296);
/\xed\xb0\x80qhfoo|(bar|baz)|quuxS*/uimy;
const v95 = /\xf0\x9f\x92\xa9+/gumy;
const v96 = /^tD/gv;
v96.ignoreCase;
const v98 = [268435441,-12,14985,-14,4294967295,-1073741824];
const v99 = [-9007199254740990,1582176086,5,759350219,14,257,536870888,-4294967297,65535,-9007199254740990];
const v100 = [-57057595,-708341426,-27428,-9007199254740991];
function f101() {
    return v100;
}
const v102 = [-37935,v99,-37935,v98,v95];
-v100[2];
function F105(a107) {
    if (!new.target) { throw 'must be called with new'; }
}
const v108 = [v100,-37935,v102];
[v108,v96];
-1024 - -1024;
~-65537n;
function f115(a116, a117) {
    const o119 = {
        get c() {
            return a117;
        },
    };
    function f120() {
    }
    return v98;
}
const v121 = f115(f115, -65537n);
const v122 = f115(f115, f115);
class C123 extends f115 {
    set e(a125) {
        v122.h;
        let {...v127} = v122;
        Reflect.construct();
    }
}
const v130 = new C123();
v130.n = v108;
try {
    v130.n(-65537n, v130, 4294967297n, 4294967297n, v121);
} catch(e132) {
}
new F33(1, 1);
class C137 {
    constructor(a139, a140) {
        const v141 = this.constructor;
        try { new v141(a139); } catch (e) {}
        this[1] >>>= v30;
        let v143 = 0;
        while (v143 < 1) {
            const v148 = v30--;
            Math.atan();
            v30 * 7;
            const v151 = v148 + 7;
            v151 * v151;
            const v153 = v143++;
            v153 - v153;
        }
    }
    toString(a156) {
        const t154 = super["bigint"];
        t154[9] = 0;
    }
}
const v162 = new BigInt64Array(1);
v162.toString = f4;
class C163 {
    static [v162];
}
class C167 extends Float64Array {
}
const v168 = new C167();
v168.reverse();
