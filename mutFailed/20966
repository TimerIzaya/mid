const v0 = [30570,1487483772,-34026,-2147483648,-1867143887,127,39254];
const v1 = [-689353213,-2147483647,268435440,2147483647,-14751,1073741823];
const v2 = [16,1000,4294967296,2147483648];
function F6(a8, a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a10;
    } catch(e11) {
    }
    try {
        this.g = a8;
    } catch(e12) {
    }
    try {
        this.h = -503899.05438773776;
    } catch(e13) {
    }
}
new F6(2.0, -503899.05438773776, v0);
const v15 = new F6(-717839.1222793609, -717839.1222793609, v0);
new F6(v15, v2, v0);
-Infinity;
const v24 = [0.71465078532354,-2.2250738585072014e-308,1.0,-2.2250738585072014e-308,2.2250738585072014e-308,-620.8633845139873,0.0,-1.0,3.3358719500528515];
const v25 = [-7.462188141503825,-3.070207201828062e+307,0.6861416475431791,1000000000.0,-3.0];
function f27() {
    const v28 = [];
    try {
        v1.h = v28;
    } catch(e30) {
        "XsWPw" ** e30;
    }
    return v24;
}
Object.defineProperty(Set, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f27 });
const o38 = {
    ...v24,
    [Set](a35, a36, a37) {
    },
    "b": v25,
};
o38.toJSON = o38;
function f39(a40, a41) {
    return a40;
}
const v44 = [-11,o38];
const o45 = {
    "arguments": v44,
    "type": "function",
};
new Worker(f39, o45);
