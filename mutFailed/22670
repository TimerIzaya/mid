const v2 = new Uint16Array(4);
const v3 = new v2();
function f4(a5, a6) {
    function f7() {
    }
    class C8 extends f7 {
    }
    class C9 extends C8 {
    }
    function f10(a11, a12, a13, a14) {
        f7.a = a11;
        let v15;
        try { v15 = a11(C9); } catch (e) {}
        a12 & v15;
        const o20 = {
            n(a18, a19) {
            },
        };
        return o20;
    }
    for (let v21 = 0; v21 < 500; v21++) {
        f10();
    }
    return a6;
}
Object.defineProperty(v3, "constructor", { value: f4 });
class C24 {
}
function f26() {
    Math.cos(Math);
    return Math;
}
const v29 = new Int32Array(8);
function F31(a33, a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    function F36(a38, a39) {
        if (!new.target) { throw 'must be called with new'; }
        function f40(a41, a42, a43) {
            for (let i = 0; i < 5; i++) {
            }
            try {
                f40(this, a43, a43);
            } catch(e45) {
                function f46(a47, a48) {
                    return a47;
                }
                f46(this, f40);
            }
        }
        f40(a38, a38, F31);
    }
    new F36(F31, this);
}
const v53 = new Int32Array(1344);
const v54 = [4,1344,v53];
const v55 = [v29,v54,v53,1344];
try {
    v53.f = 4;
} catch(e56) {
}
function f57() {
    return -2147483647;
}
class C66 extends f57 {
    p(a68, a69) {
        class C76 {
            static #p(a78) {
                this.#p();
            }
        }
    }
}
[v55,v55,Int32Array,v54,v54];
Math.sin(-268435456);
const v91 = Date.toString(Date, Date, Date, Date);
async function* f92(a93, a94) {
    return Date;
}
const v95 = f92(v91, Date);
function f96(a97, a98) {
    const o99 = {
        [v91]: v95,
    };
    return f92;
}
function f105(a106, a107, a108, a109) {
}
for (let v110 = 0; v110 < 5; v110++) {
    f105();
}
const o113 = {
};
o113[Uint32Array] -= -2147483649;
256 << -65535;
+20572;
for (let v118 = 0; v118 < 5; v118++) {
    function f119() {
        const v120 = [-Infinity,1.7976931348623157e+308,1.0,1.7976931348623157e+308,-1.0,Infinity];
        new Uint8Array(v120, v118, v118);
        v120.length >>>= -65536;
        return -65536;
    }
    f119();
    %OptimizeFunctionOnNextCall(f119);
}
