const v4 = new Map();
class C5 extends Map {
    2147483648 = v4;
    constructor(a7) {
        super(v4);
        v4[Symbol.asyncIterator] = this;
    }
    [1340748324n];
    g = 536870887n;
    static 1073741823 = 536870887n;
    b = 536870887n;
}
C5.f = C5;
new C5(3n);
new C5(1340748324n);
const v12 = new C5(3n);
5 ^ 5;
try { new Uint8Array(Map, C5, Uint8Array); } catch (e) {}
const v17 = new Uint8Array(5);
try { v17.filter(536870887n); } catch (e) {}
new Int32Array(9);
Int16Array.prototype = Int16Array;
const v24 = new Int16Array(3728);
try { v24.slice(5, v12); } catch (e) {}
function F26(a28) {
    if (!new.target) { throw 'must be called with new'; }
    (5).constructor;
    const v30 = a28.arguments;
    v30.a = v30;
}
const v31 = new F26();
const v32 = v31?.propertyIsEnumerable;
try { new v32(v24); } catch (e) {}
