const v1 = new Date();
1024 >>> 1024;
Array(1024, -10);
function f9(a10, a11, a12, a13) {
    a12--;
    try { a13(1024, 1024, -10, 1024); } catch (e) {}
    const v16 = /(?:a*)+q(?<a>.)/guds;
    v16.lastIndex;
    for (let [i21, i22] = (() => {
            10 * 10;
            return [0, 10];
        })();
        i21 < i22;
        (() => {
            const v26 = i22--;
            v26 + v26;
        })()) {
        for (let v30 = 0; v30 < 5; v30++) {
            const v31 = v16.dotAll;
            const o35 = {
                get d() {
                    return v31;
                },
                o(a34) {
                    return a34;
                },
            };
        }
    }
    return a13;
}
for (let v36 = 0; v36 < 10; v36++) {
    v36 == v36;
    f9(f9, v36, v36, f9);
}
new Uint32Array([-620100541,-64845,-268435456,-7,-268435456,1024,-536870912]);
new Int8Array(9);
-9;
class C45 {
}
try { new C45(); } catch (e) {}
const v47 = new C45();
try { v47.propertyIsEnumerable(v1); } catch (e) {}
v47.constructor.length;
const o52 = {
};
const v53 = gc(o52);
new Float32Array(9, Float32Array.BYTES_PER_ELEMENT);
let v59;
try { v59 = new Uint8ClampedArray(v53, -10, 9); } catch (e) {}
new Uint8ClampedArray(-65536, v59, v59, v59);
const v65 = new BigUint64Array();
try { v65.copyWithin(-65536, 9); } catch (e) {}
function F67() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const t56 = 1024;
        const v69 = new t56();
        function f70(a71, a72) {
            return f70;
        }
        const v73 = f70(v69, 1024);
        class C76 extends Date {
            static [v73];
            static [0.0] = v69;
        }
        let v77 = 0;
        for (let i = 0; i < 5; i++) {
            v65.entries();
            const v79 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
            function f80() {
                for (let i83 = 0, i84 = 10;
                    (() => {
                        const v85 = i83 < i84;
                        class C86 {
                        }
                        class C87 {
                        }
                        const v88 = new C87();
                        function f90(a91, a92, a93, a94) {
                            const v95 = a92 >>> a92;
                            for (let v96 = 0; v96 < 5; v96++) {
                                let v97;
                                try { v97 = new C86(v88, v96, Float32Array, ...v96); } catch (e) {}
                                const o98 = {
                                };
                                o98.f = v97;
                                const o99 = {
                                };
                                o99.g = v95;
                            }
                            return f90;
                        }
                        f90();
                        %OptimizeFunctionOnNextCall(f90);
                        return v85;
                    })();
                    i84--) {
                }
                try {
                    v79.forEach();
                } catch(e107) {
                    e107.a = e107;
                }
                const v109 = Symbol.toPrimitive;
                Symbol.for(v109.description);
                v109.description;
                Symbol.for();
                return v109;
            }
            const v115 = v77++;
            v115 ^ v115;
            v77 < 5;
        }
        new Uint16Array(2);
        const v123 = Int8Array.prototype;
        try { v123.hasOwnProperty(v123); } catch (e) {}
        new F67();
    } catch(e126) {
    }
}
const v127 = new F67();
const v128 = v127?.constructor;
try { new v128(); } catch (e) {}
