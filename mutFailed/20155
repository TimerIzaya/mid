function f3() {
    return 9007199254740990;
}
const v4 = [-1787036178,9007199254740991,2,7,64,268435456,9,60357,1116055750,1925517968];
const v5 = [-29545,-337878314,65536,-1024,65537,5,-256,4096,4294967295];
const v6 = [64,1332282185,-47066,6,536870887];
class C10 extends f3 {
    constructor(a12, a13, a14) {
        super();
        Object.defineProperty(v5, -f3, { writable: true, set: f3 });
        this[Symbol.toStringTag];
    }
    #a = v6;
    static {
        this[this] = 9007199254740990;
        1 ** 9007199254740990;
        this && 1073741823;
    }
    5;
}
const v22 = new C10(1073741823, 1, 5n);
const v23 = new C10(-144905741n, 1, -144905741n);
const v24 = new C10(v23, 1, 1024n);
class C25 {
    #n(a27, a28) {
        v22 <= a28;
        return delete v24[257];
    }
    static o(a35, a36, a37) {
        v6[this] = 1024n;
        v5[v4] = 1024n;
        let v38;
        try { v38 = v22.isSealed(this, a36, v23, a36); } catch (e) {}
        v38[Symbol.replace] = C10;
        return v23;
    }
}
new C25();
new C25();
new C25();
("imul").padEnd();
class C50 {
}
const v51 = new C50();
const v52 = [-2.220446049250313e-16];
const v54 = [-2.220446049250313e-16,[8]];
v54.push(8);
const v56 = ("number").slice();
const v58 = ("1G")["trimEnd"]();
function f59(a60, a61, a62) {
    const o63 = {
        ...a62,
        268435441: v51,
    };
    return o63;
}
f59(v58, v58, f59(v52, v56, v54));
function F66() {
    if (!new.target) { throw 'must be called with new'; }
    function f69() {
        return -9007199254740992n;
    }
    class C70 {
    }
    new C70();
    this.c = 1073741823;
    const o73 = {
    };
    class C74 {
    }
    const v76 = new Set();
    function F77(a79, a80) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            class C81 extends C50 {
            }
            new Int16Array([10,829820207,16,-4294967296,-9007199254740992,-65535,-2147483648,1024]);
            this.d = a79;
        } catch(e85) {
        }
        v76[this];
        new f3();
        const v88 = [65537,3,-25535,268435440,-2,9007199254740990,1,-128,9007199254740990];
        const v89 = [6,-536870912];
        const v91 = new C70();
        class C92 {
            constructor(a94, a95) {
                function f96(a97, a98, a99, a100) {
                    const o101 = {
                        "deleteProperty": Date,
                        "ownKeys": Date,
                    };
                    return v91;
                }
                f96(v88, Date);
            }
            [v89];
            g = v91;
        }
        try {
            new F77(a80, v76);
        } catch(e104) {
        }
        const o106 = {
            "b": 256,
        };
        o106.constructor;
    }
}
new F66();
new F66();
new F66();
new Float32Array(4);
new Uint32Array(2);
function F120(a122, a123, a124, a125) {
    if (!new.target) { throw 'must be called with new'; }
}
const v126 = new F120(F120, F120, F120, F120);
for (let v127 = 0; v127 < 25; v127++) {
    let v130 = -3n;
    const v131 = v130--;
    [5.0,v130,-2.220446049250313e-16,[1.3238558541095722e+308,1.3238558541095722e+308,v130]];
    const v135 = "p" + v127;
    function f136(a137, a138) {
        const o139 = {
            "b": v131,
        };
        return a138;
    }
    v126[v135] = v127;
}
class C140 {
    constructor(a142, a143) {
        for (let i = 0; i < 10; i++) {
            this[this];
        }
    }
}
new C140();
function F146(a148, a149) {
    if (!new.target) { throw 'must be called with new'; }
    const t141 = Array(11);
    t141[212] -= 3774;
    const v154 = this.constructor;
    try { new v154(this); } catch (e) {}
    a149++;
}
const v157 = new F146();
const t148 = v157.constructor;
new t148();
