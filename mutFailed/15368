class C3 {
    static [0];
    static [4092] = 0;
    e;
    167;
    constructor(a5, a6) {
        const v7 = a5?.[0];
        const v8 = v7?.b;
        v7?.f;
        let {"f":v10,...v11} = v8;
        a5[Symbol.replace];
    }
}
const v15 = new C3(0, 4092);
const v16 = new C3(v15, 1024);
new C3(0, 4092);
function f18(a19, a20) {
    const o25 = {
        [v15](a22, a23) {
            try {
                a23.e = a23;
            } catch(e24) {
            }
            return this;
        },
        "d": a19,
        "h": a20,
        "g": a19,
        "f": C3,
    };
    return o25;
}
f18(v16, 0);
f18(v16, 0);
function f28(a29) {
    return a29;
}
const o32 = {
    "type": "function",
};
const v33 = new Worker(f28, o32);
try { v33.postMessage(); } catch (e) {}
f18(v16, 1024);
const v37 = new Float32Array(Float32Array);
for (let v38 = 0; v38 < 25; v38++) {
    const v39 = [1073741824,1073741823,1376142744,1073741825];
    function f40(a41, a42, a43, a44) {
        function f46() {
            return Float32Array;
        }
        try { undefined(); } catch (e) {}
        const v50 = new Int8Array(v37, a43, v38);
        function f51(a52, a53) {
            return v37;
        }
        f51(v39, v37);
        v50.buffer;
        %OptimizeFunctionOnNextCall(f46);
        try { v39["find"](); } catch (e) {}
        return arguments;
    }
    for (let v58 = 0; v58 < 10; v58++) {
        f40(v37, v38, v58, Float32Array);
    }
}
