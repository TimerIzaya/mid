try { ("number").trim(); } catch (e) {}
class C7 {
    ["hHWx"];
    static n(a9, a10) {
        for (let v11 = 0; v11 < 32; v11++) {
            const t5 = "number";
            t5["p" + v11] = v11;
        }
        return "toString";
    }
    static #c = "zqcb";
    1073741825;
    d = "split";
    static #h;
}
try { C7.apply("zqcb", "split"); } catch (e) {}
const v15 = new C7();
v15[1073741825];
const v17 = new C7();
v17[1073741825] = v17;
new C7();
9 % 9;
function f28(a29) {
    const o30 = {
    };
    const v32 = new Proxy("toString", o30);
    return v32;
}
Int16Array[Symbol.toPrimitive] = f28;
new Int16Array(4096);
function f36() {
}
try { f36.call(256); } catch (e) {}
class C38 {
    [Int16Array];
}
const v39 = new C38();
const v40 = new C38(f36, 4096, 256, 64);
function f41(a42, a43) {
    const v45 = new Int8Array();
    v45.buffer.slice();
    return v39;
}
v40.constructor = f41;
const v48 = v40?.constructor;
try { new v48(); } catch (e) {}
