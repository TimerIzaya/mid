const v4 = -8n + -8n;
const v5 = /L/gumy;
try { v5.constructor(4294967296n, v4); } catch (e) {}
/abc+?/d;
const v8 = /o+/vds;
v8.d = v8;
const v9 = [4294967296n,v8,-8n,null,v5];
const v10 = [v9,v9,v8];
v10[1] = v10;
const v11 = [-8n];
v11.length;
const v15 = new Float32Array(1155);
v15[1081] = v15;
new Float32Array(2332);
Float64Array.length;
new Float64Array(1024);
function F23() {
    if (!new.target) { throw 'must be called with new'; }
    const v25 = this?.constructor;
    try { new v25(); } catch (e) {}
    for (let v27 = 0; v27 < 32; v27++) {
        "p" + "p";
    }
}
const v30 = new F23();
const v31 = new F23();
const v32 = new F23();
v32.b = v32;
v31[v31];
const v35 = v30[-1];
new WeakSet();
BigInt64Array.d = BigInt64Array;
const v40 = new BigInt64Array(7);
v40[v40] = v35;
gc.d = gc;
const t35 = null;
t35();
-128n ^ -128n;
-128n + -128n;
function F49(a51, a52, a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
    const v55 = this?.constructor;
    try { new v55(Float32Array, Float32Array, v11, this); } catch (e) {}
}
new F49(undefined, undefined, -128n);
