const v0 = [0.8228572942575995,-581.2900165732437,0.31822958635794396,2.6979383683581837,1000000.0,-3.0,-1e-15,-232618.65714548423,-2.3347803026287135];
const v1 = [249.55433833691268,0.9109742100252046];
const v2 = [-6.646945327769343e+307];
class C3 {
    static #o(a5, a6) {
        const v8 = new Float64Array();
        v8 > Uint32Array;
        try {
        const t0 = 9907n;
        t0();
        } catch (e) {}
        try {
            v0.b = a6;
        } catch(e13) {
        }
        return this;
    }
    static {
        for (let v15 = 0; v15 < 25; v15++) {
            function f16(a17, a18, a19, a20) {
                const v23 = new Float32Array(this, a20);
                function f25() {
                    return a17;
                }
                try { new Date(this, v15, 84, f16, v15); } catch (e) {}
                const v28 = new Date();
                const v29 = [-2,257,-107178159,-35269,9223372036854775807,1203530861,-32678];
                try { new Proxy(v1, a20); } catch (e) {}
                const v32 = new Proxy(v29, v28);
                v32[0] = v32;
                const o33 = {
                    __proto__: v32,
                };
                o33[2] = o33;
                class C35 extends v23.constructor {
                }
                function f36(a37, a38) {
                }
                try { f36(f16, v15); } catch (e) {}
                %OptimizeFunctionOnNextCall(f25);
                const o40 = {
                    __proto__: arguments,
                };
            }
            for (let v41 = 0; v41 < 5; v41++) {
                f16();
            }
        }
    }
    3;
    static #a;
    #b = v0;
    #a = v2;
    #e;
    f;
}
new C3();
new C3();
new C3();
const v47 = [1073741824,1073741823,1376142744,1073741825];
function f48(a49, a50, a51, a52) {
    try { v47["find"](..."find", a52, ...v2, ...v47); } catch (e) {}
    const v57 = Symbol.isConcatSpreadable;
    const v58 = v57.description;
    const v59 = Array(a51);
    try { v59.groupToMap(v57, v58, f48, v59, v57); } catch (e) {}
    return v2;
}
for (let v61 = 0; v61 < 5; v61++) {
    f48();
}
const v69 = ["bpkzx","bpkzx","bpkzx"];
function f70(a71, a72) {
    const v73 = [1000000000.0,2.2250738585072014e-308,-3.0,-2.2250738585072014e-308,-2.2250738585072014e-308,-6.525028373249204e+307,-7.851646360254072e+307,0.6785915059434757,-0.0];
    class C74 {
    }
    C74[Symbol.replace] = v73;
    return a72;
}
f70();
const v79 = "bpkzx" * [v69,v69,v69];
try {
    v69.length = v79;
} catch(e80) {
}
