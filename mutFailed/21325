[2.540142114948558e+307,-9.104450277866382,-1000.0,-3.0,-8.742854634311605,212192.1672978045,-3.0,NaN,0.31366752779726925];
const v1 = [-1.7976931348623157e+308,-1.7601507719599585];
[-544839.0974708302];
function f3() {
    return v1;
}
this.setTimeout();
class C7 {
}
class C9 {
}
C9.toString = Array;
const v10 = new C7();
try { v10.propertyIsEnumerable(C9); } catch (e) {}
new Float32Array(4096);
function f14() {
    new ArrayBuffer(ArrayBuffer, ArrayBuffer);
    return f14;
}
%OptimizeFunctionOnNextCall(f14);
new Int8Array(3873);
try {
} catch(e21) {
}
const v24 = new Uint8ClampedArray(3269);
const v25 = new Uint8ClampedArray(v24);
new Uint16Array(v25);
new Int16Array(4096);
class C30 {
}
class C32 {
}
C32[Symbol.toPrimitive] = f3;
const v35 = [10617.622628886602,-5.0,1.7976931348623157e+308,-8.220199247866622e+307,1000000000000.0,0.0,48740.75682475441,-1000000000.0,6.407443663238073,369.9978678982163];
function f36() {
    function f37(a38) {
        function f39() {
            return f39;
        }
        const v40 = /{}(x)(x)(x)\4*a{0}a|b/msy;
        const v42 = new BigUint64Array();
        function F43(a45, a46, a47) {
            if (!new.target) { throw 'must be called with new'; }
            const v48 = this.constructor;
            try { new v48(BigUint64Array, v42, v42); } catch (e) {}
            a47[1];
            function f52(a53, a54) {
                a54 / a54;
                arguments[1];
                arguments.toString = a53;
            }
            try { f52(f39, v40); } catch (e) {}
            f52(v48, 8077n);
        }
        return v42;
    }
    return f37;
}
Object.defineProperty(v35, "toString", { writable: true, configurable: true, get: f36 });
Date.parse(v35);
const v62 = (a63, a64, a65, a66) => {
    'use strict';
    return a63;
};
C32.toString = Array;
const v67 = new C30();
class C68 {
}
const v69 = new C68();
Math.tanh(-v69);
try { v67.propertyIsEnumerable(C32); } catch (e) {}
