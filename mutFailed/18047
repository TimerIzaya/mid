function f3(a4, a5) {
    const o13 = {
        [a4]: 10,
        [1622062510](a7, a8) {
            this[36];
            return a4;
        },
        "c": a4,
        n(a11, a12) {
            return a11;
        },
        "d": 2147483649,
        ...a5,
        5: a4,
        __proto__: a5,
    };
    return o13;
}
const v14 = f3(1622062510, f3);
const v16 = new isFinite();
v16.lastIndexOf(v16, v14);
const v20 = new Uint32Array(v14);
const v22 = Array.toPrimitive;
v20[v22] = gc;
f3(10, f3(2147483649, v14, 1622062510, v22));
new Array(2);
const o29 = {
    ..."name",
};
const v30 = [o29,o29,o29,o29];
const v32 = 28621 + 28621;
function f33() {
    return v30;
}
const o35 = {
    ...o29,
};
o35.length = v32;
Reflect.apply(f33, v30, o35);
function F37() {
    if (!new.target) { throw 'must be called with new'; }
    for (let v39 = 0; v39 < 32; v39++) {
        "wMV" + v39;
    }
}
const v42 = new F37();
const v43 = new F37();
const o44 = {
};
try {
    new Float64Array(127);
} catch(e48) {
}
new F37();
const v50 = [];
try {
    o44.d = v50;
} catch(e51) {
}
v43[v43];
const v55 = new Uint8Array();
class C56 {
    static {
        this.__proto__ = v55;
    }
    static set g(a59) {
        try {
            super.keys();
        } catch(e61) {
        }
    }
}
const v62 = v42[-1];
new WeakSet();
const v67 = new BigInt64Array(7);
v67[v67] = v62;
gc.d = gc;
gc();
-128n + -128n;
function F75(a77, a78, a79, a80) {
    if (!new.target) { throw 'must be called with new'; }
}
new F75(undefined, undefined, -128n);
