function f3(a4) {
    const o12 = {
        "e": 10n,
        "f": 10n,
        [a4]: 919559504n,
        "b": a4,
        [0n]: 10n,
        "h": 919559504n,
        o(a6) {
            const o10 = {
                valueOf(a8, a9) {
                },
                __proto__: this,
                "d": 10n,
            };
            o10 & a6;
            return a6;
        },
    };
    return o12;
}
let v13 = f3(f3);
const o15 = {
};
new ArrayBuffer(o15, 0);
const v18 = f3(v13);
new BigUint64Array(1);
const t27 = [3.0,NaN,-1000000000.0,595974.7516182172,-1e-15,0.6881218471964052];
t27[16] = 2.220446049250313e-16;
const v24 = f3(v18);
class C25 {
    #f = 919559504n;
    constructor(a27, a28, a29, a30) {
        let v32 = 268435439;
        let v33 = 261.30290625783323;
        Math.log1p(v32);
        const v35 = v33++;
        v13++;
        Math.atanh(v35);
        v32--;
        Math.d = Math;
        class C39 {
        }
        class C40 {
        }
        const v42 = Array(C40);
        const v43 = new C40();
        function f44(a45, a46, a47, a48) {
            return a47;
        }
        class C49 extends v33 {
            constructor(a51, a52, a53) {
                super(v43);
                for (let v54 = 0; v54 < 25; v54++) {
                    "p" + v54;
                    const v57 = v42.includes;
                    try { v57(); } catch (e) {}
                    const v61 = new BigInt64Array(2325);
                    for (const v62 in v61) {
                    }
                }
            }
        }
        v13 ** +v32;
    }
}
const v65 = new C25(v13, 10n, v24, 0n);
new v24(C25, v18, v65, 919559504n);
function F67(a69, a70, a71, a72) {
    if (!new.target) { throw 'must be called with new'; }
    function f74() {
        return ("Vre").constructor.fromCodePoint(undefined);
    }
    try { f74(); } catch (e) {}
}
new C25(v18, 0n, v13, 0n);
class C80 extends C25 {
    536870888;
    static #b;
    #m(a82, a83, a84) {
        const v85 = new f3(a82);
        a82[a84];
        super[v24] = v85;
        try {
            this.#b = a84;
        } catch(e87) {
        }
        return C25;
    }
}
new C80();
const t91 = 2.220446049250313e-16;
new t91();
let v90 = 0;
new Int8Array(v90, v90, v90--);
const v95 = new Float64Array();
const v99 = new Float32Array(4096);
[v99,Uint32Array,[v95,Uint32Array,v99]];
new C80();
function F104(a106, a107) {
    if (!new.target) { throw 'must be called with new'; }
    const v108 = this.constructor;
    let v109;
    try { v109 = new v108(); } catch (e) {}
    v13 << v109;
}
new F104();
class C112 extends F104 {
}
new v95();
