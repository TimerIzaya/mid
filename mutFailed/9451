class C3 {
    p(a5, a6) {
        const v7 = super.b;
        v7?.[v7];
        this.g;
        return -37242;
    }
    static d;
    static #p(a11) {
        class C13 extends this.constructor {
            static 3248840980 = this;
            3 = this;
        }
        new C13();
        return -2.220446049250313e-16;
    }
}
const v15 = new C3();
const v16 = v15?.constructor;
let v17;
try { v17 = new v16(); } catch (e) {}
const v18 = new C3();
function f19(a20) {
    v18 != v17 ? v18 : v17;
    return v16;
}
v18.constructor = f19;
const v23 = v18?.constructor;
let v24;
try { v24 = new v23(); } catch (e) {}
new C3();
2147483649 >> 2147483649;
const v35 = new Map();
function f36(a37) {
    let v38 = 0;
    while (v38 < 7) {
        v38++;
    }
    return v24;
}
v35[Symbol.toPrimitive] = f36;
function f44(a45, a46) {
    const o53 = {
        "a": a46,
        [v35]: Map,
        [2221](a48, a49, a50) {
        },
        ...v35,
        [a46]: Map,
        valueOf(a52) {
        },
    };
    o53.a;
    return a46;
}
for (let v55 = 0; v55 < 395; v55++) {
    v55 * v55;
    f44();
}
const o58 = {
};
Object.defineProperty(o58, "g", { writable: true, configurable: true, enumerable: true, value: o58 });
o58.g = o58;
o58.g = o58;
