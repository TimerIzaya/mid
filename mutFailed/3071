const v0 = [];
function f4() {
    return 65535;
}
function F5(a7, a8) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v0;
    } catch(e9) {
    }
    try {
        this.b = a7;
    } catch(e10) {
    }
}
const v11 = new F5(65535, -59993);
new F5(65535, 65535);
const v13 = new F5(-59993, 65535);
const v14 = [1032381315,257,-1117503738,2147483647,15763];
let v15 = [-1958616529,8,2147483649,0,11,268435456,-536870912,9,9007199254740991,55160];
try {
    v14.b = v15;
} catch(e16) {
}
const v20 = [8,-9965];
[v11,v20,v20];
[v13];
const v23 = [f4,v20];
const v25 = v13.__proto__;
const v27 = [Reflect,Reflect];
Reflect.construct(v25, v27, v25);
%VerifyType(v15);
class C30 {
    [-1] = -1.6777590795239637e+308;
}
const v31 = new C30();
const v32 = new C30();
const v33 = new C30();
class C34 {
    constructor(a36, a37, a38, a39) {
        for (const v40 in a37) {
        }
        a38.d = "8";
    }
}
Math.cbrt(1073741824);
v20[C34] = -2147483649;
Object.defineProperty(Reflect, v27, { configurable: true, enumerable: true, get: f4 });
f4();
v15 |= v23;
const v46 = Symbol.toStringTag;
const t51 = "8";
t51[v46] = v46;
new C34(-1.6777590795239637e+308, C30, v31);
const v48 = new C34(v32, v31, v31);
new C34(v48, v33, C34);
