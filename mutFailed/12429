const v0 = [-1,14,10,256,-9007199254740991,-432887871,10000,10];
const v1 = [-2,-9,14198,-65535,10000,9];
const v2 = [-4,-1863611427,2,776517738,1537098697,44942];
const v4 = new WeakMap();
class C11 {
    constructor(a13, a14) {
        try { this.toString(); } catch (e) {}
        [3.5641395262500613];
        [1.3700601759691885e+308,-2.220446049250313e-16,836.7382369326358,1.225772114842526e+307,3.0,2.2250738585072014e-308,-1000000.0,-8.255796412164928,-3.0,-5.0];
        [-1.585767289435801e+308,1e-15,-Infinity];
    }
    #m(a20, a21, a22) {
        super.d = a22[v1];
        return v0;
    }
    [v4] = C11;
}
const v24 = new C11(v0, v1);
new C11(v2, 40828);
const v26 = new C11(v24, 268435441);
let v28 = Int16Array;
function f29(a30) {
    const o33 = {
        "maxByteLength": 932,
    };
    const v35 = new ArrayBuffer(106, o33);
    new Float64Array(v35);
    return 9007199254740991;
}
v28[Symbol.toPrimitive] = f29;
const v40 = new v28(7);
const v42 = 1024 * 1024;
new Uint16Array(1024);
new Float32Array(3415);
let v48 = 12;
v48++;
Int16Array.prototype = Int16Array;
new Int16Array(15);
new BigUint64Array(10);
Float32Array.prototype = Float32Array;
const v57 = new Float32Array(2494);
try { v57.find(Uint16Array); } catch (e) {}
const v59 = [7,v57];
const v61 = ([10,7,v2,v40])?.reverse;
try { v61(); } catch (e) {}
[v26,7];
const v66 = new Int32Array(v42);
const v68 = v28--;
/S4/gvm;
/a?abc+e6H*/gvmsy;
/G(?:ab|cde)b?/udim;
const o73 = {
};
new Proxy(v59, o73);
v66["lastIndexOf"](v68);
