const v0 = [];
function f1() {
    return f1;
}
function f2() {
    return v0;
}
new Float64Array(2);
new Float32Array(1);
new Int32Array(v0);
function F18() {
    if (!new.target) { throw 'must be called with new'; }
    function F20() {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v22 = new F20();
    const v23 = v22.__defineSetter__;
    try { v23(); } catch (e) {}
    function f25(a26, a27) {
        const o28 = {
        };
        return o28;
    }
    const v29 = F20();
    function f30() {
    }
    const v33 = new Float32Array();
    for (const v34 of v33) {
        Object.defineProperty(v29, v33, { configurable: true, enumerable: true, get: f25, set: f30 });
    }
}
new F18();
new F18();
new F18();
