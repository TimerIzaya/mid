[];
[-2.0,798.1237445488182,-1e-15,927.3153050229976,-636.0399212871339,-1000000000000.0,-2.1260349136061082e+307];
[5.0,1000000000000.0,0.921618030309597,481.23298110982773,-3.936406464611769e+307,-2.2250738585072014e-308];
[81433.59238001006,1.7976931348623157e+308,0.9823786013077331];
new Int32Array(221);
const v9 = new Uint32Array(2003);
new Uint16Array(1297);
const v14 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
for (let v15 = 0; v15 < 25; v15++) {
    v14["p" + v15] = v15;
}
const v19 = [601759695];
function f20() {
    ("-1723624938").slice(9);
    return v9;
}
v19[Symbol.toPrimitive] = f20;
const v26 = [1073741824,1073741823,1376142744,1073741825];
function f27(a28, a29, a30, a31) {
    a28.toString = f20;
    function f32() {
        let v36 = -656317.0233810891;
        const v37 = 10050 << 268435441;
        v36++ ^ 268435441;
        10050 % v37;
        return 10050;
    }
    Object.defineProperty(a31, Symbol.toPrimitive, { enumerable: true, value: f32 });
    function f43() {
        ("Vre")["concat"]("concat", a31, a29);
        let v51 = Float64Array;
        v51 = a29;
        v14.length;
        try {
            v26.forEach();
        } catch(e54) {
        }
        Symbol.toPrimitive;
        const o61 = {
            toString(a58, a59) {
                return a31 && v51;
            },
        };
        const o62 = {
        };
        new Proxy(Uint8ClampedArray, o62);
        o61[9] = a28;
        const o70 = {
            [-4294967297n](a66, a67, a68, a69) {
            },
            ...v19,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            5: -4294967295,
        };
        return f27;
    }
    f43();
    %OptimizeFunctionOnNextCall(f43);
    return -4294967297n;
}
for (let v72 = 0; v72 < 10; v72++) {
    f27();
}
%OptimizeFunctionOnNextCall(f27);
f27(v19, v19, v14, v14);
