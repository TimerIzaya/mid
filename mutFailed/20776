new Float64Array(1024);
const v5 = new Uint16Array(3508, Uint16Array);
new Int8Array(157);
new Int8Array(2);
new Int16Array(2411);
new v5(128);
const v20 = /N\u0034/gumsy;
v20.b = v20;
const v21 = /Z8+/vdis;
v21.e = v21;
const v22 = /(?!\1(a\1)\1)\1/gvdi;
class C23 {
    static 1073741824 = v22;
    #toString(a25, a26, a27, a28) {
        Object.defineProperty(v21, "h", { configurable: true, enumerable: true, value: "3" });
        return v20;
    }
    static #o(a30, a31, a32) {
        this.setInt32(this, "d", v21);
        v22 >>> (a31 - v22);
        return v22;
    }
}
new C23();
const v37 = new C23();
const v38 = v37?.constructor;
try { v38(); } catch (e) {}
const v40 = new C23();
const v41 = v40.__lookupGetter__;
let v42;
try { v42 = v41(v40); } catch (e) {}
class C46 {
    set e(a48) {
        Math.ceil(Math.fround());
    }
    m(a53) {
    }
    e;
}
C46.e = C46;
function f54() {
    return C23;
}
function f55(a56) {
    class C57 {
        constructor(a59, a60, a61) {
            function f62(a63, a64, a65) {
                for (let i = 0; i < 5; i++) {
                    class C67 extends Set {
                        #m(a69, a70) {
                        }
                    }
                }
                return v22;
            }
        }
    }
    return C57;
}
Object.defineProperty(C46, 0, { configurable: true, get: f54, set: f55 });
const v71 = new C46(v5);
const v72 = new C46();
new C46();
let v74 = ["number",v42,v71];
const v76 = [[v72,"number","R"],C46,C46,v74,C23,Uint16Array,Int16Array];
try { v76.map(v74); } catch (e) {}
"9" >= "9";
try { ("string").small(); } catch (e) {}
const v83 = ("NN")["9"];
C46[0] >>= v83;
let v84;
try { v84 = v83(v72, v71, v5); } catch (e) {}
v74 = v84;
let v85 = 2147483648;
v85 === v85;
while (v85 < 7) {
    v85++;
}
