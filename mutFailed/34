[7,128];
const v4 = [13,-2103725161,15240,-9223372036854775807,1077763702,256,-1024,9,1073741823,-2];
const v5 = [40213,422333454,47387,65536,-51830];
const v12 = gc();
const v14 = new BigInt64Array();
("boolean").split("toString");
function f19(a20, a21) {
    const o35 = {
        "c": -1628878962,
        "a": 15135,
        "d": v5,
        __proto__: 15135,
        "g": -1628878962,
        "type": "boolean",
        "a": v14,
        set b(a23) {
        },
        "g": 15135,
        "b": a21,
        get f() {
            super[1000000.0] = this;
            try {
                new a20(9);
                function f28() {
                    return f28;
                }
                const o30 = {
                    [f28]() {
                    },
                };
                [a21];
                v4.copyWithin(8, -268435456, -256);
            } catch(e34) {
            }
            return this;
        },
    };
    return o35;
}
f19(925.1427495594241, v4);
f19(317008.8127941969, -4);
f19(1000000.0, v4);
new BigUint64Array();
v12[2445191368] = 268435441n;
