class C3 {
    static valueOf(a5) {
        %VerifyType(8n);
        function f8() {
            for (let [i12, i13] = (() => {
                    [0.38057796469390925,-3.0,-518688.06248081743,-2.0,107.8968501375,-400463.65452600387,-222.36741891958593,-1000.0,-5.415934286194992,1000000000000.0];
                    return [0, 10];
                })();
                i12 < i12;
                ) {
            }
            return f8;
        }
        return this;
    }
    constructor(a21, a22) {
        function f24() {
            const o27 = {
                [null]() {
                    super.b;
                },
                "f": null,
            };
            return o27;
        }
        f24();
        %OptimizeFunctionOnNextCall(f24);
        let v29;
        try { v29 = this.valueOf(a22, 848739616n); } catch (e) {}
        v29.valueOf = f24;
        let v30;
        try { v30 = v29(this, -16n, a22, v29); } catch (e) {}
        const v31 = [this,v29,a21];
        const v32 = [v30,v31,-16n,v31,8n];
        Object.defineProperty(v32, 2360, { value: 8n });
        v32[2360] = v31;
        [a22,v29];
        this[a22] <<= v29;
        v32[2360];
        [-984503.961837067,-3.0,-984503.961837067];
        const o38 = {
            ...v32,
        };
    }
}
const v39 = new C3(848739616n, 8n);
const v40 = new C3(-16n, -16n);
new C3(8n, -16n);
function F43() {
    if (!new.target) { throw 'must be called with new'; }
}
function f45(a46) {
    function F47(a49, a50) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.f = a50;
        } catch(e51) {
        }
        try {
            this.d = a46;
        } catch(e52) {
        }
        try {
            this.a = a46;
        } catch(e53) {
        }
    }
    const v54 = new F47(C3, a46);
    const v55 = new F47(a46, v54);
    new F47(v55, v55);
    return a46;
}
F43.toString = f45;
const v59 = new Float32Array(7);
v59.join(F43);
("Vre").fixed();
function F66(a68, a69, a70, a71) {
    if (!new.target) { throw 'must be called with new'; }
    const v72 = this.constructor;
    try { new v72(0, F66, F66); } catch (e) {}
    const t80 = a70.constructor;
    new t80();
}
const v76 = [C3,848739616n,1.8667389706967334,1.8667389706967334];
[v39,v76,v76];
[8n,1.8667389706967334,v40,v76];
const v83 = Array(19793);
const v84 = [v83,v83,v83,v83];
[[v84,v84,v84]];
for (let v88 = 0; v88 < 5; v88++) {
    function f89() {
        const v90 = [-Infinity,1.7976931348623157e+308,1.0,1.7976931348623157e+308,-1.0,Infinity];
        let v91 = -65536;
        v91--;
        v90.length >>>= v91;
        return f89;
    }
    f89();
    %OptimizeFunctionOnNextCall(f89);
}
