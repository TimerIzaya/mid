const v0 = [];
function f1() {
    const o17 = {
        __proto__: v0,
        get d() {
            function f3(a4, a5, a6) {
                'use strict';
                return a4;
            }
            return this;
        },
        [v0]: v0,
        o() {
            let v8;
            try { v8 = this.unregister(this, v0); } catch (e) {}
            v8 * 0;
            Math.round(v8 || 0);
            Math.hypot(v0);
            Math.abs(0);
            return this + v0;
        },
    };
    return o17;
}
const v18 = f1();
const v19 = f1();
let v20;
try { v20 = v19.at(f1); } catch (e) {}
const v21 = v20();
try { v21.toLocaleString(); } catch (e) {}
function f23(a24) {
    try { a24.values(); } catch (e) {}
    const o41 = {
        valueOf(a27, a28, a29, a30) {
            a30[Symbol.toStringTag] = this;
            super[a24];
            const o36 = {
                "maxByteLength": 3246,
            };
            new ArrayBuffer(2, o36);
            new Uint8ClampedArray(Uint8ClampedArray);
            return a24;
        },
    };
    return o41;
}
const v42 = f23(v18);
try { v42.valueOf(f23, f23, v21, f23); } catch (e) {}
const v44 = f23(v21);
const v45 = f23(v18);
try { v45.valueOf(v19, v21, v44, v19); } catch (e) {}
const v52 = new Int16Array(-708.8547910796503);
for (const v53 in v52) {
    v53[0];
    try { Math.acosh(Math); } catch (e) {}
    Math.expm1(v53);
}
