function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        a5.h = a5;
    } catch(e6) {
    }
    try {
        this.g = a5;
    } catch(e7) {
    }
}
const v8 = new F3(-12);
v8.a = v8;
const v9 = new F3(-268435456);
const v10 = new F3(129);
function F11(a13, a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    a14 >> a14;
    const v17 = a15?.constructor;
    try { new v17(a14); } catch (e) {}
    try {
        this.d = F3;
    } catch(e19) {
    }
    try {
        this.g = -268435456;
    } catch(e20) {
    }
    try {
        this.a = a14;
    } catch(e21) {
    }
}
const v22 = new F11(v8, -268435456, v9);
v22.g = v22;
const v23 = new F11(v10, 129, v9);
const v24 = v23?.constructor;
try { new v24(-12, v22, v9); } catch (e) {}
const v26 = new F11(v10, 129, v10);
v26.length;
let v29 = 12;
v29++;
const v31 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
let v32 = 2684;
v32--;
let v34 = -4294967297n;
v34++;
const v36 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v37 = [601759695];
const v38 = [1073741824,1073741823,1376142744,1073741825];
function f40(a41, a42, a43, a44) {
    a41 !== a43;
    function f46() {
        try { ("Vre").padEnd(f46); } catch (e) {}
        const v49 = ("Vre").codePointAt("Vre");
        const v51 = v31.length;
        try {
            v38.forEach(a42);
        } catch(e53) {
            const v54 = e53?.constructor;
            try { new v54(v49); } catch (e) {}
            e53.message;
        }
        const v57 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o63 = {
            toString(a59, a60) {
                (a44 && a42) <= v57;
            },
        };
        const o77 = {
            [522675525n](a66, a67) {
            },
            "c": v37,
            [v51](a69) {
            },
            [-1]: false,
            "b": -4294967295,
            [v34](a71, a72, a73, a74) {
            },
            "arguments": v36,
            set b(a76) {
            },
            256: a44,
            ...v37,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
        };
        return v37;
    }
    a44();
    %OptimizeFunctionOnNextCall(f46);
}
for (let v79 = 0; v79 < 5; v79++) {
    v79 - v79;
    f40(v79, v32);
}
-10 + -10;
Array(v29, -10);
