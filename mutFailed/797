function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 9223372036854775807;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
let v10 = -39471n;
class C11 {
    #valueOf(a13, a14, a15, a16) {
        super[v6];
        v10 = a13;
        return v5;
    }
    static #g = v4;
    static [39394n] = v5;
    static #h = v4;
    [39394n];
    6;
}
new C11();
new C11();
new C11();
const v24 = [-1440504730,15059,-128,65536,33714,-51192,-268435456,37915];
const v25 = [10000,-13,1073741825,1602065818,65536,16];
const v26 = [9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
try { v26.sort(v26); } catch (e) {}
[901134577,512,16,-13797,-1644674640,-4];
function F29(a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    const v33 = this?.constructor;
    try { new v33(this, a32); } catch (e) {}
    this.c = a31;
}
new F29(F29, F29);
const v36 = new F29(18074, 28602970);
v36.b = v36;
const v37 = new F29(18074, 18074);
new F29(18074, 28602970);
const v42 = new Uint8Array(v26, v37, 201);
new Uint8Array(268435440);
Uint8ClampedArray.b = Uint8ClampedArray;
v26[6] = v42;
v24.__proto__;
const v49 = new Uint8ClampedArray(-1301459449, v25, false, 39394n);
v49.lastIndexOf();
