let v2 = -60302;
const v3 = [3,v2,3];
const v7 = new Int16Array(2183);
let v10;
try { v10 = Int16Array(2183, v7, -2044829254); } catch (e) {}
const v11 = new Int16Array(8);
const v12 = v11?.toString;
try { new v12(); } catch (e) {}
async function f14(a15, a16, a17) {
    delete v11[-1000000000.0];
    let [v19,v20,...v21] = v7;
    v7[5];
    await v20;
}
const v24 = [3,-2044829254,3,v3];
function f25(a26, a27) {
    Math.atan2(Math, f25);
    return f25;
}
const v30 = [-2044829254,-2044829254,v24,-2044829254];
let v31;
try { v31 = v30.fill(f25); } catch (e) {}
try { v31.group(-1000000000.0); } catch (e) {}
let v34;
try { v34 = new Map(); } catch (e) {}
try { v34.set(v10, 8); } catch (e) {}
new Map();
[52734,32985,1073741824,1073741823,-27950,-16436,-4,65537,-4294967297,37054];
const v38 = v2--;
v38 / v38;
Uint32Array.name = Uint32Array;
Uint32Array.BYTES_PER_ELEMENT;
const v42 = new Uint32Array();
const v43 = v42?.entries;
try { new v43(); } catch (e) {}
try { BigInt64Array(Uint32Array, Uint32Array, v42); } catch (e) {}
let v47 = 128;
v47--;
new BigInt64Array(v47);
const v50 = [6778,512,-1648801104,438992413,1000,-62025];
v50.length = v50;
3.5885237423067196 & 3.5885237423067196;
function f53() {
    return 3.5885237423067196;
}
f53.arguments;
function f55(a56) {
    try {
        new f53();
    } catch(e58) {
    }
}
[-9,1073741825,-2058567898,1,16935,-9260];
f53();
class C63 {
    static #b = 1175953465;
}
try { new C63(); } catch (e) {}
C63.g = C63;
-9007199254740990n !== -9007199254740990n;
-11031n / -11031n;
try { new Uint8ClampedArray(8, v38, 3.5885237423067196); } catch (e) {}
const v72 = new Uint8ClampedArray(1907);
let v75 = "atan2";
try { v75.blink(); } catch (e) {}
const v77 = v75++;
Number.isNaN(v77);
v77 | v77;
Float64Array[2] = v75;
const v83 = /a$\P{Decimal_Number}/gvdims;
const v84 = v83?.test;
try { new v84(1682614915n); } catch (e) {}
const v86 = v83[v83];
for (let i = 0; i < 5; i++) {
    const v87 = v83.source;
    try { v86(true, v87, v87, v87); } catch (e) {}
    Math.c = Math;
    let v90 = true + true;
    v90--;
    Math.log(v90);
}
-43464885;
v72[7] = 43464885;
const v97 = v72.fill(512, 66)[762];
v97 * v97;
v72[-1] = 10;
