const v0 = [];
function f1() {
    return v0;
}
v0.toString = f1;
class C5 {
    #toString() {
        let v7;
        try { v7 = this(this); } catch (e) {}
        this >> this;
        return v7;
    }
    static [v0] = v0;
    constructor() {
        let v11 = -60511;
        const v14 = -1000000000.0 || v11;
        const v15 = v11++;
        Math.cosh(-1000000000.0);
        Math.asinh(v15);
        Math.acos(v14);
    }
}
const v19 = new C5();
const v20 = new C5();
const v21 = new C5();
const v22 = [v21,v0];
const v23 = [v20,v0,v19,v19];
[v22];
function F36(a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    const v40 = this?.constructor;
    try { new v40(this, this); } catch (e) {}
    try {
        this.c = 15;
    } catch(e42) {
    }
}
new F36(15);
const v44 = new F36(F36, 15, 364454227, v23);
class C45 extends F36 {
    [1073741823n];
    c = v44;
}
new C45();
new C45(19748);
new C45();
