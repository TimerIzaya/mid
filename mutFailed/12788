function f3() {
    return -1.7976931348623157e+308;
}
new Map();
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = a9;
    try {
        this.e = a8;
    } catch(e10) {
    }
}
const v11 = new F6(-1.7976931348623157e+308, -1000000000000.0);
const v12 = new F6(-1000000000000.0, -1000000000000.0);
const v13 = new F6(-1000000000000.0, -1000000000.0);
const v14 = [7,4,539078127,-14803,1];
const v15 = [-52717,2147483648,-13187,2,927053178,-29445,11401];
const v16 = [-11,-33246];
function f17(a18, a19, a20) {
    const o48 = {
        valueOf(a22, a23, a24) {
            v11 || -1.7976931348623157e+308;
            super.a;
            if (-1000000000000.0 !== v11) {
                try {
                    const v29 = [-9223372036854775807,-31958,-437619447,54990,9007199254740992,-9223372036854775807,8,128];
                    function F30() {
                        if (!new.target) { throw 'must be called with new'; }
                    }
                    function F32(a34, a35) {
                        if (!new.target) { throw 'must be called with new'; }
                        for (let v36 = 0; v36 < 10; v36++) {
                            "p" + v36;
                        }
                        const t34 = v29.constructor;
                        new t34(F30, a34);
                    }
                    const v41 = new F32();
                    const t38 = v41.constructor;
                    new t38();
                    v11.fuck(v16, undefined, v14, 14713n);
                } catch(e46) {
                }
            } else {
                new Map(v13);
            }
            return -1.7976931348623157e+308;
        },
    };
    return o48;
}
f17(f17(f3, v15, v11), v16, v12);
f17(v11, v16, v12);
const v52 = [-536870912,12,65535,268435440,59916,438058862,-15,1073741823,-9007199254740990];
v52.toString = f17;
v52.push(v52);
new Int8Array(v52);
