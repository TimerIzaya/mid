const v0 = [1.1254507017811495,-1.6306111398144603e+308,0.11622192270837517,6.256329864122122,1.7976931348623157e+308,-3.4343511676413634e+307,907165.5472012928,3.0];
const v1 = [-0.0,7.129959516265053,-1000000.0,3.0,0.9010790041975946,237080.73648173665,-5.0,4.0];
const v2 = [1000.0,0.921793463673959,0.0];
let v4 = new Map();
class C6 extends Map {
    static #p(a8, a9, a10) {
        super.size;
        v4 = this;
        for (let v12 = 0; v12 < 32; v12++) {
            this["p" + v12] = v12;
        }
        return a9;
    }
    #g;
    static e;
    f = v4;
    [v0] = v0;
}
const v15 = new C6();
const v16 = new C6();
new C6();
[Map];
const v19 = [v16,false,v2,v1];
[v19,v19,v16];
class C24 {
}
const v25 = new C24();
function f26() {
    const v29 = new BigInt64Array(v15.size);
    return v29;
}
Object.defineProperty(v25, "toString", { enumerable: true, value: f26 });
ReferenceError(v25);
ReferenceError();
