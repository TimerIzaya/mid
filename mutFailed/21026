const v2 = new Float64Array(13);
let v3 = 1368;
let v4 = Int32Array;
const v5 = new v4(v3);
new Uint8Array(9);
new Uint16Array(14);
let v12 = 3725;
const v14 = new Uint8Array(v12);
let v16 = 16;
const v18 = v12 % v16;
const v19 = v16++;
const v20 = -1073741824 - v19;
const v21 = Math.random();
Math.sign(v4);
let v23 = v20 << v19;
[v23,v4,v12,...v3] = v5;
let v27 = 7.062274534472522;
const v28 = v27--;
v27 >> 660847124;
-v28;
Math.log1p(v27);
+v12;
let v33 = 45;
const v35 = new Int8Array(v33);
const v41 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v42 = [601759695];
const v43 = [1073741824,1073741823,1376142744,1073741825];
function f45(a46, a47, a48, a49) {
    /q1Pl\cj\cJ\ci\cI\ck\cK9kAA[\cZ]/udis;
    /(a\1)/vdm;
    /a*b/im;
    ({"byteLength":v23,"h":v33,} = v14);
    v43 * v2;
    const v54 = a48 | a48;
    arguments[2] = arguments;
    function f56() {
        const v58 = ("Vre").toLocaleUpperCase;
        try { v58.toString(); } catch (e) {}
        let v60;
        try { v60 = v58(a48, "Vre", a46); } catch (e) {}
        const v61 = ("Vre").fixed(v60, -4294967297n, a46);
        const v62 = v61[6];
        const v63 = v61.codePointAt();
        let v65 = -268435456;
        const v66 = v65--;
        v66 % v66;
        const o87 = {
            "c": -4294967297n,
            [522675525n](a69, a70) {
            },
            ..."Vre",
            "maxByteLength": -128,
            "arguments": v42,
            [v63]: -1547267477n,
            __proto__: a48,
            "d": v66,
            "b": v5,
            "g": v63,
            ...v35,
            "e": arguments,
            [v14]: v21,
            "e": -4294967295,
            "h": -128,
            valueOf(a72, a73) {
                return a47;
            },
            ...v43,
            "f": v54,
            "a": v60,
            ...arguments,
            ...v41,
            "e": v54,
            "e": v65,
            "maxByteLength": -4294967295,
            "arguments": v41,
            ...v42,
            "type": "Vre",
            ..."Vre",
            valueOf(a75, a76) {
                return -4294967295;
            },
            [a48]: -1547267477n,
            ...v35,
            [v66]: v18,
            "c": v65,
            "type": "Vre",
            "type": "Vre",
            [v41](a78, a79, a80) {
            },
            o(a82) {
                return a82;
            },
            "type": "o",
            "type": "129",
            toString(a84, a85, a86) {
            },
        };
        const v89 = [13];
        Reflect.apply(v35.at, v62, v89);
        new Float32Array(87);
        new BigInt64Array(3);
        new Int16Array(256);
        return arguments;
    }
    f56();
    %OptimizeFunctionOnNextCall(f56);
    return a48;
}
for (let v102 = 0; v102 < 5; v102++) {
    f45(v42, v102, v102);
}
function f104(a105, a106, a107, a108) {
    const v110 = new BigUint64Array();
    function F111() {
        if (!new.target) { throw 'must be called with new'; }
        try {
            Object.defineProperty(v110, 0, { writable: true, value: 4096 });
        } catch(e114) {
        }
    }
    const v115 = new F111();
    try { v115.constructor(); } catch (e) {}
    return -128;
}
for (let v117 = 0; v117 < 10; v117++) {
    f104();
}
%OptimizeFunctionOnNextCall(f104);
f104();
