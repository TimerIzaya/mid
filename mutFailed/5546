Math.pow(1073741824, 63922 | 1073741824);
const v8 = 1073741824 | 1073741824;
+"setFullYear";
"setFullYear" << 1073741824;
Math.log10(v8);
class C12 {
    constructor(a14) {
        super.e <<= Reflect.construct(a14, ["setFullYear",1300752439,"setFullYear"], a14);
        function f18() {
            return Reflect;
        }
    }
    #p(a20, a21) {
        try {
            a20.f = a20;
        } catch(e22) {
        }
        try {
            const t18 = "setFullYear";
            t18.toString = a21;
        } catch(e23) {
        }
        try { a21("QnPQ"); } catch (e) {}
        const v25 = ("QnPQ")[63922];
        try {
            v25.__proto__ = this;
        } catch(e26) {
        }
        return "QnPQ";
    }
}
new C12("QnPQ");
const v28 = new C12("QnPQ");
const v29 = new C12("setFullYear");
function F33(a35, a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a37;
    } catch(e38) {
    }
    try {
        this.a = "setFullYear";
    } catch(e39) {
    }
    try {
        this.h = 257;
    } catch(e40) {
    }
}
new F33(257, 268435440, "QnPQ");
new F33(268435440, 268435441, v28);
new F33(268435440, 1300752439, v29);
function f44() {
    return f44;
}
function F45(a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
}
const v49 = new F45();
v49.constructor = f44;
const v50 = new F45(F45, F45);
Object.defineProperty(v50, "constructor", { writable: true, configurable: true, value: f44 });
