const v0 = [2.787851812786201];
const v1 = [2.2250738585072014e-308,-825.5997067901446,-4.0,-1.7976931348623157e+308];
[Infinity,-4.765881648213098e+307,1.0,-300542.17446742277,-1.0,332.56451803038294];
class C9 {
    get b() {
        const o11 = {
            __proto__: this,
            "c": v1,
            "b": 5n,
        };
        return -2147483649n;
    }
    #a = 5n;
    #c = v0;
    [5n] = -2147483647n;
    1073741825 = v1;
}
new C9();
new C9();
const v14 = new C9();
class C16 {
    static #o() {
        const v18 = [-2147483648,-46456,1200954989,-4294967296,1];
        const v19 = [10,-13,-4294967297,-11,984,9,-24883,1024,5,10];
        const v20 = [23955,1426598775,2147483649];
        try {
            v19.#o(v19, v20, null, v19, v18);
        } catch(e22) {
        }
        return null;
    }
    #p() {
        const v24 = this[223];
        const v25 = super.g;
        let v26;
        try { v26 = v24.p(this, v25, v25, v25); } catch (e) {}
        this[null] = v26;
        new Map();
        return v25;
    }
}
const v29 = new C16(-2147483647n, v14);
const v30 = new C16();
const v31 = new C16();
class C32 {
    p(a34) {
        const v35 = null - a34;
        %VerifyType(v31);
        super[v29] = v35;
        a34?.[1858] ^ v35;
        for (let i40 = 0; i40 < 7; i40++) {
            try { v30.valueOf(i40, a34, v29, i40, i40); } catch (e) {}
        }
        const v51 = new BigUint64Array();
        v51.buffer.slice();
        Math.cos(Math);
        return C16;
    }
}
const v56 = new C32();
const v57 = new C32();
const v58 = new v31();
let v61 = -1024;
function F62(a64, a65, a66, a67) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = a66;
    try {
        this.f = C16;
    } catch(e68) {
    }
    try {
        this.e = v58;
    } catch(e69) {
    }
    try {
        this.a = a65;
    } catch(e70) {
    }
}
new F62(38767, v56, v29, v30);
new F62(38767, v58, C32, v56);
const v73 = new F62(v61, v57, v29, C16);
const v74 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v75 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
const v80 = new Uint32Array(v74, 0, 0);
function F81(a83, a84) {
    if (!new.target) { throw 'must be called with new'; }
}
const v85 = new F81(v75, 0);
new F81();
class C88 {
}
let v90 = 0;
while (v90 < 38767) {
    const v94 = Symbol.iterator;
    const o103 = {
        [v94]() {
            let v96 = 10;
            const o102 = {
                next() {
                    v96--;
                    const v100 = v96 == 0;
                    const o101 = {
                        "done": v100,
                        "value": v96,
                    };
                    return o101;
                },
            };
            return o102;
        },
    };
    v90++;
}
const o109 = {
    valueOf() {
        return "D2z";
    },
};
const v111 = /5*/gi;
[-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v113 = [601759695];
const v114 = [1073741824,1073741823,1376142744,1073741825];
const t123 = "b";
t123.e = "B";
function f117(a118, a119, a120, a121) {
    function f122() {
        let v125 = Float64Array;
        v125 = a120;
        b = v113;
        const v126 = v74.length;
        try {
            v74.forEach(v125);
        } catch(e128) {
        }
        const v129 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        let v131 = Symbol.toPrimitive;
        const o158 = {
            toString(a133, a134) {
                const v135 = a121 && v125;
                function f136() {
                    a133 *= v131;
                    return v125;
                }
                f122();
                a119 = Symbol("D2z");
                new Uint32Array(257);
                new Float32Array(47);
                new Uint16Array(3441);
                new Uint16Array(6);
                new Float32Array(0);
                new Int32Array(153);
                return v135 <= v129;
            },
        };
        const o182 = {
            "c": -4294967297n,
            [522675525n](a161, a162) {
            },
            "c": v113,
            valueOf(a164, a165) {
                return this;
            },
            "b": 10,
            [-4294967297n](a167, a168, a169, a170) {
                [-1.7976931348623157e+308,-4.047862669744725e+307,-2.2250738585072014e-308,0.790769162254034,0.024752255798642486,640440.6769019293,-2.0];
            },
            "c": 10,
            "e": -268435456,
            "maxByteLength": 10,
            "arguments": a120,
            ...v73,
            [a119]() {
                const o174 = {
                    next() {
                        return v111;
                    },
                };
            },
            "type": C88,
            ..."Vre",
            valueOf(a176, a177) {
                return o109;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            __proto__: C88,
            ...v125,
            "g": v0,
            "f": a118,
            "d": v80,
            "type": "Vre",
            "type": "Vre",
            toString(a179, a180, a181) {
            },
            5: 10,
            6: -268435456,
        };
        v131 = v125;
        new Float32Array(1334);
        v61 %= -268435456;
        new Uint32Array(v75, v126, v131);
        v85 - f122;
        new Float64Array(3);
        new Uint16Array(2);
    }
    f122();
    new Int8Array();
    %OptimizeFunctionOnNextCall(f122);
    try { v114["find"]("find", a121, v113, v114, 522675525n); } catch (e) {}
}
for (let v202 = 0; v202 < 10; v202++) {
    f117();
}
%OptimizeFunctionOnNextCall(f117);
f117();
