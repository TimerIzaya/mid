const v0 = [-1.0,-13.370414200403161,794773.6779954275,0.08803317176507541,995575.650839302,-251.3106466650246,1000000000000.0,2.2250738585072014e-308,-Infinity,82387.11337622069];
const v1 = [1000.0,-5.586674770254221,1.0,-681131.3724632079,-2.220446049250313e-16,-0.0,-1.0,-2.0,360.3503334325794,-1000000000000.0];
let v2 = [5.0,0.4830272055322149,-3.0];
function f3(a4) {
    a4[Symbol.toPrimitive] = f3;
    a4[4] = a4;
    const o12 = {
        set e(a8) {
            v2 = a4;
        },
        "a": v0,
        4: a4,
        "f": v2,
        [a4]: v0,
    };
    return o12;
}
const v13 = f3(v0);
f3(v1);
f3(v0);
const v16 = [-798483367];
v16.valueOf = f3;
try { v16.map(v13); } catch (e) {}
const v18 = [14];
const v19 = v18?.filter;
try { new v19(f3); } catch (e) {}
[8,63635,3,-46914,847733607,44638,4294967296,-1101962984,2147483649];
try { ("227331841").codePointAt(v16); } catch (e) {}
Array.f = v18;
Array.f = Array;
-5;
const v38 = 6.221456434799227e+306 << 6.221456434799227e+306;
v38 - v38;
