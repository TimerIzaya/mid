const v0 = [536870912,512,9];
const v1 = [992491624,-52359,536870912,-1240168781];
const v2 = [1961218635];
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.matchAll = a5;
    } catch(e7) {
    }
    try {
        this.f = a5;
    } catch(e8) {
    }
    try {
        this.e = a5;
    } catch(e9) {
    }
}
const v10 = new F3(v0, v0);
new F3(v1, v10);
new F3(v2, v10);
new Uint32Array(7);
new BigInt64Array(9);
new isFinite(3888);
function F26() {
    if (!new.target) { throw 'must be called with new'; }
    const v28 = this.toString();
    const v30 = new Set();
    const v31 = v30.add;
    try { v31(); } catch (e) {}
    const v35 = new Int16Array(2183);
    4087 > v28;
    let [,,...v37] = v35;
    function f38(a39) {
        function f41(a42) {
            this[1] >>= 4087;
            return F26;
        }
        this.onmessage = f41;
    }
    const o45 = {
        "type": "function",
    };
    new Worker(f38, o45);
}
new F26();
new F26();
