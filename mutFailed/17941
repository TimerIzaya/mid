class C3 {
    static ["c"] = "MAX_SAFE_INTEGER";
    static o(a5) {
        C3.__proto__;
        "number" ^ C3;
        return "number";
    }
    65535;
    constructor(a9) {
        this[this];
        let v13 = 32667;
        Math.sign("c" << "c");
        v13++;
    }
}
const v18 = new C3("MAX_SAFE_INTEGER");
new C3("number");
new C3("c");
new Date();
let v24 = 1000n;
function F28(a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    const v32 = this?.constructor;
    try { new v32(-827.9313408818487); } catch (e) {}
    let v34 = a30.length;
    v34--;
    try { this.constructor(); } catch (e) {}
}
new F28(F28);
function f38() {
    let v39 = -65535;
    v39 * v39;
    const o101 = {
        next() {
            v39--;
        },
        m(a44) {
            a44.f = a44;
            try { a44.next(f38); } catch (e) {}
            a44.c = a44;
            a44.h = a44;
            const o46 = {
            };
            o46.h = o46;
            o46.h = o46;
            function f47(a48, a49, a50) {
                return a48;
            }
            f47.caller = f47;
            try {
                o46.e = v39;
            } catch(e51) {
                const v55 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v55, o46);
            }
            try {
                const o57 = {
                };
                o57.h = o57;
            } catch(e58) {
            }
            const v60 = Math?.expm1;
            try { new v60(f47); } catch (e) {}
            let v62;
            try { v62 = Math.expm1(128); } catch (e) {}
            let v63 = -9007199254740991;
            v63++;
            const v65 = v63 >> v63;
            v65 - v65;
            class C67 {
                o(a69, a70, a71, a72) {
                }
            }
            const v73 = C67.name;
            try { v73.codePointAt(Math); } catch (e) {}
            const v77 = new Int8Array(3938);
            let v79 = 2080367192;
            let v80 = -128280886;
            Math.exp(v79);
            ++v79;
            const v83 = v62 >> v80;
            Math.log1p(v80);
            v80--;
            v83 & v62;
            let v87 = 3;
            let v88 = 0;
            v18.g;
            v24 & v24;
            v24 ^ -9007199254740990;
            --v24;
            v88++;
            for (let i = 0; i < 5; i++) {
                [...v87] = v77;
                v88++;
            }
            const o98 = {
            };
            try {
                const o99 = {
                };
            } catch(e100) {
            }
        },
    };
    o101.m(o101);
    const v105 = new Float32Array();
    const t106 = "nt";
    return delete t106[v105];
}
f38();
f38();
