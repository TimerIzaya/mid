function f0() {
    const o10 = {
        268435439: 9.439963376819534,
        get b() {
            const o8 = {
                "execution": f0,
                "type": "minor",
            };
            gc(o8);
            return "minor";
        },
    };
    return o10;
}
const v11 = f0();
const v12 = f0();
const v13 = f0();
const v14 = [0.0,-6.311473689058236,NaN];
[0.36364795770937053];
const v16 = [0.43348872782285564,-1.758604101403038e+307,1000000.0,-2.2250738585072014e-308,-1000000000000.0,2.0,-104998.50632337388,-287017.0134820518];
function F17(a19, a20, a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a19;
    } catch(e23) {
    }
    try {
        this.d = a20;
    } catch(e24) {
    }
}
const v25 = new F17(v14, v11, v13, v14);
new F17(v14, v25, v11, v25);
new F17(v16, v12, v11, v14);
const v28 = [];
const v29 = /a\q5(?:(?=a))a\11\P{gc=Decimal_Number}/gis;
function f31(a32, a33, a34, a35) {
    function F38(a40) {
        if (!new.target) { throw 'must be called with new'; }
        a40 ^ a40;
        const v42 = this.constructor;
        v42.length = v42;
        try { new v42(3n); } catch (e) {}
    }
    new BigInt64Array(4046);
    let v46 = undefined;
    const v47 = v46++;
    const v48 = v47 + v47;
    const v49 = v47 >> v47;
    const v50 = v49 >>> v49;
    for (let v51 = 0; v51 < 5; v51++) {
    }
    const v52 = v28.constructor;
    try { v52(); } catch (e) {}
    const v54 = new F38();
    function F55(a57, a58, a59) {
        if (!new.target) { throw 'must be called with new'; }
        this.f = v29;
    }
    const v60 = new F55(v48, 4096, v50);
    F55.f = v60;
    new F55(v54, v47);
    let o62 = {
    };
    [,...o62] = F17;
    return v29;
}
for (let v63 = 0; v63 < 5; v63++) {
    f31();
}
