let v2 = "uvrG";
class C3 {
    static get g() {
        this / v2;
        const v8 = new Array(1096);
        super[Array] = 5;
        return v8;
    }
    [v2];
    get f() {
        v2 >>= this;
        this[Symbol.toPrimitive] = this;
        return this;
    }
}
new C3();
const v13 = new C3();
function f14(a15) {
    return C3;
}
Object.defineProperty(v13, "toString", { configurable: true, enumerable: true, value: f14 });
const v19 = new C3();
class C20 extends C3 {
    #c;
    #d = v19;
    static #b;
    set d(a22) {
        try {
            v2.#c = a22;
        } catch(e23) {
        }
        v13.f %= a22;
        v19[5];
    }
    static e;
    [5];
    static [v13];
}
new C20();
new C20();
new C20();
function f28() {
    return v2;
}
function f32() {
    class C33 {
        constructor(a35) {
            function f36() {
                return f36;
            }
            Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f36 });
        }
    }
    const v37 = new C33();
    const v38 = v37.length(v37, C33);
    const v39 = new C33(v38);
    v39.length();
    const v41 = v39.length;
    const v42 = new v41(v41, f32, v38, f32, f32);
    v42.name = v42;
    return v41;
}
f32();
%PrepareFunctionForOptimization(f32);
f32();
%OptimizeFunctionOnNextCall(f32);
f32();
