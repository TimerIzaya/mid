function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const o6 = {
            "maxByteLength": 1000,
        };
        new ArrayBuffer(10000, o6);
    } catch(e8) {
    }
}
const v9 = new F1();
const v14 = [];
const v15 = [3.0,NaN,2.2250738585072014e-308,0.7793185707561511,3.9639593786765336e+307,438.7897065657694,1.7976931348623157e+308,0.6694720141233361,-952389.5319984192,-3.333354770552637e+307];
class C16 {
    constructor(a18) {
        let v20;
        try { v20 = Symbol(); } catch (e) {}
        Reflect.construct(v20, [F1,Reflect,Reflect,v20], a18);
        let v26 = 17972;
        351438314 - v20;
        const v29 = v26++;
        --v20;
        Math.imul(351438314, v29);
        for (let v32 = 0; v32 < 32; v32++) {
        }
        a18[Symbol.toStringTag] = v14;
    }
}
new C16(v14);
const v37 = new C16(v14);
const v38 = new F1(9, 9, v37, -12);
const v43 = Symbol.replace;
v38[v43] = v9;
const t33 = v37.constructor;
const v45 = new t33(v15);
new Uint8Array(14);
new Uint32Array(3820);
new Int8Array(2877);
v43.description >>= -12;
const o55 = {
};
new Proxy(v45, o55);
-9223372036854775808n - -9223372036854775808n;
