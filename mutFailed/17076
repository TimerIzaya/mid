new Array(3721);
257 * 257;
Float32Array.g = 257;
Float32Array.g = Float32Array;
const v6 = new Float32Array(3721);
let v7;
try { v7 = v6.find(Array); } catch (e) {}
const v10 = new Uint32Array(2);
v10.toString = Array;
v10[1];
try { v6.toSorted(3721); } catch (e) {}
1801 == 1801;
const v16 = new Uint16Array(1801);
v16.g = v7;
v16.g = v16;
function f17(a18, a19, a20) {
    a19 >>> a19;
    const v22 = a19--;
    v22 * v22;
    a20 !== v22;
    const o29 = {
        __proto__: v6,
        "e": a18,
        set h(a26) {
            try {
                new Uint32Array(a19);
            } catch(e28) {
            }
        },
        [v10]: 3721,
        "c": a19,
        "g": v16,
        "h": a18,
        "f": v6,
    };
    return o29;
}
const v30 = f17(1801, 257, 1801);
v30.BYTES_PER_ELEMENT = v30;
const v31 = f17(257, 257, 2);
v31.h = v31;
f17(3721, 1801, 1801);
("toString").match();
