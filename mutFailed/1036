const v3 = new Int32Array(1024);
[v3];
RegExp(RegExp);
function f9() {
    return -2.0;
}
class C11 {
}
new C11();
const v14 = new WeakSet();
const v15 = v14.has(v14);
const v17 = ([WeakSet,WeakSet,WeakSet,WeakSet]).copyWithin();
let v18;
try { v18 = v17.group(v15); } catch (e) {}
new WeakSet();
v18.fontsize();
const v25 = new Float32Array();
const v27 = new C11(268435440);
v27[6] = v25;
-Infinity;
const v30 = /a|b\p{Script=Greek}/gudis;
/a{0}/vm;
/(?:a?)*\u0060/isy;
function F35() {
    if (!new.target) { throw 'must be called with new'; }
}
new F35();
const v39 = new F35();
class C43 extends F35 {
    b = "number";
    set g(a45) {
        let v44 = this;
        ({"c":a45,"d":v44,} = v39);
    }
    static {
        const v47 = super[this];
        ("function").substring(v47, this, v47, "function", "8", this);
        super.c;
        try {
            v30.f = v47;
        } catch(e50) {
        }
    }
}
try {
const t0 = 1000000000.0;
t0(2.220446049250313e-16, Uint8ClampedArray, ...1000000000.0, -82.86062314585524);
} catch (e) {}
