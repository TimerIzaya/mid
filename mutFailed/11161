const v0 = /EOy*/udi;
const v1 = /uh(\xed\xb0\x80)\x01+/is;
const v2 = /\p{Changes_When_NFKC_Casefolded}/gudimsy;
const v3 = [v1,v2,v0,v0];
const v4 = [v0,v3,v3];
const v5 = [v4];
try { v5.map(v3); } catch (e) {}
try { ("function")["-268435456"](); } catch (e) {}
function F10() {
    if (!new.target) { throw 'must be called with new'; }
}
class C12 extends F10 {
}
class C13 {
    get a() {
        [-168667.31419584143];
        const v18 = new BigUint64Array(3375);
        let [v19,,v20,...v21] = v18;
        const v24 = new Uint8Array(6);
        function f25(a26, a27) {
            return f25;
        }
        const v30 = ["function",v24];
        const o31 = {
            "arguments": v30,
            "type": "function",
        };
        new Worker(f25, o31);
        [0.3366497152867096,1000000.0,-1.7976931348623157e+308,431.04080010147254,-2.4479023636280435e+307,-1.0];
        let v34 = [1.1531269092945902,0.4776371738732019,1000000.0,6.271414633199435e+307,-2.0,4.0];
        v34 = v3;
        v0.sticky ||= v2;
        return v4;
    }
    static b = v2;
    static #c;
    static c = v0;
    [v4] = v3;
}
C13.b = C13;
new C13();
const v36 = new C13();
const v37 = v36?.constructor;
new Uint16Array(12);
function f41() {
    new Int8Array(628786973);
    return C12;
}
try { new v37(); } catch (e) {}
new C13();
new Uint32Array(3);
const v52 = new Int32Array(3);
try { v52.slice(v52, 3); } catch (e) {}
~1382;
new Uint8Array(1382);
const v59 = new Map();
function F60(a62, a63, a64, a65) {
    if (!new.target) { throw 'must be called with new'; }
    const v66 = this.constructor;
    try { new v66(); } catch (e) {}
    const t60 = v59.constructor;
    const v69 = new t60();
    v69.set(v59, F60);
}
new F60(F60, v59, v59, v59);
class C72 {
}
const v73 = new C72();
new BigUint64Array(2);
const t69 = 0.3050534209767637;
new t69();
4.0 - 4.0;
const o81 = {
};
const v83 = new Proxy(v73, o81);
try { v83.propertyIsEnumerable(v83); } catch (e) {}
v83[v83] = 0.3050534209767637;
