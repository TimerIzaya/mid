function f3() {
    new Date();
    new BigInt64Array(2956);
    new Int32Array(2750);
    new BigUint64Array(207);
    return -9;
}
new Uint8Array(893);
const v19 = [601759695];
const v20 = [1073741824,1073741823,1376142744,1073741825];
function f21(a22, a23, a24, a25) {
    let v27;
    try { v27 = v20["find"](..."find", a25, ...v19); } catch (e) {}
    v27 / -9;
}
new Float64Array(257);
new Uint8Array(1024);
Float64Array.__lookupGetter__.apply(Float32Array);
("unscopables")[Symbol.search];
const v43 = new Date();
v43.setUTCFullYear();
const v46 = new Set();
function f47(a48, a49) {
    class C50 {
    }
    return Float32Array;
}
v46[Symbol.toPrimitive] = f47;
const v53 = v46.add(v43);
let [v54,,...v55] = v46;
v54.setUTCHours(v53);
class C59 {
}
const v60 = new C59();
class C61 extends C59 {
    constructor(a63, a64, a65, a66) {
        if (v60) {
        }
    }
    /*
    constructor(a68) {
    }
    */
    /*
    constructor(a70, a71) {
        function F72(a74, a75) {
            if (!new.target) { throw 'must be called with new'; }
            const v76 = this?.constructor;
            try { new v76(v19, this); } catch (e) {}
            a75 ^ a75;
            this.b = v19;
        }
        new F72(f21, v19);
        new F72(v19, v19);
        new F72(f21, v19);
    }
    */
}
