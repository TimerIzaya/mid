const v5 = [-8617,3];
function f6(a7, a8, a9, a10) {
    const o22 = {
        "h": a7,
        valueOf(a12, a13) {
            const o14 = {
            };
            try {
                o14.h = a9;
            } catch(e15) {
            }
            try {
                const o16 = {
                };
                o16.h = a9;
                o16.f = this;
            } catch(e17) {
            }
            try {
                const o18 = {
                };
                o18.h = a9;
                o18.f = this;
                o18.d = a13;
            } catch(e19) {
            }
            try {
                const o20 = {
                };
                o20.h = a9;
                o20.f = this;
                o20.e = this;
            } catch(e21) {
            }
            return a13;
        },
        "b": v5,
    };
    return o22;
}
const v27 = new Float64Array(9);
const v30 = new Uint8Array(257);
v5[16];
let v34 = -63912;
Math.ceil(v34);
Math.clz32(268435456n);
v34 | v34;
268435456n | v34;
++v34;
const t44 = [-936145422,536870912,127,257,-36772,-15984,2];
t44.length = 6;
function F43() {
    if (!new.target) { throw 'must be called with new'; }
}
class C45 extends F43 {
}
new C45();
try {
    v30.__proto__ = C45;
} catch(e47) {
}
4294967295n instanceof Uint8Array;
new Uint32Array(4096);
%VerifyType(Infinity());
try {
    function f52(a53, a54, a55) {
        for (let i = 0; i < 5; i++) {
            /k/gdsy;
        }
        f52();
        delete v27[delete v27[a55]];
        const o62 = {
            "maxByteLength": 2434,
        };
        const v64 = new SharedArrayBuffer(2434, o62);
        new Int16Array(v64);
        return f52;
    }
    f52();
} catch(e68) {
}
