function F0() {
    if (!new.target) { throw 'must be called with new'; }
    new F0(F0);
    for (let v4 = 0; v4 < 25; v4++) {
        function f5() {
            return f5;
        }
        const v6 = [601759695];
        const v7 = [1073741824,1073741823,1376142744,1073741825];
        function f8(a9, a10, a11, a12) {
            a12.toLocaleString();
            try { v7["find"](..."find", a12, ...v6, ...v7); } catch (e) {}
            typeof v4 === "number";
        }
        for (let v19 = 0; v19 < 5; v19++) {
            f8(f5, v19, v19, v7);
        }
    }
    try {
        this.g = -7106;
    } catch(e21) {
    }
}
new F0();
new F0();
const v24 = new F0();
new Date();
class C29 {
    static #e = "d";
    static 4;
    8;
    static h = "d";
    584 = "d";
    #a;
}
new C29();
107 >> 107;
`d${v24}prototype${v24}e${"Graj"}g9Zaj` || F0;
new Float32Array(107);
Int32Array.name = Int32Array;
new Int32Array(v24);
3942 ^ 3942;
class C45 {
    f;
}
new C45();
new C45();
new C45();
new BigInt64Array(3942);
function f51() {
    return undefined;
}
const v52 = [,];
try { v52.findLast(f51); } catch (e) {}
const v54 = v52.group(f51);
v54.g = v54;
v54.b = 454;
