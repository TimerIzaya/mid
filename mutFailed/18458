function f0() {
}
class C1 {
    f;
    [f0];
    943 = C1;
    268435440;
    constructor() {
        const v4 = this instanceof this;
        v4 && v4;
        v4 && v4;
        const v7 = delete this?.f;
        v7 || v4;
        !(!v7);
        !v7;
    }
    static 2147483648 = f0;
}
const v12 = new C1();
const v13 = new C1();
v13[268435440];
v13[268435440] = v13;
new C1();
-6n & -6n;
1073741825n ^ 1073741825n;
function F21(a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    const v25 = this?.propertyIsEnumerable;
    try { new v25(this); } catch (e) {}
    a24--;
    try { this.propertyIsEnumerable(f0); } catch (e) {}
    a24 ^ a24;
    a23[268435440];
    try {
        this.g = a24;
    } catch(e31) {
    }
    try {
        this.h = v12;
    } catch(e32) {
    }
    C1[1299022428] = a24;
    -5;
    new Float32Array(5);
    1 & 1;
    Int32Array.BYTES_PER_ELEMENT = Int32Array;
    new Int32Array(1);
    let v41 = 8;
    v41--;
    const v43 = v41 >> v41;
    v43 >> v43;
    Int16Array.name;
    Int16Array.length = Int16Array;
    new Int16Array(v41);
    try {
        this.e = v13;
    } catch(e48) {
    }
}
F21.caller = F21;
F21.d = F21;
const v49 = new F21(v13, -6n);
v49.b = v49;
const v50 = new F21(v12, 1073741825n);
v50.g;
const v52 = new F21(v12, 1499713248n);
const v53 = v52?.constructor;
v53.caller;
let v55;
try { v55 = new v53(1073741825n, v49); } catch (e) {}
v55.g = v55;
v55.e = v55;
const v56 = [-4];
try { BigUint64Array.from(BigUint64Array); } catch (e) {}
try {
    new BigUint64Array(v56);
} catch(e60) {
    e60.a = e60;
}
