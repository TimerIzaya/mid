const v0 = [544.1804153947983];
const v1 = [-2.413751880417147e+307,1.6230304769944248e+308,0.7527953429085357,0.0];
const v2 = [1000000.0];
for (let v4 = 0; v4 < 10; v4++) {
    v4 / v4;
    const v6 = [1929306256,-35796];
    try { v6["36049"](); } catch (e) {}
}
const v12 = new WeakSet();
function f13(a14, a15, a16) {
    a14[0];
    const v18 = a15 >>> a16;
    const o50 = {
        64: -42233,
        "c": v0,
        m(a20, a21, a22) {
            function f28() {
                const t17 = [];
                t17[6] = 4294967295;
                new Int32Array();
                const o43 = {
                    get b() {
                        return Int32Array;
                    },
                    "c": f28,
                    valueOf(a36, a37, a38) {
                        return this;
                    },
                    4294967295: Uint8ClampedArray,
                    m(a40) {
                        return v18;
                    },
                    "h": 9007199254740991,
                    ...1.0,
                    set b(a42) {
                    },
                };
            }
            %OptimizeFunctionOnNextCall(f28);
            return 8770;
        },
        "f": v1,
        "g": v0,
        ...v0,
        get d() {
            this[-42233] /= -42233;
            let v46 = 3;
            return Math.log(this & --v46);
        },
        "h": a16,
    };
    o50.d = o50;
    const v51 = [63765,63765,v12,63765];
    v51?.find;
    try { new v12(v2); } catch (e) {}
    class C55 extends Int16Array {
        [v51];
    }
    try { new C55(); } catch (e) {}
    return o50;
}
f13(v0, -42233, 2147483648);
f13(v1, 2147483648, -42233);
const v59 = f13(v0, 63765, 2147483648);
v59.d = v59;
const v63 = new BigInt64Array(257);
const v64 = v63?.findLastIndex;
try { new v64(257); } catch (e) {}
[Reflect,Reflect,Reflect,Reflect];
try { (2147483648).find(v59); } catch (e) {}
class C69 {
    static #p(a71) {
        return a71;
    }
}
new v63();
new BigUint64Array(v63);
