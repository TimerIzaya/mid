const v2 = [-392.0576825237305,0.3449869706009556,4.447039970507995e+307,-5.063798246562485e+307,-568.9796177589394,388231.4033702491,-3.5365646375454567,0.12172568971863451,-4.474791203319841e+307];
const v5 = ["function",[9007199254740992,-13,1,206834672,5792,16,856414023,8,2147483648],v2];
const o6 = {
    "arguments": v5,
    "type": "function",
};
function F10(a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a12;
}
new F10();
class C17 {
    constructor(a19) {
        this[1762774961] = this;
        a19 % a19;
        function f21() {
            return a19;
        }
        try { f21.bind(this); } catch (e) {}
    }
    static [-1e-15] = 1000.0;
    ["8wk"] = -1e-15;
    f;
    [-1e-15];
    a;
    1762774961 = -1e-15;
    static ["8wk"];
}
new C17(1000.0);
new Uint8ClampedArray(8);
new BigInt64Array(0);
new Int32Array(5);
class C34 {
    #a = 65535n;
    1073741825;
}
for (let v35 = 0; v35 < 10; v35++) {
    new C34();
}
for (let i39 = 0; i39 < 7; i39++) {
}
class C50 {
}
const v51 = new C50();
v51[Symbol.unscopables] = "o";
const v56 = v51[Symbol.unscopables];
class C57 extends 65535n {
    ["next"] = v56;
}
new C57();
