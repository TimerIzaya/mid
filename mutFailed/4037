let v0 = 1000000.0;
class C4 {
    m(a6, a7) {
        const v8 = this ^ 0.6414331148530129;
        const t3 = true;
        t3[a7] &&= v0;
        this[a7] = v8;
        let v10;
        try { v10 = this["substring"](); } catch (e) {}
        try { v10["m"](0.6414331148530129, v10, 0.6414331148530129, this); } catch (e) {}
        return a6;
    }
    get f() {
        let v15 = 184452420;
        v0 = this["m"](v15, "m");
        v15++;
        return -65535;
    }
}
const v20 = new C4();
new C4();
const v22 = new C4();
const v26 = [-65537,v20,v20,-65537];
[-65537,2112313141,0.6414331148530129,2112313141,v22];
[v26,59207,C4,0.6414331148530129];
let v33 = "max";
class C37 {
    set a(a39) {
        v33 = this;
        const o40 = {
        };
        o40.g = v33;
        const o41 = {
        };
        o41.g = v33;
        const o42 = {
        };
        o42.g = v33;
        const o43 = {
        };
        o43.g = v33;
    }
}
const v44 = new C37();
const v45 = new C37();
new C37();
function F47(a49, a50, a51) {
    if (!new.target) { throw 'must be called with new'; }
}
new F47(1073741824, F47, v44);
const v53 = new F47(1073741824, v33, v33);
new v20(65536, "NapmW", v44);
const t52 = "NapmW";
t52[v53] = "h";
try {
    v45.fuck(v33, "h");
} catch(e56) {
}
C37 += v33;
new F47(65536, F47, v44);
[-1.0,-2.2250738585072014e-308,2.0,-3.0,5.832977280432409,1e-15];
[1000000000000.0,-213862.531301692,3.0,242.58489644386714,-Infinity,-8.01478763060209,-4.3475874202234617e+307,NaN,-1000000.0];
[6.578674051799194e+307,-1e-15,-3.0,0.6097660113731397,-1000.0,-1000000000000.0,1000.0,Infinity];
