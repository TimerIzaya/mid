function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -14;
    } catch(e3) {
    }
    try {
        "p" + -14;
        for (let v6 = 0; v6 < 25; v6++) {
            v6++;
            v6 < v6;
            function f9(a10, a11, a12, a13) {
            }
            for (let v14 = 0; v14 < 5; v14++) {
                f9();
            }
        }
        this.a = -14;
    } catch(e16) {
    }
    try {
        this.h = -14;
    } catch(e17) {
        class C19 {
            static {
                try {
                const t0 = 0.44967380041772886;
                t0();
                } catch (e) {}
            }
            static f;
        }
    }
}
new F0();
const v23 = new F0();
const v24 = new F0();
const v25 = [90406.55083616823,-1.00643076029749e+308,0.32156802085590264,0.14021368297171866,-1000000.0];
[-1e-15,-Infinity,-640.9911649755546,0.6405081004539234,-1e-15,3.0];
const v27 = [3.0,3.0,-5.0,-1000000000.0,-1.7976931348623157e+308,2.220446049250313e-16];
function f28(a29, a30) {
    a30.toString = f28;
    const o58 = {
        o(a32, a33, a34) {
            a29 = v24;
            for (let v38 = 0; v38 < 32; v38++) {
                const v40 = "p" + v38;
                const v41 = [];
                function f42() {
                    const o44 = {
                        p() {
                            return f42;
                        },
                        [v41]: v41,
                        "a": v41,
                    };
                    return v41;
                }
                f42();
                const v46 = f42();
                const v47 = (a48, a49) => {
                    return v46 * a49;
                };
                a32[v40] = v38;
            }
            function f51(a52, a53) {
                return a52;
            }
            const v56 = new BigInt64Array(11);
            v56.lastIndexOf();
            return -2;
        },
        [a30]: a30,
        "f": v24,
    };
    return o58;
}
f28(v23, v25);
f28(v23, v27);
f28(v24, v25);
new Int16Array(3);
new BigUint64Array(143);
new BigInt64Array(512);
function f71() {
    Int8Array.b = 3;
    Int8Array.b = Int8Array;
    return f71;
}
%PrepareFunctionForOptimization(f71);
f71();
%OptimizeFunctionOnNextCall(f71);
f71();
