function f3(a4, a5) {
    for (let i9 = 0, i10 = 10;
        (() => {
            const v11 = i9 < i10;
            class C12 extends Date {
            }
            let v13;
            try { v13 = new C12(); } catch (e) {}
            v13.constructor;
            return v11;
        })();
        i9++) {
    }
    const o32 = {
        "d": a5,
        valueOf(a21) {
            function F22(a24, a25, a26, a27) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.f = a26;
                } catch(e28) {
                }
            }
            new F22(a4, 10000, 10000, a5);
            new F22(a5, 10000, 10000, a21);
            const v31 = new F22(a21, 35486, 35486, a5);
            return v31;
        },
    };
    return o32;
}
f3(10000, 10000);
f3(10000, 35486);
f3(10000, 35486);
Uint8Array.e = Uint8Array;
new Uint8Array(4);
new Int32Array();
/k7/v;
/\u{12345}+/giy;
/(?<a>.)/udm;
const v48 = new Float64Array(Float64Array, Float64Array, Float64Array);
const v53 = [Int8Array];
v48[138.3846677150391] = 1000000000.0;
v53.length += 172;
[,,,,,];
class C56 {
}
async function f57(a58, a59, a60, a61) {
    return (await C56).call();
}
f57.call(C56, C56, f57, f57, f57);
