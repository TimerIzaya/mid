class C3 {
    static #c = 0;
    2948736616 = 0;
    constructor(a5, a6) {
        this[2948736616] = this;
        C3 - a5;
        a6 >>= 0;
        const t5 = [65536,3,16,-4096];
        t5[1] = C3;
        [-4294967297,2,49988];
        [257,268435441,-16,-2,2147483647,65535,-65535,27932,-37508];
    }
    [0] = -4294967297;
    8 = 4.474336095257989;
    static [-4294967297];
}
const v11 = new C3(0, 0);
const v12 = new C3(-4294967297, v11);
const v13 = new C3(0, v12);
v13[8];
[2.220446049250313e-16,-4.515277782785434,-1e-15,-322454.30183747795,-1000000000000.0,597.6590754206054,-2.0,2.58926687419134,542722.7058677995,-0.0];
[0.0,1000.0,0.18126723996855632,-1.7976931348623157e+308];
[2.0,-829423.8141805581,2.2250738585072014e-308,6.293580073762438,1.1502085594412403e+308];
const v20 = new Uint8Array(6);
v20[1];
let v22 = 9;
v22--;
new Float64Array(v22);
new Uint8ClampedArray(14);
function f29() {
    const o32 = {
        get b() {
            super[this] = this;
            return f29;
        },
        ..."b",
    };
    try { o32.toString(); } catch (e) {}
    return C3;
}
const v36 = new Int32Array(2917);
v36[1833] = v36;
10 | 0;
-v36["lastIndexOf"](10);
f29();
const v44 = new Int16Array();
try { v44.entries(); } catch (e) {}
const v48 = Uint16Array.name;
const v49 = new Uint16Array(14);
try { v49.reverse(); } catch (e) {}
v48.reverse();
try { v13.assign(); } catch (e) {}
let v53 = 0;
class C55 {
    static {
        try { new this(); } catch (e) {}
        Object.defineProperty(this, -30745, { writable: true, enumerable: true, value: this });
    }
}
while (v53 < 7) {
    v53++;
}
