/n/gvdims;
/a{0}apa\srxyz{0,1}?(?:a?)?/gvims;
/\1(a)/vdm;
new Float32Array(50);
new Int32Array(5);
new Uint8ClampedArray(2375);
new Int8Array(1024);
new Uint8Array(3);
new Float64Array(2336);
new Uint8Array(128);
new Float64Array(248);
let v31 = 0;
do {
    v31++;
} while ((() => {
        [/LD/vds,1000.0];
        const v41 = ["object"];
        [v41,v41,v41,v41,v41];
        return v31 < 9;
    })())
new Int8Array(129);
let v53 = -5.0;
0.41428636270946406 ^ v53;
Math.cos(v53);
let v56 = ++v53;
v56--;
Math.fround(0.41428636270946406);
-197236662 && 0.41428636270946406;
Math.round();
try { (-12n).getTime(-12n, -816409267); } catch (e) {}
const v67 = new Map();
const v68 = [-65535,-19265,3,-13,65537,128];
class C70 extends v67.constructor {
    3832 = v68;
}
new C70();
const v73 = new Float32Array(6);
v73.fill();
class C76 {
    #m(a78, a79, a80) {
        for (const v81 in this) {
            (delete this?.h).__proto__;
        }
    }
}
const v84 = new C76();
const o88 = {
    [Infinity]: -0.0,
    [-16]: Infinity,
    "h": -16,
    ...-0.0,
    "c": Infinity,
    "e": -0.0,
};
const v89 = new C76();
function f90(a91) {
    try { a91(); } catch (e) {}
    function F94(a96, a97, a98) {
        if (!new.target) { throw 'must be called with new'; }
        this.c = a97;
        for (let v99 = 0; v99 < 5; v99++) {
        }
        this.g = 4;
    }
    return a91;
}
v89[Symbol.toPrimitive] = f90;
const v102 = new C76();
function f103(a104, a105) {
    function f106() {
        const v108 = Symbol.iterator;
        const o117 = {
            [v108]() {
                let v110 = 10;
                const o116 = {
                    next() {
                        v110--;
                        const v114 = v110 == 0;
                        const o115 = {
                            "done": v114,
                            "value": v110,
                        };
                        return o115;
                    },
                };
                return o116;
            },
        };
        return o117;
    }
    Object.defineProperty(a105, Symbol.toPrimitive, { writable: true, value: f106 });
    const v120 = [];
    try { v120.with(v120, v120, v120); } catch (e) {}
    new Float64Array();
    ("by").normalize();
    const o178 = {
        "h": v84,
        [v89](a127, a128, a129) {
            super[-9223372036854775807];
            Array(1102693041);
            switch (128) {
                default:
                    break;
            }
            const v135 = new BigUint64Array();
            const v136 = /anVXYFzN(x)(x)(x)\3/gvdms;
            try { v135.reduceRight(v136); } catch (e) {}
            const v138 = [536870888,8];
            const v139 = [2147483649,2147483649,-65537,-268435456,10,9223372036854775807];
            function f140(a141) {
                const o145 = {
                    set g(a143) {
                    },
                    get g() {
                        return a141;
                    },
                    __proto__: a141,
                    ...v138,
                    4096: v139,
                };
                const v147 = new BigUint64Array();
                const v148 = /anVXYFzN(x)(x)(x)\3/gvdms;
                try { v147.reduceRight(v148); } catch (e) {}
                /4H/gvisy.compile(/[m]/gvdimsy);
                return o145;
            }
        },
        set b(a154) {
            function f155(a156) {
                return f155;
            }
            class C157 extends f155 {
            }
        },
        [a105]: v84,
        __proto__: C76,
        "c": 9,
        set h(a159) {
        },
        o(a161) {
            function F163(a165, a166) {
                if (!new.target) { throw 'must be called with new'; }
            }
            const v167 = new F163();
            async function f168(a169, a170, a171, a172) {
                a169.fuck();
                await v167;
                return F163;
            }
            f168();
            const o176 = {
            };
            gc(o176);
        },
    };
    return o178;
}
for (let v179 = 0; v179 < 25; v179++) {
    Math.cosh(v179);
}
class C183 {
    static #d;
    set b(a185) {
        Symbol.search;
    }
    static ["Xkz0W"] = "Xkz0W";
    8;
    d;
}
%PrepareFunctionForOptimization(f103);
f103(Uint16Array, v102);
%OptimizeFunctionOnNextCall(f103);
f103();
