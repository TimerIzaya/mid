let v2 = -0.10922718515413621;
class C3 {
    set g(a5) {
        this >> "valueOf";
    }
    1000;
    static ["valueOf"] = C3;
    static [v2] = "valueOf";
    static n(a9) {
        let v10 = 0;
        do {
            super[this] = v10;
            v2 = v2;
            v10++;
        } while (v10 < 10, C3)
        return a9;
    }
}
new C3();
new C3();
new C3();
new Int16Array(256);
new BigUint64Array(-268435456);
new BigUint64Array(-268435456);
const v26 = [-1.7976931348623157e+308,1000000000.0];
const v27 = [4.0902151973711183e+307,-758.964951148866,1e-15,-5.261122784521454];
const v28 = [-2.2250738585072014e-308,-3.0,1000000000.0,-6.987156890700151,4.0];
function f29() {
}
try { new f29(); } catch (e) {}
class C33 {
}
new C33();
function f35(a36, a37) {
    const o46 = {
        "a": v27,
        "d": a37,
        "type": "EV",
        p(a39, a40) {
        },
        get c() {
            a37[1];
            C3[v27];
            return v28;
        },
    };
    const v47 = /\xf0\x9f\x92\xa9a*/us;
    function F50(a52, a53, a54, a55) {
        if (!new.target) { throw 'must be called with new'; }
    }
    new F50(v47, 1, -1263139894, F50);
    return o46;
}
f35(v26, v26);
const v58 = f35(v28, v28);
class C60 extends f35 {
    static #f = v58;
}
const v62 = new Uint8Array();
function f63(a64, a65, a66, a67) {
    const o68 = {
    };
    function f69() {
    }
    const o73 = {
        n(a71, a72) {
        },
    };
}
for (let v74 = 0; v74 < 625; v74++) {
    f63(f63, v74, v62, v74);
}
