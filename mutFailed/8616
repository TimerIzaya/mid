new Int32Array(128);
new Uint32Array(14);
new Int32Array(3);
new Int32Array(3);
new Int32Array(5);
new Int16Array(232);
let v18 = -1024;
function F19(a21, a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
}
const v25 = new F19(v18, v18, F19, F19);
const v26 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v27 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
function F29(a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
}
const v33 = new F29();
class C34 {
}
const v36 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v37 = [601759695];
function f39(a40, a41, a42, a43) {
    function f44() {
        let v47 = Float64Array;
        v47 = a41;
        const v48 = v26.length;
        try {
            v26.forEach(v47);
        } catch(e50) {
        }
        const v51 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v53 = Symbol.toPrimitive;
        const o59 = {
            toString(a55, a56) {
                const v57 = a43 && v47;
                a55 *= v53;
                v57 <= v51;
                return F29;
            },
        };
        const o80 = {
            "c": -4294967297n,
            [522675525n](a62, a63) {
            },
            "c": v37,
            valueOf(a65, a66) {
            },
            [-4294967297n](a68, a69, a70, a71) {
            },
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v36,
            ...v25,
            [v53]() {
            },
            "type": C34,
            ..."Vre",
            valueOf(a74, a75) {
                return Symbol;
            },
            ..."Vre",
            4: "Vre",
            toString(a77, a78, a79) {
                return a77;
            },
            5: -4294967295,
            6: -268435456,
        };
        new Float32Array(1334);
        v18 %= -268435456;
        new Uint32Array(v27, v48, v53);
        v33 - f44;
        try {
            new Float64Array(127);
        } catch(e89) {
        }
        new Float64Array(3);
        new Uint16Array(2);
    }
    function f96() {
        return f39;
    }
    function f97(a98) {
        v36.b = -1052649622;
    }
    Object.defineProperty(f44, "toString", { writable: true, enumerable: true, get: f96, set: f97 });
    const v100 = f44();
    %OptimizeFunctionOnNextCall(f44);
    return v100;
}
for (let v101 = 0; v101 < 5; v101++) {
    f39(v33, F19, F29, v101);
}
