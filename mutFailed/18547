const v0 = [65535,256650505,2,-1610482240,-1399267861,64];
[9007199254740991,-2147483649,64535,9007199254740990,3,331622610,-1,-15,-12385];
const v2 = [-15,64228841,14,202275985,11417];
class C3 {
    static set f(a5) {
    }
    static {
        Reflect.construct(this, [Reflect,this != v0], v0);
    }
    c = v2;
}
const v14 = new C3();
const v15 = new C3();
new C3();
class C20 extends C3 {
    set e(a22) {
        %VerifyType(this);
        C3 >= v2;
    }
    static 127 = v15;
    static e;
    [v2] = C3;
    p(a25, a26, a27) {
        v14[245] = v14;
        typeof -1000.0 === "undefined";
        return v0;
    }
}
const v31 = new C20();
new v31();
new C20();
function F34() {
    if (!new.target) { throw 'must be called with new'; }
    Array(19793);
    function F39() {
        if (!new.target) { throw 'must be called with new'; }
        class C41 {
        }
        for (let v42 = 0; v42 < 25; v42++) {
            [1073741824,1073741823,1376142744,1073741825];
            function f44(a45, a46, a47, a48) {
                try { v14["find"](); } catch (e) {}
                return C41;
            }
            for (let v51 = 0; v51 < 5; v51++) {
                f44(v51, f44);
            }
        }
    }
    new F39();
    const o54 = {
    };
    for (let v55 = 0; v55 < 5; v55++) {
    }
    [];
    function f57(a58) {
        const o59 = {
        };
    }
    class C60 {
    }
}
new F34();
