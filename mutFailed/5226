function F2() {
    if (!new.target) { throw 'must be called with new'; }
}
new Float64Array([-65536,-432658450,256]);
const v8 = new Int32Array(13);
const v11 = new BigUint64Array(16);
const v14 = new Uint16Array(2407);
class C15 extends BigUint64Array {
    get e() {
        const v18 = new Set();
        return v18;
    }
    get h() {
        super.with(2407, 13);
        this ^ 16;
        const v22 = [727957804,7,49072,-63418,-4,-52120,127,1273312700,-128];
        function f23() {
            return v22;
        }
        const v25 = new Set();
        class C26 {
            [v25];
            static {
            }
        }
        v11 < v8;
        return 13;
    }
    static c = v14;
    static #e;
    [16];
    [2407];
}
new C15();
new C15();
new C15();
/(?:foo)\xf0\x9f\x92\xa9[(?:a+)*]/vims;
/(x)(x)(x)\2*/uimsy;
/A\1\2(a(?:\1(b\1\2))\2)\1DRK/vmy;
class C36 extends SharedArrayBuffer {
}
new C36();
