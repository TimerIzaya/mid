class C3 {
    h = 4294967296;
    static o(a5, a6) {
        4294967296 >> 65536;
        b = this;
        return 9n;
    }
    [65536];
}
new C3();
new C3();
new C3();
function F20(a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    a22.length;
    try { this.constructor(128, this); } catch (e) {}
    a23 + a23;
    try {
        this.a = 5;
    } catch(e27) {
    }
    try {
        a23.b = 5;
    } catch(e28) {
    }
    try {
        this.d = a23;
    } catch(e29) {
    }
}
const v30 = new F20(F20, -195224844);
new F20(5, 5);
const v32 = new F20(-195224844, 128);
v32.a = v32;
129 === 129;
try { Array.bind(-195224844); } catch (e) {}
237 ^ 237;
237 & 237;
const v42 = new Array(237);
new Int32Array(182);
const v48 = new Uint8Array(10);
try { v48.reduce(129); } catch (e) {}
let v52;
try { v52 = new BigInt64Array(BigInt64Array, v32, v48); } catch (e) {}
new BigInt64Array(3);
function f54() {
    1261703539 === 1261703539;
    1261703539 / 1261703539;
    class C59 {
    }
    C59.length = C59;
    -127;
    const v63 = `
        try {
            new Float64Array(127);
        } catch(e65) {
        }
    `;
    let v66 = -65535;
    v66 * v66;
    const v68 = v66 / v66;
    ~v68;
    const o150 = {
        __proto__: 352326470,
        next() {
            for (let v71 = 0; v71 < 25; v71++) {
            }
            const v72 = v42.toString();
            const v73 = [-1539,1,12];
            function f74(a75, a76) {
                const o77 = {
                    [a75]: v73,
                };
                return a75;
            }
            v66--;
            v66 == 0;
            const o81 = {
                "done": v72,
                "value": v66,
            };
            return o81;
        },
        ...352326470,
        /*
        __proto__: 1261703539,
        */
        "f": v66,
        m(a83) {
            try { v52.next(); } catch (e) {}
            a83.c = a83;
            a83.h = a83;
            const o85 = {
            };
            o85.h = o85;
            o85.h = o85;
            function f86(a87, a88, a89) {
                function f91(a92) {
                    a88[5] ||= f54;
                }
                this.onmessage = f91;
                const v95 = new SharedArrayBuffer(35);
                new BigUint64Array(v95);
            }
            f86.caller = f86;
            try {
                o85.e = v66;
            } catch(e98) {
                const v102 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v102, o85);
            }
            try {
                const o104 = {
                };
                o104.e = 1261703539;
                o104.g = a83;
            } catch(e105) {
            }
            try { Math.expm1(128); } catch (e) {}
            -9007199254740991 === -9007199254740991;
            const v110 = -9007199254740991 >> -9007199254740991;
            const v111 = v110 - v110;
            v111 === v111;
            Math.sin(-9007199254740991);
            try { ("EV").link(v68); } catch (e) {}
            0 != 0;
            class C118 {
                o(a120, a121, a122, a123) {
                    class C124 {
                        static 44 = "EV";
                    }
                    new C124();
                    new C124();
                    new C124();
                    const o129 = {
                    };
                    o129.type = 64;
                    new C3();
                    return 0;
                }
            }
            C118.name;
            3938 << 3938;
            const v135 = new Int8Array(3938);
            let v136 = 3;
            const v137 = v136++;
            v137 + v137;
            let v139 = 0;
            v139 >>> v139;
            const v141 = v139 >> v139;
            v141 - v141;
            for (let i = 0; i < 5; i++) {
                v139 < 8;
                [...v136] = v135;
                const v145 = v139++;
                v145 % v145;
            }
            const o147 = {
            };
            o147.e = 1261703539;
            try {
                const o148 = {
                };
                o148.c = o148;
                o148.g = a83;
                o148.h = 352326470;
            } catch(e149) {
            }
            return this;
        },
    };
    let v151;
    try { v151 = o150.m(o150); } catch (e) {}
    class C153 {
    }
    C153.length = C153;
    const v154 = new C153();
    v154?.constructor;
    Float32Array.name;
    const v158 = new Float32Array(v154, "nt", Float32Array);
    const t180 = "nt";
    const v159 = delete t180[v158];
    let v160;
    try { v160 = v154.floor(v159); } catch (e) {}
    for (const v161 in v160) {
    }
    v151.e = v151;
}
f54();
f54();
function f165(a166, a167, a168, a169) {
}
const v172 = Symbol.toPrimitive;
v172.description;
("lastIndexOf")[v172];
function f175(a176, a177) {
    const o180 = {
        set b(a179) {
        },
    };
}
f175();
256 >>> 256;
function F186(a188, a189, a190) {
    if (!new.target) { throw 'must be called with new'; }
}
const t206 = 3;
const v192 = new t206(8);
v192[7] = v192;
try {
} catch(e193) {
}
const v197 = ([-223.21974199729607,0.6826909196761026,-7.610543209781418e+307,1000000000.0,-2.2250738585072014e-308,0.4672319347741436,-1000000.0,-3.0,-5.0,6.966874548897]).fill(-9007199254740990n, 9007199254740990);
let v198;
try { v198 = v197.toString(); } catch (e) {}
try { v198.includes(v30); } catch (e) {}
