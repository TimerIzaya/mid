const v3 = [1.0,1.7976931348623157e+308,-4.758842768296169,495.02590786165956,1000000000.0,Infinity];
const v4 = [-4.0,6.767068546723451,4.0,1000.0,-1e-15,-2.220446049250313e-16,5.0,4.0];
const v5 = [-195.17246022083714,-1e-15,58520.45042095962,-2.0,-2.2250738585072014e-308];
!true;
new v3();
function F10(a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    const v15 = this?.constructor;
    let v16;
    try { v16 = new v15(a13, a13, a14); } catch (e) {}
    try { v16.toString(); } catch (e) {}
    a14++;
    try {
        this.f = v5;
    } catch(e19) {
    }
    try {
        this.a = a12;
    } catch(e20) {
    }
    try {
        this.b = a12;
    } catch(e21) {
    }
}
F10.length = F10;
new F10(4, v4, 0);
new F10(4, v5, 0);
new F10(0, v4, -15);
394.2567881941575 < 394.2567881941575;
try { new Uint8Array(Uint8Array, Uint8Array, 394.2567881941575); } catch (e) {}
const v36 = new Uint8Array(2707, Uint8Array, 128);
try { v36.reduce(v5); } catch (e) {}
let v38;
try { v38 = v36.findLastIndex(v36, 128); } catch (e) {}
const o39 = {
    [v38]: Uint8Array,
};
