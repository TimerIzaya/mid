function f1(a2, a3) {
    Math.atan2(Math, f1);
    return f1;
}
-Infinity;
class C8 {
    static get e() {
        Object.defineProperty(this, "toString", { enumerable: true, value: f1 });
        this >> this;
        const v11 = this[129];
        let v13 = 1;
        -7;
        const v16 = --v13;
        v13 * -9007199254740990;
        Math.atan(v16 & 7);
        return v11;
    }
}
function f20(a21, a22) {
    const v24 = new Float32Array(Float32Array, Float32Array);
    delete v24[536870888];
    return a21;
}
C8.toString = f20;
new C8();
new C8();
let v28 = new C8();
Math.sin(-2.220446049250313e-16);
const v33 = ("minor").valueOf("minor", "minor", "minor", "minor");
v33.split(v33).pop();
let v38 = 0;
while (v38 < 2) {
    v28--;
    C8.e;
    v38++;
}
0 | 0;
function f51(a52) {
    const v53 = [8];
    const v54 = [-1024,-2147483647,-37738,-2,21596,2147483649,9007199254740992,-2039218916];
    class C55 {
        static #f;
        static set f(a57) {
            a57(this, this, a57, v53);
        }
        constructor(a60) {
            this.e = v53;
        }
    }
    new C55(v54);
}
Object.defineProperty(Set, "e", { writable: true, configurable: true, enumerable: true, set: f51 });
class C62 extends Set {
    #m(a64, a65) {
        let [v67,v68,,v69] = this;
    }
}
C62.e = C62;
