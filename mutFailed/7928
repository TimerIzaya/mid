new Uint8ClampedArray(6);
~762;
const v5 = 762 | 762;
v5 ^ v5;
const v8 = new Int32Array(Int32Array);
v8[1] = v8;
242 ^ 242;
const v12 = new Int16Array(242);
v12[52] = v12;
const v14 = 2147483648 <= 2147483648;
const v16 = v12.buffer;
try {
    const v18 = new Uint8ClampedArray(268435456);
    try { v18.set(v14); } catch (e) {}
} catch(e20) {
    class C22 {
        static {
            this[Symbol.hasInstance];
        }
        #p() {
            let v28;
            try { v28 = this.p(undefined, this, this, this, v16); } catch (e) {}
            try {
                v28.#p(undefined, v28, v28, undefined);
            } catch(e30) {
            }
            return undefined;
        }
        static #a = undefined;
        c = undefined;
    }
    const v31 = new C22();
    const v32 = new C22();
    function f33(a34) {
        const o40 = {
            15: a34,
            toString(a36, a37) {
                super.h = a37;
                try { C22.stringify(a34, a34, this); } catch (e) {}
                try {
                    C22.c = v31;
                } catch(e39) {
                }
                return a36;
            },
            2147483647: undefined,
            __proto__: v32,
            "c": a34,
            ...a34,
            "f": a34,
        };
        return o40;
    }
    const v41 = f33(C22);
    try {
        new f33(v41);
    } catch(e43) {
    }
}
-(-1173286458);
9007199254740992 == 9007199254740992;
const v50 = /(?:a*)+q(?<a>.)/guds;
v50.b = v50;
for (let i53 = 0, i54 = 10;
    (() => {
        const v56 = i53 < (i54 + i54);
        v56 && v56;
        return v56;
    })();
    (() => {
        i54 >>> i54;
        try { new Uint16Array(i54, i54, i53); } catch (e) {}
        function f63() {
            let v64 = 1000000000000.0;
            v64--;
            class C68 {
                constructor(a70) {
                    const v71 = this.constructor;
                    try { new v71(a70, f63); } catch (e) {}
                    new Uint16Array(12, -4294967296);
                }
            }
            const v74 = new C68();
            new C68(-4294967296);
            class C76 extends C68 {
                [v74];
            }
            new C76();
        }
        let v78 = i54--;
        v78 ^ v78;
        v78--;
        const v82 = 3768 !== 3768;
        v82 || v82;
        const v85 = new BigInt64Array(3768);
        v85[89] = v85;
        function f86(a87, a88) {
            let v89;
            try { v89 = new a87(i53, 242, 6); } catch (e) {}
            try { v89.entries(); } catch (e) {}
            const v91 = a87++;
            const v92 = v91 >> v91;
            let o93 = {
            };
            o93.e = o93;
            class C94 {
                constructor(a96, a97) {
                    a96.e;
                    eval(a96);
                }
            }
            let v104;
            try { v104 = new C94(o93, Int16Array); } catch (e) {}
            const v105 = v104?.constructor;
            try { new v105(o93, 762); } catch (e) {}
            [,...o93] = v85;
            return v92;
        }
        [..."A",v50];
        function f109() {
            const o113 = {
                ...1.0,
                set b(a112) {
                },
            };
            return o113;
        }
        f109.d = f109;
        f86(BigInt64Array, v85);
    })()) {
    const o117 = {
    };
    o117.h = o117;
    v12[Int32Array];
    try { new Set(); } catch (e) {}
    let v121;
    try { v121 = new Set(); } catch (e) {}
    const v122 = v121?.keys;
    try { new v122(); } catch (e) {}
    new Set();
    try { ArrayBuffer.bind(ArrayBuffer); } catch (e) {}
    268435441 >> 268435441;
    const o142 = {
        "maxByteLength": 268435441,
        2: o117,
        4294967295: 2147483648,
        "f": 6,
        toString(a130, a131, a132) {
            let v133;
            try { v133 = this.toString(a131, -9007199254740990, a130); } catch (e) {}
            function f135(a136, a137, a138) {
                v12 == o117 ? v12 : o117;
                return a131;
            }
            f135(255n, v133);
            const t154 = 268435441;
            t154[Uint8ClampedArray] = -9007199254740990;
            return -9007199254740990;
        },
    };
    const v144 = new ArrayBuffer(240, o142);
    try { Uint8Array.from(Uint8Array); } catch (e) {}
    new Uint8Array(v144);
}
