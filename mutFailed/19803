class C3 {
    257 = "G4l";
    n(a5, a6) {
        try {
            this.a = a5;
        } catch(e7) {
            try { e7(e7, C3, 0.0, "-13"); } catch (e) {}
            for (let v9 = 0; v9 < 32; v9++) {
                e7["p" + v9] = v9;
            }
        }
        return "-13";
    }
    static [0.0] = "-13";
    ["-13"] = "-13";
    [0.0] = 0.0;
    ["G4l"];
}
function f12(a13) {
    return C3;
}
class C14 extends f12 {
    static #g = "G4l";
    static b;
}
const v15 = new C3();
const v16 = v15?.__defineGetter__;
try { new v16(C3, "G4l"); } catch (e) {}
const v18 = new C3();
new C3(v18, "-13");
-22964 / -22964;
[v18,0.0];
const o27 = {
    "maxByteLength": 176,
};
const v29 = new ArrayBuffer(127, o27);
new Uint16Array(v29);
function F32(a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    const v36 = this?.__lookupGetter__;
    try { new v36(a35); } catch (e) {}
    -a35;
    try {
        this.d = -268435456;
    } catch(e39) {
    }
}
new F32(-1, -268435456);
new F32(-268435456, -268435456);
new F32(-268435456, -22964);
const v46 = Uint16Array?.constructor;
try { new v46(-22964); } catch (e) {}
const v48 = new Uint16Array(9);
v48[4];
v48.includes(true, -706152110);
