new Uint8Array(10);
new Int16Array(7);
"p" + 7;
const o12 = {
    [Infinity]: -0.0,
    [-16]: Infinity,
    "h": -16,
    ...-0.0,
    "c": Infinity,
    "e": -0.0,
};
new Int16Array(3324);
new Float64Array(1706);
new Uint8ClampedArray(8);
const v21 = [-1.7976931348623157e+308,-613.7550152041111];
v21 ^ 3324;
for (let v23 = 0; v23 < 5; v23++) {
    function f24() {
        return Promise.reject(f24);
    }
    f24();
    %OptimizeFunctionOnNextCall(f24);
}
const t23 = "p";
new t23(7188);
new Int16Array(305);
const t26 = [4294967297,4294967297];
t26[65537] = 4294967297;
class C45 {
    static set f(a47) {
        while (0 < 5) {
            const o54 = {
            };
            ("-1723624938").slice(9, "g");
        }
    }
    constructor(a61) {
        const v62 = this.constructor;
        for (let v63 = 0; v63 < 5; v63++) {
        }
        try { new v62(v21, v21); } catch (e) {}
        a61++;
    }
}
const v66 = new C45();
function f67(a68, a69, a70) {
    try {
        const v72 = new BigInt64Array(BigInt64Array);
        class C73 {
            constructor(a75, a76) {
                for (let v77 = 0; v77 < 10; v77++) {
                    v72[-1];
                    try {
                        super.o();
                    } catch(e80) {
                    }
                }
            }
        }
    } catch(e81) {
    }
}
f67(v66, 8.307019671916529e+307, -632.2202052493398);
