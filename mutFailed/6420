const v0 = [0.39351902577987874,-818.3283298180704];
const v1 = [-9.940104486560282,0.527268409210753,1.1847146467604032e+308,1.7976931348623157e+308,283.2188501536914,-206951.20074225403];
const v2 = [600340.9722443591,-1.162731940400112e+308,543.8196840256007,0.2423292516971961,1.0,-0.31241368615430787,0.999588457159873,-2.2250738585072014e-308,-5.0,-Infinity];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v2;
    } catch(e6) {
    }
    try {
        this.c = v2;
    } catch(e7) {
    }
    try {
        this.f = v0;
    } catch(e8) {
    }
}
let v9;
try { v9 = F3.toString(); } catch (e) {}
new v9(v0);
const v11 = new F3(v1);
const v12 = new v9(v0);
let v13 = -609857307;
v13--;
10000 !== 10000;
function F18(a20, a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    const v24 = this?.constructor;
    try { new v24(F18, F18, a20, a20); } catch (e) {}
    a21 >>> a21;
    a22.caller = a22;
    try {
        a21.b = a22;
    } catch(e27) {
    }
    try {
        this.g = v12;
    } catch(e28) {
    }
    try {
        this.h = a21;
    } catch(e29) {
    }
}
const v30 = new F18(F18, -254936948, F3, F3);
const v31 = new F18(v30, v30, v30, v11);
new F18(v9, v13, v31, v31);
Uint32Array.name = Uint32Array;
const v34 = new v9();
Float64Array > v34;
