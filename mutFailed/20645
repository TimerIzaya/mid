const v2 = new BigUint64Array(16);
const v5 = new Uint16Array(16);
let v6 = 7;
v6--;
const v9 = new Uint32Array(v6);
let v14 = 257;
v2[54] = -14;
try {
    v5.g = 16;
} catch(e15) {
}
v14--;
v2.__proto__;
-960991.2672411689 > Uint32Array ? -960991.2672411689 : Uint32Array;
8 << ~1073741825;
Math.acosh(v9);
1073741825 - 1073741825;
const o33 = {
    set b(a29) {
        function f30(a31) {
            return f30;
        }
        class C32 extends f30 {
        }
    },
};
try { new Uint8ClampedArray(Uint32Array, Uint8ClampedArray, Uint16Array); } catch (e) {}
1856 - 1856;
try { Math.expm1(Uint32Array); } catch (e) {}
Math.log10(1073741825);
