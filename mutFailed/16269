function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = -10;
    } catch(e3) {
    }
}
const v4 = new F0();
let v5 = new F0(F0);
const v6 = new F0();
const v7 = [v6,v6,v6,v5];
v5 *= v6;
let v8 = v6.e;
v8--;
v8 &&= v6.e;
const v11 = [v4,v5,v6,v6];
[v7,v7,v11,v11,v11,v11,v5];
268435441n ^ 268435441n;
function f16() {
    return gc;
}
try { ("toString").toUpperCase(); } catch (e) {}
let v24 = 2;
const v25 = v24--;
const o26 = {
};
o26.d = o26;
class C27 {
    77 = undefined;
}
try { new C27(); } catch (e) {}
-9007199254740990 < -9007199254740990;
function f30(a31, a32) {
    function f34(a35) {
        delete this[536870889];
    }
    this.onmessage = f34;
    v25 ^ undefined;
}
const v40 = [268435441n,v8];
const o41 = {
    "arguments": v40,
    "type": "function",
};
new Worker(f30, o41);
const v43 = /Aabc|defmxyz{1,}?qMa{0,1}?/gvdis;
const v44 = v43.exec();
try { v44.shift(); } catch (e) {}
for (let v46 = 0; v46 < 25; v46++) {
}
const v47 = new C27();
Worker % delete v43[16];
v11.__proto__;
try { ("function").substring(v8); } catch (e) {}
function f52() {
    return v7;
}
for (const v53 in v47) {
    v53[7] = v53;
}
