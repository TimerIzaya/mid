function f6(a7, a8, a9) {
    -a8;
    const o15 = {
        set c(a12) {
            try { this["p"]("p", a8, this, "p"); } catch (e) {}
        },
        ...a8,
        "d": 1n,
        7: -4096n,
        __proto__: a8,
        5: a9,
        "a": a8,
        ...1n,
        [-46544n]: a9,
    };
    o15[7];
    return o15;
}
f6(1n, -1n, -4096n);
f6(-1n, 528587354n, 528587354n);
f6(-46544n, 1n, 4294967295n);
[-1813808316,-58320,2002,536870887,4,2021695440,-1,53991];
[268435441,7,23746,-1024,53903,-2,6];
const v22 = [38481,9007199254740991,1953851185,65536];
const v24 = new BigInt64Array();
function f25() {
    class C27 {
    }
    const v28 = new C27();
    const v31 = C27[5];
    try { ("g").fixed(); } catch (e) {}
    Uint8ClampedArray.length = Uint8ClampedArray;
    -1000000000.0 >> -1000000000.0;
    31 * 31;
    v31.name;
    function f50(a51, a52) {
        function f54(a55) {
            return v22;
        }
        class C58 {
            toString(a60) {
                this.e *= 0.8199829542463926;
            }
        }
        this.onmessage = f54;
        return a51;
    }
    try { f50(3929, Int16Array); } catch (e) {}
    Worker.e = Worker;
    v24[v28] %= -4294967296;
    return C27;
}
%PrepareFunctionForOptimization(f25);
const v67 = f25();
try { new v67(); } catch (e) {}
%OptimizeFunctionOnNextCall(f25);
f25();
