const v3 = [512,512];
const v4 = [512,-2147483648];
const v5 = [v4,v4,v3,-2147483648];
function f9(a10, a11) {
    const o21 = {
        "g": a10,
        p(a13, a14) {
            a10[161] = a11;
            a14[16] = a14;
            return v4;
        },
        "e": v5,
        [9007199254740990](a16, a17) {
            /l[^\x01(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\107\w|\d]/gudy;
            /9t2a(?=bbb|bb)c/gdm;
            /H(?:a{5,1000000}){3,1000000}(\2)(\1)/gvdsy;
            return a17;
        },
    };
    return o21;
}
const v22 = f9(v5, 512);
f9(v5, 9007199254740990);
const v24 = f9(v5, 512);
const v25 = /(?<a>.)\k<a>?/vdimsy;
let v26;
try { v26 = v25(); } catch (e) {}
const v27 = [v26,v26,v26,v26];
const v29 = new BigInt64Array();
function f31() {
    3.4890473589784586e+307 === 3.4890473589784586e+307;
    let v34 = 1000000000000.0;
    const v35 = v34--;
    let v37 = 257828.6336153492;
    const v39 = -v27;
    -(v39 && v27);
    v37--;
    class C44 {
        static #m(a46) {
        }
        constructor(a48) {
            const v50 = new Float32Array();
            v50.entries().next();
            const v53 = new Uint16Array(12, -4294967296, v35);
            new Float32Array(v53);
        }
    }
    try { new C44(); } catch (e) {}
    try { new C44(); } catch (e) {}
    const v58 = Symbol.iterator;
    const v63 = -15 >> -15;
    Math.cbrt(-7.313024265537074e+307);
    const v65 = -7.313024265537074e+307 >> v63;
    !-7.313024265537074e+307;
    const v67 = v39 * v65;
    Math[v58] = v58;
    try { v29.reduce(v26); } catch (e) {}
    const v69 = new C44();
    const v70 = new C44();
    try { v70.propertyIsEnumerable(v39); } catch (e) {}
    const v72 = new C44();
    const v73 = [];
    const v74 = [v72];
    v74 - v67;
    C44[2937];
    f31();
    f9(Uint16Array, v22);
    try {
        v24.toString = f31;
    } catch(e79) {
    }
    v74[0];
    class C81 extends C44 {
        [v69];
        #n(a83, a84, a85, a86) {
            return v74;
        }
    }
    const v87 = new C81();
    const v88 = v74.constructor;
    new v88();
    class C90 extends v88 {
    }
    const v91 = new C90();
    v91.constructor.bind(v37);
    Object.defineProperty(v91, 65537, { value: v70 });
    try { v87.m(v73); } catch (e) {}
    return v26;
}
%PrepareFunctionForOptimization(f31);
f31();
f31();
%OptimizeFunctionOnNextCall(f31);
f31();
