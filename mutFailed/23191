function F0() {
    if (!new.target) { throw 'must be called with new'; }
    return this;
    const v3 = new Float32Array(Float32Array, Float32Array, Float32Array);
    async function f5(a6, a7, a8) {
        v3.h = v3;
        await 160;
        return f5;
    }
    try {
        this.g = -399505360;
    } catch(e11) {
    }
    try {
        const v12 = /a$\P{Decimal_Number}/gvdims;
        function f14(a15, a16, a17, a18) {
            function f19() {
                const o28 = {
                    valueOf(a21, a22) {
                        return this;
                    },
                    [536870888n](a24, a25, a26, a27) {
                    },
                };
                return a17;
            }
            f19();
            for (let i32 = 0, i33 = 10; i32 < i33; i33--) {
                for (let v40 = 0; v40 < 25; v40++) {
                    v12.hasIndices = v12;
                }
            }
            const v43 = new Int32Array(1024);
            1024 * v43[3];
            for (let v46 = 0; v46 < 5; v46++) {
                class C47 {
                }
            }
            return a17;
        }
        this.h = -399505360;
    } catch(e48) {
    }
    Object.defineProperty([], "h", { configurable: true, enumerable: true, set: Date });
    function F51(a53, a54, a55) {
        if (!new.target) { throw 'must be called with new'; }
        const v56 = this.constructor;
        try { new v56(a53); } catch (e) {}
        a53.pop();
    }
    try {
        this.a = -399505360;
        -4294967295 << -12;
        const v64 = new Int8Array(8);
        [v64];
    } catch(e66) {
    }
}
new F0();
new F0();
new F0();
class C73 {
    268435456;
    static m(a75, a76, a77, a78) {
        function f80(a81, a82, a83, a84) {
            Object.defineProperty(arguments, -1, { writable: true, enumerable: true, value: -9524 });
            return a82;
        }
        try {
            new F0();
        } catch(e87) {
        }
        return a75;
    }
    static [1433242740n];
    a = 512n;
    #g;
    static 146851205 = F0;
    7 = -128n;
    static o(a89) {
        a89 % this;
        return super.d;
    }
    #f = 1433242740n;
}
new C73();
new Float32Array();
Math.log1p(4294967295);
const v98 = [2.220446049250313e-16,-2.0,9.472378156545009,0.0,1e-15,0.3751557433004281,0.0,-474740.46049005154];
const o104 = {
    set h(a100) {
    },
    __proto__: v98,
    o(a102, a103) {
        return this;
    },
};
new C73();
new C73();
function f107() {
    return 1433242740n;
}
function f108() {
    return f107;
}
class C110 extends TypeError {
    o(a112, a113) {
    }
    static get a() {
        super[this] = 4294967295;
        try {
            arguments.#b <<= arguments;
        } catch(e117) {
        }
        return SharedArrayBuffer;
    }
}
new C110();
