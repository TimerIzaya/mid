const v0 = [];
class C1 {
    static c;
    constructor() {
        const o6 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o6);
    }
    a;
    static #a;
    d;
    #e;
}
function f8(a9, a10) {
    let v11 = -9223372036854775808n;
    v11 %= 45725n;
    return v0;
}
C1[Symbol.iterator] = f8;
const v15 = new C1();
new C1();
const v17 = new C1();
let v19 = -1798544586;
for (const v27 of v0) {
    try { C1.valueOf(-56.5830402376688, v27, v27, v15); } catch (e) {}
    const v32 = -v15;
    ++v19;
    Math.tan(v19).exp(v32);
    -2147483648 % v19;
}
[[-56.5830402376688,v17],v0,Infinity];
[v19,v19];
const v40 = `
    function f41() {
        return f41;
    }
`;
new Int32Array(7);
new Uint16Array(C1);
new Uint8Array(2264);
v40.normalize();
