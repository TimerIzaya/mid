const v3 = [-2];
v3[2] = v3;
const v4 = [-9223372036854775808,v3,-9223372036854775808,-9223372036854775808,-2];
function f5(a6, a7) {
    a7[5] = v4;
    function f8() {
        return f8;
    }
    const v9 = [-3,257];
    class C10 extends f8 {
        static #n(a12, a13, a14) {
            Object.defineProperty(v9, 10, { writable: true, configurable: true, enumerable: true, set: f8 });
        }
    }
    new C10();
    return f8;
}
v4[Symbol.toPrimitive] = f5;
v4[6] = v4;
const v18 = [v3];
function f19(a20, a21, a22) {
    try { a20.unshift(a20); } catch (e) {}
    const o37 = {
        ...a22,
        ...a21,
        get f() {
            return this;
        },
        ...-9223372036854775808,
        valueOf(a26) {
        },
        "c": v4,
        7: -26575,
        __proto__: a20,
        toString(a28, a29, a30, a31) {
            f19 instanceof a28;
            try { a31.trimEnd(); } catch (e) {}
            return "-1024";
        },
        "f": a20,
        [a20]: -2,
        [-26575]: v3,
        "e": -2,
        "a": v4,
        "h": v4,
        2147: a22,
    };
    return o37;
}
const v38 = v18.push();
v18.__proto__ = v38;
function f40() {
    -601018.3320674116 + isFinite;
    return -601018.3320674116;
}
f40();
f40();
f19(v4, v3, v4);
f19(v3, v4, v18);
function f48() {
    function f49() {
        return v18;
    }
    return f49;
}
Object.defineProperty(Date, Symbol.toPrimitive, { writable: true, get: f48 });
const v56 = new Int8Array();
const v57 = v56.buffer;
Object.defineProperty(v57, "constructor", { writable: true, configurable: true, value: Date });
const v58 = f19(v3, v18, v3);
const v60 = -40925;
const v63 = [536870887,-42204,-17288903,-3,9007199254740991,7];
const v65 = new Date(Date);
v65.setFullYear();
function f67(a68, a69) {
    Math.toString = f40;
    Math.atan2(Math, f67);
    return f67;
}
f67[Symbol.toPrimitive] = f40;
new Promise(f67);
const v76 = [6,268435440,13,1073741825];
try { v76.concat(v63); } catch (e) {}
const v78 = [-15,-2147483649,-899333997,3,1455560807,-1024,-4294967297,2098301778];
v78[7] = v78;
class C79 {
    constructor(a81) {
        function f82(a83) {
            v57[f19];
            class C86 {
                static {
                    try {
                    const t0 = 529940173;
                    t0(this, this);
                    } catch (e) {}
                    Math.cos(1000);
                    Math.tan(1000);
                }
            }
            return v38;
        }
        a81.toString = f82;
        let v93;
        try { v93 = a81.toLocaleString(); } catch (e) {}
        function f94(a95, a96) {
            a95[5];
        }
        f94.toString = Date;
        const v98 = f94?.toString;
        try { new v98(v93, -2); } catch (e) {}
        f94(v78);
        f94(v63);
        f94(a81);
    }
}
C79.constructor = Symbol;
let v103;
try { v103 = new C79(v58); } catch (e) {}
const v104 = C79.constructor;
const v105 = new C79(v76);
function f106() {
    return v65;
}
function f107(a108) {
    a108 >>> a108;
}
Object.defineProperty(v105, "c", { writable: true, configurable: true, enumerable: true, get: f106, set: f107 });
v105.c = v105;
const v110 = new C79(v63);
Object.defineProperty(v110, "constructor", { writable: true, configurable: true, enumerable: true, value: f106 });
try { v110.propertyIsEnumerable(v78); } catch (e) {}
const t131 = v110.constructor;
const v113 = new t131(v105);
v113.b = v113;
try { v63.some(v104); } catch (e) {}
const o115 = {
    __proto__: v78,
};
let {"c":v117,"g":v118,"length":v119,} = "size";
let v120 = v118?.[7];
[...v120] = "size";
function f121() {
    const o122 = {
    };
    return o122;
}
o115[7] = o115;
try { o115.groupToMap(v18, v103, v60); } catch (e) {}
function f124() {
}
Symbol.unscopables;
function F127() {
    if (!new.target) { throw 'must be called with new'; }
    0 < 0;
}
const v132 = new F127();
new Int32Array(268435441, 4, v132);
