function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 128;
    } catch(e3) {
    }
}
new F0();
new F0();
new F0();
new Uint16Array(16);
new Uint16Array(9);
new BigInt64Array(2317);
const v19 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
function f20(a21, a22, a23, a24) {
    try { a24(); } catch (e) {}
    const v26 = /(?:a*)+q(?<a>.)/guds;
    for (let [i30, i31] = (() => {
            0 * 0;
            return [0, 10];
        })();
        (() => {
            const v32 = i30 < i31;
            v32 && v32;
            class C34 {
                9;
            }
            const t5 = 16;
            new t5();
            new C34();
            new C34();
            return v32;
        })();
        i31-- >>> F0) {
        const v44 = i30 + i30;
        for (let v45 = 0; v45 < 5; v45++) {
            const v46 = v26.constructor;
            let v47;
            try { v47 = v46(v26, v26); } catch (e) {}
            v47.constructor;
            v26.constructor.lastParen;
            const v52 = [i31,v44,i31,i31,i31];
            v52[4];
            v52 > 8n;
        }
    }
    return a21;
}
for (let v55 = 0; v55 < 5; v55++) {
    f20(v55, v19, v55, f20);
}
