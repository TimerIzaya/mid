let v0 = -22209;
try { ("14").toUpperCase(); } catch (e) {}
function f7(a8, a9, a10) {
    const o19 = {
        3018: "14",
        ..."object",
        [a8]: 205209698,
        ..."object",
        ...a10,
        set d(a12) {
            this[a8] |= a9;
            v0 **= a9;
        },
        "h": "14",
        5: 1471396864,
        get e() {
            a10["padEnd"](205209698, a10);
            return 9316;
        },
    };
    return o19;
}
const v20 = f7("valueOf", v0, "valueOf");
const v21 = f7("valueOf", 205209698, "valueOf");
v21[3018] = v21;
f7("14", 1471396864, "valueOf");
for (let v27 = 0; v27 < 5; v27++) {
    function f28() {
        Symbol.match;
        const v31 = Symbol.iterator;
        try {
            const v32 = new f7(f7, v20, 6.086662227760613);
            v32[3];
        } catch(e34) {
            [4.0,-1000000000.0];
            [1.7976931348623157e+308,9.62467302067552,52206.80419634911];
            [4.0,-254749.76525561768,-41435.56245059485,5.0,-7.702106193723342,-2.0,1.7976931348623157e+308];
        } finally {
            let v38;
            try { v38 = v20.toString(); } catch (e) {}
            try { v38.trimEnd(); } catch (e) {}
        }
        const o48 = {
            [v31]() {
                let v41 = 10;
                const o47 = {
                    next() {
                        v41--;
                        const v45 = v41 == 0;
                        const o46 = {
                            "done": v45,
                            "value": v41,
                        };
                        return o46;
                    },
                };
                return o47;
            },
        };
        o48.h = o48;
        for (let v49 = 0; v49 < 5; v49++) {
            const v50 = [-Infinity,1.7976931348623157e+308,1.0,1.7976931348623157e+308,-1.0,Infinity];
            try { v50.fill(v50); } catch (e) {}
            f28.length >>>= -65536;
        }
        return f28;
    }
    v27();
    %OptimizeFunctionOnNextCall(f28);
}
