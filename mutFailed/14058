const v0 = [];
const v1 = [-536870912,-650395192,1175385978];
const v2 = [859596185,512,277118387,127,-15206,-65537,65537];
const v3 = [-52520,1024,127,-9007199254740990,30567];
[v0,Infinity,v0];
const v8 = [v2,Infinity,v1,581.2257447018683,581.2257447018683];
[-0.0,v3];
class C10 {
    static #valueOf(a12, a13, a14, a15) {
        a14[5] = -0.0;
        const o19 = {
            "execution": "async",
            "type": "minor",
        };
        return gc(o19);
    }
    static c = -0.0;
    g = v2;
}
new C10();
new C10();
const v23 = new C10();
function f24(a25, a26, a27, a28) {
    const v29 = +a27;
    const v30 = `
        new Reflect();
    `;
    eval(v30);
    let v35 = v29 - v29;
    const v36 = v35++;
    const v38 = -(a27 % a27);
    v38 / v38;
    const o53 = {
        [v29](a41, a42, a43, a44) {
            a25?.[Infinity];
            const o48 = {
                "maxByteLength": 1073741824,
            };
            const v50 = new SharedArrayBuffer(12, o48);
            const v52 = new RangeError(v50);
            return v52;
        },
    };
    try { o53.n(v35, v36, v35, f24); } catch (e) {}
    return f24;
}
for (let v55 = 0; v55 < 500; v55++) {
    f24(v55, v55, f24, f24);
}
const o57 = {
    "e": Infinity,
};
try {
    const o58 = {
    };
    const v59 = [o58,v8,v23,v3,v1,-0.0];
    new f24(o58, o57, v59, v59);
} catch(e61) {
}
