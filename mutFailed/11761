class C3 {
    h = 58419.80289701745;
    #f = 58419.80289701745;
    static valueOf(a5) {
        const o9 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o9);
        return 58419.80289701745;
    }
    static #g = -715.9902311032452;
    [-715.9902311032452] = 0.6364678518687085;
}
const v11 = new C3();
const v12 = new C3();
const v13 = new C3();
class C14 {
    constructor(a16, a17, a18) {
        try { a18.valueOf(v11); } catch (e) {}
        const o20 = {
        };
        new Proxy(a18, o20);
    }
    static {
        delete v13?.h;
        C3 -= v11;
    }
    6 = -715.9902311032452;
    [0.6364678518687085] = v13;
    static 4040183559 = C3;
    static e;
}
const v25 = new C14(v11, 58419.80289701745, v13);
const v26 = new C14(v25, 58419.80289701745, v25);
new C14(v12, 0.6364678518687085, v26);
class C28 extends C14 {
    toString(a30, a31) {
        this in this;
        return v13;
    }
    16 = 0.6364678518687085;
    h;
    constructor(a34, a35) {
        super(a35, -715.9902311032452, a35);
        new Map();
        function f38() {
            return Map;
        }
    }
    [0.6364678518687085] = v26;
}
class C41 extends Date {
}
const v42 = new C41(-4294967296);
Object.defineProperty(Date, v42, { get: Date, set: Date });
new C28(C28, C28);
new C28(v11, v25);
new C28(v25, 0.6364678518687085);
const v48 = new String();
Object.defineProperty(v48, 7, { writable: true, configurable: true, enumerable: true, value: Int8Array });
