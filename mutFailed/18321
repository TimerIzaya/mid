[-61582,-65221,4,83484658,-964978140,-6973186,-4294967295];
const v1 = [536870888,51908,-4294967295,2147483649,-653509522,-970231420,16,-2807,4096];
const v2 = [1073741823,-3,129,-63815,256,-248178830,-4096,352835595,4096];
/a||bc/my;
/\p{gc=Nd}ia\bc\p{gc=Nd}r1/gdims;
const v7 = new Uint32Array(4);
v7.fill();
function f9() {
    const v11 = new Float64Array();
    v11[2];
    return 4;
}
/[foo[z]*]/gu;
new Float64Array(3378);
function f19(a20, a21, a22) {
}
const v23 = [];
try {
    v23.some();
} catch(e25) {
    e25.stack;
}
new Uint8Array(2);
new BigInt64Array(949);
function f31(a32, a33, a34, a35) {
    const v36 = /(?:a*)+q(?<a>.)/guds;
    for (let [i53, i54] = (() => {
            const v42 = new Uint8ClampedArray(3, [1e-15,0.09547881173263595,1.7976931348623157e+308,0.6658730271969261,-1000.0]);
            for (let i44 = 0;
                (() => {
                    9 != 9;
                    const v47 = -9;
                    v47 + v47;
                    return i44 < 9;
                })();
                i44++) {
                v42[i44] = 0;
            }
            return [0, 10];
        })();
        i53 < i54;
        i54--) {
        for (let v61 = 0; v61 < 5; v61++) {
            const v62 = v36.dotAll;
            const o67 = {
                __proto__: v1,
                get e() {
                    return Float64Array;
                },
                "arguments": v2,
                get d() {
                    return v62;
                },
                o(a66) {
                    return a66;
                },
            };
        }
    }
    return a35;
}
for (let v68 = 0; v68 < 10; v68++) {
    f31(f31, v68, v68, f31);
}
