const v0 = [];
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        function f3(a4) {
            return this;
        }
        class C5 extends f3 {
            [this] = f3;
        }
        this.e = v0;
    } catch(e6) {
    }
}
const v7 = new F1();
new F1();
new F1();
function f10() {
    return f10;
}
const o13 = {
    "maxByteLength": 194,
};
const v15 = new ArrayBuffer(5, o13);
new Int32Array(v15);
Int32Array && v0;
try {
    const t27 = "bigint";
    t27.length = 2;
} catch(e25) {
}
const v26 = new Uint32Array(8);
v7.constructor;
class C28 {
    4259938026;
}
const o30 = {
    "type": "function",
};
new Uint16Array(64);
new Int32Array(v26);
const v37 = [-768400.1657361139];
class C38 {
}
new C38();
const v40 = new C38();
function F41(a43, a44, a45) {
    if (!new.target) { throw 'must be called with new'; }
    const v46 = this.constructor;
    try { new v46(a44, a45); } catch (e) {}
    -v7;
    a45 | 255;
    try {
        ([-Infinity,Infinity,959819.665748626])["concat"](v37);
        const v54 = new BigInt64Array();
        const v55 = `
            var c = v54;
        `;
        const t58 = 255;
        t58.e = v40;
    } catch(e56) {
        a45 - v37;
    }
    new Uint8ClampedArray([5.0]);
    const v61 = [-1.5314324604839498e+308,-1.8081364344875581,-2.2250738585072014e-308,3.0,3.0];
    v61[5] = v61;
}
const v62 = new F41();
const t68 = v62.constructor;
new t68();
