function f3(a4, a5) {
    a4.toString = f3;
    a4.length = a4;
    const o6 = {
        "b": a4,
        [a4]: 1000000000.0,
        [a5]: 0.18345289660859265,
        8: a4,
        "c": a5,
        "h": 1000000000.0,
        "a": a4,
        "h": 1.0,
        __proto__: a4,
        "f": 0.18345289660859265,
        "e": a4,
        [1.0]: 0.18345289660859265,
    };
    return o6;
}
f3.toString = f3;
f3(f3, 1000000000.0);
const v8 = f3(1.0, 1000000000.0);
f3(f3, 1000000000.0)[8];
("8")[0];
-8627 / -8627;
try { ("bigint").toWellFormed(); } catch (e) {}
class C19 {
}
C19.length;
const v21 = new C19();
try { v21.valueOf(); } catch (e) {}
class C23 extends C19 {
    constructor(a25, a26, a27, a28) {
        if (v21) {
        }
    }
}
-54617;
function F34() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(v8); } catch (e) {}
    try {
        this.g = -128;
    } catch(e38) {
    }
    try {
        this.b = -128;
    } catch(e39) {
    }
}
const v40 = new F34();
new F34();
const v42 = new F34();
v42.g;
let v44 = 595;
v44--;
Uint8ClampedArray.valueOf = f3;
const v47 = new Uint8ClampedArray(v44);
const v50 = new BigUint64Array(64);
~0;
function f53() {
    return v50;
}
v40.g *= -12;
/n/vdimsy;
/u(\2)(\1)a[^a]+/vy;
const v56 = /a\w/gudms;
Object.defineProperty(v56, 2147483649, { configurable: true, value: v56 });
v56[2147483649];
let [v58,v59] = v47;
v59 >>> v59;
const v62 = v40.__proto__?.__defineGetter__;
try { new v62(1000000000.0, 1000000000.0); } catch (e) {}
new Uint8Array(0);
function F66(a68, a69, a70) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor = f3;
    const v71 = this.constructor;
    try { new v71(); } catch (e) {}
}
const v73 = new F66();
const v74 = v73?.__defineSetter__;
try { new v74(f53, f53); } catch (e) {}
function f76() {
    return 64;
}
new WeakSet();
12 + 12;
2 - 2;
const v86 = [12];
try { v86.toLocaleString(); } catch (e) {}
for (const v89 of v86) {
    v89 >>> v89;
    Uint8ClampedArray <= v89;
}
!(delete v86[0]);
