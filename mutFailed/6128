function f0() {
    const o10 = {
        "b": "e",
        "h": "boolean",
        "a": "e",
        __proto__: "boolean",
        ..."boolean",
        set c(a5) {
            try {
                this.valueOf = a5;
            } catch(e6) {
            }
        },
        "c": "boolean",
    };
    return o10;
}
const v11 = f0();
f0();
const v13 = f0();
const v16 = new Array(10);
[-3.0];
const v18 = [2.0,-2.8704549365094877e+306,-2.2250738585072014e-308,1.0,608643.4360038617,-2.094182692329145];
const v19 = [0.0,5.0,0.21244985054039434,-Infinity,1000.0,-13795.189123376505,-596.5219876350774,-5.115047460327824e+307,-218.38299502559312,152.53206447771117];
const v20 = /xyz{0,1}*/gvims;
/[^123](?:ab)?xyz{1,}?/vims;
/(a\scLs(\2)(\1)[\ca])/vmy;
function f23(a24, a25, a26, a27) {
    const o50 = {
        11: Array,
        [v19](a29, a30, a31) {
            try {
                super.p(a29);
            } catch(e33) {
            }
            const v35 = Symbol.iterator;
            const o49 = {
                "e": v18,
                "e": 10,
                get d() {
                    return this;
                },
                [v35]() {
                    let v38 = 10;
                    const o48 = {
                        next() {
                            v38--;
                            new Int8Array();
                            const v45 = [-1.5424212036356715e+308];
                            v45[536870887n] = v45;
                            const v46 = v38 == 0;
                            const o47 = {
                                "done": v46,
                                "value": v38,
                            };
                            return o47;
                        },
                    };
                    return o48;
                },
            };
            return a24;
        },
    };
    return o50;
}
const v51 = f23(v18, f23, v13, v13);
f23(v51, v16, f23(v51, v51, 10, v11), v11);
function f54() {
}
function f55() {
    const o87 = {
        "b": f54,
        [f54]: f54,
        "e": v19,
        "maxByteLength": 10,
        "h": v20,
        [v51]: f54,
        ...v18,
        valueOf() {
            let v58 = -(-1e-15);
            v58--;
            const t81 = /a\Sc?/giy;
            t81.valueOf = f54;
            try {
                f54();
            } catch(e62) {
                Symbol("bZ");
                const v66 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
                class C67 {
                    constructor(a69, a70, a71, a72) {
                        const v73 = this?.constructor;
                        try { new v73(v66, a71, a71); } catch (e) {}
                        a70 >>> a70;
                        0.061410412759498656 >>> 0.061410412759498656;
                    }
                }
            }
            function f78(a79, a80) {
                return a79;
            }
            const v82 = new f0();
            v82[Symbol.toPrimitive] = gc;
            class C85 extends f0 {
                [v82] = v82;
            }
            try {
                this.valueOf = f54;
            } catch(e86) {
            }
            return f54;
        },
    };
    return o87;
}
f55();
const v89 = f55();
const v90 = v89?.b;
try { new v90(); } catch (e) {}
function f94(a95, a96) {
    const o97 = {
        ...a95,
    };
    return f94;
}
f94();
new Uint8Array(268435440);
function F100() {
    if (!new.target) { throw 'must be called with new'; }
}
class C102 extends F100 {
}
Date[-22872n] = Date;
const v106 = ("function").length;
const v107 = f55();
function F108(a110, a111) {
    if (!new.target) { throw 'must be called with new'; }
    const v112 = this?.constructor;
    try { new v112(a110, a110); } catch (e) {}
    new Uint16Array(v106);
    const v116 = [];
    const o117 = {
        ...v116,
    };
    try {
        this.b = a111;
    } catch(e118) {
    }
    try {
        this.c = a110;
    } catch(e119) {
    }
}
const v120 = new F108(v107, v107);
new F108(v89, v120);
new F108(v107, v120);
-6n * -6n;
function f128(a129, a130) {
    Math.atan2(Math, f128);
    return f128;
}
new Promise(f128);
1713234876 === 1713234876;
function f137(a138, a139) {
}
f137();
f137(-1748, 1713234876);
function F142(a144, a145) {
    if (!new.target) { throw 'must be called with new'; }
    const v146 = this.constructor;
    v146.f = v146;
    function f150() {
        return f150;
    }
}
