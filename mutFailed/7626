function f0() {
    const o13 = {
        "h": "bigint",
        get f() {
            this[64];
            [948433.1794217944,7.398144544892434e+306,-0.0,1000000.0,0.6499198725753287,-3.0,1.7973466846819795e+308,2.2250738585072014e-308,-632.5482782236891,-1e-15];
            [0.2211861471684461,-7.939351552698484,5.0,522.0722455026021,NaN,-0.0,-0.0,4.0725112801562745e+307,-9.385708427344712];
            ([NaN,777773.7274481868,-7.00360037889096]).length;
            return -29528;
        },
        "f": "bigint",
        ..."bigint",
        "a": -16,
    };
    return o13;
}
f0();
const v15 = f0();
const v16 = f0();
const v17 = [v15,v15,f0,f0,v16];
[[v17,f0,v17],v15,v15,v16];
[-1024736410,63642,-1187352882,1,-14];
[44123,2147483649,-2];
[268435456,1073741823,65535,-1684342992,4,-4294967297,-9007199254740991,4294967297,4294967297,4294967295];
new Uint8Array(255);
new Float32Array(256);
new Uint16Array(3);
[-9007199254740990,268435441];
const v33 = [-37207,127,-4,-2147483649,65535,-1024,-536870912];
[4294967297,-256,8,1204244361,536870887];
[4,268435456,-1988579072,-9007199254740991,-31917];
[-1257322457,8,127,-14,39653,128,9007199254740990];
const v37 = [9007199254740990,16,-65536,7,10,9223372036854775807,16,4,1073741824];
let v38 = [29915,-9007199254740990,9];
const v39 = [39049,-2147483647,9007199254740991,30221,268435456,-2147483647,41987];
function f40() {
    return v33;
}
function f41(a42) {
    function f43(a44, a45) {
        return v16;
    }
}
Object.defineProperty(v39, Symbol.isConcatSpreadable, { writable: true, configurable: true, enumerable: true, get: f40, set: f41 });
const v48 = [2147483647,-32974,7,-54836,-9,-15,10000];
v48.toString = f41;
const v49 = [268435440,49273,-15,214837996,-12,65536,1291301446,-65535];
v49[Symbol.isConcatSpreadable] = v49;
try { v49.concat(v39); } catch (e) {}
if (v39 <= v48) {
    v37 ** v39;
    v38 += v48;
} else {
    var d = v48;
}
[24691,802039630,-9223372036854775808,-27820,-1112311792,-26767,1098810331];
[881994048,268435456,1,1024,39940,8242,4740,-12,1024,1073741825];
new BigInt64Array();
const v62 = new Int32Array(1);
v62[0] = v62;
const v63 = (a64, a65, a66) => {
    let v67 = a64 & a64;
    ({"h":v67,"length":a64,...v67} = a66);
    return a66;
};
const v69 = v62 instanceof BigInt64Array;
v69 || v69;
let v71 = gc;
try { v71.bind(v49); } catch (e) {}
const v73 = v71();
const v74 = ("object").trim();
try { v74.sup(); } catch (e) {}
v71 /= v73;
