const v0 = [-14,4294967295,536870889,1432014844,-4,49767,-8855,-49283];
const v1 = [-64784,10,-40790];
[2,-2147483649,-16546,5,268435456,65536];
512 >> 512;
const v6 = new Float64Array(512);
4096 >>> 4096;
const v10 = new Uint8ClampedArray(4096, Uint8ClampedArray, v1);
v10[995];
try { new Map(Uint8ClampedArray, Map, Uint8ClampedArray); } catch (e) {}
const v15 = Map.length;
v15 ^ v15;
const v17 = new Map(1523);
try { v17.entries(); } catch (e) {}
class C19 {
    constructor(a21, a22) {
        for (let i = 0; i < 10; i++) {
            this[this];
        }
    }
}
const v24 = C19?.constructor;
try { v24.slice(); } catch (e) {}
try { new v24(1523); } catch (e) {}
const v27 = new C19();
const v28 = v27?.__defineSetter__;
try { new v28(v0, v0); } catch (e) {}
const v30 = v27?.constructor;
try { new v30(Float64Array, v6); } catch (e) {}
