const v0 = /(?:a+)?a?/ui;
const v1 = /(YU(x)(x)(x)\12a\sc*)/gvm;
const v2 = /(C[x\dz])/dmsy;
class C3 {
    [v0];
    set b(a5) {
        try {
            this.toString = a5;
        } catch(e6) {
        }
        const v9 = [[v0,this,v2,v1[613447047]]];
        [v9,v9,this,v0];
    }
    #a = v0;
}
new C3();
new C3();
new C3();
new Array(218);
const v21 = new Set();
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a24;
    } catch(e26) {
        for (let [v27,v28] of a24) {
            for (let v29 = 0; v29 < 100; v29++) {
                Array(v28);
            }
            %VerifyType(e26 ^ e26);
            try {
                v21.values();
            } catch(e33) {
            }
        }
    }
    try {
        this.h = v21;
    } catch(e34) {
    }
    try {
        const v35 = v21[this];
        try {
            new F22(v35, -268435456n);
        } catch(e38) {
        }
        this.b = Set;
    } catch(e39) {
    }
}
const v40 = new F22(Set, Set);
const v41 = new F22(Set, F22);
const v42 = new F22(v40, F22);
const v46 = [65537,268435441,63298,-5,1235122603];
const v47 = [128,215394418];
const v48 = v47.entries();
const v49 = [-2,-4294967296,4294967297];
function F50(a52, a53, a54, a55) {
    if (!new.target) { throw 'must be called with new'; }
}
const v56 = new F50(-714582153, F50, -714582153, v47);
const v58 = new F22(v42, null);
new BigUint64Array(0);
new Int32Array(1519);
v47[2147483648];
Array <= 1024;
v48 > -1775321500 ? v48 : -1775321500;
try { v41["p"](null, "p", "p"); } catch (e) {}
v56.length;
const v72 = new F50(9, v56, 9, v49);
v72.b = v72;
const v73 = new F50(1024, v72, v49, v49);
const v81 = ("string").trimStart();
v48[3];
let v85;
try { v85 = v81(); } catch (e) {}
v46[v85] = v47;
0 ^ 9;
const v90 = -1000;
~9;
v90 >>> v90;
a = ("string").length - F50;
v21[v72];
v58.__proto__;
-35417 - -35417;
let v99 = undefined;
v99 = v73;
