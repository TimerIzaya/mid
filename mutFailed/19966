let v0 = [-5.194536688656797,-942915.4709141054,1.5961229676928507e+308,3.53014191024963e+307,-0.7291706907051481,-6.6554576510345775];
const v1 = [2.220446049250313e-16,-1000000000000.0,4.0,5.027414554195024,1000000000.0,1000000000000.0,-164.449106173024,-1000000000000.0,2.2250738585072014e-308,-9.810613728419163];
const v2 = [1000000000.0,1.0,NaN,-2.0,-1000000000.0,Infinity,1000000000000.0,1.4812054188991517e+308,876507.739292199,-0.0];
function f6(a7, a8, a9) {
    const o21 = {
        [a7](a11, a12, a13) {
            a12[0];
            v0 = a12;
            return 3.0;
        },
        [v2]: 3.0,
        [a7]: 3.0,
        9: -5.0,
        get d() {
            const v16 = a7[this];
            this[v0] = v16;
            try {
                this.fuck(-2147483649, [-2147483649,v16,a7,this,v2]);
            } catch(e20) {
            }
            return -5.0;
        },
    };
    return o21;
}
f6(v2, -5.0, 1000000000000.0);
f6(v2, -5.0, -5.0);
f6(v1, -5.0, 3.0);
new BigInt64Array(210);
new Int8Array(257);
new Uint32Array(1000);
let v37;
try { v37 = ("function")["-268435456"](); } catch (e) {}
const v38 = v37 + v37;
v38 >> v38;
class C42 {
    static p(a44) {
    }
}
let v48;
try { v48 = new C42(); } catch (e) {}
const v49 = v48.constructor;
try { v49(); } catch (e) {}
const v51 = new C42();
v51.propertyIsEnumerable;
const v53 = new C42();
const t46 = v53.constructor;
new t46();
try { v53.constructor(); } catch (e) {}
const v57 = new C42();
const v58 = v57.constructor;
let v59;
try { v59 = new v58(); } catch (e) {}
const v60 = v59?.__defineGetter__;
try { new v60("toStringTag", "toStringTag"); } catch (e) {}
v59?.constructor;
const t55 = -5.0;
new t55();
const v64 = new C42();
v64.constructor;
v64.__defineGetter__;
function F67(a69, a70, a71, a72) {
    if (!new.target) { throw 'must be called with new'; }
    const v73 = this?.constructor;
    try { new v73(a69, a69); } catch (e) {}
    try { a70.isPrototypeOf(C42); } catch (e) {}
}
const v76 = F67?.bind;
try { v76(); } catch (e) {}
new F67("toStringTag", v57);
new F67(v53, "flags");
const v80 = new F67("HkAXC", "toStringTag", "toStringTag", "HkAXC");
let v83 = -128 % -128;
v83++;
[-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v86 = [601759695];
const v87 = [1073741824,1073741823,1376142744,1073741825];
function f89(a90, a91, a92, a93) {
    function f95() {
        const o110 = {
            [522675525n](a98, a99) {
                Int16Array[0] = -27833;
            },
            get d() {
                return this;
            },
            "maxByteLength": -128,
            "c": v86,
            valueOf(a104, a105) {
            },
            toString(a107, a108, a109) {
            },
        };
        o110.toString(v80, v80, v80);
    }
    f95();
    new Int8Array();
    Int8Array.buffer;
    %OptimizeFunctionOnNextCall(f95);
    let v117;
    try { v117 = v87["find"]("find", a93, v86, v87); } catch (e) {}
    v117 <= a92;
    return arguments;
}
try { f89("HkAXC", v86, "flags", "HkAXC"); } catch (e) {}
for (let v120 = 0; v120 < 5; v120++) {
    f89();
}
