const v0 = /(a\nb\bc)/uim;
function f1(a2, a3) {
    a2[a2] |= a2;
    class C4 {
    }
    return v0;
}
Object.defineProperty(v0, "toString", { writable: true, enumerable: true, value: f1 });
const v5 = /Ca*?(?<=)/iy;
v5[Symbol.toPrimitive] = f1;
const v8 = /(?:a+)*/gudy;
function f9(a10) {
    const o35 = {
        set d(a12) {
            super.g = a10;
            const v13 = super[v0];
            try { v13(v13, a10, this, ...a10, ...a12, v13); } catch (e) {}
            this[9] = v0;
            try {
                super.reduce(a10);
            } catch(e16) {
            }
        },
        [a10](a18, a19) {
            const v22 = Reflect.construct(v8, [v8,v5,a10], a10);
            v8[57] = v22;
            v5 == Reflect ? v5 : Reflect;
            try { v8.exec(v22); } catch (e) {}
            new Uint8ClampedArray(4096);
            new Uint8Array(1660);
            new Int16Array(1027);
            return a10;
        },
    };
    return o35;
}
f9(v5);
f9(v0);
f9(v5);
new BigInt64Array(16);
new Uint16Array(64);
new Int32Array(3481);
class C49 {
    #a = 1453;
    1073741825;
}
for (let v50 = 0; v50 < 10; v50++) {
    new C49();
}
