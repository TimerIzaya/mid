const v0 = [-1000.0,-313493.36337341846,-5.57864256298889,484.02847822373633,2.0,-6.363053392953832e+307,-17.845837241143386,0.0,0.07267666928331584,1000000000000.0];
const v1 = [-0.9595076295785319,-1e-15,-4.0,-2.0];
function f2(a3) {
    return f2;
}
v0[v0] = v0;
v0.length -= v1;
const v6 = [v0,Worker,[v0],Worker,f2];
[v6,v1,v6,v6,Worker];
for (let v9 = 0; v9 < 100; v9++) {
    f2(f2);
}
const v11 = ("function").__proto__;
try { new v11(v11, "function", v6, "function", v11); } catch (e) {}
const o13 = {
    "type": "function",
};
const v14 = new Worker(f2, o13);
const v15 = [1000000000000.0,2.0,-1.5499432040884758e+308,-0.0,-2.2250738585072014e-308,8.812350392219436,-1000.0,994965.5711139808];
const v16 = [v0,v15,v15];
[v16,v1,v16,v0,v0];
const v20 = new Int32Array(v14);
const v22 = new f2();
[v16,v0,v0];
function f24() {
    return Int32Array;
}
/o/iy;
const v29 = /xyz{1,}/gum;
for (let v30 = 0; v30 < 500; v30++) {
    class C32 {
    }
    const v35 = new Int32Array(v30, v30, 257);
    let v37 = new Map();
    [...v37] = v35;
}
/[Ofoo[z]*]/gvdmsy;
[2890];
new BigUint64Array();
function f45() {
}
try {
    v20.lastIndexOf(v22);
} catch(e48) {
}
v29[v6];
const v50 = new Float32Array(165);
new Int16Array(v50);
