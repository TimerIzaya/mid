-1073741824 + -1073741824;
[-1381325384,-40776,268435441,14,0,-36650,65535,556280884];
[65536,11,44432];
[-536870912,1073741825,-44367,-9223372036854775808,-14,1,699691855,-15];
-65535;
function F17() {
    if (!new.target) { throw 'must be called with new'; }
    function f19(a20, a21) {
        const o22 = {
        };
        return o22;
    }
    const v23 = f19();
    function f24() {
        return this;
    }
    f24.caller = v23;
    ~218;
    new Float32Array(218);
    for (const v29 of F17) {
        const v30 = v29 >>> v29;
        v30 <= v30;
        Object.defineProperty(v23, Float32Array, { configurable: true, enumerable: true, get: f19, set: f24 });
    }
}
F17.length;
const v33 = new F17();
try { v33.constructor(); } catch (e) {}
const v35 = v33.constructor;
try { new v35(); } catch (e) {}
new v35(v35, v35, 0.21413956420066482, F17, v33);
const v38 = new F17();
const v39 = v38?.constructor;
try { new v39(); } catch (e) {}
