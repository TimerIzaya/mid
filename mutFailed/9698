function F0() {
    if (!new.target) { throw 'must be called with new'; }
    class C3 {
        static {
            try {
            const t0 = -6;
            t0(this, this);
            } catch (e) {}
            Math.cos(1000);
            Math.tan(1000);
        }
    }
    const o14 = {
        __proto__: F0,
        [F0]: -2147483648,
        [F0](a12, a13) {
        },
        "c": -6,
        1073741824: C3,
    };
    try {
        this.a = -6;
    } catch(e15) {
    }
    try {
        this.c = -6;
    } catch(e16) {
    }
    try {
        this.h = -6;
    } catch(e17) {
    }
}
new F0();
const v19 = new F0();
const v20 = new F0();
const v21 = /[(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10]/gdsy;
const v22 = /a[a-z]/gy;
const v23 = /((?<=a))/di;
function f24(a25, a26) {
    const o50 = {
        [a26]: v22,
        ...v20,
        [v21]: v19,
        n(a28, a29) {
            {
                const v30 = v21[484220414];
                let v31;
                try { v31 = new v30(this, v23, a25, this); } catch (e) {}
                v31 = this;
            }
            let v34 = 63320;
            Math.round(v19);
            let v36 = v34++;
            v19 >>> v19;
            Math.acos(268435439);
            v36++;
            function f41(a42) {
                return -30207846;
            }
            15312 | [Infinity,5.072687501529128e+307,0.4093098171074484,4.0,-4.442441003635313e+306,843998.4933901483,-714.8973177887364];
            new Uint16Array(10);
            Math.cos(v34);
            return v36;
        },
    };
    return o50;
}
f24(v20, v19(v20, v20));
f24(v19, F0);
[-515617499,9007199254740990,1794867738,-2147483647,4,8];
[1073741824,1155028686,-4,1022797559];
class C59 {
}
[];
const v61 = [];
new Map();
function F64(a66, a67) {
    if (!new.target) { throw 'must be called with new'; }
    const v68 = this.constructor;
    try { new v68(); } catch (e) {}
    const o71 = {
        0: v61,
        162: "1ya",
    };
}
const v72 = new v19();
const v74 = ("-15").anchor();
const t87 = -3.74137854780201;
const v76 = new t87();
v76.setYear(v74);
const v79 = new Int32Array();
const v83 = new Uint8ClampedArray();
const v85 = [];
const o86 = {
    "arguments": v85,
    "type": "function",
};
const v87 = new Int32Array(3208);
const t99 = v79.constructor;
new t99(v83);
Int32Array.from(v87);
const v91 = new F64(Map, Map);
new F64(v72, v91);
let v93 = 16;
v93--;
("function").normalize;
3208 < 3208;
15312 | [Infinity,5.072687501529128e+307,0.4093098171074484,4.0,-4.442441003635313e+306,843998.4933901483,-714.8973177887364];
const v101 = new Int8Array(v93);
v101.toSorted();
