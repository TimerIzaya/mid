class C3 {
    [-8] = -8;
    f;
    static 536870889;
    static 1;
    #h;
    h;
    constructor(a5) {
        const v6 = a5 === "startsWith";
        if (v6) {
            function f7() {
                const v9 = new Set();
                return v9.clear();
            }
            f7();
            f7();
            function f13() {
                const v15 = Math.atan(Math);
                return v15 - v15;
            }
            const v19 = ~v6;
            const v22 = new Uint8Array();
            class C24 {
            }
            class C25 {
            }
            const v26 = new C25();
            const v27 = v26.constructor;
            let v28;
            try { v28 = v27(v27, C25); } catch (e) {}
            return v28;
            const v29 = Array();
            a5(670)["concat"](v29, v22);
            const v33 = v6 && -7734;
            -7734 & v6;
            Math.cbrt(-7734);
            Math.log2(v6);
            v33 | v19;
            const v39 = new BigInt64Array();
            function f41(a42, a43) {
                const o45 = {
                    get h() {
                        return this;
                    },
                    [a43]: 4,
                    2778757984: a42,
                    "h": v39,
                };
                return f41;
            }
        } else {
            this.f &= -8;
        }
    }
}
const v46 = new C3(C3);
v46.d = [-9223372036854775808];
const v49 = 1922 % 1922;
function f50() {
    return v49;
}
const v51 = new C3(-8);
new C3(C3);
function F59() {
    if (!new.target) { throw 'must be called with new'; }
    let v60 = this;
    const v62 = [v60,v60];
    const v64 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
    for (let v65 = 0; v65 < 5; v65++) {
        v64[v65] = v51;
    }
    [v62,1141300185,F59];
    [v60,1141300185];
    v60++;
    Math.asinh(536870887);
    +v60;
    Math.h = 1141300185;
    try {
        const v73 = v60.constructor;
        try { new WeakSet(); } catch (e) {}
        new Map();
        const v79 = new WeakMap();
        const o82 = {
            get e() {
                v79.get();
            },
        };
        const o84 = {
            "execution": "sync",
        };
        Math.atanh(0.033437543729764596);
        class C88 extends v73 {
            e = F59;
        }
        new C88();
    } catch(e90) {
    }
}
new v49();
const v92 = new F59();
new F59();
const o94 = {
};
function F95() {
    if (!new.target) { throw 'must be called with new'; }
    function f97(a98) {
        Object.defineProperty([58584,15,9007199254740990,2146023485], 65537, { writable: true, value: [46733,-268435456] });
    }
}
const o102 = {
    get a() {
    },
};
function f103() {
    class C104 {
        #valueOf(a106, a107, a108, a109) {
        }
    }
    const o113 = {
        ...4.879611189144899e+307,
        __proto__: v92,
        valueOf(a111, a112) {
        },
    };
}
