let v1 = Int8Array;
const v2 = new v1(8);
const v5 = new Uint32Array(14);
Math.tan(9007199254740992);
const v10 = [-1300791131,33477,0,5,-48254,14,4294967295,545422795];
v10.push;
const v13 = new Int8Array(9);
class C14 {
    16 = v10;
    [8];
    constructor(a16, a17, a18) {
        super();
        super.f = a16;
    }
    p(a20, a21, a22, a23) {
        try {
            v2.__proto__ = v13;
        } catch(e24) {
        }
        return a20;
    }
    static #o(a26, a27, a28) {
        v1 /= v1;
        this.a -= a27;
        v5.byteOffset ^= a27;
        [-2.2250738585072014e-308,738851.39554442,-4.0,-2.2250738585072014e-308];
        [-1000000000.0,2.1016912700295446e+307,786532.5637425552,-846225.94108391,0.0];
        const v31 = [-867171.425899881,782264.4334604971,-2.2250738585072014e-308,-0.0,2.0,3.0,-1.0];
        return /(ab)\1foo(?!bar)bazPg/gdiy;
        BigInt(BigInt);
        gc();
        return v31;
    }
}
new C14();
new C14();
function f39(a40, a41) {
}
new BigUint64Array(255);
new C14();
const v50 = new Date();
function f51(a52) {
    return a52;
}
v50.valueOf = f51;
function f53(a54) {
    const v56 = new Int32Array(9007199254740992);
    function f59(a60, a61, a62, a63) {
        let v65 = new Map();
        [...v65] = v56;
        let [...v66] = v56;
        return v65;
    }
    f59(Uint32Array, 121, v56, f59);
    return f51;
}
const v70 = [v50];
const o71 = {
    "arguments": v70,
    "type": "function",
};
new Worker(f53, o71);
