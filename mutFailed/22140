Int32Array[1] = 11;
new Int32Array(11);
const v5 = new Uint16Array(1024);
new BigInt64Array(2969);
class C9 extends Uint16Array {
    p(a11, a12, a13, a14) {
        const v15 = [this,v5,a12,a11];
        const v16 = [v15,v15,v15,this,a11];
        [a14,a12,a14,this];
        return v16;
    }
    static n(a19, a20, a21) {
        this[228] *= 11;
        new Int32Array(a20, 11, 2969);
        return a20 = BigInt64Array;
    }
    static [1024];
    #g = 2969;
}
let v23 = new C9();
function f24(a25, a26) {
    return Int32Array;
}
v23[Symbol.toPrimitive] = f24;
const v32 = new C9();
const v33 = new C9();
class C34 extends Uint16Array {
    constructor(a36, a37, a38) {
        super(Int32Array);
        Math.sinh(5);
        let v44 = v23++;
        v44 % 4.0;
        const v46 = v44++;
        Math.acosh(v44);
        v32 % v46;
    }
    static g;
}
new C34(Uint16Array, 1024, 1024);
new C34(Uint16Array, 1024, 11);
new C34(v33, v32, 1024);
for (let v52 = 0; v52 < 5; v52++) {
    function f55(a56) {
        const o57 = {
            ...65536,
            163: 4,
        };
        -o57[163];
        return f55;
    }
    f55(f55);
    %OptimizeFunctionOnNextCall(f55);
}
