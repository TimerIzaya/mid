const v0 = [-5.77043571237476e+307,-1.0,-3.0,-1.0,-578321.0097819875,4.0];
[484879.9056420517,668205.0745606022,55.760403973783696];
const v2 = [-1.7976931348623157e+308,7.550084307176324e+307,-1.0,2.0,-7.427530729005952e+307];
const v3 = [116259807,3,767996430,-1100931976,4294967295,-268435456,11,-2147483647,268435439,48462];
try { v3.copyWithin(v0, v2); } catch (e) {}
[6,1073741823,-1418993003];
const v6 = [182132872,-13,15,-9223372036854775807,-9,15,-2,3487,-65537,5];
try { v6.group(v3); } catch (e) {}
~-1409227893;
const v12 = /a??/gisy;
const v13 = /T?/vdy;
v13.dotAll = v13;
/a\wa$/vdisy;
15n + 15n;
const o20 = {
};
o20.g = o20;
o20.h = o20;
1842642860 * 1842642860;
const v23 = !o20;
const v24 = 1842642860 % v23;
let v25 = 1842642860 % v24;
v25++;
const v27 = new WeakMap();
let v28;
try { v28 = v27.delete(v23); } catch (e) {}
v28 || v28;
try { ("998423439").blink(); } catch (e) {}
("boolean")[1];
class C34 {
    static {
        try {
        const t0 = "boolean";
        t0(this);
        } catch (e) {}
    }
}
let v37;
try { v37 = new C34(); } catch (e) {}
const v38 = v37?.propertyIsEnumerable;
let v39;
try { v39 = new v25(v12); } catch (e) {}
const v41 = ("isInteger")?.replaceAll;
257n / 257n;
const v49 = [-2147483647,64098,-9383,1024,129,-5];
[1000,-16,-38597,12,-3399,32508];
const v51 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
try { new Uint32Array(Uint32Array, v23, -4); } catch (e) {}
const v54 = new Uint32Array();
const v56 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v57 = [601759695];
v57[0];
const v59 = [1073741824,1073741823,1376142744,1073741825];
function f61(a62, a63, a64, a65) {
    function f67() {
        let v70 = Float64Array;
        v70 = a63;
        b = v57;
        const v71 = v51.length;
        v71 + v71;
        try {
            v59.forEach(a63);
        } catch(e74) {
            try { e74.toString(); } catch (e) {}
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o77 = {
        };
        o77.h = o77;
        const o92 = {
            "c": 257n,
            "c": v57,
            valueOf(a80, a81) {
            },
            1073741824: v54,
            "maxByteLength": -268435456,
            "b": -4294967295,
            [1073741825n](a83, a84, a85, a86) {
                class C88 extends Date {
                    static get c() {
                    }
                }
                eval();
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v56,
            256: a65,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": a63,
            6: -268435456,
        };
    }
    f67();
    const v95 = new Int8Array();
    v95.buffer.slice(2147483648);
    const v101 = new Int32Array(1024);
    v101[3];
    for (let v103 = 0; v103 < 10; v103++) {
    }
    %OptimizeFunctionOnNextCall(f67);
    try { ("find").fontcolor(Int32Array); } catch (e) {}
    let v106;
    try { v106 = v59["find"](..."find", a65, ...v57, ...v59, ...522675525n); } catch (e) {}
    v106 <= a64;
    return arguments;
}
for (let v108 = 0; v108 < 10; v108++) {
    f61();
}
const o110 = {
};
function F111() {
    if (!new.target) { throw 'must be called with new'; }
    this.c = 5;
}
const v114 = new F111();
const v115 = new v39();
function f116(a117, a118) {
    const o119 = {
        "h": v115,
        6: v115,
        128: a118,
        "e": v114,
        __proto__: a117,
        "a": a117,
        ...a118,
    };
    return o119;
}
f116();
f116();
function f122() {
    return f116;
}
%OptimizeFunctionOnNextCall(f61);
f61();
const v124 = [-50328,-14,3,128,-11,64,-65535];
v124[6] = v124;
class C125 {
    [v49] = -1000000.0;
    constructor(a127, a128, a129, a130) {
        %VerifyType(a130);
        super[this];
    }
    g;
    c;
    #toString(a133, a134, a135) {
    }
    1 = v38;
}
const v136 = new C125(1073741825n, 1.0, 7.589647165982214);
v136[1];
const v138 = new C125(411585671n, -1000000.0, -1000000.0, 1.0);
v138[1] = v138;
new C125(v138, -1000000.0, 1.0);
/(?:a*)+bU\u0034xyz{1,32}/udi;
/vfoo|(bar|baz)|quux/gvds;
const v142 = /JO/gvy;
v142.a = v142;
381717.6504737276 + 381717.6504737276;
("f")?.trimRight;
let v147;
try { v147 = new v24(); } catch (e) {}
class C148 {
    #m(a150, a151) {
        function f152() {
            return a150;
        }
        super[a151] = "f";
        %VerifyType(v39);
        return f152;
    }
    static c;
}
try { C148(); } catch (e) {}
const v154 = new C148();
const v155 = v154?.constructor;
try { new v155(); } catch (e) {}
const v157 = new C148();
const v158 = v157?.constructor;
try { new v158(); } catch (e) {}
const v160 = new C148();
v160?.constructor;
class C162 {
    p(a164) {
        this.g ^= this[8];
    }
    static #n(a167, a168, a169, a170) {
    }
    7 = v160;
    #a = v136;
}
const v171 = new C162();
v171[7] = v171;
const v172 = new C162();
const v173 = v172?.constructor;
try { new v173(); } catch (e) {}
v172[7] = v172;
const v176 = [[],"f",v160,381717.6504737276];
[v154];
function F178() {
    if (!new.target) { throw 'must be called with new'; }
    const v180 = this?.__defineGetter__;
    try { new v180(v160, v160); } catch (e) {}
    let v182;
    try { v182 = v12.propertyIsEnumerable(); } catch (e) {}
    !v182;
}
new F178();
const v185 = new F178();
function F186(a188, a189) {
    if (!new.target) { throw 'must be called with new'; }
    const v190 = a189?.__lookupGetter__;
    try { v190(); } catch (e) {}
    try { this.constructor(F186, this); } catch (e) {}
    a188.e = a188;
}
F186.arguments = F186;
const v193 = new F186(v185);
const v194 = v193?.constructor;
try { new v194(v6, v193); } catch (e) {}
const v197 = ("Hyo9")[1];
try { v197.trim(); } catch (e) {}
const t228 = "at";
t228[1] = "at";
const v202 = ([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap?.constructor;
let v203;
try { v203 = v202.apply(v172, v171); } catch (e) {}
const v204 = [-4.202468609045087];
try { v204.every(v176); } catch (e) {}
[0.8434386161503777];
try { ("4i").toLocaleLowerCase(); } catch (e) {}
("4i")?.toWellFormed;
const t237 = "4i";
t237[1] = "4i";
const t240 = "RpXR";
t240[3] = "RpXR";
const t242 = "RpXR";
t242[1] = "RpXR";
const v212 = ("c")?.toLocaleUpperCase;
try { v212(); } catch (e) {}
const v214 = v212.length;
v214 !== v214;
class C217 {
    constructor(a219) {
        const v220 = this?.constructor;
        try { new v220(a219); } catch (e) {}
        const v222 = ("valueOf").localeCompare(a219, "valueOf");
        v222 | v222;
    }
}
try { C217.bind("RpXR"); } catch (e) {}
new C217();
const v226 = v28.constructor;
try { v226.call(v185); } catch (e) {}
const v228 = new v226(C217);
v228.f = v228;
try { new v41("998423439", C34); } catch (e) {}
9 >> 9;
try { Uint32Array.from(15n); } catch (e) {}
new Uint32Array(2432);
const o239 = {
    ...v147,
};
const v241 = 9007199254740991n * 9007199254740991n;
v241 * v241;
Math.sin(-5345);
function f246() {
    0.0 >>> 0.0;
    -1000000.0 & -1000000.0;
    const o253 = {
        [-1000000.0]: 0.0,
        set e(a252) {
        },
    };
    v158.a = o253;
    return f246;
}
try { f246(); } catch (e) {}
f246.caller = f246;
const v255 = f246();
const v256 = f246();
v256.d = v256;
class C257 {
    static [f246] = v255;
}
try { new C257(); } catch (e) {}
try { C257.bind(v203); } catch (e) {}
