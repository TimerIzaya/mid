const v0 = [];
function f1() {
    const o6 = {
        get g() {
            const o3 = {
            };
            const v5 = new Proxy(this, o3);
            return v5;
        },
        ...v0,
        "f": v0,
        "h": v0,
        __proto__: v0,
    };
    return o6;
}
f1();
const v8 = [];
const v9 = [v8,v8,v8];
function F10(a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
}
const v14 = (a15, a16, a17, a18) => {
    v9[536870887] = v9;
    return a18;
};
f1();
function F20(a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
}
const v26 = new WeakSet(127);
try { Uint32Array.from(v26); } catch (e) {}
f1();
new Set();
function f39(a40, a41, a42, a43) {
    return Reflect.construct(Uint8ClampedArray, []);
}
Int32Array.bind(Int32Array, Int32Array, Int32Array);
