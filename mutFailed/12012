class C3 {
    #e;
    constructor(a5, a6) {
        a6[Symbol.matchAll] = a5;
    }
    static #d;
    ["matchAll"] = "matchAll";
    #h = 65535;
    1024 = 357.68066537066534;
}
const v9 = new C3(C3, 357.68066537066534);
const v10 = new C3(v9, 357.68066537066534);
const v11 = new C3(65535, v9);
function F12(a14, a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v10;
    } catch(e17) {
    }
}
const v18 = new F12(C3, v9, C3);
new F12(v11, v10, v9);
new F12("matchAll", C3, v18);
const v21 = /\xed\xb0\x80+/uis;
/MZ{abc/gm;
const v23 = /(l{z})/s;
function F24(a26) {
    if (!new.target) { throw 'must be called with new'; }
    const v27 = this.constructor;
    try { new v27(v23); } catch (e) {}
    a26.b = a26;
    a26.dotAll;
}
const v30 = new F24(v21);
const v31 = new F24(v23);
new F24(v23);
const v33 = [128,5,268435456,127,4096];
const v34 = [-185039418,1565119373,33166,29980,-4294967296,1554841923,-1646058516,-15,1,255];
Uint8Array.h = Uint8Array;
const v38 = new Uint8Array();
const v39 = v38.constructor;
try { v39(v39, v30); } catch (e) {}
try { new v39(); } catch (e) {}
v38[44610];
function f44(a45, a46) {
    const v50 = Array();
    let v51 = 1000000000.0;
    function f52(a53) {
    }
    const v54 = f52();
    f52();
    class C58 {
        constructor(a60, a61) {
            const o64 = {
                "type": "minor",
            };
            o64.b = o64;
            gc(o64);
        }
    }
    for (let i69 = 0, i70 = 10;
        (() => {
            const v71 = i69 < i70;
            class C72 extends Date {
            }
            return v71;
        })();
        i69++) {
    }
    const v78 = new C58(v54, 655864.1717298129);
    const v79 = v78.__defineGetter__;
    try { v79(4, 4); } catch (e) {}
    new C58();
    const v82 = new C58();
    v51 /= -2.2250738585072014e-308;
    for (let i84 = 0; i84 < 7; i84 + i84, i84++) {
        const v91 = new C58();
        const t77 = v91.constructor;
        new t77(i84, v31);
    }
    function f94() {
        return 3;
    }
    function f95(a96) {
        let v98 = "major";
        v98 = v82;
        Object.defineProperty(v34, 75, { enumerable: true, get: f94 });
        v33.pop().d;
        gc();
    }
    Object.defineProperty(v50, 0, { configurable: true, enumerable: true, get: f94, set: f95 });
    v50.unshift(3, a45);
}
f44.e = f44;
new Promise(f44);
