let v2 = "jS";
class C3 {
    static [-2];
    p(a5, a6) {
        let v8 = 2147483648;
        Math.atan(v8);
        --v8;
        v2++;
        v8 % 199291263;
        return a5;
    }
    408268782;
}
const v14 = new C3();
const v15 = new C3();
const v16 = new C3();
function F17(a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a19;
    } catch(e21) {
    }
}
new F17(C3, v16);
new BigInt64Array(243);
function f26(a27, a28) {
}
const v29 = new F17(v14, C3);
const v30 = new F17(v29, v15);
new Uint16Array(2);
[Uint8Array,[Uint8Array,Uint8Array]];
function F40(a42) {
    if (!new.target) { throw 'must be called with new'; }
    const v43 = this.constructor;
    try { new v43(); } catch (e) {}
    this.g = 257;
    this.g = -1;
    this.h = a42;
}
new F40(257);
new Uint32Array(2386);
new Float32Array(1000);
function f54(a55, a56) {
    a55.toString = f54;
    const o60 = {
        "f": a56,
        [a55]: -12,
        set e(a58) {
        },
    };
    return v30;
}
const v62 = f54(f54(1000, 1000), 1000);
class C63 extends f54 {
    static valueOf(a65, a66, a67) {
        async function* f68(a69, a70, a71, a72) {
            await f54();
            yield* [];
            return f54;
        }
    }
}
const v76 = new C63();
function F78(a80, a81) {
    if (!new.target) { throw 'must be called with new'; }
    a81 * a81;
    const v83 = this.constructor;
    2 >= 2;
    try { new v83(this); } catch (e) {}
}
new F78();
-2053573105 || -2053573105;
Math.log2();
Object.defineProperty(v62, 4294967296, { writable: true, configurable: true, enumerable: true, value: v76 });
const o93 = {
};
o93.type = o93;
gc(o93);
