class C3 {
    constructor(a5) {
        delete this[7.244489921774143];
        const o7 = {
        };
        new Proxy(this, o7);
    }
    toString(a11) {
        for (const v12 of 999.45703723159) {
            try {
                function F13(a15, a16, a17) {
                    if (!new.target) { throw 'must be called with new'; }
                    function F18(a20, a21) {
                        if (!new.target) { throw 'must be called with new'; }
                        function f22(a23, a24, a25) {
                            for (let i = 0; i < 10; i++) {
                                const o26 = {
                                };
                            }
                            try {
                                f22(F13, a23, a21);
                            } catch(e28) {
                            }
                            return a24;
                        }
                        f22();
                    }
                    new F18();
                }
                new F13();
                v12.b = v12;
            } catch(e32) {
            }
        }
        return this;
    }
}
new C3(999.45703723159);
new C3(999.45703723159);
new C3(7.244489921774143);
const v37 = new WeakSet();
new FinalizationRegistry(48);
new Float32Array(2490);
new Float64Array(4);
const v50 = [1,6,-9,5,-10,-1024,657510145,12252,-2087182304,-4294967295];
[-268435456,35978,29031,1394674512,-9007199254740992];
const v52 = [-1996357020];
class C53 {
    constructor(a55, a56) {
        try { this.propertyIsEnumerable(); } catch (e) {}
        try { a56.findLastIndex(v52); } catch (e) {}
        super[a55] = v50;
        const v60 = new BigUint64Array();
        try { Int32Array.apply(v60); } catch (e) {}
        new Int32Array();
        WeakSet[7];
        Math.atan(v37);
        function F67(a69, a70, a71) {
            if (!new.target) { throw 'must be called with new'; }
        }
    }
}
const v72 = new C53(v50, v50);
const v73 = new C53(v50, v52);
const v74 = new C53(v73, v73);
const v75 = v74?.constructor;
try { v75(v52, v73); } catch (e) {}
[-4294967295,513282937,14,-2147483649,-56500,-1697518325];
const v78 = [15,0,-128];
try { v78.map(v72); } catch (e) {}
const v81 = [601759695];
function f82() {
    b = v50;
    return v81;
}
const v83 = f82();
function F84() {
    if (!new.target) { throw 'must be called with new'; }
}
F84.arguments = F84;
const v86 = new F84();
const v87 = new F84();
const v88 = v87?.__defineGetter__;
try { v88(v72, 268435456); } catch (e) {}
const v90 = new F84();
const v91 = v90?.constructor;
try { v91(); } catch (e) {}
const t87 = "E";
t87[0] = "E";
try { ("object").charAt(v74); } catch (e) {}
[1000000000000.0];
function f99() {
    return v83;
}
let v100;
try {
const t0 = "object";
v100 = t0(v86, "number", F84);
} catch (e) {}
function f101(a102) {
    return v100;
}
const v105 = new Uint8ClampedArray(1322);
v105[315];
const v108 = new v75();
class C109 {
    static #d = C109;
    static [WeakSet] = 1956022596;
    a;
    2;
    static 10;
    [v108];
    static {
    }
}
