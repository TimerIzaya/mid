const v2 = new Int32Array(0);
const v5 = new Uint8Array(256);
const v8 = new Uint8Array(4010);
function f9(a10, a11) {
    const o12 = {
        256: Int32Array,
        "g": a10,
        ...v5,
        __proto__: v5,
        "b": v8,
        [v2]: a11,
        ...v2,
        "e": a11,
        "h": v8,
        "a": v8,
        "d": v2,
        ...v5,
        7: 0,
        "c": Uint8Array,
        ...v8,
    };
    return o12;
}
f9(4010, Uint8Array);
f9(4010, 256);
const v15 = f9(4010, 0);
class C16 {
    static #n(a18, a19, a20) {
        v8[a18];
        try {
            v8.#n();
        } catch(e23) {
        }
        return a19;
    }
    static #o(a25, a26, a27, a28) {
        v8[69] = 256;
        try {
            v15.__proto__ = this;
        } catch(e29) {
        }
        return a25;
    }
}
new C16();
new C16();
const v32 = new C16();
let v34 = 31588;
const v35 = new Array(v34);
class C39 extends Array {
    static n(a41, a42, a43, a44) {
        [0.1270426937578495,a43,a41];
        const v46 = [1.0,Array];
        [v46,a42];
        return v46;
    }
    static [Array] = v34;
    static #n(a49, a50, a51) {
        const v52 = 1.0 == v35;
        if (v52) {
            super.at(a49);
        } else {
            new BigUint64Array(11);
            new Int16Array(1, 4010, a51, Int16Array);
            new Uint16Array(1758);
        }
        return v52;
    }
}
const v63 = new C39();
const v64 = new C39();
const v65 = new v32();
function f66(a67, a68, a69, a70) {
    const o100 = {
        ...v63,
        "c": a69,
        set g(a72) {
            let [v73,v74,,v75] = v65;
            try {
                this.__proto__ = this;
                new eval(..."undefined");
                v34++;
                for (let v80 = 0; v80 < 5; v80++) {
                    const v83 = v80 >> -18321;
                    Math.log1p(v80);
                    Math.tan(v83);
                }
            } catch(e86) {
            }
            Array(a69);
            %PrepareFunctionForOptimization(Array);
            -(536870912n << 536870912n);
            class C91 {
            }
            function f92(a93, a94) {
                const o95 = {
                    "c": a94,
                    __proto__: C91,
                };
                o95.c;
                return o95;
            }
            %OptimizeFunctionOnNextCall(f92);
            Array(a69);
            Array(a69);
            %OptimizeFunctionOnNextCall(v64);
            v74(a69);
        },
    };
    return o100;
}
f66(0.0, v63, f66(0.1270426937578495, v64, f66(0.1270426937578495, v65, 0.0, 0.0), 0.1270426937578495), 0.0);
function F105(a107, a108) {
    if (!new.target) { throw 'must be called with new'; }
    const v109 = this.constructor;
    try { new v109(a108); } catch (e) {}
    a108 == a108;
    this.g = a107 !== a107;
}
new F105(F105, -418967591n);
