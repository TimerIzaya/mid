[6,45574];
[-24395,512,268435439,754951115];
function f3(a4, a5, a6) {
    return null;
}
(2136873598).constructor;
[-42742,15,256,1073741825,-1];
new Map();
[144.61258457777262,8.180853916228457,0.0,-5.0,-976103.2854987179,0.8830856024600159];
[1000.0];
[2.2250738585072014e-308,-1.6583698852123255e+308,568988.864645639,-1.7976931348623157e+308,-243088.46283886337,-2.2250738585072014e-308,1000000000000.0,-717021.7759825914];
function F21(a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    function f25() {
        let v26 = 9;
        function F27(a29, a30, a31) {
            if (!new.target) { throw 'must be called with new'; }
            v26++;
        }
        function f33() {
            for (let v34 = 0; v34 < 5; v34++) {
                const v35 = new F27();
                function F36(a38, a39) {
                    if (!new.target) { throw 'must be called with new'; }
                }
                new F36();
                const v42 = v26 ** v26;
                const v43 = !v26;
                9007199254740991 * v42;
                v43 % F27;
                const t28 = v35.constructor;
                new t28();
            }
        }
        %PrepareFunctionForOptimization(f33);
        try { ("NFKD").localeCompare(this); } catch (e) {}
    }
    Object.defineProperty(this, Symbol.toPrimitive, { writable: true, value: f25 });
}
const v52 = new F21(F21, F21);
-4294967295 << -12;
try {
} catch(e56) {
}
class C57 {
    constructor(a59, a60, a61, a62) {
        super();
        function f63(a64, a65, a66) {
            function f68(a69) {
                a65[5] ||= a59;
            }
            this.onmessage = f68;
            const v72 = new SharedArrayBuffer(35);
            new BigUint64Array(v72);
        }
        const v77 = [-4294967295,"function",this];
        const o78 = {
            "arguments": v77,
            "type": "function",
        };
        new Worker(f63, o78);
    }
    static [v52];
}
