const v0 = [3.0,-2.2250738585072014e-308,665274.1713963163,65.07593802288511,2.220446049250313e-16];
const v1 = [-864829.1968976554,-1e-15,-8.226518720658975,1e-15,3.0,5.681735720890575,-1000000.0,NaN,-1.0797100156080081e+308];
const v2 = [1.0,-1000000.0];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a5;
    } catch(e6) {
    }
    try {
        this.g = a5;
    } catch(e7) {
    }
}
new F3(v1);
const v9 = new F3(v2);
const v10 = new F3(v0);
function f11() {
    return v9;
}
class C15 extends F3 {
    o(a17, a18, a19) {
        v10[a17] %= 0.4810177007597979;
        return v9;
    }
    8 = F3;
    static set e(a21) {
        [65535,7,-2147483649,3,13,-9223372036854775807];
        [16,4294967295];
        [13947,-51345,-9780,5085,6];
    }
    [v9] = v0;
    static a = 1000.0;
}
new C15();
new C15();
const v27 = new C15();
class C29 {
}
const v30 = new C29();
const v31 = new v9();
function F33(a35, a36, a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    const v39 = this.constructor;
    try { new v39(0, F33, F33); } catch (e) {}
    const t45 = v27.constructor;
    new t45();
}
const t48 = 1000.0;
new t48(v30, -14, v31);
