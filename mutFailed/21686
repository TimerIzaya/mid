class C3 {
    ["4096"] = -1.7976931348623157e+308;
    #d = "m";
    p(a5) {
        const v8 = new Uint32Array(2740);
        new BigInt64Array(255);
        new Float64Array(4096);
        return v8;
    }
}
const v15 = new C3();
function F16(a18) {
    if (!new.target) { throw 'must be called with new'; }
    const v20 = this.constructor.bind(F16, F16);
    try { new v20(); } catch (e) {}
}
new F16();
const v23 = new C3();
function f24() {
    v15["4096"] -= -1.7976931348623157e+308;
    return this;
}
v23.constructor = f24;
const v26 = new C3();
const v30 = [v26,"4096",C3,-5n,-5n];
[v30,v26,v30];
[4n,v30,-2147483648n,4n];
const v33 = [536870887,-42204,-17288903,-3,9007199254740991,7];
const v34 = [6,268435440,13,1073741825];
Object.defineProperty(v34, "valueOf", { value: f24 });
const v35 = [-15,-2147483649,-899333997,3,1455560807,-1024,-4294967297,2098301778];
v35.toString = f24;
class C36 {
    static valueOf(a38) {
        super[a38] = this;
        v34[v35] = v35;
        return super[v35];
    }
    constructor(a41) {
        function f42(a43, a44) {
            a44.valueOf = f42;
            const o45 = {
                "c": v34,
                "h": a44,
            };
            return o45;
        }
        const o48 = {
            "execution": "async",
        };
        o48.type = v23;
        gc(o48);
        f42(v35, a41);
        f42(v33, v33);
    }
}
C36[Symbol.toPrimitive] = f24;
const v54 = C36?.constructor;
try { new v54(C36); } catch (e) {}
const v56 = new C36(v34);
Object.defineProperty(v56, "valueOf", { enumerable: true, value: Symbol });
const v57 = new C36(v33);
const v58 = new C36(C36);
v58.constructor = Symbol;
const v59 = v58?.constructor;
try { v59(v57); } catch (e) {}
function f61(a62, a63, a64) {
}
const v65 = v23.constructor;
try { new v65(v30, v26, v26); } catch (e) {}
function f67(a68) {
    const o69 = {
    };
    return o69;
}
class C70 extends f67 {
}
function f71(a72, a73, a74, a75) {
    function f76(a77, a78) {
        delete a78?.[-2];
        return [8n,8n,8n,8n] > 8n;
    }
    a73[Symbol.toPrimitive] = f76;
    function f85() {
        return Symbol;
    }
    function f86(a87) {
        try { C36.valueOf(a87, f76, a87); } catch (e) {}
    }
    Object.defineProperty(a75, "valueOf", { writable: true, configurable: true, enumerable: true, get: f85, set: f86 });
    try { a72.findLast(v33); } catch (e) {}
    a73[1] = a73;
    try { a75.valueOf(); } catch (e) {}
    const o130 = {
        __proto__: a72,
        "g": a72,
        get e() {
            function f92() {
                class C93 {
                }
                const v94 = new C93();
                const v95 = [v94,v94,v94,v94,v94];
                const v96 = [f92,f92];
                class C97 extends C93 {
                    [v94];
                }
                const v98 = new C97();
                v96.constructor;
                try { v98.m(v95); } catch (e) {}
                return f92;
            }
            f92();
            let v104 = 820086.9196656225;
            v104++;
            const v106 = -1;
            Math.atanh(this);
            let v108 = 1 && v106;
            ("string").normalize("NFKD");
            -1.7976931348623157e+308 - -1.7976931348623157e+308;
            function f114() {
                const v115 = [];
                v115[6] = v115;
                const o118 = {
                    set b(a117) {
                    },
                };
                return 852.2904873570058;
            }
            for (let v119 = 0; v119 < 5; v119++) {
                f114();
                %OptimizeFunctionOnNextCall(f114);
            }
            v108--;
            Math.sinh(v108);
            return v56;
        },
        valueOf(a124, a125) {
            return -5n;
        },
        [v35](a127, a128, a129) {
        },
    };
    try { o130.indexOf(a75); } catch (e) {}
    return o130;
}
try { f71(v34, v34, v56, v34); } catch (e) {}
const v133 = f71(v34, v33, v57, v56);
v133.indexOf(f71);
f71(v35, v35, v58, f71(v35, v33, v35, v133));
function f139() {
    const v140 = 4n;
    const v141 = [1,40880,1,-65535,3109,268435456,0,-47552,1073741823];
    const v143 = new BigUint64Array();
    try { v141.map(v143); } catch (e) {}
    return v141;
}
Object.defineProperty(BigUint64Array, "toString", { configurable: true, enumerable: true, value: f139 });
const v145 = new BigUint64Array(4083);
try { v145.set(v133); } catch (e) {}
new Uint16Array(3239);
-513;
BigInt64Array.prototype;
new BigInt64Array(513);
[5.0,-1000000000000.0];
[-3.4570322798414105e+307,169.39416483428454,-2.0,-1000.0,5.0,1.0,14338.693316202844,-1000000.0,955.167973693761,0.5696151956948133];
[-2.0,-2.0];
try { Array.call(Uint16Array); } catch (e) {}
Array();
Date.valueOf = f24;
new Date();
const v168 = Date > "undefined";
v168 || v168;
const v170 = v168 ? Date : "undefined";
try { v170.match(BigUint64Array); } catch (e) {}
let v172 = 0;
do {
    function f174() {
        for (let v175 = 0; v175 < 5; v175++) {
            v175 & v175;
        }
        try {
            f174();
        } catch(e178) {
        }
        return f174;
    }
    ("minor")[0];
    const o182 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o182);
    v172++;
} while (v172 < 2)
