class C3 {
    static get h() {
        const v7 = Math.atanh(0.033437543729764596);
        const v8 = [];
        try {
            this.e = v8;
        } catch(e9) {
            try {
                v7.b = 921.7850004555614;
            } catch(e10) {
            }
            ("Vre").codePointAt();
        }
        try {
            this.h = this;
        } catch(e13) {
        }
        return this;
    }
    static #p(a15) {
        class C16 {
            #a;
            [704315.9497253573] = -7.574916595639181e+307;
            static [this];
        }
        new C16();
        new C16();
        const v19 = new a15();
        [-0.23549034038133065];
        async function f21(a22, a23, a24, a25) {
            return await a23;
        }
        return v19;
    }
}
const v27 = new C3();
const v28 = v27?.isPrototypeOf;
try { new v28(921.7850004555614); } catch (e) {}
const v31 = new WeakSet();
function f32(a33) {
    const o37 = {
        "g": v31,
        "h": a33,
        __proto__: a33,
        "a": v31,
        "f": WeakSet,
        m(a35, a36) {
            return a35;
        },
    };
    return o37;
}
f32(f32(WeakSet));
const v40 = new C3();
v40?.constructor;
try {
const t0 = 921.7850004555614;
new t0();
} catch (e) {}
const v43 = new C3();
function f44() {
    return v43;
}
-364.8977147553636 >> -364.8977147553636;
[1.0,0.4392742416021568,Infinity,4.178105150104992,812511.5743059919,1e-15,-1000000000000.0,1000000000000.0];
const v50 = [2.0,0.01159579964505053,-1000000000000.0,-1000000000.0];
try { v50.fill(v40); } catch (e) {}
function f53() {
    let v56 = 1864489360 << ("c").toLowerCase();
    const v57 = v56--;
    v56 & v56;
    return v57;
}
const v60 = Float32Array.bind();
function f61() {
}
f61--;
[3.6042155973423036,1000.0,0.830207909602023,-0.0,847458.539671195,6.625125210097558,0.0,1.5772826187177585e+308,968.8527136540038,1.0];
let v64 = 0;
new Int8Array(v64, v64, v64--);
try {
const t0 = 16;
t0();
} catch (e) {}
const v71 = new Float64Array();
function f72() {
    for (let v73 = 0; v73 < 10; v73++) {
        class C76 {
            #valueOf(a78, a79) {
                const v81 = WeakMap();
                "m" > v81 ? "m" : v81;
                return this;
            }
            static set f(a85) {
                const o88 = {
                    "maxByteLength": 129,
                };
                SharedArrayBuffer();
                const t97 = "m";
                t97();
            }
        }
        const v92 = new C76();
        function f93() {
            return v92;
        }
        let v94 = Math.expm1(v71);
        v94--;
        v94 >> v94;
    }
}
v60();
%OptimizeFunctionOnNextCall(f72);
f72();
