gc();
[-2.0];
const v7 = [-18.122980458508323,2.2250738585072014e-308,-953166.2847327716,-0.0,2.220446049250313e-16,9.548557307540905e+307,-332313.97147537663,8.414538956825949e+307];
[4.006205187927245];
new Array(v7);
class C12 extends Array {
    static toString(a14, a15) {
        Object.defineProperty(this, 3540, { writable: true, set: C12 });
        const t8 = "any";
        t8["1024"] = "1024";
        return this;
    }
    get d() {
        const o18 = {
            "isExtensible": "any",
            "setPrototypeOf": "any",
        };
        new Proxy(this, o18);
        return o18;
    }
}
const t21 = "any";
new t21();
new C12();
new C12();
[-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f25(a26, a27, a28, a29) {
    a27 & a27;
    try {
        a26.forEach(a27);
    } catch(e32) {
    }
    return a27;
}
for (let v33 = 0; v33 < 10; v33++) {
    f25(v33, v33);
}
%OptimizeFunctionOnNextCall(f25);
f25();
