function F14(a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    const v18 = this.constructor;
    try { new v18("a"); } catch (e) {}
    try { a16.valueOf(); } catch (e) {}
    try {
        this.f = "-2147483648";
        9n >> 9n;
    } catch(e23) {
    }
}
const t11 = 1000;
t11.arguments = F14;
new F14();
new Float64Array(1000);
new Uint8Array(205);
new Float32Array(92);
function f35(a36) {
    a36 >> a36;
    const o45 = {
        [12298n](a39) {
            const v40 = delete this?.e;
            v40 instanceof v40;
            v40[this] = 2025423814n;
            return this;
        },
        __proto__: 2025423814n,
        ...a36,
        "a": 12298n,
        "b": 2025423814n,
        "f": 2025423814n,
        ...a36,
    };
    return o45;
}
try { f35(12298n); } catch (e) {}
const v47 = f35(-22903n);
v47[12298] = v47;
const v48 = f35(12298n);
v48[12298];
const v50 = [];
function f51() {
    const v52 = -v50;
    v52 << v52;
    const v54 = v52 && v50;
    -v54;
    return v54;
}
f51.caller = f51;
const v56 = f51();
let v57 = 2;
const v59 = new Uint8Array(v57, v57, v57);
Symbol.for(Symbol.toPrimitive.description);
function f65(a66, a67, a68, a69) {
    a67 * a67;
    const o74 = {
        "b": a66,
        "c": a69,
        n(a72, a73) {
        },
    };
}
f65.prototype = f65;
-2.2250738585072014e-308 == -2.2250738585072014e-308;
const v79 = [1613217357,204598905,15977,1122227661,64,-2,-12,536870888];
const v80 = [12,-256,-4096,2,7,8,21956,46111,11,10];
try { v80.reduce(-22903n); } catch (e) {}
const v82 = [-1073741824,1665564361,16526,1805211777,10,-9007199254740990,4,-17063,-1];
const v83 = [-2.2250738585072014e-308,0.8014728140665155,1.4073101706157717e+308,1.4751052216559766e+308,2.0,-692.9604671107461,-2.220446049250313e-16,2.0];
try { v83.copyWithin(v56, v56); } catch (e) {}
const v85 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
try { v85.with(v85, v85); } catch (e) {}
const v87 = [-1.015259194643325e+308,-Infinity,-9.825391401141273,-2.2250738585072014e-308,5.0,-2.2250738585072014e-308];
class C88 {
    constructor(a90, a91, a92, a93) {
        a90[7] = a90;
        a91--;
        const v95 = this?.constructor;
        try { new v95(v85, a92, a92, v79); } catch (e) {}
        a91 >>> a91;
        -0.0 >>> -0.0;
    }
    /*
    constructor(a103, a104, a105, a106) {
        const o112 = {
            "maxByteLength": 2240,
        };
        const v114 = new ArrayBuffer(2240, a104);
        new Uint8ClampedArray(v114);
        this[268435456];
        v83 && this;
        try {
            v83.length = v87;
        } catch(e119) {
            new Map();
            new Uint32Array(8);
        }
    }
    */
    static 268435439 = v82;
    #c = -2.2250738585072014e-308;
    static 832209355 = 2.220446049250313e-16;
}
C88[832209355] = C88;
function f125(a126) {
    new Float64Array();
    return -2.2250738585072014e-308;
}
C88.valueOf = f125;
const v129 = new C88(v79, 659.0540372978887, v79, v79);
const v130 = new C88(v129, 2.220446049250313e-16, v83, v87);
const v131 = v130?.constructor;
try { new v131(v83, 2.220446049250313e-16, 2.220446049250313e-16, v130); } catch (e) {}
new C88(v130, v130, 659.0540372978887, v79);
try {
    v80.length = C88;
} catch(e134) {
}
const v135 = new C88(v83, 2.220446049250313e-16, v82, v87);
v135.length = v135;
function f136() {
    return f136;
}
f136.arguments = f136;
function F137() {
    if (!new.target) { throw 'must be called with new'; }
    const v139 = this?.__lookupGetter__;
    try { new v139(this); } catch (e) {}
}
new F137();
const v142 = new F137();
v142.b = v142;
const v143 = new F137();
function f146() {
}
let v147;
try { v147 = new f146(); } catch (e) {}
const v148 = [16,v147];
const v149 = [f136];
v149[0] = v149;
[v148,v142];
v59();
for (let v152 = 0; v152 < 5; v152++) {
    f146();
}
try { v143.n(); } catch (e) {}
for (let v155 = 0; v155 < 5; v155++) {
}
for (let v156 = 0; v156 < 625; v156++) {
    f65(Uint8Array, v57);
}
%OptimizeFunctionOnNextCall(f51);
f51();
const v159 = f35(-22903n);
const v161 = new WeakSet();
function f162(a163, a164) {
    const o167 = {
        1073741823: 2025423814n,
        1: a163,
        get h() {
            try {
                this.toString = f35;
            } catch(e166) {
            }
            return 12298n;
        },
        "b": 0n,
        "f": 12298n,
        "e": -22903n,
        "g": 12298n,
    };
    return o167;
}
f162(v48, v159);
f162(v159, v48);
const v170 = f162(v159, v159);
function F171(a173, a174, a175, a176) {
    if (!new.target) { throw 'must be called with new'; }
    const v178 = [BigUint64Array];
    v57--;
    const o182 = {
        set b(a181) {
        },
    };
    try {
        const o184 = {
            get h() {
            },
        };
        1073741824 | v178;
        this.h = v47;
    } catch(e186) {
    }
}
const v187 = new F171(-22903n, v161, v161, v161);
new F171(2025423814n, v47, v47, v187);
new F171(-22903n, v47, v48, v170);
const v192 = new Int32Array(2);
v192.toSorted();
