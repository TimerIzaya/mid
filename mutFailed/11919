class C3 {
    valueOf(a5, a6) {
        a5 = this;
        this.a;
        super.h;
        return -55349;
    }
    static [-55349];
    static a = -9.92557922234325e+307;
    a;
}
try { C3.apply(-55349, -2147483648); } catch (e) {}
const v13 = new C3();
const v14 = new C3();
const v15 = new C3();
function f16() {
    return v13;
}
class C17 {
    static #c = -2147483648;
    constructor(a19, a20) {
        function f21() {
            function f23(a24) {
                try {
                    f16();
                } catch(e26) {
                }
            }
            this.onmessage = f23;
            -2147483648 || a20;
            new f16();
        }
        const v31 = [];
        const o32 = {
            "arguments": v31,
            "type": "function",
        };
        const v33 = new Worker(f21, o32);
        try { v33.terminateAndWait(); } catch (e) {}
    }
}
new C17(v14, v15);
new C17(f16, -2147483648);
new C17(-2147483648, v15);
try { ("buffer").big(); } catch (e) {}
class C42 {
    constructor(a44) {
        const t47 = "search";
        t47[4] = "search";
        const v46 = ("buffer")["search"](..."buffer", ..."search", ..."search", a44, ..."search", 52021);
        v46 >>> v46;
        super.d = arguments;
    }
    static h;
    static #a;
    [-5.0] = -5.0;
    #g = "buffer";
    static #c;
    static #e = C42;
}
const v49 = new C42(C42);
const v50 = new C42(v49);
const v51 = new C42(v50);
v51.d;
Object.defineProperty(Date, 169, { get: Date, set: Date });
const v54 = 52021 instanceof f16;
v54 || v54;
45591n + 45591n;
let v59 = 16n;
v59++;
new Date();
const v64 = new BigInt64Array(129);
new Int8Array(12);
Uint32Array.g = Uint32Array;
const v70 = new Uint32Array(1024);
const v71 = /1xyz{1,}?/gims;
const v72 = /h\p{gc=Nd}/vdy;
v72.e = v72;
const v73 = /\xf0\x9f\x92\xa9a*/us;
class C77 {
    set a(a79) {
        this[a79] = this;
        v49 instanceof Date;
        try { v64.fill(1024, -55349); } catch (e) {}
    }
    static {
        try { new this(); } catch (e) {}
        const v86 = this[Symbol.hasInstance];
        v86.length = v86;
    }
    #p() {
        let v88;
        try { v88 = this.p(undefined, this, this, this, this); } catch (e) {}
        try {
            v88.#p(undefined, v88, v88, undefined);
        } catch(e90) {
        }
        return undefined;
    }
    static #a = undefined;
    c = undefined;
}
C77.name = C77;
const v91 = new C77();
const v92 = new C77();
const v93 = new C77();
v93.c;
function f95(a96) {
    const o102 = {
        15: a96,
        toString(a98, a99) {
            super.h = a99;
            try { C77.stringify(a96, a96, this); } catch (e) {}
            try {
                C77.c = v91;
            } catch(e101) {
            }
            return a99;
        },
        2147483647: undefined,
        __proto__: v92,
        "c": a96,
        ...a96,
        "f": a96,
    };
    return o102;
}
const v103 = f95(v70);
f95(v93);
f95(v103)[225];
for (let i108 = 0; i108 <= i108, i108 < 5; i108 << i108, i108++) {
    try {
    } catch(e116) {
    }
}
-1263139894 >> -1263139894;
function F119(a121, a122, a123, a124) {
    if (!new.target) { throw 'must be called with new'; }
    a121.dotAll;
    a122 % a122;
    a123 / a123;
}
const v128 = new F119(v73, -13, -1263139894, F119);
const v129 = new F119(v71, v73, -23596, v128);
const v130 = v129?.constructor;
try { new v130(v92, C77, v92, v49); } catch (e) {}
const v132 = new F119(v72, F119, -23596, -13);
const v133 = v132 | F119;
v133 & v133;
let v135;
try { v135 = v129(v73, v133, v133); } catch (e) {}
if (!v135) {
} else {
}
