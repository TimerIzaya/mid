function f0() {
}
[7,1718406424,-3,-1,6,-15,64,-19277,1073741824];
[-4096,14,1024,128,7,-1,-27863016,-4096];
[-24313,-8837,13,-1,-3];
new Int8Array(529);
const v12 = new Int32Array(2765);
new BigInt64Array(3832);
const v17 = new v12();
const v18 = [1711596310];
for (let v19 = 0; v19 < 25; v19++) {
}
v18[9] = v17;
class C20 {
}
function F22(a24, a25, a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
}
const v28 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v29 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
for (let v31 = 0; v31 < 5; v31++) {
    let v32 = undefined;
    function f33() {
        let v34 = Float64Array;
        Array();
        v34 = F22;
        const v37 = v28.length;
        class C39 {
        }
        new C39();
        Symbol.toPrimitive;
        new Uint32Array(v29, v37);
    }
    const v45 = f33();
    %OptimizeFunctionOnNextCall(f33);
    v32 = v45;
}
