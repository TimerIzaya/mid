const v0 = [-9007199254740990,52979,1265498779,-2,536870912,3];
const v1 = [9007199254740991,9,-4096,4294967297,-54540,0,-726832024,4294967296,-10788];
const v2 = [2,-7,-65007];
function f3() {
    return v0;
}
function F4(a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a6;
    } catch(e8) {
    }
    try {
        this.e = v1;
    } catch(e9) {
    }
    try {
        this.c = v2;
    } catch(e10) {
    }
}
new F4(v1, v1);
new F4(v0, v2);
new F4(v1, v0);
new Uint8ClampedArray(3923);
for (let [v18,v19] of f3) {
}
new WeakMap();
const v23 = new Int8Array(16);
new Int32Array(60);
new Uint8ClampedArray(1);
const v30 = [-1.3667473485475811e+308,1.7976931348623157e+308,5.0,-3.583919688173468e+307,-1.5320462342133301e+308,-414873.4859108749,286122.8434793174,866.7395286670867,-1000.0,-742782.9714922046];
function f32(a33, a34, a35, a36) {
    function f37() {
        const o48 = {
            "b": a34,
            968: a33,
            get d() {
                const v40 = Symbol.toPrimitive;
                const o43 = {
                    [v40]() {
                        [v23];
                    },
                };
            },
            __proto__: v30,
            [a35](a45, a46, a47) {
            },
        };
        new BigInt64Array(128);
        function f52(a53) {
            return -9007199254740991;
        }
        o48.copyWithin(o48, o48);
        return o48;
    }
    f37();
    return v30;
}
for (let v57 = 0; v57 < 10; v57++) {
    Math.tan(9007199254740992);
    function F61(a63, a64, a65, a66) {
        if (!new.target) { throw 'must be called with new'; }
    }
    f32(v57, v57, v57, v57);
}
new Float64Array(1);
class C71 {
    static #c = "-1073741824";
    static valueOf(a73) {
        this.#c = "-1073741824";
    }
}
%OptimizeFunctionOnNextCall(f32);
function f74() {
    const v75 = [1000000000.0,-5.576877862296471e+307,1000000000000.0,-311382.1661484719,1000000000.0];
    function f76() {
        return f74;
    }
    for (let i = 0; i < 5; i++) {
        Object.defineProperty(v75, "d", { configurable: true, get: f76, set: f76 });
    }
    class C77 {
    }
    return f74;
}
f32("-1073741824", v30, v30);
