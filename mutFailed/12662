const v0 = [1.0];
[-1000000000000.0,2.2250738585072014e-308,2.2250738585072014e-308,-1.11674939464934e+308,1.0,-0.0];
const v2 = [-0.8983054638058476,2.0,1000.0];
const v3 = [257,9007199254740991,-4294967297,7,-60024,979349710,9,127,1592834616];
const o6 = {
    "execution": "async",
};
o6.a = o6;
const v7 = gc(o6);
function f8() {
    o6[gc];
    Object.defineProperty(v3, 4294967295, { enumerable: true, value: v0 });
    return "async";
}
v7[Symbol.toPrimitive] = f8;
const v12 = [1073741824,65536,65535,4294967296,-9223372036854775808,-4,-49229,-9007199254740990];
const v15 = new Date(Uint32Array);
v15.getMonth();
for (let v17 = 0; v17 < 25; v17++) {
    v17 * v17;
}
const v19 = [65537,11,-9007199254740990,14];
try { v19.reduce(v12); } catch (e) {}
const v22 = new WeakSet();
v22.constructor = Symbol;
const v23 = v22?.constructor;
try { new v23(); } catch (e) {}
const v26 = WeakSet?.constructor;
try { new v26(v7); } catch (e) {}
const v28 = new WeakSet();
try { v28.has(v2); } catch (e) {}
const v31 = /Aabc|defmxyz{1,}?qMa{0,1}?/gvdis.exec();
Int32Array.toString = Symbol;
Int32Array.prototype = Int32Array;
~Int32Array;
const o36 = {
    "c": -4294967297n,
    "e": -268435456,
};
o36.a = v23;
o36.a = o36;
try { v31.shift(); } catch (e) {}
Int32Array.bind(Int32Array, Int32Array, Int32Array).length;
const v42 = new Map();
const v43 = [0.22765518540216179,1000000000000.0,95110.62484655366,1000000000.0,3.436859148069951,-0.0,2.0,-5.0];
function f44(a45, a46) {
    a45[7];
    const o55 = {
        ...a45,
        ...v43,
        [v43](a49, a50) {
            a50[v42];
            const v52 = a46.length;
            a45 == v52 ? a45 : v52;
            return a46;
        },
        __proto__: v42,
        ...v2,
        "a": Map,
        "b": a46,
        [a46]: a46,
    };
    return o55;
}
