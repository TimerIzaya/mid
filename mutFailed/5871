const v2 = new Uint8ClampedArray(0);
const v4 = 2008 > 2008;
const v6 = new Uint8ClampedArray(2008);
function f8() {
}
class C9 extends f8 {
    [C9];
    static b = v4;
    static [1024];
    static [0];
    static #f = v2;
}
const v10 = new C9();
new C9();
class C12 {
}
function f17() {
}
let o18 = {
};
function F19() {
    if (!new.target) { throw 'must be called with new'; }
    const v22 = -Infinity;
    ++o18;
    v22 - v22;
    v10 >>> v22;
    Math.sin(-9007199254740991);
    Math.exp(-1000000.0);
    --C9;
    -1000000.0 || -9007199254740991;
}
[-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v35 = [601759695];
const v36 = [1073741824,1073741823,1376142744,1073741825];
function f39(a40, a41, a42, a43) {
    function f45() {
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        arguments.toPrimitive;
    }
    f8();
    const v55 = new Int8Array();
    v55.buffer.slice();
    %OptimizeFunctionOnNextCall(f45);
    let v60;
    try { v60 = v36["find"](..."find", a43, ...v35); } catch (e) {}
    v60 <= a42;
    return arguments;
}
for (let v62 = 0; v62 < 10; v62++) {
    f39();
}
%OptimizeFunctionOnNextCall(f39);
f39();
const v66 = new BigUint64Array(1024);
try { v66.reduceRight(v66); } catch (e) {}
class C68 {
    constructor(a70, a71, a72, a73) {
        const v74 = this?.__defineGetter__;
        try { new v74(a71, 2008); } catch (e) {}
        a70 & a70;
        const v77 = a71?.constructor;
        try { new v77(a70, a71, this); } catch (e) {}
        a72 - a72;
        const o82 = {
            "maxByteLength": 268435456,
        };
        6 + 6;
        const v85 = new SharedArrayBuffer(6, o82);
        new Uint8ClampedArray(v85);
    }
    static 6;
    [v6] = 0;
    [Uint8ClampedArray];
    #c = Uint8ClampedArray;
}
new C68(0, v6, 2008, 0);
new C68(0, 2008, 0, 2008);
new C68(2008, v2, 1024, 1024);
v66 + -290842077n;
2147483649n >> 2147483649n;
for (const v99 of Array(4087)) {
}
