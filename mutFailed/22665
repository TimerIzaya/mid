function f3(a4, a5) {
    a4 / a4;
    const o18 = {
        set a(a8) {
            var a = a4;
            let v11 = -56203;
            Math.cos(a4);
            const v14 = a4 && (v11 || v11);
            const v15 = v11--;
            Math.trunc(v14);
            Math.imul(v15, v11);
        },
        "a": -171.0079335051213,
        "g": a5,
    };
    return o18;
}
f3(2.314900905710962, -171.0079335051213);
f3(-171.0079335051213, -0.0);
const v21 = f3(-0.0, 2.314900905710962);
v21.e = v21;
const v24 = new Int8Array(5);
v24[4];
73 >>> 73;
new Int8Array(73);
let v30 = 255;
v30--;
const v33 = new Uint32Array(v30);
try { v33.findIndex(v33); } catch (e) {}
function F35() {
    if (!new.target) { throw 'must be called with new'; }
    const v37 = this?.constructor;
    try { new v37(); } catch (e) {}
}
try { ("undefined").strike(); } catch (e) {}
class C43 extends F35 {
}
const v44 = new C43();
v44.length;
Uint16Array.log2(65536 | "undefined");
const v51 = ["function"];
Reflect.apply(("b").localeCompare, v44, v51);
