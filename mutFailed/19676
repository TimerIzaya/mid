function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -9007199254740992;
    } catch(e3) {
    }
    try {
        this.f = -9007199254740992;
    } catch(e4) {
    }
}
new F0();
const v6 = new F0();
new F0();
[1073741824,-1640,42037,65535];
[9007199254740992,10000,4294967296,13,7,3,1301261697,-1543580453,7];
const v10 = [-1877828691,-9007199254740990];
function f11() {
    const v15 = Symbol.toPrimitive.description.codePointAt();
    ([-1.5424212036356715e+308]).shift();
    [1073741824,1073741823,1376142744,1073741825];
    return v15;
}
4294967295 != 4294967295;
function F23(a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    a26--;
    try {
        this.c = a26;
    } catch(e28) {
    }
    try {
        this.h = a25;
    } catch(e29) {
    }
}
const v30 = new F23(F23, -14);
const v31 = v30?.h;
try { new v31(F0, v6); } catch (e) {}
new F23(v30, -14);
function f34() {
    const v35 = [f34,f34,f34,f34,f34];
    class C37 extends v35.constructor {
    }
    const v38 = new C37();
    try { v38.reduce(); } catch (e) {}
    Math.atanh(4294967295);
    return Math;
    class C42 {
        set g(a44) {
            4294967295 || a44;
        }
    }
    return v35;
}
new F23(v10, -14);
const v47 = new v6();
try {
    v10.length = v47;
} catch(e48) {
}
for (let i51 = 0, i52 = 10;
    (() => {
        i51 - i51;
        i52 | i52;
        const v55 = i51 < i52;
        class C57 {
            2147483647 = undefined;
        }
        class C58 {
            static {
                const t8 = this.__proto__;
                t8();
            }
        }
        return v55;
    })();
    i52 << i52, i52--) {
    i52 / i52;
    const v69 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    function f70() {
        const v72 = -v69.length;
        const o73 = {
            5: v72,
        };
        return v69;
    }
    f70();
}
for (let v75 = 0; v75 < 5; v75++) {
    function f76() {
        function f77(a78, a79, a80, a81) {
            return arguments;
        }
        class C83 {
        }
        const v84 = new C83();
        const v85 = [v84,v84,v84,v84];
        const v88 = new Uint8Array(C83, 2, 2);
        let v89;
        try { v89 = v88.reduce(); } catch (e) {}
        function f90() {
            const o130 = {
                m(a94) {
                    a94.c = v84;
                    try { a94.next(a94, 1261703539); } catch (e) {}
                    a94.h = a94;
                    const o96 = {
                    };
                    o96.e = Float64Array;
                    o96.h = o96;
                    o96.h = o96;
                    function f97(a98, a99, a100) {
                        return o96;
                    }
                    f97.caller = f97;
                    try {
                        o96.e = -65535;
                    } catch(e101) {
                        const v104 = new Uint8ClampedArray(798, -65535);
                        new Uint8ClampedArray(798, ...v104, o96);
                    }
                    try {
                        const o106 = {
                        };
                        o106.e = v85;
                        o106.e = 1261703539;
                    } catch(e107) {
                    }
                    let v109;
                    try { v109 = ("EV").link(); } catch (e) {}
                    let v110 = 0;
                    class C111 {
                    }
                    const v114 = new Int8Array(3938);
                    let v115 = 3;
                    let v116 = 0;
                    let v117 = v116 >> v116;
                    for (let i = 0; i < 5; i++) {
                        [...v115] = v114;
                        v116++;
                    }
                    const o119 = {
                    };
                    try {
                        let v120 = 0;
                        for (let i = 0; i < 5; i++) {
                            const v124 = new Uint8ClampedArray(303);
                            Object.defineProperty(v124, 7, { writable: true, configurable: true, enumerable: true, value: Int8Array });
                            ({"c":v89,"d":v110,...v117} = v109);
                            try {
                                o96.fuck(2, a94);
                            } catch(e126) {
                            }
                            v120++;
                        }
                        const o128 = {
                        };
                    } catch(e129) {
                    }
                },
            };
            o130.m(o130);
            return 2;
        }
        f90();
        const t165 = "Vre";
        t165[2] = "Vre";
        let v134 = ("Vre").codePointAt(v75);
        const v135 = v134--;
        class C136 {
        }
        return v134 ^ v135;
    }
    f76();
    %OptimizeFunctionOnNextCall(f76);
}
