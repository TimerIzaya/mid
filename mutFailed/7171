const v1 = new Set();
function f3() {
    const v6 = v1 % v1;
    Math.tan(WeakMap);
    v6 * (870855375 + WeakMap);
    WeakMap / v6;
    v1 >>> v1;
    return Set;
}
WeakMap[Symbol.toPrimitive] = f3;
function f14(a15) {
    try {
        a15.toString = a15;
    } catch(e16) {
    }
    return a15;
}
WeakMap.valueOf = f14;
const v17 = new WeakMap();
try { v17.has(WeakMap); } catch (e) {}
new Uint8Array(3063);
Uint8Array.length;
const v25 = new Uint8Array(129);
function f26(a27) {
    const o28 = {
        "f": Set,
    };
    return a27;
}
v25.valueOf = f26;
v25.toString = f14;
const v31 = new Int16Array(0);
try { v31.subarray(0, 0); } catch (e) {}
const v35 = new Float32Array();
v35.valueOf = f3;
v35.constructor = f14;
try { v35.subarray(WeakMap, v25); } catch (e) {}
Uint8Array.prototype = Uint8Array;
const v38 = new Uint8Array(268435440);
new Uint8ClampedArray(129);
v38[6] = v35;
