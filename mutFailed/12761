let v0 = 128;
new Uint8ClampedArray(v0);
v0--;
const v6 = new Uint8ClampedArray(7);
let v7;
try { v7 = v6.keys(); } catch (e) {}
let v8 = v6[2];
v8++;
4 + 4;
const v13 = new Uint32Array(4);
v13[3] = v13;
0.43327499930275004 === 0.43327499930275004;
const o20 = {
    "execution": "async",
};
const v21 = o20?.__lookupGetter__;
let v22;
try { v22 = new v21(o20); } catch (e) {}
const v23 = gc(o20);
const t18 = "bigint";
t18[1] = "bigint";
class C25 {
    toString(a27) {
        const v28 = this?.constructor;
        try { new v28(); } catch (e) {}
        const t25 = super["bigint"];
        t25[9] = 0;
    }
}
const v32 = new v7();
const v33 = [v32,v32];
try { v33.reduce(Uint8ClampedArray); } catch (e) {}
try {
    v33.length = v32;
} catch(e35) {
    e35.c = e35;
}
v23.constructor = v22;
