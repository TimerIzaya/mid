257 === 257;
-257;
2147483648 % 2147483648;
let v8 = -13;
v8--;
v8 >>> v8;
v8 * v8;
function f12(a13, a14, a15) {
    a13.prototype;
    ~a14;
    a14 / a14;
    !(a15 != a15);
    const v21 = -a14;
    const v22 = v21 & v21;
    v22 != v22;
    const o32 = {
        __proto__: a13,
        0: a15,
        [a14](a25, a26) {
            super.f = v8;
            const o30 = {
                "execution": "sync",
                "type": "minor",
            };
            gc(o30);
            return -12;
        },
    };
    o32[0] = o32;
    const v33 = o32?.constructor;
    v33.name = v33;
    let v34;
    try { v34 = new v33(v21); } catch (e) {}
    v34.caller = v34;
    return o32;
}
const v35 = f12.name;
v35[2] = v35;
const v36 = f12(f12, -12, 257);
let v37 = v36[0];
v37++;
const v39 = v36.length;
v39 / v39;
const v41 = f12(-9, 2147483648, -9);
v41[2147483648] = v41;
f12(v8, 2147483648, -9);
-2;
-(-7349);
0 % 0;
-19647 / -19647;
function f56(a57, a58, a59, a60) {
    a58 % a58;
    const v62 = a58 | a58;
    v62 !== v62;
    const v64 = a57 | a57;
    const o65 = {
        "e": a58,
        [a59]: 1000,
    };
    const v66 = o65?.__defineSetter__;
    v66.g = v66;
    try { new v66(v64, 3); } catch (e) {}
    return f56;
}
const v68 = f56?.constructor;
v68.length = v68;
try { v68.prototype(); } catch (e) {}
try { new v68(2); } catch (e) {}
f56(-19647, -19647);
f56(f56, 255, -7349);
const v73 = f56(0, -1679542547);
try { v73(v41, v37, 1000, v37); } catch (e) {}
v73.caller = v73;
