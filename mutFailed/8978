const v0 = [1000000000.0,-3.0,66.24274698343856,-4.0,3.0,-3.691667095106465e+307,Infinity,-990461.0159162557,-1.7976931348623157e+308];
[-2.0,-5.0,1000.0,1000000000.0,0.44839463445915806,3.0,268.22851709543784,5.263712136112868e+307];
const v2 = [4.0,3.111866555427529];
let v4;
try { v4 = ("m").toLocaleUpperCase(); } catch (e) {}
class C7 {
    #o(a9, a10, a11, a12) {
        f = a11;
        try {
            a12.__proto__ = v2;
        } catch(e13) {
        }
        return a11;
    }
    e = v2;
    static #d;
}
try { new C7(); } catch (e) {}
const t18 = "toString";
const v15 = new t18();
const v16 = new C7();
const v18 = gc();
const v19 = new C7();
const v20 = v19?.hasOwnProperty;
try {
    v16.fuck(v18, v16, v19);
} catch(e22) {
}
v19[9] = v0;
try { new v20(v0); } catch (e) {}
const t30 = "eWi";
t30[4096] >>= v4["findIndex"](v20, C7);
v18?.[v4];
v4 **= v15;
const v27 = [2147483649,-62399];
const v29 = v2.unscopables;
Symbol.for(v29.description);
const t36 = "toString";
t36[v29] = v27;
