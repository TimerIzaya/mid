const v1 = new JSON();
const v2 = [64,9007199254740992,-9007199254740990];
[127,536870912,1073741825,1024,536870889,-268435456,10,30327];
const v4 = [-39946214,268435441,1024,-3,0,-2103205088];
try { v4.reduceRight(v1); } catch (e) {}
class C6 {
    static #toString(a8) {
        const v9 = JSON !== a8;
        if (v9) {
            v2[v9] &= a8;
        } else {
            v1["entries"]();
        }
        return v2;
    }
    static [v4];
    #g;
}
new C6();
const v13 = new C6();
const v14 = v13?.constructor;
try { new v14(); } catch (e) {}
const v16 = new C6();
const v17 = v16?.constructor;
try { new v17(); } catch (e) {}
class C22 {
    constructor(a24, a25, a26) {
        try { this.toString(); } catch (e) {}
        for (let v28 = 0; v28 < 25; v28++) {
            gc.length;
            try { ("minor").lastIndexOf(v1); } catch (e) {}
            try { ("async").localeCompare("async"); } catch (e) {}
            const o35 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o35);
        }
    }
}
const v37 = new C22(C22, C22, C22);
const v38 = v37?.__defineGetter__;
try { new v38(v1, v13); } catch (e) {}
new C22(C22, C22, v37);
new C22();
