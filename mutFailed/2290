function f0() {
    const o10 = {
        "b": 4.0,
        7: 4.0,
        [3.0](a5, a6) {
            ("-48761")[Symbol.search];
            return 4.0;
        },
        "e": "-48761",
        ..."-48761",
        "f": "-48761",
        "h": 3.0,
        4: 3.0,
    };
    return o10;
}
const v11 = f0();
const v12 = f0();
const v13 = f0();
v13[Symbol.toPrimitive] = f0;
const v16 = [v11,v13];
v16[2] = v16;
try { v16.push(v11); } catch (e) {}
const v19 = [v11,[v16,f0,v16,v12,v13,v11],v13];
([v16,v19])[1];
const v22 = [v16,v13,v13];
function f23(a24, a25) {
    function F26(a28, a29) {
        if (!new.target) { throw 'must be called with new'; }
        a29 - a29;
        const v31 = this.constructor;
        v31.name = v31;
        const v33 = new Int16Array(a29);
        const v34 = v33.lastIndexOf(F26, a28);
        v34 ^ v34;
        try { new v31(this, a28); } catch (e) {}
    }
    new F26();
    return v16;
}
v22[Symbol.toPrimitive] = f23;
let v40;
try { v40 = v22.copyWithin(f0, f0); } catch (e) {}
const v41 = [v22,v11];
function f42() {
    function f43() {
        Symbol(v40);
        %PrepareFunctionForOptimization(Symbol);
        Symbol(v40);
        Symbol(v40);
        %OptimizeMaglevOnNextCall(Symbol);
        Symbol(v40);
        return v19;
    }
    return f43;
}
Object.defineProperty(v41, "toString", { writable: true, configurable: true, get: f42 });
try { v41.toLocaleString(); } catch (e) {}
let v49;
try { v49 = v41.toString(); } catch (e) {}
v49[80];
const v51 = /[abc+]/gvdim;
v51.sticky = v51;
const v52 = v51.sticky;
/abc|def/uisy;
const v54 = /\xed\xb0\x80/guimsy;
v54.dotAll = v54;
const v55 = [];
const v56 = /a\w/gudsy;
const v57 = /ka{0}/guims;
class C58 {
}
function f59(a60, a61) {
    const o62 = {
        ...v57,
        "d": v55,
        "c": a61,
        "g": a61,
        "h": f0,
        "e": a60,
        1403: C58,
        "f": v55,
        "b": v52,
        "f": a60,
        "a": a61,
        1073741823: C58,
        __proto__: C58,
        "e": v57,
        "b": v56,
    };
}
%PrepareFunctionForOptimization(f59);
f59();
f59();
%OptimizeFunctionOnNextCall(f59);
f59(C58, v55, v41, v16, v56);
