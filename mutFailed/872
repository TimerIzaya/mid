[-5.0,824005.0398179078,254.99487129244744,0.03841519621538014];
+20572;
new BigInt64Array(20572);
try {
} catch(e5) {
}
[-424190.3907800575,2.4907162384606636,2.220446049250313e-16,-9.65453066627124e+307];
Math.exp(10000);
("6Ct").normalize();
[2.277357832314342,-2.2250738585072014e-308,1000000.0,9.440091035362428,2.407759675357333,-1000.0,-1000000000.0,-1e-15];
[-9223372036854775807,-4294967296,-3];
[-9223372036854775807,-1,62952,9007199254740990,1438605688,-946037449,-1254668500,1000,268435456,10];
[268435456,16,536870887,27130,255,790676529,-21155,21340,505743640,1];
new Int16Array(1269);
const v20 = new Int8Array(Int8Array);
const v21 = new Int8Array();
v21.find(v20);
new Set();
const v28 = new Uint8Array(481);
v28.indexOf(Uint8Array, 481);
const v31 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
const v33 = Symbol.toPrimitive;
const o40 = {
    toString(a35, a36) {
        const v37 = "asyncIterator" && Float64Array;
        function f38() {
            a35 *= v33;
            return Float64Array;
        }
        Object.defineProperty(v37, "valueOf", { value: f38 });
        v37 <= v31;
        return this;
    },
};
function f42(a43, a44) {
    const o45 = {
        __proto__: a44,
    };
    return a43;
}
const v49 = new Int32Array();
function f50() {
    return Int32Array;
}
([Infinity,-686.9856326146617,0.47369378110968274,-7.24289104755818]).includes(...[-1000.0,-2.2250738585072014e-308,511.99933163650917,-386.8372768814137,Infinity]);
function* f54(a55, a56, a57) {
    return a56;
}
Object.defineProperty(v49, Uint8ClampedArray, { get: f50, set: f50 });
