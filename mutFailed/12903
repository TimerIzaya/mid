const v1 = new WeakSet();
const v2 = [-8,536870888];
const v3 = [9007199254740992,-1337,61121,-1533779859,-1522288742,132668875];
const v4 = [-2147483647,16,-1312437478,-5];
class C5 extends WeakSet {
    7 = v4;
    constructor(a7) {
        try {
            v4.length = a7;
        } catch(e8) {
        }
        C5[0] = a7;
        super(v3);
        v1.d;
        let v10;
        try { v10 = v2.pop(); } catch (e) {}
        for (let v11 = 0; v11 < 32; v11++) {
            v10["p" + v11] = v11;
        }
    }
    g = v2;
    225 = v4;
    static 396 = v3;
    static 4265851043;
    #e = v4;
}
new C5(v4);
new C5(v4);
new C5(v4);
new Uint8ClampedArray(3202);
new Int8Array(255);
new Uint8ClampedArray(3338);
for (let v26 = 0; v26 < 5; v26++) {
    function f27(a28, a29, a30, a31) {
        return v26;
    }
    const v32 = f27(v26, f27, v26, v26);
    const v34 = [601759695];
    const v35 = [1073741824,1073741823,1376142744,1073741825];
    function f37(a38, a39, a40, a41) {
        arguments.toString();
        function f44() {
            const v46 = ("Vre")?.toLocaleUpperCase;
            try { v46(); } catch (e) {}
            try { ("Vre").fixed(); } catch (e) {}
            let v49 = -268435456;
            v49--;
            -(v49 + v49);
            const o53 = {
                "c": -4294967297n,
                "e": v49,
            };
            return o53;
        }
        f44.length;
        f44();
        const v57 = new Int8Array();
        try { v57.findIndex(v32); } catch (e) {}
        %OptimizeFunctionOnNextCall(f44);
        ("find").strike("find");
        try { v35["find"](..."find", a41, ...v34, ...v35, ...522675525n); } catch (e) {}
    }
    const v62 = f37();
    f37(v62, v32, v62, v26);
    %OptimizeFunctionOnNextCall(f37);
    C5[3];
    const v65 = WeakSet << v34;
    const v66 = new f37(v32, v65, v65, v26);
    f = v66;
    v4.__proto__;
}
