function f0() {
    function f4() {
        let v5 = 6;
        v5 >>> v5;
        -(v5 % v5);
        v5--;
        return v5;
    }
    for (let v10 = 0; v10 < 5; v10++) {
        f4();
        %OptimizeFunctionOnNextCall(f4);
    }
    const o21 = {
        "c": -2.2250738585072014e-308,
        [-28467](a13) {
            this[268435439] = -28467;
            const t16 = "undefined";
            t16[2364] = this;
            Object.defineProperty(this, 38, { value: "undefined" });
            return this;
        },
        "e": "undefined",
        "f": -28467,
        "d": "undefined",
        "h": "undefined",
        toString(a15, a16, a17) {
            return f0;
        },
        n(a19, a20) {
            return -28467;
        },
        ..."undefined",
        "g": -2.2250738585072014e-308,
        ..."undefined",
    };
    return o21;
}
f0();
const v23 = f0();
f0();
0.6110040188511394 - 0.6110040188511394;
const t37 = "e";
t37.length = "e";
-1.7976931348623157e+308 >> -1.7976931348623157e+308;
try { new Float32Array(Float32Array, "l4sR", "l4sR"); } catch (e) {}
new Float32Array(1);
Uint8ClampedArray.length;
const v43 = new Uint8ClampedArray(129);
v43[103];
let v45 = 255;
v45++;
new BigInt64Array(v45);
-(-35417);
class C54 {
    static 7;
    static [-1] = "string";
    #n(a56) {
        a56 = this;
        a56.e >>>= -35417;
        const o60 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o60);
        return this;
    }
}
C54[7];
new C54();
Math.tanh();
class C68 {
}
try { new C68(); } catch (e) {}
class C70 extends C68 {
}
try { new C70(); } catch (e) {}
const v73 = Array();
const v74 = Array();
try { v74.findLast(v74); } catch (e) {}
class C77 {
    static 9 = 9.187362692894364;
}
for (const v78 in C77) {
}
class C79 {
    #e;
    static {
        this.name = this;
        function f81(a82, a83) {
            return a82;
        }
        const o94 = {
            o(a85) {
                const o87 = {
                };
                const v88 = gc(o87);
                function f89() {
                    return v88;
                }
                const v91 = [BigUint64Array,BigUint64Array];
                try { v91.splice(v73, this); } catch (e) {}
                const o93 = {
                    "arguments": v91,
                };
                return v88;
            },
        };
        const o96 = {
        };
        const v98 = new Proxy(Uint32Array, o96);
        try { new v98(C68, -35417, Proxy); } catch (e) {}
        o94["o"](o94, Uint32Array, "o", "o", v98);
        const v102 = super[this];
        try { v102.join(-4096, -4096, v102); } catch (e) {}
        const o104 = {
        };
        o104.g = o104;
        [/LD/vds,1000.0];
    }
    static f;
    m(a109, a110) {
        const o111 = {
        };
        const o114 = {
        };
        const v116 = new Proxy(Uint8Array, o114);
        v116.d = v116;
        new Proxy(this, o111);
        class C122 {
        }
        function f123() {
            let v124 = 1000000000000.0;
            v124--;
            class C127 {
            }
            new C127();
            const v129 = new C127();
            [C122,C127];
            [257828.6336153492,v129];
            [v129];
            class C133 extends C54 {
            }
            function f134(a135, a136) {
                return -4096;
            }
            Set.toString = f134;
            Set.constructor(Set);
            v74.constructor;
        }
        const v140 = "string" && -4096;
        +a110;
        Math.sqrt(v140);
        a109--;
        -509886178 << -509886178;
        return this;
    }
}
const v145 = C79?.call;
try { new v145(v23); } catch (e) {}
new C54();
new C79();
new C79();
const v156 = new WeakSet();
try { v156.delete(C79); } catch (e) {}
const v158 = v156.constructor;
try { new v158(); } catch (e) {}
class C160 extends v158 {
}
const v163 = new Uint16Array(512);
try { Float32Array.of(); } catch (e) {}
class C166 {
}
function F167(a169, a170) {
    if (!new.target) { throw 'must be called with new'; }
}
new Float32Array(v163);
