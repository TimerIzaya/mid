const v0 = [-2.360375525870994];
const v1 = [0.6575048119287539,-Infinity,1.4699971977763391e+308,540068.7617580341];
[NaN];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a5;
    } catch(e6) {
        new BigInt64Array();
        const v9 = [];
        const o11 = {
            0: v9,
            162: "1ya",
        };
    }
    try {
        this.h = a5;
    } catch(e12) {
    }
}
const v15 = new BigUint64Array(1000);
v15.includes(undefined);
new F3(F3);
const v19 = new F3(v0);
new F3(v19);
v1.constructor(v1);
const v23 = ("D")[0];
v23[0] = v23;
const v24 = v23.lastIndexOf("D");
v24 + v24;
for (let i30 = 0; i30 < 10; i30++) {
    try {
    const t0 = -44394n;
    t0();
    } catch (e) {}
    !-1802551371;
}
[868.9592243659533,3.405345120202566e+307];
[0.004146092790233147,1.7976931348623157e+308,3.1762201161487967e+307,0.5086170979723167];
const v42 = [-1000000.0,816.9325204488823,20.785075929748814,-527795.6201342795,-1000.0,3.3982855182732763,-167114.38912040228];
function f44() {
    return 12;
}
try {
    const o45 = {
    };
    o45.a = o45;
    v42.findLastIndex(f44, o45);
} catch(e47) {
}
[-1.0,-3.0,Infinity,570.2004095199529,2.220446049250313e-16,-3.0,-817.9644502626102,329498.2340530241,-Infinity,-1.7976931348623157e+308];
function F49(a51, a52, a53) {
    if (!new.target) { throw 'must be called with new'; }
    function F54(a56, a57, a58, a59) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v60 = new F54();
    class C63 {
        static {
            try {
                const t60 = null;
                t60.valueOf = this;
            } catch(e65) {
            }
        }
    }
    const v67 = new BigInt64Array(4046);
    function f68(a69, a70) {
        Object.defineProperty(v60, v60, { configurable: true, enumerable: true, get: f68 });
        let o72 = {
            get e() {
                return a51;
            },
        };
        [,...o72] = v67;
        a51();
        arguments[2] = arguments;
        const v77 = new Uint32Array(4);
        new Float64Array(v77);
        return a69;
    }
    f68();
}
new F49(F49, F49, F49);
new F49();
