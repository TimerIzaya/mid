[2.2250738585072014e-308,0.08677080379470292,3.0,1000000.0,2.2250738585072014e-308,4.0,1000.0,-104276.41365827166,-0.0];
[-1000000.0,0.0,0.8572919593864471,-1000.0,-549.3913903648297,1e-15];
[688.0365073365015,0.0];
/a?/vdims;
const v7 = /F+/gdsy;
/(ab)\1/gvmsy;
/(F(x)(x)(x)\4*)/gis;
/E(?:ab|cde)/guimsy;
const o14 = {
    "execution": "async",
    "type": "minor",
};
new Int16Array(2183);
const v19 = new BigUint64Array();
const o29 = {
    [v19](a22, a23, a24) {
        class C26 {
            #d = 4096;
            static {
                this.#d;
            }
        }
    },
};
function F31(a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    const v35 = a33.constructor;
    const v37 = /[a-zA-Z0-9]/gvisy;
    const v38 = /abc?/gvmy;
    v38[-2] ^= v37;
    v38.exec("Q8F");
    const v41 = new Int16Array();
    v41.lastIndexOf(F31, a33) ^ v7;
    try { new v35(this, a33); } catch (e) {}
    new Uint32Array(127);
    for (let v48 = 0; v48 < 5; v48++) {
    }
}
const v49 = new F31();
const t39 = v49.constructor;
new t39();
class C52 {
    constructor(a54, a55, a56) {
        for (let v57 = 0; v57 < 5; v57++) {
            function f59() {
                const o67 = {
                    [-4294967297n](a61, a62, a63, a64) {
                        eval(C52);
                    },
                };
                return f59;
            }
            f59();
            %OptimizeFunctionOnNextCall(f59);
        }
    }
}
gc(o14);
const v70 = /Za(?=b)c/u;
Math.tanh("1");
for (let i76 = 0, i77 = 10;
    (() => {
        const v78 = i76 < i77;
        let v79 = 3375;
        const v80 = v79++;
        v80 / v80;
        const v83 = new BigUint64Array(v79);
        let [v84,,v85,...v86] = v83;
        return v78;
    })();
    i76++) {
}
const v94 = new Float32Array(127);
new BigUint64Array(119);
const v100 = [-9007199254740992];
const o101 = {
    "arguments": v100,
    "type": "function",
};
new Float32Array(1000);
const v107 = new Date();
try { v107.setFullYear(26578n); } catch (e) {}
function f109(a110, a111, a112, a113) {
    return 45725n;
}
const v115 = [];
let v116 = 0;
const t87 = 1045;
t87();
const o121 = {
    "execution": "async",
    "type": "minor",
};
do {
    v70[3] &= v7[119];
    v116++;
} while ((() => {
        function F125() {
            if (!new.target) { throw 'must be called with new'; }
        }
        o14.constructor(v94, v94, 1024);
        1024 <= 3585 ? 1024 : 3585;
        return v116 < 7;
    })())
new Int8Array([v115]);
