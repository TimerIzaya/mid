const t0 = 2;
const v7 = new t0();
function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e12) {
    }
    try {
        v7[this];
        new F8();
    } catch(e15) {
        (-774842810)[Symbol.toPrimitive];
    }
}
function F19(a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a21;
    } catch(e24) {
        e24?.[a22];
        this.__proto__;
        -2.2250738585072014e-308;
        6209 >>> 2.2250738585072014e-308;
        Math.atanh(-774842810);
        Math.log10(2.2250738585072014e-308);
        6209 / "isConcatSpreadable";
    }
}
new F19(2147483648, 2147483648, 2);
class C36 extends F8 {
    #g;
    static [Set] = 2;
    ["6"] = Set;
}
new C36();
new C36();
new C36();
new F19(2, -774842810, -774842810);
new F19(2, 2, -774842810);
const v46 = new Uint8ClampedArray();
v46.fill(Uint16Array, 127, 1073741824);
([-1046514251,257,4294967297,9007199254740991,64,-23133,16,1073741825,65536])[64];
/9f8\xf0\x9f\x92\xa9/diy["compile"]();
