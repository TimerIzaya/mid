let v2 = 54901;
class C3 {
    static #b;
    constructor(a5) {
        v2 >>>= super.d;
    }
    static #p(a8, a9) {
        Math.cos(a9 = v2);
        Math.max(a8);
        Math.cosh(a8, -1.466970542310086e+308, a9);
        return a9;
    }
}
new C3(v2);
new C3(C3);
new C3("a", v2);
new Int16Array(13);
function f22() {
    let v23 = -4294967295;
    const v24 = v23++;
    const o28 = {
        valueOf(a26, a27) {
            return v23;
        },
    };
    return v24;
}
new Uint8Array(3797);
try {
const t0 = 1000000000.0;
t0(2.220446049250313e-16, Uint8ClampedArray, ...1000000000.0, -82.86062314585524);
} catch (e) {}
new Uint32Array(3532);
function f41() {
    function f42(a43) {
        for (let v44 = 0; v44 < 5; v44++) {
            function f45() {
                Symbol.toPrimitive.description.codePointAt();
                function F50() {
                    if (!new.target) { throw 'must be called with new'; }
                }
                const v53 = new F50();
                let v55 = "-46707";
                class C56 {
                    #b = v53;
                    constructor(a58, a59) {
                        this.#b <<= "object";
                    }
                }
                const v61 = new C56();
                v55 >>>= v61;
                return f42;
            }
            f45();
            %OptimizeFunctionOnNextCall(f45);
        }
    }
    ([12]).toLocaleString();
    Math.sin(-9007199254740991);
    return f42;
}
function f68(a69) {
    return Uint8Array;
}
Object.defineProperty(Uint8Array, Symbol.toPrimitive, { get: f41, set: f68 });
const v74 = new Float32Array(11);
v74.lastIndexOf();
const v76 = /8[\cA]v/uisy;
const t68 = [3480,1024,-4294967297,-1024,512,65536,29198,-9223372036854775807,-2147483647];
t68.length = v76;
const v78 = new Uint8Array();
Math.log10(v78.constructor);
