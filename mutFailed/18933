new Date();
function F5(a7) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 1254475981;
    } catch(e8) {
    }
    try {
        function f10(a11, a12, a13, a14) {
            return -261.99102172609366;
        }
        this.h = a7;
    } catch(e18) {
    }
    const v19 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    for (let v20 = 0; v20 < 25; v20++) {
        v19["p" + "p"] = v20;
    }
}
const v23 = new F5(F5);
const v24 = new F5(1254475981);
const v25 = new F5(1254475981);
[268435441,-128,256,65536];
const v27 = [256,65537];
const v28 = [16,-10,-6213,1011165079,9007199254740990,10,12];
class C29 {
    4 = F5;
    #g = C29;
    #c;
    static [v24];
    static toString(a31, a32) {
        const v34 = super[this];
        try {
            const v35 = delete this[v34];
            v35 && v35;
            this[v23];
        } catch(e38) {
        }
    }
    [v25] = v27;
    m(a40, a41, a42) {
        a42[0] = a40;
        const v43 = super.h;
        try {
            new F5(9007199254740990);
            class C45 {
                constructor(a47, a48, a49, a50) {
                }
                /*
                constructor(a52, a53, a54, a55) {
                }
                */
            }
        } catch(e56) {
        }
        return v43;
    }
    g = 1254475981;
    a;
}
new C29();
const v58 = new C29();
const t62 = 1959057735;
new t62();
const v62 = new Date(Uint8Array);
v62.setTime(Uint8Array);
Reflect.construct(v58, v28);
const v68 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
class C69 {
    constructor(a71, a72, a73, a74) {
        const v75 = this.constructor;
        try { new v75(); } catch (e) {}
        for (let v77 = 0; v77 < 5; v77++) {
            v68[v77] = a74;
        }
    }
}
new C69(v68, Uint32Array, Uint32Array, Uint32Array);
