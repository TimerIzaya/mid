/Cq\p{General_Category=Decimal_Number}a\bc/vdims;
/(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10(?:a?)+/guim;
const v4 = new Float32Array(7);
v4.includes(1234, 1000);
/\P{scx=Greek}/gis;
new Uint8Array(6);
const v13 = new Set();
function f14(a15, a16) {
    return a15;
}
const t10 = v13.__proto__;
t10.p2 = f14;
new Int32Array(Int32Array);
const v26 = new BigUint64Array();
const o27 = {
    ...v26,
};
new BigInt64Array(10);
new Uint32Array(6);
4 & Uint16Array;
const v39 = new Uint8ClampedArray(([127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649]).toSpliced(-1148418937, -1148418937));
v39.lastIndexOf(-1148418937);
new Uint8Array(1151);
new v39();
const v45 = new BigInt64Array();
var c = v45;
function F46(a48, a49, a50, a51) {
    if (!new.target) { throw 'must be called with new'; }
}
const v52 = new F46();
const v55 = new BigInt64Array(4046);
function f56(a57, a58) {
    Object.defineProperty(v52, v52, { configurable: true, enumerable: true, get: f56 });
    let o60 = {
        get e() {
            return -12;
        },
    };
    [,...o60] = v55;
    return a57;
}
const v62 = new Int8Array();
v62.filter(Int8Array);
