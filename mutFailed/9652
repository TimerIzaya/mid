function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.g = F0;
    try {
        this.b = 13;
    } catch(e3) {
    }
    try {
        this.g = 13;
    } catch(e4) {
    }
}
const v5 = new F0();
function f6() {
    try { v5["p"]("p"); } catch (e) {}
    return F0;
}
v5[Symbol.toPrimitive] = f6;
const v11 = new F0();
const v12 = new F0();
function F13(a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a16;
    a16.valueOf = f6;
    try {
        this.f = a16;
    } catch(e17) {
    }
}
new F13(v5, v5);
new F13(v12, v11);
new F13(v11, v12);
class C21 {
    constructor(a23, a24, a25) {
        [-1e-15,-572933.0069692393,-1000000.0,0.5186723235827426,0.11406924117472084,-6.04522694498214e+307,288560.4675674264];
        [1e-15,283.6502440744698,-5.980237595893518,3.0,3.2585983582341775];
        [1000000000000.0,2.4344203531270674e+307,473603.5421713593,-1.7867024860194086e+308,-1.0,-4.085071522319108,-1000000.0,-299617.01408706396,-492.9398545451733,-1.0936155570689556e+308];
        let v30 = -4294967296;
        const v31 = --v30;
        a24 / v30;
        v31 - a24;
    }
    e;
}
new C21(v12, v5, v5);
new C21(F13, C21, v5);
new C21(F0, v11, v5);
function f38() {
    return undefined;
}
const v40 = ([,]).group(f38);
v40.b = v40;
