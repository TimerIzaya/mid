class C3 {
    constructor(a5) {
        a5[this] = 9007199254740991;
        super[63251] = a5;
        try {
            a5.toString = a5;
        } catch(e6) {
        }
    }
    static #h = 0;
    static d;
    b = 0;
    static #c = 63251;
}
const v7 = new C3(9007199254740991);
new C3(v7);
const v9 = new C3(C3);
function F10(a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a13;
    } catch(e14) {
    }
    try {
        this.a = a12;
    } catch(e15) {
    }
}
new F10(v9, 63251);
new F10(v9, 0);
new F10(v7, 9007199254740991);
class C19 {
    c = 9007199254740991;
    0;
    g = C3;
    static 4294967296 = F10;
    static 6;
    n(a21, a22, a23, a24) {
        class C25 {
        }
        const v26 = new C25();
        const v27 = v26.constructor;
        let v28;
        try { v28 = v27(v27, v27); } catch (e) {}
        function f29() {
            const v31 = ("D")[0];
            let v32;
            try { v32 = v31.substring(v28); } catch (e) {}
            return v32.charCodeAt();
        }
        %PrepareFunctionForOptimization(f29);
        f29();
        %OptimizeFunctionOnNextCall(f29);
        f29();
        new Date();
        return a21;
    }
    2782739894;
    static f = C3;
}
new C19();
new C19();
new C19();
const v43 = new Uint16Array(209);
const v44 = 209 > Uint16Array;
try {
    v43.__proto__ = v43;
} catch(e45) {
}
let v46 = 1829;
const v48 = new Uint8Array(v46);
Object.defineProperty(v48, v44, { writable: true, configurable: true, enumerable: true, value: v46 = 209 });
v48[8] = Uint16Array;
let v49;
try { v49 = v46(); } catch (e) {}
try { v43.forEach(v49, v49); } catch (e) {}
new Float64Array(3916);
/(\xed\xb0\x80)\x01/vdsy;
/a[a-z]/vim;
