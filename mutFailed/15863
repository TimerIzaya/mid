new Int8Array(73);
new BigUint64Array(129);
new Uint8Array(73);
const v9 = [4,-9223372036854775807,2,-383885188,268435439,2147483648,474595027,-12442,-9007199254740991];
function f10(a11) {
    const v13 = ("Vre").fixed();
    const v14 = v13.codePointAt();
    return v13;
    return v14;
}
v9.valueOf = f10;
[65535,12,-1073741824,1789925863,46413];
const v16 = [65537,13,-65535,2,4294967296,128];
try { v16.with(2130, 2130); } catch (e) {}
function f19(a20, a21, a22, a23) {
    a21.valueOf = f19;
    a23.valueOf = f19;
    a21 >>> a21;
    a23 >>> a23;
    arguments[1] = Uint8Array;
    arguments[1] = arguments;
    1073741824 + 1073741824;
    const o31 = {
    };
    o31.g = o31;
    o31[10] = o31;
    o31[10] = o31;
    return f19;
}
for (let v32 = 0; v32 < 10; v32++) {
    v32 >>> v32;
    f19(-2.5916949198328514e+307, -2.5916949198328514e+307, -2.5916949198328514e+307, v32);
}
%OptimizeFunctionOnNextCall(f19);
const v35 = f19();
v35 <= v9 ? v35 : v9;
try { v35(129, v9, f19, f19); } catch (e) {}
