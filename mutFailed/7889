function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 20308708;
    } catch(e3) {
        const v5 = this.constructor;
        try { new v5("-268435456"); } catch (e) {}
        const v9 = [Uint32Array];
        try { v9.find(Worker); } catch (e) {}
    }
}
Math.cos(-1073741824);
"minor" == "minor";
const v16 = ("minor").valueOf("minor");
try { v16.anchor(F0); } catch (e) {}
const v18 = new F0();
const v19 = new F0();
let v20 = new F0();
function f21() {
    return v19;
}
try { new f21(); } catch (e) {}
const v23 = [16,-324930880,-11,536870888,762035664];
v23.a = v16;
try { v23.some(f21); } catch (e) {}
let v25 = [188792917,2];
v25.toString = f21;
const v26 = [-1381];
v26[0] = v26;
function f27(a28, a29) {
    a29.e;
    const o56 = {
        get b() {
            this[0] = this;
            v20 = this;
            try {
                v23.a = v26;
            } catch(e32) {
            }
            return this;
        },
        get g() {
            return a29;
        },
        [-1073741824](a35, a36, a37) {
        },
        0: v18,
        m(a39, a40, a41) {
            const v45 = +v18;
            !-1024;
            class C48 {
                constructor(a50, a51) {
                    new Uint16Array(a50);
                }
            }
            Math.atan(a41);
            Math.log2(v45);
            a41 >>> 32970;
            return a41;
        },
    };
    return o56;
}
f27(v23, v18);
const v58 = f27(v23, v20);
f27(v23, f21);
const o63 = {
    __proto__: v23,
};
const v64 = v58.b;
v64[0] = v64;
var h = v64;
try {
    function f66() {
        return f66;
    }
} finally {
}
const v67 = new Uint8ClampedArray(Uint8ClampedArray, Uint8ClampedArray);
v67[Symbol.toPrimitive] = f27;
const v72 = v67 & -2;
v25++;
Math.acosh(v72);
