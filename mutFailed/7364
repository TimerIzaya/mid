class C3 {
    static ["fromEntries"] = 7.206141708531376;
    b;
    #a = 1000000.0;
    ["fromEntries"] = "fromEntries";
    #b;
    static p(a5, a6) {
        const o9 = {
            "maxByteLength": 3022107412,
        };
        const v11 = new ArrayBuffer(8, o9);
        new Uint16Array(v11);
        return 3022107412;
    }
}
new C3();
new C3();
new C3();
new Float64Array(3722);
new BigInt64Array(186);
new Int16Array(3598);
function f28(a29, a30, a31, a32) {
    return a29;
}
const v33 = f28();
-128 / -128;
[-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v38 = [601759695];
function f39(a40, a41, a42, a43) {
    a41 * a41;
    a42 == a42;
    arguments[2] = arguments;
    arguments.toString(v38, -128);
    function f48() {
        ("Vre").toLocaleUpperCase;
        ("Vre").fixed();
        const o57 = {
            "c": v38,
            valueOf(a55, a56) {
            },
            "e": -268435456,
        };
        const v58 = o57.valueOf();
        v58 * v58;
    }
    Int8Array.a = Int8Array;
    new Int8Array();
    a41.buffer;
    %OptimizeFunctionOnNextCall(a40);
    ("find").strike();
}
%PrepareFunctionForOptimization(f39);
const v65 = f39();
%OptimizeFunctionOnNextCall(f39);
f39(v65, f39, -128, v33);
