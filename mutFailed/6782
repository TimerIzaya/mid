function f0() {
}
let v2 = gc;
v2("-36013");
const v5 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v6 = [601759695];
const v7 = [1073741824,1073741823,1376142744,1073741825];
function f9(a10, a11, a12, a13) {
    function f15() {
        const o22 = {
            "e": -4294967295,
            ...v5,
            ..."Vre",
            "c": v7,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a20, a21) {
                return "-1073741824";
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            5: -4294967295,
            6: -268435456,
        };
    }
    f15();
    %OptimizeFunctionOnNextCall(f15);
    let v25;
    try { v25 = v7["find"](..."find", a13, ...v6, ...v7, ...522675525n); } catch (e) {}
    v25 <= a12;
    return arguments;
}
const v32 = [-7,-2,7,907432713,7,9007199254740990,-369034338];
const v33 = [10];
const v34 = [5,30738,-54240,-65535,-886298596,-62616,9007199254740992,-64965,-65537];
function F35(a37, a38, a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v33;
        "size" && "boolean";
        class C44 {
        }
        new C44();
    } catch(e46) {
    }
    try {
        this.h = a40;
    } catch(e47) {
        function f48(a49) {
            return a49;
        }
        class C50 extends f48 {
            static [this] = "wBL";
            #d = 512n;
        }
    }
    try {
        this.a = f0;
    } catch(e51) {
    }
}
new F35(v34, v32, -128n, "wBL");
const v53 = new F35(v34, v33, 512n, "wBL");
new F35(v53, -31658n, -31658n, "wBL");
function f56(a57) {
    v2 = f9;
    const t67 = [-936145422,536870912,127,257,-36772,-15984,2];
    t67.length = 6;
    return v32;
}
Object.defineProperty(Float64Array, Symbol.toPrimitive, { writable: true, configurable: true, enumerable: true, value: f56 });
Float64Array.toString = f0;
URIError(Float64Array);
