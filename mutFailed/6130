function f0() {
    const o10 = {
        "b": "e",
        "h": "boolean",
        "a": "e",
        __proto__: "boolean",
        ..."boolean",
        set c(a5) {
            try {
                this.valueOf = a5;
            } catch(e6) {
            }
        },
        "c": "boolean",
    };
    return o10;
}
const v11 = f0();
f0();
const v13 = f0();
const v16 = new Array(10);
[-3.0];
const v18 = [2.0,-2.8704549365094877e+306,-2.2250738585072014e-308,1.0,608643.4360038617,-2.094182692329145];
const v19 = [0.0,5.0,0.21244985054039434,-Infinity,1000.0,-13795.189123376505,-596.5219876350774,-5.115047460327824e+307,-218.38299502559312,152.53206447771117];
/xyz{0,1}*/gvims;
/[^123](?:ab)?xyz{1,}?/vims;
/(a\scLs(\2)(\1)[\ca])/vmy;
function f23(a24, a25, a26, a27) {
    const o45 = {
        11: v13,
        [f23](a29, a30, a31) {
            try {
                super.p(a29);
            } catch(e33) {
            }
            Symbol.iterator;
            const o44 = {
                [Symbol]() {
                    let v37 = 10;
                    const o43 = {
                        next() {
                            v37--;
                            const v41 = v37 == 0;
                            const o42 = {
                                "done": v41,
                                "value": v37,
                            };
                            return o42;
                        },
                    };
                    return o43;
                },
            };
            return v19;
        },
    };
    return o45;
}
const v46 = f23(v18, f23, v13, v13);
f23(v46, v16, f23(v46, v46, 10, v11), v11);
function f49() {
}
function f50() {
    const o74 = {
        "b": f49,
        [f49]: f49,
        valueOf() {
            let v53 = -(-1e-15);
            v53--;
            const t68 = /a\Sc?/giy;
            t68.valueOf = f49;
            try {
                f49();
            } catch(e57) {
                Symbol("bZ");
                const v61 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
                class C62 {
                    constructor(a64, a65, a66, a67) {
                        const v68 = this?.constructor;
                        try { new v68(v61, a66, a66); } catch (e) {}
                        a65 >>> a65;
                        0.061410412759498656 >>> 0.061410412759498656;
                    }
                }
            }
            try {
                this.valueOf = f49;
            } catch(e73) {
            }
            return f49;
        },
    };
    return o74;
}
f50();
const v76 = f50();
const v77 = v76?.b;
try { new v77(); } catch (e) {}
new Uint8Array(268435440);
function F82() {
    if (!new.target) { throw 'must be called with new'; }
}
class C84 extends F82 {
}
Date[-22872n] = Date;
const v88 = ("function").length;
const v89 = f50();
function F90(a92, a93) {
    if (!new.target) { throw 'must be called with new'; }
    const v94 = this?.constructor;
    try { new v94(a92, a92); } catch (e) {}
    new Uint16Array(v88);
    const v98 = [];
    const o99 = {
        ...v98,
    };
    try {
        this.b = a93;
    } catch(e100) {
    }
    try {
        this.c = a92;
    } catch(e101) {
    }
}
const v102 = new F90(v89, v89);
new F90(v76, v102);
new F90(v89, v88);
-6n * -6n;
function f110(a111, a112) {
    Math.atan2(Math, f110);
    return f110;
}
new Promise(f110);
1713234876 === 1713234876;
function f119(a120, a121) {
}
f119();
f119(-1748, 1713234876);
function F124(a126, a127) {
    if (!new.target) { throw 'must be called with new'; }
    const v128 = this.constructor;
    v128.f = v128;
    function f132() {
        return f132;
    }
}
