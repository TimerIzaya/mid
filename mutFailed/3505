const v0 = [512,-15,128,1000,-36373,536870887];
const v1 = [268435441,-12,-9223372036854775807,15,-536870912];
const v2 = [-128,-7480,65535,-1478832433,1756482771];
const v3 = [v1,v2,v2,v2,v0];
const v4 = [v0,v1,v3,v3,v3];
const v5 = [v4];
class C6 {
    static n(a8, a9, a10, a11) {
        a8[a10] = a8;
        v1 == v2 ? v1 : v3;
        return v0;
    }
    static [v5];
    static b;
    d;
    2 = v5;
    static #b = v1;
}
new C6();
const v15 = new C6();
const v16 = new C6();
const v17 = [v16,v4,v16];
const v18 = [v17,v15];
[v18,v18,v17,v1];
function F20() {
    if (!new.target) { throw 'must be called with new'; }
    const v22 = [-5.0,-4.0,-1.7976931348623157e+308,-897.6003446951657,-1000000.0,1.8928166106024224e+306,-2.0,-1000000000000.0];
    function F23(a25, a26, a27, a28) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v29 = new this(v22, F20, v22, F23);
    const v31 = [F20,F20,F20,F23];
    Reflect.apply(v22.indexOf, v29, v31);
}
new v15();
