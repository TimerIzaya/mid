class C3 {
    d = 91170.69452822255;
    valueOf(a5, a6) {
        this[512];
        let v8;
        try { v8 = a6(...91170.69452822255, a5, ...91170.69452822255, 91170.69452822255); } catch (e) {}
        for (let v9 = 0; v9 < 32; v9++) {
            v8["p" + v9] = v9;
        }
        a5.g %= v8;
        const v12 = !a6;
        let [] = "iterator";
        this[Symbol.iterator] = v12;
        return a5;
    }
    static h;
    static [-1.3930331002488592e+308];
    static #f;
    512;
}
const v15 = C3?.apply;
try { new v15(C3, "iterator"); } catch (e) {}
C3.g = C3;
const v17 = new C3();
const v18 = new C3();
v18[512];
const v20 = new C3();
try { v20.valueOf(v20, v20); } catch (e) {}
[["iterator",91170.69452822255,v18,[v20]],"iterator",-1.3930331002488592e+308,"iterator","iterator"];
const v25 = [2.2250738585072014e-308,-1.3879468076715202,2.220446049250313e-16];
try { v25.with(C3, C3); } catch (e) {}
v25[2] = v25;
const v27 = [-2.220446049250313e-16,2.05043641867886,-1.0807071439328775e+307];
try { v27.toReversed(); } catch (e) {}
const v29 = [1000000000.0,-3.0];
try { v29.with(v18, v18); } catch (e) {}
let v32;
try { v32 = ("8").anchor("8"); } catch (e) {}
const v35 = [];
try { v35.filter(v17); } catch (e) {}
-11 + -11;
-11 > -11;
Object.defineProperty("shift", "length", { configurable: true, enumerable: true, value: v29 });
let v47 = -2016623528 || -2016623528;
const v48 = Math.imul(v47, -2016623528);
v47++;
4294967296 >> 4294967296;
[Infinity];
let v52 = 0;
do {
    const v53 = -11 % v48;
    [v53];
    [v35];
    [v53,v32,v53];
    v52++;
} while (v52 < 0)
[479.1899563202203,122841.50659786374,0.6626859918996411,-1000000.0,-1000.0,252.15113272138615,-1e-15,1000.0,364253.4319654517,-9.899777269503376e+307];
[-1.0,1e-15,5.0,1000000.0];
const o64 = {
    "maxByteLength": 1468,
};
try { o64.propertyIsEnumerable("shift"); } catch (e) {}
2 << 2;
const v68 = new ArrayBuffer(2, o64);
const v70 = new Int8Array(v68);
const v71 = [-4096,13,16,6];
try { v71.pop(); } catch (e) {}
v71 + v70;
const v74 = [256,-268435456,7,-778010758,7,16,-65536];
try { v74.findLast(91170.69452822255); } catch (e) {}
const v76 = [10,-2,256,-4294967295,6,-34566,804990459,-256,-1831978218];
-65535 >>> -65535;
-65535 >>> -65535;
try {
const t0 = 1073741824;
t0(-65535, v76, 1073741824);
} catch (e) {}
do {
} while (0 < 0)
