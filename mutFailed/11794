const v0 = /\cA\xe2\x81\xa3/guims;
const v1 = /L?/gdisy;
const v2 = /(ab|cde)/gudmy;
let v3 = -929976049;
v3++;
let v5 = 46621;
4 === 4;
4 >>> 4;
class C10 {
    static {
        let v12;
        try { v12 = new this(); } catch (e) {}
        v12[4] = v12;
        const v13 = [this,this,v2,this,v0];
        let v14;
        try { v14 = v13.fill(v13); } catch (e) {}
        v14.g = v14;
        const v15 = [v13,v13,this,,];
        v15.g = v15;
        try { v15.findLast(4); } catch (e) {}
        [v0,v3,v15,v3,v13];
    }
    [4];
    static p(a19, a20) {
        a19 <<= 4;
        for (const v21 in v0) {
            this[a19] ^= a19;
            try {
                v0.__proto__ = v21;
            } catch(e22) {
            }
        }
        return a19;
    }
}
try { C10.apply(C10, v0); } catch (e) {}
try { new C10(); } catch (e) {}
const v25 = new C10();
v25[4] = v25;
const v26 = new C10();
v26[4];
v26[4] = v26;
const v28 = new C10();
v28[4];
class C30 {
    constructor(a32, a33) {
        a33.dotAll;
        const v35 = this?.constructor;
        v35.name = v35;
        try { new v35(undefined, v25); } catch (e) {}
        for (let v37 = 0; v37 < 34; v37++) {
            2 | 2;
            try {
                this.length = 2;
            } catch(e40) {
            }
        }
    }
    #toString(a42, a43, a44) {
        super[a42] = v1;
        v5 = v3;
        const o48 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o48);
        return "sync";
    }
}
const v50 = new C30(v5, v0);
const v51 = new C30(v25, v26);
const v52 = new C30(v51, C10);
v52.length;
try { Uint8ClampedArray(Uint8ClampedArray, 4, v50); } catch (e) {}
new Uint8ClampedArray([1,17,[Uint8ClampedArray,Uint8ClampedArray]]);
