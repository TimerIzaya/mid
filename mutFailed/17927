function f0() {
    const o12 = {
        "g": "a",
        ["a"]: -1000000.0,
        [-1]: "a",
        3: -1000000.0,
        "d": -2000026483,
        "e": f0,
        "f": -2000026483,
        [-1000000.0]: -2000026483,
        ..."a",
        [-1000000.0]: -2000026483,
        1175960092: "a",
        toString(a5, a6) {
            /Rxyz{1,}/vdsy;
            /Da\fb\nc\rd\te\vf+/vdmy;
            /6/gdsy;
            let v10;
            try { v10 = ("a").trimRight(); } catch (e) {}
            v10?.[a5];
            return "a";
        },
    };
    return o12;
}
const v13 = f0();
const v14 = f0();
const v15 = f0();
function F16(a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    function f20(a21, a22) {
        function f23() {
            ("D")[0].substring().charCodeAt();
            return "D";
        }
        f23();
        f23();
        return f23;
    }
    this.toString = f20;
    try {
        this.g = a19;
    } catch(e30) {
    }
    try {
        this.h = a19;
    } catch(e31) {
    }
}
const v32 = new F16(v15, v13);
const v33 = new F16(v13, v15);
new F16(v13, v13);
class C35 {
    #toString(a37, a38, a39, a40) {
        let v36 = this;
        Math.floor(v36);
        Math.trunc(v36--);
        -65536 * v36;
        try { Math.acosh(a37); } catch (e) {}
        try {
            super.toString(a38);
        } catch(e49) {
        }
        return f0;
    }
    [v32] = v33;
    [v33] = v14;
}
new C35();
new C35();
new C35();
const v55 = new Uint32Array(127);
new Uint8Array(v55);
