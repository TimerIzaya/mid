const v2 = new Int32Array(2420);
const v7 = new Uint32Array(5);
new Set();
const o11 = {
};
Worker(o11);
v7[1] = 716884141;
class C13 {
}
new C13();
const o16 = {
    "b": 129,
};
const v18 = new Float64Array(0);
new Float64Array(15);
function f22(a23, a24, a25, a26) {
    const o41 = {
        "a": 15,
        1: 0,
        get h() {
            const v29 = new Date(Date);
            o11.f = v29;
            const v30 = [1354185297,-1187772013,1073741823,7,-13,8,-473031863,-1332151602];
            for (let v31 = 0; v31 < 500; v31++) {
                v31++;
                const o37 = {
                    [v30](a34, a35, a36) {
                    },
                    ...v31,
                };
            }
            return this;
        },
        set g(a39) {
        },
        "f": Int32Array,
        "g": a23,
        [v2]: a26,
        __proto__: v2,
        "b": v18,
        ...v2,
        "e": Int32Array,
        "c": 15,
    };
    return o41;
}
f22(15, 0, 0, Float64Array);
f22(0, 2420, 0, f22(15, 2420, 15, Float64Array));
class C48 {
    set h(a50) {
        eval();
    }
}
const v55 = [1342014474];
const v59 = [-536870912,12,65535,268435440,59916,438058862,-15,1073741823,-9007199254740990];
v59.push(v59);
function F61() {
    if (!new.target) { throw 'must be called with new'; }
}
const v63 = C13.constructor;
try { new v63(v59, F61, 2420); } catch (e) {}
function F66(a68, a69) {
    if (!new.target) { throw 'must be called with new'; }
    function F70(a72, a73) {
        if (!new.target) { throw 'must be called with new'; }
        const v74 = this.constructor;
        try { new v74(); } catch (e) {}
        a72 & a72;
    }
    new F70();
    a68 % a68;
    this.constructor;
}
new F66(479072.8146426424, 479072.8146426424);
const v85 = new WeakMap();
function f86(a87, a88) {
    const v89 = [v85];
    v85.set(v89, v89);
}
const v98 = new Float32Array(Float32Array);
const v99 = [1073741824,1073741823,1376142744,1073741825];
function f100(a101, a102) {
    return v98;
}
f100(v99, v98);
gc();
Array(3398);
function f122(a123) {
    function f125(a126) {
        a123 ||= -47530;
        class C129 {
            static ["-2"];
        }
        ("c").toUpperCase();
    }
    this.onmessage = f125;
    6 !== v55 ? 6 : v55;
    return Uint32Array;
}
function f145(a146, a147, a148, a149) {
    const o150 = {
        "e": a147,
        [a148]: 1000,
    };
    return f145;
}
f145(-19647, -19647);
