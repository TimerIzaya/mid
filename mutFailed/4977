function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try { this["n"](); } catch (e) {}
    const v4 = [39049,-2147483647,9007199254740991,30221,268435456,-2147483647,41987];
    const v5 = [268435440,49273,-15,214837996,-12,65536,1291301446,-65535];
    try { v5.concat(v4); } catch (e) {}
    function f7() {
        const o21 = {
            toString(a9, a10) {
                function F11(a13, a14, a15, a16) {
                    if (!new.target) { throw 'must be called with new'; }
                    try {
                        this.f |= a10;
                        a10.c;
                    } catch(e18) {
                        e18.stack;
                        Object.defineProperty(a9, 0, { writable: true, get: f7 });
                    }
                }
                new F11(this, a9, this, f7);
                return F11;
            },
        };
        return o21;
    }
    f7();
    Math.decodeURIComponent([-2.216170140955498,-2.2250738585072014e-308,-643865.3403199288,NaN]);
    const v29 = new Int16Array(2);
    v29.lastIndexOf(1.8023018568192065e+307);
    Math.atan2(1e-15, 536870887);
    try {
        this.f = 9007199254740991;
    } catch(e35) {
    }
    try {
        this.h = 9007199254740991;
    } catch(e36) {
    }
    try {
        this.d = 9007199254740991;
    } catch(e37) {
    }
}
for (const v38 of F0) {
}
function F40(a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    const v44 = this.constructor;
    try { new v44(); } catch (e) {}
    this.c = Float32Array;
}
new F0();
new F0();
new F0();
([Int32Array,Int32Array,Int32Array,Int32Array]).length;
function f55(a56) {
    const o57 = {
        3677: -128n,
    };
    return o57;
}
f55(-1024n);
new Float32Array(795);
Math.log2(65536 | "undefined");
new Int8Array(6);
new Uint32Array(1024);
new Float64Array(10);
class C78 {
    constructor(a80, a81, a82) {
        function f83(a84, a85, a86) {
            do {
            } while ((() => {
                    const v90 = 0 < 7;
                    Int16Array(a82);
                    return v90;
                })())
            f83(0.6683462416314783, a81, 256);
            return C78;
        }
    }
}
new Int16Array(253);
new BigUint64Array(116);
function f102() {
    const o110 = {
        "d": 268435440,
        "a": 4.0,
        __proto__: "cJ",
        "f": "cJ",
        ..."cJ",
        8: f102,
        "g": 268435440,
        "e": f102,
        "h": "cJ",
        valueOf(a107) {
            const o108 = {
                __proto__: this,
                2261555780: "cJ",
            };
            super.a;
            return this;
        },
        "c": "cJ",
    };
}
f102();
/a\fb\nc\rd\te\vf/gvms;
const o113 = {
};
new Float64Array(216);
const v121 = new Uint8Array();
const v123 = new Uint32Array();
function f124(a125, a126, a127, a128) {
    a125.g = a125;
    a127 % a127;
    const o133 = {
        "b": a125,
        ...v121,
        n(a131, a132) {
            v123[a125] = v123;
            return Uint8Array;
        },
    };
    return Uint8Array;
}
f124(Uint8Array);
Reflect.construct(Int8Array, []);
