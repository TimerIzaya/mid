class C3 {
    static 1748820074;
    #c;
    static {
        this.length = this;
        this[1748820074];
        try {
            const t7 = "boolean";
            t7.length = 3396953558;
        } catch(e7) {
        }
    }
    #g = 7;
    static 1 = "boolean";
    static #d;
    16;
}
const v8 = C3.name;
try { v8.toWellFormed(); } catch (e) {}
C3.length = C3;
const v10 = new C3();
v10[16] = v10;
v10[16] = v10;
const v11 = new C3();
v11[16] = v11;
v11[16];
const v13 = new C3();
v13[16] = v13;
64 * 64;
Uint16Array.BYTES_PER_ELEMENT = Uint16Array;
new Uint16Array(64);
12 == 12;
new Uint16Array(12);
const v23 = 256 !== 256;
v23 && v23;
const v26 = Uint32Array.name;
v26[0] = v26;
try { Uint32Array.propertyIsEnumerable(7); } catch (e) {}
const v28 = new Uint32Array(256);
function F30() {
    if (!new.target) { throw 'must be called with new'; }
    const v32 = this?.constructor;
    try { new v32(); } catch (e) {}
}
try { F30.toString(); } catch (e) {}
try { new F30(); } catch (e) {}
const v36 = new F30();
const v37 = new F30();
const v38 = v37?.constructor;
let v39;
try { v39 = new v38(); } catch (e) {}
v39.d = v39;
const v40 = new F30();
v40.length = v40;
const v41 = [v37];
v41[0];
const v43 = [v40,v37,v40,v40];
[v37,F30,v43,v43,v41];
[-6];
const v46 = [15,1000,456510946,268435439,-4096,-1621925631,-536870912,4294967295,127,768050783];
const v47 = [-30837,-2147483647,11,14];
try { v47.map(1000000.0); } catch (e) {}
const v51 = new Uint32Array(1000);
try { v51.values(); } catch (e) {}
v51.BYTES_PER_ELEMENT;
154 - 154;
const v57 = new BigUint64Array(154);
v57[76];
~134;
try { new Uint8Array(v46, v57, v57); } catch (e) {}
new Uint8Array(134);
const v64 = delete v41?.length;
v64 && v64;
try { v64["cbrt"](v51, Uint32Array, v37, v40, v64); } catch (e) {}
const o68 = {
};
o68.g = o68;
new Proxy(Uint8Array, o68);
for (let v71 = 0; v71 < 5; v71++) {
}
3.0 * 3.0;
0.0519480377224133 < 0.0519480377224133;
const v77 = v36?.constructor;
const v78 = v77?.constructor;
try { new v78(v26); } catch (e) {}
let v80;
try { v80 = new v77(v28); } catch (e) {}
v80.a = v80;
~(-9223372036854775807 - -9223372036854775807);
function f86() {
    return 3.0;
}
f86.arguments = f86;
const v87 = f86?.constructor;
v87.d = v87;
v87.g = v87;
let v88;
try { v88 = new v87(f86); } catch (e) {}
v88.arguments;
const v90 = [1000000.0,1000000.0,1000000.0];
class C91 extends f86 {
    [-1] = v41;
    static get c() {
    }
    m(a94) {
    }
    set e(a96) {
    }
    static get h() {
    }
}
C91.c = C91;
C91.prototype = C91;
64 * 64;
Uint8ClampedArray.e = Uint8ClampedArray;
let v107;
try { v107 = new Uint8ClampedArray(v90, 7, 64); } catch (e) {}
v107[1];
const v109 = v107[2];
v109 >>> v109;
945 - 945;
let v114 = 255;
v114++;
let v118;
try { v118 = Int32Array.bind(-9223372036854775807); } catch (e) {}
v118.name = v118;
try { v118.call(Proxy); } catch (e) {}
let v120 = 2;
v120++;
-1.5286188982640463e+308 + -1.5286188982640463e+308;
257 + 257;
Int32Array.a = Int32Array;
let v129;
try { v129 = Int32Array.bind(v37); } catch (e) {}
try { v129(v10, Uint16Array, BigUint64Array); } catch (e) {}
~-206.79565552697056;
352693014 >> 352693014;
const v135 = 352693014 >> 352693014;
v135 * v135;
const v137 = 352693014 >>> 352693014;
v137 >>> v137;
