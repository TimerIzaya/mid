class C3 {
    toString(a5) {
        class C6 {
            #d;
            static 25;
        }
        new C6();
        const v8 = new C6();
        new C6();
        return v8;
    }
    #e;
    e = "7wgVv";
    #h;
    static #a;
}
const v10 = new C3();
const v11 = new C3();
const v12 = new C3();
function f13(a14, a15, a16) {
    const o21 = {
        6: a14,
        ...v11,
        "c": "p",
        5: a16,
        "e": v12,
        9: C3,
        "execution": "p",
        9: v11,
        [a16](a18, a19, a20) {
            switch (f13) {
                default:
                    break;
            }
        },
        [v12]: v11,
        "a": a16,
        ...a15,
        "d": "p",
        "g": v12,
        "f": C3,
        "h": v12,
        [a16]: "p",
    };
    return o21;
}
const v22 = f13("p", C3, "toString");
function f23(a24, a25) {
    a24(f23);
    return a25;
}
const o32 = {
    ["536870889"]: "toString",
    set e(a30) {
    },
    get e() {
        return "536870889";
    },
};
f13("p", v12, "toString");
f13("p", v10, "toString");
class C35 extends f13 {
    static #g;
    constructor(a37, a38) {
        super(a37, v10, "7wgVv");
        %VerifyType(this);
        this.e;
        [1000,512,-9007199254740991,-34940,268435456,-1,-983638451,-32555,1980491765,-1];
        [-13,-65536,54863,2147483647,10000,1370204959,6,8];
        [9007199254740991,2147483647,9,-18657,4,-7,1024,10,-998256264];
    }
    static #valueOf(a44, a45) {
        const v46 = "p" - this;
        [this,"toString","7wgVv",v46];
        [["p","toString",v22,v46,v46],this,v11,v11,v12];
        return FinalizationRegistry;
    }
}
function F51(a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
}
function f55() {
}
const v56 = /(?:a*)+q(?<a>.)/guds;
v56.constructor = f55;
function f57(a58) {
    const v59 = a58.constructor;
    new Uint8ClampedArray(1000);
    try { v59(a58, f55); } catch (e) {}
    class C64 {
    }
    return f57;
}
for (let i67 = 0, i68 = 10; i67 < i68; i68--) {
    for (let v75 = 0; v75 < 50; v75++) {
        f57(v56);
    }
}
const v77 = new C35(C3, v11);
new C35(v77, v12);
new C35(v10, v77);
const v81 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
for (let v82 = 0; v82 < 25; v82++) {
    v81["p" + v82] = v82;
}
const v86 = [601759695];
const v87 = [1073741824,1073741823,1376142744,1073741825];
function f88(a89, a90, a91, a92) {
    function f93() {
        let v96 = Float64Array;
        v96 = a90;
        const v97 = [-536870912,12,65535,268435440,59916,438058862,-15,1073741823,-9007199254740990];
        v97.push(v97);
        function f99(a100, a101, a102, a103) {
            arguments[4] = arguments;
            return a102;
        }
        v81.length;
        try {
            v87.forEach();
        } catch(e107) {
        }
        Symbol.toPrimitive;
        const o114 = {
            toString(a111, a112) {
                return a92 && v96;
            },
        };
        const o115 = {
        };
        new Proxy(Uint8ClampedArray, o115);
        o114[9] = a89;
        const o123 = {
            [-4294967297n](a119, a120, a121, a122) {
            },
            ...v86,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            5: -4294967295,
        };
        return f88;
    }
    f93();
    %OptimizeFunctionOnNextCall(f93);
    return -4294967297n;
}
for (let v125 = 0; v125 < 10; v125++) {
    f88();
}
%OptimizeFunctionOnNextCall(f88);
f88(v86, v86, v81, v81);
