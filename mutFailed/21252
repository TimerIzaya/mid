const v2 = new Array(213);
const v9 = [723200.4184824808,-1000.0,-523437.54204506474,-964793.6675249395];
let [,v10,...v11] = v9;
v9[6] = [-1000000.0,771279.5641904315,0.0,8.299995604235331,6.625300935335886,-820.4949035918538,-602.5256799896665,0.6342705996691437,Infinity];
function f13() {
    for (const v17 of Array(4087)) {
    }
    return 4087;
}
f13();
function f19(a20, a21, a22, a23) {
    const o30 = {
        "f": -525313.8293104102,
        [-8.743991035045745e+307]: a21,
        get a() {
            const v26 = v2["sort"](Array);
            try { ("sort").replace(a22, v26); } catch (e) {}
            v2[Symbol.asyncIterator] = v26;
            return -8.743991035045745e+307;
        },
    };
    return o30;
}
function f31(a32, a33, a34, a35) {
    arguments[1] = arguments;
    const o40 = {
    };
    o40[10] = o40;
    arguments[10] = o40;
    return f31;
}
const v41 = f19(-525313.8293104102, -525313.8293104102, -8.743991035045745e+307, 0.20765093026349646);
f19(-525313.8293104102, -525313.8293104102, v41, -525313.8293104102);
f19(-525313.8293104102, 0.020326342087310545, v41, 567075.1257055325);
[-9223372036854775808,2067924475,-536870912,4294967296,46528,-13,2044244347,1024,2243,1073741823];
const v47 = [1e-15,-1e-15,0.047987872404069876,-1e-15,3.0,-1.0,5.0];
/[^1u]/ud;
class C50 extends v10 {
    constructor(a52, a53, a54, a55) {
        super();
        function f56(a57) {
            let v60 = 1511;
            let v61 = v60 - a54;
            typeof 0;
            v60 === v60;
            const v66 = v60++;
            7 < 7;
            v61 = -8.743991035045745e+307;
            this < 10;
            const v74 = new Uint16Array(a54);
            v74.set([-2038832922,-14]);
            const v86 = new Float64Array(127);
            gc();
            const o91 = {
            };
            v86[127] = v66;
            function f92(a93, a94) {
                a94(f92);
                return f92;
            }
            function f96() {
                return f96;
            }
            try {
            } catch(e97) {
                function F98(a100, a101, a102, a103) {
                    if (!new.target) { throw 'must be called with new'; }
                }
                new F98(F98, 8, 127);
                const v107 = new Int8Array();
                for (const v108 of e97) {
                    v108[1];
                    new Uint8Array(-1876875593);
                    for (let v112 = 0; v112 < 5; v112++) {
                        function f113() {
                            const v115 = new Uint8ClampedArray();
                            v115[2327] = v115;
                            return Uint8ClampedArray;
                        }
                        f113();
                        %OptimizeFunctionOnNextCall(f113);
                    }
                    let [,,,...v117] = v107;
                    const o118 = {
                    };
                    const o119 = {
                    };
                }
            }
            return 52235;
        }
        const o122 = {
            "type": "function",
        };
        new Worker(f56, v11);
    }
}
new C50(Int16Array, C50, v47, Int16Array);
