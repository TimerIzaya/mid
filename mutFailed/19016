const v0 = [1e-15,0.10356094534306803,-2.2250738585072014e-308,1.7976931348623157e+308,-2.0,1.2057929540116166e+308,-9.359865969651278,1e-15];
[1e-15,620011.9416299218,5.0,-2.220446049250313e-16];
function f2(a3, a4, a5, a6) {
    try { a4(); } catch (e) {}
    const v9 = undefined >> undefined;
    const v11 = new Set();
    const v12 = v11.add();
    const v15 = typeof v9 === "symbol";
    return [v12,v15,v15];
}
const v17 = [1000.0,Infinity,1000000000000.0,0.0,NaN];
2540 <= 2540;
const v21 = new Uint8ClampedArray(2540);
1443 ** 1443;
const v25 = new Int16Array(1443);
try { Uint16Array(1443, v17, v25); } catch (e) {}
const v29 = new Uint16Array(127);
const v30 = [v29,v21,Uint8ClampedArray,v0,v17];
978160.5153787523 + 978160.5153787523;
const v34 = new WeakRef(978160.5153787523);
try { v34.toTimeString(); } catch (e) {}
function F36() {
    if (!new.target) { throw 'must be called with new'; }
}
try { F36.bind(Int16Array); } catch (e) {}
let v39 = "string";
class C40 extends F36 {
    set h(a42) {
        ({"h":v39,} = this);
    }
}
[1443,v29];
[v25];
const v45 = [-268435456,-9007199254740990,11,-25356,-536870912,4294967296,1520296454];
function f46(a47, a48) {
    const o49 = {
        __proto__: v45,
    };
    try { o49.pop(); } catch (e) {}
    return o49;
}
const v51 = f46();
try { v51.flatMap(v30, v30, v51, v39); } catch (e) {}
v51.group(f46);
class C54 {
}
C54.name = C54;
class C55 extends C54 {
}
function F56(a58) {
    if (!new.target) { throw 'must be called with new'; }
    const v59 = this?.constructor;
    try { new v59(); } catch (e) {}
}
class C61 extends F56 {
}
const v62 = new C61();
v62.constructor;
