class C3 {
    ["536870912"];
    constructor(a5) {
        function f6(a7, a8) {
            function F9() {
                if (!new.target) { throw 'must be called with new'; }
                class C11 {
                }
                for (let i14 = 0, i15 = 10;
                    i14++, i14 < i15;
                    (() => {
                        const v20 = [601759695];
                        const v21 = [1073741824,1073741823,1376142744,1073741825];
                        const v23 = Array?.constructor;
                        try { v23(); } catch (e) {}
                        for (const v27 of Array(4087)) {
                        }
                        function f28(a29, a30, a31, a32) {
                            a32 - a32;
                            function f34() {
                                return a29;
                            }
                            function f35(a36, a37) {
                                return a36;
                            }
                            try { f35(); } catch (e) {}
                            const v39 = f35(v21, C11);
                            try { v39.toString(); } catch (e) {}
                            try { v21["find"](..."find", a32, ...v20, ...v21); } catch (e) {}
                            return C11;
                        }
                        for (let v43 = 0; v43 < 10; v43++) {
                            f28(v43, f28, i14);
                        }
                    })()) {
                }
            }
            new F9();
            return -2;
        }
        this[Symbol.toPrimitive] = f6;
        function f50(a51, a52) {
            try { C3(f6, a51, this, a51); } catch (e) {}
            C3?.[-2];
            return a52;
        }
        a5.toString = f50;
        try {
            super.p(0.9428832685328006, "536870912", a5, this);
        } catch(e56) {
        }
    }
    [-2];
    static [-2];
    #b;
    [0.9428832685328006] = 0.9428832685328006;
}
const v57 = new C3(C3);
const v58 = new C3(-2);
function f59(a60, a61) {
    new Int32Array(56885);
    return a61;
}
v58[Symbol.toPrimitive] = f59;
const v67 = new C3(0.9428832685328006);
function f68(a69, a70) {
    const o71 = {
        "f": a69,
        ...v58,
        3202109936: a69,
        ...v57,
        [0.9428832685328006]: -2,
        __proto__: v67,
        "g": "536870912",
        ...v57,
        [a70]: "536870912",
        "b": "536870912",
        ...a69,
    };
    return o71;
}
f68(C3, C3);
f68(v57, v58);
f68("536870912", v67);
const v77 = new Uint16Array(2785);
v77.fill();
