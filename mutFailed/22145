const v2 = new BigInt64Array(4);
new Uint16Array(9);
161 << 161;
Int8Array[1] = Uint16Array;
try { new Int8Array(Int8Array, v2, 161); } catch (e) {}
const v10 = new Int8Array(161);
v10[129];
-128 ^ -128;
[-3.0,952.1054171388887,404324.27216332033,-1000000000000.0,1.7976931348623157e+308,-2.0,Infinity,2.0];
function f17(a18, a19) {
    for (let v21 in this) {
        v21 -= v21;
        try { new a18(...v21, -6.441557670402009, v21); } catch (e) {}
    }
}
Worker.g = Worker;
try { ("function").big(); } catch (e) {}
const v27 = [];
try { v27.findLast(161); } catch (e) {}
const o29 = {
    "type": "function",
};
o29.arguments = Worker;
o29.e = o29;
const v30 = new Worker(f17, o29);
try { v30.terminateAndWait(); } catch (e) {}
-(-1000000000000.0 % -1000000000000.0);
const o35 = {
};
o35.h = o35;
207 & 207;
let v39 = 10;
v39--;
for (;
    (() => {
        let v41 = v39--;
        const v42 = v41++;
        v42 + v42;
        return v41;
    })();
    ) {
    for (let v44 = 0; v44 < 32; v44++) {
        v44 - v44;
        ("p" + v44).length;
    }
}
const v49 = [-6.695596969959072];
v49.constructor = f17;
let v50;
try { v50 = v49.concat(v39); } catch (e) {}
try { v50.slice("function", v50); } catch (e) {}
let v53 = 958;
v53--;
[0.03568519099872258];
function f56(a57, a58, a59, a60) {
}
class C63 {
    #d;
}
const v64 = C63.name;
try { v64.padStart(4); } catch (e) {}
const v66 = new C63();
const v67 = v66?.constructor;
try { new v67(); } catch (e) {}
const v69 = v66?.constructor;
try { new v69(); } catch (e) {}
const o71 = {
    __proto__: v66,
    ...v66,
};
const v72 = o71?.__defineGetter__;
try { new v72(v53, v27); } catch (e) {}
