let v3 = 105;
new Uint8Array(v3);
v3++;
const v7 = [];
function f8() {
    const o12 = {
        toString() {
            super[this];
        },
        ...v7,
        n() {
            return this;
        },
    };
    try { o12.n(); } catch (e) {}
    return v7;
}
f8();
f8();
f8();
class C17 {
    get d() {
        const v19 = [this,this,this,1820583285n];
        const v20 = [-2147483647n,v19,v19,v19];
        const o22 = {
            "arguments": v20,
            "type": "function",
        };
        [v20,v20,v20];
        return 1820583285n;
    }
    constructor(a25) {
        Math.sin(-268435456);
        function F30() {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v32 = new F30();
        class C33 extends F30 {
            [v32];
        }
        new C33();
        const v38 = 1e-15 | -24552778;
        a25--;
        -v38;
        Math.log1p(a25);
        v38 + -24552778;
        a25++;
        !a25;
    }
}
new C17(16n);
new C17(-2147483647n);
const v47 = new C17(1820583285n);
const v49 = new Date();
const v50 = [16n,-2147483647n,16n,v47,-2147483647n];
[-2147483647n];
[v49,v50,Date];
function f53(a54, a55) {
    const v56 = [-8617,3];
    function f57(a58, a59, a60, a61) {
        const o62 = {
            "h": a58,
            "b": v56,
        };
        return o62;
    }
    a55.apply();
    return a54;
}
const v65 = new Promise(f53);
v65.then(f53);
for (let v67 = 0; v67 < 5; v67++) {
    const o69 = {
    };
    gc(o69);
}
