function f0() {
    let v2 = "-9223372036854775807";
    const o9 = {
        [v2]: v2,
        get f() {
            try {
                v2.g = -5.712914243501257;
            } catch(e5) {
            }
            v2 |= this;
            for (let v6 = 0; v6 < 32; v6++) {
                const t11 = -5.712914243501257;
                t11["p" + v6] = v6;
            }
            return v2;
        },
    };
    const v10 = o9 << "match";
    f0 === f0;
    o9.f ^= v10;
    const t20 = ("match").__proto__;
    t20[1478] = f0;
    return v2;
}
const v13 = f0();
f0();
f0();
const v19 = [-1024];
const v21 = [-1024,[-1024]];
const v27 = v21[512];
const v28 = v13[10000];
let v31 = 1.1285239928584463e+308;
Math.clz32(-4294967295);
--v31;
Math.cos(65535 % v13);
Math.tan(-4294967295);
-4294967295 / 65535;
const v38 = v21 >> v27;
try {
    v19.toString = v28;
} catch(e39) {
}
function F41(a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    const o50 = {
        [this]: -1,
        85: a43,
        "d": this,
        "f": v13,
        "a": v38,
        set d(a46) {
            this.cos = a46;
            for (let v47 = 0; v47 < 25; v47++) {
            }
            try { this["cos"](); } catch (e) {}
        },
    };
    class C51 {
        p(a53, a54) {
            this[this];
            return a43;
        }
        #d;
        constructor(a57) {
            o50.d = a57;
        }
    }
    new o50();
}
new F41();
