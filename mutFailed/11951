const v1 = [0.36865488864674667,-5.0,972.8964403791567];
function f2(a3, a4) {
    return v1;
}
const v7 = new BigUint64Array(255);
const v9 = v7.buffer.slice();
v9.slice(v9, -58442);
new Date();
const o17 = {
};
o17.__defineGetter__;
new Int16Array(5);
new BigInt64Array(3);
const v26 = Array(19793);
const v27 = [v26,v26,v26,v26,v26];
([v27,v27,v27])?.groupToMap;
this.fuck(this, this, this, this, this);
function f33(a34, a35, a36, a37) {
    return this;
}
new Uint16Array(185);
function f39() {
    for (const v41 of "-4294967295") {
    }
    ("getBigInt64").normalize();
    let v44 = 6;
    v44 % v44;
    v44--;
    return v44;
}
for (let v47 = 0; v47 < 5; v47++) {
    const v48 = Array();
    class C49 {
    }
    const v51 = [];
    class C52 {
        constructor(a54, a55) {
            const v56 = a54?.filter;
            try { new v56(); } catch (e) {}
            try { a55.find(C49); } catch (e) {}
            a55[2];
            const v60 = /Ia[a]/uims;
            try { v60.toString(); } catch (e) {}
            const v62 = /W(jy2)/udy;
            const v63 = v62?.toString;
            try { new v63(); } catch (e) {}
            v62.flags;
            const v66 = /(u4(?:a?)*)/gudimsy;
            const v69 = new Uint8Array(v66, C52);
            const v71 = new Uint32Array();
            function f72(a73, a74, a75, a76) {
                const o80 = {
                    ...v69,
                    n(a78, a79) {
                        v71[a73] = v71;
                    },
                };
                const v81 = o80.__defineSetter__;
                try { v81(v48, v66); } catch (e) {}
            }
            for (let v83 = 0; v83 < 500; v83++) {
                f72(Uint8Array, 2, v83);
            }
            for (let v85 = 0; v85 < 5; v85++) {
                v51["p" + v85] = v85;
                const o88 = {
                };
                o88.d = o88;
                const v90 = new Uint8ClampedArray(1000);
                v90.includes(undefined);
            }
        }
    }
    f39();
    %OptimizeFunctionOnNextCall(f39);
}
