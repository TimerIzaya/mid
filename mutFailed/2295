const v0 = [];
class C1 {
    m() {
        const v3 = v0[this];
        super.g;
        return v3;
    }
    static b;
    static 65535 = v0;
    536870887;
}
new C1();
const v9 = new C1();
let v10 = new v9();
class C11 extends C1 {
    static {
        try { this.n(this); } catch (e) {}
        [] = v0;
        v10 = this;
    }
    f;
    n(a15, a16) {
        try {
            this.m(a15, C1);
        } catch(e18) {
        }
        ("6Ct").normalize();
        return 536870889n;
    }
}
new C11();
new C11();
new C1();
function F36() {
    if (!new.target) { throw 'must be called with new'; }
    const v38 = this.constructor;
    try { new v38(); } catch (e) {}
    let v40;
    try { v40 = this.valueOf(); } catch (e) {}
    v40.length = v40;
    try {
    } catch(e41) {
    }
}
new F36();
new F36();
