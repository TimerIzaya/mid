let v0 = 12n;
const v5 = Symbol.toPrimitive;
function f6() {
    v0 *= v5;
    return Float64Array;
}
class C7 {
    n(a9, a10) {
        let v11;
        try { v11 = v0(127n); } catch (e) {}
        a10 ^= 127n;
        Object.defineProperty(this, "c", { writable: true, value: a9 });
        /(?<a>.)\k<a>?/vdimsy["test"]("test");
        function f15() {
        }
        class C16 {
            #m() {
                const v18 = this in this;
                const t17 = f15 % f15;
                t17();
                return v18;
            }
            static c;
            static set f(a22) {
                const v24 = Symbol.iterator;
                const o38 = {
                    [v24]() {
                        let v26 = 10;
                        Symbol.hasInstance.toString();
                        6.221456434799227e+306 << 6.221456434799227e+306;
                        const o37 = {
                            next() {
                                v26--;
                                const v35 = v26 == 0;
                                const o36 = {
                                    "done": v35,
                                    "value": v26,
                                };
                                return o36;
                            },
                        };
                        return o37;
                    },
                };
            }
        }
        const v39 = new v0();
        function F40(a42, a43, a44, a45) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.h = v39;
            } catch(e46) {
            }
            try {
                this.d = a45;
            } catch(e47) {
                const v49 = new Uint8Array();
                function f50(a51, a52, a53, a54) {
                    a51 / a51;
                    a52 < a52;
                    const o60 = {
                        "b": a51,
                        ...a53,
                        n(a58, a59) {
                            return this;
                        },
                    };
                    return o60;
                }
                for (let v61 = 0; v61 < 625; v61++) {
                    v11(f50, v61, v49, v61);
                }
            }
            try {
                const o68 = {
                    [7]: 9,
                    get g() {
                        return this;
                    },
                    set g(a67) {
                    },
                };
                this.e = a45;
            } catch(e69) {
            }
        }
        return v0;
    }
    constructor(a71) {
        class C72 {
            7;
            4259938026;
            o(a74, a75, a76, a77) {
                const o80 = {
                    "maxByteLength": -2,
                };
                new ArrayBuffer(536870912, o80);
            }
            static #g = this;
            2147483649;
        }
        this.d = C72;
        const v83 = new C72();
        for (let i = 0; i < 5; i++) {
            for (let v84 = 0; v84 < 5; v84++) {
                class C85 {
                }
                for (let v86 = 0; v86 < 5; v86++) {
                    v86 > v86;
                }
            }
        }
        v83[2147483649] = v83;
        new C72();
        const v90 = new Float32Array(Float32Array, Float32Array);
        for (let v91 = 0; v91 < 25; v91++) {
            function f92(a93, a94, a95, a96) {
                a93[0] = a93;
                a94 <= a94;
                const v99 = arguments?.__lookupGetter__;
                try { v99(v99, f92, a94); } catch (e) {}
                let v101 = -1073741824n;
                const v102 = v101--;
                function F103(a105, a106, a107, a108) {
                    if (!new.target) { throw 'must be called with new'; }
                    this.e = v102;
                }
                try { undefined(); } catch (e) {}
                return v91;
            }
            for (let v111 = 0; v111 < 10; v111++) {
                Float32Array(v90);
            }
        }
        new C72();
    }
}
C7.name = C7;
const v114 = new C7(127n);
new C7(127n);
new C7(-23250n);
[-2.833970713674729e+307,-4.0,1000000000.0,1.4156573464336976e+308,-2.220446049250313e-16];
[1.5251558733536783e+308,1.6226821698224612,1.5385715901579416e+308,-1.2532489458304813e+308];
[1.183091532292071e+308,-1e-15,-1.0,1.0];
const v120 = [-2147483647];
try {
    for (let v121 = 0; v121 < 50; v121++) {
        for (let v122 = 0; v122 < 25; v122++) {
            v114["p" + v122] = v122;
        }
    }
} catch(e125) {
}
v120[0];
[-2147483647,-1232327772];
[10000,-60861,-4,945819512,13,-9223372036854775808,7207,64,-204693421];
const t153 = "DaoN3";
t153[3] = "DaoN3";
0 !== 0;
function f133(a134, a135) {
    a135.startsWith(0, 8);
    return f133;
}
f133.a = f133;
%PrepareFunctionForOptimization(f133);
const v137 = f133();
v137.prototype;
%OptimizeFunctionOnNextCall(f133);
f133("DaoN3", v137);
