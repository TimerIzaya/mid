const v2 = new Uint8ClampedArray(89);
const v5 = new Uint32Array(3201);
Math.tanh();
Math.min();
new Uint8ClampedArray();
new Int16Array(2854);
const v16 = [2854,Uint8ClampedArray,v5,[v5,v2,Uint32Array,Int16Array,v5]];
[v16,v16,89,2854];
class C18 {
}
const v19 = new C18();
class C20 {
}
const v21 = [-1000.0,1000000000.0];
const v22 = [0.0,-605.6883350474525,-2.2250738585072014e-308,2.8064173070154015e+307,-0.0,NaN,-1.7976931348623157e+308,-1.7976931348623157e+308,1.1567619127528594,2.2250738585072014e-308];
function f26(a27, a28) {
    const o29 = {
        [33062n]: 8n,
        __proto__: v22,
        [37369]: a28,
        [a27]: a27,
        ...a27,
        5: v21,
        ...v21,
    };
    return o29;
}
const v30 = [v19];
class C31 {
    constructor(a33, a34, a35) {
        let v36 = 4294967296n;
        v36--;
        Number.isFinite(Number);
        const v40 = /(?:a*)+q(?<a>.)/guds;
        for (let i43 = 0, i44 = 10; i43 < i44; i44--) {
            v40.constructor.$9;
        }
        function f53(a54, a55, a56) {
            function f59() {
                return f59;
            }
            class C60 {
                constructor(a62, a63, a64) {
                    const v65 = this.byteLength;
                    const t44 = f59.constructor;
                    t44("string", "string", v65);
                }
            }
            v30.copyWithin();
            try {
                f53(a56, a55, 252859902);
            } catch(e70) {
            }
            const v71 = this >> 252859902;
            v71 - this;
            class C73 {
            }
            for (let v75 = 0; v75 < 5; v75++) {
                function f76() {
                    let v79 = Math.acosh(-14);
                    v79--;
                    const v81 = Math.atanh("Vre");
                    const v83 = ~(v81 >> v81);
                    return v83 != v83;
                }
                f76();
                %OptimizeFunctionOnNextCall(f76);
            }
            return -v71;
        }
        for (const v88 of v40()) {
        }
        function f89() {
            return f89;
        }
        new Uint16Array(f89);
        f53();
    }
}
class C93 extends C31 {
}
new C93();
new C31(C18, C93, C18);
