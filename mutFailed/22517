const v0 = [];
class C1 {
    n() {
        const v3 = this >= this;
        if (v3) {
            super[v3];
        } else {
        }
        return v0;
    }
    #c = v0;
    e = v0;
    a;
}
const v8 = new C1();
const v9 = new C1();
const v10 = new C1();
function f11() {
    return v10;
}
class C12 {
    static 239;
    #m(a14, a15, a16) {
        const v17 = v8[a15];
        try { v8.n(v9, v17, f11, a15, v8); } catch (e) {}
        try { new a15(this, v8, this, v0); } catch (e) {}
        super[v8] = f11;
        const v21 = Symbol.search;
        v0[v21] = v21;
        return a14 >> a14;
    }
    [v9] = f11;
    static get g() {
        for (let v24 = 0; v24 < 32; v24++) {
            this["p" + v24] = v24;
        }
        const v27 = [268435440,-3,268435441,-26162,-45042,-1073741824];
        [47305,-37572,3,36073,-14];
        [-24224,2,12,-9223372036854775808,2,13574,1073741824,1024];
        return v27;
    }
}
/(\u0060C^sxyz{93}+)/gvdims;
/1/umsy;
%VerifyType(/(?:ab){4,7}J(?<!)/udi);
const v33 = /(?:ab)+/gvdsy;
/Mi/i;
/b[]a/gvy;
new C12();
new C12();
new C12();
const v40 = v0.__proto__;
[v33];
const v42 = [C1,v33];
[v40,2147483649,C1,v42,v42];
const o47 = {
    "execution": "async",
    "type": "minor",
};
gc(o47);
new Array(0);
function f54() {
    const v57 = Symbol.iterator;
    Math[v57] = v57;
    return Symbol;
}
%PrepareFunctionForOptimization(f54);
f54();
%OptimizeFunctionOnNextCall(f54);
f54();
