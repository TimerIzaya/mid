function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = 9223372036854775807;
    } catch(e3) {
    }
    try {
        this.c = 9223372036854775807;
    } catch(e4) {
    }
    try {
        this.a = 9223372036854775807;
    } catch(e5) {
    }
}
new F0();
new F0();
const v8 = new F0();
const v9 = [1293.5929272708017,-4.0,-0.0,1000000000000.0,-0.08022013419049401,-2.2250738585072014e-308,2.220446049250313e-16,1.0934194864347546];
const v10 = [-4.0,-2.0,-2.0993447001001524,-1.0504751970908504e+308,0.9551286951244853,NaN,-4.3369053485786164e+307,3.0,NaN];
const v11 = [-Infinity,-1000000000000.0,-4.0,1.475041055584985e+307];
function f13() {
    return v8;
}
function f14(a15, a16) {
    const o31 = {
        "c": v9,
        "h": f13,
        [a16]: F0,
        p(a18, a19, a20, a21) {
            new Uint32Array(2341);
            new Int16Array(Uint32Array);
            const v30 = new Int16Array(15);
            return v30;
        },
    };
    return o31;
}
f14(v11, v9);
f14(v11, v10);
f14(v11, v10);
let v45 = 15;
v45--;
new Int16Array(v45);
new Uint8ClampedArray(6);
new Int16Array(3699);
"2147483649" == "2147483649";
class C59 {
    static #p(a61) {
        function f62(a63) {
            return a63;
        }
        class C64 extends f62 {
            static [-1] = 8;
            static [a61];
            static 268435441;
        }
        const v65 = [];
        const v67 = /[a-zA-Z0-9]/gvisy;
        const v68 = /abc?/gvmy;
        v68[-2] ^= v67;
        v68.exec("Q8F");
        const t61 = "Q8F";
        t61[2078209647] = v65;
        return a61;
    }
    [0.028957958839558873];
    static {
        for (let v74 = 0; v74 < 32; v74++) {
        }
    }
    static 2147483648 = 268435456;
    static #g;
    #a;
}
function f76() {
    const o78 = {
    };
    return gc(o78);
}
C59[Symbol.toPrimitive] = f76;
try { C59(); } catch (e) {}
const v83 = new C59();
v83.constructor = f76;
try { BigInt64Array(BigInt64Array); } catch (e) {}
function F87(a89) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a89;
}
const v90 = new F87(-2);
with (v90) {
    h = Uint16Array;
}
const v92 = v83?.constructor;
v92[Symbol.toPrimitive] = f76;
let v95;
try { v95 = new v92(); } catch (e) {}
const v96 = v95?.constructor;
try { new v96(); } catch (e) {}
const v98 = new C59();
let v99;
try { v99 = v98.propertyIsEnumerable(C59); } catch (e) {}
!v99;
new C59();
/[\11]/gm.flags;
/(?:a*)*/gudm;
const v105 = /a(?!bbb|bb)c/vi;
v105.toString = Symbol;
const v106 = v105?.toString;
try { new v106(); } catch (e) {}
[4096];
const o113 = {
    "execution": "async",
    "type": "minor",
};
~117;
Uint16Array[0] = v92;
const v116 = new Uint16Array(Uint16Array);
let v117 = v116[1];
v117--;
Int32Array.name;
new Int32Array(31);
let v125;
try { v125 = (22227).toString(); } catch (e) {}
try { v125.small(); } catch (e) {}
const v127 = new Uint32Array(128);
v127[72];
function f129() {
    3.4890473589784586e+307 > 3.4890473589784586e+307;
    let v132 = 1000000000000.0;
    v132--;
    257828.6336153492 - 257828.6336153492;
    -4294967296 >> -4294967296;
    class C139 {
        static #m(a141) {
        }
        constructor(a143) {
            function f144() {
                return 9007199254740992;
            }
            Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f144 });
            const v145 = this?.__defineSetter__;
            try { new v145(22227, 22227); } catch (e) {}
            new Float32Array();
            try { Uint16Array.apply(Uint16Array, "2147483649"); } catch (e) {}
            const v151 = new Uint16Array();
            const v152 = new Float32Array(v151, -4294967296, a143);
            v152.f = v152;
        }
    }
    const v153 = new C139(C139);
    v153.g = v153;
    const v154 = new C139(C139);
    v154.length = -4294967296;
    v154.length;
    const v156 = new C139(-4294967296);
    const v157 = [v156,C139];
    [257828.6336153492,v156,v153,v156,v157];
    const v159 = [v156];
    class C160 extends C139 {
        [v153];
        #n(a162, a163, a164, a165) {
            function f166() {
            }
        }
    }
    C160.name = C160;
    const v167 = new C160();
    class C169 extends v159.constructor {
    }
    try { v167.m(v157); } catch (e) {}
    const o173 = {
        "e": Uint16Array,
        o(a172) {
        },
        ...v132,
    };
    return Int32Array;
}
try { f129.bind(-7); } catch (e) {}
%PrepareFunctionForOptimization(f129);
f129();
f129();
%OptimizeFunctionOnNextCall(f129);
const v177 = v90();
v177.prototype = v177;
-4294967295 << -12;
