class C3 {
    ["dotAll"];
    static #valueOf(a5) {
        try { undefined(); } catch (e) {}
        return this;
    }
    constructor(a9, a10) {
        function f11() {
            function f12(a13) {
                ++a10;
                function F15() {
                    if (!new.target) { throw 'must be called with new'; }
                    const v17 = [-5.0,-4.0,-1.7976931348623157e+308,-897.6003446951657,-1000000.0,1.8928166106024224e+306,-2.0,-1000000000000.0];
                    function F18(a20, a21, a22, a23) {
                        if (!new.target) { throw 'must be called with new'; }
                    }
                    const v24 = new F18(v17, F15, v17, F18);
                    const v26 = [F15,F15,F15,F15];
                    Reflect.apply(v17.indexOf, v24, v26);
                }
                return "e";
            }
            return f12;
        }
        Object.defineProperty(this, Symbol.toPrimitive, { writable: true, enumerable: true, get: f11 });
        a9[3] = "dotAll";
        function f31() {
            function f32() {
                return f32;
            }
            return a9;
        }
        a10.toString = f31;
        this.dotAll;
        try { a9.strike(); } catch (e) {}
        super.a %= this;
        function f35(a36, a37) {
            a37[3];
            const o39 = {
                [a9]: this,
            };
            return o39;
        }
        const v40 = f35(a10, a9);
        v40.dotAll = v40;
        v40.dotAll;
        const v42 = f35("e", "e");
        v42.dotAll = v42;
        v42.dotAll;
        f35("wNzDt", a9);
    }
}
C3[3] = "e";
C3.name;
const v46 = new C3("dotAll", "wNzDt");
const v47 = v46?.constructor;
try { new v47(C3, C3); } catch (e) {}
const v49 = new C3("e", "dotAll");
v49.dotAll = v49;
const v50 = new C3("wNzDt", v49, "e");
[4,12,536870912,-3,-631255300,13641,536870912,4096];
const v52 = [-56430,9007199254740990,1000,129,8];
try { v52.findIndex(v50); } catch (e) {}
[-61018,536870912,268435456,434788056,0];
function f55() {
    return "e";
}
f55.a = f55;
/(x)(x)(x)\1/gvdim;
/eF/gudim.hasIndices;
/6a/isy;
Math.sin(-9007199254740991);
