new Map();
[9.442459061320782e+307,-112230.18093607284,-0.4618535238235406,-333.519746104207,-960714.5132005863];
[-1e-15,1.3361604876839294e+308,-1.6081906494282848e+308,1.0,-4.0];
[5.0,-1.7976931348623157e+308,0.7929587212003482,1.2980669931141255e+307,-2.0,-5.0,-0.05996179350580455,Infinity,1000000000000.0,5.0];
class C15 {
    static 3143;
    static ["-2"];
    #f = "-2";
    static #a;
    #c;
    #valueOf(a17, a18) {
        const v19 = a18 == a18;
        v19 ? a18 : a18;
        const v21 = ["-2",this,"setMonth",a17,"-2"];
        [v21,v21,this,this];
        [v19,"-2","4X",a17];
        return a17;
    }
    10 = "-2";
    #g = "-2";
}
new C15();
new C15();
new C15();
try { new WeakSet(); } catch (e) {}
new WeakSet();
-536870912 ^ -536870912;
[-256,-256,5,-9007199254740991,-128,1073741825,-11,-49255];
[35577,123452243,-2,65305,268435441,11,-58686];
const v36 = [1506147375,1598671956,64,-23009,-512929497,-1432178736,4];
try { v36.sort("-2"); } catch (e) {}
6 | 6;
function F45(a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    Number.isFinite(Number);
    const v51 = this.constructor;
    try { new v51(); } catch (e) {}
}
new F45();
const t39 = -4.0;
new t39();
class C56 {
    constructor(a58) {
        const v59 = this.constructor;
        v59.d = v59;
        try { new v59(); } catch (e) {}
        ("size").c;
        ("size").g;
        ("size").length;
        let v64 = Map?.[7];
        [...v64] = "size";
        /a\bc/vd;
    }
}
function f66(a67, a68, a69) {
}
const o70 = {
};
class C71 {
    static #n(a73) {
    }
}
new C71();
new C71();
let v76 = Int16Array;
try {
} catch(e77) {
}
v76 = v76;
