function f2(a3) {
    return f2;
}
class C4 {
}
try { C4.toString(); } catch (e) {}
class C7 {
    static m(a9, a10) {
        let v8 = this;
        for (let v13 = 0; v13 < 25; v13++) {
        }
        function f14() {
            function f15(a16, a17) {
                a17(f15);
                return f15;
            }
            new Promise(f15);
            return Promise;
        }
        ++v8;
        -v8;
        class C24 {
            constructor(a26, a27) {
                const v28 = this.constructor;
                try { new v28(a26); } catch (e) {}
                a26++;
                a27 <= a27;
                const v34 = Math.atan2(this, this);
                v34 / v34;
                16 % !this;
            }
            d = -7;
        }
        Math.atan2(a9, 257);
        return v8;
    }
    6 = "valueOf";
    static [-1.0877619742700777e+308];
}
try { C7(); } catch (e) {}
const v40 = new C7();
v40[6] = v40;
const v41 = new C7();
v41[6];
const v43 = new C7();
v43[6] = v43;
let v45;
try { v45 = ("function").trimLeft(); } catch (e) {}
try { v45.italics(); } catch (e) {}
function f47(a48, a49, a50) {
    return a50;
}
const v51 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
try { v51.map(v45); } catch (e) {}
function f53(a54, a55) {
    return f53;
}
const v57 = Symbol.toPrimitive;
Symbol.for(v57.description);
v51[v57] = f53;
const v61 = [3,-6,7268,-554513674,5,4294967295,861325878,17152,2147483647,5];
function f62(a63, a64, a65) {
    a63[7];
    a64[7] = a64;
    a64[8] = a64;
    const o67 = {
        __proto__: a65,
    };
    o67.h = o67;
    return a64;
}
f62(v61, v51)[9];
class C72 {
    static {
        const v74 = this?.constructor;
        v74.name = v74;
        try { new v74("asyncIterator"); } catch (e) {}
        this < this;
    }
    constructor(a78, a79) {
        for (let i = 0; i < 10; i++) {
            this[this];
        }
    }
}
