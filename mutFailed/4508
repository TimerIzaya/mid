function f0() {
}
function f1() {
    const o5 = {
        [f0]() {
            f0 = this != f0 ? this : f0;
            return this;
        },
        "d": f0,
        4: f0,
        "a": f0,
        "f": f0,
        "e": f0,
    };
    f0.g /= f1;
    try {
        f0.valueOf = f0;
    } catch(e7) {
    }
    return o5;
}
function f8(a9) {
    try { f0.toString(f0, a9, f1); } catch (e) {}
    return f1();
}
f1.valueOf = f8;
f1();
const v13 = f1();
const v14 = f1();
v14[4] = v14;
class C15 extends f1 {
    static get f() {
        v13 - f0;
        /[a-zA-Z0-9]/gdiy;
        /a[^a]A/gvdms;
        /t/guim;
        return f1;
    }
    4294967296 = f0;
    6;
    #d;
    static f = f0;
}
C15.length;
new C15();
new C15();
new C15();
let v25 = 127;
const v29 = new WeakMap();
try {
    v14.f = v29;
} catch(e30) {
}
v25--;
4096 + 4096;
-4294967297 >>> -4294967297;
try { ("k").normalize(); } catch (e) {}
f1();
%PrepareFunctionForOptimization(-10956);
f1();
f1();
%OptimizeMaglevOnNextCall(f1);
f1();
const o50 = {
    "f": "k",
    get f() {
        return this;
    },
};
