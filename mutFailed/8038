with (undefined) {
}
function f5(a6, a7, a8, a9) {
}
class C11 {
    static {
        for (let v13 = 0; v13 < 25; v13++) {
            const v14 = [601759695];
            const v15 = [1073741824,1073741823,1376142744,1073741825];
            function f16(a17, a18, a19, a20) {
                try { v15.toSorted(f5); } catch (e) {}
                const v25 = new Float32Array(this, a20, a17);
                function f27() {
                    return a17;
                }
                class C29 extends v25.constructor {
                    #c = 84;
                }
                function f30(a31, a32) {
                    return C11;
                }
                try { f30(f16, a20); } catch (e) {}
                %OptimizeFunctionOnNextCall(f27);
                try { v15["find"](..."find", a20, ...v14); } catch (e) {}
                const o36 = {
                    [Date]: 128,
                    __proto__: arguments,
                };
                return f27;
            }
            for (let v37 = 0; v37 < 5; v37++) {
                f16();
            }
        }
    }
}
class C39 {
    c = 1;
    static g;
    p(a41, a42) {
        a42 *= -1073741824;
        /e/udy;
        /(\xe2\x81\xa3)/vms;
        const v45 = /T1kV22/gum;
        v45[v45] >>= -1073741824;
        return -1073741824;
    }
    9 = C39;
}
new C39();
new C39();
new C39();
class C57 {
    static #o(a59) {
        for (let v60 = 0; v60 < 5; v60++) {
        }
        class C62 extends Uint16Array {
        }
        this.g **= -1e-15;
        try {
            ("-2147483648").normalize();
        } catch(e64) {
        }
        function F65(a67, a68, a69) {
            if (!new.target) { throw 'must be called with new'; }
            a67--;
            a69 / a69;
            const v72 = this.constructor;
            try { new v72(a68, a68, a69); } catch (e) {}
        }
        return 268435456;
    }
    a = -1e-15;
    1000;
    #p() {
    }
    static {
        class C78 {
        }
        function f79(a80, a81, a82) {
            const o83 = {
                1073741824: C78,
            };
            return 9;
        }
    }
    static 27 = 268435456;
    constructor(a85, a86) {
    }
    toString(a89) {
        super[this];
    }
    static f;
    141 = "-2147483648";
    10000 = Date;
    static valueOf(a92) {
        this.#c = "-2147483648";
    }
}
const v93 = new C57();
v93.a = v93;
const v98 = new Uint16Array(821);
new Uint8Array(v98);
