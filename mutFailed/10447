function F2(a4) {
    if (!new.target) { throw 'must be called with new'; }
    const v5 = this.constructor;
    v5.bind();
    try { new v5(); } catch (e) {}
}
const v8 = new F2();
function f9(a10, a11) {
    %VerifyType(a11);
    Object.defineProperty(v8, 2147483648, { writable: true, enumerable: true, value: v8 });
    return a10;
}
class C14 {
    7;
    static ["asyncIterator"];
    constructor(a16, a17) {
        Math.asin();
        this ** this;
    }
    static ["bigint"];
    static #g = "bigint";
    static 2;
    #f;
    static #valueOf(a23, a24) {
        [7.48532551593384e+307,-1e-15,2.0,575.9770103864976,1000000000.0,371.11647243090624];
        [-968943.779552595,-Infinity,1000000000000.0,-2.0,2.2250738585072014e-308,-1000000.0,1.0,-9.787304208153085];
        [0.28276294980976646,Infinity,1.1549478196930663e+307,495912.89348981366,1.1888404203677982e+308,-830251.0475360432,0.09127063370151978];
        return a24;
    }
    /*
    constructor(a29) {
        ("bigint").localeCompare(a29, "bigint");
    }
    */
    /*
    constructor(a32, a33) {
        function f34(a35) {
            return v8;
        }
        const o38 = {
            "type": "bigint",
        };
        new Worker(f34, o38);
    }
    */
}
new C14();
const v41 = new C14();
const v42 = new C14();
const v43 = [v41,536870888,"asyncIterator",v41];
[536870888,v42];
[F2,"bigint",v42,v43];
Array(1102693041);
const v51 = new Date(Date);
v51.setFullYear;
function F56(a58, a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
    const v61 = this?.constructor;
    try { new v61(Uint16Array, a60, a60); } catch (e) {}
    a58 * a58;
    a60++;
    this.d = a58;
    this.g = Int32Array;
}
const v67 = ("D")[0];
v67.concat(v67);
const v69 = [-9223372036854775808];
function F70(a72) {
    if (!new.target) { throw 'must be called with new'; }
    try { a72.groupToMap(a72, F70, v69, this, F70); } catch (e) {}
    try {
        this.d = v69;
    } catch(e74) {
        for (let v75 = 0; v75 < 5; v75++) {
        }
    }
}
new Date();
v42.getUTCFullYear();
