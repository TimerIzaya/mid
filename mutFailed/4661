function f0() {
}
const v1 = [84258.05741205509,-1e-15,633.0620505136169,0.6417022300547058,-1000000.0,-3.296794216436507,1.3484136237917736e+308,1000000000.0,848.6939314641832,5.0];
let v2 = [962824.0203655253,-789.138470643208,0.2654706737861816,1.6123492744500173e+308,1.659871755066304e+308,5.0];
const v3 = [-1000000000.0,-273.8332932041883,-1e-15];
class C4 extends f0 {
    set g(a6) {
        try { a6(v1, a6, a6, v1, v1); } catch (e) {}
        f0 < v3 ? f0 : v3;
        v2 = v1;
        try {
            this.fuck(d, /nfoo|(bar|baz)|quux[a.a\qVk[\cZ]]/di, v1, d);
        } catch(e13) {
        }
    }
}
const v14 = new C4();
new C4();
const v16 = new C4();
class C17 extends v3 {
    static 536870889;
    211;
    static #g = f0;
    get e() {
        var a = -12;
        return v14;
    }
    static #e = v1;
    static #a;
}
new C17();
new v16();
new v3();
const v27 = new Int8Array(1159);
const v29 = new Uint8ClampedArray();
for (const v30 in v27) {
    const v31 = v27[1];
    const v32 = v27[2];
    try { v29["forEach"](...v32, v31, ..."forEach"); } catch (e) {}
}
