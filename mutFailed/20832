const v1 = new Set();
let v2 = -1073741824;
class C5 extends Set {
    static get h() {
        return e;
    }
    static {
        this[v1] = v2;
        super.entries();
    }
    static #f;
    #a;
    #c;
}
new C5();
const v14 = new C5();
const v15 = new C5();
class C16 extends Set {
    toString(a18, a19, a20, a21) {
        Object.defineProperty(v1, a19, { configurable: true, value: a19 });
        const v23 = v14["keys"]();
        v2 << a19;
        Math.atan2(v2, a19);
        Math.sign(-2147483647);
        const v30 = (a19 || a19) * v23;
        v2++;
        v30 & v30;
        return this;
    }
}
new C16();
const v34 = new C16();
const v35 = new C16();
function f36(a37, a38) {
    const o69 = {
        __proto__: a37,
        "g": v1,
        set d(a40) {
            const v41 = [this,a40,this,v15];
            [v14];
            [a38,v15,a38,v15];
            const o44 = {
            };
            const o45 = {
            };
            new Proxy(v41, o45);
            const v49 = Symbol.iterator;
            const o68 = {
                [v49]() {
                    let v51 = 10;
                    function F54(a56, a57) {
                        if (!new.target) { throw 'must be called with new'; }
                        a56 % a56;
                        a57 >>> a57;
                        const v60 = this.constructor;
                        try { new v60(0.8735699512350641, -3.413527541634011e+307); } catch (e) {}
                    }
                    const o67 = {
                        next() {
                            v51--;
                            const v65 = v51 == 0;
                            const o66 = {
                                "done": v65,
                                "value": v51,
                            };
                            return o66;
                        },
                    };
                    return o67;
                },
            };
        },
    };
    return o69;
}
f36(v35, v34);
f36(v35, v35);
f36(v15, C5);
const v73 = [-20096,4294967296,-65537,-2];
const v74 = [-1947047520];
v73["slice"]([[v74,v74,v74,v73]]);
