let v0 = 3;
let v1 = parseInt;
const v2 = new v1(v0, v1);
const v5 = new Int16Array(4096, v0);
new BigUint64Array(8);
class C9 {
    static #a = v0;
    static m(a11, a12, a13) {
        v2[256] = 8;
        v0 = a11;
        try {
            this.#a;
        } catch(e15) {
        }
        let v16;
        try { v16 = Int16Array.entries(a13, v5, this); } catch (e) {}
        try {
            v2.e = v16;
        } catch(e17) {
        }
        var g = v2;
        return 8;
    }
    190201971;
    b = v5;
    static e;
    toString(a19, a20, a21, a22) {
        return "trim";
    }
    129;
}
const v26 = new C9();
const v27 = new C9();
const v28 = new C9();
function F29(a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v5;
    } catch(e33) {
    }
    try {
        this.a = v26;
    } catch(e34) {
    }
    try {
        a32.g = a31;
    } catch(e35) {
    }
}
new F29(v26, v27);
new F29(v28, v28);
new F29(v27, v27);
const v39 = [];
function f40() {
    const v42 = v1++ && v39;
    -v42;
    return v42;
}
const o47 = {
    "execution": "sync",
    "type": "minor",
};
gc(o47);
%PrepareFunctionForOptimization(f40);
f40();
%OptimizeFunctionOnNextCall(f40);
f40();
