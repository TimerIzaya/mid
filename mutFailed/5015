class C3 {
    static #m(a5) {
        this[2147483647] = this;
        return "symbol";
    }
    #p(a7) {
        try { C3.reduceRight(0.8154246997615512); } catch (e) {}
        try {
            const t8 = "symbol";
            t8.__proto__ = "symbol";
        } catch(e9) {
        }
        return this;
    }
}
const v10 = new C3();
const v11 = new C3();
const t17 = 0.8154246997615512;
const v12 = new t17();
function F13(a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a16;
    } catch(e18) {
    }
    try {
        this.f = 514.4286529871499;
    } catch(e19) {
    }
}
new F13(v11, "symbol", v11);
const v21 = new F13(v12, C3, v10);
new F13(C3, C3, v21);
function f28() {
    return 2720;
}
f28.valueOf = f28;
function F29(a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    const v33 = this.constructor;
    try { new v33(a31, 256); } catch (e) {}
    let v35 = -a31;
    v35--;
    this.h = f28;
}
new F29(65537, f28);
const v38 = new F29();
v38.toString = f28;
class C39 extends F29 {
    #h;
    3120 = F29;
    #g = 256;
    valueOf(a41, a42, a43) {
    }
    [v38] = 256;
}
new C39();
new C39();
new C39();
const v48 = [11n];
function F49(a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    try { new Error(v48); } catch (e) {}
}
new F49();
const o56 = {
    "type": 137722928n,
};
gc(o56);
