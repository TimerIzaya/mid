const v0 = /uw\p{Changes_When_NFKC_Casefolded}+/gviy;
const v1 = /a{0}/ud;
const v2 = /1\p{Changes_When_NFKC_Casefolded}/gvmy;
const v6 = [-5.0,-4.0,-1.7976931348623157e+308,-897.6003446951657,-1000000.0,1.8928166106024224e+306,-2.0,-1000000000000.0];
const v7 = [Infinity,2.0,0.11190121050740576,1.0,720445.0631112363];
[-1.3662279049797e+307,2.2250738585072014e-308,-2.0,0.5192136171248216,243.8665035792303,-2.2250738585072014e-308,-1.0,829.9864005108238];
const v9 = [v1,7.090076723213673e+307];
const v10 = [7.090076723213673e+307,v0,v2,v2];
const v11 = v9[1];
[7.090076723213673e+307,v10];
const o13 = {
};
o13.h = o13;
function F14(a16, a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.call(a19); } catch (e) {}
    -4294967296n | -4294967296n;
    function f25(a26, a27) {
        const o30 = {
            968: a27,
            "d": a19,
            [268435439n]: a18,
            __proto__: o13,
            "g": a18,
            ...a27,
            "b": -4294967296n,
            "f": this,
            valueOf(a29) {
                return f25;
            },
        };
        o30[268435439] = o30;
        return a26;
    }
    v11.length;
    for (let v32 = 0; v32 < 100; v32++) {
        v32 - v32;
        const v34 = f25(v11, v32);
        v34 >>> v34;
    }
}
const v36 = new F14(F14, F14, o13, v11);
const v37 = v36?.constructor;
let v38;
try { v38 = new v37(v6, v1, v36, v10); } catch (e) {}
const v39 = new F14(v38, o13, F14, v36);
const v40 = v7?.constructor;
let v41;
try { v41 = new v40(v36, v39, v36, F14); } catch (e) {}
const v42 = new v41();
const v43 = v42?.constructor;
try { new v43(o13, v39, v42, o13); } catch (e) {}
