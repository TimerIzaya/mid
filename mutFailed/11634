const v0 = [];
const v4 = [v0,-1];
[-1,-1,v4,v4,v0];
[-128,v0,-1];
[-5.0,860328.7371617188];
[2.3693842463538353,-9.885912448967249,-2.2250738585072014e-308,-1000000.0,0.3875770496612614,1000.0,-939058.0479370387,0.5439060387240294];
let v9 = [-4.0,-3.0,-5.0];
class C10 {
}
const v11 = new C10();
class C13 {
    e = C13;
    constructor(a15, a16) {
        for (let i = 0; i < 10; i++) {
            this[this];
        }
    }
}
function F18() {
    if (!new.target) { throw 'must be called with new'; }
}
const v20 = new F18();
[-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v23 = 9007199254740991n * 9007199254740991n;
([NaN,3.0])["concat"](-483497369);
function f29(a30, a31, a32, a33) {
    function f35(a36, a37) {
        const o43 = {
            toString(a39, a40, a41) {
                try {
                    a39.f = 536870888n;
                } catch(e42) {
                }
                return 536870888n;
            },
        };
        return a37;
    }
    f35(536870888n, f35());
    try { new a30(); } catch (e) {}
    a31 & a31;
    const v48 = 3 | a31;
    v48 * v48;
    a30 / a30;
    const v51 = a31 < a30;
    a32 >>> a32;
    const o56 = {
        n(a54, a55) {
            return v51;
        },
    };
}
for (let v57 = 0; v57 < 5; v57++) {
    function f58() {
        class C59 {
            constructor(a61, a62) {
                function f63(a64) {
                    const v65 = [536870887,-42204,-17288903,-3,9007199254740991,7];
                    [6,268435440,13,1073741825];
                    function f67(a68, a69) {
                        const o70 = {
                            "c": this,
                        };
                        return o70;
                    }
                    f67(v65, v65);
                    v9++;
                    return f63 - this;
                }
                const o77 = {
                    "type": "function",
                };
                new Worker(f63, Worker);
            }
        }
        new C59();
        for (let v80 = 0; v80 < 5; v80++) {
            "p" == "p";
            try { ("p").substring(C13, C13); } catch (e) {}
        }
        try {
            (9007199254740991n).forEach();
        } catch(e85) {
            class C86 {
                constructor(a88, a89) {
                    try {
                        C86++;
                    } catch(e91) {
                    }
                }
            }
            e85.a = v20;
            e85.a = e85;
        }
        new Int32Array(1519);
        const o97 = {
            "maxByteLength": 3145,
        };
        const v98 = ("1073741824").constructor;
        v98.name = v98;
        const v99 = v98(v23);
        try { v99.replaceAll(6, v11); } catch (e) {}
        return "1073741824";
    }
    f58();
    %OptimizeFunctionOnNextCall(f58);
}
