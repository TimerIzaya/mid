const v1 = [null];
const v3 = [[null,v1]];
const v4 = [-128,-9007199254740990];
[-9223372036854775807,39389,23275,-8,-985386807,26866,-6070];
const v6 = [1418237443,-1111252003,-536870912,536870887,257,-61931,-268435456,64];
let v7;
try { v7 = v6.splice(v6, v1); } catch (e) {}
try { v7.findLast(v6); } catch (e) {}
class C9 {
    static #m(a11, a12, a13) {
        a11 >= v1;
        let v17 = -1;
        +v17;
        v17++;
        -1000000000.0 || -1000000000.0;
        return a12;
    }
    [v4];
}
let v23;
try { v23 = C9(); } catch (e) {}
const v24 = new C9();
const v25 = v24?.constructor;
try { new v25(); } catch (e) {}
const v27 = v24?.constructor;
v27.a = v27;
try { new v27(); } catch (e) {}
const v29 = new C9();
try { v29.propertyIsEnumerable(v23); } catch (e) {}
new C9();
const v32 = [9007199254740991,255];
v32.g = v32;
const v33 = [811200109,-1507601650,10000,-1547857175,4096,14,5,10];
try { v33.fill(v3); } catch (e) {}
[3,-1313911739,27493,-36832,1073741823,1000,-58671,-4294967295,1526361240,8];
let v36 = -128n;
v36 ^ v36;
v36 / v36;
const v41 = 31702n + 31702n;
v41 >> v41;
const v43 = [8.858723857900515,Infinity,-1.1848494944569402e+308,383427.98921984946];
v43[1];
-7n & -7n;
1426835891n >> 1426835891n;
6550n ^ 6550n;
class C51 {
    set b(a53) {
        const v54 = this?.constructor;
        try { new v54(); } catch (e) {}
        a53[1];
        const v57 = this?.constructor;
        v57.prototype = v57;
        try { new v57(); } catch (e) {}
        try { gc(); } catch (e) {}
        gc();
    }
}
C51.b = C51;
const v62 = new C51();
v62.b = v43;
++v36;
