const v6 = Math.tan(-1);
const o7 = {
};
("e")[0];
WeakMap.name = WeakMap;
new WeakMap();
class C14 {
    set g(a16) {
        -11 || a16;
    }
}
class C21 extends "z" {
    constructor(a23, a24, a25, a26) {
        super();
        NaN >= "0x2I";
    }
}
130 >= 130;
let v33 = new Uint8Array(130);
try { v33.slice(49615, "boolean"); } catch (e) {}
function f37(a38, a39) {
    const o43 = {
        [122188848n](a41, a42) {
        },
    };
    return o43;
}
f37();
const v46 = new BigInt64Array(1024);
try { v46.with("e", -268435456n); } catch (e) {}
new Uint8Array(153);
-43160 != -43160;
const v55 = [7.830634752107482,0.006033685793877752,202369.19324926357,5.9519043173705874,5.0];
v55[10];
const v57 = [10624,733951208,4294967296,5138,14];
1940694780n == v57;
const v60 = "boolean" + v33;
const v61 = v33++;
v61 & v61;
v33 / v60;
BigInt64Array ^ v33;
const v66 = new Uint8ClampedArray(4096);
function f67(a68) {
    return f67;
}
const v71 = [v66];
try { v71.toString(); } catch (e) {}
const o79 = {
    get c() {
        return this;
    },
    "type": "function",
    [153]: 153,
    "arguments": v71,
    "type": "function",
    "execution": "0x2I",
    __proto__: v6,
    toString(a75, a76) {
        (v55 && 130) <= v57;
        return 130;
    },
};
new Worker(f67, o79);
