const v0 = [];
const v2 = new Set();
let v3 = 64n;
15n - 15n;
-1n > -1n;
({"g":v3,} = v0.__proto__);
const v9 = v3?.a;
try {
    v9.toString = v3;
} catch(e10) {
}
-1n + -1n;
const v12 = [15n,-1n,Set,15n];
const v13 = [v12,v12,v12];
v13[1];
function F15(a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    a18--;
}
function f21(a22, a23, a24, a25) {
    function f26() {
        const v29 = Math.expm1(a23);
        const v30 = Math.tanh("n");
        const o31 = {
            [v30]: v29,
        };
        return 3454;
    }
    f26();
    const v34 = eval();
    %OptimizeFunctionOnNextCall(f26);
    return v34;
}
const v35 = [v13,15n,v2,v12,v13];
try { v35.entries(); } catch (e) {}
v2 && 3454;
f21 *= v9;
const o41 = {
    "execution": "sync",
    "type": "minor",
};
gc(o41);
let v43;
try { v43 = v35.push(-1n); } catch (e) {}
class C44 extends Set {
    7 = v12;
    static p(a46, a47) {
        const v49 = typeof super.forEach(a46, v12);
        const v51 = v49 === "object";
        ["object",v49,["object",v2,v51,v51,"object"]];
        [15n,v35,a47];
        return v0;
    }
    static 3;
    4;
    #g = 15n;
}
C44.length;
C44.length = C44;
C44 ^= Set;
const o59 = {
    "execution": "async",
    "type": "minor",
};
gc(o59);
new C44();
const v62 = new C44();
const v63 = new C44();
const v64 = [v63,v13,v63];
const v65 = [v3,v35,v62];
[v64,v65,v65];
Uint32Array.BYTES_PER_ELEMENT;
const v70 = new Uint32Array(186);
try { Float64Array.bind(v43); } catch (e) {}
const v75 = new Float64Array(186, 186, 16);
v75[53] = v75;
const v76 = [Float64Array,v75];
const v77 = Float64Array > v70;
!v77;
if (v77) {
    new Uint32Array(v76);
} else {
    function F80(a82, a83, a84) {
        if (!new.target) { throw 'must be called with new'; }
    }
}
function f86() {
    return 243628655;
}
Date.valueOf = f86;
const v88 = new Date(Date);
new WeakSet();
for (let v91 = 0; v91 < 5; v91++) {
    function f92() {
        !(45725n === 45725n);
        return f92;
    }
    f92();
    %OptimizeFunctionOnNextCall(f92);
}
let v97 = v88.setUTCDate();
const v98 = v97--;
v98 - v98;
