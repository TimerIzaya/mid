new BigUint64Array(1910);
new Uint8ClampedArray(9);
const v8 = new BigInt64Array(-973541925, Uint8ClampedArray, BigInt64Array);
const v9 = v8?.constructor;
try { new v9(BigUint64Array, Uint8ClampedArray, Uint8ClampedArray, Uint8ClampedArray); } catch (e) {}
function F11(a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    a14.prototype = a14;
    try {
        this.c = -973541925;
    } catch(e15) {
    }
    try {
        this.a = a14;
    } catch(e16) {
    }
}
const v17 = new F11(-973541925, Uint8ClampedArray);
const v18 = new F11(-973541925, v17);
v18.a;
new F11(9, 1910);
try { Array.toString(); } catch (e) {}
Uint32Array.length;
const v26 = new Uint32Array();
Symbol.toPrimitive = Symbol;
v26[Symbol.b] = Array;
const o32 = {
    n(a30, a31) {
        v26[2] = v26;
        return 2;
    },
};
try { o32.n(); } catch (e) {}
