const v1 = -Infinity;
const v3 = 5493 >>> 5493;
Date.parse([10617.622628886602,-5.0,1.7976931348623157e+308,-8.220199247866622e+307,1000000000000.0,0.0,48740.75682475441,-1000000000.0,6.407443663238073,369.9978678982163]);
class C8 {
    set c(a10) {
        a10[this] = this;
        super[5493] = -9;
        super.f = a10;
        let v11;
        try { v11 = a10.splice(-9, this, v1, a10, this); } catch (e) {}
        try { v11.m(v11); } catch (e) {}
        super.b;
    }
    [-9] = -9;
    4294967295 = -9007199254740991;
    #c = -9007199254740991;
}
new C8();
class C18 {
    g;
    constructor() {
        const v20 = this.constructor;
        try { new v20(); } catch (e) {}
    }
}
const v22 = new C8();
new C8();
new Date();
const v27 = new Float32Array(v3);
v27[5] ||= 6;
function f30() {
    return v22;
}
new Float64Array(2691);
new v22(199);
new Float32Array(15);
new Uint8Array(268435440);
const v47 = [3.0,-533.6058053075066,-3.0,-Infinity,9.77162142398339,-6.974865860269324,0.0,-1.7976931348623157e+308,1000000.0];
new BigInt64Array([]);
new BigInt64Array(5);
function F53() {
    if (!new.target) { throw 'must be called with new'; }
}
class C55 {
    constructor(a57, a58, a59) {
        a58.e = a58;
        let v61 = Int32Array;
        const v62 = new v61(2917);
        v62["lastIndexOf"](v61--, v61, ...v61, 10);
        class C68 extends v47.constructor {
        }
        new C68();
        try {
        const t0 = 268435440;
        t0();
        } catch (e) {}
        function F71() {
            if (!new.target) { throw 'must be called with new'; }
        }
        function F74(a76, a77, a78, a79) {
            if (!new.target) { throw 'must be called with new'; }
            this.c = a76;
        }
    }
}
new C55(F53, C55);
