class C3 {
    constructor(a5, a6) {
        a5 | a5;
        a6[0] = a6;
        a5++;
        try {
            this.fuck(false, "Qvh4");
        } catch(e12) {
            e12.message;
        }
    }
    g = 536870912;
    #e;
    static #b;
    static 10000 = 536870912;
}
const v14 = new C3(536870912, "a");
const v15 = new C3("a", v14);
v15.g = v15;
const v16 = new C3(C3, 536870912);
const v17 = [v16];
try { v17.toString(); } catch (e) {}
const v19 = [v14,v14,536870912,v15];
try { v19.map(v17); } catch (e) {}
const v21 = [v16,v15,v14,C3,v19];
let v22;
try { v22 = v21.entries(); } catch (e) {}
try { v22.next(); } catch (e) {}
function F24(a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    const v28 = this?.constructor;
    try { new v28(this, F24); } catch (e) {}
    const v30 = this?.constructor;
    try { new v30(C3, C3); } catch (e) {}
    a27[0];
    try {
        this.h = a27;
    } catch(e33) {
    }
    try {
        this.g = a26;
    } catch(e34) {
    }
    try {
        this.a = a26;
    } catch(e35) {
    }
}
new F24(C3, v17);
const v37 = new F24(v16, v17);
v37.a;
const v39 = new F24(v16, v19);
v39.e = v39;
const v41 = [0.0,0.0];
const o42 = {
    __proto__: v41,
};
o42.push(0.0);
