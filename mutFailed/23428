function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -11097;
    } catch(e3) {
    }
    try {
        this.e = -11097;
    } catch(e4) {
    }
    try {
        this.h = -11097;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
function f9(a10, a11) {
    const o24 = {
        "f": a10,
        "c": a11,
        __proto__: v7,
        "h": v8,
        valueOf(a13, a14, a15, a16) {
            super.c = v8;
            a11.e *= a10;
            a10 = this;
            return a16;
        },
        [a11](a18, a19, a20) {
            for (let v21 = 0; v21 < 32; v21++) {
                a19["p" + v21] = v21;
            }
            v8[10] = v8;
            return v8;
        },
    };
    return o24;
}
f9(v6, v6);
const v27 = f9(f9(v7, v6), v7);
const v29 = [-1e-15,-1e-15,-0.44029830246734036,1e-15,2.220446049250313e-16];
v29[Symbol.toPrimitive] = f9;
const v32 = [-882946.9970789439,-7.55711617210701,-2.0,1.0,NaN,-1.0,5.0];
const v33 = [4.675215882872239e+307,-1000.0,698319.6783178817,-9.028310186151687,1.0,Infinity,-7.732072064574447];
function f34(a35, a36, a37, a38) {
    const o44 = {
        p(a40, a41, a42) {
            a42 /= a35;
            try {
                v32.a = v8;
            } catch(e43) {
            }
            return F0;
        },
        "d": v8,
        [v29]: v27,
        __proto__: v7,
        ...v33,
        "b": true,
        "e": f9,
        ...v7,
    };
    return o44;
}
f34(v32, v8, v7, f34(v6, v7, v8, f34(f9, v8, v6, true)));
const v50 = new BigInt64Array(11);
v50.reverse();
