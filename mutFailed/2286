const v5 = -Infinity;
class C6 {
    512;
    b;
    toString(a8, a9, a10) {
        Math.min(a8 - (a8 / -268435456));
        const v16 = (-268435456) ** a8;
        const t7 = [];
        t7[6] = 4294967295;
        const o23 = {
            "type": "function",
        };
        class C24 {
            static #p(a26) {
                const v29 = new BigUint64Array(4);
                function F30(a32, a33, a34) {
                    if (!new.target) { throw 'must be called with new'; }
                    this.a = a33;
                }
                const v35 = new F30(BigUint64Array, 4, v29);
                Object.defineProperty(v35, 1828032293, { enumerable: true, value: this });
                return a26;
            }
        }
        const v36 = new C24();
        new C24(v36, "iterator");
        const v38 = new C24();
        C24.__proto__ = "iterator";
        const v39 = [v36,v38];
        [v39,"iterator",4.488303140222985];
        const v44 = [v36,[[1828032293,[]]],v39];
        function f45() {
            return v44;
        }
        const v48 = new BigInt64Array(218);
        v48.sort(f45);
        new Uint8ClampedArray(127);
        new Float64Array();
        Math.atan2(v16, v16);
        ReferenceError(-1073741824, 9007199254740991n);
        for (let i62 = 0, i63 = 10; i62 < i63; i62++) {
        }
        return a10;
    }
    static [2] = 1830054319;
    g;
}
new C6();
const v71 = new C6();
const v72 = new C6();
[2,0.27557074927947356];
const v77 = [v72,-3.0,-65537,v5,-3.0];
[v77,v71,v77,2,-3.0];
function F79(a81, a82, a83) {
    if (!new.target) { throw 'must be called with new'; }
}
const v84 = new F79(F79, F79, F79);
Object.defineProperty(v84, -3.0, { writable: true, configurable: true, set: Array });
parseInt([2.220446049250313e-16,-Infinity,NaN,-1e-15,-4.0,-2.2250738585072014e-308,-742.8087895557678,-4.0,Infinity,655658.0990783614]);
