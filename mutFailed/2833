class C3 {
    static #c;
    h;
    static c;
    static {
        1.2458614483235107e+308 instanceof this;
        this.c;
        2.220446049250313e-16 >> 2.220446049250313e-16;
        function F12() {
            if (!new.target) { throw 'must be called with new'; }
        }
        new F12();
        class C16 {
            #d = 4096;
            static {
                this.#d;
            }
        }
        -Math.sinh(2.8169087943950974e+307);
        Math.atan(4);
        const v22 = ~2.8169087943950974e+307;
        v22 !== v22;
        Math.asinh(2.8169087943950974e+307);
        const v25 = Math.min(2.8169087943950974e+307);
        v25 % v25;
        4 * 4;
    }
}
const v28 = new C3();
Symbol.replace;
function f32(a33, a34) {
    const o40 = {
        toString(a36, a37, a38) {
            try {
                a36.f = 536870888n;
            } catch(e39) {
            }
            return 536870888n;
        },
    };
    return o40;
}
const v41 = new C3();
const v42 = new C3();
!true;
const v45 = [v41,1.2458614483235107e+308];
try { v45.push(v42); } catch (e) {}
([2.8169087943950974e+307,v41,v42,C3,v28])[2];
const v49 = [9007199254740991,v41];
const v50 = /(x)(x)(x)\1/uis;
function f51(a52, a53, a54, a55) {
    const o62 = {
        4294967295: a52,
        [v50](a57, a58, a59, a60) {
            super.test();
        },
    };
    return a53;
}
new Symbol();
new Uint8ClampedArray(4);
function f68(a69, a70, a71) {
    function f73(a74) {
        a70[5] ||= v41;
    }
    this.onmessage = f73;
    const v77 = new SharedArrayBuffer(35);
    new BigUint64Array(v77);
}
const v80 = new Set();
try { v80.forEach(v49); } catch (e) {}
("async").lastIndexOf();
