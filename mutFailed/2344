function f3() {
    return "c";
}
class C7 {
    constructor(a9, a10, a11, a12) {
        const t5 = "c";
        t5[127] = a11;
        let v13;
        try { v13 = ("9").slice(-6644n, a12); } catch (e) {}
        ("c").length;
        %VerifyType(v13);
    }
    static set h(a16) {
        try { new a16("9", this, a16, 26042n, "c"); } catch (e) {}
        super.f;
        function f19() {
            return a16;
        }
        Object.defineProperty("e", "h", { writable: true, configurable: true, enumerable: true, value: -4294967297n });
        try {
            new f3();
        } catch(e21) {
        }
    }
}
const v22 = new C7(-6644n, "c", -4294967297n, -6644n);
new C7(-4294967297n, "9", -6644n, -4294967297n);
const v24 = new C7(26042n, "c", -4294967297n, -6644n);
function F25(a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -4294967297n;
    } catch(e30) {
    }
}
new F25("e", v22, v24);
const v32 = new F25(F25, "c", v24);
new F25(F25, "c", "9");
const v34 = /\xed\xb0\x80+/uis;
/MZ{abc/gm;
const v36 = /(l{z})/s;
function F37(a39) {
    if (!new.target) { throw 'must be called with new'; }
    const v40 = this.constructor;
    try { new v40(v36); } catch (e) {}
    a39.b = a39;
    a39.dotAll;
}
const v43 = new F37(v34);
const v44 = new F37(v36);
new F37(v36);
const v46 = [128,5,268435456,127,4096];
const v47 = [-185039418,1565119373,33166,29980,-4294967296,1554841923,-1646058516,-15,1,255];
Object.defineProperty(v46.__proto__, 65535, { writable: true, get: f3 });
4 && v46;
v22[Symbol.asyncIterator] = v32;
Uint8Array.h = Uint8Array;
const v55 = new Uint8Array();
const v56 = v55.constructor;
try { v56(v56, v43); } catch (e) {}
try { new v56(); } catch (e) {}
v55[44610];
function f61(a62, a63) {
    const v67 = Array();
    let v68 = 1000000000.0;
    function f69(a70) {
    }
    const v71 = f69();
    f69();
    class C75 {
        constructor(a77, a78) {
            if (gc <= this) {
                try {
                    v44.g = 655864.1717298129;
                } catch(e81) {
                }
            } else {
                const v83 = Symbol.iterator;
                const o92 = {
                    [v83]() {
                        let v85 = 10;
                        const o91 = {
                            next() {
                                v85--;
                                const v89 = v85 == 0;
                                const o90 = {
                                    "done": v89,
                                    "value": v85,
                                };
                                return o90;
                            },
                        };
                        return o91;
                    },
                };
            }
            const o94 = {
                "type": "minor",
            };
            o94.b = o94;
            gc(o94);
        }
    }
    const v96 = new C75(v71, 655864.1717298129);
    const v97 = v96.__defineGetter__;
    try { v97(4, 4); } catch (e) {}
    new C75();
    const v100 = new C75();
    v68 /= -2.2250738585072014e-308;
    for (let i102 = 0; i102 < 7; i102 + i102, i102++) {
        const v109 = new C75();
        const t111 = v109.constructor;
        new t111(i102, v44);
    }
    function f112() {
        return 3;
    }
    function f113(a114) {
        let v116 = "major";
        v116 = v100;
        Object.defineProperty(v47, 75, { enumerable: true, get: f112 });
        v46.pop().d;
        gc();
    }
    Object.defineProperty(v67, 0, { configurable: true, enumerable: true, get: f112, set: f113 });
    v67.unshift(3, a62);
}
f61.e = f61;
new Promise(f61);
