function f0() {
}
do {
} while (0 < 0)
function f4() {
    class C5 {
    }
    let v7 = -9007199254740992;
    Math.log10(v7);
    Object.defineProperty(Math, ++v7, { configurable: true, enumerable: true, get: f4 });
    const o13 = {
        "execution": "sync",
        "type": "minor",
    };
    gc(o13);
    Math.asinh(v7);
    return f0;
}
const v16 = [f4];
const v17 = [v16,v16,f4];
[f0,v16,v17,v16];
try { v17.sort(f0); } catch (e) {}
v17 != f4 ? v17 : f4;
const o26 = {
    "maxByteLength": 3526,
};
const v28 = new ArrayBuffer(3526, o26);
new Float32Array(v28);
new Float32Array(129);
const v36 = new Uint8Array(v16);
function f37(a38, a39, a40, a41) {
    a40++;
    a40 % a40;
    const o47 = {
        "b": a38,
        ...v36,
        n(a45, a46) {
            return a46;
        },
    };
    return v17;
}
for (let v48 = 0; v48 < 625; v48++) {
    const v49 = f37(Uint8Array, 2, v48);
    try { v49(v48); } catch (e) {}
}
const v51 = new Uint16Array(9);
new Float32Array(129);
class C55 extends Uint16Array {
    static #a;
    static f;
    constructor(a57, a58, a59) {
        super(v51, a59);
        new Uint8ClampedArray(200);
        new Float64Array(0);
        const v67 = new WeakMap();
        v67.get(Float32Array);
        function f69(a70, a71, a72) {
            return a72;
        }
        const v75 = [17452,4294967295,64,-8];
        try {
        const t0 = "jER";
        new t0(...v75, -1.6798118066934893e+307);
        } catch (e) {}
        Int16Array[0] = -27833;
        new Uint32Array(1617);
    }
    1 = Float32Array;
}
const v82 = [-6.672391061426152e+307];
v82[0] = v82;
function f83() {
    return v82["pop"]();
}
f83();
new C55(9, v17, 129);
new C55(9, v16, 129);
new C55(129, v16, 129);
const v96 = [256,54026];
const v98 = [1321234440,-2012385285,503280511,-65535,-50525,1929142229];
try {
    v98.sort(-5);
} catch(e100) {
}
-2 | -2;
!-2;
Math.hypot(v96);
