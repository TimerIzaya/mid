const v2 = -Infinity;
class C3 {
    static c;
    static [v2] = 4294967296;
    #toString(a5, a6) {
        this > a6 ? this : -74.4907586749415;
        return a6;
    }
    static set d(a10) {
    }
    #b = 4294967296;
    static #b;
    set a(a12) {
        a12[a12] <<= 4294967296;
        delete this[10];
        try {
            a12.#toString(-74.4907586749415);
        } catch(e15) {
        }
    }
}
const v16 = new C3();
const v17 = new C3();
const v18 = new C3();
const v19 = [Infinity,-7.820314842015146e+307];
const v20 = [0.02479736107311936,828527.888954265,-5.0,-1.7976931348623157e+308];
const v21 = [0.9663406688557741,-323845.12750241545,-Infinity,1.7976931348623157e+308];
class C22 extends C3 {
    1 = -74.4907586749415;
    8;
    constructor(a24, a25, a26, a27) {
        super();
        for (let v28 = 0; v28 < 5; v28++) {
            function f29() {
            }
            f29();
            %OptimizeFunctionOnNextCall(f29);
        }
        super.a;
        try { v18["valueOf"](a24, "valueOf", a25, v17); } catch (e) {}
        const o37 = {
        };
        try {
            o37.a = this;
        } catch(e38) {
        }
        try {
            const o39 = {
            };
            o39.a = this;
            o39.b = v20;
        } catch(e40) {
        }
        try {
            const o41 = {
            };
            o41.a = this;
            a27.b = v20;
            o41.d = -9223372036854775807;
        } catch(e42) {
        }
        try {
            const o43 = {
            };
            o43.a = this;
            o43.b = v20;
            o43.d = -9223372036854775807;
        } catch(e44) {
        }
    }
}
const v45 = new C22(v17, v19, v16, v17);
const v46 = new C22(v45, v21, v21, v45);
new C22(v46, v20, -74.4907586749415, v45);
Math.sin(3.862600614459211e+307);
try {
} catch(e52) {
}
try {
} catch(e60) {
    eval("");
}
