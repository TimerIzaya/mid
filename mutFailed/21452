const v0 = [];
class C1 {
    c;
    static 255;
    2554;
    constructor() {
        const v3 = ~this;
        let v4;
        try { v4 = this.getInt8(this, v0, v3, v3); } catch (e) {}
        super.e;
        v4 || C1;
    }
    [v0];
    static b;
}
const v7 = new C1();
const v8 = new v7();
const v9 = new v7();
[v7,[[v7,v8,C1,v0],v0,v7,C1,v9],v0];
const v16 = /xyz{0,1}ja.a(?=b)/ui;
class C17 {
}
const v18 = new C17();
const v22 = new Set();
function F23(a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a25;
    } catch(e27) {
        for (let [v28,v29] of a25) {
            new Array(2);
            new Int8Array(253);
            new Uint32Array(16);
            new Int16Array(0);
            try {
                v22.values();
            } catch(e41) {
            }
        }
    }
    try {
        this.h = v22;
    } catch(e42) {
    }
    var h = v16;
    try {
        a26.e = v18;
    } catch(e43) {
    }
    try {
        const v44 = v22[this];
        try {
            new v44(v44, -268435456n);
        } catch(e47) {
        }
        this.b = Set;
    } catch(e48) {
    }
}
const v49 = new F23(F23, 2);
const v50 = new F23(v49, F23);
new F23(v50, null);
