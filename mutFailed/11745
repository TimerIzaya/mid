const v3 = [-2.7696324972968656];
let v4;
try { v4 = v3.reduce("global"); } catch (e) {}
var d = "global";
let v9 = +(+-34183);
const v10 = v9--;
Math.random();
v4 | v10;
[0.5915620647695397,-443.2664657518268,799357.8066217778,0.9390915022908616,-1000.0,-9.774900519070206,-4.0,-2.0,Infinity,1000000000.0];
const v14 = [1.7976931348623157e+308,-1e-15,-1000000.0,1000.0,7.0099561624358735,5.0,457801.2687323864,-1e-15,-1.0];
const v15 = ["global","global"];
function f16(a17, a18) {
    class C19 {
    }
    return a18;
}
v15[Symbol.toPrimitive] = f16;
const v22 = ["global",v15,v14];
v22.toString = Symbol;
const v23 = [v15,"global","E","global",v22];
try { v23.groupToMap("global"); } catch (e) {}
const v25 = [-32552];
v25[0];
const v27 = [-65536,-4294967296,-1532];
[1073741824,-1656222636,-9,1024,1572803973,-4096,3,-1,-980856800];
let v29 = 127;
v29++;
const v32 = new Uint32Array(v29);
Uint8Array.length = Uint8Array;
726644090 & 5.0;
Math.round(v9 ^ 5.0);
Math.acosh(5.0);
+v22;
let v42;
try { v42 = new Uint8Array(v27, "E", v32); } catch (e) {}
const v43 = v42?.every;
try { new v43(v42); } catch (e) {}
const v45 = new Uint8Array(v32);
try { v45.slice(v15, v29); } catch (e) {}
const v47 = v45?.constructor;
v47.d = v47;
try { new v47(v14, v25, v25); } catch (e) {}
