const v0 = [-0.0,-611964.3341991103,-108281.03928056336];
let v1 = [3.0,0.8990202709203962,-187773.6440788525,2.790288768966837,-527303.0622948057,-1000000000.0,1000000000000.0,0.8464766610322032,-2.2250738585072014e-308];
const v2 = [5.0,0.39617930715171557];
class C3 {
    6;
    static m(a5) {
        a5 >>= this;
        return v2;
    }
    #m(a7, a8) {
        const v10 = Symbol.hasInstance;
        const v11 = v2[v10];
        function F12(a14, a15, a16) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = a16;
            } catch(e17) {
            }
            a14?.[v2];
            function F19(a21, a22, a23) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.d = a22;
                } catch(e24) {
                }
                try {
                    this.e = v0;
                } catch(e25) {
                }
                try {
                    this.a = a22;
                } catch(e26) {
                }
            }
            new F19(v0, v0, C3);
            new F19(C3, v0, v0);
            new F19(a14, v2, v2);
        }
        new F12(F12, a7, v11);
        new F12(v10, a8, v1);
        new F12(this, v1, a8);
        return v1;
    }
}
const v33 = new C3();
const v34 = new C3();
const v35 = new C3();
class C36 {
    [v0] = v34;
    n(a38, a39) {
        C3 = v35;
        super.a &= a39;
        return v0;
    }
    #p(a41, a42) {
        let v46 = -1000000.0;
        Math.expm1(7);
        const v49 = v46++ / 9;
        ++v1 >>> v49;
        return this;
    }
}
new C36();
new C36();
new C36();
/A\011cyLPrIz\x60*/diy;
/C6(?:a+){0,0}/guis;
/X/gimy;
function f58() {
    for (let i = 0; i < 5; i++) {
        for (let v59 = 0; v59 < 5; v59++) {
            class C60 {
            }
            for (let v61 = 0; v61 < 5; v61++) {
                v61 > v61;
            }
        }
    }
    return f58;
}
f58();
%OptimizeFunctionOnNextCall(f58);
v33();
