function f0() {
}
const v4 = [-65536,-57233,f0,-1,-65536];
const v5 = [v4,f0,v4,f0,-1];
[v5,-65536,-65536,v5];
class C7 extends f0 {
    #a;
    static [v5];
    static o(a9, a10, a11, a12) {
        super.d *= a9;
        new f0();
        try {
            v5.#a;
        } catch(e15) {
        }
        return this;
    }
    #e;
    #g;
}
const v16 = new C7();
const v17 = new C7();
switch (v16) {
    case v5:
        try {
            new f0();
        } catch(e19) {
        }
        break;
}
new C7();
function F24(a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
}
class C28 {
    #c;
    static #b;
}
new C28();
new C28();
new v17();
new F24(F24, F24);
Math.asinh(~C7);
