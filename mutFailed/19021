const v0 = [-1000000000000.0,2.0,0.04462445431596129,4.0,1.0,0.4102282367579071];
function f1() {
    function f2() {
        class C5 {
            static e;
            e;
            static 3 = -5.161103313394506;
            toString(a7) {
                let v6 = this;
                v6.e *= 0.8199829542463926;
                v6 += v6;
                for (let v8 = 0; v8 < 10; v8++) {
                    a7["p" + v8] = v8;
                }
                return 0.8199829542463926;
            }
        }
        const v11 = new C5();
        v11.toString = C5[/1(ab)/ud];
        return C5;
    }
    return f2;
}
Object.defineProperty(v0, "toString", { writable: true, get: f1 });
const v14 = [NaN,-62354.977552859345,2.0,0.39398132988089263,0.06708058432909658,-930.6939078841532,4.809626068770388];
const v15 = [-1.1831732515486863e+308,924.4366665357504,474979.81221232703];
const v16 = /eWg*/gumsy;
const v17 = /()T47T/vdi;
const v18 = /a(?:ab)|cde/gvm;
class C19 {
    #m(a21, a22, a23, a24) {
        return v17;
    }
    p(a29, a30) {
        for (const v31 in v15) {
            this[this] = a29;
            v14 & v31;
        }
        const v33 = v0 >> v15;
        v17[v33] >>>= v33;
        try { ("-256").replaceAll(C19, C19); } catch (e) {}
        a29 = v16;
        return v15;
    }
}
for (let i = 0; i < 10; i++) {
    const o40 = {
        "a": 16n,
        1: 16n,
        257: undefined,
    };
}
const v41 = new C19();
const v42 = new C19();
const v43 = new C19();
function f44() {
    try {
        v18.test("a");
    } catch(e47) {
    }
    return v18;
}
v43.valueOf = f44;
class C48 extends C19 {
    set f(a50) {
        super.species = this;
        this[C19] = v15;
    }
    static #d;
    constructor(a55, a56, a57, a58) {
        super();
        (a56 || C19) << v17;
    }
    2 = v15;
    #f;
    static b;
    static #a = v18;
    f = C19;
}
const v61 = new C48();
const v62 = new C48();
Object.defineProperty(v62, "toString", { writable: true, configurable: true, value: f44 });
new C48();
let v65;
try {
const t0 = -463330.04816285486;
v65 = t0(-463330.04816285486, -463330.04816285486, C19, v62, C48);
} catch (e) {}
v65 & C19;
new Int32Array(3);
class C70 {
    static get g() {
        try {
            var a = super.subarray();
        } catch(e73) {
        }
    }
}
v62["p"](...v0, v41, v61, v18, v42);
let v77 = -2147483647;
Math.atanh(v43);
Math.random();
v43 >> 1000000000.0;
const v82 = v77--;
v82 * v82;
Math.asin(v43);
!v82;
const v86 = [-1000000.0,771279.5641904315,0.0,8.299995604235331,6.625300935335886,-820.4949035918538,-602.5256799896665,0.6342705996691437,Infinity];
const v87 = [1000000000.0,4.0,5.0,-6.555298893133851e+307];
for (let v88 = 0; v88 < 5; v88++) {
    v87.unshift(-463330.04816285486, v86.values());
}
