new Float64Array(257);
new Float64Array(3609);
new Uint32Array(9);
function f12() {
}
const v13 = [601759695];
const v14 = [1073741824,1073741823,1376142744,1073741825];
function f16(a17, a18, a19, a20) {
    function f22() {
        return 522675525n;
    }
    f12();
    const v25 = new eval();
    function f28(a29, a30) {
        const o33 = {
            "g": 1073741824,
            get d() {
                super[a29];
                return this;
            },
            "f": 3,
            ...a29,
            10: 1073741824,
        };
        return o33;
    }
    f28(f28(f28));
    const v36 = v25.buffer;
    new Int8Array();
    let v40 = 1000000000000.0;
    -(v40--);
    v36.slice(2147483648);
    %OptimizeFunctionOnNextCall(f22);
    let v45;
    try { v45 = v14["find"](..."find", a20, ...v13, ...v14, ...522675525n); } catch (e) {}
    Symbol("bZ");
    const v50 = new Uint8ClampedArray();
    const o51 = {
        ...v50,
    };
    v45 <= a19;
    return arguments;
}
for (let v53 = 0; v53 < 10; v53++) {
    f16(v53, v53, f12, 522675525n);
    const v55 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    const v57 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
    const v58 = [601759695];
    const v59 = [1073741824,1073741823,1376142744,1073741825];
    function f61(a62, a63, a64, a65) {
        function f67() {
            let v70 = Float64Array;
            b = v70 = a63;
            v55.length;
            try {
                v59.forEach(v70);
            } catch(e73) {
            }
            const v74 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
            const v76 = Symbol.toPrimitive;
            const o82 = {
                toString(a78, a79) {
                    const v80 = a65 && v70;
                    a78 *= v76;
                    return v80 <= v74;
                },
            };
            const o102 = {
                "c": -4294967297n,
                [522675525n](a85, a86) {
                },
                "c": v58,
                valueOf(a88, a89) {
                    return a62;
                },
                "b": -4294967295,
                [-4294967297n](a91, a92, a93, a94) {
                },
                "e": -4294967295,
                "e": -268435456,
                "maxByteLength": -4294967295,
                "c": v57,
                ...v58,
                "type": "Vre",
                ..."Vre",
                valueOf(a96, a97) {
                    return v74;
                },
                ..."Vre",
                4: "Vre",
                "a": -268435456,
                "type": "Vre",
                "type": "Vre",
                toString(a99, a100, a101) {
                    return a65;
                },
                5: -4294967295,
                6: -268435456,
            };
        }
        f67();
        const v105 = new Int8Array();
        v105.buffer.slice(2147483648);
        %OptimizeFunctionOnNextCall(f67);
        let v110;
        try { v110 = v59["find"](..."find", a65, ...v58, ...v59, ...522675525n); } catch (e) {}
        v110 <= a64;
        return arguments;
    }
}
%OptimizeFunctionOnNextCall(f16);
f16();
