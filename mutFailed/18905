const v0 = [-8.736430217306641e+307,1000000.0,-489732.20800014783,-184242.20455107337,-1000000000.0,1e-15,0.5200961913166134,5.457948793122718];
const v1 = [-1.0,-248997.68585925247,1000.0,-709.7502441609931,-0.43830177786731106,-1000000000000.0,3.0,-1000000000000.0,0.563498967435769];
const v2 = [0.9126235039864234,-1.0343664614553083e+308,-Infinity,-1000000.0,-611248.8487845426,919.1424306032225,4.0,0.1372627394255056];
function f3() {
    return v0;
}
class C4 extends f3 {
    static 5 = v2;
    b = v2;
    p(a6) {
        try {
            f3();
        } catch(e8) {
        }
        return v1;
    }
    #d;
}
new C4();
new C4();
new C4();
class C15 {
    static {
    }
}
const o18 = {
};
class C19 {
    constructor(a21, a22) {
    }
}
const v24 = new C19();
if (-1557853178 < -9n) {
    try {
        new C4();
    } catch(e28) {
    }
} else {
    `n`;
}
v24 << -1557853178;
function F32(a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = F32;
    try {
        this.b = "function";
    } catch(e36) {
    }
    try {
        this.h = "function";
    } catch(e37) {
    }
}
const v38 = new F32();
new F32();
new F32("function", v38);
const v43 = new Float32Array();
class C44 {
    set d(a46) {
    }
    static #m(a48, a49, a50) {
    }
    static {
        for (let v52 = 0; v52 < 10; v52++) {
            function f53() {
                return v52;
            }
            const v54 = [601759695];
            const v55 = [1073741824,1073741823,1376142744,1073741825];
            function f57(a58, a59, a60, a61) {
                function f63() {
                    return a58;
                }
                f53();
                const v66 = new Int8Array();
                function f67(a68, a69) {
                    return a68;
                }
                f67(f67(v55, v43));
                v66.buffer.slice(2147483648);
                %OptimizeFunctionOnNextCall(f63);
                let v76;
                try { v76 = v55["find"](..."find", a61, ...v54, ...v55, ...522675525n); } catch (e) {}
                v76 <= a60;
                return arguments;
            }
            for (let v78 = 0; v78 < 10; v78++) {
                f57();
            }
        }
    }
}
