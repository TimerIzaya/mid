class C3 {
    constructor(a5, a6) {
        a5 - a5;
        try { a6(a5, 1.6668027781360442e+307); } catch (e) {}
        try {
            super.n(a6, a5, 0.5325231950752061, a6, a5);
        } catch(e10) {
        }
    }
    7;
    #valueOf(a12, a13) {
        try {
            this.#valueOf(a12);
        } catch(e15) {
        }
        super[0.5325231950752061] = a12;
        return -2088563542;
    }
}
try { (1.6668027781360442e+307).call(1.6668027781360442e+307); } catch (e) {}
const v17 = new C3(-2088563542, C3);
const v18 = new C3(C3, 1.6668027781360442e+307);
const v19 = v18[7];
const v20 = new C3(1.6668027781360442e+307, v18);
v20[7];
-2 != -2;
const v29 = -28153 > -28153;
v18.hasInstance;
function f35(a36, a37) {
    return a37;
}
try { f35(v17, v17); } catch (e) {}
const v41 = [v19];
v29.g = v41;
const o42 = {
    "arguments": v41,
    "type": "function",
};
o42.e = o42;
new Worker(f35, Worker);
