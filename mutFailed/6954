const v4 = new Uint16Array(209);
try {
    v4.__proto__ = v4;
} catch(e5) {
}
class C7 {
    static m(a9) {
        a9 = 689062.9992444427;
        let v10;
        try { v10 = new this(689062.9992444427, a9, a9, 689062.9992444427, 1.5820959122811817e+308); } catch (e) {}
        const v11 = super.f;
        v10[Symbol.split] = v11;
        v11?.[372734264];
        return v11;
    }
    #valueOf(a16, a17) {
        return a17;
    }
    constructor(a19) {
        let v20 = "atan2";
        try { a19[v20](); } catch (e) {}
        v20++;
    }
    [-15019];
    [1.5820959122811817e+308] = 1.5820959122811817e+308;
    static h = -15019;
    static d;
}
new C7();
new C7();
new C7();
[1073741825,1073741825];
[-4096];
[1073741825,689062.9992444427];
const v35 = new Float64Array();
const v38 = [601759695];
const v39 = [1073741824,1073741823,1376142744,1073741825];
function f40(a41, a42, a43, a44) {
    a43.toString = f40;
    a41 >>> a41;
    a43[3];
    ("find").codePointAt(v39);
    try { v39["find"](..."find", a44, ...v38); } catch (e) {}
    return a44;
}
for (let v50 = 0; v50 < 10; v50++) {
    f40(v50, v50, v39);
}
const v52 = new Uint8Array();
const v55 = v52[44610];
class C56 {
    constructor(a58, a59, a60, a61) {
        let v63 = 268435439;
        v63--;
    }
}
let v66;
try { v66 = v55(); } catch (e) {}
v35.toString = v66;
[3,4294967295,-49424,9007199254740991,-4,5851,-10,4096];
function f69(a70, a71) {
    Symbol.toPrimitive;
    const v76 = Array();
    function f77() {
        return 3;
    }
    function f78(a79) {
        const o83 = {
            "execution": "async",
        };
        gc();
    }
    Object.defineProperty(v76, 0, { configurable: true, enumerable: true, get: f77, set: f78 });
    v76.unshift(3, a70);
}
new Promise(f69);
