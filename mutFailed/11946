const v5 = new Set();
class C6 extends Set {
    256 = 127;
    #m(a8, a9) {
        this[a9] >>>= a8;
        delete a8?.[this];
        return v5;
    }
    constructor(a13, a14) {
        super(a13);
        function f15(a16) {
            function f18(a19) {
                try { new a19(13, -256); } catch (e) {}
            }
            this.onmessage = f18;
            try {
                Array(4087);
                class C27 {
                    constructor(a29, a30, a31, a32) {
                        function F33() {
                            if (!new.target) { throw 'must be called with new'; }
                        }
                        const v35 = new F33();
                        const v36 = [6.345269750596144e+307,1.5426121797865451e+308,-1.0,1.0763754168130034e+308,-1.0165609707268582e+308,-2.220446049250313e-16,4.1652134965708285,Infinity,8.22884515469082e+307,-1000000000.0];
                        function F37(a39, a40, a41) {
                            if (!new.target) { throw 'must be called with new'; }
                            const v42 = this.constructor;
                            try { new v42(v35); } catch (e) {}
                            a39[3] = a39;
                        }
                        new F37(v36);
                    }
                }
                new C27(512, 706, 706, 1);
                this.e = this;
            } catch(e46) {
            }
        }
        const v50 = new Int16Array(41);
        v50.fill(725);
        const v54 = [13];
        class C55 {
            constructor(a57, a58, a59) {
            }
        }
        new Uint16Array([-2023,8,-5,-19182,268435441]);
        const o69 = {
            "arguments": v54,
            "c": "function",
            valueOf(a64, a65, a66, a67) {
                const o68 = {
                    [undefined]: v54,
                };
                return undefined;
            },
            "type": "function",
        };
        new Worker(f15, o69);
    }
}
const v71 = new C6(13, -256);
new C6(v71, 13);
new C6(v71, 127);
[1.7762663734983946,-734602.8649830951,1000000000000.0,2.220446049250313e-16,-474.1348693800667];
const v75 = [NaN,-2.0];
const v76 = [330956.77940006857,3.0,2.0,5.0,470.607167523709,0.8265506351418377,-4.0,7.108269743738404,-1e-15];
function F77() {
    if (!new.target) { throw 'must be called with new'; }
}
const v79 = new F77();
const v80 = [F77,F77,F77];
function f81(a82) {
    try {
        v80.some();
    } catch(e84) {
        e84.stack;
        v75[8] = v75;
        function F86(a88) {
            if (!new.target) { throw 'must be called with new'; }
            const v89 = this.constructor;
            try { new v89(); } catch (e) {}
            try {
                const v93 = new Int32Array(12);
                for (const v94 in v93) {
                }
            } catch(e95) {
            }
        }
    }
    return a82;
}
v80.toString = f81;
const o102 = {
    __proto__: v80,
    "e": v79,
    [v79](a97, a98) {
    },
    "arguments": v76,
    set b(a100) {
    },
    get a() {
        return this;
    },
};
o102.toString(F77, o102);
