class C3 {
    set c(a5) {
        class C6 {
        }
        new C6(C6, C6);
        function F8(a10, a11, a12, a13) {
            if (!new.target) { throw 'must be called with new'; }
            const v16 = new C6(11);
            v16.lastIndexOf(this);
        }
        const v19 = a5.iterator;
        const o31 = {
            [v19]() {
                let v21 = 10;
                const o30 = {
                    next() {
                        v21--;
                        const v25 = 0 == 0;
                        const o29 = {
                            "done": v25,
                            127: "includes",
                            [1e-15]: -56684,
                            p(a27, a28) {
                                return a27;
                            },
                            "value": v21,
                        };
                        return o29;
                    },
                };
                return this;
            },
        };
    }
}
new C3();
const v33 = new C3();
new C3();
function F38(a40, a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "h", { configurable: true, enumerable: true, value: this });
    try {
        a41.a = a43;
    } catch(e44) {
    }
    try {
        this.b = a42;
    } catch(e45) {
    }
    try {
        this.h = "includes";
    } catch(e46) {
    }
}
new F38(v33, v33, 512, 512);
new F38(v33, 9007199254740990, 9007199254740990, 1073741825);
const v49 = new F38(v33, C3, 1073741825, 9007199254740990);
class C55 {
    static #b;
    constructor(a57, a58) {
        try {
            a57.#b = 860736081;
            new Uint8Array();
            -2.241327492701015 & 9007199254740991;
        } catch(e64) {
        }
    }
}
new v49(512);
