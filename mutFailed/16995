const v0 = [1938815823,-2147483648,1073741825,26032,-42281,15];
const v1 = [1287418746];
let v2 = [-1548417259,268435440,1073741824,1557492797,1287889305,-2147483647,-2147483648,-8,-47191];
class C3 {
    o(a5, a6) {
        let v4 = this;
        try { v2.map(v1, a5); } catch (e) {}
        v2 ||= a6;
        super.c = a5;
        v4 = a6;
        return a6;
    }
    static 4 = v2;
    valueOf(a9, a10) {
        [-8];
        const v12 = [-4294967296,3,-4294967296,1585923651];
        [-39345,-721753341,-65535,1830061051,-36335,536870912,-7963,679636524,11,1];
        let v14 = v2 * v2;
        v14 /= v14;
        return v12;
    }
}
const v15 = new v0();
const v16 = new C3();
new C3();
function F18(a20, a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a22;
    } catch(e24) {
    }
}
const v25 = new F18(v15, v2, v2, v2);
new F18(v25, v1, v2, v2);
const v27 = new F18(v15, v0, v1, v0);
function f28() {
    return v27;
}
function f29() {
    return v16;
}
const o34 = {
    4294967296: 1733353236,
};
const o36 = {
    get h() {
        return o34;
    },
    ...o34,
};
