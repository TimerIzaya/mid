function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = -14189;
    } catch(e3) {
        const v5 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
        try {
            v5.forEach(Float64Array);
        } catch(e7) {
        }
    }
}
try { WeakMap.apply(Int32Array, Date); } catch (e) {}
const v13 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
const v14 = new F0();
new F0();
const v16 = new v13();
v16[-2] = v16;
new Float64Array(14);
function f21() {
    ("-536870912").normalize;
    ("-536870912").g;
    const v27 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    for (let v28 = 0; v28 < 5; v28++) {
        function f29() {
            try {
                v27.forEach();
            } catch(e31) {
                e31.a = e31;
            }
            const v33 = Symbol.toPrimitive;
            Int32Array.for(v33.description);
            v33.description;
            Symbol.for();
            return v33;
        }
        f29();
        %OptimizeFunctionOnNextCall(f29);
    }
    new Uint16Array(209);
}
for (let v42 = 0; v42 < 10; v42++) {
    3811 >>> 3811;
    const v46 = Float64Array.of();
    const v47 = v46?.set;
    try { new v47(3811); } catch (e) {}
    v46.toString = f21;
    new Date();
    const v52 = Array(36862);
    try { v52.sort(36862); } catch (e) {}
}
class C56 extends F0 {
    constructor(a58, a59) {
        super();
        const v62 = new Uint16Array(2785);
        v62.fill();
        const o65 = {
        };
        gc(o65);
        v16[-2];
        const v71 = Array(19793);
        const v72 = [v71,v71,v71,v71,v71];
        [v72,v72,v72];
        [Uint32Array];
        const o78 = {
            "execution": "sync",
            get h() {
                return this;
            },
            "type": "bigint",
            "type": "bigint",
            "type": Uint32Array,
        };
        gc(o78);
    }
    536870887;
    static get g() {
        super.subarray();
    }
    toString(a83, a84, a85, a86) {
        eval("bigint");
    }
}
const v93 = new C56(v14, "cXax");
const v94 = new C56(v93, "cXax");
new C56(v94, "cXax");
function f97(a98) {
    const o102 = {
        __proto__: 2,
        213: a98,
        ...a98,
        "g": 2,
        p(a100, a101) {
            return 2;
        },
    };
    return o102;
}
f97(v16);
%PrepareFunctionForOptimization(f97);
const v104 = f97();
%OptimizeFunctionOnNextCall(f97);
F0(v104);
