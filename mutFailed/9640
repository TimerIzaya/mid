~419035685;
class C7 {
    static #p(a9, a10, a11) {
        function f16(a17, a18, a19, a20) {
            a17.BYTES_PER_ELEMENT = a17;
            const v21 = 3 | a18;
            v21 - v21;
            const v23 = a17 / a17;
            const v24 = v23 % v23;
            a18 < a17;
            a19 >>> a19;
            const o30 = {
                n(a28, a29) {
                    return 3;
                },
            };
            return v24;
        }
        for (let v31 = 0; v31 < 625; v31++) {
            f16(Uint8Array);
        }
        return this;
    }
    n(a36, a37, a38, a39) {
        try { a39.cos(this, 9007199254740990); } catch (e) {}
        try {
            a37.__proto__ = this;
        } catch(e41) {
        }
        return a39;
    }
}
C7.d = C7;
new C7();
const v43 = new C7();
function f44() {
    class C47 {
    }
    const v48 = new C47();
    const v51 = v48[Symbol.unscopables];
    class C52 extends Set {
        ["next"] = v51;
    }
    new C52();
    return C7;
}
v43[Symbol.toPrimitive] = f44;
new C7();
-34576n === -34576n;
const v63 = [];
v63[Symbol.toPrimitive] = f44;
try { v63.copyWithin(-1888, -34576n); } catch (e) {}
const v69 = -Date.parse();
class C70 {
    static {
        for (let v72 = 0; v72 < 25; v72++) {
            function f73(a74, a75, a76, a77) {
                a74 | a74;
                a75 + a75;
                try { a74.call(); } catch (e) {}
                const v81 = a75--;
                Math.atan2(-2147483647, -1304034723 && 2.220446049250313e-16);
                const v89 = Number.isNaN(v81);
                let v91;
                try { v91 = Math.round(this); } catch (e) {}
                -v91;
                Math.tan();
                const v94 = new Date(Date);
                let v95;
                try { v95 = v94.setDate(v72); } catch (e) {}
                v95 * v95;
                try { a74(); } catch (e) {}
                a75 & a75;
                let v99;
                try { v99 = a74(); } catch (e) {}
                const v100 = v99?.constructor;
                try { v100(); } catch (e) {}
                a76 << a76;
                arguments[2];
                const v105 = arguments[2];
                try { v105.findLast(v72); } catch (e) {}
                ("by").normalize();
                class C109 {
                }
                function f111() {
                    const v113 = Array();
                    v113[3] = 65535;
                    return v113.pop();
                }
                function f115() {
                }
                f115.g = v89;
                f115.g = f115;
                f115.d = f115;
                BigUint64Array * 536870887;
                function f118(a119, a120) {
                }
                f118();
            }
            try { new f73(v69, v43, v72, -34576n); } catch (e) {}
            f73(v72, v69, v63);
            for (let v124 = 0; v124 < 5; v124++) {
                v124 >> v124;
                f73(this, v124, v124);
            }
        }
    }
}
C70.d = v63;
C70.d = C70;
