function f3(a4, a5) {
    const o19 = {
        "g": -367476578n,
        "c": -65537n,
        "a": -65537n,
        ...-367476578n,
        "h": -1077554607n,
        [-1077554607n](a7, a8) {
            const o9 = {
            };
            try {
                o9.d = a7;
            } catch(e10) {
            }
            try {
                const o11 = {
                };
                o11.d = a7;
                o11.b = a8;
            } catch(e12) {
            }
            try {
                const o13 = {
                };
                o13.d = a7;
                o13.b = a8;
                o13.g = this;
            } catch(e14) {
            }
            try {
                const o15 = {
                    "h": a5,
                    "f": -367476578n,
                    [-65537n]: a4,
                    "e": a4,
                    [f3]: -65537n,
                };
                o15.d = a7;
                a7.b = a8;
                o15.g = a7;
            } catch(e16) {
                o9 === e16;
                try {
                    a7.valueOf = a7;
                } catch(e18) {
                }
            }
            return a7;
        },
    };
    return o19;
}
f3(-1077554607n, -367476578n);
f3(-65537n, -367476578n);
const v22 = f3(-65537n, -65537n);
[2.0,3.0];
[1.7976931348623157e+308,-316524.7483829922,-1e-15,-304.84427850689167,-4.0,-4.627266362461057,401183.5491042461];
[-5.0,-1.7976931348623157e+308,1000000.0,-2.220446049250313e-16,0.8114100458295911,-2.220446049250313e-16,-1.7976931348623157e+308,-9.599789281974102,1000000000.0];
const v26 = [NaN,2.0,617466.378858252,-1.0,-283066.85925407463,4.0];
try {
    new f3(9007199254740992, v26);
} catch(e29) {
}
[-0.0,0.9071377106749556,-2.2250738585072014e-308,1000000000000.0,-9.042298847589132];
[-193.09533262245782,-1000000000000.0,3.586712792542155,1.6962574768526506e+308,8.494402448265767,-2.2250738585072014e-308];
class C33 {
    constructor(a35, a36, a37, a38) {
        function F39(a41, a42, a43) {
            if (!new.target) { throw 'must be called with new'; }
            this.constructor = f3;
            Math.trunc(a37);
            const v45 = a35.constructor;
            try { new v45(); } catch (e) {}
        }
        new F39();
    }
}
new v22();
new v22();
