new Int16Array(64);
new Float32Array(228);
new Uint16Array(3);
function F16() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -1052649622;
        const v21 = -(-7);
        Math.tan(v21 ** v21);
    } catch(e24) {
    }
}
function F25(a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    const v29 = this.constructor;
    v29.length = -1.7976931348623157e+308;
    try { new v29(F16, a27, F16, v29); } catch (e) {}
    new F25();
}
function f32(a33, a34, a35, a36) {
    [-3,-11210,65535,268435456];
    const v40 = [-9223372036854775808,1415432483,1];
    function f43() {
    }
    function f44(a45, a46) {
        const v48 = Symbol.toPrimitive;
        a45[v48] = f43;
        const o53 = {
            "e": a45,
            "g": a46,
            [v48]() {
            },
            "maxByteLength": 60241,
            get d() {
            },
            "h": -1000000.0,
            ...a45,
            "b": v40,
            "d": Int16Array,
            [60241](a52) {
            },
        };
    }
    new Uint8Array(268435440);
    f44(v40);
    f44(a34);
    const o59 = {
    };
}
f32(-9007199254740992);
