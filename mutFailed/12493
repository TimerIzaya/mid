const v0 = [65535,-67554944,689729669,5];
function f1() {
    function F2(a4, a5) {
        if (!new.target) { throw 'must be called with new'; }
        for (let v6 = 0; v6 < 5; v6++) {
        }
        const v7 = this.constructor;
        const t6 = "9007199254740992";
        t6["255"] &= 7;
        const v13 = new Float32Array(2);
        v13[1] = v13;
        try { new v7(); } catch (e) {}
    }
    return v0;
}
v0[Symbol.toPrimitive] = f1;
const v17 = [9910,-9007199254740992];
const v18 = [2,-128];
v18[Symbol.toPrimitive] = f1;
function f21(a22, a23) {
    const o30 = {
        ...a23,
        __proto__: v0,
        "a": a22,
        1024: v18,
        [a23]: a23,
        "d": v18,
        p(a25) {
            const v27 = [a25,a22];
            Reflect.apply(a23.findLast, v17, v27);
            return a23;
        },
        ...a22,
    };
    return o30;
}
const v31 = f21(v17, v18);
f21(v0, v0);
f21(v18, v17);
let v46 = "NEdYi";
const o56 = {
    "f": "m",
};
o56[2705] = -1331324999;
function F57(a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
    const o66 = {
        set d(a62) {
            Object.defineProperty(this, "cos", { writable: true, configurable: true, enumerable: true, value: -1331324999 });
            this.cos = a62;
            for (let v63 = 0; v63 < 25; v63++) {
            }
            try { this["cos"](); } catch (e) {}
        },
    };
    Object.defineProperty(o66, "cos", { configurable: true, value: Uint8ClampedArray });
    class C67 {
        constructor(a69) {
            o66.d = a69;
        }
    }
    new C67();
}
new F57();
new Int32Array(v31, 127, -943742048);
v46 = "repeat";
const t65 = "repeat";
t65[-726546013n] = v0;
o56[2705] = o56;
const o87 = {
};
try {
    o87.e = 1;
} catch(e88) {
}
try {
    const o89 = {
    };
    o89.e = 1;
    o89.f = "repeat";
} catch(e90) {
}
try {
    const o91 = {
    };
    o91.f = f21;
    o91.e = 1;
    o91.f = "repeat";
    o91.h = "repeat";
} catch(e92) {
}
try {
    const o93 = {
    };
    o93.e = 1;
    o93.f = "repeat";
    o93.h = "repeat";
} catch(e94) {
}
function f96(a97, a98, a99, a100) {
    return eval;
    return a98;
}
