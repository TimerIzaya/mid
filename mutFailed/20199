7.283692970325745 + 7.283692970325745;
function f7(a8, a9) {
    const o12 = {
        "e": 3.601267322246791,
        ...a8,
        get a() {
            this.__proto__;
            return -551915.8047892967;
        },
        "b": 3.601267322246791,
        ...7.283692970325745,
        ...a8,
        ...a9,
    };
    o12.e = o12;
    return o12;
}
f7.name;
const v14 = f7(-39160884n, -39160884n);
f7(849564019n, -39160884n);
f7(-5n, -5n);
let v17 = -5.160144283511562e+307;
v17--;
let v19 = -338.7491556798858;
v19--;
const v22 = [1.7976931348623157e+308,-413892.0889157214,1.3273338355683957e+308];
try { v22.includes(v14); } catch (e) {}
const v24 = [2.6106058781874725e+307,1.0,285529.63794448716];
const v25 = [8.054972930120389,0.5017077090516519,-Infinity,-4.0,-6.00897007142827,1.0,-6.545477670141786e+307,-3.0,1000000000000.0,-1.4537848745596893e+308];
try { v25.copyWithin(7.283692970325745, 7.283692970325745); } catch (e) {}
class C27 {
    static 6 = v24;
    static #o(a29, a30) {
    }
    [v24];
    constructor(a32, a33) {
        try { a32.map(a32); } catch (e) {}
        function f35(a36, a37) {
            -34834n / -34834n;
            return a37;
        }
        a32.toString = f35;
        /W(jy2)/udy.flags;
        let v46 = v24[C27];
        v46 **= Uint8Array;
        function f47(a48, a49, a50, a51) {
            a48.name = a48;
            return a50;
        }
        for (let v52 = 0; v52 < 625; v52++) {
            let v53 = f47(Uint8Array, 2, v52);
            v53--;
            try {
                a32 &= v17;
            } catch(e55) {
            }
        }
    }
    static 1014337901 = v19;
    4294967295;
    #n(a57, a58, a59, a60) {
    }
    static f;
    #toString(a62, a63, a64, a65) {
    }
    static [v24] = v17;
    /*
    constructor(a67, a68, a69) {
        const v71 = new BigUint64Array();
        const o72 = {
            ...v71,
        };
        v24[1073741825] = a69;
        v24[12] = this;
        a68 ** super[a68];
    }
    */
    static 4294967296;
    3978 = v19;
    #f;
    228 = v19;
}
function f75(a76, a77) {
    %VerifyType(a76);
    new Int8Array(v24);
    return 1000.0;
}
C27.toString = f75;
const v80 = new C27(v24, v25, v22);
new C27(v80, v80, v25);
208 >>> 208;
const v87 = new Uint8Array(208);
try { BigInt64Array(-551915.8047892967, BigInt64Array, Uint8Array); } catch (e) {}
new BigInt64Array();
for (const v91 of v87) {
    for (let v92 = 0; v92 < 5; v92++) {
        "p" + v92;
    }
}
for (let i97 = 256n, i98 = 10;
    (() => {
        i98 + i98;
        const v100 = i97 < i98;
        v100 && v100;
        return v100;
    })();
    ) {
}
class C106 {
}
try { new C106(); } catch (e) {}
class C108 {
}
function f109(a110, a111, a112, a113) {
    for (let v114 = 0; v114 < 5; v114++) {
    }
}
