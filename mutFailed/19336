for (let v1 = 0; v1 < 5; v1++) {
    for (const v7 of "m") {
    }
}
function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
}
try { Float32Array.bind(); } catch (e) {}
const v15 = [1.7976931348623157e+308,-642666.9818654677,-1000000000000.0];
const v18 = [F9,-4294967295];
Reflect.apply(F9.includes, v15, v18);
const v22 = [239995.5219320082];
const v23 = /(?<a>.)\k<a>?/vdimsy;
let v24;
try { v24 = v23(v23); } catch (e) {}
const v25 = [v24,v24,v24,v24,v24];
function f26() {
    const v27 = -v25;
    const t18 = v27 && v25;
    t18[v27] &= v24;
    return v27;
}
for (let v29 = 0; v29 < 1250; v29++) {
    f26();
}
[-3.0,0.6385019880103033,-2.2250738585072014e-308];
const v32 = [-4.659827884319608,-1000.0,-3.0,-748.6654364051049,1.7935764561303533e+307];
const v34 = [v22,v22,[v32,v32,v32,v22],-2147483647n];
[v34,v34,v22,v32,v22];
[5,16];
[-1505149494];
[-1024,1000,512,317716428,1871850586,1119373159,5,26102,716947177];
Date.toString = Date;
new Date(-9223372036854775807, -9223372036854775807, Date, -9223372036854775807);
