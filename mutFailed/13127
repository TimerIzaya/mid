const v1 = new Date();
class C2 {
    n(a4, a5) {
        this[this] = Date;
        try {
            new Date(0.14170776831235277);
        } catch(e8) {
        }
        return v1;
    }
    toString(a10, a11) {
        delete this[v1];
        for (let i15 = 0, i16 = 10; i15 < i16; i15++, i16--) {
            [2.0,1.684837005785123e+308];
            [968.417764686287,9.035318282464576,3.0,1000000000000.0,-5.0,-3.0,-1.0];
            [NaN,0.6552928036411486,1.3052992774904201e+308,613029.1145992021,0.6000473506369673,1000000000000.0,1e-15,0.482404193966084,2.2250738585072014e-308];
        }
        return this;
    }
}
const v27 = new C2();
const v28 = new C2();
function f29() {
    try {
        new C2();
    } catch(e31) {
    }
    return v27;
}
v28.constructor = f29;
const v32 = v28?.constructor;
let v33;
try { v33 = new v32(); } catch (e) {}
const v34 = new C2();
function f35(a36, a37) {
    const o39 = {
        "type": "function",
    };
    return a36;
}
v34.constructor = f35;
const v40 = v34?.constructor;
try { new v40(); } catch (e) {}
88338999 - 88338999;
7 << 7;
const v53 = [0.00952483356421907,-3.0,2.220446049250313e-16];
Object.defineProperty(v53, "toString", { configurable: true, value: f35 });
function f54() {
    return v53;
}
class C55 extends f54 {
    a;
}
C55.arguments;
const v57 = new C55();
function f58() {
    function f59() {
        try {
            v40.valueOf = f29;
        } catch(e61) {
        }
        return v33;
    }
    return f59;
}
function f62(a63) {
    let v65 = 6;
    let v66 = 2;
    const v67 = --v65;
    v66--;
    Math.imul(v65, v66);
    v67 ** -35696;
}
Object.defineProperty(v57, "toString", { writable: true, get: f58, set: f62 });
const v71 = new C55();
Math.log1p(0.9014175581798928);
const v75 = delete v71[1];
v75 || v75;
Math.expm1(-10);
const v79 = -10 * v53;
Number.isNaN(v79);
const v82 = Math.acos(v79);
v82 >>> v82;
v57 + v79;
