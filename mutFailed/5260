function f0() {
}
const v1 = [f0,f0,f0];
[f0,v1,v1,v1,f0];
class C4 {
    toString(a6) {
        const t6 = super["bigint"];
        t6[9] = 0;
    }
}
const v9 = new C4();
v1.length = v9;
[v1,v1,v1];
new Float32Array([798019179,-9007199254740992,-8195,-4294967297,1420574578,9007199254740991,-1493424054,-2147483649,8,47842]);
class C15 {
    static {
        try {
        const t0 = "boolean";
        t0(this);
        } catch (e) {}
    }
}
class C21 {
}
const v22 = new C21();
function F23(a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    ~a26;
    const v28 = this.__proto__;
    const v29 = v28?.constructor;
    try { new v29(v22); } catch (e) {}
    v28.toLocaleString();
}
new F23();
new F23();
for (let i37 = 0, i38 = 10;
    (() => {
        const v39 = i37 < i38;
        class C40 extends Date {
        }
        let v41;
        try { v41 = new C40(); } catch (e) {}
        v41.constructor;
        return v39;
    })();
    i37++) {
}
-Infinity;
Symbol.iterator;
[NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0] >>> Symbol;
function f55(a56, a57, a58, a59) {
    return arguments;
}
class C65 {
}
new Int8Array();
let v68 = 0;
do {
    v68++;
} while (v68 < 9)
/4H/gvisy.compile(/[m]/gvdimsy);
