const v0 = [];
[512,127,-60337,2147483649,-268435456,536870889,128,59652];
const v2 = [-256,-9223372036854775807,-13323,536870912,1073741825,-9223372036854775808,512,-13,59393,910640326];
const v3 = [9007199254740992,-14,7,268435456,14,255,381474259,-33315];
const v8 = 2 - 2;
try { v3.push(v8, v2, v3, v8, 1e-15); } catch (e) {}
v0["ownKeys"](2, 2, 2);
const v13 = Symbol.iterator;
const o22 = {
    [v13]() {
        let v15 = 10;
        const o21 = {
            next() {
                v15--;
                const v19 = v15 == 0;
                const o20 = {
                    "done": v19,
                    "value": v15,
                };
                return o20;
            },
        };
        return o21;
    },
};
const v24 = new Int32Array(2);
1676 - 1676;
Object.defineProperty(o22, v8, { writable: true, get: Symbol, set: Symbol });
var c = v24;
new Uint8ClampedArray(977);
new Float64Array(256);
new Uint8Array(1275);
new Float64Array(1676);
2 - 2;
const v41 = new Uint8ClampedArray(2);
const v42 = v41?.constructor;
try { new v42(v3, 1e-15, 1e-15); } catch (e) {}
const v45 = new WeakSet();
try { v45.add(v0); } catch (e) {}
function f50(a51, a52, a53) {
    function f54(a55) {
        try {
            const t42 = "function";
            t42.valueOf = a51;
        } catch(e56) {
        }
        for (let v57 = 0; v57 < 32; v57++) {
            v45["p" + v57] = v57;
        }
        for (let v60 = 0; v60 < 100; v60++) {
            f50(a55, 1.0);
        }
        return a53;
    }
    try { f54.toString(); } catch (e) {}
    a52.toString = f54;
    try { a51.codePointAt(a52); } catch (e) {}
    a53 & a53;
    const o66 = {
        get d() {
            return a52;
        },
        ["JG3"]: a52,
        "c": a53,
    };
    return o66;
}
try { f50(v0, v0, Uint8ClampedArray); } catch (e) {}
f50("JG3", f50("function", v45));
f50("JG3", WeakSet);
