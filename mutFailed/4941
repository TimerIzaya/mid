let v0 = 128;
new Int16Array(v0);
new Float32Array(1899);
new Date();
const v10 = new Int16Array(1371);
v10.lastIndexOf(1371, v0);
new Float64Array(3102);
const v18 = new Uint8ClampedArray(3);
class C19 {
    constructor(a21, a22, a23, a24) {
        const v25 = this.constructor;
        try { new v25(3983, a24, this, this); } catch (e) {}
        for (let v27 = 0; v27 < 5; v27++) {
            v18[v27] = a24;
        }
    }
}
const v32 = new Int32Array(-13);
new Uint32Array(v32);
([127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649]).toSpliced(-1148418937, -1148418937);
new WeakMap();
class C40 {
    #p(a42, a43, a44, a45) {
        super.m();
    }
    p(a48, a49) {
        class C56 {
            static #p(a58) {
                this.#p();
            }
        }
    }
    static a;
    static {
        this >> this;
        this[6];
    }
    static m(a64) {
        gc();
        v0--;
        const v68 = [-6.741855211610779,553.594505585577,1.0637276618206825e+308];
        class C69 {
            static [v68];
        }
    }
}
const v70 = new C40();
const v71 = new C40();
function f72(a73, a74) {
    return a74;
}
Set.toString = f72;
new C40();
function F79(a81) {
    if (!new.target) { throw 'must be called with new'; }
    a81 | a81;
    const v83 = this?.constructor;
    try { new v83(3n); } catch (e) {}
}
let v85;
try { v85 = v71.getMonth(1000); } catch (e) {}
v85 % v70;
try {
    C40();
} catch(e88) {
}
