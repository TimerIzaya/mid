const v0 = [1166935768,13393,-1073741824];
const v1 = [-163408162,10,-5465,9007199254740990,44863,5,37954,479448930,128];
const v2 = [1591688970,-128,-831151149,-1024,29089,268435456,4294967295];
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a5;
    } catch(e7) {
    }
    try {
        this.e = a6;
    } catch(e8) {
    }
    try {
        this.f = v0;
    } catch(e9) {
    }
}
let v10 = new F3(v0, v1);
const v11 = new F3(v0, v2);
const v12 = new F3(v2, v1);
function F13(a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a17;
    } catch(e18) {
    }
    try {
        this.h = a15;
    } catch(e19) {
    }
}
const v20 = new F13(v12, v0, v11);
const v21 = new F13(v20, v1, v11);
new F13(v21, v0, v12);
/EQab\b\d\bcd?/vdimsy;
const v24 = /(o9DE)/gvis;
/[iM*]/vd;
10000n + v1;
let v37;
try {
const t0 = -536870912n;
v37 = t0(2n, -536870912n);
} catch (e) {}
const v40 = [-174534415n,Float64Array,2147483648n];
for (let v43 = 0; v43 < 32; v43++) {
    v40["p" + v43] = v43;
}
const v46 = [v37,v37,v37];
let v47 = [-174534415n,v46,10000n];
v46.length &= v11;
const v48 = delete v46[67];
const t51 = 1e-15;
const v51 = new t51();
({"byteOffset":v47,} = v51);
v40.length;
v46.unshift(-536870912n, 1904048380);
v37();
-3.5885237423067196;
new Int8Array(964446029);
let v67 = 0;
v67++;
v67 < 3;
const v74 = new Uint32Array(16);
const v77 = new Uint32Array(257);
v77[139];
v10 &&= 1073741824;
function f79(a80, a81) {
    const o82 = {
    };
    o82.e = f79;
    o82.b = a81;
    const o83 = {
    };
    o83.b = a81;
    o83.c = a80;
    const o84 = {
    };
    o84.e = f79;
    o84.b = a81;
    o84.d = a81;
    function f86(a87) {
        return v48;
    }
    this.onmessage = f86;
    v74.length = 1073741824;
}
Uint32Array || Int32Array;
[Uint32Array,3.5885237423067196];
const o94 = {
    "arguments": v24,
    "type": "function",
};
new Worker(f79, o94);
