class C3 {
    static toString(a5, a6) {
        try { a5(this, -2.0, a5, a5); } catch (e) {}
        let v10 = 2.6980915099717713;
        ~v10;
        const v12 = -2.0 >> -2.0;
        Math.sin(1073741825);
        Math.acosh(v12);
        v10++;
        return this;
    }
    static 64;
    static [2.220446049250313e-16] = -1;
    297195189 = 2.220446049250313e-16;
}
const v16 = new C3();
const v17 = new C3();
const v18 = new C3();
class C19 extends C3 {
    constructor(a21, a22, a23) {
        super();
        const v24 = v16.g;
        try {
            super.resolve(a21, v17, v16, this);
        } catch(e26) {
        }
        const v27 = C3 << v24;
        try { v24(v27); } catch (e) {}
    }
    get g() {
        function f30() {
            return this;
        }
        return this;
    }
}
const v31 = new C19(C19, C3, v17);
const v32 = new C19(C19, C19, v31);
new C19(v32, v32, v18);
for (let v39 = 0; v39 < 65; v39++) {
    const o40 = {
    };
    new Proxy(C19, o40);
}
try {
    v18.valueOf = v32;
} catch(e48) {
}
function f63(a64, a65, a66) {
    const o89 = {
        n(a68, a69) {
            class C78 extends Int32Array {
            }
            function F84() {
                if (!new.target) { throw 'must be called with new'; }
            }
            class C87 {
                static get b() {
                }
            }
            return a65;
        },
    };
    return a66;
}
Math.max(159241345n);
Math.cosh(60524);
60524 % f63;
