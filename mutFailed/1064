const v1 = new WeakMap();
function f2(a3) {
    new Uint32Array(805);
    new BigUint64Array(256);
    const v12 = new Float64Array(3215);
    return v12;
}
v1[Symbol.toPrimitive] = f2;
function f18() {
    const v21 = new Int16Array(1269);
    for (const v22 in v21) {
    }
    return "-453191390";
}
f18[Symbol.toPrimitive] = f18;
function f28() {
    return v1;
}
class C29 extends f28 {
    o(a31, a32, a33) {
        const t20 = "number";
        delete t20[6];
        try {
            this.valueOf = a32;
        } catch(e35) {
        }
        return v1;
    }
    static n(a37, a38, a39) {
        ("-453191390")[3];
        return "number";
    }
    [f18] = f18;
}
new C29();
new C29();
const v43 = new C29();
function f44(a45) {
    Promise.race();
    return Promise;
}
v43[Symbol.toPrimitive] = f44;
Uint32Array[1] = v43;
const v51 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
try {
    v51.__proto__ = v51;
} catch(e52) {
}
