class C3 {
    set g(a5) {
        const v7 = new WeakSet();
        try {
            this.c = v7;
        } catch(e8) {
        }
        [C3,this,this,"string",v7];
        ["string",-347.41438148135353,v7,WeakSet,this];
        [a5];
        function f12() {
            return f12;
        }
        function f13() {
            for (let v14 = 0; v14 < 5; v14++) {
                return f12;
                class C15 {
                }
            }
            return f13;
        }
        %OptimizeFunctionOnNextCall(f13);
        f13();
        v7[10] = a5;
        [-1e-15,2.2250738585072014e-308,0.4082534205949193,0.6988441974508615,625876.8997367306,1e-15,-1.4900124360939843e+308,1.7976931348623157e+308,-Infinity,2.220446049250313e-16];
        [-1000000000.0];
        const v19 = [1.7927550471028923e+308,-1000000000.0,-2.0,-1e-15,-2.220446049250313e-16];
        try { v19.copyWithin(a5, a5, a5); } catch (e) {}
    }
    d;
    ["string"] = "string";
    static 64 = "string";
    static h;
    set h(a22) {
        const o25 = {
            "maxByteLength": 2462,
        };
        const v27 = new SharedArrayBuffer(2462, o25);
        new BigUint64Array(v27);
    }
    #a;
}
C3[64] = C3;
const v30 = new C3();
v30.d = v30;
const v31 = new C3();
const v32 = new C3();
-(-536272660n);
-536272660n ^ -536272660n;
const v38 = [-1324409403,536870912,-9223372036854775808,9,536870889];
v38[4];
[6,12,127,9007199254740990,2147483647,62989,7,8,1046,47869];
const v41 = [9];
class C42 {
    [v32] = v38;
    c = v30;
    static [v30];
    constructor(a44, a45, a46) {
        a45 ^ a45;
        v30 != this;
        gc.g = gc;
        try { ("sync").charCodeAt(a44); } catch (e) {}
        const v53 = ("sync")?.charCodeAt;
        try { new v53(a45); } catch (e) {}
        const o55 = {
            "execution": "sync",
            "type": "minor",
        };
        o55.execution = o55;
        gc(o55);
        try {
            gc();
        } catch(e58) {
        }
        d = a46;
    }
}
C42.name = C42;
try { C42.call(v41); } catch (e) {}
const v60 = new C42(v31, -536272660n, -1024n);
v60.d = v60;
new C42(v30, -4096n, -1024n);
new C42(v31, -1024n, -4096n);
for (let v63 = 0; v63 < 5; v63++) {
    function f64() {
        for (let [i69, i70] = (() => {
                switch (f64) {
                }
                -0;
                -10;
                return [0, 10];
            })();
            (() => {
                i69 >>> i69;
                i69++;
                let v73 = i69 - i69;
                v73++;
                i70 << i70;
                return i69 < i70;
            })();
            (() => {
                i69 - i69;
                i69 != i69;
                i70 !== i70;
                let v82 = i69++;
                v82--;
                i70--;
            })()) {
        }
        return v63;
    }
    try { f64.toString(); } catch (e) {}
    f64();
    %OptimizeFunctionOnNextCall(f64);
}
