function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -256;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
function f7() {
    class C8 {
    }
    return arguments;
    ("of").replaceAll("of");
    return F0;
}
function F12(a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a14;
        class C16 {
            static set f(a18) {
                super.c = v5;
            }
        }
    } catch(e19) {
    }
    try {
        [-0.0,3.5501749464532004,-0.0,-2.220446049250313e-16,0.7626441105891978,-585.9055525866645,1e-15,1000000.0] ** "IxTD";
        this.b = v4;
    } catch(e23) {
    }
}
const v24 = new F12(v6, v4);
const v25 = new F12(v5, v6);
const v26 = new F12(v5, v4);
class C27 extends F0 {
    #e;
    static 1 = v24;
    [F0] = F0;
    constructor(a29, a30, a31) {
        const o34 = {
            "type": "minor",
        };
        gc(o34);
    }
    toString(a37, a38) {
        new f7();
        super.d = v25;
        return F0;
    }
    /*
    constructor(a41, a42) {
        super();
        f7();
        %PrepareFunctionForOptimization(f7);
        f7();
        f7();
        %OptimizeMaglevOnNextCall(f7);
        f7();
        try {
            v5.__proto__ = a42;
        } catch(e47) {
        }
    }
    */
}
const o50 = {
    "execution": "async",
};
gc(o50);
const v52 = new C27(v6, C27);
const v53 = new C27(C27, v6);
let v54 = 1000.0;
class C55 {
    static {
        ++v54;
    }
}
new C27(v53, v52);
function f65(a66) {
    const o74 = {
        __proto__: 2,
        "e": v26,
        set b(a68) {
        },
        [2](a70) {
        },
        213: a66,
        ...a66,
        "g": 2,
        p(a72, a73) {
            return 2;
        },
    };
    return o74;
}
f65(f65);
%PrepareFunctionForOptimization(f65);
const v76 = f65();
%OptimizeFunctionOnNextCall(f65);
f65(v76);
