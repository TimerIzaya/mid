const v1 = new WeakMap(WeakMap, WeakMap);
const v2 = [257,7469,1963755653,1196366082,-8,-269734996];
const v3 = [65536,8,25963,536870888,-1689902942,10,-25235,-11,268435441];
const v4 = [-268435456,24885,-65536,580175046,-12,-65535,-1030,-61689,-4096,-7];
const v5 = v4?.filter;
try { new v5(v1); } catch (e) {}
class C7 {
    static #f = v3;
    static get b() {
        let v13 = v3 + -v1;
        const v14 = ++v13;
        v3 + v3;
        Math.asinh(v1);
        return v14;
    }
    751 = WeakMap;
    static 9 = v1;
    static c;
}
try { new C7(); } catch (e) {}
new C7();
const v19 = new C7();
v19[751] = v19;
new C7();
class C21 extends WeakMap {
    static n(a23, a24, a25) {
        super.e >>>= WeakMap;
        this.a;
        return a25;
    }
    static d;
    get g() {
        const v28 = v2[v2];
        class C29 {
            f = v4;
            static 8;
            #e = v28;
            static #a;
        }
        new C29();
        new C29();
        new C29();
        return this;
    }
}
const v33 = new C21();
v33.c = v33;
const v34 = new C21();
v34.c = v34;
new C21();
let v36 = -24894;
v36--;
-48044;
const v41 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
for (let v42 = 0; v42 < 5; v42++) {
    function f43() {
        let v45 = Float64Array;
        v45 = -4294967295;
        try {
            v41.forEach(v45);
        } catch(e47) {
        }
        const o52 = {
            toString(a49, a50) {
                v42 && v45;
                return -4294967295;
            },
        };
        return v41;
    }
    f43();
    %OptimizeFunctionOnNextCall(f43);
}
