const v1 = new Map();
class C2 {
    constructor(a4) {
        v1[this] = Map;
        try { v1.forEach(a4); } catch (e) {}
    }
    toString(a7, a8) {
        /Zfoo|(bar|baz)|quux/dis;
        const v10 = /\xe2\x81\xa3/gudms;
        /zRxyz{93}/vm;
        return v10;
    }
}
const v13 = new C2(v1);
const v14 = v13[1073741825];
("m").normalize("NFKC");
try { v1.set(v14, "NFKC"); } catch (e) {}
const v19 = new C2(Map);
new C2(v19);
[11,-10,-9223372036854775808];
[-2147483647,129,536870912];
[32607,-4,-6,9007199254740992,6,1073741824,1905577154,2063032835,-1024];
new Date();
function f32() {
    return "NaN";
}
class C33 {
    set f(a35) {
        const o36 = {
            "d": "reduce",
            "c": Date,
            "f": a35,
            "g": a35,
            "a": a35,
            597679773: a35,
        };
    }
    constructor(a41, a42) {
        const v43 = [this,Date,this];
        [v43];
        [Date,"string",v43];
        ("NaN").length;
    }
}
new C33("NaN", "NaN");
const v49 = new C33(f32, "reduce");
new C33("reduce", v49);
let v54 = 0;
while (v54 < 5) {
    try {
        Date();
    } catch(e58) {
    }
    Date[Date];
    /3\u0060/gvs;
    /ab|c/vdms;
    /a\w\11(?<a>.)\k<a>/gd;
    const o63 = {
    };
    v54++;
}
class C65 extends C33 {
    static d = 9007199254740992;
    323 = 3;
    valueOf(a67, a68, a69, a70) {
        for (let v71 = 0; v71 < 32; v71++) {
            Date["p" + v71] = v71;
        }
    }
    e;
    [9007199254740992];
}
C65.d;
for (let v76 = 0; v76 < 32; v76++) {
    Date["p" + v76] = v76;
}
new C65();
new C65();
("boolean").repeat(1000000.0);
function f85(a86, a87) {
    const o90 = {
        set d(a89) {
        },
    };
    const v93 = new Int8Array(268435456);
    return v93;
}
