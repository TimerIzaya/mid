new Array(255);
const v4 = 30 | 30;
new Int16Array(30);
-129;
const v10 = new Int16Array(30);
try { v10.filter(Array); } catch (e) {}
new Int8Array(9);
[-1.7976931348623157e+308,-0.0,-4.0,-780.5448953520373,-1.7976931348623157e+308,1.7976931348623157e+308,-879.2087836743252,1.7976931348623157e+308,597772.3527000882,2.2250738585072014e-308];
[-1.412556720259289];
const v17 = [-5.253559134554371e+307,-2.0,2.0,-1000000000000.0,6.976887080269524,2.2250738585072014e-308,-473.7646896915668,-236.5499769157649,5.511291383143222e+307];
const v18 = v17?.filter;
try { new v18(v17); } catch (e) {}
[-1947047520];
class C21 {
}
try { C21(); } catch (e) {}
for (let i25 = 0, i26 = 10;
    i26--, i25 < i26;
    (() => {
        const v31 = [601759695];
        let v32;
        try { v32 = v31.toString(); } catch (e) {}
        const v33 = [1073741824,1073741823,1376142744,1073741825];
        v33[3] = v33;
        function f35(a36, a37, a38, a39) {
            a36 >>> a36;
            a38 - a38;
            a39--;
            function f43(a44, a45) {
                try { a44.sort(i26); } catch (e) {}
                return v4;
            }
            f43(v33, C21);
            try { v33["find"](..."find", a39, ...v31, ...v33, ...522675525n); } catch (e) {}
            const v51 = new Date();
            Set.e = Set;
            const v53 = new v32();
            Array.add(v51);
            let [v55,,...v56] = v53;
            Number.isNaN(v55.setUTCMilliseconds());
            return v10;
        }
        for (let v60 = 0; v60 < 10; v60++) {
            v60 % v60;
            f35(v60, f35, f35, v60);
        }
        i25++;
    })()) {
}
