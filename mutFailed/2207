new Float32Array();
const t1 = 257;
const v4 = new t1(257);
function f5(a6, a7, a8) {
    a6[22] = a6;
    const o9 = {
        ...a8,
        2: v4,
        268435439: 257,
    };
    return o9;
}
const v10 = new Int8Array(257);
try {
    v10.length = 0;
} catch(e13) {
    const v14 = [748666.7832804511,3.0];
    class C16 extends Float64Array {
        [v14];
    }
}
try { Uint8Array.bind(0); } catch (e) {}
new Uint8Array(16);
210 >>> 210;
function f23() {
    return 4n;
}
f23();
new URIError();
function F29(a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    a31.e = a31;
    const v33 = this?.constructor;
    try { new v33(this); } catch (e) {}
    this.c = a31;
}
new F29(18074);
const v36 = new Uint8ClampedArray(210);
v36[137] = v36;
try { ("isNaN").small(); } catch (e) {}
let v41 = "atan2";
v41++;
function f43() {
    return f43;
}
const o46 = {
    set b(a45) {
    },
    __proto__: f43,
};
[o46];
Float64Array[2] = v41;
new Float64Array(Float64Array);
