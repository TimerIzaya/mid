const v4 = Symbol.toStringTag;
const t1 = "b";
t1[v4] = v4;
let [v5,v6] = "M5Q";
try { new v5(v6, v5, v6, v5); } catch (e) {}
function f8() {
    return "34777";
}
let v11 = "toDateString";
new Uint16Array(2);
const v17 = ("MAX_SAFE_INTEGER")["padStart"](2, v5);
try {
    v17.h = "MAX_SAFE_INTEGER";
} catch(e18) {
}
const v19 = ("Rfd")[5];
v11 = v6;
const v20 = [512,-1,40956,56618305];
const v21 = [5,5,-25117,-16,-65536];
const v22 = [1454998018,16,1528253420,536870888,11];
new v6(128);
function f27(a28, a29, a30) {
    const o31 = {
        "h": "Rfd",
    };
    return o31;
}
f27(f8, v21, v5);
f27(v20, v19, Uint16Array);
f27(v4, v20, Int16Array);
new Int16Array(16);
for (let i38 = 0; i38 < 10, v5; i38++) {
    delete v22[1];
    typeof Int16Array === "undefined";
}
const v48 = new BigInt64Array();
v48.copyWithin(-9223372036854775808);
