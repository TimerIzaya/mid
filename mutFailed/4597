const v2 = new Int16Array(256);
try {
    v2.b = 256;
} catch(e4) {
}
new Int32Array(8);
const v10 = [0.71465078532354,-2.2250738585072014e-308,1.0,-2.2250738585072014e-308,2.2250738585072014e-308,-620.8633845139873,0.0,-1.0,3.3358719500528515];
const v11 = [-7.462188141503825,-3.070207201828062e+307,0.6861416475431791,1000000000.0,-3.0];
const o17 = {
    ...v10,
    [Set](a14, a15, a16) {
    },
    "b": v11,
};
function f18(a19, a20) {
    return a19;
}
[-11,o17];
const o24 = {
    "arguments": v2,
    "type": "function",
};
new Worker(f18, o24);
512 + 512;
const v28 = new Float32Array(512);
v28[351] = v28;
function f29() {
    return v28;
}
try { new f29(); } catch (e) {}
const v31 = [-3454,-4294967297];
const v32 = [-244237019,-24411,9007199254740992,536870912,358234832,2147483648,7,-1352261689,255,-313384507];
const v33 = [55175,-52827,-1024,8,2,14,911614863,63038,-5];
function f34() {
    return v33;
}
function f35(a36, a37, a38, a39) {
    try { a36.copyWithin(v33, v33); } catch (e) {}
    try { a39.pop(); } catch (e) {}
    const o97 = {
        "d": 256,
        "c": a38,
        [a38](a43, a44) {
            try {
                new f29();
            } catch(e46) {
            }
            return a44;
        },
        "b": v2,
        "type": "function",
        "execution": "function",
        m(a48, a49) {
            const v52 = new BigUint64Array(1000);
            const o53 = {
                ...v52,
            };
            class C54 {
                static a;
                c;
            }
            new C54();
            new C54();
            new C54();
            a48[this] = "function";
            Array();
            class C63 {
                static #a;
                static n(a65, a66) {
                    const v67 = super.d;
                    try { v67(); } catch (e) {}
                    return a65;
                }
                [1];
                static [1] = 255;
                [255];
                f = -65536;
            }
            const v69 = new C63();
            const v70 = new C63();
            let v72 = -65536n;
            let v74;
            try { v74 = v69.m(1n, 10000n, 10000n, 1); } catch (e) {}
            function f75(a76, a77, a78) {
                let v79;
                try { v79 = v74(a77); } catch (e) {}
                v79 = a78;
                v72 >>= a78;
                v69[10] = 1n;
                v70.f;
                return v72;
            }
            const v83 = ("gYPHN").normalize("NFKD");
            try {
                ("function").localeCompare(v83);
            } catch(e85) {
            }
            return v83;
        },
        __proto__: v28,
        "g": a38,
        "f": v32,
        "a": v31,
        "g": 8,
        valueOf(a87, a88, a89) {
            const o92 = {
                "maxByteLength": 1821,
            };
            const v94 = new SharedArrayBuffer(59, o92);
            new BigUint64Array(v94);
            return 59;
        },
    };
    return o97;
}
try { f35(v33, Int32Array, v33, Int32Array); } catch (e) {}
const v99 = f35(v33, v33, 512, v31);
v99[129] = v99;
f35(v31, v31, 256, v33);
const v101 = f35(v33, v32, 256, v32);
v101[497] = v101;
const o107 = {
    [7]: 9,
    get g() {
        return this;
    },
    set g(a106) {
    },
};
