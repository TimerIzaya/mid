function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a5;
    } catch(e6) {
    }
}
new F3(759564568n);
new F3(-1n);
new F3(-1n);
new Int8Array(2015);
new Float32Array(3);
new Uint32Array(95);
function f19() {
    ("-536870912").normalize;
    const v22 = ("-536870912").g;
    const v25 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    for (let v26 = 0; v26 < 5; v26++) {
        function f27() {
            try {
                v25.forEach();
            } catch(e29) {
                e29.a = e29;
            }
            const v31 = Symbol.toPrimitive;
            v31.description;
            Symbol.for();
            return v31;
        }
        f27();
        %OptimizeFunctionOnNextCall(f27);
    }
    const v35 = new Uint16Array(209);
    v35[145] = v22;
}
[140693.55968437064,-1.1852842353837545,1.7976931348623157e+308,0.2891882798796017,1000000.0,-405533.57654950966,-476160.9672552756,-1.2913968641498632e+308,-1.7976931348623157e+308,1000000.0];
[0.0,2.439947332797196];
[3.554050204802966,2.0,-0.9893540922478827,835.4687088452995,1.0,-1000000000000.0,537.8799696886636,-129821.05993193889] <= "Z";
const v44 = [-1000.0,351.94489669740733,5.8623101046484845,-160881.40611645568,0.6390643538224362,9.13027568774574];
function f45(a46) {
    a46 ^ a46;
    return 36002;
}
function f48(a49, a50) {
    return f45;
}
function f52(a53, a54, a55) {
    return a54;
}
const v58 = [10000n];
const o59 = {
    "arguments": v58,
    "type": "function",
};
Worker(f52, o59);
const v62 = new Promise(f48);
v62[v44] += 36002;
new BigInt64Array(1000);
new BigUint64Array(127);
try { (-9007199254740992).log2(-9007199254740992); } catch (e) {}
class C72 extends f19 {
}
for (const v73 in C72) {
}
let v76 = 10;
for (;
    (() => {
        const v77 = v76--;
        class C78 {
        }
        const v79 = new C78();
        function f80() {
        }
        function F81(a83, a84, a85, a86) {
            if (!new.target) { throw 'must be called with new'; }
            try { a85.valueOf(); } catch (e) {}
            a86.e = a86;
            const v88 = this?.constructor;
            let v89;
            try { v89 = new v88(v79, a85, a83); } catch (e) {}
            a85[0];
            try { a86.toLocaleString(); } catch (e) {}
            try {
                this.d = f80;
            } catch(e92) {
                C78[[11,-268435456,-2147483648,9007199254740991,-2,536870889,-51277,-9809]] = v89;
            }
        }
        return v77;
    })();
    ) {
}
class C95 {
}
function* f96(a97, a98) {
}
new Int8Array(268435456);
for (let v101 = 0; v101 < 10; v101++) {
    Float64Array.of();
    const v106 = new Date();
    v106.setFullYear();
    Array();
}
