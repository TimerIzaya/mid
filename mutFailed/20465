class C3 {
    constructor(a5) {
        let v6 = super["species"];
        const v8 = new Date();
        v8.b = this;
        v6 = v8;
        let v9;
        try { v9 = a5(Date, 1073741825); } catch (e) {}
        v8.b;
        v9?.[-9.589302741850094e+307];
    }
    set f(a13) {
        const o14 = {
        };
        try {
            o14.e = this;
        } catch(e15) {
        }
        try {
            const o16 = {
            };
            o16.e = this;
            o16.d = this;
        } catch(e17) {
        }
        try {
            const o18 = {
            };
            o18.e = this;
            o18.d = this;
            o18.b = 1073741825;
            class C19 {
            }
            new Uint8ClampedArray(995);
        } catch(e23) {
        }
        try {
            const o24 = {
            };
            o24.e = this;
            o24.d = this;
            o24.h = this;
        } catch(e25) {
        }
    }
}
const v26 = new C3(-9.589302741850094e+307);
const v27 = new C3(-9.589302741850094e+307);
Math.tan(9007199254740992);
const v31 = new C3(1073741825);
function f35(a36, a37, a38, a39) {
    a37.a = a36;
    const o52 = {
        10: "species",
        [11644](a41, a42, a43) {
            try { a37(v27); } catch (e) {}
            Math.atan(-13);
            592674516 * 0.8008648845288834;
            Math.cos(-13);
            592674516 || 0.8008648845288834;
            return 0.8008648845288834;
        },
        "d": a38,
        ..."species",
    };
    return o52;
}
f35(v31, v26, 1073741825, 1073741825);
f35(v31, "species", -13, 1073741825);
f35(v27, v27, 1073741825, -128);
let v58 = 892738.329846452;
const v59 = [-20857,-1303616328,-1864740753,-1023402966,129,-20506,7,8229,-53914];
class C60 {
}
let v61 = 0;
Math.fround(v61++);
v59[2] = v59;
let v66 = undefined;
const o75 = {
    "type": "lastIndexOf",
    "type": "lastIndexOf",
    n(a69, a70) {
        function f71() {
            return f71;
        }
        class C72 extends f71 {
        }
        v58 &= C72;
        return this;
    },
    set b(a74) {
    },
};
o75.f = -128;
v66 = o75;
o75.f = o75;
function F76() {
    if (!new.target) { throw 'must be called with new'; }
    const v78 = this?.constructor;
    v78.d = v78;
    try { new v78(); } catch (e) {}
}
function f80() {
    return C60;
}
function f81(a82) {
    "species" <= a82;
}
Object.defineProperty(F76, "d", { writable: true, configurable: true, get: f80, set: f81 });
new F76();
const v85 = new F76();
function f86(a87, a88) {
    const o97 = {
        n(a90, a91) {
            new Int8Array(1342);
            try {
                v26.a = 1;
            } catch(e96) {
            }
        },
        "a": v85,
    };
    return o97;
}
new Uint16Array(536870887);
%PrepareFunctionForOptimization(f86);
f86().n();
%OptimizeFunctionOnNextCall(f86);
f86();
