const v0 = /E/gy;
/(?: foo )/udim;
/Y9\P{gc=Decimal_Number}?/gdis;
8 <= 8;
-4096 !== -4096;
function f11() {
    return -11;
}
4 >>> 4;
new Uint32Array(4);
const v18 = new Int16Array(13);
try { v18.toSorted(4); } catch (e) {}
function F22() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = 9007199254740991;
}
const v25 = new F22();
const o28 = {
    set h(a27) {
    },
    __proto__: v25,
};
for (const v29 in o28) {
}
try { new Uint8ClampedArray(v0, Int16Array, v18); } catch (e) {}
new Uint8ClampedArray(4096);
let v35;
try { v35 = ("h").fixed(); } catch (e) {}
let v38 = 0;
while (v38 < 10) {
    Reflect.construct(v35, [Reflect,Reflect], Uint8ClampedArray);
    v38++;
}
function f46(a47, a48, a49, a50) {
    return arguments;
}
