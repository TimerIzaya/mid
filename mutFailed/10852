class C3 {
    static g = -418869.9234200455;
    9;
    [1857938913] = 1857938913;
    #e;
    constructor(a5, a6) {
        a5 !== a5;
        a5++;
        try {
            const t9 = "YM6";
            t9.#e = "YM6";
        } catch(e9) {
            e9.g = e9;
            const v10 = e9.message;
            v10[27] = v10;
        }
    }
    809 = 1857938913;
    [-418869.9234200455] = "YM6";
    d;
    static [-418869.9234200455];
    static #f;
}
let v11;
try { v11 = C3.constructor("YM6"); } catch (e) {}
v11.length = v11;
const v12 = new C3(1857938913, "YM6");
const v13 = new C3(C3, v12);
v13.f = v13;
const v14 = new C3(v12, -418869.9234200455);
v14.d;
WeakMap.name = WeakMap;
let v17;
try { v17 = new WeakMap(); } catch (e) {}
try { v17.delete(v17); } catch (e) {}
const v19 = new WeakMap();
class C21 extends WeakMap {
    set h(a23) {
        try { new a23(); } catch (e) {}
        super.d = this;
        v19["get"](v19);
    }
    toString(a28, a29) {
        for (let v30 = 0; v30 < 32; v30++) {
            this["p" + v30] = v30;
        }
        return "YM6";
    }
    #d;
}
const v33 = new C21();
const v34 = new C21();
v34.b = v34;
new C21();
function F36(a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = WeakMap;
    } catch(e40) {
    }
    try {
        this.h = v34;
    } catch(e41) {
    }
}
F36.length;
F36.arguments = F36;
const v43 = new F36(v34, v19);
new F36(v43, v34);
new F36(v33, v34);
let v46 = 255;
v46--;
const v48 = v46 >>> v46;
v48 >>> v48;
function f51(a52) {
    a52 | a52;
    const o54 = {
        ...a52,
        9: v46,
        5: 65536,
        536870889: a52,
        6: a52,
        [a52]: a52,
    };
    return o54;
}
const v55 = f51(v46);
v55[9];
v55[536870889];
f51(v55);
