new Array(1667);
class C6 extends Array {
    constructor(a8, a9, a10, a11) {
        super(1667);
        try {
            Array(1667);
        } catch(e13) {
        }
    }
    static #f;
    [536870888n] = 8n;
    get g() {
        new Uint8ClampedArray(13);
        new Int16Array(127);
        new Uint16Array(1000);
        return Int16Array;
    }
    #d;
    f;
    #n(a25, a26) {
        this[4048121649];
        g = 1667;
        return this;
    }
    0;
    static 536870889;
    valueOf(a29, a30) {
        const v31 = super[Array];
        let v33 = 3;
        Math.cos(v33);
        0.1799611470724477 | 0.1799611470724477;
        Math.log(v31);
        this.cbrt(v31);
        return v33--;
    }
}
new C6(8n, 536870888n, -52583n, 8n);
const v41 = new C6(536870888n, -52583n, -52583n, 8n);
new C6(8n, 536870888n, 8n, 536870888n);
function f45() {
    Array(1667);
    %PrepareFunctionForOptimization(Array);
    const v48 = Array(1667);
    Array(1667);
    %OptimizeFunctionOnNextCall(Array);
    Array(1667);
    return v48;
}
f45(C6, false);
let v55 = v41 & v41;
Math.fround(-54907);
v55++;
[4.1940221374483045e+307,852224.7407525508,814.7709990727462,-5.3117195416794205];
[869.0657228422792,-1e-15];
[-1.7976931348623157e+308,4.0,0.0,3.0,-1000.0,-600056.17003541,0.10695981138000121,2.0,5.0,367.668906057826];
const v62 = new Uint8Array();
function f63(a64, a65, a66, a67) {
    a64 / a64;
    a65 < a65;
    const o73 = {
        "b": a64,
        ...v62,
        n(a71, a72) {
            return this;
        },
    };
    return o73;
}
for (let v74 = 0; v74 < 625; v74++) {
    f63(f63, v74, v62, v74);
}
