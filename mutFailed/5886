class C3 {
    constructor(a5) {
        function F6(a8) {
            if (!new.target) { throw 'must be called with new'; }
            const v9 = this?.constructor;
            try { new v9(a5); } catch (e) {}
            a8--;
            try {
                this.g = this;
            } catch(e12) {
            }
        }
        const v13 = new F6(1000);
        this.length;
        new F6("bigint", C3, v13);
        new F6("bigint", v13, a5);
    }
    static h;
}
let v17;
try { v17 = new C3(-9007199254740990); } catch (e) {}
const v18 = new v17(-9007199254740990);
const v19 = C3?.constructor;
try { new v19(v17); } catch (e) {}
const v21 = new C3(v17, "bigint", v18, v18);
const v22 = new v21("bigint", v18, "bigint", 1000);
try { v22.toLocaleString(); } catch (e) {}
[1.952725609518375e+307,-1e-15,0.19032671778592014];
const v25 = [937290.267281031,3.0,1000000.0,-1.3268962522030557e+308,74602.1302360599,NaN,-2.91014202256739,-1.5983686286702749e+308,-65.28382515684507];
try { v25.toString(); } catch (e) {}
[-4.0,0.568726593007127];
v17--;
class C32 {
}
const v35 = new Float32Array(1024, v18);
v35[375];
v35.includes(C32, 1024);
