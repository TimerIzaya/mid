const v1 = new Set();
function f2() {
    return Set;
}
[1e-15,-1000000000.0,-4.0,-4.677256999894266,634.5820314612424,1000000000.0,-5.919040893789732e+307,-1e-15,0.8514745044665031,-980660.7255581934];
const v4 = [-1000000000.0,-16991.732304313336,3.0,-3.933302996352895e+306];
function f5() {
    return v4;
}
const v6 = [1648661328,5944,7,-4096,5498,-13690,53224];
const v10 = new BigUint64Array(4);
function F11(a13, a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
}
const v16 = new F11(BigUint64Array, 4, 241);
for (let v17 of v10) {
    v17--;
    Object.defineProperty(v16, 241, { enumerable: true, value: v17 });
}
[-2,536870887,536870887,-4294967296,3];
[-1073741824,2147483647,-4096,9223372036854775807,257,1073741825,-445586937,1756341330,-11];
function f22(a23) {
    f5[5] ||= Set;
}
this.onmessage = f22;
[-8.558171402512816,5.0,-Infinity,351929.58339658286,2.2250738585072014e-308];
let v26 = BigInt64Array;
new v6(256);
function f28(a29) {
    return a29;
}
function f31() {
    return "object";
}
try { BigInt64Array(BigInt64Array); } catch (e) {}
class C34 extends f28 {
    #f = f5;
}
new BigInt64Array(16);
let [,v39,...v40] = C34;
v26 = v26 !== v26 ? v26 : v26;
Object.defineProperty(v40, v1, { writable: true, value: v6 });
new Uint8ClampedArray(2267);
const v46 = new Float64Array(Float64Array, Float64Array, Float64Array);
function f47() {
    v46.length = 0;
    return 0;
}
%PrepareFunctionForOptimization(f47);
f47();
%OptimizeFunctionOnNextCall(v6);
Array.prototype;
([5,5]).join(5).localeCompare(16);
f47();
