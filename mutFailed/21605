let v2 = "G";
class C3 {
    static {
        [,v2] = v2;
        function F5(a7, a8) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.b = this;
            } catch(e9) {
            }
        }
        const v10 = new F5("boolean", 196981031);
        new F5("boolean", v10);
        new F5(this, "boolean");
    }
}
new C3();
new C3();
const t18 = "boolean";
new t18();
new Uint8Array(216);
new Int8Array(10);
new Uint8Array(6);
function f31() {
    return 9;
}
function F32(a34) {
    if (!new.target) { throw 'must be called with new'; }
    Int8Array >>> a34;
    try {
        a34 *= this;
        const v36 = 139837843 in this;
        const v39 = 0 <= 0;
        const v41 = new Int8Array(0);
        for (const v43 in v41) {
            0 ^ v39;
            Object.defineProperty(this, this, { writable: true, configurable: true, enumerable: true, value: v36 });
            this[129] = v43;
        }
        new BigUint64Array(10);
        128 !== 128;
    } catch(e50) {
    }
}
new F32(F32);
new F32(64);
new Int16Array(228);
new BigInt64Array(2729);
new Float64Array(3382);
