const v2 = new Array(0);
class C6 extends Array {
    get h() {
        const o9 = {
            "b": -49085,
        };
        this[5];
        function f11() {
            const v14 = Array(4087);
            v14[4037] = v14;
            for (const v15 of v14) {
            }
            return Array;
        }
        super.a = 5;
        return 0;
    }
    toString(a17, a18, a19, a20) {
        [924539.4038250442,-706556.031301155,0.05042469641090519,7.128534233415039,1.0,1.7232044264085091e+308,-3.0,-1e-15,1000.0];
        [0.038278165639203166,-1.0,-66.04671995465435,0.3248522892781516];
        [0.9548500658474508,-1e-15,320460.3781238871,1.7976931348623157e+308,-870.3507895499149,-1000000000000.0,-Infinity];
        return -1;
    }
    constructor(a28, a29) {
        function F30(a32, a33) {
            if (!new.target) { throw 'must be called with new'; }
            const v34 = this?.constructor;
            try { new v34(v2, this); } catch (e) {}
            a33 ^ a33;
            this.b = v2;
        }
        new F30();
        new F30();
        new F30();
    }
}
const v40 = /xyz{1,32}?/gusy;
class C41 {
    268435440 = v40;
}
new C41();
const v43 = new C6();
new C6();
new C6();
new Int16Array(2);
([1073741824,1073741823,1376142744,1073741825]).forEach();
new Float64Array(7);
new Float32Array(9);
v43[4096] >>>= 4096;
-1 < 8;
function F61(a63) {
    if (!new.target) { throw 'must be called with new'; }
}
const v64 = new F61();
const v65 = F61 >>> 536870887;
with (v64) {
    typeof v65;
}
new Uint32Array(0);
Math.tanh(-1000.0);
let v75 = 0;
const v78 = v75++;
Math.log10(44149);
Math.fround(v78);
const v81 = new Float32Array(9);
new Int8Array(v81);
