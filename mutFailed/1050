function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    this / a6;
    this.a = this;
    try {
        this.a = a5;
    } catch(e8) {
    }
}
F3.a = F3;
const v9 = new F3(4.0, 0.10046578438001363);
function f10(a11, a12) {
    a11 / F3;
    Math.sinh(-3.3474037991793697);
    return Math;
}
v9.constructor = f10;
const v17 = f10?.constructor;
let v18;
try { v18 = new v17(0.10046578438001363, 0.10046578438001363); } catch (e) {}
new F3(2.0, 4.0);
const v20 = new F3(2.0, 0.10046578438001363);
const v21 = v20?.__defineSetter__;
try { new v21(v20, 4.0, v18, v9, 2.0); } catch (e) {}
new Uint8ClampedArray(3540);
new Uint32Array(129);
1096 + 1096;
const t26 = 0.10046578438001363;
t26.f = 2.0;
BigUint64Array.f = BigUint64Array;
new BigUint64Array(1096);
const t31 = 129;
const v35 = new t31();
function f36(a37) {
    const t34 = "Y";
    t34[0] = "Y";
    return a37;
}
v35.toString = f36;
("p").lastIndexOf(v35);
