function f6(a7, a8, a9) {
    const o25 = {
        "c": a7,
        [-480764847](a11, a12) {
            const v14 = Symbol.toPrimitive;
            const o24 = {
                [v14]() {
                    1e-15 && 1e-15;
                    Math.ceil(v14 << a8);
                    v14 ** 1e-15;
                    ~Symbol;
                    return -480764847;
                },
            };
            return -2.3031129594299426e+307;
        },
    };
    return o25;
}
f6(-2.3031129594299426e+307, -2.3031129594299426e+307, -2.3031129594299426e+307);
f6(-2.3031129594299426e+307, -1000000000.0, -359535.7574284845);
f6(-1000000000.0, -2.3031129594299426e+307, -2.3031129594299426e+307);
new BigUint64Array(1024);
new BigUint64Array(2);
new Uint8ClampedArray(257);
const v42 = new Int8Array();
Uint8Array.toString = f6;
Uint8Array[0] = Uint8Array;
class C44 extends Uint8Array {
    constructor(a46, a47) {
        a46.toString = f6;
        super(a46);
        try {
            v42.length = 415075273;
        } catch(e49) {
        }
    }
}
new C44(Uint8Array);
