function f0() {
    return 1073741823 & 1073741823;
    Math.__defineSetter__;
    905.9091064686361 - 905.9091064686361;
    const o15 = {
        "execution": "abs",
        valueOf() {
            try { this.b(); } catch (e) {}
            [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
        },
        "a": 905.9091064686361,
        ..."abs",
        get d() {
            try { ("abs").slice(this); } catch (e) {}
            ("abs").__proto__;
            return "abs";
        },
        ..."abs",
        13: 905.9091064686361,
        "e": 0.4995038015698017,
        16: 0.4995038015698017,
    };
    return o15;
}
const v16 = f0();
const v17 = f0();
const v18 = f0();
const v19 = [v18,v18,v16];
Object.defineProperty(v19, 3, { value: v16 });
try { v19.push(f0); } catch (e) {}
[v18,f0,v19,v17,v16];
const v22 = [v16,v17];
try { v22.lastIndexOf(v16); } catch (e) {}
v22[1] = v22;
~NaN;
let v26 = -215.2218031269299;
v26++;
v26 * v26;
const v33 = Array(11).groupToMap;
eval();
function f37(a38, a39) {
    const o41 = {
        get h() {
            return this;
        },
    };
    return o41;
}
let v43;
try { v43 = ("b").toWellFormed(); } catch (e) {}
try { v43.toLocaleLowerCase(); } catch (e) {}
("valueOf")[3];
Int8Array.toJSON = v33;
const v50 = new Int8Array(268435456);
const v52 = Float32Array?.constructor;
let v53;
try { v53 = new v52(Array); } catch (e) {}
class C54 {
    #o(a56) {
    }
}
const t61 = 268435456;
t61.toString = f0;
const v57 = new Float32Array();
function F58(a60, a61, a62, a63) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(a61, "toJSON", { writable: true, value: "b" });
    function f64() {
        return v53;
    }
    Object.defineProperty(a62, "BYTES_PER_ELEMENT", { writable: true, get: f64 });
    try { a60.join(f37); } catch (e) {}
    a61.length = a61;
    a62.arguments = a62;
    const v66 = a61.BYTES_PER_ELEMENT;
    v66 * v66;
    a62.length;
    const v69 = this.constructor;
    v69.BYTES_PER_ELEMENT = v17;
    v69.length = v69;
    v69.arguments = v69;
    const v71 = -12 % -12;
    v71 | v71;
    const v74 = new Date(v71);
    try { v74.propertyIsEnumerable("valueOf"); } catch (e) {}
    v74.setFullYear(v74, v71, v71);
    try { new v69(v57, a62, 2); } catch (e) {}
    this.h = a61;
}
F58.BYTES_PER_ELEMENT = 956.7557409313317;
const v78 = new F58(v50, Int8Array, F58, v57);
function f79(a80, a81, a82) {
}
Worker.f = Worker;
try { ("function").trimStart(); } catch (e) {}
const v86 = [v78];
const o87 = {
    "arguments": v86,
    "type": "function",
};
const v88 = new Worker(f79, o87);
try { v88.terminateAndWait(); } catch (e) {}
