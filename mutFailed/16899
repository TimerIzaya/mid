function F2(a4, a5) {
    if (!new.target) { throw 'must be called with new'; }
    const v6 = this.constructor;
    try { new v6(a5); } catch (e) {}
    a5 == a5;
    a4 !== a4;
    this.g = a5;
}
new Int8Array(2);
const v13 = new BigInt64Array(10);
let v16 = new Int8Array(3633);
class C17 {
    [2] = v16;
    get c() {
        v16 %= v16;
        const v19 = new Int8Array(v13, 2, 3633);
        super.d = this;
        try {
        const t0 = 10;
        t0(v19);
        } catch (e) {}
        function f21() {
            Array.constructor;
            function f24() {
                return f24;
            }
            class C25 extends f24 {
            }
            return v19;
        }
        return BigInt64Array;
    }
    static a = 10;
    b = Int8Array;
}
new C17();
new C17();
const v28 = new C17();
function F29() {
    if (!new.target) { throw 'must be called with new'; }
    for (let i33 = 0, i34 = 10;
        i33++, i33 < i34;
        (() => {
            gc();
            new v28(3);
            return 1073741823;
            function f46(a47, a48, a49, a50) {
                return f46;
            }
            f46(this);
            1073741824 * 1073741824;
            let v54 = -7;
            class C56 {
                constructor(a58, a59) {
                    const v60 = this.constructor;
                    try { new v60(v60); } catch (e) {}
                    this[-2147483648] >>>= v54;
                    let v62 = 0;
                    while (v62 < 1) {
                        const v67 = v54--;
                        Math.atan();
                        v54 * 7;
                        Math.floor();
                        const v71 = v67 + 7;
                        v71 * v71;
                        const v73 = v62++;
                        v73 - v73;
                    }
                }
            }
            const v75 = new C56();
            v75.constructor;
            for (let v77 = 0; v77 < 5; v77++) {
                const v78 = [2.220446049250313e-16,-2.0,9.472378156545009,0.0,1e-15,0.3751557433004281,0.0,-474740.46049005154];
                const o79 = {
                    __proto__: v78,
                };
                o79[6];
            }
        })()) {
    }
}
new F29();
function f86(a87, a88, a89, a90) {
    a90 % a90;
    const v92 = a90 >= a90;
    for (let v93 = 0; v93 < 5; v93++) {
    }
    return v92;
}
%OptimizeFunctionOnNextCall(f86);
