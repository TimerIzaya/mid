function f0() {
    const o14 = {
        2211: 0.2708230120842047,
        3402: 0.2708230120842047,
        [0.2708230120842047]: -2.2250738585072014e-308,
        p(a5) {
            try {
                const o6 = {
                };
                this.fuck(o6, 0.2708230120842047, true);
            } catch(e9) {
            }
            return a5;
        },
        64: 0.2708230120842047,
        "e": 0.2708230120842047,
        ...-2.2250738585072014e-308,
        o(a11, a12) {
            class C13 {
            }
            return C13;
        },
    };
    return o14;
}
const v15 = f0();
const v16 = f0();
const v17 = f0();
const v18 = /W/gvimsy;
const v19 = /E(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/gudiy;
const v20 = /abc/us;
class C21 {
    static #d;
    constructor(a23, a24) {
        a24.global >>>= a23;
    }
    #n(a27, a28, a29) {
        super.g >>= a28;
        return a27;
    }
    65537;
    static #b = v15;
    static b;
    [v15] = v18;
    [v17] = v20;
}
const v31 = new C21(v20, v19);
new C21(v16, v31);
const v33 = new C21(v31, v31);
[f0,v33,v33,v33,v33];
const v35 = [v20];
[f0,v18,f0];
function f37() {
    return v35;
}
function f38() {
    const o52 = {
        toString(a43, a44) {
        },
        "b": "boolean",
        "c": "boolean",
        set g(a46) {
            function F47(a49, a50, a51) {
                if (!new.target) { throw 'must be called with new'; }
            }
        },
        "type": "object",
        ["object"]: f38,
        ["boolean"]: 1000000000000.0,
        "h": 1000000000000.0,
    };
    return o52;
}
const v53 = f38();
f38();
const v55 = f38();
function F56(a58) {
    if (!new.target) { throw 'must be called with new'; }
}
const v59 = new F56();
function f60(a61, a62, a63) {
    const o68 = {
        get a() {
            const o66 = {
            };
            gc();
        },
    };
    return o68;
}
const v69 = f60();
f60();
function F71(a73, a74, a75) {
    if (!new.target) { throw 'must be called with new'; }
    const v76 = this.constructor;
    try { new v76(F71, F71); } catch (e) {}
    a74.g = a74;
    this.a = a73;
}
new F71(v55, v53, v59);
new F71(v55, v69);
Math?.expm1;
