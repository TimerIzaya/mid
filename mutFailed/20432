const v1 = [65536,385933025,-1309372818,128,29746,-256,9007199254740990,-62457,9007199254740991,-268435456];
const v2 = [5139,-9935,1073741824,-268435456];
const v3 = [479664185,-56832];
try { v3.values(); } catch (e) {}
const v5 = /(abc|def|ghi)/udim;
/[olc]/gvims;
const v7 = /a\n(x)(x)(x)\3/di;
let v9;
try { v9 = new v1(59356, v3); } catch (e) {}
let v10;
try { v10 = v9(v5, v7, ...v3, ...v2); } catch (e) {}
const v11 = v10 - undefined;
try { ("f").indexOf("f"); } catch (e) {}
-(-4294967295);
5 >>> 5;
const v22 = new Uint8ClampedArray(5);
new Uint8Array(120);
~10;
const v29 = new BigUint64Array(10);
try { v29.toSorted(v22); } catch (e) {}
class C32 {
}
const v33 = v5.constructor;
v33.MAX_VALUE = v1;
const v34 = new v33();
const v35 = v34.toExponential(v1);
try { v10.blink(); } catch (e) {}
try { v35(10, v35, C32, 59356, v11); } catch (e) {}
e = v34;
v33.g *= 5;
const v39 = gc?.constructor;
try { new v39(v1); } catch (e) {}
const o43 = {
    "execution": "sync",
    "type": "major",
};
gc(o43);
