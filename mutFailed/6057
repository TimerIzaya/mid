class C3 {
    static #d;
    toString(a5) {
        let v6;
        try { v6 = new a5(a5, a5, this, 9007199254740990); } catch (e) {}
        try {
            v6.toString = a5;
        } catch(e7) {
        }
        return this;
    }
    static a;
    static [12] = 12;
    static #b;
}
new C3();
const v9 = new C3();
const v10 = new C3(9007199254740990);
class C11 extends C3 {
    constructor(a13, a14, a15, a16) {
        super(a14);
        if (v10 < this) {
            delete this[this];
        } else {
            try { a14(a14); } catch (e) {}
        }
    }
    #c = 9007199254740990;
    static [9007199254740990];
    b = 12;
}
const v20 = new C11(4294967297, 4294967297, 4294967297, 9007199254740990);
new C11(9007199254740990, v9, 12, 4294967297, v20);
new C11(9007199254740990, 4294967297, 9007199254740990, 9007199254740990);
class C29 {
    toString(a31, a32) {
        const v33 = `7${this}dm${"unicode"}m`;
        function F34(a36, a37, a38) {
            if (!new.target) { throw 'must be called with new'; }
        }
        F34(F34(), "unicode", v33);
    }
}
