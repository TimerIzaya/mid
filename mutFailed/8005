const v0 = [-6.355088104519964,-1.7976931348623157e+308,-1.7976931348623157e+308,1000000000.0,-5.0,-968357.4191208191,1e-15,-Infinity,1.471114391240949];
const v1 = [-5.0,-7.824797045003759e+307,2.220446049250313e-16];
const v2 = [-17.61963367857095,-2.0,2.2250738585072014e-308,-2.0,-28.348743479821792,-1000000000.0,1.0,810.2366814178563];
[[v1,[v0],v2],v2,v0];
/[8a(?=bbb|bb)c]/gums;
/a[a]/vdsy;
const v17 = /M/gus;
class C21 {
    #h = 1e-15;
    constructor() {
        super();
        Math.acosh();
    }
    static get e() {
        function f26() {
            new Int8Array(520);
            class C30 {
            }
            class C31 extends C30 {
                ["dr"];
            }
            return 1e-15;
        }
        return this;
    }
    static [v17];
    set f(a33) {
        const v34 = [-504863.1885363821,-248378.80818527355,-147.11467188198264,-1.7039705769992093e+308];
        for (let v35 = 0; v35 < 5; v35++) {
            v34 | v35;
        }
        this != a33;
    }
    #g = 3.7122420217608383;
    static 65536;
}
new C21();
new C21();
new C21();
new Set();
[-Infinity,Infinity,959819.665748626];
[0.881533214430694,1000000000000.0,-2.6561951388069446e+306,1e-15,-601975.7256958171,-2.0,1.0,-1000000000000.0,-5.0];
[-6.825886894231237,-1000000000.0,-7.405832553829715,-5.0];
class C54 extends Int8Array {
    [12];
}
function f55() {
    let v57 = 1000000000000.0;
    const v58 = v57--;
    -v58;
    class C63 {
        constructor(a65) {
            const v67 = new Float32Array();
            try { v67.entries(); } catch (e) {}
            const v69 = new Uint16Array(12, -4294967296, v58);
            new Float32Array(v69, -4294967296, 268435439, v57, v69);
        }
    }
    try { new C63(12); } catch (e) {}
    const v72 = new C63(257828.6336153492);
    const v73 = new C63();
    const v74 = new C63(-4294967296);
    const v75 = [v74,C63];
    [1.0,v74,v72,v74,v75];
    const v77 = [v74];
    class C78 extends C63 {
        [v72];
    }
    const v79 = new C78();
    const v80 = v77.constructor;
    try { v80.isArray(v77); } catch (e) {}
    class C82 extends v80 {
    }
    C82.a = C82;
    const v83 = new C82();
    const v84 = v83?.constructor;
    try { new v84(); } catch (e) {}
    Object.defineProperty(v83, 65537, { value: v73 });
    try { v79.m(v75); } catch (e) {}
    return Int32Array;
}
%PrepareFunctionForOptimization(f55);
f55();
%OptimizeFunctionOnNextCall(f55);
f55();
