class C3 {
    constructor(a5, a6) {
        const v7 = [65536,1073741824];
        v7.p23 = v7;
        for (let v8 = 0; v8 < 5; v8++) {
            Math.atan2(-268435456, v8);
        }
        [1073741824,-9007199254740990,127,268435441,48619,2100743090,1422045689,9];
        const v13 = [-6,-18245,235694488,730368781,5,-121074109,6,-1073741824,9007199254740991,1073741825];
        const v14 = [-9007199254740990,-1024,256,-64592,45766,-10,-7];
        try { v14["some"](); } catch (e) {}
        const t11 = 129n;
        delete t11?.[1062];
        function f18() {
            return C3.__proto__;
        }
        f18();
        a6 > v13;
        for (let v22 = 0; v22 < 32; v22++) {
            v7["p" + v22] = v22;
        }
    }
    f;
    6;
    static 7;
    static [-1927387280n];
}
new C3(129n, 129n);
const t28 = 129n;
new t28(-1927387280n, 749694681n);
new C3(129n, 129n);
[-10520,17288,9007199254740990,-4096,-64935,16,128,59940,1000,512];
[15,64];
[-936610077];
let v32 = -7;
class C34 {
    constructor(a36, a37) {
        const v38 = this.constructor;
        let v39;
        try { v39 = new v38(a36); } catch (e) {}
        this[v39] >>>= v32;
        let v40 = 0;
        while (v40 < 1) {
            const v45 = v32--;
            Math.atan();
            v32 * 7;
            const v48 = v45 + 7;
            v48 * v48;
            const v50 = v40++;
            v50 - v50;
        }
    }
}
new Int16Array(22);
new Uint32Array(255);
class C58 {
}
new C58();
const v61 = -4294967297n / -4294967297n;
[601759695];
function f63() {
    "Vre" == C58;
    const o76 = {
        [-4294967297n](a68, a69, a70, a71) {
        },
        ...v61,
        ...f63,
        4: v61,
        toString(a73, a74, a75) {
            return 255;
        },
        5: -4294967295,
    };
    return f63;
}
new Int32Array(0);
class C80 extends String {
    6 = Int32Array;
}
const v81 = new C80();
v81[6];
class C83 {
    4259938026;
}
try {
    129n % 257;
} catch(e86) {
}
