class C3 {
    static 176 = "p";
    constructor(a5, a6) {
        this[16];
        try { a5.charAt(a5); } catch (e) {}
        a6[5] = a6;
        this[16] = 16;
        11 % 11;
        function f13() {
            return 268435440;
        }
        f13.e = f13;
    }
    a = 16;
    static ["p"];
    [16] = 16;
}
const v14 = new C3("p", "toString");
const v15 = new C3("toString", 16);
const v16 = new C3("toString", v14);
const v17 = [-2.0,4.174243361439571e+307,1.7976931348623157e+308,-0.0,0.7460587452530324,1000.0];
try { v17.map("p"); } catch (e) {}
const v19 = [1000000.0];
try { v19.forEach(v15); } catch (e) {}
const v21 = [-3.0,Infinity,-2.531623283151376,-3.0,0.7175109390180241,-521.4473082353672,2.220446049250313e-16,-859.7561428451218];
function F22(a24, a25, a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    const v28 = this?.constructor;
    try { new v28(v16, a25, C3, v21); } catch (e) {}
    try {
        this.h = v15;
    } catch(e30) {
    }
    try {
        this.b = v17;
    } catch(e31) {
    }
}
new F22(v17, "p", v16, v17);
new F22(v17, v15, v15, v17, "toString");
new F22(v19, C3, v16, v17);
let [] = [];
