const v1 = new Map();
function f2() {
    return v1;
}
const v3 = [28248,158903393,257,-65537,34048,3,4294967297,-9007199254740991,65535,268435440];
[-4294967295,64,-2147483647,3,-12,9,10];
[1000,-579591788,3,-5,-5];
let v11 = -1605641656;
new Float32Array(127);
const v19 = Uint8Array.d;
const v20 = new Uint8Array(1);
v20[0] = v20;
const v23 = new Float64Array(v19);
const v24 = v23?.constructor;
let v25;
try { v25 = new v24(1, v20, Float32Array); } catch (e) {}
v11--;
-2 != -2;
new WeakSet();
new BigUint64Array(4096);
const v38 = new Int8Array(3655);
new Float32Array(129);
function f42() {
    let v43 = -2;
    const o71 = {
        next() {
            v43--;
            return this;
        },
        m(a47) {
            try { this.next(v38, a47); } catch (e) {}
            const o49 = {
            };
            o49.b = o49;
            try {
                this.e = v43;
            } catch(e50) {
                const v54 = new BigUint64Array();
                const v56 = v54.__proto__;
                v56[512] %= v56;
                const v58 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v58, o49);
            }
            v23 + 3938;
            Int8Array.e = Int8Array;
            const v63 = new Int8Array(3938);
            let v64 = 3;
            let v65 = 0;
            for (let i = 0; i < 5; i++) {
                [...v64] = v63;
                -(v65++);
            }
            const o68 = {
            };
            o68.b = o68;
            try {
                const o69 = {
                };
                o69.h = v25;
            } catch(e70) {
            }
        },
    };
    return o71.m(f42, v43, v43);
}
v23();
const v76 = new Uint16Array(1412);
v76.lastIndexOf();
const v82 = new Date();
const v84 = new Set();
const v85 = v84.add(v82, v3);
let [v86,,...v87] = v84;
v86.setUTCHours(v85, Float64Array, v87, -9007199254740991);
v86.setUTCFullYear();
