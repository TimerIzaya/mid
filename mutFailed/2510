const v0 = /C[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]/guimsy;
const v1 = /R\1(a)/vim;
const v2 = /a|bc?/gdmy;
new Int16Array(2360);
const v8 = new Uint8Array(3227);
const v11 = new BigInt64Array(127);
function F12(a14, a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v11;
    } catch(e18) {
        const v19 = e18 & this;
        v19[7] = v19;
        const v20 = v8.__proto__;
        !a14;
        v20 >>> a17;
    }
    try {
        this.h = v0;
        class C24 {
        }
        const v25 = new C24();
        const v26 = new C24();
        function f27(a28, a29) {
            const v30 = [];
            let v31;
            try { v31 = v30.with(); } catch (e) {}
            const o39 = {
                [v26](a33, a34, a35) {
                    super[v31];
                },
                set b(a38) {
                },
                [a29]: v25,
            };
            return a28;
        }
    } catch(e40) {
    }
    const v42 = new a16();
    const v44 = new Float32Array();
    for (let v45 = 0; v45 < 25; v45++) {
        Float32Array[6] = v42;
        v44[v45];
    }
}
const v47 = new F12(v2, v1, v0, 127);
new F12(v2, v2, v1, 127);
try {
    const o49 = {
    };
    new Int16Array(o49, 2360, 127);
} catch(e51) {
}
new F12(v1, v1, v1, 127);
const v53 = [-9007199254740991,256,5,4294967297,1,-38452,9223372036854775807,2147483649];
const v54 = [-4564,-541496027,-554545361,536870888];
const v55 = [61400,-6,-1019014473,-42020,-2];
class C56 {
    constructor(a58, a59) {
        const v60 = a59[a59];
        try { v60(v60, ...a59, ...v53); } catch (e) {}
    }
}
new C56(v55, v53);
new C56(v54, v0);
const v64 = new C56(v54, v54);
try { v2(Uint8Array, BigInt64Array, v64); } catch (e) {}
let v68 = 184.65667775039287;
-2041308574 >> v68;
v47 * v68;
v47 | -(-2041308574);
v68++;
-2041308574 | v8;
+v68;
