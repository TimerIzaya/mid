class C3 {
    set f(a5) {
        Object.defineProperty("size", this, { writable: true, configurable: true, value: this });
        let v7;
        try { v7 = this["filter"]("filter"); } catch (e) {}
        const v10 = v7 && "size";
        Math.cosh(this);
        const v12 = this % "size";
        Math.cbrt(v10);
        Math.atan(129);
        -v12;
    }
    static 8 = -27658;
    static 4 = -9007199254740990;
}
const v16 = new C3();
new C3();
const v18 = new C3();
class C19 {
    set c(a21) {
        a21?.[0];
        new Int8Array(3491);
        new Float32Array(27);
        new Int8Array(4);
    }
    static [-27658];
    [v18];
    static 4;
}
const v32 = new C19();
const v33 = new C19();
const v34 = new C19();
[v34,-27658,v32,v16];
[C3];
[-9007199254740990,-9007199254740990,v18,v33,-27658];
new Uint16Array(2341);
new Float64Array(2300);
new Float32Array(-55719);
const v49 = new Uint8Array(128);
let v50;
try { v50 = v49.reduce(); } catch (e) {}
function f51() {
    const o89 = {
        m(a55) {
            try { a55.next(a55, 1261703539); } catch (e) {}
            a55.c = a55;
            a55.h = a55;
            const o57 = {
            };
            o57.h = o57;
            o57.h = o57;
            function f58(a59, a60, a61) {
                return o57;
            }
            f58.c = f58;
            try {
                o57.e = -65535;
            } catch(e62) {
                const v65 = new Uint8ClampedArray(798, -65535, e62);
                new Uint8ClampedArray(798, ...v65, o57);
            }
            try {
                const o67 = {
                };
                o67.e = 1261703539;
            } catch(e68) {
            }
            let v70;
            try { v70 = ("EV").link(); } catch (e) {}
            let v71 = 0;
            class C72 {
            }
            const v75 = new Int8Array(3938);
            let v76 = 3;
            let v77 = 0;
            let v78 = v77 >> v77;
            for (let i = 0; i < 5; i++) {
                [...v76] = v75;
                v77++;
            }
            const o80 = {
            };
            try {
                let v81 = 0;
                for (let i = 0; i < 5; i++) {
                    ({"c":v50,"d":v71,...v78} = v70);
                    try {
                        o57.fuck(128, a55);
                    } catch(e83) {
                    }
                    v81++;
                    v81 < 5;
                }
                const o87 = {
                };
            } catch(e88) {
            }
            return Int8Array;
        },
    };
    o89.m(o89);
    return 128;
}
f51();
f51();
