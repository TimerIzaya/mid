function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 127;
    } catch(e3) {
    }
    try {
        this.c = 127;
    } catch(e4) {
    }
    try {
        this.f = 127;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
class C9 {
    [v7];
    c;
    toString(a11, a12) {
        class C13 {
        }
        function f15(a16, a17, a18, a19) {
            return arguments;
        }
        const v21 = f15(118, f15, 118, 118);
        const t28 = f15(v21, f15, v21, 118).constructor;
        t28(118);
        return 77132706n;
    }
    constructor(a29, a30) {
        let v28 = this;
        v28 >>>= a29;
        const o32 = {
            __proto__: Set,
            ...Set,
        };
        let v33;
        try { v33 = a30.asin(); } catch (e) {}
        super.a >>>= v33;
    }
    static 1 = v6;
}
const v34 = new C9(v6, v8);
const v35 = new C9(F0, v7);
const v36 = new C9(F0, v8);
const v37 = [v34,v36,v36,v8];
[v7,[v36,v37,v35,v37,v35],C9,v8,v34];
function f40() {
    return v7;
}
const v48 = [-5,null,536870889,-1055048739,-1055048739];
const o51 = {
    "execution": "async",
};
gc(o51);
[536870889];
[v48,-1055048739,v48,536870889];
[-9.735515399340533e+307,163470.27825054666,8.355421851275215e+307,-7.141423016921272e+307,-486.05440736004505,1.6461069750642172e+308,1000.0,-1e-15];
[-394794.8057064981,379960.7389405947,2.220446049250313e-16,-3.0,-8.57088526932401,0.0];
[913972.2113151569,-1000000.0,-837.2084454107498,-9.199548421707273e+307,-1000000000.0,0.0];
function F64() {
    if (!new.target) { throw 'must be called with new'; }
    this.c = F64;
    this.c = this;
    try {
        this.c = 19793;
        try { Array.of(); } catch (e) {}
        const v69 = Array(19793);
        try { v69.map(this); } catch (e) {}
        for (const v71 of v69) {
        }
        const v72 = [];
        const v74 = Symbol.toPrimitive;
        v72[v74] = Array;
        const v75 = [v72,v72,v72];
        try { Symbol.apply(Symbol, v74); } catch (e) {}
        v75[Symbol.toPrimitive] = Symbol;
        [v75,v75];
        const v81 = [601759695];
        function f82() {
            return ([-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0]).push(v81);
        }
        return f82;
        Uint16Array.toString = Array;
    } catch(e85) {
    }
    try {
        this.b = 19793;
    } catch(e86) {
    }
}
new F64();
class C88 {
    set b(a90) {
    }
}
function f92(a93, a94, a95, a96) {
    const o100 = {
        toString(a98, a99) {
        },
    };
}
const v101 = f92(Date);
try { v101.toString(); } catch (e) {}
