const v2 = new Float32Array(1521);
new Float32Array(16);
try { new Int16Array(Float32Array, Int16Array, Float32Array); } catch (e) {}
const v9 = new Int16Array(1774);
const v10 = v9?.reverse;
try { new v10(); } catch (e) {}
function f12() {
    return v2;
}
function F13(a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    ~a15;
    a17 - a17;
    try {
        this.c = a17;
    } catch(e20) {
    }
    try {
        this.g = a15;
    } catch(e21) {
    }
    try {
        this.f = a16;
    } catch(e22) {
    }
}
const v23 = new F13(1521, Int16Array, 1521);
const v24 = new F13(1521, 16, F13);
const v25 = new F13(16, v24, Float32Array);
4294967296 + 4294967296;
function f31(a32, a33) {
    try { v10(v9, v25); } catch (e) {}
    [NaN,-512.5199679496284];
    [-0.0,-2.0,-552101.4406506817,-1.3933360270702024e+308,372.1913318907459,0.36649304462064325,0.5249412907723697];
    [-92.34430494662638,4.0,-0.0,2.2250738585072014e-308,-5.0,-2.2250738585072014e-308,0.0,Infinity];
    Reflect.construct(f31, [Reflect,Reflect], Int16Array);
    function f47(a48) {
        return Int16Array;
    }
    class C49 extends f47 {
        e = undefined;
        [-44027];
        #a;
    }
    const o52 = {
        2321852491: "object",
    };
    a33 >>> a33;
    const o55 = {
        "d": a33,
        "c": -5,
    };
    return o55;
}
const v56 = f31(-5, 4294967296);
v56.b = v56;
v23[2644296188];
-2.2250738585072014e-308 < 4294967296;
const v62 = f31(v56, f31);
try { v62.d(4294967296, f31); } catch (e) {}
v56.c = 4294967297;
