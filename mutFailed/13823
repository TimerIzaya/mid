[[-1e-15,-4.547098672084515,6.731189859503068,1000.0,1000.0,414.1111077300918,567.5737904015757]];
try {
    for (const v6 of Array(9)) {
    }
    [];
} catch(e8) {
}
const v11 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v13 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v14 = [601759695];
function f16(a17, a18, a19, a20) {
    function f21() {
        try {
            v11.forEach(a18);
        } catch(e25) {
        }
        const v26 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o32 = {
            toString(a28, a29) {
                (a20 && a18) <= v26;
                return a19;
            },
        };
        const o52 = {
            "c": -4294967297n,
            [522675525n](a35, a36) {
            },
            "c": v14,
            valueOf(a38, a39) {
                return a39;
            },
            [-4294967297n](a41, a42, a43, a44) {
            },
            "maxByteLength": -4294967295,
            "arguments": v13,
            ..."Vre",
            valueOf(a46, a47) {
                return a46;
            },
            ..."Vre",
            4: "Vre",
            "type": "Vre",
            toString(a49, a50, a51) {
                return a51;
            },
            5: -4294967295,
            6: -268435456,
        };
        return a17;
    }
    f21();
    %OptimizeFunctionOnNextCall(f21);
    return v14;
}
for (let v54 = 0; v54 < 5; v54++) {
    f16(v54, v54, v14, v54);
}
new Int8Array();
const o61 = {
};
const v62 = [3.1218977390328977,0.7567869002132325,0.0,2.030990796557246,4.641380514017136];
function F63(a65) {
    if (!new.target) { throw 'must be called with new'; }
}
class C66 extends F63 {
}
let v67 = new C66(v62, C66);
function f68() {
}
function f69() {
    return f69;
}
function f70(a71, a72, a73, a74) {
    function f75() {
        return a71;
    }
    f75.h = f75;
    const v76 = f75.length;
    const v77 = f69();
    v77.arguments = v77;
    v77.constructor;
    Object.defineProperty(a72, 11, { configurable: true, enumerable: true, get: f68, set: f70 });
    v67 >>= v76;
    const o82 = {
        "execution": "async",
        "type": "minor",
    };
    const v83 = gc(o82);
    for (let i = 0; i < 5; i++) {
    }
    try {
        try {
            const o84 = {
            };
            const o85 = {
            };
            const o86 = {
            };
            const o87 = {
            };
            return v83;
            function f88(a89, a90, a91, a92) {
            }
            function f93(a94, a95, a96, a97) {
            }
        } catch(e98) {
        }
    } catch(e99) {
    }
    BigUint64Array * 536870887;
}
const v104 = new Array(1653);
class C105 extends Array {
    constructor(a107, a108, a109) {
        super(-423328908);
        for (let v110 = 0; v110 < 100; v110++) {
            Array(1443116346);
        }
    }
    static #c;
    static #o(a113, a114, a115, a116) {
        this[1443116346];
        Array[6] = v104;
        Array[4294967296];
        const v120 = new f69();
        const o121 = {
            __proto__: v120,
        };
        o121.p31;
        new Map();
        return a114;
    }
    toString(a125) {
        const v126 = f69();
        try { this["any"](v126); } catch (e) {}
        return v104;
    }
}
new Int16Array([-1.7976931348623157e+308,1000000.0,-Infinity,1000000.0,1e-15,4.0,0.05361702581874339,2.220446049250313e-16,-384803.16239734297]);
2147483648 >>> 2147483648;
const v135 = new Float64Array(256);
const v136 = [1073741824,-523864342,1161249740];
const o137 = {
    ...v135,
    ...v136,
};
new C105(-423328908, 1653, 1443116346);
new C105(512, 2147483648, -9);
new C105(9, 512, 1443116346);
for (let v141 = 0; v141 < 5; v141++) {
    function f142() {
        let v143 = -268435456;
        const v144 = v143 % v143;
        v143--;
        return v144;
    }
    f142();
    %OptimizeFunctionOnNextCall(f142);
}
