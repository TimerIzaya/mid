function f0() {
    const o30 = {
        "c": "-9007199254740990",
        set b(a5) {
            function f6(a7, a8) {
                return f6;
            }
            const v9 = [601759695];
            const v10 = [1073741824,1073741823,1376142744,1073741825];
            try { v10["58572"](..."58572", "toISOString", ...v9); } catch (e) {}
            let v13;
            try { v13 = a5(a5, "-62551", "-9007199254740990"); } catch (e) {}
            eval("");
            const t12 = "";
            new t12();
            const v20 = new BigUint64Array(4);
            v20.reverse();
            %VerifyType(v13);
            try {
                for (const v26 of Array(4)) {
                }
                [];
            } catch(e28) {
            }
        },
        110: "toISOString",
        ..."-62551",
        "b": "-62551",
        "g": "-62551",
    };
    o30.p0 = "toISOString";
    return o30;
}
let v31 = f0();
const v32 = f0();
function f33(a34) {
    function f36() {
        return -172798652;
    }
    return a34;
}
v32.valueOf = f33;
const v37 = f0();
v37.p4 = f0;
v37.p6 = f0;
class C38 extends f0 {
    [v31];
    static #a = v32;
    static #e;
    constructor(a40, a41) {
        super();
        super.b >>= v32;
        try {
            v31.#a;
        } catch(e43) {
        }
    }
    #d;
}
const v44 = new C38(v31, v37);
const v45 = new C38(v44, v44);
const v46 = new C38(v32, v37);
class C47 extends C38 {
    #m(a49, a50) {
        let [v52,v53,,v54] = this;
    }
    static e;
    static m(a56, a57) {
        v31 = v37;
        const v58 = [601759695];
        const v59 = [1073741824,1073741823,1376142744,1073741825];
        function f60(a61, a62, a63, a64) {
            -a61;
            a62 >>> a62;
            const v67 = a61 >>> a61;
            v67 | v67;
            const v69 = a63[3];
            v69 + v69;
            ("find").codePointAt(v59);
            try { v59["find"](..."find", a64, ...v58); } catch (e) {}
            return a64;
        }
        for (let v74 = 0; v74 < 10; v74++) {
            f60(v74, v74, v59);
        }
        new Array(512);
        return f0;
    }
    a;
    constructor(a80, a81, a82, a83) {
        Object.defineProperty(a80, "p20", { enumerable: true, value: this });
        super(v46, v46);
        v32[v32] = v44;
        for (let v84 = 0; v84 < 32; v84++) {
            a80["p" + v84] = v84;
        }
        9n >> 9n;
        const v91 = new Int16Array(20);
        for (const v92 in v91) {
            Math.expm1(v92);
        }
    }
}
const v95 = new C47(v45, v44, C47, v46);
const v96 = new C47(v37, v44, v95, v44);
new C47(v31, v44, v32, v96);
for (let v98 = 0; v98 < 5; v98++) {
    function f99() {
        const o103 = {
            __proto__: f99,
            valueOf(a101, a102) {
                return a102;
            },
        };
        return v98;
    }
    f99();
    %OptimizeFunctionOnNextCall(f99);
}
