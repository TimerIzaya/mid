function f0() {
}
const v6 = new Int8Array(1);
new BigUint64Array(256);
const v10 = [];
"-1210238113" - v10;
const o13 = {
    [v6]: v10,
};
const v16 = new Float64Array(1975);
const v17 = /[vC[\cz]]/gvdims;
function f22(a23, a24, a25, a26) {
    const o31 = {
        p(a29, a30) {
        },
        10: 1073741824,
    };
    let v32 = "1024";
    for (const v33 in v32) {
        let v34;
        try { v34 = v17.compile(v33); } catch (e) {}
        v32 = v33;
        try { a25(v17, v33, a26, v34); } catch (e) {}
        1073741824 instanceof f0;
        new BigInt64Array(5);
        new Float32Array(9);
        new Uint32Array(128);
    }
}
%OptimizeFunctionOnNextCall(f22);
function f47() {
}
function F48(a50) {
    if (!new.target) { throw 'must be called with new'; }
}
const v51 = new F48();
function F53(a55, a56) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "f", { writable: true, enumerable: true, value: a56 });
    this.f = a56;
    try {
        const v57 = [];
        class C58 {
            constructor(a60, a61, a62) {
                function f63(a64, a65, a66) {
                    v57.copyWithin();
                    let v69 = 0;
                    do {
                        const o70 = {
                        };
                        try {
                            o70.h = v51;
                        } catch(e71) {
                        }
                        try {
                            const o72 = {
                            };
                            o72.h = v51;
                            o72.e = 4096;
                        } catch(e73) {
                        }
                        const o74 = {
                        };
                        o74.h = v51;
                        o74.e = 4096;
                        o74.c = WeakSet;
                        v69++;
                    } while (v69 < 7)
                    f63(-268435456, 0.6683462416314783, [-268435456]);
                    const v81 = this >> -268435456;
                    v81 >> this;
                    return -v81;
                }
                f63();
            }
        }
        class C85 extends C58 {
        }
        new C85();
    } catch(e87) {
    }
}
Object.defineProperty(v51, 2, { writable: true, configurable: true, enumerable: true, get: f47, set: f22 });
v6["-1210238113"];
f22(12, "-1210238113", v16, o13);
Object.defineProperty(v17, 7, { configurable: true, enumerable: true, set: f47 });
function f90() {
    return BigUint64Array;
}
-63367 < 10;
const v95 = new BigInt64Array();
class C96 {
    constructor(a98, a99) {
        for (let v100 = 0; v100 < 10; v100++) {
            v95[-1];
            try {
                super.o();
            } catch(e103) {
            }
        }
    }
}
const v106 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v107 = [601759695];
const v108 = [1073741824,1073741823,1376142744,1073741825];
function f110(a111, a112, a113, a114) {
    function f115() {
    }
    class C116 extends f115 {
        toString(a118, a119) {
            const v120 = this.constructor;
            new v120(a119, v120, this, v120, C116);
            -this;
        }
    }
    const v123 = new C116();
    try { v123.toString(); } catch (e) {}
    function f126() {
        const o133 = {
            "e": -4294967295,
            ...v106,
            ..."Vre",
            "c": a114,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a131, a132) {
                return v108;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            5: -4294967295,
            6: -268435456,
        };
    }
    f126();
    %OptimizeFunctionOnNextCall(arguments);
    let v136;
    try { v136 = v108["find"](..."find", a114, ...v107, ...v108, ...522675525n); } catch (e) {}
    v136 <= a113;
    return arguments;
}
f110(v106, v108, "-1073741824", 522675525n);
const v145 = new Uint8ClampedArray();
[v145,v145];
new Uint8Array(0);
const v155 = new Uint8ClampedArray(4);
new Int8Array(v155);
