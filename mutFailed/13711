let v0 = 257;
class C3 {
    static o(a5, a6) {
        const v7 = super[this];
        const v8 = super.a;
        let v9;
        try { v9 = new a6(v8, v0, v0, ...v8, 409451818, 409451818); } catch (e) {}
        try {
            v9.length = 8;
        } catch(e11) {
        }
        return v7;
    }
    static #f = v0;
    g = v0;
}
function f12(a13, a14) {
    a13[0];
    function f16() {
        return -2.220446049250313e-16;
    }
    return -2.220446049250313e-16;
}
C3[Symbol.toPrimitive] = f12;
const v19 = new C3();
const v20 = new C3();
v20.b = v20;
const v21 = new C3();
class C22 extends C3 {
    static [v0] = v21;
    static #h;
    f = v20;
    [409451818] = v19;
    static #g = f12;
    [Symbol];
    #b;
    64 = C3;
    0;
    257 = C22;
    static p(a24, a25, a26, a27) {
        const v28 = a26 >= a24;
        v0++;
        super[v28] = a26;
        v20[4] = a25;
        try {
            v19.__proto__ = a27;
        } catch(e30) {
        }
        typeof f12 === "object";
        return a25;
    }
    g = v0;
    [C3] = v21;
}
const v38 = new C22();
new C22();
const v40 = new v38();
v40[0];
8.579509584580427e+307 >>> 8.579509584580427e+307;
2.2352057364920178e+307 * 2.2352057364920178e+307;
const v47 = new C3();
f12(8.579509584580427e+307, v47);
try {
    v38.g = 8.579509584580427e+307;
} catch(e49) {
}
try { new BigUint64Array(Symbol, Symbol, C3); } catch (e) {}
const v52 = new BigUint64Array();
try { v52.fill(); } catch (e) {}
