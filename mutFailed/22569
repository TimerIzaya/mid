new Array(1192);
[-760658400,-4664,129,-30984];
const v7 = [5,-9223372036854775807,-15,127,536870888,65536,65536];
const v8 = [536870888,3,-7,12,1073741823];
function F9(a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "a", { value: v8 });
    try {
        this.a = v8;
    } catch(e14) {
    }
    try {
        a13.b = v7;
    } catch(e15) {
    }
}
new F9(3.0, Infinity, Infinity);
new F9(Infinity, -1000000.0, -1000000.0);
new F9(Infinity, Infinity, 3.0);
class C20 {
    constructor(a22) {
        this.constructor;
        try { new a22(); } catch (e) {}
        function f27() {
            return Array;
        }
        Object.defineProperty(Math, "valueOf", { enumerable: true, get: f27 });
        const v29 = 10 && 10;
        const v30 = ~v29;
        Math.sinh(Math);
        const v32 = -10;
        const v33 = +v30;
        2147483649 & v32;
        v29 | v33;
    }
}
new C20(10);
new C20();
