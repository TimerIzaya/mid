new Set();
const v2 = /(?:ab){4,7}/gvdimsy;
/a??/gum;
const v4 = /[Aa+b]/gus;
function F5(a7, a8) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a8;
    } catch(e9) {
    }
    try {
        this.g = v2;
    } catch(e10) {
    }
}
const v11 = new F5(v4, v4);
new F5(v4, v2);
const v13 = new F5(v4, v2);
[-4.772669377536774,-8.646042458750633,4.0,0.30657689278101374,0.033312406130174055,411.84270704389246,4.0,2.2250738585072014e-308,0.034614683248078704,-0.0];
const v15 = [0.0,-863997.4524696928,0.48982729210505604,-1.0,0.9356606871971647];
for (const v16 in v13) {
    function F17(a19, a20, a21) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.h = v2;
        } catch(e22) {
        }
        try {
            this.f = v16;
        } catch(e23) {
        }
    }
    new F17(v11, v2, F17);
    new F17(v11, v2, v16);
    new F17(v13, v4, F17);
}
[0.8128123070307706,0.43027853416618733];
[];
const v32 = [Infinity];
[479.1899563202203,122841.50659786374,0.6626859918996411,-1000000.0,-1000.0,252.15113272138615,-1e-15,1000.0,364253.4319654517,-9.899777269503376e+307];
[-1.0,1e-15,5.0,1000000.0];
const v35 = [256,-268435456,7,-778010758,7,16,-65536];
const v36 = [10,-2,256,-4294967295,6,-34566,804990459,-256,-1831978218];
let v39;
try {
const t0 = 1073741824;
v39 = t0(-65535, v36, 1073741824);
} catch (e) {}
let v41;
try { v41 = v35.at(v39); } catch (e) {}
v41 *= v32;
v15 ** v15;
~(v15 | 1073741824);
do {
    new Date();
    Object.defineProperty(Date, "e", { writable: true, configurable: true, set: Date });
    const o52 = {
        "maxByteLength": 10,
    };
    const v54 = new ArrayBuffer(9, o52);
    new Int16Array(v54);
} while (0 < 0)
