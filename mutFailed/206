try {
} catch(e1) {
} finally {
}
class C3 {
    static [376363416];
    e = C3;
    static [C3];
    104;
    b;
    #e = 9007199254740991n;
    static {
        super.b = this;
        let {...v5} = this;
    }
}
let v8 = [-9223372036854775807,45087,-268435456];
[509174734,-30078599,-1953700757,-725509519,50139,1073741825];
const v10 = [15,55234,268435441,0,9007199254740992,129];
const v11 = /\p{Script=Greek}/ds;
const v12 = /.\P{Decimal_Number}/gvds;
const v13 = /xyz{1,32}?a\nb\bc/ums;
class C22 {
}
try { v12.compile(v13); } catch (e) {}
v11.source;
v8 = v10;
new Uint32Array(3972);
new Int32Array(3);
new Int8Array(210);
function F34(a36, a37, a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    a36.lastIndexOf(a36, a37);
}
const v42 = new Int16Array(2);
new Uint16Array(v42);
