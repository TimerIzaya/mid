-2081157314n >> -2081157314n;
const t0 = "128";
t0[2] = "128";
try { ("-65537").fixed(); } catch (e) {}
try { ("1406504709").__defineGetter__("defineProperty", 4294967296n); } catch (e) {}
const t5 = "91Y";
t5[2] = "91Y";
[1000,9007199254740992,268435439,1640580717,-2];
[-28627,818895812,-12,-9223372036854775807,1000,56923,129,5];
const v17 = [8,9,-11,-11];
try { ("bFUZL").padEnd(v17); } catch (e) {}
-65537 === -65537;
class C23 {
    static 166415147 = -682086.146287106;
    [-682086.146287106] = -65537;
    ["bFUZL"];
    a;
    static #b = -65537;
}
C23[166415147] = C23;
const v24 = new C23();
const v26 = ~2.220446049250313e-16;
v26 / v26;
function F29(a31, a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    a32 & a32;
    const v35 = a31 >>> a31;
    v35 % v35;
    const v37 = this.constructor;
    v37.length = v37;
    v37.name;
    try { new v37(a31, -1000000000000.0); } catch (e) {}
    a32 % a32;
    this.a = a31;
}
new F29(2.220446049250313e-16, v26, v26);
new F29();
class C43 extends F29 {
}
new C43();
new C43();
const v46 = new C23();
v46.bFUZL;
const v48 = new C23();
const v49 = v48.a;
const v51 = new Date();
try { Promise.reject(Date); } catch (e) {}
const v54 = Promise.reject();
const v56 = 128 == 128;
v56 && v56;
const v58 = v24.__proto__;
const v59 = v58?.constructor;
try { new v59(); } catch (e) {}
SharedArrayBuffer.b = SharedArrayBuffer;
const o63 = {
    "maxByteLength": 536870887,
};
const v65 = new SharedArrayBuffer();
v65.byteLength = v65;
new Uint8ClampedArray();
Int16Array.from(Int16Array).BYTES_PER_ELEMENT;
new Int16Array(128);
let v72 = 7;
v72--;
let v75 = v49 << v24;
v75--;
function F77(a79, a80, a81, a82) {
    if (!new.target) { throw 'must be called with new'; }
    a80[166415147];
    const v84 = this.constructor;
    try { new v84(v54, Promise, C23); } catch (e) {}
    a81.bFUZL;
}
const v87 = F77?.apply;
try { new v87(-1225276254n, SharedArrayBuffer); } catch (e) {}
const v89 = new F77(v58, C23, v24, v51);
v89?.f;
function f91() {
}
