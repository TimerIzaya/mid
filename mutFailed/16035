function f0() {
}
function f1() {
    return f0;
}
const v2 = [f1,f0,f1,f0,f0];
[v2,v2,[v2,f0]];
const o11 = {
    ..."-2",
    "c": "a",
};
const v12 = ("a2IBP")["boolean"];
const v13 = [];
function f14() {
    const v15 = -v13;
    const v16 = v15 && v13;
    Math.acos(0.0);
    let v25 = Math.sinh(0.0);
    const v26 = ++v25;
    v26 + v26;
    const v28 = -v16;
    Object.defineProperty(v12, "e", { enumerable: true, value: v15 });
    typeof v28 === "number";
    new BigUint64Array(129);
    new Uint16Array(v26);
    new Uint32Array(2622);
    return v16;
}
try { o11.charCodeAt("-2", v12); } catch (e) {}
const t29 = "-2";
t29["1"] = o11;
const t31 = "a2IBP";
t31[2147483649] **= v12;
let v45 = -5 || -1147529746;
const v46 = v45--;
const v48 = Math.sinh(v45 - -5);
Math.trunc(-1147529746);
f0 && v46;
const v51 = Math.log10(-5);
%PrepareFunctionForOptimization(f14);
for (let i64 = (() => {
        let {"a":v52,"length":v53,} = "boolean";
        new Int8Array(v51);
        new Uint16Array(14);
        new Int32Array(8);
        return 0;
    })();
    i64 < 6;
    i64++) {
    function f70() {
        return i64;
    }
}
f14();
%OptimizeFunctionOnNextCall(f14);
v48();
