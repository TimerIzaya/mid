let v0 = 15;
-10 instanceof WeakMap;
("async").toUpperCase();
class C8 {
    b = 5.0;
    static m(a10, a11) {
        let v12 = arguments;
        throw v12;
        ({"c":a11,"callee":v0,"length":v12,} = v12);
        return v12;
    }
    a;
    static {
        const v16 = Array(16);
        const o17 = {
            ...v16,
        };
        v0[5] = this;
        Reflect.construct(v0, [5.0,Reflect], v0);
    }
}
new C8();
new C8();
new C8();
new Uint16Array(2596);
gc();
const v32 = [];
function F33(a35, a36, a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    a35.strike();
    const v40 = this.constructor;
    try { new v40(a38, v32, a36, a38); } catch (e) {}
    a36[2];
}
const v46 = new ArrayBuffer(ArrayBuffer, ArrayBuffer);
try { v46.o(); } catch (e) {}
gc();
new Float32Array(477);
new Uint32Array(8);
/a[^a]/vim;
/[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]/uisy;
/[[\ca]+]/gvisy;
for (let [v66] of "Opx24") {
}
