const v4 = new WeakMap();
class C8 {
    #n(a10, a11, a12) {
        let v13 = 0;
        do {
            v4.get(4.0, -1.299745046458387, 4.871202874681639, this, this, 0.15563363039658973);
            this.e /= a10;
            v13++;
        } while (v13 < 9)
        return this;
    }
}
const v18 = new C8();
new C8();
new C8();
function F21() {
    if (!new.target) { throw 'must be called with new'; }
}
function f24() {
    v18 >= C8;
    return gc();
}
Int32Array[Symbol.iterator] = f24;
const v30 = new Int32Array(Int32Array);
Reflect.setPrototypeOf(v30, F21);
