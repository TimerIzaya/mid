let v3 = -9007199254740992;
Math.log10(v3);
let v5 = ++v3;
const o6 = {
    ...2147483649,
};
new Int32Array(5);
new Uint16Array(6);
new Uint32Array(181);
const t9 = "symbol";
delete t9[1];
class C25 {
    static #d;
    set b(a27) {
        this.search;
    }
    static ["Xkz0W"] = "Xkz0W";
    8;
    d;
}
function f31() {
    return 2720;
}
f31.valueOf = f31;
function F32(a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    const v36 = a35.constructor;
    let v37;
    try { v37 = new v36(a34, 256); } catch (e) {}
    -a34;
    a35--;
    v37.h = f31;
}
function f40(a41, a42, a43, a44) {
    function f46(a47) {
        return arguments;
    }
    Object.defineProperty(arguments, "toString", { enumerable: true, value: f46 });
    const v48 = arguments.toString(a42, f40, F32);
    function f49() {
        ("Vre").fixed();
        v48.normalize();
        const v54 = v5--;
        v54 << v54;
        return a43;
    }
    f49();
    %OptimizeFunctionOnNextCall(f31);
    return arguments;
}
f40();
new F32(65537, f31);
const v59 = new C25();
v59.toString = f31;
class C60 extends F32 {
    2;
    static toString(a62, a63) {
        this.d = this;
        const v65 = super[a63];
        try {
            delete this[v65];
            this[F32];
        } catch(e68) {
        }
    }
    #h;
    3120 = F32;
    #g = v59;
    valueOf(a70, a71, a72) {
    }
    [v59] = 256;
}
new C60();
new C60();
new C60();
