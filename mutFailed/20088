function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = -983604065;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
function f10() {
    return 11n;
}
class C11 {
    constructor(a13, a14) {
        a14 & a14;
        %VerifyType(this);
        super[this] = v4;
        try { Symbol.keyFor(v6); } catch (e) {}
        const v18 = Symbol.toStringTag;
        Symbol.for(v18.description);
        a13[v18] = f10;
        let v22;
        try { v22 = v4.getMilliseconds(10n); } catch (e) {}
        this[v22];
        /z0LK/gvdim;
        /L*/uis.lastIndex;
        const v27 = /a(?!bbb|bb)c/ums;
        v27.dotAll = v27;
    }
    static #b = v4;
    257 = 11n;
    static [v6];
}
const v28 = new C11(v5, 11n);
v28[257] = v28;
const v29 = new C11(v5, 10n);
v29[257] = v29;
new C11(v5, 10n);
function f31() {
    return 10n;
}
[-2.220446049250313e-16];
([0.5776053994163061,4.0,1000000000000.0,-1000000.0,-1.4595150280728434e+308,-577.7044194648096])[3];
[1000000000000.0];
for (let v36 = 0; v36 < 25; v36++) {
}
try { this.version(); } catch (e) {}
this[628786973] = BigUint64Array;
