const v0 = [-500.4964753015264,1.0,-1000000.0,-2.0,-5.0,-1.3580174709074615e+308,-402343.73467152147,4.0,1.0,2.61837286006796e+307];
const v1 = [1000000000000.0];
const v2 = [0.5139487660368681,0.070939337862995,-2.0,457081.9062500023,-1e-15,2.0,9.324789606232027,1.0];
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = v0;
    } catch(e7) {
    }
}
new Date(..."undefined");
try {
    ("-6").indexOf("deleteProperty", 5);
} catch(e15) {
}
const v16 = new F3(F3, v1);
const v17 = new F3(v0, v2);
const v18 = new F3(v1, v2);
const v22 = new Float32Array(3);
const v25 = Reflect.construct(Uint32Array, [v22]);
class C26 {
    static b = 3;
    g = v18;
}
new C26();
new C26();
new C26();
const v31 = [v0,v2,[v18,v17,v1,v1],F3,v2];
class C34 {
    constructor(a36, a37) {
        const v38 = this.constructor;
        try { new v38(); } catch (e) {}
        super[this] = -383.07613008959197;
    }
}
const v40 = new C34();
let v42;
try { v42 = v16["o"](v31, "o"); } catch (e) {}
const v43 = delete v2["o"];
for (let v44 = 0; v44 < 5; v44++) {
    function f45() {
        const v46 = [];
        try {
            v46.some(v44);
        } catch(e48) {
        }
        return v46;
    }
    let v49 = 0;
    do {
        Object.defineProperty(v22, 3, { writable: true, enumerable: true, get: f45, set: f45 });
        try {
            C34.fuck(v25, F3);
        } catch(e51) {
        }
        v49++;
    } while (v49 < 3)
    f45();
    %OptimizeFunctionOnNextCall(f45);
}
[] = "o";
[v18,v2];
const t61 = [-3.0];
t61.length >>>= 213;
Array(4096).shift();
const v68 = new BigInt64Array(65535);
class C69 {
    static [v68];
}
const v73 = async (a74, a75, a76, a77) => {
    v16[4096] = delete v40?.e;
    await v42;
    return v43;
};
const o85 = {
    "f": "k",
    set e(a84) {
    },
    2147483647: "__proto__",
    "g": "SXJb",
    "h": "__proto__",
};
for (const v86 in o85) {
}
