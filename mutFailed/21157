const v1 = new Set();
const v2 = /Wka+b|c*/gvisy;
const v3 = /(x)(x)(x)\3/vdis;
/(?!(a))\1?/gm;
let v5 = -9223372036854775807n;
e = v3;
new Date(Date);
Math.hypot(Symbol, 2.220446049250313e-16, 2.220446049250313e-16);
const o18 = {
    valueOf(a14, a15, a16, a17) {
        super.c **= v5;
        return a17;
    },
};
new Float32Array(17);
for (const v24 of v1) {
    let [] = v1;
    v5 = v24;
    new Date();
}
const v29 = new Int32Array(3031);
const v35 = new Int16Array(v5);
v35[10] = -9007199254740992;
new Uint16Array(256);
for (let v37 = 0; v37 < 5; v37++) {
    function f38() {
        function f39() {
            ("1073741824").constructor;
            v37();
            const v43 = f39.replaceAll();
            v43.slice(v43);
            return -9007199254740992;
        }
        for (let i47 = 0, i48 = 10;
            (() => {
                try {
                    v2.d = 3031;
                } catch(e49) {
                }
                Date.UTC(17, ...v29, v37, o18, f39);
                return i47 < i48;
            })();
            i47++, i48--) {
        }
        return f38;
    }
    f38();
    %OptimizeFunctionOnNextCall(f38);
}
