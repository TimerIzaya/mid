function f0() {
    const v4 = -9 + -9;
    v4 ^ v4;
    const o14 = {
        "e": -3.0,
        ["toString"]: -9,
        "b": -3.0,
        [-9]: "toString",
        9: -3.0,
        m(a7) {
            [-1000000000.0,2.0,-1000.0,-766713.5913647496,0.8881156085396605,2.2250738585072014e-308,5.0];
            const v9 = [2.0,-609990.6301906258,NaN,1000000000000.0,3.0,695.3724212939007,0.13247519732451596,445.91735695541706,1.7976931348623157e+308];
            [1.0,2.220446049250313e-16,-0.0];
            return v9;
        },
    };
    o14.c = o14;
    return o14;
}
const v15 = f0();
f0();
const v17 = f0();
f0.b = v17;
v17[9] = v17;
4096n >= 4096n;
4096n - 4096n;
64376n > 64376n;
const v24 = 64376n / 64376n;
868424837n == 868424837n;
5n - v17;
v24 << (5n / 5n);
let v33 = 5n << 5n;
v33++;
const v35 = [];
try { v35.findLast(868424837n); } catch (e) {}
4061 * 4061;
const v40 = new Float32Array(4061, 4061);
let v41;
try { v41 = v40.indexOf(v15); } catch (e) {}
const v42 = v35.constructor;
v41.name;
let v44;
try { v44 = new v42(v40); } catch (e) {}
v44[0] = v44;
class C45 extends v42 {
    [4061] = v40;
    3;
}
C45.prototype = C45;
const v46 = C45?.__defineGetter__;
try { new v46(9n, 5n); } catch (e) {}
const v48 = v46.name;
try { v48.toLocaleLowerCase(); } catch (e) {}
let v50;
try { v50 = v48.padStart(Float32Array); } catch (e) {}
try { v50.link(v44); } catch (e) {}
try { new v46(Float32Array, v15); } catch (e) {}
const v53 = new C45();
try { v53.toLocaleString(); } catch (e) {}
const v55 = v53?.constructor;
try { new v55(); } catch (e) {}
