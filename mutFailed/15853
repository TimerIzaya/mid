const v0 = [-1.0575510470862959e+308,2.220446049250313e-16,-2.220446049250313e-16];
const v1 = [-161506.6095665238,3.0,0.0,-610.5383592806038,NaN,5.290036787010393e+307,0.1777447529332643];
const v2 = [-0.0,1000000000000.0,-Infinity,0.4588736125421342,-1.0,1000.0,0.6171135731567802,234652.65384477377,-330466.0992733395];
try {
    v0.reduce(v2);
} catch(e8) {
}
const v9 = v1.length;
const v10 = new Map();
class C14 extends Map {
    constructor(a16, a17, a18, a19) {
        super(a16);
        a = 65536n;
    }
    static [v2];
    static #f;
    1;
    static #b = -47309n;
    static f;
    [4294967297n] = 4294967297n;
    268435440;
    #c;
    static #g = Map;
}
const v26 = new C14(v1, -47309n, -943114667n, v2);
new C14(v0, 4294967297n, 65536n, v2);
new C14(v0, 4294967297n, -47309n, v1);
const v30 = new Float32Array();
new Float32Array(C14, v9, v9);
v26.__proto__;
v10[5] = v26;
try {
    new Float32Array(v2, v9, v9);
} catch(e34) {
}
new Float32Array([v30]);
