const v0 = [2147483647,127,257,-2147483648,-40579,-21765,-9007199254740992];
[14,33911,1,-12478,16,4294967296,-9223372036854775807];
[256,1000,613604360,0,1276713745,50038];
const v7 = -178;
Uint8Array.name;
v0.BYTES_PER_ELEMENT;
const v11 = new Uint8Array(178);
v11[96] = v11;
256 | v7;
new Uint16Array(256);
let v18;
try { v18 = new BigInt64Array("TIVvP", "TIVvP", Uint8Array); } catch (e) {}
const v19 = new v18(10);
const v20 = v19[6];
v20 | v20;
function f22() {
    for (let v23 = 0; v23 < 5; v23++) {
        v23 & v23;
    }
    return f22;
}
let v25 = f22.length;
v25++;
%OptimizeFunctionOnNextCall(Uint16Array);
f22();
