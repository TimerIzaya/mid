new Uint32Array(127);
const v5 = new BigInt64Array(0);
const v8 = new Int16Array(14);
class C9 extends Uint32Array {
    static {
        [-1020846381,-39300,-128,6,-1485748758,63473,8,0];
        [-4096];
        [-1129246030,390801223,-9007199254740992];
    }
    f;
    [v5] = v8;
    2586555945 = v5;
    #g;
}
new C9();
new C9();
new C9();
const v21 = new Set();
function f22(a23) {
    const o39 = {
        o(a25, a26) {
            super[a23];
            function f28() {
                const v29 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
                for (let v30 = 0; v30 < 5; v30++) {
                    function f31() {
                        try {
                            v29.forEach();
                        } catch(e33) {
                        }
                        return f31;
                    }
                    f31.f = f31;
                    f31();
                    %OptimizeFunctionOnNextCall(f31);
                }
                return v29;
            }
            function f35(a36, a37) {
                %PrepareFunctionForOptimization(f28);
                f28();
                %OptimizeFunctionOnNextCall(f28);
            }
        },
    };
}
f22(v21);
const v41 = f22(f22);
f22(Set);
new Uint32Array(420);
new Int32Array(2057);
new Int8Array(260);
const o53 = {
};
o53.h = o53;
const v55 = !o53;
const v56 = 1842642860 % v55;
v56 % v56;
const v58 = new WeakMap();
try { v58.delete(v55); } catch (e) {}
class C62 {
    static {
        try {
        const t0 = "boolean";
        t0(this);
        } catch (e) {}
    }
}
try { C62(); } catch (e) {}
const v67 = ("isInteger")?.replaceAll;
const v74 = [-2147483647,64098,-9383,1024,129,-5];
[1000,-16,-38597,12,-3399,32508];
const v76 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v78 = new Uint32Array();
const v80 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v81 = [601759695];
const v82 = [1073741824,1073741823,1376142744,1073741825];
function f84(a85, a86, a87, a88) {
    function f89() {
        v76.length;
        try {
        } catch(e91) {
        }
        const o92 = {
        };
        const o112 = {
            valueOf(a94, a95) {
            },
            1073741824: v78,
            [-4294967297n](a97, a98, a99, a100) {
                class C102 extends Date {
                    static get c() {
                    }
                }
                eval();
                class C106 {
                    constructor(a108, a109, a110, a111) {
                    }
                }
            },
            "arguments": v80,
        };
    }
    const v114 = new Int8Array();
    v114.buffer;
    const v118 = new Int32Array();
    v118[3];
    for (let v120 = 0; v120 < 10; v120++) {
    }
    let v122;
    try { v122 = v82["find"]("find", a88, v81); } catch (e) {}
    v122 <= a87;
}
for (let v124 = 0; v124 < 10; v124++) {
    f84();
}
%OptimizeFunctionOnNextCall(f84);
f84();
[-50328,-14,3,128,-11,64,-65535];
class C128 {
    [v74] = -1000000.0;
    constructor(a130, a131, a132, a133) {
        super[this];
    }
    g;
    c;
    #toString(a136, a137, a138) {
    }
    1 = 257n;
}
new C128(1073741825n, 1.0, 7.589647165982214);
const v140 = new C128(411585671n, -1000000.0, -1000000.0, 1.0);
new C128(v140, -1000000.0, 1.0);
/(?:a*)+bU\u0034xyz{1,32}/udi;
/vfoo|(bar|baz)|quux/gvds;
try { v67(); } catch (e) {}
const o151 = {
    toString(a146, a147, a148, a149) {
        v41 * a149;
    },
};
