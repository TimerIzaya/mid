class C3 {
    static {
        this.n = this;
        let v6;
        try { v6 = this["n"](this); } catch (e) {}
        try {
            super.p(512, v6, "n", v6);
        } catch(e8) {
        }
    }
    #b = 354.3221846765007;
    #c;
    static [512] = 512;
    static [-2.2250738585072014e-308] = -2.2250738585072014e-308;
}
const v9 = new C3();
const v10 = new C3();
const v11 = new C3();
class C12 extends C3 {
    #p(a14, a15, a16, a17) {
        this[354.3221846765007] = a15;
        try {
            super.o(v9, this, 354.3221846765007, this, C3);
        } catch(e19) {
        }
        return a16;
    }
    a = v9;
    static 7 = v10;
    d;
    static 5 = v11;
}
const v20 = new C12();
new C3();
new C12();
new Int16Array(114);
new BigInt64Array(730);
new Int8Array(3631);
let v34 = new Uint8Array(128);
function f35(a36, a37) {
    new WeakMap();
    return v20;
}
v34.toString = f35;
let v40;
try { v40 = v34.reduce(); } catch (e) {}
function f41() {
    const o110 = {
        m(a45) {
            a45.next = f35;
            try { a45.next(a45, 1261703539); } catch (e) {}
            a45.c = a45;
            a45.h = a45;
            const o47 = {
            };
            const t55 = -65535;
            t55.h = o47;
            o47.h = o47;
            function f48(a49, a50, a51) {
                return o47;
            }
            f48.caller = f48;
            try {
                o47.e = -65535;
            } catch(e52) {
                new Uint8ClampedArray(798, -65535, e52);
                new Uint8ClampedArray(798, ...114, o47);
            }
            try {
                const o57 = {
                };
                Object.defineProperty(o57, "e", { writable: true, configurable: true, enumerable: true, value: Int16Array });
                o57.e = 1261703539;
            } catch(e58) {
            }
            let v60;
            try { v60 = ("EV").link(); } catch (e) {}
            class C62 {
                static [376363416];
                static {
                    this.b = this;
                    super.b = this;
                    let {...v64} = this;
                }
            }
            let v65 = 0;
            class C66 {
            }
            const v69 = new Int8Array(3938);
            let v70 = 3;
            let v72 = 0 >> 0;
            for (let i = 0; i < 5; i++) {
                [...v70] = v69;
                v34++;
            }
            const o74 = {
            };
            try {
                let v75 = 0;
                for (let i = 0; i < 5; i++) {
                    ({"c":v40,"d":v65,...v72} = v60);
                    try {
                        o47.fuck(128, a45);
                    } catch(e77) {
                    }
                    v75++;
                    new Uint8Array(64);
                    const o82 = {
                    };
                    v75 < 5;
                }
                const o85 = {
                };
                function f87(a88) {
                    function f89(a90, a91) {
                        const o92 = {
                            ...a90,
                        };
                        o92.d;
                        return f89;
                    }
                    return v72;
                }
                String[Symbol.toPrimitive] = f87;
                const v96 = new String(String);
                class C97 {
                    #p(a99, a100, a101, a102) {
                    }
                    constructor(a104, a105) {
                        try {
                            v96.#p();
                        } catch(e107) {
                        }
                    }
                }
                const o108 = {
                };
            } catch(e109) {
            }
            return Int8Array;
        },
    };
    return o110.m(o110);
}
f41();
f41();
