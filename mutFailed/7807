Math.atan2(-0.0, -0.0);
const o5 = {
    "get": Symbol,
};
Date[Symbol.toPrimitive] = Symbol;
Date.valueOf = Date;
new Date(-9223372036854775807, -9223372036854775807, Date, -9223372036854775807);
const v12 = [Infinity,5.072687501529128e+307,0.4093098171074484,4.0,-4.442441003635313e+306,843998.4933901483,-714.8973177887364];
v12.toString = Date;
15312 | v12;
const v15 = new Float64Array(129);
const v18 = new BigUint64Array(12);
new Uint8ClampedArray(1024);
const o27 = {
    "maxByteLength": 1293466293,
};
new SharedArrayBuffer(1796, o27);
const v30 = [BigUint64Array];
const v32 = [Uint8ClampedArray,Float64Array,[12,1024,v18,Float64Array,v15]];
const o33 = {
};
o33.p = Float64Array;
new Int8Array(3938);
class C40 {
    static {
        this.c = v30;
        this[Symbol.hasInstance];
    }
    #p() {
        let v46;
        try { v46 = this.p(undefined, this, this, this, this); } catch (e) {}
        try {
            v46.#p(undefined, v46, v46, undefined);
        } catch(e48) {
        }
        return undefined;
    }
    static #a = undefined;
    c = undefined;
}
C40.c = v32;
const v49 = new C40();
C40.c = v49;
try { o33.p(o33, ...-9n, -128n); } catch (e) {}
