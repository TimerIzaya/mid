const v0 = [];
("undefined").localeCompare("undefined", "symbol", "undefined");
class C6 {
}
new C6();
[-277499.1995674389,-3.125881540463395e+307];
[1.0];
false.fuck();
const t5 = "we3R";
t5[544948.2768085275] = -1.187102817546368e+308;
[1000000.0,-5.0,2.0,0.7669943171696636];
try { ("Nej").sup(); } catch (e) {}
function f21() {
    return v0;
}
1357495401 % 1357495401;
9007199254740992 | 9007199254740992;
new Int16Array(2);
const v30 = [601759695];
const v31 = [1073741824,1073741823,1376142744,1073741825];
function f32(a33, a34, a35, a36) {
    try {
        v31.forEach(a34);
    } catch(e38) {
    }
    const v40 = new Int8Array();
    const v43 = new Int32Array(1024);
    v43[3];
    let [v45] = v40;
    try { v31["find"](..."find", a36, ...v30); } catch (e) {}
}
for (let v48 = 0; v48 < 25; v48++) {
    v48 - v48;
}
function f50() {
}
new f50();
const v53 = new Int8Array();
let v54 = 3;
for (let i = 0; i < 5; i++) {
    [...v54] = v53;
}
function F57() {
    if (!new.target) { throw 'must be called with new'; }
    const v59 = this.constructor;
    let v61 = -16n;
    function f62() {
        v61 *= -1911645276n;
        return F57;
    }
    f62();
    new v59(f62, f62());
}
const o68 = {
    "execution": "-65537",
    "type": "minor",
};
try { this.setTimeout(); } catch (e) {}
this[628786973] = BigUint64Array;
