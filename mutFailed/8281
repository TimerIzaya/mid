const v6 = [-9223372036854775807,8,1073741824,-512166552,255,-9,236267346];
let v7 = 0;
while (v7 < 5) {
    v6[v6] = 64;
    v7++;
}
const v11 = [10068,8,-6,512];
Object.defineProperty([13,-14,1073741824,0,1,2,-13,268435440,11543], 11, { writable: true, value: v11 });
try { v6.keys(); } catch (e) {}
v6[268435439] /= 64;
const o19 = {
    "maxByteLength": 197,
};
const v21 = new SharedArrayBuffer(197, o19);
new BigInt64Array(v21);
const v24 = [-2147483649,-4,268435441,4,9,16,-4096,-1093606816];
[-3,-468211959,-27500,-33849,257,-45958,1,-55074,9223372036854775807,536870889];
[1073741824,-13,4096,50471,-2];
function F29(a31, a32, a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    const v35 = this.constructor;
    try { new v35(a31); } catch (e) {}
    this.c = a31;
}
new F29(-2.0, 10000, v24);
new F29(-1.093925554716035e+308);
