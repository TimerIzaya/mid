function f0() {
    const o13 = {
        toString(a5) {
            const v7 = this.__proto__ | this;
            try { a5(v7, v7, v7); } catch (e) {}
            return v7;
        },
        p(a10, a11) {
            a11?.[a11];
            return this;
        },
        2565: "e",
        ..."e",
    };
    return o13;
}
const v14 = f0();
const v15 = f0();
const v16 = f0();
class C20 {
    constructor(a22, a23, a24, a25) {
        try {
            this.fuck(a25, a25, [this,v14,a22,a24,1194039576n]);
        } catch(e28) {
        }
        new Uint8ClampedArray(356);
        new BigUint64Array(64);
        new Uint32Array(220);
    }
}
const v38 = new C20(f0, C20, v16, v16);
new C20(128n, v38, v38, v14);
const v40 = new C20(v15, v38, v15, v14);
[-4294967295,4294967297,65535];
[14,-4294967297,22245,-65537,-9007199254740992,-16];
[-306881749,-10,-11659,-1,59334];
function F44() {
    if (!new.target) { throw 'must be called with new'; }
}
class C46 extends F44 {
    static {
        function f48() {
            return v40;
        }
        Object.defineProperty(this, "fuck", { writable: true, configurable: true, get: f48 });
        try {
            this.fuck(this, this, F44);
        } catch(e50) {
        }
    }
    static 10;
}
