const v5 = new Float64Array(3);
Int8Array.d = Int8Array;
const v8 = new Int8Array(3663);
6 - 6;
const v11 = v8[14n];
v11 | v11;
try {
    v11.__proto__ = v8;
} catch(e13) {
}
switch (v8) {
    case Float64Array:
        v11[v8] = Int8Array;
        break;
}
const v15 = new Uint16Array(536870887n);
if (v15) {
    try { (-65535n).entries(); } catch (e) {}
} else {
    v5.__proto__;
}
Float64Array.d = Float64Array;
const v21 = new Float64Array(1);
v21[0] = v21;
Reflect.construct(Int8Array, [v21]);
