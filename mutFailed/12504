const v2 = new Float64Array(104);
const v4 = 512 - 512;
const v5 = v4 + v4;
const v7 = new Int16Array(512);
const v8 = v7?.toString;
let v9;
try { v9 = new v8(); } catch (e) {}
new Float64Array(104);
let v16;
try { v16 = ("h").trimStart(); } catch (e) {}
v16.length;
function F18(a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(v16); } catch (e) {}
    const v23 = this.constructor;
    v23.e = v23;
    try {
    const t0 = 6;
    new t0(this);
    } catch (e) {}
    a21 >>> a21;
}
const v26 = F18.prototype;
let v27;
try { v27 = F18(Float64Array, v2); } catch (e) {}
const v28 = new F18();
const v29 = v28?.constructor;
try { new v29(F18, v27); } catch (e) {}
const v31 = new F18();
const v32 = v31?.constructor;
try { new v32(v28, v16); } catch (e) {}
const v34 = typeof "9MQU";
try { ("object").blink(); } catch (e) {}
v34 === "object";
let v39;
try { v39 = ("-9007199254740991").trimStart(); } catch (e) {}
try {
    Math.tanh(129);
    +129;
    const v44 = v39++;
    Math.tan(v44);
    v39 ** v44;
    Math.asinh(v39);
} finally {
    let v48;
    try { v48 = new v9(v26, v28, Float64Array, "setInt32", v5); } catch (e) {}
    let {"b":v49,"h":v50,...v51} = v48;
}
