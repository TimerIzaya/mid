const v0 = [];
class C1 {
    2 = v0;
    static get f() {
        return this in v0;
    }
    static a;
    [v0] = v0;
}
const v7 = new C1();
const v8 = new C1();
v0[2] = v8;
new C1();
const v11 = new v7();
try { v11.add(C1); } catch (e) {}
class C13 extends C1 {
    static o(a15, a16, a17, a18) {
        a17[a15] &= a18;
        Math.asin(v0);
        a18++;
        256 << 256;
        -1.0;
        return a16;
    }
}
const v26 = new C13();
v26[2] = v26;
new C13();
const v28 = new C13();
v28[2] = v8;
const v30 = [1073741824,255,-93221804,1,268435440];
v26.length = 512;
const v34 = v30["concat"]([Uint32Array]);
v34.g = v34;
