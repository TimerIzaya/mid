-43141n / -43141n;
class C7 {
    static #toString(a9, a10, a11, a12) {
        const t3 = "-9007199254740992";
        delete t3[3443];
        return a10;
    }
    valueOf(a15, a16, a17) {
        a17.length;
        let v19;
        try { v19 = a16(a15, -256n, "-9007199254740992", this, "-9007199254740992"); } catch (e) {}
        return v19;
    }
    10000 = 9007199254740991n;
    static 2 = "-9007199254740992";
}
const v20 = new C7();
v20[10000];
const v22 = new C7();
new C7();
class C24 extends v22 {
    ["e"] = "-9007199254740992";
    static n(a26, a27, a28, a29) {
        [] = a28;
        typeof a28 === "bigint";
        return a28.length;
    }
    268435441;
    13 = v22;
}
C24.length = C24;
const v34 = new C7();
let v35;
try { v35 = v34.valueOf("-9007199254740992", C24, "-9007199254740992"); } catch (e) {}
const v36 = new C24();
new C24();
const v38 = [155533.8602852358,2.0];
function F40() {
    if (!new.target) { throw 'must be called with new'; }
    const v42 = this?.__defineSetter__;
    try { new v42(v35, F40); } catch (e) {}
    const v44 = this?.__defineSetter__;
    try { new v44(v44, 9007199254740991n); } catch (e) {}
    try { new v44(); } catch (e) {}
    for (const v50 of v36(19793)) {
        v38[658291203] = v50;
        C7--;
    }
}
F40.arguments = F40;
new F40();
const t51 = v22.constructor;
const v54 = new t51();
const v55 = v54?.__defineSetter__;
try { new v55(null, v35); } catch (e) {}
