[];
const v3 = new Symbol(0);
const v6 = new WeakRef(5, Symbol, Symbol);
const v9 = new parseInt(35);
class C10 extends parseInt {
    get caller() {
        let v12;
        try { v12 = this.values(); } catch (e) {}
        try {
            v9.reduceRight(v12, WeakRef);
        } catch(e14) {
        }
        super.buffer;
        return v6;
    }
    [-2] = WeakRef;
    268435440 = Symbol;
    static [WeakRef];
}
new C10();
new C10();
new C10();
try {
    function f19(a20, a21, a22) {
        do {
        } while ((() => {
                const v25 = 2147483648 < -6357;
                const v26 = !v25;
                v26 && v26;
                return v25;
            })())
        f19(2147483648, f19, 2147483648);
        return 2147483648;
    }
    f19(f19, f19, f19, v3, Symbol);
} catch(e30) {
}
