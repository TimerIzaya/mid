function f0() {
    const v3 = new BigUint64Array(16);
    try { Float32Array.apply(16, v3); } catch (e) {}
}
class C7 {
    toString(a9, a10) {
        class C11 {
            constructor(a13) {
                for (let v14 = 0; v14 < 32; v14++) {
                    for (let v15 = 0; v15 < 5; v15++) {
                    }
                    const v16 = this.p16;
                    try { a13(C7, a9, v16, v16, v14); } catch (e) {}
                }
            }
        }
        new C11(this);
        const v19 = new C11(C7);
        new C11(v19);
    }
}
const v21 = new C7();
function f22(a23, a24, a25, a26) {
    const o27 = {
        [v21]: a24,
    };
    return C7;
}
f22();
const v31 = /\1(a)*/gudmsy;
let v32 = /[(?:ab|cde)]/vimy;
/a+bN*/us;
let v36 = [601759695];
const v37 = [1073741824,1073741823,1376142744,1073741825];
v36++;
function f39(a40, a41, a42, a43) {
    function f44() {
        b = v36;
        const o45 = {
            "c": v36,
        };
        return o45;
    }
    f44();
    %OptimizeFunctionOnNextCall(f44);
    try { v37["find"](..."find", a43, ...v36); } catch (e) {}
    return v37;
}
class C50 extends f0 {
    static get f() {
        2005658976 * this;
        v32 = v31;
        return -3943;
    }
    static #toString(a57, a58) {
        try { new a58(v31); } catch (e) {}
        let v60 = 0;
        do {
            class C65 {
                4294967296 = 996195971n;
            }
            new C65();
            v60++;
        } while (v60 < 5)
        return -41010;
    }
}
new C50();
new C50();
new C50();
for (const v77 in [1000.0,-1000.0,0.4309916776051478,1000000.0,-1.0,-560.6262021777798,NaN,3.0]) {
    Math.tan(-23394);
}
