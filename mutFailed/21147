function f2() {
    let v3;
    try { v3 = Uint32Array(1131, 1131, 1131); } catch (e) {}
    const v4 = new Uint32Array(v3, 1131, 1131);
    return v4;
}
Uint32Array[Symbol.iterator] = f2;
const v7 = new Uint32Array(Uint32Array);
const v10 = new Uint32Array(6);
const v13 = new Uint8Array();
function f14(a15, a16, a17, a18) {
    a17 ^ a17;
    const o24 = {
        "b": a15,
        ...v13,
        n(a21, a22) {
            return a18;
        },
        get g() {
            return this;
        },
    };
    return a16;
}
for (let v25 = 0; v25 < 500; v25++) {
    f14();
}
const v28 = new Uint32Array(3);
v28.toString = Symbol;
function f29(a30, a31, a32) {
    const o33 = {
        [v28]: v7,
        "c": Uint32Array,
        ...a32,
        [1131]: Uint32Array,
        [1131]: a30,
        "a": 3,
        "g": Uint32Array,
        268435439: a30,
        257: v7,
        ...v10,
        ...v10,
        "d": Uint32Array,
        "e": 1131,
    };
    return o33;
}
f29(Uint32Array, Uint32Array, v7);
f29(Uint32Array, Uint32Array, v10);
f29(Uint32Array, Uint32Array, v7);
const v37 = [-1.7976931348623157e+308,1000000000.0];
const v38 = [4.0902151973711183e+307,-758.964951148866,1e-15,-5.261122784521454];
const v39 = [-2.2250738585072014e-308,-3.0,1000000000.0,-6.987156890700151,4.0];
function f40() {
}
try { new f40(); } catch (e) {}
class C44 {
}
new C44();
function f46(a47, a48) {
    const o57 = {
        "a": v38,
        "d": a48,
        "type": "EV",
        p(a50, a51) {
        },
        get c() {
            a48[1];
            a47[v7];
            return v39;
        },
    };
    const v58 = /\xf0\x9f\x92\xa9a*/us;
    function F61(a63, a64, a65, a66) {
        if (!new.target) { throw 'must be called with new'; }
    }
    new F61(v58, 1, -1263139894, F61);
    return o57;
}
f46(v37, v37);
f46(v39, v39);
class C71 extends f46 {
    static #f = 6;
}
const v73 = new SharedArrayBuffer();
function f74(a75, a76, a77, a78) {
    const o79 = {
    };
    function f80() {
    }
    const o84 = {
        n(a82, a83) {
        },
    };
}
for (let v85 = 0; v85 < 625; v85++) {
    f74(f74, v85, v73, v85);
}
