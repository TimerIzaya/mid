let v0 = Set;
const v1 = new v0();
class C2 extends v0 {
    m(a4, a5) {
        v0 = a5;
        let v6 = 0;
        do {
            v1 < this;
            v6++;
        } while (v6 < 10)
        return this;
    }
    1 = v1;
    0;
}
new C2();
new C2();
function F13(a15, a16, a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    const v19 = this.constructor;
    try { new v19(); } catch (e) {}
    typeof Float32Array;
}
new C2();
/Xa??a$C(?<=a)*/gud;
/SE/gvmy;
/A(?<a>.)\k<a>/vdimsy;
[-5.0,-1.0,903352.9932873701,-368.95350346396367,1000000000000.0,-348595.67608437827,0.7767781941456077,-1.7976931348623157e+308,5.0,-1000000000000.0];
const v28 = [1000000000000.0,Infinity,1000000000000.0,-4.0,0.12466507442060715,-3.0,-5.0,5.0,-1.5189896032186919e+308];
[-484522.4056168975,0.901441418924249,-1000000000.0,3.903104987855613,-2.2250738585072014e-308];
new BigInt64Array(11);
function f35() {
    return f35;
}
const v36 = [601759695];
const v37 = [1073741824,1073741823,1376142744,1073741825];
function f38(a39, a40, a41, a42) {
    function f44() {
        return a39;
    }
    f35();
    const v47 = new Int8Array();
    v47.buffer.slice();
    %OptimizeFunctionOnNextCall(f44);
    let v51;
    try { v51 = v37["find"](..."find", a42, ...v36); } catch (e) {}
    v51 <= a41;
    return arguments;
}
[];
[];
new WeakMap();
const v62 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v68 = new BigInt64Array();
function f69(a70, a71) {
    let o73 = {
        "d": a70,
        ...a70,
        get e() {
            return a71;
        },
    };
    [,...o73] = v68;
    return -4096;
}
f69(4046, 3768);
f69(4046, 4046);
const v80 = v62.length;
const o107 = {
    [v80](a82) {
    },
    "apply": f35,
    "c": v28,
    "type": "RH",
    toString(a84, a85) {
    },
    set b(a87) {
        new BigUint64Array();
        function f90(a91, a92, a93, a94) {
            for (let i97 = 0, i98 = 10; i97 < i98; i98--) {
                for (let v105 = 0; v105 < 5; v105++) {
                    v105 >>> v105;
                }
            }
            return a92;
        }
        %OptimizeFunctionOnNextCall(f90);
    },
};
