let v0 = -32849;
const v3 = /((?:a+){0,0}[^4pf[\cZ]*])/gudimy;
const v5 = /a\nb\bc/giy[128];
v3.global;
v0 |= v5;
const v10 = Math.asin(-377190614);
Math.log(-46423);
-26073;
!26073;
const v14 = -46423 | 128;
const v15 = /[\0]/udimy;
function f16() {
    return -46423;
}
class C17 extends f16 {
    e;
    4 = v14;
    static #d;
    static g;
    d = C17;
    static #a = v10;
    h = v15;
    f;
    g;
    #n(a19, a20, a21) {
        [2078668464,19790,-14];
        [536870887,5,2,1000,256,4,64818];
        return [-9007199254740991,-839305695,61293,5,3,-1073741824,794271528,-719392902];
    }
    c = v0;
}
new C17();
new C17();
new C17();
const v28 = [-768400.1657361139];
class C29 {
}
new C29();
const v31 = new C29();
function F32(a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    const v37 = this.constructor;
    try { new v37(a35, a36); } catch (e) {}
    -a34;
    a36 | a36;
    try {
        this.e = v31;
    } catch(e41) {
        a36 - v28;
    }
}
const v43 = new F32();
const t52 = v43.constructor;
new t52();
