const v0 = /a+b/gudim;
const v1 = /Up\P{sc=Greek}/gdis;
/xyz{1,32}*/gviy;
try { v1.test("19196"); } catch (e) {}
let v6 = !true;
let v10 = 1e-15;
--v10;
let v12 = v6++;
v0 + -2147483648;
Math.exp(9223372036854775807);
v12++;
function f18() {
    return "OROB7";
}
class C19 {
    p(a21, a22, a23, a24) {
        if (v0 !== this) {
            function f26() {
                return a24;
            }
            a22 = C19;
            Object.defineProperty(a24, 4, { configurable: true, enumerable: true, value: f26 });
        } else {
            try {
                new f18();
            } catch(e31) {
            }
        }
        return a23;
    }
    #e;
}
const v32 = new C19();
const v33 = new C19();
new C19();
function F35(a37, a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v1;
    } catch(e40) {
    }
}
const v41 = new F35(v33, "OROB7", v0);
new F35(v41, "19196", v1);
new F35(v32, "boolean", v1);
class C44 {
}
/xEz\xe2\x81\xa3/gumy;
let v49 = new Float32Array();
let v53;
try {
const t0 = 50;
v53 = t0();
} catch (e) {}
let v54 = new Float64Array();
({"buffer":v53,"byteLength":v54,"length":v49,} = v54);
([1000000000000.0,6.579220753226213e+307,2.0,-2.220446049250313e-16,NaN,-1000000.0])["findIndex"](gc);
