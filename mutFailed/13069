[];
const v4 = new Uint8ClampedArray(512);
const v5 = v4?.findLastIndex;
try { new v5(v4); } catch (e) {}
222 >> 222;
Float32Array.BYTES_PER_ELEMENT = Float32Array;
const v10 = new Float32Array(222);
v10[164] = v10;
Uint16Array.e = v4;
Uint16Array.e = Uint16Array;
const v13 = new Uint16Array(129);
-0.0 % -0.0;
9223372036854775807 ^ 9223372036854775807;
const v22 = -1 >>> -1;
const v23 = -1 >>> -1;
v23 ^ v23;
class C25 {
}
C25.name;
const v27 = new C25();
const v28 = v27.constructor;
try { new v28(); } catch (e) {}
const v30 = new v28();
function f31() {
    function f32() {
        const v33 = new C25(C25);
        function f34(a35) {
            return Symbol.toPrimitive;
        }
        v33.toString = f34;
        return v22;
    }
    return f32;
}
function f38(a39) {
    const v40 = /[^7Y[a-zA-Z0-9]?]/vdmy;
    function f41() {
        const v43 = Array();
        try { v43.reduceRight(v40); } catch (e) {}
        return v43;
    }
}
Object.defineProperty(v30, "constructor", { writable: true, configurable: true, get: f31, set: f38 });
const v45 = v30?.constructor;
function f46() {
    try {
        new f38(undefined);
    } catch(e48) {
    }
    return Float32Array;
}
v45.toString = f46;
v45.prototype = v45;
try { new v45(); } catch (e) {}
const v50 = v30.constructor;
function f51(a52) {
    let v54 = 536870888;
    let v57 = v54 << v54;
    v54--;
    v54 - ++v57;
    Math.log(v54);
    return 222;
}
v50.toString = f51;
try { v50.toString(); } catch (e) {}
let v63;
try { v63 = new v50(); } catch (e) {}
function f64() {
    return f46;
}
Object.defineProperty(v63, "constructor", { writable: true, enumerable: true, get: f64 });
const v65 = v63?.constructor;
try { new v65(); } catch (e) {}
const v67 = new C25();
const v68 = v67?.__lookupGetter__;
try { new v68(v13); } catch (e) {}
const v70 = v67.constructor;
v70.length = v70;
new v70();
