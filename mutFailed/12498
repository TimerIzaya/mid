function f6(a7, a8) {
    a7.setFloat64 = -6440;
    const o11 = {
        "h": a7,
        get b() {
            try {
                a7.toString = a7;
            } catch(e10) {
            }
            return a7;
        },
        ...a7,
        "b": a8,
        "c": a8,
        [268435456]: a7,
    };
    return o11;
}
try { (-6440).getMilliseconds(f6, 268435456, -6440); } catch (e) {}
const o13 = {
};
try {
    o13.a = -65537;
} catch(e14) {
}
try {
    const o15 = {
    };
    o15.a = -65537;
    o15.e = -6440;
    o15 ** 4;
    o15.a;
    let v20 = 61566;
    let v22 = 268435456 * v20;
    v20++;
    const v24 = -1.5704056443450529e+308;
    ++v22;
    Math.tan(v24);
} catch(e27) {
}
try {
    const o28 = {
    };
    o28.a = -65537;
    o28.e = -6440;
    o28.b = 4;
} catch(e29) {
}
try {
    const o30 = {
    };
    o30.a = -65537;
    o30.e = -6440;
    o30.b = 16;
} catch(e31) {
}
f6(f6, 268435456);
const v33 = f6(268435456, -6440);
f6(v33, 4);
new Uint16Array(4);
const v40 = new Float64Array(9);
new Uint8ClampedArray(2674);
class C46 {
}
const v47 = new C46();
function f48(a49, a50, a51, a52) {
    const o55 = {
        "e": v47,
        ...a49,
        "d": a49,
        "a": o13,
        __proto__: C46,
        2: 9,
        "h": a52,
        "f": a49,
        [v47]: a52,
        "f": -65537,
        10: Float64Array,
        "a": a50,
        [-1]: v47,
        "h": a50,
        "g": 579720983,
        256: "getInt32",
        set b(a54) {
        },
        "b": a51,
        ...v47,
        "f": a51,
        "c": C46,
    };
    return o55;
}
const t92 = f48(f48());
const v58 = delete t92?.a;
let v59;
try { v59 = v33.setFloat64(v58, o13, 4); } catch (e) {}
f6(v59, -6440);
const o61 = {
    "apply": f48,
    "deleteProperty": f48,
    "getPrototypeOf": f6,
    "has": f6,
    "isExtensible": f6,
    "setPrototypeOf": f48,
};
new Proxy(v40, o61);
%PrepareFunctionForOptimization(f48);
const v64 = f48();
const v65 = f48();
%OptimizeFunctionOnNextCall(f48);
f48(C46, v64, v65, v64);
