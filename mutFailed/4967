function f0() {
}
do {
} while ((() => {
        function F2(a4, a5) {
            if (!new.target) { throw 'must be called with new'; }
        }
        ([1073741824,1073741823,1376142744,1073741825]).forEach(F2);
        const v8 = [];
        function f9() {
            const o11 = {
                p() {
                    return f9;
                },
                [v8]: v8,
                "a": v8,
            };
            return v8;
        }
        f9();
        f9();
        f9();
        const o17 = {
            "execution": "async",
        };
        function f18(a19) {
            const o22 = {
                n(a21) {
                    return a21;
                },
                [a19]: a19,
            };
            return a19;
        }
        f18();
        return 0 < 0;
    })())
function f25() {
    class C26 {
    }
    let v28 = -9007199254740992;
    Math.log10(v28);
    ([-3,47741,-16128,9007199254740992,-1024,-58567,268435439,-4294967296,1807295090,-9223372036854775808]).flat();
    const v33 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
    for (let v34 = 0; v34 < 5; v34++) {
        v33[v34] = f25;
    }
    ++v28;
    Math.asinh(v28);
    return f0;
}
const v37 = [f25];
const v38 = [v37,v37,f25];
const v39 = [f0,v37,v38,v37];
const v42 = v39.constructor;
try { new v42(v39, Float32Array, Float32Array); } catch (e) {}
function f44(a45, a46) {
    return f44;
}
new Float32Array(129);
const v52 = new Uint8Array(v37);
function f53(a54, a55, a56, a57) {
    a56++;
    a56 % a56;
    const o63 = {
        "b": a54,
        ...v52,
        n(a61, a62) {
            return a62;
        },
    };
    return v38;
}
for (let v64 = 0; v64 < 625; v64++) {
    const v65 = f53(Uint8Array, 2, v64);
    try { v65(v64); } catch (e) {}
    function f67() {
        const o71 = {
            ...1.0,
            set b(a70) {
            },
        };
        return o71;
    }
    f67();
    %OptimizeFunctionOnNextCall(f67);
}
const v73 = new Uint16Array(9);
new Float32Array(129);
class C77 extends Uint16Array {
    static #a;
    static f;
    constructor(a79, a80, a81) {
        super(v73, a81);
        ("undefined").localeCompare("undefined", "toString");
        const v87 = [9];
        function f90(a91) {
        }
        Reflect.construct(f90, [0], Uint8ClampedArray);
        const v95 = [v87,Reflect];
        try { v95.findIndex(); } catch (e) {}
        Date.now();
        new Uint8ClampedArray(200);
        new Float64Array(0);
        const v105 = new WeakMap();
        v105.get(Float32Array);
        function f107(a108, a109, a110) {
            return a110;
        }
        const v113 = [17452,4294967295,64,-8];
        try {
        const t0 = "jER";
        new t0(...v113, -1.6798118066934893e+307);
        } catch (e) {}
        Int16Array[0] = -27833;
        +-65537;
        const v120 = [];
        [v120,v120,v120,v120];
        const v122 = [0.00952483356421907,-3.0,2.220446049250313e-16];
        function f123() {
            return v122;
        }
        class C124 extends f123 {
            a;
        }
        const v125 = new C124();
        v125 + (-10 * v122);
        new Uint32Array(1617);
    }
    1 = Float32Array;
}
const v131 = [-6.672391061426152e+307];
v131[0] = v131;
function f132() {
    return v131["pop"]();
}
f132();
new C77(9, v38, 129);
new C77(9, v37, 129);
new C77(129, v37, 129);
const v145 = [256,54026];
const v147 = [1321234440,-2012385285,503280511,-65535,-50525,1929142229];
try {
    v147.sort(-5);
} catch(e149) {
}
-2 | -2;
!-2;
Math.hypot(v145);
