class C1 {
}
const v3 = new Float32Array(Float32Array, Float32Array, Float32Array);
async function f5(a6, a7, a8) {
    v3.h = v3;
    await 160;
    return f5;
}
for (let v11 = 0; v11 < 5; v11++) {
}
class C15 {
    static e;
    constructor(a17, a18) {
        this?.constructor;
        a18 - a18;
        -4.0 !== -1e-15;
    }
    static get d() {
        for (let v23 = 0; v23 < 16; v23++) {
        }
        try {
        } catch(e24) {
        }
    }
}
const v25 = new Float32Array(129);
new Float32Array(12);
new Float32Array(160);
function f32() {
    return v25;
}
function F33() {
    if (!new.target) { throw 'must be called with new'; }
}
const v35 = new F33();
const t35 = [v35];
delete t35?.length;
const o39 = {
};
const v41 = new F33();
v41.getUTCDate();
function f45(a46, a47) {
    ([a46,a46]).at(a46);
    class C52 extends (472608997).constructor {
    }
    new C52();
    return f45;
}
%PrepareFunctionForOptimization(f45);
const v54 = f45(f45, f45);
%OptimizeFunctionOnNextCall(f45);
f45(f45, v54);
