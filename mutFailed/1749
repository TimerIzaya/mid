function f3(a4, a5, a6, a7) {
    const o12 = {
        [f3](a9, a10, a11) {
        },
    };
    return a7;
}
let v15 = [-1.7976931348623157e+308,-384367.00824360375,-2.0,0.5765350640873664,811995.7513426659,914.8878825123259];
function f16(a17) {
    --v15;
    return a17;
}
Object.defineProperty(v15, "valueOf", { value: f16 });
[NaN,4.0513847252953913e+307,1000000000000.0,-312714.2440688837,3.0,1000000000.0,1000000.0,1.7976931348623157e+308,NaN,-164084.54053475638];
[0.9333967530934888];
try { ("f").search(v15); } catch (e) {}
(389.8595880972441)[5];
-425087802 >>> -425087802;
new Uint16Array(3);
try { ("acosh").trimLeft(); } catch (e) {}
-v15;
class C37 extends Set {
}
new C37();
function F40(a42, a43, a44, a45) {
    if (!new.target) { throw 'must be called with new'; }
    const v46 = a42[1];
    const o47 = {
    };
    Math.log1p(1842642860 % !o47);
    v46[1];
}
Object.defineProperty(F40, "d", { writable: true, value: "boolean" });
F40.d = F40;
-9223372036854775808n / -9223372036854775808n;
