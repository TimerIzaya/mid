[646295.8245894245,-832668.8519304319,-1.7976931348623157e+308,9.31660897460548e+307,0.37989102435238664,400.13844653729416];
[1000000.0,-145.36802289096102,0.0,-202.7020393036671,-199.77672166937668,0.0,9.583294072379492e+306];
const v5 = [5.0,-920.5847537084011,-2.2250738585072014e-308,4.0];
[1000000.0];
const v7 = [-2.2250738585072014e-308,-458.43124683326425,1.4474049970683183,-1000000.0];
[0.3505811091875304,1.0,2.0,-3.988716211229491];
class C9 {
    static a;
    p(a11, a12, a13, a14) {
        const o17 = {
            "maxByteLength": 268435441,
        };
        new ArrayBuffer(364, o17);
        new Uint8ClampedArray(this);
        return v7;
    }
}
new C9();
new C9();
new C9();
const v26 = new WeakSet();
let v28 = 5;
const v29 = v28++;
function F32(a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    const v36 = this?.constructor;
    let v37;
    try { v37 = new v36(v26); } catch (e) {}
    a34 + a34;
    try {
        this.d = 1000;
    } catch(e39) {
    }
    try {
        this.c = v28;
    } catch(e40) {
    }
    try {
        this.b = v37;
    } catch(e41) {
    }
}
new F32(v26, v26);
const v43 = new F32(v28, 1449111164);
v43.c = v43;
const v44 = new F32(v5, v28);
const t46 = 1449111164;
new t46(v44, v28);
-1024 - -1024;
0.0 / 0.0;
-4294967295 & v29;
-1 >>> -1;
let v64 = [-883936.0401947303,9.41640124927378e+307,0.060305085001335246];
v64 /= v64;
function f67() {
    delete arguments.callee;
    return arguments;
}
f67();
gc();
