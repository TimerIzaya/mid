const v0 = [];
const v1 = [4294967296,2147483648,15,59680,4294967297,7,57722,65536,1073741823];
const v2 = [-4294967295,8,3517];
[-356195616,2103818669,-9007199254740990];
class C4 {
    g = v0;
    get h() {
        try {
            v2.reduceRight(this);
        } catch(e7) {
            function f8() {
            }
            function f9() {
                const o13 = {
                    "b": f8,
                    valueOf() {
                        try { this.b(); } catch (e) {}
                        [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
                    },
                };
                return o13;
            }
            const v14 = f9();
            v14?.b;
            new Uint8Array(268435440);
            class C20 {
                static {
                    function f22(a23, a24, a25, a26) {
                    }
                    for (let v27 = 0; v27 < 5; v27++) {
                        f22(this, v27, v27);
                    }
                }
            }
            const v29 = f9();
            function F30(a32, a33) {
                if (!new.target) { throw 'must be called with new'; }
                try { a33.b(); } catch (e) {}
                try { a32.valueOf(); } catch (e) {}
                const v36 = this?.constructor;
                try { new v36(a32, a32); } catch (e) {}
            }
            const v38 = new F30(v29);
            new F30(v14, v38);
        }
        return v1;
    }
    #h;
    static #a = v2;
}
const v40 = new C4();
const v41 = new C4();
new C4();
function f43(a44, a45, a46) {
    const o55 = {
        "f": a44,
        "d": a46,
        ...a44,
        "a": v1,
        set e(a48) {
            Reflect.construct(a48, [a46,Reflect,Reflect], a45);
            v2[Symbol.toPrimitive];
        },
    };
    return o55;
}
f43(v41, v41, v41);
const v57 = f43(v41, v0, v40);
f43(v40, v40, v41);
function f60(a61, a62) {
    Math.sin(-5345);
    return v57;
}
Uint16Array[Symbol.iterator] = f60;
const v68 = new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
this.toString = f43;
v68[10000] = this - this;
