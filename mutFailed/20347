function f0() {
}
function f1() {
    return f0;
}
class C2 {
    o(a4) {
        f0 in super.a;
        const o10 = {
            "maxByteLength": 180,
        };
        const v12 = new SharedArrayBuffer(0, o10);
        new DataView(v12);
        return this;
    }
}
new C2();
const v16 = new C2();
new v16();
new Uint8Array(438);
new Uint16Array(1024);
new Float64Array(3701);
function f30() {
    return C2;
}
try { f30(); } catch (e) {}
new Map();
24560 ^ 24560;
function F44() {
    if (!new.target) { throw 'must be called with new'; }
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    Date();
    const v52 = Array(19793);
    for (const v53 of v52) {
    }
    const v54 = [v52,v52,v52,v52];
    const v56 = new BigUint64Array();
    v56.constructor;
    const v59 = [[v54,v54,v54]];
    (-2).toSpliced(v59);
    v59 >= Uint16Array;
}
new F44();
new undefined();
class C66 {
    constructor(a68) {
        try {
        } catch(e69) {
        }
        try {
        } catch(e70) {
        }
        for (const v71 of "bigint") {
        }
    }
}
C66.name;
class C73 extends C66 {
}
new C73();
const o75 = {
};
