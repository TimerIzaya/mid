[];
[-65536,-37258,7,1150383913,1249979106,1128086379,4096,14,-604745739];
const v2 = [256,-24970,9007199254740991,-536870912,1073741824,-31968,2147483649,-9007199254740992,0,4096];
[9007199254740991,-1073741824,-1893183875,-2,392722854,-431346731,-21378,4294967296,4294967295];
class C7 {
    constructor(a9, a10, a11, a12) {
        this[1276125173] = v2.every(this, this, a12, a12, a9, ...v2);
        super.f;
        gc();
        BigUint64Array <= 0.7221600461335677;
        let v23 = 4.61636394404693e+307;
        const v24 = --v23;
        const v25 = !-8;
        Math.exp(v24);
        Math.cos(v25);
    }
}
new C7(-4096, -4096, -4096, -4096);
const v30 = +20572;
new BigInt64Array(5);
new C7(-4096, -4096, -65537, -4096);
new C7(-65535, -65535, -65535, -65535);
const v36 = /(?<a>.)\k<a>?/vdimsy;
let v37;
try { v37 = v36(); } catch (e) {}
function F38(a40, a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a41;
}
const v46 = new Int8Array(160);
const o47 = {
};
o47.constructor.getOwnPropertyDescriptors(v46);
const v50 = [v37,v37,v37];
function f51() {
    const v52 = -v50;
    const t36 = v52 && v50;
    t36[v52] &= v37;
    return v36;
}
%PrepareFunctionForOptimization(f51);
f51();
%OptimizeFunctionOnNextCall(f51);
function F55(a57) {
    if (!new.target) { throw 'must be called with new'; }
    const v58 = this.constructor;
    try { new v58(); } catch (e) {}
    new BigInt64Array();
}
new F55();
f51();
([-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0]).forEach(v30);
function f66(a67) {
    return a67;
}
