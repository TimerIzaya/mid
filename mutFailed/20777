function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = true;
    } catch(e3) {
    }
}
const v4 = new F1();
const v5 = new F1();
const v6 = new F1();
function F7(a9) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = true;
    } catch(e10) {
    }
}
const v11 = new F7(v4);
const v12 = new F7(v6);
let v13 = new F7(v4);
[9,256,129,-4294967295,0,2147483647,-44001];
[48462,4,-16,-11,33562,512,268435456,14,128];
[128,1511220175];
const v20 = [1613217357,204598905,15977,1122227661,64,-2,-12,536870888];
const v21 = [12,-256,-4096,2,7,8,21956,46111,11,10];
v21[4] = v21;
const v22 = [-1073741824,1665564361,16526,1805211777,10,-9007199254740990,4,-17063,-1];
const v23 = [-2.2250738585072014e-308,0.8014728140665155,1.4073101706157717e+308,1.4751052216559766e+308,2.0,-692.9604671107461,-2.220446049250313e-16,2.0];
const v24 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
const v25 = [-1.015259194643325e+308,-Infinity,-9.825391401141273,-2.2250738585072014e-308,5.0,-2.2250738585072014e-308];
class C26 {
    constructor(a28, a29, a30, a31) {
        const v32 = this?.constructor;
        let v33;
        try { v33 = new v32(v24, a30, a30, v20); } catch (e) {}
        const v34 = a29 >>> a29;
        let v37 = -0.0;
        ({"b":v13,"e":v37,"g":v33,} = v5);
        try { C26(v12, v34, v33); } catch (e) {}
        super[v23];
        throw v37;
        const v40 = [v37,true];
        const v41 = [v33,v40,v40];
        [v34,v41,v23,v41];
        v37 >>> v37;
    }
    /*
    constructor(a45, a46, a47, a48) {
        const o59 = {
            2321852491: "object",
        };
        const o64 = {
            "maxByteLength": 2240,
        };
        const v66 = new ArrayBuffer(2240, a46);
        new Uint8ClampedArray(v66);
        this[268435456];
        v23 && this;
        try {
            v23.length = v25;
        } catch(e71) {
        }
    }
    */
    static 268435439 = v22;
    #c = -2.2250738585072014e-308;
    static 832209355 = 2.220446049250313e-16;
}
C26[832209355] = C26;
function f72(a73) {
    new C26(...v22, a73, ...v24, ...v25);
    new Float64Array();
    return -2.2250738585072014e-308;
}
C26.valueOf = f72;
const v77 = new C26(v20, 659.0540372978887, v20, v20);
const v78 = new C26(v77, 2.220446049250313e-16, v23, v25);
const v79 = v78?.constructor;
try { new v79(v23, 2.220446049250313e-16, 2.220446049250313e-16, v78); } catch (e) {}
let v81 = new C26(v78, v78, 659.0540372978887, v20);
try {
    v21.length = C26;
} catch(e82) {
}
const v83 = new C26(v23, 2.220446049250313e-16, v22, v25);
v83.length = v83;
function f84() {
    return f84;
}
f84.arguments = f84;
function F85() {
    if (!new.target) { throw 'must be called with new'; }
    const v87 = this?.__lookupGetter__;
    try { new v87(this); } catch (e) {}
}
new F85();
const v90 = new F85();
v90.b = v90;
const v91 = new F7();
function f94() {
}
let v95;
try { v95 = new f94(); } catch (e) {}
const v96 = [16,1073741824];
const v97 = [f84];
v97[0] = v97;
[v96,v90];
const v99 = f84();
%VerifyType(v11);
v95[6] = v79;
v81 *= v13;
Math.acosh(f72);
const v103 = 6 || f72;
const v104 = true - true;
Math.imul(true, v103);
Math.atan2(v97, v104);
try { v99(); } catch (e) {}
for (let v108 = 0; v108 < 5; v108++) {
    f94();
}
try { v91.n(); } catch (e) {}
for (let v111 = 0; v111 < 5; v111++) {
}
