const v0 = [-320962.3430750661,Infinity,549.8558474688409,6.336995529098748e+307,-5.0,-4.820073563472893,-1e-15,-376.8244188100109,-1000000.0];
const v1 = [-1e-15,1.0,2.2250738585072014e-308,-0.0,195133.48432453116,-1000000.0,108614.09848836204];
const v2 = [-1e-15,2.5502178922673525e+307,1e-15,-1000000000.0,0.9733091425727823];
function f5(a6) {
    const v7 = a6 ^ a6;
    try { a6(v1, a6, v0, v7); } catch (e) {}
    return v2;
}
let v10 = Symbol.toPrimitive;
Int8Array[v10] = f5;
function f11(a12, a13) {
    const o14 = {
    };
    return a13;
}
Int8Array.toString = f11;
const v15 = new Int8Array(4096);
const v18 = new Uint32Array(448);
function f19(a20) {
    try { ("string").trimStart(); } catch (e) {}
    class C24 {
        static 7;
        static [4096] = "string";
        #n(a26) {
            a26 = this;
            a26.e >>>= -35417;
            const o30 = {
                "execution": "sync",
                "type": "major",
            };
            gc(o30);
            return this;
        }
    }
    const v32 = new C24();
    let v33 = 0;
    do {
        v10 -= v32;
        v33++;
    } while (v33 < 5)
    return v1;
}
v18[Symbol.toPrimitive] = f19;
v18[Symbol.toPrimitive] = f11;
const v43 = new Uint16Array(10);
class C44 extends Uint16Array {
    static [v18] = v43;
    #n(a46, a47) {
        super[a47] = a46;
        delete a46[10];
        try {
            v15.toSorted();
            const v54 = new Date(64);
            v54.setMonth(-3);
        } catch(e56) {
        }
        new Int8Array(6);
        ~-4294967295;
        return Uint32Array;
    }
    [v18] = v18;
    [Int8Array];
    static d = 448;
}
class C62 {
}
new C62(C44, Uint32Array);
const v66 = new Float64Array(65536, 65536, 65536);
v66.copyWithin(65536, 4294967297);
const v69 = new C44();
try { Map.bind(Map, 6, Map, Map); } catch (e) {}
class C73 {
    static n(a75, a76) {
    }
    [10];
    set b(a78) {
    }
}
new C44();
new C44();
class C82 {
    constructor(a84, a85) {
        this.fuck = v69;
        try {
            this.fuck(a85, "function");
        } catch(e88) {
        }
    }
    4294967296 = 996195971n;
}
new C82();
