[-25729,-2098952579,-14,-4294967296,60835,9,-1753696700,4,37601];
const v1 = [-2147483647,8,-2,10];
const v2 = [-4294967296,-4294967296,10000,2,-53678,-35925,-9223372036854775807,-4294967296,257];
const v7 = Worker.toPrimitive;
const o15 = {
    [v7]() {
        const v11 = new Float32Array(7);
        Object.defineProperty(v11.includes(Float32Array, 1000), 1073741824, { writable: true, configurable: true, enumerable: true, value: v2 });
        return 10;
    },
};
function f16() {
    return v2;
}
if (!v1) {
    Worker[-4096];
    Object.defineProperty(Worker, "NaN", { configurable: true, enumerable: true, get: f16, set: Worker });
} else {
    let [v18,v19,...v20] = 8;
}
const v29 = [Uint8Array,Uint8Array,Int32Array,"setUint32","o"];
new Uint8Array(2707, 2707, 10);
const v36 = new Uint32Array(104);
for (const v37 in v36) {
    104 in 8;
    typeof v7;
}
new Int32Array([Uint8Array,v29]);
