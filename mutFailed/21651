const t0 = null;
const v2 = new t0();
function f3(a4, a5) {
    const o11 = {
        "f": a4,
        1073741824: null,
        2: v2,
        toString(a7, a8) {
            try {
                super.resize(a8, a8);
            } catch(e10) {
            }
            return a5;
        },
        ...v2,
        "b": Set,
        [null]: a4,
    };
    return o11;
}
const v12 = f3(Set, null);
const v14 = f3(f3(null, null), f3);
const v16 = new Map();
function F17(a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        v14.a = v16;
    } catch(e22) {
    }
}
const v23 = new F17(v12, v2, v12);
new F17(v12, v14, Map);
new F17(v12, Set, v23);
const v32 = [1073741825n];
function f33() {
    class C37 extends Int16Array {
        constructor(a39, a40, a41, a42) {
            super();
            function f43(a44) {
                let v48 = 0;
                typeof v48 === "string";
                v48++;
                return 9007199254740991;
            }
            const o74 = {
                "type": "function",
            };
            new Worker(f43, o74);
        }
    }
    new v12();
    const o77 = {
        "c": v32,
    };
    const v82 = new Int32Array(1024);
    for (const v83 of v82) {
    }
    return 9007199254740991;
}
f33();
f33();
