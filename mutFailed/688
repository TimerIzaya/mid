class C3 {
    m(a5, a6) {
        return a6;
    }
    static [409425.40305335494] = "h";
}
C3.length = C3;
new C3();
const v14 = new C3();
const v15 = v14?.constructor;
v15.name;
let v17;
try { v17 = new v15(); } catch (e) {}
const v18 = v17?.constructor;
try { new v18(); } catch (e) {}
const v20 = new C3();
const v21 = v20?.constructor;
const v22 = v21?.constructor;
try { new v22(1000); } catch (e) {}
try { new v21(); } catch (e) {}
Uint32Array.prototype = Uint32Array;
const v29 = new Uint32Array(257);
const v30 = v29?.copyWithin;
try { new v30(Uint32Array, C3); } catch (e) {}
const t24 = [-936145422,536870912,127,257,-36772,-15984,2];
t24.length = 6;
5.12517564582972e+307 * 5.12517564582972e+307;
5.12517564582972e+307 >> 5.12517564582972e+307;
function F37() {
    if (!new.target) { throw 'must be called with new'; }
}
try { new F37(); } catch (e) {}
let v41;
try { v41 = new F37(); } catch (e) {}
const v42 = v41?.constructor;
try { new v42(); } catch (e) {}
0.003171607575499835 & 0.003171607575499835;
const v51 = 0.7035032998173566 != 0.7035032998173566;
v51 || v51;
class C53 extends F37 {
}
const v55 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
const v56 = [512,7,-1073741824];
new Uint32Array([1524942359,268435439,8,1,256,-11]);
const o59 = {
};
const v61 = new Proxy(v55, o59);
v61[2] = v61;
v61.__proto__ = v56;
const v62 = C53.name;
v62 == v62;
const o64 = {
    2: C53,
};
o64[2];
