class C3 {
    constructor(a5) {
        this[-1];
        let v7;
        try { v7 = ("f").search(a5); } catch (e) {}
        a5 instanceof v7;
        this + "f";
        new Uint8Array(3345);
        new Uint16Array(4);
        new Uint8ClampedArray(9);
    }
}
const v19 = new C3(5.0);
const v20 = new C3(5.0);
const v21 = new C3(v20);
class C22 extends C3 {
    static #a = v20;
    static {
        function F24(a26, a27) {
            if (!new.target) { throw 'must be called with new'; }
            const v28 = this.constructor;
            try { new v28(); } catch (e) {}
            try { this.constructor(); } catch (e) {}
        }
        new F24();
    }
    [v20];
    constructor(a33, a34, a35, a36) {
        super(v19);
        5.0 instanceof C3;
        super.b %= -1.7976931348623157e+308;
        super[-1.7976931348623157e+308 ^ v19] = v20;
    }
    static #a = v21;
    3 = 5.0;
    [v19] = v19;
    1577 = -1.7976931348623157e+308;
}
+20572;
new Float64Array(257);
const v44 = new C22(C22, "f", C3, v21);
("c").toUpperCase();
function f47() {
    for (let v48 = 0; v48 < 5; v48++) {
        v48 & f47;
    }
    return f47;
}
f47();
const v51 = new C22(v44, "f", C3, v21);
new C22(v44, v51, v51, v51);
[1281595220];
[8];
[255,822328068];
const o58 = {
    valueOf() {
        return [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
    },
};
function F59(a61, a62) {
    if (!new.target) { throw 'must be called with new'; }
    try { a61.valueOf(); } catch (e) {}
    const v64 = this.constructor;
    try { new v64(a61); } catch (e) {}
}
function f67() {
    const v69 = ("Vre").toLocaleUpperCase;
    let v70;
    try { v70 = v69(v69, -4294967297n, 20572); } catch (e) {}
    const o71 = {
        "a": v70,
    };
    return v70;
}
f67();
new F59();
new F59(o58);
