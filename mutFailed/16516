class C3 {
    constructor(a5) {
        super.a <<= a5;
    }
    static get c() {
        function f7(a8) {
            g = this;
            const v12 = !2147483648;
            (2734 >> 2734) && v12;
            Math.acos(this);
            return 2147483648;
        }
        return f7(this);
    }
}
const v17 = new C3("1075907405");
new C3(v17);
new C3("function");
function f23(a24) {
    return a24;
}
class C25 extends f23 {
    [2734] = f23;
    static #f;
}
for (let v26 = 0; v26 < 5; v26++) {
    function f27() {
        let v29;
        try { v29 = Symbol.bind(v26); } catch (e) {}
        v29 = f27;
        try {
            f23(Symbol);
        } catch(e31) {
        }
        return v29(Symbol, f27, f27, v26, v29);
    }
    f27();
    %OptimizeFunctionOnNextCall(f27);
}
