function f0() {
    try { ("4LVf").match(10000); } catch (e) {}
    const o15 = {
        "c": 10000,
        "h": "4LVf",
        "a": 1e-15,
        ["4LVf"]: 10000,
        "f": f0,
        __proto__: "4LVf",
        "b": "4LVf",
        ["4LVf"](a6, a7) {
            Math.sqrt(a6);
            let v12 = Math.asinh(-406391558);
            -4294967296 && a7;
            ++v12;
            return 10000;
        },
    };
    o15.h = o15;
    return o15;
}
f0();
const v17 = f0();
f0();
let v19 = 5;
const v20 = v19++;
const v22 = new Uint8ClampedArray(v17);
let v23;
try { v23 = v22.join(v19); } catch (e) {}
try { v23.trimLeft(); } catch (e) {}
new Uint16Array(8);
try { v20.entries(); } catch (e) {}
const v30 = 5 + 5;
v30 - v30;
new v22(5);
let v34 = 16;
v34++;
Object.hasOwn(v34);
const v38 = Object(v34);
try { v38.toExponential(v38); } catch (e) {}
try { v38.toFixed(v17); } catch (e) {}
const v41 = v38.toExponential(v34);
try { v41.link(Uint16Array); } catch (e) {}
let v43;
try { v43 = v41.toLocaleLowerCase(); } catch (e) {}
const v44 = v43?.strike;
try { new v44(); } catch (e) {}
