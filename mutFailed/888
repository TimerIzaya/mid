const v0 = [-1000.0,1000000000000.0,0.0];
const v2 = new Uint8ClampedArray(Uint8ClampedArray, Uint8ClampedArray);
let v5 = v2 & -2;
v5++;
let v7 = Math.acosh(v5);
Math.expm1(3375);
const v11 = new v0();
class C12 {
    static #e;
    static {
        try {
            v11.#e = this;
        } catch(e14) {
        }
    }
    static n(a16, a17, a18) {
        v11.#e;
    }
}
v7--;
const o22 = {
};
new Proxy(Uint32Array, o22);
const v25 = [-4.0,2.220446049250313e-16,1.0,5.0,-3.0,-1000000.0,-1000.0,9.679268628672443,2.0,-4.0];
const v26 = [-1e-15,-165835.32423689973,-5.182323579381811,-236.49570362466375,-9.89419083325519e+307,5.220305443642525,-2.161624862970619,0.5750066604492998,2.8135129635197202,6.182160623987826];
class C27 {
    #d = v0;
    static [v25];
    static #n(a29) {
        ([1000000000000.0,6.579220753226213e+307,2.0,-2.220446049250313e-16,NaN,-1000000.0])["findIndex"](gc);
        ([-5,2147483649,-4294967295,1,8,-4331,52354,15231])["unshift"]();
        const o37 = {
        };
        new Proxy(v26, o37);
        return this;
    }
    4217572704;
    static 1073741824 = v0;
    #b;
    f = v0;
}
try { new C27(); } catch (e) {}
new C27();
new C27();
const v43 = new C27();
v43[4217572704];
try { Map.constructor(Map); } catch (e) {}
const v47 = new Map();
try { v47.set(Math, Map); } catch (e) {}
const v55 = -1000;
const v56 = +-0.0;
v56 >>> v56;
let v58 = v55 ** -0.0;
v58--;
