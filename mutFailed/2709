const v4 = [];
class C5 {
}
const v6 = new C5();
const t4 = v6.constructor;
t4(v4, Int8Array);
const v12 = new Uint8ClampedArray();
try { v12("function", 14); } catch (e) {}
class C18 extends Array {
}
for (let i = 0; i < 10; i++) {
    const o21 = {
        "a": 16n,
        1: 16n,
        257: undefined,
    };
}
class C25 {
}
new C25();
new Uint8Array(257);
class C30 {
    268435440;
    o(a32, a33, a34, a35) {
        %VerifyType("b");
        +1337803104;
        return a33;
    }
    ["b"] = "-65535";
    static c;
    static #m(a38, a39, a40) {
        ("1000")["toUpperCase"]();
        const v46 = new Float32Array();
        try { v46.entries(); } catch (e) {}
        a38 = "a";
        function F48(a50, a51, a52) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                const o53 = {
                };
                let v54 = 10;
                for (; v54--;) {
                }
                this.e = "iterator";
            } catch(e56) {
            }
            try {
                this.d = a52;
            } catch(e57) {
            }
            try {
                this.f = a52;
            } catch(e58) {
            }
        }
        new F48("iterator", "a", -16);
        new F48(a38, a40, a40);
        const v61 = new F48(Int16Array, "iterator", -16);
        return v61;
    }
}
new C30();
new C30();
new C30();
function f65() {
    return f65;
}
const t67 = [-936145422,536870912,127,257,-36772,-15984,2];
t67.length = 6;
new Uint8Array([749138.7740098275,-413.55890355139604,-2.0,5.0,4.0,1.7976931348623157e+308,1.0,5.956393081352694]);
