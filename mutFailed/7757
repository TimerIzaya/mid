const v1 = new Date();
const v3 = new WeakMap();
let v8 = 10n;
class C10 extends WeakMap {
    get c() {
        v8 %= -17251n;
        try {
            Date();
        } catch(e13) {
        }
        return v3;
    }
    constructor(a15, a16, a17) {
        super(v3);
        const v19 = a17 < Date ? a17 : Date;
        if (Date <= v19) {
            try {
                this.toString = a16;
            } catch(e23) {
            }
        } else {
            const v24 = [-15n,v19,a17,a15];
            [v24,v19,[v24,v24,v24],v24,v1];
        }
        const o27 = {
            "maxByteLength": 129,
        };
        const v29 = new SharedArrayBuffer(129, o27);
        new Float32Array(v29);
    }
}
const v32 = new C10(v8, 3, -15n);
const v33 = new C10(-15n, v32, 3);
new C10(v8, v33, v32);
const v37 = new Float32Array();
v37["copyWithin"](..."-11838");
