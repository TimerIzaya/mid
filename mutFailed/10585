const v4 = -4294967296 >> -4294967296;
const v5 = ~v4;
const v8 = [-578.4288193829015,-1.0,-0.0,0.6929514465452588];
let v9;
try { v9 = v8.toReversed(); } catch (e) {}
let v10;
try { v10 = v9.with(-65537, -65537); } catch (e) {}
let v12 = ([-882035.6314511748,-1e-15,-0.0])[1];
v12--;
[0.0,-3.0869640921892554,2.0,4.4432997435221555,424.0993000765102,5.0,-1.7976931348623157e+308,319.6714702069312];
const t8 = "128";
t8[2] = "128";
let v18 = 4294967295;
-336011604 - -336011604;
try { ("p").isWellFormed(); } catch (e) {}
try { ("p").padStart(v18); } catch (e) {}
-1087661395n ^ -1087661395n;
4096n > 4096n;
-4294967296 - 4096n;
!713.1577335222373;
Math.sin(v18);
Math.pow(-872946950, -872946950);
if ((-9.199510743289658e+307 >> -9.199510743289658e+307) < eval) {
    v18 = -65537;
} else {
}
const v46 = [eval];
let v47;
try { v47 = new v10(v5, v46, v4, v4); } catch (e) {}
~v47 ^ 2147483649;
Math.sinh(-4294967296);
for (let i54 = v18;
    (() => {
        i54 / i54;
        const v57 = i54 < 9;
        v57 || v57;
        return v57;
    })();
    ) {
}
