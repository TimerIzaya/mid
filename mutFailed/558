class C3 {
    static #g = C3;
    #h = -499.9862152789649;
    static {
        this.g;
        [45341];
        [-9223372036854775808,-4294967296,536870912,127,5,11,1211900580];
        [-13,65535,-10,-19743,1281198915,-14,-65705909];
    }
    ["-13"] = -0.0;
    static ["-13"];
    g = -0.0;
    c = "-13";
    #d = "-13";
}
new C3();
const t16 = -499.9862152789649;
new t16();
const v11 = new C3();
const v12 = /7(?=.)+/gvdimsy;
/{z}pN3/gisy;
const v14 = /CcT/gvm;
class C15 {
    o(a17, a18) {
        const v19 = v12[255];
        const v20 = super.b;
        try { v20(v19, v20, "-13", a17, v14); } catch (e) {}
        return v12;
    }
    #toString(a23, a24) {
        for (let v25 = 0; v25 < 71; v25++) {
            super.g >>= -0.0;
        }
        %VerifyType(C3);
        [a23,a23];
        return v11;
    }
}
new C15();
new C15();
new C15();
const v30 = [];
class C31 {
    [C31];
    set a(a33) {
        a33 === v30 ? a33 : v30;
        [v30,a33,a33,v30];
        [v30];
        [a33,v30,v30,v30,v30];
    }
    static [v30];
    #f;
    h = v12;
}
const v39 = new C31();
new C31();
const v41 = new v30();
function F45(a47, a48, a49, a50) {
    if (!new.target) { throw 'must be called with new'; }
}
const v51 = new F45(-12, -56455, v41, v30);
const v52 = new F45(v39, -14, v39, v41);
const v53 = new F45(v39, -14, v41, C31);
v53 - -12;
Math.round();
v51 << -1.0;
try { v52(); } catch (e) {}
