class C3 {
    static #n(a5, a6) {
        C3 << a5;
        return -0.0;
    }
    toString(a10, a11) {
        try { new a10(a10, a11, a10); } catch (e) {}
        return 4294967295;
    }
}
const v16 = new C3();
const v17 = new C3();
const v18 = new C3();
const v20 = new WeakSet();
function F21(a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v20;
    } catch(e25) {
    }
    try {
        this.h = a23;
    } catch(e26) {
    }
}
new F21(C3, v17);
new F21(v17, v18);
new F21(v16, v18);
class C33 {
    7 = 1e-15;
    #toString(a35, a36) {
        for (let v37 = 0; v37 < 32; v37++) {
            a35["p" + v37] = v37;
        }
        64 in this;
        new Float64Array(16);
        new Int8Array(1330);
        const v49 = new Int32Array(47);
        return v49;
    }
}
const v50 = C33?.constructor;
let v51;
try { v51 = new v50(64); } catch (e) {}
const v52 = new C33();
v52[7] = v52;
const v53 = new v51();
v53[7] = v53;
const v54 = new v16();
function F55(a57, a58, a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
    const v61 = a60?.constructor;
    try { new v61(v53, this, this, v53); } catch (e) {}
    const v63 = a60[7];
    try {
        v63.a = a60;
    } catch(e64) {
        const v67 = new Int32Array();
        const v69 = new BigInt64Array();
        const v70 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
        const v71 = [-1.7976931348623157e+308];
        function f72(a73, a74, a75, a76) {
            const o82 = {
                toString(a78, a79, a80) {
                    a75[a74] = a73;
                    return 255n;
                },
            };
            return o82;
        }
        const v83 = f72(v69, 129, v71);
        const v84 = f72(v67, 129, v70);
        for (let v85 = 0; v85 < 5; v85++) {
            v84 % v83;
            v70.b = v67;
        }
    }
    try {
    } catch(e87) {
    }
}
const v88 = new F55(C33, v52, v53, v52);
const v89 = new F55(v88, v88, v53, v54);
new F55(v89, v88, v88, v89);
function f91() {
}
class C93 extends Float64Array {
}
const v94 = new v16();
v94.reverse();
