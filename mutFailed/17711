class C3 {
    constructor(a5) {
        let v4 = this;
        v4 += v4;
        try {
        const t0 = -400381.5565961945;
        t0(v4);
        } catch (e) {}
        super[a5];
        const v9 = a5 && super.h;
        for (let v10 = 0; v10 < 32; v10++) {
            function f12() {
                const o17 = {
                    8: 0.043152456200264866,
                    get a() {
                        Math.acos(0.043152456200264866);
                    },
                };
                return o17;
            }
            f12();
            v9["p" + v10] = v10;
        }
    }
    static #b = 1000000.0;
    a;
}
const v20 = new C3(1000000.0);
const v21 = new C3(-1.7976931348623157e+308);
new C3(1000000.0);
class C23 extends C3 {
    m(a25, a26, a27) {
        new BigInt64Array(10);
        new Uint16Array(127);
        new Uint32Array(83);
        return v20;
    }
    #f;
    static [1000000.0] = C3;
}
const v37 = new C23();
const v38 = new C23();
const v39 = new C23();
function f40(a41, a42, a43, a44) {
    function f45() {
    }
    try {
        const v48 = Array(19793);
        for (const v49 of v48) {
        }
        const v50 = [v48,v48,v48];
        new BigUint64Array();
        const v54 = [];
        function F55() {
            if (!new.target) { throw 'must be called with new'; }
            class C57 {
            }
            for (let i60 = 0, i61 = 10;
                i60++, i60 < i61;
                (() => {
                    const v66 = [601759695];
                    BigUint64Array - v66;
                    C57.__proto__;
                    const v69 = [1073741824,1073741823,1376142744,1073741825];
                    function f70(a71, a72, a73, a74) {
                        function f75() {
                            return a71;
                        }
                        function f76(a77, a78) {
                        }
                        try { f76(); } catch (e) {}
                        f76(v69, C57);
                        try { v69["find"](..."find", a74, ...v66, ...v69); } catch (e) {}
                        return C57;
                    }
                    for (let v83 = 0; v83 < 10; v83++) {
                        f70(v83, f70);
                    }
                })()) {
            }
        }
        new F55();
        new F55();
        const o89 = {
            "apply": f45,
            "call": f45,
            "construct": Array,
            "defineProperty": f45,
            "deleteProperty": f45,
            "get": Array,
            "has": f45,
            "isExtensible": Array,
            "setPrototypeOf": Array,
        };
        new Proxy(Array, o89);
        v54[65536] = v50;
        for (let v92 = 0; v92 < 50; v92++) {
        }
        const v93 = [];
        let v95 = 536870912n;
        v95--;
        const v97 = [509174734,-30078599,-1953700757,-725509519,50139,1073741825];
        /.\P{Decimal_Number}/gvds;
        /xyz{1,32}?a\nb\bc/ums;
        class C100 {
        }
        const v101 = C100.__defineSetter__;
        try { v101(v97); } catch (e) {}
        v93 >= Uint16Array;
    } catch(e104) {
    }
    const o121 = {
        toString(a106, a107, a108) {
            try {
                v37.__proto__ = v21;
            } catch(e109) {
            }
            return v21;
        },
        o(a111, a112, a113) {
            if (a44 !== a42) {
                v39[v20];
                [-982506867,-256,64,2147483647];
                [10,5,268435441,-2147483649,-1074601583];
                [9,1000,1700421583,-128,-2147483649,46451,9];
            } else {
                try {
                    super.padStart(v21);
                } catch(e120) {
                }
            }
            return a41;
        },
    };
    return o121;
}
const t136 = 1000000.0;
t136.stack = 1000000.0;
function f122(a123, a124, a125, a126) {
    const v127 = a125++;
    v127 <= v127;
    return f122;
}
f40(-400381.5565961945, v38, -400381.5565961945, v37);
f40(-400381.5565961945, v20, -400381.5565961945, v20);
f40(-1.7976931348623157e+308, C3, -1.7976931348623157e+308, v38);
function f132() {
}
function f133() {
    return f132;
}
const v136 = -520531413 >> -520531413;
-65536n + -65536n;
Map.prototype;
const v144 = new Map();
try { v144.set(Map, 512n); } catch (e) {}
try { new BigInt64Array(-9513n, f132, -9513n); } catch (e) {}
const v149 = new BigInt64Array(0);
let v150 = 1024;
let v151 = v150--;
v151++;
this[256] = BigUint64Array;
v136 * v136;
try { Int32Array.from(512n); } catch (e) {}
new Int32Array(v150);
const v161 = -9513n != 1;
v161 || v161;
function f164() {
    class C166 {
    }
    try { new C166(); } catch (e) {}
    const v168 = new C166();
    const v169 = v168?.constructor;
    try { new v169(); } catch (e) {}
    v168[3.4890473589784586e+307] = 268435439;
    const o171 = {
        "call": f164,
    };
    class C172 extends C166 {
        #a;
    }
    C172.b = C172;
    C172.g = C172;
    for (let i = 0; i < 5; i++) {
        new Date();
    }
    return 268435439;
}
f164();
if (v161) {
    try {
        new BigInt64Array(127);
    } catch(e178) {
    }
} else {
    var h = v161;
}
5 ^ 5;
const v185 = new BigUint64Array(5);
let v186;
try { v186 = v185.join(v150); } catch (e) {}
try { v186.replace(Int32Array, f132); } catch (e) {}
Int32Array.length;
-f132;
try {
    v149.f = 0;
} catch(e192) {
}
const v193 = new Int32Array(1);
v193[0];
v193[0] = v193;
function f198(a199, a200) {
    const o204 = {
        "f": a200,
        [a199]: -12,
        set e(a202) {
        },
    };
    return o204;
}
class C205 extends f198 {
    static valueOf(a207, a208, a209) {
        async function* f210(a211, a212, a213, a214) {
            await f198();
            yield* [];
            return a213;
        }
    }
}
new Int8Array(12);
const v219 = [1.5194593916452507e+308,1.7976931348623157e+308,-655.2599062195703,383261.13963534124,-4.351354601083372];
const v220 = [-3.0767450746058422,-109930.30079491576,1.0710997738525917e+308,1e-15,-4.4029859309287245,1.2647620628346297e+308,0.6128308590917888,-1000000.0,-9.043256096114051];
const v221 = [547.1067310983665,-3.0,NaN,222205.6815515987,2.2250738585072014e-308];
try { v221.join(-65536n); } catch (e) {}
function F223(a225, a226, a227) {
    if (!new.target) { throw 'must be called with new'; }
    const v228 = this?.__lookupGetter__;
    try { new v228(12); } catch (e) {}
    a226 + a226;
    try { a227.find(a225); } catch (e) {}
    try {
        this.d = a225;
    } catch(e232) {
        Date.toString = Symbol;
        class C235 extends Date {
        }
    }
    try {
        this.b = a227;
    } catch(e236) {
    }
}
const v237 = F223?.constructor;
v237.length = v237;
let v238;
try { v238 = new v237(12); } catch (e) {}
v238.arguments;
new F223(Int32Array, 12, v220);
const v241 = new F223(v220, 5, v221);
v241.length;
const v243 = new F223(v219, 12, v219);
v243[65536];
const o246 = {
};
for (let v247 = 0; v247 < 25; v247++) {
}
