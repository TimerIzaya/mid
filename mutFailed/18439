class C3 {
    static {
        function f5(a6) {
            this[this] = a6;
            const v7 = typeof -1225012128;
            v7 === "bigint";
            return v7;
        }
        f5(-1225012128);
    }
    #a = -1225012128;
    static [730180590];
    static #f = -1225012128;
    static [128];
    static 10 = -1225012128;
}
new C3();
class C12 {
}
function f13(a14, a15, a16, a17) {
    const v20 = new Int16Array(1269);
    function F21(a23, a24, a25, a26) {
        if (!new.target) { throw 'must be called with new'; }
    }
    new F21();
    let v28;
    try { v28 = C12.n(f13, a14); } catch (e) {}
    for (const v29 in v20) {
    }
    return v28;
}
f13();
f13();
f13();
new C3();
new C3();
new Uint16Array(257);
new BigInt64Array(4096);
new BigUint64Array(61);
const v46 = new Int8Array(3938);
let v47 = 3;
new Float64Array();
let v50 = 0;
for (let i = 0; i < 5; i++) {
    v50 < 8;
    [...v47] = v46;
    v50++;
}
