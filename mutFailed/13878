const v0 = [2.2250738585072014e-308,1000000.0,-3.0,0.9301155797361128];
[4.0,0.7235522904186396,-1.7976931348623157e+308];
const v2 = [1000.0,-2.125809189747375e+306,-1.0,Infinity,1000000000000.0];
const v3 = [0.7073975508226777,63484.092624977,0.8319621191497446,5.417103850634103,-1000000000.0,-Infinity,-1.2499939271364109e+308,-4.197240907793301e+307,104841.98887450411,-1.0];
const t4 = [7.448118819994317,-1000000.0,-0.0,-3.0];
t4.g = v3;
[7.7870922057741225,Infinity,-2.2250738585072014e-308,2.2250738585072014e-308,-0.0,-931500.1123185465,300.5828087687685];
8 >>> 8;
new v2(8);
const v12 = new Float64Array(v3);
try { v12.reduceRight(Float64Array); } catch (e) {}
try { new Uint8ClampedArray(v2, 0, v2); } catch (e) {}
new Uint8ClampedArray(90);
function f18(a19, a20) {
    for (let v22 in [-65535,536870889,4096]) {
        v22--;
    }
    for (let v24 = 0; v24 < 25; v24++) {
        v24 * v24;
    }
}
v2();
%OptimizeFunctionOnNextCall(v0);
f18();
