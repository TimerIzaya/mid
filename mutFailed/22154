const v0 = [-4294967296,-1602520074,2041388316];
const v1 = [536870889,-65536,0,9,-6];
const v2 = [-3,10000,-2,-1,-1899651066,1000];
function f3(a4) {
    let v5;
    try { v5 = a4.reverse(); } catch (e) {}
    function f6() {
        return v1;
    }
    function f7(a8) {
        gc();
    }
    Object.defineProperty(v5, "f", { get: f6, set: f7 });
    let v11;
    try { v11 = v5.pop(); } catch (e) {}
    const o16 = {
        __proto__: v2,
        "g": v1,
        "h": v2,
        get b() {
            for (let v13 = 0; v13 < 32; v13++) {
                v1["p" + v13] = v13;
            }
            return this;
        },
        ...v2,
        "b": a4,
        "e": v1,
    };
    o16.f = v11;
    o16.g = o16;
    return o16;
}
const v17 = f3(v0);
v17.f = f3;
v17.f = v17;
const v18 = f3(v2);
v18.f = v18;
f3(v0);
try { (-9007199254740992).log2(-9007199254740992); } catch (e) {}
let v22 = NaN;
v22--;
8.304171631252512 | 8.304171631252512;
function f27() {
    return 8.304171631252512;
}
const v29 = 67 != 67;
v29 || v29;
Int8Array.name = Int8Array;
Int8Array.g = Int8Array;
new Int8Array(67);
3 | 3;
Uint8ClampedArray.name;
new Uint8ClampedArray(3);
15 >>> 15;
new BigInt64Array(15);
function f42() {
    const v44 = -9223372036854775808n / -9223372036854775808n;
    v44 === v44;
    -9223372036854775808n >= -9223372036854775808n;
    return f42;
}
for (let v47 = 0; v47 < 5; v47++) {
    f42();
    %OptimizeFunctionOnNextCall(f42);
}
