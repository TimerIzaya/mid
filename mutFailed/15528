[-1000.0];
const v1 = [-1000000000.0,1e-15,-0.0,1.0,867.5047285164317,Infinity,-580575.4794063286,-6.327341030787682e+307,7541.918252082425];
const v4 = new Uint32Array(2432);
const o5 = {
    ...v4,
};
const v6 = [-3.0,-91.19235008571343,555.9741184007844,-1.7976931348623157e+308];
let v7 = 3;
v7--;
-65536 >>> -65536;
const v11 = -65536 >>> -65536;
function F13(a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    a16 - a16;
    a16--;
    try {
        this.c = v1;
    } catch(e19) {
    }
    try {
        this.b = 1073741824;
    } catch(e20) {
    }
    try {
        this.g = v6;
    } catch(e21) {
    }
}
try { new F13(v6, v11); } catch (e) {}
const v23 = new F13(v7, -65536);
const v24 = new F13(1073741824, -65536);
const v25 = new F13(v7, 1073741824);
const v26 = v25?.constructor;
try { new v26(v1, v23); } catch (e) {}
const v28 = [-2.216170140955498,-2.2250738585072014e-308,-643865.3403199288,NaN];
const v30 = this?.Int8Array;
try { new v30(v1, v1, v11); } catch (e) {}
const v32 = this?.ReferenceError;
let v33;
try { v33 = new v32(v24); } catch (e) {}
class C34 extends v33 {
}
let v36 = -2147483648 / -2147483648;
++v36;
v36 || 1073741824;
v33.message = v33;
const v39 = this.decodeURIComponent(v28);
v39[40];
try { v39.strike(); } catch (e) {}
function F42(a44, a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
    [8n] > 8n;
}
new F42(F42, F42, F42);
