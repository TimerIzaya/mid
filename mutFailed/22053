const v0 = [-25415,16,1073741823,9,4294967295,48461,65537,9533,9];
const v1 = [-1,646130974];
const v2 = [65536,1073741824,0,-8];
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a6;
    } catch(e7) {
    }
    try {
        this.a = a6;
    } catch(e8) {
    }
}
const v9 = new F3(v0, v1, v0);
const v10 = new F3(v0, v1);
const v11 = new F3(v0, v2);
new BigInt64Array();
let v14 = -1e-15;
v14++;
function f17() {
    return undefined;
}
function F18(a20, a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v11;
    } catch(e24) {
    }
    const v28 = new Float32Array(3562);
    v28.lastIndexOf(-128);
    try {
        this.g = a20;
    } catch(e30) {
    }
}
const v31 = new F18(F18, v0, v9, F18);
const v32 = new F18(v31, v0, v10, v11);
new F18(v32, v2, v11, v2);
class C34 {
    o(a36, a37) {
        try {
            v31.__proto__ = this;
        } catch(e38) {
        }
        return F18;
    }
    static #p(a40, a41) {
        let v43 = -9007199254740991;
        Math.random();
        Math.log(v31);
        Math.atanh(v31);
        const v47 = v43 / F18;
        let v48 = 10;
        for (; v48--;) {
        }
        v43--;
        Math.sign(v47, C34);
        return v31;
    }
}
const v53 = new BigInt64Array(4046);
let o54 = {
};
[,...o54] = v53;
new C34(v2, v10, v10);
new C34();
new C34();
const v59 = -425087802 >>> -425087802;
class C61 extends Array {
    static #b;
    n(a63, a64) {
    }
    constructor(a66, a67) {
        function f68(a69) {
            return F3;
        }
        const o72 = {
            "type": "function",
        };
        new Worker(f68, o72);
    }
}
const v74 = new C61();
try { v74.group(v59); } catch (e) {}
