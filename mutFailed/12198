function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 6;
    } catch(e3) {
    }
    const v8 = F0 >>> F0--;
    Math.imul(F0, F0);
    Math.asin(v8);
}
for (let v11 = 0; v11 < 25; v11++) {
    Array(36862);
}
const v15 = new F0();
const v16 = new F0();
const v17 = new F0();
function f18(a19, a20) {
    const o37 = {
        [F0](a22, a23, a24, a25) {
            let v26 = 0;
            do {
                const o30 = {
                    "execution": "async",
                    "type": "minor",
                };
                gc(o30);
                v26++;
            } while ((() => {
                    function f33() {
                        return this;
                    }
                    f33 * f33;
                    this.c **= a23;
                    return v26 < 1;
                })())
            return a24;
        },
    };
    return o37;
}
const v38 = f18(v15, v16);
const v39 = f18(v38, v16);
const v40 = f18(v16, v15);
function f41(a42, a43, a44) {
    const o61 = {
        __proto__: a42,
        "b": F0,
        "g": v39,
        "c": a42,
        "d": F0,
        "a": a44,
        "e": f18,
        /*
        __proto__: v39,
        */
        o(a46) {
            return a46;
        },
        join(a48, a49, a50) {
            try { this.toString(); } catch (e) {}
            a43[a44] = v15;
        },
        m(a53, a54, a55) {
            let v56;
            try { v56 = this.findLastIndex(); } catch (e) {}
            function f57() {
                try {
                    v40.fuck(f41, F0, f18, true);
                } catch(e60) {
                }
                return v56;
            }
            return v38;
        },
    };
    return o61;
}
const v62 = f41(v15, v15, v40);
f41(v38, v15, v40);
const v64 = f41(v38, v38, v16);
const v67 = new Date(v64);
v67.getDay();
function f69() {
    return f69;
}
const v70 = f69();
function f71(a72, a73) {
    const o75 = {
        get d() {
            return this;
        },
    };
    return v70;
}
class C76 {
    b = v38;
    static 130 = v64;
    5;
    d = v40;
    h = Date;
    e = F0;
    p(a78, a79, a80, a81) {
        const v82 = [142026.36415256164,-1000000000000.0,160593.91457975493,-1.9364523595671663,0.10652337324779793,0.4591098029687508,0.2689630899972745];
        const v84 = new WeakMap();
        function f85(a86, a87, a88) {
            return a87;
        }
        const v90 = [f85,v84,v82];
        const o91 = {
            "arguments": v90,
            "type": "function",
        };
        class C95 {
            static {
                this[Symbol.hasInstance];
            }
            #p() {
                let v101;
                try { v101 = this.p(undefined, this, this, this, this); } catch (e) {}
                try {
                    v101.#p(undefined, v101, v101, undefined);
                } catch(e103) {
                }
                return undefined;
            }
            static #a = undefined;
            c = v67;
        }
        const v104 = new C95();
        const o110 = {
            15: v67,
            toString(a106, a107) {
                super.h = a107;
                try { C95.stringify(v67, v67, this); } catch (e) {}
                try {
                    C95.c = C76;
                } catch(e109) {
                }
                return a106;
            },
            2147483647: undefined,
            __proto__: v104,
            "c": v67,
            ...v67,
            "f": v67,
        };
        const v114 = 1073741824 & 1073741824;
        const v115 = [6.621588498634488e+307,1.0,3.0,-5.0,-1.7976931348623157e+308,-1.7976931348623157e+308,257.7405098162435,-136018.55674827856];
        const v116 = [v115,v115];
        v115.concat(v116, v116, true, v114);
        new Array(512);
        return v17;
    }
    [v17] = f18;
    static 2 = v15;
    [v62] = v16;
    static 247;
}
new C76();
new C76();
new C76();
const v125 = new Uint8ClampedArray();
for (let v126 = 0; v126 < 25; v126++) {
}
v125[6] = 3;
