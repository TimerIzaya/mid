const v2 = new Int8Array(128);
const v5 = new Uint8ClampedArray(443);
function f6(a7) {
    const v9 = new Int16Array();
    const o10 = {
        __proto__: v9,
    };
    return o10;
}
v5.toString = f6;
Int32Array.toString = f6;
const v13 = new Int32Array(185);
function f14(a15, a16) {
    const o21 = {
        "b": Int32Array,
        [Int32Array]: 443,
        "h": a15,
        "e": Uint8ClampedArray,
        "f": f14,
        1024: Uint8ClampedArray,
        __proto__: v13,
        [128]: v2,
        ...v13,
        10: 443,
        ...v5,
        get d() {
            try {
                this.fuck(this, 472113.30264839483, 185, Int8Array);
            } catch(e20) {
            }
            return Int8Array;
        },
    };
    return o21;
}
const v22 = f14(185, 443);
f14(128, 185);
f14(185, 443);
class C25 {
}
class C26 {
    constructor(a28, a29, a30) {
        a29.g = C25;
        for (let v31 = 0; v31 < 25; v31++) {
            a29.g &&= 185;
            this[Int8Array] = v31;
            [-535197468,-10,-1018015684,-65536,-27819];
            [1073741824,-49136,3,-1789531807,268435440,56642,-1050551530];
            const v34 = [-10,13029];
            const o39 = {
                "execution": "async",
                "type": "minor",
                __proto__: v22,
                0: new.target,
                [v5]: Int8Array,
                "b": 185,
                "f": v34,
            };
            gc(o39).then(new.target);
        }
    }
}
new C26(C25, C26, C25);
