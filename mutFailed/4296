function f0() {
    const o14 = {
        set d(a5) {
            a5[this] = this;
            ("symbol")[Symbol.species];
            try {
                super.toString(455.0770574947437);
            } catch(e13) {
            }
        },
        128: -368477.3742578116,
        ..."symbol",
        ...f0,
        129: 455.0770574947437,
        3: "symbol",
    };
    return o14;
}
const v15 = f0();
const v16 = v15();
const v17 = f0();
function F21(a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const o28 = {
            ["536870887"]: -1000000000000.0,
            "b": -757.5759240774136,
            "a": -1000000000000.0,
            [-757.5759240774136]: "536870887",
            [-1000000000000.0]: -757.5759240774136,
            "d": "536870887",
            [-2]: -1000000000000.0,
        };
        this.b = f0;
    } catch(e29) {
    }
    try {
        this.f = F21;
    } catch(e30) {
    }
    try {
        this.a = a23;
    } catch(e31) {
    }
}
new F21(v16, v16);
const v33 = new F21(v17, v16);
new F21(v15, v17);
function f35(a36, a37, a38, a39) {
    function f40() {
    }
    class C41 extends f40 {
        toString(a43, a44) {
            const t53 = a44.constructor;
            new t53();
            -v33;
        }
    }
    ([NaN,3.0])["concat"](-483497369);
    const v53 = [1000.0,-1000000000000.0,-7.943810730626244,-1.7976931348623157e+308,1.0,4.0];
    try {
        v53.length = -9223372036854775808;
    } catch(e54) {
    }
    const v55 = new C41();
    try { v55.toString(); } catch (e) {}
    for (let i = 0; i < 5; i++) {
        ["object"];
    }
}
for (let v59 = 0; v59 < 5; v59++) {
    f35();
}
%OptimizeFunctionOnNextCall("n");
v15();
const v63 = 139837843 in v17;
const v65 = 0 <= "1529386759";
new Int8Array(0);
for (const v68 in 0) {
    0 ^ v65;
    Object.defineProperty(v17, v17, { writable: true, configurable: true, enumerable: true, value: v63 });
    v17[129] = v68;
}
