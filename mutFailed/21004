class C3 {
    static #valueOf(a5) {
        const v7 = [];
        v7 / Reflect.construct(a5, v7, a5);
        v7[0.49589050829156756] = this;
        return v7;
    }
    [-9223372036854775808];
    static #b = 0.49589050829156756;
    h = 377774.2826940224;
}
new C3();
const v11 = new C3();
new C3();
function f16() {
    return -54546n;
}
class C18 {
    static {
        function f20(a21, a22) {
            return delete arguments[2];
        }
        f20(this, this, -1.7976931348623157e+308, this);
    }
}
Object.defineProperty(C3, 4096, { writable: true, enumerable: true, get: f16 });
Math.asin(65535);
let v30 = -1e-15 % 65535;
const v31 = --v30;
Math.floor(v30);
v31 ** 65535;
v31 / v11;
new Uint8Array(268435440);
const v39 = [865030.0072136207,-1000000000000.0,-1.2335898302795516e+308,-123.52161477757932,0.8230465364846693,-141113.64897402772,-196.5981128122221,151.59178734474358,0.667472981056507,-0.0];
class C40 extends Set {
}
const v41 = new C40();
function f42(a43) {
    f42(BigInt64Array);
    %PrepareFunctionForOptimization(f42);
    f42(BigInt64Array);
    f42(BigInt64Array);
    %OptimizeFunctionOnNextCall(f42);
    f42(BigInt64Array);
    const v49 = new BigInt64Array();
    const v50 = `
        var c = v49;
        let v51 = 0;
        do {
            try {
                new f42(Uint8Array);
            } catch(e53) {
            }
            v51++;
        } while (v51 < 1)
    `;
    eval(v50);
}
v41.toString = f42;
v39[v41];
