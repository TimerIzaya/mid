function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.g = this;
    1000000000.0 >> 1000000000.0;
    new BigUint64Array(1448);
    try {
        this.g = 2065533643;
        const t7 = [-65317,-58155,536870889,976,536870889];
        t7[2] = 1448;
        15312 | [Infinity,5.072687501529128e+307,0.4093098171074484,4.0,-4.442441003635313e+306,843998.4933901483,-714.8973177887364];
    } catch(e12) {
    }
    try {
        this.h = 2065533643;
    } catch(e13) {
    }
    Math.E = Math;
    const v18 = Math.round();
    for (let v19 = 0; v19 < 10; v19++) {
        v19 / v19;
        async function f21(a22, a23, a24) {
            a24 >>> a24;
            Number.isNaN(await v18);
            const v30 = [0.8307152163010869,1.0,0.0];
            v30[2] = v30;
            v30.length = v19;
            %VerifyType(v19 instanceof -24894);
            return f21;
        }
        try { f21(-788.7260290236088, -1000000000.0, -1000000000.0); } catch (e) {}
        const v33 = f21(Math, "b", v18);
        try { v33.hasOwnProperty(BigUint64Array); } catch (e) {}
    }
    try {
        this.e = 2065533643;
    } catch(e35) {
    }
}
new F0();
const v37 = new F0();
new F0();
function f39() {
    return v37;
}
const v42 = new Int16Array(128);
new Uint16Array();
Number.isFinite();
("toString").split("toString");
new BigInt64Array(v42);
new BigUint64Array(214);
const t50 = "toString";
const v57 = new t50();
const v59 = new BigUint64Array();
v59.lastIndexOf();
try {
    for (const v64 of Array(19793)) {
    }
    class C66 {
        static [376363416];
        static {
            this.b = f39;
            super.b = this;
        }
    }
} catch(e68) {
}
v57["getUTCMinutes"]();
