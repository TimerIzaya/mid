function f0() {
    function f1(a2, a3, a4) {
        const o5 = {
            "h": a4,
        };
        return o5;
    }
    -2147483648 ^ 8.868704382732872e+307;
    const v10 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    try {
        v10.forEach();
    } catch(e12) {
        e12.constructor().constructor.stackTraceLimit;
    }
    const o26 = {
        "type": "bigint",
        o(a19) {
            const o21 = {
            };
            gc(o21);
        },
        [-3.0](a24) {
            try {
                a24.f = -3.0;
            } catch(e25) {
            }
            return "bigint";
        },
        "h": -3.0,
        __proto__: "bigint",
        "c": -3.0,
        "b": -3.0,
    };
    return o26;
}
f0();
f0();
const o29 = {
};
class C31 {
    #valueOf(a33, a34, a35, a36) {
    }
    3;
    static {
        try {
            this.#d;
        } catch(e39) {
        }
    }
    p(a41, a42, a43) {
        -1000000000000.0 >= a41;
        Math.acos();
    }
}
~-4294967295;
new C31();
const v53 = 9007199254740991n * 9007199254740991n;
v53 * v53;
const v55 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f56(a57, a58, a59, a60) {
    function f61() {
        let v63 = Float64Array;
        v63.toString();
        v63 = a58;
        const v65 = v55.length;
        const v66 = v65 >>> v65;
        v66 / v66;
        const o72 = {
            toString(a69, a70) {
                this && v63;
                return a58;
            },
        };
        v53.toString();
        let v74 = -268435456;
        v74--;
        const o76 = {
            "e": -4294967295,
            "e": v74,
        };
        return a58;
    }
    const v77 = f61();
    %OptimizeFunctionOnNextCall(f61);
    return v77;
}
const v78 = f56();
f56(v78, v78, f56, v55);
f56();
const v81 = new Set();
function F82(a84, a85) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a84;
    } catch(e86) {
        for (let [v87,v88] of a84) {
        }
    }
    try {
        const v89 = v81[this];
        ([WeakSet,WeakSet])[1];
        new F82(v89, -268435456n);
        function f94(a95, a96) {
            return a95;
        }
        function f97(a98, a99) {
            function f100() {
                return f97;
            }
            Object.defineProperty(a98, "toString", { configurable: true, get: f100 });
            return a99;
        }
        f97(f97);
    } catch(e102) {
    }
}
f0();
const v108 = new WeakMap();
new WeakSet();
class C111 {
}
const v112 = new C111();
const o114 = {
    65536: WeakMap,
};
const v116 = new Proxy(v112, o114);
v116[v116] = v108;
