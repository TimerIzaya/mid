new Int32Array(129);
new BigInt64Array(257);
const v11 = new BigUint64Array(45);
function f12() {
    return v11;
}
const v15 = new Float32Array(257);
const v18 = new Int8Array(3505);
new Uint32Array(4);
class C25 {
    n(a27) {
        try { new a27(a27, a27, a27, 268435440, 268435440); } catch (e) {}
        const o30 = {
            "b": 256,
        };
        new C25();
        this[2] = -44363;
        const o35 = {
            "maxByteLength": 1024,
        };
        const v37 = new ArrayBuffer(1024, o35);
        new a27(v37);
        return 268435440;
    }
}
const v40 = new C25();
new v40();
const v42 = new C25();
const v44 = new Date();
function f45() {
    return v44;
}
try {
    v40.g = v42;
} catch(e46) {
}
function F47(a49, a50, a51) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a49;
    } catch(e52) {
    }
    try {
        this.e = a49;
    } catch(e53) {
    }
    try {
        this.a = a49;
    } catch(e54) {
    }
}
const v55 = new F47(C25, v44, 129);
const v56 = new F47(v55, "L", v42);
new F47(f45, v56, -44363);
function f58(a59, a60) {
    const o62 = {
        ...a60,
        get h() {
            return this;
        },
    };
    return a60;
}
class C64 {
    static get d() {
    }
    c;
    static #e = -1000000.0;
    4294967295;
    #a;
}
new C64();
new C64();
const o69 = {
};
new Float32Array(Float32Array, Float32Array);
[];
[];
class C75 {
    static #p(a77, a78) {
    }
    #h;
}
const v79 = new C75();
const v80 = new C75();
const v81 = new C75();
function f82(a83, a84, a85, a86) {
    const o87 = {
        "c": -922911.6474995338,
        242: -922911.6474995338,
        "g": v80,
        [v15]: a84,
        [C75]: a84,
        "a": -747634.1081113975,
        "h": a83,
        "f": a86,
    };
    return o87;
}
const v89 = f82(f82(v79, v18, C75), v81, v79, v79);
const v90 = f82(v80, v81, v89, v89);
class C91 {
    constructor(a93, a94) {
        function f95(a96, a97) {
            v79 >>> 9007199254740991n;
            C75.g;
        }
        const v103 = [v79,v90];
        const o104 = {
            "arguments": v103,
            "type": "function",
        };
        new Worker(f95, o104);
    }
}
new C91(C75, C91);
new C25();
/ywha??/gvdim;
