const v1 = new Map();
class C2 extends Map {
    static 1817;
    #o(a4) {
        return this;
    }
    constructor(a9, a10) {
        super(a9);
        const v11 = super.keys();
        try { v11["toString"]("toString", "toString", "toString"); } catch (e) {}
        [4,2,-7,9223372036854775807,1507865544,-1617001904,1073741824,129,51285];
        [52319];
        [-12573];
    }
}
const v17 = new C2(v1, Map);
const v18 = new C2(v17, Map);
const v19 = new C2(v1, v18);
const v20 = [v18,v1,v19,C2,v19];
f = C2;
C2 *= C2;
C2 %= C2;
const v25 = -29615 * 1.7976931348623157e+308;
const v26 = -29615 | -29615;
!v25;
const v28 = Math.imul(-29615, v26);
const v29 = v26 ** v26;
-1.7976931348623157e+308;
const v31 = !v26;
const v32 = [v18,v17,v1,v17,v20];
const v33 = [v32];
class C34 extends Map {
    #e = v1;
    static [v33];
    b;
    static h;
    m(a36, a37) {
        const o38 = {
            __proto__: a36,
            [v1]: v19,
        };
        try {
            v33.#e %= C34;
        } catch(e39) {
            const o40 = {
            };
            new Proxy(Map, o40);
        }
        try {
            v32.#e ^= this;
        } catch(e46) {
        }
        function f49() {
            function f50(a51, a52, a53, a54) {
                return a51;
            }
            f49 != f50;
            return f49;
        }
        const v58 = -1.7675954334188252e+308 | v29;
        const v59 = ~-9007199254740992;
        v31 + -1.7675954334188252e+308;
        Math.log1p(v58);
        v58 / v58;
        Math.clz32(v59);
        Math.asin(-1.7675954334188252e+308);
        const o67 = {
            "execution": "async",
            "type": true,
        };
        gc(o67);
        return v17;
    }
}
const v69 = new C34();
class C70 {
    a;
    b;
}
new v33();
new C70();
const v73 = new v1();
const v74 = new C34();
try {
    v74.has(v73);
} catch(e76) {
}
[...C2] = v33;
new C34();
class C78 {
    4;
    static #p(a80, a81, a82, a83) {
        a82[3] = v33;
        v17[8];
        try {
            v69.set(-4294967297, C34);
            const v89 = new Int8Array();
            function F91(a93, a94) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.d = a93;
                } catch(e95) {
                    for (let [v96,v97] of v89) {
                    }
                }
                try {
                    (0)[this];
                    [WeakSet,WeakSet];
                    a93[1];
                    new v28();
                } catch(e102) {
                }
            }
        } catch(e103) {
        }
        return a81;
    }
    f = v17;
    7;
    0 = Map;
    b;
}
new C78();
new C78();
new C78();
class C108 {
    static {
        try {
        const t0 = "boolean";
        t0(this);
        } catch (e) {}
    }
}
