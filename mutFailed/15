class C3 {
    8;
    set f(a5) {
        const t3 = "stack";
        t3[9007199254740991] = 1;
    }
    static [1];
    static #c;
    [1];
}
class C9 {
    static d;
    3;
    6;
}
new C9();
new C9();
new C9();
const v13 = new C3();
const v14 = new C3();
const v15 = new C3();
function F17(a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = v14;
    } catch(e22) {
    }
    try {
        this.a = v13;
    } catch(e23) {
    }
}
const v24 = new F17(v13, v15, v15);
const v25 = new F17(v14, v13, v15);
const v26 = new F17(v14, v15, v15);
const v27 = /1xyz{1,}?/gims;
const v28 = [-1868814416,-2,-58067,18422,-1033741301,34203,-811081569];
const v29 = [268435456,3,-9007199254740990,1728557546,1920132119,-893480616,-1916389284];
const v30 = [-65535,-21329,-23690,6,8];
function F31(a33, a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v25;
    } catch(e37) {
    }
    try {
        this.c = a33;
    } catch(e38) {
    }
}
new F31(F31, v26, v24, v25);
new F31(v14, v26, v28, v26);
new F31(v29, v25, v30, v24, v30, v13);
const v42 = /h\p{gc=Nd}/vdy;
const v43 = /\xf0\x9f\x92\xa9a*/us;
const o44 = {
};
new Proxy(v42, o44);
const o50 = {
    "execution": "sync",
    "type": "major",
};
gc(o50);
function F55(a57, a58, a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
}
const v61 = new F55(v43, 1, -1263139894, F55);
const v62 = new F55(v27, v43, -23596, v61);
const v63 = new F55(v42, F55, -23596, 1);
let v66 = 0;
while (v66 < 10) {
    v30.length;
    v66++;
}
const v71 = v63 | F55;
let v72;
try { v72 = v62(v43, v71, v71); } catch (e) {}
if (v72) {
    let v73;
    try { v73 = ("catch").codePointAt(v72); } catch (e) {}
    [,v73] = "iterator";
} else {
    new Symbol();
}
