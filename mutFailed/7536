let v2 = -65537;
class C3 {
    f = 3;
    static n(a5) {
        with (this) {
            f = a5;
            let v8 = 7;
            v8++;
            Math.log2(257);
            Math.trunc(v2);
            const v12 = v2++;
            Math.sin(this);
            Math.pow(a5, v12);
            -v12;
            new Uint16Array(["4294967296"]);
            function f20() {
                return f20;
            }
        }
        return 3;
    }
}
const v21 = new C3();
new gc();
function f24() {
    return f24;
}
const v25 = new C3();
const v26 = new C3();
class C27 {
    c;
    static #c;
    static [9007199254740990] = v25;
    constructor(a29, a30, a31, a32) {
        new Int32Array(256);
        new Int8Array(3277);
        new Uint32Array(4);
    }
}
const v42 = new C27(C3, v21, C27, v25);
new C27(v42, v26, v25, v21);
new C27(C3, v25, v26, v26);
[2.2250738585072014e-308,0.14755293706199257,1.7976931348623157e+308];
[-7.838774084765863,0.0,4.662720131239155,1.7976931348623157e+308,216973.22124380828,-6.869297432048402,1000000000000.0,-1000000.0,-2.2250738585072014e-308,420343.1260701681];
[-2.220446049250313e-16,0.670611266630976,-1000000000000.0,-1000000000000.0,25.980022444998895,3.0,-1.2265293657566279,1e-15,-Infinity,147699.070469904];
const v49 = new Uint8Array();
const v52 = new Uint8Array(165);
v52.lastIndexOf();
const o60 = {
    n(a56, a57) {
        return Math.ceil(64n);
    },
};
try { o60.n(o60, o60, o60, o60); } catch (e) {}
const v63 = new Uint32Array();
function f64(a65, a66, a67, a68) {
    a65.g = a65;
    a67 % a67;
    const o89 = {
        [64n](a71, a72, a73, a74) {
            eval(a72);
        },
        n(a78, a79, a80) {
            return f24;
        },
        "b": a65,
        ...v49,
        n(a82, a83) {
            v63[a65] = v63;
            return Uint8Array;
        },
        "g": 165,
        set e(a85) {
        },
        n(a87, a88) {
            return 9007199254740990;
        },
    };
    return Uint8Array;
}
for (let v90 = 0; v90 < 625; v90++) {
    f64(Uint8Array);
}
