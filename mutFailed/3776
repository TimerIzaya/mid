let v0 = -2;
class C3 {
    [16593];
    set g(a5) {
        let v6;
        try { v6 = a5(v0, v0, -128, this, -128); } catch (e) {}
        v6[-128] ^= 16593;
        v0 = 16593;
        const v9 = new Int32Array(1024);
        const v12 = new BigInt64Array(8);
        let v15;
        try { v15 = this.n(); } catch (e) {}
        try { new C3(v15, BigInt64Array, -128, C3); } catch (e) {}
        v9[2147483648] = a5;
        this[1073741824];
        let [,v18,...v19] = v12;
        new Uint8ClampedArray(7);
    }
}
try { C3.bind(16593); } catch (e) {}
new C3();
const v23 = new C3();
new C3();
4 >>> 4;
new Float32Array(4);
let v30 = 3138 != 3138;
const v32 = new Float32Array(3138);
8 >= 8;
const v36 = new Float32Array(8);
function f37() {
    function f38() {
        v30 **= delete v32[Float32Array];
        return 8;
    }
    return f38;
}
function f40(a41) {
    const v43 = new Int8Array();
    try {
        v23.d = a41;
    } catch(e44) {
        for (let [v45,v46] of v43) {
        }
    }
}
Object.defineProperty(v36, "valueOf", { writable: true, configurable: true, get: f37, set: f40 });
v36[5] = v36;
WeakMap.length = WeakMap;
const v49 = new WeakMap();
v49.set(Uint16Array);
