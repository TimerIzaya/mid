const v0 = [8,-2147483649,-10,2147483648,65537,-9417];
const v1 = [24395,536870888,129,256];
const v2 = [16,2147483647,4,1054378822,-2147483649,128,-65536];
[287.7851750795471,Infinity,2.2250738585072014e-308,-8.25025723040721e+307,-1e-15,-1000000.0];
[3.0,5.34790746150515e+307,-2.0];
const v5 = [2.2250738585072014e-308,2.220446049250313e-16,-1000.0,-1.0,504.154978256656,0.6752972653088739,1.2849637803716398e+308,0.4591176035143689,-170.70866144712227];
new Map();
function F8(a10, a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a12;
    } catch(e13) {
    }
    try {
        this.b = a11;
    } catch(e14) {
    }
    const v15 = [];
    for (let v17 = 0; v17 < 100; v17++) {
        const o20 = {
            valueOf(a19) {
                return v17;
            },
        };
        function f21(a22, a23, a24) {
            const o31 = {
                toString(a26, a27, a28) {
                    super[a24];
                    return a23;
                },
                "a": o20,
                "arguments": v15,
                2: undefined,
                get d() {
                    return F8;
                },
            };
            return a22;
        }
        const v32 = f21(f21, undefined, F8);
        f21(undefined, v32, v32);
    }
}
new F8(v2, v5, v5);
const v35 = new F8(v1, F8, v0);
new F8(v0, v0, v1);
class C38 {
    static m(a40) {
        gc();
    }
    constructor(a44, a45, a46) {
        super();
        const o50 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o50);
    }
    static #valueOf(a53, a54, a55, a56) {
        class C59 extends Date {
        }
        const v61 = new Set();
        function F62(a64, a65) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = a64;
            } catch(e66) {
                for (let [v67,v68] of a64) {
                    try {
                        v61.values();
                    } catch(e70) {
                    }
                }
            }
            try {
                this.h = v61;
            } catch(e71) {
            }
            try {
                const v72 = v61[this];
                try {
                    new F62(v72, -268435456n);
                } catch(e75) {
                }
                this.b = Set;
            } catch(e76) {
            }
        }
        const o78 = {
            ...v35,
            "maxByteLength": C38,
        };
        class C80 extends Date {
        }
        new C80();
        const o82 = {
        };
        const v83 = new SharedArrayBuffer(5, o78);
        new DataView(v83);
        return v0;
    }
    2147483648 = v0;
    #f = Map;
}
new Map();
const v87 = new C38();
new C38();
new BigUint64Array(16);
try { Float32Array.apply(16, v87); } catch (e) {}
