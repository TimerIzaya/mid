let v0 = [];
function f1() {
    ([Uint32Array,Uint32Array,Uint32Array,Uint32Array]).push();
    this.decodeURIComponent([-2.216170140955498,-2.2250738585072014e-308,-643865.3403199288,NaN]);
    const v9 = new Int32Array(Int32Array, Int32Array, Int32Array);
    Math.expm1(~v9);
    return Math;
}
v0.valueOf = f1;
function f13() {
    return v0;
}
class C14 {
    [v0] = f13;
    #toString(a16, a17) {
        try {
            f13();
        } catch(e19) {
        }
        return a16;
    }
    #h;
    static f = v0;
}
const v20 = new C14();
const v21 = new C14();
const v22 = new C14();
class C23 {
    constructor(a25, a26, a27, a28) {
        --v0;
        try {
            v0.valueOf = a25;
        } catch(e30) {
        }
    }
    f = v22;
    static #d = v0;
    9;
}
new C23(v22, v22, C14, v21);
new C23(v22, v20, v20, v0);
const v33 = [0.0,1000000000.0,168.7956281727238,-575464.6142395872,-1000000000.0,938.6271876998214];
const v36 = new Float64Array(64);
const v38 = [v36,v33];
const o39 = {
    "arguments": v38,
    "type": "function",
};
function F41(a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
}
let v45 = new F41();
class C46 {
    constructor(a48, a49, a50) {
        ({"c":v45,...v45} = a49);
        class C51 {
            set b(a53) {
                gc();
            }
        }
    }
}
new C23(C23, v21, v21, v22);
class C59 {
    #m(a61, a62) {
        let [v64,v65,,v66] = this;
    }
    static valueOf(a68) {
        this.#c = "function";
    }
    toString(a70) {
        new Uint8Array();
        const o74 = {
            "b": 129,
        };
        const v75 = o74.b;
        const v76 = (a77, a78, a79) => {
            var h = v75;
            return a79;
        };
        const v81 = super[this];
        for (let v83 in [-65535,536870889,4096]) {
            v83--;
            Math.log10(v83);
            v83 ** 1000000000000.0;
        }
        v81[9] = 0;
    }
}
const v89 = new C59();
const v90 = [v89,v89];
try {
    v90.length = v89;
} catch(e91) {
}
