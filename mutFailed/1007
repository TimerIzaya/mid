const v0 = [-977851571];
const v1 = [8,-65536,2,-5,16016,9007199254740991,6481];
const v2 = [34893,-268435456,1,-1360755135,127];
class C3 {
    static #toString(a5) {
        const o8 = {
            "maxByteLength": 65535,
        };
        const v10 = new SharedArrayBuffer(8, o8);
        new DataView(v10);
        return v2;
    }
}
const v13 = new C3();
const v14 = new C3();
const v15 = new C3();
class C16 {
    m(a18, a19, a20) {
        try { C3.n(v2, v2, a20, a19); } catch (e) {}
        super[a20];
        return v13;
    }
    c = v1;
    65535 = v2;
    constructor(a24, a25) {
        this["m"](...v2, ...a24, v14, ..."m");
        super[this] = v0;
    }
}
const v28 = new C16(v0, v1);
new C16(v15, v2);
const v30 = new C16(v0, v2);
class C31 {
    static #p(a33, a34, a35, a36) {
        let v37;
        try { v37 = this(v14, v30, v28, v2); } catch (e) {}
        v0.length %= v37;
        const v39 = new WeakMap();
        const v41 = new Int8Array();
        const v43 = new Uint16Array();
        for (let i = 0; i < 5; i++) {
            [[v39,v43["values"](...v41, Int8Array, ..."values"),[]]];
        }
        %VerifyType(v13);
        v13[v2];
        return v15;
    }
    static 10;
    static [C16];
    [v14];
    5 = v30;
    2 = v13;
}
new C31();
new C31();
new C31();
function f55(a56, a57) {
    const o78 = {
        [a56]: a57,
        2: "-354330605",
        "execution": "-354330605",
        __proto__: v0,
        valueOf(a59, a60) {
            function f61() {
                function f62(a63) {
                    new Float64Array(64);
                    new BigInt64Array(3481);
                }
                2 ^ f62(f62);
                return 2;
            }
            const v75 = [];
            const o76 = {
                "arguments": v75,
                "type": "function",
            };
            new Worker(f61, o76);
            return 2;
        },
        65536: a57,
    };
    return f55;
}
f55("-354330605");
f55("-354330605", 2);
