const v3 = /\x01/gu;
v3.f = v3;
/^xxx$xyz{0,1}/gudisy;
/a\b!/guisy;
[-2.982861180664193e+307,-474.1554101923107,0.5266764436369433,2.220446049250313e-16,NaN,-1.2980826520068379e+308,8.630019595245742e+307,119.75530238391661,7.838174934523002e+307,2.0];
const v10 = [0.462643449168024,-943.52522347554,4.0,-1.0,-1.0,1.0428403251724434e+307,-1.0011763439895003e+307,-2.2250738585072014e-308,81.03215056152703];
[-994.317277186559,-595886.9130466813];
try { ("boolean").strike(); } catch (e) {}
-1.0654615543745536e+308 % -1.0654615543745536e+308;
class C20 {
    static #valueOf(a22) {
        const t11 = "boolean";
        t11[-8] = a22;
        a22[5] = -1.0654615543745536e+308;
        new Float32Array(9);
        new Float32Array(2823);
        new Uint16Array(512);
        return Float32Array;
    }
}
C20.length;
const v33 = new C20();
const v34 = v33?.constructor;
try { new v34(); } catch (e) {}
function f36(a37) {
    function f38(a39, a40, a41, a42) {
        a39++;
        try { a41.call(a40); } catch (e) {}
        a42.arguments;
        const v46 = a41++;
        Number.isNaN(v46);
        let v49 = v46 - v46;
        const v50 = v49++;
        const v52 = -(a41 % a41);
        v52 >> v52;
        const v54 = v52 / v52;
        v54 >>> v54;
        const o56 = {
        };
        try { o56.n(v49, v50, v49, f38); } catch (e) {}
        return f38;
    }
    for (let v58 = 0; v58 < 500; v58++) {
        f38(v58, v58, f38, f38);
    }
    return -2008052062;
}
v33.constructor = f36;
const v60 = v33?.constructor;
v60.arguments = v60;
try { new v60(); } catch (e) {}
const v62 = new C20();
const v63 = v62?.constructor;
try { new v63(); } catch (e) {}
const v65 = new C20();
const v66 = v65?.constructor;
try { new v66(); } catch (e) {}
v65.b = v65;
class C68 {
    constructor(a70, a71, a72, a73) {
        try { this.propertyIsEnumerable("a"); } catch (e) {}
        a70.prototype = a70;
        a73.h = a73;
        Object.defineProperty(this, "b", { enumerable: true, value: a73 });
        const v75 = this?.__lookupGetter__;
        try { new v75(C68); } catch (e) {}
        try { a72.isPrototypeOf(a72); } catch (e) {}
        try { v65(); } catch (e) {}
        try {
            a73.b = a72;
            try {
                Reflect.ownKeys();
            } catch(e81) {
            }
        } catch(e82) {
        }
    }
    #g;
    valueOf(a84, a85, a86, a87) {
        0.6920828961713477 % 1;
        -8 && 0.6920828961713477;
        +v33;
        let v94 = -8 && -8;
        return v94++;
    }
}
let v96;
try { v96 = C68.bind(-8); } catch (e) {}
try { v96(v65, v96, v60, v96); } catch (e) {}
new C68(C68, "boolean", v65, v65);
const v99 = new C68(v65, v62, C20, C20);
v99.b = v99;
const v100 = new C68(v65, C20, C68, v99);
const v101 = v100?.constructor;
try { new v101("xh", "atan", "toString", v10); } catch (e) {}
[-4.0,5.0,1e-15,-1000000.0];
const v104 = [4.0,1.7976931348623157e+308,-1.6746280838181564e+308,Infinity,0.02995849684218521,8.253324943521243e+307,-4.753315469426976e+307,1000000.0];
v104[3] = v104;
[-1.5131061856231655e+308,0.9940081941996022,-1000000000.0,-9.722353359280868,9.968489719443777e+307,-5.0,-374352.7778849256,-Infinity,1000000000.0,0.05917465816222045];
const v107 = new Float32Array(Float32Array);
for (let v108 = 0; v108 < 25; v108++) {
    v108 >> v108;
    function f110(a111, a112, a113, a114) {
        a111.BYTES_PER_ELEMENT;
        let v116;
        try { v116 = a111.join(v108); } catch (e) {}
        v116[8] = v116;
        a112--;
        const v118 = a112 <= a112;
        v118 || v118;
        const v121 = arguments?.__lookupGetter__;
        try { v121(v121, f110, a112, arguments); } catch (e) {}
        const v124 = "find" == "find";
        v124 && v124;
    }
    try { f110(v99, v99, v99, v100); } catch (e) {}
    for (let v127 = 0; v127 < 10; v127++) {
        v127 % v127;
        f110(v107, v108);
    }
}
