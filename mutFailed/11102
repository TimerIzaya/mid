const v0 = [-9007199254740992,-28894,1073741824,-64026,-1,-30529,-5,-1454969853,-15,-1843934914];
function f1(a2) {
    return v0;
}
v0[Symbol.toPrimitive] = f1;
const v8 = [330203332];
v8.toString = Symbol;
const v9 = [8,-4294967297,-65536,2147483649,-958445121,-1190864851,536870887,-45970,-929824485];
class C10 {
    static [v0];
    [v9] = v0;
    static get h() {
        let v11 = this;
        const v12 = v11[v11];
        v11 >>= v11;
        return v12;
    }
    [v8] = v0;
    static 216;
}
const v16 = new C10();
new C10();
new C10();
class C19 extends C10 {
    constructor(a21, a22, a23) {
        super();
        const v24 = super.a;
        try { v24(...v9, v24, ...a22, C10); } catch (e) {}
        try {
            v16.length = 2;
        } catch(e27) {
        }
    }
    #c = v9;
    #e;
}
const v28 = new C19(C19, v0, v0);
const v29 = new C19(v0, v8, v9);
new C19(v29, v9, v28);
[v28,C19,v9,v9];
const v32 = [v29,v0];
[v32,v16,v8,v32];
Math.sinh(0);
