function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.b = F0;
    try {
        this.e = -576954689;
    } catch(e3) {
    }
    try {
        this.b = -576954689;
    } catch(e4) {
    }
}
new F0();
new F0();
const v7 = new F0();
function f11() {
    return v7;
}
const o22 = {
};
o22.h = o22;
const v24 = !o22;
const v25 = 1842642860 % v24;
v25 % v25;
const v27 = new WeakMap();
try { v27.delete(v24); } catch (e) {}
class C31 {
    static {
        try {
        const t0 = "boolean";
        t0(this);
        } catch (e) {}
    }
}
try { new C31(); } catch (e) {}
const v36 = ("isInteger")?.replaceAll;
const v43 = [-2147483647,64098,-9383,1024,129,-5];
[1000,-16,-38597,12,-3399,32508];
const v45 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v47 = new Uint32Array();
const v49 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v50 = [601759695];
const v51 = [1073741824,1073741823,1376142744,1073741825];
function f53(a54, a55, a56, a57) {
    function f59() {
        let v62 = Float64Array;
        v62 = a55;
        b = v50;
        v45.length;
        try {
            v51.forEach(a55);
        } catch(e65) {
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o67 = {
        };
        const o82 = {
            "c": -4294967297n,
            "c": v50,
            valueOf(a70, a71) {
            },
            1073741824: v47,
            "maxByteLength": -268435456,
            "b": -4294967295,
            [-4294967297n](a73, a74, a75, a76) {
                class C78 extends Date {
                    static get c() {
                    }
                }
                eval();
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v49,
            256: a57,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            6: -268435456,
        };
    }
    f59();
    const v85 = new Int8Array();
    const v86 = v85.buffer;
    function f87(a88, a89) {
        f11();
        %PrepareFunctionForOptimization(f11);
        f11();
        f11();
        %OptimizeFunctionOnNextCall(f11);
        return f11();
    }
    v86.constructor = f87;
    v86.slice(2147483648);
    const v98 = new Int32Array(1024);
    v98[3];
    for (let v100 = 0; v100 < 10; v100++) {
    }
    %OptimizeFunctionOnNextCall(f59);
    let v102;
    try { v102 = v51["find"](..."find", a57, ...v50, ...v51, ...522675525n); } catch (e) {}
    v102 <= a56;
    return arguments;
}
for (let v104 = 0; v104 < 10; v104++) {
    f53();
}
%OptimizeFunctionOnNextCall(f53);
f53();
[-50328,-14,3,128,-11,64,-65535];
class C108 {
    [v43] = -1000000.0;
    constructor(a110, a111, a112, a113) {
        %VerifyType(a113);
        super[this];
    }
    g;
    c;
    #toString(a116, a117, a118) {
    }
    1 = 257n;
}
new C108(1073741825n, 1.0, 7.589647165982214);
const v120 = new C108(411585671n, -1000000.0, -1000000.0, 1.0);
new C108(v120, -1000000.0, 1.0);
/(?:a*)+bU\u0034xyz{1,32}/udi;
/vfoo|(bar|baz)|quux/gvds;
/JO/gvy;
class C127 {
    #m(a129, a130) {
        function f131() {
            return a130;
        }
        super[a130] = "f";
        %VerifyType(a130);
        return f131;
    }
    static c;
}
try { C127(); } catch (e) {}
const v133 = new C127();
const v134 = new C127();
v134?.constructor;
const v136 = new C127();
v136?.constructor;
class C138 {
    p(a140) {
        this.g ^= this[8];
    }
    static #n(a143, a144, a145, a146) {
    }
    7 = v136;
    #a = v134;
}
const v147 = new C138();
v147[7] = v147;
const v148 = new C138();
v148[7] = v148;
const v150 = [[],"f",v136,381717.6504737276];
[v133];
function F152() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(); } catch (e) {}
}
new F152();
const v156 = new F152();
function F157(a159, a160) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "constructor", { writable: true, configurable: true, enumerable: true, value: f53 });
    a159.e = this;
    const v161 = a160?.__lookupGetter__;
    try { v161(); } catch (e) {}
    try { this.constructor(F157, this); } catch (e) {}
    a159.e = a159;
}
F157.arguments = F157;
new F157(v156);
("Hyo9")[1];
const t180 = "at";
t180[1] = "at";
const v169 = ([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap;
Object.defineProperty(v169, "constructor", { writable: true, value: f11 });
v169?.constructor;
const v171 = [-4.202468609045087];
try { v171.every(v150); } catch (e) {}
[0.8434386161503777];
("4i")?.toWellFormed;
const t188 = "4i";
t188[1] = "4i";
const t192 = "RpXR";
t192[3] = "RpXR";
const t194 = "RpXR";
t194[1] = "RpXR";
("c")?.toLocaleUpperCase.length;
class C181 {
    constructor(a183) {
        a183[Symbol.toPrimitive] = f11;
        ("valueOf").localeCompare(a183, "valueOf");
    }
}
C181.toString = f11;
const v187 = new C181();
v187.constructor = f53;
const t206 = v187.constructor;
new t206(C181);
try { new v36("998423439", C31); } catch (e) {}
9 >> 9;
try { Uint32Array.from(15n); } catch (e) {}
const v199 = new Uint32Array(2432);
const o200 = {
    ...v199,
};
const v202 = 9007199254740991n * 9007199254740991n;
v202 * v202;
Math.sin(-5345);
function f207() {
    const o212 = {
        [-1000000.0]: 0.0,
        set e(a211) {
        },
    };
    return f207;
}
f207.toString = f11;
f207.caller = f207;
const v213 = f207();
v213.toString = v213;
const v214 = f207();
class C215 {
    static [f207] = v214;
}
try { C215.bind(v213); } catch (e) {}
