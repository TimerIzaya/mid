const v0 = [];
[-2.5338943720771163e+306,29593.996972365305,-1000000000000.0];
const v2 = [-1000000000.0,5.934670586359424];
const v3 = [0.0,1e-15,649.4698010175289];
function F7(a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        function f12(a13, a14, a15) {
            a11?.b > a14;
            a10 >> a10;
            return a14;
        }
        f12(f12, -4.0, 1000000000.0);
        this.b = this;
        Reflect.construct(a10, [v0], a9);
        const v24 = Symbol.iterator;
        v2[v24] = v24;
    } catch(e25) {
    }
    try {
        this.f = a9;
    } catch(e26) {
    }
}
const v27 = new F7(v2, -4.0, v2);
const v28 = new F7(v3, 1000000000.0, v0);
const v29 = new v28(v3, -4.0, v0);
[1000000000.0,F7,-4.0];
[[v28,-4.0,v29,v27,v28,-4.0]];
try { (-9007199254740992).log2(-9007199254740992); } catch (e) {}
