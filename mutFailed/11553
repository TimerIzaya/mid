const v2 = new BigUint64Array(255);
function F5(a7) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a7;
}
const v8 = new F5(255);
let v9;
try { v9 = BigUint64Array(536870889, 255, 255); } catch (e) {}
let v10;
try { v10 = v2.at(v9); } catch (e) {}
try { v8.repeat(536870889); } catch (e) {}
Reflect.construct(v10, [Reflect,Reflect,F5,Reflect,Reflect], v9);
with (v8) {
    h = Uint16Array;
}
new Int16Array(536870889);
const v19 = new Float32Array(3);
const v23 = [-20096,4294967296,-65537,-2];
const v24 = [-1073296946,-15,33576,-64867,6,-3,-4,4294967296,-4294967297];
const v25 = [v24,v24,v24,v23];
v19[6] = "r3k7";
v2.c **= 536870889;
const v26 = v19 * 255;
v19 >= v26 ? v19 : v26;
v23["slice"]([v25]);
