/[6Q]/us;
const v1 = /3\p{gc=Nd}/vi;
/L(?:a+)*/gvdm;
const v4 = [64,4294967297,-16467];
const v5 = [-7543,-4,-9007199254740992,9007199254740990,-21641];
let v6 = [-63952,1721414656,-65537,2147483649,48855,1,45836,-560515424];
/(?:a+)+/gdi;
/sz/gvds;
let v12 = /Jxyz{1,32}?/udm;
[1,12999,3,8];
const v14 = [-9007199254740992,-4294967296,3307,-11,22859,9,3,65536,37721];
[-1,35131,-1777694903,7,-2147483647,-4,-4,9007199254740990,-39625];
function F16() {
    if (!new.target) { throw 'must be called with new'; }
}
class C18 extends v1 {
}
function f19() {
}
%OptimizeFunctionOnNextCall(f19);
new C18();
function F21(a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    a24 === a24;
    const v28 = new BigUint64Array();
    const v29 = /anVXYFzN(x)(x)(x)\3/gvdms;
    let v30;
    try { v30 = v28.reduceRight(v29); } catch (e) {}
    9n >> 9n;
    this.constructor;
    function f34(a35) {
        return v30;
    }
    class C36 extends f34 {
        static c = v1;
        g = BigUint64Array;
    }
}
function f37() {
    if (-1195n > v5) {
        f37();
    } else {
        try {
            v12.__proto__ = v1;
        } catch(e40) {
        }
    }
    class C41 {
    }
    const v42 = new C41();
    v12 = v42;
    try {
        new C41();
    } catch(e44) {
    }
    for (let v45 = 0; v45 < 5; v45++) {
        new F21(undefined, v42);
    }
}
v6 ^= v12;
const v48 = new F21(v14, v5, v4);
%VerifyType(v48);
/()a+/guy;
/TILW[-\xf0\x9f\x92\xa9]+/diy;
/j/uds;
%PrepareFunctionForOptimization(f37);
f37();
%OptimizeFunctionOnNextCall(f37);
f37();
