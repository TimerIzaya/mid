let v2 = ["4294967296"];
("imul").codePointAt("4294967296");
const v6 = new Map();
function f7() {
    return Int32Array;
}
v6.constructor = f7;
const v9 = v6.constructor;
v9();
const o13 = {
    4294967296: "imul",
};
/4H/gvisy.compile(/[m]/gvdimsy);
const v17 = new Int16Array(5);
function f18() {
    return f18;
}
class C19 extends f18 {
}
function f22(a23, a24, a25, a26) {
    return f18;
}
for (let v27 = 0; v27 < 625; v27++) {
    f22(Uint8Array, 2, v27);
    try {
        v2 &= C19;
    } catch(e29) {
    }
}
const t29 = "symbol";
delete t29[1];
const v34 = [-1.5424212036356715e+308];
v34[v9] = v34;
new C19(8);
try { (8).with(v17, v17); } catch (e) {}
const v40 = new Uint16Array(256);
v40.g = v40;
function f41() {
    return 5;
}
let v43 = Uint8Array;
class C44 {
}
const v45 = new C44();
function f47() {
    const v50 = v43--;
    Math.min();
    v43 ** 6;
    -4294967296 >>> v45;
    return v50 - v45;
}
-256;
const v57 = (2136873598).constructor;
try { v57.parseFloat(2136873598); } catch (e) {}
const v59 = new v40();
try { v59.toFixed(1030); } catch (e) {}
