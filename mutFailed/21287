function f0() {
    let v2 = "52829";
    1164589922 & 7.4072841295430365;
    const o18 = {
        "a": 1164589922,
        1000: 7.4072841295430365,
        "e": 1164589922,
        "h": 1164589922,
        "iterator": 1164589922,
        __proto__: v2,
        [v2]: 7.4072841295430365,
        "b": 1164589922,
        set g(a6) {
            [-1.7879159045130178e+308,-1.5597722539807028e+308,5.0];
            [-6.76867056832851,-1000000.0,-1000000000.0];
            [-8.409004201466561e+307,-8.839874195903672,-3.0,460497.17481755395,-1e-15,-2.0,-2.6028944556014917,9.799836807204905,1.7976931348623157e+308,4.1027933044312093e+307];
            let v11 = 65537;
            const v13 = v2++;
            v11-- << v13;
            Math.tanh(+v2);
        },
    };
    return o18;
}
f0(f0, f0(f0, f0, f0));
const v21 = f0();
v21.g = v21;
const v22 = [861734.1148986516,2.830226086036241,-7.403459273806128,-619.6814760061413,Infinity,-5.0];
const v23 = [0.5782871584317171,0.17085884191422296];
[601.3758319496144,-1000000000000.0,-59.419638449899935,1.3949159936018368e+308];
const v30 = new Uint8ClampedArray(f0, v21, Uint8ClampedArray);
v30[319];
let v32 = 9;
v32++;
const v35 = new BigInt64Array(v32, v32, v22);
const v36 = v35?.constructor;
try { new v36(v23, v21, 4096); } catch (e) {}
let v38 = 9;
v38--;
const t38 = BigInt64Array.name;
new t38(v38);
function f44(a45, a46, a47, a48) {
    a45--;
    a46 >>> a46;
    a48 != a48;
    ~a47;
    a48 * a48;
    arguments[4] = arguments;
    return a48;
}
const v57 = new Int32Array(56885);
f44(...v57, 127);
