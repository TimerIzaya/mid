[-34400,885307236,250554707,7,5,536870889,11,1048084982,-4294967296];
[65537,536870912,11,3,5,-1];
[8,2147483649];
let v5 = "0";
const v8 = Math.log2(++v5);
function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
}
const v13 = new F9();
try { Array(9223372036854775807); } catch (e) {}
v8.replace(19793, v13);
Array(19793);
const v20 = new BigUint64Array(257);
v20[15];
new Uint16Array(8);
let v27 = "max";
class C29 {
    set a(a31) {
        v27 = this;
        const o32 = {
        };
        o32.g = v27;
        const o33 = {
        };
        o33.g = v27;
        const o34 = {
        };
        o34.g = v27;
        const o35 = {
        };
        o35.g = v27;
    }
}
const v36 = new C29();
function F37(a39, a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
}
new F37(65536, "NapmW", v36);
const v44 = BigUint64Array?.call;
try { new v44(BigUint64Array); } catch (e) {}
("vZa2U").normalize("NFKC");
class C50 {
    constructor(a52) {
        this.reduceRight = Int16Array;
        const v53 = this.constructor;
        try { new v53(a52, v53); } catch (e) {}
    }
}
new BigUint64Array(256);
9007199254740990 === 9007199254740990;
("undefined").localeCompare("undefined", "toString");
class C62 {
    e;
}
new C62();
757978515 / 757978515;
for (let v66 = 0; v66 < 50; v66++) {
}
const t58 = "toString";
t58.c = "toString";
class C68 {
    static #c;
    constructor(a70, a71, a72) {
        for (let v73 = 0; v73 < 25; v73++) {
            ("buffer")["search"](..."buffer", ..."search", ..."search", 255, ..."search");
            const o80 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o80);
        }
    }
}
const v84 = ("minor").valueOf(835, 257, v20);
const o86 = {
};
gc(o86);
Math.tan();
v84[4] = v84;
v84.split(v84);
