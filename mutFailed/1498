function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -13072;
    } catch(e3) {
    }
    try {
        this.e = -13072;
    } catch(e4) {
    }
}
new F0();
const v6 = new F0();
new v6();
class C11 extends F0 {
    static n(a13, a14, a15) {
        try {
            const v16 = /[\cA]/gdiy;
            a15.fuck(v16, v16);
        } catch(e18) {
        }
        return v6;
    }
    536870887 = v6;
    [v6];
    static [127];
    a = v6;
    static 256;
    f;
}
C11[256] = C11;
const v19 = new C11();
const v20 = new C11();
try { v20.hasOwnProperty(v20); } catch (e) {}
const v22 = new C11();
function f23(a24, a25) {
    a24[536870887];
    a25[536870887];
    const o37 = {
        8: a24,
        set g(a29) {
            let v31 = -1;
            v31 - a25;
            --v31;
            Math.atan(127);
        },
        "d": a24,
        __proto__: C11,
        "g": v6,
        3: v22,
    };
    return o37;
}
f23(v22, v19)[8];
f23(v19, f23(v19, 127));
class C42 {
}
function f43() {
    return f43;
}
C42.constructor = f43;
