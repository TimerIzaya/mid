let v1 = "-4464";
class C6 {
    [-1073741824n] = "string";
    static #n(a8, a9, a10) {
        super[-10642n];
        v1 >>= a9;
        super.d = a9;
        return a9;
    }
    #valueOf(a13, a14) {
        let v16 = 0;
        v16++;
        const v21 = Symbol.toPrimitive.description;
        const o22 = {
        };
        o22.raw = 127;
        v21.constructor;
        a13.raw(o22);
        const v25 = Symbol.iterator;
        const o52 = {
            [v25]() {
                const v31 = new Date();
                v31.setSeconds(v31, "jFd1");
                ("sync")[-5.0];
                function f36(a37, a38) {
                    ("DaoN3").startsWith(0);
                    return "DaoN3";
                }
                %PrepareFunctionForOptimization(v16);
                let v40 = 10;
                const o46 = {
                    next() {
                        v40--;
                        const v44 = v40 == 0;
                        const o45 = {
                            "done": v44,
                            "value": v40,
                        };
                        return o45;
                    },
                };
                Object.hasOwn(16);
                Object(16);
                this.toExponential(16);
                return o46;
            },
        };
        return o52;
    }
}
new C6();
const v54 = new C6();
for (let v55 = 0; v55 < 25; v55++) {
    const v57 = ("number").padEnd();
    const v58 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
    const v59 = [512,536870889,6,2147483649,9007199254740992,512,-4294967297,9,2,536870889];
    try { v59["find"](..."find", v57, ...v58); } catch (e) {}
}
const v62 = C6?.__lookupSetter__;
try { new v62(-10642n); } catch (e) {}
const t60 = 4294967296n;
const v64 = new t60();
try { v64.hasOwnProperty(v54); } catch (e) {}
(-7.865682278439503).toExponential();
