class C3 {
    constructor(a5) {
        ("f").localeCompare(a5, "f");
    }
    /*
    constructor(a8, a9) {
        a9.__proto__;
    }
    */
    /*
    constructor(a12, a13) {
        super.b = "f";
        super["f"] = this;
        const t13 = "f";
        t13[2] = this;
        function f14() {
            new ArrayBuffer(ArrayBuffer, ArrayBuffer);
            return f14;
        }
        %OptimizeFunctionOnNextCall(f14);
        new Uint32Array(5);
        new Int8Array(347);
        new Float32Array(128);
        const v27 = new Int8Array();
        v27.buffer.slice();
        class C31 {
            static #m(a33) {
            }
            constructor(a35) {
                new Float32Array();
                const v39 = new Uint16Array();
                new Float32Array(v39, -4294967296, a35);
            }
        }
        const v41 = new C31(C31);
        const v42 = new C31(-4294967296);
        class C45 extends ([v42]).constructor {
        }
        const v46 = new C45();
        Object.defineProperty(v46, 65537, { value: v41 });
    }
    */
}
const v47 = new C3(C3, 536870887);
const v48 = new C3(0.40040275536036574, v47);
const v49 = new C3(C3, C3);
function F50(a52, a53, a54, a55) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = v49;
    } catch(e56) {
    }
    try {
        this.h = a52;
        function f57() {
            const t55 = ("match").__proto__;
            t55[1478] = f57;
            return "match";
        }
    } catch(e60) {
    }
}
const v61 = new F50(v47, v49, v48, v49);
new F50("f", v61, C3, v61);
new F50(v47, "f", v48, v49);
class C65 extends Array {
}
const v66 = new C65();
v66.push(Array);
