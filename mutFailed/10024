const v2 = new Uint8Array(8);
let v4 = Uint32Array;
const v5 = new v4(10);
let v6 = 3912;
let v8 = new Float64Array(v6);
4294967296 | 4294967296;
try {
    v5.f = 145253519;
} catch(e13) {
    ({"buffer":v6,"byteLength":v4,"byteOffset":v4,...v8} = v8);
    e13.__proto__;
    function f15() {
        return e13;
    }
}
const o20 = {
    "execution": "async",
    3: v6,
    "c": v5,
    "g": 145253519,
    "a": v8,
    [-1215241770n]: 4294967296,
};
d = v6;
try {
    new Float64Array("async", 1965301813);
} catch(e23) {
}
const v24 = gc(o20);
function f25(a26) {
    const o29 = {
        "maxByteLength": 10000,
    };
    const v31 = new ArrayBuffer(3471, o29);
    const v33 = new Uint8Array(v31);
    v33[8] = 2.2250738585072014e-308;
    return v8;
}
v24.constructor = f25;
function f35() {
    let v37 = ("Vre").codePointAt(145253519);
    v37 ^ v37--;
    return f35;
}
v24.finally();
v24.then();
v2[Symbol.hasInstance];
const v45 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
v45.toString = Symbol;
v45 >>> v5;
