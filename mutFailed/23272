function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    a5 >> a5;
    try {
        this.match = -4294967297;
    } catch(e7) {
    }
    try {
        this.f = a5;
    } catch(e8) {
    }
    try {
        this.b = 1709622339;
    } catch(e9) {
    }
}
try { new F3(F3); } catch (e) {}
const v11 = new F3(4294967297);
const v12 = new F3(1709622339);
const v13 = new F3(1709622339);
const v14 = v13?.constructor;
try { new v14(v12); } catch (e) {}
const v16 = [-4294967297,v11,F3,v12,v13];
v16[1] = v16;
const v17 = [1709622339,v11];
const v19 = ([v13,-4294967297,v17,v13,1709622339])?.f;
try { new v19(v16, v14); } catch (e) {}
try { Uint32Array(-4294967297, -4294967297, -4294967297); } catch (e) {}
new Uint32Array(59330);
new BigUint64Array(1);
new BigInt64Array(28399);
const v32 = new ReferenceError();
try { v32.setFullYear(v17, v17, ReferenceError); } catch (e) {}
const v35 = new Set();
v35.add(v32);
let [v37,,...v38] = v35;
try { v37.setTime(Uint32Array); } catch (e) {}
const v40 = v38?.findLast;
try { new v40(ReferenceError); } catch (e) {}
v37.toDateString(Set, Set, v37);
