let v2 = "EPSILON";
function f3() {
    return v2;
}
class C4 extends f3 {
    static #b;
    constructor(a6) {
        super();
        ("deleteProperty").replace("deleteProperty");
        const t8 = "symbol";
        delete t8[1];
        class C11 extends "grow" {
        }
        let v12;
        try { v12 = ("1073741824").trimLeft(); } catch (e) {}
        let v13;
        try { v13 = v12.of("grow", a6, v12, v2, this); } catch (e) {}
        try { v13("1073741824", v13, v12, this); } catch (e) {}
        v2 = a6;
        const v18 = new Uint8ClampedArray(995);
        Reflect.apply(v13, v18, [9,127,9]);
    }
    h;
    static ["1073741824"] = "1073741824";
}
new C4("grow");
new C4("1073741824");
Array(1102693041);
Math.cbrt(1073741824);
new C4(v2);
new Map();
for (let v42 = 0; v42 < 10; v42++) {
    const t32 = "-4294967296";
    t32[Symbol.match] = 5.0;
}
