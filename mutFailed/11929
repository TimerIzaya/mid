let v1 = 9007199254740992n;
class C3 {
    static #m(a5, a6) {
        /B\u0060Q5s/gvd;
        /VVxyz{1,}?/vdi;
        this.b ^= 1129866925n;
        let v12;
        try { v12 = new this(); } catch (e) {}
        Object.defineProperty(this, v12, { enumerable: true, value: a6 });
        super.g;
        super[1n];
        return 1129866925n;
    }
    b;
    constructor(a16, a17) {
        const v18 = this[536870887];
        try {
            super.keys(v18);
        } catch(e20) {
        }
        new Float64Array(5);
        new Uint16Array(3);
        new Float32Array(12);
    }
}
const v30 = new C3(1129866925n, 1129866925n);
const v31 = new C3(v30, 1129866925n);
const v32 = new C3(1n, v1);
class C33 {
    p(a35, a36, a37, a38) {
        delete a35[C3];
        new Int8Array(3567);
        new Uint8ClampedArray(166);
        this.c >>= C33;
        try { this.getPrototypeOf(a38, this); } catch (e) {}
        new Uint32Array(1728);
        new Float64Array(0);
        new Uint8Array(127);
        new Int32Array(16);
        return 1n;
    }
    static g;
    #c = v31;
}
let v59 = new C33();
v1 = 1129866925n;
v32 ** v32;
try {
    for (let v62 = 0; v62 < 5; v62++) {
        for (let [i71, i72] = (() => {
                const v65 = eval(v62);
                function f66() {
                    for (let v67 = 0; v67 < 5; v67++) {
                        [-Infinity,1.7976931348623157e+308,1.0,1.7976931348623157e+308,-1.0,Infinity];
                    }
                    return v65;
                }
                f66();
                %OptimizeFunctionOnNextCall(f66);
                return [0, 10];
            })();
            i71 < i72;
            i72--) {
        }
    }
    v32.fuck(C33, v59, true, v30);
} catch(e80) {
}
new C33();
new C33();
new Uint8ClampedArray(3);
const v88 = new Float32Array(128);
const o89 = {
    "e": v32,
};
try {
    o89.fuck(C33, 2147483647n);
} catch(e92) {
}
new Int16Array(512);
const o106 = {
    [v88](a99, a100, a101) {
    },
    set b(a103) {
    },
    set b(a105) {
    },
};
function F107() {
    if (!new.target) { throw 'must be called with new'; }
    const v109 = this?.constructor;
    try { new v109(); } catch (e) {}
}
const v111 = new F107();
const v112 = new F107();
function f113(a114, a115) {
    const o121 = {
        "maxByteLength": 536870887,
        next() {
            v59--;
        },
        "b": v112,
        n(a119, a120) {
            return a114;
        },
        "a": v111,
    };
    return a114;
}
1 <= 1;
const v125 = new o89(536870887);
try {
    v111.d = 1n;
} catch(e126) {
}
const v129 = new Uint32Array(Uint32Array);
const o130 = {
};
new Proxy(v129, o130);
%PrepareFunctionForOptimization(f113);
f113();
f113();
v125.n();
%OptimizeFunctionOnNextCall(f113);
f113(Proxy, o106);
