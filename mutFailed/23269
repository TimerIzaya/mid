class C3 {
    static #n(a5) {
        new Map();
        return 9;
    }
    constructor(a12, a13) {
        a13.__proto__;
        try { a13.fill(-158625.58723137353, -41701); } catch (e) {}
    }
    d;
    static 1323;
}
let v16 = new C3(1000000000000.0, -158625.58723137353);
const v17 = new C3(v16, 1000000000000.0);
let v18 = new C3(1000000000000.0, -158625.58723137353);
try {
    v18.valueOf = -158625.58723137353;
} catch(e23) {
}
const v25 = [-0.0,1.0039063959729582e+308,4.0,0.5471886289603923,3.0];
function f26(a27, a28) {
    return v18;
}
v25[Symbol.toPrimitive] = f26;
let v34 = [2.771648304511503,-1000000000000.0,-2.2250738585072014e-308,-1.3796286467025222e+308,0.7179506379021368,502.85516142214874,-0.0,-3.0];
const v35 = [-283.619538902313,-2.2250738585072014e-308,1000000.0,1.2467572663433124e+308,1e-15,-1.0,5.0,-2.857828083859295e+307,-1000000000000.0];
v35.e = v35;
v16.e = 60545;
({"e":v18,"length":v16,...v34} = v35);
+v25;
function F41(a43, a44, a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "g", { configurable: true, enumerable: true, value: -2147483648 });
    try {
        this.d = v17;
    } catch(e47) {
    }
    try {
        this.g = a46;
    } catch(e48) {
    }
}
new F41(1000000000000.0, 1000000000000.0, 1000000000000.0, 0.2661425113496656);
new F41(-158625.58723137353, 1000000000000.0, 1000000000000.0, 4.0);
new F41(1000000000000.0, 1000000000000.0, 4.0, 4.0);
const v53 = new BigUint64Array();
v53.toLocaleLowerCase = v18;
function F54(a56, a57) {
    if (!new.target) { throw 'must be called with new'; }
    function f58() {
        try { v53.toLocaleLowerCase(this, "NFKD", "NFKD", BigUint64Array); } catch (e) {}
        try { ("NFKD").localeCompare(this); } catch (e) {}
        return a56;
    }
    Object.defineProperty(this, Symbol.toPrimitive, { writable: true, value: f58 });
}
const v64 = new F54();
class C65 {
    static [v64];
}
