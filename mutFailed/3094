class C3 {
    static b;
    static #a;
    static c;
    static set f(a5) {
        let v7;
        try { v7 = a5["sort"]("sort"); } catch (e) {}
        function F8() {
            if (!new.target) { throw 'must be called with new'; }
        }
        const t10 = [-4294967296];
        t10.length = 257;
        try {
            v7.g = v7;
        } catch(e14) {
        }
    }
    ["p"] = "p";
    [-1] = -1;
}
try { new C3(); } catch (e) {}
new C3();
new C3();
new C3();
try { new Int32Array(Int32Array, -1, "p"); } catch (e) {}
new Int32Array(2917);
function f25(a26, a27) {
    const o28 = {
    };
    o28.b = o28;
    return o28;
}
const v29 = f25();
v29.b = v29;
with (v29) {
    const v32 = new BigInt64Array(2147483649);
    v32.g = v32;
}
try { ("boolean").valueOf(); } catch (e) {}
new BigUint64Array(2);
new BigUint64Array(-256);
10 % 10;
new Uint32Array(10);
class C45 {
    toString(a47, a48, a49, a50) {
        let [] = "symbol";
    }
}
%PrepareFunctionForOptimization(Date);
