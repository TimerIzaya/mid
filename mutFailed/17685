let v2 = new Uint8ClampedArray(46);
new Int32Array(9);
function f8(a9) {
    v2 ^= v2;
    [-65293,-4294967296,7,27916];
    [-20593,129,436343519,35420,536870887];
    [-1,-5,9,-10,8,-982184817,1,256,12,10];
    return Uint8ClampedArray;
}
Uint8Array.toString = f8;
const v13 = new Uint8Array(11);
v13.toString = f8;
class C14 {
    static g;
    [v13] = 46;
    static [Uint8Array] = Uint8ClampedArray;
    static #valueOf(a16, a17) {
        9 != a17;
        return a16;
    }
    5 = v2;
}
new C14();
new C14();
new C14();
class C28 {
    [10000] = 10000;
    static toString(a30) {
    }
}
0.8060433861090782 << 0.8060433861090782;
Math.round(0.8060433861090782);
new C28();
const v36 = new C28();
let v37 = new C28();
v36[1024] = 8n;
let v39;
try { v39 = v36.n(); } catch (e) {}
v37 = v39;
function f40() {
    return 10000;
}
const o41 = {
};
