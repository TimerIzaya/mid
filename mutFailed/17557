let v2 = "J";
function f3(a4, a5) {
    const o16 = {
        m(a7) {
            ("number")[1];
            return a4;
        },
        "c": a5,
        ...a5,
        [a4](a10) {
            try { new v2("-393802326"); } catch (e) {}
            const v12 = a5[268435440];
            const o13 = {
            };
            new Proxy(a10, o13);
            return v12;
        },
    };
    return o16;
}
f3(v2, v2);
f3("-393802326", "-393802326");
f3("-393802326", v2);
class C23 {
    toString(a25, a26, a27) {
        try {
            super.getFullYear(a25, C23, "-393802326", this);
        } catch(e29) {
        }
        return 1.728246297499967e+308;
    }
    static e;
    static [-2] = C23;
    static h;
    static b;
}
const v30 = new C23();
new C23();
new v30();
const v33 = [0.09625845130830724,-1e-15,0.40226168662621953];
const v34 = [-700765.6455759181,-1.0,-1e-15,238.56580086181475,-6.99438605118472e+307,0.8641795299038513,1000000000000.0,0.6448161003466354];
const v37 = v2[Symbol.match];
v2 = "-393802326";
const o40 = {
    "maxByteLength": 65536,
};
const v42 = new SharedArrayBuffer(1, o40);
new Int8Array(v42);
const v45 = [-1.7976931348623157e+308,585278.7631767453,-1.0,-2.0];
const v51 = v37();
function f52(a53, a54, a55, a56) {
    const o57 = {
        [-9007199254740991]: 512,
        [a55]: v34,
        "b": a53,
    };
}
f52(v51, f52, 4294967297, 2124);
f52(2124, v45, v33, v45);
new Uint16Array(52);
const v65 = new Uint32Array(2128);
for (let v66 = 0; v66 < 100; v66++) {
    f52(512, v65, v65, v51);
}
for (let v68 = 0; v68 < 32; v68++) {
    "p" != v68;
    new WeakMap();
    for (let v73 = 0; v73 < 32; v73++) {
        const t68 = "number";
        t68["p" + v73] = v73;
    }
}
