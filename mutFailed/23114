const v0 = [-72.8803633967749,-0.0,136.2695542224128,352.9360594477191,-0.7860888718492554,-751864.9538195325,-9.551012317285767];
[-4.0,-861079.3251176812,-342809.5729147638,0.8668859145889086,-20101.4011257597,2.0,2.0,-1.902999230960221];
const v2 = [-377819.9364785324,5.0,0.20599490143329346,863.387426915559,990457.7021909168,-925.1826540762054,-2.2250738585072014e-308];
-889.8921929507915 - -889.8921929507915;
v2 >> -65535n;
-1870307079n << -1870307079n;
const v15 = [-0.23549034038133065];
async function f16(a17, a18, a19, a20) {
    let v22 = new Uint8Array();
    v22 &= this;
    new Date(Uint32Array);
    const v27 = await v15;
    let v28;
    try { v28 = v27.push(a19); } catch (e) {}
    v28 << v28;
    return -1n;
}
let v30;
try { v30 = f16(v0, v0, f16, 512n); } catch (e) {}
f16.e = v15;
const v31 = v30();
let v32;
try { v32 = v31.then(f16, f16); } catch (e) {}
const v33 = v32?.constructor;
try { new v33(512n); } catch (e) {}
Float64Array.BYTES_PER_ELEMENT;
1073741824 * 1073741824;
new Float64Array(1073741824);
