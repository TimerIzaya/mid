new Uint8Array(99);
new Int32Array(3);
const v8 = new Int8Array(13);
class C9 extends Int8Array {
    a;
    static e;
    g = 99;
    get b() {
        const v11 = new Int32Array(this, 13, 99);
        Int8Array << v11;
        const v14 = C9.split;
        this[v14];
        return v14;
    }
    static [13] = v8;
}
new Int8Array();
new C9();
new Int8Array();
const v19 = /xyz{0,1}ja.a(?=b)/ui;
class C20 {
}
const v21 = new C20();
const v25 = new Set();
function F26(a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    a29.e = this;
    try {
        this.d = C9;
    } catch(e30) {
        for (let [v31,v32] of e30) {
            new a29(a28);
            new Int8Array(2);
            new Uint32Array(16);
            new Int16Array(0);
            try {
                v25.values();
            } catch(e44) {
            }
        }
    }
    try {
        this.h = a28;
    } catch(e45) {
    }
    var h = v19;
    try {
        a29.e = v21;
    } catch(e46) {
    }
    try {
        v25[C20];
        try {
            new C9(-268435456n, -268435456n);
        } catch(e50) {
        }
        this.b = C20;
    } catch(e51) {
    }
}
F26.e = C9;
new F26(F26, 2);
const v53 = new F26(v21, F26);
new F26(v53, null);
