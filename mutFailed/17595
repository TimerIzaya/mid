function f1() {
    return ("D")[0].substring();
}
f1 *= Symbol.toPrimitive;
for (let i9 = 0, i10 = 10; i9 < i10; i10--) {
}
function f20(a21, a22, a23, a24) {
    const o25 = {
    };
    function f26(a27) {
        class C28 {
            set g(a30) {
            }
        }
        return C28;
    }
    return o25;
}
const v31 = f20("string", "m");
function f33(a34, a35, a36, a37) {
    function f39() {
        -(-268435456 + -268435456);
    }
    f39();
    const v49 = new Uint8ClampedArray();
    function f50(a51, a52) {
        const o57 = {
            [a51]: Float64Array,
            4: 6,
            "b": a51,
            [v49](a54, a55, a56) {
            },
        };
        return o57;
    }
    f50(2);
    f50(2);
    const v60 = new Int8Array();
    v60.buffer;
    let v62 = +v60;
    v62 = a36;
    const v64 = [];
    Reflect.apply(("m").trimEnd, "m", v64);
    %OptimizeFunctionOnNextCall(f39);
    try { ("find").strike(); } catch (e) {}
    try {
    } catch(e69) {
    }
    const o70 = {
    };
    o70.g = -4294967297n;
    const o71 = {
    };
    o71.g = -4294967297n;
    o71.d = v31;
}
f33();
class C74 {
    #f;
    static e = 15;
    static [536870888] = 15;
    static p(a76, a77) {
        try {
            a76.#f ||= a76;
        } catch(e78) {
        }
        new BigUint64Array(257);
        new Float64Array(2903);
        new Int32Array(128);
        let v88;
        try { v88 = a77(a76); } catch (e) {}
        super.d = 15;
        class C89 {
        }
        async function f90(a91, a92, a93, a94) {
            (await C89).call();
            return f90;
        }
        v88 **= this;
        super[0.31905210980983156] = a76;
        return 15;
    }
    [0.31905210980983156];
    static [0.31905210980983156] = 536870888;
}
const v97 = new C74();
new C74();
new C74();
function f100() {
    return v97;
}
[0.34891951525258924,-2.220446049250313e-16,-635.0040074908345,2.220446049250313e-16,1e-15];
[-995.7590683295341,1000.0,Infinity,-2.0,-3.3065257948728935e+307,-4.0,8.782236612146725];
[433.77790293132625,-5.857689329359054];
const v106 = new Float32Array(Float32Array);
for (let v107 = 0; v107 < 25; v107++) {
    function f108(a109, a110, a111, a112) {
        a109[1];
        a110--;
        a109[0] = a109;
        a110 <= a110;
        arguments[1] = arguments;
        const v117 = arguments?.__lookupGetter__;
        try { v117.constructor(); } catch (e) {}
        let v119;
        try { v119 = v117(v117, f108, a110, arguments); } catch (e) {}
        return v119;
    }
    for (let v120 = 0; v120 < 10; v120++) {
        f108(v106);
    }
}
const v126 = (2136873598).constructor;
[12,12];
const o131 = {
    "execution": "sync",
};
gc(o131);
v126.parseFloat(f33);
function f135(a136) {
    const o145 = {
        __proto__: 2,
        213: a136,
        ...a136,
        "g": 2,
        valueOf() {
            try { this.b(); } catch (e) {}
            [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
        },
        set b(a141) {
        },
        p(a143, a144) {
            return 2;
        },
    };
    return o145;
}
f135();
%OptimizeFunctionOnNextCall(f135);
const v147 = new BigUint64Array();
const o148 = {
    ...v147,
};
const o149 = {
};
function f151() {
    class C152 {
        constructor(a154) {
            const v155 = this.constructor;
            try { new v155(a154, f151); } catch (e) {}
            new Uint16Array();
        }
    }
    new C152();
    class C159 extends C152 {
    }
    function f160() {
        return f160;
    }
    new Int16Array(1371);
    new C159();
}
f151();
%OptimizeFunctionOnNextCall(f151);
