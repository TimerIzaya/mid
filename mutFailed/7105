function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 512;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
const v7 = [586.5914053740812,0.49327189199690624,0.5562216851170144,1.0,-1e-15];
const v8 = [0.5056701084838725,-61629.798017403926,NaN,864.4381894698445,2.220446049250313e-16,783231.8077183717];
const v9 = [-8.064798097434777e+307,-1.4113442924673039e+308,191988.25840935647,-989.2968278690313,-2.220446049250313e-16,-119.52230380056437,1000000000000.0,-1000.0,-5.0,1000.0];
let v11;
try { v11 = v9.shift(); } catch (e) {}
const v12 = [-237934.39707989374,4.0,879.1409892104596,57220.39807169605,4.0,-Infinity];
const v13 = [0.3953787408134074,1000000.0,135621.4971586708];
[-2.6579466627589188,2.220446049250313e-16,7.450632363174615e+307,4.0,-2.220446049250313e-16];
const o18 = {
    "execution": "sync",
    "type": "minor",
};
let v19 = v11(o18);
const v21 = new BigInt64Array(512);
for (const v23 of v11) {
    v23?.[86];
    "sync" && v4;
}
v11 -= o18;
const v27 = new BigUint64Array(16);
new Float32Array(4096);
function F31(a33, a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    a36 ||= a33;
    v6[2147483649] -= 4096;
    const v38 = Symbol.iterator;
    const o47 = {
        [v38]() {
            let v40 = 10;
            const o46 = {
                next() {
                    v40--;
                    const v44 = v40 == 0;
                    const o45 = {
                        "done": v44,
                        "value": v40,
                    };
                    return o45;
                },
            };
            return o46;
        },
    };
    try {
        a34.a = v7;
    } catch(e48) {
    }
    try {
        v27[16] = v8;
        [v19] = v9;
        Math.tanh(v7);
        129 ** v7;
        129 >> 129;
        this.b = v21;
    } catch(e55) {
    }
}
new F31(v12, 4096, v8, v5);
const v57 = new F31(v8, 512, v9, v4);
new F31(v7, 16, v9, v6);
try {
    v13.__proto__ = v6;
} catch(e60) {
}
try { v57.o(16, v7); } catch (e) {}
try {
const t0 = 1000000000.0;
t0(2.220446049250313e-16, Uint8ClampedArray, ...1000000000.0, -82.86062314585524);
} catch (e) {}
