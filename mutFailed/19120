const v0 = [1000000000.0,4.0];
function f1() {
    Math.asin(Math);
    return f1;
}
f1();
let v5 = [-6.312766873902183e+307,1000000000000.0,Infinity,1e-15,2.0,4.0,2.0,481.3077753288894];
const v6 = [9.689877809232112,3.0,-493.25966053478277,-7.579247044963678,0.5128798434252803,428.7189050238462];
const v7 = [821296522,-65535,-1,7918,45857,16,8,256,-1024];
const v8 = [3.0,0.929902106004344,5.515135456680444,0.08505138098829423,-731085.5615284917];
const v9 = [-1.7976931348623157e+308,4.0];
const v10 = [-694.020243680977,-1.7976931348623157e+308];
[[v6,v9,v7]];
const v15 = -Infinity;
Math.atan2(v15, 536870887);
function f19(a20, a21, a22, a23) {
    BigInt64Array + a20;
    const v26 = new BigInt64Array(4046, 136);
    let o27 = {
    };
    [,...o27] = v26;
}
const v28 = [v8,v5,v10];
const v29 = [1073741825];
const v30 = [65536,536870889,536870912,-14,4,129,-9223372036854775807];
class C31 {
    [v7] = v6;
    268435441;
    constructor(a33, a34) {
        v6 > a34;
        try {
            a33.d = a33;
        } catch(e36) {
        }
        v0.length;
    }
    static get h() {
        const v41 = 10 ^ 10;
        const v44 = ([2.0,-1e-15,1.7976931348623157e+308]).flat(1351);
        Math.exp(v15);
        const v47 = v41 && 10;
        const v48 = v41 / 10;
        const v49 = /a\sc?/gdi;
        const v50 = /i(?<a>(?<b>(?<c>(?<d>.).).).)/gvisy;
        const t44 = [[]];
        const v55 = delete t44[0];
        const v56 = ("1")[0];
        let v57;
        try { v57 = v56.sup(); } catch (e) {}
        const v58 = v56.substring(v41);
        try { v58.trimEnd(); } catch (e) {}
        try { v58.fontsize(v49); } catch (e) {}
        function f62() {
            function f63(a64) {
                return 9569;
            }
            class C65 extends f63 {
            }
            try { C65(v29); } catch (e) {}
            C65.name = C65;
            let v68 = 268435440;
            v68--;
            try { ("cJ").charAt(f62); } catch (e) {}
            let v72;
            try { v72 = ("cJ").padStart(); } catch (e) {}
            try { v72.codePointAt(); } catch (e) {}
            const o82 = {
                "POSITIVE_INFINITY": v68,
                "a": 4.0,
                [v56](a75, a76, a77) {
                    Object.defineProperty(v50, v55, { enumerable: true, value: -1707622606 });
                    return 4.0;
                },
                "b": v58,
                __proto__: "cJ",
                "f": "cJ",
                ..."cJ",
                8: f62,
                "h": "cJ",
                valueOf(a79) {
                    const o80 = {
                        __proto__: this,
                        2261555780: "cJ",
                    };
                    super.toStringTag;
                    return this;
                },
                "c": "cJ",
            };
        }
        const v83 = f62(v50, v57, Math);
        const v84 = f62();
        const v85 = f62();
        const v86 = [v85,v83,v84,v84];
        try { v86.shift(); } catch (e) {}
        ([v85,v44,v44,v86])?.reduce;
        ~v48;
        return v47;
    }
}
const v91 = new C31(v0, v6);
const v92 = new C31(v7, v29);
v29.b = -128;
function F94() {
    if (!new.target) { throw 'must be called with new'; }
}
function f96() {
    return f96;
}
new C31(v92, v30);
class C98 extends C31 {
    o(a100, a101, a102, a103) {
        let v99 = this;
        let v104;
        try { v104 = a100(v91, v91, v7); } catch (e) {}
        try {
            try { v99["m"](v6, v104, v30); } catch (e) {}
        } catch(e107) {
            [v99,e107] = a102;
        } finally {
            try {
                v92.e = a102;
            } catch(e108) {
            }
        }
        return a103;
    }
}
const v109 = new C98();
const v110 = new C98();
({"c":v5,} = v110);
C31[v110] = v28;
try { v28.some(v5, v109); } catch (e) {}
let v113;
try { v113 = v109.o(v28, v91, Float32Array, v91); } catch (e) {}
new C98();
new Uint8ClampedArray(12);
const v120 = new Int16Array(-4294967296);
v110 || v120;
Math.size;
v113 |= 12;
new Float64Array(2);
try {
    BigInt(132.432626643787);
} catch(e132) {
}
