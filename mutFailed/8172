function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 128;
    } catch(e3) {
    }
    try {
        this.c = 128;
    } catch(e4) {
    }
    try {
        this.f = 128;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
const v10 = new WeakSet();
for (const v11 in v10) {
    F0 = WeakSet;
    v8[v7] = v6;
}
v8[v7] **= WeakSet;
[-1717367034,-45360,9007199254740992,257,536870889,1,3156];
const v13 = [1,-2147483648,6,-128,512,65537];
const v14 = [10,4294967295,-15956,-13];
class C18 extends WeakSet {
    #h = 85.36719577258077;
    constructor(a20, a21) {
        super(a21);
        function F22(a24, a25) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = F0;
            } catch(e26) {
            }
        }
        new F22(v8, a21);
        new F22(v10, v13);
        new F22(v7, v13);
    }
    1024;
}
const v30 = new C18(v6, v13);
new C18(v30, v14);
new C18(v8, v14);
const o34 = {
    get h() {
    },
};
function F35(a37, a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    const v40 = this.constructor;
    try { new v40(); } catch (e) {}
    o34.h = o34;
    try {
        this << o34;
        [-0.0,0.35331453774891175,0.0,171.67492280642023,0.015915737133018082,-390268.7701156768,-1000000000000.0,-0.0,5.0,-2.220446049250313e-16];
        const v44 = [607.0076449847468,-818.8860494127688];
        v44[0];
        v44[2];
        v44[3];
    } catch(e48) {
    }
}
new F35();
new F35();
