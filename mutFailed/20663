const v0 = [-1.3011579820831616e+308,-4.079433531620729,-2.2250738585072014e-308,-907111.8092324293];
const v1 = [538.9154367949648,5.0,1.0,0.07576801341042816,1000.0];
const v2 = [-3.0];
const v3 = [866171.8443792392,-2.172195954496143,-1000000.0,1.0,240565.29114212887,2.0,-5.0];
const v4 = [-1.0,-5.0,1e-15,-3.0,1000.0,0.7367373197312463,0.0];
const v5 = [1000.0,-692.1558611851217];
function f6() {
    new Int8Array(10);
    new BigUint64Array(129);
    const v15 = new Uint16Array(1187);
    return v15;
}
v5[Symbol.toPrimitive] = f6;
class C18 {
    257 = v5;
    static get e() {
        for (const v20 of v3) {
            super.b = v1;
            typeof v20 === "object";
        }
        return v3;
    }
    toString(a25, a26) {
        function f27(a28, a29) {
            return -172798652;
            return f6;
        }
        this[Symbol.toPrimitive] = f27;
        delete v4[a25];
        return super[delete this[a25]];
    }
}
const v36 = new C18();
const v37 = new C18();
const v38 = new C18();
function f39(a40, a41) {
    const v43 = new Float32Array();
    return v43;
}
v38.toString = f39;
const v44 = [v38,v38,v38,v2];
const v45 = [v36,v36,v44,v36];
const v46 = [v45,v37,v45,v1,v36];
function f47(a48, a49, a50, a51) {
    a51[Symbol.toPrimitive] = f47;
    const o58 = {
        ...v36,
        ...v44,
        [C18](a55, a56) {
            super[v0] = a51;
            a56 = a49;
            a56[8] = this;
            v45 >>> a49;
            return a56;
        },
        "d": a51,
        __proto__: a50,
        [a50]: a51,
        "c": a48,
        "h": v5,
        "a": v46,
    };
    return o58;
}
f47(v0, v46, v5, v37);
f47(v2, f47(v2, v3, v37, v0), v44, v2);
function f63() {
    return f63;
}
Object.defineProperty(f63, "valueOf", { configurable: true, enumerable: true, value: f47 });
function f64() {
    const v65 = Array();
    v65[2358] = f63;
    for (const v66 of v65) {
        function f67() {
            return Array;
        }
        function f68(a69) {
            v0["includes"](v65, v66);
        }
        Object.defineProperty(v66, "valueOf", { configurable: true, enumerable: true, get: f67, set: f68 });
        v66 - v66;
    }
    return v65;
}
f64();
f64();
