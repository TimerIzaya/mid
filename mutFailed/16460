class C3 {
    constructor(a5) {
        this[7] = this;
        a5?.[99];
        this[7];
    }
    ["MIN_VALUE"] = "MIN_VALUE";
    static #p(a9, a10) {
        a10 = a9;
        try {
            super.o(a9, "MIN_VALUE", a10, this, -18342);
        } catch(e12) {
        }
        return this;
    }
    [1.7976931348623157e+308] = 1.7976931348623157e+308;
    c;
    572 = C3;
    [C3] = "MIN_VALUE";
    #e;
    #d;
    static d = C3;
}
const v13 = new C3(1.7976931348623157e+308);
v13[2147483647] = 1.7976931348623157e+308;
let v14 = new C3(C3);
const v15 = new C3(C3);
class C19 extends C3 {
    #p(a21, a22, a23) {
        try {
            super.o(a22, this, C3, a23, a22);
        } catch(e25) {
        }
        try { a23(this, a22, 0.8247738381744121); } catch (e) {}
        for (let v27 = 0; v27 < 32; v27++) {
            v15["p" + v27] = v27;
        }
        return a22;
    }
    static 151;
    static #a = C3;
    constructor(a31, a32, a33, a34) {
        a31[2147483647] = 1.7976931348623157e+308;
        super(-5.970620995673848);
        try {
            ("MIN_VALUE").length;
            super[a31];
            ++a32;
            Math.max(v14);
            a32 | v14;
            Math.acos(a33);
            new C3(a33);
        } catch(e44) {
        }
        v14 = v13;
        a31[2147483647] <<= -16388.409306413727;
    }
}
const v45 = new C19(v14, 0.8247738381744121, 1.7976931348623157e+308, v13);
const v46 = new C19(v14, 0.8247738381744121, -16388.409306413727, v13);
new C19(v45, -5.970620995673848, -5.970620995673848, v46);
class C51 {
}
const v55 = new BigUint64Array(10);
for (const v57 in v55) {
    new Float64Array(2147483647);
}
