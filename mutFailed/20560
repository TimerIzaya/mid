function f0() {
    let v3 = 0.0;
    v3--;
    v3 + v3;
    const o21 = {
        "c": 127,
        p(a7, a8) {
            a7.e = a7;
            a8.b = a8;
            let v9;
            try { v9 = new a8(127); } catch (e) {}
            const v10 = delete v9?.e;
            !v10;
            try {
                v10.valueOf = v9;
            } catch(e12) {
                v9.constructor;
                function F14(a16, a17) {
                    if (!new.target) { throw 'must be called with new'; }
                }
                const v18 = new F14();
                class C20 extends v18.constructor {
                }
            }
            return v10;
        },
        "b": 127,
        "h": 0.3132177720366115,
        __proto__: 0.3132177720366115,
        "e": v3,
        "f": 0.3132177720366115,
    };
    o21.e = o21;
    return o21;
}
const v22 = f0();
const v23 = f0();
const v24 = f0();
v24.h = v24;
const v25 = [127,-9007199254740990,1073741824,-657854854];
const v26 = [-4294967297,9007199254740992,-32740];
const v27 = [2119928670,-536870912,127,93328846,64,5,-9007199254740992];
let v28;
try { v28 = v27.slice(v26, f0); } catch (e) {}
v27.g = v27;
1000000.0 >> 1000000.0;
1000000.0 ^ 1000000.0;
8.344041629896682e+307 - 8.344041629896682e+307;
function f35(a36, a37) {
    a37.f = a37;
    let v38;
    try { v38 = a37.p(a37, a37); } catch (e) {}
    v38 || v38;
    const o45 = {
        15: f0,
        90: a36,
        9: v25,
        m(a41, a42) {
            super[a42] = 1000000.0;
            try {
                f0();
            } catch(e44) {
            }
            return a36;
        },
        ...a37,
        "g": a37,
        512: v22,
        ...v26,
    };
    return o45;
}
const v46 = f35(v25, v22);
v46[1] = v46;
const v47 = f35(v27, v23);
v47.a = v47;
const v48 = f35(v25, v22);
const v49 = v48[1];
v49 >= v49;
v48[90];
class C52 {
    static valueOf(a54, a55, a56) {
        v23[256] &= 8.344041629896682e+307;
        let v58 = 6;
        Math.cos(v27);
        const v60 = Math.min(v27);
        ++v58;
        Math.sinh(v27);
        Math.expm1(++v58);
        return v60;
    }
    static #c;
    a = -1000000000000.0;
    static #f = 8.344041629896682e+307;
    static #e;
    static 1073741825;
    constructor(a66, a67) {
        try { this.constructor(a66, v26); } catch (e) {}
        let v69;
        try { v69 = this.toLocaleString(); } catch (e) {}
        v69[14] = v69;
        let v70;
        try { v70 = v69.trimStart(); } catch (e) {}
        try { v70.toUpperCase(); } catch (e) {}
        let v72;
        try { v72 = v69.search(this); } catch (e) {}
        v72 - v72;
        for (let v74 = 0; v74 < 25; v74++) {
            v74 << v74;
            for (let v76 = 0; v76 < 10; v76++) {
                const v77 = [601759695];
                try { v77.find(v76); } catch (e) {}
                const v79 = [1073741824,1073741823,1376142744,1073741825];
                let v80;
                try { v80 = v79.groupToMap(v74); } catch (e) {}
                try { ("find").repeat(v80); } catch (e) {}
                try { ("find").trimRight(); } catch (e) {}
                try { v79["find"](..."find", undefined, ...v77); } catch (e) {}
            }
            1159 <= 1159;
            const v89 = new Int8Array(1159);
            v89[278];
            try { v89.toSorted(v89); } catch (e) {}
            const v93 = Uint8ClampedArray.prototype;
            try { v93.findLastIndex(v28); } catch (e) {}
            const v95 = new Uint8ClampedArray();
            const v96 = v89[2];
            v96 / v96;
            v96 & v96;
            let v100;
            try { v100 = ("forEach").blink(); } catch (e) {}
            try { v100.italics(); } catch (e) {}
            try { v95["forEach"](v96); } catch (e) {}
        }
    }
    f = v48;
}
C52[1073741825] = C52;
C52[1073741825] = C52;
new C52();
const v104 = new C52();
v104.a;
const v106 = new C52();
v106.b = v106;
class C107 {
    constructor(a109) {
        let v110;
        try { v110 = this.toString(); } catch (e) {}
        try { v110.padStart(v28); } catch (e) {}
        try { v110.substr(v47, v47); } catch (e) {}
        for (let v113 = 0; v113 < 32; v113++) {
            v113 >>> v113;
            for (let v115 = 0; v115 < 5; v115++) {
                function f116() {
                    return f116;
                }
                const v118 = f116()?.constructor;
                try { new v118(C52); } catch (e) {}
            }
            gc.name;
            const o122 = {
            };
            o122.e = o122;
            o122.b = o122;
            class C123 {
            }
            C123.d = C123;
            -9524 % -9524;
            -9524 >> -9524;
            arguments[0] = arguments;
            Object.defineProperty(arguments, 4, { writable: true, enumerable: true, value: -9524 });
            gc(o122);
        }
    }
}
try { new C107(v26); } catch (e) {}
const v130 = C107.name;
try { v130.valueOf(); } catch (e) {}
try { v130.valueOf(); } catch (e) {}
new C107(C107);
const v134 = new C107(C107);
v134.d = v134;
const v135 = new C107();
const v136 = v135?.constructor;
try { new v136(C107); } catch (e) {}
const v138 = v135?.constructor;
let v139;
try { v139 = new v138(C107); } catch (e) {}
v139.length;
