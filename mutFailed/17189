function f3(a4) {
    a4 + a4;
    const o11 = {
        "c": a4,
        "d": a4,
        __proto__: a4,
        "b": -5285,
        m(a7) {
            for (let v8 = 0; v8 < 32; v8++) {
                this["p" + v8] = v8;
            }
            return this;
        },
    };
    return o11;
}
const v12 = f3(536870912);
try { v12.m(27071); } catch (e) {}
const v14 = v12.b;
v14 ^ v14;
f3(27071);
f3(27071);
const v18 = [1,-14,512,-5,1431,-2,51772,-13710,4294967295,931161787];
v18[6] = v18;
const v19 = [3];
[2,4,-1961419572];
const v22 = new Set();
try { v22.entries(); } catch (e) {}
class C24 {
}
function F25(a27, a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    const v31 = this?.constructor;
    try { new v31(a30, a30, Set, v14); } catch (e) {}
    this.f = C24;
}
F25.g = F25;
const v33 = new F25();
const v34 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
class C35 {
}
C35.prototype = C35;
try { new C35(); } catch (e) {}
-4294967297n >> -4294967297n;
const v39 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
try { v39.push(v39); } catch (e) {}
const v41 = [601759695];
try { v41.groupToMap(F25); } catch (e) {}
const v43 = [1073741824,1073741823,1376142744,1073741825];
522675525n / 522675525n;
function f46(a47, a48, a49, a50) {
    a47 != a47;
    a48 >> a48;
    a49 >>> a49;
    a50 + a50;
    const v55 = a49 - a49;
    v55 % v55;
    a50 + a50;
    function f58() {
        try {
            v34.forEach(a48);
        } catch(e62) {
            e62.c = e62;
        }
        const v63 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v65 = Symbol.toPrimitive;
        const o71 = {
            toString(a67, a68) {
                const v69 = a50 && a48;
                a67 *= v65;
                v69 <= v63;
            },
        };
        const v72 = o71?.__defineSetter__;
        try { new v72(v18, v19); } catch (e) {}
        -268435456 - -268435456;
        const o94 = {
            "c": -4294967297n,
            [522675525n](a77, a78) {
            },
            "c": v41,
            valueOf(a80, a81) {
                return this;
            },
            [-4294967297n](a83, a84, a85, a86) {
            },
            "maxByteLength": -4294967295,
            "arguments": v39,
            ...v33,
            "type": C35,
            ..."Vre",
            valueOf(a88, a89) {
                return this;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            toString(a91, a92, a93) {
                return a93;
            },
            5: -4294967295,
            6: -268435456,
        };
        try { o94.isPrototypeOf(f3); } catch (e) {}
        o94.arguments = o94;
    }
    try { new f58(); } catch (e) {}
    const v97 = f58.length;
    v97 / v97;
    f58();
    %OptimizeFunctionOnNextCall(f58);
    try { v43["find"]("find", a50); } catch (e) {}
}
for (let v102 = 0; v102 < 10; v102++) {
    f46(v102, v102, v102, v102);
}
%OptimizeFunctionOnNextCall(f46);
f46();
