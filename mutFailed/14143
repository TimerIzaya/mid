class C3 {
}
class C5 extends Array {
}
new C5();
class C7 {
    static [2] = 11;
    static p(a9) {
        const v10 = this[5];
        super[a9] = a9;
        this[2];
        return v10?.[536870888];
    }
    static h;
    static toString(a14) {
        this.h;
        const o18 = {
            "maxByteLength": 230,
        };
        const v20 = new ArrayBuffer(230, o18);
        const v22 = new Uint32Array(v20);
        return v22;
    }
}
new C7();
new C7();
const v25 = new C7();
v25.toString = Array;
class C26 extends C7 {
    #n(a28, a29, a30, a31) {
        const v34 = !2;
        const v36 = (5 << v34) / 2;
        v34 - 2;
        Math.sinh(v36);
        new Int8Array();
        const v43 = new Int16Array(1269);
        for (const v44 in v43) {
        }
        return a30;
    }
    [v25] = 2;
    static g = C7;
    #f;
    static #h = 1073741824;
}
new C26();
new C26();
new C26();
[-5.783430208936579,-2.2250738585072014e-308,-1.5528555948806052e+308,1000.0,0.0,1e-15];
[4.195143634750023e+307,-Infinity,1.0];
[697503.5375100039,1.0,963244.8709759174,1000.0,3.0,3.0];
function F51(a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
    function f56(a57, a58, a59, a60) {
        function f62() {
            for (let v63 = 0; v63 < 5; v63++) {
                arguments | v63;
                function f65() {
                    const v67 = ("D")[0];
                    return v67.concat(v67);
                }
            }
            return typeof 522675525n === "undefined";
        }
        f62();
        return a53;
    }
    for (let v73 = 0; v73 < 10; v73++) {
        f56(v73, v73, a54, v73);
    }
    %OptimizeFunctionOnNextCall(f56);
    f56();
}
new F51(F51, F51);
