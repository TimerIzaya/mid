function f0() {
    new Int32Array(257);
    const v5 = /[.ma\Sc]/vdimsy;
    function f7() {
        function f8(a9, a10) {
            const v11 = [-11,-9223372036854775807,-817733745,9007199254740991,16,12,-16238,536870912,-4294967297,65536];
            const v12 = /[^7Y[a-zA-Z0-9]?]/vdmy;
            function f13() {
                const v15 = isFinite(v11);
                try { v15.reduceRight(v12); } catch (e) {}
                return v11;
            }
            return v12;
        }
        return f8;
    }
    function f17(a18) {
        try { a18("hasInstance", a18, a18); } catch (e) {}
    }
    Object.defineProperty(Int16Array, "toString", { writable: true, configurable: true, get: f7, set: f17 });
    v5.exec(Int16Array);
    const o29 = {
        toString(a24) {
            this[Symbol.species] = f17;
            this[Symbol.species] = a24;
            return "hasInstance";
        },
        "g": 1.0251341256965691,
        __proto__: "hasInstance",
        9: "hasInstance",
        "c": "hasInstance",
        "f": v5,
    };
    return o29;
}
f0();
const v31 = f0();
Date.f = f0();
const o36 = {
    "type": "function",
};
const v37 = new Worker(Date, o36);
v37.getMessage();
[9,345333659,268435441,-4096,1273394880,-9007199254740992,-2147483649,4096,10];
try {
    Date.f = 10137;
} catch(e41) {
}
const v42 = [-65323,1,93184057,13];
const v43 = [268435440,2033808832,536870889];
class C47 extends f0 {
    constructor(a49, a50) {
        super();
        const v51 = delete v31?.c;
        try { this.toString(7, v51, a50, 1000); } catch (e) {}
        function f53() {
            return a50;
        }
    }
    e;
    static g = v42;
    /*
    constructor(a55, a56, a57) {
        super(v43);
    }
    */
    2;
    /*
    constructor(a59) {
        for (let v60 = 0; v60 < 32; v60++) {
            for (let v61 = 0; v61 < 5; v61++) {
                function f62() {
                    return f62;
                }
                f62();
            }
            const o65 = {
            };
            gc(o65);
        }
    }
    */
    115;
}
new C47(1000, 1000);
new C47(-48921, -48921);
new C47(7, -48921);
const v71 = new Float32Array(Float32Array, Float32Array, Float32Array);
function f73() {
    return 160;
}
Object.defineProperty(v71, "h", { configurable: true, enumerable: true, get: f73 });
async function f74(a75, a76, a77) {
    v71.h = v71;
    await 160;
    return f74;
}
f74(v71, v71, Float32Array);
