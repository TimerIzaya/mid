const v11 = [268435439,Infinity];
const v12 = [Infinity,-787495.9181790953,9.084772535000518];
function f13() {
    class C14 {
    }
    const v16 = new WeakMap();
    class C17 extends C14 {
        static 1 = v16;
        10000;
    }
    const v18 = new C17();
    return v18;
}
v12.toString = f13;
const v19 = [-33489,Infinity,v12,v12,-33489];
v19[Symbol.toPrimitive] = f13;
v19[v19] = v19;
try {
    v11.length = 2;
} catch(e23) {
}
3.0 ^ 4294967297;
const v31 = new Float64Array(59);
new Float64Array(Float64Array);
delete v31?.byteLength;
try {
    new Float64Array(65537);
} catch(e38) {
}
new Int8Array(9.084772535000518);
class C41 {
}
async function f46(a47, a48, a49, a50) {
    'use strict';
    v12.length;
    return await a48;
}
f46(4294967297, Infinity, 3.0, 63876);
class C58 extends WeakMap {
    static [36] = WeakMap;
}
new C58();
new C58();
new C58();
new C41([2.220446049250313e-16,-Infinity,NaN,-1e-15,-4.0,-2.2250738585072014e-308,-742.8087895557678,-4.0,Infinity,655658.0990783614]);
function F65(a67, a68) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e69) {
    }
    try {
        const t51 = Math.clz32();
        new t51();
    } catch(e72) {
    }
}
new F65();
new F65();
