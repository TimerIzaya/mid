const v2 = new BigInt64Array(127);
new Int16Array(56);
new Uint16Array(1);
class C9 {
    static #toString(a11, a12, a13) {
        [1073741824,-256,1793392668,64];
        const v15 = [-9007199254740992,4,16,4294967295,3,-1250904905,-40076,-48244];
        [6,536870888,2147483648,-16,-9,-256,6,128,732754755,-9669];
        try { v15.shift(); } catch (e) {}
        return this;
    }
    static c = Uint16Array;
    constructor(a19, a20, a21) {
        for (const v22 of a20) {
            const v23 = v22 | a20;
            Object.defineProperty(v22, 34, { enumerable: true, value: a21 });
            this[v23] |= a19;
            const o24 = {
            };
            try {
                o24.e = a20;
            } catch(e25) {
            }
            try {
                const o26 = {
                };
                o26.e = a20;
                o26.f = 1;
            } catch(e27) {
            }
            try {
                const o28 = {
                };
                o28.e = a20;
                o28.f = 1;
                o28.h = a21;
            } catch(e29) {
            }
            try {
                const o30 = {
                };
                o30.e = a20;
                o30.f = 1;
                o30.h = 56;
            } catch(e31) {
            }
        }
    }
}
const v32 = new C9(127, C9, C9);
const v33 = new C9(56, v2, v32);
new C9(127, v33, v32);
const v44 = [-2.14860426829137,-9.58586124400876,2.0,2.2250738585072014e-308,0.0,-3.0,Infinity,-317.1953498647964,2.0];
class C45 extends Int16Array {
    [v44];
}
