function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a5;
    } catch(e6) {
    }
    try {
        this.e = -14;
    } catch(e7) {
    }
    try {
        this.d = 5;
    } catch(e8) {
    }
}
const v9 = new F3(5);
const v10 = new F3(65535);
const v11 = new F3(-14);
function f12(a13, a14, a15, a16) {
    const o21 = {
        [F3]: F3,
        [a14]: -14,
        set d(a18) {
            for (const v19 in this) {
                super.g;
            }
            v10[65535] = this;
            super.g = a13;
        },
        ...a14,
    };
    return o21;
}
f12(v11, v11, f12(v9, v9, 5, v9), v11);
f12(v11, v9, 5, v11);
function F25() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = -128;
    } catch(e28) {
    }
    try {
        this.b = -128;
    } catch(e29) {
    }
}
const v30 = new F25();
new F25();
new F25();
const v35 = new Uint8ClampedArray(65535);
const v38 = new BigUint64Array(64);
function f40() {
    return v38;
}
let [v41,v42] = v35;
v30.__proto__;
/(?:a+)?/udiy;
/(Zx\P{gc=Decimal_Number})/gdim;
/foo|(bar|baz)|quux\1\2(a(?:\1(b\1\2))\2)\1/udms;
class C53 {
    o(a55, a56, a57, a58) {
        class C59 {
            static 44 = "EV";
        }
        new C59();
        new C59();
        new C59();
        return 0;
    }
    static #f = 0;
}
new C53();
new C53();
new C53();
for (let v66 = 0; v66 < 32; v66++) {
    "p" + v66;
}
const o70 = {
};
gc(o70);
new v41(0);
function f74() {
    return 64;
}
new F25();
const v82 = [16];
for (const v84 of v82) {
    Uint8ClampedArray <= v84;
}
delete v82[0];
