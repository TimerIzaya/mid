new BigInt64Array(3423);
new Uint8ClampedArray(8);
new BigInt64Array(2862);
/y1a\sc/guisy;
/i/udimy;
/xyz{1,}+/gudsy;
new Uint8Array(4058);
new BigUint64Array(129);
new Uint32Array(1923);
new Uint8Array(268435440);
function F24() {
    if (!new.target) { throw 'must be called with new'; }
}
class C26 {
    constructor(a28, a29, a30) {
        const v31 = a29.constructor;
        function f32() {
            return arguments[1073741823];
        }
        class C35 extends v31 {
            #f;
        }
        new C35();
    }
}
new C26(F24, C26);
const v40 = new Float64Array(257);
function f42() {
}
const v43 = [601759695];
const v44 = [1073741824,1073741823,1376142744,1073741825];
function f46(a47, a48, a49, a50) {
    a48 >>> a48;
    function f53() {
        return 522675525n;
    }
    f42();
    try { new Int8Array(v40, v40, 3609); } catch (e) {}
    const v57 = new Int8Array();
    function f60(a61, a62) {
        const o68 = {
            "g": 1073741824,
            get d() {
                super[a61];
                return this;
            },
            "f": 3,
            ...a61,
            "getOwnPropertyDescriptor": f53,
            p(a66, a67) {
                return f53;
            },
            1: 257,
            10: 1073741824,
        };
        return o68;
    }
    f60(f60(f60))[10];
    const v72 = v57.buffer;
    Int8Array.prototype = Int8Array;
    const v75 = new Int8Array();
    try { v75.set(4058); } catch (e) {}
    let v77 = 1000000000000.0;
    -(v77--);
    v72.slice(2147483648);
    const t63 = [];
    t63.length += 1.0;
    class C84 {
        ["resolve"] = "resolve";
    }
    %OptimizeFunctionOnNextCall(f53);
    ("6Ct").normalize();
    class C88 {
    }
    Symbol.search = Symbol;
    Date.toString = Symbol;
    class C91 extends Date {
    }
    try { new C91(); } catch (e) {}
    const v93 = new C91();
    try { v93.setMonth(C88, C91); } catch (e) {}
    let v95;
    try { v95 = v44["find"](..."find", a50, ...v43, ...v44, ...522675525n); } catch (e) {}
    for (const v98 in "1024") {
    }
    const o99 = {
        "execution": "1024",
    };
    Symbol.iterator = Symbol;
    Symbol("bZ");
    new Uint8ClampedArray();
    const o104 = {
    };
    v95 <= a49;
    return arguments;
}
f46(3423, 3423, f42, 522675525n);
f46();
