class C3 {
    constructor(a5, a6) {
        function f7(a8, a9) {
            new Float64Array();
            return a9;
        }
        a5.constructor = f7;
        a6.c = "IfIo";
        a5.c = a5;
        this[4] = this;
        a5.g = a5;
        a6 %= a5;
    }
    static c = 0.4852387408625468;
    [4.0] = "IfIo";
    static #p(a13) {
        try {
            super.toUpperCase("IfIo", 0.4852387408625468, "IfIo", "IfIo");
        } catch(e15) {
        }
        return 4.0;
    }
    static h;
    d = 4.0;
}
C3.length = C3;
const v16 = new C3(C3, C3);
function f17(a18, a19) {
    const v22 = new Float64Array(216);
    return v22;
}
v16[Symbol.toPrimitive] = f17;
const v25 = new C3(v16, v16);
v25[4];
const v27 = v25?.__lookupSetter__;
let v28;
try { v28 = new v27(C3); } catch (e) {}
const v29 = new C3(v16, v25);
v29[4] = v29;
function f30(a31, a32) {
    function f33() {
        return Symbol;
    }
    Object.defineProperty(a31, Symbol.toPrimitive, { writable: true, configurable: true, get: f33 });
    try { a31.call(v29); } catch (e) {}
    a32 >>> a32;
    const v38 = a31?.constructor;
    try { new v38("IfIo", a32); } catch (e) {}
    a32[4];
    const o53 = {
        set e(a42) {
            Reflect.construct(a42, [v25,Reflect], a42);
            super.f;
        },
        "c": v29,
        toString(a48, a49) {
            new Array(991);
            return 0.4852387408625468;
        },
        "b": a32,
    };
    return o53;
}
f30.prototype;
try { f30(C3, 0.4852387408625468); } catch (e) {}
f30(v16, v29);
f30(v16, v29);
const v58 = f30(v25, v16);
function f59() {
    return 4.0;
}
-7 / -7;
Date.valueOf = f17;
let v65;
try { v65 = new Date(v58, Date, v25, v16, v58, 268435439, v25); } catch (e) {}
try { v65.toDateString(); } catch (e) {}
async function* f69(a70, a71) {
    yield* [a71];
    return -16257;
}
function f73(a74) {
    function f75(a76, a77, a78) {
        return a78;
    }
    return f75;
}
f69.constructor = f73;
let v79;
try { v79 = f69.constructor(v58); } catch (e) {}
const v80 = v79?.constructor;
try { new v80(v29); } catch (e) {}
let v82 = 12;
v82--;
try { ("bigint").link(v28); } catch (e) {}
try { ("268435441").strike(); } catch (e) {}
try { new Uint16Array(4.0, Date, Date); } catch (e) {}
let v94 = 138;
v94--;
try { Math.clz32(-2); } catch (e) {}
const v100 = 8 + 8;
const v102 = 4.568015807751923 ^ 4.568015807751923;
v102 !== v102;
1 / 1;
const v106 = -1;
BigUint64Array[Symbol.iterator] = f30;
try { BigUint64Array.from(BigUint64Array); } catch (e) {}
const v113 = BigUint64Array.prototype;
try { v113.filter(8); } catch (e) {}
try { new Float64Array(v100, v94, v106); } catch (e) {}
