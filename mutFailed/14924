new Uint16Array(1024);
new BigInt64Array(8);
const v12 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v13 = [601759695];
const t4 = "Vre";
t4[2] = "Vre";
try { ("Vre").fixed(); } catch (e) {}
const o32 = {
    "c": -4294967297n,
    [522675525n](a20, a21) {
    },
    ..."Vre",
    "maxByteLength": -128,
    "c": v13,
    valueOf(a23, a24) {
    },
    "e": -4294967295,
    "e": -268435456,
    "maxByteLength": -4294967295,
    "arguments": v12,
    ...v13,
    "type": "Vre",
    ..."Vre",
    valueOf(a26, a27) {
        return a27;
    },
    ..."Vre",
    4: "Vre",
    "c": -268435456,
    "type": "Vre",
    toString(a29, a30, a31) {
        return a31;
    },
    6: -268435456,
};
new Float32Array(129);
function F36(a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    const v42 = !(a39 - a39);
    const v43 = "sync" << 20729;
    const o44 = {
    };
    const v46 = new Proxy(v12, o44);
    const t43 = "sync";
    const v47 = new t43();
    const o48 = {
        ...v46,
        __proto__: v47,
    };
    v42 && v43;
    const v50 = this.constructor;
    try { new v50(F36, v50, "sync"); } catch (e) {}
}
const v52 = new F36();
for (const v56 of Array(19793)) {
}
const v57 = v52.constructor;
function f58() {
    return f58;
}
class C59 extends f58 {
}
new v57();
const v61 = [];
function f62() {
    -v61;
    return f62;
}
