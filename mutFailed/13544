const v6 = 1864376985 >>> 1864376985;
try {
    const o9 = {
    };
    new Int16Array(o9);
} catch(e11) {
}
Int16Array.name = Int16Array;
new Int16Array(8);
const v15 = new Int32Array(16);
new Uint8Array(8);
try { Math.exp(1864376985); } catch (e) {}
-7 >> -7;
const v23 = [];
let v24;
try { v24 = v23.with(Math, v15); } catch (e) {}
function f25() {
    -v23;
    function f27(a28) {
        return v6;
    }
    class C29 extends f27 {
        static 7;
        g = -10;
    }
    return f25;
}
%OptimizeFunctionOnNextCall(f25);
Object.defineProperty("compile", 16, { configurable: true, enumerable: true, value: v24 });
v23[16] = v23;
let v31 = 8;
Math.log10(v31);
++v31;
Math.sqrt(-9223372036854775807);
Math.exp(Int16Array);
f25();
const v38 = -(-7);
v38 >>> v38;
Math.tan(v38 ** v38);
