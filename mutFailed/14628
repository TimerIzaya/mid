class C3 {
    [C3] = -16n;
    static e = C3;
    static 115;
    #e = 8n;
    static #g = 8n;
    static valueOf(a5) {
        %VerifyType(8n);
        function f8() {
            for (let [i12, i13] = (() => {
                    [0.38057796469390925,-3.0,-518688.06248081743,-2.0,107.8968501375,-400463.65452600387,-222.36741891958593,-1000.0,-5.415934286194992,1000000000000.0];
                    return [0, 10];
                })();
                (() => {
                    const v14 = i12 < i12;
                    const v15 = this || -16n;
                    Math.floor(v14);
                    v14 << -22141;
                    -22141 ^ v15;
                    return v14;
                })();
                ) {
            }
            return f8;
        }
        return this;
    }
    constructor(a28, a29) {
        function f31() {
            const o34 = {
                [null]() {
                    super.b;
                },
                "f": null,
            };
            return o34;
        }
        f31();
        for (let i37 = 0; i37 < 3; i37++) {
            for (let v43 = 0; v43 < 32; v43++) {
                this["p" + v43] = v43;
            }
        }
        %OptimizeFunctionOnNextCall(f31);
        let v46;
        try { v46 = this.valueOf(a29, 848739616n); } catch (e) {}
        let v47;
        try { v47 = v46(this, -16n, a29, v46); } catch (e) {}
        const v48 = [this,v46,a28];
        const v49 = [v47,v48,-16n,v48,8n];
        v49[2360] = v48;
        [a29,v46];
        this[a29] <<= v46;
        v49[2360];
        [-984503.961837067,-3.0,-984503.961837067];
        const o55 = {
            ...v49,
        };
    }
}
const v56 = new C3(848739616n, 8n);
const v57 = new C3(-16n, -16n);
new C3(8n, -16n);
function F60() {
    if (!new.target) { throw 'must be called with new'; }
}
const v64 = new Float32Array(7);
v64.join(F60);
("Vre").fixed();
function F71(a73, a74, a75, a76) {
    if (!new.target) { throw 'must be called with new'; }
    const v77 = this.constructor;
    try { new v77(0, F71, F71); } catch (e) {}
    const t73 = a75.constructor;
    new t73();
}
const v81 = [C3,848739616n,1.8667389706967334,1.8667389706967334];
[v56,v81,v81];
[8n,1.8667389706967334,v57,v81];
const v88 = Array(19793);
const v89 = [v88,v88,v88,v88];
[[v89,v89,v89]];
for (let v93 = 0; v93 < 5; v93++) {
    function f94() {
        const v95 = [-Infinity,1.7976931348623157e+308,1.0,1.7976931348623157e+308,-1.0,Infinity];
        let v96 = -65536;
        v96--;
        v95.length >>>= v96;
        return f94;
    }
    f94();
    %OptimizeFunctionOnNextCall(f94);
}
