function f0() {
    const o8 = {
        "e": 2.220446049250313e-16,
        "c": -2.220446049250313e-16,
        o(a5, a6) {
            try {
                const t6 = "g";
                t6.length = a5;
            } catch(e7) {
            }
            return 2.220446049250313e-16;
        },
        "f": "g",
        ..."g",
        "d": 2.220446049250313e-16,
    };
    return o8;
}
const v9 = f0();
const v10 = f0();
const v11 = f0();
let v13 = [v9,v11,v11,f0,f0];
try { v13.map(v10); } catch (e) {}
const v15 = [v13,v9,v10,v13,true];
const v16 = [v13,true];
try { v16.lastIndexOf(v10); } catch (e) {}
const v18 = [64,19064215,30016,12768,603051129,1073741825,25531,64];
const v19 = [1770214781,-12,-18196,9223372036854775807];
let v20;
try { v20 = v19.sort(v19); } catch (e) {}
const v21 = [-9072,1053919742,0,9007199254740991,268435439,15,-2147483648,9007199254740990];
class C22 {
    constructor(a24, a25, a26) {
        a24[0] = a24;
        try { a25.every(v21); } catch (e) {}
        ~1.7976931348623157e+308;
    }
    static 202 = v13;
    #f;
    get g() {
        v13 &= v18;
        super.b;
        Object.defineProperty(v21, 0, { writable: true, configurable: true, enumerable: true, get: f0 });
        return true;
    }
}
C22[202] = C22;
const v34 = new C22(v10, v15, v21);
try { v34.toLocaleString(); } catch (e) {}
const v36 = new C22(v9, v34, v13);
let v37;
try { v37 = v36.toLocaleString(); } catch (e) {}
new C22(v9, v19, v19);
try { ("-9223372036854775807").fontsize(-1); } catch (e) {}
new C22(v20, "some", v21);
let v51 = new WeakMap();
const v56 = -2.220446049250313e-16 & v18;
!-2.220446049250313e-16;
v51++;
-2.220446049250313e-16 >> v18;
Math.hypot(v56);
!v56;
Uint8Array.prototype = Uint8Array;
const v64 = new Int8Array(3816);
Object.defineProperty(v21, 3075, { value: v37 });
typeof -2.220446049250313e-16 === "symbol";
for (const v73 of "some") {
    const v74 = v64[1];
    v74 != v74;
    let [,,,...v76] = v64;
    function f77(a78) {
        return v18;
    }
    class C79 extends f77 {
        static e;
        [-1] = 0;
        115 = v20;
    }
    const o80 = {
    };
    o80.a = v74;
    const o81 = {
    };
    o81.e = o81;
    o81.a = v74;
}
