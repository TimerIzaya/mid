function f0() {
    203936.45906492718 << 203936.45906492718;
    const o11 = {
        [-79464.44321064488]: 203936.45906492718,
        "b": "undefined",
        o(a6, a7) {
            -Infinity;
            return a7;
        },
        "a": 203936.45906492718,
        "e": 203936.45906492718,
    };
    return o11;
}
const v12 = f0();
const v13 = v12();
const v14 = f0();
v14.b;
function F16(a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    const v20 = this?.constructor;
    try { new v20(a18, v13); } catch (e) {}
    a19.a;
    try {
        this.h = a19;
    } catch(e23) {
    }
}
const v24 = new F16(v13, v13);
new F16(v13, v13);
const v26 = new F16(v14, v12);
const v27 = v26?.constructor;
try { new v27(v24, F16); } catch (e) {}
class C29 {
    static n(a31, a32, a33, a34) {
        return a33;
    }
    static 7 = F16;
}
new C29();
const v42 = new C29();
const v43 = v42?.constructor;
try { new v43(); } catch (e) {}
const v45 = new C29();
const v46 = v45?.constructor;
try { new v46(); } catch (e) {}
class C48 {
}
const v49 = new C48();
let v50;
try { v50 = v49.constructor(); } catch (e) {}
function f51(a52, a53) {
    function f55(a56, a57) {
        return f55;
    }
    ("function")?.toLowerCase;
    try { new v50(); } catch (e) {}
    const o62 = {
        "type": "function",
    };
    new Worker(f55, o62);
}
v49.constructor;
const v65 = [];
try { v65.concat(v49); } catch (e) {}
v65.toString = f51;
v65.toString();
