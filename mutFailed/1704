class C3 {
    static [990.4113032315577] = 990.4113032315577;
    d = "function";
    #f;
    constructor(a5) {
        this.d = this;
        a5--;
        /13[\d-z]?/dsy;
        /Kk/gudms.sticky;
        /r/vdi;
        const v14 = Math.log1p("function");
        v14 >> v14;
        Math.cos(9);
        0.14431638380799328 / 990.4113032315577;
        const v18 = 990.4113032315577 * 0.14431638380799328;
        v18 != v18;
    }
}
C3.a = C3;
const v20 = new C3(0.14431638380799328);
v20.d;
const v22 = new C3("function");
let v23;
try { v23 = v22.propertyIsEnumerable(0.14431638380799328); } catch (e) {}
v23 && v23;
const v25 = new C3(C3);
try { v25.isPrototypeOf(v25); } catch (e) {}
v25.d;
class C28 extends C3 {
    static {
        this.name = this;
        const v30 = 0.14431638380799328 * C3;
        super[v30];
        990.4113032315577 << (v30 << v30);
        v20[0.14431638380799328];
    }
    static [C3];
    #d;
    [0.14431638380799328] = v22;
}
try { C28.call("function"); } catch (e) {}
const v36 = new C28();
v36.d = v36;
const v37 = new C28();
const v38 = v37?.constructor;
try { new v38(); } catch (e) {}
const v40 = new C28();
v40.b = v40;
v40.b = v40;
-2 >> -2;
2147483649 << 2147483649;
const v49 = [256,54026];
try { ("forEach").localeCompare("forEach"); } catch (e) {}
-2 | -2;
const v54 = !-2;
v54 || v54;
v54 || v54;
Math.hypot(v49);
