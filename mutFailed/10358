function f0() {
}
function f1(a2, a3, a4, a5) {
    const o7 = {
        get c() {
        },
    };
}
class C8 extends f0 {
    static [f0] = f0;
    static 1 = f0;
    constructor() {
        function f10(a11, a12, a13, a14) {
            for (let [i19, i20] = (() => {
                    const v16 = 0 >>> 0;
                    v16 % v16;
                    return [0, 10];
                })();
                i19 < i20;
                i20--) {
            }
            return f10;
        }
        for (let v27 = 0; v27 < 10; v27++) {
            f10(f10, f10, v27, v27);
        }
        %OptimizeFunctionOnNextCall(f10);
        super();
        const v29 = new f0();
        let v30 = 333;
        const v31 = [1073741824,1073741823,1376142744,1073741825];
        function f32(a33, a34, a35, a36) {
            let v37 = a35 && a35;
            arguments[3] = arguments;
            ({"h":v37,"length":a33,...v30} = v31);
            ("find").startsWith(a36);
            for (let v41 = 0; v41 < 5; v41++) {
            }
        }
        for (let v42 = 0; v42 < 5; v42++) {
            f32();
        }
        let v44;
        try { v44 = this.p(v29, v29, v29, v29); } catch (e) {}
        let v46 = -2147483649;
        Math.acos(v44);
        Math.trunc(v44);
        v46 & v44;
        v29 >>> ++v46;
    }
}
const v54 = new C8();
new C8();
const v56 = new C8();
/(?<!)/gvdy;
/kIo/vdi;
/(?<!a)/vdims;
class C60 {
    e;
    static p(a62, a63) {
        const o71 = {
            valueOf(a65, a66) {
            },
            [v56](a68, a69, a70) {
            },
            "get": f0,
            "ownKeys": f0,
            "preventExtensions": f0,
            "setPrototypeOf": f0,
        };
        const v73 = new Proxy(v54, o71);
        return v73;
    }
    e = C8;
    constructor() {
        super();
        Math.acosh();
    }
    #f = f0;
    static #d = f0;
}
new C60();
new C60();
new C60();
function f83() {
    const v85 = new Set();
    class C86 {
        e;
    }
    const v87 = [];
    function f88(a89) {
        const o93 = {
            ...v87,
            ...v87,
            "f": a89,
            set c(a91) {
                a89[this != a91] <<= a91;
            },
        };
        return o93;
    }
    f88();
    return v85.clear();
}
%PrepareFunctionForOptimization(f83);
f83();
%OptimizeFunctionOnNextCall(f83);
f83();
