function F0() {
    if (!new.target) { throw 'must be called with new'; }
    const v4 = new BigInt64Array(128);
    v4.indexOf(-11907, 4294967296);
    function f10(a11, a12) {
        const o13 = {
            "f": a12,
        };
        return o13;
    }
    f10(268435441, 268435441);
    try {
        this.d = -9007199254740990;
    } catch(e15) {
    }
}
const v16 = new F0();
Object.defineProperty(Int32Array, 0, { value: v16 });
const v18 = new Int32Array(Int32Array, Int32Array, Int32Array);
const o23 = {
    toString(a20, a21, a22) {
        Object.defineProperty(v18, 2143681708, { value: v18 });
        return a20;
    },
};
function F24() {
    if (!new.target) { throw 'must be called with new'; }
}
const v26 = new F24();
const t29 = v26.constructor;
const v28 = new t29();
try { v28.setFullYear(o23); } catch (e) {}
new F0();
new F0();
const v35 = [9007199254740990,1073741823];
new Uint32Array(4);
function f39(a40, a41, a42, a43) {
    function f44() {
        return f44;
    }
    const v45 = f44();
    function f46(a47, a48) {
        const o50 = {
            get d() {
                return this;
            },
        };
        return v45;
    }
    f46(f46());
    return f39;
}
for (let v53 = 0; v53 < 10; v53++) {
    f39();
}
[-1,1024];
function f57() {
    function f58(a59) {
        return a59;
    }
    Reflect.construct(f58, [Uint8ClampedArray], Uint8ClampedArray);
    return Uint8ClampedArray;
}
const v63 = [796425645];
[2.0,-1000000000.0,-9.676065486558414e+305,-1e-15,-6.542561281395974e+307,-1e-15];
const v65 = [23795,8,259058917,-256,1,-36806,4096,-9,-1,-18943];
function f66(a67) {
    try { v35.toSpliced(321771800, 4, -256, a67, a67); } catch (e) {}
    try {
        v16.__proto__ = v18;
    } catch(e69) {
    }
    return v63;
}
v65.toString = f66;
new Date(-2, v65, v65, v65, -2);
function F74(a76, a77, a78, a79) {
    if (!new.target) { throw 'must be called with new'; }
    const v80 = this.constructor;
    try { new v80(this, a79, this); } catch (e) {}
    new Uint8ClampedArray(3638);
    new Int16Array(1000);
    new Float64Array(2);
    a78++;
    a78 >>>= F74;
    const v97 = Int32Array - 127;
    v97 / 127;
    Math.atan2(v97, v97);
}
[2.2250738585072014e-308,-Infinity];
[0.5449314237131676,-6.742983348463056,-1000000000.0,-737.3831308863882,-8.603909029552879,-1000.0,0.07688141123291425,-790678.6673820658,-1000.0,343971.8854169708];
const v102 = [-1000.0,1000000000.0];
const v103 = [0.0,-605.6883350474525,-2.2250738585072014e-308,2.8064173070154015e+307,-0.0,NaN,-1.7976931348623157e+308,-1.7976931348623157e+308,1.1567619127528594,2.2250738585072014e-308];
function f108(a109, a110) {
    const o111 = {
        [33062n]: 8n,
        __proto__: v103,
        [37369]: a110,
        [a109]: a109,
        ...a109,
        5: v102,
        ...v102,
    };
    return Date;
}
f108(26724);
const v115 = new BigInt64Array(11);
v115.reverse();
