function f3(a4) {
    const o5 = {
        "e": 0.40335048175475774,
        "d": -4.0,
        "c": a4,
        "b": 0.40335048175475774,
        "f": a4,
        "g": -2.220446049250313e-16,
        "h": a4,
        "a": a4,
        ...a4,
        ...a4,
    };
    return o5;
}
f3(f3(f3));
f3(f3);
const v15 = [0.3083488057663979,0.3083488057663979,0.3083488057663979];
class C16 {
    constructor(a18, a19) {
        let v20 = /W(jy2)/udy;
        const v21 = /(u4(?:a?)*)/gudimsy;
        const v23 = Uint8Array(v21, C16);
        const v25 = Uint32Array(4294967296, a18, a19);
        function f26(a27, a28, a29, a30) {
            const o34 = {
                ...v23,
                n(a32, a33) {
                    v25[a27] = v25;
                    return 4294967296;
                },
            };
            return o34;
        }
        for (let v35 = 0; v35 < 5; v35++) {
            f26(Uint8Array);
        }
        v20 = v21;
        for (let v37 = 0; v37 < 5; v37++) {
            v15["p" + v37] = v37;
        }
    }
}
function F41(a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    const o45 = {
    };
    try {
    } catch(e46) {
    }
    try {
        const o47 = {
        };
    } catch(e48) {
    }
    try {
        const o49 = {
        };
    } catch(e50) {
    }
    try {
        const o51 = {
        };
    } catch(e52) {
        function f53(a54, a55) {
            const o59 = {
                o(a57) {
                    super.c;
                    return 9007199254740990;
                },
            };
            return o59;
        }
    }
    try {
    } catch(e60) {
    }
    try {
    } catch(e61) {
        const o62 = {
        };
    }
    try {
    } catch(e63) {
    }
}
function f64(a65, a66) {
    const v67 = [];
    function f68() {
    }
    v67[Symbol.toPrimitive] = f68;
    const o77 = {
        set g(a72) {
        },
        [v67](a74, a75, a76) {
        },
    };
    return f3;
}
F41.toString = f64;
const v78 = new F41(-1066825740, 4294967296);
const v79 = new F41(9007199254740990, 4294967296);
try { v78.getYear(F41, v79, v78, v79, 9007199254740990); } catch (e) {}
/8foo(?=bar)baz*/vdisy;
const v82 = /([x]a[a]+)/gdisy;
/(\2)(\1)/gudimsy;
v82[F41];
