const v0 = [-2147483649,64,4096,22612,-38412,-268435456,-2147483649];
const v1 = [-1073741824,-48822,-2,-9007199254740991,7,-65536];
[10,-536870912,1168809707];
const v3 = [64804];
[1413497357,-1237412994,-9223372036854775807,843237590,-4294967297,-1,9007199254740992];
const v5 = [10,-20910,1073741824,6,268435441,14,268435440,9,-6];
const v6 = [3,-33385,38380,-65535,4294967295];
[-60301,-128,-65537,-15,-407556703,-1751494334,-9223372036854775808,1655729615];
[997287315,65535,2049574883,13,-28784,-1,128,-1,-396922757,7];
function f12() {
    return 143752543;
}
new Int8Array(256);
const v18 = new Int8Array(205);
new Float64Array(2786);
let v23 = 22227;
let v25 = 15;
v25--;
const v28 = new Int16Array(v25);
new Uint8ClampedArray(6);
const v34 = new Int16Array(3699);
"2147483649" == "2147483649";
class C39 {
    static #p(a41) {
        function f42(a43) {
            return a43;
        }
        class C44 extends f42 {
            static [-1] = 8;
            static [a41];
            static 268435441;
        }
        const v45 = [];
        const v47 = /[a-zA-Z0-9]/gvisy;
        const v48 = /abc?/gvmy;
        v48[-2] ^= v47;
        v48.exec("Q8F");
        const t36 = "Q8F";
        t36[2078209647] = v45;
        return a41;
    }
    [0.028957958839558873];
    static {
        for (let v54 = 0; v54 < 32; v54++) {
        }
    }
    static 2147483648 = C39;
    static #g;
    #a;
}
function f56(a57) {
    v18.byteLength ^= 3699;
    return v0.length;
}
Object.defineProperty(C39, Symbol.toPrimitive, { value: f56 });
function f61() {
    const o63 = {
    };
    o63.execution = -7;
    return gc(o63);
}
function f65() {
    function f66() {
        v5.__proto__;
        v34[1119589158] = 2786;
        return v3;
    }
    return f66;
}
function f68(a69) {
    v23 *= 9007199254740992;
}
Object.defineProperty(f61, Symbol.toPrimitive, { get: f65, set: f68 });
C39[Symbol.toPrimitive] = f61;
try { C39(); } catch (e) {}
const v75 = new C39();
v75.constructor = f61;
try { BigInt64Array(BigInt64Array); } catch (e) {}
function F79(a81) {
    if (!new.target) { throw 'must be called with new'; }
    this.Uint16Array = this;
    this.h = Symbol;
    this.h = a81;
}
const v82 = new F79(-2);
v82.Uint16Array = Int8Array;
Uint16Array[Symbol.toPrimitive] = f65;
Uint16Array[0] = v34;
with (v82) {
    h = Uint16Array;
}
const v86 = v75?.constructor;
function f87() {
    return f12;
}
function f88(a89) {
    Object.defineProperty(v6, -2, { enumerable: true, get: Symbol });
}
Object.defineProperty(v86, Symbol.toPrimitive, { writable: true, get: f87, set: f88 });
function f92(a93, a94) {
    function F96(a98, a99) {
        if (!new.target) { throw 'must be called with new'; }
        this.b = "b";
        this.d = a99;
    }
    const v100 = new F96();
    const o101 = {
        ...v100,
    };
    return v28;
}
const v103 = Symbol.toPrimitive;
v86[v103] = f92;
v86[Symbol.toPrimitive] = f61;
let v106;
try { v106 = new v86(); } catch (e) {}
const v107 = v106?.constructor;
try { new v107(); } catch (e) {}
let v109 = new C39();
let v110;
try { v110 = v109.propertyIsEnumerable(C39); } catch (e) {}
!v110;
new C39();
/[\11]/gm.flags;
/(?:a*)*/gudm;
const v116 = /a(?!bbb|bb)c/vi;
v116.toString = Symbol;
const v117 = v116?.toString;
try { new v117(); } catch (e) {}
[4096];
const o124 = {
    "execution": "async",
    "type": "minor",
};
~117;
Uint16Array[Symbol.iterator] = f88;
Uint16Array[2] = Uint16Array;
Uint16Array[0] = v86;
const v129 = new Uint16Array(Uint16Array);
let v130 = v129[1];
v130--;
Int32Array.name;
new Int32Array(31);
Uint32Array.toString = f87;
let v138;
try { v138 = Uint32Array.toString(); } catch (e) {}
try { v138.small(); } catch (e) {}
const v140 = new Uint32Array(128);
v140[72];
function f142() {
    3.4890473589784586e+307 > 3.4890473589784586e+307;
    let v145 = 1000000000000.0;
    v145--;
    257828.6336153492 - 257828.6336153492;
    -4294967296 >> -4294967296;
    class C152 {
        static #m(a154) {
        }
        constructor(a156) {
            function f157(a158) {
                v1.byteLength;
                function f160() {
                }
                return C152;
            }
            Object.defineProperty(this, "toString", { enumerable: true, value: f157 });
            this.m = a156;
            function f161() {
                return 9007199254740992;
            }
            Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f161 });
            const v162 = this?.__defineSetter__;
            try { new v162(v23, v23); } catch (e) {}
            new Float32Array();
            try { Uint16Array.apply(Uint16Array, "2147483649"); } catch (e) {}
            const v168 = new Uint16Array();
            const v169 = new Float32Array(v168, -4294967296, a156);
            function f170(a171) {
                v109 = a171;
            }
            Object.defineProperty(v169, "f", { writable: true, configurable: true, enumerable: true, set: f170 });
            v169.f = v169;
            v169.f = v169;
        }
    }
    const v172 = new C152(C152);
    v172.g = v172;
    const v173 = new C152(C152);
    v173.length = -4294967296;
    v173.length;
    const v175 = new C152(-4294967296);
    const v176 = [v175,C152];
    [257828.6336153492,v175,v172,v175,v176];
    const v178 = [v175];
    function f179(a180) {
        const o181 = {
        };
        try {
            o181.e = v145;
        } catch(e182) {
        }
        try {
            const o183 = {
            };
            o183.e = v145;
            o183.b = a180;
        } catch(e184) {
        }
        try {
            const o185 = {
            };
            o185.e = v145;
            o185.b = a180;
            o185.c = a180;
        } catch(e186) {
        }
        try {
            const o187 = {
            };
            o187.e = v145;
            o187.b = a180;
            o187.d = v173;
        } catch(e188) {
        }
        return 8;
    }
    v178.constructor = f179;
    class C189 extends C152 {
        [v172];
        #n(a191, a192, a193, a194) {
            function f195() {
            }
        }
    }
    C189.name = C189;
    const v196 = new C189();
    v196.m = v103;
    class C198 extends v178.constructor {
    }
    try { v196.m(v176); } catch (e) {}
    const o202 = {
        "e": Uint16Array,
        o(a201) {
        },
        ...v145,
    };
    return Int32Array;
}
try { f142.bind(-7); } catch (e) {}
%PrepareFunctionForOptimization(f142);
f142();
f142();
%OptimizeFunctionOnNextCall(f142);
const v206 = f142();
v206.prototype = v206;
