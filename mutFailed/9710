function f0() {
    const o12 = {
        n(a5) {
            try {
                super.flatMap(this, this, this, a5, a5);
            } catch(e7) {
            }
            try {
                this.fuck(127, a5, undefined, a5);
            } catch(e11) {
            }
            return 2.0;
        },
        __proto__: "valueOf",
    };
    return o12;
}
const v13 = f0();
f0();
let v15 = f0();
const v28 = [-1.0];
function f29(a30, a31) {
    class C32 {
    }
    const v33 = [-8,-8,4096];
    [-51293,-9007199254740992,268435441,-9664,268435439,268435440,-24091];
    [42784,-15,8,-954092385,459922886];
    Object.defineProperty(v13, "f", { writable: true, enumerable: true, get: f29 });
    Object.defineProperty(v33, 129, { writable: true, value: -1.1299559494458166e+308 });
    return 4973;
}
v28.valueOf = f29;
v28.toString = f0;
const o36 = {
};
Object.defineProperty(o36, "set", { writable: true, enumerable: true, value: f0 });
function f38() {
    function f40(a41) {
        try {
            a41.d = a41;
        } catch(e42) {
        }
    }
    this.onmessage = f40;
    v15 &&= this;
    Reflect.construct(f0, [], f0);
}
const v48 = [];
const o49 = {
    "arguments": v48,
    "type": "function",
};
new Worker(f38, o49);
let v51 = new Proxy(v28, o36);
function f52(a53) {
    let v54 = 0;
    while (v54 < 0) {
        try {
            new f38();
        } catch(e58) {
        }
        v54++;
    }
    const o60 = {
    };
    return -1717054542;
}
v51.toString = f52;
++v51;
