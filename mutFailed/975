function f0() {
}
const v2 = new Map();
let [,v5,...v6] = [723200.4184824808,-1000.0,-523437.54204506474,-964793.6675249395];
("toString")?.toString;
class C9 {
    static {
        const v11 = this.toString();
        try { v11(); } catch (e) {}
    }
}
class C18 extends f0 {
    static 1050808277 = 1.2793322730111452e+308;
    static {
        let v19 = this;
        v19 **= v19;
        h = -1.0;
        v2.size;
    }
    [4.0];
    #f = -1.0;
    static f = Map;
    static g;
}
const v23 = new BigInt64Array(3995);
const v24 = new BigInt64Array();
v23.indexOf(v24);
new C18();
const v27 = new C18();
new C18();
Array();
const v32 = v27.constructor;
try { new v32("toString", 256); } catch (e) {}
function f34(a35) {
    return a35;
}
const v38 = new Float64Array();
const v42 = new Float32Array(4096);
const v44 = [v42,Uint32Array,[v38,Uint32Array,v42]];
v44[v44] >>= 1000;
Math.sin(-9007199254740991);
const o49 = {
};
const o51 = {
    "type": "function",
};
const v52 = new Worker(f34, o51);
([,[,,,,,]]).fill();
const v57 = [748666.7832804511,3.0];
class C59 extends Float64Array {
    [v57];
}
new C59();
v52.terminateAndWait();
