const v3 = [Infinity,0.8754217637695192,908.2118634188055,-2.0,6.628337750042418e+307,-4.726310416724216];
try { v3.entries(); } catch (e) {}
[1.8501632237794237,1000000.0,0.0,-2.0,-484622.28927713033,1000000000000.0,8.642654706052351e+307,-3.0,1.3797435808151083e+308];
[-1000000000.0,1.701402430577221e+308,0.39709230928664163,481.63767922680654];
Float32Array.length;
function f10() {
    class C11 {
    }
    const v12 = new C11();
    try { v12.isPrototypeOf(v12); } catch (e) {}
    return v12;
}
new Float32Array(1386);
const v17 = new Float64Array(512);
~255;
new BigUint64Array(255);
const v22 = [-0.6149395169662668,2.264458813811361e+307,-945.2801378445339];
const v23 = [1000000000000.0,-1.0821679916006571e+308,4.092945393267847,1000000000.0,-822637.9284357226];
v23[4];
class C27 {
}
const v28 = new C27();
const v29 = new C27();
const v30 = v29?.constructor;
try { new v30(); } catch (e) {}
const v36 = new WeakSet();
function f37(a38) {
    const o42 = {
        "g": v36,
        "h": a38,
        __proto__: a38,
        "a": v36,
        "f": WeakSet,
        m(a40, a41) {
            return a40;
        },
    };
    return o42;
}
f37(f37(WeakSet));
try { Math.abs(C27); } catch (e) {}
const v46 = Math.round();
async function f47(a48, a49, a50) {
    try { a49.strike(); } catch (e) {}
    a50 >>> a50;
    Number.isNaN(await v46);
    const v57 = [0.8307152163010869,1.0,0.0];
    v57[2] = v57;
    v57.length = 1386;
    %VerifyType(v57 instanceof -24894);
    return f47;
}
try { f47.bind(f10); } catch (e) {}
const v60 = f47(Math, "b", v46);
try { v60.catch(v60); } catch (e) {}
let v62;
try { v62 = v60.hasOwnProperty(-788.7260290236088); } catch (e) {}
v62[Symbol.toPrimitive];
Object.defineProperty(v60, 7, { writable: true, enumerable: true, set: f47 });
v17[127] = 61066;
v62 || v62;
function F67(a69, a70, a71, a72) {
    if (!new.target) { throw 'must be called with new'; }
    try { a71.toLocaleString(); } catch (e) {}
    const v74 = a72?.constructor;
    try { new v74(); } catch (e) {}
    const v76 = this.constructor;
    try { new v76(a69, F67, 16, a72); } catch (e) {}
    a72[16] = a72;
}
new F67(v22, v29, v22, v28);
const v81 = this.Realm.dispose;
try { v81(); } catch (e) {}
let v83 = 4.150176177212824;
[v83 &= -2.0];
new F67(v23, v23, v22, v23);
