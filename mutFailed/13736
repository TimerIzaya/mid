const v0 = [1000.0,-1.7976931348623157e+308,985.3888232784661,-712015.5546910492,3.0,-3.0,-209.22805742412186,-912351.0396610593,0.09380094376035941];
const v1 = [1.5078557032621175e+308];
const v2 = [407.1842125351286,1e-15,NaN,Infinity,0.0,-2.0,755407.7395665597,915.1241834637635,NaN,6.607512685120754e+307];
const v3 = /e\cAOS/gim;
const v4 = /a\W[a-zA-Z0-9]/vdims;
const v5 = /a?(?:a*)+/umy;
class C6 {
    10;
    static 501;
    static f;
    #f = v0;
    constructor(a8, a9, a10) {
        try { a8.compile(a10, this); } catch (e) {}
        a10[0] = a10;
        a8.dotAll;
        v0.g = a9;
        let v14;
        try { v14 = Math.round(v4); } catch (e) {}
        v14 >>> v14;
        const v17 = 2147483647 + 2147483647;
        v17 >>> v17;
        let v20 = a9++;
        const v21 = v20 >>> v20;
        const v22 = ++v20;
        Math.imul(2.0, v20) << v21;
        const v26 = ~(!v22);
        v26 % v26;
        2.0 % v20;
        ++a10 + C6;
    }
}
C6[501] = C6;
const v31 = new C6(v5, v4, v1);
v31[10] = v31;
const v32 = v5[10];
try { v32.compile(v1, v31); } catch (e) {}
const v34 = new C6(v3, v3, v1);
v34[10] = v34;
const v35 = new v34(v5, v4, v2);
-8 - -8;
-8 + -8;
6 <= 6;
let v43 = 0;
v43--;
(v43 / v43) >>> -4.0;
class C51 {
    constructor(a53, a54) {
        const o56 = {
            84: arguments,
        };
    }
}
try { v35.toString(); } catch (e) {}
