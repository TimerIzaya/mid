class C3 {
    e = 1000;
    static #h;
    #toString(a5) {
        return this >> 0.6053134035816845;
    }
    static #h = 0.6053134035816845;
    [1.7976931348623157e+308] = 1.7976931348623157e+308;
    #p(a8) {
        super.h = this;
        const o9 = {
        };
        new Proxy(this, o9);
        return a8;
    }
}
class C12 {
}
const v13 = new C12();
try {
    const t20 = "symbol";
    t20.toString = v13;
} catch(e15) {
}
new C3();
new C3();
new C3();
const v24 = new Date();
const v26 = new Set();
v26.add(v24);
new Date();
class C31 {
    static get d() {
        function f33() {
            Math.sinh(0);
            const o38 = {
                ..."raw",
            };
            function f39() {
                return f39;
            }
            function f41() {
                Object.defineProperty(f33, 13, { enumerable: true, set: f39 });
                return o38;
            }
            f41();
        }
        const v46 = [f33,5.0];
        const v47 = [v46,v46,-9.82871036065143,5.0];
        async function f48(a49, a50, a51, a52) {
            return await v47;
        }
        f48();
        const v57 = new Int32Array(9);
        v57.toString = f48;
    }
    c;
    static #e = -1000000.0;
    4294967295;
    #a;
}
const v58 = [1.2193317869829605e+308,-4.0,-0.0];
const v59 = [-5.0,1000.0,-3.0,-248408.12241369626,1000.0,-1.0,-1e-15,1.5326940564150708e+308,1000.0];
let v60 = -536870912;
const v63 = new Uint32Array(3120, Uint32Array);
class C64 {
    #toString(a66, a67) {
        ({"length":a66,} = v59);
        v60 ^= a66;
        delete v63[v63];
    }
    static #b = v58;
}
new C31();
new C31();
new C31();
/ywha??/gvdim;
const v73 = /(a)F/gvd;
const t78 = /\1(a)[^123]/gvdimsy;
t78[3105] = v73;
try {
    v73.b = Date;
} catch(e75) {
}
new Map();
let v78;
try { v78 = C31.search(-1000000.0, -1000000000.0); } catch (e) {}
function f79(a80) {
    return f79;
}
("Vre").codePointAt(3120);
const o84 = {
};
o84.h = 58;
class C85 extends f79 {
    static {
        this >> "Vre";
        super[this] = 1000;
    }
    constructor(a89, a90) {
        a89?.h;
        super.g;
        const v93 = this.constructor;
        try { new v93(a89); } catch (e) {}
        Math.atan2(this, this);
    }
    #c = v78;
}
