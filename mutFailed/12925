class C3 {
    static #e = "5";
    static #h = C3;
    static 2147483649 = "string";
    6;
    static #b;
    c;
    constructor(a5, a6) {
        ["string" instanceof C3,a5,"-58458",this];
        [[this]];
    }
}
new C3("-58458", "string");
new C3("-58458", "-58458");
new C3("5", "5");
function f14(a15, a16, a17, a18) {
    return f14.arguments;
}
class C20 {
}
new C20();
[-1e-15,0.09665934044331337,-1.9819941763612893e+307];
[1.7976931348623157e+308,2.0];
[-7.640609194073269,-1000000000.0,-2.0,1000000.0,764266.1150283988,-0.0,4.508173322878285e+307,2.0,Infinity,1000000000000.0];
Math.atanh("Vre");
const v34 = "-58458" < "-58458";
const o38 = {
    n(a36, a37) {
        return v34;
    },
};
class C39 {
    static get h() {
        const o44 = {
            "execution": C39,
            "type": "major",
        };
        gc(o44);
        return 268435441;
    }
}
const v46 = new C3();
Object.defineProperty(v46, "toString", { writable: true, value: f14 });
const v47 = new C39();
const v48 = new C39();
class C51 extends C39 {
    3;
    [v47] = v46;
    ["256"] = v46;
    static #toString(a53, a54, a55) {
        try { a53("256", v48, a53, a55); } catch (e) {}
        Math.atan(16);
        a54 ^ 16;
        return Math.abs(16);
    }
}
const v62 = new C51();
new C51();
const v64 = new C51();
v64 & v46;
if (v62 <= v48) {
    new Uint8ClampedArray(75);
    new Int16Array(6);
    new BigInt64Array(1821);
    const v76 = /o(\xed\xb0\x80)\x01/gudims;
    v76[Symbol.toPrimitive] = f14;
    const v80 = Symbol.toPrimitive;
    v76[v80] = v80;
    const v81 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    for (let v82 = 0; v82 < 5; v82++) {
        function f84() {
            try {
                v81.forEach();
            } catch(e86) {
                const t74 = e86?.constructor;
                t74();
            }
            const v89 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
            v89.push(v89);
            const o96 = {
                toString(a92, a93) {
                    return (undefined && undefined) <= v89;
                },
            };
            return v81;
        }
        f84();
        %OptimizeFunctionOnNextCall(f84);
    }
} else {
    new C3();
}
