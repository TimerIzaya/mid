let v1 = Int8Array;
const v2 = new v1(1);
const o5 = {
};
function f6() {
    return 1;
}
function f7(a8) {
    const o11 = {
    };
    function F12(a14, a15, a16) {
        if (!new.target) { throw 'must be called with new'; }
        const v18 = Math.acosh("9g9Ak");
        "9g9Ak" % undefined;
        const v20 = this.constructor;
        try { new v20(o11, v18); } catch (e) {}
    }
}
Object.defineProperty(o5, "b", { writable: true, get: f6, set: f7 });
try {
    o5.b = 1;
} catch(e22) {
}
try {
    const o23 = {
    };
    o23.b = 1;
    o23.g = 1;
} catch(e24) {
}
try {
    const o25 = {
    };
    o25.b = 1;
    o25.g = 1;
    o25.d = 1;
} catch(e26) {
}
try {
    const o27 = {
    };
    function f28() {
        return o27;
    }
    function f29(a30) {
        v1 = f28;
    }
    Object.defineProperty(o27, "d", { writable: true, configurable: true, enumerable: true, get: f28, set: f29 });
    o27.b = 1;
    o27.g = 1;
    o27.d = v2;
} catch(e31) {
}
new Int32Array(878);
new BigUint64Array(3743);
WeakSet.toString = f6;
const v40 = new WeakSet();
const o42 = {
};
Object.defineProperty(o42, "h", { writable: true, configurable: true, enumerable: true, value: v2 });
try {
    o42.h = v1;
} catch(e43) {
}
try {
    const o44 = {
    };
    o44.h = v1;
    o44.e = v1;
} catch(e45) {
}
try {
    const o46 = {
    };
    Object.defineProperty(o46, "e", { writable: true, configurable: true, value: o46 });
    o46.h = v1;
    o46.e = v1;
    o5.b = BigUint64Array;
} catch(e47) {
}
try {
    const o48 = {
    };
    o48.b = o48;
    o48.h = v1;
    o48.e = v1;
    o48.b = 1;
} catch(e49) {
}
v40[-65537n] >>>= WeakSet;
v40[0n] = -65537n;
class C51 {
}
function f52() {
    const v54 = Symbol.toPrimitive;
    function f55() {
        const o58 = {
            m(a57) {
                return f55;
            },
        };
    }
    v54.description.codePointAt(C51);
    return Symbol;
}
f52();
delete v40[8];
10000 + 10000;
const o66 = {
    "maxByteLength": 10000,
};
const v68 = new ArrayBuffer(3471, o66);
Uint8Array.length;
const v71 = new Uint8Array(v68);
v71[2750];
const v75 = new Date();
v75[16] = 3471;
v75[16] = Date;
class C76 {
    get c() {
        this.h &&= WeakSet;
        Object.defineProperty(v40, 3, { enumerable: true, get: Date });
        typeof this === "symbol";
        return Date;
    }
    constructor(a82, a83) {
        a82 | a82;
    }
    static toString(a87, a88, a89) {
        new Float64Array(4);
        new Uint8ClampedArray(651);
        new Uint32Array(0);
        return Float64Array;
    }
}
