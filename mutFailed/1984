new Date(128, 1000.0);
let v5 = 536870912n;
v5--;
new Uint16Array([34352,4,-9223372036854775808,1092764849,-2147483647,-1162070362,-4294967297,8,-591755449]);
class C12 {
}
class C13 extends C12 {
    static #m(a15, a16, a17, a18) {
    }
}
const o22 = {
    [-352741132]: -352741132,
    set b(a20) {
    },
    get c() {
        return this;
    },
    "b": 2.220446049250313e-16,
};
const v23 = new WeakMap();
const v24 = [WeakMap,WeakMap];
const v25 = [v24,WeakMap];
const v26 = [v23];
[v24,v26,v26,v23,v26];
[WeakMap];
[v26,v25,v25];
new Set();
new BigInt64Array();
v5 <= -16;
const v42 = new Int8Array(127);
const v44 = new WeakSet();
for (const v45 in v42) {
    v44[v45] = v45;
}
const v48 = new Int32Array(1);
const v51 = new Int32Array(1024);
v48 instanceof Reflect.construct(Int32Array, [v51]);
let v57 = gc;
function f58(a59) {
    const v61 = [Array,Array];
    return Reflect.apply(Array.of, v61, v25);
}
v57.valueOf = f58;
v57();
const v66 = ("object").trim();
const v67 = [1024];
function F68(a70) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = v67;
}
class C71 {
    #m(a73, a74, a75) {
        for (const v76 in this) {
            (delete this?.h).__proto__;
        }
    }
}
class C79 extends C71 {
    static set e(a81) {
        this > a81;
    }
}
const v83 = new F68();
const v84 = new f58();
const v86 = [-859764070,-1024,-58163,-4,-8624];
v86.e = v25;
function F87(a89, a90, a91) {
    if (!new.target) { throw 'must be called with new'; }
    const v92 = this.constructor;
    try { new v92(a91, 10n, a91); } catch (e) {}
    a90.c = a90;
    a91.e = a91;
}
new F87(v83, v84, v86);
v57 /= v66;
