let {...v4} = [1000000000000.0,0.9960435535667199,1000.0,-1.6540773985510377e+308,0.3018853678306006,410.9648048644401,-6.0085450863810586,-529.8311372035074];
try {
    v4.fuck(v4);
} catch(e6) {
}
class C7 {
    g;
    static 3;
    constructor(a9, a10) {
        try {
            a9.#b = 256;
        } catch(e11) {
        }
    }
    /*
    constructor(a13) {
        for (const v14 of "5") {
            this.d = v14;
        }
    }
    */
    valueOf(a16, a17) {
        try {
            a16 &&= a16;
        } catch(e18) {
            const v22 = +e18;
            256 >>> v22;
            const v24 = 23520 << 268435456;
            (268435456 / 256) & 256;
            v22 & v24;
        }
        return this;
    }
}
const v28 = new C7(256, v4, C7);
const v29 = new C7();
new WeakMap();
const v32 = [315.3838771878211,0.8321654879979539,1.0,-813011.8421276518];
function F33(a35, a36, a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    for (let v39 = 0; v39 < 100; v39++) {
        function f40(a41, a42, a43) {
            const o45 = {
                get d() {
                    return a42;
                },
            };
            for (let i = 0; i < 10; i++) {
                0 < 10;
                delete v32[256];
            }
            return o45;
        }
        f40(a38, f40, f40);
    }
}
let v51 = new C7();
class C55 {
    static #g = "5";
    static f;
    NaN;
    constructor(a57, a58, a59, a60) {
        let v56 = this;
        v56 &&= v29;
    }
    set c(a62) {
        switch (a62) {
            default:
                -268435456 < v28 ? -268435456 : v28;
                break;
        }
    }
    [1881948022] = C7;
}
const v65 = new C55(C55, C55, 1881948022, "5");
new C55(C55, v65, 256, C55, C55, F33);
const v67 = new C55(v51, 256, -268435456, C7);
function f71() {
    return f71;
}
function f72(a73) {
    const v74 = a73.constructor;
    const v76 = new Uint8ClampedArray();
    const v78 = v76 ^ 3;
    try { v74(a73, f71); } catch (e) {}
    class C80 {
    }
    return v78;
}
const v83 = new Float64Array(256);
const v86 = new Map();
let v93 = undefined;
const o101 = {
    ...v86,
    ...v86,
    __proto__: v86,
    [24560](a95, a96, a97) {
        super[591114.0785999324];
        v93 = Map;
    },
};
v93 = o101;
[v86];
function F104() {
    if (!new.target) { throw 'must be called with new'; }
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    new Date();
    new Uint32Array(5);
    new Set();
    const o118 = {
    };
    class C121 {
    }
    class C122 extends C121 {
    }
    const v123 = Array(19793);
    for (const v124 of v123) {
    }
    const v125 = [v123,v123,v123,v123,v123];
    for (let v126 = 0; v126 < 50; v126++) {
    }
    const v127 = [v125,v125,v125];
    const v128 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
    function f129(a130, a131, a132, a133) {
        const v134 = /(?:a*)+q(?<a>.)/guds;
        function f135(a136) {
            const v137 = v128.constructor;
            try { v137(); } catch (e) {}
            a136.constructor;
            15312 | [Infinity,5.072687501529128e+307,0.4093098171074484,4.0,-4.442441003635313e+306,843998.4933901483,-714.8973177887364];
        }
        for (let [i148, i149] = (() => {
                function f144(a145, a146) {
                    return f129;
                }
                return [0, 10];
            })();
            i148 < i149;
            i149--) {
            for (let v156 = 0; v156 < 25; v156++) {
                f135(v134);
            }
        }
        function f158() {
            let v159 = Float64Array;
            v159 = a131;
            return a131;
        }
        return f158;
    }
    const v160 = [v127];
    function f162() {
        const o163 = {
        };
    }
    v160 >= Uint16Array;
}
new F104();
new F104();
function f167() {
    const o172 = {
        get f() {
        },
        "has": f167,
        "b": 256,
        "maxByteLength": 24560,
        toString(a170, a171) {
            return 744398936;
        },
    };
    const o177 = {
        ["8"](a175, a176) {
        },
    };
}
function F178() {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e180) {
    }
}
class C181 {
}
function f182(a183, a184, a185) {
    const o186 = {
    };
}
class C187 {
    static get c() {
        let v189 = 0;
        while ((() => {
                const v191 = v189 < 10;
                let v192 = -268435456;
                v192--;
                -(v192 + v192);
                try { new DataView(240); } catch (e) {}
                return v191;
            })()) {
            v51 = C7;
            this[2147483648];
            try {
                v28.valueOf(1.7976931348623157e+308, /Va\W/udimsy);
            } catch(e203) {
            }
            v189++;
        }
        return this;
    }
}
const v205 = new C187();
const v206 = new C187("5", F33);
new C187(v206, v32, v205);
async function f208(a209, a210, a211) {
    return a211;
}
const v212 = f208.constructor;
const v213 = v83.constructor;
try { new v213(); } catch (e) {}
function f215(a216, a217) {
    Proxy();
    return a217;
}
try {
    v67.resizable = 145253519;
} catch(e221) {
}
v212();
