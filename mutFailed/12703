function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = -321.1904783644226;
    try {
        this.c = -321.1904783644226;
    } catch(e12) {
    }
    try {
        this.b = a9;
    } catch(e13) {
    }
}
const v14 = new F6(268435439, 512.8963048715143, -321.1904783644226, 512.8963048715143);
v14.fuck = -6;
%VerifyType(-6);
-321.1904783644226 ^ -321.1904783644226;
try {
    const o16 = {
    };
    v14.fuck(o16, o16, o16, "10");
} catch(e19) {
}
const v20 = new F6(-6, 512.8963048715143, -321.1904783644226, 509353.75948617444);
new F6(-6, -321.1904783644226, -321.1904783644226, 512.8963048715143);
function f22(a23, a24) {
    const o52 = {
        ...v20,
        o(a26, a27, a28, a29) {
            let v33 = super[-6];
            -6 > 14;
            const o37 = {
                "maxByteLength": 2500602926,
            };
            const v39 = new ArrayBuffer(1753, o37);
            new Uint8ClampedArray(v39);
            v33 -= f22;
            let v44 = 28584;
            v44++;
            const v46 = -11 || a28;
            Math.log10(a28);
            Math.min(a24);
            a28 << -11;
            (a28 ^ v46) && a28;
            return v20;
        },
    };
    return o52;
}
f22(f22(f22(F6, -12), -12), 268435439);
function f58() {
    const o60 = {
        __proto__: 2,
    };
    function f61(a62) {
        class C64 {
            static {
                this[Symbol.hasInstance];
            }
            #p() {
                let v70;
                try { v70 = this.p(undefined, this, this, this, this); } catch (e) {}
                try {
                    v70.#p(undefined, v70, v70, undefined);
                } catch(e72) {
                }
                return undefined;
            }
            static #a = undefined;
            c = undefined;
        }
        const v73 = new C64();
        const v74 = new C64();
        const v75 = new C64();
        function f76(a77) {
            const o83 = {
                15: a77,
                toString(a79, a80) {
                    super.h = a80;
                    try { C64.stringify(a77, a77, this); } catch (e) {}
                    try {
                        C64.c = v73;
                    } catch(e82) {
                    }
                    return a79;
                },
                2147483647: undefined,
                __proto__: v74,
                "c": a77,
                ...a77,
                "f": a77,
            };
            return o83;
        }
        const v84 = f76(C64);
        f76(v75);
        try {
            new f76(v84);
        } catch(e87) {
        }
    }
    Object.defineProperty(o60, "e", { writable: true, set: f61 });
    o60.e = o60;
    const v88 = new Uint16Array();
    const t103 = -12;
    t103[1] = v88;
    return BigInt64Array;
}
const v90 = new BigInt64Array(218);
v90.sort(f58);
