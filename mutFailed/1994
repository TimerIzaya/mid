const v0 = [7,-4,2,-1,16];
function f1(a2, a3) {
    const v7 = new Float32Array(165);
    v7[35] = v7;
    new Uint16Array(v7);
    return v0;
}
v0[Symbol.toPrimitive] = f1;
const v11 = [1000];
const v12 = [-9007199254740990,536870888,-1];
function f13(a14) {
    return a14;
}
v12.toString = f13;
class C18 {
    static b = v11;
    [v11] = v0;
    static [v0];
    static #c = v0;
    static set c(a20) {
        [49.1454314347568,2.799090313384081,-719787.1319816669,1.0,1000000000.0,4.093557724487731,-0.0,1.1999468191281273e+308,1.7080506087165096e+308];
        [419.88561083173227,-610.8671021218081,4.0,-1.7976931348623157e+308,433.424720776871,344651.89901052555,-163.84704117033812,13.828848329616108,-3.0];
        [-4.0,-1.4057905532577787e+308,4.0,289336.1469693284,-186741.44593441836,0.9662648893763731,-1.7976931348623157e+308,-4.0,-1.0027074173047656e+308];
    }
    c;
}
C18.b %= v12;
const o26 = {
    "maxByteLength": 105,
};
const v28 = new SharedArrayBuffer(10, o26);
new Uint8Array(v28);
const v31 = new C18();
v31[Symbol.toPrimitive] = Symbol;
const v34 = new C18();
new C18();
function f39() {
    const v41 = [-5.0,-4.0,-1.7976931348623157e+308,-897.6003446951657,-1000000.0,1.8928166106024224e+306,-2.0,-1000000000000.0];
    function F42(a44, a45, a46, a47) {
        if (!new.target) { throw 'must be called with new'; }
        try { a45.call(); } catch (e) {}
        for (let v49 = 0; v49 < 50; v49++) {
        }
    }
    const v50 = new F42(7.090076723213673e+307, 7.090076723213673e+307, F42, 7.090076723213673e+307);
    const t45 = v50.constructor;
    new t45(v41, v50);
    new F42();
    return f39;
}
const o55 = {
    __proto__: f39,
    "g": v34,
    [v12]: o26,
    "a": v34,
    "c": Uint8Array,
    [v31]: v12,
    m() {
        return f39;
    },
};
