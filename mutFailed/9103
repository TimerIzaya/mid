function f0() {
    const t1 = "-4294967295";
    t1[8] = "-4294967295";
    const o10 = {
        "a": "setTime",
        "g": "-4294967295",
        "b": "-4294967295",
        [1.2240575399533414e+308]: "setTime",
        __proto__: "-4294967295",
        "h": "-4294967295",
        ["-4294967295"](a5) {
            const t11 = "-4294967295";
            t11[a5] = a5;
            a5 >> this;
            try {
                this.fuck("setTime", 9n);
            } catch(e9) {
            }
            return "-4294967295";
        },
    };
    return o10;
}
const v11 = f0();
const v12 = f0();
const v13 = f0();
class C14 extends f0 {
    constructor(a16) {
        super();
        let v17 = v13.__proto__;
        const v18 = v17?.constructor;
        try { new v18(v11); } catch (e) {}
        v17 &= f0;
        v13.a %= a16;
        a16.__proto__;
    }
    get b() {
        this in v12;
        return v13 >>> this;
    }
    static [f0] = v12;
    static #d;
    static 823683687 = v13;
}
C14[823683687] = C14;
const v24 = new C14(C14);
const v25 = new C14(v24);
class C32 {
    set h(a34) {
        a34[-12] = -9200;
        0 instanceof a34;
        129 !== this;
        let v37 = ~-9200;
        v37 = 129;
        const t53 = this[5];
        const v39 = delete t53?.[12];
        try {
        } catch(e40) {
        }
        const v43 = new Int8Array(520);
        for (let v44 = 0; v44 < 5; v44++) {
            v43.indexOf(v44);
        }
        super.g = v39;
    }
    h;
    6;
    #a;
    f = -4;
    8;
    [-12];
}
const v46 = C32?.apply;
try { new v46(v11, C14); } catch (e) {}
const v48 = new C32();
v48[8];
new C32();
new C32();
const v53 = gc();
function F54(a56, a57) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e58) {
    }
}
class C59 extends C32 {
    static {
        this.prototype = this;
    }
}
const o61 = {
};
for (let i = 0; i < 10; i++) {
    /[xyz{1,}(O)]/udis;
}
try { new BigInt64Array(gc, gc, o61); } catch (e) {}
try {
    function f66() {
    }
} catch(e67) {
}
const o68 = {
};
o68.e = o68;
try {
    const o69 = {
    };
} catch(e70) {
    function f71(a72, a73, a74, a75) {
        const o79 = {
            n(a77, a78) {
            },
        };
    }
}
try {
    const o80 = {
    };
} catch(e81) {
}
try {
} catch(e82) {
    function f83(a84, a85, a86, a87) {
    }
}
new C14(C14);
[9,4096,-9007199254740990];
const v90 = [1356173486,-65536,9301,24551,536870887,6,5,129,4294967296,1000];
try { v90.toString(); } catch (e) {}
const v92 = [1030955321,8,4096,-43681,-4096,15];
function f93() {
    return v92;
}
const v94 = f93?.__lookupSetter__;
try { new v94(v25); } catch (e) {}
new BigUint64Array(64);
-1024;
const v102 = new Float64Array(1024);
v102[706] = v102;
new Uint8Array(257);
~2707;
let v114 = 3151;
v114--;
const v117 = new Uint8Array(2707, 2707, 128);
let v118;
try { v118 = v117.findLastIndex(v117, v117); } catch (e) {}
const o119 = {
    [v118]: Uint8Array,
};
const v120 = o119?.undefined;
try { new v120(Uint8Array, Uint8Array, v53); } catch (e) {}
