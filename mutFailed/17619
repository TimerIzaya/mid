class C3 {
    a;
    #h = 536870888;
    static #f = "h";
    g = "h";
    static [NaN];
    static ["h"];
    static #n(a5, a6) {
        const o9 = {
            "maxByteLength": 129,
        };
        const v11 = new ArrayBuffer(6, o9);
        new Uint32Array(v11);
        return NaN;
    }
}
const v14 = new C3();
new C3();
const v16 = new C3();
function f17(a18) {
    let v19 = -1024;
    v19 %= -268435456;
    return v14;
}
v16[Symbol.toPrimitive] = f17;
class C26 extends C3 {
    n(a28, a29, a30, a31) {
        try {
            C3.b = a30;
        } catch(e32) {
        }
        return NaN;
    }
    [v16];
    [NaN];
    10;
    512 = v14;
}
new C26();
new C26();
new C26();
const v37 = new Set();
function f38(a39) {
    const o63 = {
        "a": v37,
        o(a41, a42) {
            function f43() {
                const o45 = {
                    "e": -13,
                };
                return o45;
            }
            const v46 = f43();
            const v47 = [65535,-10,4294967296,-10,36724,65536,-2147483647,52881,2,4096];
            function f49(a50, a51, a52) {
                const v54 = [Array,a52];
                return Reflect.apply(v47.filter, v46, v54);
            }
            %PrepareFunctionForOptimization(f49);
            f49();
            %OptimizeFunctionOnNextCall(f49);
            f49();
            const v59 = super[a39];
            for (let v60 = 0; v60 < 10; v60++) {
                a39["p" + v60] = v60;
            }
            return v59;
        },
        ...v37,
    };
}
f38(Set);
new Uint32Array(420);
new Int32Array();
const o73 = {
};
o73.h = v37;
o73.h = o73;
const v76 = 1842642860 % !o73;
v76 % v76;
const v78 = new WeakMap();
try { v78.delete(); } catch (e) {}
class C80 {
}
("isInteger")?.replaceAll;
[-2147483647,64098,-9383,1024,129,-5];
[1000,-16,-38597,12,-3399,32508];
[-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v92 = new Uint32Array();
const v94 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v95 = [601759695];
const v96 = [1073741824,1073741823,1376142744,1073741825];
function f97(a98, a99, a100, a101) {
    function f103() {
        let v106 = Float64Array;
        v106 = a99;
        b = v95;
        try {
            v96.forEach(a99);
        } catch(e108) {
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o110 = {
        };
        const o125 = {
            "c": -4294967297n,
            "c": v95,
            valueOf(a113, a114) {
            },
            1073741824: v92,
            "maxByteLength": -268435456,
            "b": -4294967295,
            [-4294967297n](a116, a117, a118, a119) {
                class C121 extends Date {
                    static get c() {
                    }
                }
                class C123 {
                }
                arguments[0] = arguments;
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v94,
            256: a101,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            6: -268435456,
        };
    }
    f103();
    const v127 = new Int8Array();
    const v128 = v127.buffer;
    v128.constructor = f103;
    v128.slice(2147483648);
    const v131 = new Int32Array();
    v131[3];
    for (let v133 = 0; v133 < 10; v133++) {
    }
    %OptimizeFunctionOnNextCall(f103);
    let v135;
    try { v135 = v96["find"]("find", a101, v95, v96); } catch (e) {}
    v135 <= a100;
    return arguments;
}
for (let v137 = 0; v137 < 10; v137++) {
    f97();
}
%OptimizeFunctionOnNextCall(f97);
f97();
[-50328,-14,3,128,-11,64,-65535];
class C141 {
    g;
    c;
    1 = 257n;
}
new C141(1073741825n, 1.0, 7.589647165982214);
const v143 = new C141(411585671n, -1000000.0, -1000000.0, 1.0);
new C141(v143, -1000000.0, 1.0);
/(?:a*)+bU\u0034xyz{1,32}/udi;
/vfoo|(bar|baz)|quux/gvds;
/JO/gvy;
class C150 {
    #m(a152, a153) {
        function f154() {
            return a153;
        }
        super[a153] = "f";
        %VerifyType(a153);
        return f154;
    }
    static c;
}
try { C150(); } catch (e) {}
const v156 = new C150();
const v157 = new C150();
v157?.constructor;
const v159 = new C150();
v159?.constructor;
class C161 {
    p(a163) {
        this.g ^= this[8];
    }
    static #n(a166, a167, a168, a169) {
    }
    7 = v159;
    #a = v157;
}
const v170 = new C161();
v170[7] = v170;
const v171 = new C161();
v171[7] = v171;
const v173 = [[],"f",v159,381717.6504737276];
Reflect.construct(Int16Array, [[-1,16,65536]]);
class C179 {
}
const v180 = new C179(Int16Array);
const v181 = new C179();
v181[22] = C26;
function f183(a184, a185, a186) {
    a184[22] = 257n;
    a184[22] = a184;
    const o211 = {
        m(a188) {
            let v187 = this;
            a188.f = a188;
            const o189 = {
            };
            function f190(a191, a192, a193) {
            }
            try {
            } catch(e194) {
            }
            try {
                const o195 = {
                };
            } catch(e196) {
            }
            try { Math.expm1(); } catch (e) {}
            let v199 = -9007199254740991;
            v199++;
            v199 >> 7.589647165982214;
            class C202 {
            }
            C202.name.codePointAt();
            const v207 = new Int8Array(3938);
            let v208 = 3;
            v187++;
            [...v208] = v207;
            const o210 = {
            };
        },
        ...a186,
        2: v180,
        268435439: C179,
    };
    return o211;
}
f183(v181, "-65537");
[v156];
function F214() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(); } catch (e) {}
}
const v217 = new F214();
function F218(a220, a221) {
    if (!new.target) { throw 'must be called with new'; }
    a220.e = v143;
    const v222 = a221?.__lookupGetter__;
    try { v222(); } catch (e) {}
    try { this.constructor(F218, this); } catch (e) {}
    a220.e = a220;
}
F218.arguments = F218;
new F218(v217);
("Hyo9")[1];
const t259 = "at";
t259[1] = "at";
([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap?.constructor;
const v232 = [-4.202468609045087];
try { v232.every(v173); } catch (e) {}
[0.8434386161503777];
("4i")?.toWellFormed;
const t265 = "4i";
t265[1] = "4i";
const t269 = "RpXR";
t269[3] = "RpXR";
const t271 = "RpXR";
t271[1] = "RpXR";
("c")?.toLocaleUpperCase.length;
class C242 {
    constructor(a244) {
        ("valueOf").localeCompare(a244, "valueOf");
    }
}
const v246 = new C242();
const t280 = v246.constructor;
new t280(C242);
9 >> 9;
