function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = -2;
    } catch(e3) {
    }
    try {
        this.f = -2;
    } catch(e4) {
    }
    class C6 extends this {
    }
    C6.e = C6;
    Uint16Array.name;
    const v10 = new Uint16Array(255);
    try {
        function F11(a13, a14, a15) {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v16 = new F11();
        const v17 = v16?.constructor;
        try { new v17(v10, F0, F0); } catch (e) {}
        this.h;
        this.unescape(v16);
        this.a = -2;
    } catch(e22) {
    }
}
new F0();
new F0();
new F0();
18 >>> 18;
const v29 = new Int16Array(18);
Int16Array[1] = v29;
new Uint16Array(2);
const v35 = new Int16Array(2);
v35[1] = v35;
const v37 = Uint8Array.toString(Uint8Array, Uint8Array, Uint8Array, Uint8Array);
v37[20];
v37.normalize();
