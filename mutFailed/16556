class C3 {
    static {
        try {
            super.toDateString(164.39550152860738);
        } catch(e6) {
        }
    }
    5;
    [-20.324590442755607];
    #h = 0.44612219808330933;
    constructor(a8) {
        this[5] = this;
        const v10 = Symbol.iterator;
        Symbol.for(v10.description);
        const o22 = {
            [v10]() {
                let v15 = 10;
                const o21 = {
                    next() {
                        v15--;
                        const v19 = v15 == 0;
                        const o20 = {
                            "done": v19,
                            "value": v15,
                        };
                        return o20;
                    },
                };
                return o21;
            },
        };
    }
}
const v23 = new C3(164.39550152860738);
v23[5] = v23;
const v24 = new C3(-20.324590442755607);
const v25 = new C3(164.39550152860738);
v25[5];
function F27(a29, a30, a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    const v33 = this?.constructor;
    try { new v33(a31, a31, this, 0.44612219808330933); } catch (e) {}
    a29[5];
    a31 >>> a31;
    try {
        this.e = 164.39550152860738;
    } catch(e37) {
    }
    try {
        this.f = a31;
    } catch(e38) {
    }
}
const v39 = new F27(v25, -20.324590442755607, -20.324590442755607, C3);
const v40 = new F27(v39, 164.39550152860738, v23, v24);
const v41 = new F27(v39, 0.44612219808330933, -20.324590442755607, v25);
v41.g = v41;
function F42(a44, a45, a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    const v48 = this?.constructor;
    let v49;
    try { v49 = new v48(a47, v25, a45, this); } catch (e) {}
    a44[5];
    a45.e = a45;
    a47.d = a47;
    try {
        this.h = v49;
    } catch(e51) {
    }
    try {
        this.b = -20.324590442755607;
    } catch(e52) {
    }
    try {
        this.e = a46;
    } catch(e53) {
    }
}
const v54 = new F42(v24, v40, v41, v40);
v54.d = v54;
const t80 = 0.44612219808330933;
new t80(v39, C3, v41, v23);
new F42(v39, v24, v24, C3);
const v58 = ["bpkzx","bpkzx","bpkzx"];
const v60 = "bpkzx" * [v58,v58,v58];
try {
    v58.length = v60;
} catch(e61) {
}
