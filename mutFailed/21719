[-1000000.0,-743621.5831241335,-1000000000.0,-479333.6653973712,3.0,-1000.0];
const v1 = [-1000000.0,2.2250738585072014e-308,-9.211681073079466e+307,-1e-15,-957618.6665429017,1000000.0,5.325423476699198];
let v2 = [528.0148876907651,-627.733505718737,-364597.10078930855,-4.0];
let v5 = "n";
v5 ^= "IRh";
v2 = v1;
for (let v7 = 0; v7 < 32; v7++) {
    const t7 = "boolean";
    t7["p" + v7] = v7;
}
for (let i13 = 0, i14 = 10; i13 < i14; i14--) {
}
new Uint8ClampedArray(4);
const v24 = [-268435456,-9007199254740990,11,-25356,-536870912,4294967296,1520296454];
function f25(a26, a27) {
    const o28 = {
        __proto__: v24,
    };
    return o28;
}
("IRh").group(f25);
new BigUint64Array(224);
new Int8Array();
0 * 0;
function f35() {
    function f36(a37, a38) {
        return a38;
    }
    const v40 = new Promise(f36);
    v40.catch();
    return f35;
}
%PrepareFunctionForOptimization(f35);
new BigInt64Array(148);
[257,257,257,55852,2];
const o50 = {
    "maxByteLength": 148,
};
try { new BigInt64Array(-832267.262043573); } catch (e) {}
("p").strike("p", "p", "p", "p");
const v57 = new Uint8ClampedArray(231);
v57["reverse"]();
