const v0 = [512];
const v1 = [-9,-14490,-12];
const v2 = [-2147483647,1,-13,128,378324107,-9007199254740991,-65535];
class C3 {
    e = v0;
    1000;
    static g;
    static h;
    n(a5) {
        try { C3(v1); } catch (e) {}
        const v7 = /(a\1)tl8ab\b\d\bcd/vsy;
        /\xf0\x9f\x92\xa9*/guds;
        /[\cZ](?:foo)[\xe2\x81\xa3]+/vy;
        return v7;
    }
    static d;
    #valueOf(a11, a12, a13, a14) {
        a11.#valueOf();
    }
    static set f(a17) {
        a17(this, a17, a17, v0);
    }
    static [v1];
    [v2];
    static #f = C3;
}
new C3();
const v20 = new C3();
const v21 = new C3();
-6130n >> v21[1000];
let v33;
try { v33 = Uint32Array.from(Uint32Array); } catch (e) {}
new v33(257);
new BigInt64Array(8);
Uint8ClampedArray.prototype = v33;
new Uint8ClampedArray(176);
class C41 {
    static {
        try {
            v20.length = 2499;
        } catch(e44) {
            e44.message;
        }
    }
    set e(a47) {
    }
}
