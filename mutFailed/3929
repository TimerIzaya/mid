const v2 = new Float32Array(255);
const v5 = new BigUint64Array(5);
new Int8Array(1);
new Int8Array(1);
const v17 = v5.constructor;
class C18 extends v17 {
    static ["toString"];
    [Int8Array];
}
new C18(BigUint64Array, BigUint64Array);
new Uint16Array(183, 237, v2);
new Float64Array(9);
function f24() {
    return BigUint64Array;
}
for (let v27 = 0; v27 < 25; v27++) {
    try {
        C18.fuck(255, 65001, v27, v17);
    } catch(e30) {
    }
    let v32 = "p" + v27;
    const t21 = "source";
    t21[v32] = 237;
    Math.clz32("p");
    Math.acos("p");
    -4.0 / "-268435456";
    v32++;
    "p" ^ -4.0;
    +127;
}
Object.defineProperty([8,-65537,9007199254740991,-268435456,4294967296,8,44846,-13], 10n, { get: f24, set: f24 });
