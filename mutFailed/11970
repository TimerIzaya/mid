function f1(a2) {
    a2 <= a2 ? a2 : a2;
    return Map;
}
Map.toString = f1;
const v5 = new Map();
function f6(a7) {
    const o18 = {
        ...a7,
        [-1]: v5,
        ...v5,
        [Map](a9) {
            const o10 = {
            };
            try {
                o10.e = Map;
            } catch(e11) {
            }
            try {
                const o12 = {
                };
                o12.e = Map;
                o12.f = a7;
            } catch(e13) {
            }
            try {
                const o14 = {
                };
                o14.e = Map;
                o14.f = a7;
                o14.h = a9;
            } catch(e15) {
            }
            try {
                const o16 = {
                };
                o16.e = Map;
                o16.f = a7;
                o16.a = this;
            } catch(e17) {
            }
            return v5;
        },
    };
    return o18;
}
const v19 = f6(v5);
const v20 = f6(f6);
f6(v5);
[[-11],v20,f6];
[2.2250738585072014e-308,v5,v5,v19,Map];
class C34 {
    p(a36) {
        this.g ^= this[8];
    }
}
const o47 = {
    get d() {
        function f43(a44, a45, a46) {
            'use strict';
            return a44;
        }
        return this;
    },
};
