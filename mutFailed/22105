const v3 = [-14,536870887,-9223372036854775808,16,-4294967295,0,1,-2049588332,-847790946];
const v4 = [1073741825,127,-65535,-38504,4294967297,585200540,63146];
try { v4.fill(v3); } catch (e) {}
const v6 = [3,16,-6,-10,-30050,-29800,-21938,8,-9007199254740992,64];
try { v6.lastIndexOf(v4); } catch (e) {}
class C11 {
    set d(a13) {
        try {
            v6.toString = a13;
        } catch(e14) {
        }
    }
    get b() {
        try {
        const t0 = 1.0;
        new t0(-1439293531n, this);
        } catch (e) {}
        let v17 = v6.length;
        super.b = 2.0;
        const v20 = v17 ^ v17;
        const v21 = !v17;
        ++v17;
        Math.sinh(v21);
        Math.floor(2n);
        v20 - 2n;
        return 4096n;
    }
}
try { new C11(); } catch (e) {}
const v27 = new C11();
new C11();
const v29 = new C11();
const v30 = v29?.__lookupGetter__;
try { new v30(v27); } catch (e) {}
new Float32Array(3);
229 >= 229;
new Int16Array(229);
new BigInt64Array(3);
try { new ArrayBuffer(3); } catch (e) {}
const o44 = {
};
function f45(a46) {
    Symbol.toPrimitive;
    return v6;
}
o44[Symbol.toPrimitive] = f45;
new ArrayBuffer(o44, 0);
