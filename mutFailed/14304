-12 >>> -12;
const t0 = [-65317,-58155,536870889,976,536870889];
t0[2] = 13;
function f9(a10, a11, a12, a13) {
    a11[Symbol.toPrimitive] = f9;
    a10 / a10;
    a11 & a11;
    a11++;
    a12 - a12;
    const o28 = {
        get a() {
            const o23 = {
                "maxByteLength": 2698,
            };
            const v25 = new SharedArrayBuffer(2698, o23);
            new BigInt64Array(v25);
            return v25;
        },
    };
    o28.d = o28;
    return o28;
}
const v29 = f9(-12, 65536, 65536, 34137n);
v29[Symbol.toPrimitive] = f9;
f9(65536, 65536, 65536, f9(65536, v29, 65536, v29));
try { ("toString").strike(); } catch (e) {}
for (let v36 = 0; v36 < 5; v36++) {
    v36 >>> v36;
    for (const v38 in "toString") {
    }
}
try {
    undefined.fuck();
} catch(e41) {
    e41.b = e41;
    e41.b = e41;
}
