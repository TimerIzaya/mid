function f0() {
}
const v1 = [f0,f0];
const v2 = [f0,v1,f0,f0];
const v4 = [v2,[v1,v2,v2,v1],f0,v2];
[v4,v4,v4];
const v6 = [f0];
new Uint32Array(256);
new Uint8Array(4096);
new Uint32Array(2899);
class C19 {
    static #o(a21) {
        this.g **= -1e-15;
        try {
            this.normalize();
        } catch(e23) {
        }
        return 268435456;
    }
    a = -1e-15;
    static 27 = 268435456;
    static f;
}
let v24;
try { v24 = new C19(); } catch (e) {}
v24.a = v24;
const v25 = new C19();
v25.a = v25;
new C19();
const v27 = new C19();
const v29 = f0 - 8;
8 - 8;
let v34 = -15;
v34 | v34;
const v37 = 344.61638667171496 | 344.61638667171496;
const v38 = 344.61638667171496 & -11;
v38 << v37;
Math.sqrt(-11);
const v41 = v29.floor(v38);
const v42 = v41 + v41;
const v43 = v34--;
v43 >> v43;
const v45 = new Int32Array(8);
try { v45.constructor(v27, -1e-15, 8); } catch (e) {}
new Uint32Array(2950);
const v51 = 28 | 28;
const v53 = new v6(28);
v53[0] = v53;
let v54 = 0;
let v55 = -56850;
v55++;
1.1408591040999836e+308 >>> v42;
class C59 {
    #b = v54;
    g = 1.1408591040999836e+308;
    static {
        let v61;
        try { v61 = new this(); } catch (e) {}
        v61.e = v61;
        this.e = this;
        let v63;
        try { v63 = Math.tan(Math); } catch (e) {}
        let v65 = 44149;
        -v65;
        v65--;
        const v68 = v54++;
        const v69 = v68 & v68;
        let v70 = -v68;
        v70++;
        let v72 = ~v54;
        v72--;
        Math.log10(v65);
        const v75 = v65 + v54;
        v75 + v69;
        v63 >> v75;
        const v78 = Math.fround(v34);
        v78 >> v78;
    }
}
let v80;
try { v80 = new C59(); } catch (e) {}
v80.d = v80;
const v81 = new C59();
v81.g;
v81.g;
const v84 = new C59();
const v85 = v84?.__defineGetter__;
try { v85.constructor(v27); } catch (e) {}
try { new v85(v51, C59); } catch (e) {}
const o94 = {
    "execution": "async",
    set e(a92) {
        try {
        } catch(e93) {
        }
    },
};
gc(o94);
