const v2 = [1000000.0,0.218433446981681,-5.0,-919787.2036172998,872389.6270716691];
Reflect.set(v2, v2, 268435439);
class C5 {
    static {
        let v7 = 0;
        while (v7 < 6) {
            v7++;
        }
    }
}
new Int8Array(2);
let v14 = Uint8ClampedArray;
const v15 = [-0.0,0.4808419851382937,521.265446647358,1000.0,1000000000.0,0.342521651011362,100.12242715110574,-1000000.0];
gc();
function f20(a21, a22) {
    const v23 = -a21;
    v23 >> v23;
    const o25 = {
    };
    return o25;
}
const v26 = f20(2n);
const v28 = f20().propertyIsEnumerable;
new Uint8Array(v26);
function f32(a33, a34, a35, a36) {
    v14++;
    a35 % a35;
    const o42 = {
        "b": a33,
        ...Uint8Array,
        n(a40, a41) {
            return a41;
        },
    };
    return v28;
}
for (let v43 = 0; v43 < 625; v43++) {
    const v44 = f32(Uint8Array, 2, v43);
    try { v44(v43); } catch (e) {}
}
v15["findIndex"](gc);
function f47() {
    Array.__proto__ = this;
    return gc;
}
new v14(72);
new BigInt64Array(1);
new Uint16Array(71);
const v59 = new BigInt64Array();
const o67 = {
    [v59](a61, a62, a63) {
        ("findIndex")?.[a61].__proto__;
    },
};
new Uint8ClampedArray(3899);
new Uint16Array(5);
function f73() {
}
class C74 {
}
new o67();
const v77 = [];
function f78() {
    const v79 = v77.constructor;
    v79.call();
    return v79;
}
function f81(a82) {
    return a82;
}
class C83 extends f81 {
    3;
}
Uint16Array.toPrimitive;
Symbol.toPrimitive.description;
class C89 {
    static {
        for (let v91 = 0; v91 < 25; v91++) {
            function f92(a93, a94, a95, a96) {
                for (let v97 = 0; v97 < 10; v97++) {
                    C74.__proto__ = Date;
                }
            }
            for (let v98 = 0; v98 < 5; v98++) {
                Math.atan2([], -40875);
                Date.UTC(268435456);
                this();
            }
        }
    }
}
