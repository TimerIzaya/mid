class C3 {
    205 = "y8ZW";
    constructor(a5, a6) {
        function f7() {
            a5 = a6;
            C3?.[1024];
            return 9007199254740991;
        }
        Object.defineProperty(a5, Symbol.toPrimitive, { writable: true, value: f7 });
        this[205] = this;
        a5 | a5;
        this[205] = this;
        this.Realm;
        try { Symbol.keyFor(Symbol); } catch (e) {}
        const v17 = [9,-1073741824,2147483649,6,-975337176,2];
        const v18 = [65537,-4294967295,1024,1073741825,1];
        v18[Symbol.toPrimitive] = Symbol;
        try { v18.map(-1000.0); } catch (e) {}
        class C22 {
            #o(a24, a25, a26, a27) {
                [[a24,v18]];
                [v17,a24];
                function f32() {
                    return -172798652;
                }
                f32();
                var d = a24;
                new Set();
                return a24;
            }
            #d;
            #e;
            static [v18];
        }
        try { new C22(); } catch (e) {}
        const v37 = new C22();
        try { v37.toLocaleString(); } catch (e) {}
    }
    static #e = "y8ZW";
    toString(a42) {
        return "y8ZW";
    }
    /*
    constructor(a44) {
        super();
        for (let v45 = 0; v45 < 25; v45++) {
            this["p" + v45] = v45;
        }
    }
    */
    2;
    #h;
    static #g;
    static #f = "y8ZW";
    static #b = -1000.0;
}
function f49(a50, a51) {
    try { a50.of(); } catch (e) {}
    try { a51.bind(a50); } catch (e) {}
    return a50;
}
class C54 {
    static {
        try { new this(); } catch (e) {}
        function f57() {
            return Int8Array;
        }
        const v58 = f57();
        f49(v58, v58);
    }
}
try { new C54(); } catch (e) {}
const v61 = new C3(9007199254740991, C3);
const v62 = new C3(-1000.0, C3);
v62[205];
const v64 = new C3(v62, v62);
v64[205];
function F66(a68, a69, a70, a71) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a70;
    } catch(e72) {
        function F73() {
            if (!new.target) { throw 'must be called with new'; }
        }
        Math.atan2(-Infinity, 536870887);
    }
}
const v79 = new F66("y8ZW", C3, "y8ZW", "y8ZW");
function f80(a81) {
    const v84 = new Float32Array(Uint8ClampedArray, Uint8ClampedArray, Float32Array);
    v84[0] = v84;
    return a81;
}
v79[Symbol.toPrimitive] = f80;
const v87 = new F66(v62, v64, v64, v79);
Date.b = Date;
class C90 extends Date {
}
C90.length = C90;
new C90(-4294967296);
const v92 = new F66(v87, v79, C3, v61);
const v93 = v92?.a;
try { new v93(v79, C90); } catch (e) {}
const v100 = new BigUint64Array();
try { v100.every(v100); } catch (e) {}
class C102 {
}
let v106 = Symbol.toPrimitive.description.codePointAt(C102);
v106++;
const v108 = v106 >> 30005;
v108 - v108;
("n").split("n", 2147483647);
