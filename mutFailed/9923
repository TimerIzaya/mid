function f1() {
    const o8 = {
        "d": true,
        "h": true,
        ...true,
        [true]: true,
        "a": true,
        valueOf() {
            const v3 = this % true;
            [v3,v3];
            const v6 = [[v3,this,true],true,v3];
            let v7;
            try { v7 = v6.some(v3, v6); } catch (e) {}
            return v7;
        },
        "constructor": true,
        ...true,
    };
    return o8;
}
f1(true);
const t20 = true;
t20();
f1();
new BigInt64Array(2);
new Int16Array(31339);
new Uint16Array(575);
const v26 = [-6.8035006781971e+307,1000000.0,1000.0,-2.715046407601891];
class C28 extends Array {
}
const v29 = new C28();
v29.concat(v26, v29);
const v31 = new Int32Array(4096);
new Int8Array(v31);
