let v1 = 1323853193;
class C3 {
    [2055360885] = 56645;
    static set e(a5) {
        let v6 = "o";
        function f11() {
            return f11;
        }
        new Date(-429.3290910931888);
        --v6;
        Math.asin(-3.880100804221078);
        (-8) ** v1;
        v1--;
        let v20 = -3.880100804221078 ^ -8;
        v20++;
    }
}
let v22;
try { v22 = C3(); } catch (e) {}
const v23 = new C3();
v23[56645] = v23;
const v24 = (2055360885)[56645];
v24 | v24;
const v26 = new C3();
new v26();
56645 < 0;
new Int16Array();
v26[56645] = v26[56645];
new C3();
const v35 = [,];
function f36() {
    return Math.asin(Math);
}
const v41 = new BigUint64Array(2);
const v43 = 3776 ^ 3776;
try { new Float32Array(v41, v41, v1); } catch (e) {}
const v47 = Math.atanh();
const v49 = new Float32Array();
try {
} catch(e50) {
    for (let [v51,v52] of v49) {
    }
}
const v54 = new Float32Array(3776);
v54[17] = v54;
const v57 = new Uint32Array(900);
try { v57.filter(v23); } catch (e) {}
-1;
const v62 = v22?.f;
let v64;
try { v64 = v62["next"]("next", v23, BigUint64Array, v24); } catch (e) {}
const o65 = {
};
try {
    const o69 = {
        ...v35,
        ...v35,
        "f": v47,
        set c(a67) {
            v47[this != a67] <<= a67;
        },
    };
    o65.b = v43;
} catch(e70) {
}
try {
    const o71 = {
    };
    o71.b = v43;
    o71.d = -32246;
} catch(e72) {
}
try {
    const o73 = {
    };
    o73.b = v43;
    o73.d = -32246;
    o73.g = BigUint64Array;
} catch(e74) {
}
try {
    const o75 = {
    };
    o75.b = v43;
    o75.d = -32246;
    o75.g = v64;
} catch(e76) {
}
const v77 = -32246 - -32246;
-30972 === C3;
class C80 {
    constructor(a82) {
        typeof arguments;
        Uint32Array[1] = 15;
        Reflect.apply(v77, "symbol", [31909n]);
    }
}
try { C80.bind(Uint32Array); } catch (e) {}
