const v2 = [-268435456,-9007199254740990,11,-25356,-536870912,4294967296,1520296454];
function f3(a4, a5) {
    const o6 = {
        __proto__: v2,
        ...a5,
        [a4]: a4,
        2147483648: v2,
        "h": -645100.5536690389,
        "c": a5,
    };
    return o6;
}
f3();
new Date(..."undefined");
const v14 = new Date();
v14.getTimezoneOffset();
0 * 0;
const v22 = new Int32Array(1024);
let v23 = this;
Object.defineProperty(Reflect, Symbol.toPrimitive, { enumerable: true, value: Date });
const v27 = [v22];
Reflect.construct(Int32Array, v27);
v23 >>>= Reflect;
[914405.3717512314,1000.0,4.0,0.9850315592860213,1000000000.0,806223.234104886,8.069805044298285e+307,2.0];
const v31 = new Uint8Array(0);
function F33(a35) {
    if (!new.target) { throw 'must be called with new'; }
    a35--;
    a35 ^ a35;
    const v38 = this.constructor;
    function f39() {
        return a35;
    }
    for (let v41 = 0; v41 < 100; v41++) {
        f3(this, Reflect);
    }
    try { new v38(3n); } catch (e) {}
}
[-389.26010265794787,0.041268235941479325,Infinity,-323351.9782739775,-355628.78936860093,6.550619418051944,-1.0];
function f45() {
    let v46 = 6;
    v46 % v46;
    v46--;
    return v46;
}
f45();
[1.4365163271958957e+308,-1000000000.0,Infinity,-1000000000.0,0.8798927125086021,-2.220446049250313e-16];
const o52 = {
};
function F54(a56, a57, a58, a59) {
    if (!new.target) { throw 'must be called with new'; }
    function f60() {
        return Symbol;
    }
    function f61(a62) {
        function f64() {
            for (let i66 = 0, i67 = 3;
                (() => {
                    class C68 extends f64 {
                    }
                    return i66 < 3;
                })();
                (() => {
                    const v72 = i66++;
                    v72 >> v72;
                })()) {
            }
            return 536870912;
        }
    }
    Object.defineProperty(this, "constructor", { writable: true, get: f60, set: f61 });
    const v76 = this.constructor;
    try { new v76(154, a59, 154, a57); } catch (e) {}
    -a57;
    a59 <= a59;
}
new F54();
const v83 = /Aabc|defmxyz{1,}?qMa{0,1}?/gvdis.exec();
try { v83.shift(); } catch (e) {}
const o86 = {
    "type": "function",
};
function f92() {
    const v96 = !v27;
    1073741824 && -1000000.0;
    return v96 % v96;
}
Math.toString = f92;
Math.atan(Math, v31, 536870912);
