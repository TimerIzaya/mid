const v4 = new Map();
function f7(a8, a9, a10, a11) {
    let v12 = -6n;
    const v13 = v12--;
    const o27 = {
        [v13](a15, a16, a17, a18) {
        },
        valueOf(a20, a21) {
            return f7;
        },
        [v12](a23, a24, a25, a26) {
        },
    };
    class C29 extends Float64Array {
        get e() {
        }
    }
    function F31(a33, a34, a35) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v38 = [1073741824,1073741823,1376142744,1073741825];
    function f40() {
        function F44(a46, a47) {
            if (!new.target) { throw 'must be called with new'; }
        }
        const o74 = {
            n(a49, a50) {
                return C29;
            },
            m(a52) {
                return this;
            },
            m(a54) {
                return F44;
            },
            [f40]() {
            },
            ["entries"](a57, a58) {
            },
            valueOf(a60, a61) {
                return 16;
            },
            get h() {
                return 19793;
            },
            next() {
                return this;
            },
            [v38](a65, a66, a67) {
            },
            get f() {
                return Float32Array;
            },
            [-4294967297n](a70, a71, a72, a73) {
            },
        };
        return f7;
    }
    return v38;
}
const v79 = new Map();
v4.__proto__;
try {
    new Map(v79);
} catch(e82) {
}
function f83(a84, a85, a86) {
    const o93 = {
        __proto__: a84,
        get c() {
            %VerifyType(this);
            const v88 = delete this[a85];
            this.b += 0.0;
            return v88;
        },
        [Map]: a86,
        1924: -1.0,
        "b": a84,
        "e": 0.0,
        "f": 2,
        [a86]: Map,
        [-1000000000.0]: -1000000000.0,
        p(a90, a91) {
            return -1;
        },
        [v79]: -1,
        get d() {
            return this;
        },
        "a": 2,
    };
    -1 & -1;
    class C95 {
    }
    this.escape();
    return o93;
}
const v99 = new BigInt64Array(-1, -1, -1);
const v100 = `
    var c = v99;
`;
eval(v100);
f83(Map, 0.0, 0.0);
f83(-1.0, 0.0, -1.0);
function F105() {
    if (!new.target) { throw 'must be called with new'; }
}
("minor").valueOf("minor");
function F110(a112, a113, a114, a115) {
    if (!new.target) { throw 'must be called with new'; }
    const v116 = this.constructor;
    try { new v116(a112); } catch (e) {}
    this.c = a112;
}
new F110(-2.0);
f83(v4, 0.0, 0.0);
new WeakSet();
const v123 = ~9007199254740990;
const o125 = {
    "execution": "async",
    "type": "minor",
};
const t122 = v123.constructor;
const v128 = new t122();
try { v128.toPrecision(2136873598); } catch (e) {}
