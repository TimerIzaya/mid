[34177,48506,-256,127,3,65537,-34207,-1024,-2];
const v1 = [-14,-7,3,7,3,-65537,34305,1730265955,1073741823];
[1200139104];
[0.3667904168427565,-218.54794150897328,-694.7607799048369,-2.220446049250313e-16,-1000000.0,-0.0];
const v4 = [253.6494715094609,1.7976931348623157e+308,1000000000.0,0.0,-573.8056275749606,0.1531848258317703,-2.2250738585072014e-308];
const v5 = [-948.9339898018951,-2.220446049250313e-16,-1.0,-1.0];
function F9(a11, a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 4294967297n;
    } catch(e15) {
    }
    try {
        this.c = a14;
    } catch(e16) {
    }
    try {
        this.h = v4;
    } catch(e17) {
    }
}
const v18 = new F9(v1, -13n, v4, -13n);
new F9(F9, 4294967297n, v18, 4n);
new F9(v4, 4n, v5, 4n);
class C22 {
    141 = "9007199254740991";
}
new C22();
new C22();
new BigInt64Array();
function f32() {
    const v35 = Symbol.toPrimitive;
    const o39 = {
        toString(a37, a38) {
            a37 *= v35;
            return v35;
        },
    };
    class C41 extends Date {
    }
    const v42 = new C41();
    try { v42.setMinutes(o39); } catch (e) {}
    const v46 = -65535 / -65535;
    const o93 = {
        ...352326470,
        m(a48) {
            a48.c = a48;
            a48.h = a48;
            const o49 = {
            };
            o49.d = o49;
            o49.h = Symbol;
            function f50(a51, a52, a53) {
            }
            f50.bind();
            f50.caller = f50;
            try {
                o49.e = -65535;
            } catch(e55) {
                const v59 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v59, o49);
            }
            const o61 = {
            };
            o61.g = o61;
            o61.e = 1261703539;
            let v63;
            try { v63 = Math.expm1(128); } catch (e) {}
            v63--;
            const v66 = -9007199254740991 >> -9007199254740991;
            v66 - v66;
            -Math.sin(-9007199254740991);
            try { ("EV").link(v46); } catch (e) {}
            0 != 0;
            class C74 {
                o(a76, a77, a78, a79) {
                    class C80 {
                    }
                }
            }
            C74.name = C74;
            new C74();
            new Int8Array(3938);
            let v85 = 3;
            const v86 = v85++;
            v86 + v86;
            const v89 = 0 >> 0;
            const v90 = v89 - v89;
            v90 / v90;
            [...v85] = v46;
            const o92 = {
            };
            o92.c = o92;
            return this;
        },
    };
    let v94;
    try { v94 = o93.m(o93); } catch (e) {}
    v94.m(128);
    class C97 {
    }
    new Float32Array();
}
f32();
