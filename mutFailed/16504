function f0() {
}
[1073741823n,1073741823n,[-9223372036854775808,-6n],1073741824n,f0];
[390.76373537638165];
[];
const v17 = [10,1091321419,11475,-35321,-49219,-51397,335261656,-1,-65536,-4294967296];
const v18 = [-1803975943,57715,-9007199254740992];
[2147483647,13,536870912,-13,-1024,536870887];
const v23 = new Uint8ClampedArray(1000, 1000.0);
+(v23 ^ 3) >>> -3.0;
let v32 = [1000.0,8.806760127177498,["undefined",8.806760127177498,v18,345168.6487633812,"undefined"],v17,v18];
[v32];
const v37 = Symbol.iterator;
const t13 = "string";
t13[v37] = v37;
new Uint16Array(4294967295, 4294967295);
const v44 = new Float32Array(7);
const o48 = {
    m() {
        const o47 = {
        };
    },
};
const v50 = new Int32Array();
function F51(a53, a54, a55) {
    if (!new.target) { throw 'must be called with new'; }
    const v56 = o48?.constructor;
    try { new v56(Uint16Array, a55, a55); } catch (e) {}
    a53 * this;
    v32++;
    this.d = a53;
    this.g = a55;
}
new F51(F51, 256, -9223372036854775808);
const v61 = new F51(256, v50, 4294967295);
const v62 = v61.g;
new v62(Uint16Array, v44, 7);
class C65 {
    #a;
    constructor(a67, a68, a69) {
    }
}
new F51(256, Float32Array);
Math.asinh();
const v75 = new Uint16Array(Uint16Array, Uint16Array);
v62.h = v75;
Math.sin();
