class C3 {
    n(a5) {
        this[a5] = "f";
        const v6 = super[this];
        let v7;
        try { v7 = a5.sinh("f", a5, v6, 5.573586068014736, v6); } catch (e) {}
        return super[-173042972 >>> v7];
    }
    1;
    static #o(a11) {
        const o12 = {
        };
        try {
            o12.b = a11;
        } catch(e13) {
        }
        try {
            const o14 = {
            };
            o14.b = a11;
            o14.h = "f";
        } catch(e15) {
        }
        try {
            const o16 = {
            };
            o16.b = a11;
            o16.h = "f";
            o16.f = -173042972;
        } catch(e17) {
        }
        try {
            const o18 = {
            };
            o18.b = a11;
            o18.h = "f";
            try {
                o12.b = this;
            } catch(e19) {
            }
            [3.0,3.0];
            o18.f = -173042972;
        } catch(e22) {
        }
        return this;
    }
}
new C3();
new C3();
new C3();
new Uint8ClampedArray(16);
new Uint32Array(2376);
new Int32Array(242);
function F35() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 14;
    } catch(e38) {
        ~-4294967295;
        gc();
        function F43() {
            if (!new.target) { throw 'must be called with new'; }
        }
    }
    try {
        this.a = 14;
    } catch(e45) {
    }
    try {
        const v47 = [0.22970466031530812,NaN,NaN,Infinity];
        class C48 {
            constructor(a50, a51) {
                super["fround"] = v47;
            }
        }
        new C48();
        this.h = 14;
    } catch(e53) {
    }
}
const v54 = new F35();
const v55 = new F35();
const v56 = new F35();
class C57 extends F35 {
    valueOf(a59) {
        const o63 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o63);
        return gc;
    }
    e = v56;
    #d;
    constructor(a66) {
        Math.round(Math);
        async function f75(a76, a77, a78) {
            return 268435440;
        }
        Math.pow(268435456, 65536);
        const v82 = new BigInt64Array(4046);
        let o83 = {
        };
        [,...o83] = v82;
        268435456 ^ (-1e-15 && 65536);
    }
}
const v86 = new C57();
const v87 = new C57();
new Uint8Array(512);
const t110 = 19793;
for (const v93 of t110()) {
}
const v94 = new C57();
function f95(a96, a97) {
    const o107 = {
        [a97](a99, a100, a101, a102) {
            const v105 = typeof v87 === "boolean";
            try { a97.m(v105, a97, v105); } catch (e) {}
            return a99;
        },
        __proto__: a96,
        ...v94,
        ...v94,
        "f": v56,
        "c": v87,
        "b": C57,
    };
    return o107;
}
f95(v55, C57);
const v109 = f95(v55, v87);
const v110 = f95(v56, v56);
function F111(a113, a114, a115) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a115;
    } catch(e116) {
    }
}
class C119 {
    static ["22307"] = "AanB8";
    b;
}
new C119();
new C119();
const o130 = {
    "execution": "async",
    "type": "minor",
};
gc();
const v132 = new F111(v56, v56, v109);
const v133 = new F111(v87, v86, v132);
new F111(v54, v133, v110);
const v135 = [];
function f136() {
    const o138 = {
        toString() {
            return this;
        },
        3950: v135,
    };
    return o138;
}
const v141 = new BigUint64Array(3996);
v141.every(f136);
