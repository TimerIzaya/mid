new Int8Array(9);
for (let i = 0; i < 5; i++) {
    function F3(a5, a6) {
        if (!new.target) { throw 'must be called with new'; }
    }
}
new BigInt64Array();
Uint8Array.name;
new Uint8Array(3693);
class C13 {
}
const v14 = C13.constructor;
class C16 extends Date {
}
const v17 = new C16();
v17.setUTCSeconds(v14, C13);
let v22;
try { v22 = ("6Ct").fontcolor(9); } catch (e) {}
const v23 = ("6Ct").normalize();
new Int32Array();
const v28 = new v22();
const v29 = new v22();
const v30 = new v22();
function f31(a32, a33) {
    const o45 = {
        "h": v28,
        [v29](a35, a36, a37) {
            super[-9223372036854775807];
        },
        set b(a40) {
        },
        [a33]: v28,
        __proto__: v22,
        "c": 9,
        set h(a42) {
        },
        o(a44) {
            return v29;
        },
    };
    return o45;
}
f31(Uint16Array, v30);
const v48 = v23?.toLocaleUpperCase;
try { new v48(); } catch (e) {}
new BigInt64Array(6);
class C53 {
}
const v54 = new C53();
const t49 = v54.constructor;
let v56 = new t49();
const v57 = /[\11]/gm;
function f58() {
    return v56 >>>= f58 != v57;
}
const v62 = new ArrayBuffer();
v62.detached = v62;
v62.transfer();
