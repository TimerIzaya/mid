let v5;
try { v5 = (1).__defineSetter__(); } catch (e) {}
const v8 = Math.exp(-Infinity);
Math[1] &= 1024;
[8,49410,1144363731,536870889,-256,1410412126,-15,-327614205];
[256,-2,-212890635,129,45917,-2,1073741825,268435439,0,15827];
[35365,-6];
[1,v5,1024,268435441,v8];
[[Math]];
new Int32Array(1024);
new Uint8Array(0);
function F20(a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
}
const v24 = [-6.672391061426152e+307];
function f25() {
    [f25,f25,f25,f25,f25];
    v24["pop"]();
    return v24;
}
%OptimizeFunctionOnNextCall(f25);
new BigUint64Array(3089);
const v35 = [4.0,-1.7976931348623157e+308];
function F36() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        new F36();
        /Ckza\Wb?/vis;
        /Ma\W+/gudm;
    } catch(e41) {
    }
}
function F42(a44, a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
}
const v47 = new F20(F42, v35, F42);
const v48 = new F42(v47, v47, v47);
v48.__proto__ = v35;
new v5(268435440);
const v52 = /(?:a*)+q(?<a>.)/guds;
function f53(a54) {
    a54.dotAll = a54;
    ([-3,47741,-16128,9007199254740992,-1024,-58567,268435439,-4294967296,1807295090,-9223372036854775808]).flat(a54);
    const v58 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    function f59() {
        try {
            v58.forEach();
        } catch(e61) {
            e61.a = e61;
            e61.a = e61;
        }
        return 1024;
    }
    const v62 = new Uint8ClampedArray(v52, a54);
    Float32Array.bind();
    class C65 {
    }
    const v66 = new C65();
    function f68(a69, a70) {
        return f68;
    }
    const v71 = [];
    new f68(F42, [v71]);
    try {
        v71.__proto__ = v66;
    } catch(e74) {
    }
    -53409 % v62;
    const o77 = {
        get d() {
            return a54;
        },
    };
    return v52;
}
const v79 = Symbol.replace;
v47[v79] = v79;
