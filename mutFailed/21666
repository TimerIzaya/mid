function f0() {
    const o21 = {
        268435439: 9.439963376819534,
        get b() {
            Array(36862);
            const v8 = [2.412578955630149,2.7008822875610345,-2.220446049250313e-16,-1.0,-1000000000.0,-1.0,3.9002388983145044e+307,-Infinity,-1e-15,-4.2464820531165003e+307];
            const v9 = [-1e-15,4.0,362.9742459010415,1.488212487511409e+308,3.0];
            class C10 {
                constructor(a12, a13) {
                    super[v9] = v8;
                }
            }
            const v14 = new C10(v8, v9);
            [v14];
            const o19 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o19);
            return "minor";
        },
    };
    return o21;
}
const v22 = f0();
const v23 = f0();
const v24 = f0();
const v25 = [0.0,-6.311473689058236,NaN];
[0.36364795770937053];
const v27 = [0.43348872782285564,-1.758604101403038e+307,1000000.0,-2.2250738585072014e-308,-1000000000000.0,2.0,-104998.50632337388,-287017.0134820518];
function F28(a30, a31, a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    new Int32Array(512);
    -450746.69945373747 ^ -450746.69945373747;
    try {
        this.b = a30;
    } catch(e39) {
    }
    try {
        this.d = a31;
    } catch(e40) {
    }
}
const v41 = new F28(v25, v22, v24, v25);
new F28(v25, v41, v22, v27);
new F28(v27, v23, v22, v25);
const v44 = [];
const v45 = /a\q5(?:(?=a))a\11\P{gc=Decimal_Number}/gis;
function f47(a48, a49, a50, a51) {
    function F54(a56) {
        if (!new.target) { throw 'must be called with new'; }
        a56 ^ a56;
        const v58 = this.constructor;
        v58.length = v58;
        try { new v58(3n); } catch (e) {}
    }
    const v61 = new BigInt64Array(4046);
    let v62 = undefined;
    const v63 = v62++;
    const v64 = v63 + v63;
    const v65 = v63 >> v63;
    v41.write();
    const v67 = [39049,-2147483647,9007199254740991,30221,268435456,-2147483647,41987];
    const v68 = [268435440,49273,-15,214837996,-12,65536,1291301446,-65535];
    try { v68.concat(v67); } catch (e) {}
    4096 >>> 4096;
    const v71 = v65 >>> v65;
    for (let v72 = 0; v72 < 5; v72++) {
    }
    const v73 = v44.constructor;
    try { v73(); } catch (e) {}
    new F54();
    function F76(a78, a79, a80) {
        if (!new.target) { throw 'must be called with new'; }
        this.f = v45;
    }
    const v81 = new F76(v64, 4096, v71);
    v81.f = v81;
    new F76(a49, v63);
    let o88 = {
        set f(a84) {
        },
        [3n](a86, a87) {
        },
        "e": 4096,
    };
    [,...o88] = v61;
    return v45;
}
for (let v89 = 0; v89 < 5; v89++) {
    f47();
}
