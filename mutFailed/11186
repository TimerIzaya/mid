const v1 = new WeakMap();
const v2 = [536870887,-42204,-17288903,-3,9007199254740991,7];
const v3 = [-15,-2147483649,-899333997,3,1455560807,-1024,-4294967297,2098301778];
class C4 {
    constructor(a6) {
        function f7(a8, a9) {
            return a8;
        }
        f7(v3);
        f7(v2);
    }
}
class C12 {
    static #m(a14) {
        try { a14(v1, this, WeakMap, this, a14, v1); } catch (e) {}
        this[WeakMap] >>= a14;
        return v1;
    }
    #toString(a17) {
        try {
            new Uint32Array(127);
            function F21(a23) {
                if (!new.target) { throw 'must be called with new'; }
            }
            this.toString = a17;
        } catch(e24) {
        }
        super[super[a17]];
        return 3;
    }
}
const v30 = new C12();
const v31 = new C12();
const v32 = new C12();
eval("boolean");
(3.0).toExponential(64);
class C45 extends WeakMap {
    static c;
    static 6;
    static [-1];
    n(a47, a48) {
        const v49 = [v30,9007199254740991,a48,this,a48];
        super.set(v49, v49);
        return v31[10000];
    }
    constructor(a53, a54, a55, a56) {
        super(v32);
        a54[0];
        function f59() {
            return arguments;
        }
    }
}
new C45(v1, v30, 323140404, -10);
new C45(v1, v30, 9007199254740991, 536870912);
new C45(v32, v32, 323140404, -10);
([[65535,268435439,-9007199254740990,268435440,1024,19743,5,4]]).toLocaleString();
