const v2 = new Array(16);
let v4 = 13;
const v5 = -v4;
v2[16] ^= v4;
new Array(v4);
v4 = v5;
const o8 = {
};
try {
    o8.c = v4;
} catch(e9) {
}
try {
    const o10 = {
    };
    o10.c = v4;
    o10.h = Infinity;
} catch(e11) {
}
try {
    const o12 = {
    };
    o12.c = v4;
    o12.h = Infinity;
    o12.a = v2;
} catch(e13) {
}
try {
    const o14 = {
    };
    o14.c = v4;
    o14.h = Infinity;
    o14.a = Array;
} catch(e15) {
}
const v16 = new Array(v4);
-5.0 < -5.0;
class C21 {
    536870888 = v4;
    n(a23, a24, a25, a26) {
        this[Symbol.unscopables] = -5.0;
        const o29 = {
        };
        try {
            o29.g = v5;
        } catch(e30) {
        }
        try {
            const o31 = {
            };
            o31.g = v5;
            o31.e = 49.452507162019174;
        } catch(e32) {
        }
        try {
            const o33 = {
            };
            o33.g = v5;
            o33.e = 49.452507162019174;
            o33.c = this;
        } catch(e34) {
        }
        try {
            const o35 = {
            };
            o35.g = v5;
            o35.e = 49.452507162019174;
            o35.c = a26;
        } catch(e36) {
        }
        a24 / v16;
        return a25;
    }
    static g = Array;
    #e = 16;
    #h = 16;
    d = 49.452507162019174;
    static 9;
}
try { C21.call(49.452507162019174); } catch (e) {}
new C21();
new C21();
new C21();
let v42 = undefined;
const o43 = {
};
v42 = o43;
function F44() {
    if (!new.target) { throw 'must be called with new'; }
    const v46 = this.constructor;
    try { new v46(); } catch (e) {}
    let v48 = -128;
    v48--;
    this.g = v48;
}
F44.g = F44;
new F44();
new F44();
new Uint8Array();
