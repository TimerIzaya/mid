const v1 = new Date();
const v2 = [-2.0,0.6920108487058564];
[-2.0,5.647973426846272e+307,-9.718029542336065,1000000000000.0,-0.0,-4.2202240764539187e+307,0.7409717127619011];
const v4 = [0.8211798484976319,0.7763934598298372,9.656148450372974,0.632922789437111,NaN,0.003337836362642399,168106.5303352177];
class C5 {
    [v1];
    #m(a7) {
        const v8 = Date(v4);
        let v9;
        try { v9 = v8.setUTCMonth(a7); } catch (e) {}
        a7 = v4;
        try {
            v8.#m(this, Date, a7);
        } catch(e11) {
        }
        return v9;
    }
    8;
    [v2] = v1;
}
for (let v12 = 0; v12 < 5; v12++) {
}
v1[v4] += v4;
class C13 {
    #e;
    static 3;
}
C13.length = C13;
let v14;
try { v14 = new C5(); } catch (e) {}
const v15 = v14[8];
const v16 = new C5();
v16[8] = v16;
const v17 = new C5();
v17[8];
const v19 = new C5();
try { v19.valueOf(v15, v16, v19); } catch (e) {}
function f21() {
    const o25 = {
        "c": v14,
        valueOf(a23, a24) {
        },
    };
    try {
        f21(v2, o25, Date);
    } catch(e27) {
    }
}
try { new f21(); } catch (e) {}
v19[8] = v19;
const v29 = [-4294967295,-844138579,39580,-9007199254740992,1492820591,-4294967296,-8,3,697070597,-2];
let v30;
try { v30 = v29.reduceRight(C5); } catch (e) {}
const v31 = [-12,1000,129,2147483649];
v31[52] = v31;
const v32 = [4294967296,-27844,-47859,-1,-60867];
v32.length;
-1463633052n << -1463633052n;
try {
    try { Math.max(Math, v1); } catch (e) {}
    Math.g = Math;
    new v32(v32);
    const v42 = new gc();
    v42.constructor;
    v31.__proto__ = v1;
} catch(e44) {
    e44.name;
}
0n >>> 0n;
-1267208841n | -1267208841n;
const o61 = {
    ..."44184",
    [-15]: -15,
    "e": -1267208841n,
    __proto__: v30,
    [9]: -15,
    /*
    __proto__: v19,
    */
    [0n](a55, a56, a57, a58) {
        eval(eval, eval, a57);
    },
    2480: 9,
    ..."44184",
};
const v62 = o61[3];
try { v62.toWellFormed(); } catch (e) {}
