class C3 {
    static f = 1308446326n;
    constructor(a5) {
        new Array(63);
        const v9 = this;
    }
    static #c;
    a = 1308446326n;
    static 7 = 1308446326n;
    g = 1073741824n;
}
let v10 = new C3(1308446326n);
const v11 = new C3(-53403n);
new v11(1073741824n);
function F13(a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        try { this.splice(F13, v10, v10); } catch (e) {}
        let v19 = -9007199254740991;
        const v21 = v10++;
        a15--;
        v19 << a15;
        -v10;
        v19++ && v21;
        this.g = a15;
    } catch(e27) {
    }
    try {
        this.c = v11;
    } catch(e28) {
    }
    try {
        v11.e = 1073741824n;
    } catch(e29) {
    }
}
new F13(-53403n, 1073741824n);
const v33 = new Int8Array(5);
const v38 = new BigUint64Array(127);
v33[v38];
Proxy.sin();
324308659 + 324308659;
const v54 = new F13(1073741824n, F13);
new F13(1073741824n, v54);
const v58 = new Uint32Array();
function f59(a60, a61, a62, a63) {
    const o67 = {
        n(a65, a66) {
            v58[a60] = v58;
        },
    };
    new Int8Array(16);
    new Date();
}
for (let v74 = 0; v74 < 625; v74++) {
    f59(Uint8Array);
}
