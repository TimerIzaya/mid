let v14 = eval("");
const v15 = [Infinity,-686.9856326146617,0.47369378110968274,-7.24289104755818];
const v16 = [-1000.0,-2.2250738585072014e-308,511.99933163650917,-386.8372768814137,Infinity];
const v17 = v15.includes(v16);
v14 **= BigInt64Array;
v15[4] = "NaN";
try { v16.indexOf(Uint8Array); } catch (e) {}
const v22 = v15.length;
new Int16Array(128);
new Float32Array(2);
new BigInt64Array(0);
const v34 = new Date();
[-1.2067410927155266e+308,-574.7450146535717,-1000.0,-1000000000000.0];
const v36 = [-5.0,-876130.821131472,470723.5798576304];
const v37 = [0.05359354285491269,-2.2250738585072014e-308];
class C38 {
    static toString(a40, a41, a42) {
        try {
            const t18 = "-1424188532";
            t18.length = a41;
        } catch(e43) {
        }
        return a40;
    }
    static #n(a45, a46, a47) {
        try {
            const t26 = "byteLength";
            t26.f = v37;
            try { a45.valueOf(a47, "NaN", a45); } catch (e) {}
            const o49 = {
            };
            try {
                o49.a = v17;
            } catch(e50) {
            }
            try {
                const o51 = {
                };
                o51.a = v17;
                o51.e = this;
            } catch(e52) {
            }
            try {
                const o53 = {
                };
                o53.a = v17;
                o53.e = this;
                o53.b = Int8Array;
            } catch(e54) {
            }
            try {
                const o55 = {
                };
                o55.a = v17;
                o55.e = this;
                o55.b = v16;
            } catch(e56) {
            }
        } catch(e57) {
        }
        return v37;
    }
}
new C38();
const v59 = new C38();
const v60 = [v34,v59,-2n,"-1424188532"];
[Int8Array,"NaN",Date,[v36,eval,v15,v37,v22]];
Object.defineProperty(v34, v60, { writable: true, enumerable: true, get: Date });
const o63 = {
};
try {
    o63.h = 0;
} catch(e64) {
}
try {
    const o65 = {
    };
    o65.h = 0;
    o65.c = "";
} catch(e66) {
}
try {
    const o67 = {
    };
    o67.h = 0;
    o67.c = "";
    o67.f = Date;
} catch(e68) {
}
try {
    const o69 = {
    };
    o69.h = 0;
    o69.c = "";
    o69.f = v17;
} catch(e70) {
}
new C38();
class C72 {
}
class C73 {
}
const v74 = new C73();
function f76(a77, a78, a79, a80) {
    const v81 = a78 >>> a78;
    const v82 = v81 >>> v81;
    v82 != v82;
    for (let v84 = 0; v84 < 5; v84++) {
        try { new C72(v74, v84, Float32Array, ...v84, a78); } catch (e) {}
    }
    const v87 = Math.max(a78);
    v87 - v87;
    return v82;
}
for (let v89 = 0; v89 < 5; v89++) {
    f76(v89, v89);
}
%OptimizeFunctionOnNextCall(f76);
f76();
