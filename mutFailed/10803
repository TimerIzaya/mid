const v4 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v7 = new Uint32Array();
const v9 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v10 = [601759695];
const v11 = [1073741824,1073741823,1376142744,1073741825];
function f13(a14, a15, a16, a17) {
    function f19() {
        let v22 = Float64Array;
        v22 = a15;
        b = v10;
        const v23 = v4.length;
        try {
            v11.forEach(a15);
        } catch(e25) {
        }
        const v26 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v28 = Symbol.toPrimitive;
        const o34 = {
            "b": Symbol,
            "f": 2.0,
            "h": v10,
            "g": v23,
            __proto__: v28,
            toString(a30, a31) {
                const v32 = a17 && a15;
                a30 *= v28;
                v32 <= v26;
            },
        };
        const o59 = {
            "c": -4294967297n,
            [522675525n](a37, a38) {
            },
            "c": v10,
            valueOf(a40, a41) {
            },
            [v23](a43) {
            },
            [-1]: 2684,
            1073741824: v7,
            "maxByteLength": -268435456,
            "b": -4294967295,
            [-4294967297n](a45, a46, a47, a48) {
                class C50 extends Date {
                    static get c() {
                        eval();
                    }
                }
                for (let v54 = 0; v54 < 5; v54++) {
                    continue;
                }
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v9,
            set b(a56) {
            },
            256: a17,
            m(a58) {
            },
            ...v10,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            5: -4294967295,
            6: -268435456,
        };
    }
    f19();
    const v62 = new Int8Array();
    v62.buffer.slice(2147483648);
    %OptimizeFunctionOnNextCall(f19);
    let v67;
    try { v67 = v11["find"](..."find", a17, ...v10, ...v11, ...522675525n); } catch (e) {}
    v67 <= a16;
    return arguments;
}
const v70 = new BigInt64Array(2010);
Object.defineProperty(v70, 1000000.0, { writable: true, enumerable: true, get: f13 });
const v72 = new Map();
v72.size &&= 2010;
v10[1.1279318214569793e+308] = 522675525n;
const v75 = new Float32Array(2010);
new Int16Array(220);
function f80() {
}
class C81 {
    constructor(a83, a84, a85) {
    }
}
[0.3083488057663979,0.3083488057663979,0.3083488057663979,0.3083488057663979];
class C88 extends f80 {
    toString(a90, a91) {
        const v92 = C88.constructor;
        new v92(a91, v92, this, v92, C88);
        -C88;
    }
}
new C88();
const v98 = new Float32Array(10, 10, 10);
const v100 = new Float64Array();
v100[10] = v98;
try { v75.toString(); } catch (e) {}
