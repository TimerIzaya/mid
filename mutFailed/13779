let v0 = 8;
const v3 = /\P{Decimal_Number}/gvy;
const v4 = /z0U\P{Decimal_Number}+/vdi;
const v5 = /a\D/gvmy;
function f6(a7, a8) {
    a8 >> a8;
    const o24 = {
        m(a11, a12, a13, a14) {
            v5 >>> a12;
            const v16 = delete a13[a8];
            v16[6] = v16;
            let v18 = 4096;
            Math.tan(16);
            const v21 = 16 && 16;
            v18--;
            return v18 / v21;
        },
    };
    try { v4.test(a8); } catch (e) {}
    let v30 = 3;
    a8 * a7;
    v30--;
    Math.log1p(v3);
    return o24;
}
const v37 = f6(v5, 16)?.__lookupGetter__;
try { new v37(v3); } catch (e) {}
f6(v4, 666276582);
Object.defineProperty(v5, f6, { writable: true, enumerable: true, value: 0.17031329732910028 });
try {
    new f6(/p*/dm, "o");
} catch(e46) {
}
f6(v5, 666276582);
function f51(a52, a53, a54, a55) {
    const v58 = new Int32Array(a53);
    b = v58;
    v0 -= -1073741824;
    new f51(604177404n, Int32Array, v3, RangeError);
    2.3068252678748777 >> -1073741824;
    try { v58.find(-1073741824); } catch (e) {}
    v58[0] %= -1073741824;
    return v58;
}
f51.caller = f51;
%PrepareFunctionForOptimization(f51);
f51();
%OptimizeFunctionOnNextCall(f51);
f51();
