512 >>> 512;
function F5(a7, a8) {
    if (!new.target) { throw 'must be called with new'; }
    const v9 = this?.constructor;
    try { new v9(F5, a8); } catch (e) {}
    a7--;
    a8 / a8;
}
F5.arguments = F5;
new F5(512, 10000);
const v15 = /((x)(x)(x)\3*)/uis;
v15.b = v15;
const v16 = /\u003z/gy;
v16.f = v16;
const v17 = /(\1a)^(?=.)/vm;
v17.e = v17;
const v18 = [-1721240300,31519,-1795330341];
[2,536870889,12,-268435456,2147483648,4,9007199254740991];
[255,35292,-1073741824,9007199254740992,-9007199254740990,-256,27155,-55932];
const v23 = new Uint8Array();
const v25 = new Uint32Array();
try { v25.entries(); } catch (e) {}
function f27(a28, a29, a30, a31) {
    a28 - a28;
    a30--;
    a31 >>> a31;
    const v35 = a29--;
    v35 + v35;
    a31 + a30;
    const o41 = {
        "b": a28,
        "c": a31,
        ...v23,
        n(a39, a40) {
            v25[a28] = v25;
            return a40;
        },
    };
    try { o41.n(o41, -2); } catch (e) {}
    return a30;
}
let v44 = 64;
v44++;
function F47(a49, a50, a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    try { a50.call(); } catch (e) {}
    for (let v54 = 0; v54 < 50; v54++) {
    }
}
class C55 {
    constructor(a57, a58, a59) {
        this.h = a58;
        let {"h":v60,} = this;
        const o62 = {
            get f() {
                return this;
            },
        };
        o62.f = o62;
        let v63 = 0;
        do {
            function F64(a66, a67, a68, a69) {
                if (!new.target) { throw 'must be called with new'; }
                const v70 = this?.constructor;
                try { new v70(F64, a67, a66, F64); } catch (e) {}
                a67 - a67;
                a69 >= a69;
                try {
                    this.d = a59;
                } catch(e74) {
                }
                try {
                    this.h = 268435456;
                } catch(e75) {
                }
                try { BigInt64Array(BigInt64Array); } catch (e) {}
                class C78 {
                }
                try { C78(); } catch (e) {}
            }
            new F64(v60, -4.093311293679138, v18, v44);
            const v81 = new F64(v63, -4.093311293679138, 268435456, v60);
            new F64(1719159585, 0.0, v81, 1719159585);
            v63++;
        } while (v63 < 8)
    }
}
const v86 = new C55(268435456, -4.093311293679138, 1719159585);
const v87 = v86?.__defineGetter__;
try { new v87(f27, v86); } catch (e) {}
const v89 = new C55(1719159585, C55, 833183.8369009669);
const v90 = new C55(v44, 1719159585, v89);
v90.b = v90;
-65535n % -65535n;
let v93 = -2074262259n;
v93--;
class C95 {
    toString(a97, a98, a99, a100) {
        const v101 = this?.constructor;
        try { new v101(); } catch (e) {}
        function f103(a104) {
        }
        class C105 extends f103 {
            a = -65535n;
        }
        try { new C105(); } catch (e) {}
        return v93;
    }
}
try { C95.toString(); } catch (e) {}
const v108 = new C95();
for (let i = 0; i < 5; i++) {
    v108 + v108;
}
