class C3 {
    static #m(a5) {
        a5 << -1.7976931348623157e+308;
        let v7;
        try { v7 = new a5(); } catch (e) {}
        super[v7] = this;
        return a5;
    }
    set f(a9) {
        for (let v10 = 0; v10 < 32; v10++) {
            this["p" + v10] = v10;
        }
    }
    static [-268435456] = -1.7976931348623157e+308;
    d = -1.7976931348623157e+308;
    [-268435456];
    static 7;
    h = -1.7976931348623157e+308;
    [C3] = C3;
    e;
    [-1.7976931348623157e+308] = -268435456;
    static #h;
    b;
    e = -268435456;
}
try { new C3(); } catch (e) {}
const v14 = new C3();
v14.d;
new C3();
const v17 = new C3();
/Vnxyz{1,}?O7T/d;
const v19 = /T5a\sj/udm;
v19.hasIndices = v19;
const v20 = /d/gvimsy;
Object.defineProperty(v20, "d", { configurable: true, value: v20 });
try {
    v17.toString = C3;
} catch(e22) {
}
const v24 = -6263 % -6263;
let v26 = 1;
v26--;
let v29 = -440275401;
v29++;
function f31() {
    return f31;
}
f31.e = f31;
const v32 = [-9223372036854775808,58777,2];
v32[Symbol.isConcatSpreadable] = v26;
let v35;
try { v35 = v20.compile(-268435456); } catch (e) {}
v35.d = v26;
v35.d = v35;
const v36 = typeof f31;
try { ("object").strike(); } catch (e) {}
v36 === "object";
try { v35(v19, -268435456, v35, C3); } catch (e) {}
Int16Array[Symbol.isConcatSpreadable] = v24;
function f45(a46, a47) {
    new Int16Array("object", a46, a46);
    return v29;
}
f45(-268435456, v19);
Int16Array[Symbol.isConcatSpreadable] = f31;
const v52 = new Int16Array(v32, 8, 8);
v32.concat(8, v52, Int16Array);
