[-1000000000.0,-9.40635968842183];
[0.0,-148.27693838191533,0.7512253986201968,-3.709387204872554,4.0,-1.0,524.7125503811785];
const v2 = [1.7976931348623157e+308,848.4890583902215,0.6850824006179673,NaN,0.45408979164077234];
const v3 = [v2,v2,v2];
const v4 = [v3,v2];
const v5 = [v4,v2];
class C6 {
    [v3];
    static valueOf(a8, a9, a10, a11) {
        super[C6] = a9;
        new Int16Array(222);
        new a9(6);
        new Uint8ClampedArray(7);
        return v4;
    }
}
const v22 = new C6();
new C6();
const v24 = new C6();
/[^(?:a{5,1000000}){3,1000000}y7aC]/dm;
const v26 = /(?:a?)?(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10*/udm;
/3(?:a?)*0[\1111]+/dy;
const v31 = [1073741824,-2118633808,512];
const v32 = [-29229,-999678924,8,14,2123781013,642042458,869295091,23761];
const v33 = [-58942,-65537,835264087,973003550,9311];
function F34(a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a36;
    try {
        this.c = a37;
    } catch(e38) {
    }
    try {
        this.h = a37;
    } catch(e39) {
    }
    try {
        this.b = a36;
    } catch(e40) {
    }
}
new F34(v31, v31);
v5[4] = v4;
C6[v31].fround(v26);
const v47 = Math.floor(v24);
const v48 = v22 << v26;
Math.hypot(v24);
Math.tan(v48);
v47 && v26;
const v52 = !v24;
new C6(v33, v32);
new F34(v31, v33);
function F58() {
    if (!new.target) { throw 'must be called with new'; }
    class C60 {
    }
    for (let i63 = 0, i64 = 10;
        i63++, i63 < i64, v52;
        (() => {
            const v69 = [601759695];
            const v70 = [1073741824,1073741823,1376142744,1073741825];
            function f71() {
                for (const v75 of Array(4087)) {
                }
                return 4087;
            }
            f71();
            function f77(a78, a79, a80, a81) {
                a81 - a81;
                function f83() {
                    return a78;
                }
                function f84(a85, a86) {
                    return a85;
                }
                a79.length;
                try {
                    const o89 = {
                    };
                    f84(16n, o89);
                } catch(e91) {
                }
                try { f84(); } catch (e) {}
                f84(v70, C60);
                try { v70["find"](..."find", a81, ...v69, ...v70); } catch (e) {}
                return C60;
            }
            for (let v96 = 0; v96 < 10; v96++) {
                f77(v96, f77, i63, v96);
            }
        })()) {
    }
}
new C6();
new F58();
