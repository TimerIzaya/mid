function f1(a2, a3) {
    const v5 = new Date();
    v5.getSeconds();
    return f1;
}
%OptimizeFunctionOnNextCall(f1);
const v7 = new WeakMap();
Object.defineProperty(v7, "toString", { configurable: true, value: f1 });
class C8 extends WeakMap {
    [v7] = WeakMap;
    static #n(a10, a11) {
        const v12 = this.h;
        try {
            a11.#n(this, a11, a10, v12);
        } catch(e14) {
        }
        return v12;
    }
    12 = v7;
    #h = v7;
    d;
}
const v15 = new C8();
const v16 = new C8();
const v17 = new C8();
function f18(a19, a20, a21, a22) {
    const o33 = {
        ...a19,
        __proto__: v16,
        "d": a19,
        p(a24, a25, a26, a27) {
            a27[a22] = a22;
            +v7;
            v7 + 9;
            9 / C8;
            return a20;
        },
    };
    return o33;
}
function f34() {
}
[-4096,-1073741824,65537,9007199254740990,-4096];
const v36 = [1557591051,8137,536870888,-9223372036854775808];
255 * 255;
-16 <= -16;
v36 * v36;
const v42 = [];
try { v42.findIndex(); } catch (e) {}
const v44 = [];
v44[268435439] = v15;
[];
[];
let v48 = [];
const v53 = ~f34;
v53 & -v42;
v53 >> 536870889;
class C58 {
}
new C58();
class C60 {
}
const v61 = new C60();
v61[594532432] = v61;
const o63 = {
};
function f64() {
    return 6;
}
function f65(a66) {
    v48 = a66;
}
Object.defineProperty(o63, "b", { writable: true, enumerable: true, get: f64, set: f65 });
o63.b = o63;
v61[-16];
v44[268435439];
("symbol").replace("bigint").fontsize;
class C74 {
    #a = -2;
    constructor(a76, a77) {
    }
}
for (let i = 0; i < 5; i++) {
    const o79 = {
        "type": "symbol",
        "type": "symbol",
    };
    gc();
}
f18(v16, v7, C8, v16);
const v82 = f18(v17, C8, v17, v16);
f18(v17, v15, v16, C8);
const v89 = Array(1024);
function f90() {
    return v89;
}
function f91(a92) {
    function f93() {
        const v96 = Symbol.iterator;
        Math[v96] = v96;
        return Symbol;
    }
}
Object.defineProperty(v89, 495, { configurable: true, get: f90, set: f91 });
Uint8ClampedArray[0] = v82;
const t105 = Reflect.construct(Uint8ClampedArray, [Uint8ClampedArray]).constructor;
new t105(v89);
