const v0 = [1699604941,2,2147483647,-65536];
const v1 = [921799053,-52162];
const v2 = [64,128,-63335,212633518];
const v7 = [v1,5,-53364,[v0,1987589038,5,5,v0],1987589038];
[v2,-53364,v7,v7,v0];
[394317.51531898975,Infinity,319.7949886785989,124.86401414900774];
[1e-15,5.0,0.0,-1000000.0,-616.9967088932885,981.7712864928546,0.8474229610695129,-1.0,-1000000000.0,1.7976931348623157e+308];
[-2.220446049250313e-16,5.355618434848631e+307,2.220446049250313e-16];
class C12 {
}
for (let v14 = 0; v14 < 25; v14++) {
    const v15 = [1073741824,1073741823,1376142744,1073741825];
    function f16(a17, a18, a19, a20) {
        function f22() {
            return C12;
        }
        for (let v23 = 0; v23 < 5; v23++) {
            try {
                a17.__proto__ = Date;
            } catch(e24) {
            }
        }
        const v26 = new v7();
        try { a20.map(Date, v26); } catch (e) {}
        function f28(a29, a30) {
            return a17;
        }
        v14(v26, C12);
        f28.buffer;
        %OptimizeFunctionOnNextCall(f22);
        try { v15["find"](); } catch (e) {}
        function F36(a38, a39, a40, a41) {
            if (!new.target) { throw 'must be called with new'; }
            try { a39.call(a17, v14, v15); } catch (e) {}
            for (let v43 = 0; v43 < 25; v43++) {
            }
        }
        new F36(7.090076723213673e+307, 7.090076723213673e+307);
        return F36;
    }
    for (let v45 = 0; v45 < 5; v45++) {
        f16();
    }
}
