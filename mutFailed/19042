function f6() {
    return 544280688;
}
try { new f6(); } catch (e) {}
-9007199254740991 << -9007199254740991;
class C12 extends f6 {
    static o(a14, a15, a16) {
        const o19 = {
            "maxByteLength": 250,
        };
        const v21 = new SharedArrayBuffer(250, o19);
        Math.expm1(2089199205);
        (-2147483649) ** -806590221;
        Math.log1p(-2147483649);
        Math.asin(-2147483649);
        new Uint8Array(v21);
        return -9007199254740991;
    }
}
C12.caller;
const v32 = new C12();
function f33() {
    function f34() {
        return f34;
    }
    const v35 = /(?:a*)+q(?<a>.)/guds;
    function f36(a37) {
        const v38 = a37.constructor;
        const v40 = new Uint8ClampedArray();
        const v42 = v40 ^ 3;
        try { v38(a37, f34); } catch (e) {}
        class C44 {
        }
        return v42;
    }
    f36(v35);
    return f34;
}
v32[Symbol.toPrimitive] = f33;
const v48 = v32?.constructor;
try { new v48(); } catch (e) {}
function f50(a51, a52) {
    a52 | a51;
    a51.h ^= a51;
    Object.defineProperty(a51, 2147483649, { writable: true, enumerable: true, get: f6, set: f6 });
    return a52;
}
f50(5, "atanh");
new C12();
new C12();
try { ("async").fontsize(v32); } catch (e) {}
const v59 = ("async").lastIndexOf();
function f60(a61) {
    return v59;
}
class C62 extends f60 {
    g = "c";
    static 7;
    #g = -1;
}
