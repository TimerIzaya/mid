const v2 = new Uint32Array(168);
const v5 = new Uint32Array(255);
const v8 = new Float64Array(4096);
function f9(a10, a11, a12) {
    -a10;
    const o18 = {
        ...v8,
        get e() {
            try {
                super.valueOf(a11, a12);
            } catch(e16) {
            }
            function f17() {
                return a11;
            }
            return 4096;
        },
        "c": a11,
        "b": v2,
    };
    return o18;
}
f9(255, 255, 255);
const v20 = f9(168, 4096, Float64Array);
v20.e = v20;
f9(168, 255, v8);
class C23 {
    static {
        try { this.bind(v8); } catch (e) {}
        const v27 = Symbol.hasInstance;
        Symbol.for(v27.description);
        const v31 = delete C23?.c;
        Object.defineProperty(Symbol, v31, { writable: true, enumerable: true, value: v31 });
        try { v20.valueOf(v5, v20); } catch (e) {}
        try {
            v20.__proto__ = Symbol;
        } catch(e33) {
        }
        this[v27].name;
    }
    #p() {
        let v37;
        try { v37 = this.p(undefined, this, this, this, this); } catch (e) {}
        try {
            v37.#p(undefined, v37, v37, undefined);
        } catch(e39) {
        }
        return undefined;
    }
    static #a = undefined;
    c = undefined;
}
const v40 = new C23();
v40.g = v40;
const v41 = new C23();
v41.c;
let v43 = new C23();
const v44 = v43?.constructor;
try { new v44(); } catch (e) {}
function f46(a47) {
    a47.prototype = a47;
    const o53 = {
        15: a47,
        toString(a49, a50) {
            super.h = a50;
            try { C23.stringify(a47, a47, this); } catch (e) {}
            try {
                C23.c = v40;
            } catch(e52) {
            }
            return a49;
        },
        2147483647: undefined,
        __proto__: v41,
        "c": a47,
        ...a47,
        "f": a47,
    };
    o53[15];
    return o53;
}
const v55 = f46(C23);
f46(v43);
f46(v55);
-65536n !== -65536n;
[0.0,26.917886948179785];
[4.0,-6.418452896256084,1000000000.0,4.0,-2.220446049250313e-16,-1000000000.0];
const v64 = [883.1365358956336,-266.1024094651509,-5.0,1.4118854267221805e+308,-786614.3512895996];
let v65;
try { v65 = v64.map(C23); } catch (e) {}
const v66 = v55 > C23;
v5.byteOffset ||= 4096;
Object.defineProperty(v20, 1073741823, { writable: true, configurable: true, enumerable: true, set: f46 });
f46 = v65;
v43 = C23;
v65 || v40;
const v68 = v66 ? v55 : C23;
try { v68.call(4096); } catch (e) {}
for (let i71 = 0;
    (() => {
        const v73 = i71 < 5;
        const v74 = new Uint32Array(v40, i71, 255);
        C23 !== v74;
        let v76;
        try { v76 = v74.sort(f9); } catch (e) {}
        v76 = v55;
        function f77() {
            return v40;
        }
        return v73;
    })();
    i71++) {
    try {
        const v81 = new f46(v55);
        try { v81.toString(Uint32Array, i71); } catch (e) {}
    } catch(e83) {
    }
}
