[536870887,9846,316348013,-65536,-871173054];
const o1 = {
};
o1.o();
new BigInt64Array([63570]);
[-4294967296,-9223372036854775807];
[-1073741824,-256,-3387,268435439,43547,3,4,255,19206,3];
new Int16Array(1);
new Uint8ClampedArray(223);
const v17 = ["function",/xEz\xe2\x81\xa3/gumy];
const o18 = {
    "arguments": v17,
    "type": "function",
};
const v20 = /5mxyz{0,1}?/gimsy;
const v22 = new Int16Array(v20);
const v24 = new BigUint64Array();
const o25 = {
    __proto__: v20,
};
for (let v26 = 0; v26 < 25; v26++) {
    const v27 = v24.byteLength;
    v22[v27] += v27;
    o25[65536];
}
new Uint16Array(1000);
const v31 = [1024];
function F32(a34) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = v31;
}
const v35 = new F32();
const v36 = new F32();
function F38(a40, a41, a42) {
    if (!new.target) { throw 'must be called with new'; }
    const v43 = this.constructor;
    try { new v43(a42, 10n, a42); } catch (e) {}
    a41.c = a41;
    a42.e = a42;
}
new F38(v35, v36, v31);
Array(223);
const v50 = [-4];
try {
    new BigUint64Array(v50);
} catch(e52) {
}
parseInt("pop");
v17[8];
new Float64Array();
gc();
