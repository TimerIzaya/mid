const v0 = /\x01ab|chxa[a-z]/vmy;
const v1 = /\p{Script=Greek}/vimsy;
const v2 = /F\u0034/gvdimy;
class C3 {
    #p(a5) {
        function f6(a7) {
            try {
                a7.exec("bigint");
            } catch(e10) {
            }
            return v2;
        }
        return f6(v2);
    }
    static #c = v0;
    #e = v0;
    [v0] = v2;
}
const v12 = new C3();
const v13 = new C3();
const v14 = new C3();
class C15 {
    7 = v13;
    8 = v14;
    static [v2];
    268435439 = v0;
    constructor(a17, a18, a19) {
        Math.atanh(-777551663);
        Math.cbrt(a19);
        -4.0;
        Math.sign(-777551663);
        Math.abs(4.0);
    }
    static e = v14;
}
new C15(v0, v12, v13);
const v29 = new C15(v14, v2, v1);
new C15(v2, v29, v14);
/vP(?<a>.)\k<a>1U?/v;
const v32 = /a(?!b)(\2)(\1)/guy;
/Rzao(?=.)/gudms;
class C40 {
    c = -261.99102172609366;
    ["localeCompare"];
    static [v32];
    toString(a42, a43) {
        do {
            function F45(a47, a48, a49, a50) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.a = "localeCompare";
                } catch(e51) {
                }
            }
        } while (0 < 6)
    }
}
const v54 = new C40();
const v55 = new C40();
const v56 = new C40();
function F57(a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e61) {
    }
    try {
    } catch(e62) {
    }
}
const v63 = new v55(C40, v55);
const v66 = new Float64Array(147);
const o67 = {
};
try { new C40(...-1.0, v63, v54, v56, F57, ...v66); } catch (e) {}
const o69 = {
};
