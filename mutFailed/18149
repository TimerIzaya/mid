const v0 = [1000000.0,-8.246641642619517];
const v1 = [NaN,867081.7629704983,-2.220446049250313e-16,1000000000.0,8.420406195908158e+307,2.0];
const v2 = [-3.0,952.1054171388887,404324.27216332033,-1000000000000.0,1.7976931348623157e+308,-2.0,Infinity,2.0];
function f4(a5, a6) {
    function f8(a9) {
        this[3] = a5;
    }
    this.onmessage = f8;
}
const v15 = [Worker,"function"];
const o16 = {
    "arguments": v15,
    "type": "function",
};
new Worker(f4, o16);
class C20 {
    [v0];
    static 129 = -6.441557670402009;
    static p(a22, a23) {
        function f24() {
            return -6.103153651107238;
        }
        return a23;
    }
    [-6.103153651107238];
    static #b;
    constructor(a26, a27, a28) {
        try {
            const o29 = {
            };
            v2.findLastIndex(a28, o29);
        } catch(e31) {
            const v32 = [-536870912,-1454443390,-11,536870887];
            let v34;
            try {
            const t0 = 65536n;
            v34 = t0(65536n);
            } catch (e) {}
            v32[65536n] *= v34;
            const v36 = new Date();
            new v1(v36);
        }
    }
}
new C20(C20, -1000000000000.0, -6.441557670402009);
const v39 = new C20(-1000000000000.0, -6.441557670402009, v1);
new C20(-6.103153651107238, -6.103153651107238, v39);
const v43 = new Int16Array(2101);
new BigUint64Array(16);
new Uint32Array(127);
207 + 207;
new Float32Array(207);
let v57 = 10;
for (; v57--;) {
    for (let v59 = 0; v59 < 32; v59++) {
        v43["p" + v59] = v59;
    }
}
let v62 = 14;
v62--;
function F65() {
    if (!new.target) { throw 'must be called with new'; }
}
const v67 = new F65();
const v68 = [-6.695596969959072];
const v69 = [1.7976931348623157e+308,-2.2250738585072014e-308];
function f70() {
    return v68;
}
function f71(a72, a73, a74, a75) {
    a72[Symbol.toPrimitive] = f71;
    function f78(a79) {
        return v68;
    }
    a74.valueOf = f78;
    try { a72.group(f70); } catch (e) {}
    return f71;
}
f71(v68, v69, v67);
try { new Uint8ClampedArray("symbol", v62, 207); } catch (e) {}
const v83 = new Uint8ClampedArray(v62);
new Uint32Array(4096);
const v88 = 220 >> 220;
const v90 = new BigUint64Array(220);
const v91 = v90[42];
const v94 = new Uint32Array(958);
v94.g = v94;
const v97 = new Int8Array(3844);
v97[372] = v97;
let v100 = -1024n;
class C101 {
    set c(a103) {
        v100 = 0n;
        a103 += 0n;
    }
    constructor(a105, a106, a107, a108) {
        C101 >>> v97;
    }
    static [v94] = v91;
    128 = "Cl";
    m(a111) {
        let v112;
        try { v112 = new this(a111, -490778482n, this); } catch (e) {}
        this.c |= v112;
        return a111;
    }
    static 1;
    static h = -490778482n;
    static #f = v100;
}
try { new C101(); } catch (e) {}
new C101();
new C101();
const v116 = new C101();
[1.7976931348623157e+308,0.15227894183030433,-2.0,259880.3330397869,0.0,-1e-15,360683.0243419355,-1e-15,1.7976931348623157e+308];
const v119 = [0.03568519099872258];
try { v119.join(v90); } catch (e) {}
const v121 = [462318.599710946,0.6123807977566038,-0.0,-108306.02593608841,Infinity,0.0,-4.0,-1000.0];
try { v121.at(4096); } catch (e) {}
class C123 {
    static {
        const v127 = new SharedArrayBuffer(255);
        const v129 = new Uint8ClampedArray(v127);
        v129[185] = v129;
        this >> "Cl";
        super[this] = v88;
    }
    [Float32Array];
    static 3518;
    static 2147483648;
    static #valueOf(a132, a133) {
        v116[null] ||= a132;
        const v134 = v119.__proto__;
        try { v134(this, a132, v100, v134, this); } catch (e) {}
        return v119;
    }
    [v100] = v100;
    2;
    static #h = null;
    constructor(a137, a138, a139) {
        new Uint8Array(1024);
        new Int32Array(2);
        new Uint16Array(2277);
    }
    #a = null;
}
new C123();
const v150 = new C123();
v150[2];
new C123();
const v155 = new Uint8Array();
try { v155.entries(); } catch (e) {}
function f157(a158, a159, a160, a161) {
    const v162 = a160 === a160;
    a160++;
    const o164 = {
        ...v155,
    };
    function f165() {
    }
    function f166(a167) {
        const o168 = {
        };
    }
    function f172(a173, a174, a175) {
        const o182 = {
            m(a177, a178) {
                return v162;
            },
            ...v83,
            m(a180, a181) {
                return a180;
            },
            "h": a175,
        };
        return o182;
    }
    f172(-3.9870582640049523, -3.9870582640049523, 1000000.0);
    const v184 = f172(1000000.0, -3.9870582640049523, 1000000.0);
    f172(-3.9870582640049523, -2.2250738585072014e-308, -3.9870582640049523);
    let [,v187,...v188] = "toString";
    try { v184["toString"](1000000.0); } catch (e) {}
    const v191 = 3844;
    f172 >>> v62;
    v184["toString"]();
}
for (let v194 = 0; v194 < 500; v194++) {
    f157(Uint8Array, 2, v194);
}
