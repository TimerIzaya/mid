let v1 = -7.914929480605382e+306;
class C3 {
    n(a5, a6) {
        function f8(a9, a10) {
        }
        function f11(a12, a13, a14, a15) {
            const o16 = {
            };
            return o16;
        }
        function F17(a19) {
            if (!new.target) { throw 'must be called with new'; }
            const o20 = {
                "preventExtensions": a5,
                "setPrototypeOf": f8,
            };
            new Proxy(this, o20);
            const v23 = this?.constructor;
            try { new v23(); } catch (e) {}
        }
        new F17();
        const v27 = v1++;
        const v28 = v1 | v27;
        a5 / 2.2250738585072014e-308;
        const v30 = v1 / v27;
        const v33 = new Float64Array(257);
        v33.lastIndexOf(4);
        !(v30 || v28);
        v1 / v28;
        return -16;
    }
}
function f39() {
    return f39;
}
const o41 = {
    "execution": "async",
};
const v42 = new C3();
new C3();
new C3();
const v45 = [1073741825,40601,-8,9,-4,5,51051,-12933];
const v46 = [1707825534,15,23341,64,15,7,2,-53573,13];
[-1024,536870887,64,-9007199254740990,10,-1844121784,-1522820864,1024,-4315];
class C48 extends v46 {
    static d = -16;
    static set e(a50) {
        try {
            const t48 = "async";
            t48.g = -16;
        } catch(e51) {
        }
    }
    h;
    static [-16] = v42;
    g;
    #d = v45;
    [v46];
}
new f39();
new C48();
new v1();
const v56 = Int8Array.prototype;
try { v56.reverse(); } catch (e) {}
