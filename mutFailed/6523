function f1() {
    const o12 = {
        set f(a3) {
            let v2 = this;
            ({"e":v2,"h":v2,} = v2);
            super.c;
        },
        "g": false,
        4: false,
        __proto__: false,
        "b": false,
        [false]() {
            const v6 = [this,this];
            const v8 = [[this,v6,false],v6];
            const o9 = {
            };
            new Proxy(v8, o9);
            return v6;
        },
    };
    return o12;
}
f1();
f1();
f1();
class C17 {
}
const v18 = new C17();
function f19() {
    return v18;
}
Object.defineProperty(v18, "b", { enumerable: true, get: f19 });
const v21 = new BigInt64Array(5);
const v24 = new Uint8Array(3435);
const v27 = new Int8Array(1024);
const v28 = [132407.95535006677,-740351.574489784,-354302.93738716515,-1.7976931348623157e+308,1000000000000.0,-1000000000.0,-241890.17535367399];
const v29 = [813.6076092941089,1e-15,-2.150598658798801,2.0,1.0,2.2250738585072014e-308,704776.8566089759,279889.1221841371,932.1051930246581,-4.0];
class C30 {
    constructor(a32, a33) {
        super.g;
        const v35 = this.constructor;
        try { new v35(); } catch (e) {}
        new f1();
        super[f19];
        const o41 = {
            "maxByteLength": 1682,
        };
        const v43 = new SharedArrayBuffer(1682, o41);
        new Int16Array(v43);
    }
    #h;
    10 = v29;
    /*
    constructor(a49, a50) {
        for (let v51 = 0; v51 < 10; v51++) {
            v21[-1];
            try {
                super.o();
            } catch(e54) {
            }
        }
    }
    */
}
for (let [...v55] of v27) {
    const v56 = v28[C17];
    try { v27.lastIndexOf(v56, 5); } catch (e) {}
}
const o58 = {
};
try {
    o58.g = v24;
} catch(e59) {
}
try {
    const o60 = {
    };
    o60.g = v24;
    o60.a = Int8Array;
} catch(e61) {
}
try {
    const o62 = {
    };
    o62.g = v24;
    o62.a = Int8Array;
    o62.d = Uint8Array;
} catch(e63) {
}
try {
    const o64 = {
    };
    o64.g = v24;
    o64.a = Int8Array;
    o64.d = v27;
} catch(e65) {
}
new C30();
new C30();
class C68 extends C30 {
    constructor(a70, a71) {
        super();
        const v74 = new Int8Array();
        v74.lastIndexOf();
    }
}
new C68();
new C68();
const v79 = new C68();
function f80(a81, a82, a83) {
    try {
        v24.buffer = v79;
    } catch(e84) {
    }
    a82 >> a81;
}
