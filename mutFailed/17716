const v1 = new Uint16Array();
const v2 = [Uint16Array,v1,Uint16Array,v1];
[Uint16Array,[v2,v2,v2],v1,v1];
const v5 = [-1000000000.0,1.7743297500133253e+308,1.7976931348623157e+308,-3.663263579926027e+307,-215476.88039333513];
const v6 = [-306.82259378580204,8.209336833005018e+307,2.0,0.0,3.0,-3.0,-1000000000.0];
const v7 = [-Infinity,1e-15,-2.220446049250313e-16,-6.208663656722074,4.916625719807233e+304,953962.7275127948,2.220446049250313e-16,2.548310995043151];
function F11(a13, a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = v2;
    } catch(e16) {
    }
    try {
        this.c = a15;
    } catch(e17) {
    }
    try {
        this.f = v6;
    } catch(e18) {
    }
}
new F11(v5, v5, "subarray");
new F11(v6, F11, Uint16Array);
const v21 = new F11(v7, v7, v6);
function f22() {
    const o23 = {
    };
    return o23;
}
const v24 = f22();
const v25 = f22();
const o30 = {
    ["c"]: "toString",
    set e(a28) {
    },
    get e() {
        return "c";
    },
};
for (let v31 = 0; v31 < 25; v31++) {
    const v32 = [601759695];
    const v33 = [17313,-1775645121,-14049,0];
    function f34(a35, a36, a37, a38) {
        const v39 = a36.e;
        for (let i = 0; i < 10; i++) {
            /[xyz{1,}(O)]/udis;
        }
        v21.constructor;
        const v43 = new BigInt64Array();
        const v44 = [0.22765518540216179,1000000000000.0,95110.62484655366,1000000000.0,3.436859148069951,-0.0,2.0,-5.0];
        const v45 = [-102.00254877873078,4.124955647620156e+306,-2.0,-553429.805328496,-2.2250738585072014e-308,3.0];
        const v46 = [513779.5906574144,1.7409613810254415e+307,98.0881888203628,0.0];
        function f47(a48, a49) {
            a48[7];
            const o58 = {
                ...a48,
                ...v44,
                [v44](a52, a53) {
                    a53[v43];
                    const v55 = a49.length;
                    a48 == v55 ? a48 : v55;
                    return a49;
                },
                __proto__: v43,
                ...v46,
                "MAX_VALUE": v45,
                "matchAll": a49,
                [a49]: a49,
            };
            return o58;
        }
        const v59 = f47(v44, v44);
        f47(v46, v44);
        f47(v45, v45, v2);
        class C63 extends BigInt64Array {
            [v59];
            static [-2];
            #p(a65, a66, a67) {
                a66.__proto__;
                let v69 = 0;
                do {
                    try {
                        v45.toString = f47;
                    } catch(e70) {
                    }
                    v69++;
                } while (v69 < 3)
                return this;
            }
        }
        try { v39(a38, v39, v31, f22); } catch (e) {}
        a35[4] = a35;
        a36[4] = a36;
        try { v33["find"](..."find", a38, ...v32, ...v33); } catch (e) {}
        return v32;
    }
    Uint32Array[2] = v31;
    [-2];
    function f79(a80) {
        return v25;
    }
    for (let v81 = 0; v81 < 5; v81++) {
        Math.sin(-9007199254740991);
        function F85(a87) {
            if (!new.target) { throw 'must be called with new'; }
        }
        f34(v24, v25, f22);
    }
}
function F92(a94, a95) {
    if (!new.target) { throw 'must be called with new'; }
    const v96 = this.b;
    try { new v96("a"); } catch (e) {}
    try { a94.valueOf(); } catch (e) {}
    try {
        this.f = "-2147483648";
        9n >>> 9n;
    } catch(e101) {
    }
}
F92.arguments = F92;
new F92();
new F92();
