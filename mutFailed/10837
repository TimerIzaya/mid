class C4 {
    m(a6, a7) {
        super[a7];
        a7?.[11];
        return 5.0;
    }
    constructor(a11) {
        class C12 {
            static [11] = this;
            static d = 11;
            static [this] = this;
        }
        new C12();
        new C12();
        new C12();
    }
}
function f17() {
    function f18() {
        return f18;
    }
    Object.defineProperty([-3,257], 10, { writable: true, configurable: true, enumerable: true, set: f18 });
    return 9;
}
const v24 = [-1000000.0,771279.5641904315,0.0,8.299995604235331,6.625300935335886,-820.4949035918538,-602.5256799896665,0.6342705996691437,Infinity];
const v25 = [1000000000.0,4.0,5.0,-6.555298893133851e+307];
for (let v26 = 0; v26 < 5; v26++) {
    v25.unshift(-463330.04816285486, v24.values());
}
[-1000000.0,0.833637538568884,1.520781145867405e+308];
[-1e-15,2.220446049250313e-16,-922826.8842691905,-5.737286290850815e+306,0.5666024869996918,241.16065259173206,3.1632668876967287,-396268.3523628161];
[0.5803803482231398,-2.0,0.0422558125976602,-1000000000000.0,-361.5952771090672,-2.0,-1000000000000.0,600.8231778872928,-8.347146118221039,123.9820276080361];
-Infinity;
class C37 {
    static #a;
    static n(a39, a40) {
        const v41 = super.d;
        try { v41(); } catch (e) {}
        return a39;
    }
    [1];
    static [1] = 255;
    [255];
    f = -65536;
}
try { ("1O6N").localeCompare("bigint", "1O6N"); } catch (e) {}
try {
    Array(-12302);
} catch(e49) {
}
const v50 = new C37();
function F52() {
    if (!new.target) { throw 'must be called with new'; }
}
const v54 = [-268435456,-9007199254740990,11,-25356,-536870912,4294967296,1520296454];
const o55 = {
    __proto__: v54,
};
try { o55.group(F52); } catch (e) {}
try { v50.m(1n, 10000n, 10000n, 1); } catch (e) {}
f17(255, 255, 1n);
function F65(a67) {
    if (!new.target) { throw 'must be called with new'; }
    class C68 {
        constructor() {
            const v70 = this.constructor;
            try { new v70(); } catch (e) {}
            super.f >>= this;
        }
    }
    new C68();
}
new F65(F65);
new F65();
