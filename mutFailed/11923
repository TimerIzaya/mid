const v2 = -Infinity;
class C3 {
    3520;
    o(a5, a6) {
        this[4] = this;
        this[127] += 127;
        new Float32Array(-2147483649);
        function f11() {
            const o13 = {
                "c": Array,
            };
            const t11 = o13.c;
            const v16 = t11().forEach(Uint32Array);
            for (const v19 of Array(4087)) {
            }
            return v16;
        }
        f11();
        return -2147483649;
    }
    #h = v2;
    #e;
    f = v2;
    a;
}
const v23 = new BigUint64Array(256);
v23.toSorted();
class C28 {
    static #a;
    static n(a30, a31) {
        const v32 = super.d;
        try { v32(); } catch (e) {}
        return a30;
    }
    [1];
    static [1] = 255;
    [255];
    f = -65536;
}
new C3();
new C3();
const v36 = new C3();
const v38 = [[v36,-2147483649],v2,-2147483649,-2147483649];
[127,v38,v38];
const v40 = [9,1073741825,-4096,10,1,4294967297,911296943,-9223372036854775808,-53393,16];
([2147483648,-9223372036854775808,1073741823,-5827,17147,6507,0,255,61798])["some"](256, v40);
const v46 = new Uint8ClampedArray(104);
v46.toLocaleString();
class C48 extends C3 {
    static #p(a50, a51, a52, a53) {
        const o57 = {
            __proto__: 2,
            ...2,
        };
        new Float32Array(201);
        new Uint16Array(1397);
        const v65 = new Uint16Array(1);
        return v65;
    }
}
new C48();
new C48();
new C48();
([NaN,3.0])["concat"](-483497369);
