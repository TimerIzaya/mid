const v3 = [-394886428,-12,-1012117410];
const v4 = [-1012117410,-394886428,-12,-12,-1012117410];
[v4,-394886428,-394886428,v4];
const v6 = [-1012117410];
try { v6.copyWithin(v3, v3); } catch (e) {}
const v8 = [v3];
const v9 = [v8,-12,v8];
const v10 = v9[1];
const v13 = new Int32Array(10, -12);
try { v13.reduceRight(v10); } catch (e) {}
-9;
const v17 = 9 * 9;
new Uint32Array(9);
127 >> 127;
new Int16Array(127);
let v25 = "max";
const v26 = v25?.constructor;
try { new v26(v25); } catch (e) {}
try { new v26(v25); } catch (e) {}
try { ("h").toWellFormed(); } catch (e) {}
1073741824 | 1073741824;
65536 & 65536;
class C35 {
    set a(a37) {
        v25 = this;
        const o38 = {
        };
        o38.g = v25;
        const o39 = {
        };
        o39.g = v25;
        const o40 = {
        };
        o40.g = v25;
        const o41 = {
        };
        o41.g = v25;
    }
}
C35.arguments = C35;
const v42 = new C35();
v42.g = v42;
const v43 = v42?.constructor;
try { new v43(); } catch (e) {}
const v45 = new C35();
new C35();
function F47(a49, a50, a51) {
    if (!new.target) { throw 'must be called with new'; }
    -a49;
    a50.g = a50;
    a51.g;
    const v54 = this?.__lookupGetter__;
    v54.name = v54;
    try { new v54(this); } catch (e) {}
    a50.e = a50;
}
const v56 = new F47(1073741824, F47, v42);
v56.toStringTag = v56;
const v57 = new F47(1073741824, v25, v25);
const v58 = v57?.constructor;
try { new v58(Int32Array, v17, "h"); } catch (e) {}
v57.c = v57;
const v60 = new F47(65536, "NapmW", v42);
v60.__proto__;
const v62 = v60?.constructor;
try { new v62(v42, v8, v42); } catch (e) {}
const t66 = "NapmW";
t66[v57] = "h";
try {
    v45.fuck(v25, "h");
} catch(e65) {
}
C35 += v25;
v9[v57] &= v43;
try { ("replaceAll").toUpperCase(v10); } catch (e) {}
try { ("NapmW")["replaceAll"](..."replaceAll", ...v10, ...Uint32Array, ...v42, ...Int32Array, -12); } catch (e) {}
v25[Symbol.search];
const v72 = new F47(65536, F47, v42);
const v73 = v72?.constructor;
try { new v73(v56, v6, C35); } catch (e) {}
[-1.0,-2.2250738585072014e-308,2.0,-3.0,5.832977280432409,1e-15];
const v76 = [1000000000000.0,-213862.531301692,3.0,242.58489644386714,-Infinity,-8.01478763060209,-4.3475874202234617e+307,NaN,-1000000.0];
let v77;
try { v77 = v76.push(v6); } catch (e) {}
v77 <= v77;
const v79 = [6.578674051799194e+307,-1e-15,-3.0,0.6097660113731397,-1000.0,-1000000000000.0,1000.0,Infinity];
try { v79.map(-394886428); } catch (e) {}
