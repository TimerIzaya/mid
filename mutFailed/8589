const v3 = [1073741825];
function f4(a5) {
    new v3();
    const v7 = /[abc+]/gvdim;
    [v7,v7,v7,v7];
    return a5;
}
v3.valueOf = f4;
const v9 = v3?.constructor;
try { new v9(1073741825); } catch (e) {}
const v11 = [536870887,v3,1073741825,1073741825];
v11.valueOf = f4;
try { v11.reduceRight(536870887); } catch (e) {}
const v13 = [3,536870887,3,v3,1073741825];
try { v13.propertyIsEnumerable(536870887); } catch (e) {}
class C15 {
    constructor(a17, a18, a19, a20) {
        function f21(a22, a23) {
            new Uint16Array(512);
            new Uint8Array(9);
            new Float32Array(4);
            return a19;
        }
        Object.defineProperty(a18, Symbol.toPrimitive, { enumerable: true, value: f21 });
        a19[Symbol.toPrimitive] = f4;
        a20[Symbol.toPrimitive] = f21;
        try { this.propertyIsEnumerable(a20); } catch (e) {}
        try { a17.map(536870887); } catch (e) {}
        a18++;
        try { a19.group(536870887); } catch (e) {}
        if (v3 < a19) {
            v11[a19];
        } else {
            try {
                v13.slice(1073741825, 559057204);
            } catch(e47) {
            }
        }
    }
}
try { C15.apply(3, v13); } catch (e) {}
const v49 = new C15(v11, 536870887, v13, 3);
function f50(a51, a52) {
    Object.defineProperty(v13, "length", { writable: true, enumerable: true, set: f4 });
    const v53 = [1073741824,-2118633808,512];
    function F54(a56, a57) {
        if (!new.target) { throw 'must be called with new'; }
        this.h = a56;
        try {
            this.c = a57;
        } catch(e58) {
        }
        try {
            this.h = a57;
        } catch(e59) {
        }
        try {
            this.b = a56;
        } catch(e60) {
        }
    }
    const v61 = new F54(v53, v11);
    return v61;
}
v49.constructor = f50;
try { v49.constructor(v11, v3, 3, v11); } catch (e) {}
const v63 = new C15(v11, 536870887, v13, 1073741825);
v63[Symbol.toPrimitive] = f4;
const v66 = v63?.constructor;
try { new v66(v49, v63, v11, v63); } catch (e) {}
const v68 = new C15(v3, 3, v3, 3);
class C69 extends C15 {
    m(a71, a72) {
        const o73 = {
        };
        try {
            o73.f = a71;
        } catch(e74) {
        }
        try {
            const o75 = {
            };
            o75.f = a71;
            o75.h = v63;
        } catch(e76) {
        }
        try {
            const o77 = {
            };
            o77.f = a71;
            o77.h = v63;
            o77.d = v3;
        } catch(e78) {
        }
        try {
            const o79 = {
            };
            o79.f = a71;
            o79.h = v63;
            o79.c = this;
        } catch(e80) {
        }
        return v68;
    }
}
C69.prototype = C69;
new C69();
new C69();
new C69();
const v85 = (2136873598).constructor;
v85.prototype = v85;
v85().toExponential();
