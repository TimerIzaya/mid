function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a5;
    } catch(e6) {
    }
}
const v7 = new F3(9007199254740992n);
const v8 = new F3(268435440n);
const v9 = new F3(268435440n);
268435440n & v8;
v8[7] = 9007199254740992n;
try { v9(); } catch (e) {}
const v13 = v7[-1.0943487732637607e+308];
try { v7.m(v13, 268435440n, v8); } catch (e) {}
[-Infinity];
[-1000000.0,-1000000000.0,-6.641550553786543e+307,4.0,-315844.54091832903,3.0,-Infinity,1e-15,-159782.61699422472,-1.5631124364994247e+308];
[0.8175636246051271,5.0,-612.0223420097668,0.9862835634633128,3.0,4.0,0.6042083966186722,NaN,-999.6282066450946,-3.0];
[19957,-45551,6];
[61538,13,-26600,-3,536870889,47302,268435456,536870912,-268435456];
[1413647393];
let v25;
try { v25 = v8.getMinutes(); } catch (e) {}
function f26() {
    return v25;
}
let v30 = -(-1e-15);
v30--;
Math.sinh(v30);
