const v0 = [];
class C7 {
    static f = 536870887n;
    get buffer() {
        let v9;
        try {
        const t0 = 536870887n;
        v9 = t0(-30497n, 7n, v0, this);
        } catch (e) {}
        const v10 = (a11, a12) => {
            try { new v9(a11, a12, -1388782568, a11); } catch (e) {}
            v9 + -30497n;
            a11++;
            return -1388782568;
        };
        return -1388782568;
    }
    #a;
    [v0];
}
const v16 = new C7(17261, -1388782568, -1388782568);
new v16();
const v18 = new C7();
class C19 {
    m(a21, a22) {
        C7 != v16;
        super[v0];
        try {
            v18.e = this;
        } catch(e25) {
        }
        return -30497n;
    }
    b;
    [536870887n];
    b;
    static #d = 7n;
}
new C19();
new C19();
new C19(v16, v18);
const v29 = /\118/;
const v30 = /Az/gdmsy;
try {
    gc(256);
    const v37 = /((?<=a))/gudm;
    v37.b = v37;
    const v38 = /gk4b*/vmsy;
    let v40;
    try {
    const t0 = -1.3832922122240728e+307;
    v40 = t0(2);
    } catch (e) {}
    for (let v41 = 0; v41 < 5; v41++) {
        const v42 = v41++;
        Object.defineProperty(v38, -9223372036854775808, { enumerable: true, set: gc });
        const v48 = v30["test"](v42);
        v41 < 1;
        try { v40(v37, v41, v38, v41, 256); } catch (e) {}
        Symbol.iterator;
        const o56 = {
            [v48]() {
                const o55 = {
                    next() {
                        return v38;
                    },
                };
            },
        };
    }
    new Map("268435441");
} catch(e58) {
}
/(?:a?)*5N\x0f/vsy;
class C60 {
}
const v64 = new Int8Array(8);
try { Reflect.set(v29, v30, v29); } catch (e) {}
const v68 = Reflect.construct(Uint16Array, [v64]);
v68[7] = v68;
class C72 {
    get a() {
        const o74 = {
        };
    }
}
class C75 {
    static {
    }
}
for (const v78 in "1487412280") {
}
