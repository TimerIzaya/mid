let v2 = "I7";
class C3 {
    n(a5) {
        const v6 = super.h;
        const v8 = new Date();
        v8.toLocaleString();
        536870912n << 536870912n;
        v2 ^= v6;
        Math.clz32(v6);
        Math.sqrt(257);
        this + 257;
        return -4294967297;
    }
    4259938026;
    9;
    constructor(a19, a20) {
        function f21(a22) {
            return this;
        }
        const o25 = {
            "type": "function",
        };
        new Worker(f21, o25);
    }
    static e;
    [-6.760596112952015e+307] = -4294967297;
}
new C3();
new C3();
const v29 = new C3();
const v30 = /(Z)/gvdms;
/(?!\1(a\1)\1)\1[Y2Oa\Bb]/udim;
const v32 = /[^Q(?<!)]/vdmy;
Math.cos(-7);
const o48 = {
    [null]() {
        const v38 = /W(jy2)/udy;
        const v40 = new Uint8Array();
        for (let v41 = 0; v41 < 500; v41++) {
            const o45 = {
                ...v40,
                n(a43, a44) {
                },
            };
        }
        for (let v46 = 0; v46 < 5; v46++) {
            v46 === v38;
        }
    },
};
[v32,C3,v29];
function F50(a52, a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
}
const v58 = new Float32Array(128);
v58.includes(1024);
[v29,v30];
[v32,v32,v2];
const v66 = [1000.0,-1000000000000.0,-7.943810730626244,-1.7976931348623157e+308,1.0,4.0];
try {
    v66.length = -9223372036854775808;
} catch(e67) {
}
const o68 = {
    "execution": "async",
    "type": "minor",
};
gc(o68);
gc();
