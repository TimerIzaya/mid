const t0 = 256;
t0[256 | -4294967295] = 256;
const v4 = [-5.0,6.4108035186960635,-1000000000.0,-3.0,0.972826794503112,-1.0,-9.889807823523475e+307,715533.4282922251];
[7.494482264102135,1.0];
const v6 = [-3.0,1.727039533813803e+308,-0.0,1.7976931348623157e+308,1000000000.0,-409592.3831277193,2.0,1000000.0,5.0];
new Int8Array(257);
const v12 = new Int32Array(7);
const v16 = Symbol.replace;
const v17 = v6[v16];
let v18;
try { v18 = v16.ownKeys(7, 129, v16, v17); } catch (e) {}
const o19 = {
};
const v21 = new Proxy(v12, o19);
try {
    v21.__proto__ = v21;
} catch(e22) {
}
const v24 = o19 > v16 ? o19 : v16;
const v25 = new Float32Array(129);
const o28 = {
};
function F29(a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = o28;
    } catch(e33) {
    }
}
const v34 = new F29(v25, v6);
if (v34 !== Symbol) {
    v24[129];
} else {
    Symbol(v18);
}
new F29(v12, v6);
new F29(o19, v4);
o28.execution = -1472569261;
gc(o28);
