Uint16Array[0] = Uint16Array;
const v6 = new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
function f7() {
    async function* f8(a9, a10) {
        return f8;
    }
    return f8;
}
v6.valueOf = f7;
v6[1] = v6;
try { Int32Array.bind(-780n); } catch (e) {}
new Int32Array(v6, 10);
new Float64Array(255);
new Float32Array(129);
const v21 = new Uint32Array(255);
v21[Symbol.toPrimitive] = f7;
v21[62] = v21;
new Uint8ClampedArray(995);
const v33 = [1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0];
const v34 = v33.groupToMap;
const v35 = v34?.__defineSetter__;
try { new v35(v34, Float64Array); } catch (e) {}
try { v34(v33, v34, v33, v33, v34); } catch (e) {}
let v39 = 214246.3724828104;
v39++;
8 >> 8;
-5 ^ -5;
-(-1);
const o55 = {
    n(a51) {
        const o53 = {
        };
        return Worker(o53);
    },
};
try { o55.n(undefined); } catch (e) {}
class C57 {
    static #n(a59, a60, a61, a62) {
        function f64() {
            for (let [i67, i68] = (() => {
                    switch (f64) {
                    }
                    return [0, 10];
                })();
                i67 - i67, i68 << i68, i67 < i68;
                i67++, i68--) {
            }
            return -5;
        }
        this[257] *= -5;
    }
}
function f79(a80) {
    new Uint8Array([749138.7740098275,-413.55890355139604,-2.0,5.0,4.0,1.7976931348623157e+308,1.0,5.956393081352694]);
}
Object.defineProperty(C57, "f", { enumerable: true, set: f79 });
C57.f = C57;
const v84 = [-1000000.0,-3.1923473210656557,-1.721355656202141e+308,4.0,0.3955838142797843,-3.0,1.1463753586867827e+308];
function f85(a86) {
    const o87 = {
    };
    o87.h = 8;
    o87.h = o87;
    o87[213] = v84;
    const v88 = o87[213];
    v88[6];
    return v88;
}
f85(v84);
function f91(a92, a93) {
    return this == this ? this : this;
}
f91.arguments = f91;
