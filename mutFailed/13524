1073741824 / 1073741824;
16 - 16;
const v11 = [-Infinity,-9.103981030109866e+307,-0.0,9.981673557748143e+307];
const v12 = [-849.2372150357181,-1000000.0,1.6505126395685657e+308,0.6729537105348318,-530879.4052251638,-1.7976931348623157e+308,-3.4047187171871425,-1000.0,1.0,4.0];
[434165.21561384643,2.220446049250313e-16,0.9700058124031453,1000000.0,232.32565315064426,1000.0];
try { ("bigint").valueOf(); } catch (e) {}
let v17;
try { v17 = ("512").strike(); } catch (e) {}
for (let [i27, i28] = (() => {
        0 in v11;
        Reflect.construct(v17, [v12,0,256], v17)?.b;
        10 + 10;
        return [0, 10];
    })();
    (() => {
        const v29 = i27 < i28;
        class C30 {
        }
        const v31 = C30?.call;
        try { new v31(v11); } catch (e) {}
        function f33(a34, a35, a36, a37) {
            let v38;
            try { v38 = a35.apply(a37, a35); } catch (e) {}
            return v38;
        }
        f33(i28, C30);
        %OptimizeFunctionOnNextCall(f33);
        return v29;
    })();
    i28--) {
    i27 >= i27;
}
