const v1 = [];
class C2 {
}
class C3 {
}
const v4 = new C3();
try { v4.__defineSetter__(C3, v4, v4, C3, C3); } catch (e) {}
const o9 = {
    toString() {
        super[this];
    },
    ...v1,
    n() {
        return this;
    },
};
try { o9.n(); } catch (e) {}
const v11 = new Map(C3, Map, C3);
new Uint8ClampedArray(129);
const v16 = ([-1000000.0,771279.5641904315,0.0,8.299995604235331,6.625300935335886,-820.4949035918538,-602.5256799896665,0.6342705996691437,Infinity]).toLocaleString();
function f20(a21) {
    const o32 = {
        "b": v11,
        p(a23, a24, a25) {
            Float32Array.f;
            let v28 = 10;
            for (; v28--;) {
            }
            const v30 = super.f;
            try {
                v11.valueOf = v30;
            } catch(e31) {
            }
            return a21;
        },
        "d": a21,
        "f": Map,
        [13]: 488056838,
        __proto__: v11,
        [Map]: a21,
    };
    return o32;
}
const v33 = f20(339364495);
f20(f20(v33));
const v36 = [45183,9007199254740990];
[255,968497640,1000,4,1844188500,10];
const v38 = [10513,64671,-863217237,-1952491859,2134955442];
class C39 {
    static e = v38;
    3881742345;
    set h(a41) {
        new Float64Array(1620902822);
        return -2147483647;
        const v47 = this[v36.length];
        class C48 {
        }
        function F49() {
            if (!new.target) { throw 'must be called with new'; }
            const v52 = -(-7);
            v52 ** v52;
        }
        v33[v47];
        const v55 = typeof f20;
        class C57 {
            constructor(a59, a60) {
                function f61(a62) {
                    return this;
                }
                const o65 = {
                    "type": "function",
                };
                new Worker(f61, o65);
            }
        }
        const v67 = new C57(C57, C57, 129);
        new C57(-50865, v67, v16, 339364495);
        v55 === "undefined";
    }
    static 1;
    static {
    }
    constructor(a73, a74) {
        for (let i = 0; i < 10; i++) {
            this[this];
        }
    }
    [f20] = 339364495;
    [339364495];
    e;
}
new C39();
new C39();
new C39();
function f80(a81) {
}
class C82 extends f80 {
}
const o84 = {
};
for (let v85 = 0; v85 < 5; v85++) {
}
function F86(a88) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor.bind(F86, F86).length;
}
gc(o84);
function f93() {
    const v95 = ("D")[0];
    const v97 = Array(488056838);
    const v98 = [v97,v97,v97,v97,v97];
    [[v98,v98,v98]];
    v95.match();
    return f93;
}
f93();
f93();
