function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -268435456;
    } catch(e3) {
    }
    try {
        this.d = -268435456;
    } catch(e4) {
    }
}
let v5 = new F0();
const v6 = new F0();
v5 = v6;
[-41116,7,-9,256,15532];
[-548694799,65535,1,-1073741824,-2045476478,4294967296,663729408];
const v9 = [4,1373614933,9,1073741823,512,65535,-2500106,-11,43722];
let v10 = -6;
new Uint8Array(v10);
new BigUint64Array(481);
let v18 = new Int32Array(95);
const v19 = new F0();
function f20() {
    return v19;
}
function f21(a22, a23) {
    const o54 = {
        m(a25, a26, a27, a28) {
            delete v5[a22];
            const v31 = new Uint8ClampedArray();
            gc[6] = v31;
            function f33() {
                return a26;
            }
            let v36 = -1e-15;
            ++v36;
            Uint16Array.cbrt(-40855);
            ++v10;
            Uint16Array.log(BigUint64Array);
            Uint16Array.atan(BigUint64Array);
            function f42() {
                class C43 {
                    constructor(a45) {
                        function f46() {
                            return a45;
                        }
                        Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f46 });
                    }
                }
                new C43();
                const v48 = new C43(f42);
                v48.length;
                return f42;
            }
            f42();
            try {
                f20();
            } catch(e52) {
            }
            a25 / a28;
            return a22;
        },
        __proto__: a23,
        [a23]: v6,
        "c": a23,
        "a": a22,
        "f": v5,
    };
    return o54;
}
const v55 = f21(f20, v5);
const v56 = f21(v6, v5);
const v57 = f21(f20, v19);
try {
    try { v5.getInt8(); } catch (e) {}
    try {
        v6.length = 2;
    } catch(e60) {
    }
} finally {
    v56[10] = v9;
}
class C61 {
    p(a63, a64, a65) {
        a64 = f20 ^ v55;
        new F0();
        return a65;
    }
    static #a;
    static set b(a69) {
        Reflect[Reflect] = a69;
        v6.species;
        for (let v72 = 0; v72 < 32; v72++) {
            this["p" + v72] = v72;
        }
        Reflect.construct(f21, [a69,a69], f20);
        const o77 = {
            "apply": f21,
            "call": f21,
            "construct": f20,
            "defineProperty": f20,
            "deleteProperty": f21,
            "c": f21,
            "getOwnPropertyDescriptor": f20,
            "getPrototypeOf": f21,
            ...v57,
            1472320226: a69,
            "h": this,
            "b": 95,
            __proto__: v18,
            "isExtensible": f21,
            "ownKeys": f21,
            "preventExtensions": f21,
            "set": f21,
            "setPrototypeOf": f20,
        };
        new Proxy(v56, o77);
    }
}
new C61();
new C61();
new C61();
[6,-268435456,21177,10,9007199254740991];
[1513016092,-9223372036854775808,-65536,-6158,10920];
[-15];
for (let v87 = 0; v87 < 25; v87++) {
}
v18 ||= v18;
[16,829576862,-5];
[-1];
[332361035,257,4294967295,9];
const v92 = Symbol.iterator;
const o101 = {
    [v92]() {
        let v94 = 10;
        const o100 = {
            next() {
                v94--;
                const v98 = v94 == 0;
                const o99 = {
                    "done": v98,
                    "value": v94,
                };
                return o99;
            },
        };
        return o100;
    },
};
const v102 = new Float32Array();
v102[4294967295] = v102;
