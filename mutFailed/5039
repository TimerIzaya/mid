class C3 {
    constructor(a5, a6) {
        try {
            this.fuck(a5, a5, a6, [464727760,this,a5,a6,"p"]);
        } catch(e9) {
        }
    }
    static #b;
    #f;
    #g = "p";
}
for (const v10 of "p") {
    ("p")[v10];
    464727760 instanceof v10;
}
new BigInt64Array(2657);
new BigUint64Array(1830);
new Float32Array(13);
const v22 = new C3(C3, "p");
const v23 = new C3("p", "p");
const v24 = new C3(v22, v23);
class C25 extends C3 {
    static #b = C3;
    o(a27, a28, a29, a30) {
        super.a *= a29;
        return a28;
    }
    static 3373;
    static e = v24;
    constructor(a32, a33, a34) {
        super(v24, a33);
        const v36 = [464727760];
        Reflect.apply(("p").repeat, a34, v36);
    }
    105;
}
const v39 = new C25(C3, v24, v24);
const v40 = new C25(v39, C3, v23);
new C25(v24, "p", v40);
const v45 = new Uint8ClampedArray(303);
Object.defineProperty(v45, 7, { writable: true, configurable: true, enumerable: true, value: Int8Array });
