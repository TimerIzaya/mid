const v3 = [0.22424163608197079,0.07249967843597349,2.747129670793875,Infinity,0.8472002296766512,2.220446049250313e-16,1e-15,0.8726060515349664,1.7913451137391217e+308,-1000.0];
const v4 = [-0.0,-2.2250738585072014e-308,4.0,-512176.80056453554,5.0];
const v5 = [4.9673666038042885,-1.2462857993824023e+308,5.0,0.28631619445598333];
function F9(a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = -4096n;
        const o17 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o17);
    } catch(e19) {
    }
    try {
        this.g = a13;
    } catch(e20) {
    }
}
new F9(268435456, v5, v3);
new F9(-2, v5, v5);
new F9(268435439, v4, v4);
try {
    new F9(F9, -1024n, -1024n);
} catch(e26) {
}
function F27() {
    if (!new.target) { throw 'must be called with new'; }
}
class C29 {
    constructor(a31, a32, a33) {
        function f34(a35, a36) {
            Math.tan();
            return a33;
        }
        a32.constructor = f34;
        const v39 = a32.constructor;
        class C40 extends v39 {
        }
        try {
            v4.toString = v39;
        } catch(e41) {
        }
        C29 = -2;
        new C40();
    }
}
new C29(F27, C29);
