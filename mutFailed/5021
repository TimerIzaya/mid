new Float64Array(2644);
const v5 = new Int8Array(11);
v5[8];
16 | 16;
const v10 = new Float64Array(16);
function F11(a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const t8 = 11;
        t8.g = 2644;
    } catch(e15) {
    }
}
new F11(11, 11);
v5.g;
const v18 = new F11(2644, 16);
const v19 = v18?.constructor;
let v20;
try { v20 = new v19(Float64Array, Float64Array); } catch (e) {}
new F11(16, v20);
const v22 = /(x)(x)(x)\1*/gudsy;
const v23 = /ka{0}/guims;
const v24 = /ab|c/udmy;
class C25 {
}
const v26 = new C25();
v26?.constructor;
try { new v20(); } catch (e) {}
function f29() {
    gc(f29);
    return v23;
}
v26.constructor = f29;
const v32 = v26.constructor;
v32.caller = v32;
v5(v23, 11);
try { v10.test(2644); } catch (e) {}
const v35 = new C25();
function f36(a37, a38) {
    a37.dotAll = a37;
    const v39 = a37.sticky;
    v39 + v39;
    const o41 = {
        ...11,
        "length": v35,
        "c": v32,
        "f": Int8Array,
        "f": a37,
        "a": v26,
        7: C25,
        "e": v23,
        "b": v22,
    };
    return o41;
}
%PrepareFunctionForOptimization(v24);
const v42 = f36(v24);
v42[7] = v42;
%OptimizeFunctionOnNextCall(f36);
f36(v42);
