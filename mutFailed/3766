function f0() {
    let v3 = 514100069;
    const o32 = {
        set f(a5) {
            const v6 = super.g;
            const o7 = {
            };
            const t7 = [-2.220446049250313e-16,0.4010936999061169];
            t7.length = -2;
            Math.sin(4294967295);
            try {
                o7.a = v6;
            } catch(e13) {
            }
            try {
                const o14 = {
                };
                o14.a = v6;
                o14.g = this;
                [[2.220446049250313e-16,1000000.0,-832083.505850983,0.4718386381385684,1000.0,-5.0,9.814259698721895e+307,-659970.7982908424,-5.0]];
                const v19 = Array(6);
                const o20 = {
                    __proto__: v19,
                };
            } catch(e21) {
            }
            try {
                const o22 = {
                };
                o22.a = v6;
                o22.g = this;
                o22.e = 9;
            } catch(e23) {
            }
            let v24 = ++v3;
            ++v24;
            const v27 = new Set();
            let [v28,,...v29] = v27;
            try {
                const o30 = {
                };
                o30.a = v6;
                o30.g = this;
                o30.d = 9;
            } catch(e31) {
            }
        },
    };
    return o32;
}
const v33 = f0();
const v34 = f0();
const v35 = f0();
function F39(a41, a42) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v34;
    } catch(e43) {
    }
    try {
        this.b = f0;
    } catch(e44) {
    }
    try {
        this.d = a42;
    } catch(e45) {
    }
}
const v46 = new F39(v34, 4);
const v47 = new F39(v33, 2029726607);
new F39(v47, 128);
class C49 extends F39 {
    o(a51, a52, a53) {
        F39 <= v35;
        super.e = v35;
        a53[251] = a51;
        return v35;
    }
    constructor(a56, a57, a58) {
        super(a57, 4);
        a58 = v35;
        this["o"](4, v46, ..."o", 4);
    }
    a;
    #h = v46;
}
const v61 = new C49(128, 4, 4);
const v62 = new C49(2029726607, 4, v61);
new C49(4, 128, v33);
const v64 = [-14339,735253629,4294967296,3,268435456,3,57019,268435439];
for (const v66 in [1959699296,-1,9007199254740991,9007199254740992,2147483649,-4096,-9223372036854775808]) {
}
const v67 = v62.constructor;
try { new v67(); } catch (e) {}
const v72 = new Uint8Array(512);
v72[148] ||= 444;
for (const v73 in v64) {
    ("-2").normalize("NFKC");
}
