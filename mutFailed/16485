const v0 = [];
new WeakSet();
const v8 = new Float64Array(3346, 3346, 3346);
v8.constructor;
const v10 = [-65535,406094985];
const v11 = [-17291,1886,-9007199254740992,857,2,13,14,-1,536870912];
[v0,v10,v11,/(q()n)/guimsy,v11];
function f16() {
    const o18 = {
        get a() {
            return f16;
        },
    };
    return o18;
}
1310 % 1310;
new Uint16Array(257, 58091);
class C27 extends Uint16Array {
}
function f30(a31, a32, a33) {
    return a32;
}
class C34 extends f30 {
}
function f35(a36) {
    return f35;
}
new Worker();
class C41 {
    toString(a43, a44, a45, a46) {
        function f47(a48) {
        }
        class C49 extends f47 {
            a = -65535n;
        }
        return -2074262259n;
    }
}
new C41();
try { new Worker(); } catch (e) {}
try { ("function").toWellFormed(); } catch (e) {}
new Int16Array();
["function"];
const v59 = [-9223372036854775808,1415432483,1];
function f61() {
}
function f62(a63, a64) {
    const v66 = Symbol.toPrimitive;
    a63[v66] = f61;
    const o71 = {
        "e": a63,
        "g": a64,
        [v66]() {
        },
        "maxByteLength": 60241,
        get d() {
        },
        "h": -1000000.0,
        ...a63,
        "b": v59,
        "d": Int16Array,
        [60241](a70) {
        },
    };
}
const o72 = {
    "type": "function",
};
o72.a = o72;
new Worker(f35, o72);
