const v0 = [1955198186,9007199254740991,-1240966516,81629665,4203];
const v1 = [1000,2147483648,-169950604,4331,-1577442883,-5198,-9289,-128];
const v2 = [-16,21959,-268435456,1073741825,520505185,58564,-2,1042157772,-28391,-2095612660];
v2.getTime = v1;
function f3(a4, a5) {
    const o15 = {
        "h": v2,
        ...v1,
        __proto__: a5,
        "f": v1,
        "b": v0,
        get g() {
            try {
            } catch(e8) {
                try {
                    v2.shift();
                } catch(e10) {
                }
            }
            const o11 = {
                __proto__: this,
                "e": this,
                "c": v1,
            };
            [2.2250738585072014e-308,-1000.0];
            [-1.7976931348623157e+308,-260.5579974780221,-1e-15,-1.611626333655491e+308];
            [107.37383303496927,-2.220446049250313e-16,1000000.0,2.2250738585072014e-308,-5.0,1.0,0.5570898515825939,-1000000.0,-1.3383727113977777e+308,-840210.2237706868];
            return o11;
        },
    };
    function f16() {
        return o15;
    }
    Object.defineProperty(o15, "getTime", { writable: true, get: f16 });
    return o15;
}
const v17 = f3(v1, v2);
const v18 = f3(v0, v2);
const v19 = f3(v1, v0);
new Float64Array(5, Float64Array);
new Float64Array(7);
let v28 = new Int32Array(19);
const o29 = {
    __proto__: v28,
    "h": v19,
    ...v19,
};
const v31 = new WeakMap();
const v32 = /8[\cA]v/uisy;
v32[Symbol.toPrimitive] = f3;
let v35;
try { v35 = v17.getTime(7); } catch (e) {}
try {
    v17.valueOf = v35;
} catch(e36) {
}
function f37(a38, a39) {
    const v40 = [v32,v32,v32,v32,v32];
    v31.set(v40, v40);
    ++v28;
    try { v40.join(a38); } catch (e) {}
    v18 ** v40;
    let v49 = 44384;
    Math.sin(a39);
    v49--;
    +a39;
    ~v18;
    v49 | 2147483648;
    return v32;
}
v32[Symbol.toPrimitive] = f37;
const v58 = [3480,1024,-4294967297,-1024,512,65536,29198,-9223372036854775807,-2147483647];
function f59() {
    return v58;
}
function f60(a61) {
    a61 !== 19;
}
Object.defineProperty(v58, "d", { writable: true, get: f59, set: f60 });
try {
    v58.d = v32;
} catch(e63) {
}
new BigInt64Array(1073741824);
