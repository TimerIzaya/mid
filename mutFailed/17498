const t0 = [];
new t0(128);
let v6;
try { v6 = Int16Array.bind(Int8Array); } catch (e) {}
new v6(2702);
16 / 16;
const v11 = new BigInt64Array(16);
try { v11.forEach(16); } catch (e) {}
class C13 extends Int16Array {
    static 3 = 128;
    p(a15, a16, a17) {
        new Uint8ClampedArray(198);
        new Uint16Array(Uint16Array);
        const t13 = 8;
        const v26 = new t13(2035);
        return v26;
    }
    static e = 128;
}
try { new C13(); } catch (e) {}
const v28 = new C13();
try { v28.reverse(); } catch (e) {}
new C13();
new C13();
try { Math.expm1(BigInt64Array); } catch (e) {}
Math.log10(8);
