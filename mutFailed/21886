const v2 = new Uint8Array(1000);
new Int16Array(257);
const v8 = new BigInt64Array(64);
class C9 {
}
const v10 = new C9();
const v11 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v14 = new Uint32Array();
const v16 = [601759695];
const v17 = [1073741824,1073741823,1376142744,1073741825];
function f19() {
    const t11 = "Vre";
    t11[1] = "Vre";
    try { Math.expm1(-4294967295); } catch (e) {}
    const v24 = Math.expm1();
    const v25 = Math.tanh();
    Math.hypot(v8, v2);
    Float64Array.BYTES_PER_ELEMENT = Float64Array;
    b = v16;
    const v28 = v11.length;
    try {
        v17.findLast();
    } catch(e30) {
        e30.a = e30;
    }
    [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
    const o41 = {
        [v28](a34, a35) {
        },
        "c": v25,
        [-1]: 2684,
        1073741824: Uint8Array,
        "maxByteLength": Math,
        __proto__: v14,
        9: v10,
        [v25]: v24,
        ...v8,
        "arguments": v8,
        [2n](a37, a38, a39, a40) {
        },
        "e": -4294967295,
        "arguments": Float64Array,
        256: v8,
        4: "Vre",
        "c": -268435456,
    };
    return -4294967295;
}
%OptimizeFunctionOnNextCall(2n);
class C45 {
    static #p(a47, a48) {
    }
    #valueOf(a50, a51) {
    }
}
C45[28648] = C45;
new C45();
new Uint32Array(9);
new Int16Array(0);
const t59 = 1000;
new t59();
new Uint16Array(["4294967296"]);
new Uint8ClampedArray(0);
function f66() {
    return f66;
}
const o67 = {
    __proto__: f66,
    "g": f66,
};
