const v0 = [];
new Float32Array(64);
const v6 = new Int16Array(5);
new Float32Array(v6);
class C8 {
    #g;
    constructor(a10, a11, a12) {
    }
    /*
    constructor(a14, a15, a16) {
        class C18 extends a15.constructor {
        }
        new C18();
    }
    */
    static [v0];
    g = C8;
    static f = v0;
    f = v0;
    static 1;
    o(a21, a22, a23, a24) {
    }
    toString(a26, a27) {
        const v28 = this.constructor;
        new v28(a27, v28, this, v28, Int16Array);
        -this;
    }
    #e = v0;
    set d(a32) {
        this[4] = this;
        this >> a32;
        super.f <<= a32;
    }
    static c;
    [v0] = v0;
    1073741823 = C8;
}
const v34 = new C8();
const v35 = new C8();
const v36 = new C8();
function f37() {
    return C8;
}
new BigUint64Array();
const o40 = {
};
const v42 = [3.0];
function F43(a45, a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
}
const v48 = new F43(-725.0347156854516);
new F43(v48, v42);
[f37,f37,[v0,v0,v34,v36,v34]];
[C8,f37,v0];
function F56(a58, a59) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = "-4161";
    } catch(e60) {
    }
    try {
        this.g = "function";
    } catch(e61) {
        function F62() {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.a = 3872;
            } catch(e65) {
            }
        }
    }
}
new F56(v35, v36);
new F56(v36, v34);
new F56(v35, "function");
new Int16Array(443944762);
new BigUint64Array(3257);
const o88 = {
    o(a76) {
        Math.atan2(v36);
        class C80 {
            constructor(a82) {
                typeof arguments;
            }
        }
        const o86 = {
            127: this,
            "b": f37,
            "d": 5,
            "e": 443944762,
            "type": "function",
        };
        f37(o86);
        return BigUint64Array;
    },
};
o88["o"]();
