const v0 = [];
function f4(a5) {
    const o17 = {
        __proto__: v0,
        "f": -10n,
        set constructor(a7) {
            super.b = this;
            new BigInt64Array(a5);
            new Int16Array(10);
            new Uint16Array(a5);
        },
    };
    return o17;
}
f4(268435456n);
f4(25477n);
const v25 = [[-1558038614,-38212,-1558038614,f4(-10n)],-1558038614,v0,268435456n,25477n];
[v25,v25];
const v28 = new BigUint64Array();
const v31 = [588238.1771407782,0.8486066695974275,1000000000000.0,-506296.48394393414,-864.44977696432];
const t20 = 4096;
const v33 = new t20();
let v34 = -4294967297n;
v34--;
const v36 = [601759695];
const v37 = [1073741824,1073741823,1376142744,1073741825];
function f39(a40, a41, a42, a43) {
    const v44 = a40?.constructor;
    try { new v44(a40, a43, v37); } catch (e) {}
    arguments.length;
    function f48() {
        try { ("Vre").charAt(4096); } catch (e) {}
        let v51;
        try { v51 = ("Vre").codePointAt(v31); } catch (e) {}
        v51 ^ v51;
        let v53 = Float64Array;
        v53 = a41;
        b = v31;
        let v54 = v31.length;
        v54++;
        try {
            v37.some(a41);
        } catch(e57) {
        }
        const o68 = {
            "c": v34,
            "c": v36,
            valueOf(a59, a60) {
                return a59;
            },
            1073741824: f48,
            [v34](a62, a63, a64, a65) {
                eval();
            },
            "arguments": 5,
            256: a43,
        };
        o68[256];
    }
    f48();
    const v72 = Array();
    try { v72.findLast(v28); } catch (e) {}
    v72.unshift();
    try { Int8Array.keys(); } catch (e) {}
    const v77 = new Int8Array();
    v77.buffer.slice(2147483648);
    const v83 = new URIError(1024);
    const v84 = v83[3];
    v84 + v84;
    1024 * v84;
    for (let v87 = 0; v87 < 5; v87++) {
    }
    %OptimizeFunctionOnNextCall(f48);
    try { v37["find"](..."find", a43, ...v36, ...v37, ...522675525n); } catch (e) {}
}
for (let v90 = 0; v90 < 10; v90++) {
    f39(v33);
}
%OptimizeFunctionOnNextCall(f39);
f39(5, v28, 522675525n, f39);
