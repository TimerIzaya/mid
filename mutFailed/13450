function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.c = F0;
    try {
        new Float64Array();
        ("undefined").localeCompare("undefined", "symbol", "undefined");
        this.c = -40252;
    } catch(e8) {
    }
}
const v9 = new F0();
new F0();
new F0();
new Array(4096);
new Uint8Array(4096);
new Float64Array(3833);
function f21(a22) {
    return Symbol.toPrimitive;
}
const v29 = new BigInt64Array(16);
const v32 = new Uint32Array(40, 40, 16);
const v33 = [1073741824,1073741823,1376142744,1073741825];
function f34(a35, a36, a37, a38) {
    const v39 = a35.constructor;
    let v40;
    try { v40 = v39(); } catch (e) {}
    try {
        v33.forEach();
    } catch(e43) {
    }
    const o44 = {
        1073741824: v32,
    };
    const v45 = undefined?.values;
    let v46;
    try { v46 = v45(); } catch (e) {}
    v29["toSorted"](v40, v45, ..."toSorted", v46, 40);
    Math.abs(BigInt64Array);
    return a38;
}
new BigUint64Array(3833);
("c").toUpperCase();
v9.decodeURIComponent(v33);
const v56 = new Date(Date);
v56.setFullYear();
function f59() {
    function F60(a62) {
        if (!new.target) { throw 'must be called with new'; }
        const v63 = this.constructor;
        try { new v63(); } catch (e) {}
    }
    class C65 extends F60 {
        #p(a67, a68) {
        }
    }
    try { new C65(); } catch (e) {}
    return f59;
}
f59();
f59();
for (let v72 = 0; v72 < 10; v72++) {
    v32.lastIndexOf(8);
    class C75 {
    }
    Promise.reject(Promise);
    (759956410).__defineGetter__;
}
