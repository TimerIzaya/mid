const v4 = [1073741824,255,-93221804,1,268435440];
Date.parse(4294967296);
v4.length = 4294967296;
10n + 10n;
const v11 = [-4.0,-1.0565179229402967e+308,5.133636601988505e+307,-2.0,-17401.77445540356,Infinity,-4.958835997422013,-4.80006805734775e+307];
v11[1] = v11;
[-Infinity,-1e-15];
const v13 = [0.9795434758334237,-908.1404614629927,-1000000.0,-0.0];
try { v13.fill(v13); } catch (e) {}
const v15 = [-2.220446049250313e-16,0.8648990281175026,1.6350594837371233];
new BigUint64Array(2147483647);
class C19 {
    p(a21, a22, a23, a24) {
    }
}
v15[2] = v15;
[409.6269591840535,425.92753632441486];
[-1.0,-314198.185150258];
const o29 = {
    "maxByteLength": 1000,
};
for (let i32 = 0, i33 = 10; i32 < i33; i32++) {
    continue;
}
5 / 5;
5 - 5;
new BigUint64Array(255);
const o47 = {
    "maxByteLength": 1000,
};
new ArrayBuffer(8, o47);
const v51 = new Int16Array(5);
try { v51.findIndex(v15); } catch (e) {}
const t33 = [-3.0];
t33.length >>>= 213;
const o55 = {
};
o55.constructor;
Float32Array.prototype = Float32Array;
new Float32Array(v51);
function F59(a61, a62) {
    if (!new.target) { throw 'must be called with new'; }
    const v63 = this.constructor;
    try { new v63(); } catch (e) {}
    const o66 = {
        0: "1ya",
        162: "1ya",
    };
}
