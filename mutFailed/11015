const v0 = [5.643373291636237,0.0,-6.180238270917446,466416.5387968179,-Infinity,-54266.99121695];
let v1 = [-Infinity,1000000000.0,-217301.24857944122,-320359.6415600021];
const v2 = [1000.0];
class C3 {
    static #toString(a5) {
        v2 >> v1;
        return v2;
    }
    static f;
    set g(a8) {
        function f9() {
            return a8;
        }
        let v10;
        try { v10 = v0.includes(v1); } catch (e) {}
        new Float64Array(3);
        v1 ^= this;
        try { v10(this, a8, Int8Array, v1, f9); } catch (e) {}
    }
    h = v0;
    static 536870888 = v2;
}
const v17 = new C3();
const v18 = new C3();
const v19 = new C3();
function F20(a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = v0;
    } catch(e24) {
    }
}
const v25 = new F20(v1, v0);
const v26 = new F20(v1, v0);
const v27 = new v0(v2, v0);
class C28 {
    [v26];
    [C3] = F20;
    set a(a30) {
        %VerifyType(v25);
        new Array(1024);
    }
    static {
        function F35(a37, a38) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.b = a38;
            } catch(e39) {
            }
        }
        new F35(v17, this);
        new F35(this, v0);
        new F35(v18, v2);
    }
}
new C28();
new C28();
const v45 = new v18();
const v46 = [];
const v47 = /a\w/gudsy;
const v48 = /ka{0}/guims;
class C49 {
}
class C50 {
    static {
        this < this;
    }
}
function f53(a54, a55) {
    const o56 = {
        ...v48,
        "d": v46,
        "c": v27,
        "g": a55,
        [v45]: a54,
        "a": v19,
        3291: a55,
        "h": a55,
        ...v18,
        "f": a54,
        "a": v0,
        7: C49,
        __proto__: C49,
        "e": v48,
        "b": v47,
    };
}
%PrepareFunctionForOptimization(f53);
f53();
f53();
%OptimizeFunctionOnNextCall(f53);
f53(C49, v46);
