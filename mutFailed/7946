class C3 {
    static #valueOf(a5) {
        const t2 = "boolean";
        t2[-8] = a5;
        a5[5] = -1.0654615543745536e+308;
        new Float32Array(9);
        new Float32Array(2823);
        new Uint16Array(512);
        return Float32Array;
    }
}
const v15 = new C3();
const v16 = new C3();
const v17 = new C3();
v17.b = v17;
class C18 {
    constructor(a20, a21, a22, a23) {
        a23.b = a22;
        try { v17(); } catch (e) {}
        try {
            a23.b = a22;
        } catch(e25) {
        }
    }
    #g;
    valueOf(a27, a28, a29, a30) {
        0.6920828961713477 % 1;
        -8 && 0.6920828961713477;
        +v15;
        let v37 = -8 && -8;
        return v37++;
    }
}
new C18(C18, "boolean", v17, v17);
const v40 = new C18(v17, v16, C3, C3);
function f41() {
    return "boolean";
}
function f42(a43) {
    new Map();
}
Object.defineProperty(v40, "b", { writable: true, configurable: true, get: f41, set: f42 });
new C18(v17, C3, C18, v40);
[-4.0,5.0,1e-15,-1000000.0];
[4.0,1.7976931348623157e+308,-1.6746280838181564e+308,Infinity,0.02995849684218521,8.253324943521243e+307,-4.753315469426976e+307,1000000.0];
const v49 = [-1.5131061856231655e+308,0.9940081941996022,-1000000000.0,-9.722353359280868,9.968489719443777e+307,-5.0,-374352.7778849256,-Infinity,1000000000.0,0.05917465816222045];
Float32Array[2] = Float32Array;
const v51 = new Float32Array(Float32Array);
function f52(a53) {
    function f54(a55) {
        const o56 = {
        };
        return o56;
    }
    f54();
    return v49;
}
v51.toString = f52;
for (let v58 = 0; v58 < 25; v58++) {
    function f59(a60, a61, a62, a63) {
        a60[0] = a60;
        a61 <= a61;
        const v66 = arguments?.__lookupGetter__;
        try { v66(v66, f59, a61, arguments); } catch (e) {}
        try { undefined(); } catch (e) {}
        new Int8Array(v51);
        "find" == "find";
        return v51;
    }
    for (let v74 = 0; v74 < 10; v74++) {
        f59(v51, v58);
    }
}
