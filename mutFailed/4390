class C3 {
    static #c;
    set a(a5) {
        -Infinity;
        try {
            let v10 = -1073741824;
            ("1000").substring(916889787, this);
            const v12 = [-268435456,1000];
            const v14 = v10--;
            Math.exp(this);
            v14 >> v12;
        } catch(e17) {
        }
    }
    static {
        function F19(a21, a22) {
            if (!new.target) { throw 'must be called with new'; }
            a22.propertyIsEnumerable(this);
            const v24 = this.constructor;
            try { new v24(); } catch (e) {}
            try { this.constructor(); } catch (e) {}
        }
        new C3("function", "function");
    }
    static ["function"] = "1000";
    #a = "1000";
}
let v28 = new C3();
let v29 = new v28();
const v30 = new C3();
class C31 extends v29 {
    g = "function";
    static #f = v28;
    constructor(a33) {
        super();
        delete this.h;
        super.h = v30;
        /\1\2(a(?:\1(b\1\2))\2)\1()l/udm;
    }
    static #c = "1000";
    valueOf(a37, a38) {
        let v39;
        try { v39 = a37(); } catch (e) {}
        try {
            v39.#f;
        } catch(e41) {
        }
        v29 <<= v30;
        return "setMonth";
    }
    ["function"] = "1000";
    /*
    constructor(a43, a44, a45, a46) {
        --v28;
        try {
            a46.#m();
        } catch(e49) {
        }
    }
    */
    [v28] = C3;
    static 1212 = v29;
}
new v28();
new C31();
new C31();
const o58 = {
    "maxByteLength": 201,
};
new SharedArrayBuffer(C31, o58);
class C61 {
    set h(a63) {
    }
    constructor(a65) {
        ("NaN").localeCompare(a65, "NaN");
    }
    #d = 201;
    /*
    constructor(a68, a69, a70) {
        class C72 extends a69.constructor {
        }
        new C72();
    }
    */
    b;
}
new C61();
