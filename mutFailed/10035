let v0 = 127n;
class C3 {
    static h = -7638n;
    static [512n] = -7638n;
    static #e = -7638n;
    static set d(a5) {
        super.d = this;
    }
    static #p(a7) {
        class C9 {
            #valueOf(a11, a12) {
                const v14 = WeakMap();
                "m" > v14 ? "m" : v14;
                return this;
            }
            static set f(a18) {
                const o21 = {
                    "maxByteLength": 129,
                };
                SharedArrayBuffer();
                const t19 = "m";
                t19();
            }
        }
        const v25 = new C9();
        function F26(a28, a29, a30, a31) {
            if (!new.target) { throw 'must be called with new'; }
            a30.valueOf();
            a31.e = a31;
            const v33 = this?.constructor;
            try { new v33(v25, a30, a28, F26); } catch (e) {}
            a31.toLocaleString();
        }
        new WeakMap();
        let v38;
        try { v38 = this.o(WeakMap); } catch (e) {}
        -7638n >> WeakMap;
        try { WeakMap(); } catch (e) {}
        v0 >>= v0;
        return v38;
    }
}
try { new C3(); } catch (e) {}
const v42 = new C3();
const v43 = v42?.toLocaleString;
try { new v43(); } catch (e) {}
new C3();
new C3();
let v47 = 3;
v47--;
new Float32Array(v47);
new Uint32Array(128);
129 + 129;
const v57 = new Uint32Array(129);
const v60 = new BigInt64Array(12);
v60[2] = v60;
const o61 = {
    ...v57,
};
o61[123];
