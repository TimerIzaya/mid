new Uint32Array(2899);
let v3 = 260;
const v5 = new Int16Array(v3);
const v8 = new Float64Array(64);
class C9 extends Uint32Array {
    static m(a11, a12, a13, a14) {
        this[Uint32Array];
        function f16() {
            return 64;
        }
        Float64Array && this;
        return 64;
    }
    6;
    [-2] = v8;
    static {
        for (const v19 in v5) {
            v5[2899] += 2899;
            v3 %= 2899;
            let v20 = "function";
            ({"length":v20,} = "isExtensible");
            const v22 = [290511.96857215906,0.3003673637544756,-458526.71260649094,0.8333335605081266,16682.170944584184,0.12597720350931985];
            const v23 = [2.220446049250313e-16,-3.0,-3.117457405711452,Infinity,2.220446049250313e-16];
            const v24 = [-2.220446049250313e-16,8.380618196344006];
            class C25 {
                g;
                static charCodeAt(a27, a28) {
                    return this;
                }
                static get f() {
                    v24[114] <<= v22;
                    return v23;
                }
            }
            const v30 = new C25();
            class C31 {
                static #b;
                static get matchAll() {
                    v24.toString = v30;
                    v22.#b = this;
                    return this;
                }
            }
            const v33 = new C31();
            v33?.__lookupGetter__;
            const o35 = {
            };
            new Proxy(this, o35);
        }
    }
}
const v38 = [1.9600488149280893e+306,468.9269702772963];
([Infinity,-686.9856326146617,0.47369378110968274,-7.24289104755818]).includes(...v38);
const v45 = new Uint8ClampedArray();
function f46(a47, a48) {
    const o53 = {
        [a47]: Float64Array,
        4: 6,
        "b": a47,
        [v45](a50, a51, a52) {
        },
    };
    return o53;
}
f46(2);
new C9();
new C9();
new C9();
new Uint8Array(24);
new Float64Array(631);
new Int8Array(5);
function F68() {
    if (!new.target) { throw 'must be called with new'; }
}
new Int8Array(268435456);
const v73 = [F68,Uint8Array];
new Uint8Array(64);
function F77(a79, a80, a81, a82) {
    if (!new.target) { throw 'must be called with new'; }
    for (let v85 = 0; v85 < 100; v85++) {
        const o89 = {
            6: undefined,
            "d": undefined,
            [268435439n]: 2105444095n,
            __proto__: v73,
            "g": undefined,
            "b": 2105444095n,
            "arguments": this,
            valueOf(a88) {
            },
        };
        o89[1] = o89;
    }
}
