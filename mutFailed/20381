class C3 {
    static g = 1.3481332147240153;
    #m(a5, a6) {
        delete this[a5];
        try {
            this.fuck(1.3481332147240153, 1n);
        } catch(e10) {
        }
        return a6;
        return this;
    }
    [-1];
    static [-692479.6391349856];
    #a;
    11 = -692479.6391349856;
}
try { C3.isPrototypeOf(-0.0); } catch (e) {}
const v12 = new C3();
v12[11] = v12;
const v13 = new C3();
v13[11] = v13;
new C3();
const v15 = [-1000000000.0,-3.0,998657.9446628725,2.0,-1e-15,542.6389546191738,0.2686306047705146,-1000000.0,0.400224378862878,2.220446049250313e-16];
const v16 = [-785695.6459441009,1000000000000.0,-1.0,1000000000.0,0.806306406096256,2.220446049250313e-16];
v16[1] = v16;
const v17 = [-1.2215507213455972e+308,-983.7081333593056,0.39846244595732105,2.3029046729891213e+307,0.0,2.0,-778297.4268185208,-1000.0,927.0063731981577];
v17[7];
class C19 extends C3 {
    e;
    #e = v13;
    4 = C19;
    static c = -692479.6391349856;
    #g;
    static f = v17;
    static e;
    #d;
    [v13] = v15;
    n(a21, a22, a23, a24) {
        try {
            const v25 = new C3();
            v25 || v25;
            const v30 = +-2.2250738585072014e-308;
            v15 && +-2.2250738585072014e-308;
            Math.cos(v30 >> v30);
        } catch(e35) {
        }
        return a22;
    }
    g;
    #g = v17;
    static #b = v16;
    static #h;
}
const v36 = new C19();
const v37 = new C19();
v37[11] = v37;
new C19();
let v40 = 600;
v40++;
const v42 = new Array(v40);
try { v42.splice(Array, Array); } catch (e) {}
function f44(a45, a46) {
    return f44;
}
function F47() {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, C3, { configurable: true, enumerable: true, get: f44 });
    let v49;
    try { v49 = C3.n(1.3481332147240153); } catch (e) {}
    try { new v49(v49, v49, v36, Array, F47); } catch (e) {}
    try {
        for (const v57 of Array(19793)) {
        }
        switch (f44) {
        }
    } catch(e58) {
    }
}
const v59 = new F47();
const v60 = v59?.constructor;
try { new v60(); } catch (e) {}
