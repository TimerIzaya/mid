function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 44356;
    } catch(e12) {
    }
    try {
        this.b = a11;
    } catch(e13) {
    }
}
const v14 = new F8(-12875n, 44356);
const v15 = new F8(-268435456n, -12875n);
new F8(8n, v15);
[8n];
[-268435456n,9007199254740991,null];
const v19 = [v14];
let v24 = 10 << 10;
0 >>> 0;
const t18 = 10;
const v27 = new t18();
const v28 = [-5.0];
const v29 = v19.constructor;
try { new v29(v27, v28); } catch (e) {}
--v24;
--v24;
new BigUint64Array();
function F36() {
    if (!new.target) { throw 'must be called with new'; }
    const v38 = [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    class C39 {
    }
    const v40 = new C39();
    const t33 = v40.constructor;
    let v42 = new t33();
    const v43 = /[\11]/gm;
    function f44() {
        return v42 >>>= f44 != v43;
    }
    Date();
    const v49 = v38.reduce(Date)[22];
    class C52 {
    }
    class C55 extends ([C52]).constructor {
    }
    function f56() {
        function f58(a59) {
        }
        Object.defineProperty(v38, 16, { writable: true, enumerable: true, get: f58 });
    }
    const t50 = Worker.constructor;
    new t50(v49);
    const v64 = [];
    v64.lastIndexOf(v64);
    const o66 = {
        "type": "function",
    };
    o66.arguments;
    new Worker(f56, o66);
    const v69 = Array(19793);
    for (const v70 of v69) {
    }
    const v71 = [v69,v69,v69,v69];
    new BigUint64Array();
    const v74 = [v71,v71];
    const o75 = {
    };
    class C76 {
    }
    const v79 = Array(C76).includes;
    try { v79(); } catch (e) {}
    const v81 = [v74];
    try { Uint16Array.from(v64); } catch (e) {}
    const v84 = v81 >= Uint16Array;
    v84 || v84;
}
new F36();
new F36();
([Infinity,-686.9856326146617,0.47369378110968274,-7.24289104755818]).includes([-1000.0,-2.2250738585072014e-308,511.99933163650917,-386.8372768814137,Infinity]);
new Int32Array(3289);
const t80 = "byteLength";
t80[7] = "byteLength";
[-1000000.0,0.1600379490765781,-1.6243694690977962e+307,817210.0157459241,1.0,5.0,0.9202958446582343,-1.7976931348623157e+308,-382.2774365702321,-5.737866676165018e+307];
Array(19793);
const v100 = [727957804,7,49072,-63418,-4,-52120,127,1273312700,-128];
function f101() {
    return v100;
}
class C102 extends f101 {
}
