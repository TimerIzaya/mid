let v1 = -4096;
/[xyz]/gvimy;
function F4() {
    if (!new.target) { throw 'must be called with new'; }
}
function f6(a7, a8, a9) {
    return a9;
}
const v10 = /foo(?!bar)baz/gvimsy;
/\cj\cJ\ci\cI\ck\cK/dimsy;
/z/di - 101835787;
function f17(a18, a19) {
    return 4;
}
class C22 {
    static ["h"];
    d = v10;
    static c = 11857;
    constructor(a24, a25, a26, a27) {
        super();
        function f28(a29, a30, a31) {
            return a24;
        }
        const v34 = new BigUint64Array();
        const v36 = [101835787,"function",this,101835787,v34];
        const o37 = {
            "arguments": v36,
            "type": "function",
        };
        new Worker(f28, o37);
    }
    static {
        Math.cos(this);
        let v44 = ++v1;
        ++v44;
        !-1785054919;
    }
}
new C22();
new C22();
Math.tanh("1");
function f52() {
    Math.ceil();
    return 101835787;
}
%OptimizeFunctionOnNextCall(f52);
new C22();
/a\fb\nc\rd\te\vf/gvms;
("h").constructor;
try {
    const o64 = {
        "maxByteLength": 1000,
    };
    new ArrayBuffer(10000, o64);
} catch(e66) {
}
Uint32Array[1] = 15;
Math.acosh(10000);
Reflect.construct(Int8Array, []);
