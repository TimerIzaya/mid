const v0 = [];
const v1 = [v0,v0,v0,v0];
const v2 = [v0];
[v0,v1,v2,v2];
[-9223372036854775807,7];
const v5 = [2,-256,3];
[-14,-803213058,-256,-1501197711,129,2008562098,1094738072,10,-256];
function f7() {
    return v1;
}
const v11 = /a\w/gudsy;
const v12 = /ka{0}/guims;
const v13 = /ab|c/udmy;
class C14 {
}
function F15(a17, a18, a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
}
const v23 = new v5(16);
const v27 = new Uint8ClampedArray();
class C28 extends Uint8ClampedArray {
    constructor(a30, a31, a32, a33) {
        super(v23);
        try { a31(); } catch (e) {}
        `1073741824${8}c`;
        super[v27] = 520;
    }
}
const t28 = 4n;
const v36 = new t28();
const v37 = new C14();
new C14();
function f39(a40, a41) {
    const o42 = {
        ...v12,
        "d": v36,
        "c": a41,
        "g": v5,
        "f": a40,
        "a": v37,
        7: a41,
        __proto__: C14,
        "e": a41,
        "b": v11,
    };
    return o42;
}
%PrepareFunctionForOptimization(f39);
f39(v13);
const v44 = f39(v13);
%OptimizeFunctionOnNextCall(f39);
f39(v44, v13);
