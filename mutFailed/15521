const v0 = [];
function f1() {
    return v0;
}
function f2() {
    return v0;
}
let v3 = 2.0;
let v7 = -65536;
try {
    v0.valueOf = f1;
} catch(e10) {
}
try { v0.slice(2, 0); } catch (e) {}
try {
    v0.g = -3.791568206420579;
} catch(e12) {
}
let v14 = 30089;
let v15 = -4294967297;
const v16 = v15--;
Math.log1p(v7);
-2.5804164316837186 - v15;
0 << v7;
--v7;
~v16;
new Float64Array(2);
new Float32Array(1);
const v29 = new Int32Array(3);
function F30() {
    if (!new.target) { throw 'must be called with new'; }
    function F32() {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v34 = new F32();
    v34.__defineSetter__;
    try { v3(); } catch (e) {}
    function f37(a38, a39) {
        const o40 = {
        };
        return o40;
    }
    const v41 = f37();
    ({"g":v3,"h":v14,} = v41);
    3 / -2.5804164316837186;
    function f46() {
        v29 / v34;
        -v14;
        Math.asinh(f37);
        Math.atan(v14);
        !f1;
    }
    const v57 = new Float32Array();
    for (const v58 of v57) {
        Object.defineProperty(v41, v14, { configurable: true, enumerable: true, get: f37, set: f46 });
    }
}
new F30();
new F30();
new v14();
