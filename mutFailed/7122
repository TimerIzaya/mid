[-1e-15,319145.95822497224];
const v1 = [2.0,3.0,362.26893137535694,Infinity,-8.678499262172109e+307,981.8881660257578,4.0,-440.7612298784252];
const v2 = [1.9600488149280893e+306,468.9269702772963];
([Infinity,-686.9856326146617,0.47369378110968274,-7.24289104755818]).includes(...v2);
eval("boolean");
const v8 = [-2.0,0.19920465602574366];
function F9(a11) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.constructor(v8); } catch (e) {}
    a11[1];
    try {
        this.c = v1;
    } catch(e14) {
        this.constructor;
        new BigInt64Array(218);
    }
    try {
        this.d = a11;
    } catch(e20) {
    }
    try {
        this.h = a11;
    } catch(e21) {
    }
    const v22 = [-9223372036854775807];
    const o23 = {
    };
    const v26 = new Uint8Array(127);
    v26.fill();
    const v28 = [-946.1982015264321,-406.6809700455609];
    const v29 = [1000000000.0];
    const v30 = [374.7273106587254,209221.80692563835,1.6228600269929596e+308,1.7976931348623157e+308];
    const v34 = [1000.0,1000n];
    [v30,v22,10n,v28];
    const v36 = [v34,v34,v34];
    for (let v37 = 0; v37 < 25; v37++) {
        v29["p" + v37] = v37;
    }
    with (v36) {
        new Int32Array(v29, v28, Int32Array);
    }
}
new F9(v8);
new F9(v1);
const v44 = new F9(v8);
v44.d;
const v49 = [];
try { v49.groupToMap(-40157); } catch (e) {}
const v51 = /a\w/gudsy;
const v52 = /ka{0}/guims;
v52.d = v52;
class C53 {
}
function f54(a55, a56) {
    const o59 = {
        "b": eval,
        get b() {
            delete this[this];
            this[this] = 9223372036854775807;
            return v51;
        },
        ...v52,
        "d": v49,
        "c": a56,
        "g": a56,
        "f": a55,
        "a": a56,
        7: C53,
        __proto__: C53,
        "e": v52,
        "b": v51,
    };
}
%PrepareFunctionForOptimization(f54);
f54();
f54();
%OptimizeFunctionOnNextCall(f54);
f54(C53, v49);
