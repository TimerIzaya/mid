const t0 = -2.220446049250313e-16;
new t0();
const v5 = [-337.81549314820177,8.159210159338955e+307,-104.81380431413868,-50962.77117564308,900.8783880183571];
v5[1] = v5;
const v6 = [0.12201577037728983,0.8644829840865778,5.0];
const v7 = [-1e-15,53.100128426519404,-4.0,-9.529890845096249e+307,5.0,592363.1964505524,8.226090214464648,7.82037106542742,0.6272079358101402,5.9790934666760425];
try { v7.map(v6); } catch (e) {}
function f12() {
    return -2.220446049250313e-16;
}
let v13;
try { v13 = f12.bind(-2.220446049250313e-16); } catch (e) {}
const v14 = [-1.5314324604839498e+308,-1.8081364344875581,-2.2250738585072014e-308,3.0,3.0];
const v15 = [101.2980265931285,-1.7177856293756712e+307,-1000000.0,-8.49664044843577];
const v17 = new v13();
const v18 = v17.values();
v18?.next;
try {
const t0 = -2.220446049250313e-16;
new t0();
} catch (e) {}
try { v18.next(); } catch (e) {}
function f22(a23, a24, a25, a26) {
    const v27 = a23.shift();
    a23[3] = v27 << v27;
    const o29 = {
        __proto__: v15,
    };
    return o29;
}
f22(v14);
f22(v15)[3];
const v33 = f22(v15);
try { v33.at(-2147483649); } catch (e) {}
gc();
