const v0 = [-850145.9711086905,1000.0,1.7976931348623157e+308,743.5221745573215,-950.6203668937385];
const v1 = [-3.0,1000.0,1e-15,807.0883029541817,1000000000.0];
let v6 = ([-93.6926728884298,-1.307102346303903e+308,-786.8381921462055,-1000000000000.0,680.6532432259901,-3.3741750273190004e+307,-1.1031134706071721e+308,6.540924195475107])[v0];
throw v1;
try {
    v0.length = v6;
} catch(e7) {
}
function f9() {
    return 9223372036854775807n;
}
let v11 = Float64Array;
v11 >>>= v11;
let v12 = 4;
new Uint32Array(v12);
const v16 = new Float32Array(2604);
++v12;
v6 = v16;
try {
    v6.__proto__ = v1;
} catch(e20) {
}
new Int16Array(75);
new Date();
Math.fround(65537);
const v31 = this % 268435456;
Math.tanh(v31);
65537 >> v31;
Math.cbrt(65537);
const v35 = new Float64Array();
const v37 = new Int32Array();
v37[v35];
new Float32Array(129);
function f41(a42) {
    return f41;
}
const v45 = [4096];
const o46 = {
    "arguments": v45,
    "type": "function",
};
new Worker(f41, o46);
const o50 = {
    "execution": "async",
    "type": "minor",
};
