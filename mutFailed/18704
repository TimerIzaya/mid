class C3 {
    static [4096] = 4096;
    constructor(a5) {
        function f6() {
            a5?.[this];
            [[-9007199254740990,49004,536870889,1000,257,65536,-9007199254740990,-9007199254740992]];
            return this;
        }
        this.constructor = f6;
        a5.valueOf = f6;
        try { this.constructor(C3); } catch (e) {}
        super.b %= a5;
        const v13 = ("min")["replace"]("min", "replace")?.trimRight;
        try { new v13(); } catch (e) {}
    }
    m(a16, a17) {
        a16 = this;
        const o18 = {
        };
        try {
            o18.g = 1.0;
        } catch(e19) {
        }
        try {
            const o20 = {
            };
            o20.g = 1.0;
            this.d = "min";
        } catch(e21) {
        }
        try {
            const o22 = {
            };
            o22.g = 1.0;
            o22.d = "min";
            o22.e = a16;
        } catch(e23) {
        }
        try {
            const o24 = {
            };
            o24.g = 1.0;
            o24.d = "min";
            o24.e = a17;
        } catch(e25) {
        }
        return o18;
    }
}
const v26 = new C3(C3);
function f27() {
    function f28() {
        return Math.fround(Math);
    }
    return f28;
}
v26.toString = f27;
const v31 = new C3(v26);
const v32 = new C3(v31);
v32.b;
const v40 = new Uint8Array(11);
v40[1];
new Float64Array(255);
let v45 = 128;
v45--;
Uint32Array[2] = Float64Array;
Uint32Array.BYTES_PER_ELEMENT = Uint32Array;
new Uint32Array(v45);
0.29489550717955537 / 0.29489550717955537;
const v52 = new Uint32Array(Uint32Array, Uint8Array);
v52[0.29489550717955537];
const v55 = new Int16Array(Int16Array);
try { v55.toSorted(255); } catch (e) {}
