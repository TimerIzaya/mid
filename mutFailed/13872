const v1 = new Set();
Math.exp(-Infinity);
const v7 = new BigUint64Array();
const v10 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v12 = new Uint32Array();
const v14 = [601759695];
const v15 = [1073741824,1073741823,1376142744,1073741825];
function f17(a18, a19, a20, a21) {
    const v22 = a18?.constructor;
    try { new v22(a18, a21, v15); } catch (e) {}
    arguments.length;
    function f26() {
        try { ("Vre").charAt(4096); } catch (e) {}
        let v29;
        try { v29 = ("Vre").codePointAt(v10); } catch (e) {}
        v29 ^ v29;
        let v31 = Float64Array;
        v31 = a19;
        b = v10;
        let v32 = v10.length;
        v32++;
        new Uint8ClampedArray(1000);
        const v38 = new Uint32Array();
        const v42 = new Set([v38,v38,v38,v38]);
        const v43 = v42["Vre"](839612.5677247904);
        const v44 = v43 || v43;
        const v45 = v44 && v44;
        v45 || v45;
        try {
            v15.forEach(a19);
        } catch(e48) {
        }
        const o59 = {
            "c": -4294967297n,
            "c": v14,
            valueOf(a50, a51) {
                return a50;
            },
            1073741824: v12,
            [-4294967297n](a53, a54, a55, a56) {
                eval();
            },
            "arguments": 5,
            256: a21,
        };
        o59[256];
    }
    f26();
    const v63 = Array();
    try { v63.findLast(v7); } catch (e) {}
    v63.unshift();
    try { Int8Array.of(); } catch (e) {}
    const v68 = new Int8Array();
    v68.buffer.slice(2147483648);
    const v74 = new Int32Array(1024);
    const v75 = v74[3];
    v75 + v75;
    1024 * v75;
    for (let v78 = 0; v78 < 5; v78++) {
    }
    %OptimizeFunctionOnNextCall(f26);
    try { v15["find"](..."find", a21, ...v14, ...v15, ...522675525n); } catch (e) {}
}
f17(v12);
%OptimizeFunctionOnNextCall(f17);
class C84 extends Set {
    constructor(a86) {
        super(v1);
        let v87 = super.values();
        v87.__proto__;
        v87 &&= C84;
    }
    3 = 2115362873;
    static set g(a90) {
        super[2115362873] = a90;
        try { this.tanh(v1, a90, 30882, 2115362873); } catch (e) {}
        const o93 = {
        };
        try {
            o93.f = 255;
        } catch(e94) {
        }
        try {
            const o95 = {
            };
            o95.f = 255;
            9007199254740991n * 9007199254740991n;
            let v98 = 9;
            return v98++;
            o95.g = EvalError;
        } catch(e100) {
        }
        try {
            const o101 = {
            };
            C84.f = 255;
            function f102() {
                ~([-1.5424212036356715e+308]).shift();
                return 30882;
            }
            o101.g = EvalError;
            function f107(a108, a109, a110, a111) {
                2147483648 ^ 2147483648;
                const v123 = new Int32Array(Symbol);
                v123[492];
                v123[3];
                return "find";
            }
            for (let v127 = 0; v127 < 10; v127++) {
                f107(v127, 522675525n, f107, v127);
            }
            o101.e = EvalError;
        } catch(e129) {
        }
        try {
            const o130 = {
            };
            o130.f = 255;
            o130.g = this;
            o130.e = a90;
        } catch(e131) {
        }
    }
}
function f134() {
    return 255;
}
class C135 extends f134 {
    constructor(a137, a138, a139, a140) {
        super();
        function f141() {
            const t131 = [];
            t131[6] = 4294967295;
            new Int32Array();
            const o156 = {
                get b() {
                    return Int32Array;
                },
                "c": f141,
                toString(a149, a150, a151) {
                    return this;
                },
                4294967295: Uint8ClampedArray,
                m(a153) {
                    return 4294967295;
                },
                "h": 9007199254740991,
                ...a139,
                set b(a155) {
                },
            };
        }
        for (let v157 = 0; v157 < 5; v157++) {
            const o158 = {
                "maxByteLength": 5,
            };
            const v159 = [-392.0576825237305,0.3449869706009556,4.447039970507995e+307,-5.063798246562485e+307,-568.9796177589394,388231.4033702491,-3.5365646375454567,0.12172568971863451,-4.474791203319841e+307];
            ["function",[9007199254740992,-13,1,206834672,5792,16,856414023,8,2147483648],v159];
            f141();
            %OptimizeFunctionOnNextCall(a140);
        }
    }
}
new C135(Uint8ClampedArray, Uint8ClampedArray, 9007199254740991, f134);
new C135();
new C84(2115362873);
new C84(2115362873);
new C84(255);
/\x60*/gudim;
/Exyz{1,32}i/gvdmy;
/[\xe2\x81\xa3]/vy;
function f172() {
    return 2115362873;
}
class C184 {
    static #n(a186, a187, a188, a189) {
        this[257] *= -5;
    }
}
function f192(a193, a194) {
    return this == this ? a193 : this;
}
