new Uint8ClampedArray(1571);
const v11 = new Uint8ClampedArray(128);
for (let [v12,v13,v14] of v11) {
    v13.e **= -256;
}
const t5 = 128;
t5[0] = v11;
let v16 = 256;
const v19 = --v16;
Math.hypot(2);
Math.max(v19);
const v22 = v19 & 2;
v16 / "d";
Math.imul(v22, v16);
!-8.203024669614315e+307;
new Uint8ClampedArray(462);
new Uint8ClampedArray(202);
new BigUint64Array(2864);
new BigUint64Array(210, 202, 2);
const v39 = new Set();
new Uint16Array(116);
new Int16Array(512);
new Int32Array(9);
class C52 {
}
function F53(a55, a56, a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
}
const v59 = new F53();
new F53(v59, F53, F53, v59);
const v61 = [7,128];
const v62 = [13,-2103725161,15240,-9223372036854775807,1077763702,256,-1024,9,1073741823,-2];
const v63 = v39[4];
v63 | v63;
const v65 = [40213,422333454,47387,65536,-51830];
v65[2] = v65;
0 - 0;
try { v65.splice(-1628878962); } catch (e) {}
let v76 = 2;
let v77 = ++v76;
v77 >> 268435440;
268435440 || v77--;
try { gc(); } catch (e) {}
gc();
const t43 = [8.360030709333259,416819.70671931445,1000.0,-1.0513464134302462e+307,2.2250738585072014e-308,-999.1393293497049];
t43.length = 1;
const v85 = /xyz{1,32}?/gusy;
class C86 {
    268435440 = v85;
}
new BigInt64Array();
try { ("boolean").repeat(1000000.0); } catch (e) {}
const t52 = "toString";
t52[6] = "toString";
"toString" == "toString";
let [,...v94] = [1e-15,1.0,-3.0,1.43935350979979e+308,-0.0];
function f95() {
    const o99 = {
        ...1.0,
        set b(a98) {
        },
    };
    return o99;
}
f95();
("boolean").split("toString");
8 < "boolean";
const v105 = new Uint8ClampedArray();
try { v105.reduceRight(v105); } catch (e) {}
("I").localeCompare();
-256 >> -256;
function f110(a111, a112) {
    a112--;
    new Float32Array([-37102.6674218484,-969411.635186719,-1.3592557640113297e+308,0.9054806195219168,1000000000000.0,-0.0,-3.0,-0.0]);
    class C117 {
        static {
            this < this;
        }
    }
    a111 | a111;
    const o156 = {
        "c": 15135,
        "a": 15135,
        "d": a111,
        __proto__: a112,
        "g": -1628878962,
        "type": "boolean",
        "a": a111,
        set b(a122) {
        },
        "g": 15135,
        "b": a112,
        get f() {
            super[1000000.0] = this;
            Math.exp(-359.60295377780096);
            const v127 = [-503399.81061701436,0.07820891042711386,-100.04924869632453,-Infinity];
            [[[-1e-15,-4.547098672084515,6.731189859503068,1000.0,1000.0,414.1111077300918,567.5737904015757],v127,v127]];
            try {
                new Int8Array(9);
                function f134() {
                    return f134;
                }
                new Uint16Array();
                !0.8843420658768774;
                function F138() {
                    if (!new.target) { throw 'must be called with new'; }
                }
                const v141 = new F138();
                const o149 = {
                    [v141](a144, a145, a146, a147) {
                        "D2z" < a144;
                    },
                };
                const o151 = {
                    [f134]() {
                    },
                };
                [o151];
                v62.copyWithin(8, -268435456, -256);
            } catch(e155) {
            }
            return this;
        },
    };
    o156.g = o156;
    return o156;
}
let v157;
try { v157 = f110(15135, 15135); } catch (e) {}
v157[1000000];
f110(925.1427495594241, v61);
f110(317008.8127941969, -4);
f110(1000000.0, v62);
268435441n ^ 268435441n;
268435441n - 268435441n;
const v166 = new BigUint64Array();
v166[2445191368] = 268435441n;
