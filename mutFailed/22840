function f0() {
    const v2 = -Infinity;
    const o7 = {
        "d": 8,
        ...v2,
        [8](a5) {
            try { a5(this, a5, a5, v2, a5); } catch (e) {}
            return 8;
        },
        ...-7.850915443949695,
        "f": v2,
        [v2]: -7.850915443949695,
        "a": -7.850915443949695,
    };
    return o7;
}
const v8 = f0();
let v9 = f0();
f0();
const v13 = new Uint8Array(3054);
const v16 = new Int32Array(255);
new BigUint64Array(8);
function F20() {
    if (!new.target) { throw 'must be called with new'; }
    const v23 = Date.toString(F20);
    const v25 = v23[23].trimRight;
    const v26 = v25.toString;
    let v27;
    try { v27 = new v26(v23, v26, F20); } catch (e) {}
    let v28;
    try { v28 = v25(F20, F20, F20, F20); } catch (e) {}
    const v29 = v23.replaceAll();
    v29[30] = v29;
    const v31 = new Uint32Array(Uint32Array);
    const v32 = v31[2];
    const v34 = new Set(v28);
    const v35 = v34.add(F20);
    try { v35.keys(); } catch (e) {}
    const v37 = v34.add;
    let v38;
    try { v38 = v37(); } catch (e) {}
    const v40 = v34["delete"]();
    const v41 = v40 || v40;
    const v42 = v41 || v41;
    const v43 = v42 && v42;
    const v44 = v41 && v41;
    const v45 = v44 || v44;
    const v46 = v45 || v45;
    v46 && v46;
    const o49 = {
    };
    const v51 = new Array(Array);
    v51[0];
    const v54 = ("getPrototypeOf").blink(this, F20, "getPrototypeOf", v32, v45);
    const v55 = v54[28];
    ~20670;
    ~20670;
    try { v9["n"](); } catch (e) {}
    F20 = Date;
    ({"d":v9,} = v32);
    try {
        v41.toString = F20;
    } catch(e62) {
    }
    v40 | v40;
    const v64 = v55.strike(F20, F20, 19793, v28);
    v64.split(v64, v43);
    const v66 = v54.strike();
    v8[2] /= 8;
    const v67 = v13[1000];
    v32 << v38;
    function F69(a71, a72) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.h = v38;
        } catch(e73) {
        }
    }
    const v74 = new F69(v13, v9);
    new F69(v74, v9);
    new F69(v40, v40);
    const v77 = v66.search;
    try { v77.call(v28, v55, Uint32Array, v38, v77); } catch (e) {}
    const v79 = v66.replace();
    v79[11] = v79;
    class C80 {
    }
    const v81 = new C80();
    const v82 = v81.hasOwnProperty;
    let v83;
    try { v83 = v82(F20, v44, F20); } catch (e) {}
    class C84 extends C80 {
        static m(a86, a87, a88, a89) {
            Reflect.construct(v23, [], F69);
            return Reflect;
        }
        ["getPrototypeOf"] = C80;
    }
    const v93 = new C84();
    const v94 = v93.constructor;
    new v94(v40, v94, v94);
    const t101 = v93.constructor;
    new t101();
    const v98 = new C84();
    const v99 = v98.constructor;
    try { v99(); } catch (e) {}
    const t106 = v98.getPrototypeOf;
    new t106();
    try {
        v16.g = v83;
    } catch(e103) {
    }
    v67 ^ 3054;
    const v106 = BigUint64Array.of();
    v106.entries();
    v106.entries();
    const v110 = Uint8Array.length;
    v110 + v110;
    const v112 = new C84();
    const t119 = v112.getPrototypeOf;
    const v114 = new t119();
    const v115 = v114.getPrototypeOf;
    v115 % v115;
    const v117 = v112.getPrototypeOf;
    new v117();
    const v119 = new v117(F20);
    v119 && v8;
    Date("delete");
    let {"buffer":v122,"byteOffset":v123,"length":v124,} = v13;
    v42 in v27;
    delete v112[4];
    v119.getPrototypeOf = v119;
    const v127 = new C84();
    const t133 = v127.getPrototypeOf;
    const v129 = new t133();
    const v130 = v127.getPrototypeOf;
    const v131 = new v130();
    v131.getPrototypeOf = v119;
    try { v130(v127, v129, Set, v119); } catch (e) {}
    const v133 = new v130();
    const v134 = v133.constructor;
    const v136 = -425087802 >>> -425087802;
    class C138 extends Array {
    }
    const v139 = new C138();
    try { v139.group(v136); } catch (e) {}
    try { v134.call(v55); } catch (e) {}
    new v134();
    for (const v144 of Array(19793)) {
    }
}
new F20();
new F20();
