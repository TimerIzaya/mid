new BigInt64Array(8);
function f9() {
    const o15 = {
        0: 549538.9552070533,
        [-6.170254254244802e+307](a13, a14) {
        },
    };
    return o15;
}
f9();
let v19 = /a|b/vdy;
let v20 = /7Z(?:a?)+/gudsy;
const v21 = /\coQ/gdy;
function F22(a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v19;
    } catch(e25) {
    }
    try {
        this.g = a24;
    } catch(e26) {
        v21.dotAll >>= e26;
        let v27;
        try { v27 = e26(e26, v20); } catch (e) {}
        v20 = v19;
        return e26;
        v19 = v27;
    }
}
const v28 = new F22(v19);
this.onmessage = f9;
try {
    this.fuck(v28, 4);
} catch(e31) {
}
new Uint32Array(4);
const v34 = [];
-(-v34 && v34);
const t38 = 536870889;
const v38 = new t38();
v38.e = v38;
function f40(a41, a42) {
    return Math.tanh("1");
}
f40(f40, f40);
%OptimizeFunctionOnNextCall(f40);
new Float32Array(6);
function f48() {
    class C49 {
        constructor(a51) {
            const v52 = /[^7Y[a-zA-Z0-9]?]/vdmy;
            for (let v53 = 0; v53 < 5; v53++) {
                function f54() {
                    const v56 = Array();
                    let v57;
                    try { v57 = v56.reduceRight(v52); } catch (e) {}
                    return v57;
                }
                f54();
            }
        }
    }
    new C49();
    new C49();
    class C61 extends C49 {
    }
    const v62 = [];
    function f63(a64, a65, a66, a67) {
        function f68() {
            return f63;
        }
        class C69 extends f68 {
        }
        const v70 = new C69();
        const v71 = v70.toString();
        for (let i = 0; i < 5; i++) {
            ["object",v71,"object",v62];
        }
        return v71;
    }
    const v74 = new C61();
    return v74;
}
%PrepareFunctionForOptimization(f48);
f48();
%OptimizeFunctionOnNextCall(f48);
f48();
