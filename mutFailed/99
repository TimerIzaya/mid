class C3 {
    toString(a5, a6) {
        const v7 = this[this];
        try {
            this.fuck(/((?:a?)?a$+)/guisy, a6, v7, undefined);
        } catch(e11) {
        }
        return this;
    }
    ["toString"];
}
const v12 = new C3();
const v13 = new C3();
const v14 = new C3();
function F15(a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a17;
    } catch(e19) {
    }
}
new F15(v14, v12);
new F15(v13, C3);
new F15(v13, v13);
1.1660447917673544e+308 | 1.1660447917673544e+308;
function F33(a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
}
const v37 = new F33();
class C38 {
    constructor(a40) {
        const v42 = Symbol.iterator;
        const o44 = {
            [v42]() {
            },
        };
    }
}
for (let i47 = 0; i47 < 10; i47++) {
    try {
    const t0 = -44394n;
    t0();
    } catch (e) {}
    !-1802551371;
}
const v56 = new F33();
const v59 = new Uint32Array();
[v56,v37,v59[0.29489550717955537]];
