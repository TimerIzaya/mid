const v1 = new Map();
function f5(a6) {
    const o16 = {
        n(a8, a9) {
            try {
                const v10 = (a11, a12, a13) => {
                    try {
                        a12.a = v1;
                    } catch(e14) {
                    }
                    return Map;
                };
                this[v1] = a6;
            } catch(e15) {
                super.a = a6;
            }
            this[48] = a8;
            return a6;
        },
        "g": a6,
        2147483647: 512n,
        "c": 449397732n,
        "a": a6,
        "d": 512n,
        25: a6,
        "c": a6,
        "g": v1,
        "a": -128n,
    };
    return o16;
}
f5(-128n);
const v18 = f5(-128n);
const v19 = f5(512n);
class C23 extends f5 {
    4 = 449397732n;
    2771 = v18;
    4294967296;
    6 = v1;
    [449397732n];
    #e = -128n;
    constructor(a25, a26, a27, a28) {
        super(-128n);
        const v29 = this <= a26;
        const v31 = [this,[v29,f5,v29,a28,v29],a27];
        const v32 = [a25,512n,v31,268435441];
        super[v29];
        const v34 = a26?.[v1];
        %VerifyType(a28);
        let v35;
        try { v35 = a27(268435441, v32, v31, -128n, 512n); } catch (e) {}
        try { new v35(v35, a25); } catch (e) {}
        ("-65417").normalize("NFD");
        super.a;
        const v43 = new Int16Array(3765);
        new Uint8ClampedArray(10);
        new Int32Array(7);
        "-65417" + a27;
        try { v35(v19, f5, 3765); } catch (e) {}
        v43 <= a25;
        h = v34;
        try {
            const o53 = {
            };
            new Int32Array(o53);
        } catch(e55) {
        }
    }
}
new C23(-46207, f5, -46207, -46207);
new C23(-46207, 449397732n, -46207, -46207);
new C23(-46207, f5, 268435441, 2147483647);
const v60 = Date.prototype;
try { v60.setFullYear(); } catch (e) {}
