function f3(a4) {
    const o5 = {
        ["o"]: a4,
        "c": "-1",
        "g": a4,
        __proto__: a4,
        234: "h",
        ..."o",
        "d": "-1",
        3: "h",
        "h": "-1",
        ["h"]: a4,
    };
    return o5;
}
try { f3("o"); } catch (e) {}
f3("-1");
f3("-1");
f3("-1");
[-9785590,129,4294967295,-14,30556,12533,1073741824];
[-8040,-9223372036854775807,-637264941,868138400,11,27202,3,1287386041,0,1];
[-2147483647,1073741824,42618,1073741824,-13138];
try { ("6").toLowerCase(); } catch (e) {}
try { ("536870889").search("536870889"); } catch (e) {}
1073741824n << 1073741824n;
257n / 257n;
const v26 = new Uint8ClampedArray(16);
v26[10] = v26;
const v28 = -1322;
const v30 = new Uint8ClampedArray(1322);
const v31 = v30[315];
-v31;
function F33(a35, a36, a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    const v39 = this?.__lookupGetter__;
    try { new v39("boolean"); } catch (e) {}
    try {
        this.a = "536870889";
    } catch(e41) {
    }
    try {
        this.b = a38;
    } catch(e42) {
    }
}
new F33(1073741824n, 1073741824n, 257n, "6");
const v44 = new F33(1073741824n, 257n, 257n, v28);
v44.b = v44;
const v45 = new F33(v31, 257n, 257n, "536870889");
6 >>> 6;
new BigUint64Array(6);
3768 >>> 3768;
3768 >>> 3768;
BigInt64Array.BYTES_PER_ELEMENT = BigInt64Array;
const v55 = new BigInt64Array(4046);
const v56 = v55[123];
v56 > v56;
-115;
function f61(a62, a63) {
    a62 + a62;
    a63 > a63;
    a62++;
    a63 + a63;
    const v68 = a62++;
    v68 * v68;
    v68 >> v68;
    try {
        v44.toString = a63;
    } catch(e71) {
    }
    Object.defineProperty(v45, v45, { configurable: true, enumerable: true, get: f61 });
    let o73 = {
        "d": a62,
        ...a62,
        get e() {
            return a63;
        },
    };
    [,...o73] = v55;
    a63[4046];
    ArrayBuffer.name;
    const o78 = {
        "maxByteLength": 3035,
    };
    512 + 512;
    new ArrayBuffer();
    new Float32Array();
    return 115;
}
const v84 = f61(4046, 3768);
v84 - v84;
Uint8ClampedArray.name = Uint8ClampedArray;
let v87;
try { v87 = Uint8ClampedArray.bind(f61); } catch (e) {}
v87.name;
