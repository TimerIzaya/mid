const v0 = [];
new Set();
try { v0(); } catch (e) {}
const v8 = new Uint16Array(3906);
function f9() {
    return 16;
}
v8.valueOf = f9;
v8[1390] = v8;
const v11 = new Uint16Array(16);
try { v11.entries(); } catch (e) {}
-10 ^ 3906;
[Map,v11];
[-8617,3];
function f20(a21, a22, a23, a24) {
    const o25 = {
        "h": a21,
        "b": a23,
    };
    return o25;
}
const v26 = new Int16Array(142);
try { new BigUint64Array(Uint16Array, Uint16Array, Uint16Array); } catch (e) {}
new BigUint64Array(2747);
new WeakMap();
-43292n - -43292n;
[1000000.0,4.0,877990.5497759602,-506457.5906391711,1.5877136832764825e+308,-5.0,0.37988723353754195];
const v36 = [-2.2250738585072014e-308,4.258971338651328e+307];
class C38 {
    #valueOf(a40, a41) {
    }
    static #a = v36;
    #g = 536870887n;
    static #f = v26;
    #b;
}
function f43() {
}
%OptimizeFunctionOnNextCall(f43);
const o44 = {
};
new BigUint64Array();
v26.normalize("NFKD");
const o51 = {
    [o44]: -43292n,
};
Set.d = o51;
