let {"c":v6,"g":v7,"length":v8,} = "trimStart";
const v9 = ("-667960140").trimRight(..."-667960140", v6, 1117990711n, v8);
function F11(a13) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = this;
    try {
        class C15 {
            constructor(a17, a18, a19, a20) {
                function F21(a23, a24, a25) {
                    if (!new.target) { throw 'must be called with new'; }
                    Math.trunc(a19);
                    const v27 = this.constructor;
                    try { new v27(); } catch (e) {}
                }
                new F21();
            }
        }
        new C15();
        new C15();
        this.e = a13;
    } catch(e32) {
    }
}
const t23 = "trimStart";
t23[v9] = 9059n;
("trimStart")["padEnd"](("-667960140").length, "padEnd");
function f36() {
    return "-667960140";
}
new F11("flatMap");
new F11("-667960140");
new F11("-667960140");
["-667960140"];
[-327074708];
["flatMap","trimStart"];
const v47 = new Date();
const v48 = v47.setUTCFullYear();
const v50 = new Set();
v50.toString = f36;
const v51 = v50.add(v47);
function f52() {
    delete v48[9059n];
    try {
        new f36();
    } catch(e55) {
    }
    return 321992294n;
}
v51.toString = f52;
let [v56,,...v57] = v50;
v56.setUTCHours(v51);
