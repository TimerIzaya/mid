class C3 {
    #n(a5, a6) {
        const v7 = a5?.[a6];
        new Date(-12 % -12);
        new Float64Array(3575);
        const v17 = new Int8Array(268435456);
        new BigInt64Array(2001);
        ([-536870912,12,65535,268435440,59916,438058862,-15,1073741823,-9007199254740990]).push(Float64Array);
        const v25 = new Float64Array(256);
        const v26 = [1073741824,-523864342,1161249740];
        const o27 = {
            ...v25,
            ...v26,
        };
        const v29 = eval(eval);
        try { v29.isExtensible(v17); } catch (e) {}
        try {
            v7.#n(v7, 479379000, v7);
        } catch(e32) {
        }
        return NaN;
    }
    #g;
    static #a;
}
new C3();
const v34 = new C3();
new C3();
class C36 {
    get b() {
        v34[779] = 479379000;
        try {
            this.a = this;
        } catch(e38) {
        }
        return v34;
    }
    static h;
    static #d = C3;
}
const t40 = "b";
new t40();
new C36();
new C36();
const v44 = new Int32Array(1024);
v44[3];
for (let v46 = 0; v46 < 25; v46++) {
}
