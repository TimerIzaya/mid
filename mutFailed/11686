const v5 = new Uint8ClampedArray(206);
function f6(a7, a8) {
    return 206;
    const v11 = new Uint8Array(10);
    return Float32Array.from(v11);
}
v5[Symbol.toPrimitive] = f6;
const v18 = new Float32Array(808);
const v21 = new Int8Array(808);
class C22 extends Int8Array {
    [v5] = v18;
    constructor(a24, a25, a26, a27) {
        super(a24, a24, a26);
        const o32 = {
            valueOf() {
                super.e = "-380138368";
                for (let v29 = 0; v29 < 32; v29++) {
                    v21["p" + v29] = a26;
                }
                return Uint8ClampedArray;
            },
        };
    }
}
new C22(206, 9, 808, "-380138368");
new C22(206, 206, 808, "repeat");
new C22(9, 808, 9, "repeat");
%PrepareFunctionForOptimization("object");
