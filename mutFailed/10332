const v0 = [NaN,8.949263972423869e+307,-1000000000.0,-3.241989508332792];
const v1 = [-5.0,9.423349133042894,0.6963517386412886,0.0,-1000000000.0,0.0,-3.0,1.6427950115598783e+308,-439.52542119950783];
const v2 = [-348.5417667416275,-2.2250738585072014e-308,4.0,-Infinity];
const v3 = [v1,v0];
const v4 = [v3,v0];
[v4,v0];
class C12 {
    toString(a14, a15) {
        try { new a14(a14, a15, a15, -268435456, a14, this); } catch (e) {}
        function f17() {
            return -268435456;
        }
        super.a = 9.420694421401304;
        v4[8] = v3;
        [-669202.3728829386,1.996847497179264e+307,2.0,0.5966180566952808,-854.8390856772294,-290341.2569189394];
        [1.0,4.028336949134655,4.833512005820985,-7.307878915605805];
        [-1000.0,298609.33880985156,-0.0,-410.0601323632849,428424.30801010435,-4.0,6.470926840160386e+307,1000000000.0,133074.5968172052,-420.4360113582668];
        return 9.420694421401304;
    }
    [v2];
    static #c = C12;
}
new C12();
new C12();
const t24 = -268435456;
new t24();
class C27 {
    static #p(a29) {
        function f30(a31) {
            return a31;
        }
        class C32 extends f30 {
            static [-1] = 8;
            static [a29];
            static 268435441;
        }
        return a29;
    }
    [0.028957958839558873];
    static 2147483648 = "2147483649";
    static #g;
    #a;
}
const v33 = new C27();
const v34 = v33?.constructor;
try { new v34(); } catch (e) {}
const v36 = new C27();
try { v36.propertyIsEnumerable(C27); } catch (e) {}
new C27();
/[\11]/gm;
/(?:a*)*/gudm;
const v42 = /a(?!bbb|bb)c/vi?.toString;
try { new v42(); } catch (e) {}
~117;
const v47 = new Uint16Array(Uint16Array);
v47[1];
new Int32Array(31);
try { Uint32Array.toString(); } catch (e) {}
const t58 = "2147483649";
new t58(128);
function f56() {
    let v58 = 1000000000000.0;
    v58--;
    const o63 = {
        "e": Uint16Array,
        __proto__: 3.4890473589784586e+307,
        "g": 12,
        o(a62) {
            return a62;
        },
        ...v58,
    };
    return Int32Array;
}
%PrepareFunctionForOptimization(f56);
v2();
f56();
%OptimizeFunctionOnNextCall(f56);
f56();
