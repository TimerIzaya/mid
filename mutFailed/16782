class C3 {
    [-661128.1911975017] = Infinity;
    m(a5, a6) {
        const v8 = a6.iterator;
        const o17 = {
            [v8]() {
                let v10 = 10;
                const o16 = {
                    next() {
                        v10--;
                        const v14 = v10 == 0;
                        const o15 = {
                            "done": v14,
                            "value": v10,
                        };
                        return o15;
                    },
                };
                return o16;
            },
        };
        return o17;
    }
}
const v18 = new C3();
const v19 = new C3();
const v20 = new C3();
function F21(a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        a24.b = v18;
    } catch(e26) {
    }
}
const v27 = new F21(v20, v19, v20);
const v28 = new C3(v18, v27, v18);
new F21(v28, v18, C3);
function F33() {
    if (!new.target) { throw 'must be called with new'; }
    for (let v35 = 0; v35 < 500; v35++) {
        "p" + v35;
        (-661128.1911975017).fontcolor(v35);
        const v40 = this.trimLeft()[12];
        ("object")[v40.substring(v40, v40)];
    }
}
new F33();
new F33();
