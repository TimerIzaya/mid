let v3;
try {
const t0 = -30020;
v3 = t0(-30020, 1, -562008119, -30020, -30020);
} catch (e) {}
try { v3(v3, ...1, 1, 1, 1, v3); } catch (e) {}
try {
    v3.valueOf = v3;
} catch(e5) {
}
class C6 {
    static #d = 1;
    constructor(a8, a9) {
        const v10 = this.c;
        const v11 = v10 === 1;
        v11 ? v10 : 1;
        const t15 = -30020;
        t15[8] = v11;
        super.c;
    }
    [1] = -30020;
    [-30020];
    static [1] = -30020;
    g = -30020;
}
const v14 = new C6(1, -562008119);
const v15 = new C6(-30020, -562008119);
new C6(-562008119, 1);
new Map();
class C19 extends Map {
    static get e() {
        %VerifyType(C6);
        new C6(-30020, -562008119);
        (-562008119) ** -562008119;
        super.size;
        v3[-562008119] %= -562008119;
        super.clear();
        delete this[v14];
        return v14;
    }
    static o(a30, a31, a32, a33) {
        const v35 = [-30020,v14,[v14,1,v15,this,a33],this,a31];
        const v36 = [v35,a31,v35];
        let v37;
        try { v37 = v36.toLocaleString(); } catch (e) {}
        ++v37;
        return v14;
    }
}
new C19();
new C19();
new C19();
Uint32Array[1] = 15;
new Float64Array(Uint32Array);
