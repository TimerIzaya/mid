function f5(a6) {
    for (let v9 = 0; v9 < 100; v9++) {
    }
    return "a";
}
let v10 = -1758454604n;
class C11 {
    constructor(a13, a14, a15, a16) {
        v10 * 0.17276495077323362;
        let v22 = +-536870912;
        v22++;
    }
    #e = "17691";
    static ["17691"];
    static #e = C11;
}
new C11(v10, "goTP", "a", -1148338651n);
const v25 = new C11(770249296n, "a", "goTP", -1148338651n);
new C11(-1148338651n, "17691", v25, -1148338651n);
const v27 = /nupa\Sc/vms;
function f28() {
}
const t22 = /(?:a*)+q(?<a>.)/guds;
t22.constructor = f28;
function f30(a31) {
    v10++;
    const o33 = {
    };
    function f34() {
    }
    class C35 extends f34 {
        toString(a37, a38) {
            const v39 = this.constructor;
            new v39(a38, v39, this, v39, C35);
            -this;
        }
    }
    const v42 = a31.constructor;
    new Uint8ClampedArray(1000);
    try { v42(a31, f28); } catch (e) {}
    class C47 {
    }
}
for (let [i74, i75] = (() => {
        eval("");
        const v53 = Math.log2();
        const v54 = [315.3838771878211,0.8321654879979539,1.0,-813011.8421276518];
        function F55(a57, a58, a59, a60) {
            if (!new.target) { throw 'must be called with new'; }
            for (let v61 = 0; v61 < 100; v61++) {
                function f62(a63, a64, a65) {
                    const o67 = {
                        get d() {
                            return a64;
                        },
                    };
                    for (let i = 0; i < 10; i++) {
                        0 < 10;
                        delete v54[v53];
                    }
                    return o67;
                }
                f62(a60, f62, f62);
            }
        }
        return [0, 10];
    })();
    (() => {
        const v76 = i74 < i75;
        function F77(a79, a80) {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v81 = new F77(F77, F77);
        ~v81;
        function F83(a85, a86, a87) {
            if (!new.target) { throw 'must be called with new'; }
        }
        return v76;
    })();
    i75--) {
    for (let v93 = 0; v93 < 50; v93++) {
    }
}
v27.constructor;
