const v0 = [];
const v9 = new Uint32Array(-822587519);
const v12 = new BigUint64Array(1382689167);
let v15 = 0;
while (v15 < -34134651) {
    v0[2];
    v15++;
}
new RangeError(0);
function f21() {
}
const v22 = [3,1024,490145092,10,-9223372036854775807,-9223372036854775807,1441684544,-1572996615];
const v23 = [127,-65535,64,343690887,-2123787437,2,2147483649,-53151,1];
const v24 = [1342014474];
class C25 {
    toString(a27) {
        const v28 = f21();
        try { this["any"](v28); } catch (e) {}
        return v24;
    }
    o(a32) {
        return v22["findLastIndex"](f21, this);
    }
    static 10000 = v23;
    static [v23];
}
const v35 = new C25();
new C25();
new C25();
v35.b;
function f45(a46) {
    function f48(a49) {
        a46 ||= -47530;
    }
    try {
        new f48(v24);
    } catch(e52) {
    }
    d = a46;
    this.onmessage = f48;
    let [...v53] = v9;
    v12["findIndex"](v0[268435441], this);
    this < 65535;
    C25 ^ v23;
    [47245,4294967296,1213575163,536870889,-15,536870888,-1855227439,2130791141];
    [10];
    [-9007199254740990,-16,-536870912,10000,-2,16,1278783829,4294967297];
}
const v64 = [-9007199254740992];
const o65 = {
    "arguments": v64,
    "type": "function",
};
new Worker(f45, o65);
