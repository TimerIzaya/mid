const v2 = [127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649];
-1148418937 - -1148418937;
v2.toSpliced(-1148418937, -1148418937);
const v6 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f7(a8, a9, a10, a11) {
    function f12() {
        const v13 = v6.length;
        let v14 = v13 & v13;
        v14--;
        const v18 = new Float32Array(1334);
        v18[1283] = v18;
        return a8;
    }
    f12();
    %OptimizeFunctionOnNextCall(f12);
    return a9;
}
for (let v20 = 0; v20 < 5; v20++) {
    f7();
}
class C23 {
    toString(a25, a26) {
        a26 = "d";
        return this;
    }
    static get f() {
        let v27 = this;
        v27[98] ^= v27;
        ({"g":v27,} = v27);
        const v31 = [1.0,141599.63044947106,730.845463907873,1000000.0,-4.2811873669589365e+307,0.0,3.0];
        try { v31.forEach(-5n); } catch (e) {}
        Math.sin(-9007199254740991);
        return "d";
    }
}
const v37 = new C23();
const v38 = v37?.constructor;
try { new v38(); } catch (e) {}
const v40 = new C23();
const v41 = v40?.constructor;
try { new v41(); } catch (e) {}
new C23();
let v47 = -1024;
function F48(a50, a51, a52, a53) {
    if (!new.target) { throw 'must be called with new'; }
}
F48.g = F48;
const v54 = new F48();
const v55 = v54?.constructor;
try { new v55(36858n, v37, v54, v37); } catch (e) {}
const v57 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v58 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
function F60(a62, a63) {
    if (!new.target) { throw 'must be called with new'; }
}
const v64 = F60?.__lookupSetter__;
try { new v64(v57); } catch (e) {}
class C66 {
}
C66.d = C66;
-4294967297n >> -4294967297n;
const v69 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
v69[2] = v69;
const v70 = [601759695];
for (let v72 = 0; v72 < 5; v72++) {
    function f74() {
        -4294967295 / -4294967295;
        Array().unshift();
        Set.name;
        const v84 = new Set();
        function F85(a87, a88) {
            if (!new.target) { throw 'must be called with new'; }
            F85();
        }
        try {
            v57.forEach(Float64Array);
        } catch(e91) {
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        class C94 {
        }
        const v95 = new C94();
        try {
            v95.__proto__ = F60;
        } catch(e96) {
        }
        const v97 = Symbol.toPrimitive;
        const o101 = {
            toString(a99, a100) {
            },
        };
        const o127 = {
            [522675525n](a104, a105) {
            },
            "c": v70,
            valueOf(a107, a108) {
                return a108;
            },
            [-4294967297n](a110, a111, a112, a113) {
            },
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v69,
            ...v54,
            [v97]() {
            },
            "type": C66,
            valueOf(a116, a117) {
                for (let v118 = 0; v118 < 25; v118++) {
                    Math.sin(v118 ** 2);
                }
                return Symbol;
            },
            4: "Vre",
            toString(a124, a125, a126) {
                return a125;
            },
        };
        1334 >> 1334;
        new Float32Array();
        const v133 = [];
        const v134 = [v133,v133];
        function F135(a137) {
            if (!new.target) { throw 'must be called with new'; }
            const v138 = this?.constructor;
            try { new v138(); } catch (e) {}
        }
        class C140 extends F135 {
            valueOf(a142, a143, a144, a145) {
                super[this] = F135;
                945 !== 945;
                const v149 = new SharedArrayBuffer(945);
                try { new Int16Array(v84, undefined, v84); } catch (e) {}
                new Int16Array(v149);
            }
        }
        C140.b = C140;
        const v153 = new C140();
        const v154 = v153?.constructor;
        try { new v154(); } catch (e) {}
        const o162 = {
            set g(a157) {
            },
            [v134](a159, a160, a161) {
            },
        };
        v133.length = 65535;
        for (const v164 in o162) {
            try { v153.valueOf(); } catch (e) {}
        }
        try { ("function").sup(); } catch (e) {}
        const v169 = [272822757,272822757,272822757];
        const v170 = [-2.0,272822757,"function"];
        v170[2] = v170;
        const o171 = {
            __proto__: v170,
        };
        o171.g = o171;
        v169[o171] &= 272822757;
        v47 %= -268435456;
        const v172 = new Uint32Array(v58);
        const v173 = v172?.constructor;
        try { new v173("Vre", C23, C23); } catch (e) {}
        return undefined;
    }
    f74();
    %OptimizeFunctionOnNextCall(f74);
}
