function f0() {
    const o19 = {
        ..."toString",
        648: 38725,
        m(a5, a6) {
            try {
                f0();
                %PrepareFunctionForOptimization(f0);
                f0();
                f0();
                %OptimizeMaglevOnNextCall(f0);
                const t11 = 1000000.0;
                t11();
                this.fuck(-12n, "bifv2", false, -12n);
            } catch(e18) {
            }
            return a6;
        },
    };
    return o19;
}
const v20 = f0();
f0();
f0();
/a\Sc?/visy;
const v24 = /a[a]/gvy;
/F/vimsy;
function f28() {
    return f28;
}
class C29 extends f28 {
}
class C30 extends C29 {
}
C30.valueOf = f28;
function f33(a34, a35) {
    class C36 {
    }
    new C36();
    function f38(a39, a40, a41) {
        const o43 = {
            get b() {
                return C36;
            },
            127: C30,
        };
        return f38;
    }
    %PrepareFunctionForOptimization(f38);
    return a35;
}
const v45 = Symbol.toPrimitive;
Uint8Array[v45] = v45;
function f46(a47, a48, a49, a50) {
    try { a47(); } catch (e) {}
    a48 & a48;
    (3 | C30) * f28;
    a47 / a47;
    const v56 = a48 < a47;
    const o60 = {
        n(a58, a59) {
            return v56;
        },
    };
    return a49;
}
f46(Uint8Array);
new Float32Array(4);
const v65 = new Int8Array(1319);
new Uint8ClampedArray(3437);
class C69 {
}
function f70() {
    let v71 = v24 | v20;
    v71 ^= 3;
    return 3437;
}
C69.toString = f70;
for (let v72 = 0; v72 < 5; v72++) {
    function f73() {
        const o75 = {
            "apply": f73,
            "call": Symbol,
            "construct": Symbol,
            "defineProperty": Symbol,
            "deleteProperty": Symbol,
            "getOwnPropertyDescriptor": v65,
            "getPrototypeOf": Symbol,
            "has": Symbol,
            "ownKeys": f0,
            "preventExtensions": f0,
            "set": f73,
            "setPrototypeOf": Symbol,
        };
        new Proxy(v65, o75);
        const v78 = Symbol.toPrimitive;
        function f79() {
            const o82 = {
                m(a81) {
                    return f79;
                },
            };
        }
        v78.description.codePointAt(C69);
        return Symbol;
    }
    f73();
    %OptimizeFunctionOnNextCall(f73);
}
