class C3 {
    #b = "MIN_VALUE";
    #o(a5) {
        let v7 = -4294967295;
        -9007199254740990 | a5;
        v7--;
        v7 + -9007199254740990;
        Math.asinh(a5);
        return Math.log(-1.0);
    }
}
function f15(a16) {
    try { ("MIN_VALUE").concat(a16, a16, a16, a16); } catch (e) {}
    let v18 = -1;
    v18 <<= v18;
    return a16;
}
C3[Symbol.toPrimitive] = f15;
new C3();
const v22 = new C3();
new C3();
class C24 extends C3 {
    183 = v22;
    constructor(a26, a27) {
        a26[Symbol.toPrimitive] = f15;
        super();
        C3 == super[a26];
        try {
            super.lastIndexOf();
        } catch(e33) {
        }
    }
    [C3] = C3;
}
new C24(C24, v22);
const v35 = new C24("MIN_VALUE", C3);
new C24(v35, C3);
new Int16Array([4]);
