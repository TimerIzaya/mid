const v3 = new Int8Array(Int8Array);
try { v3.reduce(13); } catch (e) {}
for (let v13 = 0; v13 < 5; v13++) {
    const o17 = {
    };
    const v18 = o17.p;
    try { v18(); } catch (e) {}
    new BigInt64Array(4046);
    function f24(a25, a26) {
        a25++;
        const v28 = [];
        const v29 = [v28,v28];
        function F30(a32) {
            if (!new.target) { throw 'must be called with new'; }
        }
        class C33 extends F30 {
            valueOf(a35, a36, a37, a38) {
                super[this] = F30;
            }
        }
        const v42 = new C33();
        const o49 = {
            set g(a44) {
            },
            [v29](a46, a47, a48) {
            },
        };
        v28.length = 65535;
        for (const v51 in o49) {
            try { v42.valueOf(); } catch (e) {}
        }
        let o53 = {
        };
        [,...o53] = 4046;
    }
    f24();
    for (const v55 in "1024") {
    }
}
new BigUint64Array(125);
try { new Int16Array(Int16Array, Int16Array, BigUint64Array); } catch (e) {}
const v61 = new Int16Array(6);
try { v61.entries(); } catch (e) {}
function f63(a64, a65, a66) {
    a65 >>> -9223372036854775808;
    const o72 = {
        "d": a66,
        __proto__: v3,
        set a(a69) {
            const v70 = this[130];
            v70 & v70;
        },
        ...false,
        [Int8Array]: a65,
        ...a66,
        1073741824: 6,
        ...Int8Array,
        [a65]: 125,
    };
    return o72;
}
const v73 = f63(f63, 6, Int16Array);
const v74 = f63(v73, 125, v73);
v74[1073741824] = v74;
f63(Int16Array, 13, Int8Array);
class C76 {
    constructor(a78) {
        function f80(a81, a82) {
            function f84(a85) {
                let {"b":v86,"f":v87,"g":v88,...v89} = Reflect;
                return v86;
            }
            this.onmessage = 125;
            return f84;
        }
        Worker("function");
    }
}
C76.d = C76;
