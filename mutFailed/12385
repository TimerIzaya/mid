let v1 = 65537;
class C3 {
    #toString(a5) {
        new Uint8Array(121);
        new Uint16Array(7);
        new Int16Array(754);
        return -65535;
    }
    #e = v1;
    f;
}
const v15 = new C3();
const v16 = new C3();
const v17 = new C3();
class C18 extends C3 {
    [v16];
    get b() {
        const v24 = v1++;
        Math.log10(-1.8409337588574094e+307);
        v24 ^ -1.8409337588574094e+307;
        Math.ceil(-65535);
        return v17;
    }
    static [v16] = v1;
    static [v15];
}
const v28 = new C18();
const v29 = new C18();
const v30 = new C18();
function F31(a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v29;
    } catch(e35) {
    }
    try {
        this.d = a33;
    } catch(e36) {
    }
}
new F31(F31, v30);
const v38 = new F31(v17, v28);
const v39 = /(\1a)/gums;
const v40 = /V(?:a{5,1000000}){3,1000000}/vims;
const v41 = /(?<a>.)\k<a>?/vdimsy;
for (let v42 = 0; v42 < 27; v42++) {
    v39.compile(v40).lastIndex;
}
let v45;
try { v45 = v41(v40, v40, v40, v39); } catch (e) {}
%VerifyType(v45);
const v46 = [v41,v40,v39];
v46[2] = v46;
const v47 = [v46,v40,v41,v46,v46];
v47[2] = v47;
[v41,v39,v39];
let v49 = 8;
const v50 = v49--;
new BigInt64Array(v40, v39, v45);
const v53 = new BigInt64Array(v49);
new BigUint64Array(10);
const v59 = new Uint8Array(7);
const v60 = v59.constructor;
const v61 = new v60(Uint8Array, v53, v53);
try { Int32Array.bind(v46); } catch (e) {}
function f65() {
    3.4890473589784586e+307 === v45;
    let v68 = 1000000000000.0;
    const v69 = v68--;
    -v69;
    -v47 && v47;
    class C76 {
        static #m(a78) {
        }
        constructor(a80) {
            new Float32Array();
            let v83;
            try { v83 = a80.entries(); } catch (e) {}
            v83.next();
            const v85 = new Uint16Array(12, -4294967296, v69);
            new Float32Array(v85);
        }
    }
    new C76();
    new C76();
    v61.iterator;
    let v91;
    try { v91 = v53.reduce(Int32Array, v50); } catch (e) {}
    let v92 = 0;
    v92++;
    const v94 = new C76();
    new C76();
    const v96 = new C76(v91);
    [];
    [257828.6336153492,v96,v94,v96];
    const v99 = [];
    const v100 = v99[0];
    class C101 extends C76 {
    }
    new C101();
    const v103 = v99.constructor;
    try { v103.isArray(v99); } catch (e) {}
    class C105 extends v103 {
    }
    C105.a = C105;
    const v106 = new C105();
    const v107 = v106.constructor;
    try { v107.bind(); } catch (e) {}
    const o109 = {
        "e": v99,
        __proto__: v46,
        [v47]: v59,
        "h": 257828.6336153492,
    };
    try { o109.e(v100); } catch (e) {}
    return Int32Array;
}
%PrepareFunctionForOptimization(f65);
v60();
%OptimizeFunctionOnNextCall(f65);
f65();
new F31(v38, v30);
const v116 = new Float64Array(Float64Array, Float64Array);
class C117 extends Int16Array {
}
const v118 = new C117();
const o119 = {
    __proto__: v118,
};
try { v116.every(o119); } catch (e) {}
