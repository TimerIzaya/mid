const v3 = [1789829659n,1000n,1000n];
[1789829659n,1789829659n];
const v5 = [v3,v3,1789829659n,1000n,1789829659n,v3];
function F6(a8, a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -314412149n;
    } catch(e11) {
    }
}
const v12 = new F6(-314412149n, 1789829659n, v3);
const v13 = new F6(1000n, v5, v12);
new F6(1789829659n, v13, v5, v13, 1789829659n);
new Set(v13);
const v18 = [0.0,-Infinity,-147.46499796325293,-3.0,0.010365536828205624];
function f19() {
    const v21 = [65537,1073741825,7841,-12,13];
    const v22 = [1073741823,4294967295];
    v22[1] = v22;
    function F23(a25, a26, a27) {
        if (!new.target) { throw 'must be called with new'; }
        const v28 = this.constructor;
        try { new v28(a25, a26, a26); } catch (e) {}
        a25.pop(v5, a25, v28);
        a27.g = a27;
    }
    const v31 = new F23(v21, v22, WeakSet);
    new F23(v22, v22, v31, v13, WeakSet);
}
v18.toString = f19;
/a\Sc?/gvy;
const v35 = /(a[a-z])/gusy;
try { v35.compile(v18); } catch (e) {}
