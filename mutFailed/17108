[];
function f4(a5, a6, a7) {
    return a6;
}
class C8 extends f4 {
}
Object.defineProperty(C8, Float32Array, { enumerable: true, get: f4 });
class C14 {
    constructor(a16, a17, a18, a19) {
        function F20() {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v22 = new F20();
        const v23 = [6.345269750596144e+307,1.5426121797865451e+308,-1.0,1.0763754168130034e+308,-1.0165609707268582e+308,-2.220446049250313e-16,4.1652134965708285,Infinity,8.22884515469082e+307,-1000000000.0];
        function F24(a26, a27, a28) {
            if (!new.target) { throw 'must be called with new'; }
            new Date("2");
            const o33 = {
            };
            o33.g = "e";
            const v34 = this.constructor;
            try { new v34(v22); } catch (e) {}
            a26[3] = a26;
        }
        new F24(v23);
    }
    static 268435439;
}
new C14(512, 706, 706, 1);
new C14();
function f40(a41, a42) {
    return f40;
}
function f43() {
}
function f45() {
    return 4096;
}
new BigInt64Array(8);
new Uint8ClampedArray(Uint8ClampedArray);
new Uint16Array(8);
[-292.83735349768153,1000000.0,-Infinity];
class C58 extends f45 {
    constructor(a60, a61, a62) {
        a61.e = a61;
        class C64 extends a61.constructor {
        }
        const v65 = new C64();
        try { v65(); } catch (e) {}
    }
    /*
    constructor(a68, a69) {
        a68[1] = a68;
        super(a68);
        -2 | -2;
        ("sync")[-5.0];
    }
    */
    static #m(a76, a77, a78) {
    }
    static c;
    static #h;
    set e(a80) {
        Math.fround();
        Math.ceil();
    }
}
new C58(Uint8Array);
