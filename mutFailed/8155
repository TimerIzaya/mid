class C3 {
    constructor(a5) {
        function f6() {
            return this;
            class C8 {
                toString(a10, a11) {
                    super.g = "-9223372036854775808";
                }
                n(a13) {
                }
            }
            const v14 = new C8();
            v14 > "-9223372036854775808";
            return v14;
        }
        this[Symbol.toPrimitive] = f6;
        super[a5] = this;
        function F18(a20) {
            if (!new.target) { throw 'must be called with new'; }
            Object.defineProperty(this, "c", { enumerable: true, value: C3 });
            try {
                this.c = a5;
            } catch(e21) {
                const t23 = "Z7aTF";
                t23["undefined"] = this;
                const v23 = Symbol.match;
                this[v23] = "Z7aTF";
                const o24 = {
                };
                new Proxy(v23, o24);
            }
            try {
                const t32 = "undefined";
                t32.b = 65537;
            } catch(e27) {
            }
            try {
                this.c = a5;
            } catch(e28) {
            }
        }
        new F18("Z7aTF");
        new F18("undefined");
        new F18(F18);
    }
}
function f32(a33) {
    const v36 = new Uint8Array("Z7aTF" >>> C3);
    function f37(a38, a39) {
        const o40 = {
        };
        return o40;
    }
    const v41 = f37();
    v36[v41] = v41;
    return "undefined";
}
Object.defineProperty(C3, Symbol.toPrimitive, { writable: true, configurable: true, value: f32 });
const v44 = new C3(C3, 65537);
function f45() {
    return ("Vre").toLocaleUpperCase;
}
v44[Symbol.toPrimitive] = f45;
new C3(v44);
const v51 = new C3("Z7aTF");
const v52 = [1882719980,257,0,-2,65536,-1024,44928,7,1122218531];
const v53 = [256,-961787260,-59894,2147483648,65537,-13,268435456,-24478,-25420];
const v54 = [53567];
function F55(a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = v53;
    try {
        this.b = "undefined";
    } catch(e59) {
    }
    try {
        this.f = a58;
    } catch(e60) {
    }
    try {
        this.c = a57;
    } catch(e61) {
    }
}
const v62 = new F55(v44, v51);
new F55(v62, v52);
new F55(v62, v53);
const v66 = Math.d;
try { v66(v52, v54); } catch (e) {}
