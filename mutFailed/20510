function f0() {
}
new Int8Array(128);
const v4 = /(?:a*)+q(?<a>.)/guds;
function f5(a6) {
    a6.dotAll;
    const o9 = {
        get d() {
            return v4;
        },
    };
    return v4;
}
const o10 = {
};
new Uint8ClampedArray(798);
new Uint8Array(15);
const v18 = [1073741824,1073741823,1376142744,1073741825];
try {
    v18.forEach();
} catch(e20) {
}
new Float32Array(3098);
new BigUint64Array(4);
const v28 = Date.prototype;
try { v28.setFullYear(); } catch (e) {}
new Set();
(~9007199254740990).constructor;
const v36 = ("minor").valueOf("minor", "minor", "minor", "minor");
async function f37(a38, a39, a40, a41) {
    (await v36).call();
    return "minor";
}
([-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0]).length;
Date.parse(-73245.82270792685);
const t33 = 3098;
const v50 = new t33();
v50[1024] = 8n;
function F52() {
    if (!new.target) { throw 'must be called with new'; }
    const v54 = [-5.0,-4.0,-1.7976931348623157e+308,-897.6003446951657,-1000000.0,1.8928166106024224e+306,-2.0,-1000000000000.0];
    function F55(a57, a58, a59, a60) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v61 = new F55(v54, F52, v54, F55);
    const v63 = [F52,F52,F52,F52];
    Reflect.apply(v54.indexOf, v61, v63);
}
new F52();
function F68(a70) {
    if (!new.target) { throw 'must be called with new'; }
    new Float64Array(512);
    const o75 = {
    };
    o75.g = "f";
    function f76() {
        return v36;
    }
    function f77() {
        const v78 = [f77,f77];
        let v79;
        try { v79 = v78.every(f77); } catch (e) {}
        return v79;
    }
    const v80 = this.constructor;
    try { new v80(); } catch (e) {}
    this.g = 257;
    this.g = -1;
    this.h = a70;
}
new F68(257);
new F68();
class C85 extends TypeError {
}
const v88 = new BigInt64Array(1);
v88[0] = v88;
class C89 extends F68 {
    [6];
    valueOf(a91, a92, a93, a94) {
        const v95 = this?.constructor;
        try { new v95(); } catch (e) {}
    }
}
new C89();
new C89();
new C89();
