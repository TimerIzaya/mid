const v1 = new Set();
class C5 extends Set {
    [Set];
    [15] = 1337983142;
    constructor(a7) {
        super(v1);
        try { Math.fround(this); } catch (e) {}
        let v10 = 4;
        v10--;
        const v14 = v10 || 1073741825;
        v14 - v14;
        v10 | v10;
        Math.trunc(Set);
    }
}
try { new C5(Set); } catch (e) {}
try { new C5(51213); } catch (e) {}
new C5(1337983142);
const v21 = new C5(15);
try { v21.clear(); } catch (e) {}
const v23 = new C5(1337983142);
const v26 = /4H/gvisy.compile(/[m]/gvdimsy);
const v28 = gc?.constructor;
try { new v28(v26); } catch (e) {}
gc();
v23[15];
let v32 = 18;
v32--;
v32 ^ v32;
const v36 = [1630629478,9,2034969337];
for (let v37 = 0; v37 < 25; v37++) {
    const v38 = v36.__proto__;
    try { v38.findLastIndex(v21); } catch (e) {}
}
try { Math.cosh(Math); } catch (e) {}
let v43 = Math.sinh(0);
v43++;
try { new Int8Array(v32, v32, v1); } catch (e) {}
new Int8Array(v32);
158 ^ 158;
536870912 < 536870912;
Math.atan2(536870912, -9);
const v55 = new Set();
class C56 {
    [v55];
    static {
        this.name = this;
    }
}
C56.length;
new Int16Array(158);
let v62;
try { v62 = new Int16Array(C5, 15, C5); } catch (e) {}
v62[0];
const v64 = new Int16Array(2599);
try { v64.join(2599); } catch (e) {}
try { new Uint16Array(Set, v32, v32); } catch (e) {}
Uint16Array.prototype = Uint16Array;
const v69 = new Uint16Array(3);
v69[2] = v69;
for (let i = 0; i < 10; i++) {
    const o72 = {
        "a": 16n,
        1: 16n,
        257: undefined,
    };
    o72[257];
}
v69.reverse();
