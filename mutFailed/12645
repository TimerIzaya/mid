[-1000000000.0,-1.618221519119679,-5.388688785232292,-0.0,-115730.31800704019,0.9303419995660648,-1.0,0.9833941564795757,2.220446049250313e-16];
const v1 = [0.8839814588163849,-2.3196854887162406,-2.220446049250313e-16,-548696.7589901197,1.0,3.0,-2.0];
const v2 = [5.0,-2.0,-11.6839901024548,372526.333847814];
/(Qa\S)/gvsy;
/N[((\xed\xa0\x80))\x02(fKCC\x0f6a{1,2}?)?]/gvimsy;
/l(?<a>)uaP?/g;
const v10 = new WeakMap();
class C14 extends WeakMap {
    #n(a16, a17) {
        v10[C14.toStringTag] = v10;
        const v20 = a17 >> 6;
        try {
            v2.forEach(a17, v1);
        } catch(e22) {
        }
        return v20;
    }
    static [v1];
    static #f;
    a = v2;
    [5];
}
const v23 = new C14();
const v24 = new C14();
new v24();
class C27 {
}
new C27();
class C30 extends Set {
}
const v31 = v23.constructor;
const v32 = v31(C30);
let v33 = 0.3050534209767637;
v33--;
new C14();
[BigUint64Array];
v31.pop();
Math.__defineSetter__;
let v42;
try { v42 = v32(); } catch (e) {}
Math.sinh();
const o44 = {
};
if (5) {
    function F45(a47, a48) {
        if (!new.target) { throw 'must be called with new'; }
    }
    for (let v49 = 0; v49 < 5; v49++) {
        function F50(a52, a53) {
            if (!new.target) { throw 'must be called with new'; }
        }
    }
}
const o54 = {
    ...v42,
};
