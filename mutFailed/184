class C3 {
    static 11;
    m(a5, a6) {
        let v4 = this;
        v4 = a5;
        let v7 = delete v4?.[-1000.0];
        v7 ||= -1000.0;
        super[-9007199254740992];
        return -9007199254740992;
    }
    #f = -1000.0;
    c;
    #e = -9007199254740992;
    static #b = -9007199254740992;
    #p(a10, a11, a12, a13) {
        super.m();
    }
    static {
        [];
        try {
            super.setInt8();
        } catch(e18) {
        }
    }
    257 = 2;
    static valueOf(a20, a21, a22) {
        class C23 {
        }
        function f25() {
            return 2147483648n;
        }
        f25();
        new a22();
    }
    static 1 = -1000.0;
    static 2544510523 = -1000.0;
    static #f;
    8;
    static #a;
    static 3 = -1000.0;
    static #h = -9007199254740992;
}
const v30 = new BigInt64Array(2325);
for (const v31 in v30) {
}
const v32 = new C3();
const v33 = new C3();
const v34 = new C3();
const v35 = [v32,v34,v32,v33];
([Uint32Array,Uint32Array,Uint32Array,Uint32Array]).push();
new Uint8ClampedArray();
const v41 = [-1000.0,C3,v34,-9007199254740992,v34];
const v42 = [2,v34];
function F46(a48, a49) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -9007199254740992;
    } catch(e50) {
    }
}
new F46(-1000.0, v41);
new F46(v42, v35);
new F46(-2.0, v35);
const v54 = [12];
let v55 = 8;
"asIntN" / "number";
class C59 {
}
v55++;
v54.toLocaleString();
