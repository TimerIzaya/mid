const v0 = [];
const v4 = /((?<=a))/gudm;
const v5 = /gk4b*/vmsy;
let v7;
try {
const t0 = -1.3832922122240728e+307;
v7 = t0(2);
} catch (e) {}
for (let v8 = 0; v8 < 5; v8++) {
    v8 < 1;
    try { v7(v4, v8, v5, v8, -4); } catch (e) {}
    const v13 = Symbol.iterator;
    const o17 = {
        [Symbol]() {
            const o16 = {
                268435439: v13,
                [v7]: v0,
                ...this,
                "e": v4,
                "b": Symbol,
                next() {
                    return v5;
                },
            };
        },
    };
}
function F20(a22) {
    if (!new.target) { throw 'must be called with new'; }
    -a22;
    try {
        const v24 = [-0.685155357392599,5.0];
        function F25(a27, a28, a29, a30) {
            if (!new.target) { throw 'must be called with new'; }
            const v31 = this.constructor;
            try { new v31(); } catch (e) {}
            v24.length &= 1;
        }
        new F25(F25, v24, v24, v24);
        this.c = a22;
    } catch(e35) {
    }
}
const v36 = new F20(-268435456n);
v36.c;
const v38 = new v5(-268435456n);
+20572;
class C42 extends Set {
}
v38.c = v38;
new F20(-268435456n);
let v45 = 4;
v45++;
class C49 {
    constructor(a51, a52) {
        try {
            new Float64Array(7);
        } catch(e55) {
        }
        a52.__proto__;
    }
    f;
    set d(a58) {
        super.d;
        const o60 = {
        };
    }
}
const t68 = 257n;
const v61 = new t68();
try { v61.lastIndexOf(-1073741824n); } catch (e) {}
const v64 = new v4();
function f65(a66, a67, a68) {
    return f65;
}
v64[v61] instanceof f65;
try {
} catch(e71) {
    eval("");
}
