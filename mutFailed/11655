function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 1576162073;
    } catch(e3) {
    }
    try {
        this.length = 1576162073;
    } catch(e4) {
    }
    try {
        this.d = 1576162073;
    } catch(e5) {
    }
}
new F0();
new F0();
new F0();
14n ^ 14n;
[44196,-4];
[9,2];
[9007199254740992,-17301,10,9007199254740992,-1101632711,-65535];
const v19 = [19636,-54864];
function f20(a21, a22, a23, a24) {
    a22 <= a22;
    const v26 = a23 * a23;
    v26 | v26;
    const o28 = {
    };
    o28.b = o28;
    const v29 = a23.__proto__;
    const v30 = v29?.__defineSetter__;
    try { new v30(-8n, v29); } catch (e) {}
    return f20;
}
f20.arguments = f20;
for (let v32 = 0; v32 < 10; v32++) {
    const v34 = f20(v19, v32, v32, 5, -8n)?.multiline;
    try { new v34(v34); } catch (e) {}
}
%OptimizeFunctionOnNextCall(f20);
f20();
