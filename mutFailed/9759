const v1 = new Date();
const v6 = new WeakSet();
const v9 = [NaN,52.65298068517177,-4.0];
const v11 = v9["includes"](-6, -9223372036854775807);
try { ("L").search(v11); } catch (e) {}
const v14 = Symbol.hasInstance;
const t6 = "includes";
t6[v14] = v1;
const o15 = {
    "apply": Date,
    "construct": Date,
    "deleteProperty": Date,
    "get": Date,
    "getOwnPropertyDescriptor": Date,
    "getPrototypeOf": Date,
    "has": Date,
    "isExtensible": Date,
    "ownKeys": Date,
    "preventExtensions": Date,
    "set": Date,
    "setPrototypeOf": Date,
};
new Proxy(v14, o15);
new Uint8ClampedArray(65);
switch (Date) {
    case v1:
        Date[536870887];
        v6[4] = Float32Array;
        break;
}
new Float32Array(16);
const v25 = WeakSet >= o15;
[5.0,-2.2250738585072014e-308,-1.2835552875728933,40.73754666021182,-4.615186266099411,1000.0,-8.476714858625598e+307,-9.12542310587626,-1.7976931348623157e+308,-929030.4014405892];
const v27 = [1e-15];
const v28 = [2.220446049250313e-16];
[v28,16,"undefined",v28];
[v25,v9,"includes",v27];
["L"];
new Uint32Array(2875);
/(?<!)/gus;
/\p{Changes_When_NFKC_Casefolded}*/imsy;
const v39 = /ln/g;
try { v39.compile("L"); } catch (e) {}
new Date();
const v42 = new Uint16Array(3906);
function f43() {
    return 3906;
}
v42.valueOf = f43;
v42[1390] = v42;
