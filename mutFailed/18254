const v0 = [0.16801543093900773,-9.404301128553005,5.0,-1000.0,2.2250738585072014e-308,0.815128163476947,1e-15,-1.0];
const v1 = [-5.0,2.2250738585072014e-308,-2.839424308253964,-6.28020939779797e+307,-2.1570968653538532e+307];
const v2 = [556.2492561208835,-3.0,-809138.1855390056,-65227.368182712,-8.256752309444505e+307];
new Date(Date);
for (let v6 = 0; v6 < 25; v6++) {
    ("buffer")["search"](...Date, ..."search", ..."search", 255, ..."search");
    const o13 = {
        "execution": "buffer",
        "type": "minor",
    };
    gc(o13);
}
const v15 = [v2,v2,v1,v1,v0];
const v16 = [v15];
const v17 = [v16,v16,v0];
[v15];
const v19 = [v0];
const v21 = new Float32Array(Float32Array, Float32Array, Float32Array);
function f22() {
    v21.c = Float32Array;
    for (let v23 = 0; v23 < 5; v23++) {
        const o26 = {
        };
        o26[Uint32Array] -= -2147483649;
        class C27 {
        }
        new BigUint64Array(v23, v23, v23);
    }
    return f22;
}
[v0,v17,v19];
class C31 {
    static #o(a33, a34, a35, a36) {
        let v39 = Uint8Array;
        class C40 {
        }
        const v41 = new C40();
        const v42 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
        const v43 = [1073741824,1073741823,1376142744,1073741825];
        function f44() {
            try {
                v43.forEach(v15, v42);
            } catch(e46) {
            }
            return v15;
        }
        %OptimizeFunctionOnNextCall(f44);
        function f48() {
            const v51 = v39--;
            Math.min();
            v39 ** 6;
            -4294967296 >>> v41;
            return v51 - v41;
        }
        for (let v56 = 0; v56 < 5; v56++) {
            f48();
            %OptimizeFunctionOnNextCall(f48);
        }
        const o59 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o59);
        return a35;
    }
}
new C31();
new C31();
new C31();
const v64 = [-1024,257,-495437172,-200813600,-1024,-9007199254740991,5,21171,60860];
for (let v65 = 0; v65 < 5; v65++) {
    function f66() {
        const v68 = new Int32Array(v65);
        v68[1073741824] = v64;
        return v68;
    }
    function f69(a70, a71, a72, a73) {
        const v74 = [1000000000000.0,-952.1538186148879,597175.6294050945,0.5606738113859926,787.1655584120176,-1.4391319355275538,972495.0958115859];
        class C77 extends Uint8Array {
            constructor(a79, a80) {
                a79[1] = Float64Array;
                super();
            }
        }
        new C77(v74);
        return f69;
    }
    f69();
    f66();
    %OptimizeFunctionOnNextCall(f66);
}
