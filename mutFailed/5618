function f0() {
    class C1 {
        static #p(a3) {
            this.#p();
        }
    }
    gc();
    new Float64Array(-2);
    return C1;
    const o15 = {
        m(a13) {
            try {
                a13.e = a13;
            } catch(e14) {
            }
            return -2;
        },
        [-2]: 0.08054660663960789,
        "e": -268435456,
        __proto__: -268435456,
        "g": -2,
        "h": -268435456,
    };
    return o15;
}
f0();
f0();
f0();
[10,9,257,268435441];
[4,-1,-7];
[-1024,1482645407,268435439,127,61804,268435441];
[42223];
[0,-47056,-546521344,5];
const v25 = new Map();
v25.clear();
Math.log2(0);
[842547401,-12989];
function f31() {
    class C32 {
        constructor(a34) {
            function f35() {
                return a34;
            }
            Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f35 });
        }
    }
    new C32();
    const v37 = new C32(f31);
    v37.length;
    return f31;
}
f31();
%OptimizeFunctionOnNextCall(f31);
function F41(a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    const v45 = this.constructor;
    let v46;
    try { v46 = new v45(F41, v45, F41, F41); } catch (e) {}
    const v48 = v46 >>> 38445;
    38445 >> v46;
    let v50 = v48 * v48;
    v50--;
}
const v54 = [];
function f55(a56, a57, a58) {
    function f60(a61) {
        return a56;
    }
    a57 > v54;
    f60 && a56;
    return v54;
}
class C64 {
    constructor() {
        delete v54[1073741824];
        ("h").split(65535);
        let [,...v71] = [1e-15,1.0,-3.0,1.43935350979979e+308,-0.0];
    }
}
