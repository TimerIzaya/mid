const v0 = [];
new Int16Array();
function F4(a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = a7;
    a6.c = 1;
    this.a = a7;
}
new F4();
const v9 = [v0,v0];
class C12 {
    constructor(a14) {
        ("valueOf").localeCompare(a14, "valueOf");
    }
}
new C12("c");
const v17 = [v0,v0,v9,v9];
const v18 = [v0,v17];
try { v18.map(v17); } catch (e) {}
const v24 = Array(6);
const o25 = {
    __proto__: v24,
};
const v27 = 4.4790276882780156e+307 * 4.4790276882780156e+307;
const v28 = [4.4790276882780156e+307];
Array[0];
class C30 {
}
const v31 = new C30();
function f32(a33, a34) {
    const o37 = {
        toString(a36) {
            return a33;
        },
    };
    return o37;
}
f32();
const v39 = [v28,v17,v28];
[v9,v39,v18,v39];
const v43 = new BigInt64Array();
v31[0] = v43;
const v44 = [58584,15,9007199254740990,2146023485];
[46733,-268435456];
Object.defineProperty(v44, 65537, { writable: true, value: v27 });
const v46 = C12.localeCompare();
class C47 {
    constructor(a49, a50) {
        const o64 = {
            84: arguments,
        };
    }
}
const v69 = [1000000.0,0.218433446981681,-5.0,-919787.2036172998,872389.6270716691];
const v71 = [v46];
Reflect.apply(v69.pop, v46, v71);
