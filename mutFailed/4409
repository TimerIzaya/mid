class C3 {
    set d(a5) {
        a5 + a5;
        const v7 = [-729574.8782662717,NaN,NaN,1.4631545214551755e+308,771.103726894627,54.21198698191802];
        const v8 = [4294967297,9007199254740990,-536870912,-2,-39056,1073741823,-4096,536870889];
        class C9 {
            1073741823 = v8;
            static #d;
            6;
            static 1224847725;
            [v7];
            [v7];
            constructor(a11, a12, a13) {
                a12.#a;
            }
            /*
            constructor(a16, a17) {
                function f18(a19) {
                    function f20(a21) {
                    }
                    const v24 = new Uint16Array(1024);
                    v24[7] = v24;
                    return this;
                }
                const o27 = {
                    "type": "function",
                };
                new Worker(f18, o27);
            }
            */
        }
        new C9();
        super.d = this;
    }
    static g = 512;
    a;
    static {
        for (let i = 0; i < 25; i++) {
            const o35 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o35);
        }
        do {
        } while (0 < 0)
    }
    d = "YFo3C";
    static #f = "YFo3C";
    2147483649;
    static 4096;
}
new C3();
new C3();
new C3();
new WeakMap();
-877499.5260373768 * -877499.5260373768;
function f46() {
    return f46;
}
f46 <= 8n;
const v53 = [-1000000.0,771279.5641904315,0.0,8.299995604235331,6.625300935335886,-820.4949035918538,-602.5256799896665,0.6342705996691437,Infinity];
v53.toLocaleString();
const v55 = [-460.307183313349,116746.1734742194,2.0,0.7612507062467385,-1.7352454748688924e+308];
function f56(a57, a58) {
    function f59(a60, a61) {
        return a60;
    }
    return a58;
}
f56.d = f56;
v55[Symbol.toPrimitive] = f56;
const v64 = [0.38491475396310426,1.7976931348623157e+308,-1e-15,924251.5567374192,NaN,1.5098751561946018e+308,-1.1124820518145282e+308,-3.0,-0.0,-467.0550866857337];
class C65 {
    valueOf(a67) {
        let v68;
        try { v68 = v64(a67, this, this, a67, this); } catch (e) {}
        try { v68(v53, v68, v68); } catch (e) {}
        return v55;
    }
    1000;
    static #d = v53;
    static [v55] = v64;
    static #a;
    [v55] = v64;
    static [v53];
    static #e = v64;
}
new C65();
const v72 = new Set();
function F73(a75, a76) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a75;
    } catch(e77) {
        function f79() {
            ("D")[0].substring(129);
            return "D";
        }
        f79();
        for (let [v84,v85] of a75) {
        }
        0 < 3;
        function f89(a90) {
            return f89;
        }
    }
    try {
        const v91 = v72[this];
        ([WeakSet,WeakSet])[1];
        new F73(v91, -268435456n);
    } catch(e96) {
    }
}
new F73();
new F73();
new F73();
