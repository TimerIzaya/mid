function f0() {
}
class C1 {
    static {
        this[Symbol.toPrimitive] = f0;
        delete this[2644];
    }
    static #valueOf() {
        f0 += f0;
        for (let v7 of this) {
            Math.atan(7);
            Math.log10(v7);
            +7;
            Math.atan2(v7, v7);
            --v7;
            const v17 = new Date();
            const v19 = [Reflect,Reflect,Reflect,Reflect];
            Reflect.apply(v17.getDate, v17, v19);
        }
        return "-1073741824";
        function f26(a27) {
            const o42 = {
                valueOf(a29, a30) {
                    function F31(a33, a34, a35, a36) {
                        if (!new.target) { throw 'must be called with new'; }
                        try {
                            this.f = a35;
                        } catch(e37) {
                        }
                        try {
                            this.h = -9223372036854775807;
                        } catch(e38) {
                        }
                    }
                    const v39 = new F31(a29, a27, a27, a30);
                    new F31(v39, -12, -9223372036854775807, -9223372036854775807);
                    new F31(-12, -12, v39, v39);
                    return -536870912;
                },
            };
            return o42;
        }
        return this;
    }
}
const v43 = new C1();
function f44(a45, a46) {
    let v47 = 0;
    do {
        v47++;
    } while ((() => {
            const v52 = v47 < 9;
            class C53 {
            }
            return v52;
        })())
    return a45;
}
v43[Symbol.toPrimitive] = f44;
const v56 = new C1();
const v57 = new C1();
class C59 {
    static set d(a61) {
        throw a61;
        %VerifyType(v43);
        super.a = a61;
        super.h &= a61;
        C1[7] = v56;
    }
    static {
        class C63 {
        }
    }
    c;
    [null] = C1;
    [v43];
    static {
        const t77 = this.__proto__;
        t77();
    }
    static [C1];
    static 802 = v57;
    c;
    1073741824;
}
new C59();
const o68 = {
};
let v70 = Int16Array;
Object.defineProperty(v70, Symbol.toPrimitive, { value: Symbol });
v70--;
function f74() {
    v70--;
    class C77 {
        static #m(a79) {
        }
        set d(a81) {
            this.#m();
        }
        constructor(a84) {
            function f85() {
                return this;
            }
            Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f85 });
        }
    }
    const v86 = new C77();
    v86.g = v86;
    const v87 = new C77();
    v87.length = -4294967296;
    v87.length;
    let v89 = 0;
    for (let i = 0; i < 5; i++) {
        for (let v90 = 0; v90 < 5; v90++) {
            const t114 = "string";
            t114["p" + v90] = v90;
        }
        v89++;
    }
    const v94 = new C77(v89);
    [v94,v94,v94,v94,v94];
    const v96 = [v94];
    class C97 extends C77 {
        [v86];
        #n(a99, a100, a101, a102) {
        }
        #g;
    }
    const v103 = new C97();
    v96.constructor;
    let v105;
    try { v105 = v103.m(); } catch (e) {}
    return v105;
}
%PrepareFunctionForOptimization(f74);
new C59();
new C59();
new WeakSet();
function f111() {
    Math.max(4.0, 4.0);
    ("1073741823").trimRight();
    function f116() {
    }
    function f117() {
    }
    return 4.0;
}
%PrepareFunctionForOptimization(f111);
f111();
%OptimizeFunctionOnNextCall(f111);
f111();
