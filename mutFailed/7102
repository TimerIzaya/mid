const v4 = 129 & 129;
let v5 = Int16Array;
const v6 = new v5(129);
const v8 = v5--;
try { new Float64Array(v6, -4096, -12); } catch (e) {}
const v13 = new Uint8Array();
const v15 = v4();
const v18 = Array(670)["concat"](v15, v13);
try { v18.map(v8); } catch (e) {}
const v20 = new Float64Array(1044);
~79;
const v24 = new Uint8ClampedArray(79);
class C25 {
    512;
    #o(a27, a28, a29) {
        const v30 = [a27,this,Float64Array];
        super[[this,[a27,v20,a29,1044],v5]] = -4096;
        super[v30];
        v24[a27];
        return Uint8ClampedArray;
    }
    static #b = Float64Array;
    a = v5;
    g = v5;
}
C25.name;
new v8();
const v37 = new C25();
v37[512] = v37;
new C25();
ReferenceError.b = ReferenceError;
ReferenceError(-1073741824, 9007199254740991n);
