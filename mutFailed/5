class C3 {
    10 = 1000000000000.0;
    constructor(a5) {
        function f6() {
            C3 >= this ? C3 : this;
            return this;
        }
        a5[Symbol.toPrimitive] = f6;
        const v11 = a5 != "d";
        v11 || v11;
        try {
            const t11 = "d";
            t11.valueOf = a5;
        } catch(e13) {
        }
    }
    static a;
    static {
        this.d = 1000000000000.0;
        const v15 = this?.apply;
        try { new v15(this, C3); } catch (e) {}
        super[this] = 10000;
        function f17(a18) {
            const o19 = {
                "h": 10000,
                "d": this,
            };
            a18.d;
            return o19;
        }
        f17(1000000000000.0);
        f17(1000000000000.0);
        f17(C3);
    }
}
C3.length = C3;
const v24 = new C3("d");
const t37 = "d";
t37[10] = v24;
const v25 = new C3(v24);
function f26() {
    const v27 = [];
    try { v27.with(v27, v27); } catch (e) {}
    return v24;
}
v25.valueOf = f26;
C3[10] = v25;
const v29 = new C3(v25);
v29[10];
const v31 = [-2.2250738585072014e-308,3.0,815.8373081467719,5.0,-7.373778638449557e+307];
try { v31.fill(v24); } catch (e) {}
[NaN,1.7976931348623157e+308,1.7976931348623157e+308];
[-806.2289604456179,1000000000000.0,3.501925379144441e+307,-2.220446049250313e-16,0.15663623961421946,1000000000.0,1.0,-1.1724825522234296e+308];
new Uint8Array(255);
Int8Array.prototype = Int8Array;
new Int8Array(0);
new Int8Array(127);
~255;
1000000000000.0 >> 129;
~127;
