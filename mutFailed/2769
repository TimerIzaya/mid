const v0 = [-2.0,1.385460008116937e+308,-862.843581849637,-0.0,-4.181568411814225,6.147021212018959,4.0,9.918162406079255e+307];
function f1(a2) {
    a2 >>= a2;
    const o3 = {
    };
    function f4() {
        return o3;
    }
    return v0;
}
v0.toString = f1;
const v5 = [0.6988969197785546,5.0,-1000000.0,-3.0,-1000.0,-300.10095579276117,1.0509476969054353e+308];
const v6 = [2.2250738585072014e-308,4.1749976449162074e+307,3.0,1000000.0,-5.281830383683774e+307];
function f7(a8) {
    function F9() {
        if (!new.target) { throw 'must be called with new'; }
        this.h = 268435440;
    }
    const v12 = new F9();
    return v12;
}
v6.toString = f7;
function f13() {
    return v5;
}
function f14(a15) {
    const o20 = {
        __proto__: v0,
        "d": v5,
        "e": a15,
        "b": a15,
        "h": v5,
        get b() {
            super[this] = v0;
            typeof a15 === "undefined";
            return a15;
        },
        2147483647: v6,
        [a15]: a15,
        6: f13,
        "c": a15,
        [v0]: v6,
        "a": f13,
    };
    return o20;
}
const v21 = f14(v6);
const v22 = delete v5[f13];
function f23() {
    return f14;
}
f13 / v6;
const v25 = f14(v0);
const v26 = f14(v6);
class C27 extends f13 {
    toString(a29, a30) {
        try { a29.reverse(); } catch (e) {}
        delete C27?.[v22];
        for (let v33 = 0; v33 < 32; v33++) {
            v25["p" + v33] = v33;
        }
        this[v26];
        f14(this);
        return this;
    }
    set f(a40) {
        try {
            v25.fuck(v21, undefined);
        } catch(e43) {
        }
    }
}
new C27();
new C27();
new C27();
[0.21808862503879312,5.0,-1.0665781164403594,-6.220722996655604e+307,1.0,198672.6622953352,0.5437703373793757];
[-9.047719465313138];
[-1.7976931348623157e+308,-3.0,0.0];
class C50 {
    static {
        function F52(a54, a55) {
            if (!new.target) { throw 'must be called with new'; }
            const v56 = this.constructor;
            try { new v56(); } catch (e) {}
            try { this.constructor(); } catch (e) {}
        }
        new F52();
    }
}
