function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 4294967297;
    } catch(e3) {
    }
}
new F0();
new F0();
const v6 = new F0();
new Float32Array(128);
new Uint16Array(433);
new Int8Array(0);
class C17 {
    m(a19, a20) {
        0.0 ** this;
    }
    static get c() {
        let v23 = 10;
        for (; v23--;) {
            super.c = this;
            Symbol.isConcatSpreadable;
        }
    }
}
new C17();
new C17();
const v29 = new C17(0);
const v30 = [0.41400040521582504,-2.2250738585072014e-308,1000000000.0,1.0,-7.840812307817487,0.8468093444532201];
const v31 = [0.7320309079988974,-2.0,474241.4698858885];
[-2.220446049250313e-16,-49.43730904135202,1000000000000.0];
class C34 extends C17 {
    valueOf(a36, a37, a38, a39) {
        v31 !== a37 ? v31 : a37;
        return v6;
    }
    o(a43, a44, a45) {
        Math.abs();
        Math.round(a45);
        a43.acosh();
        Math.sinh();
        return v30;
    }
    toString(a52, a53) {
        this["valueOf"]();
        return C34;
    }
    #g = C17;
    [9007199254740990n];
    245 = 9007199254740990n;
    [v31] = v29;
}
new C34();
const v57 = new C34();
const v58 = v57.m();
try { new v58(...v57, 9007199254740990n); } catch (e) {}
