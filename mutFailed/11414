function F2(a4) {
    if (!new.target) { throw 'must be called with new'; }
    const v5 = a4?.__defineGetter__;
    try { new v5(this, a4); } catch (e) {}
    try {
        this.h = a4;
    } catch(e7) {
    }
}
const v8 = new F2(true);
const v9 = new F2(true);
let v10 = new F2(v8);
class C11 {
    static #m(a13, a14, a15) {
        a14 = this;
        try { a14.getUTCHours(); } catch (e) {}
        return F2;
    }
    #h;
    constructor(a18, a19) {
        const v20 = this?.constructor;
        try { new v20(C11, a19); } catch (e) {}
        const v22 = [0.2751672152941026,0.21333909818115016,-1.7976931348623157e+308,0.0,-1000000.0,-550747.7179750735,-Infinity,-1e-15,1000000000000.0];
        try { v22.lastIndexOf(v22); } catch (e) {}
        [1000.0,1.392859056171332e+308,0.7710896110146812,-5.0,749.7257286881575];
        const v25 = [0.20615485720512228,-728.8551755738331,2.220446049250313e-16,0.49716181315903396,NaN];
        try { v25.fill(a19); } catch (e) {}
        super.d;
        Math.__proto__;
        let v30 = -1610846940;
        let v31 = -1982743944;
        -1697 | v31;
        BigInt64Array.constructor;
        536870912 != 536870912;
        const v38 = ~v30;
        ++v31;
        const v40 = v10--;
        Math.asin(v38);
        v40 >>> v38;
        !(!v40);
        ++v30;
    }
}
const v46 = [1.9600488149280893e+306,468.9269702772963];
const v47 = [Infinity,-686.9856326146617,0.47369378110968274,-7.24289104755818];
v47.includes(...v46);
const v51 = new Int16Array(2183);
const v52 = v51[5];
let v53;
try { v53 = new C11(C11, F2); } catch (e) {}
new v53(C11, v8);
const v55 = new C11(v10, v9);
v55.length = v55;
const v56 = new C11(v55, v55);
v56.length = v56;
class C57 extends F2 {
    2;
    valueOf(a59, a60, a61, a62) {
        const o63 = {
            __proto__: a59,
            [v56]: a62,
            "e": v9,
            "h": v56,
        };
        return this;
    }
    [v9];
    #a = true;
    #b = C11;
    2846947634;
}
new C57();
new C57();
new C57();
const v69 = new BigUint64Array(3768);
const v70 = v69?.constructor;
try { new v70(v56, BigUint64Array, v69); } catch (e) {}
try { new BigInt64Array(v69, v55, BigInt64Array); } catch (e) {}
const v75 = new BigInt64Array(4046);
try { v75.lastIndexOf(v56); } catch (e) {}
115 + 115;
class C80 {
}
C80.constructor;
function F82(a84, a85) {
    if (!new.target) { throw 'must be called with new'; }
}
const v86 = new Int8Array(3768);
function f87(a88, a89) {
    a88 / a88;
    const v91 = a89 >> a89;
    const v92 = a88++;
    v92 % v92;
    let o105 = {
        get d() {
            this[115] /= 4046;
            let v96 = -908890636;
            return Math.log(this & --v96);
        },
        "d": a88,
        ...a88,
        "c": v47,
        "f": v91,
        valueOf(a101, a102) {
            return this;
        },
        get e() {
            this.d;
            return a89;
        },
        __proto__: v86,
        ...a89,
        ...a88,
        536870888: BigInt64Array,
    };
    [,...o105] = v75;
    const v106 = a89?.[4046];
    const o113 = {
        "maxByteLength": 3035,
        get d() {
            return v52;
        },
        n(a111, a112) {
            return this;
        },
    };
    const v115 = new ArrayBuffer(512, v106);
    new Float32Array(v115);
    return a88;
}
const v118 = f87(115, 3768);
v118 + v118;
f87(4046, v46);
const v121 = f87(4046, 4046);
v121 + v121;
const v124 = (115)?.UTC;
try { new v124(v124, 4046, 4046, Date, BigUint64Array, BigUint64Array, Date); } catch (e) {}
Uint8ClampedArray.length = Uint8ClampedArray;
const v127 = new Uint8ClampedArray(Date);
const v128 = v127[2];
v128 != v128;
