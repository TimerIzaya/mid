const v0 = [1.0549141011019607,4.0,-1e-15,3.3580618677602896,2.220446049250313e-16,577.8221476247845,-1000.0,1000000000.0,-1000000000.0];
const v1 = [0.3179518922440234,2.209504220614644];
const v2 = [823.3619004247828,-471155.8261627647,0.8258513073007677,Infinity,1000000000.0,3.0,-616499.9735269912,109130.19390866952,932.9553851740411];
function f3() {
    v0 & v0;
    v0.constructor;
    return v0;
}
v2.toString = f3;
function f6(a7, a8) {
    function f9(a10, a11) {
        const v12 = [a8,a10];
        [a11,[f6,f3,v12,a10,v12],a7,a10,a8];
        return v1;
    }
    a8[Symbol.toPrimitive] = f9;
    const o23 = {
        "e": a8,
        __proto__: v0,
        "b": v2,
        "a": v0,
        [-1]: v0,
        [a8](a18, a19) {
            v1 < a19;
            try {
                a18.length = 2;
            } catch(e22) {
            }
            return a18;
        },
    };
    return o23;
}
const v24 = f6(v1, v1);
const v26 = f6(f6(v24, v2), v2);
function f27(a28, a29, a30) {
    const o45 = {
        [v0]: a29,
        n(a32, a33, a34, a35) {
            new Uint16Array(12);
            new BigInt64Array(4048);
            const v44 = new Int8Array(512);
            return v44;
        },
    };
    return o45;
}
f27(f27(v24, v2, v1), f6, v2);
f27(v26, v1, v0);
[560.3764338321384,2.831189514697529,-1.0,1000.0,-2.4858124652164726,1000.0,1000000.0,1000000.0,6.670434684407409e+307,-Infinity];
const v52 = new Uint32Array();
try { v52.entries(); } catch (e) {}
const v54 = v52[40];
for (let v55 = 0; v55 < 5; v55++) {
    try { v54(); } catch (e) {}
}
const v57 = [-2.220446049250313e-16,-146030.0093347557,-759818.7684978913,1000000000000.0,-1.2175538670763404e+307];
[4.0];
const v60 = new BigUint64Array();
const v61 = /anVXYFzN(x)(x)(x)\3/gvdms;
try { v60.reduceRight(v61); } catch (e) {}
[-1.7976931348623157e+308,v57];
