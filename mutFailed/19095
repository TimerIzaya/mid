[];
[1.7976931348623157e+308,2.220446049250313e-16,1e-15,3.0,-4.0,1.1368904135432509e+308,6.959798505304857];
const v2 = [0.4495897079061648,-0.6041885243327023,0.154008176549579,1.0];
[5.82345218824705,535.5569873342288,1000000000000.0,-2.3189187570110743,2.715619403350134,0.5627596021916993,1000000000000.0,0.5924924588682561,-2.1117528635186815];
const v4 = [-9];
const v5 = [60987,141084451,536870888,536870888,4294967296];
let v6;
try { v6 = v5.toLocaleString(); } catch (e) {}
try { v6.codePointAt(v4); } catch (e) {}
const v8 = [-15,10,1151557146,-37387,46383,9007199254740992];
function f9() {
    return v8;
}
f9.constructor = f9;
const v10 = f9?.constructor;
try { v10(); } catch (e) {}
try { new v4(v8); } catch (e) {}
Set.d = Set;
new Set();
Array.toString = f9;
let v16;
try { v16 = Array.toString(); } catch (e) {}
try { v16.shift(); } catch (e) {}
const v19 = 3845 * 3845;
v19 < v19;
const v21 = new Array(3845);
v21.f = v21;
class C22 extends Array {
    static #toString(a24, a25) {
        const v26 = new Set(...v8, a25, 3845, ...v4);
        new Set(v26);
        f9();
        try {
            v8.length = a24;
        } catch(e32) {
        }
        return "16";
    }
    d;
    static #d = v2;
}
try { C22(); } catch (e) {}
let v34;
try { v34 = new C22(); } catch (e) {}
try { v34.at(v8); } catch (e) {}
const v36 = new C22();
const v37 = v36?.flatMap;
try { new v37(Set); } catch (e) {}
const v39 = new C22();
new C22();
function f41() {
    -905581.0108763822 <= v2;
    const o52 = {
        "e": -905581.0108763822,
        "c": "ODE0f",
        m(a47) {
            super.h;
        },
        n(a50, a51) {
            Object.defineProperty(this, "f", { set: f41 });
            return a50;
        },
        128: -866502.9983355273,
    };
    return o52;
}
v21();
function F54() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        let v56 = -9007199254740991;
        for (let i = 0; i < 5; i++) {
            let v57 = v56++;
            const v58 = v57++;
            v58 - v58;
            v57 ^ v57;
        }
        F54();
    } catch(e62) {
        try { e62.strike(); } catch (e) {}
        try { e62.blink(); } catch (e) {}
    }
}
try { F54.toString(); } catch (e) {}
const v66 = new F54();
const v67 = v66?.constructor;
try { new v67(); } catch (e) {}
/xyz{1,32}?/gusy;
class C71 {
}
let v72;
try { v72 = C71.bind(v39); } catch (e) {}
try { v72(); } catch (e) {}
-(-20239n);
const o76 = {
};
o76.h = o76;
o76.f = o76;
o76.b = o76;
o76.b = o76;
