const v0 = [-Infinity,-2.220446049250313e-16,-674.0185643490656,567.4149670011836];
let v1 = [563485.1168897953,-3.0,276.2728833069673,-1.7976931348623157e+308,-2.2250738585072014e-308,734.6790167342858,6.871012829352862e+307,4.645433068792359];
const v2 = [-3.0,2.771314955976896,0.9937586855049679,1.0];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v0;
    } catch(e6) {
    }
    try {
        this.d = v2;
    } catch(e7) {
    }
    try {
        this.e = a5;
    } catch(e8) {
    }
}
const v9 = new F3(v0);
const v10 = new F3(v1);
const v11 = new F3(v2);
class C12 {
    static {
        this % v1;
        new BigUint64Array(257);
        new Float32Array(5);
        new Int8Array(6);
    }
    4;
}
throw C12;
v1 ^= v1;
v2 && v10;
v0[536870887] = v0;
new C12();
const v29 = new C12();
const v30 = new C12();
class C31 {
    set d(a33) {
        const o34 = {
            "b": v9,
            [this]: v9,
            [v2]: this,
            "f": C12,
            __proto__: C12,
        };
        new Proxy(v29, o34);
    }
    static #c;
    h = v9;
    static set a(a38) {
        try {
            v2.#c;
        } catch(e40) {
        }
        try {
            v11.#c = F3;
        } catch(e41) {
        }
    }
}
const v42 = new C31();
const v43 = new C31();
if (v43 > v43) {
} else {
    try {
        C31.toString = C31;
    } catch(e48) {
    }
}
new C31();
const v52 = new Float32Array(9);
v52.fill();
function f54(a55, a56, a57, a58) {
    const v59 = a56 >>> a56;
    v59 >>> v59;
    const v62 = new Int8Array();
    v62.entries().next();
    function f65(a66, a67) {
        a66.arguments = a66;
        return f65;
    }
    const v68 = f65(f65);
    Math.sinh(-1549415938);
    -0.0;
    Math.max(a56);
    class C76 extends Date {
        static [v68];
        static [0.0] = v30;
        0;
        c = C12;
        static #b = Float32Array;
    }
    const v77 = new C76();
    v77.getDay();
    return v68;
}
for (let v79 = 0; v79 < 10; v79++) {
    f54(v79, v79, v79, 9);
    try {
        v42.d = v1;
    } catch(e81) {
    }
}
%OptimizeFunctionOnNextCall(f54);
f54(9, Float32Array, v52, f54);
