new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
const v10 = ([8,-46529,2147483648,1073741824]).includes;
try { v10(); } catch (e) {}
new Uint16Array(9);
const t4 = 0.5632357731951271;
new t4([0.0,-6.342688296098643e+307,2.0]);
class C18 {
}
const v19 = new C18();
v19.length;
new BigInt64Array(6);
new Uint16Array(1);
const v26 = new WeakMap();
const v27 = /8[\cA]v/uisy;
function f28(a29, a30) {
    class C33 extends Array {
        2 = 64;
    }
    new C33();
    v26.set([a30,a30,a30,a30,a30]);
    new Date(..."undefined");
    const v41 = [601759695];
    function f42() {
        let v44;
        try { v44 = Math.cos(v41); } catch (e) {}
        v44 + v44;
        const o51 = {
            [2n](a47, a48, a49, a50) {
            },
        };
        return f42;
    }
    ([NaN,0.0,-1000.0,0.801813834025009,1000000000000.0,0.42556477865285247,1000.0,0.05099404532977159,0.9333495115204479])["findIndex"](gc);
}
v27[Symbol.toPrimitive] = f28;
const v58 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v59 = [601759695];
function f61(a62, a63, a64, a65) {
    arguments[4] = arguments;
    return a64;
}
f61(v59, v58, 522675525n, v58, 522675525n);
const v68 = [3480,1024,-4294967297,-1024,512,65536,29198,-9223372036854775807,-2147483647];
try {
    v68.length = v27;
} catch(e69) {
}
