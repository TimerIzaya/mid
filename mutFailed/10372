class C2 {
    constructor(a4, a5, a6, a7) {
        arguments[0] = arguments;
    }
}
new C2();
function f11() {
    return 1000.0;
}
function f12(a13) {
    const o31 = {
        toString() {
            super[this];
        },
        "h": 1000.0,
        get a() {
            this.__proto__;
            for (let v18 = 0; v18 < 100; v18++) {
                f11();
            }
            return 1000.0;
        },
        "e": a13,
        "b": Infinity,
        [5.0](a21) {
            function F22() {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.d = -65536;
                } catch(e25) {
                }
                try {
                    this.b = -65536;
                } catch(e26) {
                }
                try {
                    this.e = -65536;
                } catch(e27) {
                }
            }
            function f28(a29) {
                return a29;
            }
            class C30 extends f28 {
                static #g = a21;
                static a = this;
                static 4294967296 = Infinity;
            }
            return f28;
        },
    };
    return o31;
}
class C33 {
    set e(a35) {
        const v37 = Symbol.iterator;
        const o43 = {
            [v37]() {
                let v39 = 10;
                const o42 = {
                    next() {
                        v39--;
                        return this;
                    },
                };
            },
        };
    }
}
const v44 = new C33();
function f45(a46, a47) {
    const o54 = {
        512: C33,
        4294967295: a46,
        valueOf(a49, a50) {
            return a50;
        },
        "e": v44,
        o(a52, a53) {
            return a53;
        },
    };
    return o54;
}
f45(f45, 3.1466442940809625);
f45(C33, 3.1466442940809625);
try {
    C33();
} catch(e58) {
}
const v59 = f12(Infinity);
f12(5.0);
const v61 = f12(Infinity);
class C62 {
    static #d = 1000.0;
    static get h() {
        /a[^a]/usy;
        /q/sy;
        /abc+?(?<=)[foo(?<!bar)baz?]?/gvdimy;
        function F67() {
            if (!new.target) { throw 'must be called with new'; }
            this.c = 5;
        }
        const v71 = new Date(Date);
        const v72 = v71.setFullYear;
        try { v72(); } catch (e) {}
        try {
            super.fromCharCode(v59, this);
        } catch(e75) {
        }
        return 1000.0;
    }
    static #h;
    [1000.0] = Infinity;
    [Infinity];
    #b;
}
const v76 = new C62();
const v77 = new C62();
new C62();
function F79(a81, a82, a83, a84) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a82;
    } catch(e85) {
    }
}
const v86 = new F79(5.0, v77, v61, C62);
const v87 = new C33();
const o88 = {
    __proto__: f11,
    1073741824: v87,
};
const v89 = new F79(1000.0, v86, v86, C62);
new F79(Infinity, v76, v89, v77);
gc();
gc();
const v98 = new Uint32Array(16);
try {
    v98.length = 1073741824;
} catch(e99) {
}
"toString" == "toString";
("boolean").split("toString");
const o104 = {
    get f() {
    },
};
