const v2 = new Uint16Array(-7);
const v5 = new Uint8ClampedArray(9, Uint16Array, v2, Uint16Array);
new Math(4096);
class C9 extends Uint8ClampedArray {
    get e() {
        for (let v11 = 0; v11 < 32; v11++) {
            v2["p" + v11] = v11;
        }
        return v5;
    }
    3040;
    [Uint16Array];
}
new C9(-7);
new C9();
new C9();
const v17 = [-6.672391061426152e+307];
const v18 = [1,-15];
function f19() {
    v18.splice(v17, f19, v17);
    v17["pop"]();
    const v25 = new WeakSet(64);
    for (let v26 = 0; v26 < 5; v26++) {
        Proxy(36862);
    }
    v25.toSorted();
    return f19;
}
%PrepareFunctionForOptimization(f19);
f19();
%OptimizeFunctionOnNextCall(f19);
f19();
