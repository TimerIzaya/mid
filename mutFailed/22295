const v0 = [1073741824,-1965615568,34771,771469838,2406,22336,9];
[-60492,-4294967297];
const v2 = [-33863,-536870912,2116936003,65537,-61892,422755111,5];
const v5 = new Int16Array(v2);
let v6 = 31;
const v8 = new Uint8Array(v6);
v8[23];
const v12 = new BigUint64Array(3662);
v12[2807];
function f14(a15, a16, a17, a18) {
    a15 == a15;
    a16--;
    a17[6];
    const o35 = {
        set b(a23) {
            try {
                Reflect.ownKeys();
            } catch(e26) {
            }
            this << this[a18];
        },
        3114006988: Int16Array,
        "g": v5,
        [v5]: a17,
        [v6]: v6,
        ...v12,
        "h": Uint8Array,
        next() {
            v6--;
            v6 == 0;
            const o33 = {
            };
        },
        __proto__: v5,
        "e": a18,
        "b": BigUint64Array,
        "h": a16,
        "a": a15,
        "f": v0,
        /*
        __proto__: v6,
        */
        [3662]: BigUint64Array,
        get h() {
        },
        "arguments": v2,
        ...v2,
        "c": a16,
    };
    return Uint8Array;
}
f14.length;
f14(3662, v6, v2, v5);
f14(v6, 3662, v0, 864);
const v39 = f14(864, 864, v0, 864);
try { v39.of(); } catch (e) {}
const v42 = [Reflect,Reflect,Reflect];
v42[2] = v42;
Reflect.h = v42;
function F44(a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = "b";
    this.d = a47;
}
const v48 = new F44();
const o49 = {
    ...v48,
};
o49.__proto__ = o49;
