function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 24829;
    } catch(e3) {
    }
    try {
        this.a = 24829;
    } catch(e4) {
    }
    try {
        this.h = 24829;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new v7();
v8.g = v8;
function F9(a11) {
    if (!new.target) { throw 'must be called with new'; }
    const v12 = this?.constructor;
    try { new v12(F0); } catch (e) {}
    a11.e;
    try {
        this.d = a11;
    } catch(e15) {
    }
    try {
        this.f = F0;
    } catch(e16) {
    }
    try {
        this.g = v6;
    } catch(e17) {
    }
}
const v18 = new F9(v7);
const v19 = new F9(v8);
v19.b = v19;
const v20 = new F9(v7);
const v21 = [F0,F0,v8,F0];
[v8,v6,v8,v20];
[F0,F9,v21,v18,v20];
const v26 = new Int16Array(2334);
127 >> 127;
try { Uint32Array(v6, v26, v26); } catch (e) {}
new Uint32Array(v26);
new BigUint64Array(33);
256 >>> 256;
const o37 = {
    "b": 256,
};
const o43 = {
    [-4](a41, a42) {
    },
    __proto__: o37,
    ...o37,
    "b": Int16Array,
};
o43.b = o43;
