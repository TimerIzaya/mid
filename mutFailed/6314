let v0 = 15;
class C3 {
    constructor(a5, a6, a7, a8) {
        super();
        function f9(a10, a11, a12) {
        }
        const o15 = {
            "type": "function",
        };
        new Worker(f9, o15);
    }
    b = 5.0;
    static m(a18, a19) {
        let v20 = arguments;
        throw v20;
        ({"c":a19,"callee":v0,"length":v20,} = v20);
        return v20;
    }
    a;
    static {
        v0[5] = this;
        Reflect.construct(v0, [5.0,Reflect], v0);
    }
    /*
    constructor(a26, a27, a28) {
        super();
        super.f = a26;
    }
    */
    static get g() {
        try {
            var a = super.subarray();
        } catch(e31) {
        }
    }
}
new C3();
new C3();
new C3();
([974836.255416306,7.54270135293536,0.0,0.35539841926815563,1.385396251341163,-1000000000000.0,NaN,-1.7976931348623157e+308]).toLocaleString();
const o48 = {
    m(a40) {
        const v43 = new Int8Array(3938);
        let v44 = 3;
        let v45 = 0;
        [...v44] = v43;
        -(v45++);
    },
};
new Uint16Array(2596);
function f55(a56) {
    const o60 = {
        ...a56,
        get d() {
            const v58 = this.__lookupSetter__;
            try { v58(); } catch (e) {}
            return f55;
        },
    };
    return o60;
}
new Float32Array(477);
function F62() {
    if (!new.target) { throw 'must be called with new'; }
    this.a = 47398;
}
new F62();
new Uint32Array(8);
/a[^a]/vim;
/[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]/uisy;
/[[\ca]+]/gvisy;
for (let [v81] of "Opx24") {
}
