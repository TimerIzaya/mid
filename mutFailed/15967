function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e10) {
    }
    try {
        Math.clz32();
        new F6();
    } catch(e13) {
    }
}
class C15 {
    65535;
    2882777827;
    valueOf(a17, a18, a19, a20) {
        a18 != 256;
        return -1.204615997875342;
    }
    g = -1.204615997875342;
    [65535];
    static #h = -2.985732318481007e+307;
}
new C15();
new C15();
new C15();
/Y(x)(x)(x)\1*/gis;
const v27 = /pi9a*b/viy;
const v28 = /\xf0\x9f\x92\xa9/umsy;
const v29 = [5.0,-4.0,4.2198823330258415e+306];
const v30 = [445.36215681888234,0.30795148143246664,-1e-15,-4.0,568124.566825259,4.038934363993432,3.307791638248854e+306,722.7951050182626,Infinity];
let v31 = [2.220446049250313e-16,1000000000000.0,-3.0,108191.83441899554,-1000000000000.0,-4.35294642716862,-682371.9904399097,160149.64149286016];
class C32 {
    static {
        function F34(a36, a37) {
            if (!new.target) { throw 'must be called with new'; }
            const v38 = this.constructor;
            try { new v38(); } catch (e) {}
            try { this.constructor(); } catch (e) {}
        }
        new F34();
    }
    #m(a43, a44, a45) {
        super.f = a45;
        v31 = v30;
        a44 *= this;
        return v27;
    }
    2;
    5;
    #d = v29;
    static #b = v28;
}
const v47 = [256];
function f49(a50) {
    try { a50.p(v47); } catch (e) {}
}
this.onmessage = f49;
new C32();
new C32();
new C32();
const v56 = new BigUint64Array();
const v58 = new Int16Array();
[] = v58;
v56 && BigUint64Array;
const v64 = Array(11);
v64[3] = BigUint64Array;
new Int16Array(v64);
try {
const t0 = 6;
t0();
} catch (e) {}
/(ab)/us;
function f73(a74, a75, a76, a77) {
    const v78 = new Int8Array();
    const v79 = v78.buffer;
    v79.constructor = Array;
    return v79.slice(1073741823, a75);
}
class C82 {
    static ["22307"] = "AanB8";
    constructor(a84, a85) {
        a85.sup("22307", a84).toLocaleLowerCase();
    }
    toString(a89, a90) {
        do {
        } while ((() => {
                for (let v94 = 0; v94 < 25; v94++) {
                    function f95(a96, a97, a98, a99) {
                        return -1000.0;
                    }
                }
                return 6;
            })())
    }
}
const v105 = new Int32Array(1024);
for (const v106 of v105) {
    const o108 = {
    };
    gc(o108);
    new SharedArrayBuffer(1024);
}
new C82();
function f117() {
    return -172798652;
}
%OptimizeFunctionOnNextCall(f117);
const o119 = {
};
class C120 {
}
function f121() {
    return gc;
}
const o122 = {
};
/4a\w/vmsy;
