const v1 = [20728,12328,-15553,-1590643568,512,3,3];
const v2 = [2087168392,-4096,17528,58367,9007199254740992,-65537,257,536870912,9126];
const v3 = [34303,65537];
class C4 {
    constructor(a6) {
        super.c += this;
        Object.defineProperty(a6, "length", { writable: true, value: a6 });
        super[v1] = v3;
    }
    static #m(a8, a9) {
        try {
            v1.g = a9;
        } catch(e10) {
        }
        return v2;
    }
}
new C4(v1);
new C4(v3);
new C4(v1);
!-6;
-6 && -6;
~-6;
new Uint8ClampedArray(6);
new Float64Array(555);
new Float64Array(3);
let {"a":v32,"d":v33,"f":v34,} = C4;
const o38 = {
    "execution": "sync",
    "type": "minor",
};
gc(o38);
class C41 {
    set e(a43) {
        Math.fround();
        Math.ceil();
    }
    m(a48) {
    }
    e;
}
const v49 = new C41();
const v50 = new C41();
new C41();
let v52 = ["number","ignoreCase",v49];
[[v50,"number","R"],C41,C41,v52];
let v55 = 0;
do {
    "minor" instanceof C4;
    new Int16Array(7);
    new Uint8ClampedArray(256);
    new Uint16Array(1898);
    v55++;
} while (v55 < 1)
const v72 = ("NN")["9"];
C41[0] >>= v72;
let v73;
try { v73 = v72(v50, v49, "string"); } catch (e) {}
v52 = v73;
let v74 = 0;
while (v74 < 7) {
    v74++;
}
