const v3 = [-5.151338664561976e+307,-1e-15,1e-15];
const v4 = [2.2250738585072014e-308,-1.0,438.13273661175185,2.2250738585072014e-308,178968.77242308948,1000000000000.0,-377.39055394659806,1.0,1000000000000.0];
const v5 = [-788.2033347665314,0.7767994031949214,1.5384772755221817e+307,-1000000000000.0,4.286477919784389,1e-15,723.3740245799302,-1.0,763371.5687923536,-696.4314465007628];
const t3 = "toString";
t3[1] = "toString";
if ("e") {
    const v8 = v5 > v3;
    v8 || v8;
    const v10 = v8 ? v5 : v3;
    try { v10.every(v10); } catch (e) {}
} else {
    const v13 = [];
    Reflect.apply(("-1005739558").trimLeft, "toString", v13);
}
function f17() {
    return "-1005739558";
}
f17.arguments = f17;
[-4294967296,536870887,1061939633,16,62421,-5,255,65536,-1440695669];
const v19 = [4294967297,4,9007199254740992,-1073741824];
let v20;
try { v20 = v19.findLastIndex("vo"); } catch (e) {}
const o21 = {
    "g": v19,
    ...v19,
    __proto__: v3,
};
let v23;
try { v23 = o21["p"](); } catch (e) {}
v23 &&= v23;
Object.defineProperty(v3, "-1005739558", { configurable: true, set: f17 });
for (let v24 = 0; v24 < 100; v24++) {
    v20();
}
for (const v26 in v23) {
}
function f28(a29) {
    return a29;
}
try { f28(v4); } catch (e) {}
const v31 = v23(undefined);
function f32() {
    return f32;
}
([v31,,]).group(f32);
