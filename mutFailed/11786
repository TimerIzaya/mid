let v0 = -4839n;
function f3(a4, a5) {
    const o32 = {
        "e": -4n,
        "b": -4n,
        set f(a7) {
            try {
                new f3(10n, a7);
            } catch(e10) {
            }
        },
        __proto__: a4,
        set d(a12) {
            const o13 = {
            };
            try {
                o13.e = a12;
            } catch(e14) {
            }
            try {
                const o15 = {
                };
                o15.e = a12;
                o15.a = v0;
            } catch(e16) {
            }
            try {
                const o17 = {
                };
                o17.e = a12;
                const t30 = -4n;
                t30.a = v0;
                const o18 = {
                };
                try {
                    o18.c = -4n;
                } catch(e19) {
                    let v20;
                    try { v20 = new e19(e19, o13, e19, a12); } catch (e) {}
                    %VerifyType(this.b);
                    try {
                        o13.h = v20;
                    } catch(e22) {
                    }
                }
                try {
                    const o23 = {
                    };
                    o23.c = -4n;
                    o23.e = o17;
                } catch(e24) {
                }
                try {
                    const o25 = {
                    };
                    o25.c = -4n;
                    o25.e = o17;
                    o25.d = o13;
                } catch(e26) {
                }
                try {
                    const o27 = {
                    };
                    o27.c = -4n;
                    o27.e = o17;
                    o27.b = o17;
                } catch(e28) {
                }
                o17.h = a4;
            } catch(e29) {
            }
            try {
                const o30 = {
                };
                o30.e = a12;
                o30.a = v0;
                o30.h = this;
            } catch(e31) {
            }
        },
    };
    function f33(a34, a35) {
        v0 = a34;
        try { a35.o(f3); } catch (e) {}
        return a34;
    }
    o32[Symbol.toPrimitive] = f33;
    return o32;
}
const v39 = f3(-4n, -4n);
const v40 = f3(-4n, -4n);
const v41 = f3(v0, v0);
class C42 {
    [v39];
    constructor(a44, a45) {
        a45[Symbol.iterator] = f3;
        super[-4n] = a45;
        function f49() {
            return Symbol;
        }
        Object.defineProperty(Math, "toString", { get: f49 });
        function f53(a54) {
            return a54;
        }
        class C55 extends f53 {
            static f;
            [-2] = v0;
        }
        const v56 = ~Math;
        const v58 = Symbol.toPrimitive;
        const o61 = {
            [v58]() {
                v39[v0] = this;
                super.g;
                return v56;
            },
        };
        9 || v56;
        9 - v56;
        let v67;
        try { v67 = new f53(..."536870888", v39, v41, ...a45, 4294967295, v41); } catch (e) {}
        ({"b":f3,...v67} = this);
        9 / v40;
    }
}
new C42(-4n, -4n);
new C42(v0, C42);
new C42(-4n, v0);
function F72() {
    if (!new.target) { throw 'must be called with new'; }
    for (let [v75,v76,v77,v78] of F72) {
    }
}
class C81 {
    constructor(a83, a84) {
        for (let v85 = 0; v85 < 5; v85++) {
            const v87 = new Map();
            v87["p" + -7] = -7;
            const o90 = {
                ...v87,
            };
        }
    }
}
const v91 = new C81(C81, -7);
new C81(C81, v91);
