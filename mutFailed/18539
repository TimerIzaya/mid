class C6 {
    static #m(a8, a9, a10) {
        let v11 = a8 !== a10;
        v11 ^= v11;
        const v13 = [a9,"NaN"];
        return Reflect.apply(a9.replace, a8, v13);
    }
    b = 9223372036854775807;
    static 1;
    65536 = "-1973166341";
    static 3 = "toString";
    static ["-1973166341"] = "toString";
}
try { new C6(); } catch (e) {}
let v17;
try {
const t0 = 10;
v17 = new t0();
} catch (e) {}
let v18 = new C6();
const v19 = new C6();
v19[65536];
new C6();
const v23 = !false;
v23 && v23;
new Int32Array(1);
-(13 / 13);
new Float64Array(10);
const v34 = v18--;
v34 & v34;
try { new Int16Array(9223372036854775807, Float64Array, 1); } catch (e) {}
const v38 = new Int16Array(3883);
v38[932] = v38;
let v40 = -4294967297n;
v40 >> v40;
v40++;
const v44 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v45 = [601759695];
const v46 = [1073741824,1073741823,1376142744,1073741825];
try { v46.find(C6); } catch (e) {}
function f49(a50, a51, a52, a53) {
    const v54 = a52--;
    v54 % v54;
    arguments[2];
    arguments[2] = a53;
    arguments[2] = arguments;
    function f58() {
        const v60 = ("Vre").toLocaleUpperCase;
        try { v60(v60, v40, a52, v46); } catch (e) {}
        const v62 = ("Vre").fixed();
        const v63 = v62.codePointAt();
        v63 << v63;
        let v65 = -4294967295;
        v65++;
        v65 ^ v65;
        let v68 = -268435456;
        const v69 = v68 << v68;
        v69 === v69;
        const v71 = v68--;
        const o86 = {
            "c": v40,
            [522675525n](a73, a74) {
            },
            ..."Vre",
            "maxByteLength": -128,
            "c": v45,
            [v63]: -1547267477n,
            __proto__: a52,
            "d": v71,
            "e": v65,
            "h": -128,
            valueOf(a76, a77) {
                return v62;
            },
            "e": v65,
            "e": v68,
            "maxByteLength": v65,
            "arguments": v38,
            ...v45,
            "type": "Vre",
            ..."Vre",
            valueOf(a79, a80) {
                try { this.toString(v17, v65, v45); } catch (e) {}
                return this;
            },
            ..."Vre",
            4: "Vre",
            "c": v68,
            "type": "Vre",
            "type": "Vre",
            toString(a83, a84, a85) {
                return -128;
            },
            5: v23,
            6: v68,
        };
        o86[5] = o86;
        const v87 = o86.valueOf();
        v87[60] = v87;
        return v87;
    }
    ("NaN").name;
    f58();
    %OptimizeFunctionOnNextCall(f58);
    return v44;
}
for (let v90 = 0; v90 < 5; v90++) {
    f49(v45, v90, v90).length;
}
const v93 = f49();
f49(v46, v93, v93, -1547267477n);
