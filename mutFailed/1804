const v0 = [];
class C1 {
    static #valueOf() {
        v0 - this;
        return this[2];
    }
    h = v0;
    static m() {
        v0.__proto__;
        const o9 = {
            "maxByteLength": 1833,
        };
        const v11 = new SharedArrayBuffer(1833, o9);
        new BigUint64Array(v11);
        return v11;
    }
}
const v14 = new C1();
const v15 = new C1();
new C1();
const v17 = /[Fa+b|c]/gvdm;
const v18 = /dRM(?:a*)*xyz?/ums;
const v19 = /\P{Decimal_Number}/gusy;
class C20 extends C1 {
    7;
    constructor(a22, a23, a24, a25) {
        super();
        a23.flags >>= C1.h;
        const v27 = v14[1];
        try {
            a23.g = v27;
        } catch(e28) {
        }
    }
    [-2] = v17;
}
new C20(v18, v19, v14, v18);
const v30 = new C20(v17, v18, v15, v18);
new C20(v17, v18, v30, v18);
class C33 {
}
new C33();
class C36 extends Set {
}
const t44 = C36.constructor;
t44(C36);
let v39 = 0.3050534209767637;
v39--;
const v41 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v44 = new Uint32Array();
const v46 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v47 = [601759695];
const v48 = [1073741824,1073741823,1376142744,1073741825];
function f50(a51, a52, a53, a54) {
    function f56() {
        let v59 = Float64Array;
        v59 = a52;
        b = v47;
        const v60 = v41.length;
        try {
            v48.forEach(a52);
        } catch(e62) {
        }
        const v63 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v65 = Symbol.toPrimitive;
        const o71 = {
            toString(a67, a68) {
                const v69 = a54 && a52;
                a67 *= v65;
                v69 <= v63;
            },
        };
        const o96 = {
            "c": -4294967297n,
            [522675525n](a74, a75) {
            },
            "c": v47,
            valueOf(a77, a78) {
            },
            [v60](a80) {
            },
            [-1]: 2684,
            1073741824: v44,
            "maxByteLength": -268435456,
            "b": -4294967295,
            [-4294967297n](a82, a83, a84, a85) {
                class C87 extends Date {
                    static get c() {
                        eval();
                    }
                }
                for (let v91 = 0; v91 < 5; v91++) {
                    continue;
                }
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v46,
            set b(a93) {
            },
            256: a54,
            m(a95) {
            },
            ...v47,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            5: -4294967295,
            6: -268435456,
        };
    }
    f56();
    const v99 = new Int8Array();
    v99.buffer.slice(2147483648);
    %OptimizeFunctionOnNextCall(f56);
    let v104;
    try { v104 = v48["find"](..."find", a54, ...v47, ...v48, ...522675525n); } catch (e) {}
    v104 <= a53;
    return arguments;
}
for (let v106 = 0; v106 < 10; v106++) {
    f50();
}
%OptimizeFunctionOnNextCall(f50);
f50();
new WeakMap();
const v112 = [BigUint64Array];
v112.pop();
const v115 = Math.__defineSetter__;
try { v115(); } catch (e) {}
Math.sinh();
const o118 = {
};
if (5) {
    function F119(a121, a122) {
        if (!new.target) { throw 'must be called with new'; }
    }
    for (let v123 = 0; v123 < 5; v123++) {
        function F124(a126, a127) {
            if (!new.target) { throw 'must be called with new'; }
        }
    }
}
const o128 = {
    ...v112,
};
