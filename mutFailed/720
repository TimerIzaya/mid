const v4 = [-991034.5596759731,179.71649176762253,115582.55190338776,-1000000.0];
try { ("h").strike(); } catch (e) {}
async function f8(a9, a10) {
    'use strict';
    try { a9.split(65535, -21133.120743932668); } catch (e) {}
    a10[8] = v4;
    return -21133.120743932668;
}
f8.d = f8;
const v12 = f8("h", -21133.120743932668);
("9007199254740991")[10];
function f16(a17, a18, a19) {
    a18--;
    a19++;
    const o22 = {
        "g": a18,
        "e": a17,
        65536: 65535,
        __proto__: a19,
        ...a18,
        [a18]: a17,
        [-1]: 1024,
        "h": "symbol",
        "a": 1024,
        3012276153: "resizable",
        ...-21133.120743932668,
        "execution": "symbol",
        "value": 65535,
        /*
        __proto__: v4,
        */
        "type": "9007199254740991",
        "d": a19,
        "c": a19,
    };
    o22[65535] = o22;
    return o22;
}
try { f16(f16, v4, v4); } catch (e) {}
f16("9007199254740991", 65535, 10, v12);
f16("resizable", f16, "resizable");
f16("9007199254740991", 10, f16);
Uint32Array.BYTES_PER_ELEMENT = Uint32Array;
const v35 = new Uint32Array();
const v36 = ("p").lastIndexOf(v35);
v36 & v36;
class C38 {
}
C38.name = C38;
new C38();
const o40 = {
    "maxByteLength": 150,
};
const v42 = new ArrayBuffer(1000, o40);
const v44 = new Uint8ClampedArray(v42);
v44[-65536n] = v44;
