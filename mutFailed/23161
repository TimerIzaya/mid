function f0() {
    function f3() {
        const o8 = {
            [-1000000.0]: 0.0,
            set e(a7) {
            },
        };
        return f3;
    }
    f3.e = f3;
    const o17 = {
        get h() {
            super.e = this;
            255 instanceof 22393;
            var a = -162416304;
            try { this["setDate"](1791230993, "setDate", 22393); } catch (e) {}
            return -162416304;
        },
        ...1000.0,
        "f": f0,
        "d": f0,
        __proto__: 1000.0,
        1: -162416304,
        "h": 1000.0,
        "c": -162416304,
        "d": 1000.0,
    };
    return o17;
}
f0();
const v19 = f0();
const v20 = f0();
const v22 = -1n * -1n;
const v24 = 3n <= 3n;
v24 || v24;
let v26 = -127643275n;
v26 | v26;
class C28 {
    static #e;
    #c;
    static toString(a30, a31, a32, a33) {
        let v34;
        try { v34 = a31.p(a33, a30, f0); } catch (e) {}
        const o36 = {
        };
        function f38(a39, a40) {
            Object.defineProperty(o36, 564n, { writable: true, configurable: true, enumerable: true, set: Date });
            return a40;
        }
        a33[-1n] |= a33;
        try {
            a31.d = a33;
        } catch(e41) {
        }
        ({"d":v26,"e":v34,"g":v34,...f0} = a33);
        return v20;
    }
    a = f0;
    static {
        throw this;
        C28 >> v19;
    }
    static #g = v22;
    #a = 3n;
}
try { new C28(); } catch (e) {}
C28.e = C28;
const v45 = new C28();
try { v45.a(); } catch (e) {}
try { v45.a(); } catch (e) {}
const v48 = new C28();
new C28();
class C50 extends C28 {
    [v45];
    static #toString(a52, a53, a54) {
        try { v48["sqrt"](); } catch (e) {}
        return v20;
    }
    get b() {
        const o61 = {
            "execution": "sync",
            "type": "major",
        };
        class C62 {
        }
        function f63(a64, a65) {
            return C62;
        }
        return gc(o61);
    }
}
try { new C50(); } catch (e) {}
new C50();
new C50();
const v70 = new C50();
try { Math.round(v70); } catch (e) {}
const v74 = 536870887 & 536870887;
v74 >>> v74;
1e-15 | 1e-15;
const v78 = Math.atan2(1e-15, 536870887);
v78 >>> v78;
Math.expm1(1e-15);
