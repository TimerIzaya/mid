const v5 = new Uint8ClampedArray(256);
let v6;
try { v6 = v5.join("undefined"); } catch (e) {}
1165 << 1165;
let v10;
try { v10 = new BigUint64Array("b", "undefined", "OLw8"); } catch (e) {}
const v11 = new BigUint64Array(1165);
const v12 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
for (let v13 = 0; v13 < 5; v13++) {
    function f14() {
        const v16 = -v12.length;
        const o17 = {
            5: v16,
        };
        return v12;
    }
    f14();
    class C19 extends f14 {
        a;
        7;
        static 91 = v12;
    }
    new C19();
    new C19();
    new C19();
    %OptimizeFunctionOnNextCall(f14);
}
new BigInt64Array(10);
let v26 = 536870888n;
v26 <<= v26;
const v29 = Reflect.construct(BigUint64Array, [v5], v10);
v6[4053] = BigInt64Array;
-10n >> -10n;
v11[v29]?.b;
const v39 = [536870912n,536870912n,536870912n,536870912n,536870912n];
try { v39.find(536870912n); } catch (e) {}
