const v0 = [];
const v3 = ["isConcatSpreadable","ceil",v0];
const v4 = ["isConcatSpreadable",v3];
const v5 = [v3];
const v6 = v5 instanceof "isConcatSpreadable";
const v7 = [v4,"ceil",v3,v0,v4];
[v4,v3];
[v6,"ceil",v7,v5];
function f11() {
    return v0;
}
new WeakMap();
function F14(a16, a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = "isConcatSpreadable";
    } catch(e20) {
    }
    try {
        this.b = "isConcatSpreadable";
        for (let i23 = 0, i24 = 10; i23 < i24; i23++, i24--) {
            try {
                new WeakMap(v5);
            } catch(e33) {
            }
        }
    } catch(e34) {
    }
    const o38 = {
        "execution": "async",
        "type": "major",
    };
    gc(o38);
}
new F14("ceil", "pop", "ceil", "isConcatSpreadable");
new F14("ceil", "ceil", "isConcatSpreadable", "ceil");
new F14("ceil", "ceil", "pop", "pop");
new WeakSet();
Math.log1p(2.220446049250313e-16);
