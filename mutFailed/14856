const v3 = [1.0,-379151.1984584974,-1000.0,-406723.50673054974];
const v4 = [-525742.5589610512,4.988148832903222e+307,2.0,-6.960350685377039,1000000000.0,1000000000000.0,0.5190929389266034,-1.7976931348623157e+308];
const v5 = [0.0,929.5949523232657,-1e-15,726.5380916090323,-4.0,-1e-15,2.2250738585072014e-308,-523.120508415708,421.61672852170136,0.5459629191822911];
function f6(a7, a8, a9) {
    const o15 = {
        [a9]: a8,
        "d": v5,
        "h": 6.873822427940361,
        set a(a11) {
            v4[Symbol.toPrimitive];
        },
        "a": -2.220446049250313e-16,
        "g": a7,
        9: a9,
    };
    return o15;
}
const v18 = f6(f6(0.06014031100068884, f6(v3, v3, 0.06014031100068884), 6.873822427940361), v5, 6.873822427940361);
function f19() {
    return v18;
}
const v21 = new Float32Array();
function f22() {
    return f19;
}
function f23(a24) {
    a24 - -2.220446049250313e-16;
}
Object.defineProperty(v21, "toString", { writable: true, configurable: true, get: f22, set: f23 });
for (let v26 = 0; v26 < 25; v26++) {
    function f27(a28, a29, a30, a31) {
        a28[1];
        a29--;
        v26[0] = a28;
        const v34 = a29 <= f27;
        arguments[1] = arguments;
        arguments[1] = v34;
        const v36 = arguments?.__lookupGetter__;
        try { v36.constructor(v21, a30, v26, f27); } catch (e) {}
        try { v36(v36, f27, a29); } catch (e) {}
        return v36;
    }
    f27.valueOf = f27;
    for (let v39 = 0; v39 < 10; v39++) {
        f27(v21);
    }
}
