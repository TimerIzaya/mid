const v0 = [-243228.32260954287,-1.5879966807435775,0.4776060403718607,-450.9670667331602,48341.642579895095,-0.0];
[1e-15,-Infinity,-2.220446049250313e-16,-565916.8521792195,-7.604348246419336,-1000000.0,-Infinity,-496.4121030014941,-1.5968698831794748e+308,1.0];
[Infinity,2.2250738585072014e-308,1000000000.0];
const v4 = -Infinity;
const v8 = new Int32Array(1024);
v8[3];
const o10 = {
};
new Uint16Array(3);
const v16 = [1073741824,1073741823,1376142744,1073741825];
v16.forEach(v4);
try { v16["find"](..."find", Int16Array, ...v0, ...v16); } catch (e) {}
function f20(a21) {
    return a21;
}
new Int16Array(512);
new Uint16Array(257);
function F27(a29) {
    if (!new.target) { throw 'must be called with new'; }
    const v30 = this.constructor;
    class C31 {
    }
    function F32(a34, a35, a36, a37) {
        if (!new.target) { throw 'must be called with new'; }
        this.f = C31;
    }
    try { new v30(); } catch (e) {}
    Math.atanh("Vre");
    const v42 = [Infinity,-1.7411766874642142e+308,-1000000.0,-1000000000000.0,-1000.0,-8.633030896336538e+307,3.4879373433419367,3.0,4.0,0.3217386216666849];
    function f44(a45, a46) {
        new Int32Array(v42);
        a45();
        a46();
        return f44;
    }
    try {
        -35199 % (this / -1478256740);
    } catch(e53) {
    }
}
const v54 = new F27();
new F27(v54);
