new Set();
[0.2190555565365162,-5.0];
const v3 = [-5.182984120189952e+307,0.5284243672797183,-Infinity];
const v4 = [107599.93333991896,1.1936939339375856e+308,790.1413036193078,-2.0,204034.343996607,-5.0,-921.3636938002319];
const v7 = ("kOYR")[3];
class C9 extends Set {
    ["undefined"] = "boolean";
    h = "kOYR";
    static b = "undefined";
    static log(a11, a12, a13, a14) {
        let {"b":v15,"c":v16,...v17} = this;
        v15 |= Set;
        return a11;
    }
    valueOf(a19, a20) {
        const o23 = {
            "maxByteLength": 16,
        };
        const v25 = new Float32Array(-536870912, o23);
        new Uint8ClampedArray(v25);
        return "undefined";
    }
}
new C9();
new C9();
const v30 = new C9();
let v31;
try { v31 = v30.valueOf(v4, v4, "boolean", v3); } catch (e) {}
class C32 {
    get replace() {
        const o34 = {
        };
        const v36 = new Proxy(this, o34);
        super["undefined"] = v36;
        try {
            this.length = o34;
        } catch(e37) {
        }
        return v4;
    }
    #a = v31;
    #f;
}
const v38 = new C32();
new v38();
const v40 = v7?.constructor;
try { new v40(); } catch (e) {}
new C32();
function F44(a46) {
    if (!new.target) { throw 'must be called with new'; }
    try { new a46(a46); } catch (e) {}
    try {
        const o49 = {
            "type": 10,
        };
        o49.e = o49;
        Worker(a46, o49);
    } catch(e51) {
        e51.g = e51;
    }
}
const v52 = new F44(F44);
const v53 = v52?.__defineSetter__;
try { new v53("undefined", "undefined"); } catch (e) {}
