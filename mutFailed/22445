class C3 {
    set b(a5) {
        a5 &= -1104894892;
        const o8 = {
            "maxByteLength": 1073741825,
        };
        const v10 = new ArrayBuffer(5, o8);
        new Float32Array(v10);
    }
    #b;
    static 7;
    get e() {
    }
    constructor(a15) {
        super();
        for (let v16 = 0; v16 < 5; v16++) {
        }
    }
}
const v17 = new C3();
const v18 = new C3();
const v19 = new C3();
class C21 {
}
class C22 {
}
const v23 = new C22();
for (let v25 = 0; v25 < 5; v25++) {
    try { new C21(v23, v25, Float32Array, ...v25, -2147483648); } catch (e) {}
}
const v29 = [4294967297,-1104894892];
function f31() {
}
const v32 = [155533.8602852358,2.0];
function F34() {
    if (!new.target) { throw 'must be called with new'; }
    const v36 = this?.__defineSetter__;
    try { new v36(202); } catch (e) {}
    for (const v41 of Array(19793)) {
        v32[658291203] = null;
        Math.g = Array;
        f31--;
    }
}
const v44 = new F34();
const t45 = v44.constructor;
new t45();
[v19,v17,-1104894892,v29,-1104894892];
[-536870912,v18,-10,4294967297];
class C49 {
    constructor(a51, a52) {
        for (let v53 = 0; v53 < 25; v53++) {
            for (let v54 = 0; v54 < 10; v54++) {
                const v55 = [601759695];
                function f56() {
                    return f56;
                }
                class C58 extends Int32Array {
                }
                const v59 = [1073741824,1073741823,1376142744,1073741825];
                try { v59["find"](..."find", undefined, ...v55); } catch (e) {}
            }
            const v65 = new Int8Array(1159);
            try { v65.toSorted(); } catch (e) {}
            v65[2];
        }
    }
}
const v68 = new C49();
new C49(v68, C49);
