new Set();
const v4 = new Int16Array(131);
new String(1);
new Number(128);
class C11 extends Int16Array {
    constructor(a13, a14, a15) {
        super(a13, a13, a14);
        v4.buffer >>>= 1;
        const v16 = this[this];
        try { new v16(Number, v16, a13, a13); } catch (e) {}
        this[2293] = Int16Array;
    }
    static 536870888 = 128;
    static m(a19, a20, a21) {
        for (let v22 = 0; v22 < 32; v22++) {
            this["bigint" + v22] = v22;
        }
        return this;
    }
}
new C11(1, 131, 128);
new C11(1, 128, 131);
new C11(128, 131, 1, Number, Int16Array);
([8,-128,824095640,519745998,9007199254740992,-2147483648,2,-43581,-10,1850430412]).includes(...[-1000.0,-2.2250738585072014e-308,511.99933163650917,-386.8372768814137,Infinity]);
