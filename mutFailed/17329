[-431885543,536870888,268435441];
const v4 = [1073741824,2147483648,1073741824];
[-1073741824,3];
class C9 {
    static b = 15216;
    get f() {
        delete v4[v4[this]];
        const o16 = {
            "execution": "async",
            "type": "major",
        };
        gc(o16);
        return -9007199254740990;
    }
}
const v18 = new C9();
new C9();
new C9();
function F21() {
    if (!new.target) { throw 'must be called with new'; }
    this.b = 1;
    ([-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135]).fill();
    Array(176726687);
}
const v31 = new F21();
for (let v32 = 0; v32 < 5; v32++) {
    function f33() {
        for (let i36 = 0, i37 = 10;
            i36 < i37;
            (() => {
                const v41 = i36++;
                v41 >> v41;
            })()) {
        }
    }
    f33();
    %OptimizeFunctionOnNextCall(f33);
}
new F21();
const v47 = new v18();
class C51 extends F21 {
    constructor(a53, a54, a55, a56) {
        -a56;
        const v59 = new Uint8ClampedArray();
        class C60 {
            constructor(a62, a63, a64, a65) {
                const v66 = this.constructor;
                try { new v66(v59); } catch (e) {}
                for (let v68 = 0; v68 < 5; v68++) {
                    ~v68;
                    v59[v68] = a65;
                }
            }
        }
        new C60();
        super();
        a53[1629] = a53;
    }
}
new C51(v47, v31, C51, "10");
new C51(v31);
[];
const o78 = {
};
const o79 = {
};
function F81(a83, a84, a85, a86) {
    if (!new.target) { throw 'must be called with new'; }
}
function f87(a88) {
}
class C89 extends f87 {
}
