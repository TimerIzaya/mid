new Float64Array(200);
new Uint8Array(1996);
new Uint16Array(6);
new Uint32Array(10);
new Float64Array(255);
new BigInt64Array(3664);
function f19() {
    function f20(a21, a22) {
        new Int32Array(245);
        return Uint8Array;
    }
    return f20;
}
function f26(a27) {
    try { a27(); } catch (e) {}
}
Object.defineProperty(WeakSet, "toString", { writable: true, enumerable: true, get: f19, set: f26 });
const v29 = new WeakSet();
v29[0] = BigInt64Array;
v29[-65537n] >>>= WeakSet;
v29[0n] = -65537n;
delete v29[8];
const v36 = new Int16Array(7);
1024 * 1024;
new Uint16Array(1024);
new Float32Array(3415);
let v44 = 12;
v44++;
Int16Array.prototype = Int16Array;
new Int16Array(v44);
const v50 = new BigUint64Array(10);
Float32Array.prototype = Float32Array;
const v53 = new Float32Array(2494);
try { v53.find(Uint16Array); } catch (e) {}
const v55 = [7,v53];
const v57 = ([10,7,v55,v36])?.reverse;
try { v57(); } catch (e) {}
[v50,7];
let v61 = Int32Array;
function f62() {
    function f63(a64, a65) {
        255 | 10;
        function f70(a71, a72) {
            const o74 = {
                [8.946504243780264e+307]: a72,
                get g() {
                    return a72;
                },
            };
            return o74;
        }
        return f70(-9.389413203732939e+306, 2.0);
    }
    return f63;
}
function f76(a77) {
}
Object.defineProperty(v61, "toString", { writable: true, enumerable: true, get: f62, set: f76 });
const v81 = new v61(2917);
const v83 = v61--;
/S4/gvm;
/a?abc+e6H*/gvmsy;
/G(?:ab|cde)b?/udim;
const o88 = {
};
new Proxy(v55, o88);
v81["lastIndexOf"](v83);
10000 + 10000;
const o94 = {
    "maxByteLength": 10000,
};
const v96 = new ArrayBuffer(3471, o94);
Uint8Array.length;
const v99 = new Uint8Array(v96);
v99[2750];
const v103 = new Date();
v103[16] = Date;
class C104 {
    get c() {
        this.h &&= WeakSet;
        Object.defineProperty(v29, 3, { enumerable: true, get: Date });
        typeof this === "symbol";
        return Date;
    }
    constructor(a110, a111) {
        a110 | a110;
    }
}
