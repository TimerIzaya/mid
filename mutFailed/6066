const v0 = [2.220446049250313e-16,2.220446049250313e-16,-1.7976931348623157e+308,1000000.0,NaN,-1000000.0,2.2250738585072014e-308];
function f1(a2, a3) {
    for (let [v5,...v6] of "atan2") {
    }
    return "atan2";
}
v0.toString = f1;
let v7 = [NaN,-3.3780021990858143e+307,-1.0,-1000000000000.0,-5.792085451232241e+307,-1.1630453804150974e+308];
function f8() {
    function f9(a10, a11) {
        try {
            v7.__proto__ = a10;
        } catch(e12) {
        }
        return a10;
    }
    return f9;
}
Object.defineProperty(v7, "toString", { enumerable: true, get: f8 });
const v13 = [1.7356287087686901,-479515.1800251649,-4.0,8.487351009049986e+307,0.008823656500678734,2.0,-0.0,-1000.0,-9.22594972069426];
const v14 = [v13];
const v15 = [v0,v7];
function f16(a17) {
    let v18;
    try { v18 = v14.filter(f8, v0); } catch (e) {}
    a17 >>> v18;
    return a17;
}
v15.toString = f16;
const v20 = [v13,v15,v0];
Object.defineProperty(v20, "toString", { configurable: true, enumerable: true, value: f16 });
function f21(a22, a23, a24, a25) {
    function f26() {
        function f27(a28) {
            const v29 = new f8(...v14, f21, a22, a28);
            v7 = a25;
            return v29;
        }
        return f27;
    }
    function f30(a31) {
        new Uint8ClampedArray();
    }
    Object.defineProperty(a22, Symbol.toPrimitive, { writable: true, configurable: true, enumerable: true, get: f26, set: f30 });
    const o47 = {
        "h": a24,
        __proto__: a22,
        158: f21,
        ...a25,
        [a22]: v7,
        "g": a24,
        set e(a37) {
            new Int32Array(5);
            new Int16Array(3896);
            new Float32Array(16);
        },
    };
    return o47;
}
const v48 = f21(v7, v20, v7, v20);
const v50 = f21(v20, f21(v15, v0, v13, v14), v15, v7);
const v52 = [v20,v14,v0,v7,[v0]];
[v48,v20,v48,v48,v20];
function F54(a56, a57) {
    if (!new.target) { throw 'must be called with new'; }
    function f58() {
        return f8;
    }
    function f59(a60) {
        return a60;
    }
    Object.defineProperty(this, "h", { enumerable: true, get: f58, set: f59 });
    try {
        this.g = a57;
    } catch(e61) {
    }
    try {
        this.c = f21;
    } catch(e62) {
    }
    try {
        this.h = a57;
    } catch(e63) {
    }
}
const v64 = new F54(v15, v15);
new F54(f21, v52);
new F54(v64, v7);
/(x)(x)(x)\3*/gvi;
const v71 = /((?<=a))/gudm;
const v72 = /gk4b*/vmsy;
[v72,v72,v72];
[v50,1e-15,v71];
[-4,2];
let v78;
try {
const t0 = -1.3832922122240728e+307;
v78 = t0(2);
} catch (e) {}
for (let v79 = 0; v79 < 5; v79++) {
    v79 < 1;
    try { v78(v71, v79, v72, v79, -4); } catch (e) {}
    const v84 = Symbol.iterator;
    const o88 = {
        [v84]() {
            const o87 = {
                next() {
                    return v72;
                },
            };
        },
    };
}
