function f0() {
}
const v3 = new Uint16Array(1745);
let v4;
try { v4 = v3.toReversed(); } catch (e) {}
v4.BYTES_PER_ELEMENT = v4;
let v6 = Int8Array;
const v7 = new v3(232);
let v8;
try { v8 = v7.indexOf(v6); } catch (e) {}
-v8;
const v12 = new Uint8Array(1000);
class C13 {
    toString(a15, a16) {
        ({"a":a15,"e":a15,...v6} = this);
        a16?.d;
        return a15;
    }
    valueOf(a19, a20, a21, a22) {
        ({"d":a20,"f":a19,} = this);
        try {
            v12.length = 1000;
        } catch(e23) {
        }
        return a21;
    }
}
new C13();
new C13();
const v26 = new C13();
try { v26.valueOf(f0, f0, f0, v26); } catch (e) {}
function f28(a29, a30, a31, a32) {
    a31.g = a31;
    a29.arguments = a29;
    const v33 = a31?.constructor;
    v33.d = v33;
    let v34;
    try { v34 = new v33(f28); } catch (e) {}
    v4[0] = arguments;
    function f36() {
        try { Math.expm1(Uint16Array); } catch (e) {}
        const v39 = Math.asin(Math);
        v39 >> v39;
        return v39;
    }
    f36.f = v34;
    try { f36(); } catch (e) {}
    %PrepareFunctionForOptimization(f36);
    f36();
    %OptimizeFunctionOnNextCall(f36);
    -f36();
    return arguments;
}
const v45 = f28(f28, f28, f28, f28);
const v46 = v45.callee(v45, v45, v45);
v46.length = v46[2];
