function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = -4294967296;
    } catch(e3) {
    }
}
new F0();
new F0();
const v6 = new F0();
Int16Array.prototype = Int16Array;
const v9 = new Int16Array(8);
v9[6] = v9;
const v12 = new Int32Array(9);
let v13;
try { v13 = v12.indexOf(v6); } catch (e) {}
try { v12.join(F0); } catch (e) {}
~9;
const v18 = new BigUint64Array(4);
let v19;
try { v19 = v18.keys(); } catch (e) {}
const o26 = {
    get g() {
        this.a = this;
        this.b = this;
        const v24 = Math.acosh(v19 * -877499.5260373768);
        -(-877499.5260373768);
        return v24;
    },
};
o26.b = o26;
const o29 = {
    set a(a28) {
        a28.h = this;
    },
    ...o26,
};
o29.g = o29;
const o34 = {
    [-352741132]: -352741132,
    set b(a33) {
    },
    "b": 2.220446049250313e-16,
};
const v35 = v13?.constructor;
let v36;
try { v36 = new v35(o26); } catch (e) {}
v36.b;
function f38() {
}
const t50 = /a\Sc?/giy;
t50.valueOf = f38;
function f41() {
    return WeakMap;
}
v19();
