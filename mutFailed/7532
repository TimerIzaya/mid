[-65535];
[1078607490,-536870912];
new BigInt64Array(BigInt64Array);
new Int16Array(2);
[-6196,-4449,10,14,15,51179,-23339,-65536,2147483649,4294967295];
const v13 = new BigUint64Array();
function F14() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        let v16 = 0;
        for (let i = 0; i < 5; i++) {
            v13.entries();
            const v18 = v16++;
            v18 ^ v18;
            v16 < 5;
        }
        new F14();
    } catch(e23) {
    }
}
new Uint8ClampedArray(138);
new Float32Array(13);
-1.3832922122240728e+307 >> -1.3832922122240728e+307;
class C35 {
    static #d;
    set b(a37) {
        Symbol.search;
    }
    static ["Xkz0W"] = "Xkz0W";
    8;
    d;
}
const v40 = new C35();
const v41 = new C35();
class C42 extends C35 {
    n(a44, a45) {
        v41[10] = v40;
        SharedArrayBuffer();
        Float64Array(10);
    }
}
new BigInt64Array(16);
class C58 {
}
const v59 = new C42();
function F60(a62, a63, a64, a65) {
    if (!new.target) { throw 'must be called with new'; }
    a62.unshift(v59);
}
const v76 = `
    function F77() {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v79 = new F77();
    function f80() {
        const v83 = Array(4087);
        v83[1959] = v79;
        for (const v84 of v83) {
        }
        return 4087;
    }
    f80();
    %OptimizeFunctionOnNextCall(f80);
    try {
        new Float64Array(127);
    } catch(e87) {
    }
`;
