[-15158,1232403993,21830,-4096,5,-1604833700,1];
[0,5,-5];
[-2147483648,-65535,-49618,10000,4294967295,-1089949402];
[1.7976931348623157e+308,1.046232255740605e+308,3.0,1.7849965826923358e+307,1.0,-5.0];
[9.418129688264238e+307,NaN,-3.0,0.0,-1.7142624408425505e+308,-2.0,-3.0];
[-674264.8766274909,0.0,1000000.0,1000000000000.0,1.0,-1.7976931348623157e+308,2.7384502623737598e+306,6.350898558050375];
new Set();
new Int32Array(156);
new Uint16Array(-122827514);
new Int32Array(2);
/[8a(?=bbb|bb)c]/gums;
/a[a]/vdsy;
const v22 = /M/gus;
class C26 {
    #h = 1e-15;
    static get e() {
        function f28() {
            return 1e-15;
        }
        return this;
    }
    static [v22];
    set f(a30) {
        const v31 = [-504863.1885363821,-248378.80818527355,-147.11467188198264,-1.7039705769992093e+308];
        for (let v32 = 0; v32 < 5; v32++) {
            v31 | v32;
        }
        this != a30;
    }
    #g = 3.7122420217608383;
    static 65536;
}
new C26();
new C26();
new C26();
new Set();
[-Infinity,Infinity,959819.665748626];
[0.881533214430694,1000000000000.0,-2.6561951388069446e+306,1e-15,-601975.7256958171,-2.0,1.0,-1000000000000.0,-5.0];
[-6.825886894231237,-1000000000.0,-7.405832553829715,-5.0];
function f49() {
    let v51 = 1000000000000.0;
    const v52 = v51--;
    -v52;
    class C57 {
        constructor(a59) {
            const v61 = new Float32Array();
            try { v61.entries(); } catch (e) {}
            const v63 = new Uint16Array(12, -4294967296, v52);
            new Float32Array(v63, -4294967296, 268435439, v51, v63);
        }
    }
    try { new C57(12); } catch (e) {}
    const v66 = new C57(257828.6336153492);
    const v67 = new C57();
    const v68 = new C57(-4294967296);
    const v69 = [v68,C57];
    [257828.6336153492,v68,v66,v68,v69];
    const v71 = [v68];
    class C72 extends C57 {
        [v66];
    }
    const v73 = new C72();
    const v74 = v71.constructor;
    try { v74.isArray(v71); } catch (e) {}
    class C76 extends v74 {
    }
    C76.a = C76;
    const v77 = new C76();
    const v78 = v77?.constructor;
    try { new v78(); } catch (e) {}
    Object.defineProperty(v77, 65537, { value: v67 });
    try { v73.m(v69); } catch (e) {}
    return Int32Array;
}
%PrepareFunctionForOptimization(f49);
f49();
%OptimizeFunctionOnNextCall(f49);
f49(Int32Array, 579364.7387042537, C26);
