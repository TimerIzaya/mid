class C3 {
    static f = -818n;
    static #f;
    [13n];
    static m(a5) {
        this[1434] = this;
        return a5;
    }
    #toString(a7, a8) {
        const v10 = [[64n,a7,this,a7,this]];
        [64n,a8,a7,v10,v10];
        new Set();
        return a7;
    }
}
const v14 = new C3();
v14[13] = v14;
const v15 = new C3();
v15[13] = v15;
new C3();
function F23() {
    if (!new.target) { throw 'must be called with new'; }
}
F23.e = -536870912;
class C28 extends F23 {
}
C28.e = -1.0982936988440762e+308;
C28.e = 0.7888859687320595;
C28.e = C28;
const v29 = new C28();
function f30(a31, a32) {
    new Float32Array(-536870912);
    return -536870912;
}
v29[Symbol.toPrimitive] = f30;
function f37() {
    const v38 = C28[0.7888859687320595];
    function F39() {
        if (!new.target) { throw 'must be called with new'; }
    }
    return v38;
}
v29.toString = f37;
try { v29.toLocaleString(); } catch (e) {}
function f43(a44, a45) {
    %PrepareFunctionForOptimization(f37);
    Object.defineProperty(v14, "e", { enumerable: true, get: f37, set: f37 });
    return a45;
}
Math.valueOf = f43;
try { Math.asin(Math); } catch (e) {}
65536 ^ 65536;
const v49 = 65536 | "undefined";
Math.log2(v49);
try { Reflect.getOwnPropertyDescriptor("undefined", v49); } catch (e) {}
const v53 = ["function"];
try { v53.lastIndexOf(13n); } catch (e) {}
let v56 = Reflect.apply(("b").localeCompare, v29, v53);
v56--;
