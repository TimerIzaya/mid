([127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649]).toSpliced(-1148418937, -1148418937, 2.220446049250313e-16, 2.220446049250313e-16, "-4");
const v8 = [478138670,10,4096,536870912,-1];
const v9 = [6];
const v10 = [2066654767,11,-26258,-9223372036854775807,64,9,10000,13777,-4294967295];
class C11 {
    static 4 = v9;
    #e = v8;
    [v8] = v9;
    static o(a13, a14, a15, a16) {
        try {
            a15.padStart(1073741823, "flags");
        } catch(e20) {
        }
        function F21(a23, a24) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = "1073741825";
            } catch(e25) {
            }
            try {
                this.g = C11;
            } catch(e26) {
            }
            try {
                this.c = "1073741825";
            } catch(e27) {
            }
        }
        new F21(a14, v10);
        new F21("toString", a13);
        new F21("toString", v9);
        return F21;
    }
}
new C11();
new C11();
new C11();
class C34 extends C11 {
    #valueOf(a36, a37, a38, a39) {
    }
    static {
        let v41 = 0;
        while (v41 < 6) {
            v41++;
        }
    }
    static #valueOf(a46, a47, a48, a49) {
        a47["slice"](v8, a49);
        const v52 = super.d;
        ({"b":a47,"length":a46,} = "MAX_VALUE");
        try { v52.get(v52, a49, "MAX_VALUE"); } catch (e) {}
        return a47;
    }
    #p(a55, a56) {
    }
    static #c = "-4";
    constructor(a58, a59) {
        for (let i = 0; i < 5; i++) {
            this[this];
        }
    }
    static e;
    #g = v10;
    ["toString"];
    1;
    4096;
}
new C34();
new C34();
const v63 = new C34();
const v65 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v66 = [601759695];
const v67 = [1073741824,1073741823,1376142744,1073741825];
function f69(a70, a71, a72, a73) {
    function f75() {
        const o82 = {
            "e": -4294967295,
            ...v65,
            ..."Vre",
            "c": a72,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a80, a81) {
                return a81;
            },
            ..."Vre",
            4: "Vre",
            5: -4294967295,
            6: -268435456,
        };
        return v63;
    }
    f75();
    %OptimizeFunctionOnNextCall("toString");
    let v85;
    try { v85 = v67[a72](..."find", a73, ...v66, ...v67, ...522675525n); } catch (e) {}
    v85 <= a72;
    return arguments;
}
for (let v87 = 0; v87 < 10; v87++) {
    f69();
}
%OptimizeFunctionOnNextCall(f69);
f69(v67, f69, 522675525n);
