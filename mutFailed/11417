class C3 {
    a = 512;
    set d(a5) {
        try {
            this.length = C3;
        } catch(e7) {
        }
    }
    [1024];
    #b;
    [41408] = 41408;
}
const v8 = new C3();
new v8();
const v10 = new C3();
const v11 = [41408,41408,v8];
const o12 = {
};
o12.e = v11;
function f13(a14) {
    return f13;
}
const v16 = [41408,41408,[1024],v10];
function f20(a21, a22, a23, a24) {
    for (let [i29, i30] = (() => {
            (0 >>> 0) % a22;
            return [0, 10];
        })();
        i29 < i30;
        i30--) {
    }
    return f20;
}
for (let v37 = 0; v37 < 10; v37++) {
    f20(f20, f20, v37, v37, v37, v16);
}
%OptimizeFunctionOnNextCall(f20);
function f39() {
    return 1024;
}
const t40 = 255;
const v40 = t40();
const v41 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
new Uint32Array(v41, v40, v41, v41);
f20(f20, f20, f20, f39);
