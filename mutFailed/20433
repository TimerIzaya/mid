const v1 = [65536,385933025,-1309372818,128,29746,-256,9007199254740990,-62457,9007199254740991,-268435456];
const v2 = [5139,-9935,1073741824,-268435456];
const v3 = [479664185,-56832];
let v4;
try { v4 = v3.values(); } catch (e) {}
function f5() {
    const v8 = new Uint16Array(8);
    v8.toSorted();
    return 8;
}
const v11 = Symbol.toPrimitive;
v4[v11] = f5;
const v12 = /(abc|def|ghi)/udim;
const v13 = /[olc]/gvims;
v13.valueOf = Symbol;
const v14 = /a\n(x)(x)(x)\3/di;
let v16;
try { v16 = new v2(59356, v3); } catch (e) {}
let v17;
try { v17 = v16(v12, v14, ...v3, ...v2); } catch (e) {}
const v18 = v17 - undefined;
try { ("2").split(v4, v13); } catch (e) {}
("replace")[2];
let v24;
try { v24 = ("f").indexOf("f"); } catch (e) {}
v24++;
const v28 = -(-4294967295);
5 === 5;
const v31 = 5 >>> 5;
v31 !== v31;
const v34 = new Uint8ClampedArray(5);
Uint8Array.name;
new Uint8Array(120);
-(~10);
BigUint64Array.name = BigUint64Array;
const v43 = new BigUint64Array(10);
try { v43.toSorted(v34); } catch (e) {}
let v45 = 2136873598;
v45++;
class C47 {
}
C47[Symbol.toPrimitive] = Symbol;
try { C47.bind(v28); } catch (e) {}
const v51 = v45.constructor;
v51.g = v11;
v51.MAX_VALUE = v51;
const v52 = new v51();
const v53 = v52.toExponential(C47);
v53[1];
let v55;
try { v55 = v53.blink(); } catch (e) {}
v55[13] = v55;
try { v53(10, v53, C47, 59356, v18); } catch (e) {}
e = v52;
v51.g *= 5;
function f58(a59, a60) {
    const v62 = new Float64Array();
    return v62;
}
gc.constructor = f58;
const v63 = gc?.constructor;
v63.length = v63;
try { new v63(v1); } catch (e) {}
const o67 = {
    "execution": "sync",
    "type": "major",
};
gc(o67);
