-63523 >= 127 ? -63523 : 127;
Reflect.preventExtensions(Reflect);
[[-4294967295n,"2dUnn",-4294967295n,"2dUnn"]];
const v17 = [129n,"1","c","c"];
class C21 {
    constructor(a23) {
        function f24(a25) {
            const v26 = a25?.[Reflect];
            try { v26(-63523, a23, a25, v26, v17); } catch (e) {}
            return this;
        }
        this.toString = f24;
        this[1762774961] = this;
        a23 % a23;
        ("undefined").normalize("NFC");
        Math.tan(-1);
        function f35() {
            return a23;
        }
        try { f35.bind(this); } catch (e) {}
    }
    static [-1e-15] = 1000.0;
    ["name"] = -1e-15;
    f;
    [-1e-15];
    a;
    1762774961 = -1e-15;
    static ["name"];
}
C21.e = C21;
const v37 = new C21(1000.0);
const v38 = new C21(v37);
const v39 = v38?.__lookupSetter__;
const v42 = new Float64Array();
function f43(a44, a45) {
    function F46(a48, a49) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.c = a45;
        } catch(e50) {
        }
        try {
            this.d = C21;
        } catch(e51) {
        }
    }
    new F46(a45, v17);
    new F46("1", a44);
    new F46("2dUnn", a44);
    return Float64Array;
}
v42.constructor = f43;
const t52 = v42.constructor;
new t52(821);
try { new v39("name"); } catch (e) {}
new C21(-1e-15);
try { new WeakSet(); } catch (e) {}
new WeakSet();
new Set();
let v65 = undefined;
const o66 = {
};
o66.c = o66;
v65 = o66;
function F67() {
    if (!new.target) { throw 'must be called with new'; }
    function f69() {
        return f43;
    }
    Object.defineProperty(this, "constructor", { get: f69 });
    const v70 = this.constructor;
    try { new v70(); } catch (e) {}
    let v72 = -128;
    v72--;
    this.g = v72;
}
new F67();
const v78 = new Uint16Array(2);
const v79 = new Uint16Array(v78);
for (const v80 in v79) {
}
new Uint8Array();
