class C3 {
    p(a5) {
        this[9] = this;
        const v6 = ["AdVd","AdVd",a5,a5];
        function f7(a8) {
            /Ad\1112/di;
            /4H[x\dz]/udi;
            /(?<a>.)?/gvdy;
            return 257;
        }
        v6[Symbol.toPrimitive] = f7;
        this[9] = this;
        const v14 = super[v6];
        const v16 = ("AdVd")["padEnd"](..."padEnd", ...v6, this, ..."padEnd", ...v6, 257);
        try { new a5(v14, v14, v16, v16); } catch (e) {}
        [a5,257,v6,532.9941859764797];
        return [257];
    }
    #o(a21) {
        super[a21] = 257;
        try {
            this.c = this;
        } catch(e22) {
        }
        C3 %= a21;
        try {
            ("AdVd").repeat(268435456);
        } catch(e28) {
        }
        return "AdVd";
    }
    m(a30) {
        super.d = 532.9941859764797;
        typeof a30 === "number";
        return 257;
    }
    g = 532.9941859764797;
}
C3[9] = "AdVd";
new C3();
const v35 = new C3();
function f36(a37, a38) {
    new C3(a37, a38, a38, a38);
    class C40 {
        static a;
        static {
            this >> this;
            this[6];
        }
        static m(a45) {
            gc();
        }
    }
    const v48 = new C40();
    return v48;
}
v35.toString = f36;
for (let v50 = 0; v50 < 5; v50++) {
    function f52() {
        return f52;
    }
    const o55 = {
        "type": "function",
    };
    new Worker(f52, o55);
}
const v57 = [532.9941859764797];
Reflect.apply(v35.p, C3, v57);
257 - v35;
new C3();
new BigUint64Array(9);
new BigUint64Array(206);
new Int16Array(2803);
const v73 = new Uint32Array(1024);
const v75 = new BigInt64Array();
try { v75.with(v73, v73); } catch (e) {}
