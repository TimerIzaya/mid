function F0() {
    if (!new.target) { throw 'must be called with new'; }
    function f2(a3) {
        try { new BigInt64Array(BigInt64Array); } catch (e) {}
    }
    Object.defineProperty(this, "f", { writable: true, configurable: true, set: f2 });
    try {
        this.c = 9;
    } catch(e7) {
    }
    try {
        this.f = 9;
    } catch(e8) {
    }
    try {
        this.b = 9;
    } catch(e9) {
    }
}
const v10 = new F0();
new F0();
const v12 = new F0();
[[v10,v10,F0],v12,F0];
[v12];
[255];
[15946,8238,-1024,-268435456,268435439,4294967295,-60061,1026983827,1,-16];
[40387,65536,9223372036854775807,-9007199254740991,665693237,-2,11,-2147483648];
new Uint32Array([-9007199254740991,536870888,52691,-1,-128,-196204265,0]);
