const v1 = [];
-v1 && v1;
function F4(a6, a7, a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    for (let v10 = 0; v10 < 25; v10++) {
        const v13 = new BigUint64Array(3375);
        let [v14,,v15,...v16] = v13;
    }
    try { a6.unshift(a7); } catch (e) {}
    try { a6.toSpliced(); } catch (e) {}
}
function f24() {
    return -287.5409074748743;
}
[f24,f24,-138781.17130672815,-999724362,-287.5409074748743];
const v26 = [f24];
const v27 = [-999724362,f24];
[1073741824,536870887,-61112,65536];
let v29 = [-6,2741,2147483647,4096];
[64,1637389238,3,64,-20816,536870888];
class C31 {
    constructor(a33, a34, a35) {
        function f37(a38, a39, a40, a41) {
            arguments[1] = arguments;
            const o46 = {
            };
            o46[10] = o46;
            o46[10] = o46;
            return f37;
        }
        f37(-2.5916949198328514e+307, -2.5916949198328514e+307, -2.5916949198328514e+307, 40198);
        f37();
        class C49 {
            h = v27;
            2147483649 = a34;
            c;
        }
        new C49();
        new C49();
        new C49();
    }
    static {
        throw v27;
        super.d = 1873523764;
        v29 = v26;
    }
}
new C31(-999724362, -138781.17130672815, f24);
new C31(40198, -295400.6650636607, 40198);
new C31(40198, -138781.17130672815, v27);
function F57() {
    if (!new.target) { throw 'must be called with new'; }
}
class C59 extends F57 {
}
function f60() {
}
%OptimizeFunctionOnNextCall(f60);
new C59();
function F62(a64, a65, a66) {
    if (!new.target) { throw 'must be called with new'; }
    a65 === a65;
    const v69 = new BigUint64Array();
    const v70 = /anVXYFzN(x)(x)(x)\3/gvdms;
    try { v69.reduceRight(v70); } catch (e) {}
    9n >> 9n;
    this.constructor;
}
function f75() {
    class C76 {
    }
    const v77 = new C76();
    for (let v78 = 0; v78 < 5; v78++) {
        new F62(undefined, v77);
    }
}
%PrepareFunctionForOptimization(f75);
f75();
%OptimizeFunctionOnNextCall(f75);
f75();
