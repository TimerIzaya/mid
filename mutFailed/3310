const v0 = [885934437,-8];
[-643924441,-12];
[-1517470974,-1419691843,-30716,-22870,-2];
[-139.17587986201534,-3.132436717589531,-1.023862121697933e+308,2.96817569346776,2.220446049250313e-16,6.912920158852998,NaN];
[5.0,2.220446049250313e-16,1e-15,5.0,0.0,-793.6170262628864,810.9366451125691,72971.2509941298];
[-2.220446049250313e-16,Infinity,5.0,0.6684107549632256,-4.0,0.4648993387443917,-5.0,-1.7976931348623157e+308,118377.8618396502];
function F12(a14, a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    const v17 = this.constructor;
    let v18;
    try { v18 = new v17(); } catch (e) {}
    this.e = v18;
}
function f19() {
    class C20 {
        constructor(a22, a23) {
            const v27 = +7;
            a23 ** 1.7976931348623157e+308;
            f19--;
            +v27;
            -this;
            Math.floor(f19);
        }
    }
    let v33;
    try { v33 = v0(); } catch (e) {}
    const v34 = [F12];
    for (let v35 = 0; v35 < 5; v35++) {
        new F12(undefined, v33);
    }
    v34.constructor;
    return F12;
}
%PrepareFunctionForOptimization(f19);
const v39 = f19();
%OptimizeFunctionOnNextCall(f19);
v39();
