const v0 = /(\cAa\Bb)/guimy;
const v1 = /(?:a+)*/gdimsy;
function f2(a3) {
    v0.flags;
    return [[65535,268435439,-9007199254740990,268435440,1024,19743,5,4]];
}
v1[Symbol.toPrimitive] = f2;
const v9 = /\p{Script=Greek}/gudim;
function f13(a14, a15) {
    function f16(a17) {
        return a17;
        f13 ||= a17;
        return Symbol;
    }
    Object.defineProperty(a15, Symbol.toPrimitive, { writable: true, configurable: true, enumerable: true, value: f16 });
    const o27 = {
        "g": -9223372036854775807,
        __proto__: v1,
        "a": 3031,
        n(a21, a22, a23, a24) {
            new WeakMap();
            return a24;
        },
        4244723502: v0,
        [a15]: v1,
        [1417718653]: a15,
    };
    return o27;
}
f13(v0, v1);
f13(v9, v0);
f13(v1, v0);
function F35() {
    if (!new.target) { throw 'must be called with new'; }
    function f37() {
        return f2;
    }
    function f38(a39) {
        f37();
    }
    Object.defineProperty(this, "toString", { writable: true, get: f37, set: f38 });
    const v41 = this.toString();
    const v43 = new Set();
    const v44 = v43.add;
    try { v44(); } catch (e) {}
    const v48 = new Int16Array(2183);
    4087 > v41;
    let [,,...v50] = v48;
    function f51(a52) {
        function f54(a55) {
            this[1] >>= 4087;
            return F35;
        }
        this.onmessage = f54;
    }
    const o58 = {
        "type": "function",
    };
    o58.arguments = -42359;
    new Worker(f51, o58);
}
new F35();
new F35();
