const v3 = [1000000000.0];
const v4 = [4.261296592699928,-9.786509059551417,1000000.0,-110451.6605264896,2.220446049250313e-16,-6.842062636859858,-Infinity,7.7768710642937044,-1.7976931348623157e+308];
const v5 = [1.7976931348623157e+308,4.0,-830476.8094690647,4.0,73452.50442600576,-2.0,1000000000000.0,-1.5534918022107389e+307,-1000000000000.0];
const v6 = [-2.220446049250313e-16,1000000000.0,-8.297887595300033,-2.220446049250313e-16,1.0,7.8163754393414955,-7.052779646514329];
function f7() {
    let v8 = /a|b/vdy;
    let v9 = /7Z(?:a?)+/gudsy;
    const v10 = /\coQ/gdy;
    function F11(a13) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.e = v8;
        } catch(e14) {
        }
        try {
            this.g = a13;
        } catch(e15) {
            v10.dotAll >>= e15;
            let v16;
            try { v16 = e15(e15, v9); } catch (e) {}
            v9 = v8;
            return e15;
            v8 = v16;
        }
    }
    try { v9(F11); } catch (e) {}
    return v6;
}
v6.toString = f7;
const v18 = [-421.4643493676426,9.214381304472223,-1.7976931348623157e+308,-1.0,-2.2250738585072014e-308,2.0,-9.769975016866233,766.7334950263553];
function f19() {
    function f20() {
        const v21 = [515943.2030917471,-1e-15,1.7976931348623157e+308,0.19475803117559898,-546414.0415788401,285129.04068811354];
        new Uint8ClampedArray(v21);
        return v21;
    }
    return f20;
}
function f24(a25) {
}
Object.defineProperty(v18, "toString", { writable: true, configurable: true, enumerable: true, get: f19, set: f24 });
try { v18.toString(); } catch (e) {}
const v28 = [3.1330653824420233e+307,1.675291485212349e+308,-589814.4652786958,675308.6079661464,-1000000000.0,-3.080418075862425e+307,0.13010542043571782,1.0,-351.75230672990176,-1.1647685555905676e+308];
try { v28.isPrototypeOf(v28); } catch (e) {}
function f30(a31, a32, a33, a34) {
    const o70 = {
        p(a36, a37, a38) {
            new v6();
            const v46 = [-2,-13,-56984,-56984];
            const v47 = [v46];
            function f48(a49, a50, a51, a52) {
                const o57 = {
                    ...v47,
                    n(a54, a55) {
                        class C56 {
                        }
                    },
                    __proto__: v46,
                };
                return o57;
            }
            const v58 = f48(v46, -13, -2, -2);
            class C59 {
                static m(a61, a62, a63, a64) {
                    try {
                    } catch(e65) {
                    }
                }
                [v58];
            }
            return a31;
        },
        ...v28,
        get b() {
            try { v5.reduce("o", this); } catch (e) {}
            const v68 = super.b;
            this.g;
            a34[a31] ^= a32 = v68;
            return v3;
        },
    };
    function f71() {
        const v74 = new Uint8ClampedArray();
        try { Float32Array.apply(0, v74); } catch (e) {}
        return "370238108";
    }
    o70.toString = f71;
    return o70;
}
const v77 = f30("370238108", v18, "370238108", "370238108");
v77[5] = v77;
const v78 = f30("o", v6, "o", "o", v77);
function f79(a80) {
    let v81;
    try { v81 = v18.values(); } catch (e) {}
    v78[8] = v4;
    return v81;
}
v78[Symbol.toPrimitive] = f79;
f30("370238108", v28, "o", "valueOf");
function f85() {
}
f85[Symbol.toPrimitive] = f30;
f85.toString = f30;
const v91 = -16 + -16;
function f92() {
    return f85;
}
f92.arguments = f92;
function f94() {
    const v97 = Symbol.iterator;
    Math[v97] = v97;
    return Symbol;
}
const v99 = new Int8Array(31);
v99.constructor = f24;
try { v99.slice(v78, v6); } catch (e) {}
try { Uint16Array(Uint16Array, Uint16Array, v91); } catch (e) {}
new Uint16Array(0);
Int8Array[Symbol.toPrimitive] = f30;
const v108 = new Int8Array();
let [,,,...v109] = v108;
new Map();
Uint32Array.prototype;
Uint32Array.e = 255;
const v115 = [-2,257,-107178159,-35269,9223372036854775807,1203530861,-32678];
const o116 = {
};
const v118 = new Proxy(v115, o116);
const o119 = {
    __proto__: v118,
};
try { o119.reduceRight(v118); } catch (e) {}
Uint32Array.e = Uint32Array;
const v121 = new Uint32Array(255);
const v123 = new Map();
let v130 = undefined;
const o177 = {
    ...v123,
    ...v123,
    __proto__: v123,
    [24560](a132, a133, a134) {
        class C138 {
            constructor(a140, a141) {
                a141 - a141;
                let v143;
                try { v143 = new a140(-5.869943149384486, a141, a141, a141, ...0.2510089730549625, 512.29276402866); } catch (e) {}
                try {
                    super.m(this);
                } catch(e145) {
                }
                a141 = v143;
                try { ("m").match(a140); } catch (e) {}
                try { v143["m"](v143, "m", a140, this, v143); } catch (e) {}
                Math.sign(0.8907211315752046);
                const v154 = -2 & 0.8907211315752046;
                Math.sqrt(0.8907211315752046);
                !-1;
                v154 + v154;
                ~0.8907211315752046;
            }
            [-5.869943149384486];
            c;
            static e;
            h = -5.869943149384486;
        }
        const v160 = new WeakSet();
        const o161 = {
        };
        const v163 = new Proxy(v160, o161);
        const v164 = new C138();
        v163[5] = v164?.constructor;
        super[591114.0785999324];
        function f168(a169, a170, a171) {
            const o172 = {
                "h": v130,
                ...v99,
            };
            return o172;
        }
        const v173 = f168(undefined, v91, f168);
        f168(v173, 1.7976931348623157e+308, -1232377648, v5, f92, v173);
        f168(v99, a134, 1.7976931348623157e+308);
        v130 = Map;
    },
};
v130 = o177;
[v123,-2,v99];
4 != 4;
function F181() {
    if (!new.target) { throw 'must be called with new'; }
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    const o187 = {
        [Infinity]: -0.0,
        [-16]: Infinity,
        "h": -16,
        ...-0.0,
        "c": Infinity,
        "e": -0.0,
    };
    const v190 = new Date();
    v190.valueOf = f85;
    try { v190.setFullYear(f85, v190, F181); } catch (e) {}
    const v193 = 19793 + 19793;
    v193 >>> v193;
    const o195 = {
    };
    o195.a = o187;
    o195.a = o195;
    Object.defineProperty(o195, "e", { writable: true, value: v6 });
    o195.e = 19793;
    Int8Array[Symbol.toPrimitive] = Date;
    const v201 = new Int8Array(3787);
    const v202 = v201[1926];
    const v205 = new Date();
    v205.setUTCFullYear(v202, Int8Array, Float32Array);
    new BigUint64Array(v202);
    const v209 = Array(19793);
    function f210() {
        return v121;
    }
    function f211(a212) {
        Object.defineProperty(Symbol, 8, { set: f85 });
    }
    Object.defineProperty(v209, 11197, { configurable: true, get: f210, set: f211 });
    for (const v213 of v209) {
    }
    for (let v214 = 0; v214 < 50; v214++) {
        v214 | v214;
    }
}
Object.defineProperty(F181, "toString", { writable: true, value: f30 });
const v216 = new F181(0, v91);
const v217 = v216?.constructor;
v217.length;
let v219;
try { v219 = new v217(v217); } catch (e) {}
v219.constructor = f92;
const v220 = v219?.constructor;
try { new v220(); } catch (e) {}
