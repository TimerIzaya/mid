const v3 = [512n,-1024n];
const v4 = [v3,v3,9223372036854775807n,-1024n];
const v5 = [512n];
class C7 {
    constructor(a9) {
        ("valueOf").localeCompare(a9, "valueOf");
    }
}
new C7(512n);
class C12 {
    static {
        new Int8Array(3938);
        function f17(a18, a19) {
            const o20 = {
            };
            return o20;
        }
        let v24;
        try {
        const t0 = -55569;
        v24 = t0(this);
        } catch (e) {}
        v5["reduceRight"](v24, v4);
        1000000000.0 * [-9.578589124662172e+307,0.5803164764357316,1e-15];
        gc();
    }
    8;
    [-1024n];
}
new C12();
new C12();
new C12();
new Uint8ClampedArray(4);
([586209.1308562411,9.273207833056233,-793.5051180378861,-88.02009084622205,1000.0,5.993768942190951e+307,0.6895260767593681,3.203916786355496,1.7976931348623157e+308,-1.0422896205696638e+308]).fill(-1073741824, -27205);
const v43 = new String(String);
class C44 {
    #p(a46, a47, a48, a49) {
    }
    constructor(a51, a52) {
        try {
            v43.#p();
        } catch(e54) {
        }
        function f55(a56, a57, a58, a59) {
            for (let i62 = 0, i63 = 10;
                (() => {
                    const v64 = i62 < i63;
                    class C65 {
                    }
                    const v66 = new C65();
                    class C67 {
                        static #e;
                        static {
                            try {
                                v66.#e = this;
                            } catch(e69) {
                            }
                        }
                    }
                    return v64;
                })();
                i63--) {
            }
            return a57;
        }
        f55();
        %OptimizeFunctionOnNextCall(f55);
    }
}
new C44();
