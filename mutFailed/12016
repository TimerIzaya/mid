new Uint32Array(12);
const v5 = BigInt64Array.length;
let v6;
try { v6 = new v5(BigInt64Array, 12, 12); } catch (e) {}
const v7 = new BigInt64Array(12);
64 % 64;
const v11 = new Float64Array(64);
Int32Array.BYTES_PER_ELEMENT;
-12;
const v16 = new v6(60);
try { v16.join(v7); } catch (e) {}
Uint16Array.e = Uint16Array;
new Uint16Array(7);
const v23 = new BigInt64Array(5);
try { v23.join(BigInt64Array); } catch (e) {}
try { v23.reduce(12); } catch (e) {}
let v26 = 919030334n;
v26++;
const o28 = {
};
v11.h = o28;
o28.c = o28;
const v30 = o28.propertyIsEnumerable.call(v26);
const v31 = v30 || v30;
v31 && v31;
