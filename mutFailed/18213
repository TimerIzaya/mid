function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = -576954689;
    } catch(e3) {
    }
    try {
        this.b = -576954689;
    } catch(e4) {
    }
}
new F0();
const v6 = new F0();
const v7 = new F0();
function f11() {
    return v7;
}
const o22 = {
};
o22.h = o22;
o22.h = o22;
const v24 = !o22;
const v25 = 1842642860 % v24;
v25 % v25;
const v27 = new WeakMap();
try { v27.delete(v24); } catch (e) {}
class C31 {
    static {
        try {
        const t0 = "boolean";
        t0(this);
        } catch (e) {}
    }
}
try { new C31(); } catch (e) {}
const v36 = ("isInteger")?.replaceAll;
const v43 = [-2147483647,64098,-9383,1024,129,-5];
[1000,-16,-38597,12,-3399,32508];
const v45 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v47 = new Uint32Array();
const v49 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v50 = [601759695];
const v51 = [1073741824,1073741823,1376142744,1073741825];
function f53(a54, a55, a56, a57) {
    function f59() {
        let v62 = Float64Array;
        v62 = a55;
        b = v50;
        v45.length;
        try {
            v51.forEach(a55);
        } catch(e65) {
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o67 = {
        };
        const o82 = {
            "c": -4294967297n,
            "c": v50,
            valueOf(a70, a71) {
            },
            1073741824: v47,
            "maxByteLength": -268435456,
            "b": -4294967295,
            [-4294967297n](a73, a74, a75, a76) {
                class C78 extends Date {
                    static get c() {
                    }
                }
                eval();
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v49,
            256: a57,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            6: -268435456,
        };
    }
    f59();
    const v85 = new Int8Array();
    v85.buffer.slice(2147483648);
    const v91 = new Int32Array(1024);
    v91[3];
    for (let v93 = 0; v93 < 10; v93++) {
    }
    %OptimizeFunctionOnNextCall(f59);
    let v95;
    try { v95 = v51["find"](..."find", a57, ...v50, ...v51, ...522675525n); } catch (e) {}
    v95 <= a56;
    return arguments;
}
for (let v97 = 0; v97 < 10; v97++) {
    f53();
}
%OptimizeFunctionOnNextCall(f53);
f53();
[-50328,-14,3,128,-11,64,-65535];
class C101 {
    [v43] = -1000000.0;
    constructor(a103, a104, a105, a106) {
        %VerifyType(a106);
        super[this];
    }
    g;
    c;
    #toString(a109, a110, a111) {
    }
    1 = 257n;
}
new C101(1073741825n, 1.0, 7.589647165982214);
const v113 = new C101(411585671n, -1000000.0, -1000000.0, 1.0);
new C101(v113, -1000000.0, 1.0);
/(?:a*)+bU\u0034xyz{1,32}/udi;
/vfoo|(bar|baz)|quux/gvds;
/JO/gvy;
class C120 {
    #m(a122, a123) {
        function f124() {
            return a123;
        }
        super[a123] = "f";
        %VerifyType(a123);
        return f124;
    }
    static c;
}
try { C120(); } catch (e) {}
const v126 = new C120();
const v127 = new C120();
function f128() {
    const v129 = [1000000.0,0.218433446981681,-5.0,-919787.2036172998,872389.6270716691];
    const v130 = v129.pop;
    try { v130(v129); } catch (e) {}
    return 128;
}
v127.constructor = f128;
v127?.constructor;
const v133 = new C120();
v133?.constructor;
class C135 {
    p(a137) {
        this.g ^= this[8];
    }
    static #n(a140, a141, a142, a143) {
    }
    7 = v133;
    #a = v127;
}
const v144 = new C135();
v144[7] = v144;
const v145 = new C135();
v145[7] = v145;
const v147 = [[],"f",v133,381717.6504737276];
[v126];
function F149() {
    if (!new.target) { throw 'must be called with new'; }
    this.e = F149;
    try { this.propertyIsEnumerable(); } catch (e) {}
}
new F149();
const v153 = new F149();
function f154() {
    return v47;
}
function f155(a156) {
    function F157(a159, a160, a161) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.h = f154;
        } catch(e162) {
        }
    }
    new F157(381717.6504737276, v7, v43);
    new F157(7.589647165982214, v6, v50);
    new F157(-1000000.0, v7, a156);
}
Object.defineProperty(v153, "e", { writable: true, configurable: true, get: f154, set: f155 });
function F166(a168, a169) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(a168, "e", { configurable: true, enumerable: true, value: -7 });
    const v170 = a169?.__lookupGetter__;
    try { v170(); } catch (e) {}
    try { this.constructor(F166, this); } catch (e) {}
    a168.e = a168;
}
F166.arguments = F166;
new F166(v153);
("Hyo9")[1];
const t193 = "at";
t193[1] = "at";
([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap?.constructor;
const v180 = [-4.202468609045087];
try { v180.every(v147); } catch (e) {}
[0.8434386161503777];
("4i")?.toWellFormed;
const t199 = "4i";
t199[1] = "4i";
const t203 = "RpXR";
t203[3] = "RpXR";
const t205 = "RpXR";
t205[1] = "RpXR";
("c")?.toLocaleUpperCase.length;
class C190 {
    constructor(a192) {
        function f193(a194, a195) {
            Math.atan2([], -40875);
            return C101;
        }
        a192.toString = f193;
        ("valueOf").localeCompare(a192, "valueOf");
    }
}
function f201() {
    return f53;
}
Object.defineProperty(C190, Symbol.toPrimitive, { configurable: true, get: f201 });
const v204 = new C190();
const t223 = v204.constructor;
new t223(C190);
try { new v36("998423439", C31); } catch (e) {}
9 >> 9;
try { Uint32Array.from(15n); } catch (e) {}
const v216 = new Uint32Array(2432);
const o217 = {
    ...v216,
};
const v219 = 9007199254740991n * 9007199254740991n;
v219 * v219;
Math.sin(-5345);
function f224() {
    const o229 = {
        [-1000000.0]: 0.0,
        set e(a228) {
        },
    };
    return f224;
}
f224.caller = f224;
const v230 = f224();
const v231 = f224();
class C232 {
    static [f224] = v231;
}
try { C232.bind(v230); } catch (e) {}
