class C3 {
    static #o(a5) {
        const t2 = "test";
        t2["test"] = this;
        const v6 = super.g;
        a5[1354089195] = a5;
        a5[v6] = a5;
        C3 ** a5;
        var g = a5;
        try { a5(a5, this, this, this); } catch (e) {}
        a5?.e;
        ("number")[a5];
        %VerifyType(v6);
        return "test";
    }
    0;
    128 = "test";
}
const v11 = new C3();
const v12 = v11?.__lookupSetter__;
try { new v12("test"); } catch (e) {}
const v14 = new C3();
const t22 = v14[128];
const v16 = new t22();
const v18 = new Set();
const v19 = v18?.constructor;
try { new v19(); } catch (e) {}
try { new BigInt64Array(BigInt64Array, C3, C3); } catch (e) {}
new BigInt64Array(5);
new v16(62);
const v30 = new Float64Array(1247);
v30[30];
function f32() {
    return f32;
}
let v35;
try { v35 = v30.toSorted(f32); } catch (e) {}
v35[475] = v35;
try {
    f32().length;
} catch(e38) {
}
for (let v39 = 0; v39 < 25; v39++) {
    v39 !== v39;
    const t43 = "M";
    t43["p" + v39] = v39;
}
Object.defineProperty([8,-65537,9007199254740991,-268435456,4294967296,8,44846,-13], 10n, { get: f32, set: f32 });
