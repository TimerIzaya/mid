const v2 = new Int32Array(256);
new Uint8Array(2200);
const v8 = new Uint16Array(8);
class C9 extends Uint8Array {
    static #b = Uint16Array;
    constructor(a11, a12, a13, a14) {
        super(8);
        %VerifyType(this);
    }
    static #e = 8;
    a;
    #c;
    256 = v8;
    1 = Int32Array;
}
function F15() {
    if (!new.target) { throw 'must be called with new'; }
    for (let v17 = 0; v17 < 1000; v17++) {
        const v20 = ("p" + v17).fontcolor();
        let v21;
        try { v21 = v20.trimLeft(this); } catch (e) {}
        v21[12];
    }
}
new F15();
new C9(256, 256, 8, 256);
new C9(8, 8, 8, Uint8Array);
new C9(256, 2200, 256, v2);
("p" + 8).fontcolor(8);
const v31 = [];
class C32 {
    constructor(a34) {
        function* f35(a36, a37) {
            yield* v31;
            return a36;
        }
    }
}
const v38 = new gc();
eval(v38);
