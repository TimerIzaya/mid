new Float32Array(9223372036854775807);
class C7 {
}
const v8 = [536870887,-42204,-17288903,-3,9007199254740991,7];
function f9(a10, a11) {
    return a10;
}
f9(v8);
function f13() {
    return f13;
}
const v14 = /(?:a*)+q(?<a>.)/guds;
for (let v15 = 0; v15 < 5; v15++) {
    class C17 extends Map {
    }
    class C18 {
        constructor(a20, a21) {
            try { this.toLocaleString(); } catch (e) {}
            for (let v23 = 0; v23 < 25; v23++) {
                for (let v24 = 0; v24 < 10; v24++) {
                    const v25 = [601759695];
                    const v26 = [1073741824,1073741823,1376142744,1073741825];
                    try { v26["find"](..."find", undefined, ...v25); } catch (e) {}
                }
                const v32 = new Int8Array(1159);
                const v34 = new Uint8ClampedArray();
                const v35 = v32[2];
                try { v34["forEach"](v35); } catch (e) {}
            }
        }
    }
    new C18(C18, C18);
    f13();
}
URIError(Float64Array);
function f43(a44) {
    const v45 = a44?.constructor;
    try { v45(a44, f13); } catch (e) {}
    const o56 = {
        get d() {
            return a44;
        },
        __proto__: v14,
        [9223372036854775807]: 9223372036854775807,
        [v8](a49, a50, a51) {
            super[9223372036854775807];
        },
        n(a54, a55) {
            return 4096;
        },
    };
    return o56;
}
for (let i59 = 0, i60 = 10;
    i59 < i60;
    (() => {
        i60--;
        class C65 {
            constructor(a67, a68) {
                const o70 = {
                    84: arguments,
                };
            }
        }
    })()) {
    for (let v73 = 0; v73 < 50; v73++) {
        f43(v14);
    }
}
const v75 = new Array(4096);
function f76(a77, a78, a79) {
    const o88 = {
        "c": a79,
        "g": 9007199254740990,
        "f": Array,
        __proto__: a77,
        ...v75,
        9: a78,
        "h": v75,
        10: 12,
        [9223372036854775807]: 12,
        [4096]: a77,
        n(a81, a82) {
        },
        "h": 4096,
        o(a84) {
            const o86 = {
            };
            return gc(o86);
        },
    };
    return o88;
}
f76(f76(4096, 4096, 4096), 9007199254740990, 12);
f76(Array, 4096, 12);
let v92 = 0;
do {
    v92++;
} while ((() => {
        const v97 = v92 < 9;
        class C98 {
        }
        return v97;
    })())
function f104(a105) {
    class C106 {
        set g(a108) {
            class C111 {
                constructor(a113, a114) {
                    this[-2147483648] >>>= -7;
                    for (let v115 = 0; v115 < 25; v115++) {
                    }
                }
            }
            new C111();
        }
    }
    return C106;
}
const o124 = {
    "maxByteLength": 2119,
};
new SharedArrayBuffer(255, o124);
const v130 = new Map();
v130.constructor;
