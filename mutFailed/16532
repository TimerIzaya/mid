const v5 = new Uint16Array(128);
const v8 = new Int16Array(6);
const v11 = new Uint32Array(86);
class C12 extends Int16Array {
    m(a14, a15) {
        a14 = 1.6286064980524535e+308;
        return this;
    }
    constructor(a20, a21, a22) {
        super(a20);
        try { a20(v5, a22, a20, v8, a21); } catch (e) {}
        this["pCk1"];
        const o28 = {
        };
        new Proxy(v8, o28);
    }
}
new C12(Uint32Array, 4.2127286749195657e+307, 1.6286064980524535e+308);
new C12(6, 4.2127286749195657e+307, 1.6286064980524535e+308);
new C12(v11, 1.6286064980524535e+308, 1.6286064980524535e+308);
function F34() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = -2147483647;
    } catch(e37) {
    }
}
const v38 = new F34();
const v39 = new F34();
const v40 = new F34();
function F41(a43) {
    if (!new.target) { throw 'must be called with new'; }
    const v44 = a43?.constructor;
    try { new v44(); } catch (e) {}
    try {
        this.g = a43;
    } catch(e46) {
    }
}
F41.arguments;
const v49 = Symbol.iterator;
const o58 = {
    [v49]() {
        let v51 = 10;
        const o57 = {
            next() {
                v51--;
                const v55 = v51 == 0;
                const o56 = {
                    "done": v55,
                    "value": v51,
                };
                return o56;
            },
        };
        return o57;
    },
};
o58.c = o58;
const t59 = 4.2127286749195657e+307;
const v59 = new t59(v40);
const v60 = new F41(v39, v59);
function f61() {
    return f61;
}
f61.prototype;
Math[256];
try { new BigInt64Array(v40, BigInt64Array, v60); } catch (e) {}
new BigInt64Array(128);
new Uint16Array(3171);
new Uint16Array(9);
let v75 = 7;
v75--;
function f79(a80, a81) {
    f79 = a81;
}
new Promise(f79);
const v84 = f61++;
Math.cbrt(v84);
Math.asin(v84);
const v87 = new F41(v39);
function F88(a90, a91, a92) {
    if (!new.target) { throw 'must be called with new'; }
    const v93 = this?.__lookupGetter__;
    try { new v93(Uint16Array); } catch (e) {}
    a91.a = a91;
    try {
        this.a = v59;
        let v96;
        try { v96 = new Symbol(); } catch (e) {}
        const v97 = v96.split;
        Symbol.for(v97.description);
        v87[v97];
        const v102 = typeof a92;
        v102[0] = v102;
        ("Qhn")[0];
        v102 === "Qhn";
    } catch(e106) {
    }
    try {
        this.c = v40;
    } catch(e107) {
    }
}
F88.arguments = Uint16Array;
new F88(v59, v40, v38);
new F88(v59, v39, v60);
new F88(v59, v40, v38);
[65536,616125741,39049,129];
([536870888,2147483649])[1];
[1723484275,-249128090];
[];
class C116 {
    constructor(a118) {
        this.constructor;
        const v121 = new WeakSet();
        try { v121.add(a118); } catch (e) {}
        for (let v123 = 0; v123 < 5; v123++) {
            v123 >>> v123;
        }
        a118++;
    }
}
new C116();
new C116(C116);
