const v0 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v1 = [601759695];
const v2 = [1073741824,1073741823,1376142744,1073741825];
function f4(a5, a6, a7, a8) {
    let v11;
    try { v11 = v2["find"](..."find", "find", ...v1, ...v2, ...522675525n); } catch (e) {}
    v11 <= a7;
    return a6;
}
f4(v1, v0, 522675525n, v0, 522675525n);
const v18 = new BigInt64Array(3216);
new Int8Array(3331);
const v24 = new BigUint64Array(4096);
for (let v26 = 0; v26 < 51; v26++) {
    f4(v1, v26, false, v26);
}
f4(v24, 3331, v18, 3216);
%PrepareFunctionForOptimization(f4);
BigInt64Array(v24, 3331, v18, 3216);
f4(v24, 3331, v18, 3216);
%OptimizeFunctionOnNextCall(f4);
f4(v24, 3331, v18, 3216);
function f34() {
    return 36924;
}
function f35(a36, a37, a38, a39) {
    const o47 = {
        __proto__: a38,
        ...a36,
        [a38](a41, a42, a43) {
            return "function";
        },
    };
    return o47;
}
f35(-65536, 36924, f34);
