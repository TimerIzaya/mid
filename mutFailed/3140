const v0 = [];
const v3 = new Float32Array(0);
const v6 = new Uint8ClampedArray(129);
for (const v9 in v6) {
    const v10 = v3[v9];
    v10[v9] = v10;
}
try {
    v0.f = Float64Array;
} catch(e11) {
}
const v12 = new Float64Array(0);
const v13 = [-6,-9223372036854775807,257,3492];
let v14 = [-65537,-16,-12357,-13];
const v15 = [1285253984,1739622419,268435441,268435439,-8,-1604792230,128,-4294967297,776297613];
function f21(a22) {
    class C23 {
        set g(a25) {
            const v26 = this[a22];
            v13[4] = v26;
            v0[2465563368];
            v6.byteLength &= v26;
            v3[Symbol.unscopables];
        }
    }
    return C23;
}
-(v12 >>> v3);
v14 >>= v15;
try {
    v3.fill(-1000000000.0);
} catch(e35) {
}
