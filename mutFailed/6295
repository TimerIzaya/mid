const v0 = [];
class C1 {
    static o() {
        let v3 = arguments;
        super[this] = v0;
        [,,v3,...v3] = v0;
        return v0;
    }
    static #a;
    b = v0;
    static [v0] = v0;
    static 9;
}
class C4 {
}
const o5 = {
    __proto__: C4,
};
new C1();
for (let i9 = 0; i9 < 6;) {
    const t20 = -15n;
    var c = t20(v0, i9);
}
const v18 = new C1();
const v19 = new C1();
function f20(a21) {
    const o30 = {
        set b(a23) {
            super.h ^= a23;
            try { (-12n).getTime(-12n, -816409267); } catch (e) {}
            -253026077 % -816409267;
            try { a23(a21, a23); } catch (e) {}
            a21[173] = a23;
        },
        [C1]: a21,
        "f": o5,
        ...a21,
        [-2]: v19,
        "a": C1,
        __proto__: C1,
        ...v18,
    };
    return o30;
}
const v31 = f20(v19);
RegExp(RegExp);
const v35 = new Date();
function F36(a38) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = v35;
    this.g = Date;
}
const v39 = new F36();
function f40(a41, a42, a43, a44) {
    const o45 = {
        "deleteProperty": Date,
        "ownKeys": Date,
    };
    return v39;
}
const v46 = f20(v18);
f20(v19);
function f49() {
    Math.cos(Math);
    return Math;
}
f49();
%OptimizeFunctionOnNextCall(f49);
class C52 {
    #c = v31;
    get c() {
        3 >> v46;
        +this;
        ~-6;
        ~this;
        return v0;
    }
}
new C52();
new C52();
new C52();
for (let i = 0; i < 5; i++) {
    for (const v65 in "5amlK") {
        ("5amlK")[v65];
    }
}
