const v3 = [2,237513775,64,700106456,-2127435896,-8,7,1003504260,6];
const v4 = [-544968798,64,-2072538256];
const v5 = [10000,4294967297,1659502263,819984107];
class C6 {
    b;
    c = v5;
    constructor(a8, a9, a10, a11) {
        v5.length;
    }
    a = -13n;
    1073741823;
    3361349989 = 3764n;
    d = 65536n;
    3;
    2147483649 = v4;
}
const v13 = new C6(v3, v5, 65536n, 3764n);
let v14 = new C6(v13, -13n, 65536n, 3764n);
const v15 = new C6(v4, v14, 3764n, 3764n);
const v16 = /Mq(?:a+){0,0}/gudimy;
const v17 = /a[a]/gums;
/J[a*b\xed\xa0\x80a(?=bbb|bb)cra\D?]/uy;
const v19 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f21() {
    var e = v5;
    v14 <<= C6;
    return v19;
}
Uint32Array.constructor = f21;
const v22 = new Uint32Array();
let v23 = -4294967297n;
const v24 = v23--;
const v25 = [601759695];
const v26 = [1073741824,1073741823,1376142744,1073741825];
function f27(a28, a29, a30, a31) {
    a28[Symbol.toPrimitive] = f21;
    const v34 = a28.constructor;
    v34[Symbol.toPrimitive] = Symbol;
    let v37;
    try { v37 = v34(); } catch (e) {}
    function f38() {
        function f39() {
            return v17;
        }
        return f39;
    }
    function f43(a44) {
        const o48 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o48);
    }
    Object.defineProperty(v37, "constructor", { writable: true, get: f38, set: f43 });
    const v50 = v37?.constructor;
    v50[Symbol.toPrimitive] = Symbol;
    let v53;
    try { v53 = v50(f27, a28, v19, Uint32Array, v34); } catch (e) {}
    function f54() {
        const v56 = ("Vre").charAt(v53);
        v56.blink();
        let v58;
        try { v58 = ("Vre").codePointAt(v19); } catch (e) {}
        v58 % v58;
        let v60 = Float64Array;
        v60 = a29;
        b = v19;
        let v61 = v19.length;
        v61++;
        try {
            v26.forEach(a29);
        } catch(e64) {
            e64.message = e64;
        }
        const o75 = {
            "c": v23,
            valueOf(a66, a67) {
                return v37;
            },
            1073741824: v22,
            [v23](a69, a70, a71, a72) {
                eval(v56);
            },
        };
        return v26;
    }
    f54();
    const v78 = Array(v50);
    try { v78.findLast(); } catch (e) {}
    const v81 = Int8Array.of();
    let v82;
    try { v82 = v81.every(v81, a28, v81, a29, Array); } catch (e) {}
    const v83 = new Int8Array(v82);
    const v85 = v83.buffer.slice();
    v85.constructor = Symbol;
    const v86 = v85.constructor;
    try { v86(v85, v82, v24, v81, a28); } catch (e) {}
    const v89 = new Int32Array(v86, v34, v34);
    v89.lastIndexOf(a28, a30);
    try { v26["find"](..."find", a31, ...v25, ...v26); } catch (e) {}
    return v23;
}
function f93(a94, a95) {
    const v96 = v16 >= v15;
    v96 ? v16 : v15;
    return v96;
}
f27[Symbol.toPrimitive] = f93;
for (let v100 = 0; v100 < 10; v100++) {
    f27(v22);
}
%OptimizeFunctionOnNextCall(f27);
f27(Uint32Array);
