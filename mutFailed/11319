const v2 = new Float32Array(1);
16 ^ 16;
Uint8Array.length;
const v7 = new Uint8Array(16);
const v10 = new Uint16Array(2809);
class C11 extends Uint16Array {
    static #a = v2;
    static n(a13, a14, a15, a16) {
        try {
            v2.#a;
        } catch(e18) {
        }
        return Uint16Array;
    }
    static #f;
    #h = v7;
}
C11.b = C11;
const v19 = new C11();
let v20;
try { v20 = v19.values(); } catch (e) {}
const v21 = new C11();
const v22 = new C11();
const v23 = [-9007199254740992];
function f24(a25) {
    const v27 = [2809,a25];
    Reflect.apply(v21.subarray, v10, v27);
    return v21;
}
/[\cA]a?a?/vd;
function f34(a35, a36, a37, a38) {
    const o39 = {
        "c": Uint8Array,
        ...a37,
        __proto__: a37,
    };
    return o39;
}
const v40 = f34(v22, v20, v22, v22);
f34(v22, v20, v22, v19);
f34(v22, v21, v22, Uint8Array);
const v43 = /\p{Script_Extensions=Greek}/im;
const v45 = [f34,v19];
delete v40[Reflect.apply(v7.forEach, C11, v45)];
/\c!/i;
const v50 = f24?.toString;
try { new v50(); } catch (e) {}
v23.constructor = f24;
const v52 = [536870888,652670349,268435440,9223372036854775807];
class C53 {
    #d;
    d = v43;
    4294967295 = v2;
    #b = -1.1901064983257381;
    #h;
    constructor(a55, a56, a57) {
        a55[3];
        a57.constructor = f24;
        const v59 = a57.concat();
        function f60(a61) {
            a61[1];
            class C63 {
                static {
                    try { new this(); } catch (e) {}
                    do {
                        let v67 = 0;
                        while (v67 < 10) {
                            super.h;
                            v67++;
                        }
                    } while ((() => {
                            const v74 = 0 < 0;
                            v74 || v74;
                            return v74;
                        })())
                }
            }
            try { new C63(); } catch (e) {}
        }
        Object.defineProperty(v59, 1, { configurable: true, set: f60 });
        v59[1] = v59;
    }
}
C53.length = C53;
const v77 = new C53(v52, v23, v23);
const v78 = v77?.constructor;
try { new v78(Float32Array, Float32Array, v77); } catch (e) {}
