function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = -0.5596633379849596;
    } catch(e6) {
    }
    try {
        this.e = 146.60165004232863;
    } catch(e7) {
    }
}
const v8 = new F3(1000000000.0);
const v9 = new F3(-0.5596633379849596);
function f10(a11, a12) {
    Math.round(4294967296);
    a12 - (a12 >> a12);
    Math.sign(4294967296);
    return v9;
}
v9[Symbol.toPrimitive] = f10;
const v23 = new F3(1000000000.0);
class C24 {
    toString(a26, a27, a28, a29) {
        1000000000.0 >> -0.5596633379849596;
        try {
            v8.valueOf = a26;
        } catch(e31) {
        }
        return 146.60165004232863;
    }
    static [v9];
    static #n(a33, a34, a35) {
        const v37 = [146.60165004232863,Reflect,v8];
        const v38 = Reflect.construct(a34, v37, F3);
        function F39(a41, a42, a43) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.h = C24;
            } catch(e44) {
            }
            try {
                this.b = a35;
            } catch(e45) {
            }
        }
        new F39(-0.5596633379849596, a34, a35);
        new F39(F39, v9, v37);
        new F39(v38, F3, this);
        try {
            super.toString(1000000000.0);
        } catch(e50) {
        }
        try {
            new F3(-2.220446049250313e-16);
        } catch(e53) {
        }
        return a33;
    }
}
const v54 = new C24();
const v55 = new C24();
new C24();
function f57(a58, a59, a60, a61) {
    const o78 = {
        m(a63, a64) {
            let v65;
            try { v65 = a64(v55); } catch (e) {}
            async function f66(a67, a68, a69, a70) {
                a69 * v65;
                try { a58.filter(a63, a70, v55, v54); } catch (e) {}
                return await a69;
            }
            f66(a64, v55, v55, a60);
            return a63;
        },
        "g": 1000000000.0,
        "c": -0.5596633379849596,
        ...v9,
        "d": -0.5596633379849596,
        __proto__: v55,
    };
    return o78;
}
f57(v9, v54, 146.60165004232863, f57(v54, v55, 1000000000.0, v23));
f57(v55, v23, -0.5596633379849596, v23);
new Int8Array(1073741823);
function f86(a87, a88, a89, a90) {
    const v91 = new Int8Array();
    const v92 = v91.buffer;
    v92.constructor = Array;
    return v92.slice(1073741823, a88);
}
try { f86(); } catch (e) {}
