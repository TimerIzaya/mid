class C3 {
    #g;
    static #toString(a5, a6) {
        const o11 = {
            "type": "minor",
            ...-10,
            get g() {
                return "async";
            },
            "execution": "async",
            "type": "minor",
        };
        gc(o11);
        return "async";
    }
    static c;
    1855;
    constructor(a14, a15, a16) {
        super();
        const o20 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o20);
    }
}
function F23(a25) {
    if (!new.target) { throw 'must be called with new'; }
    const v26 = this.constructor;
    v26.bind();
    class C28 {
    }
    const v29 = new C28();
    const v30 = v29.constructor;
    let v31;
    try { v31 = v30(v30, v30); } catch (e) {}
    function f32() {
        const v34 = ("D")[0];
        let v35;
        try { v35 = v34.substring(v31); } catch (e) {}
        return v35.charCodeAt();
    }
    f32();
    try { new v26(); } catch (e) {}
}
new F23();
new F23();
new C3();
new C3();
function f43(a44, a45, a46, a47) {
    const o48 = {
    };
}
new Uint8Array();
new C3();
-(536870912n << 536870912n);
class C61 {
    static #a;
}
