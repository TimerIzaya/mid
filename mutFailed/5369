class C3 {
    static p(a5, a6) {
        268435456 === 6;
        %VerifyType(a5);
        let v15;
        try { v15 = a6(a6, a6); } catch (e) {}
        try { new v15(v15, v15, 331.9568922259648, a6); } catch (e) {}
        try {
            this.fuck(this, true, /a+?(?:a+)*xyz{0,1}/ui, 6);
        } catch(e20) {
        }
        return 536870912;
    }
}
new C3();
new C3();
new C3();
const v25 = [...[-5,-44869,9007199254740991,-65537,4294967296,127,0]];
v25 % v25;
const o30 = {
    "execution": "async",
    "type": "minor",
};
gc(o30);
[-3,2145161996,1073741825,-1,-14,725193120,9007199254740991,1,-128];
const v33 = [1024,639074864,127,-3];
class C34 {
    4;
    #f;
    #e;
    897 = v33;
    get d() {
        try {
            const o40 = {
            };
            this.fuck(undefined, o40, /(?<a>)[1(\2)(\1)]/gvdis);
        } catch(e43) {
        }
        return this;
    }
}
new C34();
new C34();
new C34();
function F47() {
    if (!new.target) { throw 'must be called with new'; }
    function f49(a50) {
        for (let i = 0; i < 10; i++) {
            ["object"];
        }
    }
    Object.defineProperty(this, "c", { enumerable: true, set: f49 });
    this.c = -28191;
}
new F47();
