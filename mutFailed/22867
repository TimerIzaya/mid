const v0 = /jS[a-zA-Z0-9]A*/udiy;
const v1 = /(?:a{5,1000000}){3,1000000}*/gvs;
const v2 = /na(?:b)/vsy;
const v3 = [v1,v2,v0];
const v4 = [v3,v1,v1,v3];
const v5 = [v0,v4,v3];
function f6(a7, a8, a9, a10) {
    const o35 = {
        [v1](a12, a13) {
            super.g;
            a7[v0] += --a13;
            function F17(a19, a20, a21) {
                if (!new.target) { throw 'must be called with new'; }
            }
            const v22 = new F17();
            for (let i = 0; i < 5; i++) {
                v22.toString = Array;
            }
            return a10;
        },
        1195: a8,
        "b": v4,
        m(a24, a25, a26) {
            delete a9[3];
            const o30 = {
                "maxByteLength": 257,
            };
            const v32 = new SharedArrayBuffer(257, o30);
            new DataView(v32);
            return o30;
        },
    };
    return o35;
}
const v36 = f6(v3, v3, v5, f6);
f6(v5, v4, v5, v2);
f6(v5, v4, v4, v5);
class C39 extends f6 {
    constructor(a41, a42) {
        super(v4, v5, v4, a42);
        f6(v3, v5, v4, v1);
        super.b;
    }
    10000;
    static 268435440 = f6;
    #e;
    get e() {
        h = v36;
        Object.defineProperty(v1, -this, { writable: true, configurable: true, get: f6, set: f6 });
        try {
            v36.#e = v0;
        } catch(e47) {
        }
        return v5;
    }
}
new C39(v2, v0);
new C39(v1, v2);
new C39(v0, v0);
class C51 {
    static {
    }
}
for (let v53 = 0; v53 < 25; v53++) {
    [601759695];
    const v55 = [1073741824,1073741823,1376142744,1073741825];
    function f56(a57, a58, a59, a60) {
        for (let v62 = 0; v62 < 5; v62++) {
            try {
                arguments.g = v62;
            } catch(e63) {
            }
        }
        function f64() {
            return a57;
        }
        const v66 = new Int8Array();
        class C67 {
        }
        function f68(a69, a70) {
        }
        f68();
        v66.buffer;
        try { v55["find"](); } catch (e) {}
        const o77 = {
            valueOf() {
            },
            get d() {
            },
        };
    }
    for (let v78 = 0; v78 < 5; v78++) {
        f56();
    }
}
const v82 = new Map();
function f83(a84, a85) {
    const o92 = {
        "a": a85,
        [v82]: Map,
        [2221](a87, a88, a89) {
        },
        ...v82,
        [a85]: Map,
        valueOf(a91) {
        },
    };
    return a85;
}
