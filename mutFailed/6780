const o1 = {
};
Symbol.iterator;
function f4() {
    const o9 = {
        ..."D",
        ..."D",
        "c": "D",
        "h": "getHours",
        104: "D",
        get e() {
            return "getHours";
        },
        "d": "getHours",
        1: f4,
        "g": "D",
    };
    return o9;
}
const t19 = f4();
const v11 = t19();
f4();
new Int8Array(10);
new BigUint64Array(3426);
const v21 = new Int16Array(64);
new Int32Array(v21);
new Float32Array(128);
class C26 extends Int8Array {
    static {
        super[this];
    }
    static {
    }
    static 9;
    [BigUint64Array];
    toString(a31, a32, a33, a34) {
        [1073741824,268435456,10,536870887,-1403419975,-128,6,-65537,917315235];
        [3,256,48528,-62812,6,268435440,-32359,4];
        return [10,-55232,-21156,7,7,-536870912,4294967297,-2147483649];
    }
    c;
    static g;
    #c;
    static [BigUint64Array];
    f;
}
new C26();
new C26();
new C26();
function f41() {
    return f41;
}
async function f42(a43, a44, a45) {
    return a43;
}
for (let v46 = 0; v46 < 5; v46++) {
}
const v48 = new Map();
v48.set(v11);
v48.constructor = f41;
const t60 = v48.constructor;
t60.e = f41;
const o51 = {
};
const v54 = new BigInt64Array(9);
v54.includes(o51);
