const v3 = ["-700602115","-700602115","p","p"];
v3.g = v3;
const v4 = ["-700602115",v3,"-700602115",v3];
["p"];
let v7 = -2;
v4 * "-268435456";
let v9 = Math.abs("-268435456");
const v11 = +(v9--);
const v12 = !v11;
v12 || "-268435456";
v7 % "p";
v7++;
const v16 = "-268435456" % v4;
const v18 = -7 & -7;
const v19 = [];
try { v19.findLast(v9); } catch (e) {}
function f22(a23, a24, a25) {
    a25++;
    const o27 = {
        "a": a24,
        [a25]: a23,
    };
    return a24;
}
f22(v19, v19, 1073741824);
const v29 = f22(f22);
try { new Uint32Array(v12, v19, v12); } catch (e) {}
1073741825n ^ 1073741825n;
const v37 = v3 & v29;
~"p";
const o39 = {
};
o39.b = o39;
try {
    o39.f = -7;
} catch(e40) {
}
try {
    const o41 = {
    };
    o41.a = o41;
    o41.f = -7;
    o41.h = "-700602115";
} catch(e42) {
}
try {
    const o43 = {
    };
    o43.h = o43;
    o43.f = -7;
    o43.h = "-700602115";
    o43.b = v37;
} catch(e44) {
}
try {
    const o45 = {
    };
    o45.h = o45;
    o45.f = -7;
    o45.h = "-700602115";
    o45.b = Uint32Array;
} catch(e46) {
}
const v47 = new Uint32Array(Uint32Array, Uint32Array);
const v50 = new Uint16Array(2);
v50[1] = v50;
const v52 = new Uint32Array(v50);
65537 >>> 65537;
function f56(a57, a58) {
    return 1073741824;
}
f56.name;
const o65 = {
    set f(a63) {
        Object.defineProperty("function", "length", { writable: true, configurable: true, set: f56 });
        try { v29(v16, this, v47, v11); } catch (e) {}
    },
    ..."-700602115",
    "type": "function",
};
const v66 = new v18(f56, o65);
const v67 = v66.terminateAndWait();
v66.terminateAndWait(v67, Worker, v67, v67);
const v72 = 536870912n << 536870912n;
Object.defineProperty(v19, 65537, { writable: true, value: [46733,-268435456] });
const v75 = new Uint32Array();
try { new Float64Array(-1n, v52, -1n); } catch (e) {}
Float64Array > v75;
-v72;
