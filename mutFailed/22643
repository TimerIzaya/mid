function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    a8 + a8;
    a9 - -9007199254740990;
    a10 & a10;
    try {
        a8.g = -9223372036854775808n;
    } catch(e15) {
    }
    try {
        this.e = 1073741825;
    } catch(e16) {
    }
}
new F6(1073741825, 40072n, -9007199254740990, -9007199254740990, 9223372036854775807n, F6);
new F6(1073741825, 40072n, 1985046630, -9007199254740990);
new F6(1985046630, -9223372036854775808n, -9007199254740990, 1985046630);
[-989.3072090008433,0.5489325615664848,-7.0790074357243915,248.3845334315597];
[252656.78534446633,Infinity,-929.4810300455794,0.6284882730309735,4.0];
const v22 = [-5.0,0.5504616272963738];
const v23 = [2147483649,9,48035];
function f24(a25, a26, a27, a28) {
    try { a28.findLastIndex(v22); } catch (e) {}
    function f30() {
        const v31 = v23.global;
        const v32 = v31 >>> v31;
        const v33 = v32 % v32;
        ~v33;
        const v35 = v33 & v33;
        v35 - v35;
        return f24;
    }
    const v37 = f24();
    v37.length = v37;
    %OptimizeFunctionOnNextCall(f24);
    return f30;
}
const v39 = f24(v23, f24(v23, f24, f24, v23, v22), f24, f24);
v39.d = v39;
f24(f24, f24, v39, f24, 1073741825).name;
