let v4 = 16;
v4--;
const v7 = [0.0,-2.220446049250313e-16];
try {
    v7.__proto__ = v7;
} catch(e8) {
}
let v9;
try { v9 = v4(); } catch (e) {}
const v10 = [Infinity];
const v11 = [709789.1356575198,-1000.0,-1000000000.0];
v11[1] = v11;
const v12 = [10,1073741824,-10,-15419,-4096,75934912,268435439,128,-65535];
const v13 = [483982234,16,257];
const v14 = [257,32819,-21945,4];
try { ("bigint").link(v10); } catch (e) {}
function f19() {
    return f19;
}
f19.b = f19;
class C20 extends f19 {
}
C20.prototype = C20;
const v21 = v12[536870888];
v13[160] ||= -1020530995;
try {
    v14.__proto__ = "bigint";
} catch(e22) {
}
class C23 {
    constructor(a25, a26) {
        const v27 = /W(jy2)/udy;
        v27.flags;
        let v31;
        try { v31 = v27.exec(v21); } catch (e) {}
        const v33 = v11["indexOf"](v7, v31);
        v33 >>> v33;
        let v35 = v7[v9];
        v35 **= Uint8Array;
        new Uint8Array();
        try { new Uint32Array(v12, v12, v12); } catch (e) {}
        new Uint32Array();
        function f40(a41, a42, a43, a44) {
            a41.length = a41;
            a42++;
            a43 & a43;
            return f19;
        }
        for (let v47 = 0; v47 < 625; v47++) {
            -v47;
            f40(Uint8Array, 2, v47);
            try {
                a25 &= C20;
            } catch(e50) {
            }
        }
    }
}
new C23(f19, C20);
const v52 = new C23();
const v53 = v52?.constructor;
try { new v53("o", "o"); } catch (e) {}
