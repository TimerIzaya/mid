class C3 {
    #d = 3.8810218404005856e+307;
    set e(a5) {
        const v7 = ["1g",[3.8810218404005856e+307,"1g",this]];
        [3.8810218404005856e+307,v7,v7,v7];
        super.c &= a5;
    }
    static set d(a10) {
        const v12 = Symbol.iterator;
        const o21 = {
            [v12]() {
                let v14 = 10;
                const o20 = {
                    next() {
                        v14--;
                        const v18 = v14 == 0;
                        const o19 = {
                            "done": v18,
                            "value": v14,
                        };
                        return o19;
                    },
                };
                return o20;
            },
        };
    }
}
try { new C3(); } catch (e) {}
let v23 = new C3();
const v24 = new C3();
v24.undefined = C3;
const v25 = new C3();
const v26 = v25?.constructor;
try { new v26(); } catch (e) {}
class C28 {
    get f() {
        super[this] = this - v24;
        try { this(v23, this, "1g", this); } catch (e) {}
        return v24;
    }
    #a;
    constructor(a33, a34, a35, a36) {
        function f37(a38, a39) {
            function f40() {
                for (let [i43, i44] = (() => {
                        switch (f40) {
                        }
                        return [0, 10];
                    })();
                    i43 % i43, i43 < i44;
                    i43++, i44--) {
                }
                return f40;
            }
            return -756.7554558637137;
        }
        a34.toString = f37;
        a36[Symbol.toPrimitive] = f37;
        const v55 = a35?.constructor;
        try { new v55(); } catch (e) {}
        a36.e;
        super[a35] = a33;
        [v23,,,v23] = "1g";
        a34[super.c] = C3;
    }
    static #e = v25;
}
const v59 = new C28(v25, v24, v24, v24);
function f60() {
    return v25;
}
function f61(a62) {
    v24 === a62;
}
Object.defineProperty(v59, "e", { configurable: true, enumerable: true, get: f60, set: f61 });
v59.length = v59;
const v64 = new C28(v23, v24, v25, v59);
v64.length;
const v66 = new C28(v24, C28, C28, v64);
class C67 {
    static g;
    toString(a69, a70) {
        new Float64Array(0);
        new BigInt64Array(3685);
        new BigUint64Array(2);
        return 3685;
    }
    g = v66;
}
new C67();
new C67();
const v82 = new C67();
v82.e = v82;
v82.e = v82;
const v83 = [];
function f84() {
    const v86 = Symbol.asyncIterator;
    v64[v86];
    return v86;
}
v83.valueOf = f84;
try { v83.toReversed(); } catch (e) {}
function f89() {
    -v83;
    return f89;
}
%OptimizeFunctionOnNextCall(f89);
f89();
