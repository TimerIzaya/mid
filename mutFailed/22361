function f3() {
    return -11553n;
}
class C4 extends f3 {
    static #b = 257n;
    static #e;
    static #d;
    #h = 257n;
    b;
    p(a6, a7) {
        a6[f3] = f3;
        new BigUint64Array(256);
        new Uint8Array(4096);
        new Int32Array(16);
        return -11553n;
    }
}
const v17 = new C4();
const v18 = new C4();
const v19 = new C4();
function f20() {
    return 257n;
}
function F21(a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a23;
    } catch(e25) {
    }
    try {
        this.c = f3;
    } catch(e26) {
    }
    try {
        this.e = -124255686n;
    } catch(e27) {
    }
}
const v28 = new F21(257n, v18);
new F21(-11553n, v17);
new F21(-124255686n, v28);
const v32 = new BigInt64Array();
class C34 extends Uint16Array {
    static 5 = v28;
    static 1 = v19;
    static d;
    [-11553n];
    #g = F21;
}
const v35 = new C34();
const v37 = new Float32Array();
const v38 = [1073741824,1073741823,1376142744,1073741825];
for (let v39 = 0; v39 < 5; v39++) {
    function f40(a41, a42) {
        a42[1] = a42;
    }
    f40(v32, v35);
    f40(v38, v37);
}
function f45(a46, a47, a48, a49) {
    try { a48(); } catch (e) {}
    const v51 = new Float32Array();
    const v53 = Object(v51);
    const v54 = v51;
    const v55 = v53.fill(...v54);
    v55.g = v55;
}
for (let v56 = 0; v56 < 500; v56++) {
    f45();
}
