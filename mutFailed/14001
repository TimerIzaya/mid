const v0 = [];
new Int32Array(16);
new Uint32Array(129);
255 ^ 255;
new Float64Array(255);
class C14 {
    10 = 129;
    #h;
}
const v15 = new C14();
v15[10] = v15;
const v16 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v19 = new Uint32Array();
const v22 = new Uint16Array(6);
let v23 = 4;
v23++;
v22.lastIndexOf(v23);
const v27 = [601759695];
const v28 = [1073741824,1073741823,1376142744,1073741825];
522675525n ^ 522675525n;
function f31(a32, a33, a34, a35) {
    a32 & a32;
    const v37 = a33?.constructor;
    try { new v37(16); } catch (e) {}
    function f39() {
        const t25 = "Vre";
        t25[1] = "Vre";
        let v43;
        try { v43 = Math.expm1(Math); } catch (e) {}
        const v44 = v0.expm1();
        const v45 = Math.tanh();
        const v46 = Math.hypot(a34, Math);
        v46 - v46;
        Float64Array.BYTES_PER_ELEMENT = Float64Array;
        b = v44;
        v16.length;
        try {
            v28.findLast();
            function f51() {
            }
            const v52 = [-1.5314324604839498e+308,-1.8081364344875581,-2.2250738585072014e-308,3.0,3.0];
            v52[5] = v52;
            function F53(a55, a56, a57) {
                if (!new.target) { throw 'must be called with new'; }
                a55[4294967295] = a55;
            }
            F53.prototype;
        } catch(e59) {
            e59.a = e59;
        }
        const v60 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        try { v60.pop(); } catch (e) {}
        ~-268435456;
        const o77 = {
            [522675525n](a65, a66) {
            },
            "arguments": Float64Array,
            __proto__: a33,
            "type": "Vre",
            "c": 6,
            /*
            __proto__: v60,
            */
            "c": v43,
            [-1]: 2684,
            1073741824: v19,
            "maxByteLength": -268435456,
            /*
            __proto__: v19,
            */
            9: v15,
            [v45]: v44,
            ...a33,
            "arguments": v60,
            [2n](a68, a69, a70, a71) {
            },
            "e": a35,
            "arguments": Float64Array,
            256: a35,
            4: "Vre",
            "g": v60,
            get e() {
                return "Vre";
            },
            "h": v23,
            "c": -268435456,
            get b() {
                return "Vre";
            },
            "execution": "Vre",
            valueOf(a75, a76) {
            },
        };
        return -4294967295;
    }
    f39.arguments = f39;
    const v78 = f39();
    v78 >> v78;
    eval(a33);
    %OptimizeFunctionOnNextCall(f39);
    return 2n;
}
for (let v82 = 0; v82 < 5; v82++) {
    Uint32Array > f31(v82, v27, v82, v82);
}
