function f3(a4, a5, a6, a7) {
    for (let i10 = 0, i11 = 10;
        i10 < i11;
        (() => {
            i11 * f3;
            let v16 = i11--;
            v16--;
        })()) {
    }
}
for (let v20 = 0; v20 < 5; v20++) {
    f3(f3, v20, v20, f3);
}
[-45565,1073741825,2281,-3];
[701287753,4,21833,-268435456];
[-35723,-13240,7,-57131,35430,8,4,-1424739546];
new Float32Array(-1302058936);
const v30 = new Uint8ClampedArray(64);
new Uint8ClampedArray(5);
new Uint16Array();
class C36 {
    constructor(a38) {
        function F39(a41, a42, a43, a44) {
            if (!new.target) { throw 'must be called with new'; }
            const v45 = this.constructor;
            try { new v45(); } catch (e) {}
            typeof Float32Array;
        }
        const v51 = new Uint8ClampedArray();
        const v53 = new Float32Array();
        for (let v54 = 0; v54 < 25; v54++) {
            Float32Array[6] = v51;
            v53[v54];
        }
        this >> -1073741824;
        for (let v57 = 0; v57 < 32; v57++) {
            for (let v59 = 0; v59 < 5; v59++) {
                Symbol.species;
                class C62 {
                    static a;
                    static {
                        this >> this;
                        this[6];
                    }
                    static m(a67) {
                        gc();
                    }
                }
                new C62();
            }
        }
    }
}
new C36();
new C36();
const t55 = 9007199254740990;
new t55();
const t57 = v30.constructor;
new t57();
