function f0() {
}
function f1() {
    return f0;
}
let v2 = [-1.4167194715363921e+308,6.181202498076427e+305,9.755997626264197,1000000.0,0.0,-3.0,2.220446049250313e-16];
const v3 = [-149448.6430257695,-1.7976931348623157e+308,44026.73105227575,707416.7209014904,812517.7952813047,-843.9043881665347,943652.575742285,-2.9271748831342563,0.893019626415546,0.793439351660729];
const v4 = [275883.15884520835,-404.61045059481467,0.801194492236883];
function f5() {
    return f0;
}
function f6() {
    for (const v7 in f5) {
        64 instanceof Uint16Array;
    }
    return f5;
}
f6();
class C12 extends f0 {
    o(a14) {
        v2.length -= a14;
        const v16 = new BigInt64Array();
        const v18 = Symbol.toPrimitive;
        try {
        } catch(e19) {
        } finally {
        }
        const o20 = {
            __proto__: v16,
        };
        v2 = v3;
        super[v18];
        const v23 = new Float32Array(Float32Array);
        for (let v24 = 0; v24 < 25; v24++) {
            const v25 = [1073741824,1073741823,1376142744,1073741825];
            new Uint32Array();
            new Int32Array();
            class C30 {
            }
            function f31(a32, a33, a34, a35) {
                for (let v36 = 0; v36 < 5; v36++) {
                    const v38 = a33 + v36;
                    class C39 {
                    }
                    new C39();
                    [Infinity,1.0,-1.2272545370579378e+308,-1000000.0,5.0,1.7976931348623157e+308,5.0];
                    try {
                        const v44 = C30(19793);
                        for (const v45 of v44) {
                            function f46() {
                                return f46;
                            }
                            /{}(x)(x)(x)\4*a{0}a|b/msy;
                        }
                        [v44,v44,v44];
                        [v36] >= Uint16Array;
                    } catch(e52) {
                    }
                    v16[v38] = v36;
                }
                function f54() {
                    return Float32Array;
                }
                let v56;
                try { v56 = undefined(); } catch (e) {}
                const v58 = new Int8Array(v23, f54, v24);
                function f59(a60, a61) {
                    return v56;
                }
                f59(v4, v23);
                v58.buffer;
                %OptimizeFunctionOnNextCall(f54);
                try { v25["find"](); } catch (e) {}
                return arguments;
            }
            for (let v66 = 0; v66 < 10; v66++) {
                f31(v23, v24, v66, Float32Array);
            }
        }
        this.__proto__;
        return v3;
    }
    n(a70, a71) {
        const o72 = {
        };
        const v74 = new Proxy(f1, o72);
        try {
            a70();
        } catch(e76) {
        }
        return v74;
    }
}
new C12();
const v78 = new C12();
new v78();
new Array(4096);
function f83() {
    return f1;
}
function f84(a85, a86, a87, a88) {
    class C89 {
        constructor(a91, a92, a93, a94) {
            a94.match(a93);
        }
    }
    ("sync")[-5.0];
    class C101 extends BigUint64Array {
    }
    const v102 = new Int8Array(a87);
    const v104 = [723200.4184824808,-1000.0,-523437.54204506474,-964793.6675249395];
    for (let v105 = 0; v105 < 20; v105++) {
        let [,v106,...v107] = v104;
    }
    const v108 = [-8617,3];
    function f109(a110, a111, a112, a113) {
        const o114 = {
            "h": a110,
            "b": v108,
        };
        return o114;
    }
    256 << -65535;
    class C119 {
        [null];
    }
    C12.asinh();
    class C124 extends Map {
    }
    const v126 = new Int32Array(2528);
    v126[0] %= -1073741824;
    return v102.buffer;
}
%PrepareFunctionForOptimization(f84);
f84();
%OptimizeFunctionOnNextCall(f84);
f84();
