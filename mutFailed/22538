const v3 = /(O3)/vis;
const v4 = v3.dotAll;
const v5 = /\x0f/gud;
try { v5.compile(-256, v5); } catch (e) {}
const v7 = /a\D/dsy;
v4.hasIndices;
let v10;
try { v10 = v4.normalize(); } catch (e) {}
const v11 = v10 == v10;
("bigint")[1];
try { ("UG").sup(); } catch (e) {}
class C16 {
    #g = -256;
    static m(a18, a19, a20, a21) {
        a18 - -256;
        /a/gvdis;
        /(?:a?)*/uisy;
        /(foo(?<!bar)baz)/gmsy;
        return a20;
    }
    6 = -256;
    static #e;
    d;
    a = v7;
}
const v26 = new C16();
v3[6];
v26[6] = v26;
const v28 = new C16();
v28[6];
new C16();
const v32 = new Date();
const v34 = new Set();
const v36 = v11.toPrimitive;
Symbol.for(v36.description);
v7[v36] = Date;
const v40 = v34.add(v32);
let [v41,,...v42] = v34;
try { v42.findLast(9007199254740992); } catch (e) {}
const v44 = v41.setMilliseconds(v40);
v44 ^ v44;
v44 * v44;
