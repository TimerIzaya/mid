function f0() {
    const o9 = {
        toString(a5, a6) {
            try {
                super.getMinutes(a5);
            } catch(e8) {
            }
            return "object";
        },
        "b": "boolean",
        "g": "object",
        128: "boolean",
        "a": 1000000000000.0,
        "c": "boolean",
        __proto__: "boolean",
        "h": 1000000000000.0,
    };
    return o9;
}
const v10 = f0();
const v11 = f0();
const v12 = f0();
v12[128];
function F15(a17) {
    if (!new.target) { throw 'must be called with new'; }
    a17[128] = a17;
    try {
        this.f = a17;
    } catch(e18) {
    }
    try {
        this.h = a17;
    } catch(e19) {
    }
    try {
        this.d = a17;
    } catch(e20) {
    }
}
F15.e = F15;
new F15(v11);
const v22 = new F15(v12);
v22.d = v22;
const v23 = new F15(v11);
function f24(a25, a26, a27) {
    a26[128];
    a27[128] = a27;
    const o35 = {
        ...v22,
        2074850330: a25,
        get a() {
            const o33 = {
                "execution": "async",
                "type": "major",
            };
            return gc(o33);
        },
        "b": a26,
    };
    o35[2074850330] = o35;
    return o35;
}
const v36 = f24(v12, v12, v10);
const v37 = f24(v11, v11, v36);
v37[2074850330] = v37;
f24(v36, F15, v11);
function F39(a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    const v44 = this?.constructor;
    try { new v44(F39, F39, f0); } catch (e) {}
    a42.g = a42;
    try {
        this.d = a43;
    } catch(e46) {
    }
    try {
        this.a = a41;
    } catch(e47) {
    }
}
new F39(v11, v12, v11);
const v49 = new F39(v12, v10, v23);
new F39(v12, v36, v49);
try { Uint32Array.bind(F15); } catch (e) {}
Float64Array.length = Float64Array;
Uint32Array.d = Uint32Array;
const v63 = Math?.expm1;
try { new v63(Date); } catch (e) {}
Math.log1p(4294967295);
(-1.4618325192014402e+308) ** -724330360;
f0.UTC(2, 2);
