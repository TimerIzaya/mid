let v0 = 9223372036854775807;
let v3 = /gabc+?(Axyz{0,1}[D?])/vis;
const v4 = /ab\b\d\bcd*/gu;
const v5 = /(a$abc+?)/vmy;
class C6 {
    #toString(a8, a9, a10) {
        v3 = v5;
        Math.min(-1000000000000.0);
        const v15 = v4 >>> -1000000000000.0;
        v4 ^ v4;
        return v15;
    }
    static 16 = 3;
    [536870888] = v4;
    a;
}
const v17 = new C6();
const v18 = new C6();
new C6();
/a?5/vdiy;
const v21 = /V[\11]/gm;
const v22 = /(2a\Sc3mU\u{12345}[\0]6)/vy;
function F23() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = 0;
}
class C26 extends F23 {
    #b;
    constructor(a28) {
        super();
        this.__proto__;
        --v0;
        this[v3] = v17;
        v18[128];
        try {
            super.toString(v21);
        } catch(e33) {
        }
        delete this.h;
        super.h = this;
        /\1\2(a(?:\1(b\1\2))\2)\1()l/udm;
    }
}
v3["compile"]("compile");
C6 !== v5;
function f39() {
    const o48 = {
        toString(a44, a45) {
            try {
                super.getMinutes();
            } catch(e47) {
            }
            return "object";
        },
        "b": "boolean",
        "g": "object",
        128: "boolean",
        "a": 1000000000000.0,
        "c": "boolean",
        __proto__: "boolean",
        "h": 1000000000000.0,
    };
    return o48;
}
const v49 = f39();
const v50 = f39();
const v51 = f39();
v51[128];
function F54(a56) {
    if (!new.target) { throw 'must be called with new'; }
    a56[128] = F54;
    try {
        this.f = a56;
    } catch(e57) {
    }
    try {
    } catch(e58) {
    }
    try {
    } catch(e59) {
    }
}
F54.e = F54;
new F54(v50);
new F54(v51);
const v62 = new F54(v50);
function f63(a64, a65, a66) {
    const o73 = {
        get a() {
            const o71 = {
                "execution": "async",
                "type": "major",
            };
            gc(o71);
        },
    };
    o73[2074850330] = o73;
    return o73;
}
const v74 = f63(v51, v51, v49);
f63(v74, f63(v50, v50, v74), v50);
function F77(a79, a80, a81) {
    if (!new.target) { throw 'must be called with new'; }
    const v82 = this?.constructor;
    try { new v82(F77, F77, f39); } catch (e) {}
    a80.g = a80;
    try {
        this.d = a81;
    } catch(e84) {
    }
    try {
    } catch(e85) {
    }
}
const v86 = new F77(v51, v49, v62);
new F77(v51, v74, v86);
try { Uint32Array.bind(F54); } catch (e) {}
v22[0];
Math.cbrt(166569.90515977307);
(C6 ** 128).ceil(128);
new C26(v17);
