const v0 = [];
class C1 {
    constructor() {
        try {
            v0.length = v0;
        } catch(e3) {
        }
    }
    static 257;
    static #b = v0;
    2;
    static 7;
}
const v4 = new C1();
const v5 = new C1();
const v6 = new C1();
class C7 extends C1 {
    static n(a9, a10) {
        const v11 = a10 + C1;
        function F12(a14, a15, a16) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.a = C1;
            } catch(e17) {
            }
            try {
                this.b = a14;
            } catch(e18) {
            }
        }
        const v19 = new F12(v0, a10, a9);
        const v20 = new F12(this, v5, v19);
        try {
            super.abs(C7, v20, v20, v11, v4);
        } catch(e22) {
        }
        const v26 = new F12(v20, v20, v4);
        return v26;
    }
}
new v6();
new C7();
new C7();
[-Infinity];
[0.9756316282485153,-2.0,0.10580406527880792,-2.2250738585072014e-308];
[-764.4724151809661];
function f33() {
    const o35 = {
        get b() {
            return f33;
        },
    };
    return o35;
}
class C36 extends f33 {
    constructor(a38) {
        super();
        for (let v39 = 0; v39 < 25; v39++) {
            this["p" + v39] = v39;
        }
    }
}
new C36();
