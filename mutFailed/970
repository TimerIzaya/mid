function f0() {
}
const v4 = [-8311n,0n,-8311n,0n,-8311n];
const v6 = [[v4,v4,v4,4096n,v4]];
[0n,v4,-8311n,f0];
[0n,[4096n],v6,0n];
[4,65537,-41597,16967,30327,10,1024];
[-5,-51133,6562,-2017092634,8,2147483649,-1,-4096];
[171318223,9007199254740990];
let v13 = 1;
new Int32Array(v13);
new Int16Array(3076);
new BigUint64Array(5);
const v22 = [];
for (let v25 = 0; v25 < 10; v25++) {
    const t15 = "f";
    t15[1073741824] = 4294967296;
}
function f26() {
    return v22;
}
function f27() {
    const v28 = /((((.).).).)rfoo|(bar|baz)|quux*/uims;
    const o32 = {
        get b() {
            delete this[this];
            this[this] = 817905185;
            return v28;
        },
    };
    const o33 = {
        ...o32,
    };
    function f34(a35, a36) {
        function f39(a40, a41, a42, a43) {
            a41 + a41;
            a42 >> a42;
            a43 != a43;
            const o47 = {
                "d": a43,
            };
            o47.e = o47;
            const v48 = [1840677197,-43868];
            const v51 = new Int8Array(6);
            for (const v52 in v51) {
                Object.defineProperty(v48, v52, { configurable: true, value: v52 });
            }
            return o47;
        }
        f39(2147483648, -11, 2147483648, 2147483648);
        return -11;
    }
    return f34;
}
Object.defineProperty(f26, "valueOf", { configurable: true, get: f27 });
256 != 256;
let v57 = new Uint8ClampedArray(256);
function f58() {
    [Int8Array];
    return v6;
}
v57.valueOf = f58;
4 / 4;
Uint8Array.e = Uint8Array;
const v64 = new Uint8Array(4);
const v66 = 14 - 14;
let v67 = BigUint64Array;
const v68 = new v67(14);
class C69 {
    static c = 256;
    static e;
    constructor(a71, a72, a73) {
        const v74 = this?.constructor;
        try { new v74(v66, a72, C69); } catch (e) {}
        a71 % a71;
        let v77;
        try { v77 = a72.indexOf(Uint8Array); } catch (e) {}
        v77 << v77;
        a73 + a73;
        try { Math.expm1(v22); } catch (e) {}
        ("c").toUpperCase();
        function F85(a87, a88, a89) {
            if (!new.target) { throw 'must be called with new'; }
        }
        F85();
        try { Math.sign(f26); } catch (e) {}
        let v92 = 1073741824;
        const v93 = v92--;
        v93 | v93;
        let v95 = --v57;
        v95--;
        for (const v98 of `match${Math}-20124`) {
        }
        const o99 = {
        };
        let v101 = ~(v95--);
        const v102 = v101--;
        v102 + v102;
        --v13;
        -Infinity;
        v101++;
        --v67;
        ("sync")[-5.0];
        function f111(a112, a113) {
            const o114 = {
                ...a112,
            };
            o114.d;
            return f111;
        }
        f111.d = f111;
        f0(f111);
    }
}
let v117 = 3375;
--v117;
new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
const v122 = new Uint16Array();
v122[877];
const v124 = new C69(14, v22);
const v125 = v124.__defineGetter__;
try { v125(v68); } catch (e) {}
new C69(4, v22);
new C69(256, v64);
