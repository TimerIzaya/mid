const v2 = [5,1436918233,13,-9223372036854775808,12,10779,268435439,-350312267,536870912];
const v4 = ["function",v2,"function"];
const v5 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v8 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v9 = [601759695];
const v10 = [1073741824,1073741823,1376142744,1073741825];
function f12() {
    const v15 = v5.length;
    try {
        v10.forEach("function");
    } catch(e17) {
    }
    const v18 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
    const v20 = Symbol.toPrimitive;
    const o26 = {
        toString(a22, a23) {
            const v24 = v2 && "function";
            a22 *= v20;
            return v24 <= v18;
        },
    };
    const o47 = {
        "c": -4294967297n,
        [522675525n](a29, a30) {
        },
        "c": v9,
        valueOf(a32, a33) {
            return "Vre";
        },
        [v15](a35) {
        },
        [-1]: 2684,
        "maxByteLength": -268435456,
        "b": -4294967295,
        [-4294967297n](a37, a38, a39, a40) {
            eval();
        },
        "e": -4294967295,
        "arguments": v8,
        set b(a44) {
        },
        256: v2,
        m(a46) {
            return a46;
        },
        ...v9,
        "type": "Vre",
        ..."Vre",
        4: "Vre",
        "c": -268435456,
    };
    return v4;
}
%OptimizeFunctionOnNextCall(f12);
new Uint8ClampedArray(2471);
new Float32Array(1);
const v54 = [0.3083488057663979,0.3083488057663979,0.3083488057663979];
class C55 {
    constructor(a57, a58) {
        a58[2];
        /Ia[a]/uims;
        let v61 = /W(jy2)/udy;
        v61.flags;
        const v63 = /(u4(?:a?)*)/gudimsy;
        const v66 = new Uint8Array(v63, C55);
        const v68 = new Uint32Array();
        function f69(a70, a71, a72, a73) {
            const o77 = {
                ...v66,
                n(a75, a76) {
                    v68[a70] = v68;
                },
            };
            return o77;
        }
        for (let v78 = 0; v78 < 625; v78++) {
            f69(Uint8Array, 2, v78);
        }
        v61 = v63;
        for (let v80 = 0; v80 < 25; v80++) {
            v54["p" + v80] = v80;
        }
    }
}
try {
} catch(e84) {
    function f85(a86) {
        return Uint32Array;
    }
}
new Int32Array(1);
const v89 = [2471];
[2471,Uint8ClampedArray,[1,Int32Array],Float32Array];
("has").matchAll("has").next();
[v8];
-9007199254740991 >>> -9007199254740991;
class C99 {
}
const v100 = new Uint16Array();
parseInt([-5.034735835956977e+307,-385.25474675985527]);
class C105 extends Int32Array {
}
const v106 = v100[877];
let v107 = 15135;
v89.__proto__;
class C109 extends v8 {
}
function F110(a112, a113, a114) {
    if (!new.target) { throw 'must be called with new'; }
}
new F110();
const v116 = v107--;
gc();
class C119 {
    static #m(a121) {
    }
    constructor(a123) {
        function f124() {
            return f124;
        }
        Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f124 });
    }
}
const v126 = new BigInt64Array();
const v127 = v126.entries();
try { v127.__defineSetter__(v106, v116); } catch (e) {}
