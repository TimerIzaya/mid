function f3(a4) {
    const o15 = {
        "g": 4,
        set h(a6) {
            a4 = -a6;
        },
        set b(a9) {
            const v11 = delete a9?.[new.target];
            v11?.e;
            throw v11;
            v11[Symbol.iterator] = 1;
        },
    };
    return o15;
}
f3(1);
f3(-9007199254740992);
const v18 = f3(1);
/t[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]/gvimy;
/48jP/guim;
/ab\b\d\bcd/gvdmy;
207 + 207;
function f31() {
    function f32() {
        ("undefined").localeCompare("undefined", "toString");
        return 1;
    }
    return f32;
}
Object.defineProperty(Float32Array, "toString", { writable: true, configurable: true, get: f31 });
new Float32Array(207);
let v37 = 14;
v37--;
try { new Uint8ClampedArray("symbol", v37, 207); } catch (e) {}
new Uint8ClampedArray(v37);
new Uint32Array(4096);
const v46 = 220 >> 220;
const v48 = new BigUint64Array(220);
v48[Symbol.toPrimitive] = f31;
const v51 = v48[42];
const v54 = new Uint32Array(958);
v54.g = v54;
const v57 = new Int8Array(3844);
function f58(a59, a60) {
    try {
        v54.toString = f3;
    } catch(e61) {
    }
    return v18;
}
v57.toString = f58;
v57[372] = v57;
let v64 = -1024n;
class C65 {
    set c(a67) {
        v64 = 0n;
        a67 += 0n;
    }
    constructor(a69, a70, a71, a72) {
        C65 >>> v57;
    }
    static [v54] = v51;
    128 = "Cl";
    m(a75) {
        let v76;
        try { v76 = new this(a75, -490778482n, this); } catch (e) {}
        this.c |= v76;
        return a75;
    }
    static 1;
    static h = -490778482n;
    static #f = v64;
}
C65[Symbol.toPrimitive] = f3;
try { new C65(); } catch (e) {}
const v80 = new C65();
new C65();
const v82 = new C65();
[1.7976931348623157e+308,0.15227894183030433,-2.0,259880.3330397869,0.0,-1e-15,360683.0243419355,-1e-15,1.7976931348623157e+308];
const v85 = [0.03568519099872258];
try { v85.join(v48); } catch (e) {}
const v87 = [462318.599710946,0.6123807977566038,-0.0,-108306.02593608841,Infinity,0.0,-4.0,-1000.0];
try { v87.at(4096); } catch (e) {}
class C89 {
    static {
        function f91(a92, a93) {
            const o94 = {
                "construct": f58,
                "defineProperty": f3,
                "deleteProperty": Symbol,
                "get": Symbol,
                "getOwnPropertyDescriptor": f3,
                "getPrototypeOf": Symbol,
                "has": Symbol,
                "ownKeys": f31,
            };
            new Proxy(v80, o94);
            return a92;
        }
        this[Symbol.toPrimitive] = f91;
        this >> "Cl";
        super[this] = v46;
    }
    [Float32Array];
    static 3518;
    static 2147483648;
    static #valueOf(a101, a102) {
        v82[null] ||= a101;
        const v103 = v85.__proto__;
        try { v103(this, a101, v64, v103, this); } catch (e) {}
        return v85;
    }
    [v64] = v64;
    2;
    static #h = null;
    constructor(a106, a107, a108) {
        new Uint8Array(1024);
        new Int32Array(2);
        new Uint16Array(2277);
    }
    #a = null;
}
new C89();
const v119 = new C89();
v119[2];
new C89();
const v124 = new Uint8Array();
try { v124.entries(); } catch (e) {}
function f126(a127, a128, a129, a130) {
    a129 === a129;
    a129++;
    const o133 = {
        ...v124,
    };
    function f134() {
    }
    function f135(a136) {
        const o137 = {
        };
    }
    function f141(a142, a143, a144) {
        const o145 = {
            "h": a144,
        };
        return o145;
    }
    f141(-3.9870582640049523, -3.9870582640049523, 1000000.0);
    const v147 = f141(1000000.0, -3.9870582640049523, 1000000.0);
    function f148() {
        function F149(a151, a152) {
            if (!new.target) { throw 'must be called with new'; }
        }
        new F149();
        return F149;
    }
    v147.toString = f148;
    f141(-3.9870582640049523, -2.2250738585072014e-308, -3.9870582640049523);
    v147["toString"]();
}
for (let v157 = 0; v157 < 500; v157++) {
    f126(Uint8Array, 2, v157);
}
