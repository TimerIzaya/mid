const v3 = [380.8169599245373,-720.3117510829104,8.858999512336315,-1000000000.0,-1000000000000.0];
[-0.0,-1.0];
[-1000000.0,9.254169716734125e+307,1e-15,2.2250738585072014e-308,NaN,1000000000000.0,Infinity,464.1642064246762,-760.594031501934,-456.80755637214145];
function f7() {
    return "buffer";
}
const v8 = [48940,-4294967296,2147483649,20170,128,127];
[9223372036854775807,39236,-3,-52134,2147483647,268435439,2147483649,1599128557,65536];
[-1228148740,1073741823,4,65535,-54086];
function f11() {
    return v3;
}
[178445.9222035366,9.63875732573102];
[-141.80926047386276,-973832.9458047785,-2.220446049250313e-16,-2.220446049250313e-16,1.4653534881646203e+308,-1.7976931348623157e+308];
[1e-15,6.03377153010459e+307,-972.5278850110258,-1.7903051997210322e+308,1.0,Infinity,4.0,0.8722139806008752,3.289845964427805e+307];
class C18 {
    static #o(a20) {
        this.g **= -1e-15;
        try {
            ("-2147483648").normalize();
        } catch(e22) {
        }
        return 268435456;
    }
    a = -1e-15;
    static 27 = C18;
    static f;
}
let v23;
try { v23 = new C18(); } catch (e) {}
const v24 = new v23();
v24.a = v24;
new C18();
const v26 = new C18();
8 - 8;
let v32 = -15;
const v34 = 344.61638667171496 & -11;
Math.sqrt(-11);
const v36 = Math.floor(v34);
v32--;
const v38 = new Int32Array(8);
try { v38.constructor(v26, -1e-15, 8); } catch (e) {}
new Uint32Array(2950);
28 | Uint32Array;
const v46 = new Uint32Array(28);
let v47 = 0;
v3 || Uint32Array;
let v52 = 36453;
Math.random();
Math.acos(v52);
++v52;
v52 + v52;
class C57 {
    #b = v47;
    g = 1.1408591040999836e+308;
    static {
        this.e = this;
        const v62 = v47++;
        -v62;
        ~v47;
        Math.log10(44149);
        const v66 = 44149 + v47;
        v66 >> v66;
        Math.fround(v62);
    }
}
const v69 = new C57();
v69.g;
new C57();
const v73 = -Infinity;
v73 << v73;
const t70 = "h";
t70.length *= v36;
new Float32Array(1024);
new Uint32Array(255);
new v8(8);
C57.g ^= -1e-15;
const o98 = {
    "execution": "async",
    set e(a91) {
        let {"a":v92,"e":v93,"execution":v94,} = this;
        try {
            new Int32Array(53099, 53099, 53099);
        } catch(e97) {
        }
    },
    "type": "major",
};
const v99 = o98?.constructor;
try { new v99(v46); } catch (e) {}
gc(o98);
const t90 = "major";
t90[108] /= -1e-15;
