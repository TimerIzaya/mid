const v0 = [4294967296,-4294967297,2147483648,4096,1755980607,268435440];
const v1 = [10000,25675,-8,-1024,-918963097];
const v2 = [33022,268435441,-2147483648,1238646040,-15,-2,536870889,-5,-9,536870889];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = v0;
    try {
        this.g = a5;
    } catch(e6) {
    }
}
let v9 = 61820;
Math.clz32(v9);
1073741823 && 1073741823;
const v12 = 1073741823 ^ 1073741823;
~1073741823;
++v9;
Math.cos(v12);
new F3(v0);
new F3(v1);
new F3(v1);
[F3] = v2;
new Uint8ClampedArray(22);
new Int16Array(1);
new Int16Array(4);
function f32() {
    return "uYAdH";
}
for (const v34 of v1) {
}
new Array(7);
function f43() {
    return -2.220446049250313e-16;
}
new Int8Array(4);
for (const v49 in "1024") {
}
class C50 {
}
new C50();
("1073741823").trimRight();
const v55 = [];
function f56(a57, a58) {
    class C59 {
    }
    5.0 / -2.220446049250313e-16;
    const v67 = new Uint8Array(257);
    class C69 extends Uint16Array {
        constructor(a71, a72, a73) {
            super(v67);
        }
    }
    Math.exp(8);
    Math.log(-23525);
    function f77() {
        return f77;
    }
}
v55.constructor = f56;
new Float32Array(8);
/abc?/gvmy.exec("Q8F");
const v82 = /(x)(x)(x)\1/uis;
function f83(a84, a85, a86, a87) {
    const o94 = {
        2: a86,
        __proto__: a87,
        [v82](a89, a90, a91, a92) {
            super.test();
        },
    };
    return a84;
}
f83();
f83();
function F98() {
    if (!new.target) { throw 'must be called with new'; }
}
new Int32Array(6);
new Float32Array(12);
new BigInt64Array(86);
const o111 = {
    "maxByteLength": 139,
};
const v113 = new ArrayBuffer(7, o111);
new Int32Array(v113);
Math.cos(2);
new BigUint64Array(215);
-35893 || v2;
Math.fround(v2 << NaN);
Math.round(8324);
NaN / NaN;
class C135 {
    #c = "toUpperCase";
    get a() {
        const v137 = this << "toUpperCase";
        const t95 = v137 ^ v137;
        t95();
    }
}
