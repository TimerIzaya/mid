let v1 = "R1";
function f4() {
    function f5(a6, a7) {
        a7 / "b";
        return -9007199254740991;
    }
    return f5;
}
Object.defineProperty(Array, "constructor", { writable: true, configurable: true, enumerable: true, get: f4 });
class C13 extends Array {
    constructor(a15, a16, a17) {
        super(a15);
    }
}
new C13(178);
class C19 {
    2677652094 = "b";
    constructor(a21) {
        let v22;
        try {
        const t0 = "b";
        v22 = t0(this, this, a21, a21);
        } catch (e) {}
        function F23(a25, a26, a27) {
            if (!new.target) { throw 'must be called with new'; }
            function f28(a29) {
                const v32 = new Int16Array();
                v32.length -= 857;
            }
            Object.defineProperty(this, "d", { configurable: true, set: f28 });
            try {
                this.d = a26;
            } catch(e33) {
            }
        }
        new F23(v22, v1, this);
        ([126.35858692635452,171.76053631394439,637722.086033537,-4.0,3.0,-1000000.0,1.3044045702886066e+308]).shift();
        ([607.0076449847468,-818.8860494127688])[3];
        Array.constructor;
        function F41(a43, a44, a45, a46) {
            if (!new.target) { throw 'must be called with new'; }
            this.c = a45;
            this.c = Date;
        }
        new F41();
        const v48 = new F23(v1, this, this);
        new F23("bigint", v48, v1);
    }
}
const v50 = new C19(v1);
let v51 = 1073741824;
[v1,v51] = "boolean";
new Int8Array();
new C19(v50);
const v56 = new C19("bigint");
function f57(a58, a59, a60) {
    const o80 = {
        4: a59,
        set a(a62) {
            a59++;
            try {
                a62.__proto__ = v1;
            } catch(e64) {
            }
            ([-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0]).forEach();
            function F67() {
                if (!new.target) { throw 'must be called with new'; }
            }
            new F67();
        },
        ["bigint"](a71, a72, a73) {
        },
        set b(a75) {
            function f76(a77) {
                return f76;
            }
            class C78 extends f76 {
            }
        },
        ...v1,
        "a": "b",
        __proto__: a58,
        ..."bigint",
        "h": "b",
        get d() {
            return f57;
        },
        "h": C19,
    };
    return o80;
}
const v81 = f57(v50, v56, v50);
const v82 = f57(v81, "bigint", v56);
[[f57(C19, v81, v50),C19],v56];
[v82,f57,v1];
const v88 = new Set();
Object.defineProperty(v88, "toJSON", { enumerable: true, value: v50 });
const v89 = [Set,Set,v88];
function f90(a91, a92, a93) {
    return f90;
}
try {
} catch(e94) {
}
Array(36862);
const v100 = [v89];
const o101 = {
    "arguments": v100,
    "type": "function",
};
new Worker(f90, o101);
