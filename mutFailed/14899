new Uint8Array(3860);
for (const v7 in "5amlK") {
    ("5amlK")[v7];
}
function F10(a12) {
    if (!new.target) { throw 'must be called with new'; }
    const v13 = this?.constructor;
    try { new v13("toString"); } catch (e) {}
    a12[5];
}
function F17(a19) {
    if (!new.target) { throw 'must be called with new'; }
    const v20 = this.constructor;
    v20.prototype;
    v20.caller = v20;
    try { new v20(); } catch (e) {}
}
new F17(F17);
new Float32Array(142);
const v29 = new Int32Array();
v29.reverse();
const v32 = new WeakMap();
v32.set([F17,F17,F17,F17,F17]);
const v35 = new BigUint64Array(61);
class C36 extends Float32Array {
    3645;
    p(a38, a39, a40) {
        let v43 = 1.0;
        const v44 = ++v43;
        const v45 = v44 / v44;
        11 >> 11;
        function f47() {
            new Uint16Array(209);
        }
        ~(v45 | v35);
        return "setUTCDate";
    }
    104 = "setUTCDate";
}
new C36();
new C36();
new C36();
const v58 = new Date();
const v59 = v58.setMilliseconds(-429.3290910931888);
v59.setUTCFullYear(v59, Int8Array, Float32Array);
new Uint8ClampedArray([5.0]);
