class C3 {
    static get b() {
        this[6] = 274227964;
        return 274227964;
    }
    g = "getMilliseconds";
    p(a6) {
        a6[a6] = this;
        try {
            const v7 = ("getMilliseconds").charCodeAt(274227964);
            this[127] = a6;
            let v8;
            try { v8 = a6(this, v7, v7); } catch (e) {}
            b = v8;
            v8[C3] = 274227964;
            C3[6] = "getMilliseconds";
        } catch(e9) {
        }
        return 0.8554472932011037;
    }
}
let v10;
try { v10 = C3(); } catch (e) {}
const v11 = new C3();
v11.b = v11;
const v12 = new C3();
const v13 = new C3();
let v14;
try { v14 = v13.p(C3); } catch (e) {}
const v15 = [v13,v11,C3,0.8554472932011037,v13];
const v16 = [C3,v15,274227964];
const v17 = [274227964,v16,C3,v15];
const v18 = v12 >= v17;
const v19 = !v18;
const v20 = v18 >= v13;
const v21 = ["getMilliseconds",C3,v20,0.8554472932011037,v17];
const o34 = {
    valueOf() {
        function F23(a25, a26, a27) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = this;
            } catch(e28) {
            }
            try {
                this.g = a26;
            } catch(e29) {
            }
            try {
                this.e = this;
            } catch(e30) {
            }
        }
        new F23(v20, v10, v10);
        new F23(v19, v19, v10);
        new F23(v20, v18, v10);
        return 0.8554472932011037;
    },
};
try { v21.groupToMap(v18); } catch (e) {}
[v16,0.8554472932011037,v21];
[v21,v21,v16];
const v38 = [0.4226937165050396,0.5167708162295095,-2.2250738585072014e-308,9.62659636000232e+307];
[9.466046190892392,9.626847965296655,0.0003298939346587648,-1e-15,8.592888235337206,-948.3671305836248];
[3.446592504449594];
function F41() {
    if (!new.target) { throw 'must be called with new'; }
    const v43 = this?.constructor;
    try { new v43(); } catch (e) {}
}
const v45 = new F41();
1.0 + 1.0;
const v49 = [2.2250738585072014e-308,-Infinity,496645.0382158025,-621700.5175002808];
const v50 = [974836.255416306,7.54270135293536,0.0,0.35539841926815563,1.385396251341163,-1000000000000.0,NaN,-1.7976931348623157e+308];
try { v50.splice(v38, "getMilliseconds"); } catch (e) {}
class C52 {
}
C52.d = C52;
const v53 = new C52();
const v54 = v53?.__defineGetter__;
try { new v54(0.0, 274227964); } catch (e) {}
function f56(a57, a58, a59) {
    a57 * a57;
    Object.defineProperty(v12, v14, { writable: true, configurable: true, value: v12[v50] });
    v50.length **= 0.8554472932011037;
    try {
        v21.copyWithin(274227964, -256, -256);
    } catch(e64) {
    }
    a58.d = a58;
    try { a59.toLocaleString(); } catch (e) {}
    for (let v66 = 0; v66 < 25; v66++) {
        v66 === v66;
        a59["p" + v66] = v66;
    }
    return a57;
}
f56(0.0, v45, v50);
f56(1.0, v53, v49);
