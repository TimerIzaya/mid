const t0 = -404478.12223700946;
const v6 = new t0();
const v7 = [-349055.72992167494,-1000000000000.0,-8.263641716323854e+307,1.050616183420453e+308,1000.0,1000.0,6.087868782871141,-1.7976931348623157e+308,3.0];
const v9 = new Int16Array(v7, v7, v7);
const v10 = [1073741824,1073741823,1376142744,1073741825];
function f11() {
    new Int32Array(v7, 1073741825n, v9);
    try {
        v10.forEach(v6);
    } catch(e15) {
        const v17 = new Float32Array();
        v17[2] = v17;
        function f18() {
            return Float32Array;
        }
    }
    const o26 = {
        [1073741825n](a20, a21, a22, a23) {
            eval();
        },
    };
    return o26;
}
f11();
const v30 = /2a\sc/uds;
function f31() {
    try { v30.test(v30); } catch (e) {}
}
v30[Symbol.toPrimitive] = f31;
([,[,,,,,]]).fill();
