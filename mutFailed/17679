const v2 = new Array(4);
const v3 = [6.924988569847464,Infinity,6.81759817763063e+307,3.0];
const v4 = [-1000000000.0,-1.2705758122172472e+308,-1e-15,0.9057164282678065,-221715.90769659774,-0.2827090385446418];
const v5 = [-1000.0,Infinity,0.7562208751982421,1000000.0];
v5.g = v5;
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, v2, { enumerable: true, set: Array });
    const v10 = v3[F6];
    const v11 = v2.length;
    try { v10(this, v11, v4, 4, v5); } catch (e) {}
    [-2.2250738585072014e-308,1.842846344385924,2.2250738585072014e-308,-882.1172775889607,0.3397033363167675,-191.5120178177683,4.874604975997767e+307,-1.7976931348623157e+308];
    [831807.2953716661,-8.536551971352571,Infinity,-123.42991022785179,-1000000000000.0];
    [-969.4048240127003,-1000000000.0,310.8534124287678,-6.312518663711552,1.7976931348623157e+308,-0.0,9.54710639316796e+307,-601736.4147844119,-4.0];
    try { a9.splice(Array, Array); } catch (e) {}
    try {
        this.e = v2;
    } catch(e17) {
    }
    try {
        this.a = a8;
    } catch(e18) {
    }
    try {
        this.h = v2;
    } catch(e19) {
    }
}
const v20 = new F6(Array, v3);
new F6(v20, v5);
const v22 = new F6(v4, v4);
const v23 = [-2147483648,-1,413788269,-9223372036854775807,127,-1024,11];
v23[3];
[-44085,1073741824,9007199254740991,-1912831214];
const v26 = [-124661017,1264194390,11167,1807,255];
try { v26.toReversed(); } catch (e) {}
class C28 {
    get f() {
        const v30 = this.constructor;
        class C31 extends v30 {
            [v26] = this;
            4294967296;
        }
        new v30();
        function f33() {
            return C31;
        }
        for (let v34 = 0; v34 < 100; v34++) {
            f33();
        }
        return v20;
    }
    constructor(a37, a38) {
        try { a38.pop(); } catch (e) {}
        [3];
        let v41 = [1073741824,-4096,1073741824,-2,1414089733,-694435822,127];
        v41 <<= [-8];
        for (let v43 = 0; v43 < 32; v43++) {
            const v46 = ("p")[0] + v43;
            try { v46.strike(); } catch (e) {}
            v23[v46] = v43;
        }
    }
}
const v48 = new C28(v22, v26);
const v49 = v48?.constructor;
try { new v49(v49, v5); } catch (e) {}
new C28(v22, v5);
new C28(v22, v4);
class C53 {
}
const v55 = new WeakMap();
class C56 extends v55 {
    static 1 = v55;
    10000;
}
try { new C56(); } catch (e) {}
new C56();
"minor" == "minor";
const o63 = {
    "execution": "async",
    "type": "minor",
};
gc(o63);
Array();
