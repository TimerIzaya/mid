function f0() {
    const o4 = {
        10: "number",
        "h": "a",
        "g": "number",
        11: "a",
        ..."a",
        ..."number",
        "a": "number",
        ..."number",
        __proto__: "number",
        "e": -10,
        "c": "a",
        3: "a",
        "f": "number",
    };
    return o4;
}
const v5 = f0();
const v6 = f0();
const v7 = f0();
function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = f0;
    } catch(e12) {
    }
    try {
        this.f = a10;
        v5[9] = this;
        v5[v5] = this;
        %VerifyType(this);
        function F13(a15, a16) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.c = v6;
            } catch(e17) {
            }
        }
        new F13(v7, F13);
        new F13(v7, F13);
        new F13(v5, this);
    } catch(e21) {
    }
    try {
        this.e = a11;
    } catch(e22) {
    }
}
const v23 = new F8(v7, v5);
new F8(v7, v7);
const v25 = new F8(v6, v7);
class C26 {
    static p(a28, a29) {
        super.g = f0 ** a29;
        let {"c":v31,"e":v32,"g":v33,...v34} = v6;
        return v23;
    }
    constructor(a36, a37, a38, a39) {
        function f40(a41, a42) {
            a41 && v5;
            this[129];
            return a41;
        }
        f40(this, a39);
        const o49 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o49);
    }
}
new C26(v6, v25, v5, v5);
const v52 = new C26(v23, v5, v5, v23);
new C26(v5, v25, v5, v52);
for (let v57 = 0; v57 < 25; v57++) {
    const v58 = [601759695];
    const v59 = [1073741824,1073741823,1376142744,1073741825];
    function f60(a61, a62, a63, a64) {
        let v66 = 536870887;
        v66++;
        BigUint64Array * v66;
        try { v59["find"](..."find", a64, ...v58, ...v59); } catch (e) {}
        return v59;
    }
    for (let v71 = 0; v71 < 5; v71++) {
        f60();
    }
}
