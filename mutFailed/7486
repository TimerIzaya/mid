new Map();
const v2 = /YfC/vdsy;
const v3 = /8l/gvm;
v3.d = v3;
const v5 = v2.constructor;
try { new v5(v2, v2, -14); } catch (e) {}
gc();
const v9 = /(?:ab)|cdea|bo/gvdisy;
v9.dotAll = v9;
v9.g = v9;
159 >> 159;
159 >>> 159;
const v14 = new Int8Array(159);
let v15 = 223;
const v16 = v15--;
Uint16Array.e = Uint16Array;
Uint16Array.name;
new Uint16Array(v15);
const t18 = 15;
const v22 = new t18();
const v23 = v14?.constructor;
try { new v23(v22, 6, 6, v5); } catch (e) {}
new Int8Array(1024);
Int32Array.BYTES_PER_ELEMENT;
const v30 = new Int32Array(15);
function F31() {
    if (!new.target) { throw 'must be called with new'; }
    const v33 = this?.constructor;
    try { new v33(); } catch (e) {}
    -16 >>> -16;
    this.c = -16;
}
v30.h = 0;
try {
    v14.e = v23;
} catch(e38) {
    for (let [v39,v40] of v23) {
    }
}
const v42 = 260330366 % 260330366;
new Float32Array(260330366);
const v45 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
function f46(a47, a48) {
    try { a48.bind(v16); } catch (e) {}
}
try { f46.bind(v42); } catch (e) {}
try { f46(v15, F31); } catch (e) {}
Symbol.d = Symbol;
Object.defineProperty(v45, Symbol.toPrimitive, { configurable: true, value: f46 });
new Int16Array();
function f56(a57, a58, a59, a60) {
}
("toString").match();
const v63 = new F31();
const v64 = new F31();
Date.d = Date;
Date(Date, v63, v64, F31, Date);
const v67 = new Date();
v67.getFullYear();
function F69(a71, a72) {
    if (!new.target) { throw 'must be called with new'; }
    const v73 = this?.constructor;
    v73.d = v73;
    try { new v73(15, 159); } catch (e) {}
    function f75() {
        const v78 = Symbol.iterator;
        Math[v78] = v78;
        return Symbol;
    }
    %PrepareFunctionForOptimization(f75);
    f75();
    %OptimizeFunctionOnNextCall(f75);
    f75();
    const v81 = a71.constructor;
    v81.length;
    try { v81(a71); } catch (e) {}
    class C84 {
    }
    try { new C84(); } catch (e) {}
}
F69.d = F69;
const v86 = new F69(F69, v63);
v86.length = v86;
const o93 = {
    valueOf() {
        const v91 = /gk4b*/vmsy;
        Object.defineProperty(v91, -9223372036854775808, { enumerable: true, set: gc });
        return v91;
    },
};
for (let v94 = 0; v94 < 5; v94++) {
    Math.round(o93);
}
function f97() {
    return f97;
}
class C98 extends f97 {
    constructor(a100) {
    }
}
try { new C98(); } catch (e) {}
