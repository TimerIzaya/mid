function f0() {
}
let v3 = -8;
v3--;
function f5(a6) {
    a6.length = a6;
    const o16 = {
        "e": a6,
        n(a8, a9) {
            try { a8(a6, -943932421, -943932421, 5); } catch (e) {}
            let v11;
            try { v11 = a8(a9, a8); } catch (e) {}
            try { a8.o(a8, v11, v3); } catch (e) {}
            const o13 = {
                "construct": f0,
                "get": f0,
                "has": f0,
            };
            new Proxy(this, o13);
            return o13;
        },
    };
    return o16;
}
try { f5(v3); } catch (e) {}
v3(f0);
const v20 = f5(f5(f0));
[403723.66824904876,-2.2250738585072014e-308,-5.123699016802619e+307,-8.767993900552885e+307,-2.220446049250313e-16,-5.0];
const v24 = ([0.02140525011675909,2.220446049250313e-16,8.285105722820984e+307,2.2250738585072014e-308,-1000.0,1000000000.0,5.0,0.2658042769562755,NaN,0.0])?.filter;
try { new v24(5); } catch (e) {}
[-2.220446049250313e-16,0.11558049914598945,1.0,0.9948480312904096,1000000.0,-1000000000000.0];
2 >= 2;
class C31 {
}
try { new C31(); } catch (e) {}
const v33 = new C31();
const v34 = v33?.constructor;
try { new v34(); } catch (e) {}
function f36() {
    return f36;
}
const v37 = f36.arguments;
function f38() {
    for (let v39 = 0; v39 < 5; v39++) {
        36862 >> 36862;
        const v44 = Array(36862, v37).reverse();
        let v45;
        try { v45 = v44.copyWithin(v33); } catch (e) {}
        const v46 = v45?.find;
        try { new v46(v20); } catch (e) {}
        try { v45.fill(v39); } catch (e) {}
    }
    return f36;
}
f38.arguments = f38;
f38.c = f38;
%PrepareFunctionForOptimization(f38);
const v49 = f38();
let v50;
try { v50 = v49(); } catch (e) {}
try { new v50(); } catch (e) {}
%OptimizeFunctionOnNextCall(f38);
f38();
