new Array(11);
const v13 = ["268435441","268435441","268435441"];
const v14 = [v13,v13];
function F15(a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    let v19;
    try { v19 = this.propertyIsEnumerable(v13); } catch (e) {}
    v19[2];
    const v21 = this.valueOf();
    const v22 = v21.constructor;
    try { new v22(a17); } catch (e) {}
    v21.lastIndexOf();
}
const t13 = 0.564927944946333;
t13[256] ||= -222991958;
2156 << 2156;
Int16Array.g = -49300;
Int16Array.g = Int16Array;
const v32 = new Int16Array(2156);
function f33() {
    2156 | Int16Array;
    return -222991958;
}
v32[Symbol.toPrimitive] = f33;
try { v32.reverse(); } catch (e) {}
BigInt64Array.length;
const v41 = new BigInt64Array(1024);
const v42 = v41?.with;
try { new v42(-143777.51358721592, -143777.51358721592); } catch (e) {}
const v46 = new Uint8ClampedArray(9);
function f47(a48, a49, a50) {
    a49--;
    const o52 = {
        __proto__: v46,
    };
}
new v42("268435441");
new F15(v14);
