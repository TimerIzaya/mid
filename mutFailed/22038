4 <= 731122.4801480968;
function f6(a7, a8, a9, a10) {
    const v11 = a8 >>> a8;
    (v11 >>> v11) != -256;
    for (let v14 = 0; v14 < 5; v14++) {
    }
    return -256;
}
const v16 = new Uint32Array(4);
65537 < 4096n;
const v20 = [58584,15,9007199254740990,2146023485];
const v21 = [46733,-268435456];
Object.defineProperty(v20, 65537, { writable: true, value: v21 });
let v22 = Uint32Array % v16;
v22 ||= v22;
let v23;
try { v23 = v21.toString(); } catch (e) {}
const v25 = Symbol.iterator;
const o34 = {
    [v25]() {
        let v27 = 10;
        const o33 = {
            next() {
                v27--;
                const v31 = v27 == 0;
                const o32 = {
                    "done": v31,
                    "value": v27,
                };
                return o32;
            },
        };
        return o33;
    },
};
const v37 = new Int8Array(5);
v37[f6++] = 5;
Object.defineProperty(v25, "b", { configurable: true, enumerable: true, value: -0.0 });
v20[731122.4801480968] = -256;
o34[7] = Int8Array;
new Int16Array(4087);
[-515617499,9007199254740990,1794867738,-2147483647,4,8];
[1073741824,1155028686,-4,1022797559];
function F44(a46) {
    if (!new.target) { throw 'must be called with new'; }
}
const v47 = new F44();
v47.g;
const t47 = -0.0;
t47.constructor = gc;
class C50 {
}
[];
const v52 = [];
new Map();
function F55(a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    const v59 = this.constructor;
    try { new v59(); } catch (e) {}
    const o71 = {
        0: v52,
        162: "1ya",
        toString(a63, a64, a65, a66) {
            try { v23(a65, Uint32Array, a65, a64); } catch (e) {}
            try {
                Symbol("-5");
            } catch(e70) {
            }
            return "1ya";
        },
    };
}
const v72 = new F55();
const v74 = new Int32Array();
const v78 = new Uint8ClampedArray();
const v79 = new Int32Array(3208);
const t76 = v74.constructor;
new t76(v78);
Int32Array.from(v79);
const v83 = new F55(Map, Map);
new F55(v72, v83);
let v85 = 16;
v85--;
const v88 = new Int8Array(v85);
v88.toSorted();
const o94 = {
    ...65536,
    5: 65536,
    __proto__: Int8Array,
    valueOf(a93) {
        return a93;
    },
    "g": 65536,
    163: 4,
};
