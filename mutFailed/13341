let v3 = 0;
const v4 = v3++;
const v5 = v4 ^ v4;
class C6 {
}
class C7 {
    static b;
    static #o(a9) {
        const v10 = `
            for (let v11 = 0; v11 < 32; v11++) {
                this["p" + v11] = v11;
            }
            const v14 = [520126.03439582814,827116.4087908485,-3.0];
            const v16 = new Int16Array();
            function f18() {
            }
            function f19(a20, a21, a22, a23) {
                const v24 = f18();
                const v26 = new Int8Array(v16);
                class C27 {
                }
                [-1024];
                for (let v29 = 0; v29 < 5; v29++) {
                }
                139837843 in v16;
                const v33 = 0 <= 0;
                const v34 = new Int8Array(v14, v5, v5);
                for (const v35 in v34) {
                    0 ^ v33;
                }
                BigUint64Array * 536870887;
                function f40(a41, a42) {
                    return v24;
                }
                Object.defineProperty(v26.buffer, "constructor", { writable: true, configurable: true, value: Date });
                new Int8Array();
                return f19;
            }
        `;
        eval(v10);
        return v10;
    }
}
new C7();
const v48 = new C7();
const v49 = new C7();
const o53 = {
};
const v55 = new Proxy(C7, o53);
function f57(a58) {
    this.print(this, this);
    return v49;
}
Uint32Array.toString = f57;
const v62 = new Date(Uint32Array);
v62.getMonth();
const t55 = "9007199254740992";
t55["255"] &= 7;
const v67 = -268435456n !== v55;
v67 ? -268435456n : v55;
new Map();
const o77 = {
    get f() {
        return v48;
    },
    n(a73, a74, a75) {
        super.h = a74;
        try { a75(v67, a74); } catch (e) {}
        return -1169476478n;
    },
};
function f78(a79, a80, a81, a82) {
    return f78;
}
Object.defineProperty(o77, "f", { enumerable: true, get: f78 });
