function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 536870889;
    } catch(e3) {
    }
    try {
        this.g = 536870889;
    } catch(e4) {
    }
}
const v5 = new F0();
new F0();
const v7 = new F0();
[15,1080664885];
const v9 = [-38140,4294967295,15,0,7,-4294967295];
const v10 = [1761522167,-2049484612,424202004,59787,52373,2,65537];
function F11(a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v5;
    } catch(e15) {
    }
}
new F11(v10, v7);
new F11(v9, v5);
new F11(v9, v7);
new Int16Array(214);
new Uint32Array(1);
function F29(a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    function F34(a36, a37, a38, a39) {
        if (!new.target) { throw 'must be called with new'; }
        for (let v40 = 0; v40 < 100; v40++) {
            const o43 = {
                valueOf(a42) {
                },
            };
            function f44(a45, a46, a47) {
                const o49 = {
                    "a": o43,
                    get d() {
                    },
                };
            }
            f44(undefined);
        }
    }
    new F34();
}
new F29(157382.34669750673);
new F29();
class C54 {
}
class C55 extends v10 {
    constructor(a57, a58, a59) {
        super();
        const o61 = {
        };
        gc(o61);
    }
}
new C55();
for (let i66 = 0, i67 = 10; i66 < i67; i67--) {
}
new Int8Array(3);
class C76 {
    constructor(a78) {
        ("valueOf").localeCompare(a78, "valueOf");
    }
}
new C76();
Object.defineProperty([58584,15,9007199254740990,2146023485], 65537, { writable: true, value: [46733,-268435456] });
("I").localeCompare();
