const v1 = new Date();
class C2 {
    0 = v1;
    valueOf(a4) {
        const v5 = delete v1[3436026535];
        const o8 = {
            "maxByteLength": 3905207448,
        };
        const v10 = new SharedArrayBuffer(-2, o8, v5, 3905207448);
        const v12 = new BigUint64Array(v10);
        return v12;
    }
}
const v13 = new C2(v1, v1);
const v14 = new C2();
typeof Date === "bigint";
Object.defineProperty(v13, "e", { writable: true, configurable: true, get: Date });
new Date();
new C2();
[16,-8,1004854573,9007199254740992,-10,268435440,15346,-53018];
[43516,29050,512,-256];
[4,-1073741824,-256,-4294967297,-16,63025,-4294967296,-506096207,-65536,10];
function F31(a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    const v35 = this?.constructor;
    try { new v35(this, this); } catch (e) {}
    try {
        this.c = 15;
    } catch(e37) {
    }
}
new F31(15);
const v39 = new F31(F31, 15);
class C40 extends F31 {
    [1073741823n];
    c = v39;
    o(a42, a43, a44, a45) {
        return a44?.d;
    }
    g = v14;
}
new C40();
new C40();
new C40();
