class C3 {
    static [C3];
    get a() {
        let v5;
        try { v5 = this.map(this, this); } catch (e) {}
        let v7;
        try { v7 = this["o"](v5, "128", "128"); } catch (e) {}
        const v10 = -425087802 >>> -425087802;
        class C12 extends Array {
        }
        const v13 = new C12();
        try { v13.group(v10); } catch (e) {}
        DataView.hasInstance;
        function F16() {
            if (!new.target) { throw 'must be called with new'; }
            this.a = 47398;
        }
        const v19 = new F16();
        const v20 = new v7();
        const v21 = new F16();
        function f23(a24, a25, a26, a27) {
            a24.a = a25;
            return a26;
        }
        f23(v19, 9007199254740991);
        f23(v20);
        const o30 = {
            ...v21,
        };
        return ("o")[F16];
    }
    [4];
}
const v32 = new C3();
const v33 = new C3("128", "128", -0.0);
const v34 = new C3();
const v35 = [4,C3];
const v36 = [v32,v32,v33,v35,C3,v34,v35,v35];
const v37 = [v36];
const v38 = [v36,v35,v35,4];
[v37,v32,[v38,v34,v38,v38],v36];
C3.sin(-9007199254740991);
