function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = -60105;
    } catch(e3) {
        try {
            this.e = this;
        } catch(e4) {
        }
        try {
            this.fuck("source", -60105);
        } catch(e7) {
        }
    }
}
new F0();
const v9 = new F0();
const v10 = new F0();
[2,4096,1737276602,-904921168,48737,-31945033,1020098506,7,145191567,4294967297];
const v12 = [0,6,-31630];
const v13 = [0,-1924423128,64,0,-1,4,9007199254740990,7,-9007199254740992,-2147483648];
class C18 extends F0 {
    static {
        let v20;
        try { v20 = this(1024, this, v12, v12, v9); } catch (e) {}
        function F21(a23, a24) {
            if (!new.target) { throw 'must be called with new'; }
            a24++;
            try {
                this.e = a23;
            } catch(e26) {
            }
            try {
                this.b = v20;
            } catch(e27) {
            }
        }
        const v28 = new F21(v9, 0);
        v28.e = v28;
        const v29 = new F21(v20, 0);
        new F21(v29, v29);
    }
}
let v31;
try { v31 = C18.call(v10); } catch (e) {}
new C18();
new C18();
const v34 = [-6,129,-911213823,-8265,9007199254740990,65536,410,5];
[-4564,-7438,268435456,-4294967295,2,-256,-9,2147483648,7,-4294967296];
const v36 = [6,-1355842668,-2147483649,64];
try { v36.with(v13, v13); } catch (e) {}
new Uint32Array(1676);
3444 / 3444;
BigUint64Array.prototype = BigUint64Array;
new BigUint64Array(3444);
const v47 = new Uint32Array(13);
v47[8] = v47;
const v48 = new C18();
const v49 = v48.a;
const v50 = [];
try { v50.sort(v36); } catch (e) {}
Float32Array.e = Float32Array;
("has").matchAll("has");
("has").next();
const v58 = new Uint16Array();
const v59 = v58[877];
let v60 = 15135;
const v61 = v60--;
const v63 = gc();
new BigInt64Array();
const v66 = v31.entries();
try { v66.__defineSetter__(v59, v61); } catch (e) {}
new Float32Array(4061, 4061);
class C70 extends v50.constructor {
    static #a;
    #f;
    static #g = v34;
    static g = v49;
    static f;
    [4061] = v63;
    3;
}
try { new C70(); } catch (e) {}
new C70();
