let v1 = 268435456n;
class C3 {
    static m(a5) {
        return v1;
    }
    [3n] = 3n;
    static {
        const v10 = this.e;
        try { this.m(v10, this, -1882879017n, this); } catch (e) {}
    }
    [-1882879017n];
}
v1 >>>= 3n;
new Uint8Array(209);
new Uint8Array(128);
new Uint8ClampedArray(2);
const v21 = new C3();
const v22 = new C3();
const v23 = new C3();
class C27 {
    3;
    constructor(a29, a30, a31) {
        try {
            this.f = a29;
        } catch(e32) {
        }
    }
    #m(a34, a35) {
        this.d <<= -7;
        /w?/umsy;
        /q(?:ab|cde)[\p{Script_Extensions=Mongolian}&&\p{Number}]+/im;
        /a||bc+/di;
        return v21;
    }
}
const v39 = new C27(v21, v21, v1);
new C27(v22, v39, v1);
new C27(v1, -1882879017n, v1);
for (const v44 in v23) {
    C3[v44] *= 209;
    [1073741823,512,-39788];
    [-9007199254740992];
    [41294,-2147483648,256,-465873019,-4,52015,-25478,9];
}
function f49(a50, a51, a52, a53) {
    try { new a50(); } catch (e) {}
    a51 & a51;
    const v56 = 3 | a51;
    v56 * v56;
    a50 / a50;
    const v59 = a51 < a50;
    a52 >>> a52;
    const o64 = {
        n(a62, a63) {
            return v59;
        },
    };
}
for (let v65 = 0; v65 < 500; v65++) {
    f49(Uint8Array, 2);
}
