function f0() {
    const o4 = {
        "e": -1e-15,
        "g": 268435439,
        "a": 268435439,
        "b": 268435439,
        "f": 268435439,
        "c": 268435439,
        ...-2.220446049250313e-16,
        __proto__: -1e-15,
        "h": 268435439,
        "d": 268435439,
        ...268435439,
        9: 268435439,
        7: -1e-15,
        232334613: 268435439,
        ...f0,
        ...f0,
        1: -2.220446049250313e-16,
        ...f0,
        [-1]: -1e-15,
        [-1e-15]: -1e-15,
    };
    return o4;
}
let v5 = f0();
const v6 = f0();
const v7 = f0();
class C8 extends f0 {
    static c = v6;
    m(a10, a11) {
        const v12 = a11 !== v5;
        if (v12) {
            super[v12] = v12;
        } else {
            a10[v6];
        }
        return v7;
    }
    static abs(a15, a16) {
        v5 = a15;
        a15 >>> f0;
        a15 &&= a15;
        try {
            super.setInt32(v7, f0, a16, v7, a15);
        } catch(e19) {
        }
        return a16;
    }
}
let v20 = new C8();
v20[7] = v20;
const v21 = new C8();
const v22 = new C8();
class C23 {
    c;
    static get f() {
        let v24 = this;
        const v25 = super.b;
        v24 = v5;
        v20 >>>= v25;
        try {
            super.sort(v21, v7, v24);
        } catch(e27) {
        }
        return v25;
    }
    static [v5] = v20;
    127;
    #b = v7;
    4294967296;
}
C23.b = C23;
const v28 = new C23();
const v29 = new C23();
const v30 = new C23();
function F31(a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    const v35 = this?.__defineGetter__;
    try { new v35(v30, this); } catch (e) {}
    a34.g = a34;
    try {
        this.e = a33;
    } catch(e37) {
    }
}
new F31(v28, v6, v20, f0, v21);
const v39 = new F31(C23, v5);
const v40 = new F31(v6, v28);
-9340 - -9340;
1073741823 >> 1073741823;
class C46 {
    constructor(a48, a49) {
        a49 / a49;
        a49.__proto__;
    }
    f;
    set d(a53) {
        super.d;
        const o55 = {
        };
    }
}
C46.a = C46;
const v56 = new C46(-9340, 2147483649);
const v57 = new C46(-9340, 1073741823);
const v58 = new C46(1073741823, v56);
v58.f;
function F60(a62, a63, a64, a65) {
    if (!new.target) { throw 'must be called with new'; }
    a62.f = a62;
}
const v66 = new F60(v56, v57, 2147483649, -9340);
try { v66.constructor(1073741823, 1073741823, v30, v39); } catch (e) {}
const v68 = new F60(v56, v57, 1073741823, -9340);
const v69 = new F60(v56, v58, -9340, 1073741823);
const v70 = v69?.__defineSetter__;
try { new v70(-9340, -9340); } catch (e) {}
const v73 = new WeakSet(v22);
new Set();
function f77(a78, a79) {
    const v80 = a78 << a79;
    v80 >>> v80;
    F31 ^ F31;
    function F83(a85, a86) {
        if (!new.target) { throw 'must be called with new'; }
        const v87 = this?.constructor;
        try { new v87(F83, v6); } catch (e) {}
        a86[9] = a86;
        try {
            this.c = a86;
        } catch(e89) {
        }
        try {
            this.g = v56;
        } catch(e90) {
        }
    }
    new F83(v21, v7);
    new F83(v22, v28);
    const v93 = new F83(v29, v7);
    v93.length = v93;
}
const v95 = Promise?.all;
try { new v95(C46); } catch (e) {}
const v97 = new Promise(f77);
try { v97.then(v73, v40); } catch (e) {}
new Float64Array(1136);
eval.length = eval;
new eval(4);
48 >> 48;
Uint32Array.d = Uint32Array;
new Uint32Array(48);
try {
    v68.fuck(v69, 1136);
} catch(e109) {
    e109.b = e109;
}
