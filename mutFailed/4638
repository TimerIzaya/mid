class C3 {
    static #toString(a5, a6) {
        try {
            this.__proto__ = this;
        } catch(e7) {
        }
        const o8 = {
        };
        try {
            o8.a = a6;
        } catch(e9) {
        }
        try {
            const o10 = {
            };
            o10.a = a6;
            o10.f = this;
        } catch(e11) {
        }
        try {
            const o12 = {
            };
            o12.a = a6;
            o12.f = this;
            o12.e = a6;
        } catch(e13) {
        }
        try {
            const o14 = {
            };
            o14.a = a6;
            o14.f = a5;
            o14.e = this;
        } catch(e15) {
        }
        return -634.2022968566476;
    }
}
let v16;
try { v16 = C3.bind(-634.2022968566476); } catch (e) {}
v16.name = v16;
const t41 = 79.67058879362617;
const v17 = new t41();
const v18 = (79.67058879362617)?.toLocaleString;
try { new v18(); } catch (e) {}
const v20 = new C3();
const v21 = v20?.constructor;
let v22;
try { v22 = new v21(); } catch (e) {}
const v23 = new v22();
const v24 = v23?.constructor;
try { new v24(); } catch (e) {}
function f26(a27, a28, a29) {
    const v30 = a27?.constructor;
    try { new v30(); } catch (e) {}
    a28 === a28;
    a29 - a29;
    a28 >> a28;
    a29 & a29;
    const o44 = {
        "h": a28,
        "c": 79.67058879362617,
        ...a27,
        toString(a37, a38, a39) {
            v20 ^ a37;
            v17[Symbol.species] = v20;
            a39[a29];
            return a28;
        },
        "f": a29,
        "d": v20,
        ...C3,
    };
    o44.c = o44;
    return o44;
}
const v45 = f26(v23, -634.2022968566476, -634.2022968566476);
const v46 = f26(v45, 79.67058879362617, -634.2022968566476);
try { v46.toString(79.67058879362617, C3, C3); } catch (e) {}
const v48 = v46?.__defineGetter__;
try { v48.toString(); } catch (e) {}
try { new v48(v45, v46); } catch (e) {}
f26(v46, -634.2022968566476, -634.2022968566476);
const v54 = new Float64Array(94);
try { v54.findIndex(v16); } catch (e) {}
Int32Array.b = Int32Array;
const v58 = new Int32Array(6);
let v59;
try { v59 = v58.slice(v58, Float64Array); } catch (e) {}
const v60 = v59?.findLast;
try { new v60(C3); } catch (e) {}
5 >> 5;
new Int16Array(5);
const v69 = new Int32Array(2528);
v69[2249] = v69;
v69[0] %= -1073741824;
