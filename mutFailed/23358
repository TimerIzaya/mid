new Set();
const v8 = new Int32Array(3091);
new Uint16Array(1000);
new BigInt64Array(3822);
const v17 = new Uint16Array(undefined, Uint16Array, Uint16Array);
function F20(a22, a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    const v26 = this.constructor;
    try { new v26(154, a25, 154, a23); } catch (e) {}
    -a23;
    a25 <= a25;
}
const v30 = new F20(154, 129, 129, 154);
function f31() {
    ("string").normalize("NFKD");
    return v30;
}
Object.defineProperty(v30, Symbol.iterator, { configurable: true, value: f31 });
class C38 {
    static {
        try {
        const t0 = 0.44967380041772886;
        t0();
        } catch (e) {}
    }
    static f;
}
const v41 = v8.constructor;
new v41(v30, v17, v41, v17);
new F20();
new v41();
