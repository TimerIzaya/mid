new Float32Array(256);
const v3 = [-946.1982015264321,-406.6809700455609];
const v4 = [1000000000.0];
v4["p" + 256] = 256;
new Int32Array(v4, v3, Int32Array);
new Int16Array(1);
([1,8]).fill(3);
for (let v16 = 0; v16 < 10; v16++) {
    const t8 = "p";
    t8[1073741824] = 4294967296;
}
const v19 = new BigInt64Array(16);
function f23(a24, a25, a26, a27) {
    const o40 = {
        p(a29, a30, a31, a32) {
            super[a25] = super[a30];
            16 & a26;
            const v36 = a24 / a31;
            function f37() {
                return f37;
            }
            ("p").split("toString");
            return v36;
        },
        [7]: a24,
        271208711: 7,
        [v19]: a24,
        2: v19,
        "c": 256,
        "e": 16,
    };
    return o40;
}
Math.sin(1073741824);
new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
const v46 = Array(1073741824);
const v47 = [v46,v46,v46,v46,v46];
[v47,v47,v47];
f23(1073741824, 16, 256, 7);
f23(7, 16, 256, 1);
f23(-4294967297, -4294967297, -4294967297, 1073741824);
new BigInt64Array(3995);
function f57() {
    return f57;
}
class C60 {
    constructor(a62, a63, a64) {
        super(a62);
    }
    valueOf(a66, a67, a68) {
    }
    #h;
}
new C60();
class C70 extends C60 {
    constructor(a72, a73) {
        super();
    }
    o(a75, a76) {
        for (const v78 of "bigint") {
        }
        f57();
    }
}
new C70();
