const v6 = [4294967295n,9007199254740990n,1000000000000.0,2.220446049250313e-16,1000000000000.0];
const v7 = [v6,-9007199254740992n,-9007199254740992n,2.220446049250313e-16];
[v7,-9007199254740992n,v7];
new Array(10);
const t4 = -9007199254740992n;
const v13 = new t4();
function F14(a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = Set;
    } catch(e18) {
        for (let [v19,v20] of a16) {
            try {
            } catch(e21) {
            }
        }
    }
    try {
    } catch(e22) {
    }
    const v23 = v13[v6];
    try {
        new F14(v23);
    } catch(e25) {
    }
}
new Set();
const v27 = [65537,268435441,63298,-5,1235122603];
const v28 = [128,215394418];
const v29 = v28.entries();
function F30(a32, a33, a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
}
new v7();
const t34 = 0;
new t34();
const v45 = ("string").trimStart();
v29[3];
let v49;
try { v49 = v45(); } catch (e) {}
v27[v49] = v28;
~0;
(-1e-15).__proto__;
-35417 - -35417;
