new Array(512);
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a5;
    } catch(e6) {
    }
    try {
        this.h = a5;
    } catch(e7) {
    }
}
const v8 = new F3(Array);
const v9 = new F3(F3);
const v10 = new F3(Array);
const v13 = new Int32Array(152);
new Int32Array(176);
new Uint8Array(4);
function F20() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 3872;
    } catch(e23) {
    }
}
const v24 = new F20();
const v25 = new F20();
new F20();
function F30(a32, a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    [a33,a33 in v9];
    a34(512);
    v9.g;
    for (let v39 = 0; v39 < 32; v39++) {
        this["p" + v39] = v39;
    }
    try {
        this.b = a33;
    } catch(e42) {
    }
}
new F30(4294967295, F20, v24);
const v44 = new F30(62324, F30, v25);
const v46 = Symbol.toPrimitive;
const o48 = {
    [v46]() {
    },
    "b": v10,
    "g": v8,
    "c": Uint8Array,
    "h": v13,
    "f": v44,
};
