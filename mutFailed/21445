const v3 = [3.4152697499426e+307,1.9777365208832364e+307,1.0,0.22914954548297017,0.755348696020462,Infinity,-3.2324734720035914e+307,-5.1277230496579];
let v4;
try { v4 = v3.entries(); } catch (e) {}
const v5 = [4.589425425765272,-5.0,4.0,-8.101696375680856,1000000000000.0,200462.0648561872];
v5[6] = v3;
let v6;
try { v6 = v5.push(-4096); } catch (e) {}
[0.7720294374458128,-7.028960022283355e+307,-1e-15,610.2718548707164];
function f8() {
    for (let v9 = 0; v9 < 5; v9++) {
        v9++;
        v9 / v9;
        function f12() {
            return f8;
        }
    }
    return f8;
}
%PrepareFunctionForOptimization(f8);
const v14 = 525829995 - 525829995;
6 - 6;
-1086842815 * -1086842815;
function f20(a21, a22) {
    [v4,v14,a21,a21];
    [v6,-1086842815,[a21,a21,v4,-4096],a22,v4];
    return a22;
}
String[Symbol.toPrimitive] = f20;
const v28 = new String(String);
class C29 {
    #p(a31, a32, a33, a34) {
    }
    constructor(a36, a37) {
        try {
            v28.#p();
        } catch(e39) {
        }
    }
}
let v41 = 536870888n;
v41--;
const v44 = [];
v44.toString = Symbol;
function f45() {
    return v44;
}
try { f45(); } catch (e) {}
let v47 = 0.0;
v47++;
-3.0 / -3.0;
let v51 = -40875;
v51--;
const v54 = Math.atan2(v44, v51);
const v55 = v54 >>> v54;
~v55;
function f58(a59, a60, a61) {
    return a60;
}
class C62 extends f58 {
}
function f63(a64) {
    return 525829995;
}
C62.constructor = f63;
for (let i70 = 0, i71 = 10;
    (() => {
        const v72 = i70 < i71;
        class C73 {
        }
        function f74() {
            return v55;
        }
        function f75(a76) {
            const v78 = new Int32Array();
            v78.length;
        }
        Object.defineProperty(C73, "h", { writable: true, enumerable: true, get: f74, set: f75 });
        function f80(a81, a82, a83, a84) {
            a81 + a81;
            a82.h = a82;
            let v86 = 10;
            v86 >= v86;
            for (; v86--;) {
            }
            try { a82.apply(a81); } catch (e) {}
        }
        f80(i71, C73);
        %OptimizeFunctionOnNextCall(f80);
        return v72;
    })();
    i71--) {
}
try { new C62(); } catch (e) {}
for (let v97 = 0; v97 < 5; v97++) {
    Object.defineProperty(C62, Float32Array, { enumerable: true, get: f58 });
}
-3.0 % -3.0;
64216.173742571846 >>> 64216.173742571846;
function f101(a102, a103) {
    a102 % a102;
    a103--;
    a102 >> a102;
    a102 + a102;
    const v108 = a103 >> a103;
    const v109 = v108 >>> v108;
    v109 + v109;
    const o124 = {
        [-2]: a102,
        ...-3.0,
        ...v44,
        ...v54,
        get a() {
            Math.acos(v47);
        },
        "a": -3.0,
        set g(a115) {
            const v116 = v44.__proto__;
            Math.acosh("9g9Ak");
            new Uint16Array(209);
            v116 < a103;
        },
        "h": a103,
        "c": -3.0,
        ...v44,
        "b": a102,
        4: a103,
    };
    return o124;
}
const t129 = "Bl4";
t129[0] = "Bl4";
const v127 = new BigUint64Array("Bl4");
function f128(a129) {
    const v130 = C29.h;
    class C131 {
    }
    return v130;
}
v127[Symbol.toPrimitive] = f128;
try { v127.copyWithin(v127, v44); } catch (e) {}
const v136 = new Int32Array();
try { v136.entries(); } catch (e) {}
for (let v138 = 0; v138 < 25; v138++) {
    v138 & v138;
    v136.__proto__ = v127;
}
const v140 = f101(v47, v47);
v140[4];
const v142 = f101(64216.173742571846, 64216.173742571846);
const v145 = new Uint8Array(3346);
Float64Array.g = v127;
const v147 = new Float64Array(3346, 3346, 3346);
v147.constructor = f45;
const v148 = v147.constructor;
v148.g = v4;
v148.g = v148;
const v149 = new v148(v145);
v149[682] = v149;
const v150 = v142[4];
v150 / v150;
const v153 = [155533.8602852358,2.0];
Object.defineProperty(v153, 658291203, { enumerable: true, value: String });
try { v153.fill(f101); } catch (e) {}
function F156() {
    if (!new.target) { throw 'must be called with new'; }
    let v158 = 0;
    while (7 !== 7, v158 < 7) {
        const v162 = Array(v158);
        try { v162.findLast(this); } catch (e) {}
        v158++;
    }
    let v165 = 19793;
    v165--;
    for (const v168 of Array(v165)) {
        v153[658291203] = null;
    }
}
const v169 = new F156();
const v170 = v169?.__defineGetter__;
try { new v170(Array, v5); } catch (e) {}
f101(64216.173742571846, -3.0);
let v173 = 64n;
v173 ^ v173;
const v175 = v173--;
gc();
const v178 = [-1000.0,1000000000.0];
const v179 = [0.0,-605.6883350474525,-2.2250738585072014e-308,2.8064173070154015e+307,-0.0,NaN,-1.7976931348623157e+308,-1.7976931348623157e+308,1.1567619127528594,2.2250738585072014e-308];
let v180;
try { v180 = v179.lastIndexOf(v54); } catch (e) {}
v180 - v180;
8n + 8n;
let v184 = 37369;
-4294967297n <= -4294967297n;
-128 < -128;
const v189 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v190 = [601759695];
try { v190.sort(v145); } catch (e) {}
function f193() {
    const o210 = {
        "c": -4294967297n,
        [522675525n](a198, a199) {
            try {
            } finally {
            }
        },
        ..."Vre",
        "maxByteLength": -128,
        "c": v190,
        valueOf(a201, a202) {
            return String;
        },
        "e": -4294967295,
        "e": -268435456,
        "maxByteLength": -4294967295,
        "arguments": v189,
        ...v190,
        "type": "Vre",
        ..."Vre",
        valueOf(a204, a205) {
            return v175;
        },
        ..."Vre",
        4: "Vre",
        "c": -268435456,
        "type": "Vre",
        "type": "Vre",
        toString(a207, a208, a209) {
            return v175;
        },
        5: -4294967295,
        6: -268435456,
    };
    return "Vre";
}
const v211 = v184--;
v211 + v211;
function f213(a214, a215) {
    const o223 = {
        valueOf(a217, a218) {
            return Int32Array;
        },
        [v145]: v178,
        "arguments": v5,
        [v173]: 8n,
        __proto__: a215,
        [v184]: a215,
        /*
        __proto__: f101,
        */
        ...v178,
        5: v55,
        m(a220, a221) {
            v47++;
            return a221;
        },
        [a214]: a214,
        ...a214,
        5: v178,
        ...v44,
    };
    return o223;
}
9007199254740991n / 9007199254740991n;
const v229 = C62?.constructor;
try { v229(v140); } catch (e) {}
class C232 {
    static {
        try { this.call(v145); } catch (e) {}
        try {
        const t0 = 0.44967380041772886;
        t0();
        } catch (e) {}
    }
    static f;
}
try { new C232(); } catch (e) {}
class C238 {
}
function f239() {
    function f240() {
        return f240;
    }
    const v241 = f240();
    for (let v242 = 0; v242 < 5; v242++) {
        try { ("p").indexOf(v241); } catch (e) {}
        try { ("p").fontcolor(v242); } catch (e) {}
        "p" + v242;
    }
    return v241;
}
C238.then = f239;
C238.g = C238;
const v248 = ("string")[3];
try { v248.toLocaleUpperCase(); } catch (e) {}
Symbol.b = gc;
const v251 = Symbol.iterator;
Symbol.b = Symbol;
Symbol.for(v251.description);
const t297 = "string";
t297[v251] = v251;
try { BigInt64Array.from(4294967297); } catch (e) {}
new BigInt64Array();
async function f258(a259, a260, a261, a262) {
    const v263 = await C238;
    try { v263.bind(a260); } catch (e) {}
    let v265;
    try { v265 = new v263(); } catch (e) {}
    const v266 = v265?.constructor;
    try { new v266(); } catch (e) {}
    return a261;
}
f258.b = f258;
try { f258.toString(); } catch (e) {}
const v269 = f258();
v269.constructor = Symbol;
try { v269.finally(null); } catch (e) {}
