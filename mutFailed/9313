new Date();
function f5() {
    return "NaN";
}
class C6 {
    set f(a8) {
        const o9 = {
            "d": "reduce",
            "c": Date,
            "f": a8,
            "g": a8,
            "a": a8,
            597679773: a8,
        };
    }
    constructor(a14, a15) {
        const v16 = [this,Date,this];
        [v16,"NaN","NaN"];
        [Date,"string",v16,"NaN"];
        ("NaN").length;
    }
}
const v21 = new C6("NaN", "NaN");
const v22 = new C6(f5, "reduce");
new C6("reduce", v22);
let v27 = 0;
while (v27 < 5) {
    try {
        Date();
    } catch(e31) {
    }
    Date[Date];
    /3\u0060/gvs;
    /ab|c/vdms;
    /a\w\11(?<a>.)\k<a>/gd;
    const o36 = {
        "call": f5,
        "getOwnPropertyDescriptor": Date,
        "has": Date,
        "ownKeys": Date,
    };
    new Proxy(v21, o36);
    v27++;
}
class C40 extends C6 {
    static [-2] = f5;
    static d = 9007199254740992;
    323 = 3;
    valueOf(a42, a43, a44, a45) {
        for (let v46 = 0; v46 < 32; v46++) {
            Date["p" + v46] = v46;
        }
        return a44;
    }
    268435439;
    e;
    [9007199254740992];
}
new C40();
new C40();
const v52 = C40.d;
for (let v53 = 0; v53 < 32; v53++) {
    Date["p" + v53] = v53;
}
new C40();
new C40();
const v63 = ("boolean").repeat(1000000.0);
try { v63.trimEnd(); } catch (e) {}
function f65(a66, a67) {
    const o70 = {
        set d(a69) {
        },
        "a": a66,
    };
    const v73 = new Int8Array(268435456);
    for (let i75 = 0;
        i75 < 1;
        (() => {
            const o81 = {
                "maxByteLength": 1073741824,
            };
            const v83 = new ArrayBuffer(155, o81);
            new BigUint64Array(v83);
            i75++;
        })()) {
        let {"c":v88,} = v52;
    }
    return v73;
}
try { f65(15135); } catch (e) {}
f65(925.1427495594241);
