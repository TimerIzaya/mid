let v0 = [];
const v2 = [-1.0,-1000000.0];
const v3 = [-698.720767324698,-1.9074601011710683,-2.220446049250313e-16];
try { v3.entries(); } catch (e) {}
const v5 = [0.5353031175385757,1.4797491068205871e+308];
Array(Array);
Int32Array.bind(Int32Array, Int32Array, Int32Array, Int32Array, Int32Array);
const v11 = /ga\W/gvdmy;
const v14 = -4.380315352541508e+307 >> 129;
const v17 = [[/D[\p{Script_Extensions=Mongolian}&&\p{Number}]*/udisy]];
let v18 = /[\0]/guim;
/ab|ca\wBxyz{0,1}/gi;
class C20 {
    static [-4.380315352541508e+307] = v5;
    toString(a22, a23, a24) {
        const o25 = {
        };
        const o26 = {
        };
        Int16Array[0] = 8;
    }
    get e() {
        v2[v0] = this;
        v0[4294967296] = v11;
        v18--;
        const v31 = /EyL9/uim;
        const v32 = [-1300791131,33477,0,5,-48254,14,4294967295,545422795];
        function F33() {
            if (!new.target) { throw 'must be called with new'; }
            const v37 = [gc,v31];
            Reflect.apply(v32.push, v31, v37);
        }
        new F33();
        v0 = v3;
        return v11;
    }
    constructor(a42, a43, a44, a45) {
        function f46() {
            try { new a45(...true, v14, v14, ...v17, ...v17, ...v5); } catch (e) {}
            Object.defineProperty(this, "h", { get: Array, set: Array });
            return 2433;
        }
        a45[Symbol.toPrimitive] = f46;
        try { a45.map(v0); } catch (e) {}
        const v51 = v5[v2];
        let v52 = 0;
        do {
            try { new v51(v0, true, v52); } catch (e) {}
            ([-4096,-20696,-256,6,2,-8,50167,-1,6,-145566366])?.__lookupSetter__;
            try { new v17(v3); } catch (e) {}
            [-1073741824,43032,-536870912,-1841059491];
            try { v2.pop(); } catch (e) {}
            [128,-12,11];
            v52++;
        } while (v52 < 10)
    }
}
const t57 = 2433;
t57.f = C20;
const v63 = new C20(v11, v0, v18, v2);
v63.e = v63;
const v64 = new C20(v0, v0, v63, v2);
v64.e = v64;
new C20(true, v3, v64, v0);
class C66 extends C20 {
    n(a68, a69, a70, a71) {
        const v72 = v0.__proto__;
        function F73(a75, a76, a77) {
            if (!new.target) { throw 'must be called with new'; }
            this.f = this;
            try {
                this.f = v64;
            } catch(e78) {
            }
        }
        const v79 = new F73(this, a71, v0);
        const v80 = new F73(v79, a71, v0);
        new F73(v80, a68, a68);
        return v72;
    }
    static #h = v5;
    static #g;
}
const v82 = new C66();
try { v82.n(v64, v64, v64, C66); } catch (e) {}
const v84 = new C66();
const v85 = new C66();
try { v85.n(v64, v64, v64, v84); } catch (e) {}
const v87 = [536870887,-60324,23228695,26098,13,2];
for (let v88 = 0; v88 < 5; v88++) {
    function f89() {
        class C91 {
        }
        const v92 = (a93, a94, a95) => {
            let v96 = a93 & a93;
            ({"h":v96,"length":a93,...v96} = a95);
            return a95;
        };
        try { C91.bind(C91); } catch (e) {}
        const v98 = new C91();
        function F99() {
            if (!new.target) { throw 'must be called with new'; }
        }
        class C102 extends Date {
            static get c() {
                const v104 = `
                `;
                eval();
            }
        }
        const v107 = v98?.constructor;
        try { new v107(); } catch (e) {}
        v92.isPrototypeOf(v87);
        const o110 = {
            4: "Vre",
        };
        return v88;
    }
    f89();
    %OptimizeFunctionOnNextCall(f89);
}
