const v2 = new Int32Array(Int32Array);
new Uint32Array(16);
new Int32Array(131);
function F9(a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v2;
    } catch(e14) {
    }
    try {
        this.a = Int32Array;
    } catch(e15) {
    }
    try {
        this.g = a12;
    } catch(e16) {
    }
}
new F9(14, 16, 16);
new F9(14, 16, 14);
new F9(14, 131, 131);
const v23 = [0.48879817238347556,2.2250738585072014e-308,1000.0,1000.0,-681.8004556870678,-1000.0,-1.5737380958439236e+306];
function F24(a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = 4411;
    this.g = 4411;
    const v29 = [2.412578955630149,2.7008822875610345,-2.220446049250313e-16,-1.0,-1000000000.0,-1.0,3.9002388983145044e+307,-Infinity,-1e-15,-4.2464820531165003e+307];
    Object.defineProperty(v29, "toJSON", { configurable: true, value: F9 });
    const v30 = [-1e-15,4.0,362.9742459010415,1.488212487511409e+308,3.0];
    class C31 {
        constructor(a33, a34) {
            super[v30] = v29;
        }
    }
    const v35 = new C31(v29, v30);
    function f36(a37) {
    }
    const v40 = [v35];
    const o41 = {
        "arguments": v40,
        "type": "function",
    };
    new Worker(f36, o41);
}
new F24(531531810, v23, 531531810);
class C44 {
}
