function F1(a3, a4, a5) {
    if (!new.target) { throw 'must be called with new'; }
    return arguments;
}
const v7 = new F1();
v7.e = v7;
const v12 = new Int32Array(2310);
new BigUint64Array(2516);
class C23 {
    toString(a25, a26, a27) {
        let v28;
        try { v28 = new this(); } catch (e) {}
        super.e;
        try { new a26("setUint16", 43156); } catch (e) {}
        let {"b":v31,"g":v32,"h":v33,} = v28;
        this[2147483648] %= 256;
        const t16 = "setUint16";
        t16[v28] ||= 43156;
        super.a;
        const v35 = ("h").__proto__;
        function f36() {
            return f36;
        }
        function f37() {
            return f37;
        }
        v35 > 256;
        return a27[4294967297];
    }
    ["1"] = -48797;
    constructor(a41, a42) {
        super.g = this;
        const v44 = Symbol.iterator;
        const o49 = {
            [v44]() {
                const o48 = {
                    next() {
                        const o47 = {
                        };
                    },
                };
            },
        };
    }
}
new C23(4294967297, v12);
new Uint8Array(256);
const v54 = new BigUint64Array();
const v55 = [];
const v56 = new v54();
["object",v56.toString(),"object",v55];
function f63() {
    return f63;
}
class C64 {
    constructor(a66, a67) {
        const v68 = this.constructor;
        try { new v68(this, v68, a66, a66); } catch (e) {}
        (f63 >= a66) instanceof f63;
    }
}
new C64(f63, f63);
for (let v73 = 0; v73 < 5; v73++) {
    function f74() {
        const v75 = [-1.5424212036356715e+308];
        try { v75.findIndex(); } catch (e) {}
        const v77 = v75.shift(f74);
        const o82 = {
            __proto__: 2,
            ...v73,
            p(a80, a81) {
                return a81;
            },
        };
        ~v77;
        return v73;
    }
    f74();
    %OptimizeFunctionOnNextCall(f74);
}
