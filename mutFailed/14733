const v2 = new Float32Array(26);
new BigInt64Array(215);
let v8 = 798;
const v10 = new Uint8ClampedArray();
const v12 = eval();
v10[9];
try { v2.every(v12, v10); } catch (e) {}
const v18 = new Uint8ClampedArray(v8, ...v10, v12);
v18.findLastIndex;
new BigUint64Array(15);
[6.124272065144275];
[464626.8600683878,543.957958321794,-1000000000000.0,338297.5925717752,-391260.1981607999,-5.028595951846923e+307,0.3937717541331378,-888316.1669926615,77020.21140351798,-1.0];
eval("toDateString");
%PrepareFunctionForOptimization(eval);
eval("toDateString");
eval("toDateString");
%OptimizeMaglevOnNextCall(eval);
eval("toDateString");
const v30 = [-1.091849526286669e+308,-1.4762611200066415e+307,-2.220446049250313e-16,1.0,864.6273807829193,2.2250738585072014e-308,3.0,-469695.44699824485,-1e-15];
class C32 {
}
function F33(a35, a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    48979n instanceof C32;
    const v39 = a36 === a36;
    const v40 = v39 ** v39;
    v40 - v40;
}
function F42() {
    if (!new.target) { throw 'must be called with new'; }
    function F44() {
        if (!new.target) { throw 'must be called with new'; }
    }
    return arguments;
    const v47 = [0.021647043302781555,982.9822277058386,68.55386187204931,-3.6548181863708407e+307,0.20797002453168356,1000000.0,-569469.7761417266,-3.877892592640821,Infinity,5.0];
    const v48 = v47.toLocaleString();
    v48.toWellFormed(v48, v47, v47);
    const v50 = new F44();
    const v51 = v50.__defineSetter__;
    try { v51(); } catch (e) {}
    for (; v8--;) {
    }
    function f54(a55, a56) {
        const o57 = {
        };
        return o57;
    }
    const v58 = f54();
    function f59() {
    }
    const v62 = new Float32Array();
    for (const v63 of v62) {
        Object.defineProperty(v58, Float32Array, { configurable: true, enumerable: true, get: f54, set: f59 });
    }
}
new F42();
try {
    new F42();
} catch(e66) {
}
Object.defineProperty(v30, 2551248950, { writable: true, enumerable: true, get: eval });
new F42();
Array(26);
536870912n << 536870912n;
1.327943550607859e+308 > 1.327943550607859e+308;
new F42();
const v77 = new Date();
v77.setYear(2.0);
("Vre").constructor;
