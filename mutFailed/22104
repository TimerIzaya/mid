function f0() {
}
const v1 = [14,3,-1877742083,-2,9];
[268435441,1000,1024,9007199254740991,9007199254740990,6];
const v3 = [53964,2069530343];
v3.g = v3;
v3[1] = v3;
class C7 extends f0 {
    static #p(a9, a10, a11) {
        function f12(a13) {
            return a9;
        }
        class C14 extends f12 {
            static f = -3.0;
            g = f12;
            static #d = f12;
        }
        return a10;
    }
    static [v1] = 2.0;
    static b;
    [-3.0];
}
let v15;
try { v15 = new C7(); } catch (e) {}
const v16 = v15?.isPrototypeOf;
let v17;
try { v17 = new v16(v3); } catch (e) {}
const v18 = new C7(-3.0, v16, v17);
const v19 = v18?.__defineSetter__;
try { new v19(C7, C7); } catch (e) {}
try { new v19(2.0, v3); } catch (e) {}
const v22 = new C7(v15, 2.0, 2.0);
const v23 = v22?.__defineSetter__;
v23.g = v23;
try { new v23(v1, v22); } catch (e) {}
new C7(-3.0, v3, v22);
[-2.0,-0.635440237673599,1e-15,5.0];
const v27 = [1000000000000.0,28560.545070337015,1.7261371858679394e+307];
try { v27.reduce(C7); } catch (e) {}
[643085.9448496967,4.0];
try { Float32Array.bind(Float32Array); } catch (e) {}
const v33 = String?.EPSILON;
v33.name = v33;
let v34;
try { v34 = new v33(f0); } catch (e) {}
const v35 = new String(v34, v18);
try { v35.replace(NaN, v18); } catch (e) {}
for (let v37 = 0; v37 < 25; v37++) {
}
Float32Array in v35;
