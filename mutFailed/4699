const v2 = new Float64Array(148);
function f5() {
    return 148;
}
function f6(a7) {
    ~f5;
}
Object.defineProperty(Int8Array, 1, { writable: true, get: f5, set: f6 });
Int8Array.name = Int8Array;
try { new Int8Array(Int8Array, 148, 148); } catch (e) {}
const v10 = new Int8Array(1024);
v10.valueOf = f6;
v10[745] = v10;
const v13 = new Uint16Array(7);
v13.toString = f6;
const v14 = v13[2];
v14 >>> v14;
v13[1] = v13;
WeakSet.g = 7;
WeakSet.g = WeakSet;
new WeakSet();
class C18 {
    get c() {
        function f20(a21, a22, a23) {
            return f20;
        }
        const o26 = {
            "type": "function",
        };
        new Worker(f20, o26);
        function f28() {
            return o26;
        }
        const o30 = {
            "type": "function",
        };
        new Worker(f28, o30);
        try {
            super.toString(this, this, this);
        } catch(e33) {
        }
        return this;
    }
    static #o(a35, a36) {
        let v37;
        try { v37 = this.findIndex(a36, v10, 148, v2); } catch (e) {}
        WeakSet & v37;
        return this;
    }
    3022011891;
}
try { C18.call(Uint16Array); } catch (e) {}
const v40 = C18?.apply;
try { new v40(v2, WeakSet); } catch (e) {}
new C18();
const v43 = new C18();
v43[3022011891];
const v45 = new C18();
v45[3022011891] = v45;
let v48;
try { v48 = ("vZa2U").strike(); } catch (e) {}
let v49;
try { v49 = v48.valueOf(); } catch (e) {}
try { v49.fontsize("vZa2U"); } catch (e) {}
const v51 = ("vZa2U").normalize("NFKC");
v51[2] = v51;
