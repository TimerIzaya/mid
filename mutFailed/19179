const v0 = [];
function f1() {
    return v0;
}
class C2 extends f1 {
    constructor(a4) {
        super();
        let v6 = 2147483648;
        Math.max(1.0);
        !-9;
        Math.sqrt(f1);
        const v12 = --v6;
        v12 && v12;
    }
}
const v14 = new C2(C2);
function f15(a16, a17) {
    const v18 = [Infinity,-686.9856326146617,0.47369378110968274,-7.24289104755818];
    const v19 = [-1000.0,-2.2250738585072014e-308,511.99933163650917,-386.8372768814137,Infinity];
    v18.includes(...v19);
    return v19;
}
v14.toString = f15;
const v21 = new C2(f1);
function f22(a23) {
    const v24 = C2[a23];
    v24 > v24 ? v24 : v24;
    return C2;
}
v21.toString = f22;
new C2(v21);
class C28 {
    n(a30, a31, a32, a33) {
        const v34 = a30 in a31;
        Object.defineProperty(a30, 7, { writable: true, configurable: true, enumerable: true, get: f1 });
        return v34;
    }
    static [v0];
    static set d(a36) {
        let v35 = this;
        v14.length;
        let v41 = "sync";
        const o42 = {
            "execution": v41,
            "type": "major",
        };
        v35 &= o42;
        Object.defineProperty("major", "major", { writable: true, configurable: true, enumerable: true, get: f1 });
        v41 -= a36;
        Map(o42);
    }
}
new C28();
new C28();
new C28();
Symbol.description = Symbol;
const v55 = new WeakMap();
const v56 = /8[\cA]v/uisy;
function f57(a58, a59) {
    v55.set([a58,a58,a58,a58]);
    ([-0.0,0.4808419851382937,521.265446647358,1000.0,1000000000.0,0.342521651011362,100.12242715110574,-1000000.0])["findIndex"](gc);
}
v56[Symbol.description] = f57;
const v67 = [3480,1024,-4294967297,-1024,512,65536,29198,-9223372036854775807,-2147483647];
try {
    v67.length = v56;
} catch(e68) {
}
