let v1 = 0.900460489184292;
class C3 {
    static #m(a5, a6, a7, a8) {
    }
    static [NaN];
    [NaN];
    static toString(a10) {
        let v11;
        try { v11 = a10.p(a10); } catch (e) {}
        try {
            v11.NEGATIVE_INFINITY = NaN;
            function f13() {
                return BigUint64Array;
            }
            class C14 extends f13 {
            }
        } catch(e15) {
        }
        return this;
    }
    10;
    static #b;
}
const v16 = new C3();
const v17 = new C3();
new C3();
class C19 {
    static n(a21, a22, a23, a24) {
        v1 = a22;
        this != a23;
        const v29 = -Infinity;
        class C30 {
            static a;
            static {
                this >> this;
                this[6];
            }
            static m(a35) {
                gc();
            }
        }
        const v38 = new C30();
        const v39 = new C30();
        try { v39.getMonth(-256); } catch (e) {}
        v16 % v38;
        Math.cbrt(-256);
        let v43 = +v29;
        const v44 = -256 >>> a22;
        v43 >> v44;
        const v48 = new Uint8Array(Math);
        new Int32Array(v48);
        v44 % a22;
        ++v43;
        ~a22;
        return v16;
    }
}
new v17();
new C19();
new C19();
new Float64Array(3);
new Uint8Array(1024);
new Uint8ClampedArray(64);
new Date(-9223372036854775807, -9223372036854775807, Date, -9223372036854775807);
