const v2 = new Int8Array(4);
new BigInt64Array(64);
new Int32Array(8);
new Int16Array(84);
new Float64Array(6);
new Uint8ClampedArray(4096);
const v22 = new Float32Array();
4294967296n | 6;
Math.round(4294967296n);
(65536 - 65536) ** (65536 * 4294967296n);
for (let v31 = 0; v31 < 25; v31++) {
    let v32 = 0;
    do {
        try { new Int16Array(0.8925521507558476, 84, ...-1024n, v32); } catch (e) {}
        v2[127];
        const o38 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o38);
        v32++;
    } while (v32 < 0)
    function f43(a44, a45, a46, a47) {
        a45--;
        v31[0] = a44;
        const v49 = a45 <= a45;
        const v51 = arguments.f;
        try { v51.constructor(v22, a46, v31, f43, v31, v31, v49); } catch (e) {}
        return f43;
    }
    for (let v53 = 0; v53 < 10; v53++) {
        f43();
    }
}
