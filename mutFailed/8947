const v0 = [];
const v1 = [v0];
const v2 = [v1];
const v3 = [v2,v1,v2,v2];
const v4 = [v3];
const v5 = [v1,v3,v1,v0];
const v6 = [v4,v3,v1,v4];
Symbol.iterator;
function f9(a10) {
    class C11 {
        set g(a13) {
        }
    }
    return C11;
}
try { v6.map(v0); } catch (e) {}
const v17 = new Uint8Array();
v17[8] = Uint16Array;
function F18(a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    const v22 = this.constructor;
    try { new v22(); } catch (e) {}
    function f24() {
        return F18;
    }
    %PrepareFunctionForOptimization(f24);
    f24();
    %OptimizeFunctionOnNextCall(f24);
}
Date.e = Date;
const v28 = ("async").lastIndexOf();
class C29 {
}
function f30() {
    const o31 = {
    };
    return o31;
}
const v32 = f30();
const v33 = f30();
([Uint8Array,Uint8Array])["indexOf"](v32, v33);
const v37 = new Date();
const v38 = [0.00952483356421907,-3.0,2.220446049250313e-16];
function f39() {
    return v38;
}
const v42 = new Int32Array(8);
v42[3] = 9007199254740991;
const v44 = [v37,v3];
v28.trimStart(Array);
Array(670);
const v52 = new BigUint64Array(10);
for (const v54 in v52) {
    new Float64Array(2147483647);
}
[Date,v37,[v6,v44,v37,v5,Date]];
-1.7976931348623157e+308 & -1.7976931348623157e+308;
const v62 = [-24725,-9223372036854775807,268435439,-267077871,-63246,2147483647,-12];
v62.a = v62;
v62.length = 99;
