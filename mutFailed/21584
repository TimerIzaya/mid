function f0() {
    const o4 = {
    };
    new Proxy(f0, o4);
    let v8 = 536870888;
    const v12 = v8++ - v8;
    const v13 = o4.log10(-6);
    const v14 = Proxy ^ v12;
    v14 ^ Proxy;
    const o30 = {
        "c": 10,
        ...10,
        "a": 627045.1971079742,
        set h(a17) {
            super.h;
            class C21 {
            }
            let v24 = new Float64Array(3);
            v24 ^= v13;
            const o25 = {
                "maxByteLength": v14,
            };
            const v27 = new SharedArrayBuffer(4005, o25);
            new Int8Array(v27);
        },
    };
    return o30;
}
const v31 = f0();
const v32 = f0();
const v33 = f0();
for (let v36 = 0; v36 < 5; v36++) {
    function f37() {
        return Promise.reject(Promise);
    }
    f37();
    %OptimizeFunctionOnNextCall(f37);
}
function F42(a44, a45) {
    if (!new.target) { throw 'must be called with new'; }
    const v46 = this?.__lookupGetter__;
    try { new v46(129); } catch (e) {}
    a45 >>> a45;
    try {
        this.c = v33;
    } catch(e49) {
    }
}
if (129) {
    v32[v32];
} else {
    536870887 - 129;
}
F42.length = F42;
1073741823 < 2;
const o54 = {
};
function f55(a56, a57, a58, a59) {
    this.decodeURIComponent(a56, f55, a58);
    return f55;
}
f55();
new f0(v32, 1073741823);
const v64 = new F42(v33, 536870887);
v64.h = v64;
new F42(v31, 1073741823);
function f66() {
    return v31;
}
f66.g = f66;
const t70 = "bigint";
t70[4] = "bigint";
const v71 = -1e-15 + -1e-15;
let v73 = -(-1e-15);
v73 != v73;
v73--;
const v76 = Math.sinh(v73);
v64[Symbol.split];
try { v64.n(v32, v71, v32); } catch (e) {}
v76 >> v76;
