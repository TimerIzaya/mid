class C3 {
    set d(a5) {
        const v8 = new Int16Array(2878);
        new Float64Array(512);
        new Int16Array(224, 3.0, v8, v8);
    }
    cause;
}
const v15 = new C3();
const t9 = 3.0;
const v16 = new t9(v15, 3.0, 1.4604919291165962e+308);
const v17 = new C3();
function F18(a20, a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a21;
    } catch(e23) {
    }
    try {
        this.h = v15;
    } catch(e24) {
    }
}
new F18(C3, C3, 7);
const v26 = new F18(v15, v17, 7);
const v27 = new F18(v16, v15, v26);
new Int32Array(536870887);
new Uint8ClampedArray(255);
new Int32Array(2713);
[-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
for (let v38 = 0; v38 < 25; v38++) {
    v38[F18 + v38] = v38;
}
function F42(a44, a45) {
    if (!new.target) { throw 'must be called with new'; }
    const v46 = this.constructor;
    try { new v46(a45); } catch (e) {}
    a45 == a45;
    a44 !== a44;
    this.h = a45;
}
new F42(F42, -418967591n);
new v27();
