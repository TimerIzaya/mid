const v2 = 2147483649 << 2147483649;
const v4 = ("1866165091").normalize();
Object.defineProperty(v4, "e", { enumerable: true, value: v4 });
const v8 = new WeakMap();
const v10 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f11() {
    try {
        v10.forEach();
    } catch(e13) {
        e13.constructor(e13, 2147483649, f11, f11, f11);
        e13.a = e13;
        e13.a = e13;
    }
    return f11;
}
%OptimizeFunctionOnNextCall(f11);
new Map();
class C16 extends WeakMap {
    #g = v8;
    static {
        for (let v18 = 0; v18 < 25; v18++) {
            for (let v23 = 0; v23 < 25; v23++) {
                eval();
                v23 < v23;
                new BigUint64Array(3375);
            }
        }
    }
    p(a31, a32) {
        ([-Infinity,Infinity,959819.665748626])["concat"]([Uint32Array]);
        function F38(a40, a41) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = a41;
            } catch(e42) {
            }
        }
        v2 < v2;
        const o44 = {
        };
        const v47 = new Float64Array(1773292029);
        v47["toLocaleString"](Int32Array, 1773292029);
        new F38(58685, a32);
        new F38(58685, 1773292029);
        new F38(-2, 58685);
        return a31;
    }
}
new C16();
new C16();
new C16();
[-1000.0,9.263015524825843e+307,0.8593589718592753,1000000000000.0,-0.7586271224542944,-2.2250738585072014e-308];
[-134.15751915441865,-759067.7428785055,-1.0];
[-4.360498015580969,-3.2436314600902154,-420.3268598457514,-962738.7751570818,0.3585368841999387,1.7976931348623157e+308];
Float32Array[1] = -1e-15;
const v62 = new Uint8Array();
class C64 extends Float32Array {
    constructor(a66, a67, a68) {
        super(a68);
    }
    /*
    constructor(a70, a71, a72, a73) {
        const v74 = this.constructor;
        try { new v74(v10, f11); } catch (e) {}
        v10 >>> a71;
        a72 >>> -0.0;
    }
    */
}
new C64(1, v62, Float32Array);
