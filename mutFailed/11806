class C3 {
    f;
    static valueOf(a5, a6) {
        super.h;
        const v9 = new WeakMap();
        try { new a6(-2.220446049250313e-16, v9, v9, v9, v9); } catch (e) {}
        this.f;
        return -2.220446049250313e-16;
    }
    constructor(a13, a14, a15) {
        function f16(a17, a18) {
            return a17;
        }
        this[Symbol.toPrimitive] = f16;
        a14[4] = "pLR";
        for (let v21 = 0; v21 < 25; v21++) {
        }
    }
    ["pLR"];
    static #a = "p";
}
new C3();
new C3();
new C3();
[0.759445295509091,227.20635782039335,-773406.4503219107,145834.75212049414];
[-2.0,5.0,-0.0,-Infinity,1.0];
[-771.53072193868,2.220446049250313e-16,1.5943079228677332e+308,-1000000.0,-5.0,3.0,-1000000000000.0,6.920718191781623e+307,-9.016919889644852];
function f32() {
    let v33 = -4294967295;
    const v36 = new Uint8Array(2, 2, 2);
    function f37(a38, a39, a40, a41) {
        a39 * a39;
        const o46 = {
            "b": a38,
            "c": a41,
            ...v36,
            n(a44, a45) {
            },
        };
        return o46;
    }
    const o80 = {
        get a() {
            const v48 = new f32();
            let v50 = 8;
            const v51 = v50++;
            const v52 = v50++;
            const v54 = new Float64Array(Float64Array);
            for (const v55 in v54) {
            }
            function F56() {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    [[this],1141300185,F56];
                    let v61 = [this];
                    v61++;
                    Math.asinh(536870887);
                    +this;
                } catch(e67) {
                }
                try {
                    class C69 extends this.constructor {
                        static [1141300185] = F56;
                        e = F56;
                    }
                    new C69();
                } catch(e71) {
                }
            }
            Math.clz32(6);
            Math.log10(6);
            v52 && v51;
            +v48;
            v52 || 6;
            for (let v79 = 0; v79 < 10; v79++) {
                const t75 = "f";
                t75[1073741824] = 4294967296;
            }
            v33 %= v33;
            return f32;
        },
    };
    return f32;
}
let v81 = f32();
const v82 = f32();
const v83 = f32();
-9223372036854775808 & -9223372036854775808;
function f87() {
    return f87;
}
Array(36862, f87.arguments, -297759514 & -297759514);
class C96 extends f32 {
    static #g = "o";
    static set a(a98) {
    }
    static [v83];
    constructor(a103, a104, a105, a106) {
        super();
        try {
            v81.#g **= a103;
        } catch(e107) {
        }
    }
    static o(a109, a110) {
        v81 **= this;
        function F111(a113, a114, a115, a116) {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v117 = new F111(F111, F111, F111, F111);
        for (let v118 = 0; v118 < 25; v118++) {
            v117["p" + v118] = v118;
        }
        f32();
    }
}
const v122 = new C96(5n, "-17909", f32, "o");
new C96("-17909", "-17909", "p", "p");
new C96(v81, "p", v81, "o");
class C125 {
    get g() {
        Uint16Array();
        Uint8ClampedArray();
        BigInt64Array();
        return v82;
    }
    static #h = "p";
}
const v133 = new C125();
try { v133.o(v122); } catch (e) {}
