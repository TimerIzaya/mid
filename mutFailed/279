const v0 = [];
function f1() {
    return v0;
}
new v0(256);
Uint8Array.e = Uint8Array;
const v7 = new Uint8Array(4);
const v9 = 14 - 14;
let v10 = BigUint64Array;
const v11 = new v10(14);
class C12 {
    static c = 256;
    static e;
    constructor(a14, a15, a16) {
        try { a15.indexOf(Uint8Array); } catch (e) {}
        a16 + a16;
        %VerifyType(Infinity);
        try { Math.sign(f1); } catch (e) {}
        let v22 = 1073741824;
        let v23 = v22--;
        let v24 = --v23;
        v24--;
        let v26 = ~Infinity;
        v26--;
        --v22;
        -Infinity;
        v26++;
        --v10;
    }
}
const v32 = new C12(14, v0, 4);
const v33 = v32?.__defineGetter__;
try { new v33(v11, v9); } catch (e) {}
const v35 = new C12(4, v0, 14);
const v36 = v35?.__defineGetter__;
try { new v36(v32, v32); } catch (e) {}
new C12(256, v7, 4);
class C40 {
    f = "1073741824";
}
const v41 = new C40();
try { ("YZmA").padStart(256); } catch (e) {}
class C45 {
    [C40];
    static 1073741825;
    static ["YZmA"] = v41;
}
const v46 = new C45();
const v47 = v46?.constructor;
try { new v47(); } catch (e) {}
("YZmA")["indexOf"]("g") + "1073741824";
("YZmA")[Symbol.toStringTag];
gc.d = gc;
const o58 = {
    "execution": "sync",
    "type": "minor",
};
gc(o58);
