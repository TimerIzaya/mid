class C6 {
    static {
        try { this("findLast", "findLast", "findLast"); } catch (e) {}
    }
    static [-539739.9122084487] = "findLast";
    static set e(a10) {
        const t6 = "-9583";
        t6["-9583"] = "1073741824";
        let {"length":v11,} = "findLast";
        super[-539739.9122084487] = v11;
        "findLast" + -539739.9122084487;
    }
}
new C6();
new C6();
new C6();
const v17 = new Set();
class C23 {
    g = v17;
}
new C23();
const t21 = "findLast";
const v25 = new t21();
const v26 = ("-35960")?.__defineSetter__;
try { new v26(v25, v25); } catch (e) {}
const t25 = "1RHU";
new t25();
new BigInt64Array(66);
new Uint32Array(8);
new Uint16Array(512);
class C36 {
}
try { new C36(); } catch (e) {}
const v39 = WeakMap?.constructor;
try { new v39(BigInt64Array); } catch (e) {}
const v42 = [2.220446049250313e-16,-Infinity,NaN,-1e-15,-4.0,-2.2250738585072014e-308,-742.8087895557678,-4.0,Infinity,655658.0990783614];
try { v42.find(512); } catch (e) {}
Set.a = Set;
const v45 = new Set(v42);
try { v45.add(v45); } catch (e) {}
function F47(a49, a50) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e51) {
    }
    try {
        Math.clz32();
    } catch(e53) {
    }
}
F47.caller = F47;
new F47();
new F47();
