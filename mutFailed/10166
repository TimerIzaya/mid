const v0 = [];
let v3 = 6 >>> 1;
const v6 = new Float64Array(127);
v6[127] = 127;
v3 = 6;
typeof v0 === "function";
v6[v3] = 1000000.0;
function f15() {
    const o21 = {
        "e": 12,
        __proto__: 3.4890473589784586e+307,
        "g": 12,
        o(a20) {
            return a20;
        },
        ...1000000000000.0,
    };
    return o21;
}
function F23(a25, a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    const v28 = [-54486,11,9007199254740991,268435456,536870912,1073741823,255,1073741824,-2147483648,-3];
    function F29(a31, a32) {
        if (!new.target) { throw 'must be called with new'; }
        const v33 = this.constructor;
        try { new v33(v28, this); } catch (e) {}
        ++a32;
    }
    try {
        this.e = v0;
    } catch(e36) {
    }
    try {
        let v37 = 0;
        v37++;
        const v40 = 4294967296n * 4294967296n;
        v40 | v40;
        this.g = "trunc";
    } catch(e42) {
    }
    function f45(a46, a47, a48, a49) {
        const o52 = {
            "e": a47,
            set b(a51) {
            },
            [a48]: 1000,
        };
        return f45;
    }
    f45(-19647, -19647);
    try {
        this.b = "trunc";
    } catch(e54) {
    }
}
let v56 = Float64Array;
const v57 = new v56();
("p").lastIndexOf(v57);
f15();
Object.defineProperty("trunc", 16, { enumerable: true, set: f15 });
Object.defineProperty(v6, 79, { writable: true, set: f15 });
v56 = Float64Array;
const t61 = "trunc";
t61[v3] = v6;
const v61 = new WeakMap();
const v63 = new Int8Array();
Math.sqrt(65536);
1073741824 >>> F23;
1073741824 ** F23;
322.70331358280646 - 65536;
~322.70331358280646;
const v74 = new Uint16Array();
for (let i = 0; i < 5; i++) {
    [[v61,v74["values"](...v63, Int8Array, ..."values"),[]]];
}
const v80 = new F23(F23, 1.0, v0);
const v81 = new F23(v80, 1000000.0, v80);
new F23("undefined", 1000000.0, v81);
for (let v85 = 0; v85 < 10; v85++) {
    const t79 = "-4294967296";
    t79[Symbol.match] = 5.0;
}
