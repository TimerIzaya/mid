class C3 {
    static get h() {
        let v5;
        try { v5 = this.all(-307560.0098508138, this, -307560.0098508138); } catch (e) {}
        const v6 = v5 ** v5;
        this[v5];
        return v6;
    }
    256;
    constructor(a9) {
        a9[-307560.0098508138] = -307560.0098508138;
        const v10 = new a9();
        ([v10]).constructor;
        for (let i = 0; i < 5; i++) {
            new Date();
        }
    }
    9;
    static #g;
    f;
    static c;
}
const v15 = new C3(-307560.0098508138);
new C3(C3);
new C3(-2.0);
const v18 = [536870887,1073741823,-2026473848,-381449811,5368,12,-3];
const v19 = [-9007199254740990,4404,7,63308,-3521,1033390020];
const v20 = [-2147483647,1073741824];
class C21 {
    static #b = v15;
    static d = v19;
    set d(a23) {
        function F24() {
            if (!new.target) { throw 'must be called with new'; }
        }
        class C27 extends F24 {
        }
        try {
            v18.#b;
        } catch(e29) {
        }
        const o30 = {
        };
        try {
            o30.e = v20;
        } catch(e31) {
        }
        try {
            const o32 = {
            };
            o32.e = v20;
            o32.b = this;
            const v34 = new Int16Array();
            const v35 = v34.lastIndexOf(v34, a23);
            v35 ^ v35;
            function f37() {
            }
            const v38 = /(?:a*)+q(?<a>.)/guds;
            function f39(a40) {
                const v41 = a40.constructor;
                new Uint8ClampedArray(1000);
                try { v41(a40, f37); } catch (e) {}
                class C46 {
                }
                return f39;
            }
            f39(v38);
        } catch(e48) {
        }
        try {
            const o49 = {
            };
            o49.e = v20;
            o49.b = this;
            o49.c = a23;
        } catch(e50) {
        }
        try {
            const o51 = {
            };
            class C53 {
                static {
                    this[Symbol.hasInstance];
                }
                #p() {
                    let v59;
                    try { v59 = this.p(undefined, this, this, this, this); } catch (e) {}
                    try {
                        v59.#p(undefined, v59, v59, undefined);
                    } catch(e61) {
                    }
                    return undefined;
                }
                static #a = undefined;
                c = undefined;
            }
            const v62 = new C53();
            const o68 = {
                15: o51,
                toString(a64, a65) {
                    super.h = a65;
                    try { C53.stringify(o51, o51, this); } catch (e) {}
                    try {
                        C53.c = C3;
                    } catch(e67) {
                    }
                    return a64;
                },
                2147483647: undefined,
                __proto__: v62,
                "c": o51,
                ...o51,
                "f": o51,
            };
            o51.e = v20;
            o51.b = this;
            o51.h = v19;
        } catch(e69) {
            new Uint8ClampedArray();
            new Uint32Array(8);
            const v74 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
            try {
                v74.forEach();
            } catch(e76) {
            }
        }
    }
}
new C21();
new C21();
new C21();
class C87 {
}
const v88 = new C87();
function f98() {
    let v99 = -268435456;
    v99--;
    -(v99 + v99);
    const v104 = new Date();
    v104.setUTCMonth(2015);
    try { v88.getMinutes(arguments); } catch (e) {}
    arguments[arguments] = v88;
    return 65535;
}
