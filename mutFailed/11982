function F0() {
    if (!new.target) { throw 'must be called with new'; }
    const v3 = new Uint8ClampedArray();
    [v3,v3];
    5.0 / -2.220446049250313e-16;
    try {
        this.a = 10;
    } catch(e9) {
    }
}
const v10 = new F0();
Array();
const o13 = {
};
const v14 = [-536870912,12,65535,268435440,59916,438058862,-15,1073741823,-9007199254740990];
v14.push(v14);
const v16 = new F0();
new F0();
function f18() {
    const o20 = {
        "maxByteLength": 201,
    };
    function f22(a23, a24) {
        const o25 = {
            "g": a23,
            "h": "a",
        };
        return o25;
    }
    return v10;
}
f18.d = f18;
let v28 = -4096;
new Float64Array(Uint32Array);
const o37 = {
    get b() {
        const v35 = Array.constructor;
        new v35(this, this, Array, Array, v35);
        return this;
    },
};
const o38 = {
    ...o37,
};
v28 / v28;
const v40 = v28--;
("c").charAt(-4294967295).toUpperCase();
v40 - v40;
class C46 {
    toString(a48, a49, a50) {
        a50.a;
        v16[8] = a49;
        const o72 = {
            "c": -11,
            set g(a55) {
                try {
                    super.o(this, a55);
                    Array().unshift(3);
                    function F61(a63, a64, a65, a66) {
                        if (!new.target) { throw 'must be called with new'; }
                        const v69 = new BigInt64Array(11);
                        v69.lastIndexOf(this);
                    }
                } catch(e71) {
                }
            },
            ...a48,
            "a": a48,
            __proto__: a48,
        };
        return o72;
        return a49;
    }
    static #valueOf(a74, a75, a76, a77) {
        const v79 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
        let v80 = Float64Array;
        v79.forEach(v80 = -30828);
        const v82 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        return ("c" && v80) <= v82;
        const o89 = {
            "maxByteLength": 536870889,
        };
        const v91 = ("minor").valueOf();
        v91.split(v91);
        const v93 = [];
        v93.toSpliced(v93);
        const v96 = new SharedArrayBuffer(7, o89);
        new Int16Array(v96);
        return 2.220446049250313e-16;
    }
}
try { C46.toString(); } catch (e) {}
let v100;
try { v100 = new C46(); } catch (e) {}
const v101 = v100?.constructor;
try { new v101(); } catch (e) {}
new C46();
const v104 = new C46();
const v105 = v104?.constructor;
let v106;
try { v106 = new v105(); } catch (e) {}
const v107 = v106?.constructor;
try { new v107(); } catch (e) {}
const v109 = new C46();
const v110 = v109?.constructor;
try { new v110(); } catch (e) {}
const v112 = v109?.constructor;
try { new v112(); } catch (e) {}
v10.constructor;
new Date(-12 % -12);
const v120 = new Date();
Math.log10();
function f123(a124) {
    const o128 = {
        ...a124,
        get d() {
            const v126 = this.__lookupSetter__;
            try { v126(); } catch (e) {}
            return f123;
        },
    };
    return o128;
}
v120.toLocaleString();
