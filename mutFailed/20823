const v1 = [,];
const v3 = [v1,[v1,v1,,,v1],,];
const v8 = Symbol.iterator;
const o17 = {
    [v8]() {
        let v10 = 10;
        const o16 = {
            next() {
                v10--;
                const v14 = v10 == 0;
                const o15 = {
                    "done": v14,
                    "value": v10,
                };
                return o15;
            },
        };
        return o16;
    },
};
/(x)(x)(x)\1(?<!a)/gvims;
const v20 = /e/v;
const v21 = /m[x]/gvi;
function f22(a23, a24) {
    const o35 = {
        1361: a24,
        "c": 7n,
        "g": v20,
        __proto__: v21,
        [a24](a26, a27, a28) {
            Math.fround(-1);
            -1 >> 7n;
            return Math.acos(7n);
        },
        ...v21,
    };
    return o35;
}
f22(v20, 7n);
f22(v21, -15n);
f22(v21, 7n);
function f39() {
}
const v40 = /a\sc?/gdi;
const v41 = /xe+/gudimsy;
const v42 = /i(?<a>(?<b>(?<c>(?<d>.).).).)/gvisy;
-1582101658 / -1582101658;
try { ("YPzzJ").toLocaleUpperCase(); } catch (e) {}
const v51 = ("1")?.slice;
try { new v51(2, 2); } catch (e) {}
const o54 = {
};
try {
    o54.f = v21;
} catch(e55) {
}
try {
    const o56 = {
    };
    o56.f = v21;
    o56.g = v3;
} catch(e57) {
}
try {
    const o58 = {
    };
    o58.f = v21;
    o58.g = v3;
    o58.a = v21;
} catch(e59) {
}
try {
    const o60 = {
    };
    o60.f = v21;
    o60.g = v3;
    o60.e = 1236059864;
} catch(e61) {
}
1236059864 + 1236059864;
const v63 = [];
const t81 = [v63];
const v65 = delete t81[0];
!v65;
let v67 = 129;
v67++;
const v69 = ("1")[0];
const v70 = v69.substring(v67);
let v71;
try { v71 = v70.fontsize(v40); } catch (e) {}
function f74() {
    function f75(a76) {
        return 9569;
    }
    class C77 extends f75 {
        #a;
        static g;
    }
    const o89 = {
        "d": 268435440,
        "a": 4.0,
        [v69](a82, a83, a84) {
            Object.defineProperty(v42, v65, { enumerable: true, value: -1707622606 });
            return 4.0;
        },
        "b": v70,
        __proto__: "cJ",
        "f": "cJ",
        ..."cJ",
        8: f74,
        "g": 268435440,
        "e": f74,
        "h": "cJ",
        valueOf(a86) {
            const o87 = {
                __proto__: this,
                2261555780: "cJ",
            };
            super.toStringTag;
            return this;
        },
        "c": "cJ",
    };
}
const v90 = f74();
const v91 = f74();
const v92 = v71();
const v93 = [v92,v90,v91,v91];
const v94 = [v63];
try { v94.reduce(9569); } catch (e) {}
const v96 = [v92,v94,v94,v93];
const v97 = v96?.reduce;
try { new v97(-9007199254740990); } catch (e) {}
const v99 = [-54486,11,9007199254740991,268435456,536870912,1073741823,255,1073741824,-2147483648,-3];
const v100 = [2033313755,-16,16,16,-24747,6,256];
const v101 = [65535];
new Set();
function F104(a106, a107, a108) {
    if (!new.target) { throw 'must be called with new'; }
    const v109 = this?.__defineGetter__;
    try { new v109(v41, F104); } catch (e) {}
    try { a107.entries(); } catch (e) {}
    this.f = a107;
}
F104.prototype;
new F104(v93, v101, v96);
const v114 = new F104(v100, v93, v101);
v114.length = v114;
[9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
function F116(a118, a119) {
    if (!new.target) { throw 'must be called with new'; }
    const v120 = this.constructor;
    try { v120.toString(); } catch (e) {}
    try { new v92(v99, this); } catch (e) {}
}
new Uint8ClampedArray(268435440);
