[1781296323,1422240778,-1699514360,-778489602,268435440,536870912,-1915265067,-25048346];
const v1 = [-905424620,9007199254740991,-9223372036854775808,-53101672,9007199254740990,-9];
const v2 = [0,64,-9223372036854775808];
[-1000.0];
const v4 = [165.64867472032643,1.0,-5.0];
function f5() {
    function f6(a7, a8) {
        function F9(a11, a12, a13) {
            if (!new.target) { throw 'must be called with new'; }
        }
        return a7;
    }
    return f6;
}
Object.defineProperty(v4, Symbol.toPrimitive, { writable: true, configurable: true, enumerable: true, get: f5 });
[-1.340312032087832e+308,1.7976931348623157e+308,-1.7976931348623157e+308];
const v17 = [-12760,-1,336195510,2147483648,-1073741824,-9007199254740990,-4294967296];
const v18 = [-1,16,65536];
const v19 = [1061424342,-65536,88759117];
Object.defineProperty(Int16Array, "d", { writable: true, configurable: true, enumerable: true, value: Int16Array });
Int16Array.d = Int16Array;
let o26 = {
    valueOf() {
        let v23;
        try { v23 = v2(v17, this, Int16Array); } catch (e) {}
        v18[0] %= v23;
        try {
            this.d = v19;
        } catch(e25) {
        }
        return 1;
    },
};
try { o26.valueOf(); } catch (e) {}
const v28 = new Int16Array(1);
v18[v28] **= o26;
o26 = 1;
let v30;
try { v30 = Reflect.has(v1, v4); } catch (e) {}
const v32 = Reflect.construct(Int16Array, [v18,1,1], Int16Array);
v32[Symbol.toPrimitive] = Symbol;
127 << 127;
const v38 = new Uint32Array(127);
let v39;
try { v39 = v38.entries(); } catch (e) {}
const v42 = new Float32Array(255);
Object.defineProperty(v42, "toString", { writable: true, enumerable: true, value: Symbol });
v42[185] = v42;
let v43 = 1073741824;
let o45 = {
    [v32]: Float32Array,
    "b": v19,
};
({"b":o45,"e":v30,} = o45);
class C46 {
    constructor(a48) {
        this.constructor = Symbol;
        try { this.__defineSetter__(C46, 255); } catch (e) {}
        [a48,v43] = "boolean";
    }
}
const v50 = new C46();
function f51() {
    return Symbol;
}
Object.defineProperty(v50, "constructor", { configurable: true, enumerable: true, get: f51 });
const v52 = v50?.constructor;
try { new v52(Float32Array); } catch (e) {}
const v54 = new C46(v50);
function f55() {
    return f5;
}
function f56(a57) {
    [255,-9223372036854775807,-1,16,-1980205566,-65536,9,2,2064326127];
    [0,-10,-1024,256,-1050394264,536870889,-19070];
    [2];
}
Object.defineProperty(v54, 22, { configurable: true, get: f55, set: f56 });
const v61 = v54?.__defineSetter__;
try { new v61(v42, v42); } catch (e) {}
function f64(a65, a66, a67) {
    a65[22] = a66;
    a65[22] = a65;
    const o68 = {
        ...a67,
        2: v50,
        268435439: C46,
    };
    o68[268435439];
    return o68;
}
const v70 = f64(v54, "-65537", v43);
v70[22] = v39;
v70[268435439];
const v72 = f64(v70, "boolean", v70);
v72[268435439] = v72;
