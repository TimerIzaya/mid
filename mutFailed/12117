function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = -1600441409;
    } catch(e3) {
    }
    try {
        this.d = -1600441409;
    } catch(e4) {
    }
}
new F0();
new F0();
const v7 = new F0();
new v7(0);
new Int32Array(128);
new Float32Array(1000);
new Uint32Array(35);
function f23() {
    return 9;
}
function F24(a26) {
    if (!new.target) { throw 'must be called with new'; }
    a26 >>> a26;
    try {
        a26 *= this;
        const v28 = 139837843 in this;
        0 <= 0;
        new Int8Array(0);
        for (const v35 in new.target) {
            0 ^ v35;
            Object.defineProperty(this, this, { writable: true, configurable: true, enumerable: true, value: v28 });
            this[129] = v35;
        }
        const t34 = 35;
        new t34(10);
        128 !== 128;
    } catch(e42) {
    }
}
new F24(F24);
new F24(Int32Array);
