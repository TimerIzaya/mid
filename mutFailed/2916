let v0 = -1000.0;
class C3 {
    static #g = v0;
    static {
        let v5;
        try { v5 = new C3(); } catch (e) {}
        this.e >>= v0;
        v0 ||= 7.1032758019516535;
        try {
            v5.toString = this;
        } catch(e6) {
        }
    }
    [-2];
}
const v7 = new C3();
v7?.constructor;
try { new v0(); } catch (e) {}
const v10 = new C3();
const v11 = new C3();
class C12 {
    n(a14, a15) {
        super.f;
        return v7;
        return v11;
    }
    o(a18, a19, a20, a21) {
        a21 * a21;
        return a21;
    }
    f;
}
const v23 = C12.length;
new C12();
new C12();
const v26 = new v10();
let v30 = 311381866 & 311381866;
const v31 = [5.0,-1000000000000.0];
[-3.4570322798414105e+307,169.39416483428454,-2.0,-1000.0,5.0,1.0,14338.693316202844,-1000000.0,955.167973693761,0.5696151956948133];
[-2.0,-2.0];
const t38 = "string";
t38.f = "string";
let v38;
try { v38 = Array.isArray(-30330); } catch (e) {}
-6;
const v41 = new Array();
try { v41.findLast("F"); } catch (e) {}
const v44 = new Date();
let v45;
try { v45 = v44.setFullYear(v31, 4, v31); } catch (e) {}
Array[2147483648] = v45;
const v46 = Date > "undefined";
!v23;
v46 ? v38 : "undefined";
do {
    const o53 = {
        "execution": v26,
        "type": "minor",
    };
    gc(o53);
    ~(v30++);
} while (0 < 2)
