class C3 {
    #c;
    constructor(a5) {
        function f6(a7) {
            const o12 = {
                toString(a10, a11) {
                    Object.defineProperty("-884841883", a10, { configurable: true, value: a11 });
                    return "-884841883";
                },
            };
            return o12;
        }
        this.valueOf = f6;
        const v13 = this[a5];
        delete v13?.[v13];
        try { Math.expm1(Math); } catch (e) {}
        const v20 = 1.7976931348623157e+308 >> 48174;
        v20 - v20;
        const v22 = 48174 && -38766;
        v22 + v22;
        Math.clz32(a5);
    }
    5 = -4294967297;
}
function f25() {
    const v26 = -C3;
    -25098 % v26;
    Math.min(188.0990171283113);
    C3++;
    return v26;
}
C3[Symbol.toPrimitive] = f25;
const v35 = new C3(-4294967297);
const v36 = new C3(C3);
const v37 = new C3(v35);
v37[5];
class C39 {
    #m(a41, a42) {
        super[-185.8448383666156];
        const o44 = {
        };
        try {
            o44.g = a41;
        } catch(e45) {
        }
        try {
            const o46 = {
            };
            o46.g = a41;
            o46.h = a42;
        } catch(e47) {
        }
        try {
            const o48 = {
            };
            o48.g = a41;
            o48.h = a42;
            o48.d = this;
        } catch(e49) {
        }
        try {
            const o50 = {
            };
            o50.g = a41;
            o50.h = a42;
            o50.b = this;
        } catch(e51) {
        }
        return this;
    }
}
const v52 = new C39();
const v53 = v52?.constructor;
let v54;
try { v54 = new v53(); } catch (e) {}
const v55 = new C39();
v55.constructor = f25;
g = v36;
[-1841275550,4294967295];
const v57 = [-2147483647,5,1787452025];
const v58 = [257,536870912,8,60531,-17799,257,-966655735,536870889,-10,7];
v58 == v52 ? v58 : v52;
const v61 = v55?.constructor;
let v62;
try { v62 = new v61(); } catch (e) {}
const v63 = new C39();
let v64 = v63?.constructor;
let v65;
try { v65 = new v64(); } catch (e) {}
v52 !== v62;
Object.defineProperty(v37, "h", { writable: true, configurable: true, enumerable: true, value: v35 });
({"c":v64,...v65} = v57["includes"](v55, v54));
new Array(255);
const v73 = Math?.expm1;
try { new v73(v36); } catch (e) {}
Math.cos(-197199362);
