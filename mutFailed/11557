class C3 {
    static {
        const v6 = parseFloat("boolean");
        0.6947587022390728 != parseFloat;
        Object.defineProperty("boolean", "f", { configurable: true, enumerable: true, value: -65536 });
        0.6947587022390728 in super[v6];
    }
    3397;
    n(a11) {
        this.__proto__;
        super.f ||= a11;
        const o16 = {
            "execution": "async",
            "type": "minor",
        };
        return gc(o16);
    }
}
new C3();
const v19 = new C3();
const v20 = new C3();
class C21 extends C3 {
    static #e;
    toString(a23, a24, a25, a26) {
        let v27;
        try { v27 = a23(v20); } catch (e) {}
        [a23];
        const v29 = ["boolean",a23,this,a23];
        [v27,0.6947587022390728,-65536,v29,0.6947587022390728];
        try {
            v29.values();
        } catch(e32) {
        }
        return v29;
    }
    [v19];
    7 = v20;
}
new C21();
const v34 = new C21();
new C21();
function F36(a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = C3;
    } catch(e40) {
    }
}
new F36(v20, v20);
new F36(v34, v19);
new F36(v34, v20);
const o45 = {
    ..."1p",
};
const v46 = [o45,o45,o45,o45];
const v48 = 28621 + 28621;
function f49() {
    return v46;
}
const o51 = {
    ...o45,
};
o51.length = v48;
Reflect.apply(f49, v46, o51);
