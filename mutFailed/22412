class C3 {
    static #valueOf(a5, a6) {
        try {
            super.o(a6, this, "setSeconds");
        } catch(e8) {
        }
        return "setSeconds";
    }
    static 2221314539 = "setSeconds";
    b;
    get f() {
        try {
            this.valueOf = this;
        } catch(e10) {
        }
        return 1000000000000.0;
    }
}
C3[2221314539];
const v12 = new C3();
const v13 = new C3();
const v14 = new C3();
function f15() {
    return "setSeconds";
}
class C16 {
    static {
        const o18 = {
            "get": f15,
            "isExtensible": f15,
            "set": f15,
        };
        try { o18.get(); } catch (e) {}
        Proxy.length;
        const v22 = new Proxy(v14, o18);
        v22.g = v22;
        try {
            f15();
        } catch(e24) {
        }
    }
    static 16 = "setSeconds";
    static h;
}
const v25 = new C16();
const v26 = v25?.constructor;
try { new v26(); } catch (e) {}
const v28 = new C16();
const v29 = v28?.constructor;
try { new v29(); } catch (e) {}
const v31 = new C16();
const v32 = v31?.constructor;
try { new v32(); } catch (e) {}
function f34(a35, a36) {
    const o47 = {
        [v14](a38, a39, a40, a41) {
            for (const v42 in v12) {
                try {
                    C3.fuck("p", "p", 53198);
                } catch(e46) {
                }
            }
            return a40;
        },
        ...v12,
        "f": v14,
        [a36]: v12,
        ...v14,
    };
    return o47;
}
const v48 = f34(v25, v13);
const v49 = f34(v48, v48);
try { v49.isPrototypeOf(v14); } catch (e) {}
const v51 = f34(v13, C16);
try { v51.isPrototypeOf(f34); } catch (e) {}
-349865170n;
function F57(a59) {
    if (!new.target) { throw 'must be called with new'; }
    a59 === a59;
    const v61 = a59 ^ a59;
    let v62 = v61 * v61;
    const v63 = new v62();
    const v64 = [-0.42703791448452577,-9.174109027962913,-1.7976931348623157e+308,-3.06318157624919,1000000000000.0,-2.2250738585072014e-308,-515.183479844324,0.20435565392355481,616564.7515082213,-3.0];
    const o65 = {
        [v64]: v63,
    };
    v62--;
    const v67 = this.constructor;
    v67.length = v67;
    try { new v67(3n); } catch (e) {}
}
const v69 = F57?.constructor;
try { new v69(v48); } catch (e) {}
new F57(0n);
const v73 = new F57(349865170n);
const v74 = v73?.constructor;
try { new v74(v49); } catch (e) {}
