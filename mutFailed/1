const v2 = new Int8Array(1497745028);
const v5 = new Int8Array(9);
const v8 = new NaN(191);
function f9(a10, a11, a12, a13) {
    return 191 >> a10;
}
const v15 = f9(Int8Array, Int8Array, 9, 1497745028);
function F16(a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v5;
    } catch(e20) {
    }
    try {
        this.a = a18;
    } catch(e21) {
    }
}
function f22() {
    function f24(a25) {
        try { a25["transfer"](v2); } catch (e) {}
    }
    this.onmessage = f24;
    v2[v15];
}
const v31 = [];
const o32 = {
    "arguments": v31,
    "type": "function",
};
new Worker(f22, o32);
const v34 = new F16(v8, NaN);
new F16(v34, NaN);
new F16(v8, v8);
class C40 {
    p(a42) {
        this.g ^= v34[8];
    }
}
const o53 = {
    get d() {
        function f49(a50, a51, a52) {
            'use strict';
            return a50;
        }
        return this;
    },
};
