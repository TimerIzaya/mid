let v0 = 2393;
const v2 = new BigInt64Array(v0);
const v5 = new Float64Array(2);
let v6;
try { v6 = v5.slice(v2, v2); } catch (e) {}
2950 != 2950;
const v10 = new BigInt64Array(2950);
class C11 {
    g = v2;
    static [v5] = Float64Array;
    constructor(a13, a14, a15) {
        a13 + a13;
        a14++;
        a15--;
        class C19 {
            set g(a21) {
            }
        }
        let v22 = [23795,8,259058917,-256,1,-36806,4096,-9,-1,-18943];
        v22 &= v22;
        a13[v6] = 2;
        super.a = a14;
        try {
            new Date("0");
        } catch(e27) {
        }
        new Date(-2, v22, v22, v22, -2);
        const v29 = this << a15;
        try { Reflect.isExtensible(v10); } catch (e) {}
        Reflect.construct(BigInt64Array, [v29], Float64Array);
    }
    static e;
    1024 = v5;
    15 = v10;
    c;
    #e;
    m(a35, a36) {
        [-1914246870,-2147483647,268435439,7,536870912,-65535,65536];
        [6,-10,256,467882848,268435439,-4294967297,65535];
        const v39 = [1945504066,9007199254740992,9007199254740992,14306,1073741824,-1341630650,65537,1407917060,585634429];
        v0 = 2950;
        const v42 = new Int8Array(257);
        new Float32Array(v42);
        return v39;
    }
}
try { new C11(Float64Array, v0, BigInt64Array); } catch (e) {}
new C11(2950, 2950, 2950);
new C11(2950, 2950, 2);
10 >>> 10;
v0 < 10;
function f51() {
    return f51;
}
try { f51(); } catch (e) {}
const v54 = new Date(f51);
v54.setUTCMilliseconds(Date);
new C11(2950, 2950, 2);
function f57() {
    return v5;
}
const v62 = /(x)(x)(x)\1/uis;
const v65 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v66 = [601759695];
const v67 = [1073741824,1073741823,1376142744,1073741825];
function f69(a70, a71, a72, a73) {
    function f75() {
        "Vre" == "Vre";
        const v80 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        try { Symbol.keyFor(65535); } catch (e) {}
        const v83 = Symbol.toPrimitive;
        const o90 = {
            toString(a85, a86) {
                const v87 = a73 && Float64Array;
                function f88() {
                    a85 *= v83;
                    return Float64Array;
                }
                Object.defineProperty(v87, "valueOf", { value: f88 });
                v87 <= v80;
                return this;
            },
        };
        const o113 = {
            "c": -4294967297n,
            [522675525n](a93, a94) {
            },
            "c": v66,
            tan(a96, a97) {
            },
            "b": -4294967295,
            [-4294967297n](a99, a100, a101, a102) {
                [0.8549471140289917,-3.0,4.0,-5.0,-2.0,-1.7976931348623157e+308,5.31145436861636,NaN,1.2778157707013417e+308];
                [-1.7976931348623157e+308,-4.047862669744725e+307,-2.2250738585072014e-308,0.790769162254034,0.024752255798642486,640440.6769019293,-2.0];
                return [923.3408061449261,-6.350919708227568e+307,-2.220446049250313e-16,0.04850379751250988,4.009495502233909];
            },
            "e": -4294967295,
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v65,
            ...v66,
            "type": "Vre",
            ..."Vre",
            valueOf(a107, a108) {
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            toString(a110, a111, a112) {
                return a70;
            },
            5: -4294967295,
            217: -268435456,
        };
    }
    f75();
    const v116 = new Int8Array();
    const v117 = v116.buffer;
    2147483648 === 2147483648;
    v117.slice(2147483648);
    %OptimizeFunctionOnNextCall(f75);
    let v122;
    try { v122 = v67["find"](..."find", a73, ...v66, ...v67, ...522675525n); } catch (e) {}
    v122 <= a72;
    return arguments;
}
v62.dotAll = v62;
const o130 = {
    4294967295: Math,
    2: f51,
    __proto__: 10,
    [v62](a125, a126, a127, a128) {
        super.test();
    },
};
o130[4294967295];
"p" + 65535;
function f138(a139, a140) {
    function f141(a142) {
        function f144(a145) {
            try {
                v5.toLocaleString();
            } catch(e147) {
            }
        }
        this.onmessage = f144;
        try {
            f144(a139);
        } catch(e149) {
        }
    }
    const v152 = [65535];
    const o153 = {
        "arguments": v152,
        "type": "function",
    };
    new Worker(f141, o153);
    return f138;
}
-1000000000000.0 + -1000000000000.0;
let v160 = 3.0;
v160--;
try { ("symbol").italics(); } catch (e) {}
class C170 {
    #valueOf(a172, a173) {
    }
    constructor(a181, a182) {
        for (let [i198, i199] = (() => {
                function F185() {
                    if (!new.target) { throw 'must be called with new'; }
                    this.c = 5;
                }
                const v189 = new Float64Array();
                const t5 = v189.constructor;
                const v191 = new t5(2950);
                v191.lastIndexOf();
                parseInt("pop");
                gc(v54);
                return [0, 3];
            })();
            i198 < 3;
            ) {
        }
        for (let i208 = 0, i209 = -1540955429;
            (() => {
                const v210 = i208 < i209;
                a181.#valueOf();
                return v210;
            })();
            ) {
        }
    }
}
C170.length = C170;
