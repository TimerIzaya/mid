const v1 = new Date();
function f2() {
    return v1;
}
for (let v4 = 0; v4 < 5; v4++) {
    const o6 = {
    };
    gc(o6);
}
[-4294967296,-65314,268435440,-421136682,-9223372036854775807,2];
[-1684145994,-268435456,4294967296,-1024,12,17080,14,2012529871,536870887];
function f10() {
    return f10;
}
[f10];
f10().group(f10);
const v14 = [-65536,16,58026,1197,4294967296,16];
class C20 {
}
C20.__defineSetter__;
class C22 {
}
new C22();
new Int16Array(8);
new BigUint64Array(3);
new Uint32Array(257);
class C31 extends Int16Array {
    constructor(a33, a34, a35, a36) {
        super();
        function f37(a38) {
            function f40(a41) {
                delete a33[a41];
                return a34;
            }
            this.onmessage = f40;
            return Int16Array;
        }
        const o45 = {
            "type": "function",
        };
        new Worker(f37, o45);
    }
}
function f47() {
    const v50 = Array(4087);
    v50[1298] = v14;
    for (const v51 of v50) {
    }
    function F52() {
        if (!new.target) { throw 'must be called with new'; }
        for (let v54 = 0; v54 < 500; v54++) {
            const v56 = ("p").localeCompare();
            ("p" + v54).fontcolor(v54, v56, F52).trimLeft()[12].substring(F52, this);
        }
    }
    return 4087;
}
%PrepareFunctionForOptimization(f47);
f47();
["function",[5,1436918233,13,-9223372036854775808,12,10779,268435439,-350312267,536870912],"function"];
const t58 = [-2.220446049250313e-16,-1.2960362069804638,1000000.0];
t58[Symbol.species] = 8.580387257773513;
%OptimizeFunctionOnNextCall(f47);
f47();
var h = 1750;
new Uint32Array();
const v74 = new Set();
v74.add(v1);
let [v76,,...v77] = v74;
