const v0 = [48614,911979203,-9223372036854775807,-48631];
new Int32Array(127);
([16,-1073741824n]).flat(16);
const v8 = [7,-4294967296,2,9007199254740992,268435441,11,128,-9223372036854775808];
const v9 = [1159,-45680,65535,100059418,-2147483648,-1277802540,10,-4414];
class C10 {
    static h;
    static 4 = v0;
    #p(a12, a13) {
        try {
            v9.#p(this, a13, this, a13, v9);
        } catch(e15) {
        }
        return v8;
    }
    static [v9];
    static [v0] = v0;
}
new Float32Array(260330366);
try {
    const o22 = {
        "maxByteLength": 1000,
    };
    new ArrayBuffer(10000, o22);
} catch(e24) {
}
new C10();
new C10();
const v27 = new C10();
const v28 = /ro(x)(x)(x)\1+/imsy;
const v29 = /DC(WAxyz{1,32}+)/gvi;
[v29,v28,[/foo(?<!bar)bazz[\cZ]/guim,v28,v29,v27],v0,v29];
const v33 = [v9,v27,C10,v27];
class C36 {
    constructor(a38, a39, a40, a41) {
        const v42 = this?.constructor;
        try { new v42(v33, a40, a40); } catch (e) {}
        a39 >>> a39;
        0.061410412759498656 >>> 0.061410412759498656;
    }
}
const v47 = new C36();
v47.f = v47;
const v48 = new C36();
try {
    C36.fuck(C36, "function");
} catch(e51) {
}
const v52 = new C36();
function F53(a55, a56) {
    if (!new.target) { throw 'must be called with new'; }
    a56--;
    const v58 = a55?.constructor;
    v58.MAX_SAFE_INTEGER;
    new v58();
    const v61 = this.constructor;
    -2.241327492701015 & 9007199254740991;
    function F65() {
        if (!new.target) { throw 'must be called with new'; }
        try {
            for (let v67 = 0; v67 < 50; v67++) {
                for (let v68 = 0; v68 < 25; v68++) {
                    this["p" + v68] = v68;
                }
            }
        } catch(e71) {
        }
    }
    new F65();
    try { v61(a55, v52); } catch (e) {}
}
const v76 = new Uint8ClampedArray();
v76["-9223372036854775808"] = 10000;
function f79(a80, a81, a82, a83) {
    const o84 = {
    };
    return o84;
}
const v85 = f79("string", "m");
function f87(a88, a89, a90, a91) {
    function f93() {
        -(-268435456 + -268435456);
    }
    f93();
    const v99 = new Int8Array();
    v99.buffer;
    %OptimizeFunctionOnNextCall(f93);
    try { ("find").strike(); } catch (e) {}
    try {
    } catch(e103) {
    }
    const o104 = {
    };
    o104.g = -4294967297n;
    const o105 = {
    };
    o105.g = -4294967297n;
    o105.d = v85;
}
new F53(204, 2415);
new F53(v52, v48);
