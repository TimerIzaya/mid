function F2() {
    if (!new.target) { throw 'must be called with new'; }
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    new Date();
    new Uint32Array(5);
    new Set();
    const o16 = {
    };
    class C19 {
    }
    class C20 extends C19 {
    }
    const v21 = Array(19793);
    for (const v22 of v21) {
    }
    const v23 = [v21,v21,v21,v21,v21];
    for (let v24 = 0; v24 < 50; v24++) {
    }
    const v26 = [[v23,v23,v23]];
    function f28() {
        const o29 = {
        };
    }
    v26 >= Uint16Array;
}
const v37 = [BigUint64Array];
try {
    new BigUint64Array(v37);
} catch(e39) {
}
for (let i47 = 0, i48 = 10;
    (() => {
        const v49 = i47 < i48;
        const v51 = ("6ft").toPrimitive;
        const o63 = {
            [v51]() {
                const o56 = {
                    "execution": "sync",
                    "type": "minor",
                };
                ([Infinity,-686.9856326146617,0.47369378110968274,-7.24289104755818]).includes(...[-1000.0,-2.2250738585072014e-308,511.99933163650917,-386.8372768814137,Infinity]);
                const t8 = [gc,gc,gc,gc,gc];
                t8.toJSON = gc;
                v49(o56);
                return -484970930;
            },
        };
        return v49;
    })();
    (() => {
        function f66() {
            const v67 = [f66,f66,f66,f66,f66];
            class C69 extends v67.constructor {
            }
            new C69();
            try { v67.reduce(); } catch (e) {}
            return v67;
        }
        i48--;
        let v74 = BigInt64Array;
        const v75 = new v74(3768);
        4.0 >> v74++;
        let o78 = {
        };
        [,...o78] = v75;
        class C79 {
        }
        new C79();
        3768 < i47;
        function f82() {
            const t20 = [];
            t20[6] = 4294967295;
            const o87 = {
                set b(a86) {
                },
            };
            return 4294967295;
        }
        for (let v88 = 0; v88 < 5; v88++) {
            v88();
            %OptimizeFunctionOnNextCall(f82);
        }
        for (const v90 of "string") {
            v90?.[152];
            function f93() {
                class C94 {
                }
                const v95 = new C94();
                const v96 = [v95,v95,v95,v95,v95];
                v96[4];
                return v96;
            }
            %PrepareFunctionForOptimization(f93);
        }
        try { ("z").codePointAt(i47); } catch (e) {}
    })()) {
}
