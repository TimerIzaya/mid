const v1 = new Date();
-16257 * -16257;
try { ("tXMOV").indexOf(v1); } catch (e) {}
1532 >> 1532;
let v13;
try { v13 = new Uint16Array(1532, Uint16Array, v1); } catch (e) {}
const v14 = new Uint16Array(1532);
v14[1135];
new BigInt64Array(BigInt64Array);
const v21 = new Uint16Array(138);
v21[95] = v21;
const v22 = /(xyz??)/vm;
/}[a-b-c]/gdimy;
class C24 {
    get e() {
    }
    #c = v22;
}
C24.d = C24;
new C24();
class C27 {
}
try { ("tXMOV").call(); } catch (e) {}
new C27();
1 + 1;
class C32 {
}
try { C32.bind(v13); } catch (e) {}
const v37 = new BigUint64Array(10);
Float64Array.e = Float64Array;
for (const v39 in v37) {
    let v40 = 10;
    for (let i = 0; i < 5; i++) {
        const v41 = v40--;
        v41 > v41;
        !BigInt64Array;
    }
    new Float64Array(2147483647);
}
