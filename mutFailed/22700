const v1 = [-7.027401712206338e+307,184540.5197906543,386505.9706722442,2.0,-1000.0,2.0,-4.0,4.779724117486139e+307];
const v2 = [1.6013089732617189e+308,5.590157651584638e+307,2.238729023720051,-2.220446049250313e-16,2.2250738585072014e-308,-653464.0144579307,-0.0,-6.589667593425618,-262.15577477146485,343237.88165145623];
const v3 = [-1000000000000.0,0.6976698720324988,-8.983284484836897,-1000000.0,1000000.0,-0.0,0.5680664532774731,1000000000.0,-2.0];
function f4(a5) {
    const o26 = {
        "g": v3,
        "c": f4,
        [v2]: a5,
        1073741824: v3,
        "arguments": v1,
        get f() {
            try {
                this.valueOf = f4;
            } catch(e7) {
            }
            const o10 = {
                "maxByteLength": 2347,
            };
            const v12 = new ArrayBuffer(2347, o10);
            new BigUint64Array(v12);
            class C15 {
            }
        },
        3400: a5,
        p(a17, a18) {
            let v19;
            try { v19 = new this(v1, a17, this); } catch (e) {}
            f4(f4);
            %VerifyType(v19);
            this[Symbol.matchAll] = v19;
            v2[this] += v19;
            [a18,,];
            return [[v3,,a18,a5],v19];
        },
        0: a5,
    };
    return o26;
}
f4(v2);
const v28 = f4(v1);
const v29 = f4(v1);
function f30() {
    return 59817n !== undefined;
}
function f35() {
    return v1;
}
try {
    v1.length = f30;
} catch(e36) {
}
new f30();
function f38() {
    return f35;
}
let v40 = -6n;
const v41 = v40--;
function f42(a43, a44, a45, a46) {
    let v47 = -6.50438168344124;
    v47 **= v47;
    const o55 = {
        [v41](a49, a50, a51, a52) {
            eval(a44);
        },
    };
    return o55;
}
%OptimizeFunctionOnNextCall(f42);
("vZa2U").normalize("NFKC");
let v61 = "0";
Math.log2(++v61);
const v67 = [];
class C68 {
    [v67];
    set a(a70) {
        const v71 = a70 === v67;
        v1[3] = 5n;
        function f74(a75, a76, a77, a78) {
            const v79 = a76 >>> a76;
            (v79 >>> v79) != -256;
            for (let v82 = 0; v82 < 5; v82++) {
            }
            return a76;
        }
        f74(1073741823, f74);
        %OptimizeFunctionOnNextCall(f74);
        v71 ? a70 : v67;
        [v67,a70,a70,v67];
        [v67];
        [-45850n,v67,v67,v67,v67];
    }
    static [v67];
    #f;
    h = v28;
}
const v88 = new C68();
new C68();
const v90 = new v29();
function F94(a96, a97, a98, a99) {
    if (!new.target) { throw 'must be called with new'; }
}
const v100 = new F94(-12, -56455, v90, v67);
new F94(v88, -14, v88, v90);
const v102 = new F94(v88, -14, v90, C68);
v102 - -12;
v100 << Math.round();
try { v29(); } catch (e) {}
