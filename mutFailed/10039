class C3 {
    127 = -13n;
    p(a5) {
        const o6 = {
        };
        try {
            o6.b = this;
        } catch(e7) {
        }
        try {
            const o8 = {
            };
            o8.b = this;
            o8.h = -4096n;
        } catch(e9) {
        }
        try {
            const o10 = {
            };
            o10.b = this;
            o10.h = -4096n;
            o10.e = -9007199254740992n;
        } catch(e11) {
        }
        try {
            const o12 = {
            };
            o12.b = this;
            o12.h = -4096n;
            o12.d = this;
        } catch(e13) {
        }
        return C3;
    }
}
const v14 = new C3();
const v15 = new v14();
const v16 = new C3();
function f20(a21, a22, a23) {
    const o34 = {
        "g": -9007199254740992n,
        "h": 951791804,
        get e() {
            function f25(a26, a27, a28, a29) {
                const o30 = {
                    "f": a22,
                    6: a26,
                };
                return o30;
            }
            f25(a23, a21, v15, a23);
            f25(a23, a21, C3, a23);
            f25(-4294967295, a21, v16, this);
            return -9007199254740992n;
        },
    };
    return o34;
}
f20(-13n, v15, 951791804);
f20(-4096n, v14, C3);
f20(-9007199254740992n, v15, C3);
function F38() {
    if (!new.target) { throw 'must be called with new'; }
    const v41 = -(-7);
    v41 ** v41;
}
function F43(a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
    const v47 = this.constructor;
    try { new v47(F38, a45, F38, v47); } catch (e) {}
    new v47();
}
new F43();
const o51 = {
};
