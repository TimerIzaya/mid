[-1.7976931348623157e+308,1.1680502664398565e+308,1.3420862142125803e+308,0.9507364022619317,1000000.0,-291892.83042428247,2.2250738585072014e-308,-3.0,-2.0,NaN];
[1.2187159772255472e+308,0.8777193856684508,889912.7650105022,672627.5205339903,72.51572262849186,-853355.1862248154,0.9037539846470808,6.486264012748105,1.6971889331263784e+308];
[-58036.01211008092,6.055604241706337,-3.0,-2.0,-1.2374951541329361e+308,-3.876908999165007,0.7244341099956236,1e-15];
const v6 = [-7,9,51725,3,-61183];
const v7 = [4,1462278456,-7900,1167710878];
[1210954454,-1311342028,-1337326062,42345,-2118522710,512,5487,-2147483649,995167347];
new Date();
5.953149453510837e+307 & Date;
Math.log2(-7);
-14107 + -14107;
5.953149453510837e+307 - Date;
Math.random();
Math.atan2(-585882.5797797351, -14107);
!Date;
[-325739252,-739853818,31858,7,-2,0,557614931];
[10,-1254473890,7,9007199254740991];
[64,9223372036854775807,0,7,9223372036854775807];
new WeakSet();
1 + 1;
127 << 127;
new Uint32Array(127);
const v45 = new Int8Array(11);
Uint8Array.b = Uint8Array;
const v48 = [512,2147483649,-4294967296,4455,2147483648,-5];
try { v48.groupToMap(Uint32Array); } catch (e) {}
[24297,1073741824,201397439];
const v52 = ([-1595056961])?.find;
try { new v52(127); } catch (e) {}
const v54 = new Uint32Array(256);
const v56 = -2;
try {
    v54.length = 2;
} catch(e57) {
}
new Uint8Array(64);
Object.defineProperty(Date, 6, { writable: true, get: Date });
try {
    v6.at(1);
} catch(e66) {
}
-2183;
Int16Array.g = Int16Array;
const v70 = new Int16Array(2183);
new Uint8Array(255);
~8;
const v77 = new Int16Array(8);
parseFloat.d = parseFloat;
async function f79(a80, a81, a82) {
    try { Math.round(a80); } catch (e) {}
    try {
        const v84 = [Uint32Array,v45,a81,a80,v7];
        f79(v84, v84, Date);
    } catch(e86) {
    }
    a81 >> a81;
    a82++;
    delete v77[-1000000000.0];
    let [v90,v91,...v92] = v70;
    v90 >> v90;
    let v94 = v70[5];
    v94--;
    v48.length;
    f79++;
    try { Math.atan2(Math, Uint8Array); } catch (e) {}
    14 ^ Uint8Array;
    const v102 = -v56;
    v102 - v102;
    Math.log(v102);
    Math.pow(14, 14);
    await v91;
    return Uint8Array;
}
