class C3 {
    [4294967296];
    set c(a5) {
        d = -1.7976931348623157e+308;
        function f6() {
            return a5;
        }
        for (let v7 = 0; v7 < 32; v7++) {
            a5["p" + v7] = v7;
        }
    }
    static #a = 4294967296;
    g = 4294967296;
    static [-1];
}
const v10 = new C3();
const v11 = v10[4294967296];
const v12 = new C3();
const v13 = new C3();
class C14 {
    a;
    constructor(a16, a17) {
        a16[1077148320] = this;
        a16[4294967296] = a16;
        a17.d = a17;
        a16[4294967296] = a16;
        const v18 = C3?.__defineGetter__;
        try { v18.bind(v13); } catch (e) {}
        let v20;
        try { v20 = new v18(this, 1000000000.0); } catch (e) {}
        try { v11.unregister(this, this, v12, C3); } catch (e) {}
        try { Math.pow(this, Math); } catch (e) {}
        let v24 = -13;
        v24--;
        Math.atanh(4294967296);
        const v27 = v12 & v12;
        v27 >> v27;
        v27 * C14;
        v20.log2(v24);
        v24 * 4294967296;
        a16--;
    }
    1077148320 = C3;
    f = C3;
    e = v13;
    static 230 = 1000000000.0;
    2 = v13;
}
try { C14.apply(v12, 1000000000.0); } catch (e) {}
C14.name = C14;
const v34 = new C14(v13, v13);
const v35 = new C14(v10, v13);
v35.a;
const v37 = new C14(v12, C14);
v37[1077148320];
function F39(a41, a42, a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    const v45 = this?.constructor;
    try { new v45(v13, a41, v13, a44); } catch (e) {}
    a41[4294967296];
    a41[4294967296] = a41;
    try {
        this.a = v34;
    } catch(e48) {
    }
    try {
        this.d = a41;
    } catch(e49) {
    }
    try {
        this.g = v13;
    } catch(e50) {
    }
}
F39.caller = F39;
v11.d = F39;
new F39(v10, C3, C3, v13);
const v52 = new F39(v13, v35, v13, v10);
v52.c = v52;
new F39(v12, v10, C14, v13);
const o59 = {
    ["536870889"]: "toString",
    set e(a57) {
    },
    get e() {
        return "536870889";
    },
};
