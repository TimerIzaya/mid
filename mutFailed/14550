class C3 {
    static #b = -268435456n;
    toString(a5) {
        let v6;
        try {
        const t0 = -11n;
        v6 = new t0(-268435456n, this, a5, this);
        } catch (e) {}
        try {
            v6.#b;
        } catch(e8) {
        }
        return -11n;
    }
    static #a;
    512;
}
let v9;
try { v9 = new C3(); } catch (e) {}
const v10 = new C3();
const v11 = new C3();
const v12 = new C3();
function f13(a14, a15) {
    try { a14.isWellFormed(); } catch (e) {}
    new v9();
    return -11n;
}
const v20 = Symbol.toPrimitive;
Symbol.for(v20.description);
v12[v20] = f13;
function f24(a25, a26, a27, a28) {
    a25--;
    a26[512] = a26;
    a27[512];
    const o36 = {
        "a": a26,
        [a26]: -268435456n,
        n(a32, a33) {
            const v34 = super[this];
            try {
                const t40 = -11n;
                t40.g = v34;
            } catch(e35) {
            }
            return C3;
        },
        "d": -11n,
    };
    return o36;
}
f24.b = f24;
f24(-268435456n, v10, v10, C3);
f24(127n, v11, v11, v12);
f24(-11n, v12, v12, v11);
-505430859 / -505430859;
/\P{Decimal_Number}/gudims;
try { ("sin").match("sin"); } catch (e) {}
