class C3 {
    #h = "object";
    static {
        function f5(a6, a7) {
            const v10 = new Float32Array();
            v10.length >>>= 16;
            class C13 extends Float64Array {
                static 1;
                static #d = 256;
            }
            const v14 = new C13();
            try { v14(v10); } catch (e) {}
            let {"buffer":v16,"byteLength":v17,"byteOffset":v18,} = v14;
            return 256;
        }
        this[Symbol.toPrimitive] = f5;
        function f21() {
            return "object";
        }
        f21.d = "g";
        f21.d = f21;
        this[912188.6240898652] = "g";
        try {
            this.#h = this;
        } catch(e22) {
        }
    }
    [912188.6240898652] = "object";
    static ["object"] = "g";
    static #e;
}
const v23 = C3?.call;
try { new v23("g"); } catch (e) {}
const v25 = new C3();
const v26 = v25?.constructor;
let v27;
try { v27 = new v26(); } catch (e) {}
const v28 = new C3();
function f29() {
    v25[1].stack;
    return "g";
}
v28.constructor = f29;
const v32 = v28?.constructor;
try { new v32(); } catch (e) {}
const v34 = new C3();
const v35 = v34?.constructor;
try { new v35(); } catch (e) {}
class C37 extends C3 {
    set c(a39) {
        for (let v40 = 0; v40 < 32; v40++) {
            C3["p" + v40] = v40;
        }
    }
    #p(a44, a45, a46, a47) {
        a45 & a47;
        super.d;
        class C50 {
            e;
            9 = "g";
        }
        new C50();
        v23?.[8];
        try {
            const t64 = "object";
            t64.length = 4;
        } catch(e54) {
        }
        new C50();
        const v56 = new C50();
        return v56;
    }
}
function f57(a58, a59) {
    const v62 = new Uint8ClampedArray(129);
    return v62;
}
C37.toString = f57;
C37.name = C37;
const v63 = new C37();
v63.constructor = f29;
const v64 = new C37();
v64.constructor = f57;
const v65 = new C37();
function f66(a67, a68, a69) {
    a67[Symbol.toPrimitive] = f66;
    function f72() {
        return Symbol;
    }
    Object.defineProperty(a68, "constructor", { writable: true, get: f72 });
    a69.constructor = f57;
    const v73 = a67?.__defineGetter__;
    let v74;
    try { v74 = new v73(a68, a67); } catch (e) {}
    a68.c;
    let v77 = 9007199254740990;
    Math.log10(v74);
    const v79 = v77--;
    Math.tan(v74);
    let v81 = v77 ** v79;
    const v82 = --v81;
    !v74;
    const v84 = a69?.constructor;
    let v85;
    try { v85 = new v84(); } catch (e) {}
    const o107 = {
        0: a69,
        "h": 912188.6240898652,
        ...v25,
        [C37]: a69,
        get a() {
            let [] = "object";
            v27 !== this;
            const v88 = v32?.[this];
            try { v85(v88, v79); } catch (e) {}
            function F90(a92, a93, a94, a95) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.c = v85;
                } catch(e96) {
                }
                try {
                    this.e = a92;
                } catch(e97) {
                }
                try {
                    this.g = a94;
                } catch(e98) {
                }
            }
            const v99 = new F90(v26, v82, v85, v32);
            const v100 = new F90(v99, v26, v99, v63);
            new F90(v100, a69, v34, v100);
            const t133 = "g";
            delete t133["g"];
            try { a67(v64, v64); } catch (e) {}
            super.c = C3;
            return 63874;
        },
        [v34]: v65,
    };
    return o107;
}
const v108 = f66(v28, v65, v63);
v108[0];
f66(v34, v63, v63);
f66(v108, v65, v64);
394.2567881941575 - 394.2567881941575;
128 ^ 128;
Uint8Array.name = Uint8Array;
const v123 = new Uint8Array(2707, 2707, 128);
let v124;
try { v124 = v123.findLastIndex(v123, v123); } catch (e) {}
const o125 = {
    [v124]: Uint8Array,
};
