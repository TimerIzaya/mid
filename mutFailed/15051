class C3 {
    static #b;
    static [-6n] = -6n;
    constructor(a5) {
        try {
            this.#b;
        } catch(e7) {
        }
        try {
            const v10 = new Uint32Array(2432);
            const o11 = {
                ...v10,
            };
            this.b = this;
        } catch(e12) {
        }
    }
}
const v13 = new C3(-2147483647n);
const v14 = new C3(-6n);
new C3(6n);
class C19 extends C3 {
    #o(a21, a22, a23) {
        function f24() {
            return 6n;
        }
        return f24;
    }
    #c = v13;
    static ["oLI"] = "symbol";
    static #d;
    ["symbol"];
    1000 = 6n;
}
new C19(v14);
new C19();
new C19();
const v29 = ["268435441","268435441","268435441"];
const v30 = [v29,v29];
function f32() {
    return 129;
}
class C33 {
}
function F34(a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    let v38;
    try { v38 = this.getUTCSeconds(v29); } catch (e) {}
    v38[60];
    const v41 = this.valueOf().constructor;
    try { new v41(a36, a37, a36); } catch (e) {}
    a36.lastIndexOf();
}
new F34("268435441");
new F34(v30);
