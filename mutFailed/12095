class C3 {
    constructor(a5) {
        try { new a5(this); } catch (e) {}
        super.g = -4.0;
        const v9 = new BigInt64Array(4046);
        let o10 = {
        };
        [,...o10] = v9;
        Object.defineProperty(this, "d", { writable: true, enumerable: true, get: parseFloat, set: parseFloat });
    }
    m(a13) {
        try { a13(a13); } catch (e) {}
        function f18() {
            return -13;
        }
        return -55974n;
    }
}
new C3(-13);
const v22 = new Int32Array(1);
v22[0] = v22;
("toStringTag").constructor;
const v25 = new C3(-4.0);
const v26 = new C3(-13);
const t24 = (-64209).constructor;
t24(3n);
const v34 = new Uint16Array(4096);
v34.fill(-10);
function f36() {
    return C3;
}
[0.5168047944647176,-5.0,-2.220446049250313e-16,Infinity];
const v38 = [3.0,-8.262246275237048];
[-1.7976931348623157e+308,-700187.3144672213,0.8136181957604711,163774.4026304232,6.180432497022657,6.830106945386426,0.2112182999686475,-1000000000.0,3.0601828269367495,-3.6511960401634654e+307];
function f40(a41, a42, a43) {
    const o70 = {
        2147483649: a41,
        536870888: f36,
        "c": -4.0,
        "e": a41,
        [a43](a45, a46) {
            function f49() {
                return f49;
            }
            const v50 = [Infinity,-1.7411766874642142e+308,-1000000.0,-1000000000000.0,-1000.0,-8.633030896336538e+307,3.4879373433419367,3.0,4.0,0.3217386216666849];
            function f52(a53, a54) {
                new Int32Array(v50);
                a53();
                a54();
                return f52;
            }
            new Uint8ClampedArray(10);
            new Uint32Array(32);
            let v62 = Array;
            v62(a43);
            const v66 = new BigInt64Array(4046);
            [,...v62] = v66;
            new Int16Array(64);
            return Int16Array;
        },
    };
    return o70;
}
f40(C3, -13, f40);
const v73 = f40(v25, f40(v26, v38, f36), f40);
function f74() {
    return f74;
}
class C76 {
}
const v78 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v79 = [601759695];
const v80 = [1073741824,1073741823,1376142744,1073741825];
function f81(a82, a83, a84, a85) {
    function f87() {
        const v91 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v93 = arguments.toPrimitive;
        const o100 = {
            toString(a95, a96) {
                const v97 = a85 && Float64Array;
                function f98() {
                    f98 *= v93;
                    return Float64Array;
                }
                Object.defineProperty(v97, "valueOf", { value: f98 });
                v97 <= v91;
                return this;
            },
        };
        const o123 = {
            "c": 449836243n,
            [-4294967297n](a103, a104) {
            },
            "c": v79,
            valueOf(a106, a107) {
            },
            "b": -4294967295,
            [-4294967297n](a109, a110, a111, a112) {
                [0.8549471140289917,-3.0,4.0,-5.0,-2.0,-1.7976931348623157e+308,5.31145436861636,NaN,1.2778157707013417e+308];
                [-1.7976931348623157e+308,-4.047862669744725e+307,-2.2250738585072014e-308,0.790769162254034,0.024752255798642486,640440.6769019293,-2.0];
                return [923.3408061449261,-6.350919708227568e+307,-2.220446049250313e-16,0.04850379751250988,4.009495502233909];
            },
            "e": a82,
            "e": v73,
            "maxByteLength": -4294967295,
            "arguments": v78,
            ...C76,
            "type": "Vre",
            ..."Vre",
            valueOf(a117, a118) {
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            toString(a120, a121, a122) {
                return a82;
            },
            5: -4294967295,
            6: -268435456,
        };
    }
    f74();
    const v126 = new Int8Array();
    v126.buffer.slice(2147483648);
    %OptimizeFunctionOnNextCall(f87);
    let v131;
    try { v131 = v80["find"](..."find", a85, ...v79, ...v80); } catch (e) {}
    v131 <= a84;
    return a82;
}
const v135 = new Date(-9223372036854775807);
v135.setTime(-9223372036854775807);
