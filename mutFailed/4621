function f0() {
    const o34 = {
        ..."-52282",
        set d(a5) {
            a5 = -1.7976931348623157e+308;
            try {
                try {
                    Array(-2119616940);
                } catch(e9) {
                }
                Array(-12302);
                Symbol.toStringTag;
                const v16 = new Set();
                function F17(a19, a20) {
                    if (!new.target) { throw 'must be called with new'; }
                    try {
                        this.d = a19;
                    } catch(e21) {
                        for (let [v22,v23] of a19) {
                            try {
                                v16.values();
                            } catch(e25) {
                            }
                        }
                    }
                    try {
                        this.h = v16;
                    } catch(e26) {
                    }
                    try {
                        const v27 = v16[this];
                        try {
                            new F17(v27, -268435456n);
                        } catch(e30) {
                        }
                        this.b = Set;
                    } catch(e31) {
                    }
                }
                ("-52282").localeCompare("create");
            } catch(e33) {
            }
        },
        __proto__: "-52282",
        ..."-52282",
        "e": -1.7976931348623157e+308,
    };
    o34[1];
    return o34;
}
f0[Symbol.iterator] = f0;
const v38 = f0();
const o42 = {
    "execution": "async",
    "type": "minor",
};
gc(o42);
f0();
const o45 = {
};
new o45([-9007199254740992,-9,268435441,-1294677798], [-54512,-2147483647,24944,7,268435439,4096,-6]);
f0()[4];
const v55 = new Date();
const v58 = [257,[[v38],-26020,-1274938846],v55];
v58[2] = v58;
try { new Uint8Array(f0, 2, 2); } catch (e) {}
/[^[\d-z](?:a?)+[\cA]]/gdimy.unicodeSets;
/((x)(x)(x)\1*)/my;
