const v2 = new Float32Array(256);
function f3(a4) {
    function F6(a8, a9, a10) {
        if (!new.target) { throw 'must be called with new'; }
        const v11 = this.constructor;
        try { new v11(Uint16Array); } catch (e) {}
        a8 * a8;
        this.d = a8;
    }
    return Float32Array;
}
v2.toString = f3;
new Float32Array(1000);
const v19 = new Uint16Array(2);
class C20 {
    #e;
    static 268435439 = 256;
    static 817 = 2;
    get h() {
        this[-1] = Float32Array;
        try {
            this.#e = Float32Array;
        } catch(e22) {
        }
        return v19;
    }
    #f = Float32Array;
    [v2];
    f;
    268435440;
}
new C20();
new C20();
new C20();
[-24359,-1175707914,-3801176,9007199254740992,-15,0,-37142,-4096,-2,257];
[9223372036854775807,-5,-9];
[257];
function F29(a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    a32 * a32;
    const v34 = this.constructor;
    2 >= 2;
    try { new v34(this); } catch (e) {}
}
const v38 = new F29();
v38.constructor = f3;
const t46 = v38.constructor;
new t46();
