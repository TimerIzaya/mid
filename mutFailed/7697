let v0 = [-6];
const v1 = [255,4294967296];
Math.g = Math;
const v3 = Math.cbrt();
for (let [v4,v5] of v0) {
    try { v1["reduceRight"](...v3, ...v1, ..."reduceRight", ..."reduceRight", v5, Math); } catch (e) {}
}
v0 -= v0;
Date | v3;
[0,11,1073741823,268435439,3712,65536,-801];
new Uint16Array(7);
new Uint32Array(2441);
new Int16Array(2);
function f20() {
    return Uint32Array;
}
class C21 {
}
const v22 = new C21();
const v23 = [v22];
class C24 {
    constructor(a26, a27, a28) {
        function f29(a30, a31, a32) {
            v23.copyWithin();
            try {
                f29(a32, a31, 252859902);
            } catch(e36) {
            }
            const v37 = this >> 252859902;
            v37 - this;
            return -v37;
        }
        f29();
    }
}
class C41 extends C24 {
}
new C41();
new C24(C21, C41, C21);
