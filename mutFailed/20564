const t0 = "setUTCHours";
const v5 = new t0(10);
try { v5.filter("1073741823"); } catch (e) {}
let v7 = 4007;
~(v7++);
try { Uint32Array("1073741823", Uint32Array, "1073741823"); } catch (e) {}
try { new Uint32Array("setUTCHours", 10, 10); } catch (e) {}
new Uint32Array(v7);
new BigInt64Array(1024);
const v17 = [-Infinity,-7.230945278929126,2.220446049250313e-16,-1.7976931348623157e+308,-1000.0,-1.0,5.002169598915335,1e-15,-5.0,-4.0];
try { v17.toString(); } catch (e) {}
const v19 = [2.0];
v19[0];
v19.g = v19;
const v21 = [-113.88577577875685,NaN,-138.72295990426278,-725973.0177101751,1.0];
const v22 = v21?.values;
let v23;
try { v23 = new v22(); } catch (e) {}
const v24 = v21?.groupToMap;
v24.name = v24;
let v25;
try { v25 = new v24(v7); } catch (e) {}
1000000.0 % 1000000.0;
const v31 = -4096 * -4096;
v31 - v31;
const v35 = 1164279220 != 1164279220;
v35 && v35;
[-698004.1950483839,2.2250738585072014e-308,-658.5488403472419,1.7976931348623157e+308];
v25?.groupToMap;
let v39;
try {
const t0 = -4096;
v39 = new t0(-8516);
} catch (e) {}
const v40 = [-1.7976931348623157e+308,-2.2250738585072014e-308,1e-15,1.7976931348623157e+308,436.391218484674,984999.8983446106,-2.220446049250313e-16,-65664.25596205948,-568440.0637574068,0.6833182439703986];
v40.g = v40;
const v41 = [1.4550120056683328e+308,-1.0772967663163728e+308,186061.78370046848,-1.7976931348623157e+308,-5.0,-Infinity,0.03200553966660591];
try { v41.map(v40); } catch (e) {}
try { v41.flatMap(v7); } catch (e) {}
-953280260 << -953280260;
let v47 = -37370;
v47++;
BigInt64Array.name = BigInt64Array;
const v51 = new BigInt64Array(14);
v23++;
const v54 = 4096 / 4096;
Uint8Array.d = Uint8Array;
Uint8Array.prototype = Uint8Array;
const v56 = new Uint8Array(4096);
("major")[3];
const v62 = this.decodeURIComponent([-2.216170140955498,-2.2250738585072014e-308,-643865.3403199288,NaN]);
let v63 = 127;
v63 >> v63;
const v65 = v63++;
function f66(a67, a68) {
    a67.d = a67;
    try { a67(v17); } catch (e) {}
    try { a68(a68); } catch (e) {}
    return a67;
}
f66.g = f66;
try { new Promise(v56); } catch (e) {}
const v73 = new Promise(f66);
let v74;
try { v74 = v73.then(v51, v65); } catch (e) {}
try { v74.then(gc, gc); } catch (e) {}
let v76;
try { v76 = v74.catch(v54); } catch (e) {}
try { v76.then(-8516, "1073741823"); } catch (e) {}
let v78;
try { v78 = v74.then(v40, v56); } catch (e) {}
let v79;
try { v79 = v78.finally(v78); } catch (e) {}
function f80(a81, a82) {
    const o83 = {
    };
    return o83;
}
for (let v84 = 0; v84 < 25; v84++) {
    const v85 = f80();
    v85.h = v85;
    v85.e = v85;
    Object.defineProperty(v85, v84, { enumerable: true, get: f80, set: f80 });
    try { Reflect.has(v39, v62); } catch (e) {}
    let v88;
    try { v88 = Reflect.preventExtensions(v79); } catch (e) {}
    v88 || v88;
    !v88;
    const o92 = {
    };
    gc(o92);
}
