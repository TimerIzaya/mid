class C3 {
    toPrimitive = 46144;
    static #b;
    static #h;
    h = 46144;
    constructor(a5) {
        const o6 = {
        };
        const v8 = new Proxy(this, o6, o6, o6);
        let v9;
        try { v9 = new a5(a5, o6); } catch (e) {}
        Reflect.construct(a5, [46144,v8,-874580.3133453012,v8], v9);
    }
    static 10 = 431.6490004788732;
}
const v13 = new C3(C3);
const v14 = new C3(C3);
new C3(v14, v13, v14, v13);
[3,891411439];
[62457,36031,4096,48080,4294967295,-1024,22545,-533960884,-5,6];
[7,-15,-65536,-9223372036854775807,-1144732007];
function f25() {
    const o36 = {
        "e": -1781241988,
        8: -1781241988,
        "c": -1781241988,
        ..."g",
        ..."g",
        [1](a30, a31) {
            Object.defineProperty("n", "d", { writable: true, value: "n" });
            let v35;
            try { v35 = ("construct").toUpperCase(f25, Uint8ClampedArray, this); } catch (e) {}
            v35["n"] = Uint8ClampedArray;
        },
    };
    return o36;
}
const v38 = [f25,f25()];
function F39(a41, a42, a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
}
const v45 = F39.constructor;
try { v45(v38); } catch (e) {}
