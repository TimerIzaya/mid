function f0() {
}
let v10 = -9007199254740991n;
v10--;
new Date();
function f17(a18, a19, a20, a21) {
    arguments[4] = arguments;
    return a20;
}
const v23 = new gc();
try { v23.propertyIsEnumerable("cugPz"); } catch (e) {}
const v25 = [gc,gc,gc,v23];
v25[1];
const v27 = [v25,gc];
v27[1] = v27;
new Int32Array(56885);
let v32 = Math.expm1(Math);
v32--;
const v34 = [gc,v25,v25];
/an/gudimsy;
const v36 = /xa\b!/gdis;
v36.source = v36;
const v37 = /a+?z*/gm;
const v38 = [-3.0,0.0,8.692473731259366,-1e-15,0.598869256055706,-2.0,-2.220446049250313e-16,-Infinity,-9.722804109631653];
[-1.257587252130051,-93063.25159892451,2.0,-256299.38870889205,-Infinity,-1000.0,-7.521391161311806,1e-15];
[2.220446049250313e-16,-1000000000000.0,1000.0];
class C43 extends /nupa\Sc/vms.constructor {
}
4 | 4;
function F46(a48, a49, a50) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a49;
    for (let v51 = 0; v51 < 5; v51++) {
    }
    this.g = 4;
}
try { new F46(1094208614n, 1094208614n, 61688n); } catch (e) {}
function f53() {
    return v38;
}
f53[Symbol.toPrimitive] = f53;
class C56 {
    [v37] = v25;
    constructor(a58, a59) {
        f53();
        %PrepareFunctionForOptimization(f53);
        f53();
        f53();
        %OptimizeFunctionOnNextCall(f53);
        f53();
    }
    #b;
    [f53] = v34;
    1000;
    static [v37];
    #a;
}
C56.prototype = C56;
for (let v64 = 0; v64 < 5; v64++) {
    function f65() {
        for (let i68 = 0, i69 = 10; i68 < i69;) {
        }
    }
}
