function f0() {
    let v3 = -9223372036854775807;
    v3--;
    const o18 = {
        [-268435456]: -268435456,
        10: "g",
        get c() {
            class C6 {
                [-268435456];
            }
            new C6();
            new C6();
            new C6();
            if ("g") {
                const v10 = this % this;
                try { v3(v10, this); } catch (e) {}
            } else {
                Math.log(9007199254740990);
                Math.atan2("g", this);
                "g" || -268435456;
                "g" << -268435456;
            }
            return "g";
        },
    };
    function f19() {
        f0 - v3;
        function F21(a23, a24) {
            if (!new.target) { throw 'must be called with new'; }
        }
        class C25 {
        }
        const v26 = new C25();
        try {
            v26.__proto__ = F21;
        } catch(e27) {
        }
        return "g";
    }
    o18.toString = f19;
    return o18;
}
const v28 = f0();
const v29 = f0();
f0()[10];
const v33 = new WeakSet();
function f34() {
    return f0;
}
Object.defineProperty(v33, Symbol.toPrimitive, { writable: true, get: f34 });
[-1236785659,-1456632929,4294967295];
[2147483649,-107471756,637600078,268435456];
[-65537,-36789,-9223372036854775807];
try { ("172196601").link(v28); } catch (e) {}
0.42342408713376245 - v33;
function F49(a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    const v53 = this?.constructor;
    try { new v53("toString", this); } catch (e) {}
    a52 & a52;
    try {
        this.e = "d";
    } catch(e56) {
    }
    try {
        this.c = v29;
    } catch(e57) {
    }
}
F49.caller = F49;
const v58 = new F49("d", 0.42342408713376245);
const v59 = new F49("toString", 0.42342408713376245);
function f60(a61) {
    v58[v28] = a61;
    [1000.0,0.6407032564332336,1000000000000.0,2.0,-7.307458914702294,5.486813442488197,3.0,1e-15];
    [4.441276396001783e+307,-330856.02881763317,1.0,-1.7976931348623157e+308,-298962.538837012,1000000000000.0,1.0];
    return [-1000000000000.0,1000000.0,-8.249830422337343,1.5635312224579302e+308,-1.1356202611308798e+308,-1.7976931348623157e+308];
}
v59[Symbol.toPrimitive] = f60;
new F49(f0, v59);
const v68 = Promise.reject(Promise);
v68.constructor = f0;
try { v68.then(v33, v33); } catch (e) {}
v68.then(v68);
