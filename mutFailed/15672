class C3 {
    static toString(a5) {
        return "a";
    }
    static {
        try { new this(); } catch (e) {}
        const v11 = this.b;
        try {
            v11.h = 2.815049447113421e+307;
        } catch(e12) {
        }
        const v15 = new Uint8ClampedArray(16126);
        try { v15.toReversed(); } catch (e) {}
        try { Int16Array.from(24652); } catch (e) {}
        new Int16Array(366);
        new Float64Array(1609, C3, Uint8ClampedArray, 2.815049447113421e+307);
        try {
            v11.__proto__ = this;
        } catch(e24) {
        }
    }
}
try { new C3(); } catch (e) {}
const v26 = new C3();
const v27 = v26?.__lookupGetter__;
try { new v27(v26); } catch (e) {}
const v29 = new C3();
v29.__proto__ = v29;
const v30 = new C3();
const v31 = v30?.constructor;
try { new v31(); } catch (e) {}
class C33 {
    static 129;
    constructor(a35, a36, a37, a38) {
        const v39 = a38?.isPrototypeOf;
        try { new v39(v30); } catch (e) {}
        class C41 extends C3 {
            #a = v29;
            static #c;
            g = a37;
        }
        try { new C41(); } catch (e) {}
        new C41();
        new C41();
        new C41();
    }
    static #f = C3;
    static [24652] = 24652;
}
try { C33.bind(C3); } catch (e) {}
const v47 = new C33(C33, C33, C33, v29);
new C33(v29, v29, C33, v47);
const v49 = new C33(C3, v26, v26, v26);
const v50 = v49?.constructor;
try { new v50(C3, C3, C3, v29); } catch (e) {}
class C52 extends C33 {
    #valueOf(a54, a55, a56, a57) {
        let v58 = 0;
        do {
            const o59 = {
            };
            try {
                o59.g = 2.815049447113421e+307;
            } catch(e60) {
            }
            try {
                const o67 = {
                    n(a62, a63) {
                        return a63;
                    },
                };
                o67.g = 2.815049447113421e+307;
                o67.h = 24652;
            } catch(e68) {
            }
            try {
                const o69 = {
                };
                o69.g = 2.815049447113421e+307;
                o69.h = 24652;
                o69.f = a54;
            } catch(e70) {
            }
            try {
                const o71 = {
                };
                o71.g = 2.815049447113421e+307;
                o71.h = 24652;
                o71.f = a54;
            } catch(e72) {
            }
            v58++;
        } while (v58 < 4)
        return v30;
    }
}
new C52();
const v77 = new C52();
v77.length;
new C52();
for (let v80 = 0; v80 < 25; v80++) {
    const v81 = [601759695];
    const v82 = [1073741824,1073741823,1376142744,1073741825];
    try { v82.map(v29); } catch (e) {}
    function f85(a86, a87, a88, a89) {
        try { new Uint8ClampedArray(v81, 522675525n, v82); } catch (e) {}
        const v93 = new Uint8ClampedArray();
        const v96 = v93 & -2;
        v96 - v96;
        const v98 = Math.acosh(v96);
        v98 >>> v98;
        let v100;
        try { v100 = v82["find"](..."find", a89, ...v81, ...v82, ...522675525n); } catch (e) {}
        return v100;
    }
    f85.f = f85;
    for (let v101 = 0; v101 < 5; v101++) {
        v101--;
        f85();
    }
}
