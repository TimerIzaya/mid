const v2 = new Float32Array(1584);
const v5 = new Int16Array(127);
const v8 = new Uint8Array(0);
class C9 extends Float32Array {
    static [v2];
    [v2] = 127;
    [1584] = 0;
    constructor(a11, a12, a13, a14) {
        super(a14, 127);
        super[a14];
        function f16(a17) {
            function f19(a20) {
                a20[9] = a20;
            }
            this.onmessage = f19;
            try {
                this.__proto__ = v8;
            } catch(e21) {
            }
        }
        const v24 = ["function"];
        const o25 = {
            "arguments": v24,
            "type": "function",
        };
        new Worker(f16, o25);
        Math.sign(15419);
        Math.cbrt(-4294967297);
        +15419;
    }
    static [-2] = Int16Array;
}
const v33 = new C9(C9, v8, Uint8Array, Int16Array);
const v34 = new C9(127, C9, v5, Float32Array);
if (v34) {
} else {
    v2["reverse"](..."reverse", 0, ..."reverse", ..."reverse", ..."reverse");
}
new C9(127, Float32Array, v34, C9);
class C39 {
    #m(a41, a42) {
        try {
            v8.g = v8;
        } catch(e43) {
        }
        return Float32Array;
    }
    static p(a45, a46, a47) {
        %VerifyType(a45);
        [127,C9];
        [v33,a45,0];
        [this,a45,v8];
        return a46;
    }
}
new C39();
new C39();
new C39();
const v54 = [1000000000.0,2.2250738585072014e-308,-3.0,-2.2250738585072014e-308,-2.2250738585072014e-308,-6.525028373249204e+307,-7.851646360254072e+307,0.6785915059434757,-0.0];
class C55 {
}
C55[Symbol.replace] = v54;
