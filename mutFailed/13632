function f0() {
}
const v1 = /(?: foo )a\b!/gudimsy;
501822767n ^ 501822767n;
class C4 {
    static {
        const v6 = this.toString();
        try { v6(); } catch (e) {}
    }
}
const v8 = /\1\2(a(?:\1(b\1\2))\2)\1K(?:a{5,1000000}){3,1000000}+/imsy;
const v9 = /p?/u;
const v10 = [f0,f0,v8];
const v11 = [v1,v9,v8];
const v12 = [f0];
/Sa[a]c/vdy;
const v14 = /\1(a)0Lsa(?!b)pm+/gvdis;
const v15 = /a{,}/dms;
const v18 = new Array(127);
function F19(a21, a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a22;
    } catch(e25) {
    }
}
new F19(v9, v14, v18, v10);
const v27 = new F19(F19, v9, v12, v15);
new F19(v27, v1, v11, F19);
const v37 = new Int16Array(2);
const v41 = ["dgV"];
Reflect.apply(("undefined").replaceAll, v37, v41);
function f44() {
    function f45(a46) {
        try {
            const o47 = {
            };
        } catch(e48) {
        }
    }
    try {
    } catch(e49) {
    }
}
const o52 = {
    "type": "function",
};
new Worker(f44, o52);
