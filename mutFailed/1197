function f3() {
    return "M";
}
new WeakSet();
const v9 = [-5.0];
["268435440",-5.0,-5.0,1.7976931348623157e+308,v9];
class C12 {
    static #m(a14) {
    }
    constructor(a16) {
        new Float32Array();
        const v20 = new Uint16Array();
        new Float32Array(v20, -4294967296, a16);
    }
}
new C12(-4294967296);
[f3];
WeakSet in v9;
try { ("M").lastIndexOf(-96639756); } catch (e) {}
class C29 {
}
([586209.1308562411,9.273207833056233,-793.5051180378861,-88.02009084622205,1000.0,5.993768942190951e+307,0.6895260767593681,3.203916786355496,1.7976931348623157e+308,-1.0422896205696638e+308]).fill(-1073741824, -27205);
function F34() {
    if (!new.target) { throw 'must be called with new'; }
}
const v39 = new BigInt64Array(6);
v39.findLast(F34);
Date.toString = Symbol;
class C43 extends Date {
    toString(a45, a46, a47) {
        class C50 {
            static 9 = 9.187362692894364;
        }
        for (const v51 in C50) {
        }
        new Uint32Array(128);
        const v56 = new Int16Array(64);
        class C57 {
        }
        const v58 = [-536870912,-65537,10,-9007199254740990,-11,46376,2,6];
        class C59 {
            constructor(a61, a62) {
                let {...v63} = v58;
            }
        }
        new BigInt64Array(486);
        return v56;
    }
}
["-65537","-65537","-65537","-65537"];
new Uint8Array(105);
([1.479450712344466]).join().__proto__;
const v74 = new C43();
try { v74.setMonth(C29, C43); } catch (e) {}
