new BigUint64Array(1880);
for (const v5 in "toString") {
}
const v6 = /(?!(a))\1*/vmy;
v6.compile(/k/gdsy);
new BigUint64Array(1);
function f12() {
    const v13 = v6.__proto__;
    Object.defineProperty(v6, 15, { configurable: true, enumerable: true, set: f12 });
    Reflect.construct(v13, ["toString",Reflect,f12], f12);
    Math.max(4.0, 4.0);
    return 4.0;
}
%PrepareFunctionForOptimization(f12);
new BigInt64Array(4);
new BigUint64Array(3);
new Int8Array(3540);
new Uint8ClampedArray(255);
/qca\D/udiy;
const v35 = [1073741824,1073741823,1376142744,1073741825];
let v37 = Reflect;
v37.defineProperty(v37, undefined, v35);
const v40 = new Int32Array(Int32Array, Int32Array, Int32Array);
/[^\P{Decimal_Number}]/gvims;
/a||bc(G(?<!)\xed\xb0\x80+)/us;
const v45 = new Int32Array(8);
[-0.0,1.7336874417333694e+308,-1000000000000.0,-2.708874383186492,136.48895655986053];
const v48 = [-1.7552974103302452e+308,440326.28119465103,342705.1799795334,0.0];
[0.1818574892082211];
const v52 = ++v37;
Math.atanh(-13);
Math.atanh(-13);
~Int32Array;
v37 + v52;
+v52;
v37 || -13;
const v60 = new Date(v45);
Object.defineProperty(v40, Set, { writable: true, get: f12, set: Date });
Reflect.construct(Date, [3540], f12);
!0.0;
Math.sqrt(v48);
Math.asin(1537420886 && v48);
1537420886 && 0.0;
const v74 = new Set();
const v75 = v74.add(v60);
let [v76,,...v77] = v74;
v76.setUTCHours(v75, Float64Array, v77);
const v81 = new BigInt64Array();
var c = v81;
new Float64Array(1073741824);
v45[3] = 9007199254740991;
