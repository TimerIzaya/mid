function f0() {
    let v3 = 0.6449258232303566;
    v3--;
    const o16 = {
        "a": 3,
        3372091413: 3,
        get f() {
            try {
                this.fuck(3, 3, this);
            } catch(e7) {
            }
            try { this.join(6.471462631000794e+307, this, this); } catch (e) {}
            let v13 = 6.471462631000794e+307 >>> 6.471462631000794e+307;
            +(++v13);
            return 55743260;
        },
    };
    o16[3372091413];
    return 3;
}
f0();
f0();
f0();
try { ("stack").trimLeft(); } catch (e) {}
65535 >>> 65535;
const v31 = new Int16Array(0);
const v32 = v31?.findLast;
try { new v32("bigint"); } catch (e) {}
Float32Array.BYTES_PER_ELEMENT;
new Float32Array(9);
0 !== 0;
new Int32Array(0);
new BigInt64Array(11);
new Int32Array(280);
function f48() {
    let v49 = 852.2904873570058;
    const o54 = {
        m(a51, a52) {
            v49++;
            return 280;
        },
    };
    try { o54.m(o54, Float32Array); } catch (e) {}
    return Int32Array;
}
const v56 = f48();
try { v56.bind("uR"); } catch (e) {}
f48();
new Int8Array(280);
const o61 = {
};
o61.d = BigInt64Array;
o61.d = o61;
try { ("function")["-268435456"](); } catch (e) {}
function f65() {
    return f48;
}
function f66(a67) {
    /Kxyz??/u;
    /\p{gc=Nd}/gvim;
    /a\W/uis;
}
Object.defineProperty(f65, "h", { writable: true, configurable: true, enumerable: true, set: f66 });
f65.h = f65;
const v71 = /(?:a*)+q(?<a>.)/guds;
function f72(a73) {
    const o75 = {
        get d() {
            return this;
        },
    };
    return f65;
}
for (let [i81, i82] = (() => {
        const v78 = /Aabc|defmxyz{1,}?qMa{0,1}?/gvdis;
        v78.flags = v78;
        const v79 = v78.exec("function");
        try { v79.shift(); } catch (e) {}
        return [0, 10];
    })();
    i81 < i81;
    ) {
    f72(v71);
}
