class C3 {
    set b(a5) {
        Object.defineProperty(a5, 1000, { writable: true, configurable: true, enumerable: true, value: 2147483648 });
        a5 = this;
    }
    static toString(a7) {
        let v8;
        try {
        const t0 = -578828680;
        v8 = t0(this, a7, this, a7);
        } catch (e) {}
        2147483648 - v8;
        return a7;
    }
    static e = 2147483648;
    b = -578828680;
    static {
        delete this.g;
    }
    set b(a13) {
        gc();
    }
    2 = 2147483648;
    11 = 2147483648;
    9 = 2147483648;
}
const v16 = new C3(-578828680, 2147483648);
const v17 = new C3(v16, C3);
const v18 = new C3();
function F19(a21, a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    const v25 = this?.constructor;
    try { new v25(v17, 2147483648, 2147483648, a21); } catch (e) {}
    a21[9];
    a24--;
    try {
        this.c = -578828680;
    } catch(e29) {
    }
}
const v30 = new F19(v16, v18, -16, -578828680, v16, 2147483648, -578828680);
function f31(a32) {
    var a = a32;
    const v34 = new Float32Array(Float32Array, Float32Array, Float32Array);
    async function f36(a37, a38, a39) {
        v34.h = v34;
        await 160;
        return f36;
    }
    return f36;
}
v30.toString = f31;
class C42 extends Set {
}
new C42();
const o44 = {
};
const v45 = new F19(2147483648, v18, -16, -578828680, o44);
const v46 = new F19(v30, v17, v45, -16);
class C47 {
    4259938026;
}
new C47();
const v50 = ["bpkzx","bpkzx","bpkzx"];
v50.toString = f31;
const v51 = [v50,v50,v50];
v51.valueOf = f31;
"bpkzx" * v51;
v46.c;
65535n === 65535n;
const o58 = {
};
function f62(a63, a64) {
    const o68 = {
        968: a64,
        "d": a63,
        [268435439n]: 2105444095n,
        __proto__: -4294967296n,
        valueOf(a66) {
            return 268435439n;
        },
    };
    return a63;
}
class C70 extends Uint8Array {
}
