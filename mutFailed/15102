new Set();
function F2(a4) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = this;
    } catch(e5) {
    }
}
const v6 = new F2(F2);
const v7 = v6?.constructor;
try { new v7(Set); } catch (e) {}
const v9 = new F2(F2);
const v10 = v9?.constructor;
try { new v10(Set); } catch (e) {}
const v12 = new F2(v9);
v12.e = v12;
class C14 {
    constructor(a16, a17) {
        Date | a16;
    }
}
2665 * 2665;
new Uint32Array(2665);
Uint8ClampedArray.g = Uint8ClampedArray;
const v25 = new Uint8ClampedArray(542);
try { v25.slice(v9, 2665); } catch (e) {}
new Set(7);
class C32 {
    static #e = "d";
    static 4;
    8;
    static h = 2665;
    set e(a34) {
        class C35 {
        }
        class C36 {
            static {
            }
        }
    }
    584 = v9;
    #a;
}
new C32();
new C32();
new C32();
let v43 = 2308;
v43++;
new Int16Array(v43);
const o50 = {
    "execution": "async",
    "type": "minor",
};
gc(v43);
gc();
