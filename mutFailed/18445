class C3 {
    static get c() {
        const o7 = {
            "maxByteLength": 127,
        };
        const v9 = new SharedArrayBuffer(127, o7);
        new Float64Array(v9);
        return Float64Array;
    }
    c = 688.014882828624;
    45 = 688.014882828624;
}
const t12 = 688.014882828624;
new t12();
const v13 = new C3();
const v14 = new v13();
const v15 = [-1976,2,-1234498914];
const v16 = [-10,2147483649,-60538,1024];
const v17 = [1,0];
try { v17.flatMap("setUTCMonth"); } catch (e) {}
function f19(a20, a21) {
    a21[45] = a21;
    const o28 = {
        [v15]: a21,
        "b": a20,
        "a": v17,
        m(a23, a24, a25) {
            try {
                super.isExtensible(v16);
            } catch(e27) {
            }
            return a24;
        },
        "d": a21,
        [-15890]: v16,
        __proto__: v13,
        "f": v16,
    };
    o28.c = v15;
    return C3;
}
const v29 = f19(v16, v14);
v29[45];
const v31 = f19(v16, v14);
new Set();
const v34 = ~v17;
/a\nb\bc46^xxx$/udis;
const v40 = f19(v29, -15890, -15890, v34, "setUTCMonth", ...v16);
try {
    v40.f = v31;
} catch(e41) {
}
f19(v15, v14);
const v43 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
for (let v44 = 0; v44 < 25; v44++) {
    const v46 = "p" + v44;
    try { v46.padEnd(v31); } catch (e) {}
    v43[v46] = v44;
}
const o48 = {
    ...v43,
};
o48.p9;
