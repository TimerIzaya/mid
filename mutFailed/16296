const v2 = new Int16Array(256);
Int16Array >>> Int16Array;
const o5 = {
    "maxByteLength": -2,
};
const v8 = new Uint8Array(1000);
new Int32Array(0);
class C17 {
    constructor(a19, a20) {
        /(?:a*)+q(?<a>.)/guds["exec"]("exec");
        [434.6610848146279,0.3356581715008019,121.70566867916364,1000.0,-390893.9850270561,-1.6600472788432251e+308,1000.0];
        [2.220446049250313e-16,9.13217142247856,-5.0,-80.24802218985849];
        [-1.7976931348623157e+308];
        v2["every"](a19, a19);
        const o42 = {
            [1024n](a33, a34) {
                super.f = a33;
                return -9223372036854775808;
            },
            [-21104n]: -9223372036854775808,
            889: -9223372036854775808,
            __proto__: -9223372036854775808,
            [-9223372036854775808](a36) {
                try { this.sin(a36, a36, a36); } catch (e) {}
                -9223372036854775808 === -21104n;
                const o39 = {
                };
                new Proxy(this, o39);
                return this;
            },
        };
        o42[1024] = o42;
        return o42;
        const v43 = this.constructor;
        try { new v43(a20, a20, v43, this, v43); } catch (e) {}
        v8.reduceRight = Int16Array;
        function F46() {
            if (!new.target) { throw 'must be called with new'; }
        }
        new F46();
        this[-2147483648] >>>= -7;
        class C49 {
        }
        const v50 = new C49();
        Date.UTC([C49,C49], v50, -4096, 65535);
        for (let v56 = 0; v56 < 5; v56++) {
        }
    }
}
new C17(-2147483648, -7);
