class C3 {
    constructor(a5) {
        const v7 = ["setFullYear",1300752439,"setFullYear"];
        const t2 = [-554.3883745381902,874.2208688504531,0.0,1.7976931348623157e+308,1e-15];
        t2[8] ^= -297927.3051276769;
        const v10 = [];
        try {
            v10.some();
        } catch(e12) {
            e12.stack;
        }
        super.e <<= Reflect.construct(a5, v7, a5);
        function f15() {
            return Reflect;
        }
    }
    #p(a17, a18) {
        try {
            a17.f = a17;
        } catch(e19) {
        }
        try {
            const v20 = [155533.8602852358,2.0];
            function F22() {
                if (!new.target) { throw 'must be called with new'; }
                this.__lookupGetter__.bind();
                for (const v29 of Array(19793)) {
                    v20[658291203] = null;
                }
            }
            const t30 = "setFullYear";
            t30.toString = a18;
            let [] = ["QnPQ","QnPQ","QnPQ","QnPQ","QnPQ"];
            const v32 = new Int8Array();
            for (const v33 in v32) {
            }
        } catch(e34) {
        }
        return "QnPQ";
    }
}
new C3("QnPQ");
const v36 = new C3("QnPQ");
const v37 = new C3("setFullYear");
function F41(a43, a44, a45) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a45;
    } catch(e46) {
    }
    try {
        this.a = "setFullYear";
    } catch(e47) {
    }
    try {
        this.h = 257;
    } catch(e48) {
        const v49 = [10,-9007199254740991,512,7];
        function f50(a51) {
            const o52 = {
                ...v49,
            };
            return f50;
        }
    }
}
new F41(257, 268435440, "QnPQ");
new F41(268435440, 268435441, v36);
const v55 = new F41(268435440, 1300752439, v37);
const v56 = /(x)(x)(x)\1/uis;
const o63 = {
    2: F41,
    __proto__: v55,
    [v56](a58, a59, a60, a61) {
        super.test();
    },
};
function f64() {
    return f64;
}
function F65(a67, a68) {
    if (!new.target) { throw 'must be called with new'; }
}
const v69 = new F65();
v69.constructor = f64;
const v70 = new F65(F65, F65);
Object.defineProperty(v70, "constructor", { writable: true, configurable: true, value: f64 });
function f72() {
    const o76 = {
        [null]() {
            try { this.null(f72, this, this, f72); } catch (e) {}
            super.b;
        },
    };
    return o76.null();
}
