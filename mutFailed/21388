class C3 {
    static #c;
    [-4294967297] = -4.0;
    valueOf(a5, a6) {
        let v7;
        try { v7 = a5(a5, -4294967297, this, a6, a6); } catch (e) {}
        const v8 = delete v7?.h;
        v8?.[25];
        v8 & -4294967297;
        return a6;
    }
    static get f() {
        new BigUint64Array(186);
        new Int8Array(2);
        new Int16Array(3040);
        return 186;
    }
}
const v21 = new C3();
const v22 = new C3();
class C24 extends String {
    6 = String;
}
const v25 = new C24();
new C3();
function f27() {
    return v22;
}
let v30 = 0.982093033714947;
class C31 extends C3 {
    #d = -4.0;
    static {
        function f33(a34, a35, a36, a37) {
            arguments[2];
            return a37;
        }
        f33();
    }
    [-4294967297];
    constructor(a42, a43) {
        super();
        Object.defineProperty(this, a42, { writable: true, enumerable: true, get: f27, set: f27 });
        v30 = -439.11627688413125;
    }
    #valueOf(a45, a46, a47, a48) {
        Object.defineProperty(a46, "d", { writable: true, configurable: true, enumerable: true, get: f27, set: f27 });
        const v50 = Symbol.iterator;
        const o86 = {
            "defineProperty": f27,
            "execution": v25,
            ...-439.11627688413125,
            toString(a52, a53, a54) {
                let v55;
                try { v55 = this.toString(a53, v21, a52); } catch (e) {}
                function f57(a58, a59, a60) {
                    return v50 == C24 ? v50 : C24;
                }
                f57(255n, v55);
                this[a48] = a48;
                return v21;
            },
            [v50]() {
                let v65 = 10;
                const o85 = {
                    next() {
                        v65--;
                        const v70 = new Uint32Array();
                        const v72 = v70.constructor;
                        function f73(a74, a75, a76, a77) {
                            return typeof 9007199254740990n >= "object";
                        }
                        let v81;
                        try { v81 = new v72(); } catch (e) {}
                        f73(9007199254740990n, v81, v72, v72);
                        const v83 = v65 == 0;
                        const o84 = {
                            "done": v83,
                            "value": v65,
                        };
                        return o84;
                    },
                };
                return o85;
            },
        };
        return a47;
    }
}
new C31(v30, -439.11627688413125);
new C31(-4.0, -4.0);
new C31(v30, v30);
Date.parse();
