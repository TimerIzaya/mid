Math.atanh(0.033437543729764596);
80034998 * 80034998;
let v7;
try { v7 = Int32Array.bind(0.033437543729764596); } catch (e) {}
const v8 = new Int32Array(80034998);
v8.indexOf();
const v11 = (80034998)[5];
-[];
const o14 = {
};
const v16 = [-2.220446049250313e-16];
v16.g = v16;
[2.220446049250313e-16];
const v18 = [-615823.0455080275,3.0,-6.843293093113645e+307,-8.190921956135426,-9.064919108696719,-920.7411554241138,4.2421424224526003e+307,-3.0,614.2473329413892,3.207660208956338e+307];
let v19;
try { v19 = v18.fill(v18); } catch (e) {}
256 !== 256;
new v7(256);
const v28 = new BigInt64Array();
function f29() {
    const v30 = v28[undefined];
    const v31 = v30 instanceof f29;
    const o32 = {
    };
    v19.h = v31;
    return v30;
}
const v33 = new Float32Array(378);
v33[35] = v33;
650 / 650;
let v37;
try { v37 = new Int8Array(Int32Array, 0.033437543729764596, Int8Array); } catch (e) {}
new Int8Array(650, v11);
function f39() {
}
typeof f29;
class C41 {
    static p(a43) {
    }
}
new Int32Array();
new Date();
v37.getUTCDate();
