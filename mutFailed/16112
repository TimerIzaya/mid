const v0 = [];
function f13(a14, a15, a16, a17) {
    a15[Symbol.toPrimitive] = f13;
    const o32 = {
        "f": v0,
        "a": a17,
        "d": 1000000000000.0,
        [v0](a21, a22, a23, a24) {
            let v20 = this;
            Math.sign(v20);
            v20 || 9;
            9 * (9 && ++v20);
            return a15;
        },
        13: a14,
    };
    return o32;
}
f13(-536870912n, 9.24323499442497, 9.24323499442497, -55104n);
f13(127n, 9.24323499442497, 1000000000000.0, -55104n);
f13(127n, v0, f13, -536870912n);
function F36(a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    for (let v40 = 0; v40 < 5; v40++) {
    }
    const v41 = this.constructor;
    const t25 = "9007199254740992";
    t25["255"] &= 7;
    const v47 = new Float32Array(2);
    function f48() {
        Math.cosh(-9.488890520175198e+307);
        return 2.220446049250313e-16;
    }
    v47.valueOf = f48;
    v47[1] = v47;
    try { new v41(); } catch (e) {}
}
new F36();
