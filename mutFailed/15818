const v2 = new Float64Array(8);
new Uint16Array(5);
const v8 = new Float64Array(16);
class C9 extends Float64Array {
    static [16];
    constructor(a11, a12) {
        for (let i = 0; i < 10; i++) {
            this[this];
        }
    }
    [-1];
    2050;
    static #h;
    /*
    constructor(a15, a16, a17) {
        super(v2, a16, a15);
        function f18(a19, a20, a21, a22) {
            function f23() {
                Math.round(a20);
                const v27 = Math.tanh(-4294967295);
                v27 * v27;
                return v27;
            }
            f23();
            eval(a19);
            %OptimizeFunctionOnNextCall(f23);
            return f18;
        }
        try {
            v2.#h;
        } catch(e33) {
        }
        super[v2] = v8;
        v2[a16];
    }
    */
    static #f = Float64Array;
}
new C9(5, 8, 8);
new C9(8, 16, 5);
new C9(16, 8, 16);
Reflect.preventExtensions(Reflect);
Math.cosh(Math);
const v45 = new BigUint64Array(10);
function F46() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        Object.defineProperty(v45, 0, { writable: true, value: 4096 });
    } catch(e49) {
    }
}
("minor").valueOf("minor", "minor", "minor", "minor");
let v65 = -1024;
function F66(a68, a69, a70, a71) {
    if (!new.target) { throw 'must be called with new'; }
}
const v72 = new F66();
const v73 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v74 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
class C76 {
}
const v77 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v78 = [601759695];
function f79() {
    Array().unshift();
    try {
        v73.forEach(Float64Array);
    } catch(e85) {
    }
    const o87 = {
        "c": v78,
        "arguments": v77,
        ...v72,
        "type": C76,
    };
    const v89 = [];
    function F90(a92) {
        if (!new.target) { throw 'must be called with new'; }
    }
    class C93 extends F90 {
        valueOf(a95, a96, a97, a98) {
            super[this] = F90;
        }
    }
    const v99 = new C93();
    const o106 = {
        set g(a101) {
        },
        [v89](a103, a104, a105) {
        },
    };
    for (const v107 in o106) {
        try { v99.valueOf(v107); } catch (e) {}
    }
    const v111 = [];
    const v112 = [-2.0,272822757,"function"];
    const o113 = {
        __proto__: v112,
    };
    v111[o113] &= 272822757;
    v65 %= -268435456;
    new Uint32Array(v74);
}
class C125 {
    static {
        for (let v130 = 0; v130 < 32; v130++) {
        }
    }
}
function f134(a135, a136) {
    return this;
}
f134(f134, f134);
class C139 {
}
class C140 extends C139 {
    constructor(a142) {
        super();
        for (let v143 = 0; v143 < 25; v143++) {
            this["p" + v143] = v143;
        }
    }
}
new C140();
