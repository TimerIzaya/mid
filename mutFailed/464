function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -256;
    } catch(e3) {
        try {
            this.toString = e3;
        } catch(e4) {
        }
        try {
            this.__proto__ = e3;
        } catch(e5) {
        }
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
function f9() {
    if (F0 > v7) {
        v7.__proto__ &= v6;
    } else {
        %VerifyType(f9);
        v6[v6];
    }
    return F0;
}
function F12(a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a14;
    } catch(e16) {
    }
    try {
        const v18 = v6 >> (a15 %= "IxTD");
        Object.defineProperty(this, 2, { writable: true, configurable: true, value: this });
        v18 >>> f9;
        delete v8["IxTD"];
        [-0.0,3.5501749464532004,-0.0,-2.220446049250313e-16,0.7626441105891978,-585.9055525866645,1e-15,1000000.0] ** "IxTD";
        this.b = v6;
    } catch(e23) {
    }
}
new F12(v8, v6);
const v25 = new F12(v7, v8);
new F12(v7, v6);
class C27 extends F0 {
    toString(a29, a30) {
        new f9();
        super.d = v25;
        return F0;
    }
    constructor(a33, a34) {
        super();
        f9();
        %PrepareFunctionForOptimization(f9);
        f9();
        f9();
        %OptimizeMaglevOnNextCall(f9);
        f9();
        try {
            v7.__proto__ = a34;
        } catch(e39) {
        }
    }
}
const v40 = new C27(v8, C27);
const v41 = new C27(C27, v8);
new C27(v41, v40);
function f47(a48) {
    const o52 = {
        __proto__: 2,
        213: a48,
        ...a48,
        "g": 2,
        p(a50, a51) {
            return 2;
        },
    };
    return o52;
}
f47(f47);
%PrepareFunctionForOptimization(f47);
const v54 = f47();
%OptimizeFunctionOnNextCall(f47);
f47(v54);
