class C3 {
    e;
    o(a5) {
        for (let v7 = 0; v7 < 32; v7++) {
            JSON["p" + v7] = v7;
        }
        return a5;
    }
    h;
    c;
    3373;
    static #a = 268435456;
}
function f10(a11) {
    const v13 = new WeakMap();
    function F14(a16) {
        if (!new.target) { throw 'must be called with new'; }
        const v17 = this?.constructor;
        try { new v17(v13); } catch (e) {}
        try {
            this.c = WeakMap;
        } catch(e19) {
        }
    }
    return WeakMap;
}
C3[Symbol.toPrimitive] = f10;
const v22 = new C3();
const v23 = new C3();
Object.defineProperty(v23, Symbol.toPrimitive, { value: f10 });
const v26 = new C3();
const v27 = [-3,C3,v26,v23];
v27.toString = Symbol;
const v28 = [v27,C3,65537];
const v29 = [v26,v22,-3];
function f30() {
    [-2.2250738585072014e-308,2.220446049250313e-16,556.8557158120539,-1000000000.0,0.5429330803275382,1.6939833573683823e+308,35.91867543906642,458.78748697812125];
    [-6.064854627964374e+307,Infinity,-1000000000.0,0.2852653940644838,4.684633158923407e+307,-271.9802877044699];
    return [5.0,516366.99254972744,0.30134559248805315,1000.0,3.602486304706588,-654932.0487935061,0.8565453384162278,1e-15,-1.0,-1.0];
}
v29.toString = f30;
function f34(a35, a36) {
    function f37(a38, a39) {
        const v41 = new BigInt64Array(v26, v26, v26);
        const v42 = `
            var c = v41;
        `;
        eval(v42);
        return f34;
    }
    a36.toString = f37;
    const o45 = {
        "c": a35,
        [a35]: v29,
        "f": v27,
        "b": a36,
        "e": a35,
        [v29]: a35,
        [-3]: -3,
        9: v22,
        "a": v29,
        __proto__: a36,
        "d": f34,
        ...v23,
        "h": v29,
        "g": a35,
    };
    return o45;
}
f34(C3, v27);
f34(v27, v28);
f34(v26, v28);
for (let v51 = 0; v51 < 10; v51++) {
    (759956410).__defineGetter__;
}
const v53 = new BigUint64Array();
function f54() {
    const o56 = {
        get a() {
            return f54;
        },
    };
    return o56;
}
const v57 = f54();
Object.defineProperty(v57, "toJSON", { writable: true, configurable: true, value: v53 });
const v58 = f54();
function F59(a61, a62, a63, a64) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a62;
}
const v65 = new F59(v58, v57);
v65.toJSON = v22;
function f66(a67, a68, a69) {
    return v53;
}
const v72 = [v65];
const o73 = {
    "arguments": v72,
    "type": "function",
};
new Worker(f66, o73);
