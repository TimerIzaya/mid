class C1 {
}
try { ("string").trimStart(); } catch (e) {}
const v5 = ["e","e","e","e","e"];
const v6 = "e" | v5;
new Date(v6);
class C11 {
    static {
        if (this) {
        } else {
            this && this;
            this.f += "MAX_SAFE_INTEGER";
            const v16 = [9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
            function F17(a19, a20) {
                if (!new.target) { throw 'must be called with new'; }
                const v21 = this.constructor;
                try { new v21(this, a20); } catch (e) {}
                this.c = a19;
            }
            const v23 = new F17();
            const v26 = new Uint8Array(v16, v23, 201);
            v16[6] = v26;
        }
        const v28 = delete this[2904769270];
        ("setUTCMinutes").toUpperCase();
        ("setUTCMinutes").normalize();
        const v32 = /xyz{1,32}?/gusy;
        class C33 {
            268435440 = v32;
        }
        let v34;
        try { v34 = this(this, this, v28, v28); } catch (e) {}
        super.g **= v34;
    }
    #e = -1e-15;
    #h = "64";
    #p(a36, a37, a38, a39) {
        super.m();
    }
    static #b;
    #n(a42, a43, a44, a45) {
        return v5;
    }
    [-1e-15];
    static #b = "64";
    a;
}
new C11();
new C11();
new BigUint64Array(2, v6);
Math.sinh(128);
const v54 = new C11();
/(?!(a))\1/udi;
/(?:a?)+/gvds;
class C57 {
}
let v58 = new C57();
class C59 extends C57 {
    o(a61, a62) {
        v58 %= this;
        %VerifyType(super.g);
    }
}
const v70 = new C59();
v70 * v54;
/a$/gum;
new Int32Array(13);
new BigInt64Array(3);
const v81 = [-700765.6455759181,-1.0,-1e-15,238.56580086181475,-6.99438605118472e+307,0.8641795299038513,1000000000000.0,0.6448161003466354];
const v85 = new Uint32Array(2);
for (let v86 = 0; v86 < 100; v86++) {
    const o88 = {
        [-9007199254740991]: 512,
        [v85]: v81,
    };
}
new Uint8ClampedArray(207);
-256n >> -256n;
