function f0() {
    const o12 = {
        "g": -0.0,
        6: 5.0,
        get e() {
            const v5 = this[-38797];
            v5[2] = v5;
            return -0.0;
        },
        toString(a7) {
            try {
                const v8 = this.g;
                try { v8.p(v8, a7, this); } catch (e) {}
            } finally {
                [a7,this,...this,...-0.0,...-38797];
            }
            return undefined;
        },
    };
    return o12;
}
const v13 = f0();
const v14 = f0();
const v17 = [v13,[v14,f0()]];
const v18 = [v14,v13];
class C22 extends f0 {
    [838571761n] = v13;
    constructor(a24, a25) {
        super();
        [2.2250738585072014e-308,0.8999065854532883,0.47560679854511767,2.0,-2.2250738585072014e-308,-1.7976931348623157e+308];
        [472.0173442215453,1000000.0];
        [NaN,Infinity,744518.6328331705];
    }
    7 = v18;
    static get a() {
        const o30 = {
            [838571761n]: v14,
            "a": v18,
        };
        try {
            o30.a = o30;
        } catch(e31) {
        }
        return 15n;
    }
}
new C22(v14, v18, C22);
new C22(11n, v18);
new C22(v14, v17);
const v37 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
function f38(a39, a40) {
    return a40;
}
Object.defineProperty(v37, Symbol.toPrimitive, { configurable: true, value: f38 });
const v43 = [-215670.80726765236,-5.0];
function f44(a45, a46, a47, a48) {
    const v49 = Symbol.toPrimitive;
    Object.defineProperty(a45, v49, { configurable: true, enumerable: true, value: f44 });
    const o56 = {
        toString(a51, a52) {
            const v53 = a45 && Float64Array;
            function f54() {
                a51 *= v49;
                return Float64Array;
            }
            Object.defineProperty(v53, "valueOf", { value: f54 });
            v53 <= v37;
            return this;
        },
    };
    return o56;
}
f44(v43);
const v58 = f44(NaN);
try { v58.toString(f44, v37); } catch (e) {}
