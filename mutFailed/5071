function f0() {
}
class C1 extends f0 {
    p() {
        f = this;
        return this;
    }
    toString() {
        this.a -= this;
        const o5 = {
            2321852491: "object",
        };
        Promise.d = Promise;
        return f0;
    }
    n() {
        var b = f0;
        this[f0];
        return f0;
    }
    #e = f0;
    f = f0;
}
new C1();
new WeakMap();
const v13 = (delete C1?.f)?.h;
256 | f0;
Math.clz32(v13);
Math.cos(v13);
Math.asin(-2147483648);
const v21 = 256 >>> 256;
new C1();
const v23 = new C1();
try { v23.n(); } catch (e) {}
const v27 = new Int32Array(512);
const v30 = new Int8Array(3229);
new Uint8ClampedArray(9);
new Int32Array(129);
let v37 = 512;
function f39(a40, a41) {
    const o42 = {
        ...a40,
    };
    o42.g = o42;
    return f39;
}
const v43 = new Float32Array(v37);
v43[351] = v43;
const v46 = new Int8Array(4);
const v47 = v46?.with;
try { new v47(Float32Array, Float32Array); } catch (e) {}
const t51 = "resize";
t51[1] = "resize";
function f52() {
    [1e-15,1.0,-3.0,1.43935350979979e+308,-0.0];
    const v55 = ([-1000000.0,771279.5641904315,0.0,8.299995604235331,6.625300935335886,-820.4949035918538,-602.5256799896665,0.6342705996691437,Infinity]).toLocaleString();
    let v56;
    try { v56 = v55.search(f52); } catch (e) {}
    return v56;
}
try { f52.toLocaleString(); } catch (e) {}
f52();
Object.defineProperty(v43, "e", { writable: true, value: 4 });
new Int32Array(512);
const v64 = new Int16Array(1325);
Object.defineProperty(C1, v46, { value: v64 });
Object.defineProperty(v30, "a", { writable: true, configurable: true, get: f52 });
v37 ||= v37;
new Int32Array(v27, v21, 4);
Reflect.construct(Int32Array, [v46,v47,512], Int32Array);
f52();
try {
    f0();
} catch(e73) {
}
new Int32Array(78);
