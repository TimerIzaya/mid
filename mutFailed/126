const v3 = [3.6603699555844277e+307,1.301161651682527,-1000000.0,631215.7017250536,9.572119183903332,1000000000000.0,-4.0,-228722.6303401551,0.5319226309411216,-3.0];
const v4 = [0.8081948501098001];
const v5 = [0.48879817238347556,2.2250738585072014e-308,1000.0,1000.0,-681.8004556870678,-1000.0,-1.5737380958439236e+306];
function F6(a8, a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 4411;
    } catch(e11) {
    }
    const v12 = [2.412578955630149,2.7008822875610345,-2.220446049250313e-16,-1.0,-1000000000.0,-1.0,3.9002388983145044e+307,-Infinity,-1e-15,-4.2464820531165003e+307];
    const v13 = [-1e-15,4.0,362.9742459010415,1.488212487511409e+308,3.0];
    class C14 {
        constructor(a16, a17) {
            super[v13] = v12;
        }
    }
    new C14(v12, v13);
    function f19(a20) {
        return this;
    }
    const v23 = [v3];
    const o24 = {
        "arguments": v23,
        "type": "function",
    };
    new Worker(f19, o24);
}
new F6(531531810, v5, 531531810);
new F6(9007199254740990, v4, 4411);
new F6(9007199254740990, v4, 4411);
new BigUint64Array(5);
try {
    v5.b = 9007199254740990;
} catch(e34) {
}
new Float32Array(5);
const v39 = ("sync")[-5.0];
class C40 {
}
new Uint8ClampedArray(127);
const t40 = [-65317,-58155,536870889,976,536870889];
t40[2] = 512;
const o50 = {
};
async function* f54(a55, a56) {
    return -9223372036854775807;
}
delete v39[268435456];
const v59 = [];
class C60 {
    constructor(a62) {
        function* f63(a64, a65) {
            yield* v59;
            return a64;
        }
    }
}
