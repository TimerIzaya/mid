[-65537,-268435456,1,-1824035557,536870889,128,-128,30789,-4294967297];
const v4 = [-544823612,-9,9007199254740991,1279278074,5,-1301282156,10000,-1665288362];
[65536];
new BigInt64Array(6);
new Uint16Array(162);
new Map(4096);
class C15 {
    constructor(a17, a18) {
        function f19(a20, a21) {
            function f22() {
                return f22;
            }
            const v23 = f22.arguments;
            function f24() {
                for (let v25 = 0; v25 < 5; v25++) {
                    Array(-6, v23, v25 >> v25);
                }
                return f22;
            }
            f24();
            return f24;
        }
        Object.defineProperty(this, "constructor", { configurable: true, enumerable: true, value: f19 });
        const v31 = this.constructor;
        try { new v31(); } catch (e) {}
        for (let i = 0; i < 10; i++) {
            Math.atan();
        }
    }
}
new C15(C15, C15, v4, "function", "b");
const v39 = new BigUint64Array(10);
for (const v41 in v39) {
    new Float64Array(2147483647);
}
