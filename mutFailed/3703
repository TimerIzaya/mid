[];
const v1 = /ba\fb\nc\rd\te\vf/vimsy;
const v2 = /gL8gfoo(?<=bar)baz+/gvdims;
let v5;
try { v5 = ("function")["toUpperCase"](); } catch (e) {}
try { v5.toLocaleLowerCase(); } catch (e) {}
[16,268435441,-9007199254740991,11,-61765,268435440,1];
[16757,13];
[9,4294967296,348306995,7,23711,52330,-9007199254740990,1];
const v17 = v1["test"](v2, 512, v5, v5);
let v18;
try { v18 = v17(-294.4770801676988, v17, v17, "function"); } catch (e) {}
try {
    ("toUpperCase").concat(10, v18, 9.611690225908578e+307);
} catch(e20) {
}
const v21 = 512 ^ 512;
const v22 = Math.atan2(10, v21);
v22 ^ v22;
const v24 = /EIa+b/gvmsy;
v24.ignoreCase = v24;
[9.71030187061723];
const v26 = [273.97302610446695,-5.818605008835192,-Infinity,-4.0,379708.5525457377,-1.3224301593518276e+308,-408.6382353531211,-5.0,-659699.408998611];
v26[0] = v26;
[0.2879370793767688];
Uint8Array.BYTES_PER_ELEMENT;
const v31 = new Uint8Array(6);
new Int8Array(v31);
let v37 = new Float32Array();
50 + 50;
let v41;
try {
const t0 = 50;
v41 = t0();
} catch (e) {}
let v42 = new Float64Array();
({"buffer":v41,"byteLength":v42,"length":v37,} = v42);
("boolean")[3];
const v47 = ("boolean").split("toString");
new Int8Array(v18, 512);
Object.defineProperty("test", 1, { enumerable: true, value: v41 });
new BigUint64Array(9);
new Uint8Array(9);
new Uint8ClampedArray(255);
try { v47.sort("toString"); } catch (e) {}
for (let v59 = 0; v59 < 25; v59++) {
}
try { new Date(v47, v21, v1, v47, v21, v5, v47); } catch (e) {}
new Date("2");
