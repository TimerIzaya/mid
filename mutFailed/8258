const v5 = new Float64Array(255);
const v8 = new Float32Array(129);
v5[2] = 129;
const o11 = {
};
try {
    o11.g = v5;
} catch(e12) {
}
try {
    const o13 = {
    };
    o13.g = v5;
    o13.e = v5;
} catch(e14) {
}
try {
    const o15 = {
    };
    o15.g = v5;
    o15.e = v5;
    o15.h = Float64Array;
} catch(e16) {
}
try {
    const o17 = {
    };
    o17.g = v5;
    o17.e = v5;
    o17.a = -780n;
} catch(e18) {
}
new Uint32Array(255);
o11[16] = -1024;
Object.defineProperty(v5, 255 >>> v8, { writable: true, enumerable: true, value: -1024 });
let v24;
try { v24 = v5.copyWithin(-394268727, -988331793, 255); } catch (e) {}
v8.buffer;
class C37 {
    static [1977392922n];
    static #g = undefined;
    12 = -4294967295;
    [v24];
    [-1] = C37;
    static #n(a39, a40, a41, a42) {
        this[257] *= -5;
    }
}
function f45(a46, a47) {
    return this == this ? this : this;
}
