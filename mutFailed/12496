function f0() {
    const o10 = {
        set f(a5) {
            let v7 = -9007199254740990;
            1073741824 in this;
            v7 = 4096;
            a5[4] = "-9223372036854775807";
        },
        "c": 4096,
        "b": f0,
        [4096]: "-9223372036854775807",
        ..."-9223372036854775807",
    };
    return 4096;
}
const v11 = f0();
const v12 = f0();
const v13 = f0();
function f14(a15) {
    const o20 = {
        [-1]: f0,
        "d": v11,
        p(a17) {
            const v18 = super.e;
            v13[a15] = a17;
            try {
                v12.valueOf = v18;
            } catch(e19) {
            }
            return this;
        },
        __proto__: a15,
    };
    let v21;
    try { v21 = o20.p(f14, a15, ...a15, o20, o20); } catch (e) {}
    for (let v22 = 0; v22 < 32; v22++) {
        v21["p" + v22] = v22;
    }
    return o20;
}
const v25 = f14?.toString;
try { new v25(); } catch (e) {}
f14(v13);
const v28 = f14(v13);
Math.sinh(++f0);
let v36 = 2.220446049250313e-16 && Uint16Array;
v36--;
const v38 = f14(v12);
class C39 extends f14 {
    f;
    static [v12];
    n(a41, a42) {
        return -3637n;
    }
    static 65536 = v28;
    set b(a47) {
        let v46 = this;
        v46 = super[v38];
        [255,-876964498,-15,1024828894,4,4294967295,-4294967296,257];
        [4];
        [47833,7,9,-536870912,0,4294967297,129];
    }
    1124896288;
    static d;
    #a = f0;
}
new C39();
new C39();
new C39();
function F55(a57, a58, a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
    try { ("entries").split(f0, f14); } catch (e) {}
    ("entries").toUpperCase();
    ~a58;
    const v65 = this.constructor;
    try { new v65(); } catch (e) {}
}
const v67 = new F55();
const v68 = v11?.constructor;
try { new v68(f14, v11, f14, v11); } catch (e) {}
new F55(v12, F55, v67, v67);
