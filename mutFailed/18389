function f0() {
}
const v1 = [3.0,NaN,-3.0,-1e-15,-4.0,NaN,9.729288872406443,6.893978334910312,5.0];
const v2 = [3.0,-119.22324012607442,587.8480811077002,-1.4391100943515939e+308,3.0,-4.0,3.3499639028294073e+307,489.7587218337633,1000000000000.0,172100.78475790424];
try {
    v2.length = f0;
} catch(e3) {
}
function f4() {
    return v1;
}
const v5 = [2.220446049250313e-16,-5.463183783874141e+307,226549.36415273487,NaN,1e-15,0.21850890209838336,0.34472248467524613,284927.0158745707];
const v6 = [v5,f0,f0,v2];
[[v5,v2,v1],v1];
-65535 > -65535;
const v11 = `
    ~v1;
    Math.random();
    Math.log2(v1);
    Math.atanh(2147483649);
`;
eval(v11);
new Int8Array(-65535);
Object.defineProperty(v2, "a", { get: eval });
try {
    f4();
} catch(e24) {
}
try { new Uint8ClampedArray(v2, Uint8ClampedArray, f0); } catch (e) {}
new Uint8ClampedArray(595221963);
const v31 = new Uint16Array(1110);
try { v31.slice(v31, Uint8ClampedArray); } catch (e) {}
const v35 = new Int8Array(268435456, v6, 595221963);
const v36 = v35?.constructor;
try { new v36(1110, 595221963, v31); } catch (e) {}
