function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 9223372036854775807;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
new F0();
let v7 = 3179;
v7++;
const v10 = new BigUint64Array(v7);
try { v10.lastIndexOf(v5); } catch (e) {}
try { new Float32Array(9, 9, v7); } catch (e) {}
new Float32Array(9);
4 | 4;
new Int8Array(4);
function f20() {
    let v22;
    try { v22 = ("object").anchor(9); } catch (e) {}
    v22[18] = v10;
    const o30 = {
        toString(a26, a27) {
            try {
                super.getMinutes();
            } catch(e29) {
            }
            return "object";
        },
        "b": "boolean",
        "g": "object",
        128: "boolean",
        "MIN_VALUE": -7.875401424647608,
        "c": "object",
        __proto__: "boolean",
        "h": v22,
    };
    return o30;
}
const v31 = f20();
const v32 = f20();
v32[128] = v4;
const v33 = f20();
const v34 = v33[128];
function F36(a38) {
    if (!new.target) { throw 'must be called with new'; }
    const v39 = v32?.constructor;
    v39.b = v39;
    try { new v39(v33); } catch (e) {}
    a38[128];
    a38[128] = a38;
    try {
        this.MAX_SAFE_INTEGER = a38;
    } catch(e42) {
    }
    try {
    } catch(e43) {
    }
    try {
    } catch(e44) {
    }
}
F36.arguments;
F36.e = F36;
new F36(v32);
const v47 = new F36(v33);
v47.length;
const v49 = new F36(v32);
function f50(a51, a52, a53) {
    a52[9] = a52;
    const o60 = {
        get a() {
            const o58 = {
                "execution": "async",
                "type": "major",
            };
            gc(o58);
        },
    };
    o60[2074850330] = o60;
    return o60;
}
const v61 = f50(v33, v33, v31);
v61[2074850330] = v61;
const v62 = f50(v32, v32, v61);
v62[2074850330] = v62;
f50(v61, v62, v32);
function F64(a66, a67, a68) {
    if (!new.target) { throw 'must be called with new'; }
    a66.a = a66;
    const v69 = a67[128];
    a68.length = a68;
    const v70 = this?.constructor;
    v69.e = v70;
    try { new v70(F64, F64, f20, v70); } catch (e) {}
    a67.g = a67;
    try {
        this.d = a68;
    } catch(e72) {
    }
    try {
    } catch(e73) {
    }
}
new F64(v33, v31, v49);
new F64(v33, v61, v34);
try { Uint32Array.bind(F36); } catch (e) {}
