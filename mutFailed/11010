const v0 = /aBdy+/udsy;
const v1 = /lxyz{0,1}?/gvisy;
function f2() {
    function f3() {
        new Int8Array(180);
        return Int8Array;
    }
    return f3;
}
function f7(a8) {
    [Float32Array];
}
Object.defineProperty(v1, "toString", { writable: true, configurable: true, enumerable: true, get: f2, set: f7 });
/((?:a+)*a??t)/usy;
const v12 = [-65535,12,50718,-671077737];
v12[3] = v12;
const v13 = [-1073741824,255,20111,-1340043140,536870887,1590472535,256,-137480858,127,-2];
const v14 = [1638728912,-48390,8,127,3,9223372036854775807,-15,5,-4294967295];
-1770301368 & -1770301368;
class C19 {
    10 = -11;
    n(a21, a22, a23) {
        switch (-11) {
            case a23:
                delete a21[v14];
        }
        function f25() {
            return v12;
        }
        return v0;
    }
    static [v1] = -1770301368;
    static #h = v12;
    4;
}
const v26 = new C19();
new C19();
const v28 = new C19();
class C29 extends C19 {
    [v1];
    static o(a31, a32) {
        super.a = a31;
        class C33 {
            constructor(a35, a36) {
                function f37(a38) {
                    return C33;
                }
                const o41 = {
                    "type": "function",
                };
                new Worker(f37, o41);
            }
        }
        new C33();
        const v44 = new C33();
        const t55 = v44.constructor;
        new t55();
        new C33();
        this[this] = v0;
        super[a32];
        return this;
    }
    static n(a53, a54, a55) {
        function F56(a58, a59, a60, a61) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = a61;
            } catch(e62) {
            }
            try {
                this.b = a55;
            } catch(e63) {
            }
            try {
                this.f = a58;
            } catch(e64) {
            }
        }
        new F56(a55, v13, -11, v26);
        new F56(v13, v12, -1770301368, v26);
        new F56(a55, v14, 128, v28);
        return v14;
    }
}
C29.b = C29;
const v68 = new C29();
v68[10];
const v70 = new C29();
v70[10];
new C29();
const v76 = [65537,268435441,63298,-5,1235122603];
const v77 = [128,215394418];
v77.valueOf = f7;
const v78 = [-2,-4294967296,4294967297];
function F79(a81, a82, a83, a84) {
    if (!new.target) { throw 'must be called with new'; }
    a82.caller = a83;
    a84.caller = a82;
    a81 << a81;
    a82.arguments;
    try { a84.valueOf(); } catch (e) {}
    const v88 = this.constructor;
    try { new v88(1024, 1024, v76, this); } catch (e) {}
    a82.caller;
    this.c = a83;
    this.f = a82;
}
try { F79.bind(C29); } catch (e) {}
const v92 = new F79(-714582153, F79, -714582153, v77);
new F79(9, v92, 9, v78);
let v94 = -1;
v94--;
class C96 {
    static 7;
    #n(a98) {
        const o101 = {
            "execution": "sync",
        };
        gc(o101);
    }
}
C96[7] = C96;
const v103 = new C96();
const v104 = v103?.constructor;
try { new v104(); } catch (e) {}
const v106 = v103?.constructor;
v106[7] = v106;
let v107;
try { v107 = new v106(); } catch (e) {}
function f108(a109, a110) {
    return v26;
}
v107.constructor = f108;
const v115 = v107?.constructor;
try { new v115(); } catch (e) {}
[55948];
[255,-8,65537,4294967295];
function f119(a120, a121) {
    0 < 5;
    const o133 = {
        [a120](a126, a127, a128, a129) {
            [923.3408061449261,-6.350919708227568e+307,-2.220446049250313e-16,0.04850379751250988,4.009495502233909];
        },
        "a": a120,
        set b(a132) {
            v94 <<= v94;
        },
    };
}
