const v2 = new Int32Array(4);
const v5 = v2.__proto__;
try { v5.subarray(v5, v5); } catch (e) {}
const v7 = Float64Array > 4;
[-7.107126364816647,-0.0,1.433230185530729e+308,1.2180488183690643e+308,-2.2250738585072014e-308,-1000000000.0,-1.1521067010310288e+308,-529.0576862995536];
const v9 = [0.6556762209256004,0.0];
[-4.834564682731863];
new Float64Array(194);
const v14 = new BigUint64Array(2682);
try { ("p").indexOf("p"); } catch (e) {}
const v19 = [155533.8602852358,2.0];
function F21() {
    if (!new.target) { throw 'must be called with new'; }
    19793 >>> 19793;
    for (const v27 of Array(19793)) {
        v19[658291203] = null;
    }
    const v28 = [this,this,this];
    try { v28.findLastIndex(v14); } catch (e) {}
    undefined ^ v28;
    if (v7) {
        v9.length;
        const v34 = [v28];
        Reflect.apply(v28.fill, v14, v34);
    } else {
        -65286 - -65286;
    }
}
F21.name;
new F21();
const v43 = v9?.toString;
try { new v43(); } catch (e) {}
const t32 = null;
new t32();
