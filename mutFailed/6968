class C6 {
    constructor(a8, a9, a10, a11) {
        let v15 = -2.2250738585072014e-308 + -249970.56405354012;
        Math.random();
        Math.random();
        +-249970.56405354012;
        ++v15;
        Math.clz32(-2.2250738585072014e-308);
    }
    #f;
    static 8;
    #e;
    static 9;
}
const v21 = new C6(-10135.549513699487, 0.15470162566696022, 2895n, -9007199254740991n);
const v22 = new C6(1073741823n, v21, 0.15470162566696022, 1073741823n);
new C6(-10135.549513699487, v22, -10135.549513699487, 2895n);
Object.defineProperty(Uint16Array, 2, { writable: true, configurable: true, value: v21 });
new Uint16Array(66);
new Int32Array(1831);
new BigInt64Array(0);
let v36 = 15;
v36--;
const v39 = new Int16Array(v36);
new Uint8ClampedArray(6);
new Int16Array(3699);
"2147483649" == "2147483649";
class C50 {
    static #p(a52) {
        function f53(a54) {
            return a54;
        }
        class C55 extends f53 {
            static [-1] = 8;
            static [a52];
            static 268435441;
        }
        const v56 = [];
        const v58 = /[a-zA-Z0-9]/gvisy;
        const v59 = /abc?/gvmy;
        v59[-2] ^= v58;
        v59.exec("Q8F");
        const t41 = "Q8F";
        t41[2078209647] = v56;
        return a52;
    }
    [0.028957958839558873];
    static {
        for (let v65 = 0; v65 < 32; v65++) {
        }
    }
    static 2147483648 = C50;
    static #g;
    #a;
}
function f67(a68, a69) {
    for (let v70 = 0; v70 < 10; v70++) {
        try {
            const o71 = {
            };
            const t60 = null;
            t60.valueOf = o71;
        } catch(e73) {
        }
    }
    return a69;
}
C50[Symbol.toPrimitive] = f67;
function f76() {
    const o78 = {
    };
    o78.execution = v39;
    return gc(o78);
}
const v81 = Symbol.toPrimitive;
f76[v81] = f67;
C50[Symbol.toPrimitive] = f76;
try { C50(); } catch (e) {}
const v85 = new C50();
v85.constructor = f76;
try { BigInt64Array(BigInt64Array); } catch (e) {}
function F89(a91) {
    if (!new.target) { throw 'must be called with new'; }
    this[Symbol.unscopables] = 0;
    this.h = a91;
}
const v94 = new F89(-2);
with (v94) {
    h = Uint16Array;
}
const v96 = v85?.constructor;
function f97(a98) {
    new Uint8Array(257);
    return -2;
}
v96[Symbol.toPrimitive] = f97;
v96[Symbol.toPrimitive] = f76;
let v106;
try { v106 = new v96(); } catch (e) {}
function f107() {
    new f76();
    return -2147483648 ^ 8.868704382732872e+307;
}
v106.constructor = f107;
const v112 = v106?.constructor;
try { new v112(); } catch (e) {}
const v114 = new C50();
let v115;
try { v115 = v114.propertyIsEnumerable(C50); } catch (e) {}
!v115;
new C50();
/[\11]/gm.flags;
/(?:a*)*/gudm;
const v121 = /a(?!bbb|bb)c/vi;
v121.toString = Symbol;
const v122 = v121?.toString;
try { new v122(); } catch (e) {}
[4096];
const o129 = {
    "execution": "async",
    "type": "minor",
};
~117;
function f132() {
    return v81;
}
function f133(a134) {
    const v136 = 9007199254740991n * 9007199254740991n;
    v136 & v136;
}
Object.defineProperty(Uint16Array, 0, { writable: true, configurable: true, get: f132, set: f133 });
Uint16Array[0] = v96;
const v138 = new Uint16Array(Uint16Array);
let v139 = v138[1];
v139--;
Int32Array.name;
new Int32Array(31);
let v147;
try { v147 = Uint32Array.toString(); } catch (e) {}
try { v147.small(); } catch (e) {}
const v149 = new Uint32Array(128);
v149[72];
function f151() {
    3.4890473589784586e+307 > 3.4890473589784586e+307;
    let v154 = 1000000000000.0;
    v154--;
    257828.6336153492 - 257828.6336153492;
    -4294967296 >> -4294967296;
    class C161 {
        static #m(a163) {
        }
        constructor(a165) {
            this.g = "async";
            function f166() {
                return 9007199254740992;
            }
            Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f166 });
            const v167 = this?.__defineSetter__;
            try { new v167(22227, 22227); } catch (e) {}
            new Float32Array();
            try { Uint16Array.apply(Uint16Array, "2147483649"); } catch (e) {}
            const v173 = new Uint16Array();
            const v174 = new Float32Array(v173, -4294967296, a165);
            v174.f = v174;
        }
    }
    const v175 = new C161(C161);
    v175.g = v175;
    const v176 = new C161(C161);
    v176.length = -4294967296;
    v176.length;
    const v178 = new C161(-4294967296);
    const v179 = [v178,C161];
    [257828.6336153492,v178,v175,v178,v179];
    const v181 = [v178];
    v181.constructor = Symbol;
    class C182 extends C161 {
        [v175];
        #n(a184, a185, a186, a187) {
            function f188() {
            }
        }
    }
    C182.name = C182;
    const v189 = new C182();
    class C191 extends v181.constructor {
    }
    try { v189.m(v179); } catch (e) {}
    const o195 = {
        "e": Uint16Array,
        o(a194) {
        },
        ...v154,
    };
    return Int32Array;
}
try { f151.bind(-7); } catch (e) {}
%PrepareFunctionForOptimization(f151);
f151();
f151();
%OptimizeFunctionOnNextCall(f151);
const v199 = f151();
v199.prototype = v199;
