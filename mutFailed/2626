let v2 = "asIntN";
const v7 = ~255;
const v8 = "-9007199254740991" & "-9007199254740991";
const v9 = Math.atan2(v8, v7);
const v11 = new Int16Array(1578);
new BigUint64Array(1042);
try {
    v11.reduceRight("a");
} catch(e17) {
}
new BigUint64Array(v8, 1042, v9, 255, Int16Array, -128);
new BigUint64Array(-128);
let v21 = "function";
v2[v8] = v21;
new Int16Array(1042, v8, 255);
let v26 = v7 & v7;
Math.acosh(v7);
Math.abs(v26);
Math.min(v7);
++v26;
v2--;
-1.7976931348623157e+308;
function f33() {
    return v21;
}
const v37 = "size" && "boolean";
with ("boolean") {
    h = v37;
    ({"length":v21,} = "isExtensible");
    f33();
}
