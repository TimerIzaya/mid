class C3 {
    constructor(a5, a6) {
        const v7 = super.b;
        super.a >>>= -1.1285615619209145e+308;
        a6[10] = this;
        let {"c":v8,} = a5;
        a6 = v7;
        [268435440,16,128];
        [248091266,-128,19720,15,65536,9007199254740992,257,4];
        [2147483648];
    }
    g = -1.1285615619209145e+308;
    static [9223372036854775807];
}
const v12 = new C3(C3, 9223372036854775807);
const v13 = new C3(10, C3);
const v14 = new C3(v13, v12);
let v16;
try { v16 = C3.m(-1.1285615619209145e+308, C3, false); } catch (e) {}
function f17() {
    return 9223372036854775807;
}
const o21 = {
    "execution": "sync",
    "type": "minor",
};
gc(o21);
const v32 = [65537,268435441,63298,-5,1235122603];
const v33 = [128,215394418];
let v34;
try { v34 = v33.entries(); } catch (e) {}
const v35 = [-2,-4294967296,4294967297];
function F36(a38, a39, a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
    const v42 = this.constructor;
    try { v42(1024, 1024, v32); } catch (e) {}
}
const v44 = new F36(-714582153, F36, -714582153, v33);
v44.length;
const v46 = new F36(9, v44, 9, v35);
v46.b = v46;
const v47 = new F36(1024, v46, v35, v35);
typeof v44 === "function";
%VerifyType(v14);
v16 >> v14;
let v59;
try { v59 = ("string").trimStart(); } catch (e) {}
let v60 = -1;
-35417 - -35417;
class C63 {
}
function f64(a65, a66, a67, a68) {
    return v47;
}
f64(-9007199254740991, v59);
v34[v46] ||= ([1024,19026,1125846339]).length;
const o76 = {
    set b(a75) {
        v60 <<= v60;
    },
};
