const v4 = ("boolean").split("toString");
const v5 = [-14339,735253629,4294967296,3,268435456,3,57019,268435439];
for (const v6 in v5) {
    ("-2").normalize("NFKC");
}
/fP((\xed\xa0\x80))\x02/gudmy;
v5.length = /8[\cA]v/uisy;
const o13 = {
};
function f14() {
    const v15 = /Cs[\cz]*/vi;
    v15.toString(v15, f14, v15, v15, f14);
    return v15;
}
f14();
f14();
/(?:a*)+[\cA]/im;
/zfoo(?<!bar)baz*/vdm;
new BigInt64Array(1);
new Int16Array(256);
new BigUint64Array(255);
const o30 = {
};
function F31(a33, a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    function f38(a39) {
        return f38;
    }
    return this;
    new Int32Array(497);
    for (let v45 = 0; v45 < 100; v45++) {
        const o56 = {
            968: undefined,
            ...v5,
            "arguments": v4,
            __proto__: undefined,
            "execution": "boolean",
            ...this,
            [268435439n]: 2105444095n,
            /*
            __proto__: o30,
            */
            "g": a35,
            "b": -4294967296n,
            valueOf(a48) {
                return v45;
            },
            p(a50, a51) {
            },
            [undefined](a53, a54) {
            },
            n() {
            },
        };
        function f57(a58, a59, a60) {
            return a58;
        }
    }
}
new F31(F31, o30, F31, F31);
new F31();
new F31();
