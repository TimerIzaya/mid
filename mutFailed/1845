function f3(a4) {
    const o5 = {
        ["E"]: "E",
        "d": "E",
        "c": "-185650492",
        __proto__: a4,
        "g": "-185650492",
        [a4]: a4,
        ..."E",
        ...a4,
        "e": a4,
        "f": a4,
        "h": a4,
    };
    return o5;
}
f3("E");
f3("-185650492");
const t16 = "symbol";
t16("-185650492");
new Int16Array(3);
new Float64Array(2161);
new BigUint64Array(3);
const v22 = new Set();
function F23(a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a25;
    } catch(e27) {
        for (let [v28,v29] of a25) {
            class C30 {
            }
            const v31 = new C30();
            const v32 = v31.g;
            try {
                v32.length = 1;
            } catch(e34) {
            }
            try {
                v22.values();
            } catch(e36) {
            }
        }
    }
    try {
        this.h = v22;
    } catch(e37) {
        Math.atan2(257, 257);
    }
    try {
        const v41 = v22[this];
        try {
            new F23(v41, -2046072084n);
        } catch(e44) {
        }
        this.b = Set;
    } catch(e45) {
    }
}
const v46 = new F23(Set, Set);
let [v47,,...v48] = v22;
const v50 = Symbol.toPrimitive;
const v51 = v48[v50];
try {
    v46.toString = v51;
} catch(e52) {
}
new F23(Set, F23);
new F23(v46, F23);
[28.464807941936897,0.6876471799475875,-4.024971662372387,-1000000000.0,-982.6382193743566,Infinity,0.0,-4.0,-821.2850284587798];
[0.27109226904944717,-4.9641037907328345,0.0,2.220446049250313e-16];
[1.7976931348623157e+308,-488.74642043706683,-4.0,-4.0,-1.7976931348623157e+308,1.0,-0.0,0.6085307230700101];
const v64 = [65537,268435441,63298,-5,1235122603];
const v65 = [128,215394418];
try { v65.entries(); } catch (e) {}
[-2,-4294967296,4294967297];
function F68(a70, a71, a72, a73) {
    if (!new.target) { throw 'must be called with new'; }
    const v74 = this.constructor;
    try { v74(1024, 1024, v64); } catch (e) {}
}
new F68(-714582153, F68, -714582153, v65);
let v78 = -1;
class C80 {
}
function f81(a82, a83, a84, a85) {
}
function f86() {
    const o90 = {
        [1.7976931348623157e+308](a89) {
        },
    };
}
f86(v50, -35417, F23);
class C92 extends f86 {
}
const o95 = {
    set b(a94) {
        v78 <<= v78;
    },
};
