const v0 = [];
if (1000 <= 16) {
    v0[v0] += -401540819;
} else {
    function F6(a8, a9, a10, a11) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.b = a10;
        } catch(e12) {
        }
        try {
            this.f = -401540819;
        } catch(e13) {
        }
    }
    const v14 = new F6(-401540819, -401540819, 16, v0);
    const v15 = new F6(16, 16, -401540819, v14);
    new F6(1000, 16, 16, v15);
}
16 * -401540819;
let v19;
try {
const t0 = 6n;
v19 = new t0(6n, -401540819, v0, -401540819);
} catch (e) {}
v0 | v19;
let v21;
try { v21 = v19.toString(); } catch (e) {}
v19[2] |= v21;
new Int16Array(4);
new BigInt64Array(10);
new Float32Array(1557);
const v34 = new BigInt64Array(2325);
for (const v35 in v34) {
}
