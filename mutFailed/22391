let v1 = new WeakMap();
const v2 = /f/vim;
/(\1a)/vds;
const v4 = /y6a\W*/vdy;
function F5(a7) {
    if (!new.target) { throw 'must be called with new'; }
    const v8 = this?.constructor;
    try { new v8(v1); } catch (e) {}
    try {
        this.c = v4;
    } catch(e10) {
    }
}
const v11 = new F5(v2);
v11.d = v11;
new F5(v2);
new F5(v4);
-4.0 >>> -4.0;
const v18 = /D(?<=)/umy;
const v19 = /V(?=)/udim;
const v20 = /U(?:a{5,1000000}){3,1000000}/vdims;
function f21() {
    v4 instanceof F5;
    v1 += v1;
    return -4.0;
}
try { f21(); } catch (e) {}
v20.set = f21;
class C24 {
    [v18] = v20;
}
const v25 = new C24();
try { v25.propertyIsEnumerable(v25); } catch (e) {}
const v27 = new C24();
const v28 = v27?.constructor;
try { new v28(); } catch (e) {}
v27.configurable = v27;
function F30(a32, a33, a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    const v36 = this?.constructor;
    try { new v36(a33, F30, F30, a32); } catch (e) {}
    a34.dotAll = a34;
    a35.set = f21;
    a35.e = a35;
    const o38 = {
    };
    o38.constructor.defineProperties(v25, a32);
}
const v41 = new F30(v20, F30, v19, v27);
v41.length;
v41.e = v20;
const v43 = new F30(v27, v27, v19, v41);
const v44 = v43?.constructor;
try { new v44(v18, v43, v11, v43); } catch (e) {}
