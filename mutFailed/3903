function f0() {
    let v3 = 0.6449258232303566;
    const v4 = v3--;
    const o21 = {
        "a": 3,
        3372091413: v4,
        get f() {
            try {
                this.fuck(3, 3, this);
            } catch(e7) {
            }
            try { v4.join(6.471462631000794e+307, this, this); } catch (e) {}
            Reflect.construct(Uint8ClampedArray, [[1.0,-6.818981069405753e+307]]);
            let v18 = v3 >>> 6.471462631000794e+307;
            +(++v18);
            return 55743260;
        },
    };
    o21[3372091413];
    return 3;
}
f0();
f0();
f0();
try { ("stack").trimLeft(); } catch (e) {}
65535 >>> 65535;
const v36 = new Int16Array(0);
const v37 = v36?.findLast;
try { new v37("bigint"); } catch (e) {}
Float32Array.BYTES_PER_ELEMENT;
new Float32Array(9);
0 !== 0;
new Int32Array(0);
new BigInt64Array(11);
const t34 = 9;
new t34(280);
function f53() {
    let v54 = 852.2904873570058;
    const o59 = {
        m(a56, a57) {
            v54++;
            return 280;
        },
    };
    try { o59.m(o59, Float32Array); } catch (e) {}
    return Int32Array;
}
const v61 = f53();
try { v61.bind("uR"); } catch (e) {}
f53();
new Int8Array(280);
const o66 = {
};
o66.d = o66;
try { ("function")["-268435456"](); } catch (e) {}
function f70() {
    return f53;
}
f70.h = f70;
const v71 = /(?:a*)+q(?<a>.)/guds;
function f72(a73) {
    const o82 = {
        [0](a75, a76) {
        },
        set h(a78) {
        },
        toString(a80) {
            return 65535;
        },
        get d() {
            return this;
        },
    };
    return f70;
}
for (let [i88, i89] = (() => {
        const v85 = /Aabc|defmxyz{1,}?qMa{0,1}?/gvdis;
        v85.flags = v85;
        const v86 = v85.exec("function");
        try { v86.shift(); } catch (e) {}
        return [0, 10];
    })();
    i88 < i88;
    (() => {
        function F94(a96, a97) {
            if (!new.target) { throw 'must be called with new'; }
            this.b = "b";
            this.d = a97;
        }
        new F94();
    })()) {
    f72(v71);
}
