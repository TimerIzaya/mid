let v1 = 2086125993;
let v2 = 2081808133;
class C3 {
    constructor(a5, a6) {
        const v7 = a6?.[a5];
        v1 = v2;
        v7 * 536870887;
        v2 = v1;
        v1[1];
    }
    static [v2] = v1;
    static 0 = v1;
    static set e(a11) {
        function f12() {
            return 536870887;
        }
    }
}
const v13 = new C3(v1, 536870887);
const v14 = new v13(v1, v1);
try { v14.constructor(v2, v13); } catch (e) {}
const v16 = new C3(536870887, v2);
const v17 = v16?.constructor;
try { new v17(v14, v13); } catch (e) {}
function f19() {
    return v2;
}
try { ("p").padStart(C3); } catch (e) {}
BigUint64Array.name = BigUint64Array;
const v28 = new BigUint64Array();
try { ("copyWithin").strike(); } catch (e) {}
v28["copyWithin"]();
try { v1.entries(); } catch (e) {}
