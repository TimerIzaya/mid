const v2 = new Uint32Array(4);
const v5 = new BigInt64Array(2);
v5[v2] ^= 2;
const v8 = v5.byteLength;
[Uint32Array];
[Int32Array,v2,Uint32Array,[v8,JSON]];
const v13 = new Int32Array(129);
class C14 extends Uint32Array {
    constructor(a16, a17) {
        super(v5, 4, a16);
        const o18 = {
        };
        try {
            o18.f = v13;
            function f19(a20) {
                return C14;
            }
            class C21 extends f19 {
                static #h = v2;
            }
        } catch(e22) {
            let v23 = 0;
            do {
                super.d = 4 >>> v23;
                v23++;
            } while (v23 < 10)
        }
        try {
            const o28 = {
            };
            o28.f = v13;
            o28.a = a16;
        } catch(e29) {
        }
        try {
            const o30 = {
            };
            o30.f = v13;
            o30.a = a16;
            o30.c = this;
        } catch(e31) {
        }
        try {
            const o32 = {
            };
            o32.f = v13;
            o32.a = a16;
            o32.g = a17;
        } catch(e33) {
        }
    }
}
new C14(129, 4);
new C14(129, 129);
new C14(2, 2);
for (let v37 = 0; v37 < 250; v37++) {
    function f38() {
        return f38;
    }
    class C39 extends f38 {
        constructor(a41) {
            super();
            for (let v42 = 0; v42 < 5; v42++) {
            }
        }
    }
    new C39();
}
