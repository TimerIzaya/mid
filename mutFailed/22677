class C3 {
    #m(a5) {
        try {
            a5.localeCompare(a5);
        } catch(e7) {
            const v8 = [-1245897732,-9,-356186296,128,12,1119687909,6,0,268435439,-2147483649];
            const v9 = [-1915908385,268435441,-4096];
            const o10 = {
            };
            const v11 = o10 ^ o10;
            let v12 = 9223372036854775807;
            v8.__proto__ = v9;
            v8.includes(++v12, v11);
        }
        return this;
    }
    o(a16) {
        [this,a16,[a16,"species",a16,this]];
        ["symbol",a16];
        class C22 {
        }
        async function f23(a24, a25, a26, a27) {
            (await C22).call(8, Uint16Array);
            return a25;
        }
        return this;
    }
    static 1 = "symbol";
    static m(a34, a35, a36, a37) {
        try {
        } catch(e38) {
        }
    }
}
const v39 = new C3();
const v40 = new C3();
const v41 = v40?.constructor;
try { new v41(); } catch (e) {}
new C3();
1073741824 >>> 1073741824;
let v50 = 7.642492215505903e+307;
v50--;
try { new BigInt64Array(0.1566602898444699, C3, 0.1566602898444699); } catch (e) {}
const v55 = new BigInt64Array(205);
256 & 256;
try { ("b").matchAll("symbol"); } catch (e) {}
("b").constructor;
try {
    v39.d = true;
} catch(e62) {
}
Uint16Array.e = Uint16Array;
try { Uint16Array(205, BigInt64Array, 256); } catch (e) {}
new Uint16Array(256);
const v66 = v55[205];
const v68 = 0 >> 0;
try {
    v66.toString = v66;
    function f69() {
        const o83 = {
            toString(a71, a72) {
                function F73(a75, a76, a77, a78) {
                    if (!new.target) { throw 'must be called with new'; }
                    try {
                        this.f |= a72;
                        a72.c;
                    } catch(e80) {
                        e80.stack;
                        Object.defineProperty(a71, 0, { writable: true, get: f69 });
                    }
                }
                new F73(this, a71, this, f69);
                return F73;
            },
        };
        return o83;
    }
} catch(e84) {
    e84.e = e84;
    Int8Array.name = Int8Array;
    function f86(a87, a88) {
        return a87;
    }
    class C89 {
        static {
            this.length = this;
            function f91() {
                return Int8Array;
            }
            const v92 = f91();
            try { new v92(Int8Array, v92, e84); } catch (e) {}
            const v95 = f86(v92, v92)?.constructor;
            try { new v95(v92); } catch (e) {}
        }
    }
    C89.f = C89;
    e84.message = e84;
}
255 - 255;
Float64Array.BYTES_PER_ELEMENT;
const v101 = new Float64Array(255);
function F102(a104, a105, a106, a107) {
    if (!new.target) { throw 'must be called with new'; }
    a106--;
    a107++;
    let v110 = a105 >> a105;
    v110++;
    a107 | a107;
    try {
        v101.b = a105;
    } catch(e113) {
    }
    try {
        this.h = a104;
    } catch(e114) {
    }
}
const v115 = F102?.constructor;
try { v115.toString(); } catch (e) {}
try { new v115(v101); } catch (e) {}
const v118 = new F102(255, 205, 255, 205);
const v119 = new F102(255, 256, 255, 256);
new F102(255, 205, 256, 255);
const v121 = [-Infinity,-5.577012134541006];
v121[1] = v121;
const v122 = v121?.filter;
try { new v122(Uint16Array); } catch (e) {}
const v124 = [-1000000000.0,5.0,872297.1015869486,-1e-15,0.2087529151028652];
[-2.220446049250313e-16,-171953.22769972356,2.220446049250313e-16,Infinity,-3.0,-4.368087235127776];
const v129 = new Int8Array(1392);
try { v129.findIndex(v68); } catch (e) {}
v129.lastIndexOf(16);
const v132 = /(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/u;
const v133 = [Infinity];
const v134 = [2.2250738585072014e-308,1.949684848262672,4.0];
const v135 = v134?.__defineSetter__;
try { new v135(0, 1392); } catch (e) {}
const v137 = v134.push(v132);
const v138 = [342.12300421344116,0.3998304334347528,-1.5569468467414895e+308,929110.7069466491,0.8403359879371063,928.8415619105033,5.0];
try { v138.lastIndexOf(v115); } catch (e) {}
const v140 = v138.toStringTag;
try { v133.every(v140, v119); } catch (e) {}
v118.h >>>= v137;
v124.length;
