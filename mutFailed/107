[8,-26513,18665,-1073741824,1073741824,1342306611,175764996,4096,3,10];
const v1 = [4294967296,-256,7,5,-2131325884,-1073741824,-65536];
const v2 = [0,53104,-9223372036854775808,512,-16,4294967296,2091379639,-1];
function f3() {
    for (let v4 = 0; v4 < 100; v4++) {
        f3();
    }
    return v2;
}
/(Exyz{0,1})/uisy;
/S/uy;
let v14 = /ju(x)(x)(x)\1/gs;
new Uint8Array(1289);
new BigUint64Array(129);
try {
    v1.b = 1;
} catch(e22) {
}
f3();
new Float64Array(1);
new Int8Array(129);
new Uint8ClampedArray(154);
const v35 = 1289;
-9007199254740991 - -25474;
-(-9007199254740991);
v14--;
-9007199254740991 || v14++;
const v46 = new Int32Array(7);
function F47(a49, a50, a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a49;
    } catch(e53) {
    }
    try {
        this.f = a51;
    } catch(e54) {
    }
}
new F47(154, 129, 129, 154);
const v56 = new F47(154, 129, 129, 129);
new F47(7, 154, 154, 129);
const v58 = v46.buffer;
try { v58(48870, Int8Array, 129, v58); } catch (e) {}
let v60 = 8n;
typeof v56 === "string";
v60 = Int8Array;
