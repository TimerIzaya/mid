new Float64Array(2);
let v4 = Float64Array;
v4 += v4;
const v8 = [v4,v4,Float64Array,51446,2];
[46399,-9823,2];
[-9823,46399,2];
const v11 = new v4(3120);
const v14 = new Uint8Array(3);
function F15(a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        a17.g = v14;
        try { a18(a17, 46399, F15, a18, v8); } catch (e) {}
        v8[8] = v14;
        function f20() {
            return Float64Array;
        }
    } catch(e21) {
    }
    try {
        this.c = v11;
        const v22 = this && this;
        try {
            v22.e = v22;
        } catch(e23) {
        }
    } catch(e24) {
    }
    v14[-4294967297n];
    const v32 = -1024 + F15;
    const v33 = v4 ^ -1024;
    Math.log10(v32);
    -v33;
    !a17;
    24153 + F15;
    24153 ^ F15;
}
const v39 = new F15(v11, 3);
new F15(v39, v14);
new F15(v11, 3);
[-9007199254740990,49004,536870889,1000,257,65536,-9007199254740990,-9007199254740992];
const v46 = [0.41430596169297773];
try { v46.toLocaleString(v46); } catch (e) {}
eval();
