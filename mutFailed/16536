new Uint8Array();
const o4 = {
    129: "m",
    1: "m",
    "f": "m",
};
const v5 = [];
v5[129] = v5;
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(a8); } catch (e) {}
    const v11 = this.constructor;
    try { new v11(a8, v5, F6, a8); } catch (e) {}
    v5[129];
    Math.asinh();
}
const v16 = new F6();
let v19 = -65535;
v19--;
function f21() {
    return f21;
}
const v27 = new Date(-429.3290910931888);
o4.print(v27);
const v30 = new Int16Array(Int16Array, Int16Array, Int16Array);
function f31() {
    return f31;
}
class C32 extends f31 {
    constructor(a34, a35, a36, a37) {
        super();
        function f38() {
            const o39 = {
                "g": a35,
                ...v30,
            };
            return C32;
        }
        for (let v40 = 0; v40 < 5; v40++) {
            f38();
            %OptimizeFunctionOnNextCall(f38);
        }
    }
}
-0n;
const v44 = new Float32Array();
for (let v45 = 0; v45 < 25; v45++) {
    function f46(a47, a48, a49, a50) {
        a47[1];
        a48--;
        v45[0] = a47;
        class C54 extends Date {
        }
        new C54();
        const v57 = new SharedArrayBuffer();
        v57.constructor;
        arguments[1] = a48 <= a48;
        const v61 = arguments.__lookupGetter__;
        try { v61.constructor(v44, a49, v45, f46); } catch (e) {}
        return f46;
    }
    for (let v63 = 0; v63 < 10; v63++) {
        f46(v44);
    }
}
function f66(a67, a68, a69) {
    const o105 = {
        __proto__: -951.1499285720557,
        valueOf(a71, a72) {
            function f74() {
                for (let v75 = 0; v75 < 5; v75++) {
                    v75 & f74;
                }
                return f74;
            }
            %PrepareFunctionForOptimization(f74);
            try {
                new BigInt64Array();
                const v81 = Math.__defineSetter__;
                try { v81(); } catch (e) {}
                new Int8Array(-45057);
            } catch(e84) {
            }
            this[a69] = 464499.4439699736;
            super.d ^= -951.1499285720557;
            Float32Array <= 128;
            for (let v88 = 0; v88 < 5; v88++) {
                function f89() {
                    let v90 = -268435456;
                    const v91 = v90 % v90;
                    v90--;
                    return v91;
                }
                f89();
                %OptimizeFunctionOnNextCall(f89);
            }
            return a71;
        },
        /*
        __proto__: v5,
        */
        "type": "m",
        ...v16,
        "type": "m",
        [0n](a95, a96, a97, a98) {
        },
        [a67](a100, a101, a102, a103) {
            function f104() {
                return -951.1499285720557;
            }
            return -4.1721914078938637e+307;
        },
        2: a69,
    };
    ([127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649]).toSpliced(-1148418937, -1148418937);
    Promise.reject(Promise);
    return o105;
}
f66(464499.4439699736, -4.1721914078938637e+307, 464499.4439699736);
f66(464499.4439699736, 464499.4439699736, -1e-15);
f66(-1e-15, -951.1499285720557, 5.621580344349568e+307);
[5.0,-Infinity,6.269648224648451e+307,0.9792875156071553,1000000.0,1000000.0,-1.3028025993513227e+308];
[0.5221115338057754,-9.093691903586159,805.5951651372416,-4.0,-672878.9926077526,1000000000.0,-1000000.0];
[-691.3269507553471];
new f31();
function f118(a119) {
    return a119;
}
const o122 = {
    "type": "function",
};
const v123 = new Worker(f118, o122);
try { v123.postMessage(); } catch (e) {}
for (let i = 0; i < 5; i++) {
    try {
    const t0 = 9907n;
    t0();
    } catch (e) {}
}
