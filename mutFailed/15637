-1n | -1n;
-4294967296n ^ -4294967296n;
const v8 = [1.9427535665225477,-1000000000.0,-4.0,3.0,-1.7976931348623157e+308,-5.776758802147543e+306,-565532.1553017632,-2.2250738585072014e-308,-1.4021361558333966e+307];
try { v8.unshift(-1n); } catch (e) {}
[1000000000.0,441.9943720755391,1000000.0,0.7220952814401271,1.7976931348623157e+308,-2.6015743938475637,-1.4719457369422083e+308];
[-3.0];
0.7600292714922154 * 0.7600292714922154;
const v16 = [-0.23549034038133065];
async function f17(a18, a19, a20, a21) {
    return await v16;
}
new Uint32Array(9);
new Uint32Array(512);
BigUint64Array.g = BigUint64Array;
const v33 = Array(19793);
try { v33.sort(Array); } catch (e) {}
["getUTCHours"];
const t16 = 2.0;
delete t16[268435456];
const v38 = new BigUint64Array(10);
v38[6] = v38;
function f39() {
    return f39;
}
const v40 = [8.944191192251868,-1.4998894798282654e+308,4.0,-0.0,-1000000000000.0,-5.0,-2.220446049250313e-16];
const v41 = [-5.83623517593701,-1.0,-1e-15];
try { v41.pop(); } catch (e) {}
const v43 = [692.912813481568,126686.58689393173];
try { v43.toString(); } catch (e) {}
function f47(a48, a49) {
    try { a48.concat("getUTCHours"); } catch (e) {}
    const o54 = {
        [a48](a52, a53) {
        },
    };
    o54.h = o54;
    return o54;
}
try { f47(f47, f47); } catch (e) {}
const v56 = f47(v40, 128);
f47(v43, -3);
const v58 = f47(v41, 128);
v58.h = v58;
/j(x)(x)(x)\2/gud;
/[\0](?:ab|cde)/vimsy;
const v61 = /^xxx$/uisy;
try { v56.p(); } catch (e) {}
try { v58["n"](v61, "n", f47, "n"); } catch (e) {}
new Uint32Array(91);
Int16Array.name;
const v71 = new Int16Array(4);
try { v71.reverse(); } catch (e) {}
new Int16Array(127);
