function f3() {
    return -65537;
}
const v4 = /\P{scx=Greek}(?<a>)?/umy;
const v5 = /x(?=.)*/vdsy;
const v6 = /0f[\cA]/guis;
class C7 extends f3 {
    constructor(a9, a10, a11) {
        super();
    }
    [4294967295];
    1073741823 = v6;
    4239770577 = v5;
    static 7 = f3;
}
new C7(1951189789, v6, -65537);
new C7(1951189789, v4, -65537);
new C7(4294967295, v4, 1951189789);
const v21 = Symbol.iterator;
const t19 = "string";
t19[v21] = v21;
const v22 = [58584,15,9007199254740990,2146023485];
Object.defineProperty(v22, 65537, { writable: true, value: [46733,-268435456] });
Promise.d = Promise;
new Float32Array(1000);
1000 instanceof WeakMap;
([1000000000000.0,6.579220753226213e+307,2.0,-2.220446049250313e-16,NaN,-1000000.0])["findIndex"](gc);
new Uint16Array(4294967295);
const v37 = [Uint32Array,Uint32Array,Uint32Array,Uint32Array];
v37.__proto__ = v37.push();
function f39(a40, a41) {
    Math.atan2(Math, f39);
    return f39;
}
this.DataView;
try {
    const o47 = {
    };
    new Uint32Array(o47);
} catch(e49) {
}
const v51 = new Float32Array(7);
function f52() {
    return v22;
}
new WeakMap();
try { v51.filter(4294967295); } catch (e) {}
try {
const t0 = 4294967295;
t0();
} catch (e) {}
new Uint8ClampedArray();
const o81 = {
    m() {
        Math.log1p(2.220446049250313e-16);
        for (let i65 = 0; i65 < 10;) {
        }
        const v73 = new Uint8Array(Uint8Array, Uint8Array);
        v73[Math.atan2(-988.8649474800335, 10000)] = 10000;
        const o79 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o79);
    },
};
try { Int32Array(7, Float32Array, Int32Array); } catch (e) {}
const v84 = new Int32Array(256);
function F85(a87, a88, a89) {
    if (!new.target) { throw 'must be called with new'; }
    const v90 = this?.constructor;
    try { new v90(Uint16Array, a89, a89); } catch (e) {}
    a87 * a87;
    a89++;
    this.d = a87;
    try {
        this.g = Int32Array;
    } catch(e94) {
    }
}
try { new F85(F85, 256, 256); } catch (e) {}
const v96 = new F85(256, v84, 4294967295);
const v97 = v96?.g;
try { new v97(Uint16Array, v51, 7); } catch (e) {}
new F85(7, 7, 4294967295);
class C101 extends Set {
}
class C102 {
    #a;
    constructor(a104, a105, a106) {
        a105.#a;
    }
}
new F85(256, Float32Array, 256);
Math.asinh();
const v113 = new Float32Array(Float32Array, Float32Array, Float32Array);
async function f115(a116, a117, a118) {
    v113.h = v113;
    await 160;
    return f115;
}
f115(v113, v113, Float32Array);
Math.sin(3.862600614459211e+307);
