let v0 = 86596454;
let v1 = 1000;
v1 / 4294967296;
const v8 = 4294967296 + 4294967296;
10000 != 10000;
class C12 {
    set f(a14) {
        let v15;
        try { v15 = this.p(a14, 4); } catch (e) {}
        v1 || v15;
        super[215879459];
    }
    static #g;
    #p(a19, a20) {
        --v0;
        this[236] = 4;
        new Uint8Array(1);
        new Float32Array(129);
        new Int16Array(2425);
        return 1;
    }
    #e;
    static [2147483649];
    #d;
    static #c = 2147483649;
    3554;
}
try { new C12(); } catch (e) {}
let v35;
try { v35 = C12.call(v0); } catch (e) {}
const v36 = new C12();
new C12();
const v38 = new v35();
try { v38.constructor(); } catch (e) {}
let v41;
try { v41 = Math.log10(v8); } catch (e) {}
v36 - v41;
-5493;
const v45 = 5493 >>> 5493;
-4294967296;
Math.atan2(v41, v45);
v1++;
