/[\P{scx=Greek}]/udiy;
/el(a)\1/gusy;
const v2 = /tUxyz{1,32}?/gudm;
const v5 = new Uint8Array(564);
function f6() {
    function f7(a8, a9) {
        function f12(a13) {
            const o14 = {
                ...65536,
                163: 4,
            };
            -o14[163];
            return f12;
        }
        %OptimizeFunctionOnNextCall(f12);
        return v2;
    }
    return f7;
}
function f17(a18) {
    class C20 {
        f = "1073741824";
    }
    const v21 = new C20();
    class C23 {
        [C20];
        static 1073741825;
        static ["YZmA"] = v21;
    }
}
Object.defineProperty(v5, Symbol.toPrimitive, { writable: true, enumerable: true, get: f6, set: f17 });
const v28 = new Float32Array(16);
const v31 = new Uint8Array(1);
class C32 extends Uint8Array {
    static #c = v28;
    static [v5];
    o(a34, a35, a36, a37) {
        super.a = a36;
        new Int32Array(1);
        new Float64Array(256);
        new Uint16Array(3);
        return 256;
    }
}
new C32();
const v48 = new C32();
new C32();
function F50() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v52 = this[1073741824];
        v52[4040] = v52;
    } catch(e53) {
    }
}
new F50();
const v55 = new F50();
function f56() {
    return Symbol;
}
function f57(a58) {
    ("toString").match();
}
Object.defineProperty(v55, "constructor", { enumerable: true, get: f56, set: f57 });
const v61 = new F50();
class C62 extends F50 {
}
const v63 = new C62();
const v64 = new C62();
const v65 = v64.constructor;
const v66 = new v65(C32, Float32Array, v31);
const v67 = new C62();
function f68(a69, a70) {
    let v71;
    try { v71 = new a69(); } catch (e) {}
    try {
        v48.byteOffset = v71;
    } catch(e72) {
    }
    return f6;
}
v67.constructor = f68;
d = v66;
function f73() {
    return Float32Array;
}
const o77 = {
    "execution": "sync",
    "type": "minor",
};
gc(o77);
const v79 = v67.constructor;
if (v65) {
} else {
    "sync" / Float32Array;
}
new v79(v66, v79, v66, v61, v79);
class C85 {
    constructor(a87, a88, a89) {
        a88.constructor = f17;
        const v90 = a88.constructor;
        new v90(v90, C62, a88, a87);
        const t102 = a89.constructor;
        new t102();
    }
}
new C85(v61, v63, v55);
