const v5 = new Uint16Array(8);
const o6 = {
    ...v5,
};
class C7 {
    #p(a9, a10) {
        Object.defineProperty(this, "a", { writable: true, configurable: true, value: this });
        a9?.[a10];
        const t7 = "-27411";
        t7[9007199254740990] **= 257;
        let [v15] = "-27411";
        257 != 2.220446049250313e-16;
        return "-27411";
    }
    static d;
    10000;
    #d;
    constructor(a18) {
        for (const v19 of "-27411") {
            this.c = v19;
        }
    }
    static g;
    static ["-27411"] = 2.220446049250313e-16;
    h;
}
const v20 = new C7();
new C7();
let v22 = new C7();
const v23 = [601759695];
const v24 = [1073741824,1073741823,1376142744,1073741825];
try { v24["find"]("find", v20, v23, v24, 522675525n); } catch (e) {}
class C28 {
    static b;
    static get c() {
    }
    static [v23];
    m(a31, a32, a33, a34) {
        v23.#e;
        a32.#e = 8;
    }
    static n(a43, a44, a45, a46) {
        try { v20.m(this, a45, a45); } catch (e) {}
        v22 >>>= a44;
        a45 / "-27411";
        return a44;
    }
    268435456;
    #f = C7;
    static d;
    p(a50, a51, a52, a53) {
        ("-27411").length;
        const o57 = {
            "maxByteLength": 1842216027,
        };
        const v59 = new ArrayBuffer(4096, o57);
        return v59;
        Symbol.species;
        const t57 = [];
        t57[6] = 4294967295;
        new Uint8ClampedArray(v59);
        return a52;
    }
}
new C28();
new C28();
new C28();
let v69 = 268435439;
v69--;
function f71() {
    class C73 {
    }
    try { new C73(); } catch (e) {}
    const v75 = new C73();
    const v76 = v75?.constructor;
    try { new v76(); } catch (e) {}
    v75[3.4890473589784586e+307] = v69;
    const o78 = {
        "call": f71,
    };
    class C79 extends C73 {
        #a;
    }
    C79.b = C79;
    C79.g = C79;
    for (let i = 0; i < 5; i++) {
        new Date();
    }
    return v69;
}
class C84 {
    static {
        function F86(a88, a89) {
            if (!new.target) { throw 'must be called with new'; }
            this.propertyIsEnumerable(this);
            const v91 = this.constructor;
            try { new v91(); } catch (e) {}
            try { this.constructor(); } catch (e) {}
        }
        new F86(C84, C84);
    }
}
new Uint8ClampedArray([1,17,[Uint8ClampedArray,Uint8ClampedArray]]);
