const v3 = [286977509,536870889,-380982641,1073741825,-14496,-9223372036854775807];
const v4 = [64918,-21903,65536,-65537,-9007199254740991,268435440];
function f5(a6, a7, a8, a9) {
    const v10 = /(?:a*)+q(?<a>.)/guds;
    function f11(a12) {
        return a6;
    }
    for (let [i20, i21] = (() => {
            v3.toLocaleString(f11);
            for (let v15 = 0; v15 < 5; v15++) {
                v4[a7];
                v10["exec"]();
            }
            return [0, 10];
        })();
        (() => {
            const v22 = i20 < i21;
            !v22;
            return v22;
        })();
        (() => {
            i21--;
            const v28 = a6.toPrimitive;
            const o30 = {
                [v28]() {
                },
            };
        })()) {
        for (let v33 = 0; v33 < 5; v33++) {
        }
    }
    return a7;
}
class C34 {
    static p(a36) {
        new Float64Array(Float64Array, Float64Array);
        ("n").split("n", 2147483647);
        const v43 = Symbol.iterator;
        const o53 = {
            [v43]() {
                let v45 = 10;
                const o52 = {
                    next() {
                        v45--;
                        const v49 = v45 == 0;
                        const o51 = {
                            "done": v49,
                            get f() {
                            },
                            814452916: 0,
                            "type": "o",
                            "maxByteLength": 0,
                            "value": v45,
                        };
                        return o51;
                    },
                };
                return o52;
            },
        };
        return 3.3955155583434298;
    }
}
try { new C34(); } catch (e) {}
C34.e = C34;
const v56 = Symbol.hasInstance;
("function")[0];
const v59 = [v56];
let v60;
try { v60 = v59.lastIndexOf("o"); } catch (e) {}
const o61 = {
    "arguments": v59,
    "type": "function",
};
const v62 = new v60();
new C34();
const v64 = new C34();
const v65 = v64?.constructor;
try { new v65(); } catch (e) {}
const v67 = v64?.constructor;
let v68;
try { v68 = new v67(); } catch (e) {}
const v69 = v68?.constructor;
try { new v69(); } catch (e) {}
function f71(a72, a73, a74) {
    const v75 = a72?.constructor;
    try { new v75(9.828020079143993); } catch (e) {}
    a73.e = a73;
    const o80 = {
        __proto__: C34,
        "g": a72,
        "e": "o",
        set f(a78) {
            try {
                a74.__proto__ = a73;
            } catch(e79) {
            }
        },
        ...a74,
        "f": v64,
    };
    function F81(a83, a84) {
        if (!new.target) { throw 'must be called with new'; }
        const v85 = this.constructor;
        const v87 = /[a-zA-Z0-9]/gvisy;
        const v88 = /abc?/gvmy;
        v88[-2] ^= v87;
        v88.exec("Q8F");
        const v91 = new Int16Array();
        const v92 = v91.lastIndexOf(F81, a83);
        v92 ^ v92;
        try { new v85(this, a83); } catch (e) {}
        new Uint32Array(127);
        for (let v98 = 0; v98 < 5; v98++) {
        }
    }
    o80[0];
    return o80;
}
const v100 = f71(C34, C34, "o");
const v102 = ([16,-1337814116,1282563165,-268435456,-256,58611,-4294967296,-10,-9223372036854775807,9]).keys();
function f103(a104, a105) {
    const o106 = {
        "g": v102,
    };
    return o106;
}
new SharedArrayBuffer();
const v109 = [64,-20358,-9007199254740990,14,1073741824];
const v110 = [1073741823,-22705,8,-8,-12,-39597,10159,4294967296,65537];
try { v110.reduceRight(v109); } catch (e) {}
v100[0] = v100;
const v112 = f71(v62, v64, v62);
v112.name;
const v114 = f71(v64, v112, v62);
v114.b = v114;
try { new Float64Array(v62, v62, Float64Array); } catch (e) {}
const v117 = new Float64Array();
try { v117.toReversed(); } catch (e) {}
class C119 {
}
function f120() {
    return f120;
}
(2147483648 < 7) && f120;
let {...v125} = v117;
v125.f = v125;
v125.h = v125;
