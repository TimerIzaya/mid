class C3 {
    static ["split"] = 1000000.0;
    valueOf(a5) {
        let v6;
        try { v6 = a5(C3, "split"); } catch (e) {}
        let v7;
        try { v7 = v6.getUTCMonth(); } catch (e) {}
        let v8;
        try { v8 = v7(a5, 536870887, this); } catch (e) {}
        const v9 = v8 ^ v7;
        try {
            super.imul(a5, v9, 1000000.0, "split", v9);
        } catch(e11) {
        }
        return 1000000.0;
    }
    #g;
}
const v12 = new C3("split", C3, 536870887);
new v12();
const t20 = 536870887;
new t20();
const o24 = {
    "maxByteLength": 536870889,
};
new SharedArrayBuffer(217, o24, 75);
try { (61277).grow(); } catch (e) {}
function F45(a47) {
    if (!new.target) { throw 'must be called with new'; }
}
const v48 = new F45(536870889, 61277, SharedArrayBuffer);
with (v48) {
    function F49(a51, a52, a53) {
        if (!new.target) { throw 'must be called with new'; }
        const t34 = this.POSITIVE_INFINITY;
        t34(Float64Array);
    }
    let v56 = 10;
    for (;
        (() => {
            const v57 = v56--;
            v57 >>> v57;
            return v57;
        })();
        ) {
    }
}
