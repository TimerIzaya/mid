[479.3491628176364,816816.2446007528,334995.4856523173,2.220446049250313e-16,2.220446049250313e-16,907.0767509807233,-557.8394869748877,0.16669309879224414];
[273523.97043913184,-449.88979507413296,4.0,251.64609825290313,-2.2250738585072014e-308,-2.0,3.827351602136808,-5.7831302441303585,1.014738513545383e+308];
[-1000.0,-3.0,-3.0,1e-15,1.275555877992357e+307,5.588619883522812e+307,0.1312154209747094];
new Int32Array(257);
new Uint32Array(0);
new Uint8Array(3165);
function F16() {
    if (!new.target) { throw 'must be called with new'; }
    function f18(a19) {
        new Int16Array(16);
        new Uint8ClampedArray(10);
        const v28 = new Int16Array(5);
        return v28;
    }
    this.constructor = f18;
    try { this.constructor(); } catch (e) {}
    try {
    } catch(e30) {
    }
    function F31() {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v33 = new F31();
    const v34 = v33?.__defineSetter__;
    try { v34(); } catch (e) {}
    function f36(a37, a38) {
        const o39 = {
        };
        return o39;
    }
    const v40 = f36(v34, f36);
    function f41() {
        return f41;
    }
    Float32Array.toString = f36;
    const v44 = new Float32Array(218);
    for (const v45 of v44) {
        v45 >>> v45;
        Object.defineProperty(v40, Float32Array, { configurable: true, enumerable: true, get: f36, set: f41 });
    }
}
new F16();
new F16();
new F16();
