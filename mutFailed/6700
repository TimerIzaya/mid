const v6 = [1,-2,1024,-1073741824,-1268611578,5,257,-2147483649];
[536870888,44643,1073741824,268435441,-2036562200,1];
[-779644759,1,4294967295,9223372036854775807,2043479878,64337];
function F13(a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    const v17 = this.constructor;
    function f18() {
        const t7 = "reverse";
        t7[Symbol.split] = a16;
        return this;
    }
    v17.valueOf = f18;
    v17.name = v17;
    const v22 = new Int16Array();
    const v23 = v22.lastIndexOf(v22, a16);
    const v24 = v23 ^ v23;
    ("-52487")[159];
    v6.length;
    a16 | v23;
    [-19.329383503421127,0.6086957394391076,2.2250738585072014e-308,1.7976931348623157e+308];
    [1000000000000.0,-1.7976931348623157e+308,-2.0,-912.4859549386395,-4.0];
    [-2.220446049250313e-16,2.2250738585072014e-308,1.0797783455230818e+308,2.0,3.0,4.0,856.7089777751873,-5.0,-736.8475574566735];
    try { new v17(v24); } catch (e) {}
}
function f33() {
    const v36 = new Float32Array(1000);
    const v39 = new Uint8Array(201);
    v39[6] = v36;
    return v36;
}
F13.toString = f33;
const v40 = new F13(F13, F13);
const t32 = v40.constructor;
new t32();
