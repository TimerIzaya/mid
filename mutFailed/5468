const v2 = new Int16Array(7);
const v5 = new Uint32Array(829);
Math.max(528805185);
Math.log10(Uint32Array);
Math.random();
const v14 = new Int16Array(256);
function f15() {
    return v14;
}
const v21 = [256,10,256];
Reflect.apply(v2.fill, "seal", v21);
Object.defineProperty(v5, 3828149434, { set: f15 });
const v24 = new BigUint64Array();
const o34 = {
    [v24](a27, a28, a29) {
        class C31 {
            #d = 4096;
            static {
                this.#d;
            }
        }
    },
};
function F36(a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    const v40 = this.constructor;
    const v42 = /[a-zA-Z0-9]/gvisy;
    const v43 = /abc?/gvmy;
    v43[-2] ^= v42;
    v43.exec("Q8F");
    const v46 = new Int16Array();
    const v47 = v46.lastIndexOf(F36, a38);
    v47 ^ v47;
    try { new v40(this, a38); } catch (e) {}
    new Uint32Array(127);
    for (let v53 = 0; v53 < 5; v53++) {
    }
}
const v54 = new F36();
const t39 = v54.constructor;
new t39();
