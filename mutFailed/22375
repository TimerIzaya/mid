const v3 = [4294967296,4294967296,4294967296,65535,65535];
v3[1] = v3;
const v4 = [v3];
const v5 = [v4,v3];
new Set();
const v8 = [101.80596160343589];
try { v8.toLocaleString(); } catch (e) {}
const v10 = [0.2078210164865143,1.615139966181617e+306,-3.0,-3.0];
const v11 = [-1.0,-9.150125700926694,-1000000000.0,-580319.7948855583,3.3319973746501126e+307,-2.2250738585072014e-308,1e-15,198817.7120231539,-Infinity,-1.67048960860653e+307];
function F12(a14, a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    try { a15.includes(-10); } catch (e) {}
    try {
        this.g = a15;
    } catch(e18) {
    }
}
new F12(65535, v5, v4);
const v20 = new F12(4294967296, v5, 65535);
new F12(4294967296, v10, v11);
function f22(a23, a24, a25, a26) {
    const v28 = a26 ^ 4046;
    v28 - v28;
    const v31 = new BigInt64Array(4046);
    v31[1868];
    let o33 = {
    };
    o33.f = o33;
    [,...o33] = v31;
    return BigInt64Array;
}
v20.length;
for (let v35 = 0; v35 < 5; v35++) {
    v35();
}
