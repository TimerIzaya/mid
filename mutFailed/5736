const v0 = [4.867030282584153,-2.220446049250313e-16,5.0,-1e-15,3.0,-7.214101075503304e+307];
const v1 = [1000000.0,-1.6234425792239546e+308,549558.7531705378,0.47255420968065875];
const v2 = [-0.8227626475848648,1e-15,NaN,-1000.0,-2.516934185995156,-9.240132421017892e+307,0.21465249780599394,1000.0,-4.509606534607906,-1.7976931348623157e+308];
new Uint32Array(1024);
const v10 = new Uint16Array(9);
new BigInt64Array();
const v16 = new Int32Array(182);
[Int32Array,v10,v16,BigInt64Array];
[2086,[9,Int32Array,v16],Uint16Array,v16];
class C21 {
    static c;
}
const v22 = new C21();
const v23 = new C21();
const v24 = new C21();
class C25 {
    static #n(a27, a28, a29, a30) {
        class C31 {
            4;
            static a;
        }
        C31();
        C31();
        C31();
    }
    7 = v24;
    #a = v23;
}
new C25();
new C25();
new C25();
[v24];
const v39 = [v22];
function F40() {
    if (!new.target) { throw 'must be called with new'; }
}
new F40();
const v43 = new F40();
const v44 = new F40();
function F45(a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    const v49 = a48?.__lookupGetter__;
    try { v49(a47); } catch (e) {}
    try { v39.constructor(F45, this); } catch (e) {}
    a47.e = a47;
}
F45.arguments = F45;
const v52 = new F45(v44);
const v53 = new F45(v52, v43);
v53.e = v53;
("Hyo9")[1];
const t50 = "at";
t50[1] = "at";
const v59 = ([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap?.constructor;
try { v59("Hyo9"); } catch (e) {}
[-4.202468609045087];
const v62 = [0.8434386161503777];
try { v62.findLastIndex(v62); } catch (e) {}
const t58 = "4i";
t58[1] = "4i";
const v65 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f66(a67, a68, a69, a70) {
    function f71() {
        let v73 = Float64Array;
        v73 = a68;
        const v74 = v65.length;
        const v75 = v74 >>> v74;
        const v79 = [0n];
        function F80(a82, a83) {
            if (!new.target) { throw 'must be called with new'; }
            try { new Int8Array(v79); } catch (e) {}
        }
        new F40();
        const o87 = {
            "type": 137722928n,
        };
        gc(o87);
        v75 / v75;
        const o90 = {
        };
        ([])["concat"]();
        new Uint8Array(105);
        let v97 = -268435456;
        v97--;
        const o99 = {
            "e": -4294967295,
            "e": v97,
        };
    }
    const v100 = f71();
    %OptimizeFunctionOnNextCall(f71);
    return v100;
}
f66();
f66();
const t93 = "RpXR";
t93[1] = "RpXR";
("c")?.toLocaleUpperCase;
class C107 {
    constructor(a109) {
        f66.localeCompare(a109, "valueOf");
    }
}
const v111 = new C107();
const t104 = v111.constructor;
new t104(C107);
new Uint8ClampedArray(0);
new Int32Array(4096);
function F118(a120, a121) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = v1;
    } catch(e122) {
    }
}
new F118(v2, 4096);
new F118(v2, 1024);
new F118(v0, 0);
/a(?=b)[\p{Script_Extensions=Mongolian}&&\p{Number}]/vdiy;
