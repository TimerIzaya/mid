const v2 = new BigUint64Array(738);
new Int16Array(Int16Array);
new Int32Array(2692);
const v15 = [65537,268435441,63298,-5,1235122603];
const v16 = [128,215394418];
let v17;
try { v17 = v16.entries(); } catch (e) {}
const v18 = [-2,-4294967296,4294967297];
function F19(a21, a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    const v25 = a21.constructor;
    try { v25(1024, 1024, v15); } catch (e) {}
}
const v27 = new F19(-714582153, F19, -714582153, v16);
v27.length;
const v29 = new v2(9, v27, 9, v18);
v29.b = v29;
const v30 = new F19(1024, v29, v18, v18);
let v38;
try { v38 = ("string").trimStart(); } catch (e) {}
let v39 = -1;
-35417 - -35417;
class C42 {
}
function f43(a44, a45, a46, a47) {
    return v30;
}
f43(-581116763, v38);
v17[v29] ||= ([1024,19026,1125846339]).length;
const o55 = {
    set b(a54) {
        v39 <<= v39;
    },
};
