const v3 = new Uint32Array(141);
const v6 = new WeakRef(96);
const v9 = Symbol.match;
const v10 = v6[v9];
v6.buffer.b;
const v13 = [v10,v9];
v13[1] = v13;
const v15 = [WeakRef,[96,96,v3,v13,false]];
try { v15.map(141); } catch (e) {}
new Promise(3281);
function F19() {
    if (!new.target) { throw 'must be called with new'; }
    const v21 = this?.__lookupGetter__;
    try { new v21(this); } catch (e) {}
}
const v23 = new F19();
v23.e = v23;
const t17 = [v23];
t17[1073741824] = Uint16Array;
-5345 - -5345;
const v29 = Math.sin(-5345);
v29 | v29;
