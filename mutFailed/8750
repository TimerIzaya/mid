class C3 {
    static d = 687.3754602512545;
    #m(a5) {
        const t3 = "J1qJy";
        t3[687.3754602512545] = 687.3754602512545;
        this[-1] = a5;
        %VerifyType(a5);
        const o8 = {
            "maxByteLength": 185,
        };
        const v10 = new ArrayBuffer(185, o8);
        new Uint8Array(v10);
        return Uint8Array;
    }
}
function F13() {
    if (!new.target) { throw 'must be called with new'; }
}
class C16 extends "J1qJy" {
}
class C18 extends C16 {
    set d(a20) {
        super.d = this;
    }
}
new C3();
const v25 = new C3();
new C3();
class C27 {
    static #valueOf(a29, a30) {
        [50509.34986595507,-3.662743465468735e+307,-1.8005876565506203,1.0,-0.0,-2.2250738585072014e-308,512.420728033223];
        [Infinity,-2.0,-1.7976931348623157e+308,-5.28472426215473,-276052.5340571054,4.0,0.5382375944381222,3.0];
        return [-5.0,0.805725356896183,431470.58691802947];
    }
    o(a35, a36) {
        const o37 = {
        };
        new Proxy(a35, o37);
        return a35;
    }
}
new C27();
new C3();
new C27();
function F46(a48, a49) {
    if (!new.target) { throw 'must be called with new'; }
}
const v50 = new F46();
function f51() {
    return f51;
}
const v52 = /{}(x)(x)(x)\4*a{0}a|b/msy;
const v55 = new BigUint64Array();
function F56(a58, a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
    const v61 = this.constructor;
    try { new v61(BigUint64Array, v25, v55); } catch (e) {}
    a60[1];
    function f65(a66, a67) {
        a67 / a67;
        arguments[1];
        arguments.toString = a66;
    }
    try { f65(f51, v52); } catch (e) {}
    f65(v61, 8077n);
}
const v73 = new F56(BigUint64Array, 4, v55);
const t67 = v73.constructor;
new t67(v50, v50, v52);
