const v3 = /[Y?]/gvdims;
const v4 = /[\b2mB]/vms;
const v5 = /L/gvdis;
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v5;
    } catch(e10) {
    }
    try {
        const v13 = [[Int16Array,Int16Array,Int16Array,Int16Array]];
        class C15 extends Map {
        }
        const v16 = new C15(v13);
        const v17 = new Int16Array(v16);
        function f19(a20, a21, a22, a23) {
            const v26 = v16["entries"](a22, ...v17, BigUint64Array).next();
            const v27 = v26.__lookupGetter__;
            try { v27(v26); } catch (e) {}
            return a21;
        }
        for (let v29 = 0; v29 < 10; v29++) {
            f19();
        }
        this.g = a8;
    } catch(e31) {
    }
}
const o32 = {
};
Math.cos(-197199362);
new F6(v4, v3);
new F6(v5, v3);
new F6(v4, v5);
/\xed\xb0\x80bh(?:a{5,1000000}){3,1000000}+/uimsy;
class C41 extends Date {
}
for (let i = 0; i < 5; i++) {
    function F42(a44, a45) {
        if (!new.target) { throw 'must be called with new'; }
    }
}
/(?<!)/gvi;
/YUe\p{General_Category=Decimal_Number}/gusy;
new Uint32Array(1024);
new BigUint64Array(9);
new Int32Array(2);
Math.tan();
