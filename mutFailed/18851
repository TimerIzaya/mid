const v1 = new Date();
function f2(a3) {
    /(?:a+)+(?!(a))\1/dmy;
    /X[\cZ]+/giy;
    /(a*b3.)/gum;
    return Date;
}
v1.toString = f2;
function f7(a8) {
    a8.toString = f2;
    const o14 = {
        set h(a10) {
            try {
                new Date(-1.7976931348623157e+308);
            } catch(e13) {
            }
        },
        "b": Date,
        [v1]: v1,
        "h": a8,
        __proto__: a8,
        "e": Date,
        "c": Date,
        3: a8,
    };
    return o14;
}
f7(f7(Date));
const v17 = f7(v1);
function f18() {
    return v1;
}
function F22(a24, a25, a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    v17.d = a25;
    try {
        this.d = a26;
    } catch(e28) {
    }
}
const v29 = new F22(-9007199254740990, -536870912, -536870912, -9007199254740990);
new F22(536870888, -536870912, v29, 536870888);
new F22(-536870912, -536870912, Date, -536870912);
const v33 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v34 = [16,-28272,-128];
const v35 = [1073741824,1073741823,1376142744,1073741825];
function f37(a38, a39, a40, a41) {
    function f43() {
        (-4294967295 >>> -4294967295) | Date;
        const o52 = {
            "e": -4294967295,
            ...v33,
            ..."Vre",
            "c": v35,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a50, a51) {
                return a50;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            5: -4294967295,
            6: -268435456,
        };
        o52[6] = o52;
    }
    a39();
    %OptimizeFunctionOnNextCall(f43);
    let v55;
    try { v55 = v35["find"](..."find", a41, ...v34, ...v35, ...522675525n); } catch (e) {}
    new Uint16Array(6);
    new Int8Array(198);
    new Float64Array(8);
    v55 <= a40;
    return arguments;
}
for (let v66 = 0; v66 < 10; v66++) {
    f37();
}
%OptimizeFunctionOnNextCall(f37);
f37(v33, v33, f37, v33);
