function F0() {
    if (!new.target) { throw 'must be called with new'; }
    function F3(a5, a6, a7, a8) {
        if (!new.target) { throw 'must be called with new'; }
        function f9() {
            return a6;
        }
        try {
            f9();
        } catch(e11) {
        }
        const v12 = this?.__defineGetter__;
        try { new v12(F0, 1024); } catch (e) {}
    }
    const v14 = new F3();
    try { v14.propertyIsEnumerable(this); } catch (e) {}
    const v16 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    v16[3];
    class C18 {
    }
    const v19 = C18?.apply;
    try { new v19(1024, v14); } catch (e) {}
    const v22 = [-536870912,7,127,-25448,9007199254740991,268435439,4294967297,-9007199254740992];
    const v23 = [601759695];
    function f25() {
        let v28 = Float64Array;
        v28 = 1024;
        b = v23;
        const v29 = v16.length;
        try {
            v16.forEach(1024);
        } catch(e31) {
        }
        const v32 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        let v34 = Symbol.toPrimitive;
        const o42 = {
            "c": v28,
            "b": v32,
            "g": -4294967295,
            ...Symbol,
            "h": C18,
            toString(a36, a37) {
                const v38 = this && 1024;
                a36 = F0;
                try {
                    super.toTimeString(this, v29);
                } catch(e40) {
                }
                a36 *= v34;
                v38 <= v32;
                return f25;
            },
        };
        const o63 = {
            "c": -4294967297n,
            [522675525n](a45, a46) {
            },
            "c": v23,
            valueOf(a48, a49) {
                return a48;
            },
            "b": -4294967295,
            [-4294967297n](a51, a52, a53, a54) {
            },
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v22,
            ...v14,
            [v34]() {
            },
            "type": C18,
            ..."Vre",
            valueOf(a57, a58) {
                return this;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            toString(a60, a61, a62) {
                return C18;
            },
            5: -4294967295,
            6: -268435456,
        };
        v34 = v28;
        new Float32Array(1334);
        new Float64Array(3);
        new Uint16Array(2);
    }
    try { f25(); } catch (e) {}
    try {
        this.b = 1024;
    } catch(e74) {
        for (let v75 = 0; v75 < 25; v75++) {
            v23["p" + v75] = v75;
        }
    }
}
new F0();
new F0();
new F0();
const v84 = new Int32Array(1);
const v85 = v84 instanceof BigInt64Array;
v85 || v85;
19793 / 19793;
const v91 = Array(19793);
try { v91.slice(Int32Array, v91); } catch (e) {}
const v93 = [v91,v91,v91,v91];
v93[1];
[[v93,v93,v93]] >= Uint16Array;
-2n;
12n >> 12n;
const v105 = new Uint8ClampedArray(512);
v105[404] = v105;
const v108 = new Uint8ClampedArray(0);
try { v108.lastIndexOf(Array); } catch (e) {}
new Uint32Array(-65045);
let v113 = 1024;
v113--;
const v116 = new Uint16Array(v113);
try { ("Rh").padStart(v108); } catch (e) {}
try {
    v116.a = "Rh";
} catch(e119) {
}
v116[7] = v116;
