const v2 = new Float32Array(16);
const v5 = new BigUint64Array(13);
const v8 = new Float32Array(73);
function f9(a10, a11, a12, a13) {
    -a11;
    a12[4] = a12;
    a13 + a13;
    const o26 = {
        get a() {
            const v17 = this.__proto__;
            function f18(a19, a20, a21) {
                const o22 = {
                    ...v8,
                    [this]: a10,
                    "e": Float32Array,
                };
                return o22;
            }
            const v23 = f18(Float32Array, 73, v17);
            f18(f18, a11, 16);
            f18(v23, a11, BigUint64Array);
            return v5;
        },
    };
    o26.c = o26;
    return o26;
}
f9.length = f9;
const v27 = f9(13, 73, v8, 16);
const v28 = f9(16, 16, 73, f9);
v28.c = v28;
let v29 = f9(13, 16, 13, f9);
function f30(a31, a32, a33) {
    a31 <= a31;
    const o41 = {
        "d": a31,
        "h": 73,
        "f": f9,
        [73]: 13,
        "c": f9,
        "b": f9,
        p(a36, a37, a38, a39) {
            v29 += a39;
            const o40 = {
                __proto__: this,
                "g": v2,
                [v8]: a38,
                [73]: Float32Array,
            };
            return a33;
        },
    };
    return o41;
}
try { f30.bind(v28); } catch (e) {}
const v43 = f30(73, v27, v29);
v43.__proto__ = v43;
const v44 = f30(16, v28, v29);
try { v44.b(v27, v44, v44, v27); } catch (e) {}
f30(16, v27, v27);
const v48 = new Date();
try { v48.setFullYear(16, v48, Float32Array); } catch (e) {}
const v51 = v48["getUTCMilliseconds"]();
v51 - v51;
