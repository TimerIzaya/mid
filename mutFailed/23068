new Map();
function f2() {
    function f4(a5, a6, a7, a8) {
        const v9 = a6 >>> a6;
        const v10 = v9 >>> v9;
        const v11 = v10 != v10;
        for (let v12 = 0; v12 < 5; v12++) {
        }
        const o13 = {
        };
        o13.b = 5n;
        o13.b = v11;
        return a7;
    }
    f4();
    %OptimizeFunctionOnNextCall(f4);
    return Map;
}
const v15 = [21508];
v15[0];
[-65535,9223372036854775807,268435439,30679804];
const v18 = [9007199254740992,-1093756402,2147483649,129,5];
try { v18.entries(); } catch (e) {}
function f21() {
}
class C25 extends Int8Array {
    [12];
}
new C25(1564);
const o29 = {
};
function F30(a32, a33, a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    for (let v38 = 0; v38 < 100; v38++) {
        const v42 = new Uint16Array(4096);
        v42[813];
        v42.fill();
        const o47 = {
            968: undefined,
            "d": undefined,
            [268435439n]: 2105444095n,
            __proto__: o29,
            valueOf(a46) {
            },
        };
    }
}
new F30();
~-13823;
const o63 = {
    [128](a56, a57, a58) {
    },
    set b(a60) {
    },
    set b(a62) {
    },
};
function F64() {
    if (!new.target) { throw 'must be called with new'; }
    const v66 = this?.constructor;
    try { new v66(); } catch (e) {}
}
new Map();
const v73 = new Date(127);
let v74;
try { v74 = v73.setUTCFullYear(127, -8796n); } catch (e) {}
F64.caller = F64;
const v75 = new F64();
const v76 = new F64();
v74?.__lookupGetter__;
const v78 = o29.constructor;
v78.caller = v78;
function f80(a81) {
    return 1000.0;
}
function f82(a83, a84) {
    const o93 = {
        "b": v76,
        [Date]() {
        },
        "arguments": v18,
        [v15](a87, a88, a89) {
        },
        n(a91, a92) {
            return a83;
        },
        "a": v75,
    };
    return o93;
}
1 <= 1;
new Uint16Array(536870887);
const v99 = new Uint32Array(Uint32Array);
const o100 = {
};
new Proxy(v99, o100);
%PrepareFunctionForOptimization(f82);
f82();
f82().n();
%OptimizeFunctionOnNextCall(f82);
f82(Proxy, o63);
