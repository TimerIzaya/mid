class C3 {
    o(a5, a6) {
        const v7 = /(J5a{0,1}?)/y;
        class C8 {
            static {
                for (let v10 = 0; v10 < 25; v10++) {
                    const v11 = [601759695];
                    const v12 = [1073741824,1073741823,1376142744,1073741825];
                    function f13(a14, a15, a16, a17) {
                        ~a15;
                        try { a14(); } catch (e) {}
                        const v20 = a16 << a16;
                        v20 % v20;
                        function f22() {
                            return a14;
                        }
                        const v24 = new Int8Array();
                        BigUint64Array.length;
                        const v28 = BigUint64Array * 536870887;
                        let v29 = v28 - v28;
                        v29++;
                        const v31 = this ** v28;
                        try { Number(v7); } catch (e) {}
                        Number.isNaN(v31);
                        const v36 = v24.buffer.__defineGetter__;
                        try { v36(); } catch (e) {}
                        %OptimizeFunctionOnNextCall(f22);
                        let v39;
                        try { v39 = v12["find"](..."find", a17, ...v11); } catch (e) {}
                        return v39;
                    }
                    for (let v40 = 0; v40 < 5; v40++) {
                        f13(this, v40);
                    }
                }
            }
        }
        let v42;
        try { v42 = a5(this, 1086791586, "f"); } catch (e) {}
        v42[5] = this;
        try {
            a5.__proto__ = "E";
        } catch(e43) {
        }
        return v42;
    }
    c;
    e = 1086791586;
}
function f47(a48, a49) {
    a49 instanceof a48;
    new Array(2042);
    return C3;
}
Object.defineProperty(C3, "toString", { enumerable: true, value: f47 });
try { C3(); } catch (e) {}
const v55 = new C3();
const v56 = new C3();
const v57 = v56?.constructor;
try { new v57(); } catch (e) {}
const v59 = new C3();
function f60(a61, a62) {
    a61[Symbol.toPrimitive] = f60;
    a61.c = a61;
    const o72 = {
        [a61]: a62,
        __proto__: v59,
        "g": C3,
        ...a61,
        set a(a66) {
            a66 = this;
            try { a66(v55); } catch (e) {}
        },
        0: a61,
        get a() {
            for (let v69 = 0; v69 < 32; v69++) {
                v55["p" + v69] = v69;
            }
            return this;
        },
    };
    return o72;
}
f60(v55, v56);
f60(C3, v56);
const v75 = f60(v55, v55);
function f76() {
    return 1086791586;
}
try { f76(); } catch (e) {}
-5;
let v81 = 0;
v81--;
let v83 = 0n;
v83++;
const v85 = /\b[gW\x60]/vi;
class C86 {
    #a;
    constructor(a88, a89, a90) {
        a89 ^ a89;
        try {
            a89.#a;
        } catch(e93) {
            e93.message = e93;
        }
    }
}
C86.e = C86;
const v94 = new C86(v85, v83);
const v95 = v94?.constructor;
try { new v95(v75, "E", C86); } catch (e) {}
