new isNaN(6);
new Float64Array(9);
new Int8Array(4);
class C9 {
    constructor(a11, a12) {
        let v13 = 0;
        do {
            Float64Array ^ a11;
            v13++;
        } while (v13 < 0)
    }
    d;
    static [9];
}
new C9(6, 6);
new C9(4, 9);
new C9(6, 6);
const v24 = [-1000000000000.0,Infinity,1.0,-Infinity,1.7976931348623157e+308,5.968300367511291e+307,-2.220446049250313e-16,-3.0,9.510254036543073e+307,5.0];
const v25 = [1.7976931348623157e+308,-1000000000.0,-2.2250738585072014e-308,NaN,-1.9873060550779815,-576168.7100780082,2.220446049250313e-16,2.2250738585072014e-308];
[-131.14557671807358,v24,v24,1e-15];
[4.0,0.2037963153987472];
[v25,-131.14557671807358,4.0];
const v32 = [0.0,-1000.0,2.557943047142931];
[-2.2250738585072014e-308,1e-15,0.0,-3.0,2.220446049250313e-16,1000000000000.0,-386.72889766700735,4.359327317391378];
[1.0,217.29374765656212,-1000000.0,0.16364005213799615,-1.0154039753813905e+308];
for (let v39 = 0; v39 < 5; v39++) {
    try {
        v32.g = v39;
    } catch(e40) {
    }
}
const v47 = [256,54026];
-2 | -2;
function f51() {
    return f51;
}
function f52() {
    return f51 == f52;
}
%PrepareFunctionForOptimization(f52);
f52();
%OptimizeFunctionOnNextCall(f52);
f52();
!6;
Math.hypot(v47);
const o63 = {
    "execution": "async",
    "type": "minor",
};
const v65 = new Int16Array(2183);
new Uint8Array(255);
const v71 = new Int16Array(-13410);
async function f73(a74, a75, a76) {
    delete v71[a75];
    let [v78,v79,...v80] = v65;
    a76[5];
    await v79;
}
parseFloat("minor");
