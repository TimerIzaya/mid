function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = 659568813;
    try {
        this.c = 659568813;
    } catch(e7) {
    }
    try {
        this.g = a6;
    } catch(e8) {
    }
    try {
        this.a = a5;
    } catch(e9) {
    }
}
const v10 = new F3(-2147483648, -2147483648);
function f11(a12, a13) {
    delete a13?.[1000];
    try { WeakMap.apply(Int32Array, Date); } catch (e) {}
    return F3;
}
Object.defineProperty(v10, "toString", { writable: true, value: f11 });
const v19 = new F3(659568813, 4);
const v20 = new F3(-2147483648, v19);
function f21(a22, a23, a24) {
    const o31 = {
        ...v20,
        "g": F3,
        [F3]: F3,
        [v10]: a24,
        "h": a23,
        "d": f21,
        "b": -2147483648,
        6: a22,
        set d(a26) {
            try {
                this.__proto__ = a26;
            } catch(e27) {
            }
        },
    };
    return o31;
}
f21(v20, 659568813, 4);
f21(f21(4, 4, -2147483648), 4, 659568813);
function f37(a38, a39) {
    const v42 = new Int16Array(20);
    for (const v43 in v42) {
        Math.expm1(v43);
    }
    return v19;
}
WeakMap[Symbol.toPrimitive] = f37;
WeakMap.d = WeakMap;
for (let v48 = 0; v48 < 25; v48++) {
    const v49 = [601759695];
    const v50 = [1073741824,1073741823,1376142744,1073741825];
    function f51(a52, a53, a54, a55) {
        a54 >= a54;
        try { v50["has"](..."has", a55, ...v49, ...v50); } catch (e) {}
        WeakMap / 536870887;
        return v48;
    }
    for (let v60 = 0; v60 < 5; v60++) {
        f51(v48, v49, 536870887);
    }
}
