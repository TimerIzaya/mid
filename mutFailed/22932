const v2 = new Uint32Array(1);
6 >>> 6;
new Uint16Array(6);
9 !== 9;
const v10 = new Uint8Array(9);
v10.byteOffset = v10;
function f15() {
    try {
        new Uint16Array(-50415, 300121803, 128);
    } catch(e20) {
    }
    return v2;
}
BigInt64Array.toString = f15;
for (let v21 = 0; v21 < 5; v21++) {
    function f22() {
        const v23 = BigInt64Array + BigInt64Array;
        v23[13];
        const v25 = v23 > v23;
        !v25;
        for (let v27 = 0; v27 < 10; v27++) {
            const v28 = [1929306256,-35796];
            try { v28["36049"](); } catch (e) {}
        }
        return v25;
    }
    f22();
    %OptimizeFunctionOnNextCall(f22);
}
