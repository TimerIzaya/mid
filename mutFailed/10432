[0.03495871668366912,-529342.2945252062,-2.2250738585072014e-308,-362.68693715373183,-1e-15];
const v1 = [1e-15,158334.8503546007,2.0,1.7976931348623157e+308];
const v2 = [-260.8007303099249,5.0,8.101349065099364e+307,2.2250738585072014e-308];
class C3 {
    constructor(a5) {
        for (let v7 = 0; v7 < 32; v7++) {
            Array["p" + v2] = v7;
        }
    }
    #n(a11) {
        const o15 = {
            "execution": C3,
            "type": "minor",
        };
        gc(o15);
        return "async";
    }
}
new C3(C3);
const v18 = new C3(v1);
const v19 = new C3(v18);
new BigUint64Array(7);
const t22 = 1;
const v25 = new t22(1);
new Uint8Array(v19);
function F35(a37, a38, a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    const v41 = this?.constructor;
    try { new v41(this, v41, this, this); } catch (e) {}
    try { a38.toString(); } catch (e) {}
    a39++;
    -2.2250738585072014e-308 >> a40;
    [-48550.861763252644,0.9741629380021758,-2.0,5.0,0.0,9.550440224838109,-759349.387046625,1e-15,-716.166433089257];
    [-1000000.0,-2.0,593.8866544050784,0.208936607803352,-1e-15,-1000000000000.0,6.506436847772548e+307];
    const v48 = [344.64861552632146,-4.0,1000000.0,642514.606934905,0.1807180632123203,0.10752618873097497,983.7839603476882,1000.0,1e-15];
    try {
        v48.e = v48;
    } catch(e49) {
    }
    try {
    } catch(e50) {
    }
}
const v51 = new F35(v25, -2.2250738585072014e-308, 5, 5);
new F35(5, v51, -60268, -60268);
const o53 = {
};
try {
} catch(e54) {
}
