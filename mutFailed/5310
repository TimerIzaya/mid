let v2 = -1000000000000.0;
[16];
[-1278366157,10,-52829];
[64,-55055,44179,7];
const v10 = new Set();
function f14() {
    ("-536870912").normalize;
    const v17 = ("-536870912").g;
    const v20 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    for (let v21 = 0; v21 < 5; v21++) {
        function f22() {
            try {
                v20.forEach();
            } catch(e24) {
                e24.a = e24;
            }
            const v26 = Symbol.toPrimitive;
            v26.description;
            Symbol.for();
            return v26;
        }
        f22();
        %OptimizeFunctionOnNextCall(f22);
    }
    const v30 = new Uint16Array(209);
    v30[145] = v17;
}
[140693.55968437064,-1.1852842353837545,1.7976931348623157e+308,0.2891882798796017,1000000.0,-405533.57654950966,-476160.9672552756,-1.2913968641498632e+308,-1.7976931348623157e+308,1000000.0];
[0.0,2.439947332797196];
[3.554050204802966,2.0,-0.9893540922478827,835.4687088452995,1.0,-1000000000000.0,537.8799696886636,-129821.05993193889] <= "Z";
const v39 = [-1000.0,351.94489669740733,5.8623101046484845,-160881.40611645568,0.6390643538224362,9.13027568774574];
function f40(a41) {
    a41 ^ a41;
    return 36002;
}
function f43(a44, a45) {
    return f40;
}
const v47 = new Promise(f43);
v2++;
Object.defineProperty("undefined", "sinh", { writable: true, configurable: true, get: f40 });
Object.defineProperty(v47, v10, { configurable: true, enumerable: true, get: f40, set: f43 });
const v50 = Symbol.iterator;
const o59 = {
    [v50]() {
        let v52 = 10;
        const o58 = {
            next() {
                v52--;
                const v56 = v52 == 0;
                const o57 = {
                    "done": v56,
                    "value": v52,
                };
                return o57;
            },
        };
        return o58;
    },
};
v47[v39] += 36002;
new BigInt64Array(1000);
new BigUint64Array(127);
try { (-9007199254740992).log2(-9007199254740992); } catch (e) {}
class C69 extends f14 {
}
for (const v70 in C69) {
}
let v73 = 10;
for (; v73--;) {
}
class C76 {
}
function* f77(a78, a79) {
}
new Int8Array(268435456);
for (let v82 = 0; v82 < 10; v82++) {
    Float64Array.of();
    const v87 = new Date();
    v87.setFullYear();
    Array();
}
