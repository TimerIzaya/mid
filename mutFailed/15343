function f0() {
    const o7 = {
        set d(a5) {
            try {
                this.__proto__ = this;
            } catch(e6) {
            }
            super["-8"] = "-8";
        },
        ..."-8",
        ..."-8",
        __proto__: "-8",
        "c": "-8",
        [-10]: -403168.38300685666,
        "e": "-8",
    };
    return o7;
}
const v8 = f0();
const t19 = f0();
t19();
class C17 extends f0 {
    #d = C17;
    #toString(a19, a20, a21, a22) {
        const v23 = a20 == a21;
        v8.d -= -1e-15;
        super[v23];
        try {
            this.__proto__ = this;
        } catch(e25) {
        }
        return -2.0;
    }
    #f = v8;
    536870889;
}
const v26 = new C17();
new C17();
new C17();
function f29() {
    const o36 = {
        toString(a34, a35) {
        },
        "b": -567285251n,
        "c": "boolean",
        ["object"]: f29,
        ["boolean"]: 1000000000000.0,
        "h": 1000000000000.0,
    };
    return o36;
}
const v37 = f29();
f29();
const v39 = f29();
function F40(a42) {
    if (!new.target) { throw 'must be called with new'; }
    let v43 = 10;
    for (; v43--;) {
        v26[95];
    }
}
const v46 = new F40();
function f47(a48, a49, a50) {
    const o58 = {
        get a() {
            v39 >>> null;
            super.e = v26;
            try {
                v46.toString = f0;
            } catch(e55) {
            }
            const o56 = {
            };
            gc();
        },
    };
    return o58;
}
const v59 = f47();
f47();
function F61(a63, a64, a65) {
    if (!new.target) { throw 'must be called with new'; }
    const v66 = this.constructor;
    try { new v66(F61, F61); } catch (e) {}
    a64.g = a64;
    this.a = a63;
}
new F61(v39, v37, v46);
new F61(v39, v59);
Math?.expm1;
