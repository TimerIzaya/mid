const v0 = [-65535,-9223372036854775808,-46911,536870889,10,64,9007199254740992,-487186139,62664];
const v1 = [3,0,1073741825,-719633926,1,65536,257,7,3];
let v2 = [1399827025,37039,2147483647,0,-4294967295];
class C3 {
    static toString(a5) {
        v1[19] = v2--;
        this[v2] = v0;
        super[v2];
        return -2.132863564357055;
    }
    static #c = v0;
    [v0] = v0;
}
const v11 = new C3();
const v12 = new C3();
const v13 = new C3();
function F14(a16, a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v1;
    } catch(e19) {
    }
}
const v20 = new F14(v2, v0, C3);
new F14(v0, C3, v11);
new F14(C3, v11, v0);
function f23(a24, a25) {
    const o33 = {
        o(a27, a28) {
            this & a25;
            for (let v30 = 0; v30 < 32; v30++) {
                a27["p" + v30] = v30;
            }
            return a25;
        },
        ...a25,
        255: v20,
        ...v11,
    };
    return o33;
}
const v34 = f23(v13, v11);
f23(v12, C3);
f23(v12, v34);
function f37() {
    const o44 = {
        "d": 268435440,
        "a": 4.0,
        __proto__: "cJ",
        "h": "cJ",
        valueOf(a42) {
            const o43 = {
                __proto__: this,
            };
        },
        "c": "cJ",
    };
    return o44;
}
const v45 = f37();
const v46 = f37();
[f37(),v45,v46,v46];
[];
const v50 = [-54486,11,9007199254740991,268435456,536870912,1073741823,255,1073741824,-2147483648,-3];
[65535];
new Set();
function F54(a56, a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e59) {
    }
    try {
    } catch(e60) {
    }
    this.a = a57;
}
function F61(a63, a64) {
    if (!new.target) { throw 'must be called with new'; }
    function f65(a66, a67) {
        v12.b;
        Object.defineProperty(a67, -2, { writable: true, configurable: true, enumerable: true, get: f23, set: f23 });
        return this;
    }
    a64.valueOf = f65;
    const v69 = this.constructor;
    try { new v69(v50, this); } catch (e) {}
    ++a64;
}
new F61(F61);
