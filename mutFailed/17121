const v2 = new Int16Array(1752);
new Int32Array(474);
const v8 = new BigInt64Array(3235);
class C9 extends BigInt64Array {
    257 = v8;
    static get h() {
        try {
        const t0 = 474;
        t0(Int32Array);
        } catch (e) {}
        try {
            v2.values();
        } catch(e16) {
            function f17(a18, a19, a20, a21) {
                const o22 = {
                    [a18]: a18,
                };
                return o22;
            }
            Worker.toJSON = f17;
            const v25 = [Worker];
            const o26 = {
                "arguments": v25,
                "type": "function",
            };
        }
        return Int32Array;
    }
}
new C9();
new C9();
new C9();
class C31 {
    static {
        class C35 {
            [9007199254740990] = -624806.1246088534;
        }
        const v36 = new C35();
        const o37 = {
            ...this,
            __proto__: v36,
        };
        try {
            Math.pow(-15 >> 8798, -3.0);
            const t43 = null;
            t43.valueOf = this;
        } catch(e44) {
            e44.stack;
        }
    }
}
const v46 = [null,null];
function f47() {
    const v48 = -v46;
    new Float32Array();
    -(v48 && v46);
    return C31;
}
%PrepareFunctionForOptimization(f47);
f47();
%OptimizeFunctionOnNextCall(f47);
f47();
