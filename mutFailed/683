const v1 = new Date();
Date.prototype;
const v5 = Date;
const v6 = Date.prototype;
try {
    v1.e = v6;
} catch(e7) {
}
const v8 = new BigUint64Array(3011);
try { v8.reduceRight(Date); } catch (e) {}
const v12 = new Uint8ClampedArray(3945);
v12[3938];
const v16 = new Int32Array(9);
v16[7];
function F18(a20, a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
}
const v23 = new F18();
3011 ^ v23;
const v25 = v6.__proto__;
const v29 = new F18(F18, F18, v23);
const v30 = v29?.__defineGetter__;
v23[v6];
Math.ceil(-11);
-11 + (v25 - -11);
try { new v30(3945, v1); } catch (e) {}
for (let v39 = 0; v39 < 5; v39++) {
    Object.defineProperty(v23 || undefined, v29, { value: v23 });
}
