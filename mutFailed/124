BigUint64Array.length;
const v6 = new BigUint64Array(6);
const v9 = new Uint32Array(28);
const v12 = new Map(3126);
-0.0;
const v20 = ("d")?.trim;
try { new v20(); } catch (e) {}
let v22 = -0.0;
v22--;
delete v6[0];
const o31 = {
    "maxByteLength": -59102,
};
const v33 = new ArrayBuffer(127, o31);
new Uint8ClampedArray(v33);
-1000000000000.0;
let v40 = 1976;
v40--;
Int16Array.BYTES_PER_ELEMENT = Int16Array;
try { ("a").includes(1.7976931348623157e+308); } catch (e) {}
const t20 = "valueOf";
t20[3] = "valueOf";
class C49 {
    #valueOf(a51, a52, a53, a54) {
        this.#valueOf();
    }
}
function f56(a57, a58, a59, a60) {
    const o65 = {
        [a59](a62, a63, a64) {
            switch (a57) {
                default:
                    break;
            }
        },
    };
    return a60;
}
try { new f56(v12, v9, v9, -4096n); } catch (e) {}
