5 - 5;
[gc,gc,gc,gc,gc];
new BigInt64Array(257);
Float32Array.BYTES_PER_ELEMENT = Float32Array;
function F14() {
    if (!new.target) { throw 'must be called with new'; }
}
function F16(a18) {
    if (!new.target) { throw 'must be called with new'; }
}
const v19 = new F16();
class C20 extends F14 {
}
class C21 {
}
const v22 = new C21();
function F23(a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    const v27 = [a26,a26,a26,a26,a26];
    class C28 {
        constructor(a30, a31, a32) {
            function f33(a34, a35, a36) {
                v27.copyWithin();
                let v39 = 0;
                for (let i = 0; i < 25; i++) {
                    try {
                        const o40 = {
                        };
                        o40.c = C20;
                    } catch(e41) {
                    }
                    try {
                        const o42 = {
                        };
                        o42.h = v19;
                        o42.f = v22;
                    } catch(e43) {
                    }
                    v39++;
                }
                try {
                    f33(a31, a32, [1]);
                } catch(e47) {
                }
                this >> -268435456;
                return -268435456;
            }
            f33();
        }
    }
    class C50 extends C28 {
    }
    new C50();
}
new Float32Array(5);
new Int16Array(2231);
("minor").valueOf();
class C61 {
    ["minor"] = 0.9009832213714677;
}
new C61();
(257).minor;
new Int16Array(1);
const v65 = [-1.7976931348623157e+308,-0.0,-1000000000000.0,18.192610755442843,-7.676824412389783,1000000000.0,-3.0];
const v66 = v65?.__defineSetter__;
try { new v66(Int16Array, 2064945428n); } catch (e) {}
new F14();
const v71 = new Int32Array(4096);
new Int8Array(v71);
const o74 = {
    __proto__: v65,
};
const v75 = o74?.filter;
try { new v75(2147483648n); } catch (e) {}
const v77 = o74.unshift();
v77 & v77;
try {
    Float64Array.__proto__ = Float64Array;
} catch(e80) {
    e80.stack;
}
16 * 16;
try { SharedArrayBuffer.apply(); } catch (e) {}
const v87 = new Set();
[Set,Set,v87];
function f89() {
    const v94 = [,];
    class C95 {
    }
    const o116 = {
        "c": v94,
        __proto__: "8Ih1",
        next() {
        },
        "a": "8Ih1",
        [8](a98, a99) {
            let v100 = a98 === 8;
            v100 ? a98 : 8;
            ({"a":a99,"b":v100,} = 8);
            return 536870912;
            const v106 = ("-1723624938").slice(536870912, "g").normalize();
            class C107 {
                constructor(a109, a110) {
                    a110.sup(v106, "-1723624938").toLocaleLowerCase();
                }
            }
            a99.e;
            a99.f;
            let {...v115} = a99;
            return v100;
        },
        4: 36478,
        "c": 8,
    };
    return o116;
}
f89();
const v118 = f89();
const o119 = {
    "construct": f89,
    "defineProperty": f89,
    "deleteProperty": f89,
    "getOwnPropertyDescriptor": f89,
    "getPrototypeOf": f89,
    "isExtensible": f89,
    "ownKeys": f89,
    "preventExtensions": f89,
    "set": v118,
    "setPrototypeOf": f89,
};
const t130 = 49151;
const v121 = new t130(217);
v121.b = v121;
v121.slice(v121, 16);
