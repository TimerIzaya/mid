const v0 = [3.0,-2.2250738585072014e-308,665274.1713963163,65.07593802288511,2.220446049250313e-16];
const v1 = [-864829.1968976554,-1e-15,-8.226518720658975,1e-15,3.0,5.681735720890575,-1000000.0,NaN,-1.0797100156080081e+308];
const v2 = [1.0,-1000000.0];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a5;
    } catch(e6) {
    }
    try {
        this.g = a5;
    } catch(e7) {
    }
}
new F3(v1);
const v9 = new F3(v2);
const v10 = new F3(v0);
function f11() {
    return v9;
}
class C15 extends F3 {
    o(a17, a18, a19) {
        v10[a17] %= 0.4810177007597979;
        return v9;
    }
    8 = F3;
    static set e(a21) {
        [65535,7,-2147483649,3,13,-9223372036854775807];
        [-128];
        [-4,-8,2147483649,-15200,1,302916083,-8,-11,-46192];
    }
    [v9] = v0;
    static a = 1000.0;
}
new BigInt64Array(-65536);
function f28(a29, a30) {
    const v32 = new Int8Array();
    const v35 = new Int32Array(3);
    v35["keys"](v32, ...v35, ..."keys");
    Math.pow(Math, f28);
}
new C15();
new C15();
new C15();
function f44() {
    function f45(a46, a47, a48, a49) {
        return a46;
    }
    f44 != f45;
    return f44;
}
%PrepareFunctionForOptimization(f44);
class C51 {
}
const v52 = new C51();
const v53 = new C51();
function F55(a57, a58, a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
    const v61 = this.constructor;
    try { new v61(0, F55, F55); } catch (e) {}
    const t60 = a59.constructor;
    new t60();
}
class C65 {
    b = C65;
}
new C65();
v52?.constructor;
new F55(v52, -14, v53);
