const v2 = new Uint8Array(-268435456);
const v5 = new Float32Array(12);
let v7;
try {
const t0 = 1;
v7 = t0();
} catch (e) {}
const v8 = v7 === 12;
typeof 12 === "object";
const v13 = new Uint32Array(1);
function f14() {
    return v5;
}
function F15(a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    if (v8) {
        f14 -= a17;
        v2[4];
    } else {
        function F21(a23, a24, a25) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.prototype = this;
            } catch(e26) {
            }
        }
        const v27 = new F21(F21, a17, this);
        new F21(v5, 1, a19);
        new F21(v27, 12, a18);
    }
    try {
        this.c = 12;
    } catch(e30) {
    }
    try {
        this.d = v13;
    } catch(e31) {
    }
}
new F15(12, 1, 12);
const v33 = new F15(12, 1, Float32Array);
new F15(1, -268435456, v33, "object");
class C36 extends Uint16Array {
}
