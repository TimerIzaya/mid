const v0 = [];
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        v0.d = v0;
    } catch(e3) {
    }
    try {
        this.c = v0;
    } catch(e4) {
    }
}
function f5(a6, a7) {
    return f5;
}
const o10 = {
    "type": "function",
};
const v11 = new Worker(f5, o10);
const v12 = o10.terminateAndWait();
const v13 = v11.terminateAndWait(v12, Worker, v12, v12);
new F1();
new F1();
new F1();
[31702,-3,56723,64];
[127,6,1024,1,-1083658694,9007199254740990,65535,2129512132,10];
[11,10,-4096,0,782196579];
new Uint32Array(16);
for (const v29 in v13) {
    this.escape(v29);
}
