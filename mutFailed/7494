function f6() {
    return -8354n;
}
const v10 = [-877195824n,-1228918456n,1073741825,2,10000n];
[v10,-8354n,v10,f6,-1228918456n];
const v12 = [f6,-1228918456n];
[-515617499,9007199254740990,1794867738,-2147483647,4,8];
[1073741824,1155028686,-4,1022797559];
class C15 {
}
const v16 = [];
const v17 = [];
new Map();
function F20(a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    const v24 = this.constructor;
    try { new v24(); } catch (e) {}
    const o27 = {
        0: v17,
        162: "1ya",
    };
}
const v28 = new F20();
Object.defineProperty(v12, "length", { configurable: true, enumerable: true, get: f6, set: f6 });
v16[257];
[268435440,1073741823,-48370,1470652399,-1558069178,-536870912];
[-5,-4294967297,-56786,54394,536870888,777310608,10065];
[-104971235,16614,53305,-556451781,-841651687,-15,9007199254740992];
const v34 = new Int32Array();
const v38 = new Uint8ClampedArray();
const v39 = new Int32Array(3208);
const t31 = v34.constructor;
new t31(v38);
Int32Array.from(v39);
const v43 = new F20(Map, Map);
new F20(v28, v43);
let v45 = 16;
v45--;
const v48 = new Int8Array(v45);
v48.toSorted();
