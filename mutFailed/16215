const v2 = [-2.220446049250313e-16];
class C3 {
    static [-2];
    constructor(a5, a6) {
        function f7() {
            function f9(a10) {
                a10 !== v2;
            }
            this.onmessage = f9;
        }
        const v15 = [];
        const o16 = {
            "arguments": v15,
            "type": "function",
        };
        new Worker(f7, o16);
    }
}
class C19 {
    valueOf(a21) {
        function f22() {
            return a21;
        }
        return a21[Symbol.unscopables];
    }
    1;
    static 268435440 = 4.961203888987029;
    static [4.961203888987029] = -4294967295;
    static #e;
}
new v2();
function f30(a31, a32, a33) {
    const o34 = {
        "h": a33,
    };
    return o34;
}
const v35 = f30(-3.9870582640049523, -3.9870582640049523, 1000000.0);
f30(1000000.0, -3.9870582640049523, 1000000.0);
f30(-3.9870582640049523, -2.2250738585072014e-308, -3.9870582640049523);
v35[127] = -3.9870582640049523;
new C19();
new C19();
~17125;
WeakSet.length;
new WeakSet();
("undefined").localeCompare("undefined");
C19.constructor;
[3.4890473589784586e+307 === Uint8Array];
-23156 % -23156;
-3;
const v60 = new Float64Array(Float64Array, Float64Array, Float64Array);
function f61() {
    v60.length = 0;
    return 0;
}
f61();
%OptimizeFunctionOnNextCall(f61);
const v64 = [286977509,536870889,-380982641,1073741825,-14496,-9223372036854775807];
const v65 = [64918,-21903,65536,-65537,-9007199254740991,268435440];
function f66(a67, a68, a69, a70) {
    const v71 = /(?:a*)+q(?<a>.)/guds;
    function f72(a73) {
        return a67;
    }
    f72.name;
    for (let [i96, i97] = (() => {
            function f75(a76, a77) {
                return ([a76,a76]).at(a76);
            }
            f75(f75, f75(f75, f75));
            0 >>> 0;
            v64.toLocaleString(f72);
            for (let v85 = 0; v85 < 5; v85++) {
                v65[a68];
                return arguments;
                class C88 {
                }
                const v91 = new Float32Array(6);
                v91.fill();
                v71["exec"]();
            }
            return [0, v2];
        })();
        (() => {
            i97--;
            const v99 = i96 < i97;
            !v99;
            return v99;
        })();
        (() => {
            i97--;
            const v105 = C19.toPrimitive;
            const o111 = {
                [v105]() {
                    let v107 = 1024;
                    const t5 = [-494407.199634183,0.6127672924664167,-85.60764064198793,1.4954577398132937e+308,-831252.5110682796,-2.2250738585072014e-308,0.6226417241742689,NaN,-3.0];
                    delete t5[v107 *= 15];
                    const v110 = ("-65535").constructor;
                    v110.caller = v110;
                },
            };
        })()) {
        for (let v114 = 0; v114 < 5; v114++) {
            v114 | v114;
        }
    }
    return a68;
}
for (let v116 = 0; v116 < 5; v116++) {
    f66();
}
%OptimizeFunctionOnNextCall(f66);
const v118 = f66(v64, v65, f66, v64);
try { v118.toSpliced(v118, v118); } catch (e) {}
