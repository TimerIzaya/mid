new Int8Array(497);
const v5 = new Float64Array(256);
const v8 = new Int16Array(Float64Array);
class C9 extends Int16Array {
    #f = v5;
    e = v5;
    constructor(a11, a12, a13, a14) {
        super(v8, a11, a14);
        try { a12(this, a14, a11, v5, v8); } catch (e) {}
        new Uint8ClampedArray(4096);
        function F20(a22, a23, a24, a25) {
            if (!new.target) { throw 'must be called with new'; }
        }
        let v26 = Float64Array;
        v26 = F20;
        F20 >> -256n;
        const v30 = new Uint32Array(9);
        new Int8Array(v30);
        new BigUint64Array(64);
        new Uint32Array(1);
    }
}
new C9(255, 256, 256, 255);
new C9(497, 255, 497, 256);
class C41 {
}
const t26 = [-2.0,256,"function"];
t26.toString = Symbol;
new C9(255, 497, 256, 255);
new Float64Array(257);
new Float64Array(256);
new Int16Array(12);
const v58 = [9007199254740992,-12,-65536,21712,-1,-65536,-152029754,536,-4,1193126662];
const o59 = {
    [v58]: undefined,
};
