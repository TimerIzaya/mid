class C3 {
    constructor(a5) {
        function F7(a9, a10, a11) {
            if (!new.target) { throw 'must be called with new'; }
            a9 >> a9;
            a10?.__defineSetter__;
            const v14 = a10 === a10;
            v14 ** v14;
        }
        class C16 {
        }
        const v17 = new C16();
        for (let v18 = 0; v18 < 5; v18++) {
            new F7(F7, v17, v18);
        }
        const o21 = {
            "maxByteLength": 1043,
        };
        const v23 = new SharedArrayBuffer(1043, o21);
        new Int32Array(v23);
    }
    c = -5.758441300358994;
    g;
    static f = -5.758441300358994;
    a;
}
const v26 = new C3(9007199254740991);
const v27 = new C3(-1.0);
const v28 = new C3(-5.758441300358994);
const v30 = ("boolean").normalize();
new Uint8Array(127);
const v34 = [268435456,-1496765071];
const v35 = [1,1073741823,536870887,11766,-23568,-2,9007199254740991];
const v36 = [-8,-2147483647,-1579620778,43832,-1024,9,-4294967295];
function f37(a38, a39, a40, a41) {
    const o52 = {
        get a() {
            Math.cos(a40);
            !(~a40);
            Math.sign(a38);
            return a40 | !-6;
        },
        ...a38,
        ...a38,
        "d": a40,
    };
    return o52;
}
f37(v36, v27, v26, v35);
const v54 = f37(v35, v27, v26, v34);
const v55 = f37(v35, v28, v28, v36);
class C56 extends f37 {
    n(a58, a59) {
        function F60(a62, a63, a64, a65) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.a = v27;
            } catch(e66) {
            }
            try {
                this.h = C3;
            } catch(e67) {
            }
            try {
                this.e = a59;
            } catch(e68) {
            }
        }
        new F60(9007199254740991, v55, v55, v36);
        const v70 = new F60(f37, v55, v54, v34);
        new Uint8ClampedArray(127);
        return v30;
        const v74 = [-13939,-12,1904189168];
        const o75 = {
        };
        function f76(a77, a78) {
            v74[11] = o75;
            return o75;
        }
        f76(o75, v74);
        f76();
        const v81 = new F60(v70, v55, this, v36);
        return v81;
    }
}
new C56();
new C56();
new C56();
const v85 = /(J5a{0,1}?)/y;
class C86 {
    static {
        for (let v88 = 0; v88 < 25; v88++) {
            const v89 = [601759695];
            const v90 = [1073741824,1073741823,1376142744,1073741825];
            function f91(a92, a93, a94, a95) {
                ~a93;
                try { a92(); } catch (e) {}
                const v98 = a94 << a94;
                ("65535").lastIndexOf(128, 65536);
                C86.e = C86;
                v98 % v98;
                function f104() {
                    return a92;
                }
                const v106 = new Int8Array();
                BigUint64Array.length;
                const v110 = BigUint64Array * 536870887;
                let v111 = v110 - v110;
                v111++;
                const v113 = v110 ** v110;
                try { Number(v85); } catch (e) {}
                Number.isNaN(v113);
                const v118 = v106.buffer.__defineGetter__;
                try { v118(); } catch (e) {}
                %OptimizeFunctionOnNextCall(f104);
                let v121;
                try { v121 = v90["find"](..."find", a95, ...v89); } catch (e) {}
                return v121;
            }
            for (let v122 = 0; v122 < 5; v122++) {
                f91(this, v122);
            }
        }
    }
}
