let v2 = 2147483647;
class C3 {
    #m(a5) {
        function f6(a7) {
            let v12 = Math.cbrt(3142);
            v2 || v2;
            const v14 = v2++;
            const v15 = v2 ^ 174620697;
            return v2;
            Math[3] = Math;
            function F16(a18, a19, a20, a21) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.a = "127";
                } catch(e22) {
                }
            }
            const v23 = new F16(-571272648, f6, a5, v14);
            new F16(v15, v2, v15, v12);
            new F16(-571272648, v23, v12, v23);
            Math.cos(174620697);
            174620697 / v14;
            ++v12;
            return a5;
        }
        return f6(this);
    }
}
const v30 = new C3();
const v31 = new C3();
const v32 = new C3();
class C36 extends C3 {
    #m(a38, a39, a40) {
        function f41() {
            return v31;
        }
        return -3.0;
    }
    #p(a43, a44, a45) {
        if (0.0) {
            super[-571272648] = a45;
        } else {
            try {
                new C3();
            } catch(e47) {
            }
        }
        return -3.0;
    }
}
const t50 = -3.0;
const v48 = new t50();
const v49 = new C36();
const v50 = new C36();
function f51(a52, a53, a54) {
    const o61 = {
        get b() {
            let v56;
            try { v56 = a54(); } catch (e) {}
            try {
                v56.c = a53;
            } catch(e57) {
            }
            [7.698748930001862,143.33042163158643,-2.0,2.220446049250313e-16,-1.1171990012546417e+308,3.0,-0.6723501558385756,-2.220446049250313e-16,1.0];
            [-6.66035386768273e+307,-1.081584176448145e+308,-0.0,1000.0];
            [299532.25416258094,0.9653921500446361,0.041349553843791687,0.14118631059690745,-5.0,1000000.0];
            return v32;
        },
        "f": a54,
        "c": v49,
        ...a54,
        __proto__: v48,
    };
    return o61;
}
f51(0.0, v2, v50);
f51(0.0, -1.0, v50);
f51(v2, v30, v32);
function f65(a66, a67, a68, a69) {
    const o74 = {
        p(a72, a73) {
        },
        10: -1.0,
    };
    for (const v76 in "1024") {
    }
}
for (let v77 = 0; v77 < 5; v77++) {
    v77();
}
%OptimizeFunctionOnNextCall(f65);
f65();
