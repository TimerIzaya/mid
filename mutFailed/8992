let v4 = BigInt64Array;
let v5;
try { v5 = new v4(-2.2250738585072014e-308, 2895, v4); } catch (e) {}
const v6 = new v4(2895);
let v8 = 1073741824;
const v11 = 51531 * 51531;
Math.log2(51531);
-2.2250738585072014e-308 + v11;
const v14 = --v8;
v14 / Infinity;
v6[1880];
class C18 {
    408;
    #b;
}
new C18();
new C18();
new C18();
new Int8Array(64);
new BigUint64Array(8);
function f27() {
    return f27;
}
try {
    v4 &= v4;
} finally {
    new v14(3);
    new Uint32Array(9);
    const v37 = [-1000000000.0,1000000.0,1000000000000.0,-2.220446049250313e-16,386061.05926601076,5.0,1.5127877009765018e+308,-2.220446049250313e-16];
    [562568.235261441,535651.2050754391,5.0,5.189894474667007,0.3854805183883444,-2.6871736558927857e+306,-3.0,2.220446049250313e-16,-3.0];
    [1e-15,-1.8907225965298858e+307,-3.0,1000000000.0,4.0];
    v37 ^ v5;
    const o44 = {
        "execution": "sync",
        "type": "major",
    };
    gc(o44);
    new Float64Array(512);
}
!(v8 <= 8n);
