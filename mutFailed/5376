function f0() {
}
function f3() {
    return f3;
}
class C4 extends f3 {
}
const v6 = [31350];
const v7 = [27124,2147483649,9007199254740991];
[1,8,14,2,1144709,5,190059710,-60693,7];
const v9 = /(?:a+){0,0}u(?:a+)+a\s(a\1)abc+?/gvdm;
const v11 = ("symbol")[0].substring();
v11 == v11;
let v13 = 0;
const v14 = v13--;
const v15 = v13++;
function f16() {
    return v15;
}
const v18 = new Int8Array(v13, v13, v14);
v18.buffer.slice(f16, v15);
const v21 = /[\xe2\x81\xa3]a{1,2}?/gims;
v21.unicode;
/(?:ab){4,7}/guims;
function f24(a25, a26, a27) {
    const v28 = a25?.constructor;
    try { new v28(a27, v7); } catch (e) {}
    a26[2] = a26;
    new Int8Array(BigUint64Array);
    ([-5,2147483649,-4294967295,1,8,-4331,52354,15231])["object"]();
    try { a27.includes(v7); } catch (e) {}
    const o81 = {
        __proto__: v7,
        get b() {
            const v37 = v9 ** a26;
            try {
                const v40 = new Map();
                function f41(a42, a43) {
                    const o53 = {
                        "a": a43,
                        [a42]: v40,
                        [v40]: Map,
                        ...v40,
                        "b": a42,
                        [a43]: Map,
                        "h": a42,
                        146: v40,
                        valueOf(a45) {
                            this || this;
                            this.__proto__;
                            new Map(this);
                            function F49() {
                                if (!new.target) { throw 'must be called with new'; }
                                this.d = 2;
                            }
                            class C52 {
                            }
                            return this;
                        },
                    };
                    return o53;
                }
                const v54 = f41(v40, f41);
                const v56 = f41(f41(v54, Map), v54);
                [v56,Map,v56,f41,v56];
                class C58 {
                }
                C58.toString;
                Symbol.iterator;
                [[Map,v54,v54],Map,v54,v40,Map];
                const v65 = [9007199254740992,-12,-65536,21712,-1,-65536,-152029754,536,-4,1193126662];
                const o66 = {
                    [v65]: undefined,
                };
                new WeakSet();
                /(xyz??Vbp)/gudiy;
                /(x)(x)(x)\29a/imy;
                /Ev/dimy;
                for (let v72 = 0; v72 < 79; v72++) {
                    for (let v73 = 0; v73 < 100; v73++) {
                        f41(v72, v72);
                    }
                    v56[512] = v72;
                    [-0.0,1000000000000.0,737115.9869501861,NaN];
                    [0.7909963851033462,-1000.0,0.6110844995665646,-0.0,-5.022618029066237,-113.75300559900211];
                    [0.17979151957751893,-2.0,1000000000.0,1.0,-2.220446049250313e-16,-2.220446049250313e-16,1000000000000.0];
                }
                v7.unshift(a26, v9, true, [true,"symbol",a26,"object",v37]);
            } catch(e80) {
            }
            return v21;
        },
        [v6]: "object",
    };
    return o81;
}
const v82 = f24(v9, v7, "object");
const v83 = f24(v9, v21, "object");
const v84 = f24(v21, v83, "object");
try { v84.concat(v83); } catch (e) {}
const v88 = new BigInt64Array(205);
const v91 = new Uint16Array(256);
try {
    function f92() {
        function f93() {
            return f93;
        }
        const o96 = {
            set b(a95) {
            },
            __proto__: f93,
        };
        return v83;
    }
    const v97 = `
    `;
    v83.fuck("d", "d", "d", "d");
} catch(e100) {
}
const v101 = v88[205];
const v105 = new Float64Array(255);
v105[3] = v105;
function F106(a108, a109, a110, a111) {
    if (!new.target) { throw 'must be called with new'; }
    -a109;
    -a110;
    a109 >> a109;
    a111 | a111;
    v105.b = a109;
    for (let v116 of v91) {
        v116++;
        v101?.h;
    }
}
new F106(255, 205, 255);
const v120 = new F106(255, 256, 255);
const v121 = new F106(255, 205, 256, 255);
const v122 = v121?.constructor;
try { new v122(f3, v82, v82, v82); } catch (e) {}
const v124 = [-1000000000.0,5.0,872297.1015869486,-1e-15,0.2087529151028652];
try { v124.groupToMap(v83); } catch (e) {}
const v126 = /(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/u;
const v127 = [Infinity];
class C128 {
    set b(a130) {
        gc();
    }
}
const v133 = new C128();
const v134 = v133?.constructor;
const v138 = [295968041,[-1024,536870889,65536,65536]];
const o139 = {
    "arguments": v138,
    "type": "function",
};
try { new v134(); } catch (e) {}
const v141 = [2.2250738585072014e-308,1.949684848262672,4.0];
const v142 = v141.push(v126);
const v143 = [342.12300421344116,0.3998304334347528,-1.5569468467414895e+308,929110.7069466491,0.8403359879371063,928.8415619105033,5.0];
v143[2];
const v145 = v143.toStringTag;
let v146;
try { v146 = v127.every(v145, v120); } catch (e) {}
const v147 = new F106(v145, v146, v146, v142);
const v148 = v147.constructor;
const v149 = v148?.constructor;
try { new v149(v148); } catch (e) {}
const v151 = new v148(-9007199254740991, v124, v141);
const v152 = v151?.constructor;
try { new v152(-9007199254740991, v120, -9007199254740991, f3); } catch (e) {}
class C154 {
}
const v155 = C154.toString;
v155.length;
try { v155(); } catch (e) {}
