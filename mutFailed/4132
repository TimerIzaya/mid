const v0 = [0.7189845015324021,2.2250738585072014e-308];
const v1 = [-709866.6829841128,1.5224746864488951e+308,1.3581840744066652e+308,-793.5766029252194,6.411967747193007];
const v2 = [-1000000000000.0,864644.7402889219,5.0,9.879233968735217e+307,9.377784838474618e+307,9.598729979222313,-4.9512613333761895,-2.220446049250313e-16,-4.386794862491636];
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a6;
    } catch(e7) {
    }
}
const v8 = new F3(v2, v0);
new F3(v1, v0);
const v10 = new F3(v1, v0);
[F3,v1,v10,[v2,v2,v1,v10]];
const v13 = [v8];
function f23(a24) {
    a24 >> a24;
    const o33 = {
        [12298n](a27) {
            const v28 = delete this?.e;
            v28 instanceof v28;
            v28[this] = 2025423814n;
            return this;
        },
        __proto__: 2025423814n,
        ...a24,
        "a": 12298n,
        "b": 2025423814n,
        "f": 2025423814n,
        ...v0,
    };
    return o33;
}
try { f23(12298n); } catch (e) {}
const v35 = f23(-22903n, v0, v13, v8);
v35[12298] = v35;
const v36 = f23(12298n);
v36[12298];
const v38 = [];
function f39() {
    const v40 = -v38;
    v40 << v40;
    const v42 = v40 && v38;
    -v42;
    return v42;
}
f39.caller = f39;
const v44 = f39();
new Uint8Array(2, 2, 2);
const v51 = Symbol.toPrimitive.description;
Symbol.for(v51);
function f53(a54, a55, a56, a57) {
    a55 * a55;
    const o62 = {
        "b": a54,
        "c": a57,
        n(a60, a61) {
        },
    };
}
f53.prototype = f53;
-2.2250738585072014e-308 == -2.2250738585072014e-308;
const v67 = [1613217357,204598905,15977,1122227661,64,-2,-12,536870888];
const v68 = [12,-256,-4096,2,7,8,21956,46111,11,10];
try { v68.reduce(-22903n); } catch (e) {}
const v70 = [-1073741824,1665564361,16526,1805211777,10,-9007199254740990,4,-17063,-1];
const v71 = [-2.2250738585072014e-308,0.8014728140665155,1.4073101706157717e+308,1.4751052216559766e+308,2.0,-692.9604671107461,-2.220446049250313e-16,2.0];
try { v71.copyWithin(v44, v44); } catch (e) {}
const v73 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
try { v73.with(v73, v73); } catch (e) {}
const v75 = [-1.015259194643325e+308,-Infinity,-9.825391401141273,-2.2250738585072014e-308,5.0,-2.2250738585072014e-308];
class C76 {
    constructor(a78, a79, a80, a81) {
        a78[7] = a78;
        a79--;
        const v83 = this?.constructor;
        try { new v83(v73, a80, a80, v83); } catch (e) {}
        a79 >>> a79;
        -0.0 >>> -0.0;
    }
    /*
    constructor(a91, a92, a93, a94) {
        const o100 = {
            "maxByteLength": 2240,
        };
        const v102 = new ArrayBuffer(2240, a92);
        new Uint8ClampedArray(v102);
        this[268435456];
        v71 && this;
        try {
            v71.length = v75;
        } catch(e107) {
        }
    }
    */
    static 268435439 = v70;
    #c = -2.2250738585072014e-308;
    static 832209355 = 2.220446049250313e-16;
}
C76[832209355] = C76;
function f108(a109) {
    new Float64Array();
    return -2.2250738585072014e-308;
}
C76.valueOf = f108;
const v112 = new C76(v67, 659.0540372978887, v67, v67);
const v113 = new v51(v112, 2.220446049250313e-16, v71, v75);
const v114 = v113?.constructor;
try { new v114(v71, 2.220446049250313e-16, 2.220446049250313e-16, v113); } catch (e) {}
new C76(v113, v113, 659.0540372978887, v67);
try {
    v68.length = C76;
} catch(e117) {
}
const v118 = new v68(v71, 2.220446049250313e-16, v70, v75);
v118.length = v118;
function f119() {
    return f119;
}
f119.arguments = f119;
function F120() {
    if (!new.target) { throw 'must be called with new'; }
    const v122 = this?.__lookupGetter__;
    try { new v122(this); } catch (e) {}
}
new F120();
const v125 = new F120();
v125.b = v125;
const v126 = new F120();
function f129() {
}
try { new f129(); } catch (e) {}
const v131 = [16,1073741824];
const v132 = [f119,Symbol];
v132[0] = v132;
[v131,v125];
f119();
for (let v135 = 0; v135 < 5; v135++) {
    f129();
}
try { v126.n(); } catch (e) {}
for (let v138 = 0; v138 < 5; v138++) {
}
for (let v139 = 0; v139 < 625; v139++) {
    f53(Uint8Array, 2);
}
%OptimizeFunctionOnNextCall(f39);
f39();
const v142 = f23(-22903n);
const v144 = new WeakSet();
function f145(a146, a147) {
    const o150 = {
        1073741823: 2025423814n,
        1: a146,
        get h() {
            try {
                this.toString = f23;
            } catch(e149) {
            }
            return 12298n;
        },
        "b": a147,
        "f": 12298n,
        "e": -22903n,
        "g": 12298n,
    };
    return o150;
}
f145(v36, v142);
f145(v142, v36);
const v153 = f145(v142, v142);
function F154(a156, a157, a158, a159) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v35;
    } catch(e160) {
    }
}
const v161 = new F154(-22903n, v144, v144, v144);
new F154(2025423814n, v35, v35, v161);
new F154(-22903n, v35, v36, v153);
const v166 = new Int32Array(2);
v166.toSorted();
