function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 234964745;
    } catch(e3) {
    }
}
const v4 = new F0();
function f5() {
    for (let [i13, i14] = (() => {
            const v9 = new Uint32Array(0, 0, 10);
            const t1 = v9.constructor;
            const v11 = new t1();
            v11.reverse();
            return [0, 10];
        })();
        i13 < i14;
        i14--) {
    }
    return F0;
}
v4.toString = f5;
const v21 = new F0();
const v22 = new F0();
class C23 {
    static [v4];
    constructor(a25, a26) {
        v21[Symbol.hasInstance] = v21;
    }
    4294967296;
    static #h;
}
new C23(v22, v4);
new C23(F0, v22);
new C23(v21, v22);
[268435456,-30799,-63825,31228,-63153,-1078731511,-13,9007199254740991];
[13,268435439,23987,-608980239,-57707];
[268435441,257];
class C40 {
    constructor(a42) {
        this.c = a42;
        for (const v43 of "bigint") {
            this.c = v43;
        }
    }
    h = undefined;
}
new C40();
new C40();
const v46 = new C40();
[];
class C48 extends C40 {
}
new C48();
const o51 = {
};
Object.defineProperty(o51, "get", { writable: true, configurable: true, value: f5 });
const v53 = new Proxy(v46, o51);
v53.h **= 588663.7778410686;
