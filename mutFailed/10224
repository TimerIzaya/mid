class C3 {
    #f;
    get a() {
        try {
            this.b = -4096;
        } catch(e5) {
        }
        this[5] |= -4096;
        return this;
    }
    10 = "matchAll";
    [-4096] = "matchAll";
    static g;
    2 = "matchAll";
}
let v6;
try { v6 = new C3(); } catch (e) {}
new C3();
const v8 = new C3();
v8[10] = v8;
const v9 = new C3();
class C10 extends C3 {
    static 134;
    [-4096] = "p";
    d;
    static {
        try { new this(); } catch (e) {}
        try {
            ("p").startsWith("p", -4096);
        } catch(e14) {
        }
    }
    static ["matchAll"];
    static 2 = "p";
    #e = "p";
    static #g = v8;
}
C10[134] = C10;
const v15 = new C10();
v15[10] = v15;
new C10();
new C10();
[13,536870887,-15];
const v20 = ([9007199254740991,-9223372036854775808,-4294967295,-47739,-2147483647,-9007199254740992,10000])[4];
[-1,268435440];
try { v9["cos"](v6, v8, "matchAll", v20); } catch (e) {}
const o26 = {
    "maxByteLength": 129,
};
const v28 = new SharedArrayBuffer(129, o26);
new Int16Array(v28);
Uint32Array.name;
const v33 = new Uint32Array(Uint32Array);
new Int16Array(v33);
