const v0 = [];
class C1 {
    static toString() {
        try {
            super.m(v0, this, this, this);
        } catch(e4) {
        }
        const v5 = this[4294967295];
        try {
            this.length = 9;
        } catch(e7) {
        }
        return v5;
    }
    a;
    [v0] = v0;
}
new C1();
new C1();
const v10 = new C1();
new Int8Array(127);
new Float32Array(222);
new Uint16Array(9);
const v20 = [0.8758837218068123,-422659.698364628,-2.0,-4.194649417210787,-458.65053797119333,-351.74709265633396,1e-15,-1.7976931348623157e+308,1.4277064164988055e+308,0.29377925131953664];
[5.0,4.0,1.1471314956962098e+308,-762.4275915761169,1e-15,2.0,407.9013765618738,-1.0,1000000000000.0];
[440794.56066713086,27540.588367644697,1000000.0,-1000000000.0];
class C24 {
    #m(a26, a27) {
        function f28() {
            return a27;
        }
        super[a27] = "f";
        %VerifyType(a27);
        return f28;
    }
    static c;
}
new C24();
const v30 = new C24();
const v31 = new C24();
class C32 {
    p(a34) {
        this.g ^= v10[8];
    }
    static #n(a37, a38, a39, a40) {
        class C41 {
            4;
            static a;
        }
        Uint16Array();
        C41();
        C41();
    }
    7 = v31;
    #a = v30;
}
new C32();
new C32();
new v30();
[v31];
[v20];
function F50() {
    if (!new.target) { throw 'must be called with new'; }
}
new F50();
const v53 = new C1();
const v54 = new Float32Array();
function F55(a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    const v59 = a58?.__lookupGetter__;
    try { v59(a57); } catch (e) {}
    try { this.constructor(F55, this); } catch (e) {}
    a57.e = a57;
}
F55.arguments = F50;
const v62 = new F55(v54);
const v63 = new F55(v62, v53);
v63.e = v63;
("Hyo9")[1];
v31[1] = "at";
const v69 = ([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap?.constructor;
try { v69("Hyo9"); } catch (e) {}
[-4.202468609045087];
const v72 = [0.8434386161503777];
try { v72.findLastIndex(v72); } catch (e) {}
const t85 = "4i";
t85[1] = "4i";
const t87 = "RpXR";
t87[1] = "RpXR";
("c")?.toLocaleUpperCase;
class C79 {
    constructor(a81) {
        ("valueOf").localeCompare(this, "valueOf");
    }
}
const v83 = new C79();
const t96 = v83.constructor;
new t96(C79);
