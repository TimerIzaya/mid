new Float64Array(196);
const v5 = new Uint16Array(2736);
let v6 = 0;
class C9 {
    #b = v6;
    constructor(a11, a12, a13) {
        try {
            a12.#a;
        } catch(e15) {
        }
    }
    g = 1.1408591040999836e+308;
    536870887;
    #n(a17) {
        a17 = this;
        a17.e >>>= 2736;
        const o21 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o21);
        return this;
    }
    static {
        const v27 = v6++;
        ~v6;
        Math.log10(44149);
        44149 + v6;
        Math.fround(v27);
    }
}
C9.g = C9;
const v32 = new C9();
new C9();
-Infinity;
C9.g ^= -1e-15;
const o42 = {
    "execution": "async",
    "type": "major",
};
gc(o42);
const t40 = "major";
t40[108] /= -1e-15;
try { v5.join(196); } catch (e) {}
[1024,1024];
function F49() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = 268435440;
}
new BigInt64Array(16);
[-1.7976931348623157e+308,-0.0];
[3.0,-948618.7041720031,524.266947641561,2.7111284317942346,4.0];
[-1.8827616679637565e+306,1.2650057479050138e+308,-5.0,2.220446049250313e-16,-3.064220282721024];
function F56() {
    if (!new.target) { throw 'must be called with new'; }
}
new F56();
const v59 = new F56();
try { v59.isPrototypeOf(v59); } catch (e) {}
const v61 = new F56();
const v62 = v61?.constructor;
try { new v62(); } catch (e) {}
const v64 = [v59];
const v65 = [v61,v59,v61,v61];
[v59,F56,v65,v65,v64];
[-6];
[15,1000,456510946,268435439,-4096,-1621925631,-536870912,4294967295,127,768050783];
[-30837,-2147483647,11,14];
const v72 = new Uint32Array(1000);
Array(36862);
new Int16Array();
v72[838] = v72;
const v80 = new BigUint64Array(154);
try { v80.forEach(v80); } catch (e) {}
134 % 134;
Uint8Array.d = v32;
Uint8Array.g = Uint8Array;
new Uint8Array(134);
const v86 = delete v64?.length;
v86 || v86;
try { v86["cbrt"](v72, Uint32Array, v59, v61, v86); } catch (e) {}
const o90 = {
};
try { new Proxy(v72, v72); } catch (e) {}
const v93 = new Proxy(Uint8Array, o90);
v93.d = v93;
for (let v94 = 0; v94 < 5; v94++) {
    v94 * v94;
}
