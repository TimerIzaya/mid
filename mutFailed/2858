function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 255;
    } catch(e3) {
    }
}
let v7 = -6.336273045214518e+306;
v7++;
function F9(a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    a12 === a12;
    const v15 = this.prototype;
    try { new v15(a11, a11, this); } catch (e) {}
    a11 * a11;
    try {
        this.e = a13;
    } catch(e18) {
    }
    try {
        function f20() {
            ("D")[0].substring(129);
            return "D";
        }
        this.h = v7;
    } catch(e24) {
    }
    try {
        this.g = -1.7976931348623157e+308;
    } catch(e25) {
    }
}
new F9(268435439n, 268435439n, -9n);
const v29 = new Uint16Array(64);
function f30() {
    class C33 {
    }
    let v34;
    try { v34 = new C33(12); } catch (e) {}
    const v35 = new C33(-4294967296);
    const v36 = [v35,C33];
    try { v36.map(v29); } catch (e) {}
    const v38 = [v35];
    for (let i40 = 0; i40 - i40, i40 < 2; i40++) {
        new F9(undefined, v34, undefined);
    }
    class C49 extends C33 {
    }
    const v50 = new C49();
    class C52 extends v38.constructor {
    }
    try { v50.m(); } catch (e) {}
    return C33;
}
try {
} catch(e54) {
}
/(?!(a))\1*/vmy.compile(/k/gdsy);
%PrepareFunctionForOptimization(f30);
f30();
%OptimizeFunctionOnNextCall(f30);
f30();
const v60 = new F0();
const v61 = new F0();
let v62 = new F0();
class C66 {
    #h;
    static #a = F0;
    set c(a68) {
        try {
            v61.#a *= this;
        } catch(e69) {
        }
    }
    static #b = 1000n;
    e = 13n;
    static valueOf(a71, a72, a73) {
        const v74 = this.f;
        try { v60["isView"](v61, "isView", "isView", v74, v62); } catch (e) {}
        v62 = v74;
        return 268435440n;
    }
}
new C66();
new C66();
new C66();
const v81 = new Set(268435440n);
function f82() {
    return v81;
}
new Float64Array(1);
new BigInt64Array(245, v61, -1.7976931348623157e+308);
new Float64Array(3);
function f92() {
    const o98 = {
        0: 549538.9552070533,
        [-6.170254254244802e+307](a96, a97) {
        },
    };
    return o98;
}
const v99 = f92();
const v100 = f92();
function F103(a105, a106, a107, a108) {
    if (!new.target) { throw 'must be called with new'; }
    a105[0];
    const v110 = this?.constructor;
    try { v110.call(v100); } catch (e) {}
    try { new v110(a105, a107, a106, a105); } catch (e) {}
    a105[0] = a105;
    a108[0] = a108;
    this.EPSILON = a105;
    this.f = v100;
}
new F103(v100, v99, -61894, v99);
new F103(v100, v99, 31995, 31995);
