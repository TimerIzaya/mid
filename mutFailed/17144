const t0 = 9223372036854775807n;
t0[3] ^= 1073741824;
class C13 {
    constructor(a15, a16, a17) {
        a16 === a16;
        new a15();
    }
    set d(a22) {
        let v23;
        try { v23 = new a22(this); } catch (e) {}
        try {
            v23.h = 9223372036854775807n;
        } catch(e25) {
        }
    }
}
try { C13(-4294967297, 1073741824, 2147483647); } catch (e) {}
const v27 = new C13(1073741824, 1073741824, -4294967297);
const v28 = new C13(2147483647, -4294967297, 1073741824);
const v29 = v28?.constructor;
try { new v29(v27, v28, 1073741824); } catch (e) {}
const v31 = new C13(1073741824, 2147483647, 1073741824);
const o32 = {
};
try {
    o32.d = null;
} catch(e33) {
}
try {
    const o34 = {
    };
    o34.d = null;
    o34.c = 510346.13544560526;
} catch(e35) {
}
try {
    const o36 = {
    };
    o36.d = null;
    o36.c = 510346.13544560526;
    o36.h = -2n;
} catch(e37) {
}
try {
    const o38 = {
    };
    o38.d = null;
    o38.c = 510346.13544560526;
    o38.a = v31;
} catch(e39) {
}
for (let v40 = 0; v40 < 25; v40++) {
    const v41 = [601759695];
    try { v41.entries(); } catch (e) {}
    const v43 = [1073741824,1073741823,1376142744,1073741825];
    function f44(a45, a46, a47, a48) {
        Int8Array.prototype;
        const v51 = new Int8Array();
        v51.buffer.slice(a45, v40);
        -30756n << -30756n;
        try { new Date(v27, v27, a46, v40, v40, a46, v40); } catch (e) {}
        const v58 = new Date(a47);
        try { v58.setMilliseconds(-30756n); } catch (e) {}
        try { v43["find"](..."find", a48, ...9223372036854775807n, ...v43); } catch (e) {}
        return v31;
    }
    for (let v62 = 0; v62 < 5; v62++) {
        f44();
    }
}
