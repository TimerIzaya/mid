new Int8Array(2);
new Uint8Array(920);
new Float64Array(253);
[-960.7381643354993];
[-671.3090150871242,-1.0];
const v20 = [0.9173781206367507,5.233957886943719e+307,0.12662165959368632,-921947.547929243,743.1321381303028,2.220446049250313e-16,2.2250738585072014e-308];
v20[7] = "bigint";
try { v20.push(v20); } catch (e) {}
try { ("p").lastIndexOf(2); } catch (e) {}
const v26 = ("V9t")?.isPrototypeOf;
v26.prototype = v26;
let v27;
try { v27 = new v26("toString"); } catch (e) {}
"a" == "a";
class C32 extends Int32Array {
}
try { new v27(); } catch (e) {}
const v34 = new C32();
Reflect.construct(Uint8Array, [v34,v34], C32);
[0.18372866515424147,461665.2775589656,2.6563672835372962,2.0,-Infinity,1e-15,273866.66349880304];
const v39 = [0.1647584749770924,0.0,281189.4702332646,-640144.185384929,-9.96248851328583,-1000000000000.0,NaN,-9.185127476558462e+307,-588.058716110192];
try { v39.group(Int32Array); } catch (e) {}
[8.063065675598975e+307];
const v43 = 51086 >>> 51086;
~-65536;
const v47 = [5,-1726645307,3,-22869,28097];
try { v47.map(64n); } catch (e) {}
[-128,738741997,61681,1,-536870912,255,512];
[1326394077,3,-4096,-6,58642,8];
const v54 = [-20857,-1303616328,-1864740753,-1023402966,129,-20506,7,8229,-53914];
v54[536870912] = Reflect;
v54[7];
v54[536870912] = v54;
127 >>> 127;
127 * 127;
const v60 = new Uint8Array(127);
v60[13] = v60;
const o64 = {
    toString(a62, a63) {
    },
};
let v65 = undefined;
const o68 = {
    set b(a67) {
    },
};
function f69() {
    return Uint8Array;
}
function f70(a71) {
    a71 = 892738.329846452;
}
Object.defineProperty(o68, "f", { get: f69, set: f70 });
o68.b;
o68.f = v43;
v65 = o68;
o68.f = o68;
v26.prototype = Uint8Array;
const v75 = new Uint8Array(165);
v75[Symbol.toPrimitive] = f69;
v75[113] = v75;
function F78() {
    if (!new.target) { throw 'must be called with new'; }
    const v80 = [-5.0,-4.0,-1.7976931348623157e+308,-897.6003446951657,-1000000.0,1.8928166106024224e+306,-2.0,-1000000000000.0];
    function F81(a83, a84, a85, a86) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v87 = new F81(v80, F78, v80, F81);
    const v89 = [F78,F78,F78,F78];
    Reflect.apply(v80.indexOf, v87, v89);
}
try { new F78(); } catch (e) {}
function F93() {
    if (!new.target) { throw 'must be called with new'; }
    function F95() {
        if (!new.target) { throw 'must be called with new'; }
    }
    F95.arguments = F95;
}
const v97 = new F93();
v97.constructor = f70;
const v98 = v97?.constructor;
try { new v98(); } catch (e) {}
function f100(a101, a102) {
    const o110 = {
        n(a104, a105) {
            class C106 {
            }
            const v107 = [-1.7976931348623157e+308,1000000.0,-Infinity,1000000.0,1e-15,4.0,0.05361702581874339,2.220446049250313e-16,-384803.16239734297];
            Int16Array.BYTES_PER_ELEMENT = Int16Array;
            new Int16Array(v107);
        },
        "a": v26,
    };
    for (let v111 = 0; v111 < 100; v111++) {
        Math.random();
    }
    return o110;
}
4294967296 != 4294967296;
const v117 = new Uint16Array(257);
const v118 = v117?.constructor;
try { new v118(2, 920, C32); } catch (e) {}
%PrepareFunctionForOptimization(f100);
f100().n();
%OptimizeFunctionOnNextCall(v27);
const v123 = f100()?.toLocaleString;
try { new v123(); } catch (e) {}
