function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.e = this;
    try {
        this.e = -24714;
    } catch(e3) {
    }
}
new F0();
new F0();
const v6 = new F0();
v6.e = v6;
64 | 64;
new Uint8Array(64);
new Int16Array(2);
BigUint64Array.length = BigUint64Array;
const v16 = new BigUint64Array(9);
try { v16.reverse(); } catch (e) {}
function f18() {
}
const o19 = {
};
function F20(a22, a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    this.length = 2;
    const v28 = [1354185297,-1187772013,1073741823,7,-13,8,-473031863,-1332151602];
    Object.defineProperty(v28, "defineProperty", { writable: true, value: F0 });
    for (let v29 = 0; v29 < 500; v29++) {
        v29++;
        const o35 = {
            [v28](a32, a33, a34) {
            },
            ...v29,
        };
    }
    const v36 = 2105444095n / 2105444095n;
    v36 << v36;
    for (let v38 = 0; v38 < 100; v38++) {
        Array(1000).indexOf();
        const v44 = new Float64Array();
        function F45(a47, a48) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = a47;
            } catch(e49) {
                for (let [v50,v51] of a47) {
                }
            }
            try {
                const v52 = v44[this];
                const v53 = [];
                new Float32Array(7);
                v53[1];
                new F45(v52, -268435456n);
            } catch(e60) {
            }
        }
        v38 + v38;
        v38 >>> v38;
        function F63() {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v65 = new F63();
        const v66 = v65?.constructor;
        try { new v66(); } catch (e) {}
        const o69 = {
            6: undefined,
            "d": undefined,
            [268435439n]: 2105444095n,
            __proto__: o19,
            "g": a24,
        };
    }
    const o72 = {
        "getOwnPropertyDescriptor": f18,
        __proto__: v28,
        set b(a71) {
        },
        ...a25,
        "f": 9,
    };
    o72.getPrototypeOf = 2105444095n;
    try { Proxy.propertyIsEnumerable(Uint8Array); } catch (e) {}
    const v75 = new Proxy(this, o72);
    v75.length = 268435439n;
    const v76 = v75?.valueOf;
    try { new v76(); } catch (e) {}
    v75.h = v75;
}
new F20();
const v79 = new F20();
v79.constructor = f18;
let v81 = 2;
v81++;
function f83(a84) {
    a84 <= a84;
    const o89 = {
        "c": 2,
        "e": 8,
        213: a84,
        "g": v81,
        p(a87, a88) {
            return a87;
        },
    };
    return o89[213];
}
const v91 = v79?.constructor;
try { new v91(F0, F20, 2, v6); } catch (e) {}
const v93 = v79.constructor;
const v94 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
const v95 = /(?:a*)+q(?<a>.)/guds;
function f96(a97, a98) {
    for (let v99 = 0; v99 < 5; v99++) {
    }
    return v81;
}
v95[Symbol.toPrimitive] = f96;
for (let [i105, i106] = (() => {
        0 * 0;
        return [0, 10];
    })();
    (() => {
        const v107 = i105 < i106;
        v107 && v107;
        return v107;
    })();
    (() => {
        const v111 = i106--;
        v111 >>> v111;
    })()) {
    i105 + i105;
    for (let v116 = 0; v116 < 5; v116++) {
        const v117 = v95.constructor;
        try { v117(v95, v95); } catch (e) {}
        v94.constructor;
        v95.constructor.lastParen;
        const v123 = [i106,i106,i106,i106,i106];
        v123[4];
        v123 > 8n;
    }
}
try { new v93(v93, o19, v93, v6); } catch (e) {}
const v127 = new v93();
const v128 = v127?.constructor;
try { new v128(F0, o19, Int16Array, Int16Array); } catch (e) {}
const v130 = new F20();
v130.length;
const v132 = v130.constructor;
v132.caller;
new v132();
