function f1(a2) {
    const v8 = Uint16Array();
    v8[7] = v8;
}
let v10 = "uvrG";
class C11 {
    static get g() {
        this / v10;
        const v16 = new Array(1096);
        super[Array] = 5;
        return v16;
    }
    [v10];
    get f() {
        v10 >>= this;
        this[Symbol.toPrimitive] = this;
        return this;
    }
}
new C11();
const v21 = new C11();
const v22 = new C11();
class C23 extends C11 {
    #c;
    #d = v22;
    static #b;
    set d(a25) {
        try {
            v10.#c = a25;
        } catch(e26) {
        }
        v21.f %= a25;
        v22[5];
    }
    static e;
    [5];
    static [v21];
    9 = 5;
    #n(a29, a30) {
        Object.defineProperty(a29, "a", { writable: true, configurable: true, value: f1 });
    }
    static #n(a32) {
        function f33(a34) {
            return a34;
        }
        class C35 extends f33 {
        }
    }
}
new C23();
new C23();
try { Float32Array.bind(); } catch (e) {}
class C43 {
    static #m(a45) {
    }
    constructor(a47) {
        const v49 = new Float32Array();
        try { v49.entries(); } catch (e) {}
        const v51 = new Uint16Array(12, -4294967296, 5);
        new Float32Array(v51, -4294967296);
    }
}
new C43();
new C23();
function f55() {
    return v10;
}
class C57 {
}
new C57();
let v59 = Map;
class C60 {
    set d(a62) {
        a62[this] = v59 >>>= a62;
    }
    #m(a64, a65) {
        let v66 = "jER";
        const v67 = [17452,4294967295,64,-8];
        [v66] = v67;
        try { new v66(...v67, -1.6798118066934893e+307); } catch (e) {}
        a65 ^ a64;
        v59 * this;
        new BigInt64Array(1433);
        const v77 = new Uint8Array(255);
        new Float32Array(299);
        return v77;
    }
}
new C60();
function f84() {
    class C85 {
        constructor(a87) {
            function f88() {
                return f88;
            }
            class C90 {
            }
            const v91 = new C90();
            const v94 = -1000000.0 & v91;
            Math.pow(4, v94);
            v94 ** 4;
            Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f88 });
        }
    }
    const v97 = new C85();
    new Float64Array(2147483647);
    const v103 = new Uint32Array(3);
    class C104 {
        constructor(a106, a107, a108, a109) {
            try { a108(); } catch (e) {}
            for (let i112 = 0; i112 < 9; i112++) {
                v103[i112] = a109;
            }
        }
        c;
    }
    new C104();
    const v119 = v97.length(v97, C85);
    const v120 = new C85(v119);
    v120.length();
    const v122 = v120.length;
    const v123 = new v122(v122, f84, v119, f84, f84);
    v123.name = v123;
    return v122;
}
f84();
%PrepareFunctionForOptimization(f84);
f84();
%OptimizeFunctionOnNextCall(f84);
f84();
