function F1() {
    if (!new.target) { throw 'must be called with new'; }
}
class C4 extends F1 {
}
function f7() {
    return 15n;
}
class C9 extends f7 {
    constructor(a11, a12) {
        super();
        let v13 = 0;
        for (let i = 0; i < 5; i++) {
            v13 < 7;
            try {
                C4.#b;
            } catch(e17) {
            }
            v13++;
        }
    }
    /*
    constructor(a20) {
        super();
        const v21 = f7();
        class C24 {
            static #g;
            constructor(a26) {
                const v27 = this?.constructor;
                try { new v27(C24); } catch (e) {}
                let {"c":v29,"g":v30,"length":v31,} = "size";
                C24 & v29;
                let v33 = v30?.[7];
                [...v33] = "size";
                /a\D\c0zR(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10*/iy;
                /a\bc/vd;
                /(?:ab)|cde/uimy;
            }
            static #toString(a38) {
            }
            ["size"] = "size";
            static #e = 2.2250738585072014e-308;
            static #d;
        }
        super[v21] = 128n;
        const v39 = `a`;
        class C41 {
            set g(a43) {
                -11 || a43;
            }
        }
        v39[1000] >>= true;
        try { Float64Array.from(null); } catch (e) {}
        class C48 {
            static #m(a50) {
            }
            set d(a52) {
                this.#m();
            }
            constructor(a55) {
                function f56() {
                    return this;
                }
                Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f56 });
            }
        }
        new C48();
    }
    */
    #m(a59) {
        return this;
        this[f7] += f7;
        const v60 = new f7();
        const o63 = {
            "maxByteLength": 3174383256,
        };
        const v65 = new SharedArrayBuffer(4096, o63);
        new Int32Array(v65);
        return v60;
    }
}
new C9(15n);
new C9(2147483648n);
try { Array.of(); } catch (e) {}
Array(19793);
const v74 = [];
v74[Symbol.toPrimitive] = Array;
[v74,v74,v74];
new C9(2147483648n);
const v83 = [9,1024,256,268435440,-1916992432,7,-2147483648,20126,-2,1645963617];
try { v83.group(BigInt64Array); } catch (e) {}
function F85(a87, a88) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a88;
}
const v89 = new F85(F85, F85);
const o91 = {
    [undefined]: undefined,
    __proto__: v89,
    256: F85,
};
for (const v92 in o91) {
}
