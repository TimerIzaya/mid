function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 1493059446;
    } catch(e3) {
    }
    try {
        this.g = 1493059446;
    } catch(e4) {
    }
}
function f5(a6) {
    try {
        a6.b = a6;
    } catch(e7) {
    }
    return F0;
}
F0[Symbol.toPrimitive] = f5;
const v10 = new F0();
const v11 = new F0();
const v12 = new F0();
class C13 {
    static [F0] = F0;
    #e = v10;
    static h;
    #valueOf(a15, a16) {
        let v17;
        try { v17 = a15.valueOf(this, v11); } catch (e) {}
        a15.g;
        v10[a15] = v12;
        new Int16Array(F0);
        try {
            this.__proto__ = C13;
        } catch(e22) {
        }
        v10[v17] *= a16;
        new BigInt64Array(7);
        new Float32Array(5);
        return a16;
    }
}
new C13();
new C13();
function F31() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v34 = -(-7);
        v34 ** v34;
    } catch(e36) {
    }
}
function F37(a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    function f41(a42, a43) {
        return 2.202480097885534;
    }
    this.constructor = f41;
    const v47 = this.constructor;
    try { new v47(this, a39); } catch (e) {}
    new F31();
}
new F37();
new C13();
/{z}Hv/my;
/(ab)\1?/gvsy;
/(x)(x)(x)\2?/gvms;
class C57 {
}
const v58 = new C57();
const v59 = new C57();
const v60 = new C57();
v60[Symbol.toPrimitive] = f5;
function f63(a64, a65) {
    const o71 = {
        "h": v58,
        [v59](a67, a68, a69) {
            super[-9223372036854775807];
        },
        [a65]: v58,
        __proto__: C57,
        "c": 9,
    };
    return o71;
}
%PrepareFunctionForOptimization(f63);
f63(Uint16Array, v60);
%OptimizeFunctionOnNextCall(f63);
f63();
