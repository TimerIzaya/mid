const v2 = new Uint8ClampedArray(34);
new Int16Array(10);
const v8 = new BigUint64Array(587);
const v9 = [Uint8ClampedArray,Uint8ClampedArray,v8];
[10,[10,10,Int16Array,10],v9];
class C18 {
    m(a20, a21) {
        super[a21];
        a21?.[11];
        return 5.0;
    }
    constructor(a25) {
        class C26 {
            static [11] = this;
            static d = 11;
            static [this] = this;
        }
        new C26();
        new C26();
        new C26();
    }
}
const v30 = new C18(11);
const v31 = new C18(11);
const v32 = new C18(-5.0);
function f33(a34, a35) {
    v8 >> 0;
    const v39 = !0;
    +v8;
    Math.trunc(v39);
    return a34 - v39;
}
v32.valueOf = f33;
function F43(a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = Uint8ClampedArray;
    try {
        this.h = a45;
    } catch(e47) {
    }
}
const v48 = new F43(v30, v32);
const v49 = new F43(v31, v32);
const v50 = new F43(v48, v32);
function f51() {
    return v30;
}
const v53 = new Map();
class C58 {
    constructor(a60) {
        ("buffer")["search"](..."buffer", ..."search", ..."search", a60, ..."search", 52021);
        super.d = arguments;
    }
    static h;
    static #a;
    [-5.0] = -5.0;
    #g = "buffer";
    static #c;
    static #e = C58;
}
const v64 = new C58(C58);
const v65 = new C58(v64);
const v66 = new C58(v65);
const v68 = new WeakMap();
for (const v71 of v53) {
    let v72;
    try { v72 = new v71(); } catch (e) {}
    v72 && v2;
    52021 instanceof BigInt64Array;
}
new BigInt64Array(129, v49, BigInt64Array, v68);
new Int8Array(12);
const v81 = new Uint32Array(1024);
const v82 = /1xyz{1,}?/gims;
const v83 = /h\p{gc=Nd}/vdy;
const v84 = /\xf0\x9f\x92\xa9a*/us;
class C88 {
    static {
        this[Symbol.hasInstance];
    }
    #p() {
        let v94;
        try { v94 = this.p(undefined, this, this, this, this); } catch (e) {}
        try {
            v94.#p(undefined, v94, v94, undefined);
        } catch(e96) {
        }
        return undefined;
    }
    static #a = undefined;
    c = undefined;
}
const v97 = new C88();
const v98 = new C88();
v98.p30 = v82;
const v99 = new C88();
function f100(a101) {
    const o111 = {
        15: a101,
        valueOf(a103, a104) {
            new WeakMap(a104);
            this << a104;
            const v107 = v50 >>> "buffer";
            try {
                v66.d = v107;
            } catch(e108) {
            }
            super.h = a104;
            try { C88.stringify(a101, a101, this); } catch (e) {}
            try {
                C88.c = v97;
            } catch(e110) {
            }
            return a104;
        },
        2147483647: undefined,
        __proto__: v98,
        "c": a101,
        ...a101,
        "f": a101,
    };
    return o111;
}
const v112 = f100(v81);
v112.p0 = v97;
f100(v99);
f100(v112, WeakMap, C18);
for (let i116 = 0; i116 < 5; i116++) {
    try {
    } catch(e122) {
    }
}
function F124(a126, a127, a128, a129) {
    if (!new.target) { throw 'must be called with new'; }
}
Object.defineProperty(F124, Symbol.toPrimitive, { value: f51 });
const v132 = new F124(v84, 1, -1263139894, F124);
const v133 = new F124(v82, v84, -23596, v132);
const v134 = new F124(v83, F124, -23596, 1);
if (v134 <= v32) {
    for (let v136 = 0; v136 < 32; v136++) {
        v112["p" + v136] = v136;
    }
} else {
    try { v65["valueOf"](v53, v31, "valueOf"); } catch (e) {}
}
const v141 = v134 | F124;
let v142;
try { v142 = v133(v84, v141, v141); } catch (e) {}
if (v142) {
} else {
}
