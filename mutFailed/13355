[];
-Infinity;
function F10(a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 530723.6112194259;
    } catch(e15) {
    }
    try {
        this.e = a12;
    } catch(e16) {
    }
    try {
        this.f = a14;
    } catch(e17) {
    }
}
new F10(2n, 2n, 13);
const v19 = new F10(530723.6112194259, 2n, 36870);
new F10(v19, -29507n, -761419485);
function f21() {
    function f23(a24) {
        [-3.942521664036782e+307,-3.942521664036782e+307,-3.942521664036782e+307];
        return -4.1774534918111354e+307;
    }
    ArrayBuffer.valueOf = f23;
    new ArrayBuffer(ArrayBuffer, ArrayBuffer);
    return f21;
}
%OptimizeFunctionOnNextCall(f21);
f21();
