function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v3 = [-2.216170140955498,-2.2250738585072014e-308,-643865.3403199288,NaN];
        try { this.constructor(); } catch (e) {}
        const t5 = [];
        t5[6] = 4294967295;
        class C7 {
        }
        this.decodeURIComponent(v3);
        const o10 = {
        };
        this.b = -1024;
    } catch(e11) {
    }
    try {
        this.c = -1024;
    } catch(e12) {
    }
    function F13() {
        if (!new.target) { throw 'must be called with new'; }
    }
    let v15 = 0;
    class C17 {
        #b = v15;
        g = 1.1408591040999836e+308;
        static {
            const v22 = v15++;
            ~v15;
            const v24 = [0.71465078532354,-2.2250738585072014e-308,1.0,-2.2250738585072014e-308,2.2250738585072014e-308,-620.8633845139873,0.0,-1.0,3.3358719500528515];
            const v25 = [-7.462188141503825,-3.070207201828062e+307,0.6861416475431791,1000000000.0,-3.0];
            const o31 = {
                ...v24,
                [Set](a28, a29, a30) {
                },
                "b": v25,
            };
            Math.log10(44149);
            44149 + v15;
            Math.fround(v22);
        }
        constructor(a36, a37, a38, a39) {
            super();
            super.b;
        }
        /*
        constructor(a42, a43, a44) {
            super();
            super.f = a42;
        }
        */
    }
    C17.g ^= -1e-15;
}
new F0();
const v47 = new F0();
const v48 = new F0();
const v49 = v48?.constructor;
try { new v49(); } catch (e) {}
function F52(a54, a55, a56, a57) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = "536870889";
    } catch(e58) {
    }
    try {
        this.b = a57;
    } catch(e59) {
    }
}
function f61() {
    /[a-zA-Z0-9]/gvisy;
    return f61;
}
f61();
new Float32Array();
Math.log1p(268435456);
const v73 = new Uint8ClampedArray(1832);
function f76() {
    return f76;
}
function f78() {
    const v81 = Array(4087, -2.220446049250313e-16);
    v81[4037] = v81;
    return Array;
}
%PrepareFunctionForOptimization(f78);
new Int8Array(268435456);
const v85 = new Uint8Array(1653);
const v86 = v85?.findLastIndex;
try { new v86(F0); } catch (e) {}
15 / 15;
const v91 = new Float32Array(15);
v91[5] = v91;
for (let v92 = 0; v92 < 5; v92++) {
    v92++;
    function f94() {
        for (let [i98, i99] = (() => {
                0 ^ 0;
                return [0, 10];
            })();
            (() => {
                try { ("function")["-268435456"](); } catch (e) {}
                const v103 = /(?:a*)+q(?<a>.)/guds;
                function f104(a105) {
                    const o107 = {
                        get d() {
                            return this;
                        },
                    };
                    return f94;
                }
                for (let [i113, i114] = (() => {
                        const v111 = /Aabc|defmxyz{1,}?qMa{0,1}?/gvdis.exec("function");
                        try { v111.shift(); } catch (e) {}
                        return [0, 10];
                    })();
                    i113 < i113;
                    ) {
                    f104(v103);
                }
                i98 + i98;
                const v122 = i98 < i99;
                v122 && v122;
                return v122;
            })();
            (() => {
                const v126 = i98++;
                v126 >> v126;
            })()) {
        }
        return v92;
    }
    let v130 = "lastIndexOf";
    let v131 = v85[v130](v73, v92);
    v131++;
    v130 += v130;
    v47[Symbol.species];
    f94();
    %OptimizeFunctionOnNextCall(f94);
    0 < 9;
    [[-9007199254740990,49004,536870889,1000,257,65536,-9007199254740990,-9007199254740992]];
}
