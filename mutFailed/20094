const v2 = new Uint8Array();
const v5 = new Uint32Array(104);
for (const v6 in v5) {
    104 in v2;
    typeof Uint8Array;
}
new WeakSet();
new Uint16Array(93);
const v14 = [1000.0,7.013617100191173,-351.0818852767976,0.6726521994945021,0.0654548428416345,0.0,357.95756141696074,-114535.71398965968];
const v15 = [1000000000.0,1.0,1.33700765354115,3.759383313252208,0.7953224416766568,9.060355110242564e+307,1.7976931348623157e+308,1.7976931348623157e+308,2.220446049250313e-16];
[v14,v15,v15];
class C20 extends Date {
}
Date[Symbol.toPrimitive] = Date;
[1.7976931348623157e+308,3.0,1.7976931348623157e+308,Infinity,0.16191355476187297,1.7976931348623157e+308,-1000000.0];
[-1.3235831754262955e+308,-Infinity,-475.7090289616641,1000.0,-1000000.0,0.3409758287005663,1.7976931348623157e+308,1000000000.0];
[1000000000.0,-799.1534717158586,1e-15,1000000.0,-1000000.0,1.7976931348623157e+308,0.23028759820411315];
const v29 = new BigUint64Array();
function F30() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        let v32 = 0;
        for (let i = 0; i < 5; i++) {
            v29.entries();
            const v34 = v32++;
            v34 + v34;
            v34 ^ v34;
            const v38 = v32 < 5;
            v38 || v38;
        }
        new F30();
    } catch(e41) {
    }
}
function f49() {
    const v51 = -v15 && v15;
    -v51;
    return v51;
}
const v54 = [];
function F56(a58, a59, a60, a61) {
    if (!new.target) { throw 'must be called with new'; }
    for (let v62 = 0; v62 < 100; v62++) {
        new v62();
        function f64() {
            -4294967295 === -4294967295;
            return -4294967295;
        }
        const o69 = {
            valueOf(a68) {
                return v62;
            },
        };
        function f70(a71, a72, a73) {
            const o80 = {
                toString(a75, a76, a77) {
                    super[a73];
                    return a72;
                },
                "a": o69,
                "arguments": v54,
                2: undefined,
                get d() {
                    return F56;
                },
            };
            return a71;
        }
        const v81 = f70(f70, undefined, F56);
        f70(undefined, v81, v81);
    }
}
new F56();
for (let i86 = 0, i87 = 10; i86 < i87; i87--) {
}
new F56();
