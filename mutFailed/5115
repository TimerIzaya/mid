class C3 {
    constructor(a5) {
        try {
            this.fuck(391031.1411565861, 0.0, a5);
        } catch(e7) {
        }
    }
    4 = 0.683018492240564;
    #c;
    static #d;
    set b(a9) {
        for (let i12 = 0, i13 = 0.0; i12 < i13; i12++, i13--) {
            this >>> i12;
        }
    }
}
const v22 = new C3(0.683018492240564);
new C3(391031.1411565861);
const v24 = new C3(0.683018492240564);
function f25() {
    return v22;
}
function f26(a27, a28, a29, a30) {
    const o39 = {
        "f": C3,
        "c": a29,
        ...a28,
        m(a32, a33, a34, a35) {
            this[1];
            super.h;
            let v38;
            try { v38 = this.n(); } catch (e) {}
            super[a29] = a32;
            %VerifyType(C3);
            v38[-2] ^= 0.0;
            return a32;
        },
        "d": 0.683018492240564,
        ...v22,
        "a": 0.0,
    };
    return o39;
}
const v41 = f26(f26(0.683018492240564, 0.683018492240564, 391031.1411565861, v24), v24, 391031.1411565861, v22);
const v42 = f26(v41, v41, 0.0, v24);
class C43 extends f25 {
    536870887 = v42;
    static [391031.1411565861];
    static n(a45, a46, a47) {
        function F48(a50, a51) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.g = a51;
            } catch(e52) {
            }
        }
        new F48(this, 0.0);
        new F48(a46, a45);
        const v55 = new F48(a46, 0.683018492240564);
        return v55;
    }
    static 536870888;
}
new C43();
new C43();
new C43();
for (let i61 = 0, i62 = 10;
    (() => {
        const v63 = i61 < i62;
        class C64 {
        }
        new BigUint64Array(v63);
        let [v68,,v69,...v70] = 3375;
        return v63;
    })();
    i61++) {
}
