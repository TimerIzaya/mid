class C3 {
    constructor(a5) {
        this.Aw;
        a5.name = a5;
        ("Aw").matchAll(-9007199254740991, this, a5, this, this, ..."a");
        try { new a5("Aw", "Aw", this, "a", "Aw"); } catch (e) {}
    }
    ["Aw"] = -9007199254740991;
    static get h() {
        let v10 = 0;
        do {
            /(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/gd;
            /(r(ab)\1ZOfoo|(bar|baz)|quux)/gisy;
            /(?<=a)(ab)\1(?:a?)+/gviy;
            v10++;
        } while (v10 < 1)
        return "Aw";
    }
}
try { new C3(C3); } catch (e) {}
const v18 = new C3(C3);
v18.Aw;
const v20 = new C3(v18);
v20.e = v20;
new C3(v20);
[9007199254740991,483828263,-51494];
const v23 = [4096,-9007199254740991,536870888,-15,6];
try { v23.push(v18); } catch (e) {}
[257,11,7];
const v28 = new Array(11);
const v30 = new SyntaxError(v18, v28);
class C31 {
    #d = SyntaxError;
    #b;
    valueOf(a33, a34) {
        SyntaxError();
        a33[509004239] = a33;
        function f39() {
            return f39;
        }
        function F40() {
            if (!new.target) { throw 'must be called with new'; }
        }
        new F40();
        const v43 = new F40();
        const v44 = new F40();
        function f47() {
            return f47;
        }
        const v48 = [16,1073741824];
        [f39];
        [v48,v43];
        ("object")[Symbol.asyncIterator];
        for (let v54 = 0; v54 < 32; v54++) {
            const t54 = "object";
            t54["p" + v54] = v54;
        }
        f39();
        for (let v58 = 0; v58 < 5; v58++) {
            f47();
        }
        try { v44.n(); } catch (e) {}
        for (let v61 = 0; v61 < 5; v61++) {
        }
        return super[a34]?.h;
    }
    a = SyntaxError;
    2147483648 = v30;
}
C31.c = C31;
const v64 = new C31();
const v65 = new C31();
v65[2147483648];
v65[2147483648] = v65;
const v67 = new C31();
function F68(a70, a71, a72, a73) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(a70); } catch (e) {}
    a71[2147483648] = a71;
    a72[2147483648];
    const v76 = this?.constructor;
    try { v76("a", "a", a71, v65); } catch (e) {}
    try { new v76(SyntaxError, SyntaxError, a70, SyntaxError); } catch (e) {}
    a71[2147483648] = a71;
    a73[2147483648] = a73;
    try {
        this.h = a71;
    } catch(e79) {
    }
    try {
        this.d = C31;
    } catch(e80) {
    }
}
const v81 = new F68(C31, v65, v64, v65);
v81.length = v81;
const v82 = new F68(v65, v65, v67, v64, Array, "a", -9007199254740991);
v82.h = v82;
new F68(v67, v65, v64, v64);
function f84() {
    return v82;
}
new Int8Array(6);
const v90 = new Uint32Array(116);
127 % 127;
const v94 = new Int32Array(127);
v94[94] = v94;
1024 & 1024;
2147483648 - 2147483648;
function f100(a101, a102) {
    const o103 = {
        "g": a101,
        "h": "boolean",
    };
    return o103;
}
f100(2147483648);
class C105 {
    get e() {
        ~-7673;
        [-4096,16,1597180985,-1073741824,-640305155,33236,7,-13];
        ([16,-1073741824n]).flat(16);
        [-12,4096,-17499,-25960,-13,-1634811006,-2147483648,-65536,5,-10];
        [35344,-1447222792,16,4096];
        try {
            new F68("-1492", SyntaxError, 116, 6n);
        } catch(e121) {
        }
    }
}
const v122 = C105?.call;
try { new v122(v90); } catch (e) {}
