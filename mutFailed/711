function f0() {
}
const v1 = /N[^123]/gvdmy;
v1.b = v1;
const v2 = /qxyz{1,}?/gvdmy;
const v3 = /(\P{Decimal_Number}[^123]?)/vdims;
0.6287607859504575 >>> 0.6287607859504575;
function f8(a9, a10, a11) {
    a11.b = a10;
    a9 * a9;
    a11.b = a11;
    a10 + a10;
    const o32 = {
        get c() {
            return v2;
        },
        o(a25, a26, a27) {
            Object.defineProperty(a9, 65537, { writable: true, value: a27 });
            if (a27) {
                try { a9.m(v1, this); } catch (e) {}
            } else {
                Reflect.construct(a9, [Reflect,Reflect,a25,Reflect], a25);
            }
            return v1;
        },
    };
    o32[Symbol.toPrimitive] = f0;
    return o32;
}
const v35 = f8(3.1825225670075774, -2.220446049250313e-16, v1);
const v36 = f8(v3, -2.220446049250313e-16, v1);
v36.toString = f8;
try { v36.o(v35, 0.6287607859504575, f0); } catch (e) {}
try { new Symbol(); } catch (e) {}
const v40 = Symbol.iterator;
const o49 = {
    [v40]() {
        let v42 = 10;
        const o48 = {
            next() {
                v42--;
                const v46 = v42 == 0;
                const o47 = {
                    "done": v46,
                    "value": v42,
                };
                return o47;
            },
        };
        return o48;
    },
};
o49.h = v3;
o49.h = o49;
f8(v36, 3.1825225670075774, v1);
3127 - 3127;
3127 | 3127;
const v55 = new Uint8Array(3127);
new Float64Array(241);
Int16Array.BYTES_PER_ELEMENT = Int16Array;
const v61 = new Int16Array(3563);
function f62() {
    function f63(a64, a65) {
        const v66 = +Float64Array;
        try { v1.compile(v66); } catch (e) {}
        return v55;
    }
    return f63;
}
function f68(a69) {
    const o72 = {
        "f": "k",
        get f() {
            return this;
        },
    };
}
Object.defineProperty(v61, "valueOf", { writable: true, enumerable: true, get: f62, set: f68 });
v61[3410] = v61;
const v75 = new Int32Array(2);
let v76 = v75[1];
v76--;
const v78 = v75.toSorted();
try { v78.slice(v78, v78); } catch (e) {}
