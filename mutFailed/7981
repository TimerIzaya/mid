class C3 {
    ["-268435456"];
    0;
    constructor(a5, a6) {
        Object.defineProperty(a6, a6, { enumerable: true, value: -1.3957419244235538 });
        try { new a6(-1.3957419244235538, this, ..."-268435456", -1.3957419244235538, a5); } catch (e) {}
        super.f = a6;
        a5 ||= 10000;
    }
    n(a9, a10) {
        let {"length":v11,} = "-268435456";
        [a10];
        super[h] = this ** v11;
        try {
            a9.__proto__ = this;
        } catch(e15) {
        }
        return a10;
    }
}
const v16 = new C3("-268435456", C3);
const v17 = new C3(v16, -1.3957419244235538);
const v18 = new C3(10000, C3);
function F19(a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a21;
    } catch(e24) {
        function f25(a26, a27) {
            let v28;
            try { v28 = a22(a21); } catch (e) {}
            10000 & v28;
            return a26;
        }
        f25(a22, f25);
    }
}
new F19(v16, v17, -1.3957419244235538);
const v32 = new F19(v18, v16, C3);
new F19(v32, v32, C3);
const v40 = [];
function F41() {
    if (!new.target) { throw 'must be called with new'; }
    const v43 = this.constructor;
    try { new v43(); } catch (e) {}
    try {
        this.d = v40;
    } catch(e45) {
        const v47 = new Set();
        v47[v47];
        function f49(a50) {
            return f49;
        }
    }
}
new F41();
new F41();
