const v4 = new Date();
function f5(a6, a7) {
    const o22 = {
        __proto__: Date,
        "b": v4,
        "d": a6,
        [3.0]: a6,
        toString(a9, a10, a11, a12) {
            for (let v13 = 0; v13 < 11; v13++) {
                Date();
                new BigInt64Array();
                const v17 = [748666.7832804511,3.0];
                class C19 extends Float64Array {
                    [v17];
                }
                try {
                    Date(f5);
                } catch(e21) {
                }
            }
            super.g = a11;
            return a10;
        },
    };
    return o22;
}
f5.g = f5;
const v23 = f5(-1e-15, -9.866750339347332);
const v24 = f5(-1e-15, -9.866750339347332);
const v25 = f5(-9.866750339347332, 3.0);
v25[3] = v25;
function f26() {
    return Date;
}
const v28 = new WeakSet();
function F29(a31, a32, a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    a33[3];
    a34[3];
    try {
        this.a = a34;
    } catch(e37) {
    }
    v25?.constructor;
    const v41 = new Float64Array();
    const t45 = v41.constructor;
    const v43 = new t45(821);
    v43.lastIndexOf();
}
const v45 = new F29(v28, v23, v25, v25);
const v46 = new F29(v45, v24, v24, v25);
const v47 = new F29(v46, v23, v23, v23);
let v50;
try { v50 = new Int16Array(v23, 3.0, v25); } catch (e) {}
const v51 = new Int16Array(443944762);
v51.BYTES_PER_ELEMENT;
3257 / 3257;
try { new BigUint64Array(v47, f5, 3257); } catch (e) {}
new BigUint64Array(3257);
const o63 = {
    o(a59) {
        gc.length = gc;
        const o61 = {
        };
        o61.h = o61;
        gc(o61);
        return this;
    },
};
o63[v50]();
new BigUint64Array(2147483647);
