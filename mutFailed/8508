class C3 {
    static p(a5) {
        const v6 = super[9223372036854775807];
        const v7 = `log10${this}d${-1.0}b`;
        const v8 = v6 === v7;
        try {
            this.fuck(v7, v8);
        } catch(e10) {
        }
        return 4.0;
    }
    static 6;
    b = -1.0;
    2 = 4.0;
    static [9223372036854775807] = -1.0;
}
const v11 = new C3();
const v12 = new C3();
new C3();
function f14(a15, a16, a17) {
    const o29 = {
        "a": a17,
        [a16]: -1.0,
        "h": a15,
        n(a19, a20, a21) {
            try { v12.toString(a16, C3, v11); } catch (e) {}
            for (let v26 = 0; v26 < 32; v26++) {
                a21["p" + v26] = v26;
            }
            return this;
        },
    };
    return o29;
}
const v30 = f14(v11, C3, v12);
f14(v12, v12, v12);
const v32 = f14(v12, v11, v11);
function f33() {
    return v32;
}
let v36 = 9007199254740990;
v36 = 12;
v36 >>>= v36;
try { new f33(v36, ...4.0, ...C3, v11); } catch (e) {}
let {"c":v38,"d":v39,"e":v40,...v41} = C3;
let v42;
try { v42 = v11.setFloat64(-1.0, v39, v41, f14, 9223372036854775807); } catch (e) {}
v38[Symbol.match];
try { v32.n(-1.0, v41, v39, v42); } catch (e) {}
class C51 {
}
const v52 = new C51();
for (let v53 = 0; v53 < 100; v53++) {
    f33();
}
const o55 = {
    "defineProperty": f33,
    "getOwnPropertyDescriptor": f33,
    "getPrototypeOf": f33,
    "isExtensible": f33,
    "preventExtensions": f14,
};
new Proxy(v30, o55);
undefined ** v52;
