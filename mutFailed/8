function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 129382654;
    } catch(e3) {
    }
    new BigUint64Array(16);
    const v9 = new Uint32Array(2091);
    for (const v11 in v9[0]) {
    }
    try {
        const v14 = Array(11);
        v14[212] = v14;
        v14[212] -= 16;
        const o17 = {
            "a": 16n,
            1: 16n,
            257: undefined,
        };
        this.f = 129382654;
    } catch(e18) {
    }
}
const v19 = new F0();
const v20 = new F0();
const v21 = new F0();
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a25;
    try {
        this.d = v19;
    } catch(e26) {
    }
    try {
        const v30 = new Int32Array(1);
        v30 instanceof BigInt64Array;
        this.h = a24;
    } catch(e32) {
    }
    for (let v33 = 0; v33 < 25; v33++) {
    }
    const v35 = [-1000.0,351.94489669740733,5.8623101046484845,-160881.40611645568,0.6390643538224362,9.13027568774574];
    function f36() {
        function f37() {
            const v39 = new WeakSet();
            function f40(a41) {
                const o45 = {
                    "g": v39,
                    "h": a41,
                    __proto__: a41,
                    "a": v39,
                    "f": WeakSet,
                    m(a43, a44) {
                        return a43;
                    },
                };
                return o45;
            }
            f40(WeakSet);
            f40(1285);
            return 1285;
        }
        return f37;
    }
    Object.defineProperty(v35, Symbol.toPrimitive, { writable: true, get: f36 });
    function f51(a52, a53) {
        return f51;
    }
    const v55 = new Promise(f51);
    v55[v35] += 36002;
}
const v56 = new F22(v21, v20);
new F22(v19, v56);
new F22(v20, v19);
/a*b/gvis;
/0I(ab|cde)/msy;
/a*?f/gvdsy;
new WeakSet();
const v65 = new BigInt64Array();
for (const v66 in v65) {
}
