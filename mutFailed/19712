let v2 = 11;
const o4 = {
};
function f5(a6) {
    const v10 = [257,257,257,55852,2];
    function f11(a12) {
        function f14(a15) {
            v10["entries"]();
        }
        this.onmessage = f14;
        return f14;
    }
    const o20 = {
        "type": "function",
    };
    new Worker(f11, o20);
}
Object.defineProperty(o4, "h", { writable: true, enumerable: true, set: f5 });
o4.h = 352326470;
const v23 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v24 = [601759695];
const v25 = [1073741824,1073741823,1376142744,1073741825];
function f26(a27, a28, a29, a30) {
    switch (a29) {
        case a27:
            break;
    }
    const o39 = {
        ...v23,
        ..."Vre",
        "c": a30,
        84: arguments,
        ..."Vre",
        valueOf(a37, a38) {
            return a29;
        },
        ..."Vre",
        4: "-1073741824",
        5: -4294967295,
        6: -268435456,
    };
    %OptimizeFunctionOnNextCall(arguments);
    try { v25["find"](..."find", a30, ...v24, ...v25); } catch (e) {}
    return a28;
}
%OptimizeFunctionOnNextCall(f26);
function f42(a43, a44) {
    function F45() {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v47 = new F45();
    v47.g;
    Object.defineProperty(arguments, 4, { writable: true, enumerable: true, value: -9524 });
    a44 >> a44;
    const o61 = {
        set e(a53) {
            this[a53] <<= -2147483649;
        },
        [-2147483649](a56, a57) {
            v2 = a57;
            this[8] = a43;
            return a44;
        },
    };
    return o61;
}
f42(-955938685, -2147483649);
f42(-2147483649, -2147483649);
f42(v2, v2);
[2];
[-4294967297,-55640];
const v71 = new Float64Array(127);
class C72 {
    static b = Int16Array;
    5;
    f;
    #e = 257;
    static 2;
    static #p(a74, a75) {
        try {
            this.#e;
        } catch(e77) {
        }
        this.b;
        %VerifyType(a75);
        return v71;
    }
}
const v79 = new C72();
function f81(a82) {
    const v83 = [v79,a82,a82,C72];
    [a82,this,this,this,Float64Array];
    [257,v83];
}
try {
    this.valueOf = f81;
} catch(e86) {
}
[9,-17916,-32446,2147483647,-12,58002,-256,65536];
function f88() {
    [1e-15,1.0,-3.0,1.43935350979979e+308,-0.0];
    const v90 = [-1000000.0,771279.5641904315,0.0,8.299995604235331,6.625300935335886,-820.4949035918538,-602.5256799896665,0.6342705996691437,Infinity];
    function F91(a93) {
        if (!new.target) { throw 'must be called with new'; }
    }
    new F91();
    function F95() {
        if (!new.target) { throw 'must be called with new'; }
    }
    try { v90.find(v90); } catch (e) {}
    const v98 = v90.toLocaleString();
    v98[56] = v98;
    let v99;
    try { v99 = v98.search(f88); } catch (e) {}
    return v99;
}
const v100 = f88?.__lookupSetter__;
try { new v100(f88); } catch (e) {}
f88();
const v105 = new Int8Array(2830);
const v108 = new Int32Array(10);
function f111(a112, a113, a114) {
    const o115 = {
        ...v105,
        814452916: 129,
        "f": v108,
        ...v108,
        __proto__: a113,
        [a113]: Float64Array,
        "a": a112,
        1: a112,
        "g": v105,
        "e": f26,
        "h": f42,
    };
    return f111;
}
