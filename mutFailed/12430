const v0 = [-1,14,10,256,-9007199254740991,-432887871,10000,10];
const v1 = [-2,-9,14198,-65535,10000,9];
const v2 = [-4,-1863611427,2,776517738,1537098697,44942];
const v4 = new Int16Array();
class C11 {
    constructor(a13, a14) {
        try { this.toString(a14, Int16Array); } catch (e) {}
        [3.5641395262500613];
        [1.3700601759691885e+308,-2.220446049250313e-16,836.7382369326358,1.225772114842526e+307,3.0,2.2250738585072014e-308,-1000000.0,-8.255796412164928,-3.0,-5.0];
        [-1.585767289435801e+308,1e-15,-Infinity];
    }
    #m(a20, a21, a22) {
        super.d = a22[v1];
        return v0;
    }
    [v4] = C11;
}
const v24 = new C11(v0, v1);
new C11(v2, 40828);
const v26 = new C11(v24, 268435441);
let v28 = Int16Array;
const v29 = new v28(7);
const v31 = 1024 * 1024;
new Uint16Array(1024);
new Float32Array(-6);
let v37 = 12;
v37++;
Int16Array.prototype = Int16Array;
new Int16Array(15);
new BigUint64Array(10);
Float32Array.prototype = Float32Array;
const v46 = new Float32Array(2494);
try { v46.lastIndexOf(Uint16Array); } catch (e) {}
const v48 = [7,v46];
const v50 = ([10,7,v2,v29])?.reverse;
let v51;
try { v51 = v50(); } catch (e) {}
const v52 = [v26,7,v51,15,v4];
const v55 = new Int32Array(v31);
const v57 = v28--;
/S4/gvm;
const v60 = /a?abc+e6H*/gvmsy;
/G(?:ab|cde)b?/udim;
const o62 = {
};
new Proxy(v48, o62, v60, 2917, v52);
v55["lastIndexOf"](v57);
