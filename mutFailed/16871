let v3 = 0;
while (v3 < 8) {
    const t2 = 0;
    delete t2[0];
    v3++;
}
function f9(a10) {
    const o20 = {
        "e": -59909,
        ...-1570358319,
        __proto__: a10,
        "h": a10,
        set b(a12) {
            Math.tan(v3);
            const v16 = ~v3;
            --v3;
            v3-- && v16;
        },
        ...f9,
        536870888: a10,
        3: undefined,
        "c": -59909,
        7: f9,
        [0]: -59909,
    };
    return o20;
}
f9(0);
f9(-1570358319);
const t27 = 0;
const v23 = t27(-59909);
const v24 = [v23];
[-59909,v24,v24,-1570358319,v23];
const v26 = [0,0];
function F27() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v31 = Array(19793);
        for (const v32 of v31) {
            Math.tanh(-1000.0);
            function f36() {
                return f36;
            }
            f36();
            %OptimizeFunctionOnNextCall(Math);
        }
        [v31,v31];
        const v40 = [256,256];
        for (let v41 = 0; v41 < 5; v41++) {
        }
        v40[65536] %= 256;
        [v26];
    } catch(e43) {
    }
}
const t55 = -59909;
new t55();
new F27();
