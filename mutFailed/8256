let v0 = [-46663,65154,536870888,65537];
[291193988,-4294967297,0,268435456,-51646,-6];
const v2 = [-65536,7,-65536];
function f3() {
    return v2;
}
var a = -4.760188704314673e+307;
const v6 = v0++;
const v7 = v6 >> v6;
class C12 {
    set h(a14) {
        a14[-12] = v7;
        0 instanceof a14;
        129 !== this;
        let v17 = ~v7;
        v17 = 129;
        const t15 = this[5];
        const v19 = delete t15?.[12];
        try {
        } catch(e20) {
        }
        const v23 = new Int8Array(520);
        for (let v24 = 0; v24 < 5; v24++) {
            v23.indexOf(v24);
        }
        super.g = v19;
    }
    h;
    6;
    #a;
    f = -4;
    8;
    [-12];
}
new C12();
/q(x)(x)(x)\3*/d;
/9/vdisy;
/(ab|cde)[v(\xed\xb0\x80)\x01]/gvimsy;
function f35() {
    function f36() {
        delete arguments.callee;
        return arguments;
    }
    return f35;
}
new Uint8ClampedArray([515943.2030917471,-1e-15,1.7976931348623157e+308,0.19475803117559898,-546414.0415788401,285129.04068811354]);
function f43(a44) {
    a44.dotAll;
    a44.hasIndices = a44;
    const v46 = a44?.constructor;
    v46.$_;
    v46.lastParen;
    const o50 = {
        get d() {
        },
    };
    return v46;
}
const o51 = {
};
const o52 = {
};
Reflect.apply(f35, o51, o52);
