function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    const v6 = this?.constructor;
    const v8 = ~-2017259196 | this;
    function f9() {
        return v8;
    }
    try { new v6(2); } catch (e) {}
    try {
        this.POSITIVE_INFINITY = F3;
    } catch(e11) {
    }
    try {
        this.NEGATIVE_INFINITY = a5;
    } catch(e12) {
    }
}
try { F3(-2017259196); } catch (e) {}
const v14 = new F3(2, 16, -2017259196);
new F3(16, v14, 16, -2017259196);
new v14(2);
new Date();
let v19 = -55612;
-65536 - -65536;
const o23 = {
};
o23.h = o23;
v19 = 16;
o23[-2017259196] = o23;
const v28 = Symbol.isConcatSpreadable;
Symbol.for(v28.description);
o23[v28] = v28;
