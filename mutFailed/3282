new Date(-9223372036854775807);
function F6() {
    if (!new.target) { throw 'must be called with new'; }
}
Date.fuck(Date, Date, F6);
class C9 {
    static o(a11, a12) {
        let v13 = super.d;
        const v14 = `
            const v15 = this[4];
            v13 >>>= 3.639457305287176e+307;
            new String();
            gc();
            function f20(a21, a22) {
                const v23 = [1000000000.0,2.2250738585072014e-308,-3.0,-2.2250738585072014e-308,-2.2250738585072014e-308,-6.525028373249204e+307,-7.851646360254072e+307,0.6785915059434757,-0.0];
                class C24 {
                }
                C24[Symbol.replace] = v23;
                return f20;
            }
            f20();
            f20();
            ~v15;
        `;
        const v33 = new Float32Array(99);
        for (const v34 of v33) {
            function F35(a37, a38) {
                if (!new.target) { throw 'must be called with new'; }
                this.g = v34;
            }
            new F35();
        }
        const v40 = eval(v14);
        new Int16Array();
        "asIntN" / "number";
        return v40;
    }
    static e;
    65537 = 1.5371719550725046e+308;
    static [-507115.4354559315];
}
const v46 = new C9();
new C9();
function f48() {
    return f48;
}
const o51 = {
    set b(a50) {
    },
    __proto__: f48,
};
new C9();
class C53 {
    [1.5371719550725046e+308] = v46;
    set g(a55) {
        try { C9.o(); } catch (e) {}
        const o59 = {
            "maxByteLength": 65537,
        };
        const v61 = new SharedArrayBuffer(11, o59);
        new Uint32Array(v61);
    }
    g;
}
new C53();
new C53();
new C53();
const v69 = [23795,8,259058917,-256,1,-36806,4096,-9,-1,-18943];
new Date(-2, v69, v69, v69, -2);
const o73 = {
};
new Float64Array(2505);
new Int8Array(129);
const v80 = new Int32Array(257);
v80[120] = -2;
gc();
new Int8Array(16);
const v89 = new Int16Array(16);
v89[10] = -9007199254740992;
