class C3 {
    static #toString(a5) {
        const v7 = Symbol.toStringTag;
        this[v7] = v7;
        this.d ^= a5;
        this.d;
        const o11 = {
            "maxByteLength": 253,
        };
        const v13 = new ArrayBuffer(9, o11);
        new Int32Array(v13);
        return 9;
    }
}
new C3();
new C3();
const v18 = new C3();
function F22(a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 7;
    } catch(e27) {
    }
}
const v28 = new F22(v18, 12932598, -28558);
const v29 = new F22(v28, 12932598, -28558);
const v30 = new F22(C3, 12932598, 12932598);
class C31 extends C3 {
    toString(a33, a34, a35) {
        for (let [,v36,v37] of a33) {
            const v38 = delete v29[v28];
            [v36];
            [v38,F22,a34];
            [v18,v36,v37,12932598];
        }
        return -28558;
    }
    constructor(a43, a44, a45) {
        super();
        const v47 = Symbol.species;
        a45[v47] = v47;
        C3[this];
        v18.__proto__;
    }
}
const v50 = new C31(12932598, v28, C31);
new C31(-28558, v50, v28);
new C31(12932598, v30, 832823432n, v30, v29, F22);
const v53 = /\p{Script=Greek}(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/guy;
for (let v56 = 0; v56 < 25; v56++) {
    ("raw")[164];
    const t50 = "65537";
    t50.__proto__ = v53;
}
