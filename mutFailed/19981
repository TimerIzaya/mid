class C3 {
    ["P"];
    o(a5) {
        const v6 = super.d;
        const v8 = [-9.109766292519199,-1.3811947064786667e+308,0.09110445091766706,5.0,-385647.03832885576,0.2888431306471019];
        try { v8.filter(59890n); } catch (e) {}
        const v11 = new BigInt64Array();
        TypeError();
        class C15 {
            toString(a17, a18, a19, a20) {
                try { this["throw"](); } catch (e) {}
                [-6.672391061426152e+307];
                const v27 = new Uint8Array(512);
                eval.bind();
                const v30 = eval();
                Math.atan(1653620084);
                Math.log();
                const v35 = [17452,4294967295,64,-8];
                try {
                const t0 = "throw";
                new t0(...v35, -1.6798118066934893e+307);
                } catch (e) {}
                new Uint8ClampedArray(798, ...v27, v30);
            }
            constructor(a40, a41) {
                try { new a40(v11, TypeError); } catch (e) {}
                for (let i = 0; i < 5; i++) {
                    this[this];
                }
            }
        }
        this != a5;
        return v6;
    }
    #valueOf(a46, a47, a48, a49) {
    }
    constructor(a51, a52) {
        try {
            a52.length = a51;
        } catch(e54) {
        }
    }
    get f() {
        const o58 = {
            "maxByteLength": 1479,
        };
        const v60 = new SharedArrayBuffer(1479, o58);
        function F62(a64, a65, a66) {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v67 = new F62();
        function f68(a69, a70, a71, a72) {
            try { a69(v67); } catch (e) {}
            try { a70(); } catch (e) {}
            const o78 = {
                n(a76, a77) {
                    return a72;
                },
            };
            return a72;
        }
        new Float32Array(v60);
        return 1479;
    }
}
const v80 = new C3();
const v81 = new C3();
const v82 = new C3();
class C83 {
    #m(a85, a86, a87, a88) {
        const v90 = [17452,4294967295,64,-8];
        try {
        const t0 = "throw";
        new t0(...v90, -1.6798118066934893e+307);
        } catch (e) {}
        function f93() {
        }
        class C94 extends f93 {
        }
        class C95 extends C94 {
        }
        for (let v96 = 0; v96 < 32; v96++) {
            const v98 = new Float64Array();
            function f99() {
                for (let v100 = 0; v100 < 5; v100++) {
                    for (let v101 = 0; v101 < 5; v101++) {
                        let v103;
                        try { v103 = Math.exp(v98); } catch (e) {}
                        v103 >>> v103;
                    }
                }
                return Float64Array;
            }
            f99();
            const t93 = "resizable";
            t93["p" + a88] = v96;
        }
        return this;
    }
    constructor(a109, a110, a111, a112) {
        a111[257] = a110;
        C3[257];
        function F114(a116, a117) {
            if (!new.target) { throw 'must be called with new'; }
            this.e = this;
            try {
                a112.e = C3;
            } catch(e118) {
            }
        }
        new F114(a110, a112);
        new F114(a110, a110);
        new F114(v81, a110);
    }
}
new C83(v80, v82, "P", C3);
const v123 = new C83(v82, v80, v80, C3);
new C83(v81, v82, 9.756507681858146, v123);
function F125(a127, a128, a129) {
    if (!new.target) { throw 'must be called with new'; }
    a128 === a128;
    new BigUint64Array();
    /anVXYFzN(x)(x)(x)\3/gvdms;
}
function f134() {
    for (let v135 = 0; v135 < 5; v135++) {
        const v136 = new F125(F125, f134, v135);
        const t127 = v136.constructor;
        new t127();
    }
    return f134;
}
new BigInt64Array(128);
function f147(a148, a149) {
    return f147;
}
const v150 = f147(f147, f147);
class C151 extends f147 {
    constructor(a153, a154, a155) {
        super();
        const v156 = `
            try { a153(a155, v150); } catch (e) {}
        `;
        eval(v156);
    }
}
new Int16Array(1);
new BigInt64Array(8);
function f164() {
    const o168 = {
        m(a167) {
            return this;
        },
        __proto__: -5.0,
    };
    return 946.0676210033328;
}
f164();
%PrepareFunctionForOptimization(v150);
f164();
%OptimizeFunctionOnNextCall(f164);
f164();
