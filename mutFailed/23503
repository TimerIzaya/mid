const v0 = [-9007199254740990];
const v1 = [-65535,-1550835477,536870887,230490369,8];
const v2 = [-2,-9007199254740991,-14,-4294967296,-63465,-65537];
const v3 = /(E\xed\xa0\x80+)/gims;
const v4 = /\1(a)/guiy;
const v5 = /9a{0,1}?\cj\cJ\ci\cI\ck\cK+/gviy;
class C6 {
    c = v5;
    constructor(a8, a9) {
        let v10;
        try { v10 = a8(a9, a9, this, v3); } catch (e) {}
        try { v10(a9); } catch (e) {}
        function f12() {
            function f14(a15) {
                new Set();
            }
            this.f = f14;
            let [v18,v19] = v2;
        }
        const v22 = [];
        const o23 = {
            "h": v22,
            "type": "function",
        };
        new Worker(f12, o23);
    }
}
const v25 = new C6(v2, v5);
const v26 = new C6(v0, v4);
const v27 = new C6(v0, v5);
function F28(a30, a31, a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.__proto__ = v27;
    } catch(e34) {
    }
    try {
        this.b = v5;
    } catch(e35) {
    }
}
new F28(v4, v4, v5, v25);
new F28(F28, v3, v0, v26);
new F28(v1, v3, v2, v26);
const v41 = new BigInt(Float64Array);
v41.setUTCMonth();
