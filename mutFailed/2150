[-2.220446049250313e-16,1.2331579450875303,-299907.9935057056,-446.41516095975237,1000000000.0];
const v1 = [-3.0,-5.0,NaN,-1000000.0,-2.0,-0.0];
const v2 = [-0.0,-630631.8919297891,0.2103101933944277,0.7329102697887291,1000000000.0,-1.7976931348623157e+308,1000000000000.0];
let v3 = 78;
const v5 = new SyntaxError(v3);
new Uint16Array(6);
const v11 = new URIError(209);
let v14;
try { v14 = SyntaxError(SyntaxError, ...v2, SyntaxError, -9007199254740992, ...v2); } catch (e) {}
try { v2.shift(); } catch (e) {}
const v16 = v5 | v2;
v11.__proto__;
v14?.[332749795];
const v23 = [256,54026];
function f24(a25, a26) {
    try {
        v11.a = a26;
    } catch(e27) {
        v1.__proto__;
        v3 %= a26;
        v16 !== -2;
        f24 * e27;
        const o34 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o34);
    }
    return v16;
}
const v37 = Symbol.toPrimitive;
v23[v37] = f24;
for (let v39 = 0; v39 < 28; v39++) {
    v39 > v39 ? v39 : v39;
}
v1 in v37;
Symbol(..."forEach", f24, Math, URIError);
[0.0,-1e-15];
[1.7976931348623157e+308,36.577099254447376];
[-4.0,2.220446049250313e-16,0.3390758053061236,2.0,-1000000000000.0,-0.0,-8.395441730725755e+307,-8.031246517004249e+307,-1000000000000.0,-805.6105639806264];
try {
    new Uint16Array(20655, -21070, 10);
} catch(e51) {
}
-2 | -2;
!-2;
Math.hypot(v23);
