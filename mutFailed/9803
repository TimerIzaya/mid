new Int8Array(257);
const v4 = new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
const v7 = new Int32Array(v4, 10);
class C8 {
    static #d = 10;
    constructor(a10, a11) {
        try {
            v4.#d += Uint16Array;
        } catch(e12) {
        }
    }
}
new C8(v7, v4);
new Int8Array(9);
new Float64Array(3631);
Math.cosh(Math);
function F27(a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    a29.e = a29;
    const v31 = this?.constructor;
    try { new v31(this); } catch (e) {}
    v31.c = a29;
}
new Uint8ClampedArray(255);
const v37 = new Float32Array(127);
try {
    v7.f = v37;
} catch(e38) {
}
new Int8Array(1024);
new Int8Array(10);
function f47() {
    Math.asin(Math);
    return f47;
}
new Uint16Array(9);
(1024).includes(true, -706152110);
