const v0 = [1073741824,2147483649,6,65535,38500];
const v1 = [-4096,529,1181690863,12,-125160089,4294967297,512,-536870912];
const v2 = [65536,-211811059,-11,-942437807,1073741824,1073741823,268435441,70704354,1755820446,128];
class C5 {
    static [2147483649] = v0;
    static #d;
    static 1;
}
new C5();
new C5();
const v8 = new C5();
class C11 {
    constructor(a13, a14, a15) {
        super.d = a15;
        %VerifyType(a14);
        const v16 = 2147483649 <= a14;
        const v18 = [v16 ? 2147483649 : a14,null,v16,v2,2147483649];
        [-2,a13,[v18,2147483649],v18,v18];
    }
    [C11];
    static 2622963570 = -2;
    8 = 2147483649;
    static #n(a22, a23, a24) {
        super[C5] = C11;
        v8[Symbol.search];
        return a23;
    }
    static [v1];
}
new C11(-256, v2, 2147483649);
new C11(-2, v2, 2147483649);
new C11(-256, v1, -2, -2, v0);
new RangeError();
class C33 {
}
const v34 = new C33();
const v35 = v34.d;
try { v35.getOwnPropertySymbols(); } catch (e) {}
