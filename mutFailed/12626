const t0 = 26189;
let v3 = delete t0[26189];
let v5;
try { v5 = (-33673)["m"](v3); } catch (e) {}
v3 ^= v3;
Object.defineProperty("m", "e", { writable: true, value: v3 });
const v8 = new Int32Array(230);
let v12;
try { v12 = new v5("m", v5, -31272n); } catch (e) {}
const v13 = "m" instanceof v5;
const v15 = 4096 + 4096;
const v17 = new Uint8Array(4096);
let v18 = 187;
const v19 = v18 - v18;
new Float32Array(v18);
const v22 = [23795,8,259058917,-256,1,-36806,4096,-9,-1,-18943];
v12 = v13;
try { ("m").charCodeAt(v19); } catch (e) {}
try { v8.indexOf(v17, v19); } catch (e) {}
v12 instanceof Uint8Array;
v18 <<= v18;
try { new Date(-2, v8, v8, v8, v15, -2, v18); } catch (e) {}
const v29 = new Date(-2, v22);
const v30 = v29.getHours();
v30 + v30;
