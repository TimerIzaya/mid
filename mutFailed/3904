function f0() {
}
new Date();
function f6() {
    return 9;
}
new Float32Array(1000);
const v15 = new Int32Array(8);
new Uint16Array(257);
const v20 = new Set();
function F21(a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    function f25(a26) {
        return this;
    }
    this[Symbol.toPrimitive] = f25;
    try {
        this.d = a23;
    } catch(e32) {
        for (let [v33,v34] of a23) {
        }
    }
    try {
        a23.h = v20;
    } catch(e35) {
    }
    -256n >> -256n;
    try {
        (-1176432735)[this];
        [Symbol,WeakSet,WeakSet];
        (-1).copyWithin();
        function f42(a43, a44, a45) {
            return f42;
        }
        try {
            new f0();
        } catch(e47) {
        }
        const t38 = -9007199254740992;
        t38.b = Set;
    } catch(e48) {
    }
}
new F21();
new v15();
new F21();
