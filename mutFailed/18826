new BigInt64Array(12);
const v14 = new Uint32Array(188);
new v14(16);
const t3 = 12;
const v20 = new t3(12);
function f23(a24, a25, a26) {
}
const v27 = f23(512, 512, 14);
class C30 {
    static {
        for (let v32 = 0; v32 < 25; v32++) {
            const v33 = [601759695];
            const v34 = [1073741824,1073741823,1376142744,1073741825];
            for (let v35 = 0; v35 < 5; v35++) {
                try { new v27(); } catch (e) {}
                function f39() {
                    return this;
                }
                new Int8Array();
                const v44 = BigUint64Array * 536870887;
                const v45 = v44 - v44;
                v32 ** v44;
                Number.isNaN(v45);
                function f49(a50, a51) {
                }
                this();
                const v53 = v20.buffer;
                v53.__defineGetter__;
                Object.defineProperty(v53, "constructor", { writable: true, configurable: true, value: Date });
                %OptimizeFunctionOnNextCall(v33);
                try { v34["find"](..."find", undefined, ...v33); } catch (e) {}
                const o57 = {
                };
            }
        }
    }
}
