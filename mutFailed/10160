const v5 = new Int8Array(9);
let v8;
try { v8 = v5.join(12); } catch (e) {}
5 == 5;
v8[12] ||= 5;
try { v8.p(Float32Array, 9, 5, 463086674); } catch (e) {}
/ca{0}/guimy;
/KSL((\xed\xa0\x80))\x02+/udimsy;
/(?<=)*/vdms;
const v14 = new Float32Array(463086674);
new Uint16Array(0);
const v19 = new WeakSet();
[5,-256,Int8Array,0,[v19,[v14,5]]];
class C23 {
}
class C24 {
}
const v25 = new Int8Array();
function f27(a28, a29, a30, a31) {
    const v32 = a29 >>> a29;
    (v32 >>> v32) != -256;
    for (let v35 = 0; v35 < 5; v35++) {
        try { new C23(v25, v35, Float32Array, ...v35, a29); } catch (e) {}
    }
    const v38 = Math.max(a29);
    v38 - v38;
    return 463086674;
}
for (let v40 = 0; v40 < 5; v40++) {
    f27(v40, v40);
}
%OptimizeFunctionOnNextCall(f27);
f27();
