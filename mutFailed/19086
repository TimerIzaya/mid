class C2 {
}
function f6(a7) {
    a7 <= a7;
    const o12 = {
        "c": 257,
        "e": 8,
        213: a7,
        "g": 2,
        p(a10, a11) {
            return a10;
        },
    };
    return o12[213];
}
%OptimizeFunctionOnNextCall(f6);
function f18(a19, a20) {
    a19 === a19;
    const o36 = {
        get e() {
            ((-1556695731) ** -14) <= -1073741824;
            const v25 = super.h;
            let v26;
            try { v26 = v25.m(v25, -1073741824, -1073741824, this, v25); } catch (e) {}
            return v26;
        },
        m(a28) {
            a28.c = a28;
            const o29 = {
            };
            o29.e = 257;
            "EV" == "EV";
            const v34 = new Int8Array(3938);
            let v35 = 3;
            [...v35] = v34;
            return 257;
        },
        100: a20,
        "b": 64786,
        536870912: -1556695731,
        "a": -1556695731,
    };
    return o36;
}
const v37 = f18(10476171, 10476171);
const v38 = f18(-14, 64786);
const v39 = f18(-1073741824, 64786);
function f40(a41, a42, a43) {
    try { a41.isPrototypeOf(a42); } catch (e) {}
    try { a42.isPrototypeOf(a42); } catch (e) {}
    try { a43.isPrototypeOf(f40); } catch (e) {}
    const o51 = {
        "a": f18,
        "f": 64786,
        get e() {
            try {
                new f18(7, 7);
            } catch(e50) {
            }
            return this;
        },
        "h": a42,
    };
    o51.e = o51;
    return o51;
}
f40.name;
const v53 = f40(v39, v37, v38);
const v56 = new Uint8Array(127);
new Uint32Array(v56);
v53.e = v53;
const v59 = f40(v37, v39, v38);
const v60 = f40(v38, v39, v37);
v60.e = v60;
let v61 = -128;
v61++;
Float32Array[Symbol.iterator] = f40;
const v67 = new Float32Array(Float32Array, Float32Array);
f40(v67);
(536870887).toFixed();
function F72(a74, a75) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor = f18;
    try { this.hasOwnProperty(true); } catch (e) {}
    a74 - a74;
}
const v78 = new F72(-1986892121, -1986892121);
function f79(a80) {
    return a80;
}
v78.constructor = f79;
const v84 = v78?.constructor;
try { new v84(true, v59); } catch (e) {}
let v86;
try {
const t0 = true;
v86 = t0(F72, -1986892121, v78, v61);
} catch (e) {}
const v87 = `
`;
try { v86(v87); } catch (e) {}
