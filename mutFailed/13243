function f0() {
}
const v7 = (3)[f0];
Object.defineProperty(v7, 64, { writable: true, configurable: true, value: 3 });
Object.defineProperty(v7, 3, { writable: true, get: f0 });
v7?.[13];
new f0();
const v10 = [f0,268435440,2147483647,2147483647,268435456];
const v12 = [268435456,268435440,v10,268435456,[v10]];
let v16 = 10;
const v17 = v16--;
const v20 = new Set();
function F21(a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a23;
    } catch(e25) {
        let {"c":v26,"size":v27,...v28} = v20;
        function f29() {
            return v28;
        }
        v17 ** f0;
        for (let [v31,v32] of a23) {
            v12[v31];
            new BigInt64Array(6);
            new Int8Array(255);
            new Uint8Array(256);
        }
    }
    try {
        const v43 = v20[this];
        const v44 = [WeakSet];
        function F45() {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v49 = new Float32Array(7);
        v49.join(F45);
        v44[1];
        new F21(v43, -268435456n);
    } catch(e54) {
    }
}
new F21();
new F21();
new F21();
