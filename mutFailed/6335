function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v5 = new Set();
        function F6(a8, a9) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = a8;
            } catch(e10) {
            }
            try {
            } catch(e11) {
            }
            if (a9 >= Uint8ClampedArray) {
            }
            try {
            } catch(e13) {
            }
            try {
                const v14 = v5[this];
                try {
                    new F6(v14, -268435456n);
                } catch(e17) {
                }
                this.b = Set;
            } catch(e18) {
            }
        }
        this.h = 63417;
    } catch(e19) {
    }
    try {
        this.c = 63417;
    } catch(e20) {
        e = 4984;
        function f22(a23, a24) {
            arguments[0] = arguments;
            return a24;
        }
    }
    try {
        this.a = 63417;
    } catch(e26) {
    }
}
const v27 = new F0();
const v28 = new F0();
const v29 = new F0();
function f30(a31) {
    const o36 = {
        1024: a31,
        "b": a31,
        "h": a31,
        toString(a33, a34) {
            new F0();
            return v28;
        },
        "c": F0,
        "d": v27,
        [v28]: F0,
        [v27]: v28,
        "a": v29,
        [a31]: a31,
    };
    new WeakMap();
    const o40 = {
    };
    Object.defineProperty(o40, 564n, { writable: true, configurable: true, enumerable: true, set: Date });
    return o36;
}
const v42 = f30(v28);
f30(v42);
f30(v28);
function f45(a46, a47) {
    const o59 = {
        "g": a47,
        ...a47,
        "a": v42,
        set b(a49) {
        },
        set b(a51) {
        },
        o(a53, a54, a55) {
            switch (v27) {
                case this:
                    /a\D/guim;
                    /a(?!b)/visy;
                    /5ia+?/dmy;
                    break;
            }
            return this;
        },
    };
    return o59;
}
f45(v27, v27);
f45(F0, v27);
5.0 / -2.220446049250313e-16;
new Uint8Array(4);
f45(f30, v28);
function f72(a73) {
    return a73;
}
const v75 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
const v78 = new Float64Array(3341);
const v80 = new Int8Array();
const o81 = {
    __proto__: v75,
    "g": Float64Array,
    ...v78,
    2147483647: v80,
};
const v82 = f72.toString;
try { v82.call(); } catch (e) {}
