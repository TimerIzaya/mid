const v0 = [-1073741824,536870912,-32244,1110659237,-1592,-19547,-18303,54796,9];
const v1 = [65537,-31730,1,2147483649,4294967296,26336,-399913997];
function f2() {
    const v3 = [v0,v0,v0,v1,v0];
    return [v1,v3,[v3,v3,v3,v0,v3]];
}
v1.toString = f2;
for (let i = 0; i < 10; i++) {
    v1[v1];
}
const o7 = {
    ...v0,
    __proto__: v0,
};
[-65536,-1905467664];
o7.constructor;
Uint16Array[1] = v0;
new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
const v19 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
v19.toString = f2;
const v20 = [601759695];
const v21 = [1073741824,1073741823,1376142744,1073741825];
function f23(a24, a25, a26, a27) {
    const v30 = new Float32Array(6);
    const v33 = new Int32Array(8);
    v33.set(v30);
    const v35 = a26 | a26;
    arguments[2] = arguments;
    function f37() {
        const v39 = ("Vre").toLocaleUpperCase;
        let v40;
        try { v40 = v39(a26, "Vre", a24, v39); } catch (e) {}
        const v42 = ("Vre").fixed(v40, -4294967297n, a24).codePointAt();
        let v44 = -268435456;
        const v45 = v44--;
        const o68 = {
            "c": -4294967297n,
            [522675525n](a47, a48) {
            },
            ..."Vre",
            "maxByteLength": -128,
            "arguments": v20,
            [v42]: -1547267477n,
            __proto__: a26,
            "d": v45,
            "e": -4294967295,
            "h": -128,
            valueOf(a50, a51) {
                return this;
            },
            ...v21,
            "f": v35,
            "a": v40,
            ...arguments,
            ...v19,
            "e": v35,
            "e": v44,
            "maxByteLength": -4294967295,
            "arguments": v19,
            ...v20,
            "type": "Vre",
            ..."Vre",
            valueOf(a53, a54) {
                return a53;
            },
            ..."Vre",
            "c": v44,
            "type": "Vre",
            "type": "Vre",
            [v19](a56, a57, a58) {
            },
            o(a60) {
                const o62 = {
                };
                gc(o62);
            },
            "type": "o",
            "type": "129",
            toString(a65, a66, a67) {
                return -128;
            },
        };
        return arguments;
    }
    f37();
    %OptimizeFunctionOnNextCall(f37);
    return a26;
}
for (let v70 = 0; v70 < 5; v70++) {
    f23(v20, v70, v70);
}
new Uint32Array(255);
const o79 = {
    2321852491: "object",
};
function f80() {
    return f80;
}
new Float32Array(19);
new Uint8Array(256);
const v86 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v87 = [601759695];
const v88 = [1073741824,1073741823,1376142744,1073741825];
function f89(a90, a91, a92, a93) {
    const v96 = new BigUint64Array(10);
    function F97() {
        if (!new.target) { throw 'must be called with new'; }
        try {
            Object.defineProperty(v96, 0, { writable: true, value: 4096 });
        } catch(e100) {
        }
    }
    new F97();
    const o109 = {
        ...v86,
        ..."Vre",
        "c": a93,
        84: arguments,
        ..."Vre",
        valueOf(a107, a108) {
            return a92;
        },
        ..."Vre",
        4: "-1073741824",
        5: -4294967295,
        6: -268435456,
    };
    %OptimizeFunctionOnNextCall(arguments);
    try { v88["find"](..."find", a93, ...v87, ...v88); } catch (e) {}
    return a91;
}
for (let v112 = 0; v112 < 10; v112++) {
    f89();
}
%OptimizeFunctionOnNextCall(f89);
f89();
