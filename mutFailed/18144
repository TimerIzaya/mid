let v2 = 1000.0;
class C3 {
    static [2.0];
    static o(a5) {
        if (this === a5) {
            super.a;
        } else {
            try {
                function f8(a9, a10) {
                    return f8;
                }
                function F11() {
                    if (!new.target) { throw 'must be called with new'; }
                    try {
                        for (const v16 of Array(19793)) {
                        }
                        switch (f8) {
                        }
                    } catch(e17) {
                    }
                }
                new F11();
                this.h = a5;
            } catch(e19) {
            }
        }
        return 2.0;
    }
}
const v20 = new C3();
const v21 = new C3();
new C3();
const v23 = [8.360030709333259,416819.70671931445,1000.0,-1.0513464134302462e+307,2.2250738585072014e-308,-999.1393293497049];
v23.length = 1;
const o27 = {
    set c(a26) {
    },
};
class C28 {
    static f = v2;
    constructor(a30) {
        function f31() {
        }
        const v32 = f31();
        const v33 = [];
        function F34(a36, a37, a38) {
            if (!new.target) { throw 'must be called with new'; }
            a36 === a37;
        }
        function f40() {
            const v41 = new F34();
            const t51 = v41.constructor;
            new t51(v32, v33);
            const t53 = v41.constructor;
            new t53();
        }
        const v46 = f40();
        try {
            super.p(a30, v46, v46, this, 1);
        } catch(e48) {
        }
        try {
            v20.valueOf = C28;
        } catch(e49) {
        }
        %OptimizeFunctionOnNextCall(f40);
        f40();
    }
    [v2];
    toString(a52, a53, a54) {
    }
    valueOf(a56, a57, a58, a59) {
        Object.defineProperty(this, 2, { writable: true, enumerable: true, value: v20 });
        a57[65535];
        const v64 = ~-2;
        -(-2);
        v2 - v2;
        ~v64;
        v2++;
        return v20;
    }
    static 1073741823 = v21;
    f = 0.8488084189503091;
    static #e = v2;
    static #h = v23;
    static [v2];
}
new C28();
new C28();
const v71 = [-4529,-56036,4294967295,256,-256];
const v72 = /a\P{Any}/gvis;
const v73 = /a\bc/umsy;
class C74 {
    constructor(a76) {
        for (let v77 = 0; v77 < 160; v77++) {
            function f78() {
                if (a76) {
                    function F79(a81, a82, a83, a84) {
                        if (!new.target) { throw 'must be called with new'; }
                    }
                    new F79(this, this, a76, v77);
                    new F79(v73, this, v72, C74);
                    new F79(a76, v71);
                } else {
                    new f78();
                }
            }
            f78();
        }
    }
}
new C28();
const v91 = [Infinity];
function f92(a93, a94) {
    const o96 = {
        __proto__: Set,
        ...Set,
    };
    return v91;
}
v91[Symbol.toPrimitive] = f92;
class C99 {
    [v91];
}
new C99();
