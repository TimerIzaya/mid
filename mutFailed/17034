class C3 {
    static #d = "p";
    constructor(a5) {
        a5[16] |= a5;
    }
    1322;
    static {
        for (const v7 in "p") {
            const v8 = v7 - "p";
            try { new this(1073741824, v8, v7); } catch (e) {}
        }
        const v10 = super.c;
        const v12 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
        for (let v13 = 0; v13 < 5; v13++) {
            v12[v13] = C3;
        }
        try {
            v10.__proto__ = v10;
        } catch(e14) {
        }
    }
}
new C3(2.600180835920619e+307);
Date.UTC(2.600180835920619e+307);
try {
    Date.fuck(Date, Date, Date, Date, Date);
} catch(e19) {
    function f20(a21, a22, a23, a24) {
        return Date;
    }
}
const v25 = new C3("p");
new C3(v25);
[-1000000000.0,-577421.7618623121,-1000.0,-1000000000.0,Infinity,-635919.8949618437];
[836145.7327525846,13881.158768098452,0.822865135910639,1.6991143248038778e+308,0.7691502659157318];
[0.6684095445066277,1.1071103604034318e+308,-1.6083443317290347e+308,-1.4361941950964426e+307,-5.350921774480235,-1.0,-1000000.0,-Infinity,-3.0];
function f33() {
    return 2147483647;
}
function F35() {
    if (!new.target) { throw 'must be called with new'; }
    this.g = 1469121131;
}
const v38 = new F35();
const v39 = new F35();
const v40 = new F35();
v40.g = v40;
function f41(a42, a43) {
    a42.b = a42;
    const v44 = a43.g;
    v44 != v44;
    const o54 = {
        set c(a47) {
            new F35();
        },
        [-2]: a42,
        get h() {
            /[]ba{12,3bd(x)(x)(x)\4*/imsy;
            /\p{Script_Extensions=Greek}tA(?:a+)*/vdim;
            const v52 = /a{12,3b/disy;
            try {
                a42.f = v52;
            } catch(e53) {
            }
            return v38;
        },
        "d": F35,
        "b": v38,
        ...v39,
        "h": a42,
        "g": v39,
    };
    return o54;
}
f41(v38, v38);
f41(v40, v39);
f41(v38, v40);
-10;
let v62 = 1000000.0;
v62++;
const v66 = new Int16Array(4096);
let [v67,v68,,...v69] = v66;
const v72 = new BigInt64Array(205);
const v75 = new Uint16Array(256);
const v76 = v72[205];
const v80 = new Float64Array(255);
function F81(a83, a84, a85, a86) {
    if (!new.target) { throw 'must be called with new'; }
    a84 >> a84;
    a86 | a86;
    v80.b = a84;
    for (const v89 of v75) {
        v76?.h;
    }
}
const v91 = new F81(255, 256, 255);
const v92 = [-1000000000.0,5.0,872297.1015869486,-1e-15,0.2087529151028652];
const v93 = /(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/u;
const v94 = [Infinity];
const v95 = [2.2250738585072014e-308,1.949684848262672,4.0];
const v96 = v95.push(v93);
const v98 = ([342.12300421344116,0.3998304334347528,-1.5569468467414895e+308,929110.7069466491,0.8403359879371063,928.8415619105033,5.0]).toStringTag;
let v99;
try { v99 = v94.every(v98, v91); } catch (e) {}
const v100 = new F81(v98, v99, v99, v96);
const t105 = v100.constructor;
new t105(-9007199254740991, v92, v95);
const v105 = [F35];
const v106 = [v105,v105,v39,10,-773569.6068609683];
v106.e = v106;
[-773569.6068609683,v106];
function f108() {
}
const v109 = /a\sc?/gdi;
v109.b = v109;
const v110 = /xe+/gudimsy;
v110.dotAll = v110;
const v111 = /i(?<a>(?<b>(?<c>(?<d>.).).).)/gvisy;
-1582101658 | -1582101658;
-1582101658 / -1582101658;
const o119 = {
};
o119.h = 58;
function F120() {
    if (!new.target) { throw 'must be called with new'; }
}
const t126 = "YPzzJ";
t126[2] = "YPzzJ";
let v123;
try { v123 = ("YPzzJ").toLocaleUpperCase(); } catch (e) {}
try { v123.match(v111); } catch (e) {}
let v125;
try { v125 = v123.normalize(); } catch (e) {}
try { v125.fontsize(F35); } catch (e) {}
let v128;
try { v128 = ("1").normalize(); } catch (e) {}
const v129 = ("1")?.slice;
try { new v129(2, 2); } catch (e) {}
let v131 = 1236059864;
v131--;
const v133 = v131 >>> v131;
v133 & v133;
v131 + v131;
const v136 = [];
const t144 = [v136];
const v138 = delete t144[0];
!(!v138);
let v141 = 129;
v141++;
const v143 = ("1")[0];
try { v143.sup(); } catch (e) {}
const v145 = v143.substring(v141);
try { v145.trimEnd(); } catch (e) {}
try { v145.fontsize(v109); } catch (e) {}
9569 ^ 9569;
function f151() {
    function f152(a153) {
        return 9569;
    }
    class C154 extends f152 {
    }
    try { C154(); } catch (e) {}
    C154.name = C154;
    let v157 = 268435440;
    v157--;
    try { ("cJ").charAt(f151); } catch (e) {}
    let v161;
    try { v161 = ("cJ").padStart(); } catch (e) {}
    try { v161.codePointAt(); } catch (e) {}
    const o171 = {
        "d": v157,
        "a": 4.0,
        [v143](a164, a165, a166) {
            Object.defineProperty(v111, v138, { enumerable: true, value: -1707622606 });
            return 4.0;
        },
        "b": v145,
        __proto__: "cJ",
        "f": "cJ",
        ..."cJ",
        8: f151,
        "h": "cJ",
        valueOf(a168) {
            const o169 = {
                __proto__: this,
                2261555780: "cJ",
            };
            super.toStringTag;
            return this;
        },
        "c": "cJ",
    };
}
const v172 = f151();
const v173 = f151();
const v174 = f151();
const v175 = [v174,v172,v173,v173];
try { v175.shift(); } catch (e) {}
const v177 = [v136];
let v178;
try { v178 = v177.reduce(9569); } catch (e) {}
const v179 = [v174,v177,v177,v175];
const v180 = v179?.reduce;
v180.length = v180;
let v181;
try { v181 = new v180(-9007199254740990); } catch (e) {}
const v182 = [-54486,11,9007199254740991,268435456,536870912,1073741823,255,1073741824,-2147483648,-3];
const v183 = [2033313755,-16,16,16,-24747,6,256];
const v184 = v183[5];
v184 >> v184;
const v186 = [65535];
const v187 = v186[0];
v187 + v187;
const v191 = Set.prototype?.keys;
try { new v191(); } catch (e) {}
new Set();
function F194(a196, a197, a198) {
    if (!new.target) { throw 'must be called with new'; }
    a198[1];
    this.length = this;
    const v200 = this?.__defineGetter__;
    try { v200(a197, F35); } catch (e) {}
    try { v200(v110, F194); } catch (e) {}
    let v203;
    try { v203 = a197.entries(); } catch (e) {}
    try { v203.next(); } catch (e) {}
    this.f = a197;
}
try { new F194(v133, v181, v178); } catch (e) {}
try { new F194("1", v141, "1"); } catch (e) {}
F194.prototype;
const v208 = new F194(v175, v186, v179);
try { v208.hasOwnProperty(v175); } catch (e) {}
const v210 = new F194(v183, v175, v186);
v210.length = v182;
v210.length = v210;
try { v128(); } catch (e) {}
new f151();
-65535 & -65535;
-40695 === -40695;
const v218 = [9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
v218.g = v218;
new Float32Array(2427);
9007199254740991n * 9007199254740991n;
function F224(a226, a227) {
    if (!new.target) { throw 'must be called with new'; }
    const v228 = this.constructor;
    try { v228.toString(); } catch (e) {}
    try { new v228(v182, this); } catch (e) {}
}
F224.g = F224;
for (let v232 = 0; v232 < 5; v232++) {
}
v133 < v133;
class C234 {
}
const v235 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
const v236 = /(?:a*)+q(?<a>.)/guds;
function f237(a238) {
    const v239 = v235.constructor;
    try { v239.isArray(v236); } catch (e) {}
    a238.constructor.$2.replaceAll(C234, v67);
    return f108;
}
for (let [i249, i250] = (() => {
        function f245(a246, a247) {
            return v182;
        }
        return [0, 10];
    })();
    (() => {
        const v251 = i249 < i250;
        !v251;
        return v251;
    })();
    (() => {
        i250--;
        const v257 = Symbol.toPrimitive;
        const o261 = {
            [v257]() {
                v257["isArray"]();
            },
        };
    })()) {
    for (let v264 = 0; v264 < 10; v264++) {
        f237(v236);
        function f266() {
            const o267 = {
                "c": v264,
            };
            return v264;
        }
    }
}
268435440 % 268435440;
