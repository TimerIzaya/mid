function f3(a4) {
    const o10 = {
        [a4]: -51029n,
        "h": 16n,
        m(a6) {
            return a4;
        },
        [-51029n]: a4,
        ...a4,
    };
    return o10;
}
const v12 = f3(f3(-51029n));
f3(16n);
class C14 extends f3 {
    b;
    static set f(a16) {
        a16[3379321353] = a16;
        new Int32Array(4);
        new Int16Array(9);
        new Uint8Array(1948);
        super[f3];
        const o27 = {
            "call": f3,
            "defineProperty": f3,
            "deleteProperty": f3,
            "ownKeys": f3,
            "preventExtensions": f3,
        };
        new Proxy(v12, o27);
    }
}
new C14();
new C14();
new C14();
const v36 = new Set();
v36["delete"](839612.5677247904);
const v40 = new Float64Array(127);
(127).constructor;
const v44 = new Int8Array(1073741823);
-Infinity;
5 || +16n;
Math.asinh(16n);
let v51 = 9223372036854775807;
v51 = 65536;
1024 >>> 1024;
try { new Uint32Array(1024, Uint32Array, 127); } catch (e) {}
new Uint32Array(1024);
Float64Array.e = Float64Array;
const v60 = new Float64Array(159);
try { v60.filter(Float64Array); } catch (e) {}
[v60];
[v40];
[Float64Array,Uint32Array,159,127];
Object.defineProperty(v36, [1000000000.0,-1000.0], { writable: true, enumerable: true, set: f3 });
try {
    v44.__proto__ = "delete";
} catch(e66) {
}
function F67(a69, a70) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.hasOwnProperty(a69); } catch (e) {}
    const v72 = this.constructor;
    try { new v72(); } catch (e) {}
    a69--;
    a69 & a69;
}
function f76(a77) {
    return a77;
}
class C78 extends f76 {
    [1024] = Float64Array;
    [1073741823];
}
new F67();
("29753").replaceAll("29753", "b").split("b");
("boolean").split("toString");
function f87(a88, a89, a90) {
}
function f91(a92, a93, a94, a95) {
}
const v98 = new Uint8ClampedArray(104);
v98.toLocaleString().toLocaleLowerCase();
