let v0 = 8;
const v2 = new Float32Array(v0);
const v5 = new Float32Array(1);
const v8 = new Uint8ClampedArray(512);
try {
    v8.toString = 1;
} catch(e9) {
}
class C11 extends Float32Array {
    static 11 = 1;
    #toString(a13, a14, a15) {
        for (let v17 = 0; v17 < 14; v17++) {
            v0 = 1;
            super.subarray(a15, a15);
        }
        try { a15(Float32Array, a13, ...v5, a13, ...this); } catch (e) {}
        return v2;
    }
    178;
    [v5] = v5;
    static #a;
    static [v2];
}
new C11();
new C11();
new C11();
new Int8Array(45);
new Int16Array(7);
new BigInt64Array(128);
Math.asin();
