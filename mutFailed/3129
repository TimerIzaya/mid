new Map();
new Int8Array(-45057);
new Float64Array();
const v10 = [7.895936766173735e+307,0.2973474028453875,-2.2250738585072014e-308,-2.0,-2.2250738585072014e-308,5.0];
[0.4982175607076369,640.318117206865];
const v12 = [0.011032462598527526,-5.0,0.30043159431249944,36951.7125071981,750.7026340724424,587586.7623990341,-Infinity,-677693.8443948717];
function F13(a15, a16, a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -9;
    } catch(e19) {
    }
    try {
        this.g = v12;
    } catch(e20) {
        try {
            this.d = Map;
        } catch(e21) {
        }
        ([13,-2103725161,15240,-9223372036854775807,1077763702,256,-1024,9,1073741823,-2]).copyWithin(8, -268435456, 38836);
    }
    try {
        this.h = -1552093260;
    } catch(e26) {
    }
}
const v27 = new F13(v10, v12, Map, 38836);
new F13(Map, v10, v27, -9);
new F13(-1552093260, v12, F13, -9);
const v30 = [0.00952483356421907,-3.0,2.220446049250313e-16];
function f31() {
    return f31;
}
function f32(a33) {
    return a33;
}
Object.defineProperty(v30, 1, { get: f31, set: f32 });
function f34() {
    return v30;
}
class C35 extends f34 {
}
const v36 = new C35();
delete v36[1];
