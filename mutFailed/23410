const v0 = /(a)/vdimy;
const v1 = /pB/dsy;
const v2 = /A/gvim;
function f3() {
    return v2;
}
function f6(a7, a8) {
    new Map();
    return v1;
}
Uint32Array[Symbol.toPrimitive] = f6;
new Uint32Array(1020);
const v16 = new Uint8ClampedArray(1);
new Uint16Array(1538);
class C20 extends Uint8ClampedArray {
    c;
    constructor(a22, a23, a24) {
        super(a24, a24, a23);
        const o25 = {
            [v16]: 1538,
            [Uint32Array]: a23,
        };
        o25.push = a22;
        try { o25.push(a22); } catch (e) {}
        const o27 = {
            "construct": f3,
            "defineProperty": f3,
            "get": f3,
            "has": f3,
            "isExtensible": f3,
            "preventExtensions": f3,
        };
        new Proxy(v0, o27);
    }
}
new C20(v2, 1, 1538);
new C20(v2, 1020, 1);
new C20(v2, 1020, 1538);
const v33 = -Infinity;
function f34() {
    const o35 = {
    };
    function f36(a37) {
        delete o35?.g;
    }
    Object.defineProperty(o35, "a", { writable: true, set: f36 });
    return o35;
}
const v39 = f34();
v39.a = v39;
const v40 = f34();
v40[4] = v40;
for (let v41 = 0; v41 < 25; v41++) {
    const v42 = [601759695];
    function f43() {
        return C20;
    }
    function f44(a45) {
        const v47 = [-1000.0,1000000.0,2.220446049250313e-16,614071.3005355855,-1.0,2.220446049250313e-16];
        v47[301] = -536870912;
        const o48 = {
        };
        new Proxy(v47, o48);
    }
    Object.defineProperty(v42, 3, { configurable: true, enumerable: true, get: f43, set: f44 });
    const v51 = [1073741824,1073741823,1376142744,1073741825];
    function f52(a53, a54, a55, a56) {
        a53[4] = a54;
        a54[4] = 1;
        a54.h = a54;
        a53[4] = a54;
        a54[4] = v33;
        const v57 = v42.e;
        try { v57(); } catch (e) {}
        try { v51["find"](..."find", a56, ...v42, ...v51); } catch (e) {}
        return a54;
    }
    for (let v61 = 0; v61 < 5; v61++) {
        f52(v39, v40);
    }
    Object.defineProperty(v2, 10, { writable: true, configurable: true, value: v33 });
    try {
        f52(f3, v42, v39, 1977n);
    } catch(e65) {
    }
}
