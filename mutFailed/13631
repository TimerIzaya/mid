[];
const v1 = /a^((((.).).).)+/gvms;
const v2 = /dAza[a][\cZ]*/guims;
const v3 = /a.1\p{gc=Nd}+/gdm;
const v4 = [2.220446049250313e-16,-4.0,-1.0,0.7209136314753585,-8.575314743632372,-1e-15,-0.0,334925.40747593483,3.0,0.0];
const v5 = v4?.at;
try { new v5(v4); } catch (e) {}
const v7 = [3.0,-184.62913401985918,1000000000.0,Infinity,-5.6996411495737,-Infinity];
const v8 = [1.7582298349231913e+308,724418.2444085944,-1e-15,-508565.42549427797,-1000000000.0,1.0,-165744.0863009363,-4.0,0.7614977237661334];
function f9(a10, a11, a12, a13) {
    with (v2) {
        sticky = v4;
        a13 %= a10;
    }
    v7 && 2.2975988167126253;
    (v3 - a12) || v7;
    a12 % -32644;
    Math.max(-32644);
    for (const v23 in "5amlK") {
        ("5amlK")[v23];
    }
    return a12;
}
const v25 = f9?.constructor;
try { new v25(v2); } catch (e) {}
f9.prototype;
const v28 = v8?.constructor;
try { new v28(v7, v7, v8, f9); } catch (e) {}
let v31;
try { v31 = new Set(); } catch (e) {}
try { v31.add(v31); } catch (e) {}
new v5();
Number.isFinite(Infinity);
class C40 {
    #d = C40;
    static {
        this.f = this;
        try {
            this.#d;
        } catch(e43) {
            e43.a = e43;
        }
    }
    9 = 4096;
}
try { new v5(); } catch (e) {}
C40.d = C40;
-0;
const o54 = {
    get d() {
        this[0] /= 4294967296;
        let v50 = -908890636;
        return Math.log(this & --v50);
    },
    [0]: 4294967296,
    "g": Set,
    __proto__: v7,
    "c": C40,
    "h": v1,
};
try { o54.some(4096); } catch (e) {}
