const v1 = new Set();
const v2 = [0.0,-2.2250738585072014e-308,-1.0,1.7976931348623157e+308,2.5826953980390535e+307,-1.7976931348623157e+308,1.1845007540257018e+308,3.0];
const v3 = [0.7246047481874776,763.8771254954531];
const v4 = [975856.8400385722,1000000000000.0,0.4319039275098646,142711.8821163692,-906992.6780861341,-1000.0,49.76666950138497];
class C5 {
    [v1];
    g;
    d = v1;
    static 1 = Set;
    h;
    static {
        v2.length;
        function f8(a9) {
            return Set;
        }
        class C10 extends f8 {
            static #f = Set;
        }
    }
}
function f11(a12, a13) {
    function f14() {
        return f14;
    }
    return C5;
}
C5.toString = f11;
const v15 = new C5();
const v16 = new C5();
const v17 = new C5();
class C21 extends Set {
    constructor(a23, a24, a25, a26) {
        super(a23);
        const v27 = super.size;
        super[v27] = a23;
        try {
            v2.indexOf(12n, v27);
        } catch(e30) {
        }
    }
    #g = Set;
    static [C5];
    static [v1] = v3;
}
new C21(v3, v2, v17, v15);
new C21(v3, v3, v17, v17);
new C21(v4, v3, v16, v17);
new Float32Array([10000]);
