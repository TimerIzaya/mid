try { (9).blink(); } catch (e) {}
try { ("-1723624938").slice(9, "g"); } catch (e) {}
let v7;
try { v7 = ("-1723624938").trimStart(); } catch (e) {}
const v10 = 1589267549 != 1589267549;
-2147483647 >> -2147483647;
-2147483647 - -2147483647;
class C18 {
    ["sl54"];
    constructor(a20, a21) {
        try { v10.sup(); } catch (e) {}
        a20 + a20;
        a20 &&= -2147483647;
    }
    ["-1723624938"] = "g";
    static #c;
    static b;
    set b(a25) {
        let v26;
        try { v26 = a25(-2147483647, "g"); } catch (e) {}
        let v27;
        try { v27 = new v26("maxByteLength", a25, v26, "g"); } catch (e) {}
        function F28(a30, a31) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = "sl54";
            } catch(e32) {
            }
            try {
                this.a = a30;
            } catch(e33) {
            }
        }
        new F28("maxByteLength", "__proto__");
        new F28("__proto__", v27);
        new F28("sl54", this);
    }
}
new C18(9, "maxByteLength");
const v38 = new v7(9, "valueOf");
v38.f = v38;
new C18(1589267549, "g");
const v40 = [127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649];
-2.220446049250313e-16;
const v45 = v40.toSpliced(-1148418937, -1148418937, 2.220446049250313e-16, 2.220446049250313e-16, "-4");
try { v45.group(v45); } catch (e) {}
