const v5 = new Int16Array(2);
new BigUint64Array(3149);
new Float64Array(255);
class C12 extends Float64Array {
    constructor(a14, a15) {
        super(a14, 2, a14);
        super.byteLength = v5;
        super["c"] = Float64Array;
    }
    get c() {
        function f17(a18, a19, a20) {
            const o21 = {
                [a20]: "c",
                __proto__: "c",
                5: this,
            };
            return o21;
        }
        f17(3149, 255, 2);
        f17(3149, 255, 3149);
        f17(2, 2, 255);
        return Float64Array;
    }
}
new C12(2, "-12");
new C12(2, "-12");
new C12(2, "c");
const v28 = /[\ca]/ms;
const v30 = Symbol.isConcatSpreadable;
const t29 = "b";
t29[v30] = v30;
function f31() {
    function f32(a33) {
        try {
            const o34 = {
            };
        } catch(e35) {
        }
    }
    try {
    } catch(e36) {
    }
}
function f39(a40, a41) {
    const o50 = {
        get h() {
            const v43 = new f39(f39, f39, f39, f39);
            for (let v44 = 0; v44 < 25; v44++) {
                v43["p" + v44] = v44;
            }
            return a41;
        },
        [a41]: 4,
        2778757984: a40,
        "h": 4,
        toString(a48, a49) {
            a48 *= v30;
            return Float64Array;
        },
        __proto__: f31,
    };
    return 4;
}
f39(f39, f39);
f39(v28, -65535);
