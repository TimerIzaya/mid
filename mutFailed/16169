class C3 {
    constructor(a5, a6) {
        super.b = "f";
        super["f"] = this;
        const t4 = "f";
        t4[2] = this;
        ("boolean").split("toString");
        let v12 = "atan2";
        v12++;
        Float64Array[2] = v12;
        new Float64Array(Float64Array);
        new Uint32Array(5);
        let v19 = 10;
        for (; v19--;) {
        }
        new Int8Array(347);
        new Float32Array(128);
    }
}
const v25 = new C3(C3, 536870887);
function f26(a27, a28, a29, a30) {
    [-3.942521664036782e+307,-3.942521664036782e+307,[]];
    return -3.942521664036782e+307;
}
const v34 = new C3(0.40040275536036574, v25);
try {
    const o37 = {
    };
    Worker("2140550028", o37);
} catch(e39) {
}
const v40 = new C3(C3, C3);
function F41(a43, a44, a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = v40;
    } catch(e47) {
    }
    try {
        const v49 = [1321234440,-2012385285,503280511,-65535,-50525,1929142229];
        try {
            v49.sort(-5);
        } catch(e51) {
        }
        this.h = a43;
    } catch(e52) {
    }
    const v53 = /5mxyz{0,1}?/gimsy;
    const v55 = new Int16Array(v53);
    const v57 = new BigUint64Array();
    const o58 = {
        __proto__: v53,
    };
    for (let v59 = 0; v59 < 25; v59++) {
        const v60 = v57.byteLength;
        v55[v60] += v60;
        o58[65536];
    }
}
const v62 = new F41(v25, v40, v34, v40);
new F41("f", v62, C3, v62);
new F41(v25, "f", v34, v40);
class C66 extends Array {
}
new Uint8Array(536870887);
v34.constructor;
2105444095n / 2105444095n;
const v72 = new C66();
v72.push(Array);
