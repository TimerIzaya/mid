[];
const v3 = new BigUint64Array(5);
1519 - 1519;
const v6 = 1519 >> 1519;
~v6;
new BigInt64Array(1519);
let v10 = 2785;
Int8Array.BYTES_PER_ELEMENT = Int8Array;
const v12 = new Int8Array(v10);
try { ("oeom").codePointAt(v3); } catch (e) {}
try { ("oeom").fixed(); } catch (e) {}
class C17 {
    static #e = "d";
    constructor(a19, a20, a21) {
        this[584];
        const v23 = v3.__proto__;
        try { v23.reverse(); } catch (e) {}
        v10 = a21;
    }
    #d = Int8Array;
    static 4;
    8;
    static h = "d";
    584 = "d";
    #a;
}
const v25 = new C17();
const v26 = v25[584];
let v27 = v25?.constructor;
let v28;
try { v28 = new v27(); } catch (e) {}
C17 - BigInt64Array;
%VerifyType(1519);
const v31 = [v26,C17];
Reflect.apply(v3.findIndex, "oeom", v31);
v28[584] = v28;
const v34 = new C17();
v34[584];
const v36 = new C17();
v36[584] = v36;
try {
} catch(e37) {
    eval("");
}
const v42 = v36[584];
const v43 = v42?.toLocaleUpperCase;
try { new v43(); } catch (e) {}
v12[268435439] = "d";
let v45 = v36.__proto__;
const v46 = v45?.constructor;
try { new v46(BigUint64Array, v6, v12); } catch (e) {}
v45 = "d";
v27 = BigInt64Array;
var c = v12;
Uint8ClampedArray.d = Uint8ClampedArray;
new Int16Array(2308);
function f53() {
    return BigInt64Array;
}
v46[Reflect] += v10;
Math.cosh(v42);
Math.pow(v42, -1870260182);
-1870260182 | -1870260182;
try { gc(); } catch (e) {}
try { ("async").sup(); } catch (e) {}
try { ("async").sup(); } catch (e) {}
const o65 = {
    "execution": "async",
    "type": "minor",
};
gc(o65);
gc();
