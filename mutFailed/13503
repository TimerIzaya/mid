[46783.45086792763,-129722.66066259588,1.0,4.1288451945678613e+306];
[-5.4023035812777565,-3.0,-268.52847968222454,1000.0,869.6426866841778];
const v2 = [Infinity,2.2250738585072014e-308,-9.73859520784204e+307,6.018050590208222];
1n ^ 1n;
let v6 = -1024n;
v6--;
let v9;
try { v9 = ("-1452957787").toWellFormed(); } catch (e) {}
try { v9.toUpperCase(); } catch (e) {}
try { ("a").isWellFormed(); } catch (e) {}
new TypeError(536870889);
let v18 = 2147 >>> 2147;
v18--;
new Int32Array(2147);
Uint32Array.BYTES_PER_ELEMENT;
Uint32Array.prototype = Uint32Array;
new Uint32Array(1);
2136873598 !== 2136873598;
const v28 = (2136873598).constructor;
v28.MAX_VALUE = v28;
let v29;
try { v29 = v28.isSafeInteger(v28); } catch (e) {}
!v29;
const v32 = v28(v2, "p").toExponential();
try { v32.strike(); } catch (e) {}
class C34 {
}
([1321234440,-2012385285,503280511,-65535,-50525,1929142229]).sort(-5);
