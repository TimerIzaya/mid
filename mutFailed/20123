class C3 {
    static #p(a5) {
        super.c = 3.616089258587687e+307;
        Reflect.construct(a5, [Reflect,Reflect,3.616089258587687e+307,a5,"getOwnPropertyNames"], a5);
        return "getOwnPropertyNames";
    }
    static #o(a10, a11) {
        Object.defineProperty("Ki4rc", 3.616089258587687e+307, { enumerable: true, value: "Ki4rc" });
        [a11,"getOwnPropertyNames","getOwnPropertyNames"];
        [3.616089258587687e+307,NaN];
        [3.616089258587687e+307,4.218142798498963];
        return 3.616089258587687e+307;
    }
}
const v18 = new C3();
const v19 = new C3();
const v20 = new C3();
function f21() {
    return v20;
}
class C22 {
    static #b;
    constructor(a24, a25, a26) {
        Object.defineProperty("Ki4rc", 1073741824, { writable: true, configurable: true, value: this.c });
        let v29 = -2128395276;
        const v31 = --v29;
        Math.ceil(v29);
        Math.tanh(v29 + v31);
        function F35() {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.c = 15;
            } catch(e38) {
            }
            try {
                this.MAX_VALUE = 15;
            } catch(e39) {
            }
            try {
                this.e = 15;
            } catch(e40) {
            }
        }
        new F35();
        const v42 = new F35();
        const v43 = new F35();
        v43.MAX_VALUE;
        try { new Int16Array(F35, F35, v42); } catch (e) {}
        new Int16Array(3);
        const v51 = new Float64Array(8);
        try { v51.reduce(3); } catch (e) {}
        new Int16Array(1122);
        class C58 {
            constructor(a60, a61) {
                a60 ^ a60;
                const v63 = this.constructor;
                try { new v63(a60, v63); } catch (e) {}
                a61 <= a61;
            }
        }
        new C58(-2);
        new C58();
        Math.cos(-267);
    }
    static #a;
}
const v69 = new C22(C22, v20, v18);
const v70 = new C22(v20, v69, v69);
new C22(v19, v70, v18);
function f72() {
    return v70;
}
new Map();
const v78 = new Int16Array(2);
v78.lastIndexOf(2.220446049250313e-16);
