class C3 {
    #p(a5) {
        super.h;
        const v10 = super.b;
        a5 = v10;
        try { v10(v10, -6, "valueOf", 8n, "valueOf"); } catch (e) {}
        return -6;
    }
    constructor(a13) {
        a13 = this;
        try {
            Math.#p(a13, C3);
        } catch(e16) {
        }
        const t14 = "z8xi";
        t14[this] = "z8xi";
        const v18 = ~a13;
        ++a13;
        v18 ** 9007199254740990;
    }
    static {
        [];
        try {
            super.setInt8();
        } catch(e24) {
        }
    }
}
const v25 = new C3("z8xi");
const v26 = new C3("z8xi");
const v27 = new C3(v25);
[-268435456];
const v29 = [-4294967297,4,-1024,-1024,1176130954,35814,5,27885];
if (C3 !== v25) {
    for (let v31 = 0; v31 < 32; v31++) {
        v25["p" + v31] = v31;
    }
} else {
    try {
        const t39 = "z8xi";
        t39.valueOf = v27;
    } catch(e34) {
    }
}
const v35 = [8,-4294967297,5,-1,27725,2147483647,64,1172260962];
const v36 = ["valueOf"];
const v37 = [v25,v27,-6];
const v38 = [C3,C3,v35,v26,v37];
function F39(a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        v38.f = a41;
    } catch(e44) {
    }
}
new F39(v38, v25, v29);
new F39(v36, "z8xi", v36);
new F39(v38, v37, v27);
class C49 {
    constructor(a51, a52) {
        const v53 = this.constructor;
        try { new v53(); } catch (e) {}
        this[16] >>>= 16;
        try {
            const t64 = "z8xi";
            t64.toString = C49;
        } catch(e55) {
        }
        new Set();
    }
}
new C49();
new C49(C49, 16);
