function f6(a7, a8) {
    [536870912,1465460043];
    [-4,-10,536870888,-1219050134,-4096,0,-256,2006595060,-4096];
    [-26768,536870887,1,50569,129,255,9223372036854775807,128,-44443];
}
new Promise(f6);
const v15 = new Map(11, "clear", f6);
try { v15.has("NEGATIVE_INFINITY"); } catch (e) {}
function f17(a18, a19, a20) {
    a18 >> a18;
    a19 >>> a19;
    const o27 = {
        "b": a19,
        get f() {
            "d" | "clear";
            this.b;
            try {
                this.__proto__ = this;
            } catch(e26) {
            }
            return 2027771921;
        },
        "a": a18,
        "g": "d",
    };
    return o27;
}
let v28;
try { v28 = f17.bind("NEGATIVE_INFINITY"); } catch (e) {}
const v29 = v28;
try {
    new f17(60268n, v15, "isSealed");
} catch(e33) {
}
const v34 = f17(11, 2027771921, "NEGATIVE_INFINITY");
v34.a;
f17(11, 11, "NEGATIVE_INFINITY");
const v37 = f17(11, 2027771921, v34);
function f39(a40, a41) {
    try { a41(a41, a41); } catch (e) {}
    [39260,1008836532,9223372036854775807,9007199254740990,16,-462482202,4294967296,6,-65536,14];
    [1073741825,9007199254740991,-2046506376,1,1073741824,-9223372036854775808,1024,-16,-25403,1516577787];
    [-1912728229,9007199254740990,-50682,28664,-24689,-4294967297,461130831,536870912,-1044438976];
}
new Promise(f39);
function f48() {
    Math.cos(Math);
    return Math;
}
%PrepareFunctionForOptimization(f48);
const v51 = f48()?.log1p;
try { new v51(v37); } catch (e) {}
%OptimizeFunctionOnNextCall(f48);
const v53 = f48();
try { v53.round("NEGATIVE_INFINITY"); } catch (e) {}
