const v0 = [];
class C1 {
    static 1;
    static #f = v0;
    set h(a3) {
        for (let i5 = 0; i5 === 8; ++i5) {
            i5 % this;
            v0.__proto__;
            try { a3.any(); } catch (e) {}
        }
    }
}
new C1();
const v15 = new C1();
v15.h;
const v17 = new C1();
const v19 = ([-6,10000,536870889,-8,10,1,1073741825,-9223372036854775808,-9223372036854775808])?.flat;
try { new v19(); } catch (e) {}
[127,-441675395,1073741824,-256,-6];
[5,19603,5,30988,4294967296];
try { new Uint32Array(v17, 2036, C1); } catch (e) {}
const v26 = new Uint32Array(2036);
try { v26.with(v15); } catch (e) {}
4027 >>> 4027;
new Float32Array(4027);
new Int8Array(257);
function F35() {
    if (!new.target) { throw 'must be called with new'; }
}
class C37 {
}
const v38 = new C37();
ReferenceError.p(F35, v38);
