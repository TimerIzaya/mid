function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -969898408;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
33145n << 33145n;
55125n <= 55125n;
new Int32Array(545199051n);
v5[3] = 9007199254740991;
new Map();
function f19(a20, a21, a22) {
    const v25 = new Uint32Array(4);
    new Float64Array(v25);
    a20.b;
    const o41 = {
        "d": a21,
        set h(a30) {
            a21 &= a22;
            new WeakSet();
            const o33 = {
            };
            const v35 = new Proxy(a22, o33);
            class C36 extends v35 {
            }
            Math.atan2([-256,13351,5138,2,-4294967295,1000,268435440], -4294967297);
        },
        745: a21,
        "c": a20,
        624: v4,
    };
    const v42 = (33145n)?.propertyIsEnumerable;
    try { new v42(a21); } catch (e) {}
    return o41;
}
f19(v5, v4, v5);
f19(v6, v5, v4);
const v46 = f19(v4, v4, v5);
v46[745] = v46;
const v48 = Int8Array.prototype;
try { v48.fill(v5); } catch (e) {}
const v50 = `
    function f51() {
        return f51;
    }
`;
try { v48.reverse(); } catch (e) {}
