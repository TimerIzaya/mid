function f0() {
}
const v2 = new Map();
class C3 extends f0 {
    #h = v2;
    67 = v2;
    get h() {
        let v4 = this;
        /a*?/vdm;
        /W/disy;
        /[0ao2]/uis;
        ++v4;
        super[f0()];
        return v2;
    }
    static 512;
    [Map];
    #c = Map;
    static 8;
}
const v11 = new C3();
const v12 = new C3();
const v13 = new C3();
class C14 {
    constructor(a16, a17) {
        [a17,this,a16,this,C3];
        [this,a17,v13,a17,v2];
        [f0,C14,Map,a16];
    }
    2484123856;
    p(a22, a23, a24, a25) {
        super.b = a23;
        Object.defineProperty(C3, a23, { writable: true, enumerable: true, set: f0 });
        a23 = this;
        this[f0] &&= a25;
        return C3;
    }
    #a;
    194;
}
const v26 = new C14(C3, v12);
new C14(v12, v11);
new C14(v12, v12);
new Float32Array(v13);
new Float32Array(856);
new Float64Array(128);
function F38(a40, a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    ~a42 | a43;
    const v46 = this.constructor;
    try { new v46(); } catch (e) {}
    typeof Float32Array;
}
new v26();
new C14();
