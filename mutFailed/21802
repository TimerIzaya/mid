const v0 = [];
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v0;
    } catch(e3) {
    }
    ("stack").normalize();
    return "stack";
    class C6 {
    }
    try {
        this.h = v0;
    } catch(e7) {
    }
    try {
        this.b = v0;
    } catch(e8) {
    }
}
new F1();
try {
    v0.a = 3872;
} catch(e11) {
}
new F1();
new F1();
/w(?=.)/udimsy;
/G(foo(?!bar)bazY)/m;
/([xyz])/us;
const v17 = [-13438,-20367,-65536,-65535,-9007199254740992,-369828194,10,2036618479,-10373];
[11848,-268435456,65535,-13,2,1393879780,65535];
[9,-4096,1303,13,257,996048329,2147483647,9];
new Uint16Array(1632, Uint16Array);
gc();
const t34 = 255;
const v30 = new t34(-9340, 2147483649);
const t37 = 255;
const v31 = new t37(1073741823, v30);
function F32(a34, a35, a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
}
new F32(v30, v31, -9340, 1073741823);
new Float32Array(255);
new URIError(127);
const v45 = new Int8Array(242, v17, Int8Array);
const o52 = {
    o(a48) {
        const o50 = {
        };
        return gc(o50);
    },
};
const v53 = new Float64Array(242, 242);
const t54 = v53.constructor;
new t54(v45);
