const v3 = [-351.2356893499318,-1.737636163889043e+308,706.4854761190438,1000000000.0,0.5341763418517952,599818.8067008695,1000.0];
const v4 = [3.0,3.549082551098053,-1000.0,-378.04815259355973,-2.0,6.492430184954635,-286273.5276962245];
const v5 = [Infinity,-2.0];
function f6() {
    const v8 = new Float32Array(512);
    const v11 = new Uint8Array(1759);
    const o12 = {
        ...v8,
        ...v11,
    };
    return -9007199254740990;
}
v5[Symbol.toPrimitive] = f6;
try {
    ("m").codePointAt(-9007199254740990);
} catch(e20) {
}
const v21 = new Date();
function f22(a23, a24, a25, a26) {
    function f27() {
        return Symbol;
    }
    function f28(a29) {
        a29 = f22;
    }
    Object.defineProperty(a25, Symbol.toPrimitive, { writable: true, enumerable: true, get: f27, set: f28 });
    const o36 = {
        [a26]: a24,
        "g": v21,
        ...v5,
        "a": a24,
        1: 512,
        ...a24,
        "h": v4,
        "c": a26,
        "d": a26,
        "g": a26,
        "f": v3,
        ...a24,
        "a": v21,
        [v5]: 512,
        "b": Date,
        2063: a23,
        536870912: a25,
        get e() {
            return -56138;
        },
        "e": a25,
        ...v21,
    };
    return o36;
}
f22(v3, v4, v4, 512);
f22(v4, v5, v3, 512);
const v39 = f22(v3, v5, v5, 512);
new Int16Array(8);
const v45 = new Int8Array(70);
new Uint8ClampedArray(254);
function f52() {
    return 3.5885237423067196;
}
let v55 = 7;
new Int16Array(1746);
v39.e -= v55;
for (let v60 = 0; v60 < 32; v60++) {
    v45["p" + v60] = v60;
}
const v64 = new Uint32Array(16);
new Uint32Array(257);
v55 &&= 1073741824;
function f68(a69, a70) {
    function f72(a73) {
        try {
            new f52();
        } catch(e75) {
        }
    }
    this.onmessage = f72;
    try {
        v64.length = 1073741824;
    } catch(e76) {
    }
}
const v79 = [Uint32Array,3.5885237423067196];
const o80 = {
    "arguments": v79,
    "type": "function",
};
new Worker(f68, o80);
