class C3 {
    #f;
    #f;
    constructor(a5) {
    }
    static #h = 8;
    static p(a8, a9) {
        try {
            this.fuck(8, a8);
        } catch(e11) {
        }
        let v13 = -54836;
        const v14 = --v13;
        Math.min(v13);
        a9 ^ 8;
        -v14;
        5.0 / -2.220446049250313e-16;
        function F21(a23, a24, a25, a26) {
            if (!new.target) { throw 'must be called with new'; }
        }
        !v13;
        new Date(5.0);
        const v30 = [536870887,-42204,-17288903,-3,9007199254740991,7];
        const v31 = [6,268435440,13,1073741825];
        const v32 = [-15,-2147483649,-899333997,3,1455560807,-1024,-4294967297,2098301778];
        class C33 {
            static valueOf(a35) {
                super[a35] = this;
                v31[v32] = v32;
                return super[v32];
            }
            constructor(a38) {
                function f39(a40, a41) {
                    const o42 = {
                        "c": v31,
                        "h": a41,
                    };
                    return o42;
                }
                f39(v32, a38);
                f39(v30, v30);
            }
        }
        new C33(v31);
        return v13;
    }
}
let v46 = 10;
for (; v46--;) {
}
new C3();
const v49 = new C3();
const v50 = new C3();
class C57 {
    [-39233] = -2127350647;
    [-117.6202672056188];
    constructor(a59) {
        -268435456 || 4.0;
        Math.sign(4.0);
        +4.0;
    }
    268435439 = -39233;
    d;
    g;
    a;
}
C57.p24 = -2127350647;
const v67 = new C57(-2127350647);
let v68;
try { v68 = v49(C57); } catch (e) {}
[[v67,v68,C3,-353703860n,v68]];
[v50,9n,9n];
[8,[v49]];
new Set();
const v79 = new Uint8ClampedArray();
function f80(a81, a82) {
    const o87 = {
        [a81]: Float64Array,
        4: 6,
        "b": a81,
        [v79](a84, a85, a86) {
        },
    };
    return o87;
}
%PrepareFunctionForOptimization(f80);
12204n <= -16;
