class C3 {
    #p(a5) {
        [this,13];
        return a5;
    }
    get c() {
        Math.tanh("bigint");
        const v12 = "bigint" % "bigint";
        822380580 || v12;
        v12 << -128;
        Math.expm1(-128);
        return -(-128 && -128);
    }
}
function f18(a19) {
    class C20 {
        constructor(a22) {
            typeof arguments;
        }
    }
    return -9;
}
C3[Symbol.toPrimitive] = f18;
const v28 = new C3();
function f29(a30) {
    a30 > C3;
    try { C3["acosh"](a30); } catch (e) {}
    return "acosh";
}
v28[Symbol.toPrimitive] = f29;
const v36 = new C3();
function f37() {
    function f38() {
        function f40(a41, a42, a43, a44) {
            const o45 = {
                "e": a42,
                [a43]: 1000,
            };
            return f40;
        }
        return v28;
    }
    return f38;
}
Object.defineProperty(v36, "valueOf", { writable: true, configurable: true, get: f37 });
const v46 = new C3();
function f47(a48, a49) {
    const v54 = new Float64Array(186, 186, 16);
    [Float64Array,v54];
    return v46;
}
v46.valueOf = f47;
function f56() {
    return C3;
}
class C57 extends C3 {
    constructor(a59, a60, a61) {
        function f62(a63) {
            C3[a63] %= a63;
            f56();
            return -9;
        }
        Object.defineProperty(a59, Symbol.toPrimitive, { value: f62 });
        super();
        let v69 = -9007199254740992;
        const v70 = ++a59;
        v69++;
        Math.asin(v69);
        Math.exp(-40130);
        v70 - v70;
        ~-40130;
        ~-40130;
    }
}
const v77 = new C57(v46, v28, v36);
const v78 = new C57(v36, C57, v77);
new C57(v28, v36, v78);
new BigUint64Array(5);
const v85 = new Int32Array(1);
new Int8Array(12);
const v89 = [1.5194593916452507e+308,1.7976931348623157e+308,-655.2599062195703,383261.13963534124,-4.351354601083372];
const v90 = [-3.0767450746058422,-109930.30079491576,1.0710997738525917e+308,1e-15,-4.4029859309287245,1.2647620628346297e+308,0.6128308590917888,-1000000.0,-9.043256096114051];
const v91 = [547.1067310983665,-3.0,NaN,222205.6815515987,2.2250738585072014e-308];
function F92(a94, a95, a96) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a94;
    } catch(e97) {
        new Int32Array([-4563]);
    }
    try {
        this.b = a96;
    } catch(e101) {
    }
}
new F92(Int32Array, 12, v90);
new F92(v90, 5, v91);
const v104 = new F92(v89, 12, v89);
function f105() {
    return v85;
}
function f106(a107) {
    v36[7] = a107;
}
Object.defineProperty(v104, 65536, { get: f105, set: f106 });
v104[65536];
const o110 = {
};
o110.type = o110;
gc(o110);
