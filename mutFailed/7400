function f0() {
    const o11 = {
        "f": 128,
        n(a5) {
            super.e;
            %VerifyType(128);
            return this;
        },
        get b() {
            for (const v8 of "s5wJ") {
                try {
                    super.atan(v8, v8, v8, v8, this);
                } catch(e10) {
                }
            }
            return "s5wJ";
        },
    };
    return o11;
}
f0();
let v13 = f0();
const v14 = f0();
function F15(a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = f0;
    } catch(e18) {
    }
    try {
        this.h = v14;
    } catch(e19) {
    }
}
new F15(v13);
new F15(v14);
new F15(v13);
class C32 {
    b = -142.577867451237;
    [1000000000000.0] = -142.577867451237;
    #m(a34) {
        const v36 = Symbol.toPrimitive;
        const o58 = {
            [v36]() {
                let v37 = this;
                const v40 = ++v37;
                const v41 = 1000000000000.0 ** 1000000000000.0;
                Math & (15462 ** 15462);
                +Infinity;
                (15462 || 1000000000000.0) + -142.577867451237;
                v13--;
                +1000000000000.0;
                Math.log(v40);
                Math.sin(v41);
                try {
                    Symbol("toDateString");
                } catch(e57) {
                }
                return -142.577867451237;
            },
        };
        return this;
    }
}
const v61 = new BigUint64Array(1000);
const o62 = {
    ...v61,
};
const t68 = "symbol";
const v63 = new t68();
new C32();
new C32();
new Uint8Array(1246);
const v71 = new Uint16Array(512);
const t74 = [];
t74[6] = 4294967295;
const v76 = ReferenceError(ReferenceError);
function F78() {
    if (!new.target) { throw 'must be called with new'; }
    typeof arguments;
    gc();
}
new F78();
const t83 = v76.constructor;
new t83();
class C87 {
}
new Date();
const v91 = new Set();
v91.add(v91);
new Int32Array(1);
function f94() {
}
class C95 extends f94 {
}
new C95();
[0.0,1000000.0];
function f98() {
    let v99 = 0;
    do {
        const o100 = {
        };
        Object.defineProperty(o100, "h", { value: v63 });
        try {
            o100.h = f94;
        } catch(e101) {
        }
        try {
            const o102 = {
            };
            o102.h = f94;
            o102.f = Uint8Array;
        } catch(e103) {
        }
        try {
            const o104 = {
            };
            Object.defineProperty(o104, "h", { writable: true, configurable: true, enumerable: true, value: Uint8Array });
            o104.h = f94;
            o104.f = Uint8Array;
            o104.d = f94;
        } catch(e105) {
        }
        try {
            const o106 = {
            };
            o106.d = o106;
            o106.h = f94;
            o106.f = Uint8Array;
            o106.d = v71;
        } catch(e107) {
        }
        v99++;
    } while (v99 < 10)
    const v113 = Array(4087);
    v113[3355] = v113;
    for (const v114 of v113) {
    }
    return Array;
}
f98();
f98();
