const v3 = [9,1768667446,3,268435456];
const v4 = [536870912,15,-1606623015];
const v5 = [-3,-65536,64,7362,-33458,-1095266202,-37575,-16];
const v6 = [v5,v4,v5,v5];
["kfYF",v3,"asin"];
["kfYF",v3,v6,v3,"asin"];
257 >>> 257;
9007199254740992 / 9007199254740992;
let v20 = 15;
v20--;
const v23 = new Int16Array(v20);
try { new Uint8ClampedArray("resizable", 9007199254740992, 6); } catch (e) {}
new Uint8ClampedArray(6);
try { new Int16Array(Int16Array, v4, Int16Array); } catch (e) {}
new Int16Array(3699);
"2147483649" == "2147483649";
class C36 {
    static #p(a38) {
        function f39(a40) {
            return a40;
        }
        class C41 extends f39 {
            static [-1] = 8;
            static [a38];
            static 268435441;
        }
        const v42 = [];
        const v44 = /[a-zA-Z0-9]/gvisy;
        const v45 = /abc?/gvmy;
        v45[-2] ^= v44;
        v45.exec("Q8F");
        const t30 = "Q8F";
        t30[2078209647] = v42;
        return a38;
    }
    [0.028957958839558873];
    static {
        2 >> 2;
        for (let v52 = 0; v52 < 32; v52++) {
        }
    }
    static 2147483648 = C36;
    static #g;
    #a;
}
C36[2147483648] = C36;
function f54() {
    const o56 = {
    };
    return gc(o56);
}
f54.e = f54;
C36[Symbol.toPrimitive] = f54;
try { C36(); } catch (e) {}
const v61 = new C36();
v61.constructor = f54;
try { BigInt64Array(BigInt64Array); } catch (e) {}
-2 >>> -2;
function F66(a68) {
    if (!new.target) { throw 'must be called with new'; }
    a68 & a68;
    this.h = a68;
}
const v70 = new F66(-2);
v70.e = v70;
try { new Uint16Array(1634700948, -7, v70); } catch (e) {}
with (v70) {
    h = Uint16Array;
}
const v73 = v61?.constructor;
v73.length;
Symbol.hasInstance = Symbol;
v73[Symbol.toPrimitive] = f54;
let v77;
try { v77 = new v73(); } catch (e) {}
const v78 = v77?.constructor;
let v79;
try { v79 = new v78(); } catch (e) {}
try { v79.constructor(); } catch (e) {}
const v81 = new C36();
let v82;
try { v82 = v81.propertyIsEnumerable(C36); } catch (e) {}
v82 && v82;
!v82;
const v85 = new C36();
const v86 = v85?.constructor;
try { new v86(); } catch (e) {}
const v89 = /[\11]/gm.flags;
v89 == v89;
/(?:a*)*/gudm;
const v92 = /a(?!bbb|bb)c/vi;
v92.e = v92;
v92.toString = Symbol;
const v93 = v92?.toString;
v93.iterator = v93;
try { new v93(); } catch (e) {}
[4096];
const o100 = {
    "execution": "async",
    "type": "minor",
};
~117;
Uint16Array[0] = v73;
const v103 = new Uint16Array(Uint16Array);
let v104 = v103[1];
const v105 = v104--;
v105 >= v105;
31 + 31;
const v110 = Int32Array.name;
try { v110.toWellFormed(); } catch (e) {}
new Int32Array(31);
128 + 128;
let v116;
try { v116 = Uint32Array.toString(); } catch (e) {}
try { v116.small(); } catch (e) {}
const v118 = new Uint32Array(128);
try { v118.lastIndexOf(v118); } catch (e) {}
v118[72];
function f121() {
    let v122 = 3.4890473589784586e+307;
    v122--;
    v122 > v122;
    let v125 = 1000000000000.0;
    v125--;
    257828.6336153492 >> 257828.6336153492;
    257828.6336153492 - 257828.6336153492;
    let v131 = -4294967296;
    v131--;
    v131 >> v131;
    class C134 {
        static #m(a136) {
        }
        constructor(a138) {
            try { this.constructor(this); } catch (e) {}
            function f140() {
                return 9007199254740992;
            }
            Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f140 });
            const v141 = this?.__defineSetter__;
            try { v141.call(a138); } catch (e) {}
            try { new v141(22227, 22227); } catch (e) {}
            Float32Array.BYTES_PER_ELEMENT = Float32Array;
            new Float32Array();
            try { Uint16Array.apply(Uint16Array, "2147483649"); } catch (e) {}
            const v148 = new Uint16Array();
            const v149 = new Float32Array(v148, v131, a138);
            v149.f = v149;
        }
    }
    try { C134.constructor(6); } catch (e) {}
    const v151 = new C134(C134);
    v151.g = v151;
    const v152 = new C134(C134);
    v152.length = v131;
    let v153 = v152.length;
    v153--;
    const v155 = new C134(v131);
    const v156 = [v155,C134];
    const v157 = [257828.6336153492,v155,v151,v155,v156];
    try { v157.concat(v5); } catch (e) {}
    const v159 = [v155];
    class C160 extends C134 {
        [v151];
        #n(a162, a163, a164, a165) {
            function f166() {
            }
        }
    }
    C160.name = C160;
    const v167 = new C160();
    const v168 = v159.constructor;
    try { new v168(v23); } catch (e) {}
    class C170 extends v168 {
    }
    try { v167.m(v156); } catch (e) {}
    const o174 = {
        "e": Uint16Array,
        o(a173) {
        },
        ...v125,
    };
    return Int32Array;
}
let v175;
try { v175 = f121.bind(-7); } catch (e) {}
try { v175(); } catch (e) {}
%PrepareFunctionForOptimization(f121);
const v177 = f121();
try { v177.bind(v177); } catch (e) {}
f121();
%OptimizeFunctionOnNextCall(f121);
const v180 = f121();
v180.prototype = v180;
