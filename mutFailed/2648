const v0 = [];
const v1 = [v0];
const v2 = [v0];
const v3 = [v2];
try { v3.entries(); } catch (e) {}
try { ("description").toWellFormed(); } catch (e) {}
const v9 = v2["n"];
"description" + v3;
const t7 = "n";
t7.length += v9;
try { v0.map(v9); } catch (e) {}
v1 & v3;
const v13 = [v3,"-58536",v3,v3];
const v14 = v13?.constructor;
try { new v14(v13); } catch (e) {}
[[v0,v13,v13,v1],v13,v13,"description"];
class C19 {
}
const v20 = new C19();
const v21 = v20?.constructor;
try { new v21(); } catch (e) {}
new v20();
new C19();
for (let v25 = 0; v25 < 5; v25++) {
}
for (let v26 = 0; v26 < 5; v26++) {
    function f27() {
    }
    try { f27(); } catch (e) {}
    f27();
    %OptimizeFunctionOnNextCall(f27);
}
