class C3 {
    static toString(a5) {
        this << 1000000000000.0;
        super[this] = 3.0;
        for (let v7 = 0; v7 < 32; v7++) {
            "p" + v7;
            a5[3.0] = v7;
        }
        return a5;
    }
    4096 = 3.0;
    2147483649;
    static g;
}
new C3();
const v11 = new C3();
v11[10000] = v11;
const v12 = new C3();
class C13 {
    constructor(a15, a16) {
        a16[10000] = C3;
        const v17 = a16[10000];
        typeof v17;
        a15 === "number";
        function F21(a23, a24) {
            if (!new.target) { throw 'must be called with new'; }
            function f25(a26) {
                class C28 {
                }
                class C29 extends C28 {
                    m(a31, a32, a33) {
                        for (let [v34,v35] of "puWUt") {
                        }
                    }
                }
            }
            Object.defineProperty(this, "e", { writable: true, configurable: true, set: f25 });
            try {
                this.e = v11;
            } catch(e42) {
            }
        }
        new C3(v17, v17);
        new F21(1000000000000.0, 1000000000000.0);
        new F21(1000000000000.0, 1000000000000.0);
    }
}
C13[10000] = v12;
const v46 = new C13(v11, v11);
const v47 = new C13(v46, v11);
new C13(v47, C13);
const v52 = [12,[12,12]];
class C53 {
    constructor(a55, a56) {
        new Uint16Array(a55);
    }
}
new C53(v52);
[1024,9007199254740991,14465,-9007199254740992,7,65537,-1343154966,-32502,65535];
[7,2147483647];
[-12];
function F62() {
    if (!new.target) { throw 'must be called with new'; }
}
class C68 {
    toString(a70, a71, a72, a73) {
        let [] = "undefined";
    }
}
try { F62(..."function", 64n, 0, ...1000000000000.0); } catch (e) {}
