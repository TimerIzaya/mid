const v0 = [129,1965,7,6976,-58609,9223372036854775807,-256,-2147483647,-9223372036854775807,16];
const v1 = [-2034255524,0,-849125271,-821962593,2147483647,-606359114];
const v2 = [219132335,1073741824,-64351,268435440,6];
class C6 {
    constructor(a8, a9) {
        %VerifyType(v2);
        function F10(a12, a13, a14) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.h = a13;
            } catch(e15) {
            }
            Math.sin(-268435456);
            const o26 = {
                get a() {
                    class C20 {
                        constructor(a22, a23) {
                        }
                    }
                    eval();
                },
            };
        }
        const v27 = new F10(a8, this, -2147483647);
        new v27(a9, v1, -8);
        new F10(a8, v0, a8);
    }
}
new C6(13, v1);
new C6(-8, C6);
function F32(a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    a35 - a35;
    const v38 = this.constructor;
    try { new v38(F32); } catch (e) {}
    this.a <<= 4096;
}
new C6(13, v1);
new Int32Array(175);
new Int8Array(268435456);
function F49(a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor;
    try { new a52(); } catch (e) {}
    this.a = Uint16Array;
}
const v55 = new F49(F49, Uint16Array);
new v55(Uint16Array, Uint16Array);
