const v2 = new Uint16Array(Uint16Array, Uint16Array, 1000000.0);
v2[10000] = this - this;
function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    a11.trimLeft().strike();
    const v15 = this.constructor;
    try { new v15("a"); } catch (e) {}
}
new F9("a", "-2147483648");
const v20 = new BigUint64Array(2172);
const v21 = [];
function f22() {
    -v21;
    return f22;
}
new Uint32Array(1416);
new Float32Array([-37102.6674218484,-969411.635186719,-1.3592557640113297e+308,0.9054806195219168,1000000000000.0,-0.0,-3.0,-0.0]);
new Date(Date);
new Uint16Array(127);
function f35() {
    return f35;
}
/(?:a*)+q(?<a>.)/guds;
function f37(a38) {
    const v39 = a38.constructor;
    let v40;
    try { v40 = v39(a38, f35); } catch (e) {}
    const o42 = {
        get d() {
            return this;
        },
    };
    return v40;
}
for (let i45 = 0, i46 = 10;
    i45 < i46;
    (() => {
        i46--;
        const v53 = new v20(3768);
        function f54(a55, a56) {
            const v57 = a55++;
            v57 >> v57;
            let o59 = {
            };
            [,...o59] = v53;
            return v53;
        }
        f54(BigInt64Array, v53);
    })()) {
    for (let v63 = 0; v63 < 50; v63++) {
        f37(2172);
    }
}
