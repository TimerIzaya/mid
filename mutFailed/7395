function f0() {
}
class C5 extends Array {
}
new C5();
new Int16Array(127, 127, 127);
let v11 = 0;
v11++;
Uint16Array();
[1000000.0,1000000.0];
129 & 129;
new Uint8Array(129);
let v20 = 284;
const o21 = {
};
function F22(a24) {
    if (!new.target) { throw 'must be called with new'; }
    const v25 = [-0.685155357392599,5.0];
    function F26(a28, a29, a30, a31) {
        if (!new.target) { throw 'must be called with new'; }
        const v32 = this.constructor;
        try { new v32(a29, F22, v32); } catch (e) {}
        v25.length &= 1;
    }
    new F26();
}
v20--;
new Uint8Array(v20);
34 & 34;
new Uint16Array(34);
BigInt64Array.g = BigInt64Array;
const v45 = new BigInt64Array(2325);
for (const v46 in v45) {
}
function F47() {
    if (!new.target) { throw 'must be called with new'; }
}
new F47();
function F50() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        new F50();
        /Ckza\Wb?/vis;
        /Ma\W+/gudm;
    } catch(e55) {
    }
}
