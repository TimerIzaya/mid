let v2 = -1931389438;
let {"a":v3,"c":v4,...v5} = 1012844416;
v5.f = v5;
%VerifyType(34630);
v5[v2] = v4;
let v8;
try { v8 = new Symbol(); } catch (e) {}
const v9 = Symbol.iterator;
const o34 = {
    [v9]() {
        const v13 = -253026077 % -816409267;
        function F14() {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = v13;
            } catch(e17) {
            }
            try {
                this.b = v8;
            } catch(e18) {
            }
        }
        const t22 = [0.8307152163010869,1.0,0.0];
        t22[2] = v3;
        ([2.0,-1e-15,1.7976931348623157e+308]).flat(1351);
        const o33 = {
            next() {
                v2--;
                const v27 = 10 == 0;
                const o32 = {
                    "done": v27,
                    "value": 1012844416,
                    set h(a29) {
                    },
                    __proto__: v27,
                    set b(a31) {
                    },
                };
                return v3;
            },
        };
        return o33;
    },
};
-536870888;
7.080802337703577e+307 | 7.080802337703577e+307;
~1000000000.0;
try { Math.expm1(8.868704382732872e+307); } catch (e) {}
536870888 | -1;
-2147483648 ^ v3;
new Uint16Array(1012844416);
const v56 = new BigUint64Array(1000);
new v8(256);
try { ("255").matchAll(v56); } catch (e) {}
const t54 = "9007199254740992";
t54["255"] &= 7;
