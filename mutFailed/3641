const v7 = new Uint8ClampedArray(Date);
try {
} catch(e8) {
}
const v9 = new Uint8ClampedArray(255);
class C10 {
}
const v11 = [2.220446049250313e-16,-2.0,9.472378156545009,0.0,1e-15,0.3751557433004281,0.0,-474740.46049005154];
const o17 = {
    set h(a13) {
    },
    __proto__: v11,
    o(a15, a16) {
        return this;
    },
};
let v18 = 10;
new Float64Array();
const v23 = new Int32Array(Int32Array);
const v25 = new Uint8Array(v23);
new Uint16Array(v18);
v7.length;
v7["map"](-2147483647, Uint8ClampedArray, ...v9, Float64Array, -2147483647);
const o30 = {
};
new Proxy(v25, o30);
new Int32Array();
let v37 = 0;
class C39 {
    #b = v37;
    g = 1.1408591040999836e+308;
    static {
        this.e = this;
        this[6] = this;
        v18 <<= v37;
        try { C39(Uint16Array, C39, ...v11, 4, 255); } catch (e) {}
        Object.defineProperty(C39, 0, { get: Date });
        this + Uint8ClampedArray;
        const v46 = v37++;
        -v46;
        ~v37;
        Math.log10(44149);
        const v50 = 44149 + v37;
        v50 >> v50;
        Math.fround(v46);
    }
}
const v53 = new C39();
new Uint8ClampedArray(2);
const v55 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
const v56 = [3,-6,7268,-554513674,5,4294967295,861325878,17152,2147483647,5];
function f59(a60) {
    const o66 = {
        __proto__: 2,
        "c": 2,
        "e": 536870889,
        "d": a60,
        "f": a60,
        "g": Int32Array,
        "a": a60,
        ..."map",
        213: a60,
        ...a60,
        "g": 2,
        p(a62, a63) {
            try {
                this.fuck(536870889, a60);
            } catch(e65) {
            }
            return this;
        },
    };
    return o66;
}
const v67 = f59();
function f68() {
    function f70(a71) {
        try { o30.sort(); } catch (e) {}
    }
    this.onmessage = f70;
    new Array(4);
}
const v78 = [];
const o79 = {
    "arguments": v78,
    "type": "function",
};
new Worker(f68, o79);
f59(536870889);
f59();
f59();
function f84(a85, a86, a87) {
    a85.fill();
    const v90 = new f59(-1.093925554716035e+308);
    v90 in v67;
    const v93 = ["function",v25];
    const o94 = {
        "arguments": v93,
        "type": "function",
    };
    return a86;
}
f84(v55);
if (f84(v56, v55).fill()) {
    v55[v11];
    try { v53["atan"](v56, 1.1408591040999836e+308, Uint16Array); } catch (e) {}
} else {
    v67["p"]("p", v7, "p", "p", "p");
}
