const v0 = [-1000.0,-6.470314731617082e+307,-207.43886051572315,-2.0016947982837626e+307,0.04335215647563595,4.08042757529542e+307];
const v1 = [0.6575048119287539,-Infinity,1.4699971977763391e+308,540068.7617580341];
[NaN];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a5;
    } catch(e6) {
    }
    try {
        this.h = a5;
    } catch(e7) {
    }
}
new F3(F3, v1);
const v9 = new F3(v0);
new F3(v9);
[0.7584872887579567,2.2250738585072014e-308,-2.0,5.0];
[0.004146092790233147,1.7976931348623157e+308,3.1762201161487967e+307,0.5086170979723167];
[-1.0,-3.0,Infinity,570.2004095199529,2.220446049250313e-16,-3.0,-817.9644502626102,329498.2340530241,-Infinity,-1.7976931348623157e+308];
function F17(a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    function F22(a24, a25, a26, a27) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v28 = new F22(F3);
    const v31 = new BigInt64Array(4046);
    function f32(a33, a34) {
        Object.defineProperty(v28, v28, { writable: true, configurable: true, enumerable: true, get: f32 });
        let o36 = {
            get f() {
                return a19;
            },
        };
        [,...o36] = v31;
        return a33;
    }
    f32();
}
new F17(F17, F17, F17);
new F17();
