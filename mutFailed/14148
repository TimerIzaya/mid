let v2 = NaN;
class C3 {
    constructor(a5, a6) {
        for (let [v7,v8,v9,v10] of a6) {
            850132.0463118046 ^ v2;
        }
        v2 = a5;
        a6 ** a6;
        let v13;
        try { v13 = this(); } catch (e) {}
        let o17 = {
        };
        o17 ||= o17;
        let v18;
        try { v18 = C3(-21124, -21124, C3, C3); } catch (e) {}
        super[v18] = C3;
        o17 >= v13;
        /t\w|\dc*/gums;
        /a[bc]d(x)(x)(x)\1*/gms;
        /D\xed\xa0\x80/us;
        new Proxy(this, o17);
    }
    [v2] = v2;
    static #d;
}
new C3(v2, v2);
new C3(850132.0463118046, 850132.0463118046);
new C3(v2, -3.623454235740331);
[2147483647,-65535,33034,30384,11,268435441,-65535];
[-756992538,-45203,-2147483649,-6,277911012,-12,1073741825,127,37150];
[-65536,-40145,4294967297];
let v31 = 6;
let v32 = 16;
function f35(a36) {
    return f35;
}
const v39 = [4096];
const v40 = new f35(850132.0463118046);
v39[3455] += v31;
v31 = (v32 = 4096);
for (let v41 = 0; v41 < 100; v41++) {
    v40(v32);
}
const o43 = {
    "arguments": v39,
    "type": "function",
};
new Worker(f35, o43);
