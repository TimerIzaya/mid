function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    a5 === a5;
    const v7 = this?.constructor;
    try { new v7(this); } catch (e) {}
    a5 >> a5;
    try {
        this.a = a5;
    } catch(e10) {
    }
    try {
        this.e = a5;
    } catch(e11) {
    }
    try {
        this.h = 4294967296;
    } catch(e12) {
    }
}
const v13 = new F3(4);
v13.d = v13;
const v14 = new F3(4294967296);
const v15 = new F3(4294967296);
v15.a = v15;
function f16() {
    return v15;
}
[[4,v14,F3,f16],v14,v14,4294967296];
const v19 = [v14];
let v20;
try { v20 = v19.push(v14); } catch (e) {}
let v24 = -1761671954;
v24--;
let v29;
try { v29 = ("B").charAt(v13); } catch (e) {}
class C30 {
    get b() {
        const v32 = ("B")[21];
        try {
            this.e = "B";
        } catch(e33) {
        }
        return v32;
    }
    static [v20];
    static #g;
    g = "d";
}
try { C30.isPrototypeOf(268435441); } catch (e) {}
new C30();
const v36 = new C30();
const v37 = new C30();
const v40 = new Uint8Array(7);
const v43 = new BigInt64Array(1221);
const v46 = new Uint8ClampedArray(5);
try { v46.slice(1812897321, v24); } catch (e) {}
try { v36(1221, v36, "d", v37); } catch (e) {}
const o49 = {
    __proto__: v40,
    "h": v40,
    "a": v43,
};
try { o49.every(o49); } catch (e) {}
let v52 = -53409;
v52--;
const v55 = C30.clz32(v52);
v55 < v55;
const v57 = v52 % v46;
--v29;
-1000.0 && v57;
