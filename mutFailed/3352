class C3 {
    static d = "p4";
    static c = "p4";
    m(a5, a6) {
        const v7 = super.b;
        try { v7(a6, a5, this, "268435439", v7); } catch (e) {}
        try { v7(v7, "x", this); } catch (e) {}
        return "x";
    }
    5 = "p4";
    valueOf(a11) {
        super.h = 1.7976931348623157e+308;
        const o18 = {
            "execution": "p4",
            "type": "x",
        };
        gc(o18);
        return 0.8091130641866187;
    }
}
C3.name = C3;
new C3();
const v21 = new C3();
v21[5];
const v23 = new C3();
v23[5] = v23;
new BigUint64Array(5);
1805 & 1805;
1805 - 1805;
new Uint32Array(5);
const v34 = new Int16Array(5);
v34[1] = v34;
function F35() {
    if (!new.target) { throw 'must be called with new'; }
    const v37 = this?.constructor;
    try { new v37(); } catch (e) {}
}
F35.e = F35;
const v40 = new BigUint64Array();
const v41 = new F35();
v41.length = v41;
const v42 = new F35();
const v43 = v42?.__defineSetter__;
v43.name = v43;
try { new v43(F35, 1805); } catch (e) {}
try { ("8").codePointAt(v42); } catch (e) {}
const t46 = "8";
t46[0] = "8";
let v48;
try { v48 = ("function").trimLeft(); } catch (e) {}
v48[2];
try { ("number").link(Uint32Array); } catch (e) {}
class C52 extends F35 {
    b = "x";
    set g(a54) {
        let v53 = this;
        ({"c":a54,"d":v53,} = v42);
    }
    static {
        this.caller = this;
        const v56 = super[this];
        ("function").substring(v56, this, v56, "function", "8", this);
        super.c;
        try {
            v40.f = v56;
        } catch(e59) {
        }
    }
}
C52.length;
let v61;
try { v61 = new C52(); } catch (e) {}
v61.b = v61;
