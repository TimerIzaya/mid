const v0 = [];
class C2 {
}
const v4 = new BigUint64Array();
const v5 = /o(\xed\xb0\x80)\x01/gudims;
const v6 = /(xyz{93})/gusy;
try { v6.compile(v4, v5); } catch (e) {}
[-9223372036854775807,-65537];
const v17 = new Uint8ClampedArray(112);
const v20 = new Uint8Array(64);
try { v17(-85357.59116785484, ...v20, 64, 46, -3.383486186086852e+307, ...v17); } catch (e) {}
[14,-9007199254740990,-10028];
[1];
try {
    v5.h = v6;
} catch(e30) {
}
class C31 {
}
new C31();
class C36 {
    static ["22307"] = "AanB8";
    b;
    constructor(a38, a39) {
        Symbol.iterator;
        typeof /(foo(?!bar)baz)/gis === "undefined";
        Math.exp(0.611254903366946);
        a38 + a38;
        let v51 = +17469;
        17469 && v51;
        v51++;
    }
}
Math.tan();
const v58 = new Uint8ClampedArray(3);
class C59 {
    constructor(a61, a62, a63, a64) {
        for (let v65 = 0; v65 < 5; v65++) {
            v58[v65] = a64;
        }
    }
}
new C36();
new C36();
new Float32Array();
function f75() {
    Symbol.replace;
    Symbol[Symbol.toPrimitive];
    const v81 = new BigUint64Array();
    v81[2445191368] = -536870912n;
    const o85 = {
        ...1.0,
        set b(a84) {
        },
    };
    return o85;
}
f75();
const v89 = [34352,4,-9223372036854775808,1092764849,-2147483647,-1162070362,-4294967297,8,-591755449];
new Uint16Array(v89);
Symbol.hasInstance;
function f93(a94, a95) {
    a95();
    return f93;
}
[1,17,[Uint8ClampedArray,Uint8ClampedArray]];
const o104 = {
    "execution": "async",
    "type": "minor",
};
gc();
class C107 {
    #n(a109, a110) {
        let v112;
        try { v112 = a110["matchAll"](1000000000000.0, 128, this); } catch (e) {}
        const t75 = "matchAll";
        t75[9] = 128;
        v112?.[1726887188];
        return this;
    }
    #valueOf(a115, a116, a117, a118) {
    }
    static [1] = "minor";
    static b = 1000000000000.0;
    static #e;
    #b = 128;
}
new C107();
new C107();
new C107();
function f125() {
    Math.expm1(3375);
    const v132 = new Int8Array(3816);
    const v133 = v132[1];
    const o134 = {
    };
    o134.a = v133;
    function F136() {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v138 = [-7,-18455];
    v138["minor"]();
    const v141 = new Uint8Array();
    const v143 = new Uint32Array();
    const o147 = {
        "b": v0,
        "c": v138,
        ...v141,
        n(a145, a146) {
            v143[v0] = v143;
            return a146;
        },
    };
    const v148 = new Float64Array(64);
    v148[5] = v89;
    [v148,v89];
}
const v150 = [-1539,1,12];
function f151() {
    return f151;
}
function f152(a153, a154) {
    const o155 = {
        [a153]: v150,
    };
    return a153;
}
f152(f152);
f152();
f152(f151);
new f125();
