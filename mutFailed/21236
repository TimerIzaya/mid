const v0 = /xyz{1,}a{1,2}?/vdmy;
const v1 = /\x01/guimy;
const v2 = /(?!\1(a\1)\1)\1/gud;
new Int16Array(64);
const v9 = this.print(this, this);
function F10() {
    if (!new.target) { throw 'must be called with new'; }
    for (let v12 = 0; v12 < 500; v12++) {
        ("p" + v12).fontcolor().trimLeft();
        v2[12].substring();
        this || (this * this);
    }
}
const v21 = new F10();
const v23 = [256,-1,-268435456,10,3,4294967297];
const o24 = {
};
class C27 extends Uint8Array {
    constructor(a29, a30) {
        a29[1] = Float64Array;
        super(a29);
    }
}
const v31 = [-15310,2147483649,65537];
const v32 = [3,-256];
function f33(a34, a35, a36) {
    const o60 = {
        "a": a36,
        9: a34,
        valueOf(a38) {
            return 64;
        },
        ...v21,
        valueOf(a40, a41, a42) {
            function f43(a44) {
                return a44;
            }
            Worker(f43);
            return a40;
        },
        ...v23,
        ...a35,
        "g": "w",
        "c": "getInt32",
        __proto__: v1,
        "f": a36,
        get c() {
            ~-4294967295;
            f33();
            -4294967295 < 64;
            return 522675525n;
            return v31;
        },
        9: "1073741823",
        toString(a54, a55, a56) {
            function f57() {
                return a56;
            }
            Object.defineProperty(a54, Symbol.toPrimitive, { writable: true, get: f57 });
            return Symbol;
        },
        "b": v0,
        ...a36,
        "execution": "getInt32",
        "h": v1,
        "execution": "1073741823",
        /*
        __proto__: Float64Array,
        */
        "arguments": v23,
        "h": v31,
    };
    return o60;
}
f33(v2, v32, v1);
const v62 = f33(v2, v23, v0);
f33(v0, v32, v2);
const o65 = {
    [v2]: v32,
    __proto__: v23,
    ...v9,
    "b": v1,
    "c": v62,
};
Symbol(o65);
