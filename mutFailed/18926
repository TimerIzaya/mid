const v0 = [];
function f1(a2, a3) {
    try { new a2(v0); } catch (e) {}
    try {
        const o5 = {
        };
    } catch(e6) {
    }
    return v0;
}
Object.defineProperty(v0, "toString", { configurable: true, enumerable: true, value: f1 });
function f10(a11) {
    a11.toString = f10;
    const o30 = {
        set e(a13) {
        },
        "g": a11,
        [a11](a18, a19) {
            const v20 = /2a\sc/uds;
            function f21() {
                try { v20.test(v20); } catch (e) {}
                const t21 = Array();
                t21.length |= 113;
            }
            const v28 = new Int8Array(Symbol);
            v28.toString = f21;
            a11.__proto__;
            return v0;
        },
        9: -96440353n,
    };
    o30.toString = f1;
    return o30;
}
f10(v0);
f10(f10(35024397n, f10));
const v37 = [-Infinity,-7.230945278929126,2.220446049250313e-16,-1.7976931348623157e+308,-1000.0,-1.0,5.002169598915335,1e-15,-5.0,-4.0];
function f38() {
    const v40 = -4294967297n ^ -4294967297n;
    const o47 = {
        [-4294967297n](a42, a43, a44, a45) {
            super[v40];
        },
    };
    return o47;
}
[2.0];
[9.575520695202435,-Infinity];
1000000.0 % 1000000.0;
const v58 = ([-698004.1950483839,2.2250738585072014e-308,-658.5488403472419,1.7976931348623157e+308])?.groupToMap;
try { new v58(-8516); } catch (e) {}
const v60 = [0.2814479788372709,-1000.0,0.42317713606498963];
v60.g = v58;
v60.g = v60;
[1.4550120056683328e+308,-1.0772967663163728e+308,186061.78370046848,-1.7976931348623157e+308,-5.0,-Infinity,0.03200553966660591];
const v67 = new BigInt64Array(14);
4096 / 4096;
function f71() {
    return 1000000.0;
}
function f72(a73) {
    class C74 {
        g;
        constructor() {
            const v76 = this.constructor;
            try { new v76(); } catch (e) {}
        }
    }
}
Object.defineProperty(Uint8Array, "d", { writable: true, get: f71, set: f72 });
Uint8Array.d = Uint8Array;
v37.constructor;
class C79 {
    constructor(a81) {
        typeof arguments;
    }
}
Uint8Array.prototype = Uint8Array;
const v85 = new Uint8Array(4096);
const v88 = [-2.216170140955498,-2.2250738585072014e-308,-643865.3403199288,NaN];
v88[Symbol.toPrimitive] = f10;
this.decodeURIComponent(v88);
let v93 = 127;
const v94 = v93++;
function f95(a96, a97) {
    return a96;
}
const v99 = [0.22970466031530812,NaN,NaN,Infinity];
class C100 {
    constructor(a102, a103) {
        super["fround"] = v99;
    }
}
const v105 = new Promise(f95);
let v106;
try { v106 = v105.then(v67, v94); } catch (e) {}
v106.constructor = f95;
try { v106.then(v60, v85); } catch (e) {}
function f108(a109, a110) {
    const o111 = {
    };
    return o111;
}
for (let v112 = 0; v112 < 25; v112++) {
    const v113 = f108();
    Object.defineProperty(v113, v112, { enumerable: true, get: f108, set: f108 });
    try { Reflect.preventExtensions(v113); } catch (e) {}
    const o117 = {
    };
    gc(o117);
}
