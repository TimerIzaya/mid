const v0 = [];
const v1 = [v0];
const v2 = [v1,v0,v0,v1];
v0[v1] = v2;
new Array(5);
const v6 = v1.length;
const v7 = [v1];
class C8 {
    o(a10, a11) {
        v2[8] = v1;
        return a10;
    }
    d = v1;
    b;
    static 1 = v7;
}
function F15() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = -128;
    } catch(e18) {
    }
    try {
        this.b = -128;
    } catch(e19) {
    }
    this % 5;
    this[536870889] = RangeError;
    const t28 = Array(v6);
    t28[v0] = Array;
}
new v1();
new C8();
new v6();
/ymI./vm;
v7[5];
try {
    new Array(1);
} catch(e31) {
}
/(?<a>)o/gvdi;
/8\P{scx=Greek}b(?:a?)+/vm;
const v36 = new Float64Array();
const v40 = new Float32Array(4096);
const v42 = [v40,Uint32Array,[v36,Uint32Array,v40]];
switch (v6) {
    case TypeError:
        const o45 = {
            "maxByteLength": 516366412,
        };
        const v47 = new ArrayBuffer(1333, o45);
        new Int32Array(v47);
        break;
}
v42[v42] >>= 1000;
