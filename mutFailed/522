let v0 = undefined;
const v3 = new Array(5);
try { v3.shift(); } catch (e) {}
class C5 {
    constructor(a7) {
        try { this.constructor(v0); } catch (e) {}
        v0 = a7;
        try { gc(); } catch (e) {}
        const o13 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o13);
    }
    static [v0];
    static h;
    static #d;
    [Array];
}
new C5(v0);
const v16 = new C5(v3);
v16.__proto__ = v16;
const v17 = new C5(v3);
const v18 = v17?.constructor;
try { new v18(C5); } catch (e) {}
function f20() {
    return v0;
}
let v21 = -246978447;
v21++;
-2147483649 === -2147483649;
let v27 = 155;
v27--;
new Uint8Array(v27);
new Uint8Array(6);
new Uint8Array(8);
const v37 = /(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/u;
const v38 = /\c4a.[(x)(x)(x)\4*(x)(x)(x)\3*]/gmy;
v38.e = v38;
const v39 = /G(a)\1a+8?/vdimsy;
const v40 = [Infinity];
try { v40.pop(); } catch (e) {}
const v42 = [2.2250738585072014e-308,1.949684848262672,4.0];
v42.g = v42;
try { v42.push(v37); } catch (e) {}
const v45 = ([342.12300421344116,0.3998304334347528,-1.5569468467414895e+308,929110.7069466491,0.8403359879371063,928.8415619105033,5.0])?.toStringTag;
let v46;
try { v46 = new v45(); } catch (e) {}
let v47 = -198895178;
v47 | v47;
let v50 = 24356 % 24356;
v50++;
class C52 {
    static #n(a54, a55) {
        function F56(a58, a59, a60, a61) {
            if (!new.target) { throw 'must be called with new'; }
        }
        v39[243] -= v46;
        ++v47;
        F56(v38);
    }
}
