const v0 = [6.243367099684338,270.00261021353367,4.0,0.8233954142412799,0.8588707815102019,-1.7976931348623157e+308,-1000000000.0];
const v1 = [Infinity,1000000000.0,1000000.0,3.0,573.8972776749979,-9.52171323014897e+306];
const v2 = [0.3852025216965925];
function f3() {
    return v0;
}
class C4 extends f3 {
    f;
    static get f() {
        for (let v6 = 0; v6 < 100; v6++) {
            f3();
        }
        return this;
    }
    static #f = v2;
    c = v1;
    #a;
    [-1];
}
const v8 = new C4();
new C4();
new C4();
class C11 extends f3 {
    #p(a13, a14) {
        let v12 = this;
        v12 = a14;
        return v2;
    }
    [v0];
    h;
    static [f3] = f3;
    [v8] = f3;
}
new C11();
new C11();
new C11();
const v21 = [1000000.0,4.0,877990.5497759602,-506457.5906391711,1.5877136832764825e+308,-5.0,0.37988723353754195];
const v22 = [-2.2250738585072014e-308,4.258971338651328e+307];
let v23 = 536870887n;
class C26 {
    #valueOf(a28, a29) {
        v23 ^= 4294967297n;
        try {
            this.fuck(v2, a28);
        } catch(e31) {
        }
    }
    static #a = v22;
    #g = v23;
    static #f = v21;
    #b;
}
