[577243.6590337029,-1000000000.0,-217.39674921468645,-5.0,0.48801465336511785];
const v1 = [-651081.400610338,-0.0,-1000000.0,-496026.58881968085,734365.2679742198,-0.0,5.0,-1000000000.0,7.224169733239364];
const v2 = [0.019887658528402796,2.220446049250313e-16,-740.885922980808,-6.101658543236653,2.0,1000.0];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = v2;
    } catch(e6) {
    }
}
new F3(v2);
const v8 = new F3(v1);
const v9 = new F3(v2);
const v11 = new WeakSet();
class C12 extends F3 {
    n(a14, a15) {
        const v16 = new F3(v9);
        super[this] = a15;
        %VerifyType(v11);
        a15[6] = a14;
        new Map();
        const o20 = {
        };
        try {
            o20.f = Reflect;
        } catch(e21) {
        }
        try {
            const o22 = {
            };
            v1.f = Reflect;
            o22.b = a14;
        } catch(e23) {
        }
        try {
            const o24 = {
            };
            o24.f = Reflect;
            o24.b = this;
            o24.h = v9;
        } catch(e25) {
        }
        try {
            const o26 = {
            };
            o26.f = Reflect;
            o26.b = a14;
            o26.e = v8;
        } catch(e27) {
        }
        return v16;
    }
}
new C12();
const v29 = new C12();
new v29();
function F34() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.constructor(); } catch (e) {}
    try {
    } catch(e37) {
    }
    function F38() {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v40 = new WeakSet();
    const v41 = v40?.__defineSetter__;
    try { v41(); } catch (e) {}
    function f43(a44, a45) {
        const o46 = {
        };
        return o46;
    }
    const v47 = f43(v41, f43);
    function f48() {
        return f48;
    }
    const v51 = new Float32Array(218);
    for (const v52 of v51) {
        v52 >>> v52;
        Object.defineProperty(v47, Float32Array, { configurable: true, enumerable: true, get: f43, set: f48 });
    }
}
new F34();
new F34();
new F34();
