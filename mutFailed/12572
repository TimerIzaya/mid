function f0() {
}
function f10() {
    return "-8";
}
function f11() {
}
const v16 = [79.96177673553052,958106.6774601368,-2.220446049250313e-16,1.3702264850190933e+308,-569.2238583910487,-643621.2280408698,-906.898552923642,-3.0];
const v17 = [9.199333489675116,1000000000000.0,-150.6078457913527];
const v18 = [-4.0,Infinity,-3.0,-734447.1317172151,4.890954914084955e+307,437656.14753023814,-0.0,0.2276435365306908];
function F25(a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 2.0;
    } catch(e30) {
    }
}
const v31 = new F25(1.7543951832230255e+308, v17, 165226.0487593948, -5.256559838432566, v17, -1);
new F25(-5.256559838432566, v17, v31);
const v33 = new F25(-441742.52960792976, v16, -212.78589373566194);
Object.defineProperty(v18, 149, { configurable: true, enumerable: true, get: -212.78589373566194, set: f11 });
Object.defineProperty(v17, 599385888, { configurable: true, enumerable: true, value: v33 });
/tRa*?(?:a+){0,0}/gvis;
/[qa{12z}]/gd;
/a*b|c[foo(?=bar)baz]/udy;
for (let v37 = 0; v37 < 5; v37++) {
    const o41 = {
        "execution": "number",
        "type": "minor",
    };
    gc(o41, -441742.52960792976, o41);
    const v43 = o41.type;
    %VerifyType(f11);
    %VerifyType(v37);
    v43?.[214];
    new Float64Array(128);
    new Uint8Array(1);
    new Uint16Array();
}
function F54(a56, a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    Reflect.construct(Int8Array, [1126838905], a56);
}
