class C3 {
    static #toString(a5) {
        const v7 = Symbol.toStringTag;
        this[v7] = v7;
        this.d ^= a5;
        this.d;
        function f10(a11, a12) {
            const o13 = {
                "g": a11,
                "h": "a",
            };
            return o13;
        }
        const o16 = {
            "maxByteLength": 253,
        };
        const v18 = new ArrayBuffer(9, o16);
        new Int32Array(v18);
        return 9;
    }
}
new C3();
new C3();
const v23 = new C3();
function F27(a29, a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 7;
    } catch(e32) {
    }
    0 == 268435440n;
    class C36 {
    }
    const v37 = new C36();
    if (v37) {
    }
}
const v38 = new F27(v23, 12932598, -28558);
const v39 = new F27(v38, 12932598, -28558);
const v40 = new F27(C3, 12932598, 12932598);
class C41 extends C3 {
    toString(a43, a44, a45) {
        for (let [,v46,v47] of a43) {
            const v48 = delete v39[v38];
            [v46];
            [v48,F27,a44];
            [v23,v46,v47,12932598];
        }
        return -28558;
    }
    static f;
    c;
    constructor(a53, a54, a55) {
        const o56 = {
        };
        new BigInt64Array();
        ([12]).toLocaleString();
        super();
        const v62 = Symbol.species;
        a55[v62] = v62;
        C3[this];
        v23.__proto__;
    }
}
const v65 = new C41(12932598, v38, C41);
new C41(-28558, v65, v38);
new C41(12932598, v40, 832823432n);
const v68 = /\p{Script=Greek}(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/guy;
for (let v71 = 0; v71 < 25; v71++) {
    ("b")[164];
    const t69 = "65537";
    t69.__proto__ = v68;
}
