function f0() {
}
const v4 = [-65537n,-54977n,10n,-65537n];
const v5 = [f0,v4,v4];
const v6 = [v5,f0,v5];
class C7 {
    [v6] = v5;
    static {
        this || this;
        this.f ^= v6[v6];
        try {
            v6.f = v4;
        } catch(e11) {
        }
    }
    static #a;
}
new C7();
new v4();
new C7();
const v15 = [-53613,268435440,268435440,2,-65536,-2147483647];
const v16 = [8];
const v17 = [-1024,-2147483647,-37738,-2,21596,2147483649,9007199254740992,-2039218916];
class C18 {
    static #f;
    static set f(a20) {
        a20(this, this, a20, v16);
    }
    constructor(a23) {
        this.e = v16;
    }
}
new C18(v16);
new C18(v17);
const v26 = new C18(v17);
let v29;
try { v29 = v26.reduceRight(4294967295, v17, 10n); } catch (e) {}
v17[6] ||= -10;
function f30(a31, a32, a33, a34) {
    const v35 = v4 in v15;
    try { v29(...v16, ...v15, v17, ...v35); } catch (e) {}
    return f30;
}
f30();
