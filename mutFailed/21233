function f0() {
    class C3 {
    }
    ("boolean").split("rXR");
    f0.unshift(f0);
    const o11 = {
        __proto__: "rXR",
        "a": "rXR",
        get g() {
            const v9 = this > this;
            try {
            const t0 = "rXR";
            t0(v9, this);
            } catch (e) {}
            return "function";
        },
        "e": "function",
        "d": "rXR",
        ..."rXR",
        [-978.1797665620331]: -978.1797665620331,
        ..."function",
    };
    return o11;
}
const v12 = f0();
const v13 = f0();
const v14 = f0();
class C15 {
    [v14];
    n(a17, a18) {
        a17[2] += super.a;
        return a18;
    }
    1073741824 = v12;
    [-1];
    static [v14];
    c;
    static 2020300381;
    g = v14;
}
new C15();
new C15();
new C15();
function F23(a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a26;
    } catch(e27) {
    }
}
const v28 = new F23(v14, v13);
const v29 = new F23(v28, v14);
new F23(v29, v13);
class C34 {
}
for (let v35 = 0; v35 < 10; v35++) {
    const v36 = [1929306256,-35796];
    try { v36["36049"](); } catch (e) {}
}
new C34();
new C34();
for (let i46 = 0, i47 = 10;
    (() => {
        const v48 = i46 < i47;
        class C49 {
            constructor(a51, a52, a53, a54) {
                this[this] = a54;
            }
        }
        return v48;
    })();
    i46++, i47--) {
    new C34();
}
