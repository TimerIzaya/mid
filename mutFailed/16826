[-2.220446049250313e-16,2.2250738585072014e-308,-5.0,0.8462871989048016,1000000.0];
[-5.0,0.42872995694089744,1.7976931348623157e+308,-2.2250738585072014e-308];
const v2 = [-1.0,-1e-15,-442674.804585353,4.988397530742327e+307,-328213.33704688144,-4.0,0.6206900032877797,1.0622914048710055e+308,-252101.39177360013];
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "f", { configurable: true, enumerable: true, value: v2 });
    try {
        function F10() {
            if (!new.target) { throw 'must be called with new'; }
            this.h = -876773245;
        }
        class C13 extends F10 {
            #b;
            constructor(a15) {
                super();
                delete this.h;
                super.h = this;
                /\1\2(a(?:\1(b\1\2))\2)\1()l/udm;
            }
        }
        new C13(C13);
        this.e = a9;
    } catch(e22) {
    }
    try {
        this.f = a8;
    } catch(e23) {
    }
}
new F6(-208104036, -208104036);
new F6(-208104036, -876773245);
new F6(-876773245, -208104036);
const v28 = new Set();
for (let v29 = 0; v29 < 5; v29++) {
    function f30() {
        for (let v31 = 0; v31 < 5; v31++) {
            function f32() {
                [Math.atanh(v31)];
                return Math;
            }
            f32();
            %OptimizeFunctionOnNextCall(f32);
        }
        const o38 = {
        };
        const t45 = v28.constructor;
        t45(128);
        return F6;
    }
    f30();
    f30();
    %OptimizeFunctionOnNextCall(f30);
}
