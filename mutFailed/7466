class C3 {
    constructor(a5) {
        this[-1];
        let v7;
        try { v7 = ("f").search(a5); } catch (e) {}
        a5 instanceof v7;
        this + "f";
        new Uint8Array(3345);
        new Uint16Array(4);
        new Uint8ClampedArray(9);
    }
}
const v19 = new C3(5.0);
const v20 = new C3(5.0);
const v21 = new C3(v20);
class C22 extends v19 {
    [v20];
    constructor(a24, a25, a26, a27) {
        super(this);
        5.0 instanceof C3;
        super.b %= -1.7976931348623157e+308;
        super[C22 ^ v19] = v20;
    }
    static #a = v21;
    3 = 5.0;
    [C3] = v19;
    1577 = -1.7976931348623157e+308;
}
const v30 = new C22(C22, "f", C3, v21);
const v31 = new C22(v30, "f", C3, v21);
new C22(v30, v31, v31, v31);
[1281595220];
[8];
[255,822328068];
const o38 = {
    valueOf() {
        [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
        return v30;
    },
};
function F39(a41, a42) {
    if (!new.target) { throw 'must be called with new'; }
    let v43;
    try { v43 = a41.valueOf(); } catch (e) {}
    const v44 = v43.constructor;
    try { new v44(a41); } catch (e) {}
}
new F39();
new F39(o38);
