const v11 = new BigInt64Array(12);
new Uint32Array(188);
let v17 = new Float32Array(16);
new Int16Array(12);
let v21 = 14;
const v23 = v11[16];
const t5 = "reduce";
delete t5[1476];
v23[12] *= 268435441;
[v17,,v21] = "iterator";
"reduce" instanceof BigInt64Array;
function f26(a27, a28, a29) {
}
const v30 = f26(512, 512, v21);
class C33 {
    static {
        for (let v35 = 0; v35 < 25; v35++) {
            const v36 = [601759695];
            const v37 = [1073741824,1073741823,1376142744,1073741825];
            for (let v38 = 0; v38 < 5; v38++) {
                try { new v30(); } catch (e) {}
                function f42() {
                    return this;
                }
                const v44 = new Int8Array();
                const v47 = BigUint64Array * 536870887;
                const v48 = v47 - v47;
                v35 ** v47;
                Number.isNaN(v48);
                function f52(a53, a54) {
                }
                f52();
                const v56 = v44.buffer;
                v56.__defineGetter__;
                Object.defineProperty(v56, "constructor", { writable: true, configurable: true, value: Date });
                %OptimizeFunctionOnNextCall(f42);
                try { v37["find"](..."find", undefined, ...v36); } catch (e) {}
                const o60 = {
                };
            }
        }
    }
}
