/u\p{gc=Nd}/vdms;
/a\ScMa(?=b)*/gudisy;
/piZG/udimy;
Math.atan2(-65536, -803731186);
new BigUint64Array();
new Uint8ClampedArray(3134);
new Int32Array(2);
const v15 = [-503399.81061701436,0.07820891042711386,-100.04924869632453,-Infinity];
[[-1e-15,-4.547098672084515,6.731189859503068,1000.0,1000.0,414.1111077300918,567.5737904015757],v15,v15];
function f20(a21, a22, a23) {
    return a23;
}
const v25 = [f20,4294967297,,];
const o26 = {
    "arguments": v25,
    "type": "function",
};
new Float64Array(1024);
[1073741823,-43861,8,1889,127,-5];
[37996,2147483649];
[-4294967297,-4294967295,65202];
const t18 = [8.360030709333259,416819.70671931445,1000.0,-1.0513464134302462e+307,2.2250738585072014e-308,-999.1393293497049];
t18.length = 1;
Math.pow(-15 >> 8798, -2.220446049250313e-16);
function F44(a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a47;
}
class C50 {
}
const v51 = new C50();
const v52 = new C50();
function f53(a54, a55) {
    new Float64Array(1073741825);
    new Uint8Array();
    new Uint8ClampedArray();
    const v62 = [];
    try { v62.with(); } catch (e) {}
    const o71 = {
        [v52](a65, a66, a67) {
            super[-9223372036854775807];
        },
        set b(a70) {
        },
        [a55]: v51,
        "d": "function",
        [-9223372036854775807]: o26,
    };
    return v51;
}
f53();
f53(C50, v52);
[12];
for (let i = 0; i < 25; i++) {
    function f85(a86, a87) {
        function f89(a90) {
            return a87;
        }
        class C93 {
            toString(a95) {
                this.e *= 0.8199829542463926;
            }
        }
        this.onmessage = f89;
        return a86;
    }
    new Uint8ClampedArray(129);
}
new Uint8ClampedArray(112);
new Uint32Array(Uint32Array);
