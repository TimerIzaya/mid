const v2 = new BigInt64Array(2195);
const v5 = new Float64Array(60);
const v8 = new Uint32Array(413);
const v10 = new WeakSet();
class C11 {
    static #d;
    constructor(a13, a14, a15, a16) {
        function f17(a18, a19, a20) {
            const o21 = {
                [v2]: v10,
                __proto__: a19,
            };
            return o21;
        }
        f17(2195, Float64Array, v2);
        f17(this, f17(a16, v2, this), a13);
        this[3440492572] = WeakSet;
        413 < v5;
    }
    [2195] = BigInt64Array;
    o(a27, a28) {
        const v29 = [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
        Date();
        v29.reduce(Date)[22];
        try {
            super.o(a28);
        } catch(e35) {
        }
        return 2195;
    }
    static #c = v10;
}
new C11(413, 60, 413, 413);
new C11(60, 2195, 60, 60);
new C11(413, 2195, 2195, 2195);
function F39(a41) {
    if (!new.target) { throw 'must be called with new'; }
}
const v42 = new F39();
function f43(a44, a45) {
    return v8;
}
v42.toString = f43;
function F46(a48, a49, a50) {
    if (!new.target) { throw 'must be called with new'; }
    function f51(a52) {
    }
    Object.defineProperty(this, "g", { set: f51 });
    const v53 = [23795,8,259058917,-256,1,-36806,4096,-9,-1,-18943];
    a50[Symbol.hasInstance];
    delete this[5];
    new Date(-2, v53, v53, v53, -2);
    -0.0 >>> -0.0;
    function f67(a68, a69, a70, a71) {
    }
    for (let v72 = 0; v72 < 25; v72++) {
        f67();
    }
    try {
        WeakSet.g = a49;
        Object.defineProperty(Float64Array, "valueOf", { enumerable: true, value: f67 });
        const v75 = Array(a50);
        v75[v75];
    } catch(e77) {
    }
}
new F46(v42, v42, v42);
new F46();
class C81 {
    constructor(a83) {
        ("valueOf").localeCompare(a83, "valueOf");
    }
}
new C81();
for (const v86 in v2) {
}
Object.defineProperty([58584,15,9007199254740990,2146023485], 65537, { writable: true, value: [46733,-268435456] });
("I").localeCompare();
