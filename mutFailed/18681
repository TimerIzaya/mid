class C3 {
    [1319674211] = "e";
    #n(a5) {
        Object.defineProperty(arguments, "c", { enumerable: true, value: this });
        return this;
    }
    static {
        try {
            super.valueOf();
        } catch(e9) {
        }
        const v10 = C3 ** "e";
        try { ("boolean").repeat(v10); } catch (e) {}
        super[1319674211] = this;
        [0.13324404077166352,0.7312425449674628,-6.375305385223844];
        [NaN,708475.5868142706,-Infinity];
        [0.6351807538864414,0.0,709571.182330464,2.0,-825.0172111209171,4.0,2.220446049250313e-16,-0.0,1.7976931348623157e+308];
    }
}
const v15 = new C3();
const v16 = new C3();
const v17 = new C3();
class C18 extends C3 {
    [v15] = v15;
    constructor(a20, a21, a22) {
        super();
        try { v17.o(this, C3, C3); } catch (e) {}
        C3 == ("boolean" instanceof a21);
        try {
            super.at(this, "e", this);
        } catch(e27) {
        }
    }
    1073741824;
    static d = "boolean";
    static [1319674211];
    static g;
    d;
}
const v28 = new C18("boolean", v16, "e");
const v29 = new C18(C18, C3, C18);
new C18(v28, v17, C3);
let v34;
try { v34 = WeakMap.apply(Int32Array, Date); } catch (e) {}
const v35 = [723200.4184824808,-1000.0,-523437.54204506474,-964793.6675249395];
[v35];
const v37 = [v35];
[v37,Date,v28,v37];
const t47 = "boolean";
t47[C18] = v29;
try {
    const o39 = {
    };
    new C18(v34, o39, true);
} catch(e42) {
}
for (let v43 = 0; v43 < 20; v43++) {
    let [,v44,...v45] = v35;
}
Object.defineProperty(Uint8ClampedArray, 1, { value: [7.554475698528474] });
new Float64Array(1073741824);
