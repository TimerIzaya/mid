const v0 = [13,9,-4294967295,1964340162,536870912,-743084595,-28862,-9,-982521502];
function f1(a2) {
    try {
        v0.valueOf = a2;
    } catch(e3) {
    }
    return v0;
}
v0.toString = f1;
const v4 = [65536,-26093,-1615434134,207649242,-4294967297,1073741824,-2147483647];
[29621,38083,-1437884169,-11,-1,39482];
let v7 = "some";
function f9(a10, a11, a12, a13) {
    a12[Symbol.toPrimitive] = f9;
    const o29 = {
        n(a17, a18, a19, a20) {
            super.h;
            let v22;
            try { v22 = new this(); } catch (e) {}
            v22[v22] = a17;
            super.b = a13;
            %VerifyType(a18);
            Math.pow(12, Math.sign(-693493371));
            function f28() {
                return v4;
            }
            return "f";
        },
        __proto__: "f",
        ["object"]: a12,
        "e": a13,
    };
    o29[Symbol.toPrimitive] = f9;
    return o29;
}
f9("object", "f", "object", "object");
const v33 = f9(v7, "f", "object", "f");
const v34 = f9("object", v7, v0, v7);
class C35 extends f9 {
    static [v33] = v34;
    static m(a37, a38) {
        for (let v41 = 0; v41 < 5; v41++) {
            function f43() {
                "Vre" >>> (undefined << 0.28963498121041586);
                return undefined;
            }
            f43();
            %OptimizeFunctionOnNextCall(f43);
        }
        v7 = "object";
        try { v0.toLocaleString("f", v34); } catch (e) {}
        v4[163];
        let v52;
        try { v52 = a38.o(); } catch (e) {}
        return v52;
    }
    #f = v33;
    [v0];
    #c;
}
new C35();
new C35();
new C35();
class C56 {
}
new C56();
new Uint8Array(3521);
const v62 = new Uint32Array();
const v63 = [1711596310];
v63[9] = 3521;
for (let v64 = 0; v64 < 25; v64++) {
}
v63[9] = v62;
