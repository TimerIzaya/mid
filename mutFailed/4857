const v0 = [];
const v4 = [v0,v0,v0];
function f5(a6, a7) {
    try {
        a6.__proto__ = a7;
    } catch(e8) {
    }
    return a6;
}
v4.toString = f5;
const v9 = [v0,-268435456,-1096761041,v4];
const v10 = [v0,-1096761041,v9,v0];
class C11 {
    constructor(a13, a14, a15, a16) {
        for (let v17 = 0; v17 < 3; v17++) {
        }
    }
    static h = v9;
    static e = 42068;
    static [-268435456];
    f = v10;
    static a;
    static c = 42068;
    static [v9];
    static #c = -268435456;
}
const v21 = new C11(42068, v4, -268435456, v0);
new C11(v21, v9, -1096761041, v4);
new C11(-1096761041, v10, -268435456, v10);
new Uint8ClampedArray(15);
new Int32Array();
const v31 = new Int32Array(257);
function F32(a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    function f36(a37) {
        Array(1000).indexOf(Array);
    }
    Object.defineProperty(this, "c", { writable: true, configurable: true, enumerable: true, set: f36 });
    try {
        this.c = a35;
    } catch(e42) {
    }
}
const v43 = new F32(15, 257);
new F32(257, 512);
const v45 = new F32(15, 512);
for (const v46 in v45) {
    const v47 = /[MrN]/gudi;
    const v48 = /(x)(x)(x)\2/gvdisy;
    try {
    const t0 = 15;
    t0(v46, v47, v48, v48, v43);
    } catch (e) {}
    /YzF[\11]/gms;
    /(ab)\1[\11](?:a*)+(J\bI)+/diy;
}
v31[v31];
