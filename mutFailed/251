function f3(a4, a5) {
    const o34 = {
        "f": 536870889n,
        [536870889n]: a4,
        "b": 256n,
        "d": a4,
        1000: 536870889n,
        [a4]: a4,
        "e": 256n,
        p(a7) {
            function f8(a9) {
                function f11(a12) {
                    new BigInt64Array(56);
                    new BigInt64Array(3575);
                    new Uint8ClampedArray(106);
                }
                this.onmessage = f11;
                Object.defineProperty(this, "d", { configurable: true, enumerable: true, set: f11 });
            }
            const v24 = [Worker];
            const o25 = {
                "arguments": v24,
                "type": "function",
            };
            /(a{0})/gvimy;
            new Worker(f8, o25);
            return v24;
        },
    };
    return o34;
}
f3.toString = f3;
const v35 = f3(f3, 256n);
f3(536870889n, 256n);
const v37 = f3(536870889n, 268435440n);
[1.0];
const v39 = [4.0,-2.0];
const v40 = [1000.0,-307.70550935677727,976.3531578118666,-5.0,0.9750170010253709,-326349.2700369968];
class C41 {
    static m(a43, a44, a45) {
        const o46 = {
            "apply": f3,
            "construct": f3,
            "defineProperty": f3,
            "deleteProperty": f3,
            "get": f3,
            "getOwnPropertyDescriptor": f3,
            "has": f3,
            "setPrototypeOf": f3,
        };
        new Proxy(a44, o46);
        return a43;
    }
}
const v49 = new C41();
new C41();
new C41();
[C41,v39,[v49,256n,v35,v40]];
[v37,v39];
const v58 = new Uint8Array(3745);
class C59 extends Int32Array {
}
const v60 = new C59();
let v61 = v58[64];
[,,...v61] = v58;
for (let v62 = 0; v62 < 5; v62++) {
    v60["p" + v62] = v62;
}
