function f0() {
}
f0.fill = f0;
try { ("number").fontcolor(f0); } catch (e) {}
class C8 extends f0 {
    h;
    ["all"];
    static #valueOf(a10, a11, a12) {
        let v14 = 8;
        v14 ^ v14;
        Math.imul(-436440.05230958306, a11);
        -(++v14);
        v14 + -436440.05230958306;
        return a11;
    }
    ["number"] = -1e-15;
    g = 915035.2099434601;
}
const v21 = new f0();
try { v21.toString(); } catch (e) {}
const v23 = new C8();
v23.g = v23;
new C8();
class C25 extends f0 {
    12;
    static {
        this.length = this;
        this.fill = this;
        const v27 = typeof this;
        try { v27.padStart(v21); } catch (e) {}
        v27 === "undefined";
        function f31() {
            return "undefined";
        }
        try {
            super.fill("undefined");
        } catch(e33) {
        }
    }
    1157349175;
    2 = "number";
}
C25.f = C25;
const v34 = new C25();
v34[1157349175] = v34;
new C25();
new C25();
const v37 = [9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
v37[2] = v37;
Uint8Array.b = Uint8Array;
const v39 = new Uint8Array(v37);
v39[4];
