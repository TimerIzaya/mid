function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 9223372036854775807;
    } catch(e3) {
    }
}
new F0();
new F0();
new F0();
new BigUint64Array(3179);
new Float32Array(9);
new Int8Array(4);
function f16() {
    const o25 = {
        toString(a21, a22) {
            try {
                super.getMinutes();
            } catch(e24) {
            }
            return "object";
        },
        "b": "boolean",
        "g": "object",
        128: "boolean",
        "a": 1000000000000.0,
        "c": "boolean",
        __proto__: "boolean",
        "h": 1000000000000.0,
    };
    return o25;
}
const v26 = F0();
const v27 = f16();
const v28 = f16();
v28[128];
function F31(a33) {
    if (!new.target) { throw 'must be called with new'; }
    a33[128] = a33;
    try {
        this.f = a33;
    } catch(e34) {
    }
    try {
    } catch(e35) {
    }
    try {
    } catch(e36) {
    }
}
F31.e = F31;
new F31(v27);
new F31(v28);
const v39 = new F31(v27);
function f40(a41, a42, a43) {
    const o50 = {
        get a() {
            const o48 = {
                "execution": "async",
                "type": "major",
            };
            gc(o48);
        },
    };
    o50[2074850330] = o50;
    return o50;
}
const v51 = f40(v28, v28, v26);
f40(v51, f40(v27, v27, v51), v27);
function F54(a56, a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    const v59 = this?.constructor;
    try { new v59(F54, F54, f16); } catch (e) {}
    a57.g = a57;
    try {
        this.d = this;
    } catch(e61) {
    }
    try {
    } catch(e62) {
    }
}
const v63 = new F54(v28, v26, v39);
new F54(v28, v51, v63);
try { Uint32Array.bind(Int8Array); } catch (e) {}
