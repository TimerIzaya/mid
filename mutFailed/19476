function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = -14;
    } catch(e3) {
    }
    try {
        this.f = -14;
    } catch(e4) {
    }
    try {
        this.c = -14;
    } catch(e5) {
    }
}
new F0();
new F0();
new F0();
new Uint8Array(714);
new BigInt64Array(2);
new Uint32Array(2993);
function f18(a19, a20, a21, a22) {
    a21.valueOf = f18;
    const v23 = a21++;
    v23 <= v23;
    return f18;
}
for (let v25 = 0; v25 < 10; v25++) {
    f18(v25, v25, v25);
}
%OptimizeFunctionOnNextCall(f18);
f18(f18, f18, f18, f18);
