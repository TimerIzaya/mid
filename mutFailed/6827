[-44422,64,-9007199254740991];
const v1 = [9223372036854775807,256,-27715,268435441];
const v2 = [-4096,-38023,43902,4096,6,-2147483647];
let v3 = -2.2250738585072014e-308;
v3++;
const v7 = [1000000000.0,150275.33944689226,v2,v1];
[v2,150275.33944689226,v2,v2];
const v9 = [v2];
v9[0] = v9;
Set.c = Set;
const v11 = new Set();
try { v11.values(); } catch (e) {}
v11[v7];
const v14 = [];
function F15() {
    if (!new.target) { throw 'must be called with new'; }
    const v17 = this?.constructor;
    try { new v17(); } catch (e) {}
    this.d = v14;
}
new F15();
const v24 = new Uint8ClampedArray();
class C25 {
    constructor(a27, a28, a29, a30) {
        a27.prototype = a27;
        try { new a29(a28, a29, a28); } catch (e) {}
        try { new a30(6, a29, 6, a27); } catch (e) {}
        const v33 = this.e;
        try { new v33(a29, a30, a27, v33); } catch (e) {}
        for (let v35 = 0; v35 < 5; v35++) {
            const v36 = [749138.7740098275,-413.55890355139604,-2.0,5.0,4.0,1.7976931348623157e+308,1.0,5.956393081352694];
            v36[3] = v36;
            new Uint8Array(v36);
            v24[v35] = a30;
        }
    }
}
new C25(Uint8ClampedArray, Uint8ClampedArray, Uint8ClampedArray, C25);
