function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    const v7 = this?.constructor;
    try { new v7(F3, F3); } catch (e) {}
    a5 >> a5;
    try {
        this.g = -4294967295;
    } catch(e10) {
    }
    try {
        this.h = 3;
    } catch(e11) {
    }
    try {
        this.c = -4294967295;
    } catch(e12) {
    }
}
F3.prototype;
const v14 = new F3(-4294967295, 3);
const v15 = new F3(-4294967295, 3);
v15.b = 3;
new F3(3, 3);
const v19 = new Float32Array(4096);
const v22 = new Float32Array(2289);
v22[697] = v22;
new Uint8ClampedArray(5);
const v26 = [-246307.25252652215];
[0.7731808577486943,1000000000.0,-1000000000000.0,-5.027249683239967e+307,-1000000000000.0,-0.09330881686411452];
function F28(a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    const v32 = this?.constructor;
    try { new v32(4096, a30); } catch (e) {}
}
try { new F28(v26, v19); } catch (e) {}
const v35 = new F28();
class C36 extends F28 {
}
new C36();
for (let v38 = 0; v38 < 10; v38++) {
    function F39(a41, a42) {
        if (!new.target) { throw 'must be called with new'; }
        a41 >> a41;
        this.c = a42;
    }
    F39.length;
    new v14(v38, v35);
    new F39();
}
