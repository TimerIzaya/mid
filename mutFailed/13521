let v0 = 2.0;
class C3 {
    c;
    static #valueOf(a5) {
        this[2946385071] *= 1e-15;
        super.b = v0 *= 1e-15;
        return this;
    }
    [-735] = 1e-15;
    static [-735] = v0;
    9;
}
C3.e = v0;
C3.e = C3;
new C3(v0);
const v7 = new C3();
v7[9] = v7;
const v8 = new C3();
128 % 128;
class C16 {
    [1073741824] = 1073741824;
    static toString(a18) {
    }
}
Math.toJSON = v0;
const v20 = Math?.expm1;
try { new v20(v7); } catch (e) {}
1000000000000.0 << 1000000000000.0;
const v24 = Math.round(1000000000000.0);
function f25(a26, a27, a28) {
    function f30(a31) {
        typeof a31 <= "bigint";
    }
    this.onmessage = f30;
    try {
        new f30(128);
    } catch(e36) {
    }
}
const v39 = [Math,Worker,v24];
const o40 = {
    "arguments": v39,
    "type": "function",
};
o40.type;
class C42 {
    p(a44, a45, a46, a47) {
    }
}
function f48(a49, a50) {
    new C16();
    const o56 = {
        toString(a54, a55) {
            return -4294967297n;
        },
    };
    return o56;
}
C42.toString = f48;
C42.prototype;
const v58 = [C42];
try { v58.every(v8); } catch (e) {}
const v61 = Symbol.iterator;
const v63 = v61.description;
Symbol.for(v63);
const v65 = v58[v61];
v65.constructor = f48;
const t67 = v65.constructor;
const t68 = t67(C42);
t68();
const v69 = new Worker(f25, o40);
try { v69.terminateAndWait(); } catch (e) {}
const v71 = new C16();
v71[1073741824];
const v73 = new C16();
v73[1073741824];
let v75 = new C16();
v75[1073741824] = v75;
v73[1024] = 8n;
let v77;
try { v77 = v73.n(); } catch (e) {}
v75 = v77;
function f78() {
    return 1073741824;
}
const o79 = {
};
o79.c = v63;
o79.c = o79;
