function f3() {
    return -1000000000000.0;
}
const v5 = [-2.2250738585072014e-308,4.0,4.0,3.0,-1000000000.0,-1000000000.0,0.6229593632513747,2.0,2.1573070999271344];
const v6 = [-3.0,0.0,703379.3839639188,-1.7976931348623157e+308,-2.2250738585072014e-308,-4.0,-4.0];
const v7 = [-1.9265954868729445,-1.9265954868729445];
const v8 = [1.0,-1.9265954868729445,v7,-1000000000000.0,v7];
const v9 = [v6,v8,v8,v8];
const v10 = v7 && -1.9265954868729445;
new Int16Array([-1.7976931348623157e+308,1000000.0,-Infinity,1000000.0,1e-15,4.0,0.05361702581874339,2.220446049250313e-16,-384803.16239734297]);
new Uint8ClampedArray(2664);
function F17(a19, a20, a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = Int16Array;
    try {
        this.b = 1.0;
    } catch(e23) {
    }
}
const v24 = new F17(v9, v10, v9, -1000000000000.0);
new F17(v6, -1000000000000.0, v24, -1.9265954868729445);
const v26 = new F17(v6, -1000000000000.0, v9, 1.0);
[1.6762938883053238,-1.581862221943926e+307,0.9218957921865165,-1.0,938766.5940371824,0.7180292468889572,-4.0,0.0,1e-15];
/a\n/vsy;
/fZ/gmy;
const v30 = /(oabc|def|ghi)/gud;
class C34 {
}
function f35() {
    return f3;
}
function f36(a37) {
    function f38() {
        +("Vre").constructor;
    }
    try { f38(); } catch (e) {}
    f38();
}
Object.defineProperty(C34, Symbol.iterator, { writable: true, configurable: true, enumerable: true, get: f35, set: f36 });
class C46 extends C34 {
}
function f47() {
    return f3;
}
function f48(a49) {
}
Object.defineProperty(C46, Symbol.iterator, { writable: true, get: f47, set: f48 });
const v53 = new C46();
const v57 = new Date();
const v59 = new Set();
v59.valueOf = f36;
const v60 = v59.add(v57);
let [v61,,...v62] = v59;
v61.setMilliseconds(v60);
const v64 = new Uint8Array(2);
const v66 = new Uint32Array(C46);
function f67(a68, a69, a70, a71) {
    try { a68.apply(); } catch (e) {}
    new a68(a71, a69, v53);
    const o77 = {
        "b": a68,
        ...v64,
        n(a75, a76) {
            v66[a68] = v66;
            return a76;
        },
    };
    o77[1] = o77;
    return a68;
}
for (let v78 = 0; v78 < 500; v78++) {
    const v79 = f67(Uint8Array);
    break;
    var e = 5.0;
    try { v26["o"]("o", v78, "o", v30, v5); } catch (e) {}
    try { v5.indexOf(true, v79); } catch (e) {}
}
class C83 extends C46 {
    e = -911.033682344428;
    static 0;
}
new C83();
new C83();
new C83();
