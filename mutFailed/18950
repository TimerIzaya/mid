function f0() {
}
function f1() {
    return f0;
}
const v2 = [1.0754546637193443e+308,-2.0,0.6009066113191708,-1.1619056068582135e+308,-1e-15,-1.6544621880187477e+308,5.0];
[NaN,0.8252579026175667,1000000.0];
const v4 = [-1.0,7.224594887252609e+307];
-59625 >> -59625;
let v8 = -52135;
v8--;
class C10 {
    #toString(a12, a13, a14, a15) {
        super.h = v8;
        new Float64Array(3857);
        new Float32Array(1663);
        new Uint8ClampedArray(3);
        return 1663;
    }
}
const v25 = new C10();
const v26 = v25?.constructor;
try { new v26(); } catch (e) {}
const v28 = v25?.constructor;
try { new v28(); } catch (e) {}
const v30 = new v28();
const v31 = v30?.constructor;
try { new v31(); } catch (e) {}
const v33 = v30?.constructor;
try { v33.propertyIsEnumerable(C10); } catch (e) {}
let v35;
try { v35 = new v33(); } catch (e) {}
const v36 = new C10();
const v37 = v36?.__lookupGetter__;
try { new v37(v35); } catch (e) {}
try { new v37(C10); } catch (e) {}
4687n + 4687n;
function f44() {
}
try { f44(); } catch (e) {}
function f46(a47, a48, a49) {
    function F50(a52, a53) {
        if (!new.target) { throw 'must be called with new'; }
    }
    F50.length;
    F50.arguments = F50;
    class C55 {
    }
    const v56 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
    try { v56.group(v56); } catch (e) {}
    const v58 = [601759695];
    for (let v59 = 0; v59 < 5; v59++) {
        function f60() {
            const v62 = ("Vre").strike();
            try { v62.substr(v8, v56); } catch (e) {}
            let v64;
            try { v64 = v62.toLocaleUpperCase(); } catch (e) {}
            v64[6];
            Array[0] = Array;
            Object.defineProperty(Array, 0, { configurable: true, value: Float64Array });
            const v68 = Array.from(Array);
            try { v68.toString(); } catch (e) {}
            const v70 = Array();
            try { v70.reverse(); } catch (e) {}
            const v72 = v70.unshift();
            v72 ^ v72;
            try { new Set(); } catch (e) {}
            try { v2.values(); } catch (e) {}
            const v77 = new Set();
            v77.add();
            class C80 {
            }
            C80.prototype = C80;
            const v81 = new C80();
            v81.__proto__ = F50;
            const v84 = Symbol.toPrimitive.description;
            Symbol.for(v84);
            const o89 = {
                toString(a87, a88) {
                },
            };
            try { o89.toString(f60, f0); } catch (e) {}
            f0();
            %PrepareFunctionForOptimization(f0);
            f0();
            v4();
            %OptimizeFunctionOnNextCall(f0);
            f0();
            o89.toString();
            const o104 = {
                "c": v58,
                "arguments": v56,
                "type": C55,
                valueOf(a98, a99) {
                },
                4: "Vre",
                toString(a101, a102, a103) {
                },
            };
            o104[522675525];
            [272822757];
            v84.toLocaleString();
            [-2.0];
            try { Math.expm1(v58); } catch (e) {}
            const v113 = Math.acosh();
            v113 + v113;
            ~v113;
        }
        f60.g = f60;
        const v116 = f60.prototype;
        try { v116.constructor(); } catch (e) {}
        f60();
        %OptimizeFunctionOnNextCall(f60);
    }
}
f46();
