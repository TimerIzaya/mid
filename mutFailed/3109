const v2 = ("29753").replaceAll("29753");
class C3 {
}
v2("29753");
let v10;
try { v10 = Float32Array.toString(); } catch (e) {}
const v11 = new Float32Array(v10);
v11[0] = v11;
new BigInt64Array(Float32Array);
Math.cos(Math);
class C17 {
    set h(a19) {
    }
    b;
}
function F23() {
    if (!new.target) { throw 'must be called with new'; }
}
const v25 = new F23();
function f26(a27) {
    return 1000.0;
}
v25.toString = f26;
Array[v25] = 731894.5693476209;
65537 - 65537;
new BigInt64Array(65537);
const v33 = new WeakSet();
try { v33.has(65537); } catch (e) {}
class C38 {
    static [376363416];
    static {
        super.b = this;
        let {...v40} = this;
    }
}
1000 >> 1000;
const o42 = {
    "maxByteLength": BigInt64Array,
};
const v44 = new ArrayBuffer(2, o42, ArrayBuffer, BigInt64Array);
function F45(a47, a48, a49) {
    if (!new.target) { throw 'must be called with new'; }
}
function F51(a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e55) {
    }
    try {
        Math.clz32();
    } catch(e57) {
    }
}
F51.caller = F51;
v44.resize();
