function f0() {
    let v3 = -52301;
    const o11 = {
        __proto__: "object",
        [0]: v3,
        next() {
            v3--;
            return this;
        },
        ..."object",
        ["object"](a7, a8) {
            return ("object")["indexOf"](a7, a8 = a7, this, v3, 0);
        },
        "g": 0,
        "e": "object",
        7: 0,
        [0]: "object",
    };
    return o11;
}
const v12 = f0();
function f13(a14) {
    /X(\2)(\1)/gimsy;
    /QMB\P{Any}(\p{Changes_When_NFKC_Casefolded})/imy;
    /Xh7\x0f/udsy;
    return v12;
}
v12[Symbol.toPrimitive] = f13;
const v20 = f0();
f0();
class C22 extends f0 {
    valueOf(a24) {
        f0();
        return v20;
    }
    static #d;
    #c;
    [v12] = v20;
    get b() {
        try {
            this.#c = this;
        } catch(e27) {
        }
        return this;
    }
}
const v28 = new C22();
new C22();
new C22();
function f31() {
    return v28;
}
function F35() {
    if (!new.target) { throw 'must be called with new'; }
    this.a = F35;
    this.a = 43806;
    this.h = 43806;
    this.c = 43806;
}
new F35();
new F35();
([0.6757774703824373,0.7659452606332188]).join(F35);
const v42 = [-1000000000000.0,0.42720131076488843,-2.2250738585072014e-308];
const v43 = [1.0,-880481.6395920017];
for (let i46 = 0, i47 = 10; i46 < i47; i47--) {
}
2974 & 2974;
const v57 = new Uint8Array(2974, Uint8Array, v43, v12);
v57[730] = v57;
let v58 = 1073741825;
v58--;
Float64Array.h = F35;
const v61 = new Float64Array(v58);
v61[8];
let v63;
try { v63 = v61.entries(); } catch (e) {}
try { v63.next(); } catch (e) {}
Float64Array.name;
const v68 = new Float64Array(9);
v68[0];
function f71() {
    for (let [i75, i76] = (() => {
            10 >> 10;
            return [0, 10];
        })();
        i75 < i76;
        i75++) {
    }
    const o173 = {
        m(a87) {
            function f88() {
                ("size").g;
                return v20;
            }
            this.next = f88;
            a87.f = f88;
            const v91 = this?.__defineGetter__;
            try { new v91(this, F35, v91); } catch (e) {}
            Object.defineProperty(this, "h", { writable: true, configurable: true, value: v43 });
            const v93 = this?.__defineSetter__;
            try { new v93(v58, v58); } catch (e) {}
            a87.f = a87;
            let v95;
            try { v95 = a87.next(); } catch (e) {}
            v95.next = f71;
            try { v95.bind(9); } catch (e) {}
            a87.c = a87;
            a87.h = a87;
            const o97 = {
            };
            o97.h = o97;
            o97.f = o97;
            o97.h = o97;
            o97.h = o97;
            function f98(a99, a100, a101) {
            }
            try { f98(128, 128, 128); } catch (e) {}
            const v104 = f98.length;
            f98.caller = f98;
            const v107 = Math?.expm1;
            try { new v107(this); } catch (e) {}
            const v110 = -9007199254740991 ^ -9007199254740991;
            -(v110 - v110);
            class C113 {
                o(a115, a116, a117, a118) {
                }
            }
            function F119(a121) {
                if (!new.target) { throw 'must be called with new'; }
            }
            const v122 = new F119();
            function f123(a124, a125) {
                return F119;
            }
            v122.toString = f123;
            function F126(a128, a129, a130) {
                if (!new.target) { throw 'must be called with new'; }
                function f131() {
                    return f31;
                }
                Object.defineProperty(a129, Symbol.toPrimitive, { writable: true, configurable: true, get: f131 });
                Object.defineProperty(a130, "valueOf", { writable: true, configurable: true, value: f98 });
                function f134(a135) {
                }
                Object.defineProperty(this, "g", { set: f134 });
                function f137(a138, a139, a140, a141) {
                }
                for (let v142 = 0; v142 < 25; v142++) {
                    f137();
                }
                try {
                    this.g = a129;
                    Object.defineProperty(Float64Array, "next", { configurable: true, value: f98 });
                    Object.defineProperty(Float64Array, "valueOf", { enumerable: true, value: f137 });
                    const v145 = Array(a130);
                    v145[Symbol.toPrimitive] = f88;
                    v145[v145];
                } catch(e149) {
                }
            }
            new F126(v122, v122, v122);
            new F126();
            let v152;
            try { v152 = new C113(); } catch (e) {}
            const v153 = v152?.__defineGetter__;
            try { new v153(-65535, v42); } catch (e) {}
            const v155 = C113.name;
            const v156 = v155?.italics;
            try { new v156(); } catch (e) {}
            3938 ^ 3938;
            3938 - 3938;
            const v161 = [1073741824,1073741823,1376142744,1073741825];
            function f162(a163, a164, a165, a166) {
                try { v161["find"](..."find"); } catch (e) {}
                return a166;
            }
            %OptimizeFunctionOnNextCall(f162);
            try { Int8Array(v104, v155, Math); } catch (e) {}
            const v171 = new Int8Array(3938);
            let v172 = 3;
            [...v172] = v171;
        },
    };
    o173.next = f71;
    try { o173.m(Float64Array); } catch (e) {}
    function f175(a176) {
        function F177(a179, a180) {
            if (!new.target) { throw 'must be called with new'; }
            this.f = a179;
        }
        return Float64Array;
    }
    o173.next = f175;
    o173.m(o173, F35);
}
f71.length = f71;
f71();
f71(-469143616);
