function f1(a2) {
    new Set(Set, Set, false, false);
    return Set;
}
const v6 = Symbol.search;
Set[v6] = f1;
const v7 = new Set();
class C8 extends Set {
    constructor(a10) {
        function f11() {
            return Symbol;
        }
        function f12(a13) {
            v6.description;
        }
        Object.defineProperty(a10, Symbol.search, { writable: true, configurable: true, get: f11, set: f12 });
        super(v7);
        a10[Symbol.search] = v7;
        const o22 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o22);
    }
}
const v24 = new C8(C8);
new C8(Set);
const v26 = new C8(Set);
function f27(a28, a29) {
    const o41 = {
        "h": C8,
        __proto__: v26,
        get a() {
            super.g &&= this;
            let v32 = -2147483647;
            let v33 = 1.656987891318376e+308;
            const v34 = C8++;
            v32--;
            const v37 = v33 ^ ++v33;
            v33 >> v34;
            Math.ceil(v34);
            return Math.atanh(v37);
        },
    };
    return o41;
}
f27(v24, v24);
f27(C8, v24);
f27(v26, v24);
new WeakSet();
new Uint16Array();
const v52 = new Uint32Array(3);
class C53 {
    constructor(a55, a56, a57, a58) {
        try { a57(); } catch (e) {}
        for (let i61 = 0; i61 < 9; i61++) {
            v52[i61] = a58;
            for (let v67 = 0; v67 < 10; v67++) {
                const v68 = [v67,v67,v67,v67];
                const o69 = {
                    __proto__: v68,
                };
                o69.length = o69;
            }
        }
    }
    c;
}
new C53();
new C53();
