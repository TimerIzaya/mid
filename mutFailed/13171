class C3 {
    4;
    set g(a5) {
        const t3 = "undefined";
        super.d = t3();
    }
    8;
    static #o(a8, a9) {
        try { this.toString(); } catch (e) {}
        ("5H").__proto__;
        for (let v12 = 0; v12 < 5; v12++) {
            function f13() {
                const t12 = ("1073741824").constructor;
                const v17 = t12().replaceAll(f13, v12);
                return v17.toLowerCase(v17, "1073741824", v17);
            }
            f13();
            %OptimizeFunctionOnNextCall(f13);
        }
        return a8;
    }
    constructor(a21) {
        for (let v22 = 0; v22 < 32; v22++) {
            for (let v23 = 0; v23 < 5; v23++) {
                function f24() {
                    return f24;
                }
                f24();
            }
            const o27 = {
            };
            gc(o27);
        }
    }
    #m(a30, a31) {
        this["function"] = a30;
        let v32 = 0;
        return -65537;
        class C35 extends Array {
        }
        const v36 = new C35();
        1073741823n == v36;
        do {
            super.b;
            const o44 = {
                [122188848n](a42, a43) {
                },
            };
            v32++;
        } while ((() => {
                let v49 = 144;
                const v50 = v49++;
                function f51(a52) {
                    return v50;
                }
                return v32 < 8;
            })())
        return v32;
    }
}
new C3();
new C3();
new C3();
[0,16,407180691];
[2147483648,-1,-5,-2,536870889,-29045,-14];
for (let v60 = 0; v60 < 5; v60++) {
    function f61() {
        function f62() {
            const v65 = new Uint16Array(108);
            v65.buffer;
            -1000 ** 0.544190430081408;
            return v60;
        }
        const v73 = new Uint8Array(268435440);
        function f74(a75, a76, a77, a78) {
            Set(a75);
            return v73;
        }
        return f62.call(v60);
    }
    f61();
    %OptimizeFunctionOnNextCall(f61);
}
[-2147483648];
function F87() {
    if (!new.target) { throw 'must be called with new'; }
    const v89 = [-5.0,-4.0,-1.7976931348623157e+308,-897.6003446951657,-1000000.0,1.8928166106024224e+306,-2.0,-1000000000000.0];
    function F90(a92, a93, a94, a95) {
        if (!new.target) { throw 'must be called with new'; }
        const v96 = this.constructor;
        try { new v96(); } catch (e) {}
        try {
        } catch(e98) {
            const v100 = Float32Array();
            class C102 extends Float64Array {
            }
            const v103 = C102();
            try { v103(v100); } catch (e) {}
        }
    }
    function F105(a107, a108, a109, a110) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v111 = new F105(v89, F87, v89, F105);
    const v113 = [F87,F87,F87,F87];
    Reflect.apply(v89.indexOf, v111, v113);
    function f116() {
        return f116;
    }
    class C117 extends f116 {
    }
    class C118 extends C117 {
    }
}
const v124 = -25283n >> (-25283n && -25283n);
v124 | v124;
