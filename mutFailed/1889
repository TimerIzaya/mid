new Array(3649);
-616526066 << -616526066;
16 != 16;
16 / 16;
class C9 extends Array {
    static {
        try { new this(); } catch (e) {}
        try { this(); } catch (e) {}
        const v13 = this || this;
        v13.prototype = v13;
        try { v13.bind(Array); } catch (e) {}
        const v15 = 16 in Array;
        v15 && v15;
    }
    [Array];
    9;
    m(a18, a19, a20) {
        class C21 {
            c;
            #g;
        }
        new C21();
        const v23 = new C21();
        new C21();
        return v23;
    }
}
new C9();
const v26 = new C9();
new C9();
let v30 = -1;
v30++;
~268435441;
function f35(a36, a37) {
    a36 - a36;
    const v39 = a36 == 3649;
    v39 && v39;
    const o41 = {
        "f": a37,
    };
    o41.h = o41;
    const v42 = o41?.__lookupSetter__;
    try { new v42(v26); } catch (e) {}
    try { new v39(a36); } catch (e) {}
    return o41;
}
f35.arguments;
f35(1096487296, 1096487296);
f35(268435441, 268435441);
