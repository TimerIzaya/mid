const v0 = [4.867030282584153,-2.220446049250313e-16,5.0,-1e-15,3.0,-7.214101075503304e+307];
const v1 = [1000000.0,-1.6234425792239546e+308,549558.7531705378,0.47255420968065875];
const v2 = [-0.8227626475848648,1e-15,NaN,-1000.0,-2.516934185995156,-9.240132421017892e+307,0.21465249780599394,1000.0,-4.509606534607906,-1.7976931348623157e+308];
new Uint32Array(1024);
const v10 = new Uint16Array(9);
new BigInt64Array();
const v16 = new Int32Array(182);
[Int32Array,v10,v16,BigInt64Array];
[2086,[9,Int32Array,v16],Uint16Array,v16];
class C21 {
    static c;
}
const v22 = new C21();
const v23 = new C21();
const v24 = new C21();
class C25 {
    static #n(a27, a28, a29, a30) {
        class C31 {
            4;
            static a;
        }
        C31();
        C31();
        C31();
    }
    7 = v24;
    #a = v23;
}
new C25();
new C25();
const v37 = new C25();
[v24];
const v39 = [v22];
function F40() {
    if (!new.target) { throw 'must be called with new'; }
}
new F40();
const v43 = new F40();
const v44 = new F40();
function F45(a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    function f49() {
        const v52 = new Uint32Array(3);
        class C53 {
            constructor(a55, a56, a57, a58) {
                for (let v59 = 0; v59 < 5; v59++) {
                    v52[v59] = a58;
                }
            }
        }
        return C53;
    }
    this.constructor = f49;
    function f60(a61) {
        new BigUint64Array();
    }
    Object.defineProperty(a47, "e", { set: f60 });
    const v64 = a48?.__lookupGetter__;
    try { v64(a47); } catch (e) {}
    try { this.constructor(F45, this); } catch (e) {}
    a47.e = a47;
}
F45.arguments = F45;
const v67 = new F45(v44);
const v68 = new F45(v67, v43);
v68.e = v68;
("Hyo9")[1];
const t66 = "at";
t66[1] = "at";
const v73 = ([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap;
const v74 = v73?.constructor;
try { v74("Hyo9"); } catch (e) {}
[-4.202468609045087];
const v77 = [0.8434386161503777];
try { v77.findLastIndex(v77); } catch (e) {}
const t75 = "4i";
t75[1] = "4i";
const v80 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f81(a82, a83, a84, a85) {
    function f86() {
        let v88 = Float64Array;
        v88 = a83;
        const v89 = v80.length;
        const v90 = v89 >>> v89;
        const v94 = [0n];
        function F95(a97, a98) {
            if (!new.target) { throw 'must be called with new'; }
            try { new Int8Array(v94); } catch (e) {}
        }
        new F95();
        const o102 = {
            "type": 137722928n,
        };
        Object.defineProperty(o102, "execution", { configurable: true, value: o102 });
        gc(o102);
        v90 / v90;
        const o105 = {
        };
        ([])["concat"]();
        new Uint8Array(105);
        let v112 = -268435456;
        v112--;
        const o114 = {
            "e": -4294967295,
            "e": v112,
        };
    }
    const v115 = f86();
    %OptimizeFunctionOnNextCall(f86);
    return v115;
}
f81();
f81();
const t111 = "RpXR";
t111[1] = "RpXR";
("c")?.toLocaleUpperCase;
class C122 {
    constructor(a124) {
        function f125(a126, a127) {
            [-387666.97607789305,-1.2431650092185384e+308,-28983.012480275705];
            [NaN,-485.1631004884507,-894034.5725635019,1000000000.0,445618.085008122,-1000000000000.0,2.0,-1000000.0,1.5896105471706395e+308];
            [-1000.0,506.3740204971359,-959.0853920873049,-1.6931474793476275e+308,0.07001897959310366,2.3300141766612548,NaN];
            return v39;
        }
        a124.toString = f125;
        ("valueOf").localeCompare(a124, "valueOf");
    }
}
const v132 = new C122();
function f133() {
    function F134() {
        if (!new.target) { throw 'must be called with new'; }
        const v136 = this.constructor;
        try { new v136(); } catch (e) {}
        let v138 = -128;
        v138--;
        this.g = v138;
    }
    return v23;
}
v132.constructor = f133;
const v140 = v132.constructor;
function f141() {
    function f142() {
        let v143;
        try { v143 = v73("f", F40, C122, v37); } catch (e) {}
        0 / v143;
        const v148 = v143 >>> v143;
        v143 / 0;
        return v148;
    }
    return f142;
}
function f150(a151) {
    class C153 {
        static #e = "d";
        static 4;
        8;
        static h = "d";
        584 = "d";
        #a;
    }
    new C153();
}
Object.defineProperty(v140, Symbol.toPrimitive, { get: f141, set: f150 });
new v140(C122);
new Uint8ClampedArray(0);
const v161 = new Int32Array(4096);
function F162(a164, a165) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = v161;
    try {
        this.a = v1;
    } catch(e166) {
    }
}
new F162(v2, 4096);
new F162(v2, 1024);
new F162(v0, 0);
/a(?=b)[\p{Script_Extensions=Mongolian}&&\p{Number}]/vdiy;
