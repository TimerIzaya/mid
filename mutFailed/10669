const v5 = new Int32Array(207);
const v8 = new Float32Array(128);
v8.e = -799787483;
function f11(a12) {
    return 207;
}
Uint8Array.toString = f11;
const v16 = new Uint8Array(1323);
function f17(a18, a19) {
    const o29 = {
        __proto__: v16,
        "d": 207,
        m(a21, a22) {
            function f23(a24, a25) {
                a25 ||= v16;
                return arguments;
            }
            f23(a21, 128, a18, a21);
            return Int32Array === a19;
        },
        ...v5,
        "e": Float32Array,
        "c": a18,
    };
    try { a19.concat(-2, a18, f17); } catch (e) {}
    v5[736264487];
    a19?.e;
    Uint8Array ** Uint8Array;
    new Int32Array(9);
    return o29;
}
f17.concat = -2;
f17(128, v8);
f17(9, f17);
Float64Array[0] = f17(v5, 128);
const v39 = new Float64Array(Float64Array, Float64Array, Float64Array);
function f40() {
    v39.length = 0;
    return 0;
}
%PrepareFunctionForOptimization(f40);
f40();
%OptimizeFunctionOnNextCall(f40);
f40();
