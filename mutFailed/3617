function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = -4294967295;
    } catch(e3) {
    }
}
new F0();
const v5 = new F0();
new F0();
class C7 {
    static n(a9) {
        let v8 = this;
        --v8;
        return a9;
    }
    static #c = F0;
    #b = F0;
    #f;
    7 = v5;
    h;
}
new C7();
new C7();
new C7();
const v23 = [-1.3667473485475811e+308,1.7976931348623157e+308,5.0,-3.583919688173468e+307,-1.5320462342133301e+308,-414873.4859108749,286122.8434793174,866.7395286670867,-1000.0,-742782.9714922046];
function f25(a26, a27, a28, a29) {
    function f30() {
        const o38 = {
            __proto__: v23,
            valueOf(a32, a33) {
                return v23;
            },
            ["-1073741824"](a35, a36, a37) {
            },
        };
        return a28.copyWithin();
    }
    f30();
    %OptimizeFunctionOnNextCall(f30);
    return 14900153;
}
for (let v41 = 0; v41 < 10; v41++) {
    f25(v23, f25, v41, v41);
}
%OptimizeFunctionOnNextCall(f25);
f25("-1073741824", v23, v23, f25);
