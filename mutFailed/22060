class C3 {
    a;
    static toString(a5, a6) {
        new BigUint64Array(0);
        new Float64Array(127);
        ([-1000000.0,0.1600379490765781,-1.6243694690977962e+307,817210.0157459241,1.0,5.0,0.9202958446582343,-1.7976931348623157e+308,-382.2774365702321,-5.737866676165018e+307]).#e;
        class C18 {
            static set h(a20) {
                eval("VL9k");
            }
        }
        new Float32Array(127);
        return 3.0;
    }
    constructor(a27, a28, a29, a30) {
        new Uint16Array(4294967295);
        function F34(a36, a37, a38) {
            if (!new.target) { throw 'must be called with new'; }
            const v39 = this.constructor;
            try { new v39(Uint16Array); } catch (e) {}
            a36 * a36;
            this.d = a36;
        }
        new F34(a27, a30, Uint16Array);
    }
}
new C3();
new C3();
class C45 {
    valueOf(a47) {
        const o51 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o51);
        return gc;
    }
}
async function f53(a54, a55, a56, a57) {
    (await C45).call();
    return f53;
}
const v60 = f53.constructor;
f53.call().then().then(v60, v60);
new C3();
/a+?a(?=bbb|bb)c/gvy;
/P+/gvmsy;
const v68 = new Uint8Array();
const v70 = v68[44610];
try { v70(); } catch (e) {}
/A7*/guimy;
[268435456,5,256,37454,-9007199254740992,6,-4294967296];
[-2,536870889,-14,689234295,1073741824,-9223372036854775808,-7,9,-2147483649];
const v75 = [257,-9223372036854775808,-9007199254740992,958822480,-219531189,-1,1057728873,-536870912];
class C77 {
    static #d;
    #e;
    static [v75];
    3290087062;
    get e() {
    }
    set b(a80) {
        Symbol.search;
    }
    static ["Xkz0W"] = "Xkz0W";
    8;
    d;
}
const v83 = new C77();
const v84 = new C77();
const v85 = new C77();
class C86 extends C77 {
    n(a88, a89) {
        v85[10] = v83;
        SharedArrayBuffer();
        Float64Array(10);
    }
}
new C86();
const v96 = [1073741824,1073741823,1376142744,1073741825];
try {
    v96.forEach();
} catch(e98) {
    e98.stack;
}
new C86();
new C86();
const v102 = [-Infinity,187698.93506137934,-446.4409125067523,1000000.0,-1000.0,-535.0706534930079];
try { v102(v84); } catch (e) {}
