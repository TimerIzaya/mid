const v0 = [494.6631854129191,-2.2250738585072014e-308,0.5547342226420514,1000000.0,2.796321605611944e+307];
for (let v1 = 0; v1 < 5; v1++) {
    new BigInt64Array(4046);
    function f5(a6, a7) {
        function F8(a10) {
            if (!new.target) { throw 'must be called with new'; }
        }
        function F11() {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.h = 16;
            } catch(e14) {
            }
            try {
                this.e = v1;
            } catch(e15) {
            }
        }
        const v16 = new F11();
        const v17 = new F11();
        const v18 = new F11();
        function F19(a21, a22) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.f = a21;
            } catch(e23) {
            }
            try {
                this.a = v17;
            } catch(e24) {
            }
        }
        const v25 = new F19(f5, v18);
        const v26 = new F19(v17, v16);
        const v27 = new F19(v16, v18);
        let v29 = 0.6323717873586865;
        function f31(a32, a33, a34) {
            const o67 = {
                "e": v16,
                "c": a33,
                "g": a33,
                [a32]: a33,
                [a33]: F11,
                __proto__: a33,
                set f(a36) {
                    super[a34];
                    const v38 = a34[257];
                    let o39 = {
                    };
                    try {
                        o39.e = v38;
                    } catch(e40) {
                    }
                    try {
                        const o41 = {
                        };
                        o41.e = v38;
                        o41.b = v16;
                    } catch(e42) {
                    }
                    try {
                        const o43 = {
                        };
                        o43.e = v38;
                        o43.b = v16;
                        o43.d = F11;
                    } catch(e44) {
                    }
                    try {
                        try {
                            v17.h = a36;
                        } catch(e45) {
                        }
                        v29 = a36;
                        const o46 = {
                        };
                        function f47(a48, a49) {
                            function f51(a52) {
                                Math.cos(this);
                                o46.atanh(9007199254740992);
                                const v57 = 9007199254740992 & this;
                                let v58 = v57 - v57;
                                ++v58;
                            }
                            this.onmessage = f51;
                            v18[101] -= -250293.25885210384;
                            o39 = o46;
                        }
                        const v62 = [o46,"function"];
                        try {
                            a34.__proto__ = v62;
                        } catch(e63) {
                        }
                        super.d = "function";
                        const o64 = {
                            "arguments": v62,
                            "type": "function",
                        };
                        new Worker(f47, o64);
                        o46.e = v38;
                        o46.b = v16;
                        o46.a = a32;
                    } catch(e66) {
                    }
                },
            };
            return o67;
        }
        f31(1.020200038300818e+308, v25, v27);
        f31(1.020200038300818e+308, v29, v26);
        f31(1.020200038300818e+308, v29, v26);
        function F72(a74, a75) {
            if (!new.target) { throw 'must be called with new'; }
            a75 === v17 ? a75 : v17;
            try {
                this.f = a74;
            } catch(e78) {
            }
            const v79 = this.constructor;
            try { new v79(268435440n, a75); } catch (e) {}
            this.f = 268435440n;
        }
        new F72();
        function f82(a83) {
            const o86 = {
                valueOf(a85) {
                },
            };
        }
        f82(268435440n);
        class C88 extends F8 {
        }
        const v89 = new v0();
        v89.constructor;
        const o91 = {
        };
        for (const v92 in o91) {
        }
        let o93 = {
        };
        [,...o93] = -250293.25885210384;
        function f94(a95, a96) {
            class C97 {
                constructor(a99, a100) {
                    const o102 = {
                    };
                    gc(o102);
                }
            }
            for (let v104 = 0; v104 < 25; v104++) {
                new C97(a95, a6);
            }
            return C97;
        }
        new v18(f94);
        return o93;
    }
    f5();
}
const v109 = [4.0,-182999.38972146634,-2.2250738585072014e-308,1.0,-1000000000.0,-2.220446049250313e-16,-469909.6677389614,0.8811799721061648];
const v110 = [-5.0,-7.737536967346945];
[v109,v110,v109,v109];
[[v110]];
const v122 = new BigUint64Array(255);
v122.buffer.slice();
