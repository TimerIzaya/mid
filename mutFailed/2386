function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.e = this;
    try {
        this.e = 9223372036854775807;
    } catch(e3) {
    }
    try {
        this.f = F0;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
const v7 = new F0();
[[v6,v7,v5,F0,v7],v5,F0,v6,F0];
[F0,F0];
new Set();
const v20 = new Map();
function f21() {
    Int32Array.constructor = f21;
    return Int32Array;
}
v20.constructor = f21;
v20.constructor;
const v24 = v20();
const o25 = {
    __proto__: v24,
};
Object.defineProperty(o25, "constructor", { enumerable: true, value: f21 });
function F27(a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    Math.tanh();
    Math.tan(9007199254740992);
    const v36 = o25.constructor;
    try { v36(268435440n, a30); } catch (e) {}
}
new F27(Map, 268435440n);
