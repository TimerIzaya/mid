function F0() {
    if (!new.target) { throw 'must be called with new'; }
    function f4() {
        ("filter")["startsWith"]();
        const v8 = Math.cosh(Math);
        v8 / v8;
        return "startsWith";
    }
    f4();
    try {
        this.h = 65536;
    } catch(e11) {
    }
}
const v12 = new F0();
const v13 = new F0();
const v14 = new F0();
const v15 = [F0,v14,v14,v13,v12];
[F0,v14,[v15,v13,v12,v15],v14];
new Int16Array(1249);
function f21() {
    do {
    } while (0 < 9)
    return f21;
}
const o32 = {
    "maxByteLength": 47,
};
SharedArrayBuffer(3, o32);
new Float64Array(623);
new Uint16Array(4096);
const v39 = [-29345,48135,-2,-485818299,0,-34652,7,-65537];
let v40;
try { v40 = v39.group(v39, v39, v39, v39, v39); } catch (e) {}
let v42 = new Int32Array(Int32Array);
v42++;
([1.7976931348623157e+308,-5.063738949828065,-1000000.0,-4.0,4.0,1.368499884638594e+307,0.0,-1.2131530743918297,-1000000000.0,-2.809909548595164]).concat();
new Int16Array([4]);
class C52 {
    constructor(a54) {
        const v55 = this.constructor;
        try { new v55(a54, this); } catch (e) {}
        ("buffer")["search"](..."buffer", ..."search", ..."search", a54, ..."search");
    }
}
new C52(C52);
const v62 = Object(16);
for (let v63 = 0; v63 < 5; v63++) {
    v62[Symbol.replace] = v40;
    const o65 = {
    };
    function f66(a67) {
    }
    f66--;
}
new gc();
class C71 {
}
function f72() {
    const t59 = ("match").__proto__;
    t59[1478] = f72;
    return "match";
}
