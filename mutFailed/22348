class C3 {
}
new C3();
const v6 = new BigInt64Array();
new Date(v6);
const v9 = [2.220446049250313e-16,2.220446049250313e-16];
-0n;
%OptimizeFunctionOnNextCall(Date);
const v12 = [9.688406554998787e+307,9.688406554998787e+307];
new Date(128, 1000.0);
const v17 = [-731.3768672772916,7.369090147093541,-1e-15,1.0,1e-15,1.0];
Reflect.construct(Uint8ClampedArray, v12);
const v22 = new WeakMap();
const v23 = /8[\cA]v/uisy;
function f24(a25, a26) {
    const v27 = [v23,v23,v23,v23,v23];
    v22.set(v27, v27);
    return v23;
}
const v29 = [3.0,1.7976931348623157e+308,-348282.42608161643,NaN,-1.551408263279596e+308,0.6542301664942437];
v29[5] = v29;
class C30 {
    valueOf(a32, a33) {
        let {"length":v34,} = a32;
        Reflect.construct(a33, [], a33);
        return 2.220446049250313e-16;
    }
    constructor(a39, a40, a41) {
        a40 > a40;
        let v44 = -9007199254740991;
        v44--;
        let v46 = 1535300936;
        Math.clz32(a41);
        --v46;
        Math.min(a40);
        Math.imul(v9, a41);
        v44 >> v9;
        class C53 {
        }
        function F54() {
            if (!new.target) { throw 'must be called with new'; }
        }
        let v56 = -2.220446049250313e-16;
        class C57 {
            constructor(a59, a60) {
                Math.acos(v56);
                v56++;
            }
        }
        const v64 = new C57();
        v64.constructor;
        const v67 = !(v46 >>> a41);
        v67 && v67;
    }
}
Math.tanh("1");
function F74(a76, a77) {
    if (!new.target) { throw 'must be called with new'; }
    a77.__proto__.toLocaleString(F74, 1000000000.0, 1000000000.0);
}
new F74(-2.220446049250313e-16, 1000000000.0);
try { new C30(2.220446049250313e-16, 2.220446049250313e-16, 9.281033391583108); } catch (e) {}
const v82 = new C30(9.688406554998787e+307, 9.281033391583108, v9);
const v83 = v82?.constructor;
try { new v83(C30, C30, v82); } catch (e) {}
const v85 = new C30(v17, 9.688406554998787e+307, v29);
try { v85.valueOf(v85, v29); } catch (e) {}
const v87 = new C30(v85, 2.220446049250313e-16, v17);
const v88 = v87?.constructor;
class C89 {
}
const v90 = new C89();
Math.tanh(-v90);
try { new v88(9.281033391583108, C30, v9); } catch (e) {}
function f98() {
    const v100 = Set.prototype;
    try { v100.keys(); } catch (e) {}
    return v100;
}
%PrepareFunctionForOptimization(f98);
const v102 = f98();
try { v102.keys(); } catch (e) {}
%OptimizeFunctionOnNextCall(f98);
f98();
