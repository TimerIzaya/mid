new Int32Array(4096);
const t1 = 4096;
const v5 = new t1(1024);
new Int32Array(64);
const v14 = new Uint16Array(3457);
new Uint16Array(4);
const v20 = new BigInt64Array(468);
function F24(a26) {
    if (!new.target) { throw 'must be called with new'; }
    const v27 = this.constructor;
    try { new v27(-143547321); } catch (e) {}
    this.g = a26 - a26;
    try {
        this.g = -1;
    } catch(e30) {
    }
    try {
        this.h = a26;
    } catch(e31) {
    }
}
try { F24.bind(-143547321); } catch (e) {}
const v33 = new v14(-1);
const v34 = new F24(-143547321);
v34.d = v34;
new F24(-1);
class C36 extends 1024 {
    #p(a38, a39) {
        const v40 = v5?.[32];
        Object.defineProperty(v34, v33, { writable: true, configurable: true, value: F24 });
        return v40;
    }
    [-1];
    static {
        let v43;
        try { v43 = this["n"](-1517929768); } catch (e) {}
        const o44 = {
        };
        const o45 = {
            "c": v33,
            ...v43,
            65537: o44,
            __proto__: this,
            "a": this,
            "g": v20,
            ...this,
        };
    }
}
try { C36(); } catch (e) {}
new C36();
const v48 = new C36();
v48.g;
new C36();
const v52 = new Map();
function f53(a54, a55, a56, a57) {
    a54 >>> a54;
    a57--;
    const o73 = {
        "c": -143547321,
        toString(a61, a62, a63, a64) {
            let v60 = this;
            a62 << -1557853178;
            let v68 = v60++;
            Math.log2(v68);
            const v70 = v68++;
            Math.pow(v68, -1557853178);
            F24 ^ v70;
            return a64;
        },
        "b": v48,
    };
    try { o73.toString(v52, a54, v34, v34); } catch (e) {}
    return o73;
}
f53(-1517929768, -1517929768, F24, -1);
const v76 = f53(-1517929768, -143547321, F24, -1517929768);
v76.f;
f53(-1517929768, -1517929768, v76);
("HEkWL").localeCompare("isArray", "isArray");
