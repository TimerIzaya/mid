let v0 = 915;
let v1 = Float64Array;
const v2 = new v1(v0);
new Uint16Array(v2, 2156);
let v7 = 1e-15;
({"byteOffset":v7,"g":v0,"length":v1,} = v2);
new v2(2156);
new Float32Array(v7);
new Uint8Array(1);
const v16 = [-0.0,514365.6339200251,1.0];
[-1.117646846195461e+308,-5.0,-4.0,0.6236999685646897,-5.0];
[1000000000000.0,-1e-15,-Infinity];
let v22 = NaN;
const v23 = Math.exp(v1);
v22++;
Math.atan2(8553, -536870912);
v16.abs(-536870912);
~v23;
Math.sinh(v22);
new Float64Array(v0);
new BigUint64Array(8553);
function f35() {
    return [-1.7976931348623157e+308];
}
%PrepareFunctionForOptimization(f35);
f35();
