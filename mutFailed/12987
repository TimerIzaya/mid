function f0() {
    -7.161329689527718 >> -7.161329689527718;
    const o10 = {
        "c": -8.540308389154922e+307,
        "g": -1000000000000.0,
        p(a6, a7) {
            try {
                this.length = 2;
            } catch(e9) {
            }
            return this;
        },
        __proto__: -7.161329689527718,
        "d": -7.161329689527718,
        "a": -7.161329689527718,
        "b": -1000000000000.0,
    };
    return o10;
}
const v11 = f0();
f0();
f0();
let v14 = -1000.0;
v14--;
1.7976931348623157e+308 - 1.7976931348623157e+308;
~(1.7976931348623157e+308 >> 1.7976931348623157e+308);
-2147483648n >> -2147483648n;
1716179228n >> 1716179228n;
const v26 = /(B)/vis;
v26.e = v26;
const v27 = /F\x0f/ums;
let v28 = Map;
let v30 = 929;
v30--;
let v33 = 1132;
v33--;
let v35 = v28--;
v35--;
const v37 = [-4.0,-1e-15];
const v38 = [-7.264687027014153e+307];
const v39 = v38.pop();
function F42(a44, a45, a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    const v48 = this?.constructor;
    try { new v48(a47, -11n, a47, F42); } catch (e) {}
    const v50 = this?.__defineGetter__;
    try { v50(undefined, undefined); } catch (e) {}
    let v52;
    try { v52 = a44.unshift(a45); } catch (e) {}
    ~v52;
    a46 != a46;
    let v55;
    try { v55 = a44.toSpliced(a45, a45); } catch (e) {}
    const v56 = v55?.__defineSetter__;
    try { v56(); } catch (e) {}
}
const v58 = new F42(v38);
v58.length;
const v60 = new F42(v37, v35);
const v61 = v60?.__defineSetter__;
try { new v61(undefined, v58); } catch (e) {}
try { v27.test(-11n); } catch (e) {}
const v64 = /h(?<=a)Q/guimy;
v64.dotAll = v64;
v64.hasIndices = v64;
class C65 {
    3;
    get e() {
        try {
            this.d = f0;
        } catch(e67) {
        }
        const v69 = new Map();
        return v69;
    }
    static h;
    static [-2147483648n];
    #f = -3.095162459976161e+306;
    static [v11];
}
try { new C65(); } catch (e) {}
let v71;
try { v71 = new C65(); } catch (e) {}
v71[3] = v71;
new C65();
new C65();
new C65();
const v78 = new Date();
let v79;
try { v79 = v78.setFullYear(26578n); } catch (e) {}
try { new Int16Array(-11n, Int16Array, v39); } catch (e) {}
const v83 = new Float64Array(Float64Array, Float64Array);
class C84 extends Int16Array {
}
C84.d = C84;
const v85 = new C84();
const o86 = {
    __proto__: v85,
};
try { v83.every(o86); } catch (e) {}
const v88 = (-184720234n).__proto__;
const v89 = v88?.constructor;
try { new v89(F42); } catch (e) {}
try { v88.toLocaleString(v79, v78, v79); } catch (e) {}
