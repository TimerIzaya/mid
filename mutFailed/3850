class C3 {
    m(a5) {
        Math.abs(-268435456);
        -268435456 * (-268435456 << this);
        return -268435456;
    }
    static 10 = 677666060;
    [-268435456] = -268435456;
    [677666060];
    static #c = 9.134607726513244e+307;
    static #d;
    f = -268435456;
}
C3[10];
const v12 = new C3();
function f13() {
    const v15 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
    return v15;
}
v12.constructor = f13;
const v16 = v12?.constructor;
try { new v16(); } catch (e) {}
const v18 = new C3();
v18[677666060];
new C3();
[-2.9586647464856464,4.0,-1.4893734470011648e+308,-0.0,1.195553218072381e+308,-874.8500710720436,-2.0,1.1948487186541685e+307,-525858.1736602143,-1e-15];
const v23 = ([0.33447575124040363,Infinity,5.0,1.3829222483995156e+308,-3.215669281161073,-1000000.0,0.2291454794013692,1.0,1.5824179890429334e+308,0.0])?.groupToMap;
try { new v23(v12); } catch (e) {}
[0.8727613691738104,-2.220446049250313e-16,-2.5740683279698036e+307,180.4938075714374,-6.098150396967292];
function f26() {
    return v18;
}
const t32 = "-2";
t32[1] = "-2";
function f30() {
}
function f31(a32, a33) {
}
const v34 = f31();
function f35(a36) {
    function f38(a39) {
        function f40() {
            return a39;
        }
    }
    this.onmessage = f38;
    v34.b;
}
try { ("multiline").codePointAt("multiline"); } catch (e) {}
const v45 = [f30,v23];
v45[0];
const o47 = {
    "arguments": v45,
    "type": "multiline",
};
new Worker(f35, o47);
