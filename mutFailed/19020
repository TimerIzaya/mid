const v3 = [16,-18156,-24536,-11,1000,257,2,536870887,8];
const v4 = [268435439,1690136897,37720,512,-1024,-9223372036854775808,9223372036854775807,-1073741824,4,536870889];
const v5 = [4294967296,4096,4096,1559350668,10];
v5[0] = v5;
try { v3(v5, 1357604931); } catch (e) {}
const t5 = "bigint";
t5[Float32Array] = v3;
const v12 = new Float32Array(257);
try { v12.indexOf(v4); } catch (e) {}
let v14 = 36;
v14--;
new Int32Array(v14);
const v20 = new Uint8Array(75);
const v22 = [-4,536870888,-65243,-256,-4294967295,65536,-12];
const v23 = [-2096457859];
try { v23.reverse(); } catch (e) {}
const v25 = /a+b|cu(?:foo)*/u;
const v27 = new Map();
class C28 {
    constructor(a30, a31, a32, a33) {
        try { a30.toLocaleString(); } catch (e) {}
        try { a33.splice(v4, this); } catch (e) {}
        const v36 = a30.__proto__;
        try { v36.findLastIndex(75); } catch (e) {}
        this & v25;
        v36[6] = a31;
    }
    toString(a40, a41, a42, a43) {
        super[v22] = v27;
    }
}
const v44 = new C28(v22, v23, v25, v22);
const v45 = v44?.constructor;
try { new v45(v22, "number", "number", v20); } catch (e) {}
for (const v47 in v23) {
    try { v47.codePointAt(Array); } catch (e) {}
    const t36 = 310668736;
    t36(310668736)[6];
}
