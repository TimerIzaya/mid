function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -9007199254740991;
    } catch(e3) {
    }
}
new F0();
const v5 = new F0();
const v6 = new F0();
function f7() {
    return v6;
}
try { ("-4294967297").search(v6); } catch (e) {}
try { ("26658").isWellFormed(); } catch (e) {}
function f13() {
    return "26658";
}
class C14 extends f7 {
    static ["26658"];
    get g() {
        try {
            new f13();
        } catch(e17) {
        }
        return "-63328068";
    }
    set h(a19) {
        let v20;
        try { v20 = v6.unregister(v6, this, this, v5); } catch (e) {}
        try { v20(a19, this, this); } catch (e) {}
        this[9] = "-4294967297";
        "-4294967297" - v20;
        let {"c":v23,"g":v24,...v25} = this;
    }
}
C14.length = C14;
new C14();
new C14();
const v28 = new C14();
v28.c;
for (let i35 = 0, i36 = 10;
    (() => {
        i36 > i36;
        const v38 = i35 < i36;
        3375 * 3375;
        const v42 = new BigUint64Array(3375);
        v42[802];
        let [v44,,v45,...v46] = v42;
        v44 ^ v44;
        v45 === v45;
        v46[1190] = v46;
        const v49 = v44--;
        v49 / v49;
        return v38;
    })();
    i35++) {
}
