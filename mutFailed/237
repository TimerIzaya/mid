const v1 = new Map();
const v2 = [Map];
const v3 = [v2,v1,v2,v2,v1];
const v4 = [Map,v3,Map,v1,v3];
class C5 {
    toString(a7) {
        new BigUint64Array(831);
        new Int16Array(512);
        new Float32Array(8);
        return this;
    }
    [v3];
    static #b;
    #e;
    268435441;
    #a;
    static e = v4;
    [v3] = v4;
}
new C5();
new v1();
new C5();
let v21 = -35797;
v21 = -53795;
try {
    C5.f = undefined;
} catch(e24) {
}
new WeakMap();
const v27 = [104762.14753807266,-279097.1642774454,5.0,1.0];
const v28 = [2.220446049250313e-16,0.4676436969349189,1.5179111745363469e+308,-1000.0,-2.220446049250313e-16,-1000000000000.0,4.0,4.587029279807309,-0.0];
const v33 = new Uint8Array(22);
new Int32Array(3289);
const v38 = [v21];
Reflect.apply(v27.join, v33, v38);
class C41 extends Int32Array {
    [Set] = true;
    [v28];
}
new C41();
