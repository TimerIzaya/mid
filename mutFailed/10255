const v1 = [20728,12328,-15553,-1590643568,512,3,3];
const v2 = [2087168392,-4096,17528,58367,9007199254740992,-65537,257,536870912,9126];
const v3 = [34303,65537];
class C4 {
    constructor(a6) {
        super.c += this;
        Object.defineProperty(a6, "length", { writable: true, value: a6 });
        super[v1] = v3;
    }
    static #m(a8, a9) {
        try {
            v1.g = a9;
            super[true];
            try { v1.flat(); } catch (e) {}
            const o13 = {
            };
            try {
                o13.h = true;
            } catch(e14) {
            }
            try {
                const o15 = {
                };
                o15.h = true;
                o15.b = a9;
            } catch(e16) {
            }
            try {
                const o17 = {
                };
                o17.h = true;
                o17.b = a9;
                o17.a = v2;
            } catch(e18) {
            }
            try {
                const o19 = {
                };
                o19.h = true;
                o19.b = a9;
                o19.d = v1;
            } catch(e20) {
            }
        } catch(e21) {
        }
        return v2;
    }
}
const v22 = new C4(v1);
const v23 = new C4(v3);
const v24 = new C4(v1);
new Uint8ClampedArray(6);
const v30 = new Float64Array(555);
const v33 = delete v22[6];
v30[v3] = 6;
try { v24.getMonth(v23, 555, v1, v1); } catch (e) {}
v23 >>> v33;
new Float64Array(3);
class C43 {
    set e(a45) {
        Math.fround();
        Math.ceil();
    }
    m(a50) {
    }
    e;
}
const v51 = new C43();
const v52 = new C43();
new C43();
let v54 = ["number","ignoreCase",v51];
[[v52,"number","R"],C43,C43,v54];
const v60 = ("NN")["9"];
C43[0] >>= v60;
let v61;
try { v61 = v60(v52, v51, "string"); } catch (e) {}
v54 = v61;
let v62 = 0;
while (v62 < 7) {
    v62++;
}
