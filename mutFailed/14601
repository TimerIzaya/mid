class C3 {
    static get h() {
        this[Symbol.search] = this;
        return 4294967296n;
    }
    static p(a8, a9) {
        try {
            a8.__proto__ = this;
        } catch(e13) {
        }
        return -256n;
    }
}
C3.length;
let v15;
try { v15 = C3.bind(4294967296n); } catch (e) {}
v15.e = v15;
const v16 = new C3();
class C17 {
    #d = 52355n;
    static #a = v15;
}
C3.g = C17;
new C17();
new C17();
const v20 = new C17();
v20?.constructor;
try { new C17(); } catch (e) {}
const v23 = v16?.toLocaleString;
try { v23(); } catch (e) {}
let v25;
try { v25 = new v23(); } catch (e) {}
const v26 = new C3();
const v27 = v26?.constructor;
try { new v27(); } catch (e) {}
const v29 = new C3();
const v30 = v29?.constructor;
try { new v30(); } catch (e) {}
const v32 = [-1000000000.0];
v32[0] = v32;
const v33 = [5.0,4.0,-2.0,411914.50931442063,2.576786804148611,-698230.2905442346,-558.6170214933493,Infinity,1000000.0];
const v34 = [1e-15,2.220446049250313e-16,5.67112873962718,0.1380354877896569,1e-15];
function F35(a37, a38, a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    const v41 = this?.__defineSetter__;
    try { new v41(a37, a37); } catch (e) {}
    a38 + a38;
    const v44 = a40?.groupToMap;
    try { new v44(a39); } catch (e) {}
    const v46 = a37?.__lookupGetter__;
    try { new v46(-256n); } catch (e) {}
    a38--;
    a39--;
    a40[0];
    try {
        this.g = a38;
    } catch(e51) {
    }
    try {
        this.c = a39;
    } catch(e52) {
    }
    try {
        this.a = v29;
    } catch(e53) {
    }
}
C17.caller;
const v55 = new v25(v26, 52355n, 4294967296n, v32);
v55.d = v55;
new F35(v29, v55, 52355n, v34);
new F35(C3, F35, 52355n, v33);
-2147483648;
~-10;
-(-10 >>> -10);
let v67 = 0.0;
v67--;
v67--;
-21582n <= -21582n;
const v73 = 1479729120n >= 1479729120n;
v73 && v73;
const v79 = ~-9007199254740992;
v79 != v79;
