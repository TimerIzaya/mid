function f0() {
}
class C1 {
    constructor() {
        this.d;
    }
    get b() {
        +this;
        try {
            this.c = this;
        } catch(e6) {
        }
        return this;
    }
}
new C1();
new C1();
const v9 = new C1();
function F10(a12) {
    if (!new.target) { throw 'must be called with new'; }
    0 / 0;
}
v9.b = v9;
([-1e-15,0.7460000229582556,88.09422010909702])[1];
const v26 = [NaN,556540.7059302938,-108.18009519109762,-2.0,0.40479763631667764,-6.085518793622519,1.0,-1.0];
const v27 = [-2.2250738585072014e-308,1.495488589540535e+308,-2.220446049250313e-16,-380589.47975724796,-1000000000000.0,0.17439972014232763,-1e-15,-1.1453575706813871e+308,1.1329654920184495];
const v29 = new Int8Array();
v29.filter(Int8Array);
new Uint32Array(4);
try { v27.reduce(v26); } catch (e) {}
const v35 = [0.5690334337241484,-1.0,-Infinity,-6.831251836501173,-5.039519767346096,-2.0,0.6826335106801482,1000000000000.0];
try { v35(); } catch (e) {}
[-287809.8660838022];
class C39 {
    constructor(a41) {
        const v42 = a41.constructor;
        try { new v42(); } catch (e) {}
        ("valueOf").localeCompare();
    }
}
const t40 = 13n;
const v46 = new t40();
const v47 = v46.constructor;
class C49 extends Int8Array.constructor {
}
new v47(C39, 13n, C49, C39);
