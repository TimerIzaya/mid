const v3 = [-128,-148159708,-1509696313,12,-1980657658,-1024,1809751596,8,268435456];
const v4 = [-16685,0,-184083406,-13918];
const v5 = [268435456,1939999451,13,256,1476936437,4294967297,-65536,-11,-4];
[v5,10000,v5];
[v3,v4,v4];
[10000];
function f9() {
    return v4;
}
class C10 {
    set e(a12) {
        try { this["valueOf"]("valueOf", 512, this); } catch (e) {}
        [1000000.0,-7.279198040713188,1.814645198291915];
        [-1000000000.0,2.220446049250313e-16,5.074363865390019e+307,-1000000.0,-2.220446049250313e-16,-1e-15,-2.9233161208777663];
        gc();
        [-2.220446049250313e-16,-7.574254419708798e+307];
    }
    c = -8;
    static 0 = 512;
    268435440;
    static 512 = 10000;
    #g;
}
new C10();
new C10();
new C10();
const v24 = new Uint8ClampedArray();
class C25 {
    constructor(a27, a28, a29, a30) {
        const v31 = this.constructor;
        try { new v31(v24, v31, a30); } catch (e) {}
        for (let v33 = 0; v33 < 5; v33++) {
            ~v33;
            v24[v33] = a30;
        }
    }
}
const t37 = -8;
new t37(v24, C25, C25, Uint8ClampedArray);
new C25();
