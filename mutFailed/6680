const v0 = [];
class C4 {
    constructor(a6, a7) {
        v0[1.4338749096752618e+307] = -2.470822470778513;
        const v9 = new Set();
        function F10(a12, a13) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = a12;
            } catch(e14) {
                for (let [v15,v16] of a12) {
                    class C17 {
                    }
                    const v18 = new C17();
                    const v19 = v18.g;
                    try {
                        v19.length = 1;
                    } catch(e21) {
                    }
                    try {
                        v9.values();
                    } catch(e23) {
                    }
                }
            }
            try {
                this.h = v9;
            } catch(e24) {
            }
            try {
                const v25 = v9[this];
                try {
                    new F10(v25, -268435456n);
                } catch(e28) {
                }
                this.b = Set;
            } catch(e29) {
            }
        }
        const v30 = new F10(Set, Set);
        let [v31,,...v32] = v9;
        const v35 = v32[Symbol.toPrimitive];
        try {
            v30.toString = v35;
        } catch(e36) {
        }
        new F10(Set, F10);
        const v38 = new F10(v30, F10);
        [28.464807941936897,0.6876471799475875,-4.024971662372387,-1000000000.0,-982.6382193743566,Infinity,0.0,-4.0,-821.2850284587798];
        [0.27109226904944717,-4.9641037907328345,0.0,2.220446049250313e-16];
        [-0.0,1.0,Infinity,609.6267739945692,0.5061350985708035];
        const v45 = [65537,268435441,63298,-5,1235122603];
        const v46 = [128,215394418];
        let v47;
        try { v47 = v46.entries(); } catch (e) {}
        const v48 = [-2,-4294967296,4294967297];
        function F49(a51, a52, a53, a54) {
            if (!new.target) { throw 'must be called with new'; }
            const v55 = this.constructor;
            try { v55(1024, 1024, v45); } catch (e) {}
        }
        const v57 = new F49(-714582153, F49, -714582153, v46);
        const v59 = new F10(v38, null);
        new Float32Array(16);
        new BigUint64Array(0);
        new Int32Array(1519);
        v57.length;
        const v70 = new F49(9, v57, 9, v48);
        v70.b = v70;
        const v71 = new F49(1024, v70, v48, v48);
        let v77;
        try { v77 = ("string").trimStart(); } catch (e) {}
        let v78 = -1;
        v47?.[3];
        let v81;
        try { v81 = v77(); } catch (e) {}
        v45[v81] = v46;
        0 ^ 9;
        const v86 = -1000;
        ~9;
        v86 >>> v86;
        a = ("string").length - F49;
        v9[v70];
        v59.__proto__;
        -35417 - -35417;
        class C94 {
        }
        function f95(a96, a97, a98, a99) {
            return v71;
        }
        f95(-9007199254740991, v77);
        v47[v70] ||= ([1024,19026,1125846339]).length;
        Math.tan(-1);
        function f106() {
            const o114 = {
                ...1.7976931348623157e+308,
                [-2]: 1.7976931348623157e+308,
                __proto__: 256,
                [1.7976931348623157e+308](a110) {
                    0 < 10;
                },
            };
            return o114;
        }
        const v115 = f106();
        class C116 extends f106 {
            3164398692 = v115;
            10000 = f106;
        }
        C116[741] %= 13;
        const o120 = {
            set b(a119) {
                v78 <<= v78;
            },
        };
        let {"a":v121,"g":v122,} = this;
    }
    static 0 = 1.4338749096752618e+307;
    #f;
    f = 1.4338749096752618e+307;
    static [-2.0];
    1;
    [v0] = -2.470822470778513;
    [1.4338749096752618e+307] = -2.470822470778513;
}
new C4(-2.470822470778513, -2.470822470778513);
new C4(1.4338749096752618e+307, -2.470822470778513);
new C4(-2.0, -2.0);
class C126 extends C4 {
    toString(a128, a129, a130) {
        const v133 = Reflect.construct(C4, [a130,-2.0], a129);
        try { new v133(v133, a129); } catch (e) {}
        return v0;
    }
    static #f;
    #e;
    [v0] = 1.4338749096752618e+307;
    #a;
}
new C126();
new C126();
new C126();
function f138() {
}
new BigUint64Array(0);
new BigInt64Array(257);
const v154 = new Uint8ClampedArray(3);
class C155 {
    constructor(a157, a158, a159, a160) {
        const v161 = this.constructor;
        try { new v161(3983, a160, this, this); } catch (e) {}
        for (let v163 = 0; v163 < 5; v163++) {
            v154[v163] = a160;
        }
    }
}
new C155();
