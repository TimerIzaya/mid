function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 129;
    } catch(e3) {
    }
    try {
        const t7 = 129;
        t7.c = 129;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new v5();
const v7 = new F0();
function f8() {
    return v5;
}
function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a11;
    } catch(e13) {
    }
    try {
        this.e = F0;
    } catch(e14) {
    }
    try {
        this.f = a12;
    } catch(e15) {
    }
}
new F9(v7, v7);
new F9(v7, v6);
new F9(F9, v6);
[1e-15,4.935774311400468,0.0,1.0];
[-1000.0,-0.0,-1.7976931348623157e+308,NaN,1000000000000.0];
[-1.7976931348623157e+308,-588.7878889763896,1.878787029496511,-2.220446049250313e-16,679.1230910485826];
function F25() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v27 = this[1073741824];
        v27[4040] = v27;
    } catch(e28) {
    }
}
new v6();
const v30 = new F25();
const v31 = new F25();
class C32 extends F25 {
}
const v33 = new C32();
const v34 = new C32();
const t54 = v34.constructor;
const v36 = new t54();
const v37 = new C32();
const v38 = v37.constructor;
new v38(v36, v38, v36, v31, v38);
class C40 {
    constructor(a42, a43, a44) {
        const v45 = a43.constructor;
        new v45(v45, C32, a43, a42);
        const t63 = a44.constructor;
        new t63();
    }
}
new C40(v31, v33, v30);
