function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 60639;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
class C7 {
    get e() {
        this.d ||= C7;
        F0 &&= this;
        return v5;
    }
    static [F0];
    static [v5];
    f;
    static 4271137953;
    static [C7] = v4;
    2193;
    3;
    127;
    [v5];
    [-2];
    constructor(a10) {
        function f12(a13) {
            return v4;
        }
        class C14 extends f12 {
            static #a = v5;
            g = a10;
            static [C7] = v4;
        }
        const v15 = C14?.apply;
        try { new v15(v4, F0); } catch (e) {}
        const v17 = new WeakSet();
        try { v17.delete(v17); } catch (e) {}
    }
    h;
    3138042056;
    1491 = v5;
    static #c;
}
const v19 = new C7(v4);
v19[1491];
const v21 = new C7(v19);
new C7(C7);
const v23 = /(?<a>)/visy;
const v24 = /L/gvis;
const v25 = /\p{Script=Greek}/gvmy;
function F26(a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    const v31 = C7?.__defineGetter__;
    try { new v31(a29, this); } catch (e) {}
    F0[3138042056] = a28;
    a30[3138042056];
    try {
        a28?.[65535];
        new Float32Array(6);
        new Int32Array(3723);
        new BigUint64Array(8);
        F0.h = C7;
    } catch(e44) {
    }
}
F26.e = F26;
new F26(v19, v21, v19);
const v46 = new F26(v19, v25, v6);
v46.length;
const v48 = new F26(v19, F0, C7);
const v49 = v48.__proto__;
29791 + 29791;
try { v49(29791, v25, 29791, v24, v23); } catch (e) {}
const o60 = {
    "maxByteLength": 1024,
};
const v62 = new SharedArrayBuffer(1024, o60);
new DataView(v62);
Promise.d = Promise;
