class C3 {
    [-9223372036854775807];
    static #a;
    static m(a5) {
        super[a5] = this;
        const o6 = {
        };
        try {
            o6.b = -9223372036854775807;
        } catch(e7) {
        }
        try {
            const o8 = {
            };
            o8.b = -9223372036854775807;
            Reflect.construct(a5, [], C3);
            super.c = o8;
            this.f;
            o8.d = a5;
        } catch(e13) {
            e13?.[a5];
            delete C3?.[10000];
            a5 = 2.220446049250313e-16;
            [1000.0,1000000000.0,-0.0,-2.220446049250313e-16];
            [396045.5408072397,-7.979293604540369e+307,-5.916990174153256,1.0103140036937912e+308];
            [2.0,1.144608391177218e+308];
        }
        try {
            const o19 = {
            };
            o19.b = -9223372036854775807;
            o19.d = a5;
            o19.f = this;
        } catch(e20) {
        }
        try {
            const o21 = {
            };
            o21.b = -9223372036854775807;
            o21.d = a5;
            o21.g = a5;
        } catch(e22) {
        }
        return 2.220446049250313e-16;
    }
    o(a24) {
        try {
            this.fuck(this, C3);
        } catch(e26) {
        }
        return -9223372036854775807;
    }
}
let v27 = new C3();
const v28 = new C3();
new C3();
new Float64Array(135);
const v35 = new Float64Array(3795);
const v36 = delete v35?.byteOffset;
v27 = v35;
%VerifyType(v36);
v28 >>> v28;
try {
    const o38 = {
    };
    new Float64Array(o38, 0, 0);
} catch(e41) {
}
new BigUint64Array(903);
const v50 = new Uint8ClampedArray(104);
v50["findIndex"](v36, v35);
[-60708,-1313369592,-14,-9223372036854775807];
[-11,169043596,2147483649,7579,-445959881,-16778];
[-16];
[];
v50.toLocaleString();
