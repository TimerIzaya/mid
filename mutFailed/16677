function f0() {
}
function F7(a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a9;
    } catch(e12) {
    }
    try {
        this.h = a11;
        try { a11["n"](); } catch (e) {}
        try { a11.transfer(); } catch (e) {}
    } catch(e19) {
    }
    try {
        this.f = 536870912n;
    } catch(e20) {
        const v22 = new a9();
        v22.filter(a11);
    }
    a10[f0] = a9;
    Math.trunc(536870888);
    this ^ 536870888;
    let v33 = -"toString";
    Math.expm1(536870888);
    -1e-15;
    v33++;
    ~v33;
}
new F7(1024n, 536870912n, 1024n);
new F7(268435440n, -9n, 268435440n);
new F7(-9n, 536870912n, 1024n);
class C44 {
    constructor(a46, a47) {
        try {
            this.fuck(a47, this);
        } catch(e50) {
            Object.defineProperty(e50, 10, { writable: true, enumerable: true, get: f0, set: f0 });
            e50--;
        }
    }
}
new C44();
"1343140951" % !C44;
