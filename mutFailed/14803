function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -154030684;
    } catch(e3) {
    }
}
new F0();
new F0();
const v6 = new F0();
class C10 {
    constructor(a12, a13, a14) {
        function f15() {
            undefined.expm1(undefined);
            return -59664;
        }
        this.toString = f15;
        let v18 = 0;
        do {
            super[this] = v6;
            v18++;
        } while (v18 < 3)
    }
}
const v25 = new C10(v6, 499325623, 499325623);
const v26 = new C10(v25, 499325623, -59664);
new C10(v26, -59664, 499325623);
class C28 {
}
const v29 = new C28();
let v30 = 591114.0785999324;
v30++;
const v32 = [v30,v30];
function F34() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.toString(this, F34, F34, this); } catch (e) {}
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    try { Date.toString(F34, 9223372036854775807); } catch (e) {}
    Date(v30);
    Uint32Array[0] = v32;
    let v44;
    try { v44 = new Uint32Array(Uint32Array, Uint32Array, 4); } catch (e) {}
    Uint32Array.hasInstance = Uint32Array;
    const v45 = new Uint32Array(5);
    try { v45.reduce(Date); } catch (e) {}
    const v49 = new Object(v32);
    const v50 = v49?.add;
    try { new v50(v44); } catch (e) {}
    let v53;
    try { v53 = ("delete").blink(4); } catch (e) {}
    v53[10] = v53;
    const v54 = v49["delete"](839612.5677247904);
    const v55 = v54 || v54;
    const v56 = 839612.5677247904 || v54;
    const v57 = v56 && v56;
    const o59 = {
    };
    o59.b = v44;
    o59.b = o59;
    o59.e = 19793;
    let v61;
    try { v61 = new Array(9223372036854775807); } catch (e) {}
    let v63;
    try { v63 = ("getPrototypeOf").blink(); } catch (e) {}
    let v64;
    try { v64 = v63.strike(v30); } catch (e) {}
    class C66 {
        ["getPrototypeOf"] = -1.7976931348623157e+308;
    }
    C66.e = v55;
    class C67 extends C66 {
        ["getPrototypeOf"] = C66;
    }
    try { new C67(v61, v53); } catch (e) {}
    C67.e = C67;
    const v69 = new C67();
    const v70 = v69?.getPrototypeOf;
    try { new v70(); } catch (e) {}
    v69.constructor;
    try { new v29(F34, v57); } catch (e) {}
    const v74 = Array(19793);
    for (const v75 of v74) {
    }
    const v76 = [v74,v74,v74,v74,v74];
    let v77;
    try { v77 = v76.includes(839612.5677247904); } catch (e) {}
    v77 && v77;
    BigUint64Array.e = 839612.5677247904;
    BigUint64Array.e = BigUint64Array;
    try { v64.reduceRight(v32); } catch (e) {}
    for (let v81 = 0; v81 < 5; v81++) {
    }
}
new F34();
new F34();
