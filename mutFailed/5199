const v1 = new WeakSet();
const v3 = new WeakMap();
let v4;
try { v4 = v1.delete(WeakSet); } catch (e) {}
v4 || v4;
const v6 = [v3];
const v7 = [v6];
const v8 = [v7,v7,v6];
v8.g = v8;
const v11 = new BigInt64Array(128);
let v12;
try { v12 = v11.reduce(v7); } catch (e) {}
v12 + 64;
Uint8Array.BYTES_PER_ELEMENT = Uint8Array;
const v16 = new v8(64);
try { v16.findIndex(v4); } catch (e) {}
new BigInt64Array(95);
10n ^ 10n;
9223372036854775807n & 9223372036854775807n;
const o29 = {
    set e(a27) {
        return;
    },
};
-9223372036854775807n;
-268435456n ^ -268435456n;
try { new Symbol(); } catch (e) {}
Symbol.hasInstance = Symbol;
