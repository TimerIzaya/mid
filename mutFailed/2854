function f0() {
}
class C1 extends f0 {
    static #d;
    static d = f0;
    static #f;
    static n() {
        let v3;
        try { v3 = f0(this, this, f0, this, ...f0, f0); } catch (e) {}
        super.g &&= v3;
        const v4 = v3?.[1024];
        try { v4(v4, f0, f0); } catch (e) {}
        return f0;
    }
}
const v9 = new C1(f0);
new C1();
const v11 = new C1();
function F15(a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = C1;
    } catch(e19) {
    }
    try {
        this.a = a17;
    } catch(e20) {
    }
}
new F15(-128, v11);
new F15(-128, v9);
new F15(-128, v11);
new Map();
function F32(a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a36;
    } catch(e37) {
    }
}
new F32(-1, 0, -1);
const v39 = new F32(65537, 56954, 2147483649);
new F32(2147483649, 56954, 0);
[1.7976931348623157e+308,-0.8980350919549736,2.2250738585072014e-308,-3.0,-1000000000000.0,-267.75976334507504,0.5338723597719759,-0.0,-689.1350408565975,1000000000000.0];
[0.0,914603.909104828,-1000000.0];
[5.890674631307606,-0.0,1.4614790266636172e+307];
try { v39.valueOf(); } catch (e) {}
const o51 = {
    "execution": "sync",
    "type": "minor",
};
const v52 = Uint16Array(o51);
const o53 = {
};
try {
    o53.f = -9223372036854775808;
} catch(e54) {
}
try {
    const o55 = {
    };
    o55.f = -9223372036854775808;
    o55.h = -16;
} catch(e56) {
}
try {
    const o57 = {
    };
    o57.f = -9223372036854775808;
    o57.e = -16;
    o57.d = v52;
} catch(e58) {
}
try {
    const o59 = {
    };
    o59.f = -9223372036854775808;
    o59.e = -16;
    o59.a = v39;
} catch(e60) {
}
