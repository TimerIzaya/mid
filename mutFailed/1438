function f0() {
    const o7 = {
        "a": "10",
        9: 457430.385304119,
        toString(a5) {
            const o6 = {
                9: a5,
                ...this,
                [a5]: 457430.385304119,
            };
            return this;
        },
    };
    return o7;
}
f0();
f0();
f0();
[-268435456,-1746];
[10000,1471360277];
[4096];
new Set();
/(?<a>.)\k<a>/guds;
/m(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\11VraNU/dis;
/[^123]a[a-z]*/vdiy;
class C23 {
    static 7;
    static [-1] = "string";
    #n(a25) {
        a25 = this;
        a25.e >>>= -35417;
        const o29 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o29);
        return this;
    }
}
new C23();
Array();
const v36 = Array();
class C38 {
    static 9 = 9.187362692894364;
}
for (const v39 in C38) {
}
class C40 {
    #e;
    static {
        this.toString = f0;
        function f42(a43, a44) {
            return a43;
        }
        const o50 = {
            o(a46) {
                const o48 = {
                };
                o48.type = this;
                return gc(o48);
            },
        };
        const o52 = {
        };
        const v54 = new Proxy(Uint32Array, o52);
        o50["o"](o50, Uint32Array, "o", "o", v54);
        const v57 = super[this];
        try { v57.join(-4096, -4096, v57); } catch (e) {}
        const o59 = {
        };
        [/LD/vds,1000.0];
    }
    static f;
    m(a64, a65) {
        const o66 = {
        };
        const o69 = {
        };
        const v71 = new Proxy(Uint8Array, o69);
        v71.d = v71;
        new Proxy(this, o66);
        class C77 {
        }
        function f78() {
            let v79 = 1000000000000.0;
            v79--;
            class C82 {
            }
            new C82();
            const v84 = new C82();
            [C77,C82];
            [257828.6336153492,v84];
            [v84];
            class C88 extends C23 {
            }
            function f89(a90, a91) {
                return -4096;
            }
            Set.toString = f89;
            Set.constructor(Set);
            v36.constructor;
        }
        const v95 = "string" && -4096;
        +a65;
        Math.sqrt(v95);
        a64--;
        -509886178 << -509886178;
        return this;
    }
}
new C23();
new C40();
new C40();
const v109 = new WeakSet();
function f110(a111) {
    return -21383n;
    return a111;
}
Object.defineProperty(v109, "constructor", { writable: true, configurable: true, value: f110 });
class C114 extends v109.constructor {
}
const v117 = new Uint16Array(512);
class C119 {
}
function F120(a122, a123) {
    if (!new.target) { throw 'must be called with new'; }
}
new Float32Array(v117);
