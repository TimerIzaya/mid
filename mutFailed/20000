function F2(a4, a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    function F7(a9, a10) {
        if (!new.target) { throw 'must be called with new'; }
        function f11(a12, a13, a14) {
            for (let i = 0; i < 5; i++) {
            }
            try {
                f11(this, a14, a14);
            } catch(e16) {
                function f17(a18, a19) {
                    return e16;
                }
                f17(this, f11);
            }
        }
        f11(a9, a9, F2);
    }
    new F7(F2, this);
}
class C24 {
    static #a;
    #f;
    #n(a26) {
        try {
            a26.#f;
        } catch(e28) {
        }
        return this;
    }
    static 12 = -4294967297;
    f;
    [-4096];
    [1024];
}
new C24();
new C24();
new BigInt64Array(218);
class C34 {
}
new C24();
[854244.8149548392];
[3.0,1.5546221427728047e+308,-3.772623727472544,-5.174235830341038,3.0,116.08131053072498,-2.0,2.2250738585072014e-308];
const v41 = [0.0037208641336579085,2.220446049250313e-16,2.0480809500799735e+306,1000000000000.0,-963211.0240415357,-1.0];
new WeakMap();
const v44 = [4294967295,268435439,2,-57458847];
[44429675,4294967297,-799260873,1579419609,-6,-2147483649,-9,268435456,-9223372036854775808];
const v46 = [4294967296,17929,1024,-1,2247,-1507953290,-4,-4096,-1382902055,268435456];
try { v46.groupToMap(v46); } catch (e) {}
const v51 = new Int32Array(512, 512);
for (let v52 = 0; v52 < 1000; v52++) {
    "p" + 512;
    v51[-4294967297] = v52;
}
4.0 >>> 4.0;
for (let v57 = 0; v57 < 11; v57++) {
    try {
        -v44.pop();
    } catch(e60) {
    }
}
try {
const t0 = -699732237;
t0(4.0, -973.3909000330103, 4.0, v44, 0.5551566747899912);
} catch (e) {}
const v66 = [0.49203380837431954,3.0,-868.5800375183363,-2.2250738585072014e-308,837.1252135353145,459879.7155111127,-0.0,0.0724582113206651,NaN];
v66[2] = v66;
const v67 = [-1000000.0,-1.0,952.4163692749257,41232.51719836402,-2.220446049250313e-16,869.918809614255,0.6566814488589754,-2.299816654271874,1000000000.0];
v67.toLocaleString();
class C69 {
}
new F2();
const v72 = Array();
try {
    const v73 = [v72,v72,v72];
    const o74 = {
    };
    const t77 = o74 > v73;
    t77();
} catch(e77) {
    for (let v78 = 0; v78 < 500; v78++) {
    }
}
[-1.7976931348623157e+308,-1000.0,2.0,1.0];
let v81 = 268435440;
v81++;
new Uint8Array(v81);
const v85 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
([-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1])[1];
const v89 = [601759695];
function f91(a92, a93, a94, a95) {
    const v96 = a92 - a92;
    a93[5] = a93;
    a94--;
    a95++;
    const v99 = delete v66?.length;
    try {
        v44.some(f91, a94);
    } catch(e101) {
    }
    function f102() {
        try {
            v85.forEach(a93);
        } catch(e106) {
            const v108 = new Date(Date);
            v108.setFullYear();
            ("async").lastIndexOf();
            e106.b = e106;
            e106.f = v99;
            e106.f = e106;
        }
        const v112 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o118 = {
            toString(a114, a115) {
                (a95 && a93) <= v112;
                return v112;
            },
        };
        let v119 = -268435456;
        v119++;
        const t119 = -973.3909000330103;
        const v121 = new t119();
        v121.delete(v121);
        const v125 = new Int16Array(2058);
        v125[256] = 2058;
        const o165 = {
            "c": -4294967297n,
            [522675525n](a127, a128) {
            },
            "c": v89,
            valueOf(a130, a131) {
                return this;
            },
            ["Vre"](a133, a134) {
            },
            4: "Vre",
            ...v112,
            [-4294967297n](a136, a137, a138, a139) {
            },
            "maxByteLength": -4294967295,
            "arguments": -4294967297,
            ..."Vre",
            valueOf(a141, a142) {
                return a142;
            },
            4: "Vre",
            valueOf(a144, a145) {
            },
            "arguments": v41,
            "apply": f102,
            set b(a147) {
            },
            "arguments": v72,
            __proto__: v67,
            p(a149, a150) {
                super.a = f102;
                return -973.3909000330103;
            },
            15: v96,
            "c": 2058,
            m(a152) {
                const v155 = new Int8Array(3938);
                let v156 = 3;
                let v157 = 0;
                v157 >> v157;
                for (let i = 0; i < 5; i++) {
                    [...v156] = v155;
                    v157++;
                }
                const o160 = {
                };
            },
            "type": "Vre",
            toString(a162, a163, a164) {
                return "Vre";
            },
        };
    }
    f102();
    %OptimizeFunctionOnNextCall(f102);
}
for (let v167 = 0; v167 < 5; v167++) {
    f91(-4294967297n, v85, v167, v167);
}
function f169() {
    return f169;
}
f169 <= 8n;
