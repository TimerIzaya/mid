let v1 = "n";
class C3 {
    static #valueOf(a5) {
        try {
            a5.h = a5;
        } catch(e6) {
        }
        v1 = "p";
        super.c;
        return 226.7526074968937;
    }
    h = "filter";
}
const v11 = new C3();
new C3();
new C3();
const v14 = [1.0,5.0,-3.9139318480509957e+307,-2.2250738585072014e-308,206004.20751991565,-2.220446049250313e-16,4.059332345275278e+307,-1.7976931348623157e+308,957.3802468070187];
const v15 = [1000000000.0,0.4078675426744923,1e-15];
let v16 = v15["p"];
v1[v16] = v11;
Object.defineProperty(v15, "e", { writable: true, configurable: true, enumerable: true, value: v14 });
v16 = "p";
try {
    C3.toString = "filter";
} catch(e17) {
}
const v18 = [2.220446049250313e-16,0.7563737898814785,-1.2889066612167727e+308,0.12069934223219425,-1000000.0,129.0563511612113,-1000000.0];
function F19(a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a22;
    } catch(e24) {
    }
    try {
        this.h = "filter";
    } catch(e25) {
    }
}
new F19(v15, v18, "filter");
new F19(v18, v18, v1);
new F19(v18, v15, "p");
const v32 = new Uint16Array(9);
v32.includes(true, -706152110);
for (let [v35,,v36,v37] of v15) {
    [v36,v32,v37,Uint16Array];
    [v37,[C3,v18,v18]];
}
