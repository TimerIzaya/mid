let v0 = -2.3532307422116583;
const v5 = new Float64Array(1962);
new BigInt64Array(1453);
const v11 = new Uint8ClampedArray(1728);
let v13;
try {
const t0 = -1000000000.0;
v13 = t0(Uint8ClampedArray, 1000);
} catch (e) {}
const v14 = new BigInt64Array(BigInt64Array, 1000, v13, -3.6051843633321656, 1962);
const v15 = v5[9];
try { new Uint8ClampedArray(v15, ...1728, 1000, v0); } catch (e) {}
v0 -= v0;
const v18 = new BigUint64Array(1000);
function f19(a20) {
    return a20;
}
class C21 extends f19 {
    static #e = v0;
}
const o22 = {
    ...v18,
};
v11[-2] += 1000;
function F23(a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v0;
    } catch(e27) {
    }
}
const v28 = new F23(1453, v15);
new F23(1453, v28);
new F23(1962, v14);
