function f0() {
    const o8 = {
        "f": "species",
        ..."species",
        [-858277007]: -858277007,
        __proto__: "species",
        "h": "species",
        "e": 396483.2907818982,
        "b": 396483.2907818982,
        "g": 396483.2907818982,
        ["species"](a5, a6) {
            return super.g;
        },
        ..."species",
        15: -858277007,
        ["species"]: 396483.2907818982,
    };
    return o8;
}
const v9 = f0();
const v10 = f0();
const v11 = f0();
function f12(a13, a14) {
    const o22 = {
        __proto__: a13,
        "h": v10,
        "c": a13,
        valueOf(a16, a17, a18) {
            const v19 = a16 instanceof f0;
            try {
                v11.fuck(v19, a18);
            } catch(e21) {
            }
            return a13;
        },
        "g": v11,
        [f0]: a13,
        [a14]: v9,
        "b": v10,
        ...v10,
        ...v9,
        2413772981: f12,
        ...v10,
        ...v9,
    };
    a13 ||= o22;
    a14 / a14;
    Object.defineProperty(v11, a13, { writable: true, configurable: true, get: f12, set: f12 });
    v11[f12];
    function F25(a27, a28, a29) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.g = a29;
        } catch(e30) {
        }
    }
    const v31 = new F25(v9, f12, f12);
    new F25(v10, F25, a14);
    new F25(v31, a14, f12);
    return o22;
}
f12(v11, v9);
f12(v9, v11);
f12(v11, v9);
new Int8Array(3);
new Int16Array(9);
new Uint32Array(16);
const v48 = new Uint32Array(127);
new Uint8Array(v48);
