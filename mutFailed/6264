let v2 = 7;
class C3 {
    #g = v2;
    static {
        delete this.g;
    }
    constructor(a7, a8, a9) {
        class C11 extends a8.constructor {
        }
        new C11();
    }
    static set f(a14) {
        new Array(1083);
    }
    static [-1];
    static {
        Reflect.construct(v2, [v2], v2);
        v2 = -1;
        super.f;
        [-0.3484514485991692,5.215616449601761e+307,0.8738032636808731,1000000000.0,0.5251786972157989,0.9162411350857441,1e-15,-2.2250738585072014e-308,-2.0];
        [1000000000000.0,0.6728671698015282,2.0,1.0,5.0,2.2250738585072014e-308,3.0];
        [2.2250738585072014e-308,297.6777373388484,0.691284488309957,0.5659485772077721,0.0,4.0];
    }
}
new C3();
new C3();
new C3();
function f32() {
    return 255;
}
let v38 = 1000000000000.0;
class C39 {
    b = -142.577867451237;
    [v38] = -142.577867451237;
    #m(a41) {
        const v43 = Symbol.toPrimitive;
        const o65 = {
            [v43]() {
                let v45 = Math;
                const v47 = ++v38;
                const v48 = v38 ** v38;
                v45 & (15462 ** 15462);
                +Infinity;
                (15462 || 1000000000000.0) + -142.577867451237;
                v45--;
                +v38;
                v45.log(v47);
                v45.sin(v48);
                try {
                    Symbol("toDateString");
                } catch(e64) {
                }
                return -142.577867451237;
            },
        };
        return this;
    }
}
const v68 = new BigUint64Array(1000);
const o69 = {
    ...v68,
};
new C39();
new C39();
new C39();
new Uint8Array(1246);
const v78 = new Uint16Array(512);
const t67 = [];
t67[6] = 4294967295;
ReferenceError(ReferenceError);
function F85() {
    if (!new.target) { throw 'must be called with new'; }
    typeof arguments;
    gc();
}
const v91 = new F85();
const t76 = v91.constructor;
new t76();
class C94 {
}
const v96 = new Date();
const v98 = new Set();
v98.add(v96);
new Int32Array(1);
function f101() {
}
class C102 extends f101 {
}
new C102();
[0.0,1000000.0];
function f105() {
    let v106 = 0;
    do {
        const o107 = {
        };
        try {
            o107.h = f101;
        } catch(e108) {
        }
        try {
            const o109 = {
            };
            o109.h = f101;
            o109.f = Uint8Array;
        } catch(e110) {
        }
        try {
            const o111 = {
            };
            o111.h = f101;
            o111.f = Uint8Array;
            o111.d = f101;
        } catch(e112) {
        }
        try {
            const o113 = {
            };
            o113.h = f101;
            o113.f = Uint8Array;
            o113.d = v78;
        } catch(e114) {
        }
        v106++;
    } while (v106 < 10)
    for (const v121 of Array(4087)) {
    }
    return Array;
}
f105();
f105();
