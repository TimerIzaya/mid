class C3 {
    set a(a5) {
        -Infinity;
    }
    static {
        this[6n] = C3;
        try {
            const t7 = 1;
            t7.length = 1;
        } catch(e11) {
            e11.d = e11;
        }
    }
}
new C3();
const v13 = new C3();
const v14 = new C3();
v14?.constructor;
try {
const t0 = 4294967296n;
new t0();
} catch (e) {}
1.6690234716196748e+308 ^ 1.6690234716196748e+308;
let v19 = -2.2250738585072014e-308;
const v20 = v19--;
[-9,-18424];
[268435456,1661418739,1692268137,1073741823,-4];
const v24 = [1090205054,255,-2390,1];
try { new Int32Array(v19, v13, 11n); } catch (e) {}
const v28 = new v20();
try { (129).reduceRight(v24); } catch (e) {}
BigInt64Array.length = BigInt64Array;
const v31 = new BigInt64Array();
const v32 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
let v33;
try { v33 = v32.some(); } catch (e) {}
const v34 = [-1.7976931348623157e+308];
function f35(a36, a37, a38, a39) {
    try { a36.reduceRight(a37); } catch (e) {}
    a39++;
    const o49 = {
        toString(a43, a44, a45) {
            try { this.toString(a44, v33, a43); } catch (e) {}
            a44++;
            a38[a37] = a36;
        },
    };
    return o49;
}
const v50 = f35(v31, 129, v34);
const v51 = v50?.toString;
try { new v51(v50, v34, v50); } catch (e) {}
const v53 = f35(v28, 129, v32);
for (let v54 = 0; v54 < 5; v54++) {
    v53 % v50;
    v32.b = v28;
}
