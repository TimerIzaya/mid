const v0 = [];
function f1() {
    return v0;
}
class C11 {
    constructor(a13, a14, a15) {
        let v16 = 0;
        do {
            a13[v16] = 1024;
            /j[\0][\c~]?/gdmy;
            /Id(?:a?)?/gudim;
            /a\nb\bc/gudims;
            "p" + -1;
            class C24 {
                set e(a26) {
                    Math.fround();
                    Math.ceil();
                }
                m(a31) {
                }
                e;
            }
            const v32 = new C24();
            const v33 = new C24();
            let v34 = ["number","ignoreCase",v32];
            const v38 = ("NN")["9"];
            let v39;
            try { v39 = v38(v33, v32, "string"); } catch (e) {}
            v34 = v39;
            v16++;
        } while (v16 < 1)
    }
}
new C11(f1, -175725568n, 297204880n);
new C11(1024, 9007199254740990n, -1);
new C11(1933673283, 9007199254740990n, v0);
let v46 = 1024;
for (let i50 = 0, i51 = 10;
    (() => {
        const v52 = i50 < i51;
        class C53 extends Date {
        }
        return v52;
    })();
    i50++) {
}
Int32Array[2] = Int32Array;
new Int32Array(v46);
new Uint8ClampedArray(2698);
const v66 = [];
const v67 = [v66,v66,v66,v66,v66];
class C68 {
    constructor(a70, a71) {
        function F72(a74, a75) {
            if (!new.target) { throw 'must be called with new'; }
            const v76 = this?.constructor;
            try { new v76(v67, this); } catch (e) {}
            a75 ^ a75;
            this.b = v66;
        }
        new F72(C68, v66);
        new F72(v66, v67);
        new F72(C68, v66);
    }
}
new C68();
new Uint32Array(204);
class C84 {
    static #m(a86, a87, a88) {
    }
    constructor(a90, a91, a92, a93) {
        this.#m();
    }
}
[-6.672391061426152e+307];
new Int32Array(Int32Array);
function f101(a102, a103, a104, a105) {
    const o106 = {
    };
}
class C107 {
    static get c() {
        const v109 = `
        `;
    }
}
function F111(a113, a114, a115, a116) {
    if (!new.target) { throw 'must be called with new'; }
    a116[1];
}
for (let v119 = 0; v119 < 10; v119++) {
}
for (let v120 = 0; v120 < 25; v120++) {
    class C123 {
    }
    const v124 = new C123();
    function F125(a127, a128, a129, a130) {
        if (!new.target) { throw 'must be called with new'; }
        const v131 = this.constructor;
        let v132;
        try { v132 = new v131(); } catch (e) {}
        this.b = 4.0;
        try {
            v132.c = v124;
        } catch(e133) {
        }
    }
    Array(36862);
    v46++;
    ([-833.5530374606573,-46757.76096849947,-2.220446049250313e-16,-1000000.0,0.0,1.0,0.042648320103989557,1.4570589756852907,145338.1606694283]).groupToMap;
}
