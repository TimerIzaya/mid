function f0() {
    new.target.d = new.target;
    function F7(a9) {
        if (!new.target) { throw 'must be called with new'; }
        const t4 = (-64209).constructor;
        t4(3n);
    }
    6.9456350946750725 - 6.9456350946750725;
    const o26 = {
        set h(a14) {
            [-8303,-9007199254740992,2623,65536,512,-9223372036854775807,1551336476,4];
            [268435439,6,1430293674,3,-959826342];
            [-5,-551913701,10,1621200107,-7,-8,-126771044];
        },
        65536: 6.9456350946750725,
        ..."-65535",
        ["-65535"]: 4294967297,
        "g": "-65535",
        "c": 4294967297,
        "e": 6.9456350946750725,
        [4294967297]: 4294967297,
        "h": 4294967297,
        [6.9456350946750725](a22) {
            const v23 = super.c;
            let v24;
            try { v24 = this.toString(6.9456350946750725, v23); } catch (e) {}
            try { v24.n(this, 6.9456350946750725, "-65535"); } catch (e) {}
            return v24;
        },
    };
    return o26;
}
const v27 = f0();
function f28() {
    return f28;
}
function f29(a30, a31) {
    return f29;
}
const v33 = new Promise(f29);
v33.then(f29);
v33.then();
const v36 = f0();
const v37 = f0();
6 == 6;
const v42 = [v37,-14154,v37];
const v43 = [v36,v37,v36,-14154,f0];
const v45 = new Float32Array(Float32Array);
for (let v46 = 0; v46 < 25; v46++) {
    function f47(a48, a49, a50, a51) {
        a48[1];
        for (let v53 = 0; v53 < 5; v53++) {
        }
        a49--;
        a48[0] = a48;
        const v56 = arguments?.__lookupGetter__;
        let v57;
        try { v57 = v56.constructor(f47, v56, v56); } catch (e) {}
        const v58 = new Float32Array(v46, v57, a49);
        const v60 = new Int32Array();
        const v61 = v58;
        v60.fill(...v61);
        return Float32Array;
    }
    for (let v63 = 0; v63 < 10; v63++) {
        f47(v45);
    }
}
const v65 = [v27,v42,6,6,v43];
function F66(a68, a69, a70) {
    if (!new.target) { throw 'must be called with new'; }
    a69.h = a69;
    a70[2];
    const t72 = "undefined";
    t72["256"] <<= 4.0;
    const o75 = {
    };
    try {
        this.h = -50910;
    } catch(e76) {
    }
    try {
        this.g = a70;
    } catch(e77) {
    }
}
[[]];
const v81 = new Uint8ClampedArray(Uint8ClampedArray, Uint8ClampedArray, Uint8ClampedArray);
const v82 = v81.length;
const v84 = ("stack").normalize();
async function f85(a86, a87, a88, a89) {
    Object.defineProperty(v84, 0, { enumerable: true, value: v82 });
    return f85;
}
try { new F66(v37, -14154, -14154); } catch (e) {}
new F66(6, v37, v65);
new F66(6, v37, v43);
new F66(6, v27, v65);
class C96 {
}
try { C96.bind(6); } catch (e) {}
for (let v99 = 0; v99 < 25; v99++) {
    v99 >>> v99;
    function f101(a102, a103, a104, a105) {
        for (let v106 = 0; v106 < 10; v106++) {
            v106 - v106;
            const v108 = v106 * v106;
            v108 + v108;
            C96.__proto__ = Date;
        }
        return f101;
    }
    for (let v110 = 0; v110 < 5; v110++) {
        v110 - v110;
        f101();
    }
}
const v113 = new Float32Array(11);
v113.lastIndexOf();
