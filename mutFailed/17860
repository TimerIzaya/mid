const v0 = [-2,10,-4740,268435441,-7,-39618];
const v1 = [54407];
const v2 = [7,-128,-9007199254740992,53208,1,-850110795,10788996,-1358300335];
let v5 = 6790;
const v6 = v5++;
function f7(a8, a9, a10) {
    a10 >>> a10;
    const o21 = {
        __proto__: a9,
        "c": v1,
        valueOf(a13, a14, a15, a16) {
            a16[5]?.[a8];
            try {
                v1.toReversed();
            } catch(e20) {
            }
            return a15;
        },
        "h": a8,
        "d": 65537,
    };
    let v22;
    try { v22 = o21.toLocaleString(); } catch (e) {}
    v22[15] = v22;
    return o21;
}
const v23 = f7(v0, v0, v5);
const v24 = f7(v0, v0, v5);
v24[4] = v24;
const v25 = f7(v0, v2, 60516);
try { v25.at(60516); } catch (e) {}
for (let v27 = 0; v27 < 32; v27++) {
    v24["p" + v27] = v27;
}
let v30 = 239;
v30--;
let v33;
try { v33 = Int16Array.bind(Int16Array); } catch (e) {}
v33.name = v33;
const v34 = new Int16Array(v30);
let v37;
try { v37 = Int8Array.apply(v5, v1); } catch (e) {}
const v38 = new Int8Array(255);
const o39 = {
    __proto__: v23,
    ...v38,
};
%VerifyType(v37);
v38.valueOf = f7;
v38[81] = v38;
/Y*/gudiy;
/a(?<!)*/gis;
const v42 = /[xojx]/gudms;
try { v37(v25, v42, v6); } catch (e) {}
new Uint8ClampedArray(3331);
new Float32Array(5);
new Uint32Array(161);
~2918;
BigUint64Array.toString = f7;
const v56 = new BigUint64Array(2918);
const v57 = v56?.constructor;
try { new v57(v38, f7, BigUint64Array); } catch (e) {}
try { v56.slice(60516, BigUint64Array); } catch (e) {}
const v60 = [];
try { v60.findLast(v60); } catch (e) {}
v60.constructor = f7;
function f62() {
    const v63 = v60.constructor;
    const v64 = v63.call();
    v64.d;
    try { v64.reverse(); } catch (e) {}
    return v63;
}
%PrepareFunctionForOptimization(f62);
f62();
%OptimizeFunctionOnNextCall(f62);
const v68 = f62();
let v69;
try { v69 = new v68(v34); } catch (e) {}
try { v69.valueOf(v69, 2918, 2918, v34); } catch (e) {}
