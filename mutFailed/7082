class C3 {
    constructor(a5, a6) {
        a6.g ||= 1.212488027753892;
        a5[a6] ^= 1.212488027753892;
    }
    set g(a8) {
        super[this] = this;
        const v9 = this[2147483648];
        const v11 = [v9?.[a8],4.0];
        [[v11,4.0,v9],v11];
    }
}
const v14 = new C3(-536870912, C3);
const v15 = new C3(4.0, -536870912);
const v16 = new C3(v15, v15);
function F17(a19, a20, a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -536870912;
    } catch(e23) {
    }
    class C24 {
    }
    new BigInt64Array();
    class C28 {
        4294967296 = 996195971n;
    }
    try {
        this.h = v14;
    } catch(e29) {
    }
    try {
        this.f = v15;
    } catch(e30) {
    }
}
new F17(v14, v15, v15, v14);
new F17(v16, v14, C3, v16);
new F17(v15, v15, v15, C3);
function f34(a35, a36, a37, a38) {
    const v39 = /(?:a*)+q(?<a>.)/guds;
    for (let [i43, i44] = (() => {
            0 >>> 0;
            return [0, 10];
        })();
        (() => {
            const v45 = i43 < i44;
            function f46(a47, a48) {
                return f34;
            }
            return v45;
        })();
        i44--) {
        for (let v54 = 0; v54 < 25; v54++) {
            v39.hasIndices = v39;
            const v55 = [1000000000.0,1.0,1.33700765354115,3.759383313252208,0.7953224416766568,9.060355110242564e+307,1.7976931348623157e+308,1.7976931348623157e+308,2.220446049250313e-16];
            function F56(a58, a59, a60) {
                if (!new.target) { throw 'must be called with new'; }
                const v61 = this.constructor;
                try { new v61(a59, a58, a60); } catch (e) {}
                a60 + a60;
                try {
                    this.b = v55;
                } catch(e64) {
                }
            }
            class C65 extends F56 {
                512 = v55;
            }
            new C65();
        }
        for (let v67 = 0; v67 < 5; v67++) {
            function f68() {
                const v70 = ("1073741824").constructor;
                return v70(f68, v67, v70, "1073741824", v70);
            }
            f68();
            %OptimizeFunctionOnNextCall(f68);
        }
    }
    return f34;
}
for (let v73 = 0; v73 < 10; v73++) {
    f34(v73, v73, f34, v73);
    class C75 {
    }
    function F76() {
        if (!new.target) { throw 'must be called with new'; }
        try {
            for (let [v78,v79,v80,v81] of F76) {
            }
        } catch(e82) {
        }
    }
}
const v85 = new Uint8Array(6);
["function",v85];
%OptimizeFunctionOnNextCall(f34);
f34();
