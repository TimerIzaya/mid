/[8(x)(x)(x)\1(?:a+)*[\cZ]sf\p{Changes_When_NFKC_Casefolded}J\xe2\x81\xa3?]/vdy;
const v1 = /(Ooa$(a{1,2}?)*)/vm;
/xyz??/ud;
class C3 {
}
const v5 = typeof 2147483647;
const v7 = ("undefined").repeat;
try { v7(v5); } catch (e) {}
const v9 = [v1];
const v10 = [v9,v9,v9];
[v10];
class C12 {
    static p(a14, a15, a16) {
        try {
            new BigInt64Array(6);
            class C20 {
            }
            super.getPrototypeOf(v10, v9, a15);
            [1,17,[Uint8ClampedArray,Uint8ClampedArray]];
        } catch(e27) {
        }
        return a15;
    }
    static #o(a29, a30, a31, a32) {
        Reflect.construct(this, [], a30);
        const v38 = new Int32Array(11);
        const v39 = [601759695];
        const v40 = [1073741824,1073741823,1376142744,1073741825];
        function f41(a42, a43, a44, a45) {
            function f46(a47, a48) {
                return v38;
            }
            f46.source;
            const v50 = f46();
            v50[5];
            v50 >> v50;
            let v54;
            try { v54 = v40["find"](...v39, a45, ...v39, ...v40); } catch (e) {}
            return v54;
        }
        f41(v39, 2147483647, 2147483647, 2147483647);
        try {
            a31.__proto__ = a29;
        } catch(e56) {
        }
        return a29;
    }
}
new C12();
new C12();
new C12();
function f60() {
    const v63 = new Int32Array(1024);
    for (const v64 of v63) {
        new SharedArrayBuffer();
    }
}
function f70(a71, a72) {
    function f73(a74, a75) {
        a75?.__lookupGetter__;
        a75?.constructor;
        return f73;
    }
    f73(f73, a71);
    %OptimizeFunctionOnNextCall(f73);
    return f70;
}
const v79 = f70();
new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
function f82() {
}
/a\S/gvimy.constructor.$4;
f70(v79, v79);
