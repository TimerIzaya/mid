new String(6);
new Uint8ClampedArray(728);
new BigUint64Array(127);
let v16 = 10 << 10;
--v16;
--v16;
new BigUint64Array();
function F22() {
    if (!new.target) { throw 'must be called with new'; }
    const v24 = [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    Date();
    const v28 = v24.reduce(Date)[22];
    function f31() {
        function f33(a34) {
        }
        Object.defineProperty(v24, 16, { writable: true, enumerable: true, get: f33 });
    }
    const t17 = Worker.constructor;
    new t17(v28);
    const v39 = [];
    v39.lastIndexOf(v39);
    const o41 = {
        "type": "function",
    };
    o41.arguments;
    new Worker(f31, o41);
    const v44 = Array(19793);
    for (const v45 of v44) {
    }
    const v46 = [v44,v44,v44,v44];
    new BigUint64Array(BigUint64Array, Date);
    const v50 = [[v46,v46]];
    try { Uint16Array.from(v39); } catch (e) {}
    const v53 = v50 >= Uint16Array;
    v53 || v53;
}
new F22(String, v16);
new F22();
const t38 = "byteLength";
t38[7] = "byteLength";
[-1000000.0,0.1600379490765781,-1.6243694690977962e+307,817210.0157459241,1.0,5.0,0.9202958446582343,-1.7976931348623157e+308,-382.2774365702321,-5.737866676165018e+307];
