const v0 = [-5.0];
const v1 = [275.89751200755563,0.06717678742576039,-1.0,-285.69682046047774,568.6187777127479,-1.4442721703359413e+308,1.0,54814.72738608974];
function f2(a3) {
    function F4() {
        if (!new.target) { throw 'must be called with new'; }
    }
    return v0;
}
v1[Symbol.toPrimitive] = f2;
const v8 = [-819.9858021301718];
v8[Symbol.toPrimitive] = f2;
const v11 = [v8,v8,v0,v8,v8];
const v12 = v11[3];
const v13 = [v11,v1];
[v13,v1];
const v16 = !true;
new Int16Array(0);
new Uint8Array(4);
new Int16Array(5);
const v29 = [1999944210];
const v30 = [4682,-3,8729,-2];
const v32 = new Map();
let v33;
try { v33 = v12(v32, 5, v16, v32, 128); } catch (e) {}
v33++;
Math.tanh(v13);
true || v13;
true || 268435440;
try { v30.fill(v29); } catch (e) {}
[8,3,-9007199254740992,3];
try { Float64Array.from(null); } catch (e) {}
