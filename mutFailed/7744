function f0() {
}
function f11() {
    return f11;
}
for (let i14 = 0, i15 = 10;
    (() => {
        const v16 = i14 < i15;
        class C17 {
        }
        C17[Symbol.toPrimitive] = f11;
        const v22 = new BigUint64Array(3375);
        let [v23,,v24,...v25] = v22;
        return v16;
    })();
    i14++) {
}
new Int16Array(323);
const v35 = new Int32Array(4);
new Uint8Array(165);
const v39 = /EyL9/uim;
const v40 = [-1300791131,33477,0,5,-48254,14,4294967295,545422795];
function F41() {
    if (!new.target) { throw 'must be called with new'; }
    function F43(a45, a46) {
        if (!new.target) { throw 'must be called with new'; }
        const v47 = this.constructor;
        try { new v47(); } catch (e) {}
        function f49() {
            return F43;
        }
        %PrepareFunctionForOptimization(f49);
        f49();
        %OptimizeFunctionOnNextCall(f49);
    }
    const o52 = {
    };
    new v35();
    const o64 = {
        m(a55) {
            const v58 = new Int8Array(3938);
            let v59 = 3;
            let v60 = 0;
            v60 >> v60;
            for (let i = 0; i < 5; i++) {
                [...v59] = v58;
                v60++;
            }
            const o63 = {
            };
        },
    };
    return o64;
    const v66 = /((((.).).).)rfoo|(bar|baz)|quux*/uims;
    try { v66(); } catch (e) {}
    const o71 = {
        get b() {
            delete this[this];
            this[this] = 817905185;
            return v66;
        },
    };
    const o72 = {
        ...o71,
    };
    const v73 = [gc,v39];
    Reflect.apply(v40.push, v39, v73);
}
new F41();
