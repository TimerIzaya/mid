const v1 = new Date();
const v5 = [9392,17643];
[1975,-25019,-9007199254740990,5,39146,39326,30920];
const v7 = [-1541466006,2147483648,-9007199254740990,536870888,-4294967296,-505648519,8,9007199254740992,65537];
[0.5371730362690739,v5,v1];
[v7,Date,v1];
[v1,-1000000000.0];
class C14 {
    constructor(a16, a17) {
        a17.__proto__;
    }
    f;
    set d(a20) {
        super.d;
        const o22 = {
        };
    }
}
const v23 = new C14(-9340, 2147483649);
const v24 = new C14(-9340, 1073741823);
const v25 = new C14(1073741823, v23);
function F26(a28, a29, a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
}
new F26(v23, v24, 2147483649, -9340);
const v33 = new F26(v23, v24, 1073741823, -9340);
const v34 = new F26(v23, v25, -9340, 1073741823);
const v36 = new WeakSet();
const v38 = new Set();
Object.defineProperty(v23, v38.size, { writable: true, get: Date });
const v40 = Date.prototype;
v7[v33] = 2.220446049250313e-16;
const v41 = 2147483649 && Date;
new Float64Array(1136);
Math.round(2147483648);
Math.atan(2147483648 ^ 2147483648);
Math.exp(2147483648);
const v53 = new Int32Array(4);
new Uint32Array(48);
try {
    v33.fuck(v34, 1136);
} catch(e58) {
}
v34.__proto__;
const v60 = v53.buffer;
try { v41(Uint32Array, v36, v60, v40); } catch (e) {}
const o65 = {
    "execution": "sync",
    "type": "minor",
};
gc(o65);
