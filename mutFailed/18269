const v0 = [1024,256,268435440,-6,764940014];
const v1 = [-65536,34673,9147,-14,-864443864,-65536,877070917,-61862,9007199254740991,-562086795];
const v2 = [-42915,46079,5304,-64605,1073741824,10000];
const v3 = [-10571,257,479445186,-14,-9007199254740992,677286811,65535,45798,-1073741824,6];
const v4 = [-256];
let v5 = [1073741824,256,-34807,268435456,-6680,135889721,129,1073741824,4294967295];
function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        v5 /= this;
        v4["some"](a9, 11866n);
        this.f = a11;
    } catch(e17) {
    }
}
new F6(v5, v2, v5, v3);
const v19 = new F6(v2, F6, v5, F6);
new F6(v1, v4, v1, v19);
[4294967295,-9007199254740992,11,129,5,-3063,8,-8];
[-48783,-47467];
[6];
[-3.0,952.1054171388887,404324.27216332033,-1000000000000.0,1.7976931348623157e+308,-2.0,Infinity,2.0];
function f27(a28, a29) {
    for (let v31 in this) {
        v31 -= v31;
        try { new v3(...v31, -6.441557670402009, v31); } catch (e) {}
    }
}
[];
const o37 = {
    "type": "function",
};
new Worker(f27, o37);
const o40 = {
};
let v42 = 207;
for (; v42--;) {
    for (let v45 = 0; v45 < 32; v45++) {
        "p" + v45;
    }
}
[-6.695596969959072];
[0.03568519099872258];
function f52(a53, a54, a55, a56) {
}
const v58 = new o40();
const v59 = [-1000.0,2.0,6.498411136794167e+307,1.5301115680028905e+308,-1.0240581174585665e+308,-73553.73579822388,-474.34134439650745,2.300981674378132,-816063.8647013834,-1.2620665326245469e+308];
const v60 = [];
const v61 = [];
function f62(a63, a64) {
    const o84 = {
        129: v60,
        __proto__: v61,
        o(a66, a67, a68, a69) {
            Reflect.apply(([a63]).reduce, f62);
            return a64;
        },
        set f(a75) {
            const o76 = {
            };
            try {
                o76.f = v0;
            } catch(e77) {
            }
            try {
                const o78 = {
                };
                o78.f = v0;
                o78.d = f52;
            } catch(e79) {
            }
            try {
                const o80 = {
                };
                o80.f = v0;
                o80.d = f52;
                o80.b = v2;
            } catch(e81) {
            }
            try {
                const o82 = {
                };
                o82.f = v0;
                o82.d = f52;
                o82.h = this;
            } catch(e83) {
            }
        },
        "f": v61,
        "e": v58,
        ...a64,
    };
    return o84;
}
f62();
%PrepareFunctionForOptimization(f62);
F6(v59, v61);
%OptimizeFunctionOnNextCall(f62);
f62(f62, v60);
