const v0 = [];
class C4 {
    constructor(a6, a7) {
        const v9 = [];
        Reflect.construct("split", v9, "a");
        let [,v11] = v9;
        let v14 = -2147483648;
        "split" && v14;
        ++v14;
        v14 ^ "a";
    }
    static ["a"];
    7 = "t";
}
new Date();
function f20(a21) {
}
const v22 = f20(f20);
f20();
new Set();
function F26(a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
}
new F26(v22);
for (let v32 = 0; v32 < 25; v32++) {
    const v33 = [601759695];
    const v34 = [1073741824,1073741823,1376142744,1073741825];
    function f35(a36, a37, a38, a39) {
        try { v34["find"](..."find", a39, ...v33); } catch (e) {}
        const v42 = [Set];
        [v42,v42,v32];
        v33 || f20;
    }
    for (let v45 = 0; v45 < 5; v45++) {
        f35();
    }
}
const v47 = new C4("split", "split");
const v48 = new C4("t", v47);
new C4("t", "split");
function f50(a51, a52, a53, a54) {
    const o71 = {
        [a51](a56, a57, a58, a59) {
            a58.__proto__;
            return a52;
        },
        "d": "a",
        ...v0,
        "a": "t",
        toString(a63, a64) {
            try { a63["n"](a63); } catch (e) {}
            try {
                ("split").padEnd(-2147483647, "GAP");
            } catch(e70) {
            }
            return C4;
        },
    };
    return o71;
}
const v72 = f50(v47, C4, "split", "t");
f50(f50(v72, v48, "split", v47), v72, v48, "a");
new Uint32Array(5);
new Int32Array(1000);
new Uint8ClampedArray(1024);
for (let v84 = 0; v84 < 5; v84++) {
    for (let v85 = 0; v85 < 5; v85++) {
        const t67 = [0.8307152163010869,1.0,0.0];
        t67.length = v85;
    }
}
