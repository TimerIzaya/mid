let v0 = 940;
const v2 = new Uint32Array(v0);
v0 = 2470;
try {
    v2.set(v2);
} catch(e6) {
}
new Uint16Array(v0);
new Int32Array(v0);
[1.0,-2.2250738585072014e-308];
const v13 = [-1000.0,-3.0];
const v14 = [1000.0,3.0,-236.1200314858172,0.0,2.2250738585072014e-308,-261.646428841207,NaN,5.0];
const v15 = [];
function f16(a17) {
    try {
        const v18 = Uint32Array != a17;
        v18 ? Uint32Array : a17;
        v13.length -= v18;
        try {
            v15.toReversed();
        } catch(e21) {
        }
        v14 >> v15.some();
        class C25 {
        }
        new Uint32Array(Uint32Array);
        const t26 = [gc,gc,gc,gc,gc];
        t26.toJSON = gc;
        const v31 = [a17];
        const o32 = {
            "arguments": v31,
            "type": a17,
        };
        new BigUint64Array(72);
        new Float32Array(1797);
        new BigInt64Array(2612);
    } catch(e41) {
        e41.message = e41;
        e41.stack;
    }
    return a17;
}
v15.toString = Int32Array;
const o44 = {
    [v15]() {
    },
};
