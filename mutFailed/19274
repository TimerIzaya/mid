const v0 = [];
class C4 {
    #b;
    o(a6) {
        let v7 = -this;
        a6 **= v7;
        try {
        const t0 = -1e-15;
        new t0(-1e-15, v7, -1e-15, ...v0, a6, ...this);
        } catch (e) {}
        Object.defineProperty(v0, "length", { configurable: true, value: v7 });
        try { v0.push(v7); } catch (e) {}
        !v7;
        let v12 = -6;
        const v14 = v12++;
        Math.hypot(--v7);
        Math.pow(v14, v14);
        +(+v12);
        return a6;
    }
}
const t21 = -658.9211003542689;
new t21();
new C4();
new C4();
new Int8Array(13792);
new BigInt64Array(0);
new Float32Array(147);
let v32 = [-9223372036854775808,2067924475,-536870912,4294967296,46528,-13,2044244347,1024,2243,1073741823];
class C35 extends Int16Array {
    constructor(a37, a38, a39, a40) {
        super();
        function f41(a42) {
            let v44 = 4.0;
            let v45 = 0;
            do {
                typeof v45 === "string";
                v45++;
                class C50 {
                }
                function f51() {
                    return this;
                }
                f51();
            } while (v45 < 7)
            let v55 = 0;
            do {
                v32 = v44;
                v55++;
            } while (v55 < 10)
            for (let v60 = 0; v60 < 10; v60++) {
                class C61 {
                    static {
                        this[Symbol.hasInstance];
                    }
                }
            }
            const v67 = new Uint16Array(3327);
            const v68 = [-2038832922,-14];
            v67.set(v68);
            const v75 = new Uint16Array(6);
            const v78 = new Float64Array(127);
            gc();
            new Int16Array();
            const v83 = new Float32Array();
            new Uint8Array(v83, Uint8Array, Uint8Array);
            new Uint16Array(a39);
            new Uint16Array(v68, -9894, a39);
            f41(this);
            %PrepareFunctionForOptimization(f41);
            f41(this);
            f41(this);
            new Date(Uint32Array);
            const o98 = {
                n(a96, a97) {
                },
            };
            f41(this);
            function f100() {
                const o101 = {
                    "b": v68,
                };
                return o101;
            }
            const t84 = 8;
            t84();
            v78[127] = 127;
            v75[536870888] = -1876875593;
            try {
                v78.values();
            } catch(e104) {
                const v105 = e104?.a;
                try { v105(e104, v105, v105, v105); } catch (e) {}
                function F107(a109, a110, a111, a112) {
                    if (!new.target) { throw 'must be called with new'; }
                }
                new F107(F107, 8, 127, e104);
                const v114 = new F107(52235, 6, -1876875593, Uint16Array);
                F107(v114, 6, 1000);
                for (const v117 of "some") {
                }
            }
            v44 = -451445.2180572981;
            function f118(a119) {
                return f118;
            }
            this.onmessage = f118;
        }
        const o122 = {
            "type": "function",
        };
        new Worker(f41, o122);
    }
}
new C35();
new C35();
