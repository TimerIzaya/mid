function f0() {
}
/xyz{1,}?/dimy;
const v2 = /Ha\fb\nc\rd\te\vf\9qZ/gim;
const v3 = /L*/uim;
const v4 = v3?.test;
let v5;
try { v5 = new v4(v2); } catch (e) {}
v3.f = v3;
let v9;
try { v9 = ("object").toWellFormed(); } catch (e) {}
-866228129 === -866228129;
-16458616 | -866228129;
try { new Int8Array("object", -16458616, v2); } catch (e) {}
const v18 = new Int8Array(702);
try { v18.findLast(702); } catch (e) {}
v18[149] = v18;
let v22;
try { v22 = new Uint32Array(Uint32Array, "object", "asinh"); } catch (e) {}
v22[1] = v22;
new Uint32Array(3);
const v26 = new v5(7);
const v27 = v26[4];
-45095n ^ -45095n;
function f33() {
    return -45095n;
}
class C34 {
    static #m(a36, a37, a38) {
    }
    constructor(a40, a41, a42, a43) {
        try { this.constructor(f33, f33, this, v26); } catch (e) {}
        const v45 = a40?.toLocaleUpperCase;
        try { new v45(); } catch (e) {}
        a42 | a42;
        const v48 = --v9;
        !(v48 !== v48);
        try {
            this.#m();
        } catch(e52) {
            const v54 = e52.message?.fontcolor;
            try { new v54(a43); } catch (e) {}
        }
    }
}
try { new C34("f", -866228129, "f", 702); } catch (e) {}
const o58 = {
    get h() {
    },
};
o58.h = o58;
function F59(a61, a62, a63) {
    if (!new.target) { throw 'must be called with new'; }
    this.__proto__;
    const v65 = v27.constructor;
    try { v65.call(-45095n); } catch (e) {}
    try { new v65(); } catch (e) {}
    o58.h = C34;
    try {
        this << o58;
        [-0.0,0.35331453774891175,0.0,171.67492280642023,0.015915737133018082,-390268.7701156768,-1000000000000.0,-0.0,5.0,-2.220446049250313e-16];
        const v70 = [607.0076449847468,-818.8860494127688];
        v70[0];
        v27[2];
        v70[3];
    } catch(e74) {
    }
}
new F59();
const v76 = new F59();
const v77 = v76?.constructor;
try { new v77(F59, -16458616, F59); } catch (e) {}
const v79 = new C34(9007199254740991n, 64n, 22453n, -45095n);
v79.length;
const v81 = v79?.constructor;
v81.g = v81;
let v82;
try { v82 = new v81(f33, v79, f33, v18); } catch (e) {}
v82.length = v82;
10 * 10;
10 / -2147483649;
const v87 = new BigUint64Array(10);
v87["filter"](f33);
