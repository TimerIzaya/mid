new BigInt64Array(1024);
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    const v7 = this.constructor;
    try { new v7(); } catch (e) {}
    try { this.constructor(); } catch (e) {}
}
function f12(a13, a14) {
    return f12;
}
const v16 = new Set();
v16["isArray"]();
new Float32Array(256);
const o22 = {
};
function f24() {
    return 154;
}
new Float32Array(59);
const o27 = {
};
let v28 = 144;
v28++;
["isArray","isArray","isArray","isArray","isArray"];
new Float64Array([-25855,-25855,[-25855]]);
const v38 = [];
const v40 = new Array(1024);
class C41 {
    [Array] = v38;
    static {
        function F43(a45, a46) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.b = a46;
            } catch(e47) {
            }
        }
        const v48 = new F43(v40, this);
        new F43(Array, F43);
        new F43(v48, v40);
    }
}
