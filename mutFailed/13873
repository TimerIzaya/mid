class C3 {
    get b() {
        this["RjUBs"];
        return 0.3186590380502594;
    }
    #n(a7) {
        const t6 = "RjUBs";
        t6[68] >>= a7;
        let v8;
        try { v8 = new a7(a7); } catch (e) {}
        try { v8(v8, -2); } catch (e) {}
        const v11 = [];
        Reflect.apply(("RjUBs").split, a7, v11);
        return a7;
    }
}
const v14 = new C3();
new C3();
const t18 = -2;
new t18();
function F20(a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = "RjUBs";
    } catch(e25) {
    }
    try {
        this.f = v14;
    } catch(e26) {
    }
    try {
        this.d = a23;
    } catch(e27) {
    }
}
const v28 = new F20(C3, -2, -2);
new F20(0.3186590380502594, -2, 65537);
new F20(C3, 65537, 57810);
[9223372036854775807,65536,-5,954251139,-2147483648,-53319,-2147483647,1,-25360];
const v40 = 1940694780n ^ 1940694780n;
Object.defineProperty(v28, v40, { configurable: true, value: v40 });
const o41 = {
};
try {
    o41.c = 1940694780n;
} catch(e42) {
}
try {
    const o43 = {
    };
    o43.c = 1940694780n;
    o43.a = v28;
} catch(e44) {
}
try {
    const o45 = {
    };
    o45.c = 1940694780n;
    o45.a = v28;
    o45.b = -546431391;
} catch(e46) {
}
try {
    const o47 = {
    };
    o47.c = 1940694780n;
    o47.a = v28;
    const t67 = 65537;
    t67.b = v40;
} catch(e48) {
}
function F51(a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
    const v55 = this.constructor;
    try { new v55(); } catch (e) {}
    -a53;
}
new F51(Float32Array, v40);
class C59 extends F51 {
    #o(a61, a62) {
        v40 instanceof F51;
        const v65 = Symbol.iterator;
        const o74 = {
            [v65]() {
                let v67 = 10;
                const o73 = {
                    next() {
                        v67--;
                        const v71 = v67 == 0;
                        const o72 = {
                            "done": v71,
                            "value": v67,
                        };
                        return o72;
                    },
                };
                return o73;
            },
        };
        return a62;
    }
    3120 = F51;
}
new C59();
new C59();
new C59();
