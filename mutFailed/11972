function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = -2147483647;
    } catch(e3) {
    }
    try {
        this.h = -2147483647;
    } catch(e4) {
    }
    try {
        this.f = -2147483647;
    } catch(e5) {
    }
}
const v6 = new F0();
new v6();
const v8 = new F0();
const v9 = v8?.__defineSetter__;
try { new v9(F0, v6); } catch (e) {}
[347489451,9,-1];
const v15 = [268435440];
[4096];
class C17 {
    static set b(a19) {
        this[a19] = v6;
        a19 * 536870888;
        const v24 = -854292762 >>> a19;
        Math.atanh(v24);
        v24 % -854292762;
    }
    #c;
    [2.2250738585072014e-308];
    [539147.0289977959] = 2.2250738585072014e-308;
}
try { new C17(); } catch (e) {}
const v28 = new C17();
try { v28.propertyIsEnumerable(v15); } catch (e) {}
const v30 = new C17();
const v31 = new C17();
const v32 = v31?.constructor;
try { new v32(); } catch (e) {}
const v35 = [,];
const v37 = ([,v35,v35])?.filter;
try { new v37(v15); } catch (e) {}
const v39 = [,v35];
class C40 {
    [v39] = undefined;
}
new C40();
let {"f":v42,"g":v43,...v44} = v28;
v44.b = 2.0;
[1073741824,257,-2096130763,-12];
const v46 = [3,6,-1806031485,-1916844674,65536,-14,690334729,-536870912,1397145426];
try { v46.reverse(); } catch (e) {}
const v48 = [2104187889,-9223372036854775807,1,14,1024,-5,1753612550];
try { v48.slice(undefined, v30); } catch (e) {}
let {"a":v50,} = v44;
new C40();
182 + 182;
try { Int8Array.of(); } catch (e) {}
-55554 - -55554;
function f67() {
}
function f68() {
    const o92 = {
        valueOf() {
            try {
                for (let v73 = 0; v73 < 10; v73++) {
                    v73 >> v73;
                    with ([4294967297,-1648241970,9,3,-2,0,-4294967296,10]) {
                        length - length;
                        const v80 = length | length;
                        v80 - v80;
                    }
                    function F83(a85) {
                        if (!new.target) { throw 'must be called with new'; }
                        const v86 = this?.__defineGetter__;
                        try { new v86(v30, Symbol); } catch (e) {}
                        this.b;
                    }
                    F83.length;
                    new F83();
                }
                this.valueOf = f67;
            } catch(e91) {
            }
        },
    };
    return o92;
}
const v93 = f68();
try { new Uint8Array(Uint8Array, v8, f68); } catch (e) {}
const v100 = f68();
function F101(a103, a104) {
    if (!new.target) { throw 'must be called with new'; }
    a103.valueOf();
    const v106 = this.constructor;
    try { new v106(a103); } catch (e) {}
}
new F101(v100);
new F101(v93);
const v111 = [13,-3,1073741824,4294967295,-910142687];
[692069130,-8,-65208,65536,-48837,1766141532,256,-65537,32577,-24320];
const o115 = {
    "maxByteLength": 1073741825,
};
[5.0,-0.8988123263596535,NaN,-789.6943703557347,NaN,1000000000.0,-761153.5805371245,0.6510814062649484,1000000000000.0,-612366.6682142443];
[1000.0];
let [,v119] = [-895.0927450826263,-2.220446049250313e-16,-2.220446049250313e-16,8.483382738964544];
try { v119(v119, v15, v31, v35); } catch (e) {}
const v122 = new ArrayBuffer(512, o115);
new Int16Array(v122);
v122[v35] = v111;
