class C3 {
    o(a5) {
        try { a5(1000000000.0, a5); } catch (e) {}
        super[1000000000.0];
        return "D7";
    }
    m(a10) {
        super[a10] = 1000000000.0;
        a10?.[this];
        let [,,v13] = "D7";
        return v13;
    }
    static #a = "-1153158408";
}
new C3();
new C3();
new C3();
const v23 = new Uint8Array(3);
new Float64Array(128);
const v29 = new Int32Array(256);
function F30() {
    if (!new.target) { throw 'must be called with new'; }
}
const v32 = new F30();
function F33(a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
}
const v37 = new F33();
const v40 = [];
function F42() {
    if (!new.target) { throw 'must be called with new'; }
    this.toString(this, F42, F42, this);
    Date.toString(F42, 9223372036854775807);
    v32.replaceAll(v32, -37859n);
    const v50 = new Uint32Array(Uint32Array, Uint32Array, 4);
    const v53 = new Set(v40);
    const v54 = v53.add;
    try { new v54(v50); } catch (e) {}
    const v57 = v53["delete"](839612.5677247904);
    const v58 = v57 || v57;
    v58 || v58;
    const v60 = v58 && v58;
    const o62 = {
    };
    Float64Array.b = o62;
    o62.e = 19793;
    try { new Array(9223372036854775807); } catch (e) {}
    let v66;
    try { v66 = ("getPrototypeOf").blink(); } catch (e) {}
    this[28].strike();
    const v69 = v66.strike(591114.0785999324);
    let v70;
    try { v70 = v69.replace(19793, v37); } catch (e) {}
    v70[11] = v70;
    class C72 {
        [v29] = -1.7976931348623157e+308;
    }
    class C73 extends C72 {
        ["getPrototypeOf"] = C72;
    }
    try { new C73(); } catch (e) {}
    let v75;
    try { v75 = new C73(); } catch (e) {}
    v75.getPrototypeOf;
    let v77;
    try { v77 = new C73(); } catch (e) {}
    const v78 = v77?.getPrototypeOf;
    try { new v78(); } catch (e) {}
    const v80 = new C73();
    const v81 = v80.getPrototypeOf;
    try { v81(v75); } catch (e) {}
    let v83;
    try { v83 = new v81(); } catch (e) {}
    try { v83.propertyIsEnumerable(v70); } catch (e) {}
    const v85 = v83?.constructor;
    let v86;
    try { v86 = new v85(v66, this, 4); } catch (e) {}
    try { v86.constructor(); } catch (e) {}
    const v88 = v80.constructor;
    try { new v88(F42, v60); } catch (e) {}
    const v90 = (839612.5677247904)?.getPrototypeOf;
    v90?.apply;
    try { new v90(); } catch (e) {}
    for (const v94 of Array(19793)) {
    }
}
new F42();
const v96 = new v23();
v96.constructor;
const t88 = v96.constructor;
new t88();
