[4494,536870889,-772675306];
[-1073741824];
[-4294967297,9007199254740990,-256,828007021,-268435456,-4096,10000,-2,-10666396];
class C12 {
}
const t5 = -9007199254740990n;
const v13 = new t5();
const v15 = new Uint32Array(C12);
const v17 = [601759695];
const v18 = [1073741824,1073741823,1376142744,1073741825];
function f20(a21, a22, a23, a24) {
    function f25() {
        const t12 = "Vre";
        t12[1] = "Vre";
        let v28;
        try { v28 = Math.expm1(Math); } catch (e) {}
        const v30 = Number.isNaN(v28);
        Math.expm1();
        const v32 = Math.tanh();
        const v33 = Math.hypot();
        Float64Array.BYTES_PER_ELEMENT = Float64Array;
        new Int8Array(Int8Array);
        v30.buffer;
        try {
            v18.findLast();
        } catch(e39) {
            const t26 = e39?.constructor;
            t26();
        }
        const o55 = {
            [522675525n](a43, a44) {
            },
            "c": v17,
            1073741824: v15,
            __proto__: v15,
            9: v13,
            [2n](a46, a47, a48, a49) {
            },
            valueOf(a51, a52, a53, a54) {
                super.c **= v33;
                return f25;
            },
            4: "Vre",
        };
        return v32;
    }
    f25();
    eval();
    %OptimizeFunctionOnNextCall(f25);
    return 522675525n;
}
for (let v59 = 0; v59 < 5; v59++) {
    f20(Uint32Array, 2n, v59, v17);
}
