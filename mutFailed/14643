function f2() {
    for (let v3 = 0; v3 < 10; v3++) {
        let v5 = Math.atanh(v3);
        v5--;
    }
}
const t6 = -4096;
t6();
const v8 = f2();
function F13(a15) {
    if (!new.target) { throw 'must be called with new'; }
    a15 ^ a15;
    const v17 = this?.constructor;
    try { new v17(3n); } catch (e) {}
}
new F13(349865170n);
function f20(a21) {
    a21--;
    const o37 = {
        [-4096]: a21,
        [129]: a21,
        set a(a24) {
            new Int16Array(1024);
            new Uint16Array(142);
            new Uint8Array(566);
        },
        [129](a35, a36) {
        },
    };
    return o37;
}
try { f20(129); } catch (e) {}
const v39 = f20(9223372036854775807);
v39[129] = v39;
const v40 = f20(129);
const v41 = f20(v40);
function F42(a44, a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
    a45[129] = f20;
    a46--;
    try {
        a44.a = a45;
    } catch(e48) {
    }
    const v49 = [-2.0,-1.0,-5.0,-5.429610213896366,-2.2074967697332255,76807.25242455839,1.7976931348623157e+308];
    function F50(a52, a53) {
        if (!new.target) { throw 'must be called with new'; }
        const v54 = this.constructor;
        let v55;
        try { v55 = new v54(a52, v54, this, v49, v49); } catch (e) {}
        v49.fill(v55, v54);
    }
}
const v57 = new F42(v41, v8, -4096);
v57.d = v57;
const v58 = new F42(v41, v40, 9223372036854775807);
v58.a;
const v60 = new F42(v39, v41, -4096);
v60.a = v60;
const v63 = new Int8Array(180);
v63[v63.byteOffset] = 5;
