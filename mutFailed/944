const v3 = +-229879985n;
let v4;
try { v4 = v3.toString(-229879985n, 4096n, v3); } catch (e) {}
let v5;
try { v5 = v4.getMilliseconds(v4, v4, v4); } catch (e) {}
v4[-229879985n] = v5;
const v6 = v4++;
function f7() {
    return -229879985n;
}
class C8 extends f7 {
    static set g(a10) {
        let {"a":v11,"c":v12,"g":v13,...v14} = this;
        try {
            super.some(-1024n, 4096n);
        } catch(e16) {
        }
    }
    static get h() {
        const v18 = this.g;
        if (v18 === v18) {
            try {
                super.p(C8, C8, v18, C8, v6);
            } catch(e21) {
            }
        } else {
            try {
                this.fuck(v18, -1024n);
            } catch(e23) {
            }
        }
        for (let v24 = 0; v24 < 32; v24++) {
            v18["p" + v24] = v24;
        }
        return -1024n;
    }
}
const v27 = new C8();
const v28 = new C8();
const v29 = v28?.constructor;
try { new v29(); } catch (e) {}
const v31 = new C8();
try { ("o").search("o"); } catch (e) {}
const v35 = v5?.[v28];
function F36(a38, a39, a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a39;
    } catch(e42) {
    }
}
const v43 = new F36(v5, C8, v6, "o");
const v44 = new F36(v4, f7, v43, v35);
new F36("Y9Hru", v35, v6, v44);
function f47(a48, a49, a50) {
    const v51 = a48?.constructor;
    try { new v51(); } catch (e) {}
    a49--;
    const o54 = {
        "b": 4096n,
        [a49]: a48,
        "c": a49,
        "h": v28,
        ...C8,
        "d": 4096n,
        "e": v31,
        __proto__: a48,
        "a": a50,
        ...a48,
        "f": a48,
        ["Y9Hru"]: f7,
    };
    return o54;
}
f47(v31, -1024n, "o");
f47("ceil", 4096n, v27);
f47("o", -1024n, v28);
17 << 17;
const v62 = [Uint8ClampedArray,Uint8ClampedArray];
try { v62.concat(Uint8ClampedArray); } catch (e) {}
const v64 = [1,17,v62];
v64[1];
new Uint8ClampedArray(v64);
