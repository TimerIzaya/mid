new Uint8ClampedArray(2);
new Int32Array(4096);
new Int32Array(5);
const v15 = [536870887,-42204,-17288903,-3,9007199254740991,7];
const v16 = [6,268435440,13,1073741825];
const v17 = [-15,-2147483649,-899333997,3,1455560807,-1024,-4294967297,2098301778];
class C18 {
    static valueOf(a20) {
        super[a20] = this;
        v16[v17] = v17;
        return super[v17];
    }
    constructor(a23) {
        function f24(a25, a26) {
            const o27 = {
                "c": f24,
                "h": a26,
            };
            return o27;
        }
        f24(v17, a23);
        f24(v15, v15);
    }
}
const v30 = C18?.constructor;
try { new v30(C18); } catch (e) {}
const v32 = new C18(v16);
const v33 = new C18(v15);
const v34 = new C18(C18);
const v35 = v34?.constructor;
try { v35(v33); } catch (e) {}
function f37(a38, a39, a40, a41) {
    let v42;
    try { v42 = a38.findLast(v15); } catch (e) {}
    a39[1] = a39;
    try { a41.valueOf(); } catch (e) {}
    const o54 = {
        __proto__: a38,
        "g": a38,
        get e() {
            let v47 = 820086.9196656225;
            v47++;
            const v49 = -v42;
            Math.atanh(this);
            let v51 = 1 && v49;
            v51--;
            Math.sinh(v51);
            return v32;
        },
    };
    try { o54.indexOf(a41); } catch (e) {}
    return o54;
}
try { f37(v16, v16, v32, v16); } catch (e) {}
const v57 = f37(v16, v15, v33, v32);
v57.indexOf(f37);
f37(v17, v17, v34, f37(v17, v15, v17, v57));
const v63 = new BigUint64Array(4083);
try { v63.set(v57); } catch (e) {}
new Uint16Array(3239);
-513;
Uint8ClampedArray.prototype;
new BigInt64Array(513);
[5.0,-1000000000000.0];
[-3.4570322798414105e+307,169.39416483428454,-2.0,-1000.0,5.0,1.0,14338.693316202844,-1000000.0,955.167973693761,0.5696151956948133];
[-2.0,-2.0];
try { Array.call(Uint16Array); } catch (e) {}
Array();
new Date();
const v86 = Date > "undefined";
v86 || v86;
const v88 = v86 ? Date : "undefined";
try { v88.match(BigUint64Array); } catch (e) {}
do {
    ("minor")[0];
    const o95 = {
        "execution": "async",
        "type": "minor",
    };
    const t79 = 5;
    let v96 = t79(o95);
    v96++;
} while (0 < 2)
