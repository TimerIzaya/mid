new Array(1927);
new Array(315);
[-4917,1024,-21209,16,-9223372036854775808,13,-65535,-295656771,1887073883];
[65535,13,268435439,500596616];
[14,0,7,-5,-7];
const v12 = [-Infinity,-7.230945278929126,2.220446049250313e-16,-1.7976931348623157e+308,-1000.0,-1.0,5.002169598915335,1e-15,-5.0,-4.0];
[2.0];
[-113.88577577875685,NaN,-138.72295990426278,-725973.0177101751,1.0];
1000000.0 % 1000000.0;
const v23 = ([-698004.1950483839,2.2250738585072014e-308,-658.5488403472419,1.7976931348623157e+308])?.groupToMap;
let v24;
try { v24 = new v23(-8516); } catch (e) {}
const v25 = [-1.7976931348623157e+308,-2.2250738585072014e-308,1e-15,1.7976931348623157e+308,436.391218484674,984999.8983446106,-2.220446049250313e-16,-65664.25596205948,-568440.0637574068,0.6833182439703986];
v25.g = "m";
v25.g = v12;
[1.4550120056683328e+308,-1.0772967663163728e+308,186061.78370046848,-1.7976931348623157e+308,-5.0,-Infinity,0.03200553966660591];
const v32 = new BigInt64Array(14);
4096 / 4096;
Uint8Array.d = BigInt64Array;
Uint8Array.d = v24;
Uint8Array.prototype = Uint8Array;
const v36 = new Uint8Array(4096);
const v39 = [-2.216170140955498,-2.2250738585072014e-308,-643865.3403199288,NaN];
function f40(a41, a42) {
    const v44 = new Uint8Array();
    const v46 = new Uint32Array(-37370);
    for (const v47 in v46) {
        -37370 in v44;
        typeof Uint8Array;
    }
    return Array;
}
v39.toString = f40;
this.decodeURIComponent(v39);
let v52 = 127;
const v53 = v52++;
function f54(a55, a56) {
    return a55;
}
const v58 = new Promise(f54);
function f59() {
    function F60(a62, a63, a64, a65) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v66 = new F60(F60, F60, F60, F60);
    v66["p" + -4096] = -4096;
    return -953280260;
}
function f69(a70, a71) {
    return a70;
}
f59[Symbol.species] = f69;
v58.constructor = f59;
let v77;
try { v77 = v58.then(v32, v53); } catch (e) {}
try { v77.then(v25, v36); } catch (e) {}
function f79(a80, a81) {
    const o82 = {
    };
    return o82;
}
for (let v83 = 0; v83 < 25; v83++) {
    const v84 = f79();
    Object.defineProperty(v84, v83, { enumerable: true, get: f79, set: f79 });
    try { Reflect.preventExtensions(v84); } catch (e) {}
    const o88 = {
    };
    Object.defineProperty(o88, "execution", { writable: true, configurable: true, enumerable: true, value: gc });
    o88.execution = "asIntN";
    gc(o88);
}
