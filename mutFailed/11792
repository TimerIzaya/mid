function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -2;
    } catch(e3) {
    }
    try {
        this.g = -2;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
v6[206] = v6;
const v7 = new F0();
let v10 = 1073741824;
function f12(a13, a14, a15, a16) {
    const o36 = {
        valueOf(a18, a19) {
            const o20 = {
            };
            try {
                ++v10;
                const o24 = {
                    "maxByteLength": 2822,
                };
                const v26 = new ArrayBuffer(255, o24);
                new Uint32Array(v26);
                o20.d = a14;
            } catch(e29) {
            }
            try {
                const o30 = {
                };
                o30.d = a14;
                o30.g = -65537;
            } catch(e31) {
            }
            try {
                const o32 = {
                };
                o32.d = a14;
                o32.d = -65537;
                o32.c = a18;
            } catch(e33) {
            }
            try {
                const o34 = {
                };
                o34.d = a14;
                o34.g = -65537;
                o34.c = false;
            } catch(e35) {
            }
            return o20;
        },
    };
    return o36;
}
const v37 = f12(-65537, 2076488016, v7, v10, v6, v5);
f12(v10, -65537, v6, 2076488016);
f12(v10, -65537, v5, 2076488016, v37, false, F0);
const v42 = new Function(11);
v42.entries();
if (F0 !== v5) {
    v6[206];
} else {
    new Uint16Array(881);
    new Float64Array(4087);
    new Uint32Array(129);
}
