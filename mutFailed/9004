function f0() {
    const o11 = {
        set e(a5) {
            try { this.trimRight(); } catch (e) {}
            [-282.53309982083135,-Infinity,-3.1429320606732656e+307,-3.0];
            [-217795.20104444888,-3.10960265728985,5.0,-3.0,10.379713078538089,0.8891415520053624,0.0,0.0];
            [5.590354900831298e+307,59025.71335298079,1000000000.0,1.5510513993793387e+307,1000000.0,0.8337935966432214,-538.6013623221334,9.067026475834528,217.2713968373157];
        },
        "g": 536870887,
        4: 536870887,
        [7.926710156529567e+307]: 7.926710156529567e+307,
        __proto__: 7.926710156529567e+307,
        "f": 536870887,
        "h": f0,
    };
    return o11;
}
const v12 = f0();
const v13 = v12();
const v14 = f0();
function f15() {
    return v13;
}
[f15,v12,f0];
[v14];
const v18 = [f0,v14];
try { v18.reduceRight(f15); } catch (e) {}
-1752559589n << -1752559589n;
-1556374589n <= -1556374589n;
-1024n - -1024n;
-1024n <= -1752559589n;
/(x)(x)(x)\1*/gudmsy;
const v28 = /Sxyz{1,}/gudy;
v28.ignoreCase = v28;
v28.dotAll = v28;
/(?:a+)?[-\xf0\x9f\x92\xa9]+/dmsy;
function F30() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        Array(19793);
        for (const v35 of 19793) {
        }
        const t42 = [];
        t42[Symbol.toPrimitive] = Array;
    } catch(e39) {
    }
}
try { F30.apply(f15, f0); } catch (e) {}
new f0();
class C42 {
}
C42.d = C42;
try { undefined.toString(); } catch (e) {}
