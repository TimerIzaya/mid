const v3 = [512n,1073741824n,512n,-1280931403n];
const v4 = [512n,v3];
const v5 = [-1280931403n,512n];
const v8 = new Date();
const v10 = [v8];
const o11 = {
    "arguments": v10,
    "type": "function",
};
function F12(a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a15;
    } catch(e16) {
    }
    try {
        this.d = a15;
    } catch(e17) {
    }
    try {
        Math.pow(-1073741824, -Infinity);
        const v22 = Math.constructor;
        try { new v22("function"); } catch (e) {}
        this.a = a15;
    } catch(e24) {
    }
}
const v25 = new F12(v3, v3);
const v26 = new F12(v4, v25);
const v27 = new F12(v4, false);
function f28(a29, a30) {
    const o31 = {
        [a29]: v3,
        65535: false,
        [v5]: v27,
        "c": false,
        __proto__: v5,
        "f": v25,
        "h": v26,
        "e": v25,
        "d": F12,
        [512n]: v26,
        "g": v5,
        3: v25,
    };
    return o31;
}
const v32 = f28(1073741824n, 512n);
("sync")[-5.0];
function f36() {
    return f36;
}
const o38 = {
    __proto__: f36,
    m() {
        return f36;
    },
};
const v39 = f28(512n, F12);
[-268435456];
[44388,7,2,-645157995];
const v42 = [1024,-12,10,512,128,-16,536870889,-4294967295];
v25[1073741823] &= v3;
const v43 = f28(512n, 1073741824n);
const v44 = f28(-1280931403n, -1280931403n);
const v46 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
for (let v47 = 0; v47 < 25; v47++) {
    const v49 = "p" + v47;
    let v50;
    try { v50 = v42.toSpliced(v49, v47); } catch (e) {}
    const o64 = {
        get d() {
            return "p";
        },
        m(a55) {
            const v58 = new Int8Array(3938);
            let v59 = 3;
            let v60 = 0;
            v60 >> v60;
            for (let i = 0; i < 5; i++) {
                [...v59] = v58;
                v60++;
            }
            const o63 = {
            };
        },
        "maxByteLength": 150,
    };
    const v66 = new ArrayBuffer(127, o64);
    new Uint8ClampedArray(v66);
    v32[v50] = "p";
    const o70 = {
        "maxByteLength": 306,
    };
    const v72 = new ArrayBuffer(8, o70);
    new Uint16Array(v72);
    v46[v49] = v47;
}
const v76 = [601759695];
const v77 = [1073741824,1073741823,1376142744,1073741825];
function f78(a79, a80, a81, a82) {
    function f83() {
        let v86 = Float64Array;
        v86 = a80;
        v46.length;
        try {
            v77.forEach();
        } catch(e89) {
        }
        const o93 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o93);
        Reflect.construct(Symbol, [Reflect,Reflect,Reflect,Reflect,Reflect]);
        const o103 = {
            set e(a101) {
            },
        };
        Symbol.toPrimitive;
        const o109 = {
            toString(a106, a107) {
                return a82 && v86;
            },
        };
        const o110 = {
        };
        new Proxy(Uint8ClampedArray, o110);
        o109[9] = a79;
        const o118 = {
            [-4294967297n](a114, a115, a116, a117) {
            },
            ...v76,
            "type": "Vre",
            ..."Vre",
            ...a81,
            [-2]: "sync",
            "b": v3,
            9: false,
            "a": o109,
            4: "Vre",
            5: -4294967295,
        };
        return f78;
    }
    f83();
    %OptimizeFunctionOnNextCall(f83);
    return -4294967297n;
}
const v121 = [1.0,141599.63044947106,730.845463907873,1000000.0,-4.2811873669589365e+307,0.0,3.0];
try { v121.forEach(-5n); } catch (e) {}
const v124 = [];
const v125 = [0n,0n,0n,0n];
class C126 {
    constructor(a128, a129) {
        function F130(a132, a133) {
            if (!new.target) { throw 'must be called with new'; }
            const v134 = this?.constructor;
            try { new v134(v125, this); } catch (e) {}
            a133 ^ a133;
            this.b = v124;
        }
        new F130();
        new F130();
        new F130();
    }
}
new C126();
for (let v141 = 0; v141 < 10; v141++) {
    f78();
}
%OptimizeFunctionOnNextCall(f78);
f78(v76, v76, v46, v46);
v44[v32] = 512n;
v77.lastIndexOf(F12, f28, F12, v27, v43, -1280931403n);
f28(v39, v3);
try {
    (-4294967297n)[9];
    let v148 = 0;
    class C150 {
        #b = v148;
        g = 1.1408591040999836e+308;
        static {
            const v155 = v148++;
            ~v148;
            Math.log10(44149);
            44149 + v148;
            Math.fround(v155);
        }
    }
    C150.g ^= -1e-15;
    f28(256n, [256n,v46,v44,v25,v76]);
} catch(e163) {
}
