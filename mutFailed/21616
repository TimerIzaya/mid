function f0() {
}
function f1() {
    return f0;
}
new Uint32Array(255);
const v7 = new Int8Array(189);
const v13 = Symbol.iterator;
const o22 = {
    [v13]() {
        let v15 = 10;
        const o21 = {
            next() {
                v15--;
                const v19 = v15 == 0;
                const o20 = {
                    "done": v19,
                    "value": v15,
                };
                return o20;
            },
        };
        return o21;
    },
};
for (let [v24,v25] of v7) {
    for (let v26 = 0; v26 < 32; v26++) {
        o22["p" + v26] = v26;
    }
}
new Float32Array(2766);
[-2.0,2.0,2.0,901548.0084431141,1000000000000.0];
[-1.0076925105818319e+308,-436432.0334909215,3.0,-669350.0387237867,2.2250738585072014e-308,Infinity,2.2250738585072014e-308,1000.0,8.807743963979465];
[1.3830003361043843,1e-15,-4.0,5.0,5.0,-40.662391545772266,3.0,-857201.3283081128,2.2250738585072014e-308,1000.0];
const v34 = [1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0];
const v35 = v34.groupToMap;
try { v35(v34, v35, v34, v34, v35); } catch (e) {}
