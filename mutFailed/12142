function f0() {
}
const v3 = new Uint16Array(6);
const v6 = new Float64Array(189);
const v9 = new Int8Array(77);
const v11 = new Date();
Object.defineProperty(v11, "valueOf", { value: v9 });
try {
    v6.g = Date;
} catch(e12) {
}
new WeakSet();
class C15 extends Date {
    constructor(a17, a18, a19, a20) {
        super(Int8Array);
        try { this.setYear(6); } catch (e) {}
        const v22 = new Float64Array(77);
        const v23 = v22 instanceof a17;
        let v24;
        try { v24 = a19(v3, Int8Array, a20, v6); } catch (e) {}
        function F25(a27, a28, a29, a30) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = v22;
            } catch(e31) {
            }
            try {
                this.b = Float64Array;
            } catch(e32) {
            }
            try {
                this.g = Date;
            } catch(e33) {
            }
        }
        const v34 = new F25(v24, v3, F25, 6);
        const v35 = new F25(WeakSet, v34, v6, WeakSet);
        new F25(v23, v35, v9, a17);
        this[3] = v6;
        a18 << v11;
        const o41 = {
            "execution": "async",
            "type": a20,
        };
        gc(o41, o41, v11);
    }
}
new C15(189, 6, 189, 77, v6, v9, v6);
new C15(77, 189, 77, 77);
new C15(189, 189, 6, 77);
const v51 = (a52, a53, a54, a55) => {
    let v56 = 10;
    for (; v56--;) {
        [16,-1,1073741824,-2147483648,-1101949439];
        [-9223372036854775807,-35595,127,65536,-414149520];
        [-53247,9968,-9007199254740991,-6170,1895778720];
    }
    function F61(a63, a64, a65, a66) {
        if (!new.target) { throw 'must be called with new'; }
    }
    return a53;
};
function F69(a71, a72, a73) {
    if (!new.target) { throw 'must be called with new'; }
    return arguments;
}
const v75 = new F69();
let {...v76} = v75;
