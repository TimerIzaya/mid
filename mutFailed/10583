function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = -16;
    } catch(e3) {
    }
    const v6 = new Uint32Array(-22646);
    for (const v7 in v6) {
        var h = v7;
    }
}
const v8 = new F0();
const v9 = new F0();
new F0(v8, v8, v9);
[1073741824,0,3771,3326,-4096,16];
[47586,-2,65537,16,26658349];
[230030764,-4294967297,-9007199254740991,-1827487156,-2147483649,-11,-36041];
new Float64Array(2534);
const v22 = [];
[v22,v22,v22,v22];
for (let v25 = 0; v25 < 5; v25++) {
    function f26() {
        let v27 = -268435456;
        for (let v28 = 0; v28 < 32; v28++) {
            break;
        }
        class C30 {
        }
        const v31 = v27 % v27;
        v27--;
        return v31;
    }
    const v33 = [-14339,735253629,4294967296,3,268435456,3,57019,268435439];
    for (const v35 in [1959699296,-1,9007199254740991,9007199254740992,2147483649,-4096,-9223372036854775808]) {
    }
    for (const v36 in v33) {
        class C38 extends Date {
            constructor(a40, a41, a42, a43) {
                super(a40, a41, -4294967295, 22164);
            }
        }
        ("-2").normalize("NFKC");
    }
    f26();
    %OptimizeFunctionOnNextCall(f26);
}
("29753").replaceAll("29753", "b").trimLeft("b");
new BigInt64Array(11);
