class C3 extends Uint16Array {
}
function f8() {
    return -4096n;
}
const v9 = [-2,11,4096,7,-1742453680,127];
const v10 = [4,47394,-9007199254740992,35905,-4096,-8407,-407834082,10226,0,458900205];
const v11 = [-9007199254740991];
function F12(a14, a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a15;
    } catch(e17) {
    }
    try {
        this.g = 6n;
    } catch(e18) {
        new Uint8Array(a15);
        const v24 = new BigInt64Array(243);
        try { Uint8Array.from(v24); } catch (e) {}
    }
}
const v26 = new F12(-2147483648n, -2147483648n, F12);
new F12(-26530n, -26530n, F12);
new F12(-4096n, v10, v10);
class C29 extends f8 {
    e = -26530n;
    static #o(a31, a32) {
        Object.defineProperty(this, "d", { writable: true, configurable: true, set: f8 });
        class C34 extends C29.constructor {
            static #e = C29;
        }
        const v35 = new F12();
        function f36() {
            return v35;
        }
        return a31;
    }
    [v9] = v11;
    static [v26] = -2147483648n;
}
for (let i39 = 0, i40 = 10;
    i39 < i39;
    (() => {
        for (let v44 = 0; v44 < 5; v44++) {
            function f45(a46) {
                return f45;
            }
        }
    })()) {
}
new C29();
new C29();
new C29(v10);
class C53 {
    b = "o";
}
class C54 extends C53 {
}
const v55 = new C53();
function f56(a57, a58, a59) {
    return a59;
}
const v62 = [v55];
const o63 = {
    "arguments": v62,
    "type": "o",
};
new Worker(f56, o63);
