[166.9222523202202,2.0,-8.565077784798452e+306,-2.2250738585072014e-308,-6.583954447091784,1000000.0,1000000.0,-1000000.0,1e-15,197436.37822148227];
const v4 = [6.891684733663212,4.779092096442065,1.7976931348623157e+308,1000000000000.0,127.79972298212533,8.42308173111526,-1000000000.0,-6.653706312224337,1000000.0];
const v5 = [0.0,2.2250738585072014e-308,439.76588629742946,-1000000000.0,3.650606063751029,-1000.0,925516.1202312638,441.03744773633343];
const v6 = v5?.filter;
try { new v6(v4); } catch (e) {}
new Uint16Array(256);
-3477;
new Int32Array(3477);
129 != 129;
Uint32Array.e = Uint32Array;
const v18 = new Uint32Array(129);
[-Infinity,Infinity,959819.665748626];
[0.881533214430694,1000000000000.0,-2.6561951388069446e+306,1e-15,-601975.7256958171,-2.0,1.0,-1000000000000.0,-5.0];
[-6.825886894231237,-1000000000.0,-7.405832553829715,-5.0];
function f25() {
    let v27 = 1000000000000.0;
    const v28 = v27--;
    -v28;
    class C33 {
        constructor(a35) {
            const v36 = this?.__lookupGetter__;
            try { new v36(a35); } catch (e) {}
            const v39 = new Float32Array();
            v39.byteOffset = v39;
            let v40;
            try { v40 = v39.entries(); } catch (e) {}
            try { v40.next(); } catch (e) {}
            const v42 = new Uint16Array(12, -4294967296, v28);
            const v43 = new Float32Array(v42, -4294967296, 268435439, v27, v42);
            try { v43.every(Uint16Array); } catch (e) {}
        }
    }
    let v45;
    try { v45 = new C33(12); } catch (e) {}
    v45.b = v45;
    const v46 = new C33(257828.6336153492);
    const v47 = new C33();
    const v48 = new C33(-4294967296);
    const v49 = v48?.__defineSetter__;
    try { new v49(v18, v5); } catch (e) {}
    const v51 = [v48,C33];
    try { v51.splice(3.4890473589784586e+307, v51); } catch (e) {}
    const v53 = [257828.6336153492,v48,v46,v48,v51];
    try { v53.toLocaleString(); } catch (e) {}
    const v55 = [v48];
    class C56 extends C33 {
        [v46];
    }
    try { new C56(); } catch (e) {}
    const v58 = new C56();
    v58.length = v58;
    const v59 = v55.constructor;
    try { v59.isArray(v55); } catch (e) {}
    class C61 extends v59 {
    }
    C61.a = C61;
    const v62 = new C61();
    try { v62.fill(v28); } catch (e) {}
    const v64 = v62?.constructor;
    let v65;
    try { v65 = new v64(); } catch (e) {}
    const v66 = v65?.indexOf;
    try { new v66(3.4890473589784586e+307); } catch (e) {}
    Object.defineProperty(v62, 65537, { value: v47 });
    try { v58.m(v51); } catch (e) {}
    return Int32Array;
}
%PrepareFunctionForOptimization(f25);
f25();
%OptimizeFunctionOnNextCall(f25);
f25().BYTES_PER_ELEMENT;
