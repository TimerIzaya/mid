let v0 = -14208;
class C3 {
    toString(a5) {
        class C6 {
        }
        new C6();
        while (v0 < 5) {
            v0++;
        }
        super.f = a5;
        return -4;
        for (let v11 = 0; v11 < 32; v11++) {
            a5["p" + v11] = v11;
        }
        return a5;
    }
}
new C3();
function f15() {
    Reflect.construct(Symbol, [Reflect,Reflect,Reflect,Reflect,Reflect]);
    return f15;
}
const v20 = new C3();
const v23 = new Int16Array();
try { BigUint64Array.apply(v23, 1); } catch (e) {}
const v26 = new C3();
function f27(a28, a29) {
    const o31 = {
        "d": a29,
        [-4]: -4,
        __proto__: v23,
        "c": -4,
        get a() {
            super.h = this;
            return a28;
        },
        8: a29,
        "f": -4,
        "c": v20,
        /*
        __proto__: a29,
        */
        "g": v20,
    };
    return o31;
}
f27(v20, v20);
f27(v26, v26);
f27(v26, v20);
new BigInt64Array();
const o40 = {
    "maxByteLength": 47,
};
SharedArrayBuffer(3, o40);
Math.asin(2.220446049250313e-16);
