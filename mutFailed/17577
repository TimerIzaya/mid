class C3 {
    set d(a5) {
        class C7 {
        }
        const v8 = new C7();
        const v9 = v8.g;
        try {
            v9.length = 1;
        } catch(e11) {
        }
        let v13 = -17325;
        const v14 = --v13;
        let v15 = v13 >>> v14;
        const v16 = v15 ^ 327.65666239898223;
        ++v15;
        -v15;
        v16 % v14;
        v9.atan2(v15, v13);
    }
}
try {
const t0 = 0.9481098882250736;
new t0();
} catch (e) {}
const v22 = new C3();
const v23 = new C3();
const v24 = new C3();
v23?.__lookupSetter__;
let v26;
try {
const t0 = 565.1553708685581;
v26 = new t0(v23);
} catch (e) {}
function F27(a29, a30, a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    a29.a = a29;
    a31?.constructor;
    try { new v23(); } catch (e) {}
    a32 - a32;
    try {
        this.h = a30;
    } catch(e36) {
    }
    try {
        v26.a = a29;
    } catch(e37) {
    }
    try {
        this.g = a32;
    } catch(e38) {
    }
}
const v39 = new F27(C3, 0.9481098882250736, v22, 0.9481098882250736);
new F27(v24, 0.9481098882250736, v22, v39);
new F27(v22, 0.9481098882250736, v23, 565.1553708685581);
function F42() {
    if (!new.target) { throw 'must be called with new'; }
    const o44 = {
    };
    const v46 = new Proxy(this, o44);
    const v47 = v46?.constructor;
    try { new v47(); } catch (e) {}
    try {
        with (v46) {
            o44[b];
        }
    } catch(e51) {
        e51.message = e51;
    }
}
new F27();
