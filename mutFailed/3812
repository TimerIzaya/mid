new Float64Array(7);
async function f5(a6) {
    function f7() {
        return a6;
    }
    await f7;
    return f7;
}
const v9 = f5(f5);
new Int16Array(7);
new Int32Array(255);
function f14(a15) {
    class C17 extends SharedArrayBuffer {
    }
    new SharedArrayBuffer();
    function f20(a21) {
        for (let v22 = 0; v22 < 32; v22++) {
            const t17 = "p";
            t17["p" + v22] = v22;
        }
    }
    this.onmessage = f20;
    this[Symbol.unscopables];
}
const v30 = ["function"];
const o31 = {
    "arguments": v30,
    "type": "function",
};
new Worker(f14, v9);
[1870599831,6,2356,-46091,268435456,-10];
[-9007199254740991,4294967297,-3];
[-62608,5];
([5,5]).concat(5);
