function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 255;
    } catch(e3) {
    }
    try {
        this.d = 255;
    } catch(e4) {
    }
    try {
        this.b = 255;
    } catch(e5) {
    }
}
const v6 = new F0();
new F0();
const v8 = new F0();
v8.d;
[536870912];
const v11 = [16,-259371579];
try { v11.toString(); } catch (e) {}
const v13 = [14,-1231960483,-63183,-65536];
v13[3];
try { v13.sort(v8); } catch (e) {}
const v16 = /Hi9+/udsy;
v16.dotAll = v16;
/[^123]/viy;
/((\xed\xa0\x80))\x02/gvs;
const v19 = [350.0624141600715,-502054.44962913793,7.282416196717898e+307,0.34654278557944784,0.1527270618384684,-9.720537139962875,-580.0550696585497,-524.2337914502066,-5.0];
try { v19.push(v6); } catch (e) {}
const v21 = [1.208619914649573e+307,-328836.6326839534,1000000000000.0,1.982771332176016,1000.0];
v21.g = v21;
v21[1];
[-1e-15,0.40556145018808043];
function f24() {
    -6.170254254244802e+307 + -6.170254254244802e+307;
    const o31 = {
        0: 549538.9552070533,
        [-6.170254254244802e+307](a29, a30) {
        },
    };
    return o31;
}
const v32 = f24();
v32[0] = v32;
const v33 = f24();
const v34 = v33[0];
v34 >> v34;
31995 >> 31995;
function F39(a41, a42, a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    a42[0] = a42;
    a43 << a43;
    a44[0] = a44;
    a42[0] = a42;
    a43 & a43;
    a44[0][0];
    a41[0];
    const v50 = this?.constructor;
    try { v50.call(v33); } catch (e) {}
    try { new v50(a41, a43, a42, a41); } catch (e) {}
    a41[0] = a41;
    a44[0] = a44;
    this.f = a41;
    this.f = v33;
}
new F39(v33, v32, -61894, v32);
new F39(v33, v32, 31995, 31995);
