const v1 = new Date();
new Int16Array(2535);
new Float64Array(2);
new Int32Array(10);
new Array(88);
class C17 {
    static get a() {
        if ("-25175") {
        } else {
            try {
                for (const v22 of C17) {
                    function F23(a25, a26) {
                        if (!new.target) { throw 'must be called with new'; }
                        const v27 = this.constructor;
                        try { new v27(); } catch (e) {}
                        ([NaN,52.65298068517177,-4.0])["includes"]();
                    }
                    let v32;
                    try { v32 = this.o(-1000.0, v22, this); } catch (e) {}
                    function F33(a35, a36, a37, a38) {
                        if (!new.target) { throw 'must be called with new'; }
                        try {
                            this.f = -1000000000000.0;
                        } catch(e39) {
                        }
                        try {
                            this.e = "-25175";
                        } catch(e40) {
                        }
                        function F43(a45) {
                            if (!new.target) { throw 'must be called with new'; }
                            const t31 = (-64209).constructor;
                            t31(3n);
                        }
                        new F43();
                        try {
                            this.a = v22;
                        } catch(e49) {
                        }
                    }
                    const v51 = new F33(F33(this, F33, v32), C17, F33);
                    new F33(-1000.0, v32, v51, v22);
                }
                super.concat();
            } catch(e54) {
            }
        }
        return -1000000000000.0;
    }
    220;
    static #a = -1000.0;
}
const v55 = new C17();
v55[220];
const v57 = new C17();
v57[220];
new C17();
try { ("-12").toUpperCase(); } catch (e) {}
function F62(a64, a65, a66) {
    if (!new.target) { throw 'must be called with new'; }
}
const v67 = new F62(F62, F62, F62);
Object.defineProperty(v67, v1, { writable: true, configurable: true, set: Array });
const v70 = BigUint64Array * 536870887;
v70 ** v70;
const t64 = "JyD";
t64[2] = "JyD";
/a{,}/iy;
/evA/gudiy;
const v79 = /a\s[\p{Script_Extensions=Mongolian}&&\p{Number}]/guiy;
try { v79.exec(-1000000000000.0); } catch (e) {}
let v81 = 536870912n;
v81--;
v81 << v81;
