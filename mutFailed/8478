const v3 = ["-216421472","object","object","-216421472"];
const v4 = ["object","-216421472","symbol","-216421472","object"];
const v5 = [v4,v4];
new Uint16Array(39);
class C14 {
}
const t6 = 1040;
new t6();
function f16() {
    return f16;
}
new Uint8ClampedArray(1040);
new Uint8Array(128);
function f24() {
    return 3.5885237423067196;
}
let v27 = 7;
const v28 = [];
-v28;
new BigInt64Array(2325);
const v35 = new Int16Array(Uint8ClampedArray);
const v38 = new Uint32Array(16);
new Uint32Array(257);
v27 &&= 1073741824;
function f42(a43, a44) {
    const v47 = new a43(2325);
    v47.indexOf(-9);
    class C50 extends Set {
        constructor(a52, a53, a54) {
            super(v5);
        }
    }
    function f56() {
        return f56;
    }
    const v57 = v35();
    function F58(a60, a61) {
        if (!new.target) { throw 'must be called with new'; }
        const v62 = (3.5885237423067196).constructor;
        try { v62(this, v57); } catch (e) {}
    }
    const v64 = new F58();
    function f65(a66) {
        try {
            class C67 {
            }
            v64.constructor;
            const v69 = [601759695];
            function f71(a72, a73, a74, a75) {
                function f76() {
                    const o83 = {
                        "h": -1073741824,
                        ..."Vre",
                        valueOf(a81, a82) {
                            return 522675525n;
                        },
                        ..."Vre",
                        "c": a75,
                        5: -1073741824,
                        6: -268435456,
                    };
                    return a75;
                }
                f76();
                %OptimizeFunctionOnNextCall(f76);
                let v86;
                try { v86 = v3["find"](..."find", a75, ...v69, ...v3, ...522675525n); } catch (e) {}
                v86 <= a74;
                return a74;
            }
            const v88 = f71(v3, v3, v69, 522675525n);
            f71(v69, 2325, false, 2325);
            f71(522675525n, v69, f71, v88);
            new f24();
        } catch(e93) {
        }
    }
    this.onmessage = f65;
    try {
        v38.length = 1073741824;
    } catch(e94) {
    }
    for (let v95 = 0; v95 < 25; v95++) {
        v28["p" + v95] = v95;
    }
}
[Uint32Array,3.5885237423067196];
const o101 = {
    "arguments": Uint32Array,
    "type": "function",
};
new Worker(f42, o101);
