function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 16;
    } catch(e3) {
    }
    try {
        this.d = 16;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
const v7 = new F0();
class C11 extends F0 {
    f = 65537;
    g;
    c;
    constructor(a13, a14) {
        super();
        let v16 = v7[v5] && a13;
        v16 |= a13;
        try {
            super.findLast(a14, v16, F0, -65535);
            const v20 = new Int32Array(3);
            v20[0] %= -1073741824;
            function f21(a22, a23, a24, a25) {
                const v26 = ++a24;
                const v27 = v26 >>> v26;
                let v28 = v26 * v26;
                const v29 = v28--;
                const o30 = {
                };
                const v31 = o30[2];
                try { v31.hasOwnProperty(v29); } catch (e) {}
                return v27;
            }
        } catch(e33) {
        }
    }
    268435440 = 65537;
    b = v7;
}
const v34 = new C11(v5, -65535);
new C11(v7, 3);
new C11(v7, 65537);
class C37 extends C11 {
    #b = 3;
    o(a39, a40, a41) {
        try { new a39(v5, F0); } catch (e) {}
        try {
            this.#b ||= a39;
        } catch(e43) {
        }
        try {
            v6.#b;
        } catch(e45) {
        }
        return a41;
    }
    static 172 = v34;
    static 378 = v34;
}
new C37();
new C37();
new C37();
const v51 = new Uint8Array(127);
function f52(a53, a54) {
    const v55 = [20785,4096,5];
    v55[536870889] = v55;
    for (let v56 = 0; v56 < 25; v56++) {
    }
    const v57 = v55[536870889];
    const o58 = {
    };
    function f59() {
        function f60(a61) {
            function f62() {
                const v64 = -4294967297n ^ -4294967297n;
                const o71 = {
                    [-4294967297n](a66, a67, a68, a69) {
                        super[v64];
                    },
                };
                return o71;
            }
            %PrepareFunctionForOptimization(f62);
            return v57;
        }
        return f60;
    }
    function f72(a73) {
        ("stack").trimStart();
    }
    Object.defineProperty(o58, "toString", { writable: true, configurable: true, enumerable: true, get: f59, set: f72 });
    return o58;
}
for (let v76 = 0; v76 < 25; v76++) {
    const v77 = f52();
    Object.defineProperty(v77, v76, { enumerable: true, get: f52, set: f52 });
    v51[v77] = v77;
    const o80 = {
        "execution": "sync",
    };
    function f81() {
        return F0;
    }
    function f82(a83) {
        const v84 = C11?.constructor;
        try { new v84(); } catch (e) {}
    }
    Object.defineProperty(o80, "type", { configurable: true, get: f81, set: f82 });
    gc(o80);
}
