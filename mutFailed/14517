function f0() {
    let v3 = -9;
    const o15 = {
        m(a5, a6) {
            const v7 = this > a5;
            if (v7) {
                try {
                    /9*/uy;
                    ("string").matchAll("string");
                } catch(e10) {
                }
                [23097,-3,4294967296,14,2,-14,43158,13,-2147483649];
                [-9007199254740992,0,5];
                [1381008891,257];
            } else {
                let v14;
                try { v14 = a5(v3, v7, v7, this); } catch (e) {}
                v3 = v14;
            }
            return -1024;
        },
        "a": v3,
    };
    return o15;
}
const v16 = f0();
const v17 = f0();
const v18 = f0();
const v19 = [v16,f0,f0,v16,v17];
const v20 = [v16,v19,v19,v16];
[v16,v17,v17,v20,v16];
try { v18.m(-202144133n, -9007199254740990, -202144133n, f0, v20); } catch (e) {}
new Uint8ClampedArray(184);
new Int8Array(4);
new Int16Array(1840);
for (let v41 = 0; v41 < 5; v41++) {
    function f42() {
        const v45 = Math.atanh("Vre");
        function f46(a47, a48, a49) {
            const o50 = {
                "f": a47,
            };
            return o50;
        }
        v41(v16, f46(v16, Math, 2147483648n), 2147483648n);
        f46(v16, f46, 2147483648n);
        return v45 >> v45;
    }
    f42();
    %OptimizeFunctionOnNextCall(f42);
}
