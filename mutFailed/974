function F0() {
    if (!new.target) { throw 'must be called with new'; }
    function f2(a3) {
        for (let v5 in [-65535,536870889,4096]) {
            v5--;
            Math.log10(v5);
            v5 ** 1000000000000.0;
        }
        return this;
    }
    Object.defineProperty(this, Symbol.toPrimitive, { writable: true, configurable: true, enumerable: true, value: f2 });
    this.c = this;
    try {
        this.c = 19793;
        for (const v16 of Array(19793)) {
        }
        const v17 = [];
        Object.defineProperty(v17, Symbol.toPrimitive, { value: Array });
        v17[Symbol.toPrimitive] = Array;
        const v22 = [v17,v17,v17];
        v22[Symbol.toPrimitive] = Symbol;
        v22[Symbol.toPrimitive] = Symbol;
        const v27 = [v22,v22];
        v27[Symbol.toPrimitive] = Symbol;
        Uint16Array.toString = Array;
        v27 >= Uint16Array;
    } catch(e32) {
    }
    try {
        this.b = 19793;
    } catch(e33) {
    }
}
new F0();
const v35 = new F0();
function f36() {
    try {
        new F0();
    } catch(e38) {
    }
    return v35;
}
v35[Symbol.toPrimitive] = f36;
const v41 = new F0();
class C42 {
    [v35] = v41;
    set b(a44) {
        v35[1];
        v41.b;
        const v49 = [991.721527488573,-290835.2265090322];
        const v55 = ("-1723624938").slice(9, "g").normalize();
        try { v55.substring(v49, WeakMap); } catch (e) {}
        Math.acosh(a44);
        const v58 = ~v35;
        -v41 ^ v58;
    }
    static g = F0;
}
new C42();
new C42();
new C42();
/eP\xf0\x9f\x92\xa9/usy;
/H(ab|cde)\1/guiy;
new Float64Array(3341);
0 * 0;
/2^xxx$Ge/gusy;
function f76(a77, a78, a79, a80) {
    Object.defineProperty(a77, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f76 });
    const o87 = {
        toString(a84, a85) {
            new Date(a77);
            return this;
        },
    };
    return o87;
}
const v88 = f76(Date);
try { v88.toString(); } catch (e) {}
