const v3 = [NaN,-862289.0293275245,-1.3481951534694371e+308,0.34694587475164107,-1.0891854213275937e+308,4.0783136299136053e+307,-2.2250738585072014e-308];
const v4 = [0.49132427383843313,-1.0728438610374306e+308,2.220446049250313e-16,4.506699568813069e+307,-723.6232006108107,-2.0];
let v5;
try { v5 = v4.join(268435440n); } catch (e) {}
try { v5.repeat(v5); } catch (e) {}
const v7 = [-1.7976931348623157e+308,0.8456564778928997,0.25627455482342953,5.0,0.4950534337619267,-2.220446049250313e-16,0.45276882398868623,-1e-15];
let v8;
try { v8 = v7.toLocaleString(); } catch (e) {}
v7[7] = v7;
const v9 = /cJo/gvdmsy;
const v10 = /\u0034[a-zA-Z0-9]/gv;
/foo(?<!bar)baz?/gvms;
function F12(a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.constructor(v3, v4); } catch (e) {}
    const v17 = this?.constructor;
    try { new v17(1000n, this); } catch (e) {}
    a14++;
    try {
        this.b = 268435440n;
    } catch(e20) {
    }
    try {
        this.h = 1929152930n;
    } catch(e21) {
    }
    try {
        this.e = a15;
    } catch(e22) {
    }
}
try { F12(1929152930n, v10); } catch (e) {}
const v24 = new F12(1000n, v9);
v24.e = v24;
const v25 = new v8(1929152930n, v10);
v10.a = v25;
v25.h = v25;
new F12(268435440n, v9);
let v27 = 26980;
v27--;
let v29 = 1836793824;
v29 + v29;
v29--;
-64;
let v34 = 1.1352688865494934e+308;
v34--;
-669987.149549252 <= -669987.149549252;
const v40 = -(~9.773720168129156e+307);
v40 % v40;
function* f42(a43, a44, a45, a46) {
    return a44;
}
