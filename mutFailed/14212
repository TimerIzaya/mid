new Uint8Array(1004);
new Float32Array(5);
const v9 = new Int32Array(11);
[-5.0,-1e-15,-2.0,-3.0,9.924898838363958,737858.6249367734,1000000000.0,-578629.6810541656,374758.0588614207,0.21192152361698613];
[-221.67431636676338,-2.2250738585072014e-308,-1000000.0,6.695684516825861e+306,-1.9339704809348706e+307,2.0,-5.0];
const v12 = [-5.493111153234869e+307,2.220446049250313e-16,-1e-15,-4.0,0.284749482022863];
function F13() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 16;
    } catch(e16) {
    }
    try {
        this.e = 16;
    } catch(e17) {
    }
}
const v18 = new F13();
const v19 = new F13();
const v20 = new F13();
function F21(a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    function f25(a26) {
        return this;
    }
    Object.defineProperty(this, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f25 });
    try {
        this.f = a23;
    } catch(e32) {
    }
    try {
        this.a = v19;
    } catch(e33) {
    }
}
const v34 = new F21(v20, v20);
function f35(a36, a37) {
    const v39 = new Int16Array(Int16Array, Int16Array, Int16Array);
    const v41 = v39["subarray"]();
    function f42() {
        return v41;
    }
    return v19;
}
v34.toString = f35;
const v43 = new F21(v19, v18);
const v44 = new F21(v18, v20);
let v46 = 0.6323717873586865;
function f48(a49, a50, a51) {
    function f52() {
        const t50 = [];
        t50.length += 1.0;
        return a50;
    }
    a50.toString = f52;
    const o90 = {
        "e": v18,
        "c": a50,
        "g": a50,
        [a49]: a50,
        [a50]: F13,
        __proto__: a50,
        set f(a56) {
            const v57 = super[a51];
            const v58 = a51[257];
            let o59 = {
            };
            try {
                o59.e = v58;
            } catch(e60) {
                v12[177] |= 1004;
                a49 = 11;
                const v61 = [v9,a51,v57];
                [v46,a50,5,e60,e60];
                [v61,a56];
            }
            try {
                const o64 = {
                };
                o64.e = v58;
                o64.b = v18;
            } catch(e65) {
            }
            try {
                const o66 = {
                };
                o66.e = v58;
                o66.b = v18;
                o66.d = F13;
            } catch(e67) {
            }
            try {
                try {
                    v19.h = a56;
                } catch(e68) {
                }
                v46 = a56;
                const o69 = {
                };
                function f70(a71, a72) {
                    function f74(a75) {
                        Math.cos(this);
                        Math.atanh(9007199254740992);
                        const v80 = 9007199254740992 & this;
                        let v81 = v80 - v80;
                        ++v81;
                    }
                    this.onmessage = f74;
                    v20[101] -= -250293.25885210384;
                    o59 = o69;
                }
                const v85 = [o69,"function"];
                try {
                    a51.__proto__ = v85;
                } catch(e86) {
                }
                super.d = "function";
                const o87 = {
                    "arguments": v85,
                    "type": "function",
                };
                new Worker(f70, o87);
                o69.e = v58;
                o69.b = v18;
                o69.a = a49;
            } catch(e89) {
            }
        },
    };
    return o90;
}
f48(1.020200038300818e+308, v34, v44);
f48(1.020200038300818e+308, v46, v43);
const v93 = f48(1.020200038300818e+308, v46, v43);
function F95(a97, a98) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = v93;
    a98 === v19 ? a98 : v19;
    try {
        this.f = a97;
    } catch(e101) {
    }
    const v102 = this.constructor;
    try { new v102(268435440n, a98); } catch (e) {}
    this.f = 268435440n;
}
new F95();
function f105(a106) {
    const o109 = {
        valueOf(a108) {
        },
    };
}
f105(268435440n);
