const v0 = [];
class C1 {
    1073741823;
    static #b = v0;
    static {
        let v2 = this;
        v0 >>> (v2 &= v0);
    }
    constructor() {
        const o5 = {
        };
        new Proxy(this, o5);
    }
}
const v8 = new C1();
const v9 = new C1();
new C1();
const v16 = new Map();
let v23 = undefined;
const o31 = {
    ...v16,
    ...v16,
    __proto__: v16,
    [24560](a25, a26, a27) {
        super[591114.0785999324];
        v23 = Map;
    },
};
v23 = o31;
[v16];
function F34() {
    if (!new.target) { throw 'must be called with new'; }
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    new Date();
    const o41 = {
    };
    o41.e = 19793;
    const v43 = Array(19793);
    for (const v44 of v43) {
    }
    const v45 = [v43,v43,v43,v43,v43];
    new BigUint64Array();
    [];
    for (let v50 = 0; v50 < 50; v50++) {
    }
    [[v45,v45,v45]] >= Uint16Array;
}
new F34();
new F34();
function f57() {
    return v9;
}
class C58 extends f57 {
    #o(a60, a61, a62) {
        try {
            this.toString = f57;
        } catch(e63) {
        }
        return a60;
    }
    #a;
    static [v8] = v9;
    #f;
    static [1.0] = 1.0;
}
new C58();
new C58();
new C58();
const o88 = {
    valueOf(a75, a76) {
        const v77 = (a78, a79, a80, a81) => {
            function F82(a84, a85, a86, a87) {
                if (!new.target) { throw 'must be called with new'; }
            }
            return Int8Array;
        };
        return 155;
    },
};
