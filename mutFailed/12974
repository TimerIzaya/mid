const v2 = new BigInt64Array(2628, 2628);
-0;
const v6 = new Array(0, Array, Array, v2);
try { v6.reduceRight(2628); } catch (e) {}
const v8 = [0.0,1.0,-6.743702675363474,400.9902683003188];
v8[3] = v8;
let v9 = "string";
for (const v10 in v8) {
    v9 *= v9;
}
new Uint16Array(9);
/[\xe2\x81\xa3][x\dz]\p{General_Category=Decimal_Number}\cA/my;
const v18 = /(a\1)?/vmy;
v18.a = v18;
/(FS)/msy;
const v20 = [];
class C21 {
}
const v22 = C21?.constructor;
try { new v22(931.7945833224035); } catch (e) {}
const o25 = {
    "defineProperty": Array,
    "getOwnPropertyDescriptor": Array,
    "has": Array,
    "isExtensible": Array,
};
new Proxy(v6, o25);
const v29 = BigUint64Array?.constructor;
try { new v29(-411.02243028765906); } catch (e) {}
try {
    v20.toLocaleString("toString");
} catch(e33) {
}
const v34 = new BigUint64Array(1486);
const v35 = v34?.fill;
try { new v35(v34); } catch (e) {}
const o37 = {
    [Array]: v20,
    ...v34,
};
const v39 = new BigInt64Array(v20);
const v40 = v39?.constructor;
try { new v40(1486, BigUint64Array, 9); } catch (e) {}
function f42() {
    return f42;
}
Object.defineProperty(v39, v20, { enumerable: true, get: f42 });
function f44() {
    return -536870912;
}
f44.prototype;
class C46 extends f44 {
    static {
        const o48 = {
            "defineProperty": f44,
        };
        const v50 = new Proxy(this, o48);
        v50.prototype = v50;
        v50.b = v50;
    }
}
C46.e = C46;
