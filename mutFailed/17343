class C3 {
    static #valueOf(a5) {
        const v6 = `
            let v8;
            try { v8 = this["add"](); } catch (e) {}
            try {
                this.fuck(10000, [3684,10000,v8,"add",v6], v6, 3684);
            } catch(e12) {
            }
        `;
        var d = delete a5[0];
        function f14() {
            return 255;
        }
        eval(v6);
        return a5;
    }
}
const v17 = new C3();
const v18 = new C3();
const v19 = new C3();
class C21 {
    m(a23, a24, a25) {
        -(-536870912);
        Math.atan(a24);
        a24 % 1073741824;
        v17.log1p(1073741824);
        try {
            v17.fuck(a25, this);
        } catch(e34) {
        }
        super[1073741824] = 3684;
        return 255;
    }
    #h = -536870912;
    182 = 255;
    [v18] = v17;
}
const v35 = new C21();
const v36 = new v35();
new C21();
class C38 extends C3 {
    p(a40, a41) {
        super[v17] = a41;
        v36.f >>= 255;
        return C21;
        return C3;
    }
    constructor(a43, a44, a45, a46) {
        super();
        v19 % 255;
        try {
            let v48 = new C21();
            v48[2129] += 255;
            v48 &&= v36;
            const o52 = {
                "execution": "sync",
                "type": "minor",
            };
            gc("sync");
        } catch(e54) {
        }
    }
}
const v55 = new C38(v35, C3, v36, v19);
const v56 = new C38(v17, 255, v55, v36);
new C38(v36, C38, v17, v56);
const v59 = [0.0,-2.220446049250313e-16];
let v60;
try {
const t0 = 16;
v60 = t0();
} catch (e) {}
function f61() {
    return f61;
}
class C62 extends f61 {
}
class C63 {
    constructor(a65, a66) {
        /W(jy2)/udy.flags;
        let v71 = v59[v60];
        v71 **= Uint8Array;
        function f72(a73, a74, a75, a76) {
            return a74;
        }
        for (let v77 = 0; v77 < 625; v77++) {
            f72(Uint8Array, 2, v77);
            try {
                a65 &= C62;
            } catch(e79) {
            }
        }
    }
}
new C63();
new C63();
