const v4 = new Uint32Array();
const v5 = v4[40];
for (let v6 = 0; v6 < 25; v6++) {
    try { v5(); } catch (e) {}
}
class C9 {
    static 13;
    [5n];
    #b;
    static a = v4;
    m(a11) {
        super[41372n] = this;
        return 41372n;
    }
    c;
    257 = 41372n;
    static #a = 5n;
    [3n];
    static c = 3n;
}
const v12 = new C9();
const v13 = new C9();
const v14 = new C9();
function F15(a17, a18, a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a20;
    } catch(e21) {
    }
    try {
        Uint32Array.c = a20;
    } catch(e22) {
    }
}
const v23 = new F15(41372n, v14, v12, v14);
const v24 = new F15(v14, v14, v12, v14);
const v25 = new F15(v14, v13, 41372n, v23);
class C26 {
    a = v24;
    static #c;
    static set d(a28) {
    }
    static {
        super[this];
    }
    static valueOf(a32, a33) {
        super.e = this;
        v14[super[v24]];
        return v25;
    }
    static #e = C9;
    static [v14];
    h = v25;
    #f;
    6 = v23;
}
const v36 = new C26();
new C26();
new C26();
const v41 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v42 = [601759695];
const o44 = {
    4294967296: "UHH",
};
const v45 = [];
function F46(a48, a49, a50, a51) {
    if (!new.target) { throw 'must be called with new'; }
    a48.lastIndexOf(a48, a49);
}
const v53 = new F46(v45);
const v54 = v53.constructor;
try { new v54(); } catch (e) {}
const v56 = [1073741824,1073741823,1376142744,1073741825];
function f58(a59, a60, a61, a62) {
    function f64() {
        const o89 = {
            "c": a60,
            "arguments": v42,
            [v45]: v36,
            "h": "Vre",
            ...-4294967295,
            "c": -4294967295,
            [522675525n](a69, a70) {
                try {
                } finally {
                }
            },
            ..."Vre",
            "maxByteLength": -128,
            "c": v42,
            valueOf(a72, a73) {
                return a61;
            },
            "e": -4294967295,
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v41,
            ...v42,
            "type": "Vre",
            ..."Vre",
            valueOf(a75, a76) {
                return a59;
            },
            get d() {
                const v79 = Symbol.toPrimitive;
                const o82 = {
                    [v79]() {
                        ["Vre"];
                    },
                };
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            toString(a84, a85, a86) {
                return a60;
            },
            m(a88) {
                return a88;
            },
            "execution": "UHH",
            "execution": "UHH",
            5: -4294967295,
            6: -268435456,
        };
        return "Vre";
    }
    f64();
    const v92 = new Int8Array();
    v92.buffer.slice(2147483648);
    %OptimizeFunctionOnNextCall(f64);
    let v97;
    try { v97 = v56["find"](..."find", a62, ...v42, ...v56, ...522675525n); } catch (e) {}
    v97 <= a61;
    return arguments;
}
for (let v99 = 0; v99 < 5; v99++) {
    v99();
}
%PrepareFunctionForOptimization(f58);
f58();
%OptimizeFunctionOnNextCall(F46);
f58();
