[-5.0,2.220446049250313e-16,-1.5612483901889037e+307,-1.0,-1.6661551768199761e+308,-2.2250738585072014e-308];
[-470133.04882549995,Infinity,540120.4908215683,-5.0,9.288468939396278,1000000000.0,-5.0,839650.7929993402];
[-5.0,-0.0,-1.0,0.09875242996410727,-8.30460943479606,935.0005883130686,-2.0];
new Uint8ClampedArray(303);
/9f8\xf0\x9f\x92\xa9/diy["compile"]();
const v16 = -698162.0562706811 % 4294967296;
function F21(a23, a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = -9;
    } catch(e27) {
    }
    try {
        this.b = 1552;
    } catch(e28) {
    }
}
const v29 = new F21(-9, 1073741824, 1073741824, "setUint32");
function f30(a31, a32) {
    const o38 = {
        "f": -9,
        set e(a34) {
            Reflect.construct(a34, [a31,v29,Reflect,a32], a34);
        },
        ["number"]: v29,
        "e": "toString",
        9: "toString",
    };
    return o38;
}
f30(v29, "toString");
Object.defineProperty(v16, "a", { writable: true, configurable: true, value: f30 });
new Uint16Array(1552);
new Int32Array(5);
const v46 = [];
class C47 {
}
const v48 = new C47();
function F49(a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a52;
}
const v53 = new F49(v48, v46);
[v53];
new Uint16Array(14);
function F57(a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
}
for (let [v62] of "Opx24") {
}
function f65() {
    const o71 = {
        "e": 12,
        __proto__: 3.4890473589784586e+307,
        "g": 12,
        o(a70) {
            return a70;
        },
        ...1000000000000.0,
    };
    return o71;
}
f65();
const v74 = [1000000.0,-1.7976931348623157e+308];
const o75 = {
    ...v74,
};
