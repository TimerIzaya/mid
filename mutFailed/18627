const v5 = new Array(2457);
v5.undefined = 1073741824;
class C6 {
    constructor(a8) {
        let v9 = "atan2";
        try { a8[v9](); } catch (e) {}
        v9++;
    }
}
const v12 = [-12,9007199254740991,-4,19081,-51070,9,-1876613218,512];
[-4294967297,62317,-13301,11,268435439,16,-1135109348,129,-536870912,-9];
const v14 = [-19746,42901,12,-12902,257,9,178477791,-13,22340];
const o18 = {
    "maxByteLength": 536870889,
};
const v20 = new SharedArrayBuffer(217, o18);
try { v20.grow(); } catch (e) {}
function F32(a34) {
    if (!new.target) { throw 'must be called with new'; }
    const v35 = this?.constructor;
    try { new v35("toString"); } catch (e) {}
    a34[5];
}
function F46(a48) {
    if (!new.target) { throw 'must be called with new'; }
}
const v49 = new F46(536870889);
v49.Probe = v49;
with (v49) {
    function F50(a52, a53, a54) {
        if (!new.target) { throw 'must be called with new'; }
        const t31 = this.__lookupSetter__;
        t31(Float64Array);
    }
    let v57 = 10;
    for (;
        (() => {
            const v58 = v57--;
            v58 >>> v58;
            return v58;
        })();
        ) {
    }
}
let v67 = undefined;
const o68 = {
};
v67 = o68;
const v71 = new Uint32Array(64);
v71.indexOf(v71, 64);
const v73 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
([1073741824,1073741823,1376142744,1073741825]).forEach(v49, v73);
const v76 = o68.propertyIsEnumerable;
class C79 {
    constructor(a81, a82, a83) {
        for (let v84 = 0; v84 < 25; v84++) {
            const o89 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o89).then(new.target);
        }
    }
}
const v92 = new Uint8Array();
function f93(a94, a95, a96, a97) {
    ["object"];
    class C100 {
        static #valueOf(a102, a103, a104) {
        }
    }
    const v105 = a96++;
    try { v14.flat(a96); } catch (e) {}
    v14[Symbol.unscopables];
    v5[a97];
    (~9007199254740990).constructor;
    -[];
    a96 % a96;
    const o136 = {
        "b": a94,
        set h(a118) {
            ("minor").split("toString");
            function f123() {
                const o130 = {
                    "h": -1073741824,
                    ..."Vre",
                    valueOf(a128, a129) {
                        return 522675525n;
                    },
                    ..."Vre",
                    "c": "object",
                    5: -1073741824,
                    6: -268435456,
                };
                return "object";
            }
            a95 = -22068n;
            a97 - -1986492195n;
            try { a97(v76, v12, Uint8Array, Uint8Array, v67); } catch (e) {}
        },
        ...v92,
        n(a134, a135) {
        },
    };
    return v105;
}
for (let v137 = 0; v137 < 625; v137++) {
    const v138 = f93(Uint8Array, 2, v137);
    try { v138(v67); } catch (e) {}
}
