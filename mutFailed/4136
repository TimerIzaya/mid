const v0 = [];
class C4 {
    set c(a6) {
        this[3218983854];
        v0.length;
        const v9 = super["-11"];
        function F10(a12, a13, a14, a15) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.b = a15;
            } catch(e16) {
            }
            try {
                new Uint8Array();
                new Uint8ClampedArray(231);
                this.g = a6;
            } catch(e22) {
            }
        }
        new F10(F10, v9, this, "XJag");
        new F10("XJag", "-11", "XJag", "XJag");
        Symbol.hasInstance;
        const o38 = {
            m() {
                for (let v31 = 0; v31 < 10; v31++) {
                    v31 < 10;
                }
            },
        };
        new F10("function", "function", v9, "-11");
    }
}
Uint8ClampedArray[1] = 14;
const v42 = /[r(?<!)]/uim;
function f43(a44, a45, a46, a47) {
    const o53 = {
        set a(a49) {
            let v48 = this;
            [-910865.3408997525,626.3279856071824,-234.8554751364569];
            [-3.0,5.0,0.030403066145865854,-2.2250738585072014e-308,-1e-15];
            const t38 = [0.0,-2.0,-4.4315495470280674e+307,2.220446049250313e-16,1.176246364365651e+307,-6.320855532259336e+307,2.0];
            t38[6] = v42;
            v48 = a44;
        },
        "e": v42,
        "d": a47,
        ...a45,
        "a": a45,
    };
    return o53;
}
const v54 = new C4();
const v55 = new C4();
const v56 = new C4();
function f57() {
    return v56;
}
class C58 {
    static 4167953665;
    constructor(a60, a61, a62) {
        const v65 = new Uint16Array(10);
        try {
            const o66 = {
            };
            o66.e = C4;
            o66.c = v55;
            o66.g = v65;
        } catch(e67) {
        }
        const v68 = this ** this;
        Object.defineProperty(a61, "length", { writable: true, get: f57 });
        v0.length ^= v68;
        -2147483649 + v56;
        !v56;
        -2147483649 ^ v56;
    }
}
const v75 = new C58(v54, "function", "function");
new C58(v75, v75, v75);
new C58(v54, "XJag", "XJag");
const v79 = WeakSet.prototype;
function f80() {
    return f80;
}
Object.defineProperty(v79, "constructor", { writable: true, enumerable: true, value: f80 });
