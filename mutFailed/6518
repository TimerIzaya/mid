function f0() {
}
const v1 = /Q[^W]/s;
let v2 = /a(a\1)/umsy;
const v3 = /vVaa(?=bbb|bb)c\p{gc=Nd}*/gvdmsy;
class C5 extends f0 {
    #d;
    b = f0;
}
const v6 = new C5();
const v7 = new C5();
const v8 = new C5();
const v9 = v3[1073741824];
function F10(a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        for (let v15 = 0; v15 < 10; v15++) {
            try {
                const o16 = {
                };
                const t20 = null;
                t20.valueOf = o16;
            } catch(e18) {
            }
        }
        this.f = v8;
    } catch(e19) {
    }
    try {
        this.g = v6;
    } catch(e20) {
    }
}
new F10(v2, v8, f0);
const v22 = new F10(v8, v2, v6);
new F10(v22, v3, v7);
let v25 = 972897365;
class C26 extends f0 {
    [v2];
    toString(a28, a29, a30) {
        if (a29) {
            return;
        } else {
            v25 += -3;
        }
        return typeof v2 === "string";
    }
    [-1];
    static [-2];
    static #d = -1508324747;
    static #n(a35, a36) {
    }
    constructor(a38, a39) {
        for (let v40 = 0; v40 < 32; v40++) {
            a39["p" + v40] = v40;
        }
    }
    10;
    [f0];
    #d;
    #g = C5;
    static #n(a44, a45) {
    }
    /*
    constructor(a47, a48, a49) {
        function f50(a51, a52, a53) {
            function f55(a56) {
                return a53;
            }
            %PrepareFunctionForOptimization(f55);
            return this;
        }
        Worker(f50);
    }
    */
    64 = v1;
    a = v1;
    static h;
}
const v61 = new C26();
const v62 = new C26();
let v63 = new C26();
function f64(a65, a66, a67) {
    const o79 = {
        "e": -1508324747,
        "a": a65,
        ...v61,
        "h": v1,
        ...a66,
        [-1508324747]: a65,
        ...v2,
        set d(a69) {
            if (a69) {
                try { new a69(a69, this, a65, a67, v3); } catch (e) {}
                super.f;
            } else {
                v2 &&= v2;
            }
            a69 = a67;
            let v72 = 0;
            while (v72 < 4) {
                v72++;
            }
        },
    };
    return o79;
}
Object.defineProperty(v22, "f", { writable: true, configurable: true, value: v22 });
v9 - F10;
v63 = v62;
try {
    v6.b = f0;
} catch(e81) {
}
new Int16Array(1269);
try { Set(Set); } catch (e) {}
f64(v1, v62, v3);
f64(v2, f64(v3, v63, v1), v2);
function f91() {
    function F92(a94, a95) {
        if (!new.target) { throw 'must be called with new'; }
        const v96 = this.constructor;
        try { new v96(); } catch (e) {}
        this.c = Float32Array;
    }
    new F92(f91, F92);
    new F92();
}
Float32Array.toString = f91;
class C101 {
    static [Float32Array] = undefined;
}
