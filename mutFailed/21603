new Uint8ClampedArray(1571, 1571);
new Uint8ClampedArray(128);
new Uint8ClampedArray(462);
new Set(202);
new BigUint64Array(3);
new BigUint64Array(210, 202, 2);
new Set();
new Uint16Array(116);
new Int16Array(512);
new Int32Array(9);
class C38 {
}
function F39(a41, a42, a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
}
const v45 = new F39();
new F39(v45, F39, F39, v45);
const v47 = [7,128];
const v48 = [13,-2103725161,15240,-9223372036854775807,1077763702,256,-1024,9,1073741823,-2];
const v49 = v48[4];
v49 | v49;
const v51 = [40213,422333454,47387,65536,-51830];
v51[2] = v51;
0 - 0;
try { gc(); } catch (e) {}
gc();
const t25 = [8.360030709333259,416819.70671931445,1000.0,-1.0513464134302462e+307,2.2250738585072014e-308,-999.1393293497049];
t25.length = 1;
const v63 = /xyz{1,32}?/gusy;
class C64 {
    268435440 = v63;
}
new BigInt64Array();
try { ("boolean").repeat(1000000.0); } catch (e) {}
const t34 = "toString";
t34[6] = "toString";
"toString" == "toString";
let [,...v72] = [1e-15,1.0,-3.0,1.43935350979979e+308,-0.0];
function f73() {
    const o77 = {
        ...1.0,
        set b(a76) {
        },
    };
    return o77;
}
f73();
("boolean").concat("toString");
8 < "boolean";
const v83 = new Uint8ClampedArray();
try { v83.reduceRight(v83); } catch (e) {}
("I").localeCompare();
-256 >> -256;
function f88(a89, a90) {
    a90--;
    new Float32Array([-37102.6674218484,-969411.635186719,-1.3592557640113297e+308,0.9054806195219168,1000000000000.0,-0.0,-3.0,-0.0]);
    class C95 {
        static {
            this < this;
        }
    }
    a89 | a89;
    const o134 = {
        "c": 15135,
        "a": 15135,
        "d": a89,
        __proto__: a90,
        "g": -1628878962,
        "type": "boolean",
        "a": a89,
        set b(a100) {
        },
        "g": 15135,
        "b": a90,
        get f() {
            super[1000000.0] = this;
            Math.exp(-359.60295377780096);
            const v105 = [-503399.81061701436,0.07820891042711386,-100.04924869632453,-Infinity];
            [[[-1e-15,-4.547098672084515,6.731189859503068,1000.0,1000.0,414.1111077300918,567.5737904015757],v105,v105]];
            try {
                new Int8Array(9);
                function f112() {
                    return f112;
                }
                new Uint16Array();
                !0.8843420658768774;
                function F116() {
                    if (!new.target) { throw 'must be called with new'; }
                }
                const v119 = new F116();
                const o127 = {
                    [v119](a122, a123, a124, a125) {
                        "D2z" < a122;
                    },
                };
                const o129 = {
                    [f112]() {
                    },
                };
                [o129];
                v48.copyWithin(8, -268435456, -256);
            } catch(e133) {
            }
            return this;
        },
    };
    o134.g = o134;
    return o134;
}
let v135;
try { v135 = f88(15135, 15135); } catch (e) {}
v135[1000000];
f88(925.1427495594241, v47);
f88(317008.8127941969, -4);
f88(1000000.0, v48);
268435441n ^ 268435441n;
268435441n - 268435441n;
const v144 = new BigUint64Array();
v144[2445191368] = 268435441n;
