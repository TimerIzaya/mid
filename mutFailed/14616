class C3 {
    static o(a5, a6) {
        let v7;
        try { v7 = a5.setFloat32(a6, 64, -2.220446049250313e-16, 64); } catch (e) {}
        let v8;
        try { v8 = v7.getFloat32("race"); } catch (e) {}
        "race" < a6;
        let [...v10] = "race";
        const v11 = v8;
        class C13 {
            9 = 6;
        }
        new C13();
        try {
            ("race").charAt(536870889);
        } catch(e17) {
        }
        return -2.220446049250313e-16;
    }
}
new C3();
new C3();
class C21 extends 64 {
}
const v22 = new C21();
const v24 = Math.cbrt(64);
new C3();
class C29 extends C3 {
    10;
    #valueOf(a31, a32, a33, a34) {
        a34.d;
        [1166355815,2147483648,-2,-1964053074];
        gc();
        let v42;
        try {
        const t0 = 10000n;
        v42 = t0(2n, -536870912n);
        } catch (e) {}
        [v42,v42,v42];
        [65535,255];
        return [5,1000,-9223372036854775807,-65537,2147483647,-8];
    }
    static b;
    4 = "race";
    static [64] = -9007199254740990n;
}
new C29();
new C29();
try {
    Math.b = 5;
} catch(e49) {
}
new C29();
class C52 {
    constructor(a54) {
        const v55 = this.constructor;
        try { new v55(); } catch (e) {}
        const v58 = Symbol.toPrimitive;
        const o62 = {
            "a": v24,
            2013: v22,
            "d": 420575284n,
            "h": -2.220446049250313e-16,
            __proto__: "race",
            [v58]() {
                v55.iterator;
            },
        };
        ("valueOf").localeCompare();
    }
}
const v66 = new Int8Array(C21);
v66.indexOf();
Math.tanh(0.3840861739144876);
const v72 = new C52();
const v73 = v72.constructor;
class C75 extends ("b").constructor {
}
new v73(C52, C21, C75, C52);
const v79 = new Date();
v79.setMilliseconds(C21);
class C82 extends Array {
}
