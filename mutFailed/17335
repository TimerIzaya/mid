const v0 = [0.6140093319985866,681046.4451658118,-1000.0,-664.3057356364345,1000000.0,NaN,-3.125354741305784e+307,1000000.0,1.0,7.7412558537297e+307];
function f1(a2, a3) {
    try {
        a2.a = a3;
    } catch(e4) {
    }
    return a3;
}
let v6 = Symbol.toPrimitive;
const v7 = Symbol(f1);
v6 & v7;
f1 + v7;
++v6;
Math.acos(f1);
Math.pow(v6, 1146875305);
f1 >>> v0;
v0[v6] = f1;
[0.9404336709529384,640.7681490748637,0.6705240063905751,-1.1007273305877585e+308,-8.49198345388269e+307,-2.0926095259371325,-5.0772311339918584e+306,1000.0];
const v18 = [-1e-15,Infinity,6.717104739807436,4.662041851392255e+307,-871.9955867325897,0.7425951761402805,-3.0];
const v19 = [401768063,1,5,-58712357,1256068789];
function f20(a21, a22) {
    return 11 - 11;
}
try {
    v7.fuck(f1, -415405641, v6);
} catch(e27) {
}
Object.defineProperty(v19, Symbol.toPrimitive, { enumerable: true, value: f20 });
const v32 = [9007199254740990,2147483649,1365396487];
const v33 = [-2104317831,1,256,9007199254740990,6,2147483649,-5,30938,65536];
class C34 {
    static [v19] = v32;
    o(a36, a37) {
        try { v33.reduce(a37, a37); } catch (e) {}
        a37 = v33;
        super.g = v19;
        a36 = v19;
        return v0;
    }
    h = v18;
    static [v0];
    10000 = v0;
    static #f = v18;
}
new C34();
new C34();
new C34();
let v51 = 144;
const v52 = v51++;
class C53 {
    constructor(a55, a56) {
        this.propertyIsEnumerable(C53);
        v33["unshift"]();
    }
}
C53[Symbol.toPrimitive] = f20;
C53[Symbol.toPrimitive] = Symbol;
function f67(a68) {
    return v52;
}
C53[Symbol.toPrimitive] = f67;
new C53();
