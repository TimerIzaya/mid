const v0 = [-8.736430217306641e+307,1000000.0,-489732.20800014783,-184242.20455107337,-1000000000.0,1e-15,0.5200961913166134,5.457948793122718];
const v1 = [-1.0,-248997.68585925247,1000.0,-709.7502441609931,-0.43830177786731106,-1000000000000.0,3.0,-1000000000000.0,0.563498967435769];
const v2 = [0.9126235039864234,-1.0343664614553083e+308,-Infinity,-1000000.0,-611248.8487845426,919.1424306032225,4.0,0.1372627394255056];
function f3() {
    return v0;
}
try {
    new f3();
} catch(e5) {
}
v1 !== v0;
class C7 extends f3 {
    static 5 = v2;
    b = v2;
    p(a9) {
        try {
            f3();
        } catch(e11) {
        }
        return v1;
    }
    #d;
}
new C7();
new C7();
new C7();
class C18 {
    static {
    }
}
const o21 = {
};
class C22 {
    constructor(a24, a25) {
    }
}
const v27 = new C22();
v27 << -1557853178;
function F31(a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = F31;
    try {
        this.b = "function";
    } catch(e35) {
    }
    try {
        this.h = "function";
    } catch(e36) {
    }
}
const v37 = new F31();
new F31();
new F31("function", v37);
const v42 = new Float32Array();
class C43 {
    set d(a45) {
    }
    static #m(a47, a48, a49) {
    }
    static {
        for (let v51 = 0; v51 < 10; v51++) {
            function f52() {
                return v51;
            }
            const v53 = [601759695];
            const v54 = [1073741824,1073741823,1376142744,1073741825];
            function f56(a57, a58, a59, a60) {
                function f62() {
                    return a57;
                }
                f52();
                const v65 = new Int8Array();
                function f66(a67, a68) {
                    return a67;
                }
                f66(f66(v54, v42));
                v65.buffer.slice(2147483648);
                %OptimizeFunctionOnNextCall(f62);
                let v75;
                try { v75 = v54["find"](..."find", a60, ...v53, ...v54, ...522675525n); } catch (e) {}
                v75 <= a59;
                return arguments;
            }
            for (let v77 = 0; v77 < 10; v77++) {
                f56();
            }
        }
    }
}
