function f3(a4) {
    const v5 = a4 !== a4;
    const o16 = {
        toString(a7) {
            let v10 = !a4;
            Math.min(-256);
            v10--;
            v5.cosh(v10);
            Math.atanh(a4);
            4294967295 ** v10;
            return a4;
        },
        "e": 38689,
        [a4]: a4,
        "g": a4,
    };
    return o16;
}
const v17 = f3(38689);
try { v17.isPrototypeOf(38689); } catch (e) {}
f3(1073741823);
f3(38689);
function f21() {
    return -256;
}
let v22;
try { v22 = f21(); } catch (e) {}
let v23 = 2;
v23--;
-65536 >>> -65536;
const v34 = new BigInt64Array(4046);
try { Int8Array.bind(v17); } catch (e) {}
function f38(a39, a40) {
    a40++;
    a39++ << -65536;
    const o50 = {
        "d": a39,
        p(a45, a46, a47) {
            v17.g;
            return a47;
        },
        ...v17,
        ...4046,
        get e() {
            return 4046;
        },
    };
    [,...v22] = v34;
    a40[4046];
    try { new ArrayBuffer(ArrayBuffer); } catch (e) {}
    const o55 = {
        "maxByteLength": 38689,
    };
    const t53 = 38689;
    new t53();
    const v59 = new Float32Array();
    const v60 = v59?.entries;
    try { new v60(); } catch (e) {}
    return 3768;
}
f38(4046, 3768);
const v63 = f38(4046, 3768);
v63 - v63;
