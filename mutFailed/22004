const v2 = [];
function f3() {
    const o5 = {
        p() {
            return f3;
        },
        [v2]: v2,
        "a": v2,
    };
    return v2;
}
new Int32Array(2533);
let v7 = 10;
new Int16Array(v7);
function f11() {
    return f11;
}
class C12 extends f11 {
}
function f14(a15, a16, a17, a18) {
    return a16;
}
for (let v19 = 0; v19 < 625; v19++) {
    f14(Uint8Array, 178, v19);
    try {
        v7 &= C12;
    } catch(e21) {
    }
}
new Uint32Array(178);
new Date();
function f28(a29, a30, a31, a32) {
    const o43 = {
        toString(a34, a35) {
            const v38 = new Int32Array(1024);
            for (const v39 of v38) {
                new SharedArrayBuffer();
                SharedArrayBuffer.e = v38;
                [1539012200,f28];
            }
        },
    };
    return o43;
}
for (let v46 = 0; v46 < 250; v46++) {
    v46 <= v46;
}
const v50 = new undefined();
function f51() {
    const v53 = v50[undefined] instanceof f51;
    const o54 = {
    };
    v50.h = o54;
    o54.h = v53;
    return o54;
}
const o55 = {
    "apply": f51,
};
o55.apply;
/Ma[a]\1(a)/vsy;
/(?<a>(?<b>(?<c>(?<d>.).).).)(x)(x)(x)\2+/vdim;
/d/gudim;
for (let v60 = 0; v60 < 5; v60++) {
    function f61() {
        let v63 = ("Vre").codePointAt(v60);
        let v65 = v63 * v63--;
        v65--;
        return v65 / v65;
    }
    f61();
    %OptimizeFunctionOnNextCall(f61);
}
