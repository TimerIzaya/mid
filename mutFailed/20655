class C3 {
    set c(a5) {
        a5 = -19462;
        try {
            this.e = this;
        } catch(e6) {
        }
        delete this?.e;
    }
    [4] = -536870912;
    static h;
    static #c;
    static [4];
}
const v8 = new C3();
new v8();
new v8();
for (let v11 = 0; v11 < 25; v11++) {
    const v12 = [601759695];
    const v13 = [1073741824,1073741823,1376142744,1073741825];
    function f15(a16, a17, a18, a19) {
        function f20() {
            return a16;
        }
        const v22 = new v13();
        const v25 = Float64Array.of();
        const v27 = new Date();
        v27.setFullYear(v25, 3811);
        const v31 = BigUint64Array * 536870887;
        v22.buffer;
        const v33 = new Int8Array();
        try { v33.entries(); } catch (e) {}
        try { v13["find"](..."find", a19, ...v12, ...v13, ...522675525n); } catch (e) {}
        const v38 = new Uint8ClampedArray(v12, v31, 536870887);
        try { v38.findLast(v31); } catch (e) {}
        const o40 = {
            ...v38,
        };
        return Float64Array;
    }
    for (let v41 = 0; v41 < 5; v41++) {
        f15();
    }
}
new Int16Array(7);
new Int8Array(2282);
const t46 = -19462;
new t46(1);
for (let v52 = 0; v52 < 25; v52++) {
    function f53(a54, a55, a56, a57) {
        Function();
        ("D")[0].substring().charCodeAt();
    }
    for (let v64 = 0; v64 < 5; v64++) {
        f53();
    }
}
