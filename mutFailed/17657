function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = this;
    } catch(e3) {
    }
    try {
        this.e = -13;
    } catch(e4) {
    }
    try {
        this.a = -13;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
Math.cbrt(1073741824);
const v12 = v6.constructor;
class C13 extends 1073741824 {
}
function F17(a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v7;
        function f21() {
            const o24 = {
                m(a23) {
                    return f21;
                },
            };
            v7.m();
            return o24;
        }
        f21();
    } catch(e27) {
    }
    try {
        this.fuck(v12, a19);
    } catch(e29) {
    }
    a19 >> v8;
    function f31() {
        return f31;
    }
    function f32(a33) {
        function f35(a36) {
            return +a36;
        }
        v6.onmessage = this;
        return Math;
    }
}
new F17(v8, v6);
const v42 = new F17(v6, v6);
const v43 = new F17(v7, v7);
function f45(a46) {
    for (let v47 = 0; v47 < 5; v47++) {
        for (let v48 = 0; v48 < 5; v48++) {
            const t60 = [0.8307152163010869,1.0,0.0];
            t60.length = v48;
        }
    }
    const o53 = {
        __proto__: a46,
        ...a46,
        p(a51, a52) {
            return v43;
        },
    };
    return o53;
}
%PrepareFunctionForOptimization(f45);
const v54 = f45();
const v55 = [Infinity];
class C56 {
    [v42];
}
new C56();
%OptimizeFunctionOnNextCall(f45);
F0(v54);
v55[268435441] = 2;
function f63() {
    return 7n;
}
C13[2] = -44363;
function f65(a66, a67, a68, a69) {
    a67.__proto__;
    return 9;
}
f65(1073741824, 1073741824);
