const v0 = [-62599,54202];
const v1 = [-7,9,1152258063,257,-1024,257,2147483647,-1446493791,4294967295];
const v2 = [9007199254740991,-24527,-14];
function f3(a4, a5) {
    a5[Symbol.toPrimitive] = f3;
    const o21 = {
        set f(a9) {
            let v8 = this;
            v8 *= v2;
            delete a9?.[2461149307];
            const v12 = v2.__proto__;
            super[a5] = v1;
            try { a4.valueOf(v1, v8, v12, a5); } catch (e) {}
        },
        [v2]: v0,
        m(a15) {
            try {
                a15.length = a4;
            } catch(e16) {
            }
            [9007199254740992,5,1228711304,14,519814763,962273468,8,536870889,-9007199254740992,1];
            const v19 = [1194707013,255,1139010842,-1265370687];
            [-46084,-65536,129,-4294967297,1000,6,-9223372036854775807,-14];
            return v19;
        },
    };
    return o21;
}
f3(f3, v1);
f3(v1, v1);
f3(v1, v2);
new BigUint64Array(1000);
new Int16Array(457);
new Float64Array(4);
function f45() {
    eval("");
    return -128;
}
