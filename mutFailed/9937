function f3(a4) {
    for (let i6 = 0; i6 < 2; i6++) {
        return a4;
        [-1.6078379165013868e+307,-375654.6356706787];
        [2.220446049250313e-16,-2.2250738585072014e-308,-2.2250738585072014e-308,0.23101464800032445,727472.6785374503,-5.115640871979866e+306,485426.41028964473,1000000000000.0,-5.0,-2.220446049250313e-16];
        [-1.7976931348623157e+308,0.763285926144613,-1e-15];
    }
    const o29 = {
        __proto__: -65535n,
        "c": a4,
        [-65535n]: 5n,
        "f": a4,
        124: 5n,
        "b": a4,
        "h": a4,
        "g": a4,
        ...5n,
        ...-65535n,
        n(a16) {
            const v19 = 903484152 * -65535n;
            const o21 = {
                "execution": "async",
            };
            class C23 {
                [-55801.39760616061];
            }
            const v24 = a4++;
            this / a4;
            a4 & v19;
            Math.log2(a4);
            return v24 | v19;
        },
        [a4]: -65535n,
        "e": a4,
    };
    return o29;
}
f3(-1n);
const v31 = f3(-1n);
const v32 = f3(5n);
const v35 = new BigInt64Array(128);
class C38 {
    static #p(a40, a41) {
    }
    #h;
}
const v42 = new C38();
function f43(a44, a45, a46, a47) {
    const o48 = {
        "c": -922911.6474995338,
        242: -922911.6474995338,
        "g": v42,
        [a47]: a45,
        [C38]: a45,
        "a": -747634.1081113975,
        "h": a44,
        "f": a47,
    };
    return o48;
}
new Int8Array(2);
new Float32Array(10);
const v57 = Float32Array <= 128;
if (v57) {
    v31?.[691829191];
} else {
    Object.defineProperty(v35, 8, { writable: true, configurable: true, value: v57 });
}
[-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
[601759695];
const v63 = [1073741824,1073741823,1376142744,1073741825];
function f65(a66, a67, a68, a69) {
    function f71() {
        const o74 = {
        };
        return a66;
    }
    f71();
    try { v63[a68](); } catch (e) {}
}
const v77 = [-536870912,-1454443390,-11,536870887];
let v79;
try {
const t0 = 65536n;
v79 = t0(65536n);
} catch (e) {}
v77[65536n] *= v79;
function f81() {
    "p" + -13;
    return f81;
}
const v84 = [-2.220446049250313e-16,-1.2960362069804638,1000000.0];
const v85 = [-1.4967617591971738,2.0,-2.2250738585072014e-308,0.30325345191391684,-1000000000.0,-471.48827446067276,0.4054223816062078,-3.1156994274492186e+307,1000.0];
Symbol.species;
const v89 = ~268435440;
const v91 = Uint8Array.length;
function f92(a93, a94, a95, a96) {
    const o97 = {
        ...a94,
        "d": Float32Array,
        "c": 964598.6714444079,
    };
    return o97;
}
f92(1783, v63, -1n, v91);
f92(2, v85, v32, v89);
f92(10, v84, -1n, 10);
new Uint8Array(268435440);
for (let v103 = 0; v103 < 32; v103++) {
    const v106 = ("object" + v103).trim;
    try { v106(); } catch (e) {}
}
const t112 = [1000000.0,69.5407062634481,-1e-15,NaN];
t112[Symbol.asyncIterator] = v84;
new Uint8ClampedArray();
class C117 extends v84.constructor {
}
Int16Array(522675525n);
[-0.0,-1000.0,-1000000000.0,609397.4823424052,1000000000000.0,-609042.2531829935,1.7976931348623157e+308,-6.6169861811628e+307];
class C121 {
}
const v122 = new C121();
const v123 = v122.__defineSetter__;
try { new v123(C121); } catch (e) {}
function f125() {
    function f126(a127, a128) {
        return f125;
    }
    const v130 = new Promise(f126);
    v130.then(f125, f126);
    return v130;
}
%PrepareFunctionForOptimization(f125);
f125();
%OptimizeFunctionOnNextCall(f125);
f125();
