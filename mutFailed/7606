class C3 {
    constructor(a5, a6) {
        const v8 = Symbol.replace;
        a5[v8] = a6;
        a6[v8] = this;
        var b = -547997.1655832729;
        this instanceof Worker;
    }
    /*
    constructor(a12) {
        try {
            const o14 = {
                get a() {
                    return this;
                },
            };
            o14.a = "-1871037795";
        } catch(e15) {
        }
    }
    */
    2147483649;
    #p(a17, a18) {
        const v19 = a17 ^ a17;
        if (a17 >= "object") {
            try {
                a17.f = "-1871037795";
            } catch(e21) {
            }
        } else {
            function F22(a24, a25, a26) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.e = a18;
                } catch(e27) {
                }
                try {
                    this.h = v19;
                } catch(e28) {
                }
                try {
                    this.a = this;
                    const v31 = new BigInt64Array(4046);
                    let o32 = {
                    };
                    [,...o32] = v31;
                } catch(e33) {
                }
            }
            const v34 = new F22(F22, a18, "-1871037795");
            new Float64Array(64);
            const v38 = [536870888,8];
            v38.concat(v38);
            new F22(F22, v34, this);
            new F22(this, F22, v19);
        }
        return this;
    }
}
const v42 = new C3(-547997.1655832729, C3);
const v43 = new C3(v42, v42);
const v44 = new C3("-1871037795", v43);
class C45 extends C3 {
    p(a47, a48, a49, a50) {
        delete a47?.b;
        const v54 = new Int8Array(180);
        v54[v54.byteOffset] = 5;
        Object.defineProperty(v44, 6, { configurable: true, value: this });
        class C57 extends C3 {
            #a = a50;
        }
        new C57();
        const t72 = [1073741824,255,-93221804,1,268435440];
        t72.length = 4294967296;
        C3--;
        const v64 = new Uint8Array(16);
        const v68 = new Uint8ClampedArray();
        class C69 extends Uint8ClampedArray {
            constructor(a71, a72, a73, a74) {
                super(v64);
                try { a72(); } catch (e) {}
                `1073741824${8}c`;
                super[v68] = 520;
            }
        }
        new C57();
        new C57();
        return a47;
    }
    static #b;
    [v42] = v44;
    #h;
    b;
}
new C45();
new C45();
new C45();
/a+bXM+/guims;
/M/y;
/Pld/udisy;
[9.340501401111053e+307,8.763175523989815e+306,2.0,1000000000000.0,-1000.0,0.05255120894122656];
[3.0,-3.0,6.413675267041181e+307,-1000000000000.0,-7.420735453542857,2.0,2.2250738585072014e-308,4.854777376516692e+307,-26.361303452842662,1000.0];
[2.220446049250313e-16,2.220446049250313e-16,1.4134038018337055e+308,1.0,2.2250738585072014e-308,2.2250738585072014e-308,-2.0,1000000.0];
class C90 {
    constructor(a92, a93) {
        const v95 = new BigInt64Array();
        const o96 = {
            __proto__: v95,
        };
        try { o96.indexOf(); } catch (e) {}
        const v98 = this.constructor;
        try { new v98(); } catch (e) {}
        let v100 = 0;
        for (let i = 0; i < 10; i++) {
            Math.atan();
            const v104 = v100++;
            v104 - v104;
        }
    }
}
new C90();
Array(v43);
([1000000000000.0,6.579220753226213e+307,2.0,-2.220446049250313e-16,NaN,-1000000.0])["findIndex"](gc);
