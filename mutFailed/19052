const v2 = new Int16Array(9);
new Uint32Array(1058);
const v8 = new Uint8Array(9);
const v11 = new Uint8Array(512);
try {
    v11.__proto__ = v2;
} catch(e14) {
}
v8[3];
const v16 = new BigUint64Array(1000);
new Float64Array(129);
const o22 = {
};
function F23(a25, a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    for (let v29 = 0; v29 < 5; v29++) {
    }
    class C30 extends F23 {
        static g = 1000;
        #d;
    }
    new C30();
    new C30();
    new C30();
    const v34 = Math.acosh("9g9Ak");
    Math.cbrt("9g9Ak");
    "9g9Ak" % undefined;
    const v37 = this.constructor;
    try { new v37(o22, v34); } catch (e) {}
}
new F23();
v11[129] *= 1000;
const v40 = 512 > Uint32Array;
v16[v40] = v40;
new F23();
