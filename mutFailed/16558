function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.e = this;
    try {
        this.c = -47075;
    } catch(e3) {
    }
    try {
        this.e = -47075;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
new F0();
function f8() {
    return F0;
}
[256,62895,1323068375,1853814782];
const v10 = [4294967295,-1024,35983,23001,844818306,129,128];
[1073741824,1000,-9223372036854775807,4294967296,-268435456,1574744777,13,32176,4294967295,3];
[F0,v5];
const v13 = [F0,f8];
[v13,v6,v13];
new v10();
const v17 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
for (let v18 = 0; v18 < 5; v18++) {
    function f19() {
        try {
            v17.forEach();
        } catch(e21) {
            e21.a = e21;
        }
        const v23 = Symbol.toPrimitive;
        v23.description;
        f19.for();
        return v23;
    }
    f19();
    %OptimizeFunctionOnNextCall(f19);
}
