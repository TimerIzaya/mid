const v0 = [5.0,Infinity,-1.5488670234677414e+308,0.17049746652599362,0.5336084392269351,-2.220446049250313e-16,-1000000000.0];
const v1 = [4.0,NaN,-1000.0,0.36980395497406504,-1e-15];
const v2 = [4.296060305491308,1.0,-188.0587833338618,525.6388957578715,-8.873491199574142e+306];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = v1;
    } catch(e6) {
    }
}
new F3(v0);
const v8 = new F3(v0);
const v9 = new F3(v8);
class C10 {
    static c;
    constructor(a12, a13) {
        let v11 = this;
        ++v11;
    }
    set e(a16) {
        new F3(F3);
        let o18 = {
            "d": v0,
            [-1]: F3,
        };
        o18++;
    }
    65536 = v9;
}
const v20 = new C10(v2, v0);
new C10(v0, v1);
new C10(v1, v2);
new v20(5);
new BigInt64Array(127);
new Int8Array(176);
new Uint8ClampedArray(15);
new Int32Array();
const v39 = new Int32Array(257);
function F40(a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a43;
    } catch(e44) {
    }
}
const v45 = new F40(15, 257);
new F40(257, 512);
const v47 = new F40(15, 512);
for (const v48 in v47) {
    const v49 = /[MrN]/gudi;
    const v50 = /(x)(x)(x)\2/gvdisy;
    try {
    const t0 = 15;
    t0(v48, v49, v50, v50, v45);
    } catch (e) {}
    /YzF[\11]/gms;
    /(ab)\1[\11](?:a*)+(J\bI)+/diy;
}
v39[v39];
