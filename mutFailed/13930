const v0 = [1120269093,-1073741824,-268435456,-2147483647,-1024];
const v1 = [65535,23897,129,128,-536870912,-1,-9007199254740991,65535];
const v2 = [-1073741824,-8,4096,64,47440,-2,-14,-2147483648,536870887];
const v9 = Symbol.iterator;
const o37 = {
    [v9]() {
        const v12 = new Set();
        function F13(a15, a16) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = a15;
            } catch(e17) {
                for (let [v18,v19] of a15) {
                    try {
                        v12.values();
                    } catch(e21) {
                    }
                }
            }
            try {
                this.h = v12;
            } catch(e22) {
            }
            try {
                const v23 = v12[this];
                try {
                    new F13(v23, -268435456n);
                } catch(e26) {
                }
                this.b = Set;
            } catch(e27) {
            }
        }
        const v28 = new F13(Set, Set);
        new F13(v28, F13);
        let v30 = 10;
        const o36 = {
            next() {
                v30--;
                const v34 = v30 == 0;
                const o35 = {
                    "done": v34,
                    "value": v30,
                };
                return o35;
            },
        };
        return o36;
    },
};
function F39(a41, a42) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 71891390;
    } catch(e43) {
    }
    try {
        this.g = 71891390;
    } catch(e44) {
    }
    try {
        this.a = v2;
    } catch(e45) {
    }
}
new F39(4294967295, v2);
const v47 = new F39(-1024, v1);
for (let v48 = 0; v48 < 25; v48++) {
}
const t69 = 4294967295;
t69[1] = Float64Array;
try {
    class C51 extends 4096 {
    }
} catch(e52) {
}
new F39(-1024, v0);
const v59 = new Uint16Array(9);
new BigInt64Array();
const v65 = new Int32Array(536870889);
[Int32Array,v59,v65,BigInt64Array];
const v67 = [9,Int32Array,v65];
[2086,v67,Uint16Array,v65,v59,v67];
class C70 {
    static c;
}
const v71 = new C70();
const v72 = new C70();
const v73 = new C70();
class C74 {
    static #n(a76, a77, a78, a79) {
        class C80 {
            4;
            static a;
        }
        C80();
        const v82 = C80();
        C80();
        delete a78?.[6];
        a77 - C80;
        super[v82];
        try {
            o37.c = v47;
            return Array().pop();
            function f90() {
                return f90;
            }
        } catch(e91) {
        }
    }
    7 = v73;
    #a = v72;
}
const v92 = new C74();
new C74();
new C74();
const v95 = [v73];
[v71];
function F97() {
    if (!new.target) { throw 'must be called with new'; }
}
new F97();
const v100 = new F97();
const v101 = new F97();
v101.e = Float64Array;
function F102(a104, a105) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor = Symbol;
    const v106 = a105?.__lookupGetter__;
    try { v106(a104); } catch (e) {}
    try { this.constructor(F102, this); } catch (e) {}
    a104.e = a104;
}
F102.arguments = F102;
const v109 = new F102(v101);
v109.e = v92;
const v110 = new F102(v109, v100);
v110.e = v110;
("Hyo9")[1];
const t138 = "at";
t138[1] = "at";
const v116 = ([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap?.constructor;
try { v116("Hyo9"); } catch (e) {}
[-4.202468609045087];
const v119 = [0.8434386161503777];
try { v119.findLastIndex(v119); } catch (e) {}
const t146 = "4i";
t146[1] = "4i";
const v122 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f123(a124, a125, a126, a127) {
    function f128() {
        let v130 = Float64Array;
        v130 = a125;
        const v131 = v122.length;
        const v132 = v131 >>> v131;
        v132 / v132;
        const o134 = {
        };
        const v135 = [];
        function f136(a137, a138) {
            [] >= Uint16Array;
            return a138;
        }
        v135.constructor = f136;
        v135["concat"]();
        try {
            139837843 in "deleteProperty";
        } catch(e149) {
        }
        new Uint8Array(105);
        let v151 = -268435456;
        v151--;
        const o153 = {
            "e": -4294967295,
            "e": v151,
        };
    }
    const v154 = f128();
    %OptimizeFunctionOnNextCall(f128);
    return v154;
}
f123();
f123();
const t181 = "RpXR";
t181[1] = "RpXR";
("c")?.toLocaleUpperCase;
class C161 {
    constructor(a163) {
        ("valueOf").localeCompare(a163, "valueOf");
    }
}
function f165(a166) {
    const v169 = new Uint8Array(257);
    return v169;
}
C161[Symbol.toPrimitive] = f165;
const v172 = new C161();
const t197 = v172.constructor;
new t197(C161, -3.0, v95, F97);
