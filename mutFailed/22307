class C2 {
}
new Date();
([]).some();
-2147483648 ^ 8.868704382732872e+307;
let v11 = 3375;
v11++;
new BigUint64Array(v11);
class C19 extends Date {
}
new C19();
class C21 {
    toString(a23, a24, a25, a26) {
        const o35 = {
            [-4294967297n](a29, a30, a31, a32) {
                eval(a32);
            },
        };
        eval();
    }
}
function f42(a43, a44, a45) {
    const o56 = {
        m(a47, a48) {
            a48[a48] ^= a48;
            const v49 = "values" == a47;
            try { new a48(a47, a47, v49, v49); } catch (e) {}
            a47["matchAll"](a48);
            return "h";
        },
        ...a43,
        "c": "values",
        "type": "undefined",
        "type": "zvFjU",
        valueOf(a54, a55) {
            return a55;
        },
    };
    return o56;
}
f42("undefined", "zvFjU", "-2147483647");
for (let i = 0; i < 25; i++) {
    const o61 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o61);
}
f42("toString", "-2147483647", "values");
f42("-2147483647", "zvFjU", "undefined");
536870912n << 536870912n;
-"zvFjU";
class C68 {
    static #a;
}
function F69() {
    if (!new.target) { throw 'must be called with new'; }
    function f71(a72) {
        Object.defineProperty([58584,15,9007199254740990,2146023485], 65537, { writable: true, value: [46733,-268435456] });
    }
    Object.defineProperty(this, "b", { enumerable: true, set: f71 });
    let v75 = 1073741825;
    try {
        v75++;
        let v79 = -1e-15;
        Math.atan2(v79++, -175950080);
        this.b = v75;
    } catch(e82) {
    }
}
