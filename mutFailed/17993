function f0() {
}
class C7 extends 16n {
    b;
    #o(a9, a10) {
        (255n).search;
    }
    #d;
    #c = 16n;
    1873;
    #toString(a14, a15) {
        f0();
        %PrepareFunctionForOptimization(f0);
        f0();
        f0();
        %OptimizeMaglevOnNextCall("valueOf");
        f0();
        return "valueOf";
    }
    static #b = 255n;
    #g;
}
new C7();
new C7();
new C7();
const v26 = new Array(7);
const v28 = new Map();
const v32 = [[]];
class C34 extends v26 {
}
const v35 = new C34(v32);
const v36 = new C34(v35);
function F37(a39) {
    if (!new.target) { throw 'must be called with new'; }
    a39--;
    a39 ^ a39;
    const v42 = ("Abck").constructor;
    try { new v42(16n); } catch (e) {}
}
function f45(a46, a47, a48, a49) {
    v35["entries"](a48, ...v36, BigUint64Array).next("entries");
    return a49;
}
for (let v53 = 0; v53 < 10; v53++) {
    f45();
}
const v58 = new Float64Array(1, "number", C34, v28);
Reflect.construct(Int8Array, [v58]);
%OptimizeFunctionOnNextCall(f45);
f45(Map, C34, BigUint64Array, BigUint64Array);
