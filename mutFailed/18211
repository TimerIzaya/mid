function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.e = this;
    try {
        this.e = -576954689;
    } catch(e3) {
    }
    try {
        this.b = -576954689;
    } catch(e4) {
    }
}
new F0();
new F0();
const v7 = new F0();
function f11() {
    return v7;
}
const o22 = {
};
o22.h = o22;
const v24 = !o22;
const v25 = 1842642860 % v24;
v25 % v25;
const v27 = new WeakMap();
try { v27.delete(v24); } catch (e) {}
class C31 {
    static {
        try {
        const t0 = "boolean";
        t0(this);
        } catch (e) {}
    }
}
try { new C31(); } catch (e) {}
const v36 = ("isInteger")?.replaceAll;
const v43 = [-2147483647,64098,-9383,1024,129,-5];
[1000,-16,-38597,12,-3399,32508];
const v45 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v47 = new Uint32Array();
const v49 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v50 = [601759695];
const v51 = [1073741824,1073741823,1376142744,1073741825];
function f53(a54, a55, a56, a57) {
    function f59() {
        let v62 = Float64Array;
        v62 = a55;
        b = v50;
        v45.length;
        try {
            v51.forEach(a55);
        } catch(e65) {
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o67 = {
        };
        const o82 = {
            "c": -4294967297n,
            "c": v50,
            valueOf(a70, a71) {
            },
            1073741824: v47,
            "maxByteLength": -268435456,
            "b": -4294967295,
            [-4294967297n](a73, a74, a75, a76) {
                class C78 extends Date {
                    static get c() {
                    }
                }
                eval();
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v49,
            256: a57,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            6: -268435456,
        };
    }
    f59();
    const v85 = new Int8Array();
    const v86 = v85.buffer;
    function f87() {
        function f88(a89) {
            function f90() {
                return 128;
            }
            return v50;
        }
        return f88;
    }
    Object.defineProperty(v86, "constructor", { writable: true, configurable: true, enumerable: true, get: f87 });
    v86.slice(2147483648);
    const v95 = new Int32Array(1024);
    v95[3];
    for (let v97 = 0; v97 < 10; v97++) {
    }
    %OptimizeFunctionOnNextCall(f59);
    let v99;
    try { v99 = v51["find"](..."find", a57, ...v50, ...v51, ...522675525n); } catch (e) {}
    v99 <= a56;
    return arguments;
}
for (let v101 = 0; v101 < 10; v101++) {
    f53();
}
%OptimizeFunctionOnNextCall(f53);
const v103 = f53();
[-50328,-14,3,128,-11,64,-65535];
class C105 {
    [v43] = -1000000.0;
    constructor(a107, a108, a109, a110) {
        %VerifyType(a110);
        super[this];
    }
    g;
    c;
    #toString(a113, a114, a115) {
    }
    1 = 257n;
}
new C105(1073741825n, 1.0, 7.589647165982214);
const v117 = new C105(411585671n, -1000000.0, -1000000.0, 1.0);
new C105(v117, -1000000.0, 1.0);
/(?:a*)+bU\u0034xyz{1,32}/udi;
/vfoo|(bar|baz)|quux/gvds;
/JO/gvy;
class C124 {
    #m(a126, a127) {
        function f128() {
            return a127;
        }
        super[a127] = "f";
        %VerifyType(a127);
        return f128;
    }
    static c;
}
try { C124(); } catch (e) {}
const v130 = new C124();
const v131 = new C124();
v131?.constructor;
const v133 = new C124();
v133.constructor = f11;
v133?.constructor;
class C135 {
    p(a137) {
        this.g ^= this[8];
    }
    static #n(a140, a141, a142, a143) {
    }
    7 = v133;
    #a = v131;
}
const v144 = new C135();
v144[7] = v144;
const v145 = new C135();
v145[7] = v145;
const v147 = [[],"f",v133,381717.6504737276];
[v130];
function F149() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(); } catch (e) {}
}
new F149();
const v153 = new F149();
Object.defineProperty(v153, "e", { writable: true, value: v103 });
function F154(a156, a157) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor = f11;
    const v158 = a157?.__lookupGetter__;
    try { v158(); } catch (e) {}
    try { this.constructor(F154, this); } catch (e) {}
    a156.e = a156;
}
F154.arguments = F154;
new F154(v153);
let v163 = ("Hyo9")[1];
const t183 = "at";
t183[1] = "at";
([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap?.constructor;
const v168 = [-4.202468609045087];
try { v168.every(v147); } catch (e) {}
[0.8434386161503777];
("4i")?.toWellFormed;
const t188 = "4i";
t188[1] = "4i";
const t192 = "RpXR";
t192[3] = "RpXR";
const t194 = "RpXR";
t194[1] = "RpXR";
("c")?.toLocaleUpperCase.length;
class C178 {
    constructor(a180) {
        ("valueOf").localeCompare(a180, "valueOf");
    }
}
function f182() {
    v163--;
    [59406,536870888];
    [2147483647,5,65536,-536870912,-550394077,6,7,-54688];
    return [-1544753744,-6,27630,8,10,4096,2147483649,-52025];
}
Object.defineProperty(C178, "toString", { writable: true, enumerable: true, value: f182 });
const v187 = new C178();
function f188() {
    return f53;
}
Object.defineProperty(v187, "constructor", { get: f188 });
const v189 = v187.constructor;
v189[Symbol.toPrimitive] = f11;
new v189(C178);
try { new v36("998423439", C31); } catch (e) {}
9 >> 9;
try { Uint32Array.from(15n); } catch (e) {}
const v202 = new Uint32Array(2432);
const o203 = {
    ...v202,
};
const v205 = 9007199254740991n * 9007199254740991n;
v205 * v205;
Math.sin(-5345);
function f210() {
    const o215 = {
        [-1000000.0]: 0.0,
        set e(a214) {
        },
    };
    return f210;
}
function f216() {
    function f217(a218, a219) {
        return a218;
    }
    return "at";
}
f210[Symbol.toPrimitive] = f216;
f210.caller = f210;
const v222 = f210();
v222.toString = v222;
const v223 = f210();
v223[Symbol.toPrimitive] = v222;
class C226 {
    static [f210] = v223;
}
try { C226.bind(v222); } catch (e) {}
