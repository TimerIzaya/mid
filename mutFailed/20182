class C3 {
    static toString(a5, a6) {
        a6 &&= this;
        a5[9] **= a5;
        d = -4096;
        try {
            a5.toString = a5;
        } catch(e8) {
        }
        return this;
    }
    e;
    [268435440];
    constructor(a10, a11) {
        a11.sup("search", "search").toLocaleLowerCase();
    }
}
const v14 = new C3();
const v15 = new C3();
const v16 = new C3();
function F17(a19, a20, a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        v14.a = a20;
    } catch(e23) {
    }
    try {
        this.h = v16;
    } catch(e24) {
    }
}
new F17(-4096, v14, v15, v15);
new F17(v16, v15, 268435440, v15);
new F17(v14, v14, v16, v16);
new Int32Array(3743);
new Uint8ClampedArray(3776);
new BigInt64Array(10);
new Uint16Array(127);
new Uint8Array(255);
new BigInt64Array(179);
[];
const v52 = new Int8Array(16);
v52.toSorted();
function f54() {
}
class C55 {
    o(a57, a58) {
        for (const v60 of "bigint") {
        }
        f54();
    }
}
[f54,[f54],C55];
const v68 = new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
v68.copyWithin(1391012384, 2147483649, -1628561190);
const v73 = [10,1091321419,11475,-35321,-49219,-51397,335261656,-1,-65536,-4294967296];
const v76 = new BigInt64Array(205);
const v77 = v76[205];
try {
    v77.toString = v77;
} catch(e78) {
}
const v79 = [-1803975943,57715,-9007199254740992];
[2147483647,13,536870912,-13,-1024,536870887];
const v84 = new Uint8ClampedArray(1000);
v84 ^ 3;
const v88 = +268435440;
v88 + -3.0;
const v92 = ["undefined",8.806760127177498,v79,345168.6487633812,"undefined"];
[1000.0,8.806760127177498,v92,v73,v79];
[v92];
const v98 = (a99, a100, a101) => {
    try { ("function")["toUpperCase"](); } catch (e) {}
    "-268435456" ^ a99;
    class C106 {
        9 = 6;
    }
    return v88;
};
Symbol.unscopables;
class C109 {
}
const o112 = {
};
const v114 = new ArrayBuffer(2, o112);
const v116 = new Int8Array(v114);
[-4096,13,16,6] + v116;
Symbol.iterator;
const v122 = [];
function f123() {
    const o127 = {
        toString() {
            super[this];
        },
        ...v122,
        n() {
            return this;
        },
    };
}
f123();
new Uint16Array(4294967295, 4294967295);
function f134() {
    const o136 = {
        "c": Array,
    };
    const v137 = o136.c;
    -9223372036854775808 & -9223372036854775808;
    class C143 {
        constructor(a145, a146) {
            function f147(a148, a149) {
                return a149[3];
            }
            f147(a146, a145);
            f147("e", "e");
            f147("wNzDt", a145);
        }
    }
    new C143("dotAll");
    const v155 = new v137();
    v155.forEach(Uint32Array);
    for (const v159 of Array(4087, Array, Array)) {
        function f160() {
            return o136;
        }
        v159.toString = f160;
    }
    const v162 = 256 < 256;
    function f163(a164) {
        return v162;
    }
}
const o168 = {
    m() {
        const o167 = {
        };
    },
};
const v170 = new Int32Array();
function F171(a173, a174, a175) {
    if (!new.target) { throw 'must be called with new'; }
    const v176 = this?.constructor;
    try { new v176(Uint16Array, a175, a175); } catch (e) {}
    a173 * a173;
    a175++;
    this.d = a173;
    this.g = Int32Array;
}
new F171(256, v170, 4294967295);
class C182 {
    constructor(a184, a185, a186) {
    }
}
Math.asinh();
new Float32Array(Float32Array, Float32Array);
