const v2 = new Float32Array(129);
const v5 = new Int16Array(2279);
const v8 = new Int16Array(512);
let v9 = Int8Array;
v2.byteOffset;
const v11 = v2.byteLength;
const v12 = v5.length;
let v13;
try { v13 = v8(Int16Array, v9, v11, v12); } catch (e) {}
v9 %= v9;
class C14 extends v9 {
}
const o16 = {
};
const v17 = `
    [495643078,129];
    [6,5,9,18105,2,7422,-27050];
    [-831421817,-59051,-9,-1024,-1024,13,-1010072437,58596901];
`;
eval(v17);
new Proxy(Uint32Array, o16);
[-1073741824,4294967295,-2147483648,1073741825,3,-536870912];
[-30298,10000,-15,2147483648,10,-2147483648,-2,-268435456,10];
[0,34578,4,8];
let v28 = -8;
let v29 = 48510;
let v30 = 1073741823;
class C31 {
    4259938026;
}
let v32 = new C31();
const v33 = new C31();
eval(v13);
%PrepareFunctionForOptimization(eval);
eval(v13);
eval(v13);
%OptimizeMaglevOnNextCall(eval);
eval(v13);
({"a":v29,"b":v32,"c":v28,...v30} = v33);
