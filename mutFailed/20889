new Map();
function f3(a4) {
    const v8 = 1073741824 ** 5;
    Math.clz32(2089625166);
    2089625166 >> v8;
}
("1557813092")[1];
function f16() {
    return "-8";
}
function F20(a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    a22 % a22;
    a23 >>> a23;
    const v26 = this.constructor;
    try { new v26(0.8735699512350641, -3.413527541634011e+307); } catch (e) {}
}
new F20(0.941857606566444, 0.941857606566444);
class C29 {
    static #valueOf(a31, a32) {
        class C33 extends C29 {
            #a;
            f = "-8";
            static #d;
        }
        const v34 = new a31();
        new v34();
        new C33();
        return "-8";
    }
}
const v37 = new C29();
const v38 = v37?.constructor;
try { new v38(); } catch (e) {}
const v40 = new C29();
const v41 = new v40();
try { v41.propertyIsEnumerable("-8"); } catch (e) {}
function F43(a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
    const v47 = this?.constructor;
    try { new v47(v40, Map); } catch (e) {}
}
const v49 = new F43();
const v50 = v49?.constructor;
try { new v50(Map, v49); } catch (e) {}
async function f52(a53, a54, a55, a56) {
    a53.fuck();
    await v49;
    return F43;
}
f52.length;
f52();
