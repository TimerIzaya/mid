const v2 = new BigUint64Array(3023);
new Uint32Array(3967);
const v8 = new Float32Array(6);
class C9 extends Float32Array {
    1073741824 = 3967;
    static #d;
    static #f;
    static #h;
    static #e;
    c = 6;
    static #c = 3967;
    static 3173 = 6;
    constructor(a11, a12, a13) {
        super(v2, a13);
        v8.set(a11, 3967, BigUint64Array, ...this, a11);
        try {
            this.#c %= BigUint64Array;
        } catch(e15) {
        }
    }
}
const v16 = new C9(6, 6, 6);
const v17 = new C9(6, 3967, 3967);
new C9(6, 3023, 6);
const v19 = /LD/vds;
const v20 = /a\s/vims;
const v21 = /SO/uis;
const o25 = {
    "execution": "sync",
    "type": "minor",
};
const v26 = gc(o25);
function f30() {
    let v32;
    try { v32 = v17.reverse(); } catch (e) {}
    v17[v21] = f30;
    const v33 = Infinity & v32;
    function F34(a36, a37, a38) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.e = v2;
        } catch(e39) {
        }
        try {
            this.a = 3967;
        } catch(e40) {
        }
    }
    new F34(v32, v16, v33);
    new F34(v32, v16, 6);
    new F34(v26, v26, 6);
    return v19;
}
[12,65535,536870912,-8,1000,-9223372036854775808,-8,2,13];
[2,30964,-9223372036854775808,8,536870887,61212,-9223372036854775807,10000,-380609068];
[-527931172,-2147483647,1073741823,1913461086,9007199254740991,128,-2008902983,-7];
const v47 = [v19,1000.0,v20];
const v48 = [v19,1000.0];
[v20,v48,v21,1000.0,v48];
for (let v50 = 0; v50 < 22; v50++) {
    const v51 = v20[v50];
    try { new v51(v51); } catch (e) {}
    v47[v21];
    const o57 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o57);
}
