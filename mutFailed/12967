const v2 = new Float32Array(44);
new Float32Array(44);
const o4 = {
};
new Proxy(v2, o4);
let v7 = 2224;
const v9 = new BigUint64Array(v7);
new Int8Array(7);
class C13 extends Int8Array {
    static {
        const v15 = new Int8Array(this, 44);
        Object.defineProperty(v15, 65535, { enumerable: true, value: v9 });
    }
    static 2812;
    static valueOf(a17, a18) {
        super.byteLength;
        return o4;
    }
    [Float32Array];
    static #c = v9;
    constructor(a21, a22, a23, a24) {
        super(a21, a21, a24);
        v7 &&= a22;
    }
    static g = BigUint64Array;
}
new C13(v7, 44, 7, 7);
new C13(44, 44, 44, 7);
new C13(v7, v7, 44, v7);
for (let v28 = 0; v28 < 5; v28++) {
    for (let i31 = 0, i32 = 10; i31 < i32; i31++) {
    }
    let v39 = 0;
    do {
        v39++;
    } while (v39 < 7)
}
