const v0 = [5.0,-1.4388705511117312e+308,5.692403862554878,1e-15,4.911468317543747,0.1656282239460658,0.05621754638961729,1000000000000.0,-1000000000.0];
const v1 = [-0.0,1.2182486829517826e+308,1.0956920444320224e+308,-8.219733660553528,2.2250738585072014e-308,-1000.0,-1000.0];
const v2 = [2.0,1000.0];
class C3 {
    f = v1;
    static {
        %VerifyType(v0);
        try {
            const v5 = [v2,v1,this,v0];
            this.fuck(v5, v5, this);
        } catch(e7) {
        }
    }
    [v2];
    e = v0;
    static [v1];
    6 = v0;
}
const v8 = new C3();
const v9 = new C3();
const v10 = new C3();
function f11(a12, a13, a14, a15) {
    const o42 = {
        "d": v9,
        toString(a17, a18, a19) {
            try { this.toString(); } catch (e) {}
            f11[a13] = a14;
        },
        [v10]: v9,
        toString(a22, a23, a24, a25) {
            const v26 = a25?.[6];
            function F27(a29) {
                if (!new.target) { throw 'must be called with new'; }
            }
            const v30 = new F27();
            function f31(a32, a33, a34) {
                for (let i = 0; i < 25; i++) {
                    try {
                        a33.toString = f31;
                    } catch(e35) {
                        for (let i37 = 4294967295; a34;) {
                        }
                    }
                }
                f31(a34, v30);
                return v30;
            }
            a22 ** v26;
            return v2;
        },
        "f": v9,
        [-1]: C3,
        "e": a15,
        "d": a12,
        ...a15,
        "a": a12,
        __proto__: a15,
    };
    const v44 = 0 <= 0;
    0 ^ v44;
    v44.atan(1653620084);
    Math.log();
    const v52 = new Uint32Array(8);
    v52.lastIndexOf(8);
    return o42;
}
f11(v8, v1, v9, v2);
f11(v10, v1, v9, v0);
f11(v9, v0, v9, v1);
function F61() {
    if (!new.target) { throw 'must be called with new'; }
}
const v63 = new F61();
const v64 = [F61,F61,F61];
function f65(a66) {
    try {
        F61.some();
    } catch(e68) {
        e68.stack;
    }
    return a66;
}
v64.toString = f65;
const o71 = {
    __proto__: v64,
    "e": v63,
    get a() {
        return this;
    },
};
o71.toString(F61, o71);
