/[f[\xe2\x81\xa3]]/umy;
/78a??/gimsy;
/\x60eS*/gvdmy;
-1000 ** 0.544190430081408;
const v13 = new Uint16Array(96);
new Float64Array(v13);
new Date();
/(?:a+)*/vi;
const v20 = ("Vre").toLocaleUpperCase;
try { v20(v20, -4294967297n, 1000); } catch (e) {}
9007199254740991n * 9007199254740991n;
/\1\2(a(?:\1(b\1\2))\2)\12uLa?/vdms;
/[xyz][^123]/dis;
const v27 = [727957804,7,49072,-63418,-4,-52120,127,1273312700,-128];
function f28() {
    return v27;
}
class C29 extends f28 {
}
const v30 = new C29();
v30.concat;
new BigUint64Array(257);
new Uint32Array(30);
new Int16Array(2768);
for (let v43 = 0; v43 < 5; v43++) {
    for (let v44 = 0; v44 < 25; v44++) {
    }
    const o46 = {
        "f": -1.883023285666516,
    };
    function f47() {
        const v48 = [1000000.0,0.218433446981681,-5.0,-919787.2036172998,872389.6270716691];
        const v49 = v48.pop;
        class C50 {
            constructor(a52) {
                for (let v53 = 0; v53 < 32; v53++) {
                    v53 === v53;
                    for (let v55 = 0; v55 < 50; v55++) {
                    }
                    new Int8Array(520);
                    for (let v59 = 0; v59 < 5; v59++) {
                    }
                    0 || Int8Array;
                    Math.tanh();
                    function f64() {
                        return this;
                    }
                }
            }
        }
        new C50();
        let v66;
        try { v66 = v49(v48); } catch (e) {}
        return v66;
    }
    f47();
    %OptimizeFunctionOnNextCall(f47);
    for (const v71 of Array(19793)) {
    }
}
