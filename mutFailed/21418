class C3 {
    static 1521 = -9007199254740992;
    constructor(a5) {
        Object.defineProperty(this, "length", { enumerable: true, value: this });
        const v6 = this?.__defineGetter__;
        v6.name = v6;
        try { new v6(C3, -14); } catch (e) {}
        a5 >> a5;
        const v9 = a5 - -9007199254740992;
        v9 != v9;
        a5 = -9007199254740992;
    }
    static set d(a12) {
        try {
            a12.g = a12;
        } catch(e13) {
        }
        let v14;
        try { v14 = C3.startsWith(a12, 5, C3, 5, -9007199254740992); } catch (e) {}
        v14[C3] = this;
        ("m").normalize("NFKD");
    }
    static #e = 5;
}
const v18 = new C3(5);
v18.length = v18;
const v19 = new C3(-14);
v19.length = v19;
const v20 = new C3(5);
const v21 = [4294967297];
[1];
const v23 = [-13769,10000,-606844365,-603089473,-5,-4294967296,-1073741824,536870887,1];
try { v23.includes(-14); } catch (e) {}
v23[2] = v23;
const v25 = [-2147483647,13,41957,5,7,268435439];
v25[4] = v25;
([-128,2147483647,-268435456])[2];
const v28 = [60644,24767,-7,-4096,-20058,128];
try { v28.reduce(v21); } catch (e) {}
function f30(a31, a32) {
    const o35 = {
        set b(a34) {
        },
    };
    return o35;
}
f30.caller = f30;
const v36 = f30();
const v39 = -v20;
const v40 = v20 / -5;
let v41 = Math.min(-5);
v41--;
v20 >> v39;
v39 || -v40;
for (const v46 in v36) {
    try { v46.toWellFormed(); } catch (e) {}
    Object.defineProperty(v36, v46, { set: f30 });
}
