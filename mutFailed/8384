class C3 {
    static [-898.0223305891591];
    get h() {
        let v5;
        try {
        const t0 = -898.0223305891591;
        v5 = t0(this, this, ...this, 8.297932774817301, 8.297932774817301, this);
        } catch (e) {}
        super.f >>>= v5;
        8.297932774817301 << v5;
        return v5;
    }
    static {
        try { this.call(this); } catch (e) {}
        0 + 0;
        try { Int8Array.from(1000); } catch (e) {}
        new Int8Array(0);
        let v14 = 15;
        v14 + v14;
        try {
            C3.c = v14;
        } catch(e16) {
        }
        v14 &&= v14;
        BigUint64Array.name;
        new BigUint64Array(v14);
        new Uint8Array(3);
    }
}
C3.e = C3;
const v23 = new C3();
function f24(a25, a26) {
    const o27 = {
    };
    return o27;
}
v23[Symbol.toPrimitive] = f24;
const v32 = [[v23],1000,C3,[1000],1000];
v32[2] = v32;
const v33 = new C3();
delete v33[229];
const v35 = new C3();
function f36(a37) {
    const v38 = [-991034.5596759731,179.71649176762253,115582.55190338776,-1000000.0];
    async function f40(a41, a42) {
        'use strict';
        a42[9] = v38;
        return -21133.120743932668;
    }
    return f24;
}
v35.toString = f36;
const v43 = new C3();
const v44 = v43.h;
class C45 {
    [v35];
    static [v23];
    static set f(a47) {
        let v51 = -3.0;
        const v52 = this || v51;
        +-9007199254740990;
        Math.log1p(v52);
        ++v51;
    }
    5;
    1073741824;
}
try { new C45(); } catch (e) {}
new C45();
const v58 = new C45();
v58[1073741824] = v58;
v58[1073741824] = v58;
const v59 = new C45();
v59[1073741824] = v59;
const v60 = [0,-15,268435441,38359,-2147483647];
const v61 = v60?.__defineSetter__;
v61.name;
try { new v61(8.297932774817301, v43); } catch (e) {}
[255,10000];
const v65 = [16,26858,1785030043,16,281593528,6217];
try { v65.findIndex(v65); } catch (e) {}
let v67 = "jER";
const v68 = [17452,4294967295,64,-8];
v68[4] = v44;
-(-1.6798118066934893e+307);
-1.6798118066934893e+307 & -1.6798118066934893e+307;
function f72() {
    return v68;
}
v68[9] = v60;
try {
    const v73 = new C45();
    v73[1073741824] = v73;
} catch(e74) {
}
[v67] = v68;
try { new v67(...v68, -1.6798118066934893e+307); } catch (e) {}
