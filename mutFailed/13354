const v0 = [6,598919526];
function f1(a2) {
    function f3() {
        return f3;
    }
    [f3,f3];
    return v0;
}
Object.defineProperty(v0, Symbol.toPrimitive, { writable: true, enumerable: true, value: f1 });
[4,268435440,1024,536870887,206968590];
[1591422881,1073741823];
[-4294967297,-7,129,-65536,7,1881327486,1872629153];
const v10 = [14,-41371,834107914,65537,5];
try { v10.pop(); } catch (e) {}
[1205140735];
[24201,-15273,-10,27488,9223372036854775807,585623649,-9223372036854775807];
const v14 = [-572708341,4508];
[128,1024,7,34840,1738643910];
const v19 = -12n <= -12n;
try { ("split").toLocaleLowerCase(); } catch (e) {}
const v24 = new Int32Array(1024);
for (const v25 of v24) {
    const o28 = {
        "maxByteLength": 1293466293,
    };
    new SharedArrayBuffer(1796, o28);
}
const t27 = "m";
t27[0] = "m";
let v33 = -642098.7657815786;
v33++;
const v38 = v0 | 1.1660447917673544e+308;
v38 >>> v38;
const v47 = new Float64Array(1000);
v47.includes(5);
try { ("buffer").codePointAt(0.6822080711934364); } catch (e) {}
function F51(a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
}
const v55 = new F51();
const v56 = new F51();
v19 >= v19;
const v60 = new Float32Array(9);
new Int8Array(v60);
const v63 = v56?.__defineGetter__;
try { new v63(v10, v10); } catch (e) {}
function f67(a68, a69, a70, a71) {
    function f72() {
        const o76 = {
            valueOf(a74, a75) {
                return f67;
            },
        };
        o76.valueOf();
        return 1024;
    }
    f72();
    f72();
    return f67;
}
const v80 = new Uint32Array();
let v81 = 93;
v81--;
const v84 = v80[0.29489550717955537];
[v56,v55,v84];
let {"d":v87,"length":v88,...v89} = "setTime";
v60.buffer;
const o91 = {
};
Object.defineProperty(o91, "c", { enumerable: true, value: v84 });
try {
    o91.c = 0.29489550717955537;
} catch(e92) {
}
try {
    const o93 = {
    };
    o93.c = 0.29489550717955537;
    o93.d = v84;
} catch(e94) {
}
try {
    const o95 = {
    };
    o95.c = o95;
    o95.c = 0.29489550717955537;
    o95.d = v84;
    o95.a = F51;
} catch(e96) {
}
try {
    const o97 = {
    };
    o97.c = 0.29489550717955537;
    o97.d = v84;
    o97.a = v14;
} catch(e98) {
}
