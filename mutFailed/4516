let v3 = [64340];
const v4 = [-5104,v3,v3,64340];
try {
    v4.__proto__ = v3;
} catch(e5) {
}
const v6 = [v3 <<= v4,64340,-17761,64340,64340];
function f8(a9) {
    const o15 = {
        __proto__: -5104,
        "c": -5104,
        "e": 536870889,
        213: a9,
        ...a9,
        "g": -5104,
        p(a11, a12) {
            try {
                this.fuck(536870889, a9);
            } catch(e14) {
            }
            return this;
        },
    };
    return o15;
}
f8(536870889);
%PrepareFunctionForOptimization(f8);
function f17(a18, a19, a20, a21) {
    a20 - a20;
    const o31 = {
        "e": -17761,
        0: v4,
        "f": a19,
        valueOf(a24, a25, a26, a27) {
            for (let v28 = 0; v28 < 32; v28++) {
                this["p" + v28] = v28;
            }
            return a21;
        },
    };
    return o31;
}
f17(v6, 64340, -17761, 64340);
class C33 {
    static #o(a35, a36) {
    }
}
const v37 = new C33();
v37.constructor;
const v39 = f17(v3, -5104, -17761, -17761);
64340 || v39;
const v43 = WeakMap();
"m" > v43 ? "m" : v43;
([-1073741824,65537,-632553447])[1];
const v48 = [2147483649,257,536870889,65537,257];
try { v48.toLocaleString(); } catch (e) {}
const v50 = [6,-4,10000,1000,-2,-3,720715699,-46114];
try { v50.pop(); } catch (e) {}
function f54() {
    return f54;
}
class C55 extends f54 {
    constructor() {
        super();
        Math.acosh();
    }
    [f54] = f54;
}
const v59 = new C55();
const v60 = v59?.constructor;
try { v60(); } catch (e) {}
new Int32Array(87);
function f66() {
    return f8;
}
f17(v6, -5104, 64340, v39);
function F68(a70, a71, a72) {
    if (!new.target) { throw 'must be called with new'; }
    const v73 = this.constructor;
    try { v73(this, v39, v73); } catch (e) {}
    try { new v73(); } catch (e) {}
    Math.exp([-671138503,-536870912,-9007199254740991,-9007199254740992,-268435456,128,2023752111,-970019998,8839,6] | [1073741824,-46456,536870888]);
}
F68.arguments = F68;
const v81 = new F68();
try { v81.constructor(v81, v81, v81); } catch (e) {}
class C83 extends F68 {
}
try { C83(); } catch (e) {}
const v85 = new C83();
Symbol.toPrimitive;
class C88 {
}
class C90 {
    [-1] = -1.6777590795239637e+308;
}
try { v85.hasOwnProperty(v81); } catch (e) {}
