let v1 = 4294967297;
class C3 {
    constructor(a5, a6) {
        a5 >>> (v1 += a5);
    }
    g = -268435456;
    static #c = -21044;
    static #n(a9) {
        try {
            this.fuck(undefined, 5.849972609219787);
        } catch(e13) {
        }
        return v1;
    }
}
new C3(-21044, v1);
const v15 = new C3(v1, v1);
const v16 = new C3(-21044, v1);
[-2147483648,-63112,127,-4294967295,8,1073741824,0,-65535,1073741823];
const v18 = [1073741823,-152654944];
const v19 = [508763855,-1312598252,49944,-56061,-1411062232];
[-268435456,-21044,v16];
[v16,v18,[v15,v19]];
[-1.1730024841443846e+308,0.19713058020439866,3.687273144604667,548.6637550244868,7.540044801685763,-954.0830887532277];
[1.0];
[-1.0,-4.0,-6.336882492188922e+307];
function f26() {
    const o30 = {
        __proto__: "S3KT",
        [-5900]: "S3KT",
        "f": 760977347,
        4147259639: 760977347,
        659269453: "S3KT",
        "g": 760977347,
        "h": -5900,
        [760977347]: "S3KT",
        "e": -5900,
        "c": "S3KT",
    };
    return o30;
}
function f31() {
    return f31;
}
const o33 = {
    [f31]() {
    },
};
const v34 = f26();
const v35 = f26();
const v36 = f26();
function F37(a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e41) {
    }
}
const v42 = new F37(v35, v35);
new F37(v35, v34);
new F37(v36, v34);
let v50 = Int16Array;
let v53 = -1024;
function F54(a56, a57, a58, a59) {
    if (!new.target) { throw 'must be called with new'; }
}
const v60 = new F54(v53, F54, F54, F54);
[-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function F62(a64, a65) {
    if (!new.target) { throw 'must be called with new'; }
}
new F62(F62);
class C67 {
}
[601759695];
function f70() {
    class C71 {
        set d(a73) {
        }
    }
    class C74 extends C71 {
    }
}
for (let v76 = 0; v76 < 5; v76++) {
    function f77() {
        let v80 = Float64Array;
        const v82 = Array();
        function f83() {
        }
        function f84(a85) {
        }
        Object.defineProperty(v76, 0, { configurable: true, enumerable: true, get: f83, set: f84 });
        const v86 = v82.unshift(v53);
        function F87(a89, a90) {
            if (!new.target) { throw 'must be called with new'; }
        }
        v80 = F54;
        const v91 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        class C93 {
        }
        const v94 = new C93();
        v94.__proto__ = F62;
        const v95 = ["Vre","Vre","Vre","Vre"];
        class C96 {
        }
        function* f97(a98, a99) {
            yield* v95;
        }
        const v100 = Symbol.toPrimitive;
        Symbol.match;
        const o108 = {
            toString(a104, a105) {
                const v106 = v76 && v80;
                v50 *= v100;
                v106 <= v91;
            },
        };
        const o131 = {
            [522675525n](a111, a112) {
                new Int32Array(Int32Array);
            },
            valueOf(a118, a119) {
                return this;
            },
            [-4294967297n](a121, a122, a123, a124) {
            },
            "e": -268435456,
            "maxByteLength": -4294967295,
            ...v60,
            [v100]() {
            },
            "type": C67,
            ...v42,
            ..."Vre",
            get h() {
            },
            4: "Vre",
            toString(a128, a129, a130) {
            },
            6: -268435456,
        };
        new Float32Array();
        v53 %= -268435456;
        new Float64Array(v86, v86);
        new Uint16Array(Symbol, -268435456, -268435456);
    }
    f77();
    %OptimizeFunctionOnNextCall(f77);
    function f140() {
    }
}
