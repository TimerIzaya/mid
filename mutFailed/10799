const v1 = new Map();
function f2() {
    return Map;
}
class C3 extends f2 {
    static #b = f2;
    #d;
    [f2];
    static #h;
    toString(a5, a6) {
        super.e /= a5;
        delete v1?.size;
        const o8 = {
        };
        try {
            o8.c = a5;
        } catch(e9) {
        }
        try {
            const o10 = {
            };
            o10.c = a5;
            o10.a = Map;
            function F12(a14, a15, a16, a17) {
                if (!new.target) { throw 'must be called with new'; }
                const v18 = this.constructor;
                try { new v18(); } catch (e) {}
                typeof Float32Array;
            }
            new F12(F12, 536870889, F12, 536870889);
            new F12();
        } catch(e24) {
        }
        try {
            const o25 = {
            };
            o25.c = a5;
            o25.a = Map;
            o25.f = this;
        } catch(e26) {
        }
        try {
            const o27 = {
            };
            o27.c = a5;
            o27.a = Map;
            o27.h = this;
        } catch(e28) {
        }
        return this;
    }
}
new C3();
const v30 = new C3();
const v31 = new C3();
function f32(a33, a34) {
    const o43 = {
        1475601886: f2,
        "g": v1,
        "f": a34,
        get c() {
            const o38 = {
                "maxByteLength": 536870888,
            };
            const v40 = new ArrayBuffer(2360, o38);
            const v42 = new Uint8Array(v40);
            return v42;
        },
    };
    return o43;
}
const v44 = f32(C3, v30);
f32(C3, v31);
f32(C3, v44);
/R(?:a*)+/gvdisy;
/\x01/us;
/\xed\xb0\x80/gvis;
for (let v50 = 0; v50 < 5; v50++) {
    const o54 = {
        set b(a52) {
            this.b;
        },
    };
    o54.b = o54;
    o54.b = o54;
}
