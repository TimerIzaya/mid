function F4(a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -9007199254740991n;
    } catch(e8) {
    }
    try {
        this.e = a7;
    } catch(e9) {
    }
    try {
        this.g = 1751097824n;
    } catch(e10) {
    }
}
const v11 = new F4(1751097824n, 7n);
new F4(7n, 7n);
const v13 = new F4(v11, 1751097824n);
const t18 = 7n;
const v15 = new t18();
const v16 = [-Infinity,-9.561006595467143,-3.0,-3.799690775513274e+307,3.0,0.4266791832312069,-1e-15,-696.548157201736,0.982541855096097,-1.0];
[-3.0,965.67851583783,2.0,0.03734702067160245,762938.8065455109,524721.709622541];
const v18 = [1000000000000.0,-1000.0,0.587088746147587,1000000.0,5.3098649392109,-1000.0,0.22723133964417863,0.5575123309219886];
const v19 = [F4,v18,null];
[v18,-9007199254740991n,v19];
[v15];
class C23 {
    static {
        for (let v25 = 0; v25 < 25; v25++) {
            Math.cosh(Math);
            for (let v28 = 0; v28 < 5; v28++) {
                v16.unshift(3);
            }
            function f31() {
                return C23;
            }
            const v32 = [601759695];
            const v33 = [1073741824,1073741823,1376142744,1073741825];
            function f35() {
                return f35;
            }
            const v36 = /[r(?<!)]/uim;
            const o42 = {
                set a(a38) {
                    let v37 = this;
                    [-910865.3408997525,626.3279856071824,-234.8554751364569];
                    [-3.0,5.0,0.030403066145865854,-2.2250738585072014e-308,-1e-15];
                    const t45 = [0.0,-2.0,-4.4315495470280674e+307,2.220446049250313e-16,1.176246364365651e+307,-6.320855532259336e+307,2.0];
                    t45[6] = v36;
                    v37 = v13;
                },
                "e": v36,
                "d": this,
                ...C23,
                "a": C23,
            };
            function f43(a44, a45, a46, a47) {
                function f49() {
                    class C50 {
                    }
                    function f51() {
                        return C50;
                    }
                    return a44;
                }
                const v52 = a47();
                const v54 = new Int8Array();
                arguments.constructor;
                const v58 = [1000000.0,4.0,877990.5497759602,-506457.5906391711,1.5877136832764825e+308,-5.0,0.37988723353754195];
                class C60 {
                    #valueOf(a62, a63) {
                    }
                    static #a = v19;
                    #g = 536870887n;
                    static #f = v58;
                    #b;
                }
                const v65 = new Uint32Array(4);
                const v66 = [v65];
                const v69 = BigUint64Array * 536870887;
                v69 ** v69;
                function f71(a72, a73) {
                    return v52;
                }
                f71();
                const v75 = v54.buffer;
                Object.defineProperty(f71, "constructor", { writable: true, configurable: true, value: Date });
                new Int8Array();
                v75.slice(2147483648);
                %OptimizeFunctionOnNextCall(f49);
                let v80;
                try { v80 = v33["find"](..."find", a47, ...v32, ...v33, ...522675525n); } catch (e) {}
                const v82 = Symbol("find");
                const v84 = new BigUint64Array();
                const o92 = {
                    __proto__: v66,
                    [v36](a86) {
                    },
                    toString(a88, a89, a90) {
                        a44[v82] = BigUint64Array;
                        return 255n;
                    },
                    ...v84,
                };
                v80 <= a46;
                return arguments;
            }
            for (let v94 = 0; v94 < 5; v94++) {
                f43(this, v94, v94, v94, f31);
            }
        }
    }
}
