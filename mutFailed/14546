new Uint8Array(1000);
const v4 = 512 % 512;
v4 === v4;
const v7 = new Uint16Array(512);
v7[231] = v7;
try { Uint8ClampedArray.bind(Uint8Array); } catch (e) {}
new Uint8Array(57);
let v13;
try { v13 = Date.parse(Uint8Array); } catch (e) {}
v13 - v13;
new Date();
512 | 512;
Uint8ClampedArray.name;
let v20;
try { v20 = new Uint8ClampedArray(512, 512, v7); } catch (e) {}
v20.BYTES_PER_ELEMENT;
new Uint8ClampedArray(512);
new Uint32Array(1000);
Uint16Array.e = Uint16Array;
new Uint16Array(2761);
let v29 = 4096;
v29--;
let v31 = 5;
v31 * v31;
v31--;
const v34 = [v31,v31];
v34[1] = v34;
v34.join(v31);
const v36 = Uint8ClampedArray.localeCompare(v29);
v36 * v36;
let v38;
try { v38 = v36.constructor(); } catch (e) {}
v38 >>> v38;
~(v38 >>> v38);
const v44 = new Uint8ClampedArray(255);
try { v44.find(v44); } catch (e) {}
Uint16Array[3] = Uint32Array;
