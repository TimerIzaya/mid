const v0 = [];
function f2() {
    return v0;
}
class C3 {
    b = v0;
    static get b() {
        for (let v5 = 0; v5 < 100; v5++) {
            f2();
        }
        return this;
    }
    [-2];
    static set e(a8) {
        const v9 = delete v0[a8];
        v0.length ** this;
        super.d;
        f2 === v9;
    }
    [v0] = undefined;
    static #b;
    static #a;
}
new C3();
new C3();
new C3();
function f17() {
    return C3;
}
new Float32Array(64);
new Uint16Array(109);
new Float32Array(1576);
const v28 = /(x)(x)(x)\1/uis;
function f29(a30, a31, a32, a33) {
    function f34(a35, a36) {
        function F37() {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v39 = new F37();
        class C40 extends F37 {
            [v39];
        }
        return F37;
    }
    a33[Symbol.toPrimitive] = f34;
    const o49 = {
        [f17]: a31,
        "a": a33,
        "e": a32,
        ...C3,
        "d": 64,
        4294967295: a30,
        [v28](a44, a45, a46, a47) {
            super.test();
        },
    };
    return a31;
}
%PrepareFunctionForOptimization(2);
%OptimizeFunctionOnNextCall(f29);
f29(f29, 2, f29, v28);
