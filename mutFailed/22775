const v2 = new Array(3);
let v5 = 128;
v5--;
-1268 + -1268;
function f11(a12, a13) {
    try { a13.findLast(a13); } catch (e) {}
    const o24 = {
        set f(a16) {
        },
        [1073741823](a21, a22) {
            Array.prototype **= -9007199254740992;
            try {
                this.f = a22;
            } catch(e23) {
            }
            return a13;
        },
    };
    return o24;
}
f11.g = v2;
f11.g = f11;
f11(3, v2)[1073741823];
const v27 = f11(4294967296, -1268);
const v28 = f11(-1268, 536870887);
v28[1073741823] = v28;
function f30() {
    function f31(a32) {
        v2[a32] = a32;
        v27 instanceof f11;
        return 4294967296;
    }
    return f31;
}
function f34(a35) {
    const o38 = {
        "maxByteLength": 255,
    };
    const v40 = new ArrayBuffer(12, o38);
    new BigInt64Array(v40);
}
Object.defineProperty(Uint16Array, "toString", { writable: true, configurable: true, enumerable: true, get: f30, set: f34 });
function f44(a45, a46, a47, a48) {
    a45.c = a47;
    a45.c = a45;
    a45.prototype = a45;
    try { a45(a48); } catch (e) {}
    a46 & Uint16Array;
    const o54 = {
        n(a52, a53) {
            return a48;
        },
    };
    return Uint8Array;
}
for (let v55 = 0; v55 < 500; v55++) {
    f44(Uint8Array);
}
