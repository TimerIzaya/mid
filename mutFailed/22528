[64,4096,-29714,-9223372036854775807];
const v1 = [-31635,-65536,15,129,4294967297,8];
const v2 = [9007199254740990,256,4294967295];
const v5 = new Float32Array(1833);
const v8 = [];
v8.g = v8;
const v9 = [v8,v8,v8,v8];
function f10() {
    const o13 = {
        m(a12) {
            return f10;
        },
    };
    o13.m();
    return o13;
}
Object.defineProperty(v9, 268435441, { writable: true, configurable: true, get: f10, set: f10 });
const v17 = delete v5?.byteOffset;
let v18;
try { v18 = v17.toSorted(v1, Float32Array, 1833, Int16Array, 129); } catch (e) {}
v9[v1];
function F20(a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v18;
    } catch(e25) {
    }
    try {
        this.g = a23;
    } catch(e26) {
    }
    try {
        this.a = v17;
    } catch(e27) {
    }
}
const v28 = new F20(1000000.0, v8, v2);
const v29 = new F20(v2, v28, v9);
new F20(1000000.0, Float32Array, Int16Array);
const v34 = ("boolean").repeat(1000000.0);
let v35;
try { v35 = v34.trimEnd(); } catch (e) {}
function f36(a37, a38) {
    const o41 = {
        set d(a40) {
        },
        "a": a37,
    };
    const v44 = new Int8Array(268435456);
    return v44;
}
try { f36(15135); } catch (e) {}
f36(925.1427495594241);
f10();
%OptimizeFunctionOnNextCall(f10);
new Int16Array(129);
const o53 = {
    toString(a51, a52) {
        Object.defineProperty("-884841883", a51, { configurable: true, value: a52 });
        return "-884841883";
    },
};
v29[536870887] = v34;
const v56 = Symbol.split;
v9[v56] = v56;
for (let v57 = 0; v57 < 32; v57++) {
    o53["p" + v57] = v57;
}
try { ("").lastIndexOf(o53); } catch (e) {}
const v63 = new Int16Array(128);
new BigInt64Array(94);
new Uint16Array(11);
new Int16Array(129);
class C76 {
}
const v77 = new C76();
const v78 = v77.constructor;
for (let i80 = 0, i81 = v78; i80 < i81;) {
}
class C88 extends Float64Array {
    static {
        eval(C88);
    }
}
const v93 = -Infinity;
v63 < v28;
try { v35["getUTCDay"](); } catch (e) {}
Math.pow(-1073741824, v93);
new Int8Array(964446029);
