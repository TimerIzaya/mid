const v1 = new WeakMap();
class C5 {
    constructor(a7) {
        try {
            a7.toString = a7;
        } catch(e8) {
        }
    }
    g = 4;
    static g = 4;
    static #o(a10, a11) {
        [-935.1704411833082,32.97628044877183,965.5657376164079,0.5380151291168286];
        [-110.8595204377907,1.7976931348623157e+308,5.0];
        [0.7105406073166725,0.4665986369349966,-2.2250738585072014e-308];
        const v16 = a10 <= v1 ? a10 : v1;
        let v17;
        try { v17 = a11(a10, a10, a10, v16); } catch (e) {}
        return v17;
    }
}
const v18 = new C5(v1);
const v19 = new C5(v18);
const v20 = new C5(v19);
class C21 extends WeakMap {
    static n(a23, a24, a25) {
        const v27 = new Set();
        return v27;
    }
    [v19];
    static set d(a29) {
        super.h;
        try {
            v18.g = v19;
        } catch(e31) {
        }
    }
    [WeakMap] = v20;
    static #a;
}
new C21();
new C21();
new C21();
[256];
[-65535,687469369,-15,129,2017079663,1103788761,6,129,-128];
[15];
class C39 {
}
new C39();
class C42 extends Set {
}
const t50 = C42.constructor;
const v44 = t50(C42);
let v45 = 0.3050534209767637;
v45--;
new WeakMap();
const v50 = [BigUint64Array];
v50.pop();
const v53 = Math.__defineSetter__;
try { v53(); } catch (e) {}
Math.sinh();
const o56 = {
    "g": 4,
    __proto__: C42,
    "h": 5,
    ...v20,
    [v53]: v44,
};
if (5) {
    function F57(a59, a60) {
        if (!new.target) { throw 'must be called with new'; }
        const v61 = F57 << this;
        let v63;
        try { v63 = C5["toString"](F57, v61, "toString"); } catch (e) {}
        const o64 = {
        };
        try {
            o64.h = F57;
        } catch(e65) {
        }
        try {
            const o66 = {
            };
            o66.h = F57;
            o66.g = v63;
        } catch(e67) {
        }
        try {
            const o68 = {
            };
            o68.h = F57;
            o68.g = v63;
            o68.b = F57;
        } catch(e69) {
        }
        try {
            const o70 = {
            };
            o70.h = F57;
            o70.g = v63;
            o70.e = "toString";
        } catch(e71) {
        }
    }
    for (let v72 = 0; v72 < 5; v72++) {
        function F73(a75, a76) {
            if (!new.target) { throw 'must be called with new'; }
        }
    }
}
const o77 = {
    ...v50,
};
