const v0 = [NaN,-98609.57759381388,-4.641993530996054,0.009191567304285386,-1.0,-1.7849704746682359e+308,5.0,790.864085395041];
const v1 = [0.13502650550351203,-5.0,-3.0,-2.635152583188867e+306,-8.045130959669662e+307,-3.0,-1000.0];
const v2 = [-1000000000000.0,-2.0];
const v3 = [v0,v0,v0,v0,v2];
v3[1] = v3;
const v4 = [v2,v3,v0,v2,v0];
try { v4.map(v1); } catch (e) {}
const v6 = [v1];
!true;
const v9 = !true;
v9 && v9;
let v11 = -128;
v11 | v11;
class C13 {
}
C13.name = C13;
const v15 = new Uint32Array();
for (let [i19, i20] = (() => {
        0 - 0;
        return [0, 10];
    })();
    (() => {
        i19 << i19;
        i20 + i20;
        const v23 = i19 < i20;
        v15[v23];
        return v23;
    })();
    i20--) {
    i19 * i19;
}
v11 - v11;
try { new Promise(Promise); } catch (e) {}
Promise.reject(Promise);
function f35() {
    [1e-15,1.0,-3.0,1.43935350979979e+308,-0.0];
    const v38 = ([-1000000.0,771279.5641904315,0.0,8.299995604235331,6.625300935335886,-820.4949035918538,-602.5256799896665,0.6342705996691437,Infinity]).toLocaleString();
    let v39;
    try { v39 = v38.search(f35); } catch (e) {}
    return v39;
}
const v41 = [];
const v42 = [v41,v41,v41,v41,v41];
try { v41.reduce(v42); } catch (e) {}
v11++;
class C45 {
}
for (let v47 = 0; v47 < 25; v47++) {
    v47 / v47;
    function f49() {
        return v47;
    }
    const v50 = [601759695];
    try { new Date(v47, Date, v50, v50, Date, v42, v6); } catch (e) {}
    const v53 = new Date();
    const v54 = v53?.setFullYear;
    try { new v54(Date, v47, v53); } catch (e) {}
    function F56() {
        if (!new.target) { throw 'must be called with new'; }
    }
    F56.d = F56;
    class C58 {
    }
    const v59 = [1073741824,1073741823,1376142744,1073741825];
    function f60(a61, a62, a63, a64) {
        a61 << a61;
        a62 / a62;
        a63.length = a63;
        a62 | a62;
        a64.arguments = a64;
        const v68 = f49();
        const v69 = [v68,v68];
        try { new BigUint64Array(a64, a64, v2); } catch (e) {}
        BigUint64Array * 536870887;
        for (let v75 = 0; v75 < 25; v75++) {
        }
        v59.f = v69;
        const v78 = Math.log10(-9007199254740992);
        v78 - v78;
        const t78 = "find";
        t78[3] = "find";
        let v80;
        try { v80 = v59["find"](..."find", a64, ...v50); } catch (e) {}
        let v82;
        try { v82 = ("128").strike(); } catch (e) {}
        v82[19];
        try {
            a63.toString = f60;
            for (let i88 = 0, i89 = 10; i88 + i88, i89 - i89, i88 < i89; i88 << i88, i89--) {
            }
        } catch(e99) {
        }
        return v80;
    }
    for (let v100 = 0; v100 < 10; v100++) {
        f60(v100, v100, v59, f60);
    }
    Object.defineProperty(v4, 2818, { writable: true, enumerable: true, value: v3 });
    let v103 = 1073741823;
    v103 - v103;
    let v105 = 20337;
    v103++;
    ++v105;
    ~v103;
}
