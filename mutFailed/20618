class C3 {
    constructor(a5) {
        try {
            this.__proto__ = this;
        } catch(e6) {
            const v7 = e6?.constructor;
            try { new v7(e6); } catch (e) {}
            e6.e = e6;
            e6.e = e6;
        }
        this[Symbol.replace] = a5;
    }
    static 151;
    static #d;
    [-47182] = -942645270;
}
const v11 = new C3(7);
const v12 = v11?.constructor;
let v13;
try { v13 = new v12(v11); } catch (e) {}
v13.h = v13;
const v14 = new C3(7);
v14.length;
const v16 = v14?.constructor;
v16[151] = v16;
let v17;
try { v17 = new v16(7); } catch (e) {}
const v18 = new C3(-47182);
v18.length;
function f20(a21) {
    const v22 = a21?.constructor;
    try { new v22(a21); } catch (e) {}
    const v24 = v13 != v17;
    v24 && v24;
    v24 ? v13 : v17;
    return v18;
}
try { new f20(v18); } catch (e) {}
Object.defineProperty(v18, "constructor", { writable: true, enumerable: true, value: f20 });
const v28 = v18?.constructor;
class C29 {
}
const v32 = new Int8Array();
Int16Array.apply(128, v32);
v28.length = v28;
try { new v28(v14); } catch (e) {}
class C39 {
    4;
    m(a41, a42) {
        C3 = v18;
        super[a41]?.[1];
        return v18;
    }
    static #h;
}
new C39();
const v50 = new C39();
v50[4] = v50;
v50[4] = v50;
new C39();
function f52(a53, a54) {
    try { a53(-256); } catch (e) {}
    try { a54(a54); } catch (e) {}
    a53.name = a53;
    try { a54(a54); } catch (e) {}
    a54(a53, a53, a54, f52);
}
f52.d = f52;
new Promise(f52);
const v61 = [1000000000000.0,6.579220753226213e+307,2.0,-2.220446049250313e-16,NaN,-1000000.0];
v61.g = v61;
gc.b = Promise;
gc.b = gc;
const v64 = v61["findIndex"](gc);
v64 + v64;
v64 << v64;
