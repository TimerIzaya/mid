const v0 = [0.7857870750956569,0.4004426477105858,0.03529212334661591,-280.5617388046662];
const v1 = [0.1584336038282772];
const v2 = [6.212030946472151,-2.2250738585072014e-308,1.7976931348623157e+308,3.0];
function f3(a4, a5) {
    return Reflect.construct(a5, [v1,v1,v0], a4);
}
v2.valueOf = f3;
const v10 = new Set();
class C11 extends Set {
    f;
    4 = v2;
    static #toString(a13) {
        new Date();
        a13.length -= v1;
        this[39] &= a13;
        return v10;
    }
    constructor(a17, a18) {
        super(a17);
        +v2;
        ArrayBuffer.a = ArrayBuffer;
        const o22 = {
            "maxByteLength": 268435441,
        };
        2 * 2;
        const v25 = new ArrayBuffer(2, o22);
        const v27 = new Int16Array(v25);
        try { v27.reduce(a17); } catch (e) {}
    }
}
const v29 = new C11(v2, v0);
new C11(v0, v0);
const v31 = new C11(v2, v1);
const v32 = [v31];
[v31,v32,v32,v29];
const v34 = [v31,v2];
try { v34.entries(); } catch (e) {}
490961831 | 490961831;
-1000000.0 >>> -1000000.0;
const v45 = ([Infinity,4.380337649859771e+307])["fill"]("undefined", "undefined", "fill");
v45[1] = v45;
class C46 {
}
const v47 = new C46();
const v48 = v47?.constructor;
try { new v48(); } catch (e) {}
4 >> 4;
const v53 = -1000000.0 & v47;
Math.pow(4, v53);
v53 ** 4;
