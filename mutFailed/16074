class C3 {
    static set h(a5) {
        (-11).b;
    }
    #f = -128;
    [2.2250738585072014e-308];
    static p(a8, a9) {
        let v10;
        try { v10 = (2.2250738585072014e-308).m(this, a9, a9, a9, 2.2250738585072014e-308); } catch (e) {}
        [v10];
        [a9,[-11,this],this];
        return -11;
    }
    6;
    static 3054 = -128;
    static 257 = -11;
}
const v14 = new C3();
const v15 = new C3();
new v14();
[-128];
[v15,2.2250738585072014e-308,v14];
[v14];
[-51284,304144039,10000,-2,-4294967296,-2,1073741824,268435439,-1057669861];
[46079,536870889,-9223372036854775808,-5];
[-7,2147483647,-9007199254740992];
[5.0,2.220446049250313e-16,2.0,NaN,-1000000.0,-1.1121261215112305e+308,-73.28050104360489,-2.718461950713344e+307,2.0,Infinity];
[-1e-15,0.9677055038983604,1000.0,1.7976931348623157e+308];
[-1000000000.0,0.3773631533592178,244875.30162284616,1.7976931348623157e+308,0.5997674978120894,-5.0,1000000000000.0,-247.00821761912414];
const v26 = [-10,54545,2005744164,-1038396756,-1914419652,268435456,-13,129,28425,1000];
const v28 = new BigUint64Array();
function f29(a30, a31) {
    a31[v26] = a31;
    return a30;
}
Object.defineProperty(v28, Symbol.toPrimitive, { value: f29 });
try { Math.cos(v28); } catch (e) {}
