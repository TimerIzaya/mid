const v0 = [4294967295,-11,1000,65536,2147483647];
let v1 = [0,64,-14,127,3,-1073741824,536870888,-11,8,-5];
const v2 = [129,-174844873,10000,1,-9007199254740990,-9];
function f3() {
    return v0;
}
function f4(a5, a6) {
    const o15 = {
        [a6]: a6,
        valueOf(a8, a9, a10) {
            const v12 = [];
            Reflect.apply(v1.isConcatSpreadable, a5, v12);
            return f3;
        },
        "h": a6,
        "d": a6,
        "c": f3,
        "a": f3,
    };
    return o15;
}
const v16 = f4(v2, v2);
const v17 = f4(v1, v1);
const v18 = f4(v1, v0);
function f19(a20, a21) {
    const o35 = {
        [a21]: v2,
        [a20](a23, a24, a25) {
            super.b ^= v1 = this.e;
            a25.d |= a25;
            new f19(a24, v18);
            const v28 = super[v1];
            a21 | 736443412;
            -(-v28);
            return v28;
        },
        "c": a20,
    };
    return o35;
}
new f3(v1, v17, f4, v16);
let v38 = 10;
v1 | v1;
-(v1 | v17) * v38;
v38++;
Math.sin(f19);
f19(v16, v16);
f19(f19(v17, v1), v16);
URIError(4, 9);
