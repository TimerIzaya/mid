class C3 {
    static p(a5) {
        const t2 = super.g;
        delete t2?.[205];
        typeof 1024n === "boolean";
        return 9007199254740991n;
    }
    static 1166;
    e;
    static g;
}
try { C3.toString(); } catch (e) {}
const v15 = new C3();
v15[Symbol.isConcatSpreadable] = v15;
const v18 = new C3();
v18.constructor = Symbol;
const v19 = new C3();
v19.constructor = Symbol;
function F20(a22, a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    a23.constructor = Symbol;
    a25[Symbol.isConcatSpreadable] = a23;
    const v28 = this?.propertyIsEnumerable;
    try { new v28(F20); } catch (e) {}
    const v30 = a23?.constructor;
    v30.toString = Symbol;
    try { new v30(); } catch (e) {}
    a25.e;
    try {
        this.f = a23;
    } catch(e33) {
    }
    try {
        this.c = C3;
    } catch(e34) {
    }
}
const v35 = new F20(-18594, v19, v18, v18);
v35.toString = Symbol;
const v36 = new F20(v35, v18, v19, v15);
v36.e = v15;
v36.e = v36;
const v37 = new F20(v18, v18, v18, v18);
v37.f;
function f39(a40, a41, a42, a43) {
    function f44() {
        a42?.[a41];
        new Uint8Array();
        return a43;
    }
    a40.toString = f44;
    const v48 = a40?.c;
    Object.defineProperty(v48, "toString", { writable: true, configurable: true, value: f39 });
    try { new v48(); } catch (e) {}
    a42.h = a42;
    const o65 = {
        536870888: a41,
        [a42]: a42,
        [a41](a51, a52) {
            const v56 = v15.e;
            const o57 = {
            };
            try {
                o57.f = v56;
            } catch(e58) {
            }
            try {
                const o59 = {
                };
                o59.f = v56;
                o59.d = v37;
            } catch(e60) {
            }
            try {
                const o61 = {
                };
                o61.f = v56;
                o61.d = v37;
                o61.e = v56;
            } catch(e62) {
            }
            try {
                const o63 = {
                };
                o63.f = v56;
                o63.d = v37;
                o63.g = 0;
            } catch(e64) {
            }
            return a40;
        },
    };
    o65.c = f44;
    return o65;
}
const v66 = f39(v37, v37, v35, f39);
v66[536870888] = v66;
const v67 = f39(v36, C3, v35, v35);
const v68 = f39(v67, v67, v36, v67);
const v69 = [0,1593815803];
[16,536870889,-536870912,-2,-30389,604649447,-65537];
let v71 = 9223372036854775807;
9007199254740992 >>> 9007199254740992;
let v75 = Array;
let v76 = 1049;
v76++;
const v78 = v75(v76);
try { v78.reduce(v68); } catch (e) {}
class C80 extends v75 {
    n(a82, a83) {
    }
    static #a = 65536;
    #d;
    static [v78] = v69;
}
C80.prototype;
v71 = 65536;
++v75;
new C80();
const v88 = new C80();
v88.constructor = f39;
try { v88.concat(v15); } catch (e) {}
1000000000.0 - 1000000000.0;
const v94 = v69;
[-2.575460385290415e+307,0.8947674897012107,3.791183925828106,1000000000000.0,431.3443950365104,-1.5895387754722096e+308,0.6612248920706111,2.2250738585072014e-308,-0.0];
1000000000.0 * [-9.578589124662172e+307,0.5803164764357316,1e-15];
