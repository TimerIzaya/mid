function f0() {
    const o10 = {
        ..."0",
        __proto__: "0",
        13: -1393227392,
        "unicode": -1393227392,
        "g": "0",
        "g": -1393227392,
        "c": 536870888,
        "e": f0,
        "f": 536870888,
        ..."0",
        [f0]: "0",
        ["0"](a5, a6) {
            super[delete a6?.e] = "0";
            a5 << "0";
            super.b;
            return 536870888;
        },
        "d": -1393227392,
        ..."0",
        "b": -1393227392,
        ..."0",
        "a": "0",
    };
    return o10;
}
const v11 = f0();
const v12 = f0();
let v13;
try { v13 = new f0(v12, v11, ...v11, f0); } catch (e) {}
try { v13(v11, v13, v11, v13); } catch (e) {}
try {
    f0();
} catch(e16) {
}
const v17 = f0();
class C18 extends f0 {
    #valueOf(a20) {
        try {
            a20.fuck(f0, a20, [v11,f0,this,a20,v17]);
        } catch(e23) {
        }
        return f0;
    }
    #h = v17;
    static 1073741824 = v17;
    static #e = v12;
    #f;
}
new C18();
new C18();
new C18();
function f27() {
    return v17;
}
[3.0,-1000000000000.0,5.930986969956578,0.24851585684514033,-2.0,-1.0,0.32789653984977174,400981.10625706357,544552.2679493374];
const v29 = [-857.1474927710603,-1000.0,-1000000000.0,-6.412869198395104e+307,2.220446049250313e-16,-0.0,2.2250738585072014e-308,-1000000000000.0,-4.0,305.1535962243004];
[2.0,346978.6809403058,1e-15,-1000000.0,-1000000.0,-521.2398209551288,-2.2250738585072014e-308];
function f32(a33, a34, a35, a36) {
    const v39 = new BigInt64Array(4046);
    if (a36) {
        v29.length /= v13;
    } else {
        const v40 = a34 && v11;
        new BigInt64Array(v40, v40);
    }
    let v42 = undefined;
    const v43 = v42++;
    const v44 = v43 + v43;
    const v45 = v43 >> v43;
    const v46 = v45 >>> v45;
    function F47(a49, a50, a51) {
        if (!new.target) { throw 'must be called with new'; }
    }
    new F47(4096, 4096, a35, F47);
    const v53 = new F47(v44, 4096, v46);
    let o54 = {
    };
    [,...o54] = v39;
    return v53;
}
for (let v55 = 0; v55 < 5; v55++) {
    f32(v55, v55, v55, f32);
}
