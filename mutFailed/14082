const v0 = /a+b/gudim;
const v1 = /Up\P{sc=Greek}/gdis;
/xyz{1,32}*/gviy;
function f6() {
    return "OROB7";
}
class C7 {
    p(a9, a10, a11, a12) {
        if (v0 !== this) {
            function f14() {
                return a12;
            }
        } else {
            try {
                new f6();
            } catch(e16) {
            }
        }
        return a11;
    }
    constructor(a18, a19, a20, a21) {
        const v22 = a19;
    }
    #h = "OROB7";
    static #c = C7;
    #e;
}
const v23 = new C7();
const v24 = new C7();
const v25 = new C7();
function F26(a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v1;
    } catch(e31) {
    }
}
const v32 = new F26(v24, "OROB7", v0);
try {
    C7.g = C7;
} catch(e33) {
}
[4.419097137830588e+307,2.2250738585072014e-308,-1e-15,-2.220446049250313e-16];
[-350.0884296493283,689.9372573709682,0.17736128592876155,1.0,1000000.0,-1e-15,1000000.0,-3.9320631962687e+307,0.8671399229757286,4.525006131849484];
[47189.790501914686,1.9528499616465425,-1000000000000.0];
new F26(v32, "19196", v1);
new F26(v23, "boolean", v1);
class C39 {
}
const v40 = /xEz\xe2\x81\xa3/gumy;
let v44 = new Float32Array();
let v48;
try {
const t0 = 50;
v48 = t0();
} catch (e) {}
let v49 = new Float64Array();
({"buffer":v48,"byteLength":v49,"length":v44,} = v49);
const v51 = [1000000000000.0,6.579220753226213e+307,2.0,-2.220446049250313e-16,NaN,-1000000.0];
const v54 = v25.b;
new f6();
try { v44("findIndex", v44); } catch (e) {}
try { v23.p(); } catch (e) {}
let v62 = v54 || -0.0;
-9007199254740990 >>> -9007199254740990;
const v64 = v62--;
Math.log2(v40);
+v64;
v51["findIndex"](gc);
