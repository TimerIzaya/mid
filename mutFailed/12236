const v0 = [2,9007199254740992,9392,-9223372036854775808,3,-2];
const v1 = [4294967297,5,1,15,-2,5,-11,257];
const v2 = [1073741825];
try { v2.toString(); } catch (e) {}
new BigUint64Array(2147483647);
class C8 {
    static {
        new this(this, this, this, this, 852);
    }
    constructor(a12) {
        const v13 = this.constructor;
        try { new v13(a12, 852, v13, a12); } catch (e) {}
        const v17 = ~(852 && 852);
        Math.sinh(Math);
        +v17;
    }
}
new v1();
const v21 = new C8(852);
new C8(C8);
class C23 {
    #m(a25, a26, a27) {
        for (const v28 in this) {
            (delete this?.h).__proto__;
        }
    }
}
const v31 = /[a{0,1}?]/gdiy;
/a(?:b)?/gvdim;
const v33 = /m/us;
const v36 = new Array(15);
function F38(a40, a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a42;
    } catch(e44) {
    }
    try {
        a43.a = a43;
    } catch(e45) {
    }
    try {
        this.h = a41;
    } catch(e46) {
        new Float64Array(Float64Array);
        Array(36862);
    }
}
const v52 = new F38(Array, v0, v0, undefined);
new F38(v31, v0, v0, v52);
new F38(v2, v36, v36, v52);
class C55 {
}
function f56(a57, a58, a59, a60) {
    const v63 = new Int16Array(1269);
    function F65(a67, a68, a69, a70) {
        if (!new.target) { throw 'must be called with new'; }
        this.c = a67;
    }
    new F65(-2.0);
    try { C55.n(f56); } catch (e) {}
    for (const v73 in v63) {
    }
    return a58;
}
const v74 = f56(C55, f56, v33, f56);
const v75 = f56();
Array(2147483647);
const o81 = {
    ..."44184",
    [-15]: -15,
    2480: 9,
    ..."44184",
};
f56(v74, v75, C55, C55);
v33.b = v21;
new Date(Array);
for (let i = 0; i < 5; i++) {
    new Date();
}
