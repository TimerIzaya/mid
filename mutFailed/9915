function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 536870889;
    } catch(e3) {
    }
    try {
        this.b = 536870889;
    } catch(e4) {
    }
    try {
        this.g = 536870889;
    } catch(e5) {
    }
    const v11 = (F0 << 1035059879) / -1.7976931348623157e+308;
    const v12 = +F0;
    -65536 & v11;
    v12 << v11;
    --F0;
    Math.log(1035059879);
    this[280] = 536870889;
    let v20 = 2.220446049250313e-16 + 8;
    v20++;
    const v22 = -2.220446049250313e-16;
    v22 - v22;
    Math.atan2(2.220446049250313e-16, v22);
    const v25 = 8 || 2.220446049250313e-16;
    v25 + v25;
    v22 ** 8;
    let v29 = (2.220446049250313e-16 + F0) | v25;
    v29++;
}
const v31 = new F0();
const v32 = new F0();
const v33 = new F0();
v31[280];
function f35(a36, a37) {
    a36[280] = a36;
    a37[280] = a37;
    const o43 = {
        [v31]: F0,
        [v33]: a36,
        o(a39, a40) {
            return arguments - v32;
        },
        "h": v33,
        "b": v31,
        "a": v32,
        [a37]: a37,
        "g": a36,
        "d": a36,
        "c": v33,
        ...a37,
    };
    return o43;
}
const v44 = f35(v31, v31);
const v45 = f35(v33, v33);
const v46 = f35(v32, v44);
function f47(a48, a49) {
    a48.g = a48;
    a49[280] = a49;
    const o53 = {
        9: v33,
        get c() {
            this[Symbol.hasInstance] = a49;
            return F0;
        },
        "e": a49,
        "f": F0,
        "c": v45,
    };
    return o53;
}
const v54 = f47(v46, v31);
v54.e = v54;
const v55 = f47(v46, v33);
function F56(a58, a59, a60, a61) {
    if (!new.target) { throw 'must be called with new'; }
    a58.h = a58;
    try {
        this.f = v55;
    } catch(e62) {
    }
    try {
        this.a = a61;
    } catch(e63) {
    }
}
new F56(v46, v33, v31, f47);
const v65 = new F56(v32, v46, v31, v31);
new F56(v44, v31, v44, v65);
const v67 = f47(v46, v31);
v67[9];
function f69() {
    2147483649 == 2147483649;
    const o94 = {
        valueOf(a75) {
            let v76;
            try { v76 = ("split").padEnd(a75, a75); } catch (e) {}
            function f77(a78, a79) {
                v76.g = f69;
                return f77;
            }
            try {
            } catch(e80) {
                const v82 = Symbol.isConcatSpreadable;
                try { e80(v82); } catch (e) {}
                try {
                    f69();
                } catch(e87) {
                }
                this[2];
            }
            function f93() {
                return a75;
            }
            return f69;
        },
    };
    return f69;
}
const v95 = f69();
v95.caller = v95;
f69();
const v97 = f69();
v97.length = v97;
10000 - 10000;
let v101 = 536870888;
const v102 = -v67;
v102 / v102;
f69();
const v105 = ++v101;
v105 - v105;
f69[v102];
b = 536870888;
/(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10[Ca\nb\bc?]/vim;
try {
    v97.length = 3425;
} catch(e110) {
}
