const v2 = new Uint8ClampedArray(5);
function f5(a6, a7) {
    a7?.[2];
    function f9() {
        59817n < undefined;
        return f9;
    }
    f9();
    %OptimizeFunctionOnNextCall(f9);
    return Uint8Array;
}
Uint8Array[Symbol.toPrimitive] = f5;
Uint8Array.BYTES_PER_ELEMENT = Uint8Array;
new Uint8Array(64);
try { new Uint16Array(2498, 5, Uint8Array); } catch (e) {}
new Uint16Array(2498);
class C24 {
}
let v25;
try { v25 = C24.call(Uint8Array); } catch (e) {}
const v26 = new C24();
function f27() {
    for (let v29 = 0; v29 < 5; v29++) {
        function f30() {
            return v29;
        }
        f30();
        f30.a = f30;
        f30.a = -1609839612;
    }
    return -1609839612;
}
v26.valueOf = f27;
function f34() {
    const v35 = v2[82];
    C24 instanceof f5;
    return v35;
}
Object.defineProperty(Date, "valueOf", { writable: true, enumerable: true, value: f34 });
const v37 = new Date(v26, Date, "F");
try { v37.setHours(v37, C24, v37, C24); } catch (e) {}
function f39() {
}
const v41 = new Map();
function f42(a43) {
    function f44() {
        for (let v45 = 0; v45 < 5; v45++) {
            const t47 = [-Infinity,1.7976931348623157e+308,1.0,1.7976931348623157e+308,-1.0,Infinity];
            t47.length >>>= -65536;
        }
        return f44;
    }
    return 2498;
}
v41.hasInstance = f42;
function f48() {
    return v41;
}
Infinity + Infinity;
-3.0 >>> -3.0;
const v54 = v41 < v41;
v54 || v54;
const v56 = [-1000000.0,-3.1923473210656557,-1.721355656202141e+308,4.0,0.3955838142797843,-3.0,1.1463753586867827e+308];
function f57(a58) {
    const o59 = {
    };
    o59.g = a58;
    o59.g = o59;
    o59[213] = v56;
    const v60 = o59[213];
    try { v60.toString(); } catch (e) {}
    return v60;
}
const v62 = [-3.0,Infinity,f48,4.0];
try { v62.toLocaleString(); } catch (e) {}
const v64 = [Map,f39,f48,Map,f48];
const v65 = [Map,v62,v62,v64,f39];
new Set();
Uint8Array[Symbol.toPrimitive] = Date;
new Uint8Array(1000);
Array.o = 5;
const v76 = Array();
try { v76.findLast(v65); } catch (e) {}
const v79 = Array(1000);
try { v79.shift(); } catch (e) {}
const v81 = new BigUint64Array(257);
const v82 = Uint8Array in v81;
const v83 = v82 && v82;
v83 || v83;
"f" == "f";
for (let v90 = 0; v90 < 10; v90++) {
    const t91 = "f";
    t91[1073741824] = 4294967296;
}
const v91 = new Float32Array(-1073741824);
function f92() {
    return f34;
}
function f93(a94) {
    v25 = "aa8";
}
Object.defineProperty(v91, Symbol.toPrimitive, { configurable: true, enumerable: true, get: f92, set: f93 });
v91[3] = v91;
4096 | 4096;
const o99 = {
};
o99.e = f57;
Float64Array.e = Float64Array;
const v102 = new Float64Array(10);
v102[1] = v102;
try { new Uint8Array(v81, Uint8Array, v81); } catch (e) {}
Uint8Array.e = Uint8Array;
new Uint8Array(4096);
const v106 = Float32Array.name;
const v107 = new Float32Array(141);
v107[37];
const v110 = 7 + 7;
v110 >>> v110;
BigInt64Array.length = BigInt64Array;
new f57();
try { Array.o(); } catch (e) {}
function f115(a116, a117) {
    return f115;
}
f115.prototype;
5 + 5;
try { new WeakMap(v56, Map, v106); } catch (e) {}
new WeakMap(5);
function f124() {
    return f124;
}
new BigInt64Array(7);
let v126 = -7881n;
v126--;
function f129() {
    return 536870887n;
}
let v130;
try { v130 = f129(); } catch (e) {}
const v131 = v130 + v130;
let v132;
try { v132 = f129(); } catch (e) {}
v132++;
v132 * v132;
2 === 2;
Map.prototype;
new Map();
const v140 = 24560 ^ 24560;
const v141 = v140 & v140;
-1000000000000.0 >>> -1000000000000.0;
Uint8Array.prototype = Uint8Array;
function F145() {
    if (!new.target) { throw 'must be called with new'; }
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    try { Date.parse(f39); } catch (e) {}
    const v150 = Date();
    v150[47];
    let v152;
    try { v152 = v150.small(); } catch (e) {}
    const v153 = v152?.slice;
    try { new v153(v64, v64); } catch (e) {}
    for (const v157 of Array(19793)) {
    }
}
F145.c = v131;
const v158 = new F145();
v158.constructor = f5;
v158.b = v158;
const v159 = v158?.constructor;
v159.c = v159;
v159.c = v159;
try { new v159(); } catch (e) {}
function F161(a163, a164, a165) {
    if (!new.target) { throw 'must be called with new'; }
    const v166 = this?.__defineGetter__;
    try { new v166(v81, v81); } catch (e) {}
}
class C169 {
    constructor(a171) {
        for (const v172 of "e") {
        }
    }
}
class C173 extends C169 {
}
const o174 = {
};
o174.h = v141;
o174.h = o174;
