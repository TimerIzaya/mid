let v2 = -1262867661;
class C3 {
    constructor(a5, a6) {
        let v4 = this;
        v4 = a6;
        a5[3] = v2;
        try { v4["parse"](v4, "parse", "parse", "parse"); } catch (e) {}
    }
    static set c(a10) {
        Object.defineProperty(a10, 7, { writable: true, configurable: true, value: a10 });
        v2 |= v2;
    }
    #c = 462.58829413776675;
    static [462.58829413776675] = v2;
    static #g;
}
let v11 = new C3(C3, 56970);
const v12 = new C3(v11, v2);
const v13 = new C3(v11, 462.58829413776675);
%VerifyType(v2);
let v14;
try { v14 = v11.keyFor(v11, v12); } catch (e) {}
let v18 = -1;
const v20 = new Uint8Array(v18);
function f21(a22, a23, a24, a25) {
    const o33 = {
        p(a27, a28, a29) {
            Object.defineProperty(v20, "g", { configurable: true, get: f21 });
            return a29;
        },
        "c": v20,
        [a23]: a24,
        "f": Uint8Array,
    };
    return o33;
}
const v34 = f21(v14, 65536n, v14, 65536n);
f21(v2, v14, f21(v2, 65536n, v34, 65536n, v20, v34), 128n);
new BigInt64Array(512);
const v42 = new Int16Array(1384);
v11 = v34;
f21(v13, f21, Int16Array, 128n);
g = 512;
v42[14];
v18--;
([4.0,1.0,1000000.0,2.220446049250313e-16,533350.8402277301,-2.2250738585072014e-308,1000000.0,1.566394140636886]).toLocaleString().toUpperCase();
