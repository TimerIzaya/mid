class C6 {
    static n(a8, a9) {
        super.a;
        const v11 = this[0];
        function F12(a14, a15, a16, a17) {
            if (!new.target) { throw 'must be called with new'; }
            function f18() {
                return F12;
            }
            class C19 extends f18 {
                constructor(a21) {
                    super();
                    for (let v22 = 0; v22 < 25; v22++) {
                        this["p" + "p"] = v22;
                    }
                }
            }
            new C19();
        }
        const o28 = {
        };
        typeof Float32Array;
        class C31 {
        }
        function F32(a34, a35, a36, a37) {
            if (!new.target) { throw 'must be called with new'; }
            this.f = C31;
        }
        const v38 = new F32();
        const v39 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
        class C40 {
        }
        const v41 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
        const v42 = [601759695];
        const v43 = [1073741824,1073741823,1376142744,1073741825];
        function f45(a46, a47, a48, a49) {
            function f50() {
                try {
                    v39.forEach(a47);
                } catch(e54) {
                }
                const v55 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
                const v57 = Symbol.toPrimitive;
                const o63 = {
                    toString(a59, a60) {
                        const v61 = a49 && a47;
                        a59 *= v57;
                        v61 <= v55;
                    },
                };
                const o83 = {
                    "c": 1341223975n,
                    [522675525n](a66, a67) {
                    },
                    "c": v42,
                    valueOf(a69, a70) {
                        return this;
                    },
                    [1341223975n](a72, a73, a74, a75) {
                    },
                    "maxByteLength": -4294967295,
                    "arguments": v41,
                    ...v38,
                    "type": C40,
                    ..."Vre",
                    valueOf(a77, a78) {
                        return this;
                    },
                    ..."Vre",
                    4: "Vre",
                    "c": -268435456,
                    "type": "Vre",
                    toString(a80, a81, a82) {
                        return a82;
                    },
                    5: -4294967295,
                    6: -268435456,
                };
            }
            f50();
            %OptimizeFunctionOnNextCall(f50);
            try { v43["find"]("find", a49); } catch (e) {}
        }
        f45();
        super[v11] = -920.3764679632257;
        try { v11(); } catch (e) {}
        return -8n;
    }
    g;
    static #n(a91) {
    }
    static h = 8n;
    static #a = 8n;
    #g;
    e = 1341223975n;
    b;
}
try { new C6(); } catch (e) {}
const v93 = new C6();
const v94 = new C6();
new C6();
class C96 extends C6 {
    static #a = -2147483648n;
    static d;
    [v93];
    n(a98, a99, a100) {
        try {
            v94.#a = 2147483648n;
        } catch(e101) {
        }
        v94[2] = C6;
        new WeakSet();
        return this;
    }
    static g = -2147483648n;
    #p(a105, a106, a107, a108) {
    }
    static #p(a110) {
        this.#p();
    }
    static #c = 2147483648n;
}
C96.length = C96;
new C96();
const v113 = new C96();
v113.e;
new C96();
NaN | NaN;
-672347.7695019224 >> -672347.7695019224;
const v122 = Map.prototype;
try { v122.clear(v122, Map); } catch (e) {}
