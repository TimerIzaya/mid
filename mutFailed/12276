const v3 = [585096469,-9223372036854775807,2,114851117,-5,-1911773618,-128,-1];
v3.d = v3;
v3[0];
let v5;
try { v5 = v3.unshift(-65537); } catch (e) {}
v5 != v5;
v5 >>> v5;
const v8 = [10,0];
v8.g = v8;
const v9 = [9007199254740992];
try { v9.reduce(-65537); } catch (e) {}
try { v9.find(-65537); } catch (e) {}
const v12 = [-13,-1024,-2359,-7,-38072,1024];
try { v12.flat(); } catch (e) {}
[10,536870912,-9,1000,54909,129,1375855966];
[64,-45623,-4294967297,127];
4096 - 4096;
new Array(4096);
9 - 9;
const t18 = "-1723624938";
t18[3] = "-1723624938";
const v23 = ("-1723624938").slice(9);
const v24 = v23?.strike;
try { v24(); } catch (e) {}
try { new v24(); } catch (e) {}
9 - 9;
let v30;
try { v30 = ("maxByteLength").localeCompare("maxByteLength"); } catch (e) {}
v30 & v30;
class C32 {
    constructor(a34, a35) {
        a34 | a34;
        try { a35.blink(); } catch (e) {}
        this.h = this;
        a34--;
        const v39 = this.constructor;
        v39.length = v39;
        try { new v39(this, v23); } catch (e) {}
        a35.sup();
    }
}
const v42 = new C32(9, "maxByteLength");
const v43 = v42.constructor;
try { new v43(v8, v8); } catch (e) {}
try { new v43(); } catch (e) {}
