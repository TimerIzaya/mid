function f0() {
}
[-2.220446049250313e-16,NaN,-1.7976931348623157e+308,2.7497486435539127,1.7907086507872392e+308,-374737.71266081755,0.47246957715021676,-870.5153640576957,-4.0,-596.7317338797444];
const v2 = [5.0];
[354357.8842761915,9.285351896274594,4.048629357945368];
([4.0,1.0,1000000.0,2.220446049250313e-16,533350.8402277301,-2.2250738585072014e-308,1000000.0,1.566394140636886]).toLocaleString();
v2.toUpperCase();
const o11 = {
    "maxByteLength": 3145,
};
const v13 = new SharedArrayBuffer(128, o11);
new Float32Array(v13);
class C18 {
    #m(a20, a21, a22, a23) {
        const v24 = (-1825293896).length;
        [-1825293896,-1073741824n];
        try { new BigInt64Array(-2147483649, Date, -1.5678520341586263e+308); } catch (e) {}
        this[3] *= v24;
        const o34 = {
            "maxByteLength": 462656646,
        };
        const v36 = [-6.741855211610779,553.594505585577,1.0637276618206825e+308];
        const o40 = {
            set c(a38) {
                class C39 {
                    static [v36];
                }
            },
        };
        const v41 = new ArrayBuffer(9, o34);
        const v43 = new Float32Array(v41);
        return v43;
    }
}
let v44 = Array;
++v44;
new Uint8Array(481);
new C18();
new C18();
new C18();
const v52 = [7.554475698528474];
const v55 = new Float32Array();
v55["copyWithin"](..."-11838");
Object.defineProperty(Uint8ClampedArray, 1, { value: v52 });
new Uint8ClampedArray(Uint8ClampedArray);
