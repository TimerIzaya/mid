const v0 = [558990321,-128,-15723,1491684310,9007199254740990,36719,4];
const v1 = [-9223372036854775808,7,234403149];
const v2 = [-62559,50265,268435456,9007199254740992,1000,-1024];
function f3() {
    return v2;
}
const v4 = [f3,v0,v1];
const v5 = v4[2];
const v6 = [v4,f3];
try { v6.groupToMap(f3); } catch (e) {}
[v4,v0,v4,v2];
try { ("object").valueOf(); } catch (e) {}
let v17;
try { v17 = ("E").indexOf("replace"); } catch (e) {}
function f18() {
    ("object")[3];
    const o28 = {
        toString(a24, a25) {
            try {
                super.getMinutes();
            } catch(e27) {
            }
            return "object";
        },
        "b": "boolean",
        "g": "object",
        128: "boolean",
        "a": 1000000000000.0,
        "c": "boolean",
        __proto__: "boolean",
        "b": 1000000000000.0,
    };
    return o28;
}
const v29 = f18();
const v30 = v17();
v30.g = v30;
const v31 = f18();
v31[128];
function F34(a36) {
    if (!new.target) { throw 'must be called with new'; }
    const v37 = this?.constructor;
    try { new v37(a36); } catch (e) {}
    a36[128] = a36;
    try {
        this.toStringTag = a36;
    } catch(e39) {
    }
    try {
    } catch(e40) {
    }
    try {
    } catch(e41) {
    }
}
F34.c = F34;
const v42 = new F34(v30, v5, null);
v42.length;
new F34(v31);
const v45 = new F34(v30);
function f46(a47, a48, a49) {
    a47.e = a47;
    a48[128];
    const o57 = {
        get a() {
            const o55 = {
                "execution": "async",
                "type": "major",
            };
            gc(o55);
        },
    };
    o57[2074850330] = o57;
    return o57;
}
f46.length;
const v59 = f46(v31, v31, v29);
v59.h = v59;
f46(v59, f46(v30, v30, v59), v30);
function F62(a64, a65, a66) {
    if (!new.target) { throw 'must be called with new'; }
    a64.b;
    const v68 = this?.constructor;
    try { new v68(F62, F62, f18); } catch (e) {}
    a65.g = a65;
    try {
        this.d = a66;
    } catch(e70) {
    }
    try {
    } catch(e71) {
    }
}
const v72 = new F62(v31, v29, v45);
new F62(v31, v59, v72);
try { Uint32Array.bind(F34); } catch (e) {}
