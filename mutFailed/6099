function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 1024;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
class C7 extends F0 {
    valueOf(a9) {
        const o18 = {
            n(a11) {
                return a11;
            },
            15: v4,
            ...v6,
            __proto__: this,
            "f": v6,
            ...this,
            n(a13, a14) {
            },
            valueOf(a16, a17) {
            },
        };
        try {
            a9.toString = a9;
        } catch(e19) {
        }
        return v4;
    }
    #g;
}
const v20 = new C7();
new C7();
new v5();
URIError();
function f25() {
    const o29 = {
        m(a28) {
            return this;
        },
        __proto__: 946.0676210033328,
    };
    return 946.0676210033328;
}
f25();
/Zt\p{Script=Greek}/guiy;
/(v(a))/guds;
/OqW/gdmsy;
const v39 = new Int32Array(56885);
for (let i = 0; i < 10; i++) {
    /[xyz{1,}(O)]/udis;
}
const v42 = -Infinity;
Math.atan2(v42, 56885);
const v45 = [v39];
new Uint8ClampedArray(4096);
const v49 = [];
function F51(a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
    const v55 = this?.constructor;
    try { new v55(); } catch (e) {}
    this.c = Map;
    try {
        this.e = v49;
    } catch(e57) {
    }
    try {
        this.a = a53;
    } catch(e58) {
    }
    new Int32Array(9);
    v20.reverse();
}
Reflect.construct(Int32Array, v45);
const v65 = [v42];
this.Realm;
let v68 = -8;
let v69 = 48510;
let v70 = 1073741823;
class C71 {
    4259938026;
}
let v72 = new C71();
({"a":v69,"b":v72,"c":v68,...v70} = v65);
