class C3 {
    get h() {
        let v6 = 64;
        const v8 = -3.0 ^ -3.0;
        const v9 = ++v6;
        const v10 = -3.0 >> -47069;
        Math.atan2(v8, v9);
        Math.pow(v10, -135218.4234981815);
        Math.hypot(v6);
        return this;
    }
}
try { new C3(); } catch (e) {}
const v15 = new C3();
const v16 = v15?.constructor;
try { new v16(); } catch (e) {}
const v18 = new C3();
const v19 = v18?.constructor;
try { new v19(); } catch (e) {}
const v21 = new C3();
const v22 = v21?.constructor;
try { new v22(); } catch (e) {}
class C24 {
    static c;
    toString(a26, a27) {
        new Int16Array(9);
        new Uint16Array(512);
        new BigUint64Array(512);
        return -3.0;
    }
}
new C24();
new C24();
const v39 = new C24();
const v40 = /(J5a{0,1}?)/y;
function f41(a42) {
    const v44 = [];
    class C45 {
        static #g = v44;
        static d;
        static #c;
        static e;
        static {
        }
    }
    return v39;
}
v40.toString = f41;
class C47 {
    static {
        this.name = this;
        for (let v49 = 0; v49 < 25; v49++) {
            const v50 = [601759695];
            const v51 = [1073741824,1073741823,1376142744,1073741825];
            try { v51.lastIndexOf(v49); } catch (e) {}
            function f53(a54, a55, a56, a57) {
                ~a55;
                try { a54(); } catch (e) {}
                const v60 = a56 << a56;
                v60 % v60;
                function f62() {
                }
                const v64 = new Int8Array();
                BigUint64Array.length;
                const v68 = BigUint64Array * 536870887;
                v68 / v68;
                let v70 = -3.0 - v68;
                v70++;
                v68 ** v68;
                Number.MAX_VALUE;
                try { Number(v40); } catch (e) {}
                const v77 = v64.buffer.__defineGetter__;
                try { v77.call(v70); } catch (e) {}
                try { v77(); } catch (e) {}
                try { v51["find"](..."find", a57, ...v50); } catch (e) {}
            }
            for (let v82 = 0; v82 < 5; v82++) {
                v82 % v82;
                f53(this);
            }
        }
    }
}
const v85 = C47?.constructor;
try { new v85(-3.0); } catch (e) {}
