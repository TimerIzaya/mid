class C3 {
    f = -3845;
    static {
        this.e = this;
        const v5 = super.a;
        try {
            super.m(-3845, v5, this);
        } catch(e7) {
        }
    }
    static c = -3845;
    [-3845] = 65537;
    static 536870888 = -9223372036854775808;
    #c;
    1000;
}
C3[536870888];
const v9 = new C3();
const v10 = new C3();
const v11 = new C3();
v11[1000];
let v13 = 0;
while (v13 < (1 / 1)) {
    v10.f %= -3845;
    C3.c;
    v13++;
}
class C19 {
    #g;
    set e(a21) {
        const o22 = {
        };
        try {
            o22.e = -3845;
        } catch(e23) {
        }
        try {
            const o24 = {
            };
            o24.e = o22;
            o24.h = this;
        } catch(e25) {
        }
        try {
            const o26 = {
            };
            o26.e = -3845;
            o26.h = this;
            o26.g = -3845;
        } catch(e27) {
        }
        try {
            const o28 = {
            };
            o28.e = -3845;
            o28.h = this;
            o28.c = -9223372036854775808;
        } catch(e29) {
        }
    }
}
4 | 4;
const v33 = new Uint32Array(4);
new Float64Array(v33);
const v36 = new C19();
new C19();
const v38 = new C19();
v38.a = v38;
class C39 {
    static #o(a41, a42, a43) {
        try {
            a43.a = 65537;
        } catch(e44) {
        }
        %VerifyType(a41);
        return this;
    }
    [C19];
    [-2] = v9;
    static [v36];
    f = C3;
    [-9223372036854775808];
}
new v9();
new C39();
new C39();
let v49 = 2;
v49++;
class C55 {
}
try { C55.apply(v9, v33); } catch (e) {}
const v57 = new C55();
const v58 = v57?.__lookupGetter__;
try { new v58(v57); } catch (e) {}
const v60 = v57.constructor;
try { v60(v60, v60); } catch (e) {}
52701 - 52701;
function f65(a66) {
    a66 | a66;
    this.b = this;
    function f69(a70) {
        +a70;
        return a66;
    }
    this.onmessage = f69;
    -13 + -13;
    function f75() {
        return 522675525n;
    }
    try {
    } catch(e76) {
    }
    -1 >> -1;
    return -13;
}
10 >>> 10;
C55(3541);
%PrepareFunctionForOptimization(f65);
const v92 = f65();
v92 != v92;
let v94 = 10n;
v94--;
