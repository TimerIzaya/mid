class C3 {
    [C3];
    static #m(a5) {
        return -1.3266522790944002;
    }
    constructor(a10) {
        const v14 = a10 && a10;
        const v15 = v14 >>> v14;
        -8.290461192848784e+307 | v14;
        v15 >>> C3;
    }
}
const v18 = new C3(1073741823);
const v19 = new v18(v18);
const v20 = new C3(v19);
[-2147483647,9007199254740992,-1,129,8,1073741824,21939,1756514470,42055,1024];
[0,65536,-51819,10000,9,2141248639];
const v23 = [1024,-9007199254740990,-6,-9223372036854775807,-1465528305,6,2147483648,9223372036854775807,536870889];
function f24() {
    return v23;
}
class C25 {
    #toString(a27, a28, a29, a30) {
        try {
            this.valueOf = f24;
        } catch(e31) {
        }
        return this;
    }
    c = v20;
    9;
    268435456;
    static [-7] = v20;
    static #e = v19;
}
new C25();
new C25();
new C25();
function F35(a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e39) {
        for (let [v40,v41] of a37) {
        }
    }
    -256n >> -256n;
    ~a37;
    try {
        new f24();
    } catch(e46) {
    }
}
new f24(F35, F35);
new F35();
