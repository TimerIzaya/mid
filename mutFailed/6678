class C3 {
    #g = "4096";
    get b() {
        let v4 = this;
        v4 %= v4;
        let v5;
        try { v5 = ("4096").trimStart(); } catch (e) {}
        try {
            v5.#g;
        } catch(e7) {
        }
        return "4096";
    }
    3511380246 = 65535;
}
const v8 = new C3();
const v9 = new C3();
const v10 = new C3();
const v12 = new Set();
function F14(a16, a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        F14.a = a17;
    } catch(e19) {
    }
    try {
        this.g = a17;
    } catch(e20) {
    }
    try {
        this.f = a18;
    } catch(e21) {
    }
}
new F14(v9, v10, C3);
new F14(v10, C3, C3);
new F14(v10, v8, v9);
const v27 = new Int16Array(443944762);
const v30 = new BigUint64Array(BigUint64Array);
new Uint8Array();
for (let v33 = 0; v33 < 32; v33++) {
    break;
}
const o58 = {
    o(a36) {
        const o55 = {
            valueOf() {
                eval();
                new Date();
                const o51 = {
                    [9007199254740992n]: -43292n,
                };
                return ("-1723624938").slice(1024, 1024);
            },
        };
        const o56 = {
        };
        return gc(o56);
    },
};
v27["o"]();
class C61 {
}
new Date();
function F64() {
    if (!new.target) { throw 'must be called with new'; }
}
class C66 extends F64 {
    [v12] = v12;
}
delete v30?.e;
const v70 = new Uint8Array(1024);
v70.reverse();
new BigUint64Array(2147483647);
