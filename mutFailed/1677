function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a9;
    } catch(e12) {
    }
    try {
        this.b = 1736758544;
    } catch(e13) {
    }
    try {
        this.d = a8;
    } catch(e14) {
    }
}
const v15 = new F6(-2.220446049250313e-16, -1000000000.0, 1736758544, 2.0187458489403823e+307);
const v16 = new F6(-1000000000.0, v15, 1736758544, -2.220446049250313e-16);
const v17 = new F6(2.0187458489403823e+307, -1000000000.0, F6, -2.220446049250313e-16);
for (let [v19,...v20] of 2.0187458489403823e+307) {
}
function F21(a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        v17.a = v17;
    } catch(e26) {
    }
    try {
        this.f = a25;
    } catch(e27) {
    }
    try {
        this.c = a25;
    } catch(e28) {
    }
}
new F21(1023617280, 2.0187458489403823e+307, v16);
const v30 = new F21(1736758544, 2.0187458489403823e+307, v17);
new v30(4294967295, -1000000000.0, v16);
const o36 = {
    o(a33) {
        a33();
        return this;
    },
};
o36["o"]();
