function f0() {
}
function f1() {
    const o7 = {
        __proto__: f0,
        [f0]: f0,
        valueOf(a3) {
        },
        p() {
            const v5 = super[f0];
            super[f0] = v5;
            try {
                v5.c = this;
            } catch(e6) {
            }
            return v5;
        },
        ...f0,
    };
    return o7;
}
const v8 = f1();
const v9 = f1();
const v10 = f1();
function f11(a12, a13) {
    const o22 = {
        "g": v9,
        o(a15, a16, a17) {
            try { a15["toString"](a17); } catch (e) {}
            a17[Symbol.search] = a16;
            return a15;
        },
        "d": a13,
        "e": a13,
        "c": a12,
    };
    return o22;
}
f11(v9, v10);
f11(v10, v8);
f11(v8, v10);
function f26() {
    return f11;
}
const v28 = new Float32Array(Float32Array);
for (let v29 = 0; v29 < 25; v29++) {
    function f30(a31, a32, a33, a34) {
        try { a31.join(v29); } catch (e) {}
        a32--;
        a32 <= a32;
        const v39 = arguments?.__lookupGetter__;
        try { v39(v39, f30, a32, arguments); } catch (e) {}
        const v42 = "find" == "find";
        v42 && v42;
    }
    for (let v44 = 0; v44 < 10; v44++) {
        f30(v28, v29);
    }
}
const v49 = /(xyz??)/vm;
/}[a-b-c]/gdimy;
class C51 {
    get e() {
    }
    #c = v49;
}
new C51();
class C54 {
}
try { C54.call(); } catch (e) {}
new C54();
1 + 1;
class C59 {
    5;
    set d(a61) {
    }
    constructor(a63) {
        super();
        for (let v64 = 0; v64 < 5; v64++) {
        }
    }
}
const v68 = new BigUint64Array(10);
for (const v70 in v68) {
    let v71 = 10;
    for (let i = 0; i < 5; i++) {
        const v72 = v71--;
        v72 > v72;
    }
    new Float64Array(2147483647);
}
