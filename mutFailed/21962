[-6,-128,-1024,0,536870888,-1174308135];
[9007199254740990];
[18471];
new Float64Array(4);
new Float64Array(4);
new Uint8ClampedArray(2);
function f15(a16, a17, a18, a19) {
    function f20() {
        Math[Symbol.toPrimitive] = f20;
        let v24 = Math.expm1(a17);
        v24--;
        const v26 = Math.tanh(Math);
        const o27 = {
            [v26]: 4,
        };
        o27.NaN = o27;
        return f15;
    }
    f20();
    eval(a19);
    %OptimizeFunctionOnNextCall(f15);
    return eval;
}
for (let v31 = 0; v31 < 5; v31++) {
    f15(v31, v31, f15, f15);
}
