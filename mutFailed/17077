const v2 = new Array(3721);
257 * 257;
Float32Array.g = Float32Array;
const v6 = new Float32Array(3721);
let v7;
try { v7 = v6.find(Array); } catch (e) {}
Object.defineProperty(v2, "length", { writable: true, enumerable: true, set: Array });
function F9(a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = 2;
    } catch(e14) {
    }
    try {
        this.a = a11;
    } catch(e15) {
    }
}
new F9(2, 2, 2);
new F9(2, 2, 257);
new F9(257, 257, 2);
let v19 = Uint32Array;
const v20 = new v19(2);
let v21 = v20[1];
try { v6.toSorted(3721); } catch (e) {}
1801 == 1801;
const v26 = new Uint16Array(1801);
v26.g = v26;
[v21,...v19] = v20;
delete Array?.prototype;
delete v7?.[4];
let [v29] = v26;
try {
    new F9(11, -1840058505, 2);
} catch(e33) {
}
function f34(a35, a36, a37) {
    a36 >>> a36;
    const v39 = a36--;
    v39 * v39;
    a37 !== v39;
    const o46 = {
        __proto__: v6,
        "e": a35,
        set h(a43) {
            try {
                new v19(a36);
            } catch(e45) {
            }
        },
        [v20]: 3721,
        "c": a36,
        "g": v26,
        "h": a35,
        "f": v6,
    };
    return o46;
}
const v47 = f34(1801, 257, 1801);
v47.BYTES_PER_ELEMENT = v47;
const v48 = f34(257, 257, 2);
v48.h = v48;
f34(3721, 1801, 1801);
("toString").match();
