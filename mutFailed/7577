const v2 = new Int32Array(7);
const v5 = new Int8Array(3938);
let v6 = 3;
v6 >>> v6;
let v8 = 0;
v8 >> v8;
for (let i = 0; i < 5; i++) {
    v8 < 8;
    [...v6] = v5;
    v8++;
}
1637 + 1637;
function f15(a16) {
    function f18(a19) {
        +8161;
        ~7;
        let v26 = 7 % a19;
        v26--;
    }
    this.onmessage = f18;
    a16[7] = v2;
    this[4294967295] = a16;
}
Worker.name = Worker;
const v30 = [v2];
const o35 = {
    "arguments": v30,
    __proto__: v30,
    valueOf(a32) {
        const o33 = {
            __proto__: this,
            2261555780: "function",
        };
        super.toStringTag;
        return this;
    },
    "type": "function",
};
new Worker(f15, o35);
try { new Float64Array(Int32Array, v8, f15); } catch (e) {}
const v39 = new Float64Array(1637);
v39[835] = v39;
new Float32Array(1636);
const v43 = /[4*]/gviy;
const v44 = /A.+/gud;
v44.dotAll;
const v46 = /(\2)(\1)a\Sc/gm;
v46.lastIndex;
const v48 = [1637,v46,v46,1637];
v48.length = v48;
const v49 = [v44];
[v49,v43,v46];
[560.3764338321384,2.831189514697529,-1.0,1000.0,-2.4858124652164726,1000.0,1000000.0,1000000.0,6.670434684407409e+307,-Infinity];
const v54 = new Uint32Array();
try { v54.entries(); } catch (e) {}
try { v54.entries(); } catch (e) {}
const v57 = v54[40];
for (let v58 = 0; v58 < 5; v58++) {
    function f59(a60, a61) {
        Symbol.unscopables = Symbol;
        const v63 = Symbol.iterator;
        const o74 = {
            [v63]() {
                let v65 = 10;
                const o73 = {
                    next() {
                        v65--;
                        const v69 = v65 == 0;
                        const o72 = {
                            "type": "function",
                            ...v43,
                            set b(a71) {
                                v58 <<= v58;
                            },
                            "done": v69,
                            "value": v65,
                        };
                        return o72;
                    },
                };
                return o73;
            },
        };
        return v58;
    }
    f59(1637, v58);
    try { v57(); } catch (e) {}
}
const v77 = [-2.220446049250313e-16,-146030.0093347557,-759818.7684978913,1000000000000.0,-1.2175538670763404e+307];
[4.0];
const v80 = new BigUint64Array();
function F81(a83, a84, a85) {
    if (!new.target) { throw 'must be called with new'; }
    a83[4294967295] = a83;
}
class C86 {
}
try { new C86(); } catch (e) {}
const v88 = new C86();
const v89 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
let v90;
try { v90 = v89.some(); } catch (e) {}
let v91;
try { v91 = v46.toString(Worker, v90, v8); } catch (e) {}
function f93(a94, a95, a96) {
    a94 * a94;
    try { a95.codePointAt(a94); } catch (e) {}
    const v99 = v49 == v88;
    !v99;
    return v99 ? v49 : v88;
}
f93(255n, v91);
const v103 = /anVXYFzN(x)(x)(x)\3/gvdms;
try { v80.reduceRight(v103); } catch (e) {}
[-1.7976931348623157e+308,v77];
