let v2 = -28227;
class C3 {
    set a(a5) {
        Object.defineProperty("valueOf", 1182971058, { value: v2 });
        [10,-8,-64424,6,-11,8,16,-42069,-359,-4294967297];
        [-268435456,-416492700,-1785709122,65535];
        [128];
    }
    constructor(a10) {
        const o11 = {
            "e": a10,
            "h": "valueOf",
        };
        v2 = a10;
        let {"h":v12,...v13} = o11;
    }
}
const v14 = new C3(v2);
new C3(127);
const v16 = new C3(v2);
function F17(a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    function f21() {
        const v23 = Symbol.iterator;
        const o25 = {
            [v23]() {
            },
        };
        return a19;
    }
    this.toString = f21;
    try {
        this.f = a19;
    } catch(e26) {
    }
}
const v27 = new F17(v16, v14);
const v28 = new F17(v16, v16);
function f29(a30) {
    const v34 = new Uint8Array(2707, 2707, 128);
    let v35;
    try { v35 = v34.findLastIndex(v34, v34); } catch (e) {}
    const o36 = {
        [v35]: Uint8Array,
    };
    return 2707;
}
v28.toString = f29;
const v37 = new F17(v14, v16);
function f38() {
    return v37;
}
function f39(a40, a41) {
    Object.defineProperty(a40, "toString", { value: f39 });
    const o49 = {
        "f": a40,
        4: a40,
        "c": "valueOf",
        [a40](a43, a44) {
            let v45 = 10;
            for (; v45--;) {
                v37[1024];
            }
            return a40;
        },
    };
    return o49;
}
f39(v37, v27);
f39(v28, f39(v37, v27));
[-4294967295,-33901,-12,-65537];
[899592207];
[];
function f61(a62, a63, a64, a65) {
    9007199254740991 | a63;
    a62 / a62;
    const v68 = a63 < a62;
    a64 >>> a64;
    const o73 = {
        n(a71, a72) {
            return v68;
        },
    };
}
for (let v74 = 0; v74 < 625; v74++) {
}
