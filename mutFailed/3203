function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 127;
    } catch(e3) {
    }
    try {
        this.b = 127;
    } catch(e4) {
        const v7 = Array(16);
        const o8 = {
            ...v7,
        };
    }
    const v10 = [1000.0,-1000000000000.0,-7.943810730626244,-1.7976931348623157e+308,1.0,4.0];
    try {
        v10.length = -9223372036854775808;
    } catch(e11) {
    }
    try {
        this.g = 127;
    } catch(e12) {
        const v16 = new Uint16Array(3225);
        for (const v17 of v16) {
            v17[3] = 5n;
            9007199254740991 * v17;
        }
    }
}
new F0();
const v21 = new F0();
new F0();
const v23 = [65535,-6,4,-933431932,6,4];
const v24 = [-4,1438918172];
try { v24.findLastIndex(v21); } catch (e) {}
[9223372036854775807,-2147483647,41240,24131,3,1988689082];
/a?xyz{1,}?/gdimsy;
/a{1,2}?\xed\xb0\x80[]zR/u;
function f29() {
    return v23;
}
const v32 = -9223372036854775808n & -2147483647n;
v32 >> v32;
/a*?/vd;
class C35 {
}
const v37 = Array?.toString;
try { new v37(); } catch (e) {}
class C39 {
}
C39.g = C39;
C39.toString = Array;
try {
    Array.f = 3.0;
} catch(e41) {
}
const v42 = new C35();
const v43 = v42?.__lookupGetter__;
try { new v43(v23); } catch (e) {}
try { v42.propertyIsEnumerable(C39); } catch (e) {}
const v47 = new Float64Array(Float64Array);
for (const v48 in v47) {
    v48[0] = v48;
}
const o52 = {
    "maxByteLength": 1814769353,
};
const v53 = o52?.__lookupSetter__;
try { new v53(F0); } catch (e) {}
const v56 = new SharedArrayBuffer(12, o52);
try { v56.grow(-10); } catch (e) {}
