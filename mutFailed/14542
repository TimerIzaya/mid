function f0() {
    const o4 = {
        [0.04435087081382649]: "IGXY",
        __proto__: 0.04435087081382649,
        "b": "IGXY",
        "e": 536870887,
        [536870887]: 0.04435087081382649,
        "b": 0.04435087081382649,
        "g": 536870887,
        ["IGXY"]: "IGXY",
        "h": "IGXY",
        2147483649: 536870887,
    };
    return o4;
}
const v5 = f0();
const v6 = f0();
f0();
const v8 = [-4.0,961.3867560906594,-5.6604106644544565,-1000000000.0,7.832977066017239,-1e-15,Infinity,-1000000000000.0,7.145245829962079,-9.76601335108982];
const v9 = [1000000000.0,1.7976931348623157e+308];
[1000000000000.0,619808.607995423,23885.385836935835,417.6336243693652,-5.0,-6.791820877261888e+307];
class C11 {
    toString(a13, a14) {
        const v15 = v6[v5];
        Object.defineProperty(v8, 512, { writable: true, enumerable: true, get: f0, set: f0 });
        return v15;
    }
    #toString(a17, a18) {
        try {
            a17.#toString(v8, a18, this);
        } catch(e20) {
        }
        a17 + v9;
        return f0;
    }
}
const v22 = new C11();
new v22();
new C11();
new Uint32Array();
new Float64Array();
function f32(a33, a34) {
    return -52577;
}
[NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
class C36 {
    constructor(a38, a39, a40, a41) {
        const t47 = this.unscopables;
        t47();
        a39 >>> a39;
        -0.0 >>> -0.0;
    }
}
new Float32Array();
[3.0,-738.0652501899439,1.4303448242899393e+308,0.9647005996466491,1.7180462742017082e+307];
[0.9815406638516286,121.30534539703694,-5.0,Infinity,-611091.1872133282,0.3052766402808791,0.0009368873469747241];
[0.3692093935150569];
class C53 {
    toString(a55, a56, a57, a58) {
        try { this["throw"](); } catch (e) {}
        const v64 = new Uint8ClampedArray(512);
        new Uint8ClampedArray(798, ...v64, eval());
    }
    constructor(a69, a70) {
        function F71(a73, a74, a75) {
            if (!new.target) { throw 'must be called with new'; }
        }
        typeof arguments;
        for (let i = 0; i < 5; i++) {
            this[this];
        }
    }
}
new C53();
