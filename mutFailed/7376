const v0 = [-128,129,-65536,1073741823,16,268435441,-62710,65536,-9223372036854775807,1305142046];
const v1 = (a2, a3, a4, a5) => {
    function F6(a8, a9, a10, a11) {
        if (!new.target) { throw 'must be called with new'; }
    }
    return a3;
};
const v12 = [65537,2147483649,-37066,-17743,10,2,-1024];
[1073741825,-28509176,6,4294967297];
function F14(a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
}
Math.cbrt(11 - 11);
const v24 = -1.252027415501717e+308 | -32070;
class C28 {
    constructor(a30) {
        ("valueOf").localeCompare(a30, "valueOf");
    }
}
new Int32Array(v24);
v0[3384] %= 10;
v12 >>> Math;
const v36 = (a37, a38, a39, a40) => {
    'use strict';
    return a37;
};
function f41() {
    return f41;
}
const v42 = [1.4598948242971485e+307,5.0,202.50817195072136];
Object.defineProperty(v42, v42, { enumerable: true, set: f41 });
new BigInt64Array(2937);
function f47(a48, a49) {
    const o50 = {
        ...a48,
    };
    return a49;
}
new Uint16Array(2630);
const v54 = [-11,65536,65537];
function f55(a56, a57, a58, a59) {
    v54[1428717040];
    return 11;
}
%OptimizeFunctionOnNextCall(f55);
for (let i63 = 0, i64 = 10;
    (() => {
        try {
            new f47(1000000000000.0, undefined);
        } catch(e68) {
        }
        const v69 = i63 < i64;
        class C70 {
        }
        const v73 = new BigUint64Array(3375);
        let [v74,,v75,...v76] = v73;
        return v69;
    })();
    i63++) {
}
f55();
function f83() {
    let v84 = 1000000000000.0;
    for (const v85 in "getUTCMilliseconds") {
        continue;
    }
    v84--;
    class C92 {
        constructor(a94) {
            const v95 = this.constructor;
            try { new v95(a94, f83); } catch (e) {}
            new Uint16Array(12, -4294967296);
        }
    }
    const v98 = new C92();
    new C92(-4294967296);
    class C100 extends C92 {
        [v98];
    }
    new C100();
}
