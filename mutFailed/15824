const v0 = [1024,-18641,2147483649,9007199254740991,980131815,257,-268435456,5,62562];
const v1 = [1870208673,9223372036854775807,834190068,-128,12,2,-17059,-2147483647,-1632615104];
const v2 = [1,-34253,536870888,9,4294967296,-9007199254740992,15,-4294967295,-15185,1882];
class C3 {
    #f;
    get c() {
        v2[13] = this;
        var b = v2;
        [v0,v1,v2,v2,this];
        [this,[v0,this,v2]];
        return this;
    }
    static [v0] = v0;
}
new C3();
new C3();
new C3();
-2147483647 * -2147483647;
new Float32Array(-2147483647);
const v17 = new Uint32Array(127, v2, Uint32Array, Uint32Array);
v17[31];
Float32Array.prototype = Float32Array;
const v21 = new Float32Array(5);
try { v21.join(Uint32Array); } catch (e) {}
for (let v23 = 0; v23 < 25; v23++) {
    v23 << v23;
    const v25 = [601759695];
    const v26 = [-1449570348];
    function f27(a28, a29, a30, a31) {
        function f32() {
            return a30;
        }
        try { v26["find"](..."find", a31, ...v25); } catch (e) {}
        const v36 = BigInt64Array.constructor;
        try { v36.toString(); } catch (e) {}
        const v38 = v36.call(f32);
        try { v38(); } catch (e) {}
        return a30;
    }
    for (let v40 = 0; v40 < 10; v40++) {
        f27();
    }
}
