const o9 = {
    "execution": "async",
    "type": "minor",
};
gc(o9);
const v11 = new BigInt64Array(1);
const v15 = Symbol.isConcatSpreadable;
o9[v15] = true;
v11[3990224513] >>>= 2;
+v15;
new Int32Array(2);
new Uint8Array(255);
class C23 {
}
const v24 = new C23();
function f26(a27, a28) {
    a28[Symbol.toPrimitive] = Symbol;
    const o30 = {
        "g": a28,
        [C23]: v24,
    };
    return Symbol;
}
f26(Infinity, f26);
f26(-1000000000.0, C23);
