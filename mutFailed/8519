[-343978111,166584537,1273147464,20292,-2147483647,-4294967297,-65537,27420];
[1073741823,-2147483648,-1058973962,-9007199254740991,9223372036854775807,6,1753593568];
[-1024,-65535,-28230,-9007199254740991];
function f6() {
    const v7 = [1000000000.0,-5.576877862296471e+307,1000000000000.0,-311382.1661484719,1000000000.0];
    function f8() {
        return f6;
    }
    for (let i = 0; i < 5; i++) {
        Object.defineProperty(v7, "d", { configurable: true, get: f8, set: f8 });
    }
    const v11 = Reflect.construct(f8, [], f6);
    const v12 = [270784.1718121499,f6,Reflect];
    [270784.1718121499,[-1000000.0,270784.1718121499,v12,270784.1718121499,v12],v11,Reflect];
    class C15 {
    }
    return f6;
}
class C17 {
}
class C18 {
}
new C18();
new Int32Array(1);
new BigUint64Array(4);
const t25 = "undefined";
t25["256"] <<= 4.0;
Object.defineProperty([-1679361633,-1679361633,-1679361633], 130, { value: -1679361633 });
new Int8Array(406);
const o34 = {
    "get": Symbol,
};
Object.defineProperty("256", "h", { writable: true, get: f6, set: f6 });
[2.2250738585072014e-308,-1.7976931348623157e+308,1000000000.0,0.2765643918120646,3.5468344605843765,-7.199101777327099,0.46846015653556927,1000000000000.0];
[693.2638381455615,0.28588096540190966,0.768280130131484,179.83529389602268];
[-1.4614845522411307e+308,3.0,315568.0955288033];
new BigUint64Array(2247);
new Int16Array(3902);
new Int16Array(4);
const v49 = new Map();
class C51 {
}
const v52 = C51.constructor;
try { v52(Float32Array, Uint8Array, -9007199254740992, v49); } catch (e) {}
const v55 = [1000000000000.0,0.9960435535667199,1000.0,-1.6540773985510377e+308,0.3018853678306006,410.9648048644401,-6.0085450863810586,-529.8311372035074];
class C58 extends Array {
    2 = 64;
}
new C58();
const v60 = `
    function f61() {
        return f61;
    }
    let {...v62} = v55;
    try {
        v62.fuck(v62);
        Array(11);
        1073741824 & 1073741824;
    } catch(e69) {
    }
`;
let v71 = -6.50438168344124;
v71 **= v71;
let v72 = 0;
while ((() => {
        const v74 = v72 < 10;
        v74 || v74;
        return v74;
    })()) {
    for (let v76 = 0; v76 < 5; v76++) {
        const v77 = [-3.0,4.0,1.7381830731777672e+308,-Infinity,0.053627216611518036];
        v77.toLocaleString(f6, v77).includes(v76);
        for (let [i83, i84] = (() => {
                10 >>> 10;
                return [0, 10];
            })();
            i83 < i84;
            i83++) {
        }
    }
    v72++;
}
eval(v60);
