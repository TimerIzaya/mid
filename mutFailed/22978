const v2 = new Array(129);
function f3() {
    return 129;
}
/C\x0f((?<a>.)\k<a>)/gusy;
const v5 = /(lfoo(?<!bar)baz(?:ab){4,7}?)/gvs;
const v6 = /5/gvdi;
const v7 = [Array,v6,v6];
let v8 = [129,v7];
const v9 = [Array,129,Array];
v2.DataView;
const v12 = [];
class C13 {
    constructor(a15, a16, a17) {
        const v18 = super[Array];
        const o22 = {
            "execution": "async",
            "type": "major",
        };
        gc(o22);
        function f24(a25, a26, a27) {
            v12.copyWithin();
            try {
                f24(-268435456, 0.6683462416314783, [-268435456]);
            } catch(e33) {
            }
            const v34 = this >> -268435456;
            v34 >> this;
            return -v34;
        }
        return gc;
        super.c = v7;
        v8 ^= v18;
        const o38 = {
        };
        try {
            o38.c = f3;
        } catch(e39) {
        }
        try {
            const o40 = {
            };
            o40.c = f3;
            o40.f = gc;
        } catch(e41) {
        }
        try {
            const o42 = {
            };
            o42.c = f3;
            o42.f = gc;
            o42.b = v18;
        } catch(e43) {
        }
        try {
            const o44 = {
            };
            o44.c = f3;
            o44.f = gc;
            o44.e = v8;
        } catch(e45) {
        }
        f24(this, this, a15);
    }
}
let v47;
try { v47 = new v5(); } catch (e) {}
v47[v9] = this;
v9[-1];
try {
    v12.with(129, -1.6593852767606769e+308);
} catch(e51) {
}
