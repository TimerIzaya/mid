const v3 = [1073741823,-820399316,16,-9,268435456,255,16,9223372036854775807,7,3];
const v4 = [-536870912];
const v5 = [-128,2];
const v6 = [-1.7976931348623157e+308,-1000.0,-1.0];
const v7 = [-9.734800259810656,-1000000000.0,3.0,138544.52297885995,1000000.0];
const v8 = [559.5765929495315,-901350.6461308032,3.0,206570.57751986664,-3.0,-0.0,0.7998968633989081,0.47751753234509975,5.28533381630138e+307,3.0];
class C9 {
    constructor(a11, a12, a13, a14) {
        a13[v7] = v5;
        let v16 = 62335;
        const v18 = a14 + a14;
        Math.cbrt(a14);
        Math.sqrt(876757957);
        Math.cos(v16);
        v16++;
        a14--;
        v6 ^ v18;
    }
    [-4294967297];
    [v8];
    static [v5] = -4294967297;
    static #b;
    3675 = v6;
    static d;
}
const v25 = new C9(-4294967297, v4, -9351, -9351);
new C9(-4294967297, v4, v3, 64310);
const v27 = new C9(-9351, v7, v4, -9351);
const o30 = {
    [-2]: 4.0,
};
let v34 = !v27;
Math.exp(v4);
const v36 = v34 | o30;
Math.expm1(o30);
const v38 = Math.imul(v4, v4);
const v39 = v34++;
!0.363179665297653;
const v44 = new Float32Array();
const v46 = new Uint8Array(v44, Uint8Array, Uint8Array);
var b = -4294967297;
v25[1073741823] = 0.26565022471474475;
const o47 = {
};
try {
    o47.a = v38;
} catch(e48) {
}
try {
    const o49 = {
    };
    o49.a = v38;
    o49.b = v39;
} catch(e50) {
}
try {
    const o51 = {
    };
    o51.a = v38;
    o51.b = v39;
    o51.c = o30;
} catch(e52) {
}
try {
    const o53 = {
    };
    o53.a = v38;
    o53.b = v39;
    o53.d = v36;
} catch(e54) {
}
v44[-1e-15] = Uint8ClampedArray;
class C57 extends Float32Array {
    constructor(a59, a60, a61) {
        super(a61);
    }
}
new C57(1, v46, Float32Array);
