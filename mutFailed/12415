function f6(a7, a8, a9, a10) {
    for (let v12 = 0; v12 < 25; v12++) {
        ("p").codePointAt(Uint8ClampedArray);
    }
    function f15() {
        return f15;
    }
    let v17 = -2.220446049250313e-16;
    class C20 {
    }
    const v21 = new C20();
    const v22 = [v17];
    const v24 = [v17,[8]];
    const v25 = ("number").slice();
    const v27 = ("1G")["trimEnd"]();
    function f28(a29, a30, a31) {
        const o36 = {
            ...a31,
            "g": "number",
            m(a33, a34) {
                v17++;
                return v17;
            },
            268435441: v21,
        };
        return o36;
    }
    const v37 = f28(v22, v25, v24);
    v37[2597153494] = v37;
    f28(v27, v27, v37);
    const o53 = {
        "f": "symbol",
        2147483647: "1000",
        2864001281: a10,
        ..."number",
        "g": a8,
        ..."1000",
        "b": a9,
        5: "number",
        set e(a40) {
            const t40 = "constructor";
            t40["1000"] = a8;
            new Int32Array(2917);
            ["-536870912","replace",[/D[\p{Script_Extensions=Mongolian}&&\p{Number}]*/udisy]];
        },
    };
    return a9;
}
const v54 = f6("global", "constructor", "number", "constructor");
const v55 = f6("number", "symbol", "number", "global");
const v56 = f6("1000", "symbol", "symbol", "symbol");
class C57 extends f6 {
    static {
        ("split" < this).match(this);
        function F61() {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.g = 1489843090;
            } catch(e64) {
            }
        }
        try { ("-268435456").codePointAt(F61); } catch (e) {}
        function F67(a69, a70) {
            if (!new.target) { throw 'must be called with new'; }
            const v71 = this.constructor;
            try { new v71("-268435456", a70); } catch (e) {}
            a69.prototype;
            a70.arguments = a70;
        }
        const v74 = new F67(F67, F67);
        v74?.toLocaleString;
    }
    ["global"];
    constructor(a77, a78) {
        super("split", "number", "global", "symbol");
        const v83 = 9007199254740991n * 9007199254740991n;
        v83 + v83;
        class C85 {
            set h(a87) {
            }
            b;
        }
        new C85();
    }
    static #a = "constructor";
    #f;
    toString(a90, a91) {
        this.constructor(a90);
        class C96 {
            static 7;
            static [-1] = "string";
            #n(a98) {
                a98 = this;
                a98.e >>>= -35417;
                const o102 = {
                    "execution": "sync",
                    "type": "major",
                };
                gc(o102);
                return this;
            }
        }
        -this;
    }
    valueOf(a106, a107, a108) {
        let v109 = 10;
        for ((() => {
                function F110(a112, a113) {
                    if (!new.target) { throw 'must be called with new'; }
                }
            })();
            v109--;
            (() => {
                function f116() {
                    return -2147483648;
                }
                const v117 = [286977509,536870889,-380982641,1073741825,-14496,-9223372036854775807];
                const v118 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
                function f119(a120, a121, a122, a123) {
                    const v124 = /(?:a*)+q(?<a>.)/guds;
                    v124.dotAll = v124;
                    function f125(a126) {
                        v118.constructor;
                        a126.constructor.$2;
                        return a123;
                    }
                    for (let [i133, i134] = (() => {
                            v117.toLocaleString(f125, v124);
                            return [0, 10];
                        })();
                        (() => {
                            const v135 = i133 < i134;
                            !v135;
                            return v135;
                        })();
                        i134--) {
                        for (let v142 = 0; v142 < 5; v142++) {
                            f125(v124);
                        }
                    }
                    return a122;
                }
                f119();
            })()) {
        }
    }
    static 2 = "1000";
}
const v145 = new C57(v56, v54);
const v146 = new C57(v55, v145);
new C57(C57, v145);
const v149 = new Float64Array();
function f150() {
    for (let v151 = 0; v151 < 10; v151++) {
        const v153 = Math.expm1(v149);
        v153 >> v153;
    }
}
f150();
%OptimizeFunctionOnNextCall(v146);
f150();
