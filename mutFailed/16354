/[^123]/vsy;
function f1() {
    for (let v2 = 0; v2 < 5; v2++) {
        for (let v3 = 0; v3 < 5; v3++) {
            Math.atanh(v3);
        }
    }
    return f1;
}
/\p{Script=Greek}/gudimsy;
/(?:ab)e[\cZ]/gum;
const v10 = new Array(73);
const v13 = new Set();
let v15 = "1073741824";
const v19 = new BigUint64Array(937);
new Uint8ClampedArray(v13);
const v25 = new Int32Array(256);
const v27 = ["268435441","268435441",Set];
function f28(a29) {
    v15 = "setPrototypeOf";
    a29 &&= a29;
    return v10;
}
v27.toString = f28;
[v27,v27];
function F31(a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    let v35;
    try { v35 = this.propertyIsEnumerable(v27); } catch (e) {}
    v35[2];
    this.valueOf();
    const v38 = v25.constructor;
    try { new v38(a33); } catch (e) {}
    a33.lastIndexOf();
}
const t35 = 256;
new t35("268435441");
new F31(v19);
