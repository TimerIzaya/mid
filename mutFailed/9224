let v2 = -65537;
class C3 {
    static valueOf(a5, a6) {
        ({"b":a6,...v2} = this);
        try { a6(-4096); } catch (e) {}
        for (let v8 = 0; v8 < 32; v8++) {
            this["p" + v8] = v8;
        }
        return a5;
    }
    [v2];
    #d;
    [-9007199254740991];
    #h = -9007199254740991;
}
let v11;
try { v11 = new C3(); } catch (e) {}
C3.length = C3;
let v12;
try { v12 = v11.getInt8(v11); } catch (e) {}
function f13() {
    return v12;
}
v11[10] = f13;
const v14 = new C3();
const v15 = v14?.constructor;
let v16;
try { v16 = new v15(); } catch (e) {}
const v17 = v16?.constructor;
let v18;
try { v18 = new v17(); } catch (e) {}
const v19 = new C3();
const v20 = v19?.constructor;
let v21;
try { v21 = new v20(); } catch (e) {}
const v22 = v21?.constructor;
try { new v22(); } catch (e) {}
v18 & -4096;
let v25;
try { v25 = new v21(); } catch (e) {}
~C3;
v25[-4096] *= -4096;
const v27 = v12;
const v28 = new C3();
const v29 = v28?.constructor;
try { new v29(); } catch (e) {}
const v31 = v28?.constructor;
try { v31(); } catch (e) {}
try { new v31(); } catch (e) {}
const v34 = [v28,v28,C3,-4096,-9007199254740991];
const v37 = v34[Symbol.unscopables];
try { new v17(v37, v18, v29, v15); } catch (e) {}
try {
    new f13();
} catch(e40) {
}
const v41 = [v14];
const v42 = v41?.reverse;
try { new v42(); } catch (e) {}
const v45 = v41[0]?.constructor;
try { new v45(); } catch (e) {}
const v47 = [-9007199254740991,v34,C3];
const v48 = [-1.7976931348623157e+308,1000000000000.0,2.0,-1.0,-5.7530689795332e+307,-1.7976931348623157e+308,1.7212460760642185e+308,402212.25837325025,-873.4841618282949,359138.4798970402];
const v49 = [4.0,-983.1766288309954];
try { v49.findLast(v49); } catch (e) {}
const v51 = v49?.filter;
try { new v51(v47); } catch (e) {}
const v53 = [1000000000000.0,-1.8364224616164222,-1e-15,-2.457074232784955e+307,229.06793371043727,1.0,1.0,-4.2138287580213103e+307,488195.1999580744];
const v54 = [v47,v53,v53,v47,v28];
try { v54.findLastIndex(v28); } catch (e) {}
const v56 = [v34,v14,v54,v34];
try { v56.reduce(v56); } catch (e) {}
[-4096,v56,v56,v48,v56];
const v60 = new gc();
const v61 = v60?.__defineGetter__;
try { new v61(gc, v56); } catch (e) {}
