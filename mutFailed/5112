[1.0,-1e-15,0.0];
[-3.0,636.4171037158387,1000000000.0,1000.0,-1000000.0,8.258987286377532e+307];
[488588.0902405814,1000000.0,365570.70422190125,66852.99052118254,NaN,8.225316281845366,8.633339197142146,-8.016762573509375,-5.0];
/[^Ta\D1]/udm;
/[f(?:a+)*IRa*b|c]/umy;
new Float64Array(1073741824);
function F10(a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = -1.0458776802029855e+308;
    this.e = a12;
}
const v14 = new F10(-559.2515874252856);
const v15 = new F10(-559.2515874252856);
const v16 = [v14,-559.2515874252856,v15,v15];
([v16,v16,v16])[v16];
/a*b|c(?:ab|cde)/gvimy;
const v21 = new Set();
function f23(a24, a25, a26, a27) {
    function f29() {
        const o37 = {
            84: arguments,
            set b(a32) {
            },
            ["Vre"](a34, a35) {
                super[f29];
            },
        };
        return f23;
    }
    f29();
    %OptimizeFunctionOnNextCall(f29);
    return a26;
}
for (let v39 = 0; v39 < 5; v39++) {
    f23();
}
new Uint16Array(64);
let v45 = new BigInt64Array(2696);
("6Ct").normalize();
const v49 = [-9.109766292519199,-1.3811947064786667e+308,0.09110445091766706,5.0,-385647.03832885576,0.2888431306471019];
try { v49.filter(59890n); } catch (e) {}
v45 *= Symbol.toPrimitive;
const v54 = [-991034.5596759731,179.71649176762253,115582.55190338776,-1000000.0];
async function f55(a56, a57) {
    'use strict';
    a57[9] = v54;
    return -559.2515874252856;
}
new Float64Array(3952);
const v60 = [-503399.81061701436,0.07820891042711386,-100.04924869632453,-Infinity];
const v62 = [[-1e-15,-4.547098672084515,6.731189859503068,1000.0,1000.0,414.1111077300918,567.5737904015757],v60,v60];
function f63(a64, a65) {
    function f66() {
        return f66;
    }
    const v67 = /(?:a*)+q(?<a>.)/guds;
    function f68(a69) {
        const v70 = a69.constructor;
        const v72 = new Uint8ClampedArray();
        const v74 = v72 ^ 3;
        try { v70(a69, f66); } catch (e) {}
        class C76 {
        }
        return v74;
    }
    for (let i79 = 0, i80 = 10; i79 < i80; i80--) {
        for (let v87 = 0; v87 < 50; v87++) {
            f68(v67);
        }
    }
    return a64;
}
class C91 {
}
for (let v92 = 0; v92 < 5; v92++) {
    function f93() {
        const v97 = Symbol.toPrimitive.description.codePointAt(C91);
        return v97 >> v97;
    }
    f93();
    %OptimizeFunctionOnNextCall(f93);
}
const v100 = [v62];
const o108 = {
    "arguments": v100,
    "type": "function",
    "type": "function",
    [v21]: v21,
    get a() {
        class C102 {
            constructor(a104, a105) {
            }
        }
        eval();
    },
};
new Worker(f63, o108);
