const v0 = [-4096,-256];
const v1 = [-65535,-11];
const v2 = [10000,6,36482,1073741824,2147483648];
const v6 = [6];
const v7 = [v1,1,6,6,v6];
const v11 = Math.log(-136801.64857722633);
v0 / -136801.64857722633;
v6 & v6;
const v14 = [v7,6];
class C15 {
    static c;
    [v7] = v2;
    static 4;
    static p(a17, a18, a19, a20) {
        try { new a18(v14, this, v7, a17); } catch (e) {}
        this.c &&= a20;
        Math.sin(-4.0);
        Math.floor(536870912);
        Math.imul(536870912, 536870912);
        return a19;
    }
}
const t22 = 1;
new t22();
const v29 = new C15();
new v11();
function F31(a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v1;
    } catch(e35) {
    }
    try {
        this.h = v29;
    } catch(e36) {
    }
    try {
        this.b = a33;
    } catch(e37) {
    }
}
new F31(v14, v29);
const v39 = new F31(v6, v2);
try { v1.reduceRight(v39, 6); } catch (e) {}
let v42 = 880643466;
Math.round(v42);
const v45 = ++v42;
-268435456 & v2;
v45 % v2;
Math.min(v42);
Math.random();
new F31(v2, v7);
const v51 = [-3.0,4.0,1.7381830731777672e+308,-Infinity,0.053627216611518036];
function f53(a54, a55, a56, a57) {
    const o59 = {
        get c() {
        },
    };
}
[f53(16, v51),...v51];
