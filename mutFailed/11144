const v0 = [];
class C2 extends Int32Array {
}
function f3() {
    -1781241988 > -1781241988;
    const o15 = {
        "e": -1781241988,
        8: -1781241988,
        "c": -1781241988,
        ..."g",
        ..."g",
        [1](a9, a10) {
            Object.defineProperty("g", "d", { writable: true, value: "n" });
            let v14;
            try { v14 = ("construct").concat(f3, Uint8ClampedArray, this); } catch (e) {}
            v14["n"] = Uint8ClampedArray;
        },
    };
    return o15;
}
function F17(a19, a20, a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    a19.propertyIsEnumerable();
}
const v24 = [10,-9007199254740991,512,7];
function f25(a26) {
    const o27 = {
        ...v24,
    };
    return f25;
}
new Uint32Array(26);
function f30(a31, a32, a33) {
    ~a33;
    const o35 = {
        "e": v0,
        4: Uint32Array,
    };
    return o35;
}
try { f30(f25, Int32Array, f25); } catch (e) {}
const v37 = f30(v24, Int32Array, 26);
const v39 = f30(F17, Uint32Array, f30(C2, v37, v37));
const v42 = new Uint32Array(2719);
const v44 = new Date();
v44.toLocaleDateString(Date);
class C49 {
    4;
    constructor() {
        this[2658944561];
        super.f >>= this;
    }
    b = -2.2250738585072014e-308;
    n(a53, a54) {
    }
    2658944561 = -2.2250738585072014e-308;
    static 134;
    #c = -65535;
    static [-2.2250738585072014e-308] = -2.2250738585072014e-308;
    toString(a56, a57, a58, a59) {
        try {
            f3();
        } catch(e61) {
        }
        return -65535;
    }
}
const v62 = new C49(2142097854, -2.2250738585072014e-308);
const v63 = new v62(-2.2250738585072014e-308, v62);
Int8Array.BYTES_PER_ELEMENT = Int8Array;
const v66 = new Int8Array(1363);
try { v66.reduce(26); } catch (e) {}
function f68(a69, a70, a71, a72) {
    a72.prototype = a72;
    const o85 = {
        [2719]: v42,
        "a": a72,
        ...v66,
        get g() {
            v62.constructor;
            const o79 = {
                "h": true,
                ...true,
                get c() {
                    return this;
                },
                set d(a78) {
                },
                "d": true,
            };
            a70 = a69;
            const v81 = (v66 | 1363) - a69;
            try { a72(a69, a69, v81, 1363, a72); } catch (e) {}
            a72[1363] /= v81;
            const v84 = Symbol.split;
            a72[v84] = Int8Array;
            return v84;
        },
        __proto__: v24,
    };
    return o85;
}
f68(1363, 1363, 1363, Int8Array);
const v87 = f68(1363, 2719, 26, v0);
v87[2] = v87;
const v88 = f68(2719, 2719, 2719, v87);
v88[2] = v88;
class C89 {
}
const v90 = new C89();
try { v90.propertyIsEnumerable(Date); } catch (e) {}
`match${v90}-20124`;
try { v37.getOwnPropertyNames(1363, f68, Int8Array); } catch (e) {}
try {
    v39.toString = f68;
} catch(e94) {
}
for (const v95 of v63) {
    class C96 {
    }
    const v97 = new C96();
    const v98 = v97?.constructor;
    try { new v98(); } catch (e) {}
    this.__proto__ = v97;
    const o102 = {
        get h() {
        },
    };
    function F103(a105, a106, a107) {
        if (!new.target) { throw 'must be called with new'; }
        const v108 = this.constructor;
        try { new v108(); } catch (e) {}
        o102.h = o102;
        try {
            this << o102;
            [-0.0,0.35331453774891175,0.0,171.67492280642023,0.015915737133018082,-390268.7701156768,-1000000000000.0,-0.0,5.0,-2.220446049250313e-16];
            const v112 = [607.0076449847468,-818.8860494127688];
            v112[0];
            v112[2];
            v112[3];
        } catch(e116) {
        }
    }
}
