const v4 = -531.2014152698227 - -531.2014152698227;
0.36346098761592993 * 0.36346098761592993;
function F8(a10, a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    const v13 = this?.__lookupGetter__;
    try { new v13(v4); } catch (e) {}
    const v15 = a10 + a10;
    a11 >> a11;
    const v17 = this?.__defineSetter__;
    try { new v17(v4, a10); } catch (e) {}
    try { new v17(a11, a12); } catch (e) {}
    -a11;
    try {
        this.f = a10;
    } catch(e21) {
    }
    try {
        this.d = 0.36346098761592993;
    } catch(e22) {
    }
    try {
        v15.b = -268435456;
    } catch(e23) {
    }
}
new F8(-7485, -531.2014152698227, -7485);
const v25 = new F8(-268435456, 0.36346098761592993, -531.2014152698227);
v25.e = F8;
new F8(-268435456, -531.2014152698227, v25);
/\p{General_Category=Decimal_Number}/udsy;
const v28 = /((?:ab|cde)e)/msy;
v28.dotAll = v28;
const v29 = /[\c1][a\D?]/gisy;
try { v29.strike(); } catch (e) {}
let v34;
try { v34 = ("function").fontcolor(v25); } catch (e) {}
const v35 = v34?.lastIndexOf;
try { new v35(-531.2014152698227); } catch (e) {}
260330366 >= 260330366;
Float32Array.prototype = Float32Array;
try { new Float32Array(-531.2014152698227, -531.2014152698227, F8); } catch (e) {}
const v41 = new Float32Array(260330366);
v41.byteOffset = v41;
-2582;
const v45 = new v35(2582);
try { v45.every(v45); } catch (e) {}
