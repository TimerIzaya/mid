let v2 = "c";
class C3 {
    constructor(a5, a6) {
        let v4 = this;
        const v7 = v4?.constructor;
        try { new v7("apply", "apply"); } catch (e) {}
        a5[0] = a5;
        const v9 = a6?.toLocaleUpperCase;
        try { new v9(); } catch (e) {}
        try {
            try { ("f").fontcolor(a5); } catch (e) {}
            ("-37964").replaceAll("bigint", "f");
            class C15 {
                o(a17, a18, a19, a20) {
                    class C21 {
                    }
                }
            }
            C15.name = C15;
        } catch(e22) {
            e22.message;
        }
        ({"d":v4,"length":v2,} = "-37964");
        a5 != a6;
    }
    static set a(a26) {
        for (let v27 = 0; v27 < 32; v27++) {
            const t27 = "-37964";
            t27["p" + v27] = v27;
        }
    }
}
const v30 = new C3(v2, v2);
const v31 = new C3(v30, v30);
const v32 = new C3("-37964", v2);
const v33 = [255,8,15,285240990];
const v34 = [14,-10,1073741823,1,1073741824,9,4294967295,21321,-8039,46046];
const v35 = [4,16,2,4294967295,16,-9223372036854775807];
function F36(a38, a39, a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
    a40 >>> a40;
    a41.length;
    try {
        this.h = a38;
        try { undefined.toString(); } catch (e) {}
        function F46(a48, a49) {
            if (!new.target) { throw 'must be called with new'; }
            const v50 = this?.__lookupSetter__;
            try { new v50(this); } catch (e) {}
            a48--;
        }
    } catch(e53) {
    }
    try {
        this.e = a38;
    } catch(e54) {
    }
}
F36.caller = F36;
new F36(v33, v34, v2, v31);
new F36(v35, v31, "apply", v33);
const v58 = Symbol.toPrimitive;
Symbol.for(v58.description);
v30[v34] = v2;
try { ("1024").strike(); } catch (e) {}
~47108;
const v71 = [];
function f72(a73, a74) {
    new Uint8Array(47108);
    for (const v77 in "apply") {
    }
}
v71.toString = f72;
new F36(v34, v30, v34, v32);
9 << 9;
new WeakSet();
class C87 {
    constructor(a89, a90, a91, a92) {
        try { this.n(v58, v33); } catch (e) {}
        try { a90.bind(this); } catch (e) {}
        -a91;
        a92 - a92;
        try { gc(); } catch (e) {}
        const o99 = {
        };
        o99.execution = a89;
        gc(o99);
    }
    n(a102, a103) {
        let v104 = 10;
        for (;
            v104--;
            (() => {
                let v108 = -451660.64848032314;
                Math.abs(v30);
                const v110 = --v108;
                Math.log2(v30);
                Math.pow(v110, 9);
                v110 >> v108;
            })()) {
            try {
            } catch(e114) {
            }
        }
    }
}
new C87(13, C87, 13, 13);
