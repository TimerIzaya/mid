const v1 = new WeakSet();
class C2 {
    set b(a4) {
        async function f5(a6, a7) {
            const v10 = new Array(11);
            await v10;
            return this;
        }
        f5(a4, f5);
    }
    b;
    static #e;
    static [WeakSet] = v1;
    4;
}
const v13 = new C2();
const v14 = new C2();
const v15 = new C2();
for (let i17 = 0; i17 < 9; i17++) {
    try { v13.p(i17, i17, i17, C2, v14); } catch (e) {}
    c = v1;
}
const v27 = [v1,536870912,v14,-55797,-55797];
[v1];
const v29 = [1124847618,v1,-55797];
class C30 extends WeakSet {
    static get e() {
        try {
            new WeakSet(v1);
        } catch(e33) {
        }
        return 536870912;
    }
    5;
    constructor(a35, a36) {
        super(v13);
        let v37 = 0;
        do {
            v1[C2];
            v13.__proto__;
            v37++;
        } while (v37 < 2)
    }
}
const v43 = new C30(C2, v27);
new C30(v15, v43);
new C30(v15, v29);
class C52 {
    set h(a54) {
        a54[-12] = -9200;
        0 instanceof a54;
        129 !== this;
        let v57 = ~-9200;
        v57 = 129;
        const t53 = this[5];
        const v59 = delete t53?.[12];
        try {
        } catch(e60) {
        }
        const v63 = new Int8Array(520);
        for (let v64 = 0; v64 < 5; v64++) {
            v63.indexOf(v64);
        }
        super.g = v59;
    }
    h;
    6;
    #a;
    f = -4;
    8;
    [-12];
}
new C52();
new C52();
new C52();
gc();
function F71(a73, a74) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e75) {
    }
}
class C76 extends C52 {
    static {
    }
}
const o78 = {
};
for (let i = 0; i < 10; i++) {
    /[xyz{1,}(O)]/udis;
}
try {
    function f82() {
    }
} catch(e83) {
}
const o84 = {
};
try {
    const o85 = {
    };
} catch(e86) {
    function f87(a88, a89, a90, a91) {
        const o95 = {
            n(a93, a94) {
            },
        };
    }
}
try {
    const o96 = {
    };
} catch(e97) {
}
try {
} catch(e98) {
    function f99(a100, a101, a102, a103) {
    }
}
