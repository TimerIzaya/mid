const v2 = new BigInt64Array(2798);
([Infinity,-686.9856326146617,0.47369378110968274,-7.24289104755818]).includes(...[-1000.0,-2.2250738585072014e-308,511.99933163650917,-386.8372768814137,Infinity]);
function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    const v12 = this.constructor;
    v12.bind(F8, a10, v12, a10);
    try { new v12(); } catch (e) {}
    a11 / a11;
}
try { new BigUint64Array(v2, 2798, 2798); } catch (e) {}
const v17 = new BigUint64Array(644);
try {
    new BigUint64Array(7);
} catch(e20) {
}
const v23 = new Uint8Array(1968);
function f24(a25) {
    class C26 {
    }
    const v28 = new Int8Array(C26, Int8Array, Int8Array);
    v28.reverse();
    return v28.buffer;
}
v23.toString = f24;
const v31 = /(x)(x)(x)\1/uis;
v31[Symbol.toPrimitive] = f24;
function f34(a35, a36, a37, a38) {
    const o45 = {
        2: a37,
        __proto__: a38,
        [v31](a40, a41, a42, a43) {
            super.test();
        },
    };
    return a35;
}
f34();
f34();
f34();
65535 ^ 65535;
function f53(a54, a55) {
    const o71 = {
        [v23]: a55,
        [268435441]: 644,
        0: 12,
        64: 65535,
        6: 65535,
        ...v23,
        [v17]: BigUint64Array,
        [v2](a57, a58, a59, a60) {
            for (let v61 = 0; v61 < 32; v61++) {
                let v63 = 0;
                do {
                    try {
                        this.toString = f53;
                    } catch(e64) {
                    }
                    v63++;
                } while (v63 < 2)
                this["p" + v61] = v61;
            }
            try {
                v2.length = 2;
            } catch(e70) {
            }
            return 2798;
        },
    };
    o71[1550];
    return o71;
}
const v73 = f53(2798, 1968);
f53(2798, 644);
f53(1968, 12);
Map.f = v17;
Map.f = Map;
const v77 = new Map();
try { v77.forEach(v73); } catch (e) {}
const v79 = v77.values();
try { v79.next(); } catch (e) {}
let v81;
try { v81 = v79.next(); } catch (e) {}
v81.value = v81;
268435440 & 268435440;
new Uint8Array(268435440);
