let v1 = -2147483649n;
class C6 extends Int8Array {
    [12];
}
new C6(1564);
class C8 {
    [-40952n] = v1;
    static #n(a10) {
        function f11(a12) {
            return a12;
        }
        class C13 extends f11 {
        }
    }
    1782 = 1073741824n;
    static #f;
    #a;
    static m(a15) {
        ({"a":v1,"h":v1,} = this);
    }
    static [1073741824n] = v1;
    4259938026;
    constructor(a17, a18, a19) {
        a18.#a;
    }
    static #b;
    9 = v1;
    valueOf(a22) {
        const v23 = a22 !== this;
        if (v23) {
            v23 * this;
        } else {
            [v23,-40952n];
            [this,1073741824n,1073741824n,[a22,v1,v23]];
        }
        return this;
    }
}
const o29 = {
    "type": 137722928n,
};
function F30(a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
}
const v34 = new F30();
typeof v34 === "number";
new C8();
new C8();
new C8();
for (let v48 = 0; v48 < 5; v48++) {
    function f49() {
        const v51 = ("c").toLowerCase();
        const v52 = 1864489360 << v51;
        class C53 {
        }
        new Uint8ClampedArray(1);
        v52 & v52;
        return v51;
    }
    f49();
    %OptimizeFunctionOnNextCall(f49);
}
