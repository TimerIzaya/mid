const v4 = new Uint16Array([34352,4,-9223372036854775808,1092764849,-2147483647,-1162070362,-4294967297,8,-591755449]);
const t1 = "-1100026571";
t1.e = v4;
function F5(a7, a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
}
const v11 = (a12, a13, a14, a15) => {
    'use strict';
    return a12;
};
class C16 {
}
class C17 {
    constructor(a19) {
        let v18 = this;
        try {
            --v18;
        } catch(e21) {
            try { e21.valueOf(v18, e21, "-1100026571", "-1100026571"); } catch (e) {}
        } finally {
            super[v18];
        }
    }
    static [-16] = -16;
    static 65535 = "-1100026571";
    /*
    constructor(a25) {
        const v26 = this.constructor;
        try { new v26(a25, this); } catch (e) {}
        ("-1100026571")["search"](..."-1100026571", ..."search", ..."search", a25, ..."search");
    }
    */
    static #h = "-1100026571";
    [-16];
}
const v30 = new C17("-1100026571");
new C17(v30);
function f32() {
}
let v34 = 1000000000000.0;
const v35 = v34--;
let v37 = 257828.6336153492;
v37--;
class C40 {
    static #m(a42) {
    }
    constructor(a44) {
        const v46 = new Float32Array();
        try { v46.entries(); } catch (e) {}
        const v48 = new Uint16Array(12, -4294967296, v35);
        new Float32Array(v48, -4294967296);
    }
}
const v50 = new C40(v37);
class C51 extends f32 {
    [v50];
    constructor(a53, a54) {
        const v55 = this.constructor;
        try { new v55(); } catch (e) {}
        this[-16] >>>= -16;
    }
    /*
    constructor(a58, a59, a60) {
        super();
        super.f = a58;
    }
    */
}
new C51();
new C17("-1100026571");
-256n >> -256n;
function f65() {
    const o70 = {
        8: 0.043152456200264866,
        get a() {
            Math.acos(0.043152456200264866);
        },
    };
    return o70;
}
f65();
new BigUint64Array(64);
new BigUint64Array(129);
new Float32Array(3);
class C85 {
}
function f86(a87, a88) {
    function f89(a90) {
        return arguments;
    }
    const v92 = f89(f86, a87, a87, a88);
    const o93 = {
        ...v92,
    };
    return o93;
}
f86();
f86(-1000000000.0, C85);
