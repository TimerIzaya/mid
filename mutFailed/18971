const v2 = new BigInt64Array(1);
2 >= 2;
new Int32Array(2);
const v9 = new Int16Array(1);
const v13 = [536870888,15,BigInt64Array,536870888,v2];
let v14;
try { v14 = v13.copyWithin(v13, v13); } catch (e) {}
const v15 = [v9,v13,Int32Array,536870888];
v15[1] = v15;
[-4294967297];
let v18 = 4.0;
const v21 = new Date();
v18 **= v18;
-818878.473853753 - -818878.473853753;
const o28 = {
    set d(a25) {
        this[a25]();
    },
};
class C29 {
    constructor(a31) {
        o28.d = a31;
    }
}
try { v21.toString(); } catch (e) {}
try { WeakSet.toString(); } catch (e) {}
const v35 = new WeakSet();
const v37 = new Map();
let v40 = -8n;
v40--;
class C42 {
    e;
    a;
    static {
        1.4461402843242492 + 1.4461402843242492;
        for (let v49 = 0; v49 < 50; v49++) {
            v49 / v49;
            0 < v49;
            class C52 extends this {
            }
            C52.b = C52;
            [601759695];
            const v54 = [1073741824,1073741823,1376142744,1073741825];
            function F56(a58, a59) {
                if (!new.target) { throw 'must be called with new'; }
                a58 / a59;
                v54.a = 10;
            }
            const v61 = new F56(522675525n);
            const v62 = v61?.constructor;
            try { new v62(v61, -13); } catch (e) {}
            const v64 = new F56(522675525n);
            const v65 = v64?.constructor;
            try { new v65(Date, 522675525n); } catch (e) {}
            for (let v67 = 0; v67 < 10; v67++) {
            }
            C42++;
        }
    }
}
const v69 = new C42(v35, -8.576381465737261e+307);
new C42(v21, -818878.473853753, v69, -11n);
const v71 = new C42(v40, v18, v37, -11n);
v71.e = v71;
function f72() {
    return BigInt64Array;
}
Infinity % Infinity;
-4 / -4;
class C81 {
    static #valueOf(a83, a84, a85) {
    }
    set e(a87) {
    }
}
C81.length = C81;
const v88 = new C29();
let v90 = -946345318n;
v90--;
const t78 = [];
t78.valueOf = f72;
%PrepareFunctionForOptimization(v14);
Uint32Array.e = Uint32Array;
const v96 = new Uint32Array(9);
try { v96.toLocaleString(); } catch (e) {}
v35[4] = 5;
try {
} catch(e99) {
}
try { v88.o(v88, 5); } catch (e) {}
