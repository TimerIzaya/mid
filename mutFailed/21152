let v0 = -7;
class C3 {
    static get c() {
        +v0;
        try {
            this.toString = v0;
        } catch(e6) {
        }
        return -1286547454;
    }
    static get g() {
        function f8(a9) {
            function f11(a12) {
                this[Symbol.isConcatSpreadable];
            }
            a9.onmessage = f11;
            this + this;
            v0 = a9;
        }
        const v19 = ["function"];
        const o20 = {
            "arguments": v19,
            "type": "function",
        };
        new Worker(f8, o20);
        return this;
    }
}
const v22 = new v0();
const v23 = new v22();
new v22();
new Uint32Array(-1286547454);
new Int32Array(1024);
new Int32Array(255);
new Set();
[-2.50297093305986,0.5625201446728753,2.220446049250313e-16];
[-5.0,-1.4539832225920508e+308,0.04333402153002086,2.0,-1.7976931348623157e+308,-1.0,2.2250738585072014e-308,8.000478840969075e+306];
[2.220446049250313e-16,-1000000.0,1.0,-1000000000.0,-4.0,1.7976931348623157e+308];
new Set();
new Int16Array(127);
new Uint8ClampedArray(127);
new Float32Array(2522);
const o52 = {
    "type": v23,
};
gc(o52);
