[-2.318856509310776,1000000.0,-859.7730879144092,3.0,-2.7408310461990233,470.76130840509336,-2.220446049250313e-16,-1.5215946190044325e+308,143.6916542648064];
[-1e-15,-1.0,-4.0,-991865.2983276796,-617.3986385522547];
const v2 = [4.379808458162458,-5.163125463957668,-0.0,Infinity,3.174887704852896];
class C6 extends Map {
}
const v7 = [-1.3667473485475811e+308,1.7976931348623157e+308,5.0,-3.583919688173468e+307,-1.5320462342133301e+308,-414873.4859108749,286122.8434793174,866.7395286670867,-1000.0,-742782.9714922046];
const o16 = {
    __proto__: v7,
    valueOf(a10, a11) {
        return a10;
    },
    ["-1073741824"](a13, a14, a15) {
    },
};
new Float64Array(8);
new Uint8Array(3);
for (let i24 = 0, i25 = 10;
    i24 < i24;
    (() => {
        for (let v29 = 0; v29 < 5; v29++) {
            function f30(a31) {
                return f30;
            }
        }
    })()) {
}
const v35 = new Int32Array(2598);
[Uint8Array,Uint8Array];
[Float64Array,Uint8Array,Int32Array];
[Uint8Array];
const v42 = [1613217357,204598905,15977,1122227661,64,-2,-12,536870888];
const v43 = [12,-256,-4096,2,7,8,21956,46111,11,10];
v43[4] = v43;
const v44 = [-1073741824,1665564361,16526,1805211777,10,-9007199254740990,4,-17063,-1];
const v45 = [-2.2250738585072014e-308,0.8014728140665155,1.4073101706157717e+308,1.4751052216559766e+308,2.0,-692.9604671107461,-2.220446049250313e-16,2.0];
const v46 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
const v47 = [-1.015259194643325e+308,-Infinity,-9.825391401141273,-2.2250738585072014e-308,5.0,-2.2250738585072014e-308];
class C48 {
    constructor(a50, a51, a52, a53) {
        const v54 = this?.constructor;
        try { new v54(v46, a52, a52, v42); } catch (e) {}
        a51 >>> a51;
        -0.0 >>> -0.0;
    }
    /*
    constructor(a62, a63, a64, a65) {
        const o74 = {
            "type": "-1073741824",
            5: 127,
            valueOf(a72, a73) {
                return this;
            },
            "maxByteLength": 2240,
        };
        const v76 = new ArrayBuffer(2240, a63);
        new Uint8ClampedArray(v76);
        this[268435456];
        v45 && this;
        try {
            v45.length = v47;
        } catch(e81) {
        }
    }
    */
    static 268435439 = v44;
    #c = -2.2250738585072014e-308;
    static 832209355 = 2.220446049250313e-16;
}
C48[832209355] = C48;
const v83 = gc();
v35 >>> v35;
const v85 = [];
const v86 = v83.message;
v86.search(v86);
function f88(a89, a90, a91, a92) {
    function F93(a95, a96, a97, a98) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v99 = new F93();
    const v100 = new F93(f88, f88, a90, v99);
    v100 in v99;
    return f88;
}
function f102(a103, a104, a105) {
    v85.copyWithin();
    try {
        f102(-268435456, 0.6683462416314783, [-268435456]);
    } catch(e111) {
    }
    const v112 = v2 >> -268435456;
    v112 >> v2;
    const v114 = -v112;
    const v117 = new Uint16Array(3);
    v117.indexOf();
    function F119() {
        if (!new.target) { throw 'must be called with new'; }
        try {
            new F119();
            /Ckza\Wb?/vis;
            /Ma\W+/gudm;
        } catch(e124) {
        }
    }
    return v114;
}
function f125(a126) {
    const o136 = {
        m(a129) {
            const o130 = {
            };
            o130.e = Float64Array;
            const o131 = {
                "f": this,
            };
            Object.defineProperty(o131, "e", { configurable: true, value: o131 });
            const v134 = new Int8Array(3938);
            let v135 = 3;
            [...v135] = v134;
            return v134;
        },
    };
    new C48(...v44, a126, ...v46, ...v47);
    new Float64Array();
    return -2.2250738585072014e-308;
}
C48.valueOf = f125;
const v140 = new C48(v42, 659.0540372978887, v42, v42);
new BigUint64Array();
let [,v144,...v145] = [723200.4184824808,-1000.0,-523437.54204506474,-964793.6675249395];
const v146 = /8/vdiy;
try {
    b = v146;
} catch(e147) {
} finally {
}
const v148 = new C48(v140, 2.220446049250313e-16, v45, v47);
const v149 = v148?.constructor;
try { new v149(v45, 2.220446049250313e-16, 2.220446049250313e-16, v148); } catch (e) {}
1.0 >>> /Mrn(?:a*)+IhCO/udimsy.__proto__;
function f155(a156, a157) {
}
new C48(v148, v148, 659.0540372978887, v42);
try {
    v43.length = C48;
} catch(e159) {
}
const v160 = new C48(v45, 2.220446049250313e-16, v44, v47);
v160.length = v160;
function f161() {
    return f161;
}
f161.arguments = f161;
function F162() {
    if (!new.target) { throw 'must be called with new'; }
    function f164() {
        return f164;
    }
    const v165 = [8.944191192251868,-1.4998894798282654e+308,4.0,-0.0,-1000000000000.0,-5.0,-2.220446049250313e-16];
    const v166 = [-5.83623517593701,-1.0,-1e-15];
    const v167 = [692.912813481568,126686.58689393173];
    function f170(a171, a172) {
        const o176 = {
            [a171](a174, a175) {
            },
        };
        return o176;
    }
    const v177 = f170(v165, 128);
    f170(v167, -3);
    const v179 = f170(v166, 128);
    /j(x)(x)(x)\2/gud;
    const o182 = {
        "type": "function",
    };
    ("n").split("n", 2147483647);
    /[\0](?:ab|cde)/vimsy;
    const v187 = /^xxx$/uisy;
    try { v177.p(); } catch (e) {}
    try { v179["n"](v187, "n", f170, "n"); } catch (e) {}
    new Uint32Array(91);
    new Int16Array(4);
    new Int16Array(127);
    const v199 = this?.__lookupGetter__;
    try { new v199(this); } catch (e) {}
}
new F162();
const v202 = new F162();
v202.b = v202;
const v203 = new F162();
function f206() {
}
try { new f206(); } catch (e) {}
const v208 = [16,1073741824];
const v209 = [f161];
v209[0] = v209;
[v208,v202];
const v211 = f161();
try { v211(); } catch (e) {}
for (let v213 = 0; v213 < 5; v213++) {
    f206();
}
try { v203.n(); } catch (e) {}
for (let v216 = 0; v216 < 5; v216++) {
}
