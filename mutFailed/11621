const v1 = new Map();
function f2(a3, a4) {
    const o39 = {
        set e(a6) {
            const v7 = [a4,Map,a4,this,a4];
            [v7,v7];
            [a4,a4,v1,f2,v1];
        },
        "c": Map,
        [Map](a11, a12) {
            this[6] += a11;
            const v14 = a12 != 512;
            let v15;
            try { v15 = a11.m(v1, a12, a12, a11, v14); } catch (e) {}
            try { a4.getUTCMonth(f2); } catch (e) {}
            a4 = v15;
            a3 = v14;
            new a4(512);
            new Map(2);
            const v24 = new a4(7);
            Object.defineProperty(v24, BigUint64Array, { set: f2 });
            Object.defineProperty(v1, f2, { configurable: true, get: f2, set: f2 });
            function F25(a27, a28, a29) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.h = Map;
                } catch(e30) {
                }
                try {
                    F25 % this;
                    a11[536870888] = a12;
                    v24[1073741824] = F25;
                    this.d = a3;
                } catch(e35) {
                }
            }
            new F25(512, a3, a4);
            new F25(512, 512, a12);
            new F25(7, 7, a11);
            return v24;
        },
        "a": a4,
        __proto__: a3,
        "d": Map,
        4: a3,
        [a4]: Map,
    };
    return o39;
}
const v40 = f2(Map, v1);
const v41 = f2(v40, v1);
const v42 = f2(v41, v1);
function F43(a45, a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a47;
    } catch(e48) {
    }
    try {
        this.e = v40;
    } catch(e49) {
    }
    try {
        this.b = v42;
    } catch(e50) {
    }
}
const o51 = {
    __proto__: v40,
    ...v42,
    ...v42,
    66: F43,
    [v42]: F43,
    ...v42,
    "h": v41,
};
const o52 = {
    "apply": f2,
    "call": f2,
    "construct": f2,
    "defineProperty": f2,
    "deleteProperty": f2,
    "get": f2,
    "getPrototypeOf": f2,
    "isExtensible": f2,
    "ownKeys": f2,
    "preventExtensions": f2,
    "set": f2,
    "setPrototypeOf": f2,
};
new Proxy(v40, o52);
const v55 = new F43(v40, v42, v42);
delete v55[2140506230];
const v57 = v1 ** Proxy;
v40[v57] -= v57;
const v61 = new F43(v55, v42, v40);
new F43(v61, v61, v55);
[v1,F43,f2,[f2,v41,Map],Map];
[f2,Map];
Uint16Array[1] = 1277001064;
new Uint16Array(Uint16Array);
