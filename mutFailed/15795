class C3 {
    static 4085 = 103744426;
    static 9;
    get f() {
        try {
            this.fuck(1.0, /qa.\ud808\udf45*/vds, 2598n);
        } catch(e9) {
        }
        return this;
    }
}
C3[4085] = C3;
const v10 = new C3();
const v11 = new C3();
const v12 = v11?.constructor;
try { new v12(); } catch (e) {}
const v14 = new C3();
function F16(a18, a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    const v22 = a19?.constructor;
    try { new v22(); } catch (e) {}
    const v24 = a20?.constructor;
    try { new v24(); } catch (e) {}
    const v26 = a21?.constructor;
    try { new v26(); } catch (e) {}
    try {
        this.c = a19;
    } catch(e28) {
    }
    try {
        this.e = a19;
    } catch(e29) {
    }
}
new F16(v14, v14, v14, v14);
new F16(v14, v14, v11, v11);
new F16(v10, v11, v11, v14);
let v33 = 4.0;
v33 - v33;
let v36 = 1511 - 1511;
-v36;
let v38 = 0;
do {
    typeof v38 === "string";
    v38++;
} while (7 !== 7, v38 < 7)
let v46 = 0;
v46 | v46;
do {
    v36 = v33;
    v46++;
} while (v46 < 10)
3327 & 3327;
const v54 = new Uint16Array(3327);
const v55 = [-2038832922,-14];
v55.length = v55;
v54.set(v55);
-1876875593 * -1876875593;
let v63 = 6;
v63++;
const v66 = new Uint16Array(v63);
const v69 = new Float64Array(127);
gc();
const v73 = new Int16Array();
try { v73.with(103744426, C3); } catch (e) {}
const v76 = new Float32Array();
const v78 = new Uint8Array(v76, Uint8Array, Uint8Array);
const v79 = v78?.entries;
try { new v79(); } catch (e) {}
Uint16Array.prototype = Uint16Array;
new Uint16Array(1000);
function f84() {
    946.0676210033328 >>> 946.0676210033328;
    const o89 = {
        1: 8,
        "b": v55,
        m(a88) {
            return a88;
        },
        __proto__: 946.0676210033328,
    };
}
f84.prototype;
f84();
v69[127] = 127;
v66[536870888] = -1876875593;
try {
    const v92 = v69.values();
    try { v92.next(); } catch (e) {}
} catch(e94) {
    const v95 = e94?.a;
    try { v95(e94, v95, v95, v95); } catch (e) {}
    function F97(a99, a100, a101, a102) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.b = e94;
        } catch(e103) {
        }
    }
    new F97(F97, 8, 127, e94);
    const v105 = new F97(52235, v63, -1876875593, Uint16Array);
    new F97(v105, v63, 1000, Uint16Array);
    const v110 = new Int8Array(3816);
    for (const v111 of "some") {
        const v112 = v110[1];
        let [,,,...v113] = v110;
        const o114 = {
        };
        o114.a = v112;
        const o115 = {
        };
        o115.a = v112;
    }
}
%PrepareFunctionForOptimization(f84);
v33 = -451445.2180572981;
new Uint16Array(v69, 52235, -1876875593);
const v117 = [5.0,2.0,3.0,-5.0,-Infinity,-Infinity,-1000000000000.0,-1000.0,1.376168649206787e+308,-1.358835502853269e+307];
v117[7] = v117;
[-0.0];
const v119 = [168657.71228409093,-4.0,0.1621003938548332,1.266976474544551e+308,1.448408401622828,0.0,-1.7976931348623157e+308,-1.7976931348623157e+308,0.9860570426566385];
try { v119.toString(); } catch (e) {}
f84();
