const v1 = new Map();
class C4 {
    ["9007199254740991"] = "a";
}
[5.0,0.5940140708893544];
const v9 = [-4.0,278865.21605508984,0.927469192638761,-23040.506309489603,1000.0,-6.7113043174651965,1000000000000.0,462362.06274195574,2.2250738585072014e-308,-1.682915702448401e+308];
const v10 = [2.2250738585072014e-308,1000000000.0,1.0,1000000000.0,-1.4909445773080883,-1000000.0,-5.0];
class C11 extends v1 {
    p(a13, a14, a15) {
        1425437851 + v1;
        const t9 = "a";
        const v23 = new t9(10);
        try {
            Object.defineProperty(v23, 0, { writable: true, value: 4096 });
        } catch(e25) {
        }
        const v26 = Symbol.toPrimitive;
        a15[v26];
        return v26;
    }
    [-1] = v10;
    [v1] = v9;
    #a = Map;
    static d;
}
const v28 = new C11();
const v29 = new C11();
new v29();
[1000.0];
[8.959093472260687e+307,-1.2265669663040939e+308,1000000.0,-1.0,-1000.0,263714.34005047055,-1.5550061343405452e+308,0.4888351385065187,-1000000000000.0];
const v34 = new Uint8ClampedArray();
v34.reverse();
function F36(a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
}
[7.3378143318913835,2.2250738585072014e-308,1e-15,2.776578248391978];
const v46 = v28.toPrimitive;
const v49 = new Int16Array(1269);
for (const v50 in v49) {
}
const o71 = {
    [v46]() {
        super[-8n] = this;
        const o59 = {
            [-1.1635412394243161e+308](a56) {
            },
            set b(a58) {
            },
        };
        delete o59.b;
        Symbol.iterator;
        let v62 = -65535;
        v62--;
        const o64 = {
        };
        try {
            o64.e = v62;
        } catch(e65) {
            const v69 = new Uint8ClampedArray(512);
            new Uint8ClampedArray(798, ...v69, o64);
        }
    },
};
