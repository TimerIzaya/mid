class C3 {
    static 2 = C3;
    constructor(a5, a6) {
        let v7;
        try { v7 = new a5(a6); } catch (e) {}
        [v7,v7,"n",a5];
        const v10 = [[a6,this,v7,a5],this,v7];
        Object.defineProperty(v10, 512, { writable: true, configurable: true, enumerable: true, value: v10 });
        ("65537").length;
        [3.0,-1000000.0,-1.2560484720478921e+306,2.0];
        [-Infinity,-1000000000000.0,1000.0,5.0,3.0,1.0265998301661338e+308,-620.0835461660186,2.0,-2.0,-579911.0254815189];
        [-947040.4987362726,-1.245505592538144e+307,2.220446049250313e-16,-2.2250738585072014e-308];
    }
    static ["n"] = -450372.2782716984;
    o(a16, a17) {
        const v18 = super[-450372.2782716984];
        const v19 = -450372.2782716984 % this;
        this.e /= -450372.2782716984;
        try { C3(a16, v18, v19, a17); } catch (e) {}
        try { ("65537").charAt(C3); } catch (e) {}
        v19 | a16;
        this[4] = C3;
        this[1331] = "65537";
        return v18;
    }
}
const v23 = new C3(C3, "n");
new C3(-450372.2782716984, v23, -450372.2782716984, v23, ..."65537", ..."n");
let v27 = -536870912;
2.2250738585072014e-308 + v27--;
+"65537";
const v32 = new C3("65537", v23);
const v33 = new C3(v32, -450372.2782716984);
class C34 extends C3 {
    268435441 = C3;
    static #h;
    constructor(a36, a37, a38, a39) {
        super(v23, a37);
        const v41 = this.a;
        super.a;
        Math.imul(27157, 1073741823);
        Math.pow(v41, v41);
        Math.asin(27157);
        !27157;
    }
    static get e() {
        try {
            this.#h = this;
        } catch(e54) {
        }
        let {"c":v55,} = this;
        this.f <<= v55;
        return v33;
    }
}
const v57 = new C34(C34, C34, v32, v32);
const v58 = new C34(v32, "n", C3, v33);
const v59 = new C34(v57, v57, v32, v32);
[v23,v23,v58,-450372.2782716984];
[v32,v57,[v59,v57,v32,-450372.2782716984],v59];
for (let v63 = 0; v63 < 5; v63++) {
    const o66 = {
        "maxByteLength": 1974,
    };
    const v68 = new SharedArrayBuffer(13, o66);
    new BigUint64Array(v68);
    const o71 = {
    };
    try { Reflect.defineProperty(o71, o71, v63); } catch (e) {}
}
