class C3 {
    m(a5, a6) {
        const v8 = [4294967297,-1648241970,9,3,-2,0,-4294967296,10];
        const v9 = /QK/gvdimy;
        with (v8) {
            v9.__proto__ = length;
        }
        const v11 = Symbol.unscopables;
        a5[v11];
        try {
            v11.fuck(a5, this);
        } catch(e14) {
        }
        return 17616;
    }
    static #a;
}
const v15 = new C3();
const v16 = new C3();
const v17 = new C3();
function F18(a20, a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a21;
    } catch(e24) {
    }
}
const v25 = new F18(v17, v15, v16, v17);
new F18(v15, v16, v17, v16);
new F18(v16, v16, v16, v25);
for (let v28 = 0; v28 < 5; v28++) {
    function f29() {
        const v32 = new Uint8ClampedArray(798);
        new Uint8ClampedArray(798, ...v32, eval());
        return v28;
    }
    f29();
    %OptimizeFunctionOnNextCall(f29);
}
