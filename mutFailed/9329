function f1(a2) {
    new Int32Array([64,-6,-60026,-9]);
}
Object.defineProperty(Date, "a", { configurable: true, set: f1 });
const v6 = new Date();
v6[Symbol.iterator] = Date;
const v9 = [61691.13313238043,1000.0,0.7224819315249409,1e-15,7.120548059150508,3.0,8.537438163139175,-8.532655659575984e+307,1000000.0,2.0];
const v10 = [2.2250738585072014e-308,NaN,-2.1837666140773955,1.4011816282918603e+306,4.0,0.05652835114393362];
const v11 = [2.2250738585072014e-308,757.3040351006955,1000.0,-560.4492499226603,-8.303430965457428,2.2250738585072014e-308,0.3163088739605858,0.7640181853416561,-0.0,572515.5518559748];
class C12 extends Date {
    #p(a14, a15) {
        Object.defineProperty(v10, v6, { writable: true, enumerable: true, get: Date, set: Date });
        super.getUTCDay();
        for (let v17 = 0; v17 < 32; v17++) {
            v11["p" + v17] = v17;
        }
        return v9;
    }
    toString(a21, a22) {
        this[2026];
        return Date;
    }
    65536;
    251;
    d;
    #d;
    #f;
}
C12.a = C12;
new C12();
new C12();
const v26 = new C12();
const v27 = v26[251];
let v28 = /\xe2\x81\xa3/vsy;
const v29 = /(?!(a))\1/gudiy;
/2g(\1a)?/gviy;
try { v10["copyWithin"](...v6, v6, v27, v29); } catch (e) {}
const v38 = 536870888 + v28;
536870888 * 1.0535026979869178e+308;
v28++;
1.0535026979869178e+308 - (536870888 && v38);
let v43 = -65536n;
v43--;
class C48 {
    static #p(a50) {
        return a50;
    }
}
const v51 = new C48();
new C48(v51, "iterator");
const v53 = new C48();
try { v53.hasOwnProperty(v28); } catch (e) {}
C48.__proto__ = "iterator";
const v55 = [v51,v53];
try { v55.toString(); } catch (e) {}
([v55,"iterator",4.488303140222985])[2];
const v59 = [];
const v60 = v59?.lastIndexOf;
try { new v60(v51); } catch (e) {}
const v63 = [[1828032293,v59]];
try { v63.reduce(-1374287970n); } catch (e) {}
const v65 = [v51,v63,v55];
v65.toString = Symbol;
function f66() {
    return v65;
}
BigInt64Array.prototype;
const v70 = new BigInt64Array(218);
v70.sort(f66);
