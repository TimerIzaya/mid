-65536 - -65536;
function f7(a8, a9, a10) {
    const o11 = {
        ...a9,
        __proto__: a9,
        65537: "bigint",
        "c": "m",
        ...a10,
        "h": a10,
        "g": "m",
        954511133: a9,
        1024: "n",
        "e": a10,
    };
    return o11;
}
f7(-65536, "bigint", "m");
const v13 = f7(-9007199254740991, "bigint", "m");
f7(-65536, "m", "bigint")[5];
function F16() {
    if (!new.target) { throw 'must be called with new'; }
    this.c = this;
    this.c = -16;
}
F16.length;
Float32Array.name;
new Float32Array(260330366);
const v24 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
function f25(a26, a27) {
}
f25.prototype;
try { new Symbol(); } catch (e) {}
const v31 = Symbol.toPrimitive;
Object.defineProperty(v24, v31, { configurable: true, value: f25 });
const v32 = new v31();
const v33 = new F16();
Date(Date, v32, v33, F16, Date);
const v36 = new Date();
const v37 = v36.getFullYear();
v37 >>> v37;
function F39(a41, a42) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = F39;
    function f43() {
        class C44 {
        }
        return a41;
    }
    a41.toString = f43;
    try { this.toString(); } catch (e) {}
    const v46 = a41.constructor;
    v46.length;
    let v48;
    try { v48 = v46(a41); } catch (e) {}
    const v49 = v48?.apply;
    try { new v49(v37, v13); } catch (e) {}
    class C51 {
    }
    C51.length = C51;
}
const v52 = new F39(F39, v32);
v52.g = v52;
