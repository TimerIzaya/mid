4 - 4;
new BigUint64Array(4);
let v7 = 1468;
v7--;
const v10 = new Float64Array(v7);
try { Uint16Array(v10, "object", BigUint64Array); } catch (e) {}
new v10(7);
new Map();
63856 >>> 63856;
42306 | 42306;
-2.2250738585072014e-308 >>> -2.2250738585072014e-308;
let v24 = -5.0;
v24--;
class C27 {
}
try { C27.bind(v10); } catch (e) {}
const v29 = new C27();
try { v29.constructor(); } catch (e) {}
const v31 = new C27();
try { v31.constructor(); } catch (e) {}
function f33() {
}
new Float32Array(1000);
new Uint8Array(58);
function F40() {
    if (!new.target) { throw 'must be called with new'; }
    let v42 = 19793;
    try {
        try { new Array(v24); } catch (e) {}
        const v45 = Array(v42);
        for (const v46 of v45) {
        }
        const v47 = [v45,v45,v45];
        new BigUint64Array();
        const v51 = [];
        function F52() {
            if (!new.target) { throw 'must be called with new'; }
            try { this.constructor(); } catch (e) {}
            class C55 {
            }
            for (let [i59, i60] = (() => {
                    10 | 10;
                    return [0, this];
                })();
                i59++, i59 < i60;
                (() => {
                    const v65 = [601759695];
                    BigUint64Array - v65;
                    C55.__proto__;
                    const v68 = [1073741824,1073741823,1376142744,1073741825];
                    function f69(a70, a71, a72, a73) {
                        function f74() {
                            return f74;
                        }
                        function f75(a76, a77) {
                        }
                        try { f75(); } catch (e) {}
                        f75(v68, C55);
                        try { v68["find"](..."find", a73, ...v65, ...v68); } catch (e) {}
                        return C55;
                    }
                    for (let v82 = 0; v82 < 10; v82++) {
                        f69(v82, f69);
                    }
                })()) {
            }
        }
        new v29();
        new F52();
        const o88 = {
            "apply": v47,
            "call": f33,
            "construct": Array,
            "defineProperty": f33,
            "deleteProperty": f33,
            "get": 4,
            "has": f33,
            "isExtensible": Array,
            "setPrototypeOf": Array,
        };
        try { new Proxy(Proxy, v42); } catch (e) {}
        new Proxy(Array, o88);
        v51[65536] = v47;
        for (let v92 = 0; v92 < 50; v92++) {
            v92 + v92;
        }
        const v94 = [];
        try { v94.reduceRight(57364); } catch (e) {}
        v42--;
        const v99 = [509174734,-30078599,-1953700757,-725509519,50139,1073741825];
        const v100 = /.\P{Decimal_Number}/gvds;
        try { v100.test(this); } catch (e) {}
        /xyz{1,32}?a\nb\bc/ums;
        class C103 {
        }
        const v104 = C103.__defineSetter__;
        try { v104(v99); } catch (e) {}
        v94 >= Uint16Array;
    } catch(e107) {
    }
}
const v108 = new F40();
try { v108.isPrototypeOf(F40); } catch (e) {}
const v110 = new F40();
try { v110.toLocaleString(); } catch (e) {}
