([-38686,-6,10000,-53904,-65535,48017,257,536870889]).includes;
const v3 = [];
[v3,v3,v3,v3];
const o5 = {
};
new Float32Array(257);
new Uint8ClampedArray(127);
new Uint32Array(8);
new Int16Array(41);
new Int8Array(12);
class C25 {
}
class C26 {
}
const v28 = new C26();
v28.toString = Symbol;
const o33 = {
    [v28](a30, a31, a32) {
    },
};
new Uint16Array(5);
new BigUint64Array();
new Date(Uint32Array);
BigUint64Array.getSeconds();
const v43 = [-195.17246022083714,-1e-15,58520.45042095962,-2.0,-2.2250738585072014e-308];
function F44(a46, a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    a46--;
    const v50 = a48 / 12;
    function F51() {
        if (!new.target) { throw 'must be called with new'; }
    }
    new F51();
    const v56 = new v50(8);
    v56.toSorted();
    const v58 = this.constructor;
    try { new v58(a47, a47, a48); } catch (e) {}
}
new F44(0, F44, 4);
(41).for();
0 == 268435440n;
new F44(4, v43, 0);
