let v2 = -3.98730912947687;
class C3 {
    static {
        -8 >= this;
        [-1000000000000.0,4.265728236599841e+307];
        [0.17930825011050178,1000000000000.0,-2.0];
        [-5.077142181679922e+307,5.925638972657907,-915695.809789068,0.0,-2.2250738585072014e-308,362.7894655970931,-8.942960944972606,870.0318980396817,-1e-15,-4.0];
    }
    constructor(a10, a11) {
        super.d;
        const v16 = -536870912 | -536870912;
        const v17 = +a11;
        v16 >> v17;
        Math.clz32(4294967297);
        const v21 = v2--;
        let v23 = 7;
        const v26 = +v17;
        let v27 = v26 % -65535;
        v26 / v26;
        const v29 = ++v27;
        ++v23;
        v23 && 1.0;
        v29 % v26;
        const v36 = new Uint16Array(12, -4294967296, v21);
        new Float32Array(v36);
        ++a11;
    }
}
let v40;
try { v40 = C3["unregister"](C3, -1, -8, "unregister", -1); } catch (e) {}
C3 >>>= v40;
let v44 = -8 || -226294.97599089122;
Math.log2(-1);
--v44;
const v47 = new C3(C3, v2);
const v48 = new C3(-1, -8);
new C3(v47, v48);
new Int32Array(2123);
let v53 = 8;
new Int32Array(12);
const v57 = [-1.3667473485475811e+308,1.7976931348623157e+308,5.0,-3.583919688173468e+307,-1.5320462342133301e+308,-414873.4859108749,286122.8434793174,866.7395286670867,-1000.0,-742782.9714922046];
function f59(a60, a61, a62, a63) {
    function f64() {
        const o72 = {
            __proto__: v57,
            valueOf(a66, a67) {
                return v57;
            },
            ["-1073741824"](a69, a70, a71) {
            },
        };
        return o72.copyWithin();
    }
    f64();
    %OptimizeFunctionOnNextCall(f64);
    Math.random();
    !(++v53);
    ~v53;
    return a60;
}
f59("-1073741824", v57, v57, f59);
new Float32Array(v53);
new BigUint64Array(16);
class C92 {
    constructor(a94, a95, a96) {
    }
}
new Uint32Array(C92);
