[60346,-9007199254740990,5,9007199254740992,3,536870887,-1117274439,4,1679077204,-271202601];
[-4033228,9007199254740991,-1447007595];
[256,7,-33432,0,31836];
const v12 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
const v13 = [3,-6,7268,-554513674,5,4294967295,861325878,17152,2147483647,5];
const v14 = [256,64];
function f18(a19, a20, a21) {
    const o37 = {
        ..."-669555958",
        "e": v14,
        "c": v12,
        __proto__: a21,
        o(a23) {
            const o25 = {
            };
            return gc(o25);
        },
        toString(a28, a29, a30, a31) {
            a21 instanceof a28;
            try { a31.trimEnd(); } catch (e) {}
            return "-1024";
        },
    };
    return a20;
}
function F38() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = 268435440;
}
function f41(a42, a43, a44) {
    return a44;
}
f18(v13, v13, "848379313");
const v46 = f18(v13, v12, "UZ");
f18(v13, v46, v46);
function f48() {
}
const v49 = [1073741824,1073741823,1376142744,1073741825];
function f50(a51, a52, a53, a54) {
    function f56() {
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        arguments.toPrimitive;
    }
    f48();
    const v66 = new Int8Array();
    v66.buffer.slice();
    %OptimizeFunctionOnNextCall(f56);
    let v71;
    try { v71 = v49["find"](..."find", a54, ...v12); } catch (e) {}
    v71 <= a53;
    return arguments;
}
const v74 = new WeakMap();
function f75() {
    return v14;
}
v74.toString = f75;
const v86 = new Date();
v86.description = v74;
-"UZ";
1073741824 - 1459564924;
try { new BigInt64Array(4096, Date, "UZ"); } catch (e) {}
const v93 = new BigInt64Array(1073741824, BigInt64Array);
[-0.0,-2.0,-1e-15,2.0,-Infinity,2.220446049250313e-16];
const v95 = [873.3236504624783,-5.059538800838508];
v95[1] = v95;
v93["lastIndexOf"](4096, "lastIndexOf", "lastIndexOf");
const v99 = Symbol.toPrimitive;
Symbol.for(v86.description);
("UZ")[v99];
