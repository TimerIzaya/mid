function f0() {
    const o17 = {
        toString(a5, a6) {
            try { ("4u").includes("4u"); } catch (e) {}
            new Uint8Array(3299);
            new BigInt64Array(6);
            const v16 = new Uint8Array(3668);
            return v16;
        },
    };
    return o17;
}
f0();
const v19 = f0();
const v20 = f0();
const o26 = {
};
const v28 = new Proxy(v20, o26);
v28 | f0;
function f31() {
    return v19;
}
function F32() {
    if (!new.target) { throw 'must be called with new'; }
    class C34 {
    }
    for (let i37 = 0, i38 = 10;
        i37++, i37 < i38;
        (() => {
            const v43 = [601759695];
            const v44 = [1073741824,1073741823,1376142744,1073741825];
            function f45(a46, a47, a48, a49) {
                a49 - a49;
                function f51() {
                    return a46;
                }
                function f52(a53, a54) {
                    return a53;
                }
                try { f52(); } catch (e) {}
                f52(v44, C34);
                try { v44["find"](..."find", a49, ...v43, ...v44); } catch (e) {}
                return C34;
            }
            for (let v59 = 0; v59 < 10; v59++) {
                f45(v59, f45, i37, v59);
            }
        })()) {
    }
}
switch (F32) {
    case -0.6986505075869864:
        try {
            new f31();
        } catch(e64) {
        }
}
new F32();
new F32();
[3.0,1e-15,-721712.046361862,0.7462981302516224,-7.100594628278105,0.4317141580700661,4.0,-1000.0];
[0.166697041454118,-3.2269660655549544,-Infinity,4.0,-6.120214319522431,0.05788501296411064];
[0.22408769163407283,-23.380243096573054,-6.860627904204241,1000000.0,8.284073329245714,0.4229368944239975,0.8533475882007074];
