class C3 {
    constructor(a5) {
        this[1189673815] = this;
        a5++;
        this[702504421] = 9007199254740991;
        2 | 2;
        try {
            this.length = 2;
        } catch(e9) {
        }
    }
    1189673815 = 40738;
    static set d(a11) {
        new Float32Array(3872);
        new BigInt64Array(6);
        new Uint32Array(2554);
    }
}
new C3(-12);
C3[3957990644] += 40738;
const o24 = {
    "maxByteLength": 188,
};
const v26 = new SharedArrayBuffer(111, o24);
const v28 = new BigUint64Array(v26);
C3.length = C3;
const v29 = new C3(9007199254740991);
const v30 = v29[1189673815];
new C3(9007199254740991);
const v32 = new C3(-12);
const v33 = [-1.0,-1.1354790285406136,1000000000.0,5.0,0.8711944675655096,0.3255770122288484,-1.4523381789688923e+308];
const v34 = [-1000000000000.0,-839.7698978534496,-3.0];
[-2.2250738585072014e-308,-709.5784742096912,9.877213488244563e+307];
const v37 = new Date();
let v38;
try { v38 = v37.setFullYear(-12, v33, v33); } catch (e) {}
new Int32Array(332);
const v44 = new Uint8Array(127);
let v45;
try { v45 = v44.fill(C3); } catch (e) {}
const o46 = {
    __proto__: v29,
};
/5x/vdim;
/[\cA]/v;
const v49 = /\P{Decimal_Number}/gudms;
try {
    o24.valueOf = v38;
} catch(e52) {
}
function F53(a55, a56, a57) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a56;
    } catch(e58) {
    }
}
new F53(9007199254740991, v34, v49);
new F53(40738, v33, v30);
new F53(v45, v34, v32);
new BigUint64Array(1);
new Int16Array(8);
try {
    v44.__proto__ = v28;
} catch(e67) {
}
Reflect.construct(BigUint64Array, [Date,40738,127], Date);
new BigUint64Array(2770);
const v76 = new Float64Array(3577);
-4 - -4;
-1073741824 + -1073741824;
try { new BigUint64Array(BigUint64Array, v29, BigUint64Array); } catch (e) {}
170.79545126331868 != 170.79545126331868;
Date(-3.0 | -9007199254740992);
v44 !== 8;
!"copyWithin";
try {
    v76.toString = v45;
} catch(e94) {
}
