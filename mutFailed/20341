function F0() {
    if (!new.target) { throw 'must be called with new'; }
    const v3 = 536870912 in this;
    const v4 = F0 || F0;
    v3 <= 536870912;
    Reflect.construct(F0, [], v4);
    try {
        this.b = 536870912;
    } catch(e9) {
    }
    try {
        const v10 = (a11, a12, a13) => {
            a11.b -= a11;
            Reflect.g;
            return a12;
        };
        this.c = 536870912;
    } catch(e15) {
    }
}
const v16 = new F0();
const v17 = new F0();
const v18 = new F0();
class C22 {
    constructor(a24, a25, a26, a27) {
        const v28 = v16[a27];
        try { v28(v17); } catch (e) {}
    }
    5 = v18;
    #g = 336.65557337370046;
    get h() {
        class C31 extends F0 {
            static #d = 336.65557337370046;
        }
        new C31();
        new C31();
        new C31();
        return 336.65557337370046;
    }
}
new C22(v17, v18, 1.6052633094914425e+308, v18);
new C22(v17, v18, 541608.0252734968, v18);
new C22(v18, v17, 336.65557337370046, v17);
new WeakMap();
Math.exp(v17);
Math.clz32(-2147483648);
Math.fround(9.082864876850177);
let v52 = -(-1e-15);
v52--;
Math.sinh(v52);
