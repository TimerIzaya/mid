function f0() {
}
function f1() {
    const o25 = {
        "d": f0,
        __proto__: f0,
        [f0]: f0,
        "b": f0,
        ...f0,
        toString() {
            this[this] &= this;
            for (let i4 = 0; i4 < 0; i4++) {
                const v12 = i4 - i4;
                const v13 = v12 % 4294967296;
                const v15 = new Int8Array();
                v15.buffer.slice();
                function f19() {
                    (623782.6377989235).constructor();
                    return 623782.6377989235;
                }
                Math.cos(i4);
                const v22 = v13 && v12;
                v22 * v22;
                Math.log2(v12);
            }
            return f0;
        },
    };
    return o25;
}
const v26 = f1();
const v27 = f1();
const v28 = f1();
class C29 {
    constructor(a31) {
        Object.defineProperty(this, v26, { enumerable: true, get: f0 });
        const o34 = {
            "maxByteLength": 4294967296,
        };
        const v36 = new ArrayBuffer(2, o34);
        new Int32Array(v36);
    }
    #g = v28;
    static 2;
    [f0] = f1;
}
const v39 = new C29(v28);
const v40 = new C29(v26);
const v41 = new C29(C29);
const v42 = [61449,827429132,4,1690563734,-4096,-422185197,6,-60054];
[10000,-2139351897,57986,-1073741824,268435440,7,257];
[5,255,-1996017976,-4294967295,63337,-14,2];
function F45(a47, a48, a49, a50) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = v39;
    } catch(e51) {
    }
    try {
        this.b = f0;
    } catch(e52) {
    }
    try {
        this.d = v28;
    } catch(e53) {
    }
}
const v54 = new F45(v40, v42, v42, v28);
new F45(v27, v54, v41, v54);
new F45(v39, v40, v42, v41);
function f58(a59, a60) {
    const o61 = {
    };
    return o61;
}
with (f58()) {
    new BigInt64Array(2147483649);
}
