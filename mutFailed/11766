function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.c = F0;
    try {
        this.c = -11;
    } catch(e3) {
    }
}
function f4() {
    new Int32Array(256);
    new Float32Array(311);
    new Float32Array(41);
    return Float32Array;
}
F0[Symbol.toPrimitive] = f4;
const v17 = new F0();
const v18 = new F0();
new F0();
class C20 {
    static #toString(a22) {
        if (F0 === a22) {
            v17[5] >>>= F0;
        } else {
            throw F0;
        }
        return F0;
    }
    static [F0];
}
new C20();
new C20();
const v26 = new C20();
const v27 = [F0,C20,v26,F0];
[[v27,v27,v18,C20,v27],v26];
function f30(a31, a32) {
}
function f33(a34, a35, a36, a37) {
    const o38 = {
    };
    return o38;
}
[-65537,-24143,-1293542190,14907,3476,-65083];
function F41(a43) {
    if (!new.target) { throw 'must be called with new'; }
    const o44 = {
        "preventExtensions": f33,
        "setPrototypeOf": f30,
    };
    new Proxy(this, o44);
    const v47 = this?.constructor;
    try { new v47(); } catch (e) {}
}
new F41();
new F41(Date);
new Float64Array();
Date();
