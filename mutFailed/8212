function f1() {
}
f1++;
const v5 = new Float64Array();
function f6(a7, a8) {
    class C9 {
    }
    C9.constructor;
    const t7 = 1073741823;
    t7();
    return a7;
}
v5[Symbol.toPrimitive] = f6;
("p").lastIndexOf(v5);
const v17 = [0.4730086788360902,5.0,-4.0,-2.2250738585072014e-308,140.92680941433582,1e-15,-743402.8273268711,-257302.09944386396,1.7976931348623157e+308];
Reflect.preventExtensions(Reflect);
let v21 = -27205;
([586209.1308562411,9.273207833056233,-793.5051180378861,-88.02009084622205,1000.0,5.993768942190951e+307,0.6895260767593681,3.203916786355496,1.7976931348623157e+308,-1.0422896205696638e+308]).fill(-1073741824, v21);
[-0.0,3.0];
[4.621508299140095e+307,1000000000000.0,-4.614116429777058,0.9259825746744732,0.4009595141167771,-9.437068953996409,0.9138390390096621];
function f26(a27, a28, a29) {
    function f31(a32) {
        return a29;
    }
    %PrepareFunctionForOptimization(f31);
    return this;
}
new Uint16Array(v17);
const v38 = new Uint8ClampedArray();
try { v38("function", 14); } catch (e) {}
new Int32Array(4);
new Uint8ClampedArray(129);
function f48() {
    ArrayBuffer.maxByteLength = 128;
    const v50 = new ArrayBuffer(ArrayBuffer, ArrayBuffer);
    new Int8Array(v50);
    for (let i55 = 0, i56 = 10;
        i55 < i55;
        (() => {
            for (let v60 = 0; v60 < 5; v60++) {
                function f61(a62) {
                    return f61;
                }
            }
        })()) {
    }
    return f48;
}
%PrepareFunctionForOptimization(f48);
f48();
function f67() {
    return Int8Array;
}
([127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649]).toSpliced(-1148418937, -1148418937, 2.220446049250313e-16, 2.220446049250313e-16, "p");
%OptimizeFunctionOnNextCall(f48);
const v74 = new Int8Array(3938);
[...v21] = v74;
("undefined").localeCompare("undefined", "symbol", "undefined");
f48();
