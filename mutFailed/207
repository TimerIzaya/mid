try {
} catch(e1) {
} finally {
}
class C3 {
    static [376363416];
    static {
        this.b = C3;
        super.b = this;
        let {...v5} = this;
    }
}
let v6 = 536870912n;
v6--;
[-9223372036854775807,45087,-268435456];
const v10 = [509174734,-30078599,-1953700757,-725509519,50139,1073741825];
[15,55234,268435441,0,9007199254740992,129];
/\p{Script=Greek}/ds;
/.\P{Decimal_Number}/gvds;
/xyz{1,32}?a\nb\bc/ums;
class C17 {
}
class C18 extends C17 {
}
const v19 = new C18();
const v21 = new Uint8Array();
function f22(a23) {
    const t27 = [-2.220446049250313e-16,0.4010936999061169];
    t27.length = -2;
    return Uint8Array;
}
v21.toString = f22;
v21.c = 1073741825;
delete v19[v21];
-1493064962 - -1493064962;
-4294967296 >>> -4294967296;
let v33 = 268435439;
v33--;
2 >>> 2;
class C38 {
}
const v39 = C38?.__defineSetter__;
try { new v39(v10, v10); } catch (e) {}
function F41(a43, a44, a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
    a43.lastIndexOf(a43, a44);
}
const v49 = new Int16Array(2);
new Uint16Array(v49);
