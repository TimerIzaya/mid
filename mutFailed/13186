const v0 = [];
const v3 = new WeakSet();
[536870889,-12,2139071237,1390653472,-11696];
const v8 = [536870912,-1387694926];
const v9 = [808017453,-536870912,-43001];
let v12 = 0.19545978755529247;
class C13 extends WeakSet {
    [-3.0];
    static 1 = v9;
    constructor(a15, a16) {
        super(v0);
        Object.defineProperty("-884841883", 1073741823, { configurable: true, value: 1073741823 });
        const v19 = [6];
        v19.copyWithin(v19, v19, Array);
        Object.defineProperty(v3, v12, { writable: true, configurable: true, value: v0 });
        async function f21(a22, a23, a24, a25) {
            try { v9.reverse(); } catch (e) {}
            --v12;
            const o44 = {
                toString(a29, a30, a31) {
                    ("string").trimStart();
                    ("string").length;
                    const v38 = new Int8Array(242);
                    try { Int16Array.apply(128, v38); } catch (e) {}
                    function f41() {
                        return a31;
                    }
                    Object.defineProperty(a29, Symbol.toPrimitive, { writable: true, get: f41 });
                    return Symbol;
                },
            };
            try { o44.toString(o44); } catch (e) {}
            const v50 = --a15;
            10 + this;
            const v52 = Object.cosh(this, v0, this);
            Object.log10(v50);
            await this;
            return v52;
        }
        f21(v12, 1371294144, v8, a15);
    }
}
const v56 = new C13(v9, 536870888);
new C13(v9, 1073741823, v3, null, v56);
new C13(0.9615147634519037, 1073741823, v56, v9, v12);
function f59() {
    return f59;
}
class C60 extends f59 {
}
class C61 extends C60 {
}
function f64(a65, a66, a67, a68) {
    a65.a = a66;
    try { a65(C61, f59, C60, WeakSet); } catch (e) {}
    let v70 = a66 & a66;
    v70++;
    const v72 = 2104844286 | C61;
    v72 * v72;
    const o77 = {
        n(a75, a76) {
            return this;
        },
    };
    return a66;
}
for (let v78 = 0; v78 < 500; v78++) {
    f64(Uint8Array);
}
