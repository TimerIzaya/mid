function f6(a7) {
    const o13 = {
        __proto__: 2,
        "c": 2,
        "e": 536870889,
        213: "b",
        ..."setFullYear",
        "g": 2,
        p(a9, a10) {
            try {
                this.fuck(536870889, a7);
            } catch(e12) {
            }
            return this;
        },
    };
    return o13;
}
try { f6(1e-15); } catch (e) {}
f6(536870889);
f6(536870889);
const v17 = f6();
v17[213] = v17;
const v19 = [-1e-15,-4.547098672084515,6.731189859503068,1000.0,1000.0,414.1111077300918,567.5737904015757];
[v19];
for (const v22 of `match${"g"}-20124`) {
    const v23 = v22.strike();
    try { v23.charAt(1e-15); } catch (e) {}
    const v25 = v23.codePointAt(v22);
    v25 === v25;
}
let v29 = 2684;
const v31 = new Uint32Array();
const v33 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
let v34;
try { v34 = v33.fill(BigUint64Array); } catch (e) {}
const v35 = [601759695];
v29 = v34;
const v36 = [1073741824,1073741823,1376142744,1073741825];
function f38(a39, a40, a41, a42) {
    function f43() {
        let v45 = Float64Array;
        v45.e = v45;
        v45 = a40;
        b = v35;
        function F47(a49, a50, a51, a52) {
            if (!new.target) { throw 'must be called with new'; }
            const v53 = this.constructor;
            try { new v53(v53); } catch (e) {}
            this.c = a49;
        }
        new F47(-1.093925554716035e+308);
        const v56 = v19.length;
        try {
            v36.forEach(a40);
        } catch(e58) {
            e58.e = e58;
            e58.name;
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        Symbol.e = Symbol;
        const v62 = v29.toPrimitive;
        const o66 = {
            toString(a64, a65) {
                a64 *= v62;
            },
        };
        const o91 = {
            "c": -4294967297n,
            [522675525n](a69, a70) {
            },
            "c": v35,
            valueOf(a72, a73) {
            },
            [v56](a75) {
            },
            [-1]: v29,
            1073741824: v31,
            "maxByteLength": -268435456,
            "b": -4294967295,
            "arguments": v33,
            [-4294967297n](a77, a78, a79, a80) {
                class C82 extends Date {
                    static get c() {
                        eval();
                    }
                }
                for (let v86 = 0; v86 < 5; v86++) {
                }
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v33,
            set b(a88) {
            },
            256: a42,
            m(a90) {
            },
            ...v35,
        };
    }
    f43.arguments = f43;
    f43();
    eval("");
    %OptimizeFunctionOnNextCall(f43);
}
for (let v96 = 0; v96 < 10; v96++) {
    f38();
}
function f98() {
    class C99 {
    }
    const o102 = {
        "maxByteLength": 1000,
    };
    new ArrayBuffer(8, o102);
    return 2.2250738585072014e-308;
}
let v105 = 1n;
v105--;
class C110 {
    4259938026;
}
const v111 = new C110();
v111[4259938026] = v111;
class C112 {
    toString(a114) {
        const t127 = this.constructor;
        new t127();
        const v117 = this.__lookupSetter__;
        try { new v117(); } catch (e) {}
        super[this];
    }
}
function f120(a121) {
    return f120;
}
let v122 = 1269;
v122--;
const v125 = new v34(v122);
for (const v126 in v125) {
}
const v127 = f120(undefined);
function f128() {
    return f128;
}
f128.arguments = f128;
const v129 = [v127,,];
let v130;
try { v130 = v129.findIndex(v129); } catch (e) {}
const v131 = v129.group(f128);
v131.c = v131;
1657 === 1657;
Uint16Array.BYTES_PER_ELEMENT;
const v136 = new Uint16Array(v130);
v136.reverse();
class C138 extends v127 {
}
