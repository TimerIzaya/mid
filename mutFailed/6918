const v0 = [];
new Uint32Array(1024);
const v12 = new BigUint64Array(6);
let v15 = 0;
while (v15 < 8) {
    new WeakMap();
    function F20() {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.h = 268435439;
        } catch(e23) {
        }
    }
    v0[2];
    v15++;
}
new Uint8Array(0);
function f27() {
}
const v28 = [3,1024,490145092,10,-9223372036854775807,-9223372036854775807,1441684544,-1572996615];
const v29 = [127,-65535,64,343690887,-2123787437,2,2147483649,-53151,1];
const v30 = [1342014474];
class C31 {
    toString(a33) {
        const v34 = f27();
        try { this["any"](v34); } catch (e) {}
        return v30;
    }
    o(a38) {
        return v28["findLastIndex"](f27, this);
    }
    static 10000 = v29;
    static [v29];
}
const v41 = new C31();
new C31();
new C31();
6 >>> 1;
const t37 = (~9007199254740990).constructor;
new t37();
v41.b;
function f58(a59) {
    function f61(a62) {
        let v64 = "wNzDt";
        class C66 {
            constructor(a68, a69) {
                function f70(a71, a72) {
                    return a72[3];
                }
                f70(v64, a68);
                f70("e", "e");
                f70(v64, a68);
            }
        }
        v64 ||= -47530;
    }
    return -1.7976931348623157e+308;
    const v80 = new Uint8ClampedArray(64);
    v80.includes(64);
    try {
        new f61(v30);
    } catch(e83) {
    }
    d = v15;
    this.onmessage = f61;
    let [...v84] = 6;
    v12["findIndex"](v0[268435441], this);
    this != 65535;
    C31 ^ 9007199254740990;
    [47245,4294967296,1213575163,536870889,-15,536870888,-1855227439,2130791141];
    [129,-205176918,127,9007199254740992,-9007199254740990,-60329,-278065414];
    [-9007199254740990,-16,-536870912,10000,-2,16,1278783829,4294967297];
}
const v95 = [-9007199254740992];
const o96 = {
    "arguments": v95,
    "type": -9007199254740992,
};
new Worker(f58, o96);
