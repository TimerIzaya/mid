const v0 = [-589.3531889713568];
const v1 = [-0.8362203870555245,-1.5682079559747068e+308,57.29834187295501,Infinity];
const v2 = [766048.4665426037,-4.0,-1000000000.0,1000000000.0];
function f3(a4) {
    const o34 = {
        n(a6) {
            -Infinity;
            return v0;
        },
        [v0]: v2,
        ...v2,
        [v1](a11) {
            let v12;
            try { v12 = new a11(); } catch (e) {}
            %VerifyType(a11);
            function F13(a15, a16) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.d = a15;
                } catch(e17) {
                }
                try {
                    this.b = v1;
                } catch(e18) {
                }
                try {
                    this.f = v12;
                } catch(e19) {
                }
            }
            const v20 = new F13(v2, v2);
            v20.b;
            ~805.265068098551;
            let v26 = a4 / a4;
            ++v26;
            Math.log1p(v20);
            --a4;
            Math.cbrt(v2);
            536870888 | a4;
            new F13(a11, v2);
            const v33 = new F13(v0, v2);
            return v33;
        },
    };
    return o34;
}
v2(v0);
f3(v2)[3];
f3(v0);
const t46 = "f";
t46[0] = "f";
~-1e-15;
-1e-15 + -2.220446049250313e-16;
let v52 = Math.pow(-15 >> 8798, -2.220446049250313e-16);
v52--;
