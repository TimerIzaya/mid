const v0 = [];
const v1 = [-77211833,58249,10650,-902826818,8101596,-268435456];
const v2 = [-12238,308794751,-10827,-44578,12,-3,227454148];
[1634,55835];
class C4 {
    constructor(a6) {
        b = this;
        new Uint32Array(10);
        new Float32Array(193);
        new Int32Array(2646);
    }
}
const v16 = new C4(v0);
const v17 = new C4(v2);
const v18 = new C4(v2);
const v19 = [v18,v18,v1,v2];
const v20 = [-9223372036854775808];
[1000,9007199254740990,4,-4294967296,-1911934186,5,-1686];
new Uint8ClampedArray(5);
function F25(a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    const v29 = this?.constructor;
    let v30;
    try { v30 = new v29(this, a28); } catch (e) {}
    this.c = v30;
}
const v31 = [-16,-2,-56243,65535,268435439,17491,-65535,4294967296];
const v35 = [-65535n,-65535n,-10n];
[v35,-10n,-65535n];
const v37 = [v31,-65535n,v31,-57761n];
[-10n,-10n,-10n];
const v39 = [v37,-57761n,v20,v35,-65535n];
[v39,v37,v39,v35];
const v41 = [3.836595330454784e+307,-1.1402235194805368e+308];
const v42 = [991.721527488573,-290835.2265090322];
try {
    v41.length = 2499;
} catch(e44) {
}
[-1.0,-1000000.0,-6.453134415503834e+307,-2.2250738585072014e-308,1e-15,-228003.00463890494,1.9400411482062907,-197.7029619198281,Infinity];
const v47 = /(?:a*)+q(?<a>.)/guds;
function f48(a49) {
    const o53 = {
        set b(a51) {
        },
        get d() {
            return a49;
        },
        __proto__: v47,
    };
    return o53;
}
f48(v47);
const v55 = new WeakMap();
const v60 = ("-1723624938").slice(9, "g").normalize();
try { v60.substring(v42, WeakMap); } catch (e) {}
class C62 {
    constructor(a64, a65) {
        a65.sup(v60, a64).toLocaleLowerCase();
    }
}
const v68 = [v42,v55];
[v55];
const v70 = [v42,v55];
try { v70.pop(); } catch (e) {}
const v72 = /(x)(x)(x)\1/uis;
function f73(a74, a75, a76, a77) {
    const o84 = {
        4294967295: v68,
        [v72](a79, a80, a81, a82) {
            super.test();
        },
    };
    return a75;
}
class C86 {
}
const v89 = [295968041,[-1024,536870889,65536,65536]];
const o90 = {
    "arguments": v89,
    "type": "-1723624938",
};
-8298n <= -8298n;
8.438590633230234e+306 / 8.438590633230234e+306;
const t82 = [-936145422,536870912,127,257,-36772,-15984,2];
t82.length = 6;
const v100 = [];
function f101() {
    gc(256);
    function* f106(a107) {
        yield [9007199254740990,-4294967296,-1205995130,-12581,9];
        return -1.7570084557226905e+308;
    }
    const o113 = {
        toString() {
            super[this];
            return this;
        },
        ...v100,
        n() {
            return this;
        },
    };
}
f101();
f101();
gc.caller;
function f118() {
    function f119(a120) {
        try {
            const o121 = {
            };
        } catch(e122) {
        }
    }
    try {
    } catch(e123) {
    }
}
gc();
const v127 = new Uint8Array(165);
const v128 = v127.lastIndexOf();
v128 | v128;
const v131 = (a132, a133, a134, a135) => {
    function F136(a138, a139, a140, a141) {
        if (!new.target) { throw 'must be called with new'; }
    }
};
try { v131(Uint8Array, v128, v128, 8.438590633230234e+306); } catch (e) {}
[v17,v2,v19,v0];
[v1,C4,v16];
const o148 = {
    __proto__: null,
    valueOf() {
        return null;
    },
};
