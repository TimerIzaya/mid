function F0() {
    if (!new.target) { throw 'must be called with new'; }
    const v4 = new BigUint64Array(3375);
    function f5(a6, a7, a8, a9) {
        const o10 = {
            __proto__: a8,
            ...a8,
        };
        return o10;
    }
    try {
        v4.h = 268435440;
    } catch(e12) {
    }
    const v14 = (10).toFixed(10);
    class C16 extends F0 {
    }
    new v14();
    try {
        const v20 = new Map();
        const o24 = {
            set d(a22) {
                v20.delete();
            },
        };
        o24.d /= -2147483647;
        this.f = 268435440;
        %PrepareFunctionForOptimization(Date);
        class C27 {
            constructor(a29) {
                ("valueOf").localeCompare(a29, "valueOf");
            }
        }
    } catch(e31) {
    }
    const v33 = new WeakSet();
    v33[-65537n] >>>= WeakSet;
    for (let v35 = 0; v35 < 5; v35++) {
        v35 >> v35;
    }
}
new F0();
new F0();
new F0();
try {
    new Float64Array();
} catch(e42) {
    Math.sin(-4294967295);
    const v46 = [-1.5314324604839498e+308,-1.8081364344875581,-2.2250738585072014e-308,3.0,3.0];
    v46[5] = v46;
}
const o47 = {
};
for (let [v49,...v50] of "atan2") {
}
function F57(a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
    const v61 = this.constructor;
    try { new v61(); } catch (e) {}
    Math.acosh();
}
new F57(F57, F57);
new F57();
