const v3 = [9,1768667446,3,268435456];
const v4 = [536870912,15,-1606623015];
const v5 = [-3,-65536,64,7362,-33458,-1095266202,-37575,-16];
const v6 = [v5,v4,v5,v5];
["kfYF",v3,"asin"];
["kfYF",v3,v6,v3,"asin"];
let v18 = 15;
v18--;
new Int16Array(v18);
new Uint8ClampedArray(6);
new Int16Array(3699);
"2147483649" == "2147483649";
class C32 {
    static #p(a34) {
        function f35(a36) {
            return a36;
        }
        class C37 extends f35 {
            static set f(a39) {
                while (0 < 5) {
                }
            }
            static [-1] = 8;
            static [a34];
            static 268435441;
        }
        const v47 = [];
        const v49 = /[a-zA-Z0-9]/gvisy;
        const v50 = /abc?/gvmy;
        v50[-2] ^= v49;
        v50.exec("Q8F");
        const t30 = "Q8F";
        t30[2078209647] = v47;
        return a34;
    }
    [0.028957958839558873];
    static {
        for (let v56 = 0; v56 < 32; v56++) {
        }
    }
    static 2147483648 = C32;
    static #g;
    #a;
}
function f58() {
    const o60 = {
    };
    function F61(a63, a64) {
        if (!new.target) { throw 'must be called with new'; }
    }
    0 < 5;
    return gc(o60);
}
C32[Symbol.toPrimitive] = f58;
try { C32(); } catch (e) {}
class C72 {
}
new C72();
const v75 = new BigUint64Array();
v75.filter();
const v77 = new C32();
v77.constructor = f58;
try { BigInt64Array(BigInt64Array); } catch (e) {}
function F81(a83) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a83;
}
const v84 = new F81(-2);
with (v84) {
    h = Uint16Array;
}
const v86 = v77?.constructor;
const v88 = Symbol.toPrimitive;
new BigUint64Array(6);
("lastIndexOf")[Symbol.toPrimitive];
v86[v88] = f58;
let v94;
try { v94 = new v86(); } catch (e) {}
const v95 = v94?.constructor;
try { new v95(); } catch (e) {}
const v97 = new C32();
let v98;
try { v98 = v97.propertyIsEnumerable(C32); } catch (e) {}
!v98;
new C32();
/[\11]/gm.flags;
/(?:a*)*/gudm;
const v104 = /a(?!bbb|bb)c/vi;
v104.toString = Symbol;
const v105 = v104?.toString;
try { new v105(); } catch (e) {}
const v109 = [4096];
const o112 = {
    "execution": "async",
    "type": "minor",
};
~117;
Uint16Array[0] = v86;
const v115 = new Uint16Array(Uint16Array);
let v116 = v115[1];
v116--;
Int32Array.name;
new Int32Array(31);
let v124;
try { v124 = Uint32Array.toString(); } catch (e) {}
try { v124.small(); } catch (e) {}
const v126 = new Uint32Array(128);
v126[72];
function f128() {
    3.4890473589784586e+307 > 3.4890473589784586e+307;
    let v131 = 1000000000000.0;
    v131--;
    257828.6336153492 - 257828.6336153492;
    -4294967296 >> -4294967296;
    class C138 {
        static #m(a140) {
        }
        constructor(a142) {
            function f143() {
                return 9007199254740992;
            }
            Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f143 });
            const v144 = this?.__defineSetter__;
            try { new v144(22227, 22227); } catch (e) {}
            new Float32Array();
            try { Uint16Array.apply(Uint16Array, "2147483649"); } catch (e) {}
            const v150 = new Uint16Array();
            const v151 = new Float32Array(v150, -4294967296, a142);
            v151.f = v151;
        }
    }
    const v152 = new C138(C138);
    const v154 = [-3,-11210,65535,268435456];
    function f157() {
    }
    function f158(a159, a160) {
        const v162 = Symbol.toPrimitive;
        a159[v162] = f157;
        const o167 = {
            "e": a159,
            "g": a160,
            [v162]() {
            },
            "maxByteLength": 60241,
            get d() {
            },
            "h": -1000000.0,
            ...a159,
            "b": v109,
            "d": Int16Array,
            [60241](a166) {
            },
        };
    }
    f158(v109);
    f158(v154);
    v152.g = v152;
    const v170 = new C138(C138);
    v170.length = -4294967296;
    v170.length;
    const v172 = new C138(-4294967296);
    const v173 = [v172,C138];
    [257828.6336153492,v172,v152,v172,v173];
    const v175 = [v172];
    class C176 extends C138 {
        [v152];
        #n(a178, a179, a180, a181) {
            function f182() {
            }
        }
    }
    C176.name = C176;
    const v183 = new C176();
    class C185 extends v175.constructor {
    }
    try { v183.m(v173); } catch (e) {}
    const o189 = {
        "e": Uint16Array,
        o(a188) {
        },
        ...v131,
    };
    return Int32Array;
}
try { f128.bind(-7); } catch (e) {}
%PrepareFunctionForOptimization(f128);
f128();
f128();
gc();
([974836.255416306,7.54270135293536,0.0,0.35539841926815563,1.385396251341163,-1000000000000.0,NaN,-1.7976931348623157e+308]).toLocaleString();
const v197 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
try {
    v197.forEach(v126);
} catch(e199) {
}
%OptimizeFunctionOnNextCall(f128);
const v200 = f128();
v200.prototype = v200;
