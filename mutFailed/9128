const v0 = [];
class C1 {
    1073741823;
    static #b = v0;
    static {
        let v2 = this;
        v0 >>> (v2 &= v0);
    }
    constructor() {
        const o5 = {
        };
        new Proxy(this, o5);
    }
}
const v8 = new C1();
const v9 = new C1();
new C1();
function f15() {
    return C1;
}
class C16 extends f15 {
    #o(a18, a19, a20) {
        try {
            this.toString = f15;
        } catch(e21) {
        }
        return a19;
    }
    #a;
    static [v8] = v9;
    #f;
    static [1.3949575038594852e+308] = 1.0;
}
new C16();
new C16();
new C16();
const o46 = {
    valueOf(a33, a34) {
        const v35 = (a36, a37, a38, a39) => {
            function F40(a42, a43, a44, a45) {
                if (!new.target) { throw 'must be called with new'; }
            }
            return Int8Array;
        };
        return 155;
    },
};
