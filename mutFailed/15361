new BigInt64Array(257);
const v5 = new Float32Array(102);
const v8 = new BigUint64Array(4);
class C10 {
    f = "1073741824";
}
const v11 = new C10();
class C14 {
    [C10];
    static 1073741825;
    static ["YZmA"] = v11;
}
new C14();
("YZmA")["indexOf"]("g");
("YZmA")[Symbol.toStringTag];
const o24 = {
    "execution": "sync",
    "type": "minor",
};
gc(o24);
function f26() {
    return 4;
}
class C27 extends BigUint64Array {
    o(a29, a30) {
        Object.defineProperty(v8, 256, { set: f26 });
        let v32;
        try { v32 = this["toSorted"](...a30, ...v5, f26, 102, a29); } catch (e) {}
        return v32;
    }
    constructor(a34, a35, a36, a37) {
        super(a37, a36, a37);
        new f26();
        v8.byteOffset ^= 257;
        const v40 = Symbol.iterator;
        const o49 = {
            [v40]() {
                let v42 = 10;
                const o48 = {
                    next() {
                        v42--;
                        const v46 = v42 == 0;
                        const o47 = {
                            "done": v46,
                            "value": v42,
                        };
                        return o47;
                    },
                };
                return o48;
            },
        };
    }
}
new C27(257, 102, 4, 257);
new C27(4, 257, 257, 4);
new C27(257, 102, 102, 4);
new Int32Array(1024);
new Uint16Array(2);
new Uint16Array(5);
const v62 = [1984879050,0,-8575,7,1073741825];
function f63(a64, a65, a66, a67) {
    return ("Vre").constructor.fromCharCode(v62);
}
for (let v71 = 0; v71 < 10; v71++) {
    f63(v71, f63, v71, v71);
}
%OptimizeFunctionOnNextCall(f63);
f63(v62, v62, v62, f63);
