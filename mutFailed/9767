let v0 = -2;
const v3 = [-1073741824,v0,2147483647];
const v4 = [v3,-1073741824,v0];
const v5 = [2147483647];
const v6 = [0.19509160074173693,5.0,-5.330081155906625,-494340.4447002957];
delete v3[16];
try { v6.entries(); } catch (e) {}
[-844437.0714476018,56424.28895406611,-250118.40519281954,0.08403857064401832,-606.000734118194,9.12693554161158,369393.11828618404,-3.0];
const v13 = [1000000000.0,1000000.0,-2.0];
[469.32442285791717,9.273553518820707e+307,23487.235947692534,1e-15,8.004810821117069,-8.394612777226865];
const v15 = [-837131.2981187908,2.220446049250313e-16,-5.325626064176837e+307,-1000.0,0.5171347804006294,910713.0098655496];
const v16 = [541.3540138746566,3.0,0.2735586377322181,3.0,1e-15,-7.431583051248801,-1.0,-2.2250738585072014e-308,1.7976931348623157e+308,1000.0];
class C17 {
    static 10;
    static 7;
    static #f;
    #toString(a19, a20, a21) {
        let v22 = this[-1073741824];
        ({"length":v0,...v22} = a19);
        return v4;
    }
    constructor(a24, a25, a26, a27) {
        try {
            super.lastIndexOf(v4, v16, a26, a24);
        } catch(e29) {
        }
        try { v13.indexOf(a24); } catch (e) {}
        v5.length |= v0;
    }
}
new C17(v15, v4, v3, v13);
new C17(v15, v15, v16, v4);
new C17(v3, v3, v16, v4);
const v36 = new Float32Array(9);
v36.fill();
function f38(a39, a40, a41, a42) {
    const v43 = a40 >>> a40;
    v43 >>> v43;
    const v46 = new Int8Array();
    v46.entries().next();
    function f49(a50, a51) {
        a50.arguments = a50;
        return f49;
    }
    const v52 = f49(f49);
    class C54 extends Date {
    }
    const v55 = new C54();
    v55.getDay();
    return v52;
}
v0 = v13;
try {
    f38(false, false, 2147483647, /v\u{12345}/vi);
} catch(e60) {
}
for (let v61 = 0; v61 < 10; v61++) {
    f38(v61, v61, v61, 9);
}
%OptimizeFunctionOnNextCall(f38);
f38(9, Float32Array, v36, f38);
