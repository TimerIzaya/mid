let v2 = -9.191639688579322;
class C3 {
    constructor(a5) {
        a5[1000] = a5;
        Math.min(a5);
        Math.acosh(0.6484686149360689);
        9 / 9;
        9 % 9;
        Math.asin(v2);
    }
}
const v14 = new C3("function");
const v15 = new C3(C3);
let v16 = new C3(v15);
class C17 {
    constructor(a19, a20, a21) {
        "function" - C3;
        v16 = a19;
        v14[239] = a19[C3];
        v2 ^= 1000000000000.0;
    }
    #b;
    static 10000 = C3;
    static #d;
    static f;
}
const v24 = new C17("function", v16, v14);
const v25 = new C17(C17, v24, C3);
new C17(v15, v25, "function");
function f27() {
}
[-4096,-1073741824,65537,9007199254740990,-4096];
const v29 = [1557591051,8137,536870888,-9223372036854775808];
255 * 255;
-16 <= -16;
v29 * v29;
const v35 = [];
try { v35.findIndex(); } catch (e) {}
const v37 = [];
[];
[];
[];
const v46 = ~f27;
v46 & -v35;
v46 >> 536870889;
class C51 {
}
new C51();
class C53 {
}
const v54 = new C53();
v54[594532432] = v54;
const o56 = {
};
o56.b = o56;
v54[-16];
v37[268435439];
("symbol").replace("bigint").fontsize;
class C64 {
    #a = -2;
    constructor(a66, a67) {
    }
}
for (let i = 0; i < 5; i++) {
    class C71 {
        b = "c";
        static #h;
        268435439;
        static #c;
    }
    new C71();
    new C71();
    new C71();
    [2.220446049250313e-16,1.7976931348623157e+308,1.7976931348623157e+308];
    [-788.7260290236088,1.7976931348623157e+308,"c"];
    [-788.7260290236088,C71];
    Math.E = Math;
    const v82 = Math.round();
    for (let v83 = 0; v83 < 10; v83++) {
        v83 / v83;
        async function f85(a86, a87, a88) {
            a88 >>> a88;
            Number.isNaN(await v82);
            const v94 = [0.8307152163010869,1.0,0.0];
            v94[2] = v94;
            v94.length = v83;
            %VerifyType(v94 instanceof -24894);
            return f85;
        }
        try { f85(-788.7260290236088, -1000000000.0, -1000000000.0); } catch (e) {}
        const v97 = f85(Math, "b", v82);
        try { v97.hasOwnProperty(-788.7260290236088); } catch (e) {}
    }
    const o100 = {
        "type": "symbol",
        "type": "symbol",
    };
    gc();
}
