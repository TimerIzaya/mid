const v0 = [536870888,257,584466054,-2084104962,-128,268435441,-536870912,1208754118,-1964478756,8];
const v1 = [672764770];
const v2 = [15,0,-2070844320,-536870912,-7,-54544,10,9007199254740991,10];
class C3 {
    static valueOf(a5, a6) {
        try { new this(a5, v1); } catch (e) {}
        return this;
    }
    static o(a9, a10) {
        [536870912,-48197,5,10];
        [-268435456,41846,-43927,-9007199254740990,-1503905406,-2147483647];
        [255,4294967296,536870888,-15,46641,-13040,9223372036854775807,9223372036854775807,9244];
        return a9;
    }
    static #g = v2;
}
C3.b = C3;
const v14 = new C3();
const v15 = v14?.constructor;
v15.prototype = v15;
try { new v15(); } catch (e) {}
const v17 = new C3();
const v18 = v17?.constructor;
try { new v18(); } catch (e) {}
const v20 = new C3();
const v21 = v20?.__defineGetter__;
try { new v21(v0, v0); } catch (e) {}
129 | 129;
const v26 = 56762 == 56762;
class C28 extends C3 {
    #toString(a30, a31) {
        a31.length;
        const v33 = super.h;
        try { new v33(v17, a31, v33, 902539509, v33); } catch (e) {}
        return v0;
    }
    static toString(a36, a37) {
        return C3;
    }
}
C28.length;
const v43 = new C28();
try { v43.constructor(); } catch (e) {}
const v45 = v21?.constructor;
try { v45.valueOf(v17, v45); } catch (e) {}
let v47;
try { v47 = new v45(); } catch (e) {}
const v48 = v47?.constructor;
try { new v48(); } catch (e) {}
const v50 = new v26();
const v51 = new C28();
class C52 {
    #toString(a54, a55, a56) {
    }
}
let v57;
try { v57 = new C52(); } catch (e) {}
const v58 = v57?.__defineGetter__;
try { new v58(56762, v0); } catch (e) {}
const v60 = new C52();
let v61;
try { v61 = v60.valueOf(); } catch (e) {}
const v62 = v61?.constructor;
try { new v62(); } catch (e) {}
for (let v65 = 0; v65 < 10; v65++) {
    try { Reflect.isExtensible(v51); } catch (e) {}
    const v68 = [Reflect,Reflect,Reflect,Reflect];
    const v69 = v68[1];
    try { v69.set(v69, v1, v50); } catch (e) {}
    Reflect.construct(C52, v68, WeakSet);
}
