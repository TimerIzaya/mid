class C3 {
    m(a5) {
        this[a5] = a5;
        new Float64Array(16);
        new Uint8ClampedArray(3343);
        const v14 = new Uint32Array(255);
        return v14;
    }
    2;
    static d;
    3;
    constructor(a16) {
    }
    [-3.0];
}
const v17 = new C3();
class C18 {
}
new C18();
const t19 = 0.7499722693054169;
const v20 = new t19();
v20.constructor;
const v22 = new C3();
const v23 = new C3();
function f24(a25, a26) {
    const o44 = {
        "b": v23,
        toString(a28, a29, a30, a31) {
            d = v17;
            return v23;
        },
        m(a33, a34, a35) {
            const o36 = {
            };
            try {
                o36.b = this;
            } catch(e37) {
            }
            try {
                const o38 = {
                };
                o38.b = this;
                o38.h = a35;
            } catch(e39) {
            }
            try {
                const o40 = {
                };
                o40.b = this;
                o40.h = a35;
                o40.g = a26;
            } catch(e41) {
            }
            try {
                const o42 = {
                };
                o42.b = this;
                o42.h = a35;
                o42.a = a35;
            } catch(e43) {
            }
            return 0.7499722693054169;
        },
    };
    return o44;
}
const v45 = f24(C3, -1000000.0);
f24(v45, -1000000.0);
f24(v22, 0.7499722693054169);
Array(11);
function f51(a52, a53) {
    return a52;
}
v45[f51];
[-2,9223372036854775807,-4294967297,-128,4096,1293718996,10000,43707];
[2,-16,-57070,-41195,4294967295,-15554,4];
try {
    v17.valueOf = f24;
} catch(e57) {
}
try { v17.m(0.7499722693054169, v23, f24); } catch (e) {}
[-65537,-10,6,256,-30092,-9223372036854775808];
const v61 = new Map();
const v62 = [0.22765518540216179,1000000000000.0,95110.62484655366,1000000000.0,3.436859148069951,-0.0,2.0,-5.0];
const v63 = [-102.00254877873078,4.124955647620156e+306,-2.0,-553429.805328496,-2.2250738585072014e-308,3.0];
const v64 = [513779.5906574144,1.7409613810254415e+307,98.0881888203628,0.0];
function f65(a66, a67) {
    a66[7];
    const o76 = {
        ...a66,
        ...v62,
        [v62](a70, a71) {
            a71[v61];
            const v73 = a67.length;
            a66 == v73 ? a66 : v73;
            return a67;
        },
        __proto__: v61,
        ...v64,
        "a": Map,
        "b": a67,
        [a67]: a67,
    };
    return o76;
}
const v77 = f65(v62, v62);
f65(v64, v62);
f65(v63, v63);
const v81 = -2 !== -2;
256 - 256;
class C85 extends Map {
    [v77];
    static [-2];
    #p(a87, a88, a89) {
        a88.__proto__;
        let v91 = 0;
        do {
            try {
                v63.toString = f65;
            } catch(e92) {
            }
            v91++;
        } while (v91 < 3)
        return this;
    }
}
try { new C85(); } catch (e) {}
new C85();
new C85();
new C85();
const v102 = Array(1024);
try { v102.flatMap(f65); } catch (e) {}
const v108 = new Uint8Array(128);
let v109;
try { v109 = v108.reduce(); } catch (e) {}
-v81;
new Set();
function f113(a114) {
    return arguments;
}
function f116() {
    const o163 = {
        m(a120) {
            try { a120.next(a120, 1261703539); } catch (e) {}
            a120.c = a120;
            a120.h = a120;
            const o122 = {
            };
            o122.h = o122;
            o122.h = o122;
            function f123(a124, a125, a126) {
                return o122;
            }
            f123.caller = f123;
            try {
                o122.e = -65535;
            } catch(e127) {
                const v130 = new Uint8ClampedArray(798, -65535, e127);
                function f131(a132, a133, a134, a135) {
                    const v137 = new Int8Array();
                    const v138 = v137.buffer;
                    v138.g = v138;
                    return Int8Array;
                }
                f131();
                new Uint8ClampedArray(798, ...v130, o122);
            }
            try {
                const o141 = {
                };
                o141.e = 1261703539;
            } catch(e142) {
            }
            let v144;
            try { v144 = ("EV").link(); } catch (e) {}
            let v145 = 0;
            class C146 {
            }
            const v149 = new Int8Array(3938);
            let v150 = 3;
            let v151 = 0;
            let v152 = v151 >> v151;
            for (let i = 0; i < 5; i++) {
                [...v150] = v149;
                v151++;
            }
            const o154 = {
            };
            try {
                let v155 = 0;
                for (let i = 0; i < 5; i++) {
                    ({"c":v109,"d":v145,...v152} = v144);
                    try {
                        o122.fuck(128, a120);
                    } catch(e157) {
                    }
                    v155++;
                    v155 < 5;
                }
                const o161 = {
                };
            } catch(e162) {
            }
            return Int8Array;
        },
    };
    o163.m(o163);
    return 128;
}
f116();
f116();
const v167 = [Uint8ClampedArray];
v167[0] = v167;
const v168 = Reflect.construct(Uint8ClampedArray, v167);
v168.BYTES_PER_ELEMENT = v168;
const v169 = v168.constructor;
try { new v169(Array, Array, Array); } catch (e) {}
