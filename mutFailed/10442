const v0 = [];
let v3 = 11;
class C4 {
    static c = v3;
    constructor(a6, a7) {
        this[268435456] = this;
        v3--;
        let v12 = -2044161619 + -2044161619;
        +-2044161619;
        Math.floor(7);
        Math.expm1(-2147483649);
        Math.cos(v12);
        const v23 = v12 ** -2147483649;
        --v12;
        Math.cbrt(v23);
        const o26 = {
        };
        o26.a = o26;
        new Proxy(v0, v12);
    }
    static #b = v3;
    268435456;
}
const v29 = new C4(C4, C4);
const v30 = new C4(v0, v3);
const v31 = v30?.__lookupGetter__;
try { new v31(v0); } catch (e) {}
const v33 = new C4(v30, v3);
v33[268435456];
class C35 {
    static p(a37, a38, a39) {
        let v40;
        try { v40 = a39.toString(C35); } catch (e) {}
        super.c |= v40;
        v33[v30];
        try {
            new C4(a37, undefined);
        } catch(e44) {
        }
        function F45(a47, a48) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.c = 3;
            } catch(e49) {
            }
            try {
                this.g = 205471682;
            } catch(e50) {
            }
            try {
                this.b = a37;
            } catch(e51) {
            }
        }
        const v52 = new v29(C4, a39);
        const v53 = new F45(v52, a39);
        const v56 = new Uint32Array();
        function f57(a58, a59, a60, a61) {
            const o65 = {
                n(a63, a64) {
                    v56[a58] = v56;
                },
            };
            new Int8Array(16);
            new Date();
        }
        for (let v72 = 0; v72 < 625; v72++) {
            f57(Uint8Array);
        }
        new F45(v53, a37);
        return v0;
    }
}
new C35();
new C35();
const v77 = new C35();
const v78 = v77?.constructor;
try { new v78(); } catch (e) {}
const v81 = new Float32Array();
v81.f = v81;
new Float32Array([v81]);
try {
    new C4(v3, true);
} catch(e86) {
}
