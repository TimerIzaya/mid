function f1() {
    return Date;
}
function f2(a3) {
}
Object.defineProperty(Date, "sort", { writable: true, configurable: true, enumerable: true, get: f1, set: f2 });
const v7 = new Date();
new BigUint64Array(16);
const v13 = new BigInt64Array(2355);
Float64Array.BYTES_PER_ELEMENT = Float64Array;
new Float64Array(92);
const v17 = [-2.2250738585072014e-308,2.0,-362253.7242294146,-1.4385243026623833,-Infinity];
const v18 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
function f19(a20) {
    const t14 = Date(a20);
    t14.h >>>= a20;
    return 92;
}
v18[Symbol.toPrimitive] = f19;
const v24 = [-1.0,1.0,-875790.5323034594,0.22501948637268132,-0.0,-0.0];
try { v24.group(v24); } catch (e) {}
function f26(a27, a28, a29, a30) {
    function f31(a32, a33) {
        const v36 = new Uint32Array(104);
        return v36;
    }
    a27.toString = f31;
    try { a27.sort(a27); } catch (e) {}
    a30 < a30;
    const o50 = {
        toString(a40, a41) {
            const v42 = a27 && Float64Array;
            v42[Symbol.toPrimitive] = f26;
            e = BigInt64Array;
            v7 != v17;
            if (v42 <= v18) {
                try {
                    new Date();
                } catch(e48) {
                }
            } else {
                new Date(a27);
            }
            return 2355;
        },
    };
    return o50;
}
f26(v24, v24, 16, 16);
const v52 = f26(Date, v24, 2355, 92);
try { v52.toString(v13, 16); } catch (e) {}
f26(v17, v24, 92, 16);
gc.e = gc;
gc();
