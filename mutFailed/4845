-1.6885498751507235e+308 - -1.6885498751507235e+308;
140642.10995228658 + 140642.10995228658;
-9.541855845168355 - -9.541855845168355;
new Uint8ClampedArray(5);
4092 >>> 4092;
new BigUint64Array(4092);
64 >>> 64;
new Int8Array(64);
const v20 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v23 = new Uint32Array();
let v24;
try { v24 = v23.keys(); } catch (e) {}
const v26 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
let v27;
try { v27 = v26.fill(BigUint64Array); } catch (e) {}
const v28 = [601759695];
const v29 = [1073741824,1073741823,1376142744,1073741825];
v29[1] = v29;
function f31(a32, a33, a34, a35) {
    function f37() {
        -4294967295 & -4294967295;
        let v41 = Float64Array;
        v41 = a33;
        b = v28;
        const v42 = v20.length;
        try {
            v29.forEach(a33);
        } catch(e44) {
            e44.name;
        }
        const v46 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v48 = Symbol.toPrimitive;
        const o54 = {
            toString(a50, a51) {
                const v52 = a35 && a33;
                a50 *= v48;
                v52 <= v46;
            },
        };
        -268435456 - -268435456;
        const o80 = {
            "c": -4294967297n,
            [a33](a58, a59) {
            },
            "c": v28,
            valueOf(a61, a62) {
            },
            [v42](a64) {
            },
            [-1]: 2684,
            1073741824: v23,
            "maxByteLength": 4092,
            "b": -4294967295,
            "arguments": v46,
            [v24](a66, a67, a68, a69) {
                class C71 extends Date {
                    static get c() {
                        Symbol();
                    }
                }
                for (let v75 = 0; v75 < 5; v75++) {
                    continue;
                }
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v26,
            set b(a77) {
            },
            256: -4294967295,
            m(a79) {
            },
            ...v28,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            5: -4294967295,
            6: -268435456,
        };
        o80[0] = o80;
    }
    a35();
    Int8Array.name = Int8Array;
    const v83 = new Int8Array();
    const v84 = v83.buffer;
    v27("");
    Uint32Array[2] = 1;
    v84.slice(2147483648);
    %OptimizeFunctionOnNextCall(f37);
    let v93;
    try { v93 = v29["find"](..."find", a35, ...v28, ...v29, ...522675525n); } catch (e) {}
    v93 <= a34;
    return arguments;
}
for (let v95 = 0; v95 < 10; v95++) {
    v95 >> v95;
    const v97 = f31();
    v97.b = v97;
}
%OptimizeFunctionOnNextCall(f31);
f31();
