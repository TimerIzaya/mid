function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 6;
    } catch(e3) {
    }
    try {
        this.h = 6;
    } catch(e4) {
    }
}
const v5 = new F0();
new F0();
const v7 = new F0();
class C8 extends F0 {
    static get d() {
        super.h;
        %VerifyType(v7);
        return v5.__proto__;
    }
    static {
        const v13 = new F0();
        let v14;
        try { v14 = F0(); } catch (e) {}
        v13[v14];
    }
    static [v5] = v7;
    static #g = v7;
    static b = v5;
}
new C8();
const v17 = new C8();
const v18 = new C8();
for (const v21 in v18) {
    const o24 = {
        "maxByteLength": 3854444898,
    };
    const v26 = new SharedArrayBuffer(7, o24);
    new BigUint64Array(v26);
}
new Array(1994);
function F34(a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
}
const v38 = new F34();
function f39() {
    const o45 = {
        [1836424012](a42, a43, a44) {
        },
        "e": v38,
        "h": F0,
        "g": 1994,
        2147483648: 1836424012,
        "a": v38,
        ...v17,
    };
    return F34;
}
%PrepareFunctionForOptimization(f39);
f39();
f39();
%OptimizeFunctionOnNextCall(f39);
f39();
