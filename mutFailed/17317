const v0 = [];
class C1 {
    #b = v0;
    constructor() {
        let v3;
        try { v3 = v0.every(this); } catch (e) {}
        v3[0] = v3;
    }
    static [v0] = v0;
    #p() {
        super.d;
        return this;
    }
    875;
    d;
}
new C1();
const v7 = new C1();
new C1();
class C9 {
    static #h;
    #o(a11) {
        function f20(a21, a22, a23, a24) {
            return arguments;
        }
        try {
            this.#h;
        } catch(e28) {
        }
        return v7;
    }
    [v0];
}
new C9();
new C9();
new C9();
[-16,-9223372036854775807,23814,65537,268435456,-1457997603,16];
[-6,927428722,-16,-4294967297,9];
[-1998819187,-65536];
function f35() {
}
function f36() {
    return f36;
}
const v37 = /(?:a*)+q(?<a>.)/guds;
v37.constructor = f36;
function f38(a39) {
    const v40 = a39.constructor;
    const v42 = new Uint8ClampedArray(v37, a39, v40);
    v42.valueOf = f35;
    v42 ^ 3;
    v40(a39, f36);
    class C46 {
    }
    return v40;
}
for (let i49 = 0, i50 = 10; i49 < i50; i50--) {
    for (let v57 = 0; v57 < 50; v57++) {
        f38(v37);
    }
}
