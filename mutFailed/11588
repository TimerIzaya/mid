class C3 {
    n(a5) {
        a5[4] = 268435441;
        super.c = this;
        const v6 = super.c;
        typeof v6;
        "function" === "function";
        return v6;
        return this;
    }
    [268435441];
    #a;
    1;
}
const v10 = new C3();
let v11 = new C3();
const v12 = new v11();
class C13 {
    constructor(a15, a16, a17) {
        v11 = a15;
    }
    [v10] = C3;
    static #e = v11;
    n(a19, a20) {
        function F21(a23, a24, a25) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                try { a25(0.024260388302510316, a24); } catch (e) {}
                [-1024,-16,128,536870889,-6,15310,127,10];
                [-11,-65535,-14,9007199254740991,1272562981,993545643,9223372036854775807,-13,-13,1073741824];
                [1073741824,2147483647,257,27897];
                this.g = a25;
            } catch(e31) {
            }
            [-4096,-1517175063,-2045631262,64099,-784512946,3,-9223372036854775808,-58788,1024,-1242812639];
            const v33 = [-4294967296,4294967297,28113,-42634,27958,1,0,-1416726265];
            [0,935552749,-839,-1297,-256,10,7];
            a20 &&= a19;
            try { v33.flatMap(C13, a24); } catch (e) {}
        }
        new F21(a20, v11, v11);
        const v37 = new F21(a20, this, a20);
        new F21(v10, v37, v10);
        return v37;
    }
}
new C13(v11, v11, C3);
const v40 = new C13(v12, v10, v11);
new C13(v40, v11, C3);
function f45() {
    const v46 = ("4096")[0];
    let v47 = C13.g;
    [,v11,...v47] = "4096";
    try {
        v46.h = C13;
    } catch(e48) {
    }
    new f45(209);
    return 209;
}
new Int8Array(268435456);
const v57 = Float64Array.of();
v57.toString = f45;
new Date(Array, v57);
