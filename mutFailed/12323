function f0() {
}
function f1() {
    const o27 = {
        "d": f0,
        __proto__: f0,
        [f0]: f0,
        "b": f0,
        ...f0,
        toString() {
            this[this] &= this;
            for (let i11 = (() => {
                    const v4 = (a5) => {
                        let v6;
                        try { v6 = a5(a5, a5, a5, a5); } catch (e) {}
                        a5?.[v6];
                        [-65535,-41253,-1316860988,2,12212];
                        [-27275,-13153,10,536870887,268435440,-9223372036854775808,-52549,32823];
                        return [9622,256,-926123191,-1952030691,257,-2147483649,9007199254740990,9223372036854775807];
                    };
                    return 0;
                })();
                i11 < 0;
                i11++) {
                const v19 = i11 - i11;
                const v20 = v19 % 4294967296;
                const v21 = Math.cos(i11);
                const v22 = v20 && v19;
                v22 * v22;
                let v24;
                try { v24 = this.getMonth(f1, i11, this, f1, v21); } catch (e) {}
                Math[6] = v24;
                try {
                    v24.h = f1;
                } catch(e25) {
                }
                Math.log2(v19);
            }
            return f0;
        },
    };
    return o27;
}
const v28 = f1();
const v29 = f1();
const v30 = f1();
class C31 {
    constructor(a33) {
        Object.defineProperty(this, v28, { enumerable: true, get: f0 });
        const o36 = {
            "maxByteLength": 4294967296,
        };
        const v38 = new ArrayBuffer(2, o36);
        new Int32Array(v38);
    }
    #g = v30;
    static 2;
    [f0] = f1;
}
const v41 = new C31(v30);
const v42 = new C31(v28);
const v43 = new C31(C31);
const v44 = [61449,827429132,4,1690563734,-4096,-422185197,6,-60054];
[10000,-2139351897,57986,-1073741824,268435440,7,257];
[5,255,-1996017976,-4294967295,63337,-14,2];
function F47(a49, a50, a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = v41;
    } catch(e53) {
    }
    try {
        this.b = f0;
    } catch(e54) {
    }
    try {
        this.d = v30;
    } catch(e55) {
    }
    a50 /= v42;
    delete v41[9];
    new f1();
    v41[v41];
    try {
        a52.c = a50;
    } catch(e59) {
    }
}
const v60 = new F47(v42, v44, v44, v30);
new F47(v29, v60, v43, v60);
new F47(v41, v42, v44, v43);
function f64(a65, a66) {
    const o67 = {
    };
    return o67;
}
with (f64()) {
    new BigInt64Array(2147483649);
}
