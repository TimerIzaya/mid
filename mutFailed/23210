const v0 = [-888420.5794834039];
const v1 = [1000000000000.0,-23.796736537720562,NaN,-199193.85238900618,-123725.93751637836,-18009.180840053712,909.1685436639768,-5.0,712107.6619658549];
const v2 = [2.220446049250313e-16,-1000000000.0,0.9331909804841266,-Infinity,-5.0,0.3877596985520275,-2.220446049250313e-16];
const v4 = v1.constructor;
try { new v4(); } catch (e) {}
function F7() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = F7;
    } catch(e9) {
    }
    try {
        this.f = false;
    } catch(e10) {
    }
    try {
        this.b = false;
    } catch(e11) {
    }
}
const v12 = new F7();
const v13 = new F7();
const v14 = new F7();
const v15 = [0.6612384037511738,2.2940008033736596];
const v16 = [1000000000000.0,-1000000000000.0,3.173585042601135e+307,-5.0,-1e-15];
function f17(a18, a19, a20, a21) {
    const v22 = a18?.g;
    try { new v22(); } catch (e) {}
    a19[2] = a19;
    let v24 = a21?.g;
    Object.defineProperty(v24, v14, { set: f17 });
    v24 %= v15;
    const o25 = {
        "apply": f17,
        "call": f17,
        "deleteProperty": f17,
        "get": f17,
        "getOwnPropertyDescriptor": f17,
        "has": f17,
        "isExtensible": f17,
        "preventExtensions": f17,
        "set": f17,
    };
    new Proxy(v12, o25);
    try { new v24(); } catch (e) {}
    const o36 = {
        __proto__: v15,
        "h": v16,
        ...a18,
        [a21](a30, a31) {
            try { new a30(a20, a19, a21, a31); } catch (e) {}
            return 1350805809;
        },
        "c": v13,
        268435439: a18,
    };
    return o36;
}
const v38 = ~10;
function f40() {
    return f40;
}
const v42 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v44 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v45 = [601759695];
const v46 = [1073741824,1073741823,1376142744,1073741825];
function f48(a49, a50, a51, a52) {
    function f53() {
        let v56 = Float64Array;
        v56 = a50;
        b = v45;
        v42.length;
        try {
            v46.forEach();
        } catch(e59) {
        }
        const v60 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v62 = Symbol.toPrimitive;
        const o68 = {
            toString(a64, a65) {
                const v66 = a52 && v56;
                a64 *= v62;
                v66 <= v60;
                return a50;
            },
        };
        const o88 = {
            "c": -4294967297n,
            [522675525n](a71, a72) {
            },
            "c": v45,
            asinh(a74, a75) {
                return "Vre";
            },
            "b": -4294967295,
            [-4294967297n](a77, a78, a79, a80) {
            },
            "e": -4294967295,
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v44,
            ...v45,
            "type": "Vre",
            ..."Vre",
            valueOf(a82, a83) {
                return a52;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            toString(a85, a86, a87) {
                return a51;
            },
            5: -4294967295,
            6: -268435456,
        };
    }
    f53();
    %OptimizeFunctionOnNextCall(f53);
    return v45;
}
const v90 = f48();
-2147483648 === -2147483648;
const v94 = -9223372036854775808 || -9223372036854775808;
try { ("536870887").link(v2); } catch (e) {}
const v98 = ("-4294967296")[2];
"p" + v38;
const v102 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f103(a104, a105, a106, a107) {
    function f108() {
        const v109 = v102.length;
        v109 & v109;
        ("p").length;
        return;
        const v113 = ("p").length;
        v113 === v113;
        try {
            const t139 = "jLW";
            t139.__proto__ = v13;
        } catch(e115) {
        }
        const v117 = new Float32Array(1334);
        v117[1283] = v117;
        return a104;
    }
    f108();
    %OptimizeFunctionOnNextCall(f108);
    return a105;
}
const t151 = [5.065712489635526,-4.0,-1.078367651051927e+308,-1.7976931348623157e+308,0.0,-1000000000.0];
t151[Symbol.toPrimitive] = f103;
function F122(a124, a125, a126) {
    if (!new.target) { throw 'must be called with new'; }
    const v128 = [512n];
    const o131 = {
        "maxByteLength": 3462,
    };
    const v133 = new SharedArrayBuffer(3383, o131);
    new Int16Array(v133);
    v128.includes(512n);
    function F137(a139) {
        if (!new.target) { throw 'must be called with new'; }
        const v140 = this.constructor;
        let v141;
        try { v141 = new v140(this, F137, v140, F137, this); } catch (e) {}
        try { v128.some(f40); } catch (e) {}
        try { v133.slice(-15, v94); } catch (e) {}
        try { v102.findLastIndex(v140, v128); } catch (e) {}
        var b = v141;
        try {
            v90.__proto__ = v102;
        } catch(e145) {
        }
        this.h = a139;
    }
    const v146 = a125?.constructor;
    try { new v146(); } catch (e) {}
    a125 === a125;
    const v150 = this.constructor?.constructor;
    try { new v150(-2147483648); } catch (e) {}
}
function f152() {
    class C153 {
    }
    try { new C153(); } catch (e) {}
    const v155 = new C153();
    const v156 = v155?.constructor;
    try { new v156(); } catch (e) {}
    for (let v158 = 0; v158 < 5; v158++) {
        class C160 {
            static {
                this < this;
            }
        }
        new F122(undefined, v155);
    }
}
%PrepareFunctionForOptimization(v2);
f152(v98, v2, 3);
%OptimizeFunctionOnNextCall(v0);
f152();
