const v3 = [9n,9n,-1738878052n];
const v4 = [1361839322n,v3,1361839322n,v3,v3];
const v5 = [v4,v4,1361839322n,v4,v3];
[1073741823];
[-268435456,23690,-128,6,8,-256,35326,-2147483649,8,-9007199254740991];
const v8 = [39283,128,512,3,16,2,-5];
const v9 = [v4];
[v9,-1738878052n,v9,v5,v5,1361839322n,v9];
const v11 = [v3];
const v14 = new Int32Array(3535);
new BigUint64Array(1709);
const v20 = new Int8Array(2751);
class C21 {
    constructor(a23, a24) {
        function f25() {
            function f26(a27, a28) {
                try { ("function")["-268435456"](); } catch (e) {}
                return a28;
            }
            return f26;
        }
        function f32(a33) {
            const v36 = new SharedArrayBuffer(255);
            new Uint8ClampedArray(v36);
        }
        Object.defineProperty(this, Symbol.toPrimitive, { writable: true, get: f25, set: f32 });
        const v41 = this.e;
        const o45 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o45);
        try { new v41(); } catch (e) {}
        const v49 = Math.atan2(this);
        v49 ** v49;
    }
}
const v51 = new C21(C21, C21, v11, v14);
v51.o = v8;
try { v51.o(1361839322n); } catch (e) {}
const o56 = {
};
new Proxy(v20, o56);
new C21();
