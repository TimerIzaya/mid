let v1 = -7.316913175818127e+307;
class C3 {
    static #b = 4053;
    static toString(a5) {
        const v6 = [-554799.8407135659,-2.220446049250313e-16,731041.3668807968,-0.0,0.12359094160643747,-1000.0,-1e-15,-5.0,314.0545280433057];
        v6.length = 0;
        const v8 = [-1000000000.0,-2.220446049250313e-16,1e-15,1000000000000.0];
        const o9 = {
            __proto__: "object",
            [v6]: v8,
            ...v6,
        };
        %VerifyType(v1);
        const v10 = [];
        [v10,v10];
        class C12 {
            constructor(a14, a15) {
                this.propertyIsEnumerable(C12);
            }
        }
        try {
            a5.#b >>= "object";
        } catch(e17) {
        }
        return 0;
    }
    static d = v1;
    #g = "object";
    536870912 = v1;
}
const v18 = new C3();
const v19 = new C3();
v19[536870912] = v19;
new C3();
class C21 {
    get g() {
        try {
            class C26 {
            }
            const v27 = new C26();
            [-1.0,v27,-48725,2119294231];
            const t40 = 2119294231;
            t40.f = C3;
        } catch(e29) {
        }
        const o32 = {
            "maxByteLength": 636,
        };
        const t48 = 4053;
        const v34 = new t48(5, o32);
        const v36 = new BigUint64Array(v34);
        return v36;
    }
}
const v37 = new v18();
try { v37.hasOwnProperty(C3); } catch (e) {}
new C21();
new C21();
for (let v44 = 0; v44 < 5; v44++) {
    function f45() {
        class C46 {
        }
        const v47 = new C46();
        const v48 = v47?.constructor;
        try { new v48(); } catch (e) {}
        let v50;
        try { v50 = v47.isPrototypeOf(v47); } catch (e) {}
        try {
            C3.a = v50;
        } catch(e51) {
        }
        ("object")[4028911567];
        return v47;
    }
    const v54 = f45()?.constructor;
    try { new v54(); } catch (e) {}
    %OptimizeFunctionOnNextCall(f45);
}
v1 = -6.324785853245783e+307;
const o58 = {
    "maxByteLength": 255,
};
const v60 = new SharedArrayBuffer(255, o58);
new v60(v60);
const v65 = new Date();
const o66 = {
    __proto__: Date,
    [3.0]: v65,
};
try { o66.toString(); } catch (e) {}
