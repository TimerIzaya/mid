function f0() {
}
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = f0;
    } catch(e3) {
    }
    try {
        this.c = f0;
        const v4 = /4VL[a-zA-Z0-9]/uimy;
        const t11 = /ufoo(?!bar)baz/ums;
        t11[-2] &&= v4;
        Math.log1p(-2.0);
    } catch(e9) {
    }
}
new F1();
const v11 = new F1();
try { v11.b(); } catch (e) {}
const v13 = new F1();
try { v13.b(); } catch (e) {}
[-4294967297,65536,436189817,-65536,-1971120385];
[4294967295,37432,-12,-4096];
[2,9,-4294967295,20203,-852382415];
[-9223372036854775808];
[-55346,-215,4747,-268435456,1321935626,4,9223372036854775807,1266526512];
const v20 = [-2,610464722,26158,7,536870888,-18769,4294967297];
class C21 {
    2463;
    g;
    static {
        const v23 = [this,this,f0,v20];
        const v24 = [v11,F1];
        const v25 = [v24,this,v11,v24,v23];
        v25[2] = v25;
    }
    e;
    static set d(a27) {
    }
    static #n(a29) {
        function f30(a31) {
            return a31;
        }
        class C32 extends f30 {
        }
    }
    n(a34, a35) {
        const v38 = new Float32Array(3683);
        new Int16Array(3016);
        new Float32Array(129);
        return v38;
    }
    static get c() {
        const v46 = `
        `;
        eval();
    }
}
([974836.255416306,7.54270135293536,0.0,0.35539841926815563,1.385396251341163,-1000000000000.0,NaN,-1.7976931348623157e+308]).toLocaleString();
const o51 = {
};
o51.constructor;
const v53 = new C21();
const v54 = v53?.hasOwnProperty;
const v56 = new Map();
new v56([-50.96907394271625,3.0,-570016.204056581,0.7917375798188904,5.844526521291116e+307,-1.7976931348623157e+308,-2.2250738585072014e-308,0.0,1.0], [-2.220446049250313e-16]);
try { new v54(f0); } catch (e) {}
new C21();
new C21();
[];
549 ^ 549;
const v67 = new BigUint64Array(549);
const v70 = new Uint8ClampedArray(127);
for (const v71 in v70) {
    try { v67.filter(); } catch (e) {}
}
