[-657.529301546519,-939.7830226167321,-9.680455939216493];
const v1 = [0.5699115832890028,-628640.3320306209,2.2250738585072014e-308,9.812671703776438,-1.8172745565123964];
[807.8264822948747,1.5784486792810686,-0.0,-1000000000.0];
const v4 = Symbol.iterator;
const o13 = {
    [v4]() {
        let v6 = 10;
        const o12 = {
            next() {
                v6--;
                const v10 = v6 == 0;
                const o11 = {
                    "done": v10,
                    "value": v6,
                };
                return o11;
            },
        };
        return o12;
    },
};
let v23 = Uint32Array;
new v23(v1);
function f25() {
    const t24 = "-26733";
    t24[3] = "-26733";
    return "-26733";
}
%PrepareFunctionForOptimization(f25);
const t29 = -4.0;
t29();
%OptimizeFunctionOnNextCall(f25);
f25();
new Uint8Array(67);
const v32 = new v1(1631);
const v35 = new Uint32Array(Uint32Array);
try {
    v35.length = -2;
} catch(e37) {
}
class C38 {
}
const v39 = new C38();
v39.d;
try { (369.66925031752294).getOwnPropertySymbols(); } catch (e) {}
Symbol[5] = v32;
v23 ||= Uint32Array;
-v39.e;
