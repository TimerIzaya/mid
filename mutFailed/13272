function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 129;
    } catch(e3) {
    }
    try {
        this.f = 129;
    } catch(e4) {
    }
    try {
        this.g = 129;
    } catch(e5) {
    }
}
const v6 = new F0();
[-960.7381643354993];
[-671.3090150871242,-1.0];
[0.9173781206367507,5.233957886943719e+307,0.12662165959368632,-921947.547929243,743.1321381303028,2.220446049250313e-16,2.2250738585072014e-308];
const v13 = F0?.isPrototypeOf;
let v14;
try { v14 = new v13("toString"); } catch (e) {}
class C18 extends Int32Array {
}
let v19;
try { v19 = new v14(); } catch (e) {}
const v20 = new C18();
Reflect.construct(Uint8Array, [v20,v20], C18);
[0.18372866515424147,461665.2775589656,2.6563672835372962,2.0,-Infinity,1e-15,273866.66349880304];
const v25 = [0.1647584749770924,0.0,281189.4702332646,-640144.185384929,-9.96248851328583,-1000000000000.0,NaN,-9.185127476558462e+307,-588.058716110192];
[8.063065675598975e+307];
v19 >>> 51086;
[5,-1726645307,3,-22869,28097];
[-128,738741997,61681,1,-536870912,255,512];
[1326394077,3,-4096,-6,58642,8];
const v37 = [-20857,-1303616328,-1864740753,-1023402966,129,-20506,7,8229,-53914];
v37[536870912] = v37;
127 * 127;
new Uint8Array(127);
const o45 = {
    toString(a43, a44) {
    },
};
let v46 = undefined;
const o49 = {
    set b(a48) {
    },
};
v46 = o49;
o49.f = o49;
Uint8Array.prototype = Uint8Array;
const v52 = new Uint8Array(165);
v52[113] = v52;
function F53() {
    if (!new.target) { throw 'must be called with new'; }
    const v55 = [-5.0,-4.0,-1.7976931348623157e+308,-897.6003446951657,-1000000.0,1.8928166106024224e+306,-2.0,-1000000000000.0];
    function F56(a58, a59, a60, a61) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v62 = new F56(v55, F53, v55, F56);
    const v64 = [F53,F53,F53,F53];
    Reflect.apply(v55.indexOf, v62, v64);
}
function F67() {
    if (!new.target) { throw 'must be called with new'; }
    function F69() {
        if (!new.target) { throw 'must be called with new'; }
    }
}
const v71 = new F67();
function f72(a73, a74) {
    const o82 = {
        n(a76, a77) {
            class C78 {
            }
            new Int16Array([-1.7976931348623157e+308,1000000.0,-Infinity,1000000.0,1e-15,4.0,0.05361702581874339,2.220446049250313e-16,-384803.16239734297]);
        },
        "a": v71,
    };
    for (let v83 = 0; v83 < 100; v83++) {
        Math.random();
    }
    return o82;
}
const t84 = null;
new t84(257);
%PrepareFunctionForOptimization(f72);
f72().n();
%OptimizeFunctionOnNextCall(f72);
f72();
const v92 = new F0();
new F0();
function f94() {
    return F0;
}
let v95;
try { v95 = f94.call(v6); } catch (e) {}
[-7.480112479917647,334652.7187640348,1.7976931348623157e+308,0.3807237504367885,Infinity,-1000000000.0,2.220446049250313e-16,1000.0,-1e-15,-6.74798094158827e+307];
[909085.672125136,0.5921202174758904,-1.2772330716572373e+308,-1000000000.0,-0.8794573902604021,4.654823049897928,0.0,-1000.0,-8.121534505081537e+307];
const v98 = [1000000.0,-880.1142437278635];
const v101 = new v95(512);
const v102 = v101?.constructor;
try { new v102(v25, Uint8Array, v101); } catch (e) {}
const v106 = new Int16Array(3395);
-512;
try { new Float32Array(v92, Int16Array, Float32Array); } catch (e) {}
new Float32Array(512);
function F112(a114, a115, a116, a117) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.toString(); } catch (e) {}
    const v119 = this.constructor;
    try { new v119(); } catch (e) {}
    typeof F53 === "symbol";
}
try { new F112(v6, v98, v106, Float32Array); } catch (e) {}
const v125 = new F112(F112, F112, F112, F112);
const v126 = v125?.constructor;
try { new v126(Uint8Array, v106, v98, v106); } catch (e) {}
new F112();
