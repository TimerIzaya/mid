new Int8Array(14);
new Uint8Array(64);
let v9 = 255;
for (const v11 in [-14339,735253629,4294967296,3,268435456,3,57019,268435439]) {
    ("-2").normalize("NFKC");
}
const v16 = new Int16Array(v9);
class C17 extends Int8Array {
    p(a19, a20, a21) {
        const o24 = {
            4294967296: 1733353236,
        };
        const o26 = {
            get h() {
                return o24;
            },
            ...o24,
        };
        const v27 = new Set();
        try {
            v27.size = v9;
        } catch(e28) {
        }
        return v16;
    }
    static #a = -51150.77262053802;
    constructor(a30) {
        const v31 = this.constructor;
        try { new v31(); } catch (e) {}
        const v36 = 14 && 14;
        const v37 = ~v36;
        Math.sinh(Math);
        const v39 = -14;
        const v40 = +v37;
        2147483649 & v39;
        v36 | v40;
    }
    [64] = Int16Array;
    #d;
    /*
    constructor(a44, a45) {
        const v46 = this.constructor;
        try { new v46(v46); } catch (e) {}
        this[14] >>>= v9;
        let v48 = 0;
        while (v48 < 1) {
            const v53 = v9--;
            Math.atan();
            v9 * 7;
            Math.floor();
            const v57 = v53 + 7;
            v57 * v57;
            const v59 = v48++;
            v59 - v59;
        }
    }
    */
    h = -51150.77262053802;
    #c = 855.825692462291;
}
const t60 = "symbol";
delete t60[1];
class C63 {
}
Symbol.iterator;
new C17();
new C17();
new C17();
function f69() {
    return f69;
}
const v70 = [8.944191192251868,-1.4998894798282654e+308,4.0,-0.0,-1000000000000.0,-5.0,-2.220446049250313e-16];
const v71 = [-5.83623517593701,-1.0,-1e-15];
const v72 = [692.912813481568,126686.58689393173];
function f75(a76, a77) {
    const o81 = {
        [a76](a79, a80) {
        },
    };
    new Uint32Array(5);
    Date[-22872n] = Date;
    return o81;
}
const v87 = f75(v70, 128);
f75(v72, -3);
const v89 = f75(v71, 128);
/j(x)(x)(x)\2/gud;
/[\0](?:ab|cde)/vimsy;
const v92 = /^xxx$/uisy;
try { v87.p(); } catch (e) {}
try { v89["n"](v92, "n", f75, "n"); } catch (e) {}
new Uint32Array(91);
new Int16Array(4);
new Int16Array(127);
