const v0 = [];
const v3 = new BigInt64Array(256);
class C5 extends BigInt64Array {
    [BigInt64Array];
    static [BigInt64Array] = BigInt64Array;
}
new C5();
new C5();
new C5();
const v10 = new Uint8Array(1000);
let v11 = 7;
const v13 = new Uint8ClampedArray(v11);
class C14 extends v13 {
    constructor(a16, a17, a18, a19) {
        super(a16, a17, a19);
        %VerifyType(this);
        super.byteLength;
        try { a16(a18, v10); } catch (e) {}
        v11 + Uint8Array;
        v11 = a17;
        new BigUint64Array(1000);
        new Float64Array(Float64Array);
        new Uint8Array(228);
    }
    static 0;
    static #f;
}
new C14(v11, 1000, BigInt64Array, v11);
new C14(256, v0, 1000, v11);
new C14(1000, v3, v10, Uint8Array);
const v38 = new Uint16Array(3225);
for (const v39 of v38) {
    v39[3] = 5n;
    Uint8ClampedArray * Uint8ClampedArray;
}
