class C9 {
    static #d = 51519;
    static set a(a11) {
        function F12(a14, a15, a16) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.g = this;
            } catch(e17) {
            }
            try {
                this.f = 54182n;
            } catch(e18) {
            }
        }
        const v19 = new F12(a11, a11, a11);
        new F12(-8n, a11, 42751);
        new F12(54182n, 9007199254740991n, v19);
    }
}
new C9();
new C9(51519, C9);
new C9();
function F25() {
    if (!new.target) { throw 'must be called with new'; }
    function f27(a28) {
        const o29 = {
        };
        return o29;
    }
}
new F25();
const o31 = {
};
const v34 = new Infinity();
const v36 = new BigInt64Array();
const v37 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
try { v37.toLocaleString(); } catch (e) {}
const v39 = [-1.7976931348623157e+308];
function f40(a41, a42, a43, a44) {
    const o45 = {
    };
    return o45;
}
const v46 = f40(v36, 129, v39);
const v47 = f40(v34, 129, v37);
for (let v48 = 0; v48 < 5; v48++) {
    v47 % v46;
}
class C50 {
    #p(a52, a53, a54, a55) {
    }
}
for (let v56 = 0; v56 < 24; v56++) {
}
function F57() {
    if (!new.target) { throw 'must be called with new'; }
}
const o59 = {
};
function F60(a62, a63, a64, a65) {
    if (!new.target) { throw 'must be called with new'; }
}
