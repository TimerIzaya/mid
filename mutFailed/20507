function f3(a4, a5) {
    const o17 = {
        "d": a4,
        "e": 2.0,
        "c": a5,
        5: 740465.511189563,
        6: a4,
        "h": a4,
        "a": 0.15275878794427156,
        2147483649: 740465.511189563,
        set g(a7) {
            Math.ceil(a7);
            const v12 = ~a7;
            a7 + this;
            const v14 = +v12;
            512 % 512;
            v12 && v14;
        },
    };
    return o17;
}
f3(740465.511189563, 0.15275878794427156);
f3(0.15275878794427156, 740465.511189563);
f3(740465.511189563, 2.0);
new WeakSet();
function F30(a32, a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
}
class C35 {
    static get g() {
        try {
            var a = super.subarray();
        } catch(e38) {
        }
    }
}
new C35();
for (const v42 in [-14339,735253629,4294967296,3,268435456,3,57019,268435439]) {
    ("-2").normalize("-2");
}
new Map();
class C51 extends WeakMap {
    536870887;
}
const v54 = new Int32Array(2917);
v54["lastIndexOf"](10);
gc();
try {
} catch(e63) {
}
function F64(a66, a67) {
    if (!new.target) { throw 'must be called with new'; }
}
function F68(a70, a71) {
    if (!new.target) { throw 'must be called with new'; }
}
