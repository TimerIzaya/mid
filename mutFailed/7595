const v0 = /\p{Nd}?/gudmy;
const v1 = /6a[^a]/gdim;
/(ab|cde)/gudmsy;
const v3 = /^/gvdis;
const v4 = /0Wa\W/gimy;
const v5 = /[\d-z]/isy;
class C6 {
    get d() {
        let v10 = 2.0;
        try { this.substring(); } catch (e) {}
        v10 /= 1000000000000.0;
        try { new C6(v4, v0, v1, v1, v1); } catch (e) {}
        v5[9];
        super.c;
        const v20 = Math.random();
        const t15 = [Infinity];
        t15.g = v20;
        let v22 = 268435440;
        v22++;
        new Uint8Array(v22);
        return arguments;
    }
    [v3];
    57 = v0;
    [v0] = v5;
    static 1;
    static {
        super.b = this;
    }
    constructor(a28, a29) {
        const v30 = this.__lookupGetter__;
        try { new v30(); } catch (e) {}
        const v33 = ~a29[2];
        function f37(a38, a39, a40, a41) {
            a38.length;
            a40++;
            const o47 = {
                n(a45, a46) {
                    return v33;
                },
            };
            return o47;
        }
        f37(v5, Uint8Array, f37);
        for (let v49 = 0; v49 < 625; v49++) {
            v49 >>> v49;
            f37(Uint8Array);
        }
    }
}
new C6();
new C6();
const v55 = new C6();
function f56() {
    return C6;
}
const v60 = [-6.8035006781971e+307,1000000.0,1000.0,-2.715046407601891];
class C62 extends Array {
}
const v63 = new C62();
v63.concat(v60);
class C65 {
    [10000] = 10000;
    static toString(a67) {
    }
    #d = -9007199254740991;
    p(a69, a70) {
        let v71;
        try { v71 = new this(a70, this, a69); } catch (e) {}
        super.g = v60;
        return Reflect.construct(v71, [v60,v63], v71);
    }
}
const v78 = v55.constructor;
try { new v78("constructor", "constructor", v78, v78); } catch (e) {}
if (([0.7021385356541069,NaN,3.752300846891645,76.93522341476432,-277.4575758719999,9.404843788357361,-320.7110241266939])[Symbol.hasInstance]) {
}
0.8060433861090782 << 0.8060433861090782;
const v85 = Math.round(0.8060433861090782);
new C65();
const v87 = new C65();
let v88 = new C65();
v87[1024] = 8n;
let v90;
try { v90 = v87.n(); } catch (e) {}
v88 = v90;
function f91() {
    return 10000;
}
const o99 = {
    "e": v60,
    "h": -9007199254740991,
    "a": v85,
    [8n](a93, a94, a95, a96) {
        eval();
    },
};
