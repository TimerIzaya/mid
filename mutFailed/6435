new Uint16Array(11);
Array(1000);
class C9 extends Int32Array {
}
const v10 = new C9();
for (let v11 = 0; v11 < 5; v11++) {
    const o15 = {
        "maxByteLength": 1073741824,
    };
    const v17 = new ArrayBuffer(15, o15);
    new Int32Array(v17);
    v10["p" + v11] = v11;
}
Math.log1p(11);
Array.__proto__ = this;
new Uint16Array(256);
class C29 extends Uint32Array {
}
class C30 {
    constructor(a32, a33) {
        Math.asin();
        this ** this;
    }
}
const v38 = new Int16Array(123);
const v43 = new Uint32Array(3);
for (let i45 = 0; i45 < 9; i45++) {
    v43[i45] = Int32Array;
    const v51 = Array != i45;
    if (v51) {
        v43 * v51;
    } else {
    }
}
Math.atan2(536870912, -9);
const v65 = [1073741824,1073741823,1376142744,1073741825];
function f67(a68, a69, a70, a71) {
    function f73() {
        const o80 = {
            "c": a71,
            valueOf(a78, a79) {
                return this;
            },
        };
        return "Vre";
    }
    f73();
    try { v65["find"](..."find"); } catch (e) {}
}
class C85 extends v65.constructor {
    static [v38];
}
new C85();
for (let v87 = 0; v87 < 10; v87++) {
    f67(522675525n, 0.5375507050396837, 0.5375507050396837, v87);
}
Math.atan2(1e-15, 536870887);
Math.expm1(1e-15);
