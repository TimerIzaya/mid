const v2 = new Float32Array(56);
new BigInt64Array(255);
const v8 = [3.0];
function F9(a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
}
const v14 = new F9(-725.0347156854516);
new F9(v14, v8);
const v17 = new BigInt64Array(127);
class C18 extends BigInt64Array {
    m(a20, a21, a22) {
        return v2 > (typeof a22 === "boolean");
    }
    static #h;
    constructor(a28) {
        function f29(a30, a31) {
            const o32 = {
                "c": v8,
                "h": a31,
            };
            return o32;
        }
        f29(v8, a28);
        f29(v8, v8);
    }
    static {
        try { this(this); } catch (e) {}
        function F37(a39, a40, a41) {
            if (!new.target) { throw 'must be called with new'; }
        }
        [[]];
        function f44() {
            return f44;
        }
        v17.byteLength;
    }
    static [255];
}
new C18();
new C18();
new C18();
const v51 = new Int8Array(180);
v51[v51.byteOffset] = 5;
