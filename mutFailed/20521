new Float64Array(2153);
new BigInt64Array(512);
const t2 = 64;
new t2(64);
[1.0,1000.0,-1000.0,-2.220446049250313e-16];
const v10 = [-2.2250738585072014e-308,-2.0];
try { v10.findLastIndex(v10); } catch (e) {}
[-995.7407842627497,0.6700039363551933,-275.83941518736845,1.3303876787620752e+308,-314.2576324820476,1.0,5.602685643438058e+307,72560.06112658815,2.0690851231845642e+307,-607595.2293045932];
const v14 = new v10();
const v15 = v14?.constructor;
try { new v15(Uint8Array, Uint8Array, Uint8ClampedArray); } catch (e) {}
function f17(a18, a19, a20, a21) {
    a18.length = a18;
    a18.length = a18;
    a20?.findLast;
    const o23 = {
    };
    o23.c = o23;
    const o28 = {
        n(a25, a26) {
            try { v15.hasOwnProperty(a20); } catch (e) {}
            return a19;
        },
    };
    try { Uint8Array.n(Float64Array, a18); } catch (e) {}
    return (2153).n(a21, o28);
}
for (let v31 = 0; v31 < 625; v31++) {
    v31 >>> v31;
    f17(f17, v31);
}
