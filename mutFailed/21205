const v0 = /(abc+)/guims;
const v1 = /1(?:a?)+/gdm;
const v2 = /j(?=a){0,10}a(?:a+)+/dimsy;
let {"source":v5,"unicode":v6,} = v0;
const v9 = v0[Symbol.search];
const v13 = 128 >>> 128;
!v9;
const v15 = v6 + v6;
Math.cbrt(v13);
function f18(a19, a20, a21) {
    const o25 = {
        "f": f18,
        ...v2,
        toString(a23, a24) {
            return a23;
            return a19;
        },
        "a": a21,
        "c": a20,
        "e": v1,
        "g": 9223372036854775807n,
        __proto__: 2147483649n,
    };
    try {
        o25.toString(v1, undefined);
    } catch(e28) {
    }
    return o25;
}
const v29 = f18(2147483649n, 2147483649n, v1);
f18(9223372036854775807n, 2147483649n, 12n);
f18(9223372036854775807n, 2147483649n, v29, f18, 9223372036854775807n);
const v34 = new Int8Array(3);
new BigInt64Array(2470);
if (v15) {
    try { v29.toString(2147483649n, v13, 256); } catch (e) {}
    Object.defineProperty(v34, "e", { writable: true, configurable: true, set: f18 });
} else {
    v29.c;
}
new Uint8Array(256);
[32061,-43880,-9007199254740990];
[-9223372036854775807,1073741825,1024,-4294967296,-1277624068,-536870912,-9007199254740990];
[-1024,-23547,-9223372036854775807,343301775,13,-4294967296,6,-2147483647,-4294967295];
new RangeError([49197,268435456,-12,-5156,35920,-45892,-667,536870888,65537,-12]);
