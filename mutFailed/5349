function f0() {
}
const v4 = [-65537n,-54977n,10n,-65537n];
const v5 = [f0,v4,v4];
const v6 = [v5,f0,v5];
class C7 {
    [v6] = v5;
    static {
        this.name;
        const v10 = this || this;
        v10.prototype = v10;
        this.f ^= v6[v6];
        try {
            v6.f = v10;
        } catch(e12) {
        }
    }
    static #a;
}
new C7();
new C7();
new C7();
const v16 = [-53613,268435440,268435440,2,-65536,-2147483647];
const v17 = [8];
const v18 = [-1024,-2147483647,-37738,-2,21596,2147483649,9007199254740992,-2039218916];
v18[1] = v18;
class C19 {
    static #f;
    static set f(a21) {
        a21(this, this, a21, v17);
    }
    constructor(a24) {
        const v25 = this?.constructor;
        try { new v25(-65537n); } catch (e) {}
        a24[0];
        this.e = v17;
    }
}
try { new C19(C7); } catch (e) {}
const v29 = new C19(v17);
v29.g = v29;
new C19(v18);
const v31 = new C19(v18);
let v34;
try { v34 = v31.reduceRight(4294967295, v18, C19); } catch (e) {}
v18[6] ||= -10;
function f35(a36, a37, a38, a39) {
    const v40 = v17 in v16;
    v40 && v40;
    try { v34(...v17, ...v16, v18, ...v40); } catch (e) {}
    return f35;
}
const v43 = f35();
try { new v43(v29, v43, v43, v5); } catch (e) {}
