new Uint16Array(109);
const v5 = new Uint16Array(256);
2968 >>> 2968;
const v9 = new Uint8Array(2968);
class C10 {
    constructor(a12, a13) {
        try { a13.valueOf(256, Uint8Array, this, 256); } catch (e) {}
        let v15;
        try { v15 = this.getUint16(this, this, a13, 256); } catch (e) {}
        const v16 = new Uint8Array(109, v15, 109);
        v16[a12];
    }
    static c;
    static #c;
    static valueOf(a19, a20, a21, a22) {
        v9[Uint16Array] %= a22;
        try {
            v5.b = this;
        } catch(e23) {
        }
        return a21;
    }
}
const v24 = new C10(2968, C10);
try { v24.propertyIsEnumerable(256); } catch (e) {}
new C10(109, 2968);
const v27 = new C10(2968, v24);
function F28() {
    if (!new.target) { throw 'must be called with new'; }
    const v30 = this?.constructor;
    try { new v30(); } catch (e) {}
}
const v33 = new F28();
v33.length = v33;
BigInt64Array.d = BigInt64Array;
604.4479109019192 >>> 604.4479109019192;
-2.220446049250313e-16 | -2.220446049250313e-16;
const v44 = [-2.220446049250313e-16,-2.220446049250313e-16];
try { v44.pop(); } catch (e) {}
const v46 = [v44];
try { v46.findLast(Uint8Array); } catch (e) {}
const v48 = [0.3083488057663979,0.3083488057663979];
const v49 = v48?.groupToMap;
try { new v49(109); } catch (e) {}
v48.push(0.3083488057663979);
class C52 {
    constructor(a54, a55) {
        a54.g = a54;
        const v56 = this.__lookupGetter__;
        try { v56.call(-2.220446049250313e-16); } catch (e) {}
        try { new v56(); } catch (e) {}
        let v60 = ~a55[2];
        v60++;
        try { new Uint32Array(v27, 28, v33); } catch (e) {}
        function f66(a67, a68, a69, a70) {
            a67.d = a67;
            a67.length;
            a69++;
            const o76 = {
                n(a74, a75) {
                    return v60;
                },
            };
            return o76;
        }
        f66(v33, Uint8Array, f66);
        for (let v78 = 0; v78 < 625; v78++) {
            v78 >>> v78;
            f66(Uint8Array);
        }
    }
}
new C52(v44, v44);
const v83 = new C52(v46, v48);
try { v83.constructor(v83, v27); } catch (e) {}
const v85 = v83.constructor;
try { v85.call(v5); } catch (e) {}
const v87 = new v85(604.4479109019192, 0.3083488057663979);
const v88 = v87?.constructor;
try { new v88(v33, Uint16Array); } catch (e) {}
