new BigUint64Array(4);
let v8 = 10;
for (; v8--;) {
    /a+b|c[5d8]/vsy;
    /r4\xed\xa0\x80[^OSi(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10]/vsy;
    /\ba+b|c5ww/gvdiy;
}
new Float64Array(1468);
new Uint16Array(7);
new Map();
class C25 {
}
new C25();
new C25();
function f28() {
}
new Float32Array(1000);
new Uint8Array(58);
function F35() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v39 = Array(19793);
        for (const v40 of v39) {
        }
        const v41 = [v39,v39,v39];
        new BigUint64Array();
        const v45 = [];
        function F46() {
            if (!new.target) { throw 'must be called with new'; }
            class C48 {
            }
            for (let i51 = 0, i52 = 10;
                i51++, i51 < i52;
                (() => {
                    const v57 = [601759695];
                    BigUint64Array - v57;
                    C48.__proto__;
                    const v60 = [1073741824,1073741823,1376142744,1073741825];
                    function f61(a62, a63, a64, a65) {
                        function f66() {
                            return a62;
                        }
                        function f67(a68, a69) {
                        }
                        try { f67(); } catch (e) {}
                        f67(v60, C48);
                        try { v60["find"](..."find", a65, ...v57, ...v60); } catch (e) {}
                        return C48;
                    }
                    for (let v74 = 0; v74 < 10; v74++) {
                        f61(v74, f61);
                    }
                })()) {
            }
        }
        const v78 = new F46();
        new F46();
        const o80 = {
            "apply": f28,
            "call": f28,
            ...C25,
            __proto__: v45,
            "a": this,
            [this]: BigUint64Array,
            "d": v78,
            "construct": Array,
            "defineProperty": f28,
            "deleteProperty": f28,
            "get": Array,
            "has": f28,
            "isExtensible": Array,
            "setPrototypeOf": Array,
        };
        new Proxy(Array, o80);
        v45[65536] = v41;
        for (let v83 = 0; v83 < 50; v83++) {
        }
        const v84 = [];
        let v86 = 536870912n;
        v86--;
        const v88 = [509174734,-30078599,-1953700757,-725509519,50139,1073741825];
        /.\P{Decimal_Number}/gvds;
        /xyz{1,32}?a\nb\bc/ums;
        class C91 {
        }
        const v92 = C91.__defineSetter__;
        try { v92(v88); } catch (e) {}
        v84 >= Uint16Array;
    } catch(e95) {
    }
}
new F35();
new F35();
