new BigUint64Array(16);
const v5 = new Float64Array(1024);
class C8 {
    static #b;
    constructor(a10, a11) {
        try {
            a10.#b = 860736081;
        } catch(e12) {
        }
    }
}
new C8(16);
let v15 = "-4294967295";
class C16 {
    static {
        for (const v18 of v15) {
        }
    }
}
const v19 = new Uint8ClampedArray(3);
class C20 extends Uint8ClampedArray {
    [v5] = v19;
    o(a22, a23) {
        [-13.783187308857464,-2.0];
        [0.21566508231368497];
        [0.2599647033383765,-1000.0,8.493839687933547e+307,0.8930301957350354,-5.099444548771368e+307,-699659.6745937276,218.18604939513102];
        return this;
    }
    [Float64Array] = 1024;
    [3] = BigUint64Array;
    static 9 = v19;
    set h(a29) {
        ({"h":v15,} = this);
    }
    #toString(a31, a32, a33) {
    }
}
const v35 = new Map();
const t38 = v35.constructor;
const v37 = t38();
const o38 = {
    __proto__: v37,
};
new C20();
new C20();
new C20();
const v43 = Uint8Array.toString(Uint8Array, Uint8Array, Uint8Array, Uint8Array);
function f45(a46) {
    return v19;
}
this.onmessage = f45;
v43.normalize();
