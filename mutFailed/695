let v4 = 0;
while (v4 < 2) {
    v4 + "4vW";
    v4++;
}
new Set();
function F10(a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        F10.c = a12;
    } catch(e14) {
    }
    try {
        this.d = a13;
    } catch(e15) {
    }
    try {
        a12 / this;
        try {
            a12.__proto__ = this;
        } catch(e17) {
        }
        this.b = "string";
    } catch(e18) {
    }
}
new F10("4vW", "string");
new F10("string", "getUTCMonth");
new F10("string", "4vW");
[1.0750181514630494e+308,1000000000000.0,1.0,4.0,1000000000000.0,9.530099930350111e+307,499367.5835872174,1e-15];
[3.0,-2.2250738585072014e-308,1000000000.0,0.0,-1000000.0,0.0,-1000000.0,-694770.6092474931,2.2250738585072014e-308,760.8505525283902];
[-1000000.0,5.162576843946658,-1.0,-9.21033896171621,521.8036145359217,-0.0,-1000000000.0,-2.2250738585072014e-308];
const v29 = new Float32Array(Float32Array, Float32Array, Float32Array);
function f31() {
    return 160;
}
Object.defineProperty(160, "h", { configurable: true, enumerable: true, get: f31 });
async function f32(a33, a34, a35) {
    v29.h = v29;
    await a33;
    return f32;
}
const t42 = "d";
t42(v29, v29, Float32Array);
