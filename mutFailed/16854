new Uint8ClampedArray(121);
new Int16Array(4071);
new BigInt64Array(2217);
[65536];
const v13 = [-694,-6,1073741824,-14,3,11,3,-7,5,-1214514770];
const v14 = [1073741824,-7,-1283755539,-726309105,10,13,-4294967295,12,512,40630];
const v15 = [];
function f16() {
    -v15;
    return f16;
}
class C18 {
    static {
        const o20 = {
        };
        new Proxy(this, o20);
    }
    p(a24, a25) {
        let v26;
        try { v26 = new this(a25, this, a24); } catch (e) {}
        super.g = v13;
        return Reflect.construct(v26, [v13,v14], v26);
    }
    a;
}
new C18();
const v31 = new C18();
const v32 = new C18();
[-2.9700017742911022,795135.542646985,938.533418121023,-974148.680744386,-1.7976931348623157e+308,-300.6481185564369];
const v34 = [483707.38277358306];
const v35 = [2.220446049250313e-16,-Infinity,1.278332587799012,711290.6941419018,0.0,-Infinity,-1000.0,2.2250738585072014e-308];
const v36 = [v32,v14,v31];
[v35];
[v35,v34,v36,v31,v32];
function f41() {
    class C44 {
    }
    const v47 = `
        try {
            new Float64Array(127);
        } catch(e49) {
        }
    `;
    let v50 = -65535;
    v50 * v50;
    v50 / v50;
    const o119 = {
        __proto__: 352326470,
        next() {
            v50--;
            const v56 = v50 == 0;
            const o57 = {
                "done": v56,
                "value": v50,
            };
            return o57;
        },
        ...352326470,
        /*
        __proto__: 1261703539,
        */
        "f": v50,
        m(a59) {
            a59.h = a59;
            const o60 = {
            };
            function f61(a62, a63, a64) {
                function f66(a67) {
                    a63[5] ||= f41;
                }
                this.onmessage = f66;
                const v70 = new SharedArrayBuffer(35);
                new BigUint64Array(v70);
            }
            try {
                o60.e = v50;
            } catch(e73) {
                const v77 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v77, o60);
            }
            try {
                const o79 = {
                };
                o79.e = o60;
                o79.e = 1261703539;
                o79.g = a59;
            } catch(e80) {
            }
            -9007199254740991 >> -9007199254740991;
            Math.sin(-9007199254740991);
            class C87 {
                o(a89, a90, a91, a92) {
                    class C93 {
                        static 44 = "EV";
                    }
                    new C93();
                    new C93();
                    new C93();
                    return 0;
                }
            }
            new C87();
            new Int8Array(3938);
            let v101 = 3;
            v101++;
            const v104 = 0 >> 0;
            for (let i = 0; i < 5; i++) {
                0 < 8;
            }
            const o107 = {
            };
            o107.e = 3938;
            o107.e = 1261703539;
            try {
                const o108 = {
                };
            } catch(e109) {
                function F110(a112, a113, a114, a115) {
                    if (!new.target) { throw 'must be called with new'; }
                    a112.propertyIsEnumerable();
                }
                -3 ^ v104;
            }
        },
    };
    try { o119.m(o119); } catch (e) {}
    class C122 {
    }
    const v123 = new C122();
    function f124(a125, a126) {
        const v128 = 35530n & 35530n;
        function f129(a130, a131) {
            a131.name;
            const v134 = Array?.of;
            try { new v134(); } catch (e) {}
            Symbol.toPrimitive;
            const v139 = Array();
            function f140() {
                return 3;
            }
            function f141(a142) {
                a142--;
                const t141 = "async";
                t141[0] = "async";
                const o147 = {
                    "execution": "async",
                };
                gc();
            }
            Object.defineProperty(v139, 0, { configurable: true, enumerable: true, get: f140, set: f141 });
            v139.unshift(3, a130, v128);
        }
        return Float64Array;
    }
    v123[Symbol.iterator] = f124;
    const v153 = new Float32Array(v123, "nt", Float32Array);
    Object.defineProperty(v153, Symbol.toPrimitive, { writable: true, enumerable: true, value: f16 });
    const t157 = "nt";
    const v156 = delete t157[v153];
    let v157;
    try { v157 = v123.floor(v156); } catch (e) {}
    for (const v158 in v157) {
    }
}
f41();
f41();
function f161(a162, a163, a164, a165) {
}
function f166(a167, a168) {
    const o171 = {
        set b(a170) {
        },
    };
}
function F172(a174, a175, a176) {
    if (!new.target) { throw 'must be called with new'; }
}
try {
} catch(e177) {
}
function F178(a180) {
    if (!new.target) { throw 'must be called with new'; }
}
