const v2 = new Array(208);
const v3 = [-717796050,-1,16,-1244181946,60673,-57399];
const v7 = new Int16Array(16);
v7[10] = -9007199254740992;
const v8 = [1263885564,12040,65536,256,-6,93385624,9007199254740992,536870912,128];
const v9 = [-20141,-956332300];
function F10(a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a12;
        function F14(a16, a17, a18) {
            if (!new.target) { throw 'must be called with new'; }
        }
        for (const v20 in "5amlK") {
            ("5amlK")[v20];
        }
    } catch(e22) {
    }
    try {
        this.e = v3;
    } catch(e23) {
    }
}
function f27(a28, a29) {
    const o31 = {
        get c() {
            let v30 = this;
            v30 += v30;
            return a29;
        },
        "b": -65537n,
        __proto__: a28,
        ...a28,
        "a": a29,
        6: 4294967297n,
        "c": 4294967297n,
    };
    return o31;
}
const v32 = f27(f27, -65537n);
const v33 = f27(f27, f27);
class C34 extends f27 {
    set e(a36) {
        const v37 = v33.h;
        let {...v38} = v33;
        new BigUint64Array();
        new BigUint64Array();
        function F44(a46) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.f = 145253519;
            } catch(e47) {
            }
        }
        new F44();
        Reflect.construct(v37, [4294967296n]);
    }
}
const v52 = new C34();
try {
    v52.n(-65537n, v52, 4294967297n, 4294967297n, v32);
} catch(e54) {
    const v55 = [];
    new e54(v55, v8);
    v55.constructor;
    1000000000.0 * [-9.578589124662172e+307,0.5803164764357316,1e-15];
}
new F10(v9, v3);
const v62 = new F10(v9, v8);
new F10(v9, v2);
class C64 {
}
new Date();
const v68 = new Float64Array(Float64Array, Float64Array, Float64Array);
const v70 = new BigUint64Array();
const o79 = {
    toString(a72, a73) {
        const v74 = ~a73;
        const v75 = this.__lookupGetter__;
        try { new v75(v68); } catch (e) {}
        const v77 = a73 + a73;
        v77 >>> v77;
        v70[3408] = this;
        return v74;
    },
};
[3374,-1970,-8606,65535,512,-46314,64,4];
[-2147483647,1214362322,13];
const v82 = [4294967295,44186,2,-210904061,-9223372036854775808,-65536,-1073741824];
function F83(a85, a86, a87) {
    if (!new.target) { throw 'must be called with new'; }
    const v88 = this.constructor;
    return v3;
    [-4,2];
    function f92() {
        const v93 = [];
        function F94(a96) {
            if (!new.target) { throw 'must be called with new'; }
        }
        class C97 extends F94 {
            valueOf(a99, a100, a101, a102) {
                this?.constructor;
            }
        }
        const v104 = new C97();
        const o109 = {
            [v93](a106, a107, a108) {
            },
        };
        v104.valueOf();
    }
    try { new v88(); } catch (e) {}
    this.e = a87;
}
function f112() {
    class C113 {
    }
    C113 << v82;
    let v117 = "valueOf";
    const v118 = [-2080736032,-38952,129,0];
    const v120 = new Uint8Array(Uint8Array);
    function f121(a122, a123, a124, a125) {
        v117++;
        const o127 = {
            ...v120,
        };
        o127[2] = o127;
        const v128 = v118[1];
        try { o127.n(v128, a125, a125, v128, a125); } catch (e) {}
        return o127;
    }
    C113 = v62;
    const o136 = {
        [-352741132]: -352741132,
        set b(a134) {
        },
        get c() {
            return this;
        },
        "b": 2.220446049250313e-16,
    };
    let v137;
    try { v137 = C113(); } catch (e) {}
    const v138 = [F83];
    for (let v139 = 0; v139 < 5; v139++) {
        new F83(undefined, v137);
    }
    v138.constructor;
    return F83;
}
%PrepareFunctionForOptimization(f112);
f112();
delete Array[4097793017];
delete Array?.prototype;
%OptimizeFunctionOnNextCall(f112);
f112();
