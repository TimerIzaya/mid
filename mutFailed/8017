function f1() {
    function f2(a3, a4) {
        return f2;
    }
    return WeakSet;
}
WeakSet.valueOf = f1;
const v5 = new WeakSet();
function f6() {
    return v5;
}
function F7(a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    a9.f = a10;
    function f11(a12) {
        this.f /= a10;
    }
    Object.defineProperty(a9, "e", { enumerable: true, set: f11 });
    try {
        this.c = a10;
    } catch(e13) {
    }
    try {
        a9.e = f6;
    } catch(e14) {
    }
}
F7.e = WeakSet;
const v15 = new F7(F7, WeakSet);
v15.toString = f1;
const v16 = new F7(F7, WeakSet);
new F7(v15, F7);
[-9007199254740991,55159];
[2042179764,1000,16,268435440,1444966199,589262168,-11,36879429];
const v20 = [596121713,-4294967295,-13,8,-1073741824,-10744,15821,-1169593511,268435441];
class C21 {
    static #m(a23, a24, a25) {
        Math.tanh(v15);
        const v29 = v5 * v5;
        Math.cbrt(v29);
        v15 && v20;
        return v29;
    }
    536870889 = v16;
    static [v15];
}
new C21();
new C21();
new WeakSet();
9007199254740990 | -9007199254740990;
