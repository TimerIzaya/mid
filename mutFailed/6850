function f2(a3, a4) {
    a4(a3, a3, 2073, f2);
}
new Promise(f2);
new BigInt64Array(BigInt64Array);
class C11 {
    static get e() {
        return 1n;
    }
    h = -1000000000.0;
    constructor(a15, a16) {
        Math.exp(0.611254903366946);
        a15 + a15;
        let v23 = 17469 && +17469;
        v23++;
    }
}
new C11(-1000000000.0, 0.6135042287431778);
new BigUint64Array(129);
new Float32Array(879);
const v32 = [2030562474,2147483649,-59698,4294967297,536870912];
const v33 = [658616399,2147483649];
[-16,-47371,17333,1916988682,-2147483647,536870889];
v33[5] = v32;
[];
function f37(a38) {
    try {
        (2073).some(a38);
    } catch(e40) {
        e40.stack;
    }
}
class C48 {
    static [0];
    static #b;
    static [2.0];
}
new C48();
const v50 = new Int8Array(v32);
v50[v50.byteOffset] = 5;
