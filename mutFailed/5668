new Int32Array(1508);
new Float32Array(256);
new BigUint64Array(256);
const v13 = Array(4);
function f14(a15, a16) {
    return f14;
}
const v19 = [v13];
const o20 = {
    "arguments": v19,
    "type": "function",
};
new Worker(f14, o20);
class C25 {
    static {
        let v27;
        try {
        const t0 = 529940173;
        v27 = t0(this, this);
        } catch (e) {}
        v27.cos(1000);
        Math.tan(1000);
    }
}
const v32 = new C25();
function f35(a36, a37, a38) {
    const o42 = {
        __proto__: a37,
        [a38]: -2147483648,
        [a37](a40, a41) {
        },
        "c": 529940173,
        1073741824: C25,
    };
    return o42;
}
const v44 = f35(-1, f35());
const v45 = f35(-2147483648, v32);
const v46 = -5 << v44;
v45[Symbol.isConcatSpreadable] = v46;
