const v2 = new BigInt64Array(65535);
new Uint8ClampedArray(582);
const v8 = new Uint8Array(6);
class C9 {
    static set e(a11) {
        const v12 = async (a13, a14) => {
            this.g;
            const v16 = v2[149];
            try { v16(Uint8Array, Uint8Array); } catch (e) {}
            return await this;
        };
        try { (-12n).getTime(-12n, -816409267); } catch (e) {}
        -253026077 % -816409267;
    }
    static #f;
    static a = v8;
    #a;
    static g;
    static #b;
    static [v2];
}
new C9();
new C9();
const v26 = new C9();
new Int32Array(128);
new Uint8ClampedArray(1105);
new BigUint64Array(277);
function F36() {
    if (!new.target) { throw 'must be called with new'; }
    const t29 = v26.constructor;
    t29(2799);
    new Date("2");
    this.a = 47398;
}
const v45 = new F36();
const v46 = new F36();
function f47() {
    return ([f47,f47]).constructor.isArray();
}
f47();
const v52 = new F36();
function f54(a55, a56, a57, a58) {
    a55.a = a56;
    for (let v59 = 0; v59 < 5; v59++) {
        const v62 = v59 >> -18321;
        Math.log1p(v59);
        Math.tan(v62);
    }
    return a57;
}
f54(v45, 9007199254740991);
f54(v46);
const o67 = {
    ...v52,
};
