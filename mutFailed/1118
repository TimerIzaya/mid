const v2 = new Int32Array(11);
const v8 = [-946345318n] > 8n;
function f9() {
    return f9;
}
new Int32Array(1024);
try { new Int32Array(Int32Array, Int32Array, Int32Array); } catch (e) {}
const v14 = new Int32Array(16);
class C15 {
    static {
        const v17 = super[this];
        try { v17.join(C15, C15, v17); } catch (e) {}
    }
}
v14[15] = v14;
const v19 = [];
v19[0] = v19;
[v8,v8,v8,v8,v8];
new SharedArrayBuffer(945);
"undefined" == "undefined";
class C27 {
}
5.0 / -2.220446049250313e-16;
const v32 = ("53064")[3];
const v33 = [v2,"53064",16];
v33[2] = v33;
[v33,"search"];
([v33,v2,Int32Array,v2,v33])[2];
-8627 + -8627;
const o42 = {
    [-206.79565552697056]: 352693014,
    get g() {
    },
    "g": -206.79565552697056,
};
let v44;
try { v44 = ("bigint").search("bigint"); } catch (e) {}
const v45 = -v44;
class C47 {
}
try { new C47(); } catch (e) {}
new v45();
function F50() {
    if (!new.target) { throw 'must be called with new'; }
}
new F50();
class C53 {
}
const v54 = new C53();
function F55(a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    const v59 = this?.constructor;
    try { new v59(a57, v54); } catch (e) {}
}
const v61 = new C47();
const v62 = v61?.__lookupGetter__;
try { new v62(v32); } catch (e) {}
class C64 {
    constructor(a66, a67) {
        const v68 = this.constructor;
        try { new v68(); } catch (e) {}
        this.propertyIsEnumerable(C64);
    }
}
const v71 = v61?.constructor;
try { new v71(); } catch (e) {}
try { new v71(); } catch (e) {}
class C74 extends C47 {
    constructor(a76, a77, a78, a79) {
        if (v61) {
        }
    }
}
C74.b = C74;
