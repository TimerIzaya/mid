class C3 {
    #c;
    static #valueOf(a5) {
        const v7 = ["-27557","-27557","raw"];
        Reflect.apply(("raw").localeCompare, a5, v7);
        super["function"] = "raw";
        function F10(a12, a13, a14) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.c = a12;
            } catch(e15) {
                -4294967295 % -4294967295;
                Math.atanh(-4294967295);
                Math.tanh(-Reflect);
                const v22 = Reflect | e15;
                Math.max(Reflect);
                -4294967295 & v22;
            }
            try {
                this.f = a14;
            } catch(e25) {
            }
        }
        new F10("-27557", a5, "-27557");
        new F10(a5, a5, a5);
        const v28 = new F10("raw", "function", this);
        return v28;
    }
}
const v29 = new C3();
const v30 = new C3();
v30.g = "-27557";
const v31 = new C3();
[52438,16919];
const v33 = [64464,-65536,-16,512,1,-11,-1749610255,-536870912,-13,-65537];
[-65536,4294967295,-2,-15,-51531];
const v37 = new Int8Array(159);
new v30(8);
try {
    v30.g = v31;
} catch(e42) {
}
const v43 = ["raw",v29];
const v44 = [C3,BigUint64Array];
const v45 = [v44,v43,v44];
new Float64Array(2384);
function f50() {
    let v52 = 1000000000000.0;
    -(v52--);
    let v56 = 257828.6336153492;
    v56--;
    class C59 {
        static #m(a61) {
        }
        constructor(a63) {
            const v65 = new Float32Array();
            try { v65.entries(); } catch (e) {}
            const v67 = new Uint16Array(12, -4294967296, 8);
            new Float32Array(v67, -4294967296);
        }
    }
    try { new C59(12); } catch (e) {}
    const v70 = new C59(v56);
    function f71() {
        v43["keys"]();
        return "raw";
    }
    v70.toString = f71;
    const v74 = new C59();
    const v75 = new C59(-4294967296);
    const v76 = [v75,C59];
    [v56,v75,v70,v75,v76];
    const v78 = [v75];
    class C79 extends C59 {
        #valueOf(a81, a82, a83) {
            -2147483649 + v45;
            const v88 = ~-9223372036854775807;
            Math.atan2(!v30, v45);
            Math.round(v88);
            return v37;
        }
        [v70];
        #n(a93, a94, a95, a96) {
            -1.6885498751507235e+308 - -1.6885498751507235e+308;
            140642.10995228658 + 140642.10995228658;
            -9.541855845168355 - -9.541855845168355;
            new Uint8ClampedArray(5);
            4092 >>> 4092;
            new BigUint64Array(4092);
            const v115 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
            let v116 = 2684;
            const v118 = new Uint32Array();
            const v120 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
            let v121;
            try { v121 = v120.fill(BigUint64Array); } catch (e) {}
            const v122 = [601759695];
            v116 = v121;
            const v123 = [1073741824,1073741823,1376142744,1073741825];
            v123[1] = v123;
            function f125(a126, a127, a128, a129) {
                function f130() {
                    let v132 = Float64Array;
                    v132 = a127;
                    b = v122;
                    const v133 = v115.length;
                    try {
                        v123.forEach(a127);
                    } catch(e135) {
                        e135.name;
                    }
                    const v137 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
                    const v139 = Symbol.toPrimitive;
                    const o143 = {
                        toString(a141, a142) {
                            a141 *= v139;
                        },
                    };
                    const o168 = {
                        "c": -4294967297n,
                        [522675525n](a146, a147) {
                        },
                        "c": v139,
                        valueOf(a149, a150) {
                        },
                        [v133](a152) {
                        },
                        [-1]: v116,
                        1073741824: v118,
                        "maxByteLength": -268435456,
                        "b": -4294967295,
                        "arguments": v137,
                        [-4294967297n](a154, a155, a156, a157) {
                            class C159 extends Date {
                                static get c() {
                                    eval();
                                }
                            }
                            for (let v163 = 0; v163 < 5; v163++) {
                            }
                        },
                        "e": -4294967295,
                        "e": -268435456,
                        "arguments": v120,
                        set b(a165) {
                        },
                        256: BigUint64Array,
                        m(a167) {
                        },
                        ...v122,
                    };
                }
                f130();
                eval("");
                %OptimizeFunctionOnNextCall("function");
            }
            for (let v173 = 0; v173 < 10; v173++) {
                f125();
            }
            return v78;
        }
    }
    const v175 = new C79();
    v175.m = BigUint64Array;
    const v176 = v78.constructor;
    let v177;
    try { v177 = v176.isArray(v78); } catch (e) {}
    class C178 extends v176 {
    }
    C178.a = v177;
    C178.a = C178;
    const v179 = new C178();
    const v180 = v179?.constructor;
    try { new v180(); } catch (e) {}
    Object.defineProperty(v179, 65537, { value: v74 });
    try { v175.m(v76); } catch (e) {}
    const o183 = {
        "e": Uint16Array,
        __proto__: 3.4890473589784586e+307,
    };
    return Int32Array;
}
%PrepareFunctionForOptimization(f50);
f50();
f50();
%OptimizeFunctionOnNextCall(f50);
v33();
