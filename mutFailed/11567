function f0() {
    let v2 = "-4294967295";
    try { ("c").toLocaleLowerCase(); } catch (e) {}
    const o10 = {
        [6]: "c",
        get c() {
            %VerifyType(this[8]);
            v2 **= "c";
            try {
                this.fuck(v2, v2, "undefined", "c");
            } catch(e9) {
            }
            return this;
        },
        "d": v2,
        9: 6,
        "h": v2,
    };
    return o10;
}
f0();
f0();
f0()[9];
[0.16377967714058883,-3.0,-4.596127149941607,764.0674809669197,-3.0];
[1000000000.0,-2.4150281353991794,0.019781511000691365,5.0,2.220446049250313e-16,0.946854673354899];
[1.4077530565980395e+307,4.0,-1000000000000.0,-95.0595463088149,0.0,1.7976931348623157e+308,-7.709330533215257,0.7125674693233036,7.447525159849192e+307,1.7976931348623157e+308];
new Int32Array(512);
new BigInt64Array(1104);
64 + 64;
new Uint16Array(64);
174 - 174;
const v31 = new Uint32Array(174);
v31[9];
const v35 = new Float32Array(1018);
v35[598] = v35;
const o37 = {
};
1507542187n | 1507542187n;
f0 &&= f0;
class C45 {
}
const v46 = new C45();
try { v46.valueOf(); } catch (e) {}
v46 << -1557853178;
function F51(a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = F51;
}
const v55 = F51?.bind;
v55.name;
try { new v55(o37); } catch (e) {}
const v58 = new F51();
const v59 = v58?.hasOwnProperty;
try { new v59(v46); } catch (e) {}
new F51();
new F51("function", v58);
let v63 = 4096;
let v64 = v63--;
v64--;
const v66 = new Float32Array();
const v67 = v66?.__defineSetter__;
try { new v67(-65536, -65536); } catch (e) {}
class C69 {
    static {
        this.e = this;
        try { new this(); } catch (e) {}
        for (let v72 = 0; v72 < 10; v72++) {
            v72 * v72;
            const v74 = v72 % v72;
            function f75() {
                try {
                    ("object").trimStart();
                } catch(e77) {
                }
                o37.d &&= v74;
                return v72;
            }
            f75.name = f75;
            const v78 = [601759695];
            const v79 = [1073741824,1073741823,1376142744,1073741825];
            function f81(a82, a83, a84, a85) {
                const v86 = f75();
                v86 | v86;
                let v89;
                try { v89 = v79["find"](..."find", a85, ...v78, ...v79, ...522675525n); } catch (e) {}
                const v90 = v89 <= a84;
                v90 && v90;
            }
            f81.e = f81;
            for (let v92 = 0; v92 < 10; v92++) {
                f81();
            }
        }
        const v94 = ("object").__proto__;
        try { v94.startsWith(v94); } catch (e) {}
        const v96 = v94?.trimRight;
        v96.name = v96;
    }
}
