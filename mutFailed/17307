const v0 = [];
function f1(a2, a3) {
    a3.__proto__;
    Object.defineProperty(v0, v0, { configurable: true, enumerable: true, value: a2 });
    return a2;
}
v0[Symbol.toPrimitive] = f1;
const v7 = [v0,v0,v0,v0];
const v8 = [v7,v7,v7,v7,v7];
const v9 = [v0,v8,v8,v0,v0];
v9[4];
class C11 {
    get g() {
        const o16 = {
            "maxByteLength": 147,
        };
        const v18 = new SharedArrayBuffer(0, o16);
        new DataView(v18);
        return v9;
    }
    static toString(a24, a25) {
        try {
            const v26 = super.setInt8();
            super.b = v26;
            try { a24(C11, v26); } catch (e) {}
        } catch(e31) {
        }
        return this;
    }
    [v0] = v0;
}
const v32 = new C11();
const v33 = v32?.__lookupSetter__;
try { new v33(v0); } catch (e) {}
const v35 = new C11();
function f36() {
    return v0;
}
function f37(a38) {
    const t39 = [];
    t39[6] = 4294967295;
}
Object.defineProperty(v35, "a", { writable: true, enumerable: true, get: f36, set: f37 });
new C11();
const v42 = [-2.220446049250313e-16,-1000000000000.0,-1e-15,5.0,-1.1809333145589125e+308,-8.624806404098418,1000000000000.0];
const v43 = [0.04772341305028749,644119.0709037841,1.4748438518078059e+308,0.26287960984076175,-3.0,1000.0,648428.3249865333];
const v44 = [-1.16311608960617,976.7161501504263,5.680098812446431e+306];
function f45(a46, a47) {
    a46.map = f1;
    Object.defineProperty(a47, "a", { writable: true, configurable: true, value: f37 });
    try { a46.map(v0); } catch (e) {}
    const o54 = {
        n(a50, a51) {
            try {
                v42[2475937174] >>= a46;
                try {
                    v0.length = a47;
                } catch(e52) {
                }
                a51.a = v7;
            } catch(e53) {
            }
            return a50;
        },
        __proto__: a47,
        ...v9,
        "c": v8,
        "f": v43,
        ...v44,
        "d": a47,
        "g": v44,
    };
    o54.a = v35;
    o54.a = o54;
    return o54;
}
f45.d = v42;
f45.d = f45;
const v55 = f45(v44, v32);
v55.map = v7;
f45(v55, v35);
f45(v32, v35);
function f60(a61, a62) {
    function f63(a64, a65, a66, a67) {
    }
    class C69 {
        static {
            for (let v71 = 0; v71 < 25; v71++) {
                const v72 = [601759695];
                const v73 = [1073741824,1073741823,1376142744,1073741825];
                function f74(a75, a76, a77, a78) {
                    try { v73.toSorted(f63); } catch (e) {}
                    const v83 = new Float32Array(this, a78, a75);
                    function f85() {
                        return a75;
                    }
                    class C87 extends v83.constructor {
                        #c = 84;
                    }
                    function f88(a89, a90) {
                        return C69;
                    }
                    try { f88(f74, a78); } catch (e) {}
                    %OptimizeFunctionOnNextCall(f85);
                    try { v73["find"](..."find", a78, ...v72); } catch (e) {}
                    const o94 = {
                        [Date]: 128,
                        __proto__: arguments,
                    };
                    return f85;
                }
                for (let v95 = 0; v95 < 5; v95++) {
                    f74();
                }
            }
        }
    }
    return v0;
}
parseInt.toString = f60;
const v97 = parseInt?.toString;
try { new v97(); } catch (e) {}
parseInt("pop");
