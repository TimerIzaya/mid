const v2 = new Uint8ClampedArray(9);
const v5 = new BigInt64Array(223);
new Float64Array(13);
class C9 {
    static {
        213845065 && Math;
        const v15 = 213845065 & 223;
        v15 >> v15;
    }
    static get a() {
        try {
            v5.buffer = v2;
        } catch(e18) {
        }
        const v19 = v5 | this;
        new C9();
        /ab\b\d\bcd/uy;
        /[[\p{Script_Extensions=Mongolian}&&\p{Number}]?]/dy;
        /(ab|cde)Ka\sc/uiy;
        return v19;
    }
}
new Float64Array();
const v26 = new C9();
new v26();
for (let v32 = 0; v32 < 5; v32++) {
    function f33() {
        let v35 = ("Vre").codePointAt(v32);
        v35 * v35--;
        return BigInt64Array;
    }
    f33();
    %OptimizeFunctionOnNextCall(f33);
}
