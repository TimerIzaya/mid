let v0 = [];
const v1 = [-11,-45877,1481895322,-2147483648,54135,268435440,1238629043,-9223372036854775807,268435440,-3];
const v2 = [-24870,-14,1036507015,2,9007199254740992,19537,7];
const v3 = [1073741824,-16,1438922003,5054864];
function f4(a5, a6) {
    (-64209).constructor;
    return v1;
}
v3.toString = f4;
class C9 {
    static 2431086867 = v1;
    [v3] = v3;
    static #f;
    static 1814055450;
    static [v0];
    constructor(a11) {
        v1[v2] ||= this;
        try {
            super.o(v3);
        } catch(e13) {
        }
        [,v0,v0] = a11;
    }
    a;
    static 5 = v1;
}
new C9(v0);
new C9(v2);
new C9(v3);
new Uint16Array(313);
new Int8Array(1073741823);
const o28 = {
    0: "1ya",
    162: "1ya",
};
new Int8Array(1024);
new BigUint64Array(7);
[-Infinity,Infinity,959819.665748626];
[0.881533214430694,1000000000000.0,-2.6561951388069446e+306,1e-15,-601975.7256958171,-2.0,1.0,-1000000000000.0,-5.0];
class C36 {
}
const v38 = ([8,-46529,2147483648,1073741824]).includes;
try { v38(); } catch (e) {}
[-6.825886894231237,-1000000000.0,-7.405832553829715,-5.0];
function f44() {
    let v46 = 1000000000000.0;
    const v47 = v46--;
    -v47;
    class C52 {
        constructor(a54) {
            const v56 = new Float32Array();
            try { v56.entries(); } catch (e) {}
            const v58 = new Uint16Array(12, -4294967296, v47);
            new Float32Array(v58, -4294967296, 268435439, v46, v58);
        }
    }
    try { new C52(12); } catch (e) {}
    const v61 = new C52(257828.6336153492);
    const v62 = new C52();
    return v47;
    ([12]).toLocaleString();
    const v65 = [1.7976931348623157e+308,2.2250738585072014e-308,928419.7587767004,-279.06139374957183,1000.0];
    v65[Symbol.isConcatSpreadable] = v65;
    const v68 = new C52(-4294967296);
    const v69 = [v68,C52];
    [257828.6336153492,v68,v61,v68,v69];
    const v71 = [v68];
    class C72 extends C52 {
        n(a74, a75) {
            Object.defineProperty(this, "e", { enumerable: true, value: super[43411] });
        }
        a;
        [v61];
    }
    const v77 = new C72();
    const v78 = v71.constructor;
    try { v78.isArray(v71); } catch (e) {}
    class C80 extends v78 {
    }
    C80.a = C80;
    const v81 = new C80();
    const v82 = v81?.constructor;
    function F83(a85) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v86 = new F83(F83);
    const v87 = v86.propertyIsEnumerable();
    try { v87(); } catch (e) {}
    try { new v82(); } catch (e) {}
    const o99 = {
        m(a91) {
            const v94 = new Int8Array(3938);
            let v95 = 3;
            let v96 = 0;
            [...v95] = v94;
            -(v96++);
        },
    };
    o99.m();
    Object.defineProperty(v81, 65537, { value: v62 });
    try { v77.m(v69); } catch (e) {}
    return Int32Array;
}
%PrepareFunctionForOptimization(f44);
f44();
%OptimizeFunctionOnNextCall(f44);
f44();
