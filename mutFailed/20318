let v2 = 220725.27653592709;
class C3 {
    e;
    o(a5) {
        const t4 = this.__proto__;
        t4[a5] **= a5;
        const v7 = [9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
        v7[2] = v7;
        new Uint8Array(v7);
        return Uint8Array;
        return this;
    }
    c = v2;
    static get c() {
    }
    toString(a13, a14, a15) {
        const o16 = {
        };
        const o17 = {
        };
        Int16Array[0] = 8;
    }
    static #f;
    constructor(a21, a22) {
        try {
            v2++;
        } catch(e24) {
        }
    }
    [-1] = 3.3535744171763475e+307;
    static #c;
    a;
}
function F33(a35, a36, a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = -9;
    } catch(e39) {
    }
    try {
        this.b = 5;
    } catch(e40) {
    }
}
const v41 = new F33(-9, 1073741824, 1073741824, "setUint32");
function f42(a43, a44) {
    const o50 = {
        "f": -9,
        set e(a46) {
            Reflect.construct(a46, [a43,v41,Reflect,a44], a46);
        },
        ["getOwnPropertySymbols"]: v41,
        "e": "toString",
        9: "toString",
    };
    return o50;
}
f42(v41, 5);
const v52 = new Uint8ClampedArray(995);
try {
    v52.c = 995;
} catch(e53) {
}
const v54 = new C3();
const v55 = new C3();
new Int8Array(-45057);
new Uint32Array();
const v61 = new C3();
Math.tan(9007199254740992);
this.print(this, this);
class C67 {
    9 = v61;
    constructor(a69, a70, a71) {
        Object.defineProperty(this, 512, { enumerable: true, value: -1000000.0 });
    }
    static [v61];
    1116601172 = v55;
    #c;
    a = -1000000.0;
    3553105781 = v55;
    static [C3];
    static #a;
}
new C67(v55, v2, 3.3535744171763475e+307);
new C67(v54, v2, -1000000.0);
new C67(v55, v2, -1000000.0, v55, v54);
function F75(a77, a78, a79, a80) {
    if (!new.target) { throw 'must be called with new'; }
    const v81 = this.constructor;
    let v82;
    try { v82 = new v81(a78, v2, -1000000.0); } catch (e) {}
    typeof v82 === "a";
}
new F75(F75, F75, F75, F75);
new F75();
