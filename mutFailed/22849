const v2 = new Uint8ClampedArray(1);
164 >>> 164;
new Int16Array(164);
let v7 = 9;
function F8(a10, a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    v7++;
}
function f14() {
    for (let v15 = 0; v15 < 5; v15++) {
        const v16 = new F8();
        function F17(a19, a20) {
            if (!new.target) { throw 'must be called with new'; }
        }
        new F17();
        const v23 = v7 ** v7;
        const v24 = !v7;
        9007199254740991 * v23;
        v24 % F8;
        const t17 = v16.constructor;
        new t17();
    }
}
f14();
f14();
const v33 = new Float64Array();
function f34() {
    for (let v35 = 0; v35 < 5; v35++) {
        for (let v36 = 0; v36 < 5; v36++) {
            let v38;
            try { v38 = Math.exp(v33); } catch (e) {}
            v38 >>> v38;
        }
    }
    return Float64Array;
}
f34();
0 + 0;
const v43 = new Float32Array(0);
13 % 13;
new Float32Array(256);
function F51(a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.constructor(); } catch (e) {}
    a54--;
    const v57 = this.constructor;
    try { new v57(8, a53); } catch (e) {}
    -a54;
}
new Array(13);
new BigInt64Array(3);
Uint8Array.toString(Uint8Array, Uint8Array, Uint8Array, Uint8Array, Uint8Array).toLowerCase();
0.8735699512350641 + 0.8735699512350641;
function F74(a76, a77) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.constructor(this, F74); } catch (e) {}
    a76 || a76;
    a77 >>> a77;
    const v81 = this.constructor;
    const v82 = new this();
    const v84 = [v82.constructor];
    v84[1] = v84;
    let v86 = -268435456;
    v86--;
    const o88 = {
        "e": -4294967295,
        "e": v86,
    };
    v81.caller = v81;
    try { new v81(0.8735699512350641, -3.413527541634011e+307); } catch (e) {}
    class C90 {
        #toString(a92, a93) {
            new Int8Array(2);
            new BigInt64Array(56);
            new Float32Array(257);
            return 257;
        }
    }
    new C90();
}
try { new F74(v43, 1); } catch (e) {}
new F74();
const v106 = new F74(0.941857606566444, 0.941857606566444);
const v107 = v106?.constructor;
class C110 extends Date {
}
const v111 = new C110(-562780519);
v111.toUTCString();
try { new v107(v2, v2); } catch (e) {}
