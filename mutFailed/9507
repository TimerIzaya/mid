function f0() {
    const o13 = {
        "d": 1000000000000.0,
        toString(a5, a6) {
            this.d;
            try { new a5(this, a6); } catch (e) {}
            a5?.[a5];
            const v10 = this instanceof a6;
            this[v10];
            let [v12] = v10;
            return f0;
        },
        "f": "ignoreCase",
        ..."ignoreCase",
    };
    return f0;
}
const v14 = f0();
const v15 = f0();
const v16 = f0();
class C17 extends f0 {
    255;
    m(a19, a20) {
        super.c = v14;
        v16["toString"](v15, "toString");
        const v24 = [];
        Reflect.apply(v16.toString, v16, v24);
        return v24;
    }
    [C17] = v14;
}
new C17();
new C17();
new C17();
new BigUint64Array(3);
new BigUint64Array(2691);
new Float64Array(128);
const v42 = new BigUint64Array(4);
v42.reverse();
