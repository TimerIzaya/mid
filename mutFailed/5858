Int8Array.BYTES_PER_ELEMENT;
const t0 = -536870912;
new t0(10);
try { (10).values(); } catch (e) {}
Float64Array.length;
let v11;
try { v11 = new Float64Array(11, Float64Array, -536870912); } catch (e) {}
v11[5];
new Float64Array(2114);
new Int16Array(127);
let v17 = 2639;
v17--;
const t11 = 127;
t11.d = Uint8ClampedArray;
new Uint8ClampedArray(v17);
Int32Array.d = Int32Array;
const v23 = new Int32Array(2091);
v23[1234] = v23;
const v25 = 10 >> 10;
Uint16Array.length;
new Uint16Array(10);
new Uint8ClampedArray();
const o31 = {
    ...v25,
};
o31.c = o31;
o31.f = Uint8ClampedArray;
const v34 = ("by").length.normalize();
let v35;
try { v35 = v34.fixed(); } catch (e) {}
try { v35.codePointAt(o31); } catch (e) {}
