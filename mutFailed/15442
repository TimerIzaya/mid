class C3 {
    e;
    p(a5, a6) {
        const o7 = {
            __proto__: this,
            "c": a5,
            3: 1073741824,
            "d": 1073741824,
        };
        return a5;
    }
    194464464;
}
C3.name;
try { C3(); } catch (e) {}
C3.prototype = C3;
new C3();
const v11 = new C3();
v11.length = v11;
v11[194464464] = v11;
v11.e = v11;
const v12 = new C3();
v12[194464464];
let v16;
try { v16 = new Float32Array(C3, C3, C3); } catch (e) {}
const v17 = new Float32Array(9);
function f18() {
    function f19(a20, a21) {
        v16[3] = 8;
        const o27 = {
            "f": "k",
            set e(a26) {
            },
            2147483647: "__proto__",
            "g": "SXJb",
            "h": "__proto__",
        };
        for (const v28 in o27) {
        }
        return a21;
    }
    return f19;
}
function f29(a30) {
    new Date(-9223372036854775807, -9223372036854775807, Date, -9223372036854775807);
}
Object.defineProperty(v17, "valueOf", { writable: true, configurable: true, get: f18, set: f29 });
const v34 = v17?.constructor;
try { new v34(v11, v12, v12); } catch (e) {}
const v36 = v17?.constructor;
v36.name;
let v38;
try { v38 = new v36(1073741824, 9, 9); } catch (e) {}
v38[522852012];
1147 >>> 1147;
const v43 = Uint8ClampedArray.name;
try { v43.codePointAt(9); } catch (e) {}
try { v43.strike(); } catch (e) {}
const v46 = new Uint8ClampedArray(1147);
const v47 = v46[501];
const v49 = ~127;
const v50 = v49 >> v49;
v50 + v50;
const v53 = new Float64Array(127);
try { v53.slice(v17, v47); } catch (e) {}
class C56 extends Uint16Array {
}
C56.b = v16;
C56.b = C56;
