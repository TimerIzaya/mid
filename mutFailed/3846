class C3 {
    #o(a5) {
        const o6 = {
        };
        new Proxy(this, o6);
        return a5;
    }
    a;
    static #e;
    static [1.7976931348623157e+308];
    p(a10, a11) {
        try {
            a10.__proto__ = a11;
        } catch(e12) {
        }
        return a10;
    }
}
new C3();
new C3();
const v15 = new C3();
[v15,C3,"-331604181"];
[[-4294967295,"object",-4294967295,"-331604181"],-4294967295];
class C22 {
    static #m(a24) {
    }
    set d(a26) {
        this.#m();
    }
    constructor(a29) {
        function f30() {
            return this;
        }
        Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f30 });
    }
}
const v31 = new C22();
v31.g = v31;
class C32 extends C22 {
    [v31];
    #n(a34, a35, a36, a37) {
    }
    #g;
}
const v38 = new C32();
try { v38.m(); } catch (e) {}
class C40 {
    m(a42, a43, a44) {
        try {
            const o45 = {
            };
        } catch(e46) {
        }
    }
    static #e;
    #d;
    static p(a48, a49, a50) {
        try {
            new Int32Array([64,-6,-60026,-9]);
            class C54 {
                set h(a56) {
                }
                b;
            }
            a50.a = a49;
        } catch(e57) {
        }
        new Set();
        return a48;
    }
    constructor(a61, a62) {
        try {
            super.n(1.7976931348623157e+308);
        } catch(e64) {
        }
        try {
            super.getYear(a61, this);
        } catch(e66) {
        }
    }
    d;
    2497798052;
    10 = "n";
    static ["object"];
}
new C40();
new C40();
new C40();
const v72 = new BigInt64Array(205);
class C74 {
}
new C74();
new Int16Array();
try { Uint16Array(205, BigInt64Array, 256); } catch (e) {}
new Uint16Array(256);
const v81 = v72[205];
0 >> 0;
try {
    v81.toString = v81;
} catch(e84) {
    e84.message = e84;
}
let v86 = -7;
v86-- + 7;
function F90(a92) {
    if (!new.target) { throw 'must be called with new'; }
    0 / 0;
}
255 - 255;
Float64Array.BYTES_PER_ELEMENT;
const t108 = 31146;
const v104 = new t108(255);
function F105(a107, a108, a109, a110) {
    if (!new.target) { throw 'must be called with new'; }
    a108 >> a108;
    a110 | a110;
    try {
        v104.b = a108;
        const v114 = new WeakMap();
        const v116 = new Int8Array();
        const v118 = new Uint16Array();
        for (let i = 0; i < 5; i++) {
            [[v114,v118["values"](...v116, Int8Array, ..."values"),[]]];
        }
    } catch(e124) {
    }
    try {
        this.h = a107;
    } catch(e125) {
    }
}
const v126 = F105?.constructor;
try { new v126(v104); } catch (e) {}
const v128 = new F105(255, 205, 255, 205);
const v129 = new F105(255, 256, 255, 256);
new F105(255, 205, 256, 255);
const v132 = ([-Infinity,-5.577012134541006])?.filter;
try { new v132(Uint16Array); } catch (e) {}
const v134 = [-1000000000.0,5.0,872297.1015869486,-1e-15,0.2087529151028652];
[-2.220446049250313e-16,-171953.22769972356,2.220446049250313e-16,Infinity,-3.0,-4.368087235127776];
const v136 = /(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/u;
const v137 = [Infinity];
const v139 = ([2.2250738585072014e-308,1.949684848262672,4.0]).push(v136);
const v141 = ([342.12300421344116,0.3998304334347528,-1.5569468467414895e+308,929110.7069466491,0.8403359879371063,928.8415619105033,5.0]).toStringTag;
try { v137.every(v141, v129); } catch (e) {}
v128.h >>>= v139;
v134.length;
