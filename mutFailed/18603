function f0() {
}
function f1(a2, a3) {
    const v5 = 2 >>> 2;
    const o6 = {
    };
    o6.g = v5;
    return f0;
}
f0[Symbol.toPrimitive] = f1;
class C9 {
    static 3990 = f0;
    a = f0;
    static #m() {
        this[this];
        try {
            this.#m(this, f0, f0, f0, this);
        } catch(e13) {
        }
        new f0();
        return f0;
    }
    static [-1] = f0;
    127;
    static [f0] = f0;
    static #d;
}
new C9();
const v16 = new C9();
v16[127];
const v18 = new C9();
const v19 = v18?.hasOwnProperty;
try { new v19(v16); } catch (e) {}
const v25 = new Map();
class C26 {
    n(a28, a29, a30, a31) {
        super[127];
        let v34 = 65537;
        -860946130 & v16;
        ~v16;
        const v40 = ~(this | v34);
        --v34;
        Math.asin(-511.1455754559406);
        return Math.log2(v40);
    }
}
const v44 = new C26();
function f45() {
    return f1;
}
function f46(a47) {
    try {
        v25.get(f0);
    } catch(e49) {
    }
}
Object.defineProperty(v44, "constructor", { configurable: true, get: f45, set: f46 });
const v50 = v44?.constructor;
try { new v50(); } catch (e) {}
const v52 = new C26();
const v53 = v52?.constructor;
try { new v53(); } catch (e) {}
new C26();
new BigUint64Array(2302);
const v61 = new Uint32Array(2209);
v61[2105];
new BigInt64Array(1307);
try { new Uint16Array(2209, 62891, 127); } catch (e) {}
const v69 = new Uint16Array(1024);
v69[Symbol.toPrimitive] = f45;
v69[7] = v69;
