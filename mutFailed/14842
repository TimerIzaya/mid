new BigInt64Array(64);
new Uint8ClampedArray(7);
new Float32Array(64);
class C12 extends Uint8ClampedArray {
    [127] = -65536;
    m(a14, a15, a16) {
        new WeakSet();
        return 127;
    }
    static #e = -65536;
    get f() {
        const v22 = Symbol.iterator;
        function f23() {
            function F24(a26) {
                if (!new.target) { throw 'must be called with new'; }
                const v27 = this.constructor;
                const v28 = v27.bind(F24, F24, F24, F24);
                try { v28(v28, F24, f23, f23, a26); } catch (e) {}
                try { new v27(); } catch (e) {}
            }
            new F24();
        }
        const v32 = [f23];
        const v33 = [v32];
        const v34 = [v32,f23,v32];
        new BigInt64Array(3444);
        class C39 {
        }
        new C39();
        const v42 = [];
        function f43() {
            const o44 = {
                __proto__: v42,
            };
        }
        new Uint8Array();
        new Uint8ClampedArray();
        const v50 = new Date();
        const v52 = new BigUint64Array();
        v52[v50] = v50;
        f23(BigInt64Array, f23, ...v33, 3444, 1024, ...v34);
        f23();
        f23();
        [0.9830880735406903,-0.6660198851192867,729.1589343121786,6.490727458123557e+307,-1.2538779643386477e+308,-1000000000.0];
        [638.8226705123661,3.0,-2.2250738585072014e-308,771474.4832247959,816263.8956170448,2.220446049250313e-16,5.0];
        const v58 = [8.944191192251868,-1.4998894798282654e+308,4.0,-0.0,-1000000000000.0,-5.0,-2.220446049250313e-16];
        [-5.83623517593701,-1.0,-1e-15];
        [692.912813481568,126686.58689393173];
        function f62(a63, a64) {
            const o68 = {
                [a63](a66, a67) {
                },
            };
        }
        const v69 = f62(v58, 128);
        /j(x)(x)(x)\2/gud;
        /[\0](?:ab|cde)/vimsy;
        /^xxx$/uisy;
        try { v69.p(); } catch (e) {}
        const o86 = {
            [v22]() {
                let v79 = 10;
                const o85 = {
                    next() {
                        v79--;
                        const v83 = v79 == 0;
                        const o84 = {
                            "done": v83,
                            "value": v79,
                        };
                        return o84;
                    },
                };
                return o85;
            },
        };
        return o86;
    }
}
new C12();
new C12();
new C12();
Math.atan(5.134563044869008e+307);
