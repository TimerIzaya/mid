const v1 = new Map();
class C2 extends Map {
    static 1817;
    static {
        for (const v5 in this) {
        }
    }
    #o(a7) {
        return this;
    }
    constructor(a12, a13) {
        super(a12);
        const v14 = super.keys();
        try { v14["toString"]("toString", "toString", "toString"); } catch (e) {}
        [4,2,-7,9223372036854775807,1507865544,-1617001904,1073741824,129,51285];
        [52319];
        [-12573];
    }
}
const v20 = new C2(v1, Map);
const v21 = new C2(v20, Map);
const v22 = new C2(v1, v21);
const v25 = [[v21,v20,v1,v20,[v21,v1,v22,C2,v22]]];
class C26 extends Map {
    #e = v1;
    static [v25];
    b;
    static h;
    m(a28, a29) {
        const o30 = {
            __proto__: a28,
            [v1]: v22,
        };
        const o34 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o34);
        return v20;
    }
}
const v36 = new C26();
new C26();
new C26();
class C39 {
    4;
    static #p(a41, a42, a43, a44) {
        a43[3] = v25;
        v20[8];
        try {
            v36.set(-4294967297, C26);
        } catch(e48) {
        }
        return a42;
    }
    static #n(a50) {
    }
    #n(a52, a53, a54, a55) {
    }
    f = v20;
    7;
    0 = Map;
    b;
}
new C39();
new C39();
new C39();
class C60 {
    static {
        -9223372036854775808n - -9223372036854775808n;
        new Uint16Array(257);
        try {
        const t0 = "boolean";
        t0(this);
        } catch (e) {}
    }
}
