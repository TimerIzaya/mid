function f1() {
}
const t2 = 2.220446049250313e-16;
new t2();
class C4 {
}
function F9(a11) {
    if (!new.target) { throw 'must be called with new'; }
    const v12 = this.constructor;
    try { new v12(a11); } catch (e) {}
    a11.size;
    this.h = Map;
}
function F15(a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        function f18() {
            return f18;
        }
        for (let [v20,...v21] of "atan2") {
        }
        this.d = undefined;
    } catch(e22) {
    }
}
new F15(3.0);
new F15(0.8599053477198899);
new F15(0.8599053477198899);
let v30 = -1879239883;
const t29 = "44184";
t29[4] = "44184";
const o33 = {
    ..."44184",
    [-15]: -15,
    ..."44184",
};
class C35 {
}
try { new C35("-322171011"); } catch (e) {}
new C35("-322171011");
function f38() {
    for (const v42 of Array(4087)) {
        v42 - v42;
        v30++;
    }
}
function f45(a46, a47, a48, a49) {
    'use strict';
    function f50(a51) {
    }
    function F52(a54, a55, a56, a57) {
        if (!new.target) { throw 'must be called with new'; }
    }
}
for (let v58 = 0; v58 < 5; v58++) {
    function f59() {
        function F60(a62) {
            if (!new.target) { throw 'must be called with new'; }
        }
        class C64 {
        }
        const o65 = {
        };
        const t63 = -15;
        const v66 = new t63();
        const o73 = {
            [v66](a68, a69, a70) {
            },
            set b(a72) {
            },
        };
    }
}
[8,35352];
const v75 = [-9,-2147483649,2];
[11336,11131,-760885999,1,0,-268435456,-1024];
function f77() {
    return v75;
}
function F78() {
    if (!new.target) { throw 'must be called with new'; }
    const v80 = this.constructor;
    try { new v80(); } catch (e) {}
    try {
        const t84 = /Ma\W+/gudm;
        t84.dotAll = this;
    } catch(e83) {
    }
}
new F78();
new F78();
