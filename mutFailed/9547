let v0 = "10";
const v4 = -10 / -10;
class C7 {
    #toString(a9, a10, a11) {
        class C23 {
            toString(a25, a26) {
                do {
                } while ((() => {
                        for (let v30 = 0; v30 < 25; v30++) {
                            function f31(a32, a33, a34, a35) {
                                return -261.99102172609366;
                            }
                        }
                        return this;
                    })())
            }
        }
        255 | -1024;
        +v0;
        +255;
        return --v0;
    }
    static a = "g";
    static [255] = "-4294967297";
    static #g;
    2545;
}
const v53 = new C7();
v53[2545];
const v55 = new C7();
v55[2545];
new C7();
1 * 1;
const v61 = new Uint8Array(1);
v61[0];
new v4(13);
new BigInt64Array(0);
const t37 = "g";
t37[0] = Uint8Array;
`iEjZ`;
const v74 = new BigUint64Array();
function F75(a77, a78) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(this); } catch (e) {}
    function f80() {
        try { v74.toLocaleLowerCase(this, "NFKD", BigUint64Array, BigUint64Array); } catch (e) {}
        try { ("NFKD").localeCompare(this); } catch (e) {}
        return a77;
    }
    const v85 = Symbol.toPrimitive;
    Symbol.for(v85.description);
    Object.defineProperty(a77, v85, { writable: true, value: f80 });
}
const v89 = new F75();
class C90 {
    static [v89];
}
