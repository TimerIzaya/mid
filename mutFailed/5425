Math.log1p(3);
Reflect.construct(Int8Array, [1126838905])[460230342];
class C11 {
    [31876] = 3;
    constructor(a13, a14) {
        a13--;
        const o16 = {
        };
        o16.h = o16;
        Proxy.d = Proxy;
        new Proxy(this, o16);
        const v20 = Symbol.toPrimitive;
        o16[v20] = v20;
    }
    16;
    static h;
    static 3739 = 3;
    [-2] = 31876;
    static [1073741824];
}
C11.length;
const v22 = new C11(1073741824, 31876);
v22[31876];
const v24 = new C11(3, 3);
v24[31876];
const v26 = new C11(3, 1073741824);
v26[31876] = v26;
class C27 extends C11 {
    [31876] = C11;
    static {
        try { new Symbol(); } catch (e) {}
        class C31 {
        }
        const v32 = new C31();
        const v33 = v32?.constructor;
        try { new v33(); } catch (e) {}
        try { ("object").sup(); } catch (e) {}
        ("object").split(v32, 2306);
        const v39 = Symbol.split;
        this[v39];
        try {
            v39.fuck(1073741824, 3, v22);
        } catch(e42) {
        }
    }
    #a = 1073741824;
    b = v22;
    static #d = 3;
    static [v22] = Reflect;
    [3];
    #g = Math;
    static #m(a44) {
    }
    #h;
    [3] = 3;
    static 1073741824 = v24;
}
new C27();
new C27();
new C27();
let v52 = -4294967296;
v52--;
class C55 extends Date {
}
const v56 = new C55(v52);
Object.defineProperty(Date, v56, { get: Date, set: Date });
const v58 = new Array(13);
v58.length;
const v60 = [-20096,4294967296,-65537,-2];
v60.length = v60;
const v61 = [-1947047520];
const v62 = [v61,v61,v61,v60];
v62[3] = v62;
const v63 = [v62];
v63[0] = v63;
try { ("D2z").link(v58); } catch (e) {}
const o73 = {
    ["slice"](a68, a69, a70, a71) {
        "D2z" < a68;
    },
};
v60["slice"](v63);
