function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 1;
    } catch(e3) {
    }
    try {
        this.b = 1;
    } catch(e4) {
    }
}
let v5 = new F0();
new F0();
const v7 = new F0();
[-Infinity,-7.230945278929126,2.220446049250313e-16,-1.7976931348623157e+308,-1000.0,-1.0,5.002169598915335,1e-15,-5.0,-4.0];
[2.0];
[-113.88577577875685,NaN,-138.72295990426278,-725973.0177101751,1.0];
const v22 = new Int32Array(7);
new Uint16Array(v22);
1000000.0 % 1000000.0;
const v30 = ([-698004.1950483839,2.2250738585072014e-308,-658.5488403472419,1.7976931348623157e+308])?.groupToMap;
let v31;
try { v31 = new v30(-8516); } catch (e) {}
const v32 = [-1.7976931348623157e+308,-2.2250738585072014e-308,1e-15,1.7976931348623157e+308,436.391218484674,984999.8983446106,-2.220446049250313e-16,-65664.25596205948,-568440.0637574068,0.6833182439703986];
v32.g = v32;
[1.4550120056683328e+308,-1.0772967663163728e+308,186061.78370046848,-1.7976931348623157e+308,-5.0,-Infinity,0.03200553966660591];
const v39 = new BigInt64Array(14);
4096 / 4096;
Uint8Array.d = Uint8Array;
Uint8Array.prototype = Uint8Array;
const v43 = new Uint8Array(4096);
const v46 = [-2.216170140955498,-2.2250738585072014e-308,-643865.3403199288,NaN];
this.decodeURIComponent(v46);
let v49 = 127;
const v50 = v49++;
function f51(a52, a53) {
    return a52;
}
new Promise(f51);
let v56;
try { v56 = v31.then(v39, v50); } catch (e) {}
let v57;
try { v57 = v56.then(v32, v43); } catch (e) {}
function f58(a59, a60) {
    const o61 = {
    };
    return o61;
}
for (let v62 = 0; v62 < 25; v62++) {
    const v63 = f58();
    Object.defineProperty(v63, v62, { enumerable: true, get: f58, set: f58 });
    v39[10] = Int32Array;
    try { v46.flat(v57); } catch (e) {}
    v5 = v7;
    const o68 = {
        "execution": "sync",
        "type": "major",
    };
    gc(o68);
    try { Reflect.preventExtensions(v63); } catch (e) {}
    const o73 = {
    };
    gc(o73);
}
