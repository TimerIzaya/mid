const v2 = new BigUint64Array(1906);
const v5 = new Float32Array(15);
const v8 = new Int32Array(51);
let v9 = 4.0;
let v11 = 1511 - 1511;
let v12 = 0;
do {
    typeof v12 === "string";
    v12++;
} while (v12 < 7)
let v19 = 0;
do {
    v11 = v9;
    v19++;
} while (v19 < 10)
const v25 = new Uint16Array(3327);
const v26 = [-2038832922,-14];
v25.set(v26);
Array();
Array(-1876875593);
for (let v34 = 0; v34 < 100; v34++) {
    Array(36862);
}
const v42 = new Uint16Array(6);
const v45 = new Float64Array(127);
gc();
new Int16Array();
const v51 = new Float32Array();
new Uint8Array(v51, Uint8Array, Uint8Array);
new Uint16Array(1000);
function f57() {
    const o61 = {
        1: 8,
        "b": v26,
        m(a60) {
            return a60;
        },
        __proto__: 946.0676210033328,
    };
}
f57();
v45[127] = 127;
v42[536870888] = -1876875593;
try {
    v45.values();
} catch(e64) {
    const v65 = e64?.a;
    try { v65(e64, v65, v65, v65); } catch (e) {}
    function F67(a69, a70, a71, a72) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.b = e64;
        } catch(e73) {
        }
    }
    new F67(F67, 8, 127, e64);
    const v75 = new F67(52235, 6, -1876875593, Uint16Array);
    new F67(v75, 6, 1000, Uint16Array);
    const v80 = new Int8Array(3816);
    for (const v81 of "some") {
        const v82 = v80[1];
        let [,,,...v83] = v80;
        const o84 = {
        };
        o84.a = v82;
        const o85 = {
        };
        o85.a = v82;
    }
}
%PrepareFunctionForOptimization(f57);
v9 = -451445.2180572981;
new Uint16Array(v45, 52235, -1876875593);
[5.0,2.0,3.0,-5.0,-Infinity,-Infinity,-1000000000000.0,-1000.0,1.376168649206787e+308,-1.358835502853269e+307];
[-0.0];
[168657.71228409093,-4.0,0.1621003938548332,1.266976474544551e+308,1.448408401622828,0.0,-1.7976931348623157e+308,-1.7976931348623157e+308,0.9860570426566385];
f57();
class C91 {
    static a = 51;
    [51] = BigUint64Array;
    static {
        v5 instanceof BigUint64Array;
    }
    static #f;
    g;
    set b(a95) {
        function f96() {
            return a95;
        }
        try { a95.n(v8, this); } catch (e) {}
        v2[7] = v8;
        [Infinity,1000000.0,2.0,-588.7572626784968,0.0,NaN,-1.0,0.7976185850473345,-831745.1234783093];
        [-4.0,0.0,1.3684028847114944e+308,-1000000000000.0,-728.9823763670167,-2.0];
        [-2.0];
    }
    set f(a102) {
        let v103;
        try { v103 = this.tan(a102, C91, a102, C91, 1906); } catch (e) {}
        v103 === v2;
        function f106() {
            return f106;
        }
        let v107 = Uint8Array;
        class C108 {
        }
        const v109 = new C108();
        function f111() {
            const v114 = v107--;
            Math.min();
            v107 ** 6;
            -4294967296 >>> v109;
            return v114 - v109;
        }
        new Float64Array(16);
        new BigInt64Array(128);
        new BigInt64Array(9);
    }
}
new C91();
const v131 = new C91();
new C91();
function f133(a134) {
    return f133;
}
const o135 = {
    __proto__: v131,
    [v5]: 51,
    [51]: f133,
};
const o138 = {
    "type": "function",
};
new Worker(f133, o138);
