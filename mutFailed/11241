const v2 = new Float32Array(5);
new Int32Array(16);
let v6 = 180;
v6--;
try { Int16Array(Float32Array, Int16Array, Int16Array); } catch (e) {}
new Int16Array(v6);
const v11 = /foo(?=bar)baz/uimsy;
const v12 = /a|b*/gvm;
v12.dotAll = v12;
/a|bc\xe2\x81\xa3?/gdisy;
class C14 {
}
const v15 = new C14(v2, 16, Int32Array);
const v16 = v15.toLocaleString(v15, C14, C14, v15);
try { v16.replaceAll(v16, v11); } catch (e) {}
const v18 = v16.normalize();
v18[7] = v18;
function f19() {
    let v22 = -451916581;
    4096 + 4096;
    const v25 = Function.random();
    v25 | v25;
    --v22;
    v22 / Int16Array;
    const v30 = 2 < 2;
    const v32 = new Int16Array(2);
    const v33 = new Uint16Array(v32);
    function f34(a35, a36) {
        try { new SharedArrayBuffer(a36); } catch (e) {}
        const v40 = new SharedArrayBuffer(217);
        v40.slice(2);
        return v30;
    }
    v33.valueOf = f34;
    v33[211] = v33;
    return v30;
}
const v44 = new Function(218);
v44[133];
v44.sort(f19)[35];
