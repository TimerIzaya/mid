[-2.0,-1.3479033107347256,1e-15,-4.2306125616543895,NaN,-793059.409234246];
[-1.0997924820930348e+308];
[7.028283461678527,2.0876931465510253,2.220446049250313e-16,-706.875775506918,0.755116014999489,1e-15,0.926473331560571,NaN,0.8576693454887704,-1000000.0];
const o7 = {
    "maxByteLength": 10,
};
const v9 = new ArrayBuffer(10, o7);
new Uint32Array(v9);
function F17(a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    a20 = a19;
    try {
        new F17(a19, 9n);
    } catch(e23) {
    }
    this.b = this;
    try {
        this.b = 575359.9213139261;
    } catch(e24) {
    }
}
new F17(-4, 575359.9213139261);
new F17(-4, 575359.9213139261);
const v27 = new F17(4, 0.5479550729935178);
function f28() {
    return f28;
}
const v29 = [155533.8602852358,2.0];
v29[658291203] = v27;
function F31() {
    if (!new.target) { throw 'must be called with new'; }
    this[490];
    try {
        v9.valueOf = f28;
    } catch(e34) {
    }
    const v37 = Array(19793);
    v37[15699] = v37;
    for (const v38 of v37) {
        v29[658291203] = null;
        Math.g = Array;
        f28--;
    }
}
new F31();
