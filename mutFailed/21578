const v0 = [654585325,-4,57170,-750,-1699180418,59553];
const v1 = [-1024,-1073741824,15,1925];
const v2 = [-536870912,-1795964385,-56127,953649236,7,1,-50892];
-10n <= -10n;
function f7(a8, a9, a10, a11) {
    try { a8.findLastIndex(a10); } catch (e) {}
    a10 % a10;
    a11 << a11;
    const o29 = {
        [v2]: v1,
        ...v1,
        [2147483649n]: a9,
        [a10](a16, a17, a18) {
            v2.length <<= a17;
            let v19;
            try { v19 = a17(); } catch (e) {}
            super[v19] = 2147483649n;
            new Uint32Array(1);
            new Float32Array(14);
            const v28 = new Uint8ClampedArray(1790);
            return v28;
        },
    };
    o29[2147483649] = o29;
    return o29;
}
const v30 = f7(v2, v1, 2147483649n, 2147483649n);
f7(v1, v0, 2147483649n, 2147483649n)[3];
const v33 = f7(v30, v30, 268435440n, -10n);
function f34(a35, a36) {
    const o42 = {
        [268435440n]: a36,
        "g": a35,
        "b": a36,
        "f": a36,
        [2147483649n]: v0,
        [a36](a38, a39) {
            const v40 = super.h;
            try {
                this.b = v40;
            } catch(e41) {
            }
            return v2;
        },
    };
    return o42;
}
const v43 = f34(268435440n, f7);
f34(2147483649n, v33);
f34(268435440n, v43);
const v48 = new Float32Array(9);
Int8Array.name;
new Int8Array(v48);
