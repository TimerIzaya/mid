function f3(a4, a5) {
    const v6 = a5 & a5;
    const o18 = {
        "f": 268435439,
        "g": a4,
        "d": a5,
        set c(a8) {
            !true;
            this.constructor;
            const o13 = {
                [10000n]: v6,
            };
            return o13;
            a5 = a4;
            super[268435439];
            Object.defineProperty(this, "a", { writable: true, enumerable: true, value: a4 });
        },
    };
    return o18;
}
const v19 = f3(1073741825, -39929);
class C20 {
}
function f21() {
    const v25 = Symbol.toPrimitive.description.codePointAt(C20);
    return v25 >> v25;
}
let v27 = f3(-39929, -39929);
f21.d = f3(v19, 1073741825);
-29424;
9108 >>> 9108;
let v38 = -2749;
({"f":v27,"h":v38,...v38} = C20);
new Uint8ClampedArray(29424);
const t34 = 540608897;
new t34(257);
new BigInt64Array(1843);
1023308419 + 1023308419;
const v50 = [1000000.0,4.0,877990.5497759602,-506457.5906391711,1.5877136832764825e+308,-5.0,0.37988723353754195];
const v51 = [-2.2250738585072014e-308,4.258971338651328e+307];
let v52 = 536870887n;
v52--;
class C56 {
    static {
        const v58 = this.name;
        this.toString().lastIndexOf(v58);
    }
    #valueOf(a62, a63) {
    }
    static #a = v51;
    #g = v52;
    static #f = v50;
    #b;
    static #e;
    [v50];
    #n() {
    }
    static #d = 29424;
}
2147483648 & 2147483648;
const v77 = [];
function F78() {
    if (!new.target) { throw 'must be called with new'; }
    this.d = v77;
}
new F78();
