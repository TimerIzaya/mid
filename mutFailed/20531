const v0 = [6,-11,-12,268435456,9,268435439,-14,-10,-1073741824,8];
function f1(a2, a3) {
    Object(10).toExponential(16);
    return v0;
}
v0.toString = f1;
const v9 = [-14,-9007199254740991];
const v10 = [-637716649,-1840415847,5,-4294967295,63477,-65537,9007199254740991,0,256,17650];
const v13 = 9007199254740990 >> 9007199254740990;
class C15 {
    static b;
    static a;
    [v0];
    static set d(a17) {
        v0.length;
        v10 >> 9007199254740990;
        try {
            v10.length = 9007199254740990;
        } catch(e20) {
        }
    }
    [v10] = v0;
    static c = v0;
    [v9];
    static #h;
}
C15.constructor = f1;
let v21;
try { v21 = new C15(); } catch (e) {}
const v22 = new C15();
const v23 = v22?.constructor;
v23.constructor = f1;
try { new v23(); } catch (e) {}
const v25 = new C15();
const v26 = new C15();
v26.constructor = f1;
const v27 = v26?.__lookupSetter__;
try { new v27(v26); } catch (e) {}
function F29(a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    function f33(a34, a35) {
        class C38 {
        }
        const v39 = new C38();
        const v40 = new C38();
        const o46 = {
            "h": v39,
            [v40](a42, a43, a44) {
                super[-9223372036854775807];
            },
            [-3]: v39,
            __proto__: C38,
            "c": 9,
        };
        return o46;
        return C38;
    }
    this[Symbol.toPrimitive] = f33;
    function f49(a50) {
        new Int32Array(2943);
        return v21;
    }
    a31[Symbol.toPrimitive] = f49;
    try {
        this.h = a32;
    } catch(e56) {
    }
    try {
        this.c = a31;
    } catch(e57) {
    }
}
F29.length;
const v59 = new F29(F29, v25);
const v60 = new F29(-9007199254740992, v10);
const v61 = new F29(v60, v10);
v61[Symbol.toPrimitive] = f1;
v61.h = v61;
function f64(a65, a66, a67) {
    a66.toString = f1;
    a67.constructor = f64;
    const v68 = a67?.constructor;
    function f69() {
        return f64;
    }
    function f70(a71) {
        Symbol[v13] = a67;
    }
    Object.defineProperty(v68, "constructor", { configurable: true, enumerable: true, get: f69, set: f70 });
    try { new v68(v61, a66); } catch (e) {}
    const o85 = {
        "b": v0,
        "d": 9007199254740990,
        "c": v22,
        __proto__: a66,
        set h(a74) {
            v0 in v25;
            new Int8Array(2);
            new BigInt64Array(209);
            new Int8Array(7);
        },
    };
    return o85;
}
const v86 = f64(9007199254740990, C15, v59);
function f87() {
    return f1;
}
function f88(a89) {
    [] = v10;
}
Object.defineProperty(v86, "constructor", { get: f87, set: f88 });
f64(-9007199254740992, v9, f64(9007199254740990, v86, v26));
class C92 {
}
const v93 = new C92();
const v94 = v93?.constructor;
try { new v94(); } catch (e) {}
for (const v96 in v93) {
}
