new Int32Array(48342);
let v7 = -2.0;
v7++;
BigInt64Array.d = BigInt64Array;
new BigInt64Array(-4294967297);
const v13 = new Float32Array(1007);
const v14 = v13[298];
0 >>> 0;
new Int32Array(0);
new Int8Array(4294967297);
new Float64Array();
function f25() {
    return ([Int32Array,f25,v14]).shift();
}
5 === 5;
new Float32Array(5);
const v32 = [-21444.420261586667,2.0,2.0,-1e-15,-1000000000000.0,2.220446049250313e-16,-2.0];
const o33 = {
};
const v35 = new Proxy(v32, o33);
const o36 = {
    ...v35,
};
const v38 = Int16Array?.__proto__;
try { new v38(); } catch (e) {}
new Int16Array(9);
const o43 = {
    "execution": "async",
};
gc(o43).then();
function f46(a47, a48) {
    a47.e = a47;
    const v51 = Array(a47, 3);
    try { v51.concat(a47); } catch (e) {}
    Object.defineProperty(v51, 0, { configurable: true, enumerable: true, get: a47, set: a48 });
    let v53 = v51.unshift(3);
    v53--;
    return v53;
}
new Promise(f46);
