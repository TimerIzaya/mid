new Int16Array(10);
new Float32Array(1222);
const v8 = new Uint32Array(316);
new Int32Array(3);
new BigUint64Array(10);
new Int32Array(1);
function f18(a19, a20) {
    a20.apply();
    return a20;
}
for (let i24 = 0, i25 = 10;
    (() => {
        const v26 = i24 < i25;
        f18(10, v8);
        %PrepareFunctionForOptimization(f18);
        f18(10, v8);
        f18(10, v8);
        %OptimizeFunctionOnNextCall(f18);
        f18(10, v8);
        return v26;
    })();
    i25--) {
}
const v37 = new Promise(f18);
const t24 = v37.constructor;
new t24(f18);
v37.then(f18);
