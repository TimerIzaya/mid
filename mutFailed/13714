class C3 {
    o(a5, a6) {
        a5 = 1000000000000.0;
        try {
            const v8 = [9,1073741825,-4096,10,1,4294967297,911296943,-9223372036854775808,-53393,16];
            const v9 = [2147483648,-9223372036854775808,1073741823,-5827,17147,6507,0,255,61798];
            const v10 = [-10,2,536870888,-6,-10,-16,3090,-1132274585,-4612];
            class C11 {
                valueOf(a13, a14) {
                    v8.length -= a13;
                    return v10 % v9;
                }
                1 = v8;
                static #m(a17, a18) {
                    return 5n;
                }
                2916208505 = v9;
            }
            const v22 = new C11();
            let v23 = new C11();
            const v24 = new C11();
            function F25(a27, a28, a29, a30) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.f = C11;
                } catch(e31) {
                }
            }
            const v32 = new F25(v8, v9, v24, v9);
            function f33(a34, a35, a36) {
                const o43 = {
                    "g": v9,
                    __proto__: a34,
                    8: a35,
                    176: a34,
                    p(a38, a39, a40) {
                        v23 = this;
                        %VerifyType(this);
                        v9["some"](a35, v8);
                        return a34;
                    },
                    "d": a36,
                };
                return o43;
            }
            f33(v32, v9, v22);
            this.length = 3;
        } catch(e45) {
        }
        return a6;
    }
    #e;
}
function f46(a47) {
    new Array(3115);
}
Object.defineProperty(C3, 268435441, { writable: true, configurable: true, enumerable: true, set: f46 });
new C3();
const v52 = new C3();
const v53 = new C3();
v53[268435441] = Infinity;
new Uint16Array(108);
function f57(a58, a59) {
    a59.apply();
    return a58;
}
const v62 = new Promise(f57);
function f63() {
    function F64(a66, a67, a68, a69) {
        if (!new.target) { throw 'must be called with new'; }
    }
    return F64;
}
v62.valueOf = f63;
class C70 extends C3 {
    constructor(a72, a73, a74, a75) {
        super();
        a72[268435441] = this;
    }
    static #b;
    #valueOf(a77, a78, a79) {
        return this[a77];
    }
    #c = -1.7976931348623157e+308;
}
const v81 = new C70(v53, C3, Infinity, v52);
const v82 = new C70(C3, v81, 1000000000000.0, v81);
new C70(C70, v82, 1000000000000.0, C70);
0 < 7;
const v87 = v62.valueOf();
const v88 = /((((.).).).)rfoo|(bar|baz)|quux*/uims;
try { v88(); } catch (e) {}
class C93 {
}
const v94 = new C93();
function F96(a98, a99) {
    if (!new.target) { throw 'must be called with new'; }
}
function f103() {
    try { new v87(Uint16Array, -534568.6902183883, -1.7976931348623157e+308, v87, C3); } catch (e) {}
    function f105(a106, a107, a108, a109) {
        function f110() {
            Math.round(a107);
            const v114 = Math.tanh(-4294967295);
            v114 * v114;
            return v114;
        }
        f110();
        eval(a106);
        %OptimizeFunctionOnNextCall(f110);
        return f105;
    }
    return -1.7976931348623157e+308;
}
F96.constructor = f103;
const v119 = F96.constructor;
try { v119("function"); } catch (e) {}
function F124(a126, a127) {
    if (!new.target) { throw 'must be called with new'; }
    const v128 = a126?.__lookupSetter__;
    try { new v128(a126, ...v128, -534568.6902183883, this); } catch (e) {}
    try {
        v94.__proto__ = a126;
    } catch(e130) {
    }
    try { v128(6); } catch (e) {}
    a127[2147483648] = a127;
    const v133 = new Int8Array();
    for (const v134 in v133) {
    }
}
