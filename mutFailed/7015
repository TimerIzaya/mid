class C2 extends Int32Array {
}
const v3 = [10617.622628886602,-5.0,1.7976931348623157e+308,-8.220199247866622e+307,1000000000000.0,0.0,48740.75682475441,-1000000000.0,6.407443663238073,369.9978678982163];
function f4() {
    function f5() {
        const v7 = Symbol.iterator;
        const o16 = {
            [v7]() {
                let v9 = 10;
                const o15 = {
                    next() {
                        v9--;
                        const v13 = v9 == 0;
                        const o14 = {
                            "done": v13,
                            "value": v9,
                        };
                        return o14;
                    },
                };
                return o15;
            },
        };
        return o16;
    }
    return f5;
}
function f17(a18) {
    v3[65536];
}
Object.defineProperty(v3, Symbol.toPrimitive, { configurable: true, get: f4, set: f17 });
Date.parse(v3);
const o25 = {
};
o25.propertyIsEnumerable;
const v27 = /8[\cA]v/uisy;
const v28 = [3480,1024,-4294967297,-1024,512,65536,29198,-9223372036854775807,-2147483647];
try {
    v28.length = v27;
} catch(e29) {
}
function f31(a32) {
    function f33() {
        return f33;
    }
    function f34() {
        return f34;
    }
    const o38 = {
        "e": -256,
        "h": a32,
        [-256]: a32,
        "f": 3,
        toString(a36) {
            let v37;
            try { v37 = new a32(a36, a32, this); } catch (e) {}
            return v37;
        },
        [-2]: 3,
        ...a32,
        "d": a32,
    };
    return o38;
}
const v39 = f31(3);
const o47 = {
    get a() {
        class C41 {
            constructor(a43, a44) {
            }
        }
        eval();
    },
};
const v48 = f31(v39);
function f49(a50, a51, a52) {
    const o75 = {
        n(a54, a55) {
            class C64 extends Int32Array {
            }
            function F70() {
                if (!new.target) { throw 'must be called with new'; }
            }
            class C73 {
                static get b() {
                }
            }
            return a51;
        },
    };
    return a52;
}
f31(v48);
class C83 {
    constructor(a85, a86, a87) {
    }
    [-15];
    #valueOf(a89, a90) {
    }
    static {
        try {
        const t0 = "boolean";
        t0(this);
        } catch (e) {}
    }
}
