class C3 {
    #valueOf(a5, a6) {
        try { a5["ceil"](a6); } catch (e) {}
        return a6;
    }
    constructor(a10) {
        function f11(a12) {
            %VerifyType(C3);
            return -1000000000.0;
            return this;
        }
        a10.toString = f11;
        super[a10];
    }
    [-13] = 1.7976931348623157e+308;
    e;
}
const v14 = new C3(1.7976931348623157e+308);
function f15(a16, a17) {
    function f18() {
        let v19 = -65535;
        const o40 = {
            next() {
                v19--;
                return this;
            },
            m(a23) {
                const o24 = {
                };
                try {
                    o24.e = v19;
                } catch(e25) {
                    const v29 = new Uint8ClampedArray(512);
                    new Uint8ClampedArray(798, ...v29, o24);
                }
                const v33 = new Int8Array(3938);
                let v34 = 3;
                let v35 = 0;
                for (let i = 0; i < 5; i++) {
                    [...v34] = v33;
                    v35++;
                }
                const o37 = {
                };
                try {
                    const o38 = {
                    };
                } catch(e39) {
                }
            },
        };
        return o40.m(f18, v19, v19);
    }
    return v14;
}
v14.toString = f15;
new C3(-1000000000.0);
new C3(v14);
const v49 = new Int32Array(257);
function f56(a57, a58, a59, a60) {
    let v62 = new Map();
    [...v62] = v49;
    let [...v63] = v49;
    return v62;
}
f56(Uint32Array, 121, v49, f56);
