new BigUint64Array(1);
new Uint32Array(3425);
new Uint8ClampedArray(4);
function F9(a11, a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    const v17 = new Uint16Array(2);
    const v18 = new Uint16Array(v17);
    for (const v19 in v18) {
    }
    try {
        this.c = a13;
    } catch(e20) {
    }
    try {
        this.g = a13;
    } catch(e21) {
    }
}
new F9(3425, 1, 1, 1);
new F9(4, 3425, 4, 4);
new F9(1, 4, 4, 1);
URIError();
("128").fontsize();
new Uint8Array([749138.7740098275,-413.55890355139604,-2.0,5.0,4.0,1.7976931348623157e+308,1.0,5.956393081352694]);
const v34 = new Int8Array(5);
const v36 = new BigInt64Array();
v36.copyWithin(-9223372036854775808);
const v40 = new Uint32Array();
const t28 = [1711596310];
t28[9] = v40;
const v46 = new BigUint64Array(127);
new Float64Array();
function f54() {
    function f55(a56) {
        try {
            const o57 = {
            };
        } catch(e58) {
        }
    }
    try {
    } catch(e59) {
    }
}
const o61 = {
    "type": "128",
};
new Worker(f54, o61);
v34[v46];
Math.sin();
324308659 + 324308659;
