const v0 = [];
class C1 {
    static #c;
    static {
        let v3;
        try { v3 = this(...v0, this, this, this, this); } catch (e) {}
        v3[Symbol.hasInstance];
    }
    [v0] = v0;
    8;
    d;
}
const v7 = new C1();
const v8 = new C1();
new C1();
class C10 {
    constructor(a12, a13) {
        function f14() {
            return v0;
        }
    }
    n(a16) {
        super.f = a16;
        let v18;
        try { v18 = a16["toLocaleString"](); } catch (e) {}
        super.h = v18;
        return a16;
    }
}
new C10(v7, v8);
const v20 = new C10(v7, v8);
new C10(v20, v20);
new Float64Array(10);
new Float64Array(7);
new BigUint64Array(4);
const v31 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
for (let v32 = 0; v32 < 5; v32++) {
    function f33() {
        try {
            v31.forEach();
        } catch(e35) {
            class C36 {
            }
            const v37 = new C36();
            const v38 = [1000000.0,0.218433446981681,-5.0,-919787.2036172998,872389.6270716691];
            const v40 = [v37,v37,v37,v37,v37];
            Reflect.apply(v38.pop, v37, v40);
            e35.message;
            const v44 = e35.constructor();
            const o45 = {
                "execution": v44,
            };
        }
        return f33;
    }
    f33.call(v31, f33, v31, f33);
    %OptimizeFunctionOnNextCall(f33);
}
