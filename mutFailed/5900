const v0 = [];
const v4 = [-1073741824];
const v5 = [268435439,849858885,-2147483648,-6,2,256,1185680761,-13,-4];
const v6 = [-65535,-9007199254740992,14,268435439];
v6.p = v5;
class C7 {
    set b(a9) {
        new Uint32Array(94);
        new Float32Array(8);
        new Uint8Array(4096);
    }
    #c;
    static #e = v0;
    static [v4];
}
const v19 = new C7();
function f20(a21, a22) {
    const v25 = new Uint32Array(4);
    v25.fill();
    return a21;
}
v19[Symbol.toPrimitive] = f20;
let v29;
try { v29 = v19.repeat(); } catch (e) {}
let v30;
try { v30 = v29(v6, v6, v5); } catch (e) {}
v6["p"];
v6[v19] = v30;
new BigInt64Array(3381);
new BigUint64Array(2943);
new Uint16Array(7);
new C7();
new C7();
const v46 = [];
function f47() {
    const o54 = {
        ...v46,
        __proto__: v46,
        valueOf() {
            new Array(15);
            const v53 = new WeakMap();
            return v53;
        },
        "h": v46,
        [13]: "6",
        536870912: 7,
        2147483649: v0,
        268435439: 31953,
        "e": "M",
        [v46]: v46,
    };
    return o54;
}
const v55 = f47();
f47();
const v57 = f47();
const v58 = [4294967297,-36743,-2147483648,-256,1777836255,-13,1073741824,64,1947646334];
v58[2] = v58;
const v59 = [-65535,4294967297,-1070698525,10000,9007199254740991];
v59[2] = v59;
const v60 = [5,-16931,-9007199254740991,2147483649,-1073741824];
const v61 = [v60,v55,v57,v55];
let v62;
try { v62 = v61.findLastIndex(v60); } catch (e) {}
const v63 = [v57,f47];
[v58,v63,v63,v46,v63];
v59.length;
const v67 = Symbol.iterator;
const o76 = {
    [v67]() {
        let v69 = 10;
        const o75 = {
            next() {
                v69--;
                const v73 = v69 == 0;
                const o74 = {
                    "done": v73,
                    "value": v69,
                };
                return o74;
            },
        };
        return o75;
    },
};
function f79(a80, a81) {
    try {
        v62.length = 2;
    } catch(e83) {
    }
}
new Promise(f79);
1000000000000.0 >> 1000000000000.0;
109.712540645854 === 109.712540645854;
109.712540645854 >>> 109.712540645854;
function f90() {
}
class C91 extends f90 {
    constructor(a93, a94, a95) {
        super();
        for (let v96 = 0; v96 < 100; v96++) {
            f90();
        }
    }
}
C91.name;
const v99 = new C91();
Object.defineProperty(v99, "constructor", { writable: true, enumerable: true, value: Symbol });
const v100 = v99?.constructor;
v100.arguments;
try { new v100(); } catch (e) {}
const v103 = [0.0,1000000.0];
v103[1] = v103;
function f104() {
    const v107 = Array(4087);
    v107[3240] = Array;
    try { v107.entries(); } catch (e) {}
    v107[351] = v99;
    for (const v109 of v107) {
    }
    for (const v110 of v107) {
    }
}
const v111 = f104();
async function f112(a113, a114, a115) {
    function f116() {
    }
}
try { v111.isArray(v99); } catch (e) {}
f104();
