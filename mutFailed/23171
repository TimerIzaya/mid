const v0 = /(?:a+)?a?/ui;
const v1 = /(YU(x)(x)(x)\12a\sc*)/gvm;
const v2 = /(C[x\dz])/dmsy;
class C3 {
    [v0];
    set b(a5) {
        try {
            this.toString = a5;
        } catch(e6) {
        }
        [v0,this,v2,v1[613447047]];
        const v9 = [this];
        [v9,v9,this,v0];
    }
    #a = v0;
}
new C3();
new C3();
new C3();
new Array(218);
const v21 = new Set();
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a24;
    } catch(e26) {
        for (let [v27,v28] of a24) {
            try {
                v21.values();
            } catch(e30) {
            }
        }
    }
    try {
        this.h = v21;
    } catch(e31) {
    }
    try {
        const v32 = v21[this];
        try {
            new F22(v32, -268435456n);
        } catch(e35) {
        }
        this.b = Set;
    } catch(e36) {
    }
}
const v37 = new F22(Set, Set);
new F22(Set, F22);
const v39 = new F22(v37, F22);
const v43 = [65537,268435441,63298,-5,1235122603];
const v44 = [128,215394418];
const v45 = v44.entries();
const v46 = [-2,-4294967296,4294967297];
function F47(a49, a50, a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
}
const v53 = new F47(-714582153, F47, -714582153, v44);
const v55 = new F22(v39, null);
new BigUint64Array(0);
new Int32Array(1519);
v53.length;
const v63 = new F47(9, v53, 9, v46);
v63.b = v63;
const v64 = new F47(1024, v63, v46, v46);
const v72 = ("string").trimStart();
v45[3];
let v76;
try { v76 = v72(); } catch (e) {}
v43[v76] = v44;
0 ^ 9;
const v81 = -1000;
~9;
v81 >>> v81;
a = ("string").length - F47;
v21[v63];
v55.__proto__;
-35417 - -35417;
let v90 = undefined;
v90 = v64;
