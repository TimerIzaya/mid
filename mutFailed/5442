try {
const t0 = 49;
t0(49, 49, -1n);
} catch (e) {}
const o7 = {
    "maxByteLength": 2147483647,
};
const v9 = new SharedArrayBuffer(7, o7);
new Uint32Array(v9);
new Int16Array(49);
new Float32Array(129);
new Int16Array(11);
/((?<!a)B[\cz]+)/udms;
/Ba\scf/d;
/[\ca]+/visy;
class C23 {
}
new C23();
class C25 extends C23 {
    constructor(a27, a28, a29) {
        super();
        const o33 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o33);
    }
}
new C25();
const v37 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v38 = [601759695];
function f40(a41, a42, a43, a44) {
    function f45() {
        const o62 = {
            "c": -4294967297n,
            [522675525n](a50, a51) {
            },
            "c": v38,
            valueOf(a53, a54) {
            },
            "e": -4294967295,
            "maxByteLength": -4294967295,
            "arguments": v37,
            ...v38,
            "type": "Vre",
            ..."Vre",
            valueOf(a56, a57) {
            },
            ..."Vre",
            4: "Vre",
            "type": "Vre",
            toString(a59, a60, a61) {
            },
            5: -4294967295,
            6: -268435456,
        };
    }
    f45();
    %OptimizeFunctionOnNextCall(f45);
}
new BigInt64Array();
new BigUint64Array();
for (let v70 = 0; v70 < 10; v70++) {
    f40();
}
%OptimizeFunctionOnNextCall(f40);
