const v2 = new Uint8Array(129, Uint8Array, Uint8Array, Uint8Array);
const v5 = new Uint8Array(0);
class C6 {
}
const v8 = [];
const o9 = {
    "arguments": v8,
    "type": "function",
};
new Float64Array(64);
function f13(a14, a15, a16) {
    const o27 = {
        set a(a18) {
            a16 | 129;
        },
        ...v5,
        [Uint8Array](a22, a23, a24) {
            this[a16];
            !v2;
            return v5;
        },
        __proto__: v2,
    };
    return o27;
}
f13(64, f13(64, 0, 64), 129);
f13(129, v5, 64);
try { v2.lastIndexOf(Uint8Array, 0); } catch (e) {}
function f32() {
    return 129;
}
f32 & Uint8Array;
let v35 = 0;
const o39 = {
    "maxByteLength": 512,
};
const v41 = new Float64Array(512, o39);
new DataView(v41);
const v44 = v35 < 8;
v35++;
for (let v48 = 0; v48 < 5; v48++) {
    v48 >= v48;
    v44.__proto__;
    f32();
    %PrepareFunctionForOptimization(f32);
    f32();
    f32();
    %OptimizeFunctionOnNextCall(f32);
    f32();
}
function f55() {
    for (const v59 of Array(4087)) {
        const v60 = `
        `;
        eval();
        function f63() {
        }
    }
}
%PrepareFunctionForOptimization("-4096");
%OptimizeFunctionOnNextCall(f55);
f55();
const v66 = new Float64Array();
v66.constructor;
new BigUint64Array(6);
