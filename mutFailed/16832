class C3 {
    #e = -1024;
    [1000000000000.0];
    constructor(a5) {
        Reflect.construct(a5, [Reflect,-1024,"pow",-1024], a5);
        try {
            Reflect.#e;
        } catch(e10) {
        }
    }
    ["pow"] = 1000000000000.0;
    #c;
    [-1024];
    static b;
}
new C3("pow");
const v12 = new C3(C3);
new C3(C3);
[-1000000.0,-Infinity,5.0,1.3887391962841088e+308];
[1e-15,-4.0,1000000.0,-2.2250738585072014e-308,-993.7122641218709];
const v16 = [-1000000000.0,-1000000.0,-104.85090283620173,1000000.0];
class C17 {
    7;
    #g;
    constructor(a19, a20, a21) {
        for (let v22 = 0; v22 < 5; v22++) {
            function f24() {
                const o32 = {
                    [-4294967297n](a26, a27, a28, a29) {
                        eval(v12);
                    },
                };
                return f24;
            }
            f24();
            %OptimizeFunctionOnNextCall(f24);
        }
    }
    static [C3] = "pow";
    [C3];
    toString(a35, a36, a37) {
        new Int32Array();
        const v43 = Array();
        v43["concat"]();
        new Float64Array(1701);
        2147483649 << 2147483649;
        try {
        } catch(e49) {
            function f50(a51) {
                return Uint32Array;
            }
        }
        new Int32Array(3094);
        const v57 = [v43];
        class C59 extends Map {
        }
        const v60 = new C59(v57);
        const v61 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
        const v63 = new Uint32Array(v60, v43);
        const v65 = [601759695];
        const v66 = [1073741824,1073741823,1376142744,1073741825];
        v65["pop"]();
        function f69() {
            const v71 = ("Vre").charAt();
            try { v71.lastIndexOf(); } catch (e) {}
            ("Vre").codePointAt();
            v61.length;
            try {
                v66.forEach();
            } catch(e76) {
            }
            const o89 = {
                "c": -4294967297n,
                "EPSILON": v65,
                valueOf(a78, a79) {
                    return v16;
                },
                1073741824: v63,
                [-4294967297n](a81, a82, a83, a84) {
                    eval();
                },
                o(a88) {
                    return -4294967297n;
                },
                256: 1000000000000.0,
            };
            return C17;
        }
        new Uint16Array(255);
        return this;
    }
}
new C17();
new C17();
new C17();
new Int16Array(16);
new BigInt64Array(4096);
new Uint32Array(1783);
function f105(a106, a107) {
    function F109(a111) {
        if (!new.target) { throw 'must be called with new'; }
        a111 / a111;
        const v113 = this.constructor;
        v113.name;
        try { new v113(-143547321); } catch (e) {}
    }
    const v119 = new Uint16Array(3225);
    for (const v120 of v119) {
        const v122 = 9007199254740991 * v120;
        v122 | v122;
    }
}
BigUint64Array[Symbol.toPrimitive] = f105;
BigUint64Array * 536870887;
function f128() {
    new Int8Array(1073741823);
}
function F132(a134, a135, a136, a137) {
    if (!new.target) { throw 'must be called with new'; }
}
const v138 = new F132();
v138.valueOf = f105;
function f139(a140, a141, a142, a143) {
    function f144() {
        return f144;
    }
    const v145 = f144();
    function f146(a147, a148) {
        const o150 = {
            get d() {
                return this;
            },
        };
        return v145;
    }
    f146(f146());
    return f139;
}
f139();
"" >= v138;
