const v0 = /l/udisy;
const v1 = /[TIKa(?!bbb|bb)ca*b*]/vdi;
const v2 = /[{12,3b(x)(x)(x)\2*]/y;
function f3(a4) {
    const o22 = {
        __proto__: a4,
        toString(a6, a7) {
            try { new a7(); } catch (e) {}
            try { a7(a6); } catch (e) {}
            try {
                function f12(a13, a14, a15, a16) {
                    return arguments;
                }
                const v18 = f12(f12, f12, Date, f12);
                v18.constructor.setPrototypeOf(Date, v18);
                v1.length = 2147483647;
            } catch(e21) {
            }
            return v2;
        },
    };
    return o22;
}
f3(v2);
f3(v0);
f3(v2);
let v29 = 3.1466442940809625;
class C31 {
    set e(a33) {
        function f35() {
            parseInt(([-65537,-65537,-65537,-65537]).toSpliced());
        }
        %OptimizeFunctionOnNextCall(f35);
        const v40 = Symbol.iterator;
        const o46 = {
            [v40]() {
                let v42 = 10;
                const o45 = {
                    next() {
                        v42--;
                        return this;
                    },
                };
            },
        };
        const v48 = new Set();
        let [v49,,...v50] = v48;
        v49.toDateString(Set, Set, v49);
        let v52 = undefined;
        const v53 = v52++;
        v53 >> v53;
    }
}
const v55 = new C31();
const v56 = new C31();
const v57 = new C31();
function f58(a59, a60) {
    const o69 = {
        set b(a62) {
        },
        4: -2382,
        512: C31,
        4294967295: a59,
        valueOf(a64, a65) {
            return a65;
        },
        "e": v56,
        o(a67, a68) {
            return a68;
        },
    };
    return o69;
}
const v70 = f58(f58, v29);
class C72 {
}
function F73() {
    if (!new.target) { throw 'must be called with new'; }
    7 instanceof C72;
}
new F73();
f58(C31, v29);
const v78 = f58(f58, -1000.0);
let v79 = 1024n;
try {
    C31();
} catch(e81) {
}
v78.h;
let v83 = v78[v57];
const v86 = new Uint8ClampedArray();
Float32Array in v86;
function f89() {
    return this;
}
({"e":v79,"h":v83,...v29} = v70);
try { v55.p(v83, v83, -1000.0, v57, v55); } catch (e) {}
