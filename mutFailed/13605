[0.0,781.3308957797565];
const v1 = [3.0,726327.2971527416,-0.5753452581577747,0.6376839908345494];
const v2 = [0.27442176673154073];
const v3 = [2.2250738585072014e-308,-2.2250738585072014e-308,1.0,42.093625378680144,-333.0335214375324];
const v4 = [-2.2250738585072014e-308,1000.0];
const v5 = [75961.34522236232,-5.571666066166944,357.0780540702608,1000000000000.0,-1000.0,NaN,-6.655934688253236];
try { v5.find(v3); } catch (e) {}
0.7859273856414654 ^ 0.7859273856414654;
class C11 {
    static [-2] = v4;
    static get b() {
        const o13 = {
        };
        const v15 = new JSON(v1, o13);
        return v15;
    }
    static [v3];
    f = -1000000000000.0;
    static e = v2;
    static #c;
}
const v16 = new C11();
v16.f = v16;
const v17 = new C11();
const v18 = new C11();
const v19 = v18?.__defineGetter__;
try { new v19(v17, 0.7859273856414654); } catch (e) {}
8n ^ 8n;
~-9223372036854775808n;
class C26 {
    127;
    static [-2147483647n] = 8n;
    static #c = 8n;
    static #g = -2147483647n;
    static [-9223372036854775808n];
    static o(a28, a29) {
        try { a29(a29); } catch (e) {}
        function f34(a35, a36, a37, a38) {
            function f39() {
            }
            class C40 extends f39 {
                toString(a42, a43) {
                    const t42 = this.constructor;
                    t42();
                    -this;
                }
            }
            const v47 = new C40(f39, a36, v18);
            try { v47.toString(); } catch (e) {}
            for (let i = 0; i < 5; i++) {
                ["object"];
            }
        }
        f34();
        let v52 = ~a29;
        Math.sign();
        v52--;
        -1024 / -9223372036854775808n;
        return 8n;
    }
}
C26.length = C26;
try { new C26(); } catch (e) {}
const v57 = new C26();
v57[127];
const v59 = new C26();
v59[127] = v59;
const v60 = new C26();
v60[127];
-854882636 >>> -854882636;
let v65 = 2147483647;
v65++;
4 * 4;
new Float64Array(4);
try { new Float64Array(-43422, v57, v60); } catch (e) {}
new Float64Array(129);
Float64Array.length = Float64Array;
const v77 = new Float64Array(1000);
v77[21];
function f79() {
    -7 << -7;
    try { ("toString").trimStart(); } catch (e) {}
    ["toString","toString","toString","toString","toString"];
    Int32Array[0] = 129;
    let v87;
    try { v87 = new Int32Array(C26, C26, C26); } catch (e) {}
    const v88 = v87?.entries;
    try { new v88(); } catch (e) {}
    const v90 = new Int32Array(Int32Array);
    v90?.constructor;
    new Uint8Array(v90, v90, Int32Array);
    class C94 {
        constructor(a96, a97) {
            const v98 = this.constructor;
            v98.name = v98;
            v98.f = v98;
            try { new v98(f79, C94, -7); } catch (e) {}
            this[-2147483648] >>>= -7;
            for (let v100 = 0; v100 < 5; v100++) {
            }
        }
    }
    C94.d = v77;
    C94.d = C94;
    new C94();
    return -7;
}
f79();
f79();
f79();
