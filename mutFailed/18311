const v0 = [13,-853767270,5248,10000,1,10000,63847,4294967296,14,-128];
const v1 = [8,64];
const v2 = [127,-1024,4,-12,1073741824,1645062020,-9223372036854775808];
function f3(a4) {
    a4[1] = a4;
    const o10 = {
        "a": v1,
        "d": a4,
        __proto__: f3,
        "f": v0,
        o(a6, a7) {
            a6.length;
            try {
                v2.f = this;
            } catch(e9) {
            }
            return a4;
        },
        "c": v2,
        "g": a4,
    };
    o10.e = o10;
    return o10;
}
f3.length;
const v12 = f3(v1);
f3(v1);
const v14 = f3(f3);
const v15 = [v0,f3];
let v16;
try { v16 = v15.reduceRight(v2); } catch (e) {}
const v17 = [v12];
v17.g = v17;
const v18 = [f3];
try { v18.toSorted(v2); } catch (e) {}
const v24 = 3965 << 3965;
let v26;
try { v26 = new Int16Array(Int16Array, v14, v24); } catch (e) {}
const v27 = new v16(3965);
v27[2813] = v27;
v27[904] = v27;
let v28 = 4092;
v28--;
new v26(v28);
857 + 857;
new Float64Array(857);
for (let i40 = (() => {
        const v37 = 0 >>> 0;
        const v38 = v37 === v37;
        v38 && v38;
        return 0;
    })();
    (() => {
        i40 & i40;
        const v43 = i40 < 9;
        857 && !v43;
        return v43;
    })();
    i40++) {
}
