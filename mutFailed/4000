class C3 {
    constructor(a5) {
        this[4][Symbol.species];
    }
    #c = 2.2250738585072014e-308;
    get e() {
        switch (this) {
            default:
                super.h = this;
                break;
            case this:
                this[this] ^= -408118.28504085087;
                break;
        }
        return this;
    }
    static #g = -585503.0651528465;
    e;
    static 2147483647;
}
new C3();
new C3();
const v13 = new C3();
const v16 = new Int32Array(1523);
new Float64Array(4);
new Int16Array(174);
const v24 = new Date();
function f27(a28, a29) {
    let v30;
    try { v30 = new a28(); } catch (e) {}
    function F31(a33, a34, a35, a36) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.g = a34;
        } catch(e37) {
        }
        try {
            this.c = a35;
        } catch(e38) {
        }
        try {
            this.b = a35;
        } catch(e39) {
        }
    }
    const v40 = new F31(v30, v30, v16, a28);
    new F31(v40, Int32Array, 2.2250738585072014e-308, v13);
    const v42 = new F31(f27, v40, C3, F31);
    try {
        new Float64Array(v42, a29, a28);
        try {
            Date();
        } catch(e45) {
        }
        new C3();
    } catch(e47) {
    }
    return a29;
}
Set[Symbol.toPrimitive] = f27;
const v50 = new Set();
v50.add(v24);
let [v52,,...v53] = v50;
v52.setUTCFullYear(v24, Set, -256);
