new Float64Array(15);
const v5 = new Float64Array(128);
function f6() {
    const o7 = {
    };
    new Proxy(v5, o7);
    return v5;
}
v5[Symbol.toPrimitive] = f6;
new BigInt64Array(1);
new Int32Array(3591);
Float64Array.valueOf = Symbol;
const v20 = new Float64Array(2);
function f21() {
    (v5 % 15) & Float64Array;
    return 128;
}
v20[Symbol.toPrimitive] = f21;
function f26(a27) {
    return Float64Array;
}
class C28 extends f26 {
    static #e;
    127;
    static [v20] = 128;
}
new Uint8Array(945);
class C32 {
}
const v33 = new C32();
function f34() {
    return v33;
}
Object.defineProperty(v33, "b", { enumerable: true, get: f34 });
