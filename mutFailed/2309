new WeakMap();
function F2(a4) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a4;
    } catch(e5) {
    }
    [Uint8Array,[Uint8Array,Uint8Array]];
    Uint8Array.toString(Uint8Array, Uint8Array, Uint8Array, Uint8Array, Uint8Array).toLowerCase();
}
const o12 = {
};
const v15 = new Int8Array(9);
v15.reverse();
new F2(WeakMap);
const v18 = new F2(F2);
const v19 = new F2(WeakMap);
const v21 = [];
const v22 = [0n,0n,0n,0n];
class C23 {
    constructor(a25, a26) {
        function F27(a29, a30) {
            if (!new.target) { throw 'must be called with new'; }
            const v31 = this?.constructor;
            try { new v31(v22, this); } catch (e) {}
            a30 ^ a30;
            this.b = v21;
        }
        new F27();
        new F27();
        new F27();
    }
}
const v37 = new C23();
const v38 = [-744673.3297502734,-1000000000.0,-894446.5347356123,0.5008261968118526,1.0,-1000000000.0];
const v39 = [820614.5617819829,-1000000.0,1e-15,1.3156841627616078];
function f40(a41) {
    for (let v42 = 0; v42 < 32; v42++) {
        v37["p" + v42] = v42;
    }
    return o12;
}
v39[Symbol.toPrimitive] = f40;
Uint8ClampedArray[Symbol.toPrimitive] = Symbol;
"ex7" <= Uint8ClampedArray;
/9f8\xf0\x9f\x92\xa9/diy["compile"]();
const v55 = [-273147.6557577348,-1000000000000.0,-2.2250738585072014e-308,NaN,0.8374116396085172,-3.0];
v55.toString = Symbol;
class C59 {
    [F2];
    g = v39;
    constructor(a61, a62) {
        a61.toString = f40;
        v39[a61] = a61;
        /k+/vsy;
        /la(?=bbb|bb)c/vdy;
        /H8\u0060/vs;
    }
    /*
    constructor(a67, a68) {
        function f69(a70) {
            function f71(a72) {
            }
            const v75 = new Uint16Array(1024);
            v75[7] = v75;
            return Int8Array;
        }
        const o78 = {
            "type": "function",
        };
        new Worker(f69, o78);
    }
    */
    #a = 10;
    static o(a81, a82, a83, a84) {
        super[a82] = this;
        try { a83.p(v39, v18, v19, 128, this); } catch (e) {}
        return v55;
    }
}
let [,...v87] = [1e-15,1.0,-3.0,1.43935350979979e+308,-0.0];
class C89 {
    static get d() {
    }
    c;
    static #e = -1000000.0;
    4294967295;
    #a;
}
new C89();
new C59(v39, v38);
new C59(v55, F2);
new C59(v39, v19);
class C97 {
    o(a99, a100, a101, a102) {
        class C103 {
            static 44 = "EV";
        }
        new C103();
        new C103();
        new C103();
        return 0;
    }
    static #f = 0;
}
new C97();
const v109 = new Float64Array();
Uint32Array.toString = f40;
v109 > Uint32Array;
