const v0 = [];
class C1 {
    static a;
    static #n() {
        const v3 = delete v0[this];
        let v4 = 0;
        while (v4 < 6) {
            let {"a":v7,"c":v8,"h":v9,} = this;
            [[v0,v0,v3,v9,v4],v7,v0];
            [v9,v9];
            v4++;
        }
        return v0;
    }
}
const v14 = new C1();
for (let i17 = 0, i18 = 10; i17 < i18; i17++) {
    continue;
}
const v25 = new C1();
const v26 = new C1();
const o29 = {
    ...undefined,
    get e() {
        return undefined;
    },
};
class C30 {
    127;
    static 1000;
    static toString(a32, a33) {
        return v14;
        const v37 = v25 | v25;
        function F38(a40) {
            if (!new.target) { throw 'must be called with new'; }
            this.f = a40;
        }
        try {
            const t38 = "MAX_SAFE_INTEGER";
            t38.__proto__ = "b";
            Math.atan2(257, 257);
            class C44 {
            }
        } catch(e45) {
        }
        const v46 = [];
        let v47;
        try { v47 = v46.with(v46, v46); } catch (e) {}
        for (let v49 = 0; v49 < 50; v49++) {
        }
        const v52 = new Float32Array(10, 10, 10);
        const v54 = new Float64Array();
        v54[10] = v52;
        class C57 extends Int8Array {
            #d = v37;
            valueOf(a59, a60, a61, a62) {
                super[this] = C1;
                const v65 = new SharedArrayBuffer(945);
                new Int16Array(v65);
            }
            [12];
        }
        new C57(1564);
        const v70 = new Float64Array(v46, v47);
        const v71 = new Float64Array(v70, this, v47);
        v71.values();
        return v71;
        return this;
    }
    #b;
    g;
    static #e = v14;
}
const v73 = new C30();
const v74 = new C30();
const v75 = new C30();
function F76(a78, a79, a80, a81) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v0;
        new Uint8Array(127);
        new Float32Array(3531);
    } catch(e88) {
        Uint32Array[2] = 1;
        function f91(a92, a93, a94) {
            const o96 = {
                get d() {
                    return f91;
                },
            };
            const v97 = o96?.__lookupSetter__;
            let v98;
            try { v98 = new v97(); } catch (e) {}
            return v98;
        }
    }
}
new F76(C30, C1, v74, v26);
new F76(v26, C1, v75, v74);
new F76(v14, v74, v14, v75);
function f102() {
    return v73;
}
new BigInt64Array(3497);
new Uint32Array(1);
class C109 {
    constructor(a111, a112) {
        a112[2];
        /W(jy2)/udy;
        const v116 = new Uint8Array();
        for (let v117 = 0; v117 < 500; v117++) {
            const o121 = {
                ...v116,
                n(a119, a120) {
                },
            };
        }
        for (let v122 = 0; v122 < 5; v122++) {
            v0["p" + v122] = v122;
        }
        Array(-12302);
        function f128(a129, a130) {
            const o132 = {
                ...a129,
                get d() {
                    return this;
                },
            };
            return f128;
        }
    }
}
new Uint32Array(7);
%PrepareFunctionForOptimization(Date);
for (const v143 of Array(19793)) {
}
const v148 = new C109();
const v149 = new C109();
try { v148(Date, v148, v149); } catch (e) {}
Int16Array[0] = 9223372036854775807;
new Int16Array(Int16Array);
-2147483648 ^ 8.868704382732872e+307;
