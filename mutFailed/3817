function f0() {
    const o7 = {
        __proto__: 9,
        4: 257,
        set e(a5) {
            function f6() {
                return a5;
            }
        },
        [257]: 9,
        "f": 3.0,
        "h": 257,
        ...3.0,
        64: 9,
        "d": 257,
    };
    function f8(a9) {
        class C11 {
            #a = 1453;
            1073741825;
        }
        for (let v12 = 0; v12 < 10; v12++) {
            new C11();
        }
        return f0;
    }
    o7.toString = f8;
    return o7;
}
const v14 = f0(f0);
const v15 = f0();
const v16 = f0();
Object.defineProperty(v16, 872, { configurable: true, value: v16 });
function F17(a19) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = v16;
    function f20() {
        return v15;
    }
    Object.defineProperty(a19, 872, { writable: true, get: f20 });
    const v21 = this?.propertyIsEnumerable;
    try { new v21(v15); } catch (e) {}
    a19[872];
    try {
        this.a = a19;
    } catch(e24) {
    }
    try {
        this.g = a19;
    } catch(e25) {
    }
}
F17.arguments = F17;
const v26 = new F17(v14);
v26.a = v26;
const v27 = new F17(v16);
const v28 = new F17(v15);
v28.toString = f0;
function f29(a30, a31, a32) {
    const o39 = {
        "e": v27,
        "b": v14,
        n(a34, a35, a36, a37) {
            try {
                a36.toString = f0;
            } catch(e38) {
            }
            return a36;
        },
        ...a32,
        "c": v15,
        __proto__: v28,
        "f": v15,
    };
    o39.toString = f29;
    return o39;
}
const v40 = f29(v15, v28, v15);
f29(v16, v26, v14);
const v42 = f29(v15, v28, v16);
v42.b;
const v44 = [v14,v14,v27,v40];
v44[2] = v44;
const v46 = [[v44,v44],v42];
try { v46.toLocaleString(); } catch (e) {}
function F52() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -1398778545;
        const v57 = -(-7);
        Math.tan(v57 ** v57);
    } catch(e60) {
    }
}
function F61(a63, a64) {
    if (!new.target) { throw 'must be called with new'; }
    const v65 = this.constructor;
    v65.length = v65;
    try { new v65(F52, a63, F52, v65); } catch (e) {}
    new F52();
}
function f68(a69, a70, a71, a72) {
    const o73 = {
    };
    o73.b = -9007199254740992;
    o73.b = o73;
}
f68(-9007199254740992);
