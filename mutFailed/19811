const v2 = new Float32Array(27758);
new Uint8Array(3);
const v8 = new Uint8ClampedArray(128);
try {
    v2.__proto__ = v2;
} catch(e11) {
}
v8.byteOffset;
new JSON(2);
new isFinite(10);
delete v2[7];
try {
    v2.length = 2;
} catch(e20) {
}
new BigUint64Array(8);
class C23 {
}
const v24 = new C23();
const v25 = [5];
const v27 = [];
Reflect.apply(v25.fill, v24, v27);
