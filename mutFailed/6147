class C3 {
    3 = "p";
    #c = 35766099;
    ["p"] = "p";
    [35766099] = 35766099;
    f;
    #p(a5, a6) {
        try { a6(a6, "p"); } catch (e) {}
        super.b;
        return "p";
    }
    h = "p";
    b;
    #h;
    #b;
    65535;
}
C3.e = C3;
const v9 = new C3();
const v10 = new C3();
const v11 = new C3();
class C12 {
    1073741825;
    constructor(a14, a15, a16, a17) {
        this[1073741825] = this;
        a16.f = a16;
        a17.prototype = a17;
        a16 = 35766099;
        a14[0] >>= 35766099;
        const v18 = -35766099;
        v18 - v18;
        try {
            v11.valueOf = a15;
        } catch(e20) {
        }
    }
    #o(a22, a23, a24, a25) {
        try {
            a25.length = 675;
        } catch(e27) {
        }
        return 35766099;
    }
}
C12.name = C12;
const v28 = new C12(v9, v11, v11, C3);
const v29 = new C12(v9, v11, C3, v28);
v29[1073741825] = v29;
const v30 = new C12(v10, v10, C3, v9);
v30[1073741825] = v30;
let v33 = 257n;
class C34 extends C3 {
    #o(a36, a37, a38) {
        const v39 = super.f;
        v39[C12] = v39;
        try {
            v9.f = v11;
        } catch(e40) {
        }
        return a38;
    }
    get b() {
        let v42 = 0;
        while (v42 < 10) {
            v33 = 512n;
            super[this];
            const o48 = {
                "maxByteLength": 1780646951,
            };
            const v50 = new SharedArrayBuffer(812, o48);
            new Float32Array(v50);
            v42++;
        }
        return v42;
    }
}
C34.prototype;
new C34();
const v56 = new C34();
v56[65535] = v56;
new C34();
class C58 {
}
const v59 = new C58();
Int16Array.d = Int16Array;
const v62 = new Int16Array(512);
const v64 = v62["includes"](v59);
v64 || v64;
