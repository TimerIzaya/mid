const v0 = /a??[xyz]/vdms;
/abc|def|ghia{1,2}?/guisy;
const v2 = /\xe2\x81\xa3/guiy;
function f3() {
    return v2;
}
/abc+?/;
/[k[\cA]*]/gudiy;
let v9 = /(bM)/i;
const v10 = [680.8158687826431,0.8336718380485162,-1e-15,-2.0,0.02959907146706131,3.0,8.471818261150596e+307,-0.0,-1.6340424883846456,-936.6553934206692];
[-3.0,-2.220446049250313e-16,2.944456523402998,-2.0,-0.0,497647.5195374158,-129.97012697786033,1000000000000.0];
[5.7093235232057165,951782.453527194,2.2250738585072014e-308];
function f13() {
    return 1000000000000.0;
}
v9 >>= v2;
const v15 = Symbol.replace;
v10[v15] = v0;
class C19 {
    c = -261.99102172609366;
    ["localeCompare"];
    static [-1.0];
    toString(a21, a22) {
        do {
            function F24(a26, a27, a28, a29) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.a = "localeCompare";
                } catch(e30) {
                }
            }
        } while (0 < 6)
    }
}
const v33 = new C19();
const v34 = new C19();
const v35 = new C19();
try {
    v33.toString(-2003723353, -2003723353, 4294967296n, v15);
} catch(e39) {
}
function F40(a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e44) {
    }
    try {
    } catch(e45) {
    }
}
const v46 = new F40(C19, v34);
const v49 = new Float64Array(147);
const o50 = {
};
try { new C19(...-1.0, v46, v33, v35, F40, ...v49); } catch (e) {}
const o52 = {
};
