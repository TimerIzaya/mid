new BigUint64Array(256);
const v5 = new Float64Array(128);
const v8 = new Uint8Array(16);
function F9(a11, a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        BigUint64Array.d = a11;
    } catch(e15) {
    }
    try {
        this.f = v5;
    } catch(e16) {
    }
    try {
        this.a = v5;
    } catch(e17) {
    }
}
new F9(128, 128, v5, v5);
new F9(256, 16, BigUint64Array, 256);
new F9(128, 128, v8, Float64Array);
class C24 {
}
const v25 = new C24();
const v26 = [v25];
class C27 {
    constructor(a29, a30, a31) {
        function f32(a33, a34, a35) {
            v26.indexOf(C24, a34);
            try {
                f32(C27, a33, v25);
            } catch(e38) {
            }
            return f32;
        }
        f32();
    }
}
class C40 extends v5 {
}
new C40();
new C40();
