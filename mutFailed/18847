function f9(a10, a11) {
    const o21 = {
        "d": 1000000.0,
        "e": 65536,
        [a11](a13, a14, a15, a16) {
            const v17 = a11.__proto__;
            const v18 = [v17,a11];
            [64,v18,1000000.0,v17];
            [a10,v17,v18];
            return a11;
        },
        "b": a11,
        "f": a11,
        39: 2.0,
        "g": -2.2250738585072014e-308,
    };
    return o21;
}
f9(64, 2.0);
f9(65536, 65536);
const v24 = f9(31394, 1000000.0);
function F25() {
    if (!new.target) { throw 'must be called with new'; }
    function f27(a28) {
        Object.defineProperty([58584,15,9007199254740990,2146023485], 65537, { writable: true, value: [46733,-268435456] });
    }
    Object.defineProperty(this, "b", { enumerable: true, set: f27 });
    for (let v31 = 0; v31 < 5; v31++) {
        function f32() {
            const v33 = [];
            try {
                v33.some(v31);
            } catch(e35) {
            }
            return v33;
        }
        f32();
        %OptimizeFunctionOnNextCall(f32);
    }
    53516n >> 1000000.0;
    Math.sin(v24);
    Math.clz32(0.1848084506202219);
    ~0.1848084506202219;
    Math.max(v24);
    Math.acosh(0.1848084506202219);
    -v24;
    let v47 = 1073741825;
    try {
        v47++;
        let v51 = -1e-15;
        Math.atan2(v51++, -175950080);
        this.b = v47;
    } catch(e54) {
    }
}
let v55 = new F25();
let v56 = new F25();
({"a":v56,"b":v56,...v55} = v56);
const o61 = {
    "execution": "minor",
    "execution": "minor",
    get a() {
        return "minor";
    },
    "execution": "async",
    "type": "minor",
};
gc(o61);
new F25();
new Uint8ClampedArray(16);
function f68() {
    new Int8Array(1073741823);
    class C72 {
        #valueOf(a74, a75, a76, a77) {
        }
    }
    const o81 = {
        valueOf(a79, a80) {
        },
    };
}
f68();
%OptimizeFunctionOnNextCall(f68);
f68();
