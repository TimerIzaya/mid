class C3 {
    #a = C3;
    constructor(a5, a6) {
        try { this["log1p"]("log1p"); } catch (e) {}
        a5 % !749300374;
        class C13 {
        }
        const v14 = new C13();
        this.escape(v14);
        Math.cos("with");
        const v19 = [1000000000000.0,-292785.93940337666,0.9475818738839041,9.230835266163464,-20770.935036223033,2.220446049250313e-16,0.3028785088172632,8.859698277667437,-1000000000.0,-0.0];
        class C20 extends Array {
            constructor(a22, a23) {
                super();
                this.length = 2;
            }
            441 = v19;
        }
        new C20();
        Math.log(749300374);
    }
    4 = "NaN";
}
const v27 = new C3(C3, -28494);
new C3(v27, C3);
function f30() {
    for (let i32 = 0, i33 = 3;
        (() => {
            class C34 extends f30 {
            }
            return i32 < 3;
        })();
        i32 % i32, i32++) {
    }
    return f30;
}
new C3("with", "NaN");
const v44 = new Date();
function F46(a48, a49) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = -28494;
    } catch(e50) {
        class C51 {
        }
        const v52 = new C51();
        function f53(a54, a55) {
            function f56() {
            }
            class C57 extends f56 {
            }
            class C58 extends C57 {
            }
            function f59(a60, a61, a62, a63) {
                f56.a = a60;
                let v64;
                try { v64 = a60(C58); } catch (e) {}
                a61 & v64;
                const o69 = {
                    n(a67, a68) {
                    },
                };
                return o69;
            }
            for (let v70 = 0; v70 < 500; v70++) {
                f59();
            }
            return a55;
        }
        Object.defineProperty(v52, "constructor", { value: f53 });
    }
    try {
        this.d = -65535;
    } catch(e73) {
    }
    try {
        this.f = this;
    } catch(e74) {
    }
}
const v75 = new F46(v44, v44);
new F46(v75, v44);
new F46("NaN", v27);
class C79 {
    static 9 = 9.187362692894364;
}
for (const v80 in C79) {
}
function f81() {
}
%OptimizeFunctionOnNextCall(f81);
f81();
