function f1(a2, a3) {
    function f4() {
        const o19 = {
            get d() {
                const v9 = this != 2.220446049250313e-16;
                function F10(a12, a13) {
                    if (!new.target) { throw 'must be called with new'; }
                    try {
                        this.c = "dXSrM";
                    } catch(e14) {
                    }
                    try {
                        this.d = v9;
                    } catch(e15) {
                    }
                }
                const v16 = new F10("82428790", 2.220446049250313e-16);
                new F10(v16, F10);
                new F10(this, 2.220446049250313e-16);
                return "82428790";
            },
        };
        return o19;
    }
    return WeakMap;
}
const v21 = Symbol.toPrimitive;
WeakMap[v21] = f1;
const v22 = new WeakMap();
function f23(a24, a25) {
    v22[9] = a25;
    const o26 = {
        "get": Symbol,
        "getOwnPropertyDescriptor": f1,
        "getPrototypeOf": Symbol,
        "has": f1,
        "ownKeys": f1,
        "set": f1,
    };
    new Proxy(v21, o26);
    return v22;
}
v22.toString = f23;
let v29 = [WeakMap,WeakMap,WeakMap,WeakMap];
const v30 = [v29,v29,WeakMap,WeakMap];
Object.defineProperty(v30, "toString", { writable: true, enumerable: true, value: Symbol });
const v31 = [v29,WeakMap,v22,v29,v30];
class C32 {
    static [v29] = v31;
    set f(a34) {
        const v35 = super[a34];
        const v36 = super.c;
        try { v35(v31, v36); } catch (e) {}
        v29 = this;
    }
    a = v29;
    [v22] = WeakMap;
    [v30];
    10000 = v31;
}
const v38 = new C32();
const v39 = [];
const v40 = [-6.786788220284745e+307,3.0441372838377454,0.16607240252493405,9.1870148243921,-1.1724672307306477e+307,-1.3233810423722777e+308,0.3268930863961368];
const v41 = [1.1232876344345233e+308,1.0,3.0,-1.7976931348623157e+308,892.6991223982873,1000000.0,0.1500507613745743,8.371259043064821,1e-15,-192.2897093527156];
const v42 = [1000000.0,2.0511322290964932e+307];
function f43(a44, a45) {
}
const v46 = f43(v41, v39);
f43(v42, v40);
v42 || v46;
try {
    v30.length = WeakMap;
} catch(e49) {
}
%VerifyType(C32);
const v50 = new C32();
const v51 = new C32();
function f52(a53, a54, a55) {
    const o206 = {
        2769291856: v31,
        set g(a57) {
            Math.sin(-4294967295);
            try { SharedArrayBuffer.apply(); } catch (e) {}
            a55 = a54;
            function F63(a65, a66, a67, a68) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    new Float64Array(Float64Array);
                    function f71() {
                    }
                    class C72 extends f71 {
                        toString(a74, a75) {
                            -this;
                        }
                    }
                    new C72();
                    this.g = a67;
                } catch(e78) {
                }
                try {
                    this.h = a54;
                } catch(e79) {
                }
                try {
                    this.b = a68;
                } catch(e80) {
                }
            }
            new F63(v51, C32, a54, a57);
            new F63(a55, v50, a55, this);
            function f83() {
                ("-6").indexOf("deleteProperty", 5);
                [Reflect,Reflect,Reflect,Reflect,Reflect];
                const o100 = {
                    toString(a94, a95) {
                        try {
                            super.getMinutes(a95);
                        } catch(e97) {
                        }
                        return "object";
                    },
                    "type": "boolean",
                    set g(a99) {
                    },
                    "b": "boolean",
                    "g": "object",
                    128: "boolean",
                    "a": 1000000000000.0,
                    "c": "boolean",
                    ["object"]: f83,
                    ..."object",
                    ["boolean"]: 1000000000000.0,
                    [f83]: f83,
                    5: f83,
                    __proto__: "boolean",
                    "h": 1000000000000.0,
                };
                return o100;
            }
            Math.tan(-532550611);
            const v104 = [8];
            const v105 = [-1024,-2147483647,-37738,-2,21596,2147483649,9007199254740992,-2039218916];
            class C106 {
                static #f;
                static set f(a108) {
                    a108(this, this, a108, v104);
                }
                constructor(a111) {
                    this.e = v104;
                }
            }
            try { Math.reduceRight(4294967295, v105, C106); } catch (e) {}
            const v114 = f83();
            const v115 = f83();
            const v116 = f83();
            %VerifyType(v115);
            v115 >> f83;
            Object.defineProperty(v116, "c", { configurable: true, enumerable: true, set: f83 });
            function F118(a120) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    function f122(a123, a124) {
                        const o128 = {
                            [122188848n](a126, a127) {
                            },
                        };
                        return o128;
                    }
                    %PrepareFunctionForOptimization(f122);
                    this.b = a120;
                } catch(e129) {
                }
            }
            const v130 = new F118(v114);
            new F118(v115);
            new F118(v130);
            v116[128];
            function F135(a137) {
                if (!new.target) { throw 'must be called with new'; }
                a137[128] = a137;
                try {
                    this.f = a137;
                } catch(e138) {
                }
                try {
                    this.h = a137;
                } catch(e139) {
                }
                try {
                    this.d = v114;
                } catch(e140) {
                }
                class C141 {
                }
                class C142 extends C141 {
                }
                new Float64Array(6);
            }
            F135.e = F135;
            new F135(v115);
            const v147 = new F135(v116);
            v147.d = v147;
            new F135(v115);
            function f149(a150, a151, a152) {
                a151[128];
                a152[128] = a152;
                const o170 = {
                    get d() {
                        function f155(a156, a157, a158) {
                            'use strict';
                            return a156;
                        }
                        return this;
                    },
                    ...v147,
                    2074850330: a150,
                    get a() {
                        const o163 = {
                            "execution": "async",
                            "type": "major",
                        };
                        const v164 = gc(o163);
                        class C165 {
                        }
                        new C165();
                        Array(36862);
                        return v164;
                    },
                    "b": a151,
                };
                o170[2074850330] = o170;
                return o170;
            }
            const v171 = f149(v116, v116, v114);
            const v172 = f149(v115, v115, v171);
            delete arguments.callee;
            [null,v114];
            const v177 = new Float64Array();
            const v178 = v177.buffer;
            try {
                v178.resize(Float64Array);
            } catch(e180) {
            }
            v172[2074850330] = v172;
            f149(v171, v172, v115);
            function F182(a184, a185, a186) {
                if (!new.target) { throw 'must be called with new'; }
                const v187 = this?.constructor;
                try { new v187(F182, F182, f83); } catch (e) {}
                a185.g = a185;
                try {
                    this.d = a186;
                } catch(e189) {
                }
                try {
                    this.a = a184;
                } catch(e190) {
                }
            }
            new F182(v115, v116, v115);
            try { Uint32Array.bind(F135); } catch (e) {}
            function f196(a197, a198, a199, a200) {
                const o201 = {
                };
                return o201;
            }
            Math?.expm1;
            new F63(C32, v38, a53, v51);
        },
    };
    return o206;
}
f52(v29, v50, v38);
f52(v22, v51, v51);
f52(C32, v51, v38);
class C210 {
}
C210.__proto__ = "f";
