const v1 = [20728,12328,-15553,-1590643568,512,3,3];
const v2 = [2087168392,-4096,17528,58367,9007199254740992,-65537,257,536870912,9126];
for (let v3 = 0; v3 < 32; v3++) {
    v1["p" + v3] = v3;
}
const v6 = [34303,65537];
class C7 {
    constructor(a9) {
        super.c += this;
        Object.defineProperty(a9, "length", { writable: true, value: a9 });
        super[v1] = v6;
    }
    static #m(a11, a12) {
        try {
            v1.g = a12;
        } catch(e13) {
        }
        return v2;
    }
}
new C7(v1);
new C7(v6);
new C7(v1);
new Uint8ClampedArray(6);
const v22 = new Float64Array(555);
new Float64Array(3);
v2 % v22;
new Float64Array(v6, 3, 555);
typeof v22 === "function";
class C34 {
    set e(a36) {
        Math.fround();
        Math.ceil();
    }
    m(a41) {
    }
    e;
}
const v42 = new C34();
const v43 = new C34();
new C34();
let v45 = ["number","ignoreCase",v42];
const v46 = [v43,"number","R"];
Reflect.construct(Uint8ClampedArray, [v6], C34);
try { v46.toString(); } catch (e) {}
const t45 = "ignoreCase";
t45[1] = v45;
[v46,C34,C34,v45];
const v55 = ("NN")["9"];
C34[0] >>= v55;
let v56;
try { v56 = v55(v43, v42, "string"); } catch (e) {}
v45 = v56;
let v57 = 0;
while (v57 < 7) {
    v57++;
}
