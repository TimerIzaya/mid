const v1 = new WeakSet();
class C3 {
    static #toString(a5, a6) {
        const v10 = a6.f;
        v10 instanceof v10;
        return v1;
    }
    static [true] = WeakSet;
    #h;
    [true] = v1;
    #e = v1;
    3 = WeakSet;
}
const v12 = new C3();
const v13 = new C3();
const v14 = new C3();
const v15 = [v1];
const v16 = [v15,v1,v14,v15];
[v13];
class C21 {
    static [v14];
    constructor(a23, a24, a25) {
        !-8;
        Math.pow(!-8, true);
    }
    get h() {
        const v34 = Reflect.construct(WeakSet, [C3], C3);
        try {
            Reflect.valueOf = v34;
        } catch(e35) {
        }
        const o39 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o39);
        return C3;
    }
}
const v41 = new C21(v13, C21, v13);
const v42 = new C21(v13, C3, C21);
new C21(v12, v42, C21);
function f44(a45, a46, a47, a48) {
    'use strict';
    new WeakSet(v41);
    return a46;
}
f44(v16, -62078, v1, v16);
[201.0137099887802,-776868.2797916506,9.49939256124015,-1.0,-117580.18077069533];
[-1.7976931348623157e+308,-2.0774392500071978e+307];
[-1000000.0,-1000000000.0,6.257635408943404,-3.0,-1.0];
const v55 = new BigInt64Array();
try { v55.fill(v55, v13, v55); } catch (e) {}
