const v0 = [-0.8910702351101989,-2.2250738585072014e-308,1.4099344077796062e+308,83997.24302604795,210936.17053492554,-0.0,-1000000000.0,NaN];
const v1 = [-2.220446049250313e-16,553.8860580494957,1.7976931348623157e+308,0.11972365523131268,1000000.0,-4.0,-2.220446049250313e-16,-549.1751428471749,4.0,1000000000000.0];
const v2 = [1000000.0,-Infinity,-2.220446049250313e-16,0.0,1.0,0.6164147898955049,2.220446049250313e-16];
function f3(a4, a5) {
    const o11 = {
        "g": a4,
        set c(a7) {
            [-1.6034380545893383e+308,-1.6252738765936686e+308,9.57551379270878,-980439.676432628,1000000000000.0,5.860391144976543,-8.400232821637481e+307];
            [1.7976931348623157e+308,1000000000000.0,-3.0,2.2250738585072014e-308];
            super[[1000000000.0,-2.7435090127564754,-5.0,-2.0,NaN,1.7976931348623157e+308,5.0,1.329949827508276e+308,3.2895848248776037e+307,58.88228962735684]] = this;
        },
        "a": a5,
        ...v2,
        __proto__: v2,
        "h": v1,
    };
    return o11;
}
const v12 = f3(v1, v1);
const v13 = v2[v2];
const v14 = v2 / v13;
%VerifyType(v13);
v13[-1] = v12;
v13[v0] /= v14;
const v15 = f3(v1, v1);
const v16 = f3(v2, v0);
function F17(a19, a20, a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = f3;
    } catch(e23) {
    }
    try {
        this.c = v15;
    } catch(e24) {
    }
}
const v25 = new F17(v12, v15, v16, v16);
const v26 = new F17(v16, v12, v12, v2);
new F17(v12, v16, v25, v26);
function f28() {
    function f32(a33, a34, a35) {
        try {
            v12.fuck(a34, [v26,v2,v0,F17,"constructor"]);
        } catch(e38) {
        }
        return v16;
    }
    f32(v0, v16, v26);
    0 < 9;
    const v45 = new Int16Array(16);
    v45[10] = -9007199254740992;
    const o82 = {
        ["constructor"]: "constructor",
        2: 4.0,
        ..."constructor",
        "f": "rN",
        __proto__: "rN",
        "g": 4.0,
        "h": "rN",
        m(a48, a49) {
            const v52 = new BigUint64Array(1000);
            const o53 = {
                ...v52,
            };
            a48[this] = "constructor";
            Array();
            class C59 {
                static #a;
                static asUintN(a61, a62) {
                    super.d;
                    try { v1(); } catch (e) {}
                    return a61;
                }
                [1];
                static [1] = 255;
                [255];
                f = -65536;
            }
            const v65 = new C59();
            const v66 = new C59();
            let v68 = -65536n;
            let v70;
            try { v70 = v65.m(1n, 10000n, 10000n, 1); } catch (e) {}
            function f71(a72, a73, a74) {
                let v75;
                try { v75 = v70(a73); } catch (e) {}
                v75 = a74;
                v68 >>= a74;
                v65[10] = 1n;
                v66.f;
                return v68;
            }
            const v79 = ("gYPHN").normalize("NFKD");
            try {
                ("constructor").localeCompare(v79);
            } catch(e81) {
            }
            return v79;
        },
    };
    return o82;
}
const v83 = f28();
const v84 = f28();
const v85 = f28();
class C86 {
    #h = v83;
    static #e;
    constructor(a88, a89) {
        function f90(a91, a92) {
            this[-2] &= v14;
            try { a92.shift(); } catch (e) {}
            return v26;
        }
        f90(v16, v2);
        for (let i96 = 0; i96 < -9; i96++) {
            Object.defineProperty(v85, f28, { set: f28 });
            v84[i96] **= a88;
        }
    }
}
new C86(v84, v83);
const v103 = new C86(v85, v83);
new C86(C86, v85, C86, f28, v103);
try {
const t0 = 0.44967380041772886;
t0();
} catch (e) {}
const v108 = /((?<=a))/gudm;
const v109 = /gk4b*/vmsy;
let v111;
try {
const t0 = -1.3832922122240728e+307;
v111 = t0(2);
} catch (e) {}
for (let v112 = 0; v112 < 5; v112++) {
    try { v111(v108, v112, v109); } catch (e) {}
}
