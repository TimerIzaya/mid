const v0 = /a{F(B(x)(x)(x)\1*)/im;
const v1 = /\P{gc=Decimal_Number}Sya|bc9a\b!?/gdimy;
function f2() {
    try { v1(v1); } catch (e) {}
    const v5 = [Set];
    class C6 extends Set {
        constructor(a8, a9, a10) {
            super(v5);
        }
    }
    new C6(v5, v5, C6);
    return v5;
}
v1[Symbol.toPrimitive] = f2;
const v14 = /[zW]/y;
class C15 {
    static p(a17) {
        new Array(256);
        return v14;
    }
    static #p(a22, a23) {
        let v24 = 0;
        while (v24 < 10) {
            let v27;
            try { v27 = this.p(this, v0, v24, a23, v14); } catch (e) {}
            %VerifyType(v27);
            try { new v27(v27, this, this, this, v0); } catch (e) {}
            v24++;
        }
        return v24;
    }
}
const v30 = new C15();
const v31 = new C15();
v31.toString = f2;
new C15();
const v33 = [0.7037297004954296,1000000000000.0,-18746.196033883258,0.5577324876507355,78938.40523788403,-682.5519236310527,-1.7976931348623157e+308,1.5472457841994558e+308];
function f34(a35, a36) {
    new Uint16Array([34352,4,-9223372036854775808,1092764849,-2147483647,-1162070362,-4294967297,8,-591755449]);
    return a36;
}
v33[Symbol.toPrimitive] = f34;
const v42 = [1.5748756865199244e+308,-2.004680180895071,1e-15,0.40361184484204315,-1.0,0.1090011421683732,-3.0,537320.6942892098,0.7650285980393505];
function f43() {
    return Symbol;
}
function f44(a45) {
    v42.length;
}
Object.defineProperty(v42, "toString", { writable: true, configurable: true, enumerable: true, get: f43, set: f44 });
const v48 = [[4.444979571162534,3.846189016798034e+306],v31];
const v49 = [v1,v31];
const v50 = [v49];
class C51 {
    #p(a53, a54, a55, a56) {
        const v57 = a54.sticky;
        C15.p(v0, v57, ...v49, v57, v57, a54);
        super[v0] = v57;
        try {
            v33.#p(v1, a56, this);
        } catch(e61) {
        }
        return v1;
    }
    c = v30;
    static [v33];
    [v42] = v50;
}
new C15();
new C51();
new C51();
try { v48.at(v50); } catch (e) {}
try {
    v42.c = v14;
} catch(e68) {
}
const v69 = new Float32Array();
const v71 = new Uint8Array(v69, Uint8Array, Uint8Array);
v69[-1e-15] = Uint8ClampedArray;
class C74 extends C15 {
    constructor(a76, a77, a78) {
        super(a78);
    }
}
new C74(1, v71, Float32Array);
