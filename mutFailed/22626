class C3 {
    static {
        let v4 = this;
        v4 %= C3[3214];
    }
    static #o(a7, a8) {
        const t6 = "split";
        t6[973] <<= a8;
        return a8;
    }
    g;
    constructor(a10, a11, a12, a13) {
        const t12 = this.constructor;
        t12();
        a11 >>> a11;
        -0.0 >>> -0.0;
    }
    #a;
    ["split"];
    [-2];
    5 = "split";
    e = -649.7887588643691;
    static 429017092 = -649.7887588643691;
}
new C3();
const v20 = new C3();
const v21 = new C3();
const v23 = new BigUint64Array();
const t28 = [v23];
t28[65536] %= 256;
function F26(a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v20;
    } catch(e30) {
    }
}
const v31 = new F26(v21, C3);
const v32 = new F26(-649.7887588643691, v21);
new F26(v31, v32);
class C35 {
    constructor(a37) {
        this.constructor;
        try { new C35(a37, this); } catch (e) {}
        ("buffer")["search"](..."buffer", ..."search", ..."search", a37, ..."search");
    }
}
const v42 = new C35(C35);
new C35(v32);
class C44 {
    static #n(a46) {
        let v47;
        try { v47 = a46(F26, v20, this); } catch (e) {}
        v42[Symbol.search] = a46;
        function f50() {
        }
        const o51 = {
        };
        Object.defineProperty(o51, "set", { writable: true, configurable: true, enumerable: true, value: f50 });
        try { a46(v47, -837.4286212283166); } catch (e) {}
        for (let v53 = 0; v53 < 5; v53++) {
            new Uint8Array(268435440);
            Function();
        }
    }
}
const v59 = new C44();
const v60 = new C44();
const v62 = new Float32Array();
try { v23.apply(v60, v62); } catch (e) {}
typeof Float32Array;
const v66 = new C44();
let v67 = Int16Array;
const v68 = new v67();
new Uint8Array(2265);
const v73 = new v67(2872);
try {
    v73.length = 4;
} catch(e75) {
}
v60[3109] = v59;
try { v59(v66, v68, 2265, 2265); } catch (e) {}
v67 = v67;
Math.asinh();
Math.sin(3.862600614459211e+307);
for (let i82 = 0, i83 = 2872; i82 < 2872;) {
}
