let v0 = 2147483649;
function f4(a5) {
    a5 >> a5;
    const o19 = {
        [12298n](a8) {
            const v9 = delete this?.e;
            const v13 = ["function",/[-123]N/gdis,null];
            const o14 = {
                "arguments": v13,
                "type": "function",
            };
            v9 instanceof v9;
            v9[this] = 2025423814n;
            return this;
        },
        __proto__: 2025423814n,
        ...a5,
        "a": 12298n,
        "b": 2025423814n,
        "f": 2025423814n,
        ...a5,
    };
    return o19;
}
let v20;
try { v20 = f4(12298n); } catch (e) {}
const v21 = f4(-22903n);
v21[12298] = v21;
const v22 = f4(12298n);
v22[12298];
const v24 = [];
function f25() {
    const v26 = -v24;
    v26 << v26;
    const v28 = v26 && v24;
    -v28;
    return v28;
}
f25.caller = f25;
const v30 = f25();
new Uint8Array(2, 2, 2);
Symbol.for(Symbol.toPrimitive.description);
function f39(a40, a41, a42, a43) {
    a41 * a41;
    const o48 = {
        "b": a40,
        "c": a43,
        n(a46, a47) {
        },
    };
}
f39.prototype = f39;
-2.2250738585072014e-308 == -2.2250738585072014e-308;
new Uint16Array(["4294967296"]);
new BigUint64Array();
const v59 = [1613217357,204598905,15977,1122227661,64,-2,-12,536870888];
const v60 = [12,-256,-4096,2,7,8,21956,46111,11,10];
let v61;
try { v61 = v60.reduce(-22903n); } catch (e) {}
const v62 = [-1073741824,1665564361,16526,1805211777,10,-9007199254740990,4,-17063,-1];
const v63 = [-2.2250738585072014e-308,0.8014728140665155,1.4073101706157717e+308,1.4751052216559766e+308,2.0,-692.9604671107461,-2.220446049250313e-16,2.0];
try { v63.copyWithin(v30, v30); } catch (e) {}
const v65 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
try { v65.with(v65, v65); } catch (e) {}
const v67 = [-1.015259194643325e+308,-Infinity,-9.825391401141273,-2.2250738585072014e-308,5.0,-2.2250738585072014e-308];
class C68 {
    constructor(a70, a71, a72, a73) {
        a70[7] = a70;
        a71--;
        const v75 = this?.constructor;
        try { new v75(v65, a72, a72, v59); } catch (e) {}
        a71 >>> a71;
        -0.0 >>> -0.0;
    }
    /*
    constructor(a83, a84, a85, a86) {
        const o92 = {
            "maxByteLength": 2240,
        };
        const v94 = [-268435456,-9007199254740990,11,-25356,-536870912,4294967296,1520296454];
        function f95(a96, a97) {
            const o98 = {
                __proto__: v94,
            };
            return o98;
        }
        const v99 = new ArrayBuffer(2240, a84);
        new Uint8ClampedArray(v99);
        this[268435456];
        v63 && this;
        try {
            v63.length = v67;
        } catch(e104) {
        }
    }
    */
    static 268435439 = v62;
    #c = -2.2250738585072014e-308;
    static 832209355 = 2.220446049250313e-16;
}
C68[832209355] = C68;
function f105(a106) {
    new Float64Array();
    return -2.2250738585072014e-308;
}
C68.valueOf = f105;
const v109 = new C68(v59, 659.0540372978887, v59, v59);
const v110 = new C68(v109, 2.220446049250313e-16, v63, v67);
const v111 = v110?.constructor;
try { new v111(v63, 2.220446049250313e-16, 2.220446049250313e-16, v110); } catch (e) {}
new C68(v110, v110, 659.0540372978887, v59);
try {
    v60.length = C68;
} catch(e114) {
}
const v115 = new C68(v63, 2.220446049250313e-16, v62, v67);
v115.length = v115;
function f116() {
    return f116;
}
f116.arguments = f116;
function f117() {
    return f117;
}
function f118() {
    class C119 {
    }
    return C119.name;
}
f117.toString = f118;
function F121() {
    if (!new.target) { throw 'must be called with new'; }
    const v123 = this?.__lookupGetter__;
    try { new v123(this); } catch (e) {}
}
new F121();
const v126 = new F121();
v126.b = v126;
const v127 = new F121();
function f130() {
}
try { new f130(); } catch (e) {}
const v132 = [16,1073741824];
const v133 = [f116];
v133[0] = v133;
[v132,v126];
f116();
for (let v136 = 0; v136 < 5; v136++) {
    f130();
}
try { v127.n(); } catch (e) {}
for (let v139 = 0; v139 < 5; v139++) {
}
for (let v140 = 0; v140 < 625; v140++) {
    f39(Uint8Array, 2);
}
%OptimizeFunctionOnNextCall(f25);
const v142 = f25();
const v143 = f4(-22903n);
const v145 = [601759695];
const v146 = [1073741824,1073741823,1376142744,1073741825];
const v148 = v146.forEach(12298n);
try { v146["4294967296"](..."4294967296", 2.220446049250313e-16, ...v145, ...v146, ...522675525n); } catch (e) {}
const v150 = new WeakSet();
v67[6] = F121;
const v151 = [-9223372036854775807,61521,-15,44412,0,-1073741824];
[129,8878,-492041404,1722886723,6,1547818505];
[-38857,-4294967296,1129649356,8,-65535,-273,-2,536870887];
v61 = f39;
function f154(a155, a156) {
    const o173 = {
        1073741823: 2025423814n,
        1: a155,
        get h() {
            try {
                this.toString = f4;
            } catch(e158) {
            }
            return 12298n;
        },
        "b": a156,
        [v60]: v148,
        valueOf() {
            return v148;
        },
        toString(a161, a162, a163) {
            let v164;
            try { v164 = this.toString(a162, a155, a161); } catch (e) {}
            function f166(a167, a168, a169) {
                return v24 == v151 ? v24 : v151;
            }
            f166(255n, v164);
            v142[v62] = v20;
            return a155;
        },
        "f": 12298n,
        "e": -22903n,
        "g": 12298n,
    };
    return o173;
}
f154(v22, v143);
f154(v143, v22);
const v176 = f154(v143, v143);
function F177(a179, a180, a181, a182) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v21;
    } catch(e183) {
    }
}
const v184 = new F177(-22903n, v150, v150, v150);
new F177(2025423814n, v21, v21, v184);
new F177(-22903n, v21, v22, v176);
const v189 = new Int32Array(2);
v189.toSorted();
const v192 = v0--;
function f194(a195, a196, a197, a198) {
    function f200() {
        for (let v201 = 0; v201 < 5; v201++) {
            arguments | v201;
        }
        return typeof 522675525n === "undefined";
    }
    f200();
    return v192;
}
for (let v207 = 0; v207 < 10; v207++) {
    f194(v207, v207, v0, v207);
}
new Float32Array(2);
new Int8Array(506);
const v226 = new Int8Array(1159);
f117();
const v230 = new Date();
v230.setTime(-26321);
v226[1];
const v233 = [-1235077344,-4096,50383815,-8476,-9007199254740991];
class C235 extends Set {
}
new C235(v233);
new BigUint64Array(1307);
Math.log2(0);
const v241 = [601759695];
const v242 = [1073741824,1073741823,1376142744,1073741825];
function f243(a244, a245, a246, a247) {
    try { v242["find"](..."find", ...a247, ...v241); } catch (e) {}
    return -802104426;
}
