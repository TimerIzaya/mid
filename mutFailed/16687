let v1 = "c";
class C3 {
    p(a5) {
        const v6 = super.a;
        super.d ^= a5;
        C3 || (v1 **= "symbol");
        this[0] = v6;
        function f11() {
            return a5;
        }
        return v6;
    }
    static d = v1;
    static #p(a13, a14) {
        let v15;
        try { v15 = a14.concat(a13, this, "symbol", "n"); } catch (e) {}
        v15?.b;
        const v18 = new String(a14);
        a14 in v18;
        return "n";
    }
}
C3.e = C3;
const v20 = new C3();
let v21;
try { v21 = v20.isPrototypeOf(v1); } catch (e) {}
const v22 = new v20();
const v23 = v22?.constructor;
let v24;
try { v24 = new v23(); } catch (e) {}
let v25 = new C3();
const v26 = v25?.constructor;
try { new v26(); } catch (e) {}
const v29 = new Map();
v29.size;
new Uint8Array(129);
for (let i36 = 0; i36 < 1; i36++) {
    Math.asinh(4294967295);
    v25--;
    !4294967295;
}
new Uint16Array(1024);
new v24(1042);
const v52 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
try { v52.map(v20); } catch (e) {}
v21.fill();
