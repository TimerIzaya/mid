class C3 {
    o(a5, a6) {
        const v7 = /(J5a{0,1}?)/y;
        class C8 {
            static {
                for (let v10 = 0; v10 < 25; v10++) {
                    const v11 = [601759695];
                    const v12 = [1073741824,1073741823,1376142744,1073741825];
                    function f13(a14, a15, a16, a17) {
                        ~a15;
                        try { a14(); } catch (e) {}
                        const v20 = a16 << a16;
                        v20 % v20;
                        function f22() {
                            return a14;
                        }
                        const v24 = new Int8Array();
                        BigUint64Array.length;
                        const v28 = BigUint64Array * 536870887;
                        let v29 = v28 - v28;
                        v29++;
                        const v31 = v28 ** v28;
                        try { Number(v7); } catch (e) {}
                        Number.isNaN(v31);
                        const v36 = v24.buffer.__defineGetter__;
                        try { v36(); } catch (e) {}
                        %OptimizeFunctionOnNextCall(f22);
                        let v39;
                        try { v39 = v12["find"](..."find", a17, ...v11); } catch (e) {}
                        return v39;
                    }
                    for (let v40 = 0; v40 < 5; v40++) {
                        f13(this, v40);
                    }
                }
            }
        }
        let v42;
        try { v42 = a5(this, 1086791586, "f"); } catch (e) {}
        const t39 = "f";
        t39[5] = this;
        try {
            a5.__proto__ = "E";
        } catch(e43) {
        }
        return v42;
    }
    c;
    e = 1086791586;
}
let v47;
try { v47 = C3(); } catch (e) {}
const v48 = new C3();
const v49 = new C3();
function f50(a51) {
    const o52 = {
    };
    return o52.propertyIsEnumerable;
}
v49.constructor = f50;
const v54 = v49?.constructor;
v54.c = v47;
try { new v54(); } catch (e) {}
const v56 = new C3();
function f57(a58, a59) {
    a58[Symbol.toPrimitive] = f57;
    a58.c = a58;
    const o69 = {
        [a58]: a59,
        __proto__: v56,
        "g": C3,
        ...a58,
        set a(a63) {
            a63 = this;
            try { a63(v48); } catch (e) {}
        },
        0: a58,
        get a() {
            for (let v66 = 0; v66 < 32; v66++) {
                v48["p" + v66] = v66;
            }
            return this;
        },
    };
    return o69;
}
f57(v48, v49);
const v71 = f57(C3, v49);
const v72 = f57(v48, v48);
function f73() {
    return 1086791586;
}
try { f73(); } catch (e) {}
-5;
let v78 = 0;
v78--;
let v80 = 0n;
v80++;
const v82 = /\b[gW\x60]/vi;
class C83 {
    #a;
    constructor(a85, a86, a87) {
        a86 ^ a86;
        try {
            a86.#a;
        } catch(e90) {
            e90.message = e90;
        }
    }
}
C83.e = v71;
C83.e = C83;
const v91 = new C83(v82, v80);
const v92 = v91?.constructor;
try { new v92(v72, "E", C83); } catch (e) {}
