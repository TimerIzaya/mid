-(-268435456n);
function f7(a8, a9, a10, a11) {
    a10 != a10;
    const o29 = {
        __proto__: a9,
        "h": 3.0,
        65537: -268435456n,
        65538: 78572.74616156076,
        "g": 78572.74616156076,
        2802: 9223372036854775807n,
        ...a9,
        m(a14, a15, a16) {
            for (let v19 = 0; v19 < 32; v19++) {
                a10["p" + v19] = v19;
            }
            const v23 = 10 || 10;
            const v24 = a15++;
            Math.clz32(a14);
            Math.acosh(v24);
            -1.4500750289336483e+308 << v23;
            !v23;
            return 10n;
        },
    };
    const v30 = o29?.__defineGetter__;
    try { new v30(-268435456n, -268435456n); } catch (e) {}
    return o29;
}
const v32 = f7(78572.74616156076, 10n, -2.0, -268435456n);
const v33 = f7(-2.0, f7, -2.0, 9223372036854775807n);
const v34 = f7(-2.0, -268435456n, 78572.74616156076, 10n);
function f36(a37, a38, a39) {
    a37[65537];
    const v41 = a38[65537];
    a39 + a39;
    const o54 = {
        "b": 9223372036854775807n,
        "a": f36,
        get f() {
            try {
                this.toString = a38;
            } catch(e44) {
            }
            const o52 = {
                "execution": "async",
                "type": "minor",
                n(a49, a50) {
                    try {
                        this.valueOf = v41;
                    } catch(e51) {
                    }
                    return v33;
                },
            };
            gc(o52);
            return o52;
        },
    };
    return o54;
}
const v55 = f36(v33, v32, 9223372036854775807n);
f36(v33, v33, 10n);
v55.f;
f36(v32, v34, 9223372036854775807n);
class C59 {
}
try { new v32(); } catch (e) {}
new C59();
function f62(a63, a64, a65, a66) {
    const v67 = a64?.bind;
    try { new v67(a63); } catch (e) {}
    const v71 = new Int16Array(1269);
    try { v71.filter(v71); } catch (e) {}
    for (const v73 in v71) {
    }
    const o80 = {
        valueOf(a75, a76, a77, a78) {
            const o79 = {
                [a64]: v32,
            };
            return f7;
        },
    };
    const v81 = o80?.valueOf;
    try { new v81(10n, v81, C59, C59); } catch (e) {}
    return o80;
}
Math.imul(18157, 18157 && 18157);
f62--;
const v88 = f62(C59, f62, C59, C59);
const v89 = f62();
f62(v89, v89, v88, v88);
