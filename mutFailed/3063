function f0() {
}
let v4;
try { v4 = (-1024)["m"](-1024); } catch (e) {}
try {
    const t5 = "m";
    t5.a = 268435441;
} catch(e5) {
}
1000 >>> 1000;
const v8 = 1000 / 1000;
const v10 = new String("m");
const v11 = v8 in v10;
String[v11] = v11;
v4[String] = v10;
const v12 = [-857.5458427951943,0.2861051618789142,6.620214832594993,-787454.5971251727,-676482.4847229145,674.1077455004659,0.0,Infinity,-2.220446049250313e-16,-Infinity];
switch (f0) {
    case f0:
        for (let v13 = 0; v13 < 32; v13++) {
            const t19 = "m";
            t19["p" + v13] = v13;
        }
        break;
}
let v16;
try { v16 = v12.splice(1000, v12); } catch (e) {}
v16.length = v16;
[-8.744370150635897];
[0.09281509959358236,4.0,Infinity,0.6220867156641522,-251.10456897077916,-585255.12439105];
!(1229335665 >> 1229335665);
6 - 6;
8 + 8;
const v32 = Float64Array?.constructor;
try { new v32(127); } catch (e) {}
try {
} catch(e34) {
} finally {
}
