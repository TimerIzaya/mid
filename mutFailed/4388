const v3 = [268435456n,127n,127n];
let v4;
try { v4 = (127n).flat(); } catch (e) {}
[[v3,-1883n],268435456n,268435456n,-1883n,268435456n];
[-518.4450524227025,-168763.76144183264,0.9484799837790798,-2.220446049250313e-16,NaN,-1000000000000.0,-362161.73529404076,-1.0,-261536.25978807814,-1000000000.0];
const v8 = [1.2332024728456088e+308,-1e-15,964.4971257373493,0.2671717312370414,-1.009400840423146e+308,0.9445315642267745,-1000000000000.0,-5.0,1000000000000.0,-2.220446049250313e-16];
v8[5] = v8;
const v9 = [-Infinity];
function F10(a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    const v14 = this?.__lookupGetter__;
    try { new v14(F10); } catch (e) {}
    a13[8];
    try {
        this.g = v8;
    } catch(e17) {
    }
    try {
        this.f = v3;
    } catch(e18) {
    }
}
new F10(268435456n, 127n);
new F10(v9, 127n);
new F10(v9, -1883n);
const v22 = /EyL9/uim;
const v23 = [-1300791131,33477,0,5,-48254,14,4294967295,545422795];
function F24() {
    if (!new.target) { throw 'must be called with new'; }
    ([gc,v22])[1];
    const v30 = v23.push;
    v30.name = v30;
    const v31 = Reflect.apply(v30, v22, v4);
    v31 | v31;
}
F24.name;
new F24();
