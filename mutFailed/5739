function F0() {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "g", { writable: true, configurable: true, enumerable: true, value: F0 });
    Date[Symbol.toPrimitive] = Date;
    const v5 = new Date();
    v5.valueOf = Symbol;
    try { v5.setHours(Date, this, v5, F0); } catch (e) {}
    function f7(a8, a9, a10, a11) {
        function f12(a13) {
            Object.defineProperty(Date, "c", { enumerable: true, get: Symbol });
            const v14 = [-1.7976931348623157e+308,-0.0,-1000000000000.0,18.192610755442843,-7.676824412389783,1000000000.0,-3.0];
            const o15 = {
                __proto__: v14,
            };
            return o15.unshift();
        }
        Object.defineProperty(a8, "constructor", { value: f12 });
        const v18 = new Int32Array();
        v18[492];
        v18[3];
        return a8;
    }
    f7();
    const v23 = f7(f7, f7, f7, f7)?.constructor;
    try { new v23(this); } catch (e) {}
    try {
        this.h = -65537;
    } catch(e26) {
    }
    try {
        this.c = -65537;
    } catch(e27) {
        new Float64Array(1000);
        class C33 {
            ["getPrototypeOf"] = -1.7976931348623157e+308;
        }
        class C34 extends C33 {
            ["getPrototypeOf"] = C33;
        }
        const v35 = new C34();
        const t40 = v35.constructor;
        new t40();
    }
    const v39 = /a$\P{Decimal_Number}/gvdims;
    const v40 = v39[v39];
    for (let i = 0; i < 5; i++) {
        const v41 = v39.source;
        try { v41.blink(); } catch (e) {}
        try { v40(true, v41, v41, v41); } catch (e) {}
        const v45 = true + true;
        v45 + v45;
        Math.log(v45);
    }
    try {
        this.g = -65537;
        for (let i = 0; i < 5; i++) {
            ["object"];
        }
        class C50 {
        }
        C50.length = C50;
        const v51 = new C50();
        const v52 = v51?.constructor;
        try { new v52(); } catch (e) {}
        for (const v55 of `match${v51}-20124`) {
        }
    } catch(e56) {
    }
}
function f57(a58, a59) {
    delete a59?.e;
    const o61 = {
    };
    o61.c = o61;
    return o61;
}
F0.valueOf = f57;
const v62 = new F0();
const v63 = new F0();
const v64 = new F0();
const v65 = [v62,v64,v63,v63,v64];
const v67 = [[F0,v62],v63];
const v68 = [v67,v63,v65,v67];
const v69 = [v68,v62,v65,v62,v68];
try { v69.map(F0); } catch (e) {}
([v64,v68,v63])[0];
-19568 | -19568;
Uint32Array.prototype;
const v80 = new Uint32Array(256);
new Int8Array(1024);
const v86 = new Uint8Array(0);
const v88 = new Uint16Array(Uint16Array);
function f90() {
    3.4890473589784586e+307 << 3.4890473589784586e+307;
    const v96 = ("-26733")?.italics;
    try { new v96(); } catch (e) {}
    v80[3] = "-26733";
    const v98 = [601759695];
    try { v98.sort(12); } catch (e) {}
    const v100 = [427812215,61195,-2147483647,4096,-2147483647,30905];
    function f101(a102, a103, a104, a105) {
        try { a104.find(a102, a104, a103, v100, a103); } catch (e) {}
        try { v100["find"](..."find", a105, ...v98, ...v100); } catch (e) {}
        return a102;
    }
    const o113 = {
        "e": Uint16Array,
        __proto__: 3.4890473589784586e+307,
        "g": 12,
        o(a110) {
            return v88;
        },
        set b(a112) {
        },
        ...v86,
        ...3.4890473589784586e+307,
    };
    return f90;
}
%PrepareFunctionForOptimization(f90);
f90();
f90();
%OptimizeFunctionOnNextCall(f90);
f90();
