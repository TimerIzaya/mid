function f3(a4, a5) {
    const o19 = {
        ...a5,
        [-9007199254740990n]: a4,
        "d": 2031914893n,
        "g": a5,
        "b": -9007199254740990n,
        ...2031914893n,
        "b": a4,
        __proto__: a4,
        "b": a5,
        get d() {
        },
        1: -65536n,
        "h": a5,
        "a": -65536n,
        "b": -9007199254740990n,
        m(a8, a9) {
            this.h % a8;
            const v12 = super.d;
            this.encodeURIComponent("1073741824");
            const v17 = [-1.5424212036356715e+308];
            v17[536870887n] = v17;
            a9 >>= v12?.[2];
            return a4;
        },
    };
    return o19;
}
const v20 = f3(-9007199254740990n, -9007199254740990n);
const v21 = f3(2031914893n, 2031914893n);
f3(-9007199254740990n, -65536n);
class C23 {
    #m(a25, a26, a27) {
        let v28 = 0;
        v28++;
        const v30 = [0.00952483356421907,-3.0,2.220446049250313e-16];
        function f31() {
            return v30;
        }
        function f32(a33) {
            const v34 = /2a\sc/uds;
            const o37 = {
                [v34](a36) {
                },
            };
            return f31;
        }
        class C38 {
            static [v30];
            static {
                for (let [i60, i61] = (() => {
                        const v45 = new Int16Array(2183);
                        const v49 = new Int16Array(8);
                        async function f50(a51, a52, a53) {
                            delete v49[-1000000000.0];
                            let [v55,v56,...v57] = v45;
                            v45[5];
                            await v56;
                            return Uint8Array;
                        }
                        return [0, 10];
                    })();
                    i60 < i61;
                    (() => {
                        function f65() {
                            return f65;
                        }
                        const v66 = [601759695];
                        const v67 = [1073741824,1073741823,1376142744,1073741825];
                        function f69(a70, a71, a72, a73) {
                            function f75() {
                                return a70;
                            }
                            f65();
                            const v78 = new Int8Array();
                            const v81 = new Int32Array(1024);
                            for (const v82 of v81) {
                            }
                            function f84(a85, a86) {
                                return i61;
                            }
                            f84(f84(v67, f31));
                            const v89 = v78.buffer;
                            v89.constructor = f31;
                            v89.slice(2147483648);
                            %OptimizeFunctionOnNextCall(f75);
                            let v93;
                            try { v93 = v67["find"](..."find", a73, ...v66, ...v67, ...522675525n); } catch (e) {}
                            v93 <= a72;
                            return arguments;
                        }
                        for (let v95 = 0; v95 < 10; v95++) {
                            f69();
                            let v98;
                            try { v98 = v67.p(undefined, v67, v67, v67, v67); } catch (e) {}
                            try {
                                v98.#p(undefined, v98, v98, undefined);
                            } catch(e100) {
                            }
                        }
                        i60++;
                    })()) {
                }
            }
            [a26];
            [2031914893n] = v21;
            [-9007199254740990n] = a26;
        }
        new C38();
        new C38();
        new C38();
        return v21;
    }
    static g = f3;
    constructor(a108, a109, a110, a111) {
        this.#m();
    }
    /*
    constructor() {
        super.f >>= this;
    }
    */
    static 5;
    static e = -65536n;
}
new C23();
new C23();
new C23();
class C118 {
}
new C118();
let v120 = 1073741824;
[C23,v120] = "boolean";
0 - 0;
class C126 {
}
const v128 = new Int8Array();
try {
    v20.d = -9007199254740990n;
} catch(e129) {
    for (let [v130,v131] of v128) {
    }
}
const v134 = new Int16Array(3);
v134.lastIndexOf();
