function f0() {
    function f4() {
        let v5 = 6;
        v5 % v5;
        v5--;
        return v5;
    }
    for (let v8 = 0; v8 < 5; v8++) {
        f4();
        %OptimizeFunctionOnNextCall(f4);
    }
    const o19 = {
        "c": -2.2250738585072014e-308,
        [-28467](a11) {
            this[268435439] = -28467;
            const t15 = "undefined";
            t15[2364] = this;
            Object.defineProperty(this, 38, { value: "undefined" });
            return this;
        },
        "e": "undefined",
        "f": -28467,
        "d": "undefined",
        "h": "undefined",
        toString(a13, a14, a15) {
            return f0;
        },
        n(a17, a18) {
            return -28467;
        },
        ..."undefined",
        "g": -2.2250738585072014e-308,
        ..."undefined",
    };
    return o19;
}
f0();
f0();
f0();
new Float32Array(1);
new Uint8ClampedArray(129);
new BigInt64Array(255);
class C45 {
    static 7;
    static [-1] = "string";
    #n(a47) {
        a47 = this;
        a47.e >>>= -35417;
        const o51 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o51);
        return this;
    }
}
new C45();
Math.tanh();
class C58 {
}
class C59 extends C58 {
}
Array();
const v62 = Array();
class C64 {
    static 9 = 9.187362692894364;
}
for (const v65 in C64) {
}
class C66 {
    #e;
    static {
        function f68() {
            return Array;
        }
        function f69(a70) {
        }
        Object.defineProperty(this, "toString", { enumerable: true, get: f68, set: f69 });
        function f74(a75, a76) {
            return a75;
        }
        const o86 = {
            o(a78) {
                const o80 = {
                };
                const v81 = gc(o80);
                function f82() {
                    return v81;
                }
                const v84 = [BigUint64Array,BigUint64Array];
                const o85 = {
                    "arguments": v84,
                };
                return v81;
            },
        };
        const o88 = {
        };
        const v90 = new Proxy(Uint32Array, o88);
        o86["o"](o86, Uint32Array, "o", "o", v90);
        const v93 = super[this];
        try { v93.join(-4096, -4096, v93); } catch (e) {}
        const o95 = {
        };
        [/LD/vds,1000.0];
    }
    static f;
    m(a100, a101) {
        const o102 = {
        };
        const o105 = {
        };
        const v107 = new Proxy(Uint8Array, o105);
        v107.d = v107;
        new Proxy(this, o102);
        class C113 {
        }
        function f114() {
            let v115 = 1000000000000.0;
            v115--;
            class C118 {
            }
            new C118();
            const v120 = new C118();
            [C113,C118];
            [257828.6336153492,v120];
            [v120];
            class C124 extends C45 {
            }
            function f125(a126, a127) {
                return -4096;
            }
            Set.toString = f125;
            Set.constructor(Set);
            v62.constructor;
        }
        const v131 = "string" && -4096;
        +a101;
        Math.sqrt(v131);
        a100--;
        -509886178 << -509886178;
        return this;
    }
}
new C45();
new C66();
new C66();
const v145 = new WeakSet();
v145.constructor = Array;
class C147 extends v145.constructor {
}
const v150 = new Uint16Array(512);
class C152 {
}
function F153(a155, a156) {
    if (!new.target) { throw 'must be called with new'; }
}
new Float32Array(v150);
