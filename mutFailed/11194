const v0 = [];
class C1 {
    static n() {
        const o3 = {
        };
        try {
            o3.b = v0;
        } catch(e4) {
        }
        try {
            const o5 = {
            };
            o5.b = v0;
            o5.d = this;
        } catch(e6) {
        }
        try {
            const o7 = {
            };
            o7.b = v0;
            try {
                super[o7];
            } catch(e9) {
                this[268435456] = e9;
            } finally {
                try { v0.keys(); } catch (e) {}
            }
            o7.d = this;
            o7.a = v0;
        } catch(e11) {
        }
        try {
            const o12 = {
            };
            o12.b = v0;
            o12.d = this;
            o12.a = v0;
        } catch(e13) {
        }
        return v0;
    }
}
const v14 = new C1();
const v15 = new C1();
const v16 = v15?.__lookupSetter__;
let v17;
try { v17 = new v16(v14); } catch (e) {}
const v18 = new C1();
let v19 = v18?.constructor;
[v19,,v19] = v0;
v18[Symbol.hasInstance] = C1;
try { new v19(); } catch (e) {}
"pe" == "pe";
try { ("number").toLocaleLowerCase(); } catch (e) {}
function f31() {
    return v0;
}
f31.arguments;
[4294967296,-9007199254740991,2147483649,10000,-22467,64];
const v34 = [255,-4294967296,127];
[-1918681407,1073741823,-326050337,1024,-5,536870912,-128,0,-674459604,255];
try {
    v34.length = v16;
} catch(e36) {
}
const o37 = {
    "defineProperty": f31,
    "deleteProperty": f31,
    "getOwnPropertyDescriptor": f31,
    "getPrototypeOf": f31,
    "has": f31,
    "ownKeys": f31,
    "setPrototypeOf": f31,
};
new Proxy("number", o37);
for (let i42 = 0, i43 = 10; i42 < i43; i42++, i43--) {
    i43 === "m";
}
function F52(a54, a55) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = v14;
    try {
        this.b = a54;
        const o56 = {
        };
        const v58 = new Proxy(f31, o56);
        Object.defineProperty(v34, o56, { configurable: true, get: v58, set: v58 });
    } catch(e59) {
    }
    try {
        this.d = a55;
    } catch(e60) {
    }
}
new F52(v18, "number");
new F52(v14, "m");
const v63 = new F52(v18, "number");
const v64 = [-14339,735253629,4294967296,3,268435456,3,57019,268435439];
try { v64.sort(v63); } catch (e) {}
for (const v67 in [1959699296,-1,9007199254740991,9007199254740992,2147483649,-4096,-9223372036854775808]) {
}
for (const v68 in v64) {
    const t102 = "-2";
    t102.g = "-2";
    ("-2").normalize("NFKC");
    break;
    try { v17("number"); } catch (e) {}
}
