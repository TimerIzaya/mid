const v2 = new Array(4);
const v3 = [6.924988569847464,Infinity,6.81759817763063e+307,3.0];
const v4 = [-1000000000.0,-1.2705758122172472e+308,-1e-15,0.9057164282678065,-221715.90769659774,-0.2827090385446418];
const v5 = [-1000.0,Infinity,0.7562208751982421,1000000.0];
v5.g = v5;
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    let v10;
    try { v10 = a9.splice(Array, Array); } catch (e) {}
    try {
        this.e = v2;
    } catch(e11) {
    }
    try {
        this.a = a8;
    } catch(e12) {
    }
    try {
        this.h = v2;
    } catch(e13) {
    }
    return v10;
    function f14() {
        return f14;
    }
    const v16 = new Int16Array(Int16Array, Int16Array, Int16Array);
    const v18 = new Int32Array();
    v16[v18 / v16];
}
const v21 = new F6(Array, v3);
new F6(v21, v5);
const v23 = new F6(v4, v4);
const v24 = [-2147483648,-1,413788269,-9223372036854775807,127,-1024,11];
v24[3];
const v26 = [-44085,1073741824,9007199254740991,-1912831214];
const v27 = [-124661017,1264194390,11167,1807,255];
const v28 = [];
try {
    v28.some(v26);
} catch(e30) {
    e30.stack;
}
try { v27.toReversed(); } catch (e) {}
class C33 {
    get f() {
        class C36 extends this.constructor {
            [v27] = this;
            4294967296;
        }
        new C36();
        return v21;
    }
    constructor(a39, a40) {
        try { a40.pop(); } catch (e) {}
        let v42 = [3];
        class C43 {
        }
        C43.length;
        new ArrayBuffer(ArrayBuffer, ArrayBuffer);
        [1073741824,-4096,1073741824,-2,1414089733,-694435822,127];
        v42 <<= [-8];
        for (let v49 = 0; v49 < 32; v49++) {
            ("p")[0];
            const v52 = "p" + v49;
            new this();
            return Array;
            class C55 {
                static toString(a57, a58) {
                    const v60 = super[a58];
                    try {
                        const v61 = delete this[v60];
                        v61 && v61;
                        this[C55];
                    } catch(e64) {
                    }
                }
            }
            const v65 = new C55();
            function f66(a67, a68) {
                const v69 = v65.constructor;
                v69 + v69;
                return v69;
            }
            return f66;
            try { v52.strike(); } catch (e) {}
            v24[v52] = v49;
        }
    }
}
const v72 = new C33(v23, v27);
const v73 = v72?.constructor;
try { new v73(v5, v5); } catch (e) {}
new C33(v23, v5);
new C33(v23, v4);
class C77 {
}
const v79 = new WeakMap();
class C80 extends C77 {
    static 1 = v79;
    10000;
}
try { new C80(); } catch (e) {}
new C80();
"minor" == "minor";
const o87 = {
    "execution": "async",
    "type": "minor",
};
gc(o87);
gc();
