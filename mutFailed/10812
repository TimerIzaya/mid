new WeakMap();
const v4 = new Uint16Array(7);
const v7 = new Float32Array(12);
new Uint32Array(0);
const v12 = new Map();
-v4;
const v15 = [Map];
const v17 = Reflect.apply(v7.toSorted, v12, v15);
let v21 = 0;
do {
    try {
        v17.g = v12;
    } catch(e22) {
    }
    v21++;
} while (v21 < 2)
new Uint16Array(128);
new Int32Array(134);
new Uint8Array(145);
function F35(a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        ["function",[9007199254740992,-13,1,206834672,5792,16,856414023,8,2147483648]];
        new F35();
    } catch(e43) {
    }
}
new F35();
