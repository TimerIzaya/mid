function f0() {
}
class C2 extends Date {
}
Reflect.defineProperty(Reflect, undefined, [1073741824,1073741823,1376142744,1073741825]);
function f7() {
    return f0;
}
function f10() {
    return f7;
}
const o13 = {
    "type": "function",
};
const v14 = new Worker(f10, o13);
v14.postMessage;
new Float64Array(9);
new BigInt64Array(5);
new Float64Array(Float64Array);
new Date();
const o24 = {
};
new Uint8Array(10);
for (let v31 = 0; v31 < 5; v31++) {
    const o34 = {
        "maxByteLength": 185,
    };
    const v36 = new ArrayBuffer(185, o34);
    new BigInt64Array(v36);
    function f39() {
        const t30 = ("1073741824").constructor;
        return t30().replaceAll().toLowerCase();
    }
    function f45() {
        function f46(a47) {
            return a47;
        }
        class C48 extends f46 {
            b;
        }
        return f45;
    }
    const v49 = [];
    class C50 {
        g = C50;
        #e = v49;
    }
    const v51 = [f39];
    [[v51,v51,v51,Date],Float64Array,2147483648,f10];
    new C50();
    f39();
    const v60 = new Set();
    v60.values();
    v49.h = v60;
    function F62(a64, a65) {
        if (!new.target) { throw 'must be called with new'; }
    }
    new F62();
    %OptimizeFunctionOnNextCall(f39);
}
