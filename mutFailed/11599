function f0() {
}
const v1 = [0.0,917951.0073290537,0.07274470522231724,Infinity,0.5914391861815239,1.5732521724887612e+308,-1.4400979978660108e+307,-9.524771575988321,1000000000.0,Infinity];
[5.175162380398203e+305,-7.00517330225475,-0.0,-5.0,-714211.7623311304,-4.0];
const v3 = [-1000000000.0,-3.0,642609.22225468,-1e-15,-2.2250738585072014e-308,NaN,2.220446049250313e-16,-4.891209495300708];
function f5(a6, a7) {
    a7 >> a7;
    const v9 = 14 >>> a7;
    v9 / v9;
    return 14;
}
function f11() {
    function f12(a13) {
        return a13;
    }
    [f12];
    try {
    } catch(e15) {
    }
    return v1;
}
const v18 = new BigUint64Array(2, v1, 14);
const v20 = [-1024,536870889,65536,65536];
function f21() {
    return v18;
}
function f22(a23) {
    a23 instanceof a23;
}
Object.defineProperty(v20, "toJSON", { writable: true, enumerable: true, get: f21, set: f22 });
function f25(a26, a27) {
    return a26;
}
const v30 = [295968041,v20];
const o31 = {
    "arguments": v30,
    "type": "function",
};
new Worker(f25, o31);
const v35 = new Int16Array(4096);
new Uint8ClampedArray(4096);
Math[Symbol.toPrimitive] = f22;
function f43(a44) {
    return 14;
    try {
        v3.length = 9;
    } catch(e46) {
    }
    return v35;
}
Date.toString = f43;
const v47 = new Date(Date);
class C48 {
    static #e;
    constructor(a50, a51) {
        try {
            a51.#e = Date;
        } catch(e52) {
        }
    }
}
new C48(v47, v47);
function f54() {
    Math.cos(Math);
    class C56 {
        constructor(a58) {
        }
    }
    C56[0] = C56;
    new Int8Array(C56);
    return Math;
}
%PrepareFunctionForOptimization(f54);
const v61 = f54();
const v63 = new Uint32Array();
v61.g = v63;
function F64() {
    if (!new.target) { throw 'must be called with new'; }
    const v66 = this.constructor;
    let v68 = -16n;
    function f69() {
        v68 *= -1911645276n;
        return F64;
    }
    f69();
    new v66(f69, f69());
}
%OptimizeFunctionOnNextCall(f54);
f54();
