const v0 = [253235.46595404786,0.6338526031784792,0.26962920421494485,-1.7976931348623157e+308,-167217.47279760416,742850.4414394633];
const v1 = [0.13797104267911742,-302.9790788145459,-1e-15,0.19389541206622074,5.0,713.4168975865125,1000000.0,1.0,-2.0,NaN];
[711.2409520216586,-1000.0,-3.9324889786038604,-1.424006462233777e+308,-555.626079539263,0.0,1000000000000.0,-0.48608972737486056,-7.519943073354948,590212.1808834502];
class C3 {
    static get d() {
        function f5() {
            return v1;
        }
        new Int16Array(4096);
        new Int16Array(4096);
        const v14 = new Uint8ClampedArray(1000);
        return v14;
    }
    #h;
    static 255;
    7;
    #g;
    [C3] = v0;
}
new C3();
new C3();
new C3();
new Date();
new Int32Array(71);
new Uint8ClampedArray(10);
new Uint32Array(14);
let v29 = undefined;
const o30 = {
};
v29 = o30;
function F32(a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor = Date;
    const v37 = this.constructor;
    try { new v37(); } catch (e) {}
}
new F32();
class C40 extends F32 {
    65537 = v29;
}
new C40();
