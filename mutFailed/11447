class C3 {
    static h = -175343.5521201907;
    constructor(a5) {
        let v4 = this;
        const v6 = v4?.constructor;
        try { new v6(v4); } catch (e) {}
        v4 = a5;
        super.d;
        v4 ^= v4;
    }
    static #o(a10, a11) {
        super[a10] = "byteLength";
        (a11 ** "byteLength").length;
        return "g";
    }
    static 867821327;
}
C3.name = C3;
new C3("byteLength");
const v16 = new C3(-175343.5521201907);
v16.length = v16;
const v17 = new C3(-175343.5521201907);
v17.e = v17;
Float64Array.a = Float64Array;
const v20 = new Float64Array(16);
const v23 = new Uint8ClampedArray(8);
const v25 = -255;
const v27 = new Uint32Array(255);
const v28 = v27?.constructor;
try { new v28(16, v20, 255); } catch (e) {}
class C30 {
}
try { new C30(); } catch (e) {}
function F32(a34) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor.bind();
    try { new v23(); } catch (e) {}
}
v25.b = F32;
const v38 = new v20();
const v39 = v38?.constructor;
try { new v39(-175343.5521201907); } catch (e) {}
const v41 = new F32();
const v42 = v41?.constructor;
try { new v42(v41); } catch (e) {}
const v45 = new C30();
const v46 = v45?.constructor;
try { new v46(); } catch (e) {}
16 * 16;
const v53 = 536870912n << 536870912n;
-v53;
try { v45.getUint16(-16, undefined, 16, 6, v53); } catch (e) {}
