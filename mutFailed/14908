function f0() {
    ("65535").lastIndexOf(128, 65536);
    const v11 = [601759695];
    const v12 = [1073741824,1073741823,1376142744,1073741825];
    function f13(a14, a15, a16, a17) {
        function f19() {
            const o38 = {
                "c": -4294967297n,
                [arguments](a23, a24) {
                },
                "maxByteLength": v12,
                [-4294967297n](a26, a27) {
                },
                [9007199254740991]: 0,
                "type": "Vre",
                "f": "Vre",
                "c": v11,
                valueOf(a29, a30) {
                },
                "maxByteLength": -4294967295,
                "type": "Vre",
                valueOf(a32, a33) {
                },
                toString(a35, a36, a37) {
                },
            };
        }
        f19();
        %OptimizeFunctionOnNextCall(f19);
    }
    const o49 = {
        [256](a41) {
            let v42;
            try { v42 = a41.m(256, 2.2250738585072014e-308); } catch (e) {}
            Reflect.construct(v42, [2.2250738585072014e-308,Reflect], v42);
            return 2.2250738585072014e-308;
        },
        ...10,
        "c": 256,
        [10]: 10,
        valueOf(a47, a48) {
            return a48;
        },
        4294967295: 0,
        512: v12,
        "f": 10,
        "a": 256,
    };
    return o49;
}
const v50 = f0();
const v51 = f0();
const v52 = f0();
-6 / -6;
const v57 = new Uint8Array(2707, 2707, -6);
let v58;
try { v58 = v57.findLastIndex(v57, v57); } catch (e) {}
const o59 = {
    [v58]: Uint8Array,
};
o59.toString = f0;
function F60(a62) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = this;
    [Set];
    class C66 {
    }
    const v67 = new C66();
    const v68 = new C66();
    v68.toString = f0;
    const v69 = new C66();
    function f70(a71, a72) {
        const v73 = [];
        try { v73.with(); } catch (e) {}
        const o82 = {
            [v68](a76, a77, a78) {
                super[-9223372036854775807];
            },
            set b(a81) {
            },
            [a72]: v67,
        };
        return a71;
    }
    f70(Uint16Array, v69);
    try {
        this.c = v52;
    } catch(e85) {
    }
}
new F60(v52);
const v87 = new F60(v50);
v87.toString = f0;
new F60(v50);
class C89 extends F60 {
    valueOf(a91, a92) {
        let v90 = this;
        v90 ||= v50;
        v50[Symbol.isConcatSpreadable];
        try {
            a92.a = f0;
        } catch(e96) {
        }
        return F60;
    }
    static [v87] = v51;
    #f;
    [o59];
    4294967295;
}
new C89();
new C89();
new C89();
try {
const t0 = 1073741825n;
t0();
} catch (e) {}
Array();
function F104(a106, a107, a108, a109) {
    if (!new.target) { throw 'must be called with new'; }
    const v110 = this.constructor;
    try { new v110(a106); } catch (e) {}
    this.c = a106;
}
const v114 = [7,57468];
const v116 = new Map();
v114.__proto__ = v116;
v116[-10] >>= 1024;
Array(1024, -10);
