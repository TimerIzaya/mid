const v0 = [];
-1073741824 - -1073741824;
let v5 = "b";
const t3 = -788.7260290236088;
t3.E = Math;
const v8 = Math.round();
for (let v9 = 0; v9 < 10; v9++) {
    v9 / v9;
    async function f11(a12, a13, a14) {
        a14 >>> a14;
        Number.isNaN(await v8);
        const v20 = [0.8307152163010869,1.0,0.0];
        v0[2] = v20;
        v20.length = v9;
        %VerifyType(v20 instanceof -24894);
        return Number;
    }
    try { f11(-788.7260290236088, v8, -1000000000.0); } catch (e) {}
    const v23 = f11(Math, v5, v8);
    try { v23.hasOwnProperty(-788.7260290236088); } catch (e) {}
}
let v27 = Symbol;
const v28 = v27.toPrimitive;
Math.log10();
Array();
new Uint32Array(127);
new Uint8Array();
let v42 = -8;
let v43 = 48510;
class C45 {
    4259938026;
}
const v46 = new Math();
({"a":v43,"b":v27,"c":v42,...v5} = v46);
new Int16Array(2690);
new Uint16Array(16);
function F52(a54, a55, a56) {
    if (!new.target) { throw 'must be called with new'; }
    class C57 {
    }
    const v59 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
    function F61() {
        if (!new.target) { throw 'must be called with new'; }
    }
    function F63(a65) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v66 = new F63();
    class C67 extends F61 {
    }
    class C68 {
    }
    const v69 = new C45();
    function F70(a72, a73) {
        if (!new.target) { throw 'must be called with new'; }
        const v74 = [a73,a73,a73,a73,a73];
        class C75 {
            constructor(a77, a78, a79) {
                function f80(a81, a82, a83) {
                    v74.copyWithin();
                    let v86 = 0;
                    for (let i = 0; i < 25; i++) {
                        try {
                            const o87 = {
                            };
                            o87.c = C67;
                        } catch(e88) {
                        }
                        try {
                            const o89 = {
                            };
                            o89.h = v66;
                            o89.f = v69;
                        } catch(e90) {
                        }
                        v86++;
                    }
                    try {
                        f80(a78, a79, [-268435456]);
                    } catch(e94) {
                    }
                    a82 >> -268435456;
                    return -268435456;
                }
                f80();
            }
        }
        class C97 extends Math {
        }
        new C97();
    }
    new F70();
    const o105 = {
        "e": 16,
        ...v59,
        ..."Vre",
        "c": v28,
        "f": "-1073741824",
        84: "-1073741824",
        ..."Vre",
        valueOf(a103, a104) {
            return this;
        },
        ..."Vre",
        4: "Vre",
        "c": -268435456,
        5: 16,
        6: -268435456,
    };
}
const v108 = new String();
Object.defineProperty(v108, 7, { writable: true, configurable: true, enumerable: true, value: Int8Array });
const v109 = [-536870912,12,65535,268435440,59916,438058862,-15,1073741823,-9007199254740990];
v109.push(v109);
new v43(v109);
const v113 = new F52();
function F114(a116, a117) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        class C119 extends [this,this,this,this,this] {
        }
    } catch(e120) {
    }
}
const v121 = new F52(F52, F52, v113);
for (let v123 = 0; v123 < 5; v123++) {
    Object.defineProperty(C45 || undefined, v121, { value: v113 });
}
