function f0() {
    const o10 = {
        [-1e-15](a5, a6) {
            try {
                const v7 = [a6,a5,59.717634552626805,-1e-15,16];
                this.fuck(v7, v7, a5, a5);
            } catch(e9) {
            }
            return 59.717634552626805;
        },
        ...59.717634552626805,
        ...16,
        "c": -1e-15,
        "e": 59.717634552626805,
        ...-1e-15,
        __proto__: 16,
        "b": 59.717634552626805,
    };
    o10.c;
    return o10;
}
const v12 = f0();
const v13 = f0();
const v14 = f0();
class C15 extends f0 {
    p(a17, a18) {
        v12[v13] = a17;
        const o19 = {
            __proto__: a18,
            "h": v13,
            6: a18,
            [a17]: v13,
        };
        try {
            new f0();
        } catch(e21) {
        }
        return a17;
    }
    static #e = v13;
}
const v22 = new C15();
const v23 = new C15();
const v24 = new C15();
v24.c = v24;
class C25 extends f0 {
    #n(a27, a28) {
        v13.b ^= v12;
        const o33 = {
            "execution": "sync",
            "type": "minor",
        };
        return gc(o33);
    }
    static 1468173750;
    a = v22;
}
const v35 = new C25();
const v36 = new C25();
const v37 = new C25();
v37.a = v37;
function f38() {
    return C15;
}
function F39(a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    const v44 = this?.constructor;
    try { new v44(C15, C15, a43); } catch (e) {}
    a41.c = a41;
    const v46 = a42?.constructor;
    try { new v46(C15); } catch (e) {}
    try {
        this.e = a42;
    } catch(e48) {
    }
}
const v49 = new F39(v12, v36, v22);
const v50 = v49?.constructor;
try { new v50(v14, v22, C25); } catch (e) {}
const v52 = new F39(v36, v37, v35);
v52.h = v52;
const v53 = new F39(C15, v14, v23);
class C58 {
    static 7;
    static [-1] = "string";
    #n(a60) {
        a60 = this;
        a60.e >>>= -35417;
        const o64 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o64);
        return this;
    }
}
try { C58.apply(v24, v53); } catch (e) {}
new C58();
Array();
const v72 = Array();
try { v72.toReversed(); } catch (e) {}
class C75 {
    static 9 = 9.187362692894364;
}
for (const v76 in C75) {
}
class C77 {
    #e;
    static {
        function f79(a80, a81) {
            return a80;
        }
        const o88 = {
            o(a83) {
                try { this.o(-4096); } catch (e) {}
                const o86 = {
                };
                return gc(o86);
            },
        };
        const o90 = {
        };
        const v92 = new Proxy(Uint32Array, o90);
        v92.BYTES_PER_ELEMENT = v92;
        o88["o"](o88, Uint32Array, "o", "o", v92);
        const v95 = super[this];
        try { v95.join(-4096, -4096, v95); } catch (e) {}
        const o97 = {
        };
        [/LD/vds,1000.0];
    }
    m(a102, a103) {
        const o104 = {
        };
        const o107 = {
        };
        const v109 = new Proxy(Uint8Array, o107);
        v109.d = v109;
        new Proxy(this, o104);
        class C115 {
        }
        function f116() {
            class C118 {
            }
            new C118();
            const v120 = new C118();
            [C115,C118];
            [257828.6336153492,v120];
            class C123 extends C58 {
            }
            function f124(a125, a126) {
                return -4096;
            }
            Set.toString = f124;
            Set.constructor(Set);
            v72.constructor;
        }
        const v130 = "string" && -4096;
        +a103;
        Math.sqrt(v130);
        a102--;
    }
}
const v135 = new WeakSet();
try { v135.delete(9.187362692894364); } catch (e) {}
const v137 = v135.constructor;
v137.name = v137;
class C138 extends v137 {
}
C138.e = C138;
class C139 {
}
C139.prototype;
function F141(a143, a144) {
    if (!new.target) { throw 'must be called with new'; }
}
for (let v145 = 0; v145 < 32; v145++) {
}
