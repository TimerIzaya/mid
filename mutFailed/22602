new WeakMap();
const v4 = new Float32Array(65);
v4[47];
const v8 = new Float64Array(1747);
try { v8.set(v8); } catch (e) {}
Uint16Array.a = Uint16Array;
new Uint16Array(783);
const v13 = /a\w/gudsy;
const v14 = /ka{0}/guims;
const v15 = /ab|c/udmy;
v15.dotAll;
class C17 {
}
let v20 = -2.0;
v20 * v20;
const v22 = Math.acosh(783);
const v23 = v20--;
const v24 = 783 ** 58202;
v24 << v24;
const v26 = v23 << v22;
v26 >>> v26;
Math.acosh(v24);
const v29 = new C17();
function f30() {
    gc.caller = gc;
    gc();
    return v26;
}
v29.constructor = f30;
const v33 = v29.constructor;
v33.name = v33;
const v34 = v33.length;
v34 - v34;
const v36 = v33();
v36.d = v36;
let v37;
try { v37 = v36.test(v36); } catch (e) {}
const t37 = 1747;
const v38 = new t37();
function f39(a40, a41) {
    a40.g = a40;
    const v42 = a40.sticky;
    const v43 = v42 || v42;
    v43 && v43;
    const o50 = {
        set b(a46) {
            const v47 = [this,this];
            [v43];
            [65,v47,v42,v37];
        },
        ...v14,
        "d": v38,
        "c": a41,
        "g": a41,
        "f": a40,
        "a": v29,
        7: C17,
        "e": v14,
        "b": v13,
    };
    o50.d = o50;
    return o50;
}
try { f39(v20, v20); } catch (e) {}
%PrepareFunctionForOptimization(f39);
const v52 = f39(v15);
%OptimizeFunctionOnNextCall(f39);
f39(v52);
