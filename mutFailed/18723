class C3 {
    static #m(a5, a6) {
        268435439 & a6;
        try {
            super.split(268435439, a6);
        } catch(e9) {
        }
        return a5;
    }
    static 255 = 268435439;
    #b;
    static #e;
}
const v10 = new C3();
const v11 = new C3();
const v12 = new C3();
class C13 extends v10 {
    constructor(a15, a16, a17, a18) {
        super();
        let v19 = 0;
        while (v19 < 1) {
            try {
            const t0 = 268435439;
            t0("bigint", a16, a17, v19, a16);
            } catch (e) {}
            v19++;
        }
    }
}
const v24 = new C13(C13, v10, C13, C13);
const v25 = new C13(v24, C13, v11, C3);
new C13(v25, v25, "bigint", v12);
function f28(a29) {
    return a29;
}
class C31 {
}
const v32 = new C31();
[v32,2.2250738585072014e-308];
function F34(a36, a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    f28.groupToMap(f28);
}
new F34(2.2250738585072014e-308, F34, v10);
