new Uint8ClampedArray(3672);
BigInt64Array.prototype = BigInt64Array;
new BigInt64Array(820);
new Uint32Array(1024);
const t4 = 820;
const v12 = new t4(1);
v12[0];
103 | 103;
const v17 = new Uint32Array(103);
10 / 10;
const v21 = new Int8Array(10);
let v22 = 12;
v22--;
[v22,v22];
try { v21.every(v12); } catch (e) {}
const v27 = [v22,1024];
class C28 {
    constructor(a30, a31) {
        try { this.constructor(a30, Int8Array); } catch (e) {}
        new Uint16Array(a30);
    }
}
C28.e = C28;
const v34 = new C28(v27);
const v35 = v17?.isPrototypeOf;
try { new v35(v34); } catch (e) {}
