function f0() {
    const o12 = {
        [707896.0558360617](a5) {
            try {
                super.call(-2.2250738585072014e-308, 707896.0558360617);
            } catch(e7) {
            }
            try { this.toSpliced(-2.2250738585072014e-308, a5, this); } catch (e) {}
            let {"a":v9,"d":v10,"e":v11,} = a5;
            return v9;
        },
        "b": -2.2250738585072014e-308,
        "f": f0,
    };
    return o12;
}
const v13 = f0();
const v14 = f0();
const v15 = f0();
const v16 = v15?.toString;
let v17;
try { v17 = new v13(); } catch (e) {}
class C18 {
    n(a20) {
        try {
            (-184720234n).__proto__;
            new Int32Array(this);
            v13[Symbol.iterator];
        } catch(e29) {
        } finally {
            try {
                this.b = "from";
            } catch(e34) {
            }
            return v17;
            try { this["from"]("from", "from"); } catch (e) {}
        }
        return v15;
    }
}
let v36;
try { v36 = C18(); } catch (e) {}
const v37 = new C18();
new C18();
const v39 = new C18();
const v40 = v39?.constructor;
try { new f0(); } catch (e) {}
14 * 14;
class C48 extends ArrayBuffer {
    static #d = v36;
    static #h;
}
new C48();
const v50 = new C48();
const v51 = new C48();
const o52 = {
    "maxByteLength": 257,
};
const v54 = new ArrayBuffer(203, o52);
const v55 = new C18();
let v56;
try { v56 = v55.n(v14); } catch (e) {}
v17[v56] = v16;
[v40,v37];
[v13,v13,[v50,v51]];
v54.slice();
