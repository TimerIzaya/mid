const v0 = [NaN,-1000.0,-2.2250738585072014e-308];
const v1 = [-4.0,NaN,-1000000000000.0,-1.7280608645640168e+308,-Infinity,2.0,1.0,1000.0];
[1000000000000.0,1000000000000.0,2.220446049250313e-16];
let v4 = -9007199254740990n + -9007199254740990n;
v4--;
257n == 257n;
257n << -47672n;
class C10 {
    static o(a12, a13) {
        let v11 = this;
        v11 <<= v11;
        const v14 = v1 >> 257n;
        const o17 = {
            "maxByteLength": v14,
        };
        const v19 = new SharedArrayBuffer(160, o17);
        new DataView(v19);
        return -47672n;
    }
}
const v22 = new C10();
const v23 = v22?.__defineGetter__;
try { new v23(v0, C10); } catch (e) {}
const v25 = new C10();
const v26 = v25?.constructor;
let v27;
try { v27 = new v26(); } catch (e) {}
try { v27.propertyIsEnumerable(-9007199254740990n); } catch (e) {}
new C10();
let v31;
try { v31 = v25.strike(); } catch (e) {}
try { v31.trimLeft(); } catch (e) {}
let v34;
try { v34 = ("3SEJ").blink(); } catch (e) {}
const v37 = -5;
const v38 = v37 - v37;
function F39(a41) {
    if (!new.target) { throw 'must be called with new'; }
    let v42;
    try { v42 = a41.fontsize(a41); } catch (e) {}
    try { v42.codePointAt(this); } catch (e) {}
    const v44 = this.constructor;
    try { a41.toString(); } catch (e) {}
    const v46 = v44.arguments;
    v46[0] = v46;
    try { v44("toString"); } catch (e) {}
    const v48 = a41[5];
    v48[0] = v48;
    let v49;
    try { v49 = v48.trim(); } catch (e) {}
    try { v49.trimRight(); } catch (e) {}
    this.d = "message";
}
F39.arguments = F39;
new F39("toString");
const v52 = new F39("message");
new Uint16Array(5);
const v55 = new F39("message");
v55.e = v55;
7 - 7;
const v58 = 7 - v38;
v58 + v58;
const v61 = new Int8Array(7);
const v62 = v61?.constructor;
try { v62.from(v25); } catch (e) {}
v52.prototype = v62;
const v64 = new v62(7, v55, v55);
v64[4] = v64;
1 % 1;
new Uint8ClampedArray(1);
function f69(a70, a71) {
    a71 >>> a71;
    const o76 = {
        "c": Uint16Array,
        set g(a74) {
        },
        39: v34,
    };
    o76[39] = o76;
}
const v77 = v23.arguments;
f69("message", 5);
f69("3SEJ", 5);
let v82 = Math.atan(0.6146752851534484);
const v83 = v77 | v82;
v83 ^ v83;
const v85 = v82--;
v85 + v85;
