("h")[0];
BigInt64Array.prototype = BigInt64Array;
new BigInt64Array(3366);
new Float64Array(7);
const v15 = new Uint32Array(129);
0.6625004038177351 % 0.6625004038177351;
class C20 {
    static [v15] = -53146;
    #d;
    get e() {
        let v22;
        try { v22 = this.toString(); } catch (e) {}
        const v24 = Symbol.replace;
        v22[v24] = v24;
        return this;
    }
    static #e;
}
try { new C20(); } catch (e) {}
let v26;
try { v26 = C20.apply(-53146, 0.6625004038177351); } catch (e) {}
new v26();
new C20();
const v29 = new C20();
v29?.constructor;
try { new v15(); } catch (e) {}
const v32 = v29?.constructor;
let v33;
try { v33 = new v32(); } catch (e) {}
try { ("function").strike(); } catch (e) {}
let v37 = 10;
v37--;
for (; v37--;) {
    new Float64Array(3366, 1073741824, 7);
}
const t35 = "valueOf";
t35[1] = "valueOf";
!("valueOf" == 7);
let v45 = 10;
v45--;
const v48 = new BigUint64Array(v45);
const v50 = Float64Array.name;
v50[1] = v50;
[-310.36840588243206,v37,-310.36840588243206,v26];
[Uint32Array,v29,-1e-15,v33,v26];
const v53 = [v29,v37,129,0.6625004038177351];
try { v53.flatMap("Lvjz"); } catch (e) {}
-731955852 >> v29;
for (const v60 in v48) {
    let v61;
    try { v61 = v60.blink(); } catch (e) {}
    v61[9] = v61;
    new Float64Array(2147483647);
}
class C63 {
}
const v64 = C63?.constructor;
try { v64.bind(v64); } catch (e) {}
try { new v64("valueOf"); } catch (e) {}
const v67 = new C63();
const v68 = v67?.constructor;
try { new v68(); } catch (e) {}
