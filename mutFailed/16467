const v0 = [3,670389506,-1];
const v1 = [-9,-1520760960,65536,536870912,-14,5,-9223372036854775807];
const v2 = [59663,0,10];
const v6 = new Uint16Array(3225);
for (const v7 of v6) {
    v7[3] = v7;
    9007199254740991 * v7;
}
const v10 = [315.3838771878211,0.8321654879979539,1.0,-813011.8421276518];
function F11(a13, a14, a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    v10.__proto__.push(F11, a13, a13);
}
const v23 = [-697816904n,18184n,257n,v2];
const v24 = [v23,v0,v1,257n];
[v0,v24,v24];
new WeakMap();
new Uint32Array(7);
new Uint16Array(0);
new Float64Array(1024);
class C39 extends false {
    constructor(a41, a42, a43) {
        super(a41);
    }
}
function F44() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -1052649622;
        const v49 = -(-7);
        v49 ** v49;
    } catch(e51) {
    }
}
function F52(a54, a55) {
    if (!new.target) { throw 'must be called with new'; }
    return F52;
    v23.forEach(Float64Array);
    return (Uint16Array && Float64Array) <= v24;
    const v60 = this.constructor;
    v60.length = v60;
    function F61(a63) {
        if (!new.target) { throw 'must be called with new'; }
    }
    new Int32Array(1024);
    try { new v60(F44, a54, F44, v60); } catch (e) {}
    new F44();
}
new F52(F44, F52);
for (let v70 = 0; v70 < 32; v70++) {
    const v73 = ("object" + v70).trim;
    try { v73(); } catch (e) {}
}
const v77 = new Uint8Array();
const v79 = new Uint32Array();
function f80(a81, a82, a83, a84) {
    a81.g = v79;
    const v85 = a83 % a83;
    const o95 = {
        "b": a81,
        ...v77,
        n(a87, a88) {
            const o94 = {
                "arguments": v2,
                [v23](a91, a92, a93) {
                },
                ...v10,
                [a82]: Uint8Array,
            };
            v79[a81] = v79;
            return v85;
        },
    };
    const t73 = false?.b;
    const v97 = new t73(a83, v85);
    return v97;
}
new Int32Array(f80);
const v100 = [58584,15,9007199254740990,2146023485];
const v101 = [46733,-268435456];
function f102(a103, a104) {
    const o106 = {
        get h() {
            return this;
        },
    };
    return o106;
}
Object.defineProperty(v100, 65537, { writable: true, value: v101 });
function F107(a109, a110, a111) {
    if (!new.target) { throw 'must be called with new'; }
    const v112 = this.constructor;
    try { new v112(); } catch (e) {}
    a109 % a109;
}
const v117 = new WeakSet();
const v118 = v117.constructor;
class C119 extends v118 {
    [Uint32Array] = Uint32Array;
    static #e = v118;
}
[-8617,3];
const o121 = {
    "h": 4.435972324405191e+307,
};
