function f0() {
    const o26 = {
        "h": "values",
        "g": "6g",
        ["6g"](a5) {
            function f7() {
                class C9 {
                }
                const v10 = new C9();
                v10[3.4890473589784586e+307] = 268435439;
                const o11 = {
                    "call": f7,
                };
                class C12 extends C9 {
                    #a;
                }
                for (let i = 0; i < 5; i++) {
                    new Date();
                }
                return 268435439;
            }
            super.b;
            new Uint16Array();
            Promise.d = Promise;
            Array(36862);
            return "symbol";
        },
    };
    return o26;
}
f0();
const v28 = f0();
f0();
const v36 = v28.constructor;
try { new v36(-15n); } catch (e) {}
const t35 = -15n;
const v40 = new t35([], []);
v40.constructor;
function F44(a46, a47, a48, a49) {
    if (!new.target) { throw 'must be called with new'; }
}
const v50 = new F44(164140152, F44, 164140152, 164140152);
for (let v52 = 0; v52 < 5; v52++) {
    function f53() {
        const v56 = ("Vre").strike().link();
        v56.includes(164140152);
        const v59 = Array();
        v59.unshift(v50, v52, F44, v52, v59.pop());
        const v63 = new Set();
        v63.add().entries();
        class C66 {
        }
        const v67 = new C66();
        v67.hasOwnProperty(v56);
    }
    f53();
    %OptimizeFunctionOnNextCall(f53);
}
