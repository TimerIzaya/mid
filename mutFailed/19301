[];
new Int32Array(5);
new BigUint64Array(431);
new BigUint64Array(16);
class C10 extends BigUint64Array {
    static get a() {
        this[9] = BigUint64Array;
        function f12() {
            return this;
        }
        return BigUint64Array;
    }
    constructor(a14, a15, a16) {
        super(a15);
        const o19 = {
            valueOf() {
                super.buffer &= 5;
                return 16;
            },
        };
    }
}
new C10(431, 431, 16);
new C10(5, 16, 16);
new C10(431, 5, 5);
const v23 = [5,4142,11,268435456,11,-30743,4096,268435440,1753297073];
function f24() {
    Math.log1p(0.04879611221991542);
    function f31(a32, a33) {
        a33?.__lookupGetter__;
        a33?.constructor;
        return f31;
    }
    class C36 {
        constructor(a38) {
            function f39(a40, a41) {
                a40[5];
            }
            f39(v23);
            f39(v23);
            f39(a38);
        }
        static 3143;
        static ["-2"];
        #f = "-2";
        static #a;
        #c;
        #valueOf(a47, a48) {
            const v49 = a48 == a48;
            v49 ? a48 : a48;
            const v51 = ["-2",this,"setMonth",a47,"-2"];
            [v51,v51,this,this];
            [v49,"-2","4X",a47];
            return a47;
        }
        10 = "4X";
        #g = "-2";
    }
    new C36();
    new C36();
    new C36();
    try { new WeakSet(); } catch (e) {}
    new WeakSet();
    -536870912 ^ -536870912;
    [-256,-256,5,-9007199254740991,-128,1073741825,-11,-49255];
    [35577,123452243,-2,65305,268435441,11,-58686];
    const v66 = [1506147375,1598671956,64,-23009,-512929497,-1432178736,4];
    try { v66.sort("-2"); } catch (e) {}
    6 | 6;
    function F75(a77, a78) {
        if (!new.target) { throw 'must be called with new'; }
        class C80 {
            static #valueOf(a82, a83, a84) {
            }
        }
        class C85 {
        }
        Number.isFinite(Number);
        const v87 = this.constructor;
        try { new v87(); } catch (e) {}
    }
    new F75();
    new F75();
    class C92 {
        constructor(a94) {
            const v95 = this.constructor;
            v95.d = v95;
            try { new v95(); } catch (e) {}
            ("size").c;
            const v98 = ("size").g;
            ("size").length;
            let v100 = v98?.[7];
            [...v100] = "size";
            /a\bc/vd;
        }
    }
    function f102(a103, a104, a105) {
    }
    const o106 = {
    };
    class C107 {
        static #n(a109) {
        }
    }
    new C107();
    new C107();
    let v112 = Int16Array;
    try {
        function f113(a114, a115, a116, a117) {
            for (let i120 = 0, i121 = 10;
                (() => {
                    const v122 = i120 < i121;
                    class C123 {
                    }
                    const v124 = new C123();
                    class C125 {
                        static #e;
                        static {
                            try {
                                v124.#e = this;
                            } catch(e127) {
                            }
                        }
                    }
                    return v122;
                })();
                i121--) {
                i121 & i121;
            }
            return f113;
        }
    } catch(e134) {
    }
    v112 = v112;
    Int8Array.b = Int8Array;
    Int8Array.b = Int8Array;
    gc();
    Object.defineProperty(v23, 1, { writable: true, enumerable: true, value: v23 });
    return Int8Array;
}
%PrepareFunctionForOptimization(f24);
f24();
%OptimizeFunctionOnNextCall(f24);
f24();
