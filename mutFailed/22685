const v0 = [2.0,0.915699931117104,-1.7976931348623157e+308,1000000000.0,3.9151042614272757];
[-24910.40264571272,5.877315259911132,-1000000000000.0,-501743.061209821,-1000000000.0,-1.0,-600.6005345843244,1e-15,-0.0];
const v2 = [-3.025109188320833,-2.2250738585072014e-308,1e-15];
function f3(a4) {
    return v0;
}
v2.valueOf = f3;
-748.5629021731381 + -748.5629021731381;
const v14 = new Uint16Array(5);
v14.toString = f3;
try { v14.slice(v14, v2); } catch (e) {}
new Int32Array(2);
Uint8ClampedArray.h = Uint8ClampedArray;
const v21 = new Uint8ClampedArray(4);
v21[Symbol.toPrimitive] = f3;
v21[3] = v21;
const v26 = new Float64Array(6);
const v28 = new Int16Array(v26);
v28[4] = v28;
