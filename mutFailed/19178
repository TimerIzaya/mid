[776,65535,-65537,-9007199254740990,-989617250,4096];
[1557499367,10000,-1393294848,1918242954];
const v2 = [-1136484981,4294967297,-268435456,-2147483648,5];
new Uint8Array(64);
for (const v10 in Array(176726687)) {
}
new BigInt64Array(64);
class C15 extends ([-1941710058,1389675721,-50560,-20231,1311353951,-1024,128,-25926]).constructor {
    #g;
    constructor(a17, a18, a19) {
        function f20(a21, a22, a23) {
            v2.copyWithin();
            try {
                f20(a23, a22, 252859902);
            } catch(e27) {
            }
            const v28 = this >> 252859902;
            v28 - this;
            return -v28;
        }
        f20();
    }
    7 = -1823362111n;
}
function F35(a37) {
    if (!new.target) { throw 'must be called with new'; }
    const v38 = this?.constructor;
    try { new v38(a37); } catch (e) {}
    try {
        this.f = 145253519;
    } catch(e40) {
    }
}
new Int8Array(5);
new Float64Array(257);
new Float64Array();
const v49 = new Uint8ClampedArray();
v49.toReversed();
new Uint16Array(4);
let v52 = -2.220446049250313e-16;
class C53 {
    constructor(a55, a56) {
        new Date();
        return Date;
        new Int32Array(512);
        Math.acos(v52);
        ([601759695]).includes(...[-1000.0,-2.2250738585072014e-308,511.99933163650917,-386.8372768814137,Infinity]);
        function F67(a69, a70) {
            if (!new.target) { throw 'must be called with new'; }
            const v71 = this.constructor;
            try { new v71(); } catch (e) {}
            const o74 = {
                0: "1ya",
                162: "1ya",
            };
        }
        v52++;
    }
}
const v76 = new C53();
const v77 = v76.constructor;
const v79 = new Date();
v79.getMinutes();
const v83 = [601759695];
function f85(a86, a87, a88, a89) {
    function f90() {
        let v94 = -4294967297n;
        const v95 = v94--;
        for (let v96 = 0; v96 < 5; v96++) {
            function f97() {
                b = v83;
                const o104 = {
                    [v95](a100, a101, a102, a103) {
                    },
                };
                return Date;
            }
        }
        return v94;
    }
    eval("function");
    return -1000000.0;
}
new v77(v77, v52, C53);
for (const v115 in [1959699296,-1,9007199254740991,9007199254740992,2147483649,-4096,-9223372036854775808]) {
}
function f116() {
    return f116;
}
function f117() {
    return f117;
}
gc();
