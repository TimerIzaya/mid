3 & 3;
try {
    try {
        new Uint16Array(3, 1231903051, 3);
    } catch(e8) {
    }
} catch(e9) {
    try { e9.n(-9223372036854775807n, 3, -6n); } catch (e) {}
} finally {
    3 - -9223372036854775807n;
}
const v12 = new Uint16Array(3);
const v15 = new Float64Array(209);
try { v15.toString(); } catch (e) {}
new Uint16Array(968);
-9007199254740991 * -9007199254740991;
Math.sin(-9007199254740991);
for (const v24 of v12) {
    let v25;
    try { v25 = Math.cosh(Float64Array); } catch (e) {}
    try { v25(Math, -9007199254740991); } catch (e) {}
}
delete Math[8];
