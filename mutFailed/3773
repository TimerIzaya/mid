function f0() {
}
const v1 = [170973.31550772302,-4.0,-1.0,-0.0,3.0,-6.849684473626876,45.273686492703064,982.7408361746702];
const v2 = [1.7976931348623157e+308,0.9275671726700626];
const v3 = [3.4141439016494905e+307,-2.0,4.0,1000000000.0];
const v4 = /uc6xyz{1,32}n\c~/is;
const v5 = /Q47/udimsy;
let v6;
try { v6 = v5.compile(v5, v3); } catch (e) {}
const v7 = /o/vdimy;
const v8 = [1000000000000.0,-1.0];
v8[Symbol.toPrimitive] = f0;
const v11 = [1.7976931348623157e+308,-1.7976931348623157e+308,393.3458932696269,-9.348800493681217e+306,-2.220446049250313e-16,1000000000000.0,-1e-15,-5.0];
const v12 = [0.47723682312134963,1.0,-2.0,0.1042416742810014,-6.78362387031628,-3.0,-0.0];
v12[6] = v12;
function f13(a14, a15, a16, a17) {
    Object.defineProperty(a14, "e", { writable: true, configurable: true, enumerable: true, value: v5 });
    function f18() {
        function F20(a22, a23) {
            if (!new.target) { throw 'must be called with new'; }
            this.b = "b";
            this.d = a23;
        }
        const v24 = new F20();
        const v25 = new F20(v24, v24);
        const o26 = {
            ...v25,
            __proto__: v24,
        };
        return f0;
    }
    a17[Symbol.toPrimitive] = f18;
    a14.e = a14;
    try { a17.group(v8); } catch (e) {}
    const o41 = {
        n(a31, a32) {
        },
        set b(a34) {
        },
        ...v1,
        47: v3,
        [v8]: a17,
        1: v7,
        "b": a14,
        ...v4,
        "a": v6,
        __proto__: v2,
        "e": v3,
        get c() {
            const v36 = this == this;
            if (v36) {
                [-3.3258524119170756e+307,4.420942899079176,1.07327069263508e+308,-5.0];
                [-1000000.0,1.7976931348623157e+308,-Infinity,6.674630589488714,-106684.44830613537,-0.0,1000000000.0,0.28701982837098905,-2.0,-1000000000000.0];
                [616092.0097303316];
            } else {
                super.g;
            }
            return v36;
        },
    };
    return o41;
}
f13(v5, v4, v4, v8);
new Date();
const v45 = [1e-15,395833.8744809434,1000000.0,1.4833232607524508e+308,-597725.5054648793];
try {
    new Uint16Array(v45, 54);
} catch(e49) {
}
const v50 = f13(v5, v4, v5, v12);
v50[47] = v50;
f13(v5, v7, v7, v11);
function* f55(a56) {
    yield [9007199254740990,-4294967296,-1205995130,-12581,9];
    return -1.7570084557226905e+308;
}
let v60 = 0;
v60--;
