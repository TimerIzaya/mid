const v2 = new Int32Array(-9007199254740990);
class C4 {
    constructor(a6) {
        const v7 = this.constructor;
        try { new v7(v7, C4, C4, this); } catch (e) {}
        ("valueOf").localeCompare(a6, "valueOf");
    }
}
new C4("valueOf");
const v13 = new Int8Array(15);
const v16 = new Uint8ClampedArray(14);
let v17 = -4294967297;
v17 = -9007199254740990;
C4 = Uint8ClampedArray;
try {
    v13.reduceRight(v16);
} catch(e19) {
}
let v21 = 536870888;
const v22 = v21++;
v22 >> v22;
Symbol.b;
class C27 extends Date {
}
new Uint32Array();
new Uint8Array(128);
const v35 = [1000000000000.0,0.5711040628711238];
v35[16] = 2.220446049250313e-16;
class C39 extends Int32Array {
}
const v40 = [601759695];
const v41 = [1073741824,1073741823,1376142744,1073741825];
try { v41["find"](..."find", Date, ...v40, ...v41); } catch (e) {}
delete v35[2.0];
const v46 = new Uint8Array(5);
/a\b!+/vdiy;
/(a\1)/gvdimy;
const v52 = /^xxx$/gvi;
const v58 = new d8(1487);
new Int32Array(2943);
const v66 = -9007199254740992 / v17;
v17 ** -9007199254740992;
-334484237 % v66;
v66 ^ v66;
+v66;
!-9007199254740992;
function f72(a73, a74, a75) {
    const o83 = {
        replace(a77, a78, a79) {
            return Date;
        },
        valueOf(a81, a82) {
            return a82;
        },
    };
    return o83;
}
f72();
new BigUint64Array(194);
const v91 = /LR0/gudisy;
/(?:ab){4,7}/gvisy;
/a\Bb+/vdims;
function F94() {
    if (!new.target) { throw 'must be called with new'; }
    function f96(a97) {
        Object.defineProperty([58584,15,9007199254740990,2146023485], 65537, { writable: true, value: [46733,-268435456] });
    }
    Object.defineProperty(this, "b", { enumerable: true, set: f96 });
    let v100 = 1073741825;
    try {
        v100++;
        let v104 = -1e-15;
        Math.atan2(v104++, -175950080);
        this.b = v100;
    } catch(e107) {
    }
    for (let i111 = 0, i112 = 10;
        (() => {
            const v113 = i111 < i112;
            class C114 extends Date {
            }
            return v113;
        })();
        i111++) {
    }
}
let v120 = new F94();
let v121 = new F94();
v121.a = -10809n;
({"a":v121,"b":v121,...v120} = v121);
const o125 = {
    "execution": "minor",
    "e": 14,
    ...v58,
    [v91]: v91,
    ...v52,
    ...v2,
    "execution": d8,
    "execution": "async",
    "type": "minor",
};
gc(o125);
new F94();
new Uint8ClampedArray(v46, Uint8ClampedArray);
function f132() {
    new Uint8Array(0);
    [8n];
    d8();
    class C141 {
        #valueOf(a143, a144, a145, a146) {
        }
    }
    return Uint32Array;
}
%OptimizeFunctionOnNextCall(f132);
