new Uint8ClampedArray(3814);
Uint32Array.BYTES_PER_ELEMENT = Uint32Array;
const v5 = new Uint32Array(235);
v5[201] = v5;
const v8 = new Int32Array(1573);
v8[1396];
class C10 extends v5 {
    static m(a12, a13) {
        return 235;
    }
    static #o(a18, a19, a20, a21) {
        super.buffer = a19;
        super[a20];
        let v26 = -792601.0356788794;
        Math.imul(Uint8ClampedArray, Uint8ClampedArray);
        Uint8ClampedArray ** -268435456;
        let v29 = Uint32Array / 34893;
        v29--;
        Math.sinh(-268435456);
        v26++;
        return v8;
    }
}
C10.prototype = C10;
new C10();
new C10();
const v35 = new C10();
const v36 = v35?.copyWithin;
try { new v36(Uint32Array, C10); } catch (e) {}
class C39 {
}
function f40(a41, a42) {
    function f43(a44) {
        arguments[1];
        return arguments;
    }
    const v47 = f43(f40, a41, a41, a42);
    const o48 = {
        ...v47,
    };
    o48[2];
    return o48;
}
f40()[1];
const v52 = f40(-1000000000.0, C39);
v52[3] = v52;
