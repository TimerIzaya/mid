[3.6603699555844277e+307,1.301161651682527,-1000000.0,631215.7017250536,9.572119183903332,1000000000000.0,-4.0,-228722.6303401551,0.5319226309411216,-3.0];
const v4 = [0.8081948501098001];
const v5 = [0.48879817238347556,2.2250738585072014e-308,1000.0,1000.0,-681.8004556870678,-1000.0,-1.5737380958439236e+306];
function F6(a8, a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    function f11() {
        return v4;
    }
    function f12(a13) {
        function F14(a16, a17, a18, a19) {
            if (!new.target) { throw 'must be called with new'; }
            this.a = a17;
        }
        new F14();
    }
    Object.defineProperty(this, "g", { writable: true, configurable: true, enumerable: true, get: f11, set: f12 });
    try {
        this.g = 4411;
    } catch(e21) {
    }
    const v22 = [2.412578955630149,2.7008822875610345,-2.220446049250313e-16,-1.0,-1000000000.0,-1.0,3.9002388983145044e+307,-Infinity,-1e-15,-4.2464820531165003e+307];
    const v23 = [-1e-15,4.0,362.9742459010415,1.488212487511409e+308,3.0];
    class C24 {
        constructor(a26, a27) {
            super[v23] = v22;
        }
    }
    const v28 = new C24(v22, v23);
    v28.toJSON = this;
    function f29(a30) {
        return C24;
    }
    const v33 = [v28];
    const o34 = {
        "arguments": v33,
        "type": "function",
    };
    new Worker(f29, o34);
}
new F6(531531810, v5, 531531810);
new F6(9007199254740990, v4, 4411);
new F6(9007199254740990, v4, 4411);
new BigUint64Array(5);
try {
    v5.b = 5;
} catch(e44) {
}
new Float32Array(3932);
("sync")[-5.0];
class C50 {
}
new Uint8ClampedArray(127);
const t52 = [-65317,-58155,536870889,976,536870889];
t52[2] = 13;
const o60 = {
};
async function* f64(a65, a66) {
    return -9223372036854775807;
}
const t59 = 2.0;
delete t59[268435456];
const v69 = [];
class C70 {
    constructor(a72) {
        function* f73(a74, a75) {
            yield* v69;
            return a74;
        }
    }
}
