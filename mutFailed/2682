class C6 {
    f = -13;
}
new C6();
new C6();
const v9 = new C6();
const v12 = -9007199254740992 << -9007199254740992;
let v13 = -11;
v13--;
function f15() {
    let v16 = 1000000000000.0;
    v16--;
    class C19 {
    }
    const v20 = new C19();
    const v21 = new C19();
    [v21,C19];
    const v23 = [257828.6336153492,v21];
    const v24 = [v21];
    class C25 extends C19 {
    }
    function f26(a27, a28) {
        v23 & v20;
        for (let v30 = 0; v30 < 32; v30++) {
            v20["p" + v30] = v30;
        }
        return a27;
    }
    Set.toString = f26;
    Set.constructor(Set);
    v24.constructor;
}
const v36 = [0.5940390038775788,1000.0];
[-1000000000.0,2.2250738585072014e-308,408887.6678806315,-1e-15,2.2250738585072014e-308,954552.1976825399];
[1.0,-Infinity,1.0297842819873827e+308,365.3430180460016,7.00233549185964,-1e-15,-707688.877114065];
const v42 = [];
const v43 = [0n,0n,0n,0n];
class C44 {
    constructor(a46, a47) {
        let v48;
        try { v48 = this.constructor(this, -11); } catch (e) {}
        function F49(a51, a52) {
            if (!new.target) { throw 'must be called with new'; }
            const v53 = this?.constructor;
            try { new v53(v43, this); } catch (e) {}
            a52 ^ a52;
            this.b = v42;
        }
        new F49();
        const v57 = new F49();
        let {"g":v58,"h":v59,...v60} = v48;
        try { this.reverse(v57, a47, v59, v58); } catch (e) {}
        v60[a46] &&= 1967;
        ~v9;
        function F63(a65, a66) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.c = v36;
            } catch(e67) {
            }
            try {
                this.a = -11;
            } catch(e68) {
            }
        }
        new F63(1967, 1042369217);
        new F63(C44, f15);
        new F63(1042369217, v12);
        new F49();
    }
}
try { C44.bind(-13); } catch (e) {}
function f74() {
    return f74;
}
class C76 {
    constructor(a78, a79) {
        const v80 = this.constructor;
        try { new v80(-15n); } catch (e) {}
        a78 & a78;
        const o83 = {
        };
        o83.e = a78;
    }
}
new C44();
new C44();
new C44();
const o90 = {
    "type": "minor",
};
gc(o90);
