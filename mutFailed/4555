class C3 {
    #h = "object";
    static {
        function f5() {
            return "object";
        }
        f5.d = f5;
        this[912188.6240898652] = "g";
        try {
            this.#h = this;
        } catch(e6) {
        }
    }
    [912188.6240898652] = "object";
    static ["object"] = "g";
    static #e;
}
const v7 = C3?.call;
let v8;
try { v8 = new v7("g"); } catch (e) {}
const v9 = new C3();
const v10 = v9?.constructor;
let v11;
try { v11 = new v10(); } catch (e) {}
const v12 = [-1000000000000.0,-2.0,-7.864455639462835e+307];
[-1000000000000.0,-846.8498846624736,-0.0,-4.0,0.0017044103206380612,1000000000.0,-272681.0476408425,1000000000000.0,Infinity,-1e-15];
[-1000000.0,-3.0,0.8639004887899067,1000000000000.0,497896.26976574725,-514.7960013087172,-1.0,-1e-15];
v11 *= "object";
let v15;
try { v15 = v8(v10, 912188.6240898652, "object"); } catch (e) {}
const v16 = new C3();
const v17 = v16?.constructor;
try { new v17(); } catch (e) {}
const v19 = new C3();
const v20 = v19?.constructor;
try { new v20(); } catch (e) {}
class C22 extends C3 {
    set c(a24) {
        for (let v25 = 0; v25 < 32; v25++) {
            C3["p" + v25] = v25;
        }
    }
    #p(a29, a30, a31, a32) {
        a30 & a32;
        super.b;
        class C35 {
            e;
            9 = "g";
        }
        new C35();
        let v37 = 0;
        while (v37 != 7) {
            v37++;
        }
        v7?.[8];
        try {
            const t56 = "object";
            t56.length = 4;
        } catch(e46) {
        }
        new C35();
        const v48 = new C35();
        return v48;
    }
}
C22.name = C22;
const v49 = new C22();
const v50 = new C22();
const v51 = new C22(v12, v7);
function f52(a53, a54, a55) {
    const v56 = a53?.__defineGetter__;
    let v57;
    try { v57 = new v56(a54, a53); } catch (e) {}
    a54.c;
    let v60 = 9007199254740990;
    parseInt.log10(v57);
    const v62 = v60--;
    parseInt.tan(v57);
    let v64 = v60 ** v62;
    const v65 = --v64;
    v64 = v60;
    %VerifyType(v20);
    Map.cbrt(v15);
    255 - 255;
    +255;
    !v57;
    const v72 = a55?.constructor;
    let v73;
    try { v73 = new v72(); } catch (e) {}
    const o95 = {
        0: a55,
        "h": 912188.6240898652,
        ...v9,
        [C22]: a55,
        get a() {
            let [] = "object";
            v11 !== this;
            const v76 = v17?.[this];
            try { v73(v76, v62); } catch (e) {}
            function F78(a80, a81, a82, a83) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.c = v73;
                } catch(e84) {
                }
                try {
                    this.e = a80;
                } catch(e85) {
                }
                try {
                    this.g = a82;
                } catch(e86) {
                }
            }
            const v87 = new F78(v10, v65, v73, v17);
            const v88 = new F78(v87, v10, v87, v49);
            new F78(v88, a55, v19, v88);
            const t117 = "g";
            delete t117["g"];
            try { a53(v50, v50); } catch (e) {}
            super.c = C3;
            return 63874;
        },
        [v19]: v51,
    };
    return o95;
}
const v96 = f52(v16, v51, v49);
v96[0];
f52(v96, v51, v50, v20, f52(v19, v49, v49), v49);
394.2567881941575 - 394.2567881941575;
-4294967296 ^ -4294967296;
Uint8Array.name = Uint8Array;
const v111 = new Uint8Array(2707, 2707, -4294967296);
let v112;
try { v112 = v111.findLastIndex(v111, v111); } catch (e) {}
const o113 = {
    [v112]: Uint8Array,
};
