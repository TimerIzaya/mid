class C3 {
    h = -3382;
    [5];
    static #d = 5;
    constructor(a5) {
        a5--;
        let v7;
        try { v7 = this(-3382, this, a5, this, this); } catch (e) {}
        const v9 = [v7,[v7,v7,a5,a5,-3382],5];
        try { v9.entries(); } catch (e) {}
        const v11 = [5,v7];
        try { v11.groupToMap(v11); } catch (e) {}
    }
    static #m(a14, a15) {
        super[-3382];
        const o19 = {
            "maxByteLength": 50,
        };
        const v21 = new SharedArrayBuffer(8, o19);
        new BigInt64Array(v21);
        return 50;
    }
}
const v24 = C3.length;
new C3(5);
const v26 = new C3(-3382);
const v27 = new C3(5);
function f28(a29) {
    const v32 = new Int32Array(7);
    v32.buffer;
    return a29;
}
v27[Symbol.toPrimitive] = f28;
class C36 {
    valueOf(a38, a39, a40, a41) {
        this[Symbol.isConcatSpreadable] = v27;
        return C3;
    }
    static {
        try { new this(); } catch (e) {}
        const v49 = this << this;
        try {
            super.p(v49, v49, v49, this);
        } catch(e51) {
            e51.message = e51;
        }
    }
}
try { new C36(); } catch (e) {}
var h = C3;
Object.defineProperty(C3, "g", { writable: true, enumerable: true, value: C36 });
delete v26[v27] instanceof C36;
new C36();
new C36();
new C36();
Uint16Array[2] = v24;
const v61 = new Uint16Array(256);
new Int16Array(64);
new BigUint64Array(4);
const v68 = [];
try { v68.some(v68); } catch (e) {}
let v70 = 1073741824;
v70--;
try { new Int8Array(Uint16Array, v27, Int8Array); } catch (e) {}
const v77 = new Int8Array(964446029);
const v78 = v77?.findLastIndex;
try { new v78(v61); } catch (e) {}
const v81 = new Uint32Array(16);
function f82(a83, a84) {
    const o85 = {
    };
    o85.e = f82;
    const o86 = {
    };
    o86.e = f82;
    o86.b = a84;
    const o87 = {
    };
    o87.e = f82;
    o87.b = a84;
    o87.c = a83;
    const o90 = {
        "arguments": v68,
        valueOf(a89) {
            return this;
        },
    };
    o90.e = f82;
    o90.b = a84;
    o90.d = a84;
    function f92(a93) {
        return 7;
    }
    this.onmessage = f92;
    v81.length = v70;
    return o85;
}
f82.prototype;
("function")[5];
const o98 = {
    "type": "function",
};
o98.arguments = o98;
new Worker(f82, o98);
