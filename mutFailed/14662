function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v6 = [];
        function F7(a9, a10, a11, a12) {
            if (!new.target) { throw 'must be called with new'; }
            a9.strike();
            const v14 = this.constructor;
            try { new v14(a12, v6, a10, a12); } catch (e) {}
            a10[2];
        }
        this.b = a5;
    } catch(e17) {
    }
    try {
        this.h = a5;
    } catch(e18) {
    }
}
const v19 = new F3(1000.0);
new F3(-131456.16013527242);
const v21 = new F3(1000.0);
const v22 = [v21];
const v23 = [v22,v21];
const v25 = [[v23,v19],v23];
[[v25,F3,v25],v22,F3,v22];
class C28 {
}
const v29 = new C28();
new C28();
new C28();
class C32 {
}
const v33 = new C32();
function F35(a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
}
const v40 = new v33();
new DataView(v40);
const v44 = Date.toString(Date, Date, Date, Date);
async function* f45(a46, a47) {
    return Date;
}
const v48 = f45(v44, Date);
function f49(a50, a51) {
    const o52 = {
        [v44]: v48,
    };
    return f45;
}
%OptimizeFunctionOnNextCall(v44);
f49(f45, Date);
for (let v54 = 0; v54 < 5; v54++) {
    const o105 = {
        "e": v54,
        get c() {
            return C32;
        },
        m(a58) {
            a58.c = a58;
            a58.h = a58;
            const o59 = {
            };
            o59.h = o59;
            function f60(a61, a62, a63) {
            }
            f60.caller = f60;
            try {
                o59.e = v54;
            } catch(e64) {
                const v68 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v68, o59);
            }
            const o70 = {
            };
            o70.e = v54;
            try { Math.expm1(v54); } catch (e) {}
            let v74 = -9007199254740991 >> -9007199254740991;
            v74 - -9007199254740991;
            Math.sin(-9007199254740991);
            try { ("EV").link(v54); } catch (e) {}
            0 != 0;
            class C81 {
                o(a83, a84, a85, a86) {
                    class C87 {
                    }
                }
            }
            C81.name = C81;
            new v29();
            const v91 = new Int8Array(3938);
            let v92 = 3;
            const v93 = v92++;
            v93 + v93;
            const v96 = 0 >> 0;
            v96 - v96;
            for (let i = 0; i < 5; i++) {
                0 < 8;
                [...v92] = v91;
                const v100 = v74++;
                v100 % v100;
            }
            const o102 = {
            };
            o102.c = o102;
            o102.e = v54;
            o102.g = 0;
            try {
                const o103 = {
                };
                o103.g = a58;
                o103.h = v54;
            } catch(e104) {
            }
            return this;
        },
    };
    gc(o105);
}
