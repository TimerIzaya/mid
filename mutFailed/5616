const v4 = new Set();
const v5 = [1000000.0,5.5994194277335225,1000.0,-0.0,1.0,-447.5374591641987,-3.0];
const v6 = [2.220446049250313e-16,-4.0,5.0,867.1607329554979,-2.220446049250313e-16,-1.0,-3.0,0.43210326063660187,0.6960017077973818,-4.0];
const v7 = [-3.8400287173240866,-876.4097376372,0.48533660790593114,-1000000.0,3.0,1.7976931348623157e+308,-1000000000.0,1000000000.0];
const v8 = v7 != v7;
if (v8) {
} else {
    v6["reverse"]("reverse", ..."reverse", ..."reverse", ..."reverse");
}
class C14 extends Set {
    static #m(a16, a17, a18) {
        a18?.f;
        delete v7[-1];
        try {
            a18.length = 2;
        } catch(e22) {
        }
        try {
            v5.e = Infinity;
        } catch(e23) {
        }
        return a17;
    }
    #p(a25, a26, a27, a28) {
        1e-15 >= v6;
        return a25;
    }
}
const v34 = new v4();
const v35 = new C14();
new C14();
const v38 = new BigUint64Array();
Object.defineProperty(v35, v38, { writable: true, configurable: true, enumerable: true, value: v35 });
v4 % v34;
v4 in v7;
function F41(a43, a44, a45) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a44;
    } catch(e46) {
    }
}
const v47 = new F41(v6, 1e-15, BigUint64Array);
new v8(v6, 1e-15, v47);
new F41(v7, 3.6101589513493764, C14);
const v50 = /anVXYFzN(x)(x)(x)\3/gvdms;
try { v38.reduceRight(v50); } catch (e) {}
