new Int8Array(1024);
const v8 = new Float64Array(1418);
const v11 = new Int32Array(64);
function f12() {
    return -2.2250738585072014e-308;
}
class C14 {
    toString() {
        [0.42610628000409834];
        [0.1916863927637561,5.0,-1000000.0,-1000000000000.0,-2.2250738585072014e-308,786167.582370504,221250.34918176057];
        [2.0,121972.82426161831,1.0,1000.0,1.586101720587471e+308,682084.812556563];
        return undefined;
    }
    #f;
    static [undefined] = undefined;
    536870887;
    static #d = undefined;
}
v8[-2.0];
Object.defineProperty(v11, Float64Array, { writable: true, enumerable: true, value: -2.220446049250313e-16 });
let v20;
try { v20 = v8.slice(1418); } catch (e) {}
v20?.[-2.220446049250313e-16];
v11[7] = C14;
const v22 = new C14();
new Uint16Array(10);
new BigInt64Array(1000);
new Int8Array(1230);
new C14();
const v33 = new C14();
class C34 {
    static #c;
    set c(a36) {
        try {
            v22.__proto__ = v33;
        } catch(e37) {
        }
    }
    c = C14;
    static #g;
    #b = undefined;
}
new C34();
new C34();
new C34();
new Int16Array(1659);
new Int16Array(Int8Array, 3, ...v8, 3, v33);
Reflect.construct(v20, [Reflect,Reflect], Int8Array);
%VerifyType(v22);
new Uint8Array(3);
new BigInt64Array(428);
try { C14.log10(); } catch (e) {}
try { v33.toString(Int16Array, BigInt64Array); } catch (e) {}
for (let i60 = 0; i60 < 7; i60++) {
    new Uint8Array(i60);
}
