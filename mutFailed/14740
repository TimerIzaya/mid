const v0 = /[m(?!a)?a\1ECUf4gabc]/gi;
const v1 = /[x][\cz]/gudims;
let v2 = /C(ab|cde)l[x]foo(?<!bar)baz*/udy;
function f3() {
    function F4() {
        if (!new.target) { throw 'must be called with new'; }
        for (let i8 = 0, i9 = 10; i8 < i9; i9--) {
        }
        for (let v16 = 0; v16 < 10; v16++) {
            for (let v17 = 0; v17 < 5; v17++) {
            }
            const o19 = {
                __proto__: null,
            };
            try { o19.valueOf(); } catch (e) {}
        }
    }
    new F4();
    return v0;
}
v2.toString = f3;
function f22(a23) {
    function f24(a25) {
        a25 !== a23 ? a25 : a23;
        return a23;
    }
    a23.toString = f24;
    const o28 = {
        [a23]: v2,
        "e": v2,
        ...v2,
        "c": a23,
        "g": a23,
        [v2]: a23,
        "h": a23,
        __proto__: v0,
        ...v2,
        ...v2,
        ...v2,
        "b": v1,
    };
    return o28;
}
f22.toString = f3;
f22(v1);
f22(v1);
f22(f22);
class C32 extends f22 {
    c = v1;
    static #m(a34, a35) {
        const v37 = [v2];
        Reflect.apply(v1.exec, v0, v37);
        v2--;
        const v44 = v2 | 7.114808917837519e+307;
        Math.cos(a34);
        v2 && v44;
        !v2;
        return 7.114808917837519e+307;
    }
}
new C32();
new C32();
const v50 = new C32();
new BigInt64Array(2149);
new Uint16Array(3412);
new BigUint64Array(129);
function F69() {
    if (!new.target) { throw 'must be called with new'; }
    function f72() {
        return -9007199254740992n;
    }
    class C73 {
    }
    new C73();
    this.c = 1073741823;
    const o76 = {
    };
    class C77 {
    }
    const v79 = new Set();
    function F80(a82, a83) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.d = a82;
        } catch(e84) {
        }
        v79[this];
        try {
            new F80(a83, v79);
        } catch(e87) {
        }
    }
}
new F69();
new F69();
new F69();
const o94 = {
};
new Proxy(C32, o94);
v50.e >>= 0.18513392550519503;
new Float32Array(4);
new Uint32Array(2);
function F103(a105, a106, a107, a108) {
    if (!new.target) { throw 'must be called with new'; }
}
const v109 = new F103(F103, F103, F103, F103);
v109.p5 = 13;
for (let v110 = 0; v110 < 25; v110++) {
    v109["p" + v110] = v110;
}
class C113 {
    constructor(a115, a116) {
        function f117() {
            return f22;
        }
        Object.defineProperty(this, Symbol.toPrimitive, { get: f117 });
        for (let i = 0; i < 10; i++) {
            this[this];
        }
    }
}
new C113();
function F122(a124, a125) {
    if (!new.target) { throw 'must be called with new'; }
    const v128 = Array(11);
    function f129() {
        return this;
    }
    function f130(a131) {
        Object.defineProperty(this, 268435441, { enumerable: true, set: Array });
    }
    Object.defineProperty(v128, 212, { writable: true, configurable: true, enumerable: true, get: f129, set: f130 });
    v128[212] -= 3774;
    this.constructor;
    a124++;
}
const v135 = new F122();
const t137 = v135.constructor;
new t137();
