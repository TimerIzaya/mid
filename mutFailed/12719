function f3() {
    return -57317n;
}
try { ("a").toWellFormed(); } catch (e) {}
const t4 = "m";
t4[0] = "m";
const v13 = new isNaN(4);
const v14 = v13?.constructor;
try { new v14(-57317n, 268435440n, 268435440n, -4294967296n, -4294967296n, v14); } catch (e) {}
class C16 {
    constructor(a18, a19, a20, a21) {
        a19 & a19;
        const v23 = a21?.POSITIVE_INFINITY;
        try { new v23(512n, 268435440n); } catch (e) {}
        let [v25,v26,,...v27] = v13;
        v25 >> v25;
        const v29 = v26++;
        try {
            class C30 {
                #n(a32, a33, a34, a35) {
                    super[this] = this;
                }
            }
            try { new C30(v29); } catch (e) {}
        } catch(e37) {
        }
    }
}
const v38 = new C16(v13, 4, isNaN, C16);
try { v38.propertyIsEnumerable(-4294967296n, v14, 9n, -57317n); } catch (e) {}
new C16(C16, 4, 4, C16);
