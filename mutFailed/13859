function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = -1021248258;
    } catch(e3) {
    }
    const v5 = new Uint16Array();
    v5[0.008868537081181294] = 0.008868537081181294;
    Math.exp(-1021248258);
    try {
        this.f = -1021248258;
    } catch(e9) {
    }
    ("1073741823").trimRight();
    for (let v13 = 0; v13 < 5; v13++) {
        v13 < 2;
        try {
            arguments.g = v13;
        } catch(e16) {
        }
        v13++;
    }
}
new F0();
function F19() {
    if (!new.target) { throw 'must be called with new'; }
}
class C21 extends F19 {
}
let v22 = -268435456;
v22--;
new F0();
const v25 = new F0();
let {...v26} = C21;
const v28 = new BigUint64Array();
v28.buffer;
class C31 {
    static ["name"];
}
new BigInt64Array(257);
new Uint32Array(257);
new Uint8ClampedArray(256);
class C44 extends v25 {
    get f() {
        for (const v47 of this()) {
        }
    }
}
class C50 {
}
new Int8Array();
class C54 extends Array {
}
const t53 = (2136873598).constructor;
t53(7).toExponential(C50);
