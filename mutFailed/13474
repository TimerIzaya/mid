const v1 = [];
const t1 = "byteOffset";
t1[Symbol.toStringTag] = v1;
-7 >>> -7;
const v6 = -(-7);
v6 ** v6;
try { ("cb").sup(); } catch (e) {}
class C11 {
    static o(a13) {
        a13[this] -= "cb";
        const v14 = "byteOffset" * a13;
        const v18 = new BigUint64Array(10);
        for (const v20 in v18) {
            new Float64Array(2147483647);
        }
        ("cb")["substring"](v14, v14);
        return this;
    }
    m(a25, a26) {
        super[this] = a25;
        ("e").normalize("NFKC");
        return "e";
    }
    9;
}
try { new C11(); } catch (e) {}
const v31 = new C11();
const v32 = new C11();
v32[9] = v32;
new C11();
class C35 {
    p(a37, a38, a39, a40) {
    }
}
C35[Symbol.toPrimitive] = Symbol;
const v43 = [C35];
try { v43.some(v43); } catch (e) {}
const v47 = v43[Symbol.iterator];
v47.b = v47;
const t39 = v47.constructor;
const v49 = t39(C35);
v49.length = v49;
v49();
const v55 = [[v31,"cb","setHours",["268435439"]],C11];
try { v55.reduce("round"); } catch (e) {}
[-4.0,0.5072543175974724];
[-1000000000000.0,-475.01540669026167,4.0,-56173.046397371334,1000000000.0,2.0];
[-2.478820297225446,100031.99017911521,-966.9196596874197,-18671.50988297863,0.8473124682065124,-1000000000.0,0.12349980762569523,0.6152226813785093,1000.0,0.2887035837063684];
class C60 {
}
try { new C60(); } catch (e) {}
try { Array.of(); } catch (e) {}
function f64(a65, a66, a67, a68) {
    a67++;
    Array[Symbol.species] = C60;
    return a65;
}
for (let v72 = 0; v72 < 10; v72++) {
    f64(f64, v72, v72, v72);
}
