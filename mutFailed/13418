const v0 = /(T\u0060+)/gui;
/Tr/gdimsy;
/Fi\u0060/vdims;
class C6 {
    2;
    static o(a8, a9, a10, a11) {
        return "g";
        const v15 = [1000000.0,0.9409263082170117,8.039827556304453e+307,-1000000000.0];
        [-1000000.0];
        [0.5680425595362383,-0.0,859994.746354253,-475.8712143424402,0.3268293857718354,0.0,281689.9444553759,-2.880622459414992,1.7976931348623157e+308,-9074.886130089057];
        const o20 = {
            "maxByteLength": 111,
        };
        const v22 = new ArrayBuffer(2, o20);
        new o20(v22);
        return v15;
    }
}
new C6();
const v26 = new C6();
const v27 = new C6();
const v28 = [v27,65535n,C6,v0,65535n];
[[255n,v28,v27]];
const v33 = new Int32Array();
const v35 = new BigInt64Array();
const v36 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
const v37 = [-1.7976931348623157e+308];
function f38(a39, a40, a41, a42) {
    const o48 = {
        toString(a44, a45, a46) {
            a41[a40] = a39;
            return this;
        },
    };
    return o48;
}
const v49 = f38(v35, 129, v37);
v49(v33, 129, v36) % v49;
class C52 {
}
try { v0(v27, v28); } catch (e) {}
v26 + v26;
try {
    new C52();
    new f38(10);
    function f59(a60, a61, a62, a63) {
    }
    for (let v64 = 0; v64 < 10; v64++) {
        f59();
    }
} catch(e66) {
    for (let v67 = 0; v67 < 25; v67++) {
        const v68 = [601759695];
        const v69 = [1073741824,1073741823,1376142744,1073741825];
        function f70(a71, a72, a73, a74) {
            try { v69["find"](..."find", ...a74, ...v68); } catch (e) {}
            return v67;
        }
        for (let v77 = 0; v77 < 10; v77++) {
            f70(f70, v68, v77, v68);
        }
    }
}
const v79 = new C52();
const v80 = [C52,C52];
new Int16Array(2);
function f85(a86, a87, a88, a89) {
    const v90 = a88++;
    v90 <= v90;
    return f85;
}
Date.UTC(v80, v79, -4096, 65535);
