const v0 = [-9.149329714744685,-1000000000000.0,NaN,1000000.0,-4.0,1e-15];
const v1 = [-656.7435826327676,-328590.80495944107,0.7706320223268348,0.8828181283601444,0.6404599922370247];
const v2 = [428.8100593888298,400.96562661294547,1.002049932457961e+308,4.593116913229489,NaN,8.454669874492332];
function f3() {
    return v0;
}
v2[Symbol.toPrimitive] = f3;
class C12 {
    #n(a14, a15, a16) {
        class C17 {
            static c;
            static [a15];
        }
        new C17();
        new C17();
        new C17();
        return a16;
    }
    h;
    [v1];
    #e;
    [v2];
}
new C12();
new C12();
new C12();
function F24(a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a27;
    } catch(e28) {
    }
    try {
        this.d = 2147483647n;
    } catch(e29) {
    }
}
new F24(v2, v1);
new F24(v2, v2);
new F24(v1, v0);
function f33(a34) {
    return a34;
}
class C35 extends f33 {
}
const v36 = new C35();
Object.defineProperty(v36, 2075456563, { get: f33, set: f33 });
