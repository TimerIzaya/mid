function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 59068;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new v5();
const v7 = [32845];
const v8 = [65537,10000,3,-1837310228,1000];
const v9 = [1636917354];
class C13 {
    static toString(a15, a16, a17, a18) {
        v7.length;
        v9 instanceof F0;
        super.c;
        return a18;
    }
    toString(a23, a24, a25) {
        const o26 = {
            ...a25,
            [v4]: F0,
        };
        C13?.[-1];
    }
}
for (let v28 = 0; v28 < 25; v28++) {
    Promise.reject(Promise);
}
C13[v6];
v5[13];
try { v6["imul"](C13, 9); } catch (e) {}
try { v8.shift(); } catch (e) {}
const o36 = {
};
