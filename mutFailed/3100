class C3 {
    #b;
    static f;
    p(a5, a6) {
        function f7(a8, a9) {
            let v10;
            try { v10 = this.shift(a6, "KhIZ", "KhIZ"); } catch (e) {}
            return v10 % a8;
        }
        f7(this, a5);
        return "268435456";
    }
    static ["268435456"];
}
new C3();
const v14 = new C3();
for (let [i18, i19] = (() => {
        0 + 0;
        return [0, 10];
    })();
    i18 < i19;
    (() => {
        i18++;
        let v24 = i19--;
        v24--;
    })()) {
    i19 + i19;
    C3[i19] = i19;
}
new C3("268435456", "268435456");
[388.5043641971797,-2.0];
const v31 = [-616.2288586661725,1000000000000.0];
const o32 = {
    ...v14,
    "b": v31,
};
o32[10] = v14;
o32[10];
[-1.9343979458898453,0.5548220994829762,0.9779059956142201];
const v37 = new Map(64);
let v38 = 1928;
v38++;
const v41 = new BigUint64Array(v38);
1000 << 1000;
new Uint16Array(1000);
Uint8Array.BYTES_PER_ELEMENT = Uint8Array;
const v49 = new Uint8Array();
2 != 2;
try { new Symbol(); } catch (e) {}
const v54 = Symbol.toPrimitive;
const o59 = {
    [v54]() {
        return "268435456";
    },
};
Object.defineProperty(o59, "h", { value: v41 });
o59.h = o59;
Uint32Array.length;
const v62 = new Uint32Array();
const v63 = v62?.set;
try { new v63(v37, 2); } catch (e) {}
function f65(a66, a67, a68, a69) {
    a67 * a67;
    a69 != a69;
    const o75 = {
        "f": 2,
        "b": a66,
        "c": a69,
        ...v49,
        n(a73, a74) {
            v62[a66] = v62;
        },
    };
}
f65(2, 2, 1, 2);
for (let v77 = 0; v77 < 625; v77++) {
    f65(Uint8Array, 2, v77, 2);
}
