function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 16;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
[1073741824,2147483648,457367514,2009520546,-920253873,-13,5];
const v8 = [-9223372036854775807,5,-65537,9223372036854775807,268435440,-1,-21466,129];
const v9 = [268435439,-4294967296,14,1073741824,16770,257,127,512,56614];
function f10(a11, a12) {
    const o25 = {
        m(a14, a15, a16) {
            const o17 = {
            };
            try {
                o17.c = a14;
            } catch(e18) {
            }
            try {
                const o19 = {
                };
                o19.c = a14;
                o19.d = a15;
            } catch(e20) {
            }
            try {
                const o21 = {
                };
                o21.c = a14;
                o21.d = a15;
                o21.a = v6;
            } catch(e22) {
            }
            try {
                const o23 = {
                };
                o23.c = a14;
                o23.d = a15;
                o23.a = v4;
            } catch(e24) {
            }
            return a15;
        },
    };
    return o25;
}
f10(v5, v4);
v9(v9, v8(v6, v5));
-Infinity;
function F32() {
    if (!new.target) { throw 'must be called with new'; }
}
const v34 = new F32();
const v35 = new F32();
const v36 = new F32();
const v37 = [v35];
const v38 = [v36,v35,v36,v34];
[v35,F32,v38,v38,v37];
[-6];
[15,1000,456510946,268435439,-4096,-1621925631,-536870912,4294967295,127,768050783];
[-30837,-2147483647,11,14];
const v45 = new Uint32Array(1000);
new BigUint64Array(154);
new v36(134);
const v52 = delete v37?.length;
try { v52["cbrt"](v45, Uint32Array, v35, v36, v52); } catch (e) {}
const o55 = {
};
new o55(Uint8Array, o55);
for (let v58 = 0; v58 < 5; v58++) {
}
