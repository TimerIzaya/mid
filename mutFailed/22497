const v0 = [918479691,-9007199254740991,0,-1];
const v1 = [7,-50356];
const v2 = [-65536,-2,127,255,15551,1073741824,-9007199254740990,1,4294967295];
function f3(a4, a5) {
    try { a4.shift(); } catch (e) {}
    const o7 = {
        "g": v1,
        __proto__: v0,
        "f": a5,
        "e": a5,
        "d": a4,
        "a": v0,
        ...v1,
        "b": v2,
        "c": a5,
        [a4]: a4,
        "h": v0,
        [v0]: v1,
        [v2]: v2,
        ...v2,
    };
    return o7;
}
try { f3(v0, f3); } catch (e) {}
f3(v1, v1);
f3(v0, v1);
const v11 = f3(v1, v1);
[-2.220446049250313e-16,3.1207176236290337,1000000.0];
[5.0,-1000000000000.0,0.693733383886065,-5.0,1.3389665658725951e+308,2.0,2.220446049250313e-16,-8.649631862469743,1.0840271525495002e+308];
const v14 = [255989.39754407387,0.0071719201603331895,-80807.46865635936,-1000000000000.0,847634.5619611978,638084.8366522114,1000000.0,2.0,-2.220446049250313e-16,1000000000000.0];
try { v14.pop(); } catch (e) {}
[128,65537,-65535];
[4294967295,-2019547177,10000,7];
[257,-9223372036854775808,10000,-3,9,-1,7406];
-7.645692469523979 | -7.645692469523979;
class C26 {
    [-4.0] = -7.645692469523979;
    constructor(a28, a29) {
        a28 - a28;
        const v31 = this?.constructor;
        v31.length = v31;
        try { new v31(1.0126260068434707e+308, C26); } catch (e) {}
        a28 != a28;
        try {
            this.length = 2;
        } catch(e35) {
        }
    }
    #m(a37) {
        const v38 = super.b;
        Math.abs(-2147483648);
        let v42 = -2147483648 / -2147483648;
        const v43 = ++v42;
        v42 || v38;
        Math.log10(-2147483648);
        Math.atan2(-2147483648, -2147483648);
        !v43;
        return 1.0126260068434707e+308;
    }
}
const v48 = C26?.__defineGetter__;
try { new v48(-7, v11); } catch (e) {}
new C26(-4.0, -4.0);
const v51 = new C26(-7.645692469523979, C26);
v51.length = v51;
const v52 = new C26(-7.645692469523979, C26);
v52.length;
const v56 = new Uint8Array(0);
try { v56.values(); } catch (e) {}
-1856077403 != 2522;
Float32Array.length;
new Float32Array(2522);
new Uint16Array(2522);
let v67 = 3409;
v67++;
const v69 = v67 - v67;
Uint8Array.BYTES_PER_ELEMENT = Uint8Array;
const v71 = new Uint8Array(4096);
const v72 = v71.includes(v69);
v72 && v72;
