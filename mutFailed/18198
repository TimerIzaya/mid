const v0 = [-9223372036854775807,-256];
[-8956,-20092,-65536,-1309960386,1755961208,537921544,8];
const v2 = [-38927,9007199254740990,21943,-2147483649,-4679,2147483647,31419,6];
new BigInt64Array(7);
new Int8Array(3692);
new Uint16Array(2652);
class C12 extends Uint16Array {
    [2652];
    4 = 3692;
    static {
        this.defineProperties = C12;
        let v14;
        try { v14 = this.getUTCDay(); } catch (e) {}
        const v16 = v14 === this ? v14 : this;
        try { this.defineProperties(v16, v0); } catch (e) {}
    }
    constructor(a19, a20, a21) {
        super(3692, 2652, 7);
        function f22(a23, a24) {
            a19 != Uint16Array;
            try { a21.findLastIndex(a23, a24); } catch (e) {}
        }
        new Promise(f22);
    }
}
new C12(v2, 7, v2);
new C12(v2, 7, v0);
new C12(v2, 7, v0);
const v32 = [0.23449681451060211,-1.3180974566102865e+308,-2.0,-1000000000.0,0.6107310765455765];
function f33(a34, a35) {
    const v36 = [9,1073741825,-4096,10,1,4294967297,911296943,-9223372036854775808,-53393,16];
    const v37 = [2147483648,-9223372036854775808,1073741823,-5827,17147,6507,0,255,61798];
    const v38 = [-10,2,536870888,-6,-10,-16,3090,-1132274585,-4612];
    class C39 {
        valueOf(a41, a42) {
            v36.length -= a41;
            return v38 % v37;
        }
        1 = v36;
        static #m(a45, a46) {
            return 5n;
        }
        2916208505 = v37;
    }
    let v50 = new C39();
    const o57 = {
        "g": v37,
        __proto__: a35,
        8: a34,
        176: a35,
        p(a52, a53, a54) {
            v50 = this;
            %VerifyType(this);
            v37["some"](a34, v36);
            return a35;
        },
        "d": v0,
    };
    return o57;
}
v32.toString = f33;
function f58(a59, a60, a61, a62) {
    for (let i66 = 0, i67 = 10;
        (() => {
            const v68 = i66 < i67;
            !v68;
            return v68;
        })();
        i67--) {
        for (let v75 = 0; v75 < 5; v75++) {
            ("number")[i66];
            "number" | v32;
        }
    }
    return a61;
}
f58(f58, v32, v32, v32);
%OptimizeFunctionOnNextCall(f58);
f58();
