class C3 {
    static #c = -4294967297;
    2948736616 = 0;
    constructor(a5, a6) {
        function f7() {
            function f8() {
                const v9 = C3?.b;
                Reflect.construct(C3, [Reflect,a6], v9);
                return a5;
            }
            return f8;
        }
        function f13(a14) {
            delete C3?.[0];
        }
        Object.defineProperty(a6, "valueOf", { writable: true, configurable: true, enumerable: true, get: f7, set: f13 });
        this[2948736616] = this;
        a5 - a5;
        a6 >>= 0;
        const v17 = [65536,3,16,-4096];
        v17[1] = v17;
        [-4294967297,2,49988];
        [257,268435441,-16,-2,2147483647,65535,-65535,27932,-37508];
    }
    [0] = -4294967297;
    8 = 4.474336095257989;
    static [-4294967297];
}
const v20 = new C3(0, 0);
function f21(a22) {
    C3 = a22;
    a22[-4294967297] = a22;
    return a22;
}
v20[Symbol.toPrimitive] = f21;
new C3(-4294967297, v20);
const v26 = new C3(0, v20);
v26[8];
[2.220446049250313e-16,-4.515277782785434,-1e-15,-322454.30183747795,-1000000000000.0,597.6590754206054,-2.0,2.58926687419134,542722.7058677995,-0.0];
[0.0,1000.0,0.18126723996855632,-1.7976931348623157e+308];
[2.0,-829423.8141805581,2.2250738585072014e-308,6.293580073762438,1.1502085594412403e+308];
const v33 = new Uint8Array(6);
v33[1];
let v35 = 9;
v35--;
new Float64Array(v35);
new Uint8ClampedArray(14);
function f42() {
    const o45 = {
        get b() {
            super[this] = this;
            return f42;
        },
        ..."b",
    };
    o45.toString = f21;
    try { o45.toString(); } catch (e) {}
    return o45;
}
const v49 = new Int32Array(2917);
v49.valueOf = Symbol;
v49[1833] = v49;
10 | 10;
-v49["lastIndexOf"](10);
const v55 = f42();
const v57 = new Int16Array();
try { v57.entries(); } catch (e) {}
Uint16Array.name;
const v62 = new Uint16Array(3);
try { v62.reverse(); } catch (e) {}
v62.reverse();
try { v55.assign(); } catch (e) {}
let v66 = 0;
class C68 {
    static {
        try { new this(); } catch (e) {}
        Object.defineProperty(this, -30745, { writable: true, enumerable: true, value: this });
    }
}
while (v66 < 7) {
    v66++;
}
