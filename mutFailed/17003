function f6(a7, a8, a9, a10) {
    const o23 = {
        set d(a12) {
            delete a10?.f;
            new Uint8ClampedArray(512);
            new Float64Array(3833);
            new Float32Array(7);
        },
        __proto__: a10,
        "e": 7,
        "g": a9,
    };
    return o23;
}
const v24 = f6(-536870912, 536870888n, 7, 10);
const v25 = f6(10, 536870888n, -536870912, v24);
const v26 = f6(-536870912, 536870888n, -536870912, v25);
function F30(a32, a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a33;
    } catch(e35) {
    }
    try {
        this.f = 7;
    } catch(e36) {
    }
}
new F30(-406967172n, 7, v24);
new F30(255n, 7, v26);
new F30(-406967172n, 7, v25);
let v41 = 0.0;
class C43 {
    #a = "9";
    65536;
    static h = v41;
    constructor(a45, a46) {
    }
}
const o52 = {
    "execution": "async",
    "type": "minor",
};
const t43 = 536870888n;
t43();
const v54 = new C43();
const v55 = new C43(v41, v54);
class C56 {
    #e = C43;
    valueOf(a58, a59, a60) {
        super.f;
    }
    constructor(a63, a64, a65) {
        v41 **= v41;
        try {
        } catch(e66) {
        }
    }
}
const v67 = new C56("boolean", v55);
const v68 = new C56(v67, v67);
const v69 = new C56(v68);
class C70 {
    p(a72, a73) {
        const v74 = super[a72];
        try {
            v69[a72];
        } catch(e76) {
            function F77(a79, a80, a81, a82) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.e = e76;
                } catch(e83) {
                }
                try {
                    this.b = v74;
                } catch(e84) {
                }
                try {
                } catch(e85) {
                }
            }
        } finally {
            [] = "boolean";
        }
    }
}
for (const v86 of "9") {
}
