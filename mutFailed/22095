class C3 {
    static #toString(a5) {
    }
    #n(a7, a8, a9, a10) {
    }
    #e;
    static 3;
    static get f() {
        [-1414790175,15,-1,-4294967297,-355049947,255];
        [9223372036854775807];
        [-1747246655,9007199254740990,4,429305191,65536,65490];
        return -2;
    }
    #n(a16) {
        return 2;
    }
    static [-2];
    static {
        let v21 = 0;
        while (v21 < 6) {
            v21++;
        }
    }
    [-7.591507573294098] = -7.591507573294098;
}
new C3();
const v27 = "p" + 2;
const v28 = v27.propertyIsEnumerable;
try { v28(v27); } catch (e) {}
Array(2048);
new C3();
new C3();
new BigUint64Array(3);
new Int8Array(16);
new Float32Array(3019);
const v44 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
function f45(a46, a47, a48, a49) {
    const v50 = /(?:a*)+q(?<a>.)/guds;
    function f51(a52) {
        v44.constructor.isArray(v50);
        return a52;
    }
    for (let i57 = 0, i58 = 10; i57 < i58; i58--) {
        f51(v50);
        new C3(C3, Uint16Array);
        for (let i70 = 0, i71 = 10;
            (() => {
                const v72 = i70 < i71;
                const v75 = new BigUint64Array(3375);
                let [v76,,v77,...v78] = v75;
                v76 >> v76;
                return v72;
            })();
            i70++) {
        }
    }
    return a46;
}
for (let v85 = 0; v85 < 5; v85++) {
    f45(v85, v85, v44, v85);
}
%OptimizeFunctionOnNextCall(f45);
f45(v44, v44, v44, v44);
new Int32Array(2917);
const v94 = new Uint32Array(16);
v94.length = 1073741824;
