new Float32Array(4096);
const v5 = new Int16Array(64);
new Int32Array(257);
class C12 extends Float32Array {
    147;
    4 = Int16Array;
    toString(a14, a15) {
        v5[4096];
        let v18 = -9007199254740990;
        2147483647 + 2147483647;
        Math.cosh(a14);
        --v18;
        a15 / a15;
        return this;
    }
}
new C12();
new C12();
new C12();
const v30 = new Uint8ClampedArray(4096);
function f31(a32) {
    try {
        new f31(Int16Array);
    } catch(e34) {
    }
    return Uint8ClampedArray;
}
const v38 = [v30];
const o39 = {
    "arguments": v38,
    "type": "function",
};
const v40 = new Worker(f31, o39);
v40.getMessage();
