[1000000000000.0];
[4.0];
const v2 = [-Infinity,1000000000000.0,0.8103519888447258,-0.0,-1.7976931348623157e+308,922.4353089714516,-6.693197755069491];
const v5 = ("async").lastIndexOf();
function f6(a7, a8) {
    const o9 = {
    };
    return o9;
}
Object.defineProperty(f6(), v5, { enumerable: true, get: f6, set: f6 });
new BigInt64Array(3);
const v14 = /4[\11]/giy;
v14.source = v14;
new SharedArrayBuffer(255);
class C19 {
    g;
    constructor() {
        const v21 = this.constructor;
        try { new v21(); } catch (e) {}
    }
}
for (const v24 in [-65535,536870889,4096]) {
    Math.log10(v24) ** 1000000000000.0;
}
try { new C19(); } catch (e) {}
const v30 = new Uint16Array(552);
9 << 9;
BigUint64Array.length;
const v37 = new BigUint64Array(2799);
try { v37.keys(); } catch (e) {}
function f39() {
    return ("D")[0].substring();
}
const v43 = new Uint32Array(9);
try { v43.entries(); } catch (e) {}
[NaN,-1.0,2.0,-781819.4939089833,-9.803323880960233,54341.76595047396,Infinity,-876747.2656210236,-1.7976931348623157e+308];
const v46 = [-4.5448309061729226e+306,1.7976931348623157e+308,2.0,0.5884934735297279,0.6313045650931188,-323.39898000427763,3.0,1000.0,-2.0];
try { v46.groupToMap(v30); } catch (e) {}
[408594.11484467424,2.0,1000000000000.0,1.6615340282351003e+308,2.2250738585072014e-308,1.334092441979888e+308,0.0,0.07036733684270757,1000000.0,-7.952135451528565e+307];
function F49() {
    if (!new.target) { throw 'must be called with new'; }
    function f52(a53, a54, a55, a56) {
        function f57() {
            const v60 = Math.expm1(a54);
            const v61 = Math.tanh("n");
            const o62 = {
                [v61]: v60,
            };
            return 3454;
        }
        f57();
        const v65 = eval();
        %OptimizeFunctionOnNextCall(f57);
        return v65;
    }
    const v67 = [F49,F49];
    const v68 = [v67,1141300185,F49];
    v68[2] = v68;
    let v69 = [this];
    const v70 = new v68();
    const t60 = v70.constructor;
    let v72 = new t60();
    const v73 = /[\11]/gm;
    function f74() {
        return v72 >>>= f74 != v73;
    }
    f74();
    try { v69.findLastIndex(9); } catch (e) {}
    Number.isNaN(Math.log2(v67));
    const v83 = v69++;
    ("function").length;
    const v86 = [-128,-204399241,1126169676,-39466,-37076,268435456,9223372036854775807,536870888,15798,-1632967117];
    const o89 = {
        get c() {
            return v86;
        },
        get d() {
            return v86;
        },
    };
    v83 >> v83;
    v83 ^ v83;
    Math.asinh(536870887);
    try {
        class C94 extends this.constructor {
            e = F49;
        }
        C94.caller;
        new C94();
    } catch(e97) {
        e97.g = e97;
    }
}
const v98 = new F49();
try { v98.toLocaleString(); } catch (e) {}
const v100 = new F49();
const v101 = v100?.__lookupGetter__;
try { new v101(v2); } catch (e) {}
new F49();
