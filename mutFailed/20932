const v5 = [];
const v6 = [];
function F7(a9) {
    if (!new.target) { throw 'must be called with new'; }
}
class C10 extends F7 {
}
const v11 = new C10();
const o18 = {
    set g(a13) {
    },
    [v6](a15, a16, a17) {
    },
};
for (const v19 in o18) {
    try { v5.flat(4096); } catch (e) {}
    v11.valueOf(v19);
}
new BigInt64Array(12);
new Float64Array(128);
const v30 = new Uint8Array();
function f31(a32, a33, a34, a35) {
    a34++;
    a34 % a34;
    const o41 = {
        "b": a32,
        ...v30,
        n(a39, a40) {
        },
    };
    return F7;
}
for (let v42 = 0; v42 < 625; v42++) {
    const v43 = f31(v42, 2, v42);
    try { v43(null); } catch (e) {}
}
new Uint16Array(64);
0 < 5;
new Int32Array(4096);
/(a\1)*/is;
new Date();
Float64Array.getUTCFullYear();
function F58(a60, a61, a62, a63) {
    if (!new.target) { throw 'must be called with new'; }
}
let v64 = Float64Array;
v64 = F58;
/[^a\w]/udy;
const v70 = [-4294967296];
class C71 {
}
const v74 = new Date();
v74.setUTCSeconds(C71, 128);
v70.length = 257;
