function F0() {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "c", { writable: true, value: F0 });
    try {
        this.d = 10;
    } catch(e3) {
    }
    function f4(a5, a6, a7, a8) {
        const o16 = {
            m(a10, a11, a12, a13) {
                a6.normalize();
                return this;
            },
        };
        return a5;
    }
    const v17 = f4(10, 10, f4, 10);
    try { F0.m(...10, f4); } catch (e) {}
    try {
        this.c = 10;
    } catch(e19) {
    }
    const v22 = new Uint8ClampedArray(1907);
    v22[7] = 43464885;
    try {
        v17.e = 10;
    } catch(e24) {
    }
}
function f25() {
    return F0;
}
function f26(a27) {
    for (let v28 = 0; v28 < 32; v28++) {
        a27["p" + v28] = v28;
    }
}
Object.defineProperty(F0, "m", { writable: true, get: f25, set: f26 });
let v31 = new F0();
const v32 = new F0();
const v33 = new F0();
const v37 = [v31];
function f38(a39, a40) {
    v31 = v32;
    try {
        f26([a40,v33,"object",v37,v32]);
    } catch(e43) {
    }
    return "grow";
}
v37.toString = f38;
[v31];
[v37,"object","object"];
const v46 = [18276,6,65537,8,-9007199254740991,-1537670737,268435440,6,-65536];
[-6,0,129,9007199254740992,1073741824];
function f48() {
    return f48;
}
class C49 extends f48 {
}
class C50 {
    constructor(a52, a53) {
        for (let v54 = 0; v54 < 500; v54++) {
            try {
                a52 &= a52;
            } catch(e55) {
                for (let v56 = 0; v56 < 5; v56++) {
                    function f57() {
                        return v54;
                    }
                }
            }
        }
    }
}
[-4294967297,0,9223372036854775807];
function f63(a64, a65) {
    const o68 = {
        "g": 1073741824,
        get d() {
            super[a64];
            return this;
        },
        "f": 3,
        ...a64,
        10: a64,
    };
    return o68;
}
const v69 = f63(f63);
f63(v69);
const v74 = ("boolean").repeat(1000000.0);
[-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
const v76 = [3,-6,7268,-554513674,5,4294967295,861325878,17152,2147483647,5];
const v77 = [256,64];
this.printErr();
const v82 = [520126.03439582814,827116.4087908485,-3.0];
const v84 = new Int16Array();
function f86() {
}
function f87(a88, a89, a90, a91) {
    const v92 = f86();
    const v94 = new Int8Array(v84);
    class C95 {
    }
    [-1024];
    for (let v97 = 0; v97 < 5; v97++) {
    }
    139837843 in v84;
    const v101 = 0 <= 0;
    const v102 = new Int8Array(v82, 15135, 15135);
    for (const v103 in v102) {
        0 ^ v101;
    }
    BigUint64Array * 536870887;
    function f108(a109, a110) {
        return v92;
    }
    Object.defineProperty(v94.buffer, "constructor", { writable: true, configurable: true, value: Date });
    new Int8Array();
    return f87;
}
function f113(a114, a115, a116) {
    const o127 = {
        ..."boolean",
        "e": v77,
        "c": v46,
        __proto__: v69,
        toString(a118, a119, a120, a121) {
            a116 instanceof a118;
            try { a114.trimEnd(); } catch (e) {}
            return "-1024";
        },
    };
    return a115;
}
f113(v76, v76, v33);
-"UZ";
try { v74.trimEnd(); } catch (e) {}
function f131(a132, a133) {
    const o142 = {
        [v37](a135, a136, a137, a138) {
            "grow" < a135;
        },
        "arguments": v46,
        4294967296: "boolean",
        set d(a141) {
        },
        "a": a132,
    };
    const v145 = new Int8Array(268435456);
    return v145;
}
try { f131(15135); } catch (e) {}
f131(925.1427495594241);
