function F1() {
    if (!new.target) { throw 'must be called with new'; }
}
const v4 = new F1();
class C5 {
    static set f(a7) {
        super.c = v4;
    }
}
new Int16Array(104);
new BigInt64Array(3872);
const v17 = [[-984503.961837067,-3.0,170.79545126331868]];
try {
    v17.e = 170.79545126331868;
} catch(e18) {
}
try {
} catch(e20) {
}
"ex7" <= Uint8ClampedArray;
new BigUint64Array(204);
const v26 = [-9007199254740991];
[-2147483649,-9280,-65536,9223372036854775807,2147483647];
("string").normalize("ex7");
v17 ^ "-792442332";
const t21 = "symbol";
delete t21[1];
[4294967295,255,9007199254740990,4096,48021,-5,982258705];
const v39 = new Float64Array();
for (let v40 = 0; v40 < 25; v40++) {
    const t30 = [-Infinity,1.7976931348623157e+308,1.0,1.7976931348623157e+308,-1.0,Infinity];
    t30.length >>>= -65536;
    const o44 = {
    };
    Math.cosh(v40);
    12204n <= -16;
    function f50() {
        return -2147483648;
    }
}
const v51 = [0.6962759092984843];
let v52 = [4.55590263310031,1e-15,2.220446049250313e-16,4.0,3.0];
class C53 {
    constructor(a55, a56, a57, a58) {
        v52 = a56;
    }
}
new C53(v51, C53, C53, v51);
Symbol.matchAll;
v39[v26];
