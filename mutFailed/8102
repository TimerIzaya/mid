const v0 = /l*/y;
const v1 = /[\ca]nxyz{1,32}+/vdms;
const v2 = /9o(?=)/gudi;
const v6 = [-2,1938420925,9007199254740991,37905,2,10];
[1024];
[2147483648,-22260,62976,8642,-2147483648,2147483647,-2147483647,10704,127,-1];
function f9(a10, a11, a12, a13) {
    const o21 = {
        "g": a10,
        valueOf(a15, a16, a17) {
            v6[2253667095];
            a13 >>= a11;
            try { this["Ol2v"]("Ol2v", this); } catch (e) {}
            return v2;
        },
        1760: v1,
        2: 1825385118,
    };
    return o21;
}
f9(-18265, 1825385118, 1825385118, -18265);
f9(-429797243, -18265, -429797243, -429797243);
f9(1825385118, -429797243, 1825385118, -18265);
let v29 = -9223372036854775808;
for (let i = 0; i < 5; i++) {
    v29 < 4;
    v29++;
}
function F34() {
    if (!new.target) { throw 'must be called with new'; }
    const o37 = {
    };
    o37.cause = 19793;
    const o38 = {
    };
    o38.e = 19793;
    o38.h = Int8Array;
    const o39 = {
    };
    o39.h = 58;
    const v41 = Array(19793);
    for (const v42 of v41) {
    }
    const v43 = [v41,v41,v41,v41];
    new BigUint64Array(F34, v0, v6);
    [];
    [[v43,v43,v43]] >= Uint16Array;
}
new F34();
