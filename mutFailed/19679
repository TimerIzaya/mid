function F2(a4, a5, a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
    function f8() {
        return F2;
    }
    class C9 extends f8 {
        constructor(a11) {
            super();
            for (let v12 = 0; v12 < 25; v12++) {
                this["p" + "p"] = v12;
            }
        }
    }
    new C9();
}
new Uint32Array(257);
const v19 = Math.round();
async function f20(a21, a22, a23) {
    await v19;
    const v25 = [601759695];
    function F26() {
        if (!new.target) { throw 'must be called with new'; }
        for (let v28 = 0; v28 < 1000; v28++) {
            ("p" + v28).fontcolor();
        }
    }
    new F26();
    b = v25;
}
const v34 = new Uint32Array(245);
new Int8Array(8);
Uint16Array[1] = 1277001064;
const v41 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v42 = [601759695];
const v43 = [1073741824,1073741823,1376142744,1073741825];
function f45(a46, a47, a48, a49) {
    function f51() {
        const o58 = {
            "e": -4294967295,
            ...v41,
            ..."Vre",
            "c": a49,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a56, a57) {
                return a57;
            },
            ..."Vre",
            4: "Vre",
            5: -4294967295,
            6: -268435456,
        };
        return v42;
    }
    f51();
    %OptimizeFunctionOnNextCall(f51);
    let v61;
    try { v61 = v43[a48](..."find", a49, ...v42, ...v43, ...522675525n); } catch (e) {}
    v61 <= a48;
    return arguments;
}
f45();
f45(v43, f45, 522675525n);
[-919.8850580594011];
[0.1689853888722871,Infinity,-1.7976931348623157e+308,939037.413673843,-647.0922209238854,0.506930098085138,1.537974661750857e+308,-1000000000.0,-1000.0];
[-679354.768712559,Infinity,4.978630239030746,539.9226106826957,3.0,48600.7930117785];
for (let [v70,v71] of v34) {
}
let v73 = -(-1e-15);
v73--;
/((?<a>.)\k<a>)/gvm;
