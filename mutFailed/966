class C3 {
    static {
        super.c;
        let v6 = BigUint64Array;
        new Uint32Array(2897);
        const v12 = new Int32Array(2276);
        let v14 = v12.reduce(512, 4, 512, -2147483649, 512, 2897);
        ({"c":v14,"e":v6,} = C3);
        function f15() {
            return 2897;
        }
        const v17 = new BigUint64Array(512);
        try { v17.join(512); } catch (e) {}
    }
    b = 536870887;
    static e = 4;
}
const v19 = new C3();
const v20 = v19.b;
const v21 = new C3();
v21.b;
new C3();
let v25;
try { v25 = v20(); } catch (e) {}
try { v25.search(536870887, v20, v25); } catch (e) {}
v20.a /= -2147483649 & v21;
BigInt64Array.g = BigInt64Array;
const v32 = new BigInt64Array(2359);
v32[2135];
const v36 = new BigInt64Array(128);
const v37 = v36?.findLastIndex;
try { new v37(BigInt64Array); } catch (e) {}
const v41 = new Int8Array(203);
const v43 = ("128").fontsize();
try { v43.split(4, v41); } catch (e) {}
