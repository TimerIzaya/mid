function f0() {
    let v2 = 61652;
    const o22 = {
        get c() {
            const v5 = this.e;
            try {
                super.m(257, v2, this, v5);
            } catch(e7) {
            }
            return v5;
        },
        ..."2",
        [v2](a9) {
            try { a9(a9, this, v2, a9); } catch (e) {}
            a9?.["2"];
            const v16 = v2++;
            const v17 = 9007199254740992 ^ 10;
            v16 ** v2;
            Math.sqrt(1000.0);
            ~v17;
            -10;
            return a9;
        },
    };
    f0[61652];
    return o22;
}
const v24 = f0();
const v25 = f0();
const v26 = f0();
function F27(a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    const v31 = f0?.constructor;
    try { new v31(this, v25); } catch (e) {}
    v26[61652];
    a30[61652];
    try {
        this.g = v24;
    } catch(e35) {
    }
    try {
        this.a = v24;
    } catch(e36) {
    }
}
const v37 = new F27(v26, v24);
new F27(v25, v24);
new F27(v24, v26);
268435456 !== 268435456;
new Boolean(268435456, Boolean);
try { new parseInt(F27, v37, v37); } catch (e) {}
new parseInt(123);
try { new Int8Array(268435456, v25, v25); } catch (e) {}
new Int8Array(-1024);
new Int32Array([-4563]);
