class C3 {
    p(a5) {
        5.0 / -2.220446049250313e-16;
        class C9 {
        }
        let v10;
        try { v10 = new a5(788.2645417630008, this, this, 788.2645417630008, this, ..."f"); } catch (e) {}
        const v11 = ("-9223372036854775807").__proto__;
        try {
            const t9 = "-9223372036854775807";
            t9.__proto__ = v11;
        } catch(e12) {
        }
        return v10;
    }
    2147483649 = "-9223372036854775807";
    #n(a14) {
        [-256,10000,-8];
        [0,512,127,-7065,1000,2];
        [1073741825,2147483648,1073741823,107209517,268435441,4294967296,268435441,-34471];
        return a14;
    }
}
const v18 = new C3();
(788.2645417630008)[2147483649];
const v20 = new C3();
const v21 = new C3();
v21[2147483649] = v21;
const v22 = ["f",v21,v21,"f","f"];
const v23 = ["f",v22];
try { v23.map(788.2645417630008); } catch (e) {}
const v25 = [v23];
function f26() {
    return v22;
}
f26.d = f26;
function F27(a29, a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    a29 + a29;
    a29[0];
    a30[0] = a30;
    try {
        this.d = v20;
    } catch(e34) {
    }
}
F27.length = F27;
try { new F27(788.2645417630008, v25, "f"); } catch (e) {}
const v36 = new F27(v25, v25, "f");
v36.d = v36;
new F27(v23, v22, v18);
const v38 = new F27(v25, v25, v21);
const v39 = v38?.constructor;
v39.caller = v39;
try { new v39(v36, F27, F27); } catch (e) {}
function f41(a42, a43) {
    const o44 = {
        ...a42,
    };
    o44.d;
    o44.e = o44;
    a42.g = o44;
    return f41;
}
try { f41(v38, v38); } catch (e) {}
f41.d = f41;
%PrepareFunctionForOptimization(f41);
const t67 = f41();
const v49 = t67(f41)?.constructor;
try { new v49(v22); } catch (e) {}
function f52(a53) {
    function f54() {
        return a53;
    }
}
this.onmessage = f52;
%OptimizeFunctionOnNextCall(f41);
f41();
