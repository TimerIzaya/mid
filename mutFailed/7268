function F0() {
    if (!new.target) { throw 'must be called with new'; }
    function f2() {
        const v3 = [0.00952483356421907,-3.0,2.220446049250313e-16];
        function f4() {
            return v3;
        }
        return F0;
    }
    Object.defineProperty(this, Symbol.toPrimitive, { enumerable: true, value: f2 });
    try {
        this.f = 2147483647;
    } catch(e8) {
    }
    try {
        this.c = 2147483647;
    } catch(e9) {
    }
}
const v10 = new F0();
const v11 = new F0();
function f12(a13, a14) {
    const v15 = [-3,47741,-16128,9007199254740992,-1024,-58567,268435439,-4294967296,1807295090,-9223372036854775808];
    v15.flat();
    return v15;
}
v11[Symbol.toPrimitive] = f12;
const v19 = new F0();
class C20 {
    get f() {
        v10 <= v10;
        for (let v23 = 0; v23 < 32; v23++) {
            v11["p" + v23] = v10;
        }
        return v19;
    }
    5;
    static 1;
    1642 = F0;
    d = v11;
}
const v28 = -25283n >> (-25283n && -25283n);
v28 | v28;
const v30 = new C20();
const v31 = new C20();
new C20();
function f36(a37, a38) {
    const o44 = {
        ...a38,
        __proto__: a37,
        [v11]: a37,
        ...v10,
        "d": F0,
        "a": C20,
        "b": v11,
        [v30]: v11,
        ["FNLdZ"](a40, a41) {
            try {
                super.values(a38, v10, a41, a41);
            } catch(e43) {
            }
            return this;
        },
    };
    return o44;
}
const v45 = f36("4096", v11);
f36("FNLdZ", v19);
f36("MAX_VALUE", v19);
const v48 = [];
function f49(a50, a51) {
    const v53 = [a50];
    return Reflect.apply(("4096").charCodeAt, v10, v53);
}
v48.toString = f49;
const v56 = [v48,v48];
function f57(a58, a59) {
    function f60() {
        return -25283n;
    }
    return v31;
}
v56.toString = f57;
function F61(a63) {
    if (!new.target) { throw 'must be called with new'; }
}
class C64 extends F61 {
    valueOf(a66, a67, a68, a69) {
        function f70(a71) {
            /\cj\cJ\ci\cI\ck\cK+/uisy;
            /foo|(bar|baz)|quux(?:ab)+/vdims;
            /0Y/gvdims;
            return v45;
        }
        this.valueOf = f70;
        super[this] = F61;
        const v77 = new SharedArrayBuffer(945);
        new Int16Array(v77);
    }
}
const v80 = new C64();
const o87 = {
    set g(a82) {
    },
    [v56](a84, a85, a86) {
    },
};
v48.length = 65535;
for (const v89 in o87) {
    try { v80.valueOf(); } catch (e) {}
}
