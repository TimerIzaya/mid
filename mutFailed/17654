const v0 = [];
16n / 16n;
function f5(a6, a7) {
    const v8 = a7?.keys;
    try { new v8(); } catch (e) {}
    const o16 = {
        "a": a6,
        set d(a11) {
            super[a7] = this;
            try {
                this.fuck(0, /1l/gvdimsy, 0, a6);
            } catch(e15) {
            }
        },
        "b": a7,
        __proto__: v0,
        "c": a6,
        "f": 16n,
    };
    return o16;
}
const v17 = f5(f5, v0);
const v18 = f5(16n, f5);
const v19 = f5(v17, v17);
const v20 = [4294967297,-4294967297,-2147483647];
const v21 = [1024];
v21[0] = v21;
[-268435456,-11331944];
function f23() {
    return 9007199254740991n;
}
class C24 extends f23 {
    d;
    static set b(a26) {
        const o27 = {
            "call": f5,
            "preventExtensions": f5,
        };
        new Proxy(v18, o27);
    }
    toString(a31, a32, a33) {
        let v35;
        try { v35 = v19["abs"]("abs", v20, v17); } catch (e) {}
        return v35;
    }
}
const v36 = new C24();
let v37;
try { v37 = v36.toString(v19, 9007199254740991n, v19); } catch (e) {}
new C24();
new C24();
for (let v40 = 0; v40 < 25; v40++) {
    function f41() {
        return f41;
    }
    const v42 = [601759695];
    const v43 = [1073741824,1073741823,1376142744,1073741825];
    function f44(a45, a46, a47, a48) {
        function f49() {
            return a45;
        }
        f49.arguments = f49;
        const v50 = f41();
        const v52 = new Int8Array();
        try { v52.entries(); } catch (e) {}
        v20[v37];
        throw a48;
        Int8Array instanceof f44;
        a47 = v42;
        v42[v37];
        new Uint32Array();
        [v50,v50,v50];
        536870887 % 536870887;
        BigUint64Array * 536870887;
        let v65;
        try { v65 = v43["find"](..."find", a48, ...v42); } catch (e) {}
        return v65;
    }
    try { f44(f44, v43, f44, v42); } catch (e) {}
    for (let v67 = 0; v67 < 10; v67++) {
        f44();
    }
}
