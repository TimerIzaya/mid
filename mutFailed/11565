class C3 {
    127;
    static [-2147483647n] = 8n;
    static #c = 8n;
    static #g = -2147483647n;
    static [-9223372036854775808n];
    static o(a5, a6) {
        try { a6(a5); } catch (e) {}
        function f11(a12, a13, a14, a15) {
            function f16() {
            }
            class C17 extends f16 {
                toString(a19, a20) {
                    const t13 = this.constructor;
                    new t13();
                    -this;
                }
            }
            const v24 = new C17();
            try { v24.toString(); } catch (e) {}
            for (let i = 0; i < 5; i++) {
                ["object"];
            }
        }
        f11();
        Math.sign(~a6);
        a5--;
        -1024 / -9223372036854775808n;
        return 8n;
    }
}
new C3();
new C3();
new C3();
const v41 = new Float64Array(4);
new Float64Array(129);
new Float64Array(1000);
function f48() {
    const v54 = new Int32Array(["toString","toString","toString","toString","toString"]);
    new Uint8Array(v41, v54, Int32Array);
    class C57 {
        constructor(a59, a60) {
            const v61 = this.constructor;
            try { new v61(f48, C57, -7); } catch (e) {}
            this[-2147483648] >>>= -7;
            for (let v63 = 0; v63 < 5; v63++) {
            }
        }
    }
    new Uint8Array();
    return -7;
}
const t52 = f48();
t52();
f48();
