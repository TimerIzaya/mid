function f0() {
}
const v1 = /[(?<a>)*]/vims;
const v2 = /Z(?<a>.)\k<a>/um;
/37bG+/guimy;
new Int16Array(9);
const v9 = new Int16Array(173);
new Uint8Array(16);
class C16 {
    static 16;
    d = f0;
    256 = v2;
    static [16] = -2147483649;
    c;
    constructor(a18) {
        function* f19(a20, a21) {
            try {
                this.d = Uint8Array;
            } catch(e22) {
            }
            yield v9;
            return a21;
        }
        f19(9, 173);
        let v25;
        try { v25 = this.isInteger(a18, -2147483649, -7.693050480934223, a18, a18); } catch (e) {}
        function F26(a28, a29, a30) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.h = this;
                a28 * v9;
                try {
                    v1.length = 52;
                } catch(e33) {
                }
            } catch(e34) {
            }
            try {
                this.c = a18;
            } catch(e35) {
            }
        }
        const v36 = new F26(F26, -1.7976931348623157e+308, v25);
        new F26(v36, -1.7976931348623157e+308);
    }
}
function F38(a40, a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
}
const v44 = new F38();
try { v44(); } catch (e) {}
let v46 = 0;
do {
    v46++;
} while (v46 < 5)
