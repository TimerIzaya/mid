function f0() {
    -1.7976931348623157e+308 / -1.7976931348623157e+308;
    const o20 = {
        "b": -1.7976931348623157e+308,
        ..."-256",
        "g": "-256",
        "c": -1.7976931348623157e+308,
        536870889: -1.7976931348623157e+308,
        ["-256"]: 5.0,
        m(a6, a7) {
            const v8 = a6?.h;
            function F9(a11, a12, a13, a14) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.h = a6;
                } catch(e15) {
                }
                try {
                    a6.d = a12;
                } catch(e16) {
                }
            }
            const v17 = new F9(-1.7976931348623157e+308, F9, "-256", F9);
            const v18 = new F9(v17, "-256", v17, a7);
            new F9(v18, v8, v8, 5.0);
            return v17;
        },
    };
    return o20;
}
f0();
const v22 = f0();
f0();
class C24 extends f0 {
    get f() {
        f0 & this;
        %VerifyType(v22);
        /(?!\1(a\1)\1)\1/di;
        /[xyz]/ud;
        const v29 = /(x)(x)(x)\2(a||bc)/guis;
        for (let v30 = 0; v30 < 32; v30++) {
            v29["p" + v30] = v30;
        }
        return C24;
    }
}
new C24();
const v34 = new C24();
v34.b = v34;
new C24();
/[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]/gudmsy;
/\w|\d/gds;
const v38 = /\P{Any}/gu;
v38.dotAll = v38;
[-4.556894260834262e+307,5.0,2.2250738585072014e-308,-5.0,338290.8792571055,-5.716810855897687e+307,1000.0];
class C42 extends Map {
}
try { Date.parse(Date); } catch (e) {}
class C45 {
    static {
        this.prototype = this;
        const v47 = [601759695];
        const v48 = [1073741824,1073741823,1376142744,1073741825];
        function f49(a50, a51, a52, a53) {
            try { new a50(); } catch (e) {}
            ~a52;
            let v56;
            try { v56 = new a50(); } catch (e) {}
            const v57 = v56?.constructor;
            try { new v57(); } catch (e) {}
            a52 << a52;
            function f60() {
                return f60;
            }
            const v62 = new Int8Array();
            -536870887;
            const v66 = BigUint64Array * 536870887;
            v66 - v66;
            const v70 = Number.isNaN(v66 ** v66);
            v70 || v70;
            function f72(a73, a74) {
            }
            const v75 = f72?.constructor;
            try { new v75(a53); } catch (e) {}
            try { f72(); } catch (e) {}
            function f78(a79, a80) {
                const v81 = [1000000000.0,2.2250738585072014e-308,-3.0,-2.2250738585072014e-308,-2.2250738585072014e-308,-6.525028373249204e+307,-7.851646360254072e+307,0.6785915059434757,-0.0];
                class C82 {
                }
                const v84 = Symbol.replace;
                Symbol.for(v84.description);
                C82[v84] = v81;
                return f78;
            }
            const v88 = f78?.constructor;
            try { new v88(v56); } catch (e) {}
            %PrepareFunctionForOptimization(f78);
            f78();
            %OptimizeFunctionOnNextCall(v56);
            f78();
            const v92 = v62.buffer;
            const v93 = v92.__defineGetter__;
            v93.name;
            try { v93(); } catch (e) {}
            Object.defineProperty(v92, "constructor", { writable: true, configurable: true, value: Date });
            %OptimizeFunctionOnNextCall(f60);
            let v97;
            try { v97 = v48["find"](..."find", a53, ...v47); } catch (e) {}
            const o98 = {
            };
            o98.e = o98;
            o98.e = this;
            o98.e = this;
            v97 <= a52;
        }
        for (let v100 = 0; v100 < 5; v100++) {
            v100 >>> v100;
            f49(this, v100, v100);
        }
    }
}
