const v5 = new BigUint64Array(3);
class C7 {
    constructor(a9, a10, a11, a12) {
        const o13 = {
        };
        new Proxy(v5, o13);
    }
}
new C7();
function f17(a18, a19, a20, a21) {
    for (let v22 = 0; v22 < 25; v22++) {
        a19[BigUint64Array + v22] = v22;
    }
    return a21;
}
new Uint32Array(664);
new Uint8ClampedArray(16);
const v30 = [];
class C31 {
    static set f(a33) {
        a33(this, this, a33, v30);
    }
    constructor(a36, a37, a38) {
        const v41 = new Uint32Array(a36);
        class C42 {
            constructor(a44, a45, a46, a47) {
                for (let v48 = 0; v48 < 5; v48++) {
                    v41[v48] = a47;
                }
            }
        }
        const v49 = new C42();
        function f50(a51, a52, a53) {
            %VerifyType(-268435456);
            let v55;
            try { v55 = this.valueOf(a36, a51, a52, 664); } catch (e) {}
            a38[a36] = v55;
            const v56 = [a53,Uint32Array,v49];
            [v56,a38,v56,a52];
            [a38];
            v30.copyWithin();
            try {
                f50(-268435456, 0.6683462416314783, [-268435456]);
            } catch(e63) {
            }
            const o65 = {
                "maxByteLength": 10000,
            };
            function f66() {
                return f66;
            }
            const v67 = this >> -268435456;
            v67 >> this;
            return -v67;
        }
        f50(this, this, a37);
    }
}
class C71 extends C31 {
}
const v72 = new C71();
new C31(v72, v72, C71);
