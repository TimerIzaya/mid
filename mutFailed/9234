const v1 = new Set();
function f2(a3) {
    const o11 = {
        "a": v1,
        o(a5, a6) {
            const v7 = super[a3];
            for (let v8 = 0; v8 < 32; v8++) {
                a3["p" + v8] = v8;
            }
            return v7;
        },
        ...v1,
    };
    return o11;
}
f2(v1);
const v13 = f2(f2);
f2(Set);
new Uint32Array(420);
new Int32Array(2057);
new Int8Array(260);
const o28 = {
};
o28.h = o28;
const v30 = !o28;
const v31 = 1842642860 % v30;
v31 % v31;
const v33 = new WeakMap();
try { v33.delete(v30); } catch (e) {}
class C37 {
    static {
        try {
        const t0 = "boolean";
        t0(this);
        } catch (e) {}
    }
}
try { new C37(); } catch (e) {}
const v42 = ("isInteger")?.replaceAll;
const v49 = [-2147483647,64098,-9383,1024,129,-5];
[1000,-16,-38597,12,-3399,32508];
const v51 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v53 = new Uint32Array();
const v55 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v56 = [601759695];
const v57 = [1073741824,1073741823,1376142744,1073741825];
function f59(a60, a61, a62, a63) {
    function f65() {
        let v68 = Float64Array;
        v68 = a61;
        b = v56;
        v51.length;
        try {
            v57.forEach(a61);
        } catch(e71) {
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o73 = {
        };
        const o95 = {
            "c": -4294967297n,
            "c": v56,
            valueOf(a76, a77) {
            },
            1073741824: v53,
            "maxByteLength": -268435456,
            "b": -4294967295,
            [-4294967297n](a79, a80, a81, a82) {
                class C84 extends Date {
                    static get c() {
                    }
                }
                eval();
                class C88 {
                    constructor(a90, a91, a92, a93) {
                        arguments[0] = arguments;
                    }
                }
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v55,
            256: a63,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            6: -268435456,
        };
    }
    f65();
    const v98 = new Int8Array();
    v98.buffer.slice(2147483648);
    const v104 = new Int32Array(1024);
    v104[3];
    for (let v106 = 0; v106 < 10; v106++) {
    }
    %OptimizeFunctionOnNextCall(f65);
    let v108;
    try { v108 = v57["find"](..."find", a63, ...v56, ...v57, ...522675525n); } catch (e) {}
    v108 <= a62;
    return arguments;
}
for (let v110 = 0; v110 < 10; v110++) {
    f59();
}
%OptimizeFunctionOnNextCall(f59);
f59();
[-50328,-14,3,128,-11,64,-65535];
class C114 {
    [v49] = -1000000.0;
    constructor(a116, a117, a118, a119) {
        %VerifyType(a119);
        super[this];
    }
    g;
    c;
    #toString(a122, a123, a124) {
    }
    1 = 257n;
}
new C114(1073741825n, 1.0, 7.589647165982214);
const v126 = new C114(411585671n, -1000000.0, -1000000.0, 1.0);
new C114(v126, -1000000.0, 1.0);
/(?:a*)+bU\u0034xyz{1,32}/udi;
/vfoo|(bar|baz)|quux/gvds;
/JO/gvy;
~v30;
Math.acos(478427087n);
o28 & 1853475754;
1853475754 % +478427087n;
Math.log2(o28);
class C142 {
    #m(a144, a145) {
        function f146() {
            return a145;
        }
        super[a145] = "f";
        %VerifyType(a145);
        return f146;
    }
    static c;
}
try { C142(); } catch (e) {}
const v148 = new C142();
const v149 = new C142();
v149?.constructor;
const v151 = new C142();
v151?.constructor;
class C153 {
    p(a155) {
        this.g ^= this[8];
    }
    static #n(a158, a159, a160, a161) {
    }
    7 = v151;
    #a = v149;
}
const v162 = new C153();
v162[7] = v162;
const v163 = new C153();
v163[7] = v163;
const v165 = [[],"f",v151,381717.6504737276];
Reflect.construct(Int16Array, [[-1,16,65536]]);
let v171 = 1073741824;
class C173 {
    constructor(a175) {
        [a175,v171] = "boolean";
    }
}
const v176 = new C173(Int16Array);
const v177 = new C173();
function f179(a180, a181, a182) {
    a180[22] = a180;
    const o183 = {
        ...a182,
        2: v176,
        268435439: C173,
    };
    return o183;
}
f179(v177, "-65537", v171);
[v148];
function F186() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(); } catch (e) {}
}
new F186();
const v190 = new F186();
function F191(a193, a194) {
    if (!new.target) { throw 'must be called with new'; }
    const v195 = a194?.__lookupGetter__;
    try { v195(); } catch (e) {}
    try { this.constructor(F191, this); } catch (e) {}
    a193.e = a193;
}
F191.arguments = F191;
new F191(v190);
("Hyo9")[1];
const t200 = "at";
t200[1] = "at";
([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap?.constructor;
const v205 = [-4.202468609045087];
try { v205.every(v165); } catch (e) {}
[0.8434386161503777];
("4i")?.toWellFormed;
const t206 = "4i";
t206[1] = "4i";
const t210 = "RpXR";
t210[3] = "RpXR";
const t212 = "RpXR";
t212[1] = "RpXR";
("c")?.toLocaleUpperCase.length;
class C215 {
    constructor(a217) {
        ("valueOf").localeCompare(a217, "valueOf");
    }
}
const v219 = new C215();
const t221 = v219.constructor;
new t221(C215);
try { new v42(Set, C37); } catch (e) {}
9 >> 9;
try { Uint32Array.from(15n); } catch (e) {}
const v231 = new Uint32Array(2432);
const o232 = {
    ...v231,
};
const v234 = 9007199254740991n * 9007199254740991n;
v234 * v234;
Math.sin(-5345);
function f239() {
    const o250 = {
        [-1000000.0]: 0.0,
        "d": 15n,
        ...v57,
        toString(a243, a244, a245, a246) {
            return v13 * a246;
        },
        set e(a249) {
        },
    };
    return f239;
}
f239.caller = f239;
const v251 = f239();
const v252 = f239();
class C253 {
    static [f239] = v252;
}
try { C253.bind(v251); } catch (e) {}
