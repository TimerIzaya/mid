16 | 16;
const v6 = new BigInt64Array(16);
const v9 = new Float32Array(8);
const v10 = v9[7];
const v13 = new BigInt64Array(1982);
Uint8Array[1] = v6;
const v15 = new Uint8Array(Uint8Array, Uint8Array, Uint8Array);
try { v15.slice(v13, v9); } catch (e) {}
const v19 = ("undefined").localeCompare();
const v20 = [v19,v19,v19];
const v21 = [v19,v19,v19];
const v22 = [v20,v21,v21];
v22[2] = v22;
const v23 = new Float64Array(v22, Uint8Array, v22);
let v24;
try { v24 = v23.keys(); } catch (e) {}
const v25 = v24.__lookupSetter__;
try { v25(); } catch (e) {}
let v27 = 128;
v27 >> v27;
v27--;
const v31 = new v15();
try { v31.some(v27); } catch (e) {}
const v33 = v31.keys();
try { v33.next(); } catch (e) {}
const v36 = 8.423204300745166 - 8.423204300745166;
const v38 = new WeakSet();
try { v38.delete(v13); } catch (e) {}
function f40(a41, a42, a43, a44) {
    const o45 = {
    };
    return o45;
}
v10.caller = f40;
const v46 = f40();
v46.h = v46;
const v47 = f40();
v47.h = v47;
v47.lastIndexOf = 536870887;
const v48 = v36[268435441];
const v49 = [-14339,735253629,4294967296,3,268435456,3,57019,268435439];
function f50(a51) {
    try { f50(v38, a51); } catch (e) {}
    function f53(a54, a55, a56, a57) {
    }
    try { f53(v9, v9, 8, v9); } catch (e) {}
    return a51;
}
Object.defineProperty(v49, "toString", { writable: true, configurable: true, value: f50 });
let v59;
try { v59 = v47.lastIndexOf(); } catch (e) {}
const v60 = f40();
let v62;
try { v62 = ("iterator").strike(WeakSet, v48, v20, v60); } catch (e) {}
const v63 = v62.padStart(v13);
try { v63.codePointAt(v59); } catch (e) {}
class C65 {
}
let v66;
try { v66 = C65(); } catch (e) {}
C65.prototype;
for (let i71 = 0, i72 = 10;
    (() => {
        const v73 = i71 < i72;
        !v73;
        class C75 extends Date {
        }
        return v73;
    })();
    i71++) {
}
const t71 = 8.423204300745166;
const v82 = new t71(v19);
try { v82.lastIndexOf(v82); } catch (e) {}
v82.BYTES_PER_ELEMENT = v66;
