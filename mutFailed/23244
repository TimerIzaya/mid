class C3 {
    constructor(a5, a6) {
        a5 >> a5;
        class C8 {
            g = a6;
            static #b;
            #g;
        }
        new C8();
        const v10 = new C8();
        v10.e = v10;
        new C8();
    }
    set d(a13) {
        for (const v14 in C3) {
        }
    }
    static {
        try {
            this.#d;
        } catch(e17) {
        }
    }
    10000;
    static #b;
    [2.0];
}
const v18 = new C3(2.0, 2.0);
v18[10000] = v18;
const v19 = new C3(2.0, v18);
v19[2];
new C3(8, 8);
class C28 extends Set {
}
const v29 = new C28();
v29["delete"](129n);
new Uint32Array(4096);
function f35(a36, a37) {
    const o41 = {
        __proto__: a37,
        "b": a37,
        [a36]: a37,
        "c": a36,
        "e": a37,
        valueOf(a39, a40) {
            super[a39] = "undefined";
            return a40;
        },
    };
    return a36;
}
let v42 = 4;
v42--;
new Uint32Array(v42);
const v46 = [];
v46.toSpliced(v46);
Symbol.toPrimitive;
function f50() {
}
Int8Array.name;
const v54 = new Int8Array(3021);
try { Math.expm1(Math); } catch (e) {}
const v57 = Math.__defineSetter__;
try { new v57(Uint32Array, v54); } catch (e) {}
try { v57(); } catch (e) {}
function f60() {
    return f60;
}
([]).groupToMap(f60);
