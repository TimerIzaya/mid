function F2() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = true;
    let v4 = 1024;
    v4 *= -9223372036854775808;
    const v7 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
    new F2(v7, Uint32Array, Uint32Array, Uint32Array);
}
const v9 = new F2();
function f10(a11, a12) {
    const o23 = {
        ...a12,
        get h() {
            new Uint16Array(9);
            const v21 = new Uint8ClampedArray(([127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649]).toSpliced(-1148418937, -1148418937));
            v21.lastIndexOf(-1148418937);
            return this;
        },
    };
    return a12;
}
f10();
f10(v9, v9);
new BigUint64Array(1024);
new Float64Array(256);
let v31 = 2156;
v31--;
for (const v33 in v9) {
    (delete v9?.h).__proto__;
}
class C36 {
    constructor(a38) {
        let v39 = "atan2";
        try { a38[v39](); } catch (e) {}
        v39++;
    }
}
new Int32Array(v31);
const v46 = new Array(2);
try { v46.toString(); } catch (e) {}
[-28776,-25197,-20580,4294967295,998023760,0,-536870912,9007199254740992,-64253];
[8,4294967295,-947028139,-268435456,-2147483647,-39441];
const v50 = [4294967297,268435456,-9223372036854775808,-536870912,1050300628,1569512968,2,-9007199254740992,507212059,8];
try { v50.flat(); } catch (e) {}
function F52(a54, a55, a56, a57) {
    if (!new.target) { throw 'must be called with new'; }
    const v58 = ~a55;
    v58 >>> v58;
    a57 | a57;
    const v61 = this.constructor;
    new Uint8ClampedArray(104);
    function f65() {
    }
    class C66 extends f65 {
    }
    const v67 = new C66();
    function f68() {
        const v71 = Array(4087);
        v71[351] = v67;
        for (const v72 of v71) {
        }
        return Array;
    }
    try { v61.toString(); } catch (e) {}
    function f74(a75, a76, a77, a78) {
        const o83 = {
            [f74](a80, a81, a82) {
            },
        };
        return a78;
    }
    try { new v61(); } catch (e) {}
    typeof Float32Array;
}
try { new F52(Int32Array, 1024, Int32Array, Array); } catch (e) {}
new F52();
new F52();
