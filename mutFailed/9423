const v0 = [];
const v1 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
try {
    v1.forEach();
} catch(e3) {
    const t5 = v0?.constructor;
    t5();
}
function f6() {
    const o14 = {
        216: v0,
        ...f6,
        valueOf(a8) {
            const o9 = {
                __proto__: this,
            };
        },
        "a": v0,
        "f": v0,
        [v0]: v0,
        toString() {
            try {
                this.toString = this;
            } catch(e11) {
            }
            const v12 = delete this[5];
            try { this.n(v12); } catch (e) {}
            return v1;
        },
    };
    return o14;
}
const v15 = f6();
const v16 = f6();
const v17 = f6();
const v18 = [-2147483648,-1582816723,-2147483647,-268435456,53462,-30985];
const v19 = [774625275,-536870912];
const v20 = [-14,2,-9,-9223372036854775808];
try { v20.findLastIndex(v20); } catch (e) {}
-3.0 & -3.0;
const v26 = [v16,-3.0,v17,v18,v15];
[v0,v26,v0,v26];
[v19,f6,f6];
try { ("function").italics(); } catch (e) {}
let v33;
try { v33 = ("function")["-268435456"](); } catch (e) {}
const v34 = v33 + v33;
v34 >> v34;
class C38 {
    static p(a40) {
    }
}
try { C38.p(v18); } catch (e) {}
10 >>> 10;
let v46;
try {
const t0 = -5.0;
v46 = new t0();
} catch (e) {}
const v47 = v46.constructor;
try { v47(); } catch (e) {}
const v49 = new C38();
const v50 = v49.propertyIsEnumerable;
const v51 = v50?.apply;
try { new v51(1.0204639390068597e+308, v50); } catch (e) {}
const v53 = new C38();
const v54 = v53?.__defineSetter__;
class C56 {
    m(a58, a59) {
        0.0 ** this;
    }
    static get c() {
        let v62 = 10;
        for (; v62--;) {
            super.c = this;
            v62.isConcatSpreadable;
        }
    }
}
const v66 = new C56();
const v67 = [0.41400040521582504,-2.2250738585072014e-308,1000000000.0,1.0,-7.840812307817487,0.8468093444532201];
class C69 extends "flags" {
    o(a71, a72, a73) {
        Math.abs();
        Math.round(a73);
        Math.acosh();
        Math.sinh();
        return v67;
    }
    #g = C56;
    [9007199254740990n];
    245 = 9007199254740990n;
    [v20] = v66;
}
new C69();
try { new v54(v53, v53); } catch (e) {}
const t96 = v53.constructor;
new t96();
try { v53.constructor(); } catch (e) {}
const v84 = new C38();
const v85 = v84.constructor;
let v86;
try { v86 = new v85(); } catch (e) {}
const v87 = v86?.constructor;
try { new v87(); } catch (e) {}
const v89 = v86?.__defineGetter__;
try { new v89("toStringTag", "toStringTag"); } catch (e) {}
const v91 = v86?.constructor;
try { v91.call(1.0204639390068597e+308); } catch (e) {}
const v93 = new v91();
const v94 = v93?.toLocaleString;
try { new v94(); } catch (e) {}
const v96 = new C38();
v96.constructor;
const v98 = v96.__defineGetter__;
v98.e = v98;
function F99(a101, a102, a103, a104) {
    if (!new.target) { throw 'must be called with new'; }
    const v105 = a102?.constructor;
    try { new v105(); } catch (e) {}
    const v107 = this?.constructor;
    function f108(a109, a110, a111, a112) {
        for (let [i117, i118] = (() => {
                const v114 = 0 >>> 0;
                v114 % v114;
                return [0, 10];
            })();
            i117 < i118;
            i118--) {
        }
        return f108;
    }
    try { new v107(a101, a101); } catch (e) {}
    try { a102.isPrototypeOf(C38); } catch (e) {}
}
const v127 = F99?.bind;
let v128;
try { v128 = v127("function"); } catch (e) {}
try { v128(); } catch (e) {}
new F99("toStringTag", v84);
new F99(v53, "flags");
const v132 = new F99("HkAXC", "toStringTag", "toStringTag", "HkAXC");
let v135 = -128 % -128;
v135++;
[-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v138 = [601759695];
const v139 = [1073741824,1073741823,1376142744,1073741825];
function f141(a142, a143, a144, a145) {
    function f147() {
        const o162 = {
            [522675525n](a150, a151) {
                Int16Array[0] = -27833;
            },
            get d() {
                return this;
            },
            "maxByteLength": -128,
            "c": v138,
            valueOf(a156, a157) {
            },
            toString(a159, a160, a161) {
            },
        };
        o162.toString(v132, v132, v132);
    }
    f147();
    const v166 = new Int8Array();
    v166.buffer;
    %OptimizeFunctionOnNextCall(f147);
    function f169(a170) {
        return v18;
    }
    class C172 {
        static [376363416];
        static {
            super.b = this;
            let {...v174} = this;
        }
    }
    let v175;
    try { v175 = v139["find"]("find", a145, v138, v139); } catch (e) {}
    return C38;
    function F176(a178, a179) {
        if (!new.target) { throw 'must be called with new'; }
        this.hasOwnProperty();
        const v181 = this.constructor;
        try { new v181(); } catch (e) {}
    }
    new F176();
    v175 <= a144;
    return arguments;
}
try { f141("HkAXC", v138, "flags", "HkAXC"); } catch (e) {}
for (let v186 = 0; v186 < 5; v186++) {
    f141();
}
