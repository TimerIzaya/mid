const v2 = new Uint8ClampedArray(6);
const v5 = new Float32Array(2);
const v8 = new BigInt64Array(1024);
const v14 = new Uint16Array(113);
const v17 = new Int32Array(129);
new Uint16Array(16);
function f21() {
    return f21;
}
const v22 = [f21,f21,f21,f21];
const v23 = [v22];
[f21,v22];
class C25 extends f21 {
    [-1] = v22;
    static get c() {
    }
    static get h() {
        if (C25) {
            v5[f21] &= 2;
        } else {
            super.b;
            try {
                v8.length = 129;
            } catch(e29) {
            }
        }
        super.a <<= v23;
        return this;
    }
}
const v30 = new v17();
new C25();
Float32Array[2] = 6;
v23[2];
let v35 = 2.0;
11 || !v2;
let v38 = ++v35;
Math.pow(--v38, v35);
~v2;
const v42 = new C25();
const v45 = new Int16Array(9);
new Uint8ClampedArray(v14);
const v51 = new Int32Array(257);
function f52() {
    return f52;
}
const v53 = v45 && v51;
v23[3629] ||= 257;
for (const v54 of 16) {
    delete v30.e;
    v45 == v53;
    try { v42.p(); } catch (e) {}
}
