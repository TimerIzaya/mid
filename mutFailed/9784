let v2 = 1073741823;
class C3 {
    static {
        this || 4294967296;
    }
    [v2] = 0.9398214539737674;
    [0.9398214539737674];
    #toString(a7) {
        const v8 = this[3];
        C3[257] = a7;
        v8.__proto__;
        super.a ^= 4294967296;
        let v12 = -9007199254740992;
        const v13 = -Infinity;
        Math.random();
        Math.atan(Symbol);
        Math.max(v12);
        --v12;
        Math.log10(4294967296);
        v13 || v12;
        try { a7(Symbol, C3, a7, 0.9398214539737674, Symbol); } catch (e) {}
        v8?.[v2];
        const v22 = a7?.c;
        v2++;
        function f25(a26, a27, a28, a29) {
            arguments[4] = arguments;
            return a29;
        }
        const v33 = new Int32Array(56885);
        f25(...v33, 127);
        v8[v2] |= v22?.[268435456];
        v8[Symbol.asyncIterator];
        return this;
    }
    static [0.9398214539737674];
    #d = 0.9398214539737674;
    [v2];
}
const v38 = new C3();
const v39 = new C3();
const v40 = new C3();
function F41(a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = 0.9398214539737674;
    try {
        this.f = 0.9398214539737674;
    } catch(e45) {
        function F46(a48, a49) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.b = e45;
            } catch(e50) {
            }
            try {
                this.h = a48;
            } catch(e51) {
            }
        }
        const v52 = new F46(this, v38);
        const v53 = new F46(v52, v52);
        new F46(v53, v52);
    }
}
new C3();
const v58 = new Uint8Array(3);
for (let [v59,v60] of v58) {
    new Uint8Array(128);
    new Uint32Array(27);
    new Int16Array(7);
}
new Int32Array(64);
new Int32Array(2);
new F41(v39, v40);
const v77 = new F41(C3, v39, F41, v39, v39);
new F41(C3, v77);
class C80 {
    constructor(a82, a83) {
        try {
            super.n(1e-15);
        } catch(e85) {
        }
        try {
            super.getYear(a82, this);
        } catch(e87) {
        }
    }
}
new C80(C80, C80);
