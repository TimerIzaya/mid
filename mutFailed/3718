class C3 {
    static #b = -1634222783;
    static {
        async function f5(a6) {
            function f7(a8, a9) {
                a9.constructor(a9);
                return f7;
            }
            new Promise(f7);
            var a = this;
            a6 > this;
            -2.2250738585072014e-308 - -2.2250738585072014e-308;
            const v18 = await 0.20432124675235397;
            v18 !== v18;
            return -2.2250738585072014e-308;
        }
        const v20 = f5(this);
        try { v20.then("toStringTag", f5); } catch (e) {}
    }
    static #g = "toStringTag";
}
const v22 = new C3();
const v23 = new C3();
const v24 = new C3();
const v25 = v24?.__lookupGetter__;
try { new v25("toStringTag"); } catch (e) {}
function F27(a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    const v31 = this?.constructor;
    try { new v31(a29, -1634222783); } catch (e) {}
    try { a29.propertyIsEnumerable(this); } catch (e) {}
    try {
        this.g = a30;
    } catch(e34) {
    }
    try {
        this.c = a29;
    } catch(e35) {
    }
    try {
        this.h = a29;
    } catch(e36) {
    }
}
const v37 = new F27(v23, C3);
new F27(C3, C3);
new F27(v37, v22);
7 >> 7;
new BigInt64Array(7);
const t49 = "toStringTag";
new t49();
const v46 = [];
const v48 = [0.3012804967226079,85204.01188321039,653.7200248137515,0.7021499874307531,803753.7144966745,852811.0132933464,-9.957521439166277e+307,-2.2210475327078026e+307];
const v49 = [0.16312007947772267];
const v50 = [NaN,-1e-15];
class C51 {
    [1802204217] = v50;
    static 3516;
    #h;
    static 0 = 1802204217;
    constructor(a53, a54) {
    }
    static [v48] = v49;
    static 13;
    static #c = v46;
}
Reflect.construct(C51, [Reflect,v48], C51);
new Float32Array(693);
new BigUint64Array(235);
1 >>> 1;
Int16Array.name;
const v67 = new Int16Array();
const v68 = v67?.findLastIndex;
try { new v68(693); } catch (e) {}
try { BigUint64Array.apply(v67, 1); } catch (e) {}
