const v3 = ["getOwnPropertySymbols","getOwnPropertySymbols"];
const v4 = ["getOwnPropertySymbols","getOwnPropertySymbols"];
v4[1] = v4;
const v5 = ["stack","DHuPw",v3];
function f6() {
    return "DHuPw";
}
let v7;
try { v7 = f6(); } catch (e) {}
try { v7.split(v5, v7); } catch (e) {}
const v9 = [v4,v3,"stack","DHuPw",v4];
try { v9.groupToMap(v9); } catch (e) {}
try { v9.reduce("DHuPw"); } catch (e) {}
const v13 = [v4,[v4,v9,"stack"],v5];
function f14() {
    const o16 = {
        p() {
            return f14;
        },
        [v13]: v13,
        "a": v13,
    };
    return v13;
}
f14();
try { v13.reverse(); } catch (e) {}
for (let v20 = 0; v20 < 25; v20++) {
}
const v21 = [-2.220446049250313e-16,0.4010936999061169];
try {
    v21.length = -2;
} catch(e23) {
}
3 & 3;
59632 !== 59632;
class C31 extends Uint16Array {
}
-9223372036854775808 << -9223372036854775808;
/a\D[\cz]/giy;
new Float32Array([798019179,-9007199254740992,-8195,-4294967297,1420574578,9007199254740991,-1493424054,-2147483649,8,47842]);
function f38(a39, a40, a41) {
    const v45 = new Uint8ClampedArray(112);
    const v48 = new Uint8Array(64);
    try { v45(-85357.59116785484, ...v48, 64, 46, -3.383486186086852e+307, ...v45); } catch (e) {}
    const o54 = {
        set e(a53) {
        },
    };
    o54.e;
    return a39;
}
v7.dotAll;
try { Date.now(); } catch (e) {}
let v60;
try { v60 = Int32Array.from(3); } catch (e) {}
const v61 = v60?.every;
try { new v61(v60); } catch (e) {}
Symbol.hasInstance;
-4294967296 / 5;
const t57 = "lastIndexOf";
t57[6] = "DHuPw";
new Float32Array(9);
const t62 = 3;
const v78 = new t62();
const t64 = 3;
const v79 = new t64();
function f80(a81, a82) {
    const o94 = {
        "h": v78,
        [v79](a84, a85, a86) {
            super[-2];
        },
        set b(a89) {
        },
        [a82]: v78,
        __proto__: 3,
        "c": 9,
        set h(a91) {
        },
        o(a93) {
            return v79;
        },
    };
    return o94;
}
