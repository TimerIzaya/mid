function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -342538778;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
class C7 extends F0 {
    static #o(a9, a10) {
        v5[a10] = a10;
        try {
            v5.valueOf = this;
        } catch(e11) {
        }
        return a9;
    }
    f = v4;
    static #toString(a13) {
        try {
            this.__proto__ = this;
        } catch(e14) {
        }
        return v6;
    }
}
const v15 = new C7();
const v16 = new C7();
const v17 = new C7();
function f18() {
    return v15;
}
class C22 {
    g;
    [C7] = C7;
    valueOf(a24, a25, a26, a27) {
        return "PI";
    }
    constructor(a32, a33, a34, a35) {
        let v36 = 0;
        do {
            try {
                v15.d = 1.0;
            } catch(e37) {
            }
            v36++;
        } while (v36 < 1)
    }
}
const v41 = new C22(v17, 1000000000.0, v16, v6);
new C22(v16, -478.16718878532913, f18, C7, v41);
new C22(v6, 1000000000.0, -478.16718878532913, v5);
function f44(a45, a46) {
    return f44;
}
const v47 = f44(f44, f44);
class C48 extends f44 {
    constructor(a50, a51, a52) {
        super(this, f44);
        const v53 = `
            try { a50(a52, v47); } catch (e) {}
        `;
        eval(v53);
    }
}
new C48(f44, C48, f44);
