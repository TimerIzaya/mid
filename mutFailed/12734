const v2 = new Int8Array(3);
v2.d = v2;
const v4 = v2.d;
let v5;
try { v5 = v4.getOwnPropertySymbols(); } catch (e) {}
const v8 = new Float64Array(6);
const v10 = new Int16Array(v8);
128 / 128;
new BigInt64Array(128);
new Float64Array(1740);
const o20 = {
};
const v22 = [o20,"function"];
try {
    const t14 = 128;
    t14.__proto__ = v22;
} catch(e23) {
}
function F25(a27) {
    if (!new.target) { throw 'must be called with new'; }
    const v28 = this.constructor;
    try { new v28(); } catch (e) {}
    try {
        const v32 = new Int32Array(12);
        for (const v33 in v32) {
        }
    } catch(e34) {
    }
}
const v35 = new Uint8ClampedArray(Uint8ClampedArray, Uint8ClampedArray);
function f36() {
    try { v5(3, v10, 1740); } catch (e) {}
    function f39(a40, a41, a42, a43) {
        const o44 = {
            "e": a41,
            [a42]: 1000,
        };
        return f39;
    }
    return f39;
}
v35.toString = f36;
const v45 = [];
function f46() {
    -v45;
    return f46;
}
try { v35.join(Uint8ClampedArray); } catch (e) {}
function F50(a52, a53) {
    if (!new.target) { throw 'must be called with new'; }
}
const v54 = new F50();
async function f55(a56, a57, a58, a59) {
    a56.fuck();
    await v54;
    return F50;
}
f55();
Math.LN10;
const v68 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v69 = [601759695];
const v70 = [1073741824,1073741823,1376142744,1073741825];
function f72(a73, a74, a75, a76) {
    arguments[2] = arguments;
    function f78() {
        const v80 = ("Vre").toLocaleUpperCase;
        try { v80(v80, -4294967297n, a75, v70); } catch (e) {}
        const v82 = ("Vre").fixed();
        const v83 = v82.codePointAt();
        let v85 = -268435456;
        const v86 = v85--;
        const o100 = {
            "c": -4294967297n,
            [522675525n](a88, a89) {
            },
            ..."Vre",
            "maxByteLength": -128,
            "c": v69,
            [v83]: -1547267477n,
            __proto__: a75,
            "d": v86,
            "e": -4294967295,
            "h": -128,
            valueOf(a91, a92) {
                return v82;
            },
            "e": -4294967295,
            "e": v85,
            "maxByteLength": -4294967295,
            "arguments": v68,
            ...v69,
            "type": "Vre",
            ..."Vre",
            valueOf(a94, a95) {
                return this;
            },
            ..."Vre",
            4: "Vre",
            "c": v85,
            "type": "Vre",
            "type": "Vre",
            toString(a97, a98, a99) {
                return -128;
            },
            5: -4294967295,
            6: v85,
        };
        o100[5] = o100;
        return o100.valueOf();
    }
    f78();
    %OptimizeFunctionOnNextCall(f78);
    return v68;
}
let v103 = v35 & -2;
v103 / v103;
v103++;
Math.acosh(v103);
