const v0 = [964975.3272234416,-830815.1367513179,5.0,-0.0,-4.0];
const v1 = [-2.0,533456.4173546326,1.7976931348623157e+308,1000000.0,1e-15,243.6450770729166,-1e-15];
function f2() {
    return v1;
}
Object.defineProperty(v1, "length", { configurable: true, enumerable: true, get: f2 });
const v3 = f2();
function f5(a6, a7, a8) {
    const v10 = [Array,a8];
    return Reflect.apply(v1.filter, v3, v10);
}
const v13 = [702560.0474668285,-1.0];
try { new Map(); } catch (e) {}
const v16 = new Map();
try { v16.set(Map, Map); } catch (e) {}
Int32Array.length;
const v21 = new Int32Array(235);
new Float32Array(13);
const v27 = new Int32Array(33);
const v28 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v30 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v31 = [601759695];
v31[0];
const v33 = [1073741824,1073741823,1376142744,1073741825];
522675525n | 522675525n;
function f36(a37, a38, a39, a40) {
    function f42() {
        let v45 = Float64Array;
        b = v45 = a38;
        const v46 = v28.length;
        v46 === v46;
        try {
            v33.forEach(v45, v1, a39, f42);
        } catch(e49) {
        }
        const v50 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v52 = Symbol.toPrimitive;
        const o58 = {
            toString(a54, a55) {
                const v56 = a40 && v45;
                a54 *= v52;
                return v56 <= v50;
            },
        };
        -268435456 >> -268435456;
        const o112 = {
            "c": -4294967297n,
            __proto__: v27,
            "a": 522675525n,
            "e": 13,
            3491: v13,
            "d": f42,
            [522675525n](a62, a63) {
            },
            "c": v31,
            toString(a65, a66, a67) {
                a40[-268435456] = a39;
            },
            ...33,
            o(a69, a70) {
                class C71 {
                }
                return "Vre";
            },
            valueOf(a73, a74) {
                return a37;
            },
            "b": 602984056,
            [-4294967297n](a76, a77, a78, a79) {
            },
            "e": 602984056,
            [v52](a81, a82, a83) {
                a83[10] <<= a81;
                a40 ^ Float32Array;
                return v50;
            },
            "e": -268435456,
            "maxByteLength": 602984056,
            set b(a86) {
            },
            set d(a88) {
                for (let v89 = 0; v89 < 10; v89++) {
                    class C91 {
                        4294967296 = 996195971n;
                    }
                    new C91();
                }
            },
            "arguments": v30,
            ...v31,
            "type": "Vre",
            ..."Vre",
            valueOf(a94, a95) {
                return v50;
            },
            ..."Vre",
            m(a97) {
                Object.defineProperty([-7,-18455], "toString", { value: Array });
                ([-729574.8782662717,NaN,NaN,1.4631545214551755e+308,771.103726894627,54.21198698191802]).map;
                class C102 {
                }
                new Int8Array(3938);
            },
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            toString(a109, a110, a111) {
                return a40;
            },
            5: 602984056,
            6: -268435456,
        };
        const v113 = v27.constructor;
        try { new v113(); } catch (e) {}
        const v116 = [65537,-61752];
        class C117 {
            constructor(a119, a120, a121, a122) {
                let v123 = 0;
                do {
                    let v125 = 30918;
                    const v126 = v125--;
                    let v127 = v1 ^ v1;
                    Math.random();
                    Math.exp(v1);
                    v126 >> v1;
                    Math.ceil(v126);
                    ++v127;
                    v123++;
                } while (v123 < 2)
            }
        }
        new C117(-268435456, v116, -268435456, -1);
        try { o112.toString(-268435456, v0, v28); } catch (e) {}
    }
    f42();
    function f139() {
        const o144 = {
            ["8"](a142, a143) {
            },
        };
        return o144;
    }
    const v146 = new Int8Array();
    const v147 = v146.buffer;
    2147483648 >>> 2147483648;
    const v150 = v147.slice(2147483648);
    try { v150.resize(v16); } catch (e) {}
    %OptimizeFunctionOnNextCall(f42);
    let v153;
    try { v153 = v33["find"](..."find", a40, ...v31, ...v33, ...522675525n); } catch (e) {}
    v153 <= a39;
    return arguments;
}
for (let v155 = 0; v155 < 10; v155++) {
    f36();
}
const v157 = v33[Map];
try {
    v157.g = v21;
} catch(e158) {
}
%OptimizeFunctionOnNextCall(f36);
const v159 = f36();
v159.a = v159;
