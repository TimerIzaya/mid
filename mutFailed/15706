function f0() {
    const o12 = {
        ["26760"](a5) {
            "asyncIterator" * a5;
            const v7 = [2.0,-454974.65670288296,1000000.0,Infinity,-5.324438459133187];
            const v8 = [-667.4903801857264];
            const v9 = [-3.0,5.0,-1.7421540323632761e+308,2.220446049250313e-16,-1000000000.0,-424.24073687965654];
            try {
                v8.findLastIndex(v9);
            } catch(e11) {
            }
            return v7;
        },
        ..."26760",
        "h": "26760",
        ..."26760",
    };
    function f13() {
        function f14(a15, a16) {
            function f17() {
                return "26760";
            }
            return a16;
        }
        return f14;
    }
    function f18(a19) {
        try { new a19(); } catch (e) {}
    }
    Object.defineProperty(o12, "toString", { writable: true, configurable: true, get: f13, set: f18 });
    return o12;
}
const v21 = f0();
v21.toString = f0;
const v22 = f0();
const v23 = f0();
function f24(a25) {
    const o36 = {
        __proto__: v21,
        "c": v23,
        [v21]: v21,
        "b": v23,
        "h": v23,
        ...v22,
        m(a27) {
            try { a25(a25); } catch (e) {}
            v23.__proto__;
            const v31 = Symbol.species;
            a27[v31];
            return v31;
        },
    };
    return o36;
}
const v37 = f24(v23);
const v38 = f24(v23);
const v39 = f24(f24);
/(h)/uds;
/gcfoo(?=bar)baz?/gvdy;
const v42 = /[g(?:a*)*]/dms;
function F43(a45, a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v22;
    } catch(e48) {
    }
    try {
        this.a = v42;
    } catch(e49) {
    }
    try {
        this.b = v42;
    } catch(e50) {
    }
}
new F43(v38, v39, v42);
new F43(v37, v39, v42);
new F43(v22, v23, v42);
const t78 = "g";
t78[14] &&= 14;
