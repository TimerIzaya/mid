const v2 = new BigUint64Array(3023);
const v4 = [536870888,8];
v4.concat(v4);
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    const v10 = this.constructor;
    try { new v10(); } catch (e) {}
    function f12() {
        return F6;
    }
    %PrepareFunctionForOptimization(f12);
    f12();
    %OptimizeFunctionOnNextCall(f12);
}
new Uint32Array(3967);
const v18 = new Float32Array(6);
class C19 extends Float32Array {
    1073741824 = 3967;
    static #c = 3967;
    static 3173 = 6;
    constructor(a21, a22, a23) {
        super(v2, a23);
        v18.set(a21, 3967, BigUint64Array, ...this, a21);
        try {
            this.#c %= BigUint64Array;
        } catch(e25) {
        }
    }
}
new C19(6, 6, 6);
new C19(6, 3967, 3967);
new C19(6, 3023, 6);
const v29 = /LD/vds;
const v30 = /a\s/vims;
const v31 = /SO/uis;
function f35() {
    return v29;
}
[12,65535,536870912,-8,1000,-9223372036854775808,-8,2,13];
[2,30964,-9223372036854775808,8,536870887,61212,-9223372036854775807,10000,-380609068];
[-527931172,-2147483647,1073741823,1913461086,9007199254740991,128,-2008902983,-7];
const v39 = [v29,1000.0,v30];
const v40 = [v29,1000.0];
[v30,v40,v31,1000.0,v40];
for (let v42 = 0; v42 < 22; v42++) {
    const v43 = v30[v42];
    try { new v43(v43); } catch (e) {}
    v39[v31];
    const o49 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o49);
}
