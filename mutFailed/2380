for (const v4 in "1487412280") {
}
new BigInt64Array(-1965243790);
[758081.4963868575,-1.396872810071077];
[-5.0,2.2250738585072014e-308,22489.809418225545,-2.0,0.8839774129407498,146.81013668024366,-5.0];
[0.24339244475290822,3.0,-335.3706860771331,0.0,5.6280761217473305,-659486.1773360707,-9.487130263158402,1000000.0,-1.0926054002965992e+308,329556.99913607957];
[1073741824];
[268435440];
[9007199254740992,16632,127,3];
function f23() {
    function f24(a25) {
        new Float64Array(64);
        new BigInt64Array(3481);
    }
    10 ^ f24(f24);
    return 1987035518;
}
const v35 = new Date();
const v38 = new BigUint64Array(255);
v38.buffer.slice();
const t19 = [-65317,-58155,536870889,976,536870889];
t19[2] = 13;
Symbol.keyFor(Symbol());
v35.setUTCMilliseconds(285215976);
const v50 = new Float32Array(255);
v50 instanceof Float32Array;
function F52(a54, a55) {
    if (!new.target) { throw 'must be called with new'; }
    const v56 = this?.constructor;
    try { new v56(this); } catch (e) {}
}
new F52();
