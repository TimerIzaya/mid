/Aa[a]/gudims;
const v4 = /\cj\cJ\ci\cI\ck\cK+/vdsy;
Map.prototype;
function F7() {
    if (!new.target) { throw 'must be called with new'; }
    0 < 0;
}
new F7();
const v13 = /6a+b\P{Any}/gvim;
const v14 = [572422503,713158680,1442153257,-9223372036854775807,989702018,268435439];
[64847,34232988,7];
const v16 = [1];
function f17() {
    return v16;
}
class C18 extends f17 {
    a = "undefined";
    static {
        v14 <= this.g;
    }
    static #h = v13;
    get c() {
        const v23 = super.at(this);
        this[6] = v13;
        return v23;
    }
    #m(a25, a26) {
        let [v28,v29,,v30] = this;
    }
    536870887 = v13;
    static #e = v4;
}
try {
    Float64Array.__proto__ = Float64Array;
} catch(e32) {
    e32.stack;
}
new C18();
new C18();
new C18();
new Float64Array([-9223372036854775808,-12]);
const v41 = [0.00952483356421907,-3.0,2.220446049250313e-16];
function f42() {
    const v45 = new Uint32Array(3);
    for (let i47 = 0; i47 < 9; i47++) {
        v45[i47] = f42;
    }
}
class C53 extends f42 {
}
new C53();
function F58() {
    if (!new.target) { throw 'must be called with new'; }
}
-10 * v41;
