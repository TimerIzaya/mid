let v0 = 9007199254740992;
let v2 = -10;
const v3 = [1000000000000.0,2.2250738585072014e-308,0.8121763448736308,1000.0];
const v4 = [-917069.3220286856,462812.8329337479,-1.5815690601923402e+308,2.0,-3.0,-1000.0,-958647.1331157241,0.31379443673480767,2.220446049250313e-16];
let v5;
try { v5 = v3.reduce(v4, v2); } catch (e) {}
let v6;
try { v6 = v5(); } catch (e) {}
v5?.[255];
v6 | v3;
let v11 = -2147483648;
Math.max(v11);
Math.sign(v0);
-v0;
++v0;
v2--;
+268435439;
Math.asin(-493.2669802990717);
[1.407215682848277e+308,4.917009057003931,295978.5145062653];
[-9007199254740991,-52548];
[-43381,1073741824,-536870912,-65535,9,1073741825,-1831190014];
[4294967297,-65535,-2147483648,9007199254740991,0,268435439];
class C27 {
}
const v28 = new C27();
const v29 = [C27,C27,C27];
const v31 = Date.parse(v29);
const v32 = -v31;
class C33 {
    static {
        for (let v35 = 0; v35 < 25; v35++) {
            function f36(a37, a38, a39, a40) {
                try { a37.call(a39, v28, a40, a38, this); } catch (e) {}
                Number.isNaN(a38--);
                let v46;
                try { v46 = Math.round(this); } catch (e) {}
                v46?.f;
                v11 = v32;
                Object.defineProperty(Date, "prototype", { configurable: true, enumerable: true, get: Number, set: Number });
                [4294967295,268435456,-1324806253];
                [3,10000,1451779709,-12,-19428];
                [-793489750,64243,2];
                -v46;
                Math.tan();
                const v53 = new Date();
                const v54 = v53.setDate();
                v54 * v54;
                const v56 = a38 & a38;
                let v57;
                try { v57 = a37(v56); } catch (e) {}
                v57?.constructor;
                arguments[2];
                const v61 = arguments[2];
                try { v61.findLast(); } catch (e) {}
                return v28;
            }
            f36(v32, v28, v35);
            f36(v35, v32, v29);
            for (let v65 = 0; v65 < 5; v65++) {
                f36(this, v65, v65);
            }
        }
    }
    static get c() {
        super[v31];
        return C33;
    }
    static #c;
}
