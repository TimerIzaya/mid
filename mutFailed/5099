const v1 = new WeakMap();
class C2 {
    #p(a4, a5) {
        try {
            this.#p(this);
        } catch(e7) {
        }
        return a5;
    }
    #o(a9, a10) {
        super[a9] = a9;
        v1.__proto__;
        return 10;
    }
}
new v1();
new C2();
new C2();
new Array(4096);
new BigInt64Array(8);
new Uint8ClampedArray(257);
new Float32Array(6);
try {
const t0 = 1.8503897255003885;
new t0();
} catch (e) {}
const v38 = new Uint8ClampedArray();
try {
    const o39 = {
    };
} catch(e40) {
}
class C41 {
    static p(a43) {
        const o50 = {
            valueOf() {
                super.c |= 1.8503897255003885;
                try {
                    function f45() {
                        return this;
                    }
                    const v46 = `
                    `;
                    this.fuck("d", "d", "d", "d");
                } catch(e49) {
                }
                return -128;
            },
        };
        return o50;
    }
    g;
}
try { new C41(); } catch (e) {}
const v52 = new C41();
class C54 extends Map {
}
new Array();
new Float32Array();
v52.g;
new C41();
new C41();
class C61 extends C41 {
    static n(a63, a64) {
        function F66(a68, a69, a70, a71) {
            if (!new.target) { throw 'must be called with new'; }
        }
        Math.atan(1653620084);
        new Float64Array(1073741824);
        class C78 {
        }
        return -128;
    }
    #c = C61;
    valueOf(a82, a83, a84) {
        super.f;
    }
    constructor(a87, a88, a89, a90) {
        super();
        function f91() {
            const t80 = [];
            t80[6] = 4294967295;
            new Int32Array();
            const o106 = {
                get b() {
                },
                toString(a99, a100, a101) {
                },
                m(a103) {
                },
                set b(a105) {
                },
            };
        }
        for (let v107 = 0; v107 < 5; v107++) {
            f91();
            %OptimizeFunctionOnNextCall(f91);
        }
    }
    set f(a110) {
        for (const v111 of a110) {
            try {
            } catch(e112) {
            }
        }
        class C114 extends SharedArrayBuffer {
        }
        const o115 = {
        };
        try {
        } catch(e116) {
        }
        try {
            const v118 = new BigUint64Array();
            const v120 = new Int16Array();
            [] = v120;
            v118 && v118;
            try {
            const t0 = 6;
            t0();
            } catch (e) {}
            /(ab)/us;
            /Ha+b/diy;
            /4a\w/vmsy;
            const o127 = {
            };
        } catch(e128) {
        }
        try {
            const o129 = {
            };
        } catch(e130) {
        }
        try {
            let o131 = {
            };
            const v132 = o115 && v38;
            o131 / 1000;
            (-4.0).atan(v132);
            --o131;
        } catch(e139) {
        }
    }
}
class C140 {
}
function f141(a142, a143, a144, a145) {
    const o151 = {
        "d": a144,
        p(a147, a148, a149) {
        },
    };
}
new C61();
for (let v153 = 0; v153 < 25; v153++) {
    Math.sin(v153 ** 2);
}
956206316 + 956206316;
[-2.0,-3.0,0.6635275380715938,1.5267625116759715e+308,2.2250738585072014e-308,648797.6103741466,764.9339560151452];
[-1.8569069513514513,-1.7976931348623157e+308,3.051119090190868];
([-96835.6485279667,2.220446049250313e-16,8.46687468460627e+306,Infinity,-0.0,-Infinity]).length;
const v166 = [3.0,0.33171220343699925,4.064384707296433,1.5856273613625281e+308,-620.344995023322,0.9478652503365506,-856874.8447818598,-127.45049040971935];
function f167(a168, a169) {
    const o171 = {
        ...a168,
        get d() {
            return this;
        },
    };
    return f167;
}
f167();
const v173 = f167(v166);
try { v173(956206316, 956206316); } catch (e) {}
