[];
const v2 = new Set();
Set.e = v2;
new Set();
const v5 = /6(x)(x)(x)\1/ums;
v5.lastIndex = v5;
v5.d = v5;
v2.dotAll = /[\0]/vdmy;
const v9 = !/a||bc3(?!\1(a\1)\1)\1/vsy.ignoreCase;
1024n * 1024n;
const v13 = 1024n <= 1024n;
v13 || v13;
let v16 = "function";
function f17() {
    return v16;
}
const t16 = "isExtensible";
t16[7] = "isExtensible";
let v20;
try { v20 = ("isExtensible").normalize(); } catch (e) {}
try { v20.trimLeft(); } catch (e) {}
let v23;
try { v23 = ("boolean").localeCompare(f17); } catch (e) {}
let v24 = ~v23;
v24++;
const v26 = "size" && "boolean";
with ("boolean") {
    length = v26;
    ({"length":v16,} = "isExtensible");
    const v27 = v9();
    v27 <= v27;
}
