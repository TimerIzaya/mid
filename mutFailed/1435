const v0 = [5.0,563.1666391466522,-1.7976931348623157e+308,-0.0,-9.525980346702138,1000.0];
const v1 = [-2.385537147428478e+307,-1.2169770047867609e+308,0.5056361601250497,-1000000000000.0,1000.0,-100218.08104113222];
const v2 = [NaN,6.851408420197526,1.7976931348623157e+308,-922499.4188798588,8.704513520657468,1.0];
class C7 {
    toString(a9, a10) {
        let v11 = 0;
        do {
            super.e &= v11;
            let v12;
            try { v12 = this.tan(v1, 1514n, v2, v11); } catch (e) {}
            new Uint8ClampedArray(1907);
            const v17 = new BigUint64Array();
            const v18 = /o(\xed\xb0\x80)\x01/gudims;
            const v19 = /(xyz{93})/gusy;
            try { v19.compile(v17, v18); } catch (e) {}
            function f21() {
                return v12;
            }
            v11++;
        } while (v11 < 0)
        return a9;
    }
}
C7.length;
new C7();
new C7();
new C7();
try { Date.now(); } catch (e) {}
new Date();
const v32 = [126.35858692635452,171.76053631394439,637722.086033537,-4.0,3.0,-1000000.0,1.3044045702886066e+308];
const v33 = [-1.5529887870333795e+308,-748.1650295275717,0.9205726241487137,1.0,-1000.0,-3.1477078363151474,2.220446049250313e-16,Infinity];
([1000000.0,0.218433446981681,-5.0,-919787.2036172998,872389.6270716691]).pop;
const o37 = {
};
gc(o37);
try { v33.reverse(); } catch (e) {}
function f40() {
    return v33;
}
class C41 extends f40 {
    constructor(a43, a44, a45) {
        a44.e = a44;
        class C47 extends a44.constructor {
        }
        const v48 = new C47();
        try { v48(); } catch (e) {}
    }
}
C41.d = C41;
const v50 = new f40(f40, f40);
const v52 = ~v50;
Math.asinh(v52);
const v56 = new Int8Array(180);
v56[v56.byteOffset] = v52;
const v58 = new C41();
const v61 = new BigInt64Array(205);
const v64 = new Uint16Array(256);
const v65 = v61[205];
const v68 = new Float64Array(255);
function F69(a71, a72, a73, a74) {
    if (!new.target) { throw 'must be called with new'; }
    a72 >> a72;
    a74 | a74;
    v68.b = a72;
    for (const v77 of v64) {
        v65?.h;
    }
}
const v79 = new F69(255, 256, 255);
const v80 = [Infinity];
const v82 = ([342.12300421344116,0.3998304334347528,-1.5569468467414895e+308,929110.7069466491,0.8403359879371063,928.8415619105033,5.0]).toStringTag;
try { v80.every(v82, v79); } catch (e) {}
try { v58.map(v0); } catch (e) {}
const v85 = v32.shift();
v85 * v85;
try {
    v58.length = v85;
} catch(e87) {
}
