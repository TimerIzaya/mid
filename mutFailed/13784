class C3 {
    static set a(a5) {
        let v4 = this;
        try { a5(v4, v4, -268435456, v4, 512); } catch (e) {}
        v4--;
        const v12 = -2.8174817200079335e+307 || 512;
        Math.cos(-1396382097);
        Math.log(v12);
    }
    [-268435456] = 2.220446049250313e-16;
    d = -268435456;
    [2.220446049250313e-16];
    static 106;
}
C3[106];
const v16 = new C3();
v16.d;
const v18 = new C3();
new C3();
function F20(a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    a22.d;
    this.log1p = a23;
    const v25 = a23?.__defineSetter__;
    v25.g = v25;
    try { new v25(a23, a23); } catch (e) {}
    try {
        this.h = a22;
    } catch(e27) {
    }
    try {
        this.d = 512;
    } catch(e28) {
    }
}
const v29 = new F20(v18, v18);
const v30 = v29?.constructor;
try { new v30(2.220446049250313e-16, F20); } catch (e) {}
const v32 = new F20(v16, v29);
const v33 = new F20(v29, v32);
class C34 {
    static {
        this.prototype = this;
        const v36 = [v16,v32];
        v36[0];
        const v38 = [this,v33,this];
        let v39;
        try { v39 = v38.toString(); } catch (e) {}
        try { v39.toWellFormed(); } catch (e) {}
        let v41 = [v38,v36,v29,v36,v36];
        try { v41.map(v39); } catch (e) {}
        try { v41.fill(v38); } catch (e) {}
        v41 = v38;
        let v45;
        try { v45 = ("log1p").blink(); } catch (e) {}
        try { v45.trimStart(); } catch (e) {}
        try { v33["log1p"]("log1p", -268435456, "log1p", v41); } catch (e) {}
    }
    o(a49, a50, a51, a52) {
        const o53 = {
        };
        new Proxy(v18, o53);
        const v58 = this >> 10000;
        Math.asinh(v58);
        10000 / C34;
        Math.pow(this, v58);
        return a51;
    }
}
C34.prototype = C34;
new C34();
const v63 = new C34();
const v64 = v63?.__lookupSetter__;
try { new v64(C3); } catch (e) {}
const v66 = v63?.constructor;
let v67;
try { v67 = new v66(); } catch (e) {}
const v68 = new C34();
const v69 = [0.6962759092984843];
v69[4] = v68;
let v70 = [4.55590263310031,1e-15,2.220446049250313e-16,4.0,3.0];
let v71;
try { v71 = v70.findLastIndex(v68); } catch (e) {}
class C72 {
    constructor(a74, a75, a76, a77) {
        try { this.propertyIsEnumerable(a76); } catch (e) {}
        -a75;
        const v80 = a76?.constructor;
        try { new v80(); } catch (e) {}
        a75[2] = v33;
        a74[0] = a74;
        a75.prototype;
        v70 = a75;
    }
}
try { C72(v69, v16, v71, v69); } catch (e) {}
try { new C72(2.220446049250313e-16, 2.220446049250313e-16, v63, v18); } catch (e) {}
const v85 = new C72(v69, C72, C72, v69);
const v86 = new C72(v69, v69);
function f87(a88, a89) {
    a88.b = a88;
    try {
        v86.b = C34;
    } catch(e90) {
    }
    return v63;
}
v86.constructor = f87;
let v91;
try { v91 = v86.constructor(v32, v32, v70, v70); } catch (e) {}
const v92 = v91?.constructor;
try { new v92(); } catch (e) {}
class C94 {
    constructor(a96, a97) {
        const v99 = v70.unshift(v85, a97, [this,this]);
        v99 + v99;
        const v101 = v99 != v99;
        v101 && v101;
    }
}
const v103 = new C94();
const v104 = v103?.constructor;
try { new v104(v103, v68); } catch (e) {}
const v106 = v103?.__defineGetter__;
try { v106(v67, v16); } catch (e) {}
try { new v106(v16, v16); } catch (e) {}
new C94();
