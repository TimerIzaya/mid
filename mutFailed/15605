function f0() {
}
function f1() {
    const o14 = {
        "g": f0,
        "b": f1,
        "h": f0,
        "b": f0,
        get d() {
            return this;
        },
        "a": f0,
        "d": f0,
        "f": f0,
        __proto__: f0,
        ...f1,
        /*
        __proto__: f1,
        */
        set c(a4) {
            const v5 = a4?.[10];
            const v6 = v5?.[9];
            function f7() {
                return f7;
            }
            class C8 {
            }
            const v9 = new C8();
            function f10(a11) {
                return v9;
            }
            try {
                this.fuck(a4, v6, v5, v5);
            } catch(e13) {
            }
        },
    };
    return o14;
}
f1();
f1();
const v17 = f1();
[-747471.7378853022,-1.3581765385491417e+308];
const v19 = [0.0,1.6173866025959336e+308,1000000.0,-2.2250738585072014e-308,1.6014939271329866e+308,311368.09122726787,3.0,359.08173204245304,-764.1493731385776,0.14367649548529182];
const v20 = [-Infinity];
class C21 {
}
const v22 = new C21();
v20 << v22;
const v24 = [-565.5639926132208];
try { v24.every(v24); } catch (e) {}
function f26() {
    return f0;
}
f26.prototype = f26;
function f27(a28, a29, a30) {
    const o54 = {
        get d() {
            d = this;
            const v32 = [15,-65535,38693,1073741824,22603,9223372036854775807,512,-62510,-15];
            class C33 {
            }
            new Uint32Array(8);
            function* f37(a38, a39, a40, a41) {
                return a39;
            }
            for (let v42 = 0; v42 < 5; v42++) {
                v42 & v42;
            }
            [55721,268435441,-5,268435440,-1,-2147483649,2];
            const v45 = [127,9007199254740991];
            const o47 = {
                get c() {
                },
            };
            const o50 = {
                [9007199254740992n]: -43292n,
            };
            const v51 = [v45,a30,v32,a30,f26];
            [v45,f0,v19,v51];
            [v32,f1];
            return v51;
        },
        "e": f1,
        "c": f1,
        "h": C21,
    };
    return o54;
}
const v55 = f27(v17, v19, v24);
let v56 = f27(f0, v24, v24);
const v57 = f27(v55, v19, v19);
try { v57.c(); } catch (e) {}
for (let v59 = 0; v59 < 5; v59++) {
    function f60() {
        const v65 = new Uint8ClampedArray(v59);
        const v67 = eval();
        new v67(798, ...v65, v67);
        ++v56;
        return f60;
    }
    f60();
    %OptimizeFunctionOnNextCall(f60);
}
