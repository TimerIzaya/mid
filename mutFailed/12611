[129,268435441,1073741825,257,-12790];
[1,15,-65537];
[9007199254740991,4294967296,4294967296,-2147483647,65537];
const t0 = "number";
t0[Symbol.match] = "getInt16";
new Int32Array();
class C18 {
}
function f20(a21, a22) {
    const v23 = -a21;
    v23 >> v23;
    const o25 = {
    };
    return o25;
}
const v26 = f20(2n);
const v28 = f20().propertyIsEnumerable;
const v31 = new Uint8Array(v26);
function f32(a33, a34, a35, a36) {
    a35++;
    a35 % a35;
    const o42 = {
        "b": a33,
        ...v31,
        n(a40, a41) {
            return a41;
        },
    };
    return v28;
}
for (let v43 = 0; v43 < 625; v43++) {
    const v44 = f32(Uint8Array, 2, v43);
    try { v44(v43); } catch (e) {}
}
let v46 = isFinite;
new C18();
new Uint8ClampedArray(2);
new Float32Array(0);
new Float64Array(2);
const v60 = 268435439 >>> 301061846;
301061846 && 268435439;
Math.floor(301061846);
Math.acos(268435439);
Math.hypot(v60);
function f66() {
    return f66;
}
const v67 = f66.arguments;
function f68() {
    for (let v69 = 0; v69 < 5; v69++) {
        const v73 = Array(36862, v67, v69 & v69);
        function f75() {
            const v76 = Array.prototype;
            %VerifyType(BigUint64Array);
            v76.f ||= 7163;
            Object.defineProperty(v76, v73, { set: v46 });
            let v79 = 0;
            while (v79 < 10) {
                for (let v82 = 0; v82 < 5; v82++) {
                    "n" + v82;
                }
                v79++;
            }
            const o87 = {
                __proto__: 2,
                ...2,
            };
            const v88 = new Uint16Array(o87, 2, 2);
            v88[1] = v88;
            return 2;
        }
        const o92 = {
        };
        function f93() {
            const o95 = {
            };
            gc(o95);
        }
        try {
            v73.length = v60;
        } catch(e97) {
        }
        ("number")["includes"]("includes");
        let v101 = 1000000000.0;
        new Uint16Array(Uint16Array);
        const v104 = [1000000.0,-1.7976931348623157e+308];
        const o105 = {
            ...v104,
        };
        v101 - v73;
        Math.random();
        const v108 = v101--;
        v101 * -1362251894;
        -v108;
        const v111 = new BigInt64Array(218);
        v111.sort(f75);
        -601018.3320674116 + v46;
        const v117 = --v46;
        const o121 = {
            __proto__: 2,
            ...2,
        };
        const v122 = new Uint16Array(o121, 2, 2);
        v122[1] = v122;
        Math.clz32(v117);
        v73.reverse();
        const v127 = this.Realm.dispose;
        try { v127(); } catch (e) {}
        function f129() {
        }
    }
    return f68;
}
%PrepareFunctionForOptimization(f68);
f68();
%OptimizeFunctionOnNextCall(f68);
f68();
