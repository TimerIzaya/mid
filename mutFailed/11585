const v2 = new BigInt64Array(2);
const v6 = v2.constructor;
const v7 = v6?.f;
for (let v8 = 0; v8 < 32; v8++) {
    v7["p" + v8] = v8;
}
let v11;
try { v11 = new v6(758.9371938038303, v2); } catch (e) {}
let v12;
try { v12 = v11(v6, 2, 758.9371938038303, 758.9371938038303); } catch (e) {}
function f13() {
    return v12;
}
[-1.7976931348623157e+308,1.4065153086456336e+308,132338.30539410538,453561.9048462927,-1e-15];
[NaN,1.7714788702202625e+307,1000000000.0,-3.0,0.11804951271646469,1e-15,1.0];
[-5.248607109031798,8.774633685870258e+307,-1000000000000.0,-3.6968139322705085];
gc();
new BigInt64Array(1024);
new Int16Array(1493);
[0.16392126879515923,796911.0678533311,-2.220446049250313e-16,3.0,-707718.2725367018,496193.26868395554,2.220446049250313e-16];
[1.018086551831176e+308,-1.5297451935667554e+308,-2.2250738585072014e-308,1000000.0,-912264.988893151,7.430374928952224e+307,0.2339186587662656,-1000000000.0,-3.818708475704609];
[1.2835027132835077e+308,-2.773071933580988e+307,3.6133244407091816,1000.0,-2.2250738585072014e-308,5.0];
[-2.0,-2.0,8.260087694597243e+307];
[-2.2262282728917966e+306,0.8444783961549938,-1.0331799660541424e+308,-933.6246820351408];
[0.2786784032796582];
class C29 {
    p(a31, a32, a33, a34) {
    }
}
function F35(a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
}
function f39() {
    return f39;
}
const v40 = [C29];
new Uint16Array(255);
new Int32Array(Int32Array);
const t38 = v40[Symbol.iterator].constructor;
const t39 = t38(C29);
t39();
