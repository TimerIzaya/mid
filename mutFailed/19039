const v2 = new Uint8Array(94);
new BigInt64Array(189);
const v8 = new Uint32Array(1000);
[v2,BigInt64Array,Uint8Array];
[v2,[94,v8]];
const v16 = new Set();
function F17(a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a19;
    } catch(e21) {
        for (let [v22,v23] of a19) {
            class C24 {
            }
            const v25 = new C24();
            const v26 = v25.g;
            try {
                v26.length = 1;
            } catch(e28) {
            }
            try {
                v16.values();
            } catch(e30) {
            }
        }
    }
    try {
        this.h = v16;
    } catch(e31) {
    }
    try {
        const v32 = v16[this];
        try {
            new F17(v32, -268435456n);
        } catch(e35) {
        }
        this.b = Set;
    } catch(e36) {
    }
}
const v37 = new F17(Set, Set);
let [v38,,...v39] = v16;
const v42 = v39[Symbol.toPrimitive];
try {
    v37.toString = v42;
} catch(e43) {
}
new F17(Set, F17);
const v45 = new F17(v37, F17);
[28.464807941936897,0.6876471799475875,-4.024971662372387,-1000000000.0,-982.6382193743566,Infinity,0.0,-4.0,-821.2850284587798];
[0.27109226904944717,-4.9641037907328345,0.0,2.220446049250313e-16];
[-0.0,1.0,Infinity,609.6267739945692,0.5061350985708035];
const v52 = [65537,268435441,63298,-5,1235122603];
const v53 = [128,215394418];
let v54;
try { v54 = v53.entries(); } catch (e) {}
const v55 = [-2,-4294967296,4294967297];
function F56(a58, a59, a60, a61) {
    if (!new.target) { throw 'must be called with new'; }
    const v62 = this.constructor;
    try { v62(1024, 1024, v52); } catch (e) {}
}
const v64 = new F56(-714582153, F56, -714582153, v53);
const v66 = new F17(v45, null);
new v55(16);
new BigUint64Array(0);
new Int32Array(1519);
v64.length;
const v77 = new Uint8Array(9, v64, 9, v55);
v77.b = v77;
const v78 = new F56(1024, v77, v55, v55);
let v84;
try { v84 = ("string").trimStart(); } catch (e) {}
let v85 = -1;
v54?.[3];
let v88;
try { v88 = v84(); } catch (e) {}
v52[v88] = v53;
0 ^ 9;
const v93 = -v77;
~9;
v93 >>> v93;
a = ("string").length - F56;
v16[v77];
v66.__proto__;
-35417 - -35417;
class C101 {
}
function f102(a103, a104, a105, a106) {
    return v78;
}
f102(-9007199254740991, v84);
v54[v77] ||= ([1024,19026,1125846339]).length;
Math.tan(-1);
function f113() {
    const o121 = {
        ...1.7976931348623157e+308,
        [-2]: 1.7976931348623157e+308,
        __proto__: 256,
        [1.7976931348623157e+308](a117) {
            0 < 10;
        },
    };
    return o121;
}
const v122 = f113();
class C123 extends f113 {
    3164398692 = v122;
    10000 = f113;
}
C123[741] %= 13;
const o127 = {
    set b(a126) {
        v85 <<= v85;
    },
};
