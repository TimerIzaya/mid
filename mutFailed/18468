function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 2137884534;
    } catch(e3) {
        function f4(a5, a6) {
            const o7 = {
                "b": F0,
            };
            return o7;
        }
        const v8 = e3(2137884534, F0);
        f4(v8, v8);
        f4(F0, 2137884534);
    }
}
const v11 = new F0();
new F0();
new F0();
const v15 = Symbol.iterator;
const o24 = {
    [v11]() {
        let v17 = 10;
        const o23 = {
            next() {
                v17--;
                const v21 = v17 == 0;
                const o22 = {
                    "done": v21,
                    "value": v17,
                };
                return o22;
            },
        };
        return o23;
    },
};
const v25 = new v15();
function F29(a31, a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v11;
    } catch(e34) {
    }
}
new F29(1550984324n, 23585n, v11);
const v36 = new F29(-65536n, 23585n, v25);
new F29(1550984324n, 23585n, v36);
/[wxyz{93}a(?=bbb|bb)c]/udmsy;
