const v3 = [172035.90175285982,3.0,2.0,1.7976931348623157e+308,2.220446049250313e-16,-1.0,-342.9341807311972,-9.964711044291892,-1.0];
const v4 = [-1000000.0,-1.0,-7.70802581086008e+307,-1000.0,-926601.2340512759,2.220446049250313e-16,313445.0620252618,NaN,5.669044196442124e+306];
let v5;
try { v5 = v4.find(-8); } catch (e) {}
const v6 = [214.83550679176255,1000000000000.0,0.0,2.220446049250313e-16,2.0,-365.49861490240426,989966.3226702102,808.9791995382498,670.3588274659703];
function F7(a9, a10, a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    let v13;
    try { v13 = this.constructor(a10, this, -8, a10); } catch (e) {}
    a9[2] = a9;
    try { v13.with(a11, a11); } catch (e) {}
    try { a12.toSpliced(2146202321, 2146202321); } catch (e) {}
    try {
        this.f = v6;
    } catch(e16) {
    }
    try {
        this.c = a9;
    } catch(e17) {
    }
    try {
        this.e = a10;
    } catch(e18) {
    }
}
new F7(v6, v4, v3, v4);
new F7(v4, v3, v4, v4);
new F7(v4, v4, v4, v3);
[-7.101963206917832,-1.4319813069884422e+308,2.0,-2.220446049250313e-16,-841.6379509600135,-1000000000.0,-1000000000.0];
function F23(a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
}
class C27 extends F23 {
}
const v28 = [-460.307183313349,116746.1734742194,2.0,0.7612507062467385,-1.7352454748688924e+308];
function f29(a30) {
    Reflect.preventExtensions(Reflect);
    return a30;
}
v28[Symbol.toPrimitive] = f29;
function f35(a36, a37) {
    function f38(a39, a40) {
        return a39;
    }
    return a37;
}
f35.d = f35;
const v42 = Symbol.toPrimitive;
const v44 = v42.description;
Symbol.for(v44);
v28[v42] = f35;
const v46 = [618.1593022982238,-670.4331556988014,-598.8215888934105,1e-15,0.6439103075146282,996419.0616454568,-1.0,-1000000000.0,1e-15,-566.0187654378863];
v46[Symbol.toPrimitive] = Symbol;
const v49 = [0.38491475396310426,1.7976931348623157e+308,-1e-15,924251.5567374192,NaN,1.5098751561946018e+308,-1.1124820518145282e+308,-3.0,-0.0,-467.0550866857337];
class C50 {
    valueOf(a52) {
        let v53;
        try { v53 = v49(a52, this, this, a52, this); } catch (e) {}
        try { v53(v46, v53, v53); } catch (e) {}
        return v28;
    }
    1000;
    static #d = v46;
    static [v28] = v49;
    static #a;
    [v28] = v49;
    static [v46];
    static #e = v49;
}
new C50();
[-2.220446049250313e-16,0.3294809085890621,-5.0,-1000000000000.0,-783.0907112060413,-1000.0,1000000.0];
const v57 = [-2.0];
try { v57.pop(); } catch (e) {}
function f59() {
    const v62 = new Date();
    v62.toLocaleDateString();
    new Uint16Array(3);
    try { ("8").blink(); } catch (e) {}
    const o71 = {
        [v44](a69, a70) {
        },
    };
    o71[8];
    function f73(a74) {
        ("8")[213];
        return o71;
    }
    f73(f59);
    %OptimizeFunctionOnNextCall(f73);
    return o71;
}
%PrepareFunctionForOptimization(v5);
f59();
new Uint32Array(104);
[v5];
const v83 = Uint32Array();
v83[8] = v83;
%OptimizeFunctionOnNextCall(f59);
f59()[8];
