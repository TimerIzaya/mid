/[\011]+/giy;
/W(?!a)?a/gd;
/[\ca]Q?/gvms;
new Uint16Array(13);
[1126838905];
class C9 {
    constructor(a11) {
        typeof arguments;
    }
}
new Int16Array(0);
new BigInt64Array(84);
Math.log2(0);
new Uint8ClampedArray();
const v31 = new BigUint64Array(-4294967296);
try { Float32Array.apply(-4294967296, v31); } catch (e) {}
for (let v34 = 0; v34 < 500; v34++) {
    Math["p" + v34] = v34;
}
const v37 = new Int32Array(58);
function F42(a44, a45) {
    if (!new.target) { throw 'must be called with new'; }
    const v46 = this?.constructor;
    try { new v46(a44, F42); } catch (e) {}
    try {
        this.g = a44;
    } catch(e48) {
    }
    try {
        this.b = "WwTV";
    } catch(e49) {
    }
}
const v50 = new F42("9g9Ak", "WwTV");
const v51 = new F42("-40859", "9g9Ak");
class C52 extends F42 {
    #m(a54, a55, a56) {
        function f57(a58, a59, a60, a61) {
            let [...v62] = a56;
            a54.length;
            new String(127);
            new Uint8Array(3);
            const v72 = new a58(3);
            return v72;
        }
        f57(v50, v50, "WwTV", a54, v51);
        return v50;
    }
}
new C52(v51);
new Uint8ClampedArray(v37);
function f76(a77, a78) {
    const v80 = new Date();
    v80.getSeconds();
    return f76;
}
%OptimizeFunctionOnNextCall(f76);
