class C3 {
    valueOf(a5) {
        const t2 = "toSpliced";
        t2.length >>= -1.0;
        const t4 = "toSpliced";
        t4[-43580] = this;
        const t6 = "toSpliced";
        delete t6["toSpliced"];
        super.b = -1.0;
        return -1.0;
    }
    constructor(a8, a9, a10, a11) {
        a11.match(a10);
    }
    /*
    constructor(a14, a15) {
        function f16(a17, a18, a19, a20) {
            return arguments;
        }
        for (let v22 = 0; v22 < 5; v22++) {
            const v23 = f16();
            v23[1] = v23;
        }
    }
    */
    static [-1.0] = -43580;
    #h = -43580;
    static #b;
}
const v24 = new C3();
const v25 = new C3();
const v26 = new C3();
function f27() {
    const o31 = {
        __proto__: "S3KT",
        [-5900]: "S3KT",
        "f": 760977347,
        4147259639: 760977347,
        659269453: "S3KT",
        "g": 760977347,
        "h": -5900,
        [760977347]: "S3KT",
        "e": -5900,
        "c": "S3KT",
    };
    return o31;
}
class C32 extends C3 {
    constructor(a34, a35) {
        super();
        class C36 {
        }
        function F37(a39, a40, a41) {
            if (!new.target) { throw 'must be called with new'; }
            a39 >> a39;
            a40?.__defineSetter__;
            const v44 = a40 === a40;
            v44 ** v44;
        }
        a35 &= a34;
        const v47 = new Date();
        const v49 = new Set();
        const v50 = v49.add(v47);
        let [v51,,...v52] = v49;
        v51.setMilliseconds(v50);
        new Date();
        function f55() {
            return v26;
        }
    }
    static #h;
}
const v56 = new C32(v26, v25);
new Float64Array(14);
class C60 {
}
new C32(v26, v24);
new C32(v56, C32);
const v63 = [-20096,4294967296,-65537,-2];
const v64 = [-1947047520];
v63["slice"]([[v64,v64,v64,v63]]);
