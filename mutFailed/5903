function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this[0];
    const v7 = 7152 ^ 14;
    Math.trunc(2147483649);
    Math.trunc(F0);
    this || v7;
    try {
        this.h = 14;
    } catch(e11) {
    }
    try {
        this.c = 14;
    } catch(e12) {
    }
}
const v13 = new F0();
const v14 = new F0();
const v15 = new F0();
const v16 = [v14,v14,v15,F0];
let v17;
try { v17 = v16.find(v16); } catch (e) {}
const v18 = [v14,v13];
try { v18.reduceRight(v13); } catch (e) {}
[v15,v18,F0,v15];
WeakMap.prototype = WeakMap;
new WeakMap();
8n <= 8n;
try { new v17(); } catch (e) {}
new WeakMap(v14);
const o30 = {
    "execution": "sync",
    "type": "minor",
};
gc(o30);
let v34 = 16513n ^ 16513n;
v34--;
class C36 {
}
try { new C36(); } catch (e) {}
let v38;
try { v38 = new C36(); } catch (e) {}
const v39 = v38?.constructor;
try { new v39(); } catch (e) {}
const v41 = new C36();
function f42() {
    return v41;
}
Object.defineProperty(v41, "b", { enumerable: true, get: f42 });
