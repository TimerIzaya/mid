function f0() {
}
const v1 = [14,6,64,4829,268435441,-268435456];
v1.toString = f0;
const v2 = [1,-65536,1890,536870887,1457830718,128,-64690,7618];
const v3 = [129,-31838];
const v4 = new v2();
class C5 {
    static #e;
    static {
        try {
            v4.#e = this;
        } catch(e7) {
        }
    }
    static n(a9, a10, a11) {
        v4.#e;
    }
}
class C13 {
    static f = f0;
    valueOf(a15, a16, a17, a18) {
        const v19 = this?.constructor;
        try { new v19(); } catch (e) {}
    }
    static 1073741825;
    [v3] = v3;
    #e;
    3306 = f0;
    3;
    o(a22) {
        v1.length &= this;
        v4.g = a22;
        function f23(a24, a25) {
            a24[5];
        }
        class C27 {
        }
        let v28;
        try { v28 = v2.lastIndexOf(v2); } catch (e) {}
        [715484859,-5,1997705621,-1490708516,-2147483649,512];
        [-9,-1646118091,1073741823];
        const v31 = [4294967295,1024,1024,4,-1073741824,-65536,127,376317948];
        try { v28(v31); } catch (e) {}
        return v1;
    }
    254;
    static 1073741824;
    [v1] = v3;
    2161280742;
    2147483647 = v3;
    static #h;
}
new C13();
function f35() {
}
const v36 = [155533.8602852358,2.0];
function F38() {
    if (!new.target) { throw 'must be called with new'; }
    const v40 = this?.__defineSetter__;
    try { new v40(202); } catch (e) {}
    for (const v45 of Array(19793)) {
        v36[658291203] = null;
        Math.g = Array;
        f35--;
    }
}
new C13();
new C13();
const v52 = new Uint8ClampedArray(3);
if (Uint8ClampedArray) {
    try { C13.random(v52); } catch (e) {}
} else {
    new Map();
    new Int16Array(2);
    const o62 = {
        "type": "function",
    };
}
new Int32Array(2763);
new Uint8ClampedArray(1024);
for (let i69 = 256n, i70 = 10;
    (() => {
        new Float64Array();
        parseInt("pop");
        return i69 < i70;
    })();
    ) {
    try { v52.toString(); } catch (e) {}
    const t89 = "3";
    t89[i70] = "3";
}
try {
    f0();
} catch(e89) {
    const v90 = [723200.4184824808,-1000.0,-523437.54204506474,-964793.6675249395];
    let [,v91,...v92] = v90;
    const o94 = {
        "arguments": v90,
        "type": "function",
    };
}
