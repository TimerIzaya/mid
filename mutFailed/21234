function f0() {
    let v3 = "asyncIterator";
    const o8 = {
        get a() {
            v3 = "65537";
            const v6 = this["65537" & this];
            ("65537").length;
            return v6;
        },
        512: v3,
        ["boolean"]: v3,
        "a": "65537",
        "f": "boolean",
        __proto__: "boolean",
        "e": "boolean",
        ..."boolean",
        9: v3,
        [v3]: v3,
        /*
        __proto__: v3,
        */
    };
    return o8;
}
const v9 = f0();
const v10 = f0();
const v11 = f0();
class C12 extends f0 {
    static {
        function f14(a15) {
            const o16 = {
                "c": a15,
                __proto__: a15,
            };
            return o16;
        }
        f14(v11);
        f14(v9);
        f14(v9);
    }
}
new C12();
new C12();
new v10();
const v23 = [0.0,5.0,238440.83028178453,5.0,-997.0809000040175,6.765778707292274,1.7976931348623157e+308,-239.9983018442906,0.8560263539798684];
[-0.0];
[-1e-15,743.7399757395892,1000.0,-1000.0,737.6227914557287,1.737078464153263e+308,3.0,-1000.0,0.6043898792325891,2.0424372945487246];
["number"];
let v42 = undefined;
const o43 = {
    "h": BigUint64Array,
    __proto__: "number",
    "type": "number",
    10: 3853,
};
v42 = o43;
const t55 = "number";
t55[o43] ^= -1000.0;
Object.defineProperty(v23, "g", { writable: true, enumerable: true, value: undefined });
~Float64Array;
Float64Array % Float64Array;
let v49 = ~4;
-536870912 % v49;
++v49;
!-536870912;
Math.sign(v49);
[-1440504730,15059,-128,65536,33714,-51192,-268435456,37915];
[9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
[901134577,512,16,-13797,-1644674640,-4];
function F60(a62, a63) {
    if (!new.target) { throw 'must be called with new'; }
    const v64 = this?.NEGATIVE_INFINITY;
    try { new v64(this); } catch (e) {}
}
new F60();
const v67 = new F60();
v67.b = v67;
new F60(18074);
[0,1593815803];
new Uint8Array(795);
