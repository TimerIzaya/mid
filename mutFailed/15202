let v0 = -4294967297;
const v3 = [609241.7084147574,9.12010045801561e+307,Infinity,3.970492307268323,-6950.1684121111175,-714655.9251241158];
const v4 = [-1000.0,5.616209265752145e+307,1000000000.0,-3.3020062431428105e+307,-2.2250738585072014e-308,0.14804836624339257,-8.307988029338528e+307,-1000000.0,175.35972363406927,-5.956841092756495];
const v5 = [-5.0,1.0817401416896286e+308,0.9137940042205553,-250.5195584737745];
class C6 {
    static valueOf(a8, a9, a10) {
        for (const v11 in v5) {
            a9 / a8;
        }
        return this;
    }
    [v4] = v4;
    [16] = 16;
}
const v16 = new C6();
const v17 = new C6();
const v18 = new C6();
function F19(a21, a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v4;
    } catch(e25) {
    }
    try {
        this.b = v4;
    } catch(e26) {
    }
    [v3,16];
    [a21,16,a21];
    [1000000000.0];
    try {
        this.c = v5;
    } catch(e33) {
    }
}
new F19(v18, v18, C6, v5);
new F19(v16, C6, v3, v3);
new F19(v17, v17, v17, v17);
const v37 = [1073741824,1073741823,1376142744,1073741825];
function f38(a39, a40, a41, a42) {
    try { a42(a42, v3, 16); } catch (e) {}
    ("find")[9];
    ({"length":v0,} = a41);
    v17[v3];
    for (let v47 = 0; v47 < 5; v47++) {
        function f48() {
            [Math.atanh("Vre")];
            return v47;
        }
        f48();
        %OptimizeFunctionOnNextCall(f48);
    }
    const v57 = a39 | a41;
    a39 >>> a39;
    Math.tanh(v57);
    Math.acosh(5);
    a39 && a41;
    Math.floor(-1386350796);
    Math.round(a41);
    try { v37["find"](..."find"); } catch (e) {}
    return a42;
}
for (let v65 = 0; v65 < 10; v65++) {
    f38();
}
%OptimizeFunctionOnNextCall(F19);
f38(v37, f38, f38, f38);
