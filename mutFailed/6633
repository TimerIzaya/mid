let v0 = 234;
function f2(a3, a4) {
    const v6 = 1.0 >>> a4;
    v6 >>> v6;
    return v0;
}
Float32Array.toString = f2;
const v8 = new Float32Array(v0);
1000 >>> 1000;
const v13 = Symbol.toPrimitive;
Symbol.for(v13.description);
const o18 = {
    [v13]() {
        ({"d":v0,} = this);
        return v0;
    },
};
o18.f = o18;
const v19 = new Float64Array(1000);
let v20 = 0;
v20--;
try { new Float32Array(v8, f2, Float64Array); } catch (e) {}
const v24 = new Float32Array(v20);
function f28(a29, a30, a31, a32) {
    a29 + a29;
    try { a30.toString(f28, f2); } catch (e) {}
    a31 === a31;
    a32 + a32;
    const o62 = {
        set h(a38) {
            try {
                v24.toLocaleString("Rexn", "Rexn");
            } catch(e41) {
            }
            try { ("sync").toLocaleLowerCase(); } catch (e) {}
            const o46 = {
                "execution": "sync",
                "type": "minor",
            };
            super.d;
            let v48 = 128;
            v48--;
            try { new Int16Array(v24, v48, a31); } catch (e) {}
            new Int16Array(v48);
            new BigUint64Array(5);
            4 >>> 4;
            const v59 = new Int8Array(4);
            try { v59.filter(f28); } catch (e) {}
            gc(o46);
        },
    };
    function f63() {
        return a30;
    }
    f63.d = f63;
    function f64(a65) {
        (-22639) ** o18;
        Math.expm1(-22639);
        !Float32Array;
    }
    Object.defineProperty(o62, "d", { configurable: true, get: f63, set: f64 });
    return o62;
}
f28(1000000000000.0, Float32Array, 2.6700941509618996, 721959.6793882339).h;
const v74 = f28(721959.6793882339, v19, 2.6700941509618996, 2.6700941509618996);
v74.h = v74;
const v76 = f28(721959.6793882339, v74, 1000000000000.0, 2.6700941509618996)?.constructor;
try { new v76(f28); } catch (e) {}
class C81 {
    n(a83, a84) {
        function F85(a87, a88, a89) {
            if (!new.target) { throw 'must be called with new'; }
            const v90 = a87?.isWellFormed;
            try { new v90(); } catch (e) {}
            a88++;
        }
        const v93 = new F85(a83, 35066, -65537);
        try { v93.isPrototypeOf(v93); } catch (e) {}
        v74.h ^= -65537;
        try { a84(); } catch (e) {}
        Math.imul(v20, 214498220);
        214498220 & v20;
        Math.asin(v20);
        !(-Float32Array);
        function f106(a107, a108) {
            const o109 = {
                __proto__: a108,
            };
            o109.f = o109;
            return a107;
        }
        const v110 = f106(1340360056, null);
        v110 + v110;
        Math.cosh(214498220);
        const v113 = new F85("fl", F85, v93);
        F85(v113);
    }
}
try { C81.toString(); } catch (e) {}
const v116 = new C81();
const v117 = v116?.n;
try { v117("fl", "fl"); } catch (e) {}
new C81();
new C81();
try { Array.from(v19); } catch (e) {}
Array.prototype = Array;
Array(9);
[-1000.0,-3.0,5.0,-1000000000.0,NaN,1000.0,8.243735512854116e+307,-2.0];
[-401759.74481176864,-2.2250738585072014e-308,-1000000.0,1.7976931348623157e+308,1000000000.0,1.7976931348623157e+308];
const v127 = [-846.1037981747623,2.220446049250313e-16,-Infinity,1.3619806788460808e+308,Infinity,2.220446049250313e-16,1000000000000.0];
v127[0];
try { v127.group("fl"); } catch (e) {}
/abc+?/im;
/ab\b\d\bcdHa\S+/gvdmsy;
