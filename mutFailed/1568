function f0() {
    const o10 = {
        valueOf(a5, a6) {
            try {
                this.fuck(-9007199254740990, a5, "6Q");
            } catch(e9) {
            }
            return -2;
        },
        "g": -11264,
        __proto__: "6Q",
        [-2]: -11264,
        "d": "6Q",
    };
    o10.h = o10;
    return o10;
}
const v11 = f0();
f0();
const v13 = f0();
const v14 = [-9,256,1073741825,-12,10000];
[4,-65535,-128,3];
const v16 = [9007199254740990];
try { v16.lastIndexOf(v11); } catch (e) {}
1000000.0 + 1000000.0;
183.59684101295534 >= 183.59684101295534;
class C23 extends f0 {
    get MIN_SAFE_INTEGER() {
        Math.cos(-5.0);
        Math.pow(-13, v13);
        Math.sign(-5.0);
        return 183.59684101295534;
    }
    7;
    static [v14];
}
new C23(f0);
new C23();
new C23();
Int32Array.g = Int32Array;
const v38 = new Int32Array(-1073741824);
v38[0] %= -1073741824;
