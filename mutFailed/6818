class C3 {
    static ["8"] = "ETPq";
    static {
        this ** "ETPq";
        let v6;
        try { v6 = ("ETPq").replaceAll("8", "8"); } catch (e) {}
        new WeakMap();
        const t7 = "8";
        t7[-65535] |= -65535;
        ("ETPq")[v6];
        const t9 = "8";
        t9[8] = -65535;
    }
    240;
    static #h;
    e;
}
const v10 = new C3();
const v11 = new C3();
const v12 = new C3();
function f13(a14, a15, a16) {
    const o23 = {
        "f": v12,
        "b": v10,
        toString(a18, a19) {
            function f20(a21) {
                return a21;
            }
            class C22 extends f20 {
                h;
                e = a19;
                static #h = a14;
            }
            return v12;
        },
    };
    return o23;
}
f13(v10, C3, v12);
f13(v10, v10, v12);
f13(v11, v10, v12);
new Int8Array(0);
const v32 = new Float64Array();
const v35 = new Uint8Array();
const v38 = v35[44610];
let v39;
try { v39 = v38(); } catch (e) {}
v32.toString = v39;
[3,4294967295,-49424,9007199254740991,-4,5851,-10,4096];
function f42(a43, a44) {
    Symbol.toPrimitive;
    const v49 = Array();
    function f50() {
        return 3;
    }
    function f51(a52) {
        const o56 = {
            "execution": "async",
        };
        gc();
    }
    Object.defineProperty(v49, 0, { configurable: true, enumerable: true, get: f50, set: f51 });
    v49.unshift(3, a43);
}
new Promise(f42);
new Uint8ClampedArray(16);
new Int32Array(16);
[-1653309803];
("29753").replaceAll("29753", "b").split("b");
