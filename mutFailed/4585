const v0 = [];
function f1() {
    const o4 = {
        "e": v0,
        "h": v0,
        "a": v0,
        "b": v0,
        p() {
            const v3 = super.d;
            super[v3] = v0;
            return v3;
        },
        3158430996: v0,
        3: v0,
        2: v0,
    };
    return o4;
}
f1();
f1();
f1();
/a{1,2}?[t(x)(x)(x)\3*]?/udmy;
/(?:a{5,1000000}){3,1000000}/gvis;
/\ud808\udf45*/vdims;
const v14 = new Uint8ClampedArray(3394);
for (let v15 = 0; v15 < 5; v15++) {
    v14[v15] = f1;
}
new BigInt64Array(3394);
function f18() {
    const o21 = {
        501: null,
        "a": null,
        "h": null,
        [null]() {
            super.b;
        },
        "f": null,
        9: null,
        "e": null,
        ...null,
    };
    return o21;
}
f18();
f18();
f18();
new Uint8ClampedArray(0);
new Uint8ClampedArray(145);
class C31 {
}
const v32 = [-4294967295];
function F33() {
    if (!new.target) { throw 'must be called with new'; }
}
const v35 = new F33();
const v36 = new F33();
const o38 = {
    "h": v36,
    6: v36,
    128: undefined,
    "e": v32,
    "e": v35,
};
const v39 = new C31();
const v40 = v39.constructor;
let v41;
try { v41 = v40(v40, C31); } catch (e) {}
function f42() {
    const v44 = ("D")[0];
    try { v44.substring(v41); } catch (e) {}
    return v41;
}
%PrepareFunctionForOptimization(f42);
f42();
%OptimizeFunctionOnNextCall(f42);
f42();
