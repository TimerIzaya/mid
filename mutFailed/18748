const v0 = [0.0,766.7997737387952,-2.2250738585072014e-308,-353101.30015880964];
const v1 = [0.9448157311784335,0.22492770676672258,-1000000.0,-1000.0,-2.2250738585072014e-308,-1000000000000.0];
const v2 = [1.0,-3.0,0.9876956103504134,-186.3967551308059];
function f3(a4, a5) {
    const o6 = {
        __proto__: v1,
        "g": v1,
        "b": v1,
        "c": a5,
        4294967295: a4,
        "f": v2,
        6: a5,
        "h": v1,
        "e": a5,
        "a": v1,
        "d": v2,
    };
    return o6;
}
const v7 = f3(v1, v1);
const v8 = f3(v1, v2);
const v9 = f3(v2, v1);
function F10(a12, a13, a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = v9;
    } catch(e16) {
    }
    try {
        function f20(a21) {
            const o22 = {
                3677: -128n,
            };
            return o22;
        }
        const v23 = f20(a14);
        v23[3677];
        const v25 = f20();
        const v26 = f20(-1024n);
        function F27(a29, a30, a31, a32) {
            if (!new.target) { throw 'must be called with new'; }
            const v33 = this?.constructor;
            try { new v33(this, a32, a32, this); } catch (e) {}
            a30[3677];
            a31 << a31;
            a32.e = a32;
            try {
                this.e = a29;
            } catch(e37) {
            }
            try {
                this.d = f20;
            } catch(e38) {
            }
        }
        new F27(v25, v25, -128n, F27);
        new F27(v23, v26, -1024n, v23);
        new F27(v26, v23, -9223372036854775807n, v23);
        try { Set.apply(v26, -1024n); } catch (e) {}
        const v44 = new a12();
        v44.entries();
        this.h = v8;
    } catch(e46) {
    }
    class C48 {
    }
    function f49() {
        const o51 = {
        };
        gc(o51);
    }
    const v53 = new C48();
    const v54 = v53.constructor;
    v54[Symbol.toPrimitive] = f49;
    const v57 = new v54();
    ([v57.constructor,Map]).toSorted();
}
new F10(v9, v7, v9, v8);
new F10(v7, v8, v8, v7);
new F10(v7, v8, v8, v9);
class C64 {
    static #n(a66, a67, a68) {
        const v69 = new F10(v9, v9, v9, this);
        v69.h;
        return a66;
    }
    #p(a72, a73, a74) {
        %VerifyType(v0);
        [-45353553,-6,1073741825,53877,536870888,21921,7,-8,-9007199254740991];
        [-32960,-12915,-36706];
        return [3,268435441,44997,129];
    }
}
new C64();
new C64();
new v8();
for (let v81 = 0; v81 < 25; v81++) {
}
/xyz?/gudms;
