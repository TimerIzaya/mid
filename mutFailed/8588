const v3 = [1073741825];
function f4(a5) {
    return Math.expm1(Math);
}
v3.constructor = f4;
const v8 = v3?.constructor;
try { new v8(1073741825); } catch (e) {}
const v10 = [536870887,v3,1073741825,1073741825];
try { v10.reduceRight(536870887); } catch (e) {}
const v12 = [3,536870887,3,v3,1073741825];
try { v12.propertyIsEnumerable(536870887); } catch (e) {}
class C14 {
    constructor(a16, a17, a18, a19) {
        this[Symbol.toPrimitive] = f4;
        a19.toString = f4;
        try { this.propertyIsEnumerable(a19); } catch (e) {}
        try { a16.map(536870887); } catch (e) {}
        a17++;
        try { a18.group(536870887); } catch (e) {}
        if (v3 < a18) {
            v10[a18];
        } else {
            try {
                v12.slice(1073741825, 559057204);
            } catch(e30) {
            }
        }
    }
}
try { C14.apply(3, v12); } catch (e) {}
const v32 = new C14(v10, 536870887, v12, 3);
function f33() {
    return f4;
}
Object.defineProperty(v32, "constructor", { get: f33 });
try { v32.constructor(v10, v3, 3, v10); } catch (e) {}
const v35 = new C14(v10, 536870887, v12, 1073741825);
const v36 = v35?.constructor;
try { new v36(v32, v35, v10, v35); } catch (e) {}
const v38 = new C14(v3, 3, v3, 3);
class C39 extends C14 {
    m(a41, a42) {
        const o43 = {
        };
        try {
            o43.f = a41;
        } catch(e44) {
        }
        try {
            const o45 = {
            };
            o45.f = a41;
            o45.h = v35;
        } catch(e46) {
        }
        try {
            const o47 = {
            };
            o47.f = a41;
            o47.h = v35;
            o47.d = v3;
        } catch(e48) {
        }
        try {
            const o49 = {
            };
            o49.f = a41;
            o49.h = v35;
            o49.c = this;
        } catch(e50) {
        }
        return v38;
    }
}
C39.prototype = C39;
new C39();
new C39();
new C39();
const v55 = (2136873598).constructor;
v55.prototype = v55;
v55().toExponential();
