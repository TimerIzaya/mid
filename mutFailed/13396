const v0 = [];
let v1 = -14;
const v4 = [-15];
const v5 = [v1,v0,v4,-15,v4];
[-8284,v0,v5,v5];
class C7 {
    get e() {
        let v9 = 0;
        while (10 < 10) {
            Math.max(14);
            v1--;
            Math.trunc(v9);
            Math.sign(14);
            -555.3012915720933;
            v9++;
        }
        return this;
    }
}
new C7();
const v22 = new C7();
const v23 = new v22();
/(?:a+)+/um;
const v25 = /^xxx$((((.).).).)(foo(?<=bar)baz)/gudsy;
/{z}/gdi;
const v27 = /EyL9/uim;
const v28 = [-1300791131,33477,0,5,-48254,14,4294967295,545422795];
function F29() {
    if (!new.target) { throw 'must be called with new'; }
    const v33 = [gc,v27];
    Reflect.apply(v28.push, v27, v33);
}
new F29();
let v37 = v25 - -15;
v37 += v22;
try {
    v28.valueOf = v23;
} catch(e38) {
}
