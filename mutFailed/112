const v6 = [Map,Map];
for (let [v8] of "Opx24") {
    let v9;
    try { v9 = new v8(Int8Array, v8, ...v6, v8, v8, 10); } catch (e) {}
    const t4 = "Opx24";
    t4.length <<= Map;
    let [] = v6;
    %VerifyType(v9);
    new Uint16Array(16);
    new Uint32Array(8);
    new Uint8ClampedArray(8);
}
new Int8Array(10);
const v24 = new Float64Array(6);
v24[Map](Int32Array, 6);
Uint32Array >> Uint32Array;
[1024,-29188,4294967296];
[-4294967296,-1,1073741824];
[58817,585600799,-1024,-4294967296,-245206692,10,129];
new Uint32Array(637);
new Int8Array(1);
[Reflect,Reflect,Reflect,Reflect];
new Date();
const o41 = {
};
function f42() {
    return o41;
}
[0.0357572534828694];
[Infinity,-9.859881831291677,977889.3328661369];
[-3.0,1000.0,-41.697401048604206,-0.026907940582441725,0.09323795054849371,1.5771740872774824,-1000000000.0,-912926.3499887395,-5.0];
const v46 = [268435440,8,7,1073741824,2147483647,70520590,-9223372036854775807,129,268435439,-1147002105];
function f48(a49, a50) {
    const o51 = {
        "d": a50,
        "c": -5,
    };
    return o51;
}
v46.concat(v46);
