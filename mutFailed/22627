new Int32Array(1639);
new Uint16Array(1639);
const v8 = new Int32Array(3);
const v11 = new Uint32Array(82);
let v12 = 190;
let v13 = v12--;
new Float32Array(v12);
new BigInt64Array(1828);
function f22(a23) {
    a23 << a23;
    a23 >> a23;
    const o33 = {
        [12298n](a27) {
            const v28 = delete this?.e;
            82 instanceof v28;
            v28[this] = 2025423814n;
            return this;
        },
        __proto__: 2025423814n,
        ...a23,
        "a": 12298n,
        "b": 2025423814n,
        "f": 2025423814n,
        ...a23,
    };
    o33[12298];
    return o33;
}
try { f22(12298n); } catch (e) {}
const v36 = f22(-22903n);
v36[12298] = v36;
const v37 = f22(12298n);
v37.a = v37;
const v38 = v37[12298];
let v39;
try { v39 = v38.call(v8); } catch (e) {}
const v40 = [];
function f41() {
    const v42 = -v40;
    const v43 = v42 << v42;
    v43 << v43;
    const v45 = v42 && v40;
    const v46 = -v45;
    v46 >> v46;
    return v45;
}
f41.caller = f41;
const v48 = v38();
new Uint8Array(2, 2, 2);
const v53 = Symbol.toPrimitive;
Symbol.prototype = Symbol;
const v55 = v53.description;
const v59 = v38.for(Symbol.for(v55).description);
function f60(a61, a62, a63, a64) {
    a62 * a62;
    const o69 = {
        "b": a61,
        "c": a64,
        n(a67, a68) {
        },
    };
}
f60.prototype = f60;
-659.0540372978887;
const v74 = -2.2250738585072014e-308 == -2.2250738585072014e-308;
v74 && v74;
const v76 = [1613217357,204598905,15977,1122227661,64,-2,-12,536870888];
const v77 = v39?.forEach;
let v78;
try { v78 = new v77(v55); } catch (e) {}
const v79 = [12,-256,-4096,2,7,8,21956,46111,11,10];
const v80 = v79?.values;
try { new v80(); } catch (e) {}
try { v79.reduce(-22903n); } catch (e) {}
const v83 = [-1073741824,1665564361,16526,1805211777,10,-9007199254740990,4,-17063,-1];
const v84 = [-2.2250738585072014e-308,0.8014728140665155,1.4073101706157717e+308,1.4751052216559766e+308,2.0,-692.9604671107461,-2.220446049250313e-16,2.0];
try { v84.copyWithin(v48, v48); } catch (e) {}
const v86 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
try { v86.with(v86, v86); } catch (e) {}
const v88 = [-1.015259194643325e+308,-Infinity,-9.825391401141273,-2.2250738585072014e-308,5.0,-2.2250738585072014e-308];
class C89 {
    constructor(a91, a92, a93, a94) {
        a91[7] = a91;
        v13--;
        const v96 = this?.constructor;
        try { new v96(v86, a93, a93, v76); } catch (e) {}
        a92 >>> a92;
        -0.0 >>> -0.0;
    }
    /*
    constructor(a104, a105, a106, a107) {
        const o113 = {
            "maxByteLength": 2240,
        };
        const v115 = new ArrayBuffer(2240, 2240);
        new Uint8ClampedArray(v115);
        this[268435456];
        v84 && this;
        try {
            v84.length = v88;
        } catch(e120) {
        }
    }
    */
    static 268435439 = v83;
    #c = -2.2250738585072014e-308;
    static 832209355 = 2.220446049250313e-16;
}
try { new C89(v11, 1828, v76, v76); } catch (e) {}
v59[832209355] = C89;
function f122(a123) {
    new Float64Array();
    return -2.2250738585072014e-308;
}
C89.valueOf = f122;
const v126 = new C89(v76, 659.0540372978887, v76, v76);
const v127 = new C89(v126, 2.220446049250313e-16, v84, v88);
const v128 = v127?.constructor;
try { new v128(v84, 659.0540372978887, 2.220446049250313e-16, v127); } catch (e) {}
new C89(v127, v127, 659.0540372978887, v76);
try {
    v79.length = C89;
} catch(e131) {
}
const v132 = new C89(v84, 2.220446049250313e-16, v83, v88);
v132.length = v132;
function f133() {
    return v78;
}
f133.arguments = f133;
function F134() {
    if (!new.target) { throw 'must be called with new'; }
    const v136 = this?.__lookupGetter__;
    try { new v136(this); } catch (e) {}
}
new F134();
const v139 = new F134();
v139.b = v139;
const v140 = new F134();
function f143() {
}
try { new f143(); } catch (e) {}
const v145 = [16,1073741824];
const v146 = [f133];
v146[0] = v146;
[v145,v139];
f133();
for (let v149 = 0; v149 < 5; v149++) {
    f143();
}
try { v140.n(); } catch (e) {}
for (let v152 = 0; v152 < 5; v152++) {
}
for (let v153 = 0; v153 < 625; v153++) {
    f60(Uint8Array, 2);
}
%OptimizeFunctionOnNextCall(f41);
f41();
const v156 = f22(-22903n);
const v158 = new WeakSet();
function f159(a160, a161) {
    const o164 = {
        1073741823: 2025423814n,
        1: a160,
        get h() {
            try {
                this.toString = f22;
            } catch(e163) {
            }
            return 12298n;
        },
        "b": 2025423814n,
        "f": 12298n,
        "e": -22903n,
        "g": 12298n,
    };
    return o164;
}
f159(v37, v156);
try { v139.shift(v38); } catch (e) {}
v48 == 2025423814n;
Symbol[-2] = 12298n;
try {
    v127.__proto__ = Symbol;
} catch(e168) {
}
f159(v156, v37);
const v170 = f159(v156, v156);
function F171(a173, a174, a175, a176) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v36;
    } catch(e177) {
    }
}
const v178 = new F171(-22903n, v158, v158, v158);
new F171(2025423814n, v36, v36, v178);
new F171(-22903n, v36, v37, v170);
const v183 = new Int32Array(2);
v183.toSorted();
