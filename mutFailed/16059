const v5 = new BigInt64Array(989);
new Int32Array(65);
new Uint16Array(128);
function f17(a18) {
    v5[9223372036854775807] = 9223372036854775807;
    const v19 = [601759695];
    const v20 = [1073741824,1073741823,1376142744,1073741825];
    function f21(a22, a23, a24, a25) {
        let [] = v20;
        try { v20["find"](..."find", a25, ...v19); } catch (e) {}
        return a24;
    }
    return f21;
}
Uint16Array[Symbol.toPrimitive] = f17;
function f30(a31) {
    const v33 = new Date();
    const v35 = new Set();
    v35.add(v33);
    let [v37,,...v38] = v35;
    return v37.setUTCMilliseconds();
}
Object.defineProperty(Uint16Array, "valueOf", { configurable: true, value: f30 });
const v40 = new Uint16Array(209);
const v41 = 209 > Uint16Array;
try {
    v40.__proto__ = v40;
} catch(e42) {
}
let v43 = 1829;
const v45 = new Uint8Array(v43);
Object.defineProperty(v45, v41, { writable: true, configurable: true, enumerable: true, value: v43 = 209 });
v45[8] = Uint16Array;
let v46;
try { v46 = v43(); } catch (e) {}
try { v40.forEach(v46, v46); } catch (e) {}
new Float64Array(3916);
/(\xed\xb0\x80)\x01/vdsy;
/a[a-z]/vim;
