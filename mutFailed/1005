const v0 = [-977851571];
const v1 = [8,-65536,2,-5,16016,9007199254740991,6481];
const v2 = [34893,-268435456,1,-1360755135,127];
class C3 {
    static #toString(a5) {
        const o8 = {
            "maxByteLength": 65535,
        };
        const v10 = new SharedArrayBuffer(8, o8);
        new DataView(v10);
        return v2;
    }
}
const v13 = new C3();
const v14 = new C3();
const v15 = new C3();
class C16 {
    m(a18, a19, a20) {
        try { C3.n(v2, v2, a20, a19); } catch (e) {}
        super[a20];
        return v13;
    }
    c = v1;
    65535 = v2;
    constructor(a24, a25) {
        this["m"](...v2, ...a24, v14, ..."m");
        super[this] = v0;
    }
}
const v28 = new C16(v0, v1);
new C16(v15, v2);
const v30 = new C16(v0, v2);
class C31 {
    static #p(a33, a34, a35, a36) {
        try { new a35(...v1, a35, v15, v30); } catch (e) {}
        try {
            this.fuck(v0, v13);
        } catch(e39) {
        }
        let v40;
        try { v40 = this(v14, v30, v28, v2); } catch (e) {}
        v0.length %= v40;
        %VerifyType(v13);
        C16 / a35?.d;
        try {
            new C16("atan2", /5hD/udimsy);
        } catch(e46) {
        }
        v13[v2];
        return v15;
    }
    static 10;
    static [C16];
    static [v14] = C31;
    static [v1] = v0;
    4;
    #a;
    static 10000;
    [v14];
    5 = v30;
    2 = v13;
}
new C31();
new C31();
new C31();
function f53(a54, a55) {
    const o56 = {
        [a54]: a55,
        65536: a55,
    };
    return f53;
}
f53("-354330605");
f53("-354330605", 2);
