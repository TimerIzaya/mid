const v0 = [-977851571];
const v3 = new Float64Array();
const v7 = new Float32Array(4096);
const v9 = [v7,Uint32Array,[v3,Uint32Array,v7]];
v9[v9] >>= 1000;
const v10 = [8,-65536,2,-5,16016,9007199254740991,6481];
const v11 = [34893,-268435456,1,-1360755135,127];
class C12 {
    static #toString(a14) {
        const o17 = {
            "maxByteLength": 65535,
        };
        const v19 = new SharedArrayBuffer(8, o17);
        new DataView(v19);
        return v11;
    }
}
const v22 = new C12();
const v23 = new C12();
const v24 = new C12();
class C25 {
    m(a27, a28, a29) {
        try { C12.n(v11, v11, a29, a28); } catch (e) {}
        super[a29];
        return v22;
    }
    c = v10;
    65535 = v11;
    constructor(a33, a34) {
        this["m"](...v11, ...a33, v23, ..."m");
        super[this] = v0;
    }
}
const v37 = new C25(v0, v10);
new C25(v24, v11);
-4.380315352541508e+307 >> 129;
new Float64Array();
const v44 = new C25(v0, v11);
class C45 {
    static #p(a47, a48, a49, a50) {
        let v51;
        try { v51 = this(v23, v44, v37, v11); } catch (e) {}
        v0.length %= v51;
        %VerifyType(v22);
        v22[v11];
        return v24;
    }
    static 10;
    static [C25];
    [v23];
    5 = v44;
    2 = v22;
}
new C45();
new C45();
new C45();
function f58(a59, a60) {
    const o61 = {
        [a59]: a60,
        65536: a60,
    };
    return f58;
}
f58("-354330605");
Reflect.construct(Uint8ClampedArray, [[1.0,-6.818981069405753e+307]]);
f58("-354330605", 2);
