new Int32Array(2890);
function f6() {
    return Int32Array;
}
[-256,1608459959,39507,16,4294967297,-831333309];
const v9 = [-1367505392,5,42781,-2147483648,-128];
[-65536,4096,512,2123600110,-4294967295,-2004381316,65535];
const v14 = new Date(64);
const v15 = v14.setMonth(-3);
function f20(a21, a22) {
    const o23 = {
        ...v15,
        "b": a21,
    };
    return o23;
}
f20(-639117091, 3);
f20(-3, -639117091);
f20(1253930382, -3);
const v33 = new Uint16Array(257);
const v34 = 1511 - 1511;
v33[v34] = v34;
new BigUint64Array(257);
new Uint16Array(64);
let v43 = v9.constructor;
let v44;
try { v44 = new v43(3n); } catch (e) {}
function f45(a46, a47) {
    return a47;
}
Set.toString = f45;
Set.constructor(Set);
new Int8Array(747);
function F51() {
    if (!new.target) { throw 'must be called with new'; }
}
const v54 = new F51();
new F51();
const v56 = new F51();
class C60 extends F51 {
    b = "number";
    set g(a62) {
        let v61 = this;
        ({"c":a62,"d":v61,} = v56);
    }
    static {
        ++v43;
        Object.defineProperty("bigint", "a", { enumerable: true, get: f6 });
        v15.c;
        new Array(257);
        Math.sin(-9007199254740991);
        function f73() {
            const o76 = {
                __proto__: 2,
                ...2,
            };
            const v77 = new Uint16Array(o76, 2, 2);
            Math.exp(Uint16Array);
            const v81 = v44++;
            Math.asin(Uint16Array);
            v44 - -14639;
            Math.atan2(v44, -14639);
            v81 + -14639;
            v77[1] = v77;
            return 2;
        }
        const v88 = new BigInt64Array(218);
        v88.sort(f73);
        const v90 = super[this];
        ("function").substring(v90, this, v90, "function", "8", this);
        super.c;
        try {
            v54.f = v90;
        } catch(e93) {
        }
    }
}
