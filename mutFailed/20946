new BigInt64Array(218);
new Int16Array(128);
[-13,1499908611];
const o11 = {
};
new Date(-9223372036854775807);
[2147483647,-536870912];
[-7,-4294967297,2147483647,11296,268435440];
[-1.722675800363672e+308,0.3010862757059639,-363114.8300702403,-689.430465888307,-614128.9972527858,-3.0,-1.0,1.172796607983158e+308,4.0,5.0];
function f18(a19, a20, a21, a22) {
    class C24 {
        constructor(a26, a27) {
            function f30(a31, a32, a33, a34) {
            }
            for (let v35 = 0; v35 < 500; v35++) {
                f30();
                try {
                    a26 &= -5.160144283511562e+307;
                } catch(e37) {
                    const v39 = new Uint32Array();
                    function f42() {
                        3.4890473589784586e+307 > 3.4890473589784586e+307;
                        -4294967296 >> -4294967296;
                        class C49 {
                        }
                        const v50 = new C49();
                        v50.g = v50;
                        const v51 = new C49();
                        v51.length;
                        const v54 = ([9007199254740992,9007199254740992]).constructor;
                        class C55 extends v54 {
                        }
                        try { C55.apply(v54, C49); } catch (e) {}
                        const v57 = new C55();
                        Object.defineProperty(v57, 65537, { value: v51 });
                        return Int16Array;
                    }
                    f42();
                    f42();
                    %OptimizeFunctionOnNextCall(f42);
                    const o64 = {
                        [v39](a61, a62, a63) {
                        },
                    };
                }
            }
        }
    }
    const v67 = new BigInt64Array(4046);
    try { Worker(); } catch (e) {}
    ("of").replaceAll("of");
    function f73() {
        return f73;
    }
    function f74(a75) {
        return a75;
    }
    Object.defineProperty(Uint32Array, 0, { enumerable: true, get: f73, set: f74 });
    let o76 = {
    };
    function f78() {
    }
    function f79() {
        const o116 = {
            m(a81) {
                a81.f = a81;
                try { a81.next(f79); } catch (e) {}
                a81.c = a81;
                a81.h = a81;
                const o83 = {
                };
                function f84(a85, a86, a87) {
                }
                try {
                } catch(e88) {
                    const v92 = new Uint8ClampedArray(512);
                    new Uint8ClampedArray(798, ...v92, o83);
                }
                const o94 = {
                };
                let v96 = -9007199254740991;
                v96++;
                const v98 = v96 >> v96;
                function f99() {
                    return f99;
                }
                for (let v100 = 0; v100 < 5; v100++) {
                }
                arguments.constructor = f78;
                arguments.constructor;
                const v103 = [];
                Object.defineProperty(v103, "constructor", { enumerable: true, value: f84 });
                v103["concat"]("concat");
                class C106 {
                }
                const v107 = C106.name;
                try { v107.codePointAt(Math); } catch (e) {}
                const v111 = new Int8Array(3938);
                let v112 = 3;
                for (let i = 0; i < 5; i++) {
                    [...v112] = v111;
                }
                const o113 = {
                };
                try {
                    const o114 = {
                    };
                } catch(e115) {
                }
                return v98;
            },
        };
        o116.m(o116);
        return o116;
    }
    f79();
    Math.acosh();
    [,...o76] = v67;
    return f18;
}
for (let v120 = 0; v120 < 5; v120++) {
    f18(f18, v120, f18, v120);
}
[-5.0,-Infinity,1000.0,-1000000000.0,-1.7139288710122997,0.22272651449960412,0.002400467741433654,NaN,2.2250738585072014e-308,-1000.0];
[1000.0,-3.0,2.9711565239928483e+307,2.1765721487961276,-1e-15,-978.6472021559039,0.30280975888400585,-1.7166590460746833e+308,331.752486050116,4.561721042221604e+307];
function f124() {
}
const v125 = [-2,257,-107178159,-35269,9223372036854775807,1203530861,-32678];
const v129 = new Float64Array([-4294967296]);
new Uint32Array(v129);
const o132 = {
};
Object.defineProperty(o132, "set", { writable: true, configurable: true, enumerable: true, value: f124 });
const v134 = new Proxy(v125, o132);
v134[7] = o132;
