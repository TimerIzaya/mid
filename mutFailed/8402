let v0 = 0.24832559410955835;
let v2 = 3;
class C3 {
    constructor(a5) {
        a5.b = a5;
        Math.PI = Math;
        29149123 * 29149123;
        let v9 = -2.2250738585072014e-308;
        const v10 = a5 - v9;
        Number.isNaN(v10);
        Math.fround(v10);
        --v9;
        a5--;
        C3?.[1218753750];
        ({"E":v2,...v0} = Math);
        -(-167308.19291222026);
        29149123 | 29149123;
    }
    static #e;
}
try { new C3(v2); } catch (e) {}
new C3(v0);
const v25 = new C3(v0);
const v26 = new C3(v25);
({"h":v2,} = v25);
try {
    C3.__proto__ = v26;
} catch(e33) {
}
function f34() {
    return -65537;
}
try { new f34(); } catch (e) {}
function F36(a38, a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    const v41 = this.constructor;
    try { new v41(); } catch (e) {}
    for (let v44 = 0; v44 < 100; v44++) {
        f34();
    }
    try {
        f34();
    } catch(e47) {
    }
}
new F36();
class C49 extends F36 {
}
const v50 = new C49();
try {
    C49.__proto__ = v50;
} catch(e51) {
}
C49[4096];
