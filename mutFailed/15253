let v6 = -1.531590487106903e+308;
if (127) {
    v6 /= v6;
} else {
    try { v6.setYear(v6, v6, -10, v6, 2147483649); } catch (e) {}
}
try { ("string").split(-4294967295, v6); } catch (e) {}
"toString" == "toString";
const v15 = [12,888028080,255,-8,1,-57675,-3,10,-4,0];
let v16;
try { v16 = v15.map(v6); } catch (e) {}
const v17 = [127,-9,1,43993,-9223372036854775807,16,1543515446,-1791242754];
const v18 = [51233,1392639567,-424696835,536870887,1024,65537];
const v21 = new Uint8ClampedArray(3);
class C22 {
    constructor(a24, a25, a26, a27) {
        this[1];
        const v29 = a25.constructor;
        try { new v29(3, a27, this, this); } catch (e) {}
        for (let v31 = 0; v31 < 5; v31++) {
            v21[v16] = a27;
        }
    }
    #n(a33, a34, a35, a36) {
        try { C22(...v17, ...a33, Uint8ClampedArray, ...v18); } catch (e) {}
        return 3;
    }
    [v6];
}
new C22();
