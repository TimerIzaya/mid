new BigInt64Array(13);
new BigUint64Array(2);
class C13 extends Array {
    2 = 64;
}
Int16Array.prototype;
const v17 = new Uint16Array(Int16Array);
v17.reverse();
const o19 = {
};
o19.constructor;
new Int16Array(257);
try { ("-11838").toLocaleLowerCase(); } catch (e) {}
const v25 = new Float32Array();
const v26 = v25?.entries;
try { new v26(); } catch (e) {}
try { ("copyWithin").charAt("-11838"); } catch (e) {}
v25["copyWithin"](..."-11838").byteOffset;
function f32(a33, a34, a35, a36) {
    class C38 extends Date {
    }
    const v39 = new Float32Array();
    v39.getDay();
    return f32;
}
f32(2, 2, 2, 2);
const v45 = new Uint8ClampedArray(9);
try { v45.set(BigUint64Array); } catch (e) {}
new Uint8Array(v45);
