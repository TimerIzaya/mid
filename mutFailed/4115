const v0 = [0.0,-2.2250738585072014e-308,1e-15,3.3021631543231655e+307,-1e-15,595597.9021364127,0.28761565924260835];
const v1 = [-411.70090675657866,2.2250738585072014e-308,-1.3713178833665552e+308,-1000000.0,NaN,-85.63451124892367,0.35258364859811175,0.9229814832143979,1.7976931348623157e+308];
function f2(a3) {
    const o6 = {
        set b(a5) {
        },
    };
    o6.f = o6;
    return o6;
}
v1[Symbol.toPrimitive] = f2;
const v9 = [-814601.8613494375,-6.286600803257407e+307,354.4230017864852,6.78581597660548e+307,-797905.0829871311];
v9[Symbol.toPrimitive] = f2;
function f12(a13, a14) {
    const o24 = {
        __proto__: v9,
        ...a13,
        "c": v9,
        "arguments": v0,
        "d": a14,
        ...a13,
        "h": a13,
        ...v0,
        [a14]: v1,
        "a": a14,
        104: v1,
        15: v1,
        "c": a13,
        "a": a13,
        [v1]: a13,
        set d(a16) {
            for (let v17 = 0; v17 < 25; v17++) {
            }
        },
        toString(a19, a20, a21) {
            f12 < v0;
            super[v1];
            return f12;
        },
        ...a13,
    };
    return o24;
}
const v25 = f12(v9, v1);
const v26 = f12(v0, f12);
v26[4];
f12(v9, v9);
0 % 0;
1207147467 + 1207147467;
function f34() {
    return v26;
}
const v35 = [v9,v1,v26,0,-13174];
try { v35.map(v25); } catch (e) {}
try {
} catch(e37) {
}
const v40 = [,[,]];
v40[0] = f2;
class C41 {
    [v40] = undefined;
}
C41.length;
new C41();
[v25,v9,f12,-13174,v35];
[v35,v1];
const v47 = [0.00952483356421907,-3.0,2.220446049250313e-16];
function f48() {
}
class C49 extends f48 {
}
const v50 = new C49();
const v51 = v50?.constructor;
try { new v51(); } catch (e) {}
Int32Array.name;
function F57() {
    if (!new.target) { throw 'must be called with new'; }
}
try { new F57(); } catch (e) {}
-10 * v47;
function f61(a62, a63, a64) {
}
const v65 = [2147483649,-62399];
v65[Symbol.unscopables] = v65;
