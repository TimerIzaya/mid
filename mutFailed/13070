function f6(a7, a8) {
    const o18 = {
        [a8]: 627594191,
        o(a10, a11) {
            this[Symbol.match] = a11;
            return 627594191;
        },
        set g(a15) {
            let v16;
            try { v16 = a15.transfer(a15, this, -4.0, 0.5150090042676098, 4294967296); } catch (e) {}
            try { new a7(a15, 4294967296, -4.0, a8, this, v16); } catch (e) {}
        },
        ...a7,
        "a": 512,
    };
    return o18;
}
f6(4294967296, 4294967296);
f6(f6(4294967296, 4294967296), 4294967296);
[-Infinity,-7.230945278929126,2.220446049250313e-16,-1.7976931348623157e+308,-1000.0,-1.0,5.002169598915335,1e-15,-5.0,-4.0];
[2.0];
const v28 = new Date();
[-113.88577577875685,NaN,-138.72295990426278,-725973.0177101751,1.0];
1000000.0 % 1000000.0;
const v41 = ([-698004.1950483839,2.2250738585072014e-308,-658.5488403472419,1.7976931348623157e+308])?.groupToMap;
try { new v41(-8516); } catch (e) {}
const v43 = [-1.7976931348623157e+308,-2.2250738585072014e-308,1e-15,1.7976931348623157e+308,436.391218484674,984999.8983446106,-2.220446049250313e-16,-65664.25596205948,-568440.0637574068,0.6833182439703986];
v43.g = v43;
[1.4550120056683328e+308,-1.0772967663163728e+308,186061.78370046848,-1.7976931348623157e+308,-5.0,-Infinity,0.03200553966660591];
const v50 = new BigInt64Array(14);
4096 / 4096;
Uint8Array.d = Uint8Array;
Uint8Array.prototype = Uint8Array;
const t33 = "-1754282482";
const v54 = new t33(4096);
const v57 = [-2.216170140955498,-2.2250738585072014e-308,-643865.3403199288,NaN];
this.decodeURIComponent(v57);
let v60 = 127;
const v61 = v60++;
function f62(a63, a64) {
    return a63;
}
const v66 = new Promise(f62);
let v67;
try { v67 = v66.then(v50, v61); } catch (e) {}
try { v67.then(v43, v54); } catch (e) {}
function f69(a70, a71) {
    const o72 = {
    };
    return o72;
}
f62 != v28;
v57[BigInt64Array] %= v67;
const v76 = 5865 / 5865;
Math.ceil(-8516);
Math.cosh(-8516);
Math.max(5865);
Math.imul(v76, v76);
for (let v81 = 0; v81 < 25; v81++) {
    const v82 = v81();
    Object.defineProperty(v82, v81, { enumerable: true, get: f69, set: f69 });
    try { Reflect.preventExtensions(v82); } catch (e) {}
    const o86 = {
    };
    o86(o86);
}
