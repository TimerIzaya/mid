new Uint32Array(1);
new Float32Array(255);
function f6() {
    return f6;
}
const v9 = [1613217357,204598905,15977,1122227661,64,-2,-12,536870888];
const v10 = [-1073741824,1665564361,16526,1805211777,10,-9007199254740990,4,-17063,-1];
const v11 = [-2.2250738585072014e-308,0.8014728140665155,1.4073101706157717e+308,1.4751052216559766e+308,2.0,-692.9604671107461,-2.220446049250313e-16,2.0];
const v12 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
const v13 = [-1.015259194643325e+308,-Infinity,-9.825391401141273,-2.2250738585072014e-308,5.0,-2.2250738585072014e-308];
class C14 {
    constructor(a16, a17, a18, a19) {
        const v20 = a16?.constructor;
        try { new v20(v12, a18, a18, v9); } catch (e) {}
        C14 >>> a17;
        -0.0 >>> -0.0;
        new Date();
        function f34(a35, a36, a37, a38) {
            const o41 = {
                get b() {
                    a38[3] = "-26733";
                    for (let v40 = 0; v40 < 24; v40++) {
                    }
                    return a36;
                },
                "e": a38,
                "f": 1073741825,
                "a": 1073741825,
            };
            return o41;
        }
        f34(1073741825, f34(257, 1535195999, 1535195999, "9007199254740991")[1], 1535195999);
    }
    /*
    constructor(a46, a47, a48, a49) {
        const o55 = {
            "maxByteLength": 2240,
        };
        const v57 = new ArrayBuffer(2240, a47);
        new Uint8ClampedArray(v57);
        this[268435456];
        v11 && this;
        try {
            v11.length = v13;
        } catch(e62) {
        }
    }
    */
    static 268435439 = v10;
    #c = -2.2250738585072014e-308;
    static 832209355 = 2.220446049250313e-16;
}
function F64(a66, a67, a68, a69) {
    if (!new.target) { throw 'must be called with new'; }
}
new F64(F64, F64, F64, F64);
let [] = [];
const v73 = new Float32Array(4096);
function f74() {
    return v73;
}
new Float64Array(3826);
new Int32Array(1700);
new Uint16Array(2128);
class C87 extends -2.2250738585072014e-308 {
}
class C88 extends C87 {
    b;
    constructor(a90, a91, a92, a93) {
        super();
        function f94(a95, a96, a97) {
            function f99(a100) {
                a96[5] ||= a90;
            }
            this.onmessage = f99;
            const v103 = new SharedArrayBuffer(35);
            new BigUint64Array(v103);
        }
        const v107 = [1,40880,1,-65535,3109,268435456,0,-47552,1073741823];
        function f108() {
            class C109 {
            }
            const v110 = new C109();
            const v111 = [v110,v110,v110,v110,v110];
            const v112 = [f108,f108];
            class C113 extends C109 {
                [v110];
            }
            const v114 = new C113();
            v112.constructor;
            try { v114.m(v111); } catch (e) {}
            return f108;
        }
        const v118 = new BigUint64Array();
        try { v107.map(v118); } catch (e) {}
        const v120 = [Infinity,1.0,-1.2272545370579378e+308,-1000000.0,5.0,1.7976931348623157e+308,5.0];
        function F121() {
            if (!new.target) { throw 'must be called with new'; }
            try {
                const v125 = Array(19793);
                for (const v126 of v125) {
                }
                [v125,v125,v125];
                [[]] >= f94;
            } catch(e132) {
                [];
                v120.findLastIndex;
            }
        }
        const v137 = [Array,Array];
        class C138 {
            #e;
            static 3;
        }
        function f139() {
            const o143 = {
                m(a142) {
                    return this;
                },
                __proto__: 946.0676210033328,
            };
            return o143;
        }
        Reflect.apply(Array.of, v137, v120);
        const v147 = [2082,"function",this];
        const o148 = {
            "arguments": v147,
            "type": "function",
        };
        new Worker(f94, o148);
    }
}
new C88();
for (let v151 = 0; v151 < 10; v151++) {
    class C152 {
        #f;
        [v151];
    }
    new C152();
}
new C88();
const o156 = {
};
([[65535,268435439,-9007199254740990,268435440,1024,19743,5,4]]).toLocaleString();
class C160 {
}
new C160();
gc(o156);
