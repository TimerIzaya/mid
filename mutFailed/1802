let v3 = WeakSet;
const v4 = new v3();
try { v4.delete(v4); } catch (e) {}
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(-2147483649); } catch (e) {}
    a9 >= -268435456;
    try {
        this.d = a8;
    } catch(e12) {
    }
    try {
        this.e = a8;
    } catch(e13) {
    }
    const v14 = (a15, a16, a17) => {
        try { a16["o"]("o", "o", a15, v4, v4); } catch (e) {}
        return F6;
    };
}
const v20 = new F6(-268435456, -2147483649);
v20.d = v20;
const v21 = new F6(-2147483649, -2147483649);
try { v21.valueOf(); } catch (e) {}
v4.a <<= -268435456;
let v23 = v21[1010];
let v24;
try { v24 = new v23(F6, v3, F6, -2147483649); } catch (e) {}
[-2.350726292867207,0.16310630667108617,3.026505172224965,625.134254955891,-4.0];
[0.4820405539337639,1000.0,-0.0,0.7533994234279219,-1.7976931348623157e+308,-0.0,-0.9982698687743685,1000.0,1.7976931348623157e+308];
const v27 = [2.2250738585072014e-308];
new F6(-268435456, -268435456);
const v30 = new Map();
v27.length += -2147483649;
[v3,v23] = v27;
v24 &= -268435456;
try { ("65536").charAt(F6); } catch (e) {}
function f36(a37, a38) {
    const o39 = {
        ...v30,
    };
    o39[4] = o39;
    return a38;
}
%PrepareFunctionForOptimization(f36);
f36("65536");
