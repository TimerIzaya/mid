const v0 = [-1.0,869947.3822716996];
const v1 = [0.30109010699589844];
[0.010311432156252631,-699215.6964034368];
class C3 {
    static {
        try {
            super.getOwnPropertySymbols(this, this);
        } catch(e6) {
        }
    }
    [v1] = v1;
    g;
}
new C3();
new C3();
const v12 = new C3();
function F16(a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a19;
    } catch(e20) {
    }
    try {
        this.c = a19;
    } catch(e21) {
    }
}
const v22 = new F16(v12, v1);
new F16(v22, v1);
new F16(v12, v0);
[-894771.8462224947];
[0.881533214430694,1000000000000.0,-2.6561951388069446e+306,1e-15,-601975.7256958171,-2.0,1.0,-1000000000000.0,-5.0];
[-6.825886894231237,-1000000000.0,-7.405832553829715,-5.0];
function f31() {
    let v33 = 1000000000000.0;
    const v34 = v33--;
    -v34;
    class C39 {
        constructor(a41) {
            const v43 = new Float32Array();
            try { v43.entries(); } catch (e) {}
            const v45 = new Uint16Array(12, -4294967296, v34);
            new Float32Array(v45, -4294967296, 2, v33, v45, 3.4890473589784586e+307, F16);
        }
    }
    try { new C39(12); } catch (e) {}
    const v48 = new C39(257828.6336153492);
    const v49 = new C39();
    const v50 = new C39(-4294967296);
    const v51 = [v50,C39];
    [257828.6336153492,v50,v48,v50,v51];
    const v53 = [v50];
    class C54 extends C39 {
        [v48];
    }
    const v55 = new C54();
    const v56 = v53.constructor;
    try { v56.isArray(v53); } catch (e) {}
    class C58 extends v56 {
    }
    C58.a = C58;
    const v59 = new C58(257828.6336153492);
    const v60 = v59?.constructor;
    try { new v60(); } catch (e) {}
    Object.defineProperty(v59, 65537, { value: v49 });
    try { v55.m(v51); } catch (e) {}
    return Int32Array;
}
%PrepareFunctionForOptimization(f31);
f31();
%OptimizeFunctionOnNextCall(f31);
f31();
