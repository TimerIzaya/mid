const v0 = [2.220446049250313e-16,-Infinity,2.220446049250313e-16,1000.0,1.7976931348623157e+308,1000000000.0];
const v1 = [-1000.0,-1.4355704597766422e+308,-6.015064360895748e+307,528120.4152830336,-8.028687191608729e+307];
const v2 = [880833.4984431653,-1.7976931348623157e+308,1000000000.0];
const v5 = new Float64Array(3331);
[-2.220446049250313e-16,-2.220446049250313e-16];
const v10 = [0.0,1.0,-6.743702675363474,400.9902683003188];
let v11 = "string";
function f12() {
    for (let [i16, i17] = (() => {
            10 - 10;
            return [0, 10];
        })();
        (() => {
            i17--;
            const v19 = i16 < i17;
            v19 || v19;
            return v19;
        })();
        (() => {
            const v23 = i16++;
            v23 >> v23;
        })()) {
        i17 - i17;
        for (const v28 in v10) {
            v11 *= v11;
        }
    }
    return v10;
}
f12();
const v30 = new Float32Array(1180);
function f31(a32, a33, a34, a35) {
    const o36 = {
        "b": 3331,
        "e": Float64Array,
    };
    o36.undefined = a34;
    return o36;
}
const v37 = f31(Float64Array, v0, v2, v2);
const v38 = f31(Float64Array, v2, v1, v0);
Object.defineProperty(v38, "undefined", { configurable: true, value: Float32Array });
const v39 = f31(v37, v0, v1, v0);
function f40() {
    return 3331;
}
Object.defineProperty(v39, 837311068, { writable: true, enumerable: true, get: f40 });
BigUint64Array[Symbol.toPrimitive] = f40;
const v45 = v39[837311068];
const v46 = v38[v45];
try { v45(v46, 10, v37, v5); } catch (e) {}
v30[16] = 10 / Float32Array;
const v49 = new BigUint64Array(10);
function f50() {
    return v49;
}
const v54 = [1354185297,-1187772013,1073741823,7,-13,8,-473031863,-1332151602];
const v57 = ("h").split();
const o104 = {
    [null]() {
        const v59 = [];
        class C60 {
            constructor(a62, a63) {
                Object.defineProperty(a62, 2, { writable: true, enumerable: true, value: this });
                try { a62.findLast(); } catch (e) {}
                a62[2];
                const v66 = /W(jy2)/udy;
                v66.toString = f40;
                const v68 = new Uint8Array();
                try { v68.reduceRight(); } catch (e) {}
                for (let v70 = 0; v70 < 250; v70++) {
                    const v71 = `
                    `;
                    function F72(a74, a75) {
                        if (!new.target) { throw 'must be called with new'; }
                    }
                    function f76(a77, a78, a79, a80) {
                        Function();
                        ("D")[0].substring().charCodeAt();
                    }
                    const o93 = {
                        ...v68,
                        [v54](a88, a89, a90) {
                        },
                        get f() {
                            super.n();
                        },
                    };
                }
                for (let v94 = 0; v94 < 5; v94++) {
                    -v94;
                    ("bigint")[0];
                    v57["bigint" + v66] = v94;
                }
            }
        }
        v59[BigUint64Array] ^= 1180;
        %VerifyType(delete v30?.byteLength);
        this[4] = v30;
        /L/uimsy;
        /()/vimsy;
        /a(?<a>.)\k<a>/uds;
        new C60(v59);
    },
};
o104.null();
o104.null();
