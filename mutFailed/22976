let v0 = 21097n;
class C3 {
    b = v0;
    static #valueOf(a5) {
        super.e = this;
        let v8 = -1;
        let v9 = Infinity;
        --v8;
        const v11 = 9007199254740992 && v8;
        -v0;
        --v9;
        Math.max(v0);
        const v15 = --v0;
        a5 || v11;
        return v15;
    }
}
new C3();
new C3();
new C3();
new BigInt64Array(3919);
const v31 = new Int8Array(942);
const v33 = 5n >>> 5n;
let v34 = v31[-2];
try { v34(1024, 64, 56784n, -256, v33); } catch (e) {}
let {"c":v36,...v37} = C3;
v34 = BigInt64Array;
new Int8Array(64);
Math.atan2(-2147483647, -1304034723 && 2.220446049250313e-16);
-256 !== -2147483647;
const v47 = v31 <= v37;
v47 ? v31 : v37;
try { v36["findLast"](v47, v36); } catch (e) {}
