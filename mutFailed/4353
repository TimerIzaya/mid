const v0 = [];
function f1() {
    return 3;
}
v0[Symbol.toPrimitive] = f1;
const v7 = [v0];
const v8 = [v0,v0,v0,v0,v7];
[v0,v8,v7,v8];
268435441 >>> 268435441;
1722105946 >> 1722105946;
[-34,536870887,268435440,14525];
const v19 = [6,127,-128,13,65537,-13];
const v20 = [-536870912,-4608,-9223372036854775808,15];
function f21() {
    return Symbol;
}
Object.defineProperty(v20, "toString", { enumerable: true, get: f21 });
let v23;
try { v23 = ("object").substring(v19, v20); } catch (e) {}
try { v23.fixed(); } catch (e) {}
try { ("has").matchAll("object"); } catch (e) {}
"object" / 2;
const v31 = new Int8Array(2);
v31.valueOf = f1;
v31[1];
8 & 8;
new Int16Array(8);
Uint16Array.e = Uint16Array;
const v40 = new Uint16Array(3225);
const v41 = v40[877];
v41 % v41;
for (let v43 of v40) {
    v43--;
    v43 ^ v43;
    v43[3] = 5n;
    const v47 = 9007199254740991 * v43;
    v47 | v47;
}
const v51 = new Int32Array(23);
const v52 = v51[1];
let v54 = 317008.8127941969;
v54++;
1000000.0 >>> 1000000.0;
const v58 = [7,128];
const v59 = [13,-2103725161,15240,-9223372036854775807,1077763702,256,-1024,9,1073741823,-2];
v59[4];
const v61 = v59[4];
~v61;
const v63 = v61 | v61;
const v64 = v63 / v63;
v64 >>> v64;
const v66 = [40213,422333454,47387,65536,-51830];
v66[2] = v66;
0 != 0;
0 - 0;
0 - 0;
let v71 = 15135;
v71--;
try { gc(); } catch (e) {}
gc();
const v80 = new BigInt64Array();
let v81;
try { v81 = v80.entries(); } catch (e) {}
try { v81.next(); } catch (e) {}
try { ("boolean").slice(v40, v31); } catch (e) {}
let v85;
try { v85 = ("boolean").repeat(1000000.0); } catch (e) {}
try { v85.toWellFormed(); } catch (e) {}
v85[1322328];
const t68 = "toString";
t68[6] = "toString";
"toString" == "toString";
("boolean").split("toString");
-256 * -256;
const v93 = "boolean" >> -256;
v93 ^ v93;
function f95(a96, a97) {
    a96 >>> a96;
    a97 - a97;
    const v100 = a97++;
    v100 >>> v100;
    const v102 = a97--;
    ~v102;
    const v104 = v102 | v102;
    v104 | v104;
    const v106 = a96 | a96;
    v106 / v106;
    const o121 = {
        "c": v71,
        "a": v71,
        "d": a96,
        __proto__: a97,
        "g": -1628878962,
        "type": "boolean",
        "a": a96,
        set b(a109) {
        },
        "g": v71,
        "b": a97,
        get f() {
            super[1000000.0] = this;
            try {
                new Int8Array(9);
                function f114() {
                    return f114;
                }
                const o116 = {
                    [f114]() {
                    },
                };
                [o116];
                v59.copyWithin(v52, -268435456, -256);
            } catch(e120) {
            }
            return this;
        },
    };
    function f122() {
        return o121;
    }
    Object.defineProperty(o121, 1000000, { get: f122 });
    o121.g = o121;
    return o121;
}
let v123;
try { v123 = f95(v71, v71); } catch (e) {}
v123[1000000] = -4;
v123.b;
v123[1000000];
f95(925.1427495594241, v58).b;
f95(v54, -4);
f95(1000000.0, v59).b;
-268435441n;
268435441n ^ 268435441n;
268435441n - 268435441n;
BigUint64Array.b = BigUint64Array;
const v136 = new BigUint64Array();
try { Int32Array.entries(); } catch (e) {}
v136[2445191368] = v0;
