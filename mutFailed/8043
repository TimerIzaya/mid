const v1 = new WeakMap();
function f2() {
    return v1;
}
const v3 = [390.47639184468335];
try { v3.toLocaleString(); } catch (e) {}
let v5 = [0.7711319095509496,-390.6764715391881,-0.0,-3.1302620283061813e+307,-4.0,4.0];
try { v5.reduce(v1); } catch (e) {}
const v7 = [0.0,0.3706916513876234,-1000.0,-2.220446049250313e-16];
[v1];
const v9 = [v5,v5];
try { v9.at(v1); } catch (e) {}
[v9,v5,v9,v9,v1];
let v13 = "-16695";
v13 = "9007199254740990";
v5 = v7;
const v16 = ([1162358952,-4294967297,-12,4])?.constructor;
let v17;
try { v17 = new v16(v5); } catch (e) {}
const v18 = [-30061,-42037,-2147483649,4294967297,-17399,494249196,536870887,9,-3149];
[128,-64696,3,23481553,-10,10,9];
function f20() {
    const o32 = {
        ..."b",
        "b": -9007199254740990,
        ["b"]: "b",
        "a": -9007199254740990,
        o(a24, a25) {
            try { a25(a24, a25, "b"); } catch (e) {}
            [-504863.1885363821,-248378.80818527355,-147.11467188198264,-1.7039705769992093e+308] | -9007199254740990;
            function F29() {
                if (!new.target) { throw 'must be called with new'; }
            }
            class C31 extends F29 {
            }
            return -9007199254740990;
        },
        "h": "b",
    };
    o32[0] = o32;
    return o32;
}
const o33 = {
};
o33.h = o33;
f20();
class C36 {
    static {
        const v38 = this?.constructor;
        try { new v38(o33); } catch (e) {}
        this[Symbol.hasInstance];
    }
    #p() {
        try { this.p(undefined, this, this, this, this); } catch (e) {}
        return undefined;
    }
    static #a = undefined;
}
new C36();
f20();
1971 - 1971;
new Int16Array(1971);
new Int32Array(128);
const v55 = new Int16Array(195);
/a{0,1}?/udi;
/9o\1\2(a(?:\1(b\1\2))\2)\1/vdm;
/g/d;
try { new v17(); } catch (e) {}
%VerifyType(v18);
try { BigUint64Array.from(v9); } catch (e) {}
const v64 = new BigUint64Array(3375);
const v66 = ("c").toUpperCase();
v66[0] = v66;
new Uint32Array([-620100541,-64845,-268435456,-7,-268435456,1024,-536870912]);
let v71 = Math.expm1(3375, Math, v55);
let v72 = v71--;
Math.tan(--v72);
const v75 = [-256,13351,5138,2,-4294967295,1000,268435440];
class C76 {
    constructor(a78, a79) {
        const v80 = this?.constructor;
        try { new v80(); } catch (e) {}
        for (const v82 in this) {
        }
        let v84 = Math.atan2(v75, -4294967297);
        v84--;
    }
}
const v86 = C76?.call;
try { new v86(v5); } catch (e) {}
class C88 extends 128 {
}
new C88();
let [v90,,v91,...v92] = v64;
try { v92.toString(); } catch (e) {}
var c = 255;
