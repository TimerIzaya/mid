function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 24048;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
new F0();
let v9 = 255n;
function F13(a15, a16, a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a17;
    } catch(e19) {
    }
    try {
        this.b = "toString";
    } catch(e20) {
    }
}
let v21 = new F13(46265n, v4, 46265n, v4);
new F13(v9, v5, -59688n, v5);
new F13(46265n, v5, 46265n, v4);
["268435441","toString",v5];
const v25 = ["toString",v4,v5];
[v25,v25,v25,v25];
const v29 = new BigUint64Array(2799);
const o30 = {
};
const v31 = o30.constructor;
for (let [v32,v33,v34] of v25) {
    v9 = v33;
    v21 = v32;
}
const o35 = {
};
try {
    o35.g = "undefined";
} catch(e36) {
}
try {
    const o37 = {
    };
    o37.g = "undefined";
    o37.d = v31;
} catch(e38) {
}
try {
    const o39 = {
    };
    o39.g = "undefined";
    o39.d = v31;
    o39.a = v9;
} catch(e40) {
}
try {
    const o41 = {
    };
    o41.g = "undefined";
    o41.d = v31;
    o41.b = v4;
} catch(e42) {
}
const v44 = ["object"];
const v45 = [v44,v44,v44,v44,v44];
const v49 = new Float32Array(1750);
const v50 = v49 - 581587.2441596473;
try { v44.flatMap(581587.2441596473); } catch (e) {}
const t70 = v45[Symbol.iterator];
t70.c <<= v50;
var h = 1750;
v31(2799).toExponential(v29);
