function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    new F3();
    const v11 = this?.constructor;
    let v12;
    try { v12 = new v11(F3); } catch (e) {}
    ~a5;
    try {
        this.d = a5;
    } catch(e14) {
        if (0.304334399762883 == F3) {
        } else {
            v12 = 2.2250738585072014e-308;
        }
    }
    try {
        this.g = 1000.0;
    } catch(e19) {
    }
    try {
        this.e = 1000.0;
    } catch(e20) {
    }
}
const v21 = new F3(-3.0);
v21.d;
const v23 = new F3(1000.0);
const v24 = v23?.constructor;
let v25;
try { v25 = new v24(F3); } catch (e) {}
const v26 = new F3(-3.0);
function F27(a29, a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    const v32 = a29?.constructor;
    try { new v32(this, this, a29); } catch (e) {}
    a30.d;
    try {
        this.a = a30;
    } catch(e35) {
    }
}
const v36 = new F27(v23, v23, 0.304334399762883);
const v37 = new F27(v23, v26, 0.304334399762883);
v37.a = v37;
new F27(v23, v26, 1000.0);
v36[129] = v25;
try {
    new F3(/vfoo(?=bar)baz/guims);
} catch(e42) {
}
new BigUint64Array(129);
new Uint16Array(1024);
Uint32Array.a = Uint32Array;
new Uint32Array(127);
function f51() {
    return f51;
}
f51.prototype;
try { new Map(); } catch (e) {}
const v55 = new Map();
v55.set(f51);
v55.constructor = f51;
const v57 = v55.constructor;
v57.e = v57;
const o58 = {
};
o58.h = o58;
9 - 9;
const v62 = new BigInt64Array(9);
v62.includes(o58);
