for (let i4 = 0; i4 < 3; i4++) {
    (i4 & i4) !== i4;
    /AFa+?/gvdsy;
    /qwq/guiy;
    /a\Sc/umsy;
}
let v15 = 0;
while ((() => {
        const v17 = v15 < 10;
        const o20 = {
            "maxByteLength": 2147483647,
        };
        const v22 = new ArrayBuffer(4086, o20);
        new Int16Array(v22);
        return v17;
    })()) {
    function F25(a27, a28) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.d = a28;
        } catch(e29) {
        }
        try {
            this.g = a28;
        } catch(e30) {
        }
        try {
            this.e = v15;
        } catch(e31) {
        }
    }
    const v32 = new F25(-4, -1024);
    new F25(-58553, v32, v32, v32);
    const v34 = new F25(v15, -4);
    function f35(a36, a37, a38) {
        let v39;
        try { v39 = a38.n(a38, v15, a37, a37, a36); } catch (e) {}
        return v39;
    }
    f35(-58553, v32, v34);
    v15++;
}
[201456.42877688142,5.0,1.7976931348623157e+308,819756.2217561756,-5.0,1000000000.0];
[2.220446049250313e-16,-5.0,1000000.0,-Infinity];
[-1.7976931348623157e+308,5.0,-788.9317664804578,-2.2250738585072014e-308];
function F49(a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    const v53 = this.c;
    v53.name = v53;
    const v55 = new URIError();
    const v56 = v55.lastIndexOf(v55, a52);
    const v57 = v56 ^ v56;
    try { new v53(v57); } catch (e) {}
}
const v59 = new F49(F49, F49);
const t55 = v59.constructor;
new t55();
