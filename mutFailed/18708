function f0() {
}
new BigInt64Array(4);
new Int16Array(10);
const v12 = new Uint16Array(3281);
class C13 extends Int16Array {
    [2.2250738585072014e-308];
    #d;
    constructor(a15, a16, a17) {
        super(a17, a17);
        try {
            new BigInt64Array(10, 3281, 3281);
        } catch(e19) {
        }
        try {
            v12.buffer = a16;
        } catch(e20) {
        }
    }
    10 = BigInt64Array;
}
const v21 = new C13(2.2250738585072014e-308, Uint16Array, 4);
try {
    new f0();
} catch(e23) {
}
v21[1073741823];
new C13(143325.52561529027, Int16Array, 4);
new C13(2.2250738585072014e-308, 2.2250738585072014e-308, 3281);
function f28() {
    const v29 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
    function f30(a31, a32, a33, a34) {
        function f35() {
        }
        class C36 extends f35 {
        }
        for (let i39 = 0, i40 = 10;
            (() => {
                const v41 = i39 < i40;
                delete C13?.g;
                let [] = v29;
                f35 = delete a34?.d;
                %VerifyType(v12);
                return v41;
            })();
            (() => {
                const v46 = i40--;
                Object.defineProperty(C36, a31, { get: f0 });
                try { C36.valueOf(v46); } catch (e) {}
                const v48 = f30 >> -1000.0;
                try {
                    C13.b = v48;
                } catch(e49) {
                }
            })()) {
            for (let v52 = 0; v52 < 5; v52++) {
                function f53() {
                }
            }
        }
    }
    for (let v54 = 0; v54 < 10; v54++) {
        f30(v29);
    }
}
for (let v56 = 0; v56 < 5; v56++) {
    f28();
    function f58() {
        for (let v60 = 0; v60 < 5; v60++) {
        }
    }
}
