function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(864044837); } catch (e) {}
    a5 - a5;
    try {
        this.g = -1073741824;
    } catch(e9) {
    }
}
new F3(864044837, 864044837);
const v11 = new F3(-1073741824, -1073741824);
function f12(a13, a14) {
    const v17 = new Float32Array(false);
    function F19(a21, a22) {
        if (!new.target) { throw 'must be called with new'; }
    }
    new F19(-6.427538385859785, v17);
    return Float32Array;
}
v11.toString = f12;
new F3(-1073741824, 0);
class C25 {
    #g;
    [-2] = v11;
    static [v11] = -1073741824;
    #m(a27, a28, a29) {
        super.e **= a29;
        this.f >>>= 0;
        class C33 {
            5;
        }
        const v34 = new C33();
        new C33(v34, v34, this);
        new a29();
        return a27;
    }
}
new C25();
const v38 = new C25();
v38.constructor = f12;
const v39 = v38?.constructor;
try { new v39(); } catch (e) {}
new C25();
const v42 = /(?:a*)+q(?<a>.)/guds;
function f43(a44) {
    const o48 = {
        set b(a46) {
        },
        get d() {
            return a44;
        },
        __proto__: v42,
    };
    return o48;
}
try { new f43(-1073741824); } catch (e) {}
for (let [i54, i55] = (() => {
        let v51 = 0;
        v51--;
        return [v51, 10];
    })();
    i54 < i55;
    (() => {
        i54 ^ i54;
        const v60 = i55--;
        v60 >> v60;
    })()) {
    i55 === i55;
    for (let v65 = 0; v65 < 50; v65++) {
        f43(v42);
    }
}
