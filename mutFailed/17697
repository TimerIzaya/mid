class C3 {
    g = "bigint";
    static #o(a5) {
        try { a5.charAt(this, 1000000.0, ...this, "n", ...1000000.0); } catch (e) {}
        return "n";
    }
    toString(a8, a9) {
        const v10 = "n";
        const v11 = async (a12, a13) => {
            'use strict';
            await (delete this?.length);
            return a13;
        };
        [256,1073741825,-2,-1385902023,64,-1494942508];
        [-65537,1073741824,45333270,-3444];
        [-15332,-13,1073741824,-1024,-44808,-37397073,257,1073741825,-4,1073741824];
        return "bigint";
    }
}
new C3();
const v20 = new C3();
const v21 = new C3();
[0.8736233092893594,94396.61502190144];
const v23 = [538.0625493201762,897.3155593320403,-5.0,-1.0161100301194785e+308,-1.7976931348623157e+308,Infinity,548.9444160104031,0.08943129397133831];
[-1000.0,5.0];
new v23();
[1000000.0];
["bigint",v21,[C3,"bigint",v23],"n"];
function F30() {
    if (!new.target) { throw 'must be called with new'; }
    for (let v32 = 0; v32 < 500; v32++) {
        const v37 = ("p" + v32).fontcolor(v32).trimLeft()[12];
        ("p")[v37.substring(v37, v37)];
    }
}
new F30();
new v20();
