const v0 = [-31795,2147483647,9007199254740990,-2147483649];
[1,-128,-65536,-9,10,-4294967297,3,-9007199254740991];
const v2 = [-829468106,-689025876,129,-27072,-256,-3,-3,8,64,3];
4 - 4;
try { new Float32Array(4, "subarray", 4); } catch (e) {}
new Float32Array(4);
try { Float64Array.of(); } catch (e) {}
const v14 = new Float64Array(0);
try { v14.entries(); } catch (e) {}
new Int16Array(3185);
const v19 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v20 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
64 == 64;
try { new Uint32Array(v19, 3185, 0); } catch (e) {}
new Uint32Array(v19, 0, 0);
function F28(a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    a31 >>> a31;
}
const v33 = new F28(v20, 0);
try { v33.constructor(v0, v0); } catch (e) {}
new F28(Uint32Array);
class C37 {
}
try { new C37(); } catch (e) {}
/5*/gi;
const v42 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v43 = [601759695];
const v44 = [1073741824,1073741823,1376142744,1073741825];
const t29 = "unicode";
t29[1] = "unicode";
const t31 = "b";
t31.e = "unicode";
function f47(a48, a49, a50, a51) {
    function f52() {
        "Vre" == "Vre";
        let v56 = Float64Array;
        v56.name;
        v56 = a49;
        [65536];
        const v59 = [-694,-6,1073741824,-14,3,11,3,-7,5,-1214514770];
        const v60 = [1073741824,-7,-1283755539,-726309105,10,13,-4294967295,12,512,40630];
        const v61 = [];
        function f62() {
            -v61;
            return f62;
        }
        class C64 {
            static {
                this.length = this;
                const o66 = {
                };
                const v68 = new Proxy(this, o66);
                v68.d = v68;
            }
            p(a70, a71) {
                let v72;
                try { v72 = new this(a71, this, a70); } catch (e) {}
                super.g = v59;
                return Reflect.construct(v72, [v59,v60], v72);
            }
            a;
        }
        C64.prototype = C64;
        new C64();
        const v77 = new C64();
        const v78 = new C64();
        const v79 = [-2.9700017742911022,795135.542646985,938.533418121023,-974148.680744386,-1.7976931348623157e+308,-300.6481185564369];
        try { v79.find(v2); } catch (e) {}
        const v81 = [483707.38277358306];
        const v82 = [2.220446049250313e-16,-Infinity,1.278332587799012,711290.6941419018,0.0,-Infinity,-1000.0,2.2250738585072014e-308];
        try { v82.every("D2z"); } catch (e) {}
        const v84 = [v78,v60,v77];
        ([v82])[0];
        [v82,v81,v84,v77,v78];
        function f90() {
            let v91 = 352326470;
            v91--;
            1261703539 - 1261703539;
            class C95 {
            }
            const v98 = `
                try {
                    new Float64Array(127);
                } catch(e100) {
                }
            `;
            let v101 = -65535;
            v101 * v101;
            v101 / v101;
            const o173 = {
                __proto__: v91,
                next() {
                    v101--;
                    const v107 = v101 == 0;
                    const o108 = {
                        "done": v107,
                        "value": v101,
                    };
                    return o108;
                },
                ...v91,
                /*
                __proto__: 1261703539,
                */
                "f": v101,
                m(a110) {
                    a110.h = a110;
                    const o111 = {
                    };
                    o111.f = o111;
                    function f112(a113, a114, a115) {
                        function f117(a118) {
                            a114[5] ||= f90;
                        }
                        this.onmessage = f117;
                        const v121 = new SharedArrayBuffer(35);
                        new BigUint64Array(v121);
                    }
                    try {
                        o111.e = v101;
                    } catch(e124) {
                        const v128 = new Uint8ClampedArray(512);
                        new Uint8ClampedArray(798, ...v128, o111);
                    }
                    try {
                        const o130 = {
                        };
                        o130.h = o130;
                        o130.e = 1261703539;
                        o130.g = a110;
                    } catch(e131) {
                    }
                    -9007199254740991 >> -9007199254740991;
                    Math.sin(-9007199254740991);
                    class C138 {
                        o(a140, a141, a142, a143) {
                            class C144 {
                                static 44 = "EV";
                            }
                            new C144();
                            new C144();
                            new C144();
                            return 0;
                        }
                    }
                    const v148 = new C138();
                    const v149 = v148?.constructor;
                    try { new v149(); } catch (e) {}
                    const v153 = new Int8Array(3938);
                    try { v153.filter(v81); } catch (e) {}
                    let v155 = 3;
                    v155++;
                    const v158 = 0 >> 0;
                    for (let i = 0; i < 5; i++) {
                        0 < 8;
                    }
                    const o161 = {
                    };
                    o161.a = o161;
                    o161.e = 1261703539;
                    try {
                        const o162 = {
                        };
                    } catch(e163) {
                        function F164(a166, a167, a168, a169) {
                            if (!new.target) { throw 'must be called with new'; }
                            a166.propertyIsEnumerable();
                        }
                        -3 ^ v158;
                    }
                },
            };
            try { o173.m(o173); } catch (e) {}
            class C176 {
            }
            const v177 = new C176();
            const v179 = new Float32Array(v177, "nt", Float32Array);
            const t178 = "nt";
            const v180 = delete t178[v179];
            let v181;
            try { v181 = v177.floor(v180); } catch (e) {}
            for (const v182 in v181) {
            }
        }
        f90();
        f90();
        function f185(a186, a187, a188, a189) {
        }
        function f190(a191, a192) {
            const o195 = {
                set b(a194) {
                },
            };
        }
        function F196(a198, a199, a200) {
            if (!new.target) { throw 'must be called with new'; }
        }
        try {
        } catch(e201) {
        }
        function F202(a204) {
            if (!new.target) { throw 'must be called with new'; }
        }
        F202.e = F202;
        b = v43;
        v19.length;
        try {
            v44.forEach(v56);
        } catch(e208) {
        }
        const v209 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        try { v209.reduce(a51); } catch (e) {}
        const v212 = Symbol.toPrimitive;
        Symbol.for(v212.description);
        const o222 = {
            toString(a217, a218) {
                const v219 = a51 && v56;
                function f220() {
                    a217 *= v212;
                    return v56;
                }
                return v219 <= v209;
            },
        };
        const o243 = {
            "c": -4294967297n,
            [522675525n](a225, a226) {
            },
            "c": v43,
            asinh(a228, a229) {
                return this;
            },
            "b": -4294967295,
            [-4294967297n](a231, a232, a233, a234) {
                [-1.7976931348623157e+308,-4.047862669744725e+307,-2.2250738585072014e-308,0.790769162254034,0.024752255798642486,640440.6769019293,-2.0];
            },
            "e": -4294967295,
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v42,
            ...v43,
            "type": "Vre",
            ..."Vre",
            valueOf(a237, a238) {
                return a238;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            toString(a240, a241, a242) {
            },
            5: -4294967295,
            6: -268435456,
        };
        o243.e = o243;
    }
    try { f52(); } catch (e) {}
    f52();
    new Int8Array();
    %OptimizeFunctionOnNextCall(f52);
    try { v44["find"]("find", a51, v43, v44, 522675525n); } catch (e) {}
}
for (let v250 = 0; v250 < 10; v250++) {
    v250 >> v250;
    f47();
}
%OptimizeFunctionOnNextCall(f47);
f47();
