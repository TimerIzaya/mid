let v1 = 0.6947587022390728;
class C3 {
    static {
        const v6 = parseFloat("boolean");
        v1 != parseFloat;
        Object.defineProperty("boolean", "f", { configurable: true, enumerable: true, value: -65536 });
        v1 in super[v6];
    }
    3397;
    n(a11) {
        this.__proto__;
        super.f ||= a11;
        const o16 = {
            "execution": "async",
            "type": "minor",
        };
        return gc(o16);
    }
}
new C3();
const v19 = new C3();
class C20 {
}
for (let v21 = 0; v21 < 5; v21++) {
    const o25 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o25);
}
const v27 = new C3();
class C28 extends C3 {
    static #e;
    toString(a30, a31, a32, a33) {
        let v34;
        try { v34 = a30(v27); } catch (e) {}
        [a30];
        const v36 = [509174734,-30078599,-1953700757,-725509519,50139,1073741825];
        const v37 = a33.__defineSetter__;
        try { v37(v36); } catch (e) {}
        let v40 = ++v1;
        Math.cos(++v40);
        const v43 = ["boolean",a30,this,a30];
        [v34,v1,-65536,v43,v1];
        try {
            v43.values();
        } catch(e46) {
        }
        return v43;
    }
    [v19];
    7 = v27;
}
function F47() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = 0;
}
class C50 extends F47 {
    #b;
    constructor(a52) {
        super();
        delete this.h;
        super.h = this;
        /\1\2(a(?:\1(b\1\2))\2)\1()l/udm;
    }
}
new C50(C50);
new C28();
const v57 = new C28();
new C28();
function F59(a61, a62) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = C3;
    } catch(e63) {
    }
}
new F59(C3, v27);
new F59(v57, v19);
new F59(v57, v27);
const o68 = {
    ..."1p",
};
const v69 = [o68,o68,o68,o68];
const v71 = 28621 + 28621;
function f72() {
    return v69;
}
const o74 = {
    ...o68,
};
o74.length = v71;
const v78 = new BigUint64Array(4);
function F79(a81, a82, a83) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a82;
}
const v84 = new F79(BigUint64Array, 4, v78);
for (const v85 of v78) {
    Object.defineProperty(v84, 241, { enumerable: true, value: v85 });
    const o86 = {
    };
    o86.g = v85;
    o86.b = 241;
    const o87 = {
    };
    o87.g = v85;
    o87.d = v85;
}
Reflect.apply(f72, v69, o74);
