function f0() {
    const o14 = {
        "e": "imul",
        "b": "o",
        "g": "imul",
        "f": "o",
        n(a5) {
            Math.log2(a5);
            const v10 = -4294967297;
            Math.acosh(8);
            v10 >>> 8;
            return Math.tanh(8);
        },
    };
    return o14;
}
const v15 = f0();
f0();
f0();
[9.016773639808676,1.0,0.0];
[-2.0,-4.0];
const v20 = [0.20758780292068246,-1.1847234102273576e+308,5.0,1000000000000.0,-7.333131137124944,-5.0];
new Float64Array(v20);
new Float64Array(1700);
const v29 = new Uint8Array(655);
const v33 = Float32Array.length;
class C35 {
}
const v36 = new v20();
class C37 {
    static g = v20;
    static {
        delete v15.g;
    }
}
try { C37.bind(v36); } catch (e) {}
const v44 = Symbol("bZ");
[Float32Array];
function f47() {
}
[f47,v36];
[v33,f47];
try { ("5").split(1700, v44); } catch (e) {}
new Array(228);
class C59 {
    static {
        function F61(a63, a64) {
            if (!new.target) { throw 'must be called with new'; }
            const v65 = this?.constructor;
            try { new v65(v65, v33); } catch (e) {}
        }
        new F61(this, this);
        new F61(Array, F61);
    }
}
try {
} catch(e69) {
}
let v70 = 0;
do {
    v70++;
} while (v70 < v36, v29)
