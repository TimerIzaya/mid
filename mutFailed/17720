new Int8Array(Int8Array);
const v4 = 2174 === 2174;
new Uint32Array(2174);
Int16Array.prototype = Int16Array;
new Int16Array(129);
function F10(a12, a13, a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    const v16 = this?.__lookupGetter__;
    try { new v16(a15); } catch (e) {}
    a14 - a14;
    try {
        this.c = 15;
    } catch(e19) {
    }
}
new F10(v4, 15, 15, 15);
new F10(129, 129, 2174, 2174);
new F10(Int16Array, 2174, Int8Array, 2174);
const v23 = /(?=.)K(?:a+){0,0}a+?/vdmsy;
v23.unicode;
/E5\bY?/gimy.sticky;
/\x01+/udiy;
-3n ^ -3n;
const v32 = [516175425,-2147483648,9,-82077372,536870889];
try { v32.reduce(v23); } catch (e) {}
const v34 = [-4294967295,229771453,0,-1920763155,-3,15];
try { ("-9007199254740992").trimLeft(); } catch (e) {}
!35292008n;
class C41 {
    constructor(a43, a44, a45, a46) {
        try { a43.keys(); } catch (e) {}
        try { a44.strike(); } catch (e) {}
        a45 & "source";
        try { a46.endsWith(a43); } catch (e) {}
        a46.match(a45);
    }
}
new C41(v34, "source", -3n, "-9007199254740992");
