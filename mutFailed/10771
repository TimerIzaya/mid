class C3 {
    static get a() {
        try {
            this.f = "symbol";
        } catch(e5) {
        }
        return this;
    }
    static {
        try {
        const t0 = "boolean";
        t0("symbol", "symbol");
        } catch (e) {}
        try {
            super.call();
        } catch(e9) {
        }
    }
}
const v10 = new C3();
const t20 = "boolean";
const v11 = new t20();
const v12 = new C3();
function f13(a14, a15, a16, a17) {
    const o27 = {
        "c": v11,
        "h": v10,
        ["toString"](a19, a20, a21) {
            let v18 = this;
            let v24 = v18--;
            v24--;
            v18 || v24;
            return a14;
        },
        "e": a14,
        __proto__: a14,
    };
    return o27;
}
f13("toString", f13(v10, v12, "toString", "toString"), v11, v10);
f13(v12, "toString", "boolean", "symbol");
new WeakSet();
class C36 {
    static 3143;
    static ["-2"];
    #f = "-2";
    static #a;
    #c;
    #valueOf(a38, a39) {
        const v40 = a39 == a39;
        v40 ? a39 : a39;
        const v42 = ["-2",this,"boolean",a38,"-2"];
        [v42,v42,this,this];
        [v40,"-2","4X",a38];
        return a38;
    }
    10 = "4X";
    #g = "-2";
}
new C36();
new C36();
new C36();
try { new v10(); } catch (e) {}
new C36();
let v52 = -12;
-536870912 ^ -536870912;
[-256,-256,5,-9007199254740991,-128,1073741825,-11,-49255];
[35577,123452243,-2,65305,268435441,11,-58686];
const v57 = [1506147375,1598671956,64,-23009,-512929497,-1432178736,4];
try { v57.sort("-2"); } catch (e) {}
6 | 6;
function F66(a68, a69) {
    if (!new.target) { throw 'must be called with new'; }
    Number.isFinite(Number);
    const v72 = this.constructor;
    try { new v72(); } catch (e) {}
}
new F66();
new F66();
class C77 {
    constructor(a79) {
        const v80 = this.constructor;
        v80.d = v80;
        try { new v80(); } catch (e) {}
        ("size").c;
        const v83 = ("size").g;
        ("size").length;
        v83?.[7];
        [...v52] = "size";
        /a\bc/vd;
    }
}
function f87(a88, a89, a90) {
}
const o91 = {
};
class C92 {
    static #n(a94) {
    }
}
new C92();
new C92();
let v97 = Int16Array;
try {
} catch(e98) {
}
v97 = v97;
