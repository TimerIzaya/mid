let v0 = undefined;
const v3 = new Array(5);
class C4 {
    constructor(a6) {
        v0 = a6;
        const o10 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o10);
    }
    static [C4];
    static h;
    static #d;
    [Array];
}
new C4(v0);
new C4(v3);
new C4(v3);
function f15() {
    return v0;
}
new Uint8Array(155);
new Uint8Array(6);
new Uint8Array(8);
const v29 = /(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/u;
const v30 = /\c4a.[(x)(x)(x)\4*(x)(x)(x)\3*]/gmy;
const v31 = /G(a)\1a+8?/vdimsy;
[Infinity];
try { v3.pop(); } catch (e) {}
const v34 = [2.2250738585072014e-308,1.949684848262672,4.0];
try { v34.push(v29); } catch (e) {}
const v37 = ([342.12300421344116,0.3998304334347528,-1.5569468467414895e+308,929110.7069466491,0.8403359879371063,928.8415619105033,5.0])?.toStringTag;
let v38;
try { v38 = new v37(); } catch (e) {}
let v39 = -198895178;
v39 | v39;
24356 % 24356;
class C43 {
    static #n(a45, a46) {
        function F47(a49, a50, a51, a52) {
            if (!new.target) { throw 'must be called with new'; }
        }
        v31[243] -= v38;
        ++v39;
        F47(v30);
    }
}
