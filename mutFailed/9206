const v0 = [2.2250738585072014e-308];
const v1 = [1.7976931348623157e+308,2.2250738585072014e-308,928419.7587767004,-279.06139374957183,1000.0];
const v2 = [0.8548727716928929,511.7046300964207,-1000000.0];
function f3(a4) {
    a4[1] = a4;
    const o15 = {
        [v1](a6) {
            for (let v7 = 0; v7 < 32; v7++) {
                var b = 128;
                new BigInt64Array(128);
                for (const v12 in a4) {
                }
                a4["p" + v7] = v7;
            }
            return v0;
        },
        __proto__: v1,
        "f": v2,
    };
    try { o15.concat(f3); } catch (e) {}
    return o15;
}
f3.d = f3;
f3(v1);
f3(v2);
const v19 = f3(v2);
try { v19.find(v2); } catch (e) {}
[4294967297,-1,-2147483647,33144,9,11,1,-5,-25872];
[-1073741824,-1148326039,-2147483648,-974034580,921200097,-9223372036854775808,-4096,-399667599,-1];
[3,512,43016];
const v24 = /(?:a*)+q(?<a>.)/guds;
const v25 = v24.lastIndex;
function f26(a27) {
    const o31 = {
        set b(a29) {
        },
        get d() {
            return a27;
        },
        __proto__: v24,
    };
    v25.b = o31;
    return o31;
}
for (let i35 = 0, i36 = 10;
    i36 - i36, i35 < i36;
    (() => {
        const v41 = i36--;
        v41 >> v41;
    })()) {
    for (let v45 = 0; v45 < 50; v45++) {
        v25(v24);
    }
}
