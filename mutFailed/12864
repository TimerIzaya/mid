function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = -4294967296;
    } catch(e3) {
    }
    try {
        this.h = -4294967296;
    } catch(e4) {
    }
    try {
        this.e = -4294967296;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
new F0(F0, v6, F0);
function f12() {
    return v7;
}
new Uint32Array(1131);
new Uint8Array(1365);
new Uint8Array(2);
class C22 {
}
const v23 = new C22();
const v24 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v27 = new Uint32Array();
const v29 = [601759695];
const v30 = [1073741824,1073741823,1376142744,1073741825];
function f32(a33, a34, a35, a36) {
    function f37() {
        const t33 = "Vre";
        t33[1] = "Vre";
        try { SharedArrayBuffer.expm1(SharedArrayBuffer); } catch (e) {}
        const v42 = SharedArrayBuffer.expm1();
        const v43 = SharedArrayBuffer.tanh();
        SharedArrayBuffer.hypot(a35, SharedArrayBuffer);
        Float64Array.BYTES_PER_ELEMENT = Float64Array;
        b = v29;
        v24.length;
        try {
            v30.findLast();
        } catch(e48) {
            e48.a = e48;
        }
        const v49 = [2.2250738585072014e-308,1000000000000.0,-1.0,50.90299544772074,-1.7976931348623157e+308,0.7459353030390099,-381062.91289062425,2.220446049250313e-16];
        const o59 = {
            [522675525n](a52, a53) {
            },
            "c": v29,
            [-1]: 2684,
            1073741824: v27,
            "maxByteLength": -268435456,
            __proto__: v27,
            9: v23,
            [v43]: v42,
            ...a34,
            "arguments": v49,
            [2n](a55, a56, a57, a58) {
            },
            "e": -4294967295,
            "arguments": Float64Array,
            256: a36,
            4: "Vre",
            "c": -268435456,
        };
        return -4294967295;
    }
    f37();
    eval(a34);
    %OptimizeFunctionOnNextCall(f37);
    return 2n;
}
for (let v63 = 0; v63 < 5; v63++) {
    f32(v63, v29, v63, v63);
}
