try {
    const t1 = 1;
    t1.e = -42943n;
} catch(e6) {
}
(8059)[13];
class C11 {
    static 258680487;
    valueOf(a13, a14, a15) {
        (~9007199254740990).constructor;
        function f19() {
            class C22 extends ([f19,f19]).constructor {
            }
            const v23 = new C22();
            const v25 = v23.constructor.bind();
            let v26;
            try { v26 = v25(); } catch (e) {}
            return v26;
        }
        try {
            this.valueOf = a13;
        } catch(e27) {
        }
        return a15;
    }
    #b = "n";
    #f;
}
for (const v28 in "n") {
    ("getFloat64")[Symbol.matchAll];
}
const v32 = new C11();
const o35 = {
};
const v37 = [-9007199254740991,536870888,51292,-2147483649];
const v38 = [536870912,-124426018];
const v39 = [23930,454087404,65536,-6,-1955199007,1,1073741824,14];
function f40(a41, a42) {
    new a41();
    -12 % -12;
    return v38;
}
v39[Symbol.toPrimitive] = f40;
function f48(a49) {
    try { a49.map(v38); } catch (e) {}
    a49[0] = a49;
    const o55 = {
        "e": v37,
        "c": v38,
        [v39]: v39,
        "a": v39,
        [v37]: v39,
        get f() {
            let {"h":v52,"length":v53,...v54} = v39;
            this.toString = v52;
            return v54;
        },
    };
    return o55;
}
const v56 = f48?.toString;
try { new v56(); } catch (e) {}
const v58 = f48(v37);
v58.c = v58;
const v59 = f48(v38);
v59.f = v59;
f48(v39);
const v62 = 1073741824 * 1073741824;
v62 - v62;
65535 | 65535;
function F66() {
    if (!new.target) { throw 'must be called with new'; }
    const v68 = this?.constructor;
    v68.e = v68;
    try { new v68(); } catch (e) {}
}
F66.e = 65535;
F66.arguments = F66;
const v70 = new F66();
try { v70.hasOwnProperty(f48); } catch (e) {}
v70.length;
const v73 = new F66();
new F66();
const v76 = -14n ^ -14n;
try { ("object").padStart(v76); } catch (e) {}
let v81;
try {
const t0 = "object";
v81 = t0(v70, "number", F66);
} catch (e) {}
function f82(a83) {
    return v81;
}
class C84 extends f82 {
    [v73] = "E";
    [v70] = -14n;
    268435441 = -14n;
}
C84.length = C84;
const t99 = "object";
t99[v73] &= v81;
new Proxy(C11, o35);
let v87 = 2;
const v89 = +v87;
--v87 && "64";
Math.asinh(v89);
"64" << +12932;
const t105 = [-4294967296];
t105.length = 257;
class C96 {
    set f(a98) {
        Reflect.construct(Proxy, [v32,this], Proxy);
    }
    constructor(a103, a104) {
        const o106 = {
            84: arguments,
        };
    }
}
new C11();
const v108 = new C11();
const v111 = new Float32Array();
try {
    v32 != v108 ? v32 : v108;
    [0.45387383359639877,-5.0,-Infinity,1e-15,-5.0,6.081929132490429e+307,Infinity,5.0,0.36904220243404284];
    [86522.95004739123,-1000.0];
    [2.0,1000.0,0.947879089206229,-1e-15,5.0,-556264.9020518231,0.0,1000000.0];
    const o121 = {
    };
    new Uint8Array(o121);
} catch(e123) {
}
const v124 = new Uint8Array(v111, Uint8Array, Uint8Array);
v111[-1e-15] = Uint8ClampedArray;
class C127 extends Float32Array {
    constructor(a129, a130, a131) {
        super(a131);
    }
}
new C127(1, v124, Float32Array);
("n").split("n", 2147483647);
const v137 = new BigInt64Array();
function f138(a139) {
    const v140 = [v38];
    delete v140[0];
    return v140;
}
v137[Symbol.toPrimitive] = f138;
v137[0] = v137;
