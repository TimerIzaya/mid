const v1 = new Date();
const v7 = new Uint16Array(4);
const v10 = new BigUint64Array(8);
v1[4294967296] = 3750;
v7[-2];
Date[6] ||= 4;
58899n ** Date;
new Uint8ClampedArray(3750);
class C17 {
}
const v18 = new C17();
function f19(a20, a21) {
    function f22() {
        return f19;
    }
    let v25 = -5.0;
    const v26 = 3750 ^ v25;
    let v27 = --v25;
    Math.log10(v27);
    ~v26;
    +-5;
    v27--;
    class C32 extends f22 {
    }
    class C33 extends C32 {
    }
    function f34(a35, a36, a37, a38) {
        try { a35(C33); } catch (e) {}
        let v40 = a36 & a36;
        new Map();
        v40++;
        const o50 = {
            n(a45, a46) {
                delete v10?.buffer;
                C32[a45] = 3750;
                this[1073741824];
                a36 -= Uint16Array;
                return this;
            },
        };
        return v18;
    }
    for (let v51 = 0; v51 < 500; v51++) {
        f34();
    }
    return C17;
}
Object.defineProperty(v18, "constructor", { value: f19 });
const v53 = v18.constructor;
v53(v53, v18);
