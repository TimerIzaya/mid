class C3 {
    static toString(a5, a6) {
        try { a5(this, -2.0, a5, a5); } catch (e) {}
        let v10 = 2.6980915099717713;
        ~v10;
        const v12 = -2.0 >> -2.0;
        Math.sin(1073741825);
        Math.acosh(v12);
        v10++;
        return this;
    }
    static 64;
    static [2.220446049250313e-16] = -1;
    297195189 = 2.220446049250313e-16;
}
const v16 = new C3();
const v17 = new C3();
class C18 {
}
for (const v22 in Array(3398)) {
}
const v23 = new C3();
class C24 extends C3 {
    constructor(a26, a27, a28) {
        super();
        const v29 = v16.g;
        try {
            3398 === 3398;
            const v31 = [-504863.1885363821,-248378.80818527355,-147.11467188198264,-1.7039705769992093e+308];
            for (let v32 = 0; v32 < 5; v32++) {
                v31 | v32;
            }
            super.resolve(a26, v17, v16, this);
        } catch(e35) {
        }
        const v36 = C3 << v29;
        try { v29(v36); } catch (e) {}
    }
    get g() {
        function f39() {
            return this;
        }
        return this;
    }
}
const v40 = new C24(C24, C3, v17);
const v41 = new C24(C24, C24, v40);
new C24(v41, v41, v23);
function f64(a65, a66, a67) {
    const o90 = {
        n(a69, a70) {
            class C79 extends Int32Array {
            }
            function F85() {
                if (!new.target) { throw 'must be called with new'; }
            }
            class C88 {
                static get b() {
                }
            }
            return a66;
        },
    };
    return a67;
}
