const v3 = [-1831698292];
class C4 {
}
const v5 = new C4();
const v6 = v5?.__defineSetter__;
try { new v6(v3, -1831698292); } catch (e) {}
const o12 = {
    [v5](a9, a10, a11) {
    },
};
o12.f = o12;
[129,268435456,129,[268435456,v3,-1831698292,-1831698292,-1831698292]];
[37844,2097493837,6,-829479275,-256,257,64];
function f16(a17) {
}
v3.d = f16;
function f18() {
    ([]).constructor;
    new Uint8Array(268435456);
}
[-1649092531,256];
[9007199254740992,3,286833024,-12,-2,-499990224,-4294967295,257,4];
256n + 256n;
9007199254740990n << 9007199254740990n;
let v31 = -3.398811531117431;
v31--;
8.847993606079299e+307 === 8.847993606079299e+307;
8.847993606079299e+307 !== 8.847993606079299e+307;
0.1209832061938989 >> 0.1209832061938989;
let v38 = -1073741824;
v38--;
const v40 = [1073741824,1073741823,1376142744,1073741825];
536870887 >>> 536870887;
const v45 = BigUint64Array * 536870887;
let v46 = v45 ** v45;
v46--;
const v48 = ~v46;
const v49 = new Int8Array(v40);
try { v49.some(BigUint64Array); } catch (e) {}
const v51 = v49.includes(v48);
v51 && v51;
class C53 {
}
try { C53(); } catch (e) {}
new C53();
const v56 = v51 == v51;
v56 && v56;
Set.g = Set;
const v59 = new Set();
v59.size = v59;
const v60 = v49.lastIndexOf(v38);
v60 >> v60;
const v62 = /(?<a>.)\k<a>?/vdimsy;
let v63;
try { v63 = v62(v62); } catch (e) {}
[v63,v63,v63,v63,v63];
try { new Float32Array(268435456, Float32Array, Float32Array); } catch (e) {}
const v68 = new Float32Array(14);
v68.BYTES_PER_ELEMENT = v68;
