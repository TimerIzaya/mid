const v2 = new Uint32Array(2183);
let {"byteOffset":v3,"length":v4,...v5} = v2;
v2[v5];
const v8 = Symbol.iterator;
const o17 = {
    [v8]() {
        let v10 = 10;
        const o16 = {
            next() {
                v10--;
                const v14 = v10 == 0;
                const o15 = {
                    "done": v14,
                    "value": v10,
                };
                return o15;
            },
        };
        return o16;
    },
};
new Uint16Array(41);
new Uint32Array(128);
class C24 extends Uint32Array {
    set d(a26) {
        try { new a26(v2, this, Uint16Array); } catch (e) {}
        g?.[10000];
    }
    #toString(a34, a35, a36, a37) {
        Math.floor(580629602n);
        Math.asin(-666748627);
        const v46 = +580629602n;
        1964452105n + 580629602n;
        return a34.round(v46);
    }
}
new C24();
const v50 = new C24();
new C24();
class C52 extends Uint16Array {
    m(a54, a55, a56) {
        const v58 = Symbol.species;
        a54[v58] = v58;
        try { a56.setYear(this); } catch (e) {}
        return C24;
    }
    static [v50] = Uint32Array;
    static 3078531397 = v50;
    c;
    static #b;
    g = 128;
    #f;
    #e = 2183;
    [Uint32Array];
    #b;
}
new C52();
new C52();
new C52();
const v69 = new Int32Array(257);
v69[120] = -4294967296;
