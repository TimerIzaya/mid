~9007199254740991;
function F7(a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = -27930;
    try { this.propertyIsEnumerable(this); } catch (e) {}
    -a10;
    a11--;
    const v15 = a11 === a11;
    v15 || v15;
    try {
        this.g = a9;
    } catch(e17) {
    }
    try {
        this.e = 56381;
    } catch(e18) {
    }
    try {
        this.a = a11;
    } catch(e19) {
    }
}
const v20 = new F7(9007199254740991, 56381, 9007199254740991);
new F7(56381, v20, 9007199254740990);
const v22 = new F7(9007199254740991, v20, -27930);
[4.0,-261.08376334222714,-774.3742497301538,-749450.423334604,-1000.0,-4.0,1000000000000.0,-7.0335363633176895,-568.8159531400181,-2.0];
const v24 = [0.5517752256586609,2.227783633287368,5.0,4.0];
const v25 = [1.0];
function f26() {
    function f27(a28) {
        %VerifyType(v22);
        class C29 {
        }
        class C30 extends C29 {
            static #m(a32, a33, a34, a35) {
            }
        }
        return C30;
    }
    return f27;
}
Object.defineProperty(v25, "valueOf", { writable: true, enumerable: true, get: f26 });
try { v25.groupToMap(-27930); } catch (e) {}
[v25,v25,v25];
const v38 = [v24,56381,268435440];
try { v38.slice(v25, 9007199254740991); } catch (e) {}
try { v38.fill(9007199254740990); } catch (e) {}
[F7];
const v42 = /Wlb(?!(a))\1yja\b!/gui;
v42.h = v42;
v42.h = v42;
let v43 = 3;
v43--;
1000 / 1000;
const v49 = 1000 >>> 1000;
v49 - v49;
try { gc(); } catch (e) {}
