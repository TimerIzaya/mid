const v0 = [-831.8232335185894,0.594006846779829,1.9069779862297924,3.0,1000000000.0];
[1.4810283048309714,-3.0,-2.220446049250313e-16,-61.214460944456505,0.76143679816898];
let v2 = [2.0];
let v4 = -Infinity;
[-2,3,-4294967295,8,-17212];
[15,6,0,129,9007199254740992,-6,268435440];
const v8 = [-29015,502603746,-9007199254740990,23763];
function f9(a10, a11) {
    class C14 extends Int32Array {
    }
    new C14();
    return v0;
}
v8[Symbol.toPrimitive] = f9;
class C18 {
    static get b() {
        ({"a":v2,"length":v4,} = v0);
        [1e-15];
        [-2.2250738585072014e-308,5.695149226746192,2.2250738585072014e-308];
        [534.9575536444881,-1000000.0,-Infinity,0.06735539781760902,-7.364549937950389,1e-15];
        return v4;
    }
    [v2];
    #d;
    #f;
    e = v4;
    static [v8];
}
new C18();
new C18();
new C18();
function f26() {
    Reflect.construct(Symbol, [Reflect,Reflect,Reflect,Reflect,Reflect]);
    return f26;
}
try { f26(); } catch (e) {}
