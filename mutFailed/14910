const v0 = [];
new Uint16Array(9);
try { new Int16Array(Uint16Array, v0, 129); } catch (e) {}
const v7 = new Int16Array(129);
let v8;
try { v8 = v7.indexOf(v7); } catch (e) {}
const v11 = new Uint8ClampedArray(4);
let v12 = 35888;
v12 / v12;
const v14 = v12--;
-8 | -8;
const v18 = -(-8);
const v19 = [-65535,406094985];
const v20 = [-17291,1886,-9007199254740992,857,2,13,14,-1,536870912];
try { v20.reduce(Uint8ClampedArray); } catch (e) {}
let v22;
try { v22 = v20.toSpliced(1073741824, 1073741824); } catch (e) {}
v22.g = v22;
const v23 = [4096,-1286614374,64,-1091506598,-985243739,10000,-1];
const v24 = /a{12,3b*/gm;
v24.d = v24;
const v25 = /4(x)(x)(x)\3/gudi;
new v8();
new Map();
function f32(a33, a34, a35, a36) {
    const o37 = {
    };
    return o37;
}
const v38 = f32("string", "m");
const v39 = f32("m", "m");
let v42 = 129;
v42++;
new Float32Array(v42);
try { new BigInt64Array(v39, 16, Map); } catch (e) {}
new BigInt64Array();
~-4294967297n;
const v53 = [601759695];
try { v53.sort(); } catch (e) {}
[1073741824,1073741823,1376142744,1073741825];
function f56(a57, a58, a59, a60) {
    function f62() {
        -(-268435456 + -268435456);
    }
    f62();
    const v68 = new Int8Array();
    v68.buffer;
    %OptimizeFunctionOnNextCall(f62);
    try { ("find").strike(); } catch (e) {}
    try {
    } catch(e72) {
    }
    const o73 = {
    };
    o73.g = -4294967297n;
    const o74 = {
    };
    o74.g = -4294967297n;
    o74.d = v38;
}
f56();
%PrepareFunctionForOptimization(f56);
f56();
%OptimizeFunctionOnNextCall(f56);
f56();
try { v25.compile(v11, v11); } catch (e) {}
v25.dotAll = v25;
let v79;
try { v79 = v25.test(v24); } catch (e) {}
const v80 = /(q()n)/guimsy;
v80.f = v80;
v80.lastIndex = v80;
const v81 = [v80];
try { v81.reduce(v81); } catch (e) {}
const v83 = [v81,v19,v20,v80,v20];
try { v83.toSorted(v79); } catch (e) {}
const v85 = [v20];
v85[0] = v85;
function f86(a87, a88) {
    let v89;
    try { v89 = a87.push(a87); } catch (e) {}
    v89 >>> v89;
    try { a87.map(v20); } catch (e) {}
    const o101 = {
        "g": a88,
        n(a93, a94, a95, a96) {
            const v97 = [v81,a96,this];
            const v99 = [a87,a94,[v97,v97,a96],this,a88];
            super.f = a87;
            var d = v53;
            try {
                v99.b = a95;
            } catch(e100) {
            }
            return a87;
        },
        [v25]: v20,
        __proto__: v24,
    };
    return o101;
}
f86(v23, v80);
const v103 = f86(v83, v80);
try { v103.n(Uint8ClampedArray, v20, Int16Array, v103); } catch (e) {}
const v105 = f86(v19, v25);
try { v105.compile(v80, v14); } catch (e) {}
let v108;
try { v108 = new Date(v24, v0, v80, v80, v0, Date, f86); } catch (e) {}
const v109 = v108?.setTime;
try { new v109(v20); } catch (e) {}
let v111;
try { v111 = Date.now(); } catch (e) {}
v111 > v111;
const v113 = new Date(v83, v25);
try { v113.toTimeString(); } catch (e) {}
let v115;
try { v115 = v113.toDateString(); } catch (e) {}
let v116;
try { v116 = v115.fontcolor(v115); } catch (e) {}
let v117;
try { v117 = v116.substring(-8, -8); } catch (e) {}
let v119 = 128;
v119--;
function f121() {
    const o173 = {
        next() {
        },
        m(a125) {
            let v124 = this;
            try { v124.next(); } catch (e) {}
            try { a125.valueOf(); } catch (e) {}
            try { a125.next(); } catch (e) {}
            a125.g = a125;
            const o129 = {
            };
            o129.c = o129;
            function f130(a131, a132, a133) {
            }
            try {
            } catch(e134) {
            }
            try {
                const o135 = {
                };
                o135.unscopables = o135;
            } catch(e136) {
            }
            let v138;
            try { v138 = Math.cos(a125); } catch (e) {}
            v138++;
            let v140;
            try { v140 = Math.expm1(); } catch (e) {}
            const v141 = ~v140;
            --v140;
            let v143 = -9007199254740991;
            v143--;
            v143++;
            const v146 = v143 >> 1.7047100695894155e+308;
            v146 <= v146;
            class C148 {
            }
            try { C148.apply(-65535, v105); } catch (e) {}
            const v150 = C148?.constructor;
            let v151;
            try { v151 = new v150(v25); } catch (e) {}
            const v152 = v151?.apply;
            try { new v152(v141, v18); } catch (e) {}
            let v154;
            try { v154 = new C148(); } catch (e) {}
            const v155 = v154?.constructor;
            try { new v155(); } catch (e) {}
            const v157 = v154?.constructor;
            try { new v157(); } catch (e) {}
            const v160 = C148.name.codePointAt();
            v160 * v160;
            3938 >>> 3938;
            let v164 = 3938 - 3938;
            v164--;
            const v167 = new Int8Array(3938);
            v167[3177];
            let v169 = 3;
            const v170 = v124++;
            v170 >> v170;
            [...v169] = v167;
            const o172 = {
            };
            o172.c = o172;
        },
    };
    try { o173.next(); } catch (e) {}
    try { o173.next(); } catch (e) {}
    o173.m(v117);
}
f121();
