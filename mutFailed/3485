function F1() {
    if (!new.target) { throw 'must be called with new'; }
    this.d = this;
    try {
        this?.constructor;
        this == this ? this : this;
        Math.atan(0.6146752851534484);
        this.d = true;
    } catch(e10) {
    }
    try {
        this.b = true;
    } catch(e11) {
    }
    try {
        this.f = true;
    } catch(e12) {
    }
}
const v13 = new F1();
const v14 = new F1();
v14.d = v14;
const v15 = new F1();
v15.b;
const v17 = [true];
const v18 = [v13,v14,v14,v17];
[v13];
-3846 - -3846;
new Int16Array(3);
let v27 = 14;
const o29 = {
    "maxByteLength": 1814769353,
};
new v17();
const v32 = new Int8Array(v27);
try { v32.reduce(3); } catch (e) {}
[[-1e-15,-4.547098672084515,6.731189859503068,1000.0,1000.0,414.1111077300918,567.5737904015757]];
([8,-46529,2147483648,1073741824]).includes;
new Int32Array([0.40942238360349337,9.405201967735488e+306,-914.634335773701,5.134124740041841,-1.0,1000000000000.0,-5.0,-298.5783868000192,1000000.0], Int32Array, Int32Array);
v18[512];
new Date();
const v46 = [991.721527488573,-290835.2265090322];
const v51 = ("-1723624938").slice(3, "g").normalize();
try { v51.substring(v46, WeakMap); } catch (e) {}
class C53 {
    constructor(a55, a56) {
        a56.sup(v51, "-1723624938").toLocaleLowerCase();
    }
}
const v62 = Uint8ClampedArray?.constructor;
try { new v62(v17); } catch (e) {}
new Int32Array(Int32Array);
const o66 = {
};
new Uint8ClampedArray([1000000.0,1000000.0]);
const v71 = new Uint8ClampedArray(8);
var d = Uint8ClampedArray;
b = v27++;
[19292];
[-32863,-536870912];
const v75 = [16740,0,5022,1073741824,28636,12,-2147483648];
Float32Array[1] = -1e-15;
function f78(a79, a80, a81) {
    return a81;
}
try { v75.toSpliced(Int16Array, v71); } catch (e) {}
-5n >> -5n;
const v85 = [1.0,141599.63044947106,730.845463907873,1000000.0,-4.2811873669589365e+307,0.0,3.0];
try { v85.forEach(-5n); } catch (e) {}
