class C3 extends Array {
    10 = 134;
}
function f4() {
    class C5 {
    }
    const v6 = new C5();
    v6.length = v6;
    return v6.length;
}
f4();
f4();
%OptimizeFunctionOnNextCall(f4);
new Uint8ClampedArray(12);
const v13 = [-9223372036854775808,4294967297,1524216812,1583265095,-6,4294967297];
function f14(a15, a16) {
    return v13;
}
v13.then = f14;
const v18 = Array?.__defineGetter__;
let v19;
try { v19 = v18(undefined, undefined); } catch (e) {}
class C23 {
    static #a;
    static n(a25, a26) {
        const v27 = super.d;
        try { v27(); } catch (e) {}
        return a25;
    }
    [1];
    static [1] = 255;
    [255];
    f = -65536;
}
const v29 = new undefined();
try { v29.m(1n, 10000n, 10000n, 1); } catch (e) {}
v29[10] = 1n;
const o33 = {
};
new Proxy(v13, o33);
let v37 = Float32Array;
new v37(255);
function f40() {
}
class C41 extends f40 {
}
new C41();
new Uint8ClampedArray(v19);
const v46 = [1126838905];
255 < 1126838905;
function f49(a50, a51, a52, a53) {
    const v56 = new BigInt64Array(4046);
    let v57 = undefined;
    const v58 = v57++;
    v58 >> v58;
    v58 + v58;
    v58 >> v58;
    let o62 = {
    };
    [,...o62] = v56;
    return f49;
}
for (let v63 = 0; v63 < 5; v63++) {
    f49(v63, v63, v63, v63);
}
ReferenceError(-1073741824, 9007199254740991n);
class C68 extends Uint8ClampedArray {
    p(a70, a71, a72, a73) {
        class C74 {
            constructor(a76) {
                const v77 = this.constructor;
                try { new v77(); } catch (e) {}
                super.e;
            }
            #toString(a81, a82) {
                return typeof this != "string";
            }
        }
        class C86 extends C74 {
            static [12];
            [v46];
            static {
                for (let i90 = 0, i91 = 10;
                    i90 < i91;
                    (() => {
                        const v95 = [601759695];
                        const v96 = [1073741824,1073741823,1376142744,1073741825];
                        function f98(a99, a100, a101, a102) {
                            function f103() {
                                return f103;
                            }
                            class C104 {
                            }
                            try { v96["find"](..."find", a102, ...v95, ...v96, ...522675525n); } catch (e) {}
                            const o108 = {
                            };
                        }
                        for (let v109 = 0; v109 < 10; v109++) {
                            f98();
                        }
                        i90++;
                    })()) {
                }
            }
            #d;
        }
        v37 = a71;
        let v114;
        try { v114 = new a71(this, false); } catch (e) {}
        return v114;
    }
    constructor(a116, a117, a118, a119) {
        super(a119);
        try {
            this.buffer = v37;
        } catch(e120) {
        }
        this[a118];
    }
    static p(a123) {
        eval("boolean");
    }
}
new C68(255, 9, 12, 12);
const v145 = new Uint8Array(127);
const v148 = new BigUint64Array(1000);
v148.includes(undefined);
v145.fill();
class C152 {
}
new C68(9, 255, 255, 255);
new C68(9, 12, v37, 9);
function f156() {
    return -172798652;
}
Date[Symbol.toPrimitive] = Date;
new Date(Date);
function f163(a164) {
    return f163;
}
const v167 = [4096];
const o168 = {
    "arguments": v167,
    "type": "function",
};
new Worker(f163, o168);
new BigInt64Array(5);
v167.toLocaleString(3088, [-536870912,8,9007199254740992,-461574414,3,-268435456,-536870912,65535,-1713660255,128]);
%OptimizeFunctionOnNextCall(f156);
f156();
