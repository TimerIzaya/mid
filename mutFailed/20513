const v2 = new Array(2412);
const v6 = -(-2147483648n);
function f7(a8, a9) {
    const o22 = {
        "e": a9,
        1024: v2,
        "c": a9,
        "d": 256n,
        10: 8n,
        valueOf(a11, a12) {
            a8.e += 2412;
            super.h = v6;
            try { Array.isArray(a11); } catch (e) {}
            super.a &= WeakMap;
            2412 >> a11;
            delete this?.c;
            try { this["valueOf"]("valueOf", a8, a8, -2147483648n); } catch (e) {}
            return -2147483648n;
        },
        "b": 256n,
        "g": a8,
    };
    return o22;
}
const v23 = f7(-2147483648n, -2147483648n);
const v24 = f7(f7, -2147483648n);
v24.length = 256n;
v24[1024] = v24;
f7(v23, -2147483648n);
2726 + 2726;
new Array(2726);
let v32 = 0;
do {
    -2147483648n < v32;
    v32++;
} while (v32 < 5)
try { new Int16Array(v24, 2412, 2726); } catch (e) {}
new Int16Array(64);
-128;
Uint32Array.length;
const v43 = new Uint32Array(128);
new Uint32Array(129);
const v47 = [-55841,536870912,65536,-1024,886617036,3];
%VerifyType(256n);
function f51() {
    return v43;
}
const o52 = {
    "type": "function",
};
o52.arguments = v23;
new Worker(f7, o52);
v47.length = 1;
