function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -4294967297;
    } catch(e6) {
    }
    try {
        this.b = a5;
    } catch(e7) {
    }
}
const v8 = new F3(F3);
new F3(v8);
const v10 = new F3(268435440);
function f14(a15, a16, a17, a18) {
    const o23 = {
        get h() {
            [v8,a15,[v10,268435440,this,this]];
            [this];
            return -65537;
        },
        "h": 257,
        ...v8,
        [-4294967297]: a15,
        1730: a16,
        "c": a15,
    };
    return a16;
}
const v24 = f14(268435440, v10, -6499, f14);
const v25 = f14(-65537, F3, 268435440, -6499);
const v26 = f14(257, -4294967297, 268435440, -65537);
for (let i29 = 0, i30 = 10; i29 < i30; i30--) {
}
function f38() {
    const o40 = {
        "c": v24,
    };
    const t38 = o40.c;
    const v42 = new t38();
    v42.forEach(Uint32Array);
    for (const v46 of Array(v26, Array, Array)) {
        function f47() {
            return o40;
        }
        v46.toString = f47;
    }
}
%PrepareFunctionForOptimization(f38);
f38();
%OptimizeFunctionOnNextCall(f38);
f38();
const v50 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v52 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v53 = [601759695];
const v54 = [1073741824,1073741823,1376142744,1073741825];
function f56(a57, a58, a59, a60) {
    function f62() {
        let v65 = Float64Array;
        v65 = a58;
        b = v53;
        v50.length;
        try {
            v54.forEach(v65);
        } catch(e68) {
        }
        const v69 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v71 = Symbol.toPrimitive;
        const o77 = {
            toString(a73, a74) {
                const v75 = a60 && v65;
                a73 *= v71;
                v75 <= v69;
            },
        };
        const o102 = {
            "c": -4294967297n,
            [522675525n](a80, a81) {
            },
            "c": v53,
            valueOf(a83, a84) {
            },
            "b": -4294967295,
            [-4294967297n](a86, a87, a88, a89) {
                class C91 extends Date {
                    static get c() {
                        eval();
                    }
                }
            },
            "e": -4294967295,
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v69,
            ...v53,
            "type": "Vre",
            ..."Vre",
            valueOf(a96, a97) {
                return a96;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            toString(a99, a100, a101) {
                return a99;
            },
            5: -4294967295,
            6: -268435456,
        };
    }
    const v103 = f62();
    const v105 = new Int8Array();
    v105.buffer.slice(2147483648);
    %OptimizeFunctionOnNextCall(f62);
    let v110;
    try { v110 = v54["find"](..."find", a60, ...v53, ...v52, ...522675525n); } catch (e) {}
    v110 <= v103;
    return arguments;
}
for (let v112 = 0; v112 < 10; v112++) {
    v25();
}
%OptimizeFunctionOnNextCall(f56);
f56(522675525n, 522675525n, -4294967297n, 522675525n);
