const v0 = [];
const v1 = [128,-1641321930,-2147483649];
const v2 = [2147483649];
const v3 = [536870887,-60324,23228695,26098,13,2];
let v4;
try { v4 = v3.entries(); } catch (e) {}
try { v4.next(); } catch (e) {}
function f6() {
    return v3;
}
33882 % 33882;
const v11 = [-8,v2,-8,-8];
const v12 = [v1,v0];
try { v12.concat(v12); } catch (e) {}
try { v12.reduceRight(v11); } catch (e) {}
[v12,v2,v2,v11];
function f16() {
}
f16.length;
const v18 = f16.name;
try { v18.search(v18); } catch (e) {}
function f20(a21, a22, a23) {
    function F24(a26, a27) {
        if (!new.target) { throw 'must be called with new'; }
    }
    class C28 {
    }
    try { C28.bind(f16); } catch (e) {}
    C28.length;
    const v31 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
    try { v31.copyWithin(a23, v12); } catch (e) {}
    try { v31.map(-8); } catch (e) {}
    const v34 = [601759695];
    for (let v35 = 0; v35 < 5; v35++) {
        function f36() {
            try { ("Vre").matchAll(v11); } catch (e) {}
            const v39 = ("Vre").strike();
            try { v39.toString(); } catch (e) {}
            let v41;
            try { v41 = v39.substring(v35, v35); } catch (e) {}
            try { v41.localeCompare(v41); } catch (e) {}
            Object.defineProperty(Array, 0, { configurable: true, value: Float64Array });
            Array.from(a21);
            const v47 = Array().unshift();
            v47 << v47;
            const v50 = new Set();
            const v51 = v50.add();
            try { v51.hasOwnProperty(v35); } catch (e) {}
            class C54 {
                constructor(a56, a57) {
                    const v58 = this?.constructor;
                    try { new v58(-8, 33882); } catch (e) {}
                    super.d;
                    try { ("tgmz").trimRight(); } catch (e) {}
                }
            }
            try { C54(v39, v39); } catch (e) {}
            const v66 = new C54();
            v66.length = v66;
            let v67;
            try { v67 = v66.isPrototypeOf(v3); } catch (e) {}
            v67 && v67;
            v66.__proto__ = F24;
            Symbol.for(Symbol.toPrimitive.description);
            const o77 = {
                toString(a74, a75) {
                    try { this.toString(this, C54); } catch (e) {}
                },
            };
            try { o77.toString(v66, "Vre"); } catch (e) {}
            const v79 = o77.toString();
            const o87 = {
                "c": v34,
                "arguments": v31,
                "type": C28,
                valueOf(a81, a82) {
                },
                4: "Vre",
                toString(a84, a85, a86) {
                },
            };
            Object.defineProperty(o87, 522675525, { configurable: true, enumerable: true, value: F24 });
            o87[522675525];
            let v90 = 272822757;
            v90--;
            const v92 = [v90];
            v92[0];
            v92.toLocaleString();
            const v95 = [-2.0];
            try { v95.findLastIndex(o87); } catch (e) {}
            try { Math.expm1(v79); } catch (e) {}
            Math.acosh();
        }
        f36.arguments = f36;
        v11();
        %OptimizeFunctionOnNextCall(f36);
    }
}
f20.length = f20;
f20();
