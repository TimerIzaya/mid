[];
const v3 = new BigInt64Array(-2);
const v6 = new Int8Array(8, Int8Array, v3);
try { v6.sort(v6); } catch (e) {}
try { new Uint16Array(v6, 8, 7); } catch (e) {}
new Uint16Array(7);
function f16() {
    function f17() {
    }
    f17.e = f17;
    return f17;
}
try { f16(); } catch (e) {}
function f19(a20) {
    return a20;
}
Object.defineProperty(WeakSet, BigUint64Array.iterator, { configurable: true, enumerable: true, get: f16, set: f19 });
try { new BigInt64Array(BigInt64Array, BigInt64Array, -2); } catch (e) {}
try { new BigInt64Array(WeakSet); } catch (e) {}
