function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 422803835;
    } catch(e3) {
    }
    const v6 = new Uint16Array(231);
    new Int8Array(v6);
    try {
        this.d = 422803835;
    } catch(e9) {
    }
}
const v10 = new F0();
const v11 = new F0();
const v12 = new F0();
const v13 = /(?:a?)*/udsy;
/f\p{Nd}\u{12345}\u{23456}+/gvs;
/\P{gc=Decimal_Number}/guy;
try { WeakMap.apply(Int32Array, Date); } catch (e) {}
try {
    false.fuck();
} catch(e22) {
}
class C26 extends F0 {
    constructor(a28, a29) {
        super();
        super[v13] = v11;
    }
    #d;
    static g;
    #c;
    g = -1135271330;
}
new C26(v10, v10);
new C26(v10, v10);
new C26(v12, v11);
class C40 {
    #b = 26507;
    static [26507];
    static get a() {
        super[this] = 26507;
        try {
            arguments.#b <<= arguments;
        } catch(e44) {
        }
        return SharedArrayBuffer;
    }
}
const v45 = new C40();
const v46 = v45?.constructor;
v46.name = v46;
let v47;
try { v47 = new v46(); } catch (e) {}
const v48 = v47?.constructor;
try { new v48(); } catch (e) {}
new C40();
const v51 = new C40();
try { v51.constructor(); } catch (e) {}
const v53 = [536870888,-536870912,-1292028157,-35163,1073741825,1126124502,-1269619973,1000,-128,9];
try { v53.findLastIndex(C40); } catch (e) {}
[-9007199254740991,22341,65537];
const v56 = [9007199254740990,2147483647,-9223372036854775808];
const v58 = new Date();
const v59 = v58?.getHours;
try { new v59(); } catch (e) {}
let v61;
try { v61 = v58.setUTCSeconds(v53, v51); } catch (e) {}
v61++;
for (let v63 = 0; v63 < 5; v63++) {
    const v68 = new BigInt64Array(4046);
    let v69 = undefined;
    const v70 = v69++;
    v70 + v70;
    %VerifyType(4046);
    v51[v56];
    v51[undefined] = v58;
    try {
        v68.g = v69;
    } catch(e73) {
    }
    const v74 = v70 >> v70;
    v74 >> v74;
    const v76 = v74 >>> v74;
    let v77 = v76 % v76;
    v77--;
    const o79 = {
    };
    o79.e = o79;
    for (let i82 = 0, i83 = 10;
        (() => {
            const v84 = i82 < i83;
            new v84();
            const v88 = new BigUint64Array();
            const t3 = [v88];
            t3[65536] %= -9007199254740991;
            [-2,-2,-2,-2,-2];
            return v84;
        })();
        i82++) {
    }
}
