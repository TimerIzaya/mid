function f0() {
}
const v5 = [79.96177673553052,958106.6774601368,-2.220446049250313e-16,1.3702264850190933e+308,-569.2238583910487,-643621.2280408698,-906.898552923642,-3.0];
const v6 = [9.199333489675116,1000000000000.0,-150.6078457913527];
const v7 = [-4.0,Infinity,-3.0,-734447.1317172151,4.890954914084955e+307,437656.14753023814,-0.0,0.2276435365306908];
function F14(a16, a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 2.0;
    } catch(e19) {
    }
    new Float64Array(2275);
    new Float32Array(3);
    new Int16Array(1672);
}
const v29 = new F14(1.7543951832230255e+308, v6, 165226.0487593948, -5.256559838432566, v6, -1);
const v30 = new F14(-5.256559838432566, v6, v29);
let v31 = new F14(-441742.52960792976, v5, -212.78589373566194);
Object.defineProperty(v7, 149, { configurable: true, enumerable: true, get: f0, set: f0 });
Object.defineProperty(v6, 599385888, { configurable: true, enumerable: true, value: v31 });
v31 += v29;
f0();
v7[-1] = v30;
v7[75];
const o36 = {
    "maxByteLength": 3433,
};
const v38 = new SharedArrayBuffer(127, o36);
new BigUint64Array(v38);
/tRa*?(?:a+){0,0}/gvis;
let v42 = /[qa{12z}]/gd;
/a*b|c[foo(?=bar)baz]/udy;
for (let v44 = 0; v44 < 5; v44++) {
    const o48 = {
        "execution": "number",
        "type": "minor",
    };
    ({"byteLength":f0,...v42} = v38);
    try {
        gc();
    } catch(e50) {
    }
    gc(o48, -441742.52960792976, o48);
    const v52 = o48.type;
    %VerifyType(f0);
    %VerifyType(v44);
    v52?.[214];
    new Float64Array(128);
    new Uint8Array(1);
    new Uint16Array(7);
}
function F63(a65, a66, a67) {
    if (!new.target) { throw 'must be called with new'; }
    Reflect.construct(Int8Array, [1126838905], a65);
}
new F63(F63, F63, F63);
