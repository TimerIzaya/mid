/S(a\1)/my;
function F1(a3, a4, a5) {
    if (!new.target) { throw 'must be called with new'; }
    a4 === a4;
    new BigUint64Array();
    /anVXYFzN(x)(x)(x)\3/gvdms;
}
/Zpa{12,+/di;
/\1(a)((?=.)[\u0034])/udim;
const v14 = [-536870912,-3592,61205];
const v15 = v14.constructor;
try { v15(6.9332226702676465); } catch (e) {}
Date[Symbol.toPrimitive] = Date;
const v21 = new Uint32Array(7);
class C24 {
    static 7;
    #n(a26) {
        const o29 = {
            "execution": "sync",
        };
        gc(o29);
    }
}
try { Uint8Array.toString(); } catch (e) {}
const v32 = new Uint8Array(2541);
for (let i36 = 0, i37 = 10; i36 < i37; i36++) {
}
new Int16Array(64);
([1321234440,-2012385285,503280511,-65535,-50525,1929142229]).sort(-5);
function F52() {
    if (!new.target) { throw 'must be called with new'; }
}
new F52();
1568 - 1568;
~4096;
try { new Int16Array(Uint32Array, v32, v21); } catch (e) {}
new Int16Array(4096);
function f62() {
}
class C63 {
    constructor(a65, a66, a67, a68) {
        a68.match(a67);
    }
    /*
    constructor(a71, a72, a73, a74) {
        const v76 = ([1.479450712344466]).join();
        for (let v77 = 0; v77 < 25; v77++) {
            v76.__proto__;
        }
        super();
        function f79() {
            return a74;
        }
        class C80 {
            #valueOf(a82, a83, a84) {
            }
        }
        const o87 = {
            valueOf() {
                return true;
            },
        };
        v14.length = o87;
        for (let v88 = 0; v88 < 5; v88++) {
            const v89 = [-Infinity,2.220446049250313e-16,-1.7976931348623157e+308,2.220446049250313e-16,Infinity,38895.10169439507,0.0,-839.2678689183415,0.9830891302642997];
            for (let v90 = 0; v90 < 10; v90++) {
            }
            const v92 = new Int16Array();
            for (let v94 = 0; v94 < 25; v94++) {
                function f95() {
                }
                function f96(a97, a98, a99, a100) {
                    const v101 = f95();
                    for (let v103 = 0; v103 < 64; v103++) {
                        v103 ^ v101;
                        Math.sqrt(1024);
                        Math.log10(1024);
                    }
                    139837843 in v92;
                    new Int8Array(v89, v94, v94);
                    new Int8Array();
                    return f96;
                }
                f96(v89, v89, v94, Date);
            }
            function f114() {
                let v115 = -268435456;
                v115--;
            }
            for (let v117 = 0; v117 < 5; v117++) {
                function f118() {
                    45725n === 45725n;
                }
                f118();
            }
            function f122() {
                class C123 {
                }
            }
            class C124 extends f122 {
            }
            for (const v125 in C124) {
            }
            let v126 = 10;
            for (; v126--;) {
            }
            class C128 {
            }
            const o129 = {
            };
            class C130 {
            }
            for (let v131 = 0; v131 < 10; v131++) {
                for (let v132 = 0; v132 < 32; v132++) {
                }
            }
            f79();
            %OptimizeFunctionOnNextCall(f79);
        }
    }
    */
}
try { new C63(); } catch (e) {}
const v135 = new C63(1568, f62, 9);
const v136 = v135?.constructor;
try { new v136(); } catch (e) {}
new C63();
