function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a5;
    } catch(e6) {
    }
    let v8;
    try { v8 = this["toString"](-131456.16013527242, F3, 1000.0, -131456.16013527242, a5); } catch (e) {}
    this instanceof v8;
    a5?.c;
    try {
        a5.length = 2;
    } catch(e12) {
    }
    try {
        this.h = a5;
    } catch(e13) {
    }
}
const v14 = new F3(1000.0);
new F3(-131456.16013527242);
const v16 = new F3(1000.0);
const v17 = [v16];
const v18 = [v17,v16];
const v19 = [v18,v14];
const v20 = [v19,v18];
v18[15];
Math.expm1(-38002);
F3 << F3;
F3 | 1136049321;
[[v20,F3,v19],v17,F3,v17];
class C32 {
}
new C32();
new C32();
new C32();
class C36 {
}
new C36();
function F39(a41, a42) {
    if (!new.target) { throw 'must be called with new'; }
}
const v44 = new SharedArrayBuffer();
new DataView(v44);
for (let v47 = 0; v47 < 5; v47++) {
    const o49 = {
    };
    gc(o49);
}
