const v2 = new Array(2);
[Array,v2,2,2];
function f5(a6) {
    try { a6.toSorted(a6, 2, v2); } catch (e) {}
    try { ("function")["-268435456"](); } catch (e) {}
    return Array;
}
Float32Array[Symbol.toPrimitive] = f5;
function f13(a14, a15) {
    return -588750793;
}
Float32Array.toString = f13;
function f17(a18, a19, a20) {
    return f17;
}
class C21 extends f17 {
}
Object.defineProperty(C21, Float32Array, { enumerable: true, get: f17 });
[v2];
[Array,v2,Array,2,Array];
const v30 = [-536870912,-1454443390,-11,536870887];
Object.defineProperty(v30, 10854, { writable: true, configurable: true, value: v2 });
let v32;
try {
const t0 = 65536n;
v32 = t0(65536n);
} catch (e) {}
v30[65536n] *= v32;
v30["splice"](-650191005, -650191005, "splice");
