let v0 = [0.6592293229370411,1000000000000.0,-1e-15,0.3246870720774835,1.7976931348623157e+308,1000000.0,-5.0,-2.0,-1.7976931348623157e+308,2.2250738585072014e-308];
const v1 = [-116.61690087958516,291.69118580353756,5.682666225235042,0.5138313141075408,3.0,-1.1004448428760687e+308,1000000000.0,-732.560844399816];
[326737.29189051664,-5.0,-5.513357829049517e+307,0.0,-Infinity,-1.7976931348623157e+308];
let v5 = 2147483648;
const v8 = new Uint8Array(8);
const v11 = new Uint8Array(796);
let v12;
try { v12 = v11.entries(); } catch (e) {}
[v5,v0,v12] = v1;
let v13 = Reflect;
v13.construct(v12, [v11,48181], Uint8Array);
if (v0) {
    [v13] = v8;
} else {
    796 + v11;
}
new Int8Array(255);
function* f23(a24) {
    yield [9007199254740990,-4294967296,-1205995130,-12581,9];
    return -1.7570084557226905e+308;
}
