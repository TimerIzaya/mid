const v2 = new Map();
const v6 = NaN - 5.299116625881361;
[-1578498074,4,-829347314,-4294967297];
[65537,-253998738,44266,1024,-13656,-807237933,14,-541705747,11,915];
const v9 = [255,127,-618591903,-9007199254740990,-4294967297,-6717,9373,-12,14,2];
let v10;
try { v10 = v9.sort(v2); } catch (e) {}
const v11 = [-63085,-9007199254740992,256,-4,-12,12,3,536870887,-15515,1073741825];
~NaN;
Object.defineProperty(v10, 0, { value: NaN });
[1215882971,9,1828597606,1024,42500,255,50039,-10];
const v17 = [448806147,536870912,2,2,-2147483648];
const v18 = v9[-4.0];
Object.defineProperty(v18, false, { enumerable: true, value: v18 });
const o19 = {
};
const v21 = new Proxy(v11, o19);
const v22 = v17?.groupToMap;
try { new v22(v17); } catch (e) {}
-505430859 / v10;
const v27 = -14n;
v27 * v27;
let v29 = 1993349855;
v29--;
v21 * NaN;
v6 << -9223372036854775808;
Math.tanh(2.0);
const v37 = /\P{Decimal_Number}/gudims;
try { v37.toString(); } catch (e) {}
(-8n)[7];
