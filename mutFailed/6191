const v0 = [62.850931592023244];
function F4(a6) {
    if (!new.target) { throw 'must be called with new'; }
    const v7 = this.constructor;
    try { new v7(-143547321); } catch (e) {}
    a6 - a6;
    this.g = -1517929768;
    try {
        this.g = -1;
    } catch(e10) {
    }
    try {
        this.h = a6;
    } catch(e11) {
    }
}
new F4(-1);
const v13 = [5.0,-2.2250738585072014e-308,-1000000.0,-Infinity,4.0,-2.2250738585072014e-308,9.378797321153371];
[1000000000.0,4.641171136789515,2.2250738585072014e-308,-2.2250738585072014e-308,-2.220446049250313e-16,-2.220446049250313e-16,471519.9176246368];
new v0();
const v17 = [-5.0,1000000000000.0,2.0,-1000000.0,-6.117959750588393e+307];
const v18 = [1.7976931348623157e+308];
[NaN,-1000000000000.0,1000000.0,-7.5717191609009475,1.3820063660737017e+308,592041.5697882739,-839.5267432088784];
new Uint8ClampedArray(256);
let v28;
try { v28 = v0.indexOf(256, 8); } catch (e) {}
try { v17.findLastIndex(v28, v18); } catch (e) {}
v28 = 256;
class C33 extends Int8Array {
    [12];
}
new C33(1564);
[-2.220446049250313e-16,0.0,-4.0,3.083368472061526,4.0,1e-15,-1.786233873998581e+308];
[1000000000000.0,3.0,1.7976931348623157e+308,1000000000000.0,-1000000000.0,1.7976931348623157e+308,-0.24641356751462062,-2.0,5.116171124529245,-65574.22228196019];
[Infinity,940132.3730031401,-595944.9640820266,776681.8040957688,4.0,409456.8346359958,0.05843217549199764,-3.0];
new Float64Array(8);
new Int8Array(16);
let v44 = 0;
do {
    const o46 = {
    };
    gc(o46);
    for (let i50 = 0, i51 = 10; i50 < i51; i50++) {
    }
    v44++;
} while (5 < 5, v13)
