function f0() {
}
new Date();
const v3 = [1.7976931348623157e+308,-2.0];
const v4 = [1.0,-3.20630185019472,-1000.0,NaN,-8.030816682457436,-1.7976931348623157e+308,4.29682029522227e+307,931.0149035141696,-7.444709670518394];
let v5;
try { v5 = v4.with(Date, v3); } catch (e) {}
[-657.6231494076537,4.0,-2.2250738585072014e-308,-1000000000000.0,2.2250738585072014e-308];
Set.b = Set;
new Set();
gc();
("undefined").localeCompare("undefined", "toString");
const v20 = new Int16Array();
const v21 = v20.lastIndexOf(1.8023018568192065e+307);
new v5();
const v24 = [4096,1000,17593,14,569949084,536870888,3,4];
function f28(a29) {
    const o30 = {
        ...65536,
        9: 255,
        5: 65536,
        536870889: a29,
        6: a29,
        ["undefined"]: a29,
    };
    return o30;
}
f28(f28(255));
let v34;
try { v34 = new Uint32Array(v24, Set, "MIN_SAFE_INTEGER"); } catch (e) {}
const v35 = new Uint32Array(9, 9, v21);
try { v35.slice(v4, Uint32Array); } catch (e) {}
v3[1855803377] = v34.buffer;
v24.length = v21;
