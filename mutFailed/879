function f0() {
    const o8 = {
        "d": 268435440,
        "a": 4.0,
        __proto__: "cJ",
        "h": "cJ",
        valueOf(a5) {
            const o6 = {
                __proto__: this,
                2261555780: "cJ",
            };
            super.a;
            return this;
        },
        "c": "cJ",
    };
    return o8;
}
const v9 = f0();
const v10 = f0();
const v11 = f0();
const v12 = [v11,v9,v10,v10,v10];
const v13 = [v12];
const v14 = [v11,v13,v13,v12,v13];
const v15 = [-54486,11,9007199254740991,268435456,536870912,1073741823,255,1073741824,-2147483648,-3];
const v16 = [2033313755,-16,16,16,-24747,6,256];
const v17 = [65535];
new Set();
function F20(a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = this;
    try {
        this.c = a24;
    } catch(e25) {
    }
    try {
        this.f = a23;
    } catch(e26) {
    }
    try {
        this.a = a23;
    } catch(e27) {
    }
}
new F20(v12, v17, v14);
new F20(v13, v16, v12, v15, F20, v9);
new F20(v16, v12, v17);
const v32 = [9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
function F33(a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    const v37 = this.constructor;
    try { new v37(v15, this); } catch (e) {}
    ++a36;
}
F33.toString = f0;
new F33(F33, F33);
new F33();
new F33();
new Uint8Array(v32);
new Uint8Array(268435440);
new Uint8ClampedArray(268435440);
