class C3 {
    constructor(a5) {
        return this;
    }
    #e = "getUTCMilliseconds";
    set b(a7) {
        const t6 = "getUTCMilliseconds";
        t6[0.0] = 0.0;
        function f8() {
            return this;
        }
    }
    [0.0] = 0.0;
}
const v9 = new C3(C3);
const v10 = new C3(v9);
new C3(0.0);
new BigInt64Array(512);
new Float32Array(128);
v10[Float32Array] = 0.0;
512 ^ v9;
const o22 = {
    "maxByteLength": 255,
};
const v24 = new SharedArrayBuffer(8, o22);
new Float32Array(v24);
new Int32Array(101);
const o32 = {
    "execution": "async",
    "type": "major",
};
gc(o32);
let v34 = -1024;
function F35(a37, a38, a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
}
const v41 = new F35();
const v42 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function F43(a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
}
class C47 {
}
const v49 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v50 = [601759695];
for (let v52 = 0; v52 < 5; v52++) {
    function f53() {
        Array().unshift();
        new Set();
        function F62(a64, a65) {
            if (!new.target) { throw 'must be called with new'; }
            F62(this, this);
        }
        try {
            v42.forEach(Float64Array);
        } catch(e68) {
        }
        class C70 {
        }
        const v71 = new C70();
        try {
            v71.__proto__ = F43;
        } catch(e72) {
        }
        const v73 = Symbol.toPrimitive;
        const o77 = {
            toString(a75, a76) {
                return C47;
            },
        };
        const o98 = {
            [522675525n](a80, a81) {
            },
            "c": v50,
            valueOf(a83, a84) {
            },
            [-4294967297n](a86, a87, a88, a89) {
            },
            "e": -268435456,
            "maxByteLength": 255,
            "arguments": v49,
            ...v41,
            [v73]() {
            },
            "type": C47,
            valueOf(a92, a93) {
                return 522675525n;
            },
            4: "Vre",
            toString(a95, a96, a97) {
                return a96;
            },
        };
        const t93 = -4294967297n;
        new t93();
        const v104 = [272822757];
        const v105 = [-2.0,272822757,"function"];
        const o106 = {
            __proto__: v105,
        };
        v104[o106] &= 272822757;
        v34 %= -268435456;
        return v73;
    }
    f53();
    %OptimizeFunctionOnNextCall(f53);
}
