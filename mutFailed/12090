const v2 = new BigUint64Array(137);
const v5 = new Int16Array(3148);
new Float32Array(16);
class C9 {
    constructor(a11, a12, a13, a14) {
        for (let v16 = 0; v16 < 32; v16++) {
            v2["p" + v16] = v16;
        }
    }
    static [3148] = Int16Array;
    static [BigUint64Array] = Float32Array;
    static [Float32Array] = Float32Array;
    static #d = 3148;
}
const v19 = new C9(16, v5, 3148, 3148);
new C9(3148, v19, 16, 16);
new C9(137, Float32Array, 3148, 3148);
class C22 {
}
const v23 = new C22();
let v24 = 591114.0785999324;
v24++;
const v26 = [v24,v24];
function F28() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.toString(this, F28, F28, this); } catch (e) {}
    const v31 = [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    try { Date.toString(F28, 9223372036854775807); } catch (e) {}
    let v35 = Date(v24);
    let v38;
    try { v38 = new Uint32Array(Uint32Array, Uint32Array, 4); } catch (e) {}
    Uint32Array.BYTES_PER_ELEMENT = Uint32Array;
    const v39 = new Uint32Array(5);
    try { v39.reduce(Date); } catch (e) {}
    let v43 = new Set(v26);
    const v44 = v43?.add;
    let v45;
    try { v45 = new v44(v38); } catch (e) {}
    let v46 = "delete";
    9223372036854775807 / v31;
    [v43,v46,v35,v45] = v46;
    let v51;
    try { v51 = v46.blink(4); } catch (e) {}
    v51[4] = v51;
    const v52 = v43[v46](839612.5677247904);
    v52 || v52;
    const v54 = 839612.5677247904 || v52;
    const v55 = v54 && v54;
    const o57 = {
    };
    o57.b = o57;
    o57.e = 19793;
    try { new Array(9223372036854775807); } catch (e) {}
    let v61;
    try { v61 = ("getPrototypeOf").blink(); } catch (e) {}
    let v62;
    try { v62 = v61.strike(v24); } catch (e) {}
    class C64 {
        ["getPrototypeOf"] = -1.7976931348623157e+308;
    }
    class C65 extends C64 {
        ["getPrototypeOf"] = C64;
    }
    try { new C65(); } catch (e) {}
    C65.e = C65;
    Array(-9007199254740990);
    %PrepareFunctionForOptimization(Array);
    Array(-9007199254740990);
    Array(-9007199254740990);
    %OptimizeFunctionOnNextCall(Array);
    Array(-9007199254740990);
    const v71 = new C65();
    const v72 = v71?.getPrototypeOf;
    try { new v72(); } catch (e) {}
    v71.constructor;
    try { new v23(F28, v55); } catch (e) {}
    const v76 = Array(19793);
    for (const v77 of v76) {
    }
    const v78 = [v76,v76,v76,v76,v76];
    let v79;
    try { v79 = v78.includes(839612.5677247904); } catch (e) {}
    v79 && v79;
    BigUint64Array.e = BigUint64Array;
    try { v62.reduceRight(v26); } catch (e) {}
    for (let v83 = 0; v83 < 5; v83++) {
    }
}
new F28();
new F28();
