const v4 = new Int8Array();
v4.buffer.slice();
new Uint8Array(268435440);
new Uint32Array(186);
class C13 {
    static {
        try { this.call(-4345); } catch (e) {}
        super.g = this;
        try { new this(this, this, ...this, -273.20504074240364, ...this); } catch (e) {}
        const v18 = super[this];
        try { this.m(v18, v18, -4345, -273.20504074240364); } catch (e) {}
        const o20 = {
        };
        const v23 = new Uint8Array();
        try { v23.values(); } catch (e) {}
        v23.c = 1073741825;
        class C25 {
            #n() {
            }
        }
        const v27 = new C25();
        const v28 = v27?.constructor;
        try { new v28(); } catch (e) {}
        Proxy.name;
        const v32 = new Proxy(this, o20);
        v32.d = v32;
    }
    static #h = -4345;
    #a = -4345;
}
try { new C13(); } catch (e) {}
const v34 = new C13();
const v35 = v34?.constructor;
try { new v35(); } catch (e) {}
const v37 = new C13();
const v38 = v37?.constructor;
try { new v38(); } catch (e) {}
new C13();
class C44 {
}
const v45 = new C44();
const v46 = v45.__lookupGetter__;
let v47;
try { v47 = new v46(C44); } catch (e) {}
const v48 = [-3.0,4.0,1.7381830731777672e+308,-Infinity,0.053627216611518036];
v48.toLocaleString(v47, v48);
for (let i52 = 0, i53 = 10;
    i52 >> i52, i53 > i53, i52 < i53;
    (() => {
        i52++;
        function F60() {
            if (!new.target) { throw 'must be called with new'; }
        }
        ([-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0]).forEach(Float64Array);
    })()) {
}
URIError(4, 9);
const o71 = {
};
o71.a = o71;
for (let v75 = 0; v75 < 5; v75++) {
    v75 * v75;
    function f77() {
        for (let [i81, i82] = (() => {
                switch (f77) {
                }
                -0;
                return [0, 10];
            })();
            (() => {
                i82 << i82;
                for (let v84 = 0; v84 < 5; v84++) {
                    delete v48[v84];
                }
                -3.0 | -9007199254740992;
                const v89 = i81 < i82;
                v89 && v89;
                return v89;
            })();
            i81 & i81, i81++, i82--) {
            ~i81;
        }
        return v75;
    }
    -f77();
    %OptimizeFunctionOnNextCall(f77);
}
try { new BigInt64Array(BigInt64Array); } catch (e) {}
function F103() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v105 = this[1073741824];
        v105[4040] = v105;
    } catch(e106) {
    }
}
class C107 extends F103 {
}
