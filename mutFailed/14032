const v1 = new Map();
Uint8Array.name;
new Uint8Array(268435440);
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    a8.name = a8;
    try {
        this.b = a8;
    } catch(e10) {
    }
    try {
        this.e = a9;
    } catch(e11) {
    }
    try {
        this.f = a8;
    } catch(e12) {
    }
}
F6.d = F6;
const v13 = new F6(Map, Map);
new F6(v13, v1);
const v15 = new F6(v1, Map);
try { F6.valueOf(); } catch (e) {}
const v18 = new Map();
-9n;
const v22 = -(-10n);
class C24 {
    static toString(a26, a27) {
        delete v13[268435456];
        try {
            v15.f = F6;
        } catch(e29) {
        }
        return v18;
    }
    static 129 = -10n;
    toString(a31, a32, a33, a34) {
        delete v1?.size;
        try {
            super.toSorted();
        } catch(e37) {
        }
        return Uint8Array;
    }
}
new C24();
new C24();
new C24();
function F41() {
    if (!new.target) { throw 'must be called with new'; }
    this.c = this;
}
const v43 = new F41();
v43.c;
function f45(a46, a47) {
    const o54 = {
        [a47](a49, a50, a51) {
        },
        set h(a53) {
        },
        "h": v43,
    };
    return F41;
}
v22();
f45();
