class C3 {
    #p(a5, a6) {
        return "0lZ8y";
    }
    static 16;
    static {
        try {
            super.valueOf(this);
        } catch(e12) {
        }
    }
    static 1 = C3;
    #valueOf(a14, a15) {
        return a15;
    }
    o(a17, a18, a19, a20) {
    }
}
new C3();
try {
    new Float64Array(127);
} catch(e25) {
}
const v26 = new C3();
const v27 = new C3();
function F28(a30, a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = this;
    try {
        this.e = a31;
    } catch(e33) {
    }
    try {
        this.b = v26;
        const v36 = new Int8Array(2830);
        const v39 = new Int32Array(10);
        function f42(a43, a44, a45) {
            const o46 = {
                ...v36,
                814452916: 129,
                "f": v39,
                ...v39,
                __proto__: a44,
                [a44]: Float64Array,
            };
            return f42;
        }
        f42();
        f42(-25269, v36);
    } catch(e50) {
    }
    try {
        this.c = v26;
    } catch(e51) {
    }
}
new F28("object", v27, "object");
new F28("object", "0lZ8y", "0lZ8y");
new F28(v26, "0lZ8y", "0lZ8y");
for (let v58 = 0; v58 < 25; v58++) {
    function f59() {
        return f59;
    }
    const v60 = [601759695];
    const v61 = [1073741824,1073741823,1376142744,1073741825];
    function f62(a63, a64, a65, a66) {
        a66.toLocaleString();
        try { v61["find"](..."find", a66, ...v60, ...v61); } catch (e) {}
        const v70 = typeof v58;
        "p" + 127;
        function f74() {
            return Array;
        }
        function f78() {
            return f78;
        }
        function f79() {
            [1e-15,1.0,-3.0,1.43935350979979e+308,-0.0];
            const v82 = ([-1000000.0,771279.5641904315,0.0,8.299995604235331,6.625300935335886,-820.4949035918538,-602.5256799896665,0.6342705996691437,Infinity]).toLocaleString();
            let v83;
            try { v83 = v82.search(f79); } catch (e) {}
            return v83;
        }
        Math.floor(f59);
        Math.asin(f59);
        Math.max(f59);
        const v87 = 9007199254740990 || f59;
        v87 >> 9007199254740990;
        v87 / 9007199254740990;
        v70 === "number";
    }
    for (let v91 = 0; v91 < 5; v91++) {
        f62(f59, v91, v91, v61);
    }
    new Uint8Array();
    function F95(a97, a98, a99) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v100 = new F95();
    Object.defineProperty(v100, v61, { writable: true, configurable: true, set: Array });
}
