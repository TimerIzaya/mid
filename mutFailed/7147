const v0 = [0.0,1000000000.0,-9.821086765219384e+307,-858.0794579951759];
let v1 = [-2.0,-1.5384788741465538,-2.0];
const v2 = [0.9388990264144315,-1e-15,-1.0,841561.2554243801];
class C3 {
    static a;
    set b(a5) {
        let [] = v1 = v0;
    }
    [v2];
    n(a7, a8) {
        try { a8["push"](...v0, ...a8, ...v0, ...v1, ...this); } catch (e) {}
        return "push";
    }
    #f = v1;
    268435440;
    [v1] = C3;
    static #d;
    [C3];
    static b;
    static m(a12) {
        try { new a12(this, this, v0, this); } catch (e) {}
        v0 < v2;
        const o15 = {
        };
        new Proxy(this, o15);
        return v2;
    }
}
new C3();
new C3();
const v20 = new C3();
new Float64Array(257);
new Uint32Array(6);
new Float32Array(706);
class C30 {
}
function F31() {
    if (!new.target) { throw 'must be called with new'; }
}
const v33 = new F31();
const v34 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v36 = 9007199254740991n * 9007199254740991n;
for (let v37 = 0; v37 < 5; v37++) {
    function f38() {
        const v39 = new Float32Array(v20, v37, f38, v37, f38, ...v1);
        const v42 = [v37,v37,[[v39,v36,v39,Float64Array,v39],v37,706,v37],f38,v20];
        try {
            v42.length = v37;
        } catch(e43) {
        }
        for (let v44 = 0; v44 < 5; v44++) {
            try { ("p").substring(C30, C30); } catch (e) {}
        }
        try {
            v34.forEach();
        } catch(e48) {
            e48.a = v33;
            e48.a = e48;
        }
        const t59 = ("1073741824").constructor;
        t59(v36);
        return "1073741824";
    }
    f38();
    %OptimizeFunctionOnNextCall(f38);
}
