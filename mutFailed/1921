const v0 = /\w|\da+b/udim;
function f1(a2, a3) {
    const v4 = [v0,a3];
    const v5 = [v4,v0,a2];
    [v4,v4,a3,a3];
    return v5;
}
v0.toString = f1;
const v7 = /6ya{1,2}?/ud;
v7.toString = f1;
const v8 = /Va{0,1}?/gvdy;
v8.toString = f1;
function f12(a13, a14, a15, a16) {
    function f17() {
        return f1;
    }
    function f18(a19) {
        class C22 extends Uint16Array {
        }
        class C23 extends C22 {
            b;
            constructor(a25, a26, a27, a28) {
                super();
                function f29(a30, a31, a32) {
                    function f34(a35) {
                        a31[5] ||= a25;
                    }
                    this.onmessage = f34;
                    const v38 = new SharedArrayBuffer(35);
                    new BigUint64Array(v38);
                }
                const v43 = [2082,"function",this];
                const o44 = {
                    "arguments": v43,
                    "type": "function",
                };
                new Worker(f29, o44);
            }
        }
    }
    Object.defineProperty(a16, "toString", { writable: true, configurable: true, enumerable: true, get: f17, set: f18 });
    const o46 = {
        __proto__: a14,
        "f": a15,
        ...a14,
        "g": 0.8434254237560118,
        "c": 506503.51604840416,
        "b": 0.8434254237560118,
        "d": a15,
        "a": v8,
        "h": a16,
        [a15]: v0,
        "e": a14,
    };
    return o46;
}
f12(f12(v0, 506503.51604840416, v7, v7), v7, v8, v0);
f12(f12, v7, v0, 506503.51604840416);
class C50 {
    constructor(a52, a53) {
        new Uint8Array(2495);
        new Int8Array(87);
        new Uint32Array(204);
    }
}
const v63 = new C50(v8, v0);
const v64 = new C50(v63, v8);
new C50(v0, v64);
[-9007199254740990,268435441];
[-37207,127,-4,-2147483649,65535,-1024,-536870912];
[4294967297,-256,8,1204244361,536870887];
[4,268435456,-1988579072,-9007199254740991,-31917];
[-1257322457,8,127,-14,39653,128,9007199254740990];
const v71 = [9007199254740990,16,-65536,7,10,9223372036854775807,16,4,1073741824];
let v72 = [29915,-9007199254740990,9];
const v73 = [39049,-2147483647,9007199254740991,30221,268435456,-2147483647,41987];
const v74 = [2147483647,-32974,7,-54836,-9,-15,10000];
v74.toString = f12;
const v75 = [268435440,49273,-15,214837996,-12,65536,1291301446,-65535];
v75.constructor = f12;
try { v75.concat(v73); } catch (e) {}
if (v73 <= v74) {
    v71 ** v73;
    v72 += v74;
} else {
    var d = v74;
}
[24691,802039630,-9223372036854775808,-27820,-1112311792,-26767,1098810331];
[881994048,268435456,1,1024,39940,8242,4740,-12,1024,1073741825];
new BigInt64Array();
const v86 = new Int32Array(1);
v86.toString = f12;
v86[0] = v86;
const v87 = (a88, a89, a90) => {
    let v91 = a88 & a88;
    ({"h":v91,"length":a88,...v91} = a90);
    return a90;
};
const v93 = v86 instanceof BigInt64Array;
v93 || v93;
let v95 = gc;
try { v95.bind(v75); } catch (e) {}
const v97 = v95();
const v98 = ("object").trim();
try { v98.sup(); } catch (e) {}
v95 /= v97;
