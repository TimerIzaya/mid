function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    const v7 = this?.constructor;
    try { new v7(a5, a5); } catch (e) {}
    a6 != a6;
    try {
        const v10 = /(?:a*)+q(?<a>.)/guds;
        for (let v11 = 0; v11 < 5; v11++) {
            v10["exec"]();
        }
        this.f = a6;
    } catch(e14) {
    }
    try {
        this.h = a5;
    } catch(e15) {
    }
    try {
        this.g = a5;
        new Float64Array(255);
        const v19 = [];
        const v21 = ("d").strike(v19, "d");
        try {
            v19.length = v21;
        } catch(e22) {
        }
    } catch(e23) {
    }
}
const v24 = new F3(13n, 268435440n);
const v25 = new F3(-9223372036854775808n, 268435440n);
v25.b = v25;
new F3(F3, 268435440n);
class C27 {
    static [13n] = v24;
    f = v25;
    static toString(a29, a30, a31) {
        let v28 = this;
        super.c = a29;
        Math.acosh(65535);
        let v36 = 115;
        function f37() {
            const v40 = Math.imul(v36--);
            return v40 >> v40;
        }
        Object.defineProperty(a30, -2, { writable: true, enumerable: true, set: String });
        v28 = String;
        a31 = a29;
        switch (v36) {
            default:
                break;
        }
        const o42 = {
        };
        return v28;
    }
    static #d;
}
const v43 = new C27();
v43.f;
new C27();
new C27();
function f48() {
    return f48;
}
class C50 extends Uint16Array {
}
for (let v51 = 0; v51 < 5; v51++) {
    v51 - v51;
    function f53() {
        const v54 = BigInt64Array + BigInt64Array;
        const v55 = [-4.0,-187.33463400009316,266767.34688113444,551749.9695726107];
        const v56 = /(?:a*)+q(?<a>.)/guds;
        function f57(a58) {
            a58.hasIndices;
            class C60 {
            }
            return f57;
        }
        for (let [i68, i69] = (() => {
                const v63 = new Uint32Array([2.0,-2.2250738585072014e-308,2.4617128810201834,0.8777478192033997,4.0,5.13369912480738,-0.6793749535317453]);
                new Uint16Array(v63);
                return [0, 10];
            })();
            i68 < i69;
            i69--) {
            for (let v76 = 0; v76 < 50; v76++) {
                const t87 = f57(v56);
                t87(v55);
            }
        }
        const v79 = v54 > v54;
        v79 || v79;
        return v79;
    }
    f53();
    %OptimizeFunctionOnNextCall(f53);
}
