class C3 {
    n(a5) {
        const t2 = "1134401780";
        t2[8] %= a5;
        return ("1134401780")[a5];
    }
    set c(a8) {
        for (const v9 of a8) {
            try { v9(a8, a8); } catch (e) {}
        }
        let [,v11] = 1e-15;
        Object.defineProperty(this, 0, { configurable: true, value: 1e-15 });
    }
    14 = 0;
    static f;
    static 127 = 0;
}
const t17 = "1134401780";
const v12 = new t17();
const v13 = new C3();
new C3();
class C18 {
    static set e(a20) {
        let {"e":v21,"h":v22,} = this;
        try {
            C3.valueOf = v22;
        } catch(e23) {
        }
    }
    constructor(a25, a26) {
        try {
            new C3();
        } catch(e28) {
        }
    }
    c = C3;
    d;
}
const v29 = new C18(v12, -4.535090282725906e+307);
const v30 = new C18(v13, -4.535090282725906e+307);
new C18(v29, v30);
class C32 {
    static c = C32;
    0;
    valueOf(a34, a35) {
        try {
            new C3();
        } catch(e37) {
        }
        v12[830121.9689939676] ||= -4.535090282725906e+307;
        try {
            v29.fuck(/a[a-z]/u, -4.535090282725906e+307);
        } catch(e40) {
        }
        return this;
    }
}
const t57 = "1134401780";
new t57();
new C32();
new C32();
const v45 = [-6.8035006781971e+307,1000000.0,1000.0,-2.715046407601891];
class C47 extends Array {
}
const v48 = new C47();
function f49(a50) {
    return a50;
}
f49[Symbol.species] = f49;
v48.constructor = f49;
v48.concat(v45);
const v55 = new Int16Array(5);
new Float32Array(v55);
