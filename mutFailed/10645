function F0() {
    if (!new.target) { throw 'must be called with new'; }
    const v3 = new F0();
    v3[this] = v3;
    const o4 = {
    };
    new Proxy(this, o4);
    try {
        const v7 = [F0,o4,6,o4,F0];
        [F0,v7];
        const v9 = [F0,v3];
        delete v7[2292];
        v9.length;
        this.b = 6;
        let v12 = 0;
        while (v12 < 0) {
            break;
            v12++;
        }
    } catch(e16) {
    }
    try {
        this.h = 6;
    } catch(e17) {
    }
}
new F0(F0, F0, F0);
const v19 = new F0();
new F0();
const v23 = new Int32Array(64);
new Uint8Array(100, Uint8Array, Int32Array);
new Date(1000);
function F30() {
    if (!new.target) { throw 'must be called with new'; }
}
const v32 = [-268435456,-9007199254740990,11,-25356,-536870912,4294967296,1520296454];
const v33 = v32 & v23;
v32[Uint8Array] = v19;
v23[Int32Array];
let v37 = 9 >> v33;
Math.hypot(v37);
v37 ** 9;
Math.acos(v37);
Math.clz32(9);
v37--;
v33 << v33;
const o44 = {
    __proto__: v32,
};
try { o44.m(F30); } catch (e) {}
