let v1 = "toString";
let v3 = -25535n;
v3++;
let v5 = 16n;
v5--;
const v8 = [-2.2250738585072014e-308,-1000000.0,5.0];
const v9 = [-1.3697938463519845e+308,0.9975322529646589];
[-3.136558458903876e+307,580778.5232993043,1.0,-8.984595259704713,NaN,-340.2929603985549,1.575735329362543e+308,1.0370901367118297e+308];
class C11 {
    set a(a13) {
        v3 ^ v3;
        v1 ^= v1;
    }
    f;
    static [0n] = v5;
    #n(a16, a17, a18) {
        var g = a16;
        a16[v8] = v3;
        v9 / v8;
        return 0n;
    }
    static 4 = v8;
}
new C11();
const v21 = new C11();
v21.e = v21;
const v22 = new C11();
-16;
class C25 {
    constructor(a27, a28) {
        const v29 = this?.constructor;
        try { new v29(v5, v22); } catch (e) {}
        function f31(a32) {
            class C34 {
            }
            C34.e = C34;
            function f35(a36, a37, a38, a39) {
                function f40() {
                    const o47 = {
                        "type": "Vre",
                        5: a37,
                        "g": C34,
                        "execution": "Vre",
                        "type": "Vre",
                        p(a44, a45) {
                            this.raw(a45, this, a36);
                            return 1000000.0;
                        },
                        6: -268435456,
                    };
                }
                f40();
                %OptimizeFunctionOnNextCall(f40);
            }
            return v1;
        }
        f31.name = f31;
        this.constructor = f31;
        const v49 = this.constructor;
        const v50 = v49?.constructor;
        try { new v50(v1); } catch (e) {}
        try { new v49(); } catch (e) {}
        this[16] >>>= 16;
    }
}
new C25();
const v54 = new C25(C25, 16);
v54[16] = v54;
