const v0 = [];
let v2 = -109421621n;
var g = Int16Array;
v2 = 8n;
const o4 = {
};
try {
    o4.h = v0;
} catch(e5) {
}
try {
    const o6 = {
    };
    o6.h = v0;
    o6.b = v0;
} catch(e7) {
}
try {
    const o8 = {
    };
    o8.h = v0;
    o8.b = v0;
    o8.e = 8n;
} catch(e9) {
}
try {
    const o10 = {
    };
    const t28 = 8n;
    t28.h = v0;
    o10.b = o4;
    o10.e = Int16Array;
} catch(e11) {
}
const v15 = new Int32Array(15);
const v16 = v2?.constructor;
try { new v16(-9007199254740991n, v15, v15); } catch (e) {}
new BigUint64Array(186);
Uint32Array.length = Uint32Array;
new Uint32Array(7);
const v24 = [2,-4096,-268435456,-536870912,9007199254740992];
v24[2] = v24;
v24.length = v2;
