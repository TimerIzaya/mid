function f0() {
    const o8 = {
        "d": NaN,
        __proto__: NaN,
        set h(a5) {
            super.b <<= a5;
            try { a5.p(a5, this, this, a5); } catch (e) {}
            super[a5];
        },
        [NaN]: -1000000000000.0,
        ...64,
        [-1000000000000.0]: 64,
    };
    return o8;
}
const v9 = f0();
const v10 = f0();
const v11 = f0();
class C12 extends f0 {
    #a = v11;
    static #f;
    p(a14) {
        let v15;
        try { v15 = new a14(this, this, this, v10); } catch (e) {}
        try {
            v11.#a /= v15;
        } catch(e16) {
        }
        return f0;
    }
}
C12.e = C12;
const v17 = new C12();
new C12();
new C12();
const v22 = new Array(3088);
const v23 = v22?.constructor;
try { new v23(C12); } catch (e) {}
try { ("Cl").replaceAll(v17, v9); } catch (e) {}
207 ^ 207;
207 + 207;
new Float32Array(207);
let v34 = 14;
v34 % v34;
v34--;
try { new Uint8ClampedArray("symbol", v34, 207); } catch (e) {}
new Uint8ClampedArray(v34);
const v42 = new Uint32Array(4096);
try { v42.toSorted(207); } catch (e) {}
const v45 = 220 >> 220;
v45 < v45;
const v48 = new BigUint64Array(220);
const v49 = v48[42];
-v49;
const v53 = new Uint32Array(958);
v53.g = v53;
3844 << 3844;
try { new Int8Array(v22, 3088, "symbol"); } catch (e) {}
const v58 = new Int8Array(3844);
v58[372] = v58;
let v61 = -1024n;
class C62 {
    set c(a64) {
        v61 = 0n;
        a64 += 0n;
    }
    constructor(a66, a67, a68, a69) {
        C62 >>> v58;
    }
    static [v53] = v49;
    128 = "Cl";
    m(a72) {
        let v73;
        try { v73 = new this(a72, -490778482n, this); } catch (e) {}
        this.c |= v73;
        return a72;
    }
    static 1;
    static h = -490778482n;
    static #f = v61;
}
try { new C62(958, v48, 958, BigUint64Array); } catch (e) {}
try { new C62(); } catch (e) {}
new C62();
new C62();
const v78 = new C62();
[1.7976931348623157e+308,0.15227894183030433,-2.0,259880.3330397869,0.0,-1e-15,360683.0243419355,-1e-15,1.7976931348623157e+308];
const v81 = [0.03568519099872258];
try { v81.map(v81); } catch (e) {}
try { v81.join(v48); } catch (e) {}
const v84 = [462318.599710946,0.6123807977566038,-0.0,-108306.02593608841,Infinity,0.0,-4.0,-1000.0];
try { v84.at(4096); } catch (e) {}
class C86 {
    static {
        this.name = this;
        const v88 = this >> "Cl";
        v88 - v88;
        super[this] = v45;
    }
    [Float32Array];
    static 3518;
    static 2147483648;
    static #valueOf(a91, a92) {
        v78[null] ||= a91;
        const v93 = v81.__proto__;
        try { v93(this, a91, v61, v93, this); } catch (e) {}
        return v81;
    }
    [v61] = v61;
    2;
    static #h = null;
    constructor(a96, a97, a98) {
        this[2];
        const v102 = Uint8Array?.constructor;
        try { new v102(v61); } catch (e) {}
        new Uint8Array(1024);
        new Int32Array(2);
        Uint16Array.length = Uint16Array;
        const v110 = new Uint16Array(2277);
        const v111 = v110?.findLastIndex;
        try { new v111(3844); } catch (e) {}
    }
    #a = null;
}
try { new C86(Uint32Array, Float32Array, 4096); } catch (e) {}
const v114 = new C86();
v114[2];
const v116 = new C86();
v116[2];
v116[2];
const v119 = new C86();
v119[2] = v119;
let v120 = 2;
v120--;
try { new Uint8Array(Int8Array, Int8Array, 958); } catch (e) {}
const v124 = new Uint8Array();
let v125;
try { v125 = v124.entries(); } catch (e) {}
try { v125.next(); } catch (e) {}
function f127(a128, a129, a130, a131) {
    a128.prototype = a128;
    a130--;
    a130 === a130;
    a130++;
    const o135 = {
        ...v124,
    };
    function f136() {
    }
    function f137(a138) {
        const o139 = {
        };
    }
    let v141 = -3.9870582640049523;
    v141--;
    function f144(a145, a146, a147) {
        const o148 = {
            "h": a147,
        };
        return o148;
    }
    f144(v141, v141, 1000000.0);
    const v150 = f144(1000000.0, v141, 1000000.0);
    f144(v141, -2.2250738585072014e-308, v141);
    v150["toString"]();
}
for (let v154 = 0; v154 < 500; v154++) {
    f127(Uint8Array, v120, v154);
}
