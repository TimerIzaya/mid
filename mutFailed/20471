function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = this;
    try {
        this.h = 9223372036854775807;
    } catch(e3) {
        delete e3?.[F0];
        %VerifyType(F0);
        let {"c":v5,...v6} = e3;
        %VerifyType(9223372036854775807);
        try {
            new F0();
        } catch(e8) {
        }
    }
    try {
        this.f = 9223372036854775807;
    } catch(e9) {
    }
    try {
        this.a = 9223372036854775807;
    } catch(e10) {
    }
}
const v11 = new F0();
new F0(v11);
const v13 = new F0();
v13.g = v13;
const v14 = [28011];
([-256,5,-7588])[1];
const v17 = [108952581,-277339824,4096,-2141896228,6];
let v18 = 4.0;
v18++;
const v20 = v18 >>> v18;
let v24 = 3;
v24--;
try { new JSON(v17, v17, v14); } catch (e) {}
const v28 = new JSON(v24);
const v31 = [v28,v28[1],Reflect];
try { v31.join(v20); } catch (e) {}
Reflect.construct(Uint32Array, v31)[2];
