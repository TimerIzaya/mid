const v1 = new Map();
new Int8Array(1024);
try {
    v1.h = 2147483649;
} catch(e7) {
}
new Map(0);
9n / 9n;
const v14 = [1.7976931348623157e+308,-5.063738949828065,-1000000.0,-4.0,4.0,1.368499884638594e+307,0.0,-1.2131530743918297,-1000000000.0,-2.809909548595164];
function f15() {
    return f15;
}
v14.constructor = f15;
v14.values(f15, f15, v14, v14);
const v17 = new Int8Array(Map);
new Uint8ClampedArray(1274);
[256,54026];
Symbol.isConcatSpreadable;
const o37 = {
    get f() {
        super.subarray();
        return isFinite;
    },
};
"1DJ" % -2;
!v17;
Math.hypot(Math);
new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
new BigUint64Array();
let v46 = 2;
v46++;
