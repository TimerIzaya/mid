const v2 = new Float64Array(2);
new Int8Array(828);
new Float32Array(7);
const v13 = [0.0,-2.220446049250313e-16];
v13.o = "o";
v13.o = "undefined";
let v14;
try {
const t0 = 16;
v14 = t0();
} catch (e) {}
[v14] = "o";
b = v14;
const v16 = Symbol.hasInstance;
v2[v16] = v16;
function f17() {
    return f17;
}
function f18(a19) {
    function f20(a21, a22, a23) {
        const v26 = new Int8Array();
        Int16Array.apply(128, v26);
        return f20;
    }
    return 828;
}
f17.valueOf = f18;
class C29 extends f17 {
}
C29[Symbol.toPrimitive] = Symbol;
class C32 {
    constructor(a34, a35) {
        /W(jy2)/udy.flags;
        Uint8Array[Symbol.toPrimitive] = Symbol;
        let v42 = v13[v14];
        v42 **= Uint8Array;
        function f43(a44, a45, a46, a47) {
            return a45;
        }
        for (let v48 = 0; v48 < 625; v48++) {
            f43(Uint8Array, 2, v48);
            try {
                a34 &= C29;
            } catch(e50) {
            }
        }
    }
}
new C32();
new C32();
