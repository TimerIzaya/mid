new Float64Array(370);
("setUTCMinutes").toUpperCase();
const v5 = ("setUTCMinutes").normalize();
Float32Array[2] = Float32Array;
new Float32Array(Float32Array);
new Uint8Array();
class C12 {
}
class C13 extends C12 {
}
new Int16Array(64);
new Uint8ClampedArray(0);
("minor").valueOf();
const o21 = {
    "execution": "async",
    "type": "minor",
};
[-896608.7064559212,1.6493968889847554,232.3862844527307,581.6983412825389,-428.2789715819548,862.4511809575733,6.54580170616541,2.2250738585072014e-308,0.44552589237230034,267.3108615911774];
new Uint8Array();
Object.defineProperty(Reflect, "b", { enumerable: true, value: Uint8Array });
let {"b":v25,"f":v26,"g":v27,...v28} = Reflect;
const v29 = [2.220446049250313e-16,-2.0,9.472378156545009,0.0,1e-15,0.3751557433004281,0.0,-474740.46049005154];
const o35 = {
    set h(a31) {
    },
    __proto__: v29,
    o(a33, a34) {
        return this;
    },
};
[-1000000000.0,-4.0,-240.0885270874935,-0.0,-5.0,1e-15,747275.145211468];
[5.0,-1.7976931348623157e+308,-3.0];
Math.log1p(0.04879611221991542);
function F41(a43, a44, a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
}
class C48 {
}
const v49 = new C48();
const v50 = new C48();
const v51 = new C48();
function f52(a53, a54) {
    new Float32Array(v50);
    new Float32Array(a53, -9223372036854775807);
    return a54;
}
const v58 = Symbol.toPrimitive;
v51[v58] = f52;
function f59(a60, a61) {
    a61.toString = Symbol;
    const v62 = [];
    try { v62.with(); } catch (e) {}
    const o71 = {
        [v50](a65, a66, a67) {
            super[-9223372036854775807];
        },
        set b(a70) {
        },
        [a61]: v49,
    };
    return a60;
}
%PrepareFunctionForOptimization(f59);
f59(Uint16Array, v51);
%OptimizeFunctionOnNextCall(f59);
const v74 = new C12();
function f75(a76) {
    v58.__proto__;
    -(-7);
    return v5;
}
v74.constructor = f75;
const t72 = v74.constructor;
new t72();
const o82 = {
};
f59();
