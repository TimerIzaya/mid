const v1 = new Map();
function f2() {
    return v1;
}
const v3 = [-525.4076224328265,756793.3384281634,1e-15,0.45579894539264076,1.7976931348623157e+308,3.0,-647.6144722579434,0.22682405063076339,0.12146382278517398,-4.0];
const v4 = [1000000000000.0,-1.0,0.16743396882967887,0.6879978073578294,-906.448703205565,-2.2250738585072014e-308,5.0,-1.3507276931763923e+308,2.0];
const v5 = [1.1432270069862812e+308,-1.7515676319286348e+307,149.37838268161022,2.0,0.8964629037495107,-1e-15,-5.807308751239169,705439.2235530457];
class C6 extends Map {
    m(a8, a9, a10) {
        const o15 = {
            "b": 1e-15,
            [3](a14) {
            },
        };
        try { a8.entries(); } catch (e) {}
        return a9;
        try {
            new f2();
        } catch(e18) {
        }
        return Map;
    }
    static {
        super[v5] = this;
        v4[f2];
        class C21 {
        }
        class C23 {
        }
        async function f24(a25, a26, a27, a28) {
            (await C23).call();
            return "source";
        }
        const o33 = {
            "maxByteLength": 220,
        };
        const v35 = new ArrayBuffer(7, o33);
        new Uint32Array(v35);
    }
}
const v38 = new C6();
const v39 = new C6();
const v40 = new C6();
function f41(a42, a43, a44, a45) {
    const o60 = {
        valueOf(a47, a48, a49, a50) {
            function f51() {
                return a43;
            }
            a47[3783] **= a42;
            return a43;
        },
        "d": a43,
        "e": v39,
        [v5](a53, a54, a55, a56) {
            try {
                v40.length = 0;
            } catch(e59) {
            }
            return a45;
        },
    };
    return o60;
}
f41(f41(v5, v5, v40, v39), v5, v39, v1);
f41(v40, v3, v39, v40);
[v5,v1,v38];
[[f2]];
class C70 {
    static set h(a72) {
        eval("VL9k");
    }
}
const t73 = "f";
t73["f"] = 916023.9775313165;
64 < 64;
Map[3];
new Uint16Array(1024);
function F91(a93) {
    if (!new.target) { throw 'must be called with new'; }
    a93 | a93;
    const v95 = this?.constructor;
    try { new v95(3n); } catch (e) {}
}
new F91(257);
new F91(349865170n);
