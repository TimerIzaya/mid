const o1 = {
};
-7 | -7;
o1.cos(-7);
Uint8Array.g = Uint8Array;
new Uint8Array(29);
let v11 = 3;
v11++;
new Uint32Array(v11);
const v17 = new Uint8ClampedArray(512);
let v18;
try { v18 = v17.filter(29); } catch (e) {}
const v23 = Math == 536870888;
function f25() {
    function f26(a27, a28) {
        a28(f26);
        return f26;
    }
    new Promise(f26);
    return Promise;
}
Math.sin(-712.2127348642608);
536870888 + -712.2127348642608;
!v18;
const v35 = Math.sign(-712.2127348642608);
v35 >>> v35;
const v37 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
v23 >>> 3341;
Float64Array.d = Float64Array;
const v41 = new Float64Array(3341);
const v43 = new Int8Array();
const o44 = {
    __proto__: v37,
    "g": Float64Array,
    ...v41,
    2147483647: v43,
};
