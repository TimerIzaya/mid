function f0() {
}
const v4 = [4294967295,1000,11,9007199254740990,268435440,268435439,268435441,-1791900031,-4294967297,4];
[21853,9223372036854775807,5,-1073741824,-9223372036854775807,1024,-42322,4];
const v6 = [20567,512,9007199254740992,-65535,-220093309,-9];
new Float32Array(10, v6, f0, Float32Array);
new Int8Array(10);
new Uint8Array(1277);
class C19 {
    static #o(a21) {
        this.g **= -1e-15;
        try {
            a21.normalize();
        } catch(e23) {
        }
        return 268435456;
    }
    a = -1e-15;
    static 27 = 268435456;
    static f;
}
C19[7] = v4;
let v24;
try { v24 = new C19(); } catch (e) {}
v24.a = v24;
const v25 = new C19();
v25.a = v25;
new Float32Array();
const v27 = new C19();
8 - 8;
const v30 = 8 - 8;
function f33(a34) {
    let v35 = [-883936.0401947303,9.41640124927378e+307,0.060305085001335246];
    v35 /= v35;
    return v30;
}
Math[Symbol.toPrimitive] = f33;
let v39 = -15;
v39 | v39;
const v42 = 344.61638667171496 | 344.61638667171496;
const v43 = 344.61638667171496 & -11;
v43 << v42;
const v45 = Math.sqrt(-11);
const v46 = Math.floor(v43);
const v47 = v46 && v46;
const v48 = v39--;
v48 >> v48;
const v50 = new Int32Array(8);
Object.defineProperty(v6, 10 / C19[7], { configurable: true, get: f0 });
try {
    const o53 = {
    };
    function f54(a55) {
        try {
            BigInt(BigInt);
        } catch(e58) {
        }
        return BigInt;
    }
    o53[Symbol.iterator] = f54;
    new Int32Array(o53, v43);
} catch(e62) {
}
try { v50.constructor(v27, -1e-15, 8); } catch (e) {}
new Uint32Array(2950);
const v68 = 28 | 28;
const v70 = new Uint32Array(28);
function f71(a72, a73) {
    const v76 = new Uint16Array(3);
    v76.indexOf();
    return -1024n;
}
v70[Symbol.toPrimitive] = f71;
v70[Symbol.toPrimitive] = f0;
v70[0] = v70;
let v82 = 0;
let v83 = -56850;
v83++;
1.1408591040999836e+308 >>> v47;
class C87 {
    #b = v82;
    g = 1.1408591040999836e+308;
    static {
        Object.defineProperty(this, "h", { value: this });
        this.h = v45;
        let v89;
        try { v89 = new this(); } catch (e) {}
        v89.e = v89;
        this.h = this;
        try { Math.tan(Math); } catch (e) {}
        let v92 = 2066950223;
        -v46;
        v92--;
        const v96 = v82++;
        const v97 = v96 & v96;
        let v98 = -v96;
        v98++;
        let v100 = ~v82;
        v100--;
        Math.log10(44149);
        const v103 = 44149 + v82;
        v103 + v97;
        v103 >> v103;
        const v106 = Math.fround(v96);
        v106 >> v106;
    }
}
let v108;
try { v108 = new C87(); } catch (e) {}
v108.d = v108;
v108.d = v108;
const v109 = new C87();
v109.g;
v109.g;
const v112 = new C87();
const v113 = v112?.__defineGetter__;
function f114() {
    return Symbol;
}
Object.defineProperty(v113, "constructor", { writable: true, configurable: true, enumerable: true, get: f114 });
try { v113.constructor(v27); } catch (e) {}
try { new v113(v68, C87); } catch (e) {}
const o123 = {
    "execution": "async",
    set e(a121) {
        try {
        } catch(e122) {
        }
    },
};
o123.type = v50;
gc(o123);
