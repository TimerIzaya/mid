function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = -178155666;
    } catch(e3) {
    }
    try {
        this.b = -178155666;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
new F0(v6, v6, v6);
function f11() {
    return "b";
}
function f12() {
    return v5;
}
class C13 extends f12 {
    #c = v5;
    static [-1] = F0;
    static #g;
    set b(a15) {
        let v14 = this;
        a15 !== f11;
        v14 /= v6;
        try {
            v6.valueOf = a15;
        } catch(e17) {
        }
    }
    static e = F0;
    static 5;
    static 257 = "b";
}
const v18 = new C13();
const v19 = new C13();
const v20 = new C13();
function f21(a22, a23) {
    const o34 = {
        [a23](a25, a26, a27, a28) {
            ("tDUy")[5];
            f12();
            %PrepareFunctionForOptimization(f12);
            f12();
            f12();
            %OptimizeFunctionOnNextCall(f12);
            f12();
            return a22;
        },
        __proto__: a22,
        "asyncIterator": v19,
        "a": a22,
        "d": v20,
    };
    return o34;
}
f21(v5, f11);
f21(v18, "rr3VI");
f21(v18, "b");
const v40 = new Uint8ClampedArray(255);
v40[6] = Uint32Array;
