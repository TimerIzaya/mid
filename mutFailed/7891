const v5 = 10000 + 10000;
v5 >> v5;
const t1 = 43296;
const v10 = new t1(9);
-257929.7411076586 >>> -257929.7411076586;
const v16 = -4 ^ 4.744336512801499e+307;
let v17;
try { v17 = v10(); } catch (e) {}
v17?.[641];
BigUint64Array.d = BigUint64Array;
new BigUint64Array(114);
let v21 = 184;
v21--;
Float32Array.a = Float32Array;
SharedArrayBuffer.name = SharedArrayBuffer;
try { new SharedArrayBuffer(-2147483647n); } catch (e) {}
const v27 = new v16(v21);
try { v27.findIndex(1073741824); } catch (e) {}
function f29() {
    -1073741824 >= -1073741824;
    -1031475637 | -1031475637;
    try {
        new Float32Array(-1073741824, 52724);
    } catch(e37) {
        e37.message;
    }
    1073741823 | 1073741823;
    new Int8Array(1073741823);
    return f29;
}
f29();
const v44 = f29();
v44.arguments = v44;
