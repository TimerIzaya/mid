const o5 = {
    get b() {
        delete this[this];
        this[this] = 817905185;
        super[817905185] = "object";
        return 817905185;
    },
};
const v8 = [-204271.23532002536,2.663621870675449e+307,-204271.23532002536,-1000.0];
[-204271.23532002536,[-1000.0,-1000.0,v8,-204271.23532002536],v8];
[8,-38543,-4294967297,24978];
[65536,-58041,89296652,4096,9,7,-268435456,8,4294967295,-57447];
[755054259,-4,16,-1836369131,4,4294967296,2147483647,16];
new Uint16Array(257);
new Uint32Array(Uint32Array);
const o24 = {
    get h() {
    },
};
function F25(a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    const v30 = this.constructor;
    try { new v30(); } catch (e) {}
    o24.h = o24;
    try {
        this << o24;
        [-0.0,0.35331453774891175,0.0,171.67492280642023,0.015915737133018082,-390268.7701156768,-1000000000000.0,-0.0,5.0,-2.220446049250313e-16];
        const v34 = [607.0076449847468,-818.8860494127688];
        v34[0];
        v34[2];
        v34[3];
    } catch(e38) {
    }
}
new Uint32Array(2);
new Int8Array(3710);
3 < 6;
function f47(a48, a49) {
    a49.constructor(a49);
    return f47;
}
Float32Array[1] = Float32Array;
new Float32Array(3);
new Uint32Array(9);
function f57() {
    const v58 = /((((.).).).)rfoo|(bar|baz)|quux*/uims;
    let v59;
    try { v59 = v58(); } catch (e) {}
    class C60 {
        set g(a62) {
            super.d = v59();
        }
    }
    return C60;
}
Float32Array[Symbol.iterator] = f57;
const v66 = new Float32Array(Float32Array, Float32Array);
delete v66[536870888];
class C69 extends WeakMap {
    set g(a71) {
        class C72 {
        }
    }
    536870887;
}
new BigUint64Array(144);
const v77 = new Set();
class C78 {
    b = C78;
}
v77["clear"]();
const v81 = new C78();
function f82(a83, a84, a85, a86) {
    const v87 = [-9.109766292519199,-1.3811947064786667e+308,0.09110445091766706,5.0,-385647.03832885576,0.2888431306471019];
    let v88;
    try { v88 = v87.filter(); } catch (e) {}
    return v88;
}
for (let v89 = 0; v89 < 10; v89++) {
    f82(v89, f82, v89, v89);
}
const v91 = new C78();
function f92(a93, a94, a95, a96) {
    for (let v97 = 0; v97 < 25; v97++) {
        a94["p" + v97] = v97;
    }
    return a96;
}
f92(v81, v91);
gc();
