function F9(a11, a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    const v15 = this?.constructor;
    try { new v15("Rt0n", "bigint", "bigint", a13); } catch (e) {}
    a13 << a13;
    try { a14.italics(); } catch (e) {}
    try {
        this.c = a13;
    } catch(e19) {
    }
    try {
        this.d = 5n;
    } catch(e20) {
    }
}
const v21 = new F9(5n, -28983n, -28983n, "bigint");
v21.d;
const v23 = new F9(1073741824n, 5n, 1073741824n, "g");
v23.d = v23;
new F9(1073741824n, 1073741824n, -28983n, "Rt0n");
function f25(a26, a27, a28, a29) {
    -a28;
    arguments[1];
    const v33 = arguments.toString(a26, f25, f25, a26);
    try { v33.strike(); } catch (e) {}
    function f35() {
        let v36 = -268435456;
        v36--;
        const v39 = -(v36 + v36);
        const o40 = {
            [v33]: v39,
        };
        o40.e = o40;
        return f25;
    }
    try { new f35(); } catch (e) {}
    f35();
    %OptimizeFunctionOnNextCall(f35);
    return f25;
}
for (let v43 = 0; v43 < 5; v43++) {
    const v44 = f25(f25, v43, v43, v43);
    try { v44(5n, 1073741824n, v43, "Rt0n"); } catch (e) {}
}
