function f0() {
}
class C1 extends f0 {
    static e = f0;
    constructor() {
        super();
        const v3 = `-12`;
        v3[this] = this;
        this.a;
        const o9 = {
            "maxByteLength": 2253,
            ...v3,
            "maxByteLength": 2253,
            o(a8) {
                return a8;
            },
        };
        const v11 = new ArrayBuffer(2253, o9);
        new Uint8ClampedArray(v11);
    }
}
const v14 = new C1();
const v15 = new C1();
const v16 = new C1();
function f20() {
    return v16;
}
class C21 extends f20 {
    static [-2.0] = f20;
    set d(a23) {
        const o24 = {
            __proto__: v16,
            6: -2.0,
            [-1]: a23,
        };
    }
    a = v15;
    g = v14;
}
new C21();
new C21();
new C21();
let v29 = Int16Array;
function f30() {
    v29--;
    class C33 {
        static #m(a35) {
        }
        set d(a37) {
            this.#m();
        }
        constructor(a40) {
            function f41() {
                return f41;
            }
            Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f41 });
        }
    }
    const v42 = new C33(-4294967296);
    v42.g = v42;
    const v43 = new C33("string");
    v43.length = -4294967296;
    v43.length;
    let v45 = 0;
    while ((() => {
            const v47 = v45 < 10;
            const v49 = new Uint16Array(Uint16Array);
            function f51() {
                const o57 = {
                    "e": Uint16Array,
                    __proto__: 3.4890473589784586e+307,
                    "g": 12,
                    o(a56) {
                        return v49;
                    },
                    ...1000000000000.0,
                };
                return Int32Array;
            }
            f51();
            f51();
            return v47;
        })()) {
        for (let v60 = 0; v60 < 5; v60++) {
            const t84 = "string";
            t84["p" + v60] = v60;
        }
        v45++;
    }
    const v64 = new C33();
    const v65 = [v64,v64,v64,v64,v64];
    const v66 = [v64];
    class C67 extends C33 {
        [v42];
        #n(a69, a70, a71, a72) {
        }
        #g;
    }
    const v73 = new C67();
    v66.constructor;
    try { v73.m(v65); } catch (e) {}
    return v43;
}
%PrepareFunctionForOptimization(f30);
f30();
%OptimizeFunctionOnNextCall(f30);
f30();
