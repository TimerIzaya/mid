class C3 {
    d = 91170.69452822255;
    valueOf(a5, a6) {
        this[512];
        let v8;
        try { v8 = a6(...91170.69452822255, a5, ...91170.69452822255, 91170.69452822255); } catch (e) {}
        for (let v9 = 0; v9 < 32; v9++) {
            v8["p" + v9] = v9;
        }
        return a5;
    }
    static h;
    static [-1.3930331002488592e+308];
    static #f;
    512;
}
const v12 = C3?.apply;
try { new v12(C3, "iterator"); } catch (e) {}
C3.g = C3;
const v14 = new C3();
const v15 = new C3();
v15[512];
const v17 = new C3();
function f18(a19, a20) {
    for (const v24 of Array(19793)) {
    }
    return -1.3930331002488592e+308;
}
v17.valueOf = f18;
try { v17.valueOf(v17, v17); } catch (e) {}
[["iterator",91170.69452822255,v15,[v17]],"iterator",-1.3930331002488592e+308,"iterator","iterator"];
const v29 = [2.2250738585072014e-308,-1.3879468076715202,2.220446049250313e-16];
try { v29.with(C3, C3); } catch (e) {}
v29[2] = v29;
const v31 = [-2.220446049250313e-16,2.05043641867886,-1.0807071439328775e+307];
try { v31.toReversed(); } catch (e) {}
const v33 = [1000000000.0,-3.0];
try { v33.with(v15, v15); } catch (e) {}
try { ("8").anchor("8"); } catch (e) {}
const v39 = [];
try { v39.filter(v14); } catch (e) {}
-11 + -11;
-11 > -11;
4294967296 >> 4294967296;
[Infinity];
[479.1899563202203,122841.50659786374,0.6626859918996411,-1000000.0,-1000.0,252.15113272138615,-1e-15,1000.0,364253.4319654517,-9.899777269503376e+307];
[-1.0,1e-15,5.0,1000000.0];
const o52 = {
    "maxByteLength": 1468,
};
try { o52.propertyIsEnumerable("shift"); } catch (e) {}
2 << 2;
const v56 = new ArrayBuffer(2, o52);
const v58 = new Int8Array(v56);
function f59() {
    const v60 = new v33();
    const v61 = new v33();
    const v62 = new f18(v33, v61, v60, v61);
    return v62;
}
v58[Symbol.toPrimitive] = f59;
const v65 = [-4096,13,16,6];
v65.valueOf = Symbol;
try { v65.pop(); } catch (e) {}
v65 + v58;
const v68 = [256,-268435456,7,-778010758,7,16,-65536];
try { v68.findLast(91170.69452822255); } catch (e) {}
const v70 = [10,-2,256,-4294967295,6,-34566,804990459,-256,-1831978218];
-65535 >>> -65535;
-65535 >>> -65535;
try {
const t0 = 1073741824;
t0(-65535, v70, 1073741824);
} catch (e) {}
do {
} while (0 < 0)
