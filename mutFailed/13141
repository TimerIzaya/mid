new Uint32Array(127);
new Int16Array(31);
const v8 = new Float32Array(10);
[Infinity,542519.138112888,-2.739089211943466,1000000000000.0,Infinity,0.05807291144083426,-4.0,-Infinity,-4.0];
[1000000000.0,-1000000000000.0,5.0,0.4535775589947675];
[-5.0,1000.0,-1000000000.0,742823.2931633198,-386266.81923604326,5.403657133286785,2.2250738585072014e-308];
function f17(a18) {
    const o19 = {
        "g": a18,
        "f": a18,
        "h": "E",
    };
}
let v20 = f17();
f17();
2 % 2;
3 | 3;
const v27 = new BigUint64Array();
const t18 = 742.9096030097514;
const v29 = new t18();
function F30(a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = this;
    } catch(e34) {
        for (let [v35,v36] of v8) {
            class C37 {
            }
            v20 = e34;
            v35 ^= v27;
            C37 != C37;
            const v39 = new C37();
            const t32 = v39.g;
            t32.length = 1;
        }
    }
    try {
        this.h = "-185650492";
    } catch(e42) {
        F30.toString();
        F30[2555];
    }
    try {
        const v45 = v29[this];
        try {
            new F30(v45, -2046072084n);
        } catch(e48) {
        }
        const o50 = {
        };
        const v52 = new SharedArrayBuffer(1024, o50);
        new a33(v52);
        this.b = Set;
    } catch(e55) {
    }
}
new F30();
new F30();
[65537,268435441,63298,-5,1235122603];
[128,215394418];
