3n != 3n;
3n ^ 4n;
class C9 {
    static #g = 1n;
    #n(a11, a12, a13) {
        try { this.toString(this); } catch (e) {}
        const v16 = Symbol.iterator;
        const o30 = {
            [v16]() {
                let v18 = 10;
                const o29 = {
                    next() {
                        v18--;
                        [4.0,0.01910101421286492,-1000000.0,778256.270456489,9.964230482385698,0.007291885835314815,-2.220446049250313e-16,-1000.0,NaN,-1.7051800095917677];
                        [0.8687190374467587];
                        [4.980743516012334,6.10766398821944e+307];
                        a11?.[2];
                        try { C9(); } catch (e) {}
                        const v27 = v18 == 0;
                        const o28 = {
                            "done": v27,
                            "value": v18,
                        };
                        return o28;
                    },
                };
                return o29;
            },
        };
        return -2n;
    }
}
const v31 = new C9();
const v32 = v31?.constructor;
try { new v32(); } catch (e) {}
const v34 = new v31();
const v35 = v34?.constructor;
try { new v35(); } catch (e) {}
new C9();
let v51 = 536870887;
v51--;
2.4055206643129257 ** -1.5876750346470025e+308;
