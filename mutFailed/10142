class C3 {
    static o(a5, a6) {
        for (let v7 = 0; v7 < 32; v7++) {
            a6["p" + v7] = v7;
        }
        [10,19583,51562,268435440,-9007199254740992,9007199254740990,827560436,4294967295,11,4294967297];
        [5,527722179,9007199254740992,8,1,20188,536870888,3];
        return [-58882,12];
    }
    static 10 = "c";
}
const v13 = new C3();
const v14 = new C3();
const v15 = new C3();
function f16() {
    function f17() {
        try {
            const t17 = "MAX_SAFE_INTEGER";
            t17.__proto__ = "number";
        } catch(e18) {
        }
        return v13;
    }
    return f17;
}
function f19(a20) {
    const v22 = new BigInt64Array();
    let [,v23,v24] = v22;
}
Object.defineProperty(v15, "toString", { get: f16, set: f19 });
function f25(a26, a27) {
    const o35 = {
        __proto__: "c",
        [v15]: "MAX_SAFE_INTEGER",
        ...v13,
        "g": "c",
        65537: v13,
        ...v14,
        n(a29, a30, a31) {
            for (let v32 = 0; v32 < 32; v32++) {
                a31["p" + v32] = v32;
            }
            this[268435441] = a31;
            return C3;
        },
    };
    return o35;
}
const v36 = f25("c", "MAX_SAFE_INTEGER");
f25("number", v15);
f25("c", v15);
class C39 {
    static #e;
    static set f(a41) {
        const v47 = (f25 / 639.1392779091241) ** -22280;
        f25 >> 639.1392779091241;
        -22280 | 64;
        v47 % 64;
    }
}
const v51 = new C39();
new C39();
new C39();
const v56 = [Int16Array,Int16Array,Int16Array,Int16Array];
const v57 = [v56];
class C59 extends Map {
}
const v60 = new C59();
const v61 = new C59(v57);
const v62 = new C59(v61);
const v66 = new Int32Array(129, 129, 129);
const o73 = {
    toString(a68, a69, a70) {
        try { this.toString(); } catch (e) {}
        [v66,v66,v66,v66,v66];
        v57[BigUint64Array] = v36;
    },
};
const v76 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
v76.toString = f16;
function f78(a79) {
    const o82 = {
        "maxByteLength": 777,
    };
    const v84 = new ArrayBuffer(777, o82);
    new Uint16Array(v84);
    return v57;
}
Object.defineProperty(Uint32Array, Symbol.toPrimitive, { writable: true, enumerable: true, value: f78 });
const v89 = new Uint32Array();
v89[Symbol.toPrimitive] = f19;
const v93 = [601759695];
const v94 = [1073741824,1073741823,1376142744,1073741825];
v94.toString = f19;
function f96(a97, a98, a99, a100) {
    try { a97.toLocaleString(); } catch (e) {}
    const v102 = a97?.constructor;
    v102[Symbol.toPrimitive] = f96;
    let v105;
    try { v105 = v102(); } catch (e) {}
    try { v102(); } catch (e) {}
    const v108 = arguments.length;
    Object.defineProperty(v60, "e", { configurable: true, enumerable: true, value: f96 });
    const v110 = v61["entries"](a99, ...v62, BigUint64Array, ..."entries", a98, v108);
    new Float32Array(5, 5, v108);
    class C114 {
    }
    class C115 {
    }
    const v117 = Symbol.toStringTag;
    v61[v117] = v117;
    function f118() {
        let v120;
        try { v120 = ("Vre").charAt(4096); } catch (e) {}
        try { v120.lastIndexOf("Vre", a97); } catch (e) {}
        let v122;
        try { v122 = ("Vre").codePointAt(v76); } catch (e) {}
        v122 - v122;
        const v124 = v122 ^ v122;
        let v125 = Float64Array;
        v125 = a98;
        let v126 = v76.length;
        v126++;
        try {
            v94.forEach(a98);
        } catch(e129) {
            e129.stack = e129;
        }
        const o158 = {
            268435439: v93,
            ..."e",
            n(a131, a132) {
                v89[v124] = v89;
            },
            "maxByteLength": 5,
            m(a134) {
                return a134;
            },
            m(a136) {
                return C115;
            },
            "c": -4294967297n,
            __proto__: arguments,
            [f118]() {
            },
            "maxByteLength": 129,
            ["entries"](a139, a140) {
            },
            "EPSILON": v93,
            valueOf(a142, a143) {
                return Uint32Array;
            },
            1073741824: v89,
            "arguments": v56,
            get h() {
                return v120;
            },
            [v94](a146, a147, a148) {
            },
            "toPrimitive": v105,
            15: v51,
            /*
            __proto__: v120,
            */
            "maxByteLength": v108,
            get f() {
                class C150 {
                }
            },
            [-4294967297n](a152, a153, a154, a155) {
                eval();
            },
            "arguments": 5,
        };
        return Int16Array;
    }
    function f159(a160, a161) {
        class C163 {
            constructor(a165) {
                ("valueOf").localeCompare(a165, "valueOf");
            }
        }
        return C39;
    }
    f118[Symbol.toPrimitive] = f159;
    f118();
    const v171 = Array();
    let v172;
    try { v172 = v171.findLast(f96); } catch (e) {}
    v171.unshift("entries", v110, "entries", v172);
    let v175;
    try { v175 = Int8Array.of(); } catch (e) {}
    try { v175.join(v102); } catch (e) {}
    const v177 = new Int8Array(v93);
    v177.c = v177;
    const v179 = v177.buffer.slice(v102);
    try { Int32Array(v179, arguments, -4294967297n); } catch (e) {}
    function f182(a183, a184, a185, a186) {
        return C114;
    }
    const v187 = new Int32Array();
    const v188 = v187[3];
    v188 + v188;
    for (let v190 = 0; v190 < 5; v190++) {
    }
    try { v94["find"](..."find", a100, ...v93, ...v94, ...522675525n); } catch (e) {}
    return v187;
}
for (let v193 = 0; v193 < 10; v193++) {
    f96(v89);
}
%OptimizeFunctionOnNextCall(f96);
f96();
