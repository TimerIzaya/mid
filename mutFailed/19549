const v0 = [16,-1569320696,-2];
function f1() {
    return f1;
}
for (let v2 = 0; v2 < 25; v2++) {
    const v3 = [601759695];
    const v4 = [1073741824,1073741823,1376142744,1073741825];
    function f5(a6, a7, a8, a9) {
        const v14 = BigUint64Array * 536870887;
        const v16 = ~(v14 ** v14);
        const v17 = new Int8Array(v3);
        try { v17.includes(v16); } catch (e) {}
        let v20;
        try { v20 = v4["find"](..."find", a9, ...v3, ...v4); } catch (e) {}
        Symbol(a8).description;
        const o24 = {
        };
        o24.a = o24;
        v20 <= a8;
        return arguments;
    }
    for (let v26 = 0; v26 < 5; v26++) {
        f5(v26, v26, v26, v2);
    }
}
const v28 = [-36230,-65535,-1653223211,-7,-18344,-1326219814];
const v29 = [11,-6,-174071458,5];
let v31 = 6;
class C33 {
    f = v31;
    static #p(a35, a36, a37) {
        let v34 = this;
        -5;
        try { new SharedArrayBuffer(-2147483647n); } catch (e) {}
        with (v34) {
            f = v0;
            const v44 = new SharedArrayBuffer(v31);
            v44.slice();
            let v46 = 10;
            for (; v46--;) {
                for (let v48 = 0; v48 < 32; v48++) {
                    "p" + v48;
                }
            }
            ({"c":v34,"length":v31,} = v28);
            -v28;
        }
        v28[2];
        return v34;
    }
    constructor(a54, a55) {
    }
}
new C33(v31, 4294967296);
const v60 = new C33(v0, v31);
new C33(v29, v31);
function f65(a66, a67, a68) {
    const o80 = {
        ...a68,
        1073741824: C33,
        get c() {
            return this;
        },
        get a() {
            const o71 = {
            };
            const o73 = {
                "maxByteLength": 3145,
            };
            this % 268435441;
            try { new a68(); } catch (e) {}
            return v29;
        },
        0: a67,
        7: a66,
        "h": v29,
        "f": v0,
        "c": 10,
        [v31](a77, a78) {
            try { a68(a78, this, a68, v0, a67); } catch (e) {}
            return this;
        },
        [C33]: C33,
    };
    return o80;
}
f65(4294967296, v29, v28);
f65(10, v28, v60);
f65(v31, v29, C33);
Math.sin(-4294967295);
