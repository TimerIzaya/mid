const v0 = [-4294967295,-4294967295,-11,1073741824,-9223372036854775807,44572,-5953];
const v1 = [-3,11492,1901,-1488780647,-2147483648,-23778,9007199254740991,-2182];
const v2 = [-6,128,536870887,-7,512,5,64,-1369336406];
class C3 {
    #n(a5) {
        a5 %= a5;
        try {
            super.toString(v0);
        } catch(e7) {
        }
        super.e = v2 ** this;
        return this;
    }
    static toString(a10) {
        delete a10?.length;
        try {
            v1.indexOf(d, -6);
        } catch(e15) {
        }
        return d;
    }
}
new C3();
new v2();
const v18 = new v2();
class C22 extends C3 {
    static #g = v1;
    static #m(a24, a25, a26, a27) {
        with (a25) {
            const v29 = this ^ e;
            try {
                v18.#g *= v29;
            } catch(e30) {
            }
        }
        return this;
    }
    5;
    #f = -1068270859n;
    static [-2] = v1;
}
new C22();
new C22();
new C22();
new Float64Array(1000);
new BigUint64Array(4057);
new Uint8ClampedArray(128);
new Uint16Array(2);
new Uint32Array(Uint32Array);
