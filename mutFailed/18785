let v3 = -23904n;
v3++;
50682 === 50682;
function f9() {
    Math.sinh(0);
    const o14 = {
        ..."raw",
    };
    function f15() {
        return f15;
    }
    function f17() {
        Object.defineProperty(f9, 13, { enumerable: true, set: f15 });
        return o14;
    }
    f17();
}
const v23 = [f9,5.0];
new f9();
v23.length;
const v27 = Symbol.iterator;
const o36 = {
    [v27]() {
        let v29 = 10;
        const o35 = {
            next() {
                v29--;
                const v33 = v29 == 0;
                const o34 = {
                    "done": v33,
                    "value": v29,
                };
                return o34;
            },
        };
        return o35;
    },
};
[-1000000.0,-9.82871036065143,f9,v23,-9.82871036065143];
const v38 = [v23,v23,-9.82871036065143,5.0];
function f39() {
    const v43 = new Float64Array(1);
    v43["indexOf"](4, 4);
    return 4;
}
v38.then = f39;
const o47 = {
};
let v48 = 10;
for (; v48--;) {
    o47.e **= -13;
}
async function f50(a51, a52, a53, a54) {
    return await v38;
}
f50();
new Int16Array(5);
const v61 = new Int32Array(9);
v61.toString = f50;
const v62 = v61.toString();
try { v62(); } catch (e) {}
v62.length;
Array(1102693041);
new BigUint64Array(2879);
function f71() {
}
Math.tanh("1");
const v76 = new BigInt64Array();
for (const v77 in v76) {
    class C78 {
    }
    class C79 {
        set e(a81) {
            class C84 {
            }
            class C85 {
                static #a = C84;
                static {
                }
            }
        }
    }
}
const o88 = {
    "maxByteLength": 1814769353,
};
("boolean").split(5.0);
-1000000000.0 - -1000000000.0;
try { ("bigint").padStart(50682); } catch (e) {}
try { ("mOsDR").strike(); } catch (e) {}
function F103(a105, a106, a107) {
    if (!new.target) { throw 'must be called with new'; }
    function f108(a109, a110) {
        for (let v111 = 0; v111 < 5; v111++) {
            function f112() {
                45725n === 45725n;
                return f112;
            }
            f112();
            %OptimizeFunctionOnNextCall(f112);
        }
        return a107;
    }
    Object.defineProperty(a107, Symbol.toPrimitive, { enumerable: true, value: f108 });
    a105.arguments = a105;
    a107.length = a107;
    Int8Array.prototype = Int8Array;
    const v119 = new Int8Array();
    const v120 = v119.buffer;
    function f121() {
        try { a106(F103, v119, 4294967295n); } catch (e) {}
        [-4.969206946028383e+307,699234.8479815626,-0.298065713267162,-1.6496356115868017e+308];
        [-0.0,-609.3456668933759,-4.904995898895084,-2.2250738585072014e-308,-5.771415420060811e+307,9.68462900237978,-721.9763650767994];
        [-284059.7141808177,0.4761579003397395,1e-15];
        return -1000000000.0;
    }
    v120.constructor = f121;
    const v127 = v120.slice(a106, a106).transferToFixedLength();
    try { v127.transferToFixedLength(); } catch (e) {}
}
F103[Symbol.toPrimitive] = Array;
function f131(a132) {
    a132?.g;
    async function* f135(a136, a137) {
        yield* [a137];
        return -16257;
    }
    return 22429;
}
F103.valueOf = f131;
new F103(F103, F103, F103);
