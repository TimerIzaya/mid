function f6(a7, a8) {
    const o13 = {
        "c": "885886143",
        get a() {
            let v9 = this;
            v9 &= v9;
            return 41878;
        },
        ..."885886143",
        ..."885886143",
        ..."HEXPe",
        1680: "toString",
        "a": -65536,
        "h": -17714,
    };
    return o13;
}
f6(-17714, 1569361252);
f6(1569361252, -17714);
const v16 = f6(1569361252, -65536);
function f17(a18, a19, a20) {
    const o46 = {
        __proto__: a20,
        "h": a20,
        [a18]: f6,
        "b": "885886143",
        "f": -65536,
        n(a22, a23, a24) {
            const v26 = ("toString")[3] + a24;
            const o28 = {
            };
            try {
                o28.e = a20;
            } catch(e29) {
            }
            try {
                const o30 = {
                };
                o30.e = a20;
                o30.a = a20;
            } catch(e31) {
            }
            try {
                const o32 = {
                };
                o32.e = a20;
                o32.a = a19;
                o32.h = v26;
                function F33() {
                    if (!new.target) { throw 'must be called with new'; }
                    try {
                        this.b = -1052649622;
                        const v38 = -(-7);
                        Math.tan(v38 ** v38);
                    } catch(e41) {
                    }
                }
                new F33();
            } catch(e43) {
            }
            try {
                const o44 = {
                    "e": "toString",
                    __proto__: "toString",
                    "b": 1569361252,
                    "a": -65536,
                    ..."toString",
                };
                o44.e = a20;
                o44.a = a19;
                o44.b = a23;
            } catch(e45) {
            }
            return v16;
        },
    };
    return o46;
}
f17(-65536, "HEXPe", "885886143");
f17(-17714, "toString", "toString");
const v51 = Symbol.isConcatSpreadable;
const t81 = Array();
t81[267] = v51;
f17(1569361252, "toString", "885886143");
function F54() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 3;
    } catch(e57) {
    }
}
const v59 = new BigInt64Array();
var c = v59;
const o61 = {
};
gc();
class C63 extends F54 {
    static set d(a65) {
    }
}
/V/gdiy;
/a\b!/vmy;
/a{0,1}?/uisy;
new Int8Array(127);
const v73 = [-1.5424212036356715e+308];
Object.defineProperty(v73, 536870887, { configurable: true, value: v73 });
v73[536870887n] = v73;
const v80 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v83 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v84 = [601759695];
const v85 = [1073741824,1073741823,1376142744,1073741825];
const v87 = URIError();
v87[Symbol.toPrimitive] = Array;
const v90 = [1073741824,1073741823,1376142744,1073741825];
let v92;
try { v92 = v90["find"](); } catch (e) {}
v92 <= v87;
function f95() {
    const v98 = v80.length;
    try {
        v85.forEach(1569361252);
    } catch(e100) {
    }
    const v101 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
    const v103 = Symbol.toPrimitive;
    const o109 = {
        toString(a105, a106) {
            const v107 = v16 && 1569361252;
            a105 *= v103;
            return v107 <= v101;
        },
    };
    const o130 = {
        "c": -4294967297n,
        [522675525n](a112, a113) {
        },
        "c": v84,
        valueOf(a115, a116) {
            return "Vre";
        },
        [v98](a118) {
        },
        [-1]: 2684,
        "maxByteLength": -268435456,
        "b": -4294967295,
        [-4294967297n](a120, a121, a122, a123) {
            eval();
        },
        "e": -4294967295,
        "arguments": v83,
        set b(a127) {
        },
        256: v16,
        m(a129) {
            return a129;
        },
        ...v84,
        "type": "Vre",
        ..."Vre",
        4: "Vre",
        "c": -268435456,
    };
    return 6;
}
new Uint8Array(6);
function f132() {
}
