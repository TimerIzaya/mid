const v0 = [];
function f1() {
    const o15 = {
        ...v0,
        __proto__: v0,
        valueOf() {
            let v5 = new Array(15);
            for (let i7 = 0; i7 < 10; i7++) {
                v5 = this;
                continue;
                super[15] = f1;
            }
            const v14 = new WeakMap();
            return v14;
        },
        "h": v0,
        [v0]: v0,
    };
    return o15;
}
const v16 = f1();
f1();
const v18 = f1();
const v19 = [4294967297,-36743,-2147483648,-256,1777836255,-13,1073741824,64,1947646334];
v19[2] = v19;
const v20 = [-65535,4294967297,-1070698525,10000,9007199254740991];
v20[2] = v20;
const v21 = [5,-16931,-9007199254740991,2147483649,-1073741824];
const v22 = [v21,v16,v18,v16];
try { v22.findLastIndex(v21); } catch (e) {}
v16.h;
const o27 = {
    "maxByteLength": 16,
};
const v29 = new SharedArrayBuffer(16, o27);
new Int16Array(v29);
const v32 = [v18,f1];
[v19,v32,v32,v0,v32];
1000000000000.0 >> 1000000000000.0;
109.712540645854 === 109.712540645854;
109.712540645854 >>> 109.712540645854;
function f40() {
}
class C41 extends f40 {
}
C41.name;
const v43 = new C41();
const v44 = v43?.constructor;
v44.arguments;
try { new v44(); } catch (e) {}
const v47 = [0.0,1000000.0];
v47[1] = v47;
function f48() {
    const v51 = Array(4087);
    try { v51.entries(); } catch (e) {}
    v51[351] = v43;
    for (const v53 of v51) {
    }
    return Array;
}
f48.length = f48;
const v54 = f48();
try { v54.isArray(v43); } catch (e) {}
let [] = v22;
const o58 = {
    "maxByteLength": 3915693630,
};
const v60 = new ArrayBuffer(1, o58);
new Int32Array(v60);
f48();
