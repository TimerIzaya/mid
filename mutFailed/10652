class C3 {
    static set e(a5) {
        const v6 = super[-4294967297];
        v6[-3.0] = v6;
        const v7 = ~-3.0;
        try { a5(-3.0, v7, v7, a5); } catch (e) {}
    }
    constructor(a10, a11) {
        let {"d":v12,} = this;
        [1000000.0,1000000.0];
        let v15 = Map;
        const v16 = new v15();
        class C17 {
            set d(a19) {
                a19[this] = v15 >>>= a19;
            }
            #m(a21, a22) {
                let v23 = "jER";
                const v24 = [17452,4294967295,64,-8];
                [v23] = v24;
                try { new v23(...v24, -1.6798118066934893e+307); } catch (e) {}
                a22 ^ a21;
                v15 * this;
                new BigInt64Array(1433);
                const v34 = new Uint8Array(255);
                new Float32Array(299);
                return v34;
            }
        }
        const v38 = new C17();
        const v39 = new C17();
        function F40(a42, a43) {
            if (!new.target) { throw 'must be called with new'; }
            const v44 = this?.constructor;
            try { new v44(a42, v39); } catch (e) {}
            try {
                this.c = v16;
            } catch(e46) {
            }
        }
        const v47 = new F40(v39, v38);
        v47.c;
        [0.015122382999735784,2.0,0.7634117650139216,1.9071133150472281,1.0];
        const v54 = new SharedArrayBuffer(217);
        v54.slice(5);
        [480424.21800393704,1.7976931348623157e+308,0.8638209143657977,882489.7638793557,-1000000.0,955.5435994455038];
        [0.0,-362414.5968903587,-329998.6857340537];
    }
}
const v58 = new C3(-3.0, -1);
new C3(v58, -1);
new C3(C3, v58);
function f61() {
    function f62(a63, a64, a65, a66) {
        class C68 extends Date {
        }
        const v69 = new C68();
        v69.getDay();
        return f62;
    }
    return -3.0;
}
const v71 = /(?:a*)+q(?<a>.)/guds;
function f72(a73) {
    a73.dotAll = a73;
    ([-3,47741,-16128,9007199254740992,-1024,-58567,268435439,-4294967296,1807295090,-9223372036854775808]).flat(a73);
    const v77 = new Uint8ClampedArray(v71, a73);
    -53409 % v77;
    const o81 = {
        get d() {
            return a73;
        },
    };
    return v71;
}
for (let i84 = 0, i85 = 10; i84 < i85; i85--) {
    for (let v92 = 0; v92 < 50; v92++) {
        f72(v71);
    }
}
/d(?<=a)/uisy;
/u(ab)\1G/gvis;
/[(ab)?]/gvdis;
function f97() {
    const v99 = ("-536870912").g;
    const v101 = new Uint16Array();
    v101[145] = v99;
    return v99;
}
const v103 = [-1000.0,351.94489669740733,5.8623101046484845,-160881.40611645568,0.6390643538224362,9.13027568774574];
function f104(a105, a106) {
    %PrepareFunctionForOptimization(f97);
    const v107 = f97();
    %OptimizeFunctionOnNextCall(f97);
    return v107;
}
v103[Symbol.toPrimitive] = f104;
%OptimizeFunctionOnNextCall(f61);
const v110 = [0.6962759092984843];
let v111 = [4.55590263310031,1e-15,2.220446049250313e-16,4.0,3.0];
class C112 {
    constructor(a114, a115, a116, a117) {
        v111 = a115;
    }
}
const v118 = new C112(v110, C112, C112, v110);
class C119 {
    constructor(a121, a122) {
        v111.unshift(v118, a122, [this,this]);
    }
}
new C119();
function f126(a127, a128) {
    return a128;
}
const v130 = new Promise(f126);
v130[v103] += 36002;
