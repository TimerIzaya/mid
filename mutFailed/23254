class C3 {
    static #p(a5) {
        typeof 268435456 === "bigint";
        return 268435456;
    }
    static m(a10, a11) {
        const o12 = {
            "a": this,
            "e": 268435456,
            ...a11,
        };
        try {
        const t0 = -256;
        t0(this, o12);
        } catch (e) {}
        return a10;
    }
}
C3.d = C3;
let v14 = new C3();
const v15 = new C3();
const v16 = new C3();
const v17 = v16?.constructor;
try { new v17(); } catch (e) {}
const v23 = v15[128];
const o27 = {
    "execution": "sync",
    "type": "minor",
};
const v28 = v23.execution;
const v29 = gc(o27);
const v30 = new Map();
const v31 = [-256,Map,v30];
try { v31.splice(268435456, v31); } catch (e) {}
const v33 = [v15,v31,-256,1845112345,-256,v29,v23,1845112345];
let v34 = [1845112345,v14];
const v35 = [];
function f36() {
    const o38 = {
        p() {
            return f36;
        },
        [v35]: v35,
        "a": v35,
    };
    return v35;
}
let v39;
try { v39 = f36.call(gc); } catch (e) {}
("minor")[1];
v29 >> v16;
const v43 = f36 <= Map.c;
const v45 = Math?.acos;
try { new v45(v33); } catch (e) {}
-61332 << -61332;
const v50 = -61332 + v14;
+-61332;
v34--;
v14--;
const v54 = Math.sign(v39);
v54 - v54;
v50 >>> +v23;
const v58 = f36();
const v59 = gc();
const v60 = f36(C3, v50);
[65536];
[-2147483647,4294967296];
const v63 = [14,268435441,-9223372036854775807];
v39[1] = v63;
new Float64Array(14);
Uint8ClampedArray.d = Uint8ClampedArray;
const v69 = new Uint8ClampedArray(0, o27);
try { v69.subarray(v43, v69); } catch (e) {}
218 - 218;
const v74 = new v28(218);
let v75;
try { v75 = v74.sort(f36); } catch (e) {}
let v76;
try { v76 = v75(v59, v75, v75, ...v69, v58, ...v58); } catch (e) {}
const v77 = (a78, a79) => {
    v60 * a79;
    return 218;
};
v77.length = v77;
try { new Float32Array(0, v35, v76); } catch (e) {}
"function" == "function";
const v89 = this?.Int32Array;
try { new v89("trimRight", Float64Array, v34, v63); } catch (e) {}
