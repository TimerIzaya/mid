/l*/y;
new Map();
class C3 {
}
const v4 = new C3();
const v5 = new C3();
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    const v10 = this?.constructor;
    try { new v10(a8, v5); } catch (e) {}
}
new F6(v5, v4);
new F6(v4, v4);
function f14() {
}
const v15 = /[\ca]nxyz{1,32}+/vdms;
const v16 = /9o(?=)/gudi;
const v20 = [65536,-2147483649,23027];
[1024];
[2147483648,-22260,62976,8642,-2147483648,2147483647,-2147483647,10704,127,-1];
function f23(a24, a25, a26, a27) {
    const o35 = {
        "g": a24,
        valueOf(a29, a30, a31) {
            v20[2253667095];
            a27 >>= a25;
            try { this["p"]("p", this); } catch (e) {}
            return v16;
        },
        3184910195: v15,
        10000: 1825385118,
    };
    return o35;
}
f23(-18265, 1825385118, 1825385118, -18265);
f23(-429797243, -18265, -429797243, -429797243);
f23(1825385118, -429797243, 1825385118, -18265);
let v43 = 0;
for (let i = 0; i < 5; i++) {
    v43 < 4;
    v43++;
}
function F48() {
    if (!new.target) { throw 'must be called with new'; }
    const o51 = {
    };
    o51.e = 19793;
    const o52 = {
    };
    o52.e = 19793;
    o52.h = Int8Array;
    const o53 = {
    };
    o53.h = 58;
    const v55 = Array(19793);
    for (const v56 of v55) {
    }
    const v57 = [v55,v55,v55,v55];
    new BigUint64Array();
    [];
    [[v57,v57,v57]] >= Uint16Array;
}
new F48();
