[5,-40151,9,2,-22392];
const v1 = [-34624,19019,-38800,9223372036854775807,-30927,-587079316,-9007199254740991,-9223372036854775807];
const v2 = [-242430367,966500436,-555551526,9007199254740991,6,-2,128,21972,65536,-65535];
const v4 = 6 - 6;
v4 % v4;
let v6 = 15;
v6--;
const v11 = new Int16Array(2102);
const v12 = v11[391];
const v13 = v12 - v12;
const v16 = new Uint16Array(4);
try { v16.findLastIndex(Uint16Array); } catch (e) {}
0 * 0;
Int32Array.prototype;
const v22 = new Int32Array(0);
try { v22.toSorted(v12); } catch (e) {}
const v24 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
try { v24.groupToMap(Uint16Array); } catch (e) {}
for (let v26 = 0; v26 < 5; v26++) {
    let v27 = [v26,v26,0];
    const v28 = [v27,v1];
    v28[1] = v28;
    [v28,0,v28,Int32Array,v28];
    v27 &&= v28;
    v2.length;
    function f31() {
        let v32 = v24.length;
        const v33 = v32--;
        v33 + v33;
        -v32;
        const o36 = {
            5: v13,
        };
        o36[5] = o36;
        return v24;
    }
    const t36 = f31.arguments;
    t36();
    %OptimizeFunctionOnNextCall(f31);
}
