const v2 = new Uint32Array(11);
new Int8Array(51);
new BigInt64Array(255);
/[(?:ab){4,7}]/gudms;
/aU/vdmy;
/(?:a?)+/udm;
const v13 = [357471.45846563345,0.21582392568769793,3.0,-1.1348218702588052e+308,0.18478957976241217,-2.2250738585072014e-308,349.8983619725575,2.0871072083459357e+307,0.5997765877443066,-1.0];
[1000000000.0,5.0,-1.5907402499732012e+308,3.0,NaN];
const v15 = [-2.0];
function f16() {
    return v13;
}
const v17 = [601759695];
const v18 = [1073741824,1073741823,1376142744,1073741825];
function f19(a20, a21, a22, a23) {
    function f25() {
        return a20;
    }
    v15();
    const v28 = new Int8Array();
    v28.buffer;
    const v30 = f19.slice();
    %OptimizeFunctionOnNextCall(f25);
    let v32;
    try { v32 = v18["find"](..."find", "find", ...v17); } catch (e) {}
    v32 <= a22;
    return v30;
}
for (let v34 = 0; v34 < 10; v34++) {
    f19();
}
%OptimizeFunctionOnNextCall(v2);
f19();
