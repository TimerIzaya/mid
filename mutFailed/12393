const o3 = {
    "e": -880.8175372147999,
    [65536]: 1000,
};
let v4 = "1701991303";
class C5 {
    static #h = 65536;
    static #d;
    static m(a7, a8) {
        let v9 = undefined;
        v9++;
        const v11 = [];
        const o14 = {
            set b(a13) {
            },
            "arguments": v11,
        };
        [v4] = v4;
        /[\u0034a\Sc]/gdy;
        /U7(?<a>.)\k<a>/u;
        return /\P{sc=Greek}/vdmy;
    }
    #e = v4;
    constructor(a19, a20) {
        const v21 = /a\S/gvimy;
        v21.constructor.$4;
        function F24() {
            if (!new.target) { throw 'must be called with new'; }
            function f26(a27) {
                new F24();
            }
            Object.defineProperty(this, "a", { set: f26 });
            1191742690 > 1191742690;
            try {
                this.a = 1191742690;
            } catch(e31) {
            }
        }
        new F24();
        a20[2] = a19;
        try {
            for (let v33 = 0; v33 < 5; v33++) {
                function f34() {
                    const v36 = new Uint8ClampedArray();
                    v36[2327] = v36;
                    return Uint8ClampedArray;
                }
                f34();
                %OptimizeFunctionOnNextCall(f34);
            }
            a19.#e = this;
        } catch(e38) {
        }
        const o39 = {
        };
        function F40(a42, a43) {
            if (!new.target) { throw 'must be called with new'; }
            const v44 = this?.constructor;
            try { new v44(this, a43); } catch (e) {}
            this.c = a42;
        }
        try {
            v4.#h;
        } catch(e47) {
        }
        const v49 = [-2,-4294967296,4294967297];
        function F50(a52, a53, a54, a55) {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v56 = new F50(9, v21, 9, v49);
        const v57 = new F50(65536, v56, v49, v49);
        let v58 = undefined;
        v58 = v57;
    }
}
const v59 = new C5(C5, v4);
const v60 = new C5(65536, v59);
new C5(65536, C5);
const v65 = [108209328,-9007199254740991,65535];
const v66 = [4294967296,-9007199254740990,-7,1073741824,-4294967295,-1474049696];
[-4294967295,255,-226044956,2147483647];
const v68 = [v59,v59,v60];
[v4,268435439n,v65,v68,[v4,v66,v68,v68,v59]];
function F73(a75, a76, a77, a78) {
    if (!new.target) { throw 'must be called with new'; }
    const v79 = this.constructor;
    try { new v79(a75); } catch (e) {}
    this.c = a75;
}
new F73(-2.0);
new F73(-1.093925554716035e+308);
