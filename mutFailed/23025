let v5 = -200343.80726328772;
class C6 {
    2;
    #h = -412274018n;
    #d;
    1;
    constructor(a8, a9, a10) {
        let v13 = 0.6606239358402801;
        const v14 = ++v13;
        let v15 = v14 % -412274018n;
        Math.hypot(-1);
        ++v15;
        v13 << v14;
    }
    #o(a20, a21) {
        const o22 = {
        };
        new Proxy(this, o22);
        let v25;
        try { v25 = o22(); } catch (e) {}
        v25.c |= v25;
        return -412274018n;
    }
    6;
    static #b;
}
const v26 = new C6();
const v27 = new C6();
const v28 = new C6();
class C31 {
    d = v28;
    [-24653n];
}
new C31();
const v33 = new C31();
const v34 = new C31();
new Uint32Array(128);
const v38 = new Uint8Array(7);
const v40 = C31 << C6;
[v26,v27,Uint8Array,-412274018n,[[v34,v33,v38],v40,904265.3910810372,-4.0]];
const v47 = v38 | v38;
v47 >>> v47;
v47 ** v47;
!1000000000000.0;
v5--;
new Int32Array(1098);
function F54(a56, a57) {
    if (!new.target) { throw 'must be called with new'; }
    this.hasOwnProperty(F54);
    const v59 = this.constructor;
    try { new v59(); } catch (e) {}
}
const v61 = new F54();
const t53 = v61.constructor;
new t53();
