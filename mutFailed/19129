const v0 = [1000000000000.0,6.131314498700004,2.0,7.750044172688892,-4.0];
[0.420878951970144,95124.24640960013,547463.0639335942,-2.220446049250313e-16];
[-4.0,5.668905012856772,3.0];
const v5 = new Float64Array(16);
let v8 = new Int8Array(1299);
Int8Array instanceof BigInt64Array;
const v12 = 16 ** v8;
v8 **= v8;
const v14 = [47,Reflect,1299];
Reflect.construct(Float64Array, v14, BigInt64Array);
const v16 = new BigInt64Array(47);
class C17 {
    static #e;
    m(a19, a20) {
        %VerifyType(this);
        if (C17) {
            let v21 = 10;
            for (; v21--;) {
                super[e] = v21;
            }
            v0[v16] |= 47;
        } else {
            try {
                super.transfer(16, v14, this);
            } catch(e28) {
            }
        }
        return Int8Array;
    }
}
new C17();
new C17();
new C17();
let v37 = 0.0;
function f38(a39) {
    return a39;
}
f38.caller = f38;
let v40 = "atan2";
try { v40.match(f38); } catch (e) {}
v40++;
Float64Array[2] = v40;
let v44 = -1000000.0;
class C45 {
    static g = 2.2250738585072014e-308;
    #c = v37;
    #e;
    static set a(a47) {
        v37 ^= 2.2250738585072014e-308;
        ({"b":v37,"c":a47,"g":v44,} = a47);
    }
    get f() {
        const v49 = v44 % v37;
        const v51 = Symbol.replace;
        2.2250738585072014e-308 || 2.2250738585072014e-308;
        try {
            v51.#e;
        } catch(e54) {
            return [923.3408061449261,-6.350919708227568e+307,-2.220446049250313e-16,0.04850379751250988,4.009495502233909];
            ([134133844,-339370636,65535,-4294967295,536870888,-324130953,536870912,268435439]).length;
        }
        return v49;
    }
}
let v58;
try { v58 = new C45(); } catch (e) {}
const v59 = new C45();
new C45();
const v61 = new C45();
const v62 = [v61,v61,v59];
const v63 = [v61,v62];
const v64 = [2.2250738585072014e-308];
function F65(a67, a68, a69) {
    if (!new.target) { throw 'must be called with new'; }
    a68.prototype;
    try { a69.groupToMap(f38); } catch (e) {}
    this.a = a67;
    let v73 = 536870912;
    v73 = 210;
    function F74(a76, a77, a78) {
        if (!new.target) { throw 'must be called with new'; }
    }
    try {
        this.f = a69;
    } catch(e79) {
    }
}
const v80 = new F65(2.2250738585072014e-308, F65, v63);
v5.a = v80;
const v81 = new F65(v62, v80, v64);
v81?.__lookupGetter__;
const v83 = new F65(v81, v81, v62);
class C85 extends Date {
    constructor(a87, a88, a89, a90) {
        super(a87);
    }
}
const v91 = [134133844,-339370636,65535,-4294967295,536870888,-324130953,536870912,268435439];
function f92(a93, a94, a95, a96) {
    function f97() {
        const v98 = v91.length;
        const v100 = v83.__lookupSetter__.length;
        class C103 extends Uint8Array {
            constructor(a105, a106) {
                v81.__proto__?.[a106];
                new Int16Array(2);
                new Uint16Array(192);
                new Float64Array(588);
                ([636.0619904743435,-1.0,1.02880264701966e+308,-656.9941137140671,-29.012861243904695,1000000000000.0])["flat"]();
                function F123(a125, a126, a127) {
                    if (!new.target) { throw 'must be called with new'; }
                    const v128 = this.constructor;
                    try { new v128(); } catch (e) {}
                    this.h = -6.336273045214518e+306;
                    this.g = -1.7976931348623157e+308;
                }
                const v131 = new Uint16Array();
                function f133() {
                    let v136 = 257828.6336153492;
                    v136--;
                    class C139 {
                        static #m(a141) {
                        }
                    }
                    const v142 = new C139();
                    [-13,8,-1073741824,-9007199254740990,536870889,47670,-36072,9,268435441,1];
                    new C139();
                    const v145 = new C139();
                    const v146 = [v145];
                    new BigUint64Array(2141);
                    v146.map(v131);
                    const v150 = [];
                    for (let i152 = 0; i152 < 2; i152++) {
                        new F123(undefined, v142, undefined);
                    }
                    class C160 extends C139 {
                    }
                    C160.prototype = C160;
                    const v161 = v150.constructor;
                    !v161.isArray();
                    class C164 extends v161 {
                    }
                }
                a105[1] = Float64Array;
                super(a105);
            }
        }
        function f167(a168) {
            const o171 = {
                "g": 1000000000.0,
                set a(a170) {
                    a170.h = this;
                },
                "h": a168,
                "d": 1000000000.0,
                "f": v100,
                __proto__: C103,
                "e": a168,
                "a": a94,
                "b": a93,
                "b": -1.1013479045636231e+308,
                2: a168,
            };
            return o171;
        }
        f167();
        const v173 = v98 >>> v98;
        const v174 = v173 % v173;
        v174 - v174;
        a94[v174 & v174] += v58;
        const o177 = {
            "apply": Date,
            "construct": f38,
            "defineProperty": f167,
            "deleteProperty": f92,
            "get": Date,
            "getOwnPropertyDescriptor": f167,
            "getPrototypeOf": f38,
            "ownKeys": Date,
            "setPrototypeOf": f97,
        };
        new Proxy(C103, o177);
        return Float64Array;
    }
    try { f97(); } catch (e) {}
    new Int32Array(2528);
    new Int8Array([v62]);
    f97();
    %OptimizeFunctionOnNextCall(f97);
    return f97;
}
const v191 = f92(v91, f92(v91, f92, f92, v91), f92, f92);
f92(f92, v191, v191, f92);
new Uint8Array(512);
const v197 = new BigInt64Array(8);
const v200 = new Uint16Array(255);
const v201 = v200?.constructor;
try { v201(v197, v200, 255); } catch (e) {}
const v204 = 512 % 512;
const v206 = new v12(512);
const v207 = [BigInt64Array,BigInt64Array];
const v208 = [v200,Uint16Array,512,Int32Array];
const v209 = /((((.).).).)rfoo|(bar|baz)|quux*/uims;
const v210 = v204.constructor();
switch (v209) {
    case v208:
        v209[v207];
        v206.valueOf = v210;
        break;
}
function f214() {
}
function f215() {
    const o219 = {
        "b": f214,
        valueOf() {
            try { this.b(); } catch (e) {}
            [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
        },
    };
    try { o219.b(); } catch (e) {}
    return o219;
}
const v221 = f215();
const t224 = v221?.b;
new t224();
new Uint8Array(268435440);
const v228 = ("function").length;
const v229 = f215();
function F230(a232, a233) {
    if (!new.target) { throw 'must be called with new'; }
    try { a233.b(); } catch (e) {}
    try { a232.valueOf(); } catch (e) {}
    const v236 = this?.constructor;
    try { new v236(a232, a232); } catch (e) {}
    new Uint16Array(v228);
}
const v240 = new F230(v229);
new F230(v221, v240);
