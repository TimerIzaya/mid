class C3 {
    toString(a5, a6) {
        a5.__proto__;
        function f8() {
            return a6;
        }
        return "HLjtc";
    }
    constructor(a10) {
        Reflect.construct("g", [Reflect,"HLjtc",a10,"HLjtc"], a10);
        function F15(a17, a18, a19) {
            if (!new.target) { throw 'must be called with new'; }
            a17 >>> a17;
            const v21 = this.constructor;
            v21.name;
            try { new v21(a17, -1000000000000.0); } catch (e) {}
            a18 % a18;
            this.a = a17;
        }
        class C25 extends F15 {
        }
        new C25();
        try {
            Reflect.__proto__ = a10;
        } catch(e27) {
        }
    }
}
new C3("HLjtc");
for (let i31 = 0, i32 = 10; i31 < i32; i31++) {
}
new C3("LQbU6");
new C3("g");
function f43() {
    return f43;
}
(2136873598).constructor;
!2136873598;
const o49 = {
};
gc(o49);
new Set();
new Int32Array(9);
new Uint16Array(4081);
class C60 {
    static [376363416];
    static {
        super.b = this;
        let {...v62} = this;
    }
}
12 << 9007199254740991;
-1.3832922122240728e+307 >> -1.3832922122240728e+307;
new Int8Array(3740);
const v73 = new BigInt64Array();
function f74(a75, a76) {
    const o77 = {
        __proto__: a76,
    };
    return a75;
}
function f78() {
    const v80 = v73[undefined] instanceof f78;
    const o81 = {
    };
    o81.h = v80;
    return BigInt64Array;
}
%PrepareFunctionForOptimization(f78);
f78();
%OptimizeFunctionOnNextCall(f78);
f78();
