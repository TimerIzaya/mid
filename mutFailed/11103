function f0() {
    const o13 = {
        "g": -2.220446049250313e-16,
        __proto__: "3",
        set f(a5) {
            +this;
            +-626404.0844604603;
            Math.log10(-626404.0844604603);
        },
        "h": "3",
    };
    o13.p22 = o13;
    return o13;
}
function f14() {
    return f0;
}
const v16 = Symbol.toPrimitive;
Object.defineProperty(f0, v16, { configurable: true, enumerable: true, get: f14 });
const v17 = f0();
v17.toString = f14;
const v18 = f0();
const v19 = f0();
function f20(a21) {
    const v22 = [-2.0,-1.0,-5.0,-5.429610213896366,-2.2074967697332255,76807.25242455839,1.7976931348623157e+308];
    function F23(a25, a26) {
        if (!new.target) { throw 'must be called with new'; }
        const v27 = this.constructor;
        let v28;
        try { v28 = new v27(v22, v22, a26, v22); } catch (e) {}
        v22.fill(v28, v27);
        const o30 = {
        };
        const v31 = [F23,F23,F23];
        function f32() {
            return v22;
        }
        const o34 = {
            ...o30,
        };
        Reflect.apply(f32, v31, o34);
    }
    return v16;
}
v19[Symbol.toPrimitive] = f20;
class C38 {
    #o(a40) {
        super[v17] = v18;
        return this;
    }
    static a;
    static #g = v18;
    constructor(a43) {
        function f44() {
            return a43;
        }
        v18 > f44;
        try {
            this.__proto__ = v17;
        } catch(e46) {
        }
        v18[536870887] = a43;
        new f0();
    }
    109;
    static valueOf(a49, a50) {
        function f51(a52) {
            class C53 {
            }
            return a50;
        }
        this.toString = f51;
        try {
            this.#g = a50;
            const v54 = (a55, a56, a57) => {
                [-9,5,3];
                [-1,10000,11381];
                [1073741823,255,-76539158,-15269,65536,1,2147483648];
                return this;
            };
        } catch(e61) {
        }
        for (let v62 = 0; v62 < 32; v62++) {
            v18["p" + v62] = v62;
        }
        return f0;
    }
}
const v65 = new C38();
v65.valueOf = f14;
const v66 = new C38();
try {
    v19.f = v18;
} catch(e67) {
}
v65 - C38;
const v72 = v65[C38];
new Map();
function F75(a77, a78, a79, a80) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a77;
    try {
        this.c = f0;
    } catch(e81) {
    }
}
new F75(v72, v18, v19, v66);
new F75(v18, v17, v66, v19);
new F75(v72, v19, v65, v17);
const v85 = new C38();
class C86 {
    [v85] = v19;
    static f;
    set g(a88) {
        super.c = v65;
        try { new a88(); } catch (e) {}
        v65 in v18;
    }
    8 = v19;
    [f0];
    #d = v85;
    static 5;
    b = v65;
}
new C86();
new C86();
new C86();
new Float32Array([798019179,-9007199254740992,-8195,-4294967297,1420574578,9007199254740991,-1493424054,-2147483649,8,47842]);
