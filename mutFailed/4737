function f0() {
}
[-1.3431541120622482e+307,1.0,1000.0,-8.035671493958436,-912969.4836825996,6.583472052090357e+307,897.6022482886635,-9.718220919867564];
const v2 = [-995542.062095298,1.2403602628418316e+308,0.6440348854435928];
const v3 = [2.0,NaN,0.04469603758969254,-708909.7585678408];
try { v3.reduce(f0); } catch (e) {}
const v6 = -3827;
f0 - v6;
BigInt64Array.length = BigInt64Array;
new v2(3827);
13 - 13;
Uint8Array.e = 13;
Uint8Array.e = Uint8Array;
const v13 = new Uint8Array(13);
try { Int16Array(v13, v3, v3); } catch (e) {}
new v3(255);
function f20(a21) {
    const o22 = {
        ..."toStringTag",
    };
    o22[4];
    return o22;
}
f20.arguments;
class C25 extends f20 {
    [3827];
}
const v26 = new C25();
const v27 = v26[0];
try { v27.match(f0); } catch (e) {}
for (const v29 in v6) {
}
