const v5 = new BigUint64Array(1);
try { new Int16Array(4, 4, v5); } catch (e) {}
const v9 = new Int16Array(7);
2 >>> 2;
Int16Array.length;
const v14 = new Int16Array(2);
function f15(a16, a17, a18, a19) {
    -a16;
    const o29 = {
        "d": a17,
        "a": v5,
        __proto__: v9,
        "c": BigUint64Array,
        "h": 7,
        "f": 4,
        "e": v14,
        n(a22, a23, a24) {
            a24 instanceof Int16Array;
            try {
                const o26 = {
                };
                new BigUint64Array(o26);
            } catch(e28) {
            }
            return a22;
        },
    };
    return o29;
}
f15(31834, 2, 7, 7);
const v31 = f15(7, 7, 4, 2);
v31[5] = v31;
f15(1, 4, 7, 7);
function f33() {
    -1 % -1;
    function F38(a40) {
        if (!new.target) { throw 'must be called with new'; }
        const v41 = this.constructor;
        v41.name;
        v41.e = v41;
        try { new v41(); } catch (e) {}
        this.g = -1;
        this.f = a40;
        this.h = a40;
    }
    try { F38(-143547321); } catch (e) {}
    let v45;
    try { v45 = F38.bind(-143547321); } catch (e) {}
    v45.d = v45;
    try { v45(-1517929768); } catch (e) {}
    const v47 = new F38(-1);
    const v48 = new F38();
    v48.d = v48;
    let v49 = new F38(-1);
    v49.g = v49;
    class C50 extends F38 {
        #p(a52, a53) {
            const v54 = a52?.[32];
            Object.defineProperty(v48, v47, { writable: true, configurable: true, value: F38 });
            a52.d = this;
            return v54;
        }
        [-1];
        static {
            this.name;
            this.n = F38;
            super[this];
            try { ("n").substring(f33, f33); } catch (e) {}
            let v60;
            try { v60 = this["n"](); } catch (e) {}
            const o61 = {
            };
            o61.e = o61;
            o61.e = o61;
            Proxy.length = Proxy;
            const v63 = new Proxy(v49, o61);
            v63.f;
            v63.e = v63;
            v49 = this;
            const o65 = {
                "e": v63,
                ...v60,
                65537: o61,
            };
        }
    }
    C50.name;
    try { new C50(); } catch (e) {}
    new C50();
    const o70 = {
    };
    ("1073741823").trimRight();
    return "1073741823";
}
%PrepareFunctionForOptimization(f33);
f33();
%OptimizeFunctionOnNextCall(f33);
f33();
