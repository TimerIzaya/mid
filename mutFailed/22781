class C3 {
    constructor(a5, a6) {
        let v7 = a5 && a6;
        function f8(a9) {
            const v10 = 536870912 < 536870912;
            function F11(a13, a14) {
                if (!new.target) { throw 'must be called with new'; }
            }
            return v10;
        }
        v7.valueOf = f8;
        v7++;
        let v16 = a5 >> 536870912;
        v16--;
    }
    #toString(a19, a20) {
        a20.h >>= a19;
        return a19;
    }
    3;
    static {
        this.g = this;
    }
}
C3.prototype = C3;
const v25 = new C3(536870912, -1000000000.0);
function f26() {
    class C27 {
    }
    class C28 extends C27 {
        ["ujt8"];
    }
    new C28();
    return -1000000000.0;
}
const v31 = Symbol.toPrimitive;
v25[v31] = f26;
const v32 = new C3(v25, "ujt8");
v32[3];
let v34 = new C3("ujt8", v32);
v34[3] = v34;
const v37 = new Int8Array(5);
new BigInt64Array(8);
const v43 = new Uint16Array(4, Int8Array, -1000000000.0);
let v44 = -2147483648n;
v44 ^ v44;
v34--;
class C48 {
    static m(a50) {
        ({"a":C48,"h":v44,} = this);
    }
}
C48.name = C48;
const v51 = new C48();
v51.constructor = f26;
const v52 = v51?.constructor;
let v53;
try { v53 = new v52(); } catch (e) {}
const v54 = new C48();
v54.toString = Symbol;
let v55;
try { v55 = v54.toString(); } catch (e) {}
class C56 {
}
function f57(a58) {
    a58 > 8;
    new BigUint64Array();
    return v37;
}
C56[Symbol.iterator] = f57;
const o64 = {
};
o64.h = o64;
o64.h = o64;
o64.b = v51;
const o65 = {
};
Object.defineProperty(o65, "b", { writable: true, value: v54 });
const v66 = new C56();
let v67;
try { v67 = v66.constructor(); } catch (e) {}
new C56();
const v69 = ("ujt8").__lookupGetter__;
let v70;
try { v70 = v69(); } catch (e) {}
const v71 = new C56();
v71.constructor = Symbol;
const v72 = v71?.constructor;
function f73() {
    return f26;
}
function f74(a75) {
    function F76(a78, a79, a80, a81) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.a = a78;
        } catch(e82) {
        }
        try {
            this.f = v43;
        } catch(e83) {
        }
        try {
            this.d = "ujt8";
        } catch(e84) {
        }
    }
    const v85 = new F76(a75, o65, a75, v52);
    new F76(v34, f26, a75, v85);
    new F76(F76, v85, a75, a75);
}
Object.defineProperty(v72, Symbol.iterator, { writable: true, configurable: true, get: f73, set: f74 });
try { new v72(); } catch (e) {}
const v91 = v71.constructor;
function f92() {
    return f73;
}
Object.defineProperty(v91, Symbol.iterator, { get: f92 });
new v91(C48, v67, C56, o64);
try { new Float32Array(Float32Array, 536870912, v32); } catch (e) {}
const v99 = new Float32Array();
try { v99.forEach(v70, v54); } catch (e) {}
const v103 = new BigUint64Array();
function f104() {
    const o105 = {
    };
    return o105;
}
v103.constructor = f104;
let v106;
try { v106 = v103.findIndex(v69); } catch (e) {}
let v107;
try { v107 = v103.filter(Uint16Array); } catch (e) {}
try { v107.lastIndexOf(C3); } catch (e) {}
class C109 {
}
function f110(a111) {
    v31[a111];
    const v113 = [-1.3667473485475811e+308,1.7976931348623157e+308,5.0,-3.583919688173468e+307,-1.5320462342133301e+308,-414873.4859108749,286122.8434793174,866.7395286670867,-1000.0,-742782.9714922046];
    function f115(a116, a117, a118, a119) {
        function f120() {
            const o128 = {
                __proto__: v113,
                valueOf(a122, a123) {
                    return v113;
                },
                ["-1073741824"](a125, a126, a127) {
                },
            };
            return o128.copyWithin();
        }
        f120();
        %OptimizeFunctionOnNextCall(f120);
        return a116;
    }
    return v55;
}
C109.toString = f110;
C109.d = C109;
const v131 = new C109();
const v132 = v131.__lookupGetter__;
try { new v132(50820n); } catch (e) {}
try { v132(); } catch (e) {}
function f135(a136) {
    return a136;
}
const v137 = v131.constructor;
v137[Symbol.toPrimitive] = Symbol;
v137.length;
const v141 = new v137(v70);
const v142 = v141?.__defineGetter__;
try { new v142(o65, 5); } catch (e) {}
const v144 = new C109();
v144.constructor = f74;
const v145 = v144?.constructor;
try { new v145(); } catch (e) {}
const v147 = v144.propertyIsEnumerable(v137, v107, o65);
v147 && v147;
const v149 = new C109();
function f150() {
    function f151(a152, a153) {
        RegExp(RegExp);
        return v106;
    }
    return f151;
}
Object.defineProperty(v149, "constructor", { enumerable: true, get: f150 });
const v156 = v149.constructor;
v156[Symbol.iterator] = Symbol;
const v159 = new v156();
const v160 = v159?.__defineGetter__;
try { new v160(v25, v25); } catch (e) {}
const v162 = /[\11]/gm;
v162.e = v162;
const v163 = /a(?!bbb|bb)c/vi;
Object.defineProperty(v163, "toString", { value: f135 });
const v164 = v163.toString;
const v165 = new v164(BigUint64Array, 246, C48, v163, v164);
const v166 = v165.__lookupGetter__;
try { v166(); } catch (e) {}
try { new Uint16Array(v156, v141, v156); } catch (e) {}
const v170 = new Uint16Array(C56);
const v171 = v170[1];
const v172 = v171 & v171;
v172 != v172;
31 - 31;
const v177 = new Int32Array(v159, 31, 560);
v177[30];
function f179() {
    return Int32Array;
}
const v180 = f179?.constructor;
try { new v180(v32); } catch (e) {}
const v182 = f179();
function f183() {
    return v31;
}
function f184(a185) {
    v53[0] = Int32Array;
}
Object.defineProperty(v182, "e", { writable: true, enumerable: true, get: f183, set: f184 });
v182.e = v182;
const t222 = f179().e;
const v188 = new t222();
try { v188.entries(); } catch (e) {}
