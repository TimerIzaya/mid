function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -1073741824;
    } catch(e3) {
    }
    const t6 = -1073741824;
    t6[-1073741824] = this;
    const v4 = this.d;
    let v5;
    try { v5 = v4(-1073741824, v4, v4); } catch (e) {}
    let v6;
    try { v6 = v5(F0, this, -1073741824, F0, this); } catch (e) {}
    v4?.[214];
    try {
        this.g = -1073741824;
    } catch(e8) {
    }
    try { v4(v4, -1073741824, v4, v4); } catch (e) {}
    try { v5(v6); } catch (e) {}
    /foo(?<=bar)baz(a)(?<a>(?<b>(?<c>(?<d>.).).).)ZG(?:a+)*/vdims;
    /(ab\b\d\bcd)/ums;
    /9qxyz{1,32}?/udimy;
}
new F0();
new F0();
new F0();
function f20() {
    return 1000000000.0;
}
const v21 = [-1342108287,-1024,65535,-4294967297,39486500,4294967296,4096,-6841,-602105068];
[8,17733,5,-726460111,1073741824,-28728,-9007199254740992,-2147483648,3,512];
[42796,-5800,-9007199254740992,-804541224,2147483649,-16,-58195,2];
const v26 = new Uint32Array(4);
function f28() {
    const o32 = {
        [v21]() {
            try { this.null(f28, this, this, f28); } catch (e) {}
            super.b;
        },
    };
    return o32.null();
}
f28();
f28();
new Int16Array([v26]);
