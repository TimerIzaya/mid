const v0 = [];
class C1 {
    [v0] = v0;
    constructor() {
        const v3 = super[v0];
        const v5 = v0["copyWithin"](...v0, ..."copyWithin", v3, v3);
        super[this] = v3;
        try {
            ("copyWithin").concat([v3,"copyWithin",this,v5,v0], -16n, v0, v3);
            try {
                v0.toString = v3;
            } catch(e9) {
            }
            const o13 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o13);
        } catch(e15) {
        }
    }
}
const v16 = new C1();
new C1();
new C1();
class C19 extends C1 {
    #f;
    static h = v16;
    b = v0;
    static e;
    static g;
    static a;
    #d;
    #a;
    [C1] = v0;
    static [v0] = v0;
}
new C19();
new C19();
new C19();
new BigInt64Array(3);
new Uint8ClampedArray(3);
new BigUint64Array(3159);
class C36 {
    static 7;
    static [-1] = "string";
    #n(a38) {
        a38 = this;
        a38.e >>>= -35417;
        const o42 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o42);
        return this;
    }
}
new C36();
Array();
const v49 = Array();
class C51 {
    static 9 = 9.187362692894364;
}
for (const v52 in C51) {
}
class C53 {
    #e;
    static {
        function f55(a56, a57) {
            return a56;
        }
        const o63 = {
            o(a59) {
                const o61 = {
                };
                return gc(o61);
            },
        };
        const o65 = {
        };
        const v67 = new Proxy(Uint32Array, o65);
        o63["o"](o63, Uint32Array, "o", "o", v67);
        const v70 = super[this];
        try { v70.join(-4096, -4096, v70); } catch (e) {}
        const o72 = {
        };
        [/LD/vds,1000.0];
    }
    static f;
    m(a77, a78) {
        const o79 = {
        };
        const o82 = {
        };
        const v84 = new Proxy(Uint8Array, o82);
        v84.d = v84;
        new Proxy(this, o79);
        class C90 {
        }
        function f91() {
            let v92 = 1000000000000.0;
            v92--;
            class C95 {
            }
            new C95();
            const v97 = new C95();
            [C90,C95];
            [257828.6336153492,v97];
            [v97];
            class C101 extends C36 {
            }
            function f102(a103, a104) {
                return -4096;
            }
            Set.toString = f102;
            Set.constructor(Set);
            v49.constructor;
        }
        const v108 = "string" && -4096;
        +a78;
        Math.sqrt(v108);
        a77--;
        -509886178 << -509886178;
        return this;
    }
}
new C36();
new C53();
new C53();
const v122 = new WeakSet();
class C124 extends v122.constructor {
}
const v127 = new Uint16Array(512);
class C129 {
}
function F130(a132, a133) {
    if (!new.target) { throw 'must be called with new'; }
}
new Float32Array(v127);
