new Date("2");
function f6(a7) {
    return a7;
}
this.onmessage = f6;
new Float64Array(4);
function f9() {
    return f9;
}
const v10 = f9();
const v11 = f9();
const v12 = f9();
function f13(a14, a15, a16, a17) {
    return f13;
}
f13(v12, v10);
const v19 = f13(v12, v11);
const v20 = /(\1a)/gums;
const v21 = /V(?:a{5,1000000}){3,1000000}/vims;
const v22 = /(?<a>.)\k<a>?/vdimsy;
let v23;
try { v23 = v22(); } catch (e) {}
const v24 = [v20,v20,v20,v20,v20];
const v25 = [v24,v21,v22,v24];
const v27 = new BigInt64Array(v21, v20, v23);
function f28() {
    let v29 = 1000000000000.0;
    const v31 = -(v29--);
    const v33 = -v25 && v25;
    class C34 {
    }
    new C34(v33);
    const t32 = Symbol.constructor;
    t32();
    let v39 = 0;
    v39++;
    const v41 = new C34();
    const t37 = v41.constructor;
    new t37(v27, v41);
    const v44 = new C34();
    const t40 = v44.constructor;
    new t40(v31);
    const v47 = [v22,v22,v22];
    class C48 extends C34 {
    }
    const v49 = new C48();
    v49.constructor;
    v25.constructor.isArray(v47);
    let v53;
    try { v53 = v19.e(); } catch (e) {}
    return v53;
}
f28();
const v57 = new Float32Array(3587);
const v60 = new BigUint64Array(1282);
const v63 = [1282,[[v57],4,3587],1282,Float64Array,v60];
function f64() {
    return f64;
}
const v66 = new Float32Array(1282);
for (const v67 of v66) {
    function F68(a70, a71) {
        if (!new.target) { throw 'must be called with new'; }
        this.g = v67;
    }
    new F68();
}
class C73 extends f64 {
    constructor(a75, a76, a77, a78) {
        const v80 = ([1.479450712344466]).join();
        for (let v81 = 0; v81 < 25; v81++) {
            v80.__proto__;
        }
        super();
        function f83() {
            return a78;
        }
        class C84 {
            #valueOf(a86, a87, a88) {
            }
        }
        const o91 = {
            valueOf() {
                return true;
            },
        };
        v63.length = o91;
        for (let v92 = 0; v92 < 5; v92++) {
            const v93 = [-Infinity,2.220446049250313e-16,-1.7976931348623157e+308,2.220446049250313e-16,Infinity,38895.10169439507,0.0,-839.2678689183415,0.9830891302642997];
            for (let v95 = 0; v95 < 10; v95++) {
            }
            const v99 = new Int16Array();
            for (let v101 = 0; v101 < 25; v101++) {
                function f102() {
                }
                function f103(a104, a105, a106, a107) {
                    const v108 = f102();
                    for (let v110 = 0; v110 < 64; v110++) {
                        v110 ^ v108;
                        Math.sqrt(1024);
                        Math.log10(1024);
                    }
                    const t102 = "f";
                    t102[1073741824] = 4294967296;
                    class C121 {
                        constructor(a123) {
                            ("valueOf").localeCompare(a123, "valueOf");
                        }
                    }
                    139837843 in v99;
                    new Int8Array(v93, v101, v101);
                    new Int8Array();
                    return f103;
                }
                f103(v93, v93, v101, Date);
            }
            function f129() {
                let v130 = -268435456;
                v130--;
            }
            function f134() {
            }
            for (let v135 = 0; v135 < 5; v135++) {
                function f136() {
                    45725n === 45725n;
                }
                f136();
            }
            function f140() {
                class C141 {
                }
            }
            function f142(a143) {
            }
            function f144(a145, a146) {
            }
            try {
            } catch(e147) {
            }
            class C148 extends f140 {
            }
            for (const v149 in C148) {
            }
            let v150 = 10;
            for (; v150--;) {
            }
            class C152 {
            }
            const o153 = {
            };
            class C154 {
            }
            for (let v155 = 0; v155 < 10; v155++) {
                function f156(a157) {
                    function f158(a159) {
                    }
                }
                for (let v160 = 0; v160 < 32; v160++) {
                }
            }
            f83();
            %OptimizeFunctionOnNextCall(f83);
        }
    }
}
new C73();
