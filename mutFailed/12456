let v1 = "match";
[10,-159498302];
const v7 = [4,v1];
["MIN_SAFE_INTEGER",v7,v1,v7];
Math.hypot(-11);
Math.trunc(-11);
+-2;
Math.asinh("MIN_SAFE_INTEGER");
const v17 = -11 && 0.5709709753066095;
new WeakMap();
class C20 extends WeakMap {
    static #valueOf(a22, a23, a24) {
        super.set(a24, v1);
        return a24;
    }
    static m(a27, a28, a29) {
        v1 = this;
        return WeakMap;
    }
    #f = WeakMap;
    f = "replace";
    a = 10;
    #h = v17;
    static [v17] = v1;
    [C20];
    #b;
}
const v30 = new C20();
new C20();
new C20();
const v33 = [];
const v34 = [v33,v33,v33,v33];
const t32 = [v33,v34,v34,v34];
t32.length = 2;
v30[2452] ||= 4;
try {
    new C20();
} catch(e38) {
}
