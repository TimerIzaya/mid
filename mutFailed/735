function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = -1640762597;
    } catch(e3) {
    }
    try {
        this.a = -1640762597;
    } catch(e4) {
    }
}
new F0();
const v6 = new F0();
const v7 = new F0();
function f8() {
    return v7;
}
class C12 extends f8 {
    [F0] = "129";
    [v6] = f8;
    static #valueOf(a14, a15) {
        ~C12;
        Math.floor(1024);
        a14 - a14;
        return Math;
    }
    ["129"];
    #e;
    b = "ignoreCase";
}
new C12();
new C12();
new C12();
const v30 = [-1000.0,351.94489669740733,5.8623101046484845,-160881.40611645568,0.6390643538224362,9.13027568774574];
function f31(a32) {
    return 512;
}
v30.toString = f31;
function f33(a34, a35) {
    return 512;
}
const v37 = new Promise(f33);
v37[v30] += 36002;
