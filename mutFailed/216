const v0 = [-Infinity,Infinity,959819.665748626];
[0.881533214430694,1000000000000.0,-2.6561951388069446e+306,1e-15,-601975.7256958171,-2.0,1.0,-1000000000000.0,-5.0];
[-6.825886894231237,-1000000000.0,-7.405832553829715,-5.0];
function f3() {
    return v0;
}
function f15() {
    let v17 = 1000000000000.0;
    const v18 = v17--;
    -v18;
    let v21 = 257828.6336153492;
    v21--;
    class C24 {
        static #m(a26) {
        }
        constructor(a28) {
            const v30 = new Float32Array();
            try { v30.entries(); } catch (e) {}
            const v32 = new Uint16Array(12, -4294967296, v18);
            new Float32Array(v32, -4294967296, 268435439, v17, v32);
        }
    }
    try { new C24(12); } catch (e) {}
    const v35 = new C24(v21);
    function f36() {
        return f3;
    }
    Object.defineProperty(v35, "toString", { configurable: true, enumerable: true, get: f36 });
    const v37 = new C24();
    const v38 = new C24(-4294967296);
    const v39 = [v38,C24];
    [v21,v38,v35,v38,v39];
    const v41 = [v38];
    function f42(a43) {
        const o44 = {
            "f": v41,
        };
        return 65535;
    }
    v41.constructor = f42;
    class C45 extends C24 {
        [v35];
        #n(a47, a48, a49, a50) {
            return v41;
        }
    }
    const v51 = new C45();
    const v52 = v41.constructor;
    try { v52.isArray(v41); } catch (e) {}
    class C54 extends v52 {
    }
    C54.a = v38;
    C54.a = C54;
    const v55 = new C54();
    v55.constructor = f15;
    const v56 = v55?.constructor;
    try { new v56(); } catch (e) {}
    Object.defineProperty(v55, 65537, { value: v37 });
    try { v51.m(v39); } catch (e) {}
    const o59 = {
        "e": Uint16Array,
        __proto__: 3.4890473589784586e+307,
    };
    return Int32Array;
}
%PrepareFunctionForOptimization(f15);
f15();
f15();
%OptimizeFunctionOnNextCall(f15);
f15();
