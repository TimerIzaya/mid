class C3 {
    constructor(a5, a6) {
        function f7() {
            function f8(a9, a10) {
                ([127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649]).toSpliced(-1148418937, -1148418937, 2.220446049250313e-16, 2.220446049250313e-16, "-4");
                return -13;
            }
            return f8;
        }
        Object.defineProperty(this, "toString", { get: f7 });
        a5.toString = f7;
        super["asUintN"] = a5;
        const o16 = {
        };
        o16.setPrototypeOf = -5.928910853858341;
        const v18 = new Proxy(this, o16);
        v18.toString = f7;
        try { new a5(this, v18, v18, o16, "asUintN"); } catch (e) {}
        this.e;
    }
    static {
        let v22;
        try { v22 = this(this, -5.928910853858341, this, "asUintN", this); } catch (e) {}
        function f23() {
            return v22;
        }
        super.b ||= v22;
    }
}
const v24 = new C3(-5.928910853858341, C3);
new C3(v24, -13);
const v26 = new C3(-13, C3);
const v27 = /\xf0\x9f\x92\xa9/gudimsy;
const v28 = /(xyz{1,}(?:a?)?)/gvdimsy;
const v29 = /(ab|c)/gvi;
function f30(a31, a32) {
    function f33(a34, a35) {
        try {
            a31.c = v28;
        } catch(e36) {
        }
        return a31;
    }
    a32[Symbol.toPrimitive] = f33;
    const o45 = {
        "a": a31,
        "f": -5.928910853858341,
        [a31]: v29,
        [a32]: a32,
        p(a40, a41, a42, a43) {
            super[a32];
            return a41;
        },
        ...v27,
        "e": v27,
        "b": "asUintN",
        "c": -5.928910853858341,
        "d": a32,
        ...v27,
    };
    return o45;
}
f30(C3, v24);
f30(v26, v29);
f30(v26, v28);
class C52 {
    static #m(a54, a55) {
        return a55;
        ("QQcMj").normalize("NFKD");
        return a54?.[179];
    }
    ["valueOf"] = "valueOf";
    b;
    13;
}
C52.name = C52;
const v60 = new C52();
const v61 = new C52();
const v62 = new C52();
v62[13] = v62;
const v63 = [0.602038268284836,-1.7976931348623157e+308,-4.211494269917182,-939259.7989376923,0.02623941368615268];
const v64 = [2.220446049250313e-16,-2.220446049250313e-16,-1000.0];
try { v64.entries(); } catch (e) {}
const v66 = [-1000000000.0,4.0,-9.792130726362629];
v66.toString = f30;
function F67(a69, a70, a71, a72) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "valueOf", { writable: true, configurable: true, value: f30 });
    a69.toString = f30;
    a72.toString = f30;
    try { this.valueOf(); } catch (e) {}
    try { a69.toString(); } catch (e) {}
    a72[1];
    try {
        this.b = v61;
    } catch(e76) {
    }
    try {
        this.h = a71;
    } catch(e77) {
    }
    try {
        this.c = v63;
    } catch(e78) {
    }
}
F67.e = F67;
new F67(v66, v64, -1.7560623034267127e+308, v66);
const v80 = new F67(v63, v64, -1.7560623034267127e+308, v61);
v80.e = F67;
v80.e = v80;
new F67(v63, v66, v60, -1.7560623034267127e+308);
const v83 = new BigUint64Array();
function F84() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        let v86 = 0;
        let v87 = 0;
        while (0 - 0, v87 < 0) {
            for (let v91 = 0; v91 < 5; v91++) {
            }
            v87++;
        }
        do {
            try { v83.entries(); } catch (e) {}
            const v95 = v86++;
            v95 >>> v95;
        } while (v86 < 5)
    } catch(e99) {
    }
}
try { new F84(); } catch (e) {}
new F84();
