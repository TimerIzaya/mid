try { ("ZIq").trimLeft(); } catch (e) {}
const t1 = "ZIq";
t1[1] = "ZIq";
let v7;
try { v7 = ("-4294967296").replaceAll("MIN_SAFE_INTEGER", "o"); } catch (e) {}
try { v7.codePointAt("-4294967296"); } catch (e) {}
class C9 {
    static #p(a11, a12, a13) {
        const t8 = "MIN_SAFE_INTEGER";
        t8[1073741824] = a11;
        throw a12;
        return a11;
    }
    #e;
    n(a15, a16, a17) {
        a17[5] = a16;
        const v18 = this > a17;
        try {
            a16.#e = v18;
        } catch(e19) {
        }
        return "14210501";
    }
}
try { new C9(); } catch (e) {}
const v21 = C9?.apply;
try { new v21("MIN_SAFE_INTEGER", "ZIq"); } catch (e) {}
const v23 = new C9("MIN_SAFE_INTEGER");
const v24 = new C9();
const v25 = v24?.length;
let v26;
try { v26 = v25.toString(); } catch (e) {}
try { v26.strike(); } catch (e) {}
let v28;
try { v28 = new v25(); } catch (e) {}
const v29 = v28?.constructor;
let v30;
try { v30 = new v29(); } catch (e) {}
const v31 = v28?.constructor;
v31.flags = v31;
let v32;
try { v32 = new v31(v30, v25, v24); } catch (e) {}
const v33 = v32?.__lookupGetter__;
try { new v33(v28, v31); } catch (e) {}
const v35 = new C9();
const v36 = [v23,v35,v24,v35];
v36[1];
let v38;
try { v38 = v36.entries("o", v36); } catch (e) {}
v38.e = v38;
v36[3] = v36;
["o",C9,v35,C9,C9];
const v40 = ["-4294967296",v24];
try { v40.pop(); } catch (e) {}
v40[1] = v40;
const v42 = /z/di;
try { Math.atanh(); } catch (e) {}
-10 + -10;
let v47 = 101835787;
v47--;
const v49 = v47 / v47;
v49 + v49;
Math.asinh(-10);
Math.atanh();
const v53 = Math.exp();
v53 >> v53;
v42 - v47;
