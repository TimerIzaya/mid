function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 4;
    } catch(e3) {
    }
    try {
        this.h = 4;
    } catch(e4) {
    }
    9007199254740990 ** -730.1794399783898;
    class C9 {
        m(a11, a12) {
            0.0 ** this;
        }
        static get c() {
            let v15 = 10;
            for (; v15--;) {
                super.c = this;
                Symbol.isConcatSpreadable;
            }
        }
    }
    try {
        this.c = 4;
    } catch(e19) {
    }
}
const v20 = new F0();
const v21 = new F0();
const v22 = new F0();
-25035 & -25035;
const v26 = new F0();
const v27 = v26[6];
v26[v20] = v27;
let v28;
try { v28 = v26.repeat(v26, F0, v27); } catch (e) {}
v22.h ||= v28;
const v30 = [-7923,59531,-40180,65535,-3,1735801175,15,168682254,-4096,202336407];
[16,12,-4294967296,536870888,-40573,2147483647,2002255370,-51346,65258];
const v32 = [-11758,3,247316020,4370,4096,-17513,8387,-65535];
let v33;
try { v33 = v32.toSorted(v20); } catch (e) {}
class C34 extends v22 {
    static [2147483647] = 27775;
    toString(a36, a37, a38, a39) {
        const v40 = [9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
        v40[2] = v40;
        new Int8Array(3787);
        const v44 = v30[7];
        1073741825 == 0n;
        const o49 = {
            __proto__: v40,
        };
        try { new C34(...F0, Math, Math, Math, a38); } catch (e) {}
        for (let v51 = 0; v51 < 25; v51++) {
            const v52 = [601759695];
            const v53 = [1073741824,1073741823,1376142744,1073741825];
            function f54(a55, a56, a57, a58) {
                Math.cos(-1073741824);
                try { v53["find"](..."find", a58, ...v52, ...v53); } catch (e) {}
                return v51;
            }
            for (let v64 = 0; v64 < 5; v64++) {
                f54();
            }
        }
        const v66 = -25035 in v22;
        const o67 = {
        };
        try {
            o67.g = v44;
        } catch(e68) {
        }
        try {
            const o69 = {
            };
            o69.g = v44;
            o69.d = v33;
        } catch(e70) {
        }
        try {
            const o71 = {
            };
            o71.g = v44;
            o71.d = v33;
            o71.c = v66;
        } catch(e72) {
        }
        try {
            const o73 = {
            };
            o73.g = v44;
            o73.d = v33;
            o73.c = v22;
        } catch(e74) {
        }
        v20[v21] = v66;
        super[C34];
        try {
            super.setUint16(268435440, v26, v26, 268435440);
        } catch(e79) {
        }
        a38 | v32;
        ++a38;
        Math.atan2(-126182588, v32);
        Math.sign(v32);
        return a39;
    }
}
C34[2147483647] = C34;
new C34();
new C34();
new C34();
try { new Uint16Array(v20, v21, Uint16Array); } catch (e) {}
class C89 extends Uint16Array {
}
const o95 = {
    ["536870889"]: "toString",
    set e(a93) {
    },
    get e() {
        return "536870889";
    },
};
try { new C89(); } catch (e) {}
