function f6() {
    return -287.5409074748743;
}
[f6,f6,-138781.17130672815,-256,-287.5409074748743];
const v8 = [f6];
const v9 = [-256,f6];
[1073741824,536870887,-61112,65536];
let v11 = [-6,2741,2147483647,4096];
[-37834,268435441,1073741823,-1,-65536,-9223372036854775807,9007199254740991];
class C13 {
    constructor(a15, a16, a17) {
        class C18 {
            h = v9;
            2147483649 = a16;
            c;
        }
        new C18();
        new C18();
        new C18();
    }
    static {
        throw v9;
        super.d = 1873523764;
        v11 = v8;
    }
}
new C13(-256, -138781.17130672815, f6);
new C13(40198, -295400.6650636607, 40198);
new C13(40198, -138781.17130672815, v9);
function F26() {
    if (!new.target) { throw 'must be called with new'; }
}
class C28 extends F26 {
}
function f29() {
}
%OptimizeFunctionOnNextCall(f29);
const v30 = new C28();
function F31(a33, a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    a34 === a34;
    const v38 = new BigUint64Array(-256, v30);
    const v39 = /anVXYFzN(x)(x)(x)\3/gvdms;
    try { v38.reduceRight(v39); } catch (e) {}
    9n >> 9n;
    this.constructor;
}
function f44() {
    class C45 {
    }
    const v46 = new C45();
    for (let v47 = 0; v47 < 5; v47++) {
        new F31(undefined, v46);
    }
}
%PrepareFunctionForOptimization(f44);
f44();
%OptimizeFunctionOnNextCall(f44);
f44();
