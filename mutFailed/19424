const v0 = [-0.0,256679.60189190903,Infinity,-1000000.0,0.0,-1.7976931348623157e+308,-4.357909557947468,2.220446049250313e-16,0.3164812003742721,7.119904585654062e+307];
const v1 = [720668.9170324984,0.004409345719772917,-3.0];
[-4.0,-917.485297349171];
const v3 = /7u\P{Decimal_Number}(?<=a)/gvm;
v3.dotAll;
const v5 = /6(?:a?)*J*/gvimsy;
const v6 = /\p{Script_Extensions=Greek}/vdiy;
4096n * 4096n;
const v10 = 4096n << 4096n;
v10 ^ v10;
const v13 = [4096n,-7n,-7n];
try { v13.findLast(4096n); } catch (e) {}
try { v13.pop(); } catch (e) {}
const v16 = [v3,v0];
v16.g = v16;
const v17 = v16[1];
try { v17.reduce(v1); } catch (e) {}
[-7n,v6,v5];
class C20 {
    constructor(a22) {
        this.length = a22;
        const v23 = this.constructor;
        v23.length = v23;
        let v24;
        try { v24 = v23.bind(v13); } catch (e) {}
        try { v24(v6); } catch (e) {}
        try { new v23(); } catch (e) {}
        super.e;
    }
    #toString(a29, a30) {
        const v31 = typeof a30;
        class C33 extends Uint8Array {
        }
        function f34() {
            return v31;
        }
        Object.defineProperty(v3, Symbol.toPrimitive, { writable: true, get: f34 });
        return v31 != "string";
    }
}
const v39 = new C20();
function F40() {
    if (!new.target) { throw 'must be called with new'; }
    for (let v42 = 0; v42 < 50; v42++) {
        v42 << v42;
        for (let v44 = 0; v44 < 25; v44++) {
            this["p" + v44] = v44;
        }
    }
}
const v47 = new C20(v39);
v47.length = v47;
let v48 = 3.7513641059834927e+307;
v48--;
class C50 extends C20 {
    m(a52) {
        let v53;
        try { v53 = new this(a52, 4096n, this); } catch (e) {}
        this.c |= v53;
        return a52;
    }
    #d;
}
new C50();
new C50();
