const v0 = [1000000000.0,2.0,0.2219224979654375,-3.0,4.8334915186259195,1e-15];
const v1 = [937355.9641529783,0.023617067748840648,-1.3678764484421217e+308,6.502826044729616,-3.0,-0.0,Infinity];
const v2 = [0.2788382121765882,-Infinity];
class C3 {
    static n(a5, a6) {
        super.f = a6;
        v2[Symbol.hasInstance];
        return a6;
    }
    #valueOf(a11) {
        let v12 = 0;
        do {
            v2[618] = v1;
            try {
                v0.valueOf = v1;
            } catch(e13) {
            }
            v12++;
        } while (v12 < 4)
        return this;
    }
}
new C3();
const v18 = new C3();
const v19 = new C3();
function f20(a21, a22) {
    const o38 = {
        ...a22,
        __proto__: a22,
        "e": a22,
        "h": v0,
        "b": C3,
        ...a21,
        [a21](a24, a25, a26, a27) {
            a24 / a25;
            a22.d;
            try {
                const o33 = {
                };
                a26.fuck(o33, a21, [a21,a25,a22,o33,v19], /U\xed\xb0\x80/gvdsy);
            } catch(e37) {
            }
            return a24;
        },
    };
    return o38;
}
const v39 = f20(v0, C3);
const v40 = f20(v39, v39);
const v41 = f20(v40, v18);
class C43 {
}
const v44 = new C43();
const o46 = {
};
const v48 = new Proxy(v44, o46);
v48[v48] = 0.3050534209767637;
class C51 {
    static #p(a53, a54, a55) {
        try { v40["valueOf"](v0, v41, v39); } catch (e) {}
        return v2;
    }
    #valueOf(a59, a60) {
        try { a60["asinh"](v2, "asinh", this); } catch (e) {}
        f20 instanceof f20;
        for (let v64 = 0; v64 < 32; v64++) {
            a59["p" + v64] = v64;
        }
        return -536870912n;
    }
}
new C51();
new C51();
new C51();
for (let i73 = 0, i74 = 10; i73 < i74; i74--) {
}
class C81 {
}
function F82(a84, a85, a86) {
    if (!new.target) { throw 'must be called with new'; }
    48979n instanceof C81;
    const v88 = a85 === a85;
    const v89 = v88 ** v88;
    v89 - v89;
}
function f91() {
    for (let v92 = 0; v92 < 5; v92++) {
        new F82(f91, f91, v92);
    }
}
f91();
f91();
%OptimizeFunctionOnNextCall(f91);
f91();
