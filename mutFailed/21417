class C3 {
    #n(a5) {
        try { a5(a5, 0.010915653609860465, this); } catch (e) {}
        const o10 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o10);
        return NaN;
    }
    static 4294967296;
}
C3[4294967296] = C3;
const v12 = new C3();
try { v12.constructor(); } catch (e) {}
v12?.constructor;
let v15;
try {
const t0 = "a";
v15 = new t0();
} catch (e) {}
const v16 = v15?.constructor;
let v17;
try { v17 = new v16(); } catch (e) {}
const v18 = new C3();
const v19 = v18?.constructor;
let v20;
try { v20 = new v19(); } catch (e) {}
const v21 = v20?.constructor;
try { new v21(); } catch (e) {}
const v23 = v18?.constructor;
v23[4294967296] = v23;
let v24;
try { v24 = new v23(); } catch (e) {}
const v25 = v24?.constructor;
let v26;
try { v26 = new v25(); } catch (e) {}
const v27 = v24?.__lookupGetter__;
v27.a = v27;
try { new v27(v23); } catch (e) {}
const v29 = new C3();
try { v20.toString(); } catch (e) {}
const v31 = [1198277711,-1073741824,65537,4096,314740640];
try { v31.toString(); } catch (e) {}
const v33 = [-1780727674,-14,11,-6,536870888];
const v34 = v33[4];
let v35;
try { v35 = v33.values(); } catch (e) {}
const v36 = v35?.next;
try { new v36(); } catch (e) {}
[-4294967296,4294967297,-2147483649,-4294967297,464652972];
1855 - 1855;
1855 - 1855;
1855 & v20;
new Uint16Array(1855);
function f46(a47, a48, a49) {
    const o50 = {
        2: v33,
    };
    return o50;
}
f46(v17, v24, v25);
f46(v36, v25, v26);
f46(v34, v35, Uint16Array);
Int8Array.d = Int8Array;
Int8Array.prototype = v24;
new Int8Array(512);
Uint8ClampedArray.d = Uint8ClampedArray;
const v58 = new Uint8ClampedArray(3);
v58[2];
let v60;
try { v60 = v58.join(v29); } catch (e) {}
v60.f = v60;
function f61() {
    const v62 = [];
    let v63;
    try { v63 = v62.findLast(v62); } catch (e) {}
    const v64 = v63.constructor;
    let v65;
    try { v65 = v64.isArray(C3); } catch (e) {}
    !v65;
    v64.d = v64;
    new Uint8Array(268435440);
}
try { new f61(); } catch (e) {}
f61();
%OptimizeFunctionOnNextCall(f61);
f61();
