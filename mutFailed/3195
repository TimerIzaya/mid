function F0() {
    if (!new.target) { throw 'must be called with new'; }
    function f2() {
        return this;
    }
    function f3(a4) {
    }
    Object.defineProperty(this, "e", { writable: true, configurable: true, enumerable: true, get: f2, set: f3 });
    try {
        this.h = 16;
    } catch(e9) {
    }
    try {
        this.e = 16;
    } catch(e10) {
    }
}
const v11 = new F0();
const v12 = new F0();
const v13 = new F0();
function F14(a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a16;
    try {
        this.f = a16;
    } catch(e18) {
    }
    try {
        this.a = v12;
    } catch(e19) {
    }
}
const v20 = new F14(v13, v13);
const v21 = new F14(v12, v11);
const v22 = new F14(v11, v13);
let v24 = 0.6323717873586865;
function f26(a27, a28, a29) {
    const o62 = {
        "e": v11,
        "c": a28,
        "g": a28,
        [a27]: a28,
        [a28]: F0,
        __proto__: a28,
        set f(a31) {
            super[a29];
            const v33 = a29[257];
            let o34 = {
            };
            try {
                o34.e = v33;
            } catch(e35) {
            }
            try {
                const o36 = {
                };
                o36.e = v33;
                o36.b = v11;
            } catch(e37) {
            }
            try {
                const o38 = {
                };
                o38.e = v33;
                o38.b = v11;
                o38.d = F0;
            } catch(e39) {
            }
            try {
                try {
                    v12.h = a31;
                } catch(e40) {
                }
                v24 = a31;
                const o41 = {
                };
                function f42(a43, a44) {
                    function f46(a47) {
                        Math.cos(this);
                        Math.atanh(9007199254740992);
                        const v52 = 9007199254740992 & this;
                        let v53 = v52 - v52;
                        ++v53;
                    }
                    this.onmessage = f46;
                    v13[101] -= -250293.25885210384;
                    o34 = o41;
                }
                const v57 = [o41,"function"];
                try {
                    a29.__proto__ = v57;
                } catch(e58) {
                }
                super.d = "function";
                const o59 = {
                    "arguments": v57,
                    "type": "function",
                };
                new Worker(f42, o59);
                o41.e = v33;
                o41.b = v11;
                o41.a = a27;
            } catch(e61) {
            }
        },
    };
    return o62;
}
f26(1.020200038300818e+308, v20, v22);
f26(1.020200038300818e+308, v24, v21);
f26(1.020200038300818e+308, v24, v21);
function F67(a69, a70) {
    if (!new.target) { throw 'must be called with new'; }
    a70 === v12 ? a70 : v12;
    try {
        this.f = a69;
    } catch(e73) {
    }
    const v74 = this.constructor;
    try { new v74(268435440n, a70); } catch (e) {}
    this.f = 268435440n;
}
const v76 = new F67();
const v77 = new F67();
let v78 = 65536;
v78--;
function f80(a81) {
    const o84 = {
        ...v78,
        5: v78,
        valueOf(a83) {
            return v76;
        },
        "g": v78,
    };
    return v77;
}
%PrepareFunctionForOptimization(f80);
f80();
f80();
%OptimizeFunctionOnNextCall(f80);
f80(268435440n);
