new Int8Array(2);
new Uint8Array(920);
new Float64Array(253);
[-960.7381643354993];
[-671.3090150871242,-1.0];
[0.9173781206367507,5.233957886943719e+307,0.12662165959368632,-921947.547929243,743.1321381303028,2.220446049250313e-16,2.2250738585072014e-308];
const v24 = ("V9t")?.isPrototypeOf;
let v25;
try { v25 = new v24("toString"); } catch (e) {}
class C29 extends Int32Array {
}
try { new v25(); } catch (e) {}
const v31 = new C29();
Reflect.construct(Uint8Array, [v31,v31], C29);
[0.18372866515424147,461665.2775589656,2.6563672835372962,2.0,-Infinity,1e-15,273866.66349880304];
[0.1647584749770924,0.0,281189.4702332646,-640144.185384929,-9.96248851328583,-1000000000000.0,NaN,-9.185127476558462e+307,-588.058716110192];
[8.063065675598975e+307];
51086 >>> 51086;
[5,-1726645307,3,-22869,28097];
[-128,738741997,61681,1,-536870912,255,512];
[1326394077,3,-4096,-6,58642,8];
const v48 = [-20857,-1303616328,-1864740753,-1023402966,129,-20506,7,8229,-53914];
v48[536870912] = v48;
127 * 127;
new Uint8Array(127);
const o56 = {
    toString(a54, a55) {
    },
};
let v57 = undefined;
const o60 = {
    set b(a59) {
    },
};
v57 = o60;
o60.f = o60;
v24.prototype = Uint8Array;
const v63 = new Uint8Array(165);
v63[113] = v63;
function F64() {
    if (!new.target) { throw 'must be called with new'; }
    const v66 = [-5.0,-4.0,-1.7976931348623157e+308,-897.6003446951657,-1000000.0,1.8928166106024224e+306,-2.0,-1000000000000.0];
    function F67(a69, a70, a71, a72) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v73 = new F67(v66, F64, v66, F67);
    const v75 = [F64,F64,F64,F64];
    Reflect.apply(v66.indexOf, v73, v75);
}
function F78() {
    if (!new.target) { throw 'must be called with new'; }
    function F80() {
        if (!new.target) { throw 'must be called with new'; }
    }
}
new F78();
function f83(a84, a85) {
    const o93 = {
        n(a87, a88) {
            class C89 {
            }
            new Int16Array([-1.7976931348623157e+308,1000000.0,-Infinity,1000000.0,1e-15,4.0,0.05361702581874339,2.220446049250313e-16,-384803.16239734297]);
        },
        "a": v24,
    };
    for (let v94 = 0; v94 < 100; v94++) {
        Math.random();
    }
    return o93;
}
new Uint16Array(257);
%PrepareFunctionForOptimization(f83);
f83().n();
%OptimizeFunctionOnNextCall(v25);
const t74 = 892738.329846452;
t74();
