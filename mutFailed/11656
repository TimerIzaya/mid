let v1 = -24766;
const v3 = [2.220446049250313e-16,2.2250738585072014e-308,NaN,-1000000.0,-699.4225891338359,0.9128754886113614,NaN,-533019.1425446132,1000.0,-481.6303040399881];
const v10 = [2.220446049250313e-16,0.19533566543406988,1e-15,0.776401723127152,2.0];
const v11 = [0.8353475513622495];
class C12 {
    constructor(a14, a15, a16) {
        let [...v17] = a14;
        new Map();
        v10 ^ a15;
        try {
            this.b = v11;
        } catch(e21) {
        }
    }
    static [-1];
    1 = -47913;
    268435441 = -47913;
    static #toString(a23, a24, a25, a26) {
        var h = a25;
        try { C12(v3, -47913, a24); } catch (e) {}
        return a25;
    }
    static [v11] = v1;
}
new C12(v11, v11, 268435441);
let v32 = new C12(v11, v11, v1);
new C12(v11, v11, 268435441);
function F40() {
    if (!new.target) { throw 'must be called with new'; }
    for (let v42 = 0; v42 < 1000; v42++) {
        v10 + v42;
        const v45 = this.fontcolor();
        let v46;
        try { v46 = v45.trimLeft(this); } catch (e) {}
        v46[12];
    }
}
const t37 = 8698;
const v48 = new t37();
let v49 = new F40();
({"b":v32,"f":v1,"h":C12,...v49} = v49);
const v50 = v49.__proto__;
v3.length;
v48 - v50;
const o56 = {
    "execution": "sync",
    "type": "minor",
};
gc(o56);
