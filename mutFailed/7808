new Array(129);
const v3 = [Array];
const v5 = [[v3,v3],Array];
const v11 = new BigUint64Array(2731);
new Int8Array(64);
new Uint8Array(64);
const v18 = [];
function F19() {
    if (!new.target) { throw 'must be called with new'; }
    this.d = v18;
}
const v21 = new F19();
const v22 = new F19();
const v23 = new F19();
const v25 = 2.0 >>> 2.0;
v25 >>> v25;
try {
    v5.__proto__ = v11;
} catch(e27) {
}
let v30 = 318.1999797231326;
Math.log(0);
const v32 = !v21;
const v33 = v30++;
Math.min(v32);
v32 * 0;
const v37 = 5.0 >>> 5.0;
let v38 = 65536n;
~(v38--);
let v42 = 0;
do {
    let v43 = v23.d;
    ++v43;
    for (let v45 = 0; v45 < 32; v45++) {
        v18["p" + v45] = v45;
    }
    v42++;
} while (v42 < 5)
~(-2147483649n / -2147483649n);
let v53 = 536870888n;
v53++;
const v55 = [-3.5650322397951273,1000.0,0.802460520523592,5.641883312396217e+306];
const v56 = [431.4791340196293,-3.0,125159.99825031101,21.6056810036589,1.6160148855763925e+308,1.7462069791264565e+308,5.0,1e-15,-1000.0];
try { v56.toString(); } catch (e) {}
const v58 = [-1.238631182886351e+308,1.9411414401127767e+306,5.0,-276.83656814954304,830049.9402099303,-4.0901138213923866e+307,-5.0,300.38437393340564];
try { v58.lastIndexOf(v55); } catch (e) {}
class C60 {
}
const v61 = C60.__lookupGetter__;
try { v61(v22); } catch (e) {}
const v63 = new C60();
v63.isPrototypeOf(v37);
-2147483649n | v33;
[4096,308453909,-49252,-60658,-433376051,9007199254740991,268435441,1,2147483648,-23741];
[-4294967296,28125,-1,-8,13,462809520,4,7];
[631463247,-6,1073741824,-4294967297];
