const v4 = new SharedArrayBuffer();
v4.constructor;
const o6 = {
};
o6.d = "function";
class C7 {
    constructor(a9, a10) {
        a9 == a9;
        try { new a10(); } catch (e) {}
        a9 ** -4294967296;
        a9 && a9;
        const v18 = "8" + -4294967296;
        ~v18;
        const v20 = -128;
        v20 + v20;
        Math.cos(v18);
    }
    ["function"] = "undefined";
    ["undefined"];
    ["8"];
}
const v23 = new C7("function", C7);
v23[8] = v23;
const v24 = new C7("8", v23);
v24[8];
new C7("8", "undefined");
const v30 = new Int8Array(770);
new Uint8ClampedArray(v30);
-664156.8429739357 & -664156.8429739357;
try { ("b").at("b"); } catch (e) {}
const v42 = new BigUint64Array(43);
try { v42.set("function"); } catch (e) {}
let v44 = 52;
v44--;
BigUint64Array.prototype = BigUint64Array;
new BigUint64Array(v44);
new Uint8ClampedArray(10);
function f52() {
    function f53() {
        ~-1073741824;
        return BigUint64Array;
    }
    return f53;
}
function f56(a57) {
    const t45 = [155533.8602852358,2.0];
    t45[658291203] = null;
}
Object.defineProperty(Uint16Array, Symbol.iterator, { configurable: true, get: f52, set: f56 });
const v62 = new Uint16Array(Uint16Array);
class C63 {
    #p(a65, a66, a67, a68) {
    }
    constructor(a70, a71) {
        try {
            v62.#p();
        } catch(e73) {
        }
    }
}
1073741824 & 1073741824;
const o77 = {
    "maxByteLength": 1073741824,
};
const v79 = new ArrayBuffer(4, o77);
const v81 = new Int8Array(v79);
v81[3] = v81;
v81[2] = v81;
