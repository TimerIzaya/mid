const v1 = new Map();
let v4 = Uint8Array.length;
const v5 = new Uint8Array(127);
function f6() {
    return Map ^ (v4 = v5);
}
v5[Symbol.toPrimitive] = f6;
const v10 = v5?.findLastIndex;
try { new v10(127); } catch (e) {}
v5[33] = v5;
Int32Array.toString = f6;
const v14 = new Int32Array(1);
function f15() {
    function f16(a17, a18) {
        const v19 = [-4563];
        new Int32Array(v19);
        return v19;
    }
    return f16;
}
function f22(a23) {
    delete Symbol[2147483649];
}
Object.defineProperty(v14, "toString", { configurable: true, get: f15, set: f22 });
let v25 = 44;
v25 >>> v25;
new Int32Array(v25);
const v29 = [256,-65536,-2,-536870912,2,536870888,3,-65535,1264227123,-47386];
v29[7];
let v31;
try { v31 = v29.with(Int32Array, Int32Array); } catch (e) {}
try { v31.toSorted(Int32Array); } catch (e) {}
[510839019,-7,-88200221,-1595584041,1024,8,-63761,65537];
const v34 = [-3609,-1073741824,-268435456,1073741824,268435440,127];
v34[1] = v34;
const v35 = [1,v34,v14];
let v36 = [Uint8Array,1,Int32Array,v35];
const v37 = [Int32Array];
BigUint64Array.BYTES_PER_ELEMENT = BigUint64Array;
const v39 = new BigUint64Array();
v39.currencyDisplay = v37;
let v40;
try { v40 = v39.with(Map, v14); } catch (e) {}
const v42 = new BigUint64Array(1448);
function f43(a44, a45, a46) {
    a44 & a44;
    let v48 = a45--;
    v25 = v48;
    return BigUint64Array - a44;
    new Map(v34);
    v48--;
    a46 - a46;
    return a46;
}
const v54 = [-1000000000000.0,-1.7976931348623157e+308,294500.85018206923,-Infinity,-0.0,-7.010036940344757e+307,1.0,-Infinity,-1000.0,-1.1645821156926988e+308];
v54[2] = v54;
const v55 = v54.reduce(f43);
const o56 = {
};
Object.defineProperty(o56, "d", { enumerable: true, value: v25 });
try {
    o56.d = v31;
} catch(e57) {
}
try {
    const o58 = {
    };
    o58.d = v31;
    o58.a = v35;
} catch(e59) {
}
try {
    let o60 = {
    };
    function f61(a62) {
        [,v36,o60,a62] = v1;
    }
    Object.defineProperty(o60, "g", { writable: true, configurable: true, set: f61 });
    o60.d = v31;
    o60.a = v35;
    o60.g = v40;
} catch(e63) {
}
try {
    const o64 = {
    };
    o64.d = v31;
    o64.a = v35;
    o64.g = v14;
} catch(e65) {
}
-v55;
v42.toLocaleString(v55, v39);
