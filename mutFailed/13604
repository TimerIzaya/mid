[0.0,781.3308957797565];
const v1 = [3.0,726327.2971527416,-0.5753452581577747,0.6376839908345494];
[0.27442176673154073];
const v3 = [2.2250738585072014e-308,-2.2250738585072014e-308,1.0,42.093625378680144,-333.0335214375324];
const v4 = [-2.2250738585072014e-308,1000.0];
[75961.34522236232,-5.571666066166944,357.0780540702608,1000000000000.0,-1000.0,NaN,-6.655934688253236];
class C9 {
    static [-2] = v4;
    static get b() {
        const o11 = {
        };
        const v13 = new JSON(v1, o11);
        return v13;
    }
    static [v1];
    f = -1000000000000.0;
    static e = v3;
    static #c;
}
new C9();
new v1();
const v16 = new C9();
class C20 {
    127;
    static [-2147483647n] = 8n;
    static #c = 8n;
    static #g = -2147483647n;
    static [C20];
    static o(a22, a23) {
        try { a23(a23); } catch (e) {}
        function f28(a29, a30, a31, a32) {
            function f33() {
            }
            class C34 extends f33 {
                toString(a36, a37) {
                    const t35 = this.constructor;
                    t35();
                    -this;
                }
            }
            const v41 = new C34(f33, a30, v16);
            try { v41.toString(); } catch (e) {}
            for (let i = 0; i < 5; i++) {
                ["object"];
            }
        }
        f28();
        let v46 = ~a23;
        Math.sign();
        v46--;
        -1024 / -9223372036854775808n;
        return 8n;
    }
}
try { new C20(); } catch (e) {}
const v51 = new C20();
v51[127];
const v53 = new C20();
v53[127] = v53;
const v54 = new C20();
-854882636 >>> -854882636;
let v58 = 2147483647;
v58++;
const v61 = 4 * 4;
const v63 = new Float64Array(4);
try { new Float64Array(-43422, v51, v54); } catch (e) {}
new Float64Array(129);
new Float64Array(1000);
function f71() {
    ["toString","toString","toString","toString","toString"];
    try { new Int32Array(C20, C20, C20); } catch (e) {}
    const v78 = new Int32Array(Int32Array);
    v78?.constructor;
    new Uint8Array(v78, v78, Int32Array);
    class C82 {
        constructor(a84, a85) {
            const v86 = v63.constructor;
            v86.f = v86;
            try { new v86(f71, C82, -7); } catch (e) {}
            this[-2147483648] >>>= -7;
            for (let v88 = 0; v88 < 5; v88++) {
            }
        }
    }
    C82.d = C82;
    new C82();
    return -7;
}
v61();
f71();
f71();
