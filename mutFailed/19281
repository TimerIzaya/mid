function f1() {
}
const v2 = /(?<a>(?<b>(?<c>(?<d>.).).).)/vdmsy;
const v3 = /G\8\x60/gmsy;
const v4 = [v2,v2,v3,f1,v3];
class C6 extends Set {
    constructor(a8, a9) {
        a9[2];
        /Ia[a]/uims;
        let v12 = /W(jy2)/udy;
        v12.flags;
        const v14 = /(u4(?:a?)*)/gudimsy;
        const v17 = new Uint8Array(v14, f1);
        const v19 = new Uint32Array();
        function f20(a21, a22, a23, a24) {
            const o28 = {
                ...v17,
                n(a26, a27) {
                    v19[a21] = v19;
                },
            };
            return o28;
        }
        for (let v29 = 0; v29 < 625; v29++) {
            f20(Uint8Array, 2, v29);
        }
        v12 = v14;
        for (let v31 = 0; v31 < 25; v31++) {
            v4["p" + v31] = v31;
        }
    }
}
class C38 {
    constructor(a40, a41) {
        a41 - a41;
        let v43;
        try { v43 = new a40(-5.869943149384486, a41, a41, a41, ...0.2510089730549625, 512.29276402866); } catch (e) {}
        try {
            super.m(this);
        } catch(e45) {
        }
        a41 = v43;
        try { ("m").match(a40); } catch (e) {}
        try { v43["m"](v43, "m", a40, this, v43); } catch (e) {}
        Math.sign(0.8907211315752046);
        const v54 = -2 & 0.8907211315752046;
        Math.sqrt(0.8907211315752046);
        !-1;
        v54 + v54;
        ~0.8907211315752046;
    }
    [-5.869943149384486];
    c;
    static e;
    h = -5.869943149384486;
}
new Float64Array(14);
new Float64Array(14);
const o65 = {
};
const v68 = [65537,268435441,63298,-5,1235122603];
const v69 = [128,215394418];
const v70 = [-2,-4294967296,4294967297];
function F71(a73, a74, a75, a76) {
    if (!new.target) { throw 'must be called with new'; }
    const v77 = this.constructor;
    try { new v77(14, 14, v68, this); } catch (e) {}
    a74.caller;
    a76[1];
    this.c = a75;
    const v82 = [Reflect];
    const o83 = {
        __proto__: Reflect,
        "e": v82,
    };
    this.f = a74;
}
const v84 = new F71(-714582153, F71, -714582153, v69);
new F71(9, v84, 9, v70);
new Int32Array(3);
const v92 = new Date();
v92.getUTCSeconds();
const v96 = new Date(Date);
try { v96.setUTCMinutes(-26635n); } catch (e) {}
new BigUint64Array(2147483647, 2147483647, 2147483647);
function f102(a103, a104, a105, a106) {
    return a106;
}
const v107 = new Int8Array(221);
function f108(a109, a110, a111, a112) {
    a109.a = a110;
    return a111;
}
const t93 = "byteOffset";
t93[4] = Float64Array;
new d8(v107);
