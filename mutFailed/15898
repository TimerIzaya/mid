class C3 {
    static n(a5) {
        let v6 = "toString";
        -Infinity;
        v6++ && v6;
        Math.log10(!v6);
        return "-536870912";
    }
    ["function"];
}
const v16 = new C3();
const v17 = new C3();
const v18 = new C3();
function F19(a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a21;
    } catch(e24) {
    }
    try {
        a21.g = v16;
    } catch(e25) {
    }
}
const v26 = new F19("function", "function", v18);
const v27 = new F19(v16, C3, v18);
new F19(C3, v27, v16);
new Float32Array(1024);
const v33 = [[]];
class C35 extends Map {
}
const v36 = new C35();
const v37 = new C35(v33);
const v38 = new C35(v37);
const v41 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v43 = [601759695];
const v44 = [1073741824,1073741823,1376142744,1073741825];
function f46(a47, a48, a49, a50) {
    try { a47.toLocaleString(); } catch (e) {}
    const v52 = a47?.constructor;
    let v53;
    try { v53 = v52(); } catch (e) {}
    try { v52(); } catch (e) {}
    const v56 = arguments.length;
    Object.defineProperty(v36, "e", { configurable: true, enumerable: true, value: f46 });
    const v58 = v37["entries"](a49, ...v38, BigUint64Array, ..."entries", a48, v56);
    new Float32Array();
    class C62 {
    }
    class C63 {
    }
    const v65 = Symbol.toStringTag;
    v37[v65] = v65;
    function f66() {
        let v68;
        try { v68 = ("Vre").charAt(4096); } catch (e) {}
        try { v68.lastIndexOf("Vre", a47); } catch (e) {}
        let v70;
        try { v70 = ("Vre").codePointAt(v41); } catch (e) {}
        v70 - v70;
        v70 ^ v70;
        let v73 = Float64Array;
        v73 = a48;
        let v74 = v41.length;
        const v75 = v74++;
        try {
        } catch(e76) {
        }
        const o104 = {
            268435439: v43,
            ..."e",
            n(a78, a79) {
                return a79;
            },
            m(a81) {
                return v75;
            },
            m(a83) {
                return Map;
            },
            [f66]() {
            },
            ["entries"](a86, a87) {
            },
            valueOf(a89, a90) {
                return a89;
            },
            get h() {
                return v41;
            },
            [v44](a93, a94, a95) {
            },
            "toPrimitive": v53,
            get f() {
                return this;
            },
            [-4294967297n](a98, a99, a100, a101) {
                eval(a100);
            },
        };
        return v37;
    }
    f66();
    const v107 = Array();
    let v108;
    try { v108 = v107.findLast(f46); } catch (e) {}
    v107.unshift("entries", v58, "entries", v108);
    let v111;
    try { v111 = v53.of(); } catch (e) {}
    try { v111.join(v33, v111); } catch (e) {}
    const v113 = new Int8Array(v43);
    v113.c = v113;
    const v115 = v113.buffer.slice();
    try { Int32Array(v115, arguments, -4294967297n); } catch (e) {}
    function f118(a119, a120, a121, a122) {
        return a121;
    }
    const v123 = new Int32Array();
    const v124 = v123[3];
    v124 + v124;
    for (let v126 = 0; v126 < 5; v126++) {
    }
    try { v44["find"](..."find", a50, ...v43, ...v44, ...522675525n); } catch (e) {}
}
const o131 = {
};
try {
    o131.g = F19;
} catch(e132) {
}
try {
    const o133 = {
    };
    o133.g = F19;
    o133.f = v27;
} catch(e134) {
}
try {
    const o135 = {
    };
    o135.g = F19;
    o135.f = v27;
    o135.e = 4294967297;
} catch(e136) {
}
try {
    const o137 = {
    };
    o137.g = F19;
    o137.f = v27;
    o137.d = v26;
} catch(e138) {
}
const v139 = new Float64Array(4096);
new BigUint64Array(2288);
function f146() {
}
v18[2788];
const t157 = "function";
delete t157[v139];
const v150 = Symbol.iterator;
const o159 = {
    [v150]() {
        let v152 = 10;
        const o158 = {
            next() {
                v152--;
                const v156 = v152 == 0;
                const o157 = {
                    "done": v156,
                    "value": v152,
                };
                return o157;
            },
        };
        return o158;
    },
};
class C160 extends f146 {
    static [-145.3420418564839] = -4294967296n;
    h;
    static #d;
}
new v17();
const v164 = new BigUint64Array();
const o183 = {
    toString(a166, a167) {
        const v168 = [-9007199254740991,256,5,4294967297,1,-38452,9223372036854775807,2147483649];
        const v169 = [-4564,-541496027,-554545361,536870888];
        const v170 = [61400,-6,-1019014473,-42020,-2];
        class C171 {
            constructor(a173, a174) {
                const v175 = a174[this];
                try { v175(v175, ...a174, ...v168); } catch (e) {}
            }
        }
        new C171(v170, v168);
        new C171(v169, v170);
        const v179 = this.__lookupGetter__;
        try { new v179(); } catch (e) {}
        const v181 = a167 + a167;
        v181 >>> v181;
        v164[3408] = this;
    },
};
try { o183.toString(); } catch (e) {}
