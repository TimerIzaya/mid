function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 19440;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new v5();
class C7 {
    constructor(a9, a10) {
        a9[2147483648];
    }
    static {
        this.d = this;
        const v13 = v6.h;
        try { new v13(v13, v13, F0, v4); } catch (e) {}
        try {
            v4.h = v13;
        } catch(e15) {
        }
    }
}
try { new C7(F0, v5); } catch (e) {}
new C7(v6, v4);
const v18 = new C7(v4, v4);
const v19 = v18?.__lookupGetter__;
try { new v19(v18); } catch (e) {}
const v21 = new C7(v4, v5);
const v22 = v21?.constructor;
try { new v22(F0, v4); } catch (e) {}
v22.prototype = Uint32Array;
const v29 = new Uint32Array(2091);
v29[0];
for (const v31 in v21) {
}
