const v2 = new Array(Array);
const v3 = [Array,1219,1219,v2,v2];
const v4 = [v2,1219];
const v5 = [v4,1219,v3,1219];
class C6 extends Array {
    static #d = v4;
    static #valueOf(a8, a9, a10) {
        Symbol.iterator;
        const o21 = {
            [v4]() {
                let v14 = 10;
                const o20 = {
                    next() {
                        v14--;
                        const v18 = v14 == 0;
                        const o19 = {
                            "done": v18,
                            "value": v14,
                        };
                        return o19;
                    },
                };
                return o20;
            },
        };
        return a10;
    }
}
const v22 = new v5();
new v22();
new C6();
[4.850958930221275,-1e-15,-2.220446049250313e-16,-1e-15,-4.0,-1.7976931348623157e+308,-1000000000.0,1000000000.0];
[-1e-15,1000000.0,-2.0,1.7976931348623157e+308,1000000000.0,0.6191680801156288,1.0];
[-1000000.0,-621029.5420814999,-Infinity,136427.58995814738,-1000000000.0];
function f45(a46, a47) {
    const o58 = {
        m(a49) {
            const v52 = Int8Array();
            let v53 = 3;
            let v54 = 0;
            v54 >> v54;
            [...v53] = v52;
            v54++;
            return 1;
        },
    };
    ["function",/[-123]N/gdis];
    class C65 {
    }
    class C69 extends Int8Array {
        [12];
    }
    return -7;
}
