function f0() {
}
const v4 = [-65537n,-54977n,10n,-65537n];
const v5 = [f0,v4,v4];
const v6 = [v5,f0,v5];
-65537n ^ -65537n;
const v9 = Symbol.iterator;
const o18 = {
    [v9]() {
        let v11 = 10;
        const o17 = {
            next() {
                v11--;
                const v15 = v11 == 0;
                const o16 = {
                    "done": v15,
                    "value": v11,
                };
                return o16;
            },
        };
        return o17;
    },
};
class C19 {
    [v6] = v5;
    static {
        const v21 = this || this;
        const v22 = v6[v6];
        this.f ^= v22;
        try {
            v6.f = v21;
            if (v22 > C19) {
                ~1007881990;
                !16;
                Math.asin(1007881990 * 1007881990);
            } else {
                try { o18.test(v21); } catch (e) {}
            }
        } catch(e33) {
        }
    }
    static #a;
}
const v34 = new C19();
new C19();
new C19();
const v37 = [-53613,268435440,268435440,2,-65536,-2147483647];
const v38 = [8];
const v39 = [-1024,-2147483647,-37738,-2,21596,2147483649,9007199254740992,-2039218916];
class C40 {
    static #f;
    static set f(a42) {
        a42(this, this, a42, v38);
    }
    constructor(a45) {
        this.e = v38;
    }
}
const v46 = new C40(v38);
new C40(v39);
const v48 = new C40(v39);
let v51;
try { v51 = v34.getInt32(-10, v4, v4, -65537n, 4294967295); } catch (e) {}
Object.defineProperty(C40, f0, { writable: true, configurable: true, enumerable: true, get: f0, set: f0 });
try { v38.flat(-10); } catch (e) {}
delete v37[-10];
try {
    v46.valueOf = v51;
} catch(e54) {
}
let v55;
try { v55 = v48.reduceRight(4294967295, v39, C40); } catch (e) {}
v39[6] ||= -10;
function f56(a57, a58, a59, a60) {
    const v61 = v38 in v37;
    try { v55(...v38, ...v37, v39, ...v61); } catch (e) {}
    return f56;
}
f56();
