class C3 {
    get d() {
        try {
            this.__proto__ = "l";
        } catch(e5) {
        }
        return this;
    }
    static h = "l";
    static {
        const t10 = "l";
        t10[-1209456669] = -1209456669;
        this >> -1209456669;
        this && this;
    }
    static 16;
}
const v9 = new C3();
const v10 = new C3();
const v11 = new C3();
[-2129096357,9007199254740991,9,-268435456];
[127,4096,1374880001,16527];
[30912152,-10,35288,8,-1625183588,-22504,856192388];
const v18 = new Int8Array(9);
v18.indexOf(-1209456669);
new Int8Array(1073741823);
+Infinity;
const v26 = new Int8Array(Int8Array);
const v27 = new Int8Array();
try {
    v27.find(v26);
} catch(e29) {
}
function F31(a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        -20155 - -20155;
        let v39 = new Float64Array(3);
        v39 ^= this;
        this.c = a33;
    } catch(e41) {
    }
    function F42() {
        if (!new.target) { throw 'must be called with new'; }
    }
    class C45 extends F42 {
    }
    try {
        this.g = a34;
        URIError();
        function f48(a49, a50, a51, a52) {
            [-3.942521664036782e+307,-3.942521664036782e+307,[]];
            return -3.942521664036782e+307;
        }
    } catch(e56) {
    }
    try {
        this.e = 128282403;
    } catch(e57) {
    }
}
new F31(v10, 128282403);
new F31(v11, v9);
new F31(v11, -1209456669);
try {
    Float64Array.__proto__ = Float64Array;
} catch(e62) {
    new Uint16Array(-1209456669);
    const v68 = [295968041,[-1024,536870889,65536,65536]];
    const o69 = {
        "arguments": v68,
        "type": "function",
    };
    e62.stack;
}
