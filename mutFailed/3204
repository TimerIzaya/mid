[634.2473235446171,0.6237351760104539,-6.195140250755048e+307,-2.220446049250313e-16,5.177864809708627,2.2250738585072014e-308,0.4800865981443503];
[0.0,9.974539710113302,747.1174300001924,1000000000.0];
[9.414540149206584,-1e-15,9.12927390741499,3.0,738.9219784060037,0.21284794839837395,1.5547940414345631e+308];
new Float64Array(72);
new Uint8Array(-9223372036854775807);
new Float64Array(3048);
const v15 = [-1727815353,-9007199254740991];
[4,13];
const v17 = [45504,65537,-9007199254740992,91446022,-52533,14,11,65535,361664882,-30012];
const v21 = new Int16Array(16);
try { v21.find(v21, 16, v17, v21); } catch (e) {}
0.6822080711934364 / 0.6822080711934364;
function F28(a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    const v32 = this?.constructor;
    const v33 = v32?.constructor;
    try { new v33(v32); } catch (e) {}
    try { new v32(0.29489550717955537, a30); } catch (e) {}
    try { this.constructor(0.6822080711934364, this); } catch (e) {}
    try {
        this.f = 3.0;
    } catch(e37) {
    }
}
const v38 = F28?.constructor;
try { new v38(F28); } catch (e) {}
const v40 = new F28("string");
v40.f = v40;
let v42 = 127;
v42++;
const v44 = v42 != v42;
const v47 = new Int32Array(Int32Array);
const v48 = [];
function f49() {
    const o51 = {
        p() {
            return f49;
        },
        [v48]: v48,
        "a": v48,
    };
    const v52 = o51?.constructor;
    try { new v52(v44); } catch (e) {}
    return v48;
}
f49();
f49();
const v56 = f49();
const v57 = (a58, a59) => {
    return v56 * a59;
};
0.6058227007604853 | 0.6058227007604853;
let v63 = -Infinity;
v63++;
const v67 = new Float64Array(16);
let v68;
try { v68 = v67.entries(); } catch (e) {}
try { v68.next(); } catch (e) {}
255 - 255;
class C72 {
    static [v47] = 0.29489550717955537;
}
true || true;
const v75 = [1.6045920026493271e+308,-5.0,358.53542407847453,-4.6776659891528976,-1000.0,-Infinity];
const o77 = {
    valueOf() {
        return true;
    },
};
v75.length = o77;
class C78 {
}
const o79 = {
};
try { ("Xkz0W").split(v15, -536870912); } catch (e) {}
class C82 {
    set b(a84) {
    }
}
const v85 = new C82();
const v86 = [-Infinity,187698.93506137934,-446.4409125067523,1000000.0,-1000.0,-535.0706534930079];
try { v86(v85); } catch (e) {}
function f88(a89, a90) {
}
for (const v91 in v63) {
    function F92(a94, a95) {
        if (!new.target) { throw 'must be called with new'; }
    }
}
try {
} catch(e96) {
} finally {
}
