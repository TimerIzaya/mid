const v0 = [1e-15,2.0,0.41542260651055707,-7.803828192650981,2.0,-1000000.0];
const v1 = [-5.0];
const v2 = [0.3384914654648853,-216311.53349166678,-1.7385431943385216e+308,-980.6163305399291,1.9905756668196357,-1.7976931348623157e+308,2.220446049250313e-16,-5.0];
const v6 = [9007199254740990,9007199254740990,v0,9007199254740990];
[9007199254740990,1000,v1,v2];
const v8 = [v6,v0];
class C9 {
    #b = 1000;
    set a(a11) {
        try { a11(this); } catch (e) {}
        v8[Symbol.split] = v2;
    }
    static {
        try { new v6(); } catch (e) {}
        const v17 = typeof v0;
        let v19;
        try { v19 = ("bigint").strike(); } catch (e) {}
        const v20 = v17 === "bigint";
        !v20;
        try {
            const t20 = "bigint";
            t20.#b <<= v20;
        } catch(e22) {
            const v23 = e22?.constructor;
            try { new v23(v19); } catch (e) {}
        }
    }
}
const v25 = new C9();
const v26 = new v25();
const v27 = v26?.constructor;
let v28;
try { v28 = new v27(); } catch (e) {}
new v28();
const v31 = 1000 + 127;
Int32Array.prototype = Int32Array;
new Int32Array(1795291268);
function f34(a35, a36) {
    a35.name;
    a36.toSorted();
    return v31;
}
f34.length;
new Promise(f34);
