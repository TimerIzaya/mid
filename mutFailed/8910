const v3 = [-111.89894237867827,-1.7976931348623157e+308,-1.7976931348623157e+308];
const v4 = [Infinity,Infinity,v3,-1.7976931348623157e+308];
[-111.89894237867827,-1.7976931348623157e+308,-1.7976931348623157e+308];
class C9 {
    a = Infinity;
    static get d() {
        try { new this(-111.89894237867827); } catch (e) {}
        try {
            const v13 = new Uint16Array(Uint16Array);
            try {
                v13.#p();
            } catch(e15) {
            }
            v4.flat(-10698);
        } catch(e18) {
        }
        return v3;
    }
    1;
    268435441 = 4294967296;
}
new C9();
new C9();
new C9();
const v23 = new Set();
function F24(a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -1692683933;
    } catch(e28) {
        for (let [v29,v30] of a26) {
            const v32 = new Set();
            let [v33,,...v34] = v32;
            function F35() {
                if (!new.target) { throw 'must be called with new'; }
                for (let v37 = 0; v37 < 32; v37++) {
                    "p" + v37;
                }
            }
            try {
            } catch(e40) {
            }
        }
    }
    try {
    } catch(e41) {
    }
    const v42 = v23[this];
    try {
        new F24(v42);
    } catch(e44) {
    }
}
new F24();
const v46 = [65537,268435441,63298,-5,1235122603];
const v47 = [128,215394418];
v47.entries();
function F49(a51, a52, a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
}
const v55 = new F49();
const v57 = new F49();
11 - 11;
function F61() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v65 = Array(19793);
        for (const v66 of v65) {
        }
        const v67 = [v65,v65,v65,v65,v65];
        [[v67,v67,v67]] >= Uint16Array;
    } catch(e72) {
    }
}
("string").trimStart();
function F80(a82, a83, a84, a85) {
    if (!new.target) { throw 'must be called with new'; }
    const v86 = this.constructor;
    try { v86(1024, 1024, v4); } catch (e) {}
}
v3[3];
let v91;
try { v91 = v57(); } catch (e) {}
v46[v91] = v47;
~0;
v55.__proto__;
-35417 - -35417;
