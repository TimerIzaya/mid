let v0 = "tanh";
const v6 = 10862 * "1811465134";
v6 ^ v6;
let v8 = v0--;
v8 ** "1811465134";
++v8;
function F11(a13) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = "2147483648";
    } catch(e14) {
    }
    try {
        this.b = "1811465134";
    } catch(e15) {
    }
    try {
        this.c = v0;
    } catch(e16) {
    }
    function f17(a18, a19) {
        a19.apply();
        return a19;
    }
    Proxy();
}
new F11(v0);
new F11(v0);
new F11(v0);
[2.0,2.0,1000000.0,1.48619089801553e+308,129.3876175453638];
[-1000000000000.0,-4.0,-1000000000.0,-4.0,-1000000000000.0];
[-Infinity];
const v30 = new Int32Array(Int32Array, Int32Array, Int32Array);
function F31(a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
}
const v35 = new F31(Int32Array, v30);
function f36(a37) {
    let v38;
    try { v38 = v35.resize(v30, F31, Int32Array, a37); } catch (e) {}
    v30.length |= v38;
    return v38;
}
%PrepareFunctionForOptimization(f36);
f36();
%OptimizeFunctionOnNextCall(f36);
f36();
