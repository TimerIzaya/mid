const v0 = [0.9111801525316099,-1.7976931348623157e+308];
const v1 = [-1000000000.0,557115.9890750758,1000000000.0,-1000000000.0,4.874331059426645];
const v2 = [1000000.0,-1000.0,-2.2250738585072014e-308];
class C6 {
    constructor(a8, a9, a10) {
        const v11 = v0.__proto__;
        new Uint32Array(1);
        new Float32Array(255);
        function f18() {
            return f18;
        }
        const v21 = [1613217357,204598905,15977,1122227661,64,-2,-12,536870888];
        const v22 = [-1073741824,1665564361,16526,1805211777,10,-9007199254740990,4,-17063,-1];
        const v23 = [-2.2250738585072014e-308,0.8014728140665155,1.4073101706157717e+308,1.4751052216559766e+308,2.0,-692.9604671107461,-2.220446049250313e-16,2.0];
        const v24 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
        const v25 = [-1.015259194643325e+308,-Infinity,-9.825391401141273,-2.2250738585072014e-308,5.0,-2.2250738585072014e-308];
        class C26 {
            constructor(a28, a29, a30, a31) {
                const v32 = this?.constructor;
                try { new v32(v24, a30, a30, v21); } catch (e) {}
                a29 >>> a29;
                -0.0 >>> -0.0;
                new Date();
                function f46(a47, a48, a49, a50) {
                    const o53 = {
                        get b() {
                            a50[3] = "-26733";
                            for (let v52 = 0; v52 < 24; v52++) {
                            }
                            return a48;
                        },
                        "e": a50,
                        "f": 1073741825,
                        "a": 1073741825,
                    };
                    return o53;
                }
                f46(1073741825, f46(257, 1535195999, 1535195999, "9007199254740991")[1], 1535195999);
            }
            /*
            constructor(a58, a59, a60, a61) {
                const o67 = {
                    "maxByteLength": 2240,
                };
                const v69 = new ArrayBuffer(2240, a59);
                new Uint8ClampedArray(v69);
                this[268435456];
                v23 && this;
                try {
                    v23.length = v25;
                } catch(e74) {
                }
            }
            */
            static 268435439 = v22;
            #c = -2.2250738585072014e-308;
            static 832209355 = 2.220446049250313e-16;
        }
        function F76(a78, a79, a80, a81) {
            if (!new.target) { throw 'must be called with new'; }
        }
        new F76(F76, F76, F76, F76);
        let [] = [];
        const v85 = new Float32Array(4096);
        function f86() {
            return v85;
        }
        new Float64Array(3826);
        new Int32Array(1700);
        new Uint16Array(2128);
        class C99 extends Uint16Array {
        }
        let v100 = 104;
        const v102 = new Uint8ClampedArray(v100);
        const v103 = v102.toLocaleString();
        function F104(a106, a107, a108) {
            if (!new.target) { throw 'must be called with new'; }
            return arguments;
        }
        class C110 extends C99 {
            b;
            constructor(a112, a113, a114, a115) {
                super();
                function f116(a117, a118, a119) {
                    function f121(a122) {
                        a118[5] ||= a112;
                    }
                    this.onmessage = f121;
                    const v125 = new SharedArrayBuffer(35);
                    new BigUint64Array(v125);
                }
                const v129 = [1,40880,1,-65535,3109,268435456,0,-47552,1073741823];
                function f130() {
                    class C131 {
                    }
                    const v132 = new C131();
                    const v133 = [v132,v132,v132,v132,v132];
                    const v134 = [f130,f130];
                    class C135 extends C131 {
                        [v132];
                    }
                    const v136 = new C135();
                    v134.constructor;
                    try { v136.m(v133); } catch (e) {}
                    return f130;
                }
                const v140 = new BigUint64Array();
                try { v129.map(v140); } catch (e) {}
                const v142 = [Infinity,1.0,-1.2272545370579378e+308,-1000000.0,5.0,1.7976931348623157e+308,5.0];
                function F143() {
                    if (!new.target) { throw 'must be called with new'; }
                    try {
                        const v147 = Array(19793);
                        for (const v148 of v147) {
                            function f149() {
                                return f149;
                            }
                            const v150 = /{}(x)(x)(x)\4*a{0}a|b/msy;
                            const v152 = new BigUint64Array();
                            function F153(a155, a156, a157) {
                                if (!new.target) { throw 'must be called with new'; }
                                const v158 = this.constructor;
                                try { new v158(BigUint64Array, v152, v152); } catch (e) {}
                                a157[1];
                                function f162(a163, a164) {
                                    a164 / a164;
                                    arguments[1];
                                    arguments.toString = a163;
                                }
                                try { f162(f149, v150); } catch (e) {}
                                f162(v158, 8077n);
                            }
                        }
                        [v147,v147,v147];
                        [[]] >= Uint16Array;
                    } catch(e175) {
                        [];
                        v142.findLastIndex;
                    }
                }
                const v180 = [Array,Array];
                class C181 {
                    #e;
                    static 3;
                }
                function f182() {
                    const o186 = {
                        m(a185) {
                            return this;
                        },
                        __proto__: 946.0676210033328,
                    };
                    return 946.0676210033328;
                }
                const v189 = -(-7);
                Math.tan(v189 ** v189);
                Reflect.apply(Array.of, v180, v142);
                const v195 = [2082,"function",this];
                const o196 = {
                    "arguments": v195,
                    "type": "function",
                };
                new Worker(f116, o196);
            }
        }
        new C110();
        for (let v199 = 0; v199 < 10; v199++) {
            class C200 {
                #f;
                [v199];
                constructor(a202) {
                    [a202,v100] = v103;
                }
                static [v199];
                /*
                constructor(a204) {
                }
                */
            }
            new C200();
        }
        new C110();
        const o209 = {
        };
        const v211 = [[65535,268435439,-9007199254740990,268435440,1024,19743,5,4]];
        v211.fill();
        function f213() {
        }
        class C214 extends f213 {
        }
        const v215 = new C214();
        class C216 extends C214 {
            #b = v215;
            constructor(a218, a219) {
                super();
                let v220 = 0;
                for (let i = 0; i < 5; i++) {
                    v220 < 7;
                    try {
                        v215.#b;
                    } catch(e224) {
                    }
                    v220++;
                }
            }
        }
        new C216();
        v211.toLocaleString();
        class C228 {
        }
        new C228();
        gc(o209);
        try {
            a8.length = v11;
        } catch(e231) {
        }
    }
    static 969406425;
    [-4.0];
    static [-2.220446049250313e-16];
    c = -4.0;
}
new C6(v2, -4.0, v2);
new C6(v2, -4.0, v0);
new C6(v1, -2.220446049250313e-16, v2);
/(\x60)/guy;
/Axyz{93}+/udims;
/k/gy;
const o238 = {
};
function f239(a240, a241) {
    const o242 = {
    };
    return o242;
}
const v243 = f239();
const v244 = f239();
function F245(a247, a248) {
    if (!new.target) { throw 'must be called with new'; }
    a247.g = a247;
    const v249 = this?.constructor;
    try { new v249(f239, v243); } catch (e) {}
}
new F245(o238);
new F245(v244);
