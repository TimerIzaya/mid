function f0() {
}
function f1() {
    return f1;
}
f0 - f0;
function f3() {
}
new Int8Array(230);
do {
} while (0 < 0)
new Uint8ClampedArray(2740);
function f15(a16, a17) {
    return 536870912;
}
function F20(a22) {
    if (!new.target) { throw 'must be called with new'; }
    const v23 = this.constructor;
    v23.e = v23;
    try { new v23(); } catch (e) {}
    this.g = -1;
    this.f = a22;
    this.h = a22;
}
try { F20(-143547321); } catch (e) {}
try { F20.bind(-143547321); } catch (e) {}
const v27 = new F20(-1);
const v28 = new F20();
let v29 = new F20(-1);
class C30 extends F20 {
    #p(a32, a33) {
        const v34 = a32?.[32];
        Object.defineProperty(v28, v27, { writable: true, configurable: true, value: F20 });
        a32.d = this;
        return v34;
    }
    [-1];
    static {
        this.n = F20;
        super[this];
        let v38;
        try { v38 = this["n"](); } catch (e) {}
        const o39 = {
        };
        o39.e = o39;
        const v41 = new Proxy(v29, o39);
        v41.f;
        v41.e = v41;
        v29 = this;
        const o43 = {
            "e": v41,
            ...v38,
            65537: o39,
        };
    }
}
new C30();
const v46 = new Int8Array(799);
[Int8Array,230,v46];
[[f0,v46,Int8Array],Int8Array];
function f50() {
    const o53 = {
        get b() {
            super[this] = this;
            return f50;
        },
        ..."b",
    };
    return o53;
}
-2.241327492701015 & 9007199254740991;
const v59 = f3();
const v60 = f3();
function F61(a63) {
    if (!new.target) { throw 'must be called with new'; }
    a63[128] = a63;
    try {
        this.f = a63;
    } catch(e64) {
    }
    try {
        this.h = a63;
    } catch(e65) {
    }
    try {
        this.d = v59;
    } catch(e66) {
    }
}
F61.e = F61;
const v67 = new F61(v60);
v67.d = v67;
try {
    new Map("268435441");
    class C69 {
        o(a71, a72, a73, a74) {
        }
    }
    class C75 {
    }
    const v76 = new C75();
    for (const v78 of `match${v76}-20124`) {
        class C79 {
        }
        const v80 = new C79();
        this.__proto__ = v80;
    }
} catch(e82) {
}
