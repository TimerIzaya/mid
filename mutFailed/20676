class C1 {
}
const v2 = new C1();
function f3() {
    try {
        C1.fuck(Infinity, Infinity, 1983287236, [1983287236,Infinity,C1,v2,4294967297n]);
    } catch(e8) {
    }
    return C1;
}
v2.constructor = f3;
const v9 = v2?.constructor;
try { new v9(); } catch (e) {}
const v13 = [-20096,4294967296,-65537,-2];
const v14 = [-1947047520];
const v15 = [v14,v14,v14,v13];
[v15];
for (let v17 = 0; v17 < 25; v17++) {
}
const v18 = [4294967297n,4294967297n,-664855695n,4294967297n];
const v20 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v21 = [601759695];
const v22 = [1073741824,1073741823,1376142744,1073741825];
function f23(a24, a25, a26, a27) {
    function f29() {
        const v33 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v35 = Symbol.toPrimitive;
        const o42 = {
            toString(a37, a38) {
                const v39 = a27 && Float64Array;
                function f40() {
                    a37 *= v35;
                    return Float64Array;
                }
                Object.defineProperty(v39, "valueOf", { value: f40 });
                v39 <= v33;
                return this;
            },
        };
        const o65 = {
            "c": -4294967297n,
            [4294967297n](a45, a46) {
            },
            "c": v21,
            valueOf(a48, a49) {
            },
            "b": -4294967295,
            [-4294967297n](a51, a52, a53, a54) {
                [0.8549471140289917,-3.0,4.0,-5.0,-2.0,-1.7976931348623157e+308,5.31145436861636,NaN,1.2778157707013417e+308];
                [-1.7976931348623157e+308,-4.047862669744725e+307,-2.2250738585072014e-308,0.790769162254034,0.024752255798642486,640440.6769019293,-2.0];
                return [923.3408061449261,-6.350919708227568e+307,-2.220446049250313e-16,0.04850379751250988,4.009495502233909];
            },
            "e": -4294967295,
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v20,
            ...v21,
            "type": "Vre",
            ..."Vre",
            valueOf(a59, a60) {
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            toString(a62, a63, a64) {
                return a24;
            },
            5: -4294967295,
            6: -268435456,
        };
    }
    f29();
    const v68 = new Int8Array();
    v68.buffer.slice(2147483648);
    %OptimizeFunctionOnNextCall(f29);
    let v73;
    try { v73 = v22["find"](..."find", a27, ...v21, ...v22, ...4294967297n); } catch (e) {}
    v73 <= a26;
    return arguments;
}
const v75 = [-664855695n,-1n,v18];
[v75,4294967297n,v75];
[4.044889949319078,2.220446049250313e-16,0.11943717421894506,NaN,2.0,0.9951791895140893,0.10790775606159808,-1e-15];
const v79 = new Float64Array();
const v80 = v79.buffer;
try {
    v80.resize(Float64Array);
} catch(e82) {
}
const v83 = [-2.0,0.9149683286534632,-2.0,2.2250738585072014e-308,-1.0,0.4612744292678861,0.35853399464283164,-1.0910073238800406e+308,-1000000.0,0.3492363114015111];
[-4.130032083648296];
function f88() {
    return v83;
}
function f89(a90) {
    function f91() {
        return v15;
    }
    return Float64Array;
}
f88.toString = f89;
const v94 = /(l{z})/s;
function F95(a97) {
    if (!new.target) { throw 'must be called with new'; }
    const v98 = this.constructor;
    try { new v98(v94); } catch (e) {}
    a97.b = a97;
}
function f102(a103, a104, a105, a106) {
    const v107 = a103.length;
    a103.BYTES_PER_ELEMENT = a103;
    let v108 = 3 | a104;
    v108++;
    const v110 = a103 / a103;
    v110 % v110;
    a104 < a103;
    const o116 = {
        n(a114, a115) {
            return v107;
        },
    };
    return a105;
}
URIError(f88);
