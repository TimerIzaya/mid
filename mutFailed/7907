class C3 {
    m(a5, a6) {
        new BigInt64Array(512);
        new Uint8Array(255);
        new Int8Array(8);
        new Float64Array(7);
        new Int32Array(167);
        const v24 = new Uint8Array(191);
        return v24;
    }
}
new C3();
const v26 = new C3();
function f27() {
    function f28() {
        return v26;
    }
    return f28;
}
Object.defineProperty(v26, "valueOf", { writable: true, enumerable: true, get: f27 });
const v32 = new C3();
class C33 {
    2627;
    o(a35, a36, a37) {
        const t24 = "POSITIVE_INFINITY";
        t24[3] = a35;
        return a36;
    }
    #h = "E";
    static #m(a39, a40) {
        function f42() {
            return f42;
        }
        const v44 = new Uint16Array(f42);
        v44["filter"](f42);
        return v32;
    }
}
const v49 = new C33(v32, "E", C33);
let v50 = new C33();
new C33(C33, v49);
v50 = v49;
try { v26.m(); } catch (e) {}
const v62 = [-2.14860426829137,-9.58586124400876,2.0,2.2250738585072014e-308,0.0,-3.0,Infinity,-317.1953498647964,2.0];
v62[Symbol.toPrimitive] = f27;
class C65 extends Int16Array {
    [v62];
}
+v26;
try {
    v49.f = 10;
} catch(e67) {
}
