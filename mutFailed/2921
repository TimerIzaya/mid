let v3 = new Uint8Array(2);
const v6 = new Float64Array(88);
const v9 = Symbol.toStringTag;
v6.byteLength ^= 127;
let [] = v6;
const v12 = !-7;
-7 && -7;
const v14 = v3 | v12;
+v3;
-7 % v14;
v3--;
Math.max(v9);
new Uint8Array(127);
const v22 = new WeakSet();
new Map();
const v25 = [7,-268435456,9007199254740990];
[832370613,-2147483649,65535,-1,0,-2063581615,-34368];
[-9223372036854775808,255,-2,14,2147483649];
const v32 = [4294967295];
Reflect.apply(v22.has, v25, v32);
function F35(a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a37;
    } catch(e39) {
    }
    try {
        this.c = a38;
    } catch(e40) {
    }
}
new F35(1461938365, Reflect);
new F35(v3, v3);
new F35(1461938365, v9);
const v46 = new Uint32Array(64);
v46.indexOf(v46, 64);
