~15;
let v5 = -9;
v5 & v5;
const t2 = 474.8269728531641;
t2[109] = 474.8269728531641;
const v11 = new Int16Array(255);
const o12 = {
    ...v11,
};
v5 = -2147483649;
class C20 {
}
%OptimizeFunctionOnNextCall(-2);
for (let v21 = 0; v21 < 10; v21++) {
    const v22 = [1929306256,-35796];
    try { v22["36049"](); } catch (e) {}
}
1 > 1;
const v28 = [Infinity];
("function").normalize();
const t17 = 15;
const v34 = new t17(-9340, 2147483649);
const t22 = 15;
const v35 = new t22(1073741823, v34);
function F36(a38, a39, a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
}
const v42 = new F36(v34, v35, -9340, 1073741823);
o12.fuck(v42, 1136);
class C45 {
    [v28];
}
try { new C45(); } catch (e) {}
new C45();
