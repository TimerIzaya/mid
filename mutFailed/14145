class C3 {
    constructor(a5, a6) {
        const v7 = a6 << a6;
        a6[C3] = v7;
        const t4 = "function";
        t4[65536] = v7;
        ({"f":a6,"length":C3,} = "function");
        const v8 = [a6,128.2012592840415,a5];
        const v9 = [a5,a5,v7,9];
        const v10 = [a5,128.2012592840415];
        const v11 = 9 != a6;
        const v12 = [v11,128.2012592840415,a6,a6,v11];
        let v13;
        try { v13 = ("function").charAt(a5); } catch (e) {}
        function F14(a16, a17, a18) {
            if (!new.target) { throw 'must be called with new'; }
            let v19;
            try { v19 = v8.values(); } catch (e) {}
            v19 >> v19;
            v10[126] = a18;
            v9.length;
            C3 instanceof v13;
            try {
                this.b = a16;
            } catch(e23) {
            }
        }
        new F14(v12, 9, v12);
        const v25 = new F14(9, 128.2012592840415, v12);
        new F14(a5, v13, v25);
    }
}
const v27 = new C3(128.2012592840415, 9);
const v28 = new C3(128.2012592840415, C3);
new C3(v28, 9);
function f33() {
    return "string";
}
["string",v27];
[v27,v28,[9,"tanh",128.2012592840415]];
const v40 = new BigUint64Array();
function f41(a42, a43) {
    const o45 = {
        get e() {
        },
    };
}
class C46 {
    static toString(a48) {
    }
    set a(a50) {
        const o51 = {
        };
        const o52 = {
        };
        const o53 = {
        };
        const o54 = {
        };
    }
}
function f55(a56) {
    for (let i = 0; i < 10; i++) {
    }
}
[-0.0,3.5501749464532004,-0.0,-2.220446049250313e-16,0.7626441105891978,-585.9055525866645,1e-15,1000000.0] ** "IxTD";
function F60(a62, a63, a64) {
    if (!new.target) { throw 'must be called with new'; }
}
const o65 = {
};
function f66() {
}
const v67 = `
    try {
    } catch(e68) {
        v40[1] = 1e-15;
        const v71 = v28[Symbol.isConcatSpreadable];
        function f72() {
            return v71;
        }
    }
`;
