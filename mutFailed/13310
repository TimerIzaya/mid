new BigUint64Array(4);
BigUint64Array + 3875;
new Int32Array(3875);
new Float32Array(2877);
const v12 = new Uint16Array(3261);
v12[1714];
const v16 = new Float64Array(8);
const v19 = new BigUint64Array(16);
try { v19.filter(v16); } catch (e) {}
const v23 = Float32Array?.constructor;
try { new v23(3875); } catch (e) {}
const v25 = new Float32Array();
function f27(a28) {
}
function f29(a30) {
    const v33 = Array(1000);
    v33.indexOf();
    return v33;
}
f27[Symbol.toPrimitive] = f29;
f27.name;
Set.prototype;
function F40(a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = this;
    try {
        this.e = this;
    } catch(e44) {
        for (let [v45,v46] of v25) {
        }
    }
    f27--;
    Math.asin();
    this.h = "-185650492";
    try {
        new F40();
    } catch(e52) {
    }
}
new F40();
new F40();
