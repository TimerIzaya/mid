class C3 {
    e = C3;
    constructor(a5) {
        a5 - a5;
        try {
            const o7 = {
            };
            o7.e = o7;
            this.fuck(o7, true, true);
        } catch(e10) {
        }
    }
    #b;
}
C3.g = C3;
new C3(-270158.87158814794);
new C3(C3);
const v13 = new C3(-270158.87158814794);
v13.e = v13;
[0.8175540896466426,717.6681581387586,2.0,-825708.6909053947,-5.0,2.0,0.7922494299887833,-2.4027806974103587,5.0,-1000000000.0];
const v15 = [-1000.0,-265.5697688983174,-1000.0,209.06956278322673,0.0,-1000000000.0,-1000000.0,-1000000000.0,1.1236875399273347e+308];
[0.10684025679479092,-112249.3385586096];
-3680;
Uint16Array.f = Uint16Array;
new Uint16Array(3680);
BigUint64Array.name;
new BigUint64Array(3680);
try { new Int16Array(v13, C3, C3); } catch (e) {}
new Int16Array(49);
const v29 = [-53613,268435440,268435440,2,-65536,-2147483647];
let v30;
try { v30 = v29.entries(); } catch (e) {}
const v31 = [8];
const v32 = [-1024,-2147483647,-37738,-2,21596,2147483649,9007199254740992,-2039218916];
class C33 {
    static #f;
    static set f(a35) {
        a35(this, this, a35, v31);
    }
    constructor(a38) {
        this.e = v31;
    }
}
const v39 = new C33(v31);
v39.e;
new C33(v32);
new C33(v32);
4294967295 >>> 4294967295;
let v46;
try { v46 = v15.reduceRight(4294967295, v32, C33); } catch (e) {}
v30[6] ||= -10;
function f47(a48, a49, a50, a51) {
    const v52 = v31 in v29;
    try { v46(...v31, ...v29, v32, ...v52); } catch (e) {}
    return f47;
}
v30();
