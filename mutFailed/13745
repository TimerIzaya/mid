function f0() {
}
const v3 = new Uint8ClampedArray(15);
3229 >>> 3229;
f0();
const v8 = v3.byteOffset;
try { v3.includes(Uint8ClampedArray, 15); } catch (e) {}
f0();
%PrepareFunctionForOptimization(f0);
f0();
f0();
%OptimizeFunctionOnNextCall(f0);
f0();
const v14 = new Uint16Array(3229);
v14[884] = v14;
f0 / 94;
new Int8Array(v8);
104745.77459638403 <= 104745.77459638403;
1.5068689610651608e+308 - 1.5068689610651608e+308;
1.2764750271615415e+308 / 1.2764750271615415e+308;
const v26 = 22897025n ^ 22897025n;
v26 * v26;
-11n < -11n;
const v31 = [4096,1000,17593,14,569949084,536870888,3,4];
v31[0];
const v35 = new Uint32Array(9, 9, 9);
let v36;
try { v36 = v35.join(Uint16Array); } catch (e) {}
v36[71];
v31[1855803377] = v35.buffer;
v31.length = v14;
