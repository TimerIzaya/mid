("by").normalize();
const v6 = new Map();
function f7(a8, a9) {
    const o10 = {
        [a8]: v6,
        146: v6,
    };
    o10[146];
    return Map;
}
for (let v12 = 0; v12 < 790; v12++) {
    f7();
}
class C14 {
    constructor(a16, a17) {
        const v18 = this.a;
        let v19;
        try { v19 = new a16(a17, a17, a17, v18); } catch (e) {}
        super.e = -1.0;
        class C20 {
        }
        const v21 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
        const v23 = [];
        class C24 {
            constructor(a26, a27) {
                const v28 = a26?.filter;
                try { new v28(); } catch (e) {}
                try { a27.find(C20); } catch (e) {}
                a27[2];
                const v32 = /Ia[a]/uims;
                try { v32.toString(); } catch (e) {}
                const v34 = /W(jy2)/udy;
                const v35 = v34?.toString;
                try { new v35(); } catch (e) {}
                v34.flags;
                const v38 = /(u4(?:a?)*)/gudimsy;
                const v41 = new Uint8Array(v38, C24);
                const v43 = new Uint32Array();
                function f44(a45, a46, a47, a48) {
                    const o52 = {
                        ...v41,
                        n(a50, a51) {
                            v43[a45] = v43;
                        },
                    };
                    const v53 = o52.__defineSetter__;
                    try { v53(v21, v38); } catch (e) {}
                }
                for (let v55 = 0; v55 < 500; v55++) {
                    f44(Uint8Array, 2, v55);
                }
                for (let v57 = 0; v57 < 5; v57++) {
                    v23["p" + v57] = v57;
                    const o60 = {
                    };
                    o60.d = o60;
                    const v62 = new Uint8ClampedArray(1000);
                    v62.includes(undefined);
                }
            }
        }
        let v65 = delete this[a16];
        ++v65;
        -1.0 instanceof v19;
    }
    static [-1.0] = 1907326993;
    #d = -2.0;
    [-1.0] = -2.0;
}
new C14(-1.0, -2.0);
new C14(C14, -2.0);
new C14(1907326993, -1.0);
C14?.constructor;
function F76(a78) {
    if (!new.target) { throw 'must be called with new'; }
}
const v79 = new F76();
try {
    const o81 = {
    };
    o81.h = v79;
    o81.e = 4096;
} catch(e82) {
}
function f85() {
    return f85;
}
class C86 extends f85 {
    constructor(a88, a89, a90, a91) {
        super();
        const v93 = [BigUint64Array];
        try {
            new BigUint64Array(v93);
        } catch(e95) {
        }
        function f96() {
            const t96 = [];
            t96[6] = 4294967295;
            const o101 = {
                set b(a100) {
                },
            };
            return 4294967295;
        }
        for (let v102 = 0; v102 < 5; v102++) {
            f96();
            %OptimizeFunctionOnNextCall(f96);
            const v105 = Math.cbrt();
            v105 % v105;
            const v107 = [-8,127,65535];
            const v108 = [7,2147483648,1073741824,-1427988041,2,9];
            const v109 = [-1000000000000.0,-2.0,1000000000000.0,0.901537490064662,-1.7976931348623157e+308,-385.3512032399924];
            const v110 = [-1e-15,0.20747719464528913,-5.0];
            function F111(a113, a114) {
                if (!new.target) { throw 'must be called with new'; }
                const v115 = this.constructor;
                try { new v115(v109); } catch (e) {}
                a113[5] = a113;
                for (const v117 of v108) {
                    let v118 = delete v107?.length;
                    Math.min(v118);
                    --v118;
                    Math.acos(v110 * v118);
                }
            }
        }
    }
}
new C86();
