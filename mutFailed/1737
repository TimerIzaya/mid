class C3 {
    static {
        this.length = this;
        function f5(a6, a7) {
            const o11 = {
                set b(a9) {
                    this.b;
                },
            };
            o11.b = o11;
        }
        const t11 = [-554.3883745381902,874.2208688504531,0.0,1.7976931348623157e+308,1e-15];
        t11[8] ^= -297927.3051276769;
        const v19 = new Uint8Array();
        try { v19.subarray(3, 2); } catch (e) {}
        const v23 = new Uint32Array();
        function f24(a25, a26, a27, a28) {
            ~a25;
            a26 >> a26;
            ~a27;
            const o35 = {
                "f": 2,
                "b": a25,
                "c": a28,
                ...v19,
                n(a33, a34) {
                    v23[a25] = v23;
                },
            };
        }
        f24(2, 2, 1, 2);
        Math.max(0.33915327407583795);
        const v39 = 0.33915327407583795 % 0.33915327407583795;
        v39 <= v39;
        Math.log10(3);
    }
    static #n(a43, a44, a45, a46) {
        this[257] *= 64;
    }
    static #f;
    [64] = "boolean";
    3 = 64;
    h = 64;
    ["-65535"] = 64;
}
try { new C3(); } catch (e) {}
new C3();
new C3();
const v52 = new C3();
const o59 = {
    toString(a56, a57, a58) {
        Object.defineProperty(v52, a56, { writable: true, configurable: true, set: Array });
        return Array;
    },
};
Uint8Array.e = Uint8Array;
function f61(a62, a63, a64) {
    const o72 = {
        n(a66, a67, a68) {
            return f61;
        },
        valueOf(a70, a71) {
            return a71;
        },
    };
    try { o72.n(C3, 64, o72); } catch (e) {}
    return o72;
}
f61.arguments = f61;
const v74 = f61();
const v75 = v74?.n;
try { new v75(v74, "boolean", v74); } catch (e) {}
for (const v77 in v74) {
}
new Uint8Array(908);
1064 - 1064;
new Uint16Array(1064);
const v85 = /\p{Script=Greek}(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/guy;
for (let v87 = 0; v87 < 25; v87++) {
    ("-65535")[164];
    const t79 = "65537";
    t79.__proto__ = v85;
}
new Int16Array(2);
let v90 = 5n;
v90--;
3225 !== 3225;
const v95 = new Uint16Array(3225);
try { v95.reduce(o59); } catch (e) {}
class C97 {
}
const v98 = C97?.__lookupSetter__;
try { new v98(2); } catch (e) {}
const v100 = new C97();
const v101 = v100?.constructor;
try { new v101(); } catch (e) {}
function f104(a105, a106, a107, a108) {
    const o111 = {
        "g": a105,
        [-1]: C97,
        set b(a110) {
        },
        1025549261: v100,
    };
    return -5.008255649855068e+307;
}
f104.caller = f104;
for (const v112 of v95) {
    v112[3] = v90;
    9007199254740991 * v112;
}
