let v4 = -5;
function f6() {
    return Infinity;
}
class C7 {
    static #p(a9, a10) {
        for (let v11 = 0; v11 < 32; v11++) {
            "p" + v11;
            this[a10] = v11;
        }
        return -7.899072950662801e+307;
    }
    constructor(a15, a16, a17, a18) {
        v4 &= v4;
        try { a15(a15, this, -7.899072950662801e+307); } catch (e) {}
    }
    #e;
}
const v20 = new C7(v4, -6, 2147483647, 2147483647);
new C7(v20, v20, v4, -6);
const t20 = -6;
new t20(2147483647, 2147483647, v4, v4);
function F26() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        for (const v31 of Array(19793)) {
        }
        const t27 = [];
        t27[Symbol.toPrimitive] = Array;
    } catch(e35) {
    }
}
new F26();
class C37 {
}
try { ("e").toString(); } catch (e) {}
