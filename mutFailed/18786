function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a5;
    } catch(e6) {
    }
}
new F3(-12864);
new F3(1069150050);
new F3(1069150050);
[2.0,842476.7637018093,2.2250738585072014e-308,1000000000.0,-7.025851942833725,-1.2811315614604385e+308];
[5.312944273649263e+307,-1.0];
[2.220446049250313e-16];
class C21 {
    static #p(a23) {
        function f24() {
            return a23;
        }
    }
}
const v26 = new Map();
const v27 = v26?.constructor;
try { new v27(); } catch (e) {}
const v29 = [1073741824,1073741823,1376142744,1073741825];
function f32(a33, a34) {
    const o35 = {
    };
    o35?.__defineSetter__;
}
f32();
const v38 = f32();
let v39 = 1000000000000.0;
v39--;
function f43(a44, a45) {
    const o46 = {
        [10000n]: a45,
    };
}
function F48(a50, a51, a52, a53) {
    if (!new.target) { throw 'must be called with new'; }
    const v54 = this.constructor;
    try { new v54(758.9371938038303, this); } catch (e) {}
    this.c = a50;
}
const v56 = new F48(-2.0);
const v57 = new F48(-1.093925554716035e+308);
function f58(a59) {
    new F48("h", v38, f43, a59);
    v57[Symbol.species] = "uaWp";
    return v29;
}
v57.toString = f58;
const v63 = v57 in v56;
v63 || v63;
const t53 = [];
t53.length += 1.0;
try { undefined(); } catch (e) {}
for (const v70 in "1024") {
}
