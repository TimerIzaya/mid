class C1 {
    static h;
    static #m() {
        for (let v3 = 0; v3 < 32; v3++) {
            this["p" + "p"] = v3;
        }
        return this;
    }
    static [false];
    static #g = false;
    2 = false;
    2621;
    #e = false;
    static 7;
}
const v6 = new C1();
const v7 = new C1();
const v8 = new C1();
class C9 extends C1 {
    static get g() {
        let v11;
        try { v11 = this(); } catch (e) {}
        const v12 = +v11;
        v7?.[536870912];
        super[v12];
        const v15 = [65535,-4294967297,-1993213612];
        [256,-1801245448,2073805506,-15,-3,4,3];
        [2] / v15;
        return v6;
    }
    1995 = v8;
    static 183;
    #g = false;
    [false] = v6;
}
const v19 = new C9();
const v20 = new C9();
new v20();
class C22 extends false {
    constructor(a24, a25) {
        super();
        const v26 = ~v8;
        try { a24(a24, v26, this, v26, a24); } catch (e) {}
        v6[a25];
        const v29 = super.g;
        try {
            a25.fuck("404127928", v29);
        } catch(e32) {
        }
    }
    static #b;
    static [v6] = v19;
    static h;
}
const v33 = new C22(v8, C1);
new C22(v8, v33);
new C22(v20, v6);
const v40 = 522675525n << 522675525n;
v40 + v40;
