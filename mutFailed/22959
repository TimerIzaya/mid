let v1 = new Date();
function f2(a3, a4) {
    const o12 = {
        ...Date,
        __proto__: a3,
        get g() {
        },
        "e": v1,
        "c": a3,
        "g": Date,
        m(a7, a8) {
            e = v1;
            v1 /= a3;
            [8,411863830,7,1073741824,-128,2147483648,3,-65536,255];
            [257,2559,4,1073741824,-63160,-33416,2,-832,2,-1876436548];
            [-15,249645895,651,-6,8,6,-7065,-5320];
            return this;
        },
    };
    return o12;
}
const v13 = f2(f2, Date);
const v14 = f2(v1, v13);
const v15 = f2(Date, v14);
class C16 {
    static o(a18, a19) {
        return [] >>> v15;
    }
    constructor(a23, a24, a25, a26) {
        try {
            f2(a23, [a23,f2,v13,Date,a26]);
            const o34 = {
                get a() {
                    eval("-9007199254740990");
                    return 6;
                },
            };
        } catch(e35) {
        }
    }
}
const v36 = new C16(v13, v14, v13, C16);
new C16(v1, v14, v14, Date);
new C16(v15, v14, v36, v15);
[65536,1000,-2,-256,128,-1981575740,512,65536,129,-11];
Array().forEach();
function f43() {
    Int8Array.b = Int8Array;
    return f43;
}
f43();
[561614789,1,742155048,1652853268,65535,512,-1,2147483649,1];
[9007199254740992,1073741825,-15,-7219,5];
function F52() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -1052649622;
        const v57 = -(-7);
        function f60(a61) {
            const o62 = {
                ..."toStringTag",
            };
            return o62;
        }
        class C63 extends f60 {
            ["15036"];
        }
        new C63();
        Math.tan(v57 ** v57);
    } catch(e67) {
    }
}
function F68(a70, a71) {
    if (!new.target) { throw 'must be called with new'; }
    const v72 = this.constructor;
    v72.length = v72;
    try { new v72(F52, a70, F52, v72); } catch (e) {}
    new F52();
}
function f75(a76, a77, a78, a79) {
    const o80 = {
    };
}
f75(-9007199254740992);
const v82 = [];
function f83(a84, a85) {
    a84 <= v82;
    return f83;
}
new Promise(f83);
