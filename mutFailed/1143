function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -4294967295;
    } catch(e3) {
    }
    try {
        this.h = -4294967295;
    } catch(e4) {
        Promise.reject(Promise);
    }
    with (this) {
        c - (c ^ -4294967295);
    }
    try {
        this.f = -4294967295;
    } catch(e10) {
    }
}
const v11 = new F0();
new F0();
new F0();
function f14() {
    return v11;
}
new Date();
[127.58095334419704,4.0,5.71083397319828,1.9998876853157128,-1e-15,755274.1137178123];
[-9.472838708076946,9.054784803519617e+307,-1000000.0,-340836.45020956977];
const v19 = [-479045.5966651674,110858.09327998804,1000000000000.0,-0.0,-1000000000000.0,0.5270049214700211];
new Set();
[-2.50297093305986,0.5625201446728753,2.220446049250313e-16];
[-5.0,-1.4539832225920508e+308,0.04333402153002086,2.0,-1.7976931348623157e+308,-1.0,2.2250738585072014e-308,8.000478840969075e+306];
[2.220446049250313e-16,-1000000.0,1.0,-1000000000.0,-4.0,1.7976931348623157e+308];
new Set();
new Int16Array(-193158236);
new Uint8ClampedArray(127);
new ArrayBuffer(2522);
const o38 = {
    "type": "minor",
};
gc(o38, Uint8ClampedArray, v19, F0);
