const v0 = /(TVLK)/vds;
const v1 = /z\x0f+/gdms;
function f2() {
    2.4055206643129257 ** -1.5876750346470025e+308;
    -9223372036854775808n - -9223372036854775808n;
    for (let i10 = 0, i11 = 10; i10 < i11; i10++, i11--) {
    }
    return f2;
}
f2();
const v20 = /[xyz]M+/gudmy;
function f21(a22, a23) {
    function f24() {
        let v25 = 852.2904873570058;
        function f26() {
            const v27 = [];
            v27[6] = v27;
            const o30 = {
                set b(a29) {
                },
            };
            return v25;
        }
        for (let v31 = 0; v31 < 5; v31++) {
            f26();
            %OptimizeFunctionOnNextCall(f26);
        }
        const o37 = {
            m(a34, a35) {
                return v25++;
            },
        };
        return o37;
    }
    %PrepareFunctionForOptimization(f24);
    const o47 = {
        "b": a23,
        "e": v1,
        o(a39) {
            const o40 = {
            };
            "-861465563" * a23;
            const v46 = new Proxy(a23 = this, o40);
            super[v1] = v46;
            return a22;
        },
    };
    for (let i = 0; i < 25; i++) {
        new Uint8ClampedArray(129);
        new Uint8ClampedArray(Date);
        const o64 = {
            toString(a61, a62) {
                new Date(256);
                return this;
            },
        };
        return o64;
    }
    const o66 = {
        "type": "minor",
    };
    new Int8Array(1073741823);
    return o47;
}
f21(v0, v20);
const v73 = new Uint32Array(9);
new Int8Array(v73);
new Date();
("128").fontsize();
const v82 = new Int32Array(1024);
Reflect.construct(Int32Array, [v82]);
const v86 = f21(v0, v1);
const v87 = f21(v20, v0);
class C88 extends f21 {
    m(a90, a91, a92) {
        try {
            const o93 = {
            };
            class C95 {
            }
            if ("log1p") {
                try { C95.m(); } catch (e) {}
            }
        } catch(e97) {
        }
    }
    6;
    #b;
    constructor(a99, a100) {
        super(f21, a100);
        for (const v101 in this) {
            v86 instanceof f21;
            a100[0] = v101;
        }
        v0[this] = this;
        this[a100] = this;
        v20.multiline;
        try {
            v1.length = 1073741823;
        } catch(e105) {
        }
    }
}
const v107 = new C88(v86, v87);
new C88(v107, v107);
new C88(v107, v0);
function f110(a111) {
    const o113 = {
        "execution": "async",
        "type": "128",
    };
    return f110;
}
const o116 = {
    "type": "function",
};
new Worker(f110, o116);
