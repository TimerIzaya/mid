function F4() {
    if (!new.target) { throw 'must be called with new'; }
    this.c = 1163987790;
}
new F4();
new Float32Array(9);
new BigInt64Array(84);
const o14 = {
    "type": "minor",
};
const v16 = new Float64Array();
delete v16[-1.5286188982640463e+308];
[27244,10000,1073741824];
[-1,-2147483649,60777,16,4294967296];
const t11 = [-9007199254740992,33274,1368965366,6,-59703,-4294967297];
t11.length -= 84;
const t16 = "minor";
t16[v16] ^= 84;
new BigInt64Array();
const v27 = new Uint32Array();
try { v27.map(v27); } catch (e) {}
new Float32Array(4096);
new Float32Array(7);
[[]];
const v36 = [63570];
const v38 = [-9.109766292519199,-1.3811947064786667e+308,0.09110445091766706,5.0,-385647.03832885576,0.2888431306471019];
try { v38.filter(59890n); } catch (e) {}
function f40() {
    function F42(a44, a45) {
        if (!new.target) { throw 'must be called with new'; }
    }
    let [] = [];
    for (let v48 = 0; v48 < 10; v48++) {
        (759956410).__defineGetter__;
    }
    const v50 = new ArrayBuffer(ArrayBuffer, ArrayBuffer);
    new Int8Array(v50);
    return f40;
}
f40();
try {
    new BigInt64Array(v36);
} catch(e56) {
}
