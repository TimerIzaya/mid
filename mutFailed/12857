const v0 = /[QE[^123]\P{gc=Decimal_Number}]/vdim;
/(x)(x)(x)\3j/vmsy;
const v2 = /anA\xed\xa0\x80a\W^xxx$/guisy;
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = v2;
    } catch(e6) {
    }
    try {
        this.d = v0;
    } catch(e7) {
    }
    try {
        this.e = v0;
    } catch(e8) {
    }
}
const v9 = new F3(v0);
let v10 = new F3(v2);
new F3(v0);
class C15 extends F3 {
    #h = 1073741825;
    [v0] = -2;
    static set e(a17) {
        if (v0 == F3) {
            v10 = this;
        } else {
            const v20 = C15.iterator;
            const o29 = {
                [v20]() {
                    let v22 = 10;
                    const o28 = {
                        next() {
                            v22--;
                            const v26 = v22 == 0;
                            const o27 = {
                                "done": v26,
                                "value": v22,
                            };
                            return o27;
                        },
                    };
                    return o28;
                },
            };
        }
    }
}
new C15();
new C15();
new C15();
class C33 {
    constructor(a35, a36) {
        function f37(a38) {
            function f39(a40) {
            }
            const v43 = new Uint16Array(1024);
            v43[7] = v43;
            return this;
        }
        const o46 = {
            "type": "function",
        };
        new Worker(F3, o46);
    }
}
const v48 = new C33();
new v9(v48, C33);
new C33();
