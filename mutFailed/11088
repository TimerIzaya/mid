class C3 {
    constructor(a5) {
        try {
            super.getDay(this, this, a5, a5, "a");
        } catch(e7) {
        }
    }
    n(a9, a10) {
        const o11 = {
            "a": a9,
            10: "a",
        };
        a10 instanceof a9;
        const v14 = Symbol.iterator;
        const o23 = {
            [v14]() {
                let v16 = 10;
                const o22 = {
                    next() {
                        v16--;
                        v16 == 0;
                        const o21 = {
                            "done": C3,
                            "value": v16,
                        };
                        return o21;
                    },
                };
                return o22;
            },
        };
        return "a";
    }
}
const v24 = new C3(C3);
new v24(C3);
new C3(C3);
new BigUint64Array(512);
new Int16Array(16);
new Int16Array(512);
function F38(a40, a41, a42) {
    if (!new.target) { throw 'must be called with new'; }
    const v43 = this.constructor;
    try { new v43(); } catch (e) {}
    this.h = -6.336273045214518e+306;
    this.g = -1.7976931348623157e+308;
}
const v46 = new Uint16Array();
function f48() {
    let v51 = 257828.6336153492;
    v51--;
    let v53 = -4294967296;
    class C54 {
        static #m(a56) {
        }
    }
    const v57 = new C54();
    [-13,8,-1073741824,-9007199254740990,536870889,47670,-36072,9,268435441,1];
    new C54();
    const v60 = new C54();
    const v61 = [v60];
    new BigUint64Array(2141);
    let v64;
    try { v64 = v61.map(v46); } catch (e) {}
    const v65 = [];
    for (let i67 = 0; i67 < 2, v64; v53++) {
        new F38(undefined, v57, undefined);
    }
    class C75 extends C54 {
    }
    BigUint64Array.prototype = C75;
    const v76 = v65.constructor;
    !v76.isArray();
    class C79 extends v76 {
    }
}
%PrepareFunctionForOptimization(f48);
f48();
%OptimizeFunctionOnNextCall(f48);
f48();
