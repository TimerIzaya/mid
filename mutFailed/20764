class C3 {
    [19273];
    constructor(a5, a6) {
        a5 << a5;
        a6 + a6;
        this[19273] = this;
        a6 >>> a6;
        const v11 = 3768 + 3768;
        Uint32Array.length = Uint32Array;
        const v13 = new Uint32Array(3768);
        try { v13.join(v11); } catch (e) {}
        try { Int32Array(C3, this, this); } catch (e) {}
        new Int32Array(7);
        new Int8Array(5, Int32Array);
    }
}
C3.name = C3;
new C3(64, 19273);
const v23 = new C3(19273, 19273);
v23[19273] = v23;
v23[19273] = v23;
const v24 = new C3(64, 19273);
v24[19273] = v24;
new Uint16Array(0, 0);
const v33 = Int32Array.prototype;
try { v33.at(v24); } catch (e) {}
new Int32Array(672);
161 + 161;
!(161 == 161);
Int32Array.name;
new Int32Array(161);
8 * 8;
let v46 = 8 / 8;
v46++;
let v48 = Array();
function f49(a50, a51) {
    a51 >> a51;
    const v53 = a51 + a51;
    v53 >>> v53;
    const o62 = {
        "b": a50,
        ...a51,
        [a50](a56, a57) {
            const v59 = WeakMap(a56);
            this.b;
            super[v59] = v48;
            function f61() {
                return a50;
            }
            return Array;
        },
    };
    return o62;
}
const v64 = f49(f49(8, 8), f49);
const v65 = f49(v64, Array);
v65.b.b;
const v68 = [-439900.9503882638,1.0,6.3170898061028105];
let v69;
try { v69 = v68.includes(v68); } catch (e) {}
v69 || v69;
const v71 = [2.2250738585072014e-308,-642410.6561922245];
const v72 = [1000.0,-2.693837761401012];
function f73() {
    return v65;
}
function f74(a75, a76) {
    a76[1] = a76;
    let v77;
    try { v77 = a75.values(); } catch (e) {}
    const v78 = a76[1];
    v78.length = v78;
    const o89 = {
        get h() {
            4294967296 + v48--;
            ++v48;
            Math.log1p(4294967296);
            v48++;
            -698162.0562706811 % 4294967296;
            return v71;
        },
    };
    try { o89.hasOwnProperty(v77); } catch (e) {}
    o89.d = o89;
    return v48;
}
f74.caller = f74;
f74.arguments = f74;
const v91 = f74(v68, v72);
const v92 = f74(v71, v68);
try { ("p").blink(); } catch (e) {}
try { ("p").strike(); } catch (e) {}
try { v92["p"](v65, v64, v91, 8); } catch (e) {}
const o97 = {
};
o97.h = o97;
o97.b = "65536";
try {
} catch(e98) {
}
try {
    const o99 = {
    };
} catch(e100) {
}
try {
    const o101 = {
    };
    o101.h = o101;
} catch(e102) {
}
try {
    const o103 = {
    };
    o103.c = o103;
    o103.c = o103;
} catch(e104) {
}
