function f0() {
    const o4 = {
        "g": -9007199254740992,
        "b": -9007199254740992,
        2: -9007199254740992,
        "c": f0,
        1073741824: "toString",
        2147483647: 1.2201525573001112e+308,
        [1.2201525573001112e+308]: "toString",
        [-9007199254740992]: -9007199254740992,
        "h": "toString",
        ["toString"]: 1.2201525573001112e+308,
        256: f0,
        4: -9007199254740992,
        "e": -9007199254740992,
        1: "toString",
        "a": -9007199254740992,
    };
    f0[1];
    return o4;
}
f0();
const v7 = f0();
const v8 = f0();
v8.toString = v8;
const v9 = [0.8758305758710716,-551.972287855524,NaN,NaN,-1.6988223679095898e+308,0.0,-5.0,-2.2250738585072014e-308,-105.37623583614982];
try { v9.copyWithin(v7, v7); } catch (e) {}
const v11 = [5.2913542413400645,2.2250738585072014e-308,1000000.0,1000000000.0,1e-15,-1.0,5.9426987679494925,-1.0];
const v12 = [-3.0,1e-15,0.0,-5.0,771.0765266379292,7.021587659441021,-7.869676796630161];
const v13 = [NaN,1.4090574343122108e+308,2.1433436970976594,-1.0,369.4894060458885,-1e-15,0.13355153855683033,0.05610058539827778];
const v14 = [-445267.73732393957,-Infinity,-5.0,8.338661384769384,-4.714972352599915,-979305.2442378065,0.3338934786132437];
let v15;
try { v15 = v14.reduce(v7); } catch (e) {}
const v16 = [-0.4315180918032251,927006.3307231795,-2.2212908501244026,0.47692961825426183,2.0];
const v18 = [v16,v11,[v16,v13,v9,f0]];
try { v18.map(v18); } catch (e) {}
try { v18.find(v18); } catch (e) {}
[v18,v9,f0,v14];
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = this;
    a25[3];
    const v27 = this?.constructor;
    try { new v27(this); } catch (e) {}
    let v29;
    try { v29 = new v27(this, a24); } catch (e) {}
    v29[2147483647];
    try {
        this.a = a24;
    } catch(e31) {
    }
    try {
        this.b = v12;
    } catch(e32) {
    }
    try {
        this.f = v7;
    } catch(e33) {
    }
}
F22.prototype = F22;
const v34 = new F22(v11, v16);
const v35 = F22.a;
const v36 = new F22(v12, v11);
v36[2];
v36.a;
new F22(v14, v11);
925.1427495594241 | 925.1427495594241;
("boolean").repeat(1000000.0);
let v47;
try { v47 = v36.trimEnd(); } catch (e) {}
try { v47.strike(); } catch (e) {}
function f49(a50, a51) {
    a50 / a50;
    const o55 = {
        set d(a54) {
        },
        "a": a50,
    };
    o55.c = o55;
    Int8Array.BYTES_PER_ELEMENT = Int8Array;
    const v58 = new Int8Array(268435456);
    v58[42619700] = v58;
    return v58;
}
const v59 = f49?.apply;
try { new v59(v15, v34); } catch (e) {}
try { v35(15135); } catch (e) {}
f49(925.1427495594241);
