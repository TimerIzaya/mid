class C3 {
    g;
    static {
        this.d = this;
        this[this] = this;
        try {
            this.d = this;
        } catch(e5) {
        }
    }
    static #a = 9007199254740992;
    #valueOf(a7, a8) {
        this + 9007199254740992;
        9007199254740992 / this;
        new Uint8Array(10);
        new Uint8Array(243);
        new Uint16Array(2);
        return Uint16Array;
    }
}
const t20 = -28034;
new t20();
const v21 = new C3();
v21.g;
const v23 = new C3();
v23.c = v23;
9007199254740992 ^ 4294967297n;
/(?<a>.)\k<a>/gvdi;
/a$(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/gvdmsy;
const v30 = /L}Ra\D\P{scx=Greek}a+Xa{?/giy;
const v31 = [63445n,v30];
try { v31.slice(9007199254740992, -9007199254740991n); } catch (e) {}
[9007199254740992,[v23,v31,-28034,-9007199254740991n],-9007199254740991n];
const v35 = /1xyz{1,}?/gims;
const v36 = /h\p{gc=Nd}/vdy;
v36.b = v30;
const v37 = /\xf0\x9f\x92\xa9a*/us;
-1;
function F42(a44, a45, a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    const v48 = this?.constructor;
    try { new v48(a45, 9007199254740992, a47, a45); } catch (e) {}
    a44.dotAll = a44;
    v48 - a46;
}
F42.arguments = F42;
const v51 = new F42(v37, 1, -1263139894, F42);
v51.length = v51;
const v52 = new F42(v35, v37, -23596, v51);
v52.d = v52;
const v53 = new F42(v36, F42, -23596, 1);
const v56 = v53 | F42;
let v57;
try { v57 = v52(v37, v56, v56); } catch (e) {}
if (v57) {
    let v58;
    try { v58 = ("catch").codePointAt(v57); } catch (e) {}
    [,v58] = "iterator";
} else {
    new WeakSet();
}
