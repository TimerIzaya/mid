const v1 = [];
class C3 {
    p(a5, a6) {
        "-1210238113" - v1;
    }
    static ["-1210238113"];
    static {
        try {
            this.#d;
        } catch(e10) {
        }
    }
}
new String();
gc();
new Uint8Array();
C3.length = C3;
8 % 8;
let v19 = -2147483649;
const v20 = v19--;
v20 & v20;
class C22 {
    get caller() {
        try {
            super.setHours(v19, v19, v19);
        } catch(e25) {
        }
        this == this ? this : this;
        return this;
    }
    set b(a29) {
        ~14;
        const v34 = 14 - 129;
        function F35(a37, a38) {
            if (!new.target) { throw 'must be called with new'; }
            this.f = a37;
        }
        new F35();
        const v43 = new Int8Array(268435456);
        const v45 = new Float32Array();
        function F46(a48, a49, a50, a51) {
            if (!new.target) { throw 'must be called with new'; }
            const v52 = this.constructor;
            try { new v52(v45, a50, 2); } catch (e) {}
            this.h = a49;
        }
        new F46(v43, Int8Array, F46, v45);
        Math.cosh(14);
        1073741824 - 1073741824;
        14 && v34;
        Math.expm1(14);
    }
}
let v59;
try { v59 = new C22(); } catch (e) {}
const v60 = v59?.constructor;
try { new v60(); } catch (e) {}
new C22();
new C22();
const v64 = new C22();
const v65 = v64?.constructor;
try { new v65(); } catch (e) {}
const v67 = v64?.constructor;
let v68;
try { v68 = new v67(); } catch (e) {}
const v69 = v68?.constructor;
try { new v69(); } catch (e) {}
const v71 = [1073741825,3,-3,-268435456,9007199254740992,4294967295,1073741825,1153347310,-2000388164,-10];
const v72 = v71?.pop;
try { v72.apply(v59, v20); } catch (e) {}
try { new v72(); } catch (e) {}
const v75 = [-203247044,255670236];
v75[1] = v75;
const v76 = [3,1549618235,-2147483647,-2147483647,536870887,-2,-12,-128];
function f77(a78, a79) {
    try { a78.includes(a79); } catch (e) {}
    try { a79.toLocaleString(); } catch (e) {}
    const o96 = {
        __proto__: v64,
        valueOf(a83, a84, a85, a86) {
            const v89 = v76 - v76;
            v89 / v89;
            let v91 = v89 || 1073741823;
            const v92 = v91 >> v76;
            -v89 - v91++;
            return v92;
        },
        ...a79,
        [8]: 8,
    };
    o96[1];
    return o96;
}
f77(v71, v75);
f77(v71, v76);
f77(v75, v71);
let v104 = 1073741824;
const v105 = v104 ^ v104;
v105 & v105;
try { ("boolean").charAt(v105); } catch (e) {}
class C109 {
    constructor(a111) {
        const v112 = this?.constructor;
        try { new v112(this); } catch (e) {}
        [a111,v104] = "boolean";
    }
}
const v114 = C109?.constructor;
try { new v114(v104); } catch (e) {}
const v116 = new C109(C109);
const v117 = new C109();
const v118 = v117?.constructor;
try { v118.call("boolean"); } catch (e) {}
let v120;
try { v120 = new v118(v117); } catch (e) {}
v120.d = v120;
function f122(a123, a124, a125) {
    a124 >> a124;
    a125[8];
    a124[0] = a124;
    try { a125.valueOf(); } catch (e) {}
    a123[22] = a123;
    const o147 = {
        ...a125,
        n(a130, a131) {
            return this;
        },
        m(a133) {
            try { a133.m(1024); } catch (e) {}
            try { a133.next(); } catch (e) {}
            a133.c = a133;
            const o136 = {
            };
            class C139 {
            }
            const v140 = C139.name;
            v140 == v140;
            const v144 = new Int8Array(3938);
            v144[2620];
            let v146 = 3;
            [...v146] = v144;
            return WeakMap;
        },
        2: v116,
        268435439: C109,
    };
    o147[8] = o147;
    return o147;
}
try { f122("-1210238113", 1073741823, "-1210238113"); } catch (e) {}
const v149 = f122(v117, "-65537", v104);
v149[2];
f122(v149, "boolean", v149);
