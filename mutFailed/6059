const v5 = new Uint32Array(256);
function f6() {
    v5[3] = "-26733";
    return "-26733";
}
class C8 {
    static #d;
    toString(a10) {
        let v11;
        try { v11 = new a10(a10, a10, this, 9007199254740990); } catch (e) {}
        try {
            v11.toString = a10;
        } catch(e12) {
        }
        return this;
    }
    static a;
    static [12] = 12;
    static #b;
}
new C8();
const v17 = new Uint8Array(512);
v17[148] ||= 444;
const v18 = new C8();
const v19 = new C8();
class C20 extends C8 {
    constructor(a22, a23, a24, a25) {
        super();
        if (v19 < this) {
            delete this[this];
        } else {
            try { a23(a23); } catch (e) {}
        }
    }
    #c = 9007199254740990;
    static [9007199254740990];
    b = 12;
}
new C20(-1497908213, -1497908213, -1497908213, 9007199254740990);
new C20(9007199254740990, v18, 12, -1497908213);
new C20(9007199254740990, -1497908213, 9007199254740990, 9007199254740990);
const t41 = [8.360030709333259,416819.70671931445,1000.0,-1.0513464134302462e+307,2.2250738585072014e-308,-999.1393293497049];
t41.length = 1;
class C38 {
}
C38.length;
const o42 = {
};
const v44 = Math.log1p(-1.0725671058516885e+308);
v44 + v44;
class C46 {
    toString(a48, a49) {
        const v50 = `7${this}dm${"unicode"}m`;
        function F51(a53, a54, a55) {
            if (!new.target) { throw 'must be called with new'; }
        }
        F51(F51(), "unicode", v50);
    }
}
