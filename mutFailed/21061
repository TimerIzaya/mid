new Uint16Array(3970);
const v4 = new BigInt64Array();
v4.copyWithin(-9223372036854775808);
("undefined").normalize("NFC");
const v12 = new Int8Array(8);
Math.sin(-268435456);
class C17 {
}
const v19 = new Float64Array(0);
function f20() {
    return v19;
}
[-4096,-3700,-1490694819];
const v23 = new WeakMap();
function f24(a25, a26) {
    v23.set([f24]);
    ([-0.0,0.4808419851382937,521.265446647358,1000.0,1000000000.0,0.342521651011362,100.12242715110574,-1000000.0])["findIndex"](gc);
    return "findIndex";
}
[9223372036854775807,9,4,1768097144];
[536870912,0,127,185349376,-786,7,-30012972,0];
let v35 = [];
let v37 = [0.3012804967226079,85204.01188321039,653.7200248137515,0.7021499874307531,803753.7144966745,852811.0132933464,-9.957521439166277e+307,-2.2210475327078026e+307];
const v38 = [0.16312007947772267];
const v39 = [NaN,-1e-15];
class C40 {
    [1802204217] = v39;
    static 3516;
    #h;
    constructor(a42, a43) {
        super(a42);
        try {
            v12.length = 415075273;
        } catch(e45) {
        }
    }
    static 0 = 1802204217;
    /*
    constructor(a47, a48) {
    }
    */
    static [v37] = v38;
    static 13;
    static #c = v35;
}
const v49 = new C40(C40, v39);
const v50 = new C40(v49, v49);
const v51 = new C40(v50, v38);
v35 = v39;
v37 = Reflect.construct(C40, [Reflect,v37], C40);
try {
    const v55 = /(?:a?)?U*/dim;
    function f56() {
        return v55;
    }
    const v57 = [v55];
    v57.toString = f56;
    try { new Date(v57, -9223372036854775808); } catch (e) {}
    v51.fuck(v37, -1024n, /{z}cv[\0]+/giy);
} catch(e63) {
}
