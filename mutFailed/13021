const v3 = [-4294967295,-1775287768,-7,-4294967295];
const v4 = [-7,v3,-4294967295];
[v4,-4294967295];
const t2 = -4294967295;
new t2();
WeakMap ** WeakMap;
try {
    v3.toString = WeakMap;
} catch(e10) {
}
try {
    v3.length = 2;
} catch(e13) {
}
new Int16Array(-4294967295);
const v17 = new Int16Array(2116);
const v20 = new Uint32Array(109);
class C22 extends Array {
    constructor(a24, a25, a26) {
        super(a24);
    }
}
[0.021647043302781555,982.9822277058386,68.55386187204931,-3.6548181863708407e+307,0.20797002453168356,1000000.0,-569469.7761417266,-3.877892592640821,Infinity,5.0];
new Map();
class C31 {
}
const v32 = Array();
const v33 = new C31();
function f34(a35, a36, a37) {
    const o45 = {
        toString(a39, a40, a41) {
            a36 < v32;
            super[v33];
            return a36;
        },
        get d() {
            return a36;
        },
    };
    return o45;
}
%OptimizeFunctionOnNextCall(f34);
const v46 = v20.toLocaleString();
function f47(a48, a49, a50, a51) {
    try { new BigInt64Array(-832267.262043573); } catch (e) {}
    function f55(a56, a57, a58, a59) {
        function f60() {
            Math.expm1();
            return a59;
        }
        return eval();
    }
    const v76 = [f55];
    Reflect.apply(a51.at, v46, v76);
    new Float32Array(144);
    a49.toExponential(64);
    return 2;
}
v17 < f47(v17, 2, 2, v4);
const o87 = {
};
const o93 = {
    [-352741132]: -352741132,
    set b(a91) {
    },
    get c() {
        return this;
    },
    "b": 2.220446049250313e-16,
};
