const v0 = [37111,-2085287711,16,-713132279,-6,-128,4,465544584,-5];
const v1 = [536870888,65535,2,255];
function F2() {
    if (!new.target) { throw 'must be called with new'; }
    const o5 = {
    };
}
const v6 = [-1095893130,16,56113,-6265];
function F7() {
    if (!new.target) { throw 'must be called with new'; }
    for (let v9 = 0; v9 < 25; v9++) {
        const v10 = [601759695];
        const v11 = [1073741824,1073741823,1376142744,1073741825];
        function f12(a13, a14, a15, a16) {
            Math.cos(-1073741824);
            try { v11["find"](..."find", a16, ...v10, ...v11); } catch (e) {}
            return v9;
        }
        for (let v22 = 0; v22 < 5; v22++) {
            f12();
        }
    }
}
new F7();
function f25() {
    return v1;
}
class C29 extends f25 {
    constructor(a31, a32, a33) {
        super();
        const v35 = [a33];
        Reflect.apply(a32.charAt, a32, v35);
    }
    [v6];
    #c = v6;
    static #h = v1;
}
const v38 = new C29(v1, "concat", v0);
const v39 = new C29(v38, "concat", C29);
new C29(v39, "concat", v39);
[[2.220446049250313e-16,1000000.0,-832083.505850983,0.4718386381385684,1000.0,-5.0,9.814259698721895e+307,-659970.7982908424,-5.0]];
const o45 = {
};
function f46() {
    return f46;
}
const t46 = "undefined";
t46["256"] <<= 4.0;
