class C3 {
    static {
        const o7 = {
            "maxByteLength": 3858,
        };
        const o10 = {
            [-206.79565552697056]: 3858,
            get g() {
            },
            "g": -206.79565552697056,
        };
        const v12 = new SharedArrayBuffer(3858, o7);
        new Uint32Array(v12);
    }
    static [-5.39461664930641] = 4.379791082555775;
    static g;
}
const v16 = [601759695];
const v17 = [1073741824,1073741823,1376142744,1073741825];
function f19(a20, a21, a22, a23) {
    function f25() {
        try {
            v17.forEach();
        } catch(e29) {
        }
        function f30() {
            return f30;
        }
        const v31 = f30();
        const o55 = {
            [522675525n](a33, a34) {
            },
            valueOf(a36, a37) {
                return a37;
            },
            [-4294967297n](a39, a40, a41, a42) {
            },
            "e": -4294967295,
            ...v16,
            "type": "Vre",
            valueOf(a44, a45) {
                return a45;
            },
            ..."Vre",
            valueOf() {
                return this;
            },
            4: "Vre",
            toString(a48, a49, a50) {
                return a48;
            },
            162: "Vre",
            toString(a52, a53, a54) {
                return a54;
            },
        };
        return v31;
    }
    f25();
    %OptimizeFunctionOnNextCall(f25);
    try { v17["find"](..."find", a23, ...v16, ...v17); } catch (e) {}
    return arguments;
}
for (let v59 = 0; v59 < 10; v59++) {
    f19(v59, v59, -4294967297n, 522675525n);
}
new C3();
new C3();
new C3();
new BigUint64Array(11);
new Uint32Array(5);
new Uint8Array(10);
const v80 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v81 = [601759695];
const v82 = [1073741824,1073741823,1376142744,1073741825];
function f84(a85, a86, a87, a88) {
    const v89 = a87 | a87;
    arguments[2] = arguments;
    function f91() {
        const v93 = ("Vre").toLocaleUpperCase;
        let v94;
        try { v94 = v93(a87, "Vre", a85, v93); } catch (e) {}
        const v96 = ("Vre").fixed(v94, -4294967297n, a85).codePointAt();
        let v98 = -268435456;
        const v99 = v98--;
        const o117 = {
            "c": -4294967297n,
            [522675525n](a101, a102) {
            },
            ..."Vre",
            "maxByteLength": -128,
            "arguments": v81,
            [v96]: -1547267477n,
            __proto__: a87,
            "d": v99,
            "e": -4294967295,
            "h": -128,
            valueOf(a104, a105) {
                return this;
            },
            ...v82,
            "f": v89,
            "a": v94,
            ...arguments,
            ...v80,
            "e": v89,
            "e": v98,
            "maxByteLength": -4294967295,
            "arguments": v80,
            ...v81,
            "type": "Vre",
            ..."Vre",
            valueOf(a107, a108) {
                return a107;
            },
            ..."Vre",
            "c": v98,
            "type": "Vre",
            "type": "Vre",
            [v80](a110, a111, a112) {
            },
            "type": "o",
            "type": "129",
            toString(a114, a115, a116) {
                return -128;
            },
        };
        return arguments;
    }
    f91();
    %OptimizeFunctionOnNextCall(f91);
    return a87;
}
for (let v119 = 0; v119 < 5; v119++) {
    f84(v81, v119, v119);
}
function f121(a122, a123) {
    const o124 = {
        [a122]: a123,
        65536: a123,
    };
    return f121;
}
f121("-354330605");
const v127 = new Set();
class C128 {
    [v127];
}
f121("-354330605", 2);
