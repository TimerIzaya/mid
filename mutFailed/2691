const v0 = [-117113.68261020212,0.3737492959382631,-7.671163974360356,7.530985576504868,-3.0,0.47612219653076704,-2.2250738585072014e-308];
const v1 = [338933.37791044335,-479659.86203519197,-Infinity];
const v2 = [-2.0,-1.7976931348623157e+308,-1000000000.0,5.0];
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v2;
    } catch(e10) {
    }
}
new F6(v1, F6);
new F6(v1, v0);
const v15 = new Uint32Array(127);
new Uint8Array(v15);
new F6(v1, v0);
class C19 extends v2 {
    n(a21, a22) {
        try {
            let v23 = 10;
            v23--;
            let v26 = -314.9391272852571;
            Math.log2(--v26);
            const v31 = [536870888,8];
            v31.concat(v31);
            const v33 = [];
            const v34 = [v33,v33,v33,v33,v33];
            class C35 {
                constructor(a37, a38) {
                    function F39(a41, a42) {
                        if (!new.target) { throw 'must be called with new'; }
                        const v43 = this?.constructor;
                        try { new v43(v34, this); } catch (e) {}
                        v34 ^ a42;
                        this.b = v33;
                    }
                    typeof a38 === "-4294967297";
                    new F39(C35, v33);
                    new F39(v33, v34);
                    new F39(C35, v33);
                }
            }
            new C35(v2, Uint32Array);
            const v56 = new Array(56777);
            const v58 = new Array(56777);
            new F6(v56, v58);
        } catch(e60) {
            ([-7,-18455])["pop"]();
            for (let v64 = 0; v64 < 50; v64++) {
            }
        }
        return a22;
    }
}
new C19();
new C19();
new C19();
("65535").lastIndexOf(128, 65536);
