const v6 = [-3.0,0.4067244020435181,2.2250738585072014e-308,1.3501081157522148e+308,1000.0,5.0,-1000000000.0,-Infinity,0.39062632593517377];
const v7 = [-1000000000000.0];
v7[8] = 13;
const v8 = [2.220446049250313e-16];
function f9(a10, a11) {
    try { a10(); } catch (e) {}
    return 65536;
}
v8.toString = f9;
/(?:a+)?/gvims;
v7[8] = 13;
const o20 = {
    "execution": "async",
    "type": "minor",
};
let v21 = gc(o20);
/N/gvdims;
/(?:ab)?/gudimsy;
const v24 = [536870888,14206,536870887,-7,7,3,-4096,9007199254740991,1073741825,65537];
v24.constructor = gc;
const v25 = v24.constructor(v24);
v25.execution = "minor";
v25.type = -65536;
const v26 = /4H/gvisy;
const v27 = /[m]/gvdimsy;
function f28(a29) {
    for (const v33 of Array(4087)) {
    }
    return 4087;
}
v27[Symbol.toPrimitive] = f28;
v26.compile(v27);
const v37 = [];
let v38 = [v8,v37,v37,v37];
v38.valueOf = f9;
[-126174967,65535,9007199254740990,-9223372036854775808,-18813,4];
[243583283,-4294967295];
const v41 = /LD/vds;
const v42 = /a\s/vims;
v42[5] = 13;
const v43 = /SO/uis;
function f47() {
    return v27;
}
[12,65535,536870912,-8,1000,-9223372036854775808,-8,2,13];
const v49 = [2,30964,-9223372036854775808,8,536870887,61212,-9223372036854775807,10000,-380609068];
try { v49.keys(); } catch (e) {}
v38 |= v6;
const v54 = 0.41416938306884954 % v27;
v21--;
~0.41416938306884954 & v27;
257 >>> v54;
~0.41416938306884954;
[-527931172,-2147483647,1073741823,1913461086,9007199254740991,128,-2008902983,-7];
const v61 = [v41,1000.0,v42];
v61.undefined = v24;
const v62 = [v27,1000.0];
[v27,v62,v43,1000.0,v62];
for (let v64 = 0; v64 < 22; v64++) {
    const v65 = v42[v64];
    let v66;
    try { v66 = new v65(v65); } catch (e) {}
    v61[v65];
    const o71 = {
        "execution": "async",
        "type": v66,
    };
    gc(v25);
}
