function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -26570;
    } catch(e3) {
    }
}
const v4 = new F0();
new F0();
new F0();
function f7() {
    return v4;
}
[-5.0,-3.0,-9.972316103945499,909.6325337112328,2.220446049250313e-16];
[-986.1993246455478,1.7976931348623157e+308,-69119.55310919124,-2.2250738585072014e-308,-3.0,-1000000000.0,9.137388364891876,-1000000000000.0];
[1.2539893929934323,-1000000.0,-9.79276001069593e+307,3.0,-1e-15,697.6801329086372,-1000000.0];
[];
const v15 = [];
class C16 {
    static {
        for (let v18 = 0; v18 < 25; v18++) {
            function f19(a20, a21, a22, a23) {
                const v26 = new Float32Array(this, a23, v18, -14);
                function f28() {
                    return a20;
                }
                try { new Date(this, v18, 84, f19, v18); } catch (e) {}
                new Date();
                const v32 = [2147483647,31400,-1283953271,-13,-3,9007199254740991,0];
                try { new Proxy(v15, a23, v18); } catch (e) {}
                const v35 = new Proxy(v32, Proxy);
                v35[0] = this;
                const o36 = {
                    __proto__: f28,
                };
                o36[2] = o36;
                v26.constructor;
                class C38 extends -38456 {
                }
                function f39(a40, a41) {
                }
                try { f39(f19, v18); } catch (e) {}
                %OptimizeFunctionOnNextCall(f28);
                const o43 = {
                    __proto__: arguments,
                };
            }
            for (let v44 = 0; v44 < 5; v44++) {
                f19();
            }
        }
    }
}
