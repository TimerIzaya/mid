function f0() {
    const o18 = {
        ...6.256726875618803,
        set a(a5) {
            a5.d >>= 113;
        },
        __proto__: 8,
        toString(a10, a11) {
            a10[1410] = a11;
            const v13 = new Date();
            v13 !== 6.256726875618803;
            try { this["p"](Date); } catch (e) {}
            return super.b;
        },
    };
    return o18;
}
const v19 = f0();
const v20 = f0();
const v21 = f0();
class C22 extends f0 {
    valueOf(a24, a25) {
        %VerifyType(v21);
        super.a = v21;
        return 0.8872185562270466;
    }
    get c() {
        for (const v30 of this) {
            let v31;
            try { v31 = new v30(v30, this, f0); } catch (e) {}
            (v31 = this)[v21];
            const o33 = {
                "call": f0,
                "construct": f0,
                "defineProperty": f0,
                "deleteProperty": f0,
                "get": f0,
                "getOwnPropertyDescriptor": f0,
                "has": f0,
                "isExtensible": f0,
                "ownKeys": f0,
                "set": f0,
                "setPrototypeOf": f0,
            };
            new Proxy(v31, o33);
        }
        return f0;
    }
}
const v36 = new C22();
const v37 = new C22();
const v38 = new C22();
const v43 = new d8();
[v20,[v38,v43,v36,v38],v19,v21,v37];
[v21,v43];
function F48(a50, a51) {
    if (!new.target) { throw 'must be called with new'; }
}
let v52 = new F48();
class C53 {
    constructor(a55, a56, a57) {
        ({"c":v52,...v52} = a56);
    }
}
