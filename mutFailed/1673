const v0 = [1073741825,-35997,1];
const v1 = [6,-2,268435440,-1408339344,-52071,16,446586619,127];
const v2 = [-13,-38301,-128,256,127,16141,-9007199254740990,268435441,-256,-62126];
try { new Float32Array(v0, v2, v0); } catch (e) {}
new Float32Array(1739);
0 >> 0;
const v10 = new Int16Array(0);
try { Uint32Array.from(0); } catch (e) {}
new Uint32Array(905);
class C15 {
    toString(a17, a18, a19, a20) {
        try { this.o(1739); } catch (e) {}
        let v22 = 0;
        while (v22 < 4, v22) {
            new Array(12);
            v22++;
        }
        return v1;
    }
    static 3052261207;
}
const v29 = new v10();
const v30 = v29?.constructor;
try { new v30(); } catch (e) {}
const v32 = new C15();
const v33 = v32?.constructor;
try { new v33(); } catch (e) {}
new C15();
let v36 = Map;
const v37 = new Float32Array();
class C38 {
    set d(a40) {
        a40[this] = v36 >>>= v37;
    }
    #m(a42, a43) {
        let v44 = "jER";
        const v45 = [17452,4294967295,64,-8];
        [v44] = v45;
        try { new v44(...v45, -1.6798118066934893e+307); } catch (e) {}
        a43 ^ a42;
        v36 * this;
        new BigInt64Array(1433);
        new Uint8Array(255);
        new Float32Array(299);
        return Float32Array;
    }
}
C38.e = C38;
const v59 = new C38();
const v60 = new C38();
v60.b = v60;
const v61 = new C38();
v61.d;
function F63(a65, a66) {
    if (!new.target) { throw 'must be called with new'; }
    const v67 = this?.constructor;
    try { new v67(a65, v61); } catch (e) {}
    try {
        this.c = v37;
    } catch(e69) {
    }
}
const v70 = new F63(v61, v60);
v70.c;
new F63(v60, v60);
new F63(v59, v61);
let v76 = -319780339n;
v76--;
function f78() {
    return v76;
}
/a|bc*/udisy;
const v80 = /Q?/gud;
v80.dotAll = v80;
/[x\dz]/dms;
Math.tan(-532550611);
