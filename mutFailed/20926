function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a5;
    } catch(e6) {
    }
}
new F3(-4.0);
new F3(241937.60086404625);
new F3(-4.0);
/3xyz{0,1}+/vims;
/(M(?:a*)+)/gudim;
/a+L\1(a)abc+R(?:a?)*/gums;
new Int32Array(1589);
new Uint32Array(1930);
new Int8Array(129);
function F22() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.constructor(); } catch (e) {}
    try {
    } catch(e25) {
    }
    function F26() {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v28 = new F26();
    const v29 = v28?.__defineSetter__;
    try { v29(); } catch (e) {}
    function f31(a32, a33) {
        const o34 = {
        };
        return o34;
    }
    const v35 = f31(v29, f31);
    function f36() {
        return f36;
    }
    const v39 = new Float32Array(218);
    for (const v40 of v39) {
        v40 >>> v40;
        Object.defineProperty(v35, Float32Array, { configurable: true, enumerable: true, get: f31, set: f36 });
    }
}
new F22();
new F22();
new F22();
