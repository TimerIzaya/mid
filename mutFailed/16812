const v0 = [8.519898214080552,-6.103578620389087,407.01689629426915];
[0.9400563596140377,-2.0,-1000000000000.0];
const v2 = [1000000000.0,2.220446049250313e-16,-1e-15,-867.520053600207];
class C6 {
    #toString(a8, a9, a10, a11) {
        let v12 = -908890636;
        --v12;
        v0 & -9007199254740990;
        const v16 = new Date();
        const v18 = new Set();
        v18.add(v16);
        a8 - -3;
        try { new a9(v16); } catch (e) {}
        const o24 = {
            valueOf() {
                v2.length;
                %VerifyType(this);
                return a11;
            },
        };
        return a8;
    }
    #e = -2147483649;
    #h;
}
const v25 = new C6();
const v26 = new C6();
const v27 = new C6(C6, v26, C6);
function F28(a30, a31, a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        v0.f = v26;
    } catch(e34) {
    }
}
const v35 = new F28(v25, -9007199254740990, -3, v2);
new C6(v35, -2147483649, -2147483649, v0);
new F28(v27, -3, -2147483649, v2);
const v39 = new Date(-9007199254740990, Date, v35);
function f40(a41) {
    return a41;
}
v39.valueOf = f40;
function f42(a43) {
    return f40;
}
const v46 = [v39];
const o47 = {
    "arguments": v46,
    "type": "function",
};
new Worker(f42, o47);
