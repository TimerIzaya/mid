new Float32Array(Float32Array);
new Int8Array(Int8Array);
new Uint8Array(647);
[-6.511931091411471,-2.220446049250313e-16,983909.9225042593,2.220446049250313e-16,-2.0];
const v12 = [2.0,2.2250738585072014e-308,1000.0,-36556.41211550089,-1e-15,463.9849148520964,0.024531556847684377];
const t3 = [583123.3518993976,-902773.3895604451,-7.52272990053628,1.0,1.0];
t3.length **= 257;
[-1000000.0,1.7976931348623157e+308,-3.0];
[-1.7976931348623157e+308,5.0,588964.4914273454,-3.0,-929420.791433708,2.2250738585072014e-308,922500.2437158835];
[NaN,-Infinity,761614.8022434074,-4.582161346034632e+307,613124.3344687407,5.0];
const v18 = /[vC[\cz]]/gvdims;
Reflect.construct(BigInt64Array, [v12,4,-926175789], Int8Array);
try {
    Reflect.get(Reflect, "number");
} catch(e33) {
}
Object.defineProperty(v18, "e", { configurable: true, value: 127 });
new BigInt64Array(1830);
new Uint8Array(2635);
new Uint8Array(1732);
