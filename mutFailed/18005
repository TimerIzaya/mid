[11,-11,65535,-18731,5369,-120049063,-9223372036854775807,10,1,10000];
[-3,-856161330,256,-789189734,5,-1073741824,2,2147483647,-788812603];
const v5 = [-34707,9007199254740992,1240724582,-7,1139001009,-45040,-128,9];
new Int32Array(1);
new Uint16Array(1691);
new Uint8ClampedArray(3820);
let v18;
try { v18 = ("get").toString(); } catch (e) {}
const v19 = ("get")[2];
v19[0];
let v21;
try { v21 = v19.italics(); } catch (e) {}
v21[7] = "2147483648";
let v23;
try { v23 = ("2147483648").link("2147483648"); } catch (e) {}
%VerifyType("get");
function f25(a26) {
    %VerifyType(a26);
    function F27(a29, a30) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.f = 0.3747980658252631;
        } catch(e31) {
        }
        try {
            this.a = a26;
        } catch(e32) {
        }
    }
    const v33 = new F27(3820, a26);
    const v34 = new F27(v33, v33);
    new F27(v34, v5);
    return v33;
}
String[Symbol.toPrimitive] = f25;
try { new String(String); } catch (e) {}
const v39 = new String("get");
v39[Symbol.toPrimitive] = f25;
let v42;
try { v42 = v23.normalize(); } catch (e) {}
v42[2];
const v44 = 0.3747980658252631 in v39;
v44 && v44;
%VerifyType(2.174525112539174e+307);
let v46 = v39 + "get";
try { new Int16Array("get", "get", v23); } catch (e) {}
let v50;
try { v50 = new Int16Array(String, Int16Array, 2.174525112539174e+307); } catch (e) {}
v50[0];
const v52 = v44?.findLastIndex;
try { new v52(v39); } catch (e) {}
const v54 = new Int16Array(832);
v54[561] = v54;
0 === 0;
const v57 = 0 >>> 0;
v57 <= v57;
try { Float64Array.apply(Int16Array, v39); } catch (e) {}
const v61 = new Float64Array(0);
257 | 257;
new Uint16Array(257);
try { v23.filter(257); } catch (e) {}
const v68 = Int8Array.name;
try { v68.search("2147483648"); } catch (e) {}
v68[4] = v68;
new Int8Array(v18);
(127 >> 127) + v52;
Int16Array.a = Int16Array;
new Int16Array(127);
const o76 = {
};
o76.h = o76;
new Proxy(Float64Array, o76);
v46 = v44;
try { new BigUint64Array(v61, 2.174525112539174e+307, 2.174525112539174e+307); } catch (e) {}
new BigUint64Array(1690);
const v83 = ("D")[0];
try { v83.codePointAt(v83); } catch (e) {}
v83[0] = v83;
const v85 = v83 == v83;
v85 && v85;
let v87 = v83.lastIndexOf("D");
v87--;
const v89 = v87 + v87;
const v90 = v89 + v89;
v90 >> v90;
