const v0 = [-2147483649,-2147483647,-9223372036854775807,9007199254740991,1150886190,255,65536];
[13,268435440,10,-65535,-9223372036854775808,0,35762,536870887,-8];
const v2 = [-4294967295,1073741824,6,8,20949,9007199254740990,9166,-9,7];
const v3 = [3.272836310368346];
const v5 = [Reflect,Reflect,Reflect];
class C6 {
    static get c() {
        new Map(this);
        const v11 = new Date(Date);
        function F12(a14) {
            if (!new.target) { throw 'must be called with new'; }
            const v15 = this.constructor;
            try { new v15(); } catch (e) {}
            this.description = v11;
        }
        const v17 = new F12();
        new F12(v17);
    }
    536870887;
    536870887;
    set b(a20) {
        gc();
    }
}
function f24(a25, a26) {
    Array(3).with(3, a25);
    return f24;
}
("sync")[-5.0];
const v33 = [-3.0,NaN,-1.7976931348623157e+308,1.0,5.0,1000000000.0,1000000.0,-503.4349797729287,532548.2241141554,746479.9002226223];
const v34 = [-4.0];
function F35(a37, a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a38;
        const v42 = new WeakMap();
        v42.set(Uint16Array);
        function f44() {
            return f44;
        }
        f44[Symbol.iterator] = f44;
        const v48 = new Uint8ClampedArray(f44);
        v48["filter"](f44);
    } catch(e51) {
    }
    try {
        this.f = v33;
    } catch(e52) {
        class C55 extends Set {
        }
        const v56 = new C55();
        v56["delete"](129n);
        const t51 = [7.134431132944798e+307];
        t51[4] = WeakMap;
        const v65 = new Uint16Array(9);
        v65.includes(true, -706152110);
        gc();
    }
    try {
        this.b = v2;
    } catch(e69) {
    }
}
new F35(v34, v2, v34);
new F35(v2, v0, v2);
const v72 = new F35(v3, v34, v2);
new BigUint64Array(9);
const v77 = new f24(f24, f24);
~v77;
Math.exp(1);
const v81 = /foo(?<=bar)baz/s;
const v82 = /ZMq/vy;
v82[Symbol.species] = v81;
const o87 = {
    "type": "function",
};
const o88 = {
};
const v90 = new Uint8Array(6);
const v92 = ["9",v90];
const o99 = {
    "execution": "9",
    [v82]: Uint8Array,
    [-5.0]: v5,
    "type": "sync",
    "maxByteLength": 6,
    "arguments": v92,
    "type": "9",
    "maxByteLength": 6,
    ...v72,
    ["sync"](a94, a95) {
    },
    toString(a97) {
        return [-2.0,-1000000.0,-Infinity,0.03714003700223023,-1.0];
    },
};
new Int16Array(1);
new Uint16Array(173);
function f106() {
    [9007199254740992,-8,1073741823,-10,8];
    const o109 = {
        "c": "minor",
    };
    Date.parse(4294967296);
    [-11,-7,973741641,9223372036854775807,-5,2,-8064];
    return [9007199254740991,250000798,65535,-9192,1,-2147483649,52240];
}
Math.valueOf = f106;
Math.atan(Math);
