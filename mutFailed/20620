const v1 = new Map();
let v3 = 2;
const v4 = new Array(v3);
function F5(a7) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a7;
    } catch(e8) {
    }
}
const v9 = new F5(v4);
let v10 = new F5(Map);
v10.toString = Array;
const v11 = new F5(v10);
let v12;
try { v12 = v1.forEach(Array, v9); } catch (e) {}
const v13 = --v10;
v10 |= (v3 = v13);
[Array,Array,v9,v9,Array];
[v3,v12,v9,v4,v13];
const v16 = [v4];
function F17(a19, a20, a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = a22;
    try {
        this.g = a19;
    } catch(e23) {
    }
}
new F17(v11, v11, v3, v9);
const v25 = new F17(v11, v11, v4, v9);
function f26(a27) {
    return a27;
}
class C28 extends f26 {
    3 = v16;
}
new F17(v11, v11, v25, v11);
const v32 = new Uint8ClampedArray(237);
new Int32Array(128);
const v38 = new Float64Array(4);
new Int16Array(4096);
new BigUint64Array(0);
const v49 = new BigUint64Array(6);
class C51 {
    constructor(a53, a54) {
        function f55() {
            try {
                v38.findIndex(C51, v32);
            } catch(e57) {
            }
            return F17;
        }
        a53.valueOf = f55;
        a54.toString = f26;
        a54 - a54;
        let v59;
        try { v59 = new a53(-5.869943149384486, a54, a54, a54, ...0.2510089730549625, 512.29276402866); } catch (e) {}
        try {
            super.m(this);
        } catch(e61) {
        }
        a54 = v59;
        try { ("m").match(a53); } catch (e) {}
        try { v59["m"](v59, "m", a53, this, v59); } catch (e) {}
        Math.sign(0.8907211315752046);
        const v70 = -2 & 0.8907211315752046;
        Math.sqrt(0.8907211315752046);
        !-1;
        v70 + v70;
        ~0.8907211315752046;
    }
    [-5.869943149384486];
    c;
    static e;
    h = -5.869943149384486;
}
C51.toString = f26;
try { C51.apply(C51); } catch (e) {}
const v77 = new WeakSet();
v77.a = v49;
const o78 = {
};
const v80 = new Proxy(v77, o78);
v80.a = v9;
new C51(-5.869943149384486, 0.2510089730549625);
const v82 = new C51();
const v83 = v82?.constructor;
let v84;
try { v84 = new v83(C51, C51); } catch (e) {}
const v85 = new C51(512.29276402866, 512.29276402866);
v80[5] = v83;
try { v84(0.2510089730549625, Map, Map); } catch (e) {}
v77.a |= v84;
new Uint8Array(75);
new Uint8ClampedArray(5);
new Int32Array(127);
new Map();
const v99 = new WeakMap();
[v85,v99,v85,C51];
const v101 = [-5.869943149384486,v82];
try { v101.sort(Map); } catch (e) {}
function f105() {
}
