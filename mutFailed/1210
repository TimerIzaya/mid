const v0 = [];
1000000.0 >> 1000000.0;
function f6(a7, a8, a9) {
    for (const v10 of a8) {
        try { ("1442343419").slice(v10); } catch (e) {}
    }
    (a8 = ("setTime").length) & a8;
    const v14 = a9 >= a9;
    v14 && v14;
    const o16 = {
        "h": a9,
    };
    return o16;
}
f6(-3.9870582640049523, -3.9870582640049523, 1000000.0);
const v18 = f6(1000000.0, -3.9870582640049523, 1000000.0);
const v19 = v18?.__defineGetter__;
let v20;
try { v20 = new v19(v0, 1000000.0); } catch (e) {}
const v22 = v18["toString"]();
let v23;
try { v23 = v22.match(v0); } catch (e) {}
class C25 {
    p(a27, a28) {
        "-1210238113" - v0;
        const v30 = a27.length;
        try {
        const t0 = "1442343419";
        t0(v30);
        } catch (e) {}
        return "setTime";
    }
    static #p(a33) {
        h = "-1210238113";
        const v34 = [1e-15,395833.8744809434,1000000.0,1.4833232607524508e+308,-597725.5054648793];
        try {
            new Uint16Array(v34, 54);
        } catch(e38) {
        }
        new Uint8Array(104);
        let v42 = 129;
        new Uint8ClampedArray(v42);
        let v45 = 668;
        --v42;
        let v50 = v42--;
        Math.trunc(v45);
        v50++;
        Math.floor(v42);
        ++v45;
        const v56 = new Int8Array(v45);
        return v56;
    }
}
try { new C25(); } catch (e) {}
v20 = f6;
new Date();
Math.log(-6);
Math.sin(-115474899);
"setTime" ** "setTime";
Math.hypot(-115474899 || -6);
-(-6);
Math.min("setTime");
let v71;
try { v71 = new C25(); } catch (e) {}
const v72 = v71?.constructor;
try { new v72(); } catch (e) {}
const v74 = new C25();
try { v74.p(v23, v19); } catch (e) {}
const v76 = new C25();
try { v76.p(v71, v22); } catch (e) {}
const v78 = new C25();
const v79 = v78?.p;
try { new v79("toString", v78); } catch (e) {}
const v83 = new Float32Array(120);
try { v83.reduce(v71); } catch (e) {}
-93;
Uint8Array.name;
new Uint8Array(93);
try { new Int16Array("setTime", Int16Array, 120); } catch (e) {}
const v93 = new Int16Array(16);
let v94;
try { v94 = v93.join(Float32Array); } catch (e) {}
try { v94.search(93); } catch (e) {}
const t83 = "toString";
t83[1] = "toString";
("toString").match();
