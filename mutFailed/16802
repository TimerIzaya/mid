class C3 {
    get g() {
        new C3();
        ("128").normalize();
        const o14 = {
            n(a10) {
                const o12 = {
                };
                return Worker(o12);
            },
        };
        super.d >>>= 4294967295;
        delete this["128"];
        return this;
    }
    p(a17) {
        ("128")[2];
        const v19 = a17 % this;
        try {
            super.o(v19, this, "128", "128");
        } catch(e21) {
        }
        return "128";
    }
}
function f23() {
    const o27 = {
        [null]() {
            try { this.null(f23, this, this, f23); } catch (e) {}
            super.b;
        },
    };
    return o27.null();
}
const v29 = new C3();
const v30 = new C3();
const v31 = v30?.constructor;
try { new v31(); } catch (e) {}
new C3();
class C34 extends C3 {
    valueOf(a36, a37) {
        const v38 = super[a36];
        Object.defineProperty("128", "b", { writable: true, configurable: true, enumerable: true, value: a36 });
        this[8] = v38;
        4294967295 | 4294967295;
        const v42 = new Uint16Array(8);
        v42.toSorted();
        const v47 = new Int16Array(12);
        v47.fill();
        const v51 = new Int8Array(180);
        v51[v51.byteOffset] = 5;
        new BigUint64Array(64);
        new Int16Array(602);
        class C60 {
            static {
                function f62(a63, a64, a65, a66) {
                }
                for (let v67 = 0; v67 < 5; v67++) {
                    f62(this, v67, v67);
                }
            }
        }
        new BigInt64Array(3524);
        return Int16Array;
    }
}
const o71 = {
    "maxByteLength": 4294967295,
};
function f72() {
    const v74 = new ArrayBuffer(ArrayBuffer, ArrayBuffer);
    try { v74.slice(4294967295, v29); } catch (e) {}
    new Int8Array(v74);
    return f72;
}
f23();
new C34();
const v80 = new C34();
new v80();
function f82() {
    return v30;
}
9n >> 9n;
try { new Int8Array(null, v80, 268435456n); } catch (e) {}
const v90 = new Int8Array(268435456);
try { v90.filter(268435456); } catch (e) {}
new WeakMap();
