function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 1576162073;
    } catch(e3) {
    }
    try {
        this.g = 1576162073;
    } catch(e4) {
    }
    try {
        this.d = 1576162073;
    } catch(e5) {
    }
}
new F0();
new F0();
new F0();
[44196,-4];
[9,2];
[9007199254740992,-17301,10,9007199254740992,-1101632711,-65535];
const v18 = [1073741824,1073741823,1376142744,1073741825];
function f19(a20, a21, a22, a23) {
    a22 * a21;
    const o25 = {
    };
    o25.__proto__;
    return f19;
}
for (let v27 = 0; v27 < 10; v27++) {
    f19(v18, v27, v27);
}
%OptimizeFunctionOnNextCall(f19);
v18();
