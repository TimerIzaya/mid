const v0 = /IV?/gum;
function f1() {
    function f2() {
        v0[7] = v0;
        new Float32Array(129);
        new Uint16Array(221);
        const v11 = new Float64Array(127);
        return v11;
    }
    return f2;
}
Object.defineProperty(v0, "toString", { enumerable: true, get: f1 });
/abc*/udi;
const v13 = /xyz??/vdy;
const v16 = new Int32Array(3670);
v16[3166];
let v18 = 257;
let v20;
try { v20 = Float64Array.bind(Float64Array); } catch (e) {}
v20[4] = v20;
const v21 = new Float64Array(v18);
const v24 = ("object").normalize("NFD");
const v25 = [1000000.0,4.0,877990.5497759602,-506457.5906391711,1.5877136832764825e+308,-5.0,0.37988723353754195];
const v26 = [-2.2250738585072014e-308,4.258971338651328e+307];
class C28 {
    #valueOf(a30, a31) {
    }
    static #a = v26;
    #g = 536870887n;
    static #f = v25;
    #b;
}
const v35 = new Uint8ClampedArray(4);
function f36() {
    return f1;
}
function f37(a38) {
    class C40 {
        constructor(a42, a43, a44) {
        }
    }
    new Uint32Array(C40);
}
Object.defineProperty(v35, "valueOf", { writable: true, get: f36, set: f37 });
v35[3] = v35;
v18 = 4;
!v20;
v26.push(0.0);
new Uint8ClampedArray(14);
Float64Array[1] = Float64Array;
const v58 = Math.round();
async function f59(a60, a61, a62) {
    await v58;
    return f59;
}
f59(Math, "b", v58);
Float64Array.name = Float64Array;
v13[1] = v16;
const v69 = [/D[\p{Script_Extensions=Mongolian}&&\p{Number}]*/udisy];
["-536870912","replace",v69,1,[v69]];
try { v21.lastIndexOf(4, 4); } catch (e) {}
v20?.[4];
v13 >= v0 ? v13 : v0;
const v76 = new Float64Array(Float64Array, Float64Array, Float64Array);
const v79 = new Uint8Array(1010);
try { v76.filter(v76); } catch (e) {}
const o86 = {
    268435439: Uint8Array,
    ...0.0,
    "type": v24,
    512: v79,
    valueOf() {
        const v83 = /gk4b*/vmsy;
        Object.defineProperty(v83, -9223372036854775808, { enumerable: true, set: gc });
        return v83;
    },
    ...v79,
    "type": v25,
    get c() {
    },
    9: "object",
};
