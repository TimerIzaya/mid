class C3 {
    m(a5, a6) {
        const v7 = a5?.[8];
        let v8;
        try { v8 = v7(this, v7, v7, 346643220, -6318); } catch (e) {}
        return v8;
    }
    a;
    static {
        this.length;
        try { this.apply(this, "boolean"); } catch (e) {}
        const v12 = this >> this;
        v12 >>> v12;
        v12 >>> v12;
        Uint32Array.e = Uint32Array;
        const t15 = "-2147483649";
        t15[8] = "-2147483649";
        const v19 = ("-65537")?.constructor;
        try { new v19("-2147483649"); } catch (e) {}
    }
}
C3.length;
let v22;
try { v22 = new C3(); } catch (e) {}
v22.b = v22;
const v23 = new C3();
v23.e = v23;
const v24 = new C3();
v24.a = v24;
const v25 = new C3();
function F26(a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    a28.a = a28;
    a29.a;
    a30.e = a30;
    try {
        this.h = a28;
    } catch(e32) {
    }
    try {
        this.c = a29;
    } catch(e33) {
    }
    try {
        this.b = a29;
    } catch(e34) {
    }
}
new F26(v23, v25, v24);
new F26(v24, C3, v25);
const v37 = new F26(v23, v25, v23);
v37.h;
[43503,-1024,-8895,-1,5,-12630053,268435440,-9007199254740991];
const v40 = [-1311230373,1088762261];
[-650846795,-3,9007199254740992];
-15n <= -15n;
class C45 {
    constructor(a47, a48) {
        const v49 = this?.constructor;
        try { new v49(v25, a47); } catch (e) {}
        a47 ^ a47;
        const v52 = this.constructor;
        v52.length;
        try { new v52(-15n); } catch (e) {}
        a47 & a47;
        const o56 = {
        };
        o56.e = a47;
    }
}
const v57 = C45?.constructor;
try { new v57(v40); } catch (e) {}
new C45(-9007199254740992n);
new C45();
