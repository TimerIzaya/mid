let v2 = "boolean";
class C3 {
    constructor(a5) {
        v2.length ^= a5;
        try {
            this.valueOf = a5;
        } catch(e6) {
        }
    }
    b = 50142;
    3;
    [v2] = v2;
}
const v7 = new C3(0.6902584227108585);
new C3(v7);
const v9 = new C3(v7);
class C13 {
}
for (let i16 = 0, i17 = 10;
    i16 < i17;
    (() => {
        const v21 = [601759695];
        const v22 = [1073741824,1073741823,1376142744,1073741825];
        ({"e":C13,"length":v2,...v2} = v22);
        v22[-2] = v2;
        i16 /= i17;
        v22[16];
        function f26(a27, a28, a29, a30) {
            function f31() {
                return a27;
            }
            v9[10] = a30;
            Math.abs(10);
            -(-256);
            3.0 << 3.0;
            function f39(a40, a41) {
                return i16;
            }
            f39(v22, C13);
            try { v22["find"](..."find", a30, ...v21, ...v22, ...522675525n); } catch (e) {}
            a29?.[4294967296];
            let v47 = 260877592;
            let v48 = 828140434;
            v47--;
            v48++;
            -v47;
            return a29;
        }
        for (let v53 = 0; v53 < 10; v53++) {
            f26(v53, f26, i16, v53);
        }
        i16++;
    })()) {
}
