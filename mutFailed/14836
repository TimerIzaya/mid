function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 10;
    } catch(e3) {
    }
}
new F0();
new F0();
new F0();
new BigUint64Array(3441);
let v11 = Uint32Array;
const v12 = new v11(7);
let v20 = 4294967297 % (7 >> 7);
7 && F0;
4294967297 % 56111;
const v23 = ~F0;
v20--;
~v23;
new Uint16Array(7);
for (let i29 = 0, i30 = 10;
    i29 < i30;
    (() => {
        i30--;
        function f35(a36, a37) {
            --v11;
            try { a36(v12, 7); } catch (e) {}
        }
        new Promise(f35);
    })()) {
}
function f45() {
    ("w75iJ").length;
    const v50 = !7;
    const o52 = {
        "c": Array,
    };
    const t37 = o52.c;
    const v54 = new t37();
    v54.forEach(Uint32Array);
    for (const v58 of Array(4087, Array, Array)) {
        v50 instanceof v58;
        v11 >>> "w75iJ";
        function f64() {
            return o52;
        }
        v58.toString = f64;
    }
}
%PrepareFunctionForOptimization(f45);
f45();
%OptimizeFunctionOnNextCall(f45);
f45();
