class C3 {
    #b;
    set d(a5) {
        try {
            a5.a = this;
        } catch(e6) {
        }
    }
    static 268435456 = -2;
    ["j"] = "j";
    static [-2];
    #p(a8) {
        super[-2];
        function f10() {
            return f10;
        }
        return -2;
    }
    p(a12, a13) {
        a12 * this;
        const v17 = a12--;
        Math.sign(1073741825);
        Math.tanh(a12);
        Math.hypot(v17);
        --C3;
        !v17;
        return -2;
    }
}
const v23 = new C3();
v23.j = v23;
const v24 = new v23();
const t32 = "undefined";
t32.d = v24;
new C3();
let v28 = new Uint8Array(128);
function f29() {
    return f29;
}
class C30 extends f29 {
}
try {
    v28 &= C30;
} catch(e31) {
    for (let v32 = 0; v32 < 5; v32++) {
        function f33() {
            return -2;
        }
    }
}
for (let v35 = 0; v35 < 25; v35++) {
    "p" + v35;
}
("h").split(65535);
const v42 = new Uint32Array(6);
let v43;
try { v43 = v42.keys(); } catch (e) {}
new v43(1024);
const v49 = new Uint32Array();
1887 ^ 1887;
const v53 = new Int32Array(Int32Array);
new Uint8Array(v53);
const o59 = {
    ..."44184",
    [-15]: -15,
    2480: 9,
    ..."j",
};
function* f61(a62) {
    return a62;
}
function f63() {
    const o64 = {
        "call": f61,
    };
    return f63;
}
f63();
f63();
Int16Array.length = Int16Array;
function f69(a70, a71) {
    const o116 = {
        [v49](a73, a74, a75) {
            const v76 = a71?.[a73];
            const v78 = [-1.5424212036356715e+308];
            v78[536870887n] = v78;
            class C79 {
                #valueOf(a81, a82) {
                }
                constructor(a90, a91) {
                    for (let i94 = 0, i95 = 3; i95 < 3;) {
                    }
                    for (let i104 = 0, i105 = -1540955429;
                        (() => {
                            const v106 = i104 < i105;
                            a90.#valueOf();
                            return v106;
                        })();
                        ) {
                    }
                }
            }
            v76.__proto__;
        },
    };
    return o116;
}
try { ("setInt16").repeat(-2); } catch (e) {}
const t108 = "function";
t108[5] = "function";
