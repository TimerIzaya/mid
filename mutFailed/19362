class C3 {
    #d = -1987723579;
    #valueOf(a5) {
        super.g;
        return Infinity;
    }
    static description = -1987723579;
    static o(a8) {
        a8 = this;
        [Infinity,-692.2486840282946,1000000000000.0];
        [0.6088878552323997];
        [0.12844704350360336,0.9538313645594373,1.0807980679350582,1.7976931348623157e+308,-1e-15,4.0,-1e-15];
        return this;
    }
}
try { new C3(); } catch (e) {}
new C3();
const v14 = new C3();
const v15 = v14?.constructor;
try { new v15(); } catch (e) {}
const v17 = new C3();
function f18() {
    function f19() {
        v17.b;
        try {
            const v23 = Array(19793);
            for (const v24 of v23) {
            }
            const v25 = [v23,v23,v23,v23,v23];
            [[v25,v25,v25]];
        } catch(e29) {
            [e29,v17];
        }
        return C3;
    }
    return f19;
}
Object.defineProperty(v17, Symbol.toPrimitive, { writable: true, configurable: true, get: f18 });
try { v17.propertyIsEnumerable(Infinity); } catch (e) {}
/(?: foo )(t)/gvdimy;
/{,}a{12,\u0060+/gisy;
/K\u0060/udi;
-7n;
let v39 = 4294967297n;
v39++;
const v42 = /lPn/gvm;
function f43() {
    try { ("test").charAt(v17); } catch (e) {}
    const v46 = v42["test"]("test");
    v46 && v46;
    return v46;
}
%PrepareFunctionForOptimization(f43);
!f43();
%OptimizeFunctionOnNextCall(f43);
f43();
