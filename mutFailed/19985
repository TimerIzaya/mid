const v0 = [14522,536870912,699605362,512,9,13,-24706];
[-1833061254,16,65537];
const v2 = [9007199254740990,-268435456,536870888,-9223372036854775808,10000];
const v3 = [0.0,0.2504816746024132,0.0,1e-15];
try { v3.flat(); } catch (e) {}
[-423225.3196238183,-4.278645830906366e+306,1000000000.0,-1e-15,5.011317630621582,1000.0,-3.1822613071198695];
[-Infinity,-816.3565079140043,-142.04240544264678,-0.0];
("754969374")[1];
new Int8Array(1);
1250 >> 1250;
new Float64Array(v0);
const v20 = new Int32Array("p");
const v21 = v20?.__defineSetter__;
try { new v21(v2, v2); } catch (e) {}
const v23 = [1073741824,1073741823,1376142744,1073741825];
function f24(a25, a26, a27, a28) {
    function f29() {
        try {
            v23.findLast();
        } catch(e31) {
            e31.message;
            class C33 {
            }
            const v34 = new C33();
            const v35 = v34?.constructor;
            try { new v35(); } catch (e) {}
            const v37 = [1000000.0,0.218433446981681,-5.0,-919787.2036172998,872389.6270716691];
            const v39 = [v34,v34,v34,Reflect,v34];
            try { v39.pop(); } catch (e) {}
            const v41 = v37.pop;
            Reflect.apply(v41, v34, v41);
        }
        return f24;
    }
    f29();
    %OptimizeFunctionOnNextCall(BigInt());
    return a26;
}
for (let v46 = 0; v46 < 5; v46++) {
    f24();
}
