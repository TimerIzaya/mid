const v3 = [250.2764403337619,4.833625943864233,0.9316787036577939,1000.0,-2.2250738585072014e-308,0.17766304136443145,-9.598730745998825e+307,0.0];
[2.220446049250313e-16,1e-15,0.08826116956762498,-Infinity,443185.5625604056,4.736326687565699e+307,-4.0];
[1.0];
[-2.220446049250313e-16,-60.38444516413222,1000000000000.0,1000000.0,644.9036134741327,0.7722523132390402,-2.2250738585072014e-308,540.6411638375971,-3.049941411412325,-2.220446049250313e-16];
const v7 = [-1000000000000.0,-3.0,Infinity];
const v8 = [1000000000.0,353822.73628110415];
function f9(a10, a11, a12) {
    const o32 = {
        m(a14, a15, a16) {
            super.c;
            return a15;
        },
        [a10](a19, a20, a21, a22) {
            new Int16Array(10);
            new Uint16Array(Uint16Array);
            const v31 = new Uint8Array(0);
            return v31;
        },
    };
    return o32;
}
const v33 = f9(v3, v3, -14932n);
f9(v7, v7, v33);
f9(f9, v3, v8);
function F37(a39, a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
}
class C42 {
    static get g() {
        try {
            super.subarray();
            var a = -14932n;
        } catch(e45) {
        }
    }
}
new Map();
for (const v49 in [-14339,735253629,4294967296,3,268435456,3,57019,268435439]) {
    ("-2").normalize("NFKC");
}
new v33();
class C58 extends WeakMap {
    536870887;
}
const v61 = new Int32Array(2917);
v61[Int32Array](10);
gc();
try {
} catch(e70) {
}
function F71(a73, a74) {
    if (!new.target) { throw 'must be called with new'; }
}
function F75(a77, a78) {
    if (!new.target) { throw 'must be called with new'; }
}
