new Int16Array(128);
let v10 = 6;
8.015776941710463 & 44795;
const v13 = -Float32Array;
8.015776941710463 / 1899;
const v15 = Math.tanh(1899);
++v10;
!v13;
const v18 = new Float32Array(1899);
function f19(a20, a21, a22, a23) {
    const o24 = {
    };
    new Proxy(v18, o24);
    return o24;
}
f19(256, 256, v15, 128);
new Float64Array(3102);
new WeakMap();
class C36 {
    static a;
    static {
        this >> this;
        v18[5] = this[6];
        new Float64Array(43);
        new Uint32Array(563);
        new Int32Array(10);
    }
    static m(a50) {
        gc();
    }
}
const v53 = new C36();
v53[Symbol.toPrimitive] = f19;
const v56 = new C36();
new C36();
let v59;
try { v59 = v56.getMonth(1000); } catch (e) {}
v59 % v53;
try {
    C36();
} catch(e62) {
}
