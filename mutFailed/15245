class C3 {
    n(a5, a6) {
        try {
            this.length = 0;
        } catch(e8) {
        }
        let v9;
        try { v9 = a5(a6, -5.0, 4.0, this); } catch (e) {}
        v9[2147483648] **= 0;
        return this;
    }
    valueOf(a11, a12) {
        return "-25236";
    }
}
const v16 = new C3();
new C3();
const v18 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
function f19(a20, a21, a22, a23) {
    const v26 = new Uint8ClampedArray(2664);
    v26[0] = "asIntN" / "number";
    for (let i32 = 0, i33 = 10; i32 < i33; i33--) {
        for (let v40 = 0; v40 < 25; v40++) {
            const v41 = v18.constructor;
            v41(v41);
        }
    }
    return 2664;
}
for (let v43 = 0; v43 < 10; v43++) {
    f19();
}
new C3();
function f46() {
    return C3;
}
class C47 {
    h = C3;
    static m(a49, a50, a51) {
        +4.0;
        ([-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1]).pop();
        function F60() {
            if (!new.target) { throw 'must be called with new'; }
            this.a = F60;
            function f63() {
                const o76 = {
                    m(a65) {
                        const v68 = new Int8Array(3938);
                        let v69 = 3;
                        let v70 = 0;
                        v70 >> v70;
                        for (let i = 0; i < 5; i++) {
                            [...v69] = v68;
                            v70++;
                            try {
                                a65.length = 1;
                            } catch(e74) {
                            }
                        }
                        const o75 = {
                        };
                    },
                };
                o76.m(o76, o76, o76, f63, f63);
                return o76;
            }
            try {
            const t0 = 6;
            t0(6, 6);
            } catch (e) {}
            try {
            } catch(e80) {
            }
            try {
            } catch(e81) {
            }
        }
        const v82 = new F60();
        with (v82) {
        }
        const v83 = f46 >>> -2.220446049250313e-16;
        const v84 = Math.tan(7);
        Math.log10(f46);
        Math.random();
        Math.cosh(v83);
        Math.imul(-2.220446049250313e-16, f46);
        return v84;
    }
}
new C47();
new C47();
const v91 = new C47();
class C92 extends f46 {
    #p(a94, a95) {
        [-9007199254740991,-13,1073741823,-15,-2129170657];
        [-268435456];
        [1073741825,-1073741824,-17508128,-15,-268435456,-44041,2147483647,6,19096];
        return C3;
    }
    m(a100, a101) {
        let v102;
        try { v102 = C47.m(); } catch (e) {}
        try {
            a100.#p(v16, "setSeconds", "n", v91);
        } catch(e107) {
        }
        return v102;
    }
}
new C92();
new C92();
new C92();
const v113 = new Uint16Array(255);
let v114 = 5;
v114--;
new BigUint64Array();
new Uint8Array(255);
const v120 = v113.buffer;
v120.slice(v120, v114);
