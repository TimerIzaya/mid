function f0() {
}
new BigUint64Array(8);
new Float32Array(2979);
const v9 = new Float32Array(0);
const v16 = [65537,268435441,63298,-5,1235122603];
const v17 = [128,215394418];
const v18 = [-2,-4294967296,4294967297];
function F19(a21, a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    let v25;
    try { v25 = a24.valueOf(); } catch (e) {}
    const v26 = v25.constructor;
    try { new v26(1024, 1024, v16, this); } catch (e) {}
    a22.caller;
    this.c = a23;
    this.f = a22;
}
const v29 = new F19(-714582153, v17, -714582153, v17);
new F19(9, v29, 9, v18);
let v31 = -1;
class C32 {
    static 7;
    #n(a34) {
        const o37 = {
            "execution": "sync",
        };
        gc(o37);
        Date();
        "bpkzx" * v17;
        class C43 {
            #m(a45, a46, a47) {
                for (const v48 in a47) {
                    delete this?.h;
                    v9.__proto__;
                }
            }
        }
    }
}
new v29();
let v52 = 10;
for (; v52--;) {
}
const v54 = ("V7zNh")?.constructor;
try { new v54(); } catch (e) {}
[55948];
[255,-8,65537,4294967295];
function f58(a59, a60) {
    const v64 = new Uint16Array(Uint16Array);
    return v64;
    for (const v66 in "1487412280") {
    }
    0 < 5;
    const o76 = {
        [v18](a69, a70, a71, a72) {
            [-1.914133087028695,-2.2250738585072014e-308,-3.0,1000.0,-168.3778506155984];
        },
        "a": v29,
        set b(a75) {
            v31 <<= v31;
        },
    };
}
