function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = -1024;
    } catch(e3) {
    }
    try {
        this.c = -1024;
    } catch(e4) {
    }
    try {
        this.d = -1024;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
v8.g;
function f10(a11, a12) {
    const o33 = {
        __proto__: v8,
        [F0]: a11,
        n(a14, a15, a16) {
            try { new.target(v7, new.target, this, a11); } catch (e) {}
            const v20 = Symbol.iterator;
            const o32 = {
                [v20]() {
                    let v22 = 10;
                    const o31 = {
                        next() {
                            v22--;
                            const v26 = v22 == 0;
                            const o30 = {
                                [a12]: a12,
                                "maxByteLength": 0,
                                setUint16(a28, a29) {
                                    return this;
                                },
                                "done": v26,
                                "b": v26,
                                "value": v22,
                            };
                            return o30;
                        },
                    };
                    return o31;
                },
            };
            return this;
        },
    };
    return o33;
}
const v34 = f10(v8, v8);
const v35 = v34?.n;
try { new v35(v34, v34, v6); } catch (e) {}
const v37 = f10(v8, v34);
try { v37.n(f10, v8, f10); } catch (e) {}
f10(v7, v8);
const v41 = new Set();
try { v41.add(v6); } catch (e) {}
2.220446049250313e-16 - 2.220446049250313e-16;
function F47() {
    if (!new.target) { throw 'must be called with new'; }
    const v49 = this?.__lookupSetter__;
    try { new v49(Set); } catch (e) {}
    try {
        this.d = -1073741824;
    } catch(e52) {
        const v53 = [-13939,-12,1904189168];
        const o54 = {
        };
        function f55(a56, a57) {
            v53[11] = o54;
            return o54;
        }
        f55(o54, v53);
    }
    const v60 = Promise.reject(Promise);
    const v61 = v60.then(v60);
    try { v61.then(v34, v34); } catch (e) {}
    const v64 = -12 % -12;
    v64 >> v64;
    new Date(v64);
    try {
        this.name = -1073741824;
    } catch(e68) {
    }
}
const v70 = Symbol.toPrimitive;
Symbol.for(v70.description);
F47[v70] = f10;
const v74 = new F47();
v74.name;
const v76 = new F47();
const v77 = new F47();
v77.name = v77;
const v78 = /Q/dy;
const v79 = v78?.toString;
try { new v79(); } catch (e) {}
const v81 = [-6.104504038584553,4.0,-452697.8403307203,-1000000000.0,2.220446049250313e-16,0.0,0.0,1.1099483472382532e+307,439.1525938198956,NaN];
const v84 = new Date();
const v85 = v84.setUTCDate(0.1720098570652283);
for (let v86 = 0; v86 < 25; v86++) {
    const v87 = [601759695];
    try { v87.entries(); } catch (e) {}
    const v89 = [1073741824,1073741823,1376142744,1073741825];
    function f90(a91, a92, a93, a94) {
        const v95 = a91?.constructor;
        try { new v95(a91); } catch (e) {}
        try { a92.sort(a93); } catch (e) {}
        try { ("find").valueOf(); } catch (e) {}
        try { v89["find"](..."find", ...a94, ...v87); } catch (e) {}
        return v86;
    }
    for (let v101 = 0; v101 < 10; v101++) {
        v101 >>> v101;
        f90(f90, v87, v101, v87, v101, v85, v101);
    }
}
[0.28442386581033785,-1000000.0,128.20759201318378];
const v105 = [-1.7289655295341637e+308,-1000000.0];
const t121 = "pop";
t121[1] = "pop";
v81["pop"]();
const v108 = v78?.test;
try { new v108(v76); } catch (e) {}
/ZKfoo(?!bar)baz/dimy;
const v111 = /X/udms;
try { ("-9007199254740992").fixed(); } catch (e) {}
try { ("bigint").padStart(F47); } catch (e) {}
-1.0 >>> -1.0;
class C122 {
    constructor(a124, a125) {
        const v126 = this?.constructor;
        try { new v126(a125, "129"); } catch (e) {}
        a125 | a125;
        Object.defineProperty(a124, "valueOf", { configurable: true, enumerable: true, value: Date });
        const v129 = this?.__defineGetter__;
        let v130;
        try { v130 = new v129(a124, this); } catch (e) {}
        try { new a124("-9007199254740992", this, v130, v129); } catch (e) {}
        const v132 = a125 - a125;
        for (let v133 = 0; v133 < 5; v133++) {
            /(?:a*)+q(?<a>.)/guds;
            for (let i137 = 0, i138 = 10;
                i137 < i138;
                (() => {
                    i137 ^ i137;
                    const v143 = i138--;
                    const v146 = new BigInt64Array(3768, v111, v41);
                    function f147(a148, a149) {
                        a148.prototype = a148;
                        a149[2923];
                        const v151 = a148++;
                        const v152 = v151 >> v151;
                        v152 * v152;
                        let o154 = {
                        };
                        [,...o154] = v146;
                        return v152;
                    }
                    let v155 = f147(BigInt64Array, v146, v143);
                    v155++;
                    v105[v146] = v132;
                    for (let v157 = 0; v157 < 32; v157++) {
                        this["p" + v157] = v157;
                    }
                })()) {
                i138--;
                const o163 = {
                };
            }
            const o164 = {
            };
            o164.b = o164;
        }
    }
}
const v165 = new C122(C122, -7);
v165.a = v165;
const v166 = v165?.constructor;
let v167;
try { v167 = new v166(v165, v74); } catch (e) {}
v167.p7 = v167;
const v168 = new C122(C122, v165, "129");
v168.b = v168;
