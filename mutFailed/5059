function f0() {
    let v3 = -2.220446049250313e-16;
    ++v3;
    new Uint16Array(1657);
    const o9 = {
        "f": -2102029848,
        "d": -2102029848,
        "h": "call",
        "g": 296.8844113061841,
        __proto__: "call",
        "e": "call",
        7: 296.8844113061841,
        "c": -2102029848,
        "b": "call",
        "a": "call",
        2836: "call",
    };
    return 296.8844113061841;
}
f0();
const v11 = f0();
const v12 = f0();
class C13 extends f0 {
    static #d;
    constructor(a15, a16) {
        super();
        try { this.flat(a15, a15, a16, a16, this); } catch (e) {}
        try {
            f0();
        } catch(e19) {
        }
    }
    13 = v12;
    221;
}
const v20 = new C13(v11, v12);
new v12();
const v22 = new f0();
function f24(a25, a26, a27, a28) {
    const o31 = {
        "g": a25,
        [-1]: f0,
        set b(a30) {
        },
        1025549261: v22,
    };
    return -5.008255649855068e+307;
}
f24(-5.008255649855068e+307);
new C13(v12, v20);
new C13(C13, v11);
const v36 = new WeakMap();
[-1e-15,-1000.0,-1.7197891975819863e+308];
[6.760310914003092,8.213961861061096e+307,0.03166234697515169,676426.6393337266,0.8531785947528798,1e-15,-4.0];
[-134.27332601337685,2.220446049250313e-16,0.3715439209542707,1e-15,-2.220446049250313e-16,-130434.69705469836];
const v42 = new BigInt64Array(205);
try { Uint16Array(205, BigInt64Array, 256); } catch (e) {}
const v46 = new Uint16Array(256);
const v47 = v42[205];
0 >> 0;
v47 ^ v47;
class C51 {
}
function f52(a53, a54, a55, a56) {
    arguments[4] = arguments;
    return a55;
}
try {
    ([1.7976931348623157e+308,-5.063738949828065,-1000000.0,-4.0,4.0,1.368499884638594e+307,0.0,-1.2131530743918297,-1000000000.0,-2.809909548595164]).concat();
    let v60 = 0;
    do {
        const o62 = {
        };
        o62.c = o62;
        gc();
        v60++;
    } while (v60 < 5)
    v47.toString = v47;
} catch(e67) {
    e67.message = e67;
}
255 ** 255;
Float64Array.BYTES_PER_ELEMENT;
const v72 = new Float64Array(255);
function f73() {
    const o75 = {
        0: "1ya",
        162: "1ya",
    };
    function F76(a78, a79, a80) {
        if (!new.target) { throw 'must be called with new'; }
    }
    new F76(F76, F76, F76);
    const t93 = [8.360030709333259,416819.70671931445,1000.0,-1.0513464134302462e+307,2.2250738585072014e-308,-999.1393293497049];
    t93.length = 1;
    return v46;
}
v72[Symbol.toPrimitive] = f73;
new f73(512);
for (const v90 in [-2096457859]) {
    Array(310668736);
}
function F93(a95, a96, a97, a98) {
    if (!new.target) { throw 'must be called with new'; }
    a96 >> a96;
    a98 + a98;
    try {
        v72.b = a96;
    } catch(e101) {
    }
    try {
        this.h = a95;
    } catch(e102) {
    }
}
F93.constructor = f73;
const v103 = F93?.constructor;
try { new v103(v72); } catch (e) {}
const v105 = new F93(255, 205, 255, 205);
const v106 = new F93(255, 256, 255, 256);
new F93(255, 205, 256, 255);
const v109 = ([-Infinity,-5.577012134541006])?.filter;
try { new v109(Uint16Array); } catch (e) {}
const v111 = [-1000000000.0,5.0,872297.1015869486,-1e-15,0.2087529151028652];
[-2.220446049250313e-16,-171953.22769972356,2.220446049250313e-16,Infinity,-3.0,-4.368087235127776];
const v113 = /(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/u;
const v114 = [Infinity];
const v115 = [2.2250738585072014e-308,1.949684848262672,4.0];
v115[3] = v36;
const v116 = v115.push(v113);
const v117 = [-841413.1787837626];
v117.toStringTag = v111;
const v118 = v117.toStringTag;
try { v114.every(v118, v106); } catch (e) {}
v105.h >>>= v116;
v111.length;
