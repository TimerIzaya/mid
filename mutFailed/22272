Float32Array[1] = 2318;
Float32Array[1] = -1e-15;
class C3 extends Float32Array {
    constructor(a5, a6, a7) {
        super(a7);
    }
}
const v9 = new Uint32Array(2318);
function f12() {
    const o23 = {
        toString(a17, a18) {
            try {
                super.getMinutes(a18);
            } catch(e20) {
            }
            return "object";
        },
        "type": "boolean",
        set g(a22) {
        },
        "b": "boolean",
        "g": "object",
        128: "boolean",
        "a": 1000000000000.0,
        "c": "boolean",
        ["object"]: f12,
        ..."object",
        ["boolean"]: 1000000000000.0,
        [f12]: f12,
        5: f12,
        __proto__: "boolean",
        "h": 1000000000000.0,
    };
    return o23;
}
function f24(a25) {
    Object.defineProperty(v9, 268435440, { writable: true, enumerable: true, get: f12, set: f12 });
    a25 instanceof Uint32Array;
    return f12;
}
f12[Symbol.toPrimitive] = f24;
const v29 = f12();
const v30 = f12();
function F31(a33) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "h", { writable: true, configurable: true, value: v30 });
    a33[128] = a33;
    try {
        this.f = a33;
    } catch(e34) {
    }
    try {
        this.h = a33;
    } catch(e35) {
    }
    try {
        this.d = v29;
    } catch(e36) {
    }
}
new F31(v30);
const v38 = new Int16Array(3);
new Int8Array(3775);
function F42(a44, a45, a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a44;
    try {
        this.d = a46;
    } catch(e48) {
    }
    try {
        a47.h = v38;
    } catch(e49) {
        const o51 = {
            "f": -1.883023285666516,
        };
        function F56(a58, a59, a60, a61) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.a = "536870889";
            } catch(e62) {
            }
            try {
                this.b = a61;
            } catch(e63) {
            }
        }
        new F56(1073741824n, 1073741824n, 257n, "6");
    }
    try {
        this.a = a47;
    } catch(e65) {
    }
}
new F42(3775, 3775, 3, 2318);
new F42(3775, 3775, 3, 2318);
new F42(2318, 3, 2318, 2318);
class C69 {
    static #n(a71, a72) {
        this[a71] = v38;
        super[3775] = 2318;
        return a72;
    }
    static b;
    a;
    #h;
    static #m(a74, a75, a76, a77) {
        try {
            v9.__proto__ = F42;
        } catch(e78) {
        }
        return a75;
    }
}
new C69();
new C69();
new C69();
for (let v82 = 0; v82 < 5; v82++) {
    function f83() {
        ("Vre").fixed("Vre");
        const v86 = ("Vre").codePointAt();
        const v87 = v86 * v86;
        return v87 >= v87;
    }
    f83();
    %OptimizeFunctionOnNextCall(f83);
}
