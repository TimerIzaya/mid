const v3 = /\1(a)/um;
const v4 = /1(ab|cde)\1/ui;
const v5 = /a\fb\nc\rd\te\vf/vdiy;
function f6(a7, a8) {
    a7.dotAll = a7;
    a8 >> a8;
    const o14 = {
        valueOf(a11, a12) {
            try {
                this.__proto__ = v4;
            } catch(e13) {
            }
            return v3;
        },
        "d": v4,
        "h": v4,
        "g": a7,
        "e": 410990812n,
        "b": v4,
    };
    return o14;
}
const v15 = f6(v5, 410990812n);
f6(v3, 410990812n);
f6(v4, v15);
const v18 = [1.0,-680.0428134152268,0.25062783195319793,-2.2250738585072014e-308,4.0];
[1.7976931348623157e+308,0.0,2.0,-1000000000.0,2.7569131855429063e+306,0.9357761033197805,0.0,-5.138191320076258];
const v21 = ([-899029.7787091999,3.087606844194069e+307,-4.0962091306020426e+307,1.7976931348623157e+308,0.03801808291450437,3.351448923847082,-1.4386787267809504e+308,4.0])?.filter;
try { new v21(v18); } catch (e) {}
let v26 = -33506n;
v26--;
v26 >> v26;
const v32 = true && true;
const v33 = [-1.7602408547300875e+307,-5.0,6.800823572256861e+306,-1000000000000.0,2.2250738585072014e-308,681.5038956878516,-1.5358312952840025e+308,2.220446049250313e-16];
function F34() {
    if (!new.target) { throw 'must be called with new'; }
    const v36 = this?.constructor;
    try { new v36(); } catch (e) {}
    this.g = this;
}
try { new F34(); } catch (e) {}
function F40(a42, a43, a44, a45) {
    if (!new.target) { throw 'must be called with new'; }
    v32.constructor;
    const o48 = {
        get b() {
        },
    };
}
F40.length;
new F34();
const v51 = new F34();
new F34();
const v54 = new WeakSet();
-v33;
function F59(a61, a62) {
    if (!new.target) { throw 'must be called with new'; }
    const v63 = this?.constructor;
    let v64;
    try { v64 = new v63(v54); } catch (e) {}
    new Date(..."undefined");
    function F69() {
        if (!new.target) { throw 'must be called with new'; }
        this.h = true;
    }
    v64 / v51;
    try {
        new F59(undefined, undefined);
    } catch(e74) {
    }
    try {
        this.c = a61;
    } catch(e75) {
    }
    try {
        this.b = undefined;
    } catch(e76) {
    }
}
class C77 {
    static n(a79) {
        let v78 = this;
        --v78;
        v51.h = v54;
        function f82(a83, a84) {
            const o86 = {
                get g() {
                    return a84;
                },
            };
            const t90 = 5;
            const v89 = new t90(5);
            function f90() {
                return v89;
            }
        }
        for (let v91 = 0; v91 < 60; v91++) {
        }
        return -9007199254740992n;
    }
    static get c() {
        eval();
    }
    constructor(a98) {
        function* f99(a100, a101) {
            yield* v33;
            return a100;
        }
        try { f99(F34, this); } catch (e) {}
    }
    static #a;
    /*
    constructor(a104, a105) {
        try {
            false || false;
            a104.fuck(false, this);
        } catch(e109) {
            const v110 = e109?.constructor;
            try { new v110(a105); } catch (e) {}
            function f112() {
                new Int8Array(1073741823);
            }
        }
    }
    */
    static #c = F34;
    #b = F34;
    #f;
    7 = v51;
    h;
}
const v116 = new C77();
v116.h = v116;
v116[7] = v116;
function f117(a118, a119) {
    return f117;
}
class C120 {
}
new C77();
const v123 = 255 * 255;
2147483647 & 2147483647;
~-1621084948;
let v128 = -268435456;
v128++;
let v130 = -4294967296;
v130--;
14900153 != 14900153;
~14900153;
const v135 = [-1.3667473485475811e+308,1.7976931348623157e+308,5.0,-3.583919688173468e+307,-1.5320462342133301e+308,-414873.4859108749,286122.8434793174,866.7395286670867,-1000.0,-742782.9714922046];
function f137(a138, a139, a140, a141) {
    a139.name = a139;
    a140 ^ a140;
    const v143 = a140 * a140;
    const v144 = v143 >>> v143;
    function f145() {
        const o153 = {
            __proto__: v135,
            valueOf(a147, a148) {
                return v135;
            },
            ["-1073741824"](a150, a151, a152) {
            },
        };
        try { o153.valueOf(v123, f6); } catch (e) {}
        const v155 = o153.copyWithin();
        try { v144.values(); } catch (e) {}
        v155[6] = v155;
        return v155;
    }
    try { f145(); } catch (e) {}
    f145();
    const v159 = [];
    function F160(a162, a163, a164, a165) {
        if (!new.target) { throw 'must be called with new'; }
        const v166 = this.constructor;
        try { new v166(a165, v159); } catch (e) {}
        a163[2];
    }
    %OptimizeFunctionOnNextCall(f145);
    return a138;
}
("29753").replaceAll("29753");
const v174 = new Float32Array();
v174.length >>>= 16;
[1024,1024];
Array(3);
for (let v179 = 0; v179 < 10; v179++) {
    v179 - v179;
    const v181 = f137(v135, f137, v179, v179);
    try { v181.pop(); } catch (e) {}
}
%OptimizeFunctionOnNextCall(f137);
f137("-1073741824", v135, v135, f137);
const v184 = [-2.0733633074075275,758.551210727333,2.220446049250313e-16,-1000000000.0,2.2250738585072014e-308,4.584857663377264,0.052658458769146654,-6.7235106526199395];
[1.0,1000000000.0];
try { v184.lastIndexOf(649182.3717798681); } catch (e) {}
let v188;
try { v188 = ("azp").strike(); } catch (e) {}
try { v188.italics(); } catch (e) {}
~268435456;
function F194() {
    if (!new.target) { throw 'must be called with new'; }
}
try { Int8Array.bind(649182.3717798681); } catch (e) {}
