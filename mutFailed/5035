function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    a5.arguments = a5;
    try {
        this.d = "X";
    } catch(e7) {
    }
    try {
        this.f = "maxByteLength";
    } catch(e8) {
    }
}
F3.name;
const v10 = new F3(F3, "X");
v10.h = v10;
new F3("X", "isInteger");
new F3("X", "isInteger");
9 - 9;
new Uint32Array(9);
new Int16Array(0);
new Int32Array(3);
/m+/gudimsy;
const v24 = [];
function F25() {
    if (!new.target) { throw 'must be called with new'; }
    const v27 = this.constructor;
    try { new v27(); } catch (e) {}
    let v29;
    try { v29 = this.valueOf(); } catch (e) {}
    v29.length = v29;
    try {
        this.d = v24;
    } catch(e30) {
        const v32 = new Set();
        class C33 {
            [v32];
        }
        function f34(a35) {
            return a35;
        }
    }
}
new F25();
new F25();
const v40 = new Uint16Array(512);
let v41;
try { v41 = v40.entries(); } catch (e) {}
new v41(v40);
("X")[48];
