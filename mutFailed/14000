function f0() {
    const v1 = [601759695];
    const v2 = [1073741824,1073741823,1376142744,1073741825];
    let v5;
    try { v5 = v2["find"](..."find", f0, ...v1, ...v2, ...522675525n); } catch (e) {}
    let v6 = 0;
    do {
        f0 === f0;
        try {
            v1.length = 1;
        } catch(e9) {
        }
        v6++;
    } while (v6 < 5)
    v5 <= f0;
}
new WeakSet();
new BigInt64Array();
const v20 = new Uint8ClampedArray(4);
const v22 = new Int8Array(v20);
v22.lastIndexOf();
new WeakMap();
const v26 = [286977509,536870889,-380982641,1073741825,-14496,-9223372036854775807];
const v27 = [64918,-21903,65536,-65537,-9007199254740991,268435440];
const v28 = /(?:a*)+q(?<a>.)/guds;
function f29(a30) {
    a30.constructor;
    return WeakSet;
}
for (let [i51, i52] = (() => {
        const v33 = v26.toLocaleString(f29);
        for (let v34 = 0; v34 < 5; v34++) {
            const v35 = v27[4];
            try {
                f29(v35);
            } catch(e38) {
            }
            const o39 = {
                "call": f0,
                "construct": f29,
                "defineProperty": f0,
                "get": f29,
                "getOwnPropertyDescriptor": f29,
                "getPrototypeOf": f0,
                "has": f0,
                "preventExtensions": f29,
                "set": f0,
                "setPrototypeOf": f0,
            };
            new Proxy(v33, o39);
            v28["exec"]("exec");
            const o45 = {
                "maxByteLength": 997,
            };
            const v47 = new ArrayBuffer(997, o45);
            new Int32Array(v47);
        }
        return [0, 10];
    })();
    (() => {
        const v53 = i51 < i52;
        !v53;
        return v53;
    })();
    (() => {
        i52--;
        const v59 = Symbol.toPrimitive;
        const o61 = {
            [v59]() {
            },
        };
    })()) {
    for (let v64 = 0; v64 < 5; v64++) {
        f29(v28);
    }
}
new Uint8Array(8);
new Uint32Array(530);
new Uint8ClampedArray(1201);
new Uint8Array(268435440);
function F78() {
    if (!new.target) { throw 'must be called with new'; }
}
class C80 {
    constructor(a82, a83, a84) {
        class C86 extends a83.constructor {
        }
        new C86();
    }
}
new C80(F78, C80);
