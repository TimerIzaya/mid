function f6(a7, a8) {
    const o11 = {
        "e": 3.601267322246791,
        ...a7,
        get a() {
            this.__proto__;
            return -551915.8047892967;
        },
        "b": 3.601267322246791,
        ...7.283692970325745,
        ...a7,
        ...a8,
    };
    return o11;
}
f6(-39160884n, -39160884n);
f6(849564019n, -39160884n);
f6(-5n, -5n);
const v18 = [1.7976931348623157e+308,-413892.0889157214,1.3273338355683957e+308];
const v19 = [2.6106058781874725e+307,1.0,285529.63794448716];
v19[Symbol.toPrimitive] = f6;
const v22 = [8.054972930120389,0.5017077090516519,-Infinity,-4.0,-6.00897007142827,1.0,-6.545477670141786e+307,-3.0,1000000000000.0,-1.4537848745596893e+308];
class C23 {
    static 6 = v19;
    static #o(a25, a26) {
    }
    [v19];
    constructor(a28, a29) {
        function f30(a31, a32) {
            return a32;
        }
        a28.toString = f30;
        /W(jy2)/udy.flags;
        let v40 = v19[C23];
        v40 **= Uint8Array;
        function f41(a42, a43, a44, a45) {
            return a44;
        }
        for (let v46 = 0; v46 < 625; v46++) {
            f41(Uint8Array, 2, v46);
            try {
                a28 &= -5.160144283511562e+307;
            } catch(e48) {
            }
        }
    }
    static 1014337901 = -338.7491556798858;
    4294967295;
    #n(a50, a51, a52, a53) {
    }
    static f;
    #toString(a55, a56, a57, a58) {
    }
    static [v19] = -5.160144283511562e+307;
    /*
    constructor(a60, a61, a62) {
        const v64 = new BigUint64Array();
        const o65 = {
            ...v64,
        };
        v19[1073741825] = a62;
        v19[12] = this;
        a61 ** super[a61];
    }
    */
    static 4294967296;
    3978 = -338.7491556798858;
    #f;
    228 = -338.7491556798858;
}
C23[Symbol.toPrimitive] = Symbol;
function f70(a71, a72) {
    %VerifyType(a71);
    new Int8Array(v19);
    return 1000.0;
}
C23.toString = f70;
const v75 = new C23(v19, v22, v18);
v75[Symbol.toPrimitive] = Symbol;
new C23(v75, v75, v22);
const v83 = new Uint8Array(208);
new BigInt64Array();
for (const v86 of v83) {
    for (let v87 = 0; v87 < 5; v87++) {
        "p" + v87;
    }
}
for (let i92 = 256n, i93 = 10; i92 < i93;) {
}
class C99 {
}
class C100 {
}
function f101(a102, a103, a104, a105) {
    for (let v106 = 0; v106 < 5; v106++) {
    }
}
