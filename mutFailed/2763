function F0() {
    if (!new.target) { throw 'must be called with new'; }
    for (let [i6, i7] = (() => {
            10 >> 10;
            return [0, 10];
        })();
        i6 < i7;
        i6++) {
    }
    try {
        this.g = -39828;
    } catch(e16) {
    }
    try {
        this.h = -39828;
    } catch(e17) {
        const o22 = {
            ["8"](a20, a21) {
            },
        };
    }
}
new F0();
new F0();
new F0();
/Q(ab)\p{Script_Extensions=Greek}*/vdim;
/[ia*?]/vim;
const v28 = /(?=)*/vms;
[Float32Array];
const t28 = [2147483647,9,268435441,-39151,7,16,-2019446363,0,4294967295,42568];
t28.length = 202;
Math.acosh(202);
new BigInt64Array(202);
const v39 = v28 >>> v28;
v39 - v39;
const v43 = new Uint16Array(2785);
v43.fill();
new Uint8ClampedArray(16);
new Uint16Array(6);
([127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649]).toSpliced(-1148418937, -1148418937, 2.220446049250313e-16, 2.220446049250313e-16, "-4");
