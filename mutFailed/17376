const t0 = 45614;
const v2 = new t0();
const t2 = 45614;
const v3 = new t2(-1000000000.0, v2);
function F4(a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
}
const v8 = new F4(-1000000000.0, v3);
v2.c = v8;
class C11 {
    toString(a13, a14) {
        a13 >>> a14;
        const v16 = ~this;
        class C17 {
            #e;
            static 3;
        }
        Object.defineProperty(C17, v16, { value: v16 });
        return 45614;
    }
    static get b() {
    }
    constructor(a20, a21, a22) {
        function f23(a24, a25) {
            return a24;
        }
        this[Symbol.toPrimitive] = f23;
        a21[4] = v2;
        for (let v28 = 0; v28 < 25; v28++) {
        }
    }
    [-2];
    static [45614];
    [45614];
    static {
        let v30 = this;
        super[v30] = 45614;
        v30 <<= v30;
        const o33 = {
            "maxByteLength": 3387,
        };
        const v35 = new ArrayBuffer(336, o33);
        new Int8Array(v35);
    }
}
new C11();
function f39() {
    const v41 = Math.atan(Math);
    return v41 - v41;
}
f39();
%OptimizeFunctionOnNextCall(f39);
new C11();
const v45 = new C11();
let v46 = -45624;
const v50 = [C11,[4294967297,59633,-2147483647],v46];
for (let i53 = 256n, i54 = 10; i53 < i54;) {
}
[v50,v45];
v46--;
const v63 = [-29345,48135,-2,-485818299,0,-34652,7,-65537];
let v64;
try { v64 = v63.group(v63, v63, v63, v63, v63); } catch (e) {}
const v68 = Object(16);
for (let v69 = 0; v69 < 5; v69++) {
    v68[Symbol.replace] = v64;
}
function f72(a73, a74, a75) {
    return true;
}
new Uint8Array();
function f80() {
    Math.sinh(0);
    const o85 = {
        ..."raw",
    };
    function f86() {
        return f86;
    }
    function f88() {
        Object.defineProperty(f80, 13, { enumerable: true, set: f86 });
        return o85;
    }
    f88();
}
const v93 = [f80,5.0];
[v93,v93,-9.82871036065143,5.0];
const v95 = [188,true];
const o96 = {
    "arguments": v95,
    "type": "function",
};
new Worker(f72, o96);
