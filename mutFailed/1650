const v1 = new WeakSet();
function f5(a6, a7) {
    new Uint8ClampedArray([515943.2030917471,-1e-15,1.7976931348623157e+308,0.19475803117559898,-546414.0415788401,285129.04068811354]);
    v1.for(Symbol);
    const o13 = {
        "g": a7,
        "d": a7,
        "c": a6,
        "e": 0.0,
        [-2.2250738585072014e-308]: -2.2250738585072014e-308,
        ...v1,
        "b": a7,
        [0.0]: -3.0,
        "f": v1,
        __proto__: v1,
    };
    return o13;
}
f5(-3.0, f5);
f5(-3.0, f5(-2.2250738585072014e-308, 0.0));
f5();
const v22 = new Uint32Array(2432);
const o23 = {
    ...v22,
};
const v25 = [];
function F26() {
    if (!new.target) { throw 'must be called with new'; }
    this.d = v25;
    const o29 = {
        ..."boolean",
    };
    function f30(a31, a32) {
        return f5;
    }
    Object.defineProperty(o29, 1, { configurable: true, get: f30 });
}
new F26();
const v34 = new F26();
new F26();
const t40 = Array(v1);
t40[2147483648] <<= 8;
function f40(a41) {
    const o45 = {
        __proto__: 2,
        ...a41,
        p(a43, a44) {
            return a44;
        },
    };
    return o45;
}
%OptimizeFunctionOnNextCall(f40);
(2.0 >>> 2.0) >>> 8;
const v50 = 5.0 >>> 5.0;
let v51 = 65536n;
~(v51--);
~(-2147483649n / -2147483649n);
let v57 = 536870888n;
v57++;
const v59 = [-3.5650322397951273,1000.0,0.802460520523592,5.641883312396217e+306];
[431.4791340196293,-3.0,125159.99825031101,21.6056810036589,1.6160148855763925e+308,1.7462069791264565e+308,5.0,1e-15,-1000.0];
try { o23.toString(); } catch (e) {}
const v62 = [-1.238631182886351e+308,1.9411414401127767e+306,5.0,-276.83656814954304,830049.9402099303,-4.0901138213923866e+307,-5.0,300.38437393340564];
try { v62.lastIndexOf(v59); } catch (e) {}
class C64 {
}
const v65 = v34.__lookupGetter__;
try { v65(v34); } catch (e) {}
const v67 = new C64();
class C68 {
}
async function f69(a70, a71, a72, a73) {
    return (await C68).call();
}
v67.isPrototypeOf(v50);
