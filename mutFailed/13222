const v6 = [4,268435441,56522,-2147483648,-1073741824,22670,340552179];
const v7 = [54077];
function f8() {
    function F9() {
        if (!new.target) { throw 'must be called with new'; }
        this.d = 2;
    }
    const v13 = [1613217357,204598905,15977,1122227661,64,-2,-12,536870888];
    const v14 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
    class C15 {
        constructor(a17, a18, a19, a20) {
            const v21 = this.constructor;
            try { new v21(v14, F9); } catch (e) {}
            v14 >>> a18;
            a19 >>> -0.0;
        }
    }
    new C15(v13, 659.0540372978887, v13);
    return v7;
}
v7[Symbol.toPrimitive] = f8;
const v29 = [-10,793874059,-4294967295,-9007199254740992,512];
function f30(a31, a32) {
    const o36 = {
        [v6]: a31,
        "h": v6,
        get a() {
            let {"a":v34,"length":v35,} = v7;
            return -371437420;
        },
        [-9007199254740990n]: v29,
        [-9558]: a32,
        "a": f30,
        "g": -9007199254740990n,
        [v7]: -9007199254740990n,
    };
    return o36;
}
f30(-9007199254740990n, v29);
f30(-9007199254740990n, v29);
f30(10000n, v6);
const t38 = [-Infinity,1.7976931348623157e+308,1.0,1.7976931348623157e+308,-1.0,Infinity];
t38.length >>>= 58664;
const o42 = {
    1073741825: "MIN_VALUE",
};
for (let v46 = 0; v46 < 100; v46++) {
    const o51 = {
        968: undefined,
        "d": undefined,
        [268435439n]: 2105444095n,
        __proto__: o42,
        "g": f30,
        "b": -4294967296n,
        "f": v7,
        valueOf(a50) {
            return v46;
        },
    };
    o51[1] = undefined;
    o51[1] = o51;
}
class C55 {
    static get h() {
        const o60 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o60);
        return 268435441;
    }
}
const v62 = new C55();
const v63 = new C55();
v63.toString = Symbol;
const v64 = new C55();
class C67 extends C55 {
    3;
    4294967296 = -4294967296n;
    n(a69) {
        this[a69] = -371437420;
    }
    ["ka"] = 1.0;
    [v63] = v62;
    ["256"] = v62;
    static #toString(a71, a72, a73) {
        try { a71(this, v64, a71, a73); } catch (e) {}
        Math.atan(16);
        a72 ^ 16;
        return Math.abs(16);
    }
}
new C67();
const v81 = new C67();
v81.valueOf = f30;
const v82 = new C67();
function f83(a84, a85) {
    a85 ^ a85;
    Symbol("MIN_VALUE");
    return a85;
}
v82[Symbol.toPrimitive] = f83;
v82 & v62;
if (v81 <= v64) {
    new Uint8ClampedArray(75);
    new Int16Array(6);
    new BigInt64Array(1821);
} else {
    new C67();
}
