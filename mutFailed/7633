const v3 = [1.1783503462329565e+308,-1.150005637115809e+308,-0.049265954710197235,1000000.0,0.9545295293625725,-1000000000000.0];
try { v3.fill(0); } catch (e) {}
const v5 = [5.0,0.1415387897303111,-145076.76629510242,0.8413878723478124];
v5[2];
const v7 = [-2.2250738585072014e-308,1.0213223658629467,1000000000.0,48812.99720442016,1000000000.0,2.0,-1.2911080609232721e+308];
let v9 = -1.2738232330779607e+308;
function f11(a12, a13, a14) {
    a12 | a12;
    try { a13.copyWithin(0, a12); } catch (e) {}
    const o23 = {
        "a": 2.220446049250313e-16,
        "d": a12,
        p(a18, a19) {
            ({"b":a12,"f":v9,"length":a13,} = a13);
            const o20 = {
            };
            new Proxy(v7, o20);
            return v3;
        },
        ...a13,
        "h": a13,
        "c": a14,
        __proto__: v5,
        [v3]: -4096,
    };
    o23.a = o23;
    return o23;
}
f11(-812.8061886262958, v3, v9);
f11(v9, v5, 0);
f11(2.220446049250313e-16, v7, v9);
function f27() {
    return 0;
}
let v30 = 268435439;
v30++;
class C32 {
}
C32.name;
class C34 {
    constructor(a36, a37, a38) {
        try { a38(); } catch (e) {}
        for (let v40 = 0; v40 < 25; v40++) {
            v40++;
            const o46 = {
                "execution": "async",
                "type": "minor",
            };
            o46.execution = o46;
            const v48 = gc(o46).then(new.target);
            try { v48.then(v7, v40); } catch (e) {}
        }
    }
}
new C34(C32, C34, C32);
