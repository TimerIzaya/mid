function f0() {
    const o13 = {
        "c": -1041357144,
        valueOf(a5) {
            let v6;
            try { v6 = a5(this, -1041357144); } catch (e) {}
            for (const v7 of "f") {
                const v10 = Reflect.construct(v7, [Reflect,v7], Reflect);
                try {
                    super.n("undefined", v6, v6, v10);
                } catch(e12) {
                }
            }
            return this;
        },
        ..."f",
    };
    return o13;
}
const v14 = f0();
const v15 = f0();
const v16 = f0();
const v17 = [1000.0];
const v18 = [4.0,0.5659029082569069];
const v19 = [1.7976931348623157e+308];
function f23() {
    return "726894133";
}
[[f0,f0,v14,v14,v19]];
let v27 = -9007199254740991;
Math.atan2(v27, v27);
const v29 = v16 >> v27;
const v30 = Math.cos(f0);
~v27;
Math.imul(v16, v27);
v27 >> v16;
v27--;
[v17,v15,"726894133",v19,"-11"];
Array(87);
const v43 = new Uint32Array();
const v46 = new Float32Array(144);
const o47 = {
};
const v49 = new Proxy(Float32Array, o47);
const v50 = [144];
[v29,v14,87,"-11"];
new Proxy([Array,144,v30,v50], v19);
v18["toLocaleString"]("prr");
v43.subarray();
const v57 = new Array(...v46, ..."726894133");
v57[v49] = Float32Array;
