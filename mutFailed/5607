const v0 = [1000000000000.0,-373935.1096026739];
const v1 = [0.5945184677448606,-1.0,0.017135436328668097,3.156222886616998];
const v2 = [-593.9895544664282,-2.2250738585072014e-308,1.0152200136073176e+308,585.161122838969,4.0,-4.191531403680382,2.2250738585072014e-308];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a5;
    } catch(e6) {
    }
    try {
        this.f = a5;
    } catch(e7) {
    }
}
let v8 = new F3(v0);
new F3(v0);
const v10 = new F3(v1);
const v11 = [4.97913820147703e+307,Infinity,0.4241883131178992,581.2914221576052];
[52.79340797067357,7.599521421738595e+307,1.4446989480486098e+308,NaN,902057.7819703186,-660080.8851343365,0.11735158231294684];
const v13 = [-1.7976931348623157e+308,-224.06220668202195,3.14543421177223,971.6812135504028,0.8142508872642006,1.9792920611906588,1000000000.0,0.9530673842194961,-626811.6799807127,-340530.447751677];
class C14 extends F3 {
    f = v10;
    3303859986;
    [-1] = v11;
    static 7;
    m(a16, a17, a18) {
        const v19 = +a17;
        const o20 = {
        };
        try {
            o20.c = v11;
        } catch(e21) {
        }
        try {
            const o22 = {
            };
            o22.c = v11;
            o22.b = v8;
        } catch(e23) {
        }
        try {
            const o24 = {
            };
            o24.c = v11;
            o24.b = v8;
            const t45 = v2 % v19;
            t45.f = v19;
        } catch(e30) {
        }
        try {
            const o31 = {
            };
            o31.c = v11;
            v2.b = v8;
            o31.f = a18;
        } catch(e32) {
        }
        return v13;
    }
}
new C14();
new C14();
new C14();
function f36() {
    const o45 = {
        o(a39, a40) {
            function f41(a42, a43, a44) {
                v8 |= a40;
            }
        },
    };
}
new Int8Array(770);
function f51() {
    return 256;
}
function F52(a54, a55) {
    if (!new.target) { throw 'must be called with new'; }
    const v56 = this.constructor;
    try { new v56(a54); } catch (e) {}
    -a54;
    a55--;
}
new F52(65537, f51);
const v61 = Int8Array();
f36();
const v63 = f36();
const v65 = /[\cA]?/d;
let v66 = 0;
v66++;
const v68 = /\xf0\x9f\x92\xa9a*/us;
let v71;
try { v71 = v1(v68, 65537, 65537); } catch (e) {}
if (v71) {
    let v72;
    try { v72 = ("catch").codePointAt(v71); } catch (e) {}
    [,v72] = "iterator";
} else {
    new WeakSet();
}
const v75 = /jU/vims;
const v76 = /a+b|c/gvdimsy;
function f77(a78, a79, a80) {
    const o85 = {
        set a(a82) {
            v61.g;
            super.toString();
        },
    };
}
const v86 = f77(v65, v75, v63);
const v87 = f77(v76, v76);
const v88 = f77(v75, v65, v86);
const v89 = /a\S/gudsy;
const v90 = /\u{12345}\u{23456}/vsy;
/f}L/gdis;
try {
    v87.fuck([v90,v88,v75,v89,-52627n], false);
} catch(e95) {
}
/[Fa\b!]/gimy;
/\u{12345}leqkLU[\c!]/gs;
