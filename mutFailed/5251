class C3 {
    static #f;
    #a = 583856.6950860023;
    constructor(a5) {
        let v7 = -128n;
        v7--;
        4294967295n << 4294967295n;
        for (let v11 = 0; v11 < 10; v11++) {
            class C13 {
                4294967296 = 996195971n;
            }
            try { new C13(); } catch (e) {}
            const v15 = C13.length;
            v15 & v15;
            const v17 = new C13();
            v17[4294967296];
            v17[4294967296] = v17;
        }
    }
    #c;
    static #h;
    static 2324201619;
}
const v19 = new C3(C3);
const v20 = v19?.constructor;
try { new v20(583856.6950860023); } catch (e) {}
const v22 = new C3(583856.6950860023);
const v23 = v22?.constructor;
try { new v23(v22); } catch (e) {}
try { v22.constructor(v19); } catch (e) {}
const v26 = new C3(-1956778660);
class C27 extends C3 {
    [-1956778660];
    static d;
    static m(a29, a30, a31, a32) {
        this[1882180277] = v26;
        new Map();
        return a30;
    }
    static e;
    [v26];
}
C27.c = C27;
C27[2324201619];
const v36 = new C27();
const v37 = v36?.constructor;
try { new v37(); } catch (e) {}
new C27();
const v40 = new C27();
let v41;
try { v41 = v40.propertyIsEnumerable(v40); } catch (e) {}
!v41;
const v43 = [536870887,-42204,-17288903,-3,9007199254740991,7];
try { v43.toLocaleString(); } catch (e) {}
try { v43.toString(); } catch (e) {}
const v46 = [6,268435440,13,1073741825];
try { v46.copyWithin(-1956778660, -1956778660); } catch (e) {}
const v48 = [-15,-2147483649,-899333997,3,1455560807,-1024,-4294967297,2098301778];
v48[4];
v48.reverse();
class C51 {
    constructor(a53) {
        const v54 = this?.constructor;
        try { new v54(a53); } catch (e) {}
        const v56 = this?.constructor;
        v56.name;
        try { new v56(this); } catch (e) {}
        a53[3];
        function f60(a61, a62) {
            let v63 = a61[5];
            v63++;
        }
        f60(v48);
        f60(v43);
        f60(a53);
    }
}
C51.prototype = C51;
const v68 = C51.constructor;
v68.c = v68;
const v69 = new C51(v46);
const v70 = new C51(v43);
const v71 = v70.constructor;
const v72 = v71?.bind;
try { new v72(v46); } catch (e) {}
new v71(v69);
const v75 = new C51(C51);
v75.length;
try { v75.__defineGetter__(); } catch (e) {}
function f78(a79, a80, a81, a82) {
    try { a80.some(v68); } catch (e) {}
    const o84 = {
        __proto__: a79,
    };
    try { o84.groupToMap(); } catch (e) {}
    return o84;
}
const v86 = f78(v46);
v86[3] = v86;
const v87 = v86.indexOf();
const v88 = f78(v48, v43);
const v89 = v88?.filter;
try { new v89(v40); } catch (e) {}
try { v88.groupToMap(v87); } catch (e) {}
const v93 = f78(v48, v48)?.find;
try { new v93(v86); } catch (e) {}
const o96 = {
};
o96.c = o96;
gc(o96);
