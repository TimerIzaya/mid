function f1() {
    return f1;
}
const v3 = ([13,-2103725161,15240,-9223372036854775807,1077763702,256,-1024,9,1073741823,-2])[4];
const v4 = v3 | v3;
v4 / v4;
const v9 = new Int16Array();
const v12 = new BigUint64Array(2, 256);
v12[Symbol.toPrimitive] = f1;
v9["fill"](v12, 256, 2);
const v18 = [-46639,2129111573,-1,-9223372036854775807,-128];
const v19 = [7,2039798091];
const v20 = [7910,1906253207,-65535,139,-9,9007199254740991,9007199254740992];
function F21(a23, a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a24;
    try {
        this.b = v19;
    } catch(e27) {
    }
}
function f29() {
    const o32 = {
        1678: true,
        ...true,
        "d": true,
        [true]() {
            super.e;
        },
        1: true,
    };
    return o32;
}
f29();
try {
    new f29();
} catch(e35) {
}
const v36 = new F21(v20, v20, -2.3992158881774525e+307, v18);
new F21(v20, 6.851074192273687e+307, -841.4395573082513, v36);
%PrepareFunctionForOptimization(f1);
class C38 {
}
class C40 extends Set {
}
new F21(v19, v19, 6.851074192273687e+307, v36);
function f46(a47) {
    return f46;
}
const v50 = [4096];
const o51 = {
    "arguments": v50,
    "type": "function",
};
new Worker(f46, o51);
