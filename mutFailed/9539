/^xxx$?/gudi;
/a+b/vd;
/([\ca]*)/udy;
new Array(10);
class C9 extends Array {
    #p(a11, a12, a13) {
        new Float32Array();
        new Uint8Array(4096);
        function F24() {
            if (!new.target) { throw 'must be called with new'; }
            const v29 = Array(19793);
            for (const v30 of v29) {
            }
            [[v29,v29,v29,v29]];
            ("function").normalize();
            const v36 = new Set();
            v36.values();
            [] >= Uint16Array;
        }
        class C41 {
        }
        class C42 extends C41 {
        }
        const o43 = {
        };
        try { a12.test(-16); } catch (e) {}
        ++a11;
        const o49 = {
            "execution": "sync",
            "type": "major",
        };
        return gc(o49);
    }
}
new C9();
new C9();
new C9();
([-8n]).toLocaleString();
