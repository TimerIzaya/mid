function F1() {
    if (!new.target) { throw 'must be called with new'; }
}
9n >> 9n;
function f6(a7, a8, a9, a10) {
    const v11 = a8 >>> a8;
    const v12 = v11 >>> v11;
    const v13 = v12 != v12;
    for (let v14 = 0; v14 < 5; v14++) {
    }
    const o15 = {
    };
    o15.b = 5n;
    o15.b = v13;
    return a9;
}
f6();
class C19 {
    constructor(a21) {
        ("3z7").localeCompare(a21, "3z7");
    }
    set g(a24) {
        class C25 {
        }
    }
    set d(a27) {
        try { this.toSpliced(this, this, "3z7", this, -4339); } catch (e) {}
    }
    ["3z7"];
    /*
    constructor(a33, a34) {
        super();
        try {
            a33.__proto__ = "3z7";
        } catch(e35) {
        }
        const t36 = "3z7";
        new t36();
    }
    */
    #a = "3z7";
    e = "3z7";
    #d = "3z7";
    static #h;
}
new C19();
class C39 {
    static {
        try {
        const t0 = 0.44967380041772886;
        t0();
        } catch (e) {}
    }
    static f;
}
const v42 = new C19();
new C19();
class C47 extends C19 {
    constructor(a49, a50, a51) {
        for (let v52 = 0; v52 < 32; v52++) {
            a49["p" + v52] = v52;
        }
    }
    static toString(a56, a57, a58) {
        class C59 {
            static c;
        }
        const v60 = new C59();
        class C61 {
            static #n(a63, a64, a65, a66) {
                class C67 {
                    4;
                    static a;
                }
                C67();
                C67();
                C67();
            }
            7 = v60;
            #a = this;
        }
        try {
            super.padEnd(a58, "m", "e", this);
        } catch(e72) {
        }
        return a56;
    }
    2147483649;
    110;
    static ["slice"] = v42;
    63976595 = C19;
}
new C47();
new C47();
new C47();
class C78 {
    static #p(a80) {
        return a80;
    }
}
const v81 = new C78();
const v82 = new C78();
const v83 = [v81,v82];
const v87 = [v81,[[1828032293,[]]],v83];
function f88() {
    return v87;
}
const v91 = new BigInt64Array(218);
v91.sort(f88);
Math.tanh(-1000.0);
