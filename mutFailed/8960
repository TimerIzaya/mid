const v2 = new Int16Array(128);
let v3 = 1198;
v3 + v3;
Int16Array.BYTES_PER_ELEMENT;
new Float64Array(v3, v3, v3, Float64Array);
const v10 = new Int8Array(141);
class C11 {
    static 536870887;
    set b(a13) {
        super.a %= 141;
        super.a >>>= 128;
        const o14 = {
        };
        new Proxy(v10, o14);
    }
    [v2] = 141;
}
new C11();
new v2();
const v19 = new C11();
try { v19.constructor(); } catch (e) {}
const v23 = v3--;
const v24 = [-4.0,-1e-15];
v24[1] = v24;
v24[2] = 54004;
function F25(a27, a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    try { a27.concat(Float64Array); } catch (e) {}
    a28 + a30;
    a27.unshift(a28);
}
const v34 = new F25(v24, v23);
const v35 = v34?.constructor;
try { new v35(C11, Int8Array, v3, v24); } catch (e) {}
