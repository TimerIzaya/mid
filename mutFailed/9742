const v0 = [-1.7976931348623157e+308,0.7051731891258438,-2.584313510026886e+307,0.2184456873282945,-159.29516901992554];
const v1 = [0.9243803290233055,-430.03932041311407,2.0,-4.54873549132647,3.0];
const v2 = [2.2250738585072014e-308,-1000.0,-965.2722375071072,2.220446049250313e-16,1.0,7.788530838758335e+307];
if (v0) {
    const o5 = {
        "maxByteLength": 65536,
    };
    const v7 = new ArrayBuffer(629, o5);
    new BigInt64Array(v7);
} else {
    const v10 = v2.__proto__;
    v1[v10] = v10;
}
const v11 = [v0];
try { v11.group(v1); } catch (e) {}
const v13 = [v11,v1];
const v14 = [v1,v2];
function f15(a16, a17, a18) {
    try { a17.map(a16); } catch (e) {}
    const o27 = {
        "c": a16,
        "d": v13,
        "h": a18,
        "a": a18,
        "f": v0,
        set e(a21) {
            Math.log10(v11);
            Math.log(a21);
            Math.sin(2147483648);
        },
        "g": v0,
        "b": v14,
        [a18]: a16,
    };
    return o27;
}
f15(v2, v2, v2);
f15(v11, v0, v1);
f15(v11, v11, v1).b;
512 - 512;
new Uint8ClampedArray(512);
1593 >> 1593;
new BigInt64Array(1593);
try { new Int32Array(1593, Uint8ClampedArray, 1593); } catch (e) {}
new Int32Array(2050);
const v48 = new Date();
v48.getUTCFullYear();
