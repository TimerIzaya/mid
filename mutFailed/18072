[6,-38541,16,5,-13,4,52685,-14,9,1222497698];
[-60776,-2,4294967297];
const o13 = {
    [-4294967297n](a7, a8, a9, a10) {
        eval();
    },
};
[-972987693,946147122,65535,26202];
new Uint8ClampedArray(0, -1041905624);
new Int16Array(1827);
const v23 = new Float32Array(1);
class C24 {
}
function f25(a26, a27) {
    function f28() {
        class C29 {
        }
        const v30 = new C29();
        class C31 extends C29 {
            [v30];
        }
        const v32 = new C31();
        const t22 = v32.constructor;
        new t22();
        return C24;
    }
    %PrepareFunctionForOptimization(f28);
    f28();
    f28();
    %OptimizeFunctionOnNextCall(f28);
    f28();
    return v23;
}
const t33 = v23.constructor;
t33(f25);
new BigInt64Array(3445);
class C44 {
    e;
}
const v47 = new Float64Array(255);
const v48 = v47.join(v47);
function F51(a53, a54, a55) {
    if (!new.target) { throw 'must be called with new'; }
    const v56 = this.constructor;
    try { new v56(a53, -1000000000000.0); } catch (e) {}
    a54 % a54;
    this.a = a53;
}
const v59 = new F51();
class C60 extends F51 {
    65537 = undefined;
    7 = v59;
}
Date.UTC(v48);
+0.8371116372352035;
const v66 = new BigUint64Array(1448);
function f67(a68, a69, a70) {
    return a69;
}
v66.toLocaleString(([-1000000000000.0,-1.7976931348623157e+308,294500.85018206923,-Infinity,-0.0,-7.010036940344757e+307,1.0,-Infinity,-1000.0,-1.1645821156926988e+308]).reduce(f67));
