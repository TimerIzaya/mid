const v3 = ["-3","f","-3"];
v3[1] = v3;
v3[2] = v3;
const v4 = ["f","8","8"];
v4[1];
const v6 = [v3];
class C7 {
    m(a9, a10, a11) {
        try {
            const t9 = "f";
            t9.g = v6;
        } catch(e12) {
        }
        return super.e;
    }
    f;
    4 = "8";
    n(a15, a16) {
        try { a16(C7, a15, this, a16, a15); } catch (e) {}
        super.c;
        v3.length;
        let {"e":v23,"length":v24,...v25} = v6;
        return "-3";
    }
}
try { C7.bind(v6); } catch (e) {}
let v27;
try { v27 = new C7(); } catch (e) {}
const v28 = new v27();
new C7();
new C7();
const v31 = [v4];
const v32 = ["f",v4,"8"];
const v33 = ["f",v31,v28,C7];
Float64Array.g = Float64Array;
try { new Float64Array(v33, Float64Array, Float64Array); } catch (e) {}
new Float64Array(9);
try { new Uint8Array("f", "f", "f"); } catch (e) {}
new Uint8Array(15);
new Float32Array(255, C7, v32);
104 >>> 104;
new Uint8ClampedArray(104);
const v50 = ("8").toLocaleString().toLocaleLowerCase();
try { v50.trimLeft(); } catch (e) {}
