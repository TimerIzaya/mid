function f0() {
    const o11 = {
        "h": "U",
        toString(a5, a6) {
            const v8 = Symbol.search;
            const v9 = a5[v8];
            try {
                v8.valueOf = v9;
            } catch(e10) {
            }
            return a5;
        },
        __proto__: "U",
        [2.220446049250313e-16]: "U",
    };
    return o11;
}
f0();
const v13 = f0();
f0();
const v21 = Symbol.iterator;
const o30 = {
    [v21]() {
        let v23 = 10;
        const o29 = {
            next() {
                v23--;
                const v27 = v23 == 0;
                const o28 = {
                    "done": v27,
                    "value": v23,
                };
                return o28;
            },
        };
        return o29;
    },
};
new Float32Array(130);
const v34 = new Uint16Array(5);
const v37 = new Uint8Array(1024);
v37.toJSON = Symbol;
function f39(a40, a41) {
    function f43() {
        return v34;
    }
    function f44(a45) {
        v13[1024] = a40;
    }
    Object.defineProperty(this, "onmessage", { configurable: true, enumerable: true, get: f43, set: f44 });
    function f46(a47) {
        try { a47(v13); } catch (e) {}
    }
    this.onmessage = f46;
    a40[65536] = a41;
    new Uint8Array(-64217);
}
const v52 = [v37,Float32Array];
const o53 = {
    "arguments": v52,
    "type": "function",
};
new Worker(f39, o53);
const o68 = {
    get d() {
        this.valueOf = Symbol;
        this[0] /= 4294967296;
        Math[Symbol.toPrimitive] = f39;
        let v60 = -908890636;
        const v62 = this & --v60;
        super[Math];
        try {
            f39(Uint16Array, false);
        } catch(e66) {
        }
        return Math.log(v62);
    },
};
o68.valueOf = f39;
for (let i = 0; i < 10; i++) {
    o68.d;
}
