new Float32Array(5);
new BigUint64Array(257);
function F7(a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    a9[4] = a9;
    this.valueOf();
    const v12 = (1690).constructor;
    try { new v12(); } catch (e) {}
    a9[4];
}
new Float64Array(1690);
function F20(a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = Float32Array;
    try {
        this.e = 536870887;
    } catch(e24) {
    }
    try {
        this.g = 5;
    } catch(e25) {
    }
}
new Map();
function f28(a29, a30, a31, a32) {
    function f33() {
        function f34(a35) {
            return f28;
        }
        a32(f34);
        return f28;
    }
    f33();
    f33();
    %OptimizeFunctionOnNextCall(f33);
    return a30;
}
new F20(65537, 3);
new F20(1690, 257);
const v41 = new F20(3, 1690);
([8]).fill(8);
const v47 = new Uint16Array();
const v50 = new Int32Array();
class C51 {
    static #d = v41;
    constructor(a53, a54) {
        try {
            v47.#d += v50;
        } catch(e55) {
            e55.toString = f28;
            e55.toString();
        }
    }
}
const v58 = new Uint16Array();
v58[0.008868537081181294] = 0.008868537081181294;
9007199254740990 | -9007199254740990;
const t56 = C51.constructor;
t56(255);
new C51();
