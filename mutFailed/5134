function f0() {
}
const v1 = [f0,f0];
const v2 = [f0,v1,v1,f0,v1];
const v3 = [v2,v2,v2];
const v4 = [v3,v3,v1,v1,f0];
const v5 = [v2,v2,v4,v4];
const v6 = [v5,v1,v4,v5,v5];
function F7(a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = v3;
        let {"length":v13,} = v5;
        a11[268435439] = v13;
        let v14;
        try { v14 = a9(v6); } catch (e) {}
        try {
            d.e = v14;
        } catch(e15) {
        }
    } catch(e16) {
    }
    try {
        this.b = a10;
    } catch(e17) {
    }
    const o18 = {
    };
    try {
        o18.g = this;
    } catch(e19) {
    }
    try {
        const o20 = {
        };
        o20.g = this;
        o20.c = v5;
    } catch(e21) {
    }
    try {
        const o22 = {
        };
        o22.g = this;
        o22.c = v5;
        o22.d = v2;
    } catch(e23) {
    }
    try {
        const o24 = {
        };
        o24.g = this;
        o24.c = v5;
        o24.d = this;
    } catch(e25) {
    }
    try {
        this.h = v2;
    } catch(e26) {
    }
}
const v27 = new F7(v1, v5, v2);
new F7(v1, v5, v3);
new F7(v3, v6, v4);
new WeakSet();
new Uint32Array(1024);
class C37 extends Uint8Array {
}
const v39 = new Int16Array(Int16Array, Int16Array, Int16Array);
const v42 = /(l{z})/s;
function F43(a45) {
    if (!new.target) { throw 'must be called with new'; }
    const v46 = this.constructor;
    try { new v46(v42); } catch (e) {}
    a45.e = a45;
    v27.dotAll;
}
const v49 = new F43(v42);
class C50 {
    constructor(a52, a53) {
        const o56 = {
            "type": "minor",
        };
        o56.b = o56;
        gc(o56);
    }
}
C50 = F43;
const o58 = {
};
try {
    o58.g = Float64Array;
} catch(e59) {
}
try {
    const o60 = {
    };
    o60.g = Float64Array;
    o60.c = Int16Array;
} catch(e61) {
}
try {
    const o62 = {
    };
    o62.g = Float64Array;
    o62.c = Int16Array;
    o62.e = v39;
} catch(e63) {
}
try {
    const o64 = {
    };
    o64.g = Float64Array;
    o64.c = Int16Array;
    o64.e = v27;
} catch(e65) {
}
const v66 = new C50();
const t117 = v66.constructor;
new t117(9, v49);
new Float64Array(9);
new Uint32Array(159);
function f73(a74) {
    function f76(a77) {
        class C79 extends Array {
            constructor(a81, a82, a83) {
                super(a81);
            }
        }
        try { a74.valueOf(a77, Uint32Array, WeakSet, a77, this); } catch (e) {}
    }
    this.onmessage = f76;
}
const v87 = ["function"];
const o88 = {
    "arguments": v87,
    "type": "function",
};
new Worker(f73, o88);
