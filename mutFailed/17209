class C3 {
    static o(a5) {
        delete this[this];
        Reflect.construct(a5, [Reflect,16,Reflect], a5);
        [14];
        [10,-6,6,4,1073741825,-4096,-3,10,-37725,1187494683];
        [12,-2147483647,174045501,12];
        return 16;
    }
    static 5 = 2147483648;
    [54363];
    static c = 16;
    3 = 16;
}
const v13 = new C3();
v13[54363] = v13;
const v15 = C3[16]?.[4096];
const v17 = Symbol.matchAll;
v15[v17] = v17;
const v18 = new C3();
v18[54363];
const v20 = new C3();
v20[54363] = v20;
const v23 = new Int16Array(128);
try { v23.join(16); } catch (e) {}
const v27 = new Uint16Array(4);
try { v27.toLocaleString(); } catch (e) {}
128 === 128;
new Int16Array(128);
function F34(a36) {
    if (!new.target) { throw 'must be called with new'; }
    const v37 = this.constructor;
    let v38;
    try { v38 = new v37(); } catch (e) {}
    let v40 = 22299;
    Math.log(this);
    v40--;
    Math.asin(v40);
    Math.pow(v40, v38);
    Math.hypot(v38);
    try {
        -35199 % (this / -1478256740);
    } catch(e49) {
    }
}
const v50 = new F34();
new F34(v50);
