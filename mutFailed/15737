class C3 {
    constructor(a5) {
        super.h = a5;
        a5 = "bigint";
        const v7 = ("fikpI")["p"]?.[a5];
        super[v7] = "fikpI";
        try {
            super.p("fikpI", a5, v7);
        } catch(e9) {
        }
    }
    ["fikpI"] = "bigint";
    g;
}
const v10 = new C3("bigint");
let v11 = new C3("p");
new C3("bigint");
function f13() {
    return v10;
}
class C17 {
    constructor(a19, a20, a21) {
        super.a;
        let [] = a19;
        const v26 = +Math;
        --a20;
        const v28 = a20 & v26;
        ++v11;
        v28 ^ 4294967295;
        --a20;
    }
}
const v32 = new C17("bigint", v10, "bigint");
new C17("p", v32, "bigint");
new C17("fikpI", v11, "p");
let v35 = -4294967297n;
const v36 = v35--;
const v37 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v38 = [601759695];
const v39 = [1073741824,1073741823,1376142744,1073741825];
const v42 = new Float64Array(16);
const v45 = [1.5340415543558148e+308];
const v46 = v42.indexOf;
Reflect.apply(v46, v42, v45);
for (let v48 = 0; v48 < 5; v48++) {
    function f49() {
        b = v38;
        try {
            v39.forEach(v35);
            const o52 = {
                "execution": "async",
            };
            return v11;
        } catch(e53) {
        }
        const o69 = {
            "c": v38,
            valueOf(a55, a56) {
                return v36;
            },
            [v36](a58, a59, a60, a61) {
                eval(a59);
            },
            "arguments": v37,
            [v36](a65, a66, a67, a68) {
            },
        };
        return v38;
    }
    %OptimizeFunctionOnNextCall(v46());
}
