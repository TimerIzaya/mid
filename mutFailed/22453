const v0 = [-1.0,910355.0340570656];
const v1 = [3.590870487211988e+307,2.0];
const v2 = [-4.0,1000000.0,5.0,1.7976931348623157e+308,1.1700955760939436e+308,-1000.0,-226.97912623621858];
function f3() {
    return v2;
}
f3.d = f3;
class C4 extends f3 {
    static set a(a6) {
        v1[v1] <<= v2 << this;
    }
    static {
        try { new this(); } catch (e) {}
        this[8] = f3;
        v1.__proto__;
        this >>> v0;
        let v13 = 1366797624;
        const v16 = -v1;
        v16 >>> v16;
        const v18 = ++v13;
        v18 % v18;
        v13 ** v1;
        v1 % v13;
        v1 >> v1;
    }
}
const v23 = new C4();
try { v23.groupToMap(v0); } catch (e) {}
new C4();
new C4();
new Set();
class C33 {
    f = "1073741824";
}
const v34 = new C33();
v34.b = v34;
("YZmA")[1];
class C38 {
    [C33];
    static 1073741825;
    static ["YZmA"] = v34;
}
try { new C38(); } catch (e) {}
const v40 = new C38();
v40 ** 14n;
-47163 || 9;
9 << 99.30719447084516;
9 * "g";
const v50 = ("YZmA")["indexOf"]("g");
v50 - v50;
try { Symbol.for(Symbol); } catch (e) {}
("YZmA")[Symbol.toStringTag];
gc.length;
for (let v60 = 0; v60 < 35; v60++) {
    const o64 = {
        "execution": "sync",
        "type": "minor",
    };
    gc(o64);
}
const o66 = {
    "execution": "sync",
    "type": "minor",
};
gc(o66);
