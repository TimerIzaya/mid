[65536];
const v1 = [-694,-6,1073741824,-14,3,11,3,-7,5,-1214514770];
const v2 = [1073741824,-7,-1283755539,-726309105,10,13,-4294967295,12,512,40630];
const v3 = [];
function f4() {
    -v3;
    return f4;
}
class C6 {
    static {
        const o8 = {
        };
        new Proxy(this, o8);
    }
    p(a12, a13) {
        let v14;
        try { v14 = new this(a13, this, a12); } catch (e) {}
        super.g = v1;
        return Reflect.construct(v14, [v1,v2], v14);
    }
    a;
}
new C6();
const v19 = new C6();
const v20 = new C6();
[-2.9700017742911022,795135.542646985,938.533418121023,-974148.680744386,-1.7976931348623157e+308,-300.6481185564369];
const v22 = [483707.38277358306];
const v23 = [2.220446049250313e-16,-Infinity,1.278332587799012,711290.6941419018,0.0,-Infinity,-1000.0,2.2250738585072014e-308];
const v24 = [v20,v2,v19];
[v23];
[v23,v22,v24,v19,v20];
function f29() {
    class C32 {
    }
    const v35 = `
        try {
            new Float64Array(127);
        } catch(e37) {
        }
    `;
    let v38 = -65535;
    v38 * v38;
    v38 / v38;
    const o112 = {
        __proto__: 352326470,
        next() {
            v38--;
            const v44 = v38 == 0;
            const o45 = {
                "done": v44,
                "value": v38,
            };
            return o45;
        },
        ...352326470,
        /*
        __proto__: 1261703539,
        */
        "f": v38,
        m(a47) {
            a47.h = a47;
            const o48 = {
            };
            function f49() {
                return this;
            }
            function f50(a51) {
                o48 >> C32;
            }
            Object.defineProperty(o48, "e", { writable: true, configurable: true, enumerable: true, get: f49, set: f50 });
            function f53(a54, a55, a56) {
                function f58(a59) {
                    a55[5] ||= f29;
                }
                this.onmessage = f58;
                const v62 = new SharedArrayBuffer(35);
                new BigUint64Array(v62);
            }
            try {
                o48.e = v38;
            } catch(e65) {
                const v69 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v69, o48);
            }
            try {
                const o71 = {
                };
                o71.e = o71;
                o71.e = 1261703539;
                o71.g = a47;
            } catch(e72) {
            }
            -9007199254740991 >> -9007199254740991;
            Math.sin(-9007199254740991);
            class C79 {
                o(a81, a82, a83, a84) {
                    class C85 {
                        static 44 = "EV";
                    }
                    new C85();
                    new C85();
                    new C85();
                    return 0;
                }
            }
            new C79();
            const v92 = new Int8Array(3938);
            let v93 = 3;
            v93++;
            let v95 = 0;
            const v96 = v95 >> v95;
            for (let i = 0; i < 5; i++) {
                v95 < 8;
                [...v93] = v92;
                v95++;
            }
            const o100 = {
            };
            o100.e = o100;
            o100.e = 1261703539;
            o100.g = a47;
            try {
                const o101 = {
                };
                o101.g = a47;
                o101.h = 352326470;
            } catch(e102) {
                function F103(a105, a106, a107, a108) {
                    if (!new.target) { throw 'must be called with new'; }
                    a105.propertyIsEnumerable();
                }
                -3 ^ v96;
            }
            return this;
        },
    };
    o112.h = 2147483648;
    let v113;
    try { v113 = o112.m(o112); } catch (e) {}
    class C115 {
    }
    const v116 = new C115();
    function f117() {
        return v116;
    }
    function f118(a119) {
        for (let v120 = 0; v120 < 11; v120++) {
            try {
                -v23.pop();
            } catch(e123) {
            }
        }
    }
    Object.defineProperty(v116, "floor", { enumerable: true, get: f117, set: f118 });
    const v125 = new Float32Array(v116, "nt", Float32Array);
    v125[Symbol.toPrimitive] = f4;
    const t156 = "nt";
    const v128 = delete t156[v125];
    let v129;
    try { v129 = v116.floor(v128); } catch (e) {}
    for (const v130 in v129) {
    }
    v113.e = v113;
}
const v131 = f29();
const v132 = f29();
const v133 = f29();
Uint8Array.prototype;
try { new Uint8Array(v132, v133, v131); } catch (e) {}
function f139(a140, a141, a142, a143) {
}
("lastIndexOf")[Symbol.toPrimitive];
function f148(a149, a150) {
    const o153 = {
        set b(a152) {
        },
    };
}
f148();
BigUint64Array[Symbol.toPrimitive] = f139;
new BigUint64Array(257);
new Uint16Array(1412);
gc(256);
function F170(a172, a173, a174) {
    if (!new.target) { throw 'must be called with new'; }
}
8 + 8;
8 >>> 8;
const v178 = new Uint8Array(8);
v178.h = v178;
try {
    v178.h = -9223372036854775807;
} catch(e181) {
}
const v182 = [-223.21974199729607,0.6826909196761026,-7.610543209781418e+307,1000000000.0,-2.2250738585072014e-308,0.4672319347741436,-1000000.0,-3.0,-5.0,6.966874548897];
9007199254740990 + 9007199254740990;
const v186 = v182.fill(-9007199254740990n, 9007199254740990);
let v187;
try { v187 = v186.toString(); } catch (e) {}
try { v187.strike(); } catch (e) {}
4.0 - 4.0;
function F196(a198) {
    if (!new.target) { throw 'must be called with new'; }
    new.target.d = new.target;
}
BigUint64Array[Symbol.toPrimitive] = gc;
BigUint64Array <= 0.7221600461335677;
