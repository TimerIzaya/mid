-1024 & -1024;
Uint8ClampedArray.prototype = Uint8ClampedArray;
new Uint8ClampedArray(71);
4096 << -1361445403;
new Int32Array(-1361445403);
try { new Float64Array(Uint8ClampedArray, Int32Array, 12); } catch (e) {}
const v17 = new Float64Array(220);
const v18 = v17[67];
v18 ^ v18;
for (let v20 = 0; v20 < 5; v20++) {
    v20 >>> v20;
    let v22 = 127 | v20;
    v22--;
    function f24() {
        const v25 = [-Infinity,1.7976931348623157e+308,1.0,1.7976931348623157e+308,-1.0,Infinity];
        try { v20.groupToMap(v22); } catch (e) {}
        const v28 = -(-1024);
        const v29 = v28 < v28;
        v29 && v29;
        v25.description &= -1024;
        return f24;
    }
    f24();
    %OptimizeFunctionOnNextCall(f24);
}
