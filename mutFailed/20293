function F7(a9, a10, a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a11;
    } catch(e13) {
    }
}
const v14 = new F7("function", "function", -55455n, -55455n);
const v15 = new F7("toString", "toString", 33819n, -19824n);
const v16 = new v15("function", "-1017924333", 33819n, -55455n);
function f17(a18, a19, a20) {
    const o24 = {
        "b": a19,
        set e(a22) {
            function f23() {
                return "function";
            }
        },
        "d": v14,
        "f": a19,
        [-2]: a18,
        [a20]: a19,
        [a19]: a18,
        "c": a19,
    };
    return o24;
}
f17(f17(f17(v16, "-1017924333", "toString"), "-1017924333", "function"), "function", "toString");
class C28 {
}
const v29 = new C28();
const v30 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v33 = new Uint32Array();
const v35 = [601759695];
const v36 = [1073741824,1073741823,1376142744,1073741825];
function f38(a39, a40, a41, a42) {
    function f43() {
        const t37 = "Vre";
        t37[1] = "Vre";
        try { Math.expm1(Math); } catch (e) {}
        const v48 = Math.expm1();
        const v49 = Math.tanh();
        Math.hypot(a41, Math);
        Float64Array.BYTES_PER_ELEMENT = Float64Array;
        b = v35;
        v30.length;
        try {
            v36.findLast();
        } catch(e54) {
            e54.a = -4294967295;
        }
        const v55 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o65 = {
            [522675525n](a58, a59) {
            },
            "c": v35,
            [-1]: 2684,
            1073741824: v33,
            "maxByteLength": -268435456,
            __proto__: v33,
            9: v29,
            [v49]: v48,
            ...a40,
            "arguments": v55,
            [2n](a61, a62, a63, a64) {
            },
            "e": -4294967295,
            "arguments": Float64Array,
            256: a42,
            4: "Vre",
            "c": -268435456,
        };
        return -4294967295;
    }
    const v66 = v30();
    eval(a40);
    %OptimizeFunctionOnNextCall(f43);
    return v66;
}
for (let v69 = 0; v69 < 5; v69++) {
    f38(v69, v35, v69, v69);
}
