let v1 = 241937.60086404625;
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a5;
    } catch(e6) {
    }
}
const v7 = new F3(-4.0);
new F3(v1);
const v9 = new F3(-4.0);
const v10 = /3xyz{0,1}+/vims;
try {
    v7.e = v9;
} catch(e11) {
}
--v1;
~-2;
Math.trunc(v10);
/(M(?:a*)+)/gudim;
/a+L\1(a)abc+R(?:a?)*/gums;
new Int32Array(1589);
new Uint32Array(1930);
new Int8Array(129);
function F29() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.constructor(); } catch (e) {}
    try {
    } catch(e32) {
    }
    function F33() {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v35 = new F33();
    const v36 = v35?.__defineSetter__;
    try { v36(); } catch (e) {}
    function f38(a39, a40) {
        const o41 = {
        };
        return o41;
    }
    const v42 = f38(v36, f38);
    function f43() {
        return f43;
    }
    const v46 = new Float32Array(218);
    for (const v47 of v46) {
        v47 >>> v47;
        Object.defineProperty(v42, Float32Array, { configurable: true, enumerable: true, get: f38, set: f43 });
    }
}
new F29();
new F29();
new F29();
