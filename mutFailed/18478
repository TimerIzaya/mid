function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 4;
    } catch(e4) {
    }
    try {
        this.f = 4;
    } catch(e5) {
    }
    try {
        this.g = 4;
    } catch(e6) {
    }
}
class C9 {
    static {
        const t17 = "number";
        t17[6] *= 40929;
        const v11 = ("number").__proto__;
        function f12() {
            return v11;
        }
    }
    [-510.64625407657394] = 40929;
    static {
        try {
        } catch(e14) {
        }
    }
    #b = 40929;
    static 4 = -510.64625407657394;
}
new C9();
new C9();
new C9();
class C18 {
    valueOf(a20, a21, a22, a23) {
        C9 * this;
        !true;
        for (const v28 in "9007199254740992") {
        }
        const v29 = new C9();
        let v30;
        try { v30 = v29.p(); } catch (e) {}
        a23[8] += -510.64625407657394;
        try { new v30(a23, C9, a22, a21); } catch (e) {}
        return a23;
    }
    #d;
    static f;
}
new C18();
new C18();
new C18();
const v35 = [0.6962759092984843];
let v36 = [4.55590263310031,1e-15,2.220446049250313e-16,4.0,3.0];
class C37 {
    constructor(a39, a40, a41, a42) {
        v36 = a40;
    }
}
const v43 = new C37(v35, C37, C37, v35);
new C37(v35, v35);
class C45 {
    constructor(a47, a48) {
        const o49 = {
        };
        new Float64Array([-9223372036854775808,-12]);
        v36.unshift(v43, a48, [this,this]);
    }
}
new C45();
new C45();
