7.045824066421165 - 7.045824066421165;
-65535 >> -65535;
class C11 {
    d;
    toString(a13, a14, a15, a16) {
        super.g **= a15;
        let v17;
        try {
        const t0 = -1000000000000.0;
        v17 = t0(a16, this, 6);
        } catch (e) {}
        this[749] = v17;
        return -1000000.0;
    }
    #m(a19, a20) {
        return 6.596264915014588e+307;
    }
    #c;
}
new C11();
new C11();
const v26 = new C11();
function f27() {
    return -43237;
}
function f28(a29) {
    function F30(a32, a33) {
        if (!new.target) { throw 'must be called with new'; }
        a33 * a33;
        const v35 = this.constructor;
        2 >= 2;
        try { new v35(this); } catch (e) {}
    }
    const v39 = new F30();
    v39.constructor;
}
Object.defineProperty(f27, "a", { writable: true, configurable: true, enumerable: true, set: f28 });
f27.a = f27;
Array.prototype = Array;
const v44 = [7,57468];
try { Map.constructor(-1000000000000.0); } catch (e) {}
const v47 = new Map();
v47[-10] = v26;
v44.__proto__ = v47;
v47[-10] >>= 1024;
Array(1024, -10);
