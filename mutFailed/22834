function f0() {
    function f3(a4, a5) {
        return a5;
    }
    new Int32Array(10);
    let v9 = -21292.852793943137;
    v9--;
    const o29 = {
        "c": 61190,
        "a": v9,
        p(a12, a13) {
            const v14 = a12?.[this];
            try {
                this.__proto__ = v14;
                const v16 = [-1.5424212036356715e+308];
                v16[536870887n] = v16;
                function f17(a18, a19) {
                    for (let v20 = 0; v20 < 5; v20++) {
                        const v22 = ("imul").padEnd();
                        const v23 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
                        const v24 = [1073741824,1073741823,1376142744,1073741825];
                        try { v24["find"](..."find", v22, ...v23); } catch (e) {}
                    }
                    return a18;
                }
            } catch(e27) {
            }
            return v14?.[v9];
        },
        ...61190,
        3: -5.0,
        __proto__: f0,
        "e": 61190,
    };
    return o29;
}
f0();
const v31 = f0();
+0.544190430081408;
const o34 = {
};
const v35 = o34[o34];
for (const v36 of v35) {
    v35();
}
const v38 = f0();
function F39(a41) {
    if (!new.target) { throw 'must be called with new'; }
    const v42 = this?.constructor;
    try { new v42(f0); } catch (e) {}
    new Uint8Array(268435440);
    -36313 + 0.544190430081408;
    a41[3] = a41;
    try {
        this.a = a41;
    } catch(e49) {
    }
    try {
        this.d = v31;
    } catch(e50) {
        const v51 = [];
        class C52 extends f0 {
        }
        const v53 = new C52();
        const v54 = v53.toString();
        for (let i = 0; i < 5; i++) {
            ["object",v54,"object",v51];
        }
    }
}
try { new F39(F39); } catch (e) {}
new F39(v31);
new F39(v38);
const v60 = new F39(v31);
v60.d = v60;
[4.0,-4.787899581064439e+307,376.24644156888166,-Infinity,-5.0,292.57456882692554,-331.17676059278403];
[18.442147267940527,0.5971732839698797,-2.2250738585072014e-308,-961.6439113125807,3.4214506694667823e+307,-86373.22989843471,1.4246970421475254e+308];
const v63 = [-1.0,-Infinity,1.5408388311561791e+308,-1.461453238716571e+307,-9.778396428923034e+307,-1000000000.0,1.0,-1e-15];
const v65 = new Map();
function f66() {
    return v65;
}
function f67() {
    return v63;
}
let v69 = Int16Array;
v69--;
function f71() {
    v69--;
    class C74 {
        static #m(a76) {
        }
        set d(a78) {
            this.#m();
        }
        constructor(a81) {
            function f82() {
                return this;
            }
            Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f82 });
        }
    }
    const v83 = new C74();
    v83.length = v83;
    v83.g = v83;
    const v84 = new C74();
    v84.length = -4294967296;
    v84.length;
    let v86 = 0;
    for (let i = 0; i < 5; i++) {
        for (let v87 = 0; v87 < 5; v87++) {
            v87 - v87;
            const t111 = "p";
            t111[0] = "p";
            const v90 = "p" + v87;
            v90[1];
            const t115 = "string";
            t115[v90] = v87;
        }
        v86++;
    }
    const v93 = new C74(v86);
    [v93,v93,v93,v93,v93];
    const v95 = [v93];
    class C96 extends C74 {
        [v83];
        #n(a98, a99, a100, a101) {
        }
        #g;
    }
    C96.g = C96;
    const v102 = new C96();
    const v105 = new Int8Array(1159);
    const v107 = new Uint8ClampedArray();
    for (const v108 in v105) {
        const v109 = v105[1];
        const v110 = v105[2];
        try { v107["forEach"](...v110, v109, ..."forEach"); } catch (e) {}
    }
    v102.length = C74;
    v95.constructor;
    let v114;
    try { v114 = v102.m(); } catch (e) {}
    return v114;
}
%PrepareFunctionForOptimization(f71);
f71();
%OptimizeFunctionOnNextCall(f71);
f71();
