function f0() {
}
const v2 = [[f0]];
[v2];
function f5() {
    return -172798652;
}
const v8 = new BigInt64Array(5);
const v10 = [-536870912,8,9007199254740992,-461574414,3,-268435456,-536870912,65535,-1713660255,128];
v10.minimumSignificantDigits = v10;
v8.toLocaleString(3088, v10);
%OptimizeFunctionOnNextCall(f5);
f5();
const v13 = [];
class C14 {
    constructor() {
        delete v13[1073741824];
    }
}
class C17 {
    m(a19) {
        const o23 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o23);
        return v2;
    }
}
C17.name = C17;
new C17();
new C17();
const v27 = new C17();
const v28 = v27?.constructor;
let v29;
try { v29 = new v28(); } catch (e) {}
[0.7901394137896358,-4.0,103102.74507803889,691.607544072431,-2.220446049250313e-16,0.47888495559006006,-242.63562678234882];
const v31 = [-4.0,1000000000.0,NaN,-1000000000000.0];
v31[3] = v31;
[0.9785618138474927,Infinity,-2.0,-1.0,Infinity];
let v33 = 6;
v33--;
Uint16Array.d = v29;
Uint16Array.d = Uint16Array;
Uint16Array.f = Uint16Array;
const v36 = new Uint16Array(v33);
try { v36.entries(); } catch (e) {}
const v39 = v36.lastIndexOf(4);
const v40 = v39 ^ v39;
v40 & v40;
