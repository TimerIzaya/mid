class C1 {
    constructor(a3) {
        for (let v4 = 0; v4 < 32; v4++) {
            -(v4 - v4);
            for (let v7 = 0; v7 < 5; v7++) {
                v7 / v7;
            }
            try { a3(); } catch (e) {}
        }
    }
}
new C1(536870889);
17987 % 17987;
9007199254740992 - 9007199254740992;
function f17() {
    return 9007199254740992;
}
Object.defineProperty(C1, "length", { configurable: true, enumerable: true, get: f17 });
new Float32Array(3223);
161 & 161;
new Uint8Array(161);
const v26 = [-65536,-432658450,256];
try { v26.reduce(9007199254740992); } catch (e) {}
const v29 = new Float64Array(v26);
function f30() {
    return f17;
}
function f31(a32) {
    const v36 = new BigUint64Array(10);
    for (const v38 in v36) {
        let v39 = 10;
        for (;
            (() => {
                const v40 = v39--;
                v40 - v40;
                return v40;
            })();
            ) {
        }
        new Float64Array(2147483647);
    }
}
Object.defineProperty(v29, Symbol.toPrimitive, { writable: true, enumerable: true, get: f30, set: f31 });
v29[2] = v29;
class C45 {
    constructor(a47, a48) {
        function f49(a50) {
            return this;
        }
        const o53 = {
            "type": "function",
        };
        new Worker(f49, o53);
    }
}
new BigInt64Array(72);
new Int16Array(72);
const v59 = [1073741824,1073741823,1376142744,1073741825];
function f60(a61, a62, a63, a64) {
    try { a61.every(a64); } catch (e) {}
    a63++;
    let v67 = a63 * a63;
    v67--;
    const o69 = {
    };
    o69.f = o69;
    const v70 = o69.__proto__;
    const v71 = v70?.__defineSetter__;
    try { new v71(v70, 72); } catch (e) {}
    return f60;
}
f60.length = f60;
for (let v73 = 0; v73 < 10; v73++) {
    f60(v59, v73, v73);
}
f60();
new Int16Array(794);
-39;
new Float64Array(39);
try { Float32Array(v29, -65537, C45); } catch (e) {}
Promise.reject(Promise);
function f87(a88) {
    const o89 = {
    };
    return o89;
}
try { f87(794); } catch (e) {}
const v91 = new Float32Array(1975);
v91.c = v91;
const v95 = new WeakMap();
const v98 = new Int32Array(87);
v98[17];
v98.lastIndexOf(v95, -2147483647);
var b = -2147483649n;
