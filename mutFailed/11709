const v0 = [-1.0,-490.6930013284405,-3.8543997663321345,0.8309899792420092,0.19736600013048422];
const v1 = [0.9698045993938628,-1000000000000.0,2.0,-1.0,-Infinity,1e-15,-2.0,1e-15,-992534.5037696942,4.0];
const v2 = [-1e-15,1000.0];
function f3(a4, a5) {
    a4[4];
    const o11 = {
        "d": v2,
        "e": v0,
        [v0](a8, a9) {
            super[a5];
            v1[v1] = v1;
            return a4;
        },
        ...v2,
        "a": v0,
        "f": v0,
        "g": v0,
        10000: a5,
        "h": v1,
        "c": a5,
    };
    return o11;
}
f3(v0, v1);
f3(v0, v2);
f3(v0, v0);
[0.5722779006805824,-2.220446049250313e-16,2.220446049250313e-16,2.2250738585072014e-308];
const v16 = [-1.7976931348623157e+308,-7.953111885621635];
try { v16.pop(); } catch (e) {}
const v18 = [-4.0,1000000000.0,399.13140260744285,-138534.336653888,1.7976931348623157e+308,0.37279240432396643];
try { v18.flatMap(f3); } catch (e) {}
[-63654,268435441,22809,-2147483648,12,16,-9223372036854775808,1238970123,128,-9];
[-508059742,4096,268791160];
const v25 = [28629,-4096];
try { v25.filter(v18); } catch (e) {}
let v28 = -16n;
function f29() {
    v28 *= -1911645276n;
    return -1911645276n;
}
const v30 = f29();
v30 | v30;
let v32 = f29();
v32--;
const v34 = f29();
v34 >> v34;
