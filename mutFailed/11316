let v3 = 9n;
new Array(1);
const v8 = new WeakSet();
const v10 = 19980n & 19980n;
const v12 = -16n + -16n;
const v13 = [v3,-9223372036854775807,-16n,-16n];
const v14 = [-9223372036854775807,-1,-9223372036854775807];
let v15;
try { v15 = v14.map(-16n); } catch (e) {}
let v16 = [v14];
Object.defineProperty(v13, -65537, { writable: true, enumerable: true, set: Array });
v13[6];
v16 &&= v13;
const v19 = [v13,v10,v3,v15,v12];
Reflect.apply(Array.of, v8, v19);
const v23 = new WeakMap();
v23 < Symbol;
-17032 & 1;
Math.floor(1);
Math.sqrt(1);
v3++;
Symbol.for(Symbol);
