const v2 = new Array(1024);
function f6(a7, a8, a9, a10) {
    const o16 = {
        "h": a8,
        [Array]: v2,
        "g": 8,
        get c() {
            super.c;
            /Ma{1,2}?abc/vi;
            /[]Wh*/umsy;
            /(?<a>.)/vdimy;
            return 8;
        },
        ...Array,
        "a": a10,
    };
    return o16;
}
const v17 = f6(1024, 256, 8, 26190);
function f18(a19, a20) {
    'use strict';
    v17[4233599709] *= a20;
    function f21() {
        return a19;
    }
    return f21;
}
const v22 = f18(1024, 8);
f6(256, 256, 1024, 8);
f6(256, 256, 1024, 1024);
const v25 = /[-\xf0\x9f\x92\xa9]+/gs;
const o26 = {
};
try {
    o26.g = 1024;
} catch(e27) {
}
try {
    const o28 = {
    };
    o28.g = 1024;
    o28.d = v17;
} catch(e29) {
}
try {
    const o30 = {
    };
    o30.g = 1024;
    o30.d = v17;
    o30.a = v25;
} catch(e31) {
}
try {
    const o32 = {
    };
    o32.g = 1024;
    o32.d = v17;
    o32.e = f18;
} catch(e33) {
}
/\p{gc=Nd}/dms;
/Cxyz{0,1}+/s;
if (8 == v22) {
    for (let v37 = 0; v37 < 100; v37++) {
        f18(26190, 8);
    }
} else {
    f18(8, 1024) >= o26;
}
function F41(a43, a44, a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
    function f47() {
        return F41;
    }
    class C48 extends f47 {
        constructor(a50) {
            super();
            for (let v51 = 0; v51 < 25; v51++) {
                this["p" + "p"] = v51;
            }
        }
    }
    new C48();
}
new F41();
