class C3 {
    n(a5) {
        const v7 = -1000000000.0 ^ -713797474;
        function f8() {
            [Math.atanh("Vre")];
            return v7;
        }
        ("24495")[9];
        /\11aZsX/gdmsy;
        const v15 = /xyz{93}UD/gvy;
        /Cea{1,2}?/udmsy;
        return v15;
    }
    c = -713797474;
    static #b = "24495";
}
function f17() {
    try {
    const t0 = -713797474;
    t0(-1000000000.0, -713797474, "24495", -713797474, C3);
    } catch (e) {}
    255 * 255;
    return 255;
}
C3[Symbol.toPrimitive] = f17;
try { C3.toString(); } catch (e) {}
const v24 = new C3();
const v25 = v24?.__defineSetter__;
let v26;
try { v26 = new v25("24495", C3); } catch (e) {}
const v27 = new C3();
new C3();
-(-65535);
Uint8ClampedArray.g = Uint8ClampedArray;
Uint8ClampedArray.g = Uint8ClampedArray;
new Uint8ClampedArray(252);
let v36 = 16;
v36--;
Int32Array[1] = -1000000000.0;
let v39;
try { v39 = new Int32Array(Int32Array, v27, v24); } catch (e) {}
try { v39.slice(C3, v26); } catch (e) {}
const v41 = new Int32Array(v36);
try { v41.join(252); } catch (e) {}
let v43 = 512;
v43++;
const v46 = new Uint16Array(v43);
v46[Symbol.toPrimitive] = Symbol;
v46[487] = v46;
class C49 {
}
C49.h = C49;
C49.name = C49;
const v50 = C49.constructor;
try { v50.toString(); } catch (e) {}
v50.d = v50;
let v53;
try { v53 = Date.now(); } catch (e) {}
~v53;
class C55 extends Date {
}
const v56 = new C55();
v56.setUTCSeconds(v50, C49);
