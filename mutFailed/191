let v0 = -Infinity;
const v1 = [-20096,4294967296,-65537,-2];
const v2 = [-1947047520];
const v3 = [v2,v2,v2,v1];
const v4 = [v3];
const v6 = v1["slice"](v4);
class C9 {
    o(a11) {
        super.h ||= v0;
        return ("symbol")[1073741825];
    }
    [-1.0908698888669604e+308] = -1.0908698888669604e+308;
    static 1;
    constructor(a14, a15) {
        function f16(a17) {
            new WeakMap();
            WeakMap instanceof WeakMap;
            Math.log2(-4294967297);
            Math.sign(-4294967297);
            -v0;
            WeakMap || WeakMap;
            +v0;
            const v30 = [1.0,141599.63044947106,730.845463907873,1000000.0,-4.2811873669589365e+307,0.0,3.0];
            try { v30.forEach(-5n); } catch (e) {}
            function f33(a34) {
                a34 & a34;
            }
            const v38 = new Uint16Array(1024);
            v38[7] = v38;
            function f39() {
                const o43 = {
                    ...1.0,
                    set b(a42) {
                    },
                };
                return o43;
            }
            this.onmessage = f33;
            this.__proto__;
        }
        const v49 = [f16];
        const o50 = {
            "arguments": v49,
            "type": "function",
        };
        new Worker(f16, o50);
    }
    static toString(a53, a54) {
        new Int32Array(2528);
        const v58 = [-1024];
        for (let v59 = 0; v59 < 5; v59++) {
            delete v58[v59];
        }
        --v0;
        ("-2").normalize("NFKC");
        new Date();
        a53.c &&= a54;
        function f67() {
            1073741823 & 1073741823;
            const v70 = [2.220446049250313e-16,-2.0,9.472378156545009,0.0,1e-15,0.3751557433004281,0.0,-474740.46049005154];
            const o76 = {
                set h(a72) {
                },
                __proto__: v70,
                o(a74, a75) {
                    return this;
                },
            };
            return -1.0908698888669604e+308;
        }
        return -1.0908698888669604e+308;
    }
}
const v77 = new C9();
let v78;
try { v78 = v6(v3, v4, "symbol", v2, "symbol"); } catch (e) {}
g[2] /= -1.0908698888669604e+308;
try { ("slice")["normalize"](...C9, ...v1, v78, -1.0908698888669604e+308); } catch (e) {}
const v82 = [NaN,3.0];
const v83 = /((((.).).).)rfoo|(bar|baz)|quux*/uims;
let v84;
try { v84 = v83(); } catch (e) {}
try { v84(); } catch (e) {}
for (const v87 in "1024") {
}
v82["concat"](-483497369);
const v92 = [3.0];
function F93(a95, a96, a97) {
    if (!new.target) { throw 'must be called with new'; }
}
const v98 = new F93(-725.0347156854516);
new F93(v98, v92);
const v100 = new C9();
const v101 = new C9();
const v103 = [-392.0576825237305,0.3449869706009556,4.447039970507995e+307,-5.063798246562485e+307,-568.9796177589394,388231.4033702491,-3.5365646375454567,0.12172568971863451,-4.474791203319841e+307];
["function",[9007199254740992,-13,1,206834672,5792,16,856414023,8,2147483648],v103];
const o111 = {
    get b() {
        delete this[this];
        this[this] = 817905185;
        super[817905185] = "object";
        return 817905185;
    },
};
const o112 = {
    ...o111,
};
Symbol.matchAll;
function f116(a117) {
    class C118 {
        set g(a120) {
        }
    }
    return C118;
}
%PrepareFunctionForOptimization(Date);
f116([1000.0], -4.0);
function f127(a128, a129, a130, a131) {
    new Float64Array();
    function f134() {
        return f134;
    }
    const o144 = {
        "h": C9,
        [a130]: "symbol",
        ..."toString",
        "a": "c",
        9: v100,
        valueOf(a136, a137, a138, a139) {
            v77[a128 || "symbol"];
            try {
                a136.length = 2;
            } catch(e143) {
            }
            return v77;
        },
    };
    return o144;
}
f127("23969", v101, v77, v77);
f127("symbol", v77, v100, v101);
f127(-1.0908698888669604e+308, v100, v101, v101);
("string").normalize("NFKD");
const v152 = new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
new Int32Array(v152, 10);
function F156(a158, a159) {
    if (!new.target) { throw 'must be called with new'; }
}
const v160 = new F156(F156, F156);
Math.asinh(~v160);
