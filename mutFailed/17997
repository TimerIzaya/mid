function f0() {
    const o21 = {
        "e": "VKt1f",
        n(a5, a6) {
            let v7;
            try { v7 = this.o(); } catch (e) {}
            v7[0] *= a6;
            super.g >>= a6;
            255 in a5;
            let v9;
            try { v9 = ("VKt1f").matchAll(a5); } catch (e) {}
            %VerifyType(255);
            return v9;
        },
        set b(a11) {
            do {
                new WeakSet();
                a11++;
            } while (0 < 0)
        },
    };
    return o21;
}
const v22 = f0();
const v23 = f0();
const v24 = f0();
const v25 = v24?.__defineSetter__;
try { new v25(v24, v22); } catch (e) {}
class C30 {
    n(a32, a33, a34, a35) {
        v22[a34] = a34;
        return a35;
    }
    static #f = f0;
    set g(a40) {
        let v42 = 9223372036854775807;
        let v43 = ++v42;
        -v43;
        v43--;
        try {
            ("-2147483648").normalize();
        } catch(e48) {
        }
        -v42;
        try { a40(f0); } catch (e) {}
    }
}
C30[1] = v23;
const v51 = new C30();
v51.constructor = f0;
const v52 = v51?.constructor;
v52[1] = 647140074n;
let v53;
try { v53 = new v52(); } catch (e) {}
const v54 = new v52();
const v55 = new C30();
v55[Symbol.toPrimitive] = f0;
v52[1] = [v55,v23,v55,v54,v55];
[v55,647140074n];
[v24,v54,v55,-268435456n];
const v63 = new Uint32Array(468);
v63[122] = v63;
const v66 = new Uint8Array(64);
v66[31] = v66;
const v69 = new BigInt64Array(310);
v69.BYTES_PER_ELEMENT = v69;
Int32Array.g = v53;
Int32Array.g = Int32Array;
const v71 = new Int32Array(Int32Array, Int32Array, Int32Array);
v71.toString = f0;
try { Math.expm1(v55); } catch (e) {}
let v75 = Math.expm1(~v71);
v75--;
