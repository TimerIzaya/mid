class C3 {
    static #toString(a5) {
        let v4 = this;
        const v10 = ~2.0;
        const v12 = Math.log1p(~v10);
        v4++ || ~v10;
        return v12;
    }
}
new C3();
new C3();
new C3();
/o(?:a+){0,0}/us;
/8k{12,/gm;
/t\xe2\x81\xa3/udmy;
function f25() {
    return f25;
}
const v26 = f25();
const v27 = f25();
const v28 = f25();
class C30 extends Date {
}
function f31(a32, a33, a34, a35) {
    return f31;
}
f31(v28, v26);
const v37 = f31(v28, v27);
const v38 = /(\1a)/gums;
const v39 = /V(?:a{5,1000000}){3,1000000}/vim;
const v40 = /ma\n?/vdimsy;
let v41;
try { v41 = v40(); } catch (e) {}
const v42 = [v38,v38,v38,v38,v38];
const v43 = [v42,v39,v40,v42];
const v45 = new parseInt(v39, v38, v41);
function f46() {
    let v47 = 1000000000000.0;
    const v49 = -(v47--);
    const v51 = -v43 && v43;
    class C52 {
    }
    new C52(v51);
    const t43 = Symbol.constructor;
    t43();
    let v57 = 0;
    v57++;
    const v59 = new C52();
    const t48 = v59.constructor;
    new t48(v45, v59);
    const v62 = new C52();
    const t51 = v62.constructor;
    new t51(v49);
    const v65 = [v40,v40,v40];
    class C66 extends C52 {
    }
    const v67 = new C66(v62, C30);
    v67.constructor;
    v43.constructor.isArray(v65);
    let v71;
    try { v71 = v37.e(); } catch (e) {}
    return v71;
}
%PrepareFunctionForOptimization(f46);
f46();
%OptimizeFunctionOnNextCall(f46);
f46();
