function f3(a4, a5) {
    const o12 = {
        "g": "-42886",
        "d": "c",
        o(a7, a8) {
            for (let v9 = 0; v9 < 60; v9++) {
                try {
                    super.create(this, v9);
                } catch(e11) {
                }
            }
            return a5;
        },
        "a": "-42886",
        "b": a5,
        ["c"]: "-42886",
        "e": "-42886",
    };
    return o12;
}
f3("536870888", "-42886");
const v14 = f3("-42886", "-42886");
f3("536870888", "c");
new WeakMap();
function f18() {
    return v14;
}
("function")[0];
const v31 = [8.366000955200008,118.44755201841508,-1000000.0,-2.3923311801721443,-Infinity,0.08001769727723318,3.3083182190577793e+307,1000.0];
const v32 = [0.629904520531453,-3.51868733765091,-5.0,0.49631080053337295,843.5504379667548,206.39356039036738,1000.0,147.80629747399735,-62.23541125915301];
const v33 = ("setUTCSeconds").__proto__;
let v34;
try { v34 = v33.fontcolor(v32); } catch (e) {}
v34.concat();
const v37 = [-0.0,-2.220446049250313e-16,Infinity,-1000.0,1.7976931348623157e+308,6.750884985449616e+307,-959305.6124120813,-1e-15,-Infinity,183868.7946458524];
let v38;
try { v38 = v37.splice("function", v37); } catch (e) {}
v38.at(v31);
Uint16Array.length;
Worker.arguments = Worker;
class C58 {
}
const v59 = new C58();
const v60 = [v59,v59,v59,v59];
128 + 128;
function f65() {
    const o113 = {
        m(a69) {
            let v70;
            try { v70 = a69.m(); } catch (e) {}
            const v71 = this?.constructor;
            v70.__proto__;
            const o75 = {
                "maxByteLength": 1566,
            };
            const v77 = new SharedArrayBuffer(4, o75);
            new Int32Array(v77);
            new v71(-65535);
            a69.c = v59;
            try { a69.next(a69, 1261703539); } catch (e) {}
            a69.h = a69;
            const o82 = {
            };
            o82.c = o82;
            o82.e = Float64Array;
            o82.h = o82;
            o82.h = o82;
            function f83(a84, a85, a86) {
                return o82;
            }
            f83.c = f83;
            f83.caller = f83;
            try {
                o82.e = -65535;
            } catch(e87) {
                new Uint8ClampedArray(798, Uint8ClampedArray(798, -65535), o82);
            }
            try {
                const o92 = {
                };
                o92.c = o92;
                o92.e = v60;
                o92.e = 1261703539;
            } catch(e93) {
            }
            try { ("EV").strike(); } catch (e) {}
            ("EV").link();
            class C98 {
            }
            let v99 = 3938;
            v99++;
            Int8Array.length;
            const v103 = new Int8Array(v99);
            try { v103.map(C98); } catch (e) {}
            let v105 = 3;
            v105 - v105;
            let v107 = 0;
            -v107;
            v107 >> v107;
            [...v105] = v103;
            v107++;
            const o111 = {
            };
        },
    };
    o113.m(o113);
}
f65();
f65();
