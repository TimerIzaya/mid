function f0() {
    new Date(128, Date);
    function F7() {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v9 = new F7();
    const v12 = Array(5);
    f0[v9] = 731894.5693476209;
    try {
    const t0 = 731894.5693476209;
    t0(Array);
    } catch (e) {}
    const o14 = {
        "construct": Array,
        "defineProperty": Array,
        "getPrototypeOf": Array,
        "preventExtensions": Array,
        "set": Array,
    };
    let v15 = -9007199254740990;
    const v16 = v15++;
    Math.acosh(f0);
    new Uint8ClampedArray(129);
    v16 & v16;
    const o24 = {
        [731894.5693476209]: -65535,
        ...731894.5693476209,
        __proto__: v15,
        ...731894.5693476209,
        "e": v12,
        65537: o14,
        ...f0,
        1: 5,
        9: v15,
        ...v15,
        "d": -65535,
        "b": -65535,
        6: -65535,
        "c": v15,
        268435456: v15,
    };
    o24[268435456];
    -o24.b;
    return o24;
}
f0();
f0();
f0();
-1 !== -1;
const v37 = new Float64Array(1000);
try { v37.reduceRight(-721066022); } catch (e) {}
-9;
let v42;
try { v42 = Int32Array.bind(1000); } catch (e) {}
v42.name;
new Int32Array(9);
const v47 = new BigInt64Array(8);
const v48 = v47.BYTES_PER_ELEMENT;
v48 + v48;
let v51;
try { v51 = ("string").sup(); } catch (e) {}
v51[4] = v51;
let v52 = -1;
~v52;
let v54 = -35417;
v54--;
class C56 {
    static 7;
    static [v52] = "string";
    set g(a58) {
    }
    p(a60) {
        this.g ^= this[8];
    }
    #n(a64) {
        a64 = this;
        a64.e >>>= v54;
        const o68 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o68);
        return this;
    }
}
C56[7];
let v71 = new C56();
const t87 = 2;
const v72 = new t87();
const v73 = v72?.__defineGetter__;
try { new v73(v72, Int32Array); } catch (e) {}
const v75 = new C56();
try { v75.isPrototypeOf(Float64Array); } catch (e) {}
const v77 = v75?.constructor;
try { new v77(); } catch (e) {}
try { new v77(); } catch (e) {}
function f80(a81, a82) {
    let v83 = 0;
    do {
        v71 -= v72;
        v83++;
    } while (v83 < 5)
    const o102 = {
        ...a81,
        [a81](a88, a89, a90, a91) {
            [0.8549471140289917,-3.0,4.0,-5.0,-2.0,-1.7976931348623157e+308,5.31145436861636,NaN,1.2778157707013417e+308];
            [-1.7976931348623157e+308,-4.047862669744725e+307,-2.2250738585072014e-308,0.790769162254034,0.024752255798642486,640440.6769019293,-2.0];
            return [923.3408061449261,-6.350919708227568e+307,-2.220446049250313e-16,0.04850379751250988,4.009495502233909];
        },
        ...a82,
        "c": a81,
        "g": v75,
        "a": a81,
        set b(a96) {
            v52 <<= v52;
            const v97 = [];
            const v99 = new Float64Array(v97);
            v97[Symbol.iterator] = v99;
        },
    };
    return o102;
}
f80.d = f80;
