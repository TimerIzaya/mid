function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.e = this;
    try {
        this.d = -4294967297;
    } catch(e3) {
    }
    try {
        this.e = -4294967297;
    } catch(e4) {
    }
    try {
        this.h = -4294967297;
    } catch(e5) {
    }
}
new F0();
new F0();
const v8 = new F0();
function f9() {
    return v8;
}
new Int8Array(14);
new Uint8Array(229);
new Float64Array(842);
const v22 = [];
const v23 = [];
const v24 = [1000.0];
function f25(a26, a27) {
    function f28() {
        let v30;
        try {
        const t0 = "boolean";
        v30 = t0(v23);
        } catch (e) {}
        return v30;
    }
    a26[Symbol.toPrimitive] = f28;
    const o36 = {
        [a27]: v22,
        "h": v23,
        get e() {
            a26[1000.0] >>= -4.0;
            Date();
        },
        [227.40634637175117]: 227.40634637175117,
        [a26]: v23,
    };
    return o36;
}
f25(v24, -4.0);
%PrepareFunctionForOptimization(f25);
f25(v24, -4.0);
f25(v24, -4.0);
%OptimizeFunctionOnNextCall(f25);
f25();
