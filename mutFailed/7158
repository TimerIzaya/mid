const v6 = ["vTea","symbol"];
["d",["number","-29268","number","number","symbol"],"vTea","vTea"];
const v10 = Array?.toString;
try { new v10(); } catch (e) {}
1024 >>> 1024;
new Array(1024);
const v15 = [1.0,-6.818981069405753e+307];
try { Reflect.construct("rOrUd", "symbol"); } catch (e) {}
Reflect.construct(Uint8ClampedArray, [v15]);
const v22 = -Infinity;
class C24 {
    #toString(a26, a27) {
        new Int8Array(2);
        new BigInt64Array(56);
        new Float32Array(257);
        return 257;
    }
}
C24.prototype;
const v38 = new C24();
try { v38.constructor(); } catch (e) {}
new v6();
new C24();
function f42() {
    return v22;
}
try { f42(); } catch (e) {}
class C44 {
    [v38];
    #valueOf(a46, a47) {
        function f48() {
            return a47;
        }
        try {
            a46.__proto__ = a46;
        } catch(e49) {
        }
        return "toUpperCase";
    }
    constructor(a51, a52, a53, a54) {
        this.f;
        this.constructor;
        const v58 = [a53,a53];
        try { v58.map(a54); } catch (e) {}
        [-3.942521664036782e+307,-3.942521664036782e+307,v58];
    }
    f = v38;
}
const v61 = new C44();
v61.e = v61;
new C44();
function F63(a65, a66) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e67) {
    }
    try {
    } catch(e68) {
    }
}
