class C3 {
    static #g = "-13";
    #h = -499.9862152789649;
    static {
        this.g;
        [45341];
        [-9223372036854775808,-4294967296,536870912,127,5,11,1211900580];
        [-13,65535,-10,-19743,1281198915,-14,-65705909];
    }
    ["-13"] = -0.0;
    static ["-13"];
    g = -0.0;
    c = "-13";
    #d = "-13";
}
new C3();
new C3();
const v11 = new C3();
const v12 = /7(?=.)+/gvdimsy;
/{z}pN3/gisy;
const v14 = /CcT/gvm;
class C15 {
    o(a17, a18) {
        const v19 = v12[255];
        const v20 = super.b;
        try { v20(v19, v20, "-13", a17, v14); } catch (e) {}
        return v12;
    }
    #toString(a23, a24) {
        for (let v25 = 0; v25 < 71; v25++) {
            super.g >>= -0.0;
        }
        %VerifyType(C3);
        [560.3764338321384,2.831189514697529,-1.0,1000.0,-2.4858124652164726,1000.0,1000000.0,1000000.0,6.670434684407409e+307,-Infinity];
        const v29 = new Uint32Array();
        try { v29.entries(); } catch (e) {}
        const v31 = v29[40];
        for (let v32 = 0; v32 < 5; v32++) {
            try { v31(); } catch (e) {}
        }
        const v34 = [-2.220446049250313e-16,-146030.0093347557,-759818.7684978913,1000000000000.0,-1.2175538670763404e+307];
        [4.0];
        const v37 = new BigUint64Array();
        const v38 = /anVXYFzN(x)(x)(x)\3/gvdms;
        try { v37.reduceRight(v38); } catch (e) {}
        [-1.7976931348623157e+308,v34];
        [a23,a24];
        return v11;
    }
}
new C15();
new C15();
new C15();
const v46 = [];
class C47 {
    [v46];
    set a(a49) {
        a49 === v46 ? a49 : v46;
        [v46,a49,a49,v46];
        [v46];
        [a49,v46,v46,v46,v46];
    }
    static [v46];
    #f;
    h = v46;
}
const v55 = new C47();
new C47();
const v57 = new C47();
function F61(a63, a64, a65, a66) {
    if (!new.target) { throw 'must be called with new'; }
}
const v67 = new F61(-12, -56455, v57, v46);
const v68 = new F61(v55, -14, v55, v57);
const v69 = new F61(v55, -14, v57, C47);
v69 - -12;
Math.round();
v67 << -1.0;
try { v68(); } catch (e) {}
