function F0() {
    if (!new.target) { throw 'must be called with new'; }
    function f2() {
        return F0;
    }
    function f3(a4) {
        class C5 {
        }
        const v6 = new C5();
        const v7 = [-5.0];
        function F8(a10, a11) {
            if (!new.target) { throw 'must be called with new'; }
            const v12 = this.constructor;
            try { new v12(v6, v7); } catch (e) {}
            a11.__proto__.valueOf();
        }
    }
    Object.defineProperty(this, "a", { configurable: true, enumerable: true, get: f2, set: f3 });
    try {
        this.c = -14;
    } catch(e17) {
    }
    try {
        "p" + -14;
        for (let v20 = 0; v20 < 25; v20++) {
            v20++;
            v20 < v20;
            function f23(a24, a25, a26, a27) {
            }
            for (let v28 = 0; v28 < 5; v28++) {
                f23();
            }
        }
        this.a = -14;
    } catch(e30) {
    }
    try {
        this.h = -14;
    } catch(e31) {
        class C33 {
            static {
                try {
                const t0 = 0.44967380041772886;
                t0();
                } catch (e) {}
            }
            static f;
        }
    }
}
F0.p26 = F0;
const v36 = new F0();
const v37 = new F0();
function f38() {
    try {
        new F0();
    } catch(e40) {
    }
    return v36;
}
v37.constructor = f38;
const v41 = new F0();
const v42 = [90406.55083616823,-1.00643076029749e+308,0.32156802085590264,0.14021368297171866,-1000000.0];
v42[4];
[-1e-15,-Infinity,-640.9911649755546,0.6405081004539234,-1e-15,3.0];
const v45 = [3.0,3.0,-5.0,-1000000000.0,-1.7976931348623157e+308,2.220446049250313e-16];
v45[Symbol.toPrimitive] = f38;
function f48(a49, a50) {
    a49.constructor = f38;
    const v51 = a49?.constructor;
    try { new v51(); } catch (e) {}
    a50[3] = a50;
    const o80 = {
        o(a54, a55, a56) {
            a54.p28 = a56;
            a49 = v41;
            for (let v60 = 0; v60 < 32; v60++) {
                const v62 = "p" + v60;
                const v63 = [];
                function f64() {
                    const o66 = {
                        p() {
                            return f64;
                        },
                        [v63]: v63,
                        "a": v63,
                    };
                    return v63;
                }
                f64();
                const v68 = f64();
                const v69 = (a70, a71) => {
                    return v68 * a71;
                };
                a54[v62] = v60;
            }
            function f73(a74, a75) {
                return a74;
            }
            const v78 = new BigInt64Array(11);
            v78.lastIndexOf();
            return -2;
        },
        [a50]: a50,
        "f": v41,
    };
    return o80;
}
f48(v37, v42);
const v82 = f48(v37, v45);
try { v82.o(F0, v41, v37); } catch (e) {}
f48(v41, v42);
new Int16Array(3);
new BigUint64Array(143);
new BigInt64Array(512);
function f94() {
    try { Int8Array.from(512); } catch (e) {}
    Int8Array.b = Int8Array;
    return f94;
}
%PrepareFunctionForOptimization(f94);
f94();
%OptimizeFunctionOnNextCall(f94);
f94();
