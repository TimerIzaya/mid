function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 536870888;
    } catch(e3) {
    }
}
new F0();
const v5 = new F0();
const v6 = new F0();
function f7(a8) {
    const v9 = a8?.constructor;
    let v10;
    try { v10 = new v9(); } catch (e) {}
    const o24 = {
        [v5]: v10,
        get a() {
            let v13 = "matchAll";
            Math.fround(v13);
            const v19 = -7377973 & -7377973;
            Math.abs(5);
            5 % v19;
            Math.imul(v13--, v19);
            return a8;
        },
    };
    return o24;
}
v6.length = f7;
f7(v5);
v5(v6);
const v27 = f7(v5);
268435456 - 268435456;
-33339 / -33339;
try { v27.sup(); } catch (e) {}
const t35 = "entries";
t35[5] = "substring";
-1826596614 >> -1826596614;
113200199 >>> 113200199;
2n ^ 2n;
const v52 = [601759695];
function f57(a58, a59, a60, a61) {
    function f62() {
        let v66 = -4294967297n;
        const v67 = v66--;
        for (let v68 = 0; v68 < 5; v68++) {
            function f69() {
                b = v52;
                const o76 = {
                    [v67](a72, a73, a74, a75) {
                    },
                };
                return Date;
            }
        }
        return v66;
    }
    const t57 = -32070;
    t57("function");
    return -1000000.0;
}
