class C3 {
    constructor(a5, a6) {
        a5[a5] <<= a6;
        try {
            super.o();
        } catch(e8) {
        }
    }
    #d;
    1241;
    d = "cosh";
    8 = "cosh";
    static h = 0.5974924132360467;
    #e;
}
const v9 = new C3(0.5974924132360467, C3);
const v10 = new C3(v9, "cosh");
const v11 = new C3(C3, v10);
function f12() {
    return v10;
}
function f13() {
    return 0.5974924132360467;
}
function F14(a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = f13;
    } catch(e18) {
    }
    try {
        this.d = v9;
    } catch(e19) {
    }
    try {
        this.c = a16;
    } catch(e20) {
        const v23 = new Float64Array();
        function F24(a26, a27) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = a26;
            } catch(e28) {
                for (let [v29,v30] of a26) {
                }
            }
            try {
                const v31 = v23[this];
                const v32 = [];
                new Float32Array(7);
                v32[1];
                new F24(v31, -268435456n);
            } catch(e39) {
            }
        }
        new F24();
        new F24();
        new F24();
    }
}
const v43 = new F14(v11, v9);
new F14(v10, v43);
new F14(v10, v9);
const v46 = [1840677197,-43868];
const v49 = new Int8Array(6);
for (const v50 in v49) {
    Object.defineProperty(v46, v50, { configurable: true, value: v50 });
}
