[];
let {...v2} = [-536870912,-65537,10,-9007199254740990,-11,46376,2,6];
const v3 = new v2();
try { v3.constructor(); } catch (e) {}
class C5 {
}
const v7 = /\c4a.[(x)(x)(x)\4*(x)(x)(x)\3*]/gmy;
const v8 = /G(a)\1a+8?/vdimsy;
const v10 = ([342.12300421344116,0.3998304334347528,-1.5569468467414895e+308,929110.7069466491,0.8403359879371063,928.8415619105033,5.0])?.toStringTag;
let v11;
try { v11 = new v10(); } catch (e) {}
let v12 = -198895178;
class C13 {
    static #n(a15, a16) {
        function F17(a19, a20, a21, a22) {
            if (!new.target) { throw 'must be called with new'; }
        }
        v8[243] -= v11;
        ++v12;
        F17(v7);
    }
}
new BigUint64Array(241);
new Uint8Array(56);
new Uint8ClampedArray(59);
let v37 = 0;
v37++;
-9223372036854775808 & -9223372036854775808;
const v42 = 256 < 256;
function f43(a44) {
    return v42;
}
const v47 = [7,57468];
class C49 {
}
[Reflect,Reflect,Reflect];
const o63 = {
    toString(a54, a55) {
        const v58 = new Int32Array(1024);
        for (const v59 of v58) {
            new SharedArrayBuffer();
            SharedArrayBuffer.e = v58;
            [1539012200,f43];
        }
    },
};
const v64 = new Map();
v47.__proto__ = v64;
class C66 {
    constructor(a68, a69) {
        try {
            super.n(1e-15);
        } catch(e71) {
        }
        try {
            super.getYear(a68, this);
        } catch(e73) {
        }
    }
}
new C66(C66, C66);
v64[-10] >>= 1024;
Array(1024, -10);
