let v2 = 7;
class C3 {
    #g = v2;
    static set f(a5) {
        new Array(1083);
    }
    static [-1];
    static {
        Reflect.construct(v2, [v2], v2);
        v2 = -1;
        super.f;
        [-0.3484514485991692,5.215616449601761e+307,0.8738032636808731,1000000000.0,0.5251786972157989,0.9162411350857441,1e-15,-2.2250738585072014e-308,-2.0];
        [1000000000000.0,0.6728671698015282,2.0,1.0,5.0,2.2250738585072014e-308,3.0];
        [2.2250738585072014e-308,297.6777373388484,0.691284488309957,0.5659485772077721,0.0,4.0];
    }
}
new C3();
new C3();
new C3();
function f23() {
    return 255;
}
let v29 = 1000000000000.0;
class C30 {
    b = -142.577867451237;
    [v29] = -142.577867451237;
    #m(a32) {
        const v34 = Symbol.toPrimitive;
        const o63 = {
            [v34]() {
                let v36 = Math;
                const v38 = ++v29;
                const v39 = v29 ** v29;
                /(a{0})/gvimy;
                v36 & (15462 ** 15462);
                +Infinity;
                (15462 || 1000000000000.0) + -142.577867451237;
                v36--;
                +v29;
                v36.log(v38);
                v36.sin(v39);
                try {
                    Symbol("toDateString");
                } catch(e62) {
                }
                return -142.577867451237;
            },
        };
        return this;
    }
}
const v66 = new BigUint64Array(1000);
const o67 = {
    ...v66,
};
new C30();
new C30();
new C30();
new Uint8Array(1246);
const v76 = new Uint16Array(512);
const t60 = [];
t60[6] = 4294967295;
ReferenceError(ReferenceError);
function F83() {
    if (!new.target) { throw 'must be called with new'; }
    typeof arguments;
    gc();
}
const v89 = new F83();
const t69 = v89.constructor;
new t69();
class C92 {
}
const v94 = new Date();
const v96 = new Set();
v96.add(v94);
new Int32Array(1);
function f99() {
}
class C100 extends f99 {
}
new C100();
[0.0,1000000.0];
function f103() {
    let v104 = 0;
    do {
        const o105 = {
        };
        try {
            o105.h = f99;
        } catch(e106) {
        }
        try {
            const o107 = {
            };
            o107.h = f99;
            o107.f = Uint8Array;
        } catch(e108) {
        }
        try {
            const o109 = {
            };
            o109.h = f99;
            o109.f = Uint8Array;
            o109.d = f99;
        } catch(e110) {
        }
        try {
            const o111 = {
            };
            o111.h = f99;
            o111.f = Uint8Array;
            o111.d = v76;
        } catch(e112) {
        }
        v104++;
    } while (v104 < 10)
    for (const v119 of Array(4087)) {
    }
    return Array;
}
f103();
f103();
