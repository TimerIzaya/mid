class C3 {
    static f = 1000000000.0;
    static {
        let v6 = 0;
        do {
            const v7 = this.f;
            v7.e |= 8.484601964127055;
            try { v7(v7, this, v7, v7, Number); } catch (e) {}
            v6++;
        } while (v6 < 9)
    }
}
new C3();
new C3();
new C3();
new Uint8Array(5);
new Int16Array(8);
new Int8Array(1255);
const v29 = new Set();
function F30(a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a32;
    } catch(e34) {
        for (let [v35,v36] of a32) {
        }
    }
    try {
        const v37 = v29[this];
        ([WeakSet,WeakSet])[1];
        new F30(v37, -268435456n);
    } catch(e42) {
    }
}
new F30();
new F30();
new F30();
new Int16Array(1);
new Uint16Array();
new Int16Array(386);
new Uint16Array();
new Int16Array(16);
new BigInt64Array(2);
const v65 = Symbol.iterator;
const o74 = {
    [v65]() {
        let v67 = 10;
        const o73 = {
            next() {
                v67--;
                v67 == 0;
                const o72 = {
                };
            },
        };
    },
};
