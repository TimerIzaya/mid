const v0 = [-1000.0,-840705.0211049201];
const v1 = [-1.7976931348623157e+308,-0.0,-682.0317092795588,-7.6523316724735,-4.0,-Infinity,3.0];
const v2 = [-1000000000.0,-286.97010583112467,0.677370919607191,1000000000.0];
function f3(a4) {
    Object.defineProperty(a4, "toString", { writable: true, enumerable: true, value: f3 });
    const o20 = {
        [v2]: a4,
        "b": a4,
        ...v2,
        ...a4,
        set b(a6) {
        },
        "arguments": v2,
        "d": v1,
        [v0]: v1,
        "f": v1,
        __proto__: v0,
        set a(a8) {
            function f9() {
                return a8;
            }
            ReferenceError(-1073741824, 9007199254740991n);
            class C14 {
            }
            function f15(a16, a17, a18) {
                const o19 = {
                    1073741824: C14,
                };
                return -1073741824;
            }
        },
        "g": v2,
        "a": v1,
    };
    return o20;
}
f3(v0);
f3(v1);
const v23 = f3(v1);
const v25 = -2 | -2;
const v26 = v2.constructor;
function f27(a28, a29) {
    function f30() {
        return a28;
    }
    function f31(a32) {
        Symbol.hasInstance;
    }
    Object.defineProperty(a28, 5, { writable: true, get: f30, set: f31 });
    let v35 = a28[5];
    v35++;
    return v26;
}
f27(v2);
const v40 = new Uint16Array(7);
new Float64Array(47);
const o46 = {
    "execution": "async",
};
function f47() {
    return f47;
}
const v48 = /(?:a*)+q(?<a>.)/guds;
function f49(a50) {
    const v51 = a50?.constructor;
    try { v51(a50, f47); } catch (e) {}
    const o54 = {
        get d() {
            return a50;
        },
        __proto__: v48,
    };
    return o54;
}
for (let i57 = 0, i58 = 10; i57 < i58; i58--) {
    for (let v65 = 0; v65 < 50; v65++) {
        f49(v48);
    }
}
[WeakSet];
new Uint8ClampedArray(64);
new Float64Array(10);
const v75 = new BigUint64Array();
function f76(a77) {
    for (let v78 = 0; v78 < 100; v78++) {
        f27(a77, a77);
    }
    return v23;
}
v75[Symbol.toPrimitive] = f76;
function f82(a83, a84) {
    return a84;
}
const v86 = new Uint32Array();
v86[v40] = v86;
const v89 = new WeakMap();
v89.set(Uint16Array);
const v91 = /o(\xed\xb0\x80)\x01/gudims;
function f92() {
    const v93 = v91.__proto__;
    v93.b >>>= v25;
    return v93;
}
v91[Symbol.toPrimitive] = f92;
v91[Symbol.toPrimitive] = f82;
const v98 = /(xyz{93})/gusy;
try { v98.compile(v75, v91); } catch (e) {}
