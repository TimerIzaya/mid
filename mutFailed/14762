new WeakMap();
/a\Sc/dis;
/9qZ\x01[^o(?=.)Hg?]/umy;
/a|bi/gs;
function F11() {
    if (!new.target) { throw 'must be called with new'; }
}
const v13 = new F11();
delete v13?.[3189];
function f15() {
    function f16(a17, a18, a19, a20) {
        return a18;
    }
    f16(f16, f15, f16, f15);
    return f15;
}
f15();
class C26 {
    static {
        for (let i30 = 0, i31 = 10;
            (() => {
                function f32(a33) {
                    return f32;
                }
                try { f32(..."toSpliced"); } catch (e) {}
                ([])["AheIw"]("AheIw");
                return i30 < i31;
            })();
            (() => {
                function f40() {
                    return f40;
                }
                for (let v41 = 0; v41 < 500; v41++) {
                }
                for (const v45 in Array(176726687)) {
                }
                const v46 = [601759695];
                const v47 = [1073741824,1073741823,1376142744,1073741825];
                function f49(a50, a51, a52, a53) {
                    function f55() {
                        return a50;
                    }
                    f40();
                    const v58 = new Int8Array();
                    function f59(a60, a61) {
                        return i31;
                    }
                    f59(f59(v47, C26));
                    v58.buffer.slice(2147483648);
                    %OptimizeFunctionOnNextCall(f55);
                    Math.cosh(-9.488890520175198e+307);
                    Math.sin(-268435456);
                    let v74;
                    try { v74 = v47["find"](..."find", a53, ...v46, ...v47, ...522675525n); } catch (e) {}
                    v74 <= a52;
                    return arguments;
                }
                for (let v76 = 0; v76 < 10; v76++) {
                    f49();
                }
                i30++;
            })()) {
        }
    }
}
function F81(a83) {
    if (!new.target) { throw 'must be called with new'; }
    const v84 = this.constructor;
    v84.prototype;
    try { new v84(); } catch (e) {}
}
