let v0 = "zk5";
new Date();
let v7 = new Uint8ClampedArray(89);
new Uint8ClampedArray(36);
new Float32Array(512);
class C14 {
    static valueOf(a16) {
        this.name;
        let v19 = -1234486802;
        const v21 = v0 ^ v19;
        const v22 = v19 % 1;
        v22 % v22;
        512 || v21;
        Math.sign(v22);
        ++v19;
        ++v0;
        return "split";
    }
}
C14.name;
try { C14.valueOf(C14); } catch (e) {}
let v30;
try { v30 = C14.toString(); } catch (e) {}
try { v30.includes("split"); } catch (e) {}
const v32 = new C14();
const v33 = v32?.constructor;
v33.c = v33;
let v34;
try { v34 = new v33(); } catch (e) {}
try { v34.constructor(); } catch (e) {}
const v36 = v32?.__lookupGetter__;
try { new v36(v32); } catch (e) {}
let v38 = new Float32Array();
const v39 = new C14();
const v40 = v39?.__defineGetter__;
try { new v40(v39, v38); } catch (e) {}
const v42 = v39?.constructor;
v42.name;
let v44;
try { v44 = new v42(); } catch (e) {}
const v45 = v44?.constructor;
try { new v45(); } catch (e) {}
const v47 = v39?.__defineGetter__;
const v48 = v47?.toString;
try { new v48(); } catch (e) {}
v47.g = v47;
let v50;
try { v50 = new v47("-12197", v0); } catch (e) {}
class C51 extends C14 {
    f = v0;
    static o(a53, a54) {
        a53 / v39;
        return a53;
    }
    m(a58, a59) {
        this.f = this;
        const v60 = this?.constructor;
        try { new v60(); } catch (e) {}
        let v62;
        try { v62 = new v60(); } catch (e) {}
        const v63 = v62?.constructor;
        try { new v63(); } catch (e) {}
        v38 *= v32;
        const v67 = -326.7629190972847 !== -326.7629190972847;
        v67 && v67;
        try { ArrayBuffer.bind(v62); } catch (e) {}
        return -326.7629190972847;
    }
}
try { C51(); } catch (e) {}
let v73;
try { v73 = new C51(); } catch (e) {}
const v74 = new C51();
let v75;
try { v75 = v74.m(v32, v74); } catch (e) {}
v7--;
v75 - v75;
const v78 = new C51();
const v79 = v78?.constructor;
try { new v79(); } catch (e) {}
const v81 = new C51();
v81.f = v81;
const v82 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v84 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v85 = [601759695];
try { v85.map(v32); } catch (e) {}
v85[0] = v85;
const v87 = [1073741824,1073741823,1376142744,1073741825];
try { v87.sort("split"); } catch (e) {}
let v89;
try { v89 = v87.push(C51); } catch (e) {}
v89 != v89;
-v89;
!(522675525n !== 522675525n);
function f95(a96, a97, a98, a99) {
    arguments.b = v45;
    const v101 = arguments?.__lookupSetter__;
    try { v101.apply(a99, a99); } catch (e) {}
    try { new v101(v39); } catch (e) {}
    function f104() {
        let v107 = Float64Array;
        v107.prototype = v107;
        v107 = a97;
        function f108(a109, a110, a111, a112) {
            'use strict';
            try { new a97(a110, ...a111, ..."split", a96, a99); } catch (e) {}
            a112 <= f95;
            return a110;
        }
        f108(v47, a97, "split", -4294967295);
        b = 36;
        let v116 = v82.length;
        v116--;
        try {
            v87.forEach(v87);
        } catch(e119) {
        }
        const v120 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        Symbol.prototype = Symbol;
        try { Symbol.keyFor(Symbol); } catch (e) {}
        const v123 = Symbol.toPrimitive;
        const o131 = {
            toString(a125, a126) {
                try { this.hasOwnProperty(f104); } catch (e) {}
                try { a126.o(a97, v50); } catch (e) {}
                const v129 = a99 && v107;
                a125 *= v123;
                return v129 <= v120;
            },
        };
        try { o131.toString(Symbol, C51); } catch (e) {}
        const o152 = {
            "c": -4294967297n,
            [522675525n](a135, a136) {
            },
            "c": v85,
            valueOf(a138, a139) {
                return v101;
            },
            "b": -4294967295,
            [-4294967297n](a141, a142, a143, a144) {
            },
            "e": -4294967295,
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v84,
            ...v85,
            "type": "Vre",
            ..."Vre",
            valueOf(a146, a147) {
                return v87;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            toString(a149, a150, a151) {
                return a99;
            },
            5: -4294967295,
            6: -268435456,
        };
        o152[6];
        o152[5] = o152;
    }
    let v154;
    try { v154 = f104.bind(-4294967297n); } catch (e) {}
    v154.e = v154;
    let v155;
    try { v155 = v154.constructor("-12197"); } catch (e) {}
    v155.length = v155;
    f104();
    const v158 = new Int8Array();
    let v159;
    try { v159 = v158.values(); } catch (e) {}
    v159.buffer.slice(2147483648);
    %OptimizeFunctionOnNextCall(f104);
    let v164;
    try { v164 = ("find").blink(); } catch (e) {}
    v164[13] = v164;
    let v165;
    try { v165 = v87["find"](..."find", a99, ...v85, ...v87, ...522675525n); } catch (e) {}
    v165 <= a98;
    return arguments;
}
f95.d = f95;
for (let v167 = 0; v167 < 10; v167++) {
    const v168 = v73();
    v168.f = v168;
    v168.e = v168;
}
%OptimizeFunctionOnNextCall(f95);
f95();
