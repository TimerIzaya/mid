function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -11016;
    } catch(e3) {
    }
}
let v4 = new F0();
const v5 = new F0();
function f6(a7, a8) {
    function f9(a10, a11) {
        return f9;
    }
    return f9;
}
Object.defineProperty(v5, "toString", { configurable: true, value: f6 });
let v12 = new F0();
v12.m = v4;
class C17 extends Int32Array {
}
const v18 = new C17();
class C19 {
    constructor(a21, a22) {
        this.constructor = f6;
        const v23 = this?.constructor;
        try { new v23(this, a21); } catch (e) {}
    }
}
new C19();
class C26 {
    get c() {
        class C28 {
        }
        const t33 = ("1073741824").constructor;
        t33().replaceAll().toLowerCase().slice(gc);
        for (let v36 = 0; v36 < 32; v36++) {
            this["p" + v36] = v36;
        }
        return this;
    }
    static set e(a40) {
        let v39 = this;
        a40 || v39;
        const t42 = 9n >> 9n;
        new t42("dotAll");
        function f46() {
            return f46;
        }
        ({"c":v4,"g":v39,...v12} = v39);
        try {
            v12.length = 1413;
        } catch(e48) {
        }
    }
}
new C26();
const v50 = new C26();
const v51 = new C26();
class C55 {
    static [-21981];
    static h = v51;
    static 268435439 = v50;
    p(a57, a58, a59) {
        try {
            new F0();
        } catch(e61) {
        }
        return a59;
    }
    static {
        const v63 = delete this?.h;
        let v64;
        try { v64 = v12.m(v4, F0, v63); } catch (e) {}
        delete this[v64];
        v18.toLocaleString();
        const v69 = /NV?/vmy;
        const v70 = /N[^123]a\nz(x)(x)(x)\2?/guim;
        let v71;
        try { v71 = v69(v70); } catch (e) {}
        const v72 = [-2.2250738585072014e-308,v71];
        [v72,v72,v72];
        -v5;
        Math.atan2(v5, v5 >>> 128);
        v64 + v64;
    }
}
new C55();
new C55();
new C55();
Object(10).toExponential(16);
