const v3 = [16,-59537];
const v4 = [-1662621807,-24169];
[127,256,-2147483648,1238125610,-9223372036854775808,-268435456,-2147483648];
const o15 = {
    get d() {
        this[0] /= 4294967296;
        let v11 = -908890636;
        return Math.log(this & --v11);
    },
};
for (let i = 0; i < 10; i++) {
    o15.d;
}
function f17(a18, a19, a20, a21) {
    a18[1];
    const o43 = {
        m(a24, a25) {
            [64,-634939636,-61180,-40398,-2147483648];
            [-9223372036854775807,1440979461,536870912,-3,1073741825,5,-489797371,-2,127,1073741825];
            [-4,9,-2024376787,2,29382,-4096,-9223372036854775807,-9223372036854775808,4096,-50112];
            return a25;
        },
        n(a30, a31, a32, a33) {
            try {
                super.valueOf("join", a19, v4);
            } catch(e35) {
                const v37 = new BigUint64Array();
                v37.buffer.slice();
                new Uint16Array(3);
            }
            return "join";
        },
    };
    return o43;
}
const v44 = f17(v4, "av0", v3, "join");
try { v44.m(f17, f17); } catch (e) {}
const v46 = f17(v3, "-536870912", null, "av0");
try { v46.n(v3, f17, "join", f17); } catch (e) {}
class C48 {
    constructor(a50, a51) {
        for (let v52 = 0; v52 < 500; v52++) {
            [601759695];
            function F54(a56, a57, a58) {
                if (!new.target) { throw 'must be called with new'; }
            }
            new F54();
        }
    }
}
const v60 = new C48();
v60.constructor;
f17(v4, "-536870912", v46, "av0");
const v64 = ["4294967296"];
([127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649]).toSpliced(-1148418937, -1148418937, 2.220446049250313e-16, 2.220446049250313e-16, "-4");
"toString" == "toString";
function f73() {
    for (let [i76, i77] = (() => {
            switch (f73) {
            }
            return [0, 10];
        })();
        i76 % i76, i76 < i77;
        i76++, i77--) {
    }
    return f73;
}
Uint16Array.prototype = Uint16Array;
new Uint16Array(v64);
v4.forEach();
const v90 = new Int8Array(3938);
let v91 = 3;
let v92 = 0;
for (let i = 0; i < 5; i++) {
    [...v91] = v90;
    v92++;
}
