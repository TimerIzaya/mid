["b","b","58073","b","b"];
["b"];
["g","g"];
new Array(1808);
class C12 extends Array {
    set c(a14) {
        let v15 = 0;
        while (v15 < 2) {
            this[10000] = this;
            v15++;
        }
    }
    [536870889n];
    5;
    static b = "58073";
}
new C12();
new C12();
new C12();
new BigInt64Array();
new Uint16Array();
[1073741824,-2118633808,512];
[-58942,-65537,835264087,973003550,9311];
function F31(a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    const v35 = this.constructor;
    try { v35(); } catch (e) {}
    this.b = a33;
}
new F31();
new F31();
if ("object" == "object") {
} else {
    try {
        const t34 = "g";
        t34.valueOf = Array;
    } catch(e42) {
    }
}
const v44 = ("JghwC").slice;
function F45() {
    if (!new.target) { throw 'must be called with new'; }
    class C47 {
    }
    for (let v50 = 0; v50 < 25; v50++) {
        let v51 = v50++;
        v51--;
        v50 < v50;
        [601759695];
        [1073741824,1073741823,1376142744,1073741825];
        function f56() {
            try { Array.isArray(f56); } catch (e) {}
            const v60 = Array(4087);
            try { v60.find(); } catch (e) {}
            for (const v62 of v60) {
            }
            return 4087;
        }
        function f63(a64, a65, a66, a67) {
        }
        for (let v68 = 0; v68 < 10; v68++) {
            v44();
        }
    }
}
new F45();
