[4096,29824,-1073741824,536870889,1073741824,232102414,-1,-202470413,43815];
[-27597051,4502,128,268435439];
[39599,-9007199254740992,268435456,-37291];
const v6 = new WeakMap();
function f8(a9, a10, a11, a12) {
    const o15 = {
        __proto__: a12,
        get e() {
            v6.get(a9);
            return Uint32Array;
        },
    };
    return a10;
}
new Set();
let v20 = 65536;
v20--;
let v24 = -1e-15;
const v25 = v24++;
Math.atan2(v25, -175950080);
new Int32Array(3);
class C30 {
}
new C30();
(1)?.h;
const v34 = new Date();
v34.getUTCDate();
[9,9];
function F38(a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
}
Array(16);
new Int32Array(9);
new BigUint64Array(16);
let v49 = -2147483648n;
class C51 {
    static m(a53) {
        ({"a":C51,"h":v49,} = this);
    }
}
const v54 = new C51();
const v55 = new C51();
class C56 {
}
function F57(a59) {
    if (!new.target) { throw 'must be called with new'; }
}
const v60 = new F57(F57);
const v61 = v60.propertyIsEnumerable();
try { v61(); } catch (e) {}
const o63 = {
};
o63.b = v54;
const o64 = {
};
Object.defineProperty(o64, "b", { writable: true, value: v55 });
const v65 = new C56();
let v66;
try { v66 = v65.constructor(); } catch (e) {}
const v67 = new C56();
const v68 = v67.__lookupGetter__;
let v69;
try { v69 = v68(); } catch (e) {}
const v70 = new C56();
const v71 = v70.constructor;
new v71(C51, v66, C56, o63);
const v75 = new Float32Array();
try { v75.forEach(v69, v55); } catch (e) {}
const v79 = new BigUint64Array();
let v80;
try { v80 = v79.filter(v71); } catch (e) {}
class C81 {
}
const v82 = new C81();
const v83 = v82.__lookupGetter__;
try { v83(); } catch (e) {}
function f85(a86) {
    return a86;
}
const v87 = v82.constructor;
new v87(v69);
const v89 = new C81();
v89.propertyIsEnumerable(v87, v80, o64);
const v91 = new C81();
const t84 = v91.constructor;
const v93 = new t84();
const t86 = /[\11]/gm;
t86.e = v25;
const v95 = /a(?!bbb|bb)c/vi;
Object.defineProperty(v95, "toString", { value: f85 });
const v96 = v95.toString;
const v97 = new v96(BigUint64Array, 246, C51, v95, v96);
const v98 = v97.__lookupGetter__;
try { v98(); } catch (e) {}
const v101 = new Uint16Array(C56);
const v102 = v101[1];
const v104 = new Float64Array();
delete v104[-1.5286188982640463e+308];
class C107 {
    static {
        [];
        try {
            super.setInt8();
        } catch(e111) {
        }
    }
}
v102 & v102;
function F114(a116, a117) {
    if (!new.target) { throw 'must be called with new'; }
}
v97.tan();
function f119() {
    const o123 = {
        toString(a121) {
            return [-2.0,-1000000.0,-Infinity,0.03714003700223023,-1.0];
        },
    };
    return o123;
}
[f119,f119(),[4,4294967295,-14,-2068970124,63345,9007199254740992,14312,-1300834415,59193]];
const v128 = new Int32Array(v93, 31, 560);
v128[30];
function f130() {
    return Int32Array;
}
const v131 = f130();
v131.e = v131;
const t128 = f130().e;
new t128();
