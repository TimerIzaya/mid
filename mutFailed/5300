class C3 {
    static #m(a5, a6) {
        return a6;
        ("QQcMj").normalize("NFKD");
        return a5?.[179];
    }
    ["-9007199254740991"] = "-9007199254740991";
    b;
    13;
}
const v11 = new C3();
const v12 = new C3();
new C3();
const v14 = [0.602038268284836,-1.7976931348623157e+308,-4.211494269917182,-939259.7989376923,0.02623941368615268];
const v15 = [2.220446049250313e-16,-2.220446049250313e-16,-1000.0];
const v16 = [0.6510197437094396,-1.0511782233986482e+308,4.49875597519787,-1.5810488747241378e+308,-4.0,670.2302444806094,-Infinity];
function F17(a19, a20, a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = v12;
    } catch(e23) {
    }
    try {
        this.h = a21;
    } catch(e24) {
    }
    try {
        this.c = v14;
    } catch(e25) {
    }
}
new F17(v16, v15, -1.7560623034267127e+308, v16);
new F17(v14, v15, -1.7560623034267127e+308, v12);
new F17(v14, v16, v11, -1.7560623034267127e+308);
const v30 = new BigUint64Array(-1.7560623034267127e+308);
function F31() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        let v33 = -9007199254740991;
        let v34 = 0;
        while (v34 < 0) {
            for (let v37 = 0; v37 < 5; v37++) {
            }
            v34++;
        }
        do {
            try { v30.entries(); } catch (e) {}
            v33++;
        } while (v33 < 5)
        new F31();
    } catch(e45) {
    }
}
([]).indexOf();
new F31();
new F31();
