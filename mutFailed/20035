class C3 {
    m(a5) {
        this[a5] = a5;
        new Float64Array(16);
        new Uint8ClampedArray(3343);
        const v14 = new Uint32Array(255);
        return v14;
    }
    [-3.0];
}
const v15 = new C3();
const v16 = new C3();
const v17 = new C3();
function f18(a19, a20) {
    const o38 = {
        "b": v17,
        toString(a22, a23, a24, a25) {
            d = v15;
            return v17;
        },
        m(a27, a28, a29) {
            const o30 = {
            };
            try {
                o30.b = this;
            } catch(e31) {
            }
            try {
                const o32 = {
                };
                o32.b = this;
                o32.h = a29;
            } catch(e33) {
            }
            try {
                const o34 = {
                };
                o34.b = this;
                o34.h = a29;
                o34.g = a20;
            } catch(e35) {
            }
            try {
                const o36 = {
                };
                o36.b = this;
                o36.h = a29;
                o36.a = a29;
            } catch(e37) {
            }
            return 0.7499722693054169;
        },
    };
    return o38;
}
const v40 = f18(f18(C3, -1000000.0), -1000000.0);
f18(v16, v16);
[-2,9223372036854775807,-4294967297,-128,4096,1293718996,10000,43707];
[2,-16,-57070,-41195,4294967295,-15554,4];
try {
    v15.valueOf = f18;
} catch(e44) {
}
try { v15.m(0.7499722693054169, v17, f18); } catch (e) {}
[-65537,-10,6,256,-30092,-9223372036854775808];
const v48 = new v40();
const v49 = [0.22765518540216179,1000000000000.0,95110.62484655366,1000000000.0,3.436859148069951,-0.0,2.0,-5.0];
const v50 = [-102.00254877873078,4.124955647620156e+306,-2.0,-553429.805328496,-2.2250738585072014e-308,3.0];
const v51 = [513779.5906574144,1.7409613810254415e+307,98.0881888203628,0.0];
function f52(a53, a54) {
    a53[7];
    const o63 = {
        ...a53,
        ...v49,
        [v49](a57, a58) {
            a58[v48];
            const v60 = a54.length;
            a53 == v60 ? a53 : v60;
            return a54;
        },
        __proto__: v48,
        ...v51,
        "a": Map,
        "b": a54,
        [a54]: a54,
    };
    return o63;
}
const v64 = f52(v49, v49);
f52(v51, v49);
f52(v15, v50);
-2 !== -2;
256 - 256;
class C72 extends Map {
    [v64];
    static [-2];
    #p(a74, a75, a76) {
        a75.__proto__;
        let v78 = 0;
        do {
            try {
                v50.toString = f52;
            } catch(e79) {
            }
            v78++;
        } while (v78 < 3)
        return this;
    }
}
try { new C72(); } catch (e) {}
new C72();
new C72();
new C72();
const v89 = Array(1024);
try { v89.flatMap(-3.0); } catch (e) {}
const v95 = new Uint8Array(128);
let v96;
try { v96 = v95.reduce(); } catch (e) {}
function f97() {
    const o135 = {
        m(a101) {
            try { a101.next(a101, 1261703539); } catch (e) {}
            a101.c = a101;
            a101.h = a101;
            const o103 = {
            };
            o103.h = o103;
            o103.h = o103;
            function f104(a105, a106, a107) {
                return o103;
            }
            f104.caller = f104;
            try {
                o103.e = -65535;
            } catch(e108) {
                const v111 = new Uint8ClampedArray(798, -65535, e108);
                const t136 = 1261703539;
                new t136(798, ...v111, o103);
            }
            try {
                const o113 = {
                };
                o113.e = 1261703539;
            } catch(e114) {
            }
            let v116;
            try { v116 = ("EV").link(); } catch (e) {}
            let v117 = 0;
            class C118 {
            }
            const v121 = new Int8Array(3938);
            let v122 = 3;
            let v123 = 0;
            let v124 = v123 >> v123;
            for (let i = 0; i < 5; i++) {
                [...v122] = v121;
                v123++;
            }
            const o126 = {
            };
            try {
                let v127 = 0;
                for (let i = 0; i < 5; i++) {
                    ({"c":v96,"d":v117,...v124} = v116);
                    try {
                        o103.fuck(128, a101);
                    } catch(e129) {
                    }
                    v127++;
                    v127 < 5;
                }
                const o133 = {
                };
            } catch(e134) {
            }
            return Int8Array;
        },
    };
    o135.m(o135);
    return 128;
}
const v137 = f97();
f97();
const v139 = [Uint8ClampedArray];
v139[0] = v137;
const v140 = Reflect.construct(Uint8ClampedArray, v139);
v140.BYTES_PER_ELEMENT = v140;
const v141 = v140.constructor;
try { new v141(Array, Array, Array); } catch (e) {}
