function f0() {
}
const v1 = [2.0,-1e-15,282538.12932596356,-0.0,-2.220446049250313e-16,Infinity,NaN,2.2250738585072014e-308];
const v2 = [-868692.7007217489,-1000000000.0,0.834413408086409,-5.0,0.3189793001485566];
const v3 = [-1000.0];
function f4() {
    return v2;
}
function f5() {
    return v1;
}
const v6 = [f0,f4,v2,f0,v2];
[v3];
const t11 = "GaY9";
t11[[1.3080204387628154,-2.2250738585072014e-308,NaN,-341334.9766939094,-4.720661350098792e+307,-698576.696052423]] >>= -4.0;
class C11 {
}
const v12 = C11.__proto__;
v12[v12];
const v14 = [v3,v3];
[v14,v1,v14,v1];
[v1,[v6]];
class C21 {
    static #a;
    static n(a23, a24) {
        const v25 = super.d;
        try { v25(); } catch (e) {}
        return a23;
    }
    [1];
    static [1] = 255;
    [255];
    static {
        const v28 = this.toString();
        try { v28(); } catch (e) {}
    }
    constructor(a31, a32, a33) {
        super();
        const v34 = `
            try { a31(a33, f5); } catch (e) {}
        `;
        eval(v34);
    }
    f = -65536;
}
const v38 = new C21();
new C21();
const v40 = new C21();
let v42 = -65536n;
class C44 {
}
const v45 = new C44();
const v46 = new C44();
function f47(a48, a49) {
    const o58 = {
        [-943.3768400471749]: v46,
        [a49](a51, a52, a53) {
        },
        p(a55, a56) {
            this.toString(a56, this, v45, a49);
            return a48;
        },
    };
}
f47();
f47();
%OptimizeFunctionOnNextCall(f47);
let v62;
try { v62 = v38.m(1n, 10000n, 10000n, 1); } catch (e) {}
function f63(a64, a65, a66) {
    const v67 = [65537,268435441,63298,-5,1235122603];
    function F68(a70, a71, a72, a73) {
        if (!new.target) { throw 'must be called with new'; }
        const v74 = this.constructor;
        try { v74(-65536, -65536, v67); } catch (e) {}
    }
    let v76;
    try { v76 = v62(a65); } catch (e) {}
    v76 = a66;
    class C78 extends WeakSet {
        static #n(a80) {
            function f81(a82) {
                return a82;
            }
            class C83 extends f81 {
            }
        }
    }
    v42 >>= a66;
    v38[10] = 1n;
    try {
    } finally {
    }
    new BigInt64Array(12);
    v40.f;
    return v42;
}
f63(255, 255, 1n);
const v91 = new Float32Array(5);
const v94 = new Uint8Array(1759);
const o95 = {
    ...v91,
    ...v94,
};
