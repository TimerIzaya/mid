const v1 = -Infinity;
const v3 = [0.6988856407353534,-9.05577887940641,0.9447011921562641,124738.71234818967];
const v4 = [-774096.7932777598,727917.3821310767,-18341.504780691583,2.220446049250313e-16,0.5522027345118432,1.4159428870053387e+308,0.19511561032989655,-1.7976931348623157e+308,1e-15,3.0];
v3[7] = v4;
const v5 = [-1.0,1000000.0];
let v6;
try { v6 = v5.toLocaleString(); } catch (e) {}
const v7 = [v5,v3,v1,v3,0.8807467567475704];
let v8;
try { v8 = v7.map(v1); } catch (e) {}
[v7,v7,v1,v5];
const v10 = [4.0,v4];
let v11 = [-2,1472864808,-49110,3,2147483648,2,64];
[-65537,-1646435024,49045,9,53450,27903,2147483648];
const v13 = [8,10,536870889];
--v11;
v11 ^= 4.0;
let v15;
try { v15 = v6(v13, v6, v13, v10, v13); } catch (e) {}
let {"b":v16,"g":v17,"length":v18,...v19} = v5;
v15--;
try { new Uint8Array(Uint8Array, v1, v13); } catch (e) {}
function f23() {
    return f23;
}
class C24 extends f23 {
}
C24.name;
class C26 {
    constructor(a28, a29) {
        const v30 = Uint8Array.constructor;
        try { new v30(f23); } catch (e) {}
        try { v30(Uint8Array, C24, a29, a29, v30); } catch (e) {}
        for (let v33 = 0; v33 < 500; v33++) {
            try {
                a28 &= C24;
            } catch(e34) {
                for (let v35 = 0; v35 < 5; v35++) {
                    function f36() {
                        return e34;
                    }
                }
            }
        }
    }
}
new v8();
new C26(C24, C24);
