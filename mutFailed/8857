function f0() {
    const o12 = {
        0: -13,
        [-1000000000.0]: "boolean",
        ..."boolean",
        set a(a5) {
            a5 |= -1000000000.0;
            let v6 = 0;
            do {
                const v7 = ("boolean")[268435440];
                try { new v7(); } catch (e) {}
                super.a = v7;
                v6++;
            } while (v6 < 7)
        },
    };
    return o12;
}
const v13 = f0();
const v14 = f0();
const v15 = f0();
class C16 extends f0 {
    static c;
    f = f0;
    0;
    n(a18) {
        try {
            f0();
        } catch(e20) {
        }
        function f21() {
            return a18;
        }
        return v13;
    }
    [v15];
}
new C16();
new C16();
new C16();
class C26 extends f0 {
    static [v14];
    static #valueOf(a28, a29) {
        Object.defineProperty(v13, "c", { writable: true, configurable: true, enumerable: true, get: a29 });
        C26();
        new Uint8ClampedArray(C26);
        new BigInt64Array(16);
        new BigUint64Array(255);
        return f0;
    }
}
const v40 = new C26();
new v14();
new C26();
class C49 {
    constructor(a51) {
        this[1762774961] = this;
        a51 % a51;
        function f53() {
            return a51;
        }
        try { f53.bind(this); } catch (e) {}
    }
    static [-1e-15] = 388526.11080929684;
    ["name"] = -1e-15;
    f;
    [-1e-15];
    a;
    1762774961 = -1e-15;
    static ["name"];
}
C49.e = C49;
const v55 = new C49(1000.0);
const v56 = new C49(v55);
const v57 = v56?.__lookupSetter__;
try { new v57("name"); } catch (e) {}
new C49(-1e-15);
let v61;
try { v61 = new WeakSet(); } catch (e) {}
new WeakSet();
new Set();
let v66 = undefined;
const o67 = {
};
v40.c = o67;
v66 = o67;
function F68() {
    if (!new.target) { throw 'must be called with new'; }
    const v70 = this.constructor;
    try { new v70(); } catch (e) {}
    let v72 = -128;
    v72--;
    this.g = v72;
}
new F68();
new v61();
