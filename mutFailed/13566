class C3 {
    constructor(a5, a6) {
        a5 + a5;
        a6[0] = a6;
        const v8 = a5++;
        v8 >>> v8;
        try {
            try { ("Qvh4").codePointAt("Qvh4"); } catch (e) {}
            this.fuck(false, "Qvh4");
        } catch(e14) {
            e14.b = e14;
            e14.message;
        }
    }
    g = 536870912;
    #e;
    static #b;
    static 10000 = 536870912;
}
const v16 = new C3(536870912, "a");
const v17 = new C3("a", v16);
v17.g = v17;
const v18 = new C3(C3, 536870912);
const v19 = [v18];
const v20 = [v16,v16,536870912,v17];
v20[1];
const v22 = [v18,v17,v16,C3,v20];
try { v22.entries(); } catch (e) {}
function F24(a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.toString(); } catch (e) {}
    a26[10000] = a26;
    a27[0];
    const v30 = this?.constructor;
    v30.length = v30;
    try { new v30(C3, C3); } catch (e) {}
    a27[0];
    try {
        this.h = a27;
    } catch(e33) {
    }
    try {
        this.g = a26;
    } catch(e34) {
    }
    try {
        this.a = a26;
    } catch(e35) {
    }
}
F24.arguments = F24;
new F24(C3, v19);
const v37 = new F24(v18, v19);
const v38 = v37.a;
v38[10000] = v38;
const v39 = new F24(v18, v20);
v39.e = v39;
const v41 = [0.0,0.0];
const o42 = {
    __proto__: v41,
};
const v43 = o42.push(0.0);
v43 | v43;
