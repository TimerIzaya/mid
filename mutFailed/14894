([-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0]).length;
Object.hasOwn(16);
new Uint16Array(512);
new BigInt64Array(919);
new Int8Array(256);
function F15(a17) {
    if (!new.target) { throw 'must be called with new'; }
    const v18 = this.constructor;
    v18.e = v18;
    try { new v18(); } catch (e) {}
    function F20() {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this in this;
            new F20();
        } catch(e28) {
            try {
                this.fuck(1000.0, false);
            } catch(e32) {
            }
        }
    }
    this.g = -1;
}
new F15(-1);
[-52303];
[9007199254740991,9,15,-14,-4294967297,-1356731078];
const v36 = [512];
new BigInt64Array(1142);
new Float64Array(1000);
function f45(a46, a47) {
    function f48(a49, a50) {
    }
    let v52;
    try { v52 = Set.apply(a46, f48); } catch (e) {}
    return v52;
}
new Uint32Array(16);
const v56 = new Map();
function f57(a58, a59) {
    const v60 = new v36();
    const t41 = v60.constructor;
    new t41();
    function f63(a64, a65, a66) {
        const o74 = {
            n(a68, a69, a70) {
                return f63;
            },
            valueOf(a72, a73) {
                return a73;
            },
        };
        return o74;
    }
    function f75(a76, a77, a78, a79) {
        try {
            f75(a76, a77, a79, a79);
        } catch(e81) {
        }
        for (let v82 = 0; v82 < 5; v82++) {
            a79--;
        }
        return a77;
    }
    const o93 = {
        "a": a59,
        [a58]: v56,
        [v56]: Map,
        [2221](a85, a86, a87) {
        },
        ...v56,
        "b": a58,
        [a59]: Map,
        "h": a58,
        valueOf(a89) {
            return a89;
        },
        toString(a91, a92) {
        },
    };
    return a59;
}
for (let v94 = 0; v94 < 395; v94++) {
    f57();
}
