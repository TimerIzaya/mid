let v1 = "i";
class C3 {
    n(a5, a6) {
        switch (a6) {
            case v1:
                super["-12"];
                break;
        }
        return this;
    }
    static #valueOf(a9, a10) {
        [978.2502344160762,0.24015095125547004,-Infinity,-7.7027811615093285,-1.7976931348623157e+308,-4.0,-564506.648039104];
        [-1000000000000.0,2.2250738585072014e-308,4.0,-831027.3590333464,-1e-15,1000.0,2.220446049250313e-16,-5.0,-1000.0];
        const v16 = [-9.091481326473251e+307,0.4769774453071982,-942057.6226745947,4.790581690600347e+307];
        const v17 = [-5,525452826,-1632335713,7,1073741824,11841,64,-60652];
        [-541648613,268435439,-12636,9223372036854775807,4,-11];
        [-128,0,2147483648,9223372036854775807,1310346981,-4294967297,-15,256,128,-403376465];
        v17[996423096] = "setSeconds";
        const o25 = {
            "maxByteLength": 128,
        };
        const v27 = new ArrayBuffer(6, o25);
        new Uint16Array(v27);
        return v16;
    }
}
new C3();
new C3();
new C3();
new Uint32Array(2129);
new Int32Array(928);
new Uint16Array(8);
function F44(a46) {
    if (!new.target) { throw 'must be called with new'; }
    let v47;
    try { v47 = this.constructor(); } catch (e) {}
    let v48 = WeakRef;
    [a46,v1,,v48] = v1;
    [this,C3];
    let v50 = [v48];
    const v51 = [v50];
    const v52 = this.constructor;
    let v53;
    try { v53 = new v52(v52, F44, v52, v52); } catch (e) {}
    try {
        a46 % 257;
    } catch(e56) {
        ("gV9")["toLowerCase"](v52, ...-5.0, ...v47);
    }
    v53?.e;
    v50 *= v51;
    Reflect.construct(C3, [], Int32Array);
}
const v63 = new F44(F44);
new F44(v63);
