new Int16Array(9);
new Uint32Array(199);
const v8 = new Uint16Array(0);
const v9 = [-1000000.0,1000000000.0,2.0,-6.460633228951844];
const v10 = [534354.6164783733,6.676678433020264,707.8101205653768,2.220446049250313e-16];
const v11 = [-1000000.0,-774.3551471397199];
class C12 {
    static 10 = v8;
    constructor(a14, a15, a16) {
        function f17(a18, a19) {
            const o20 = {
            };
            return o20;
        }
        with (a14) {
            length = Uint32Array;
            const o21 = {
            };
            new Proxy(this, o21);
        }
    }
    b = v11;
    626584759 = Int16Array;
    static #h;
    #e;
}
new C12(v10, v10, v11);
new C12(v9, v10, v11);
class C26 {
}
function f27() {
    0 < 9;
    const v36 = new Int16Array(16);
    v36[10] = -9007199254740992;
    const o73 = {
        ["constructor"]: "constructor",
        2: 4.0,
        ..."rN",
        "f": "rN",
        __proto__: "rN",
        "g": 4.0,
        "h": "rN",
        m(a39, a40) {
            const v43 = new BigUint64Array(1000);
            const o44 = {
                ...v43,
            };
            a39[this] = "constructor";
            Array();
            class C50 {
                static #a;
                static n(a52, a53) {
                    const v54 = super.d;
                    try { v54(); } catch (e) {}
                    return a52;
                }
                [1];
                static [1] = 255;
                [255];
                f = -65536;
            }
            const v56 = new C50();
            const v57 = new C50();
            let v59 = -65536n;
            let v61;
            try { v61 = v56.m(1n, 10000n, 10000n, 1); } catch (e) {}
            function f62(a63, a64, a65) {
                let v66;
                try { v66 = v61(a64); } catch (e) {}
                v66 = a65;
                v59 >>= a65;
                v56[10] = 1n;
                v57.f;
                return v59;
            }
            const v70 = ("gYPHN").normalize("NFKD");
            try {
                ("constructor").localeCompare(v70);
            } catch(e72) {
            }
            return v70;
        },
    };
    return o73;
}
const t85 = f27();
t85[9] **= C26;
new C12(v10, v10, v10);
const v77 = /h\p{gc=Nd}/vdy;
function F80(a82, a83, a84, a85) {
    if (!new.target) { throw 'must be called with new'; }
}
new F80(v77, F80, -23596, 1);
const v87 = Date.prototype;
try { v87.setFullYear(); } catch (e) {}
