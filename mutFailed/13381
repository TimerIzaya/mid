let v0 = -562008119;
class C3 {
    static #d = 1;
    constructor(a5, a6) {
        const v7 = this.c;
        const v8 = v7 === 1;
        const v9 = v8 ? v7 : 1;
        try {
            this.valueOf = v9;
        } catch(e10) {
        }
        const v15 = v0++;
        let v16 = 129 >>> v0;
        --v16 & v16;
        Math.asinh(v16);
        Math.floor(v15);
        const t13 = -30020;
        t13[8] = v8;
        super.c;
    }
    [1] = -30020;
    [-30020];
    static [1] = -30020;
    g = -30020;
}
const v22 = new C3(1, v0);
const v23 = new C3(-30020, v0);
new C3(v0, 1);
new Map();
class C27 extends Map {
    static get e() {
        %VerifyType(C3);
        new C3(-30020, v0);
        v0 ** v0;
        super.size;
        return v22;
    }
    static o(a33, a34, a35, a36) {
        const v38 = [-30020,v22,[v22,1,v23,this,a36],this,a34];
        const v39 = [v38,a34,v38];
        let v40;
        try { v40 = v39.toLocaleString(); } catch (e) {}
        ++v40;
        return v22;
    }
}
new C27();
new C27();
new C27();
Uint32Array[1] = 15;
new Float64Array(Uint32Array);
