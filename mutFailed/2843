class C3 {
    constructor(a5, a6) {
        try { new a5(this, a5, "unshift"); } catch (e) {}
        const t3 = "30241";
        delete t3?.length;
    }
    static 1033 = "unshift";
    static set b(a10) {
        try { ("30241").trimEnd(a10, "30241", ..."unshift", ...this); } catch (e) {}
        for (const v12 in a10) {
            const o13 = {
            };
            try {
                o13.a = v12;
            } catch(e14) {
            }
            try {
                const o15 = {
                };
                o15.a = v12;
                o15.b = "30241";
            } catch(e16) {
            }
            try {
                const o17 = {
                };
                o17.a = v12;
                o17.b = "30241";
                o17.c = a10;
            } catch(e18) {
            }
            try {
                const o19 = {
                };
                o19.a = v12;
                o19.b = "30241";
                o19.e = a10;
            } catch(e20) {
            }
        }
    }
}
const v21 = new C3(31727, "30241");
new C3(v21, 31727);
new C3(31727, "30241");
/u(?<a>.)/is;
/ZB(x)(x)(x)\3/vdmsy;
/a[a-z]/vdmsy;
new Map();
24560 ^ 24560;
function F39() {
    if (!new.target) { throw 'must be called with new'; }
    const v41 = [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    Date();
    v41.reduce(Date)[22];
    const v49 = Array(19793);
    for (const v50 of v49) {
        new Array(5);
        BigInt64Array.BYTES_PER_ELEMENT;
        const v60 = new BigInt64Array(257);
        try { v60.join(64); } catch (e) {}
        257 != 1590;
        new BigInt64Array(1590);
        BigInt64Array.name = BigInt64Array;
        new BigInt64Array(9);
        536870888 / 536870888;
        function f73() {
            return -2147483648;
        }
        function F74(a76) {
            if (!new.target) { throw 'must be called with new'; }
            const v77 = this?.constructor;
            try { new v77(a76); } catch (e) {}
            try {
                this.f = 145253519;
            } catch(e79) {
            }
        }
        new F74();
        -65106n ^ -65106n;
        Int8Array.d = Int8Array;
        const o86 = {
            "execution": "async",
        };
        o86.execution;
        gc(o86);
    }
    const v89 = [v49,v49,v49,v49];
    const v91 = new BigUint64Array();
    const v92 = v91.constructor;
    try { v92(); } catch (e) {}
    const v95 = [[v89,v89,v89]];
    v95.toSpliced(v95);
    v95 >= Uint16Array;
}
new F39();
new F39();
