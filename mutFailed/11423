let v2 = "multiline";
let v3;
try {
const t0 = "b2l";
v3 = new t0("b2l", v2);
} catch (e) {}
v2 = "b2l";
v3 ||= "b2l" instanceof v3;
try {
    v3.valueOf = v3;
} catch(e5) {
}
function F6(a8) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = "MIN_SAFE_INTEGER";
    } catch(e9) {
    }
    try {
        this.f = "b2l";
    } catch(e10) {
    }
}
const v11 = new F6("b2l");
new F6(v11);
const v13 = new F6(v11);
class C15 {
    static f;
    static toString(a17, a18) {
        const v19 = ("b2l").length;
        function f20(a21, a22, a23, a24) {
            a24.e &= v19;
            [[["b2l",a18,v19],false,a18,v13,"MIN_SAFE_INTEGER"]];
            return arguments;
        }
        f20();
        return "b2l";
    }
}
new C15();
new C15();
new C15();
const v34 = new WeakMap();
v34.delete(v34);
new Int8Array(964446029);
new Uint32Array(257);
