[0.0,9118.713283200865,-3.384787431627723,3.0,Infinity,499.9937799124698,566923.6054715009,9.478136565648442e+307];
[2.2250738585072014e-308,-925.1326247809228,722150.4555844264,2.0,1000.0];
[-5.0,NaN,-2.0];
function f9() {
    return 0.7510564303537298;
}
const v12 = [];
try {
    v12.some();
} catch(e14) {
    e14.message = e14;
    e14.stack;
}
class C18 {
    n(a20, a21) {
        Object.defineProperty(this, "e", { enumerable: true, value: super[1000] });
    }
}
function f23() {
    return 609.6673817244325;
}
const v28 = ("has").matchAll("has");
let v29 = v28.next();
[Uint8Array,[Uint8Array,Uint8Array]];
try {
} catch(e33) {
}
const o35 = {
};
/ka{0}/guims;
function f37() {
    return gc();
}
const t33 = 1417643674n;
const v40 = new t33();
let v41 = v40[877];
let v42 = 15135;
const v43 = v42--;
gc();
new BigInt64Array();
const v48 = gc.entries();
try { v48.__defineSetter__(v41, v43); } catch (e) {}
function f51() {
    const o52 = {
    };
    return o52;
}
const v53 = f51();
const o54 = {
    ...v53,
};
new Date();
v41 >>= BigInt64Array;
v29 = Date;
const o56 = {
    "getOwnPropertyDescriptor": Uint16Array,
};
new Proxy(v28, o56);
