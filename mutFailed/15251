function F3(a5, a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
    a6 === F3;
    new BigUint64Array();
    /anVXYFzN(x)(x)(x)\3/gvdms;
}
function f12() {
    for (let v13 = 0; v13 < 5; v13++) {
        const v14 = new F3(f12, f12, v13);
        const t9 = v14.constructor;
        new t9();
    }
    return f12;
}
const v18 = `
    try {
    } catch(e19) {
    }
`;
new BigInt64Array(10, 2082091189n);
const v24 = Int8Array.prototype;
const v25 = new Int8Array(10, Int8Array, Int8Array, 2082091189n);
let v26 = 5;
v26++;
const v29 = new Uint8ClampedArray(v24);
2147483647 >>> 2147483647;
for (let v32 = 0; v32 < 5; v32++) {
    "n" + v32;
}
const v36 = new Map();
const v37 = [0.22765518540216179,1000000000000.0,95110.62484655366,1000000000.0,3.436859148069951,-0.0,2.0,-5.0];
const v38 = [513779.5906574144,1.7409613810254415e+307,98.0881888203628,0.0];
function f39(a40, a41) {
    const v42 = a40[7];
    const o50 = {
        ...a40,
        ...v37,
        [v42](a44, a45) {
            a45[v36];
            const v47 = a45.length;
            v29 == v47 ? a40 : v47;
            return v25;
        },
        __proto__: v36,
        ...v38,
        "a": Map,
        "b": a40,
        [a41]: a41,
    };
    return v24;
}
f39(v38, v37);
("n").split("n", 2147483647);
