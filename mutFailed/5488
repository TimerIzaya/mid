function f0() {
    const o11 = {
        [536870887]: 0,
        n(a5, a6) {
            try {
                super.m(a5, "12", 0, this);
            } catch(e8) {
            }
            return this;
        },
        "h": 0,
        1: 0,
        0: 536870887,
        "b": 0,
        [0]: 536870887,
        o(a10) {
            return 0;
        },
        "c": 0,
        "a": "12",
    };
    return o11;
}
const v12 = f0();
const v13 = f0();
const v14 = f0();
class C15 extends f0 {
    static [v12] = v13;
    constructor(a17) {
        super();
        try {
            f0();
        } catch(e19) {
        }
    }
    toString(a21, a22) {
        super[a22] = v12;
        [0.05063541349617995,0.7978486682253144,-1000.0,-5.0];
        [1.0,0.05205346443637171,-3.0,6.4407191332945];
        [1e-15];
        super.a &= v12;
        return v12;
    }
}
const v26 = new C15(f0);
new C15(v13);
const v28 = new C15(v14);
function F32(a34, a35, a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a36;
    } catch(e38) {
    }
    try {
        this.c = -60932;
    } catch(e39) {
    }
}
new F32(v26, -60932, 3, v26);
new F32(F32, 3, 3, v12);
new F32(C15, -60932, -60932, v28);
function f43() {
    const o54 = {
        toString(a48, a49) {
            try {
                super.getMinutes(a49);
            } catch(e51) {
            }
            return "object";
        },
        "type": "boolean",
        set g(a53) {
        },
        "b": "boolean",
        "g": "object",
        128: "boolean",
        "a": 1000000000000.0,
        "c": "boolean",
        ["object"]: f43,
        ..."object",
        ["boolean"]: 1000000000000.0,
        [f43]: f43,
        5: f43,
        __proto__: "boolean",
        "h": 1000000000000.0,
    };
    return o54;
}
Math.tan(-532550611);
const v58 = [8];
const v59 = [-1024,-2147483647,-37738,-2,21596,2147483649,9007199254740992,-2039218916];
class C60 {
    static #f;
    static set f(a62) {
        a62(this, this, a62, v58);
    }
    constructor(a65, a66, a67) {
        a66.#a;
    }
    static {
        do {
        } while (0 < 0)
    }
    /*
    constructor(a74) {
        this.e = v58;
    }
    */
}
try { Math.reduceRight(4294967295, v59, C60); } catch (e) {}
const v77 = f43();
const v78 = f43();
const v79 = f43();
%VerifyType(v78);
v78 >> f43;
Object.defineProperty(v79, "c", { configurable: true, enumerable: true, set: f43 });
function F81(a83) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v85 = /8/vdiy;
        class C86 {
            constructor(a88, a89) {
                try {
                    b = v85;
                } catch(e90) {
                } finally {
                }
            }
        }
        const v91 = [-2051630605,509562611];
        class C92 {
            0 = v91;
        }
        const v94 = new Date(Date);
        function F95(a97) {
            if (!new.target) { throw 'must be called with new'; }
            const v98 = this.constructor;
            try { new v98(); } catch (e) {}
            this.f = v94;
        }
        new C86(v85, C86);
        function f101(a102, a103) {
            const o107 = {
                [122188848n](a105, a106) {
                },
            };
            return o107;
        }
        %PrepareFunctionForOptimization(f101);
        this.b = a83;
    } catch(e108) {
    }
}
const v109 = new F81(v77);
new F81(v78);
new F81(v109);
v79[128];
function F114(a116) {
    if (!new.target) { throw 'must be called with new'; }
    a116[128] = a116;
    try {
        this.f = a116;
    } catch(e117) {
    }
    try {
        this.h = a116;
    } catch(e118) {
    }
    try {
        this.d = v77;
    } catch(e119) {
    }
}
F114.e = F114;
new F114(v78);
let v123 = new Float64Array(3);
v123 ^= this;
const v125 = new F114(v79);
v125.d = v125;
new F114(v78);
function f127(a128, a129, a130) {
    a129[128];
    Reflect.preventExtensions(Reflect);
    class C134 {
    }
    new Uint32Array(186);
    a130[128] = a130;
    const o154 = {
        get d() {
            function f139(a140, a141, a142) {
                'use strict';
                return a140;
            }
            return this;
        },
        ...v125,
        2074850330: a128,
        get a() {
            const o147 = {
                "execution": "async",
                "type": "major",
            };
            const v148 = gc(o147);
            class C149 {
            }
            new C149();
            Array(36862);
            return v148;
        },
        "b": a129,
    };
    o154[2074850330] = o154;
    return o154;
}
const v155 = f127(v79, v79, v77);
const v156 = f127(v78, v78, v155);
v156[2074850330] = v156;
f127(v155, v156, v78);
function F158(a160, a161, a162) {
    if (!new.target) { throw 'must be called with new'; }
    const v163 = this?.constructor;
    try { new v163(F158, F158, f43); } catch (e) {}
    a161.g = a161;
    const v165 = [-256,13351,5138,2,-4294967295,1000,268435440];
    class C166 {
        constructor(a168, a169) {
            for (const v170 in this) {
            }
            Math.atan2(v165, -4294967297);
        }
    }
    class C174 extends C166 {
    }
    new C174();
    try {
        this.d = a162;
    } catch(e176) {
    }
    try {
        this.a = a160;
    } catch(e177) {
    }
}
new F158(v78, v79, v78);
try { Uint32Array.bind(F114); } catch (e) {}
function f183(a184, a185, a186, a187) {
    const o188 = {
    };
    return o188;
}
Math?.expm1;
