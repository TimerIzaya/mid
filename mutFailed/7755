const v2 = new Uint32Array(2134);
const v5 = new Float32Array(1);
const v8 = new Int16Array(4);
class C9 extends Float32Array {
    get c() {
        const o11 = {
        };
        new Proxy(v8, o11);
        return v5;
    }
    static [v2];
    static m(a15, a16, a17, a18) {
        super[a18];
        return v5;
    }
    [v5];
    [v8] = 2134;
    static #f;
    #c;
}
const v20 = new C9();
new C9();
new C9();
class C23 {
}
const v24 = new C23();
const v25 = new C23();
const v26 = new C23();
if (v25 !== v24) {
    Int16Array == v5 ? Int16Array : v5;
} else {
    v24.d;
}
class C31 extends C23 {
    constructor(a33, a34) {
        super();
        try {
            a33.__proto__ = C23;
        } catch(e35) {
        }
        new C23();
    }
}
const o37 = {
};
new Proxy(C31, o37);
delete C23[v20];
const v41 = new C31(v26);
new C31(v41, v41);
new C31();
new C23();
