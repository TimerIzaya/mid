const v2 = new Int32Array(1263);
let [v3,v4] = v2;
v4++;
v3 = 1263;
let v6;
try { v6 = v2.findIndex(v4, v4); } catch (e) {}
const v7 = typeof v6;
const v9 = ("function")?.small;
try { new v9(); } catch (e) {}
!(v7 === "function");
let v15 = new Int8Array(8);
function f16(a17, a18) {
    function f19() {
        return ([f19,f19]).constructor.isArray();
    }
    return a17;
}
v15[Symbol.toPrimitive] = f16;
const v25 = v15[5];
function f27(a28, a29, a30) {
    function f32(a33) {
        %VerifyType(v4);
    }
    this.onmessage = f32;
    new Array(1024);
}
const v39 = ("function")[1];
const v40 = [1263,f27,2187];
const o41 = {
    "arguments": v40,
    "type": "function",
};
const v42 = new Worker(f27, o41);
const v43 = v42?.__lookupSetter__;
try { new v43("function"); } catch (e) {}
const v46 = new Uint32Array(2187);
function F47(a49, a50, a51) {
    if (!new.target) { throw 'must be called with new'; }
    a50[7] = a50;
    try {
        this.f = a50;
    } catch(e52) {
    }
    try {
        this.c = a50;
    } catch(e53) {
    }
    try {
        this.h = v15;
    } catch(e54) {
    }
}
const v55 = new F47(F47, v15, v2);
const v56 = new F47(Uint32Array, v15, v55);
function f57() {
    v15[Int8Array] = 2187;
    try {
        v40.lastIndexOf("function", 64);
    } catch(e60) {
    }
    return f57;
}
try { f57(); } catch (e) {}
new F47(v15, v56, Int32Array);
new WeakMap();
const v67 = [-21696350,-6,2,9007199254740991];
([-539523665])[0];
function F70(a72, a73, a74) {
    if (!new.target) { throw 'must be called with new'; }
    function f75(a76, a77) {
        let v79;
        try { v79 = a76["toString"](v15, a76, a72); } catch (e) {}
        return v79;
    }
    this.constructor = f75;
    function f80() {
        a74[1] = v25;
        v15 = v39;
        return v46;
    }
    a73.valueOf = f80;
    const v81 = this?.__defineGetter__;
    try { new v81(-2.2250738585072014e-308, -2.2250738585072014e-308); } catch (e) {}
    a73 / a73;
    268435440 >>> 268435440;
    const v87 = new Float32Array(this, a74, a74);
    const v89 = new Uint8Array(268435440);
    new Uint8ClampedArray(129);
    v89[6] = v87;
}
try { new F70(v6, v3, v6); } catch (e) {}
const v94 = new F70(v67, -1000000000000.0, -2.2250738585072014e-308);
v94.toString = f57;
const v95 = v94?.constructor;
try { new v95(f27, v94, v6); } catch (e) {}
new F70();
