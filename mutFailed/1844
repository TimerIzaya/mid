function f3(a4) {
    const o5 = {
        ["E"]: "E",
        "d": "E",
        "c": "-185650492",
        __proto__: a4,
        "g": "-185650492",
        [a4]: a4,
        ..."E",
        ...a4,
        "e": a4,
        "f": a4,
        "h": "E",
    };
    return o5;
}
const v6 = f3("E");
f3("-185650492");
f3("-185650492");
%VerifyType(131388410);
function f10() {
    return v6;
}
new Int16Array(3);
new Float64Array(2161);
new BigUint64Array(3);
const v26 = new Set();
function F27(a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        let v31;
        try { v31 = new a30(); } catch (e) {}
        v31[Symbol.hasInstance] = this;
        let v36 = 162643.23588493303;
        a30 || 1773068650;
        const v38 = ++v36;
        v38 + v38;
        !v31 << v38;
        this.e = a29;
    } catch(e42) {
        for (let [v43,v44] of a29) {
            class C45 {
            }
            const v46 = new C45();
            const v47 = v46.g;
            try {
                v47.length = 1;
            } catch(e49) {
            }
            try {
                v26.values();
            } catch(e51) {
            }
        }
    }
    try {
        this.h = v26;
    } catch(e52) {
        Math.atan2(257, 257);
    }
    try {
        const v56 = v26[this];
        try {
            let v58 = 0;
            while (v58 < 8) {
                a30 - v58;
                for (let v62 = 0; v62 < 32; v62++) {
                    a30["p" + v62] = v62;
                }
                v58++;
            }
            new F27(v56, -2046072084n);
        } catch(e67) {
        }
        this.b = Set;
    } catch(e68) {
    }
}
const v69 = new F27(Set, Set);
let [v70,,...v71] = v26;
const v73 = Symbol.toPrimitive;
const v74 = v71[v73];
try {
    v69.toString = v74;
} catch(e75) {
}
new F27(Set, F27);
new F27(v69, F27);
[28.464807941936897,0.6876471799475875,-4.024971662372387,-1000000000.0,-982.6382193743566,Infinity,0.0,-4.0,-821.2850284587798];
[0.27109226904944717,-4.9641037907328345,0.0,2.220446049250313e-16];
[1.7976931348623157e+308,-488.74642043706683,-4.0,-4.0,-1.7976931348623157e+308,1.0,-0.0,0.6085307230700101];
const v87 = [65537,268435441,63298,-5,1235122603];
const v88 = [128,215394418];
try { v88.entries(); } catch (e) {}
[-2,-4294967296,4294967297];
function F91(a93, a94, a95, a96) {
    if (!new.target) { throw 'must be called with new'; }
    const v97 = this.constructor;
    try { v97(1024, 1024, v87); } catch (e) {}
}
new F91(-714582153, F91, -714582153, v88);
let v101 = -1;
class C103 {
}
function f104(a105, a106, a107, a108) {
}
function f109() {
    const o113 = {
        [1.7976931348623157e+308](a112) {
        },
    };
}
f109(v73, -35417, F27);
class C115 extends f109 {
}
const o118 = {
    set b(a117) {
        v101 <<= v101;
    },
};
