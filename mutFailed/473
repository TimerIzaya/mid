const v1 = new Set();
[0.8352958367131966,2.0,3.0,2.2250738585072014e-308,-854774.0342070854,-329071.658508062,-1e-15,-1.6896244499334915e+308];
const v3 = [1.7657291490391137e+307,-3.7754573954966776e+307];
const v4 = [-3.0,0.9458877232252239,100.62943055002711,-1000.0,1.0,235513.0890475521,-2.220446049250313e-16,905.7440330589086,-1e-15];
try { ("valueOf").toWellFormed(); } catch (e) {}
class C10 extends Set {
    static #valueOf(a12, a13) {
        class C14 extends Set {
            [v3];
        }
        new C14();
        new C14();
        new C14();
        return false;
    }
    b;
    static #b = v1;
    [v4];
    static [v4];
}
new C10();
new C10();
const v20 = new C10();
function f21(a22, a23) {
    function F24(a26, a27, a28, a29) {
        if (!new.target) { throw 'must be called with new'; }
        a29[1][1];
    }
    return v3;
}
v20[Symbol.toPrimitive] = f21;
const v34 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v35 = [601759695];
const v36 = [1073741824,1073741823,1376142744,1073741825];
function f38(a39, a40, a41, a42) {
    function f43() {
        new BigUint64Array([-4]);
        return a42;
    }
    Object.defineProperty(a41, Symbol.toPrimitive, { writable: true, configurable: true, enumerable: true, value: f43 });
    function f49() {
        const v50 = /(ab|cde)\118\P{sc=Greek}+/gdims;
        function f51(a52, a53) {
            function f55(a56, a57) {
                const o65 = {
                    set g(a59) {
                        function F60(a62, a63, a64) {
                            if (!new.target) { throw 'must be called with new'; }
                        }
                    },
                };
                return 536870912n;
            }
            return a41;
        }
        Object.defineProperty(v50, Symbol.toPrimitive, { writable: true, enumerable: true, value: f51 });
        v50.exec(v50);
        return false;
    }
    a41.valueOf = f49;
    a41--;
    function f71() {
        const v73 = ("Vre")?.constructor;
        try { new v73(v20); } catch (e) {}
        const o80 = {
            "e": -4294967295,
            ...v34,
            ..."Vre",
            "c": a42,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a78, a79) {
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            5: -4294967295,
            6: -268435456,
        };
        return o80;
    }
    try { f71(); } catch (e) {}
    f71();
    %OptimizeFunctionOnNextCall(arguments);
    let v84;
    try { v84 = v36["find"](..."find", a42, ...v35, ...v36, ...522675525n); } catch (e) {}
    const v85 = v84 <= a41;
    v85 || v85;
    return arguments;
}
f38(v35, v34, 522675525n, v34, v1);
BigInt64Array.length = BigInt64Array;
0.8199829542463926 != 0.8199829542463926;
class C95 {
    static e;
    e;
    static 3 = -5.161103313394506;
    toString(a97) {
        let v96 = this;
        v96.e *= 0.8199829542463926;
        v96 += v96;
        for (let v98 = 0; v98 < 10; v98++) {
            a97["p" + v98] = v98;
        }
        return 0.8199829542463926;
    }
}
const v101 = new BigInt64Array(3216);
v101.valueOf = Symbol;
new Int8Array(3331);
const v107 = new BigUint64Array(4096);
function f109() {
    const o114 = {
        ["8"](a112, a113) {
        },
    };
    return o114;
}
for (let v115 = 0; v115 < 51; v115++) {
    false || false;
    f38(v35, v115, false, v115);
}
f38(v107, 3331, v101, 3216);
%PrepareFunctionForOptimization(Int8Array);
let v124;
try {
const t0 = 1000000000.0;
v124 = t0(2.220446049250313e-16, Uint8ClampedArray, ...1000000000.0, -82.86062314585524);
} catch (e) {}
f38(v107, 3331, v101, 3216);
f38(v107, 3331, v101, 3216);
%OptimizeFunctionOnNextCall(f38);
f38(v107, 3331, v101, 3216);
function f129() {
    return f129;
}
function f130(a131, a132, a133, a134) {
    a133.toString = f38;
    a131 !== a131;
    a132 != a132;
    const o148 = {
        __proto__: a133,
        ...a133,
        [a133](a138, a139, a140) {
            function f142() {
                return f142;
            }
            for (let [v144,...v145] of f38) {
            }
            return "function";
        },
    };
    o148.arguments = o148;
    return o148;
}
f130.e = v124;
f130.e = f130;
f130(-65536, 36924, f129);
