function f0() {
}
class C1 extends f0 {
    c = f0;
    static 4;
    #b;
    static #toString() {
        3409 - 3409;
        const t7 = "Vre";
        t7[2] = "Vre";
        const v6 = ("Vre")?.toLocaleUpperCase;
        v6.g = v6;
        try { new v6(); } catch (e) {}
        const v8 = new f0();
        new Uint8Array(1175);
        const v12 = [6,268435440,13,1073741825];
        const o13 = {
            "c": v12,
        };
        const v14 = super[v8];
        const v15 = super[this];
        try {
            v14.#toString(this, v15);
        } catch(e20) {
        }
        return v15;
    }
    constructor(a22, a23, a24) {
    }
    /*
    constructor(a26, a27) {
        this.propertyIsEnumerable(f0);
    }
    */
}
const v29 = new C1();
new C1();
new C1();
new Uint8Array(4001);
v29.constructor;
new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
new BigInt64Array(4046);
new Uint32Array(3136);
class C44 {
}
new C44();
try {
    ("-6").indexOf("deleteProperty", 5);
} catch(e50) {
}
new Uint8ClampedArray(596);
function f56() {
}
const v57 = [601759695];
const v58 = [1073741824,1073741823,1376142744,1073741825];
function f60(a61, a62, a63, a64) {
    function f66() {
        return 522675525n;
    }
    f56();
    const v69 = new Int8Array();
    v69.buffer.slice(2147483648);
    %OptimizeFunctionOnNextCall(f66);
    let v74;
    try { v74 = v58["find"](..."find", a64, ...v57, ...v58, ...522675525n); } catch (e) {}
    v74 <= a63;
    return arguments;
}
f60(4046, 4046, f56, 522675525n);
function F77(a79, a80) {
    if (!new.target) { throw 'must be called with new'; }
    const v81 = ("async").constructor;
    v81.raw(v81);
}
new F77();
