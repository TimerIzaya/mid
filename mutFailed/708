class C3 {
    #b;
    constructor(a5, a6) {
        super.e = this;
        const t4 = [Float32Array];
        t4[Symbol.isConcatSpreadable] = Float32Array;
        Object.defineProperty("-1895025714", "-1895025714", { configurable: true, enumerable: true, value: -1073741824 });
        class C12 {
            static #e = "d";
            static 4;
            8;
            static h = "d";
            584 = "d";
            #a;
        }
        new C12();
        const o14 = {
        };
        try {
            o14.d = this;
        } catch(e15) {
        }
        try {
            const o16 = {
            };
            o16.d = this;
            o16.b = this;
        } catch(e17) {
        }
        try {
            const o18 = {
            };
            o18.d = this;
            o18.b = this;
            typeof Uint8Array;
            for (const v22 in undefined) {
                continue;
                function f23() {
                    return v22;
                }
            }
            o18.g = a6;
        } catch(e24) {
        }
        try {
            const o25 = {
            };
            o25.d = this;
            o25.b = this;
            o25.g = "-1895025714";
        } catch(e26) {
        }
    }
}
const v27 = new C3("object", "-1895025714");
const v28 = new C3(v27, C3);
const v29 = new C3(v28, v28);
const v30 = [v28,v29,"object",v29];
const v31 = [v28,v29,"object",v30,v30];
const v32 = [v27,v31];
function f33() {
    return v29;
}
function f34(a35, a36, a37, a38) {
    const o60 = {
        "c": a37,
        ...a36,
        __proto__: a37,
        ..."object",
        "e": v27,
        "a": v29,
        [a37](a40, a41) {
            super.g ^= -1073741824;
            function F42(a44, a45, a46) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.h = a44;
                } catch(e47) {
                }
                try {
                    this.c = a36;
                } catch(e48) {
                }
            }
            new F42(a41, a41, v28);
            new F42(a36, F42, a37);
            new F42(a36, v32, v32);
            function F54(a56, a57) {
                if (!new.target) { throw 'must be called with new'; }
            }
            const v58 = new F54(-1073741824, -1073741824);
            try {
            const t0 = true;
            t0(F54, -1073741824, v58, -128);
            } catch (e) {}
            return C3;
        },
    };
    return o60;
}
f34(v32, v30, v29, v31);
f34("-1895025714", v32, v30, v27);
f34(v32, v30, v30, v31);
const v64 = [1630629478,9,2034969337];
for (let v65 = 0; v65 < 25; v65++) {
    v64.__proto__;
}
