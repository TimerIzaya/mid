class C3 {
    static e = -236935.90243192262;
    constructor(a5, a6) {
        let v7;
        try { v7 = this.hasOwnProperty(-236935.90243192262); } catch (e) {}
        const v8 = a6?.constructor;
        let v9;
        try { v9 = new v8("with"); } catch (e) {}
        try { ("minor").trim(); } catch (e) {}
        const o18 = {
            "g": v9,
            "f": "with",
            ..."with",
            __proto__: v9,
            5: v7,
            "execution": "sync",
            "type": "minor",
            valueOf(a15, a16) {
            },
            get f() {
                return this;
            },
        };
        gc(o18);
    }
    h = "with";
    b;
    #g;
    toString(a21, a22, a23, a24) {
        try { this["throw"](); } catch (e) {}
        const v30 = new Uint8ClampedArray(512);
        new Uint8ClampedArray(798, ...v30, eval());
    }
}
/2a\sc/uds[0];
function f36(a37, a38, a39, a40) {
}
function f41() {
    delete arguments.callee;
    return arguments;
}
f41();
new C3("object", C3);
const v46 = new C3(-236935.90243192262, "object");
new C3(v46, C3);
[268435439,4,-9223372036854775808,-1];
const v49 = [16,1121658517,-548393345,1717993171,-1904393590,-43006,268435456,-9007199254740992];
v49[2] = v49;
[1146514266,-4096,0,-631225628,4294967295,268435439,-2];
let v51 = 9;
const v52 = v51--;
new Int32Array(v51);
new Uint32Array(9);
Uint16Array.d = Uint16Array;
const v60 = new Uint16Array(8);
try { v60.join(v60); } catch (e) {}
Object.defineProperty("object", v52, { get: f41 });
Math.asinh(v49);
!-765172197;
Math.tanh(-765172197);
const v68 = 9007199254740991n * 9007199254740991n;
v68 + v68;
