[-2147483649,65535,-784212872,-2,129,-14,4294967296];
[-9223372036854775808,-9223372036854775807,-9223372036854775808,78420492,-9007199254740990,-486439000,-128,2,931590994,512];
const v5 = [-6,-45743,-58360386,-1,-3004,-975592578,5,1,7,-376032574];
new Uint32Array(257);
try { v5["throw"](); } catch (e) {}
this[256] = BigUint64Array;
const v16 = [];
function* f17(a18, a19) {
    yield* v16;
    return a18;
}
new Uint32Array(7);
const o23 = {
    "maxByteLength": 10000,
};
new ArrayBuffer(3471, o23);
new Int8Array(9);
function f29() {
}
%OptimizeFunctionOnNextCall(f29);
function f30() {
}
const v32 = ["4294967296"];
new Uint16Array(v32);
-25283n >> (-25283n && -25283n);
v32.trimLeft();
function F39(a41, a42, a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
}
const v45 = new F39();
const v46 = `
    v46 >= v45 ? v46 : v45;
`;
