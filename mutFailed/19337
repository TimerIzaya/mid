new Uint16Array(4);
const v5 = new Float32Array(402);
new Int16Array(2778);
class C9 extends Int16Array {
    8;
    7 = Float32Array;
    a = v5;
    [2778];
    p(a11, a12, a13, a14) {
        super.subarray(402);
        return ("g").normalize("NFKD");
    }
    static #f = 2778;
}
new C9();
new C9();
new C9();
new Float64Array(402);
const v26 = ("D")[0];
typeof 9007199254740990n >= "object";
try { ("imul").padEnd(1073741824); } catch (e) {}
gc(128n);
[256,-226375137,-4096,-9007199254740991,-1,-2,-6];
[2147483647,-642530021,1786934080,65535,65535,-1024,14,1445415583,1958088553,0];
class C46 {
    m(a48, a49) {
        super[a49];
        a49?.[11];
        return 5.0;
    }
    constructor(a53) {
        class C54 {
            ["toString"] = v26;
            constructor(a56, a57, a58) {
                function f59(a60, a61) {
                    return a60;
                }
                this[Symbol.toPrimitive] = f59;
                a57[4] = this;
                for (let v64 = 0; v64 < 25; v64++) {
                }
            }
            static [11] = this;
            static d = 11;
            static [this] = this;
        }
        new C54();
        new C54();
        new C54();
    }
}
[2058213111,536870889,-13,-1244150048,1761453201,16,-2147483649,10000,-5,9];
new WeakMap();
function F72(a74, a75, a76) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor;
    const v78 = [0.00952483356421907,-3.0,2.220446049250313e-16];
    function f79() {
        return v78;
    }
}
function f80() {
    class C81 {
    }
    for (let v82 = 0; v82 < 5; v82++) {
    }
}
class C83 {
    constructor(a85, a86) {
        for (const v87 in this) {
        }
    }
}
f80();
