function f0() {
}
const v1 = [0.0,917951.0073290537,0.07274470522231724,Infinity,0.5914391861815239,1.5732521724887612e+308,-1.4400979978660108e+307,-9.524771575988321,1000000000.0,Infinity];
[5.175162380398203e+305,-7.00517330225475,-0.0,-5.0,-714211.7623311304,-4.0];
[-1000000000.0,-3.0,642609.22225468,-1e-15,-2.2250738585072014e-308,NaN,2.220446049250313e-16,-4.891209495300708];
function f5(a6, a7) {
    a7 >> a7;
    const v9 = 14 >>> a7;
    v9 / v9;
    return 14;
}
function f11() {
    function f12(a13) {
        return a13;
    }
    [f12];
    try {
    } catch(e15) {
    }
    return v1;
}
new BigUint64Array(2, v1, 14);
const v20 = [-1024,536870889,65536,65536];
function f21(a22, a23) {
    return a22;
}
const v26 = [BigUint64Array,v20];
const o27 = {
    "arguments": v26,
    "type": "function",
};
new v20(f21, o27);
const t32 = 4096;
new t32(4096);
new Uint8ClampedArray(4096);
const v37 = new Date(Date);
class C38 {
    static #e;
    constructor(a40, a41) {
        try {
            this.#e = Date;
        } catch(e42) {
        }
    }
}
new C38(v37, v37);
function f44() {
    Math.cos(Math);
    class C46 {
        constructor(a48) {
        }
    }
    new Int8Array(C46);
    return Math;
}
%PrepareFunctionForOptimization(Int16Array);
const v51 = f44();
const v53 = new Uint32Array();
v51.g = v53;
function F54() {
    if (!new.target) { throw 'must be called with new'; }
    const v56 = this.constructor;
    let v58 = -16n;
    function f59() {
        v58 *= -1911645276n;
        return F54;
    }
    f59();
    new v56(f59, f59());
}
%OptimizeFunctionOnNextCall(f44);
const t71 = 14;
t71();
