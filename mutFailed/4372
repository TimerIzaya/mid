function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = F0;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
class C8 extends F0 {
    valueOf(a10, a11) {
        const v13 = Symbol.toPrimitive;
        const v14 = v13[v13];
        try {
            v4.c = v14;
        } catch(e15) {
        }
        return v5;
    }
    static #c = v6;
    static 1073741823 = F0;
}
class C18 {
}
const v19 = new v4();
v19.f = v19;
const v20 = new C18();
const v21 = new C18();
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    a25--;
    const t31 = a24?.constructor.MAX_SAFE_INTEGER;
    new t31();
    const v30 = this.constructor;
    try { v30(a24, v21); } catch (e) {}
}
new F22(204, 2415);
new F22(v21, v20);
new C8();
new C8();
new C8();
function F40() {
    if (!new.target) { throw 'must be called with new'; }
    this.c = 1163987790;
}
const v43 = new F40();
const o44 = {
    __proto__: v43,
    "c": v43,
};
F22.c = v43;
