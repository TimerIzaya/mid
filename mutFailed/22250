function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.b = F0;
    try {
        this.b = 9007199254740990;
    } catch(e3) {
    }
    try {
        this.d = 9007199254740990;
    } catch(e4) {
    }
    try {
        this.g = 9007199254740990;
    } catch(e5) {
    }
}
const v6 = new F0();
new F0();
new F0();
const v12 = [364.32357045580466,194.6113468070912,-1.1314659736391705e+307,-1000000000000.0,1.7976931348623157e+308];
const v13 = [171.26245503673772,0.4262502255363465,0.9939929321561143,3.266992822327907,4.470351864120447,0.4405136268169203,0.0,-1000000.0,-1000000000000.0];
const v14 = [-2.0,-655315.1395584289,-312.3614529268159,1.0,-918.5433419974413,1.7976931348623157e+308,NaN];
class C15 {
    c = v12;
    set g(a17) {
        [0.6330522471692576,-4.0,-Infinity,0.7131525072352082,1.0,2.220446049250313e-16,2.220446049250313e-16,-5.0];
        [-4.0,-611539.3917613227,3.0,9.169458022766585e+307,-2.0,0.28046271108442866,0.9100203885485475,2.2250738585072014e-308,NaN,-1000000000.0];
        [-3.0,0.8114454849202395];
    }
    constructor(a22, a23, a24, a25) {
        function f26() {
            function f27(a28, a29) {
                function F30() {
                    if (!new.target) { throw 'must be called with new'; }
                }
                const v33 = new F30();
                const v34 = new F30();
                const v35 = new F30();
                function f36() {
                    return v35;
                }
                function f39(a40, a41) {
                    const o43 = {
                        [F30]: a40,
                        "h": f36,
                        512: v34,
                        166: "bigint",
                        get d() {
                            Object.defineProperty(this, v33, { writable: true, set: f36 });
                            return this;
                        },
                        "d": a41,
                        "g": F30,
                    };
                    return o43;
                }
                f39(v34, "8Yr");
                return a22;
            }
            return f27;
        }
        Object.defineProperty(this, Symbol.toPrimitive, { writable: true, get: f26 });
        this.__proto__;
        try { v6.setMonth(a22, a25); } catch (e) {}
        super[super[this]] = v13;
        new BigInt64Array(8);
        new BigUint64Array(512);
        new Int32Array(1000);
    }
}
new C15(v13, v13, v12, v13);
new C15(v14, 350n, v14, v14);
new C15(v14, v6, v13, v12);
for (let v66 = 0; v66 < 25; v66++) {
    const v67 = [601759695];
    const v68 = [1073741824,1073741823,1376142744,1073741825];
    function f69(a70, a71, a72, a73) {
        const v78 = BigUint64Array * 536870887;
        const v80 = ~(v78 ** v78);
        const v81 = new Int8Array(v67);
        try { v81.includes(v80); } catch (e) {}
        let v84;
        try { v84 = v68["find"](..."find", a73, ...v67, ...v68); } catch (e) {}
        Symbol(a72).description;
        const o88 = {
        };
        o88.a = v68;
        o88.a = o88;
        v84 <= a72;
        return arguments;
    }
    for (let v90 = 0; v90 < 5; v90++) {
        f69(v90, v90, v90, v66);
    }
}
const v92 = new Set();
function f93(a94) {
    const o99 = {
        o(a96, a97) {
            super[a94];
        },
    };
}
f93(v92);
const v101 = f93(f93);
f93(Set);
new Uint32Array(420);
new Int32Array(2057);
const v111 = new Int8Array(260);
const o113 = {
};
o113.h = 260;
o113.h = o113;
const v115 = !o113;
const v116 = 1842642860 % v115;
v116 % v116;
const v118 = new WeakMap();
let v119;
try { v119 = v118.delete(v115); } catch (e) {}
class C122 {
    static {
        this[6] = this;
        try {
        const t0 = "boolean";
        t0(this);
        } catch (e) {}
    }
}
try { C122(); } catch (e) {}
const v127 = ("isInteger")?.replaceAll;
const v134 = [-2147483647,64098,-9383,1024,129,-5];
v134.toString = f93;
[1000,-16,-38597,12,-3399,32508];
const v136 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v138 = new Uint32Array();
const v140 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v147 = [601759695];
const v148 = [1073741824,1073741823,1376142744,1073741825];
function f150(a151, a152, a153, a154) {
    function f155() {
        v136.length;
        try {
        } catch(e157) {
        }
        const o158 = {
        };
        const o178 = {
            valueOf(a160, a161) {
            },
            1073741824: v138,
            [-4294967297n](a163, a164, a165, a166) {
                class C168 extends Date {
                    static get c() {
                    }
                }
                eval();
                class C172 {
                    constructor(a174, a175, a176, a177) {
                    }
                }
            },
            "arguments": v140,
        };
    }
    const v180 = new Int8Array();
    v180.buffer;
    const v184 = new Int32Array();
    v184[3];
    for (let v186 = 0; v186 < 10; v186++) {
    }
    let v188;
    try { v188 = v148["find"]("find", a154, v147); } catch (e) {}
    v188 <= a153;
}
for (let v190 = 0; v190 < 10; v190++) {
    f150();
}
%OptimizeFunctionOnNextCall(f150);
f150();
[-50328,-14,3,128,-11,64,-65535];
class C194 {
    [v134] = -1000000.0;
    constructor(a196, a197, a198, a199) {
        function f200() {
            return f93;
        }
        function f201(a202) {
            const v205 = new Uint8ClampedArray(4096);
            [v205];
        }
        Object.defineProperty(this, Symbol.toPrimitive, { writable: true, get: f200, set: f201 });
        super[this];
    }
    g;
    c;
    #toString(a211, a212, a213) {
    }
    1 = 257n;
}
new C194(1073741825n, 1.0, 7.589647165982214);
const v215 = new C194(411585671n, -1000000.0, -1000000.0, 1.0);
new C194(v215, -1000000.0, 1.0);
for (let v217 = 0; v217 < 14; v217++) {
    C122[6] = v217;
}
try { v119.n(C122); } catch (e) {}
~v111;
/(?:a*)+bU\u0034xyz{1,32}/udi;
/vfoo|(bar|baz)|quux/gvds;
try { v127(); } catch (e) {}
const o229 = {
    toString(a224, a225, a226, a227) {
        v101 * a227;
    },
};
