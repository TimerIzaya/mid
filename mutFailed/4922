new Uint8ClampedArray(243);
new BigUint64Array(5);
class C10 {
    n(a12) {
        try { new a12(a12, a12, a12, 268435440, 268435440); } catch (e) {}
        const o15 = {
            "b": 256,
        };
        new gc();
        this[2] = -44363;
        const o20 = {
            "maxByteLength": 1024,
        };
        const v22 = new ArrayBuffer(1024, o20);
        new Int8Array(v22);
        return 268435440;
    }
}
const v25 = new C10();
const v26 = new C10();
const v27 = new C10();
const v29 = new Date();
function f30() {
    return v29;
}
try {
    v25.g = v27;
} catch(e31) {
}
function F32(a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a34;
    } catch(e37) {
    }
    try {
        this.e = a34;
    } catch(e38) {
    }
    try {
        this.a = a34;
    } catch(e39) {
    }
}
const v40 = new F32(C10, v29, 268435440);
const v41 = new F32(v40, "L", v27);
new F32(f30, v41, -44363);
function f43(a44, a45) {
    const o47 = {
        ...a45,
        get h() {
            return this;
        },
    };
    return a45;
}
class C49 {
    static get d() {
    }
    c;
    static #e = -1000000.0;
    4294967295;
    #a;
}
new C49();
new C49();
const o54 = {
};
new Float32Array(Float32Array, Float32Array);
[];
[];
class C60 {
    static #p(a62, a63) {
    }
    #h;
}
const v64 = new C60();
Object.defineProperty(v64, "toString", { writable: true, enumerable: true, value: f30 });
const v65 = new C60();
const v66 = new C60();
v66.toJSON = C60;
function f67(a68, a69, a70, a71) {
    function f72() {
        return v26;
    }
    function f73(a74) {
        C49.d;
    }
    Object.defineProperty(a69, "toJSON", { writable: true, get: f72, set: f73 });
    const o76 = {
        "c": -922911.6474995338,
        242: -922911.6474995338,
        "g": v65,
        [a71]: a69,
        [C60]: a69,
        "a": -747634.1081113975,
        "h": a68,
        "f": a71,
    };
    o76.toString = f30;
    return o76;
}
const v77 = f67(v64, v66, C60);
v77.toJSON = C49;
const v78 = f67(v77, v66, v64, v64);
const v79 = f67(v65, v66, v78, v78);
v79.toJSON = f67;
class C80 {
    constructor(a82, a83) {
        function f84(a85, a86) {
            v64 >>> 9007199254740991n;
            C60.g;
        }
        const v92 = [v64,v79];
        const o93 = {
            "arguments": v92,
            "type": "function",
        };
        new Worker(f84, o93);
    }
}
new C80(C60, C80);
new C49();
/ywha??/gvdim;
Object.defineProperty(Float64Array, Symbol.toPrimitive, { writable: true, configurable: true, value: f30 });
const v101 = new Float64Array(1);
class C102 {
    5 = 1;
    [5];
    #g;
    [Float64Array];
    toString(a104, a105, a106, a107) {
        v101[this] = a104;
        for (let v108 = 0; v108 < 32; v108++) {
            v101["p" + v108] = v108;
        }
        return this;
    }
    [BigUint64Array];
    static 268435456;
}
new C102();
new C102();
new C102();
new WeakMap();
class C117 {
    static {
        try {
            const t148 = null;
            t148.valueOf = this;
        } catch(e119) {
            e119.stack;
        }
    }
}
