197.36972156386628 < 197.36972156386628;
-425698.1913063261 + -425698.1913063261;
126 - 126;
new Int32Array(126);
181 ^ 181;
const t4 = "10";
const v18 = new t4(181);
let v21;
try { v21 = new Uint8Array("function", 197.36972156386628, v18); } catch (e) {}
const v22 = new Uint8Array(417);
try { ("asinh").link("-19578"); } catch (e) {}
const t11 = "object";
t11.e = "object";
Uint8ClampedArray.length;
function f41() {
    return "object";
}
f41.d = f41;
class C42 {
    static #m(a44, a45, a46) {
    }
    constructor(a48, a49, a50, a51) {
        this.#m();
    }
}
function F53(a55, a56, a57) {
    if (!new.target) { throw 'must be called with new'; }
    a55 <= a55;
    a57 >>> a57;
    const v60 = this.constructor;
    try { a55.call(-45095n); } catch (e) {}
    try { new v60("asinh", 9007199254740991n); } catch (e) {}
}
const v63 = new F53(64n, -16458616, -2147483649);
try { v63.propertyIsEnumerable(v63); } catch (e) {}
new v21();
const v66 = (7)?.constructor;
try { new v66(v22, 9007199254740991n, v22); } catch (e) {}
