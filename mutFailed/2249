class C3 {
    #o(a5, a6) {
        e = this !== -2.2250738585072014e-308;
        super[this];
        function f9() {
            return -2.2250738585072014e-308;
        }
        return 9007199254740992;
    }
    static ["allSettled"] = 9007199254740992;
    16;
}
C3.length = C3;
const v10 = new C3();
v10[16] = v10;
v10[16] = v10;
const v11 = new C3();
const v12 = v11?.constructor;
let v13;
try { v13 = new v12(); } catch (e) {}
let v14;
try { v14 = new v12(); } catch (e) {}
const v15 = new C3();
v15[16] = v15;
const v16 = v15[16];
function F20(a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    let v24;
    try { v24 = this.propertyIsEnumerable(v15); } catch (e) {}
    v24.prototype = a23;
    try {
        const v25 = ++a22;
        function f26() {
            return v25;
        }
        [f26,v16,[C3,f26,v16,v25,v11],9007199254740992,[v14,-2.2250738585072014e-308]];
        this.d = a23;
    } catch(e30) {
    }
}
try { F20.toString(); } catch (e) {}
new F20(C3, C3);
const v33 = v11?.d;
v33.prototype = v33;
let v34;
try { v34 = new v10(); } catch (e) {}
v34[16];
const v36 = new F20(C3, C3);
new F20(v10, v36);
class C38 {
}
new v15();
const v40 = new C38();
let v41;
try { v41 = v40.propertyIsEnumerable(v36); } catch (e) {}
v41 && v41;
class C43 {
    static #a = C43;
    e = v13;
    h = C38;
    #e = C3;
    static [v34];
    #b;
    static g = v40;
    static {
        v41.f = this;
        delete this.g;
    }
}
try { C43(); } catch (e) {}
const v47 = C43.length;
v47 >> v47;
!(delete v36[512]);
