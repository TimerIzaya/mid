const v0 = [];
function f1(a2) {
    const v6 = new Date(-2, [23795,8,259058917,-256,1,-36806,4096,-9,-1,-18943]);
    return v6.getHours();
}
const v9 = Symbol.toPrimitive;
v0[v9] = f1;
function f10() {
    return v0;
}
Object.defineProperty(Date, "atan2", { configurable: true, value: f1 });
const v12 = new Date();
function f13() {
    function f14(a15, a16) {
        for (let v17 = 0; v17 < 32; v17++) {
            Date["p" + v17] = v17;
        }
        return a15;
    }
    return f14;
}
Object.defineProperty(v12, "valueOf", { configurable: true, get: f13 });
let v20;
try { v20 = v12.setFullYear(Date, v0, v12); } catch (e) {}
8 != 8;
const v27 = new Uint8Array(10);
v27[8] = v27;
function f30(a31) {
    return f1;
}
Uint16Array[Symbol.iterator] = f30;
Uint16Array.e = Uint16Array;
new Uint16Array(512);
const v39 = 256 >>> 256;
256 >>> 256;
Object.defineProperty(Int32Array, "d", { writable: true, value: Date });
Int32Array.d = Int32Array;
const v42 = new Int32Array(256);
v42.length;
function f45(a46, a47) {
    const o50 = {
        set b(a49) {
        },
    };
    return o50;
}
const v51 = f45();
for (const v52 in v51) {
    const v53 = v52?.toLocaleUpperCase;
    try { new v53(); } catch (e) {}
    Reflect.undefined = f30;
    const v57 = ([Reflect,Reflect])[1];
    v57.set(v57);
    Object.defineProperty(v51, v52, { set: f45 });
}
const t55 = "-176972982";
t55[2] = "-176972982";
class C61 {
    static {
        let v63;
        try { v63 = this.propertyIsEnumerable(this); } catch (e) {}
        v63 || v63;
        this || "-176972982";
        try { ("symbol").valueOf(); } catch (e) {}
        try { ("cause").trimStart(); } catch (e) {}
    }
    #b = "-176972982";
    constructor(a72) {
        let v73 = "atan2";
        try { a72[v73](2.220446049250313e-16, 30492, 30492); } catch (e) {}
        super.f = 2.220446049250313e-16;
        let v76;
        try { v76 = Math.expm1(v73); } catch (e) {}
        v76 >>> v76;
        const v79 = 4294967295 >> 4294967295;
        v79 - v79;
        let v82 = v73 ** "-176972982";
        v82 >> v82;
        const v84 = --v82;
        const v85 = v84 << v84;
        v85 + v85;
        const v87 = v82 | v84;
        v87 >>> v87;
        Number.isNaN(Math.sin(v73));
        v84 / 4294967295;
        v73++;
        const v94 = Math.cbrt(v87);
        v94 / v94;
        v94 - v94;
    }
}
C61.toString = f45;
let v97;
try { v97 = C61.bind(Uint16Array); } catch (e) {}
try { v97(v42); } catch (e) {}
function f100(a101, a102) {
    v0[v20] = Date;
    gc();
    return a102;
}
Object.defineProperty(Uint16Array, "toString", { writable: true, enumerable: true, value: f100 });
const v105 = new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
v105[2] = v105;
let v106;
try { v106 = v105.slice(v27, Uint16Array); } catch (e) {}
v106.constructor = f45;
const v107 = v106?.constructor;
function f108() {
    return v39;
}
Object.defineProperty(v107, 2, { configurable: true, get: f108 });
let v109;
try { v109 = new v107(Uint16Array, Uint16Array, v12); } catch (e) {}
try { gc.bind(30492); } catch (e) {}
C61.c = gc();
const v113 = new C61(30492);
v113.d = v113;
const v114 = new C61(v113);
function f115(a116) {
    new Uint8Array(v9, 16);
    function f118() {
        new ArrayBuffer(ArrayBuffer, ArrayBuffer);
        return f118;
    }
    return f118();
}
v114.constructor = f115;
const v122 = v114?.constructor;
function f123() {
    return f115;
}
Object.defineProperty(v122, "d", { writable: true, get: f123 });
try { new v122(Date); } catch (e) {}
const v125 = new C61(C61);
function f126() {
    function f127(a128) {
        const v132 = new BigUint64Array(10);
        for (const v134 in v132) {
            new Float64Array(2147483647);
            /TI\u{12345}\u{23456}ab|c/uim;
            /k/vdis;
        }
        return v109;
    }
    return f127;
}
Object.defineProperty(v125, "toString", { get: f126 });
for (let [v139,...v140] of "atan2") {
    try { v140.includes(f10); } catch (e) {}
    const v142 = v140?.__defineSetter__;
    try { new v142(v139, 30492); } catch (e) {}
    try { new v142(30492, 30492); } catch (e) {}
}
Int8Array.name;
Int8Array.length;
const v148 = new Int8Array();
function f149(a150) {
    const o151 = {
        "c": 2.220446049250313e-16,
    };
    return v12;
}
v148.constructor = f149;
try { v148.entries(); } catch (e) {}
try { v148.slice(8, 10); } catch (e) {}
function f154(a155, a156) {
    a155.d;
    let v158;
    try { v158 = a155.toString(); } catch (e) {}
    try { v158.strike(); } catch (e) {}
    new Float64Array();
    function F162(a164) {
        if (!new.target) { throw 'must be called with new'; }
        this.h = a164;
    }
    F162[Symbol.toPrimitive] = Symbol;
    F162.arguments = F162;
    const o175 = {
        4294967296: 30492,
        "d": 30492,
        [30492]: F162,
        "type": "atan2",
        toString() {
            super[this];
        },
        "d": v114,
        [v125]: a155,
        536870888: v125,
        "g": a155,
        "h": 2.220446049250313e-16,
        ..."-176972982",
        m(a170, a171) {
            const t192 = 4294967297;
            t192[5] = a171;
            return a156;
        },
    };
    o175[4294967296];
    const v177 = o175.type;
    try { v177.split(v105, F162); } catch (e) {}
    return o175;
}
const v179 = f154(v113, v125);
v179.d = v179;
const v180 = f154(C61, v179);
Uint16Array.g = Uint16Array;
class C182 extends Uint16Array {
}
C182.g = v179;
try { new C182(); } catch (e) {}
C182.g = C182;
class C184 {
}
C184.prototype = C184;
try { new C184(); } catch (e) {}
const v186 = f154(v113, v179);
try { v186.toString(); } catch (e) {}
[188,true];
let v193 = Math.tanh("1");
v193--;
[v186,v125,v186];
const v196 = [v113,v180,C61,f154];
try { v196.includes(v27); } catch (e) {}
const v198 = [v196,v196,"-176972982",v114,f154];
let v201;
try { v201 = new Int8Array(v180, gc, v198); } catch (e) {}
try { v201.entries(); } catch (e) {}
2083 | 2083;
1949 !== 1949;
try { new Int32Array(v12, Int32Array, v97); } catch (e) {}
/[^q\P{scx=Greek}]/udsy;
