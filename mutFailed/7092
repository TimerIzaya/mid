class C3 {
    constructor(a5, a6) {
        this.undefined = a5;
        try {
            this.fuck(a5, /xyz{93}[(?<!)]/uds, undefined);
        } catch(e10) {
        }
    }
    static #o(a12, a13) {
        const o17 = {
            "execution": "async",
            "type": "major",
        };
        gc(o17);
        return a13;
    }
}
const v19 = new C3(-9223372036854775807, -9223372036854775807);
function f20(a21) {
    class C22 {
    }
    C22();
    return -9223372036854775807;
}
Object.defineProperty(v19, Symbol.toPrimitive, { writable: true, configurable: true, value: f20 });
const v26 = new C3(C3, 2.0);
function f27() {
    return Symbol;
}
Object.defineProperty(v26, Symbol.toPrimitive, { writable: true, configurable: true, enumerable: true, get: f27 });
const v30 = new C3(C3, -9223372036854775807);
function f31() {
    return f20;
}
function f32(a33) {
    Symbol("bZ");
}
Object.defineProperty(v30, 1714, { writable: true, configurable: true, enumerable: true, get: f31, set: f32 });
class C36 {
    constructor(a38, a39, a40, a41) {
        function f42(a43) {
            try {
                Symbol.hasInstance = a39;
            } catch(e44) {
            }
            return v26;
        }
        this.toString = f42;
        a39.undefined = a38;
        v30[v26] = C3;
        this & C3[a40];
        v30[1714] = C3;
        a39[C3.a];
    }
    static #a = 2.0;
    [v19] = v30;
    static #e;
    #d = 55725;
    [-1] = v30;
}
const v50 = new C36(v19, C3, -9223372036854775807, v30);
const v51 = new C36(v50, v30, v19, v50);
new C36(C36, v51, -9223372036854775807, v19);
[-4010,8,-65535,-65536,-4,12];
[-12,2,-1973182328,42588,1,-25565,-35036];
[-62117,16,65537];
class C57 {
}
const v58 = new C57();
const v59 = new C57();
function f60(a61, a62) {
    const o71 = {
        [-943.3768400471749]: v59,
        [a62](a64, a65, a66) {
        },
        p(a68, a69) {
            this.toString(a69, this, v58, a62);
            return a61;
        },
    };
}
%PrepareFunctionForOptimization(f60);
f60();
f60();
%OptimizeFunctionOnNextCall(f60);
f60();
