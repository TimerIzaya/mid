let v3 = 0;
while ((() => {
        ~10;
        const v6 = v3 < 10;
        !v6;
        return v6;
    })()) {
    const t7 = "object";
    t7[3] = "object";
    v3++;
}
class C9 {
    constructor(a11) {
        a11--;
        new Uint8Array(11);
        new Uint8ClampedArray(161);
        let v19 = 7;
        v19--;
        BigUint64Array.prototype = BigUint64Array;
        new BigUint64Array(v19);
    }
    static ["object"] = -573665.1815412513;
}
C9.length = C9;
const v23 = new C9(-573665.1815412513);
const v24 = new C9(v23);
const v25 = new C9(v24);
try { v25.propertyIsEnumerable(v25); } catch (e) {}
class C27 {
    8;
    static g;
    static #g;
    #h;
    static b;
    static set a(a29) {
        const v30 = delete this?.b;
        try {
            v30.f = "object";
        } catch(e31) {
        }
    }
}
C27.name;
new C27();
const v34 = new C27();
v34[8] = v34;
const v35 = new C27();
v35[8] = v35;
[553080.4591441012,-2.0,-1000.0];
[-5.0,0.0,618735.2731378935];
const v38 = [-1000.0,-11.899867028305266,-1000000000.0,1.417622666719177e+307,8.385286856440637e+307,0.1191054056006795,0.35062591763706485,-6.345613668287804,774577.3857161528];
try { v38.map("object"); } catch (e) {}
for (let v40 = 0; v40 < 5; v40++) {
    function f41() {
        for (let [i45, i46] = (() => {
                10 - 10;
                return [0, 10];
            })();
            i45 < i46;
            i45++, i46--) {
            i46 + i46;
        }
        return f41;
    }
    const v56 = f41()?.constructor;
    try { new v56(v24); } catch (e) {}
    %OptimizeFunctionOnNextCall(f41);
}
