class C3 {
    e = "TBN";
    toString(a5) {
        const v6 = "TBN" < "TBN";
        if (v6) {
            Math.ceil(-2110095607);
            -117.41629710810162 & 9007199254740992;
            2 * v6;
        } else {
            try {
                super.assign(-65535, this, "TBN", "TBN");
            } catch(e15) {
            }
        }
        return this;
    }
}
const v16 = new C3();
const v17 = new C3();
const v18 = new C3();
const t20 = (2136873598).constructor;
t20().toExponential();
function f23(a24, a25, a26) {
    const o29 = {
        [a26]: a26,
        ["TBN"]: a26,
        get h() {
            a25 = a24;
            const o28 = {
                __proto__: a25,
                [this]: a24,
                [2]: a25,
                [v18]: this,
            };
            return o28;
        },
        "b": a26,
        "e": "TBN",
        __proto__: v16,
    };
    return o29;
}
const v30 = f23(v18, v17, v18);
f23(v17, v17, v18);
f23(v30, v30, v18);
new Uint8ClampedArray(199);
new Uint8ClampedArray(1000);
new Float64Array(16);
const v45 = [-6.672391061426152e+307];
try { DataView.call(DataView); } catch (e) {}
function f48() {
    -(~v45["pop"]());
    return DataView;
}
%PrepareFunctionForOptimization(f48);
f48();
%OptimizeFunctionOnNextCall(f48);
f48();
