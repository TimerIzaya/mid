let v0 = [];
class C1 {
    [v0];
    m() {
        try {
            super.tanh(this, v0, this, this);
        } catch(e4) {
        }
        return this;
    }
    static #valueOf() {
        const v6 = delete this[1073741824];
        let v7;
        try { v7 = v0(v0, v6); } catch (e) {}
        v0 = v7;
        new Uint8Array(255);
        new BigInt64Array(128);
        const v16 = new Int32Array(1000);
        return v16;
    }
}
new C1();
const v18 = new C1();
const v19 = new C1();
v0 - -1.6885498751507235e+308;
140642.10995228658 + 140642.10995228658;
-9.541855845168355 - 140642.10995228658;
new Uint8ClampedArray(5);
4092 >>> 4092;
new BigUint64Array(5);
[-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
let v39 = 2684;
const v41 = new Uint32Array();
const v43 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
try { v43.fill(BigUint64Array); } catch (e) {}
const v45 = [601759695];
v39 = "-15";
const v46 = [1073741824,1073741823,1376142744,1073741825];
v46[1] = v46;
function f48(a49, a50, a51, a52) {
    function f53() {
        let v55 = Float64Array;
        v55 = a50;
        b = v45;
        const v56 = v55.length;
        try {
            v46.forEach(a50);
        } catch(e58) {
            e58.name;
        }
        const v60 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v62 = v39.toPrimitive;
        const o66 = {
            toString(a64, a65) {
                a64 *= v62;
            },
        };
        const o91 = {
            "c": 522675525n,
            [a52](a69, a70) {
            },
            "c": v45,
            valueOf(a72, a73) {
            },
            [v56](a75) {
            },
            [-1]: v39,
            1073741824: v41,
            "maxByteLength": -268435456,
            "b": -4294967295,
            "arguments": v60,
            [-4294967297n](a77, a78, a79, a80) {
                class C82 extends Date {
                    static get c() {
                        eval();
                    }
                }
                for (let v86 = 0; v86 < 5; v86++) {
                }
            },
            "e": 64,
            "e": 4092,
            "arguments": v43,
            set b(a88) {
            },
            256: a52,
            m(a90) {
            },
            ...v45,
        };
    }
    f53();
    eval("");
    %OptimizeFunctionOnNextCall(f53);
}
for (let v96 = 0; v96 < 10; v96++) {
    f48();
}
const v98 = /\8/y;
const v99 = /z/gvisy;
const v100 = /ab\b\d\bcd/gm;
function f101(a102, a103) {
    const o109 = {
        [v18]: v99,
        valueOf(a105, a106, a107) {
            try {
                v99.multiline = v0;
            } catch(e108) {
            }
            return a107;
        },
        "g": C1,
        ...C1,
        "e": a102,
        "c": a102,
        ...a102,
        [v19]: a103,
        "d": v98,
    };
    return o109;
}
f101(v18, v100);
f101(v19, v100);
f101(v18, v100);
function f139() {
    return ([f101,f139]).constructor.isArray();
}
%PrepareFunctionForOptimization(f139);
f139();
%OptimizeFunctionOnNextCall(f139);
f139();
class C148 {
}
class C149 extends C148 {
    constructor(a151) {
        super();
        for (let v152 = 0; v152 < 25; v152++) {
            "p" + a151;
            this[-1.6885498751507235e+308] = v152;
        }
    }
}
new Uint8ClampedArray();
