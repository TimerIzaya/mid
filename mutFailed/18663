function f0() {
}
function f1(a2) {
    const v3 = [];
    class C5 {
        p(a7, a8) {
            "-1210238113" - v3;
        }
    }
    return v3;
}
f0.toString = f1;
function f11() {
    return undefined;
}
class C12 extends f11 {
    static #f;
    constructor(a14, a15) {
        function f16(a17) {
            function F19(a21, a22) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    const v23 = Math.max();
                    v23 & v23;
                    new F19();
                } catch(e26) {
                }
            }
            return f0;
        }
        a14.toString = f16;
        super();
        [-653943372,8,1073741824,-1763410678];
        [-9007199254740992,57638,-536870912];
        [4096,128];
        a14 ** f11;
    }
    [undefined];
    #h;
    static g = f11;
    static #c;
}
C12[Symbol.toPrimitive] = f1;
const v33 = new C12(C12, C12);
const v34 = new C12(f11, v33, C12);
const v35 = new C12(f0, v34);
const v38 = new BigUint64Array(9, undefined, v33);
new Int32Array(2, v35, v35, v38);
new BigInt64Array(132);
function f45() {
    ~65537;
    const v51 = new Int32Array(48342);
    for (const v52 of v51) {
    }
}
f45();
f45();
