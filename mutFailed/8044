const v1 = new WeakMap();
function f2(a3, a4) {
    a3 | WeakMap;
    return a3 / WeakMap;
}
v1.valueOf = f2;
function f7() {
    return v1;
}
const v8 = [390.47639184468335];
try { v8.toLocaleString(); } catch (e) {}
let v10 = [0.7711319095509496,-390.6764715391881,-0.0,-3.1302620283061813e+307,-4.0,4.0];
v10[Symbol.toPrimitive] = f2;
try { v10.reduce(v1); } catch (e) {}
const v14 = [0.0,0.3706916513876234,-1000.0,-2.220446049250313e-16];
[v1];
const v16 = [v10,v10];
try { v16.at(v1); } catch (e) {}
[v16,v10,v16,v16,v1];
let v20 = "-16695";
v20 = "9007199254740990";
v10 = v14;
const v22 = [1162358952,-4294967297,-12,4];
Object.defineProperty(v22, "constructor", { writable: true, configurable: true, enumerable: true, value: f7 });
const v23 = v22?.constructor;
let v24;
try { v24 = new v23(v10); } catch (e) {}
const v25 = [-30061,-42037,-2147483649,4294967297,-17399,494249196,536870887,9,-3149];
[128,-64696,3,23481553,-10,10,9];
function f27() {
    const o39 = {
        ..."b",
        "b": -9007199254740990,
        ["b"]: "b",
        "a": -9007199254740990,
        o(a31, a32) {
            try { a32(a31, a32, "b"); } catch (e) {}
            [-504863.1885363821,-248378.80818527355,-147.11467188198264,-1.7039705769992093e+308] | -9007199254740990;
            function F36() {
                if (!new.target) { throw 'must be called with new'; }
            }
            class C38 extends F36 {
            }
            return -9007199254740990;
        },
        "h": "b",
    };
    o39[0] = o39;
    return o39;
}
const o40 = {
};
o40.h = o40;
f27();
class C43 {
    static {
        const v45 = this?.constructor;
        try { new v45(o40); } catch (e) {}
        this[Symbol.hasInstance];
    }
    #p() {
        try { this.p(undefined, this, this, this, this); } catch (e) {}
        return undefined;
    }
    static #a = undefined;
}
new C43();
f27();
1971 - 1971;
new Int16Array(1971);
new Int32Array(128);
const v62 = new Int16Array(195);
let v64 = 3375;
/a{0,1}?/udi;
/9o\1\2(a(?:\1(b\1\2))\2)\1/vdm;
/g/d;
try { new v24(); } catch (e) {}
%VerifyType(v25);
try { BigUint64Array.from(v16); } catch (e) {}
const v71 = new BigUint64Array(v64);
const v73 = ("c").toUpperCase();
v73[0] = v73;
new Uint32Array([-620100541,-64845,-268435456,-7,-268435456,1024,-536870912]);
let v78 = Math.expm1(v64, Math, v62);
v78--;
Math.tan(--v64);
const v82 = [-256,13351,5138,2,-4294967295,1000,268435440];
class C83 {
    constructor(a85, a86) {
        const v87 = this?.constructor;
        try { new v87(); } catch (e) {}
        for (const v89 in this) {
        }
        let v91 = Math.atan2(v82, -4294967297);
        v91--;
    }
}
const v93 = C83?.call;
try { new v93(v10); } catch (e) {}
class C95 extends C83 {
}
new C95();
let [v97,,v98,...v99] = v71;
function f100() {
    return f2;
}
Object.defineProperty(v99, "toString", { writable: true, configurable: true, get: f100 });
try { v99.toString(); } catch (e) {}
var c = 255;
