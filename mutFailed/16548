const v0 = [-3.0869952861831624,2.2250738585072014e-308,122.05715554676021,1.0,1.1166038221419207e+308,5.0];
const v1 = [-4.0,-4.0,-2.2250738585072014e-308,-6.243943847248752,0.956663685562281,0.0,5.490462006958355];
const v2 = [1.7976931348623157e+308,-5.0,1e-15];
const v5 = new WeakMap(WeakMap);
function F6(a8, a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a10;
    } catch(e11) {
    }
    try {
        this.h = v5;
    } catch(e12) {
    }
    try {
        this.a = a8;
    } catch(e13) {
    }
}
new F6(v1, v2, v2);
const v15 = new F6(v1, v2, v1);
new F6(v1, v0, v1);
new Uint32Array(407);
new Int16Array(0);
const v27 = [-65536,v15];
v27.push(Reflect);
new Int32Array(5, ([v27]).toString());
class C32 {
}
let v33 = new C32();
const v34 = new C32();
function F35() {
    if (!new.target) { throw 'must be called with new'; }
    const v37 = this >> this;
    v33 = this;
    v37 <= v34;
    try {
        for (let i = 0; i < 5; i++) {
        }
        new F35();
    } catch(e40) {
    }
}
new F35();
