function f0() {
}
const v1 = [f0,f0,f0,f0];
const v2 = [v1,f0];
[v2];
class C4 {
    static {
        this.length = this;
        f0();
        super.a = v2;
        for (let v7 = 0; v7 < 100; v7++) {
            f0();
        }
        Int32Array.name;
        const v12 = new Int32Array(0);
        try { v12.every(C4); } catch (e) {}
        new Uint8ClampedArray(1560);
        new Int16Array(135);
    }
}
C4.prototype;
const v21 = new C4();
const v22 = v21?.constructor;
try { new v22(); } catch (e) {}
const v24 = new C4();
const v25 = new C4();
try { v25.propertyIsEnumerable(f0); } catch (e) {}
function f27(a28, a29) {
    try { a28.propertyIsEnumerable(a28); } catch (e) {}
    const o40 = {
        [v21]: v25,
        get e() {
            this >> a29;
            const o35 = {
                "maxByteLength": 512,
            };
            const v37 = new ArrayBuffer(512, o35);
            const v39 = new Uint16Array(v37);
            return v39;
        },
    };
    o40.e = o40;
    return o40;
}
const v41 = f27?.constructor;
try { new v41(C4); } catch (e) {}
const v43 = f27(v24, v24);
const v44 = f27(v24, f0);
const v45 = f27(v43, v21);
-3.0 | -3.0;
-1.7976931348623157e+308 << -1.7976931348623157e+308;
class C51 {
    constructor(a53, a54) {
        function f55(a56) {
            function f57(a58) {
            }
            const o60 = {
            };
            new Proxy(f27, o60);
            new Int16Array(10);
            new Int8Array(785);
            new Int32Array(3563);
            const v73 = new Uint16Array(1024);
            v73[7] = v73;
            return C51;
        }
        try { f55(v45); } catch (e) {}
        const o77 = {
            "type": "function",
        };
        const o78 = {
            "apply": f0,
            "call": f55,
            "construct": f55,
            "defineProperty": f27,
            "get": f55,
        };
        new Proxy(o77, o78);
        new Worker(f55, o77);
    }
}
const v82 = new C51();
const v83 = new C51(v82, C51);
const v84 = v83?.constructor;
try { new v84(v44, C51); } catch (e) {}
const v86 = new C51();
const v87 = v86?.constructor;
try { new v87(C4, f27); } catch (e) {}
const v89 = [0.5405997589972753,v43,v83,v86];
const v90 = [v25,v89,v25];
try { v90.copyWithin(v1, v1); } catch (e) {}
const v92 = [0.5405997589972753];
v92[0] = v92;
const o93 = {
};
try {
    o93.h = v92;
} catch(e94) {
}
try {
    const o95 = {
    };
    o95.h = v92;
    o95.g = v92;
} catch(e96) {
}
try {
    const o97 = {
    };
    o97.h = v92;
    o97.g = v92;
    o97.f = v24;
} catch(e98) {
}
try {
    const o99 = {
    };
    o99.c = o99;
    o99.h = v92;
    o99.g = v92;
    o99.a = v89;
} catch(e100) {
}
