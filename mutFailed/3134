function f0() {
    const o20 = {
        ["VL"](a5) {
            const v7 = new Date();
            return v7;
        },
        "c": "46241",
        "d": "1430794000",
        "g": "VL",
        "e": "46241",
        "b": "46241",
        n(a9, a10) {
            const v13 = "VL" | "VL";
            const v14 = +"VL";
            v14 >>> a9;
            Math.sqrt(v14);
            Math.trunc(a10);
            v13 && a10;
            return Math.sinh(v14);
        },
    };
    return o20;
}
function f21() {
    return f0;
}
function f22(a23) {
    a23 || a23;
}
Object.defineProperty(f0, "toString", { writable: true, get: f21, set: f22 });
f0();
let v26 = f0();
const v27 = f0();
v27[Symbol.toPrimitive] = f0;
v27.d;
v27.c = v27;
const v31 = f0();
%PrepareFunctionForOptimization(f0);
const v32 = f0();
f0();
%OptimizeMaglevOnNextCall(f0);
const v34 = f0();
const v35 = [-708547368,6,-39735,3,-1145742726,512,268435440];
v35[5] = v35;
const v36 = [-63446,65537];
const v37 = [127,9,2,7,-12,1073741824,4294967296,512];
const v38 = async (a39, a40, a41) => {
    a41 * v36;
    const v44 = [v34,[v31,v32,v34],f0];
    [v44,v44,v44];
    await v32;
    return v44;
};
try { ("valueOf").fontcolor(v27); } catch (e) {}
let v49;
try { v49 = ("valueOf").toWellFormed(); } catch (e) {}
v49.d = v49;
"number" == "number";
const v53 = [44763,330853847,-1775808553,62147,-1163816114];
const v54 = [-13,12,-1736723138];
let v55;
try { v55 = v54.constructor(v36); } catch (e) {}
const v56 = [-9007199254740991,-2,512,368735066,6,-268435456];
class C57 {
    [f0];
    constructor(a59, a60, a61) {
        try { a60.entries(); } catch (e) {}
        const v64 = Reflect?.set;
        try { new v64(Reflect, v55, a59); } catch (e) {}
        const v66 = [a61];
        const v67 = a60.flat;
        v67.length;
        const v69 = Reflect.apply(v67, a61, v66);
        try { v69.forEach(v49); } catch (e) {}
        v69[3] = v69;
        v26 = a61;
        v56.length;
    }
    9 = v36;
    valueOf(a73, a74, a75, a76) {
        function f77(a78, a79) {
            a78.call(8, Uint16Array);
            return v37;
        }
        this.toString = f77;
        const v83 = this?.__defineGetter__;
        try { new v83(this, a73); } catch (e) {}
        super.h;
        return this;
    }
    #h = f0;
}
const v86 = new C57(v26, v56, "bigint");
new C57(v26, v36, v86);
const v88 = new C57(v26, v53, "valueOf");
const v89 = v88?.__defineSetter__;
try { new v89(v37, v86); } catch (e) {}
try { new v89(v37, v54); } catch (e) {}
("1866165091").normalize();
