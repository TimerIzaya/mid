const v1 = new Set();
const v2 = [255,-4,11,9007199254740992,-1,6,-2147483647,536870889,1073741824,-1239642617];
const v3 = [-9007199254740992,7512,268435440];
const v4 = [-48031,-9007199254740991,-62802,5,0,-1024,-1182094033];
class C5 extends Set {
    constructor(a7, a8) {
        super(a8);
        const o12 = {
            "execution": "async",
            "type": "major",
        };
        v2.g = v2;
        for (let v13 = 0; v13 < 5; v13++) {
            v13 & v13;
        }
        const v15 = [];
        Object.defineProperty(v15, 1, { writable: true, enumerable: true, value: v15 });
        gc(o12);
        const v17 = a8 !== v1;
        if (v17) {
            try { new a7(this, ...v2, a8, v1, ...this); } catch (e) {}
        } else {
            try { a7(a8, a7, v17, a7); } catch (e) {}
            try { new Int8Array(); } catch (e) {}
            this.#a;
            class C23 {
            }
        }
    }
    86 = v3;
    static 255 = v4;
    #g = v2;
    9;
}
const v24 = new C5(v3, v3);
const v25 = new C5(v2, v4);
const v26 = new C5(v24, v3);
class C27 extends Set {
    #p(a29, a30, a31, a32) {
        super.m();
    }
    static #p(a35, a36) {
    }
    #o(a38, a39, a40, a41) {
        super.forEach(a39);
        super.size <<= a39;
        a39 = v25;
        [4294967296,15,2147483648];
        [-9,1073741825,-49333,15,1];
        [536870912,16,1039521179,-9007199254740990,30,127];
        return v1;
    }
    256 = v3;
    [v26];
    static b;
    static g = v25;
}
new C27();
new C27();
new C27();
const o50 = {
};
function f52(a53, a54) {
    Object.defineProperty(o50, 564n, { writable: true, configurable: true, enumerable: true, set: Date });
    return a54;
}
new Promise(f52);
