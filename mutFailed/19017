let v1 = -432.2582689626977;
let v2 = 1000000000.0;
+v2;
v2--;
~v2;
++v1;
const v12 = [NaN,1000000000.0,-1.7976931348623157e+308,-7.7465993886316316,0.5759892666260222,0.2072081506997998,NaN,122031.926949688,11.389391777210335];
let v13;
try { v13 = v12.findLast(234537162n); } catch (e) {}
const v14 = [-1.7976931348623157e+308,-1.7884818210041402e+308,136.69203721200256];
let v15;
try { v15 = v14.entries(); } catch (e) {}
try { new v15(); } catch (e) {}
let v17;
try { v17 = v15(v14); } catch (e) {}
v13.a &&= v17;
delete v13?.[v12];
typeof v17 === "function";
const v23 = ([3.0,Infinity,-991665.3929344261,2.220446049250313e-16,-2.0])?.unshift;
try { new v23(v1); } catch (e) {}
class C28 {
    #m(a30, a31) {
        class C32 {
            e;
        }
    }
}
try {
    let v35;
    try { v35 = v17(234537162n, 234537162n, v12, "construct", -2147483648n); } catch (e) {}
    v35?.[536870889];
} finally {
    try {
        const t33 = "function";
        t33.valueOf = v13;
    } catch(e37) {
    }
}
1937 - 1937;
