const v0 = /(?=a){0,10}a/gmsy;
const v1 = /2(?:a+)*Gwxyz{0,1}*/gvdis;
const v2 = /[\cZ]/uis;
class C3 {
    #valueOf(a5, a6) {
        a5[0] = v2;
        new Int8Array(Float32Array, Int16Array, Int8Array);
        function f11() {
            return Math.round(f11);
        }
        try {
            super.valueOf(v2);
        } catch(e15) {
        }
        return -32176435n;
    }
    static 2 = v2;
    6 = v1;
    [v2];
    10;
    static f;
}
new C3();
const v20 = new C3();
new C3();
const v22 = [-46187,-4294967296,-4,-2,2147483647];
const v23 = [1764954396];
[3,-926607389,-15,377072826,10];
class C28 {
    constructor(a30, a31, a32, a33) {
        const v38 = 282959.09144047904 >> 2.963855750256441e+307;
        const v39 = -8 + 2.963855750256441e+307;
        Math.imul(this, v39);
        Math.acos(v39);
        ~-2147483649;
        Math.sinh(282959.09144047904);
        -v38;
    }
    257 = 2.963855750256441e+307;
}
const v45 = new C28(v22, v2, v0, v23);
const v46 = new C28(v45, v20, v2, v1);
new C28(v45, v46, v46, v46);
Float32Array.bind();
const o52 = {
    "type": "function",
};
const v55 = new BigInt64Array(4046);
const v57 = new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
v57.copyWithin(1391012384, 2147483649, -1628561190);
function f64(a65, a66) {
    a65++;
    let o69 = {
        "d": a65,
        ...a65,
        get e() {
            return a66;
        },
    };
    [,...o69] = v55;
    a66[4046];
    const o73 = {
        "maxByteLength": 3035,
    };
    new ArrayBuffer();
    new Float32Array();
    return 115;
}
f64(4046, 3768);
f64(4046, 4046);
