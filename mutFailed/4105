const v2 = new Uint16Array(9);
new BigInt64Array(2086);
const v8 = new Int32Array(BigInt64Array);
[Int32Array,v2,v8,BigInt64Array];
[2086,[9,Int32Array,v8],Uint16Array,v8];
class C13 {
    #m(a15, a16) {
        function f17() {
            return a16;
        }
        super[a16] = "f";
        %VerifyType(a16);
        return f17;
    }
    static c;
}
const v18 = new C13();
const v19 = new C13();
const t18 = 9;
const v20 = new t18();
class C21 {
    static {
        const v23 = this.toString();
        try { v23(); } catch (e) {}
    }
    static get b() {
        const o28 = {
            "maxByteLength": 2559,
        };
        const v30 = new ArrayBuffer(2559, o28);
        new Uint8Array(v30);
        return v30;
    }
    p(a34) {
        this.g ^= this[8];
    }
    static #n(a37, a38, a39, a40) {
        class C41 {
            4;
            static a;
        }
        C41();
        C41();
        C41();
    }
    7 = v20;
    #a = v19;
}
new C21();
new C21();
const v47 = new C21();
[v47];
[v18];
function F50() {
    if (!new.target) { throw 'must be called with new'; }
}
new F50();
const v53 = new F50();
const v54 = new v18();
function F55(a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    const v59 = a58?.__lookupGetter__;
    try { v59(a57); } catch (e) {}
    try { this.constructor(F55, this); } catch (e) {}
    a57.e = a57;
}
F55.arguments = F55;
const v62 = new F55(v54);
const v63 = new F55(v62, v53);
BigInt64Array.e = v63;
("Hyo9")[1];
const t70 = "at";
t70[1] = "at";
const v69 = ([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap?.constructor;
try { v69("Hyo9"); } catch (e) {}
[-4.202468609045087];
const v72 = [0.8434386161503777];
try { v72.findLastIndex(v72); } catch (e) {}
const t78 = "4i";
t78[1] = "4i";
const v75 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f76(a77, a78, a79, a80) {
    function f81() {
        let v83 = Float64Array;
        v83.toString();
        v83 = a78;
        const v85 = v75.length;
        const v86 = v85 >>> v85;
        v86 / v86;
        const o92 = {
            toString(a89, a90) {
                a80 && v83;
                return a78;
            },
        };
        o92.toString();
        ([v83])["concat"]();
        new Uint8Array(105);
        let v101 = -268435456;
        v101--;
        const o103 = {
            "e": -4294967295,
            "e": v101,
        };
        return a78;
    }
    const v104 = f81();
    %OptimizeFunctionOnNextCall(f81);
    return v104;
}
const v105 = f76();
f76(v105, v105, f76, v75);
f76();
C21[1] = "RpXR";
("c")?.toLocaleUpperCase;
class C112 {
    constructor(a114) {
        Math.cosh(Math);
        new Uint32Array(4);
        ("valueOf").localeCompare(a114, "valueOf");
    }
}
const v121 = new C112();
const t123 = v121.constructor;
new t123(C112);
