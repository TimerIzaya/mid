const v0 = [];
const v1 = /D/gd;
/a\D\P{gc=Decimal_Number}/viy;
const v3 = /5(x)(x)(x)\2/viy;
[v0,[v0,v1,v0],v3];
[v1,v0,v1,v1,v0];
const v17 = new Set();
function f18(a19) {
    const o26 = {
        set b(a21) {
        },
        toString(a23, a24) {
            return a23;
        },
        get d() {
            return a19;
        },
    };
    return o26;
}
const v27 = f18(v17);
const v28 = f18(v27);
const v29 = f18(v17);
function F30(a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
}
new F30(v27, v29);
new F30(v28, v27);
const v36 = new F30(v27, v28);
const v39 = new Int32Array(2020);
try {
    v17.size;
    v29 & 1024;
    268435440 - -406885.1001387938;
    Math.fround(-406885.1001387938);
    const v50 = new Uint8ClampedArray(231);
    v50["reverse"]();
    ~Int32Array;
    class C55 {
        constructor(a57) {
        }
        h = undefined;
    }
    class C58 extends C55 {
    }
    C58();
    v29 / 268435440;
} catch(e61) {
    const v64 = new e61(2306);
    v64.reverse();
    function F66(a68, a69) {
        if (!new.target) { throw 'must be called with new'; }
    }
    [-5.0,0.6506817157229189,-1.0,325954.7806464648,-2.977619842045307,207.7293164806515,-2.2250738585072014e-308,-3.8235851972465246e+307,1.0];
    [-1.0,-1000000000000.0,0.8531264749275649,-5.0];
    [7.640606689322991e+307,-0.0,2.0,1000000.0,-1.7976931348623157e+308,2.0,0.0,34737.52793939819,959540.4413600569,1e-15];
}
const o75 = {
    "f": -1.883023285666516,
};
const o77 = {
    1073741825: "MIN_VALUE",
};
function F79(a81, a82, a83, a84) {
    if (!new.target) { throw 'must be called with new'; }
    for (let v85 = 0; v85 < 100; v85++) {
        const o88 = {
            valueOf(a87) {
                return a87;
            },
        };
    }
}
new F79("n");
new Uint16Array(70);
[-4096,-156526366,-9007199254740992,-2108113053,-1409475351,11,-37308,16];
[-6,-429106885,58245331,9,5,-41416,33852];
[-1073741824,255,11,-9007199254740991,232691623,1046358555,-42399,13,-46796,1669956301];
try {
    BigInt64Array(256);
    const v104 = new Uint32Array();
    const v105 = v104[40];
    for (let v106 = 0; v106 < 5; v106++) {
        try { v105(); } catch (e) {}
    }
    AggregateError("undefined");
    v39?.constructor;
    [-671138503,-536870912,-9007199254740991,-9007199254740992,-268435456,128,2023752111,-970019998,8839,6];
    [1073741824,-46456,536870888];
    function f112(a113, a114) {
        return a113;
    }
} catch(e115) {
}
new Float64Array(8);
const v117 = /(?:a*)+q(?<a>.)/guds;
const o118 = {
    "maxByteLength": v36,
    __proto__: v117,
};
for (let i121 = 0, i122 = 10; i121 < i122; i122--) {
}
