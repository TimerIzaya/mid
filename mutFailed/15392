const v3 = [-12,1769318553,-19987,-12,1769318553];
[[v3,v3],v3,-19987,1769318553,-19987];
[0];
[129,-26438,12];
[9,58907,-1024,536870912,65536];
const v12 = /(l{z})/s;
function F13(a15) {
    if (!new.target) { throw 'must be called with new'; }
    const v16 = this.constructor;
    try { new v16(v12); } catch (e) {}
    a15.b = a15;
}
new F13(v12);
new F13(v12);
const o21 = {
    "maxByteLength": 1073741824,
};
const o24 = {
    [57144]: 4294967296,
};
o24.m(57144);
function f26(a27, a28) {
    class C29 {
        constructor(a31, a32) {
            const o34 = {
            };
            gc(o34);
        }
    }
    for (let v36 = 0; v36 < 50; v36++) {
        new C29();
    }
    return a27;
}
new Promise(f26);
class C40 {
    static {
        class C42 {
        }
        for (let v43 = 0; v43 < 5; v43++) {
            function f44() {
                for (let [i47, i48] = (() => {
                        switch (f44) {
                        }
                        return [0, 10];
                    })();
                    i48 << i48, i47 < i48;
                    i47++, i48--) {
                }
                return v43;
            }
            f44();
            %OptimizeFunctionOnNextCall(f44);
        }
    }
}
