const v0 = [];
v0.codePointAt = v0;
[512,127,-60337,2147483649,-268435456,536870889,128,59652];
const v2 = [-256,-9223372036854775807,-13323,536870912,1073741825,-9223372036854775808,512,-13,59393,910640326];
const v3 = [9007199254740992,-14,7,268435456,14,255,381474259,-33315];
const v8 = 2 - 2;
try { v3.push(v8, v2, v3, v8, 1e-15); } catch (e) {}
v0["copyWithin"](2, 2, 2);
const v13 = Symbol.iterator;
const o22 = {
    [v13]() {
        let v15 = 10;
        const o21 = {
            next() {
                v15--;
                const v19 = v15 == 0;
                const o20 = {
                    "done": v19,
                    "value": v15,
                };
                return o20;
            },
        };
        return o21;
    },
};
new Int32Array(2);
1676 - 1676;
new Float64Array(1676);
2 - 2;
const v32 = new Uint8ClampedArray(2);
v32.constructor = Symbol;
const v33 = v32?.constructor;
try { new v33(v3, 1e-15, 1e-15); } catch (e) {}
WeakSet.valueOf = Symbol;
const v36 = new WeakSet();
v36.valueOf = Symbol;
try { v36.add(v0); } catch (e) {}
function f41(a42, a43, a44) {
    a44.toString = f41;
    function f45(a46) {
        for (let v47 = 0; v47 < 100; v47++) {
            f41(a46, 1.0);
        }
        return a44;
    }
    try { f45.toString(); } catch (e) {}
    a43.toString = f45;
    try { a42.codePointAt(a43); } catch (e) {}
    a44 & a44;
    const o53 = {
        get d() {
            return a43;
        },
        ["JG3"]: a43,
        "c": a44,
    };
    return o53;
}
try { f41(v0, v0, Uint8ClampedArray); } catch (e) {}
const v55 = f41("function", v36);
v55.valueOf = f41;
f41("JG3", v55);
f41("JG3", WeakSet);
