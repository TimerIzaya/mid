const v2 = new Float64Array(3466);
let v5;
try { v5 = new Int16Array(v2, v2, Int16Array); } catch (e) {}
new Int16Array(1062);
1062 >>> 921;
let v10;
try { v10 = Int16Array.from(Int16Array); } catch (e) {}
new Uint16Array(921);
const v12 = [4.0,516368.4368582126,-2.220446049250313e-16,-1e-15,-1000000000.0,823.202687537532,-2.220446049250313e-16];
[296074.54644612875,760.5732684635959,457.910061747275,-1.785286760118225e+308,272.75660591895416,-7.500116324120764];
const v15 = [1062,[-2.0,422122.5138272394,1.7976931348623157e+308,988537.0146176643,0.4156138052200383,-Infinity,-Infinity],1062,1062,v12];
try { v10.shift(); } catch (e) {}
const v18 = [[Float64Array]];
const v21 = new Int8Array(160);
const v22 = v21[0];
const o23 = {
};
v15.h = v12;
o23.h = o23;
const v25 = v18.constructor.getOwnPropertyDescriptors(v21);
v25[1] = v25;
for (let i28 = 0, i29 = 10; v22 !== i29, v5 < i29; i29--) {
    -i29;
}
