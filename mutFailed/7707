class C3 {
    static #f;
    a = "NaN";
    6 = "n";
    #toString(a5) {
        super[this] = a5;
        let v6;
        try {
        const t0 = "finally";
        v6 = new t0(this);
        } catch (e) {}
        function F7(a9, a10) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.h = "n";
                const o12 = {
                    "c": 2.0,
                };
                function F13(a15) {
                    if (!new.target) { throw 'must be called with new'; }
                }
                new F13(o12);
            } catch(e17) {
            }
            try {
                this.d = a9;
            } catch(e18) {
            }
            try {
                this.f = "n";
            } catch(e19) {
            }
            const v20 = [1,4294967296,-9007199254740992,4,-4294967295,-9,-4294967297,255,536870888,255];
            [v20,v20,v20];
            const o25 = {
                ...1.0,
                set b(a24) {
                },
            };
        }
        new F7(a5, a5);
        new F7("NaN", a5);
        new F7(v6, "finally");
        return a5;
    }
}
const v29 = C3?.apply;
try { new v29(C3, "n"); } catch (e) {}
new C3();
new C3();
new C3();
const v34 = [812.0307615447712,7.168638200026307e+306,2.0,-4.109131760685935,1000000000000.0,2.361888280639536e+307];
const v35 = [3.0,2.2093629013265996,7.67685250851554e+307,2.220446049250313e-16,2.8022156684905397,-95159.47476495651,1.0541974576381861e+308,Infinity,-2.0];
const v36 = [0.23792536577256618,1000000000000.0,714959.0721779114,1000000000.0,-2.3060718359613563,4.0];
let v37;
try { v37 = v36.reduceRight(v36); } catch (e) {}
function F39(a41, a42) {
    if (!new.target) { throw 'must be called with new'; }
}
new F39(F39, F39);
const v44 = new v34();
function f45(a46, a47, a48) {
    const o50 = {
        get b() {
            return v34;
        },
        127: v44,
    };
    return f45;
}
f45(v34, v44, v44);
7 >= 7;
try { ("toUpperCase").toLocaleLowerCase(); } catch (e) {}
1.1922093890401552e+308 | 1.1922093890401552e+308;
class C59 {
    #c = "toUpperCase";
    get a() {
        const v61 = this << "toUpperCase";
        const v62 = v61 ^ v61;
        let v63;
        try { v63 = v62(v62, this, v62, v62, v61, this); } catch (e) {}
        v63[v62] <<= 1.1922093890401552e+308;
        return "Tx";
    }
    static b;
}
const v65 = new C59();
function f66(a67, a68) {
    try { v37.toString(v35); } catch (e) {}
    function f70(a71, a72, a73, a74) {
        return arguments;
    }
    return a67;
}
v65.constructor = f66;
-2.241327492701015 & 9007199254740991;
const v82 = 512 ^ 512;
Math.tan(~10 >>> v82);
const v86 = v65?.constructor;
try { new v86(); } catch (e) {}
const v88 = new C59();
const v89 = v88?.constructor;
function f90(a91, a92, a93, a94) {
    function f96() {
        return arguments;
    }
    const v98 = new Int8Array();
    v98.buffer;
    %OptimizeFunctionOnNextCall(f96);
    ("find").codePointAt(f90);
    return arguments;
}
try { new v89(); } catch (e) {}
const v103 = v88?.toLocaleString;
try { new v103(); } catch (e) {}
const v105 = new C59();
[v65,"toUpperCase",C59];
[C59];
const v108 = [v65];
v108[0] = v108;
let v109 = -4n;
v109--;
35530n & 35530n;
try { Float64Array(35530n, v105); } catch (e) {}
