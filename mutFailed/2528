const v2 = new Int32Array(0);
const v5 = new BigUint64Array(2204);
512 != 512;
Uint32Array.prototype = Uint32Array;
const v9 = new Uint32Array(512);
try { v9.filter(Uint32Array); } catch (e) {}
function f12(a13, a14) {
    a13++;
    a14 - a14;
    const o23 = {
        o(a19) {
            const o21 = {
            };
            gc(o21);
            return BigUint64Array;
        },
    };
    const o48 = {
        get d() {
            function f25(a26, a27, a28) {
                'use strict';
                return a26;
            }
            return this;
        },
        "h": v5,
        [512]: v9,
        ...v9,
        1: undefined,
        "f": a13,
        ...v9,
        ...v2,
        [v2]: a14,
        n(a30, a31) {
            v2[202];
            const v33 = super.h;
            -450746.69945373747 ^ -450746.69945373747;
            class C37 {
                toString(a39, a40) {
                    super.g = "-9223372036854775808";
                }
                n(a42) {
                }
            }
            new C37();
            v33?.[3];
            for (let v45 = 0; v45 < 32; v45++) {
                this["p" + v45] = v45;
            }
            return a13;
        },
    };
    try { o48.toString(); } catch (e) {}
    return o48;
}
const v50 = f12(0, 2204);
v50[91] = v50;
f12(0, 512);
f12(2204, 512);
const v53 = [0.09625845130830724,-1e-15,0.40226168662621953];
const v54 = [-700765.6455759181,-1.0,-1e-15,238.56580086181475,-6.99438605118472e+307,0.8641795299038513,1000000000000.0,0.6448161003466354];
const v55 = [-1.7976931348623157e+308,585278.7631767453,-1.0,-2.0];
let v56;
try { v56 = v55.group(v54); } catch (e) {}
4294967297 + 4294967297;
const v63 = v56();
function f64(a65, a66, a67, a68) {
    a65 % a65;
    a67 + a67;
    const o71 = {
        [-9007199254740991]: Array,
        [a67]: v54,
        "b": a65,
    };
}
f64(4294967297, f64, 4294967297, 2124);
f64(2124, v55, v53, v55);
52 | 52;
new Uint16Array(52);
const v80 = new Uint32Array(2128);
for (let v81 = 0; v81 < 100; v81++) {
    f64(512, v80, v80, v63);
}
for (let v83 = 0; v83 < 32; v83++) {
    v83 + v83;
}
