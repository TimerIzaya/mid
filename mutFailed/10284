[257,-1024];
const v1 = [2,-65536,606379085,-348,-9223372036854775807,-65536];
const v2 = [12,-9223372036854775808,1073741824,-13,4,-65536,16];
class C4 {
}
C4.d = v2;
class C5 {
}
this.__proto__ = v2;
class C12 {
    constructor(a14, a15) {
        v1.length;
        new Uint16Array(64);
        new Float32Array(166);
        new Uint8Array(196);
        function F27(a29, a30, a31) {
            if (!new.target) { throw 'must be called with new'; }
            function f32(a33) {
                [-10647,833664242,4294967296,536870889,268435456,15,-65535,256,64];
                [69583155,18581,129,268435441,9223372036854775807];
                [-992444701,-9,-6,-5,536870889,-54660];
            }
            Object.defineProperty(this, "f", { configurable: true, enumerable: true, set: f32 });
            try {
                C4.d = 13;
            } catch(e37) {
                const v38 = [-1000000.0,-1.0,952.4163692749257,41232.51719836402,-2.220446049250313e-16,869.918809614255,0.6566814488589754,-2.299816654271874,1000000000.0];
                function f39() {
                    let v40 = 0;
                    do {
                        try {
                            new Uint16Array(-52754, 255);
                        } catch(e44) {
                        }
                        v40++;
                    } while (v40 < 4)
                    let v48 = -268435456;
                    v48 ^ v48;
                    const v50 = new C5();
                    function F51(a53, a54, a55) {
                        if (!new.target) { throw 'must be called with new'; }
                        try {
                            this.c = v40;
                        } catch(e56) {
                        }
                    }
                    const v57 = new F51(v38, v48, v38);
                    new F51(v57, e37, v50);
                    new F51(a31, a30, v50);
                    v48++;
                    const o61 = {
                        __proto__: v38,
                    };
                    try { o61.every(); } catch (e) {}
                    return v38;
                }
                %OptimizeFunctionOnNextCall(f39);
            }
            try {
                this.f = a30;
                const v64 = [65537,1073741825,7841,-12,13];
                const v65 = [1073741823,4294967295];
                v65[1] = v65;
                const v66 = new C5(v64, v65, WeakSet);
                new this(v65, v65, v66);
            } catch(e68) {
                const v70 = /[a-zA-Z0-9]/gvisy;
                const v71 = /abc?/gvmy;
                Object.defineProperty(v71, -2, { value: 166 });
                v71[-2] ^= v70;
                v71.exec("Q8F");
            }
        }
        const v73 = new F27(a15, 270634828, F27);
        const v74 = new F27(v73, 13, a14);
        new F27(v74, a14, v74);
    }
}
new C12(270634828, 13);
new C12(53304, 53304);
new Float64Array(2147483647);
function f81() {
    return 270634828;
}
new C12(53304, 270634828);
function f86() {
}
const v87 = [155533.8602852358,2.0];
Object.defineProperty(v87, 658291203, { value: 53304 });
function F89() {
    if (!new.target) { throw 'must be called with new'; }
    const v91 = this?.__defineSetter__;
    try { new v91(202); } catch (e) {}
    for (const v96 of Array(C5)) {
        v87[658291203] = null;
        Math.g = this;
        Math.g = Array;
        f86--;
    }
}
new F89();
Int32Array[2] = 270634828;
const v102 = new Int32Array(Int32Array);
let {...v103} = v102;
