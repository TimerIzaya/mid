const v0 = [];
v0.toLocaleString();
for (let i5 = 0, i6 = 10;
    (() => {
        const v7 = i5 < i6;
        const o8 = {
        };
        class C9 {
            #p() {
            }
        }
        let v11 = 3375;
        const v13 = new BigUint64Array(v11);
        Math.tan(--v11);
        const v17 = [-256,13351,5138,2,-4294967295,1000,268435440];
        class C18 {
            constructor(a20, a21) {
                Math.atan2(v17);
            }
        }
        let [v23,,v24,...v25] = v13;
        return v7;
    })();
    i5++) {
}
let v32 = 268435440n;
const v33 = v32--;
const v38 = new Uint16Array(96);
new Float64Array(v38);
[526378.6109128178,-1000000000.0,1e-15,881655.5036645671,679.2449840532051,-1.1086732775424931e+308,629.0836965876567];
[-1000000.0,-2.0,802.2772368364658,-5.72862889709852e+307,-2.0,2.220446049250313e-16];
[-3.0];
[1000.0];
const v46 = [-1000000000000.0,300648.9390150865,-5.0,0.8789315876893321,0.0,1000.0];
Array(3303);
class C50 {
    4259938026;
}
new C50();
const v52 = v46?.groupToMap;
try { new v52(15086); } catch (e) {}
const v56 = new BigInt64Array(5);
try { Float64Array.from(v56); } catch (e) {}
const v59 = [1000000000000.0,63251.99657398416,Infinity,-968083.456303783,1.7976931348623157e+308];
v59[5] = 15086;
try { v59.push(v0); } catch (e) {}
class C61 {
    constructor(a63) {
    }
}
C61[0] = v33;
try { C61.call(v59); } catch (e) {}
Int8Array.prototype = Int8Array;
const v66 = new Int8Array(C61);
v66.reverse();
