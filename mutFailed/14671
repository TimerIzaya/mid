const v0 = [1.7976931348623157e+308,0.6168899757575612,1e-15,0.9008209639731662,5.0];
const v1 = [-1000000000000.0,0.04977916250444825,-490.13341460062657,-535.4437837176997,362236.438723298,2.220446049250313e-16];
const v2 = [4.8705329486259945,0.8153135360730726,3.949387392205191e+307,Infinity,-8.906971146264482];
function f3() {
    return v2;
}
function F4(a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        v0.a = a7;
    } catch(e8) {
    }
    let v10 = Int8Array;
    new v10(1073741823);
    class C12 {
    }
    --v10;
    let v16 = 4;
    const v18 = v16--;
    let v19 = ++v16;
    let v20 = ++v19;
    v20 - arguments;
    ++v20;
    -1351275822 * v10;
    !v18;
    const v25 = new C12();
    for (const v27 of `match${v25}-20124`) {
        v27.strike().codePointAt(v27);
    }
    for (const v30 in this) {
        let {"a":v31,"d":v32,"f":v33,} = C12;
        %VerifyType(v33);
        [-624488.7263231262];
        [1.9483928539415096,-9.959020343452304e+307,-1e-15,1000000.0,-1000000000000.0,1000000.0];
        [1.7976931348623157e+308,-0.0,446783.9913129562,-5.0,0.0];
    }
    try {
        this.g = v2;
    } catch(e37) {
    }
    try {
        this.b = a7;
    } catch(e38) {
    }
}
const v39 = new F4(v2, v2);
const v40 = new F4(v2, v0);
new F4(v1, v0);
const v47 = new Int8Array(0);
new Uint16Array(10);
function f53(a54, a55) {
    a55.constructor(a55);
    return f53;
}
const v62 = new Uint32Array(186);
const t55 = 16;
const v67 = new t55(186, 186, 16);
const v68 = [Float64Array,v67];
class C69 {
    constructor(a71, a72) {
        if (Float64Array > v62) {
            new Uint32Array(v68);
        } else {
            function F75(a77, a78, a79) {
                if (!new.target) { throw 'must be called with new'; }
            }
        }
    }
}
new C69(Float64Array, 15);
-256n >> -256n;
function f82() {
    %VerifyType(v47);
    Object.defineProperty(v0, 44, { writable: true, get: f82 });
    v40 >> (f53(v39, BigInt64Array) % -256n);
    return f82;
}
Math.atan2(257, 257);
new BigInt64Array(13);
const v89 = [-1679361633,-1679361633,-1679361633];
for (let i = 0; i < 5; i++) {
    Object.defineProperty(v89, 130, { value: -1679361633 });
}
const v92 = new Uint32Array();
const v94 = [];
const v99 = Math.atan2(v94, -40875);
function f100(a101, a102) {
    a101 >> a101;
    a101 + a101;
    const v105 = a102 >> a102;
    v105 >>> v105;
    const o114 = {
        [-2]: 1073741825,
        ...-3.0,
        ...v94,
        ...v99,
        get a() {
            Math.acos(0.0);
        },
        "a": -3.0,
        set g(a111) {
            v94.__proto__ < a102;
        },
        "h": a102,
        "c": -3.0,
        ...v94,
        "b": a101,
        4: a102,
    };
    return o114;
}
const v115 = new v2();
const v119 = new Float32Array(128);
const v120 = v92[40];
for (let v121 = 0; v121 < 25; v121++) {
    v47?.constructor;
    class C123 {
    }
    const v124 = new C123();
    function f125(a126, a127) {
        const o132 = {
            [v124](a129, a130, a131) {
            },
        };
        return a126;
    }
    try { v120(); } catch (e) {}
}
v119.includes(1024);
v115[124];
