let v0 = -53207;
let v5 = -9223372036854775807;
class C6 {
    set f(a8) {
        a8 >> a8;
    }
    constructor(a11, a12, a13, a14) {
        [this];
        v0 = 536870887;
        throw this;
        super[v5 = 536870887];
    }
}
const v17 = new C6(9007199254740990, 7, 536870887, 9007199254740990);
const v18 = new C6(v5, v17, 1819717167, v5);
new C6(v5, v18, v0, 536870887);
const v20 = [1073741824,1073741823,1376142744,1073741825];
function f21(a22, a23, a24, a25) {
    function f26() {
        const v28 = Math.expm1(a23);
        const v29 = Math.tanh();
        const v30 = Math.hypot(a25, Math);
        try {
            v20.findLast(a24);
        } catch(e32) {
        }
        const o33 = {
            [v29]: v28,
        };
        return v30;
    }
    f26();
    const t31 = 7;
    t31(a25);
    %OptimizeFunctionOnNextCall(f26);
    return f21;
}
for (let v37 = 0; v37 < 5; v37++) {
    f21();
}
