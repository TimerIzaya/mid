const v0 = -Infinity;
class C3 {
    static #h;
    static #n(a5) {
        const v6 = delete this[4];
        let v7 = 0;
        do {
            v7++;
        } while (v7 < 0, v6)
        return this;
    }
    static #b = C3;
}
const v12 = new C3();
const v13 = v12?.__defineGetter__;
try { new v13(v12, v0); } catch (e) {}
const t16 = 4294967295;
const v15 = new t16();
let v16;
try { v16 = v15.toString(); } catch (e) {}
const v17 = new C3();
try {
    v17.fuck(-5.0, v16, [v17,-5.0,v16,v15,1000.0], 255n);
} catch(e22) {
}
/xyz{1,32}?/guimsy;
const v24 = /n?/dsy;
/(?!(a))\1/vimy;
/(a)a{1,2}?(x)(x)(x)\3*/gudsy;
/abc+o{12,3bJm*/dmy;
/OI[1xyz?a+b]/dimy;
function f29() {
    return v24;
}
try { new BigUint64Array(16, BigUint64Array, 16); } catch (e) {}
new BigUint64Array(16);
Float32Array.d = BigUint64Array;
try { Float32Array.apply(16, BigUint64Array); } catch (e) {}
