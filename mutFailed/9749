new Uint8Array(128);
new Uint8Array(255);
const t2 = -65536;
new t2(512);
class C14 {
}
new C14();
class C17 extends Set {
}
const t9 = (255).constructor;
t9(C17);
let v20 = 0.3050534209767637;
const t12 = v20--;
new t12();
const v25 = [BigUint64Array];
v25.pop();
const v28 = Math.__defineSetter__;
try { v28(); } catch (e) {}
Math.sinh();
const o31 = {
};
if (5) {
    function F32(a34, a35) {
        if (!new.target) { throw 'must be called with new'; }
    }
    for (let v36 = 0; v36 < 5; v36++) {
        function F37(a39, a40) {
            if (!new.target) { throw 'must be called with new'; }
        }
    }
}
const o41 = {
    ...v25,
};
([512n]).includes(512n);
