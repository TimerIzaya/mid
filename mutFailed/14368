const v1 = new WeakMap();
Int8Array.BYTES_PER_ELEMENT;
new Int8Array(268435456);
for (let v7 = 0; v7 < 10; v7++) {
    v1["p" % v7] = v7;
}
const v12 = [v1,234718092,WeakMap,-6701,-6701];
const v13 = [];
const v16 = new Uint32Array(3);
class C17 {
    constructor(a19, a20, a21, a22) {
        const v23 = this?.constructor;
        try { new v23(a22, v12, a22, a20); } catch (e) {}
        for (let v25 = 0; v25 < 5; v25++) {
            ~v25;
            v16[v25] = a22;
        }
    }
}
const v27 = new C17();
v27.constructor = v27;
try {
    v13.some();
} catch(e29) {
    const v30 = e29.b;
    v30[89] = v30;
}
const v31 = [234718092,-6701,WeakMap,-6701];
try { v31.map(Int8Array); } catch (e) {}
function F33(a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
}
const v37 = F33?.constructor;
try { new v37(WeakMap); } catch (e) {}
class C39 extends F33 {
}
const v40 = new C39();
const v41 = v40?.constructor;
try { new v41(); } catch (e) {}
[WeakMap,234718092];
-2.220446049250313e-16 & -2.220446049250313e-16;
function f47() {
    Math.tan(Math);
    return -6701;
}
const v53 = new Map();
const o64 = {
    set d(a55) {
        this.d;
        v53.delete();
        Uint8Array.BYTES_PER_ELEMENT;
        new Uint8Array(165);
        function F62() {
            if (!new.target) { throw 'must be called with new'; }
        }
    },
};
const v65 = o64?.a;
try { new v65(F33); } catch (e) {}
o64.d /= -3;
