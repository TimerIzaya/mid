const v0 = [1073741825,1453420314];
[255,18749,-4096,9007199254740992,-53468,26239,-2147483648,-65537,127,64196];
[9,16,-65537,268435439,1073741824,-16,9];
let v3 = 512;
v3++;
new Uint16Array(v3);
new BigInt64Array(8);
const v12 = new Uint8Array(0);
const v13 = v12?.entries;
let v14;
try { v14 = new v13(); } catch (e) {}
let v17 = 1126838905;
const v19 = [8];
v19[0];
Reflect.construct(Int8Array, v19);
class C22 {
    [-2] = v14;
}
new C22();
const v24 = v0?.toLocaleString;
try { new v24(); } catch (e) {}
const v26 = [-20096,4294967296,-65537,-2];
const v27 = [-1947047520];
function f28(a29, a30) {
    let v31;
    try { v31 = C22.toString(a29, a29, v0); } catch (e) {}
    v17 -= v31;
    return v27;
}
v27.toString = f28;
const v32 = [v27,v27,v27,v26];
v32[Symbol.toPrimitive] = v13;
const v35 = [v32];
try { v35.toString(); } catch (e) {}
("slice")[1];
const v39 = v26["slice"](v35);
try { v39.fill(v39); } catch (e) {}
