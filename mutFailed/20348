const t0 = "8";
const v4 = new t0();
v4.constructor;
const o6 = {
};
o6.d = "function";
class C7 {
    constructor(a9, a10) {
        a9 == a9;
        try { new a10(); } catch (e) {}
        a9 ** -4294967296;
        a9 && a9;
        const v18 = "8" + -4294967296;
        ~v18;
        const v20 = -128;
        v20 + v20;
        Math.cos(v18);
    }
    ["function"] = "undefined";
    ["undefined"];
    ["8"];
}
const v23 = new C7("function", C7);
v23[8] = v23;
const v24 = new C7("8", v23);
v24[8];
new C7("8", "undefined");
const v30 = new Int8Array(770);
const v31 = new Uint8ClampedArray(v30);
v24 & -664156.8429739357;
try { ("b").at("b"); } catch (e) {}
const v42 = new BigUint64Array(43);
try { v42.set(v31); } catch (e) {}
let v44 = 52;
v44--;
BigUint64Array.prototype = BigUint64Array;
new BigUint64Array(v44);
new Uint8ClampedArray(10);
new Uint16Array(Uint16Array);
class C53 {
    #p(a55, a56, a57, a58) {
    }
    constructor(a60, a61) {
        try {
            a61.#p();
        } catch(e63) {
        }
    }
}
1073741824 & 1073741824;
const o67 = {
    "maxByteLength": 1073741824,
};
const v69 = new ArrayBuffer(4, o67);
const v71 = new Int8Array(v69);
v71[3] = v71;
v71[2] = v71;
