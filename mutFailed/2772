class C3 {
    valueOf(a5) {
        a5[0] = a5;
        super[this];
        new Uint8ClampedArray(10);
        const v12 = new Uint8ClampedArray(1984);
        new Uint8ClampedArray(16);
        return v12;
    }
}
C3.name;
const v17 = new C3();
const v18 = v17?.valueOf;
try { new v18(v17); } catch (e) {}
const v20 = new C3();
const v21 = v20?.constructor;
try { new v21(); } catch (e) {}
const v23 = v17[4294967296];
let v24;
try { v24 = new v23(-4096, 4.0, C3, -4096); } catch (e) {}
let o25 = {
};
o25.f = o25;
const v27 = new Proxy(v20, o25);
const v28 = v27?.constructor;
try { new v28(); } catch (e) {}
const v30 = new C3();
Uint8ClampedArray.length;
const v34 = +-1.0455296653936025e+308;
v34 | v34;
const v36 = [16,27608,-4368,-1649389751,9223372036854775807,-11,-6,7];
v36[7] = v36;
[-861405150,-4294967295,1073741823,9007199254740990,64,-1451633145,-5,-9007199254740992,-436754865,-1267930982];
[-2147483649,-1113429380,536870887,-7,65535,570983690,4294967296,-13,-2];
let v41 = 1000000000.0;
const v42 = ~127;
const v43 = v42 % v36;
const v44 = ~127;
v44 & v44;
const v46 = Math.acos(v43);
v46 << v46;
Math.log2(v42);
const v49 = v36 + v42;
try { v49.codePointAt(v20); } catch (e) {}
Math.clz32(127);
new Uint8ClampedArray(5);
BigUint64Array.d = BigUint64Array;
new BigUint64Array(224);
v41 *= v41;
let v59 = -1661655124;
let v62 = v30 & v43;
const v63 = v24 ** v43;
--v62;
+-1000.0;
Math.cbrt(v63);
v59++;
new Uint8ClampedArray(971);
-(536870912n << 536870912n);
class C72 {
    static #a;
}
try { new C72(); } catch (e) {}
%VerifyType(224);
let v76 = -1;
const v77 = o25--;
const v78 = ++v76;
Math.clz32(4294967295);
const v80 = ~v78;
v80 >> v80;
v77 + 4294967295;
