class C3 {
    constructor(a5, a6) {
        try {
            this.fuck("45741", /(x)(x)(x)\2+/vdim);
        } catch(e9) {
        }
    }
    #m(a11, a12) {
        a11.length;
        return a12;
    }
    #d;
}
let v14 = new C3("KFBc", "KFBc");
const v15 = new C3(v14, v14);
const v16 = new C3(v15, v14);
class C17 {
    static #a;
    constructor(a19, a20) {
        for (let i23 = 0, i24 = 10; i23 < i24; i23++, i24--) {
            a20[i23] = a19;
        }
        v14 = a20;
        let v32;
        try { v32 = a19.indexOf(a19, "undefined"); } catch (e) {}
        try { v32("KFBc", -9007199254740992, v15, v32); } catch (e) {}
    }
    static ["45741"] = "KFBc";
    static d;
    static b = "KFBc";
}
v16.d <<= v14;
("45741").length;
function F38(a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = v14;
    } catch(e42) {
    }
    try {
        this.b = a41;
    } catch(e43) {
    }
    try {
        this.h = "45741";
    } catch(e44) {
    }
}
new F38(v14, v14);
new F38("KFBc", "undefined");
new F38("undefined", v15);
const v48 = new C17("45741", "undefined");
const v49 = new C17(v16, "undefined");
const v50 = new C17("45741", v48);
class C51 extends C3 {
    d;
    [C3];
    #f;
    constructor(a53, a54, a55, a56) {
        super(a54, a55);
        typeof v14 === "object";
    }
}
const v63 = new C51("45741", "45741", "45741", v50);
new C51(v63, C17, "KFBc", v49);
new C51(v48, v50, "undefined", "undefined");
const v66 = [];
parseInt(v66.toSpliced(v66));
