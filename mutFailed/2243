const v0 = [-948757041,-2548,129,-1815997984,2147483648,-1480035039,-885893620];
[512,-5,-16,6,47228,0,255,-2];
[2,420663321,771083373,-2065930005,7123,2,303619264];
try { ("e").strike(); } catch (e) {}
try { ("bigint").valueOf(); } catch (e) {}
-832482856 & -832482856;
const v12 = 25592 != 25592;
new BigInt64Array(7);
const v21 = new Float32Array(1739);
try { v21.join(v12); } catch (e) {}
let v23 = 256;
const v24 = v23++;
const v26 = new Uint16Array(v23);
v26[134] = v26;
v26[200];
const v28 = [2.412578955630149,2.7008822875610345,-2.220446049250313e-16,-1.0,-1000000000.0,-1.0,3.9002388983145044e+307,-Infinity,-1e-15,-4.2464820531165003e+307];
v28[8] = v28;
const v29 = [-1e-15,4.0,362.9742459010415,1.488212487511409e+308,3.0];
try { v29.toLocaleString(); } catch (e) {}
class C31 {
    constructor(a33, a34) {
        try { this.constructor(a33, v0); } catch (e) {}
        try { a34.slice(this, a34); } catch (e) {}
        const v37 = a33[2];
        v37 === v37;
        super[v29] = v28;
    }
}
try { C31.propertyIsEnumerable(v24); } catch (e) {}
const v40 = new C31(v28, v29);
const v41 = v40?.__defineGetter__;
v41.length = v41;
try { new v41(4294967297, 376136878); } catch (e) {}
function f43(a44) {
    return C31;
}
Worker.g = Worker;
try { ("function").strike(); } catch (e) {}
const v48 = [v40];
v48[0];
const o50 = {
    "arguments": v48,
    "type": "function",
};
o50.e = o50;
const v51 = new Worker(f43, o50);
try { v51.terminateAndWait(); } catch (e) {}
