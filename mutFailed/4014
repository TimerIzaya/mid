new Array(495);
let v8 = -4294967296;
class C9 {
    constructor(a11, a12, a13) {
        const t4 = "setMinutes";
        t4.length ^= a13;
        delete this[-2];
        v8 &= a11;
        try {
            Array.of(3n, 3n, 21541n);
        } catch(e18) {
        }
    }
}
const v19 = new C9(-1024, "setMinutes", "-16");
const v20 = new C9(-1024, "-16", v19);
new C9(-13, "-16", v20);
function f22() {
    const o29 = {
        toString(a27, a28) {
        },
        "b": "boolean",
        "c": "boolean",
        ["object"]: f22,
        ["boolean"]: 1000000000000.0,
        "h": 1000000000000.0,
    };
    return o29;
}
const v30 = f22();
const o33 = {
    "maxByteLength": 257,
};
const v35 = new SharedArrayBuffer(257, o33);
new Uint16Array(v35);
f22();
const v39 = f22();
function F40(a42) {
    if (!new.target) { throw 'must be called with new'; }
}
const v43 = new F40();
function f44(a45, a46, a47) {
    const o52 = {
        get a() {
            const o50 = {
            };
            gc();
        },
    };
    return o52;
}
const v53 = f44();
f44();
function F55(a57, a58, a59) {
    if (!new.target) { throw 'must be called with new'; }
    const v60 = this.constructor;
    try { new v60(F55, F55); } catch (e) {}
    a58.g = a58;
    this.a = a57;
}
new F55(v39, v30, v43);
new F55(v39, v53);
Math?.expm1;
