const v0 = /XF/gud;
/f9a+b|c/vdy;
const v2 = /bt3e\x60a\scj\p{Script_Extensions=Greek}/udm;
const v3 = [-812897259,8,694107621,65536,-2147483649,4294967295,4096];
let v4 = [1350526886];
const v5 = [7,8,4294967296,-9223372036854775807,43066,-15];
class C6 {
    toString(a8, a9) {
        let v7 = this;
        const v10 = super.h;
        v7 |= v2;
        return v10;
    }
    static #p(a12, a13, a14) {
        1.7976931348623157e+308 ** 1.7976931348623157e+308;
        Math.asinh(v4);
        const v20 = 1.7976931348623157e+308 - v4;
        ++v4;
        v20 % a14;
        return v3;
    }
    m(a24, a25) {
        let v26;
        try { v26 = a25.compile(a25); } catch (e) {}
        super[v0] = this;
        v5[10] = a25;
        super.b = a24;
        return v26;
    }
}
new v4();
const v28 = async (a29, a30, a31, a32) => {
    const o36 = {
        "execution": "sync",
        "type": a30,
    };
    gc(v4);
    return await v4;
};
new v4();
new C6();
const v42 = new BigUint64Array();
[v42];
for (let v45 = 0; v45 < 50; v45++) {
}
v3[65536] %= 256;
