new Int32Array(8);
const v6 = new Uint8ClampedArray();
let v13 = new WeakMap();
class C14 {
    constructor(a16, a17) {
        super["-19084"]?.[1];
    }
    c = "U2pI";
    static 268435439;
    static get d() {
        v13 ||= this;
        return [-679038690,7,-65536,3,1461677839,9];
    }
    static d = WeakMap;
}
const v22 = new C14("-19084", 8);
let v23;
try { v23 = v6("function", 14); } catch (e) {}
function f24(a25, a26) {
    v23(v22);
    [Float64Array,Float64Array,Float64Array,v23,a26];
    [[8],Uint8Array];
}
class C33 {
    constructor(a35, a36, a37, a38) {
        try { ("function").trimRight(); } catch (e) {}
        [f24];
        [a38,C14,"U2pI",[this,a37]];
    }
    [9.057288736705825];
    static #c;
    static toString(a44) {
        try {
            a44.#c;
        } catch(e46) {
        }
        return a44;
    }
    /*
    constructor(a48) {
        const v50 = Math.atan2(v22);
        v50 ** v50;
        Array(1000);
        try { new a48(9.057288736705825, 440204.61389604653, this, this, this); } catch (e) {}
        const o59 = {
            "execution": "async",
            "type": "major",
        };
        gc(C33);
    }
    */
}
new C33(C33);
const v62 = new C33(v23);
const v63 = new C33(v62);
const v64 = [v62,"f",v63];
[440204.61389604653,v62];
[v64];
[-4096,7,4,-9,-268435456];
const v68 = [-1527658577,2,-259069488,-8,4,-1024,129,2147483648,-9761,3];
[-1655410321,4294967297];
try {
    v13.fuck(f24, v13, Uint8Array, 8);
} catch(e71) {
}
try {
    v13.fuck(9007199254740991, 612536.9020051414, "f", Int32Array);
} catch(e75) {
}
class C76 extends C14 {
    static o(a78, a79) {
        v68["map"](a78) in this;
        let v85 = -48279;
        const v88 = -(+-4);
        const v89 = v85--;
        -(-4.0);
        v85 >>> v88;
        const v92 = [];
        function F93(a95, a96, a97, a98) {
            if (!new.target) { throw 'must be called with new'; }
            a95.lastIndexOf(a95, a96);
        }
        const v100 = new F93(v92);
        v100.constructor;
        for (let v102 = 0; v102 < 5; v102++) {
            const o104 = {
            };
            gc(o104);
        }
        try { new this(); } catch (e) {}
        Math.asinh(-4.0);
        -4 ^ v89;
        return Math;
    }
}
new C76();
new v13();
new C76();
gc();
