[657.3627907947221,1000.0,0.15057615785280953,-Infinity,-2.0,-4.0];
[369280.8885613787,845882.7614284807];
[3.5791757403770035,1.7097916232581339e+308,816810.6338039055,-3.0,1.7976931348623157e+308,2.220446049250313e-16,3.857172763700639,1.5755263537738785e+308,-1.0];
new BigInt64Array(14);
new BigUint64Array(6);
const v11 = new BigInt64Array(255);
const o15 = {
};
class C17 {
}
const v18 = o15.constructor;
const v20 = 1922 % 1922;
const v21 = v20 == v20;
for (let v22 = 0; v22 < 25; v22++) {
    function f23() {
        return f23;
    }
    function f24(a25, a26, a27, a28) {
        a26.freeze(f23);
        a28 + a28;
        function f31() {
        }
        const v33 = -f31.length;
        const v35 = f23().constructor;
        let v36;
        try { v36 = v35(); } catch (e) {}
        function f40() {
            return 1922;
        }
        v36.bind();
        const v42 = v11.bind();
        const v43 = v35 * v21;
        const v44 = typeof f23;
        v44.italics(v44, v33, v42);
        const v47 = v44 === "n";
        new Int8Array();
        const v50 = v47.entries();
        v50.next();
        v50.next(1.185961373472971e+308);
        function f53() {
            return f23;
        }
        const v54 = f53();
        [65535,-10,4294967296,-10,36724,65536,-2147483647,52881,2,4096];
        function f57(a58, a59, a60) {
            const v62 = [Array,a60];
            Reflect.apply(v43.filter, v54, v62).find(v36);
        }
        f57.caller = f57;
        [];
        const v69 = ("find").blink().replaceAll;
        try { v69(v47); } catch (e) {}
    }
    for (let v71 = 0; v71 < 5; v71++) {
        f24(v71, v18, v18, 1922);
    }
}
const v73 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
C17 <= -4294967297n ? C17 : 6;
let v81 = BigInt64Array & -1;
(v81 && --v81) - -15500;
-(-4294967297n);
v73.length;
