function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        for (const v6 of Array(19793)) {
        }
        let v7 = -9223372036854775808n;
        v7 %= 45725n;
    } catch(e9) {
    }
}
new F1();
new Uint8Array(52);
new Float32Array(193);
new BigUint64Array(205);
new Float32Array(127);
const v24 = new Uint16Array(0);
new Uint8ClampedArray(6);
new Date();
function f31(a32, a33, a34, a35) {
    a34[4] = arguments;
    return a34;
}
const v37 = new v24();
const v38 = [gc,gc,gc,v37];
[v38,gc];
new gc(56885);
Math.expm1(Math);
const v45 = [gc,v38,v38];
/an/gudimsy;
/xa\b!/gdis;
const v48 = /a+?z*/gm;
const v49 = [-3.0,0.0,8.692473731259366,-1e-15,0.598869256055706,-2.0,-2.220446049250313e-16,-Infinity,-9.722804109631653];
const v50 = [-1.257587252130051,-93063.25159892451,2.0,-256299.38870889205,-Infinity,-1000.0,-7.521391161311806,1e-15];
[2.220446049250313e-16,-1000000000000.0,1000.0];
class C54 extends /nupa\Sc/vms.constructor {
}
function F56(a58, a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a59;
    for (let v61 = 0; v61 < 5; v61++) {
    }
    this.g = 4;
}
function f62() {
    return v49;
}
class C63 {
    [v48] = v38;
    constructor(a65, a66) {
        f62();
        %PrepareFunctionForOptimization(f62);
        f62();
        f62();
        %OptimizeFunctionOnNextCall(f62);
        f62();
    }
    #b;
    [v50] = v45;
    1000;
    static [v48];
    #a;
}
for (let v71 = 0; v71 < 5; v71++) {
    function f72() {
        for (let i75 = 0, i76 = 10; i75 < i76;) {
        }
    }
}
