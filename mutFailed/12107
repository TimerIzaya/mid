function f0() {
    const o13 = {
        ..."-1211973842",
        __proto__: "-1211973842",
        [-206233.3040212181]: "-1211973842",
        ..."-1211973842",
        "a": -206233.3040212181,
        get c() {
            this[this] = -334.50392358724287;
            this.h;
            const o8 = {
                "maxByteLength": 65535,
            };
            const v10 = new eval(3036, o8);
            new Uint8Array(v10);
            return -206233.3040212181;
        },
    };
    return o13;
}
const v14 = f0();
let v15 = f0();
let v16 = f0(v14, v14, v14);
class C17 extends f0 {
    static p(a19, a20) {
        super.a -= this;
        v14[7] = a19;
        super[f0] = a20;
        return v14;
    }
    10;
    static get f() {
        ({"c":f0,"f":f0,"h":f0,...v15} = this);
        let v23 = 10000;
        v23++;
        v16 ** f0;
        v16++;
        Math.sqrt(v16);
        return v23;
    }
}
new C17();
new C17();
new C17();
new BigInt64Array(127);
new BigInt64Array(1153);
new Int16Array(-10);
class C41 {
    static {
    }
}
for (let v43 = 0; v43 < 25; v43++) {
    [601759695];
    const v45 = [1073741824,1073741823,1376142744,1073741825];
    function f46(a47, a48, a49, a50) {
        arguments.g = f46;
        for (let v52 = 0; v52 < 5; v52++) {
            try {
                arguments.g = v52;
            } catch(e53) {
            }
        }
        function f54() {
            return a47;
        }
        const v56 = new Int8Array();
        class C57 {
        }
        function f58(a59, a60) {
        }
        f58();
        v56.buffer;
        try { v45["valueOf"](); } catch (e) {}
        const o67 = {
            valueOf() {
            },
            get d() {
            },
        };
    }
    for (let v68 = 0; v68 < 5; v68++) {
        f46();
    }
}
