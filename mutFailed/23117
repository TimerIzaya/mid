let v0 = [];
const v3 = new BigInt64Array(5);
const v5 = v3[1294];
let v6;
try { v6 = v0.forEach(v5); } catch (e) {}
try { v6["m"](5, 5, 1294, 1294, v3); } catch (e) {}
function f9() {
    return v6;
}
const v11 = new Uint16Array(1294);
new Int32Array(2);
const t11 = "3";
delete t11[3];
v0 &&= v0;
const v18 = 5 instanceof BigInt64Array;
try {
    v11.__proto__ = v11;
} catch(e19) {
}
Object.defineProperty(v5, v18, { writable: true, configurable: true, enumerable: true, set: f9 });
new Int32Array(13);
new Uint8Array(1024);
try {
    new Uint16Array("m", 548708409);
} catch(e28) {
}
new Uint32Array(128);
gc();
