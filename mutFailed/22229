function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    a9 + a9;
    a11++;
    try {
        this.h = 4857;
    } catch(e14) {
    }
    try {
        this.c = a11;
    } catch(e15) {
    }
}
const v16 = new F6(4857, -1482823181n, -7, 4857);
v16.b = v16;
const v17 = new F6(v16, -4n, 4857, -7);
v17.b = v17;
new F6(v16, -4n, -7, 4857);
Uint32Array.BYTES_PER_ELEMENT = Uint32Array;
const v20 = new Uint32Array(Uint32Array);
const v21 = [1524942359,268435439,8,1,256,-11];
v21[1] = v21;
const t22 = -7;
new t22(v21);
const o23 = {
};
o23.c = o23;
function f24(a25, a26) {
    a25[2] = a26;
    BigInt64Array.BYTES_PER_ELEMENT = BigInt64Array;
    return v16;
}
o23.set = v16;
const v29 = new Proxy(v20, o23);
v29[2] = v29;
