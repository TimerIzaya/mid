[2,-4294967295,9007199254740991,257,536870887,2056960275,268435439,450059285];
const v1 = [-4294967295,268435441,2147483647,536870888,3,12,12];
const v2 = [65537,-14,31765,-1610112248,9007199254740992,32016,-268435456];
const v7 = ["MAX_VALUE","undefined",[v2,v1]];
[v1,"MAX_VALUE",v7,"undefined",v7];
[v2,"undefined",-35032];
[v2,["MAX_VALUE"],-35032];
/[[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]]/vim;
for (let i17 = 0; i17 < 10; i17++) {
    try { ("boolean").trimEnd(); } catch (e) {}
    try {
        const o25 = {
        };
    } catch(e26) {
    }
    for (let v29 = 0; v29 < 5; v29++) {
        function f30() {
            return ([-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0]).fill().includes();
        }
        f30();
        %OptimizeFunctionOnNextCall(f30);
    }
    class C40 {
        constructor(a42) {
            const v43 = this.constructor;
            try { new v43(); } catch (e) {}
            ("size").c;
            const t26 = /P[x\dz]*/gudmy;
            t26.multiline **= 1000;
            const v48 = ("size").g;
            ("size").length;
            let v50 = v48?.[7];
            [...v50] = "size";
            /a\bc/vd;
        }
    }
    new C40();
    function f53(a54, a55, a56) {
    }
    const o57 = {
    };
}
