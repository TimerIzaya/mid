function f0() {
    -4294967297 >>> -4294967297;
    const o15 = {
        "h": -689.6376153762385,
        p(a6, a7) {
            this.h -= -4294967297;
            return -4294967297;
        },
        "a": -5.0,
        "g": -5.0,
        3: -4294967297,
        "e": -5.0,
        o(a10, a11) {
            const o12 = {
                [-689.6376153762385]: -689.6376153762385,
                "a": this,
                "g": -4294967297,
            };
            this[Symbol.toStringTag] = this;
            return -689.6376153762385;
        },
    };
    o15[Symbol.toPrimitive] = f0;
    return o15;
}
const v18 = f0();
const v19 = f0();
const v20 = f0();
v20.toString = f0;
let v21 = 586399890;
v21--;
const v25 = [9.544027790583012];
const v27 = ([-541.8700259029788,1.0,0.03689751115811557,1.0,671.8283169086039,2.0,668399.4398906992,-2.2250738585072014e-308,-1000.0])[1];
const v28 = [NaN,876057.9378059141];
function F29(a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    function f33() {
        function f34(a35, a36) {
            Math.tan(9007199254740992);
            return v27;
        }
        return f34;
    }
    Object.defineProperty(this, "constructor", { configurable: true, get: f33 });
    a31 % a31;
    try { a32.entries(); } catch (e) {}
    try {
        this.b = a31;
    } catch(e42) {
    }
}
function f43() {
    return f0;
}
function f44(a45) {
    function f46(a47, a48) {
        return f46;
    }
}
Object.defineProperty(F29, "d", { writable: true, configurable: true, enumerable: true, get: f43, set: f44 });
F29.d = F29;
let v49 = new F29(1944394889, v28);
function f50(a51, a52) {
    ("aZ4O").normalize();
    return a51;
}
v49.constructor = f50;
const v55 = v49?.constructor;
try { new v55(v19, v19); } catch (e) {}
new F29(512, v28);
const v58 = new F29(1944394889, v25);
v58.b;
class C60 extends f0 {
    h = v28;
    o(a62, a63, a64) {
        v18[-1] = this;
        return a62;
    }
    static set f(a69) {
        e = v18;
        delete v28?.length;
        v49 <<= this;
    }
    static 144 = v21;
    static #f = f0;
}
new C60();
new C60();
new C60();
const v74 = [0.09625845130830724,-1e-15,0.40226168662621953];
const v75 = [-700765.6455759181,-1.0,-1e-15,238.56580086181475,-6.99438605118472e+307,0.8641795299038513,1000000000000.0,0.6448161003466354];
try { v75.with(v75, v75); } catch (e) {}
const v77 = [-1.7976931348623157e+308,585278.7631767453,-1.0,-2.0];
2124 - 2124;
const v84 = Array();
function f85(a86, a87, a88, a89) {
    a86 / a86;
    a88 === a88;
    const o92 = {
        [-9007199254740991]: 512,
        [a88]: v75,
        "b": a86,
    };
}
try { f85(v21, v19, v19, v19); } catch (e) {}
f85(4294967297, f85, 4294967297, 2124);
f85(2124, v77, v74, v77);
new Uint16Array(52);
const v101 = new Uint32Array(2128);
v101.toString = f43;
for (let v102 = 0; v102 < 100; v102++) {
    v102 >> v102;
    f85(512, v101, v101, v84);
}
for (let v105 = 0; v105 < 32; v105++) {
    try { ("p").localeCompare(v20); } catch (e) {}
}
