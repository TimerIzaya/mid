[-1073741824,13376,14];
const v4 = [11,-9,-2147483648,-1318566313,65535,-810138413,19863,-9223372036854775807,9,-1622822144];
const v5 = [-268435456];
const v6 = [-991034.5596759731,179.71649176762253,115582.55190338776,-1000000.0];
async function f8(a9, a10) {
    'use strict';
    a10[9] = v6;
    return -21133.120743932668;
}
function f11() {
    return v5;
}
class C12 {
    constructor(a14, a15, a16) {
        a15.e = a15;
        class C18 extends a15.constructor {
        }
        const v19 = new C18();
        try { v19(); } catch (e) {}
    }
    2 = v4;
    static set a(a22) {
        super.c = a22;
        function f23() {
            return a22;
        }
    }
    static p(a25, a26, a27, a28) {
        function F29(a31, a32) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.f = a25;
            } catch(e33) {
            }
            try {
                this.h = a27;
                function F35(a37, a38) {
                    if (!new.target) { throw 'must be called with new'; }
                    const v39 = this.constructor;
                    let v40;
                    try { v40 = new v39(); } catch (e) {}
                    -429.3290910931888 << v40;
                }
                new F35();
            } catch(e43) {
            }
            try {
                this.a = a28;
            } catch(e44) {
            }
        }
        new F29(a26, a26);
        new F29(a26, -4n);
        new F29(-57848n, -4n);
        return f11;
    }
}
new C12();
new C12();
new C12();
new Uint32Array(4096);
new Float64Array(512);
const v62 = new Float64Array(2690);
const v64 = new Int32Array();
function f65() {
    function F66(a68, a69, a70, a71) {
        if (!new.target) { throw 'must be called with new'; }
        new Uint8Array(208);
        const v76 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
        const v79 = new Int8Array();
        const o80 = {
            __proto__: v76,
            "g": Float64Array,
            ...v62,
            2147483647: v79,
        };
    }
    return F66;
}
v64.constructor = f65;
const v84 = new Uint8ClampedArray(129);
const v85 = new Int32Array(3208);
const t82 = v64.constructor;
new t82(v84);
Int32Array.from(v85);
const v89 = [];
function f90() {
    const o96 = {
        ...v89,
        "c": v89,
        "e": v89,
        get d() {
        },
        m() {
            const o93 = {
            };
        },
        "f": v89,
        set b(a95) {
        },
        "arguments": v89,
        __proto__: f90,
        [v89]: v89,
        "h": f90,
        ...v89,
        "d": v89,
        4169472433: v89,
        1000: f90,
    };
    v89.e = o96;
    65537 == 4096n;
    const v102 = new Int32Array(1024);
    for (const v103 of v102) {
        const o106 = {
            "maxByteLength": 1293466293,
        };
        new SharedArrayBuffer(1796, o106);
    }
    return o96;
}
f90();
function F110() {
    if (!new.target) { throw 'must be called with new'; }
}
const v113 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v114 = [601759695];
let v118 = -268435456;
v118++;
const o138 = {
    "c": -4294967297n,
    [522675525n](a121, a122) {
    },
    "c": v114,
    valueOf(a124, a125) {
        return this;
    },
    [-4294967297n](a127, a128, a129, a130) {
    },
    "maxByteLength": -4294967295,
    "arguments": v113,
    ..."Vre",
    valueOf(a132, a133) {
        return this;
    },
    4: "Vre",
    "type": "Vre",
    toString(a135, a136, a137) {
        return v113;
    },
    5: -4294967295,
    6: v118,
};
f90();
