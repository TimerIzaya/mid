class C3 {
    g;
    static {
        this.name = this;
        this.d = this;
        this[this] = this;
        try {
            this.d = this;
        } catch(e5) {
        }
    }
    static #a = 9007199254740992;
    #valueOf(a7, a8) {
        this + 9007199254740992;
        9007199254740992 / this;
        new Uint8Array(10);
        new Uint8Array(243);
        new Uint16Array(2);
        return Uint16Array;
    }
}
new C3();
const v21 = new C3();
v21.g;
const v23 = new C3();
v23.c = v23;
const v26 = 4294967297n ^ 4294967297n;
v26 ^ v26;
const v29 = /(?<a>.)\k<a>/gvdi;
try { v29.toString(); } catch (e) {}
/a$(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/gvdmsy;
const v33 = [63445n,/L}Ra\D\P{scx=Greek}a+Xa{?/giy];
try { v33.slice(9007199254740992, -9007199254740991n); } catch (e) {}
const v35 = [v23,v33,-28034,-9007199254740991n];
[9007199254740992,v35,-9007199254740991n];
const v37 = /1xyz{1,}?/gims;
const v38 = /h\p{gc=Nd}/vdy;
try { v38.exec(9007199254740992); } catch (e) {}
v38.b = v38;
const v40 = /\xf0\x9f\x92\xa9a*/us;
-(-23596);
-1;
function F46(a48, a49, a50, a51) {
    if (!new.target) { throw 'must be called with new'; }
    const v52 = this?.constructor;
    try { new v52(a50, this, a50, v35); } catch (e) {}
    a48.flags;
    a50 & a50;
    const v56 = this?.constructor;
    try { new v56(a49, 9007199254740992, a51, a49); } catch (e) {}
    a48.dotAll = a48;
    a50 - a50;
}
F46.arguments = F46;
F46.arguments = F46;
const v59 = new F46(v40, 1, -1263139894, F46);
v59.length = v59;
const v60 = new F46(v37, v40, -23596, v59);
v60.d = v60;
const v61 = new F46(v38, F46, -23596, 1);
const v64 = v61 | F46;
let v65;
try { v65 = v60(v40, v64, v64); } catch (e) {}
if (v65) {
    let v66;
    try { v66 = ("catch").codePointAt(v65); } catch (e) {}
    [,v66] = "iterator";
} else {
    new WeakSet();
}
