class C3 {
    constructor(a5) {
        function f6(a7, a8) {
            try {
                this.fuck("Rq", [C3,"Rq",this,a7,"undefined"], "Rq");
            } catch(e12) {
            }
            return C3;
        }
        a5.toString = f6;
        super[a5] = this;
        function F13(a15) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.c = a5;
            } catch(e16) {
                const t16 = "Z7aTF";
                t16["undefined"] = this;
                const v18 = Symbol.match;
                this[v18] = "Z7aTF";
                const o19 = {
                };
                new Proxy(v18, o19);
            }
            try {
                const t25 = "undefined";
                t25.b = 65537;
            } catch(e22) {
            }
            try {
                this.c = a5;
            } catch(e23) {
            }
        }
        new F13("Z7aTF");
        new F13("undefined");
        new F13(F13);
    }
}
const v27 = new C3(C3, 65537);
new C3(v27);
const v29 = new C3("Z7aTF");
const v30 = [1882719980,257,0,-2,65536,-1024,44928,7,1122218531];
const v31 = [256,-961787260,-59894,2147483648,65537,-13,268435456,-24478,-25420];
const v32 = [53567];
function F33(a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a36;
    try {
        this.b = "undefined";
    } catch(e37) {
    }
    try {
        this.f = a36;
    } catch(e38) {
    }
    try {
        this.c = a35;
    } catch(e39) {
    }
}
const v40 = new F33(v27, v29);
new F33(v40, v30);
new F33(v40, v31);
Math.d = v31;
const v44 = Math.d;
try { v44(v30, v32); } catch (e) {}
