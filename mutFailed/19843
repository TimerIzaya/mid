[-416.66332640008807,-6.859546940049079,-2.220446049250313e-16,4.0,5.194665594816006e+307,-7.548942330728304];
let v1 = [4.0,659593.0111494989,1.0,-283.62991483543885,4.0,-1000000000000.0,-721833.9285727768,1.7639232813622266e+307,0.859747751585547,-5.845746256439697e+307];
const v2 = [Infinity,-3.0,1e-15,-Infinity,-6.541947605049921e+307,5.758349551677118e+307,-139.50116921864742,1e-15];
new Array(31);
const v9 = new Int32Array(16);
new Uint16Array(128);
const v15 = new Uint8ClampedArray(v9);
const v16 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
const v17 = [3,-6,7268,-554513674,5,4294967295,861325878,17152,2147483647,5];
const v18 = [256,64];
let v21 = "UZ";
function f22(a23, a24, a25) {
    const o38 = {
        ..."-669555958",
        "e": v18,
        "c": v9,
        __proto__: a25,
        toString(a27, a28, a29, a30) {
            a25 instanceof a27;
            try { a30.trimEnd(); } catch (e) {}
            v1 >>>= a30;
            super.g = a25;
            Object.defineProperty(this, 7, { writable: true, configurable: true, enumerable: true, set: f22 });
            ({"length":v21,} = v2);
            new Date();
            return "-1024";
        },
    };
    return a24;
}
f22(v17, v17, "848379313");
const v40 = f22(v17, v16, v21);
const v41 = f22(v17, v40, v40);
try { v41.toString(); } catch (e) {}
f22(Array, v1, v9);
new v15();
const v56 = new Date();
-v21;
1073741824 - 1459564924;
try {
    const t40 = 31;
    t40.prototype = v15;
} catch(e62) {
}
const o63 = {
    "apply": Array,
    "construct": v41,
    "defineProperty": Date,
    "get": Date,
    "getOwnPropertyDescriptor": Array,
    "getPrototypeOf": Array,
    "isExtensible": Array,
    "ownKeys": Array,
    "set": Date,
    "setPrototypeOf": Array,
};
new Proxy(Date, o63);
try { new BigInt64Array(4096, Date, v21); } catch (e) {}
const v67 = new BigInt64Array(1073741824, BigInt64Array);
[-0.0,-2.0,-1e-15,2.0,-Infinity,2.220446049250313e-16];
const v69 = [873.3236504624783,-5.059538800838508];
v69[1] = v69;
v67["lastIndexOf"](4096, "lastIndexOf", "lastIndexOf");
const v73 = Symbol.toPrimitive;
Symbol.for(v56.description);
v21[v73];
