function f3(a4) {
    const o8 = {
        ...a4,
        get d() {
            const v6 = this.__lookupSetter__;
            try { v6(); } catch (e) {}
            return f3;
        },
    };
    function f9() {
        return o8;
    }
    function f10(a11) {
        const v14 = new Uint16Array(255);
        const v16 = v14.buffer;
        v16.slice(v16, 5);
    }
    Object.defineProperty(o8, "h", { writable: true, configurable: true, get: f9, set: f10 });
    return o8;
}
class C18 {
    #n(a20) {
        this && this;
        try {
            const v22 = /(Hab\b\d\bcd)/gimsy;
            this.fuck(v22, 1073741823, v22);
        } catch(e24) {
        }
        return 1073741823;
    }
    m(a26, a27, a28) {
        try {
            const o29 = {
            };
        } catch(e30) {
        }
    }
    toString(a32, a33) {
        a33 = this;
        [a32,58779,a32,this,4];
        new Set();
        return Set;
    }
}
new C18();
const v38 = new C18();
const v39 = new C18();
const v40 = /mv(?:a?)*/gui;
const v41 = /0a[a]/gvim;
const v42 = /\p{gc=Nd}\xed\xb0\x80/ud;
function f43(a44, a45, a46) {
    const o66 = {
        "h": 1073741823,
        "e": v40,
        n(a48, a49, a50, a51) {
            try { new a49(...58779, ...this, this, a44); } catch (e) {}
            super[a46];
            return 1073741823;
        },
        get a() {
            this[this] /= 4;
            new C18();
            const v56 = super[58779];
            try {
                v40.toString = v56;
            } catch(e57) {
            }
            const v58 = [-9007199254740991,536870888,51292,-2147483649];
            const v59 = [536870912,-124426018];
            const v60 = [23930,454087404,65536,-6,-1955199007,1,1073741824,14];
            const o65 = {
                "e": v58,
                "c": v59,
                [v60]: v60,
                "a": v60,
                [v58]: v60,
                get f() {
                    let {"h":v62,"length":v63,...v64} = v60;
                    this.toString = v62;
                    return v64;
                },
            };
            return v56;
        },
    };
    return o66;
}
const v67 = f43(v40, v42, v39);
"p" + 58779;
const v72 = f3(-3.9870582640049523, -3.9870582640049523, 1000000.0);
v72[127] = v41;
v72.h = v72;
v72[127] = -3.9870582640049523;
f43(v42, v67, v39);
0 == 268435440n;
function F77(a79) {
    if (!new.target) { throw 'must be called with new'; }
    const v80 = [-0.685155357392599,5.0];
    function F81(a83, a84, a85, a86) {
        if (!new.target) { throw 'must be called with new'; }
        const v87 = this.constructor;
        try { new v87(a84, F77, v87); } catch (e) {}
        function f89() {
            return [8n];
        }
        %PrepareFunctionForOptimization(f89);
        v80.length &= 1;
    }
    new F81();
}
f43(v39, v38, v39);
function F95() {
    if (!new.target) { throw 'must be called with new'; }
    const v98 = [this,this];
    [v98,1141300185,F95];
    let v100 = [this,1141300185];
    function f101() {
        return f3;
    }
    function f102(a103) {
        ("undefined").normalize("p");
    }
    Object.defineProperty(v100, "valueOf", { writable: true, enumerable: true, get: f101, set: f102 });
    Object.defineProperty(Math, "h", { configurable: true, value: v98 });
    v100++;
    class C109 {
    }
    const v110 = new C109();
    v110.constructor;
    const v112 = [1.9600488149280893e+306,468.9269702772963];
    ([Infinity,-686.9856326146617,0.47369378110968274,-7.24289104755818]).includes(...v112);
    Math.asinh(536870887);
    +this;
    Math.h = 1141300185;
    try {
        class C118 extends this.constructor {
            e = F95;
        }
        new C118();
    } catch(e120) {
    }
}
new F95();
new F95();
new F95();
const o124 = {
};
function F125() {
    if (!new.target) { throw 'must be called with new'; }
    function f127(a128) {
        class C129 {
        }
        let v130 = 3375;
        Math.tan(--v130);
        const v134 = [-256,13351,5138,2,-4294967295,1000,268435440];
        class C135 {
            constructor(a137, a138) {
                Math.atan2(v134);
            }
        }
        Object.defineProperty([58584,15,9007199254740990,2146023485], 65537, { writable: true, value: [46733,-268435456] });
    }
    const v144 = new Float64Array(5);
    function f145(a146, a147) {
        return f145;
    }
    new Float64Array(1073741823);
    const v150 = new Float64Array(v144);
    v144 ** v150;
    ([188439.8808918628,491144.33908044384,7.99804504476413,6.321598426193364e+307,-820860.9743012136,0.7234201729305241,-998514.8410675353,5.600912141333236]).toString();
    Math.log2();
    const v156 = Math.cosh();
    ([0,2147483647,9223372036854775807,9007199254740990,9007199254740990]).concat(v156);
}
const o160 = {
    get a() {
    },
};
function f161() {
    class C162 {
        #valueOf(a164, a165, a166, a167) {
        }
    }
    const o209 = {
        valueOf(a169, a170) {
            ([188439.8808918628,491144.33908044384,7.99804504476413,6.321598426193364e+307,-820860.9743012136,0.7234201729305241,-998514.8410675353,5.600912141333236]).toString();
            for (let v174 = 0; v174 < 25; v174++) {
                const v175 = [601759695];
                const v176 = [1073741824,1073741823,1376142744,1073741825];
                function f178(a179, a180, a181, a182) {
                    try { new a179(); } catch (e) {}
                    a181 << a181;
                    function f186() {
                        return a179;
                    }
                    const v188 = new Int8Array();
                    const v191 = BigUint64Array * 536870887;
                    v191 - v191;
                    Number.isNaN(v191 ** v191);
                    function f196(a197, a198) {
                    }
                    try { f196(); } catch (e) {}
                    const v200 = v188.buffer;
                    const v201 = v200.__defineGetter__;
                    try { v201(); } catch (e) {}
                    Object.defineProperty(v200, "constructor", { writable: true, configurable: true, value: Date });
                    %OptimizeFunctionOnNextCall(f186);
                    let v204;
                    try { v204 = v176["find"](..."find", a182, ...v175); } catch (e) {}
                    const o205 = {
                    };
                    o205.e = o205;
                    v204 <= a181;
                    return arguments;
                }
                for (let v207 = 0; v207 < 5; v207++) {
                    f178(C162, v207, v207);
                }
            }
        },
    };
}
