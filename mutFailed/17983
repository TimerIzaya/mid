function f0() {
    const v5 = new Uint16Array();
    const v6 = v5[124];
    const o7 = {
    };
    const o28 = {
        4: 65535,
        "f": 65535,
        "h": 1.0,
        "c": 1.0,
        "e": 65535,
        "b": -0.0,
        o(a9) {
            Object.defineProperty(this, "e", { writable: true, configurable: true, enumerable: true, value: this });
            function f11() {
                return f11;
            }
            v6 - v6;
            class C14 extends Set {
            }
            new C14();
            Math.log(1.0);
            +a9;
            const v19 = 1.0 * -14;
            const v20 = Math.expm1(v19);
            const v24 = new Float32Array(5);
            v24.indexOf(255);
            Math.hypot(v19);
            -0.0 ** a9;
            return v20;
        },
    };
    return o28;
}
(3.0).toExponential(64);
("4294967296").toLocaleUpperCase();
const v34 = f0();
f0();
const v36 = f0();
const v37 = /iN(?<=)U/gvds;
/[^H]/uims;
/(?<=a)o/vdim;
const v43 = 512 ^ 512;
Math.tan(~10 >>> v43);
function f51() {
    return v37;
}
[1073741824,9223372036854775807,[v36,v36,true],5,v34];
[5];
const v55 = [927716.746385878];
const v59 = new BigUint64Array(10);
("h").split(65535);
const v65 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v67 = new Uint32Array();
function f69(a70, a71, a72, a73) {
    const v74 = a70.constructor;
    let v75;
    try { v75 = v74(); } catch (e) {}
    const v76 = v75?.constructor;
    let v77;
    try { v77 = v76(); } catch (e) {}
    function f78() {
        ("Vre").charAt(v77).blink();
        ("Vre").codePointAt(v65);
        const o90 = {
            [-4294967297n](a84, a85, a86, a87) {
                eval();
            },
        };
    }
    f78();
}
for (let v92 = 0; v92 < 10; v92++) {
    f69(v67);
}
const v94 = ["db",6];
Reflect.apply(v55.indexOf, v59, v94);
