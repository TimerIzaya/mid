const v2 = new BigUint64Array(127);
const v5 = new Uint8Array(3059);
new Float64Array(4);
class C9 {
    #p(a11, a12, a13) {
        return ++a11;
    }
    301204669 = v5;
    static 1073741824;
    static 0 = v2;
    e;
}
const t12 = 127;
new t12();
new C9();
new v5();
const v21 = [];
const v22 = [4,v21];
function F23(a25) {
    if (!new.target) { throw 'must be called with new'; }
}
class C26 extends F23 {
    valueOf(a28, a29, a30, a31) {
        super[this] = F23;
        const v34 = new SharedArrayBuffer(945);
        new Int16Array(v34);
    }
}
const v37 = new C26();
const o44 = {
    set g(a39) {
    },
    [v22](a41, a42, a43) {
    },
};
v21.length = 65535;
for (const v46 in o44) {
    let v47;
    try { v47 = v22(v37, v46, v22, v46); } catch (e) {}
    let v48;
    try { v48 = v47(v47, v37, v46); } catch (e) {}
    try {
        v47.h = v48;
    } catch(e49) {
    }
    try { v37.valueOf(); } catch (e) {}
}
do {
    let v54 = "async";
    const o55 = {
        "execution": v54,
        "type": "minor",
    };
    gc(o55);
    v54++;
} while (0 < 5)
