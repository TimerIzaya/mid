const v2 = new Uint32Array(3);
const v5 = new BigInt64Array(209);
const v8 = new BigInt64Array(201);
class C9 extends Uint32Array {
    get a() {
        super[BigInt64Array] = this;
        let [v11] = v8;
        return v2;
    }
    static #p(a13, a14, a15) {
        try {
            a15.b = C9;
        } catch(e16) {
        }
        return Uint32Array;
    }
    static set g(a18) {
        let v23 = this >>> this;
        Math.log10(v5);
        const v25 = v23++;
        Math.round(3);
        v25 + 65535;
        !v23;
    }
    static [3];
    [v5];
    g;
    static #d = v5;
}
new C9();
const v32 = new C9();
{
    const v34 = Symbol.iterator;
    const o43 = {
        [v34]() {
            let v36 = 10;
            const o42 = {
                next() {
                    v36--;
                    const v40 = v36 == 0;
                    const o41 = {
                        "done": v40,
                        "value": v36,
                    };
                    return o41;
                },
            };
            return o42;
        },
    };
}
const v44 = new C9();
const v47 = [];
const v49 = ("d").strike(v47, "d");
try {
    v47.length = v49;
} catch(e50) {
    const o51 = {
        __proto__: v8,
        1868787412: C9,
        [v44]: v2,
    };
}
new Uint16Array(127);
let v55 = new BigInt64Array(1);
new Float32Array(60);
class C60 {
    static #c;
    constructor(a62, a63, a64) {
        for (let v65 = 0; v65 < 25; v65++) {
            ("buffer")["search"](..."buffer", ..."search", ..."search", 255, ..."search");
            const o72 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o72);
        }
    }
}
new C60();
const v75 = new C60();
new C60();
[601759695];
delete C9?.g;
let v81 = 268435440;
++v81;
--v55;
const v87 = new Float32Array(-450746.69945373747, C60, Math.log(1073741825), BigInt64Array, BigInt64Array, 201);
f = v75;
let v88;
try { v88 = v49(Float32Array, v32, v75, -450746.69945373747); } catch (e) {}
v88 = v5;
v87.length;
--v55;
