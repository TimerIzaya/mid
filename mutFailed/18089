class C3 {
    [-2147483648] = 81390077;
    constructor(a5, a6) {
        const v7 = super.g;
        super.c = v7;
        v7.__proto__;
    }
    static #g;
    [81390077];
    h = -256;
    #a = 81390077;
    #g;
    o(a13, a14, a15) {
        for (let v21 = 0; v21 < 32; v21++) {
            break;
        }
    }
}
const v23 = new C3(81390077, -2147483648);
const v24 = new C3(v23, -2147483648);
const v25 = new C3(v23, v23);
function F26(a28, a29, a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a29;
    } catch(e32) {
    }
    try {
        this.a = a28;
    } catch(e33) {
    }
}
new F26(C3, v23, -2147483648, v23);
new F26(v23, v24, -2147483648, v24);
new F26(v25, v23, -256, v25);
new Uint32Array(963);
new Uint8Array(189);
new Int8Array(255);
function f47() {
    for (let v48 = 0; v48 < 5; v48++) {
        const v49 = [1073741824,1073741823,1376142744,1073741825];
        for (let v50 = 0; v50 < 5; v50++) {
            const v51 = v49;
            v51[3];
            v49[32] = 56;
            new Float64Array(v49);
            gc();
            const o61 = {
                [-206.79565552697056]: 352693014,
                get g() {
                },
                "g": -206.79565552697056,
            };
            try {
                Math.ceil(("find" + 15) / 15);
            } catch(e67) {
            }
            try { v49["find"](); } catch (e) {}
        }
    }
    new Uint8Array(10);
    Array(963);
    return 56;
}
f47();
%OptimizeFunctionOnNextCall(f47);
f47();
