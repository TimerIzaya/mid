function f0() {
}
class C1 {
    constructor() {
        function f3() {
            return this;
        }
    }
    static #o() {
        try {
            this.h = this;
        } catch(e5) {
        }
        return this;
    }
}
const v6 = new C1();
new C1();
new C1();
function F9(a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = f0;
    } catch(e12) {
    }
}
const v13 = new F9(F9);
new F9(F9);
new F9(v13);
const v19 = [];
function f20() {
    const o22 = {
        p() {
            return f20;
        },
        [v19]: v19,
        "a": "bxlR6",
    };
    return v6;
}
const v23 = F9();
let v24 = f20();
const v25 = f20();
[65536];
const v27 = [-267,-4,-32045,-4];
[14,268435441,-9223372036854775807];
try {
    new Float64Array(-9007199254740992);
} catch(e33) {
}
new Float64Array(14);
const v37 = new Uint8ClampedArray(14);
let v38 = 218;
const v40 = new BigInt64Array(v38);
let v41;
try { v41 = v40.sort(f20); } catch (e) {}
try { v41(v24, v41, F9, ...v37, v23, ...v23); } catch (e) {}
const v43 = (a44, a45) => {
    a45?.g;
    v24 = v27;
    v25 * a45;
    return 14;
};
const t63 = "object";
t63[5] = v37;
v13.a;
const v55 = v6 & Uint8ClampedArray;
let v56 = --v38;
let v57 = -31986 && v55;
+v25;
++v57;
Math.random();
v56--;
