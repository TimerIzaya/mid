function f3(a4) {
    a4 % a4;
    const o10 = {
        ...f3,
        ...1.0,
        15: 103.0240725479523,
        "e": 103.0240725479523,
        set a(a7) {
            try {
                this.valueOf = a7;
            } catch(e8) {
            }
            try {
                this.valueOf = 103.0240725479523;
            } catch(e9) {
            }
        },
    };
    o10[15] = o10;
    return 1.0;
}
f3(1.0);
f3(2.220446049250313e-16);
f3(2.220446049250313e-16);
10 >> 10;
new Uint32Array(10);
const v20 = new Uint8Array(1000);
try { v20.filter(10); } catch (e) {}
new Uint32Array(128);
(128)[113];
function F26() {
    if (!new.target) { throw 'must be called with new'; }
    const v28 = this?.constructor;
    try { new v28(); } catch (e) {}
}
try { new F26(); } catch (e) {}
class C34 extends 128 {
}
const v35 = new C34();
const v38 = 65536 | "undefined";
v38 << v38;
Math.log2(v38);
const v42 = ["function"];
try { v42.reduce(Reflect); } catch (e) {}
const v44 = ("b").localeCompare;
v44.name = v44;
const v45 = Reflect.apply(v44, v35, v42);
v45 % v45;
