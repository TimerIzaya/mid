[28401,268435456,257,268435440];
[-4294967295];
[-61435,14,5,-1];
"boolean" == "boolean";
const t0 = "76X";
t0.f = "76X";
let v7;
try { v7 = ("76X").lastIndexOf("boolean"); } catch (e) {}
v7 >>> v7;
let v10;
try { v10 = ("MIN_VALUE").blink(); } catch (e) {}
let v11;
try { v11 = v10.strike(); } catch (e) {}
v11[1] = "MIN_VALUE";
const t14 = "number";
t14[4] = "number";
let v14 = 65535;
const v15 = v14++;
class C18 {
    static {
        try { new this(); } catch (e) {}
        function f21(a22) {
            try {
                a22.h = v7;
            } catch(e23) {
            }
            return a22;
        }
        f21.length;
        let v25;
        try { v25 = C18(f21); } catch (e) {}
        v25.prototype = v25;
        this.toString = f21;
        const v26 = super[this];
        try { v26.join(C18, C18, v26); } catch (e) {}
    }
}
try { C18(); } catch (e) {}
try { new v15(); } catch (e) {}
try { ("MIN_VALUE").constructor(); } catch (e) {}
