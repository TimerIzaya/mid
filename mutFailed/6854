function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = -410435841;
    } catch(e3) {
    }
}
new F0();
new F0();
const v6 = new F0();
v6.a;
/(\1a)Fi(?<a>)/guis;
/t\1\2(a(?:\1(b\1\2))\2)\1/gvdy;
/((\xed\xa0\x80))\x02/gudsy;
[-1.0,0.11964092415515093,1000000000.0,-3.8787930067422565,1.7976931348623157e+308,-1.1469517906705969e+308,1.7976931348623157e+308,-590693.0043042733];
const v12 = [2.2250738585072014e-308,-722014.905994377,Infinity,1000000000000.0,1.7976931348623157e+308,1000000.0];
try { v12.pop(); } catch (e) {}
[3.0];
function f16(a17) {
    return a17;
}
class C18 {
}
const v19 = new C18();
try { v19.valueOf(); } catch (e) {}
("a")[0];
function F25(a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    const v29 = this.constructor;
    try { new v29("a"); } catch (e) {}
    try { a27.valueOf(); } catch (e) {}
    try {
        this.f = "-2147483648";
        9n >> 9n;
    } catch(e34) {
    }
}
F25.length;
F25.arguments = F25;
const v36 = new F25();
new v36();
const v38 = [C18,C18];
const v39 = [v19,v38,v38];
const v40 = [2.2250738585072014e-308];
function F41(a43, a44, a45) {
    if (!new.target) { throw 'must be called with new'; }
    a44.groupToMap(f16);
}
const v47 = new F41(2.2250738585072014e-308, F41, v39);
new F41(v38, v47, v40);
