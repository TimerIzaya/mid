const v0 = [8.33757452380177,2.0,827661.8540950541,-849.4377900514871,578968.6495343696,1000000000.0];
const v1 = [-2.2250738585072014e-308,0.4050943524638475,-1.5425591043548785e+308,-2.2250738585072014e-308];
const v2 = [8.07026419977945e+307,5.0,3.0,1000000000.0,-1000000000000.0,-174.7779614560385,2.0];
function f3() {
    return v1;
}
class C4 extends f3 {
    m(a6, a7) {
        class C9 {
        }
        for (const v13 of Array(4087)) {
        }
        const v14 = new Error(a7);
        try { new a7(v14, v2, v1, v2, this); } catch (e) {}
        new Int32Array(2917);
        ("p").strike("p", "p", "p", "p");
        new Set();
        this[v2];
        return v14;
    }
    static 3;
    static [v1] = v2;
    constructor(a25, a26) {
        for (let i = 0; i < 10; i++) {
            this[this];
        }
    }
    #d;
    g = v1;
    [v0];
    static {
        this[Symbol.hasInstance];
    }
}
function F32() {
    if (!new.target) { throw 'must be called with new'; }
    for (let [v35,v36,v37,v38] of F32) {
    }
}
new C4();
new C4();
0 == 268435440n;
new Float32Array(260330366);
new C4();
/[\0]/gudimy;
/W/ud;
const v55 = /Y\cA/my.constructor;
try { new v55(); } catch (e) {}
new Uint16Array(1024);
const v61 = new Date();
v61.toLocaleString();
