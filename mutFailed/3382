let v1 = 3.0183584246151103;
v1 /= -1.7976931348623157e+308;
const v6 = -0.0 ^ -0.0;
const v7 = -1.7976931348623157e+308 % -1.7976931348623157e+308;
Math.pow(-0.0, -1.7976931348623157e+308);
const v9 = Math.pow(v6, 512);
const v12 = new Int16Array(64);
new Float32Array(228);
const v18 = new Uint16Array(3);
v18["find"]("find", v12);
%VerifyType(v1);
try { v18.set("find", v9); } catch (e) {}
0.0 || v7;
(0.0 / 0.0) << 39262;
Math.log2(-689880500 % -689880500);
Math.round(39262);
function F36() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -1052649622;
        const v41 = -(-7);
        Math.tan(v41 ** v41);
    } catch(e44) {
    }
}
function F45(a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    const v49 = this.constructor;
    v49.length = v49;
    let v50;
    try { v50 = new v49(F36, a47, F36, v49); } catch (e) {}
    const v51 = new F36();
    [] = v18;
    const t33 = "find";
    t33[228] |= v50 &= Uint16Array;
    let v52;
    try { v52 = v51.raw(this); } catch (e) {}
    v52 / a47;
}
function f54(a55, a56, a57, a58) {
    const o59 = {
    };
}
f54(-9007199254740992);
