const v6 = new Float32Array(5);
let v8 = Int16Array;
new v8(3);
new Int32Array(16);
[];
/[^m\P{Decimal_Number}]/vdis;
const v15 = /IlY+/gvi;
/a.Aa\Sc/gdis;
Uint8Array.e = Uint8Array;
function f21(a22, a23) {
    const o25 = {
        get c() {
            let v24 = this;
            v24 += v24;
            return a23;
        },
        "b": -65537n,
        __proto__: a22,
        ...a22,
        "a": a23,
        6: 4294967297n,
        "c": 4294967297n,
    };
    return o25;
}
const v26 = f21(f21, -65537n);
const v27 = f21(f21, f21);
class C28 extends f21 {
    set e(a30) {
        const v31 = v27.h;
        let {...v32} = v27;
        Reflect.construct(v31, [4294967296n]);
    }
}
const v36 = new C28();
try {
    v36.n(-65537n, v36, 4294967297n, 4294967297n, v26);
} catch(e38) {
}
[0.08010111047823043,-4.744834023778763,-696724.6962893101];
[-383.4276385640136,1000.0,-4.0,843.7391443565612,0.09686164534519881,1.7976931348623157e+308];
[-5.335929125075487,-3.0,512263.84055016795,0.5167258464079596,-1e-15,1000000000000.0];
function f42() {
    const v43 = delete v27[268435456];
    let {"buffer":v44,"byteOffset":v45,"length":v46,} = v6;
    v44[v6] = v43;
    const t46 = 4294967297n;
    t46[8] = v44;
    const o49 = {
        "maxByteLength": 16,
    };
    const v51 = new ArrayBuffer(16, o49);
    const v53 = new Float32Array(v51);
    const v56 = Array(4087);
    f42 = Float32Array;
    v46 && v53;
    try {
        v51.__proto__ = v15;
    } catch(e58) {
    }
    v56[4037] = v56;
    for (const v59 of v56) {
    }
    return Array;
}
%PrepareFunctionForOptimization(f42);
f42();
%OptimizeFunctionOnNextCall(f42);
f42();
[1.0,-1e-15];
const v71 = new Int32Array(1024);
for (const v72 of v71) {
    const o74 = {
    };
    gc(o74);
    new SharedArrayBuffer(1024);
    v8--;
    new BigInt64Array(4058);
    new Uint8Array(589);
    new Float64Array(4096);
}
[-0.0,-1.7976931348623157e+308,-489.77802497654045,1.0938120903342002e+308,-2.220446049250313e-16,0.4743333406861504,0.0,-4.0];
const v90 = new Int8Array();
class C92 extends Uint8Array {
    constructor(a94, a95) {
        super(a94);
        try {
            v90.length = 415075273;
        } catch(e97) {
        }
    }
}
[-1000000000000.0,-1.7976931348623157e+308,-1.0,-4.0];
for (let v103 = 0; v103 < 10; v103++) {
}
class C105 {
}
class C106 extends C105 {
    get f() {
        for (const v108 of C105) {
        }
    }
    valueOf(a110, a111, a112, a113) {
    }
    constructor(a115, a116) {
        for (let i = 0; i < 10; i++) {
        }
    }
}
