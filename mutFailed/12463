class C3 {
    ["-1"];
    static #p(a5, a6) {
        [1000000000000.0,0.8194606911600938,1000000.0,-5.0,9.22955042588837,5.0,-595514.183502984,-1.6473776976054605e+308,-0.0];
        [164.72571956558727,293303.7516128111,-1.713979838443223e+308,0.6364200411646236];
        [564.4490434079221,-623.7144163077621,-1.0];
        new Uint16Array(10);
        new Int8Array(2607);
        new Uint16Array(16);
        return "61370";
    }
}
const v19 = new C3();
const v20 = new C3();
const v21 = v20?.constructor;
try { new v21(); } catch (e) {}
const v23 = new C3();
class C24 {
    static #d = v23;
    [C3];
    h;
    ["-1"] = "-1";
    static 701;
    15 = C3;
    static #g = "61370";
    static #p(a26, a27, a28) {
        v23 * a28;
        [128,-12,55171,-2147483648,42861,2083399514];
        [15,-65535];
        [-1415947782];
        return a28;
    }
    p(a34, a35, a36) {
        C3[a35] ^= C3;
        super[v20] = v20;
        function f37() {
            const v39 = new ArrayBuffer(ArrayBuffer, ArrayBuffer);
            return v39;
        }
        %OptimizeFunctionOnNextCall(f37);
        f37();
        super.c;
        [-7782,3,128,257];
        [-149167750,-9223372036854775808,129];
        [-1436427083,1575165732,-30127,14,-13,1340761033,3,-4294967297,45486];
        return v19;
    }
}
new C24();
const v46 = new C24();
const v47 = new C24();
v47[15];
-4294967296 % -4294967296;
class C56 {
    static {
        this.prototype = this;
        const v58 = [];
        try { v58.isPrototypeOf(129); } catch (e) {}
        try {
            super.setInt8();
        } catch(e61) {
        }
    }
}
const v62 = new C56();
const v63 = v62?.constructor;
try { new v63(); } catch (e) {}
const t67 = [v62];
t67[7] **= 512;
let v66 = -256;
v66--;
const t70 = "NEGATIVE_INFINITY";
t70.toString = v66;
Uint8Array.prototype = Uint8Array;
new Uint8Array(268435440);
const v71 = [3.0,-533.6058053075066,-3.0,-Infinity,9.77162142398339,-6.974865860269324,0.0,-1.7976931348623157e+308,1000000.0];
function F72() {
    if (!new.target) { throw 'must be called with new'; }
}
class C74 {
    constructor(a76, a77, a78) {
        try { this.propertyIsEnumerable(v71); } catch (e) {}
        const v80 = a76?.bind;
        try { new v80(v46); } catch (e) {}
        a77.e = a77;
        const v82 = a77.constructor;
        try { v82.prototype(); } catch (e) {}
        class C84 extends v82 {
        }
        const v85 = new C84();
        try { v85(); } catch (e) {}
    }
}
C74.d = C74;
new C74(F72, C74);
