const v2 = new Int32Array(16);
let v4 = delete v2?.h;
const v5 = v4.__proto__;
v4 = null;
class C7 {
}
const v8 = new C7();
const t7 = v8.constructor;
const v10 = new t7();
const v11 = v5?.constructor;
let v12;
try { v12 = v2.toLocaleString(v2, v11, v8); } catch (e) {}
v12.charCodeAt(v10);
const v15 = new Int16Array(64);
new Float64Array(3250);
[[3250,Float64Array,Float64Array,Float64Array,3250],Int16Array,16];
[Int16Array];
const v22 = [1354185297,-1187772013,1073741823,7,-13,8,-473031863,-1332151602];
const v25 = ("h").split();
const o88 = {
    [null]() {
        const v27 = [];
        class C28 {
            constructor(a30, a31) {
                let v29 = this;
                try { a30.findLast(); } catch (e) {}
                a30[2];
                const v34 = /W(jy2)/udy;
                const v36 = new Uint8Array();
                try { v36.reduceRight(); } catch (e) {}
                for (let v38 = 0; v38 < 250; v38++) {
                    const o81 = {
                        ...v36,
                        [v22](a40, a41, a42) {
                        },
                        get e() {
                            return v15;
                        },
                        "h": v25,
                        m(a45) {
                            try { a45.next(a45, v38); } catch (e) {}
                            a45.c = a45;
                            a45.h = a45;
                            const o47 = {
                            };
                            o47.h = o47;
                            o47.h = o47;
                            function f48(a49, a50, a51) {
                                return o47;
                            }
                            f48.caller = f48;
                            try {
                                o47.e = v38;
                            } catch(e52) {
                                const v55 = new Uint8ClampedArray(798, v38, e52);
                                new Uint8ClampedArray(798, ...v55, o47);
                            }
                            try {
                                const o57 = {
                                };
                                o57.e = v38;
                            } catch(e58) {
                            }
                            let v60;
                            try { v60 = ("EV").link(); } catch (e) {}
                            let v61 = 0;
                            class C62 {
                            }
                            const v65 = new Int8Array(3938);
                            let v66 = 3;
                            let v67 = 0;
                            let v68 = v67 >> v67;
                            for (let i = 0; i < 5; i++) {
                                [...v66] = v65;
                                v67++;
                            }
                            const o70 = {
                            };
                            try {
                                let v71 = 0;
                                for (let i = 0; i < 5; i++) {
                                    ({"c":v29,"d":v61,...v68} = v60);
                                    try {
                                        o47.fuck(64, a45);
                                    } catch(e73) {
                                    }
                                    v71++;
                                    v71 < 5;
                                }
                                const o77 = {
                                };
                            } catch(e78) {
                            }
                            return Int8Array;
                        },
                        get f() {
                            super.n();
                        },
                    };
                }
                for (let v82 = 0; v82 < 5; v82++) {
                    -v82;
                    ("p")[0];
                    v25["p" + v34] = v82;
                }
            }
        }
        new C28(v27);
    },
};
o88.null();
o88.null();
