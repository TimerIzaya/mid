[1.4320189449376347e+308,-114685.00034748216,-5.0,5.150254329457365e+306,-1e-15,0.9029986049038805,0.7033694336580234,-1000.0,0.5428219831999717,-1000000000000.0];
for (let i9 = 0, i10 = 10; i9 < i10; i9++, i10--) {
    const o18 = {
    };
    new Proxy("slice", o18);
}
try {
} catch(e21) {
}
function F23(a25, a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    const v29 = this.constructor;
    try { new v29(a25); } catch (e) {}
    this.c = a25;
}
new F23(-1.093925554716035e+308);
[0.10998215932881372,4.0,2.2250738585072014e-308,-2.220446049250313e-16,5.944669530902907,0.9233932965025766,3.8882388521157627e+307,5.0,436792.7443239349];
[-1000000000000.0];
new Int8Array(257);
new Uint32Array(4);
new BigInt64Array(64);
Math.cos(-1567809689);
([NaN,3.0])["concat"](-483497369);
function f51() {
    new Uint16Array(257, 4);
    class C56 {
        4294967296 = 996195971n;
    }
    new C56();
    return -172798652;
}
const v60 = new BigInt64Array(5);
const v62 = [-536870912,8,9007199254740992,-461574414,3,-268435456,-536870912,65535,-1713660255,128];
function F63() {
    if (!new.target) { throw 'must be called with new'; }
    let v64 = this;
    try {
        v64.b = -1052649622;
        %VerifyType(Math);
        v64++;
        const v72 = -(-7);
        Math.tan(v72 ** v72);
    } catch(e75) {
    }
}
v60.toLocaleString(3088, v62);
%OptimizeFunctionOnNextCall(f51);
f51();
