new Int16Array(10);
new BigUint64Array(257);
new Uint8ClampedArray(8);
let v12 = 4.0;
let v14 = 1511 - 1511;
let v15 = 0;
do {
    typeof v15 === "string";
    v15++;
} while (v15 < 7)
let v22 = 0;
do {
    v14 = v12;
    v22++;
} while (v22 < 10)
const v28 = new Uint16Array(3327);
const v29 = [-2038832922,-14];
v28.set(v29);
const v38 = new Uint16Array(6);
const v41 = new Float64Array(127);
gc();
new Int16Array();
const t22 = 10;
const v47 = new t22();
new Uint8Array(v47, Uint8Array, Uint8Array);
new Uint16Array(1000);
function f53() {
    const o57 = {
        1: 8,
        "b": v29,
        m(a56) {
            return a56;
        },
        __proto__: 946.0676210033328,
    };
}
f53();
v41[127] = 127;
v38[536870888] = -1876875593;
try {
    v41.values();
} catch(e60) {
    const v61 = e60?.a;
    try { v61(e60, v61, v61, v61); } catch (e) {}
    function F63(a65, a66, a67, a68) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.b = 2.220446049250313e-16;
        } catch(e69) {
        }
    }
    new F63(F63, 8, 127, e60);
    const v71 = new F63(52235, 6, -1876875593, Uint16Array);
    new F63(v71, 6, 1000, Uint16Array);
    const v76 = new Int8Array(3816);
    for (const v77 of "some") {
        const v78 = v76[1];
        let [,,,...v79] = v76;
        const o80 = {
        };
        o80.a = v78;
        const o81 = {
        };
        o81.a = v78;
    }
}
%PrepareFunctionForOptimization(f53);
v12 = -451445.2180572981;
new Uint16Array(v41, 52235, -1876875593);
[5.0,2.0,3.0,-5.0,-Infinity,-Infinity,-1000000000000.0,-1000.0,1.376168649206787e+308,-1.358835502853269e+307];
[-0.0];
[168657.71228409093,-4.0,0.1621003938548332,1.266976474544551e+308,1.448408401622828,0.0,-1.7976931348623157e+308,-1.7976931348623157e+308,0.9860570426566385];
f53();
