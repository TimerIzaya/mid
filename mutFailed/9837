const v6 = [8,24920n,24920n];
const v7 = Reflect.construct(-9223372036854775807n, v6, 1717751235);
const v8 = v6[0];
%VerifyType(8);
function f10() {
    return 24920n;
}
for (const v13 of v7) {
}
new Uint32Array(3714);
new BigUint64Array(10);
new Float32Array(3);
const v24 = [-1.7976931348623157e+308,1.567547754457685];
for (let [v25] of v6) {
    v25 ^ BigUint64Array;
}
const v28 = [v8];
Reflect.apply(v6.find, v8, v28);
const v32 = new Uint32Array(v24, v24, Uint32Array);
const t19 = v32.constructor;
new t19(v24);
