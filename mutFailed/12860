/nupa\Sc/vms.constructor;
class C4 {
}
for (let v6 = 0; v6 < 25; v6++) {
    function f7(a8, a9, a10, a11) {
        for (let v12 = 0; v12 < 10; v12++) {
            v12 * v12;
            C4.__proto__ = a10;
        }
        return f7;
    }
    for (let v14 = 0; v14 < 5; v14++) {
        f7();
    }
}
function f20(a21, a22, a23, a24) {
    const o56 = {
        "g": a21,
        __proto__: a21,
        o(a26, a27, a28, a29) {
            const v30 = [1000000000.0,1.0,1.33700765354115,3.759383313252208,0.7953224416766568,9.060355110242564e+307,1.7976931348623157e+308,1.7976931348623157e+308,2.220446049250313e-16];
            function F31(a33, a34, a35) {
                if (!new.target) { throw 'must be called with new'; }
                const v37 = new Int8Array(-1979021151);
                let v38 = 3;
                [...v38] = v37;
                class C39 {
                }
                async function f40(a41, a42, a43, a44) {
                    return (await C39).call();
                }
                const v47 = f40.call(C39, C39, f40, f40, f40);
                v47.then(f40, v47, v47, v47, v47);
                const v49 = this.constructor;
                try { new v49(a34, a33, a35); } catch (e) {}
                a35 + v30;
                try {
                    a22.b = v30;
                } catch(e52) {
                }
            }
            class C53 extends F31 {
                512 = v30;
            }
            new C53();
            this[a26] = a28;
            a28 >> a29;
            a21[a29] &&= a29;
            return F31;
        },
        [a24]: -1979021151,
        "h": 4294967297,
    };
    return o56;
}
f20(-4n, -11569n, -5760, -11569n);
const v58 = f20(f20, -11569n, 4294967297, 10n);
function f59(a60, a61, a62) {
    return a61;
}
([-1000000000000.0,-1.7976931348623157e+308,294500.85018206923,-Infinity,-0.0,-7.010036940344757e+307,1.0,-Infinity,-1000.0,-1.1645821156926988e+308]).reduce(f59);
const v68 = f20(-1979021151, -4n, -1979021151, -11569n)[0];
for (let v69 = 0; v69 < 100; v69++) {
    f20(v68, -5760, 10n, -11569n);
}
const o73 = {
    "maxByteLength": 64,
};
const v75 = new v58(64, o73);
const v77 = new Uint8ClampedArray(v75);
const v78 = v77.valueOf();
v78.split(v78);
try {
const t0 = 1073741825n;
t0();
} catch (e) {}
const v83 = 127 != 127;
const v84 = [];
function f85() {
    const o87 = {
        p() {
            return f85;
        },
        [v84]: v84,
        "a": v84,
    };
    const v88 = o87?.constructor;
    try { new v88(v83); } catch (e) {}
    return v84;
}
f85();
