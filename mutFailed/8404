9 - 9;
const v6 = new Uint16Array(9);
new Int32Array(3098);
12 + 12;
new Float32Array(12);
function f14(a15, a16) {
    a15 / a15;
    -(a15 * a15);
    const o24 = {
        "h": a15,
        141: a16,
        "c": Uint16Array,
        "g": v6,
        get b() {
            super[this] = this;
            const v21 = super[a16];
            try {
                new Int32Array(this);
            } catch(e23) {
            }
            return v21;
        },
    };
    o24[141];
    o24.d = o24;
    return o24;
}
f14(4096n, 3098);
f14(4096n, 12)[141];
const v29 = f14(4096n, 9);
v29[141];
v29[141];
function f32() {
    try { ("rN").link(f14); } catch (e) {}
    try { ("constructor").trimStart(); } catch (e) {}
    0 << 0;
    const v40 = 0 < 9;
    !v40;
    const v42 = v40 || v40;
    v42 && v42;
    let v45 = 16;
    v45--;
    const v48 = new Int16Array(v45);
    v48[5];
    v48[10] = -9007199254740992;
    const o91 = {
        ["constructor"]: "constructor",
        2: 4.0,
        ..."rN",
        "f": "rN",
        __proto__: "rN",
        "g": 4.0,
        "h": "rN",
        m(a52, a53) {
            const v56 = new BigUint64Array(1000);
            const o57 = {
                ...v56,
            };
            a52[this] = "constructor";
            Array();
            class C63 {
                static #a;
                static n(a65, a66) {
                    function f67(a68, a69) {
                    }
                    %OptimizeFunctionOnNextCall(f67);
                    new Int8Array(Int8Array);
                    const v72 = super.d;
                    try { v72(); } catch (e) {}
                    return a65;
                }
                [1];
                static [1] = 255;
                [255];
                f = -65536;
            }
            const v74 = new C63();
            const v75 = new C63();
            let v77 = -65536n;
            let v79;
            try { v79 = v74.m(1n, 10000n, 10000n, 1); } catch (e) {}
            function f80(a81, a82, a83) {
                let v84;
                try { v84 = v79(a82); } catch (e) {}
                v84 = a83;
                v77 >>= a83;
                v74[10] = 1n;
                v75.f;
                return v77;
            }
            const v88 = ("gYPHN").normalize("NFKD");
            try {
                ("constructor").localeCompare(v88);
            } catch(e90) {
            }
            return v88;
        },
    };
    return o91;
}
f32.caller = f32;
f32.caller = f32;
const v92 = f32();
const v93 = f32();
v93.h = v93;
const v94 = f32();
class C95 {
    #h = v92;
    static #e;
    constructor(a97, a98) {
        a97[2];
        a98[2] = a98;
        const v100 = this?.__lookupSetter__;
        v100.length = v100;
        try { new v100(a97); } catch (e) {}
        a97[2];
        a98[2];
        for (let i105 = 0;
            i105 + i105, i105 >>> i105, i105 < 9;
            (() => {
                const v111 = i105 >= i105;
                v111 || v111;
                const v113 = i105++;
                v113 - v113;
            })()) {
            Object.defineProperty(v94, f32, { set: f32 });
            v93[i105] **= a97;
        }
    }
}
C95.length = C95;
const v116 = new C95(v93, v92);
v116.b = v116;
const v117 = new C95(v94, v92);
const v118 = v117?.constructor;
try { new v118(v6, 33784n); } catch (e) {}
v117.g = v117;
const v120 = new C95(C95, v94);
const v121 = v120?.constructor;
try { new v121(4096n, v6); } catch (e) {}
try {
const t0 = 0.44967380041772886;
t0();
} catch (e) {}
const v126 = /((?<=a))/gudm;
v126.dotAll = v126;
const v127 = /gk4b*/vmsy;
let v129;
try {
const t0 = -1.3832922122240728e+307;
v129 = t0(2);
} catch (e) {}
for (let v130 = 0; v130 < 5; v130++) {
    try { v129(v126, v130, v127); } catch (e) {}
}
