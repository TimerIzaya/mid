const v2 = new Float32Array(3760);
const v5 = new Uint8ClampedArray(512);
const v8 = new Int8Array(3732);
const v10 = [Float32Array,[512,512,v2,v8,v5]];
[v10,v5,3732,3760,v5];
class C12 extends Uint8ClampedArray {
    constructor(a14, a15) {
        super(a15);
        this[268435439];
        3732 instanceof Uint8ClampedArray;
        const v18 = /y/vdiy;
        /[(?:ab|cde)Pu(?:ab|cde)]/gvd;
        /AZBPuufX\xf0\x9f\x92\xa9+/gudsy >>> v18;
    }
    static p(a23, a24) {
        a23?.[a23];
        new WeakSet();
        -Infinity;
        function F31() {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.b = 4294967296;
            } catch(e34) {
            }
            try {
                function F35() {
                    if (!new.target) { throw 'must be called with new'; }
                }
                const v37 = new F35();
                const v38 = new F35();
                function f39(a40, a41) {
                    const o42 = {
                        "h": v38,
                        "e": v37,
                    };
                    return o42;
                }
                const v43 = f39();
                f39(F31, v43);
                function f45() {
                    return f39;
                }
                const v48 = new Float32Array(218);
                for (const v49 of v48) {
                    Object.defineProperty(v43, Float32Array, { configurable: true, enumerable: true, get: f39, set: f45 });
                }
                this.g = 4294967296;
            } catch(e50) {
            }
            try {
                this.f = 4294967296;
            } catch(e51) {
            }
        }
        new F31();
        new F31();
        new F31();
        return -751177.2539898027;
    }
}
new C12(v10, 3760);
new C12(v8, 3760);
new C12(512, 3732);
const v60 = new Uint16Array(undefined, Uint16Array, Uint16Array);
function F63(a65, a66, a67, a68) {
    if (!new.target) { throw 'must be called with new'; }
    const v69 = this.constructor;
    try { new v69(154, a68, 154, a66); } catch (e) {}
    -a66;
    a68 <= a68;
}
const v73 = new F63(154, 129, 129, 154);
const t72 = v73.constructor;
new t72(v73, v60, undefined, v60);
new F63();
new F63();
