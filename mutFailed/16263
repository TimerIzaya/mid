[-2147483649,64,4096,22612,-38412,-268435456,-2147483649];
[-1073741824,-48822,-2,-9007199254740991,7,-65536];
[10,-536870912,1168809707];
[64804];
[1413497357,-1237412994,-9223372036854775807,843237590,-4294967297,-1,9007199254740992];
[10,-20910,1073741824,6,268435441,14,268435440,9,-6];
[3,-33385,38380,-65535,4294967295];
[-60301,-128,-65537,-15,-407556703,-1751494334,-9223372036854775808,1655729615];
[997287315,65535,2049574883,13,-28784,-1,128,-1,-396922757,7];
function f12() {
    return 143752543;
}
new Int8Array(256);
new Int8Array(205);
new Float64Array(2786);
let v25 = 15;
v25--;
new Int16Array(v25);
new Uint8ClampedArray(6);
new Int16Array(3699);
"2147483649" == "2147483649";
class C39 {
    static #p(a41) {
        function f42(a43) {
            return a43;
        }
        class C44 extends f42 {
            static [-1] = 8;
            static [a41];
            static 268435441;
        }
        const v45 = [];
        const v47 = /[a-zA-Z0-9]/gvisy;
        const v48 = /abc?/gvmy;
        v48[-2] ^= v47;
        v48.exec("Q8F");
        const t35 = "Q8F";
        t35[2078209647] = v45;
        return a41;
    }
    [C39];
    static {
        for (let v54 = 0; v54 < 32; v54++) {
        }
    }
    static 2147483648 = C39;
    static #g;
    #a;
}
function f56() {
    const o58 = {
    };
    return gc(o58);
}
C39[Symbol.toPrimitive] = f56;
try { C39(); } catch (e) {}
const v63 = new C39();
v63.constructor = f56;
try { BigInt64Array(BigInt64Array); } catch (e) {}
function F67(a69) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a69;
}
const v70 = new F67(-2);
with (v70) {
    h = Uint16Array;
}
const v72 = v63?.constructor;
v72[Symbol.toPrimitive] = f56;
let v75;
try { v75 = new v72(); } catch (e) {}
const v76 = v75?.constructor;
try { new v76(); } catch (e) {}
const v78 = new C39();
let v79;
try { v79 = v78.propertyIsEnumerable(C39); } catch (e) {}
!v79;
new C39();
/[\11]/gm.flags;
/(?:a*)*/gudm;
const v85 = /a(?!bbb|bb)c/vi;
v85.toString = Symbol;
const v86 = v85?.toString;
try { new v86(); } catch (e) {}
[4096];
const o93 = {
    "execution": "async",
    "type": "minor",
};
~117;
Uint16Array[0] = v72;
const v96 = new Uint16Array(Uint16Array);
let v97 = v96[1];
v97--;
Int32Array.name;
new Int32Array(31);
let v105;
try { v105 = Uint32Array.toString(); } catch (e) {}
try { v105.small(); } catch (e) {}
const v107 = new Uint32Array(128);
v107[72];
function f109() {
    3.4890473589784586e+307 > 3.4890473589784586e+307;
    let v112 = 1000000000000.0;
    v112--;
    257828.6336153492 - 257828.6336153492;
    -4294967296 >> -4294967296;
    class C119 {
        static #m(a121) {
        }
        constructor(a123) {
            function f124() {
                return 9007199254740992;
            }
            Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f124 });
            const v125 = this?.__defineSetter__;
            try { new v125(22227, 22227); } catch (e) {}
            new Float32Array();
            try { Uint16Array.apply(Uint16Array, "2147483649"); } catch (e) {}
            const v131 = new Uint16Array();
            const v132 = new Float32Array(v131, -4294967296, a123);
            v132.f = v132;
        }
    }
    const v133 = new C119(C119);
    v133.g = v133;
    const v134 = new C119(117);
    v134.length = -4294967296;
    v134.length;
    const v136 = new C119(-4294967296);
    const v137 = [v136,C119];
    [257828.6336153492,v136,v133,v136,v137];
    const v139 = [v136];
    class C140 extends C119 {
        [v133];
        #n(a142, a143, a144, a145) {
            function f146() {
            }
        }
    }
    C140.name = C140;
    const v147 = new C140();
    class C149 extends v139.constructor {
    }
    try { v147.m(v137); } catch (e) {}
    const o153 = {
        "e": Uint16Array,
        o(a152) {
        },
        ...v112,
    };
    return Int32Array;
}
try { f109.bind(-7); } catch (e) {}
%PrepareFunctionForOptimization(f109);
f109();
f109();
%OptimizeFunctionOnNextCall(f109);
const v157 = f109();
v157.prototype = v157;
