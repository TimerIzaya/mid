const v0 = /t6s7w+/isy;
const v1 = /HRA+/guimsy;
const v2 = /\cj\cJ\ci\cI\ck\cK(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/udim;
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a5;
    } catch(e6) {
    }
    try {
        this.h = a5;
    } catch(e7) {
    }
    function F8(a10, a11) {
        if (!new.target) { throw 'must be called with new'; }
    }
    function F12(a14, a15) {
        if (!new.target) { throw 'must be called with new'; }
        try {
        } catch(e16) {
        }
        try {
        } catch(e17) {
        }
    }
    try {
        this.d = v0;
    } catch(e18) {
    }
}
const v19 = new F3(F3);
const v20 = new F3(v1);
const v21 = new F3(v1);
function F22(a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "g", { writable: true, enumerable: true, value: a26 });
    try {
        this.a = v20;
    } catch(e27) {
        eval();
        class C32 extends a25 {
            constructor(a34, a35, a36, a37) {
                super();
                NaN >= "0x2I";
            }
        }
        new C32();
    }
    try {
        this.g = a26;
    } catch(e40) {
    }
    try {
        this.b = v21;
    } catch(e41) {
    }
}
const v42 = new F22(v20, v0, v20);
new F22(v20, v2, v20);
const v44 = new F22(v19, v0, F3);
class C48 {
    [v19];
    [F22];
    constructor(a50, a51, a52) {
        a52 || a50;
        let v54 = 0;
        do {
            function F55(a57, a58) {
                if (!new.target) { throw 'must be called with new'; }
                const o63 = {
                    "e": -268435456,
                    valueOf(a61, a62) {
                    },
                    6: -268435456,
                };
                try {
                    this.a = 127;
                } catch(e64) {
                }
            }
            new F55(v20, v54);
            new F55(a52, v54);
            new F55(a52, v54);
            const o69 = {
                [10000n]: this,
            };
            const o73 = {
                "type": "function",
            };
            o73.arguments = v19;
            const v74 = new Worker(Date, o73);
            v74.getMessage();
            v54++;
        } while (v54 < 2)
    }
}
const v79 = new C48(v0, v42, v21);
new C48(v79, v79, C48);
new C48(v0, v44, v79);
const v82 = [-13063,230037640,0,-1717935321,257,0,1073741825];
const v83 = [-2051630605,509562611];
class C84 {
    0 = v83;
}
const v85 = new F3();
const v87 = new Float32Array(v82);
try { v83.sort(v87); } catch (e) {}
Object.defineProperty(v85, 7, { configurable: true, value: v82 });
