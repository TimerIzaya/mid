const v1 = new Set();
function f2(a3, a4) {
    const v5 = [749138.7740098275,-413.55890355139604,-2.0,5.0,4.0,1.7976931348623157e+308,1.0,5.956393081352694];
    new Uint8Array(v5);
    return v5;
}
v1[Symbol.toPrimitive] = f2;
let v13 = undefined;
v13 = 3;
65537 < 4096n;
const v19 = new Map();
[536870889n,v19,2090632183n,2090632183n];
const v23 = new Uint16Array(96);
new Float64Array(v23);
const v26 = [-5n,Set];
[Set,Set];
const o34 = {
    [v1]: v26,
    set e(a29) {
    },
    valueOf(a32, a33) {
    },
};
function f35(a36) {
    new Uint8Array(96);
}
Object.defineProperty(o34, Symbol.isConcatSpreadable, { configurable: true, enumerable: true, set: f35 });
const v42 = Symbol.isConcatSpreadable;
o34[v42] = v42;
const o43 = {
};
function f47(a48, a49, a50, a51) {
    const o52 = {
        "d": a51,
    };
    return o52;
}
f47(-11, 2147483648, 2147483648, 16);
