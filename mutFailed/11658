function f0() {
    const t1 = "h";
    t1[0] = "h";
    const o9 = {
        ["h"](a5) {
            const v7 = ("h")["h"](a5);
            try {
                f0.valueOf = v7;
            } catch(e8) {
            }
            return a5;
        },
        "a": "a19l",
    };
    return o9;
}
f0();
f0();
const v12 = f0();
const v13 = [3,-65537,536870889,1518338834,-65536,256];
const v14 = [13];
let v15;
try { v15 = v14.find(f0); } catch (e) {}
const v16 = [-52889,268435439,-268435456,15,-792134627];
try { new v15(v12); } catch (e) {}
f0();
const o21 = {
    "maxByteLength": 257,
};
const v23 = new ArrayBuffer(70, o21);
new Int32Array(v23);
try { v16.toString(); } catch (e) {}
function f27() {
    return v13;
}
Math.tan(f0);
const v33 = v16 << f0;
f0 | 1000;
Math.asin(v33);
f0 & 960442.0481864084;
Math.exp(960442.0481864084);
Math.imul(70, f0);
1024n / 1024n;
const v44 = new Float64Array(5);
const v45 = new Float64Array(v44);
v44 ** v45;
