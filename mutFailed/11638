class C3 {
    constructor(a5) {
        a5 - a5;
        this[this] = this;
        a5 ^ "-39700";
        function f8() {
            return this;
        }
    }
    #b;
    static 10;
    static f = "-39700";
    #g = "-39700";
}
C3[10] = C3;
const v9 = new C3(-772296.8536668484);
let v10;
try { v10 = v9.constructor("-39700"); } catch (e) {}
const v11 = new C3(-1);
const v12 = new C3(-1);
function f13(a14, a15) {
    -772296.8536668484 !== v10;
    try { a14(a14, v10); } catch (e) {}
    return a14;
}
v12[Symbol.toPrimitive] = f13;
function f21(a22, a23) {
    Math.clz32();
    return Symbol;
}
Date[Symbol.toPrimitive] = f21;
try { new Date(Date, v11, v11, v12, v12, v12, Date); } catch (e) {}
new Date();
const v31 = new Set();
v31.f = v31;
Object.defineProperty(Math, Symbol.toPrimitive, { configurable: true, value: Symbol });
Math.cbrt(Math);
