const v0 = [2.2250738585072014e-308,-5.067613762545728e+307,-4.0,-1.7976931348623157e+308,5.0,Infinity,1000000.0,6999.505094507127];
[-2.2250738585072014e-308,-927.2819930630818,-2.2250738585072014e-308,3.0];
const v2 = [-2.0,-1e-15,-2.220446049250313e-16,-0.0,2.0,0.5802390920994579,-4.0,1.7976931348623157e+308];
function f3() {
    return v0;
}
[4.0,-0.30157322665626474,-1000.0];
[-2.2250738585072014e-308,-2.2250738585072014e-308,-980600.9957536899,-379589.43864192546,8.267186868979255,0.8735839954510662,2.2250738585072014e-308,5.0,-5.0,1.0];
const v6 = [824469.08328011];
try { v6.fill(v2); } catch (e) {}
const t10 = "function";
t10[6] = "function";
new BigInt64Array(2378);
function f15() {
    let v16 = -9223372036854775808n;
    v16 %= 45725n;
    return 45725n;
}
for (let v18 = 0; v18 < 5; v18++) {
    f15();
    %OptimizeFunctionOnNextCall(f15);
}
2 >= 2;
new Float32Array(2);
new BigInt64Array(512);
for (let [v27] of "bnxIi") {
    v27[0];
}
function F29() {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor = f15;
    const v31 = this.constructor;
    let v32;
    try { v32 = new v31(v31); } catch (e) {}
    Object.defineProperty(this, "c", { enumerable: true, set: v32 });
}
new F29();
