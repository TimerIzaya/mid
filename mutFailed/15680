class C3 {
    static #n(a5) {
        let v4 = this;
        v4 = "m";
        return a5;
    }
    static 11 = Infinity;
    static #toString(a7, a8) {
        let v10;
        try { v10 = new a7(new.target, 1000000000000.0, "m"); } catch (e) {}
        try {
            ("m").trim();
        } catch(e12) {
        }
        return v10;
    }
}
new C3();
new C3();
new C3();
class C19 extends C3 {
    3 = "setUTCMinutes";
    static #f = "m";
    static d = "m";
    #o(a21, a22, a23) {
        let v24;
        try { v24 = a23.toUpperCase(); } catch (e) {}
        super.unicode = v24;
        super.h = a22;
        super.d;
        +v24;
        return "m";
    }
}
new C19();
new C19();
new C19();
class C30 {
}
new C30();
[-5105,-65536,512,536870887,128,1108608188,60880,12,5];
const o33 = {
};
const v34 = o33.constructor;
const v36 = 1922 % 1922;
const v37 = v36 == v36;
for (let v38 = 0; v38 < 25; v38++) {
    function f39() {
        return f39;
    }
    function f40(a41, a42, a43, a44) {
        let v45;
        try { v45 = a42(a44); } catch (e) {}
        try { new a43(); } catch (e) {}
        a42.freeze();
        const v48 = a44 + a44;
        function f49() {
            return v45;
        }
        const v50 = f49.length;
        const v51 = -v50;
        const v53 = f39().constructor;
        let v54;
        try { v54 = v53(); } catch (e) {}
        const v55 = v54.bind(v51, v53, v54);
        function f56() {
            return v54;
        }
        const v57 = f56();
        try { v57.null(); } catch (e) {}
        f56();
        %OptimizeFunctionOnNextCall(f56);
        f56();
        const v63 = new BigUint64Array(BigUint64Array);
        v63[2445191368] = 268435441n;
        v55.bind();
        v53 * v37;
        const v66 = typeof f49;
        const v67 = v66.italics(v66, v51);
        try { v67.match(f56); } catch (e) {}
        const v70 = new Int8Array();
        v70.entries().next(v50);
        [];
        const v76 = ("find").blink("find", v70, v38).replaceAll;
        try { v76(f40, v48); } catch (e) {}
        return f39;
    }
    for (let v78 = 0; v78 < 5; v78++) {
        f40(v78, v34, v34, 1922);
    }
}
