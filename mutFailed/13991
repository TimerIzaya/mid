[1000000000.0,4.0,2.220446049250313e-16,191414.0577444604,2.220446049250313e-16,-2.0,0.062142288745589136,-0.3007803303238923];
const v1 = [1.2055826481466716e+308,1.7976931348623157e+308,-1000000.0,-3.390609139868692,3.2410457042992853];
[1.0232237294732008e+308,-1e-15,1.3047504427829498e+308,-107095.74311637704,167.53597228401532,0.6232615692837058,5.0,-1000000000000.0];
const v3 = [-536870912,-1454443390,-11,536870887];
let v5;
try {
const t0 = 65536n;
v5 = t0(65536n);
} catch (e) {}
v3[65536n] *= v5;
const v6 = v1?.getPrototypeOf;
try { v6(); } catch (e) {}
let v8;
try { v8 = new v6(); } catch (e) {}
v6.constructor;
new Int8Array(221);
[-2.0,-628.7969742856723];
v8?.constructor;
function f18() {
    const o27 = {
        toString(a23, a24) {
            try {
                super.getMinutes();
            } catch(e26) {
            }
            return "object";
        },
        "b": "boolean",
        "g": "object",
        128: "boolean",
        "a": 1000000000000.0,
        "c": "boolean",
        __proto__: "boolean",
        "h": 1000000000000.0,
    };
    return o27;
}
f18();
const v29 = f18();
function F30(a32) {
    if (!new.target) { throw 'must be called with new'; }
    a32[128] = a32;
    try {
        this.f = a32;
    } catch(e33) {
    }
    try {
    } catch(e34) {
    }
    try {
    } catch(e35) {
    }
}
new F30(v29);
4 < 4;
const v41 = new Int32Array();
v41[3];
const v44 = [-1.5424212036356715e+308];
v44.shift();
v44[536870887n] = v44;
const o49 = {
    "execution": "async",
    "type": "minor",
};
new Set();
function f52(a53, a54) {
    return Math.tanh("1");
}
new Int8Array([0.600959953156498,1.0,-Infinity]);
