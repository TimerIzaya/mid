const v0 = [];
new Date();
function f3() {
    return v0;
}
[-1000000000.0,651.6828389521231,-8.48562772176722];
const v5 = [5.972935022619126e+307,1.0];
[3.0];
const v7 = [7.635738996596185];
[676003.3076571615,-1000000.0,0.6560201008219437,-1000000.0,-4.0,-4.0,1000000000.0,-727.9827090597857];
const v9 = [757.4790443118229,1000.0,-2.0,2.2250738585072014e-308,2.2250738585072014e-308,1000000.0];
let v14 = 4.0;
new v0();
v14 **= v14;
const o23 = {
    set d(a20) {
        this["cos"]();
    },
};
class C24 {
    constructor(a26) {
        v9.d = a26;
    }
}
const v28 = new WeakSet();
Object.defineProperty(v28, 4, { writable: true, configurable: true, value: v9 });
const v30 = new Map();
new Int8Array(BigUint64Array);
const v37 = Array();
v37[0] = 0.6486308944701847;
const v38 = v37.unshift(3);
class C42 {
    e;
    a;
    static {
        for (let v48 = 0; v48 < 50; v48++) {
            v48 < v48;
            class C50 extends Date {
            }
            [601759695];
            [1073741824,1073741823,1376142744,1073741825];
            function F54(a56, a57) {
                if (!new.target) { throw 'must be called with new'; }
                this.a = a56;
                this.a = a57;
            }
            new F54(522675525n);
            class C59 {
            }
            const o61 = {
            };
            o61.h = o61;
            o61.h = o61;
            o61.e = -65535;
            new F54(522675525n);
            for (let v63 = 0; v63 < 10; v63++) {
            }
            v48++;
        }
        const v66 = new v38(Float32Array, Float32Array);
        delete v66[536870888];
        Object.defineProperty([], "h", { configurable: true, enumerable: true, set: Date });
    }
}
const v69 = new C42(v28, v5);
new C42(v69, C42, v69, -11n);
new C42(-8n, v14, v30, -11n);
function F72(a74, a75, a76, a77) {
    if (!new.target) { throw 'must be called with new'; }
    a74.lastIndexOf(a74, a75);
}
Math.tan(-1);
function f82() {
    return f82;
}
(0)[v28];
function f87(a88, a89, a90, a91) {
    const v92 = a88.length;
    a88.BYTES_PER_ELEMENT = a88;
    let v93 = 3 | a89;
    v93++;
    const v95 = a88 / a88;
    v95 % v95;
    a89 < a88;
    const o101 = {
        n(a99, a100) {
            return v92;
        },
    };
    return a90;
}
class C108 {
    [-1] = -1.6777590795239637e+308;
}
const v109 = [];
try { v14.with(v109, v109); } catch (e) {}
class C111 {
    static #valueOf(a113, a114, a115) {
    }
    set e(a117) {
    }
}
const v118 = new C111();
v118.o = v7;
const t104 = [];
t104.valueOf = f82;
%PrepareFunctionForOptimization(gc);
new Uint32Array(9);
v28[4] = 5;
try {
} catch(e127) {
}
try { v118.o(v118, 5); } catch (e) {}
