class C3 {
    static toString(a5, a6) {
        var b = 7n;
        try {
            this.g = a5;
        } catch(e7) {
        }
        return this;
    }
    static {
        const v9 = this && this;
        v9[223] = v9 - -39813n;
    }
    static #d = 7n;
}
new C3();
new C3();
new C3();
new Float32Array(1);
new Uint32Array(2);
new Uint8Array(2949);
class C24 {
    toString() {
        [0.42610628000409834];
        try { new DataView(240); } catch (e) {}
        function F30(a32, a33) {
            if (!new.target) { throw 'must be called with new'; }
            const v34 = this.constructor;
            try { new v34(this); } catch (e) {}
            a33++;
            this.g = a32;
        }
        [0.1916863927637561,5.0,-1000000.0,-1000000000000.0,-2.2250738585072014e-308,786167.582370504,221250.34918176057];
        [2.0,121972.82426161831,1.0,1000.0,1.586101720587471e+308,682084.812556563];
        return undefined;
    }
    #f;
    static [undefined] = undefined;
    536870887;
    static #d = undefined;
}
const v39 = new C24();
new C24();
const v41 = new C24();
class C42 {
    static #c;
    set c(a44) {
        try {
            v39.__proto__ = v41;
        } catch(e45) {
        }
    }
    c = C24;
    static #g;
    #m(a47, a48) {
        let [v50,v51,,v52] = this;
    }
    set g(a54) {
        super.d = undefined();
    }
    #b = undefined;
}
new C42();
new C42();
new C42();
new Int16Array(1659);
new Uint8Array(3);
new BigInt64Array(428);
try { C24.log10(); } catch (e) {}
try { v41.toString(Int16Array, BigInt64Array); } catch (e) {}
for (let i74 = 0; i74 < 7; i74++) {
    new Uint8Array(i74);
}
