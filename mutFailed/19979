const v9 = [57912,8,268435441,888551108,-2,1807103519,1024,268435439,268435440,15835];
[-17527,1476456947,-2147483648,3,-1387908349,875742038,-1408022892];
[-11,2147483648,536870888,3089,3,8,9,268435440,-11];
const v12 = [-9007199254740991,536870888,51292,-2147483649];
const v13 = [536870912,-124426018];
const v14 = [23930,454087404,65536,-6,-1955199007,1,1073741824,14];
function f15(a16) {
    try { a16.map(v13); } catch (e) {}
    a16[0] = a16;
    const o22 = {
        "e": v12,
        "c": v13,
        [v14]: v14,
        "a": v14,
        [v12]: v14,
        get f() {
            let {"h":v19,"length":v20,...v21} = v14;
            this.toString = v19;
            return v21;
        },
    };
    return o22;
}
const v23 = f15?.toString;
try { new v23(); } catch (e) {}
const v25 = f15(v12);
v25.c = v25;
const v26 = f15(v9);
v26.f = v26;
new Uint8Array(268435440);
const v30 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v32 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v33 = [601759695];
function f34(a35) {
    return -9007199254740991;
}
const v38 = new BigInt64Array();
function f40(a41, a42) {
    const o44 = {
        get h() {
            return this;
        },
        [a42]: 4,
        2778757984: a41,
        "h": v38,
    };
    return f40;
}
function f46(a47, a48, a49, a50) {
    function f51() {
        try {
            v30.forEach(a48);
        } catch(e55) {
            e55.f = e55;
        }
        const v56 = BigInt64Array + BigInt64Array;
        v56 > v56;
        function f58(a59, a60) {
            a60(f58);
            return f58;
        }
        const v62 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o72 = {
            [v62]: "then",
            "type": "Vre",
            6: 4,
            "f": 4,
            "execution": "-256",
            toString(a64, a65) {
                const v66 = a50 && a48;
                Math.cos(-5.0);
                return Uint8Array;
                v66 <= v62;
                return a48;
            },
        };
        let v73 = -268435456;
        v73++;
        const o94 = {
            "c": -4294967297n,
            [522675525n](a76, a77) {
            },
            "c": v33,
            valueOf(a79, a80) {
                return this;
            },
            [-4294967297n](a82, a83, a84, a85) {
            },
            "maxByteLength": -4294967295,
            "arguments": v32,
            ..."Vre",
            valueOf(a87, a88) {
                return a88;
            },
            4: "Vre",
            "type": "Vre",
            toString(a90, a91, a92) {
                return "Vre";
            },
            5: -4294967295,
            6: v73,
            ..."-2",
            "arguments": v62,
            ...v62,
            get h() {
                return this;
            },
        };
        return a47;
    }
    f51();
    %OptimizeFunctionOnNextCall(f51);
    return f51;
}
for (let v96 = 0; v96 < 5; v96++) {
    f46(-4294967297n, v30, v96, v96);
}
f15(v14);
const v100 = 1073741824 * 1073741824;
v100 - v100;
65535 | 65535;
function F104() {
    if (!new.target) { throw 'must be called with new'; }
    const v106 = this?.constructor;
    v106.e = v106;
    try { new v106(); } catch (e) {}
}
function f108() {
    const v110 = new ArrayBuffer(ArrayBuffer, ArrayBuffer);
    new Int8Array(v110);
    return f108;
}
%OptimizeFunctionOnNextCall(f108);
F104.arguments = F104;
const v113 = new v13();
try { v113.hasOwnProperty(f15); } catch (e) {}
v113.length;
const v116 = new F104();
new F104();
const v119 = -14n ^ -14n;
try { ("object").padStart(v119); } catch (e) {}
let v124;
try {
const t0 = "object";
v124 = t0(v113, "number", F104);
} catch (e) {}
function f125(a126) {
    return v124;
}
class C127 extends f125 {
    constructor(a129, a130) {
        super();
        try {
            a129.__proto__ = f46;
        } catch(e131) {
        }
        new f46();
    }
    [v116] = F104;
    [v113] = -14n;
    268435441 = -14n;
}
C127.length = C127;
const t163 = "object";
t163[v116] &= v124;
