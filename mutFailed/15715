const v2 = -Infinity;
const v9 = ("c")?.toLocaleUpperCase.length;
function F10(a12) {
    if (!new.target) { throw 'must be called with new'; }
}
new v9();
function f20() {
    return v2;
}
function F21(a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    this.hasOwnProperty(F21);
    ("5").constructor;
    try { new a23(); } catch (e) {}
}
const v28 = new F10();
const t16 = "multiline";
t16.constructor = f20;
const v29 = v28.constructor;
const v31 = Symbol.toPrimitive;
(-65535).constructor;
f20++;
let v34 = -4294967295;
const v35 = v34++;
const v36 = [Infinity,1.0,-1.2272545370579378e+308,-1000000.0,5.0,1.7976931348623157e+308,5.0];
function F37() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        Array(v35);
        [[]] >= Uint16Array;
    } catch(e46) {
        v36.findLastIndex;
    }
}
v29[v31] = f20;
new v29();
