const v3 = [0.5608441769709115,1000000000000.0,2.2250738585072014e-308,0.8541370601556278,-1.7976931348623157e+308,7.663709851718139,-2.0];
const v4 = [1.0,1.4646932294864657e+308,-2.2426945085062684,-6.524806897916671];
Uint16Array.prototype = Uint16Array;
const v7 = new Uint16Array(6);
3 >> 3;
3 >>> 3;
const v12 = new Float64Array(3);
Float64Array.length;
Float64Array.e = Float64Array;
const v16 = new Float64Array(3);
const v17 = [1.0];
-6n ^ -6n;
[-4.0,-0.0,1000000000.0,3.0,0.03187006169132567,-5.351525096988146,-1e-15,-1000000000000.0];
const v23 = [-688610.226146389,9.830646304044578,604655.8116907289,-7.588738541008995,-1.7976931348623157e+308,298.0989762846807,-677108.9190591004];
let v24;
try { v24 = v23.fill(-6n); } catch (e) {}
try { v24.toString(); } catch (e) {}
let v26;
try {
const t0 = 6;
v26 = t0(v4, v23, v17, v17, Uint16Array);
} catch (e) {}
let v27;
try { v27 = v26(); } catch (e) {}
v12[v7] >>= v27;
let v28;
try { v28 = v23.fill(v16, 3); } catch (e) {}
Math.imul(v3, 2147483648);
let v33 = Math.expm1(2147483648);
const v34 = v33++;
const v35 = ~v17;
v35 <= v35;
const v37 = 1.8443849875045721 | v17;
const v38 = Math.tan(v3);
v38 - v38;
let v40 = v35 | v37;
v40--;
const v42 = [-987.1777751425428,193.79048667904,0.06267364379165852,0.563583806942342,-5.959620599421232,-5.0];
v42.length = v42;
let v43;
try { v43 = v42.toString(); } catch (e) {}
try { v43.link(v7); } catch (e) {}
const v45 = [560.3764338321384,2.831189514697529,-1.0,1000.0,-2.4858124652164726,1000.0,1000000.0,1000000.0,6.670434684407409e+307,-Infinity];
v45[4];
const v49 = new Uint32Array();
let v50;
try { v50 = v49.entries(); } catch (e) {}
try { v50.next(); } catch (e) {}
const v52 = v50?.next;
try { new v52(); } catch (e) {}
const v54 = v49[40];
for (let v55 = 0; v55 < 5; v55++) {
    try { v54(); } catch (e) {}
}
const v57 = [-2.220446049250313e-16,-146030.0093347557,-759818.7684978913,1000000000000.0,-1.2175538670763404e+307];
v57[3] = v57;
[4.0];
try { BigUint64Array(v57, v45, v3); } catch (e) {}
const v61 = new BigUint64Array();
try { v61.subarray(v34, v34); } catch (e) {}
try { v61.entries(); } catch (e) {}
const v64 = /anVXYFzN(x)(x)(x)\3/gvdms;
v64.flags;
Math.cosh(!v28);
v28 % 4;
const v71 = v49 || v49;
try { v71.findLast(4); } catch (e) {}
const v73 = -v49;
v73 - v73;
const v75 = Math.log1p(v49);
~v75;
~v75;
let v78 = Math.cosh(v71);
v78--;
v78 >>> v78;
try { v61.reduceRight(v64); } catch (e) {}
const v83 = [-1.7976931348623157e+308,v57];
const v84 = v83?.map;
try { new v84(v83); } catch (e) {}
