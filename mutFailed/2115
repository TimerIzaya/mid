function f0() {
}
const o6 = {
};
o6.d = o6;
gc(o6);
const v9 = new Uint16Array();
try { v9.values(); } catch (e) {}
const v13 = new Int32Array();
class C14 {
    static #d = -2;
    constructor(a16, a17) {
        try {
            a16.#d += v13;
        } catch(e18) {
            e18.toString();
        }
    }
}
try { new C14(gc, C14); } catch (e) {}
try { ("-47742").toLocaleLowerCase(); } catch (e) {}
const t21 = "-2";
t21["function"] %= -9223372036854775807;
1 >= -10657;
("-2").length;
const v31 = new Uint8Array(1424);
v31[1311];
("NN")["9"];
function f37(a38, a39) {
    const o40 = {
        "f": a39,
    };
    return o40;
}
const v42 = new Int16Array(63);
v42[12] = v42;
new BigUint64Array(129);
const v47 = [0.71465078532354,-2.2250738585072014e-308,1.0,-2.2250738585072014e-308,2.2250738585072014e-308,-620.8633845139873,0.0,-1.0,3.3358719500528515];
const v48 = [-7.462188141503825,-3.070207201828062e+307,0.6861416475431791,1000000000.0,-3.0];
Set.name;
const o75 = {
    ...v47,
    [Set](a52, a53, a54) {
        function f55() {
        }
        const v59 = new Uint32Array(16);
        function f60(a61, a62) {
            const o63 = {
            };
            o63.e = f60;
            const o64 = {
            };
            o64.e = f60;
            o64.b = a62;
            const o65 = {
            };
            o65.e = f60;
            o65.b = 1;
            o65.c = a61;
            const o66 = {
            };
            o66.e = f60;
            o66.b = a62;
            o66.d = a62;
            function f68(a69) {
                new f55();
            }
            this.onmessage = f68;
            v59.length = 1073741824;
        }
        const o73 = {
            "arguments": v48,
            "type": "function",
        };
        new Worker(f60, o73);
    },
    "b": v48,
};
o75[8];
function f77(a78, a79) {
    a79 & a79;
    return a78;
}
const v83 = 63 < f77;
const v86 = new Uint32Array();
try { v86.values(); } catch (e) {}
const v88 = v86[40];
try { v88(); } catch (e) {}
v83 ? 63 : f77;
function f91() {
    return "-47742";
}
const v92 = [-6.786788220284745e+307,3.0441372838377454,0.16607240252493405,9.1870148243921,-1.1724672307306477e+307,-1.3233810423722777e+308,0.3268930863961368];
const v93 = [1000000.0,2.0511322290964932e+307];
function f94(a95, a96) {
    a95[1] = a95;
}
f94.d = f94;
f94(v93, v92);
let v98 = v47.length;
-v98;
v42["every"](f77, Worker);
const v102 = [-11,o75];
class C103 {
    #o(a105) {
    }
}
-11 < -10657;
let [v107,v108] = v48;
v107 * v107;
try { ("W").toWellFormed(); } catch (e) {}
v98 = f77;
const o114 = {
    "arguments": v102,
    "type": "every",
};
const v115 = new Worker(f77, o114);
const v116 = v115?.terminateAndWait;
try { new v116(); } catch (e) {}
