function f0() {
}
function f1() {
    return f0;
}
const v3 = new Set();
let v5 = 1000;
v5--;
class C8 extends f0 {
    static #g = v3;
    static valueOf(a10, a11) {
        this[4096] = this.c;
        new Set(v3);
        return !this;
    }
    [3] = v5;
    a = 3;
    g = f1;
    h;
}
C8[Set] = 3;
new Set(v3);
Symbol.e = Symbol;
const v17 = Symbol.unscopables;
v3[v17];
const v19 = new C8();
const v20 = new C8();
const v21 = new C8();
v21[3] = v21;
/(OC(x)(x)(x)\2*)/um;
/Id(x)(x)(x)\3*/i;
const v24 = /[^(ab)\1]/d;
const v25 = [];
try { v25.reverse(); } catch (e) {}
function F27() {
    if (!new.target) { throw 'must be called with new'; }
    const v29 = this?.constructor;
    try { new v29(); } catch (e) {}
    this.d = v25;
}
const v31 = new F27();
const v32 = /U5a(\u0060)+/gud;
const v33 = /4Babc+?/udi;
const v34 = /Ko/uis;
try { v34.compile(v33, v31); } catch (e) {}
let v36 = v34[v24];
try {
    const v37 = f1();
    try { v37.call(v20); } catch (e) {}
} catch(e39) {
}
const v40 = new F27();
const v41 = /(?<a>.)\k<a>?/vdimsy;
let v42;
try { v42 = v41(v41); } catch (e) {}
const v43 = [v42,v42,v42,v42,v42];
-v43 && v43;
new F27();
2.0 + 2.0;
const v49 = 2.0 >>> 2.0;
v49 >>> v49;
const v52 = 5.0 >>> 5.0;
let v53 = 65536n;
const v54 = v53--;
v54 + v54;
~v54;
d = v33;
const v58 = v24.ignoreCase >= 2.0;
v58 && v58;
v36 = f0;
v49 - v19;
const v61 = v32.constructor;
try { new v61(); } catch (e) {}
const v63 = [1073741824,1073741823,1376142744,1073741825];
function f64(a65, a66, a67, a68) {
    function f69() {
        try {
            v63.forEach();
        } catch(e71) {
            const v74 = 26577 ^ a68;
            Math.expm1();
            !v74;
        }
        return f64;
    }
    f69();
    for (let i80 = 0, i81 = 10; i80 < i81; i81--) {
    }
    eval();
    %OptimizeFunctionOnNextCall(f69);
    return v63;
}
for (let v90 = 0; v90 < 5; v90++) {
    f64();
}
~(-2147483649n / -2147483649n);
let v95 = 536870888n;
v95--;
v95++;
const v98 = [-3.5650322397951273,1000.0,0.802460520523592,5.641883312396217e+306];
const v99 = [431.4791340196293,-3.0,125159.99825031101,21.6056810036589,1.6160148855763925e+308,1.7462069791264565e+308,5.0,1e-15,-1000.0];
try { v99.toLocaleString(); } catch (e) {}
try { v99.toString(); } catch (e) {}
const v102 = [-1.238631182886351e+308,1.9411414401127767e+306,5.0,-276.83656814954304,830049.9402099303,-4.0901138213923866e+307,-5.0,300.38437393340564];
try { v102.lastIndexOf(v98); } catch (e) {}
class C104 {
}
C104.prototype;
const v106 = C104.__lookupGetter__;
function f107() {
    [1000000000.0,-5.576877862296471e+307,1000000000000.0,-311382.1661484719,1000000000.0];
    function f109() {
        return f107;
    }
    for (let i = 0; i < 5; i++) {
        Object.defineProperty(v17, "d", { configurable: true, get: f109, set: f109 });
    }
    class C110 {
    }
    return f107;
}
f107();
f107();
try { v106(v40); } catch (e) {}
const v114 = new C104();
try { v114.toString(); } catch (e) {}
!v114.isPrototypeOf(v52);
