function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.d = F0;
    try {
        this.d = 65537;
    } catch(e3) {
    }
    try {
        this.h = 65537;
    } catch(e4) {
        Date();
        const v8 = new Map();
        function f9(a10) {
            return a10;
        }
        Object.defineProperty(v8, "g", { configurable: true, enumerable: true, get: f9, set: f9 });
    }
}
function f11() {
    const o15 = {
        ...1.0,
        set b(a14) {
        },
    };
    return o15;
}
new F0();
const v17 = new F0();
new F0();
[-25855,-25855,[-25855]];
const v24 = new Float32Array(1899);
class C25 {
    static {
        v24[5] = this[6];
    }
}
gc(v17);
class C32 extends Date {
}
new C32();
function F36() {
    if (!new.target) { throw 'must be called with new'; }
}
const v38 = new F36();
function F39(a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    const v44 = this.constructor;
    try { new v44(v38); } catch (e) {}
    a41[3] = a41;
}
function f46() {
    return F0;
}
const v52 = [,[,]];
function f53() {
    return C25;
}
function f54(a55) {
    Array(1000).indexOf();
}
Object.defineProperty(v52, 0, { writable: true, configurable: true, get: f53, set: f54 });
v52.fill();
