class C3 {
    #n(a5) {
        let v7;
        try { v7 = this["getDay"](-9007199254740990, a5, a5); } catch (e) {}
        ({"d":v7,"f":v7,} = a5);
        return this;
    }
    static [2.220446049250313e-16];
    static #m(a9, a10) {
        super.e &&= a9;
        try {
            const o11 = {
            };
            this.fuck(a9, a9, o11, a9);
        } catch(e13) {
        }
        return a10;
    }
}
const v14 = new C3();
new v14();
const v16 = new C3();
[672620.8439698869,-1.7976931348623157e+308,-6.513578776380012e+307,1000000000.0,NaN,-993475.6034923742,697447.4179621383,-785270.3965603863,9.574439687864263];
[1000000.0,-Infinity,-562.4795011681924,80519.67341675516,-1000000000.0,-1e-15,3.190333290826411];
[-1.0,4.334822048271047,-1000000.0,22199.288988705026,-1.3552758170543773e+308,1.0];
[-1000000.0,1.0,2.0,1.0,4.882678278427774e+307,-Infinity,-2.0,5.830240879207372,747627.7211083907,-4.0];
[-270409.1111358291,1000000000000.0,-4.0,0.47115208037165657,0.45424538626142597,-1000000000000.0,1.0800715188546974e+308,NaN];
[5.0,-1.0,-2.2250738585072014e-308,-590.0132094714565,3.0,1.483258514858006e+308,0.004762567782498839];
const o25 = {
    "maxByteLength": 201,
};
new SharedArrayBuffer(0, o25);
function F28(a30) {
    if (!new.target) { throw 'must be called with new'; }
    [-0.685155357392599,5.0];
    function F32(a34, a35, a36, a37) {
        if (!new.target) { throw 'must be called with new'; }
        const v38 = this.constructor;
        let v39;
        try { v39 = new v38(a35, F28, v38); } catch (e) {}
        v39.length &= 1;
    }
    new a30();
}
new F28();
new F28(v16);
