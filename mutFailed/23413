function f2(a3, a4) {
    const o28 = {
        "d": a4,
        76: false,
        "f": null,
        ...f2,
        m(a6) {
            try { a6.m(); } catch (e) {}
            a6.next();
            const v11 = new Int8Array(3938);
            let v12 = 3;
            [...v12] = v11;
        },
        "g": a4,
        "e": a4,
        o(a14) {
            return null;
            const v16 = this.constructor;
            try { new v16(); } catch (e) {}
            function f18() {
                Uint8ClampedArray.e = a14;
                return Uint8ClampedArray;
            }
            f18();
            f18();
            let v22 = 0;
            while (v22 < 6) {
                a3?.[a4 = a3];
                a4 / a14;
                v22++;
            }
            return a14;
        },
    };
    return o28;
}
const v29 = f2(false, null);
const v30 = f2(v29, v29);
const v31 = f2(v30, v30);
const v35 = /[^7Y[a-zA-Z0-9]?]/vdmy;
for (let v36 = 0; v36 < 5; v36++) {
    function f37() {
        const v39 = Array();
        const v40 = [-504863.1885363821,-248378.80818527355,-147.11467188198264,-1.7039705769992093e+308];
        for (let v41 = 0; v41 < 5; v41++) {
            v40 | v41;
        }
        try { v39.reduceRight(v35); } catch (e) {}
        return v40;
    }
    f37();
    %OptimizeFunctionOnNextCall(f37);
}
class C45 {
    constructor(a47, a48, a49) {
        const v53 = -(-65537);
        Math.min(0.5080046772494435);
        const v55 = -(-65537);
        f2(f2(64, 118, 64, 118), f2);
        const v60 = [];
        function f61(a62) {
            try {
                v60.some(a62);
            } catch(e64) {
                e64.stack;
            }
        }
        v60.toString = f61;
        const o67 = {
            __proto__: v60,
            [v60]() {
            },
        };
        (-65537 % v53) ** -65537;
        0.5080046772494435 / v55;
        ~0.5080046772494435;
    }
    static #c = "keyFor";
    [null] = null;
}
new C45(C45, null, v31);
const v73 = new C45("keyFor", C45, v29);
new C45(null, v73, v73);
class C75 {
    static {
        try {
            const t86 = "keyFor";
            t86.length = C45;
        } catch(e77) {
        }
        const o78 = {
        };
        function F79(a81, a82, a83, a84) {
            if (!new.target) { throw 'must be called with new'; }
            for (let v88 = 0; v88 < 100; v88++) {
                const o92 = {
                    968: undefined,
                    [268435439n]: 2105444095n,
                    __proto__: o78,
                    "g": a83,
                    "b": -4294967296n,
                    valueOf(a91) {
                        return v88;
                    },
                };
                function f93(a94, a95, a96) {
                    return a94;
                }
            }
        }
    }
    b;
    static get c() {
        let v98;
        try { v98 = ("643617900").trimEnd(); } catch (e) {}
        [9007199254740991,-9007199254740991,129,4];
        v98.a %= C75;
        [-9223372036854775807,1073741824,-4];
        [4294967296,-256415810,-1149886705,536870887,7104,4294967297];
        return "keyFor";
    }
}
new v73();
[-788.7260290236088];
function f110() {
    ("-536870912").normalize;
    const v113 = ("-536870912").g;
    const v116 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    for (let v117 = 0; v117 < 5; v117++) {
        function f118() {
            try {
                v116.forEach();
            } catch(e120) {
                e120.a = e120;
            }
            const v122 = Symbol.toPrimitive;
            v122.description;
            Symbol.for();
            return v122;
        }
        f118();
        %OptimizeFunctionOnNextCall(f118);
    }
    const v126 = new Uint16Array(209);
    v126[145] = v113;
}
new v35();
const v128 = new C75();
new C75();
function f130(a131) {
    let v134 = f2(this, v128);
    ({"d":v134,} = v134);
    v134[3132126518] = "f";
    new Array(234);
    class C138 {
    }
    const v139 = new C138();
    function F140() {
        if (!new.target) { throw 'must be called with new'; }
        for (let v142 = 0; v142 < 250; v142++) {
            const v144 = "p" + v142;
            v144.fontcolor("f", "p", v144, this).localeCompare(v139);
        }
    }
    function F147() {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v149 = new F147();
    function F150(a152, a153) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v154 = new F150();
    const v157 = [];
    function F159() {
        if (!new.target) { throw 'must be called with new'; }
        const v163 = Date.toString();
        v163[23];
        v163.replaceAll(v149, -37859n);
        const v167 = new Uint32Array(Uint32Array, Uint32Array, 4);
        v167[2];
        const v171 = new Set(v157);
        const v172 = v171.add;
        v172.f = v172;
        try { v172(v167); } catch (e) {}
        const v175 = v171["delete"](839612.5677247904);
        const v176 = v175 || v175;
        const v177 = v176 || v176;
        v177 && v177;
        const v179 = v176 && v176;
        v179 || v179;
        const o182 = {
        };
        o182.b = o182;
        try { Array(9223372036854775807); } catch (e) {}
        const v186 = ("getPrototypeOf").blink();
        const v187 = v186[28];
        const v188 = v187.strike();
        v188[4] = v188;
        const v190 = v186.strike(591114.0785999324).replace(19793, v154);
        v190[11] = v190;
        class C192 {
            #c = Array;
            static #b;
            static [v186];
            #g = v188;
            ["getPrototypeOf"] = -1.7976931348623157e+308;
        }
        class C193 extends C192 {
            ["getPrototypeOf"] = C192;
        }
        new C193();
        const v195 = new C193();
        const t212 = v195.constructor;
        new t212();
        const v198 = new C193();
        v198.getPrototypeOf;
        BigUint64Array.of();
        const v203 = Math.log2();
        const v204 = [315.3838771878211,0.8321654879979539,1.0,-813011.8421276518];
        for (let i = 0; i < 5; i++) {
            0 < 10;
            delete v204[v203];
        }
        new BigUint64Array();
        new Int8Array();
        const v212 = new C193();
        const v213 = v212.getPrototypeOf;
        new v213();
        const v215 = v212.getPrototypeOf;
        let v216;
        try { v216 = new v215(v172, -37859n); } catch (e) {}
        v216.getPrototypeOf = v216;
        const v217 = new C193();
        const v218 = v217.getPrototypeOf;
        try { new v218(v218); } catch (e) {}
        let v220;
        try { v220 = v218(4, 4, v213); } catch (e) {}
        let v221;
        try { v221 = new v218(v220, Uint32Array, v171); } catch (e) {}
        const v222 = v221?.constructor;
        try { v222.call(v187); } catch (e) {}
        class C224 {
        }
        try {
        } catch(e225) {
        }
        for (const v227 of Array(19793)) {
        }
    }
    new F159();
    new F159();
    new F140();
    new F140();
    return C138;
}
f130();
f130();
function f235(a236, a237) {
    arguments.toString = a236;
    return a236;
}
f235(f235, 8077n);
f130();
class C241 extends f130 {
}
new C241();
