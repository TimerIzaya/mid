new Float64Array(200);
const v5 = new Uint8Array(1996);
new Uint16Array(6);
new Uint32Array(10);
new v5();
const o15 = {
    "type": "minor",
};
gc(o15);
new Float64Array(255);
new BigInt64Array(3664);
const v24 = new WeakSet();
v24[-65537n] >>>= WeakSet;
const v29 = /((?<=a))/gudm;
const v30 = /gk4b*/vmsy;
let v32;
try {
const t0 = -1.3832922122240728e+307;
v32 = t0(2);
} catch (e) {}
try { v32(v29, 3664, v30, 3664, -4); } catch (e) {}
const v35 = Symbol.iterator;
const o39 = {
    [v35]() {
        const o38 = {
            next() {
                return v30;
            },
        };
    },
};
v24[0n] = -65537n;
delete v24[8];
const v44 = new Int16Array(7);
1024 * 1024;
new Uint16Array(1024);
new Float32Array(3415);
let v52 = 12;
v52++;
Int16Array.prototype = Int16Array;
new Int16Array(v52);
const v58 = new BigUint64Array(10);
Float32Array.prototype = Float32Array;
const v61 = new Float32Array(2494);
try { v61.find(Uint16Array); } catch (e) {}
const v63 = [7,v61];
const v65 = ([10,7,v63,v44])?.reverse;
try { v65(); } catch (e) {}
[v58,7];
let v69 = Int32Array;
const v70 = new v69(2917);
const v72 = v69--;
/S4/gvm;
/a?abc+e6H*/gvmsy;
/G(?:ab|cde)b?/udim;
const o77 = {
};
new Proxy(v63, o77);
v70["lastIndexOf"](v72);
10000 + 10000;
const o83 = {
    "maxByteLength": 10000,
};
const v85 = new ArrayBuffer(3471, o83);
Uint8Array.length;
const v88 = new Uint8Array(v85);
v88[2750];
const v92 = new Date();
v92[16] = Date;
class C93 {
    get c() {
        this.h &&= WeakSet;
        Object.defineProperty(v24, 3, { enumerable: true, get: Date });
        typeof this === "symbol";
        return Date;
    }
    constructor(a99, a100) {
        a99 | a99;
    }
}
const v113 = ~-4294967297n;
v113 ^ v113;
("minor").substring(Uint8ClampedArray, Symbol, Uint8ClampedArray, "minor", "8", Symbol);
