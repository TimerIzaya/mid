const v3 = [0.992536296009888,-761.2867763139582,3.0,-1000000.0,-0.44694424804328037,-5.93843568897398e+307,-1000000.0,-1000000000000.0,0.8297340320216733];
const v4 = [-1000000000000.0,3.362374100679288,-959.4926616395625,5.0,-545.566747718097,1.2850718763680337e+307,NaN,4.0,-1.0,-1000000000000.0];
const v5 = [1.7976931348623157e+308,-2.0,-1000000.0];
class C6 {
    static #m(a8, a9) {
        const v11 = (a9 & a8) >= v5;
        function F12(a14, a15) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.h = a14;
            } catch(e16) {
            }
            try {
                this.a = C6;
            } catch(e17) {
            }
        }
        new F12(51639, v5);
        new F12(a8, v11);
        new F12(a9, a8);
        return a8;
    }
}
new C6(v4, v3, v5);
new C6();
new C6();
for (let v31 = 0; v31 < 5; v31++) {
    function f32() {
        const v34 = Array();
        v34[3] = 65535;
        v34.pop();
        const v36 = [-1024,257,-495437172,-200813600,-1024,-9007199254740991,5,21171,60860];
        for (let v37 = 0; v37 < 5; v37++) {
            function f38() {
                const v40 = new Int32Array(v37);
                v40[1073741824] = v36;
                return 268435440;
            }
            f38();
            %OptimizeFunctionOnNextCall(f38);
        }
        return Array;
    }
    v31();
    %OptimizeFunctionOnNextCall(f32);
}
