const v0 = [-15,0,9,9223372036854775807,163137073,-256,128,-10221,5];
const v1 = [-2,-1];
const v2 = [-1664055542,-1703746552,37716,10000,-11];
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = v0;
    try {
        this.h = a6;
    } catch(e7) {
    }
    try {
        const v9 = new Float64Array();
        let {...v10} = v9;
        this.a = v1;
    } catch(e11) {
    }
    try {
        this.b = a6;
    } catch(e12) {
    }
}
const v13 = v0[v0];
try { v13(v1, v2); } catch (e) {}
new Uint16Array(76, v1);
new BigInt64Array(0);
new Promise(257);
const v24 = new F3(v1, v2);
new F3(v2, v1);
new F3(v0, v2);
["CzXAA","valueOf","g"];
[v2];
["CzXAA"];
const v37 = new Map();
function f38() {
    return Int32Array;
}
v37.constructor = f38;
const t37 = v37.constructor;
const v41 = t37();
const o42 = {
    __proto__: v41,
};
function F44(a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    const v48 = o42.constructor;
    try { v48(268435440n, a47, 257); } catch (e) {}
}
new F44(Map, 268435440n, 4096n, v24);
