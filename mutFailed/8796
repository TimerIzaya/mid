class C3 {
    constructor(a5, a6) {
        const v8 = Math?.log2;
        try { new v8(C3); } catch (e) {}
        const v12 = -a5 >> a5;
        let v13 = Math.atanh(v12);
        v13--;
        v12 - 928928666;
        Math.expm1(v12);
    }
    [47963] = 13193;
    #e;
    static 10;
    /*
    constructor(a18, a19) {
        const o20 = {
        };
        const o21 = {
            [C3]: a18,
            "g": this,
            [a19]: -4294967295,
        };
        const v23 = new Proxy(this, o20);
        v23[31876] = v23;
    }
    */
    static [-4294967295];
    static #f;
}
C3 |= C3;
const t30 = -4294967295;
t30.d += -4294967295;
const v25 = Symbol.iterator;
const o34 = {
    [v25]() {
        let v27 = 10;
        const o33 = {
            next() {
                v27--;
                const v31 = v27 == 0;
                const o32 = {
                    "done": v31,
                    "value": v27,
                };
                return o32;
            },
        };
        return o33;
    },
};
const v35 = new C3(-4294967295, -4294967295);
v35[47963] = v35;
const v36 = new C3(-4294967295, -4294967295);
const v37 = new C3(-4294967295, -4294967295);
function f38(a39, a40) {
    const o48 = {
        [13193]: -4294967295,
        "h": v35,
        get d() {
            const v42 = a40;
            const v44 = v35 >>> a40;
            C3[v44];
            v42[a39];
            return v44;
        },
        ...v37,
    };
    return o48;
}
f38.prototype;
const v50 = f38(47963, C3);
-536870912n | -536870912n;
try { ("-11838").link("-11838"); } catch (e) {}
-536870912n == "-11838";
v37 >>> v37;
function f59(a60) {
    const o63 = {
        "g": 1000000000.0,
        set a(a62) {
            a62.h = this;
        },
        "h": a60,
        "d": 1000000000.0,
        "b": -1.1013479045636231e+308,
        2: a60,
    };
    o63.e = o63;
    return o63;
}
const v64 = f59();
class C65 {
    #n(a67, a68, a69, a70) {
        super[this] = this;
        super[f59].o();
    }
    constructor(a75, a76) {
        try { ("async").strike(); } catch (e) {}
        const o81 = {
            "type": "minor",
        };
        gc(o81);
    }
}
try { C65.toString(); } catch (e) {}
for (let i85 = 0; i85 < 7; i85++) {
    new C65();
}
const v92 = f38(47963, v37);
v92[47963] = v92;
const v93 = f38(13193, v37);
class C94 extends f38 {
    set g(a96) {
        super[this];
        const v99 = v35;
    }
    [v37];
    constructor(a101, a102) {
        super(-4294967295, v93);
        try { ("jQlJc").split("reverse", 1000000000.0); } catch (e) {}
        try {
            new Uint8Array(6);
            -2.0 >> -2.0;
            const v114 = [-2.0,272822757,"function"];
            v114[1] = v114;
            new f38(-4294967295, v37);
        } catch(e116) {
        }
    }
}
const v117 = new C94(C3, v37);
v117[47963] = v117;
const v118 = new C94(C3, v50);
new C94(v36, v118);
function f120(a121, a122) {
    function f123(a124, a125) {
        return a125;
    }
    Set.toString = f123;
    const o127 = {
        ...a121,
    };
    o127.c = o127;
    return a122;
}
f120.prototype;
%PrepareFunctionForOptimization(f120);
f120();
%OptimizeFunctionOnNextCall(f120);
const t148 = "function";
t148[5] = "function";
1000000.0 + 1000000.0;
const v134 = (a135, a136, a137) => {
    a135++;
    try { a137.link(a137); } catch (e) {}
    let v141;
    try { v141 = ("function")["toUpperCase"](); } catch (e) {}
    try { v141.codePointAt(v64); } catch (e) {}
    "-268435456" ^ a135;
    return a135;
};
v134(1000000.0, "-268435456", "-268435456");
f120(f120);
