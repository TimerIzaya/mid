let v1 = "p";
const v3 = ["e","e","14",v1];
const v4 = [v3,"e","e","14"];
const v5 = [v4,v3];
function F6(a8, a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = a8;
    try {
        this.c = a10;
    } catch(e11) {
    }
    try {
        this.e = a8;
        const v12 = [-2.0];
        const v13 = [-1e-15,-2.220446049250313e-16,NaN,694.6602378654743,3.0087437684279763,-1000000000000.0,1.0,Infinity,1.0];
        function f14(a15, a16) {
            v1 / v4;
            return Array();
        }
        v13.toString = f14;
        [-689641.1070075696,-5.839857703327124e+307,-0.0,761696.6052607393,2.2250738585072014e-308,515808.3425492337,-1.196136831825316e+308,4.0,1000000.0];
        const v25 = 930985.3833165036 % 1000;
        const v26 = Math.floor(v13);
        Math.tanh(v13);
        const v29 = +(~v13);
        v25 * "14";
        v1.charCodeAt(a9, v26, v29, ...v12, v25);
        v13 >>> v3;
        const o36 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o36);
    } catch(e38) {
    }
    try {
        for (let i40 = 0; i40 < 7; i40++) {
            try {
                this.valueOf = a8;
            } catch(e46) {
            }
        }
        this.h = v3;
    } catch(e47) {
    }
}
const v48 = new F6(v5, v3, v4);
const v49 = new F6(v4, "14", v5);
const v50 = new F6(v5, "14", v49);
function F51(a53, a54, a55, a56) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = this;
    try {
        this.a = a54;
    } catch(e57) {
    }
}
function f58(a59) {
    v1 = "e";
    const v61 = [a59,v49];
    Reflect.construct(a59, v61, F51);
    return v61;
}
F51[Symbol.toPrimitive] = f58;
const v65 = new F51("e", v49, "14", v48);
const v66 = new F51(v1, v50, v1, v48);
const v67 = v65.__proto__;
v67[Symbol.toStringTag] = F51;
const t68 = "14";
t68[v48] %= v67;
c = "14";
v48[3641861731] = "14";
function F70(a72, a73) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = F51;
    } catch(e74) {
    }
    try {
        this.a = a73;
        const v76 = [v66,[a72,this,a72,this,a72],this,this,this];
        [v48,this];
        const v78 = F51 - v3;
        try { a73(v78, a72, F6, F6, ...v76, ..."e"); } catch (e) {}
    } catch(e80) {
    }
    try {
        this.c = v48;
    } catch(e81) {
    }
}
new F70(v50, v49);
new F70(v48, v50);
new F70(v50, v49);
new F51("14", v49, "14", v49);
const v86 = [-6.8035006781971e+307,1000000.0,1000.0,-2.715046407601891];
class C88 extends Array {
}
const v89 = new C88();
function f90(a91) {
    return a91;
}
f90[Symbol.species] = f58;
v89.constructor = f90;
v89.concat(v86);
