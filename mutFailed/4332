function f0() {
}
let v3 = -16n;
class C4 extends f0 {
    static [-1911645276n];
    static #n(a6) {
        new Float32Array(1000);
        new Int32Array(1391);
        new BigInt64Array(979);
        return v3;
    }
}
new C4();
new C4();
new C4();
class C22 {
    static #valueOf(a24, a25, a26) {
        Object.defineProperty([], "h", { configurable: true, enumerable: true, set: Date });
        const v29 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
        try {
            v29.forEach();
        } catch(e31) {
            e31.a = e31;
            e31.a = e31;
        }
        try {
            new f0();
        } catch(e33) {
        }
        try {
            String.f = this;
        } catch(e35) {
        }
        return this;
    }
    2 = f0;
}
new C22();
([-3,2147483648,127,18127,7,5]).toLocaleString();
new Float64Array(Float64Array);
const v44 = new BigInt64Array();
function f45() {
    const v47 = v44[undefined] instanceof f45;
    const o48 = {
    };
    o48.g = o48;
    const o49 = {
    };
    o49.h = o49;
    try {
        const o50 = {
        };
        o50.h = o50;
        o50.a = 591114.0785999324;
        o50.h = v47;
    } catch(e51) {
    }
    -12n << -12n;
    return undefined;
}
new C22();
new C22();
function f59() {
    function f60() {
    }
    f60();
    const v63 = Symbol.iterator;
    const o65 = {
        [v63]() {
        },
    };
    v3 *= -1911645276n;
    try {
        const o67 = {
        };
        new BigInt64Array(o67);
    } catch(e69) {
    }
    0 < 9;
    const v78 = new Int16Array(16);
    v78[10] = -9007199254740992;
    const o119 = {
        ["constructor"]: "constructor",
        2: 4.0,
        ..."rN",
        "f": "rN",
        __proto__: "rN",
        "g": 4.0,
        "h": "rN",
        m(a81, a82) {
            const v85 = new BigUint64Array(1000);
            const o86 = {
                ...v85,
            };
            a81[this] = "constructor";
            Array();
            class C92 {
                static #a;
                static n(a94, a95) {
                    const v96 = super.d;
                    try { v96(); } catch (e) {}
                    return a94;
                }
                [1];
                static [1] = 255;
                [255];
                f = -65536;
            }
            const v98 = new C92();
            const v99 = new C92();
            function f101(a102, a103) {
                return f101;
            }
            for (let i = 0; i < 10; i++) {
                v63[v63];
            }
            let v105 = -65536n;
            let v107;
            try { v107 = v98.m(1n, 10000n, 10000n, 1); } catch (e) {}
            function f108(a109, a110, a111) {
                let v112;
                try { v112 = v107(a110); } catch (e) {}
                v112 = a111;
                v105 >>= a111;
                v98[10] = 1n;
                v99.f;
                return v105;
            }
            const v116 = ("gYPHN").normalize("NFKD");
            try {
                ("constructor").localeCompare(v116);
            } catch(e118) {
            }
            return v116;
        },
    };
    o119[8] = Int16Array;
    return o119;
}
function f120(a121) {
    new Int8Array();
    return BigInt64Array;
}
f59[Symbol.toPrimitive] = f120;
const v126 = f59();
const v127 = f59();
const v128 = f59();
class C129 {
    #h = v126;
    static #e;
    constructor(a131, a132) {
        for (let i134 = 0; i134 < 9; i134++) {
            Object.defineProperty(v128, f59, { set: f59 });
            v127[i134] **= a131;
        }
    }
}
C129[Symbol.toPrimitive] = Symbol;
new C129(v127, v126);
new C129(v128, v126);
new C129(C129, v128);
try {
const t0 = 0.44967380041772886;
t0();
} catch (e) {}
const v148 = /((?<=a))/gudm;
const v149 = /gk4b*/vmsy;
let v151;
try {
const t0 = -1.3832922122240728e+307;
v151 = t0(2);
} catch (e) {}
for (let v152 = 0; v152 < 5; v152++) {
    try { v151(v148, v152, v149); } catch (e) {}
}
