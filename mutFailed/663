let v0 = 3549;
const v2 = new Uint8ClampedArray(v0);
const v5 = new Int8Array(9);
const v8 = new BigUint64Array(206);
[v5,v5,Uint8ClampedArray,[v2,v0,[v5,v2,v8,v0,v0]]];
class C16 {
}
new C16();
function f19(a20, a21) {
    new Symbol(127);
    new Float32Array(6);
    const v30 = new Float32Array(129);
    return v30;
}
Set.constructor = f19;
class C31 extends Set {
}
C31.toString = f19;
const t18 = C31.constructor;
t18(C31);
let v34 = 0.3050534209767637;
v34--;
new WeakMap();
let v41 = -404196.8973414763;
v41--;
--v41;
1136695933 ** 1136695933;
v0--;
const v47 = [BigUint64Array];
v47.filter();
const v50 = Math.__defineSetter__;
try { v50(); } catch (e) {}
Math.sinh();
const o53 = {
};
if (-3738) {
    function F54(a56, a57) {
        if (!new.target) { throw 'must be called with new'; }
    }
    for (let v58 = 0; v58 < 5; v58++) {
        function F59(a61, a62) {
            if (!new.target) { throw 'must be called with new'; }
        }
    }
}
const o63 = {
    ...v47,
};
