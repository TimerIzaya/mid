const v0 = [0,536870912,257,-6,9007199254740991,-2068039903,-14744,-128,268435441];
const v1 = [1,5,10,2147483649,-716553541,-38650,9223372036854775807,-10,2147483648,9];
function f2() {
    v1 + v0;
    const v5 = new Date();
    return v5;
}
v1.toString = f2;
const v6 = [1073741825,-65537,43478,41083,1024,16,536870912,8];
const v7 = [v1,v0];
v7[1] = v7;
let v8 = [v6,v1];
const v9 = [v6,v1,v6,v0];
const v10 = [v1,v8,v1,v7];
v10.constructor = f2;
const v11 = v10?.constructor;
try { new v11(v9); } catch (e) {}
const v13 = [v1,v1];
try { v13.group(v7); } catch (e) {}
[v10,v6,v13,v8];
class C16 {
    3694713621 = v0;
    static 1364 = v9;
    static set b(a18) {
        const v19 = [1,4294967296,-9007199254740992,4,-4294967295,-9,-4294967297,255,536870888,255];
        [v19,v19,v19];
        const o24 = {
            toString(a22) {
                class C23 {
                    static [this] = a22;
                }
                return C23;
            },
        };
        const o28 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o28);
    }
    static #a = v6;
    #h = v10;
}
C16[1364] = C16;
const v30 = new C16();
v30[3694713621];
const v32 = new C16();
v32[3694713621] = v32;
const v33 = new C16();
v33.toString = f2;
function f34(a35, a36) {
    a36[1] = a36;
    a36[1] = a36;
    const o52 = {
        [v1]: v13,
        __proto__: v1,
        n(a38, a39, a40) {
            const v41 = new C16();
            const v44 = new Int16Array(1371);
            v44.lastIndexOf(1371, 1351);
            let v47;
            try { v47 = a35(v41, a38); } catch (e) {}
            a35?.[v47];
            (v8 = v30)[Symbol.match];
            return v41;
        },
        "h": a35,
        [a35]: v10,
    };
    o52[Symbol.toPrimitive] = f34;
    return o52;
}
const v55 = f34(v33, v8);
try { v55.flat(); } catch (e) {}
const v60 = new Uint16Array(257);
const v61 = 1511 - 1511;
v60[v61] = v61;
f34(v55, v8);
f34(v1, v33);
class C64 {
}
const v65 = new C64();
const v66 = new C64();
const v67 = v66?.constructor;
try { new v67(); } catch (e) {}
const o69 = {
};
o69.b = v11;
o69.b = v65;
const o70 = {
};
Object.defineProperty(o70, "b", { writable: true, value: v66 });
