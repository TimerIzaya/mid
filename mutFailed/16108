const v2 = new Int8Array(3737);
const v5 = new Uint16Array(10);
new Float32Array(181);
function f10() {
    return 181;
}
const v16 = new Uint32Array(1000);
new Int8Array(2289);
const v22 = f10();
const v24 = v5["filter"](f10, v2);
v24[Symbol.toPrimitive] = f10;
let v28 = v16["findLast"](f10, v2);
new Int8Array(189);
function f30() {
    let v31 = 1000000000000.0;
    v31--;
    class C34 {
    }
    new C34();
    const v36 = new C34();
    [v36,C34];
    [257828.6336153492,v36];
    ("filter")["startsWith"](v24, v22);
    const v43 = f10 && f10;
    v43[Symbol.toPrimitive] = v43;
    Math.fround(-21053);
    Math.cosh(-21053);
    ~v43;
    const v49 = [v36];
    function f50(a51, a52) {
        v28 = Uint16Array;
        return 1073741824 & 1073741824;
    }
    v49.constructor = f50;
    class C55 extends C34 {
    }
    function f56(a57, a58) {
        return a57;
    }
    Set[Symbol.toPrimitive] = Symbol;
    Set.toString = f56;
    Set.constructor(Set);
    v49.constructor;
}
%PrepareFunctionForOptimization(f30);
f30();
%OptimizeFunctionOnNextCall(f30);
f30();
