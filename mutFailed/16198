class C3 {
    valueOf(a5, a6) {
        return -128;
    }
    p(a11, a12) {
        a12 += a12;
        return a11;
    }
    [C3];
    b = 536870889;
    constructor() {
        const v14 = this.constructor;
        try { new v14(); } catch (e) {}
        super.f >>= this;
    }
}
const v16 = new C3();
new C3();
new C3();
const v30 = new Number();
const v36 = [-2.220446049250313e-16];
function f37(a38) {
    a38 !== v36;
}
new BigUint64Array(256);
function f43(a44) {
}
new Set();
function F50(a52, a53) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e54) {
        for (let [v55,v56] of v30) {
        }
    }
    [1000000000000.0];
    new Int16Array(242);
    try {
        new F50(v16, Set, -2046072084n);
    } catch(e68) {
    }
}
new F50();
new F50();
