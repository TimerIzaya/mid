let v1 = -15475n;
function f3(a4) {
    a4 & a4;
    const o16 = {
        m(a7, a8) {
            const v9 = super.a;
            const v10 = super[v9];
            try { new v10(a8, a8, v9, v10, a4); } catch (e) {}
            super.h;
            return a4;
        },
        [-21393n](a14, a15) {
            a15[-21393n] **= a15;
            v1 = a4;
            a14[4] -= a15;
            return a15;
        },
    };
    return o16;
}
const v17 = f3(v1);
try { v17.isPrototypeOf(f3); } catch (e) {}
const v19 = f3(-268435456n);
const v20 = f3(-21393n);
try { v20.m(v20, v19); } catch (e) {}
new Int16Array(5);
new BigUint64Array(128);
try { new BigInt64Array(BigInt64Array, -21393n, BigInt64Array); } catch (e) {}
const v31 = new BigInt64Array(1570);
v31[511] = v31;
const v32 = [0.40942238360349337,9.405201967735488e+306,-914.634335773701,5.134124740041841,-1.0,1000000000000.0,-5.0,-298.5783868000192,1000000.0];
Int32Array.BYTES_PER_ELEMENT;
const v35 = new Int32Array(v32, Int32Array, Int32Array);
Date.UTC(268435456, v35, v32);
