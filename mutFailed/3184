const v4 = new WeakMap();
try { v4.set(WeakMap, 1.5506328553208384); } catch (e) {}
let v6 = 65536;
v6--;
-9223372036854775807 & -9223372036854775807;
-5 === -5;
let v14 = -(-1073741824);
v14--;
-12 >>> -12;
const v18 = /Zc(a\1)((\xed\xa0\x80))\x02Ft7S\p{Nd}+/vdi;
const v19 = /X/udsy;
const v20 = /{12,3b/;
function f21() {
    return v20;
}
const v22 = [1.0,-6.818981069405753e+307];
try { Reflect.construct(v6, v18); } catch (e) {}
const v26 = [v22];
try { v26.entries(); } catch (e) {}
const v28 = Reflect.construct(Uint8ClampedArray, v26);
function f29(a30) {
    [] = v26;
    class C31 {
    }
    return v19;
}
v28[Symbol.toPrimitive] = f29;
v28[1] = v28;
let v34;
try { v34 = v28.find(f21); } catch (e) {}
v34--;
