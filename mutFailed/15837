[NaN,1.6017352859732963,-1.7976931348623157e+308,2.0,-Infinity];
[-1000000000000.0,-2.220446049250313e-16,4.0,-1e-15,0.2237608641920612];
const v2 = [2.220446049250313e-16];
[-Infinity,914649.4417381578,-0.0,-5.0,-1000.0,8.278771977864416,0.8703767031616662,2.2250738585072014e-308,1.7976931348623157e+308];
[5.0,-0.0,-1000000.0,0.18859300142292446,6.130092799507601,2.0,-7.927394892873332,0.7143557728001261,-1000000000.0];
const v11 = [-2.2250738585072014e-308,0.18098243186818863,3.0,918.4800055803166];
"268435439" === 8 ? "268435439" : 8;
const v15 = [0.8307152163010869,1.0,0.0];
v15[2] = v15;
new Int8Array();
const v21 = new Map();
v21.toString = Array;
function f22(a23, a24) {
    const o35 = {
        "a": a24,
        [a23]: v21,
        [v21]: Map,
        [2221](a26, a27, a28) {
        },
        ...v21,
        "b": a23,
        [a24]: Map,
        valueOf() {
            const v31 = /gk4b*/vmsy;
            Object.defineProperty(v31, -9223372036854775808, { enumerable: true, set: gc });
            return v31;
        },
        "h": a23,
        valueOf(a34) {
            return a34;
        },
    };
    return a24;
}
for (let v36 = 0; v36 < 395; v36++) {
    f22();
}
const v39 = new Array(5);
v39[3] = v2;
ArrayBuffer[Symbol.toPrimitive] = f22;
new ArrayBuffer(ArrayBuffer, ArrayBuffer);
class C46 {
    g;
    constructor() {
        const v48 = this.constructor;
        try { new v48(); } catch (e) {}
    }
}
const v50 = new Int8Array(181);
new Uint8Array(64);
const o55 = {
};
new Float64Array();
const v60 = new Float32Array(2);
function f61() {
    ([-3,47741,-16128,9007199254740992,-1024,-58567,268435439,-4294967296,1807295090,-9223372036854775808]).flat();
    return v50;
}
v60[Symbol.toPrimitive] = f61;
v60[1] = v60;
new Int32Array(v60);
new Uint8Array(0);
class C70 {
    static #o(a72, a73) {
    }
    constructor(a75, a76, a77) {
        for (let v78 = 0; v78 < 32; v78++) {
            a75["p" + v78] = v78;
        }
    }
}
function f81(a82) {
    return a82;
}
f81.fuck = "dotAll";
class C83 extends f81 {
    static [v39];
    d;
    g;
}
new BigUint64Array(4096);
let {...v88} = [-536870912,-65537,10,-9007199254740990,-11,46376,2,6];
const v90 = new WeakMap();
Promise.reject(Promise);
const o93 = {
    __proto__: Array,
};
class C94 extends C70 {
    static 1 = v90;
    10000;
}
new Int8Array();
const o99 = {
    "execution": "async",
    "type": "minor",
};
v11[5] = [-5];
const o103 = {
    toString() {
        super[this];
    },
};
gc(o99);
v90.h |= 0;
new Date();
try {
    C83.fuck(v39, -65536, v50, -65536);
} catch(e109) {
}
gc();
