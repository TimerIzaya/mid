const v2 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
v2.length;
const v4 = -30793;
const o5 = {
    5: v4,
};
function f13() {
    const v17 = Symbol.toPrimitive.description.codePointAt();
    ([-1.5424212036356715e+308]).shift();
    [1073741824,1073741823,1376142744,1073741825];
    return v17;
}
v2();
%OptimizeFunctionOnNextCall(f13);
new Int32Array(474);
new Uint8ClampedArray(3579);
new Int16Array(2);
for (let v31 = 0; v31 < 25; v31++) {
    try {
    } catch(e32) {
        eval("");
    }
    const v37 = [601759695];
    const v38 = [1073741824,1073741823,1376142744,1073741825];
    function f39(a40, a41, a42, a43) {
        a40 >>> a40;
        a42[3];
        ("find").codePointAt(v38);
        try { v38["find"](..."find", a43, ...v37); } catch (e) {}
        return a43;
    }
    for (let v49 = 0; v49 < 10; v49++) {
        f39(v49, v49, v38);
    }
}
function f53() {
    const o70 = {
        m(a56) {
            try { a56.m(128); } catch (e) {}
            try { a56.next(); } catch (e) {}
            a56.c = a56;
            const o59 = {
            };
            class C62 {
            }
            const v63 = C62.name;
            v63 == v63;
            const v67 = new Int8Array(3938);
            v67[2620];
            let v69 = 3;
            [...v69] = v67;
            return WeakMap;
        },
    };
    o70.m(o70);
    return 1776;
}
