function F0() {
    if (!new.target) { throw 'must be called with new'; }
    const v4 = [-5.0,-4.0,-1.7976931348623157e+308,-897.6003446951657,-1000000.0,1.8928166106024224e+306,-2.0,-1000000000000.0];
    function F5(a7, a8, a9, a10) {
        if (!new.target) { throw 'must be called with new'; }
        try { a8.call(); } catch (e) {}
        for (let v12 = 0; v12 < 50; v12++) {
        }
    }
    const v13 = new F5(7.090076723213673e+307, 7.090076723213673e+307, F5, F0);
    const t10 = F0.constructor;
    new t10(v4, v13);
    new F5();
    try {
        this.a = -9223372036854775807;
    } catch(e17) {
    }
    try {
        this.f = -9223372036854775807;
    } catch(e18) {
    }
}
let v19 = new F0();
new F0();
const v21 = new F0();
const v22 = [391458.73807829525,-586.3015986613159];
const v23 = [3.4068104361116642,-1000.0,-1000000.0,-7.047253108187076e+307,3.0,5.0];
[5.192230478101355e+307];
function f25() {
    return v21;
}
const v31 = [10,-9007199254740991,512,7];
function f32(a33) {
    const o34 = {
        ...v31,
    };
    return v22;
}
const v35 = /a\Sc?/giy;
Symbol.split;
v31[v19] = v23;
v35.valueOf = f32;
v19 >>= v35;
let v40 = -2.0;
v40++;
Math.log1p(v40);
