let v1 = /Cs[\cz]*/vi;
function f2(a3, a4, a5, a6) {
    for (let v7 = 0; v7 < 5; v7++) {
        const o10 = {
            set c(a9) {
            },
        };
    }
    const v12 = new Int8Array();
    const v13 = v12.entries();
    const v14 = v13.next(a4, a3, v13, a3, a6);
    v14.value = v14;
    return 46598 / v1;
}
function f22(a23, a24, a25) {
    const o75 = {
        n(a27, a28, a29, a30) {
            let v31;
            try { v31 = new a30(...a27, -546220245n, ...a27, ...a27, a24, a29); } catch (e) {}
            v31.b += v31;
            return a29;
        },
        ...a23,
        4294967296: a24,
        "d": 268435441n,
        get e() {
            Array(19793);
            Math.atanh(0.033437543729764596);
            try {
            const t0 = "HPKR";
            t0();
            } catch (e) {}
            class C42 {
            }
            const v43 = new C42();
            function F44(a46, a47) {
                if (!new.target) { throw 'must be called with new'; }
                const v48 = this?.constructor;
                try { new v48(a46, v43); } catch (e) {}
            }
            ([NaN,3.0])["acos"](-483497369);
            const v54 = /(?:ab)?/gudims;
            const v55 = /v\c~\9G(?<a>.)5xs/gisy;
            function f56(a57, a58) {
                try { a57.exec(v55); } catch (e) {}
                const o69 = {
                    m(a61, a62) {
                        a62[Symbol.asyncIterator] = a58;
                        return v54;
                    },
                    ...v54,
                    "d": v54,
                    [a57]: v54,
                    get a() {
                        ({"a":v1,"d":a57,} = this);
                        this[this] = v1;
                        this[Symbol.split];
                        return a57;
                    },
                };
                return o69;
            }
            f56?.constructor;
            Math.floor(-536870912);
            const v72 = +a24;
            v72 << v72;
            -536870912 << a24;
            return -546220245n;
        },
    };
    return o75;
}
f22("1163035831", -546220245n, 8n);
f22("HPKR", -546220245n, -546220245n);
f22("1163035831", -546220245n, -546220245n);
function f82(a83, a84, a85) {
    const o86 = {
    };
    return o86;
}
f82(9, 9, 9);
new Uint32Array(1000);
new Float64Array(2867);
new Uint8ClampedArray(10);
function f99() {
    function F101(a103) {
        if (!new.target) { throw 'must be called with new'; }
        const v104 = this.constructor;
        v104.e = v104;
        try { new v104(); } catch (e) {}
        this.g = -1;
    }
    const v106 = [];
    const v108 = ("d").strike(v106, "d");
    try {
        v106.length = v108;
    } catch(e109) {
    }
    new F101();
    const v111 = new F101(-1);
    class C112 extends F101 {
        [-1];
        constructor(a114, a115, a116) {
            for (let v117 = 0; v117 < 25; v117++) {
                const o122 = {
                    "execution": "async",
                    "type": "minor",
                };
                gc(o122).then(new.target);
            }
        }
    }
    new C112();
    return v111;
}
%PrepareFunctionForOptimization(f99);
f99();
%OptimizeFunctionOnNextCall(f99);
f99();
