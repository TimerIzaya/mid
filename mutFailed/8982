const v0 = [-1000000000000.0,94510.66524791927];
const v1 = [0.27830809136597234,1000000000.0,2.220446049250313e-16,1.1003096941772642e+308,2.2250738585072014e-308,1000000000000.0,-577817.977468689,-5.0,-680.4815440812829,9.232794286661147];
[-1.0,1000000.0,0.0,1.7976931348623157e+308,95305.98336150334,-929219.3813383145,-1e-15];
let v3 = 4096;
const v4 = v3--;
new Map();
!true;
function f12() {
    v0[8] = v4;
    9007199254740991n * 9007199254740991n;
    return true;
}
Map[Symbol.toPrimitive] = f12;
const v17 = new Map();
v17.size;
const v22 = [];
function f23() {
    return f12;
}
Object.defineProperty(v22, Symbol.toPrimitive, { get: f23 });
function f27() {
    const v28 = [-65535,536870889,4096];
    for (let v29 in v28) {
        v29--;
        Math.log10(v29);
        v29 ** 1000000000000.0;
    }
    return v28;
}
Date[Symbol.toPrimitive] = f27;
try { Date.bind(Date); } catch (e) {}
class C38 {
    constructor(a40, a41) {
        const v42 = this?.constructor;
        try { new v42(Map, Map); } catch (e) {}
        Date | a40;
    }
}
try { new Map(v1, v3); } catch (e) {}
new C38(v22);
Date.length;
