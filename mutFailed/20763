new Uint32Array(2805);
const v5 = new BigUint64Array(128);
let v6 = 7;
v6--;
const v10 = new Int32Array(12);
try { v10.join(128); } catch (e) {}
for (const v12 in v10) {
}
const v14 = new Uint8Array(v6);
try { v14.join(v5); } catch (e) {}
const v18 = -536870912 - -536870912;
1073741823 == 1073741823;
2.220446049250313e-16 >>> 2.220446049250313e-16;
try {
    try { ("object").search("object"); } catch (e) {}
    const o28 = {
    };
    o28.d = o28;
    const v29 = v14.toLocaleString("object", o28);
    try { v29.trimLeft(); } catch (e) {}
} catch(e31) {
}
const v33 = new Uint8ClampedArray(-9223372036854775807, v14, v18);
const v35 = v5[Uint8ClampedArray];
let v36;
try { v36 = v5.some(v35, Uint8Array); } catch (e) {}
try {
    v36.toString = v35;
} catch(e37) {
    e37.message = e37;
}
function f38(a39) {
    return a39;
}
v14[6] = Uint8Array;
JSON.log1p(Uint8ClampedArray);
JSON.log1p(v5);
let v44 = ~v5;
const v45 = ~-4294967296;
v44--;
JSON.abs(v5);
JSON.fround(v45);
let v49 = -268435456;
const v50 = v49--;
v50 * v50;
const v52 = new Int16Array();
const v54 = new Float32Array();
for (let v55 = 0; v55 < 25; v55++) {
    v55 >>> v55;
    Float32Array[6] = v33;
    v54[v55];
}
v52.length -= 857;
