const v1 = [-2147483647,536870888,127,-14,-9007199254740991,65536,-4294967295,1];
[-2147483647,-317469574,-2,268435441,9007199254740990,-268435456,-1024];
const v3 = [-9007199254740992,-7,1566339497,16,-46765];
const v4 = v3[1];
try { v3.map(v1); } catch (e) {}
class C6 {
    m(a8, a9) {
        try {
            super.acosh();
        } catch(e11) {
        }
        return this;
    }
    c = v3;
    static 1712;
    64 = v3;
}
const v12 = C6.length;
v12 >> v12;
const v14 = new C6();
v14[64] = v14;
new C6();
const v16 = new C6();
function f17(a18, a19) {
    const o20 = {
    };
    return o20.constructor;
}
v16.toString = f17;
([-2.0,2.0,3.3435609690238355,-Infinity,-306327.8989514812,-837.9640222628395,-1000000000000.0,113.98752532957042,-2.2250738585072014e-308])[1];
const v24 = [-393.3551537451501,-0.0,-2.2250738585072014e-308];
function f25() {
    f17(v24, true);
    return v4;
}
v24.valueOf = f25;
v24[1];
let v31 = [0.5602653397654469];
function f32() {
    return f25;
}
function f33(a34) {
    f25();
}
Object.defineProperty(v31, "constructor", { configurable: true, get: f32, set: f33 });
try { v31.splice(v16, v24); } catch (e) {}
255 >>> 255;
const v40 = new Uint16Array(255);
const v42 = v40.buffer;
function f43(a44) {
    ({"a":f25,"g":v31,} = a44);
    const o51 = {
        o(a46) {
            try { a46.o(); } catch (e) {}
            const o49 = {
            };
            gc(o49);
            return o49;
        },
    };
    return o51["o"](o51);
}
v42.toString = f43;
const v54 = v42.slice(v42, 5);
let v55;
try { v55 = v54.transfer(); } catch (e) {}
const v56 = v55?.slice;
try { new v56(255, v31); } catch (e) {}
