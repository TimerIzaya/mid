let v0 = Array;
let v2 = new v0(2241);
class C3 extends v0 {
    [v0] = 2241;
    [v2] = v2;
    constructor(a5, a6) {
        super(a6);
        const v7 = this.__proto__;
        Object.defineProperty(v2, "a", { writable: true, enumerable: true, set: v0 });
        this[2241] &= -63976;
        v2 = this;
        this[3176];
        const v12 = super.copyWithin(-63976, C3, v7);
        super[a6];
        v0--;
        v12.__proto__;
        const t15 = this[256];
        t15[C3] /= 2241;
        -63976 % 7.951895911967558;
        const v19 = ~-63976;
        Math.acosh(a5);
        Math.acos(v19);
    }
    static [2241] = 2241;
}
const v22 = new C3(C3, v2);
const v23 = new C3(v0, v22);
const v24 = new C3(v0, v22);
function F28(a30, a31, a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -781.3499870966232;
    } catch(e34) {
    }
}
const v35 = new F28(v23, v23, F28, v23);
const v36 = new F28(v23, v23, v35, v23);
new F28(v24, v36, v24, v2);
function F38(a40, a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -781.3499870966232;
    } catch(e44) {
    }
    try {
        this.h = v35;
    } catch(e45) {
    }
}
new Uint8Array(128);
new Float32Array(256);
new Float64Array(5);
new F38(-2.0, v22, 4.0, v24);
new F38(-2.0, 2241, 4.0, v22);
new F38(-2.0, 2241, -781.3499870966232, v2);
const v60 = 5493 >>> 5493;
Math.atan2(v60, v60);
