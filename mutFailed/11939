const v0 = [173174996,536870889,-4096,268435456,536870912,127,1073741824,-7];
const v1 = [-6135,-37816,1634505153,-2147483649,10];
[9223372036854775807,-65537,1,1553727917,-4294967296,0,7,-2147483649,64];
const v6 = [1,1,1];
[v1,v1];
[64,v0];
[-1000000000000.0,-1e-15,-2.4982495675932848,0.0,NaN];
[-2329.7533397527877,-0.0,-767928.9293875691,4.0,1000000.0,1.3232723968699727,0.7209745905281661,8.807215509038642];
[0.23449681451060211,-1.3180974566102865e+308,-2.0,-1000000000.0,0.6107310765455765];
const v14 = new Int32Array(29);
new Int16Array(v14);
new Uint8ClampedArray(5);
const v21 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
function f22(a23, a24) {
    let v25 = Math;
    a23 && 64;
    ++a23;
    v25.hypot(a23 * v21);
    v25++;
    return 29;
}
v21.constructor = f22;
function f33(a34, a35, a36, a37) {
    a36?.constructor;
    const v39 = /(?:a*)+q(?<a>.)/guds;
    function f40(a41) {
        const v42 = v21.constructor;
        v42(v42);
        a41.constructor.$2;
    }
    for (let [i51, i52] = (() => {
            function f47(a48, a49) {
            }
            return [0, 10];
        })();
        (() => {
            const v53 = i51 < i52;
            !v53;
            return v53;
        })();
        i52--) {
        for (let v60 = 0; v60 < 25; v60++) {
            f40(v39);
        }
    }
    function f62() {
    }
    return f62;
}
for (let v63 = 0; v63 < 10; v63++) {
    v6();
}
%OptimizeFunctionOnNextCall(f33);
const t53 = 5;
t53();
