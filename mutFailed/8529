class C3 {
    set f(a5) {
        try {
            this.fuck(7.415819774660796e+306, a5, a5);
        } catch(e7) {
        }
    }
    [7.415819774660796e+306];
    toString(a9) {
        const v10 = a9 >> this;
        super[this]?.[8];
        this >>> -964834.9615042942;
        Math.clz32(-964834.9615042942);
        v10 ** -964834.9615042942;
        -1 << v10;
        Math.log(-1);
        return -964834.9615042942;
    }
}
const v21 = new C3();
const v22 = new C3();
const v23 = new C3();
function f24(a25, a26) {
    const o46 = {
        "c": a26,
        "b": v21,
        [7.415819774660796e+306](a28, a29, a30) {
            try { a25.toString(v23); } catch (e) {}
            return this;
        },
        "a": a25,
        "d": 7.415819774660796e+306,
        65536: a26,
        "g": C3,
        set f(a33) {
            super.d;
            a33 <= 7.415819774660796e+306;
            -a26;
            new Uint32Array(1146);
            new C3(72);
            new Uint8ClampedArray(443);
        },
    };
    o46[Symbol.toPrimitive] = f24;
    return o46;
}
f24(v21, f24(C3, C3));
const v51 = f24(v23, v21);
class C52 {
    static m(a54, a55) {
        super[v22] = a55;
        const o59 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o59);
        return C3;
    }
    static [v51];
    [2147483648] = 2147483648;
    static #d = f24;
}
new C52();
new C52();
new C52();
function f65() {
    return 2147483648n;
}
%OptimizeFunctionOnNextCall(f65);
f65();
