const v0 = [-1e-15,-2.4211343332064357e+307,0.2906191046941736,1e-15];
function f1(a2) {
    function F4(a6, a7) {
        if (!new.target) { throw 'must be called with new'; }
        const v8 = a7.constructor;
        try { v8("-268435456", a7); } catch (e) {}
    }
    return F4;
}
v0[Symbol.toPrimitive] = f1;
const v12 = [0.34248833781770227,-5.178972955913784,NaN,6.761522275767891,-767.7258884647915,-9.64856445544081,2.2250738585072014e-308,0.9370140770526654,1.0];
function f13(a14) {
    const v15 = new f1(a14);
    ("dXSrM").search([5.065712489635526,-4.0,-1.078367651051927e+308,-1.7976931348623157e+308,0.0,-1000000000.0]);
    return v15;
}
v12.toString = f13;
const v19 = [1e-15,-5.466477219413773e+307,-Infinity,-4.899472468953565e+307,0.2498303023214915,267.418355986661,-1.0,-4.0];
const v20 = v0.__proto__;
v12.length ||= v20;
String(v20);
let v24 = 1000.0;
class C25 {
    static {
        ++v24;
    }
}
const v30 = v0["findIndex"](String, String);
const v31 = /a(?!b)/dmsy;
const v32 = /La??I0e(ab|cde)\1/sy;
const v33 = /foo(?<=bar)baz/vdms;
function f34(a35, a36, a37) {
    a35.toString = Symbol;
    function f38() {
        return f13;
    }
    function f39(a40) {
        new Uint32Array(256);
    }
    Object.defineProperty(a36, Symbol.toPrimitive, { writable: true, get: f38, set: f39 });
    a37.valueOf = f39;
    const o57 = {
        "f": v33,
        "b": v33,
        65537: a35,
        toString(a47, a48, a49, a50) {
            super.c;
            let {"source":v52,} = v32;
            return v12;
        },
        __proto__: v12,
        n(a54, a55) {
            return String;
        },
        [v30]: v33,
        [v31]: a35,
        "a": a37,
        "d": a36,
        "e": a37,
        "c": v0,
        "g": v33,
        "h": v33,
        ...a37,
        1628: v0,
        [v0]: a35,
        ...v12,
        ...v32,
        [v12]: v12,
    };
    return o57;
}
const v58 = f34(v31, v32, v32);
const v59 = f34(v32, v32, v31);
const v60 = f34(v31, v31, v32);
const v61 = [v0];
[v31,v32,v61,v61,f34];
[v33];
[v33,v19,v59,v60,v33];
[v33,v12];
[v32,v59,v58];
v31 + v31;
try {
    new f34(-2.2250738585072014e-308, v31, -2.2250738585072014e-308);
} catch(e71) {
}
const v74 = new Uint32Array(5);
v74[1] = 716884141;
