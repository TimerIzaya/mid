function f3(a4) {
    const o17 = {
        "e": a4,
        valueOf(a6, a7) {
            this[a4] = 15;
            new Float64Array(Float64Array);
            new Int16Array(148);
            const v16 = new Uint8ClampedArray(891);
            return v16;
        },
    };
    a4.a /= 15;
    Reflect.construct(f3, [a4], f3);
    return a4;
}
const v24 = f3(43606);
const v25 = f3(43606);
const v26 = f3(16);
class C31 {
    constructor(a33, a34) {
        this[v24];
        try { v25.valueOf("3", v26); } catch (e) {}
        a33 / a33;
    }
    [15];
    toString(a42, a43) {
        try {
            a43.valueOf = a43;
        } catch(e44) {
        }
        return "255";
    }
}
const v45 = new C31(15, 43606);
new C31(43606, "255");
new C31(43606, 15);
const v48 = /xyz{0,1}ja.a(?=b)/ui;
class C49 {
}
const v50 = new C49();
const v54 = new Set();
function F55(a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        try {
            ("toString").charAt(15);
        } catch(e60) {
        }
        function f61() {
            return a57;
        }
        v45.d = a57;
    } catch(e62) {
        for (let [v63,v64] of a57) {
            new Array(2);
            new Int8Array(253);
            new Uint32Array(16);
            a58.b /= e62;
            try { v48.compile(v64); } catch (e) {}
            Math.clz32(Set);
            Math.sign(!12);
            new Int16Array(a57);
            try {
                v54.values();
            } catch(e83) {
            }
        }
    }
    try {
        this.h = v54;
    } catch(e84) {
    }
    var h = v48;
    try {
        const t74 = "255";
        t74.e = v50;
    } catch(e85) {
    }
    try {
        const v86 = v54[this];
        try {
            new F55(v86, -268435456n);
        } catch(e89) {
        }
        this.b = Set;
    } catch(e90) {
    }
}
const v91 = new F55(F55, 2);
const v92 = new F55(v91, F55);
new F55(v92, null);
