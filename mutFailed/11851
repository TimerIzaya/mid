function f3(a4, a5) {
    const o12 = {
        set b(a7) {
            try {
                this.fuck(/FB6/vims, -1073741824);
            } catch(e11) {
            }
        },
        __proto__: 777733.3134471336,
        ...a4,
        180: -2.220446049250313e-16,
    };
    function F13(a15, a16) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            new F13(F13, a16);
            const v21 = -1000000.0 | -32070;
            (-1000000.0) ** v21;
            a5.log10(Math);
            -v21;
        } catch(e25) {
        }
    }
    return F13;
}
const v26 = f3(777733.3134471336, 777733.3134471336);
f3(777733.3134471336, -2.220446049250313e-16);
const v28 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
for (let v29 = 0; v29 < 5; v29++) {
    function f31() {
        try {
            v28.forEach();
        } catch(e33) {
            const t33 = e33?.constructor;
            t33();
        }
        const v36 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        Object.defineProperty(v36, 10, { writable: true, configurable: true, enumerable: true, value: v26 });
        v36.push(v36);
        const o43 = {
            toString(a39, a40) {
                return (undefined && undefined) <= v36;
            },
        };
        return v28;
    }
    f31();
    %OptimizeFunctionOnNextCall(f31);
}
f3(777733.3134471336, -1000000000000.0);
[-8.046373447239741e+307,-1.3630343416438702e+308,-356.3256907806309,836.4748753137478,-183.26184051576];
[-1.7946628720965904e+308,1.395499544629926,1000000000.0,-1.0,-623693.3527509468,2.0,-1e-15,NaN,188.74715466480552];
[6.452764958779156];
[-2068590587,129,2147483647,59084,-856055963,1956188013,4,5,2147483647];
const v50 = [7,-443332715,10,1884481833,-42720,11,7,-16];
[4096,-29363,5,-3,9007199254740992,10];
const v52 = [601759695];
v52[Symbol.toPrimitive] = f3;
const v55 = [427812215,61195,-2147483647,4096,-2147483647,30905];
function f57(a58, a59, a60, a61) {
    function f62() {
        const o69 = {
            "h": -1073741824,
            ..."Vre",
            valueOf(a67, a68) {
                return 522675525n;
            },
            ..."Vre",
            "c": a61,
            5: v55,
            6: -268435456,
        };
        return a61;
    }
    f62();
    %OptimizeFunctionOnNextCall(f62);
    let v72;
    try { v72 = v55["find"](..."find", a61, ...v52, ...v55, ...522675525n); } catch (e) {}
    v72 <= a60;
    return v50;
}
function f74() {
    return f57;
}
Object.defineProperty(f57, "valueOf", { writable: true, configurable: true, enumerable: true, get: f74 });
const v75 = f57(v55, v55, v52, 522675525n);
for (let v76 = 0; v76 < 5; v76++) {
    f57(v52, v76, false, v76);
}
%OptimizeFunctionOnNextCall(f57);
f57(522675525n, v52, f57, v75);
