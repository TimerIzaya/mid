new BigInt64Array(90);
let v3 = 28;
const v5 = new Uint8Array(v3);
new BigInt64Array(3897);
function f9() {
    return 3897;
}
class C10 extends BigInt64Array {
    static get g() {
        this.h;
        f9();
        %PrepareFunctionForOptimization(f9);
        f9();
        f9();
        %OptimizeFunctionOnNextCall(f9);
        return f9();
    }
    [f9] = BigInt64Array;
    set b(a18) {
        v3 &&= a18;
        super.byteLength >>= a18;
        a18[f9] += C10;
    }
    [Uint8Array] = f9;
    1057 = v5;
    #a = 90;
    4294967296;
}
new C10();
let v20 = 0;
while (v20 < 9) {
    try {
        v5.buffer = v3;
    } catch(e23) {
    }
    v20++;
}
new C10();
new C10();
/(?:ab)|cde/vdm;
/a\S5/vi;
/{,}9a\S/gdi;
const v32 = [12,12];
f9();
delete C10[483020020];
const v38 = [12,v32];
class C39 {
    constructor(a41, a42) {
        new Uint16Array(a41);
    }
}
new C39(v38);
