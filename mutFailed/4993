const v0 = [];
Math.sinh(-3.3474037991793697);
const v10 = new Uint32Array(Uint32Array);
new Int16Array(v10);
let v15 = Float64Array;
v0.forEach(v15 = v0);
let v17 = Symbol.toPrimitive;
v17 = v15;
[-1000000000000.0,0.0587217402208674,0.6663949654387794,2.0,-1.7976931348623157e+308,3.0,2.220446049250313e-16];
[-1.6708120651759587e+308,0.32842845439967805,Infinity,2.220446049250313e-16,-1.7976931348623157e+308,1000000000000.0,6.472474206117113];
[0.01793822267028744,71.29138447013406,1000.0,859.3425575889155,2.2250738585072014e-308];
for (let [v23,...v24] of "atan2") {
}
function f25() {
}
new Int32Array(7);
for (let [i38, i39] = (() => {
        class C29 {
            static {
                this < this;
            }
        }
        new Uint16Array(10);
        new Float64Array(1073741824);
        return [256n, 10];
    })();
    i38 < i39;
    ) {
}
new Uint32Array(14);
Symbol.toPrimitive;
class C53 extends Int8Array {
    [128];
}
new Float64Array(1604);
try { (-12n).getTime(-12n, -816409267); } catch (e) {}
-253026077 % -816409267;
