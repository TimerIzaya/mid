function f0() {
    class C1 {
    }
    function F2(a4, a5, a6) {
        if (!new.target) { throw 'must be called with new'; }
        a4 >>> a4;
        a5 - a5;
        -a6;
        const v10 = this.constructor;
        try { new v10(a6, C1); } catch (e) {}
    }
    const o28 = {
        ["A"](a16, a17) {
            new BigUint64Array();
            536870912n << 536870912n;
            try {
                this.e = "A";
            } catch(e22) {
            }
            try { a16(..."A", 6.933949564213394e+307, 37835, a17, this); } catch (e) {}
            return a16;
        },
        o(a25) {
            try {
                ("A").split();
            } catch(e27) {
            }
            return a25;
        },
    };
    return o28;
}
const v29 = f0();
const v30 = f0();
f0();
/(?:a+)*\x0fEo*/visy;
const v33 = /\p{Script=Greek}/gud;
const v34 = /TE(x)(x)(x)\3*/gumy;
const v37 = [-2.2250738585072014e-308,0.8014728140665155,1.4073101706157717e+308,1.4751052216559766e+308,2.0,-692.9604671107461,-2.220446049250313e-16,2.0];
const v38 = [-1.015259194643325e+308,-Infinity,-9.825391401141273,-2.2250738585072014e-308,5.0,-2.2250738585072014e-308];
try {
    v37.length = v38;
} catch(e39) {
}
[[v34,"h",[v34,v33,"h",v29],"number",v30],v33,f0,"h","number"];
Float32Array[1] = -1e-15;
const v47 = new Uint8Array();
class C49 extends Float32Array {
    constructor(a51, a52, a53) {
        super(a53);
    }
}
new Date("2");
let v57 = -4294967297n;
const v58 = v57--;
const v59 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v60 = [601759695];
([1073741824,1073741823,1376142744,1073741825]).forEach(v57);
const o78 = {
    "c": v60,
    valueOf(a64, a65) {
        return v58;
    },
    [v57](a67, a68, a69, a70) {
        eval(a68);
    },
    "arguments": v59,
    [v58](a74, a75, a76, a77) {
    },
};
new C49(1, v47, Float32Array);
