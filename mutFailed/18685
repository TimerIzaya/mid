const v2 = new Int16Array(3788);
try { Float32Array(Int16Array, 3788, v2); } catch (e) {}
new Float32Array(13);
const v9 = new Float32Array(226);
class C13 {
    static #o(a15, a16) {
        super.d = a16;
        try { Float64Array.from(null); } catch (e) {}
        let v23 = ("Vre").codePointAt(-1073741824);
        const v25 = v23 * v23--;
        return v25 / v25;
        -Int16Array;
        Math.sign(-1073741824);
        const v30 = !4;
        a16 / 4;
        -1073741824 || v2;
        4 || v30;
        !4;
        return v9;
    }
    10000;
    #c = 13;
    static #p(a36) {
        this.#p();
    }
}
try { C13.bind(Float32Array); } catch (e) {}
new C13();
new C13();
const v41 = new C13();
const v42 = v41?.constructor;
try { new v42(); } catch (e) {}
function f44(a45, a46, a47, a48) {
    function f49() {
        const o53 = {
            valueOf(a51, a52) {
                return f44;
            },
        };
        o53.valueOf();
        return a48;
    }
    f49.length = f49;
    const v57 = new Uint8Array(257);
    class C59 extends Uint16Array {
        constructor(a61, a62, a63) {
            this.constructor;
            const o77 = {
                [null]() {
                    const v67 = /W(jy2)/udy;
                    const v69 = new Uint8Array();
                    for (let v70 = 0; v70 < 500; v70++) {
                        const o74 = {
                            ...v69,
                            n(a72, a73) {
                            },
                        };
                    }
                    for (let v75 = 0; v75 < 5; v75++) {
                        v75 === v67;
                    }
                },
            };
            super(v57);
        }
    }
    new C59();
    f49();
    f49();
    return f44;
}
const v81 = f44?.constructor;
try { new v81(v2); } catch (e) {}
for (let v83 = 0; v83 < 5; v83++) {
    const v85 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
    function f86(a87, a88, a89, a90) {
        for (let i93 = 0, i94 = 10; i93 < i94; i94--) {
            const t77 = v85.constructor;
            t77(-1.0);
        }
        return a88;
    }
    f86();
    f44().prototype;
}
%PrepareFunctionForOptimization(f44);
f44();
%OptimizeFunctionOnNextCall(f44);
const v107 = f44();
try { v107(1096080906, 1096080906, 13, 1096080906); } catch (e) {}
