function f0() {
    const o26 = {
        7: "-60752",
        ["-60752"]: "-60752",
        get a() {
            let v7 = 8;
            Math.abs("-60752");
            const v10 = +1.0;
            v7 / 3.2160809200120043e+307;
            function F12(a14, a15) {
                if (!new.target) { throw 'must be called with new'; }
                a15 - a15;
                const v17 = this.constructor;
                v17.name = v17;
                const v19 = new Int16Array(a15);
                const v20 = v19.lastIndexOf(F12, a14);
                v20 ^ v20;
                try { new v17(this, a14); } catch (e) {}
            }
            10 >>> 1.0;
            v7++;
            10 >> this;
            return v10;
        },
    };
    new Uint8Array(268435440);
    const t26 = null;
    t26.valueOf = "-60752";
    o26[7] = o26;
    return o26;
}
f0();
f0();
f0();
-15n ^ -15n;
-9007199254740991n;
[-1.0577202859422176e+308,797503.4487194319,0.48853206930414694,2.0,0.8909792272990825,-3.588623582200203,2.0,0.3163759943692179,-0.0,0.24560150258673463];
for (let v41 = 0; v41 < 5; v41++) {
    function f42() {
        const v44 = ("Vre").toLocaleUpperCase;
        let v45;
        try { v45 = v44(v44, -4294967297n, v41); } catch (e) {}
        const o46 = {
            "a": v45,
        };
        return v45;
    }
    f42();
    %OptimizeFunctionOnNextCall(f42);
}
[-1000.0,0.06717135688139764];
[-1000000.0,1.0,515440.86778954556,6.618095883187805e+307,-1000000000000.0];
for (let v50 = 0; v50 < 5; v50++) {
    Math.asin(-3 ^ v50);
}
const v56 = new BigUint64Array();
const v57 = v56.values();
const v58 = v57?.__lookupSetter__;
class C60 extends Map {
}
new C60();
function f62(a63, a64) {
}
try { new v58(v57); } catch (e) {}
const o66 = {
};
o66.c = o66;
const v68 = o66.constructor.getOwnPropertyDescriptors(v57);
v68.g = v68;
