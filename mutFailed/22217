class C5 {
}
try { ("function")["-268435456"](); } catch (e) {}
const t3 = "endsWith";
t3[16] = "endsWith";
127 & 127;
13 + 13;
const t5 = "endsWith";
const v14 = new t5();
function f15() {
    function f16(a17, a18) {
        const v19 = v14.constructor;
        return v19 + v19;
    }
    return f16;
}
2 >> 2;
try { new Uint16Array("endsWith", "endsWith", Uint16Array); } catch (e) {}
new Uint16Array(4096);
new Int32Array(1);
const o35 = {
    [122188848n](a33, a34) {
    },
};
new Uint8Array(1163, Uint16Array, "splice", "endsWith");
(-7.865682278439503).toExponential();
function f40(a41) {
}
const v43 = new Uint8Array(Uint8Array);
const o44 = {
    ...v43,
};
["4294967296"];
-9223372036854775808 << -9223372036854775808;
Symbol.iterator;
const v53 = new Float64Array(129, Float64Array, 1, "endsWith");
v53.indexOf(129);
