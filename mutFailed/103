let v2 = -1000.0;
{
    try { (621716.887951144).n(10000); } catch (e) {}
}
const t4 = 10000;
t4[10000] = v2;
f = 10000;
function F7(a9, a10, a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a10;
    } catch(e13) {
    }
    try {
        this.f = a11;
    } catch(e14) {
    }
}
new F7(621716.887951144, 621716.887951144, 1000000000000.0, 1000000000000.0);
new F7(621716.887951144, 621716.887951144, 1000000000000.0, 621716.887951144);
const v17 = [-690.7266931086847,806.7798443733527,-Infinity];
const v18 = [910604.4532826312,2.2250738585072014e-308,-2.0,-5.0,3.0,-2.2250738585072014e-308,0.2743908544500384,1.49997878240832,9.55512563148013];
const v19 = [-642.8507171768813,3.0];
const o20 = {
};
try {
    o20.h = v18;
} catch(e21) {
}
try {
    const o22 = {
    };
    o22.h = v18;
    o22.d = 621716.887951144;
} catch(e23) {
}
try {
    const o24 = {
    };
    o24.h = v18;
    o24.d = 621716.887951144;
    o24.b = 621716.887951144;
} catch(e25) {
}
try {
    const o26 = {
    };
    o26.h = v18;
    o26.d = 621716.887951144;
    o26.b = v19;
} catch(e27) {
}
new F7(v2, 621716.887951144, 621716.887951144, v2);
new WeakMap();
new Uint16Array(64);
new Int16Array(512);
let v37;
try {
const t0 = 10000;
v37 = t0();
} catch (e) {}
new WeakMap(Int16Array, ...v17, 512, 512, -1629685370, v37);
v2 <<= v2;
new Array(10);
new BigUint64Array(255);
for (let v46 = 0; v46 < 5; v46++) {
    Math.asin(-3 ^ v46);
}
