const v1 = new Date();
const v3 = new WeakSet(v1, v1, WeakSet);
const v4 = [v3,v1,v1];
const v6 = [[WeakSet],v4,WeakSet];
new WeakSet(v1, WeakSet);
function F13(a15) {
    if (!new.target) { throw 'must be called with new'; }
}
const v16 = new F13();
class C18 {
}
const v19 = new C18();
const o20 = {
};
const v21 = new C18();
function f22(a23, a24) {
    new Float64Array(1073741825);
    new Uint8Array();
    new Uint8ClampedArray(Uint8ClampedArray, Uint8Array, v6);
    const v31 = [];
    try { v31.flatMap(); } catch (e) {}
    const o40 = {
        [v21](a34, a35, a36) {
            super[-9223372036854775807];
        },
        set b(a39) {
        },
        [a24]: v19,
        "d": v16,
        [-9223372036854775807]: o20,
    };
    return v19;
}
%PrepareFunctionForOptimization(f22);
f22();
%OptimizeFunctionOnNextCall(f22);
f22(C18, v21);
