function f0() {
    const o21 = {
        "d": 6.262828618594874,
        set h(a5) {
            let v7 = 0;
            do {
                v7 / this;
                try {
                    f0();
                } catch(e10) {
                }
                v7++;
            } while (v7 < 8)
            const v16 = 11640 >> NaN;
            NaN + NaN;
            11640 % v16;
            Math.round(11640);
            v16 - 64;
        },
        ..."buffer",
        __proto__: "buffer",
        "f": NaN,
    };
    return o21;
}
const v22 = f0();
const v23 = v22();
const v24 = f0();
v24 % v24;
try {
    new f0();
} catch(e27) {
}
const v28 = /D[\cA]/vdim;
const v29 = /xa*/uds;
const v30 = /9[\011]?/gdimy;
class C31 {
    static #g;
    static 10 = v28;
    g = v24;
    static get d() {
        v24[this] = f0;
        v29[this] = this;
        this.f;
        this[118] = v28;
        this[3449313920];
        [[v30]];
        C31 = [this,v29,v22];
        f0();
        %PrepareFunctionForOptimization(f0);
        f0();
        f0();
        %OptimizeMaglevOnNextCall(f0);
        f0();
        Object.defineProperty(v28, 1, { writable: true, enumerable: true, get: f0 });
        return new.target;
    }
    6 = v30;
}
new C31();
new C31();
const v45 = new C31();
class C46 extends f0 {
    p(a48, a49) {
        const v53 = this | this;
        Math.cbrt(+v53);
        v53 / 51587;
        return v23;
    }
    #e = v23;
    4160018358 = v45;
    [v45] = v24;
    static 1073741824 = v22;
}
new C46();
new C46();
new C46();
const v62 = new Int32Array(12);
for (const v63 in v62) {
}
