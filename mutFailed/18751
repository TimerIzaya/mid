let v1 = -6.2155674919665564;
const v4 = new WeakSet();
class C5 extends WeakSet {
    static #toString(a7) {
        return "2147483647";
    }
    get b() {
        const v13 = Symbol.toPrimitive;
        const o19 = {
            [v13]() {
                super.has(v1);
                return 1.0;
            },
        };
        return -1.030968290102886e+307;
    }
}
const v20 = new C5();
const v21 = new C5();
const v22 = new C5();
class C23 extends WeakSet {
    #g;
    #a = WeakSet;
    constructor(a25, a26) {
        super(a25);
        throw v22;
        -1.030968290102886e+307 <= v21;
    }
    #d = v1;
    static h = v1;
    static {
        try { C23(v4, -1.030968290102886e+307, -1.030968290102886e+307, this); } catch (e) {}
        try { C23(this); } catch (e) {}
    }
    165 = v22;
    e;
    #o(a32, a33) {
        delete v21?.b;
        return super[a33];
    }
}
const v39 = new C23(C5, 1.0);
const v40 = new C23(C5, 1.0);
const v41 = new C23(v4, v1);
class C42 extends WeakSet {
    constructor(a44, a45, a46, a47) {
        super(a45);
        const v48 = v21.a;
        super.f ||= 1.0;
        super.g <<= 1.0;
        try {
            v20.valueOf = v48;
        } catch(e49) {
        }
    }
    #c = v4;
    h;
    static #e;
    #d = v40;
    static [v4] = WeakSet;
}
const v50 = new C42(v40, v40, v39, v20);
new C42(v40, v39, v41, v40);
new C42(C5, v40, v4, v40);
function F53(a55) {
    if (!new.target) { throw 'must be called with new'; }
    const v59 = v22 >>> 2039059667;
    const v60 = 2039059667 << -1.030968290102886e+307;
    2039059667 << v59;
    v60 && -1.030968290102886e+307;
    --v1;
}
const v64 = new F53(F53);
const v65 = new F53();
const v66 = v65.constructor;
for (let v67 = 0; v67 < 17; v67++) {
    v50[v4] = v39;
    v65[8] = v67;
}
v4[3561203811] = v22;
const v68 = new v66(v64, v66);
([536870912,268435441,9007199254740992,57419,129,-2147483647]).indexOf(v64, v68);
