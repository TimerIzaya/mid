("search")[4];
0 === 0;
const v10 = new Int32Array(0);
const v11 = v10?.keys;
let v12;
try { v12 = new v11(); } catch (e) {}
const v15 = new Int16Array(4096);
v12 >>> 2;
const v19 = new Int8Array(2);
const o20 = {
};
new Proxy(v15, o20);
let v23;
try { v23 = v19.entries(); } catch (e) {}
function F24(a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    const v29 = this?.__defineSetter__;
    try { new v29(-5.9755994959255965, -5.9755994959255965); } catch (e) {}
    try { new a27(a26, 0, a28); } catch (e) {}
    try { a28.bind(-171247.3785715152); } catch (e) {}
}
const v33 = new F24(F24, F24, v23);
function F34(a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    const v38 = this.constructor;
    a37.length;
    try { new v38(this, v33); } catch (e) {}
    v38[a37] = v33;
}
const v41 = new F34();
const v42 = v41?.__defineGetter__;
try { new v42(F34, 0); } catch (e) {}
new F34(v41, v41);
v12 &&= Int16Array;
try {
    v15.fill(["bBg",v42,v23,v15,v12]);
} catch(e47) {
}
