function f0() {
}
[-14,-2143893640];
const v2 = [-1,2147483649,-9223372036854775808,-3768,2147483647,15];
const v3 = [-10,-1024,-65535,129,1073741823,-268435456,-1942448472,13,65537,64];
const v7 = -4096n ^ -4096n;
class C8 extends f0 {
    static #toString(a10, a11, a12) {
        a12 ^= v2;
        this[this];
        a10 = this;
        return 804310067n;
    }
    static set f(a15) {
        const v19 = 1198728272 / this;
        1198728272 >> this;
        1198728272 / v19;
        const v23 = this >= this ? this : this;
        function f24() {
            return v23;
        }
        const o25 = {
            "apply": f24,
            "call": f24,
            "construct": f0,
            "deleteProperty": f0,
            "get": f0,
            "getOwnPropertyDescriptor": f0,
            "getPrototypeOf": f0,
            "has": f24,
            "ownKeys": f24,
            "set": f24,
            "setPrototypeOf": f24,
        };
        new Proxy(v2, o25);
    }
}
C8.length = C8;
new C8();
new C8();
const v30 = new C8();
v30.constructor = f0;
try { v30.constructor(); } catch (e) {}
([0.8117095347207619])[0];
const v34 = [0.1287619344629467];
try { v34.reverse(); } catch (e) {}
const v36 = [-1000000.0,-2.220446049250313e-16,3.0];
let v37;
try { v37 = v36.lastIndexOf(v30); } catch (e) {}
class C38 {
    constructor(a40) {
        a40.length = v7;
        a40.length;
        for (let v42 = 0; v42 < 32; v42++) {
            for (let v43 = 0; v43 < 5; v43++) {
                function f44() {
                    return v43;
                }
            }
            const o46 = {
            };
            o46.c = o46;
            gc(o46);
        }
        try {
            f0();
        } catch(e49) {
        }
        const v50 = 804310067n;
    }
}
new C38(C38);
const v52 = new C38(C38);
v52.length = v37;
const v53 = new C38(v52);
const v54 = v53?.constructor;
try { new v54(v3); } catch (e) {}
const v56 = v53.constructor;
try { new v56(C8); } catch (e) {}
const v58 = new v56(v52);
const v59 = v58?.propertyIsEnumerable;
try { new v59(v34); } catch (e) {}
