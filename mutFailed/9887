function f3(a4, a5) {
    function f6(a7, a8) {
        function F9(a11, a12) {
            if (!new.target) { throw 'must be called with new'; }
            const v13 = this.constructor;
            try { new v13(); } catch (e) {}
            this.c = a11;
        }
        return f3;
    }
    a4[Symbol.toPrimitive] = f6;
    a4 + a4;
    a5 !== a5;
    const o49 = {
        [a5](a20, a21) {
            a21.constructor;
            const v23 = [-1000000.0,-3.1923473210656557,-1.721355656202141e+308,4.0,0.3955838142797843,-3.0,1.1463753586867827e+308];
            function f24(a25) {
                const o26 = {
                };
                o26[213] = v23;
                return o26[213];
            }
            super.f = -9266n;
            const o28 = {
            };
            const v30 = new Proxy(this, o28);
            return v30;
        },
        __proto__: a4,
        [-9266n](a32, a33) {
            for (let v34 = 0; v34 < 45; v34++) {
                +a4;
                try {
                    a4.valueOf = a4;
                } catch(e36) {
                    new Uint32Array(v34, v34, 16);
                    function f40() {
                        const o42 = {
                            get b() {
                                return f40;
                            },
                        };
                        return o42;
                    }
                    class C43 extends f40 {
                        constructor(a45) {
                            super();
                            for (let v46 = 0; v46 < 25; v46++) {
                                this["p" + v46] = v46;
                            }
                        }
                    }
                }
            }
            return a4;
        },
    };
    return o49;
}
Object.defineProperty(f3, "valueOf", { writable: true, configurable: true, value: f3 });
const v50 = f3(0n, -9266n);
v50.a = v50;
const v51 = f3(f3, 0n);
v51[0] = v51;
const v52 = f3(1n, 1n);
v52[1] = v52;
[-2.988218770935164e+307,2.2250738585072014e-308,NaN,1000.0];
[-1e-15,0.42622521258702817,0.21057561491049404,191704.3415278052,-1.6073032978218046e+308];
const v56 = ([125.7762449190775,1000.0,-1000000000.0])?.values;
try { new v56(); } catch (e) {}
28546 ^ 28546;
105211217 + 105211217;
([[65535,268435439,-9007199254740990,268435440,1024,19743,5,4]]).toLocaleString();
