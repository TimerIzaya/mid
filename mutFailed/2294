const v0 = [];
class C1 {
    m() {
        const v3 = v0[this];
        super.g;
        return v3;
    }
    static b;
    static 65535 = v0;
    536870887;
}
new C1();
new C1();
let v10 = new C1();
class C11 extends C1 {
    static {
        try { this.n(this); } catch (e) {}
        [] = v0;
        v10 = this;
    }
    f;
    n(a15, a16) {
        try {
            this.m(a15, C1);
        } catch(e18) {
        }
        return C1;
    }
}
new C11();
new C11();
new C11();
function F34() {
    if (!new.target) { throw 'must be called with new'; }
    const v36 = this.constructor;
    try { new v36(); } catch (e) {}
    let v38;
    try { v38 = this.valueOf(); } catch (e) {}
    v38.length = v38;
    try {
    } catch(e39) {
    }
}
const v40 = new F34();
new v40();
