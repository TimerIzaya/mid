function f0() {
}
class C1 {
    h = f0;
    #h = C1;
    static get e() {
        for (const v3 in this) {
            const v6 = new Uint8ClampedArray(129);
            129 < 129;
            const v9 = C1?.[Uint8ClampedArray];
            try {
                super.ceil(Uint8ClampedArray, this, v6, v9, C1);
            } catch(e11) {
            }
            new Uint8Array(1024);
            new Float64Array(48);
        }
        return f0;
    }
}
let v17 = new C1();
Object.defineProperty(v17, "toString", { writable: true, enumerable: true, value: C1 });
const v18 = [-246307.25252652215];
[0.7731808577486943,1000000000.0,-1000000000000.0,-5.027249683239967e+307,-1000000000000.0,-0.09330881686411452];
function F20(a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
}
const v24 = new v18();
class C25 extends F20 {
}
new C25();
for (let v27 = 0; v27 < 10; v27++) {
    function F28(a30, a31) {
        if (!new.target) { throw 'must be called with new'; }
        this.c = this;
        this.c = a31;
    }
    new F28(v27, v24);
    new F28();
}
new C1();
const v35 = new C1();
v35.c = v24;
[-362.87150063863385,6.815502959768362e+307,-4.0,0.04662429305376081,736.7793475267565];
[Infinity,-1000000000.0,629838.6267432563,-1.7976931348623157e+308,-1e-15,-1e-15,4.894569915384155,-3.0,1000000000000.0];
[193697.48952950072,-2.0,-2.0,0.9866080391427959,-35.399495939068856,840.7962962908114,3.0,-6.872330542325853,3710.7488081136253,2.2250738585072014e-308];
try {
    v35.c = C1;
} catch(e41) {
}
Math.tanh(F20);
Math.atanh(v17);
-2.0 ^ v17;
++v17;
Math.log(-2.0);
F20 - C1;
const v51 = new Uint32Array(9);
const t57 = -10;
new t57(3834);
new Float32Array(3567);
v51.normalize();
