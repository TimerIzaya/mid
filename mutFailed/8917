let v1 = 5;
let v5;
try { v5 = ("MIN_SAFE_INTEGER").split(); } catch (e) {}
let v6 = "-13035";
const v7 = --v6;
const o10 = {
    "maxByteLength": 1996,
};
const v12 = new SharedArrayBuffer(1996, o10);
new BigInt64Array(v12);
const t10 = "boolean";
t10[6] = "boolean";
if (1000000000.0 > "boolean") {
    new Uint8Array(2);
    new Float64Array(0);
    new BigUint64Array(11);
} else {
    [128,1073741824,6,268435456,10,-536870912,2147483647,536870912,39629,268435440];
    [257,-4294967295,-15,1073741823,2147483647];
    [-587846530,268435441,268435439,1,536870889,14,512];
}
function f34() {
    return "v56ux";
}
const v35 = [v5,"-2147483647",-1621889868];
let v36;
try { v36 = v35.find(-1621889868); } catch (e) {}
try { new v36(BigInt64Array, 897780.5880619287); } catch (e) {}
const v39 = ("v56ux")[536870887];
v1 **= v7;
const v40 = 1000000000.0 + o10;
try { new v39(v35, 1996, v40); } catch (e) {}
const v42 = ("minor").fontcolor(v35);
try { v42.split(v1, f34); } catch (e) {}
