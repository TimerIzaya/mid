const v0 = [];
const v1 = [-745115192,536870912,4,129,1364,-129771852,1073741825];
const v2 = [-536870912];
const v3 = [2,-3];
function f4() {
    return v0;
}
[5,-1,4,9007199254740992,65537,-1,536870912];
const v6 = [16,-65536,-61881,16,268435441,12432,-12];
const v7 = [-60109,-811436913,2147483647];
v7[Symbol.toPrimitive] = f4;
class C10 {
    [v7] = v2;
    5;
    toString(a12, a13) {
        try { v3.toReversed(); } catch (e) {}
        const o15 = {
        };
        try {
            o15.b = a12;
        } catch(e16) {
        }
        try {
            const o17 = {
            };
            o17.b = a12;
            o17.e = a13;
        } catch(e18) {
        }
        try {
            const o19 = {
            };
            o19.b = a12;
            o19.e = a13;
            o19.f = a13;
        } catch(e20) {
        }
        try {
            const o21 = {
            };
            o21.b = a12;
            o21.e = a13;
            o21.g = v1;
        } catch(e22) {
        }
        return a12;
    }
}
const v23 = new C10();
new C10();
const v25 = new C10();
function f26() {
    return v1;
}
function F27(a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = v6;
    try {
        this.g = v23;
    } catch(e31) {
    }
    try {
        this.d = a30;
    } catch(e32) {
    }
    try {
        this.b = v0;
    } catch(e33) {
    }
}
new F27(v6, v0);
new F27(v6, v6);
new F27(v0, v25);
("by").normalize();
