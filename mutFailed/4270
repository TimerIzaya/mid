256 >>> 256;
const v6 = new Int32Array(256);
const v9 = new Float64Array(10);
1000 - 1000;
const t3 = -13;
new t3(1000);
function F14(a16, a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = v9;
    a18++;
    a19 / a19;
    try {
        this.g = 10;
    } catch(e22) {
    }
    try {
        this.f = v9;
    } catch(e23) {
    }
    try {
        this.e = v6;
    } catch(e24) {
    }
}
F14.e = Float64Array;
F14.e = F14;
new F14(51069, -13, 256, 1000);
new F14(51069, 51069, 51069, 1000);
new F14(10, 13, 1000, v9);
class C29 {
    static {
        this.d = this;
        try {
            const t33 = null;
            t33.valueOf = this;
        } catch(e31) {
            e31.b = e31;
            const v32 = e31.stack;
            try { v32.constructor(51069); } catch (e) {}
        }
    }
}
