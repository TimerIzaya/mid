const v5 = new BigUint64Array(7);
new Float32Array(5);
function F10(a12, a13, a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    const v16 = this.constructor;
    try { new v16(154, a15, 154, a13); } catch (e) {}
    -a13;
    a15 <= a15;
}
const v24 = new Uint8ClampedArray(112);
class C27 {
    127 = Uint8Array;
}
new C27();
const v29 = new C27();
const v30 = new C27();
const v31 = new Uint8Array();
let v34;
try { v34 = v24(-85357.59116785484, ...v31, 64, 46, -3.383486186086852e+307, ...v24); } catch (e) {}
new Uint8ClampedArray(238);
new Uint16Array(127);
const v40 = new Map();
const o45 = {
    4294967296: 1733353236,
};
const o47 = {
    get h() {
        return o45;
    },
    ...o45,
};
const v50 = new Uint8Array(3521);
if (5 > -3.383486186086852e+307) {
    new Uint32Array(4);
    new Int16Array(128);
    new Uint32Array(50);
} else {
    try { ("unshift").trimRight(); } catch (e) {}
}
v50.includes(false);
v5[v29] = -85357.59116785484;
const v64 = new Uint8Array(-9, -11, 64);
let v65;
try { v65 = v34(false, v64, Uint8ClampedArray, v40, 127); } catch (e) {}
o45[v64] -= v65;
v30.__proto__;
