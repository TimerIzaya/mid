new WeakSet();
class C5 {
}
new C5();
const o7 = {
};
new Float64Array(89);
const v13 = new Float32Array(2160);
v13.codePointAt();
const v15 = [-1235077344,-4096,50383815,-8476,-9007199254740991];
class C17 extends Set {
}
new C17(v15);
function f21() {
    return f21;
}
f21();
for (let v24 = 0; v24 < 50; v24++) {
    v24 - v24;
    for (let v26 = 0; v26 < 25; v26++) {
        ("p").codePointAt(Uint8ClampedArray);
    }
}
new Uint8ClampedArray(2);
let v31 = -1024;
Array().unshift(v31);
v31 %= -268435456;
const v36 = Map.prototype;
try { v36.clear(v36, Map); } catch (e) {}
const o38 = {
};
("minor").valueOf();
class C42 {
    ["minor"] = 0.9009832213714677;
}
const v43 = new C42();
function f44(a45, a46, a47, a48) {
    v43.minor;
    const v51 = Math.sign(a46);
    v51 >>> v51;
    return a45;
}
for (let v53 = 0; v53 < 10; v53++) {
    f44(C42, v53, v43, "minor");
    function F55() {
        if (!new.target) { throw 'must be called with new'; }
    }
}
