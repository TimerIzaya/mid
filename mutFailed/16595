function f0() {
}
const v2 = new Date();
class C3 extends Date {
    c = f0;
    static [Date];
    f;
    [f0] = Date;
    static [v2] = v2;
    p(a5) {
        class C7 extends this.constructor {
            static e = f0;
            [this] = Date;
            static b = a5;
        }
        new C7();
        return f0;
    }
    [C3];
    [Date];
    a;
    static c = Date;
    g = Date;
}
new C3();
const v10 = new C3();
new C3();
new Map();
let v14 = 43513;
let v21 = -1.0;
function F23(a25, a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    const v29 = this.constructor;
    const v30 = [1630629478,9,2034969337];
    for (let v31 = 0; v31 < 10; v31++) {
        v30.__proto__;
    }
    Math.log2(0);
    try { new v29(a25, v21, a28, a28); } catch (e) {}
    a26 - a26;
    a28 ^ a28;
    try {
        this.g = a27;
    } catch(e38) {
        function f39(a40) {
        }
        let v41 = 10;
        for (; v41--;) {
            v14 = 536870887;
            v21 = v41;
        }
    }
    try {
        const v47 = [-1];
        -v30;
        v47[2147483649] & 925338382n;
        [] = v47;
        try {
            Date(-2.0);
        } catch(e53) {
        }
        -1 in v47;
        this.b = -65537n;
    } catch(e55) {
    }
}
new F23(6n, -65537n, -116242.81512445165, F23);
const v57 = new F23(-116242.81512445165, -65537n, 6n, 6n, Date, v10);
const v58 = new F23(v57, -65537n, 925338382n, -65537n);
v58.b = v58;
new F23();
