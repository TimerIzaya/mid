([536870888,4096,-11]).includes;
function f3() {
    return f3;
}
try { new f3(); } catch (e) {}
const v5 = [f3,f3,"10",f3];
const v6 = v5.flatMap(f3);
try { v6.concat(v6); } catch (e) {}
try { ("qix").link(f3); } catch (e) {}
try { ("NaN").link("NaN"); } catch (e) {}
class C12 {
    n(a14) {
        const v17 = new Uint8Array(3521);
        v17["lastIndexOf"](0);
        this[8] = "NaN";
        Symbol.iterator;
        const o33 = {
            [v5]() {
                let v24 = 10;
                const o30 = {
                    next() {
                        v24--;
                        const v28 = v24 == 0;
                        const o29 = {
                            "done": v28,
                            "value": v24,
                        };
                        return o29;
                    },
                };
                return o30;
            },
            "d": "qix",
            "arguments": v6,
            o(a32) {
                return a32;
            },
        };
        return "qix";
    }
}
const v34 = new C12();
new v34();
const v36 = new C12();
new Uint8ClampedArray(3);
new Uint8ClampedArray(2027);
let v43 = 129;
v43--;
const v46 = new Int32Array(v43);
const v47 = v46?.constructor;
try { new v47(v5, v6, 2027); } catch (e) {}
[268435439,-4096,-128,10000,268435439,-175228916,-452916790,1073741825];
const v50 = [-10,-2098521316,3668,60621,-12,15,8,4294967296,39263];
[2,3,268435439,-10,-1540599599,536870889];
/49/gims;
try { ("symbol").strike(); } catch (e) {}
207 - 207;
const v57 = 207 + 207;
try { new Uint8ClampedArray(v57, "10", Uint8ClampedArray); } catch (e) {}
try { new v50("symbol", 14, 207); } catch (e) {}
-220;
new BigUint64Array();
const v68 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
function f69(a70, a71, a72, a73) {
    try {
        f69(true, Int8Array, undefined, f69);
    } catch(e77) {
    }
    function f78(a79) {
        v68.constructor;
        return f69;
    }
    for (let i83 = 0, i84 = 10; i83 < i84; i84--) {
        f78();
        a73.valueOf = a73;
    }
    return v68;
}
class C93 {
}
const v94 = new C93();
const v95 = v94?.constructor;
try { new v95(); } catch (e) {}
const v98 = [0.03568519099872258];
try { v98.toSorted(v36); } catch (e) {}
Uint8Array.name = Uint8Array;
const v102 = new Uint8Array();
function f103(a104, a105, a106, a107) {
    const o108 = {
        ...v102,
    };
    function f112(a113, a114, a115) {
        const o116 = {
            "h": a115,
        };
        function f117() {
            const o129 = {
                m(a119) {
                    3938 & 3938;
                    Int8Array.name = Int8Array;
                    const v123 = new Int8Array(3938);
                    let v124 = 3;
                    let v125 = 0;
                    v125 >> v125;
                    for (let i = 0; i < 5; i++) {
                        [...v124] = v123;
                        v125++;
                    }
                    const o128 = {
                    };
                    o128.h = o128;
                },
            };
            o129.m(o129, o129, o129, f117, f117);
            return o129;
        }
        return o116;
    }
    f112(-3.9870582640049523, -3.9870582640049523, 1000000.0);
    const v132 = f112(1000000.0, -3.9870582640049523, 1000000.0);
    f112(-3.9870582640049523, -2.2250738585072014e-308, -3.9870582640049523);
    v132["toString"]();
}
for (let v136 = 0; v136 < 500; v136++) {
}
