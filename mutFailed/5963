function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = this;
    try {
        class C3 {
        }
        new C3();
        function f5() {
            return f5;
        }
        this.a = -2004477119;
    } catch(e6) {
    }
    try {
        this.f = -2004477119;
    } catch(e7) {
    }
    try {
        this.e = -2004477119;
    } catch(e8) {
    }
}
new F0();
new F0();
new F0();
const v12 = [0.005577692444912685,-1000.0,5.0,-0.0,383.65327553950465,-5.739835736154159,9.870585078465243e+307];
const v13 = [-Infinity,954124.4333116994,1000000000000.0];
for (const v15 of "-4294967295") {
}
function F17(a19) {
    if (!new.target) { throw 'must be called with new'; }
    function f20(a21, a22) {
        try { v13.forEach(-5n); } catch (e) {}
        return a19;
    }
    this[Symbol.toPrimitive] = f20;
    const v27 = this.constructor;
    v27.length;
    const v29 = ~-2017259196;
    const v30 = v29 | this;
    try { new v27(v30, F17, v29, -2017259196); } catch (e) {}
}
const v32 = new F17(-2017259196);
new F17(v32);
const v34 = [-5.0,-1.144202778805174e+308,400.3770792934522,-2.0,-0.0,1000000.0,2.0,0.5707331881007723,Infinity];
new Uint16Array(4);
new BigUint64Array(1);
function f43() {
    return f43;
}
function f44(a45, a46) {
    %VerifyType(a45);
    const o50 = {
        "execution": "sync",
        "type": "minor",
    };
    gc(o50);
    return v12;
}
f43.toString = f44;
const v52 = /(?:a*)+q(?<a>.)/guds;
v52.constructor = f44;
function f53(a54) {
    const v55 = a54.constructor;
    let v56;
    try { v56 = v55(a54, f43); } catch (e) {}
    const o58 = {
        get d() {
            return this;
        },
    };
    return v56;
}
for (let i61 = 0, i62 = 10; i61 < i62; i62--) {
    for (let v69 = 0; v69 < 50; v69++) {
        f53(v52);
    }
}
new BigUint64Array(4096);
const v77 = 5493 >>> 5493;
Math.atan2(v77, v77);
try {
} catch(e79) {
} finally {
}
class C80 {
    #d = v77;
    static get f() {
        v34[114] <<= v12;
        return v34;
    }
    constructor(a83, a84, a85, a86) {
        let v88 = 268435439;
        Reflect.construct(Int8Array, []);
        let v93 = 2;
        const v94 = v93++;
        function f95(a96) {
            const o100 = {
                __proto__: v93,
                213: a96,
                p(a98, a99) {
                    return v94;
                },
            };
            return o100[213];
        }
        %PrepareFunctionForOptimization(f95);
        v88--;
        const v104 = /xyz{1,32}?/gusy;
        class C105 {
            268435440 = v104;
        }
        new C105();
    }
}
