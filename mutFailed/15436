const v0 = [4,1073741824,1302972982,-53316];
let v1 = [5,-5,9,1000,1073741825,-2147483649,25215,15];
[9007199254740990,65536,33165,65537,65537];
function f3() {
    return v0;
}
const v4 = /e9\1\2(a(?:\1(b\1\2))\2)\1/ui;
/a\sS*/udmy;
const v6 = /a\fb\nc\rd\te\vfF9I\p{Script_Extensions=Greek}(?<=)*/gudisy;
new Int16Array(64);
++v1;
class C12 {
    set g(a14) {
        -11 || a14;
    }
}
const v17 = [[v6],v4,f3];
[v0,f3,v17];
new Date();
function F21() {
    if (!new.target) { throw 'must be called with new'; }
}
try {
    v17.h = 16;
} catch(e24) {
}
[-5.0];
[-4.0,-8.813206165702249e+307,7.007743377339235e+307,-1.4162571767595947e+308,1000000000000.0,971.8716573242966,2.2250738585072014e-308,0.2922735379154292,0.9244355969677088];
[1000000.0,1.7976931348623157e+308,-932.8886186123508];
function f31() {
    try { Array.isArray(f31); } catch (e) {}
    const v35 = Array(4087);
    try { v35.find(); } catch (e) {}
    for (const v37 of v35) {
    }
    return 4087;
}
/m+/gudimsy;
const v39 = [];
const o41 = {
    "f": -1.883023285666516,
};
for (let i45 = 0, i46 = 10;
    (() => {
        const v47 = i45 < i46;
        const v50 = ([127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649]).toSpliced(-1148418937, -1148418937);
        v50[3] = v50;
        let v51 = 3375;
        const v52 = v51++;
        v52 / v52;
        const v54 = new BigUint64Array(v51);
        let [v55,,v56,...v57] = v54;
        return v47;
    })();
    i45++) {
}
function F63() {
    if (!new.target) { throw 'must be called with new'; }
    const v65 = this.constructor;
    try { new v65(); } catch (e) {}
    let v67;
    try { v67 = this.valueOf(); } catch (e) {}
    v67.length = v67;
    try {
        this.d = v39;
    } catch(e68) {
        const v70 = new Set();
        class C71 {
            [v70];
        }
        function f72(a73) {
            return a73;
        }
    }
}
new F63();
new F63();
