const v3 = [14,129,-1728306776,-2147483649,-1876402298,-9223372036854775807,-261725381,4096,-13,-789659367];
function f4() {
    return v3;
}
["dgV"];
class C7 {
    #valueOf(a9, a10) {
        const v12 = WeakMap();
        "dgV" > v12 ? "dgV" : v12;
        return this;
    }
    #c = "1834777045";
    static m(a16) {
        const v19 = new Uint32Array(2432);
        const o20 = {
            ...v19,
        };
        const v24 = super.g;
        try { new a16(9007199254740991, v24); } catch (e) {}
        typeof v24 === "undefined";
        return "1834777045";
    }
}
new C7();
new C7();
new C7();
new Int32Array(208);
const v37 = new Float32Array(3929);
new Float64Array(255);
function F41() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 1489843090;
    } catch(e44) {
    }
}
function f45(a46, a47) {
    const v48 = /(ab|cde)\118\P{sc=Greek}+/gdims;
    v48.exec(v48);
    return 255;
}
F41.toString = f45;
const v50 = new F41();
new F41();
const v52 = new F41();
v52.g = v52;
function F53(a55) {
    if (!new.target) { throw 'must be called with new'; }
    a55.g;
    try {
        this.a = v50;
    } catch(e57) {
    }
}
F53.g = Int32Array;
let v58;
try { v58 = new F53(F53); } catch (e) {}
v58.unshift = v37;
const v59 = new F53(v52);
v59.a = v59;
const v60 = new F53(v52);
v60.a = v60;
const v61 = [-1335654396,-2,-9,-4294967295,-15,-16];
try { v61.reduce(v61); } catch (e) {}
let [,...v64] = [1e-15,1.0,-3.0,1.43935350979979e+308,-0.0];
try { v58.unshift(F53); } catch (e) {}
try { ("-268435456").codePointAt(F41); } catch (e) {}
try { ("function")["-268435456"](); } catch (e) {}
[2147483647,4294967296,-7,-277691152,-616812028,-788936298];
[38857,-4294967296,1073741824,-4096,33257,2];
function F73(a75, a76) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor = f45;
    const v77 = this.constructor;
    try { new v77("-268435456", a76); } catch (e) {}
    a75.prototype;
    a76.arguments = a76;
}
const v80 = new F73(F73, F73);
const t79 = /QK/gvdimy;
t79.__proto__ = length;
const v84 = new Set();
function F85(a87, a88) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = v84;
    try {
        const v89 = v84[this];
        try {
            new F85(v89);
        } catch(e91) {
        }
    } catch(e92) {
    }
}
const v93 = v80?.toLocaleString;
try { new v93(); } catch (e) {}
for (let i = 0; i < 10; i++) {
    const v97 = new Uint32Array(9);
    new Int8Array(v97);
    /[xyz{1,}(O)]/udis;
    const v101 = /2a\sc/uds;
    try { v101.test(v101); } catch (e) {}
    new F85();
    function F107(a109) {
        if (!new.target) { throw 'must be called with new'; }
        const v110 = this.constructor;
        try { new v110(-143547321); } catch (e) {}
        a109 - a109;
        this.g = -1517929768;
        try {
            this.g = -1;
        } catch(e113) {
        }
        try {
            this.h = a109;
        } catch(e114) {
        }
    }
}
function f115() {
    return 3.5885237423067196;
}
1042950492 >> 1042950492;
function f118(a119, a120) {
    return f118;
}
const v121 = f118(f118, f118);
class C122 extends f118 {
    constructor(a124, a125, a126) {
        super();
        const v127 = `
            try { a124(a126, v121); } catch (e) {}
        `;
        eval();
    }
}
