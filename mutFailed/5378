function f0() {
}
f0[Symbol.toPrimitive] = f0;
const v3 = [f0];
const v4 = [v3];
let v5 = [v4,f0];
class C7 extends f0 {
    f;
    [v3] = f0;
    static [undefined];
    n(a9, a10) {
        a10.toString = f0;
        const v11 = v4 >= a9;
        if (v11) {
            new f0(...v5, ...a9, ...a9, v11);
        } else {
            function F13(a15, a16, a17, a18) {
                if (!new.target) { throw 'must be called with new'; }
                this.f = a9;
                try {
                    this.f = a15;
                } catch(e19) {
                }
            }
            const v20 = new F13(v4, v4, v4, v4);
            new F13(v4, a10, a9, v5, v20, a9);
            new F13(a10, v3, a10, a10);
        }
        return undefined;
    }
}
const v23 = new C7(v3);
new C7(v3, v23, v5);
const v25 = new C7();
v25.p3 = v25;
class C29 {
    set d(a31) {
        Object.defineProperty(v4, "h", { writable: true, get: f0 });
        Math.acosh(undefined);
        46018 >>> "h";
        Math.asinh("h");
        v23 && undefined;
        Math.random();
        "h" - v23;
    }
}
([-7,-18455])["pop"]();
const v46 = new C29();
const v47 = v46.d;
let v48;
try { v48 = v47(v3, v47, f0, v47, -125025.5019185869); } catch (e) {}
for (let v49 = 0; v49 < 32; v49++) {
    v25["p" + v49] = v49;
}
let v52 = new C29();
new C29(v52);
const v54 = [5,1436918233,13,-9223372036854775808,12,10779,268435439,-350312267,536870912];
v54[Symbol.toPrimitive] = Symbol;
class C57 {
    static {
        function f59(a60, a61, a62) {
            function f63(a64) {
                return v54;
            }
            return f59;
        }
        const v67 = ["function",v54,"function"];
        v67.valueOf = f59;
        const o68 = {
            "arguments": v67,
            "type": "function",
        };
        ({"arguments":v52,"type":v5,} = o68);
        let v69;
        try { v69 = v23.n(v67, v67, o68, v48, -0.0); } catch (e) {}
        ("function")[v69];
        let [,v71,v72,v73] = v4;
        const v74 = [10,2147483649,-65537,9223372036854775807,2147483647,0,268435440];
        v74[Symbol.search] = Symbol;
        const v77 = [8.42123894252574,2.2250738585072014e-308,1000000000000.0,1e-15,-1000.0,-5.0,1000000000.0,-3.636295005613261e+307,-3.0];
        function f78() {
            v3.length;
            ("c").toUpperCase();
            return this;
        }
        v77.toString = f78;
        v77.toString().search(v74);
        super[v23];
        new Worker(f59, o68);
    }
}
