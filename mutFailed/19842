const v3 = ["source","3","3","source"];
const v4 = ["3","source"];
[v4,v4,v3,"source","h"];
1000.0 !== 1000.0;
/((\xed\xa0\x80))\x02/udiy;
const v11 = /\p{General_Category=Decimal_Number}xyz??/gvimsy;
v11.b = -3.0;
v11.b = v11;
const v12 = /x(a\1)/udi;
try { v12.compile(1000.0, v12); } catch (e) {}
const v16 = [601759695];
const v17 = [1073741824,1073741823,1376142744,1073741825];
function f18(a19, a20, a21, a22) {
    function f23() {
        const o27 = {
            toString(a25, a26) {
                return a19;
            },
        };
        o27.toString();
        const o36 = {
            [-4294967297n](a30, a31, a32, a33) {
                eval();
            },
        };
        return o36;
    }
    f23();
    try { ("").charCodeAt(Map); } catch (e) {}
    eval(a22);
    %OptimizeFunctionOnNextCall(f23);
    try { v17["find"](..."find", a22, ...v16, ...v17); } catch (e) {}
    return a21;
}
const v44 = f18();
new Map();
const v47 = /8[\cA]v/uisy;
v47[Symbol.toPrimitive] = f18;
function f51(a52, a53) {
    try {
        const t40 = "3";
        t40.length = v44;
    } catch(e54) {
    }
    return v17;
}
Object.defineProperty(parseFloat, "toString", { configurable: true, value: f51 });
parseFloat(parseFloat);
for (let v56 = 0; v56 < 10; v56++) {
    class C58 {
        4294967296 = 996195971n;
    }
    new C58();
}
try { v47.test(v47); } catch (e) {}
const v61 = [3480,1024,-4294967297,-1024,512,65536,29198,-9223372036854775807,-2147483647];
try {
    v61.length = v47;
} catch(e62) {
    e62.e = e62;
}
