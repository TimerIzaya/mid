const v2 = new Int16Array(7);
const v5 = new Int8Array(257);
const v8 = new BigInt64Array(257);
class C9 extends BigInt64Array {
    static d;
    constructor(a11, a12) {
        super(v5);
        let v13;
        try { v13 = a11(BigInt64Array, a11, 257, v2); } catch (e) {}
        super[v5] = a12;
        let v14 = this[Int8Array];
        super.forEach(a11);
        v8[a11] = v14;
        v14 <<= this;
        v13 ^ a12;
    }
    5;
    f;
    d;
}
const v17 = new C9(Int8Array, 257);
const v18 = new C9(257, 257);
const v19 = new C9(v5, 257);
function f20(a21, a22, a23) {
    const o48 = {
        set g(a25) {
            v2[v17];
        },
        toString(a28, a29, a30) {
            let v27 = this;
            super.h = 257;
            const v31 = v27++;
            a22[4294967295] = v31;
            const o32 = {
            };
            try {
                o32.e = a30;
            } catch(e33) {
            }
            const v37 = 880459034 + v5;
            880459034 | v37;
            v19 % v37;
            v37 + 880459034;
            ~-9;
            try {
                const o42 = {
                    "a": a29,
                    3114955625: 257,
                    7: 257,
                    [v17]: 880459034,
                    [v18]: o32,
                };
                o42.e = a30;
                o42.d = a30;
            } catch(e43) {
            }
            try {
                const o44 = {
                };
                o44.e = a30;
                o44.d = a30;
                o44.b = v5;
            } catch(e45) {
            }
            try {
                const o46 = {
                };
                o46.e = a30;
                o46.d = a30;
                o46.f = v31;
            } catch(e47) {
            }
            return a22;
        },
    };
    const o52 = {
        "execution": "async",
        "type": "major",
    };
    gc(o52);
    return o48;
}
f20(7, v17, 257);
f20(7, v18, 257);
f20(257, v8, 257);
function f60(a61, a62, a63, a64) {
    "valueOf" | a62;
    a61 / a62;
    const v67 = a62 < a62;
    v67 >>> a63;
    const o72 = {
        n(a70, a71) {
            return v67;
        },
    };
}
for (let v73 = 0; v73 < 625; v73++) {
}
