const v2 = new Float32Array(3760);
const v5 = new Uint8ClampedArray(512);
const v8 = new Int8Array(3732);
const v10 = [Float32Array,[512,512,v2,v8,v5]];
[v10,v5,3732,3760,v5];
class C12 extends Uint8ClampedArray {
    constructor(a14, a15) {
        super(a15);
        C12[268435439];
        512 instanceof Uint8ClampedArray;
        const v18 = /y/vdiy;
        const v19 = /[(?:ab|cde)Pu(?:ab|cde)]/gvd;
        /AZBPuufX\xf0\x9f\x92\xa9+/gudsy;
        v19 >>> v18;
    }
    static p(a23, a24) {
        a23?.[a23];
        new WeakSet();
        -Infinity;
        return -751177.2539898027;
    }
}
new C12(v10, 3760);
new C12(v8, 512);
new C12(512, 3732);
const v36 = new Uint16Array(undefined, Uint16Array, Uint16Array);
function F39(a41, a42, a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor;
    let v46;
    try { v46 = new a42(154, a44, 154, a42); } catch (e) {}
    -v46;
    a44 <= a44;
}
const v49 = new F39(154, 129, 129, 154);
const v50 = v8.constructor;
new v50(v49, v36, undefined, v36);
new F39();
new v50();
