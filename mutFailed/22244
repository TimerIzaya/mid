const v0 = [];
1633670016n | 1633670016n;
let v6 = 268435441;
const v8 = ++v6;
const v9 = Math.acos(v0);
--v6;
-6n & v0;
129 / 129;
function F16(a18, a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    const v21 = this?.constructor;
    try { new v21(a20, a20, -6n); } catch (e) {}
    const v23 = a19 * a19;
    try {
        this.b = a20;
        a18 / v8;
        let v25;
        try { v25 = new a20(v23, F16); } catch (e) {}
        v23 instanceof v25;
        v25[this] &= v9;
        v25[145232214] %= v9;
    } catch(e27) {
    }
    try {
        this.a = -6n;
    } catch(e28) {
    }
    try {
        const t28 = -6n;
        t28.e = a20;
    } catch(e29) {
    }
}
new F16(-2147483649n, 1633670016n, 129);
new F16(1633670016n, 2147483649, 129);
new BigUint64Array(1978);
const v37 = new Float32Array(3531);
v37["at"]();
new F16(-6n, -6n, -46637);
Uint32Array.d = Uint32Array;
class C48 {
    toString(a50, a51, a52, a53) {
        const o62 = {
            [-4294967297n](a56, a57, a58, a59) {
                eval(-6n);
            },
        };
        new Float64Array([-9223372036854775808,-12]);
        function F67() {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v69 = new F67();
        const v70 = new F67();
        const v71 = new F67();
        ([0.5696217973802589,v71,v70,v69,[4294967296]]).toLocaleString("toString");
        o62();
    }
}
C48.name;
