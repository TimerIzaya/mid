new BigUint64Array(47);
new Uint16Array(253);
const v7 = -129;
v7 + v7;
Float64Array.BYTES_PER_ELEMENT = Float64Array;
new Float64Array(129);
7 - 7;
BigInt64Array.name;
new BigInt64Array(7);
3729 + 3729;
const v19 = new Float64Array(3729);
try { v19.reduce(129); } catch (e) {}
new Int16Array(47);
try { Uint16Array.from(Int16Array); } catch (e) {}
try {
const t0 = 253;
new t0();
} catch (e) {}
const v28 = new BigUint64Array();
const v29 = v28?.constructor;
try { new v29(); } catch (e) {}
let v31;
try { v31 = v28.delete(Float64Array); } catch (e) {}
!v31;
v28.set(Uint16Array);
