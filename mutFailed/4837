const v0 = [10000,7971,257,268435441,50871,-1616522793,-383053686,-8,-174951384,5];
const v1 = [16,-4294967297,6,-964090017,-2,-65537];
const v2 = [-9223372036854775808,4294967296,-268435456,4096,30054,618994789,-65536,13,1619132208];
const v3 = [-2.220446049250313e-16,0.36110088261287676,-416292.5747571457];
const v4 = [5.0,-8.518540808193055e+307,-Infinity,1000000000000.0,4.0,0.9517088715881594];
const v5 = [-7.597424158156468e+307,-6.305547721874594e+307,2.2250738585072014e-308];
function f6(a7, a8) {
    new BigInt64Array();
    return v2;
}
const v12 = Symbol.toPrimitive;
v5[v12] = f6;
const v13 = /(?:ab)|cde/gsy;
const v14 = /Ee+/gsy;
const v15 = /a\W((\xed\xa0\x80))\x02/ums;
function f16(a17, a18, a19) {
    a17.toString = f16;
    const o29 = {
        "h": a18,
        [v5]: v3,
        get a() {
            v5[a17] = v1;
            this % this;
            v4 ^ v4;
            v15 >> -544070347;
            Math.asin(-47712);
            Math.clz32(-544070347);
            return -544070347;
        },
        "c": v15,
    };
    return o29;
}
f16(v5, v0, v13);
f16(v0, v2, v13);
f16(v14, v1, v14);
new Int32Array(128);
Int8Array.b = 128;
new Int8Array(128);
Int8Array.b = v12;
new Int8Array(129);
const v42 = [5,4142,11,268435456,11,-30743,4096,268435440,1753297073];
function f43() {
    Int8Array.b = Int8Array;
    gc();
    Object.defineProperty(v42, 1, { writable: true, enumerable: true, value: v42 });
    return Int8Array;
}
%PrepareFunctionForOptimization(f43);
f43();
%OptimizeFunctionOnNextCall(f43);
f43();
