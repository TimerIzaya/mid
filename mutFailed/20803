class C3 {
    static get d() {
        const o18 = {
            valueOf() {
                try {
                const t0 = -2147483649;
                t0(this, "all", this);
                } catch (e) {}
                const v8 = Symbol.iterator;
                const o17 = {
                    [v8]() {
                        let v10 = 10;
                        const o16 = {
                            next() {
                                v10--;
                                const v14 = v10 == 0;
                                const o15 = {
                                    "done": v14,
                                    "value": v10,
                                };
                                return o15;
                            },
                        };
                        return o16;
                    },
                };
                return "all";
            },
        };
        return o18;
    }
}
const v19 = new C3();
const v20 = v19?.constructor;
try { new v20(); } catch (e) {}
new C3();
new C3();
new Uint8ClampedArray(3342);
new Uint8ClampedArray(61);
512 - 512;
const v33 = new Float32Array(512);
v33[353];
try { new Symbol(); } catch (e) {}
const v37 = Symbol.toPrimitive;
Symbol.for(v37.description);
try { Symbol(v37); } catch (e) {}
const v43 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
-4294967297n >> -4294967297n;
const v48 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v49 = [601759695];
for (let v51 = 0; v51 < 5; v51++) {
    function f53() {
        try { ("Vre").codePointAt(undefined); } catch (e) {}
        try {
            v43.forEach();
        } catch(e58) {
            const v59 = /a\sc/gm;
            v59.b = v59;
            e58.f = e58;
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        let v61 = -268435456;
        v61++;
        function F63() {
            if (!new.target) { throw 'must be called with new'; }
            const v65 = this?.constructor;
            try { new v65(); } catch (e) {}
        }
        F63.e = F63;
        new F63();
        const t70 = [];
        delete t70.length;
        const o76 = {
            "c": -4294967297n,
            [522675525n](a71, a72) {
            },
            "c": v49,
            valueOf(a74, a75) {
            },
            "maxByteLength": -4294967295,
            "arguments": v48,
            ..."Vre",
        };
        o76[522675525] = o76;
    }
    new Int8Array(Array(2048));
    f53();
    %OptimizeFunctionOnNextCall(f53);
}
