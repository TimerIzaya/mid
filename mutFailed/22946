class C3 {
    get e() {
    }
    #valueOf(a6, a7) {
        return a7;
    }
    o(a9) {
        const t7 = [];
        t7.length += 1.0;
        try {
            new Map("268435441");
        } catch(e15) {
        }
        try {
            this.length = 0;
        } catch(e17) {
        }
        return a9;
    }
    constructor(a19) {
        const o22 = {
            "maxByteLength": 1871310161,
        };
        const v24 = new ArrayBuffer(205, o22);
        new Uint16Array(v24);
    }
}
const v27 = new C3(C3);
for (let v28 = 0; v28 < 10; v28++) {
    new v27();
}
function f30() {
    "Vre" == "Vre";
    return f30;
}
new C3(v27);
const v34 = new C3(-3.0);
function f41() {
    return -3.0;
}
function F42(a44, a45, a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        a46[3] = a46;
        const v49 = new BigUint64Array();
        function F50() {
            if (!new.target) { throw 'must be called with new'; }
            try {
                let v52 = 0;
                let v53 = 0;
                while (v53 < 0) {
                    for (let v56 = 0; v56 < 5; v56++) {
                    }
                    v53++;
                }
                do {
                    try { v49.entries(); } catch (e) {}
                    v52++;
                } while (v52 < 5)
                new F50();
            } catch(e64) {
            }
        }
        new F50();
        this.h = a46;
    } catch(e66) {
    }
    try {
        this.e = a47;
    } catch(e67) {
    }
    try {
        this.c = a45;
    } catch(e68) {
    }
}
const v69 = new F42(9n, C3, 9007199254740990, v34);
const v70 = new F42(1073741824n, v34, v69, v69);
new F42(-95236934n, v27, 9007199254740990, v70);
function f72(a73, a74, a75, a76) {
    for (let v77 = 0; v77 < 5; v77++) {
        function f78() {
            const v79 = [1000000.0,0.218433446981681,-5.0,-919787.2036172998,872389.6270716691];
            const v80 = v79.pop;
            let v81;
            try { v81 = v80(v79); } catch (e) {}
            return v81;
        }
        f78();
        %OptimizeFunctionOnNextCall(f78);
    }
    const v85 = new BigInt64Array(4046);
    let o86 = {
    };
    Math.acosh();
    [,...o86] = v85;
    return f72;
}
8 < 1;
function f92() {
    return 243628655;
}
Date.valueOf = f92;
for (let v94 = 0; v94 < 5; v94++) {
    f72(f72, v94, f72, v94);
}
