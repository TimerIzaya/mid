let v4 = 1000000.0;
v4 + v4;
[12938,-1000000000000.0,[-268435456,-268435456]];
const v9 = [12938,128];
function f10() {
    return -1000000000000.0;
}
const v11 = [0,1035491900,2,53429,256,0];
v11[3] = v11;
const v12 = [-2];
[2147483647,-9,-751857274,5,2147483648,-4294967296,-536870912,-8366,35979];
f10();
let v18 = c;
let v20;
try { v20 = ("-1073741824").search("-1073741824"); } catch (e) {}
try { v11.map(v20, v12); } catch (e) {}
[v4,v18,v18] = v9;
try {
    v11.slice(1533495192);
} catch(e24) {
}
const v25 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v26 = [601759695];
const v27 = [1073741824,1073741823,1376142744,1073741825];
522675525n & 522675525n;
function f30(a31, a32, a33, a34) {
    function f36() {
        -(-4294967295);
        const o44 = {
            "e": -4294967295,
            ...v25,
            ..."Vre",
            "c": a34,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a42, a43) {
                return a43;
            },
            ..."Vre",
            4: "Vre",
            5: -4294967295,
            6: -268435456,
        };
        return v26;
    }
    f36();
    %OptimizeFunctionOnNextCall(f36);
    try { ("find").strike(); } catch (e) {}
    let v48;
    try { v48 = v27[a33](..."find", a34, ...v26, ...v27, ...522675525n); } catch (e) {}
    v48 <= a33;
    return arguments;
}
for (let v50 = 0; v50 < 10; v50++) {
    const v51 = f30();
    v51.length = v51;
}
%OptimizeFunctionOnNextCall(f30);
const v52 = f30(v27, f30, 522675525n);
v52[1] = v52;
