const v0 = [];
class C2 {
    #toString(a4, a5) {
        const v6 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
        let v7 = -4294967297n;
        v7--;
        const v9 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
        const v10 = [601759695];
        const v11 = [1073741824,1073741823,1376142744,1073741825];
        function f12(a13, a14, a15, a16) {
            function f17() {
                try { ("Vre").codePointAt(); } catch (e) {}
                let v20 = Float64Array;
                v20 = a14;
                b = v10;
                v6.length;
                try {
                    v11.forEach(a14);
                } catch(e23) {
                }
                const o34 = {
                    "c": v7,
                    "c": v10,
                    valueOf(a25, a26) {
                        return a25;
                    },
                    [v7](a28, a29, a30, a31) {
                        eval();
                    },
                    "arguments": v9,
                    256: a16,
                };
            }
            f17();
            %OptimizeFunctionOnNextCall(f17);
            return f12;
        }
        let v36;
        try { v36 = a5(a4, a4, a5); } catch (e) {}
        const v38 = [1000000000.0,2.2250738585072014e-308,-3.0,-2.2250738585072014e-308,-2.2250738585072014e-308,-6.525028373249204e+307,-7.851646360254072e+307,0.6785915059434757,-0.0];
        class C39 {
        }
        C39[Symbol.replace] = v38;
        let v42;
        try { v42 = v36["create"](); } catch (e) {}
        delete a5?.d;
        super.d = !v0;
        return v42;
    }
    65535;
    set e(a46) {
        const v48 = Symbol.iterator;
        const o54 = {
            [v48]() {
                let v50 = 10;
                const o53 = {
                    next() {
                        v50--;
                        return this;
                    },
                };
            },
        };
    }
    static a;
    80 = null;
    70;
}
const v55 = new C2();
new C2();
new C2();
const v58 = [0.20515674283957852,-900.5568574902212,-3.0,0.0,-342324.2190060485,-1000000000000.0,-495055.983043873,0.8571792285794676];
const v59 = [1000000000000.0,-2.2250738585072014e-308,-414.2505701939001,919241.4027062173,0.0,-241414.78663559735];
const o61 = {
    valueOf() {
        return this;
    },
};
const v62 = [-3.3500365326590913,-7.381646315599511e+307,5.0];
function f63() {
    return v55;
}
function f64() {
    return v59;
}
class C65 extends f63 {
    h;
    d = f63;
    static toString(a67, a68) {
        try { this["delete"](v55, v58, v62, "delete", a68); } catch (e) {}
        [-12,1073741824];
        [-537020882,-9007199254740991,4294967296,-4294967297,10,-2147483647];
        [-498163606,-4,-9223372036854775807];
        return this;
    }
    #c;
    static #d = v58;
    g = f63;
}
new C65();
new C65();
new C65();
const o82 = {
    n(a78) {
        const o80 = {
        };
        return Worker(o80);
    },
};
try { o82.n(); } catch (e) {}
const v84 = new f64();
v84.constructor;
function f87() {
    return f87;
}
const v89 = new Map();
try { v89.set(Array, f87); } catch (e) {}
