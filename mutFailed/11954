function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = this;
    this.e = -1000000.0;
    try {
        this.g = a5;
    } catch(e7) {
    }
    try {
        this.d = a6;
    } catch(e8) {
    }
    try {
        this.e = -879.9630295004383;
    } catch(e9) {
    }
}
const v10 = new F3(-879.9630295004383, -1000000.0);
const v11 = new F3(-879.9630295004383, 3.0);
const v12 = new F3(-879.9630295004383, -1000000.0);
class C13 extends F3 {
    static #toString(a15, a16, a17) {
        function f18(a19, a20) {
            a19[a20];
            this[9];
            return v10;
        }
        f18(v12, v10, a16, a15, 3.0);
        return F3;
    }
    #n(a25, a26, a27, a28) {
        class C29 {
            #a;
            h;
            13;
            5 = F3;
        }
        const v30 = new C29();
        new C29();
        const v32 = new v30();
        return v32;
    }
}
new C13();
const v34 = new v10();
new C13();
class C36 {
    static o(a38, a39, a40, a41) {
        let v37 = this;
        super.b = a38;
        function f42(a43, a44, a45, a46) {
            ({"e":v37,...a44} = a44);
            try { new v37(); } catch (e) {}
            return a46;
        }
        f42(a41, v34, 3.0, a39);
        return a41;
    }
    static search = -1000000.0;
    [-1];
    static d;
    #d = v34;
    e;
}
new C36();
new C36();
new C36();
class C55 {
    4;
    constructor() {
        function f57() {
            function f58(a59) {
                new BigUint64Array(-65535);
                return -2.2250738585072014e-308;
            }
            return f58;
        }
        Object.defineProperty(this, Symbol.toPrimitive, { configurable: true, enumerable: true, get: f57 });
        super.f >>= this;
    }
    b = -2.2250738585072014e-308;
    n(a66, a67) {
    }
    2658944561 = -2.2250738585072014e-308;
    static 51;
    #c = C55;
    static [-2.2250738585072014e-308] = -879.9630295004383;
}
const v68 = new C55(2142097854, -2.2250738585072014e-308);
new C55(-2.2250738585072014e-308, v68);
new C55(2142097854, v11);
new C36();
new Uint8ClampedArray();
const v77 = new Uint8Array(64);
const v81 = new Int32Array(v77);
const v83 = new BigInt64Array();
const v84 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
const v85 = [-1.7976931348623157e+308];
function f86(a87, a88, a89, a90) {
    const o95 = {
        toString(a92, a93, a94) {
            return 64;
        },
    };
    function f96() {
        const o100 = {
            [3](a99) {
            },
        };
    }
    return a87;
}
f86(v83, 41066, v85);
f86(v81, 41066, v84);
try { v34(-85357.59116785484, v77); } catch (e) {}
