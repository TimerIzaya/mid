function F4(a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = this;
    try {
        this.c = 4294967297;
    } catch(e8) {
    }
    try {
        this.e = 4294967297;
    } catch(e9) {
    }
    try {
        this.d = a6;
    } catch(e10) {
    }
}
F4.e = 4294967297;
F4.e = F4;
const v11 = new F4(-65537, -65537);
const v12 = new F4(4294967297, 4294967297);
v12.g = v12;
const v13 = new F4(-1693472411, -1693472411);
[,4294967297,-1693472411];
[-65537,-1693472411];
const v16 = [v11,-1693472411];
const v17 = [-53613,268435440,268435440,2,-65536,-2147483647];
function f18() {
    function f19(a20, a21) {
    }
    return v16;
}
v17.toString = f18;
v17.length;
v12.c ||= 4294967297;
const v23 = [4294967297,4294967297,4294967297,v16,v16];
v23.c = v17;
let v25 = [[F4,F4]];
const v26 = [8];
v26.toString = f18;
let v27 = v17 != v26;
({"c":v25,"length":v27,...v27} = v23);
let v28;
try { v28 = new v25(v16, v11, v13, v25); } catch (e) {}
try {
    v28.e = 4294967297;
} catch(e29) {
}
v26[0];
const v31 = [-1024,-2147483647,-37738,-2,21596,2147483649,9007199254740992,-2039218916];
function f32() {
    return f18;
}
function f33(a34) {
    const v35 = [6,-1340283293,-11812,-1073741824,-1073741824];
    try {
        v35.length = -1693472411;
    } catch(e36) {
    }
}
Object.defineProperty(v31, "toString", { writable: true, configurable: true, enumerable: true, get: f32, set: f33 });
class C37 {
    static #f;
    static set f(a39) {
        a39(this, this, a39, v26);
    }
    constructor(a42) {
        const v43 = this?.constructor;
        try { new v43(v17); } catch (e) {}
        try { a42.toString(); } catch (e) {}
        this.e = v26;
    }
}
const v46 = new C37(v26);
const v47 = v46?.constructor;
function f48() {
    try {
        v47.c = v11;
    } catch(e49) {
    }
    return F4;
}
v47.toString = f48;
try { new v47(C37); } catch (e) {}
const v51 = new C37(v31);
function f52() {
    return v31;
}
Object.defineProperty(v51, "length", { configurable: true, enumerable: true, get: f52 });
v51.length;
const v54 = new C37(v31);
v54.reduceRight = v54;
v54.e;
let v58;
try { v58 = v54.reduceRight(4294967295, v31, C37); } catch (e) {}
v31[6] ||= -10;
function f59(a60, a61, a62, a63) {
    const v64 = v26 in v17;
    !v64;
    try { v58(...v26, ...v17, v31, ...v64); } catch (e) {}
    return f59;
}
f59();
