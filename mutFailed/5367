const v0 = [19791,-63092,15568,1073741825,-17473,-54388,-4096,1073741824];
const v1 = [5];
const v2 = [-268435456,-14,-65537,4239,-65535,-11,65537];
class C3 {
    set a(a5) {
        function f6() {
            const o9 = {
                get b() {
                    super[this] = this;
                    return f6;
                },
                ...C3,
            };
            return o9;
        }
        f6();
        typeof a5 === "number";
    }
    static a = v0;
    g = v1;
    static #h = v2;
    static #a;
    static #e;
}
const v14 = new C3();
new v14();
new C3();
const v19 = [];
let v20;
try { v20 = v0.m(v19); } catch (e) {}
const v22 = new BigUint64Array();
const v25 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v27 = new Uint32Array();
const v29 = [601759695];
const v30 = [1073741824,1073741823,1376142744,1073741825];
function f32(a33, a34, a35, a36) {
    const v37 = a33?.constructor;
    try { new v37(a33, a36, v30); } catch (e) {}
    arguments.length;
    function f41() {
        try { ("Vre").charAt(4096); } catch (e) {}
        let v44;
        try { v44 = ("Vre").codePointAt(v25); } catch (e) {}
        v44 ^ v44;
        let v46 = Float64Array;
        v46 = a34;
        b = v25;
        let v47 = v25.length;
        v47++;
        try {
            v30.forEach(8);
        } catch(e50) {
        }
        const o66 = {
            "c": -4294967297n,
            "c": v29,
            valueOf(a52, a53) {
                return a52;
            },
            1073741824: v27,
            [522675525n](a55, a56, a57, a58) {
                const o60 = {
                    get e() {
                        return this;
                    },
                };
                function f61() {
                    return o60;
                }
                Object.defineProperty(o60, Symbol.toPrimitive, { enumerable: true, get: f61 });
                eval();
            },
            "arguments": 5,
            256: a36,
        };
        o66[256];
    }
    f41();
    const v70 = a34();
    let v71;
    try { v71 = v70.findLast(v22); } catch (e) {}
    v71.unshift();
    try { Int8Array.of(); } catch (e) {}
    const v75 = new Int8Array();
    v75.buffer.slice(2147483648);
    const v81 = new v29(1024);
    const v82 = v81[3];
    v82 + v82;
    1024 * v82;
    for (let v85 = 0; v85 < 5; v85++) {
    }
    %OptimizeFunctionOnNextCall(f41);
    try { v30["find"](...v20, a36, ...v29, ...v1, ...522675525n); } catch (e) {}
}
new Int16Array(8);
function f89() {
    return f89;
}
class C90 extends f89 {
}
class C91 extends C90 {
}
function f93(a94, a95, a96, a97) {
    try { a94(); } catch (e) {}
    a95 & a95;
    const v100 = 5 | C91;
    v100 * v100;
    a94 / a94;
    const v103 = a95 < a94;
    const o107 = {
        n(a105, a106) {
            return v103;
        },
    };
    return a96;
}
new BigUint64Array(2534);
new C91(129);
let v116 = new Float64Array(3);
function f117() {
    new Int8Array(1073741823);
}
f117();
v116 ^= this;
