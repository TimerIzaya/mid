new Uint16Array(119);
const v6 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
try { ("Vre").charAt(4096); } catch (e) {}
let v9;
try { v9 = ("Vre").codePointAt(v6); } catch (e) {}
v9++;
new BigUint64Array(1);
const o14 = {
};
o14.__proto__;
new Uint8Array(3521);
new Float32Array(9);
function f20(a21) {
    return 9;
}
class C22 extends f20 {
    1073741825;
    static #g;
}
[1073741823,-4294967295,-280,-2147483649,-53013,4294967297,4294967296,4294967297,4,31556];
[1073741825,10973,6,-542393642,-2147483647,512,-478928444,-1024,11955,-256];
[1073741823,-13,4,383952790,-1];
const v29 = [0.48879817238347556,2.2250738585072014e-308,1000.0,1000.0,-681.8004556870678,-1000.0,-1.5737380958439236e+306];
function F30(a32, a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = 4411;
    const v35 = [2.412578955630149,2.7008822875610345,-2.220446049250313e-16,-1.0,-1000000000.0,-1.0,3.9002388983145044e+307,-Infinity,-1e-15,-4.2464820531165003e+307];
    const v36 = [-1e-15,4.0,362.9742459010415,1.488212487511409e+308,3.0];
    class C37 {
        constructor(a39, a40) {
            super[v36] = v35;
            Math.LOG10E = Math;
            delete a34[this];
            for (let [i46, i47] = (() => {
                    10 >> 10;
                    return [0, 10];
                })();
                i46 < i47;
                i46++) {
            }
        }
    }
    const v56 = new C37(v35, v36);
    function f57(a58) {
    }
    const o59 = {
    };
    const v61 = new BigInt64Array();
    class C63 {
    }
    const v64 = new C63();
    v61[v64] %= -4294967296;
    const v67 = [v56];
    const o71 = {
        "arguments": v67,
        "type": "function",
        n(a69, a70) {
        },
        "maxByteLength": -4294967296,
        "d": C63,
    };
    new Worker(f57, o71);
    for (const v74 of "bigint") {
    }
    let v75 = 1024;
    v75++;
}
new F30(531531810, v29, 531531810);
class C78 {
}
