const v0 = /jS[a-zA-Z0-9]A*/udiy;
const v1 = /(?:a{5,1000000}){3,1000000}*/gvs;
const v2 = /na(?:b)/vsy;
const v3 = [v1,v2,v0];
const v4 = [v3,v1,v1,v3];
const v5 = [v0,v4,v3];
function f6(a7, a8, a9, a10) {
    const o28 = {
        [v1](a12, a13) {
            super.g;
            a7[v0] += --a13;
            return a10;
        },
        1195: a8,
        "b": v4,
        m(a17, a18, a19) {
            delete a9[3];
            const o23 = {
                "maxByteLength": 257,
            };
            const v25 = new SharedArrayBuffer(257, o23);
            new DataView(v25);
            return o23;
        },
    };
    return o28;
}
const v29 = f6(v3, v3, v5, f6);
f6(v5, v4, v5, v2);
f6(v5, v4, v4, v5);
class C32 extends f6 {
    constructor(a34, a35) {
        super(v4, v5, v4, a35);
        f6(v3, v5, v4, v1);
        super.b;
    }
    10000;
    static 268435440 = f6;
    #e;
    get e() {
        h = v29;
        Object.defineProperty(v1, -this, { writable: true, configurable: true, get: f6, set: f6 });
        try {
            v29.#e = v0;
        } catch(e40) {
        }
        return v5;
    }
}
const v41 = new C32(v2, v0);
new C32(v1, v2);
new C32(v0, v0);
class C44 {
    static {
    }
}
for (let v46 = 0; v46 < 25; v46++) {
    const v47 = [601759695];
    const v48 = [1073741824,1073741823,1376142744,1073741825];
    function f49(a50, a51, a52, a53) {
        for (let v55 = 0; v55 < 5; v55++) {
            try {
                arguments.g = v55;
            } catch(e56) {
            }
        }
        function f57() {
            return a50;
        }
        try { a52.m(a51, v1, Int8Array, v47, C44); } catch (e) {}
        v47.__proto__;
        arguments[4] = v41;
        v48[268435441];
        let {"f":v62,"length":v63,...v64} = v48;
        const v65 = new Int8Array();
        class C66 {
        }
        function f67(a68, a69) {
        }
        f67();
        v65.buffer;
        try { v48["find"](); } catch (e) {}
        const o76 = {
            valueOf() {
            },
            get d() {
            },
        };
    }
    for (let v77 = 0; v77 < 5; v77++) {
        f49();
    }
}
