const v0 = [];
class C4 {
    set c(a6) {
        this[3218983854];
        v0.length;
        const v9 = super["-11"];
        function F10(a12, a13, a14, a15) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.b = a15;
            } catch(e16) {
            }
            try {
                this.g = a6;
            } catch(e17) {
            }
        }
        new F10(F10, v9, this, "XJag");
        new F10("XJag", "-11", "XJag", "XJag");
        new F10("function", "function", v9, "-11");
    }
}
const v21 = new C4();
new C4();
const v23 = new C4();
function f24() {
    return v23;
}
class C25 {
    static 4167953665;
    constructor(a27, a28, a29) {
        const v30 = this ** this;
        Object.defineProperty(a28, "length", { writable: true, get: f24 });
        v0.length ^= v30;
        -2147483649 + v23;
        !v23;
        -2147483649 ^ v23;
    }
}
const v37 = new C25(v21, "function", "function");
new C25(v37, v37, v37);
new C25(v21, "XJag", "XJag");
const v41 = WeakSet.prototype;
function f42() {
    return f42;
}
Object.defineProperty(v41, "constructor", { writable: true, enumerable: true, value: v41 });
