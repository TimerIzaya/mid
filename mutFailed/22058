function f0() {
}
const v2 = new Map();
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a5;
    } catch(e6) {
        const v7 = [1,-1643840771,4,1111495904,-9007199254740992,-268435456,255,-403790861,268435439];
        async function f8(a9, a10, a11) {
            a9 | a9;
            a11 % a11;
            const v14 = ~a10;
            for (let v15 = 0; v15 < 5; v15++) {
                ([-3.0,4.0,1.7381830731777672e+308,-Infinity,0.053627216611518036]).toLocaleString(a9);
                for (let v18 = 0; v18 < 50; v18++) {
                }
            }
            function F19() {
                if (!new.target) { throw 'must be called with new'; }
                for (let v21 = 0; v21 < 1000; v21++) {
                    const v23 = "p" + v21;
                    v23 == v23;
                }
            }
            new F19();
            return v14;
        }
        f8(f8, v7);
    }
    try {
        this.b = f0;
    } catch(e27) {
    }
    try {
        this.d = a5;
        const o29 = {
            "c": 2.0,
        };
        function F30(a32) {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v33 = new F30(o29);
        with (o29) {
            try { v33.search(c); } catch (e) {}
        }
    } catch(e36) {
    }
}
const v37 = new F3(v2);
new F3(Map);
new F3(v37);
class C40 {
    static [v37];
    get c() {
        try {
            v37.valueOf = f0;
        } catch(e42) {
        }
        return F3;
    }
    c;
    [f0] = v2;
    48 = f0;
}
new C40();
new C40();
const v45 = C40.constructor;
v45.e = v45;
Worker(f0);
function f49() {
    return Array;
}
const v51 = new Date(f49);
function F52(a54) {
    if (!new.target) { throw 'must be called with new'; }
    this.valueOf(Array, v51, v51);
}
new C40();
function F58(a60) {
    if (!new.target) { throw 'must be called with new'; }
    const v61 = this.constructor;
    try { new v61(); } catch (e) {}
    try {
        -35199 % (this / -1478256740);
    } catch(e66) {
    }
}
const v67 = new F58();
gc();
const o70 = {
};
o70[10] = o70;
new F58(v67);
