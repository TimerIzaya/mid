[-256,4096,64,9,-2,12,9,-1190516061,14,343];
[1,-536870912,2];
[-256,-3866,26911,1000,2,-4096,0,-1566327329];
const v6 = new Uint32Array(186);
Float64Array > v6;
new Uint8ClampedArray(11);
const v13 = new Int32Array(9);
try {
    new Map("268435441");
} catch(e19) {
}
new Float64Array(477);
const o23 = {
};
for (let v24 = 0; v24 < 5; v24++) {
    Math.asin(-3 ^ v24);
}
const v30 = [536870888,8];
const v31 = [2147483649,2147483649,-65537,-268435456,10,9223372036854775807];
const o35 = {
    set g(a33) {
    },
    get g() {
        return v13;
    },
    __proto__: v13,
    ...v30,
    4096: v31,
};
function f37(a38, a39) {
    const o43 = {
        m(a42) {
            return this;
        },
        __proto__: 2147483648,
    };
    a39[0] = arguments;
    return a39;
}
f37(undefined);
for (let [i55, i56] = (() => {
        function F46(a48, a49) {
            if (!new.target) { throw 'must be called with new'; }
            const v50 = this.constructor;
            try { new v50(); } catch (e) {}
            try { this.constructor(); } catch (e) {}
        }
        return [0, 10];
    })();
    i55 < undefined;
    i56--) {
}
