function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = this;
    try {
        this.h = 1809759507;
    } catch(e3) {
    }
    try {
        this.d = 1809759507;
    } catch(e4) {
    }
}
new F0();
new F0();
new F0();
new Uint32Array(64);
new Uint32Array(4096);
new Uint16Array(7);
function f21(a22, a23) {
    const o29 = {
        toString(a25, a26, a27) {
            try {
                a25.f = 536870888n;
            } catch(e28) {
            }
            return 536870888n;
        },
    };
    function f30() {
        function F31() {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.g = 1073741824;
            } catch(e34) {
            }
            try {
                this.f = 1073741824;
                const v35 = [-1.5645136499685964e+308,-4.455146091404086e+307,-6.885938370216613,-Infinity];
                const v36 = [-8.594679214373069e+306,-1000.0];
                const v37 = [-1.0,-3.0,1000000000000.0,0.4992460480015034,-1000000000000.0,-1.7976931348623157e+308,0.8138769867150808];
                try {
                const t0 = 1073741824;
                t0(F31, v35, v37, 1073741824, F31);
                } catch (e) {}
                [1073741824,this,1073741824,v36];
                [this,v35,[v37,F31,v36],F31];
                function F43() {
                    if (!new.target) { throw 'must be called with new'; }
                    function F45(a47, a48) {
                        if (!new.target) { throw 'must be called with new'; }
                    }
                    class C49 {
                        static get g() {
                            super.subarray();
                        }
                    }
                }
            } catch(e52) {
            }
        }
        return F31;
    }
    o29[Symbol.toPrimitive] = f30;
    return o29;
}
const v55 = f21();
v55 == !f21(536870888n, v55);
