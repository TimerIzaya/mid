const v0 = /(\u0060l(?:a?)+za\noa{0})/udimy;
const v1 = /(R\x608H)/uiy;
const v2 = /kmS6(?:a*)+/gvis;
class C3 {
    static get g() {
        [819057550,2116248023,-9007199254740992,3,-4294967295,-2147483647,-256,9007199254740992,10000,3];
        [-15,-128,-56586];
        [602,-1892778096,-13,57774,10,1812381193,-24211,807166436,-14];
        return C3;
    }
    [v2];
    static #b = v1;
    4096 = v0;
    128;
}
const v8 = new C3();
const v9 = v8[4096];
const v10 = new C3();
const v11 = new C3();
v11[4096] = v11;
function f12() {
    return v1;
}
const v14 = new v9();
let v15;
try { v15 = v14.set(v14, v0); } catch (e) {}
function F18(a20) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.constructor(f12); } catch (e) {}
}
new F18("a");
try { v15.constructor(v10); } catch (e) {}
for (const v25 in "findIndex") {
    v11.d = v25;
}
const v26 = ("object").__proto__;
try { v26.concat(v10); } catch (e) {}
const t37 = "findIndex";
t37.__proto__ = v26;
