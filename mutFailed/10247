const v0 = [];
class C1 {
    c = v0;
    static valueOf() {
        return null;
    }
    m() {
        let v5;
        try { v5 = new this(this); } catch (e) {}
        v0.length;
        try {
            this.__proto__ = v5;
        } catch(e7) {
        }
        return v0;
    }
}
new C1();
new C1();
const v10 = new C1();
const v11 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v13 = new Uint32Array();
let v14 = -4294967297n;
const v15 = v14--;
const v16 = [601759695];
const v17 = [1073741824,1073741823,1376142744,1073741825];
function f18(a19, a20, a21, a22) {
    const v23 = a19.constructor;
    let v24;
    try { v24 = v23(); } catch (e) {}
    const v25 = v24?.constructor;
    let v26;
    try { v26 = v25(f18, a19, v11, Uint32Array, v23); } catch (e) {}
    function f27() {
        const v29 = ("Vre").charAt(v26);
        v29.blink();
        let v31;
        try { v31 = ("Vre").codePointAt(v11); } catch (e) {}
        v31 % v31;
        let v33 = Float64Array;
        v33 = a20;
        b = v11;
        let v34 = v11.length;
        v34++;
        try {
            v17.forEach(a20);
        } catch(e37) {
            e37.message = e37;
        }
        const o48 = {
            "c": v14,
            valueOf(a39, a40) {
                return v24;
            },
            1073741824: v13,
            [v14](a42, a43, a44, a45) {
                eval(v29);
            },
        };
        return v17;
    }
    f27();
    const v51 = Array(v25);
    try { v51.findLast(); } catch (e) {}
    const v54 = Int8Array.of();
    let v55;
    try { v55 = v54.every(v54, a19, v54, a20, Array); } catch (e) {}
    const v56 = new Int8Array(v55);
    const v58 = v56.buffer.slice();
    const v59 = v58.constructor;
    try { v59(v58, v55, v15, v54, a19); } catch (e) {}
    const v62 = new Int32Array(v59, v23, v23);
    v62.lastIndexOf(a19, a21);
    try { v17["find"](..."find", a22, ...v16, ...v17); } catch (e) {}
    return v14;
}
for (let v66 = 0; v66 < 10; v66++) {
    f18(v13);
}
%OptimizeFunctionOnNextCall(f18);
f18(Uint32Array);
/ba*?[[^123]\P{Decimal_Number}]+/uimy;
/Rzabc|def|ghi/gudims;
/MJ{12,?/gd;
const v75 = [C1,C1,C1,"object"];
[v10,v75,v75,"536870889"];
[v75,C1];
const v78 = [];
const v79 = [v78,v78,v78,v78,v78];
try { v78.reduce(v79); } catch (e) {}
