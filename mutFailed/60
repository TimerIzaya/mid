new Uint8ClampedArray(202);
const v5 = new BigUint64Array(2864);
const v8 = new BigUint64Array(210);
const v10 = new Set();
new Uint16Array(116);
const v16 = new Int16Array(512);
const v19 = new Int32Array(9);
class C23 {
}
function F24(a26, a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
}
const v30 = new F24();
const v31 = new F24(v30, F24, F24, v30);
const v32 = [7,128];
const v33 = [13,-2103725161,15240,-9223372036854775807,1077763702,256,-1024,9,1073741823,-2];
const v34 = v33[4];
v34 | v34;
const v36 = [40213,422333454,47387,65536,-51830];
v36[2] = v36;
v8[3] += 1000000.0;
Set[9] = v10;
try { C23["m"](v5, v31, "m", "m", v16); } catch (e) {}
v19.length;
0 - 0;
try { gc(); } catch (e) {}
gc();
const v49 = [8.360030709333259,416819.70671931445,1000.0,-1.0513464134302462e+307,2.2250738585072014e-308,-999.1393293497049];
v49.length = 1;
const v51 = /xyz{1,32}?/gusy;
class C52 {
    268435440 = v51;
}
new BigInt64Array();
try { ("boolean").repeat(1000000.0); } catch (e) {}
const t35 = "toString";
t35[6] = "toString";
"toString" == "toString";
let [,...v60] = [1e-15,1.0,-3.0,1.43935350979979e+308,-0.0];
function f61() {
    const o65 = {
        ...1.0,
        set b(a64) {
        },
    };
    return o65;
}
f61();
("boolean").split("toString");
8 < "boolean";
const v71 = new Uint8ClampedArray();
try { v71.reduceRight(v71); } catch (e) {}
("I").localeCompare();
-256 >> -256;
function f76(a77, a78) {
    a78--;
    new Float32Array([-37102.6674218484,-969411.635186719,-1.3592557640113297e+308,0.9054806195219168,1000000000000.0,-0.0,-3.0,-0.0]);
    class C83 {
        static {
            this < this;
        }
    }
    a77 | a77;
    const o130 = {
        "c": 15135,
        "a": 15135,
        "d": a77,
        __proto__: a78,
        "g": -1628878962,
        "type": "boolean",
        "a": a77,
        set b(a88) {
        },
        "g": 15135,
        "b": a78,
        get f() {
            super[1000000.0] = this;
            Math.exp(-359.60295377780096);
            const v93 = [-503399.81061701436,0.07820891042711386,-100.04924869632453,-Infinity];
            [[[-1e-15,-4.547098672084515,6.731189859503068,1000.0,1000.0,414.1111077300918,567.5737904015757],v93,v93]];
            try {
                new Int8Array(9);
                function f100() {
                    return f100;
                }
                new Uint16Array();
                const o103 = {
                };
                try {
                    o103.b = -4;
                } catch(e104) {
                }
                try {
                    const o105 = {
                    };
                    o105.b = -4;
                    o105.e = f61;
                } catch(e106) {
                }
                try {
                    const o107 = {
                    };
                    o107.b = -4;
                    o107.e = f61;
                    o107.g = v10;
                } catch(e108) {
                }
                try {
                    const o109 = {
                    };
                    o109.b = -4;
                    o109.e = f61;
                    o109.g = v16;
                } catch(e110) {
                }
                !0.8843420658768774;
                function F112() {
                    if (!new.target) { throw 'must be called with new'; }
                }
                const v115 = new F112();
                const o123 = {
                    [v115](a118, a119, a120, a121) {
                        "D2z" < a118;
                    },
                };
                const o125 = {
                    [f100]() {
                    },
                };
                [o125];
                v33.copyWithin(8, -268435456, -256);
            } catch(e129) {
            }
            return this;
        },
    };
    o130.g = o130;
    return o130;
}
let v131;
try { v131 = f76(15135, 15135); } catch (e) {}
v131[1000000];
f76(925.1427495594241, v32);
try {
    v49.length = 0;
} catch(e134) {
}
try { v10.add(202); } catch (e) {}
f76(317008.8127941969, -4);
f76(1000000.0, v33);
268435441n ^ 268435441n;
268435441n - 268435441n;
const v142 = new BigUint64Array();
v142[2445191368] = 268435441n;
