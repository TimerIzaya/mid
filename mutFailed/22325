[-3411,11046,3268,-2,-1601844900,65536,12536,536870912,16,-10];
const v4 = [1073741823,-1642334376,-27976,55689];
const v5 = [257,-9223372036854775808,-256,2,8,-65536,3,1073741824,999,-1221265384];
const v8 = new Uint16Array(512);
new Float64Array(256);
new Uint8ClampedArray(256);
const o20 = {
    "e": v8,
};
o20[536870888] = v8;
v4 % -1;
new Uint8ClampedArray(129, Uint8ClampedArray, 16);
Uint32Array.d = Uint32Array;
new Uint32Array(722);
const o28 = {
    [v8]: 129,
};
%VerifyType(o20);
new BigInt64Array(129);
try { new Proxy(722, BigInt64Array); } catch (e) {}
function F33(a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
}
class C37 extends F33 {
    #d;
    static {
        this.prototype;
        for (let v40 = 0; v40 < 25; v40++) {
            v40++;
            class C42 {
                static {
                }
            }
            for (let v44 = 0; v44 < 25; v44++) {
                [601759695];
                [1073741824,1073741823,1376142744,1073741825];
                super[v5];
                const o50 = {
                    "maxByteLength": 241,
                };
                const v52 = new ArrayBuffer(241, o50);
                new Float32Array(v52);
                function f55(a56, a57, a58, a59) {
                    for (let v61 = 0; v61 < 5; v61++) {
                        try {
                        } catch(e62) {
                        }
                    }
                    function f63() {
                        return a56;
                    }
                    class C64 {
                    }
                    function f65(a66, a67) {
                    }
                    const o70 = {
                        valueOf() {
                        },
                        get d() {
                        },
                    };
                    function f71(a72) {
                        return a72;
                    }
                    class C73 extends f71 {
                        g;
                        static 257;
                    }
                }
                for (let v74 = 0; v74 < 5; v74++) {
                    f55();
                }
            }
        }
        try {
        } catch(e76) {
        }
    }
}
