function f0() {
}
class C4 extends f0 {
    static {
        this.d = this;
        this.length;
        super[f0] = "a";
    }
    #toString(a8) {
        %VerifyType("object");
        let {"e":v9,"f":v10,"g":v11,...v12} = this;
        Object.defineProperty(v12, "g", { writable: true, configurable: true, set: f0 });
        return v9;
    }
    static f = "a";
}
const v13 = new C4();
v13.c = f0;
const v14 = v13?.constructor;
v14[0] = v14;
try { new v14(); } catch (e) {}
const v16 = v13?.c;
try { new v16(); } catch (e) {}
try { new Uint16Array(v16, "a", v13); } catch (e) {}
Uint16Array.e = Uint16Array;
const v20 = new Uint16Array();
for (let v21 = 0; v21 < 5; v21++) {
    function f22() {
        try { Math.expm1(f22); } catch (e) {}
        const v26 = Math.abs(v20);
        v26 ^ v26;
        let v28 = -450746.69945373747 ^ -450746.69945373747;
        v28++;
        const v30 = Math.acos(v28);
        const v31 = v30 - v30;
        v31 / v31;
        return Math;
    }
    const v33 = f22();
    v33.c = v33;
    %OptimizeFunctionOnNextCall(f22);
}
const v34 = new C4();
v34.constructor = f0;
const v35 = v34?.constructor;
v35[0] = v34;
try { new v35("536870889"); } catch (e) {}
const v37 = v34?.constructor;
try { new v37(); } catch (e) {}
let v39;
try { v39 = new v37(); } catch (e) {}
v39.valueOf = f0;
const v40 = v39?.constructor;
v40.d = Uint16Array;
try { new v40(); } catch (e) {}
const v42 = new C4();
const v43 = v42?.__defineSetter__;
try { new v43("object", v13); } catch (e) {}
const v45 = v42?.constructor;
v45[0] = v13;
v45.d = v45;
let v46;
try { v46 = new v45(); } catch (e) {}
function f47(a48, a49) {
    new Uint32Array();
    return a48;
}
v46.constructor = f47;
const v52 = v46?.constructor;
v52[0] = v45;
try { new v52(); } catch (e) {}
let v54 = 5;
~(v54--);
const v58 = new Float64Array(v54);
try { v58.filter(v20); } catch (e) {}
const v61 = 255 - 255;
v61 * v61;
const v64 = new Uint32Array(255);
let v65 = 1024;
let v66 = v65--;
v66--;
Float64Array.name = Float64Array;
new Float64Array(v65);
const v71 = ("o")[0];
v71[0] = v71;
let v75 = -4294967297n % -4294967297n;
v75--;
const v78 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
function f79(a80, a81) {
    const o82 = {
    };
    new Proxy(v64, o82);
    return f0;
}
v78.toString = f79;
const v85 = [601759695];
const v86 = [1073741824,1073741823,1376142744,1073741825];
522675525n * 522675525n;
function f89(a90, a91, a92, a93) {
    a90[0] = -4294967297n;
    a90[0] = a90;
    a91 >> a91;
    a92 >>> a92;
    a92--;
    const v97 = a92 | a92;
    arguments[2] = arguments;
    function f99() {
        const v101 = ("Vre").toLocaleUpperCase;
        let v102;
        try { v102 = v101(a92, "Vre", a90, v101); } catch (e) {}
        const v103 = ("Vre").fixed(v102, -4294967297n, a90);
        v103[8] = v103;
        const v104 = v103.codePointAt();
        v104 - v104;
        const v107 = -4294967295 - -4294967295;
        v107 + v107;
        let v109 = -268435456;
        const v110 = v109--;
        v110 * v110;
        const o129 = {
            "c": -4294967297n,
            [522675525n](a113, a114) {
            },
            ..."Vre",
            "maxByteLength": -128,
            "arguments": v85,
            [v104]: -1547267477n,
            __proto__: a92,
            "d": v110,
            "e": -4294967295,
            "isConcatSpreadable": -128,
            valueOf(a116, a117) {
                return this;
            },
            ...v86,
            "f": v97,
            "a": v102,
            ...arguments,
            ...v78,
            "e": v97,
            "e": v109,
            "maxByteLength": -4294967295,
            "arguments": v78,
            ...v85,
            "type": "Vre",
            ..."Vre",
            valueOf(a119, a120) {
                return a119;
            },
            ..."Vre",
            "c": v109,
            "type": "Vre",
            "type": "Vre",
            [v78](a122, a123, a124) {
            },
            "type": "o",
            "type": "129",
            toString(a126, a127, a128) {
                return -128;
            },
        };
        o129.maxByteLength;
        o129.f;
        return arguments;
    }
    f99();
    %OptimizeFunctionOnNextCall(f99);
    return a92;
}
try { f89(v45, v39, -1547267477n, Float64Array); } catch (e) {}
for (let v134 = 0; v134 < 5; v134++) {
    const v135 = f89(v85, v134, v134);
    v135[1] = v135;
}
