function f0() {
}
const v1 = [f0,f0,f0,f0];
const v3 = [[v1,v1]];
const v4 = [9.011101004143896,-3.2773679240535536,0.0,-1.2673725813133344e+308];
try { v4.fill(v1); } catch (e) {}
let v6;
try { v6 = v4.shift(); } catch (e) {}
const v7 = [-1000000000000.0,-505110.88400479];
try { v7.push(v7); } catch (e) {}
[-2.0,1.692580903395907];
const v13 = ("symbol")[1];
const t10 = "symbol";
t10[2] = "symbol";
0.7125447874662207 >>> 0.7125447874662207;
7.665601427498654e+307 * 7.665601427498654e+307;
const v25 = v1?.toLocaleUpperCase;
try { new v25(); } catch (e) {}
try { new Uint8Array(f0, v6, v4); } catch (e) {}
const v33 = new Int8Array(3816);
for (const v36 of 4096) {
    const v37 = v36[1];
    v37 >>> v37;
    let [,,,...v39] = v33;
    try { v39.splice(v39, v3); } catch (e) {}
    const o41 = {
    };
    o41.a = v37;
    const o42 = {
    };
    o42.a = v37;
}
try { new Uint8ClampedArray(f0, 7.665601427498654e+307, 3816); } catch (e) {}
const v49 = new Uint8ClampedArray(104);
v49.g = v49;
try { v49.forEach(v13); } catch (e) {}
Float64Array.e = Float64Array;
[];
v49.toLocaleString()[1073741824];
