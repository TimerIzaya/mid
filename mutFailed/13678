["setFloat64","setFloat64","flags"];
const v4 = ["flags"];
const v6 = [-1000000.0,771279.5641904315,0.0,8.299995604235331,6.625300935335886,-820.4949035918538,-602.5256799896665,0.6342705996691437,Infinity];
const v7 = [1000000000.0,4.0,5.0,-6.555298893133851e+307];
for (let v8 = 0; v8 < 5; v8++) {
    v7.unshift(-463330.04816285486, v6.values());
}
[v4];
new Date();
function f14() {
    return f14;
}
const v16 = ["Ov9Mv"];
const v17 = v16 in v16;
function f20() {
}
new Int16Array(Int16Array.name);
const v26 = new Date();
const v27 = v26.setFullYear();
const v31 = new Float64Array(Float64Array);
v31.indexOf(Int8Array, 7);
const v33 = [-9223372036854775808,64];
const v34 = [-4294967296,-63504,-9223372036854775807,512,24559,2];
const v35 = [-9219,-1824342407,-14,7,65537,-49368];
function F36(a38, a39, a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
    const v42 = a40[1];
    try {
        with (a38) {
            F36(v42, a41);
        }
    } catch(e44) {
    }
}
v17();
gc();
const o50 = {
    "maxByteLength": v27,
};
new F36(v35, v34, v33);
function f52() {
}
class C53 extends -463330.04816285486 {
    constructor(a55) {
        super();
        for (let v56 = 0; v56 < 5; v56++) {
            super.valueOf();
            const v60 = new Uint32Array([2.0,-2.2250738585072014e-308,2.4617128810201834,0.8777478192033997,4.0,5.13369912480738,-0.6793749535317453]);
            new Uint16Array(v60);
        }
    }
}
new C53();
