class C3 {
    #p(a5, a6) {
        super[c] = a5;
        let v8;
        try { v8 = c(c, 127n); } catch (e) {}
        return v8;
    }
    f = 127n;
    static n(a10) {
        let v11;
        try { v11 = this(this, a10, ...-224740524n, a10, a10, this); } catch (e) {}
        function f12() {
            return v11;
        }
        try {
            v11.#p(127n, f12, this);
        } catch(e14) {
        }
        return v11;
    }
}
new C3();
new C3();
new C3();
const v18 = [-5.930820799193936e+307,-1000000000.0,-7.752609354393148e+307,-1.7976931348623157e+308,5.172153670130486,0.22464726178059513,-1.0,-5.0,1000000000000.0,-987818.6354876581];
const v19 = [NaN,1.0,-226643.53587612743,0.9027268504041815,0.0,-2.220446049250313e-16,1000000.0];
const v20 = [-1e-15,7.1511495974936];
function F21(a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a24;
    try {
        this.b = a23;
    } catch(e26) {
    }
}
new F21(v20, v20, v19);
new F21(v20, v20, v18);
new F21(v20, v19, v18);
new Uint16Array();
new Uint32Array(Uint32Array);
class C36 {
    constructor(a38, a39, a40, a41) {
        try { a40(); } catch (e) {}
        for (let i44 = 0; i44 < 9; i44++) {
            a40[i44] = a41;
        }
    }
    c;
}
new C36();
new C36();
