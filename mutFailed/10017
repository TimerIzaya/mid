const v0 = [];
const v3 = new WeakSet();
new Uint32Array(7);
new Uint8Array(256);
new Int32Array(3424);
class C16 {
    constructor(a18, a19) {
        function f20(a21) {
            function f23(a24) {
                a24 & a24;
                const v27 = v3.constructor;
                try { new v27(v3, f20, -14); } catch (e) {}
                function f29() {
                    return f29;
                }
            }
            this.onmessage = f23;
            this.__proto__;
        }
        const v35 = [f20];
        const o42 = {
            "arguments": v35,
            "type": "function",
            [C16]: Worker,
            get d() {
                const v38 = Symbol.toPrimitive;
                const o41 = {
                    [v38]() {
                        [v0];
                    },
                };
            },
        };
        new Worker(f20, o42);
    }
}
new C16(C16, -4.0);
const v46 = new WeakSet();
const v47 = new WeakSet(v46);
function f49(a50, a51, a52) {
    a50[22] = a50;
    const o53 = {
        ...a52,
        2: v46,
        268435439: WeakSet,
    };
    return o53;
}
const v54 = f49(v47, "-65537", 256);
f49(v54, "boolean", v54);
const v56 = new C16(-4.0, -4.0);
const v57 = new C16(9007199254740992, 512);
function f60(a61, a62, a63) {
    return null;
}
function F65(a67, a68) {
    if (!new.target) { throw 'must be called with new'; }
    const v69 = this.constructor;
    try { new v69(a68, -418967591n); } catch (e) {}
    a68 == a68;
    a67 !== a67;
    this.g = a68;
}
const v74 = new Uint8Array(0);
const v77 = new Uint8Array(4096);
const v82 = [4096];
const o83 = {
    "arguments": v82,
    "type": "function",
};
const v84 = new Uint8Array(255);
let v85;
try { v85 = v77(); } catch (e) {}
try { v85(v74, v85, v56); } catch (e) {}
C16[v84];
let v91;
try { v91 = v57.m(0, v74); } catch (e) {}
const o92 = {
};
try {
    o92.h = v91;
} catch(e93) {
}
function f95() {
    return 3906;
}
["P61J","P61J","P61J","P61J","P61J"];
try {
    const o98 = {
    };
    o98.h = v91;
    o98.d = 512;
} catch(e99) {
}
try {
    const o100 = {
    };
    o100.h = v91;
    o100.d = 512;
    o100.e = v74;
} catch(e101) {
}
try {
    const o102 = {
    };
    o102.h = v91;
    o102.d = 512;
    o102.e = 255;
} catch(e103) {
}
