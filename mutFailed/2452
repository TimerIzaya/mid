function f0() {
}
class C1 extends f0 {
    constructor() {
        let v2 = this;
        super();
        v2 /= v2[f0];
    }
    m() {
        let v5;
        try { v5 = this.setUint16(); } catch (e) {}
        v5.__proto__;
        Symbol[8];
        new Uint16Array(11);
        new Uint32Array(257);
        new Uint8ClampedArray(4);
        const v18 = Symbol.iterator;
        const o30 = {
            [v18]() {
                let v20 = 10;
                this[this] = C1;
                try {
                    this.fuck(Uint16Array, /^xxx$/vdiy);
                } catch(e23) {
                }
                const o29 = {
                    next() {
                        v20--;
                        const v27 = v20 == 0;
                        const o28 = {
                            "done": v27,
                            "value": v20,
                        };
                        return o28;
                    },
                };
                return o29;
            },
        };
        return o30;
    }
}
const v31 = new C1();
new C1();
new C1();
const v34 = [-31969,373768610,9,9007199254740990,536870888];
[-1,2147483647,-9223372036854775808,64,7,-14,-5];
[-10613,53041,7,666003747,1510016851];
function f37() {
    return v31;
}
function f41() {
    return "-65537";
}
function f42() {
    return v34;
}
const v47 = ("async").toLocaleUpperCase;
try { v47(); } catch (e) {}
