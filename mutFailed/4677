[1.1824049414707454e+308,-1.0,1.0722015900992954,-9.035047092976561e+307,-4.0,3.2291443765970502,1000.0];
const v1 = [-1.1449175094383683,-1000000000.0,-924.6598648989936,2.2250738585072014e-308,2.0,2.220446049250313e-16,-717329.3397111816,1000000000.0,-4.0];
const v2 = v1.constructor;
try { new v2(); } catch (e) {}
const v6 = new v1("Bl4");
const v8 = new Int32Array();
v8.__proto__ = v6;
[-204.8157224947331,5.0,-5.0];
const v14 = new BigInt64Array(3995);
const v15 = new BigInt64Array();
v14.indexOf(v15);
new Uint32Array(307);
new Int32Array(89);
new Int32Array(1);
[-1.7976931348623157e+308,2.220446049250313e-16,-5.0,993.0761791536604,-5.0,395.1056348158738,1.0,596229.368058309,1000.0,-658.8236941263567];
[3.0,0.48036152917585406];
[1000000000.0,-843.51109497585,5.728431794698597,2.220446049250313e-16,2.0];
for (let v28 = 0; v28 < 25; v28++) {
    function f30() {
        return f30;
    }
    const v31 = [155533.8602852358,2.0];
    function F33() {
        if (!new.target) { throw 'must be called with new'; }
        for (const v38 of Array(19793)) {
            v31[658291203] = null;
            Math.g = Array;
            f30--;
        }
    }
    v28.match("p" + v28);
}
try {
    const v45 = new Uint32Array(307);
    v45[6] = 35.31700069890553;
    new Float64Array();
    Int8Array(Int8Array, Int8Array, Int8Array);
    const o50 = {
    };
    o50.c = o50;
    const o51 = {
    };
} catch(e52) {
    e52.stack;
}
