function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a5;
    } catch(e6) {
    }
}
function f7(a8, a9) {
    a8[3894] = 386132.12332109595;
    delete a8?.[a8 >>> a9];
    return F3;
}
f7(f7, -2.2250738585072014e-308);
const v17 = new F3(386132.12332109595);
const v18 = new F3(-184513.9248502017);
new F3(-2.2250738585072014e-308);
[0.0,1000000000000.0,2.0,349727.6256760496];
[4.0,1000000000000.0,510.28996706090015,0.11575388927224928,-8.715449961235331,0.7518099772838056];
[Infinity,-3.0,7.389780343270779,2.2250738585072014e-308,-6.071490405553397e+307];
class C27 {
    static {
        try { this(this, 3.866732047176795e+307, this, ...this); } catch (e) {}
    }
}
const v32 = C27.b;
try {
    v17.f = 386132.12332109595;
} catch(e33) {
}
const v36 = new Int8Array(-2.2250738585072014e-308);
try {
    v32.__proto__ = v18;
} catch(e39) {
}
v18 * 3.866732047176795e+307;
const v41 = new C27(3, 114, 3);
v41["keys"](v36, ...114, ..."keys");
Math.pow(-2.220446049250313e-16, 9906);
