class C3 {
    get g() {
        try {
            this.e = this;
        } catch(e5) {
        }
        return this;
    }
    n(a7, a8) {
        const o11 = {
            "maxByteLength": 113,
        };
        const v13 = new SharedArrayBuffer(113, o11);
        const v15 = new Uint32Array(v13);
        return v15;
    }
    constructor(a17) {
        const v18 = delete this?.g;
        try { C3.valueOf(C3, v18, v18, "e"); } catch (e) {}
    }
    10;
}
const v20 = new C3();
const v21 = new C3();
const v22 = new C3();
new BigUint64Array(3846);
new BigInt64Array(2);
new Int8Array(257);
class C33 {
    constructor(a35, a36) {
        function f37(a38) {
            const v40 = ([134133844,-339370636,65535,-4294967295,536870888,-324130953,536870912,268435439]).length;
            v40 >>> v40;
            return v20;
        }
        this.constructor = f37;
        this.constructor;
        try { new a35(); } catch (e) {}
        for (let i = 0; i < 10; i++) {
            a35.atan();
        }
    }
}
new C33(v22, C33);
const v50 = new BigUint64Array(10);
for (const v52 in v50) {
    new Float64Array(2147483647);
}
try {
    C33.e = v21;
} catch(e54) {
}
new Set();
