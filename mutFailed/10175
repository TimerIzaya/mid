class C4 {
    get d() {
        super[undefined] = "a";
        try {
            this.toString = C4;
        } catch(e7) {
        }
        const o8 = {
        };
        try {
            o8.c = C4;
        } catch(e9) {
        }
        try {
            const o10 = {
            };
            o10.c = C4;
            o10.d = this;
        } catch(e11) {
        }
        try {
            const o12 = {
            };
            o12.c = C4;
            o12.d = this;
            o12.f = undefined;
        } catch(e13) {
        }
        try {
            const o14 = {
            };
            o14.c = C4;
            o14.d = this;
            o14.a = "p";
        } catch(e15) {
        }
        return "p";
    }
    static set c(a19) {
        const t39 = this[10];
        t39["a"] = "getMinutes";
        [-1940559400,65535,-256,-43889,6,859960477,8867,184274224,55036];
        [-8,1754912798,257,536870889];
        [-4294967296,129,-1131355544,10000,4294967295,9,-9223372036854775808,129,908898981,7];
    }
}
const v25 = new C4();
const v26 = v25?.constructor;
try { new v26(); } catch (e) {}
const v28 = new C4();
const v29 = new C4();
const v30 = v29?.constructor;
try { new v30(); } catch (e) {}
for (const v35 in v25) {
    "a" >> "p";
}
try {
    v28.fuck("getMinutes", "a");
} catch(e38) {
    e38.message;
}
const v42 = new Int16Array(1024);
v42.g = v42;
7 >> 7;
const v46 = new BigInt64Array(7);
try { v46.slice(undefined, v46); } catch (e) {}
const v50 = new BigInt64Array(4095);
v50[2474];
10000n ^ 10000n;
function f54(a55, a56) {
    try { a56(v28, a56); } catch (e) {}
    const o58 = {
        [10000n]: a56,
    };
    o58[10000] = o58;
    return o58;
}
f54(10000n, f54)[10000];
const t77 = "getMinutes";
const v62 = new t77();
try { Uint8ClampedArray.apply(-128, 1024); } catch (e) {}
const v66 = new Uint8ClampedArray(12);
let {"byteLength":v67,...v68} = v66;
v67--;
v62.valueOf = f54;
