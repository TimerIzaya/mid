const v0 = [];
const v1 = [-745115192,536870912,4,129,1364,-129771852,1073741825];
const v2 = [-20528];
const v3 = [2,-3];
function f4() {
    return v0;
}
[5,-1,4,9007199254740992,65537,-1,536870912];
const v6 = [-858931124,-25915,2147483647,127,4,536870887,3];
const v7 = [-60109,-811436913,2147483647];
class C8 {
    [v7] = v2;
    5;
    toString(a10, a11) {
        try { v3.toReversed(); } catch (e) {}
        const o13 = {
        };
        try {
            o13.unicode = a10;
        } catch(e14) {
        }
        try {
            const o15 = {
            };
            o15.b = a10;
            o15.e = a11;
        } catch(e16) {
        }
        try {
            const o17 = {
            };
            o17.b = a10;
            o17.e = a11;
            o17.f = a11;
        } catch(e18) {
        }
        try {
            const o19 = {
            };
            o19.b = a10;
            o19.d = a11;
            o19.g = v1;
        } catch(e20) {
        }
        return a10;
    }
}
const v21 = new C8();
new C8();
const v23 = new C8();
function f24() {
    return v1;
}
function F25(a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = v21;
    } catch(e29) {
    }
    try {
        this.d = a28;
    } catch(e30) {
    }
    try {
        this.b = v0;
    } catch(e31) {
    }
}
new F25(v6, v0);
new F25(v6, v6);
const v34 = new F25(v0, v23);
("by").normalize(v34, v23, v0);
