function f0() {
}
const v4 = [-1632739288];
const v5 = [-9223372036854775808,164317558,708460801,5];
const v6 = [-2424,2008429348,-9007199254740992,-1024,-1899,21898];
let v12 = 2147483649n;
v4 | 16n;
v5.length -= 65536;
const v16 = new f0();
v16 | v6;
f0();
const v20 = [65537,268435441,63298,-5,1235122603];
const v21 = [128,215394418];
let v22;
try { v22 = v21.entries(); } catch (e) {}
const v23 = [-2,-4294967296,4294967297];
function F24(a26, a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    const v30 = this.constructor;
    try { v30(1024, 1024, v20); } catch (e) {}
}
const v32 = new F24(-714582153, F24, -714582153, v21);
let v33 = v32.length;
const v34 = new F24(9, v32, 9, v23);
try { new v22(-35376, 9, v32, v21, v6); } catch (e) {}
v21.__proto__;
v33 -= -5n;
v23 << -5n;
const v40 = -35376 << 6;
Math.exp(-35376);
6 ^ ((v40 | v40) >> 6);
v34.b = v34;
const v45 = new F24(1024, v34, v23, v23);
let v53;
try { v53 = ("string").trimStart(); } catch (e) {}
let v54 = -1;
-35417 - -35417;
class C57 {
}
function f58(a59, a60, a61, a62) {
    return v45;
}
f58(-9007199254740991, v53);
v22[v34] ||= ([1024,19026,1125846339]).length;
v12 = 5n;
function f68() {
    return -714582153;
}
const o69 = {
};
try {
    o69.g = v33;
} catch(e70) {
}
try {
    const o71 = {
    };
    o71.g = v33;
    o71.a = -5n;
} catch(e72) {
}
try {
    const o73 = {
    };
    o73.g = v33;
    o73.a = -5n;
    o73.d = v20;
} catch(e74) {
}
try {
    const o75 = {
    };
    o75.g = v33;
    o75.a = -5n;
    o75.d = v5;
} catch(e76) {
}
const o79 = {
    set b(a78) {
        v54 <<= v54;
    },
};
