class C3 {
    constructor(a5) {
        Reflect.construct(e, [e], e);
    }
    a = "o";
    static get e() {
        class C11 {
            #a = "o";
            [this] = "9223372036854775807";
        }
        new C11();
        const v13 = new C11();
        new C11();
        return v13;
    }
}
const v15 = new C3("e");
new C3("9223372036854775807");
new C3("9223372036854775807");
if (2104178749) {
    v15.a /= 2104178749;
} else {
    ("e")[-2];
}
new Uint8Array(127);
let v26;
try {
const t0 = "o";
v26 = t0();
} catch (e) {}
const o27 = {
};
new Proxy(C3, o27);
new Uint32Array(1024);
new Int32Array(512);
const v35 = [1,4294967296,-9007199254740992,4,-4294967295,-9,-4294967297,255,536870888,255];
const v36 = [v35,v35,v35];
try {
    v36.toString = v26;
} catch(e39) {
}
new Int16Array(4096);
new Uint16Array(754);
new Uint16Array(13);
Array(1102693041).slice(v36, v35);
