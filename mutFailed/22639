/a+b|c/usy;
const v1 = /(?:a+)?/gvdms;
const v2 = /a[bc]da[^a]/i;
function f3() {
    return v2;
}
const v4 = [8,-4096,60443,-9007199254740992,9007199254740991,4294967296];
const v5 = [16,4294967297,11815,-354625719,-9007199254740990];
[61027,-4,10000,-8311];
new Set();
const v9 = [4294967297,-1648241970,9,3,-2,0,-4294967296,10];
const v10 = /QK/gvdimy;
with (v9) {
    v10.__proto__ = length;
    Uint8Array.d = Uint8Array;
    Uint8Array.prototype = Uint8Array;
    class C13 {
    }
}
const v16 = new Array(1257, v1);
new Date();
class C23 {
}
class C24 {
}
function f25() {
}
const v26 = f25();
function f27(a28, a29) {
    const o31 = {
        get d() {
        },
    };
    return v26;
}
function f32(a33, a34, a35, a36) {
    function f37() {
        const o39 = {
        };
        new SharedArrayBuffer(-118.8024069268339);
        function f43() {
            return f43;
        }
        function f45(a46, a47, a48, a49) {
            a49 % a49;
            const v51 = a49 >= a49;
            for (let v52 = 0; v52 < 5; v52++) {
            }
            return v51;
        }
        f45(-9, -9, f43, -65536n);
        o39.g = 1257;
        const o59 = {
            [-4294967297n](a55, a56, a57, a58) {
            },
        };
        return -261.99102172609366;
    }
    const o62 = {
        "maxByteLength": 3145,
    };
    if ("log1p") {
    }
    const v66 = ("w8lJ").localeCompare(f27, "w8lJ");
    const v67 = new RangeError(128, o62);
    new Float32Array(v67);
    f37();
    const o79 = {
        ["536870887"]: -1000000000000.0,
        "b": 1.0,
        "a": v4,
        [1.0]: v4,
        268435441: -4294967297n,
        __proto__: v5,
        /*
        __proto__: 1024,
        */
        "call": f3,
        "h": 1.0,
        ...v4,
        ...Date,
        "d": "536870887",
        [a35]: v16,
        ...a35,
        [-1000000000000.0]: 1.0,
        "d": "536870887",
        2321852491: "w8lJ",
        ...v2,
        "a": 1.0,
        /*
        __proto__: v66,
        */
        ["log1p"](a75, a76, a77) {
            super[3145];
        },
    };
    return a33;
}
for (let v80 = 0; v80 < 10; v80++) {
    f32(f32, v80, v80, v80, C24, Date);
}
%OptimizeFunctionOnNextCall(0);
f32();
