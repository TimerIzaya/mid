function f3(a4) {
    const o17 = {
        "e": a4,
        "f": a4,
        set a(a6) {
            function F7(a9) {
                if (!new.target) { throw 'must be called with new'; }
            }
            class C10 {
                set h(a12) {
                }
                b;
            }
            -1e-15 in this;
            this[-793.1767032643637] = -1e-15;
            const v14 = super[a4];
            return 2.2250738585072014e-308;
            try {
                a4.a = a6;
            } catch(e15) {
            }
            function f16() {
                return v14;
            }
        },
        ...a4,
        "a": -1e-15,
        10000: 2.2250738585072014e-308,
    };
    return o17;
}
f3(-793.1767032643637);
const v19 = f3(-1e-15);
f3(2.2250738585072014e-308);
function f21() {
    return v19;
}
([NaN,3.0])["concat"](-483497369);
const v28 = +2;
([v28,v28,v28,v28]).push(v28);
const v34 = new BigInt64Array();
const o35 = {
};
f21(o35);
class C37 {
}
const v38 = new C37();
const v39 = [1000000.0,0.218433446981681,-5.0,-919787.2036172998,872389.6270716691];
const v41 = [v38,v38,v38,v38,v38];
Reflect.apply(v39.pop, v38, v41);
let v44 = -9223372036854775808;
v34.copyWithin(v44);
const t51 = [-0.23549034038133065];
t51.then = Date;
new Float64Array(-958084556);
v44--;
function f54() {
    return f54;
}
function f55() {
    const v56 = Array();
    v56[2358] = f54;
    for (const v57 of v56) {
        v57 - v57;
    }
    return v56;
}
f55();
f55();
const v63 = new Uint8Array();
new Int8Array(129);
const t71 = "9007199254740992";
t71["255"] &= 7;
const t73 = [65535,9223372036854775807,2101773358,536870888,536870912,7];
t73.__proto__ = v63;
