let v0 = -5.0;
function f6(a7, a8) {
    const o23 = {
        p(a10, a11, a12, a13) {
            a7--;
            a8 /= a13;
            -5.0 + -5.0;
            %PrepareFunctionForOptimization(f6);
            function f17() {
                return 3.0;
            }
            const o21 = {
                "execution": "valueOf",
                "type": "major",
            };
            gc(o21);
            return 284926.178750779;
        },
    };
    const v28 = ("-1723624938").slice(9, "g").normalize();
    function* f30(a31, a32, a33, a34) {
        'use strict';
        a34 !== 9 ? a34 : 9;
        yield a32;
        return 9;
    }
    f30("-1723624938", v28, 9, -13);
    class C40 {
        constructor(a42, a43) {
            a43.sup(v28, "-1723624938");
            f6.toLocaleLowerCase();
        }
    }
    new C40(9, "maxByteLength");
    v0 = -5.0;
    v28 instanceof C40;
    new Uint8Array(0);
    new Float32Array(385);
    const v56 = new Float64Array(76);
    return v56;
}
f6(284926.178750779, 2067748660);
try {
    new f6(16n, 2076502333);
} catch(e61) {
}
const v64 = new Uint8ClampedArray();
v64["-9223372036854775808"] = 10;
f6(v0, -13);
f6(284926.178750779, v0);
class C69 extends SharedArrayBuffer {
}
function f70() {
    const o72 = {
        get b() {
            return SharedArrayBuffer;
        },
    };
    return o72;
}
class C73 extends f70 {
    constructor(a75) {
        super();
        for (let v76 = 0; v76 < 25; v76++) {
            this["p" + v76] = v76;
        }
    }
}
new C69();
