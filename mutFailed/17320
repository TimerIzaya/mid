new Date();
new BigInt64Array(157);
new EvalError(5);
new Int16Array(-955046746);
function f17() {
}
function f18() {
    return f17;
}
const v19 = [-9223372036854775808,-8,268435456,536870887,6,-2047336449,42720,-5,-13054,268435439];
const v20 = [-2041104173];
const v21 = [7,-9223372036854775808,65536,503852115];
try { v21.toSpliced(f17, f17); } catch (e) {}
function f23(a24, a25) {
    const o34 = {
        "e": a24,
        "b": v21,
        "g": f17,
        set h(a27) {
            [-8303,-9007199254740992,2623,65536,512,-9223372036854775807,1551336476,4];
            [268435439,6,1430293674,3,-959826342];
            [-5,-551913701,10,1621200107,-7,-8,-126771044];
        },
    };
    return o34;
}
const v35 = f23(v19, v19);
try { v35.g(); } catch (e) {}
f23(v21, v21);
const v38 = f23(v21, v20);
try { v38.g(); } catch (e) {}
class C40 extends f23 {
    get g() {
        f18();
        return "-19836";
    }
    static #a;
    static c = v35;
    static d;
    static #e;
}
C40.prototype = C40;
C40.arguments;
const v47 = new C40();
v47.b = v47;
const v48 = new C40();
v48.e = v48;
const v49 = v48.e;
try { v49.reduce(v49); } catch (e) {}
new C40();
function f52() {
    return f52;
}
("M")[0];
10n > 10n;
10n * 10n;
for (let v58 = 0; v58 < 25; v58++) {
    const v60 = "p" + v58;
    let v61;
    try { v61 = v60.blink(); } catch (e) {}
    try { v61.substring(f52, f52); } catch (e) {}
    const t61 = "M";
    t61[v60] = v58;
}
const v63 = [63769,-1150220559,-444945961,-40445,-10,9407,4294967296,-274081471,-1073741824,4096];
try { v63.reduce(v47); } catch (e) {}
Object.defineProperty(v63, 10n, { get: f52, set: f52 });
