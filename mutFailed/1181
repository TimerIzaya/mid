const v0 = [-1000000.0];
const v1 = [-2.220446049250313e-16,2.0,0.9092444017988345,-784463.7850998319,2.444597625267539,8.620671860159334,-3.0,2.561367715602007e+307];
const v2 = [1000000000.0,-2.220446049250313e-16,-1000.0];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(v0); } catch (e) {}
    try { a5.copyWithin(v1, v1); } catch (e) {}
    try {
        v0.b = a5;
    } catch(e8) {
    }
    try {
        this.f = a5;
    } catch(e9) {
    }
    try {
        this.g = a5;
    } catch(e10) {
    }
}
const v11 = new F3(v2);
new F3(v2);
new v0(v1);
let v16;
try { v16 = ("object").charCodeAt(v11); } catch (e) {}
Uint8ClampedArray.length;
const v24 = new Uint8ClampedArray(1907);
66 ^ v24;
512 - v16;
v24[7] = 43464885;
const v31 = v24.fill(512, 66);
try { v31.entries(); } catch (e) {}
v24[-1] = 10;
