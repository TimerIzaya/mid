const v4 = -2147483647n ^ -2147483647n;
const v6 = new Date();
v6.getUTCDay();
function f8() {
    return f8;
}
const o10 = {
    [f8]() {
    },
};
[o10];
65536n + 65536n;
const o17 = {
    "maxByteLength": 3145,
};
const v19 = new SharedArrayBuffer(128, o17);
new Float32Array(v19);
gc();
const o25 = {
    2321852491: "object",
};
[1e-15,-1000000000.0];
const v28 = new Uint8ClampedArray();
v28.fill(Uint16Array, 127, 1073741824);
[9.420464562468744e+307,-0.0];
([1.7976931348623157e+308])[0];
const v36 = /xyz?/gvdis;
v36.ignoreCase = v36;
/a{1,2}?/gvdi;
/k(?:a+){0,0}/udims;
(2136873598).constructor;
for (let v42 = 0; v42 < 5; v42++) {
    function f43() {
        function f45(a46, a47, a48, a49) {
            const o53 = {
                n(a51, a52) {
                    return v42;
                },
            };
            o53.n(a49, o53, o53, a46, v42);
            return v42;
        }
        for (let v55 = 0; v55 < 25; v55++) {
            f45(v55, f43, eval, v55);
        }
        eval();
        return f43;
    }
    f43();
    %OptimizeFunctionOnNextCall(f43);
}
/xyz?T9E\c/gdmy;
function f60(a61, a62, a63, a64) {
    class C66 extends Date {
    }
    const v67 = new C66();
    v67.getDay();
    return f60;
}
for (let v69 = 0; v69 < 10; v69++) {
    f60(v69, v69, v69, v69);
}
const v74 = new Int16Array(3145);
new Float32Array(v74);
const v77 = [];
const v78 = [v77,v77,v77];
Uint8Array.h = Uint8Array;
const v81 = new Uint8Array();
("by").normalize();
URIError();
const v87 = 256 < 256;
function f88(a89) {
    return v87;
}
v81.constructor;
const v92 = new Date();
const v93 = [-1000.0,2.0,6.498411136794167e+307,1.5301115680028905e+308,-1.0240581174585665e+308,-73553.73579822388,-474.34134439650745,2.300981674378132,-816063.8647013834,-1.2620665326245469e+308];
const v94 = [];
function f95(a96, a97) {
    const o110 = {
        129: v78,
        __proto__: v93,
        o(a99, a100, a101, a102) {
            [a96];
            Reflect.apply(a100.reduce, a97);
            return a97;
        },
        "e": v4,
        [v78]: a96,
        ...v28,
        n(a108, a109) {
            return v87;
        },
        "f": v94,
        "e": v92,
        ...a97,
    };
    return o110;
}
f95();
function f113() {
}
f113();
new Int32Array([64,-6,-60026,-9]);
class C119 {
}
function f122(a123) {
    const o154 = {
        valueOf(a125, a126) {
            function F127(a129, a130, a131, a132) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.f = a131;
                } catch(e133) {
                }
                try {
                    this.h = -9223372036854775807;
                } catch(e134) {
                }
            }
            const v135 = new F127(a125, a123, a123, a126);
            new F127(v135, -12, -9223372036854775807, -9223372036854775807);
            function f138(a139) {
                return a139;
            }
            class C140 {
            }
            const v141 = new C140();
            const v142 = [C140,C140];
            const v143 = [v141,v142,v142];
            const v144 = [2.2250738585072014e-308];
            function F145(a147, a148, a149) {
                if (!new.target) { throw 'must be called with new'; }
                a149.groupToMap(f138);
            }
            const v151 = new F145(2.2250738585072014e-308, F145, v143);
            new F145(v142, v151, v144);
            new F127(-12, -12, v135, v135);
            return -536870912;
        },
    };
    return o154;
}
f122(-9223372036854775807);
4294967297n / 800562525;
Int8Array.of().join(Array);
const v165 = new BigInt64Array();
const v168 = new Uint16Array(256);
const v169 = v165[205];
function F170(a172, a173, a174, a175) {
    if (!new.target) { throw 'must be called with new'; }
    function f176(a177, a178) {
        Math.tanh("1");
    }
    f176();
    %OptimizeFunctionOnNextCall(f176);
    -a174;
    for (let v184 of v168) {
        v184++;
        v169?.h;
    }
}
