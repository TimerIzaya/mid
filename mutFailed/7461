function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 1493059446;
    } catch(e3) {
    }
    const v5 = ("p").strike("p", "p", "p", "p");
    v5.search(v5);
    const t7 = [-2.220446049250313e-16,0.4010936999061169];
    t7.length = -2;
    try {
        this.g = 1493059446;
    } catch(e9) {
    }
}
const v10 = new F0();
const v11 = new F0();
const v12 = new F0();
class C13 {
    static [F0] = F0;
    #e = v10;
    static h;
    #valueOf(a15, a16) {
        try { a15.valueOf(this, v11); } catch (e) {}
        a15.g;
        v10[a15] = v12;
        new Int16Array(633);
        new BigInt64Array(7);
        new Float32Array(5);
        return a16;
    }
}
new C13();
new C13();
new C13();
/{z}Hv/my;
/(ab)\1?/gvsy;
/(x)(x)(x)\2?/gvms;
class C36 {
}
const v37 = new C36();
const v38 = new C36();
const v39 = new C36();
function f40(a41, a42) {
    const o48 = {
        "h": v37,
        [v38](a44, a45, a46) {
            super[-9223372036854775807];
        },
        [a42]: v37,
        __proto__: C36,
        "c": 9,
    };
    return o48;
}
%PrepareFunctionForOptimization(f40);
f40(Uint16Array, v39);
%OptimizeFunctionOnNextCall(f40);
f40();
