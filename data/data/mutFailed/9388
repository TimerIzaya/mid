class C3 {
    set f(a5) {
        ("8")[a5];
        const o9 = {
            "maxByteLength": 129,
        };
        const v11 = new SharedArrayBuffer(6, o9);
        const t7 = "8";
        new t7(v11);
    }
    90;
    static #c;
}
const v14 = new C3();
const v15 = new C3();
const v16 = new C3();
const v18 = [v15,[v14,v15,v16,v14]];
[v16];
new v18();
function f29(a30, a31, a32, a33) {
    arguments[4] = arguments;
    return a32;
}
const v35 = new gc();
const v36 = [gc,gc,gc,v35];
[v36,gc];
new Int32Array(56885);
Math.expm1(Math);
const v43 = [gc,v36,v36];
/an/gudimsy;
/xa\b!/gdis;
const v46 = /a+?z*/gm;
const v47 = [-3.0,0.0,8.692473731259366,-1e-15,0.598869256055706,-2.0,-2.220446049250313e-16,-Infinity,-9.722804109631653];
[-1.257587252130051,-93063.25159892451,2.0,-256299.38870889205,-Infinity,-1000.0,-7.521391161311806,1e-15];
[2.220446049250313e-16,-1000000000000.0,1000.0];
class C52 extends /nupa\Sc/vms.constructor {
}
function F54(a56, a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a57;
    for (let v59 = 0; v59 < 5; v59++) {
    }
    this.g = 4;
}
function f60() {
    return v47;
}
class C61 {
    [v46] = v36;
    constructor(a63, a64) {
        const v65 = f60();
        %PrepareFunctionForOptimization(f60);
        v65();
        f60();
        %OptimizeFunctionOnNextCall(f60);
        f60();
    }
    #b;
    [f60] = v43;
    1000;
    static [v46];
    #a;
}
for (let v69 = 0; v69 < 5; v69++) {
    function f70() {
        for (let i73 = 0, i74 = 10; i73 < i74;) {
        }
    }
}
