1561631193 & 1561631193;
const v7 = [Infinity,367.67131652258445,-320.4553182768153,-913063.029589452,2.2250738585072014e-308,NaN];
[1000.0,2.220446049250313e-16,591.9131248333522,-2.0,-652780.0412721089,-1000000000.0,-46089.21404781635,-1000000.0,5.0];
const v9 = [1.5246036641290877e+308,-720.6056761488642,102538.57742142188,-1.3241822122327488e+308,1000.0,1e-15,-6.996679748601169,0.0,7.398303642041299,-9.360848523538309];
class C10 {
}
try { new v7(); } catch (e) {}
-9;
new Int8Array(9);
const v16 = [1351045055,979027085];
const v17 = [-9367];
const v18 = v17?.reduceRight;
let v19;
try { v19 = new v18(v9); } catch (e) {}
const v20 = [-1,9007199254740992,-17091,11,255,-128];
v20.g = v20;
class C21 {
    toString(a23) {
        const v24 = this.constructor;
        v24.e = v24;
        new v24();
        const v26 = this.__lookupSetter__;
        try { new v26(); } catch (e) {}
        super[this];
    }
}
const v29 = new C21();
const v30 = [C21,C21,C21];
try { v30.sort(268435439); } catch (e) {}
try {
    v30.length = v29;
} catch(e32) {
    e32.message = e32;
}
function f33(a34, a35) {
    a34 | a34;
    a35 - a35;
    const o41 = {
        7: a34,
        "g": a34,
        "f": a35,
        __proto__: v19,
        get h() {
            super.f;
            function f40() {
                return 1821956393;
            }
            return 1821956393;
        },
        [a34]: a35,
        "a": v16,
        ...v17,
        [v7]: a35,
    };
    return o41;
}
f33(-34908, 1791949273);
f33(268435439, 1561631193)[268435439];
const v45 = f33(1791949273, -34908);
const v47 = new Float32Array();
for (let v48 = 0; v48 < 5; v48++) {
    v47[836499325] = ~v48;
}
v45[1791949273];
class C51 {
}
C51.name = C51;
const v52 = new C51();
const v53 = v52?.constructor;
try { new v53(); } catch (e) {}
const v55 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v58 = new Uint32Array();
const v60 = [601759695];
v60[0] = v60;
const v61 = [1073741824,1073741823,1376142744,1073741825];
v61[3] = v61;
function f63(a64, a65, a66, a67) {
    const v68 = a64 | a64;
    try { a65.toLocaleString(); } catch (e) {}
    function f70() {
        const t80 = "Vre";
        t80[1] = "Vre";
        let v72 = -4294967295;
        v72++;
        Date();
        function F77(a79, a80, a81) {
            if (!new.target) { throw 'must be called with new'; }
            const v82 = this.constructor;
            try { new v82(); } catch (e) {}
        }
        class C84 extends F77 {
        }
        let v85;
        try { v85 = Math.expm1(Math); } catch (e) {}
        v85 - v85;
        const v87 = Math.expm1();
        const v88 = Math.tanh();
        Math.hypot(a66, Math);
        Float64Array.BYTES_PER_ELEMENT = Float64Array;
        b = v60;
        const v91 = v55.length;
        v91 & v91;
        try {
            v61.findLast();
        } catch(e94) {
            const v95 = e94?.constructor;
            class C97 {
                static #a = v68;
                [3n];
                static c = 3n;
            }
            new v18();
            try { new v95(Float64Array); } catch (e) {}
            e94.a = e94;
        }
        const v100 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        try { v100.sort(Date); } catch (e) {}
        const o111 = {
            [522675525n](a104, a105) {
            },
            "c": v60,
            [-1]: 2684,
            1073741824: v58,
            "maxByteLength": -268435456,
            __proto__: v58,
            9: v52,
            [v88]: v87,
            ...a65,
            "arguments": C10,
            [v55](a107, a108, a109, a110) {
            },
            "e": v72,
            "arguments": Float64Array,
            256: a67,
            4: "Vre",
            "c": v18,
        };
        return v72;
    }
    f70();
    eval(a65);
    %OptimizeFunctionOnNextCall(f70);
    return 2n;
}
for (let v115 = 0; v115 < 5; v115++) {
    v115 >>> v115;
    f63(v115, v60, v115, v115);
}
