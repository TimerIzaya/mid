[512];
const v1 = [1073741824,536870888,536870888,39519,-2052546475,3,1073741824];
const v2 = [8,24319,19282,-1024];
const v3 = [9007199254740990,35782,536870888];
try { v3.groupToMap(v3); } catch (e) {}
const v5 = [4294967297,-9223372036854775808,1233496133,1012156159,1458200020,4294967297,8,-65535,268435441];
try { v5.map(v5); } catch (e) {}
[-4,106022225,303168934,-61025,593060490,-36488,-10,268435440,-48141,-6];
const t7 = 11;
new t7();
v5[11];
const o13 = {
    "type": "function",
};
const v15 = new Int32Array(11);
const v20 = ([127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649]).toSpliced(-1148418937, -1148418937, 2.220446049250313e-16, 2.220446049250313e-16, "-4");
try { new BigUint64Array(BigUint64Array, v15, v1); } catch (e) {}
const o25 = {
    "type": "function",
};
~168;
new BigUint64Array(168);
const o33 = {
    o(a29) {
        const o31 = {
        };
        return gc(o31);
    },
};
-10;
new v20(10);
[5];
function f45(a46) {
    const o50 = {
        __proto__: 2,
        213: v2,
        ...a46,
        "g": 2,
        p(a48, a49) {
            return 2;
        },
    };
    return o50;
}
f45();
%OptimizeFunctionOnNextCall(f45);
BigUint64Array.BYTES_PER_ELEMENT = BigUint64Array;
const v53 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
try {
    v53.__proto__ = v53;
} catch(e54) {
}
const o60 = {
};
o60.c = o13;
o60[Uint32Array] -= -2147483649;
(-65535 << -65535) - (256 / -65535);
const t56 = [];
t56.length += 1.0;
function f68(a69, a70) {
    return a70;
}
+20572;
