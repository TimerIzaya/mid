48752008 ^ [0.015695594920846934,3.0216481590101694e+307,-8.755576606466871e+307,-1.124566099740765e+308,1.7976931348623157e+308,-4.0,-342.82337731609357];
const o4 = {
    "execution": "async",
};
const v5 = [0.9244930145034449,-5.0,4.000452593498441,0.14807235118135365,549.8566807674986,-Infinity,1000000000000.0,-453.0978079551187,-2.466272668285443,-2.2250738585072014e-308];
const v6 = [1000000000000.0,2.2250738585072014e-308,4.0,660.3691300559719,-4.098479920742348e+307,-2.220446049250313e-16,0.0];
new WeakSet();
new Int16Array(0);
new Float32Array(256);
new BigUint64Array(1467);
class C21 {
}
v5.b = -1052649622;
const v24 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
const v26 = ([Uint32Array,Uint32Array,Uint32Array,Uint32Array]).push();
try { v24.every(v26, v24); } catch (e) {}
const v28 = new C21();
const v29 = new C21();
const v30 = new C21();
function f31(a32, a33) {
    const o34 = {
        __proto__: a32,
    };
    return v28;
}
f31(v28);
const v36 = f31(v29);
const v38 = ("I").localeCompare();
-25283n >> (-25283n && -25283n);
f31(v30);
function f45() {
    const o46 = {
    };
    o46.f = o46;
    return o46;
}
%OptimizeFunctionOnNextCall(f45);
try { v36["n"](); } catch (e) {}
const v49 = -63523 >= 127;
try {
    BigInt(BigInt);
} catch(e52) {
}
v49 ? -63523 : 127;
v38.constructor;
try { BigInt64Array(BigInt64Array); } catch (e) {}
const v58 = new v6();
"1343140951" % !v58;
Math.asinh(-(-63523));
Math.acosh();
