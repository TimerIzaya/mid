const v1 = new Map();
function F2(a4, a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a5;
    } catch(e6) {
    }
    try {
        this.g = Map;
    } catch(e7) {
    }
    try {
        this.a = a4;
    } catch(e8) {
    }
}
const v9 = new F2(F2, v1);
const v10 = new F2(Map, v9);
new F2(v9, v10);
function f12() {
    return Map;
}
new Float32Array(127);
new Uint8ClampedArray(117);
new Int16Array(255);
const v32 = new Uint8ClampedArray(16);
Float32Array.f = Float32Array;
const v35 = new Float32Array(4);
v35.join(v32);
-173;
BigUint64Array.BYTES_PER_ELEMENT;
new BigUint64Array();
function F42(a44, a45, a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    const v48 = this?.constructor;
    try { new v48(); } catch (e) {}
    -7.981664924203587e+307 + a46;
    this.h = a45;
}
try { F42(); } catch (e) {}
new F42();
const v53 = new F42(v32, F42);
const v54 = new F42(BigUint64Array, v53, 16, -7.981664924203587e+307);
v54.d = v54;
const o55 = {
};
o55.c = o55;
-522.1393553916671 - -522.1393553916671;
class C59 {
    [o55] = -522.1393553916671;
    #a = 1.185961373472971e+308;
}
const v60 = new C59();
const v61 = v60?.constructor;
try { new v61(); } catch (e) {}
const v63 = o55.constructor;
v63.freeze();
const v66 = 1922 % 1922;
v66 == v66;
for (let v68 = 0; v68 < 25; v68++) {
    const v69 = v68 ^ v68;
    function f70() {
        return f70;
    }
    function f71(a72, a73, a74, a75) {
        try { new a74(); } catch (e) {}
        function f77() {
            return v66;
        }
        f77.h = f77;
        const v78 = f77.length;
        const v79 = ~v78;
        const v80 = -v78;
        v80 / v80;
        v79 | v78;
        const v84 = f70()?.constructor;
        v84.d = v84;
        let v85;
        try { v85 = v9(); } catch (e) {}
        let v86;
        try { v86 = v85.bind(); } catch (e) {}
        v86.bind();
        v85.e = v85;
        const v88 = v84 * a75;
        v88 >> v88;
        v69 - v88;
        const v91 = typeof f77;
        v91.italics();
        v91 === "n";
        v85(v63);
        const v97 = new Int8Array(C59, a75, a74);
        const v98 = v97.entries();
        let v99;
        try { v99 = v98.next(); } catch (e) {}
        v99.b = v99;
        const v100 = v98.next(1.185961373472971e+308, f70, o55, v99, v99);
        v100.b = v100;
        a73.f = 1922;
        [2.2250738585072014e-308,-4.1885418042617743e+307,1000000.0,4.0,-1000000.0,8.730641918439387e+307];
        return v68;
    }
    for (let v102 = 0; v102 < 5; v102++) {
        f71(v102, v63, v63, 1922);
    }
}
