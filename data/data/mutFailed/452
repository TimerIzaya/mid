const v0 = [1.201657431884033e+308,1.0,-1.0,-8.15992945488713,-0.0];
const v1 = [1.7890291999979342e+308,0.0];
const v2 = [-0.0,-502146.67904317635,6.416371690411309e+307,0.7911655394250215,1e-15];
class C7 {
    set e(a9) {
        this[v0] = v2;
        let v10;
        try { v10 = a9(a9, v2, v0, a9); } catch (e) {}
        for (const v11 in this) {
            v10[61] ^= a9;
            this[v11] = -268435456;
            const o12 = {
            };
            try {
                o12.c = -268435456;
            } catch(e13) {
            }
            try {
                const o14 = {
                };
                o14.c = -268435456;
                o14.d = false;
            } catch(e15) {
            }
            try {
                const o16 = {
                };
                o16.c = -268435456;
                o16.d = false;
                o16.h = v11;
            } catch(e17) {
            }
            try {
                const o18 = {
                };
                o18.c = -268435456;
                o18.d = false;
                o18.f = false;
            } catch(e19) {
            }
        }
    }
}
new C7();
new C7();
new v1();
function F23(a25, a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a25;
    } catch(e28) {
    }
    try {
        this.h = -268435456;
    } catch(e29) {
    }
    try {
        a26.a = a27;
    } catch(e30) {
    }
}
const v31 = new F23(false, 8, v0);
const v32 = new F23(8, v31, v2);
new F23(C7, v32, v2);
class C34 {
}
for (let v36 = 0; v36 < 5; v36++) {
    C34.f = -4n;
}
