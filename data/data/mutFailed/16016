const v2 = new BigInt64Array(84);
let v3 = 512;
v3--;
new Float32Array(v3);
const v9 = new BigUint64Array(9);
const v12 = new Uint8Array(BigInt64Array);
v12[425];
let v16;
try { v16 = new Int8Array(Int8Array, 84, 84); } catch (e) {}
new v16(v3);
new Uint8ClampedArray(256);
try { (84).findLastIndex(v9); } catch (e) {}
for (let v22 = 0; v22 < 5; v22++) {
    v22 - v22;
    const o24 = {
    };
    try { Reflect.defineProperty(o24, v2, v22); } catch (e) {}
}
