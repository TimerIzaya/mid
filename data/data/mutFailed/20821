const o4 = {
    "e": -256,
    "h": -1,
};
o4.e /= 9007199254740991;
try {
    o4.__proto__ = o4;
} catch(e8) {
}
const v11 = new Array(1070);
v11[1069] = v11;
const v13 = new Uint8ClampedArray(64);
v13.valueOf = Array;
new Uint8Array(4);
new Int8Array(4);
class C21 {
}
C21[Symbol.toPrimitive] = Array;
try {
    const o24 = {
    };
    o24.length = Array;
    new Int8Array(o24);
} catch(e26) {
}
const v27 = new C21();
const v28 = new C21();
const v29 = new C21();
function f30() {
}
function F31(a33, a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    let v32 = this;
    a34[Symbol.toPrimitive] = Array;
    a35[0] = 64;
    const v39 = delete a35?.[a35];
    v13[a34];
    try { v39(64, v11, a33); } catch (e) {}
    try {
        let v42;
        try { v42 = v11.findLastIndex(Array, a34); } catch (e) {}
        Math.atan(v13);
        v42 + -536870912;
        const v49 = (-1.0260449385651748e+308) ** -536870912;
        -536870912 - v13;
        Math.max(v49);
        Array(10000);
    } catch(e54) {
    }
    try { a35.valueOf(); } catch (e) {}
    a35?.[721284977];
    v32 = a34;
    a36.e = a36;
    const v60 = v32?.constructor;
    let v61;
    try { v61 = new v60(v28, a35, a33); } catch (e) {}
    a35[0];
    try { a36.toLocaleString(); } catch (e) {}
    try {
        v32.d = f30;
    } catch(e64) {
        C21[[11,-268435456,-2147483648,9007199254740991,-2,536870889,-51277,-9809]] = v61;
    }
}
new F31("m", C21, v29, C21);
new F31(v27, v28, "m", v27);
