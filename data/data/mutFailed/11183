const v0 = [172.54151533879417,-8.192552906955425e+307,946934.3485153867,1000.0,-9.189764504061834,-303.95814000269,-1e-15,-2.820724231029963e+307];
const v1 = [1000000000.0,-5.0];
let v2 = [2.220446049250313e-16,-361.378822420853,-1.7976931348623157e+308,-274427.5309776269,-8.172682740567755];
function f3(a4, a5) {
    const v7 = new Uint8ClampedArray(Uint8ClampedArray, Uint8ClampedArray);
    v7 & -2;
    function F10(a12, a13, a14, a15) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v16 = new F10(F10, F10, F10, F10);
    for (let v17 = 0; v17 < 25; v17++) {
        v16["p" + v17] = v17;
    }
    const o48 = {
        [a5]: f3,
        "h": f3,
        "b": -2,
        2: -2,
        "c": f3,
        set f(a21) {
            try { a4.map(a21, v1); } catch (e) {}
            const v23 = [2.412578955630149,2.7008822875610345,-2.220446049250313e-16,-1.0,-1000000000.0,-1.0,3.9002388983145044e+307,-Infinity,-1e-15,-4.2464820531165003e+307];
            const v24 = [-1e-15,4.0,362.9742459010415,1.488212487511409e+308,3.0];
            class C25 {
                constructor(a27, a28) {
                    super[v24] = v23;
                }
            }
            const v29 = new C25(v23, v24);
            function f30(a31) {
                return C25;
            }
            const v34 = [v29];
            const o35 = {
                "arguments": v34,
                "type": "function",
            };
            new Worker(f30, o35);
            function f38() {
            }
            class C39 extends f38 {
                constructor(a41, a42, a43) {
                    super();
                    for (let v44 = 0; v44 < 100; v44++) {
                        f38();
                    }
                }
            }
        },
        "g": a4,
        ...v1,
        ...v2,
        "a": v16,
        "f": a5,
        __proto__: a4,
        "e": Uint8ClampedArray,
        "d": v16,
        /*
        __proto__: a5,
        */
        8: v2,
    };
    return o48;
}
const v50 = new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
v50.copyWithin(1391012384, 2147483649, -1628561190);
Object.defineProperty(v1, "b", { writable: true, enumerable: true, get: f3, set: f3 });
({"e":f3,"length":v2,} = v2);
Object.defineProperty(v1, "e", { enumerable: true, value: v50 });
-1628561190 < -1628561190;
try {
    v50.byteLength = -1628561190;
} catch(e56) {
}
f3(v1, v1);
f3(v2, v2);
f3(v0, v0);
const o68 = {
};
const o69 = {
};
function F70(a72, a73, a74, a75) {
    if (!new.target) { throw 'must be called with new'; }
    for (let v79 = 0; v79 < 100; v79++) {
        const o83 = {
            968: undefined,
            [268435439n]: 2105444095n,
            __proto__: o69,
            "g": a74,
            "b": -4294967296n,
            "f": this,
            valueOf(a82) {
                return v79;
            },
        };
    }
}
class C86 {
}
class C87 {
    constructor(a89, a90, a91, a92) {
        try { a91(...a89, "e", a92, a92, ...C86); } catch (e) {}
        return arguments;
    }
}
class C95 extends Int8Array {
    [12];
}
new C95(1564);
function f98() {
    return WeakMap;
}
function f99() {
    return 12;
}
const v100 = [601759695];
const v101 = [1073741824,1073741823,1376142744,1073741825];
function f103(a104, a105, a106, a107) {
    f99();
    let v110;
    try { v110 = v101["find"](..."find", a107, ...v100, ...v101, ...522675525n); } catch (e) {}
    const v111 = v110 <= a106;
    v111 && v111;
}
for (let v113 = 0; v113 < 10; v113++) {
    f103();
}
