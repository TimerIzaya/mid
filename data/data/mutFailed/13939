[-536870912,3,-9223372036854775807,-1375123838,-268435456];
const v1 = [4,16];
const v2 = [-33577,4,3,-286032820,-62544,1024,-2147483649];
new Uint8Array(3);
const v8 = new BigInt64Array(4037);
new BigInt64Array(8);
v2[10] = v2;
v1.length >>= 3;
class C22 {
}
new C22();
const v24 = new C22();
for (let [i41, i42] = (() => {
        for (let v28 = 0; v28 < 2; v28++) {
            C22 > v28 ? C22 : v28;
        }
        try {
            for (let i32 = 0; i32 < 8; i32++) {
                v8.buffer %= 3;
            }
            v8.__proto__ = v8;
        } catch(e38) {
        }
        return [0, 10];
    })();
    (() => {
        function F43(a45, a46) {
            if (!new.target) { throw 'must be called with new'; }
            this.f = this;
            try {
                this.a = a46;
            } catch(e47) {
            }
            try {
                this.e = NaN;
            } catch(e48) {
            }
            try {
                this.f = 8;
            } catch(e49) {
            }
        }
        new F43(26328n, i42);
        new F43(26328n, i42);
        new F43(-65536n, i42);
        return i41 < i42;
    })();
    (() => {
        i41++;
        i42--;
        let v58;
        try { v58 = v2.reverse(); } catch (e) {}
        function f59() {
            return 3;
        }
        function f60(a61) {
            a61 - a61;
        }
        Object.defineProperty(v58, 1, { writable: true, configurable: true, enumerable: true, get: f59, set: f60 });
        try {
            v24.__proto__ = v58;
        } catch(e63) {
        }
    })()) {
    new C22();
}
