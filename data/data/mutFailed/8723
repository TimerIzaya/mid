class C3 {
    static {
        this[1024] = this;
        super.a = this;
        try {
            let v6;
            try { v6 = this.valueOf(-1.0, 2.930012512388718e+307, 2.930012512388718e+307); } catch (e) {}
            function f7() {
                return this;
            }
            Object.defineProperty(this, this, { configurable: true, enumerable: true, value: v6 });
            this.fuck(2.930012512388718e+307, -1.0, this, this);
        } catch(e9) {
        }
    }
    o(a11) {
        try { a11.toSorted(-1.0); } catch (e) {}
        let v13;
        try { v13 = this.n(a11, this, -1.0, a11); } catch (e) {}
        a11.d <<= v13;
        let v14;
        try { v14 = v13(a11, 0.5090418581761385); } catch (e) {}
        for (let v15 = 0; v15 < 32; v15++) {
            v14["p" + v15] = v15;
        }
        return 0.5090418581761385;
    }
}
let v18;
try { v18 = new C3(); } catch (e) {}
const v19 = new C3();
const v20 = v19?.constructor;
let v21;
try { v21 = new v20(); } catch (e) {}
const v22 = new C3(-2147483648, -2147483648);
const v23 = new C3();
let v24;
try { v24 = v23.o(v21); } catch (e) {}
class C25 {
    static [C25];
    static #g = -1.0;
    1135012813 = v24;
    #f = v23;
    static e;
    static #a = -1.0;
    16;
    set e(a27) {
        Reflect.construct(a27, [-2147483648,-1.0,v19,a27,0.5090418581761385], a27);
    }
    static {
        super.g = this;
        try {
            const v32 = [v19,this,-1.0,C3,v23,this];
            v22.o(v32, C3, v32);
        } catch(e34) {
            e34.message;
        }
    }
}
try { new C25(); } catch (e) {}
const v37 = new C25();
new C25();
new C25();
const v42 = new Uint16Array(1496);
try {
    v37.e = 1496;
} catch(e43) {
}
v18 &&= 0.5090418581761385;
v42.BYTES_PER_ELEMENT = v42;
BigUint64Array.e = BigUint64Array;
new BigUint64Array(11, v23);
new String(-2);
const v52 = new BigUint64Array(2, v42, -2147483648, -2147483648);
const o79 = {
    [v52](a56, a57, a58) {
        class C59 {
            static {
                for (let i64 = 0, i65 = 10;
                    (() => {
                        const v66 = i64 < i65;
                        class C67 extends Date {
                        }
                        return v66;
                    })();
                    i64++) {
                }
            }
        }
        for (let i74 = 0; i74 < 10;) {
        }
    },
};
try { ("8").codePointAt(BigUint64Array); } catch (e) {}
