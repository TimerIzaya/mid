class C3 {
    m(a5, a6) {
        this[-2] = this;
        let v8 = 1439055396;
        (-533291.2342937093 && "setMilliseconds") + v8;
        Math.expm1(Math.imul("setMilliseconds", -533291.2342937093));
        Math.fround(-1092070487);
        Math.floor(-1092070487);
        --v8;
        return a6;
    }
}
const v16 = new C3();
const v17 = new C3();
new v16();
new Int8Array(0);
new Int8Array(116);
new BigUint64Array(0);
const v29 = [,];
[,v29,v29];
const v31 = [,v29];
v31[0] = v17;
class C32 {
    [v31] = undefined;
}
new C32();
new C32();
const v35 = [13,-3,1073741824,4294967295,-910142687];
[692069130,-8,-65208,65536,-48837,1766141532,256,-65537,32577,-24320];
const o39 = {
    "maxByteLength": 1073741825,
};
const v41 = new ArrayBuffer(512, 512);
new Int16Array(v41);
v41[v29] = v35;
const v0 = [];
const v3 = new Int32Array(249);
const v6 = new Uint8Array(v0);
const v9 = new Uint8Array(2);
class C10 {
    9 = v0;
    toString(a12, a13) {
        try {
            v3.valueOf = v6;
        } catch(e14) {
        }
        try { Uint8Array(...v6, ...v9, this, ...v6, a13); } catch (e) {}
        delete v9[2];
        try {
            super[v6] = this;
        } catch(e17) {
        }
        return v0;
    }
}
new C10();
const t21 = 1;
new t21();
const v20 = new C10();
class C23 {
    constructor(a25, a26) {
        const v27 = this?.constructor;
        try { new v27(a25, a25); } catch (e) {}
        a25 | a25;
        a26.name;
        const v31 = super.d;
        a25?.[a26];
        try {
            a25[6] = v31;
        } catch(e33) {
            e33.b = e33;
        }
    }
    #n(a35, a36) {
    }
}
const v37 = new C23(-4096, C23);
v37.length = v37;
const v38 = new v20(1000.0, v37);
const v39 = new C23(1, v38);
function F40(a42, a43, a44, a45) {
    if (!new.target) { throw 'must be called with new'; }
    const t47 = a45.constructor;
    new t47(a42, v39);
}
const v48 = new F40(v39, C23, v38, v38);
const v49 = new C10(v48, v38, v48, v38);
new F40(v39, v38, v49, v37);
