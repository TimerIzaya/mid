class C3 {
    get g() {
        try {
            this.d = 0.5795939983606481;
        } catch(e8) {
        }
        return 18239;
    }
    [0.5795939983606481] = 18239;
    ["isFinite"] = 0.5795939983606481;
    #b;
}
let v9;
try { v9 = new C3(); } catch (e) {}
const v10 = new C3();
v10.e = v10;
const v11 = new C3();
const v12 = new C3();
class C13 extends C3 {
    [0.5795939983606481];
    3 = v11;
    d;
    p(a15, a16) {
        const o17 = {
            __proto__: a15,
            [0.5795939983606481]: 18239,
        };
        v12[a16] = this;
        super[C3] = C13;
        return a15;
    }
    #c;
}
const v18 = C13.name;
const v19 = new C13();
new C13();
const v21 = new v19();
try { ("undefined").toWellFormed(); } catch (e) {}
let v31;
try { v31 = new Int16Array(C13, v19, C13); } catch (e) {}
const v32 = new Int16Array(127);
v9[60] = v32;
let v33 = 257;
v33++;
new Uint32Array(v33);
const v39 = new Float64Array(127);
class C40 {
    static b = Int16Array;
    5;
    f;
    #e = v33;
    static 2;
    static #p(a42, a43) {
        try {
            v18.#e;
        } catch(e45) {
        }
        v21.b;
        %VerifyType(a43);
        return v39;
    }
}
new C40();
new C40();
const v49 = new C40();
function f53() {
    function f55(a56) {
        const v57 = [v49,a56,a56,C40];
        [a56,this,this,this,Float64Array];
        [v33,v57];
    }
    this.onmessage = f55;
    delete v31[7];
    try {
        class C61 {
        }
        const v62 = new C61();
        const v63 = [5];
        const v65 = [];
        Reflect.apply(v63.fill, v62, v65);
        this.valueOf = f55;
    } catch(e68) {
    }
}
Worker.g = Worker;
const v71 = [];
const o72 = {
    "arguments": v71,
    "type": "function",
};
o72.b = o72;
new Worker(f53, o72);
