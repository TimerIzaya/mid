const v0 = [];
class C1 {
    static f;
    static #h = v0;
    c;
    static #g = v0;
    get a() {
        try { this(this, this, v0, this); } catch (e) {}
        [-1061904058,-9223372036854775807,-40465,-9007199254740991,-2147483648,-54003,2147483648,-1073741824,-1520557966,9007199254740990];
        [2,6,-2,4,-9223372036854775808,-14,23202];
        [6,4,443742869,-21841,-310683044,-536870912,-1024];
        return new.target;
    }
}
new C1();
const v9 = new C1();
new C1();
new Map(Map, v9, Map);
class C19 {
}
const v20 = new C19();
const v21 = new C19();
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    function f26(a27, a28) {
        class C29 {
        }
        const v30 = new C29();
        return v30;
        return a27;
    }
    this.constructor = f26;
    const v31 = this?.constructor;
    try { new v31(a24, v21); } catch (e) {}
}
new F22(v21, v20);
new F22(v20, v20);
function f35() {
}
