[1000.0];
const v1 = [0.47706992710657303,-1000.0,0.631964192571379,0.0,-1.1787492049501263e+308,NaN,-3.0,-0.0,-5.0,6.194150076611144e+307];
[0.8839004446356096,497006.16844264837,-309764.27847961395];
[13,7,1024,256,55268];
[-12,1000];
[-1033641255,-61686];
4.0 - v1;
-9.504840442727438 !== -9.504840442727438;
1024 | 1024;
~256;
1024 !== -1024;
35456 + v1;
const v23 = -9007199254740991n ^ -9007199254740991n;
-9007199254740991n - -9007199254740991n;
-2147483647n / -2147483647n;
let v29;
try { v29 = ("repeat").strike(); } catch (e) {}
try { v29.toWellFormed(); } catch (e) {}
try { ("m").blink(); } catch (e) {}
Int32Array.e = Int32Array;
~1;
Uint8ClampedArray[1] = "NEdYi";
Uint8ClampedArray.a = Uint8ClampedArray;
"function" == "function";
v23 & 1022873702;
Math.g = -10;
Math.g = Math;
-4096;
let v55;
try { v55 = new Float32Array(Uint8ClampedArray, -1024, -1024); } catch (e) {}
try { v55.reverse(); } catch (e) {}
let v57 = 522675525n;
v57++;
function f59(a60, a61, a62, a63) {
    return eval;
    return a61;
}
