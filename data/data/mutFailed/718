[2.220446049250313e-16,0.9858742424541508,1.6862006442556176e+308];
[-1000000.0];
const v2 = [4.0,-1.7976931348623157e+308,-79548.29465537448,3.0,-1.0,-215380.75444350136,1000000.0,237531.9164273045,-105818.22929932456];
new Int8Array(3027);
function f8(a9, a10) {
    Object.defineProperty(v2, 2047, { writable: true, enumerable: true, value: 3027 });
    const v13 = new Uint32Array(64);
    return v13;
}
let v15 = Symbol.match;
Uint8ClampedArray[v15] = f8;
const v16 = new Uint8ClampedArray(4);
v16[1];
function f20(a21) {
    return Symbol != a21 ? Symbol : a21;
}
Uint8ClampedArray[Symbol.toPrimitive] = f20;
const v26 = new Uint8ClampedArray(3042);
v26[49];
%VerifyType(v2);
Symbol > 4 ? Symbol : 4;
Math.tanh(v15);
Math.acos(-254963470);
v15--;
const v38 = ("push")?.slice;
try { new v38(4, 4); } catch (e) {}
try { ("536870912").replaceAll(Uint8ClampedArray, "536870912"); } catch (e) {}
const v45 = new Uint16Array(6);
const v49 = new Uint32Array(9);
new Int8Array(v49);
4 % 4;
v45.lastIndexOf(4);
