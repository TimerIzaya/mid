class C3 {
    constructor(a5) {
        super[a5] = this;
        for (let v6 = 0; v6 < 69; v6++) {
            new Float32Array(0);
            new BigUint64Array(this);
            new Uint32Array(2);
        }
    }
}
const v16 = new C3(55270);
const v17 = new C3(v16);
new C3(v17);
new Array(8);
new Int32Array(64);
new Uint32Array(2);
const v31 = new C3(100);
const v32 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v33 = [601759695];
const v34 = [1073741824,1073741823,1376142744,1073741825];
function f36(a37, a38, a39, a40) {
    gc();
    function f44() {
        Math.cos(Math);
        return Math;
    }
    function f46() {
        const o53 = {
            "e": -4294967295,
            ..."Vre",
            valueOf(a51, a52) {
            },
            ..."Vre",
            "c": a40,
            5: -4294967295,
            6: -268435456,
        };
    }
    f46();
    %OptimizeFunctionOnNextCall(f46);
    let v56;
    try { v56 = v34["find"](..."find", a40, ...v33, ...v34, ...522675525n); } catch (e) {}
    v56 <= a39;
}
f36(v33, v32, 522675525n, v32);
class C60 {
}
class C61 {
    static #a = C60;
    static {
    }
}
BigInt(BigInt);
const v68 = new Uint8Array(47108);
for (const v69 in v68) {
}
class C72 {
}
for (let v73 = 0; v73 < 5; v73++) {
    f36();
}
const v75 = new BigInt64Array(3216);
const v79 = new BigUint64Array(4096);
function f81() {
    const o83 = {
    };
    return o83;
}
for (let v84 = 0; v84 < 51; v84++) {
    function F85(a87, a88, a89) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const o90 = {
        __proto__: v34,
    };
    o90.length = o90;
    f36(v33, v84, false, v84);
}
f36(100, 3331, v75, 3216);
%PrepareFunctionForOptimization(f36);
%OptimizeFunctionOnNextCall(f36);
f36(v79, f81, v75, 3216);
function f100() {
    return 36924;
}
function f101(a102, a103, a104, a105) {
    const o120 = {
        __proto__: a104,
        ...a104,
        [a104](a107, a108, a109) {
            function f111() {
                return f111;
            }
            return "Vre";
            -v31;
            const v115 = [268435440,8,7,1073741824,2147483647,70520590,-9223372036854775807,129,268435439,-1147002105];
            const v116 = v115.concat(v115);
            v116.flat(v116);
            return "function";
        },
    };
    return o120;
}
f101(-65536, 36924, f100);
