class C3 {
    c = NaN;
    toString(a5) {
        super.a ^= a5;
        try {
            this.fuck(a5, false, a5, -62111);
        } catch(e9) {
        }
        return -5.73611034476378e+307;
    }
    #d = 0.4815171082008085;
    static e = 0.4815171082008085;
}
const v10 = new C3();
const v11 = new C3();
const v12 = new C3();
new Array(7);
class C16 extends Array {
    10 = v10;
    constructor(a18, a19) {
        super(7);
        const t21 = 7;
        t21[3] = Array;
        super[0.4815171082008085] = a18;
        0.4815171082008085 | a19;
    }
    #m(a22, a23, a24) {
        const v26 = new Int8Array();
        v26.buffer;
        return Uint8ClampedArray;
        try {
            v11.a = a23;
            const v30 = new Uint8ClampedArray(7);
            new Int8Array(v30);
            const v34 = Map.prototype;
            try { v34.clear(v34, Map); } catch (e) {}
        } catch(e36) {
        }
        [7,a24,v10,[7],a22];
        [v11];
        return a22;
    }
}
new C16(NaN, v11);
new C16(-5.73611034476378e+307, v12);
new C16(NaN, v10);
class C43 {
    constructor(a45, a46) {
        let v47 = 10;
        for (let i = 0; i < 5; i++) {
            const v48 = v47--;
            function f49(a50, a51, a52, a53) {
                const v55 = new Int16Array();
                async function f57(a58, a59, a60) {
                    for (const v61 of a45) {
                        -740089575 ^ v47;
                    }
                    await v55[1];
                }
                f57().finally(Uint8Array);
                return v48;
            }
            for (let v68 = 0; v68 < 5; v68++) {
                f49();
            }
            Date.UTC(-64.87258063624915);
            const o75 = {
                set d(a74) {
                },
            };
            %OptimizeFunctionOnNextCall(f49);
        }
    }
}
new C43(C43, C43);
