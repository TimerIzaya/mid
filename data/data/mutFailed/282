function f0() {
    for (const v4 in "boolean") {
    }
    1000000000.0 >> 1000000000.0;
    const o13 = {
        n(a9, a10) {
            return Math.ceil(64n);
        },
    };
    const o25 = {
        127: -1000000000000.0,
        m(a15, a16) {
            let v14 = this;
            const v20 = v14++;
            super.h;
            const v23 = [Reflect];
            const o24 = {
                __proto__: Reflect,
                "e": v23,
            };
            return v20;
        },
        "hasInstance": "boolean",
        "b": "boolean",
        "g": -1000000000000.0,
        [-1000000000000.0]: "boolean",
        "f": "boolean",
        __proto__: "boolean",
    };
    return o25;
}
const v26 = f0(f0);
const v27 = f0();
const v28 = f0();
function f29(a30, a31) {
    const o45 = {
        ...v27,
        "d": v28,
        set h(a33) {
            f0();
            class C36 extends a30.constructor {
                #f;
                f = a31;
                static 2;
                static #e;
                static m(a38, a39) {
                }
                static {
                    try {
                        this.#d;
                    } catch(e42) {
                    }
                }
            }
            new C36();
            try { a31(); } catch (e) {}
        },
        ...v26,
        __proto__: a30,
        "a": v26,
    };
    return o45;
}
const v46 = f29(v28, f29);
const v49 = new Uint8Array(481);
v49.indexOf(Uint8Array, 481);
const v51 = [-65536,-432658450,256];
new Float64Array(v51);
const v54 = f29(v28, v46);
const v55 = f29(v28, f0);
function f56(a57, a58, a59) {
    const o73 = {
        "a": v54,
        get c() {
            super.e;
            Object.defineProperty(a59, a57?.g, { configurable: true, set: f29 });
            return v46;
        },
        "b": v55,
        "c": a59,
        [f0]: a57,
        valueOf(a64, a65, a66, a67) {
            const v69 = new WeakMap(v28, v54, a59);
            delete v69[f29];
            a64[this];
            super.a = a66;
            try {
                a66.toString = f0;
            } catch(e72) {
            }
            return a66;
        },
    };
    return o73;
}
const v74 = f56(v46, v46, v27);
const v75 = [1,4294967296,-9007199254740992,4,-4294967295,-9,-4294967297,255,536870888,255];
[v75,v75,v75];
const o80 = {
    [Infinity]: -0.0,
    [-16]: Infinity,
    "h": -16,
    ...-0.0,
    "c": Infinity,
    "e": -0.0,
};
f56(v74, v55, v26);
class C82 {
}
new C82();
const v84 = [6,-1340283293,-11812,-1073741824,-1073741824];
try {
    v84.length = -2147483648;
} catch(e86) {
}
f56(f29, v54, v26);
function f91() {
    const o105 = {
        ...1.7976931348623157e+308,
        [-2]: 1.7976931348623157e+308,
        __proto__: f0,
        [1.7976931348623157e+308](a95) {
            0 < 10;
        },
        toString(a100, a101, a102) {
            Infinity < v51;
            super[v27];
            return Infinity;
        },
    };
    return o105;
}
const v106 = f91();
class C107 extends f91 {
    3164398692 = v106;
    10000 = f91;
}
new C107();
new C107();
C107[741] %= 13;
let v111 = 0;
while (v111 < 7) {
    function f114(a115, a116, a117) {
    }
    v111++;
}
const v2 = new Float32Array(-911622189);
1000 / 1000;
const v6 = new Uint16Array(1000);
v6[64];
new Float64Array(88);
const v11 = [-0.0,6.83513788057428,-1000000000000.0];
let v12;
try { v12 = v11.toSpliced(Float32Array, Float32Array); } catch (e) {}
Float64Array[1];
const v14 = [714212.2427886741,-0.0,833450.4582529373,0.2925098997613864,-376581.82709216303,-1000.0,1e-15,-754.176309738237,983946.1385150722,-1.2343906934210458e+308];
const v15 = [2.2250738585072014e-308,1.0,5.987203096745402,-1e-15,3.0,659.1758563680551,-0.0];
try { v14.lastIndexOf(v15); } catch (e) {}
let v17;
try { v17 = v15.toString(); } catch (e) {}
const v21 = ("trim")?.search;
try { v21.apply(v15, v21); } catch (e) {}
try { new v21(-10913); } catch (e) {}
class C24 {
    static [-8.662521944722695];
    m(a26) {
        function f27() {
            return "trim";
        }
        Object.defineProperty(v2, 64, { enumerable: true, set: f27 });
        return v12;
    }
    o(a29, a30) {
        let v31;
        try { v31 = a29(-10913, "trim", -10913, this, a30); } catch (e) {}
        const v32 = -10913 == a29;
        try {
            v31.f = v32;
        } catch(e33) {
        }
        return -10913;
    }
}
C24.name = C24;
const v34 = new C24();
const v35 = v34?.constructor;
try { new v35(); } catch (e) {}
const v37 = new C24(v17);
try { v37.m(Float64Array); } catch (e) {}
const v39 = new C24();
function F40(a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    try { a43.constructor(); } catch (e) {}
    try {
        this.b = a43;
    } catch(e45) {
    }
    try {
        this.g = v37;
    } catch(e46) {
    }
}
const v47 = new F40(v39, v39);
const v48 = new F40(v47, v47);
v48.b = v48;
const v49 = new F40(F40, v48);
v49.b = v49;
let v51;
try { v51 = v48(3, v39, 3, -8.662521944722695, v34); } catch (e) {}
v49 / v51;
class C53 {
    static #a = -10913;
    [F40];
    65535;
    static #b = 3;
    g = v34;
}
try { new C53(); } catch (e) {}
try { C53(); } catch (e) {}
new C53();
const v57 = new C53();
v57[65535];
new C53();
