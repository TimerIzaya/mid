class C3 {
    [-39233] = -2127350647;
    [-117.6202672056188];
    constructor(a5) {
        -268435456 || 4.0;
        Math.sign(4.0);
        +4.0;
    }
    268435439 = -39233;
    d;
    g;
    a;
}
C3.p26 = -117.6202672056188;
C3.p24 = -2127350647;
const v13 = new C3(C3);
const v14 = new C3(-2127350647);
const v15 = new C3(v14);
class C16 extends C3 {
    static #n(a18, a19, a20, a21) {
        let v22;
        try { v22 = a20(C3); } catch (e) {}
        const v23 = [v14,v22,this,a19,v22];
        [-117.6202672056188,v23];
        [v23];
        return v14;
    }
    constructor(a27, a28, a29) {
        super(-39233);
        for (let v33 = 0; v33 < 32; v33++) {
            C3["p" + v33] = v33;
        }
    }
}
new C16(v15, -117.6202672056188, v13);
new C16(v15, v15, C3);
new C16(v14, -2127350647, v13);
[NaN,1000000.0];
[2.220446049250313e-16,1000000000000.0,-993917.5436132841,2.0,-3.0,-1.0,591516.4108728489,-1e-15,0.926628399605011];
[1.4412582405192994e+308,1000000.0,9.13490491166757e+307,0.0,2.0,393669.092041214,5.0,-56281.89442761929,-3.0,-5.0];
class C45 {
    static {
        function F47(a49, a50) {
            if (!new.target) { throw 'must be called with new'; }
            function f51() {
                this.e &&= -117.6202672056188;
                try {
                    const o54 = {
                    };
                    new C16("MA1Gh", "catch", o54);
                } catch(e56) {
                }
                return F47;
            }
            Object.defineProperty(this, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f51 });
            this.propertyIsEnumerable(this);
            const v60 = this.constructor;
            try { new v60(); } catch (e) {}
            try { this.constructor(); } catch (e) {}
        }
        new F47(C45, C45);
    }
}
