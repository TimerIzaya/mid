const v0 = [11,-190887521];
const v1 = [-41961,-4294967296,-1073741824,11691,55642,-1751036658,10021];
const v2 = [55691,-15145,-19089];
new Map();
function f11(a12, a13, a14) {
    a12.toString = f11;
    const o27 = {
        "e": v2,
        [v1](a16, a17) {
            function F18(a20, a21) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.b = 1841650927n;
                } catch(e22) {
                }
                try {
                    this.a = a12;
                } catch(e23) {
                }
            }
            new F18(-4294967296, v0);
            new F18(-9007199254740992, v1);
            new F18(a13, v0);
            return this;
        },
    };
    return o27;
}
f11(v2, -9007199254740992, v0);
f11(v2, -4294967296, v1);
f11(v1, -4294967296, v1);
const v32 = [1e-15,-0.0,-3.9801551724516244,-674947.5114114857];
v32[268435441] = f11;
v32[268435441] = v32;
const v33 = [601759695];
const v34 = [1073741824,1073741823,1376142744,1073741825];
function f36(a37, a38, a39, a40) {
    function f41() {
        const o48 = {
            "e": -4294967295,
            ..."Vre",
            valueOf(a46, a47) {
            },
            ..."Vre",
            "c": a40,
            5: -4294967295,
            6: -268435456,
        };
    }
    f41();
    %OptimizeFunctionOnNextCall(f41);
    let v51;
    try { v51 = v34["find"](..."find", a40, ...v33, ...v34, ...522675525n); } catch (e) {}
    v51 <= a39;
}
f36();
for (let v54 = 0; v54 < 5; v54++) {
    f36(v33, v54, false, v54);
}
%OptimizeFunctionOnNextCall(f36);
f36();
