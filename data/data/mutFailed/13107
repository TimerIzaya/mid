function f0() {
    let v2 = -2.220446049250313e-16;
    const o6 = {
        get f() {
            -256.2821661459358 == (v2 >>>= -256.2821661459358);
            return this;
        },
        "b": -256.2821661459358,
        "g": v2,
        7: -256.2821661459358,
        __proto__: "atanh",
        "d": v2,
    };
    return o6;
}
const v7 = f0();
const v8 = f0();
v7[184] = f0;
const v10 = f0 !== f0 ? f0 : f0;
const v11 = new f0();
const o12 = {
    "call": f0,
    "construct": f0,
    "get": v10,
    "getOwnPropertyDescriptor": f0,
    "has": f0,
    "isExtensible": f0,
    "set": f0,
};
new Proxy(v8, o12);
const v15 = f0();
const v22 = new Uint8ClampedArray(4096);
Object.defineProperty(v11, o12, { writable: true, enumerable: true, get: f0 });
v15.d *= 0.9550499667276456;
let v24;
try { v24 = v8.unregister(v22); } catch (e) {}
try {
    new f0();
} catch(e27) {
}
new Int32Array(13);
new Uint8ClampedArray(512);
class C36 {
    [-55801.39760616061];
    [v22] = Object;
    static #c;
    #d = v7;
    static a = v24;
    0 = f0;
    static [2.2250738585072014e-308];
    c;
    static d;
    255;
    static 16;
}
const v37 = new C36();
function f38(a39, a40) {
    return a39;
}
v37[Symbol.toPrimitive] = f38;
const o51 = {
    p(a44, a45) {
        for (const v46 in v37) {
            v7[13] = 2.2250738585072014e-308;
            !a44;
        }
        return C36;
    },
};
o51.p(C36, C36, -55801.39760616061);
