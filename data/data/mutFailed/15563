new Uint32Array(127);
const v5 = new BigInt64Array(0);
const v8 = new Int16Array(14);
class C9 extends Uint32Array {
    static {
        const o12 = {
            "execution": "async",
        };
        function f13() {
            const o20 = {
                "e": -4294967295,
                ..."Vre",
                valueOf(a18, a19) {
                },
                ..."Vre",
                "c": this,
                5: -4294967295,
                6: -268435456,
            };
        }
        f13();
        %OptimizeFunctionOnNextCall(f13);
        [-1020846381,-39300,-128,6,-1485748758,63473,8,0];
        [-4096];
        [-1129246030,390801223,-9007199254740992];
    }
    f;
    [v5] = v8;
    2586555945 = v5;
    #g;
}
new C9();
new C9();
new C9();
const v32 = new Set();
function f33(a34) {
    const o39 = {
        o(a36, a37) {
            super[a34];
        },
    };
}
f33(v32);
const v41 = f33(f33);
f33(Set);
new Uint32Array(420);
new Int32Array(2057);
new Int8Array(260);
const o53 = {
};
o53.h = o53;
const v55 = !o53;
const v56 = 1842642860 % v55;
v56 % v56;
const v58 = new WeakMap();
try { v58.delete(v55); } catch (e) {}
class C62 {
    static {
        try {
        const t0 = "boolean";
        t0(this);
        } catch (e) {}
    }
}
try { C62(); } catch (e) {}
const v67 = ("isInteger")?.replaceAll;
const v74 = [-2147483647,64098,-9383,1024,129,-5];
[1000,-16,-38597,12,-3399,32508];
const v76 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v78 = new Uint32Array();
const v80 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v81 = [601759695];
const v82 = [1073741824,1073741823,1376142744,1073741825];
function f84(a85, a86, a87, a88) {
    function f89() {
        v76.length;
        try {
        } catch(e91) {
        }
        const o92 = {
        };
        const o112 = {
            valueOf(a94, a95) {
            },
            1073741824: v78,
            [-4294967297n](a97, a98, a99, a100) {
                class C102 extends Date {
                    static get c() {
                    }
                }
                eval();
                class C106 {
                    constructor(a108, a109, a110, a111) {
                    }
                }
            },
            "arguments": v80,
        };
    }
    const v114 = new Int8Array();
    v114.buffer;
    const v118 = new Int32Array();
    v118[3];
    for (let v120 = 0; v120 < 10; v120++) {
    }
    let v122;
    try { v122 = v82["find"]("find", a88, v81); } catch (e) {}
    v122 <= a87;
}
for (let v124 = 0; v124 < 10; v124++) {
    f84();
}
%OptimizeFunctionOnNextCall(f84);
f84();
Math.atan(Math);
const v130 = new Float32Array();
class C133 extends v130.constructor {
    static [-9223372036854775808n];
}
[-50328,-14,3,128,-11,64,-65535];
class C135 {
    [v74] = -1000000.0;
    constructor(a137, a138, a139, a140) {
        super[this];
    }
    g;
    c;
    #toString(a143, a144, a145) {
    }
    1 = 257n;
}
new C135(1073741825n, 1.0, 7.589647165982214);
const v147 = new C135(411585671n, -1000000.0, -1000000.0, 1.0);
new C135(v147, -1000000.0, 1.0);
const o149 = {
};
function f150() {
    const o158 = {
        ...1.7976931348623157e+308,
        [-2]: 1.7976931348623157e+308,
        __proto__: 256,
        [1.7976931348623157e+308](a154) {
            0 < 10;
        },
    };
    return o158;
}
const v159 = f150();
class C160 extends f150 {
    3164398692 = v159;
    10000 = f150;
}
/(?:a*)+bU\u0034xyz{1,32}/udi;
/vfoo|(bar|baz)|quux/gvds;
try { v67(); } catch (e) {}
const o170 = {
    toString(a165, a166, a167, a168) {
        v41 * a168;
    },
};
