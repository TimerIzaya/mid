class C3 {
    constructor(a5) {
        let {"a":v6,"length":v7,...v8} = "-13";
        let v10;
        try { v10 = v6(a5, "P7C", "n", a5, "P7C"); } catch (e) {}
        %VerifyType(v10);
    }
    static d;
    static #e;
    f = "n";
    255 = "-13";
    static 175 = "n";
    #f = "P7C";
    ["P7C"];
    static 9;
}
const v11 = new C3("n");
const v12 = new C3("-13");
const v13 = new C3("P7C");
const v14 = [v13,v13,v12,C3];
const v15 = [v14];
const v16 = [v14];
const v18 = new Set();
class C19 {
    65537 = v11;
    [v15];
    constructor(a21, a22, a23, a24) {
        try {
            v14.b = a24;
        } catch(e25) {
        }
        new Set(this);
        delete C19?.length;
    }
    static #d = v18;
    static 6;
    static d;
    #h = v12;
}
const v28 = new C19(v14, "n", "-13", C3);
const v29 = new C19(v15, v28, v28, v28);
new C19(v29, v28, v29, v16);
function F31() {
    if (!new.target) { throw 'must be called with new'; }
    v28.c = 5;
}
const v34 = new F31();
const v35 = new F31();
function f36(a37, a38) {
    const o39 = {
        "h": v35,
        6: v15,
        128: a38,
        "e": v34,
        __proto__: a37,
        "a": F31,
        ...a37,
    };
    return o39;
}
const v40 = f36();
const v41 = F31();
f36(v34, v41);
function f43() {
    return f36;
}
const v46 = new Float32Array(218);
const v48 = new Uint8Array();
for (const v49 of v46) {
    Object.defineProperty(v40, Float32Array, { configurable: true, enumerable: true, get: f36, set: f43 });
}
Object.defineProperty(v41, "e", { configurable: true, enumerable: true, set: f36 });
v48 instanceof f36;
