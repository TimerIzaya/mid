class C3 {
    constructor(a5) {
        try {
            super.getDay(this, this, a5, a5, "a");
        } catch(e7) {
        }
    }
    n(a9, a10) {
        const o11 = {
            "a": a9,
            10: a10,
        };
        a10 instanceof a9;
        let v14 = a10.iterator;
        const o23 = {
            ["ignoreCase"]() {
                const o22 = {
                    next() {
                        v14--;
                        const v20 = 10 == 0;
                        const o21 = {
                            "done": v20,
                            "value": 10,
                        };
                        return this;
                    },
                };
                return o22;
            },
        };
        return "ignoreCase";
    }
}
const v24 = new C3(C3);
const v25 = new C3(C3);
new C3(v24);
new BigUint64Array(512);
new Int16Array(512);
new Int16Array(512);
function F38(a40, a41, a42) {
    if (!new.target) { throw 'must be called with new'; }
    let v39 = this;
    const v47 = (v39 = a41).constructor;
    try { new v47(); } catch (e) {}
    v39.h = -6.336273045214518e+306;
    v47.g = -1.7976931348623157e+308;
}
const v50 = new Uint16Array();
function f52() {
    let v55 = 257828.6336153492;
    v55--;
    class C58 {
        static #m(a60) {
        }
    }
    const v61 = new C58();
    [-13,8,-1073741824,-9007199254740990,536870889,47670,-36072,9,268435441,1];
    new v25();
    const v64 = new C58();
    const v65 = [v64];
    new BigUint64Array(2141);
    let v68;
    try { v68 = v65.map(v50); } catch (e) {}
    const v69 = [];
    for (let i71 = 0; i71 < 2, v68; i71++) {
        new F38(undefined, v61, undefined);
    }
    class C79 extends C58 {
    }
    C79.prototype = C79;
    const v80 = v69.constructor;
    !v80.isArray();
    class C83 extends v80 {
    }
}
%PrepareFunctionForOptimization(f52);
f52();
%OptimizeFunctionOnNextCall(f52);
f52();
