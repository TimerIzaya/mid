const v1 = new Map(Map);
for (const v2 in v1) {
}
URIError();
class C5 {
}
const v6 = [10,6,-2,5,3,44539];
[129,-1767404488,65536,4294967297];
[12,-213144809,-10,-47333,12,1,268435456,-9007199254740990];
for (let v9 = 0; v9 < 5; v9++) {
    function f10() {
        let v12 = ("wn").codePointAt(v9);
        const v13 = v12--;
        class C14 {
        }
        return v12 ^ v13;
    }
    f10();
    %OptimizeFunctionOnNextCall(f10);
}
const v17 = [-1000000000000.0,-2.220446049250313e-16];
const v18 = [-5.0,-1000000.0,-43.881154789550806,-0.0,-1000000000000.0,9.281629641856156,0.4162944045395034,1000000.0];
[-2.220446049250313e-16,1000000.0,NaN,-1000.0,3.0];
for (let [i23, i24] = (() => {
        10 >> 10;
        return [0, 10];
    })();
    i23 < i24;
    --i23) {
    const t29 = "imul";
    t29[133] = i24;
    let v33;
    try { v33 = v18.concat(); } catch (e) {}
    v6[v33] <<= v33;
    i23 && "l";
    try {
        C5.fuck(v17, URIError, i23);
    } catch(e36) {
    }
}
const v40 = new BigInt64Array();
v40["indexOf"]();
class C43 {
}
/(?<a>(?<b>(?<c>(?<d>.).).).)+/gvimsy;
