function f0() {
}
Object.defineProperty(f0, Symbol.toPrimitive, { writable: true, enumerable: true, value: f0 });
class C3 {
    static [C3] = f0;
    static 201 = f0;
    #d;
    toString() {
        let v4 = this;
        v4 &&= v4;
        try {
            v4.#d = v4;
        } catch(e5) {
        }
        super[f0] = v4;
        return v4;
    }
}
new C3();
const v7 = new C3();
new C3();
const v10 = [f0,true];
const v11 = [v10,v10,C3];
[v11,f0,v7,v11];
const v18 = new Float32Array();
const v20 = new Uint8Array(v18, Uint8Array, Uint8Array);
v18[-1e-15] = Uint8ClampedArray;
class C23 extends Float32Array {
    constructor(a25, a26, a27) {
        super(1);
    }
}
new C23(1, v20, Float32Array);
