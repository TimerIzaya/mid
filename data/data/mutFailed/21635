const v0 = [1.7976931348623157e+308];
[1e-15];
const v2 = [1000000000000.0,-9.166433835042808e+307,-4.388440477917418e+307,0.9914039702349623,2.2087762908065436,1000000000.0];
function f3() {
    return v2;
}
const v4 = [-1000000000.0,-1.0,-1e-15,1e-15,7.179302619570288e+307,938266.426392836,6.132926340652393];
let v5 = [689127.0864927103,-0.3931002411802744,921923.963026063,-4.0,0.23320502929525744,-Infinity,6.901305654356914];
const v6 = [0.35957757490102116,-3.0,-1000000000.0,-1000000000000.0,683.3135407232228,-3.0,1000.0,-1.7976931348623157e+308,-1.7976931348623157e+308];
try { v6.slice(v0, v2); } catch (e) {}
function f8(a9, a10) {
    a9[0];
    a10[0] = a10;
    const o27 = {
        n(a13, a14) {
            if (this === a13) {
                this ** v4;
            } else {
                v5 = v6;
                let v18 = 1416;
                Math.atanh(v18);
                const v21 = --v18;
                const v22 = v21 || f3;
                v22 ** v18;
                Math.floor(v21);
                268435441 << v18;
                v18 << v22;
            }
            return a10;
        },
    };
    return o27;
}
const v28 = f8?.constructor;
try { new v28(v0); } catch (e) {}
f8(v0, v0);
f8(v5, v4);
f8(v2, v4);
const v34 = new Uint8ClampedArray();
class C35 {
    constructor(a37, a38, a39, a40) {
        const v41 = this.constructor;
        v41.prototype = v41;
        try { new v41(a39, a40, a37, v41); } catch (e) {}
        for (let v43 = 0; v43 < 5; v43++) {
            v34[v43] = a40;
        }
    }
}
new C35(Uint8ClampedArray, Uint8ClampedArray, Uint8ClampedArray, C35);
