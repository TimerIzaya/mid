const v0 = [-Infinity,-4.0];
const v1 = [-748954.7375107082,-1.3036708678871055e+308,-1000000.0,1e-15,-696917.3711836318,-307.72428649907727,0.1938725836077655];
const v2 = [-1000000000000.0];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = v2;
    } catch(e6) {
    }
    try {
        this.c = a5;
    } catch(e7) {
    }
    try {
        this.g = v0;
    } catch(e8) {
    }
}
new F3(v0);
new F3(v1);
function f11() {
}
const v16 = [79.96177673553052,958106.6774601368,-2.220446049250313e-16,1.3702264850190933e+308,-569.2238583910487,-643621.2280408698,-906.898552923642,-3.0];
const v17 = [-1.7976931348623157e+308,-3.855381117037795,Infinity,3.0,3.0,-2.0,844.7988792561791,-447962.2152736336,4.1543000515369055,1.0];
const v18 = [-4.0,Infinity,-3.0,-734447.1317172151,4.890954914084955e+307,437656.14753023814,-0.0,0.2276435365306908];
function F25(a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 2.0;
    } catch(e30) {
    }
}
const v31 = new F25(645760.5423534142, v17, 165226.0487593948, -5.256559838432566, v17, -1);
new F25(-5.256559838432566, v17, v31);
const v33 = new F25(-441742.52960792976, v16, -212.78589373566194);
Object.defineProperty(v18, 149, { configurable: true, enumerable: true, get: f11, set: f11 });
Object.defineProperty(v17, 599385888, { configurable: true, enumerable: true, value: v33 });
/tRa*?(?:a+){0,0}/gvis;
/[qa{12z}]/gd;
/a*b|c[foo(?=bar)baz]/gvisy;
for (let v37 = 0; v37 < 5; v37++) {
    const o41 = {
        "execution": "number",
        "type": "minor",
    };
    gc(o41, -441742.52960792976, o41);
    const v43 = o41.type;
    %VerifyType(f11);
    %VerifyType(v37);
    v43?.[214];
    new Float64Array(128);
    new Uint8Array(1);
    new Uint16Array();
}
function F54(a56, a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    Reflect.construct(Int8Array, [1126838905], a56);
}
const v64 = new F3(v0);
function f65() {
    return v64;
}
function f69() {
}
const v73 = -16 + -16;
function f74() {
    return f69;
}
const v77 = new Int8Array(31);
new Uint16Array(0);
Uint32Array.e = Uint32Array;
new Uint32Array(255);
const v85 = new Map();
let v92 = undefined;
const o108 = {
    ...v85,
    ...v85,
    __proto__: v85,
    [24560](a94, a95, a96) {
        super[591114.0785999324];
        function f99(a100, a101, a102) {
            const o103 = {
                "h": v92,
                ...v77,
            };
            return o103;
        }
        f99(f99(undefined, v73, f99), 1.7976931348623157e+308, 175170095);
        f99(v77, a96, 1.7976931348623157e+308);
        v92 = Map;
    },
};
v92 = o108;
[v85];
function F111() {
    if (!new.target) { throw 'must be called with new'; }
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    const v116 = new Date();
    try { v116.setFullYear(f69, v116, F111); } catch (e) {}
    64875 + 64875;
    const o120 = {
    };
    o120.e = 64875;
    for (const v123 of Array(64875)) {
    }
    for (let v124 = 0; v124 < 50; v124++) {
    }
}
const v125 = new F111();
const v126 = v125?.constructor;
try { new v126(); } catch (e) {}
