const v0 = [6,55781,-1886136203,1424713853,268435439,-1024,1601739627,-481748653,-1168637393];
const v1 = [34472,3,65536,2147483649];
[2088223088,-4,7,-6521,1448810351,0,127];
function f3() {
    return v0;
}
function F5() {
    if (!new.target) { throw 'must be called with new'; }
    typeof arguments;
    gc();
}
new F5();
function F14(a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a17;
        new Uint8Array(1);
        function f21() {
            return f21;
        }
        class C22 {
            constructor() {
                try {
                    super.trunc(Map);
                } catch(e26) {
                }
                try { C22["n"]("n", Map, f21, Map, f21); } catch (e) {}
                const v29 = Map.name;
                try { v29.trimLeft(); } catch (e) {}
                super.c = C22;
                const o31 = {
                    "apply": f21,
                    "call": f21,
                    "get": f21,
                    "getOwnPropertyDescriptor": f21,
                    "getPrototypeOf": f21,
                    "has": f21,
                    "ownKeys": f21,
                    "preventExtensions": f21,
                    "set": f21,
                    "setPrototypeOf": f21,
                };
            }
        }
    } catch(e33) {
    }
    try {
        this.a = -1597511028;
    } catch(e34) {
    }
    try {
        this.b = 1137025934;
    } catch(e35) {
    }
}
new F14(55373, v1);
const v37 = new F14(-1597511028, v1);
new F14(-1597511028, v1);
function f42() {
    for (const v46 of Array(4087, Array, Array)) {
    }
    return f42;
}
f42();
%OptimizeFunctionOnNextCall(f42);
function f48() {
    Math.sinh(55373);
    Math.charCodeAt();
    const o52 = {
    };
    function f53() {
        return o52;
    }
    function f54(a55, a56) {
        Object.defineProperty(o52, "h", { writable: true, configurable: true, enumerable: true, get: f53, set: f53 });
        return o52;
    }
}
class C57 {
    valueOf(a59, a60, a61) {
        super.f;
    }
    [v37];
    static {
    }
    constructor(a65, a66) {
        this.p1 = v37;
        for (let v67 = 0; v67 < 5; v67++) {
            this["p" + v67] = v67;
        }
        function f70(a71, a72) {
        }
        function f73() {
            return f73;
        }
    }
}
new C57();
new C57();
function f76(a77) {
    return a77;
}
f76.toString;
const v79 = [134133844,-339370636,65535,-4294967295,536870888,-324130953,536870912,268435439];
function f80(a81, a82, a83, a84) {
    try { a83(a84, a83, a82); } catch (e) {}
    function f86() {
        const v87 = v79.length;
        const v88 = v87 >>> v87;
        const v89 = v88 % v88;
        v89 & v89;
    }
    return f86;
}
f80(v79, f80, f80, v79);
class C92 extends f48 {
    constructor(a94, a95, a96) {
        super();
        super.f = a94;
    }
}
new C92();
for (let v99 = 0; v99 < 10; v99++) {
    v99 < v99;
}
