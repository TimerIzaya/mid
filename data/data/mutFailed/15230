function f6() {
    return "16";
}
const v8 = new Date();
let v9;
try { v9 = v8.getSeconds(); } catch (e) {}
try { new Uint8ClampedArray(f6, f6, "16"); } catch (e) {}
new Uint8ClampedArray(-39042);
16 - 256;
let v17;
try { v17 = new Int32Array(256, Date, Int32Array); } catch (e) {}
const v18 = new Int32Array(16);
v18[14];
new Uint32Array(-39042);
function f23() {
    const o25 = {
        "c": v17,
    };
    const v26 = o25.c;
    v26.length = v26;
    const v27 = new Array();
    try { v27.findLast(Array); } catch (e) {}
    Array(4087, Array, Array);
    for (const v31 of v9) {
        v31 | v31;
        -4087;
    }
    return f23;
}
%PrepareFunctionForOptimization(f23);
%OptimizeFunctionOnNextCall(v9());
f23();
