new Int8Array(5);
const v5 = new Uint8Array(128);
new Int32Array(5);
class C9 {
    static {
        try {
            this.__proto__ = v5;
        } catch(e11) {
        }
    }
    c;
    static set g(a13) {
        try {
            super.keys(this, v5, a13, a13, v5);
        } catch(e15) {
        }
    }
}
new C9();
new C9();
new C9();
class C22 {
    get e() {
        try {
            super.setHours(this, this, 2.9788133947234406e+306, this, "MV");
        } catch(e25) {
        }
        return ("MV").__proto__;
    }
    static #f = 2.9788133947234406e+306;
    static 8;
    static #b;
    e = 2.9788133947234406e+306;
    static 65535 = 1e-15;
}
const v27 = new C22();
try { v27.toLocaleString(); } catch (e) {}
new C22();
const v30 = new C22();
v30.e = v30;
const v34 = new Date(-4.0);
function F38(a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
}
new F38(5, 5);
let v45;
try { v45 = Array.of(-195224844); } catch (e) {}
const v47 = [1024];
Reflect.construct(Date, v47, v45);
const v49 = v34[v47];
const v52 = new Uint8Array(10);
let v53;
try { v53 = v52.reduce(129); } catch (e) {}
function f54() {
    let v57 = -65535;
    const v58 = v57 / v57;
    const o95 = {
        next() {
            v57++;
        },
        m(a62) {
            try { a62.next(); } catch (e) {}
            const o64 = {
            };
            try {
                o64.e = v57;
            } catch(e65) {
                const v69 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v69, o64);
            }
            try { v49["getDate"]("", Float64Array); } catch (e) {}
            try {
            } catch(e73) {
            }
            try { ("EV").link(v58); } catch (e) {}
            let v76 = 0;
            class C77 {
                o(a79, a80, a81, a82) {
                    return v76;
                }
            }
            const v85 = new Int8Array(3938);
            let v86 = 3;
            let v88 = 0 >> 0;
            [...v86] = v85;
            try {
                let v89 = 0;
                do {
                    ({"c":v53,"d":v76,...v88} = a62);
                    ++v89;
                } while (v89 < 5)
                const o93 = {
                };
            } catch(e94) {
            }
        },
    };
    try { o95.m(o95); } catch (e) {}
    class C98 {
    }
    const v99 = new C98();
    const v101 = new Float32Array(v99, "nt", Float32Array);
    const t102 = "nt";
    const v102 = delete t102[v101];
    try { v99.floor(v102); } catch (e) {}
    for (const v104 in 10) {
    }
}
f54();
f54();
function f107(a108, a109, a110, a111) {
}
function f112(a113, a114) {
    const o117 = {
        set b(a116) {
        },
    };
}
function F118(a120, a121, a122) {
    if (!new.target) { throw 'must be called with new'; }
}
try {
} catch(e123) {
}
function f124(a125, a126, a127, a128) {
    const o137 = {
        "e": a128,
        [a128](a130, a131) {
            [2.0,-1.4136594990615852e+308,990839.6347160602];
            [1.7402501030817658e+308,0.4407518532850566];
            const o136 = {
                "execution": "async",
            };
        },
    };
    return o137;
}
const t137 = f124(v30, v27, v30, 128);
t137.h = f107;
function f139(a140, a141, a142) {
    const o145 = {
        get c() {
            const o144 = {
            };
        },
    };
}
function f146() {
    const o149 = {
        set e(a148) {
        },
    };
}
class C150 {
}
