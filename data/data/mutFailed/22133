function f1() {
    const o10 = {
        ...undefined,
        "c": undefined,
        "a": undefined,
        "h": undefined,
        "f": undefined,
        "b": undefined,
        set g(a3) {
            super[undefined] = a3;
            a3 - a3;
        },
        "f": undefined,
        o(a6) {
            const o8 = {
            };
            return gc(o8);
        },
        __proto__: undefined,
        "g": undefined,
    };
    function f11(a12) {
        let v13 = [];
        const v14 = [NaN,-1e-15];
        v13 = v14;
        return v14;
    }
    o10[Symbol.toPrimitive] = f11;
    return o10;
}
const v17 = f1();
f1();
const v19 = f1();
v19[Symbol.toPrimitive] = f1;
let v23 = 12;
129 | 129;
2147483647n | 2147483647n;
function F33() {
    if (!new.target) { throw 'must be called with new'; }
    for (let [i120, i121] = (() => {
            function F35() {
                if (!new.target) { throw 'must be called with new'; }
            }
            const v37 = new F35();
            const v40 = new Symbol();
            Array(19793);
            (129).constructor;
            const v48 = Math.pow(!0.8843420658768774, 129);
            v48 === v48;
            0 >>> 0;
            function F54(a56, a57, a58, a59) {
                if (!new.target) { throw 'must be called with new'; }
                const v60 = this?.__defineGetter__;
                try { new v60(this, this); } catch (e) {}
                for (let v62 = 0; v62 < 100; v62++) {
                    const v63 = v62++;
                    const o69 = {
                        valueOf(a65) {
                            return v62;
                        },
                        [0](a67, a68) {
                        },
                        "execution": 2430,
                        __proto__: v37,
                    };
                    o69[0];
                    function f71(a72, a73, a74) {
                        const o80 = {
                            [f71](a76, a77, a78, a79) {
                            },
                        };
                        o80.b = o80;
                    }
                    try { f71(v62, v17, "7"); } catch (e) {}
                    try {
                        a58.a = f71;
                    } catch(e82) {
                    }
                    const o83 = {
                    };
                    o83.g = v63;
                    o83.g = -261.99102172609366;
                    const o84 = {
                    };
                    o84.h = o84;
                    o84.g = -261.99102172609366;
                    o84.a = v40;
                    const v85 = (2430).constructor;
                    try { v85.isNaN(v62); } catch (e) {}
                    const v87 = v85();
                    v87 >>> v87;
                    const o89 = {
                    };
                    o89.h = o89;
                    o89.g = -261.99102172609366;
                    o89.a = v40;
                    o89.f = a59;
                    const o90 = {
                    };
                    o90.g = 0.8843420658768774;
                    o90.g = -261.99102172609366;
                    o90.a = v40;
                    f71(undefined, f71());
                    class C93 {
                        constructor(a95, a96, a97) {
                            const v98 = a97.concat();
                            v98[1] = v98;
                        }
                        static #o(a100, a101) {
                        }
                        n(a103, a104) {
                        }
                        #m(a106, a107, a108) {
                            function f109(a110, a111, a112, a113) {
                            }
                        }
                        268435439 = 129;
                    }
                }
            }
            const v114 = new F54();
            Object.defineProperty(v114, "sticky", { writable: true, value: v114 });
            v114.length = v114;
            new F54();
            0 + 0;
            10 >>> 10;
            return [0, 10];
        })();
        (() => {
            const v122 = i120 < i121;
            v122 && v122;
            function f124(a125, a126) {
                return f124;
            }
            function f127(a128, a129, a130, a131) {
                for (let [i136, i137] = (() => {
                        const v133 = 0 >>> 0;
                        v133 % v133;
                        return [0, 10];
                    })();
                    i136 < i137;
                    i137--) {
                }
                return f127;
            }
            for (const v145 of "some") {
                v145[0];
                try { new Date(v19, v23, 2147483647n, v23, 2147483647n, this, v23); } catch (e) {}
                new Date();
                for (let v150 = 0; v150 < 5; v150++) {
                    function f151() {
                        let v153 = ("Vre").codePointAt(v150);
                        v153 - v153;
                        v153 ^ v153--;
                        return f151;
                    }
                    f151.a = this;
                    f151.a = f151;
                    const v157 = f151();
                    try { v157(); } catch (e) {}
                    %OptimizeFunctionOnNextCall(f151);
                }
                const o159 = {
                };
                const o168 = {
                    o(a161, a162) {
                    },
                    next() {
                        v23--;
                        const v166 = v23 == 0;
                        const o167 = {
                            "done": v166,
                            "value": v23,
                        };
                        return o167;
                    },
                };
            }
            return v122;
        })();
        i121 === i121, i121--) {
    }
    for (let v175 = 0; v175 < 10; v175++) {
        for (let v176 = 0; v176 < 5; v176++) {
        }
        const o177 = {
        };
    }
}
new F33();
