const v3 = [9007199254740992,-65537];
const v4 = [v3,v3];
try { v4.includes(268435440, 268435440); } catch (e) {}
const v6 = [v4,v4,-65537,9007199254740992,9007199254740992];
class C7 {
    constructor(a9, a10, a11) {
        a9 !== a9;
        a11[2499] = a11;
        try {
            this.valueOf = this;
        } catch(e13) {
        }
    }
    [268435440];
    [v3] = v4;
    #b = v4;
    static e = v4;
    static 0;
    [9007199254740992];
    #g = 9007199254740992;
}
C7.length = C7;
const v14 = new C7(268435440, v4, v6);
new C7(v14, v4, v3);
const v16 = new C7(9007199254740992, v3, v3);
v16[268435440];
new Uint32Array(v14, 268435440);
const v23 = new v3(1613);
const v24 = v23[1448];
const v27 = new Uint8ClampedArray(3754);
v27.BYTES_PER_ELEMENT;
try { new Uint16Array(0, v24, v14); } catch (e) {}
const v31 = new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
v31[10000] = this / this;
