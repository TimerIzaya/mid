class C2 extends Array {
    constructor(a4, a5, a6) {
        super(a4);
    }
}
new C2();
("AanB8")[-5.0];
function f12() {
}
function f15() {
    return f12;
}
function f16(a17, a18) {
    const o21 = {
        get d() {
            Object.defineProperty(this, 10000, { enumerable: true, get: f12 });
            return new.target;
        },
        __proto__: a18,
        "b": a17,
        "c": f15,
        ...9007199254740991n,
        ...a18,
        "g": 9007199254740991n,
        ...f12,
        "d": -1010928051n,
        ...9007199254740991n,
    };
    return o21;
}
const v22 = f16(-1010928051n, -1010928051n);
f16(-1010928051n, 9007199254740991n);
class C24 extends f12 {
    [9007199254740991n];
    static get b() {
        const o28 = {
            "maxByteLength": 2559,
        };
        const v30 = new ArrayBuffer(2559, o28);
        new Uint8Array(v30);
        return v30;
    }
    static b = v22;
}
const v33 = new C24();
function f34(a35, a36, a37, a38) {
    const o39 = {
        "a": a37,
        [v33]: f12,
        ...a38,
    };
    return o39;
}
class C41 {
    static ["22307"] = "AanB8";
    b;
}
new C41();
("of").replaceAll("of");
function f45() {
    const o47 = {
        get b() {
            return f45;
        },
    };
    return o47;
}
class C48 extends f45 {
    constructor(a50) {
        super();
        for (let v51 = 0; v51 < 25; v51++) {
            this["p" + v51] = v51;
        }
    }
}
new C41();
const v62 = [34352,4,-9223372036854775808,1092764849,-2147483647,-1162070362,-4294967297,8,-591755449];
new Uint16Array(v62);
Symbol.hasInstance;
const o70 = {
    "execution": "async",
    ..."22307",
    ...f12,
    set b(a69) {
    },
    "type": "22307",
    "type": "minor",
};
gc();
class C73 {
    #n(a75, a76) {
        let v78;
        try { v78 = a76["matchAll"](1000000000000.0, 128, this); } catch (e) {}
        return v22;
        function F79(a81) {
            if (!new.target) { throw 'must be called with new'; }
        }
        try {
            C41.#d;
        } catch(e83) {
        }
        const t101 = "matchAll";
        t101[9] = 128;
        v78?.[1726887188];
        return this;
    }
    static b = 1000000000000.0;
    static #e;
    #b = 128;
}
new C73();
new C73();
new C73();
function f91() {
    Math.expm1(3375);
    const v97 = new Float64Array(64);
    v97[5] = v62;
    [v97,v62];
}
const v99 = [-1539,1,12];
function f100() {
    return f100;
}
function f101(a102, a103) {
    const o104 = {
        [a102]: v99,
    };
    return a102;
}
f101(f101);
f101();
f101(f100);
new f91();
class C3 {
    static {
        let [v5,,v6,...v7] = "K9qD";
        new Uint8ClampedArray(7);
        new Uint8Array(3274);
        new Int32Array(257);
    }
    static ["K9qD"] = "K9qD";
    ["K9qD"];
}
new C3();
new C3();
const v19 = new C3();
class C20 {
    static #b;
    static #toString(a22, a23, a24) {
        let v21 = this;
        try {
            v21 = a23;
        } catch(e25) {
        }
        let v26;
        try {
        const t0 = "K9qD";
        v26 = t0(a24);
        } catch (e) {}
        a22 + v21;
        Math.cosh(a22);
        Math.imul(v26, a22);
        return v21;
    }
}
const v32 = new C20();
const v33 = new C3();
let v34 = new C20();
function f35(a36, a37, a38) {
    const o45 = {
        ...a38,
        [a38](a40, a41) {
            const v42 = "n" instanceof C3;
            var g = v42;
            const v43 = super.c;
            try {
                v34 = v43;
            } catch(e44) {
            }
            return v42;
        },
        "d": C3,
        "a": "a",
        "b": v19,
    };
    return o45;
}
f35("a", v19, "a");
f35(v32, "K9qD", "K9qD");
f35(v32, v19, v19);
function F49() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 10270;
    } catch(e52) {
    }
    try {
        const o55 = {
            "maxByteLength": 536870912,
        };
        const v57 = new ArrayBuffer(78, o55);
        new DataView(v57);
        this.e = 10270;
    } catch(e60) {
        for (let i = 0; i < 5; i++) {
            function F61(a63, a64, a65) {
                if (!new.target) { throw 'must be called with new'; }
            }
        }
    }
}
let v66 = new v33();
new F49();
const v68 = new F49();
try {
    v66 ^= v66;
} catch(e73) {
}
const v77 = -(-1000000000.0);
v68 & f35;
const v79 = 1.7976931348623157e+308 || 1.7976931348623157e+308;
Math.max(f35);
!v77;
-1000000000.0 + v79;
const o85 = {
    230: 3,
};
let v86 = 0;
while (v86 < 6) {
    let v89;
    try { v89 = o85.repeat(); } catch (e) {}
    o85[v89];
    v86++;
}
