function f2(a3, a4) {
    function f5() {
        return BigUint64Array;
    }
    return 8;
}
BigUint64Array.toString = f2;
const v6 = new BigUint64Array(8);
BigUint64Array[Symbol.toPrimitive] = f2;
const v11 = new BigUint64Array(64);
Int16Array[0] = Int16Array;
const v13 = new Int16Array(Int16Array, Int16Array, Int16Array);
function f14() {
    function f15() {
        return Symbol[v11];
    }
    return f15;
}
Object.defineProperty(v13, Symbol.toPrimitive, { writable: true, enumerable: true, get: f14 });
const v21 = new Int32Array();
function f22() {
    const o27 = {
        [v13](a24, a25, a26) {
            switch (v21) {
                default:
                    break;
            }
        },
    };
    return 8;
}
v21.valueOf = f22;
const v28 = v21 / v13;
new Float32Array(56);
const v32 = /[\c1]/gdms;
v32.toString = f2;
/xq(?:a+)+/gv;
const t36 = /(\u0060[x\dz])/vd;
t36[v11] = v28;
try {
    f2(v32, "boolean");
} catch(e38) {
}
const o40 = {
    "maxByteLength": 219,
};
Int16Array[4] = 219;
SharedArrayBuffer[v13] = f2;
v11[v32] = SharedArrayBuffer;
f2(BigUint64Array, BigUint64Array);
function f43() {
    return 8;
}
const v44 = new SharedArrayBuffer(219, o40);
new Int8Array(v44);
const v47 = [9,-318567638,4,2147483649,536870888,16,2147483647,-9223372036854775807,44641,8];
class C48 {
    536870887;
}
for (let v49 = 0; v49 < 10; v49++) {
    new C48();
}
const v51 = [9,-4294967297,-7];
[1965925016,31187,452414506,-65537];
const v54 = new BigInt64Array();
const o55 = {
    __proto__: v54,
    "b": v6,
    "c": v32,
    7: v51,
    "a": v54,
    [BigInt64Array]: BigUint64Array,
};
let v56;
try { v56 = o55.indexOf(); } catch (e) {}
v32[BigUint64Array] = Int8Array;
try {
    v47.toString = v56;
} catch(e57) {
}
