function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a5;
    } catch(e6) {
    }
    try {
        this.e = -14;
    } catch(e7) {
    }
    try {
        this.d = 5;
    } catch(e8) {
    }
}
const v9 = new F3(5);
const v10 = new F3(65535);
const v11 = new F3(-14);
function f12(a13, a14, a15, a16) {
    const o21 = {
        [F3]: F3,
        [a14]: -14,
        set d(a18) {
            for (const v19 in this) {
                super.g;
            }
            v10[65535] = this;
            super.g = a13;
        },
        ...a14,
    };
    return o21;
}
f12(v11, v11, f12(v9, v9, 5, v9), v11);
f12(v11, v9, 5, v11);
function F25() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = -128;
    } catch(e28) {
    }
    try {
        this.b = -128;
    } catch(e29) {
    }
}
const v30 = new F25();
new F25();
new F25();
const v35 = new Uint8ClampedArray(65535);
const v38 = new BigUint64Array(64);
function f40() {
    return v38;
}
let [v41,v42] = v35;
v30.__proto__;
/(?:a+)?/udiy;
/(Zx\P{gc=Decimal_Number})/gdim;
/foo|(bar|baz)|quux\1\2(a(?:\1(b\1\2))\2)\1/udms;
class C53 {
    o(a55, a56, a57, a58) {
        class C59 {
            static 44 = "EV";
        }
        new C59();
        new C59();
        new C59();
        return 0;
    }
    static #f = 0;
}
new C53();
new C53();
new C53();
for (let v66 = 0; v66 < 32; v66++) {
    "p" + v66;
}
const o70 = {
};
gc(o70);
new v41(0);
function f74() {
    return 64;
}
new F25();
const v82 = [16];
for (const v84 of v82) {
    Uint8ClampedArray <= v84;
}
delete v82[0];
new Uint8Array(1210);
new Uint32Array(4);
new Uint32Array(1731);
let v9 = 9007199254740990;
const v12 = [];
function f15() {
    const o17 = {
        "c": "pR7SG",
    };
    return o17;
}
class C18 extends f15 {
    #toString(a20) {
    }
}
2759 + 2759;
Float32Array[1] = -1383363179;
const v28 = new Float32Array(2759);
v28[31] = v28;
256 / 256;
new Uint16Array(256);
new Uint32Array(360);
class C37 {
}
new Uint16Array();
function f40() {
    [NaN,1.0,1.1875413619536744e+308];
    [] = v12;
    const v43 = --v9;
    const o46 = {
        get b() {
            super[this] = v43;
            return -8.233575780020734;
        },
    };
    const o47 = {
        ...o46,
    };
    return f40;
}
9 >> 9;
Float32Array[0] = 360;
try { Float32Array.of(); } catch (e) {}
Float32Array[1] = 9;
const v51 = new Float32Array(Float32Array);
v51.BYTES_PER_ELEMENT;
function f54() {
    class C55 {
        constructor(a57) {
            this.fuck(true);
        }
    }
    return C55;
}
function f62() {
    const o67 = {
        valueOf(a66) {
            return f62;
        },
        __proto__: f62,
        [-52276]: -410.8373818683839,
    };
    return o67;
}
Object.defineProperty(Float64Array, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f54 });
const v69 = [-1000000000.0,1e-15,-9.803124315434264,-366.4099400694298,1000000000000.0,0.7347183727038488,-Infinity,2.0,0.3916117682859279,-461027.2128179858];
function f70() {
    return v69;
}
class C71 extends f70 {
    constructor(a73, a74, a75, a76) {
        super();
        const o78 = {
        };
        gc(o78);
        const t74 = o78.constructor;
        new t74();
        const v84 = ([4]).groupToMap;
        a73.d = v84;
        try { new v84(); } catch (e) {}
    }
}
const v86 = new C71();
for (let v87 = 0; v87 < 8; v87++) {
    v86.length = 0;
}
function f88(a89) {
    return Float64Array;
}
C37[Symbol.toPrimitive] = f88;
