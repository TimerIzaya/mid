new Uint16Array(212);
new Float64Array(16);
new Uint8Array(2478);
const v9 = [1000000000000.0,1000000.0,1.0,2.0,0.12387979675249217,NaN,-1000000000000.0,2.220446049250313e-16];
[-9.443882053575477,4.0,-1.0,9.862069423838154,9.01633634929636e+307,1000000000.0];
[7.656513949862294,-1.4192538086782133e+308,-1000.0,0.9110669796981462,-1.7976931348623157e+308,NaN,-496123.3433532539,-1000000000000.0];
class C15 {
    static #o(a17) {
        this.g **= -1e-15;
        try {
            ("-2147483648").normalize();
        } catch(e19) {
        }
        return 268435456;
    }
    a = -1e-15;
    static 27 = 268435456;
    static f;
}
let v20;
try { v20 = new C15(); } catch (e) {}
v20.a = v20;
const v21 = new C15();
v21.a = v21;
new C15();
const v23 = new C15();
function f24(a25, a26) {
    return v9.constructor;
    return a26;
}
v23.toString = f24;
8 - 8;
8 - 8;
let v34 = -15;
v34 | v34;
const v37 = 344.61638667171496 | 344.61638667171496;
const v38 = 344.61638667171496 & -11;
v38 << v37;
Math.sqrt(-11);
const v41 = Math.floor(v38);
const v42 = v41 + v41;
const v43 = v34--;
const v44 = v43 >> v43;
const v45 = new Int32Array(8);
v45.constructor = f24;
try { v45.constructor(v23, -1e-15, 8); } catch (e) {}
new Uint32Array(2950);
const v51 = 28 | 28;
const v53 = new Uint32Array(28);
v53.toString = f24;
Object.defineProperty(v53, "valueOf", { writable: true, value: f24 });
v53[0] = v53;
let v54 = 0;
let v55 = -56850;
v55++;
const v58 = 1.1408591040999836e+308 >>> v42;
class C59 {
    #b = v54;
    g = 1.1408591040999836e+308;
    static {
        let v61;
        try { v61 = new this(); } catch (e) {}
        v61.e = v61;
        this.e = this;
        Object.defineProperty(Math, "valueOf", { enumerable: true, value: f24 });
        try { Math.tan(Math); } catch (e) {}
        let v65 = 44149;
        -v65;
        v65--;
        const v68 = v54++;
        const v69 = v68 & v68;
        let v70 = -v68;
        v70++;
        let v72 = ~v54;
        const v73 = 2066950223 - v58;
        Math[Symbol.toPrimitive] = v54;
        try {
            super.test(Uint32Array, v73, v44);
        } catch(e77) {
        }
        v72--;
        Math.log10(v65);
        const v80 = v65 + v54;
        v80 + v69;
        v80 >> v80;
        const v83 = Math.fround(v68);
        v83 >> v83;
    }
}
let v85;
try { v85 = new C59(); } catch (e) {}
Object.defineProperty(v85, "d", { writable: true, enumerable: true, value: v20 });
v85.d = v85;
const v86 = new C59();
v86.g;
v86.g;
const v89 = new C59();
const v90 = v89?.__defineGetter__;
v90.constructor = f24;
try { v90.constructor(v23); } catch (e) {}
try { new v90(v51, C59); } catch (e) {}
const o99 = {
    "execution": "async",
    set e(a97) {
        try {
        } catch(e98) {
        }
    },
};
o99.type = 212;
o99.type = -1e-15;
gc(o99);
