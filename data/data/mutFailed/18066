function f3(a4, a5) {
    const o17 = {
        get b() {
            Math.pow(0.5071935088646417, 0.5071935088646417);
            0.5071935088646417 ** this;
            const v13 = 0.5071935088646417 ** 3;
            let v14 = ~0.5071935088646417;
            --v14;
            !v13;
            return 0.5071935088646417;
        },
        ..."6hoKi",
    };
    return o17;
}
f3("MAX_SAFE_INTEGER", "6hoKi");
const v19 = f3("MAX_SAFE_INTEGER", "bigint");
f3(v19, "6hoKi");
class C21 {
    static get g() {
        const o23 = {
            "call": f3,
            "construct": f3,
            "defineProperty": f3,
            "deleteProperty": f3,
            "get": f3,
            "getOwnPropertyDescriptor": f3,
            "getPrototypeOf": f3,
            "has": f3,
            "isExtensible": f3,
            "ownKeys": f3,
            "preventExtensions": f3,
            "set": f3,
            "setPrototypeOf": f3,
        };
        const v25 = new Proxy(this, o23);
        return v25;
    }
}
new C21();
new C21();
new C21();
function f29() {
    return C21;
}
[1073741824,-536870912,5,-2110468475,-27703,536870889,9007199254740992,171710119];
[16];
[10000,61087,1726756152,536870889,536870888,2112864639,9];
class C34 {
    static g = -897042.7196709883;
    static #b;
}
const v35 = new C34();
[v35];
function F37(a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
}
function f41(a42) {
    new Map();
    return v19;
}
F37.valueOf = f41;
const v45 = new F37();
v45[Symbol.toPrimitive] = f3;
v45 <= F37;
function f49(a50) {
    return -897042.7196709883;
}
class C51 extends f49 {
}
