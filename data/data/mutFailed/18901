const v0 = [1092005986,-1];
const v1 = [15510,1073741824,38051,-739772679,840676462,-2147483649,1024,536870889,4294967296,-1875560017];
[482457535,6,1073741824,1073741824,1073741824,0,63932,25150,-2147483648,-4];
function f6() {
    return v1;
}
if (v1 < "d") {
    f6();
    %PrepareFunctionForOptimization(f6);
    f6();
    f6();
    %OptimizeMaglevOnNextCall(f6);
    f6();
} else {
    const t14 = "1";
    t14.length >>= f6;
}
class C15 extends f6 {
    constructor(a17, a18, a19, a20) {
        super();
        let v21 = 0;
        do {
            super[v0];
            const t22 = "1024";
            t22[6] = a19[20701];
            v21++;
        } while (v21 < 2)
    }
}
new C15("1", 512, "1024", 20701);
new C15(f6, 512, "d", 20701);
new C15(C15, 20701, "d", -12);
const v31 = new Float32Array(Float32Array);
for (let v32 = 0; v32 < 25; v32++) {
    function f33(a34, a35, a36, a37) {
        a34[1];
        a35--;
        a34[0] = a34;
        a35 <= a35;
        arguments[1] = arguments;
        const v42 = arguments?.__lookupGetter__;
        try { v42.constructor(); } catch (e) {}
        let v44;
        try { v44 = v42(v42, f33, a35, arguments); } catch (e) {}
        return v44;
    }
    for (let v45 = 0; v45 < 10; v45++) {
        f33(v31);
    }
}
