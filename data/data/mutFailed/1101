class C3 {
    constructor(a5, a6) {
        const o9 = {
            "maxByteLength": 64,
        };
        const v11 = new ArrayBuffer(16, this);
        new Int32Array(v11);
    }
}
const v14 = new C3(-2.2250738585072014e-308, 0.0);
new C3(-2.2250738585072014e-308, 0.0);
new C3(v14, 0.0);
/0\P{Any}/uimsy;
/M+/gvds;
const v19 = /d(\xed\xb0\x80)\x01/vdisy;
[-9007199254740990,268435441];
[-37207,127,-4,-2147483649,65535,-1024,-536870912];
[4294967297,-256,8,1204244361,536870887];
const v23 = [4,268435456,-1988579072,-9007199254740991,-31917];
[-1257322457,8,127,-14,39653,128,9007199254740990];
const v25 = [9007199254740990,16,-65536,7,10,9223372036854775807,16,4,1073741824];
let v26 = [29915,-9007199254740990,9];
class C27 {
    h;
    202 = -2.2250738585072014e-308;
}
const v28 = new C27();
new C27();
new v14();
const v31 = [39049,-2147483647,9007199254740991,30221,268435456,-2147483647,41987];
const v32 = [2147483647,-32974,7,-54836,-9,-15,10000];
for (let i35 = 0, i36 = 10; i35 < i36, C27; i35++, i36--) {
    try { v19(i35, v28, i35, v19, v14); } catch (e) {}
}
const v45 = [268435440,49273,-15,214837996,-12,65536,1291301446,-65535];
try { v45.concat(v31); } catch (e) {}
const o47 = {
};
new v19(v23, o47);
const o53 = {
    "execution": "async",
    "type": "major",
};
gc(o53);
if (v31 <= v32) {
    v25 ** v31;
    v26 += v32;
} else {
    var d = v32;
}
[24691,802039630,-9223372036854775808,-27820,-1112311792,-26767,1098810331];
[881994048,268435456,1,1024,39940,8242,4740,-12,1024,1073741825];
new BigInt64Array();
const v64 = new Int32Array(1);
v64[0] = v64;
const v65 = (a66, a67, a68) => {
    let v69 = a66 & a66;
    ({"h":v69,"length":a66,...v69} = a68);
    return a68;
};
const v71 = v64 instanceof BigInt64Array;
v71 || v71;
let v73 = gc;
try { v73.bind(v45); } catch (e) {}
const v75 = v73();
const v76 = ("object").trim();
try { v76.sup(); } catch (e) {}
v73 /= v75;
