class C3 {
    constructor(a5, a6) {
        try { new a5(a5); } catch (e) {}
    }
    f;
    #h = 268435440;
    #m(a12, a13) {
        super.h = a13;
        return -2;
    }
    static #a;
}
const v14 = new C3(-2, "-1258375416");
const v15 = new C3(-2, v14);
new C3(v15, v15);
[-4294967297,-7,1024,50271,1607717221,127,-47109];
[-2443,-4096];
[2,7,16,1,536870887,-2147483648,512,268435456,1438139465];
function f21() {
    return 268435440;
}
class C26 {
}
const v27 = new C26();
let v29;
try { v29 = undefined(); } catch (e) {}
let v30;
try { v30 = v27(); } catch (e) {}
function F31(a33, a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    class C36 {
    }
    function f37() {
        return false;
    }
    function f38(a39) {
        [v30] = "valueOf";
    }
    Object.defineProperty(C36, "d", { writable: true, enumerable: true, get: f37, set: f38 });
    function F40(a42, a43, a44, a45) {
        if (!new.target) { throw 'must be called with new'; }
        this.constructor = f37;
        C36.d = v30;
        "p" + 11;
        const v48 = this.constructor;
        try { new v48(); } catch (e) {}
    }
    new F40(a35, v27, C36, undefined);
    new F40();
}
new F31(undefined, F31, v29);
