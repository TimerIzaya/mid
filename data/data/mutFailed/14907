[0.5494821680834409,-1000.0,2.220446049250313e-16,-219201.32976318873,-1.7976931348623157e+308,2.0,-1000000000000.0];
const v1 = [-9.90523202633992e+307,-750857.0231212399];
const v2 = [-1000000000.0,2.569850653920965e+307,-404.67374966100954,-2.220446049250313e-16];
function f3() {
    return v2;
}
function F4(a6) {
    if (!new.target) { throw 'must be called with new'; }
    this.length = F4;
    const v7 = this?.__defineSetter__;
    try { new v7(v1, v1); } catch (e) {}
    try { a6.map(v1); } catch (e) {}
    try {
        this.e = a6;
    } catch(e10) {
    }
    new URIError();
}
F4.caller = F4;
new F4(v1);
const v14 = new F4(v1);
v14.length;
new F4(v2);
-14 - -14;
function f21(a22, a23) {
    const v25 = new Date(f21);
    v25.getSeconds();
    return f21;
}
function f27(a28) {
    Array(9007199254740990);
    return a28;
}
f21.toString = f27;
try { f21(9007199254740990, v14); } catch (e) {}
%PrepareFunctionForOptimization(f21);
f21(v1);
%OptimizeFunctionOnNextCall(f21);
f21();
