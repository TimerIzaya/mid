const v0 = [];
function f1() {
    return v0;
}
function f2() {
    return v0;
}
class C3 extends f1 {
    #valueOf(a5) {
        super[f2] = f2;
        this instanceof f2;
        const o7 = {
            "deleteProperty": f1,
            "set": f1,
        };
        new Proxy(this, o7);
        return f1;
    }
    239 = f2;
}
const v10 = new C3();
const v11 = new C3();
let v12 = new C3();
[C3,C3,[v12,C3,f2],v10,v11];
[f2,f2,f2,v12];
class C16 extends f2 {
    static p(a18, a19, a20) {
        const v25 = [-1440504730,15059,-128,65536,33714,-51192,-268435456,37915];
        [10000,-13,1073741825,1602065818,65536,16];
        const v27 = [9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
        try { v27.sort(v27); } catch (e) {}
        [901134577,512,16,-13797,-1644674640,-4];
        function F30(a32, a33) {
            if (!new.target) { throw 'must be called with new'; }
            const v34 = this?.constructor;
            try { new v34(this, a33); } catch (e) {}
            this.c = a32;
        }
        new F30(F30, F30);
        const v37 = new F30(18074, 28602970);
        v37.b = v37;
        const v38 = new F30(18074, 18074);
        new F30(18074, 28602970);
        const v43 = new Uint8Array(v27, v38, 201);
        new Uint8Array(268435440);
        Uint8ClampedArray.b = Uint8ClampedArray;
        v27[6] = v43;
        v25.__proto__;
        const v50 = new Uint8ClampedArray(129);
        v50.lastIndexOf();
        Math.round(-1000.0);
        const v57 = v12-- << v12;
        -2147483647 - v12;
        ~v57;
        -65537;
        return v12 & -1000.0;
    }
}
new C16();
new C16();
new C16();
const v66 = new Int32Array();
let {...v67} = v66;
