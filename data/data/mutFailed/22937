const v1 = new WeakSet();
class C3 {
    static #toString(a5, a6) {
        const v10 = a6.f;
        v10 instanceof v10;
        return v1;
    }
    static [true] = WeakSet;
    #h;
    [true] = v1;
    #e = v1;
    3 = WeakSet;
}
const v12 = new C3();
const v13 = new v12();
const v14 = new C3();
class C15 {
    static [v14];
    constructor(a17, a18, a19) {
        !-8;
        Math.pow(!-8, true);
    }
    get h() {
        return Reflect.construct(WeakSet, [C3], C3);
    }
}
const v29 = new C15(v13, v13, v13);
const v30 = new C15(v13, C3, v29);
new C15(v12, v30, C15);
[201.0137099887802,-776868.2797916506,9.49939256124015,-1.0,-117580.18077069533];
[-1.7976931348623157e+308,-2.0774392500071978e+307];
[-1000000.0,-1000000000.0,6.257635408943404,-3.0,-1.0];
const v36 = new BigInt64Array();
try { v36.fill(v36, v13, v36); } catch (e) {}
