new Uint16Array(8);
new Uint16Array(64);
new Uint32Array(401);
class C12 extends Uint32Array {
    constructor(a14, a15, a16, a17) {
        try {
            a17.g = -638195.1133890696;
        } catch(e18) {
        }
        ~-638195.1133890696;
        super(a17, a17, a17);
        delete this[64];
        h = 64;
        a15 &&= -638195.1133890696;
    }
    static get f() {
        delete this[Uint32Array];
        return 165615.13319022;
    }
    #e = 6.213704636803293;
}
new C12(165615.13319022, 6.213704636803293, -638195.1133890696, 401);
new C12(-638195.1133890696, -638195.1133890696, 6.213704636803293, 64);
new C12(6.213704636803293, 165615.13319022, 6.213704636803293, 401);
function F29() {
    if (!new.target) { throw 'must be called with new'; }
    for (let v31 = 0; v31 < 1000; v31++) {
        const v34 = ("p" + v31).fontcolor();
        let v35;
        try { v35 = v34.trimLeft(this); } catch (e) {}
        v35[12];
    }
}
new F29();
new F29();
