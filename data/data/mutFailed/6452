function f6(a7, a8, a9, a10) {
    const o19 = {
        __proto__: -9007199254740991,
        "d": a8,
        set h(a12) {
            if (a12) {
            } else {
                typeof a8 === "undefined";
            }
        },
        "f": -1.0,
        [a10]: a9,
    };
    return o19;
}
f6(257, -1.0, -1.0, -9007199254740991);
f6(257, -1.0, -1.0, -9007199254740991);
f6(257, -8.663415195012262e+307, -8.663415195012262e+307, -653932123);
function f26() {
    return "m";
}
/(?<a>)(3(?:a+)?)*/gvdm;
/L*/vis;
/S/uimy;
const v33 = new Set();
const t25 = v33["delete"](839612.5677247904);
const v37 = new t25(127);
(127).constructor;
new Int8Array(1073741823);
let v42 = 9223372036854775807;
v42 = 65536;
1024 >>> 1024;
try { new Uint32Array(1024, Uint32Array, 127); } catch (e) {}
new Uint32Array(1024);
Float64Array.e = Float64Array;
const v51 = new Float64Array(159);
try { v51.filter(Float64Array); } catch (e) {}
[v51];
[v37];
[Float64Array,Uint32Array,159,127];
const v56 = [1000000000.0,-1000.0];
function F57(a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor = f6;
    try { this.hasOwnProperty(a59); } catch (e) {}
    this.constructor;
    try { new v56(); } catch (e) {}
    a59--;
    a59 & a59;
}
function f66(a67) {
    return a67;
}
class C68 extends f66 {
    [1024] = Float64Array;
    [1073741823];
}
new F57();
("29753").replaceAll("29753", "b").split("b");
("boolean").split("toString");
function f77(a78, a79, a80) {
}
function f81(a82, a83, a84, a85) {
}
const v88 = new Uint8ClampedArray(-653932123);
v88.toLocaleString().toLocaleLowerCase();
