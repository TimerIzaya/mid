function f0() {
}
class C4 extends f0 {
    toString(a6) {
        let v5 = this;
        Math.cosh(v5);
        Math.cbrt(a6);
        const v11 = ++v5;
        Math.pow(a6, v5);
        11 >>> v5;
        -v11;
        return Math.exp(f0);
    }
    1 = 20932.61005517142;
}
const v16 = new C4();
const v17 = new C4();
const v18 = new C4();
function F19(a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = a21;
    try {
        this.e = C4;
    } catch(e23) {
        const v24 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
        const v25 = /(?:a*)+q(?<a>.)/guds;
        function f26(a27) {
            v24.constructor.isArray(v25);
            return a27;
        }
        for (let i32 = 0, i33 = 10; i32 < i33; i33--) {
            f26(v25);
        }
    }
}
const v41 = new F19(v18, 1000000000000.0);
new F19(v17, 1000000000000.0);
new F19(v18, 20932.61005517142);
function F44(a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        v41.a = a46;
        const v48 = new v16();
        new v16(v48);
        function f50(a51, a52, a53) {
            'use strict';
            return a51;
        }
    } catch(e54) {
        class C55 {
        }
        new C55();
        const v57 = this[3];
        v57.g = v57;
    }
    try {
        this.h = v18;
    } catch(e58) {
    }
}
new F44(1000000000000.0, 1000000000000.0);
new F44(20932.61005517142, 1000000000000.0);
new F44(20932.61005517142, -1000000000.0);
const v63 = new WeakMap();
const v65 = new Int8Array();
const v67 = new Uint16Array();
for (let i = 0; i < 5; i++) {
    [[v63,v67["values"](...v65, Int8Array, ..."values"),[]]];
}
