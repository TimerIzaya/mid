const v4 = new WeakMap();
const v7 = new Float32Array(11);
v7.lastIndexOf();
function f10(a11, a12, a13, a14) {
    const o32 = {
        set g(a16) {
            function f17() {
                return WeakMap;
            }
        },
        toString(a19, a20, a21, a22) {
            /(x)(x)(x)\1/uis.exec(Int16Array);
            function F26() {
                if (!new.target) { throw 'must be called with new'; }
            }
            try { a19(); } catch (e) {}
            const v29 = [-1544505531,203545081,626321599,129,6,820835883,-1];
            [10,268435440];
            [-8,4,-9223372036854775807,-11,-1277176107,0,-4294967297,-8107,-1];
            return v29;
        },
    };
    function f33() {
        return f33;
    }
    Object.defineProperty(true, "constructor", { writable: true, enumerable: true, value: f33 });
    function F34(a36) {
        if (!new.target) { throw 'must be called with new'; }
        this.h = a36;
    }
    return o32;
}
f10(5n, 5n, 5n, f10);
f10(-4294967297n, -4294967297n, -4294967297n, v4);
f10(-4n, 5n, -4294967297n, -4294967297n);
[-7.234229422635476,4.0];
[0.6375885478923198,-350518.1424399753];
const v44 = new BigUint64Array(1000);
const o45 = {
    ...v44,
};
[955628.8519934984,-2.220446049250313e-16,Infinity,-1e-15,Infinity,0.5795862677108145];
const v47 = [-14339,735253629,4294967296,3,268435456,3,57019,268435439];
for (const v49 in [1959699296,-1,9007199254740991,9007199254740992,2147483649,-4096,-9223372036854775808]) {
}
function f50(a51, a52, a53, a54) {
    function f55() {
        let v57 = Math.expm1(a52);
        v57--;
        const v59 = Math.tanh(Math);
        const o60 = {
            [v59]: v57,
        };
        o60.NaN = o60;
        return f50;
    }
    f55();
    eval(a54);
    %OptimizeFunctionOnNextCall(f55);
    return eval;
}
for (const v64 in v47) {
    ("-2").normalize("NFKC");
}
