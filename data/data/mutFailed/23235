const v0 = [4,1988946291,268435456];
const v1 = [-1817809459,-1024];
const v2 = [1024,2147483649,536870888,-2147483647,2,1073741825];
const v3 = [268435440,1126051204,795166519,1073741824];
try { v3.map(v2); } catch (e) {}
[-256,-16,-1524322998,-56627,-349337919];
const v6 = [42457,-10,893210212,-47164,4294967296,-14,268435440,8467,5];
new eval(eval);
function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    a11[2];
    try { a12.findLastIndex(v1); } catch (e) {}
    try {
        this.g = v2;
    } catch(e15) {
    }
}
const v16 = new F9(v3, v6);
try { v16.hasOwnProperty(v0); } catch (e) {}
const v18 = new F9(v1, v16);
new F9(v6, v18);
("-1607624550")[3];
const v25 = [1000000.0,-1.7976931348623157e+308];
try { v25.group(v1); } catch (e) {}
const o27 = {
    ...v25,
};
try { o27.propertyIsEnumerable(o27); } catch (e) {}
