const v2 = new BigInt64Array(1);
new Float32Array(0);
try {
    v2.g = 149;
} catch(e11) {
}
const v12 = new Float64Array(149);
const o15 = {
    "maxByteLength": -3,
};
new ArrayBuffer(1000, o15);
new Int32Array(Int32Array);
const v20 = [1];
const v21 = [Float64Array,Float64Array,v12,149,Float32Array];
const v22 = [v21,1,v12];
function f23() {
    return v12;
}
function F24(a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v21;
    } catch(e29) {
    }
    try {
        this.d = a27;
    } catch(e30) {
    }
    try {
        this.a = a27;
    } catch(e31) {
    }
}
new F24(v22, f23, v20);
new F24(v21, v21, v21);
new F24(v21, v20, v21);
[];
const v36 = v21.constructor;
const v38 = new Float32Array();
v38.filter(v36);
