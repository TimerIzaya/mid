const v3 = /r(?:ab)/ud;
const v4 = /a\D/vdsy;
const v5 = /a[^a]/gvimy;
function f6(a7, a8, a9, a10) {
    const o19 = {
        p(a12, a13, a14) {
            [-829492709,128,-12,-58486,6,5,16691,13,-54659];
            [1046788835,19389,128,21540,15565,4];
            [-4,-2,2147483649,730633720,65536];
            try { a14(-65536); } catch (e) {}
            a9[3] = -65536;
            return v5;
        },
        "g": -65536,
        "d": a9,
        "c": a8,
        "b": v5,
        "e": a10,
    };
    return o19;
}
const v20 = f6(-56778, v3, v4, -65536);
const v21 = f6(-56778, v5, v5, -56778);
const v22 = f6(-65536, v5, v4, 127);
function F23(a25, a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = f6;
    } catch(e29) {
    }
    try {
        this.f = v21;
    } catch(e30) {
    }
    const v32 = ("function").length;
    function F33(a35, a36) {
        if (!new.target) { throw 'must be called with new'; }
        const v37 = this?.constructor;
        try { new v37(a35, a35); } catch (e) {}
        new Uint16Array(v32);
        const v41 = [];
        const o46 = {
            [v5](a43) {
            },
            set h(a45) {
            },
            "e": -56778,
            ...v41,
        };
        try {
            this.b = a36;
        } catch(e47) {
        }
        try {
            this.c = a35;
        } catch(e48) {
        }
    }
}
new F23(-56778, -65536, v4, v20);
new F23(f6, -65536, v3, v21);
new F23(F23, 127, v3, v22);
new Int32Array(3743);
new Uint8ClampedArray(3776);
function f60() {
    const v63 = Array(4087);
    v63[4037] = v63;
    for (const v64 of v63) {
    }
    return Array;
}
%PrepareFunctionForOptimization(f60);
new BigInt64Array(10);
new Uint16Array(127);
let v69 = 255;
new Uint8Array(v69);
const v74 = new BigInt64Array(179);
[];
const v78 = new Int8Array(16);
v78.toSorted();
function f80() {
}
class C81 {
    o(a83, a84) {
        for (const v86 of "bigint") {
        }
        f80();
    }
}
[f80,[f80],C81];
-425087802 >>> -425087802;
function f92() {
    return f92;
}
const v93 = /(?:a*)+q(?<a>.)/guds;
function f94(a95) {
    const v96 = a95?.constructor;
    let v97;
    try { v97 = v96(a95, f92); } catch (e) {}
    const o99 = {
        get d() {
            return this;
        },
    };
    return v97;
}
for (let i102 = 0, i103 = 10; i102 < i103; i103--) {
    for (let v110 = 0; v110 < 50; v110++) {
        f94(v93);
    }
}
const v115 = [10,1091321419,11475,-35321,-49219,-51397,335261656,-1,-65536,-4294967296];
const v118 = new BigInt64Array(205);
const v119 = v118[205];
try {
    v119.toString = v119;
} catch(e120) {
}
const v121 = [-1803975943,57715,-9007199254740992];
const v122 = [2147483647,13,536870912,-13,-1024,536870887];
f80();
const v127 = [9.64246076776908,2.220446049250313e-16,-2.220446049250313e-16,-5.0,4.0,-0.0,1000.0,-1.0];
class C128 {
    static [v127];
    constructor(a130, a131, a132) {
        super(a130);
    }
    static #b = v122;
}
const v133 = new Uint8ClampedArray(1000);
+(v133 ^ 3) + v74;
const v141 = ["undefined",8.806760127177498,v121,345168.6487633812,"undefined"];
[1000.0,8.806760127177498,v141,v115,v121];
[v141];
const v147 = (a148, a149, a150) => {
    try { ("function")["toUpperCase"](); } catch (e) {}
    "-268435456" ^ a148;
    class C155 {
        9 = 6;
    }
    return a150;
};
Symbol.unscopables;
class C158 {
    toString(a160) {
        const t145 = super["function"];
        t145[9] = 0;
    }
}
function f166(a167, a168) {
    const o170 = {
        get h() {
            return a168;
        },
        [a168]: 4,
        2778757984: a167,
        "h": 4,
    };
    return 4;
}
const o171 = {
};
const v173 = new ArrayBuffer(2, o171);
const v175 = new Int8Array(v173);
class C176 {
    static #p(a178) {
        this.#p();
    }
}
[-4096,13,16,6] + v175;
Symbol.iterator;
const v185 = [];
function f186() {
    const o194 = {
        toString() {
            super[this];
        },
        ...v185,
        n() {
            return this;
        },
        toString(a191, a192, a193) {
            return 3743;
        },
        "e": v185,
        "type": "hL",
    };
}
f186();
new Uint16Array(4294967295, 4294967295);
const o208 = {
    m() {
        const o202 = {
        };
        const t194 = [-1000000000000.0,-745.022234874873,-157924.67004693323,0.1181125914541652,-2.2250738585072014e-308,-956050.8340573441,3.0];
        t194.p21 = undefined;
        Array(36862);
    },
};
const v210 = new Int32Array();
function F211(a213, a214, a215) {
    if (!new.target) { throw 'must be called with new'; }
    const v216 = this?.constructor;
    try { new v216(Uint16Array, a215, a215); } catch (e) {}
    a213 * a213;
    v69++;
    this.d = a213;
    this.g = Int32Array;
}
new F211(256, v210, 4294967295);
class C222 {
    constructor(a224, a225, a226) {
    }
}
Math.asinh();
new Float32Array(Float32Array, Float32Array);
