const v6 = new WeakMap();
const t1 = 268435439;
t1[4] = -2147483647;
v6[536870912] = v6;
try {
    v6.get(536870912);
} catch(e8) {
}
const v9 = new Int8Array(127);
v9[99] = v9;
const o13 = {
    valueOf() {
        `d${536870912}function${Int8Array}log${Int8Array}toString`;
        function f12() {
            return v9;
        }
        return 536870912;
    },
};
const v15 = v9[3];
const v17 = v6["has"](-2147483647, 268435439, ..."has", 127, -2147483647, o13);
Object.defineProperty("has", 4, { writable: true, value: v9 });
v15[v17] = -2147483647;
let v19;
try { v19 = new Uint32Array(127, Uint32Array, Uint32Array); } catch (e) {}
v19[103] = v19;
const v20 = new Uint32Array(0);
try { v20.entries(); } catch (e) {}
let v22;
try { v22 = v20.entries(); } catch (e) {}
try { v22.next(); } catch (e) {}
const v25 = -16;
v25 / v25;
const v28 = new Float64Array(16);
v28[7];
function f30() {
    return Uint32Array;
}
const v34 = ("number")?.toLocaleUpperCase;
try { new v34(); } catch (e) {}
let v36;
try { v36 = ("number").split(Float64Array, "number"); } catch (e) {}
try { v36.every(v36); } catch (e) {}
class C41 {
    static {
        this.d = this;
        try { new this(); } catch (e) {}
        for (const v45 in this) {
            try { v45.strike(); } catch (e) {}
        }
    }
}
