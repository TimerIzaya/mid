class C3 {
    constructor(a5) {
        function f6() {
            class C7 {
                static {
                    try {
                    const t0 = -1000000.0;
                    t0();
                    } catch (e) {}
                }
                static f;
            }
            return C3;
        }
        a5.toString = f6;
        try { a5(...this, this, -1000000.0, ...536870912, 536870912, a5); } catch (e) {}
        536870912 >> a5;
        ("prototype").normalize("NFC");
        new Uint8ClampedArray(1000);
        new Uint16Array(5);
        new Uint16Array(2980);
    }
}
new C3(536870912);
const v25 = new C3(-4294967296);
new C3(v25);
[1073741825,1087601361,1,-21722];
[1073741825,129,22189,3,1073741824,257,3,-4294967297,127,1024];
const v32 = [7,9007199254740991,13];
function f33() {
}
function f34() {
    const v35 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
    const o41 = {
        toString(a37, a38) {
            (v32 && v32) <= v35;
        },
    };
    return v35;
}
f33.valueOf = f34;
const v42 = [601759695];
const v43 = [1073741824,1073741823,1376142744,1073741825];
function f45(a46, a47, a48, a49) {
    function f51() {
        return 522675525n;
    }
    f33();
    const v54 = new Int8Array();
    const v55 = v54.buffer;
    function f56() {
        return f34;
    }
    function f57(a58) {
        function f59() {
            return 536870912;
        }
    }
    Object.defineProperty(v55, "constructor", { get: f56, set: f57 });
    v55.slice(2147483648);
    %OptimizeFunctionOnNextCall(f51);
    let v63;
    try { v63 = v43["find"](..."find", a49, ...v42, ...v43, ...522675525n); } catch (e) {}
    v63 <= a48;
    return arguments;
}
for (let v65 = 0; v65 < 10; v65++) {
    f45(v65, v65, f33, 522675525n);
}
%OptimizeFunctionOnNextCall(f45);
f45();
