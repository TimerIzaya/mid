function f0() {
    const o37 = {
        set d(a5) {
            let v4 = this;
            function f6(a7, a8) {
                ("trunc").length;
                const v13 = ~v4;
                Math.expm1(v4);
                a8++;
                Math.tanh(a8);
                Math.abs(a5);
                --v4;
                return Math.floor(v13);
            }
            v4.toString = f6;
            const t15 = "15bUS";
            t15[915949.40612109] = v4;
            const v20 = a5 && a5;
            function f21(a22, a23) {
                const o27 = {
                    "execution": "sync",
                    "type": "minor",
                };
                gc(o27);
                return "15bUS";
            }
            v20.valueOf = f21;
            const o29 = {
            };
            Object.defineProperty(o29, "d", { writable: true, value: v4 });
            try {
                o29.d = "15bUS";
            } catch(e30) {
            }
            try {
                const o31 = {
                };
                o31.d = "15bUS";
                o31.d = "15bUS";
                o31.f = v20;
            } catch(e32) {
            }
            try {
                const o33 = {
                };
                o33.f = o33;
                o33.d = "15bUS";
                o33.f = v20;
                o33.e = "trunc";
            } catch(e34) {
            }
            try {
                const o35 = {
                };
                o35.e = o35;
                o35.d = "15bUS";
                o35.f = v20;
                o35.e = v20;
            } catch(e36) {
            }
        },
    };
    function f38() {
        const t63 = "15bUS";
        t63[915949.40612109] = "15bUS" << "trunc";
        return "15bUS";
    }
    o37.valueOf = f38;
    o37.d = o37;
    return o37;
}
function f40() {
    return f0;
}
Object.defineProperty(f0, Symbol.toPrimitive, { writable: true, enumerable: true, get: f40 });
f0();
const v44 = f0();
v44.valueOf = Symbol;
const v45 = f0();
v45.d = v45;
let v48 = 41386;
v48--;
function f54() {
    function f55() {
        return f55;
    }
    return f55;
}
Date.valueOf = f54;
try { new Date("string", Date, v44, v44, v45, Date, Date); } catch (e) {}
const v57 = new Date();
try { v57.setFullYear(v57, f0, Date); } catch (e) {}
const v61 = new Uint32Array();
let v62 = 1887;
v62++;
function f67(a68, a69) {
    const o77 = {
        [v61](a71, a72, a73) {
            a69?.[a71].__proto__;
        },
    };
    return a68;
}
