function F4(a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        a7.f = 12;
    } catch(e8) {
    }
}
const t7 = -107236156;
new t7(-1, -107236156);
new F4(-1, 12);
new F4(F4, 12);
[2147483647,-2147483649,27792,1,-377392057,65536,-128];
[9007199254740991,9007199254740992,1168191908,4294967297];
[-2030100832,772027189,4294967296,-39174,-3,536870887];
new Float32Array(Float32Array, Float32Array);
const t15 = null;
delete t15[536870888];
const v2 = new Int16Array(1024);
const v5 = new Uint8ClampedArray(14);
const v8 = new Int8Array(0);
class C14 {
    get e() {
    }
    static [38567] = -57641.03148885199;
}
Object.defineProperty(v5, 14, { configurable: true, enumerable: true, value: 0 });
Object.defineProperty(v2, 2346561061, { value: Int16Array });
const o18 = {
    "maxByteLength": 536870912,
};
const v20 = new SharedArrayBuffer(256, o18);
const v22 = new Uint16Array(v20);
const v23 = new C14();
const v24 = new C14();
const v25 = [-2.0,-Infinity,1.762696690706525e+307,4.561012756948999e+307];
const v26 = [4.0,6.789772630191657e+307,1.7976931348623157e+308,1.7976931348623157e+308,-2.0,0.06136428089954615,1000000.0,-1.4205107913505,-1.730047930360128e+308,-7.329935897040107];
try {
    v22[2250055925] = v23;
} catch(e27) {
}
const v31 = [6.929526887701016,-252289.71684125415,0.0,-5.0,1000000000000.0,-1000.0];
function F32(a34, a35, a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a36;
}
new F32(v24, v26, 38567);
const v39 = new F32(v23, v31, v23);
let v40;
try { v40 = v25.findLastIndex(v23); } catch (e) {}
const v41 = v24.toString(-57641.03148885199, v39);
v2 | v8;
v40.e += v41;
new Int32Array(257);
new Int8Array(64);
new Float32Array(10);
v26.__proto__ = v41;
