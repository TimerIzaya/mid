function f0() {
}
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = f0;
    } catch(e3) {
    }
    try {
        this.g = f0;
    } catch(e4) {
    }
}
const v5 = new F1();
const v6 = new F1();
v6?.e;
try { new f0(); } catch (e) {}
new F1();
class C13 {
    static [v5];
    constructor(a15, a16) {
        const v17 = this?.constructor;
        try { new v17(a15, -11); } catch (e) {}
        a16 >>> a16;
        super[v5] = -9223372036854775808;
        super[a16] = 129;
        const o20 = {
        };
        try {
            o20.e = a15;
        } catch(e21) {
        }
        try {
            const o22 = {
            };
            o22.e = f0;
            o22.d = a15;
        } catch(e23) {
        }
        try {
            const o24 = {
            };
            o24.e = f0;
            o24.d = a15;
            o24.h = v6;
        } catch(e25) {
        }
        try {
            const o26 = {
            };
            o26.h = o26;
            o26.e = f0;
            F1.d = a15;
            o26.h = a15;
        } catch(e27) {
        }
    }
}
const v28 = new C13(v5, 129);
const v29 = v28[129];
const v30 = new C13(v5, 129);
v30[129];
const v32 = new C13(v28, -9223372036854775808);
[-1.0661219081631437,-3.0,928.3138584377275,1.292545416990789,-1.1149301250324978e+308,-Infinity,4.0,998.7714893419814,-121329.4247853203];
const v34 = [2.0,0.6893212652507258,-1.0,-185246.09292088728,-1.8651968890089972e+307,964.7833040497867,0.0,-1000000000000.0,-1.0,-1000.0];
try { v32.map(v34); } catch (e) {}
const v36 = [248.2437243666459,-1000000000.0,-Infinity,-382.0731073038752,-4.0,-0.0];
v36[4];
9 - v29;
[65537,268435441,63298,-5,1235122603];
const v43 = [128,215394418];
let v44;
try { v44 = v43.entries(); } catch (e) {}
let v45;
try { v45 = v44.next(); } catch (e) {}
const v46 = [-2,-4294967296,4294967297];
function F47(a49, a50, a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    const v53 = a49 * a49;
    a51++;
    a52[0] = a52;
    const v55 = this.constructor;
    try { v55(1024, v36, v53); } catch (e) {}
}
F47.arguments = F47;
const v57 = new F47(-714582153, F47, -714582153, v43);
v32.length;
const v59 = new v6(-11, v57, 9, v46);
const v60 = v59?.constructor;
try { new v60(v34, -11, v43, v34); } catch (e) {}
v59.b = v59;
new F47(1024, v59, v46, v46);
v45--;
let v71;
try { v71 = ("string").trimStart(); } catch (e) {}
try { v71.trimLeft(); } catch (e) {}
let v73 = -1;
-35417 - -35417;
class C76 {
}
C76.name = f0;
function f77(a78, a79, a80, a81) {
    a78 - a78;
    return v5;
}
const v83 = f77(-9007199254740991, v71);
try { v83.propertyIsEnumerable(v44); } catch (e) {}
const v86 = ([1024,19026,1125846339]).length;
v86 + v86;
v44[v59] ||= v86;
const o92 = {
    set b(a91) {
        v73 <<= 0;
    },
};
o92.b = o92;
