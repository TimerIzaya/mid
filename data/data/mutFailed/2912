class C3 {
    static [-3];
    g = "rYrf";
    constructor(a5) {
        typeof -3 === "boolean";
    }
    0 = "rYrf";
    static #m(a10) {
    }
    static #e = -3;
    [-3];
    /*
    constructor(a12, a13) {
        eval(a12);
    }
    */
    #h = 0.0;
    #b;
    static #e;
}
new C3("rYrf");
const v20 = new C3(C3);
new C3(v20);
const v25 = new Uint16Array(4294967295);
const v28 = new Float32Array(7);
try { v28.filter(4294967295); } catch (e) {}
const v32 = new Int32Array(256);
function F33(a35, a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    const v38 = this?.constructor;
    try { new v38(Uint16Array, a37, a37); } catch (e) {}
    a35 * a35;
    a37++;
    this.d = a35;
    try {
        this.description = v25;
    } catch(e42) {
    }
    try {
        this.g = Int32Array;
    } catch(e43) {
    }
}
const v44 = new F33(256, v32, 4294967295);
const v45 = v44?.g;
try { new v45(Uint16Array, v28, 7); } catch (e) {}
const v49 = [];
function f50() {
    const o54 = {
        toString() {
            super[this];
        },
        ...v49,
        n() {
            return this;
        },
    };
    try { o54.n(); } catch (e) {}
    return v49;
}
[-51677,-65535,462981954,268435440,2147483647,64,711254192,-21366,871862639,-7];
[2110858712,596047241,10809,11];
function F59(a61, a62, a63) {
    if (!new.target) { throw 'must be called with new'; }
    return arguments;
}
const v67 = new Int16Array(1269);
for (const v68 in v67) {
}
const t69 = [4294967296,-16,14,128,-9223372036854775808,25285,-2147483648];
t69[-4] = -4;
const o70 = {
};
new Proxy(C3, o70);
new WeakSet();
class C76 {
    static {
        Object.defineProperty(this, -30745, { writable: true, enumerable: true, value: this });
    }
}
new Int32Array([Uint8Array,[Uint8Array,Uint8Array]]);
