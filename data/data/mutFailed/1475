[];
class C4 {
    p(a6) {
        let v5 = this;
        for (let v7 = 0; v7 < 35; v7++) {
            let v11 = -1000000000.0;
            v5.log1p(-31249);
            v5++;
            !-31249;
            -(-31249);
            let v16 = ++v11;
            -(v16++);
        }
        return a6;
    }
}
const v19 = new C4();
const v20 = new C4();
new C4();
function F22(a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a24;
    } catch(e27) {
    }
    try {
        this.h = a26;
    } catch(e28) {
    }
}
const v29 = new F22(C4, -9223372036854775807, v19);
const v30 = new F22(v29, -9223372036854775807, v20);
const v31 = new F22(v20, -9223372036854775807, v29);
function f32(a33, a34, a35, a36) {
    const o45 = {
        "e": -9223372036854775807,
        o(a38, a39) {
            const v40 = (a41, a42) => {
                const v43 = v30[1073741824];
                try {
                    v43.toString = a33;
                } catch(e44) {
                }
                return v19;
            };
            return F22;
        },
        "b": v29,
        __proto__: a33,
        233: 16,
    };
    return o45;
}
const v46 = f32(f32, v19, 1073741823, -9223372036854775807);
f32(v46, v46, -9223372036854775807, -9223372036854775807);
f32(v31, 1073741823, 16, 16);
function F52(a54, a55) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = -1.0458776802029855e+308;
    this.e = a54;
}
const v56 = new F52(1e-15);
const v57 = new F52(-559.2515874252856);
v57.toString = f32;
const v58 = new F52(-559.2515874252856);
const v59 = [v57,-559.2515874252856,v58,v58];
Object.defineProperty(v59, "toString", { writable: true, configurable: true, enumerable: true, value: f32 });
([v59,v59,v59])[v59];
v56.__proto__ = v57;
