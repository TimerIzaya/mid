function f1(a2, a3) {
    return Map;
}
Map.toString = f1;
const v7 = new Map();
const v8 = [Map];
const v9 = [v8,v7,v8,v8,v8];
const v10 = [Map,v9,Map,v7,v9];
class C11 {
    toString(a13) {
        new BigUint64Array(831);
        new Int16Array(512);
        new Float32Array(8);
        return this;
    }
    [Map];
    static #b;
    #e;
    268435441;
    #a;
    static e = v10;
    [v9] = v10;
}
C11.f = Map;
try { C11.call(v8); } catch (e) {}
new C11();
const v25 = new C11();
v25[268435441] = v25;
new C11();
let v28 = -35797;
v28 = -53795;
try {
    C11.f = v7;
} catch(e31) {
}
try { new WeakMap(); } catch (e) {}
const v34 = new WeakMap();
try { v34.delete(v8); } catch (e) {}
const v36 = [104762.14753807266,-279097.1642774454,5.0,1.0];
const v37 = [2.220446049250313e-16,0.4676436969349189,1.5179111745363469e+308,-1000.0,-2.220446049250313e-16,-1000000000000.0,4.0,4.587029279807309,-0.0];
v37.toString = f1;
let v40 = 22;
const v41 = v40++;
const v43 = new Uint8Array(v40);
v43[18];
Int32Array.prototype = Int32Array;
const v47 = new Int32Array(3289);
function f48() {
    const v50 = ([13,-2103725161,15240,-9223372036854775807,1077763702,256,-1024,9,1073741823,-2])[4];
    v50 | v50;
    return v41;
}
Object.defineProperty(v47, "toString", { configurable: true, enumerable: true, value: f48 });
const v53 = [v47];
const v55 = Reflect.apply(v36.join, v43, v53);
try { v55.bold(); } catch (e) {}
class C57 extends Int32Array {
    [Set] = true;
    [v37];
}
new C57();
let v2 = -990373415;
class C3 {
    #c;
    constructor(a5, a6) {
        try {
            const t5 = -9007199254740990;
            t5.#c /= a5;
        } catch(e8) {
        }
    }
    static 3301985676;
    static 10;
}
const v9 = new C3(-1684921933, v2);
const v10 = new v9(v2, v2);
new C3(-9007199254740990, C3);
class C18 {
    static toString(a20, a21) {
        a20[1] += 6;
        a20?.[a20];
        return a20;
    }
    get e() {
        try {
            super.h = this;
        } catch(e24) {
        }
        try {
            v2 |= -268435456;
        } catch(e25) {
        }
        return C3;
    }
}
C18.length = C18;
const v26 = new C18();
function f27(a28) {
    16 ^ 16;
    return -1684921933;
}
v26.constructor = f27;
const v31 = v10?.constructor;
let v32;
try { v32 = new v31(); } catch (e) {}
const t44 = -268435456;
t44.b = v32;
const v33 = new C18();
v33.valueOf = f27;
const v34 = v33?.__lookupGetter__;
try { new v34(v32); } catch (e) {}
new C18();
try { ("p").padEnd(v33); } catch (e) {}
const t52 = "40089";
t52[2] = "40089";
function F41() {
    if (!new.target) { throw 'must be called with new'; }
    const v43 = this?.constructor;
    try { new v43(); } catch (e) {}
}
new F41();
const v46 = ("multiline")?.constructor;
try { new v46(); } catch (e) {}
try { new v46(); } catch (e) {}
("multiline")[-1];
let v51;
try { v51 = Math.acosh(Math); } catch (e) {}
v51 - v51;
1.7976931348623157e+308 & 1.7976931348623157e+308;
Math.log1p(+1.7976931348623157e+308);
