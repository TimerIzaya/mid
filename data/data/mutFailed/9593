const v6 = [1000000.0,1000.0,414.34454224186175,1000000.0,-0.0,0.17502832110099553];
const v7 = [-2.220446049250313e-16,-5.658416867612248,-0.0,-1000000.0,-1.733923282379378e+308,4.0,973015.7386630233,-0.0];
const v8 = [0.2578030015179539,3.0,-2.220446049250313e-16];
function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = this;
    try {
        this.c = a12;
    } catch(e13) {
    }
    try {
        this.f = v8;
    } catch(e14) {
    }
    try {
        this.h = v7;
    } catch(e15) {
    }
}
const v16 = new F9(-2n, v6);
const v17 = new F9(2147483649n, v7);
new F9(16n, v8);
v6 / v17;
v8[v16];
new BigInt64Array(2769);
new Uint16Array(2);
new BigInt64Array(1073741824);
const v31 = new Map();
function F32(a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    function f36(a37) {
        const o40 = {
            set b(a39) {
            },
        };
        return a37;
    }
    this.constructor = Map;
    const v41 = this?.constructor;
    try { new v41(); } catch (e) {}
    const o44 = {
        0: "1ya",
        162: "1ya",
    };
    o44[1073741824] = -2n;
    const v47 = -Infinity;
    Math.sqrt(Uint16Array);
    Math.tan(v47);
    Math.cbrt(BigInt64Array);
}
const v51 = new F32(F32, v31);
const v52 = new F32(Map, Map);
new F32(v51, v52);
let v54 = 16;
v54--;
const v57 = new Int8Array(v54);
v57.toSorted(F9, Int8Array, 10n);
