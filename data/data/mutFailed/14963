-Infinity;
const v8 = new Array(2137);
function f14() {
    return 0.29461589182810477;
}
3 | "o";
const t5 = -268435456;
t5[6] = v8;
let v16 = -1547267477n;
try {
    v8.f = -4294967297n;
} catch(e18) {
}
Array.__proto__;
const v21 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v22 = [601759695];
const v23 = [1073741824,1073741823,1376142744,1073741825];
function f25(a26, a27, a28, a29) {
    const v30 = a28 | a28;
    arguments[2] = arguments;
    function f32() {
        const v34 = ("Vre").toLocaleUpperCase;
        try { v34.toString(); } catch (e) {}
        let v36;
        try { v36 = v34(a28, "Vre", a26); } catch (e) {}
        const v37 = ("Vre").fixed(v36, -4294967297n, a26);
        v37[6];
        const v39 = v37.codePointAt();
        let v41 = -268435456;
        const v42 = v41--;
        v42 % v42;
        const o63 = {
            "c": -4294967297n,
            [522675525n](a45, a46) {
            },
            ..."Vre",
            "maxByteLength": -128,
            "arguments": v22,
            [v39]: v16,
            __proto__: a28,
            "d": v42,
            "e": -4294967295,
            "h": -128,
            valueOf(a48, a49) {
                return a27;
            },
            ...v23,
            "f": v30,
            "a": v36,
            ...arguments,
            ...v21,
            "e": v30,
            "e": v41,
            "maxByteLength": -4294967295,
            "arguments": v21,
            ...v22,
            "type": "Vre",
            ..."Vre",
            valueOf(a51, a52) {
                return -4294967295;
            },
            "c": v41,
            "type": "Vre",
            "type": "Vre",
            [v21](a54, a55, a56) {
            },
            o(a58) {
                return a58;
            },
            "type": "o",
            "type": "129",
            toString(a60, a61, a62) {
            },
        };
        return arguments;
    }
    Object.defineProperty(v21, 6, { writable: true, configurable: true, enumerable: true, set: f25 });
    v16 = a27;
    new Uint32Array(3605);
    new Float32Array(80);
    new Int32Array(255);
    f32();
    %OptimizeFunctionOnNextCall(f32);
    return a28;
}
for (let v74 = 0; v74 < 5; v74++) {
    f25(v22, v74, v74);
}
function f76(a77, a78, a79, a80) {
    const v82 = new BigUint64Array();
    function F83() {
        if (!new.target) { throw 'must be called with new'; }
        try {
            Object.defineProperty(v82, 0, { writable: true, value: 4096 });
        } catch(e86) {
        }
    }
    const v87 = new F83();
    try { v87.constructor(); } catch (e) {}
    return -128;
}
for (let v89 = 0; v89 < 10; v89++) {
    f76();
}
%OptimizeFunctionOnNextCall(f76);
f76();
