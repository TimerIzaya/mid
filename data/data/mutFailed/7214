class C3 {
    valueOf(a5) {
        /\xf0\x9f\x92\xa9[x]+/vms;
        /(2foo(?<=bar)bazhabc+?)/gudy;
        /W\u0060/gvm;
        new Float64Array(64);
        new BigUint64Array(64);
        new Int16Array(5);
        return 1000000000000.0;
    }
}
const v18 = new C3();
const v19 = v18?.constructor;
let v20;
try {
const t0 = -2.0;
v20 = new t0();
} catch (e) {}
const v21 = new v18();
const v22 = v21?.valueOf;
const v23 = v22.length;
let v24;
try { v24 = new v22(1000000000000.0); } catch (e) {}
new C3();
const v26 = C3?.constructor;
try { new v26(); } catch (e) {}
const v29 = ([v21,v19,v18])?.__defineGetter__;
let v30;
try { v30 = new v29(v22, -2.0); } catch (e) {}
[v30,1000000000000.0];
const v32 = v24?.filter;
let v33;
try { v33 = new v32(v22); } catch (e) {}
const v34 = [1000000000000.0,1000000000000.0,-2.0,v33];
v34[3] = v34;
try { v34.flatMap(C3); } catch (e) {}
-2.220446049250313e-16 >>> 1000000000000.0;
-2.220446049250313e-16 * -2.220446049250313e-16;
-9007199254740992 % v23;
const v45 = v20.name;
try { v45.toWellFormed(); } catch (e) {}
Uint32Array.prototype = -9007199254740992;
2 + 2;
const v54 = -9007199254740992 & -4;
-1.3832922122240728e+307 + -1.3832922122240728e+307;
-1.3832922122240728e+307 >> v54;
try { v34.pop(); } catch (e) {}
v26 << C3;
