const v3 = [15,9223372036854775807,256,7679];
const v4 = [4294967297,281829337,-65535];
const v5 = [-1285380324,-4294967295,104671531,-1044664818,-7,8,1732478996,9223372036854775807,11013];
("Vre").codePointAt([-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0]);
const v12 = ("-1723624938").slice(9, "g");
const v13 = v12.normalize();
class C14 {
    constructor(a16, a17) {
        a17.sup(v13, "-1723624938").toLocaleLowerCase();
    }
}
function F20(a22, a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v5;
    } catch(e26) {
    }
    try {
        this.h = a24;
    } catch(e27) {
    }
    try {
        this.b = v5;
    } catch(e28) {
    }
}
const v29 = new F20(v3, v5, v3, v4);
const v30 = new F20(v4, v5, v5, 408135.52713452955);
new F20(v4, -6.589465111195494, v4, v29);
function F32(a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a35;
    } catch(e36) {
    }
    class C38 {
        static ["-2"];
    }
    function F39(a41, a42) {
        if (!new.target) { throw 'must be called with new'; }
        this.c = a42;
    }
}
new F32(v3, 408135.52713452955);
new F32(v29, -6.589465111195494);
new F32(v30, -6.589465111195494);
new Set();
function F48(a50) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a50;
}
const v51 = new v12();
function F52(a54, a55, a56) {
    if (!new.target) { throw 'must be called with new'; }
    const v57 = [-700765.6455759181,-1.0,-1e-15,238.56580086181475,-6.99438605118472e+307,0.8641795299038513,1000000000000.0,0.6448161003466354];
    new Uint32Array(2128);
    for (let v64 = 0; v64 < 100; v64++) {
        const o66 = {
            [-9007199254740991]: 512,
            [this]: v57,
        };
        const o67 = {
        };
        const o69 = {
        };
        gc(o69);
    }
    [];
    [-4563];
}
new F52(v51);
