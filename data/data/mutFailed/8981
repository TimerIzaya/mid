const v0 = [];
function f1() {
    const o28 = {
        valueOf(a3, a4) {
            if (a3 >= v0) {
                function f6() {
                    return a4;
                }
            } else {
                let v8 = 10;
                const v10 = v8++;
                Math.floor(a4);
                a4 + 1000.0;
                let v13 = !1000.0;
                v10 - 1000.0;
                a4 + v10;
                v13--;
            }
        },
        set e(a18) {
        },
        [v0]: v0,
        "h": f1,
        "d": v0,
        __proto__: v0,
        "h": f1,
        set b(a20) {
        },
        /*
        __proto__: v0,
        */
        valueOf(a22, a23) {
            return f1;
        },
        "g": v0,
        "e": v0,
        10: v0,
        "c": f1,
        [v0]: v0,
        "f": v0,
        "b": v0,
        "a": v0,
        ...v0,
        valueOf(a25, a26) {
            return this;
        },
        "b": f1,
        get g() {
            return v0;
        },
    };
    return o28;
}
const v29 = f1();
const v30 = f1();
const v31 = f1();
const v33 = [[v0,v31,v0],v0,v0];
[v31];
const v36 = v30["valueOf"](v33, f1, ..."valueOf", v31);
let v37 = f1();
class C38 {
    [v29];
    constructor(a40) {
        v37 **= v37;
        try {
            const o41 = {
            };
            a40.fuck(f1, o41, v37, false);
        } catch(e44) {
        }
    }
    #a = v0;
}
const v45 = new C38(v33);
new C38(v45);
const v47 = new C38(C38);
[[v29,[v29,v37,v45,v47]]];
try { v36(v47, v0); } catch (e) {}
const v52 = v37 >= v33;
%VerifyType(f1);
v33[f1];
f1 && v52;
const v57 = new v52(4);
new Uint8ClampedArray(v57);
