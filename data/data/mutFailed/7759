new Date();
const v3 = new WeakMap();
let v8 = 10n;
class C10 extends WeakMap {
    get c() {
        try {
            v3.c = Date;
        } catch(e15) {
        }
        v8 %= -17251n;
        try {
            Date();
        } catch(e17) {
        }
        return v3;
    }
    constructor(a19, a20, a21) {
        super(v3);
        a21 < Date ? a21 : Date;
        const o26 = {
            "maxByteLength": 129,
        };
        const v28 = new SharedArrayBuffer(129, o26);
        new Float32Array(v28);
    }
}
const v31 = new C10(v8, 3, -15n);
const v32 = new C10(-15n, v31, 3);
for (let v33 = 0; v33 < 73; v33++) {
    v33 >>= -5;
    let {"c":v34,} = v32;
    try {
        v34.length = 165;
    } catch(e36) {
    }
}
new C10(v8, v32, v31);
const v40 = new Float32Array();
v40["copyWithin"](..."-11838");
