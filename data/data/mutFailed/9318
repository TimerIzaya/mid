const v5 = new BigUint64Array(64);
new Uint8ClampedArray(256);
const v10 = 3 + 3;
try { new BigUint64Array("-1024", v5, v5); } catch (e) {}
new BigUint64Array(3, BigUint64Array, BigUint64Array);
649 | 649;
const v17 = new Int16Array(649, 3, v10);
v17[603];
let v19 = 3;
v19--;
let v22;
try { v22 = new Uint32Array(256, "-1024", 256); } catch (e) {}
try { v22.with("callee", "callee"); } catch (e) {}
const v24 = new Uint32Array(649);
try { v24.join(v5); } catch (e) {}
const v26 = v24[274];
v26 % v26;
const v29 = String.match;
Symbol.for(v29.description);
Symbol.for(v29.description);
const t18 = "h";
t18[v29] = v29;
2119 - 2119;
2119 & 2119;
const o40 = {
    "maxByteLength": 2119,
};
o40.maxByteLength;
const v43 = new SharedArrayBuffer(255, o40);
const v44 = v43?.constructor;
v44.prototype;
try { new v44(o40); } catch (e) {}
const v48 = new Uint8ClampedArray(v43);
v48[3] = v48;
v48[8] = v48;
new Uint8Array(512);
try { new Date(v19, Uint32Array, "callee", v19, Uint32Array, Date, v19); } catch (e) {}
const v55 = new Date();
v55.setSeconds(v55, "jFd1");
