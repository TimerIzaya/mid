function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a11;
    } catch(e13) {
    }
    try {
        59817n < undefined;
        class C17 {
        }
        class C19 extends C17 {
            constructor(a21, a22, a23, a24) {
                super(-5.970620995673848);
            }
        }
        this.d = 127;
    } catch(e25) {
    }
}
const v26 = new F9(-0.0, 255n);
new F9(-0.0, -12n);
new F9(-0.0, -2147483647n);
function f29() {
    0 < 9;
    const v38 = new Int16Array(16);
    v38[10] = -9007199254740992;
    const o95 = {
        ["constructor"]: "constructor",
        2: 4.0,
        ...127,
        "f": "rN",
        __proto__: "rN",
        "g": 4.0,
        "h": "rN",
        m(a41, a42) {
            const v45 = new BigUint64Array(1000);
            const o46 = {
                ...v45,
            };
            a41[this] = "constructor";
            Array();
            class C52 {
                static #a;
                static n(a54, a55) {
                    const v56 = super.d;
                    try { v56(); } catch (e) {}
                    return a54;
                }
                [1];
                static [1] = 255;
                [255];
                constructor(a59, a60) {
                    function f63(a64, a65, a66, a67) {
                    }
                    for (let v68 = 0; v68 < 500; v68++) {
                        f63();
                        try {
                            a59 &= -969736.5678795932;
                        } catch(e70) {
                            const v72 = new Uint32Array();
                            const o77 = {
                                [v72](a74, a75, a76) {
                                },
                            };
                        }
                    }
                }
                f = -65536;
            }
            const v78 = new C52();
            const v79 = new C52();
            let v81 = -65536n;
            let v83;
            try { v83 = v78.m(1n, 10000n, 10000n, 1); } catch (e) {}
            function f84(a85, a86, a87) {
                let v88;
                try { v88 = v83(a86); } catch (e) {}
                v88 = a87;
                v81 >>= a87;
                v78[10] = 1n;
                v79.f;
                return v81;
            }
            const v92 = ("gYPHN").normalize("NFKD");
            try {
                ("constructor").localeCompare(v92);
            } catch(e94) {
            }
            return v92;
        },
    };
    return o95;
}
const v96 = v26();
const v97 = f29();
const v98 = f29();
class C99 {
    #h = C99;
    static #e;
    constructor(a101, a102) {
        for (let i104 = 0; i104 < 9; i104++) {
            Object.defineProperty(v98, f29, { set: f29 });
            v97[i104] **= a101;
        }
    }
}
new C99(v97, v96);
new C99(v98, v96);
new C99(C99, v98);
try {
const t0 = 0.44967380041772886;
t0();
} catch (e) {}
const v116 = /((?<=a))/gudm;
const v117 = /gk4b*/vmsy;
let v119;
try {
const t0 = -1.3832922122240728e+307;
v119 = t0(2);
} catch (e) {}
for (let v120 = 0; v120 < 5; v120++) {
    try { v119(v116, v120, v117); } catch (e) {}
}
