function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 1276799506;
    } catch(e3) {
    }
    try {
        this.a = 1276799506;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
const v7 = new F0();
class C8 extends F0 {
    static toString(a10, a11) {
        super[this];
        Object.defineProperty(this, -2, { value: v7 });
        return "EPSILON";
    }
    e = v7;
    #g = v6;
}
const v16 = new C8();
const v17 = new C8();
new C8();
const v19 = new C8();
const v20 = v17[3];
let v21 = v16[v20];
let v24 = 1063822765 - 1063822765;
++v24;
-v5;
for (let v30 = 0; v30 < 25; v30++) {
    function f31() {
        return v30;
    }
    v21 += C8;
    try { v19["toUTCString"](2, v20); } catch (e) {}
    const v37 = [601759695];
    const v38 = [1073741824,1073741823,1376142744,1073741825];
    function f39(a40, a41, a42, a43) {
        const v44 = f31();
        [v44,v44];
        BigUint64Array * 536870887;
        let v50;
        try { v50 = v38["find"](..."find", a43, ...v37); } catch (e) {}
        return v50;
    }
    for (let v51 = 0; v51 < 10; v51++) {
        f39(v51, v51, v38, f39);
    }
}
