function f2() {
    function f3() {
        const v5 = new Uint32Array();
        const v6 = [512,7,-1073741824];
        const o7 = {
        };
        function f8(a9, a10) {
            return BigInt64Array;
        }
        o7.set = f8;
        const v13 = new Proxy(v5, o7);
        v13.__proto__ = v6;
        return 3;
    }
    return f3;
}
Object.defineProperty(Float32Array, "toString", { writable: true, configurable: true, enumerable: true, get: f2 });
const v14 = new Float32Array(3);
const v17 = new Float32Array(2969);
const v20 = new Float32Array(0);
function f21(a22, a23) {
    const o38 = {
        ...v17,
        [a22]: a22,
        "h": a23,
        [v14]: f21,
        [f21]: 0,
        valueOf(a25, a26, a27, a28) {
            new Uint32Array(50179);
            new Float64Array(1309);
            new Uint8ClampedArray(9);
            return a25;
        },
        "c": 2969,
        __proto__: v14,
        [a23]: 0,
    };
    return o38;
}
const v39 = f21(3, 3);
const v40 = f21(3, 3);
const v41 = f21(0, 2969);
function f42() {
    return v41;
}
class C43 {
    #c;
    #b;
    constructor(a45, a46, a47, a48) {
        try {
            a47.toLocaleString();
        } catch(e50) {
        }
        super.b;
    }
    static [v14];
    static #p(a53, a54) {
        try {
            v40.valueOf(/A\P{sc=Greek}h[\cZ]*/udsy, f42);
        } catch(e57) {
        }
        return a53;
    }
    static d = v17;
    #a;
    #d;
    #g = 2969;
    static [Float32Array] = v39;
}
new C43(Float32Array, 2969, v17, v40);
new C43(Float32Array, 3, v20, v39);
new C43(Float32Array, 3, v14, v39);
function f62(a63, a64) {
    function f65() {
        return f65;
    }
    const o67 = {
        [f65]() {
        },
    };
    return a64;
}
BigInt64Array.constructor = f62;
const v68 = BigInt64Array.constructor;
Symbol.isConcatSpreadable.description.fontsize(Uint8Array).trimStart(Array);
const v77 = Array(670);
try { v77.groupToMap(v68); } catch (e) {}
