const v3 = /u/uim;
function f4() {
    function f5(a6, a7) {
        class C8 {
        }
        Date.parse([C8,C8,C8]);
        const v12 = new Date();
        v12.setDate();
        return -1896702866n;
    }
    return f5;
}
function f14(a15) {
    v3.unicode;
}
Object.defineProperty(v3, Symbol.iterator, { writable: true, enumerable: true, get: f4, set: f14 });
/[\c~]/gisy;
/F(ab)\1(\2)(\1)/gvimsy;
class C21 {
    m(a23, a24) {
        for (const v25 of a24) {
            v3[v25] = -1896702866n;
            class C26 {
                constructor(a28, a29) {
                    const o31 = {
                        84: arguments,
                    };
                }
            }
            try {
                v25.length = 2;
            } catch(e33) {
                const o34 = {
                };
                return o34;
                function F35() {
                    if (!new.target) { throw 'must be called with new'; }
                }
                const v37 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
                class C38 {
                    constructor(a40, a41, a42, a43) {
                        a42[5];
                        const v45 = this.constructor;
                        try { new v45(v37, F35, a42); } catch (e) {}
                        v37 >>> a41;
                    }
                }
            }
        }
        return -1896702866n;
    }
}
const v48 = [];
function f49() {
    const o53 = {
        toString() {
            super[this];
        },
        ...v48,
        n() {
            return this;
        },
    };
    try { o53.n(); } catch (e) {}
    return v48;
}
C21.prototype = C21;
new C21();
const v56 = new C21();
let v57;
try { v57 = v56.m(v3, v3); } catch (e) {}
new C21();
Uint32Array.e = Uint32Array;
const v61 = new Uint32Array(11);
v61.toString = f49;
v61[4] = v61;
new Float64Array(146);
127 !== 127;
new Int16Array(127);
const v69 = [3.0,NaN,-1000000000.0,595974.7516182172,-1e-15,0.6881218471964052];
try { v69.fill(v57); } catch (e) {}
v69[16] = 2.220446049250313e-16;
delete v69[2.0];
