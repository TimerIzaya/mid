const v1 = new Map();
function f2() {
    class C3 extends Map {
    }
    const v4 = new C3();
    return v4;
    return v1;
}
Object.defineProperty(v1, "valueOf", { writable: true, value: f2 });
function f8(a9, a10) {
    a10 << a10;
    const o40 = {
        __proto__: v1,
        "b": v1,
        set d(a13) {
            function f14(a15) {
                const v17 = new BigUint64Array();
                function F18() {
                    if (!new.target) { throw 'must be called with new'; }
                    try {
                        let v20 = 0;
                        v20 * v20;
                        for (let i = 0; i < 5; i++) {
                            v17.entries();
                            const v23 = v20++;
                            v23 ^ v23;
                            v20 < 5;
                        }
                        new F18();
                    } catch(e28) {
                    }
                }
                return 4096n;
            }
            this.valueOf = f14;
            let v29;
            try { v29 = a13(this); } catch (e) {}
            a10 >= a13 ? a10 : a13;
            const o32 = {
            };
            try {
                o32.c = v29;
            } catch(e33) {
            }
            try {
                const o34 = {
                };
                o34.c = v29;
                o34.f = v29;
            } catch(e35) {
            }
            try {
                const o36 = {
                };
                Object.defineProperty(o36, "g", { enumerable: true, value: v29 });
                o36.c = v29;
                o36.f = v29;
                o36.g = a9;
            } catch(e37) {
            }
            try {
                const o38 = {
                };
                o38.c = v29;
                o38.f = v29;
                o38.g = a13;
            } catch(e39) {
            }
        },
    };
    try { o40.clear(); } catch (e) {}
    return o40;
}
f8(-57547n, 4096n);
const v43 = f8(4096n, 4096n);
v43.d = v43;
const v44 = f8(-14114n, -57547n);
v44.b = v44;
let v48 = -6n;
const v49 = v48--;
function f50(a51, a52, a53, a54) {
    let v55 = -6.50438168344124;
    v55 **= v55;
    const o63 = {
        [v49](a57, a58, a59, a60) {
            eval(a52);
        },
    };
    return o63;
}
for (let v64 = 0; v64 < 10; v64++) {
    const v65 = f50();
    v65.g = v65;
    v65.g = v65;
}
%OptimizeFunctionOnNextCall(f50);
f50(v48, v48, f50, f50);
function f67(a68, a69, a70) {
    a69--;
    a70--;
    const o81 = {
        "b": 1758510495,
        "e": a69,
        p(a74, a75, a76, a77) {
            super.d = a68;
            try {
                this.fuck(a77, a68, 2, -57547n);
            } catch(e79) {
            }
            return a74 instanceof Map;
        },
        [-57547n]: -14114n,
        "h": a69,
    };
    return o81;
}
f67(v44, -57547n, 4096n).b;
f67(v43, -14114n, -57547n);
f67(v44, -14114n, -57547n);
function f86() {
    const v87 = [f86,f86];
    v87.constructor = f8;
    const v88 = v87?.entries;
    try { new v88(); } catch (e) {}
    const v90 = v87.constructor;
    v90.prototype = v90;
    const v91 = v90.isArray();
    !v91;
    return v91;
}
try { f86(); } catch (e) {}
!f86();
const v97 = [-1024,536870889,65536,65536];
function f98(a99, a100) {
    return a99;
}
const v103 = [295968041,v97];
try { v103.values(); } catch (e) {}
const o105 = {
    "arguments": v103,
    "maxByteLength": 512,
    "b": "function",
    "type": "function",
};
new Worker(f98, o105);
