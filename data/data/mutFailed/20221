const v3 = [-3.0];
const v4 = [1.7976931348623157e+308,1e-15,310.7496648784893,9.816818321377461,-794236.7091277596,-9.180246930453904,-2.220446049250313e-16,1.7976931348623157e+308,-740559.3456387891];
const v5 = [703.8129091780049,-1000000000.0,NaN,-7.916395962255671,990.2481831899127];
function f6() {
    const v7 = v3[268435440n];
    v7[10] = v7;
    return v7;
}
v5.toString = f6;
class C8 {
    #f;
    static {
        const v12 = v5 & v5;
        const v13 = v5 & v5;
        !v12;
        Math.sinh(v13);
        Math.log1p(v5);
    }
    static [-4294967297n];
    h = -4294967297n;
    177;
    static 2147483648 = v4;
    b = -4294967297n;
}
new C8();
const v18 = new C8();
new C8();
function F20(a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = -4294967297n;
    try {
        this.f = v18;
    } catch(e25) {
    }
    try {
        this.b = v4;
    } catch(e26) {
    }
}
new F20(v4, 1535177678n, 268435440n);
new F20(v4, -4294967297n, 1535177678n);
new F20(v4, -4294967297n, 1535177678n);
new Map();
Int8Array.cause = Map;
const v34 = new Int8Array(Int8Array, Int8Array);
function f35(a36, a37) {
    return a37;
}
Object.defineProperty(v34, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f35 });
const v40 = [];
class C41 {
}
const v42 = new C41();
v42.constructor = SyntaxError;
const t54 = v42.constructor;
t54(v40, Int8Array);
