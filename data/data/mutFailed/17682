const v2 = new Uint8ClampedArray(128);
const v5 = new Uint8Array(2376);
let v7 = BigInt64Array;
const v8 = new v7(1249);
class C9 {
    constructor(a11, a12) {
        v5[v5] = a11;
        let [v14,v15] = v5.with(1249, v7, a11, Uint8Array, Uint8Array);
        super[v14];
        const v20 = v7++;
        const v21 = !-4294967296;
        Math.ceil(v7);
        v21 * -4294967296;
        Math.asinh(v20);
        Math.asinh(-187099279);
        Math.min(v20);
    }
}
const v27 = new C9(1249, 2376);
const v28 = new C9(128, 128);
const v29 = new C9(2376, 2376);
function f30(a31, a32) {
    const o44 = {
        "a": a31,
        n(a34, a35) {
            const v36 = /S(x)(x)(x)\1*/guim;
            const v37 = /FH[\ca](?<a>(?<b>(?<c>(?<d>.).).).)*/gvims;
            new C9(v36, C9);
            new Date();
            Uint8Array < a35;
            /(?<!a)[l(x)(x)(x)\1*]/udmy;
            return v37;
        },
        "b": a31,
        "g": Uint8ClampedArray,
        ...v2,
        "d": v29,
        __proto__: v28,
        8: v28,
        [a32]: a32,
        ...v27,
        [C9]: v27,
        "f": v8,
        "e": a32,
        "f": 128,
    };
    return o44;
}
f30(1249, 1249);
const v46 = f30(2376, 2376);
v5[f30(128, 2376)];
new f30(v46, v7);
Math.asin(1249);
Math.asin(1249);
Math.tan(1249);
Math.random();
1714580428 * 1714580428;
function f59() {
    function F60(a62, a63) {
        if (!new.target) { throw 'must be called with new'; }
        const v64 = this.constructor;
        try { new v64(); } catch (e) {}
        this.c = Float32Array;
    }
    new F60(f59, F60);
    new F60();
}
Float32Array.toString = f59;
class C69 {
    static [Float32Array] = undefined;
}
