class C3 {
    static #n(a5) {
        const v8 = [this];
        Reflect.construct(a5, v8, a5);
        try { this.valueOf(a5, this, v8, a5, -1000000000.0); } catch (e) {}
        super.e;
        return C3;
    }
    [-1000000000.0] = "-256";
    ["-256"] = "-256";
    static 3807009778;
}
new C3();
new C3();
const v17 = new C3();
new Float32Array(9);
new Int16Array(9);
new Float32Array(20);
class C30 {
    static [-53146] = -53146;
    #d;
    get e() {
        let v32;
        try { v32 = this.toString(); } catch (e) {}
        const v34 = v17.replace;
        v32[v34] = v34;
        return this;
    }
    static #e;
}
let v35;
try { v35 = C30.apply(-53146, 0.6625004038177351); } catch (e) {}
new v35();
new C30();
const v38 = new C30();
const v39 = v38?.constructor;
try { new v39(); } catch (e) {}
"valueOf" == "valueOf";
const v48 = new BigUint64Array(10);
Float64Array.name;
for (const v51 in v48) {
    try { v51.blink(); } catch (e) {}
    new Float64Array(2147483647);
}
class C54 {
}
const v55 = C54?.constructor;
try { new v55("valueOf"); } catch (e) {}
new C54();
