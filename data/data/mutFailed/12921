const v0 = [];
function f1() {
    return v0;
}
[-6,-9223372036854775807,15];
[3,2147483647,41573,64];
[-29520,-7674,-1887039121,0,-9223372036854775807,11,-256,65537,1398271495];
("Vre").codePointAt(1738562403);
function f11(a12, a13) {
    Math.tanh("1");
}
class C20 {
    toString() {
        [0.42610628000409834];
        [0.1916863927637561,5.0,-1000000.0,-1000000000000.0,-2.2250738585072014e-308,786167.582370504,221250.34918176057];
        [2.0,121972.82426161831,1.0,1000.0,1.586101720587471e+308,682084.812556563];
        return undefined;
    }
    #n() {
    }
    n(a27) {
        this[a27] = 712964594;
    }
    #f;
    static [undefined] = undefined;
    536870887;
    static #d = undefined;
}
const v28 = new C20();
new C20();
const v30 = [];
class C31 {
    [v30];
    set a(a33) {
        a33 === v30 ? a33 : v30;
        [v30,a33,a33,v30];
        [v30];
        [a33,v30,v30,v30,v30];
    }
    static [v30];
    #f;
    h = v30;
}
new C31();
const v40 = new C20();
class C41 {
    static #c;
    set c(a43) {
        try {
            v28.__proto__ = v40;
        } catch(e44) {
        }
    }
    constructor(a46, a47, a48) {
        class C50 extends a47.constructor {
        }
        new C50();
    }
    c = C20;
    static #g;
    #b = undefined;
}
new C41();
new C41();
new C41();
const o58 = {
    [57144]: 4294967296,
};
o58.__lookupSetter__(57144);
new Int16Array(1659);
new Uint8Array(3);
new BigInt64Array(428);
try { C20.log10(); } catch (e) {}
try { v40.toString(Int16Array, BigInt64Array); } catch (e) {}
function f73(a74, a75, a76, a77) {
    for (let [i82, i83] = (() => {
            const v79 = 0 >>> 0;
            v79 % v79;
            return [0, 10];
        })();
        i82 < i83;
        i83--) {
    }
    return f73;
}
f73(f73, f73, -7, -7);
for (let i92 = 0;
    i92 < 7;
    (() => {
        const v96 = /8[\cA]v/uisy;
        v96[Symbol.toPrimitive] = f1;
        const t2 = [3480,1024,-4294967297,-1024,512,65536,29198,-9223372036854775807,-2147483647];
        t2.length = v96;
        i92++;
    })()) {
    new Uint8Array(i92);
}
