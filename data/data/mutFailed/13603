let v1 = "lDvdr";
class C3 {
    [0.7160477132477908] = v1;
    set f(a5) {
        v1 %= this;
        try {
            const t6 = "asUintN";
            t6.valueOf = a5;
        } catch(e6) {
        }
        new WeakSet();
    }
    static 127;
    [v1];
    static 10;
}
C3[127] = C3;
const v9 = new C3();
let v10;
try { v10 = v1("asUintN", v9, C3, 0.7160477132477908); } catch (e) {}
const o11 = {
};
try {
    o11.h = v10;
} catch(e12) {
}
try {
    const o13 = {
    };
    o13.h = v10;
    const t30 = "asUintN";
    t30.e = v10;
} catch(e14) {
}
try {
    const o15 = {
    };
    o15.h = v10;
    v10.e = v10;
    o15.c = C3;
} catch(e16) {
}
try {
    const o17 = {
    };
    o17.f = o17;
    o17.h = v10;
    o17.e = v10;
    o17.c = "asUintN";
} catch(e18) {
}
v9.f;
const v20 = new o11();
const v21 = new C3();
function f22(a23, a24, a25, a26) {
    a25.d = a25;
    a24.a = a24;
    const v27 = a26 == a26;
    v27 && v27;
    const o36 = {
        "e": a23,
        "b": a23,
        __proto__: C3,
        "c": a23,
        get g() {
            Math.sqrt(10);
            -(~a24);
            return a26;
        },
    };
    return o36;
}
f22.caller = f22;
const v37 = f22(v20, v21, v21, "asUintN");
v37.name = 0.7160477132477908;
const v38 = f22(v1, v37, "asUintN", v21);
const v40 = f22(C3, v38, v38, 0.7160477132477908)?.c;
let v41;
try { v41 = new v40(); } catch (e) {}
v41.e = v41;
const v42 = [8,9223372036854775807,129,-3942,9,-56536,22771,268435456,129,3];
let v43;
try { v43 = v42.push(f22); } catch (e) {}
v43++;
[-390990072,512,128,-43389,1414548523,13,-65535,2024931139,120394229];
[1073741824,512,-10024];
function f47() {
    return f47;
}
0.5084298928592244 >>> 0.5084298928592244;
let v51 = 2.220446049250313e-16;
[v51] = "asUintN";
-v42.length;
const v55 = ~v9;
try {
    o11.length = 1791845145;
} catch(e56) {
}
-4 >> -4;
-4 >>> -4;
class C62 {
    static #valueOf(a64, a65, a66) {
        this.f;
        try {
            f47();
        } catch(e69) {
        }
        return a66;
    }
    get f() {
        try {
            v55();
        } catch(e72) {
        }
    }
}
C62.length;
const v74 = new C62();
%PrepareFunctionForOptimization(f47);
%OptimizeMaglevOnNextCall(f47);
try { v74.o(v74, 5, 9007199254740991); } catch (e) {}
