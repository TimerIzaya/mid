const v3 = -12 % -1;
const v5 = new Date(v3);
try { Date.setSeconds(-1, v5); } catch (e) {}
v5.setFullYear(v5, v3, v3);
const v9 = -1.2812240242400745e+308 === -1.2812240242400745e+308;
class C10 {
    static get a() {
        return "byteLength";
    }
    static [-1.2812240242400745e+308];
    static #c;
    static 2000444497 = -0.0;
    static #a = -1.2812240242400745e+308;
}
C10[2000444497] = Date;
const t15 = -1.2812240242400745e+308;
new t15();
try {
const t0 = -1.2812240242400745e+308;
t0(-0.0);
} catch (e) {}
const v21 = new C10();
const v22 = new C10();
const v23 = v22?.constructor;
try { new v23(); } catch (e) {}
const v27 = 18929n >> 18929n;
function f29(a30, a31, a32, a33) {
    a30 + a30;
    a31 | a32;
    Date.prototype = Date;
    class C37 extends v27 {
    }
    const v38 = C37?.UTC;
    try { new v38(null, -1.2812240242400745e+308, -1.2812240242400745e+308, null, a32, null, -0.0); } catch (e) {}
    const v40 = new C37();
    v40.getDay();
    return f29;
}
for (let v42 = 0; v42 < 10; v42++) {
    v42 > v42;
    f29(v42, v42, v42, v42);
}
%OptimizeFunctionOnNextCall(f29);
%VerifyType(v21);
const o45 = {
    "apply": v9,
    "call": f29,
    "construct": f29,
    "defineProperty": f29,
    "deleteProperty": f29,
    "getOwnPropertyDescriptor": f29,
    "has": f29,
    "isExtensible": f29,
    "ownKeys": f29,
    "preventExtensions": f29,
    "set": f29,
    "setPrototypeOf": f29,
};
new Proxy(C10, o45);
const v48 = f29();
try {
    let v50 = 12n;
    v50--;
    2147483649 != 2147483649;
    const v55 = v48(15, v50, 2147483649, -115552.3370707403);
    try { v55(2147483649, v55, v50, v55); } catch (e) {}
} catch(e57) {
}
