const v0 = [9007199254740991,-1073741824,-25026,1682919031];
const v1 = [-30985,28779,-29785,-16,10000,1584563098];
const v2 = [515396001,-27392,-9007199254740992,268435440];
const v5 = new Uint32Array(2523);
v5 ^ 2523;
const v8 = v5["findLast"](v2, v5);
const t4 = "findLast";
t4[4] = Uint32Array;
typeof v8 === "undefined";
new BigUint64Array(3756);
new Uint8ClampedArray(10);
class C18 extends Uint8ClampedArray {
    72;
    static #d = Uint8ClampedArray;
    static #valueOf(a20, a21, a22) {
        function F23(a25, a26, a27) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = this;
            } catch(e28) {
            }
            try {
                this.f = 3756;
            } catch(e29) {
            }
        }
        new F23(a22, a22, a20);
        const v31 = new F23(v1, a22, 2523);
        v31[Symbol.unscopables] = v2;
        ("undefined")[a21];
        v1[F23];
        new F23(a22, a21, 3756);
        return v0;
    }
}
new C18();
new C18();
new C18();
const v40 = [-Infinity];
class C41 {
}
const v42 = new C41();
v40 << v42;
