class C3 {
    static get c() {
        function F5(a7, a8) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = this;
            } catch(e9) {
            }
            try {
                this.d = a8;
            } catch(e10) {
            }
            try {
                this.c = -272611560n;
            } catch(e11) {
            }
        }
        new F5(5n, 5n);
        new F5(5n, -272611560n);
        new F5(-272611560n, 129n);
        return this;
    }
}
new C3();
const v16 = new C3();
new v16();
[1720029362,618898317,-4294967296,-256,-2147483647,-4096,-4096,-7,-9223372036854775807,-2147483649];
[268435441,256,9,127,-2147483648,-9,2,-892283478];
const v20 = [-1134255965,-61921,-3];
function f21() {
    return v20;
}
class C23 {
    constructor(a25) {
        const v26 = this.constructor;
        try { new v26(a25, this); } catch (e) {}
        ("buffer")["search"](..."buffer", ...v16, ..."search", a25, ..."search");
    }
}
new C23(C23);
new C23(C23);
