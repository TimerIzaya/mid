const v1 = new Map();
function f2() {
    return Map;
}
class C3 extends f2 {
    d;
    static 3000394367;
    static #g;
    constructor(a5, a6, a7) {
        class C9 extends a6.constructor {
        }
        new C9();
    }
    static 2;
    /*
    constructor(a12, a13, a14, a15) {
        super();
        super.b;
    }
    */
    static {
        let {"e":v18,} = this;
        function F19(a21, a22) {
            if (!new.target) { throw 'must be called with new'; }
            class C24 extends Date {
            }
            const v25 = [];
            const o29 = {
                toString() {
                    super[this];
                },
                ...v25,
                n() {
                    return this;
                },
            };
            try { o29.n(); } catch (e) {}
            try {
                this.h = a21;
            } catch(e31) {
            }
            try {
                this.c = f2;
            } catch(e32) {
            }
            ~o29;
            const v34 = [601759695];
            function f36(a37, a38, a39, a40) {
                function f41() {
                    return a37;
                }
                const v43 = new Int8Array();
                const v46 = BigUint64Array * 536870887;
                v43.buffer;
                const v48 = new Int8Array();
                try { v48.entries(); } catch (e) {}
                try { v25["find"](..."find", a40, ...v34, ...v25, ...522675525n); } catch (e) {}
                const v53 = new Uint8ClampedArray(v34, v46, 536870887);
                try { v53.findLast(v46); } catch (e) {}
                const o55 = {
                    ...v53,
                };
                return f36;
            }
            try {
                this.a = a21;
            } catch(e56) {
            }
        }
        const v57 = new F19(F19, v1);
        const v58 = new F19(f2, v57);
        new F19(v57, v58);
    }
}
new C3();
new C3();
new C3();
new Date();
gc();
const v69 = new Uint16Array(96);
new Float64Array(v69);
function f72() {
    return v1;
}
[-611984428,40902,-1024,9007199254740990];
[43540,-11,-4294967296,-8,-975629772,9007199254740990,-65536];
[-268435456,1261655916,-2,4294967295,7,1021303800,127,-20663,536870912];
const v81 = [510.2053105196128,0.8358186694591268,1.0,0.543725476488796,-Infinity,5.0,700.6383739635098,Infinity,3.0] ^ "-792442332";
const v83 = new Date();
v83.setUTCMinutes(v81, v81);
