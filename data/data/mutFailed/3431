function f0() {
}
let v3 = 1.618957376670663e+307;
v3 <<= 5.0;
const v4 = f0[65536];
let v5 = this;
v5--;
v4[v4] = 5.0;
function f8(a9, a10) {
    const o11 = {
    };
    return o11;
}
const v12 = f8();
function F13(a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    a15.g = a15;
    const v17 = this?.constructor;
    try { new v17(f8, v12); } catch (e) {}
}
const v21 = [-128,7,-2147483647,14,-44272,4294967296,863586450,64];
const v22 = [-48347,16,-2147483647,1073741824,822166046,15166,-1858102957];
try {
    v21.e = v21;
} catch(e23) {
}
const v26 = new Int16Array(7);
v26["reverse"]();
[-4,4294967296,20080,-14886,-65536];
65536n - 65536n;
1480392397n < 1480392397n;
const v35 = [268435439n,v3,f0,5.0];
[268435439n,v35,f0,v3,v35];
const v38 = [Uint32Array];
function F39() {
    if (!new.target) { throw 'must be called with new'; }
}
const v42 = [1670439861,65536n,v22];
const o46 = {
    ..."44184",
    [-15]: -15,
    2480: 9,
    ..."44184",
};
v42[0] = v42;
function f48() {
    const o57 = {
        [null]() {
            try { this.null(f48, this, this, f48); } catch (e) {}
            const v52 = Array(Array);
            for (let v53 = 0; v53 < 5; v53++) {
                const v54 = v53 || v52;
                v54 ** v54;
            }
            super.b;
        },
    };
    let v58;
    try { v58 = o57.null(); } catch (e) {}
    o57.null();
    return v58;
}
function f60() {
    return f60;
}
v35[0] = 1480392397n;
const o64 = {
    "apply": f60,
    "call": f0,
    "defineProperty": f60,
    "deleteProperty": f8,
    "getOwnPropertyDescriptor": f8,
    "getPrototypeOf": f60,
    "isExtensible": f48,
    "preventExtensions": f60,
    "set": f48,
    "setPrototypeOf": f48,
};
new Proxy(v38, o64);
const t79 = /C/gumy;
t79.constructor = f60;
f48.arguments;
f48();
f48();
