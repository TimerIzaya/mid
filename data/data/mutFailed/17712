class C3 {
    constructor(a5) {
        let v4 = this;
        v4 += v4;
        try {
        const t0 = -400381.5565961945;
        t0(v4);
        } catch (e) {}
        super[a5];
        const v9 = a5 && super.h;
        for (let v10 = 0; v10 < 32; v10++) {
            v9["p" + v10] = v10;
        }
    }
    static #b = 1000000.0;
    a;
}
const v13 = new C3(1000000.0);
const v14 = new C3(-1.7976931348623157e+308);
new C3(1000000.0);
class C16 extends C3 {
    m(a18, a19, a20) {
        new BigInt64Array(10);
        new Uint16Array(127);
        new Uint32Array(83);
        return v13;
    }
    #f;
    static [1000000.0] = C3;
}
const v30 = new C16();
const v31 = new C16();
const v32 = new C16();
function f33(a34, a35, a36, a37) {
    const o54 = {
        toString(a39, a40, a41) {
            try {
                v30.__proto__ = v14;
            } catch(e42) {
            }
            return v14;
        },
        o(a44, a45, a46) {
            if (a37 !== a35) {
                v32[v13];
                [-982506867,-256,64,2147483647];
                [10,5,268435441,-2147483649,-1074601583];
                [9,1000,1700421583,-128,-2147483649,46451,9];
            } else {
                try {
                    super.padStart(v14);
                } catch(e53) {
                }
            }
            return a34;
        },
    };
    return o54;
}
f33(-400381.5565961945, v31, -400381.5565961945, v30);
f33(-400381.5565961945, v13, -400381.5565961945, v13);
f33(-1.7976931348623157e+308, C3, -1.7976931348623157e+308, v31);
function f58() {
}
function f59() {
    return f58;
}
-520531413 >> -520531413;
-65536n + -65536n;
Map.prototype;
const v70 = new Map();
function f72() {
    let v73 = 852.2904873570058;
    const o78 = {
        m(a75, a76) {
            v73++;
            return -520531413;
        },
    };
    return Int32Array;
}
f72();
function f81() {
    return f72;
}
const v82 = /(?:a*)+q(?<a>.)/guds;
function f83(a84) {
    const o86 = {
        get d() {
            return this;
        },
    };
    return f81;
}
for (let [i92, i93] = (() => {
        const v90 = /Aabc|defmxyz{1,}?qMa{0,1}?/gvdis.exec("function");
        try { v90.shift(); } catch (e) {}
        return [0, 10];
    })();
    i92 < i92;
    ) {
    f83(v82);
}
try { v70.set(Map, 512n); } catch (e) {}
try { new BigInt64Array(-9513n, f58, -9513n); } catch (e) {}
const v104 = new BigInt64Array(0);
let v105 = 1024;
let v106 = v105--;
v106++;
try { Int32Array.from(512n); } catch (e) {}
new Int32Array(v105);
const v112 = -9513n != 1;
v112 || v112;
if (v112) {
    try {
        new BigInt64Array(127);
    } catch(e116) {
    }
} else {
    var h = v112;
}
5 ^ 5;
const v123 = new BigUint64Array(5);
let v124;
try { v124 = v123.join(v105); } catch (e) {}
try { v124.replace(Int32Array, f58); } catch (e) {}
Int32Array.length;
-f58;
try {
    v104.f = 0;
} catch(e130) {
}
const v131 = new Int32Array(1);
v131[0];
v131[0] = v131;
new Int8Array(12);
const v136 = [1.5194593916452507e+308,1.7976931348623157e+308,-655.2599062195703,383261.13963534124,-4.351354601083372];
const v137 = [-3.0767450746058422,-109930.30079491576,1.0710997738525917e+308,1e-15,-4.4029859309287245,1.2647620628346297e+308,0.6128308590917888,-1000000.0,-9.043256096114051];
const v138 = [547.1067310983665,-3.0,NaN,222205.6815515987,2.2250738585072014e-308];
try { v138.join(-65536n); } catch (e) {}
function F140(a142, a143, a144) {
    if (!new.target) { throw 'must be called with new'; }
    const v145 = this?.__lookupGetter__;
    try { new v145(12); } catch (e) {}
    a143 + a143;
    try { a144.find(a142); } catch (e) {}
    try {
        this.d = a142;
    } catch(e149) {
    }
    try {
        this.b = a144;
    } catch(e150) {
    }
}
const v151 = F140?.constructor;
v151.length = v151;
let v152;
try { v152 = new v151(12); } catch (e) {}
v152.arguments;
Math.fround();
Math.ceil();
function f159(a160) {
    const o161 = {
        3677: -128n,
    };
    return o161;
}
f159(-1024n);
f159();
f159(-1024n);
function F165(a167, a168, a169, a170) {
    if (!new.target) { throw 'must be called with new'; }
    const v171 = this?.constructor;
    try { new v171(this, a170, a170, this); } catch (e) {}
    a168[3677];
    a169 << a169;
    a170.e = a170;
    try {
        this.e = a167;
    } catch(e175) {
    }
    try {
        this.d = f159;
    } catch(e176) {
    }
}
new F140(Int32Array, 12, v137);
const v178 = new F140(v137, 5, v138);
v178.length;
const v180 = new F140(v136, 12, v136);
v180[65536];
const o183 = {
};
for (let v184 = 0; v184 < 25; v184++) {
}
