class C3 {
    198 = "129";
    constructor(a5) {
        const t3 = "129";
        t3.length *= a5;
        const v6 = this.b;
        let v8 = -53421;
        v8++;
        const v10 = "function" % v6;
        Math.abs(v6);
        v10 - v10;
        v8 ** v10;
    }
}
const v14 = new C3("129");
const v15 = new C3(v14);
new C3(v15);
new Float64Array(1830);
new Uint8ClampedArray(7);
new Uint32Array(1024);
const v26 = [290511.96857215906,0.3003673637544756,-458526.71260649094,0.8333335605081266,16682.170944584184,0.12597720350931985];
const v27 = [2.220446049250313e-16,-3.0,-3.117457405711452,Infinity,2.220446049250313e-16];
const v28 = [-2.220446049250313e-16,8.380618196344006];
class C29 {
    g;
    static charCodeAt(a31, a32) {
        return this;
    }
    static get f() {
        v28[114] <<= v26;
        return v27;
    }
}
C29.e = C29;
new C29();
const v35 = new C29();
const v36 = new C29();
class C37 {
    static #b;
    static get matchAll() {
        v28.toString = v36;
        v26.#b = this;
        return this;
    }
}
C37.b = C37;
const v39 = new C37();
const v40 = v39?.__lookupGetter__;
try { v40(v28); } catch (e) {}
const v42 = new C37();
const v43 = v42?.__lookupGetter__;
try { new v43(); } catch (e) {}
const v45 = new C37();
const v46 = v45?.constructor;
try { new v46(); } catch (e) {}
[v28,[v39,[v39,v45]],v35];
65537 + 65537;
-256;
function f56() {
    return 2720;
}
f56.arguments = f56;
f56.valueOf = f56;
function F57(a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
    a59 * a59;
    const v62 = this.constructor;
    try { new v62(a59, 256); } catch (e) {}
    -a59;
    a60--;
}
function f66() {
    const o68 = {
        "c": Array,
    };
    const t75 = o68.c;
    new t75();
    for (const v73 of Array(4087, Array, Array)) {
        v73 | v73;
    }
    return f66;
}
%PrepareFunctionForOptimization(f66);
f66();
%OptimizeFunctionOnNextCall(f66);
f66();
F57.name;
new F57(65537, f56);
new F57();
class C80 extends F57 {
}
new C80(v26, 256);
new C80();
