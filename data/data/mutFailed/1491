function f0() {
}
const v1 = [128,-1150606964,-5864,-8,-15136,27298,-9223372036854775808,-64357];
const v2 = [-11,5,15,-7998,4294967295,255,-128];
const v3 = [1122774477,50693,-719953562,-35871,1000,-9007199254740990,-1,9007199254740991];
class C4 {
    4164342104;
    static 7 = C4;
    static [C4];
    static d = v2;
    static [v2];
    o(a6) {
        a6 = this;
        function f7() {
            function f8(a9) {
                return f0;
            }
            class C10 extends f8 {
                static #f;
                #b = f0;
                2611855419;
            }
            const o14 = {
                m(a13) {
                    return this;
                },
                __proto__: 946.0676210033328,
            };
            return 946.0676210033328;
        }
        const v15 = [-3.0];
        const v16 = [6.231826122315127,1.7976931348623157e+308];
        const v20 = new Int32Array(2);
        const v23 = new Uint8ClampedArray(1817);
        new BigInt64Array(3211);
        new Uint8Array(v15);
        function* f28(a29, a30, a31, a32) {
            Object.defineProperty(this, "d", { writable: true, configurable: true, get: f7, set: f7 });
            return yield Int32Array;
        }
        f28(this, v15, Uint8ClampedArray, v2);
        const v36 = [34352,4,-9223372036854775808,1092764849,-2147483647,-1162070362,-4294967297,8,-591755449];
        new Uint16Array(v36);
        const v38 = [5.0,-540.2785226982041,-1000000.0,0.0,-2.623802259387602e+307];
        for (let v39 = 0; v39 < 92; v39++) {
            function F40(a42, a43, a44) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.g = v39;
                } catch(e45) {
                }
                try {
                    this.a = a43;
                } catch(e46) {
                }
                try {
                    this.c = v20;
                } catch(e47) {
                }
            }
            new F40(2, 1817, v16);
            new F40(v39, v39, v36);
            new F40(1817, v39, v16);
        }
        const v51 = f0();
        %PrepareFunctionForOptimization(f0);
        const v52 = f0();
        f0();
        %OptimizeFunctionOnNextCall(f0);
        f0();
        function f55(a56, a57, a58, a59) {
            const o60 = {
                ...v38,
            };
            return o60;
        }
        f55(v2, v3, v36, v51);
        f55(v1, f55(v15, v23, v2, v51), v3, v52);
        return this;
    }
    static [v2];
}
new C4();
const v67 = new Int32Array(1024);
for (const v68 of v67) {
    const o71 = {
        "maxByteLength": 1293466293,
    };
    new SharedArrayBuffer(1796, o71);
}
new C4();
new C4();
[-21.60460303815114];
[-0.0,-266030.2378943891,-822327.9290212623,3.6747315280639867,0.0];
[-868.6669796760409,-1.7976931348623157e+308,-7.038629607838991,1000.0,4.932790905119632e+307];
new Set();
new BigUint64Array(13);
new Uint32Array(935);
new Int16Array(1);
const v91 = new BigUint64Array();
const v92 = v91.buffer;
function f93(a94) {
}
v92.constructor = f93;
v92.slice();
gc();
