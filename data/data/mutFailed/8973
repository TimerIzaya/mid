const v0 = [6,55781,-1886136203,1424713853,268435439,-1024,1601739627,-481748653,-1168637393];
const v1 = [34472,3,65536,2147483649];
[2088223088,-4,7,-6521,1448810351,0,127];
function f3() {
    return v0;
}
function F7(a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a10;
    } catch(e11) {
    }
    try {
        this.a = -1597511028;
        new Int32Array(3289);
        try {
        } catch(e15) {
        }
    } catch(e17) {
    }
    try {
        this.b = 1137025934;
    } catch(e18) {
    }
}
new F7(55373, v1);
new F7(-1597511028, v1);
new F7(-1597511028, v1);
function f25() {
}
class C26 {
    constructor(a28, a29, a30) {
        function f31(a32, a33) {
            return a32;
        }
        this[Symbol.toPrimitive] = f31;
        a29[4] = v1;
        for (let v36 = 0; v36 < 25; v36++) {
        }
    }
    /*
    constructor(a39, a40) {
        for (let v41 = 0; v41 < 5; v41++) {
            this["p" + v41] = v41;
        }
    }
    */
}
new C26();
new C26();
class C46 extends f25 {
    constructor(a48, a49, a50) {
        const v51 = /2a\sc/uds;
        function f52() {
            try { v51.test(v51); } catch (e) {}
        }
        v51[Symbol.toPrimitive] = f52;
        super();
        super.f = a48;
    }
}
new C46();
for (let v58 = 0; v58 < 10; v58++) {
    v58 < v58;
}
