class C3 {
    static set g(a5) {
        try { new a5(); } catch (e) {}
        const o7 = {
        };
        function f9(a10, a11) {
            const o12 = {
            };
            return o12;
        }
        const v13 = f9(f9, f9);
        function f14(a15) {
            v13[213];
            return a15;
        }
        f14(f9);
        %OptimizeFunctionOnNextCall(f14);
        new Proxy("9223372036854775807", o7);
        C3.acos(0);
        let v23 = 0 << a5;
        v23--;
        !v23;
        v23 + "9223372036854775807";
    }
    n(a28) {
    }
    #n(a30) {
        a30 = this;
        a30.e >>>= 26878;
        const o34 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o34);
        return this;
    }
}
function f36(a37, a38) {
    try {
        BigInt(-0.9475779989772164);
    } catch(e42) {
    }
    return 26878;
}
Object.defineProperty(C3, "toString", { writable: true, configurable: true, enumerable: true, value: f36 });
const v43 = C3?.constructor;
try { new v43(0.7403547162034507); } catch (e) {}
const v45 = new C3();
let v46 = -7;
v46 - v46;
class C49 {
    constructor(a51, a52) {
        const v53 = this.constructor;
        try { new v53(v53); } catch (e) {}
        this[-2147483648] >>>= v46;
        let v55 = 0;
        while (v55 < 1) {
            const v60 = v46--;
            Math.atan();
            v46 * 7;
            Math.floor();
            const v64 = v60 + 7;
            v64 * v64;
            const v66 = v55++;
            v66 - v66;
        }
    }
}
const v68 = new C3();
const t69 = 0.7403547162034507;
const v69 = new t69();
class C70 {
    #e = v69;
    e;
    static toString(a72, a73, a74, a75) {
        const t75 = "9223372036854775807";
        delete t75?.length;
        return v45;
    }
    static [C3] = C3;
    b = v68;
    #c = 26878;
}
try { new C70(); } catch (e) {}
const v81 = new C70();
new C70();
const v83 = new C70();
v83.f = v83;
v83.f = v83;
C3 % -15n;
function f88(a89) {
    return a89;
}
class C90 extends v81 {
}
try { C90.apply("9223372036854775807", "9223372036854775807"); } catch (e) {}
const v92 = new C90();
v92.constructor = f88;
const v93 = v92?.constructor;
try { new v93(); } catch (e) {}
Object.defineProperty(v92, 2075456563, { get: f88, set: f88 });
