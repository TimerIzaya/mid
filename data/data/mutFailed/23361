const v0 = [];
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v0;
    } catch(e3) {
    }
}
new F1();
new F1();
const v6 = new F1();
false || false;
const v9 = [-65536,7,22847,2147483647];
let v10;
try { v10 = v9.reduce(v6); } catch (e) {}
const v11 = [59121,128,1073741824,-680836489,65536,709108250,60017,3];
let v12;
try { v12 = v11.fill(F1); } catch (e) {}
[9,7,12,9,63857,-9007199254740992,15];
false || false;
let v16 = -268435456;
v16--;
for (let [i44, i45] = (() => {
        for (let i22 = 0, i23 = 10;
            (() => {
                const v24 = i22 < i22;
                const t0 = [-4.0,-1e-15];
                t0[2] = 54004;
                new v12(3375);
                let [v30,,v31,...v32] = v10;
                const v33 = v32?.constructor;
                try { new v33(54004); } catch (e) {}
                return v24;
            })();
            i23 >>> i23, i22++) {
        }
        let v41 = 0;
        return [v41++, 10];
    })();
    i44 < i45;
    i44 > i44, i45++) {
    i44 + i44;
    continue;
}
