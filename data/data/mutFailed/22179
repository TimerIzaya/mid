const v3 = ["string","symbol","string","number"];
["string",["string","number","symbol","number","number"],"symbol"];
class C9 {
    static set c(a11) {
        const v12 = [3,2382,268435440,-9223372036854775807];
        const v13 = [11,-2147483648,16];
        const v14 = [-1901713880,1302536797,268435440,0,-1871091934,9007199254740991,-36191,1073741823,-2];
        try {
            super.toString("symbol", v12, v12, v14, v13);
        } catch(e16) {
        }
    }
    f = -1424262151;
    static h;
    c;
    [v3];
}
new C9();
new C9();
new C9();
class C22 {
    [C22] = 1073741824;
    #o(a24, a25) {
        const v26 = super.h;
        a24 > 1073741824;
        return v26;
    }
    #p(a29) {
        const v30 = super[-1276341520];
        function f31() {
            return v30;
        }
        return 1073741824;
    }
}
new C22();
new C22();
new Map();
try { Map(); } catch (e) {}
const v39 = new Map();
function f40(a41, a42, a43, a44) {
    a43.arguments = a43;
    a41[3];
    a43.caller = a43;
    const o52 = {
        n(a47, a48, a49, a50) {
            for (let v51 = 0; v51 < 10; v51++) {
            }
        },
        16: a41,
        ...v39,
    };
    return o52;
}
const v53 = f40("m", "m", f40);
new Float64Array();
let v56 = 16;
v56++;
let v59;
try { v59 = BigInt64Array(); } catch (e) {}
new BigInt64Array();
const v62 = ~-4294967297n;
v62 ^ v62;
const v65 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v66 = [601759695];
try { v66.sort(v66); } catch (e) {}
v66[0] = v66;
const v68 = [1073741824,1073741823,1376142744,1073741825];
function f70(a71, a72, a73, a74) {
    arguments.toString();
    function f77() {
        const v79 = ("Vre")?.toLocaleUpperCase;
        let v80;
        try { v80 = new v79(); } catch (e) {}
        try { ("Vre").fixed(); } catch (e) {}
        let v83 = -268435456;
        v83--;
        -(v83 + v83);
        const o100 = {
            "c": -4294967297n,
            [522675525n](a88, a89) {
            },
            ..."Vre",
            "maxByteLength": -128,
            "c": v66,
            valueOf(a91, a92) {
            },
            "e": -4294967295,
            "e": v83,
            "maxByteLength": -4294967295,
            "arguments": v65,
            ...v66,
            "type": v80,
            ..."Vre",
            valueOf(a94, a95) {
            },
            ..."Vre",
            4: "Vre",
            "c": v83,
            "type": "Vre",
            toString(a97, a98, a99) {
            },
            6: v83,
        };
        try { o100.valueOf(o100, -128); } catch (e) {}
        return "Vre";
    }
    f77.length;
    f77();
    const v105 = new Int8Array();
    try { v105.findIndex(v53); } catch (e) {}
    %OptimizeFunctionOnNextCall(f77);
    ("find").strike();
    try { v68["find"](..."find", a74, ...v66, ...v68, ...522675525n); } catch (e) {}
}
for (let v110 = 0; v110 < 5; v110++) {
    f70();
}
f70();
%OptimizeFunctionOnNextCall(f70);
v59();
