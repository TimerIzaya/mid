const v2 = new Array(256);
class C3 extends Array {
    static 4096;
    static #c;
    constructor(a5) {
        super(256);
        const v6 = this instanceof a5;
        super[256] = v6;
        const v7 = new Array(256);
        [v6,256];
        [[v7,Array,v7,v2],a5];
    }
    #d = Array;
    [256] = Array;
}
const v11 = new C3(v2);
const v12 = new C3(Array);
let v13 = new C3(C3);
function f14(a15, a16) {
    const o25 = {
        "c": C3,
        "d": a15,
        __proto__: v2,
        "a": a15,
        ...v2,
        "f": C3,
        "h": v11,
        [a15](a18, a19, a20) {
            v13 = v12;
            for (let v21 = 0; v21 < 100; v21++) {
                Array(256);
            }
            try {
                super.catch(a19, a16);
            } catch(e24) {
            }
            return a16;
        },
    };
    return o25;
}
f14(v11, C3);
f14(v12, 256);
f14(v13, v11);
function f32() {
    for (const v36 of Array(4087, Array, Array)) {
    }
    return f32;
}
%PrepareFunctionForOptimization(f32);
f32();
%OptimizeFunctionOnNextCall(f32);
f32();
