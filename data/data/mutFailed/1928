function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 64;
    } catch(e3) {
    }
    this[265749148] = 64;
    let v4;
    try { v4 = F0(); } catch (e) {}
    const o5 = {
    };
    try {
        o5.b = F0;
    } catch(e6) {
    }
    try {
        const o7 = {
        };
        o7.b = F0;
        o7.e = 64;
    } catch(e8) {
    }
    try {
        const o9 = {
        };
        o9.b = F0;
        o9.e = 64;
        o9.f = this;
    } catch(e10) {
    }
    try {
        const o11 = {
        };
        o11.b = F0;
        o11.e = 64;
        o11.g = F0;
    } catch(e12) {
    }
    try {
        this.b = 64;
    } catch(e13) {
    }
    for (let v14 = 0; v14 < 32; v14++) {
        v4["p" + v14] = v14;
    }
    try {
        this.g = F0;
    } catch(e17) {
        try { new e17(v4, F0, 64, F0, o5); } catch (e) {}
        v4 !== this;
        64 >>> v4;
        try { e17["valueOf"](64, "valueOf", F0, F0, "valueOf"); } catch (e) {}
    }
}
new F0();
new F0();
new F0();
new Array(58);
class C38 {
}
async function f39(a40, a41, a42, a43) {
    try {
        new C38();
    } catch(e45) {
    }
    const o46 = {
    };
    try {
        o46.c = a43;
    } catch(e47) {
    }
    try {
        const o48 = {
        };
        o48.c = a43;
        o48.d = "45";
    } catch(e49) {
    }
    try {
        const o50 = {
        };
        o50.c = a43;
        o50.d = "45";
        o50.h = a41;
    } catch(e51) {
    }
    try {
        const o52 = {
        };
        o52.c = a43;
        o52.d = "45";
        o52.a = a40;
    } catch(e53) {
    }
    try {
        Array(129);
    } catch(e56) {
    }
    await C38;
    return a42;
}
f39();
try {
    const v59 = /8X/gvims;
    f39(C38, v59, v59, -2008019999);
} catch(e61) {
}
