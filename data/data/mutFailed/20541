let v1 = 127;
const v2 = new Array(v1);
const v4 = ("getPrototypeOf").blink();
class C5 {
}
class C6 extends C5 {
    ["getPrototypeOf"] = v4;
}
const v7 = new C6();
v7.constructor;
class C9 extends Array {
    constructor(a11) {
        super(v1);
        class C13 {
        }
        const v14 = new C13();
        "536870889" in v14;
        let [...v16] = v2;
        v1 &&= a11;
    }
    1;
    static 0 = v1;
    [v7] = Array;
    a;
    268435440 = v1;
    [Array];
}
new C9(v2);
const v21 = new C9(v1);
const v22 = new C9(C9);
[-1,1073741825,2,26386,2147483648,-16,65537,4294967297,-10,268435440];
const v24 = [-63859,-1133887870,5811,-4,7640,-1,2952];
[1024,-8,64,-12856,-4096,4,-2,15,618077182];
for (let v26 = 0; v26 < 5; v26++) {
    function f27() {
        let v29 = ("Vre").codePointAt(v26);
        let v31 = v29 * v29--;
        v31--;
        return v31 / v31;
    }
    f27();
    %OptimizeFunctionOnNextCall(f27);
}
function F35(a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a37;
    } catch(e39) {
    }
    try {
        this.e = a38;
    } catch(e40) {
    }
    try {
        this.h = a37;
        function f41(a42, a43) {
            const o44 = {
                ...a42,
            };
            return f41;
        }
    } catch(e45) {
    }
}
const v46 = new F35(C9, v22);
new v4(v46, v24);
new F35(v22, v21);
const v50 = [0.0,-2.220446049250313e-16];
let v51;
try {
const t0 = 16;
v51 = t0();
} catch (e) {}
function f52() {
    return f52;
}
class C53 extends f52 {
}
class C54 {
    constructor(a56, a57) {
        /W(jy2)/udy.flags;
        let v62 = v50[v51];
        v62 **= Uint8Array;
        function f63(a64, a65, a66, a67) {
            return a65;
        }
        for (let v68 = 0; v68 < 625; v68++) {
            f63(Uint8Array, 2, v68);
            try {
                a56 &= C53;
            } catch(e70) {
            }
        }
    }
}
const v72 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v73 = [601759695];
const v74 = [1073741824,1073741823,1376142744,1073741825];
function f76(a77, a78, a79, a80) {
    function f82() {
        const o99 = {
            "c": -4294967297n,
            [522675525n](a87, a88) {
                try {
                } finally {
                }
            },
            ..."Vre",
            "maxByteLength": 16,
            "c": v73,
            valueOf(a90, a91) {
                return a79;
            },
            "e": -4294967295,
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v72,
            ...v73,
            "type": "Vre",
            ..."Vre",
            valueOf(a93, a94) {
                return a77;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            toString(a96, a97, a98) {
                return a77;
            },
            5: -4294967295,
            6: -268435456,
        };
        return "Vre";
    }
    f82();
    const v102 = new Int8Array();
    v102.buffer.slice(2147483648);
    %OptimizeFunctionOnNextCall(522675525n);
    let v107;
    try { v107 = v74["find"](..."find", a80, ...v73, ...v74, ...522675525n); } catch (e) {}
    v107 <= a78;
    return arguments;
}
new C54();
new BigInt64Array(243);
const v115 = new Date();
try { v115.setHours(25150n); } catch (e) {}
new C54();
