[];
const v3 = new Int16Array(129);
2 >> 2;
f?.[v3];
const v12 = new Int32Array(2);
const v15 = new Uint32Array(257);
const v16 = v15[197];
const v17 = [-234056.88589442568,2.3097532444775197,5.437863443489823,1000.0,-1000000.0,755770.4556241191,2.0,-5.0,-1000.0,1000000.0];
[6.849445440013504,-3.0,-8.755221569562037];
[0.0,-668933.105822023,-1.5873523918398048e+308,1000.0,-1000000.0,-1000000.0,1000000.0];
const v20 = [65536];
try { v20.sort(257); } catch (e) {}
const v22 = [-694,-6,1073741824,-14,3,11,3,-7,5,-1214514770];
const v23 = [1073741824,-7,-1283755539,-726309105,10,13,-4294967295,12,512,40630];
const v24 = [];
try { v24.groupToMap(v12); } catch (e) {}
function f26() {
    -v24;
    return f26;
}
class C28 {
    static {
        const o30 = {
        };
        const v32 = new Proxy(this, o30);
        const v33 = v32?.toString;
        try { new v33(); } catch (e) {}
    }
    p(a36, a37) {
        let v38;
        try { v38 = new this(a37, this, a36); } catch (e) {}
        super.g = v22;
        return Reflect.construct(v38, [v22,v23], v38);
    }
    a;
}
try { new C28(); } catch (e) {}
new C28();
const v44 = new C28();
const v45 = new C28();
const v46 = [-2.9700017742911022,795135.542646985,938.533418121023,-974148.680744386,-1.7976931348623157e+308,-300.6481185564369];
const v47 = [483707.38277358306];
const v48 = [2.220446049250313e-16,-Infinity,1.278332587799012,711290.6941419018,0.0,-Infinity,-1000.0,2.2250738585072014e-308];
const v49 = [v45,v23,v44];
try { v49.includes(v49); } catch (e) {}
[v48];
[v48,v47,v49,v44,v45];
const v55 = 65535 / 65535;
function f56() {
    -1261703539;
    class C60 {
    }
    try { C60(); } catch (e) {}
    Float64Array.length = Float64Array;
    const v64 = `
        try {
            new Float64Array(127);
        } catch(e66) {
        }
    `;
    let v67;
    try { v67 = v64.toUpperCase(); } catch (e) {}
    let v68 = -65535;
    const v69 = v68 * v68;
    v68 / v68;
    const o160 = {
        __proto__: 352326470,
        next() {
            const v72 = v68--;
            v69 ** 2;
            [7,985766135,536870887,9007199254740991,38603];
            [2147483648,2147483647,-501073491,5,61001,677559095,2,-51014,-1];
            [2027192041,1977620083,-1024,12001,-7,29414];
            try {
                v17.length = v72;
            } catch(e78) {
            }
            const v79 = v68 == 0;
            const o86 = {
                "g": v16,
                "h": 65535,
                [352326470]: v67,
                7: v79,
                ...v49,
                "done": v79,
                "value": v68,
                o(a81, a82, a83) {
                    super[v17 % v55] = v79;
                    let v85;
                    try { v85 = a82(a81); } catch (e) {}
                    return v85;
                },
            };
            return o86;
        },
        ...352326470,
        /*
        __proto__: 1261703539,
        */
        "f": v68,
        m(a88) {
            try { this.next(); } catch (e) {}
            a88.h = a88;
            const o90 = {
            };
            function f91(a92, a93, a94) {
                function f96(a97) {
                    a93[5] ||= f56;
                }
                this.onmessage = f96;
                const v100 = new SharedArrayBuffer(35);
                new BigUint64Array(v100);
            }
            try {
                o90.e = v68;
            } catch(e103) {
                const v107 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v107, o90);
            }
            try {
                const o109 = {
                };
                o109.f = o109;
                o109.e = 1261703539;
                o109.g = a88;
            } catch(e110) {
            }
            -9007199254740991 >>> -9007199254740991;
            -9007199254740991 >> -9007199254740991;
            Math.sin(-9007199254740991);
            class C118 {
                o(a120, a121, a122, a123) {
                    class C124 {
                        static 44 = "EV";
                    }
                    new C124();
                    new C124();
                    new C124();
                    return 0;
                }
            }
            new C118();
            function f131(a132, a133) {
                v46.length;
            }
            new Promise(f131);
            try { new Int8Array(v23, v64, v23); } catch (e) {}
            new Int8Array(3938);
            let v139 = 3;
            v139 / v139;
            const v141 = v139++;
            v141 ^ v141;
            -0;
            const v145 = 0 >> 0;
            for (let i = 0; i < 5; i++) {
                0 < 8;
            }
            const o148 = {
            };
            o148.e = 1261703539;
            try {
                const o149 = {
                };
                o149.f = o149;
            } catch(e150) {
                function F151(a153, a154, a155, a156) {
                    if (!new.target) { throw 'must be called with new'; }
                    a153.propertyIsEnumerable();
                }
                -3 ^ v145;
            }
        },
    };
    try { o160.m(o160); } catch (e) {}
    try { ("nt").substring(v69, v69); } catch (e) {}
    class C164 {
    }
    try { C164.bind(v69); } catch (e) {}
    const v166 = new C164();
    const v167 = v166?.constructor;
    try { new v167(); } catch (e) {}
    Float32Array.b = Float32Array;
    const v170 = new Float32Array(v166, "nt", Float32Array);
    const t183 = "nt";
    const v171 = delete t183[v170];
    let v172;
    try { v172 = v166.floor(v171); } catch (e) {}
    for (const v173 in v172) {
    }
}
f56();
f56();
function f176(a177, a178, a179, a180) {
}
f176.prototype;
function f182(a183, a184) {
    const o187 = {
        set b(a186) {
        },
    };
}
f182.prototype;
function F189(a191, a192, a193) {
    if (!new.target) { throw 'must be called with new'; }
}
try {
} catch(e194) {
}
function F195(a197) {
    if (!new.target) { throw 'must be called with new'; }
}
