function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.constructor(this, this); } catch (e) {}
    a5 >>> a5;
    a6 >> a6;
    try {
        this.d = a5;
    } catch(e10) {
    }
}
function f11() {
    const v13 = [];
    function f14(a15, a16) {
        class C17 {
        }
        5.0 / -2.220446049250313e-16;
        const v25 = new Uint8Array(257);
        class C27 extends Uint16Array {
            constructor(a29, a30, a31) {
                super(v25);
            }
        }
        Math.exp(8);
        Math.log(-23525);
        function f35() {
            return f35;
        }
    }
    v13.constructor = f14;
    return f14;
}
F3[Symbol.toPrimitive] = f11;
function f38(a39, a40) {
    return a40;
    Reflect.construct(a40, [a40,F3,a39,Reflect,9.926163482746198], a40);
    return -550.9034548380407;
}
F3.valueOf = f38;
new F3(9.926163482746198, -550.9034548380407);
const v45 = new F3(9.926163482746198, 9.926163482746198);
v45.c = v45;
const v46 = new F3(-550.9034548380407, -550.9034548380407);
const v48 = Symbol.toPrimitive;
Object.defineProperty(v46, v48, { configurable: true, enumerable: true, value: f38 });
const v49 = /g/uiy;
/[XHa\s]/gum.source;
const v52 = /xyz{1,32}/gims;
class C53 {
    static {
        try { new this(); } catch (e) {}
        1651185506 - 1651185506;
    }
    get h() {
        this.__proto__;
        return -3.0;
    }
}
try { new C53(); } catch (e) {}
const v66 = F3 / v46;
v46[v45] ^= v66;
try {
    C53.valueOf = v66;
} catch(e67) {
}
new C53();
new C53();
const v70 = new C53();
const v71 = v70.h;
-2.220446049250313e-16 <= -2.220446049250313e-16;
class C77 {
}
C77.prototype = C77;
const v78 = new C77();
const v79 = [-2.220446049250313e-16];
const v80 = [8];
v80[0];
const v82 = [-2.220446049250313e-16,v80];
v82[2] = v82;
v82.push(8);
const v84 = ("number").slice();
const v86 = ("1G")["trimEnd"]();
function f87(a88, a89, a90) {
    a90.map = a89;
    try { a88.toLocaleString(); } catch (e) {}
    try { a90.map(a89); } catch (e) {}
    const o93 = {
        ...a90,
        268435441: v78,
    };
    function f94() {
        try {
            f87(NaN, v49, v52);
        } catch(e97) {
        }
        return -2.220446049250313e-16;
    }
    o93.valueOf = f94;
    return o93;
}
const v98 = f87(v79, v84, v82);
function f99() {
    return v71;
}
Object.defineProperty(v98, "map", { writable: true, get: f99 });
function f100() {
    return v48;
}
function f101(a102) {
    let v104 = 22873;
    let v106 = (a102 & a102) & v104;
    const v107 = ++v106;
    v104++;
    Math.log2(v104);
    Math.expm1(v107);
    a102 ** v106;
}
Object.defineProperty(v98, 2597153494, { enumerable: true, get: f100, set: f101 });
v98[2597153494] = v98;
try { v80.findIndex(v86, v84); } catch (e) {}
v79.length;
536870887 >>> 536870887;
const v118 = f87(v86, v86, v98);
v118[2] = v118;
