class C3 {
    static h;
    static get a() {
        try {
            this.__proto__ = this;
        } catch(e5) {
        }
        return super[1000000000000.0] % -1000000000.0;
    }
    [1000000000000.0];
    static [321680.8063953519];
    [321680.8063953519] = 1000000000000.0;
    static [1000000000000.0] = 1000000000000.0;
}
new C3();
const v9 = new C3();
const v10 = new C3();
let v11 = false;
class C12 {
    5 = 1000000000000.0;
    #g = v9;
    get h() {
        let v13 = this;
        ({"d":v13,"g":v13,"h":C3,} = v13);
        const v14 = v13 ^ v11;
        const v15 = v10[138];
        const v19 = v13--;
        const v20 = v13 + v15;
        v13++;
        Math.log2(v19);
        Math.acosh(v20);
        Math.sin(-42018);
        return v14;
    }
}
new C12();
const v26 = new C12();
delete C12?.d;
const v29 = Symbol.toStringTag;
v10[v29] = v26;
~536870912;
const v33 = v11--;
v29 ^ 536870912;
v29 && C12;
Math.min(v29);
Math.atan2(C12, v33);
new C12();
function f42() {
    return f42;
}
([f42,f42,f42,f42]).flatMap(f42);
const v0 = [-1027291656,-27410,2,536870889,-9,1073741823,1384190856];
const v1 = [512,5,-33629,16];
[38787,-4294967296,1999362188,9007199254740991,1];
const v4 = new Set();
const v6 = v4["clear"]();
class C7 {
    static #e;
    constructor(a9) {
        for (let i12 = 0, i13 = 10; i12 < i13; i12++) {
        }
        try {
            this.#e = this;
        } catch(e21) {
        }
    }
    static {
    }
}
function f25(a26, a27) {
    const v30 = Array(v6);
    const v32 = new Int16Array(127);
    v32.join(v30);
}
const v35 = new Uint32Array(Uint32Array, Uint32Array);
v35.then = f25;
const v37 = new Float64Array(v35, f25, f25);
function f38() {
    return f25;
}
function f39(a40) {
    return Float64Array;
}
Object.defineProperty(v37, Symbol.toPrimitive, { get: f38, set: f39 });
function f47() {
    +Uint8ClampedArray;
    function f50() {
        return v1;
    }
    return v0;
}
const v53 = [-1073741824,-393008115,37190067,-1024,1000,-804470190,-12];
const v54 = v53 === v53;
([v54,v54,v6,v54,v54]).__defineSetter__;
function f57() {
    const o59 = {
        "c": "pR7SG",
    };
    return o59;
}
class C60 extends f57 {
    #toString(a62) {
    }
}
function F64(a66, a67) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = "byteLength";
    } catch(e68) {
    }
    let v74 = "65535";
    function f75(a76) {
        const o77 = {
            "c": a76,
            ...v74,
            "a": a76,
            ["m"]: "m",
        };
        return o77;
    }
    const v78 = f75("m");
    const v79 = f75(v74);
    const v80 = f75("e");
    const v81 = [v74,f75,"e",f75,v74];
    const v82 = [v74,v81,v81];
    const v83 = [v81];
    function f84(a85, a86, a87, a88) {
        const o99 = {
            get e() {
                super[a88] = a87;
                function F90(a92, a93, a94, a95) {
                    if (!new.target) { throw 'must be called with new'; }
                    this.g = a95;
                }
                new a85(this, v79, v81, a88);
                new F90(a88, v80, v82, v74);
                new F90(v78, a86, v82, a86);
                return v83;
            },
        };
        return o99;
    }
    const v100 = f84(v79, v74, "e", v78);
    f84(v78, v78, v100, v78);
    const v102 = f84(v100, v80, "e", v79);
    function f103(a104, a105, a106) {
        function f108(a109) {
            for (let v110 = 0; v110 < 32; v110++) {
                v83["p" + -13] = v110;
            }
        }
        this.onmessage = f108;
        a104 - v80;
        [] = v81;
        try {
            v74 >>>= this;
        } catch(e114) {
        }
    }
    const v117 = [v102,"function",Worker];
    const o118 = {
        "arguments": v117,
        "type": "valueOf",
    };
    new Worker(f103, o118);
    class C120 {
        valueOf(a122) {
            const v123 = (-13)[a122];
            ("valueOf")[-13];
            super.g;
            [-5.046271343915603,9.863109723473777,-3.0,-906515.6071094702,-2.220446049250313e-16,770964.3667593673,-4.421666277721165,0.7298260833449974,0.0,-151.0717219942219];
            [-6.797758004903778,0.11698586043477233,-1e-15,-48.72972050638907];
            [799.6916658529615,Infinity,5.0,29.974371204771842,-2.0,-6.663031035770784e+307,-1.7976931348623157e+308,-1.0,1000000.0];
            return v123;
        }
        static d = -1;
        1390008880 = "valueOf";
        d;
        static #m(a130) {
            for (let v131 = 0; v131 < 5; v131++) {
                const t129 = "valueOf";
                t129["p" + v131] = v131;
            }
        }
        c;
        #h;
    }
}
new F64(-617235343, "string");
const v135 = [];
v0.concat(v0, v135, v135, Symbol);
for (let v138 = 0; v138 < 5; v138++) {
}
new F64(-12, "undefined");
new F64(v6, "undefined");
const v143 = new C7();
Object.defineProperty(v143, Int32Array, { writable: true, configurable: true, enumerable: true, value: C7 });
function f144() {
    const o149 = {
        valueOf(a148) {
            return a148;
        },
        __proto__: Int32Array,
        [-52276]: -410.8373818683839,
    };
    return o149;
}
function F150(a152, a153, a154, a155) {
    if (!new.target) { throw 'must be called with new'; }
    const v156 = ("byteLength").__defineGetter__;
    function f157(a158) {
        return a155;
    }
    v156[Symbol.toPrimitive] = f157;
    v0.constructor;
    try { Symbol(v156); } catch (e) {}
}
new F150();
