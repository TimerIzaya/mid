class C3 {
    p(a5) {
        super[0.2786607956968603] = -1000000000.0;
        return a5;
    }
    #n(a7, a8) {
        this[512];
        -1000000000.0 * a7;
        return 268435439;
    }
}
try { new C3(); } catch (e) {}
new C3();
const v16 = new C3();
function f17() {
    function f18(a19, a20) {
        function f21(a22, a23, a24, a25) {
            function f27() {
                return arguments;
            }
            const v29 = new Int8Array();
            v29.buffer;
            %OptimizeFunctionOnNextCall(f27);
            ("find").codePointAt(f21);
            return arguments;
        }
        for (let v33 = 0; v33 < 10; v33++) {
            f21();
        }
        return -4.0;
    }
    return f18;
}
function f35(a36) {
    delete a36?.[57];
}
Object.defineProperty(v16, "constructor", { writable: true, enumerable: true, get: f17, set: f35 });
const v38 = v16?.constructor;
try { new v38(); } catch (e) {}
const v40 = new C3();
[4.0,1.269389311645332,0.774716017096824,-5.0,-1.0,0.3073308833594759,-Infinity,-1e-15,0.7887140029825034,-1000.0];
const v42 = [5.7513362276061635,0.15619855697729212];
[1.7976931348623157e+308,-1.0,NaN];
function F44(a46, a47, a48, a49) {
    if (!new.target) { throw 'must be called with new'; }
    const v50 = this?.constructor;
    try { new v50(0.2786607956968603, 0.2786607956968603, C3, C3); } catch (e) {}
    a47--;
    try {
        this.d = a49;
    } catch(e53) {
    }
    try {
        this.a = a48;
    } catch(e54) {
    }
}
new F44(v40, 0.2786607956968603, 0.2786607956968603, v42);
const v56 = new F44(v40, 0.2786607956968603, -1000000000.0, 0.2786607956968603);
new F44(v56, -4.0, -1000000000.0, -4.0);
-4.092259470322528 >= -4.092259470322528;
const v63 = new BigInt64Array(256);
v63.includes(undefined);
class C67 {
    static {
        if (-4.092259470322528 <= -4.092259470322528) {
            /Mrn(?:a*)+IhCO/udimsy.__proto__;
            const v72 = (a73, a74, a75, a76) => {
                'use strict';
                return a73;
            };
            -0.05827046316027307 & -0.05827046316027307;
        }
    }
}
try { C67.toString(); } catch (e) {}
Int32Array.length;
function F92() {
    if (!new.target) { throw 'must be called with new'; }
}
Float64Array[Symbol.iterator] = f35;
new Float64Array(Float64Array);
class C103 {
    9;
    [-4294967295n] = 13n;
    get g() {
        this.f >>>= 1;
        const v105 = this[3360579767];
        try {
            super.toSpliced(v105, 13n, v105, 2, -1771000438);
        } catch(e107) {
        }
        return -1771000438;
    }
}
function f109(a110, a111) {
    return a111;
}
const v112 = [];
const v113 = [-6.786788220284745e+307,3.0441372838377454,0.16607240252493405,9.1870148243921,-1.1724672307306477e+307,-1.3233810423722777e+308,0.3268930863961368];
const v114 = [1000000.0,2.0511322290964932e+307];
function f115(a116, a117) {
}
const v118 = f115(v42, v112);
f115(v114, v113);
v114 || v118;
Math.log2(0);
([4.0,1.0,1000000.0,2.220446049250313e-16,533350.8402277301,-2.2250738585072014e-308,1000000.0,1.566394140636886]).toLocaleString();
129 <= 129;
0 & 0;
-65537 * -65537;
const v142 = [-4.0,-3.0,-7.745906537435259,-1.2266228113922306e+308,-Infinity,-2.0,-2.0,1e-15,-694511.6819848374,-2.0];
v142[Symbol.toPrimitive] = f115;
v142 ^ "-792442332";
Math.expm1(-Infinity);
-1000.0;
try { new Int8Array(Float64Array, -220565927, Float64Array); } catch (e) {}
-9223372036854775807 % -9223372036854775807;
0.41428636270946406 ^ 0.41428636270946406;
-6.515712503710309e+307 >> -6.515712503710309e+307;
-5.0 - -5.0;
function f168() {
    return 256;
}
const v170 = [-2.14860426829137,-9.58586124400876,2.0,2.2250738585072014e-308,0.0,-3.0,Infinity,-317.1953498647964,2.0];
class C171 extends Int16Array {
    [v170];
}
