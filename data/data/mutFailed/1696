const v0 = [];
const o1 = {
};
function f2() {
    return o1;
}
function f3(a4, a5) {
    Object.defineProperty(o1, "h", { writable: true, configurable: true, enumerable: true, get: f2, set: f2 });
    return o1;
}
const v7 = new Promise(f3);
function f8() {
    return v0;
}
v7.constructor;
const v15 = new BigInt64Array(4046);
function f17(a18, a19) {
    a18++;
    let o22 = {
        "d": a18,
        ...a18,
        get e() {
            return a19;
        },
    };
    [,...o22] = v15;
    a19[4046];
    const o26 = {
        "maxByteLength": 3035,
    };
    new ArrayBuffer();
    new Float32Array();
    return 115;
}
function F31(a33) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = 1012120461;
    } catch(e34) {
    }
    const o36 = {
        ..."1p",
    };
    const o37 = {
        ...o36,
    };
}
new F31(4294967296);
new F31(9223372036854775807);
new F31(4294967296);
[-1000000.0,3.0,NaN,-Infinity,202.22658662615504];
[0.7788711785888819,4.27777719274739,0.43547268265714123,0.8224513234413882,-8.045168988411108e+307];
[-1000.0,-1000000.0,-9.954144830892317e+307,-Infinity,-3.0,1.3190160210468514e+308,-1000.0,-1000000000.0,-385.67603871736674];
const v49 = new Uint8Array(Uint8Array);
class C51 extends Uint16Array {
    constructor(a53, a54, a55) {
        super(v49);
        const v58 = new Uint16Array(3);
        v58.indexOf();
        ([1073741824,1073741823,1376142744,1073741825]).forEach(Float64Array);
        Uint16Array && Float64Array;
    }
}
new C51();
