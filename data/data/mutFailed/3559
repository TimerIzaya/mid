function f0() {
}
class C1 extends f0 {
    constructor() {
        super();
        this[f0] = this;
        this[f0] <<= this;
        super[this];
    }
    m() {
        this[Symbol.split] = f0;
        const v10 = new Uint8Array();
        v10[Symbol.isConcatSpreadable] = BigInt64Array;
        const v14 = Array(this);
        Array()["concat"](v14, v10);
        new Map();
        this[this] = f0;
        return this;
    }
}
const v19 = new C1();
const v20 = new C1();
new v20();
class C22 {
    static #h = v20;
    static d = f0;
    #m(a24, a25) {
        super.g = f0;
        const v29 = !-37891;
        Math.max(-37891);
        v29 % 1000000000.0;
        +a24;
        return a25;
    }
}
new C22(C22, v20, v19);
new C22();
new C22();
const o44 = {
    [7]: 9,
    get g() {
        return this;
    },
    set g(a43) {
    },
};
