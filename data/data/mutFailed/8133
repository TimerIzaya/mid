const v1 = [];
v1.toSpliced(v1);
const v5 = new Uint16Array(209);
v5.__proto__ = v5;
let v6 = 1829;
v6 = 209;
let v7;
try { v7 = v6(); } catch (e) {}
try { v5.forEach(v7, v7); } catch (e) {}
new BigInt64Array(14);
function F15(a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    a17[4] = a17;
    const v20 = this.valueOf().constructor;
    try { new v20(); } catch (e) {}
    a17[4];
}
new Uint8Array(2);
new BigInt64Array(2795);
const v28 = /(Yd[\cA][^[a-zA-Z0-9]*]*)/uimsy;
/a.abc+hu5a+ba(?!b)/vimy;
/kR8/gvmy;
BigInt.toString = BigInt;
let v32 = 8n;
v32++;
[v32];
class C35 {
}
try {
    const v36 = BigInt(BigInt);
    try {
        v28.h = v36;
    } catch(e37) {
    }
    for (let v38 = 0; v38 < 50; v38++) {
        Array(36862);
    }
} catch(e42) {
}
