[];
-1073741824n;
try { new Uint16Array(-128n, -43399n, -128n); } catch (e) {}
const v8 = new Uint16Array(111);
v8.BYTES_PER_ELEMENT = v8;
const v11 = new BigInt64Array(2887);
v11[2445] = v11;
const v14 = new Uint8ClampedArray(1);
function F15() {
    if (!new.target) { throw 'must be called with new'; }
    function F17() {
        if (!new.target) { throw 'must be called with new'; }
        const v19 = this?.__defineGetter__;
        try { new v19(BigInt64Array, 1073741824n); } catch (e) {}
        for (let v21 = 0; v21 < 25; v21++) {
            const v22 = [601759695];
            const v23 = [1073741824,1073741823,1376142744,1073741825];
            function f24(a25, a26, a27, a28) {
                Math.cos(-1073741824);
                try { v23["find"](..."find", a28, ...v22, ...v23); } catch (e) {}
                return v21;
            }
            try { f24(v14, v14, this, 1); } catch (e) {}
            for (let v35 = 0; v35 < 5; v35++) {
                const v36 = f24();
                v36 / v36;
            }
        }
    }
    new F17();
}
new F15();
