function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -1;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new v4();
new F0();
class C7 extends F0 {
    static #valueOf(a9) {
        v5[v4] = this;
        const v11 = new Map();
        return v11;
    }
    #d;
    static 6;
    [v4] = v4;
    [F0];
}
C7.prototype = C7;
const v12 = new C7();
const v13 = v12?.constructor;
try { new v13(); } catch (e) {}
new C7();
const v16 = new C7();
v16.c = v16;
[2147483649,-868,7,-12359,-1953891907,-9223372036854775807,-2147483649,-4294967297];
const v18 = [-2147483649,6,-383445286,-4294967296,257];
try { v18.join(v12); } catch (e) {}
[-17342,-4294967296,10,-1117764804,-1093623075];
("by").normalize();
