const v5 = new Uint32Array(51);
v5.indexOf(51);
class C7 {
    static #valueOf(a9) {
        function f10() {
            return 8;
        }
        if (C7) {
            a9 < "h";
        } else {
            C7 + a9;
        }
        return a9;
    }
    h;
    [16] = 8;
    5;
    f;
}
new C7();
const v14 = new C7();
v14.p = "h";
const v15 = new C7();
function f16() {
    function f17() {
        return f17;
    }
    return 51;
}
v15.toString = f16;
class C18 extends v5 {
    [v14];
    static {
        const v20 = 16 & v15;
        let v24;
        try { v24 = new C18(v20); } catch (e) {}
        const v25 = v14.__proto__;
        v25.p = "h";
        v15[v24] %= v25;
        try { v14["p"](1e-15); } catch (e) {}
    }
    [8] = v15;
    static [8];
    d;
}
const t45 = 51;
new t45();
const v29 = new C18();
new C18();
async function f32(a33, a34) {
    class C35 {
        [C35] = 10000;
    }
    return a33;
}
v29();
