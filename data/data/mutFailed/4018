function f2() {
    [2.220446049250313e-16,-3.0,799698.2595647816,-0.0,1000000.0,-1000000000000.0,-0.36015756106519525,640141.3073349027,-3.0];
    [-Infinity,-1e-15,-8.775027100356124e+307,-497.2439969743243,-6.72634807154878e+307,-1.5370678963283228e+308,0.6253213773559172,175919.65644043894,0.5970332994389129];
    [5.0,1.7976931348623157e+308,1000000000000.0,693344.0590427038,-250755.4312150795,714.0125748401103];
    return 962;
}
Uint8Array.toString = f2;
const v6 = new Uint8Array(962);
new Float32Array(0);
const v12 = new Uint16Array(255);
function f13() {
    return v12;
}
function f14() {
    try {
        v6.length = 1;
    } catch(e16) {
    }
    return Uint8Array;
}
f13.toString = f14;
let v18 = -1;
class C20 {
    static 7;
    static [v18] = "string";
    #n(a22) {
        a22 = this;
        a22.e >>>= -35417;
        function f24(a25, a26, a27) {
            const o28 = {
                __proto__: this,
            };
            return o28;
        }
        f24(C20, 962, 962);
        f24(0, -35417, 962);
        f24(255, -35417, 0);
        const o34 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o34);
        return this;
    }
}
for (const v36 in v12) {
    f13();
    function f38() {
        return Float32Array;
    }
}
let v39 = new C20();
const v40 = new C20();
const v41 = new C20();
function f42(a43, a44) {
    let v45 = 0;
    do {
        v39 -= v40;
        v45++;
    } while (v45 < 5)
    const o59 = {
        ...a43,
        [a43](a50, a51, a52, a53) {
            [0.8549471140289917,-3.0,4.0,-5.0,-2.0,-1.7976931348623157e+308,5.31145436861636,NaN,1.2778157707013417e+308];
            [-1.7976931348623157e+308,-4.047862669744725e+307,-2.2250738585072014e-308,0.790769162254034,0.024752255798642486,640440.6769019293,-2.0];
            return [923.3408061449261,-6.350919708227568e+307,-2.220446049250313e-16,0.04850379751250988,4.009495502233909];
        },
        ...a44,
        "c": a43,
        "g": v41,
        "a": a43,
        set b(a58) {
            v18 <<= v18;
        },
    };
    return o59;
}
("string")[f13];
let v62 = -62267;
const v64 = v62++;
Math.log(-9007199254740991);
Math.acos(Uint8Array);
Math.tanh(v64);
const v68 = -9007199254740991 || v62;
v68 & v68;
