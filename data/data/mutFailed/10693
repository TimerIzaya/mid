class C3 {
    constructor(a5) {
        let v9 = -13 % -370.7436654551575;
        v9--;
        C3.acosh(-370.7436654551575);
        this.pow(-370.7436654551575, -13);
    }
    static #d = -370.7436654551575;
    b = -370.7436654551575;
    #e;
    d;
    [-6] = -370.7436654551575;
}
const v13 = new C3(-370.7436654551575);
const v14 = new C3(173567829, -6, 173567829);
v14[-6] = -370.7436654551575;
try {
    v13.fuck(173567829, v14, 9007199254740991, -30402n);
} catch(e18) {
}
new C3(v14);
new Uint8ClampedArray(4);
let v26 = 257;
const v28 = new Uint16Array(v26);
new Int8Array(256);
function f32(a33) {
    function F34(a36) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v37 = new F34(F34);
    try {
        const v40 = new Set();
        function F41(a43, a44) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = a43;
            } catch(e45) {
                for (let [v46,v47] of a43) {
                }
            }
            [a43,[a33,a44]];
            v37[[a43,Set]];
            try {
                const v55 = v40[this];
                ([WeakSet,WeakSet])[1];
                new F41(v55, -268435456n);
            } catch(e60) {
            }
        }
        new F41();
        new F41();
        function f63(a64, a65, a66) {
            try {
                new F34(f32);
            } catch(e68) {
            }
            return a65;
        }
        const v69 = f63(5n, 4, 5n);
        new F41();
        function f71(a72, a73, a74) {
            do {
                const o76 = {
                };
                o76.h = v37;
                const o77 = {
                };
                v26++;
            } while (0 < v69)
            return f71(a74, v37);
        }
        f71();
    } catch(e83) {
        for (const v84 of v28) {
            const t74 = -370.7436654551575;
            t74[-1] = a33;
            C3[5n];
        }
    }
    return a33;
}
Uint8ClampedArray();
f32();
