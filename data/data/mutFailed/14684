class C3 {
    static 726793740;
    get b() {
        9007199254740991n * 9007199254740991n;
        const v8 = new BigInt64Array();
        class C9 {
            constructor(a11, a12) {
                for (let v13 = 0; v13 < 10; v13++) {
                    v8[-1];
                    try {
                        super.o();
                    } catch(e16) {
                    }
                }
            }
        }
        try {
            this.valueOf = this;
        } catch(e17) {
        }
        return "-63499";
    }
    static #b;
    static #e;
    #a;
}
new C3();
new C3();
new C3();
const v24 = /0wxsa(?=b)hvcxyz{1,}/uis;
/VQa??(?:ab)|cdedz6(?:a+)*/gvdmy;
/[o24\w|\d]/gvdsy;
function F27(a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    let v32 = -4294967297n;
    const v33 = v32--;
    const v36 = Int8Array.of();
    let v37;
    try { v37 = v36.every(v36, this, v36, "-63499", Array); } catch (e) {}
    const v38 = new Int8Array(v37);
    const v40 = v38.buffer.slice();
    const v41 = v40.constructor;
    try { v41(v40, v37, v33, v36, this); } catch (e) {}
    function f43(a44, a45, a46, a47) {
        function f49() {
            for (let v50 = 0; v50 < 5; v50++) {
                arguments | v50;
            }
            return typeof 522675525n === "undefined";
        }
        f49();
        return a29;
    }
    for (let v56 = 0; v56 < 10; v56++) {
        function f57(a58, a59, a60, a61) {
            return Reflect.construct(Uint8ClampedArray, []);
        }
        f57();
        %OptimizeFunctionOnNextCall(f57);
        f43(v56, v56, a30, v56);
    }
    try { new v24(Array); } catch (e) {}
    const v70 = new Set();
    v70.__proto__;
    function f72(a73, a74, a75, a76) {
        for (let v77 = 0; v77 < 25; v77++) {
            a74["p" + v77] = v77;
        }
        return a76;
    }
    %OptimizeFunctionOnNextCall(f43);
    const v83 = new Int16Array(41);
    v83.fill(725);
    f43();
}
new F27(F27, F27);
