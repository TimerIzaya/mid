class C3 {
    constructor(a5, a6) {
        a6[9] = a5;
        this["213938096"] = "213938096";
        const t4 = "213938096";
        t4.length **= a6;
        [a6] = a5;
        super[a5];
    }
    static #f;
    ["O2"];
    static ["213938096"] = "213938096";
    #h;
    static #d;
}
const v8 = new C3("213938096", "213938096");
new C3(v8, "O2");
new C3("object", C3);
new Map();
new Uint32Array();
new Float64Array();
function f23(a24, a25) {
    return -9223372036854775807;
}
[NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
class C27 {
    constructor(a29, a30, a31, a32) {
        const t27 = this.constructor;
        t27();
        a30 >>> a30;
        -0.0 >>> -0.0;
    }
}
new Float32Array();
[-2.317948391170037,5.380512071963272,1.0,532131.8089454074];
[0.9815406638516286,121.30534539703694,-5.0,Infinity,-611091.1872133282,0.3052766402808791,0.0009368873469747241];
[0.3692093935150569];
class C44 {
    toString(a46, a47, a48, a49) {
        try { this["throw"](); } catch (e) {}
        const v55 = new Uint8ClampedArray(1714289187);
        new Uint8ClampedArray(798, ...v55, eval());
    }
    constructor(a60, a61) {
        function F62(a64, a65, a66) {
            if (!new.target) { throw 'must be called with new'; }
        }
        typeof arguments;
        for (let i = 0; i < 5; i++) {
            this[this];
        }
    }
}
new C44();
