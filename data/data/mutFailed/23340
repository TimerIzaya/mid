const v4 = new Map();
let v5;
try { v5 = v4.forEach(4294967296n); } catch (e) {}
const v8 = ("512")?.toLocaleUpperCase;
try { new v8(); } catch (e) {}
const v12 = -2147483649n % -2147483649n;
~1n;
function f16() {
}
class C17 extends f16 {
}
v4["entries"](-2147483649n, C17, v5, -4294967295n, ..."entries");
Math.round(v12 | v12);
Math.tan(-457258307n);
new C17();
const v27 = /q(?:a+){0,0}/gudimsy;
v27.dotAll = v27;
/(?:ab|cde)f(x)(x)(x)\1*wn?/uim;
/Ga\b!+/uimsy;
const v31 = [];
964446029 ^ 964446029;
new Int8Array(964446029);
const v40 = new Uint32Array(16);
try { v40.join("boolean"); } catch (e) {}
Math.atan2(Int8Array, v31);
Math.cbrt(-14);
Math.max(-6.948514956607372);
function f48(a49, a50) {
    const o51 = {
    };
    o51.e = f48;
    const o52 = {
    };
    o52.e = f48;
    o52.b = a50;
    const o53 = {
    };
    o53.e = f48;
    o53.b = a50;
    o53.c = a49;
    const o56 = {
        "arguments": v31,
        valueOf(a55) {
            return this;
        },
    };
    o56.e = f48;
    o56.b = a50;
    o56.d = a50;
    function f58(a59) {
        const o62 = {
            "maxByteLength": 1739,
        };
        const v64 = new ArrayBuffer(64, o62);
        new BigUint64Array(v64);
        return 7;
    }
    this.onmessage = f58;
    v40.length = 1073741824;
    return o51;
}
const o69 = {
    "type": "function",
};
o69.type;
new Worker(f48, o69);
