const v0 = /v\P{sc=Greek}/udy;
/[Ea\scete*]/udim;
/(x)(x)(x)\1/vdm;
const v5 = new BigInt64Array(1024);
new BigUint64Array(1);
const v11 = new Uint16Array(2);
[v0,BigInt64Array];
const v14 = [[v11,1024],1024,v5];
class C18 {
    static #e;
    static [-2];
    static {
        try { this(this, -5.0, this, ...this); } catch (e) {}
    }
    #g;
    static #toString(a22, a23) {
        ("minor").split("toString");
        const v31 = new Date();
        try { v31.setFullYear(26578n); } catch (e) {}
        const o33 = {
            __proto__: a23,
            "a": "async",
            "b": "async",
            "e": 1073741823,
            "f": "async",
            "execution": "async",
            "type": "minor",
        };
        gc(o33);
        return "async";
    }
    static c;
}
function F36(a38) {
    if (!new.target) { throw 'must be called with new'; }
    const v39 = this.constructor;
    v39.bind();
    try { new v39(); } catch (e) {}
}
const v42 = new F36();
function f43(a44, a45) {
    %VerifyType(a45);
    Object.defineProperty(v42, 2147483648, { writable: true, enumerable: true, value: v42 });
    return a44;
}
const v47 = f43(v42, 145253519);
new C18();
const v49 = new C18();
const v50 = new C18();
[];
Math.atan2(v14, -40875);
class C59 extends WeakMap {
    536870887;
}
new C18();
const v63 = [-349055.72992167494,-1000000000000.0,-8.263641716323854e+307,1.050616183420453e+308,1000.0,1000.0,6.087868782871141,-1.7976931348623157e+308,3.0];
const v65 = new Int16Array(v63, v63, v63);
const v67 = [1073741824,1073741823,1376142744,1073741825];
function f68(a69, a70, a71, a72) {
    function f73() {
        new Int32Array(v63, a72, v65);
        try {
            v67.forEach(a70);
        } catch(e77) {
            const v79 = new Float32Array();
            v79[2] = v47;
            function f80() {
                return Float32Array;
            }
        }
        const o88 = {
            [-4294967297n](a82, a83, a84, a85) {
                eval();
            },
        };
        return o88;
    }
    f73();
    eval();
    %OptimizeFunctionOnNextCall(f73);
    return -4294967297n;
}
for (let v92 = 0; v92 < 5; v92++) {
    f68();
}
const v96 = v47 << 536870912n;
-v96;
class C98 {
    static #a;
}
try { v50.getUint16(-16, v47, 16, 6, v96); } catch (e) {}
const v100 = v49[f43];
try { v50.m(v100, 1073741823, C98, v50, v100); } catch (e) {}
v100 >>> v50;
-5.0 < 1073741823;
