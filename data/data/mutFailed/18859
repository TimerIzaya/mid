const v5 = [-10,255];
const v7 = new Uint8ClampedArray();
let v8 = v5 * v7;
Math.log1p(5.712452742881646e+307);
-1023264490n / -1023264490n;
new Uint8Array(16);
v8--;
function f20(a21) {
    return Symbol.toPrimitive;
}
Float64Array.prototype = Float64Array;
new Float64Array(12);
new Uint32Array(128);
function f30(a31) {
    BigInt[9];
    [-946345318n] > 8n;
    return -8.325849240047866e+307;
}
BigInt.valueOf = f30;
try {
    BigInt(BigInt);
} catch(e38) {
    e38.name = e38;
}
const v39 = [-65537n,-1023264490n];
v39.g = v39;
let v41;
try { v41 = new BigInt64Array(12, 128, -1023264490n); } catch (e) {}
new v41(v39);
