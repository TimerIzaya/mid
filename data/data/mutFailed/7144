[536870912];
const v4 = [1838267094,2,-1509021907,8,10,-10,-1258722624,-2147483649,2147483648,-65535];
const v5 = [-9007199254740990,65535,-1489024011,10000];
new Float32Array(6);
new Int16Array(8);
new Uint32Array(16);
function f15(a16, a17) {
    a17(a16, a16, a17, f15);
}
new Promise(f15);
const v21 = [1000000000000.0,6.579220753226213e+307,2.0,-2.220446049250313e-16,NaN,-1000000.0];
const v23 = [-4,536870888,-65243,-256,-4294967295,65536,-12];
function f24() {
    function f25(a26, a27) {
        h = a26;
        for (let v28 = 0; v28 < 32; v28++) {
            a27["p" + v28] = v28;
        }
        return v4;
    }
    return f25;
}
function f31(a32) {
    v5[64];
}
Object.defineProperty(v23, Symbol.toPrimitive, { configurable: true, get: f24, set: f31 });
const v36 = [-2096457859];
const v37 = /a+b|cu(?:foo)*/u;
v37.valueOf = Array;
const v39 = new Map();
class C40 {
    constructor(a42, a43, a44, a45) {
        this[Symbol.toPrimitive] = f15;
        const v48 = v36.__proto__;
        function f49(a50) {
            const v51 = /v*/vdms;
            class C52 {
                1855;
                [v51];
            }
            const v53 = new C52();
            function f55(a56, a57, a58, a59) {
                const o60 = {
                    [a57]: a59,
                    ...a59,
                };
                return a58;
            }
            f55(3706, 3706, C52, v53);
            return 3706;
        }
        v48[Symbol.toPrimitive] = f49;
        this & v37;
        v48[6] = a43;
    }
    toString(a66, a67, a68, a69) {
        super[v23] = v39;
    }
}
new C40(v23, v36, v37, v23);
for (const v71 in v36) {
    Array(310668736);
}
v21["findIndex"](gc);
