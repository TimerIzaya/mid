const v0 = [];
class C4 {
    static [v0] = -1000000000.0;
    h = -1000.0;
    m(a6) {
        Int16Array[0] = -27833;
        const v11 = new Uint8Array(14);
        let v13 = new WeakMap();
        v13 /= v11;
        const v14 = v0[3121951400];
        v0[v14] = v14;
        try { v14["n"](this); } catch (e) {}
        return this;
    }
    4294967296;
    b;
    static 1;
    static get b() {
    }
    static #c;
    static #a;
    [-1] = v0;
    static [-1000000000.0] = 1.1865580907905688e+308;
    g = -1000.0;
    static [v0] = C4;
    constructor(a19, a20, a21) {
        super();
        super.f = a19;
    }
    9;
}
const v22 = new C4();
const v23 = new C4();
const v24 = v23?.m;
try { new v24(v0); } catch (e) {}
new C4();
class C27 {
    static p(a29, a30, a31) {
        super.g = this;
        const v32 = [-504863.1885363821,-248378.80818527355,-147.11467188198264,-1.7039705769992093e+308];
        for (let v33 = 0; v33 < 5; v33++) {
            v32 | v33;
        }
        const v37 = new Int16Array(1269);
        for (const v38 in v37) {
        }
        a29["m"](C4, a29, v0, a29, a30);
        new C4();
        return a30;
    }
    set h(a43) {
        super[this] = a43;
        (typeof -1000.0 === "bigint") > v22;
    }
}
const v48 = C27?.constructor;
try { new v48(-1000.0); } catch (e) {}
const v50 = new C27();
new C27();
new C27();
let v57 = 129;
v57--;
const v60 = new Int32Array();
BigInt64Array.length = BigInt64Array;
const v62 = new BigInt64Array();
const v63 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
const v64 = [-1.7976931348623157e+308];
v64[0];
function f66(a67, a68, a69, a70) {
    a68 + a68;
    const o83 = {
        toString(a73, a74, a75) {
            a69[a68] = a67;
            class C77 {
                #o(a79) {
                }
            }
            const t77 = "undefined";
            t77["256"] <<= 4.0;
            return 255n;
        },
    };
    return o83;
}
f66.caller;
const v85 = f66(v62, v57, v64);
const v86 = f66(v60, v57, v63);
try { v86.toString(v50, v23, v63); } catch (e) {}
for (let v88 = 0; v88 < 5; v88++) {
    const v89 = v86 % v85;
    v89 ^ v89;
    v63.b = v60;
}
