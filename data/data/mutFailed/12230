class C3 {
    get e() {
        function f5() {
            return -2147483649;
        }
        const t5 = "any";
        t5[this] *= -2147483649;
        try {
            new f5();
        } catch(e7) {
        }
        return 676494.7417937713;
    }
    6;
    static [676494.7417937713];
}
new C3();
new C3();
new C3();
function f14() {
    return -2147483649;
}
const v18 = [-16];
v18[Symbol.toPrimitive] = f14;
const v21 = [15,5,-9223372036854775808,-1073741824];
const v22 = [536870912,-128,-9007199254740991,-1786345199,9007199254740992,4096,4096,211693692,46722,1687567383];
const v23 = [-128,10];
v22[5] = v22;
v18.push(v21);
const o25 = {
    [v18]: v23,
};
function f27(a28, a29) {
    return 676494.7417937713;
    class C30 {
    }
    const v31 = new C30();
    const v32 = [-5.0];
    function F33(a35, a36) {
        if (!new.target) { throw 'must be called with new'; }
        const v37 = this.constructor;
        try { new v37(v31, v32); } catch (e) {}
        a36.__proto__.valueOf();
    }
    return -2147483649;
}
Object.defineProperty(Int16Array, Symbol.iterator, { configurable: true, enumerable: true, value: f27 });
new Int16Array(Int16Array);
