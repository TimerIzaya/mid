const v0 = [-989736569,268435441,17325,16,9,4294967295,-2147483648,-65537,0,-14];
const v1 = [53659];
const v2 = [-65535,-4];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    const v6 = this?.constructor;
    try { new v6(v0); } catch (e) {}
    try {
        this.h = v1;
    } catch(e8) {
    }
}
const v9 = new F3(v1);
const v10 = new F3(v2);
let v11 = new v10(v0);
v11.length = v11;
const v16 = v0["at"](28 >> v9);
let v17;
try { v17 = v16(...v1, v16, 28, v16, Float64Array, v16); } catch (e) {}
!28;
v11 = "at";
new Float64Array(28);
const v22 = new Uint16Array(101);
12 << 12;
new Int8Array(12);
const v28 = new Int32Array();
const v30 = [1000000000.0,4.0,5.0,-6.555298893133851e+307];
try { v22.pop(); } catch (e) {}
v30[11] = v28;
const v32 = v30.unshift(-463330.04816285486);
const v33 = v32 / v16;
const o34 = {
};
try {
    o34.a = v33;
} catch(e35) {
}
try {
    const o36 = {
    };
    o36.a = v33;
    o36.b = v32;
} catch(e37) {
}
try {
    const o38 = {
    };
    o38.a = v33;
    o38.b = v32;
    o38.h = v33;
} catch(e39) {
}
try {
    const o40 = {
    };
    o40.a = o40;
    o40.b = v32;
    v17.h = v2;
} catch(e41) {
}
