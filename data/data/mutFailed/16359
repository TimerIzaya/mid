const v2 = new Promise(6);
const v3 = [1000000000000.0,-292785.93940337666,0.9475818738839041,9.230835266163464,-20770.935036223033,2.220446049250313e-16,0.3028785088172632,8.859698277667437,-1000000000.0,-0.0];
function f4(a5, a6) {
    function F7(a9, a10) {
        if (!new.target) { throw 'must be called with new'; }
        const v11 = this.constructor;
        let v12;
        try { v12 = new v11(); } catch (e) {}
        try { this.constructor(a5, f4, v12, F7); } catch (e) {}
    }
    new F7(a5, a6);
    return f4;
}
function f15(a16) {
    a16 &&= a16;
    return v2;
}
f15(v3);
const v18 = [-1.7976931348623157e+308,-1000.0,-3.0,-2.2250738585072014e-308,4.969935921504899,-3.6326310835011093e+307,1.3451557027010882e+308,3.0,-2.220446049250313e-16];
new Int8Array(16);
const o23 = {
};
o23.h = o23;
function f24(a25, a26, a27) {
    return a25;
}
try {
    f24.e = -65535;
} catch(e28) {
    const v32 = new Uint8ClampedArray(512);
    new Uint8ClampedArray(798, ...v32, o23);
}
const v34 = [-Infinity,-0.0,-47836.18710512866,-3.0,-2.279641119402653,3.0,-1.0,-1000.0];
const v35 = [v2,v3,v2];
const v37 = [[v2,Promise,v34,v18],6];
class C38 extends Promise {
    static e = v35;
    constructor(a40, a41) {
        super(6);
        class C43 {
        }
        let v44 = new C43();
        class C45 extends C43 {
            o(a47, a48) {
                v44 %= this;
                %VerifyType(super.g);
            }
        }
        try {
            this.length = 2;
        } catch(e56) {
        }
    }
    441 = v3;
    set d(a58) {
        try {
            v3.__proto__ = v2;
        } catch(e59) {
        }
    }
}
const v60 = new C38(v35, v3);
const v61 = new C38(v60, v3);
const v62 = new C38(v3, v61);
function F63(a65, a66) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a66;
    } catch(e67) {
    }
}
new F63(v37, v62);
new F63(v60, v62);
new Float32Array(Float32Array);
function F72() {
    if (!new.target) { throw 'must be called with new'; }
}
class C74 {
    static {
        for (let v76 = 0; v76 < 25; v76++) {
            function f77() {
            }
            [1073741824,1073741823,1376142744,1073741825];
            function f79(a80, a81, a82, a83) {
                return a80;
                f77();
                new Int8Array();
                new Worker(2534);
                const o100 = {
                    toString(a92) {
                        function f94(a95, a96, a97, a98) {
                        }
                        f94(-4294967297n, f94);
                    },
                };
                class C101 {
                }
                const v102 = [268435441,59664];
                for (let v103 = 0; v103 < 5; v103++) {
                    delete v102[v103];
                }
                new Uint32Array(4);
                0 <= 0;
                const v110 = new Int8Array(0);
                for (const v111 in v110) {
                }
                [C74];
                function f113(a114, a115) {
                }
                const o116 = {
                };
            }
            for (let v117 = 0; v117 < 5; v117++) {
                f79();
            }
        }
    }
}
new F63(v60, v62);
class C121 extends String {
    6 = String;
    set flags(a123) {
        -Infinity;
    }
}
const v127 = new C121();
v127[1];
