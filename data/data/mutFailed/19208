const v0 = [];
[-369.22870480392737];
[-1.7976931348623157e+308,6.106816510931914,1000000000000.0,4.1701493326786664e+307,211.44617387795188,18971.30224655138,0.16894684755444456,-2.2250738585072014e-308,-828714.7798970928];
[2.0,1.147540754494544e+308];
[-1.0,1.7976931348623157e+308,1000000000000.0,1.278205306171195e+308,-2.0];
[-1000000.0];
[-1000000000000.0,1000.0,-6.398176307165451,1e-15,-1e-15,NaN,5.445147040827069e+307,-1000.0,5.257542329630149e+307];
new Uint8Array(1971);
new Int32Array(185);
new Uint16Array(512);
for (let v16 = 0; v16 < 5; v16++) {
    function f17() {
        [];
        try {
            f17.some();
        } catch(e20) {
            function F22(a24, a25) {
                if (!new.target) { throw 'must be called with new'; }
            }
            function f27(a28, a29, a30, a31) {
                Uint8Array / a28;
                a29 < F22;
                const o37 = {
                    n(a35, a36) {
                        return Uint8Array;
                    },
                };
                return v16;
            }
            for (let v38 = 0; v38 < 500; v38++) {
                f27();
            }
            eval(e20);
        }
        return f17;
    }
    v0();
    %OptimizeFunctionOnNextCall(f17);
}
