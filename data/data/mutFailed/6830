function f0() {
}
let v3 = 8.791212513064166e+307;
v3++;
function f5() {
    return f5;
}
const t7 = -1.3674666006256788e+308;
t7.d = f5;
let v6;
try { v6 = f5.bind(-1.3674666006256788e+308); } catch (e) {}
let v7;
try { v7 = v6.constructor(v3); } catch (e) {}
const v9 = v7 ^ 6;
const v10 = v9 / v9;
(64457 < 64457) && -1.3674666006256788e+308;
f5 - -21885n;
const v19 = [126.35858692635452,171.76053631394439,637722.086033537,-4.0,3.0,-1000000.0,1.3044045702886066e+308];
v19.g = v19;
const v20 = [-1.5529887870333795e+308,-748.1650295275717,0.9205726241487137,1.0,-1000.0,-3.1477078363151474,2.220446049250313e-16,Infinity];
const v21 = v20[1];
const v22 = v21 + v21;
function f23() {
    return v20;
}
try { v21.toString(); } catch (e) {}
f23.arguments = f23;
class C25 extends f23 {
}
v22.prototype = C25;
const v26 = new C25();
const v27 = v19.shift();
v27 << v27;
v27 >>> v27;
try {
    v26.length = v27;
} catch(e30) {
    e30.a = e30;
    v10.d = e30;
}
