const v0 = [-8.736430217306641e+307,1000000.0,-489732.20800014783,-184242.20455107337,-1000000000.0,1e-15,0.5200961913166134,5.457948793122718];
const v1 = [-1.0,-248997.68585925247,1000.0,-709.7502441609931,-0.43830177786731106,-1000000000000.0,3.0,-1000000000000.0,0.563498967435769];
const v2 = [0.9126235039864234,-1.0343664614553083e+308,-Infinity,-1000000.0,-611248.8487845426,919.1424306032225,4.0,0.1372627394255056];
function f3() {
    return v0;
}
class C4 extends f3 {
    static 5 = v2;
    b = v2;
    p(a6) {
        try {
            f3();
        } catch(e8) {
        }
        return v1;
    }
    #d;
}
const v9 = new C4();
new C4();
new C4();
class C15 {
    static {
    }
}
const o18 = {
};
class C19 {
    constructor(a21, a22) {
    }
}
new C19();
v9 << -1557853178;
function F28(a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = F28;
    try {
        this.b = "function";
    } catch(e32) {
    }
    try {
        this.h = "function";
    } catch(e33) {
    }
}
const v34 = new F28();
new F28();
new F28("function", v34);
const v39 = new Float32Array();
class C40 {
    set d(a42) {
    }
    static #m(a44, a45, a46) {
    }
    static {
        for (let v48 = 0; v48 < 10; v48++) {
            function f49() {
                return v48;
            }
            const v50 = [601759695];
            const v51 = [1073741824,1073741823,1376142744,1073741825];
            function f53(a54, a55, a56, a57) {
                function f59() {
                    return a54;
                }
                f49();
                const v62 = new Int8Array();
                function f63(a64, a65) {
                    return a64;
                }
                f63(C19(v51, v39));
                v62.buffer.slice(2147483648);
                %OptimizeFunctionOnNextCall(f59);
                let v72;
                try { v72 = v51["find"](..."find", a57, ...v50, ...v51, ...522675525n); } catch (e) {}
                v72 <= a56;
                return arguments;
            }
            for (let v74 = 0; v74 < 10; v74++) {
                C15();
            }
        }
    }
}
