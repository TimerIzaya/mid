10 >> -2147483648;
Math.expm1(10);
Math.cosh(-1000000.0);
Math.atan2(-2147483648, -2147483648);
-2147483648 >> 10;
-1000000.0 % -2147483648;
+-1000000.0;
class C13 {
    static {
        for (let v15 = 0; v15 < 32; v15++) {
            const t10 = "12";
            t10["p" + v15] = v15;
        }
    }
    static {
        function f19(a20) {
            return this;
        }
        class C21 extends f19 {
            #c;
        }
    }
}
const v22 = new C13();
const v23 = new C13();
const v24 = new C13();
["12","n",v24];
[v22];
[v23];
const v35 = new Map();
let v42 = undefined;
const o50 = {
    ...v35,
    ...v35,
    __proto__: v35,
    [24560](a44, a45, a46) {
        super[591114.0785999324];
        v42 = Map;
    },
};
v42 = o50;
[v35];
function F53() {
    if (!new.target) { throw 'must be called with new'; }
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    new Date();
    const o60 = {
    };
    o60.e = 19793;
    const v62 = Array(19793);
    for (const v63 of v62) {
    }
    const v64 = [v62,v62,v62,v62,v62];
    new BigUint64Array();
    [];
    for (let v69 = 0; v69 < 50; v69++) {
    }
    [[v64,v64,v64]] >= Uint16Array;
}
new F53();
new F53();
