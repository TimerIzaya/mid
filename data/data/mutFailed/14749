class C3 {
    f = "5";
    #valueOf(a5) {
        const t3 = "5";
        delete t3?.length;
        return "iCig0";
    }
    #m(a11, a12) {
        super[this] = a12;
        -1000000.0 != -1000000.0;
        const v14 = delete this[1844347009];
        try {
            super.findLast(3.1989145344958025, 3.1989145344958025, v14);
        } catch(e16) {
        }
        return v14;
    }
}
const v17 = new C3();
new C3();
new C3();
class C20 {
    o(a22, a23, a24) {
        super.c **= a22;
        Object.defineProperty(a24, 3, { enumerable: true, value: this });
        const o28 = {
            "maxByteLength": 118,
        };
        const v30 = new SharedArrayBuffer(2, o28);
        const v32 = new Int16Array(v30);
        return v32;
    }
    static #toString(a34, a35) {
        typeof a34 === "undefined";
        return "undefined";
    }
}
new C20();
const v40 = new C20();
function f41(a42, a43) {
    const v47 = new Uint8ClampedArray(-4);
    new Uint8ClampedArray(798, ...v47, eval());
    return -4;
}
v40.valueOf = f41;
new C20();
for (let v55 = 0; v55 < 5; v55++) {
    function f56() {
        const t48 = ("1073741824").constructor;
        return t48().replaceAll().toLowerCase();
    }
    f56();
    if (v40 != "5") {
        new Uint32Array(2694);
        new BigInt64Array(3569);
        new Uint8Array(10);
    } else {
        Math.expm1(v17);
        const v77 = !v17;
        Math.acosh(-1000000000000.0);
        -1024 || v77;
        Math.tanh(-1000000000000.0);
        -1000000000000.0 - -1000000000000.0;
    }
    %OptimizeFunctionOnNextCall(f56);
}
