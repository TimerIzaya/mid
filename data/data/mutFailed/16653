const v2 = new Float64Array(247);
function f3(a4, a5) {
    Float64Array instanceof a4;
    const v7 = /(x)(x)(x)\1/uis;
    function f8(a9, a10, a11, a12) {
        const o19 = {
            4294967295: a9,
            2: a11,
            __proto__: a12,
            [v7](a14, a15, a16, a17) {
                super.test();
            },
        };
        return a9;
    }
    %PrepareFunctionForOptimization(f8);
    return Float64Array;
}
v2[Symbol.toPrimitive] = f3;
1 | 1;
Uint16Array.length;
const v26 = new Uint16Array(1);
v26.valueOf = f3;
const v29 = new Int8Array(3669);
try { v29.at(Float64Array); } catch (e) {}
function f31() {
    return v29;
}
f31.length = f31;
let v32 = this;
v32[Symbol.toPrimitive] = Symbol;
const v35 = v32.__proto__;
const v36 = v35?.constructor;
v36.length;
try { new v36(); } catch (e) {}
v35 <= v2;
v32 &= v26;
const v40 = /I/y;
v40.e = 1;
v40.e = v40;
const v41 = /(?<=a)/gv;
v41.dotAll = v41;
/YZW/dm.ignoreCase;
const v44 = v32.DataView;
5 / 5;
let v48;
try { v48 = Math.expm1(f31); } catch (e) {}
v48 >>> v48;
-9.488890520175198e+307 === -9.488890520175198e+307;
Math.cosh(-9.488890520175198e+307);
Math.atan2(9, 5);
try { new v44(); } catch (e) {}
