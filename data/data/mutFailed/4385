function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 4096;
    } catch(e3) {
    }
    try {
        this.b = 4096;
    } catch(e4) {
    }
    try {
        this.h = 4096;
    } catch(e5) {
    }
}
new F0();
new F0();
const v8 = new F0();
function f9() {
    return v8;
}
function F12(a14, a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e17) {
    }
}
new Uint8ClampedArray(215);
new Int16Array(127);
new Float32Array(9);
new Date();
function f28(a29, a30, a31, a32) {
    arguments[4] = arguments;
    Math.asinh(-10);
    Int16Array.constructor;
    return a31;
}
const v39 = new gc();
const v40 = [gc,gc,gc,v39];
[v40,gc];
new Int32Array(56885);
Math.valueOf = f28;
Math.expm1(Math);
const v47 = [gc,v40,v40];
/an/gudimsy;
/xa\b!/gdis;
const v50 = /a+?z*/gm;
const v51 = [-3.0,0.0,8.692473731259366,-1e-15,0.598869256055706,-2.0,-2.220446049250313e-16,-Infinity,-9.722804109631653];
[-1.257587252130051,-93063.25159892451,2.0,-256299.38870889205,-Infinity,-1000.0,-7.521391161311806,1e-15];
[2.220446049250313e-16,-1000000000000.0,1000.0];
class C56 extends /nupa\Sc/vms.constructor {
}
function F58(a60, a61, a62) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a61;
    for (let v63 = 0; v63 < 5; v63++) {
    }
    this.g = 4;
}
function f64() {
    return v51;
}
function f65(a66, a67) {
    new BigUint64Array(9);
    new Float32Array(37);
    new Int16Array(2);
    return Int32Array;
}
f64.toString = f65;
class C77 {
    [v50] = v40;
    constructor(a79, a80) {
        f64();
        %PrepareFunctionForOptimization(f64);
        f64();
        f64();
        %OptimizeFunctionOnNextCall(f64);
        f64();
    }
    #b;
    [f64] = v47;
    1000;
    static [v50];
    #a;
}
for (let v85 = 0; v85 < 5; v85++) {
    function f86() {
        for (let i89 = 0, i90 = 10; i89 < i90;) {
        }
    }
}
