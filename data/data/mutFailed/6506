const v2 = new Array(129);
function f3() {
    return Array;
}
const v4 = [Array,129,129,129,Array];
const v5 = [v4,f3,f3,v4];
const v6 = [v5,v4,v2,v2];
function F7(a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    a11.f = a11;
    try {
        this.b = v2;
    } catch(e12) {
    }
}
let v13;
try { v13 = F7.toString(); } catch (e) {}
const v14 = new v13(v5, v5, v2);
new F7(v5, v5, v6);
new F7(v4, v2, v2);
try {
    f3();
} catch(e22) {
}
let v23 = -1.7976931348623157e+308;
v23++;
function F26(a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    const v31 = this?.constructor;
    try { new v31(a30, 0.8451424278545969, a30); } catch (e) {}
}
const v33 = new F26();
const v34 = new F26(F26, F26, v33);
v34.b = F26;
for (let v36 = 0; v36 < 5; v36++) {
    v36 + v36;
    Object.defineProperty(v33 || undefined, v34, { value: v33 });
    v14.b %= 337.98459868319287;
    const o42 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o42);
}
