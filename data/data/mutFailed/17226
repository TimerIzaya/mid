function f0() {
    ("e")[0];
    const o17 = {
        set a(a6) {
            ("n").__proto__;
            var c = a6;
        },
        "d": "b",
        "b": "e",
        ..."e",
        "f": "b",
        set h(a9) {
            ("b")?.b;
            const v14 = -8.717299360245616e+307 - -8.717299360245616e+307;
            Math.exp(v14);
            v14 - "e";
        },
    };
    return o17;
}
function f18(a19) {
    try {
        a19.e = a19;
    } catch(e20) {
    }
    return f0;
}
f0[Symbol.toPrimitive] = f18;
f0();
f0();
f0();
[1000000.0,-2.0,-1000000000.0,0.6786119093650471,-Infinity,742.2324780268427,-1.0,8.527193536037935];
const v27 = [-Infinity,1000000.0,8.858744597912573,-2.0,-1e-15,-708489.4584026618,-1.0,-2.220446049250313e-16,-1.1100502734389128e+308,-0.0];
try { v27.pop(); } catch (e) {}
[-4.0,3.0,-5.0,-22175.38012751378];
function f33() {
    return f0;
}
-1073741824;
function F38(a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
    try { a41(); } catch (e) {}
    -522675525n;
    function f45(a46, a47, a48, a49) {
        a46 << a46;
        a47 !== a47;
        a49 - a49;
        arguments[3] = 522675525n;
        arguments[3] = arguments;
        function f54() {
            for (let v55 = 0; v55 < 5; v55++) {
                a41 | v55;
            }
            const v57 = typeof 522675525n;
            const v59 = ("undefined")?.repeat;
            try { new v59(v57); } catch (e) {}
            v57 === "undefined";
            return f0;
        }
        f54();
        return a40;
    }
    for (let v63 = 0; v63 < 10; v63++) {
        v63 >>> v63;
        const v65 = f45(v63, v63, a41, v63);
        v65.caller = v65;
    }
    %OptimizeFunctionOnNextCall(f45);
    const v66 = f45();
    v66.arguments = v66;
}
new F38(F38, f0);
