let v2 = -28127;
class C3 {
    static {
        try {
        const t0 = 0;
        new t0();
        } catch (e) {}
        let v9 = 0.0 ^ 0.0;
        1 | v9;
        ++v9;
    }
    g;
    [0] = "getUTCSeconds";
    #c;
}
new C3();
const v13 = new C3();
const v14 = new C3();
const v20 = new Int8Array(104);
v2 = 104;
let v21;
try { v21 = v20.includes(v20, 104); } catch (e) {}
v21?.b;
try {
    v13.__proto__ = v14;
} catch(e23) {
}
new Int32Array(257);
new Float64Array(208);
class C31 extends Int16Array {
    constructor(a33, a34, a35, a36) {
        let v32 = this;
        v32 = a35;
        [4.0,-1.7976931348623157e+308,-3.0,-9.971299057145312e+307,-467000.689247919,1000000.0,-568.9583940808486,35.935205721605826,172.0427133471769,7.05138815537225e+307];
        [0.8331355820415001,0.7395501078610967,1e-15,1000000000.0,906.0908519021475,613450.5626352818,-1000000000.0,772.2441195877384];
        const v39 = [0.5942864660897883,1000000.0,-2.042312415392007,690301.0036313185,-5.91344555831737e+307,83.09566293403782,-0.0,-2.0,1000000000000.0];
        try { v39.toSpliced(v32); } catch (e) {}
        super();
        function f41(a42) {
            function f44(a45) {
                delete a33[a45];
                return a34;
            }
            this.onmessage = f44;
            return Int16Array;
        }
        const o49 = {
            "type": "function",
        };
        new Worker(f41, o49);
    }
}
new C31(Int16Array, C31, C31, Int16Array);
new C31();
