const v2 = new Float32Array(2761);
new Int8Array(64);
new Int8Array(Int8Array);
function f15(a16, a17, a18, a19) {
    return arguments;
}
function f21(a22, a23, a24, a25) {
    const o44 = {
        "f": a22,
        valueOf(a27, a28, a29, a30) {
            const v31 = a22?.[7];
            -2761;
            function F33(a35, a36, a37, a38) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.g = a35;
                } catch(e39) {
                }
                try {
                    this.d = this;
                } catch(e40) {
                }
            }
            new F33(v31, a25, v31, a24);
            new F33(a23, a23, a24, 2761);
            new F33(a27, 2761, 2761, a23);
            return a25;
        },
    };
    return o44;
}
f21(Float32Array, 0, 64, 64);
const v46 = f21(2761, 0, 0, 2761);
const v47 = f21(f21, 0, 2761, 2761);
function F48(a50, a51, a52, a53) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a50;
    } catch(e54) {
    }
}
new F48(0, v46, 2761, 2761);
new F48(64, v46, 64, v47);
new F48(64, v2, 64, 2761);
function f58() {
    let v59 = -65535;
    const o80 = {
        next() {
            return v59--;
        },
        m(a63) {
            const o64 = {
            };
            try {
                o64.e = v59;
            } catch(e65) {
                const v69 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v69, o64);
            }
            const v73 = new Int8Array(3938);
            let v74 = 3;
            let v75 = 0;
            for (let i = 0; i < 5; i++) {
                [...v74] = v73;
                v75++;
            }
            const o77 = {
            };
            try {
                const o78 = {
                };
            } catch(e79) {
            }
        },
    };
    return o80.m(f58, v59, v59);
}
const t77 = "61961";
t77();
f58();
try { v46(); } catch (e) {}
const v89 = new Uint16Array(1412);
v89.lastIndexOf();
