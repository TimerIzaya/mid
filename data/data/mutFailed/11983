function f0() {
}
const v1 = [-9.956794441376328,1.1753670103201795e+307,3.0,2.2250738585072014e-308,0.8815639301962898,3.0,1000000000.0];
const v2 = [-1000000000000.0,6.03961792809376e+307,1000000000000.0,-1.3448011497989164e+308];
const v3 = [-0.0,2.861895967220047,1e-15,-9.17871628207375,0.8337816750355485,2.0,-3.0,-0.3918134078233422];
function F4(a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a6;
    } catch(e8) {
    }
}
const v9 = new F4(v2, v3);
v9 !== v1;
const o14 = {
    "execution": "sync",
    "type": "minor",
};
F4(o14);
const v16 = new F4(v3, v3);
new F4(v2, v1);
new Int8Array(5);
do {
    let v22 = "sync" % v16;
    try {
        v3.toString = f0;
    } catch(e23) {
    }
    v22++;
} while (0 < 5, "minor")
new Uint8ClampedArray(7);
new v9(3758);
const v34 = ([927716.746385878]).indexOf;
try { v34(); } catch (e) {}
