let v0 = 1203;
new Int8Array(v0);
Symbol.toPrimitive;
function f5() {
    v0++;
    const o21 = {
        valueOf(a9, a10) {
            class C14 {
                static {
                    do {
                    } while (0 < 9007199254740990)
                }
            }
            return -4294967295;
        },
    };
    return -4294967295;
}
const v22 = f5();
new BigInt64Array(4);
new Uint32Array(v22);
[1.0,1.7976931348623157e+308,-7.09321374060292,Infinity,1.0,-1e-15,534998.6228406958];
const v33 = Array().unshift(3);
class C36 {
    9 = 6;
}
const v37 = new C36();
const v38 = new Int8Array();
function F39(a41, a42, a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    const v45 = this?.constructor;
    try { new v45(v38, 6, v45, a41); } catch (e) {}
    a41[9];
    a44--;
    try {
        this.c = -578828680;
    } catch(e49) {
    }
}
new F39(v37);
[-2.220446049250313e-16,-2.0,9.672501188393364e+307,1000000000000.0,1000000.0,-788.9237632484837];
[853.4296352595688,-Infinity,-2.0,4.0,-2.220446049250313e-16,0.1078416352843522,-2.0];
class C54 extends Date {
}
const v57 = new Float64Array();
const v58 = ("p").lastIndexOf(v57);
const o67 = {
    "b": v58,
    ...178,
    toString(a61, a62) {
    },
    "setPrototypeOf": f5,
    toString(a64, a65, a66) {
        v37[a64] = Uint32Array;
    },
};
Math.min();
const v70 = Date();
function f71(a72, a73) {
    return v70;
}
const o79 = {
    [178](a77, a78) {
    },
    __proto__: o67,
    ...o67,
    "b": v33,
};
