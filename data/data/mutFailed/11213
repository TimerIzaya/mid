const v0 = [-2,3,-13,-528255738,-1749737169];
const v1 = [-5,35181];
let v2 = [-29435,-2899,9007199254740992];
class C4 {
    #n(a6, a7) {
        super.d = v2;
        false / a6.length;
        return v1;
    }
    static #e;
    #b;
    #valueOf(a11) {
        try { this.toString(this, v0, a11, a11, this); } catch (e) {}
        v2 %= v1;
        return "n";
    }
    #c = false;
    [false] = v0;
}
const v16 = new C4();
new C4();
const v18 = new C4();
function f19() {
    return v0;
}
class C20 extends f19 {
    949;
    #o(a22, a23) {
        super.length **= -v16;
        try {
            a22.#o(v2, v1, v18, v1, v16);
        } catch(e26) {
        }
        return a22;
    }
    static #b = v0;
    [f19];
}
new C20();
new C20();
new C20();
function F30(a32, a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
}
const v35 = new F30();
const v36 = new F30(F30, F30, v35);
for (let v38 = 0; v38 < 5; v38++) {
    Object.defineProperty(v35 || undefined, v36, { value: v35 });
}
