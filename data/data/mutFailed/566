const v3 = /E(?:ab)*/uiy;
const v4 = /M(x)(x)(x)\1*/gimsy;
const v5 = /xyz{1,}?/gudmsy;
const v6 = [5,-128,10,1171456538,15,-9007199254740991,-10792,-65535,14,1913327815];
function f8() {
    function f9() {
    }
    return f9;
}
function f10(a11) {
    return a11;
}
Object.defineProperty(WeakSet, Symbol.iterator, { writable: true, configurable: true, enumerable: true, get: f8, set: f10 });
[-4294967295,-886597396,1073741824,-17536,1533641048];
new Uint8ClampedArray(Date);
function F19(a21) {
    if (!new.target) { throw 'must be called with new'; }
    const v22 = this.constructor;
    v22.e = v22;
    try { new v22(); } catch (e) {}
    this.g = -1;
    this.f = a21;
    this.h = a21;
}
const v24 = [47427,-44532,2,-5,1024,-256,-2133422064];
function F25(a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v24;
    } catch(e29) {
    }
    try {
        this.e = a27;
    } catch(e30) {
        Math.pow(-1073741824, -Infinity);
        for (let i37 = (() => {
                0 >>> 0;
                return 0;
            })();
            (() => {
                const v39 = i37 < -60524;
                !v39;
                return v39;
            })();
            i37++) {
        }
    }
}
new F25(v3, v5);
function f45(a46, a47) {
    return f45;
}
const v48 = f45(f45, f45);
class C49 extends f45 {
    constructor(a51, a52, a53) {
        super(a53, this);
        const v54 = `
            try { a51(a53, v48); } catch (e) {}
        `;
        eval(v54);
    }
}
new C49(f45, C49, f45);
new F25(v3, v5);
const v60 = new F25(v4, v4);
class C61 {
    #p(a63, a64) {
        const v65 = v6.length;
        const o66 = {
            __proto__: v60,
            "e": a64,
            [a63]: v65,
            ...this,
        };
        return v60;
    }
    [v24] = v5;
    static #a = v3;
    h;
    c = 127n;
}
function F70(a72, a73) {
    if (!new.target) { throw 'must be called with new'; }
    a72 % a72;
    a73 >>> a73;
    const v76 = this.constructor;
    try { new v76(-6.401378161603748, -3.413527541634011e+307); } catch (e) {}
}
new F70(1000000000000.0, 1000000000000.0);
new C61();
const v80 = new C61();
new C61();
function f82(a83, a84) {
    function f85(a86, a87) {
        return a87;
    }
    Set.toString = f85;
    const o95 = {
        "f": v24,
        [v4](a90, a91, a92, a93) {
            super.test();
        },
        ...v80,
        ...a83,
    };
    return f82;
}
%PrepareFunctionForOptimization(f82);
const v96 = f82();
%OptimizeFunctionOnNextCall(f82);
f82(f82, v96);
new Uint8ClampedArray(129);
const o101 = {
};
