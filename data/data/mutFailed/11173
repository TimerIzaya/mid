const v1 = new WeakMap();
class C2 {
    set g(a4) {
        try {
            super.set(ArrayBuffer, this, a4, v1);
        } catch(e7) {
        }
    }
    static {
        Reflect.construct(WeakMap, [this], WeakMap);
    }
    #c;
}
const v12 = new C2();
const v13 = new C2();
const v14 = new C2();
function F15(a17, a18, a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a20;
    } catch(e21) {
    }
}
new F15(v12, v12, v14, v1);
new F15(v12, v13, v12, v1);
new F15(v12, v14, v1, v13);
const v30 = new WeakSet();
let v31 = /(w)/gvdmy;
const v32 = /((ab))/vy;
for (let v33 = 0; v33 < 25; v33++) {
    v30["byteOffset" + v33] = v33;
}
v31 >>= v32;
