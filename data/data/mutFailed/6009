function F0() {
    if (!new.target) { throw 'must be called with new'; }
    new Int8Array(6);
    function f5() {
        const o10 = {
            "b": 1e-15,
            [3](a9) {
            },
        };
        o10[3] = o10;
        return o10;
    }
    const v11 = f5();
    v11[3] = v11;
    const v13 = -55301 + -55301;
    Uint8Array.prototype;
    new Uint8Array(6);
    try { ("wNzDt").toWellFormed(); } catch (e) {}
    const t18 = "e";
    t18[0] = "e";
    class C21 {
        constructor(a23, a24) {
            a23[1] = a23;
            function f25(a26, a27) {
                try { a27.replaceAll(f25, this); } catch (e) {}
                return a27[3];
            }
            const v30 = f25(a24, a23);
            try { v30.strike(); } catch (e) {}
            f25("e", "e");
            const v33 = f25("wNzDt", a23);
            try { v33.fontsize(Uint8Array); } catch (e) {}
        }
    }
    const v35 = C21?.call;
    try { new v35(-55301); } catch (e) {}
    C21.prototype = C21;
    const v37 = new C21("dotAll");
    const v38 = v37?.constructor;
    try { new v38(v13, F0); } catch (e) {}
    const v40 = v37?.constructor;
    let v41;
    try { v41 = new v40(6, v37); } catch (e) {}
    try { v41.isPrototypeOf(F0); } catch (e) {}
    const v43 = v37.constructor;
    v43.b = v43;
    try {
        this.e = -55301;
    } catch(e44) {
    }
    try {
        this.b = -55301;
    } catch(e45) {
    }
}
const v46 = new F0();
const v47 = new F0();
const v48 = new F0();
function f50() {
    return v46;
}
function f51() {
    return v47;
}
function f52() {
    return f50;
}
f52.caller = f52;
f52.g = f52;
const v53 = [-1.0907640958226839e+308,-2.2250738585072014e-308,789.0962672663811,NaN,3.0,5.0,-1.7976931348623157e+308,-688.8093528913639,1000000000.0];
const v54 = [-2.220446049250313e-16,-6.314087141191578,2.5207042803454023,-5.0];
try { v54.findLastIndex(v48); } catch (e) {}
const v56 = v54?.join;
try { new v56(v54); } catch (e) {}
const v58 = [-725250.803427798,937.6527229052951,8.016789996013361e+307,1.2586870063166546e+308,-3.537120746437082e+307,4.0,-1.4866038234164512e+308];
try { v58.toLocaleString(); } catch (e) {}
class C60 {
}
async function f61(a62, a63, a64, a65) {
    const v66 = await C60;
    v66.d = v66;
    return v66.call();
}
const v68 = f61.call(C60, C60, f61, f61, f61);
try { v68.then(v68, v46); } catch (e) {}
let v70;
try { v70 = v68.finally(f61); } catch (e) {}
const v71 = v70?.then;
try { new v71(v70, v53); } catch (e) {}
const v73 = v68.then(f61, v68, v68, v68, v68);
try { v73.then(v53, v47); } catch (e) {}
