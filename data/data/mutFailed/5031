function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.b = this;
    try {
        this.b = 754;
    } catch(e3) {
    }
    try {
        this.g = 754;
    } catch(e4) {
    }
}
new F0();
const v6 = new F0();
const v7 = new F0();
const v8 = [v6,F0];
[v7,v8,v7,v8,F0];
const v10 = [v6,v8,v8];
function f11() {
    return v10;
}
const v18 = [-1000000000000.0,Infinity,1.0,-Infinity,1.7976931348623157e+308,5.968300367511291e+307,-2.220446049250313e-16,-3.0,9.510254036543073e+307,5.0];
const v19 = [1.7976931348623157e+308,-1000000000.0,-2.2250738585072014e-308,NaN,-1.9873060550779815,-576168.7100780082,2.220446049250313e-16,2.2250738585072014e-308];
[-131.14557671807358,v18,v18,1e-15];
[4.0,0.2037963153987472];
[v19,-131.14557671807358,4.0];
const v26 = [0.0,-1000.0,2.557943047142931];
const v27 = [-2.2250738585072014e-308,1e-15,0.0,-3.0,2.220446049250313e-16,1000000000000.0,-386.72889766700735,4.359327317391378];
[-7.507772096903578,-1000000000.0,1.7976931348623157e+308,-1000.0,818.7357625649829,-Infinity,-1e-15,692817.4776436412,1e-15,-2.2250738585072014e-308];
for (let v33 = 0; v33 < 5; v33++) {
    try {
        v26.valueOf = v33;
    } catch(e34) {
    }
}
const v41 = [256,54026];
function f42() {
    v27["unshift"](1e-15, -1000000000.0, -1000000000.0, -1000000000.0, "unshift");
    return v18;
}
v41[Symbol.toPrimitive] = f42;
-2 | -2;
!-2;
Math.hypot(v41);
const o57 = {
    "execution": "async",
    "type": "minor",
};
const v59 = new Int16Array(2183);
new Uint8Array(255);
const v65 = new Int16Array(8);
async function f67(a68, a69, a70) {
    delete v65[-1000000000.0];
    let [v72,v73,...v74] = v59;
    v59[5];
    await v73;
}
parseFloat("minor");
