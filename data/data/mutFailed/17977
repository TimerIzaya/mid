const v0 = [1112099551];
const v1 = [256,1332977186,-65537,26652,22267,-5,1,123832437,65535];
const v2 = [2147483648,-15,-536870912,9,41330,740035398,255,-9007199254740990,-3575];
let v5 = -1000.0;
v5--;
class C7 {
    static set f(a9) {
        v2[v2[2056732377]];
    }
    [0.05066956361942332];
    static 1073741824 = v0;
    [1.811465903999899];
    static [v0] = v1;
}
const v15 = new C7();
try { v15.valueOf(); } catch (e) {}
const v17 = new C7();
v17.__proto__ = v17;
const v18 = new C7();
-4;
const v22 = new Uint16Array(4);
const v23 = v22?.subarray;
try { new v23(v1, v17); } catch (e) {}
const v27 = Float32Array?.__defineSetter__;
try { new v27(v18, v22); } catch (e) {}
const v29 = new Float32Array(256);
v29[175];
-2607;
new BigUint64Array(2607);
1000000.0 <= 1000000.0;
Map.name = Map;
-9223372036854775807 & -9223372036854775807;
function f44() {
    return 3.0;
}
const v45 = [1000000.0,1000000.0,1000000.0];
try { v45.indexOf(0.0519480377224133); } catch (e) {}
class C47 extends f44 {
    [-1] = v45;
    static get c() {
    }
    m(a50) {
    }
    set e(a52) {
    }
    static get h() {
    }
}
try { new C47(); } catch (e) {}
Uint8ClampedArray.prototype = Uint8ClampedArray;
