const v0 = [];
const v1 = [5,-63729,5,58921,24468,-65535,9223372036854775807,641632848];
function f2() {
    function f3() {
        for (let v5 = 0; v5 < 5; v5++) {
            function f6() {
                (623782.6377989235).constructor();
                return 623782.6377989235;
            }
            f6.call();
            %OptimizeFunctionOnNextCall(f6);
        }
        return 623782.6377989235;
    }
    return f3;
}
Object.defineProperty(v1, "toString", { writable: true, get: f2 });
const v9 = [512,1691235322,14,2,924655517,1518387121,-8,-685036221,-2147483649];
const v10 = [-279882845,6636,-1024];
v10.toString = f2;
function f11(a12) {
    const o19 = {
        [v1](a14, a15) {
            Object.defineProperty(a12, "length", { writable: true, configurable: true, value: a12 });
            this[62] = v10;
            const v17 = v9["at"](a14);
            function f18() {
                return v17;
            }
            return a15;
        },
        [v10]: v10,
        [v1]: v9,
        "b": v0,
        ...v9,
        __proto__: a12,
    };
    return o19;
}
f11(v0);
f11(v1);
f11(v0);
[-8,4,-9,-256,-4096,1298540701,268435440,-9223372036854775807,512,-54176];
[13,10000];
[45870,-820548009,65535,-9007199254740990,-4294967297,-8178,1073741824,1000,-268435456,45223];
/(N[\cZ])/gimy;
/[\cZ]/viy;
/[a-zA-Z0-9]/gumy;
/(?=)/gvdi;
/Ia\bcY+/guiy;
/a*b|c8foo|(bar|baz)|quux/gudim;
function F35(a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    const v39 = this?.constructor;
    try { new v39(4.0, 4.0); } catch (e) {}
    a37 < a37;
    const v42 = a38 << a38;
    v42 != v42;
    try {
        this.h = a38;
    } catch(e44) {
    }
    try {
        this.a = a37;
    } catch(e45) {
    }
    try {
        this.e = a38;
    } catch(e46) {
    }
}
new F35(547507.481762301, 547507.481762301);
function F48(a50, a51) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e52) {
    }
}
try {
} catch(e53) {
}
const v55 = Symbol.toPrimitive;
const o61 = {
    [v55]() {
        function F57(a59, a60) {
            if (!new.target) { throw 'must be called with new'; }
        }
    },
};
