function f0() {
    const o13 = {
        "b": -7.476317886978176,
        get e() {
            this in this;
            let v6 = super[-5.0];
            const v8 = new Date();
            [v8];
            new Uint32Array(4);
            v6 += -7.476317886978176;
            return 129;
        },
        "e": -5.0,
        ...129,
        "a": -5.0,
        "g": f0,
        "f": 129,
        "h": -5.0,
        "c": 129,
        __proto__: f0,
    };
    return o13;
}
const v15 = new WeakSet();
function f16(a17) {
    const o22 = {
        set b(a19) {
            const v20 = v15.constructor;
            class C21 extends v20 {
                [a17] = a17;
                static #e = v20;
            }
        },
    };
    return a17;
}
const v23 = f0();
v23.f = f16;
const v24 = f0();
try { v24.hasOwnProperty(WeakSet); } catch (e) {}
const v26 = f0();
function f27(a28, a29) {
    a28.e;
    a29.e = a29;
    a28.e = a28;
    const v31 = a29?.__defineSetter__;
    const v32 = v31.name;
    let v33;
    try { v33 = new v31(a29, f0); } catch (e) {}
    let v34 = v26[v23];
    v34 = v32;
    v26[1] = f0;
    f0();
    %PrepareFunctionForOptimization(f0);
    f0();
    f0();
    %OptimizeFunctionOnNextCall(f0);
    f0();
    const o47 = {
        "b": v26,
        "g": a29,
        m(a40) {
            return f0;
        },
        4294967295: v26,
        set h(a42) {
        },
        [v24]: f0,
        114: v23,
        "e": a29,
        "f": v23,
        ...v23,
        256: v26,
        toString(a44, a45, a46) {
            return a44;
        },
        ...a28,
        "d": a29,
        [v26]: a28,
        "h": a29,
    };
    o47[114];
    o47.e = o47;
    v34 = v33;
    try { v34["m"](f27, f27); } catch (e) {}
    /y5{12,/dms;
    /qxyz{0,1}/uisy;
    /(x)(x)(x)\3/gvims;
    function F54(a56) {
        if (!new.target) { throw 'must be called with new'; }
        this.constructor.arguments;
    }
    class C59 extends f0 {
    }
    const v60 = C59?.constructor;
    try { new v60(F54); } catch (e) {}
    const v62 = new C59();
    v62.concat;
    return f27;
}
const v64 = f27(v26, v26);
v64[114] = v64;
f27(v23, v26)[256];
f27(v24, v26);
-114997600n ^ -114997600n;
-114997600n <= -114997600n;
536870887n | 536870887n;
for (let v75 in [-65535,536870889,4096]) {
    v75[0] = v75;
    try { Math.round(f0); } catch (e) {}
    v75--;
    Math.log10(v75);
    let v81 = v75 ** 1000000000000.0;
    v81++;
}
try { new Date(f0, f16, v23, f0, v23, v23, f0); } catch (e) {}
const v85 = new Date();
try { v85.setFullYear(v26, f0, v26); } catch (e) {}
f16--;
v85.toLocaleDateString()[6];
