const v5 = new Array(4096);
class C6 {
    constructor(a8, a9, a10) {
        const o13 = {
            "maxByteLength": 3289434788,
        };
        let v14 = 0;
        while (v14 < 3) {
            o13[a9] = "-60585136";
            try { v5.toSorted(); } catch (e) {}
            this.e;
            v14++;
        }
        const v21 = new ArrayBuffer(2363, o13);
        new Float32Array(v21);
    }
}
const v24 = new C6("-60585136", 4096, "-60585136");
const v25 = new C6("number", Array, v24);
let v26 = new C6("lPqy", v25, "lPqy");
class C27 {
    static [-2] = C6;
    n(a29, a30) {
        try {
            C6.f = "lPqy";
        } catch(e31) {
            v26 = e31;
            try {
                const t28 = "-60585136";
                t28.g = a29;
            } catch(e32) {
            }
        }
        return C6;
    }
    226;
    [v5];
    static d;
}
new C27();
new C27();
new C27();
const v37 = [1073741824,1073741823,1376142744,1073741825];
v37.g = v37;
function f38(a39, a40, a41, a42) {
    try {
        v37.forEach(a42, a39);
    } catch(e44) {
    }
    const o46 = {
    };
    const v48 = new Proxy(Uint8ClampedArray, o46);
    try { v48.apply(Symbol, f38); } catch (e) {}
    return o46;
}
for (let v50 = 0; v50 < 10; v50++) {
    const v51 = f38(v37, v50, f38, f38);
    let v53 = -1073741824;
    v51 && C27;
    Math.log2(C27);
    Math.asinh(v51);
    let v58 = v53++;
    v53 * 536870889;
    Math.atan2(C27, C27);
    v58++;
}
%OptimizeFunctionOnNextCall(f38);
f38();
