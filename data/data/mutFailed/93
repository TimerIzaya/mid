new Array(5);
const v8 = BigInt64Array.BYTES_PER_ELEMENT;
const v9 = new v8(257);
try { v9.join(64); } catch (e) {}
257 != 1590;
new BigInt64Array(1590);
BigInt64Array.name = BigInt64Array;
new BigInt64Array(9);
536870888 / 536870888;
function f22() {
    return -2147483648;
}
function F23(a25) {
    if (!new.target) { throw 'must be called with new'; }
    const v26 = v8?.constructor;
    try { new v26(v26); } catch (e) {}
    try {
        this.f = 145253519;
    } catch(e28) {
    }
}
new v8();
new F23(-2147483648);
[7,-2147483647,268435456,9007199254740991,-4096];
[268435441,268435439];
-65106n ^ -65106n;
new Uint16Array(6);
Int8Array.d = Int8Array;
const o43 = {
    "execution": "async",
};
o43.execution;
Array(o43);
const v2 = new Int32Array(3383);
const v5 = new Int8Array(3);
function F7() {
    if (!new.target) { throw 'must be called with new'; }
}
Array();
class C11 {
}
const v12 = new C11();
function f13() {
    const o18 = {
        valueOf(a17) {
        },
        __proto__: v12,
        [-52276]: -410.8373818683839,
    };
    return o18;
}
Object.defineProperty(f13(), 5, { set: f13 });
class C21 extends v5.constructor {
    #b;
    1 = C11;
}
new C21();
Int32Array.b = Int32Array;
new Int16Array(127);
const v25 = [-1000000000.0,1e-15,-9.803124315434264,-366.4099400694298,1000000000000.0,0.7347183727038488,-Infinity,2.0,0.3916117682859279,-461027.2128179858];
function f26() {
    return v25;
}
class C27 extends f26 {
    [f26] = f26;
}
function f28() {
    return v2;
}
[3];
[1444506438,9007199254740991,-46124];
function f34() {
    return f34;
}
function f35() {
    return f35;
}
const t44 = /(?:ab)(?:a?)?/mgiu;
t44.valueOf = -7;
