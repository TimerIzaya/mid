new WeakMap();
function F2(a4) {
    if (!new.target) { throw 'must be called with new'; }
    class C6 extends BigInt64Array {
    }
    Math.acosh(1073741825);
    try {
        this.f = a4;
    } catch(e10) {
    }
}
new F2(WeakMap);
const v13 = new Uint32Array();
try { v13.map(v13); } catch (e) {}
const v16 = 536870912n << 536870912n;
-v16;
const v18 = new F2(F2);
const v19 = new F2(WeakMap);
const v20 = [-744673.3297502734,-1000000000.0,-894446.5347356123,0.5008261968118526,1.0,-1000000000.0];
const v21 = [820614.5617819829,-1000000.0,1e-15,1.3156841627616078];
const v22 = [-273147.6557577348,-1000000000000.0,-2.2250738585072014e-308,NaN,0.8374116396085172,-3.0];
const o25 = {
};
const v26 = [-2.220446049250313e-16];
function f27() {
    function f29(a30) {
        a30 !== v26;
    }
    this.onmessage = f29;
}
class C34 {
    [F2];
    g = v21;
    constructor(a36, a37) {
        v21[a36] = a36;
        /k+/vsy;
        new BigInt64Array(v26);
        class C42 {
            m(a44, a45) {
                0.0 ** this;
            }
            static get c() {
                let v48 = 10;
                for (; v48--;) {
                    super.c = this;
                    Symbol.isConcatSpreadable;
                }
            }
        }
        const v52 = new C42();
        const v53 = [0.41400040521582504,-2.2250738585072014e-308,1000000000.0,1.0,-7.840812307817487,0.8468093444532201];
        const v54 = [0.7320309079988974,-2.0,474241.4698858885];
        class C55 extends C42 {
            o(a57, a58, a59) {
                Math.abs();
                Math.round(a59);
                Math.acosh();
                Math.sinh();
                return v53;
            }
            #g = C42;
            [v16];
            245 = v16;
            [v54] = v52;
        }
        const v65 = new C55();
        v65.m();
        /la(?=bbb|bb)c/vdy;
        /H8\u0060/vs;
    }
    static {
        Object.defineProperty(this, 10, { writable: true, enumerable: true, value: this });
    }
    #a;
    #a = 10;
    static o(a71, a72, a73, a74) {
        super[a72] = this;
        try { a73.p(v21, v18, v19, 128, this); } catch (e) {}
        return v22;
    }
}
new C34(v21, v20);
new C34(v22, F2);
new C34(v21, v19);
const o81 = {
    "type": "function",
};
try {
} catch(e82) {
}
const v83 = new Float64Array();
const t91 = [-24725,-9223372036854775807,268435439,-267077871,-63246,2147483647,-12];
t91.length = 99;
gc();
v83 > Uint32Array;
