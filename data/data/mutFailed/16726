function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = 1498706617;
    } catch(e3) {
    }
    try {
        this.c = 1498706617;
    } catch(e4) {
    }
}
const v5 = new F0();
new F0();
new F0();
[-128,129,4096,1024,-359130424,29642,11,1073741823,1591720658];
class C17 extends /nupa\Sc/vms.constructor {
}
function f18() {
    return v5;
}
[-4096];
[10000,28144,61389];
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    const v26 = this.constructor;
    try { new v26(268435440n, a25); } catch (e) {}
    this.f = 268435440n;
}
const v28 = new F22();
const t29 = -9007199254740991n;
t29[0] = -9007199254740991n;
function F29(a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
}
const v36 = new F22(268435440n);
let v37 = 512;
v37--;
function f39(a40) {
    const v42 = new Uint32Array(-65536);
    class C43 {
        constructor(a45, a46, a47, a48) {
            for (let v49 = 0; v49 < 5; v49++) {
                v42[v49] = a48;
            }
        }
    }
    const o52 = {
        ...v37,
        5: v37,
        valueOf(a51) {
            return v28;
        },
        "g": v37,
    };
    return v36;
}
%PrepareFunctionForOptimization(f39);
f39();
("sync")[-5.0];
function f57() {
}
f57();
f39();
%OptimizeFunctionOnNextCall(f39);
f39(268435440n);
