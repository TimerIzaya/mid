const v2 = new BigUint64Array(7);
const v5 = new Uint16Array(5);
const v8 = new BigUint64Array(2335);
class C9 extends BigUint64Array {
    #b = 7;
    constructor(a11, a12, a13) {
        super(v2);
        const v14 = (a15, a16) => {
            'use strict';
            !2335;
            for (let v18 = 0; v18 < 32; v18++) {
                v8["p" + v18] = v18;
            }
            return v8;
        };
    }
}
new C9(7, BigUint64Array, 2335);
new C9(5, C9, 2335);
new C9(5, 5, 7);
let v24 = [];
let v26 = [0.3012804967226079,85204.01188321039,653.7200248137515,0.7021499874307531,803753.7144966745,852811.0132933464,-9.957521439166277e+307,-2.2210475327078026e+307];
const v27 = [0.16312007947772267];
const v28 = [NaN,-1e-15];
class C29 {
    [1802204217] = v28;
    static 3516;
    constructor(a31) {
        super();
        for (let v32 = 0; v32 < 5; v32++) {
            super.valueOf();
        }
    }
    #h;
    static 0 = 1802204217;
    /*
    constructor(a35, a36) {
    }
    */
    static [v26] = v27;
    static 13;
    static #c = v24;
}
("h").split(65535);
for (let i42 = 0, i43 = 10; i42 < i43; i43--) {
}
const v50 = new C29(C29, v28);
const v51 = new C29(v50, v5);
const v52 = new C29(v51, v27);
v24 = v28;
const v55 = Reflect.construct(C29, [Reflect,v26], C29);
const v56 = [268435440,8,7,1073741824,2147483647,70520590,-9223372036854775807,129,268435439,-1147002105];
v56.concat(v56);
function f58(a59, a60) {
    a60(a59);
    return f58;
}
v26 = v55;
try {
    v52.fuck(v26, -1024n, /{z}cv[\0]+/giy);
} catch(e65) {
}
