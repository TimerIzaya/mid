let v0 = 257;
let v1 = 109771003;
class C3 {
    static #n(a5, a6, a7, a8) {
        this[257] *= v1;
    }
    constructor(a12, a13) {
        v0 >>>= (v1 = v0);
        const o15 = {
            get c() {
                return this;
            },
        };
        return o15;
    }
    static {
        let v17;
        try { v17 = this.getSeconds(v1, v1, v1, -306.6584956817626, this); } catch (e) {}
        let v19;
        try { v19 = v17(); } catch (e) {}
        v19[48] >>= v17;
    }
    #c;
}
new Float64Array(1073741824);
function f23() {
    return f23;
}
const v24 = new C3(v1, C3);
6 >>> 1073741824;
("setUTCMinutes").toUpperCase();
("setUTCMinutes").normalize();
new C3(v24, v24);
new C3(v0, -306.6584956817626);
function f38() {
    class C41 extends Int8Array {
    }
    new C41();
    !-2;
    class C47 {
        static {
            try { this(this, 3.866732047176795e+307, this, ...this); } catch (e) {}
        }
    }
    const v50 = [Reflect,Reflect,Reflect,Reflect,Reflect];
    1940694780n == v50;
    const v53 = [-4,536870888,-65243,-256,-4294967295,65536,-12];
    const v54 = [-2096457859];
    const v55 = /a+b|cu(?:foo)*/u;
    const v57 = new Map();
    class C58 {
        constructor(a60, a61, a62, a63) {
            const v64 = v54.__proto__;
            this & v55;
            v64[6] = a61;
        }
        toString(a67, a68, a69, a70) {
            super[v53] = v57;
        }
    }
    new C58(v53, v54, v55, v53);
    Reflect.construct(Symbol, v50);
    return f38;
}
try { f38(); } catch (e) {}
class C3 {
    e;
    constructor(a5) {
        try {
            a5.toString = a5;
        } catch(e6) {
        }
        try {
            a5[a5] = a5;
        } catch(e7) {
            e7.message = e7;
        }
    }
    c = C3;
}
new C3(C3);
const v9 = new C3(C3);
const v10 = new C3(-2.0);
const v11 = v10.c;
-65536n == -65536n;
1073741824 - 1073741824;
let v25;
try { v25 = new Uint32Array(9n, 4096, -65536n); } catch (e) {}
new Uint32Array(-3);
v11.length;
new Int32Array(9);
new v25(120);
try { Array.bind(v9); } catch (e) {}
Array();
const v40 = new Int8Array(Array, 92, 485);
v40[277] = v40;
let v41 = 3666;
const v42 = v41 - v41;
v42 + v42;
let v44 = 0;
v41++;
const v47 = v25--;
(v44 < 1) && v47;
const v50 = v44++;
v50 * v50;
let v52 = BigUint64Array;
let v53 = v52.length;
v53--;
v53-- | 9n;
new v52(v50, 485, v41);
const v60 = BigInt64Array.bind();
v60.name = 4096;
try { v60(); } catch (e) {}
new BigInt64Array();
const v63 = [1000,-14,16,-11,-1413918991,-16,-374255446,-14,1000,10];
let v64;
try { v64 = v63.sort(); } catch (e) {}
try { v64.sort(-65536n); } catch (e) {}
const v66 = [-2,-391505046,1239387087,-37770,536870888,8,-9007199254740991,-16204,-65536,3];
try { v66.pop(); } catch (e) {}
try { v66.toLocaleString(); } catch (e) {}
const v69 = [-9223372036854775807,1073741824,-65535,1945375758,4294967295,-9,-65537,1,-268435456];
v69.pop();
let v71;
try { v71 = v69.push(v64, v64); } catch (e) {}
v71--;
const v73 = v71 << v71;
v73 ^ v73;
let v77;
try { v77 = ("boolean").toLocaleLowerCase(); } catch (e) {}
const v78 = v77?.replaceAll;
try { new v78(485, v47); } catch (e) {}
class C81 {
}
try { C81.toString(); } catch (e) {}
const v83 = new C81();
const t71 = v83.constructor;
new t71();
const v88 = new Float32Array(1429);
BigInt64Array.g = BigInt64Array;
v88[2] = BigInt64Array;
[v52,v77] = [-5,-65535,2269];
