class C3 {
    get e() {
        const v5 = super.g;
        super.a -= v5;
        new Array(13, Array, -65535, Array);
        return v5;
    }
    6;
    static #a;
    static [-1];
    static #f = 255;
}
const v9 = new C3();
const v10 = new C3();
const v11 = new C3();
function F15(a17, a18, a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v11;
    } catch(e21) {
    }
    try {
        this.a = a18;
    } catch(e22) {
    }
    new F15(a18, 65536, this, -65535, v9, v10);
    v9[2708] <<= a18;
    const t27 = "string";
    t27[Symbol.split] = a19;
    try {
        this.g = C3;
    } catch(e26) {
    }
}
new F15(-65535, v11, 1073741825, 65536);
new F15(255, C3, 4, -65535);
new F15(65536, v9, 65536, 4);
function F30() {
    if (!new.target) { throw 'must be called with new'; }
    this.a = F30;
    this.a = 43806;
    this.h = 43806;
    this.c = 43806;
}
new F30();
const v34 = new F30();
([0.6757774703824373,0.7659452606332188]).join(F30);
const v37 = [-1000000000000.0,0.42720131076488843,-2.2250738585072014e-308];
const v38 = [1.0,-880481.6395920017];
2974 & 2974;
const v42 = new Uint8Array(2974, Uint8Array, F15, 4);
v42[730] = v42;
let v43 = 10;
const v44 = v43--;
const v46 = new Float64Array(v43);
v46[8];
let v48;
try { v48 = v46.entries(); } catch (e) {}
try { v48.next(); } catch (e) {}
Float64Array.name;
const v53 = new Float64Array(9);
v53[1];
function f56() {
    const o105 = {
        m(a59) {
            const v60 = this?.__defineGetter__;
            try { new v60(this, F30); } catch (e) {}
            Object.defineProperty(this, "h", { writable: true, configurable: true, value: v38 });
            const v62 = this?.__defineSetter__;
            try { new v62(v43, v43); } catch (e) {}
            a59.f = a59;
            let v64;
            try { v64 = a59.next(); } catch (e) {}
            try { v64.bind(9); } catch (e) {}
            a59.c = a59;
            a59.h = a59;
            const o66 = {
            };
            o66.h = o66;
            o66.h = o66;
            o66.h = o66;
            o66.h = o66;
            function f67(a68, a69, a70) {
            }
            try { f67(128, 128, 128, v43, v46, Float64Array); } catch (e) {}
            const v73 = f67.length;
            f67.caller = f67;
            v37[v62] = 255;
            v37 << v9;
            const v80 = Math?.expm1;
            try { new v80(this); } catch (e) {}
            const v83 = 1667070567 >> 1667070567;
            -(v83 - v83);
            class C86 {
                o(a88, a89, a90, a91) {
                }
            }
            let v92;
            try { v92 = new C86(); } catch (e) {}
            const v93 = v92?.__defineGetter__;
            try { new v93(-65535, v37); } catch (e) {}
            const v95 = C86.name;
            const v96 = v95?.italics;
            try { new v96(); } catch (e) {}
            3938 ^ 3938;
            3938 - v44;
            try { Int8Array(v73, v95, Math); } catch (e) {}
            const v103 = new Int8Array(3938);
            let v104 = 3;
            [...v104] = v103;
        },
    };
    try { o105.m(Float64Array); } catch (e) {}
    function f107(a108) {
        function F109(a111, a112) {
            if (!new.target) { throw 'must be called with new'; }
            this.f = a111;
        }
        return Float64Array;
    }
    o105.next = f107;
    o105.m(o105);
}
f56.length = f56;
f56(v34, v44, v37);
f56();
