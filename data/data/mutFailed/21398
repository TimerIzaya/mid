function f3() {
    return -61723;
}
class C4 {
    n(a6) {
        this[this] = f3;
        try {
            f3();
        } catch(e8) {
        }
        super[a6] = -61723;
        return f3;
    }
    static #b;
    static #d = -61723;
    static [2147483648];
    [2147483648];
    9 = 2147483648;
}
C4[2147483648] = C4;
const v9 = new C4();
const v10 = new C4();
const v11 = new C4();
v11[9] = v11;
function f12() {
    return -25341;
}
const v14 = [v9,-61723];
try { v14.entries(); } catch (e) {}
const v16 = [v14,v14,-61723];
v16[1];
const v18 = [v16,C4,f12,v10];
let v19 = 9.800617968081333;
v19++;
2.0 | 2.0;
const v25 = new Float32Array(Float32Array);
function f26(a27, a28, a29, a30) {
    const v31 = a27[1];
    v31 + v31;
    const v33 = a28--;
    v33 - v33;
    a27[0] = a27;
    a28 <= a28;
    arguments[1] = arguments;
    const v37 = arguments?.__lookupGetter__;
    v37.length;
    try { v37.constructor(); } catch (e) {}
    let v40;
    try { v40 = v37(v37, f26, a28, arguments); } catch (e) {}
    return v40;
}
for (let v41 = 0; v41 < 10; v41++) {
    f26(v25);
}
class C47 {
    static 7;
    static [-1] = "string";
    #n(a49) {
        a49 = this;
        a49.e >>>= -35417;
        const o53 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o53);
        return this;
    }
}
new C47();
const v59 = Array();
const v60 = Array();
const v61 = v60?.__defineSetter__;
try { new v61(f12, f12); } catch (e) {}
-9.187362692894364;
class C65 {
    static 9 = 9.187362692894364;
}
const v66 = C65?.constructor;
try { new v66(v19); } catch (e) {}
for (const v68 in C65) {
}
class C69 {
    #e;
    static {
        try { this.toString(); } catch (e) {}
        function f72(a73, a74) {
            return a73;
        }
        f72.name = f72;
        const o81 = {
            o(a76) {
                try { a76.o(v59); } catch (e) {}
                const o79 = {
                };
                o79.e = o79;
                return gc(o79);
            },
        };
        const v82 = o81?.o;
        try { new v82(-25341); } catch (e) {}
        const o85 = {
        };
        const v87 = new Proxy(Uint32Array, o85);
        try { new v87(v87, Uint32Array, v18); } catch (e) {}
        o81["o"](o81, Uint32Array, "o", "o", v87);
        const v91 = super[this];
        try { v91.join(-4096, -4096, v91); } catch (e) {}
        const o93 = {
        };
        o93.g = o93;
        const v94 = /LD/vds;
        1000.0 !== 1000.0;
        [v94,1000.0];
    }
    static f;
    m(a99, a100) {
        const o101 = {
        };
        const o104 = {
        };
        const v106 = new Proxy(Uint8Array, o104);
        v106.d = v106;
        new Proxy(this, o101);
        for (let v108 = 0; v108 < 5; v108++) {
        }
        const v109 = f12.constructor;
        v109.d = v109;
        let v110;
        try { v110 = new v109(); } catch (e) {}
        try { v110.bind(v110); } catch (e) {}
        v110.e = v110;
        const v115 = new Set();
        v115.add;
        [Reflect,[0.3012804967226079,85204.01188321039,653.7200248137515,0.7021499874307531,803753.7144966745,852811.0132933464,-9.957521439166277e+307,-2.2210475327078026e+307]];
        class C122 {
        }
        function f123() {
            let v124 = 1000000000000.0;
            v124--;
            class C127 {
            }
            new C127();
            const v129 = new C127();
            [C122,C127];
            [257828.6336153492,v129];
            [v129];
            class C133 extends C47 {
            }
            function f134(a135, a136) {
                return -4096;
            }
            Set.toString = f134;
            Set.constructor(Set);
            v60.constructor;
        }
        const v140 = "string" && -4096;
        +a100;
        Math.sqrt(v140);
        a99--;
        -509886178 << -509886178;
        return this;
    }
}
new C47();
2 >= 2;
function f148() {
    const v151 = [8n,8n,8n,8n] > 8n;
    let v152 = 0;
    for (let v153 = 0; v153 < 5; v153++) {
        Array(36862);
    }
    while (v152 < 10) {
        for (let v159 = 0; v159 < 5; v159++) {
            "n" + v159;
        }
        v152++;
    }
    return v151;
}
%OptimizeFunctionOnNextCall(f148);
const v163 = new C69();
const v164 = v163?.constructor;
try { new v164(); } catch (e) {}
new C69();
let v169 = -21383n;
v169--;
const v174 = new WeakSet();
const v175 = v174?.constructor;
try { new v175(); } catch (e) {}
function F177(a179, a180, a181, a182) {
    if (!new.target) { throw 'must be called with new'; }
    function F183(a185, a186) {
        if (!new.target) { throw 'must be called with new'; }
        function f187() {
            const v188 = [-Infinity,1.7976931348623157e+308,1.0,1.7976931348623157e+308,-1.0,Infinity];
            v188.length >>>= -65536;
            return v188;
        }
        f187();
        try {
            new F183(a180, a185);
        } catch(e192) {
        }
    }
    new F183();
}
try { new F177(Array, v25, v25, -35417); } catch (e) {}
const v195 = v174.constructor;
v195.prototype = v195;
class C196 extends v195 {
}
let v201 = ("undefined").localeCompare("undefined", "symbol", "undefined");
v201++;
v201.constructor;
const v205 = [1073741824,1073741823,1376142744,1073741825];
function f206(a207, a208, a209, a210) {
    a208.g = a208;
    for (let v211 = 0; v211 < 500; v211++) {
    }
    v205.push(a209);
    const o215 = {
    };
    o215.g = o215;
}
f206(undefined, f206, f206, v205);
const v217 = new Uint16Array(512);
class C219 {
}
function F220(a222, a223) {
    if (!new.target) { throw 'must be called with new'; }
}
F220.caller;
const v225 = new Float32Array(v217);
v225[217];
