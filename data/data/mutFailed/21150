class C3 {
    1870;
    [-4096n] = 12568n;
    o(a5, a6) {
        super.h;
        new Set();
        new Uint8ClampedArray(682);
        new Uint16Array(-14);
        new Int8Array(2);
        return Set;
    }
}
const v19 = new C3();
new C3(64096n);
new C3();
const v31 = [1.7976931348623157e+308,-413892.0889157214,1.3273338355683957e+308];
const v32 = [2.6106058781874725e+307,1.0,285529.63794448716];
function f33(a34) {
    const v37 = new Int16Array(1122);
    return v37;
}
v32.valueOf = f33;
const v38 = [8.054972930120389,0.5017077090516519,-Infinity,-4.0,-6.00897007142827,1.0,-6.545477670141786e+307,-3.0,1000000000000.0,-1.4537848745596893e+308];
class C39 {
    static 6 = v32;
    static #o(a41, a42) {
    }
    [3];
    constructor(a44, a45) {
        Object.defineProperty(a44, Symbol.toPrimitive, { enumerable: true, value: f33 });
        function f48(a49, a50) {
            return a50;
        }
        a44.toString = f48;
        /W(jy2)/udy.flags;
        Object.defineProperty(Uint8Array, "valueOf", { enumerable: true, value: Symbol });
        let v58 = v32[C39];
        v58 **= Uint8Array;
        function f59(a60, a61, a62, a63) {
            return a62;
        }
        for (let v64 = 0; v64 < 625; v64++) {
            f59(Uint8Array, 2, v64);
            try {
                a44 &= -5.160144283511562e+307;
            } catch(e66) {
            }
        }
    }
    static 1014337901 = -338.7491556798858;
    4294967295;
    #n(a68, a69, a70, a71) {
    }
    static f;
    #toString(a73, a74, a75, a76) {
    }
    static [v32] = -5.160144283511562e+307;
    /*
    constructor(a78, a79, a80) {
        new BigUint64Array();
        const o83 = {
            ...v19,
        };
        v32[1073741825] = a80;
        v32[12] = this;
        a79 ** super[a79];
    }
    */
    static 4294967296;
    680145677 = -338.7491556798858;
    #f;
    228 = -338.7491556798858;
}
function f86(a87, a88) {
    C39[-1] = a87;
    try {
        v31.e = 1000.0;
    } catch(e89) {
    }
    return "HMf9H";
}
C39[Symbol.toPrimitive] = f86;
function f92(a93, a94) {
    %VerifyType(a93);
    new Int8Array(v32);
    return 1000.0;
}
C39.toString = f92;
const v97 = new C39(v32, v38, v31);
new C39(v97, v97, v38);
const v103 = new Uint8Array(208);
new BigInt64Array();
for (const v106 of v103) {
    for (let v107 = 0; v107 < 5; v107++) {
        "p" + "p";
    }
}
for (let i112 = 256n, i113 = 10; i112 < i113;) {
}
class C119 {
}
class C120 {
}
function f121(a122, a123, a124, a125) {
    for (let v126 = 0; v126 < 5; v126++) {
    }
}
