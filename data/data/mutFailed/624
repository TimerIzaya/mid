class C3 {
    [1000000.0];
    #e = 1073741824;
    static toString(a5, a6) {
        ("string")[1024];
        const v9 = [-2.220446049250313e-16,-1000000000.0,-1e-15,1000000000.0,-1.0,1000000000.0,-1000.0];
        const v10 = [1000000000000.0,1e-15];
        class C15 {
        }
        const v16 = new C15();
        class C17 {
            [255] = 9007199254740990;
            static m(a19, a20) {
            }
            [false] = false;
            static [255];
            [v16] = v16;
        }
        /a\W?/d;
        v9.fill(v10, v9);
        v10[3] = -1000000.0;
        delete v10[2];
        new Uint16Array(2);
        new BigInt64Array(0);
        const v32 = new Uint16Array(0);
        return v32;
    }
}
const v33 = new C3();
const v34 = v33[1000000];
new C3();
const v36 = new C3();
v36[1000000] = v36;
let v38;
try { v38 = v34(v34); } catch (e) {}
let v39;
try { v39 = v38(v36, ...1000000.0, v33, v38, v34); } catch (e) {}
let v40;
try { v40 = v38(v39); } catch (e) {}
v40 = 1073741824;
let {"a":v41,"h":v42,} = v34;
function F48(a50, a51) {
    if (!new.target) { throw 'must be called with new'; }
    const v52 = this?.constructor;
    try { new v52(v36, 5); } catch (e) {}
}
const v54 = new F48(F48, F48);
function f55(a56, a57) {
}
new Promise(f55);
Math.asinh(~v54);
