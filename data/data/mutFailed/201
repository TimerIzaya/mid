const o3 = {
    "maxByteLength": 536870889,
};
let v4 = 217;
new SharedArrayBuffer(v4, v4);
const v7 = new Float64Array(75);
const o14 = {
    0: "1ya",
    next() {
        v4--;
        v4 == 0;
        const o13 = {
            "done": 0,
            "value": v4,
        };
        return o13;
    },
    162: "1ya",
};
const v17 = new Uint8ClampedArray(1024);
const v20 = new Uint8ClampedArray(127);
function f21() {
    return 127;
}
const v22 = [Float64Array,f21,v20,Uint8ClampedArray,v17];
const v23 = [v22,v20,f21,f21];
[v7,1024,v23];
class C27 {
}
const t29 = 536870889;
const v28 = new t29();
-v28;
function F30() {
    if (!new.target) { throw 'must be called with new'; }
}
new F30();
-1304034723 && 2.220446049250313e-16;
new Uint8ClampedArray(4);
function F37(a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a40;
    } catch(e41) {
    }
    class C42 {
    }
    class C43 {
    }
    new C43();
    try {
        this.h = a39;
    } catch(e45) {
    }
    try {
        this.b = Uint8ClampedArray;
        const v47 = new BigUint64Array();
        return this;
        const o49 = {
            "execution": "1ya",
            "type": "minor",
        };
        v47["copyWithin"]();
        Math.acosh(65535);
    } catch(e55) {
    }
}
new F37(75, v23);
new F37(1024, v23);
new F37(Uint8ClampedArray, v22);
class C60 {
}
class C61 extends C60 {
    m(a63, a64, a65) {
        for (let [v66,v67] of "puWUt") {
        }
    }
}
function F75(a77) {
    if (!new.target) { throw 'must be called with new'; }
}
const v78 = new F75();
const v79 = F75 >>> 536870887;
with (v78) {
    typeof v79;
    const v81 = [4.0,-1.7976931348623157e+308];
    function F82(a84, a85, a86) {
        if (!new.target) { throw 'must be called with new'; }
    }
    new F82(F82, v81, F82);
    let v88 = 10;
    for (; v88--;) {
    }
}
const v1 = new WeakSet();
let v4 = 0.3142188728497166;
v4--;
[5.37981096153086e+306,v4,v1];
const v8 = [v4,5.37981096153086e+306,[WeakSet,v4,5.37981096153086e+306],5.37981096153086e+306,v4];
-16 - -16;
function f13() {
    return -12;
}
function F14(a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    a16--;
    a17 >>> a17;
    try {
        this.b = v8;
    } catch(e20) {
    }
    try {
        this.a = f13;
    } catch(e21) {
    }
    try {
        this.d = 5.37981096153086e+306;
    } catch(e22) {
    }
}
const v23 = new F14(31966, -16);
const v24 = v23?.constructor;
try { new v24(WeakSet, v1); } catch (e) {}
const v26 = new F14(-12, -12);
new F14(-16, -16);
-646.1492350075769 >= -646.1492350075769;
class C32 {
    e;
    constructor(a34) {
        try {
            a34.toString = a34;
        } catch(e35) {
            e35.b = e35;
        }
        try {
            a34[a34] = f13;
        } catch(e36) {
            e36.e = e36;
        }
    }
    c = -3;
}
C32.prototype = C32;
new C32(C32);
const v38 = new C32(C32);
const v39 = new C32(-2.0);
const v40 = v39.c;
v40 ^ v40;
let v43 = 65537n;
v43++;
const v49 = -65536n == -65536n;
v49 || v49;
1073741824 - 1073741824;
try { Uint32Array.apply(-12, v1); } catch (e) {}
try { new Uint32Array(9n, -3, -65536n); } catch (e) {}
new Uint32Array(4096);
9 - 9;
Int32Array.length;
WeakMap.name = WeakMap;
const v65 = new C32();
v65.c = v65;
const o70 = {
    set b(a67) {
        this.b = this;
        Math.log10();
    },
};
o70.b = o70;
function f71() {
    const o72 = {
        __proto__: f71,
    };
    o72.arguments;
    return WeakMap;
}
const v74 = f71();
v74.name = v74;
new Int32Array(9);
new Uint16Array(120);
try { Array.from(v26); } catch (e) {}
let v81;
try { v81 = Array.bind(v38); } catch (e) {}
v81.length;
Array();
const v87 = new Int8Array(Array, 92, 485);
v87[277] = v87;
let v88 = 3666;
v88++;
const v90 = v88 - v88;
v90 + v90;
const v94 = 0 < 1;
!v94;
const v96 = v94 && v94;
v96 || v96;
const v101 = [1000,-14,16,-11,-1413918991,-16,-374255446,-14,1000,10];
v101.g = v101;
const v102 = v101.sort();
try { v102.reduce(v102); } catch (e) {}
try { v102.sort(-65536n); } catch (e) {}
try { new BigInt64Array(4096, BigInt64Array, BigInt64Array); } catch (e) {}
BigInt64Array.g = BigInt64Array;
