const v5 = new Uint16Array(93);
try { v5.includes(93); } catch (e) {}
BigUint64Array.g = BigUint64Array;
const v9 = new BigUint64Array(1.0);
try { v9.some(1.0); } catch (e) {}
new Float64Array(257);
let v18 = 0.6225177695488006;
const v19 = v18++;
const v20 = v19 - v19;
function f23(a24, a25, a26, a27) {
    a24 | a24;
    Object.defineProperty(a24, "g", { value: a25 });
    a26 % a26;
    -v18;
    const o34 = {
        n(a32, a33) {
        },
    };
    a27?.__lookupSetter__;
    try { new o34(v19); } catch (e) {}
    return v20;
}
try { f23(-16, BigUint64Array); } catch (e) {}
for (let v38 = 0; v38 < 625; v38++) {
    const t24 = 1.0;
    t24(Uint8Array);
}
