new BigInt64Array(196);
127 ^ 127;
new BigUint64Array(127);
try { new BigInt64Array(-832267.262043573); } catch (e) {}
Symbol.replace;
Float64Array.name = Float64Array;
new Float64Array(1024);
try { ("valueOf").toLocaleLowerCase(); } catch (e) {}
for (let v17 = 0; v17 < 5; v17++) {
    function f18() {
    }
    %OptimizeFunctionOnNextCall(f18());
}
let v23 = -1000.0;
v23--;
function F26() {
    if (!new.target) { throw 'must be called with new'; }
    const v28 = this?.__defineGetter__;
    try { new v28(this, Infinity); } catch (e) {}
    4294967297 & 4294967297;
    try {
        this.g = this;
    } catch(e32) {
    }
}
const v33 = new F26();
const o34 = {
};
const v37 = new Date();
const o38 = {
    __proto__: Date,
    [3.0]: v37,
};
new F26();
const v40 = new F26();
v40.d = v40;
try { new Uint32Array(v33, v33, Float64Array); } catch (e) {}
const v44 = new Uint32Array(3551);
v44[2891] = v44;
BigInt64Array.prototype;
new BigInt64Array(10);
const v49 = /(ya\Sc)/vds;
/i\P{gc=Decimal_Number}/gudsy;
/pa{/gsy;
%VerifyType(v49);
const t45 = "valueOf";
t45[4096] = v33;
new Float32Array(15);
Math.atan(1024);
new Int32Array(127);
2183 === 2183;
try { new Int16Array(v33, v33, Float64Array); } catch (e) {}
const v70 = new Int16Array(2183);
try { v70.some(v49); } catch (e) {}
new Uint8Array(255);
let v75 = 8;
v75++;
try { new BigInt64Array(-832267.262043573); } catch (e) {}
const v80 = new Symbol();
const v83 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v84 = [601759695];
const v86 = [];
const v87 = [1073741824,1073741823,1376142744,1073741825];
function f89(a90, a91, a92, a93) {
    function f95() {
        const o118 = {
            "c": -4294967297n,
            "arguments": v84,
            [v86]: v80,
            "h": "Vre",
            ...-4294967295,
            "c": -4294967295,
            [522675525n](a100, a101) {
            },
            ..."Vre",
            "maxByteLength": -128,
            "c": v84,
            valueOf(a103, a104) {
                return a92;
            },
            "e": -4294967295,
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v83,
            ...v84,
            "type": "Vre",
            ..."Vre",
            valueOf(a106, a107) {
                return a90;
            },
            get d() {
                Symbol.toPrimitive;
                const o111 = {
                };
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            toString(a113, a114, a115) {
                return a90;
            },
            m(a117) {
                return a117;
            },
            "execution": "UHH",
            "execution": "UHH",
            5: -4294967295,
            6: -268435456,
        };
    }
    f95();
    const v121 = new Int8Array();
    v121.buffer.slice(2147483648);
    %OptimizeFunctionOnNextCall(f95);
    try { v87["find"](..."find", a93, ...v84, ...v87, ...522675525n); } catch (e) {}
}
const v128 = new Int16Array(v75);
try { parseFloat(-812100.0217715257); } catch (e) {}
async function f131(a132, a133, a134) {
    delete v128[-1000000000.0];
    let [v136,v137,...v138] = v70;
    v70[5];
    await v137;
    return Uint8Array;
}
const o141 = {
};
try {
} catch(e142) {
}
try {
    const o145 = {
        "type": "valueOf",
        valueOf(a144) {
            return a144;
        },
        "f": 948737.12760097,
    };
} catch(e146) {
}
try {
    const o147 = {
    };
} catch(e148) {
}
try {
    const o149 = {
    };
    o149.c = o149;
    o149.g = Float32Array;
} catch(e150) {
}
