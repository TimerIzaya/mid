const v0 = [];
function f1(a2, a3) {
    function f4(a5, a6, a7, a8) {
        2147483648 ^ 2147483648;
        const v20 = new Int32Array(Symbol);
        v20[492];
        v20[3];
        return "find";
    }
    return a3;
}
v0[Symbol.toPrimitive] = f1;
function f26(a27) {
    const o28 = {
    };
    new Proxy(v0, o28);
    return a27;
}
Object.defineProperty(v0, "toString", { writable: true, enumerable: true, value: f26 });
function f31() {
    const o39 = {
        __proto__: v0,
        ...v0,
        /*
        __proto__: v0,
        */
        "f": v0,
        ...v0,
        ...v0,
        /*
        __proto__: v0,
        */
        m(a33) {
            return a33;
        },
        [v0]() {
            const v35 = this[v0];
            let v37;
            try { v37 = v35(false, false); } catch (e) {}
            this[v37] ||= v37;
            super[v0];
            return false;
        },
        "e": v0,
    };
    return o39;
}
f31();
f31();
f31();
[625979669,15,1477932232,42912,4294967296,255];
[7,1904974288,-9,-1024,9223372036854775807,5];
[-2147483649];
const v48 = new BigInt64Array(1070);
function f49(a50) {
    new Int8Array([0.600959953156498,1.0,-Infinity]);
    return Int8Array;
}
v48[Symbol.toPrimitive] = f49;
new BigUint64Array(1122);
new Float32Array(3);
function F62(a64) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor = f31;
    const v65 = this.constructor;
    v65.prototype;
    v65.caller = v65;
    try { new v65(); } catch (e) {}
}
const v68 = new F62(F62);
new F62(v68);
for (let i = 0; i < 5; i++) {
    v48[v48];
}
const v71 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v74 = new Uint32Array();
const v76 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v77 = [601759695];
const v78 = [1073741824,1073741823,1376142744,1073741825];
v78[1] = v78;
function f80(a81, a82, a83, a84) {
    function f85() {
        let v87 = Float64Array;
        v87 = a82;
        b = v77;
        const v88 = v71.length;
        try {
            v78.forEach(a82);
        } catch(e90) {
            e90.name;
        }
        const v92 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v94 = Symbol.toPrimitive;
        const o98 = {
            toString(a96, a97) {
                a96 *= v94;
            },
        };
        const o129 = {
            "c": -4294967297n,
            [522675525n](a101, a102) {
            },
            "c": v77,
            valueOf(a104, a105) {
            },
            [v88](a107) {
            },
            [-1]: 2684,
            1073741824: v74,
            "maxByteLength": -268435456,
            "b": -4294967295,
            "arguments": v92,
            [-4294967297n](a109, a110, a111, a112) {
                class C114 extends Date {
                    static get c() {
                        eval();
                    }
                }
                for (let v118 = 0; v118 < 5; v118++) {
                }
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v76,
            set b(a120) {
                const v121 = /a\w/gudsy;
                const v122 = /ka{0}/guims;
                class C123 {
                }
                const v124 = new C123();
                const v125 = new C123();
                const o126 = {
                    ...v122,
                    "d": v125,
                    "c": v94,
                    "g": v94,
                    "f": a120,
                    "a": v124,
                    7: C123,
                    __proto__: C123,
                    "e": v122,
                    "b": v121,
                };
                return o126;
            },
            256: a84,
            m(a128) {
            },
            ...v77,
        };
    }
    f85();
    eval("");
    %OptimizeFunctionOnNextCall(f85);
}
f80();
