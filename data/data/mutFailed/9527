new Int8Array(90);
new BigInt64Array(0);
let v6 = 4049;
new Uint16Array(v6);
[-0.0,-1000000000000.0,-1.757346421683506,5.44339036732896e+307,-7.51187281128843e+307,-3.0,-4.0,632988.1805185077,-1.4366685622047327e+308];
const v10 = [-705679.1594794607,-663.4771042963772,0.8442048530040164,-2.2250738585072014e-308,1000.0,5.387701172145787e+307];
const v11 = [-1.3711011324134289e+308,-1000000.0,865318.1312684296,1e-15,0.944876316084082];
class C12 extends Uint16Array {
    4294967296;
    static {
        super.length = v6;
        super.buffer;
    }
    static e;
    static #g = Int8Array;
    o(a16, a17, a18, a19) {
        const v22 = Math.expm1(10000);
        ~a16;
        Int8Array & 10000;
        %VerifyType(this);
        a17 = v11;
        v10[v6];
        Math[90] -= v22;
        v6 = v22;
        Math.fround(a16);
        return Int8Array;
    }
}
new C12();
new C12();
new C12();
try {
    BigInt(-0.9475779989772164);
} catch(e33) {
}
