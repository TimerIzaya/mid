let v0 = 16;
const v2 = new Float64Array(v0);
const v5 = new Int8Array(7);
let v6 = 1000;
const v8 = new Uint16Array(v6);
("m")[4];
throw Float64Array;
const v14 = [-1.0,-1000000.0,-2.220446049250313e-16];
const v15 = [1e-15,4.162188972171734,-1000000000000.0,-1.7976931348623157e+308,-6.174895065587293e+307];
[-3.0,-3.0];
let v18 = 536870888;
!(Int8Array >>> v8);
const v21 = --v18;
class C22 {
}
const v23 = new C22();
v0 = v6;
var d = v6;
v15[v23] /= v0;
let [] = v14;
v6 >>>= v18;
function f24(a25, a26, a27) {
    const o29 = {
        get b() {
            return C22;
        },
        127: v23,
        "a": v2,
        [v21]: v5,
        __proto__: v5,
        "b": Uint16Array,
        ...v14,
    };
    return f24;
}
%PrepareFunctionForOptimization(f24);
f24();
%OptimizeFunctionOnNextCall(f24);
f24(C22, v23, v23);
