const v0 = /[(\1a)]/vdsy;
/S(?:foo)/vms;
/D(?: foo )/gdmsy;
/(?:ab){4,7}*/gvs;
const v4 = /ouNxyz{0,1}?/ims;
/H/gu;
function f6() {
    return v0;
}
function F10(a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v0;
    } catch(e15) {
    }
}
new F10(0.6219950577384911, 0.016624175751425052, 0.016624175751425052);
const v17 = new F10(0.6219950577384911, 154.7147519260609, 0.6219950577384911);
new F10(154.7147519260609, 154.7147519260609, 0.016624175751425052);
function F19(a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a21;
    } catch(e24) {
    }
}
const v25 = new F19(0.6219950577384911, f6, v17);
new F19(0.6219950577384911, v25, v17);
new F19(0.6219950577384911, v25, v17);
const v28 = [];
const v31 = new Array(228);
class C32 {
    [Array] = v28;
    static {
        function F34(a36, a37) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                v4.b = a37;
            } catch(e38) {
            }
        }
        new F34(v31, this);
        new F34(Array, F34);
        new F34(v17, v31);
    }
}
new C32();
const v43 = new C32();
const v44 = new C32();
let v47;
try { v47 = v43.o(C32, v44, -1n, v31); } catch (e) {}
try {
    const t52 = "7MU";
    t52.valueOf = v47;
} catch(e48) {
}
