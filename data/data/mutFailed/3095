const v1 = [true,true,true,true,true];
const v2 = [v1];
const v3 = [v2,true,v1,true,true];
const v4 = [v1];
const v5 = [v4];
const v6 = [v1,v2,v1,v5,true];
function F7(a9, a10, a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    const v13 = v3.constructor;
    try { new v13(v3, a11); } catch (e) {}
    return v1;
    new Float64Array();
    try {
        this.b = a10;
        const o17 = {
        };
        new Uint32Array(4096);
    } catch(e21) {
    }
}
new F7(v6, v1, v4, v6);
const v23 = new F7(v1, v2, v1, v4);
const v24 = new F7(v23, v2, v5, v3);
[v24,v6,F7,v4];
[v23,[v2,v4,v6],true];
class C29 {
}
new v4();
class C31 {
}
const v32 = new C31();
function f33() {
}
function F34(a36, a37, a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    try { a38.valueOf(); } catch (e) {}
    a39.e = a39;
    const v41 = this?.constructor;
    let v42;
    try { v42 = new v41(v32, a38, a36); } catch (e) {}
    a38[0];
    try { a39.toLocaleString(); } catch (e) {}
    try {
        this.d = f33;
    } catch(e45) {
        C31[[11,-268435456,-2147483648,9007199254740991,-2,536870889,-51277,-9809]] = v42;
    }
}
("1866165091").normalize();
