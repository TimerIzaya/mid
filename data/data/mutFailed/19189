const v0 = [-67.48323234097154,-196604.13196975132,-2.028498830747491,-5.0115986489764435,85.54228238391829,-3714.888226868701,264.0447093379639,1000.0];
const v1 = [1000000000000.0,3.0701838823999275];
const v2 = [0.15920682606897973,0.3290019770860727,-5.0];
function f3() {
    return v0;
}
function f5(a6, a7) {
    const o8 = {
        ...a6,
        "d": v0,
    };
    return o8;
}
const v9 = f5(v1, v0);
f5(v0, v0);
let v11 = f5(v2, v0);
const v13 = new Int32Array(18);
const v16 = new BigUint64Array(18, f3, v13);
v11 %= v9;
try { v13.map(f3, v1); } catch (e) {}
const v20 = v13.__proto__;
function f21() {
    return BigUint64Array;
}
const v22 = new Float32Array(10, v16, 10, BigUint64Array);
v2[f5] = f5;
v13[4] = Float32Array;
v22[4];
v20 ^ v13;
try { v22.some(f21, 18); } catch (e) {}
const v26 = [723200.4184824808,-1000.0,-523437.54204506474,-964793.6675249395];
for (let v27 = 0; v27 < 20; v27++) {
    let [,v28,...v29] = v26;
}
