new Uint8Array(137);
new Int32Array(256);
new Float32Array(0);
const v9 = [-1000000.0,220156.38454228942];
[-1000000.0,1000.0,-1.7976931348623157e+308,-7.592938378005587e+307,1000000.0];
[-306431.64092670183];
new WeakSet();
let v16 = new Float32Array(55);
const v19 = new Float64Array();
const v22 = new BigUint64Array(3170, 55, 0);
let v23;
try {
const t0 = 50;
v23 = t0();
} catch (e) {}
let v24 = new Float64Array(v16, v23, Int32Array, v9);
let v26 = new Int32Array(Int32Array);
const v28 = new Uint8Array(v26, v23, Int32Array);
function f29(a30, a31, a32, a33) {
    v26++;
    const o38 = {
        "b": a30,
        ...v28,
        n(a36, a37) {
            return v26;
        },
    };
    return a32;
}
for (let v39 = 0; v39 < 625; v39++) {
    v23();
}
({"buffer":v23,"byteLength":v24,"length":v16,} = v24);
[...v19,...v22];
v23.slice(3170, 256);
v16[5] &= 3170;
