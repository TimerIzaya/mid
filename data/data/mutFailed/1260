function f3() {
    return -65537;
}
const v4 = /\P{scx=Greek}(?<a>)?/umy;
const v5 = /x(?=.)*/vdsy;
const v6 = /0f[\cA]/guis;
class C7 extends f3 {
    constructor(a9, a10, a11) {
        super();
    }
    [4294967295];
    1073741823 = v6;
    4239770577 = v5;
    static 7 = f3;
}
new C7(1951189789, v6, -65537);
new C7(1951189789, v4, -65537);
new C7(4294967295, v4, 1951189789);
const v21 = Symbol.iterator;
const t19 = "string";
t19[v21] = v21;
Object.defineProperty([58584,15,9007199254740990,2146023485], 65537, { writable: true, value: [46733,-268435456] });
Promise.d = Promise;
new Float32Array(1000);
1000 instanceof WeakMap;
([1000000000000.0,6.579220753226213e+307,2.0,-2.220446049250313e-16,NaN,-1000000.0])["findIndex"](gc);
new Uint16Array(4294967295);
const v37 = [Uint32Array,Uint32Array,Uint32Array,Uint32Array];
v37.__proto__ = v37.push();
function f39(a40, a41) {
    Math.atan2(Math, f39);
    return f39;
}
this.DataView;
const v48 = new Float32Array(7);
try { v48.filter(4294967295); } catch (e) {}
try {
const t0 = 4294967295;
t0();
} catch (e) {}
new Uint8ClampedArray();
const o85 = {
    m() {
        Math.log1p(2.220446049250313e-16);
        for (let i59 = 0; i59 < 10;) {
        }
        this & Math;
        new Int8Array(135);
        new Float64Array(256);
        new Uint16Array(1);
        const v77 = new Uint8Array(Uint8Array, Uint8Array);
        v77[Math.atan2(-988.8649474800335, 10000)] = 10000;
        const o83 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o83);
    },
};
try { Int32Array(7, Float32Array, Int32Array); } catch (e) {}
const v88 = new Int32Array(256);
function F89(a91, a92, a93) {
    if (!new.target) { throw 'must be called with new'; }
    const v94 = this?.constructor;
    try { new v94(Uint16Array, a93, a93); } catch (e) {}
    a91 * a91;
    a93++;
    this.d = a91;
    try {
        this.g = Int32Array;
    } catch(e98) {
    }
}
try { new F89(F89, 256, 256); } catch (e) {}
const v100 = new F89(256, v88, 4294967295);
const v101 = v100?.g;
try { new v101(Uint16Array, v48, 7); } catch (e) {}
new F89(7, 7, 4294967295);
class C105 extends Set {
}
class C106 {
    #a;
    constructor(a108, a109, a110) {
        a109.#a;
    }
}
new F89(256, Float32Array, 256);
Math.asinh();
const v117 = new Float32Array(Float32Array, Float32Array, Float32Array);
async function f119(a120, a121, a122) {
    v117.h = v117;
    await 160;
    return f119;
}
f119(v117, v117, Float32Array);
Math.sin(3.862600614459211e+307);
