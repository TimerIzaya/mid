9223372036854775807n * 9223372036854775807n;
9223372036854775807n ^ -2.0;
28314n * 28314n;
const v9 = /R[\c!]a/ms;
v9.dotAll = v9;
/(YB6La*?)/gimy;
const t5 = /(?:a+)+/vd;
t5.e = -7.144564018549291e+307;
const v14 = new Uint8ClampedArray(129);
try { v14.toReversed(); } catch (e) {}
3646 >>> 3646;
Float64Array.e = Float64Array;
new Float64Array(3646);
Int32Array.name = Int32Array;
new Int32Array(3060);
for (let v23 = 0; v23 < 5; v23++) {
    function f24() {
        const v26 = Math.atan(Math);
        v26 - v26;
        return Math;
    }
    let v28;
    try { v28 = f24(); } catch (e) {}
    try { v28.expm1(v23); } catch (e) {}
    f24();
    %OptimizeFunctionOnNextCall(f24);
}
