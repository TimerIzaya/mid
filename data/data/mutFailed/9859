function f0() {
    const v3 = new Int8Array(9, Int8Array);
    const v4 = v3?.constructor;
    try { new v4(9, Int8Array, v3); } catch (e) {}
    9 < 9;
    const v8 = new BigUint64Array(9);
    function f9(a10, a11, a12, a13) {
        const o14 = {
            [a13]: a12,
            ...v8,
        };
        return v8;
    }
    try { f9.bind(v3); } catch (e) {}
    try { ("match").fixed(); } catch (e) {}
    const o33 = {
        "c": -256,
        [-256](a21) {
        },
        set b(a23) {
            function f24(a25) {
                return f24;
            }
            class C26 extends f24 {
            }
        },
        p(a28, a29) {
            for (let v30 = 0; v30 < 32; v30++) {
                a28["p" + v30] = v30;
            }
            return -2147483648;
        },
        "a": -2147483648,
        "h": -2147483648,
        "b": -256,
    };
    function F35(a37, a38, a39) {
        if (!new.target) { throw 'must be called with new'; }
        const v40 = this?.constructor;
        try { new v40(f0, Array, Array); } catch (e) {}
    }
    const v42 = new F35();
    v42.length = "match";
    v42.length = v42;
    for (let i = 0; i < 5; i++) {
        v42.toString = Array;
    }
    return o33;
}
f0();
const v44 = f0();
const v45 = f0();
v45.b = v45;
const o47 = {
    "h": "async",
};
const v48 = [-1.7976931348623157e+308,1000000.0,-Infinity,1000000.0,1e-15,4.0,0.05361702581874339,2.220446049250313e-16,-384803.16239734297];
Int16Array[Symbol.toPrimitive] = f0;
Int16Array.BYTES_PER_ELEMENT = Int16Array;
const v52 = new Int16Array(v48);
const v54 = [12,3971,-9007199254740992,-9007199254740990,256,-4294967297,127,1073741825,-28869];
try { v54.pop(); } catch (e) {}
const v56 = [-7505,-65537,65535];
const v57 = [-12,256,65536,-60083,46929,-807581996,-9223372036854775807,10,-12];
v57.a = v44;
v57.a = v57;
function f58() {
    return v57;
}
class C62 {
}
const v63 = new C62();
function f64() {
    function f65(a66) {
        v56 in v52;
        this.DataView;
        return v54;
    }
    return f65;
}
function f70(a71) {
    v48[103];
}
Object.defineProperty(v63, "constructor", { writable: true, get: f64, set: f70 });
const v73 = new C62();
const v74 = v73?.__defineGetter__;
try { new v74(o47, v45); } catch (e) {}
const v76 = new C62();
const v77 = v76?.__lookupGetter__;
try { new v77(v54); } catch (e) {}
function f79(a80, a81) {
    const o82 = {
        __proto__: a80,
    };
    const v84 = new WeakMap();
    function f85(a86, a87) {
        const v88 = [v84];
        v84.set(v88, v88);
    }
    return v63;
}
try { f79(true, true); } catch (e) {}
const v92 = f79(v63)?.constructor;
try { new v92(); } catch (e) {}
const v94 = f79(v73);
Object.defineProperty(v94, "n", { writable: true, value: v94 });
f79(v76);
try { ("n").constructor(Int16Array); } catch (e) {}
try { v94["n"](); } catch (e) {}
Math.expm1();
const v103 = [];
function f104() {
    const o108 = {
        toString() {
            super[this];
        },
        ...v103,
        n() {
            return this;
        },
    };
    try { o108.n(); } catch (e) {}
    return v103;
}
f104.length = f104;
const v110 = f104();
try { v110.findLast(v56); } catch (e) {}
f104();
f104();
-63523 >= 127 ? -63523 : 127;
Math.asinh(-(-63523));
Math.acosh();
