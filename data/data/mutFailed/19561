const v1 = new Set();
function f2() {
    return Set;
}
12 != 12;
const v6 = new Uint8ClampedArray(12);
let v9;
try { v9 = new Int8Array(Uint8ClampedArray, v1, f2); } catch (e) {}
new Int8Array(4);
new Uint8Array(v9);
-827.9313408818487 !== -827.9313408818487;
function F17(a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    a19.d = a19;
    const v21 = v6?.constructor;
    v21.caller;
    try { new v21(-827.9313408818487); } catch (e) {}
    let v24 = a19.length;
    v24--;
    try { this.constructor(); } catch (e) {}
}
new F17(F17);
function f28() {
    let v29 = -65535;
    v29 * v29;
    const o105 = {
        next() {
            v29--;
        },
        m(a34) {
            a34.f = a34;
            try { a34.next(f28); } catch (e) {}
            a34.c = a34;
            a34.h = a34;
            const o36 = {
            };
            o36.h = o36;
            o36.h = o36;
            function f37(a38, a39, a40) {
                return this;
            }
            f37.caller = f37;
            try {
                o36.e = v29;
            } catch(e41) {
                const v45 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v45, o36);
            }
            try {
                const o47 = {
                };
                v6.h = o47;
            } catch(e48) {
            }
            const v50 = Math?.expm1;
            try { new v50(f37); } catch (e) {}
            let v52;
            try { v52 = Math.expm1(128); } catch (e) {}
            let v53 = -9007199254740991;
            v53++;
            const v55 = v53 >> v53;
            v55 - v55;
            class C57 {
                o(a59, a60, a61, a62) {
                }
            }
            function f63(a64) {
                return f63;
            }
            const v67 = new Int32Array(127);
            function f68(a69, a70) {
                return v67.toSorted();
            }
            new Promise(f68);
            const v74 = v52.name;
            try { v74.codePointAt(Math); } catch (e) {}
            class C78 extends Array {
            }
            class C79 {
            }
            const v80 = [601759695];
            const v81 = [1073741824,1073741823,1376142744,1073741825];
            function f82(a83, a84, a85, a86) {
                a86 - f68;
                function f88() {
                    return a83;
                }
                function f89(a90, a91) {
                    return a90;
                }
                try { f89(); } catch (e) {}
                f89(v81, C79);
                try { v81["find"](..."find", a86, ...v80, ...v81); } catch (e) {}
                return C79;
            }
            const v97 = new Int8Array(3938);
            let v98 = 3;
            let v99 = 0;
            v99++;
            for (let i = 0; i < 5; i++) {
                [...v98] = v97;
                v99++;
            }
            const o102 = {
            };
            try {
                const o103 = {
                };
            } catch(e104) {
            }
        },
    };
    o105.m(o105);
    const v109 = new Float32Array();
    const t114 = "nt";
    return delete t114[v109];
}
f28();
f28();
