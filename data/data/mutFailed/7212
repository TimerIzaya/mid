let v2 = -3.0;
class C3 {
    #h = v2;
    static exp(a5) {
        for (const v6 in this) {
            a5 **= -9.74849966312429e+307;
            function f7() {
                return f7;
            }
            Math.atan(Math);
        }
        typeof -9.74849966312429e+307 === "object";
        v2 = C3;
        let v17 = Math.asinh(a5, 9007199254740992);
        Math.floor(-1e-15);
        return v17--;
    }
}
try { new C3(); } catch (e) {}
const v21 = new C3();
const v22 = v21?.constructor;
let v23;
try { v23 = new v22(); } catch (e) {}
4 >> 4;
const v27 = new Uint32Array(4);
let v28 = 2;
v28++;
function f30(a31) {
    a31 === a31;
    a31 <= a31;
    const o37 = {
        __proto__: v28,
        213: v21,
        ...f30,
        "g": v2,
        m(a35, a36) {
            return a36;
        },
    };
}
new C3();
new C3();
class C43 {
}
for (let v44 = 0; v44 < 5; v44++) {
    f30(v27, v44, v23);
}
function f46() {
    function F47(a49, a50, a51) {
        if (!new.target) { throw 'must be called with new'; }
        const v52 = this.constructor;
        let v53;
        try { v53 = new v52(); } catch (e) {}
        this.e = v53;
    }
    return -9007199254740991;
}
v22.caller;
const v55 = [1.9600488149280893e+306,468.9269702772963];
const v56 = [Infinity,-686.9856326146617,0.47369378110968274,-7.24289104755818];
try { v56.findLastIndex(C3); } catch (e) {}
!v56.includes(...v55);
