let v0 = -1073741824;
new WeakMap();
const v7 = [-13,8,-1073741824,-9007199254740990,536870889,47670,-36072,9,268435441,1];
function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = F9;
    } catch(e13) {
    }
    try {
        this.b = 1073741825n;
    } catch(e14) {
    }
}
new F9(1073741823, v0);
const v16 = new F9(9223372036854775807, 9223372036854775807);
new F9(-9223372036854775808, 9223372036854775807);
let v18;
try {
const t0 = 1073741825n;
v18 = t0(v7);
} catch (e) {}
const v20 = Array();
Array();
try {
    true.fuck(true);
} catch(e24) {
}
v20[65535];
v16[11] = v18;
try {
    this.c = this;
} catch(e28) {
}
%VerifyType(Infinity(Infinity, Infinity, Infinity, Infinity));
class C31 extends WeakMap {
    2015 = 9223372036854775807;
    static #b = 4096;
    #valueOf(a33, a34, a35) {
        this.b %= 9223372036854775807;
        v0 >>= a35;
        return 1073741823;
    }
    static g = 9223372036854775807;
    [-9223372036854775808];
    2147483647 = 1073741823;
    static h = WeakMap;
}
new C31();
function f37() {
    for (let [i48, i49] = (() => {
            switch (v0) {
            }
            for (let i40 = 0; i40 < 6; i40++) {
                function f46() {
                    return 1073741823;
                }
            }
            return [0, 10];
        })();
        i48 < i49;
        i49--) {
    }
    return f37;
}
new C31();
new C31();
class C58 {
}
for (let v59 = 0; v59 < 5; v59++) {
    function f60() {
        const v64 = Symbol.toPrimitive.description.codePointAt(C58);
        return v64 >> v64;
    }
    v0();
    %OptimizeFunctionOnNextCall(f60);
}
[2.220446049250313e-16,1000000000000.0,-8.75732599276942,2.5202116906646893e+307,-1.1625373201705693e+308,601091.6602676569,-2.2250738585072014e-308,-1000.0];
[140.11703814989755];
const v71 = [-3.0];
function f72(a73, a74) {
}
const v77 = [181.0767075529559,v71];
const o78 = {
    "arguments": v77,
    "type": "function",
};
new Worker(f72, o78);
