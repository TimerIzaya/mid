[1000000000000.0,674.6125770186857,0.6576865205274467,1.5140033021793542];
const v1 = [1000000000000.0,8.696447029433768e+307];
const v2 = [NaN,2.073769315814378e+307,5.874421680617527,1000000000000.0,7.623254775481119,-7.358586050737701,-855569.58556989,361972.28490857664];
const v4 = [[v2,v2,v1]];
[v4,v4,v4];
[-536870912,6,4294967296,0];
[-5,4294967297,5,16,268435456];
[-268435456,-9223372036854775808,8,-1037866124,1019074917,-56537];
try { new SharedArrayBuffer(-2147483647n); } catch (e) {}
null.caller;
class C18 {
    static {
        for (let i22 = 0, i23 = 10;
            i22 < i23;
            (() => {
                function f27() {
                    return f27;
                }
                const v28 = [601759695];
                const v29 = [1073741824,1073741823,1376142744,1073741825];
                function f31(a32, a33, a34, a35) {
                    function f37() {
                        return a32;
                    }
                    f27();
                    const v40 = new Int8Array();
                    function f41(a42, a43) {
                        return i23;
                    }
                    f41(f41(v29, C18));
                    v40.buffer.slice(2147483648);
                    %OptimizeFunctionOnNextCall(f37);
                    let v50;
                    try { v50 = v29["find"](..."find", a35, ...v28, ...v29, ...522675525n); } catch (e) {}
                    v50 <= a34;
                    return arguments;
                }
                for (let v52 = 0; v52 < 10; v52++) {
                    f31();
                }
                i22++;
            })()) {
        }
    }
}
new Uint16Array(257);
new Uint8ClampedArray(4096);
new Int8Array(1558);
function f68(a69) {
    const o84 = {
        valueOf(a71, a72) {
            function F73(a75, a76, a77, a78) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.f = a77;
                } catch(e79) {
                }
                try {
                    this.h = -9223372036854775807;
                } catch(e80) {
                }
            }
            const v81 = new F73(a71, a69, a69, a72);
            new F73(v81, -12, -9223372036854775807, -9223372036854775807);
            new F73(-12, -12, v81, v81);
            return -536870912;
        },
    };
    return o84;
}
f68(f68(f68(-9223372036854775807)));
/aI/udimy;
const v92 = /abc|def|ghivKg(\1a)/gimy;
/Dpa\Bb(ab|cde)\1/vdm;
v92[16] = "5";
%PrepareFunctionForOptimization(f68);
f68(v92);
f68(v92);
%OptimizeFunctionOnNextCall(f68);
f68(v92);
