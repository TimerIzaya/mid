class C3 {
    static set g(a5) {
        for (let v6 = 0; v6 < 32; v6++) {
            const t3 = "string";
            t3["p" + v6] = v6;
        }
    }
    static #d;
    [-4294967295] = -4294967295;
    static f = -5.0;
}
const v9 = new C3();
const v10 = new C3();
const v11 = new C3();
function F12(a14, a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = "string";
    try {
        this.d = C3;
    } catch(e18) {
    }
}
new F12(v10, v11, v9, v9);
const v20 = new F12(v10, v10, C3, v11);
new F12(v10, "string", v10, v20);
function F22() {
    if (!new.target) { throw 'must be called with new'; }
}
const v24 = new F22();
function F25(a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
}
const v29 = new F25();
function f30(a31, a32) {
    a32 != F12;
    return a31 ? a32 : F12;
}
v29[Symbol.toPrimitive] = f30;
const v39 = [];
function F41() {
    if (!new.target) { throw 'must be called with new'; }
    this.toString(this, F41, F41, this);
    Date.toString(F41, 9223372036854775807).replaceAll(v24, -37859n);
    Uint32Array[2] = Uint32Array;
    const v49 = new Uint32Array(Uint32Array, Uint32Array, 4);
    const v52 = new Set(v39);
    const v53 = v52.add;
    try { new v53(v49); } catch (e) {}
    const v56 = v52["delete"](839612.5677247904);
    const v57 = v56 || v56;
    v57 || v57;
    const v59 = v57 && v57;
    const o61 = {
    };
    o61.e = this;
    o61.b = o61;
    o61.e = 19793;
    try { new Array(9223372036854775807); } catch (e) {}
    let v65;
    try { v65 = ("getPrototypeOf").blink(); } catch (e) {}
    v65[28].strike();
    const v68 = v65.strike(591114.0785999324);
    let v69;
    try { v69 = v68.replace(19793, v29); } catch (e) {}
    v69[11] = v69;
    class C71 {
        ["getPrototypeOf"] = -1.7976931348623157e+308;
    }
    class C72 extends C71 {
        ["getPrototypeOf"] = C71;
    }
    try { new C72(); } catch (e) {}
    let v74;
    try { v74 = new C72(); } catch (e) {}
    v74.getPrototypeOf;
    let v76;
    try { v76 = new C72(); } catch (e) {}
    const v77 = v76?.getPrototypeOf;
    try { new v77(); } catch (e) {}
    const v79 = new C72();
    const v80 = v79.getPrototypeOf;
    try { v80(v74); } catch (e) {}
    let v82;
    try { v82 = new v80(); } catch (e) {}
    v82.constructor = Array;
    try { v82.propertyIsEnumerable(v69); } catch (e) {}
    const v84 = v82?.constructor;
    let v85;
    try { v85 = new v84(v65, this, 4); } catch (e) {}
    function f86() {
        new Uint8Array(Uint8Array, Uint8Array);
        return Uint8Array;
    }
    v85.constructor = f86;
    try { v85.constructor(); } catch (e) {}
    const v90 = v79.constructor;
    let v91;
    try { v91 = new v90(F41, v59); } catch (e) {}
    const v92 = v91?.getPrototypeOf;
    v92?.apply;
    try { new v92(); } catch (e) {}
    for (const v96 of Array(19793)) {
    }
}
new F41();
const v98 = new F41();
v98.constructor;
v98.constructor;
new v29();
