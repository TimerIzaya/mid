function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = 9007199254740990;
    } catch(e3) {
    }
    try {
        this.d = 9007199254740990;
    } catch(e4) {
    }
    try {
        this.g = 9007199254740990;
    } catch(e5) {
    }
}
const v6 = new F0();
new F0();
new F0();
const v12 = [364.32357045580466,194.6113468070912,-1.1314659736391705e+307,-1000000000000.0,1.7976931348623157e+308];
const v13 = [171.26245503673772,0.4262502255363465,0.9939929321561143,3.266992822327907,4.470351864120447,0.4405136268169203,0.0,-1000000.0,-1000000000000.0];
const v14 = [-2.0,-655315.1395584289,-312.3614529268159,1.0,-918.5433419974413,1.7976931348623157e+308,NaN];
class C15 {
    c = v12;
    set g(a17) {
        [0.6330522471692576,-4.0,-Infinity,0.7131525072352082,1.0,2.220446049250313e-16,2.220446049250313e-16,-5.0];
        [-4.0,-611539.3917613227,3.0,9.169458022766585e+307,-2.0,0.28046271108442866,0.9100203885485475,2.2250738585072014e-308,NaN,-1000000000.0];
        [-3.0,0.8114454849202395];
    }
    constructor(a22, a23, a24, a25) {
        this.__proto__;
        try { v6.setMonth(a22, a25); } catch (e) {}
        super[super[this]] = v13;
        new BigInt64Array(8);
        new BigUint64Array(512);
        new Int32Array(1000);
    }
}
new C15(v13, v13, v12, v13);
new C15(v14, 350n, v14, v14);
new C15(v14, v6, v13, v12);
const v45 = new Set();
function f46(a47) {
    const o52 = {
        o(a49, a50) {
            super[a47];
        },
    };
}
f46(v45);
const v54 = f46(f46);
f46(Set);
new Uint32Array(420);
new Int32Array(9007199254740990);
const v64 = new Int8Array(260);
const o66 = {
};
v12.h = o66;
const v68 = !o66;
const v69 = 1842642860 % v68;
v69 % v69;
const v71 = new WeakMap();
let v72;
try { v72 = v71.delete(v68); } catch (e) {}
class C75 {
    static {
        try {
        const t0 = "boolean";
        t0(this);
        } catch (e) {}
    }
}
try { C75(); } catch (e) {}
("isInteger")?.replaceAll;
[-2147483647,64098,-9383,1024,129,-5];
[1000,-16,-38597,12,-3399,32508];
const v89 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v91 = new Uint32Array();
const v93 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v100 = [601759695];
[1073741824,1073741823,1376142744,1073741825];
function f103(a104, a105, a106, a107) {
    function f108() {
        v89.length;
        try {
        } catch(e110) {
        }
        const o111 = {
        };
        const o131 = {
            valueOf(a113, a114) {
            },
            1073741824: v91,
            [257n](a116, a117, a118, a119) {
                class C121 extends Date {
                    static get c() {
                    }
                }
                eval();
                class C125 {
                    constructor(a127, a128, a129, a130) {
                    }
                }
            },
            "arguments": v93,
        };
    }
    new Int8Array();
    a107.buffer;
    const v137 = new Int32Array();
    v137[3];
    for (let v139 = 0; v139 < 10; v139++) {
    }
    let v141;
    try { v141 = v13["find"]("find", a107, v100); } catch (e) {}
    v141 <= a106;
}
for (let v143 = 0; v143 < 10; v143++) {
    f103();
}
%OptimizeFunctionOnNextCall(f103);
f103();
[-50328,-14,3,128,-11,64,-65535];
class C147 {
    [v93] = -1000000.0;
    constructor(a149, a150, a151, a152) {
        super[this];
    }
    g;
    c;
    #toString(a155, a156, a157) {
    }
    1 = 257n;
}
new C147(1073741825n, 1.0, 7.589647165982214);
const v159 = new C147(411585671n, -1000000.0, -1000000.0, 1.0);
new C147(v159, -1000000.0, 1.0);
for (let v161 = 0; v161 < 14; v161++) {
    C75[6] = v161;
}
try { v72.n(C75); } catch (e) {}
~v64;
/(?:a*)+bU\u0034xyz{1,32}/udi;
/vfoo|(bar|baz)|quux/gvds;
try { v14(); } catch (e) {}
const o173 = {
    toString(a168, a169, a170, a171) {
        v54 * a171;
    },
};
