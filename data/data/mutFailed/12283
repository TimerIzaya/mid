const v0 = [14,1059049426,9223372036854775807,2147483649,9];
const v1 = [18123,10,-1248048968,65537,2147483648,-58863,-2,12,-57937];
const v2 = [1591675279,9223372036854775807,29085,0,-4739];
class C3 {
}
Object.defineProperty("-884841883", v2, { configurable: true, value: v2 });
const v8 = new Int8Array(242);
try { Int16Array.apply(128, v8); } catch (e) {}
class C15 {
    static #g = -536870912;
    valueOf(a17, a18, a19) {
        try {
            try { this.values(a17); } catch (e) {}
        } catch(e21) {
            function F22(a24, a25) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.d = a24;
                } catch(e26) {
                }
                try {
                    this.f = a19;
                } catch(e27) {
                }
                try {
                    this.c = a25;
                } catch(e28) {
                }
            }
            new F22(v0, this);
            new F22(v2, e21);
            new F22(v1, v2);
        } finally {
            try {
                this.fuck(v0, a18, v0);
            } catch(e33) {
            }
        }
        return v2;
    }
}
new C15();
new C15();
new C15();
class C44 {
}
function f46() {
    return f46;
}
class C47 extends f46 {
}
class C48 extends C47 {
}
function f51(a52, a53, a54, a55) {
    try { a52(); } catch (e) {}
    a53 & a53;
    const v58 = 3 | C48;
    v58 * v58;
    const v60 = a52 / a52;
    const v61 = a53 < a53;
    const o94 = {
        m(a63) {
            a63.f = a63;
            try { a63.next(); } catch (e) {}
            a63.c = a63;
            a63.h = a63;
            const o65 = {
            };
            o65.h = o65;
            o65.h = o65;
            function f66(a67, a68, a69) {
            }
            f66.caller = f66;
            try {
            } catch(e71) {
            }
            try {
                const o73 = {
                };
                o73.h = o73;
            } catch(e74) {
            }
            Math?.expm1;
            const v78 = -9007199254740991 >> -9007199254740991;
            v78 - v78;
            class C80 {
                o(a82, a83, a84, a85) {
                }
            }
            C80.name;
            const v89 = new Int8Array(3938);
            let v90 = 3;
            [...v90] = v89;
        },
        n(a92, a93) {
            return v61;
        },
    };
    return v60;
}
for (let v95 = 0; v95 < 500; v95++) {
    f51(Uint8Array);
}
let v99 = undefined;
const o100 = {
};
v99 = o100;
