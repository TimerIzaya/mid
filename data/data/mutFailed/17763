class C3 {
    constructor(a5, a6) {
        function f7() {
            this.f;
            return +("Vre").constructor;
        }
        a5[Symbol.toPrimitive] = f7;
        let v14 = 0;
        while (v14 < 8) {
            super[a5] = -1n;
            v14++;
        }
    }
}
const v18 = new C3(C3, -1n);
function f19(a20, a21) {
    let v22 = 1073741824;
    class C24 {
        constructor(a26) {
            [a26,v22] = "boolean";
        }
    }
    return -1n;
}
Object.defineProperty(v18, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f19 });
const v29 = new C3(v18, -4294967296n);
Object.defineProperty(v29, "toString", { enumerable: true, value: f19 });
new C3(v29, -1n);
new Array(1);
const v35 = [155533.8602852358,2.0];
function F37() {
    if (!new.target) { throw 'must be called with new'; }
    for (const v42 of Array()) {
        v35[658291203] = null;
    }
    const v43 = [];
    v43.g = -1252925017;
    v43.g = v43;
}
new F37();
new F37();
