class C3 {
    f;
    constructor(a5, a6) {
        a5 - a5;
        a6 >>> a6;
        try {
            this.f = -548.6378954642796;
        } catch(e9) {
        }
    }
    static 1 = NaN;
    static #a = -548.6378954642796;
    static #d = 9.188872866499242;
    static b = NaN;
}
const v10 = new C3(9.188872866499242, 9.188872866499242);
v10.f = v10;
const v11 = new C3(-548.6378954642796, NaN);
const v12 = new C3(9.188872866499242, -548.6378954642796);
1.6124875380465902 == 1.6124875380465902;
class C17 extends C3 {
    get a() {
        const v19 = C3[this];
        try { C3.freeze(-80.93696786707324, v19, v11); } catch (e) {}
        return this;
    }
    #p(a22, a23) {
        try { v12.n(); } catch (e) {}
        new BigUint64Array(5);
        new Uint8Array(1488);
        new Float64Array(-80.93696786707324);
        return BigUint64Array;
    }
}
const v34 = new v10();
v34.f;
const t35 = -548.6378954642796;
new t35();
new v12();
const v40 = new Int16Array(12);
v40.fill()[5];
