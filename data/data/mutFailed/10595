function f0() {
    let v1 = 1;
    1024 + 1024;
    const o17 = {
        [12]: 12,
        "f": 12,
        [12](a6, a7) {
            try { a6(a7, a7, v1, a6, a7); } catch (e) {}
            for (const v9 of a6) {
                v1 = a6;
                super[a7];
                try {
                const t0 = 1073741825n;
                t0();
                } catch (e) {}
                [2.0,-2.2250738585072014e-308,2.4617128810201834,0.8777478192033997,4.0,5.13369912480738,-0.6793749535317453];
            }
            return this;
        },
        "c": v1,
        "a": v1,
    };
    return o17;
}
const v18 = f0();
const v19 = f0();
const v20 = f0();
f0[12];
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    a24.a;
    try {
        this.a = a24;
    } catch(e27) {
    }
    try {
        this.g = v20;
    } catch(e28) {
    }
    try {
        this.d = a25;
    } catch(e29) {
    }
}
const v30 = new F22(v19, v19);
new F22(v20, v19);
new v18(v30, v19);
new Int8Array(1000);
let v36 = 3846;
v36--;
new BigUint64Array(v36);
new BigInt64Array(9);
class C44 {
    static {
        try { new this(); } catch (e) {}
        try {
            const t56 = null;
            t56.valueOf = v18;
        } catch(e47) {
        }
    }
}
C44.e = C44;
