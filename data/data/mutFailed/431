function f0() {
    0 < 9;
    const v9 = new Int16Array(16);
    v9[10] = -9007199254740992;
    const o42 = {
        ["constructor"]: "constructor",
        2: 4.0,
        ..."rN",
        "f": "rN",
        __proto__: "rN",
        "g": 4.0,
        "h": "rN",
        m(a12, a13) {
            a12[this] = "constructor";
            Array();
            class C19 {
                static #a;
                static n(a21, a22) {
                    const v23 = super.d;
                    try { v23(); } catch (e) {}
                    return a21;
                }
                [1];
                static [1] = 255;
                [255];
                f = -65536;
            }
            const v25 = new C19();
            const v26 = new v25();
            let v28 = -65536n;
            let v30;
            try { v30 = v25.m(1n, 10000n, 10000n, 1); } catch (e) {}
            function f31(a32, a33, a34) {
                let v35;
                try { v35 = v30(a33); } catch (e) {}
                v35 = a34;
                v28 >>= a34;
                v25[10] = 1n;
                v26.f;
                return v28;
            }
            const v39 = ("gYPHN").normalize("NFKD");
            try {
                ("constructor").localeCompare(v39);
            } catch(e41) {
            }
            return v39;
        },
    };
    return o42;
}
const v43 = f0();
const v44 = f0();
const v45 = f0();
class C46 {
    #h = v43;
    static #e;
    constructor(a48, a49) {
        for (let i51 = 0; i51 < 9; i51++) {
            Object.defineProperty(v45, f0, { set: f0 });
            v44[i51] **= a48;
        }
    }
}
new C46(v44, v43);
new C46(v45, v43);
new C46(C46, v45);
let v65;
try {
const t0 = 0.44967380041772886;
v65 = t0();
} catch (e) {}
const v68 = /((?<=a))/gudm;
const v69 = /gk4b*/vmsy;
let v71;
try {
const t0 = -1.3832922122240728e+307;
v71 = t0(2);
} catch (e) {}
for (let v72 = 0; v72 < 5; v72++) {
    v72 < 1;
    try { v71(v68, v72, v69, v72, -4); } catch (e) {}
    const v77 = Symbol.iterator;
    const o81 = {
        [v77]() {
            const o80 = {
                next() {
                    return v69;
                },
            };
        },
    };
}
class C87 {
    static #n(a89) {
    }
}
const v90 = new C87();
const v91 = new C87();
const v92 = new C87();
let v93 = Int16Array;
const v94 = new v65();
new Uint8Array(2265);
const v99 = new v93(2872);
try {
    v99.length = 4;
} catch(e101) {
}
v91[3109] = v90;
class C103 {
    static #b = 1175953465;
}
const t112 = "byteOffset";
t112[4] = Float64Array;
try { v90(v92, v94, 2265, 2265); } catch (e) {}
v93 = v93;
