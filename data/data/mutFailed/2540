function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -7;
    } catch(e6) {
    }
}
const v7 = new F3(9223372036854775807);
(-1423692323)?.[v7];
const v11 = new Int32Array(Symbol);
v11[3];
new Set(Set, -1423692323);
const v16 = new Map();
function f17() {
    return Int32Array;
}
v16.constructor = f17;
const t17 = v16.constructor;
const v20 = t17();
function f21() {
    return ("D")[0];
}
const o24 = {
    __proto__: v20,
};
const v25 = new F3(v7);
new F3(F3);
class C30 extends F3 {
    static #e = v7;
    n(a32, a33, a34, a35) {
        Uint16Array();
        %OptimizeFunctionOnNextCall(f17);
        const v38 = [-13063,230037640,0,-1717935321,257,0,1073741825];
        const v39 = [-2051630605,509562611];
        class C40 {
            0 = v39;
        }
        const v41 = new C40();
        Object.defineProperty(v41, 7, { configurable: true, value: v38 });
        this % super.f;
        const v48 = [Reflect];
        return v11;
        function F50(a52, a53, a54, a55) {
            if (!new.target) { throw 'must be called with new'; }
            try { a53.call(); } catch (e) {}
            for (let v57 = 0; v57 < 50; v57++) {
            }
        }
        const v58 = new F50(1.7976931348623157e+308, 1.7976931348623157e+308, F50, 1.7976931348623157e+308);
        v58.constructor;
        Reflect.construct(F3, v48, a34);
        return a32;
    }
    set e(a62) {
        try {
            v16.size = a62;
        } catch(e63) {
        }
    }
    static #p(a65, a66) {
    }
    #b;
    static #valueOf(a68, a69, a70) {
        this.f;
        try {
            f21();
            try {
                a70.#e = -7;
            } catch(e77) {
            }
        } catch(e78) {
        }
        return a70;
    }
    static #f = v25;
    12;
}
new Uint8Array();
for (let v81 = 0; v81 < 50; v81++) {
    Array(36862);
}
new C30();
new C30();
new C30();
const v89 = [1000.0,-1000000000000.0,-7.943810730626244,-1.7976931348623157e+308,1.0,4.0];
try {
    v89.length = -9223372036854775808;
} catch(e90) {
}
