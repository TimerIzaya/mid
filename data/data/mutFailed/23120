function f1() {
    const o38 = {
        valueOf(a3, a4) {
        },
        toString() {
            super[this];
        },
        __proto__: true,
        [true]: true,
        "f": true,
        "g": true,
        "a": true,
        n(a8, a9) {
            return true;
        },
        valueOf(a11, a12) {
            return f1;
        },
        set d(a14) {
            let v15;
            try { v15 = this.p(this, a14); } catch (e) {}
            try {
                try {
                    function f16(a17, a18, a19) {
                        for (let i = 0; i < 5; i++) {
                            /k/gdsy;
                        }
                        f16();
                        return f16;
                    }
                    f16();
                } catch(e23) {
                }
                super.o(v15, v15, a14);
            } catch(e25) {
            }
            function f26(a27, a28) {
            }
            const v29 = [-882453.1668433619,-2.0];
            const v32 = new BigInt64Array(9);
            try { v29.toLocaleString(v32); } catch (e) {}
        },
        get h() {
            return f1;
        },
        p(a36, a37) {
            return true;
        },
    };
    return o38;
}
/Aabc|defmxyz{1,}?qMa{0,1}?/gvdis.exec();
const t51 = [-2.220446049250313e-16,0.4010936999061169];
t51.length = -2;
const v43 = f1();
const v44 = f1();
const v45 = f1();
function F46(a48, a49) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a49;
    } catch(e50) {
    }
    function f51(a52, a53, a54, a55) {
        let v56;
        try { v56 = a53(this, v44, a53); } catch (e) {}
        try { v56(g, a53, g); } catch (e) {}
        return this;
    }
    f51(v44, f51, v45, v44);
    try {
        this.f = f1;
    } catch(e60) {
    }
}
const v61 = new F46(v43, v43);
new F46(v45, v45);
new F46(v45, v44);
function F64(a66, a67) {
    if (!new.target) { throw 'must be called with new'; }
    v45.d;
    new WeakSet();
    try {
        this.c = a67;
    } catch(e74) {
    }
}
const v75 = new F64(v44, v43);
const v76 = new F64(v75, v43);
new F64(v76, v44);
const v78 = [14,9223372036854775807,-947341810,257,65536,2031413919,-5,127,-20830,4096];
function f79() {
    return v78;
}
const v80 = [v61,f79];
v80.includes(v80, v78);
