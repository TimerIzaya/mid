class C3 {
    m(a5, a6) {
        const v7 = a5?.[8];
        let v8;
        try { v8 = v7(this, v7, v7, 346643220, -6318); } catch (e) {}
        return v8;
    }
    a;
    static {
        let v10;
        try { v10 = this.apply(this, "boolean"); } catch (e) {}
        const v11 = this >> this;
        v11 >>> v11;
        v10.e = Uint32Array;
    }
}
try { new C3(); } catch (e) {}
const v18 = new C3();
const v19 = new C3();
v19.a = v19;
const v20 = new C3();
function F21(a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    a23.a = a23;
    a24.a;
    a25.e = a25;
    try {
        this.h = a23;
    } catch(e27) {
    }
    try {
        this.c = a24;
    } catch(e28) {
    }
    try {
        this.b = a24;
    } catch(e29) {
    }
}
new F21(v18, v20, v19);
new F21(v19, C3, v20);
const v32 = new F21(v18, v20, v18);
v32.h;
[43503,-1024,-8895,-1,5,-12630053,268435440,-9007199254740991];
[-1311230373,1088762261];
[-650846795,-3,9007199254740992];
class C39 {
    constructor(a41, a42) {
        const v43 = this.constructor;
        try { new v43(-15n); } catch (e) {}
        a41 & a41;
        const o46 = {
        };
        o46.e = a41;
    }
}
new C39(-9007199254740992n);
new C39();
