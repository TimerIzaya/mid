const v0 = [];
const v1 = /a2a\W/udm;
/J/v;
const v3 = /(ab)?/gvmy;
v3.sticky = v3;
const v4 = [v1];
const v5 = v4?.groupToMap;
try { new v5(v1); } catch (e) {}
const v7 = [v0,v4];
const v8 = [v1,v7];
try { v8.pop(); } catch (e) {}
v8[1];
new Float64Array(2080, v0, v7);
class C16 {
}
try { C16.p(-4096); } catch (e) {}
const v18 = new C16();
const v19 = v18?.constructor;
try { new v19(); } catch (e) {}
const v21 = [1000000.0,0.218433446981681,-5.0,-919787.2036172998,872389.6270716691];
const v22 = v21[4];
v22 / v22;
const v25 = [v18,v18,v18,v18,v18];
const v26 = v21.pop;
try { v26(v25, v7, v26); } catch (e) {}
Reflect.apply(v26, v18, v25);
new Int32Array(-4096);
let v32 = Uint32Array.BYTES_PER_ELEMENT;
v32--;
const v34 = new Uint32Array(512);
v34[282] = v34;
let v37 = Math.cos(-7);
v37 >> v37;
-(v37++);
