class C3 {
    #d;
    valueOf(a5, a6) {
        try { a5(C3, a5); } catch (e) {}
        return 1000000.0;
    }
    10;
    g = Infinity;
    16;
    static 65536;
}
new C3();
const v12 = new C3();
new v12();
[21872,-1024,-1493366550,-1940667365,10,-128,536870912,867245199,5467];
[65536,268435456,2147483647];
[4294967296,4294967296,-2016269770,3,257,1073741825,-683584850,-1625839876,3,-8];
let v21 = 4.0;
new Date();
v21 **= v21;
const o30 = {
    set d(a27) {
        this["cos"]();
    },
};
class C31 {
    constructor(a33) {
        o30.d = a33;
    }
}
const v35 = new WeakSet();
const v37 = new Map();
class C41 {
    e;
    a;
    static {
        for (let v47 = 0; v47 < 50; v47++) {
            v47 < v47;
            class C49 extends Date {
            }
            [601759695];
            [1073741824,1073741823,1376142744,1073741825];
            function F53(a55, a56) {
                if (!new.target) { throw 'must be called with new'; }
                this.a = a56;
            }
            new F53(522675525n);
            new F53(522675525n);
            for (let v59 = 0; v59 < 10; v59++) {
            }
            v47++;
        }
    }
}
const v61 = new C41(v35, -8.576381465737261e+307);
new C41(v61, -818878.473853753, v61, -11n);
new C41(-8n, v21, v37, -11n);
function f64() {
    return f64;
}
class C71 {
    static #valueOf(a73, a74, a75) {
    }
    set e(a77) {
    }
}
const v78 = new C71();
const t67 = [];
t67.valueOf = f64;
%PrepareFunctionForOptimization(f64);
new Uint32Array(9);
v35[4] = 5;
try {
} catch(e87) {
}
try { v78.o(v78, 5); } catch (e) {}
