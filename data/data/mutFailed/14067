const v0 = [536870912,536870887,1];
const v1 = [-4294967297,0,1073741825];
const v2 = `
`;
class C5 {
}
class C6 extends C5 {
    static valueOf(a8, a9) {
        super[268435441] = 1479696428;
    }
}
const v10 = [-1326472496,-65535,-2117795905,-16];
[v10,v1,v10];
const v12 = [v0,v1,v0];
[v10];
new Date();
const v16 = /60MGa\n(ab|cde)/gvmsy;
const v17 = /[^a]/imsy;
const v18 = /1(?:ab)+((?:a+){0,0})/gvim;
function F19(a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a21;
    } catch(e23) {
    }
    try {
        this.f = a21;
    } catch(e24) {
    }
}
const v25 = /(?:a*)+q(?<a>.)/guds;
function f26(a27) {
    a27.dotAll = a27;
    ([-3,47741,-16128,9007199254740992,-1024,-58567,268435439,-4294967296,1807295090,-9223372036854775808]).flat(a27);
    const v31 = new Uint8ClampedArray(v25, a27);
    -53409 % v31;
    const o35 = {
        get d() {
            return a27;
        },
    };
    return v25;
}
for (let v36 = 0; v36 < 50; v36++) {
    f26(v25);
}
new F19(v16, v10);
new F19(v18, v10);
new F19(v17, v12);
class C42 extends Uint16Array {
}
class C43 extends C42 {
    constructor(a45, a46, a47, a48) {
        super();
        function f49(a50, a51, a52) {
        }
        const o55 = {
            "type": "function",
        };
        new Worker(f49, o55);
        function f57(a58, a59, a60, a61) {
            with (v17) {
                a61 %= a58;
            }
            return a58;
        }
    }
}
new C43();
class C63 {
}
new C43();
