class C3 {
    static [1000000000.0] = 1e-15;
    static #n(a5, a6) {
        try {
            this.#n(a6, a5, this, -4.0, a6);
        } catch(e8) {
        }
        let v10;
        try { v10 = this["toString"](1000000000.0, "toString", 1e-15, "toString", a5); } catch (e) {}
        try {
            super.trunc(-4.0, 1000000000.0, -4.0, v10);
        } catch(e12) {
        }
        a5.c;
        super[1000000000.0];
        function F15(a17, a18) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.h = a17;
            } catch(e19) {
            }
        }
        new a5(a6, 1e-15);
        new F15(this, 1000000000.0);
        new F15(F15, a5);
        return F15;
    }
}
const v23 = new C3();
const v24 = new C3();
const v25 = new v24();
let v28 = "g";
function f32(a33, a34, a35) {
    const o61 = {
        get e() {
            return 16n;
        },
        valueOf(a41, a42, a43) {
            return 1000000000.0 >> "clear";
        },
        "d": -1.7050891631470335e+308,
        "d": a35,
        "c": "clear",
        o(a46, a47, a48) {
            v28 |= a35;
            const v49 = this || v23;
            function F50(a52, a53, a54) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.a = "9007199254740992";
                } catch(e55) {
                }
                try {
                    this.e = 1e-15;
                } catch(e56) {
                }
                try {
                    this.c = v49;
                } catch(e57) {
                }
            }
            new F50(-1.7050891631470335e+308, 1e-15, "clear");
            new F50("clear", -4.0, a35);
            new F50("clear", a46, "9007199254740992");
            return v23;
        },
    };
    return o61;
}
f32("clear", 1e-15, v28);
const v64 = [-1000000.0,1.2447871437442695e+308,2.0,-1.7099107331057683e+308,0.0];
for (let i66 = 0;
    i66 < 1;
    (() => {
        i66++;
        class C71 {
            static ["9007199254740992"] = i66;
            d;
        }
        const v72 = new C71();
        new C71();
        new v72();
    })()) {
}
function F76() {
    if (!new.target) { throw 'must be called with new'; }
    const v78 = this.constructor;
    try { new v78("constructor", "constructor", v78, v78); } catch (e) {}
    const v80 = this.valueOf(F76);
    switch (v64) {
        case "constructor":
            v80 < this;
            break;
    }
}
new F76();
new F76();
f32(v25, f32("9007199254740992", "9007199254740992", "clear"), "clear");
const v88 = new v28();
v88.getUTCFullYear();
