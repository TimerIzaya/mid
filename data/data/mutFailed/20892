const v1 = new Date();
a = v1;
v1.a;
const v10 = new Date();
class C11 extends Date {
    e = v10;
    #toString(a13, a14, a15) {
    }
    a = v10;
    static #a;
    get b() {
        function f17() {
            const v19 = new Date(-1);
            v19.getFullYear();
            return Date;
        }
        f17();
        %OptimizeFunctionOnNextCall(f17);
        super.d;
        function f26() {
            return -1;
        }
        Object.defineProperty(Date, "h", { configurable: true, enumerable: true, get: Date });
        const v30 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
        for (let v32 = 0; v32 < 5; v32++) {
            function f33() {
                const v35 = -4294967295 != -4294967295;
                v35 && v35;
                const v37 = v30.length;
                const v39 = !(v37 < v37);
                v39 && v39;
                const o48 = {
                    [-4294967297n](a42, a43, a44, a45) {
                        eval();
                    },
                };
                return v32;
            }
            f33();
            %OptimizeFunctionOnNextCall(f33);
        }
        return v1;
    }
}
const v52 = new C11();
new C11();
new C11();
class C56 {
    f = "1073741824";
}
const v57 = new C56();
new v52();
function f59() {
    new Uint16Array(209);
}
for (let v64 = 0; v64 < 10; v64++) {
    const v67 = Float64Array.of();
    v67.toString = f59;
    const v69 = new Date();
    v69.setFullYear(v67);
    Array(36862);
}
class C75 {
    [C56];
    static 1073741825;
    static ["YZmA"] = v57;
}
new C75();
("YZmA")["indexOf"]("g");
("YZmA")[Symbol.toStringTag];
const o85 = {
    "execution": "sync",
    "type": "minor",
};
gc(o85);
