function f3(a4, a5) {
    return arguments[1073741823];
}
f3(undefined);
const v9 = new Int8Array(256);
let v10 = 1061;
const v12 = new Int8Array(v10);
16 + 16;
Uint8ClampedArray.f = Uint8ClampedArray;
const v16 = new Uint8ClampedArray(16);
let v17;
try { v17 = v16.slice(v10, Uint8ClampedArray); } catch (e) {}
const v18 = [v9];
const v20 = [v12,[Int8Array,v10,v18,Int8Array,v18],v16];
const v21 = v16.__proto__;
Object.defineProperty(v16, Uint8ClampedArray, { writable: true, configurable: true, set: f3 });
try {
    v17.toString = v21;
} catch(e22) {
}
v20[2] = v20;
function f23() {
    return f23;
}
try { ("undefined").strike(); } catch (e) {}
const v26 = ("undefined").localeCompare("undefined");
v26 >>> v26;
const v28 = /(?:a*)+q(?<a>.)/guds;
function f29(a30) {
    a30.dotAll = a30;
    const o45 = {
        set b(a32) {
            for (let i35 = 0, i36 = 10; i35 < i36; i35++, i36--) {
                v10 >>= i35;
            }
        },
        get d() {
            return a30;
        },
        __proto__: v28,
    };
    return o45;
}
for (let i48 = 0, i49 = 10; i48 < i49; i48 !== i48, i49--) {
    i48 >>> i48;
    for (let v58 = 0; v58 < 50; v58++) {
        f29(v28);
    }
}
const v60 = [1.4598948242971485e+307,5.0,202.50817195072136];
Object.defineProperty(v60, v60, { enumerable: true, set: f23 });
-1.5876750346470025e+308 >> -1.5876750346470025e+308;
2.4055206643129257 ** -1.5876750346470025e+308;
const v67 = new Uint32Array(4);
v67.fill();
