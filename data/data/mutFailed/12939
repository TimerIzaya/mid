const v0 = [];
new Int32Array(127);
const v6 = new Float64Array(1024);
new Uint16Array(11);
const v10 = [Float64Array];
[[v0,v6,v10,Uint16Array],v10,v10,Uint16Array];
/(?!\1(a\1)\1)\1/vimy;
/[xyz{1,32}[^123]]/vi;
/a+b|ca(?=bbb|bb)c/vis;
function F16() {
    if (!new.target) { throw 'must be called with new'; }
    const v19 = -(-7);
    v19 ** v19;
}
function F21(a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    const v25 = this.constructor;
    try { new v25(F16, a23, F16, v25); } catch (e) {}
    function f28() {
        const o31 = {
            501: null,
            "a": null,
            "h": null,
            [null]() {
                super.b;
            },
            "f": null,
            9: null,
            "e": null,
            ...null,
        };
        return o31;
    }
    f28();
    new F16();
}
new F21();
const o56 = {
    "e": 127,
    m() {
        Math.log1p(2.220446049250313e-16);
        for (let i40 = 0; i40 < 10;) {
        }
        const v48 = new Uint8Array(Uint8Array, Uint8Array);
        v48[Math.atan2(-988.8649474800335, 10000)] = 10000;
        const o54 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o54);
    },
};
