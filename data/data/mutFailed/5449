const v2 = new Int32Array(3362);
const v5 = new Uint32Array(1000);
const v8 = new Int8Array(1);
class C9 extends Int32Array {
    o(a11, a12, a13, a14) {
        super[Uint32Array];
        return 3362;
    }
    constructor(a20, a21) {
        super(1);
    }
}
const v25 = new C9(Uint32Array, 1);
try {
    v5.d = v2;
} catch(e26) {
    for (let [v27,v28] of v2) {
    }
}
new C9(C9, C9);
new v25(v8, 1);
class C31 {
    constructor(a33, a34, a35, a36) {
        const v37 = this.constructor;
        try { new v37(); } catch (e) {}
        (1).from([-3.942521664036782e+307,-3.942521664036782e+307,[a35,a35]]);
    }
}
const t28 = 1000;
new t28();
