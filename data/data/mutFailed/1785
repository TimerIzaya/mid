function F0() {
    if (!new.target) { throw 'must be called with new'; }
    F0.c = F0;
    new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
    function f4(a5, a6, a7, a8) {
        return f4;
    }
    try {
        this.g = -5;
    } catch(e10) {
    }
    try {
        this.c = F0;
    } catch(e11) {
    }
    try {
        this.d = -5;
    } catch(e12) {
    }
}
const v13 = new F0();
new F0();
new F0();
new Float32Array(3803);
new BigInt64Array(6);
const v24 = new Uint32Array(3);
function f26() {
}
class C27 {
    constructor(a29, a30) {
        this.p0 = v13;
        function f31(a32) {
            function f33() {
                return a32;
            }
        }
        for (let v34 = 0; v34 < 5; v34++) {
            class C35 {
                static #p(a37) {
                    return a37;
                }
            }
            new C35();
            this["p" + v34] = v34;
        }
    }
}
new v24();
new C27();
new Uint16Array(Uint16Array);
function f46() {
    const o52 = {
        "e": Uint16Array,
        __proto__: 3.4890473589784586e+307,
        "g": 12,
        o(a51) {
            return Uint32Array;
        },
        ...1000000000000.0,
    };
    return Int32Array;
}
f46();
class C54 extends f26 {
    constructor(a56, a57, a58) {
        Math.asin(2.220446049250313e-16);
        function f62() {
        }
        return f62;
        super();
        const o66 = {
            ..."44184",
            [-15]: -15,
            2480: C54,
            ..."44184",
        };
        super.f = a56;
    }
}
new Uint32Array();
for (let v69 = 0; v69 < 10; v69++) {
    v69 < v69;
}
