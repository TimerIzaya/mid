function f3(a4, a5) {
    const o21 = {
        3: 3941,
        "h": 3941,
        1073741824: 3941,
        get g() {
            return -4294967297;
            function f10() {
                class C11 {
                    constructor(a13) {
                        const v14 = this.constructor;
                        try { new v14(a13, f10); } catch (e) {}
                        new Uint16Array();
                    }
                }
                new C11();
                class C18 extends C11 {
                }
                new C18();
            }
            return 162685236;
        },
        [162685236]: a4,
        __proto__: -4294967297,
        ...-4294967297,
    };
    -1304034723 && 2.220446049250313e-16;
    ("D")[0];
    return o21;
}
const v27 = f3(162685236, 162685236);
const v28 = f3(3941, -4294967297);
const v29 = f3(-4294967297, 3941);
function F30(a32, a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a34;
    } catch(e35) {
    }
}
new F30(3941, v29, -4294967297);
const v37 = new F30(3941, v27, -4294967297);
function f38(a39) {
    Object.defineProperty(v28, "e", { configurable: true, enumerable: true, get: f3, set: f3 });
}
Object.defineProperty(v37, "p7", { writable: true, enumerable: true, set: f38 });
new F30(3941, v29, -4294967297);
function F41(a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    function f45() {
        return 162685236;
    }
    function f46(a47) {
        f45();
    }
    Object.defineProperty(this, "b", { enumerable: true, get: f45, set: f46 });
    const v49 = this?.constructor;
    try { new v49(this); } catch (e) {}
}
const v51 = new F41();
v51.b = v51;
v51.b = v51;
[1e-15,1000000000.0,2.570670927053147,3.0,-2.2250738585072014e-308,1e-15,1e-15,-1000000.0];
const v53 = [-Infinity,-1.237530633194271e+307,2.220446049250313e-16,-2.220446049250313e-16,-782606.793361587];
Symbol.toPrimitive;
new BigUint64Array();
new Float32Array(5);
[654843.4581038952];
for (let v62 = 0; v62 < 32; v62++) {
    v37["p" + v62] = v62;
}
const o84 = {
    valueOf(a70, a71) {
        class C75 {
            static {
                do {
                } while (0 < 0)
            }
        }
        return a71;
    },
    m(a83) {
        return this;
    },
    "b": v53,
    "h": v51,
};
function F92(a94, a95, a96, a97) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = -9;
    } catch(e98) {
    }
    try {
        this.b = 5;
    } catch(e99) {
    }
}
const v100 = new F92(-9, 1073741824, 1073741824, "setUint32");
function f101(a102, a103) {
    const o109 = {
        "f": -9,
        set e(a105) {
            Reflect.construct(a105, [a102,v100,Reflect,a103], a105);
        },
        ["getOwnPropertySymbols"]: v100,
        "e": "toString",
        9: "toString",
    };
    return o109;
}
