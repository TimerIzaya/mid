[6,-24606946,16,256,-10,4,-41374];
let v1 = [2147483647,4294967297,9,1073741824,268435441,-1021954379,-54198,5,26313,129];
const v2 = [9,-268435456,1275711400];
[-1000000000000.0,1.857736026952514,-786319.3061126897,0.21026094846991272,-1.5505403100599088e+308,-1.2825414362874181e+308,-0.0];
[-2.0];
const v5 = [-4.0,-Infinity,1000000.0,-743.943458171161,3.0,0.8510393459492269,2.220446049250313e-16,Infinity,1000.0,0.10647093010008168];
function f7() {
    return v2;
}
let v8 = -1.0;
for (const v11 of v5) {
}
-5;
function F22(a24) {
    if (!new.target) { throw 'must be called with new'; }
    function f25(a26, a27) {
        let v28 = a26?.[4294967295];
        v28 &= v28;
        a27 = v28;
        Math.sin(-9007199254740990);
        -9007199254740990 ^ 2.1851582221169146;
        v1 + -9007199254740990;
        ++v1;
        class C36 {
            constructor(a38, a39, a40) {
                class C42 extends a39.constructor {
                }
                new C42();
            }
        }
        return 3;
    }
    Object.defineProperty(this, "constructor", { writable: true, configurable: true, value: f25 });
    const v44 = this?.constructor;
    try { new v44("toString"); } catch (e) {}
    a24[5];
    let v48 = v8++;
    new F22(v48);
    undefined != 2.1851582221169146;
    v48 *= "toString";
}
new F22("toString");
new Uint16Array(5);
new F22("toString");
const o55 = {
};
