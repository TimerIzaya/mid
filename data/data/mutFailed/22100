const v0 = [-1.0,-9.883010671316772e+307,543885.7089371986,-Infinity,-192217.24155293417];
const v1 = [960628.7798345995,348.4980768455564,NaN,3.3036611901105175];
[0.6935680501295098,-233.42732192662788,-661376.6078835126,2.0,1.0];
new WeakSet();
class C8 {
    #m(a10, a11, a12, a13) {
        super.h = a10;
        let v14;
        try { v14 = new a13(16, a10, 1, WeakSet, a13); } catch (e) {}
        function f15() {
            new Int8Array(1073741823);
        }
        f15();
        try { v14(a12, 16, v14, WeakSet, a12); } catch (e) {}
        const o21 = {
        };
        new Date(-9223372036854775807, -9223372036854775807, Date, -9223372036854775807);
        return v1;
    }
    constructor(a26, a27) {
        function f29(a30, a31) {
            const o32 = {
                [10000n]: f29,
            };
            return o32;
        }
        f29(10000n, f29);
        new Int8Array(3);
        new Uint8ClampedArray(16);
        new Uint8Array(255);
    }
}
new C8(v0, v0);
new C8(v0, -15);
Math.cos(-1073741824);
try {
} catch(e48) {
}
new C8(v1, v0);
function f50() {
}
function f51() {
    const t42 = [];
    t42.length = 2147483647;
    const v54 = (a55, a56, a57, a58) => {
        function F59(a61, a62, a63, a64) {
            if (!new.target) { throw 'must be called with new'; }
        }
    };
    return f51;
}
const v65 = /(?:a*)+q(?<a>.)/guds;
v65.constructor = f51;
function f66(a67) {
    const v68 = a67.constructor;
    const v70 = new Uint8ClampedArray(v65, a67, v68);
    v70.valueOf = f50;
    v70 ^ 3;
    v68(a67, Uint8ClampedArray);
    class C74 {
    }
    return v68;
}
for (let i77 = 0, i78 = 10; i77 < i78; i78--) {
    for (let v85 = 0; v85 < 50; v85++) {
        v85(v65);
    }
}
