new Set();
[-10,-9007199254740991,-920980841,-9,-14,16];
[16,4294967297,-16];
[5,-536870912,5,257,15,12518,-43408,-9223372036854775808];
[104762.14753807266,-279097.1642774454,5.0,1.0];
const v12 = [2.220446049250313e-16,0.4676436969349189,1.5179111745363469e+308,-1000.0,-2.220446049250313e-16,-1000000000000.0,4.0,4.587029279807309,-0.0];
const v17 = new Uint8Array(22);
const v20 = new Int32Array(3289);
const v22 = [v20];
Int32Array.apply(Uint8Array.join, v17, v22);
class C25 extends Int32Array {
    [Set] = true;
    [v12];
}
new C25();
const v1 = new Map();
const v2 = [2.220446049250313e-16,1e-15,-1000000000000.0];
const v3 = [-5.2004559980211695,NaN,8.498021508976495e+306,-6.829953387957717,1000.0,28.891889779008352];
v3.e = v1;
const v4 = [-9.736459221475412e+307];
class C7 {
    static 8 = -61137;
    static #toString(a9, a10) {
        let v11;
        try {
        const t0 = -61137;
        v11 = t0();
        } catch (e) {}
        a10 in v11;
    }
    #c;
}
function f14(a15) {
    try {
        v4.__proto__ = v4;
    } catch(e16) {
    }
    return C7;
}
Int8Array[Symbol.toPrimitive] = f14;
try {
    v3.e = 10270;
} catch(e20) {
}
new Int8Array(129);
const v24 = new BigUint64Array(727);
function F26() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 10270;
    } catch(e29) {
    }
    try {
        this.e = 10270;
    } catch(e30) {
    }
}
const v31 = new F26();
const v33 = new Int8Array(9);
function f35(a36) {
    return v1;
}
[-1573430901];
const v38 = [2,1344292883];
const v39 = [-65535,-2,-1460794955,-1588494235,-117,-1237567449,14,-33523,1073741824];
delete v31[Int8Array];
v33[727] %= -61137;
class C41 extends f35 {
    [-9007199254740992];
    5;
}
class C44 {
    constructor(a46, a47) {
        try {
            try {
                super[Int8Array] = v2;
            } catch(e48) {
            }
            a47.__proto__;
            a46.b = a46;
        } catch(e50) {
        }
    }
    #m(a52) {
    }
}
new C44(-9007199254740992);
new C44(-2147483648);
new C44(-44942, -44942);
const v56 = [223649468,-240869187,536870889,1073741825];
let v58 = Map;
try {
    v58 = C41;
} catch(e59) {
}
-61137 << v38;
try { v39.join(f14); } catch (e) {}
try {
    v24.__proto__ = v33;
} catch(e63) {
}
Math.expm1(1024);
Math.log2(1024);
v56[367] = -811033.4525908205;
