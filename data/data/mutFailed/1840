const v3 = [BigUint64Array];
try {
    new BigUint64Array(v3);
} catch(e5) {
    try { e5.toString(); } catch (e) {}
}
-9n | -9n;
[3.0,-Infinity,1000000000000.0,-4.0];
[649274.1152339734];
[9.016048565176627e+307,1e-15,4.0,0.6381107434497874,1.2665519323455374e+308,-2.2250738585072014e-308,0.4516552418222135,2.2250738585072014e-308,-Infinity];
BigUint64Array.name = BigUint64Array;
const v17 = new BigUint64Array(10);
v17[9] = v17;
new Int32Array(3);
try { new Uint8ClampedArray(10, 5, Uint8ClampedArray); } catch (e) {}
new Uint8ClampedArray(5);
5 << 5;
const v28 = new Int8Array(5);
200 + 200;
BigUint64Array.f = BigUint64Array;
const v34 = new BigUint64Array(127);
-4294967295 !== -4294967295;
127 % 127;
v28[v34];
Math.sin();
324308659 + 324308659;
