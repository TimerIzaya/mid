function f3(a4, a5) {
    const o33 = {
        valueOf(a7, a8) {
            class C10 extends Int16Array {
                constructor(a12, a13, a14, a15) {
                    super(this);
                    function f16(a17) {
                        function f19(a20) {
                            delete a12[a20];
                            return a13;
                        }
                        this.onmessage = f19;
                        return Int16Array;
                    }
                    const o24 = {
                        "type": "function",
                    };
                    new Worker(f16, o24);
                }
            }
            new C10(Int16Array, C10, C10, Int16Array);
            new C10(4294967295);
            try { new a5(a8, 64); } catch (e) {}
            super.d >>= this;
            [-16,-2147483649,52925];
            [13,-4294967297,6225];
            [65536,1473025002,-62606];
            return a8;
        },
        "g": a5,
        [a4]: a5,
        __proto__: a5,
        "a": a5,
    };
    return o33;
}
const v34 = f3(4294967295, 64, 64, 4294967295);
const v35 = f3(64, v34);
f3(64, v34);
new d8(2);
const v42 = new BigUint64Array(11);
new Uint32Array(0);
class C47 {
    constructor(a49, a50) {
        const o51 = {
            __proto__: 0,
        };
        o51[a50] = o51;
    }
}
const v52 = new C47();
new C47(Infinity, v52);
function F54(a56, a57) {
    if (!new.target) { throw 'must be called with new'; }
}
const v58 = new F54(Infinity, v35, v42, v52, 0);
v52.c = v58;
