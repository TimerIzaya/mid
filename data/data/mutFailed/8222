const v1 = [];
const o5 = {
    toString() {
        super[this];
    },
    ...v1,
    n() {
        return this;
    },
};
try { o5.n(); } catch (e) {}
const v7 = new Map();
function f11(a12) {
    const o23 = {
        "b": v7,
        p(a14, a15, a16) {
            Float32Array.length;
            let v19 = 10;
            for (; v19--;) {
            }
            const v21 = super.f;
            try {
                v7.valueOf = v21;
            } catch(e22) {
            }
            return a12;
        },
        "d": a12,
        "f": Map,
        [13]: 488056838,
        __proto__: v7,
        [Map]: a12,
    };
    return o23;
}
function f24() {
    try {
        f11(-722316279);
    } catch(e27) {
    }
    return v1;
}
f11.toString = f24;
const v28 = f11(339364495);
f11(f11(v28));
const v31 = [128,129,-53381,14,128,256,-2147483647];
[255,968497640,1000,4,1844188500,10];
const v33 = [10513,64671,-863217237,-1952491859,2134955442];
class C34 {
    static e = v33;
    3881742345;
    set h(a36) {
        new Float64Array(1);
        return -2147483647;
        const v42 = this[v31.length];
        class C43 {
        }
        function F44() {
            if (!new.target) { throw 'must be called with new'; }
            const v47 = -(-7);
            v47 ** v47;
        }
        v28[v42];
        const v50 = typeof f11;
        class C52 {
            constructor(a54, a55) {
                function f56(a57) {
                    return this;
                }
                const o60 = {
                    "type": "function",
                };
                new Worker(f56, o60);
            }
        }
        const v62 = new C52(C52, C52);
        new C52(-50865, v62);
        v50 === "undefined";
    }
    static 1;
    static {
    }
    constructor(a68, a69) {
        for (let i = 0; i < 10; i++) {
            this[this];
        }
    }
    [f11] = 339364495;
    [339364495];
    e;
}
new C34();
new C34();
new C34();
function f75(a76) {
}
class C77 extends f75 {
}
const o79 = {
};
o79.type = o79;
gc(o79);
function f81() {
    ("D")[0].match();
    return f81;
}
f81();
f81();
