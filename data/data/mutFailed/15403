function F3(a5, a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
    const v8 = this.constructor;
    try { new v8(this, a7, -14); } catch (e) {}
    a7.valueOf(a5, a7);
}
class C12 {
    constructor(a14, a15) {
        const v16 = [-4529,-56036,4294967295,256,-256];
        const v17 = /((?:ab){4,7}(?:a+){0,0})/gv;
        const v18 = /a\bc/umsy;
        class C19 {
            constructor(a21) {
                for (let v22 = 0; v22 < 160; v22++) {
                    function f23() {
                        if (a21) {
                            function F24(a26, a27, a28, a29) {
                                if (!new.target) { throw 'must be called with new'; }
                            }
                            new F24(this, this, a21, v22);
                            new F24(v18, this, v17, C19);
                            new F24(a21, v16);
                        } else {
                            new f23();
                        }
                    }
                    f23();
                }
            }
        }
        const t30 = "function";
        t30[4] &= a14;
        const v35 = super.h;
        try {
            v35.toString = a14;
        } catch(e36) {
        }
    }
    c;
    static #c;
    static #h = -9007199254740990;
    g;
}
const v37 = new C12("function", C12);
new C12("function", v37);
new C12(C12, -3096);
function f41() {
    return f41;
}
const v42 = Array();
v42[2358] = f41;
for (const v43 of v42) {
    v43 - v43;
}
new Float64Array(4096);
new Uint8ClampedArray(4);
new Uint8Array(6);
const v54 = /(x)(x)(x)\1/uis;
function f55(a56, a57, a58, a59) {
    const o88 = {
        2: a58,
        __proto__: a59,
        get b() {
            const v61 = this.constructor;
            v61.getOwnPropertySymbols(v61);
            return v61;
        },
        [v54](a64, a65, a66, a67) {
            for (let i70 = 0, i71 = 10;
                (() => {
                    const v72 = i70 < i71;
                    function f73(a74, a75, a76, a77) {
                        const v78 = a75 >>> a75;
                        let v79 = v78 >>> v78;
                        v79--;
                        return v79;
                    }
                    f73();
                    %OptimizeFunctionOnNextCall(f73);
                    return v72;
                })();
                i71--) {
            }
            super.test();
        },
    };
    return a56;
}
const v91 = new Map();
function f92(a93, a94) {
    const o101 = {
        "a": a94,
        [v91]: Map,
        [2221](a96, a97, a98) {
        },
        ...v91,
        [a94]: Map,
        valueOf(a100) {
        },
    };
    return a94;
}
for (let v102 = 0; v102 < 395; v102++) {
    f92();
}
%PrepareFunctionForOptimization(f55);
f55();
(536870887).toFixed();
function f107(a108) {
    return a108;
}
f55();
%OptimizeFunctionOnNextCall(f55);
f55();
