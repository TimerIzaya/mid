const v6 = [968241.5085206532,968241.5085206532,-2147483647n,968241.5085206532];
const v7 = [v6];
[-2147483647n,968241.5085206532,v7,-2147483647n,-2147483647n];
function f9() {
    return -1000.0;
}
const v10 = [-16245n,f9,f9,968241.5085206532];
[[v7,f9,v10,v6,3.0],v6,-16245n];
class C13 extends v10 {
    #p(a15, a16, a17, a18) {
        Object.defineProperty(this, 7, { writable: true, configurable: true, get: f9, set: f9 });
        return f9();
    }
    static #c = -2147483647n;
    m(a21, a22) {
        let {"a":v23,...v24} = this;
        super[3.0];
        return 968241.5085206532;
    }
    static #e = f9;
    #f = -1000.0;
    static e;
    static 64;
}
new C13();
new C13();
const v28 = new C13();
class C29 {
}
const v30 = new C29();
class C32 {
}
function F33() {
    if (!new.target) { throw 'must be called with new'; }
}
const v35 = new F33();
const v36 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v38 = 9007199254740991n * 9007199254740991n;
for (let v39 = 0; v39 < 5; v39++) {
    function f40() {
        for (let v41 = 0; v41 < 5; v41++) {
            "p" == "p";
            try { ("p").substring(C32, C32); } catch (e) {}
        }
        try {
            v36.forEach();
        } catch(e46) {
            e46.a = v35;
            e46.a = e46;
        }
        const v48 = ("1073741824").constructor;
        v48.name = v28;
        const v49 = v48(v38);
        try { v49.replaceAll(6, v30); } catch (e) {}
        return "1073741824";
    }
    f40();
    %OptimizeFunctionOnNextCall(f40);
}
