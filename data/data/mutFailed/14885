("12")[1];
try { ("iSn0b").strike(); } catch (e) {}
let v7 = "-2147483649";
function f8(a9, a10, a11, a12) {
    a12[0] = a12;
    const o19 = {
        ["iSn0b"]: -1024,
        get h() {
            super[-4096];
            ([16,-1073741824n]).flat(16);
            return "iSn0b";
        },
        [a11]: a10,
        [a10]: "iSn0b",
        "d": -4096,
        1: a12,
        ..."12",
        __proto__: a11,
        65536: 1576329422,
        ..."iSn0b",
    };
    return o19;
}
f8[Symbol.toPrimitive] = f8;
const v22 = f8("iSn0b", -1024, v7, "iSn0b");
try { v22.toString(); } catch (e) {}
f8("iSn0b", -4096, f8, "12");
f8(v7, -4096, -1024, "iSn0b");
function F29() {
    if (!new.target) { throw 'must be called with new'; }
    const v31 = this?.constructor;
    try { new v31(); } catch (e) {}
}
const v33 = new F29();
const v34 = v33.length;
const v35 = new F29();
v35.e = v35;
const v36 = new F29();
v36.length = v34;
v36.length;
function f40(a41, a42, a43, a44) {
    return a42;
}
for (let v45 = 0; v45 < 625; v45++) {
    f40(Uint8Array, 2, v45);
    try {
        v7 &= -1024;
    } catch(e47) {
    }
}
([0.5696217973802589,v36,v35,v33,[4294967296]]).toLocaleString("toString").length;
