let v1 = "l";
class C3 {
    get d() {
        try {
            this.__proto__ = v1;
        } catch(e5) {
        }
        return this;
    }
    static h = v1;
    static {
        Math.log2(++v1);
        class C10 {
        }
        const v11 = new C10();
        const v12 = new C10();
        v11 == v12;
        v1[-1209456669] = -1209456669;
        this >> -1209456669;
        this && this;
    }
    static 16;
}
const v16 = new C3();
const v17 = new C3();
([])[0];
Math.atan(0.6146752851534484);
const v23 = new C3();
[-2129096357,9007199254740991,9,-268435456];
[127,4096,1374880001,16527];
[30912152,-10,35288,8,-1625183588,-22504,856192388];
let v28 = 1;
function F30(a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a32;
    } catch(e34) {
    }
    try {
        const v35 = v28--;
        v35 === v35;
        function f37() {
            const o40 = {
                m(a39) {
                    return f37;
                },
            };
        }
        this.g = a33;
    } catch(e41) {
    }
    try {
        this.e = 128282403;
    } catch(e42) {
    }
}
new F30(v17, 128282403);
new F30(v23, v16);
new F30(v23, -1209456669);
try {
    Float64Array.__proto__ = Float64Array;
} catch(e47) {
    e47.stack;
}
