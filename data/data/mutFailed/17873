let v3 = ["toString"];
const v4 = ["mHft"];
["toString","mHft",v3,"mHft"];
class C9 {
    m(a11, a12) {
        [-47054];
        [147773510,7,4,256];
        return [14,56530,-10,-65537,-1849578353,16,-17051,1];
    }
    get g() {
        -"mHft";
        let v18 = 0;
        while (9 < 9, v4) {
            const o24 = {
                "execution": "sync",
                "type": "minor",
            };
            const t17 = "mHft";
            t17(o24);
            v18++;
        }
        return 0.2523950178248491;
    }
}
const v27 = new C9();
const v28 = new C9();
const v32 = [3.0,995712.1638139696,-2.0,1.6391533955732946e+308,1000000.0];
[1.7976931348623157e+308,-1000000000.0,-2.2250738585072014e-308,NaN,-1.9873060550779815,-576168.7100780082,2.220446049250313e-16,2.2250738585072014e-308];
(C9 = v27) >> "mHft";
let v36;
try {
const t0 = 0.9509347647729306;
v36 = t0(v32, 5.0);
} catch (e) {}
v28[2412708174] = v36;
10 % v28;
Math.cosh(v28);
++v3;
v3 - v28;
Math.hypot(v3);
const v46 = [];
[];
const v48 = [0.0,-1000.0,2.557943047142931];
[-7.507772096903578,-1000000000.0,1.7976931348623157e+308,-1000.0,818.7357625649829,-Infinity,-1e-15,692817.4776436412,1e-15,-2.2250738585072014e-308];
for (let v53 = 0; v53 < 5; v53++) {
    v48.valueOf = v53;
}
let v59 = 0;
v46.f = v46;
v59++;
v59 < 4;
[256,54026];
Math.hypot();
const o70 = {
    "execution": "async",
    "type": "minor",
};
gc(o70);
const v73 = new Int16Array();
const v78 = new Int16Array(8);
async function f80(a81, a82, a83) {
    delete v78[-1000000000.0];
    v73[0];
    const v86 = v73[1];
    let [,,...v87] = v73;
    await v86;
}
f80(8, 8, 948737.12760097);
new C9();
new BigInt64Array(256);
new Float64Array(11);
new Uint32Array(129);
class C104 {
}
new C104();
