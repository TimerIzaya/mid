const v0 = [671709.2259973944,891.6769716585741];
const v1 = [-Infinity,NaN,NaN,-4.522516452879177,4.208040884112519,-9.058757544678132e+307,-1000000000.0];
const v2 = [0.7411246371392196,-1.0,451601.30275427713,2.2250738585072014e-308,-1000000.0,948.2073626885453,965.3011650370543];
class C3 {
    static #o(a5) {
        return v1.length;
    }
    constructor(a8, a9) {
        const v10 = this?.constructor;
        try { new v10(v1, v1); } catch (e) {}
        [1.0,955.9211323337365,1000000000.0,-5.0,1000.0];
        [2.0];
        [-8.548547108491732e+306,-3.0,-1e-15,0.7181239298771166,1000000000.0,1000000000000.0,-1.5061170265704693e+307,Infinity,1000000000000.0];
        new Int16Array(251);
        Int32Array.prototype = Int32Array;
        new Int32Array(1024);
        20 - 20;
        const v24 = new Uint8ClampedArray(20);
        v24[2] = v24;
    }
}
C3.c = C3;
const v25 = new C3(v1, v2);
v25.h = v25;
const v26 = new C3(v0, v2);
v26.length;
new C3(v0, v1);
new WeakMap();
function f34() {
    Math.f = Math;
    const v37 = Symbol.iterator;
    Math[v37] = v37;
    return Symbol;
}
%PrepareFunctionForOptimization(f34);
f34().match;
%OptimizeFunctionOnNextCall(f34);
const v40 = f34();
try { new v40(); } catch (e) {}
