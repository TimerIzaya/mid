const v0 = [0,129,3];
const v1 = [-4294967295,-4294967296,-2147483647,10000,58006,-4294967296,536870889];
const v2 = [9,1386572409];
class C3 {
    #f;
    static [C3];
    static #toString(a5) {
        return v2;
    }
    [v1] = v0;
    #a;
    #b = v2;
    toString(a10, a11) {
        this.constructor;
        new a11();
        -v1;
    }
}
C3.length = C3;
const v15 = new C3();
const v16 = new C3();
let v17 = 10;
v17--;
const v20 = v17 == 0;
const o21 = {
    "done": v20,
    "value": v17,
};
const v22 = new C3();
const v23 = v22?.constructor;
try { new v23(); } catch (e) {}
[v15,v22,[v0,v22,v0,v15],v16,v0];
for (let [v28,v29] of [v0,v2]) {
    v29 + v29;
    Math.cosh(-9.488890520175198e+307);
    function f35() {
    }
    const o39 = {
        "b": f35,
        valueOf() {
            try { this.b(); } catch (e) {}
            [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
        },
    };
    try { o39.b(); } catch (e) {}
}
const v44 = [1354185297,-1187772013,1073741823,7,-13,8,-473031863,-1332151602];
const o54 = {
    [null]() {
        for (let v47 = 0; v47 < 500; v47++) {
            v47++;
            const o53 = {
                [v44](a50, a51, a52) {
                },
                ...v47,
            };
        }
    },
};
o54.null();
-39245 % -39245;
BigUint64Array.prototype = BigUint64Array;
function F60(a62, a63) {
    if (!new.target) { throw 'must be called with new'; }
    const v64 = this.constructor;
    try { new v64(); } catch (e) {}
    a62 & a62;
}
const v67 = new BigUint64Array();
for (const v68 of v67) {
}
for (let i = 0; i < 5; i++) {
    const o70 = {
    };
    gc(o70);
}
