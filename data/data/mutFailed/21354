const v2 = new Float64Array(4002);
const v5 = new BigUint64Array(1000);
new BigInt64Array(79);
new Date();
const v11 = [Float64Array];
const v12 = [v5,BigInt64Array,BigUint64Array,v11,1000];
const v13 = [v12,Date,v12,1000];
function F14() {
    if (!new.target) { throw 'must be called with new'; }
    let v15 = this;
    try {
        v15.c = -65537;
    } catch(e17) {
    }
    try {
        v15.g = -65537;
        const v18 = v13 > v15;
        try { v13.findIndex(BigUint64Array, ...v2, ...v18, Date, v18, v18); } catch (e) {}
        let v22 = -1000000000000.0;
        Math.imul(79, v22);
        v22++;
        v15--;
    } catch(e26) {
    }
}
const v27 = new F14();
let v28 = new F14();
const v29 = new F14();
function F30(a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v29;
        new BigUint64Array(v5, v28 /= v29);
    } catch(e38) {
    }
    try {
        this.e = v29;
    } catch(e39) {
    }
}
const v40 = new F30(v28, v29);
const v41 = v40?.constructor;
try { new v41(F30, v29); } catch (e) {}
new F30(v29, v29);
const v44 = new F30(v29, v27);
let v48 = 591114.0785999324;
const v49 = v48++;
const v50 = v49 & v49;
const v52 = [v48,v48,v48];
4 | 4;
function F55() {
    if (!new.target) { throw 'must be called with new'; }
    const v57 = this?.__defineGetter__;
    try { new v57(v27, 11n); } catch (e) {}
    let v59;
    try { v59 = this.toString(this, F55, F55, this); } catch (e) {}
    try { v59.trimStart(); } catch (e) {}
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    let v64;
    try { v64 = Date.toString(F55, 9223372036854775807); } catch (e) {}
    Date();
    let v68;
    try { v68 = new Uint32Array(Uint32Array, Uint32Array, 4); } catch (e) {}
    try { v68.findIndex(v64); } catch (e) {}
    Uint32Array.BYTES_PER_ELEMENT = Uint32Array;
    const v70 = new Uint32Array(5);
    let v71;
    try { v71 = v70.reduce(Date); } catch (e) {}
    try { v71.replaceAll(v68, v71); } catch (e) {}
    const v75 = new Set(v52);
    try { v75.forEach(v27); } catch (e) {}
    const v77 = v75?.add;
    try { new v77(v68); } catch (e) {}
    let v80;
    try { v80 = ("delete").blink(); } catch (e) {}
    v80[4] = v50;
    const v81 = v75["delete"](839612.5677247904);
    const v82 = v81 || 839612.5677247904;
    const v83 = v81 || v81;
    v83 || v83;
    const v85 = v83 && v83;
    !v85;
    19793 >>> 19793;
    const o89 = {
    };
    o89.b = o89;
    v57.e = 19793;
    try { new Array(9223372036854775807); } catch (e) {}
    let v93;
    try { v93 = ("getPrototypeOf").blink(); } catch (e) {}
    v82[28];
    let v95;
    try { v95 = v93.strike(v48); } catch (e) {}
    try { v95.replace(19793, v40); } catch (e) {}
    -1.7976931348623157e+308 - v28;
    class C99 {
        ["getPrototypeOf"] = -1.7976931348623157e+308;
    }
    class C100 extends C99 {
        ["getPrototypeOf"] = C99;
    }
    try { new C100(); } catch (e) {}
    try { new C100(); } catch (e) {}
    C100.e = C100;
    const v103 = new C100();
    const v104 = v103?.matchAll;
    try { v104(); } catch (e) {}
    try { new v104(); } catch (e) {}
    const v107 = BigInt64Array?.constructor;
    try { new v107(); } catch (e) {}
    const v109 = v103.constructor;
    let v110;
    try { v110 = new v109(F55, v85, v52); } catch (e) {}
    const v111 = v110?.getPrototypeOf;
    try { new v111(); } catch (e) {}
    const v113 = F55(19793);
    for (const v114 of v113) {
    }
    for (const v115 of "getPrototypeOf") {
        v115 - v115;
        ("delete").__proto__;
        const o118 = {
            "setPrototypeOf": Date,
        };
        new Proxy(Date, o118);
    }
    const v121 = [v113,,v113,v113,v113];
    v121.g = v121;
    let v122;
    try { v122 = v121.includes(839612.5677247904); } catch (e) {}
    v122 || v122;
    const v124 = v122 && v122;
    v124 || v124;
    BigUint64Array.e = BigUint64Array;
    const v127 = new BigUint64Array();
    try { v127.reduceRight(v52); } catch (e) {}
    for (let v129 = 0; v129 < 5; v129++) {
        v129 >> v129;
    }
    ([[v121,v121,v121]])[0];
}
const v134 = new F55();
v134?.constructor;
function f136() {
    const o137 = {
    };
    const o138 = {
    };
    try {
        const o139 = {
        };
    } catch(e140) {
    }
    return undefined;
}
const o141 = {
    "apply": f136,
    138: v41,
    __proto__: v11,
    "c": 9007199254740990n,
    "e": v44,
    "a": v2,
};
