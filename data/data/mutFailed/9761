class C3 {
    static #d = "iterator";
    constructor(a5, a6) {
        this[2210021869] = this;
        a5.e = a5;
        5 - 5;
        Uint8ClampedArray.a = Uint8ClampedArray;
        new Uint8ClampedArray(5);
        const v13 = new Float64Array(14);
        try { v13.reduce(0.2955348398249047); } catch (e) {}
        BigInt64Array.BYTES_PER_ELEMENT;
        const v18 = new BigInt64Array(4096);
        v18[2175];
    }
    static ["a"];
    2210021869;
}
C3.prototype = C3;
const v20 = new C3(C3, C3);
v20[2210021869] = v20;
const v21 = new C3(v20, C3);
const v22 = new C3(v21, v21);
v22[2210021869] = v22;
let v23 = 1915928963n;
v23--;
393331561n + 393331561n;
-9223372036854775808n >> -9223372036854775808n;
class C38 {
    constructor(a40, a41) {
        a40 & a40;
        a41 !== a41;
        a41.__proto__;
    }
    f;
    set d(a46) {
        super.d;
        const o48 = {
        };
    }
}
try { new C38(-9223372036854775807n, 393331561n); } catch (e) {}
const v50 = new C38(-9340, 2147483649);
const v51 = new C38(-9340, 1073741823);
const v52 = new C38(1073741823, v50);
function F53(a55, a56, a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    a55.d;
    a57 > a57;
}
const v61 = new F53(v50, v51, 2147483649, -9340);
const v62 = v61?.constructor;
try { new v62(v61, -2n, v61, v61); } catch (e) {}
const v64 = new F53(v50, v51, 1073741823, -9340);
const v65 = new F53(v50, v52, -9340, 1073741823);
new WeakSet();
Set.prototype = Set;
new Set();
new Float64Array(1136);
4 << 4;
new Int32Array(4);
new Uint32Array(48);
try {
    v64.fuck(v65, 1136);
} catch(e81) {
    e81.name;
}
