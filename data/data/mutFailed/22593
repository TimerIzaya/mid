gc();
function f3() {
    return f3;
}
const o4 = {
    "apply": f3,
    "call": f3,
    "get": f3,
    "getOwnPropertyDescriptor": f3,
    "getPrototypeOf": f3,
    "has": f3,
    "ownKeys": f3,
    "preventExtensions": f3,
    "set": f3,
    "setPrototypeOf": f3,
};
function F7(a9) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a9;
    } catch(e10) {
        class C11 {
        }
        const v12 = new C11();
        const o20 = {
            get b() {
                const v16 = [Uint32Array];
                try { v16.find(Worker); } catch (e) {}
                try {
                    v12.c = -578828680;
                } catch(e19) {
                }
                return C11;
            },
            127: v12,
        };
    }
}
function F21(a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
}
1000000000.0 >> 1000000000.0;
Math.sinh(0);
new F7(1000);
new F7(1668012732);
new F7(1668012732);
new Date();
[4,9,553295762,-49607];
function f36(a37, a38) {
    const o39 = {
        "f": a38,
    };
    return o39;
}
const v40 = [6,-2,2147483647,7,-2147483649,1073741824,268435456,-42057,-128];
[-2147483648];
const v42 = [-4.0,-187.33463400009316,266767.34688113444,551749.9695726107];
new Date(-429.3290910931888);
class C48 {
    static {
        try {
        const t0 = 529940173;
        t0(this, this);
        } catch (e) {}
        Math.cos(1000);
        Math.tan(1000);
    }
}
const v55 = new C48();
function f57(a58, a59, a60) {
    const o64 = {
        __proto__: a59,
        [a60]: -2147483648,
        [a59](a62, a63) {
        },
        "c": 529940173,
        1073741824: C48,
    };
    return o64;
}
const v66 = f57(-1, f57());
const v67 = f57(-2147483648, v55);
const v68 = 0 << v66;
v67[Symbol.isConcatSpreadable] = v68;
function f71() {
    return v42;
}
v42.constructor = f71;
class C73 {
    constructor(a75, a76, a77) {
        Uint32Array[2] = 1;
        Math.cos(-197199362);
    }
}
new Uint32Array(C73);
%VerifyType(v40 instanceof -24894);
const v86 = [-8.423288404653653e+307,460.19811044552307,-1.7971213292687213e+308,-1e-15,0.8010499065604265,5.0,1.7976931348623157e+308,-4.0,0.8718051962313597];
const v88 = new Uint8ClampedArray(v86);
const t98 = 19793;
for (const v92 of t98()) {
}
function f93(a94, a95, a96, a97) {
    for (let v98 = 0; v98 < 5; v98++) {
        (2136873598).constructor.parseFloat(f93);
    }
    return f93;
}
function f102() {
    return v86;
}
class C103 extends f102 {
    constructor(a105, a106, a107, a108) {
        super();
        function f109() {
            const t114 = [];
            t114[6] = a107;
            v86[3136390630];
            v88.byteOffset;
            return C103;
        }
        for (let v113 = 0; v113 < 5; v113++) {
            f109();
            %OptimizeFunctionOnNextCall(f109);
        }
    }
}
new C103(Uint8ClampedArray, Uint8ClampedArray, 9007199254740991);
