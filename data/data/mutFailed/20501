let v0 = [-8287,255,-256,1073741823,3,-11,23043,10,-50848];
[257,10318,-1024,-9007199254740992];
[1715094162,-4294967295,1208490607,-4294967296,-73243141,-268435456,494205637,14040,6266,-447251716];
const v4 = new Map();
let v5 = WeakSet;
const v6 = v4 <= Map;
if (v6) {
    v5 -= v0;
    Object.defineProperty(v0, v6, { configurable: true, enumerable: true, value: v4 });
} else {
    const o9 = {
    };
    const v11 = gc();
    class C14 {
        ["getPrototypeOf"] = -1.7976931348623157e+308;
    }
    class C15 extends C14 {
        ["getPrototypeOf"] = C14;
    }
    new v11();
}
new v5();
class C19 {
    [v4];
    static g;
    static #c;
    #m(a21, a22) {
        v0 = a22;
        try {
            v4.#c = a21;
        } catch(e23) {
            Array();
            new WeakSet();
            for (let v28 = 0; v28 < 10; v28++) {
                v28 % v28;
                function f30() {
                    return v28;
                }
                const v31 = [601759695];
                const v32 = [1073741824,1073741823,1376142744,1073741825];
                function f34(a35, a36, a37, a38) {
                    f30();
                    let v41;
                    try { v41 = v32["find"](..."find", a38, ...v31, ...v32, ...522675525n); } catch (e) {}
                    const v42 = v41 <= a37;
                    v42 && v42;
                }
                for (let v44 = 0; v44 < 10; v44++) {
                    f34();
                }
            }
        }
        return a22;
    }
    h;
    5;
    static #d = Map;
    1;
}
const v46 = new C19();
new C19();
new C19();
const v51 = [16,-1073741824n];
function f52() {
}
f52();
new Float64Array(51);
v51.e = v46;
const o64 = {
    set c(a63) {
        super.c -= 65536;
    },
};
new BigUint64Array(4015);
new Uint8ClampedArray(129);
const v73 = [65537,268435441,63298,-5,1235122603];
const v74 = [128,215394418];
const v75 = [-2,-4294967296,4294967297];
function F76(a78, a79, a80, a81) {
    if (!new.target) { throw 'must be called with new'; }
    try { a81.valueOf(); } catch (e) {}
    const v83 = this.constructor;
    try { new v83(1024, 1024, v73, this); } catch (e) {}
    a79.caller;
    this.c = a80;
    this.f = a79;
}
const v86 = new F76(-714582153, F76, -714582153, v74);
new F76(9, v86, 9, v75);
let v88 = -1;
class C89 {
    static 7;
    #n(a91) {
        const o94 = {
            "execution": "sync",
        };
        gc(o94);
    }
}
const v96 = new C89();
const v97 = v96?.constructor;
try { new v97(); } catch (e) {}
[55948];
[255,-8,65537,4294967295];
function f101(a102, a103) {
    const t105 = [6,-1340283293,-11812,-1073741824,-1073741824];
    t105.length = -2147483648;
    class C107 {
        constructor(a109, a110) {
            function f111(a112) {
                let v120 = "-1024";
                v120 <<= "8Yr";
                return f111;
            }
            Worker(f111);
        }
    }
    0 < 5;
    const o135 = {
        [a102](a128, a129, a130, a131) {
            [923.3408061449261,-6.350919708227568e+307,-2.220446049250313e-16,0.04850379751250988,4.009495502233909];
        },
        "a": a102,
        set b(a134) {
            v88 <<= v88;
        },
    };
}
