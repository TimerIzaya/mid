const v2 = new Uint16Array(37);
function f3() {
    class C5 {
        [10] = 10;
    }
    const v6 = new C5();
    new C5();
    new C5();
    const v10 = new Uint8Array(10);
    try {
        new Uint8ClampedArray(v10);
    } catch(e13) {
    }
    new Uint16Array(C5, 10, 37);
    const v15 = new Uint8Array(v2, 10, 10);
    C5.c;
    v6[2345934191];
    try {
        v2.__proto__ = v15;
    } catch(e18) {
    }
    return Uint8Array;
}
v2.valueOf = f3;
for (let i20 = 0; i20 < 10; i20++) {
    new Uint8ClampedArray(256);
    new Int32Array(15);
    new BigUint64Array(127);
}
Uint16Array.valueOf = f3;
const v37 = new Uint16Array(209);
const v40 = new Uint32Array(256);
class C41 extends Uint16Array {
    constructor(a43, a44) {
        super(a43, 209);
        a43 & Uint32Array;
        const v46 = C41 >>> v40;
        const v47 = this.buffer;
        super[v47] = f3;
        [209];
        [v47,this,v46,Uint16Array];
        [a43,this,Uint16Array,v37,a43];
        --C41;
        v2[0] = a43;
        v40[0] = v2;
        a43 <= Uint16Array;
    }
    d = Uint16Array;
    static 2041989440 = 209;
}
new C41(37, 209);
new C41(209, 256);
new C41(256, 37);
const v57 = new Date();
const v59 = [Reflect,Reflect,Reflect,Reflect];
Reflect.apply(v57.getDate, v57, v59);
