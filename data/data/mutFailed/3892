const v3 = /fa{z}[\011]/gdmsy;
/A(?:a?)+/udisy;
let v5 = /[1a(?=b)]/gvms;
function f6() {
    const v7 = new f6();
    typeof f6 === "undefined";
    ({"h":v5,} = v7);
    return v3;
}
let v12 = 0;
do {
    const o15 = {
        "maxByteLength": 2147483649,
    };
    const v17 = new ArrayBuffer(3165, o15);
    new Uint8ClampedArray(v17);
    v12++;
} while (v12 < 2)
new BigUint64Array(129);
new BigInt64Array(16);
const v30 = new Int32Array(198);
const v35 = new Uint8Array();
const v38 = new Uint32Array();
function f39(a40, a41, a42, a43) {
    a40 - a40;
    a42--;
    a43 >>> a43;
    const v47 = a41--;
    v47 + v47;
    a43 + a42;
    const o59 = {
        "b": a40,
        "c": a43,
        ...v35,
        n(a51, a52) {
            if (a51 !== a51) {
                try {
                    new Int32Array(v30);
                } catch(e55) {
                }
            } else {
                try {
                    f39(/[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]/vdimy, 129, a40, 16);
                } catch(e58) {
                }
            }
            v38[a40] = v38;
            return a52;
        },
    };
    try { o59.n(o59, -2); } catch (e) {}
    return a42;
}
f39(2, 2, 1, 2);
for (let v62 = 0; v62 < 500; v62++) {
    f39(Uint8Array, 2, v62, 2);
}
