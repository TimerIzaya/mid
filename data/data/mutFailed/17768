const v4 = ([-536870912,-3592,61205]).constructor;
try { v4(6.9332226702676465); } catch (e) {}
const v7 = new Uint8ClampedArray();
function F8() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c;
        this + v7;
        this.g = this;
        for (let i = 0; i < 5; i++) {
        }
        new F8();
    } catch(e13) {
    }
}
class C15 {
    o(a17, a18) {
        try { a18(a18, a17); } catch (e) {}
        -4096 - a18;
        ("-12")["lastIndexOf"]("-12", -4096);
        return a17;
    }
    [1000.0] = "-12";
    static #f = 1000.0;
    268435456;
    static [1000.0];
    4 = -4096;
}
new C15();
new C15();
new C15();
[-9223372036854775807,-1713101369,65537,5,255,1374702002,-1073741824,2053962088];
[-18926,536870887];
[-12,1073741824,-5288,-9,-1754407117,-9223372036854775808,4294967297,1655701743,268435456,1024];
function f32() {
}
const v34 = new WeakSet();
function f39() {
    Date[-22872n] = Date;
    Array(1102693041);
    return 256;
}
function F45(a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    const v49 = this.constructor;
    try { new v49(a47); } catch (e) {}
    -a47;
    a48--;
    const v54 = new Date();
    Object.defineProperty(v54.toLocaleString(), Date, { configurable: true, value: a48 });
    class C58 extends ([]).constructor {
    }
    this.h = f39;
}
new F45(65537, f39);
class C60 extends F45 {
    3120 = F45;
    toString(a62, a63) {
        const t58 = this.constructor;
        new t58();
        -this;
    }
}
new C60();
new C60();
new C60();
const v75 = new Array(3062);
function f76(a77, a78) {
    const o82 = {
        "f": a78,
        __proto__: v34,
        set b(a80) {
            a77 = WeakSet;
            Object.defineProperty(v75, -1, { configurable: true, value: a80 });
            new WeakSet(this);
        },
    };
    return o82;
}
const o83 = {
};
o83.constructor;
const v86 = new Int16Array();
v86.reverse();
f32(WeakSet, f32);
f76(f76(2147483649, f32), WeakSet);
function f91() {
}
const v92 = [f91,f91];
[[v92,f91]];
new Uint8ClampedArray(3989);
const v103 = new Int8Array(9);
new Int16Array(186);
class C107 {
    [v92];
    10;
    static c = v103;
    constructor(a109, a110) {
        const v111 = this.constructor;
        try { new v111(this, v111, a109, a109); } catch (e) {}
        (f91 >= a109) instanceof f91;
    }
}
for (let i117 = 0, i118 = 10; i117 < i118; i117++) {
}
new C107();
new C107();
new C107();
const o131 = {
    "execution": "async",
    "type": "minor",
};
