3 & 3;
Uint16Array.prototype = Uint16Array;
new Uint16Array(3);
const v9 = new BigUint64Array(10);
const v11 = 90 & 90;
const v13 = new Int32Array(90);
function F14(a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    const v18 = new BigUint64Array(a17, -1837759569, a16);
    const v21 = a17 || a17;
    const v22 = a17--;
    -a17;
    let v24 = ~v22;
    ++v24;
    v9[90];
    const v28 = v18["find"](v21, v13);
    try {
        v18.valueOf = v28;
    } catch(e29) {
    }
    Math.log2(v21);
    const v31 = this?.constructor;
    try { new v31(a16, a17); } catch (e) {}
    a16.prototype = a16;
    try {
        this.b = a17;
    } catch(e33) {
    }
    try {
        this.e = 10;
    } catch(e34) {
    }
}
F14.a = v11;
F14.a = F14;
new F14(BigUint64Array, 10);
const v36 = new F14(10, 10);
new F14(v36, 3);
const v40 = new Int8Array(1785);
const v42 = new Int16Array(v40);
v42[101] = v42;
