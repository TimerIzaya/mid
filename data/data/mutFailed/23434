Uint8ClampedArray * Uint8ClampedArray;
const v3 = [];
class C4 {
    constructor(a6, a7, a8) {
        function f9(a10, a11, a12) {
            v3.copyWithin();
            try {
                f9(-268435456, 0.6683462416314783, [-268435456]);
            } catch(e18) {
            }
            const v19 = this >> -268435456;
            v19 >> this;
            return -v19;
        }
        f9(this, this, a6);
    }
}
class C23 extends C4 {
    #b;
    [v3];
}
new C23();
new C23();
new C23();
new Uint8ClampedArray(2302);
try {
    C4.__proto__ = C4;
} catch(e30) {
}
const o33 = {
    "maxByteLength": 64,
};
const v35 = new ArrayBuffer(9, o33);
const v37 = new Int32Array(v35);
new Int8Array(0);
new BigUint64Array(7);
const v45 = [0.09625845130830724,-1e-15,0.40226168662621953];
const v46 = [-700765.6455759181,-1.0,-1e-15,238.56580086181475,-6.99438605118472e+307,0.8641795299038513,1000000000000.0,0.6448161003466354];
const v47 = [-1.7976931348623157e+308,585278.7631767453,-1.0,-2.0];
const v53 = Array();
function f54(a55, a56, a57, a58) {
    const o59 = {
        [-9007199254740991]: 512,
        "b": a55,
        ...a57,
        "a": -2.220446049250313e-16,
        ...v53,
        ...v37,
        [a57]: v46,
        "b": a55,
    };
}
f54(4294967297, f54, 4294967297, 2124);
f54(2124, v47, v45, v47);
new Uint16Array(52);
const v67 = new Uint32Array(2128);
for (let v68 = 0; v68 < 100; v68++) {
    f54(512, v67, v67, v53);
}
for (let v70 = 0; v70 < 32; v70++) {
}
