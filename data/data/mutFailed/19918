const v1 = new WeakSet();
function f2(a3, a4) {
    const o17 = {
        "f": a4,
        [WeakSet]: a4,
        1: WeakSet,
        __proto__: v1,
        "g": a4,
        "h": v1,
        [a4](a6) {
            this[2] = a3;
            let v7;
            try { v7 = a6.n(this); } catch (e) {}
            return v7;
            new BigInt64Array(518);
            new Int16Array(BigInt64Array);
            new Uint8Array(3316);
            return a4;
        },
    };
    return o17;
}
f2(v1, WeakSet);
const v19 = f2(WeakSet, v1);
f2(WeakSet, WeakSet);
class C24 {
    static #e = 1478;
    c = 30227;
    set d(a26) {
        try {
            f2(v19, true);
        } catch(e29) {
        }
        super[this];
    }
    static 5 = 1478;
    static h = v1;
    [1144128896];
    d = 1144128896;
}
new C24();
new C24();
new C24();
[-1647,-57625,1724582219,536870888,13,-1024,1,8,-10,-4];
[423291346,4294967295,256,6,5,1000,-4294967295,9007199254740990,-1024,1073741824];
[232857173,-9909984,1000];
function F37() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 3872;
    } catch(e40) {
    }
}
const v41 = new F37();
const t54 = 1144128896;
const v42 = new t54();
new f2();
function F47(a49, a50, a51) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a50;
    } catch(e52) {
    }
}
new F47(4294967295, F37, v41);
new F47(62324, F47, v42);
const v56 = Symbol.toPrimitive;
const o58 = {
    [v56]() {
    },
};
