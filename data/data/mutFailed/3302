const v0 = [0.7889712644398102,2.532953947756219e+307,-968.7554562671507,1.0,4.0,0.12333168573597308,-9.184633020879504,5.0,-738472.1753128234,-2.2250738585072014e-308];
const v1 = [-2.220446049250313e-16,5.696882276044307e+307,2.220446049250313e-16,-1000.0,9.655906780069426,-2.0];
const v2 = [-1000000000000.0,-0.8877784799499384,-772.6419499455379,1.7976931348623157e+308,2.0,-3.247095904195528e+307];
[v0,v2,v2,v2];
const v4 = [v2,v0,v0];
[v1];
class C6 {
    [v0];
    n(a8, a9, a10) {
        class C11 {
            static [v2] = a10;
            [v4];
        }
        new C11();
        new C11();
        new C11();
        return v1;
    }
}
C6.length = C6;
new C6();
new C6();
const v17 = new C6();
const v18 = v17?.__lookupGetter__;
try { new v18(v0); } catch (e) {}
([255,536870912,166776989])[1];
[-5,8,4294967297,10,-37024,1,-4294967296,6];
[-33375,-279508190,1024,-2147483647,-1075623310,-9223372036854775808,1646716702];
let v25 = 4.0;
const v28 = new Date("undefined");
v28.getYear();
v25 **= v25;
const o36 = {
    set d(a32) {
        for (let v33 = 0; v33 < 5; v33++) {
        }
        this["cos"]();
    },
};
class C37 {
    constructor(a39) {
        o36.d = C37;
    }
}
const v41 = new WeakSet();
v41[4] = -8.576381465737261e+307;
new Map();
-11n % -11n;
class C48 {
    e;
    constructor(a50, a51, a52, a53) {
        super[a51] = this;
        const o54 = {
        };
        function f55(a56, a57, a58) {
            let v59 = this;
            function f60(a61) {
                try {
                    Date();
                } catch(e63) {
                }
            }
            v59.onmessage = f60;
            [,v59] = v2;
        }
        const v66 = [a53,v28,"undefined"];
        const o67 = {
            "arguments": v66,
            "type": "function",
        };
        new Worker(f55, o67);
        function f69(a70, a71) {
            return BigInt64Array;
        }
        o54.set = f69;
        function F74() {
            if (!new.target) { throw 'must be called with new'; }
        }
        class C77 extends F74 {
        }
        this[Symbol.match];
        v41[Symbol.asyncIterator];
    }
    [v28];
    #e;
    a;
    #g;
    static {
        this.name = this;
        for (let [i88, i89] = (() => {
                0 | 0;
                return [0, 10];
            })();
            i88 < i89;
            (() => {
                i88 - i88;
                i89++;
                function f95() {
                    return i88;
                }
                f95.g = f95;
                const v96 = [601759695];
                const v97 = [1073741824,1073741823,1376142744,1073741825];
                function f99(a100, a101, a102, a103) {
                    function f105() {
                        return f105;
                    }
                    try { f105.call(v0); } catch (e) {}
                    const v107 = f95();
                    const v109 = new Int8Array();
                    const v110 = v109?.entries;
                    try { new v110(); } catch (e) {}
                    function f112(a113, a114) {
                        return v107;
                    }
                    ~f112();
                    f112();
                    const v118 = v109.buffer;
                    Object.defineProperty(v118, "constructor", { writable: true, configurable: true, value: Date });
                    new Int8Array();
                    let v121 = 1000000000000.0;
                    v121--;
                    v118.slice(2147483648);
                    %OptimizeFunctionOnNextCall(f105);
                    ("find")[1];
                    let v126;
                    try { v126 = v97["find"](..."find", a103, ...v96, ...v97, ...522675525n); } catch (e) {}
                    try { new Symbol(); } catch (e) {}
                    Symbol.for(Symbol("find").description);
                    const v134 = new Uint8ClampedArray();
                    const o135 = {
                        ...v134,
                    };
                    v126 <= a102;
                    return v107;
                }
                for (let v137 = 0; v137 < 10; v137++) {
                    f99();
                }
                i88++;
            })()) {
            i88 + i88;
        }
    }
}
try { C48.bind(Map); } catch (e) {}
