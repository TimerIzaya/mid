function f1() {
}
new Float32Array(260330366);
for (let v5 = 0; v5 < 5; v5++) {
    const o7 = {
    };
    gc(o7);
}
function f9() {
    const v10 = [Infinity,1.0,-1.2272545370579378e+308,-1000000.0,5.0,1.7976931348623157e+308,5.0];
    try {
        const v13 = Array(19793);
        for (const v14 of v13) {
        }
        [v13,v13,v13];
        [[]] >= Uint16Array;
    } catch(e20) {
        [];
        v10.findLastIndex;
    }
    return Math.asin(Math);
}
-20171n % -20171n;
function F29(a31, a32, a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    function f35() {
        return 154;
    }
    class C36 extends f35 {
        constructor(a38) {
        }
    }
}
class C43 {
    f = 16n;
    get g() {
        let v45;
        try {
        const t0 = 16n;
        v45 = t0();
        } catch (e) {}
        16n | v45;
        ("find")[536870888];
        const v49 = ("setInt8")["replaceAll"]("-10", "replaceAll");
        try {
            this.__proto__ = v49;
        } catch(e50) {
        }
        return -24384n;
    }
    static f = -24384n;
}
const v51 = new C43();
v51.f = v51;
const v52 = new C43();
v52.f = v52;
new C43();
255n * 255n;
function f56(a57, a58) {
    const v61 = Array(a57);
    Object.defineProperty(v61, 0, { configurable: true, enumerable: true, get: a57, set: a58 });
    return v61.unshift(3);
}
const t63 = [155533.8602852358,2.0];
t63[658291203] = null;
class C66 {
}
class C71 {
    static ["find"];
    static #e = "-10";
    constructor(a73) {
        super();
        for (let v74 = 0; v74 < 5; v74++) {
            super.valueOf();
        }
    }
}
C71.name = C71;
const v76 = new C71();
function f77(a78, a79, a80) {
    try { a78.propertyIsEnumerable(a79); } catch (e) {}
    a79 - a79;
    const o83 = {
        ...v76,
    };
    o83.e = o83;
    return v76;
}
for (let v84 = 0; v84 < 10; v84++) {
    v84 & v84;
    const v87 = f77(v76, v84, C71)?.constructor;
    try { new v87(); } catch (e) {}
}
const o89 = {
};
const v91 = new Float64Array();
try { v91.entries(); } catch (e) {}
let v93 = -1.5286188982640463e+308;
v93++;
delete v91[v93];
