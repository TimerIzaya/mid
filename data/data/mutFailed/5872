new Uint8ClampedArray(8);
const v5 = new Int8Array(268435456);
const v8 = new Int8Array(9007199254740990);
function f9(a10, a11, a12, a13) {
    const o14 = {
        ...v5,
        "e": Int8Array,
        ...v8,
        "g": a12,
        "f": Uint8ClampedArray,
        "h": a10,
        [a13]: v8,
        "b": a11,
        "a": Int8Array,
        0: a10,
        [9007199254740990]: Uint8ClampedArray,
        [Uint8ClampedArray]: a13,
        "d": 9007199254740990,
        "c": 9007199254740990,
        __proto__: a10,
    };
    return o14;
}
f9(268435456, 8, 8, 8);
f9(268435456, 8, 8, 268435456);
const v17 = f9(268435456, 268435456, 268435456, 8);
function F18(a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a20;
    } catch(e22) {
    }
    const v25 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
    const v26 = [601759695];
    const v27 = [1073741824,1073741823,1376142744,1073741825];
    function f29(a30, a31, a32, a33) {
        function f35() {
            const o52 = {
                "c": -4294967297n,
                [522675525n](a40, a41) {
                    try {
                    } finally {
                    }
                },
                ..."Vre",
                "maxByteLength": -128,
                "c": v26,
                valueOf(a43, a44) {
                    return a32;
                },
                "e": -4294967295,
                "e": -268435456,
                "g": -4294967295,
                "arguments": v25,
                ...v26,
                "type": "Vre",
                ..."Vre",
                valueOf(a46, a47) {
                    return a30;
                },
                ..."Vre",
                4: "Vre",
                "c": -268435456,
                "type": "Vre",
                "type": "Vre",
                toString(a49, a50, a51) {
                    return a30;
                },
                5: -4294967295,
                6: -268435456,
            };
            return "Vre";
        }
        f35();
        const v55 = new Int8Array();
        v55.buffer.slice(2147483648);
        %OptimizeFunctionOnNextCall(f35);
        let v60;
        try { v60 = v27["find"](..."find", a33, ...v26, ...v27, ...522675525n); } catch (e) {}
        v60 > a32;
        return arguments;
    }
    for (let v62 = 0; v62 < 5; v62++) {
        f29();
    }
    %PrepareFunctionForOptimization(f29);
    f29();
    %OptimizeFunctionOnNextCall(f29);
    f29();
    try {
        this.f = a20;
    } catch(e66) {
    }
}
new F18(8, 268435456, f9, 268435456, v17);
new F18(9007199254740990, Int8Array);
new F18(268435456, F18);
("128").fontsize();
