class C3 {
    static {
        try { new this(); } catch (e) {}
        function f6(a7) {
            return ("find").blink();
        }
        try { f6.call(f6); } catch (e) {}
        this[Symbol.species] = f6;
        const v14 = Symbol.species;
        this[v14];
        function f16() {
            function f18(a19) {
                new Array(513);
            }
            this.onmessage = f18;
            try { this.indexOf(this, "XvYX", this, this); } catch (e) {}
            const o26 = {
                "maxByteLength": 128,
            };
            const v28 = new SharedArrayBuffer(8, o26);
            new Int16Array(v28);
        }
        let v32 = 10000;
        --C3;
        Math.hypot(C3);
        const v36 = !-1654441189;
        Math.asinh(C3);
        ++v32;
        !v36;
        C3 + v36;
        let v42 = "function";
        const v43 = [];
        const o48 = {
            "arguments": v43,
            ["XvYX"](a45, a46, a47) {
                v42 = a46;
                return "B";
            },
            __proto__: v14,
            "type": v42,
        };
        new Worker(f16, o48);
    }
}
try { new C3(); } catch (e) {}
const v51 = new C3();
const v52 = v51?.propertyIsEnumerable;
try { new v52(0.21220825061835857); } catch (e) {}
new C3();
const v55 = new C3();
-(-9007199254740991);
function f60(a61, a62) {
    const v63 = a62?.constructor;
    try { new v63(); } catch (e) {}
    const o75 = {
        "g": a61,
        ...a62,
        n(a66, a67, a68, a69) {
            try {
                super.o(-268435456n, v55, a62, -268435456n);
            } catch(e74) {
            }
            return a68;
        },
        ...a62,
        "a": -6,
        ...v55,
    };
    return o75;
}
const v76 = f60("B", v51);
v76.a = v76;
f60(v76, "B")[0];
f60("XvYX", v55);
class C80 extends f60 {
    static 2147483647;
    get g() {
        const v83 = Symbol.toPrimitive;
        const o86 = {
            [v83]() {
                try { v83.isSealed(v83, Symbol, -6, this, this); } catch (e) {}
                this[10] -= -6;
                return "B";
            },
        };
        return v51;
    }
    static #f = "B";
    1024;
}
C80.length = C80;
const v87 = new C80();
try { v87.isPrototypeOf(f60); } catch (e) {}
new C80();
new C80();
for (let [i95, i96] = (() => {
        0 >>> 0;
        10 >>> 10;
        return [0, 10];
    })();
    (() => {
        const v97 = i95 < i96;
        !v97;
        return v97;
    })();
    (() => {
        i95 === i95;
        i96--;
        let v104 = BigInt64Array;
        const v105 = new v104(3768);
        const v106 = v104++;
        const v107 = v106 >> v106;
        v107 != v107;
        let o109 = {
        };
        o109.h = o109;
        [,...o109] = v105;
    })()) {
    -i96;
}
