const v2 = new Uint16Array(109);
const v5 = new Uint16Array(256);
const v8 = new Uint8Array(2968);
class C9 {
    constructor(a11, a12) {
        let v13;
        try { v13 = this.getUint16(this, this, a12, 256); } catch (e) {}
        const v14 = new Uint8Array(109, v13, 109);
        return this;
        const v15 = 109 < 109;
        const o19 = {
            n(a17, a18) {
                return v15;
            },
        };
        v14[a11];
        function* f21(a22, a23) {
        }
        const v24 = [1000000000.0];
        for (let v25 = 0; v25 < 25; v25++) {
            v24["p" + v25] = v25;
        }
    }
    static c;
    static #c;
    static valueOf(a29, a30, a31, a32) {
        v8[Uint16Array] %= a32;
        try {
            v5.b = this;
        } catch(e33) {
        }
        return a31;
    }
}
const v35 = v2 >> v5[65537];
C9[10000];
try {
    v5.c = C9;
} catch(e37) {
}
~-4294967295;
new v35();
class C43 {
    toString(a45, a46, a47, a48) {
        function f49(a50) {
        }
        class C51 extends f49 {
            a = -65535n;
        }
        return -2074262259n;
    }
}
const v52 = new C43();
v52 + v52;
const v54 = new C9(2968, C9);
new C9(109, 2968);
new C9(2968, v54);
function F57() {
    if (!new.target) { throw 'must be called with new'; }
}
const v60 = new F57();
const v69 = [-2.220446049250313e-16,-2.220446049250313e-16];
const v70 = [v69];
const v71 = [0.3083488057663979,0.3083488057663979];
v71.push(0.3083488057663979);
class C73 {
    constructor(a75, a76) {
        const v77 = this.__lookupGetter__;
        try { new v77(); } catch (e) {}
        const v80 = ~a76[2];
        function f84(a85, a86, a87, a88) {
            a85.length;
            a87++;
            const o94 = {
                n(a92, a93) {
                    return v80;
                },
                16: v71,
                "e": v71,
                ...v8,
                "arguments": v71,
            };
            return o94;
        }
        f84(v60, Uint8Array, f84);
        for (let v96 = 0; v96 < 625; v96++) {
            v96 >>> v96;
            f84(Uint8Array);
        }
    }
    /*
    constructor(a101, a102, a103) {
        super(a103);
    }
    */
    n(a105, a106) {
        super[-2074262259n] = this;
        const o109 = {
            "maxByteLength": 47,
        };
        SharedArrayBuffer(3, o109);
        new Int8Array();
    }
}
new C73(v69, v69);
const v115 = new C73(v70, v71);
const t106 = v115.constructor;
new t106(604.4479109019192, 0.3083488057663979);
