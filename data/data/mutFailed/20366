const v5 = new Int8Array(3899);
class C10 {
    p(a12) {
        this.g ^= this[8];
    }
}
const o23 = {
    get d() {
        function f19(a20, a21, a22) {
            'use strict';
            return a20;
        }
        return this;
    },
};
new Int8Array(114);
new Uint8Array(-489112826);
function f31(a32, a33, a34, a35) {
    function f36() {
        const o39 = {
            "maxByteLength": 3145,
        };
        const v41 = new SharedArrayBuffer(128, o39);
        new Float32Array(v41);
        const v45 = Math.expm1(a34);
        const v46 = Math.tanh(a35);
        const o47 = {
            [v46]: v45,
        };
        return v5;
    }
    Int8Array();
    eval(a33);
    %OptimizeFunctionOnNextCall(f36);
    return f31;
}
for (let v51 = 0; v51 < 5; v51++) {
    f31(v51, v51);
}
