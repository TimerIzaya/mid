const v4 = new Map();
let v5 = 129;
const v9 = [-34256,[-34256,-34256],-34256];
["string","split",Map,v4,"string"];
v9[-2];
v5 >>> 4294967297;
const v19 = v9 | 12488n;
const v21 = ~(++v5);
-v19;
Math.asin(v5);
class C26 {
    static 166415147 = -682086.146287106;
    [-682086.146287106] = -65537;
    ["bFUZL"];
    a;
    static #b = -65537;
    c;
    9;
    [v21];
    static g;
    static 4178402106;
}
C26[166415147] = C26;
const v27 = new C26();
const v28 = new C26();
v28.bFUZL;
const v30 = new C26();
v30.a;
const v33 = new Date();
const v35 = Promise.reject();
128 == 128;
const v38 = v27.__proto__;
const o41 = {
    "maxByteLength": 536870887,
};
new SharedArrayBuffer();
new Uint8ClampedArray();
try {
    o41.length = 1;
} catch(e50) {
}
Int16Array.from(Int16Array);
new Int16Array(128);
let v54 = 7;
v54--;
Int8Array << v27;
function F58(a60, a61, a62, a63) {
    if (!new.target) { throw 'must be called with new'; }
    const v64 = this.constructor;
    try { new v64(v35, Promise, C26); } catch (e) {}
    a62.bFUZL;
}
const v67 = new F58(v38, v28, v27, v33);
v67?.f;
function f69() {
}
