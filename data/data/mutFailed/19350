function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -65537;
    } catch(e3) {
    }
}
let v4 = new F0();
new F0();
const v6 = new F0();
v6.e = v6;
-1350179304;
const v13 = new Float32Array(4);
try { v13.subarray(1350179304, F0); } catch (e) {}
6 / 6;
const v18 = new Float32Array(6);
const v21 = new Uint32Array(150);
v21[53];
688280732 >>> 688280732;
class C24 extends F0 {
    static #h = v4;
    [46317];
    static {
        try { new this(); } catch (e) {}
        let v27;
        try { v27 = new this(); } catch (e) {}
        v27[46317];
        this.e = this;
        2.5668367980547497 - 2.5668367980547497;
        const v33 = Math.acos(F0);
        v33 ^ v33;
        const v35 = v4--;
        v35 | v35;
        F0++;
        ~F0;
        const v39 = ~-8;
        v39 - v39;
        super.h = this;
        const v41 = [1000,562132534,0,-16];
        v41.length = v41;
        const v42 = [4294967295,-2,1660993388,64,4096,64,-534329936,128,-23735];
        try { v42.copyWithin(v18, v18); } catch (e) {}
        const v44 = [9007199254740991,1,0,-1968215849,10167,12,-1,-2027716066,5];
        try { v44.flatMap(v41); } catch (e) {}
    }
    static set d(a47) {
        new Float32Array(4, 4, 688280732);
        try { a47(46317); } catch (e) {}
    }
    1047 = F0;
    d = v4;
    #d = 1350179304;
    b;
}
try { C24.toString(); } catch (e) {}
const v51 = new C24();
v51[46317] = v51;
const v52 = new C24();
v52[46317] = v52;
v52[46317] = v52;
new C24();
function f54() {
    return f54;
}
try { f54.call(Float32Array); } catch (e) {}
try {
    const v56 = f54();
    v56.name = v56;
} catch(e57) {
}
const v59 = Symbol.iterator;
const o68 = {
    [v59]() {
        let v61 = 10;
        const o67 = {
            next() {
                v61--;
                const v65 = v61 == 0;
                const o66 = {
                    "done": v65,
                    "value": v61,
                };
                return o66;
            },
        };
        return o67;
    },
};
o68.h = o68;
try { f54(); } catch (e) {}
for (let v70 = 0; v70 < 25; v70++) {
    v70--;
    ~v70;
}
let v73 = 0.44967380041772886;
v73--;
b = v73 || f54;
