new Uint32Array(166);
class C6 {
}
const v7 = new C6();
function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    a11--;
    const v13 = a10?.constructor;
    v13.MAX_SAFE_INTEGER;
    new v13();
    const v16 = this.constructor;
    try { v16(a10, v7); } catch (e) {}
}
new F8(14, 2415);
new Uint32Array(14);
function f20() {
    do {
    } while (0 < 9)
    return f20;
}
const v29 = new Uint8Array(166);
class C31 extends Int8Array {
}
const v34 = ("getPrototypeOf").blink();
const t23 = v29.getPrototypeOf;
const v36 = new t23();
const t26 = v36.constructor;
const v38 = new t26(v34, C31, 4);
v38.getPrototypeOf;
let v42 = 0.0;
class C43 {
    #a = "9";
    65536;
    static h = v42;
    constructor(a45, a46) {
    }
}
class C47 {
    #e = C43;
    valueOf(a49, a50, a51) {
        super.f;
    }
    constructor(a54, a55, a56) {
        v42 **= v42;
        try {
        } catch(e57) {
        }
    }
}
for (let v60 = 0; v60 < 5; v60++) {
    const o64 = {
        set b(a62) {
            this.b;
        },
    };
    o64.b = o64;
    const o65 = {
    };
    for (const v66 in "263541015") {
    }
    Array(12, -10);
    o64.b = o64;
}
