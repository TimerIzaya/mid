const v5 = new Array(102);
const v6 = ["stringify"];
const v7 = [v5,"compile"];
const v8 = [v7,v7,v7,v7];
const o9 = {
};
try {
    o9.f = "compile";
} catch(e10) {
}
try {
    const o11 = {
    };
    o11.f = "compile";
    o11.c = v8;
} catch(e12) {
}
try {
    const o13 = {
    };
    o13.f = "compile";
    o13.c = v8;
    o13.g = Array;
} catch(e14) {
}
try {
    const o15 = {
    };
    o15.f = "compile";
    o15.c = v8;
    o15.g = v5;
} catch(e16) {
}
v8[3];
class C18 {
    #a = v7;
    static 3 = v7;
    static toString(a20, a21, a22) {
        let v23;
        try { v23 = new a22(v8, v5, v5, v5, a20); } catch (e) {}
        const o24 = {
        };
        try {
            o24.f = C18;
        } catch(e25) {
        }
        try {
            const o26 = {
            };
            o26.f = C18;
            o26.g = v23;
        } catch(e27) {
        }
        try {
            const o28 = {
            };
            o28.f = C18;
            o28.g = v23;
            o28.e = 102;
        } catch(e29) {
        }
        try {
            const o30 = {
            };
            o30.f = C18;
            o30.g = v23;
            o30.e = v8;
        } catch(e31) {
        }
        const t69 = "stringify";
        t69.length >>= 102;
        let v34 = 0.8598829425491886;
        const v36 = 8 ^ +v6;
        Math.cbrt(v6);
        a20--;
        8 - 8;
        v6 ^ v36;
        v34++;
        return a20;
    }
}
const v42 = new C18();
const v43 = v42?.constructor;
try { new v43(); } catch (e) {}
const v45 = new v6();
const v46 = new C18();
const v47 = v45?.constructor;
try { new v47(); } catch (e) {}
try { new Int8Array(Int8Array, v5, v6); } catch (e) {}
const v52 = new Int8Array(5);
v52.g = v52;
try { new Int8Array(v46, v46, v46); } catch (e) {}
let v56 = 127;
v56--;
try { new BigUint64Array(C18, v6, v6); } catch (e) {}
const v60 = new BigUint64Array(v56);
141276884 >> 141276884;
BigInt64Array.b = BigInt64Array;
try { new Uint8Array(Uint8Array, BigUint64Array, BigUint64Array); } catch (e) {}
v52[v60];
Math.sin();
324308659 + 324308659;
