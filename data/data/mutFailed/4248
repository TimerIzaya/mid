const t0 = "-10244";
t0.f = "-10244";
try {
} catch(e3) {
}
const t5 = 1.7976931348623157e+308;
new t5();
class C5 {
    set h(a7) {
        ({"length":a7,} = "-10244");
        a7 === this;
    }
    [1.7976931348623157e+308] = -536870912;
    static [-536870912];
    static [-536870912];
    constructor(a10) {
        typeof arguments;
    }
    static #c = "-10244";
    p(a15, a16) {
        const t20 = a16?.[12];
        t20[7] ||= -536870912;
        const v18 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
        function f19() {
            try {
                v18.forEach();
            } catch(e21) {
            }
            const v23 = Symbol.toPrimitive;
            const v24 = v23.description;
            try { v24.link(v24, v24, f19); } catch (e) {}
            Symbol.for();
            return v23;
        }
        const v29 = super.g;
        try { a15(v29, C5, v29, a16, 1.7976931348623157e+308); } catch (e) {}
        Math.tan(v29);
        this.constructor;
        new Uint8ClampedArray(([127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649]).toSpliced(10, 10));
        Math.imul(-268435456, v29 / v29) << -268435456;
        const v43 = /a\w/gudsy;
        const v44 = /ka{0}/guims;
        class C45 {
        }
        const v46 = new C45();
        const v47 = new C45();
        const o48 = {
            ...v44,
            "d": v47,
            "c": -536870912,
            "g": -536870912,
            "f": C5,
            "a": v46,
            7: C45,
            __proto__: C45,
            "e": v44,
            "b": v43,
        };
        return o48;
        return -1000.0;
    }
}
const v50 = new C5();
for (let v51 = 0; v51 < 32; v51++) {
    v50["p" + v51] = v51;
}
const v54 = new C5();
const v55 = new C5();
const v56 = [-536870912,C5,C5,v54,v54];
const v57 = [v50,v56,v56];
const v58 = [v57,v57,v57,C5];
function F59(a61, a62, a63, a64) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a61;
    } catch(e65) {
    }
    try {
        this.d = a64;
    } catch(e66) {
    }
    try {
        this.g = a61;
    } catch(e67) {
    }
}
new F59(v50, v56, v58, v55);
const v69 = new F59(v50, v56, v57, v57);
new F59(v55, v56, v57, v50);
function F71(a73, a74, a75, a76) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a73;
    } catch(e77) {
    }
}
const v78 = new F71(v50, v69, v50, v58);
new F71(v55, v78, v54, v56);
new F71(v54, "-10244", v50, v58);
function f81() {
    return f81;
}
f81 <= 8n;
