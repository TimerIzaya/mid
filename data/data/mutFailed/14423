function f0() {
    const o33 = {
        "h": -3.0,
        "e": "J",
        valueOf(a5, a6) {
            return this;
        },
        "execution": "J",
        "g": -3.0,
        [-29132](a8, a9) {
            const o12 = {
                "maxByteLength": 536870888,
            };
            const v14 = new ArrayBuffer(3292, o12);
            new Uint8Array();
            function f20() {
                return 2720;
            }
            function F21(a23, a24) {
                if (!new.target) { throw 'must be called with new'; }
                a23 * a23;
                const v26 = this.constructor;
                try { new v26(a23, 256); } catch (e) {}
                -a23;
                a24--;
            }
            new F21(65537, f20);
            new Float32Array(v14);
            return "J";
        },
        "f": "J",
    };
    return o33;
}
const v34 = f0();
let v35 = f0();
class C36 {
}
const v39 = new Float64Array(216);
new Uint8Array(v39);
let v42 = f0();
class C43 extends f0 {
    static d;
    o(a45) {
        let v44 = this;
        f0();
        ({"d":v44,"f":v35,...v42} = a45);
        throw v35 != a45 ? v35 : a45;
        return f0;
    }
    static #f;
    m(a50, a51) {
        a50 != v34 ? a50 : v34;
        try {
            this.#f;
        } catch(e55) {
        }
        return v34;
    }
}
const v56 = new C43();
const v57 = new C43();
const v58 = new C43();
v58.f;
function F60(a62, a63, a64, a65) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "f", { configurable: true, value: v58 });
    a63.f;
    a64.e;
    a65.h = a65;
    try {
        this.f = a63;
    } catch(e68) {
    }
    try {
        this.b = a64;
    } catch(e69) {
    }
    try {
        this.h = a62;
    } catch(e70) {
    }
}
new v35(30492);
function F73(a75, a76) {
    if (!new.target) { throw 'must be called with new'; }
    const o82 = {
        set d(a78) {
            this.cos = a78;
            for (let v79 = 0; v79 < 25; v79++) {
            }
            try { this["cos"](); } catch (e) {}
        },
    };
    class C83 {
        constructor(a85) {
            o82.d = a85;
        }
    }
    new C83();
}
new F60(v58, v56, v57, v57);
new F60(v58, v58, v57, v58);
const v89 = new F60(v58, v34, v58, v57);
let v93 = -9007199254740992n;
v93--;
function f95() {
    function f96() {
    }
    f96.toString = f96;
    v89[Symbol.toPrimitive] = f96;
    const v99 = [];
    const v100 = /a\w/gudsy;
    const v101 = /ka{0}/guims;
    class C102 {
    }
    function f103(a104, a105) {
        const o109 = {
            ...v101,
            "d": v99,
            next() {
            },
            "type": "4",
            valueOf(a108) {
                return 30492;
            },
            "c": a105,
            "g": a105,
            "f": a104,
            "a": a105,
            7: C102,
            __proto__: C102,
            "e": v101,
            "b": v100,
        };
    }
    return v93;
}
function f110(a111, a112, a113, a114) {
    const v117 = ("Vre").charAt(a113)[0];
    v117.trim(a112, v117, f110, v117, a112);
    return v117;
}
f110();
f95.length;
%PrepareFunctionForOptimization(f95);
f95();
%OptimizeFunctionOnNextCall(f95);
const v122 = f95();
v122 ^ v122;
