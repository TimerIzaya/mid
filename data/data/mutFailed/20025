function f0() {
}
785227.8672698 + 785227.8672698;
function f5(a6) {
    a6 | a6;
    const o22 = {
        "b": a6,
        set MAX_SAFE_INTEGER(a9) {
            ("d")[this];
        },
        "g": 785227.8672698,
        get d() {
            super.f = 104625.18576068059;
            /m?/gvi;
            const v16 = /J/gvdim;
            /(?=a){0,10}a/gd;
            const v18 = f0(a6, v16, f0);
            %PrepareFunctionForOptimization(f0);
            const v19 = f0(v18, v18, a6);
            f0();
            %OptimizeMaglevOnNextCall(f0);
            return f0(v19);
        },
    };
    function f23() {
        return f5;
    }
    function f24(a25) {
        try { a25.raw(a25); } catch (e) {}
    }
    Object.defineProperty(o22, Symbol.toPrimitive, { writable: true, configurable: true, get: f23, set: f24 });
    return o22;
}
f5.caller;
const v30 = f5(104625.18576068059);
v30[Symbol.toPrimitive] = f0;
const v33 = f5(104625.18576068059);
function f34(a35) {
    class C37 {
    }
    const v38 = new C37();
    const v40 = new Float32Array(v38, "nt", Float32Array);
    const t42 = "nt";
    const v41 = delete t42[v40];
    let v42;
    try { v42 = v38.floor(v41); } catch (e) {}
    for (const v43 in v42) {
    }
}
Object.defineProperty(v33, Symbol.toPrimitive, { writable: true, configurable: true, enumerable: true, set: f34 });
v33[Symbol.toPrimitive] = f0;
v33[v30];
try { Uint16Array.bind(2.0); } catch (e) {}
const v52 = new Uint16Array(214);
try { v52.join(v33); } catch (e) {}
Int32Array.name;
new Int32Array(1342);
new Int8Array(64);
f5(104625.18576068059);
class C62 {
    p(a64, a65, a66, a67) {
        try {
            new f0();
        } catch(e69) {
        }
        return 104625.18576068059;
    }
    static [v33];
    #f;
    9;
    [v33];
    static #c = 2.0;
    64;
}
new C62();
const v71 = new C62();
new C62(f5);
class C73 {
    #a = f0;
    static #n(a75, a76, a77, a78) {
        try {
            this.#a = this;
        } catch(e79) {
        }
        try {
            new f5(-9.898593877836486);
        } catch(e82) {
        }
        return v71;
    }
}
try { new C73(); } catch (e) {}
const v84 = new C73();
v84.constructor = f5;
const v85 = v84?.constructor;
try { new v85(); } catch (e) {}
const v87 = new C73(v33);
const v88 = v87?.constructor;
try { new v88(); } catch (e) {}
new C73();
try { ("128").fixed(); } catch (e) {}
const v93 = ("128").fontsize();
try { v93.toLocaleUpperCase(); } catch (e) {}
