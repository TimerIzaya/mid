const v0 = [];
const v1 = [v0];
const v2 = [v0,v0,v0,v0,v1];
[v0,v2,v1,v2];
268435441 >>> 268435441;
1722105946 >> 1722105946;
[-34,536870887,268435440,14525];
const v13 = [6,127,-128,13,65537,-13];
[-536870912,-4608,-9223372036854775808,15];
let v16;
try { v16 = ("object").substring(v13, "object"); } catch (e) {}
try { v16.fixed(); } catch (e) {}
try { ("has").matchAll("object"); } catch (e) {}
"object" / 2;
new Int8Array(2);
v16[1];
2 & 8;
let v28 = Int16Array;
const t18 = 1722105946;
new t18(8);
Uint16Array.e = Uint16Array;
const v33 = new Uint16Array(3225);
const v34 = v33[877];
v34 % v34;
for (const v36 of v33) {
    v28--;
    v36 ^ v36;
    v36[3] = 5n;
    const v40 = 9007199254740991 * v36;
    v40 | v40;
}
const v44 = new Int32Array(23);
const v45 = v44[1];
let v47 = 317008.8127941969;
v47++;
const v50 = 1000000.0 >>> Uint16Array;
const v51 = [7,128];
const v52 = [13,-2103725161,15240,-9223372036854775807,1077763702,256,-1024,9,1073741823,-2];
let v53 = v52[4];
const v54 = v52[4];
~v54;
const v56 = v54 | v54;
const v57 = v56 / v56;
v57 >>> v57;
const v59 = [40213,422333454,47387,65536,-51830];
v59[2] = v59;
0 != 0;
0 - 0;
575892449 - 0;
v53--;
let v70;
try { v70 = gc(); } catch (e) {}
gc();
const v73 = new BigInt64Array();
let v74;
try { v74 = v73.entries(); } catch (e) {}
try { v74.next(); } catch (e) {}
try { ("boolean").slice(v33, v16); } catch (e) {}
let v78;
try { v78 = ("boolean").repeat(1000000.0); } catch (e) {}
try { v78.toWellFormed(); } catch (e) {}
v78[1322328];
const t61 = "toString";
t61[6] = "toString";
Uint16Array == "toString";
("boolean").split("toString");
-256 * -256;
("boolean" >> -256) ^ -2;
function f88(a89, a90) {
    a89 >>> a89;
    a90 - a90;
    const v93 = a90++;
    v93 >>> v93;
    const v95 = a90--;
    ~v95;
    const v97 = v95 | v95;
    v97 | v97;
    const v99 = a89 | a89;
    v99 / v99;
    const o114 = {
        "c": 15135,
        "a": 15135,
        "d": a89,
        __proto__: a90,
        "g": v50,
        "type": "boolean",
        "a": a89,
        set b(a102) {
        },
        "g": 15135,
        "b": a90,
        get f() {
            super[1000000.0] = this;
            try {
                new Int8Array(9);
                function f107() {
                    return f107;
                }
                const o109 = {
                    [f107]() {
                    },
                };
                [o109];
                v52.copyWithin(v45, -268435456, -256);
            } catch(e113) {
            }
            return this;
        },
    };
    o114.g = o114;
    return o114;
}
let v115;
try { v115 = f88(15135, v50); } catch (e) {}
v115.b;
v115[1000000];
v70(925.1427495594241, v51).b;
f88(v47, -4);
f88(1000000.0, v52).b;
-268435441n;
268435441n ^ 268435441n;
268435441n - 268435441n;
BigUint64Array.b = BigUint64Array;
const v128 = new BigUint64Array();
try { Int32Array.entries(); } catch (e) {}
v128[2445191368] = v0;
