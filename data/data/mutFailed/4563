const v0 = [-2.2250738585072014e-308,2.2250738585072014e-308];
function f1(a2, a3) {
    function F4(a6, a7) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.g = a6;
        } catch(e8) {
        }
        try {
            this.h = a6;
        } catch(e9) {
        }
    }
    const v10 = new F4(F4, v0);
    new F4(a3, v10);
    new F4(v0, v10);
    return v0;
}
Object.defineProperty(v0, "toString", { writable: true, configurable: true, enumerable: true, value: f1 });
const v13 = [1000000.0,-42861.46207383415];
function f14(a15) {
    65537 == 4096n;
    return f1;
}
v13.valueOf = f14;
const v19 = [-2.1165693837264588,-0.0];
function f20(a21) {
    const o27 = {
        "b": v0,
        [v0](a23, a24) {
            a24[this];
            v13 >>> a23;
            return v13;
        },
        [-1]: v19,
        "f": v0,
        65535: v13,
        __proto__: v13,
        "d": v0,
    };
    try { o27.flat(); } catch (e) {}
    return o27;
}
const v29 = f20(v0);
try { v29.copyWithin(v13, v13); } catch (e) {}
const v31 = f20(v19);
v31[65535] = v31;
const v32 = f20(v13);
v32.toString = f14;
class C33 extends f20 {
    set e(a35) {
    }
    #c = v0;
    #d;
    static c = v29;
    1073741823 = f20;
    [v32];
    [v19] = v0;
}
const v39 = C33.name;
new C33();
const v41 = new C33();
v41[1];
new C33();
const v44 = [-4294967295];
function F45() {
    if (!new.target) { throw 'must be called with new'; }
    function f47(a48, a49) {
        new Uint8ClampedArray(5);
        return a49;
    }
    this.constructor = f47;
    const v53 = this?.constructor;
    try { new v53(); } catch (e) {}
}
const v55 = new F45();
v55.length = v39;
v55.length;
const v57 = new F45();
let v60 = -1e-15;
Math.atan2(v60++, -175950080);
const o64 = {
    "h": v57,
    6: v57,
    128: undefined,
    "e": v44,
    "e": v55,
};
