function f0() {
    const o6 = {
        "c": "ACf",
        get d() {
            try {
                const t5 = "ACf";
                t5.__proto__ = this;
            } catch(e5) {
            }
            return this;
        },
        "b": "-4",
        "d": "-4",
        ..."ACf",
        1200: "-4",
        "f": 6.824584826722319,
    };
    o6.fuck = f0;
    return o6;
}
const v7 = f0();
let v8 = f0();
const v9 = f0();
v9.fuck = f0;
let v10 = -1026698264;
let v11 = 0;
while (v11 < 7) {
    try {
        v9.fuck("boolean", v8, "boolean");
    } catch(e16) {
    }
    v11++;
}
-9 + -9;
-1024 > -1024;
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    a24.d = v7;
    this.b = a24;
    try { this.constructor(F22, this); } catch (e) {}
    a24[1];
    try {
        this.b = -9;
    } catch(e28) {
    }
}
F22.name;
const v30 = new F22(v9, v10);
v30.d = v9;
v30[1] = v30;
const v31 = v30.b;
const v32 = new F22(v30, -1024);
v32[Symbol.toPrimitive] = f0;
const v35 = new F22(v30, -9);
v35.g = v31;
class C36 {
    constructor(a38, a39, a40, a41) {
        const v43 = Symbol.toPrimitive;
        a38[v43] = f0;
        a41.d = v43;
        a41.d = a41;
        const v44 = /Pb/gm;
        const v45 = /d0xyz?/vdy;
        function f46(a47, a48) {
            a47 ||= v44;
            return v44;
        }
        v45.toString = f46;
        try { v45.toString(); } catch (e) {}
        let v53 = /a\WQ\xed\xa0\x80UCp((\xed\xa0\x80))\x02?/gums;
        ({"b":v53,"g":v8,} = v35);
        super.b;
        v10 **= a38;
    }
    [-1024] = v30;
    #c = v30;
    h;
    255;
    2;
}
C36.toString = Symbol;
C36.valueOf = f0;
C36.prototype = C36;
const v55 = new C36(v32, v35, -9, v7);
const v56 = new C36(-1024, v30, -1024, v30);
v56[255];
new C36(C36, v32, v56, v30);
const v59 = [-599.310060923955,1000000.0,-9.460648890677907];
[2.0,556.2622738010164,-1e-15,249331.33231149008,0.21855077137819667,1.7976931348623157e+308,1.014925745350093e+308];
const v63 = -525.1582304247171 | -525.1582304247171;
const v68 = 1.6396588729884893 ^ 1.6396588729884893;
function F69(a71, a72) {
    if (!new.target) { throw 'must be called with new'; }
    function f73() {
        try { a71.valueOf(this, a72, v63, v35, v7); } catch (e) {}
        try { a71(-1024, C36, v68, a72, v63); } catch (e) {}
        return v32;
    }
    this.constructor = f73;
    a72.valueOf = f0;
    try { this.constructor(-9, v55); } catch (e) {}
    -a72;
}
F69.d = F69;
const v78 = new F69(-525.1582304247171, 1000.0);
let v79 = new F69(-6.427538385859785, -719.6662441520621);
function f80(a81) {
    let v82;
    try { v82 = a81(v8, v11, a81, a81); } catch (e) {}
    try { v82(-719.6662441520621); } catch (e) {}
    return v59;
}
v79.constructor = f80;
const v84 = v79?.constructor;
try { new v84(F69, F69); } catch (e) {}
v79 = v78;
const o89 = {
    "execution": "async",
    "type": "major",
};
gc();
-719.6662441520621 !== o89 ? -719.6662441520621 : o89;
