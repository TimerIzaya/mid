const v1 = new WeakSet();
const v2 = [-8,536870888];
const v3 = [9007199254740992,-1337,61121,-1533779859,-1522288742,132668875];
const v4 = [-2147483647,16,-1312437478,-5];
class C5 extends WeakSet {
    7 = v4;
    constructor(a7) {
        super(v3);
        v1.d;
        let v9;
        try { v9 = v2.pop(); } catch (e) {}
        for (let v10 = 0; v10 < 32; v10++) {
            v9["p" + v10] = v10;
        }
    }
}
new C5(v4);
new C5(v4);
new C5(v4);
const v18 = new Uint8ClampedArray(3202);
const v21 = new Int8Array(255);
class C24 extends v18.constructor {
    1547485357;
    static [v21];
}
const v25 = new C24();
new Uint8ClampedArray(3338);
for (let v28 = 0; v28 < 5; v28++) {
    function f29(a30, a31, a32, a33) {
        return v28;
    }
    const v34 = f29(v28, f29, v28, v28);
    const v36 = [601759695];
    const v37 = [1073741824,1073741823,1376142744,1073741825];
    function f39(a40, a41, a42, a43) {
        const v45 = arguments.toString();
        function f46() {
            const v48 = ("Vre")?.toLocaleUpperCase;
            try { v48(); } catch (e) {}
            try { ("Vre").fixed(); } catch (e) {}
            let v51 = -268435456;
            v51--;
            const v53 = v51 + v51;
            try {
                new C5(-1000000000000.0);
            } catch(e56) {
            }
            -v53;
            const o58 = {
                "c": -4294967297n,
                "e": v51,
            };
            return o58;
        }
        f46.length;
        return;
        const v60 = v21[v25];
        try { new v45(v60); } catch (e) {}
        [14];
        [7,1000,1319532449,-536870912,-1109578859];
        [-65536,32844];
        f46();
        const v67 = new Int8Array();
        try { v67.findIndex(v34); } catch (e) {}
        %OptimizeFunctionOnNextCall(f46);
        ("find").strike("find");
        try { v37["find"](..."find", a43, ...v36, ...v37, ...522675525n); } catch (e) {}
    }
    const v72 = f39();
    f39(v72, v34, v72, v28);
    %OptimizeFunctionOnNextCall(f39);
}
