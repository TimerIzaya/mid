const v0 = [-2705,-43660,9223372036854775807,55806,10];
const v1 = [12,4294967297,-12866,1028637768,10,12];
const v2 = [728292771,55927,26879,-65535,5];
function f3() {
    return v2;
}
function F4(a6) {
    if (!new.target) { throw 'must be called with new'; }
    const v7 = this?.constructor;
    try { new v7(a6); } catch (e) {}
    try {
        this.a = a6;
    } catch(e9) {
    }
    try {
        this.g = a6;
    } catch(e10) {
    }
}
const v11 = new F4(v2);
new F4(v1);
new F4(v1);
const v15 = new WeakMap();
try { v15.get(v0); } catch (e) {}
class C20 {
    4;
    constructor() {
        function f22(a23, a24) {
            const o26 = {
                "type": "function",
            };
            return o26;
        }
        this[Symbol.toPrimitive] = f22;
        this.e = this;
        super.f >>= this;
    }
    b = -2.2250738585072014e-308;
    n(a30, a31) {
    }
    2658944561 = -2.2250738585072014e-308;
    static 134;
    #c = -65535;
    static [-2.2250738585072014e-308] = -2.2250738585072014e-308;
}
const v32 = C20?.__lookupSetter__;
try { new v32(v11); } catch (e) {}
const v34 = new C20(2142097854, -2.2250738585072014e-308);
v34[2658944561];
new C20(-2.2250738585072014e-308, v34);
new C20(2142097854, C20);
new WeakMap();
const v42 = new Uint8ClampedArray();
const v43 = v42?.findLast;
try { new v43(v2); } catch (e) {}
Uint8Array.BYTES_PER_ELEMENT = Uint8Array;
const v46 = new Uint8Array(64);
Int32Array.prototype = Int32Array;
const v50 = new Int32Array(v46);
v50[61];
const v53 = new BigInt64Array();
const v54 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
const v55 = [-1.7976931348623157e+308];
try { v55.copyWithin(v54, 64); } catch (e) {}
function f57(a58, a59, a60, a61) {
    try { a60.entries(); } catch (e) {}
    const o67 = {
        toString(a64, a65, a66) {
            return 64;
        },
    };
    function f68() {
        const o72 = {
            [3](a71) {
            },
        };
    }
    try { new f68(); } catch (e) {}
    return a58;
}
f57.caller = f57;
f57(v53, 129, v55).length;
f57(v50, 129, v54);
try { v42(-85357.59116785484, v46); } catch (e) {}
