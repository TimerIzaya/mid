-4;
const v6 = new Int16Array(4);
10 - 10;
let v10;
try { v10 = Infinity.from(v6); } catch (e) {}
const v11 = new Infinity(v10);
const v14 = Float64Array?.constructor;
try { new v14(10); } catch (e) {}
new Float64Array(10);
function F18(a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v22 = [2.0,-1e-15,1.7976931348623157e+308];
        const v25 = new Int16Array(1371);
        v22.flat(536870887);
        v25.lastIndexOf(1371, 536870887, 10);
        const v30 = new Uint8ClampedArray(7);
        v30.length = v30;
        function f31(a32) {
            return f31;
        }
        const v35 = [v30];
        const o36 = {
            "arguments": v35,
            "type": "function",
        };
        Worker(f31, o36);
    } catch(e38) {
    }
}
const v39 = new F18();
const v40 = v39?.constructor;
try { new v40(-4294967296, v11); } catch (e) {}
