const v3 = [-111.89894237867827,-1.7976931348623157e+308,-1.7976931348623157e+308];
const v4 = [Infinity,Infinity,v3,-1.7976931348623157e+308];
[-111.89894237867827,-1.7976931348623157e+308,-1.7976931348623157e+308];
class C9 {
    a = Infinity;
    static get d() {
        try { new this(-111.89894237867827); } catch (e) {}
        try {
            v4.flat(-10698);
        } catch(e14) {
        }
        return v3;
    }
    1;
    268435441 = 4294967296;
}
new C9();
new C9();
new C9();
const v19 = new Set();
function F20(a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -1692683933;
    } catch(e24) {
        for (let [v25,v26] of a22) {
            try {
            } catch(e27) {
            }
        }
    }
    try {
    } catch(e28) {
    }
    const v29 = v19[this];
    try {
        new F20(v29);
    } catch(e31) {
    }
}
new F20();
const v33 = [65537,268435441,63298,-5,1235122603];
const v34 = [128,215394418];
v34.entries();
function F36(a38, a39, a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
}
const v42 = new F36();
const v44 = new F36();
(13).trimStart();
v3[3];
let v55;
try { v55 = v44(); } catch (e) {}
v33[v55] = v34;
~0;
v42.__proto__;
-35417 - -35417;
