const v2 = new Float64Array(3291);
const v5 = new Int16Array(3);
const v6 = [-43861,-1,-4096,128,-47746,9];
const v7 = [127];
const v8 = [0,268435441,-12097];
delete v7?.length;
v8[128];
const v13 = new BigInt64Array(3329);
function F14(a16, a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a17;
    } catch(e20) {
    }
    try {
        function f21(a22, a23) {
            function f25(a26) {
                try {
                    this.d = v5;
                } catch(e27) {
                }
            }
            this.onmessage = f25;
            v2[7];
        }
        const v31 = [v13,"function"];
        const o32 = {
            "arguments": v31,
            "type": "function",
        };
        new Worker(f21, o32);
        this.h = v13;
    } catch(e34) {
    }
    try {
        const v37 = Float64Array.of();
        const v39 = new Date(Date);
        v39.setFullYear(v37, 3811);
        this.e = a18;
    } catch(e41) {
    }
}
new F14(3, 3329, 3329, 3291);
new F14(3291, 3291, 3, 3);
new F14(v6, 3291, 3291, 3);
const o45 = {
};
function f46(a47, a48) {
    const o49 = {
    };
    return Int16Array;
}
const v50 = f46();
const v51 = v13();
function F52(a54, a55) {
    if (!new.target) { throw 'must be called with new'; }
    a54.g = a54;
    const v56 = this?.constructor;
    try { new v56(f46, v50); } catch (e) {}
}
new F52(o45);
new F52(v51);
