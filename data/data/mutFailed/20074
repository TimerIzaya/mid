const v0 = [1.1885564552092664e+308,1.0,0.9990618750460565,864.6311225256372,-1000000.0,-1000.0,-2.2250738585072014e-308,-1000000.0,1000000.0,-2.220446049250313e-16];
const v1 = [9.67594229565212e+307,1.3576631959898096e+308,-80422.04940212553,-1000000000000.0];
const v2 = [-1000000000.0,0.6956100649930831,0.06775056143525093,-2.220446049250313e-16,1000.0,0.26467876982736693,-1.7976931348623157e+308];
const v3 = [-1024,-4294967295];
const v4 = [43045,-58758,-32084,2147483648,-4096];
const v5 = [-65536,129,-492414916,50138,-16913];
/\u{12345}/gviy;
const v7 = /(C)/udisy;
const v8 = /J(?<!a)/gvimsy;
const v9 = [v4,v8,v8];
const v10 = [v0,v1,v5,v3,v4];
const v11 = [v10,v5,v2,v9];
function f12(a13, a14) {
    const o20 = {
        ...v10,
        "d": v11,
        "c": v0,
        3: v3,
        ...v10,
        [a14]: a14,
        "f": a13,
        [v9]: v0,
        [v8](a16, a17) {
            if (this !== this) {
                super[a13] = a14;
            } else {
                try { a14.p(); } catch (e) {}
            }
            return a17;
        },
    };
    return o20;
}
f12(v5, v7);
f12(v3, v7);
f12(v5, v8);
function F25(a27, a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
}
const v31 = new F25(164140152, F25, 164140152, 164140152);
for (let v33 = 0; v33 < 5; v33++) {
    function f34() {
        const v37 = ("Vre").strike().link();
        v37.includes(164140152);
        const v40 = Array();
        v40.unshift(v31, v33, F25, "Vre", v40.pop());
        const t45 = 522675525n;
        const v44 = new t45();
        v44.add().entries();
        class C47 {
        }
        const v48 = new C47();
        v48.hasOwnProperty(v37);
    }
    f34();
    %OptimizeFunctionOnNextCall(f34);
}
