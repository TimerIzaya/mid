let v2 = "-1";
class C3 {
    static get h() {
        new Int16Array(3);
        new BigInt64Array(257);
        new Int16Array(64);
        return 64;
    }
    e = -6506;
    1 = -128;
}
const v14 = new C3();
const v15 = new C3();
try { C3(v14, v14, ...v2, v2); } catch (e) {}
let v19 = -1901009050;
({"e":v2,...v19} = v15);
const v20 = new C3();
const v21 = [331.1300972689671,-393.5172069068109,-270828.2895613649];
const v22 = [-1.0,3.0,0.7567376031056181];
[4.0,888117.3323688302,1e-15,-1000000.0,-2.220446049250313e-16,8.965213605344347e+307];
class C24 {
    g = v20;
    static #b = -6506;
    constructor(a26, a27, a28, a29) {
        v22["map"](a29);
    }
    static #n(a33, a34, a35) {
        for (let i38 = 0, i39 = 10; i38 < i39; i38++, i39--) {
            delete v14[i38];
            (1452792518 + 1452792518) - a33++;
        }
        return C3;
    }
}
new C24(C24, v22, v20, v21);
new C24(v14, v21, v20, v22);
new C24(v20, v21, v15, v2);
const v57 = new BigUint64Array();
for (const v58 of v57) {
}
for (let i = 0; i < 5; i++) {
    const o60 = {
    };
    gc(o60);
}
