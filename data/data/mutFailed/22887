let v4 = -13;
v4++;
class C7 {
    constructor(a9, a10, a11) {
        a9 >>> a9;
        10000n ^ 10000n;
    }
    #valueOf(a18, a19, a20) {
        this[2332] = v4;
        return 4n;
    }
    536870912;
    5 = v4;
}
const v24 = new C7(-1000000000000.0, 536870888, 536870888);
const v25 = v24[536870912];
const v26 = new C7(-1000000000000.0, 536870888, 536870888);
const v27 = v26[536870912];
const v28 = new C7(0.8717930233812873, 536870888, 16);
v28[536870912] = v28;
const v29 = [7,1445324232,40566,-38875,-361741580,-1066334184,14];
const v30 = v29[4];
[-979574602,-65535,67247313,-41207,50137];
const v32 = [4294967296,-1347864399];
Object.defineProperty(v24, v32, { writable: true, value: v26 });
Object.defineProperty(v29, "e", { writable: true, enumerable: true, value: v27 });
v28[v27] -= v4;
try {
    v29.toString = v27;
} catch(e33) {
}
for (let i37 = 0, i38 = 10;
    i37 / i37, i37 < i38;
    (() => {
        i38--;
        const v44 = i38--;
        v44 % v44;
        v44 === v44;
        3768 != 3768;
        let v49 = BigInt64Array;
        const v50 = new v49(3768);
        const v51 = v50[2050];
        const v52 = v49++;
        v52 | v52;
        const v54 = v52 >> v52;
        const v55 = v54 >>> v54;
        let o56 = {
        };
        [,...o56] = v50;
        try { v50.every(v30, o56); } catch (e) {}
        try { v51(v54, v25, v49); } catch (e) {}
        +v29;
        const v62 = -4294967295 % v55;
        v32 - -4294967295;
        const v64 = v32 / v55;
        Math.tan(v32);
        v55 >> v64;
        Math.min(-4294967295);
        Math.clz32(v62);
    })()) {
}
