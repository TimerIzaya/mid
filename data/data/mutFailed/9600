const v2 = new Float32Array(163);
const v5 = new BigInt64Array(167);
new Uint8ClampedArray(4);
const v9 = [-8.046012156146725e+306,-155341.56338130776,1000000000000.0];
const v10 = [-1e-15,3.0,2.0];
const v11 = [-2.0,-Infinity,-959.3478988930655,NaN,154075.64665685943,0.947659516524693,-1.1436342077503824e+308];
class C12 extends BigInt64Array {
    constructor(a14, a15, a16, a17) {
        super(4, 163);
        throw Float32Array;
        v2 << v11;
        new Uint8Array(48);
        new Int32Array(8);
        new Float64Array(257);
    }
}
const v28 = new C12(v10, v5, 163, v11);
new C12(v10, v28, 163, v9);
new C12(v10, 163, 167, v11);
function F33(a35, a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    function F38(a40, a41) {
        if (!new.target) { throw 'must be called with new'; }
        function f42(a43, a44, a45) {
            for (let i = 0; i < 5; i++) {
            }
            try {
                f42(this, a45, a45);
            } catch(e47) {
                function f48(a49, a50) {
                    return a49;
                }
                f48(this, f42);
            }
        }
        f42(a40, a40, F33);
    }
    new F38(F33, this);
}
new F33();
Math.asinh();
Math.sin(3.862600614459211e+307);
