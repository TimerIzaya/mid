function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 4294967296;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
let v7 = /a(?=b)ca+b\xf0\x9f\x92\xa9+/gvdms;
const v8 = /a\fb\nc\rd\te\vf/gvms;
const v9 = /(\u0060)/s;
class C10 {
    constructor(a12, a13, a14) {
        (-1073741824) ** v7;
        v7 % -1073741824;
        --v7;
        Math.exp(-1073741824);
    }
    static g;
    get a() {
        new Date();
        const v27 = new v9();
        Object.defineProperty(v27, 7, { writable: true, configurable: true, enumerable: true, value: Int8Array });
        const o29 = {
            "maxByteLength": 256,
        };
        const v31 = new SharedArrayBuffer(256, o29);
        const v33 = new Int32Array(v31);
        return v33;
    }
}
let v34;
try { v34 = v5(v6, C10, F0, F0); } catch (e) {}
const o35 = {
};
try {
    o35.c = v34;
} catch(e36) {
}
try {
    const o37 = {
    };
    o37.b = v34;
    o37.c = v34;
    o37.b = v34;
} catch(e38) {
}
try {
    const o39 = {
    };
    Object.defineProperty(o39, "c", { writable: true, configurable: true, value: v4 });
    for (let v40 = 0; v40 < 25; v40++) {
    }
    new Uint8Array();
    class C43 {
        set e(a45) {
            const v47 = Symbol.iterator;
            const o53 = {
                [v47]() {
                    let v49 = 10;
                    const o52 = {
                        next() {
                            v49--;
                            return this;
                        },
                    };
                },
            };
        }
    }
    new C43();
    o39.c = v34;
    o39.b = v34;
    o39.d = v34;
} catch(e55) {
}
try {
    const o56 = {
    };
    o56.c = v34;
    o56.b = v34;
    const v59 = new Int8Array(3938);
    let v60 = 3;
    [...v60] = v59;
    o56.d = v4;
} catch(e61) {
}
const v62 = new C10();
const v63 = new C10();
try {
    try {
    } catch(e64) {
    }
    v7?.[1];
    const v67 = [-9.109766292519199,-1.3811947064786667e+308,0.09110445091766706,5.0,-385647.03832885576,0.2888431306471019];
    try { v67.filter(59890n); } catch (e) {}
    new F0();
} catch(e70) {
}
let {"a":v71,} = v62;
const v72 = new C10();
function F73(a75, a76, a77, a78) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = C10;
    } catch(e79) {
    }
}
const v80 = new F73(v8, v9, v63, v4);
new F73(v8, v63, v62, v4);
new F73(v7, v72, v62, v4);
("getBigInt64").normalize();
class C90 extends v80.constructor {
}
new C90();
Reflect.construct(Int8Array, [1126838905]);
