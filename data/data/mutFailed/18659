3n - 3n;
1073741824n & 1073741824n;
function f9() {
    return 1073741824n;
}
[4,64,1000,16,9,12971,24434,7,65535];
const v11 = [10,1853247488,-4,-9223372036854775807,1,14,-10,512,9007199254740991];
function f12() {
    return 3n;
}
function f13(a14) {
    a14?.[a14];
}
Object.defineProperty(v11, "g", { writable: true, configurable: true, enumerable: true, get: f12, set: f13 });
v11.g = v11;
[138630885,-6421,-128,13,-1024616649,5,4294967297,129];
~-4.956510500343844;
let v20 = -8.866233898137906e+307;
v20++;
const v23 = -51320 >> -51320;
v23 >>> v23;
v23 >>> v23;
-9007199254740990 !== -9007199254740990;
-9007199254740990 & -9007199254740990;
39218 % 39218;
function f31() {
    return 39218;
}
const t28 = "pF";
t28.f = "pF";
const v36 = 9007199254740992 >> 9007199254740992;
v36 - v36;
2105444095n & 2105444095n;
const v43 = 2105444095n === 2105444095n;
v43 || v43;
const v46 = -4294967296n | -4294967296n;
v46 | v46;
function f48(a49, a50) {
    const o54 = {
        968: -4294967296n,
        "d": a49,
        [268435439n]: 2105444095n,
        __proto__: -4294967296n,
        valueOf(a52) {
            return 268435439n;
        },
    };
    o54[268435439];
    const v57 = 4 + 4;
    v57 << v57;
    v57 + v57;
    function f61(a62) {
        const o65 = {
            ...65536,
            5: 65536,
            __proto__: a62,
            valueOf(a64) {
            },
            "d": 4,
            "g": 65536,
            163: 4,
        };
        o65[163] = o65;
    }
    try { f61(2105444095n); } catch (e) {}
    try { f61(null); } catch (e) {}
    f61.caller = f61;
    %PrepareFunctionForOptimization(f61);
    f61();
    f61();
    %OptimizeFunctionOnNextCall(f61);
    f61();
    return o54;
}
const v71 = [0.4391347154580403,257.99749453941945,-9.996237582361703,-2.2250738585072014e-308,2.0,0.22007729464719739];
v71[5] = v71;
try { v71.every("-1577518127"); } catch (e) {}
const v73 = [4.884917422719438e+307,-673.270676267643,1.232076168738048e+308,0.8093131303599983,Infinity,-2.220446049250313e-16,1000000000.0,-1.3047792922265835e+308,0.6482773134068259];
try { v73.fill(v73); } catch (e) {}
try { v73.splice(-4294967296n, -9007199254740990); } catch (e) {}
1073741824 % 1073741824;
const v80 = 641819738 < 641819738;
for (let v81 = 0; v81 < 100; v81++) {
    const v82 = f48();
    try { v82.valueOf(v81); } catch (e) {}
}
(268435439n).b;
v71.length;
try { Math.expm1(v80); } catch (e) {}
try { Math.floor(268435439n); } catch (e) {}
36815 >>> 36815;
36815 >>> 36815;
let v94 = 9007199254740990 ** -730.1794399783898;
const v95 = v94--;
v95 === v95;
