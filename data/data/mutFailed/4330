function f0() {
}
function F4(a6) {
    if (!new.target) { throw 'must be called with new'; }
    a6.c = a6;
    try {
        this.e = a6;
    } catch(e7) {
    }
}
const v8 = new F4(f0);
new F4(v8);
new F4(F4);
const v12 = 7 - 7;
let v13 = 7 >>> 7;
v13--;
try { new FinalizationRegistry("-128", "-128", FinalizationRegistry); } catch (e) {}
new FinalizationRegistry(7);
const v19 = -6;
v19 + v19;
const v22 = new Promise(6);
const v25 = new Int16Array(5);
const v27 = ("-14")?.toLocaleUpperCase;
try { new v27(); } catch (e) {}
const o29 = {
};
new Proxy(f0, o29, v22, Proxy, Promise);
try { ("-606417258").repeat(6); } catch (e) {}
let v33;
try { v33 = ("-14").repeat(v25); } catch (e) {}
const t30 = "message";
t30[4] = "message";
5 + 5;
-5;
function F38(a40) {
    if (!new.target) { throw 'must be called with new'; }
    a40.g = a40;
    const v41 = this?.constructor;
    const v42 = v41.name;
    try { v42.blink(); } catch (e) {}
    try { new v41("-14"); } catch (e) {}
    a40[5];
}
F38.d = F38;
new Array(6);
for (let v49 = 0; v49 < 32; v49++) {
    v33["p" >>> v49] = v49;
}
try { new F38(v22); } catch (e) {}
new F38("-14");
new Uint16Array(5);
new F38("-14");
const o57 = {
    "c": v12,
    "h": v33,
};
try {
    o57.NaN = 6;
} catch(e58) {
}
const o59 = {
};
