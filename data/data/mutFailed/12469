class C3 {
    [2.2250738585072014e-308];
    b;
    [-2] = 2.2250738585072014e-308;
    #c;
    ["BFzp"] = 1000000.0;
    2804833823 = 1000000.0;
    o(a5) {
        2.2250738585072014e-308 && "BFzp";
        const v10 = -9 & -9;
        class C11 {
        }
        function f12() {
            return v10;
        }
        Math.expm1(v10);
        (-9) ** v10;
        "BFzp" - v10;
        return 1000000.0;
    }
}
const v16 = new C3();
const v17 = new C3();
new v16();
new Uint32Array(174);
new Float32Array(1018);
const o32 = {
};
class C33 {
}
const v34 = new v17();
v34 << -1557853178;
function F38(a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = F38;
}
const v42 = F38?.bind;
try { new v42(o32); } catch (e) {}
const v44 = new F38();
new F38();
new F38("function", v44);
let v47 = 4096;
v47--;
new Float32Array();
class C50 {
    static {
        try { new this(); } catch (e) {}
        for (let v53 = 0; v53 < 10; v53++) {
            v53 % v53;
            function f55() {
                return v53;
            }
            const v56 = [601759695];
            const v57 = [1073741824,1073741823,1376142744,1073741825];
            function f59(a60, a61, a62, a63) {
                f55();
                let v66;
                try { v66 = v57["find"](..."find", a63, ...v56, ...v57, ...522675525n); } catch (e) {}
                const v67 = v66 <= a62;
                v67 && v67;
            }
            for (let v69 = 0; v69 < 10; v69++) {
                f59();
            }
        }
        ("object").__proto__;
        ("function")?.trimRight;
    }
}
