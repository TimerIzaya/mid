function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -53736;
        function f3() {
            return f3;
        }
        new Float64Array(3);
    } catch(e7) {
        new Uint8Array(481);
        const o13 = {
            get d() {
                return this;
            },
            ["JG3"]: this,
            "c": F0,
        };
        return o13;
    }
    try {
        this.a = -53736;
    } catch(e14) {
    }
}
const v15 = new F0();
const v16 = new F0();
const v17 = new F0();
function f18() {
    new BigUint64Array(3257);
    !0.8843420658768774;
    return v15;
}
class C24 extends f18 {
    valueOf(a26) {
        const v27 = f18();
        try {
            super.all(f18, v17, v27, this);
            const v30 = new Date();
            const v32 = new Set();
            v32.add(v30);
            let [v34,,...v35] = v32;
            v34.toDateString(Set, Set, v34);
        } catch(e37) {
        }
        super.f |= v27;
        this in v17;
        return f18;
    }
    static #d;
    #c = v15;
    static e;
    static 9 = f18;
}
const v39 = [601759695];
const v40 = [1073741824,1073741823,1376142744,1073741825];
function f41(a42, a43, a44, a45) {
    let v47 = 536870887;
    v47++;
    BigUint64Array * v47;
    try { v40["find"](..."find", a45, ...v39, ...v40); } catch (e) {}
    return v40;
}
f41();
const v53 = new C24();
const v54 = new C24();
new C24();
function F56(a58, a59) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a58;
    } catch(e60) {
    }
    try {
        this.g = a59;
    } catch(e61) {
    }
}
new F56(v17, v53);
new F56(v53, v16);
new F56(v54, v53);
[-3.0,0.45659751000498894,-1000000.0,3.0,0.7977175822592876,-1000000000000.0];
[0.32263210525704633,0.9348771008971412];
[174.873066708343,-3.841395818816469e+307,-861085.6233315285,Infinity,1.773022318924495];
function F68(a70, a71, a72, a73) {
    if (!new.target) { throw 'must be called with new'; }
    const v74 = this.constructor;
    let v75;
    try { v75 = new v74(a71); } catch (e) {}
    typeof v75 === "symbol";
}
new F68(F68, F68, F68, F68);
new F68();
