function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 1094596657;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new v4();
const v6 = new v4();
class C7 {
    get b() {
        function f9(a10, a11) {
            new Float32Array(2);
            class C16 {
            }
            new C16();
            function f18(a19) {
                a19[6] = a19;
            }
            function f20(a21, a22) {
                return a21;
            }
            f20 >> -51320;
            this.onmessage = f18;
            try {
                this.c = a11;
                const v26 = new WeakMap();
                function f27(a28, a29) {
                    const v30 = [v26,v26,v26];
                    C7();
                    v26.set(v30);
                    return ([-0.0,0.4808419851382937,521.265446647358,1000.0,1000000000.0,0.342521651011362,100.12242715110574,-1000000.0])[WeakMap](gc);
                }
            } catch(e38) {
            }
        }
        return v6 < Worker;
        class C41 {
            static [v5] = v5;
        }
        const v43 = [Worker,Worker];
        class C45 extends this {
        }
        const o52 = {
            o(a48) {
                const o50 = {
                };
                gc(o50);
                return BigUint64Array;
            },
        };
        o52["o"]();
        const o55 = {
            "arguments": v43,
            "type": "function",
        };
        new Worker(f9, o55);
        return this;
    }
}
new C7();
new C7();
new C7();
new BigInt64Array(257);
new Uint32Array(128);
new BigInt64Array(6);
function F69() {
    if (!new.target) { throw 'must be called with new'; }
}
const v71 = new F69();
const v72 = new F69();
new F69();
let v78;
try { v78 = F0(v71, "number", F69); } catch (e) {}
function f79(a80) {
    return v78;
}
class C81 extends f79 {
    [v72] = "E";
    [v71] = -14n;
    268435441 = -14n;
}
const t83 = "object";
t83[v72] &= v78;
