const v3 = /\p{gc=Nd}?/dis;
/Ofoo(?<!bar)baz\x3z*/dis;
/\P{Any}k[\cz]/um;
try { new Array(Array); } catch (e) {}
64 + 64;
const v10 = new Array(64);
[v3,v10,v3,14n];
const v12 = [Array];
[14n,v12,v12,v10,v12];
try { Uint8Array(64, 64, Array); } catch (e) {}
const v16 = new Uint8Array();
function f17(a18, a19, a20, a21) {
    f17 ^ a20;
    const o29 = {
        "b": a18,
        ...v16,
        valueOf(a24, a25) {
            return this;
        },
        4294967296: 64,
        [Uint8Array]: 64,
        n(a27, a28) {
            return 64;
        },
    };
    o29[4294967296] = o29;
    return f17;
}
9 << 9;
BigInt64Array.g = BigInt64Array;
const v33 = new BigInt64Array(9);
v33[1] = v33;
for (let i36 = 0, i37 = 10;
    (() => {
        const v38 = i36 < i37;
        !v38;
        let v40 = 3375;
        v40--;
        const v43 = new BigUint64Array(v40);
        let v46 = Math.tan(--v40);
        v46--;
        let [v48,,v49,...v50] = v43;
        v48++;
        v49--;
        v48--;
        return v38;
    })();
    i36 >>> i36, i36++) {
}
for (let v60 = 0; v60 < 625; v60++) {
    f17();
}
