class C3 {
    constructor(a5, a6) {
        try { a5(this, 0.5657519027162825, "p", -1000000.0, a5); } catch (e) {}
    }
    static get a() {
        this[16] = this;
        const t6 = "p";
        const v9 = delete t6?.length;
        v9.f ^= -1000000.0;
        %VerifyType(0.5657519027162825);
        return v9;
    }
}
new C3(-1000000.0, -1000000.0, C3, C3, 0.5657519027162825);
const v11 = new C3(0.5657519027162825, "p");
const v12 = new C3(-1000000.0, v11);
[36821,5,9007199254740992,-1766,1073741824,-5362,1000];
[-7,12,65535,268435440,6,47920,7,-357962245,-1586128152,268435439];
[-6,6,-2,-318850900,536870888,-554515361,-1903823041,1871417127];
let v17 = 0.0;
class C19 {
    #a = "9";
    65536;
    static h = v17;
    constructor(a21, a22) {
    }
}
const o28 = {
    "execution": "minor",
    "type": "minor",
};
const v29 = gc();
const v30 = new v12();
const v31 = new C19(0.5657519027162825, v30);
class C32 {
    #e = v12;
    valueOf(a34, a35, a36) {
        super.f;
    }
    constructor(a39, a40, a41) {
        v17 **= v17;
        try {
        } catch(e42) {
        }
    }
}
const v43 = new C32("boolean", v31);
const v44 = new C32("boolean", v43, "9", "p");
const v45 = new C32(v44, C19, v30);
class C46 {
    p(a48, a49) {
        super[v29];
        try {
            v45[a48];
        } catch(e52) {
            function F53(a55, a56, a57, a58) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.e = C32;
                } catch(e59) {
                }
                try {
                    this.b = v12;
                } catch(e60) {
                }
                try {
                } catch(e61) {
                }
            }
        } finally {
            [] = "boolean";
        }
    }
}
for (const v62 of v29) {
}
