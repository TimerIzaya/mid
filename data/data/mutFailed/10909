const v0 = [];
new Int16Array(129);
2 >> 2;
const v7 = new Int32Array(2);
const v10 = new Uint32Array(257);
v10[197];
[-234056.88589442568,2.3097532444775197,5.437863443489823,1000.0,-1000000.0,755770.4556241191,2.0,-5.0,-1000.0,1000000.0];
[6.849445440013504,-3.0,-8.755221569562037];
[0.0,-668933.105822023,-1.5873523918398048e+308,1000.0,-1000000.0,-1000000.0,1000000.0];
const v15 = [65536];
try { v15.sort(257); } catch (e) {}
const v17 = [-694,-6,1073741824,-14,3,11,3,-7,5,-1214514770];
const v18 = [1073741824,-7,-1283755539,-726309105,10,13,-4294967295,12,512,40630];
const v19 = [];
try { v19.groupToMap(v7); } catch (e) {}
function f21() {
    -v19;
    return f21;
}
class C23 {
    static {
        const o25 = {
        };
        o25.get = f21;
        const v27 = new Proxy(this, o25);
        const v28 = v27?.toString;
        try { new v28(); } catch (e) {}
    }
    p(a31, a32) {
        let v33;
        try { v33 = new this(a32, this, a31); } catch (e) {}
        super.g = v17;
        return Reflect.construct(v33, [v17,v18], v33);
    }
    a;
}
try { new C23(); } catch (e) {}
new C23();
const v39 = new C23();
const v40 = new C23();
[-2.9700017742911022,795135.542646985,938.533418121023,-974148.680744386,-1.7976931348623157e+308,-300.6481185564369];
const v42 = [483707.38277358306];
const v43 = [2.220446049250313e-16,-Infinity,1.278332587799012,711290.6941419018,0.0,-Infinity,-1000.0,2.2250738585072014e-308];
const v44 = [v40,v18,v39];
try { v44.includes(v44); } catch (e) {}
[v43];
[v43,v42,v44,v39,v40];
65535 / 65535;
function f51() {
    -1261703539;
    class C55 {
    }
    try { C55(); } catch (e) {}
    Float64Array.length = Float64Array;
    const v59 = `
        try {
            new Float64Array(127);
        } catch(e61) {
        }
    `;
    try { v59.toUpperCase(); } catch (e) {}
    let v63 = -65535;
    const v64 = v63 * v63;
    v63 / v63;
    const o138 = {
        __proto__: 352326470,
        next() {
            v63--;
            const v69 = v63 == 0;
            const o70 = {
                "done": v69,
                "value": v63,
            };
            return o70;
        },
        ...352326470,
        /*
        __proto__: 1261703539,
        */
        "f": v63,
        m(a72) {
            this.h = v19;
            try { this.next(); } catch (e) {}
            a72.h = a72;
            const o74 = {
            };
            o74.e = v0;
            function f75(a76, a77, a78) {
                function f80(a81) {
                    a77[5] ||= f51;
                }
                this.onmessage = f80;
                const v84 = new SharedArrayBuffer(35);
                new BigUint64Array(v84);
            }
            try {
                o74.e = v63;
            } catch(e87) {
                const v91 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v91, o74);
            }
            try {
                const o93 = {
                };
                o93.f = o93;
                o93.e = 1261703539;
                o93.g = a72;
            } catch(e94) {
            }
            -9007199254740991 >>> -9007199254740991;
            -9007199254740991 >> -9007199254740991;
            Math.sin(-9007199254740991);
            class C102 {
                o(a104, a105, a106, a107) {
                    class C108 {
                        static 44 = "EV";
                    }
                    new C108();
                    new C108();
                    new C108();
                    return 0;
                }
            }
            new C102();
            try { new Int8Array(v18, v59, v18); } catch (e) {}
            new Int8Array(3938);
            let v117 = 3;
            v117 / v117;
            const v119 = v117++;
            v119 ^ v119;
            -0;
            const v123 = 0 >> 0;
            for (let i = 0; i < 5; i++) {
                0 < 8;
            }
            const o126 = {
            };
            o126.e = 1261703539;
            try {
                const o127 = {
                };
                o127.f = o127;
                o127.f = o127;
            } catch(e128) {
                function F129(a131, a132, a133, a134) {
                    if (!new.target) { throw 'must be called with new'; }
                    a131.propertyIsEnumerable();
                }
                -3 ^ v123;
            }
        },
    };
    try { o138.m(o138); } catch (e) {}
    try { ("nt").substring(v64, v64); } catch (e) {}
    class C142 {
    }
    try { C142.bind(v64); } catch (e) {}
    const v144 = new C142();
    function f145() {
        return Int32Array;
    }
    Object.defineProperty(v144, "floor", { writable: true, get: f145 });
    const v146 = v144?.constructor;
    try { new v146(); } catch (e) {}
    Float32Array.b = Float32Array;
    const v149 = new Float32Array(v144, "nt", Float32Array);
    function f150(a151, a152) {
        try {
            f145();
        } catch(e154) {
        }
        return a151;
    }
    Object.defineProperty(v149, "toString", { writable: true, value: f150 });
    const t174 = "nt";
    const v155 = delete t174[v149];
    let v156;
    try { v156 = v144.floor(v155); } catch (e) {}
    for (const v157 in v156) {
    }
}
f51();
f51();
function f160(a161, a162, a163, a164) {
}
f160.prototype;
function f166(a167, a168) {
    const o171 = {
        set b(a170) {
        },
    };
}
f166.prototype;
function F173(a175, a176, a177) {
    if (!new.target) { throw 'must be called with new'; }
}
try {
} catch(e178) {
}
function F179(a181) {
    if (!new.target) { throw 'must be called with new'; }
}
