let v1 = 4294967295;
let v2 = -1024;
let v3 = [-Infinity,-1000.0,9.251824912248725,-861232.5131202794,-5.396846331478315e+307,251421.5727959855,0.9150911338881506,0.3895610936116337,1000000.0,0.03605279071169476];
const v4 = [-7800.102749629528,-626644.0814873134,1.4739418569151846e+308,397961.75607641484,-773.8769266639887,-1.7976931348623157e+308,1.7976931348623157e+308,0.22456919606224834,0.0,1.2322669731457387e+308];
const v5 = [1.7976931348623157e+308,-2.2250738585072014e-308,3.0];
class C6 {
    static {
        let v8 = this;
        ({"g":v1,"length":v8,...v2} = v5);
        v3 = this;
        const v9 = this.__proto__;
        const v11 = Symbol.iterator;
        const o20 = {
            [v11]() {
                let v13 = 10;
                const o19 = {
                    next() {
                        v13--;
                        const v17 = v13 == 0;
                        const o18 = {
                            "done": v17,
                            "value": v13,
                        };
                        return o18;
                    },
                };
                return o19;
            },
        };
        try { v9.test(v5, 1024); } catch (e) {}
    }
    constructor(a23, a24, a25) {
        for (const v26 of a23) {
            super.h;
        }
        this[a25];
        const v30 = v5["filter"](a25, "filter");
        let v31 = 0;
        do {
            Object.defineProperty(v30, 2882176586, { configurable: true, value: v31 });
            v31++;
        } while (v31 < 1)
    }
}
const v35 = new C6(C6, v3, C6);
new C6(v1, v3, v5);
function F37(a39, a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v35;
    } catch(e42) {
    }
}
const v43 = new F37(C6, v1, 1024);
const v44 = new F37(v43, v4, v43);
new F37(v5, v44, v35);
new C6(1024, v35, v35);
/D5dq[\0]/gdmsy;
