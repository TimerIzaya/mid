class C3 {
    constructor(a5) {
        const v6 = this?.constructor;
        try { new v6(this); } catch (e) {}
        let v8 = 0;
        v8 | v8;
        do {
            const v10 = this >= a5;
            v10 && v10;
            let v12 = v10 ? this : a5;
            -v12;
            v12 = a5;
            v8++;
        } while (8 | 8, v8 < 8)
    }
}
const v18 = new C3(-2.2250738585072014e-308);
const v19 = new C3(NaN);
const v20 = new C3(-283304.5830678671);
try { v20.hasOwnProperty(v18); } catch (e) {}
class C22 extends C3 {
    [v18] = v19;
    static [-2.2250738585072014e-308];
    get b() {
        return 9n;
    }
    static {
        this.length = this;
        do {
        } while ((() => {
                const v33 = 0 < 0;
                v33 || v33;
                return v33;
            })())
    }
}
try { new C22(); } catch (e) {}
new C22();
new C22();
const v38 = new C22();
const v39 = v38?.constructor;
try { new v39(); } catch (e) {}
1073741825n ^ 1073741825n;
class C45 {
}
try { new C45(); } catch (e) {}
-10 instanceof WeakMap;
new Int8Array(1487);
new Int32Array(2943);
function f61(a62, a63, a64) {
    'use strict';
    return a62;
}
new BigUint64Array(194);
const v66 = /LR0/gudisy;
v66.hasIndices = v66;
const v67 = /(?:ab){4,7}/gvisy;
v67.g = v67;
/a\Bb+/vdims;
function F69() {
    if (!new.target) { throw 'must be called with new'; }
    const v71 = this?.constructor;
    try { new v71(); } catch (e) {}
    function f73(a74) {
        const o77 = {
            "maxByteLength": 1000,
        };
        new ArrayBuffer(8, o77);
        const v80 = [58584,15,9007199254740990,2146023485];
        const v81 = v80?.filter;
        try { new v81(a74); } catch (e) {}
        Object.defineProperty(v80, 65537, { writable: true, value: [46733,-268435456] });
    }
    f73.length = f73;
    Object.defineProperty(this, "b", { enumerable: true, set: f73 });
    let v84 = 1073741825;
    try {
        v84++;
        try { Math.acos(v84); } catch (e) {}
        let v89 = -1e-15;
        v89 >>> v89;
        Math.atan2(v89++, -175950080);
        this.b = v84;
    } catch(e93) {
    }
}
try { new F69(); } catch (e) {}
let v95 = new F69();
let v96 = new F69();
v96.a = -10809n;
({"a":v96,"b":v96,...v95} = v96);
const t91 = "async";
t91[2] = "async";
const o101 = {
    "execution": "minor",
    "execution": "minor",
    get a() {
        return "minor";
    },
    "execution": "async",
    "type": "minor",
};
const v102 = gc(o101);
try { v102.catch(-2.2250738585072014e-308); } catch (e) {}
new F69();
new Uint8ClampedArray(16);
BigUint64Array.BYTES_PER_ELEMENT = BigUint64Array;
function f109() {
    const v113 = new BigUint64Array(549);
    try { v113.some(BigUint64Array); } catch (e) {}
    const v117 = new Uint8ClampedArray(127);
    v117[77];
    for (const v119 in v117) {
        try { v113.filter(); } catch (e) {}
    }
    const v122 = new Int8Array(1073741823);
    v122[441499368] = v122;
    class C123 {
        #valueOf(a125, a126, a127, a128) {
        }
    }
    try { new C123(); } catch (e) {}
    const o133 = {
        valueOf(a131, a132) {
        },
    };
    o133.__proto__;
}
f109();
%OptimizeFunctionOnNextCall(f109);
