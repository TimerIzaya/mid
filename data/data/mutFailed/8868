class C6 {
    static #o(a8, a9, a10) {
        const v14 = Reflect.construct("undefined", [a8,"number",a10,Reflect,"c"], "number");
        try { v14(v14, "undefined", a9); } catch (e) {}
        return Reflect;
    }
    constructor(a17, a18, a19, a20) {
        super[this] = a18;
        super["-268435456"] = a17;
    }
    static #c;
}
const v21 = new C6("-268435456", "MIN_SAFE_INTEGER", "number", "undefined");
const v22 = new C6("c", "-268435456", v21, "undefined");
const v23 = new C6("number", "number", "undefined", "MIN_SAFE_INTEGER");
class C24 extends C6 {
    ["c"] = C6;
    static c = C6;
    static [C6];
    c = "MIN_SAFE_INTEGER";
    9 = v22;
    #a = v23;
    static n(a26, a27) {
        function* f28(a29, a30, a31) {
            %VerifyType("MIN_SAFE_INTEGER");
            a27[a31] = a31;
            yield "-268435456";
            return a26;
        }
        f28("c", a26, v21);
        return this;
    }
}
const v34 = new C24();
new v34();
const t35 = "symbol";
new t35();
const o39 = {
    "type": "async",
};
gc(o39);
