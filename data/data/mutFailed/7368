let v2 = 48634;
let v5;
try { v5 = ("h").replaceAll(v2, v2); } catch (e) {}
v5[0] = v5;
const v7 = ("ownKeys")?.constructor;
try { new v7(v5); } catch (e) {}
function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    const v13 = this?.constructor;
    try { new v13("ownKeys", v2); } catch (e) {}
    try {
        const t11 = "h";
        t11.b = a12;
    } catch(e15) {
    }
}
const v16 = F9?.apply;
let v17;
try { v17 = new v16("TE", v2); } catch (e) {}
const v18 = new F9("h", F9);
const v19 = new F9("TE", v18);
v19.a = v19;
const v20 = new v5("ownKeys", 17557);
const v21 = v20?.constructor;
try { new v21(F9, F9); } catch (e) {}
class C23 extends F9 {
    f;
    d;
    static #h = 1;
    8;
    set name(a25) {
        const t31 = "h";
        delete t31[a25];
    }
    [v18];
    7;
    static E = v7;
    static 536870887 = v19;
}
C23[536870887] = C23;
C23[536870887] = v17;
new v18();
new C23();
const v29 = new C23();
v29[54];
function F31() {
    if (!new.target) { throw 'must be called with new'; }
    --v2;
    try {
        this.h = 268435439;
    } catch(e35) {
    }
}
const v36 = new F31();
const v37 = new F31();
const v38 = new F31();
const v39 = v38?.constructor;
try { new v39(); } catch (e) {}
function f41(a42) {
    a42.b = a42;
    const o49 = {
        __proto__: F31,
        ...v38,
        getInt16(a44) {
            return v36;
        },
        ...a42,
        "a": a42,
        "b": F31,
    };
    return o49;
}
f41(v36, v19, 17557);
const v51 = v7(v38);
const v52 = f41(v37);
/(ab)[U]/udmy;
const v54 = /2(?!(a))\18/giy;
try { v54.toString(); } catch (e) {}
const v56 = /a[^a]/gms;
class C57 {
}
const v58 = C57?.constructor;
try { new v58("h"); } catch (e) {}
const v60 = new C57(v54);
new C57(v56);
const v63 = async (a64, a65, a66) => {
    [v51,a64,F31,v52];
    return v60;
};
