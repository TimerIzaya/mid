new Uint8ClampedArray(512);
Uint8ClampedArray != 512 ? Uint8ClampedArray : 512;
const v5 = [824062748,65537,128];
[-15];
[5455];
new Float64Array(2642);
const v13 = new Int16Array(3734);
try {
    v13.__proto__ = v5;
} catch(e17) {
}
let v19 = Int16Array;
const v20 = new v19(4096);
new Uint8ClampedArray(93);
new Uint32Array(512);
function f29(a30, a31, a32, a33) {
    function f35() {
        return -17353;
    }
    function f36(a37) {
        return a33;
    }
    Object.defineProperty(arguments, 7, { configurable: true, get: f35, set: f36 });
    v19 *= f36;
    Object.defineProperty(v20, "buffer", { writable: true, configurable: true, enumerable: true, get: f36, set: f35 });
    let v39 = -1073741824;
    Math.min(v39++);
    5 * Int16Array;
    arguments[2] = arguments;
    return Uint8Array;
}
function F44(a46, a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
}
const v49 = new F44(-17353, -17353, f29);
v49.constructor = f29;
const t36 = v49.constructor;
t36(-17353, -17353, Uint8Array);
