let v4 = -5;
function f6() {
    return -7.899072950662801e+307;
}
class C7 {
    static #p(a9, a10) {
        for (let v11 = 0; v11 < 32; v11++) {
            "p" + v11;
            this["p"] = v11;
        }
        return -7.899072950662801e+307;
    }
    constructor(a15, a16, a17, a18) {
        v4 &= v4;
        try { a15(-6, a18, -7.899072950662801e+307); } catch (e) {}
    }
    #e;
}
const v20 = new C7(v4, -6, 2147483647, 2147483647);
const v21 = new C7(v20, v4, v4, v20);
new C7(2147483647, 2147483647, v4, v4);
function F26() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v30 = Array(19793);
        v30[19566] = v30;
        for (const v31 of v30) {
        }
        const t28 = [];
        t28[Symbol.toPrimitive] = Array;
    } catch(e35) {
    }
}
new v21();
class C37 {
}
"GEZf" >>> 0.0;
try { undefined.toString(); } catch (e) {}
-7.00532932431496e+306 !== -1000.0;
const o46 = {
    "apply": f6,
    "construct": f6,
    "defineProperty": f6,
    "deleteProperty": f6,
    "has": f6,
    "isExtensible": f6,
    "setPrototypeOf": f6,
};
new Proxy(v20, o46);
