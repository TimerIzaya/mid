function f4(a5) {
    function f7(a8) {
        let v9;
        try { v9 = new a8(-1000000000000.0, this, this, this, a8); } catch (e) {}
        this[v9] = v9;
    }
    this.onmessage = f7;
    function f10() {
        return f10;
    }
}
let v13;
try { v13 = ("function").link(-1000000000000.0); } catch (e) {}
const v14 = ["function"];
const o15 = {
    "arguments": v14,
    "type": "function",
};
const t18 = "undefined";
const v16 = new t18(f4, o15);
try { v16.terminateAndWait(); } catch (e) {}
Infinity >> v13;
const v23 = new Int8Array(4096);
v23[1670];
~1000;
const v28 = new Uint8Array(1000);
v28[174];
new BigInt64Array(7);
const o46 = {
    get a() {
        class C36 {
            constructor(a38, a39) {
            }
        }
        Reflect.construct(BigInt64Array, [C36], C36);
        "function" || Worker;
        super.g = Reflect;
        eval();
    },
};
for (let v47 = 0; v47 < 5; v47++) {
    const v50 = [23315,10518633,1,-9223372036854775807];
    try { v50.map("J"); } catch (e) {}
    Math.log10(-9007199254740992);
    gc.caller = Int8Array;
    const o55 = {
    };
    o55.e = o55;
    gc(v13);
}
