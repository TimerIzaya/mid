try { new WeakMap(); } catch (e) {}
const v5 = new WeakMap();
const v6 = delete v5["EPSILON"];
const v7 = ("symbol")[11];
v5[v7] = v7;
new Int8Array(128);
const v13 = new BigUint64Array(7);
try { v13.sort(Int8Array); } catch (e) {}
-128;
const v18 = new Int32Array(128);
v18[72];
const v20 = [-268435456,39320,536870887,10,-4294967296,-9];
const v21 = [10,129,9007199254740990,268435440,1427897959];
const v22 = [1122990416];
class C23 {
    #a;
    get c() {
        try {
            ("number").#a;
        } catch(e26) {
        }
        const v29 = 90255609 ^ v20;
        +90255609;
        Math.sign(90255609);
        Math.atan2(v29, v20);
        !v29;
        ("EPSILON")["toUpperCase"]();
        return v20;
    }
    [v22] = v5;
    [v5] = WeakMap;
    b;
    static b = Int8Array;
    static c = BigUint64Array;
    static ["EPSILON"] = v22;
    5 = "symbol";
    8 = WeakMap;
    #e;
    static #f = "symbol";
}
const v36 = new C23();
new C23();
const v38 = new C23();
const v39 = [C23,v38,v20,v20];
try { v39.some(v6); } catch (e) {}
[v20];
[v36,v20];
function f44(a45) {
}
["P61J","P61J","P61J","P61J","P61J"];
const o49 = {
    "type": "function",
};
new Worker(v21, o49);
