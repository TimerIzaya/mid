[8.51445160777763,-203.7744135809669,-355.5125276884261,-1000.0];
const v1 = [-2.220446049250313e-16,1000000000000.0];
[-9.014269329995117e+307,0.0,-2.2250738585072014e-308,-959.8550755707366,1.7976931348623157e+308,0.07907413005593766,-1.1497950343717387e+307,-Infinity,0.0,-5.784097924645421e+307];
const v4 = new Map();
const v6 = [[v4]];
[v1,Map];
[0.4919358981756875,-2.692796400497704,278918.6101709553,0.25651596575725033,-4.0,648.2051343025021,-2.2250738585072014e-308,-550.3048388681526];
[-2.0,-676058.711006116,2.2250738585072014e-308,NaN,Infinity];
[-1.0,1.0,-2.0,5.663437268197466,-Infinity,1000000.0,0.05665545452298837];
function f11() {
    return v1;
}
function F16(a18, a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    const v21 = this.constructor;
    try { new v21(a18, a18, this); } catch (e) {}
    a18 + a18;
    try {
        this.e = a20;
    } catch(e24) {
    }
    try {
        this.h = -6.336273045214518e+306;
    } catch(e25) {
    }
    try {
        this.g = -1.7976931348623157e+308;
    } catch(e26) {
    }
}
new F16(268435439n, 268435439n, -9n);
let v28 = 64;
const v30 = new Uint16Array(v28);
function f31() {
    class C34 {
    }
    let v35;
    try { v35 = new C34(12); } catch (e) {}
    const v36 = new C34(-4294967296);
    const v37 = [v36,C34];
    try { v37.map(v30); } catch (e) {}
    [v36];
    for (let i41 = 0; i41 / i41, v28 < 2; v28++) {
        new F16(undefined, v35, undefined);
    }
    class C50 extends C34 {
    }
    const v51 = new C50();
    class C53 extends v6.constructor {
    }
    let v54;
    try { v54 = v51.m(); } catch (e) {}
    return v54;
}
%PrepareFunctionForOptimization(Map);
f31();
%OptimizeFunctionOnNextCall(f31);
Map();
