const v0 = [];
function f1() {
    return v0;
}
class C2 {
    161 = f1;
    268435440;
    #p(a4) {
        try { new a4(this); } catch (e) {}
        try {
            v0.findLast(f1);
        } catch(e7) {
        }
        return f1;
    }
    [v0];
    static #b;
}
const v8 = new C2();
const v9 = new C2();
const v10 = new C2();
function F11(a13, a14, a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a16;
    } catch(e17) {
    }
    try {
        this.a = a15;
    } catch(e18) {
    }
}
const v19 = new F11(v10, v10, v10, C2);
const v20 = new F11(v9, v0, v10, v10);
new F11(v8, v10, v10, v20);
function f42() {
    3.4890473589784586e+307 > 3.4890473589784586e+307;
    -4294967296 >> -4294967296;
    class C49 {
    }
    const t40 = 128;
    const v50 = new t40();
    v50.g = v50;
    const v51 = new C49();
    v51.length;
    const v54 = ([9007199254740992,9007199254740992]).constructor;
    class C55 extends v54 {
    }
    try { C55.apply(v54, C49); } catch (e) {}
    const v57 = new C55();
    Object.defineProperty(v57, 65537, { value: v51 });
    return Int16Array;
}
%PrepareFunctionForOptimization(f42);
f42();
const t54 = 1.31375311556276e+308;
t54();
%OptimizeFunctionOnNextCall(f42);
v19();
