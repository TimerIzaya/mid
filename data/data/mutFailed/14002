[];
const v3 = new Int32Array(16);
const v4 = v3[11];
new Uint32Array(129);
let v8 = 255;
v8++;
v8 ^ v8;
Float64Array.prototype = Float64Array;
new Float64Array(v8);
16 !== 466696743;
class C17 {
    10 = 129;
    #h;
}
let v18;
try { v18 = new v4(); } catch (e) {}
const v19 = new C17();
v19[10] = v19;
v19[10] = v19;
const v20 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
v20[5];
const v24 = new Uint32Array();
const v27 = new Uint16Array(6);
let v28 = 4;
v28 + 16;
const v30 = v28++;
v30 >>> v30;
v27.lastIndexOf(v28);
const v34 = [601759695];
const v35 = [1073741824,1073741823,1376142744,1073741825];
522675525n ^ 522675525n;
function f38(a39, a40, a41, a42) {
    a39 | a39;
    a40[0] = a40;
    a41 + a41;
    const v45 = a39 & a39;
    const v46 = a40?.constructor;
    let v47;
    try { v47 = new v46(16); } catch (e) {}
    const v48 = v47?.constructor;
    try { new v48(Uint16Array); } catch (e) {}
    function f50() {
        v28[1] = "Vre";
        -4294967295 / -4294967295;
        try { Math.expm1(Math); } catch (e) {}
        const v56 = Math.expm1();
        const v57 = Math.tanh();
        v57 * v57;
        v45 - Math.hypot(a41, Math);
        v18.BYTES_PER_ELEMENT = Float64Array;
        b = v34;
        v20.length;
        try {
            v35.findLast();
            function f64() {
            }
            const v65 = [-1.5314324604839498e+308,-1.8081364344875581,-2.2250738585072014e-308,3.0,3.0];
            v65[5] = v65;
            function F66(a68, a69, a70) {
                if (!new.target) { throw 'must be called with new'; }
                a68[4294967295] = a68;
            }
            F66.prototype;
        } catch(e72) {
            e72.a = e72;
        }
        const v73 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        try { v73.sort(a39); } catch (e) {}
        let v75;
        try { v75 = v73.pop(); } catch (e) {}
        v75 !== v75;
        v45 - ~-268435456;
        const o93 = {
            [522675525n](a81, a82) {
            },
            "arguments": v73,
            __proto__: a40,
            "type": v4,
            "c": 6,
            /*
            __proto__: v73,
            */
            "c": v34,
            [-1]: 2684,
            1073741824: v24,
            "maxByteLength": -268435456,
            /*
            __proto__: v24,
            */
            9: v19,
            [v57]: v56,
            ...a40,
            "arguments": v73,
            [2n](a84, a85, a86, a87) {
            },
            "e": -4294967295,
            "arguments": Float64Array,
            256: a42,
            4: "Vre",
            "g": v73,
            get e() {
                return "Vre";
            },
            "h": v28,
            "c": -268435456,
            get b() {
                return "Vre";
            },
            "execution": "Vre",
            valueOf(a91, a92) {
            },
        };
        return -4294967295;
    }
    f50.arguments = f50;
    const v94 = f50();
    v94 >> v94;
    eval(a40);
    %OptimizeFunctionOnNextCall(f50);
    return 2n;
}
for (let v98 = 0; v98 < 5; v98++) {
    v98 % v98;
    const v100 = f38(v98, v34, v98, v98);
    v100 > v100;
}
