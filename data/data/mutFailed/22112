function f0() {
}
const v1 = [0.31974554453049664,-996.6721857518104,0.8532209730956241,7.8115429037273465];
[4.3259607591792394e+307];
const v3 = [-275906.6504614125,-402.61437892714764,-1.7976931348623157e+308,393.8859037927548,699.7307069424362,2.220446049250313e-16,-1.0016309081200127e+307,-1.718214799092727e+308,-1e-15,-1000000000.0];
5 || v1;
Math.expm1(f0);
let v9 = 5 / -v1;
let v10 = v9--;
const v12 = new Float32Array(Float32Array, Float32Array);
new Set();
const o15 = {
};
try {
    o15.c = v3;
} catch(e16) {
}
try {
    const o17 = {
    };
    o17.c = v3;
    o17.g = Math;
} catch(e18) {
}
try {
    const o19 = {
    };
    o19.c = v3;
    o19.g = Math;
    o19.h = v9;
} catch(e20) {
}
try {
    const o21 = {
    };
    o21.c = v3;
    o21.g = Math;
    o21.a = f0;
} catch(e22) {
}
function f23(a24, a25, a26, a27) {
    const v28 = a24.length;
    v28 << v28;
    const v31 = new Float32Array(2);
    try { Int32Array(v12); } catch (e) {}
    const v34 = v31;
    v34[1];
    return f23;
}
v10--;
const v37 = [1000000000.0,-5.0,7.987530910241041,5.0,2.2250738585072014e-308,2.2250738585072014e-308,1.7976931348623157e+308];
[133743.12834651326,-0.0,4.0,656457.7304762481,0.02990195419539965,-246196.74225850624,-1000.0,-1000000000000.0,-844060.7483979412];
[4.0,-939.806628864299,0.22840675404677768,1.121131022042719e+308,1.2136352136532346e+308];
new BigInt64Array(129);
new Uint8ClampedArray(1752);
new Int16Array(59);
class C52 {
    n(a54, a55) {
        Object.defineProperty(this, "e", { enumerable: true, value: super[1000] });
    }
}
const v58 = [-48288,15,-63536,268435456];
class C59 extends Array {
    constructor(a61, a62, a63) {
        try { C52["resize"](a61, "resize"); } catch (e) {}
        delete v37?.length;
        let [v67,,v68,v69] = v12;
        super[o15] = o15;
        super(a61);
    }
}
const v70 = new C59();
const v71 = new C59();
for (let i = 0; i < 5; i++) {
    v70[v58] = v71;
}
