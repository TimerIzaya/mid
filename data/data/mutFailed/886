let v0 = Date;
const v1 = new v0();
class C2 extends v0 {
    #o(a4) {
        a4 = this;
        return "c";
    }
    c;
    constructor(a9) {
        super(a9);
        Math.expm1(-366687.8544616379);
        let v13 = 10;
        for (; v13--;) {
            try {
            } catch(e15) {
            }
        }
        v1[v0];
        v0++;
        super.e = v1;
        const v19 = [];
        Reflect.apply(this.getUTCMilliseconds, this, v19);
    }
}
const v22 = new C2(v0);
const v23 = new v22(v1);
new C2(v23);
const v30 = new Int32Array(1000);
new Uint16Array(1);
const v37 = new BigUint64Array(v23);
let [v38,,v39,...v40] = v37;
const v42 = [65537,268435441,63298,-5,1235122603];
function F43(a45, a46, a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    const v49 = this.constructor;
    try { new v49(1024, 1024, v42, this); } catch (e) {}
    a46.caller;
    a48[1];
    this.c = a47;
    const v54 = [Reflect];
    const o55 = {
        __proto__: Reflect,
        "e": v54,
    };
    this.f = v30;
}
new Float32Array(703);
new Int8Array(9);
(1).reverse();
