function f0() {
}
class C1 extends f0 {
    n() {
        for (const v3 in this) {
            super.b >>>= f0;
        }
        return -60823;
    }
    10;
    0 = f0;
    static #g = f0;
}
const v7 = new C1();
new C1();
new C1();
const v12 = new Array(633);
class C16 {
    static set f(a18) {
        Object.defineProperty(C1, 10, { writable: true, configurable: true, enumerable: true, set: Array });
    }
    7 = v12;
    static [633];
    5;
    valueOf(a20, a21) {
        try {
            const o22 = {
            };
            v7.n(o22, 268435441);
        } catch(e25) {
        }
        return 633;
    }
}
new C16();
new C16();
new C16();
const v30 = ("boolean").trimLeft;
let v31;
try { v31 = v30(); } catch (e) {}
function f33() {
    let v36 = -65535;
    const v37 = v36 / v36;
    const o96 = {
        next() {
            v36--;
        },
        m(a41) {
            a41.c = a41;
            a41.h = a41;
            const o42 = {
            };
            o42.h = o42;
            function f43(a44, a45, a46) {
            }
            f43.caller = f43;
            try {
                o42.e = this;
            } catch(e47) {
                const v51 = new Uint8ClampedArray(512);
                Uint8ClampedArray(798, v51, o42);
            }
            const o53 = {
            };
            o53.g = o53;
            o53.e = 1261703539;
            let v55;
            try { v55 = Math.expm1(15); } catch (e) {}
            -v55;
            const v58 = -9007199254740991 / -9007199254740991;
            const v59 = v58 - v58;
            const v60 = v59 >> v59;
            v60 - v60;
            Math.sin(-9007199254740991);
            "EV" == "EV";
            try { ("EV").link(v37); } catch (e) {}
            const v67 = 0 != 0;
            v67 || v67;
            class C69 {
                o(a71, a72, a73, a74) {
                }
            }
            C69.e = C69;
            C69.name = C69;
            const v75 = new C69(v31);
            const v76 = v75?.constructor;
            try { new v76(); } catch (e) {}
            const v78 = v36?.constructor;
            try { v78(); } catch (e) {}
            try { v78(); } catch (e) {}
            const v83 = new Int8Array(3938);
            v83[268] = v83;
            try { v83.every(o53); } catch (e) {}
            let v85 = 3;
            const v86 = v85++;
            v86 << v86;
            const v89 = 0 >> 0;
            v89 - v89;
            for (let i = 0; i < 5; i++) {
                const v92 = 0 < 8;
                v92 && v92;
                [...v85] = v92;
            }
            const o94 = {
            };
            const o95 = {
            };
            o95.h = 352326470;
            return this;
        },
    };
    try { o96.next(); } catch (e) {}
    const v98 = o96.m(o96);
    v98.m(v98);
    class C100 {
    }
    const v101 = new C100(C100, v30, v98);
    let v102;
    try { v102 = v101.floor("boolean", C100); } catch (e) {}
    for (const v103 in v102) {
    }
}
f33.b = f33;
f33();
f33();
