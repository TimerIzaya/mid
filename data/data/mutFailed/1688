new Uint8ClampedArray(8);
new BigInt64Array(6);
new Float32Array(257);
class C12 extends Float32Array {
    constructor(a14, a15, a16) {
        super(6);
        function f17() {
            return "ownKeys";
        }
        const v18 = super.every(a14, this);
        v18 / v18;
    }
    #b = Uint8ClampedArray;
    get d() {
        new BigInt64Array("toString", 6, 257);
        return this;
    }
}
new C12(C12, 6, "undefined");
parseInt([-5.034735835956977e+307,-385.25474675985527]);
const v27 = new C12(Float32Array, 257, "ownKeys");
new C12(v27, 8, "undefined");
Uint8Array.toString(Uint8Array, Uint8Array, Uint8Array, Uint8Array, Uint8Array).toLowerCase();
