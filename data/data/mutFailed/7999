class C3 {
    #b;
    h;
    static valueOf(a5) {
        try {
            super.m(this, -9007199254740991);
        } catch(e7) {
        }
        return -346908.1162316832;
    }
    static 13 = -346908.1162316832;
    c;
    static 1 = -9007199254740991;
    static #f = -9007199254740991;
}
let v8 = new C3();
new C3();
new C3();
class C15 {
    set a(a17) {
        super[-4.0] = this;
        class C18 {
            static #n(a20) {
            }
        }
        const v21 = new C18();
        const v22 = new C18();
        const v23 = new C18();
        let v24 = Int16Array;
        const v25 = new v24();
        new Uint8Array(2265);
        const v30 = new v24(2872);
        try {
            v30.length = 4;
        } catch(e32) {
        }
        v22[3109] = v21;
        try { v21(v23, v25, 2265, 2265); } catch (e) {}
        v24 = v24;
        try {
            C3.valueOf = a17;
        } catch(e34) {
        }
    }
    static 9;
    get b() {
        v8 >>>= v8;
        new Uint8Array(3877);
        new Int32Array(3);
        new Float64Array(109);
        return 109;
    }
}
new C15();
new C15();
new C15();
function f48() {
    const o50 = {
        "c": Array,
    };
    const t60 = o50.c;
    new t60();
    for (const v55 of Array(4087, Array, Array)) {
        function f56() {
            return f48;
        }
        function f57(a58) {
            class C59 {
            }
            new C59();
        }
        Object.defineProperty(v55, Symbol.toPrimitive, { writable: true, configurable: true, get: f56, set: f57 });
        v55 | v55;
    }
    return f48;
}
%PrepareFunctionForOptimization(f48);
f48();
%OptimizeFunctionOnNextCall(f48);
f48();
