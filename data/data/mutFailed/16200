function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        ("239876266").length;
        const t3 = "bigint";
        t3[Symbol.toStringTag] = "239876266";
        this.h = a8;
    } catch(e16) {
    }
    try {
        this.e = "V";
    } catch(e17) {
    }
}
new F6("g", "V");
new F6("V", "g");
new F6("g", F6);
const v21 = [718640.2617549868,0.0,0.9831858302754684];
const v22 = [0.9558758907282131,484729.897675175,Infinity,Infinity,-Infinity];
const v23 = [-871.9015110763239,NaN,-1000000000000.0,-815919.5433172293,6.208985089911437,1.0,-0.0,-2.2250738585072014e-308,-6.382652376578228];
function f24() {
    return v23;
}
class C28 {
    n(a30) {
        try { new a30(a30, a30, a30, 268435440, 268435440); } catch (e) {}
        const o33 = {
            "b": 256,
        };
        for (let v35 = 0; v35 < 32; v35++) {
            this["p" + v35] = v35;
        }
        new gc();
        this[2] = -44363;
        const o41 = {
            "maxByteLength": 1024,
        };
        const v43 = new ArrayBuffer(1024, C28);
        new Int8Array(v43);
        return 268435440;
    }
}
const v46 = new C28();
new C28();
const v48 = new C28();
const v50 = new Date();
function f51() {
    return v50;
}
try {
    v46.g = v48;
} catch(e52) {
}
function F53(a55, a56, a57) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a55;
    } catch(e58) {
    }
    try {
        this.arguments = a55;
    } catch(e59) {
    }
    try {
        this.a = a55;
    } catch(e60) {
    }
}
const v61 = new F53(C28, v50, 268435440);
const v62 = new F53(v61, "L", v48);
new F53(f51, v62, -44363);
function f64(a65, a66) {
    const o68 = {
        ...a66,
        get h() {
            return this;
        },
    };
    return a66;
}
class C70 {
    static get d() {
    }
    c;
    static #e = -1000000.0;
    4294967295;
    #a;
}
new C70();
new C70();
const o75 = {
};
new Float32Array(Float32Array, Float32Array);
[];
[v21,v62,v22];
class C81 {
    static #p(a83, a84) {
        function f85(a86) {
            function f88(a89) {
                try {
                    this.h = a89;
                } catch(e90) {
                }
            }
            this.onmessage = f88;
            f88 >> a86;
            try {
                new F6(undefined, C81);
            } catch(e94) {
            }
        }
        const v97 = ["function"];
        const o98 = {
            "arguments": v97,
            "type": "function",
        };
        new Worker(f85, o98);
    }
    #h;
    [v61];
    static #a;
    #b = "239876266";
    static #c;
    static [v21];
}
const v100 = new C81();
const v101 = new C81();
const v102 = new C81(-747634.1081113975);
function f103(a104, a105, a106, a107) {
    const o108 = {
        "c": -922911.6474995338,
        242: -922911.6474995338,
        "g": v101,
        [a107]: a105,
        [C81]: a104,
        "a": -747634.1081113975,
        "h": a104,
        "f": a107,
    };
    return o108;
}
const v110 = f103(f103(v100, v102, C81), v102, v100, v100);
const v111 = f103(v101, v102, v110, v110);
class C112 {
    constructor(a114, a115) {
        function f116(a117, a118) {
            v100 >>> 1562326717n;
            C81.g;
        }
        const v124 = ["function",v111];
        const o125 = {
            "arguments": v124,
            "type": v100,
        };
        new Worker(f116, o125);
    }
}
new C112(C81, C112);
new C70();
/ywha??/gvdim;
