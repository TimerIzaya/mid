const v2 = new Uint8ClampedArray(168);
new Uint32Array(257);
const v8 = new BigInt64Array(255);
const v9 = [-479524.77828418225,1000000.0,-415921.2852071272,196.1346861973284,-4.190660983439576,2.0,2.220446049250313e-16,0.570716208757033];
const v10 = [-5.0,-3.642385805642836,-1000000000.0];
[-1.7976931348623157e+308,-5.450934447902398e+307,-1000.0,-1000000000000.0,2.2250738585072014e-308];
const v14 = new Uint8ClampedArray(384);
new Int32Array(13);
new Float64Array(512);
function f21() {
}
function f22() {
    const o50 = {
        "f": v9,
        1024: v14,
        ...v2,
        [168]: v9,
        "g": 257,
        "b": f21,
        [f21]: f21,
        valueOf() {
            class C24 {
                f;
                1073741824;
            }
            new C24();
            new C24();
            new C24();
            let v29 = -(-1e-15);
            v29--;
            const t29 = /a\Sc?/giy;
            t29.valueOf = f21;
            try {
                f21();
            } catch(e33) {
                Symbol("bZ");
                const v37 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
                class C38 {
                    constructor(a40, a41, a42, a43) {
                        const v44 = this?.constructor;
                        try { new v44(v37, a42, a42); } catch (e) {}
                        a41 >>> a41;
                        0.061410412759498656 >>> 0.061410412759498656;
                    }
                }
            }
            try {
                this.valueOf = f21;
            } catch(e49) {
            }
            return f21;
        },
    };
    return o50;
}
f22();
const v52 = f22();
const v53 = v52?.b;
let v54;
try { v54 = new v53(); } catch (e) {}
new Uint8Array(268435440);
function F58() {
    if (!new.target) { throw 'must be called with new'; }
}
function f60(a61, a62, a63, a64) {
    const v65 = [a62,v54,168];
    [v2,Float64Array,a61,Int32Array];
    return [v65];
}
f60(v10, v54, 384, 13);
class C69 extends F58 {
}
Date[-22872n] = Date;
if ("function" < "function") {
    v8.length;
} else {
    Object.defineProperty(v14, "buffer", { writable: true, set: f60 });
}
const v75 = ("function").length;
const v76 = f22();
function F77(a79, a80) {
    if (!new.target) { throw 'must be called with new'; }
    const v81 = this?.constructor;
    try { new v81(a79, a79); } catch (e) {}
    new Uint16Array(v75);
    const v85 = [];
    const o86 = {
        ...v85,
    };
    try {
        this.b = a80;
    } catch(e87) {
    }
    try {
        this.c = a79;
    } catch(e88) {
    }
}
const v89 = new F77(v76, v76);
new F77(v52, v89);
new F77(v76, v89);
-6n * -6n;
function f97(a98, a99) {
    Math.atan2(Math, f97);
    Math.PI;
    try {
        Math.E = 257;
    } catch(e103) {
    }
    return f97;
}
new Promise(f97);
1713234876 === 1713234876;
function f108(a109, a110) {
}
f108();
f108(-1748, 1713234876);
function F113(a115, a116) {
    if (!new.target) { throw 'must be called with new'; }
    const v117 = this.constructor;
    v117.f = v117;
    function f121() {
        return f121;
    }
}
