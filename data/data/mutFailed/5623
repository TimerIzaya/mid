[268435440n,650386869n,268435440n,650386869n];
const v4 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
function f5(a6, a7, a8, a9) {
    /(?:a*)+q(?<a>.)/guds;
    function f11(a12) {
        v4.constructor;
        try { f11(); } catch (e) {}
        a12.constructor;
        a9 | [Infinity,5.072687501529128e+307,0.4093098171074484,4.0,-4.442441003635313e+306,843998.4933901483,-714.8973177887364];
    }
    for (let [i24, i25] = (() => {
            function f20(a21, a22) {
                return f5;
            }
            return [0, 10];
        })();
        i24 < a9;
        i25--) {
        for (let v32 = 0; v32 < 25; v32++) {
            f11(a6);
        }
    }
    function f34() {
        let v35 = Float64Array;
        v35 = a7;
        return a7;
    }
    return f34;
}
const v36 = [268435440n];
v36.toString = f5;
const v37 = [255n,v36,v36,255n];
v37[Symbol.toPrimitive] = f5;
new Float32Array(155);
[,,,,,];
const o46 = {
    "execution": "async",
};
new BigUint64Array(129);
new Uint8Array(129);
function f52() {
}
const v53 = [3,1024,490145092,10,-9223372036854775807,-9223372036854775807,1441684544,-1572996615];
[127,-65535,64,343690887,-2123787437,2,2147483649,-53151,1];
[1342014474];
class C56 {
    toString(a58) {
        const v59 = f52();
        let v61;
        try { v61 = this["any"](v59); } catch (e) {}
        return v61;
    }
    o(a63) {
        return v53["findLastIndex"](f52, this);
    }
    static 10000 = v53;
    static [v37];
}
new C56();
new Int8Array(443);
try {
    155 ** -(-7);
} catch(e73) {
}
const t64 = [-Infinity,1.7976931348623157e+308,1.0,1.7976931348623157e+308,-1.0,Infinity];
t64.length >>>= -65536;
