function f0() {
}
const v1 = [1000000000.0,-4.0,-1.0,0.7625072561749102,4.991525786566157,-2.1647885504441895,1000.0,-1.0898948377764426e+308,-1000000.0];
new Uint16Array(3);
function f5(a6) {
    const o7 = {
    };
    return o7[213];
}
const v9 = [-187.6610254841122,1000.0,0.04010182011743946,0.6597845480895619,3.8960488281778325,297438.80732924887,NaN];
const v10 = [484002.1045984749];
class C11 {
    static #c;
    b = v1;
    static #n(a13) {
        super[this] = v9;
        a13["concat"]("concat", f0, v10, v9[13]);
        try {
            new f0();
        } catch(e18) {
        }
        return v10;
    }
    #d;
    [v9] = v10;
}
C11.length;
new C11();
new C11();
const t29 = 3;
const v22 = new t29();
const v23 = v22?.constructor;
try { new v23(); } catch (e) {}
("find").codePointAt();
try { v9["find"](..."find", ...v9); } catch (e) {}
class C32 {
}
const t37 = "iT5yt";
t37[4] = "iT5yt";
const v38 = 512 * 512;
[1.506020714556427e+307,-5.0,0.03090185281437363,1000000000000.0,-2.2250738585072014e-308,-1000000000000.0,4.0,-0.0,-7.262085316788397e+307];
const v41 = gc();
const v42 = v41?.then;
try { v42(); } catch (e) {}
const v44 = [-1719195867,54251,2147483647,-5,655428922,40090,1073741824,-12];
try { v44.entries(); } catch (e) {}
v38 - v38;
for (const v48 in [1000.0,-1000.0,0.4309916776051478,1000000.0,-1.0,-560.6262021777798,NaN,3.0]) {
    Math.tan(-23394);
}
const v52 = [-9007199254740991];
try { v52.push(v41); } catch (e) {}
([9007199254740991,65536,3,65537,2007257226,349524703,2])[2];
try { v1.copyWithin(59656, 59656, ...f0, 512, 4, -9007199254740991); } catch (e) {}
let v57 = 0;
while (v57 < 6) {
    v57++;
}
-9007199254740991 >>> -9007199254740991;
const v66 = new Int16Array(2058);
v66[256] = 2058;
const t61 = "sync";
t61[1] = "sync";
const o69 = {
    "execution": "sync",
    "type": "minor",
    __proto__: "sync",
};
gc(o69);
