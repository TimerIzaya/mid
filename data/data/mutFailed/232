const v0 = [0,536870912,257,-6,9007199254740991,-2068039903,-14744,-128,268435441];
const v1 = [1,5,10,2147483649,-716553541,-38650,9223372036854775807,-10,2147483648,9];
function f2() {
    v1 + v0;
    const v5 = new Date();
    return v5;
}
v1.toString = f2;
const v6 = [1073741825,-65537,43478,41083,1024,16,536870912,8];
const v7 = [v1,v0];
v7[1] = v7;
let v8 = [v6,v1];
const v9 = [v6,v1,v6,v0];
const v10 = [v1,v8,v1,v7];
v10.constructor = f2;
const v11 = v10?.constructor;
try { new v11(v9); } catch (e) {}
const v13 = [v1,v1];
try { v13.group(v7); } catch (e) {}
[v10,v6,v13,v8];
class C16 {
    3694713621 = v0;
    static 1364 = v9;
    static set b(a18) {
        const v19 = [1,4294967296,-9007199254740992,4,-4294967295,-9,-4294967297,255,536870888,255];
        [v19,v19,v19];
        const o24 = {
            toString(a22) {
                class C23 {
                    static [this] = a22;
                }
                return C23;
            },
        };
        const o28 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o28);
    }
    static #a = v6;
    #h = v10;
}
C16[1364] = C16;
const v30 = new C16();
v30[3694713621];
const v32 = new C16();
v32[3694713621] = v32;
const v33 = new C16();
v33.toString = f2;
function f34(a35, a36) {
    a36[1] = a36;
    a36[1] = a36;
    const o52 = {
        [v1]: v13,
        __proto__: v1,
        n(a38, a39, a40) {
            const v41 = new C16();
            const v44 = new Int16Array(1371);
            v44.lastIndexOf(1371, 1351);
            let v47;
            try { v47 = a35(v41, a38); } catch (e) {}
            a35?.[v47];
            (v8 = v30)[Symbol.match];
            return v41;
        },
        "h": a35,
        [a35]: v10,
    };
    o52[Symbol.toPrimitive] = f34;
    return o52;
}
const v55 = f34(v33, v8);
try { v55.flat(); } catch (e) {}
const v60 = new Uint16Array(257);
const v61 = 1511 - 1511;
v60[v61] = v61;
f34(v55, v8);
f34(v1, v33);
class C64 {
}
const v65 = new C64();
const v66 = new C64();
const v67 = v66?.constructor;
try { new v67(); } catch (e) {}
const o69 = {
};
o69.b = v11;
o69.b = v65;
const o70 = {
};
Object.defineProperty(o70, "b", { writable: true, value: v66 });
const v2 = new Map();
const v4 = new Float64Array(Float64Array, Float64Array);
const o7 = {
    "d": 127,
};
const o9 = {
    [127]: Int32Array,
    get d() {
        return Float64Array;
    },
    __proto__: 127,
    ...o7,
};
class C10 {
    static #f = false;
    constructor(a12, a13) {
        try {
            a13 = v2;
        } catch(e14) {
        }
    }
    #toString(a16) {
        this[a16];
        Reflect.construct(a16, [Map,a16,v2,Reflect,v2], a16);
        try {
            Reflect.#f = v2;
        } catch(e21) {
        }
        return Reflect;
    }
}
new v4(C10, false);
const v23 = new C10(false, C10);
new C10(v23, v2);
new BigInt64Array(4096);
const v30 = new Uint16Array(2934);
new Uint32Array(196);
class C37 {
    [-256];
    static get b() {
        try {
            super[16] = -256;
        } catch(e39) {
        }
        return 16;
    }
    2 = -128;
    536870888;
    [-128];
    [16] = -256;
    static 1073741824 = -128;
    static #g;
    static #h;
    static 65536;
    90;
    static f = 16;
}
const v40 = new C37();
const v41 = new C37();
v41[16];
const v45 = new Array(8);
class C46 extends Array {
    n(a48, a49) {
        const v50 = v45[3499145331];
        try { v50(a48, a48, a49, v50); } catch (e) {}
        return v45;
    }
    static get e() {
        const v55 = 715084368 << this;
        let v56 = v55 >>> 715084368;
        v55 & 715084368;
        const v58 = ++v56;
        v56 >>> 715084368;
        Math.acosh(v56);
        v56 + v58;
        return 715084368;
    }
}
const v62 = new C46();
const v63 = new C46();
let v64;
try { v64 = v63.copyWithin(v62, v45); } catch (e) {}
v64?.copyWithin;
new C37();
class C67 {
    [v41] = -128;
    [v40];
    [-256];
    static [v30];
    constructor(a69, a70, a71) {
        a71 ^ a71;
        try {
            this[7] = C37;
        } catch(e73) {
        }
        const v74 = v41;
        v74[2] = v74;
        try {
            new C37();
        } catch(e76) {
        }
    }
}
try { C67.call(C67); } catch (e) {}
const v78 = new C67(-256, C37, -128);
const v79 = new C67(16, v78, -256);
new C67(-128, v79, -128);
const t107 = "jO";
t107.length = "jO";
1000.0 === 1000.0;
function f86() {
    return -256;
}
for (let v87 = 0; v87 < 32; v87++) {
    const v89 = "p" + v87;
    try { v89.toLowerCase(); } catch (e) {}
    v41[v89] = v87;
}
try {
    let v92 = C37();
    Math.tanh();
    const o97 = {
        "c": "-4096",
        [0.8270476620027499]: 0.43223002794581145,
        "g": 0.8270476620027499,
        [-1]: "-4096",
    };
    v92--;
} catch(e99) {
}
("-2")[10];
class C102 {
    constructor(a104, a105) {
        const v106 = this?.constructor;
        v106.e = v106;
        try { new v106(a104, a104); } catch (e) {}
        a104 | a104;
        a105.name;
        super.replace;
    }
}
const v111 = new C102(-4096, C102);
const v112 = new C102(1000.0, v111);
v112.constructor;
class C115 {
    [Set];
    4;
}
const v116 = new C102(C102, v112);
function F117(a119, a120, a121, a122) {
    if (!new.target) { throw 'must be called with new'; }
    a121.d = a121;
    const t152 = a122.constructor;
    new t152(a119, v116);
}
const v125 = new F117(v116, C102, v112, v112);
new F117(v125, v112, v125, v112, v125);
([0.43093005420324215,1000.0]).toString();
const t157 = [-9223372036854775807,1073741824,-65535,1945375758,4294967295,-9,-65537,1,-268435456];
t157[268435439] = "freeze";
