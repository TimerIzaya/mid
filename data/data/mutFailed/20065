const v0 = [-2.7678884624380107,1000.0,-627.6698710319579,5.0,-4.880417279154299,5.0];
const v2 = Int8Array.prototype;
try { v2.hasOwnProperty(v2); } catch (e) {}
const v7 = new Uint32Array(381);
new Float32Array(v7);
[-1.0,6.385085541194329,-322.71743955033276,1000000000000.0,-5.0,17.179689393894932,1000.0];
[5.0,-2.220446049250313e-16,0.8684949334615093];
-128 % -128;
const v15 = new Set();
function F16(a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a18;
    } catch(e20) {
        for (let [v21,v22] of a18) {
        }
    }
    this.h = v15;
    -256n >> -256n;
    try {
        v15[this];
        [WeakSet];
        new F16();
        this.b = Set;
    } catch(e29) {
    }
}
11290 - 11290;
const v32 = [-1274164195,9007199254740992,1504853157,-9223372036854775807,268435439,-1024,9223372036854775807,11173,127,13];
try { gc(); } catch (e) {}
gc();
(-8n).constructor;
const v40 = new Int32Array(1024);
SharedArrayBuffer.e = v40;
const v42 = [2,-65537,-4096,-991120897,4416,255,512];
v42.length = v42;
const o43 = {
};
const o44 = {
};
o44.e = o44;
class C45 {
    #d;
}
const v46 = new C45();
const o47 = {
    __proto__: v46,
    ...v46,
};
try { o47.toLocaleString(); } catch (e) {}
[v32,[1,-46352,4294967296,57124,-52162,-14,1073741823,-2147483649,12],11290];
const v51 = [v0];
3327 >> 3327;
const v55 = new Uint16Array(3327);
const v56 = [-2038832922,-14];
v56[1] = v56;
v55.set(v56);
8 & 8;
946.0676210033328 >>> 946.0676210033328;
const o64 = {
    1: 8,
    "b": v56,
    m(a63) {
        return a63;
    },
    __proto__: 946.0676210033328,
};
[v32,v51];
class C66 {
}
try { new C66(); } catch (e) {}
const v68 = new C66();
class C69 {
    set b(a71) {
    }
}
let v72 = [23795,8,259058917,-256,1,-36806,4096,-9,-1,-18943];
v72 &= v72;
for (const v73 in v68) {
}
