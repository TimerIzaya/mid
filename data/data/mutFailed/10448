class C3 {
    constructor(a5, a6) {
        super();
        try {
            a5.__proto__ = C3;
        } catch(e7) {
        }
        new C3();
    }
    1024;
    o(a10, a11) {
        try {
            this.fuck(a11, a10, [a11,-2147483648,this,-65536,9007199254740990]);
        } catch(e14) {
        }
        return -2147483648;
    }
    static #o(a16) {
        let v17;
        try {
        const t0 = 9007199254740990;
        v17 = t0(9007199254740990, this, a16, 9007199254740990, a16);
        } catch (e) {}
        this[this] = this;
        v17?.f;
        gc();
        function F23(a25, a26, a27) {
            if (!new.target) { throw 'must be called with new'; }
        }
        const t29 = Array(11);
        t29[212] -= 3774;
        return 6n;
    }
}
new C3();
new C3();
new C3();
const v36 = [748666.7832804511,3.0];
class C38 extends Float64Array {
    [v36];
}
class C42 {
    #a;
    constructor(a44, a45, a46) {
        try {
            a45.#a;
        } catch(e48) {
        }
    }
}
[-1,-10,-58590];
function f50() {
    return f50;
}
async function* f51(a52, a53) {
    return f51;
}
[10,9,1073741825,-41987];
[1917493702,9,-1137246023,-3,536870912,4,-9223372036854775808,-1319681949,268435456];
function F57() {
    if (!new.target) { throw 'must be called with new'; }
}
const v59 = new F57();
const v60 = [6.345269750596144e+307,1.5426121797865451e+308,-1.0,1.0763754168130034e+308,-1.0165609707268582e+308,-2.220446049250313e-16,4.1652134965708285,Infinity,8.22884515469082e+307,-1000000000.0];
const v61 = [-2.0];
v61[3] = 0n;
function F63(a65, a66, a67) {
    if (!new.target) { throw 'must be called with new'; }
    function f68(a69) {
        0 == 268435440n;
        return this;
    }
    this.constructor = f68;
    const v73 = this.constructor;
    try { new v73(v59); } catch (e) {}
    a65[3] = a65;
    class C75 {
    }
    Array(-65536);
    new BigUint64Array(194);
}
new F63(v60);
new F63(v61);
const v87 = new Float64Array(257);
v87.lastIndexOf(4);
