const v0 = [-1.0,-9.883010671316772e+307,543885.7089371986,-Infinity,-192217.24155293417];
const v1 = [960628.7798345995,348.4980768455564,NaN,3.3036611901105175];
[0.6935680501295098,-233.42732192662788,-661376.6078835126,2.0,1.0];
new WeakSet();
class C8 {
    #m(a10, a11, a12, a13) {
        super.h = a12;
        let v14;
        try { v14 = new a13(16, a10, 1, WeakSet, a13); } catch (e) {}
        function f15() {
            new Int8Array(1073741823);
        }
        f15();
        try { v14(a12, 16, v14, WeakSet, a12); } catch (e) {}
        const o21 = {
        };
        new Date(-9223372036854775807, -9223372036854775807, Date, -9223372036854775807);
        return v1;
    }
    constructor(a26, a27) {
        function f29(a30, a31) {
            const o32 = {
                [10000n]: a31,
            };
            return o32;
        }
        f29(10000n, f29);
        new Int8Array(3);
        new Uint8ClampedArray(16);
        new Uint8Array(255);
    }
}
new C8(v0, v0);
new C8(v0, v0);
Number.cos(-1073741824);
`match` in this;
try {
} catch(e51) {
}
new C8(v1, v0);
function f53() {
}
function f54() {
    const t43 = [];
    t43.length = 2147483647;
    const v57 = (a58, a59, a60, a61) => {
        class C64 extends Uint8Array {
            constructor(a66, a67) {
                a66[1] = Float64Array;
                super(a66);
            }
        }
        function F68(a70, a71, a72, a73) {
            if (!new.target) { throw 'must be called with new'; }
        }
    };
    return f54;
}
const v74 = /(?:a*)+q(?<a>.)/guds;
v74.constructor = f54;
function f75(a76) {
    const v77 = a76.constructor;
    const v79 = new Uint8ClampedArray(v74, a76, v77);
    v79.valueOf = f53;
    v79 ^ 3;
    v77(a76, f54);
    class C83 {
    }
    return v77;
}
for (let i86 = 0, i87 = 10; i86 < i87; i87--) {
    for (let v94 = 0; v94 < 50; v94++) {
        f75(v74);
    }
}
