Int16Array.d = Int16Array;
const v8 = new Int16Array(6);
v8[0] = v8;
new Uint16Array(1677);
const v14 = new Uint8ClampedArray(3669);
v14[2358] = v14;
const v15 = [-9223372036854775808];
try { v15.splice("3", NaN); } catch (e) {}
[1000,9007199254740990,4,-4294967296,-1911934186,5,-1686];
new Uint8ClampedArray(5);
function f21() {
    0 < 9;
    const v30 = new Int16Array(16);
    v30[10] = -9007199254740992;
    const o67 = {
        ["constructor"]: "constructor",
        2: 4.0,
        ..."rN",
        "f": "rN",
        __proto__: "rN",
        "g": 4.0,
        "h": "rN",
        m(a33, a34) {
            const v37 = new BigUint64Array(1000);
            const o38 = {
                ...v37,
            };
            a33[this] = "constructor";
            Array();
            class C44 {
                static #a;
                static n(a46, a47) {
                    const v48 = super.d;
                    try { v48(); } catch (e) {}
                    return a46;
                }
                [1];
                static [1] = 255;
                [255];
                f = -65536;
            }
            const v50 = new C44();
            const v51 = new C44();
            let v53 = -65536n;
            let v55;
            try { v55 = v50.m(1n, 10000n, 10000n, 1); } catch (e) {}
            function f56(a57, a58, a59) {
                let v60;
                try { v60 = v55(a58); } catch (e) {}
                v60 = a59;
                v53 >>= a59;
                v50[10] = 1n;
                v51.f;
                return v53;
            }
            const v64 = ("gYPHN").normalize("NFKD");
            try {
                ("constructor").localeCompare(v64);
            } catch(e66) {
            }
            return v64;
        },
    };
    return o67;
}
const v68 = f21();
const v69 = f21();
const v70 = f21();
class C71 {
    #h = v68;
    static #e;
    constructor(a73, a74) {
        for (let i76 = 0; i76 < 9; i76++) {
            Object.defineProperty(v70, f21, { set: f21 });
            v69[i76] **= a73;
        }
    }
}
function F82(a84, a85) {
    if (!new.target) { throw 'must be called with new'; }
    const v86 = this?.constructor;
    let v87;
    try { v87 = new v86(this, a85); } catch (e) {}
    this.c = v87;
}
const v88 = [-16,-2,-56243,65535,268435439,17491,-65535,4294967296];
const v92 = [-65535n,-65535n,-10n];
v92[2] = v92;
const v93 = [v92,-10n,-65535n];
try { v93.sort(6); } catch (e) {}
const v95 = [v88,-65535n,v88,-57761n];
const v96 = v95?.keys;
try { new v96(); } catch (e) {}
const v98 = [-10n,-10n,-10n];
try { v98.reduceRight(v14); } catch (e) {}
const v100 = [v95,-57761n,v15,v92,-65535n];
[v100,v95,v100,v92];
const v102 = [3.836595330454784e+307,-1.1402235194805368e+308];
const v103 = [991.721527488573,-290835.2265090322];
try {
    v102.length = 2499;
} catch(e105) {
}
[-1.0,-1000000.0,-6.453134415503834e+307,-2.2250738585072014e-308,1e-15,-228003.00463890494,1.9400411482062907,-197.7029619198281,Infinity];
function f108(a109, a110) {
    const v114 = [1,17,[Uint8ClampedArray,Uint8ClampedArray]];
    try { v114.slice(v98, v98); } catch (e) {}
    return 6;
}
WeakMap.valueOf = f108;
const v116 = /(?:a*)+q(?<a>.)/guds;
function f117(a118) {
    const o122 = {
        set b(a120) {
        },
        get d() {
            return a118;
        },
        __proto__: v116,
    };
    try { o122.exec(Uint8ClampedArray); } catch (e) {}
    return o122;
}
f117(v116);
const v125 = new WeakMap();
try { v125.has(Int16Array); } catch (e) {}
const t126 = "g";
t126.e = "g";
const v131 = ("-1723624938").slice(9, "g").normalize();
try { v131.substring(v103, WeakMap); } catch (e) {}
class C133 {
    constructor(a135, a136) {
        a136.sup(v131, a135).toLocaleLowerCase();
    }
}
const v139 = [v103,v125];
[v125];
const v141 = [v103,v125];
let v142;
try { v142 = v141.pop(); } catch (e) {}
try { v142.set(2499, 3669); } catch (e) {}
const v144 = /(x)(x)(x)\1/uis;
function f145(a146, a147, a148, a149) {
    const o156 = {
        4294967295: v139,
        [v144](a151, a152, a153, a154) {
            super.test();
        },
    };
    return a147;
}
class C158 {
}
C158.d = C158;
~295968041;
const v162 = [295968041,[-1024,536870889,65536,65536]];
const o163 = {
    "arguments": v162,
    "type": "-1723624938",
};
o163.b = o163;
const v165 = -8298n <= -8298n;
v165 || v165;
-996.1550562984842 - -996.1550562984842;
8.438590633230234e+306 / 8.438590633230234e+306;
const v174 = [-936145422,536870912,127,257,-36772,-15984,2];
const v175 = [0.00952483356421907,-3.0,2.220446049250313e-16];
function f176() {
    return v175;
}
function f177(a178) {
    return f176;
}
v175.fill(f177, f177);
try { v174.reverse(); } catch (e) {}
v174.length = 6;
const v181 = [];
function f182() {
    gc(256);
    function* f187(a188) {
        yield [9007199254740990,-4294967296,-1205995130,-12581,9];
        return -1.7570084557226905e+308;
    }
    const o194 = {
        toString() {
            super[this];
            return this;
        },
        ...v181,
        n() {
            return this;
        },
    };
}
const v196 = new Set();
let [v197,,...v198] = v196;
v197.setUTCFullYear();
const o200 = {
    __proto__: v144,
};
f182();
f182();
gc.caller;
function f205() {
    function f206(a207) {
        try {
            const o208 = {
            };
        } catch(e209) {
        }
    }
    try {
    } catch(e210) {
    }
}
gc();
165 >> 165;
const v215 = new Uint8Array(165);
v215[77] = v215;
const v216 = v215.lastIndexOf();
-v216;
v216 | v216;
const v220 = (a221, a222, a223, a224) => {
    a222 >> a222;
    a223 >>> a223;
    ~a224;
    function F228(a230, a231, a232, a233) {
        if (!new.target) { throw 'must be called with new'; }
    }
};
try { v220(Uint8Array, v216, v216, 8.438590633230234e+306); } catch (e) {}
