class C3 {
    static 536870887;
    constructor(a5) {
        a5[a5] <<= 5;
        this && "9223372036854775807";
    }
    get c() {
        this[3859] = this;
        try {
            this.d = 0.7258539023590321;
        } catch(e8) {
        }
        return "9223372036854775807";
    }
}
new C3(C3);
new C3(C3);
new C3("9223372036854775807");
new Int8Array(3670);
new Uint8Array(3268);
new Int16Array(512);
const v24 = new Date();
function F25(a27) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = F25;
}
const v28 = new F25(F25);
gc();
delete v28.g;
let v32 = -1024;
function F33(a35, a36, a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
}
const v39 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function F41(a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
}
class C45 {
}
const v47 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
for (let v49 = 0; v49 < 5; v49++) {
    function f50() {
        let v53 = Float64Array;
        const v55 = Array();
        function f56() {
            return v53;
        }
        function f57(a58) {
            return f50;
        }
        Object.defineProperty(v55, 0, { configurable: true, enumerable: true, get: f56, set: f57 });
        v55.unshift();
        new Set(v47);
        v53 = F33;
        const v62 = v39.length;
        try {
            v39.forEach();
        } catch(e64) {
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        class C67 {
        }
        const v68 = new C67();
        v68.__proto__ = F41;
        ["Vre"];
        class C70 {
        }
        const v71 = Symbol.toPrimitive;
        Symbol.match;
        const o76 = {
            toString(a74, a75) {
                return a74;
            },
        };
        const o98 = {
            "c": -4294967297n,
            [522675525n](a79, a80) {
            },
            valueOf(a82, a83) {
                return f50;
            },
            [-4294967297n](a85, a86, a87, a88) {
            },
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v47,
            [v71]() {
            },
            "type": C45,
            valueOf(a91, a92) {
                return F33;
            },
            get h() {
                return f50;
            },
            4: "Vre",
            toString(a95, a96, a97) {
                return C67;
            },
            5: -4294967295,
            6: -268435456,
        };
        new Float32Array(v68, v32, v49);
        v32 %= -268435456;
        new Uint32Array(v62, -4294967295, -4294967295);
        new v53();
        new Uint16Array(Symbol);
        return f50;
    }
    f50();
    %OptimizeFunctionOnNextCall(f50);
}
const v107 = new Set();
const v108 = v107.add(v24);
let [v109,,...v110] = v107;
v109.setUTCHours(v108, Float64Array, v110, 268435441);
v109.setUTCFullYear();
