const v2 = [-1245897732,-9,-356186296,128,12,1119687909,6,0,268435439,-2147483649];
let o3 = {
};
const v4 = o3 ^ o3;
v2.includes(++o3, v4);
new Float64Array(389);
new Int16Array(257);
new Int16Array(129);
new BigUint64Array(255);
function f22(a23, a24) {
    const o28 = {
        "f": a24,
        [a23]: -12,
        set e(a26) {
        },
    };
    return o28;
}
class C30 {
}
const t20 = 9223372036854775807;
const v32 = new t20();
const v33 = /anVXYFzN(x)(x)(x)\3/gvdms;
try { v32.reduceRight(v33); } catch (e) {}
const v36 = this - this;
const v37 = Array();
const v38 = new v36();
function f39(a40, a41, a42) {
    const o50 = {
        toString(a44, a45, a46) {
            a41 < a44;
            super[v38];
            return a41;
        },
        get d() {
            return a41;
        },
    };
    return o50;
}
%PrepareFunctionForOptimization(f39);
f39(v37, v38, f39());
%OptimizeFunctionOnNextCall(f39);
f39();
