let v2 = 2.6393324825351084e+307;
function f3(a4, a5) {
    const o27 = {
        "c": a5,
        "f": a4,
        get h() {
            function f7() {
                function f8() {
                    const o9 = {
                        "apply": f3,
                        "call": f3,
                        "construct": f3,
                        "defineProperty": f3,
                        "deleteProperty": f3,
                        "get": f3,
                        "getPrototypeOf": f3,
                        "has": f3,
                        "isExtensible": f3,
                        "ownKeys": f3,
                        "preventExtensions": f3,
                        "set": f3,
                        "setPrototypeOf": f3,
                    };
                    new Proxy(this, o9);
                    return 4.611516087498683e+307;
                }
                return f8;
            }
            function f12(a13) {
                f7();
            }
            Object.defineProperty(this, "valueOf", { writable: true, configurable: true, enumerable: true, get: f7, set: f12 });
            this != 2.0;
            function F16(a18, a19, a20) {
                if (!new.target) { throw 'must be called with new'; }
                this.a = this;
                try {
                    this.b = 2.0;
                } catch(e21) {
                }
                try {
                    this.e = v2;
                } catch(e22) {
                }
                try {
                    this.a = 2.0;
                } catch(e23) {
                }
            }
            new F16(a4, a5, v2);
            new F16(2.0, v2, 2.0);
            new F16(v2, 4.611516087498683e+307, 4.611516087498683e+307);
            return 2.0;
        },
    };
    o27.toString = f3;
    o27.h;
    return o27;
}
const v29 = f3(2.0, 4.611516087498683e+307);
let v30 = f3(v2, v2);
const v31 = f3(4.611516087498683e+307, v2);
v31.h;
function f33(a34, a35) {
    const o49 = {
        __proto__: v31,
        "f": a35,
        get d() {
            super.d ||= 2.0;
            function F37(a39, a40, a41, a42) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.g = a34;
                } catch(e43) {
                }
                try {
                    this.h = a39;
                } catch(e44) {
                }
                try {
                    this.e = a41;
                } catch(e45) {
                }
            }
            new F37(this, v2, v29, v2);
            new F37(F37, v2, this, v2);
            new F37(4.611516087498683e+307, 2.0, v29, 4.611516087498683e+307);
            return 4.611516087498683e+307;
        },
    };
    return o49;
}
f33(v30, v30);
f33(v31, v29);
f33(v29, v30);
Map.constructor = f3;
const v54 = Map?.constructor;
try { new v54(v31); } catch (e) {}
new Map();
class C57 {
    valueOf(a59, a60, a61) {
        const o64 = {
            "maxByteLength": 852343192,
        };
        const v66 = new SharedArrayBuffer(10, o64);
        new Uint16Array(v66);
        return f33;
    }
    3 = f33;
    static #e = 4.611516087498683e+307;
}
C57.d = C57;
new C57();
new C57();
new C57();
const v72 = [2.220446049250313e-16,1000000.0,-832083.505850983,0.4718386381385684,1000.0,-5.0,9.814259698721895e+307,-659970.7982908424,-5.0];
const v73 = [v72];
function f74(a75, a76) {
    const v79 = new Uint16Array(4294967295);
    function F82(a84, a85, a86) {
        if (!new.target) { throw 'must be called with new'; }
        const v87 = this?.constructor;
        try { new v87(Uint16Array, a86, a86); } catch (e) {}
        a84 * a84;
        a86++;
        this.d = a84;
        try {
            this.description = v79;
        } catch(e91) {
        }
        try {
            this.g = Int32Array;
        } catch(e92) {
        }
    }
    try { new F82(F82, 256, 256); } catch (e) {}
    return 4.611516087498683e+307;
}
function f94() {
    function f95(a96) {
        v30 /= v29;
        v2 = a96;
        return a96;
    }
    return f95;
}
function f97(a98) {
    v72[Map];
}
Object.defineProperty(f74, Symbol.species, { configurable: true, enumerable: true, get: f94, set: f97 });
v73.constructor = f74;
-2147483649 - -2147483649;
const v104 = v73.flat(-2147483649);
try { v104.groupToMap(4.611516087498683e+307); } catch (e) {}
