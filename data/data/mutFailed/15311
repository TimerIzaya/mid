class C3 {
    #m(a5) {
        super[a5];
        try {
            ("valueOf").#m(-85271.61836108728, this, "mSt2S");
        } catch(e8) {
        }
        return -85271.61836108728;
    }
    b;
    8 = -85271.61836108728;
    #d = "valueOf";
}
try { new C3(); } catch (e) {}
const v10 = new C3("mSt2S");
const v11 = new C3();
const v12 = new C3(C3);
v12[8];
function F14(a16, a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "d", { writable: true, value: v10 });
    this.d = v11;
    const v20 = a17?.__defineGetter__;
    try { new v20(this, a17); } catch (e) {}
    a18.d = a18;
    try {
        this.d = C3;
    } catch(e22) {
    }
}
const v23 = new F14(v10, v12, v12, C3);
v23.length = v23;
const o26 = {
    "maxByteLength": 2019,
};
const v28 = new SharedArrayBuffer(438, o26);
new Float32Array(v28);
const v31 = v23.length;
const v32 = new F14(v10, v10, v11, v12);
v32.length;
const v34 = new F14(C3, v12, v10, v10);
`1572851711${v34}3`;
%VerifyType(v28);
for (let v36 = 0; v36 < 32; v36++) {
    v31["p" + v36] = v36;
}
const o44 = {
    cosh(a40) {
        const o42 = {
        };
        return Worker(o42);
    },
};
try { o44.n(); } catch (e) {}
