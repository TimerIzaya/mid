const v4 = new Set();
const o6 = {
};
gc(o6);
const v8 = [-1539,1,12];
function f9() {
    return f9;
}
function f10(a11, a12) {
    const o13 = {
        [a11]: v8,
    };
    return a11;
}
o6(f10);
f10(f9);
function F16(a18) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = Set;
    } catch(e19) {
    }
}
const v20 = new F16(1073741824);
new F16(1038650265);
const v22 = new F16(1038650265);
const v24 = new Date();
v24.getFullYear();
const v27 = new BigInt64Array();
const v28 = `
    var c = v27;
    class C32 {
    }
    function f34(a35, a36, a37, a38) {
        const o46 = {
            129: a36,
            "a": C32,
            "c": "Ju",
            "e": "Ju",
            "h": a38,
            "d": a37,
            p(a40, a41, a42) {
                return "Ju";
            },
        };
        return a35;
    }
    class C47 extends Date {
    }
    const v48 = new C47();
    v48.getSeconds();
`;
class C50 extends Set {
    constructor(a52, a53, a54) {
        super(v4);
        const v56 = Symbol.iterator;
        const o65 = {
            [v56]() {
                let v58 = 10;
                const o64 = {
                    next() {
                        v58--;
                        const v62 = v58 == 0;
                        const o63 = {
                            "done": v62,
                            "value": v58,
                        };
                        return o63;
                    },
                };
                return o64;
            },
        };
    }
}
new C50(v22, 1038650265, 1073741824);
new C50(v20, 1038650265, 16);
new C50(v22, 1073741824, 1073741824);
class C69 {
}
const v72 = [2.220446049250313e-16,-Infinity,NaN,-1e-15,-4.0,-2.2250738585072014e-308,-742.8087895557678,-4.0,Infinity,655658.0990783614];
for (let v73 = 0; v73 < 5; v73++) {
}
const v76 = new Uint8ClampedArray(16);
new Uint32Array(v76);
new Set(v72);
function F81(a83, a84) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e85) {
    }
    try {
        const t92 = Math.clz32();
        new t92();
    } catch(e88) {
    }
}
new F81();
new F81();
