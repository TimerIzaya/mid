const v1 = new Date();
let v4 = 128;
v4 << v4;
const v6 = [0.0,-1.0,461.7282828451778];
let v7;
try { v7 = v6.entries(); } catch (e) {}
const v8 = [2.2250738585072014e-308,0.2922354078713525,8.332097152458164];
const v9 = [-3.0,4.7975840936627854e+306,2.318735959138198e+307,Infinity,-0.4081464312917067,NaN];
let v10 = 52;
Date();
[,v10] = v6;
const v12 = v1 instanceof v7;
let v13 = BigInt;
[v10,v13,v4] = v6;
Int16Array.e = Int16Array;
const v15 = new Int16Array(v10);
let v18 = 0;
while (v18 < 9) {
    v15 - v12;
    v9[2147483648] *= v18;
    v18++;
}
let v23;
try { v23 = new BigInt64Array(-4096, v10, v4); } catch (e) {}
new BigInt64Array(199);
new Int8Array(383);
class C28 {
}
new Date();
const v30 = C28.__lookupGetter__;
try { v30.toString(); } catch (e) {}
try { v30(); } catch (e) {}
Date[v8];
v23[9] = Int16Array;
v1[2984];
try {
    Date.__proto__ = v7;
} catch(e35) {
}
