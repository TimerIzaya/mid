new Uint8Array(127);
const v5 = new BigUint64Array(205);
const o11 = {
    [-352741132]: -352741132,
    set b(a9) {
    },
    get c() {
        return this;
    },
    "b": 2.220446049250313e-16,
};
new Uint16Array(3336);
const v17 = new Uint16Array();
class C18 {
    [255] = 205;
    static m(a20, a21) {
    }
    [false] = false;
    static [255];
    [v17] = v17;
}
[-796252.260579495,-2.220446049250313e-16,0.5523434820501852,0.2871262078923146,-1.2218579745756308e+308];
[-1.7976931348623157e+308,1000000.0,-Infinity,1000000.0,1e-15,4.0,0.05361702581874339,2.220446049250313e-16,-384803.16239734297];
[Infinity,-175.56921732966237,0.10951056425400074,-457118.10109070153,-1.332503813750002e+308];
function f25() {
    0 < 9;
    const v34 = new Int16Array(16);
    v34[10] = -9007199254740992;
    const o71 = {
        ["constructor"]: "constructor",
        2: Uint8Array,
        ..."rN",
        "f": "rN",
        __proto__: "rN",
        "g": 4.0,
        "h": "rN",
        m(a37, a38) {
            const v41 = new BigUint64Array(1000);
            const o42 = {
                ...v41,
            };
            a37[this] = "constructor";
            Array();
            class C48 {
                static #a;
                static n(a50, a51) {
                    const v52 = super.d;
                    try { v52(); } catch (e) {}
                    return a50;
                }
                [16];
                static [1] = 255;
                [255];
                f = -65536;
            }
            const v54 = new C48();
            const v55 = new C48();
            let v57 = -65536n;
            let v59;
            try { v59 = v54.m(1n, 10000n, 10000n, 1); } catch (e) {}
            function f60(a61, a62, a63) {
                let v64;
                try { v64 = v59(a62); } catch (e) {}
                v64 = a63;
                v57 >>= a63;
                v54[10] = 1n;
                v55.f;
                return -9007199254740992;
            }
            const v68 = ("gYPHN").normalize("NFKD");
            try {
                ("constructor").localeCompare(v68);
            } catch(e70) {
            }
            return v68;
        },
    };
    return o71;
}
const t79 = f25();
const v73 = t79();
const v74 = f25();
for (let i76 = 0; i76 < 9; i76++) {
    Object.defineProperty(v74, f25, { set: f25 });
    v73[i76] **= v5;
}
for (let v82 = 0; v82 < 5; v82++) {
    const v86 = new BigInt64Array(5);
    function f87() {
        return v86;
    }
    const v89 = v82 >> -18321;
    Math.log1p(v82);
    Math.tan(v89);
}
