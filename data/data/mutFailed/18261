const v2 = new Uint32Array(5);
let v3 = 127;
const v4 = new Uint32Array();
v4.getPrototypeOf;
const t3 = "function";
t3[7] = "function";
const v8 = ("function").substring(5, v4, 5, "function", "8", v4);
v3--;
this[256] = BigUint64Array;
const v13 = [10,829820207,16,-4294967296,-9007199254740992,-65535,-2147483648,1024];
let v14;
try { v14 = v13.forEach(256); } catch (e) {}
new Int16Array(v14);
const v18 = new Uint8ClampedArray(v3);
Uint8Array.d = Uint8Array;
for (let i23 = 0, i24 = 10;
    i23++, i23 < i24;
    (() => {
        i23 % i23;
        const v30 = [601759695];
        const v31 = [1073741824,1073741823,1376142744,1073741825];
        function f32(a33, a34, a35, a36) {
            a33 != a33;
            try { a34(i24, a35, v31, a35); } catch (e) {}
            a35 >> a35;
            function f40() {
                return a33;
            }
            function f41(a42, a43) {
                return a42;
            }
            try { f41(v30, v30); } catch (e) {}
            let v45;
            try { v45 = f41(); } catch (e) {}
            const v46 = f41(v31, v18);
            try { v46.group(f40); } catch (e) {}
            try { ("find").codePointAt(v45); } catch (e) {}
            try { v31["find"](..."find", a36, ...v30, ...v31); } catch (e) {}
            return v18;
        }
        try { f32(Uint8Array, Uint8Array, Uint8Array, i23); } catch (e) {}
        for (let v52 = 0; v52 < 10; v52++) {
            v52 >>> v52;
            f32(v52, f32, i23, v52);
        }
    })()) {
}
new v8(2956);
function F58(a60, a61, a62) {
    if (!new.target) { throw 'must be called with new'; }
    a61 + a61;
    const v64 = this?.constructor;
    try { new v64(a62, this, Uint8ClampedArray); } catch (e) {}
    function f68(a69, a70, a71) {
        const o72 = {
            "h": "8",
        };
        return o72;
    }
    f68(1000000.0, -3.9870582640049523, 1000000.0)["toString"]();
    a61 * a61;
    a62 | a62;
    try {
        this.f = a62;
    } catch(e78) {
    }
}
F58.b = F58;
F58.arguments;
new F58(v2, 2956, v8);
const v81 = new F58(Uint8Array, 5, v3);
v81.f;
new F58(v81, 5, 2956);
const t73 = [1073741823,64,-192774235];
t73.length = 127;
let v86 = -532.4669449879644;
v86++;
try {
    const o88 = {
    };
    o88.f = v86;
} catch(e89) {
}
/l5a\s(?<a>.)\k<a>+/gudy;
-123325910 !== -123325910;
