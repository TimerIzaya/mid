[257,-1024];
const v1 = [2,-65536,606379085,-348,-9223372036854775807,-65536];
const v2 = [12,-9223372036854775808,1073741824,-13,4,-65536,16];
class C4 {
}
class C5 {
}
this.__proto__ = v2;
class C12 {
    constructor(a14, a15) {
        function F16(a18, a19, a20) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                C4.d = -2;
            } catch(e21) {
                const v22 = [-1000000.0,-1.0,952.4163692749257,41232.51719836402,-2.220446049250313e-16,869.918809614255,0.6566814488589754,-2.299816654271874,1000000000.0];
                function f23() {
                    let v24 = -268435456;
                    v24 ^ v24;
                    v24++;
                    const o27 = {
                        __proto__: v22,
                    };
                    try { o27.every(); } catch (e) {}
                    return v22;
                }
                %OptimizeFunctionOnNextCall(f23);
            }
            try {
                this.f = a19;
                const v30 = [65537,1073741825,7841,-12,13];
                const v31 = [1073741823,4294967295];
                v31[1] = v31;
                const v32 = new C5(v30, v31, WeakSet);
                new this(v31, v31, v32);
            } catch(e34) {
                const v36 = /[a-zA-Z0-9]/gvisy;
                const v37 = /abc?/gvmy;
                v37[14] &= v36;
                v37.exec("Q8F");
            }
        }
        const v39 = new F16(a15, 270634828, F16);
        const v40 = new F16(v39, -2, a14);
        new F16(v40, a14, v40);
    }
}
const v42 = new C12(270634828, -2);
new C12(53304, 53304, v42, 3.0, v1);
new Float64Array(9007199254740991);
function f47() {
    return 270634828;
}
new C12(53304, 270634828);
function f52() {
}
const v53 = [155533.8602852358,2.0];
function F55() {
    if (!new.target) { throw 'must be called with new'; }
    const v57 = this?.d;
    try { new v57(202); } catch (e) {}
    for (const v62 of Int8Array(C5)) {
        v53[658291203] = null;
        Math.g = Int8Array;
        f52--;
    }
}
new F55();
const v68 = new Int32Array(Int32Array);
let {...v69} = v68;
