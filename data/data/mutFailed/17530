const v2 = new Int32Array(1008);
new BigInt64Array(1024);
new Float64Array(255);
const v9 = /[xyz{1,}]/vdy;
/A/vdiy;
/foo(?!bar)baz8H/gu;
const o16 = {
};
v2.h = o16;
const v18 = !o16;
const v19 = 1842642860 % v18;
v19 % v19;
const v21 = new WeakMap();
try { v21.delete(v18); } catch (e) {}
class C25 {
    static {
        try {
        const t0 = "boolean";
        t0(this);
        } catch (e) {}
    }
}
try { new C25(); } catch (e) {}
const v30 = ("isInteger")?.replaceAll;
const v37 = [-2147483647,64098,-9383,1024,129,-5];
[1000,-16,-38597,12,-3399,32508];
const v39 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v41 = new Uint32Array();
const v43 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v44 = [601759695];
const v45 = [1073741824,1073741823,1376142744,1073741825];
function f47(a48, a49, a50, a51) {
    function f53() {
        let v56 = Float64Array;
        v56 = a49;
        b = v44;
        v39.length;
        try {
            v45.forEach(1024);
        } catch(e59) {
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o61 = {
        };
        const o76 = {
            "c": -4294967297n,
            "c": v44,
            valueOf(a64, a65) {
            },
            1073741824: v41,
            "maxByteLength": -268435456,
            "b": -4294967295,
            [-4294967297n](a67, a68, a69, a70) {
                class C72 extends Date {
                    static get c() {
                    }
                }
                eval();
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v43,
            256: a51,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            6: -268435456,
        };
    }
    f53();
    const v79 = new Int8Array();
    v79.buffer.slice(2147483648);
    const v85 = new Int32Array(1024);
    v85[3];
    for (let v87 = 0; v87 < 10; v87++) {
    }
    %OptimizeFunctionOnNextCall(f53);
    let v89;
    try { v89 = v45["find"](..."find", a51, ...v44, ...v45, ...522675525n); } catch (e) {}
    v89 <= a50;
    return arguments;
}
for (let v91 = 0; v91 < 10; v91++) {
    f47();
}
%OptimizeFunctionOnNextCall(f47);
f47();
[-50328,-14,3,128,-11,64,-65535];
class C95 {
    [v37] = -1000000.0;
    constructor(a97, a98, a99, a100) {
        %VerifyType(a100);
        super[this];
    }
    g;
    c;
    #toString(a103, a104, a105) {
    }
    1 = 257n;
}
new C95(1073741825n, 1.0, 7.589647165982214);
const v107 = new C95(411585671n, -1000000.0, -1000000.0, 1.0);
new C95(v107, -1000000.0, 1.0);
/(?:a*)+bU\u0034xyz{1,32}/udi;
/vfoo|(bar|baz)|quux/gvds;
/JO/gvy;
class C114 {
    #m(a116, a117) {
        function f118() {
            return a117;
        }
        super[a117] = "f";
        %VerifyType(a117);
        return f118;
    }
    static c;
}
try { C114(); } catch (e) {}
const v120 = new C114();
const v121 = new C114();
v121?.constructor;
const v123 = new C114();
v9?.constructor;
class C125 {
    p(a127) {
        this.g ^= this[8];
    }
    static #n(a130, a131, a132, a133) {
    }
    7 = v123;
    #a = v121;
}
const v134 = new C125();
v134[7] = v134;
const v135 = new C125();
v135[7] = v135;
const v137 = [[],"f",v123,381717.6504737276];
[v120];
function F139() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(); } catch (e) {}
}
new F139();
const v143 = new F139();
function F144(a146, a147) {
    if (!new.target) { throw 'must be called with new'; }
    const v148 = a147?.__lookupGetter__;
    try { v148(); } catch (e) {}
    try { this.constructor(F144, C25); } catch (e) {}
    a146.e = a146;
}
F144.arguments = F144;
new F144(v143);
("Hyo9")[1];
const t156 = "at";
t156[1] = "at";
const v156 = ([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap;
v156?.constructor;
const v158 = [-4.202468609045087];
try { v158.every(v137); } catch (e) {}
[0.8434386161503777];
("4i")?.toWellFormed;
const t163 = "4i";
t163[1] = "4i";
const t167 = "RpXR";
t167[3] = "RpXR";
const t169 = "RpXR";
t169[1] = "RpXR";
("c")?.toLocaleUpperCase.length;
class C168 {
    constructor(a170) {
        ("valueOf").localeCompare(a170, "valueOf");
    }
}
const v172 = new C168();
const t178 = v172.constructor;
new t178(C168);
try { new v30("998423439", C25); } catch (e) {}
9 >> 9;
try { Uint32Array.from(15n); } catch (e) {}
const v184 = new Uint32Array(2432);
const o185 = {
    ...v184,
};
const v187 = 9007199254740991n * 9007199254740991n;
v187 * v187;
Math.sin(-5345);
function f192() {
    const o197 = {
        [-1000000.0]: 0.0,
        set e(a196) {
        },
    };
    return f192;
}
v156.caller = f192;
const v198 = f192();
const v199 = f192();
class C200 {
    static [f192] = v199;
}
try { C200.bind(v198); } catch (e) {}
