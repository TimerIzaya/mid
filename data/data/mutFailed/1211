Uint8ClampedArray.BYTES_PER_ELEMENT;
new Uint8ClampedArray(1000);
const v12 = new Int32Array(10);
1135 - 1135;
try { BigUint64Array(-12, -12, v12); } catch (e) {}
const t5 = 255;
new t5(1135);
0.941857606566444 + 0.941857606566444;
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    const v26 = a24 % a24;
    v26 - v26;
    a25 >>> a25;
    const v29 = this.constructor;
    v29.length = v29;
    try { new v29(0.8735699512350641, -3.413527541634011e+307); } catch (e) {}
}
new F22();
new F22(0.941857606566444, 0.941857606566444);
