const v2 = new Float64Array(1330);
const v5 = new Uint16Array(7);
const v8 = new Uint8Array(1024);
try { v8.findIndex(7); } catch (e) {}
class C10 {
    static [-2];
    m(a12, a13) {
        const v14 = this[3808];
        const o15 = {
            __proto__: v2,
            "a": 1024,
            [v14]: a13,
        };
        Math.acos(41220);
        Math.hypot(7);
        41220 << 41220;
        41220 && 7;
        return Float64Array;
    }
}
function f23(a24) {
    function f25(a26, a27) {
        function F28(a30, a31) {
            if (!new.target) { throw 'must be called with new'; }
            const v32 = this.constructor;
            let v33;
            try { v33 = new v32(); } catch (e) {}
            try { this.constructor(a26, f25, v33, F28); } catch (e) {}
        }
        new F28(a26, a27);
        return f25;
    }
    f25(f25, f25);
    f25();
    return Float64Array;
}
C10.constructor = f23;
const v38 = C10?.constructor;
try { new v38(Uint8Array); } catch (e) {}
new C10();
const v41 = new C10();
v41[Symbol.toPrimitive] = f23;
new C10();
/(x)(x)(x)\1xyz??a.a{1,2}?/gvdmy;
for (let i48 = 0, i49 = 10;
    (() => {
        i48 | i48;
        -i49;
        const v52 = i48 < i49;
        v52 && v52;
        return v52;
    })();
    (() => {
        const v56 = i48++;
        v56 != v56;
        v41 + i49;
        const v59 = v5[765];
        try { v59(v56); } catch (e) {}
        new Uint8Array(1024);
        new BigInt64Array(16);
        5 !== 5;
        const v70 = new Uint8ClampedArray(5);
        v70.byteLength;
    })()) {
    /foo(?!bar)baz/vsy;
    /(x)(x)(x)\4*/iy;
    /Wa\b!/u;
    %VerifyType(v2[205]);
    i49 >> i49;
}
