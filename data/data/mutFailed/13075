const v2 = new Float32Array(256);
let v4 = Float32Array;
new v4(1000);
let v6 = 2;
const v8 = new Uint16Array(v6);
class C9 {
    #e;
    static 268435439 = 256;
    static 817 = v6;
    get h() {
        this[-1] = Float32Array;
        try {
            this.#e = v4;
        } catch(e11) {
        }
        return v8;
    }
    toString(a13, a14) {
        this[7] = a13;
        [,,v4,v6] = v2;
        return v8;
    }
    #f = Float32Array;
    [v2];
    f;
    268435440;
}
new C9();
new C9();
const v17 = new C9();
const v18 = [-24359,-1175707914,-3801176,9007199254740992,-15,0,-37142,-4096,-2,257];
[9223372036854775807,-5,-9];
[257];
new Uint16Array(...v18, 1000, ...v8, v17);
new Uint8Array(3);
new Float64Array(12);
new BigInt64Array(7);
function F34(a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    a37 * a37;
    const v39 = this.constructor;
    2 >= 2;
    try { new v39(this); } catch (e) {}
}
const v43 = new F34();
const t45 = v43.constructor;
new t45();
