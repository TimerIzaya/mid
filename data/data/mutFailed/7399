function f0() {
    const o11 = {
        "f": 128,
        n(a5) {
            super.e;
            %VerifyType(128);
            return this;
        },
        get b() {
            for (const v8 of "s5wJ") {
                try {
                    super.atan(v8, v8, v8, v8, this);
                } catch(e10) {
                }
            }
            return "s5wJ";
        },
    };
    return o11;
}
f0();
const v13 = f0();
const v14 = f0();
function F15(a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = f0;
    } catch(e18) {
    }
    try {
        this.h = v14;
    } catch(e19) {
    }
}
const v20 = new F15(v13);
const v21 = new F15(v14);
try { v21.a(); } catch (e) {}
new F15(v13);
("Aki")[2];
-9007199254740991 / -9007199254740991;
~2147483649;
let v35 = 1000000000000.0;
-v35;
class C37 {
    b = -142.577867451237;
    [v35] = -142.577867451237;
    #m(a39) {
        const v41 = Symbol.toPrimitive;
        const o63 = {
            [v41]() {
                let v43 = Math;
                const v45 = ++v35;
                const v46 = v35 ** v35;
                v43 & (15462 ** 15462);
                +Infinity;
                (15462 || 1000000000000.0) + -142.577867451237;
                v43--;
                +v35;
                v43.log(v45);
                v43.sin(v46);
                try {
                    Symbol("toDateString");
                } catch(e62) {
                }
                return -142.577867451237;
            },
        };
        return this;
    }
}
C37.name = C37;
BigUint64Array.name = BigUint64Array;
const v66 = new BigUint64Array(1000);
v66[641] = v66;
const o67 = {
    ...v66,
};
new C37();
new C37();
new C37();
-1246;
const v74 = new Uint8Array(1246);
try { v74.findLast(o67); } catch (e) {}
Uint16Array.prototype = Uint16Array;
const v78 = new Uint16Array(512);
const t85 = [];
t85[6] = 4294967295;
ReferenceError(ReferenceError).stack;
try { new Int32Array(1, 1, 1); } catch (e) {}
function F87() {
    if (!new.target) { throw 'must be called with new'; }
    typeof arguments;
    gc();
}
const v93 = new F87();
const v94 = v93?.constructor;
try { new v94(); } catch (e) {}
const v96 = v93.constructor;
v96.f = v96;
new v96();
class C98 {
}
try { new C98(); } catch (e) {}
const v101 = new Date();
try { v101.getUTCFullYear(); } catch (e) {}
const v104 = new Set();
const v105 = v104.add(v101);
try { v105.add(v20); } catch (e) {}
const v107 = new Int32Array(1);
v107[0];
function f109() {
}
class C110 extends f109 {
}
new C110();
[0.0,1000000.0];
function f113() {
    let v114 = 0;
    do {
        const o115 = {
        };
        o115.c = o115;
        try {
            o115.h = f109;
        } catch(e116) {
        }
        try {
            const o117 = {
            };
            o117.h = o117;
            o117.h = f109;
            o117.f = Uint8Array;
        } catch(e118) {
        }
        try {
            const o119 = {
            };
            o119.h = o119;
            o119.h = f109;
            o119.f = Uint8Array;
            o119.d = f109;
        } catch(e120) {
        }
        try {
            const o121 = {
            };
            o121.h = f109;
            o121.f = Uint8Array;
            o121.d = v78;
        } catch(e122) {
        }
        const v123 = v114++;
        v123 + v123;
    } while (v114 < 10)
    for (const v130 of Array(4087)) {
    }
    return Array;
}
f113.length;
f113();
f113();
