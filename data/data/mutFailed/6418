const v7 = [-256,[257,-351470466]];
[v7,-256,v7,-15,-4294967295];
function f12(a13, a14, a15, a16) {
    const o17 = {
    };
    return o17;
}
const v18 = f12(f12, f12, f12, f12);
const v21 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v22 = [601759695];
const v23 = [1073741824,1073741823,1376142744,1073741825];
function f25(a26, a27, a28, a29) {
    function f31(a32) {
        return a27;
    }
    Object.defineProperty(arguments, "toString", { enumerable: true, value: f31 });
    try { arguments.toString(); } catch (e) {}
    function f34() {
        const v36 = ("Vre")?.toLocaleUpperCase;
        try { new v36(); } catch (e) {}
        try { ("Vre").fixed(); } catch (e) {}
        let v40 = -268435456;
        v40--;
        -(v40 + v40);
        const o57 = {
            "c": -4294967297n,
            [522675525n](a45, a46) {
            },
            ..."Vre",
            "maxByteLength": -128,
            "c": v22,
            valueOf(a48, a49) {
            },
            "e": v40,
            "maxByteLength": -4294967295,
            "arguments": v21,
            ...v22,
            "type": "Vre",
            ..."Vre",
            valueOf(a51, a52) {
                return a51;
            },
            ..."Vre",
            4: "Vre",
            "c": v40,
            "type": "Vre",
            "type": "Vre",
            toString(a54, a55, a56) {
                return -4294967297n;
            },
            5: -4294967295,
            6: v40,
        };
        try { o57.valueOf(); } catch (e) {}
        return "Vre";
    }
    f34.length;
    f34();
    Int8Array.a = Int8Array;
    const v62 = new Int8Array();
    try { v62.findIndex(v18); } catch (e) {}
    const v64 = v62.buffer;
    function f65(a66) {
        return a66;
    }
    Object.defineProperty(f65, Symbol.species, { enumerable: true, value: f65 });
    v64.constructor = f65;
    const v70 = v64.slice(2147483648);
    %OptimizeFunctionOnNextCall(f34);
    try { ("find").strike(); } catch (e) {}
    const o73 = {
    };
    try {
        o73.e = a27;
    } catch(e74) {
    }
    try {
        const o75 = {
        };
        function f76() {
            return o75;
        }
        function f77(a78) {
            [v23,-15,o75,a29,o75];
            [o75];
            [a78,700182785n];
        }
        Object.defineProperty(o75, "e", { writable: true, configurable: true, enumerable: true, get: f76, set: f77 });
        o75.e = a27;
        o75.g = -4294967297n;
    } catch(e82) {
    }
    try {
        let o83 = {
        };
        o83.e = o83;
        function f84(a85) {
            o83 = a85;
            return a85;
        }
        Object.defineProperty(o83, "g", { set: f84 });
        o83.e = a27;
        o83.g = -4294967297n;
    } catch(e86) {
    }
    try {
        const o87 = {
        };
        o87.c = o87;
        o87.e = a27;
        o87.g = -4294967297n;
        o87.c = v70;
    } catch(e88) {
    }
    let v89;
    try { v89 = v23["find"](..."find", a29, ...v22, ...v23, ...522675525n); } catch (e) {}
    v89 <= a28;
    return arguments;
}
for (let v91 = 0; v91 < 5; v91++) {
    f25();
}
%PrepareFunctionForOptimization(f25);
f25();
%OptimizeFunctionOnNextCall(f25);
f25();
