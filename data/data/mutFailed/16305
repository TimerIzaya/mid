let v0 = 1073741823n;
let v4 = -18087;
class C6 {
    static a;
    [v4] = 12;
    static d;
    static [9];
    constructor(a8, a9, a10, a11) {
        const o12 = {
        };
        function f13() {
        }
        let v14 = -2.0;
        ({"b":v0,"c":C6,"e":v14,} = C6);
        let v16 = 2147483647;
        let v17 = 1073741823;
        ~v17;
        Math.abs(v4);
        v16--;
        Math.atan(v4);
        Math.asin(v16);
        ++v4;
        --v17;
        function F26(a28, a29, a30, a31) {
            if (!new.target) { throw 'must be called with new'; }
            this.c = a28;
        }
        const v32 = new F26(v14);
        const v33 = new F26(-1.093925554716035e+308);
        v33 in v32;
        const v36 = new Proxy(this, o12);
        try { new a10(-9n, v36, v36); } catch (e) {}
        try {
            this.length = 2;
        } catch(e39) {
        }
    }
}
new C6(v4, v4, v4, 9);
new C6(9, 12, v4, v4);
new C6(v4, v4, 12, 9);
new Float64Array(4096);
class C48 {
}
new C48();
class C50 {
    constructor(a52, a53) {
        function f54(a55) {
            function f56(a57) {
            }
            const v60 = new Uint16Array(1024);
            v60[7] = v60;
            return C50;
        }
        const o63 = {
            "type": "function",
        };
        new Worker(f54, o63);
    }
}
new Int16Array(8);
new Float64Array(127);
const v69 = /xyz{1,32}?/gusy;
class C70 {
    268435440 = v69;
}
const v71 = new C70();
const o72 = {
    ...v71,
};
