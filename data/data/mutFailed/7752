class C3 {
    static {
        super.f = -1000000000.0;
        %VerifyType(this);
    }
    set c(a6) {
        const o7 = {
        };
        try {
            o7.a = -2974.211510063964;
        } catch(e8) {
        }
        try {
            const o9 = {
            };
            o9.a = -2974.211510063964;
            o9.b = 9007199254740990;
        } catch(e10) {
        }
        try {
            const o11 = {
            };
            o11.a = -2974.211510063964;
            o11.b = 9007199254740990;
            o11.g = -2974.211510063964;
        } catch(e12) {
        }
        try {
            const o13 = {
            };
            o13.a = -2974.211510063964;
            o13.b = 9007199254740990;
            o13.g = -2974.211510063964;
        } catch(e14) {
        }
    }
}
const v15 = new C3();
const v16 = new C3();
const v17 = new C3();
function f18(a19, a20) {
    const o25 = {
        "f": a19,
        set d(a22) {
            function f23() {
                return a19;
            }
            try { v17.m(a19, f23, 9007199254740990, v16, f23); } catch (e) {}
        },
        "b": a19,
        "e": C3,
        "a": a19,
        10: a19,
        "h": -1000000000.0,
        [a19]: a19,
        "g": 9007199254740990,
    };
    return o25;
}
f18(v17, v15);
f18(v17, v17);
const v28 = f18(v16, v17);
function f29() {
    return v28;
}
new BigUint64Array(13);
new BigInt64Array(16);
new Infinity(2466);
function f39(a40, a41, a42, a43) {
    return a40;
}
const v44 = f39();
const v47 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v48 = [601759695];
v48[0] = v48;
const v49 = [1073741824,1073741823,1376142744,1073741825];
function f51(a52, a53, a54, a55) {
    arguments.toString();
    function f58() {
        const v60 = ("Vre").toLocaleUpperCase;
        try { new v60(v60, -4294967297n, a54, v49); } catch (e) {}
        ("Vre").fixed(f51);
        let v64 = -268435456;
        v64--;
        const v68 = new Uint16Array(209);
        const v69 = 209 > Uint16Array;
        try {
            v68.__proto__ = v68;
        } catch(e70) {
        }
        let v71 = 1829;
        const v73 = new Uint8Array(v71);
        Object.defineProperty(v73, v69, { writable: true, configurable: true, enumerable: true, value: v71 = 209 });
        v73[8] = Uint16Array;
        let v74;
        try { v74 = v71(); } catch (e) {}
        try { v68.forEach(v74, v74); } catch (e) {}
        new Float64Array(3916);
        /(\xed\xb0\x80)\x01/vdsy;
        /a[a-z]/vim;
        -(v64 + v64);
        const o96 = {
            "c": -4294967297n,
            [522675525n](a84, a85) {
            },
            ..."Vre",
            "maxByteLength": -128,
            "c": v48,
            valueOf(a87, a88) {
                return a87;
            },
            "e": -4294967295,
            "e": v64,
            "maxByteLength": -4294967295,
            "arguments": v47,
            ...v48,
            "type": "Vre",
            ..."Vre",
            toString(a90, a91) {
                return -4294967295;
            },
            ..."Vre",
            4: "Vre",
            "c": v64,
            "type": "Vre",
            "d": "Vre",
            toString(a93, a94, a95) {
                return a93;
            },
            5: -4294967295,
            6: v64,
        };
        o96.valueOf();
        return f51;
    }
    f58.length;
    f58();
    Int8Array.a = Int8Array;
    const v101 = new Int8Array();
    try { v101.findIndex(v44); } catch (e) {}
    v101.buffer.slice();
    %OptimizeFunctionOnNextCall(f58);
    ("find").strike();
    try { v49["find"](..."find", a55, ...v48, ...v49, ...522675525n); } catch (e) {}
    return v49;
}
for (let v108 = 0; v108 < 5; v108++) {
    f51(v48, v108, v108, v49);
}
%PrepareFunctionForOptimization(f51);
const v110 = f51();
%OptimizeFunctionOnNextCall(f51);
f51(v110, f51, -128, v44);
