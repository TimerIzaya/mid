let v0 = -2;
class C3 {
    [v0];
    g;
    get h() {
        try {
            ("object").localeCompare("boolean", "object");
        } catch(e7) {
        }
        return v0;
    }
    e;
}
const v8 = new C3();
const v9 = new C3();
const v10 = v8?.constructor;
v0++;
const o17 = {
    "execution": "sync",
    "type": "minor",
};
gc(o17);
new Int8Array(7);
new C3();
class C21 {
    set h(a23) {
        Math.ceil(128);
        Math.round(128);
        Math.log1p(248.25145661833653 && 248.25145661833653);
        let v32 = -(-4294967295);
        --v32;
    }
}
const v34 = new C21();
new C21();
const v36 = new C21();
v36.h;
C21.c;
try { v10(); } catch (e) {}
let v40;
try { v40 = ("minor").toString(); } catch (e) {}
const v41 = v36[v40];
try { v10(v34, v10, Int8Array, v34, v41); } catch (e) {}
function f43() {
    let v45 = Math;
    +"minor";
    const v50 = v45--;
    v45.abs("minor");
    v45.log("minor");
    const v53 = v50 ^ v50;
    v53 / v53;
    let v55 = 2147483649;
    v55--;
    try { ("split").sup(); } catch (e) {}
    const o82 = {
        valueOf(a60) {
            let v61;
            try { v61 = ("split").padEnd(a60, a60); } catch (e) {}
            function f62(a63, a64) {
                v61.g = f43;
                return f62;
            }
            try {
            } catch(e65) {
                const v67 = Symbol.isConcatSpreadable;
                try { e65(v67); } catch (e) {}
            }
            function f75() {
                Symbol.species;
                const v79 = new Int8Array(7);
                v79[v79.byteOffset] = 5;
                return a60;
            }
            return f43;
        },
    };
    try { o82.valueOf(v9); } catch (e) {}
    return f43;
}
f43();
const v85 = f43();
try { v85(); } catch (e) {}
const v90 = new Uint8ClampedArray(127);
v90 < -56166n;
const v92 = f43();
let v95 = 536870888;
const v96 = -10000;
f43();
++v95;
const v100 = [-2.14860426829137,-9.58586124400876,2.0,2.2250738585072014e-308,0.0,-3.0,Infinity,-317.1953498647964,2.0];
class C101 extends Int16Array {
    [v100];
}
f43[v96];
c = 536870888;
/(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10[Ca\nb\bc?]/vim;
try {
    v92.length = 3425;
} catch(e105) {
}
