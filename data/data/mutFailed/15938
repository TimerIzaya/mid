new Uint8Array(7);
try { new BigUint64Array(7, 7, 7); } catch (e) {}
new BigUint64Array(7);
const v9 = new Float32Array(3888);
try { v9.some(7); } catch (e) {}
let v13 = NaN;
v13--;
new Float32Array(10);
1099 & 1099;
new Uint16Array(1099);
new Uint8Array(473);
try { ("-4294967295").big(); } catch (e) {}
class C29 {
    static {
        try { this.propertyIsEnumerable(9007199254740991); } catch (e) {}
        for (const v32 of "-4294967295") {
            v32.f = v32;
        }
    }
}
128 === 128;
