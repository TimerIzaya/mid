const v0 = [1418029334];
const v1 = [2093782370,65535];
const v2 = [-1928917136,5];
function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = Infinity;
    } catch(e12) {
    }
}
new F6(F6, 1000000000.0, v0, v2);
new F6(v1, F6, v2, v1);
new F6(1000000000.0, F6, v1, v1);
new Date();
const v20 = new Uint8Array(2, 2, 2);
const v22 = new Uint32Array();
const o26 = {
    "b": 1.3078960321889692,
    ...v20,
    n(a24, a25) {
        v22[1.3078960321889692] = v22;
    },
};
for (let v27 = 0; v27 < 5; v27++) {
    function f28() {
        const t25 = 137;
        const v31 = new t25();
        class C32 extends 137 {
            [v31];
            #n(a34, a35, a36, a37) {
            }
        }
        new Int8Array(137);
        new BigInt64Array(256);
        new Uint32Array(3);
        const o46 = {
        };
        function F47(a49, a50, a51, a52) {
            if (!new.target) { throw 'must be called with new'; }
            function f56(a57, a58) {
                const o61 = {
                    968: a58,
                    "d": a57,
                    [268435439n]: 2105444095n,
                    __proto__: o46,
                    "g": a51,
                    ...a58,
                    "b": -4294967296n,
                    "f": this,
                    valueOf(a60) {
                        return a60;
                    },
                };
                return a58;
            }
            for (let v62 = 0; v62 < 100; v62++) {
                f56(-4294967296n, v62);
            }
        }
        const v66 = Symbol.toPrimitive.description.codePointAt();
        return v66 >> v66;
    }
    f28();
    %OptimizeFunctionOnNextCall(f28);
}
const o69 = {
    "defineProperty": Date,
};
new Proxy(Date, o69);
