function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 1;
    } catch(e3) {
    }
    try {
        -754089042n <= -754089042n;
        ~-754089042n;
        const v9 = new Date(-9223372036854775807, -9223372036854775807, Date, -9223372036854775807);
        try { v9.setUTCMonth(Date, v9); } catch (e) {}
        this.d = 1;
    } catch(e11) {
    }
}
const v12 = new F0();
const o14 = {
};
o14.g = o14;
const v16 = new Proxy(Uint8Array, o14);
try { new v16(Uint8Array, Uint8Array, Uint8Array); } catch (e) {}
v16.d = v16;
const v18 = new F0();
const v19 = new F0();
function F20(a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    a22.e = a22;
    const v24 = a23?.constructor;
    try { new v24(); } catch (e) {}
    a23.c = a23;
    try {
        this.a = a23;
    } catch(e26) {
    }
    function F27(a29) {
        if (!new.target) { throw 'must be called with new'; }
        const v30 = [-0.685155357392599,5.0];
        function F31(a33, a34, a35, a36) {
            if (!new.target) { throw 'must be called with new'; }
            const v37 = this.constructor;
            try { new v37(a34, F27, v37); } catch (e) {}
            v30.length &= 1;
        }
        new F31();
    }
    F27.length;
    F27.caller = F27;
    try {
        this.b = a22;
    } catch(e42) {
    }
    try {
        this.h = v12;
        const o43 = {
            ...this,
        };
        o43.e = o43;
        class C44 {
            constructor(a46, a47) {
                const v48 = this?.__lookupGetter__;
                try { new v48(this); } catch (e) {}
                const v50 = this?.__defineSetter__;
                v50.name;
                try { new v50(a47, a23); } catch (e) {}
                for (let v53 = 0; v53 < 5; v53++) {
                    -v53;
                    ("p").length;
                    const v57 = "p" + v53;
                    let v58;
                    try { v58 = v57.blink(); } catch (e) {}
                    try { v58.lastIndexOf(v58); } catch (e) {}
                    this[v57] = v53;
                }
            }
        }
        const v60 = new C44();
        v60.h = v60;
        v60.p4;
    } catch(e62) {
    }
}
const v63 = new F20(v18, v18);
const v64 = new F20(v19, v19);
v64.b;
const v66 = new F20(v12, v18);
v66.a = v66;
1073741823n << 1073741823n;
65535 / 65535;
-11 & -11;
class C76 {
}
C76.prototype = C76;
let v77;
try { v77 = new C76(); } catch (e) {}
const v78 = new C76();
const v79 = v78?.__defineGetter__;
try { new v79(v63, -4n); } catch (e) {}
try { ("-26733").toLocaleLowerCase(); } catch (e) {}
try { ("-26733").substring(v19, v19); } catch (e) {}
("-26733")[o14];
const v85 = [-2023,8,-5,-19182,268435441];
try { v85.map(C76); } catch (e) {}
const v88 = new Uint16Array(v85);
v88[1];
const v90 = new C76();
try { v90.valueOf(); } catch (e) {}
function f92(a93, a94, a95) {
    const v96 = a93?.constructor;
    try { new v96(); } catch (e) {}
    const v98 = a93?.constructor;
    try { v98.bind(a94); } catch (e) {}
    try { new v98(); } catch (e) {}
    const v101 = a95?.constructor;
    try { new v101(); } catch (e) {}
    64 | 64;
    let v106 = 112 | 112;
    v106--;
    Uint8ClampedArray.prototype;
    try { new Uint8ClampedArray(Uint8ClampedArray, a93, a95); } catch (e) {}
    const v111 = new Uint8ClampedArray(112);
    const v113 = `7${v111}dm${"-26733"}m`;
    function f114() {
        return f114;
    }
    const v116 = new WeakSet();
    const v117 = v116.constructor;
    v117.name = v117;
    Uint8Array.BYTES_PER_ELEMENT = Uint8Array;
    const v119 = new Uint8Array();
    try { v111(-85357.59116785484, ...v119, 64, 46, -3.383486186086852e+307, ...v111); } catch (e) {}
    const o133 = {
        __proto__: a94,
        1073741824: v78,
        get e() {
            let v126 = 820086.9196656225;
            v126++;
            const v128 = -1;
            Math.atanh(this);
            let v130 = 1 && v128;
            v130--;
            Math.sinh(v130);
            return v113;
        },
    };
    o133[1073741824] = o133;
    return f92;
}
const v135 = f92(f92(v90, f92, v78), v90);
try { new v135(v77, 65535, 1073741824); } catch (e) {}
const v137 = v135?.__lookupSetter__;
try { v137.bind(v63); } catch (e) {}
try { new v137(v90); } catch (e) {}
