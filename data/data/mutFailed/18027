const o6 = {
    "execution": "async",
    "type": "minor",
};
gc(o6);
class C8 {
    #valueOf(a10, a11) {
    }
    constructor(a13, a14) {
        a13 | a13;
    }
    toString(a18, a19) {
        this.printErr();
        const v23 = new Date();
        v23.setFullYear(-12);
        try {
            this.e = a18;
        } catch(e25) {
            let v26;
            try { v26 = ("async").localeCompare("minor", e25, Date); } catch (e) {}
            try { e25["o"](v26, v26, "o"); } catch (e) {}
            for (let v29 = 0; v29 < 32; v29++) {
                const t22 = "o";
                t22["p" + v29] = v29;
            }
        }
        return 257n;
    }
    static 5 = 128n;
    static [128n] = 257n;
    static 8 = 128n;
}
new C8();
new C8();
new C8();
[1,2,-13,512,-6,127,-65535,13757,-8];
[-1,-202192074,65536,-1773075466,5,2147483649,15];
[9,9,-9223372036854775808,-10,16,1024];
const v38 = [-50.96907394271625,3.0,-570016.204056581,0.7917375798188904,5.844526521291116e+307,-1.7976931348623157e+308,-2.2250738585072014e-308,0.0,1.0];
const v39 = [-2.220446049250313e-16];
class C40 {
    static [-2];
    constructor(a42, a43) {
        function f44() {
            f44 *= f44;
            try {
                new C8(false, a43);
            } catch(e47) {
            }
            function f49(a50) {
                a50 !== v39;
            }
            this.onmessage = f49;
        }
        for (let v54 = 0; v54 < 32; v54++) {
            v54 - v54;
            for (let v56 = 0; v56 < 5; v56++) {
            }
            try { f44(); } catch (e) {}
        }
        const v59 = [];
        const o60 = {
            "arguments": v59,
            "type": "function",
        };
        new Worker(f44, o60);
    }
}
new C40(v38, v39);
