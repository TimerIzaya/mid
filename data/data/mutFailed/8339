class C3 {
    g;
    static {
        this.d = -28034;
        this[this] = this;
        try {
            this.d = this;
        } catch(e5) {
        }
    }
    static #a = 9007199254740992;
    #valueOf(a7, a8) {
        this + 9007199254740992;
        9007199254740992 / this;
        new Uint8Array(10);
        new Uint8Array(243);
        new Uint16Array(2);
        return Uint16Array;
    }
}
new C3();
new C3();
const v22 = new C3();
/(?<a>.)\k<a>/gvdi;
/a$(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/gvdmsy;
[9007199254740992,[v22,[63445n,/L}Ra\D\P{scx=Greek}a+Xa{?/giy],-28034,-9007199254740991n],-9007199254740991n];
const v32 = /1xyz{1,}?/gims;
const v33 = /h\p{gc=Nd}/vdy;
const v34 = /\xf0\x9f\x92\xa9a*/us;
function F38(a40, a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
}
function f44(a45, a46) {
    const v49 = new Int32Array(257);
    let [...v50] = v49;
    return -23596;
}
F38[Symbol.toPrimitive] = f44;
const v53 = new F38(v34, 1, -1263139894, F38);
const v54 = new F38(v32, v34, -23596, v53);
const v55 = new F38(v33, F38, -23596, 1);
Object.defineProperty(v55, "valueOf", { writable: true, value: Symbol });
const v58 = v55 | F38;
let v59;
try { v59 = v54(v34, v58, v58); } catch (e) {}
if (v59) {
    let v60;
    try { v60 = ("catch").codePointAt(v59); } catch (e) {}
    [,v60] = "iterator";
} else {
    new WeakSet();
}
