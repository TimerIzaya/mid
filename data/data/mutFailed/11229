const v4 = new Set();
const v5 = [-178362.41033689328];
const v7 = [v4,v4,v5,-178362.41033689328,[v4,v5]];
class C8 {
    p(a10, a11) {
        a11 -= this;
        for (let v12 = 0; v12 < 32; v12++) {
            this["p" + v12] = v12;
        }
        return 0.1965517759352574;
    }
    [0.1965517759352574] = v7;
    static #e = 0.1965517759352574;
    static 6;
}
new C8();
new C8();
new C8();
let v18 = Uint32Array;
v18.toJSON = 0;
function f20(a21, a22) {
    let v23 = a22?.[a21];
    --v23;
    Math.exp(4294967295);
    Math.round(Set);
    --v23;
    return a21;
}
let v31 = "function";
[v31,v31,,v18] = v5;
const o32 = {
    "apply": f20,
    "call": f20,
    "construct": f20,
    "defineProperty": f20,
    "deleteProperty": f20,
    "get": f20,
    "getOwnPropertyDescriptor": f20,
    "getPrototypeOf": f20,
    "has": f20,
    "ownKeys": f20,
    "preventExtensions": f20,
    "set": f20,
    "setPrototypeOf": f20,
};
new Proxy(C8, o32);
const v35 = [v18];
const o36 = {
    "arguments": v35,
    "type": v31,
};
new Worker(f20, o36);
