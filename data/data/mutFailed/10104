let v2 = 2147483649;
class C3 {
    static #a = 2.0;
    static get f() {
        let v4 = this;
        v4 >>>= v4;
        ({"d":v2,} = v4);
        return 2.0;
    }
    get f() {
        super[11];
        try {
            ("imul").padEnd();
            [/LD/vds,1000.0,/a\s/vims];
            v2.#a /= 11;
        } catch(e13) {
        }
        return v2;
    }
}
new C3();
new C3();
const v16 = new C3();
const v20 = [-78320.0568950373,2.0,NaN];
[NaN,NaN,-78320.0568950373];
[NaN,v2,11,v16];
const o23 = {
};
function F24(a26, a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    function f33(a34, a35) {
        const o38 = {
            968: a35,
            "d": a34,
            [268435439n]: 2105444095n,
            __proto__: o23,
            "g": a28,
            ...a35,
            "iterator": 2147483647n,
            "f": this,
            valueOf(a37) {
                return a37;
            },
        };
        return a35;
    }
    for (let v39 = 0; v39 < 100; v39++) {
        f33(2147483647n, v39);
        Array(-2119616940);
        ("undefined").normalize("NFC");
    }
}
class C48 extends v20.constructor {
}
function f49() {
}
%OptimizeFunctionOnNextCall(f49);
const v50 = new F24(F24, F24, o23, F24);
new F24(v50, o23, F24, o23);
function F52(a54, a55) {
    if (!new.target) { throw 'must be called with new'; }
    const o62 = {
        set d(a57) {
            for (let v58 = 0; v58 < 10; v58++) {
                class C60 {
                    4294967296 = 996195971n;
                }
                new C60();
            }
        },
    };
    class C63 {
        constructor(a65) {
            o62.d = a65;
        }
    }
    new C63();
}
new F52();
new F24();
