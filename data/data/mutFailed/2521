function f0() {
}
const v5 = Symbol.toPrimitive;
const o8 = {
    [v5]() {
        try {
            v5.__proto__ = v5;
        } catch(e7) {
        }
        return 1073741824;
    },
};
3210 | Symbol;
const v13 = ("for").slice(255, Symbol["for"](..."for", 3210, ..."for", 1073741824, Symbol), v5, Symbol, 255);
new f0(Symbol, "for", 255, 255);
new BigUint64Array(0);
new BigInt64Array(257);
new Int16Array(0);
v13.length;
/\xed\xa0\x80/uis;
/(ab)Cj*/dy;
/xyz{0,1}?/vdmy;
Symbol["for"]("for");
const v34 = new Uint8ClampedArray(3);
class C35 {
    constructor(a37, a38, a39, a40) {
        const v41 = this.constructor;
        try { new v41(3983, a40, this, this); } catch (e) {}
        for (let v43 = 0; v43 < 5; v43++) {
            v34[v43] = a40;
        }
    }
}
new C35();
