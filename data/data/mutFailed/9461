function f2() {
    return 20947;
}
const v3 = f2();
function f6() {
    return 13;
}
Int32Array.e = Int32Array;
const o10 = {
    "type": "minor",
};
const v11 = [749138.7740098275,-413.55890355139604,-2.0,5.0,4.0,1.7976931348623157e+308,1.0,5.956393081352694];
const v13 = new Uint8Array(v11);
const v14 = new Int32Array(1000);
v14[493] = v14;
for (let v16 = 0; v16 < 23; v16++) {
    ~v13.__proto__;
    try {
        v13.h = v16;
    } catch(e19) {
    }
}
const v21 = new Uint32Array(0);
class C24 {
}
class C25 {
}
const v26 = [20947];
let v27;
try { v27 = new Float32Array(Int32Array, Int32Array, Float32Array); } catch (e) {}
new Float32Array(3853);
const v29 = [1000.0,6.482487354903821e+307,711325.3540811017];
const o30 = {
};
o30.d = o30;
class C31 {
}
const v34 = new Uint16Array(3);
v34.indexOf();
const v36 = o30.constructor;
try {
    new Uint16Array(v3, 129);
} catch(e39) {
}
const v40 = v36.getPrototypeOf(v29);
try { v40.filter(Uint32Array); } catch (e) {}
const v43 = [1000000.0,1000000.0];
[-7,v26,3853,v21,C25];
const v46 = [v27,v27];
[v46,v46,C31];
let v49 = 43699;
let v51 = f6 % f6;
Math.log(-39111);
const v53 = ++v51;
!v11;
v53 & v51;
Math.imul(f6, v49++);
v43[-2147483648] >>>= -7;
