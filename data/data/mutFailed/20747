let v5 = -2147483648;
function f6() {
    return 1838857274;
}
function f7(a8, a9, a10, a11) {
    a8 >>> a8;
    a9 >>> a9;
    const o23 = {
        set c(a15) {
            try { a15(a9, 12); } catch (e) {}
            -8;
            Math.sqrt(8, ++v5);
        },
        "a": 1838857274,
    };
    const v24 = o23?.constructor;
    try { new v24(a10); } catch (e) {}
    return o23;
}
try { f7(-1939678852, -1585983066, -1939678852, f6); } catch (e) {}
f7(-1585983066, -1939678852, -1939678852, v5);
f7(1105299012, -1939678852, -1585983066, 1105299012);
f7(1838857274, v5, 1838857274, 1105299012);
for (let v30 = 0; v30 < 10; v30++) {
    v30 % v30;
    const v34 = /(?:a*)+q(?<a>.)/guds;
    try { v34.compile(); } catch (e) {}
    for (let [i41, i42] = (() => {
            try { JSON.bind(-9007199254740991); } catch (e) {}
            JSON();
            return [-9007199254740991, 10];
        })();
        i41 != i42;
        i42--) {
        for (let v49 = 0; v49 < 25; v49++) {
            const v51 = v34.constructor.$4;
            try { v51.charCodeAt(i41); } catch (e) {}
        }
    }
}
