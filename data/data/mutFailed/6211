const v2 = new Int32Array(5);
const v5 = new BigUint64Array(1456);
let v6 = 1208;
v6--;
new BigInt64Array(v6);
[-5,0,2147483648,-1344875783,256,41511,-14,24163];
const v11 = [512,-2032233636,12,-65535,1309854368,13,1302009889,-11,777763957,-11];
const v12 = [1073741823,-27596,25649,-14953,4294967296,-1156741811,-2147483647];
try { v12.at(5); } catch (e) {}
const v14 = [];
function f15() {
    return v14;
}
f15.c = f15;
0.0 >> 0.0;
const v19 = -3.0 / -3.0;
v19 | v19;
-40875 & -40875;
const v23 = -40875 % -40875;
v23 << v23;
try { Math.expm1(1456); } catch (e) {}
Math.f = Math;
const v27 = Math.atan2(v14, -40875);
const v28 = v27 >>> v27;
v28 % v28;
~v28;
Float32Array[Symbol.toPrimitive] = f15;
function f34(a35, a36, a37) {
    return a36;
}
function f38(a39) {
    Object.defineProperty(v14, "a", { writable: true, value: a39 });
    try {
        BigInt(BigInt);
    } catch(e42) {
    }
    return v14;
}
f34.constructor = f38;
class C43 extends f34 {
}
function f44() {
    return f34;
}
Object.defineProperty(C43, "constructor", { configurable: true, enumerable: true, get: f44 });
C43.prototype = C43;
const v46 = C43.prototype?.constructor;
try { new v46(); } catch (e) {}
let v48;
try { v48 = new C43(); } catch (e) {}
v48.constructor = Symbol;
let v49;
try { v49 = v48.constructor(); } catch (e) {}
const v50 = v48?.constructor;
function f51() {
    let v53;
    try { v53 = v49["toString"]("toString", v48, v11, "toString", "toString"); } catch (e) {}
    return v53;
}
v50.constructor = f51;
let v54;
try { v54 = new v50(); } catch (e) {}
v54.constructor = f51;
const v55 = v54?.constructor;
v55.constructor = f51;
try { new v55(); } catch (e) {}
for (let v57 = 0; v57 < 5; v57++) {
    v57 - v57;
    Object.defineProperty(C43, Float32Array, { enumerable: true, get: f34 });
}
-3.0 % -3.0;
64216.173742571846 - 64216.173742571846;
function f62(a63, a64) {
    a64 === a64;
    a63--;
    a63 >> a63;
    a63 + a63;
    const v69 = a64 >> a64;
    v69 >>> v69;
    const o78 = {
        [-2]: a63,
        ...-3.0,
        ...v14,
        ...v27,
        get a() {
            Math.acos(0.0);
        },
        "a": -3.0,
        set g(a75) {
            v14.__proto__ < a64;
        },
        "h": a64,
        "c": -3.0,
        ...v14,
        "b": a63,
        4: a64,
    };
    function f79() {
        v2.length ||= 1456;
        function f80() {
            return f80;
        }
        function f81() {
            Object.defineProperty(arguments, 13, { enumerable: true, set: f80 });
            return arguments;
        }
        f81();
        return v2;
    }
    o78[Symbol.toPrimitive] = f79;
    o78.c;
    return o78;
}
f62.length;
const t113 = "Bl4";
t113[0] = "Bl4";
const v90 = new BigUint64Array("Bl4");
try { v90.lastIndexOf(v5); } catch (e) {}
try { v90.entries(); } catch (e) {}
let v93;
try { v93 = v90.copyWithin(v90, v14); } catch (e) {}
try { v93.subarray(BigUint64Array, BigUint64Array); } catch (e) {}
const v96 = new Int32Array();
for (let v97 = 0; v97 < 25; v97++) {
    v96.__proto__ = v90;
}
const v98 = f62(0.0, 0.0);
function f99() {
    return f62;
}
function f100(a101) {
    const v104 = 209 > Uint16Array;
    const v107 = new Uint8Array(1829);
    Object.defineProperty(v107, v104, { writable: true, configurable: true, enumerable: true, value: 1829 });
}
Object.defineProperty(v98, "toString", { writable: true, enumerable: true, get: f99, set: f100 });
const v108 = f62(64216.173742571846, 64216.173742571846);
const v109 = v108[4];
v109 - v109;
f62(64216.173742571846, -3.0);
let v112 = 64n;
v112 !== v112;
v112 ^ v112;
v112--;
gc();
const v118 = [-1000.0,1000000000.0];
try { v118.fill(f34); } catch (e) {}
const v120 = [0.0,-605.6883350474525,-2.2250738585072014e-308,2.8064173070154015e+307,-0.0,NaN,-1.7976931348623157e+308,-1.7976931348623157e+308,1.1567619127528594,2.2250738585072014e-308];
try { v120.lastIndexOf(v27); } catch (e) {}
let v123 = 37369;
v123 >>> v123;
const v125 = v123--;
const v126 = v125 / v125;
function f127(a128, a129) {
    a128.toString = f51;
    function f130() {
        function f131(a132) {
            const v133 = [-47479,-256,-11,58632];
            const v134 = [536870888,8];
            const v135 = [2147483649,2147483649,-65537,-268435456,10,9223372036854775807];
            function f136(a137) {
                const o141 = {
                    set g(a139) {
                    },
                    get g() {
                        return a137;
                    },
                    __proto__: a137,
                    ...v134,
                    4096: v135,
                };
                return o141;
            }
            f136(v133);
            f136(v133);
            Object.defineProperty(v133, 1024, { get: f136, set: f136 });
            return a128;
        }
        return f131;
    }
    Object.defineProperty(a129, Symbol.toPrimitive, { writable: true, configurable: true, enumerable: true, get: f130 });
    try { a129.entries(); } catch (e) {}
    const o148 = {
        [v112]: 8n,
        __proto__: a129,
        [v123]: v125,
        [a128]: a128,
        ...a128,
        5: v118,
        ...v14,
    };
    o148[63] = o148;
    return o148;
}
let v149;
try { v149 = f127(v108, v90); } catch (e) {}
v149[5];
9007199254740991n ^ 9007199254740991n;
let v155 = -13;
v155--;
const v157 = v155--;
v157 << v157;
const v159 = C43?.constructor;
try { v159(v98); } catch (e) {}
class C162 {
    static {
        this.d = this;
        try {
        const t0 = 0.44967380041772886;
        t0();
        } catch (e) {}
    }
    static f;
}
C162.d = C162;
-(-(-180405010));
class C168 {
}
C168.name = C168;
try { new C168(); } catch (e) {}
C168.g = C168;
const v171 = ("string")[3];
try { v171.padStart(0.44967380041772886); } catch (e) {}
const v174 = Symbol.iterator;
const v179 = Symbol.for(v174.description).description;
const v180 = v179?.toLocaleUpperCase;
try { new v180(); } catch (e) {}
Symbol.for(Symbol.for(v179).description);
const t227 = "string";
t227[v174] = v174;
BigInt64Array.length;
const v188 = new BigInt64Array();
const v189 = v188?.slice;
try { new v189(64216.173742571846, 64216.173742571846); } catch (e) {}
let v191;
try { v191 = v188.subarray(v90, v90); } catch (e) {}
const v192 = v191?.constructor;
try { new v192(v19, v19, BigInt64Array); } catch (e) {}
async function f194(a195, a196, a197, a198) {
    const v199 = await C168;
    const v200 = v199?.constructor;
    let v201;
    try { v201 = new v200(f34); } catch (e) {}
    v201.prototype = v201;
    let v202;
    try { v202 = new v199(); } catch (e) {}
    const v203 = v202?.constructor;
    try { new v203(); } catch (e) {}
    return a197;
}
f194.d = v126;
f194.d = f194;
f194.b = f194;
try { f194.toString(); } catch (e) {}
f194();
