[5];
[1676378281,2147483647,-10,268435439,111176795,7,512,6];
const v2 = [-9007199254740990,788496219,-9223372036854775807,13,-4294967296,54758,65536,-1024];
let v6 = "RH";
function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 5n;
    } catch(e13) {
    }
}
new F9(-15n, v2);
new F9(5n, "d");
new F9(-15n, "string");
const v21 = v6.log2();
const v22 = Math.cosh();
const v23 = [315.3838771878211,0.8321654879979539,1.0,-813011.8421276518];
function F24(a26, a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    for (let v30 = 0; v30 < 100; v30++) {
        const o31 = {
        };
        function f32(a33, a34, a35) {
            const o36 = {
                "a": o31,
            };
            while ((() => {
                    let v38 = 10;
                    v38++;
                    return 0 < v38;
                })()) {
                const v41 = v23.__proto__;
                try { v41.findLastIndex(this, 0, v30); } catch (e) {}
                delete v23[v21];
                v6++;
            }
        }
        const v45 = f32();
        ([0,2147483647,9223372036854775807,9007199254740990,9007199254740990]).concat(v22);
        f32(v30, v30, v45);
    }
}
const v49 = new F24();
new F24(F24, v22, v49, v22);
