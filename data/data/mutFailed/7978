const t0 = 3093;
const v2 = new t0(3093);
const v5 = new Float64Array(4);
const v8 = new Int16Array(181);
let v9 = 1414370806;
function f12(a13, a14, a15, a16) {
    const o39 = {
        toString(a18, a19, a20) {
            let v21;
            try { v21 = this.toString(a19, a14, a18); } catch (e) {}
            function f23(a24, a25, a26) {
                return v5 == v8 ? v5 : v8;
            }
            f23(255n, v21);
            a15[v9] = a15;
            return a14;
        },
        [3093]: Float64Array,
        948640481: 3093,
        "b": a15,
        ...v8,
        4: a15,
        get g() {
            function f31(a32, a33, a34, a35) {
                let v36;
                try { v36 = v2.every(a15); } catch (e) {}
                new Float64Array(v2);
                return v36;
            }
            return f31(Float64Array, a13, 4, -1073741824);
        },
        __proto__: v5,
    };
    return o39;
}
f12(-1073741824, 181, -2143704785, 3093);
f12(-1073741824, 181, Int16Array, 4);
const v42 = f12(4, 3093, 3093, v9);
try { new Float64Array(-2143704785, v2, -1.7976931348623157e+308, v42, ...Float64Array, f12); } catch (e) {}
delete v5?.byteOffset;
let v47 = v42 < Int16Array;
({"b":v47,"buffer":v47,...v9} = v2);
v2 - v8;
function F49(a51, a52, a53) {
    if (!new.target) { throw 'must be called with new'; }
    const v54 = this.constructor;
    try { new v54(); } catch (e) {}
    this.h = -6.336273045214518e+306;
    this.g = -1.7976931348623157e+308;
}
const v57 = new Uint16Array();
function f59() {
    let v62 = 257828.6336153492;
    v62--;
    class C65 {
        static #m(a67) {
        }
    }
    const v68 = new C65();
    const v69 = [-13,8,-1073741824,-9007199254740990,536870889,47670,-36072,9,268435441,1];
    new C65();
    const v71 = new C65();
    const v72 = [v71];
    new BigUint64Array(2141);
    try { v72.map(v57); } catch (e) {}
    const v76 = [];
    for (let i85 = (() => {
            function F77(a79, a80, a81) {
                if (!new.target) { throw 'must be called with new'; }
                a79[4294967295] = a79;
            }
            F77.prototype.constructor;
            return 0;
        })();
        i85 < 2;
        i85++) {
        const v92 = new F49(undefined, v68, undefined);
        undefined.h;
        const v94 = new C65();
        v94[v94];
        v69.length;
        try {
            v92.fuck(v8, undefined, -162.19027687402865, -162.19027687402865);
        } catch(e99) {
        }
    }
    class C100 extends C65 {
    }
    C100.prototype = C100;
    const v101 = v76.constructor;
    !v101.isArray();
    const v105 = [65537,268435441,63298,-5,1235122603];
    const v106 = [128,215394418];
    function F107(a109, a110, a111, a112) {
        if (!new.target) { throw 'must be called with new'; }
        const v113 = this.constructor;
        try { v113(2141, 2141, v105); } catch (e) {}
    }
    new F107(-714582153, F107, -714582153, v106);
    class C116 extends v101 {
    }
}
%PrepareFunctionForOptimization(f59);
f59();
%OptimizeFunctionOnNextCall(f59);
f59();
