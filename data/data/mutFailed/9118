function f2(a3) {
    const v4 = [0.8307152163010869,1.0,0.0];
    v4.length = 1494907924;
    return v4;
}
Uint32Array.toString = f2;
const v6 = new Uint32Array(3584);
const v9 = new Uint32Array(13);
let v11 = Uint32Array;
v11[2] = v11;
new v11(6);
class C13 extends Uint32Array {
    e;
    constructor(a15, a16) {
        super(a16, 3584);
        ++v11;
        const o18 = {
        };
        try {
            o18.c = this;
        } catch(e19) {
        }
        const v22 = [24526,-2147483647,-53890,1205962765,3,1597644293,4096,-128,257];
        function F23(a25, a26, a27) {
            if (!new.target) { throw 'must be called with new'; }
            this.g = a26;
            this.c = a26;
            for (let v28 = 0; v28 < 5; v28++) {
            }
            this.g = 4;
        }
        new F23(v22, 9);
        try {
            const o30 = {
            };
            o30.c = this;
            o30.b = 3584;
        } catch(e31) {
        }
        try {
            const o32 = {
            };
            o32.a = o32;
            o32.c = this;
            o32.b = 3584;
            o32.a = v9;
        } catch(e33) {
        }
        try {
            ("b")[164];
            const v36 = [-1000.0,1000000000.0];
            const v37 = [0.0,-605.6883350474525,-2.2250738585072014e-308,2.8064173070154015e+307,-0.0,NaN,-1.7976931348623157e+308,-1.7976931348623157e+308,1.1567619127528594,2.2250738585072014e-308];
            function f41(a42, a43) {
                const o44 = {
                    [33062n]: 8n,
                    __proto__: v37,
                    [37369]: a43,
                    [a42]: a42,
                    ...a42,
                    5: v36,
                    ...v36,
                };
                return o44;
            }
            const o45 = {
            };
            o45.b = 37369;
            o45.c = this;
            o45.b = 3584;
            o45.a = v6;
        } catch(e46) {
        }
    }
}
new C13(v6, v6);
const v48 = new C13(v9, Uint32Array);
new C13(v6, v48);
new Uint32Array();
Math.tan();
Math.log1p(268435456);
const v59 = new BigUint64Array(4);
Reflect.construct(BigInt64Array, [v59]);
