class C3 {
    constructor(a5, a6) {
        const o9 = {
            "maxByteLength": 64,
        };
        const v11 = new ArrayBuffer(16, o9);
        new Int32Array(v11);
    }
}
const v14 = new C3(-2.2250738585072014e-308, 0.0);
new C3(-2.2250738585072014e-308, 0.0);
new C3(v14, 0.0);
/0\P{Any}/uimsy;
/M+/gvds;
/d(\xed\xb0\x80)\x01/vdisy;
[-9007199254740990,268435441];
[-37207,127,-4,-2147483649,65535,-1024,-536870912];
const v22 = [4294967297,-256,8,1204244361,536870887];
[4,268435456,-1988579072,-9007199254740991,-31917];
[-1257322457,8,127,-14,39653,128,9007199254740990];
const v25 = [9007199254740990,16,-65536,7,10,9223372036854775807,16,4,1073741824];
let v26 = [29915,-9007199254740990,9];
const v27 = [39049,-2147483647,9007199254740991,30221,268435456,-2147483647,41987];
function f28(a29, a30) {
    class C32 {
        594532432 = -60610;
    }
    const v33 = new C32();
    const o40 = {
        get d() {
            const v36 = Symbol.toPrimitive;
            const o39 = {
                [v36]() {
                    [v33];
                },
            };
        },
    };
    return v22;
}
v27[Symbol.toPrimitive] = f28;
const v43 = [2147483647,-32974,7,-54836,-9,-15,10000];
const v44 = [268435440,49273,-15,214837996,-12,65536,1291301446,-65535];
try { v44.concat(v27); } catch (e) {}
if (v27 <= v43) {
    v25 ** v27;
    v26 += v43;
} else {
    var d = v43;
}
const v48 = [24691,802039630,-9223372036854775808,-27820,-1112311792,-26767,1098810331];
[881994048,268435456,1,1024,39940,8242,4740,-12,1024,1073741825];
new BigInt64Array();
const v55 = new Int32Array(1);
function f56() {
    return Symbol;
}
Object.defineProperty(v55, "toString", { writable: true, configurable: true, get: f56 });
v55[0] = v55;
const v57 = (a58, a59, a60) => {
    let v61 = a58 & a58;
    ({"h":v61,"length":a58,...v61} = a60);
    return a60;
};
const v63 = v55 instanceof BigInt64Array;
v63 || v63;
let v65 = gc;
function f66() {
    return Symbol;
}
function f67(a68) {
    v48[4] = a68;
}
Object.defineProperty(v65, "toString", { writable: true, get: f66, set: f67 });
try { v65.bind(v44); } catch (e) {}
const v70 = v65();
const v71 = ("object").trim();
try { v71.sup(); } catch (e) {}
v65 /= v70;
