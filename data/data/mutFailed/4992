const v0 = [];
const v2 = new Set();
const v3 = v2.values();
try {
    v0.h = v2;
} catch(e4) {
}
let v12 = -4294967295;
~v12;
class C15 {
    [C15] = "resolve";
}
v12--;
const v19 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f20() {
    let v22 = gc;
    v22 /= v22();
    try { ("resolve").trimStart(); } catch (e) {}
    function f26(a27, a28, a29, a30) {
        try { a27.filter("string", a27); } catch (e) {}
    }
    let v32 = Float64Array;
    (1073741823n).toString();
    v32 = "bigint";
    const v34 = v19.length;
    const v35 = v34 >>> -4294967295;
    v35 / v35;
    const o47 = {
        "arguments": v0,
        ...v32,
        n(a38, a39, a40) {
            return f20;
        },
        toString(a42, a43) {
            -4294967297n && v32;
            return v32;
        },
        [v32]: v3,
        ...-1103180193n,
        set b(a46) {
        },
        "g": v34,
    };
    o47.toString();
    let v49 = -268435456;
    v49--;
    const o51 = {
        "e": -4294967295,
        "e": v49,
    };
    return "bigint";
}
function F53(a55, a56, a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const t55 = 1073741823n;
        t55.d = v0;
    } catch(e59) {
    }
    try {
        ~a57;
        class C62 {
        }
        const v63 = new C62();
        function f64(a65, a66, a67) {
            const o68 = {
                ...a67,
                268435441: v63,
            };
            return o68;
        }
        const t71 = -4294967297n;
        t71.h = "boolean";
    } catch(e69) {
    }
}
const v70 = new F53(1073741823n, "boolean", -1103180193n, -2058917132);
new F53(v70, "boolean", -4294967297n, 9);
new F53(9, "boolean", -1103180193n, 9);
Math.tan(9007199254740992);
