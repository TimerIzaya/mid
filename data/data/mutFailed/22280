class C3 {
    set h(a5) {
    }
    static toString(a10, a11) {
        this.prototype = this;
        super.f = -4096;
        let v12;
        try { v12 = a10(6, this); } catch (e) {}
        let v13 = a10 || v12;
        v13 = a11;
        try {
            this.__proto__ = v12;
        } catch(e14) {
        }
        return -4096;
    }
}
new C3();
const v16 = new C3();
new C3();
function f21(a22, a23, a24) {
    a22 / a22;
    const o85 = {
        [a24](a27, a28, a29) {
            [4.0457579830087536];
            [-Infinity,528.0956209152753,7.0001750572791295,4.0,8.524320015538297,-465069.72323587];
            [2.0562132609093148e+307,2.2250738585072014e-308,2.220446049250313e-16,-1.8174125446632967,-182.52448560609832,1000000000000.0,5.0,981221.4398560543,1000000.0,0.0];
            return v16;
        },
        [-1454511912](a34, a35, a36) {
            super.e;
            function f41() {
            }
            [-4096,-1073741824,65537,9007199254740990,-4096];
            const v43 = [1557591051,8137,536870888,-9223372036854775808];
            255 * 255;
            -16 <= -16;
            v43 * v43;
            const v49 = [];
            try { v49.findIndex(); } catch (e) {}
            const v51 = [];
            [];
            [];
            [];
            const v60 = ~f41;
            v60 ** -v49;
            v60 >> 536870889;
            class C65 {
            }
            new C65();
            class C67 {
            }
            const v68 = new C67();
            v68[594532432] = v68;
            const o70 = {
            };
            o70.b = o70;
            v68[-16];
            v51[268435439];
            ("symbol").replace("bigint").fontsize;
            class C78 {
                #a = -2;
                constructor(a80, a81) {
                }
            }
            for (let i = 0; i < 5; i++) {
                const o83 = {
                    "type": "symbol",
                    "type": "symbol",
                };
                Boolean();
            }
            return 1000000000.0;
        },
    };
    return o85;
}
const v86 = f21(-1454511912, -4096, f21);
v86.h = v86;
f21(6, 268435440, f21(10000, 10000, C3));
const v89 = [];
function F90() {
    if (!new.target) { throw 'must be called with new'; }
    const v92 = this?.constructor;
    try { new v92(); } catch (e) {}
    try {
        const v94 = `
            for (let v95 = 0; v95 < 5; v95++) {
                class C96 {
                }
                const v97 = new C96();
                function f98(a99, a100) {
                    const o105 = {
                        [v97](a102, a103, a104) {
                        },
                    };
                }
            }
        `;
        try { v94.slice(v94, v94); } catch (e) {}
        const o115 = {
            set e(a114) {
            },
        };
        function f116(a117) {
            a117 === a117;
            a117 <= a117;
            const o123 = {
                ...a117,
                p(a121, a122) {
                },
            };
        }
    } catch(e124) {
    }
    try {
    } catch(e125) {
    }
    try {
    } catch(e126) {
    }
}
const v127 = new F90();
const v128 = new F90();
const v129 = new F90();
const v130 = [v89,v129,C3];
try { v130.map(v128); } catch (e) {}
const v133 = [v130,F90,[v127,v89,v128],v89];
try { v133.flat(); } catch (e) {}
const v137 = new Int8Array(10);
v137[8] = v137;
try { v137.find(v129); } catch (e) {}
const v141 = new Uint8ClampedArray(18524);
const v142 = v141?.toString;
try { new v142(); } catch (e) {}
-13;
function f147(a148, a149, a150, a151) {
    Object.defineProperty(a148, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f147 });
    const o158 = {
        toString(a155, a156) {
            new Date(a148);
        },
    };
}
const v159 = f147?.constructor;
try { new v159(C3); } catch (e) {}
