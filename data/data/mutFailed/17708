const v0 = /(ab|cde)/gudimy;
const v1 = /[^123]((?<a>.)a(?!b)a+)/vdmsy;
const v2 = /(x)(x)(x)\3*/gudimy;
class C4 {
    0 = v2;
    static {
        super.e = this;
    }
    constructor(a7) {
        this[0] = v0;
        a7 && a7;
        let v9;
        try { v9 = a7(v1, v1, this, a7, this); } catch (e) {}
        a7 < v9 ? a7 : v9;
        [16,1073741824];
        parseInt([-5.034735835956977e+307,-385.25474675985527], 127);
    }
    static {
        function F20(a22, a23) {
            if (!new.target) { throw 'must be called with new'; }
            const v24 = this.constructor;
            try { new v24(); } catch (e) {}
            try { this.constructor(); } catch (e) {}
        }
        new F20();
    }
    [-2] = v2;
}
const v28 = new C4(true);
v28[0] = v28;
const v29 = new C4(true);
const v30 = new C4(v29);
const v31 = v30?.constructor;
try { new v31(v30); } catch (e) {}
-253026077 % -816409267;
function f36() {
    return v1;
}
class C37 {
    static [v0] = v30;
    set c(a39) {
    }
    #f = v1;
    #c = f36;
    static [true];
    static {
        try {
            C4.#e = this;
        } catch(e44) {
        }
    }
    [v28];
}
new C37();
new Float64Array(-253026077);
function F50(a52) {
    if (!new.target) { throw 'must be called with new'; }
    a52 | a52;
    const v54 = this.constructor;
    v54.caller = v54;
    try { new v54(3n); } catch (e) {}
}
new F50(349865170n);
new C37();
const v58 = new C37();
try { v58.toLocaleString(); } catch (e) {}
let v60 = 1.7976931348623157e+308;
v60--;
try { ("-4294967295").search(true); } catch (e) {}
class C65 {
    static {
        v0.a = -4;
        (-4).sup(("-1723624938").slice(9, "g").normalize(), "-1723624938");
        for (const v74 of "-4294967295") {
            try { v74.toLocaleLowerCase(); } catch (e) {}
            class C76 {
                constructor(a78) {
                    const v79 = this.constructor;
                    try { new v79(); } catch (e) {}
                    super.e;
                }
                #toString(a83, a84) {
                    return typeof a84 != "string";
                }
            }
            const v88 = new C76();
            const v89 = new C76(v88);
            v89.length = v89;
        }
    }
}
try { new C65(); } catch (e) {}
31 < 31;
