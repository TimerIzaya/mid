class C3 {
    constructor(a5) {
        try {
            this.fuck(391031.1411565861, 0.0, a5);
        } catch(e7) {
        }
    }
    4 = 0.683018492240564;
    #c;
    static #d;
    set b(a9) {
        for (let i12 = 0, i13 = 10; i12 < i13; i12++, i13--) {
            this >>> i12;
        }
    }
}
const v22 = new C3(0.683018492240564);
new C3(391031.1411565861);
const v24 = new C3(0.683018492240564);
function f25() {
    return v22;
}
function f26(a27, a28, a29, a30) {
    const o56 = {
        "f": 0.683018492240564,
        "c": a29,
        ...a28,
        m(a32, a33, a34, a35) {
            this[1];
            super.h;
            let v38;
            try { v38 = this.n(); } catch (e) {}
            function f39() {
            }
            function f40(a41, a42) {
            }
            const v43 = f40();
            function f44(a45) {
                function f47(a48) {
                    function f49() {
                        return a48;
                    }
                }
                this.onmessage = f47;
                v43.b;
            }
            const v53 = [f39];
            const o54 = {
                "arguments": v53,
                "type": "function",
            };
            new Worker(f44, o54);
            super[a29] = a32;
            %VerifyType(C3);
            v38[-2] ^= 391031.1411565861;
            return a32;
        },
        "d": 0.683018492240564,
        ...v22,
        "a": 0.0,
    };
    return o56;
}
const v58 = f26(f26(0.683018492240564, 0.683018492240564, 391031.1411565861, v24), v24, 391031.1411565861, v22);
const v59 = f26(v58, v58, 0.0, v24);
class C60 extends f25 {
    536870887 = v59;
    static [391031.1411565861];
    static n(a62, a63, a64) {
        class C65 {
            set e(a67) {
                Math.fround();
                Math.ceil();
            }
            m(a72) {
            }
            e;
        }
        function F73(a75, a76) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.g = a76;
            } catch(e77) {
            }
        }
        new F73(this, 0.0);
        new F73(a63, a62);
        new F73(a63, 0.683018492240564);
        function F81(a83, a84, a85, a86) {
            if (!new.target) { throw 'must be called with new'; }
            class C94 {
                static {
                    super[this];
                }
            }
        }
        return this;
    }
    c = v58;
    constructor() {
        const v98 = this.constructor;
        try { new v98(); } catch (e) {}
        super.f >>= this;
    }
    static 536870888;
}
new C60();
const v101 = new C60();
new C60();
gc();
let v106 = -908890636;
const v108 = v101 & --v106;
Math.log(v108);
for (let i112 = 0, i113 = 10;
    (() => {
        const v114 = i112 < i113;
        class C115 {
            set g(a117) {
                v108 || a117;
            }
            static {
            }
        }
        const v122 = new BigUint64Array(3375);
        let [v123,,v124,...v125] = v122;
        return v114;
    })();
    i112++) {
}
