function f0() {
    const o21 = {
        get d() {
            function* f5(a6) {
                const v8 = f5 * (-2.0 == -2.0);
                const v9 = v8 >> v8;
                const o10 = {
                };
                o10.f = v9;
                yield* "arguments";
                const v16 = new Date(-429.3290910931888);
                v16.setUTCSeconds(-429.3290910931888, -429.3290910931888);
                const t11 = [256,256];
                t11[65536] %= 256;
                return 1073741824;
            }
            return f5(this);
        },
    };
    return o21;
}
f0();
new Float32Array(2);
let {"c":v27,} = 4;
const v30 = Array();
class C31 extends v27 {
    [1] = v30;
}
[4];
f0();
class C34 {
}
C34();
~0;
f0();
new Float32Array(1934);
const v45 = new BigInt64Array(4046);
const o49 = {
    p(a47, a48) {
        return v45;
    },
};
new Int16Array(4096);
const o54 = {
    "maxByteLength": 1000,
};
new Int16Array(16);
new Uint32Array(1012);
function F61(a63) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const o65 = {
            "type": 10,
        };
        Worker(a63, o65);
    } catch(e67) {
        function f69(a70, a71, a72, a73) {
            function f75() {
                function f76() {
                    function f78(a79, a80, a81, a82) {
                        a79.BYTES_PER_ELEMENT = a79;
                    }
                    for (let v83 = 0; v83 < 5; v83++) {
                        f78(Uint8Array);
                    }
                }
                f76();
                %OptimizeFunctionOnNextCall(f76);
                a73 = f75;
                const v86 = [-2.2250738585072014e-308,1000000000000.0,0.0,2.220446049250313e-16,0.1817493037725736,452.152189468954,5.0,-341.61154733451247];
                gc();
                for (const v90 in "findIndex") {
                    v86.d = v90;
                }
                arguments == v86;
                const o99 = {
                    [-4294967297n](a93, a94, a95, a96) {
                        eval();
                    },
                };
                return -4294967297n;
            }
            f75();
            %OptimizeFunctionOnNextCall(f75);
            const o101 = {
            };
            function f104(a105) {
                const o106 = {
                    ..."toStringTag",
                };
                return o106;
            }
            class C107 extends f104 {
                ["15036"];
            }
            return f69;
        }
        f69(10, f69, -4294967297n, 10);
    }
}
new F61(F61);
