function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 321962689;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v8 = new Uint16Array(2785);
v8.fill();
const v10 = new F0();
[1000000000000.0];
const v12 = [1e-15,-72780.0426452969,-869.5305581989414,-1000.0,0.3672309572712946,-9.941687319966054,0.5212223260286835,-2.220446049250313e-16];
const v13 = [-656.5166192865477,1.0,-1000000000.0,1000.0,4.0,4.0,1000000000.0,-1e-15];
class C14 extends F0 {
    constructor(a16, a17) {
        let v15 = this;
        super();
        v15 = a17;
        function* f18(a19, a20, a21) {
            const v22 = /b\x0f/guimy;
            /((x)(x)(x)\2(I))/gudisy;
            /f^/gvimsy;
            yield v10;
            return v22;
        }
        f18(a16, v12, v4);
    }
    static [v13] = v5;
    static 203;
    #c = v13;
}
new C14(v10, v4);
const v28 = new C14(v4, C14);
new C14(v28, v28);
[-4.00875209314862,-1e-15,99774.13543443684,1.574834012689156e+307,1.7976931348623157e+308,NaN,-1.0,-1.1408596058573283e+308,-8.848106537810969e+306,0.7338903342112758];
[420273.4127466616,-861502.4633025147,1.0];
[-1e-15,-1.0385013861320701e+307,7.152882313381387];
function F37(a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v42 = new Uint8ClampedArray(2147483647);
        function f43(a44) {
            return f43;
        }
        const v47 = [v42];
        const o48 = {
            "arguments": v47,
            "type": "function",
        };
        Worker(f43, o48);
    } catch(e50) {
    }
}
new F37();
