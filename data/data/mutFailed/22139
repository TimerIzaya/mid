new Int32Array(11);
const v5 = new Uint16Array(1024);
new BigInt64Array(2969);
class C9 extends Uint16Array {
    p(a11, a12, a13, a14) {
        const v15 = [this,v5,a12,a11];
        const v16 = [v15,a12,v15,this,a11];
        [a14,a12,a14,C9];
        return v16;
    }
    static n(a19, a20, a21) {
        this[228] *= 11;
        new Int32Array(a20, 11, 2969);
        return a20 = BigInt64Array;
    }
    static [1024];
    #g = 2969;
}
new Uint16Array();
let v24 = new C9();
const v25 = new C9();
class C26 extends Uint16Array {
    constructor(a28, a29, a30) {
        super(Int32Array);
        Math.sinh(5);
        let v36 = v24++;
        const v37 = v36 % 4.0;
        const v38 = v36++;
        Math.acosh(v36);
        v37 % v38;
    }
    static g;
}
new C26(Uint16Array, 1024, 1024);
new C26(C9, 1024, 11);
new C26(v25, v24, 1024);
for (let v44 = 0; v44 < 5; v44++) {
    function f47(a48) {
        const o49 = {
            ...65536,
            163: a48,
        };
        -o49[163];
        return a48;
    }
    Uint16Array(f47);
    %OptimizeFunctionOnNextCall(f47);
}
