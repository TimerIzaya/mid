function f3() {
    return 956.5202728980009;
}
function f4(a5) {
    const o10 = {
        __proto__: 956.5202728980009,
        [f4]: 956.5202728980009,
        "b": f3,
        ...a5,
        [a5]: 956.5202728980009,
        "d": a5,
        "e": f4,
        "f": f3,
        "f": f3,
        127: 956.5202728980009,
        set h(a7) {
            try { a7(a5, a7, a7, this, a7); } catch (e) {}
            function f9() {
                return this;
            }
        },
    };
    return o10;
}
const t24 = 956.5202728980009;
const v11 = t24(875671.488454114);
f4(956.5202728980009);
const v13 = f4(956.5202728980009);
class C18 {
}
const v19 = new C18();
v19.valueOf = -9007199254740990n;
const v20 = new C18();
const v21 = new C18();
v19[0] = f4;
function f22() {
}
function F23(a25, a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    const v30 = ("bigint").codePointAt("bigint");
    function f31(a32, a33) {
        return f31(v30);
    }
    new Promise(f31);
    a27[0] = -62914n;
    a28.valueOf = f22;
    try { v30.valueOf(); } catch (e) {}
    a28.e = a28;
    const v38 = this?.constructor;
    let v39;
    try { v39 = new v38(v20, a27, a25); } catch (e) {}
    v11[0];
    try { a28.toLocaleString(); } catch (e) {}
    try {
        this.d = f22;
        try {
            new Promise(v39);
        } catch(e43) {
        }
        try {
            v13.fuck(C18, a27);
        } catch(e45) {
        }
    } catch(e46) {
        const o49 = {
            "maxByteLength": 1354281913,
        };
        const v51 = new SharedArrayBuffer(239, o49);
        new DataView(v51);
        C18[[11,-268435456,-2147483648,9007199254740991,-2,536870889,-51277,-9809]] = v39;
    }
}
new F23("m", C18, v21, C18);
new F23(v19, v20, "m", 1154943017n);
