const v1 = [-9007199254740991,6,-11352,0,536870887,5,65535,1,600701870];
const v2 = [-1578357627,16,8,9007199254740990,4294967296,54257,2147483648];
const v3 = [-1024,1416794816,1024,512,4294967296,-1024,-181453019];
const v5 = -Infinity;
const v6 = ~v5;
v5 + v5;
const v9 = [628495.6199992003];
v9[0] = v9;
const v10 = [5.0,0.331949969392488,-733.5667102262873,0.4352965083817083];
const v11 = [-890363.6360884821,-5.090287130694722,1000.0,-566.6779290807405,NaN];
try { v11.copyWithin(1000000000.0, 1000000000.0); } catch (e) {}
class C13 {
    constructor(a15, a16) {
        v6.isFinite(a15 + a15);
        for (let [i23, i24] = (() => {
                10 / 10;
                return [0, 10];
            })();
            i23 < i24;
            (() => {
                ~i24;
                i23++;
                let v30 = i24--;
                v30++;
                i23 & v30--;
            })()) {
            const v36 = i23 & i23;
            v36 >>> v36;
            [v5,i24,i23,v2];
            [1000000000.0,1000000000.0,a16,v9];
            [i24,v10,this,a16];
        }
    }
}
C13.length = C13;
const v41 = new C13(v5, v2);
const v42 = v41?.constructor;
let v43;
try { v43 = new v42(C13, C13); } catch (e) {}
delete v9[v43];
v2 in v9;
v3.length <<= 1000000000.0;
try {
    v9.valueOf = v43;
} catch(e46) {
}
const v47 = v41?.constructor;
v47.e = v47;
let v48;
try { v48 = new v47(1000000000.0, v9); } catch (e) {}
const v49 = v48?.constructor;
try { new v49(v48, C13); } catch (e) {}
new C13(v5, v1);
const v52 = v5?.__defineGetter__;
try { new v52(v41, C13); } catch (e) {}
const v54 = new C13(1000000000.0, v11);
v54.__proto__;
const v56 = v54?.constructor;
v56.b = v56;
let v57;
try { v57 = new v56(false, v2); } catch (e) {}
try { v57.constructor(v3, v10); } catch (e) {}
let v61 = 9007199254740990;
v61 - v61;
v61--;
class C64 {
    static {
        try { new this(); } catch (e) {}
        do {
        } while (7 * 0, 0 < 0)
    }
}
C64.a = C64;
try { Float64Array.from(C13); } catch (e) {}
