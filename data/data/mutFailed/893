[-Infinity,-7.230945278929126,2.220446049250313e-16,-1.7976931348623157e+308,-1000.0,-1.0,5.002169598915335,1e-15,-5.0,-4.0];
[2.0];
[-113.88577577875685,NaN,-138.72295990426278,-725973.0177101751,1.0];
[-698004.1950483839,2.2250738585072014e-308,-658.5488403472419,1.7976931348623157e+308];
[-1.7976931348623157e+308,-2.2250738585072014e-308,1e-15,1.7976931348623157e+308,436.391218484674,984999.8983446106,-2.220446049250313e-16,-65664.25596205948,-568440.0637574068,0.6833182439703986];
[1.4550120056683328e+308,-1.0772967663163728e+308,186061.78370046848,-1.7976931348623157e+308,-5.0,-Infinity,0.03200553966660591];
const v17 = new BigInt64Array(14);
Uint8Array.d = Uint8Array;
Uint8Array.prototype = Uint8Array;
new Uint8Array(4096);
this.decodeURIComponent([-2.216170140955498,-2.2250738585072014e-308,-643865.3403199288,NaN]);
Uint8Array();
110 <= 110;
110 + 110;
Int8Array.prototype = Int8Array;
new Int8Array(110);
const v33 = new Date();
try { v33.getUTCDay(); } catch (e) {}
let v35 = 127;
const v36 = v35++;
function f37(a38, a39) {
    try { a39(BigInt64Array); } catch (e) {}
    a39.constructor(a39);
    return f37;
}
const t25 = 0.853293308934578;
const v43 = new t25(f37);
try { v43.then(v17, v36); } catch (e) {}
new Uint8Array(v35);
function f47(a48, a49) {
    const o50 = {
    };
    return o50;
}
try { f47(v43, v43); } catch (e) {}
f47.arguments = f47;
for (let v52 = 0; v52 < 25; v52++) {
    const v53 = f47();
    v53.g = v53;
    v53.d = v53;
    Object.defineProperty(v53, v52, { enumerable: true, get: f47, set: f47 });
    const v57 = new Int8Array(8);
    Reflect.construct(Uint16Array, [v57]);
    Int8Array[v53] = v53;
    "sync" == "sync";
    const o64 = {
        "execution": "sync",
    };
    gc(o64);
}
