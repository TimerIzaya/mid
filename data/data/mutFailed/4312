[1000000.0,-326863.11456521787];
[0.29546103472946483,-3.0,-4.0,-25.69245592431389];
[-1000000000.0,-2.220446049250313e-16,848.2858387689764];
new Date();
Date.getUTCDay();
class C6 {
    static #p(a8) {
        this.#p();
    }
}
6 >>> 1;
const v17 = [];
class C18 {
}
const v19 = new C18();
function F21(a23, a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    const v27 = (268435456n)?.constructor;
    try { new v27(a24, v17, -1263139894, a24); } catch (e) {}
    a26?.constructor;
    try { new a23(v19); } catch (e) {}
}
new Date();
function F36() {
    if (!new.target) { throw 'must be called with new'; }
}
new F36();
class C39 {
}
const v42 = new Map(1024);
v42.includes(C39, 1024);
const o47 = {
    get h() {
    },
};
Math.atan2(-0.0, -0.0);
([536870888,8]).concat(8n);
