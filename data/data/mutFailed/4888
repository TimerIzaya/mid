function f0() {
}
class C4 {
    valueOf(a6) {
        try {
            f0();
        } catch(e8) {
        }
        return this;
    }
    static {
        let v9 = this;
        try { v9.call(-65535); } catch (e) {}
        v9[2769597849] = v9;
        v9 &= v9;
        C4[7] = v9;
        super.h = -13676;
        super.e ||= -65535;
        const v11 = v9.__proto__;
        try { v11.call(-13676); } catch (e) {}
        try {
            v9.length = 1;
        } catch(e14) {
        }
    }
}
const v15 = new C4();
const v16 = new v15();
const v17 = v16?.constructor;
let v18;
try { v18 = new v17(); } catch (e) {}
new v18();
[1918646213,-4294967296,621719820,-1266287062,-16,9007199254740990,-1073741824,-2147483648,5,1024];
[871134084,-36561,5,-1,4294967296];
const v22 = [5446,9,-9,6529];
[-3.8605023531436338,1000000.0,0.7554357075872085,-5.355373064713385,-1000000000.0,-4.0,5.866877237178829e+307,2.2250738585072014e-308];
[Infinity,1000000000.0,NaN,2.220446049250313e-16,9.482037153001748,-1000.0];
const v25 = [1.0845227255478667e+308,5.0,-567668.3225691885,1.0,580930.443597048,4.8679168603622855,2.220446049250313e-16,Infinity];
new v17();
function F28(a30, a31, a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    eval();
    function F36(a38) {
        if (!new.target) { throw 'must be called with new'; }
    }
    new F36();
}
try { new F28(v22, v25, v22, C4); } catch (e) {}
const o42 = {
};
gc(o42);
