const v2 = new Float64Array(2573);
const v5 = new Int8Array(10);
new Uint16Array(436, v5, v2, Uint16Array);
new Float64Array(1280);
new Float32Array(1556);
new BigInt64Array(-128);
class C20 {
}
new C20(C20);
const v22 = new C20(127);
[v22];
const o24 = {
};
for (let i27 = 0, i28 = 536870887; i27 < i28; i28--) {
}
const v37 = /(?<!a)/vdmsy;
for (let v39 = 0; v39 < 25; v39++) {
    const v40 = [1073741824,1073741823,1376142744,1073741825];
    function f41(a42, a43, a44, a45) {
        for (let v47 = 0; v47 < 5; v47++) {
            for (let v48 = 0; v48 < 500; v48++) {
                let v49 = undefined;
                const v51 = v49++;
                v51 << v51;
                v49 &&= Map;
            }
        }
        function f54() {
            return f41;
        }
        class C55 {
            g;
            constructor() {
                const v57 = this.constructor;
                try { new v57(); } catch (e) {}
            }
        }
        for (let v59 = 0; v59 < 5; v59++) {
            v37["w" + v59] = v59;
            function F63(a65, a66, a67) {
                if (!new.target) { throw 'must be called with new'; }
                a65++;
                this.constructor;
                this.a = a65;
            }
        }
        const v71 = new Int8Array();
        Object.defineProperty(v71.buffer, "constructor", { writable: true, configurable: true, value: Date });
        return arguments;
    }
    function f76() {
        return undefined;
    }
    Array();
    for (let v79 = 0; v79 < 5; v79++) {
        f41(undefined, f41, f41, v40);
    }
}
