function f0() {
}
class C1 extends f0 {
    h = f0;
    [f0] = f0;
    #a;
    p() {
        const v3 = this[this];
        let v5;
        try { v5 = v3["p"]("p", v3, f0, f0, "p"); } catch (e) {}
        const v6 = [f0,v3];
        [[v5,this,f0,v6]];
        return -128;
        new Date();
        const v12 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
        class C13 {
            constructor(a15, a16, a17, a18) {
                const v19 = this?.constructor;
                try { new v19(v12, a17, a17); } catch (e) {}
                a16 >>> a16;
                0.061410412759498656 >>> 0.061410412759498656;
            }
        }
        return v6;
    }
    1935 = f0;
    #g = f0;
    1 = f0;
}
const v24 = new C1();
new C1();
const v26 = new C1();
function f29(a30, a31, a32) {
    return a32;
}
const o35 = {
    "type": "function",
};
const v36 = new Worker(f29, o35);
v36.terminate(Worker, Worker, Worker, v36);
class C42 extends C1 {
    constructor(a44, a45, a46, a47) {
        super();
        const v49 = 536870887 > v24 ? 536870887 : v24;
        let v50;
        try { v50 = new a45(-536870912, v49, -65536); } catch (e) {}
        try {
            v50.__proto__ = this;
        } catch(e51) {
        }
    }
    #o(a53, a54) {
        a54 <<= a54;
        super.h = a54;
        new WeakSet();
        const o66 = {
            set b(a63) {
                const v64 = this.constructor;
                class C65 extends v64 {
                    [-1439127533] = -1439127533;
                    static #e = v64;
                }
            },
        };
        Math.tanh(-4294967295);
        Math.log1p(a54);
        -4294967295 - "-6";
        return -536870912;
    }
}
const v70 = new C42(-536870912, f0, -65536, v26);
new BigInt64Array(218);
const v75 = new Float32Array(Float32Array, Float32Array);
const v76 = new v75(-1077779852, v70, C42, v70);
new C42(-65536, v76, f0, v26);
function f78() {
}
f78();
const v80 = f78();
[512,129,44251];
const v82 = [-128,-9,-1131212436,-300109181,-1185904831,-7,-2147483649,-1168249233,-9007199254740991,-2147483647];
class C83 {
    constructor(a85, a86, a87) {
        const o90 = {
            "type": "minor",
        };
        gc(o90);
    }
}
new C83();
new C83(v82, C83, v80);
function f94() {
}
function f95() {
    const o119 = {
        "b": f94,
        [f94]: f94,
        valueOf() {
            let v98 = -C42;
            v98--;
            const t99 = /a\Sc?/giy;
            t99.valueOf = f94;
            try {
                f94();
            } catch(e102) {
                Symbol("bZ");
                const v106 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
                class C107 {
                    constructor(a109, a110, a111, a112) {
                        const v113 = this?.constructor;
                        try { new v113(v106, a111, a111); } catch (e) {}
                        a110 >>> a110;
                        0.061410412759498656 >>> 0.061410412759498656;
                    }
                }
            }
            try {
                this.valueOf = f94;
            } catch(e118) {
            }
            return f94;
        },
    };
    return o119;
}
f95();
const v121 = f95();
const v122 = v121?.b;
try { new v122(); } catch (e) {}
new Uint8Array(268435440);
function F127() {
    if (!new.target) { throw 'must be called with new'; }
}
class C129 extends F127 {
}
Date[-22872n] = Date;
const v133 = ("function").length;
const v134 = f95();
function F135(a137, a138) {
    if (!new.target) { throw 'must be called with new'; }
    const v139 = this?.constructor;
    try { new v139(a137, 268435440); } catch (e) {}
    new Uint16Array(v133);
    const v143 = [];
    const o144 = {
        ...v143,
    };
    try {
        this.b = a138;
    } catch(e145) {
    }
    try {
        this.c = a137;
    } catch(e146) {
    }
}
const v147 = new F135(v134, v134);
new F135(v121, v147);
new F135(v134, v147);
-6n * -6n;
function f155(a156, a157) {
    Math.atan2(Math, f155);
    return f155;
}
new Promise(f155);
1713234876 === 1713234876;
function f164(a165, a166) {
}
f164();
f164(-1748, 1713234876);
function F169(a171, a172) {
    if (!new.target) { throw 'must be called with new'; }
    const v173 = this.constructor;
    v173.f = v173;
    function f177() {
        return f177;
    }
}
const v180 = new Int16Array();
const v183 = new Int8Array(8);
v183.byteLength;
const o185 = {
    __proto__: v180,
};
