function f0() {
}
function f1() {
    return f0;
}
/f(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\11/dimsy;
/a|bc/is;
/[S5ny?]/vmsy;
[1.1543371549185353e+308,-753877.0311389716];
[3.0,-9.209300812815526e+307,-2.9840264629363578,6.497216532092408e+307,1.7976931348623157e+308,-1.0,-656958.8321443765,-1.7976931348623157e+308,1.0,0.09894779618786931];
const v10 = [-809.2813267558805,4.0,0.3824222751277273,-163.19195044025503];
new BigUint64Array(64);
new Uint8ClampedArray(934);
new v10(2232);
class C24 {
    static 7;
    static [-1] = "string";
    #n(a26) {
        a26 = this;
        a26.e >>>= -35417;
        const o30 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o30);
        return this;
    }
}
new Uint8ClampedArray();
Array();
Array();
class C39 {
    static 9 = 9.187362692894364;
}
for (const v40 in C39) {
}
class C41 {
    #e;
    static {
        function f43(a44, a45) {
            return a44;
        }
        const o51 = {
            o(a47) {
                const o49 = {
                };
                gc(o49);
                return f43;
            },
        };
        const o53 = {
        };
        const v55 = new Proxy(Uint32Array, o53);
        o51["o"](o51, Uint32Array, "o", "o", v55);
        const v58 = super[this];
        let v59;
        try { v59 = v58.join(-4096, -4096, v58); } catch (e) {}
        const o60 = {
        };
        [/LD/vds,v59];
    }
    m(a65, a66) {
        const o67 = {
        };
        const o70 = {
        };
        const v72 = new Proxy(a66, o70);
        v72.d = v72;
        try { a65(C24, true); } catch (e) {}
        try {
            f1();
        } catch(e76) {
        }
        new Proxy(this, o67);
        class C82 {
        }
        function f83() {
            class C85 {
            }
            new C85();
            const v87 = new C85();
            [C82,C85];
            [257828.6336153492,v87];
            class C90 extends C24 {
            }
            function f91(a92, a93) {
                return -4096;
            }
            Set.toString = f91;
            Set.constructor(Set);
            this.constructor;
        }
        const v97 = "string" && -4096;
        +a66;
        Math.sqrt(v97);
        a65--;
    }
}
const v102 = new WeakSet();
class C104 extends v102.constructor {
}
class C105 {
}
function F106(a108, a109) {
    if (!new.target) { throw 'must be called with new'; }
}
for (let v110 = 0; v110 < 32; v110++) {
}
