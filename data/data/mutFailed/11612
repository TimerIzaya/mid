for (let i5 = (() => {
        let v3 = 0;
        v3++;
        return v3;
    })();
    i5 << i5, i5 < 4;
    i5++) {
    const v12 = [0.6553679441348417,-604344.0463271211,-1000000.0,1000000000000.0,1000000000000.0,-1000000000.0,-1.705497582565481e+308,0.5391517320195894,-8.911117634975259e+307,37427.56225722935];
    try { v12.every(561669686n); } catch (e) {}
    function f14() {
        ([]).constructor;
        new Uint8Array(268435440);
    }
    const v20 = [-1000000000.0,174.42676415473147,0.8776116123017763,800.7051957319159,614534.3252221167,223.35069011100722,0.1881905671759444];
    try { v20.toString(); } catch (e) {}
    function F22(a24, a25) {
        if (!new.target) { throw 'must be called with new'; }
        const v26 = this.constructor;
        try { new v26(); } catch (e) {}
        try { this.constructor(); } catch (e) {}
    }
    new F22();
    const v30 = [2.220446049250313e-16,-Infinity,-48026.77300726564,9.596839266503046];
    try { v30.toReversed(); } catch (e) {}
}
const v33 = new WeakMap();
class C34 {
    static p(a36) {
        let v35 = this;
        v35 &= v35;
        super[Infinity];
        new WeakMap(a36);
        super.b;
        let v41;
        try { v41 = v33.delete(a36); } catch (e) {}
        super.a;
        return v41;
    }
    o(a44) {
        super.h >>= a44;
        super.f = WeakMap;
        return 1073741824n;
    }
}
const v45 = new C34();
function f46(a47) {
    const v49 = new BigInt64Array();
    v49["indexOf"]();
    return -1893447984n;
}
v45.toString = f46;
const v52 = new C34();
const v53 = new C34();
function f54() {
    Int8Array.b = Int8Array;
    class C56 {
    }
    const v57 = new C56();
    return v57;
}
f54();
f54();
let v60 = 8;
v60--;
function f63(a64) {
    C34[a64];
    let v66 = 1073741824;
    class C68 {
        constructor(a70) {
            [a70,v66] = "boolean";
        }
    }
    const v71 = new C68(C68);
    function f72(a73, a74, a75) {
        a73[22] = a73;
        const o76 = {
            ...a75,
            2: v71,
            268435439: C68,
        };
        return o76;
    }
    return C34;
}
Uint16Array[Symbol.toPrimitive] = f63;
new Uint16Array(v60);
new Float64Array(5);
new Float64Array(3346, 3346, 3346);
function f88(a89, a90) {
    const o94 = {
        __proto__: a90,
        "b": a90,
        [a89]: a90,
        "c": a89,
        "e": a90,
        valueOf(a92, a93) {
            super[a92] = "undefined";
            return a93;
        },
    };
    return a89;
}
%OptimizeFunctionOnNextCall(f88);
10 << 10;
const v97 = new Int8Array(10);
function f98(a99, a100) {
    const v102 = 16 | 16;
    new Date(v102);
    return v102;
}
Object.defineProperty(v97, "constructor", { writable: true, enumerable: true, value: f98 });
try { v97.slice(Uint16Array, v45); } catch (e) {}
function f106() {
    async function* f107(a108, a109, a110) {
        a109.c;
        Math.exp(Uint16Array);
        const v115 = !Uint16Array;
        const v116 = +Uint16Array;
        !Uint16Array;
        Math.asinh(v116);
        await (~v115);
        try {
            yield a108;
        } catch(e122) {
        }
        return v116;
    }
    try { f107(f107, f107, 1073741824n); } catch (e) {}
    f107(5, v53, v52);
    const o125 = {
    };
    o125[Symbol.toPrimitive] = f107;
    return o125;
}
const v128 = f106();
!0.8843420658768774;
gc();
class C134 extends Set {
}
const v135 = f106();
const v139 = ([Uint8Array,Uint8Array])["indexOf"](v128, v135);
v139 << v139;
