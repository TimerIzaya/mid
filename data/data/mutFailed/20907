const v0 = [];
const t1 = 9223372036854775807n;
const v2 = new t1();
v2.getPrototypeOf;
new Uint8ClampedArray(14);
const v9 = [-1000000.0];
const v10 = [-1.0,335.2250932691129,-5.0,-4.343092944016538,0.10042945443316664,3.3510537312712785,0.849534706471915,-2.0,0.2092702803555967,-1.8657741022844542e+307];
const v11 = [-619.8484729584994,571463.6716314484,-1000000000.0,191125.7884997041,-3.0,737081.318202666,-9.899979588505136,-134.00657119609275,-1.6473275787121571e+308,-0.9378623004890763];
const v13 = new WeakMap();
function F14(a16, a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        function f20(a21, a22) {
        }
        function F23() {
            if (!new.target) { throw 'must be called with new'; }
        }
        for (let v25 = 0; v25 < 5; v25++) {
            function f26() {
                const v30 = Symbol.toPrimitive.description.codePointAt();
                ([-1.5424212036356715e+308]).shift();
                [1073741824,1073741823,1376142744,1073741825];
                return v30;
            }
            f26();
            %OptimizeFunctionOnNextCall(f26);
        }
        this.d = v13;
    } catch(e35) {
    }
    try {
        this.f = a18;
    } catch(e36) {
    }
}
const v38 = [gc,gc,gc,gc,gc];
v38.toJSON = gc;
function f39(a40, a41, a42) {
    return a40;
}
const v45 = [v38];
const o50 = {
    "b": v11,
    set b(a47) {
    },
    set g(a49) {
    },
    "arguments": v45,
    "type": "function",
};
new Worker(f39, o50);
const v52 = new F14(v0, v0, -162602767n, v10);
const v53 = new F14(v11, v52, 4n, v11);
new F14(v9, v53, 4n, v0);
for (let v55 = 0; v55 < 5; v55++) {
    function f56() {
        return f56;
    }
    const o59 = {
        "type": "function",
    };
    Math.log1p(0.04879611221991542);
    class C63 {
    }
    function F64(a66, a67, a68) {
        if (!new.target) { throw 'must be called with new'; }
        9223372036854775807n instanceof C63;
        const v70 = a67 === a67;
        const v71 = v70 ** v70;
        v71 - v71;
    }
    function f73() {
        for (let v74 = 0; v74 < 5; v74++) {
            new F64(f73, f73, v74);
        }
    }
    new Worker(f56, o59);
}
