const v4 = Date.name;
try { v4.trimRight(); } catch (e) {}
const v6 = new Date();
let v7;
try { v7 = v6.setSeconds(v6, "jFd1"); } catch (e) {}
-12080 !== -12080;
let v12 = -7;
v12--;
function f14(a15, a16, a17) {
    a16 >>> a16;
    a17 >>> a17;
    let v20;
    try { v20 = a15.charAt(-12080); } catch (e) {}
    try { v20.slice(a15, v20); } catch (e) {}
    let v22 = a17--;
    v22--;
    const o31 = {
        [-1087302497]: "splice",
        get a() {
            return v6;
            return -1087302497;
        },
    };
    o31.d = o31;
    return o31;
}
f14.length = f14;
f14("splice", -1087302497, -1087302497);
f14("splice", v12, v12);
f14("jFd1", -1087302497, -12080);
let v39;
try { v39 = ("-9223372036854775807").lastIndexOf(v12); } catch (e) {}
let v42;
try { v42 = ("some").trimStart(); } catch (e) {}
v42[2] = v42;
("-1").__proto__;
try {
    new f14(v39, "jFd1", v7);
} catch(e45) {
}
true || true;
Uint8Array.h = Uint8Array;
let v50;
try { v50 = Uint8Array.from(Uint8Array); } catch (e) {}
try { v50.copyWithin("-9223372036854775807", 1); } catch (e) {}
const v54 = new Int8Array(3816);
const v56 = 4096 | 4096;
const v57 = v56 > v56;
BigUint64Array.length = BigUint64Array;
for (const v59 of "some") {
    v59.f = v59;
    const v60 = v54[1];
    v57 - "bigint";
    Date[9] = v4;
    try {
        Date(792.1745518278124);
    } catch(e64) {
    }
    let [,,,...v65] = v54;
    v65[1538];
    const o67 = {
    };
    o67.a = v60;
    const o68 = {
    };
    o68.a = o68;
    o68.a = v60;
}
const v69 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
function f70(a71, a72) {
    return f70;
}
v69[Symbol.toPrimitive] = f70;
const v75 = [3,-6,7268,-554513674,5,4294967295,861325878,17152,2147483647,5];
function f76(a77, a78, a79) {
    a78[8] = a78;
    function f80(a81, a82) {
        function f84(a85) {
            new WeakSet();
        }
        this.onmessage = f84;
        delete this[142];
    }
    const v91 = [a78,f76];
    const o92 = {
        "arguments": v91,
        "type": "function",
    };
    new Worker(f80, o92);
    const o94 = {
        __proto__: a79,
    };
    return a78;
}
const v95 = f76(v75, v69);
f76(v75, v95, v95);
new BigInt64Array(1073741824);
