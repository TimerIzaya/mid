class C3 {
    constructor(a5) {
        a5[this] = 9007199254740991;
        super[63251] = a5;
        try {
            ("minor").valueOf();
            new Date(-12 % -12);
            a5.toString = a5;
        } catch(e12) {
        }
    }
    static #h = 0;
    static d;
    b = 0;
    static #c = 63251;
}
const v13 = new C3(9007199254740991);
new C3(v13);
const v15 = new C3(C3);
function F16(a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a19;
    } catch(e20) {
        const o22 = {
            2321852491: "object",
        };
        try {
        } catch(e23) {
            eval("");
        }
    }
    try {
        this.a = a18;
        const v29 = new BigUint64Array(9007199254740991);
        v29.reverse();
        function f31(a32, a33, a34, a35) {
            const o36 = {
                [a32]: a32,
            };
            return o36;
        }
        function f37(a38, a39, a40) {
            return a39;
        }
        Worker.toJSON = f31;
        const v43 = [Worker];
        const o44 = {
            "arguments": v43,
            "type": "function",
        };
        new Worker(f37, o44);
    } catch(e46) {
    }
}
new F16(v15, 63251);
new F16(v15, 0);
new F16(v13, 9007199254740991);
class C50 {
    c = 9007199254740991;
    0;
    g = C3;
    static 4294967296 = F16;
    static 6;
    n(a52, a53, a54, a55) {
        new Date();
        const v59 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
        try {
            v59.__proto__ = v59;
        } catch(e60) {
        }
        return a52;
    }
    2782739894;
    static f = C3;
}
new C50();
new C50();
new C50();
const v66 = new Uint16Array(209);
const v67 = 209 > Uint16Array;
try {
    v66.__proto__ = v66;
} catch(e68) {
}
let v69 = 1829;
const v71 = new Uint8Array(v69);
Object.defineProperty(v71, v67, { writable: true, configurable: true, enumerable: true, value: v69 = 209 });
v71[8] = Uint16Array;
let v72;
try { v72 = v69(); } catch (e) {}
try { v66.forEach(v72, v72); } catch (e) {}
function f75(a76, a77, a78, a79) {
    const v82 = new BigInt64Array(4046);
    let v83 = undefined;
    const v84 = v83++;
    const v85 = v84 >> v84;
    Number.isNaN();
    v84 >> v84;
    let o89 = {
    };
    [,...o89] = v82;
    return v85;
}
for (let v90 = 0; v90 < 5; v90++) {
    f75(v90, v90, v90, v90);
}
new Float64Array(3916);
/(\xed\xb0\x80)\x01/vdsy;
const v96 = new Date(Date);
class C97 {
    static #e;
    constructor(a99, a100) {
        try {
            a100.#e = Date;
        } catch(e101) {
        }
    }
}
new C97(v96, Date);
/a[a-z]/vim;
class C105 {
}
class C106 extends C105 {
    ["getPrototypeOf"] = C105;
}
new C106();
