const v3 = [1000000.0,-2.220446049250313e-16,2.0];
try { v3.map(-8); } catch (e) {}
[485601.0522560403];
[9.015235166539275e+306,0.16850673509942105,-2.7907938169345474];
[740688381,-9223372036854775807,1078004644,8,14,-5,257,2147483649];
[4096,6,1933534107,1883258785,-595437498,50892,-176];
const v10 = ([65536,3,-1173228782,16167,-2147483647,9,9,255])[0];
try { ("b").blink(); } catch (e) {}
function f16() {
}
const v17 = /(?:a*)+q(?<a>.)/guds;
v17.unicodeSets = v17;
v17.constructor = f16;
function f18(a19) {
    try { a19.constructor(); } catch (e) {}
    const v21 = a19.constructor;
    const v24 = new Uint8ClampedArray(1000);
    v24.valueOf = f18;
    v24[47] = v24;
    try { v21(a19, f16); } catch (e) {}
    class C26 {
    }
    Object.defineProperty(C26, "g", { writable: true, configurable: true, enumerable: true, value: "10000" });
    C26.g = C26;
    return f18;
}
for (let [i30, i31] = (() => {
        10 - 10;
        return [0, 10];
    })();
    i30 < i31;
    i30 + i30, i31--) {
    for (let v39 = 0; v39 < 50; v39++) {
        f18(v17);
    }
}
5 >> v10;
const v44 = new Float32Array(5);
function f47(a48) {
    class C51 extends Date {
    }
    const v52 = new C51();
    v52.setUTCMinutes(1073741825, C51, C51);
}
Object.defineProperty(Uint8Array, "d", { configurable: true, set: f47 });
Uint8Array.d = Uint8Array;
const v54 = new Uint8Array(1759);
const o55 = {
    ...v44,
    ...v54,
};
o55[1730];
