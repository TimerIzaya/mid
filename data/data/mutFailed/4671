class C3 {
    static [0.6106322082300345];
    static [4294967297];
    static {
        const o5 = {
            __proto__: this,
            ...this,
        };
        Math.cbrt(this);
        this + -62536;
        function f11(a12) {
            const o13 = {
                [a12]: a12,
            };
            return a12;
        }
        %PrepareFunctionForOptimization(f11);
        Math.acosh(o5);
        const v15 = this.constructor;
        try { new v15(); } catch (e) {}
        const v17 = [0.71465078532354,-2.2250738585072014e-308,1.0,-2.2250738585072014e-308,2.2250738585072014e-308,-620.8633845139873,0.0,-1.0,3.3358719500528515];
        const v18 = [-7.462188141503825,-3.070207201828062e+307,0.6861416475431791,1000000000.0,-3.0];
        const o24 = {
            ...v17,
            [Set](a21, a22, a23) {
            },
            "b": v18,
        };
    }
}
const v25 = new C3();
const v26 = new C3();
const v28 = new Float64Array();
delete v28[-1.5286188982640463e+308];
const o35 = {
    [0.490851131893864]: -48490,
    set h(a34) {
    },
};
const v36 = new C3();
class C39 {
}
const v40 = [-48490];
function f43() {
    const v44 = [f43,f43];
    function f45(a46) {
    }
    const v48 = [0];
    [[Reflect.construct(f45, v48, Uint8ClampedArray),v48],-48490];
    const v52 = [v40,Reflect];
    try { v52.findIndex(); } catch (e) {}
    class C55 extends v44.constructor {
    }
    const v56 = new C55();
    v56?.constructor;
    return v44;
}
const v58 = f43();
f43();
let v60 = "129";
["function"];
parseInt("pop");
function f66(a67, a68, a69) {
    const o81 = {
        "e": v25,
        "g": 0.5627399584770968,
        valueOf(a71, a72, a73, a74) {
            let v75;
            try { v75 = a72(a72, 0.5627399584770968); } catch (e) {}
            return v75;
        },
        [C3]: a69,
        toString(a77, a78) {
            v60 >>>= a69;
            const v79 = a67 <= this;
            v79 ? a67 : this;
            return v79;
        },
    };
    return o81;
}
f66(v26, v36, "-65537");
f66(v60, v60, f66(v60, v25, "boolean"));
class C85 {
    constructor(a87, a88, a89) {
        for (let v90 = 0; v90 < 25; v90++) {
            const o94 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o94);
        }
    }
    p(a97, a98) {
        "boolean" - v58;
    }
    static get e() {
        return 1n;
    }
}
const v102 = new C85(C85, C85, C85);
new C85(C85, C85, v102);
new C85();
