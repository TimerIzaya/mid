const v0 = [-1e-15,-1e-15,2.0,274.0498524328814,-5.0,0.0,-2.220446049250313e-16,-120846.19021348609,69360.14343429706,1.3486029613999908e+308];
v0.h = v0;
const v1 = [-2.2250738585072014e-308,1000000000.0,0.819018079204557,235644.54473737348,0.12201849689933586,-1.0,Infinity];
const v2 = [-9.198593066997453e+307,0.9337747252419444,-5.0,-67.66044099915553,-100.1891075344929,-1.6435020514429912e+308,0.0,0.8358006293981523,-957534.2417449788];
const v3 = [4294967296,-4294967297,-7,4096];
function f4() {
    v0[64] = v3;
    const v5 = [v1,v2];
    [v0,v5,[v0,v5]];
    return v1;
}
v3.toString = f4;
let v8;
try { v8 = v3.toString(); } catch (e) {}
const v9 = [5,-4,34173,7];
const v10 = [4294967297,4];
new Date();
function f13(a14, a15, a16, a17) {
    a14.h = v3;
    a16[3] = a16;
    const o23 = {
        "d": a17,
        o(a19, a20) {
            try {
                super.tan();
            } catch(e22) {
            }
            return v10;
        },
        "h": a17,
        "c": a16,
        "b": a14,
        ...a15,
    };
    return o23;
}
f13(v1, v2, v0, v2);
f13(v2, v0, v9, v0)[0];
f13(v0, v2, v1, v0);
const v29 = Math.log2();
Number.isNaN(v29);
const v32 = [315.3838771878211,0.8321654879979539,1.0,-813011.8421276518];
try { v32.pop(); } catch (e) {}
function F34(a36, a37, a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.constructor(a36, a37, a38, a36); } catch (e) {}
    for (let v41 = 0; v41 < 100; v41++) {
        function f42(a43, a44, a45) {
            const o47 = {
                get d() {
                    return a38;
                },
            };
            for (let i = 0; i < 10; i++) {
                !(delete v32[v29]);
            }
            return this;
        }
        a37();
    }
}
new F34();
const v52 = v8?.constructor;
try { new v52(v0, v32, v32, Date); } catch (e) {}
