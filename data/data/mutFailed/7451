let v2 = "a";
function f3(a4) {
    const v5 = a4?.f;
    let v6;
    try { v6 = new v5(v2, v5, "zMKPZ"); } catch (e) {}
    const o15 = {
        "a": "p",
        [a4](a8, a9) {
            const o13 = {
                "execution": v6,
                "type": "minor",
            };
            gc(o13);
            return v2;
        },
    };
    o15[a4] = v2 &= "p";
    v6[8] %= ("zMKPZ")[a4];
    const v17 = a4 >>> "zMKPZ";
    -(v17 - v17);
    return o15;
}
const v20 = f3("p");
const v21 = f3("zMKPZ", v2);
const v22 = f3("zMKPZ");
class C23 extends f3 {
    ["p"] = v21;
    static p(a25, a26, a27, a28) {
        let {"a":v32,"d":v33,} = v20;
        super[v22];
        return 128;
    }
    [f3];
    [v2];
}
C23.prototype = C23;
const v35 = new C23();
new C23();
v2[0];
const v38 = new C23();
try { v38.valueOf(); } catch (e) {}
const v41 = new Float64Array();
try { v41.subarray(v35, C23); } catch (e) {}
try { v41.entries(); } catch (e) {}
Uint32Array.e = Uint32Array;
v41 > Uint32Array;
