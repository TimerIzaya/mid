[-365244.3061316457,-567.2838629043431,-2.2250738585072014e-308,0.0];
[0.478267043566344];
const v2 = [0.573695458926373,0.40132983189211846,-1.492279046310362e+307,1.2239380394631734e+308,1.0,8.33749198658139,0.3743597666917885,6.868676328765218,1000000.0];
class C3 {
    static 3641;
    static d;
    e = v2;
    get h() {
        return this;
    }
    static #b = v2;
}
new C3();
new C3();
new C3();
const o14 = {
};
class C16 {
}
o14.constructor;
const v20 = (1922 % 1922) == "p";
for (let v21 = 0; v21 < 25; v21++) {
    function f22() {
        return f22;
    }
    function f23(a24, a25, a26, a27) {
        function f28() {
        }
        const v30 = -f28.length;
        const v32 = f22().constructor;
        const v33 = v32();
        let v34;
        try { v34 = v33.bind(); } catch (e) {}
        const v35 = v34.bind();
        v32 * v20;
        const v37 = typeof f28;
        let v38;
        try { v38 = v37.italics(v37, v30, v35, v21, o14); } catch (e) {}
        v37 === "n";
        const v42 = new Int8Array();
        const v43 = v42.entries();
        let v44;
        try { v44 = f23.next(); } catch (e) {}
        const v45 = v43.next(1.185961373472971e+308, f22, o14, v44);
        [-2.2250738585072014e-308,-0.0,3.0,743.9950267369297];
        v38.sort(v33);
        const v49 = new Uint32Array(v42, v45, v21);
        v49.subarray().entries();
        ([]).toLocaleString();
        BigUint64Array * 536870887;
        const v59 = ("find").blink().replaceAll;
        try { v59(); } catch (e) {}
    }
    for (let v61 = 0; v61 < 5; v61++) {
        v61();
    }
}
