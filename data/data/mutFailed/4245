class C3 {
    static {
        this["string"] = this;
        super["string"] = "string";
        let v5 = 3289;
        v5--;
        try { new BigInt64Array("p", C3, "EPSILON"); } catch (e) {}
        new BigInt64Array(v5);
        256 + 256;
        Uint8ClampedArray.prototype = Uint8ClampedArray;
        class C16 {
        }
        const v17 = C16?.constructor;
        try { new v17(-2.220446049250313e-16); } catch (e) {}
        const v19 = new C16();
        const v20 = v19?.constructor;
        try { new v20(); } catch (e) {}
        const v22 = [v19,v19,v19];
        const v23 = [C16,C16,C16];
        const v24 = [-2.220446049250313e-16,v23];
        const v25 = ("number").slice(v23, v19);
        const v26 = v25?.toString;
        try { new v26(); } catch (e) {}
        const v29 = ("1G")["trimEnd"]();
        try { v29.blink(); } catch (e) {}
        function f31(a32, a33, a34) {
            const v35 = a33?.toUpperCase;
            try { new v35(); } catch (e) {}
            try { a34.map(v29); } catch (e) {}
            const o38 = {
                ...a34,
                268435441: v19,
            };
            return o38;
        }
        const v40 = f31(v29, v29, f31(v22, v25, v24));
        const v41 = v40?.__lookupGetter__;
        try { new v41(v40); } catch (e) {}
        new Uint8ClampedArray(256);
        new Int16Array(3492);
    }
}
new C3();
new C3();
const v49 = new C3();
const v50 = v49?.constructor;
try { new v50(); } catch (e) {}
try { Uint16Array.from(6); } catch (e) {}
const v57 = new Uint16Array([34352,4,-9223372036854775808,1092764849,-2147483647,-1162070362,-4294967297,8,-591755449]);
v57[4];
new Float64Array(6);
new Float64Array(5);
new Int32Array(4);
try { new Uint8ClampedArray("p", "p", v57); } catch (e) {}
Uint8ClampedArray[1] = 14;
const v70 = new Float32Array(Uint8ClampedArray);
v70[1];
