const v0 = [];
const o1 = {
};
function f2() {
    new Int8Array(1073741823);
    return f2;
}
f2();
f2();
class C11 {
    constructor(a13) {
        function f18() {
            for (const v22 of Array(4087)) {
            }
            return 4087;
        }
        %OptimizeFunctionOnNextCall(f18);
        new Map();
        try { new a13(this, Map, this, Map); } catch (e) {}
        throw Map;
    }
    static 812;
    static #g = 2044028850;
    static 17 = 27864;
    static #c;
    static #b;
}
new C11(C11);
new C11(-2563);
new C11(-2563);
f2();
function f30() {
    const o31 = {
        ...v0,
        "c": v0,
        "e": v0,
        "f": v0,
        "arguments": v0,
        __proto__: f30,
    };
    v0.e = o31;
    65537 == 4096n;
    const v37 = new Int32Array(1024);
    for (const v38 of v37) {
        const o41 = {
            "maxByteLength": 1293466293,
        };
        new SharedArrayBuffer(1796, o41);
    }
    return v0;
}
new Uint8Array(268435440);
Math.atan2(268435440, -803731186);
const o74 = {
    get d() {
        this[0] /= 4294967296;
        let v63 = -908890636;
        const v66 = Math.log(this & --v63);
        new Float32Array(Float32Array);
        function F69(a71, a72, a73) {
            if (!new.target) { throw 'must be called with new'; }
            this.f = a72;
        }
        return v66;
    },
};
for (let i = 0; i < 10; i++) {
    o74.d;
}
