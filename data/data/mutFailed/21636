const v0 = [1.7976931348623157e+308];
[1e-15];
const v2 = [1000000000000.0,-9.166433835042808e+307,-4.388440477917418e+307,0.9914039702349623,2.2087762908065436,1000000000.0];
function f3() {
    return v2;
}
const v4 = [-1000000000.0,-1.0,-1e-15,1e-15,7.179302619570288e+307,938266.426392836,6.132926340652393];
let v5 = [689127.0864927103,-0.3931002411802744,921923.963026063,-4.0,0.23320502929525744,-Infinity,6.901305654356914];
const v6 = [0.35957757490102116,-3.0,-1000000000.0,-1000000000000.0,683.3135407232228,-3.0,1000.0,-1.7976931348623157e+308,-1.7976931348623157e+308];
function f7(a8, a9) {
    const o25 = {
        n(a11, a12) {
            if (this === a11) {
                this ** v4;
            } else {
                v5 = v6;
                let v16 = 1416;
                Math.atanh(v16);
                const v19 = --v16;
                const v20 = v19 || f3;
                v20 ** v16;
                Math.floor(v19);
                268435441 << v16;
                v16 << v20;
            }
            return a9;
        },
    };
    return o25;
}
const t30 = f7(v0, f7);
const v27 = t30(v5, v4);
f7(v2, v4);
const v30 = new Uint8ClampedArray();
class C31 {
    constructor(a33, a34, a35, a36) {
        const v37 = this.constructor;
        try { new v37(a35, a36, a33, v37); } catch (e) {}
        for (let v39 = 0; v39 < 5; v39++) {
            v30[v39] = a36;
        }
    }
}
new C31(v27, Uint8ClampedArray, Uint8ClampedArray, C31);
