const v2 = new Array(816);
const v5 = new Map();
class C6 {
    [v5];
    static set a(a8) {
        try { v5.clear(); } catch (e) {}
        try {
            const o10 = {
            };
            new Map(o10);
        } catch(e12) {
        }
    }
    constructor(a14, a15) {
        const v16 = Array?.constructor;
        try { new v16(a14, null); } catch (e) {}
        const v18 = /(?<!)/gv;
        v18.e = v18;
        const v19 = /(\xed\xb0\x80)\x01/gudmy;
        v19.c = v19;
        /\w|\d*/gudimy;
        Symbol.b = Symbol;
        Symbol.iterator;
        const o33 = {
            [a15]() {
                let v24 = 10;
                const o32 = {
                    next() {
                        v24--;
                        function f27() {
                        }
                        %OptimizeFunctionOnNextCall(f27);
                        f27();
                        const v30 = v24 == 0;
                        const o31 = {
                            "done": v30,
                            "value": v24,
                        };
                        return o31;
                    },
                };
                return o32;
            },
        };
    }
}
try { v5.apply(816, null); } catch (e) {}
const v35 = new C6(v5, Array);
const v36 = v35?.constructor;
try { new v36(null, Array); } catch (e) {}
const v38 = new C6(v2, v2);
v38.b = v38;
new C6(C6, v5);
class C40 {
    1073741824 = v35;
    c = C40;
    1073741825 = v38;
    static {
        super.f;
        var b = this;
        try { this.with(v35); } catch (e) {}
        let v46 = -2;
        v46++;
    }
    268435441;
    8;
    f = v35;
    static #a = C6;
}
new v2();
new C40();
new C40();
try { Math.cos(536870912n); } catch (e) {}
const v57 = Math.acosh(65535);
v57 / v57;
