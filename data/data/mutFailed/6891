class C3 extends TypeError {
}
let v5 = 2684;
const v6 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
let v7;
try { v7 = v6.fill(BigUint64Array); } catch (e) {}
v5 = v7;
new Uint8ClampedArray(231);
new BigUint64Array(6);
const v14 = new Int32Array(2895);
function F15(a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        class C21 extends Map {
        }
        const v22 = new C21();
        new Uint16Array();
        const v25 = [601759695];
        const v26 = [1073741824,1073741823,1376142744,1073741825];
        function f27(a28, a29, a30, a31) {
            -a28;
            a29 && a29;
            a28 >>> a28;
            a30[3];
            try { v26["58572"](..."58572", a31, ...v25); } catch (e) {}
        }
        v22.isPrototypeOf();
        this.f = a17;
    } catch(e39) {
    }
    try {
        this.g = a19;
    } catch(e40) {
        new Uint8ClampedArray(Date);
        for (let v43 = 0; v43 < 25; v43++) {
        }
        -3.0 | -9007199254740992;
    }
    try {
        this.b = a19;
    } catch(e47) {
    }
}
new F15(6, 6, 6);
new F15(6, 2895, 231);
new F15(6, 231, 231);
new BigUint64Array(5);
function F54() {
    if (!new.target) { throw 'must be called with new'; }
}
function F56(a58, a59, a60, a61) {
    if (!new.target) { throw 'must be called with new'; }
}
const v62 = [1000,-7,-2,2,3,65536,1,-536870912,9223372036854775807,6];
const v63 = [-501.9059967159414,-1000000000000.0,1000000000000.0,1000000000000.0,4.675960482263653,3.0,-1.290284909340482e+307,1.0,1.3842307616412396e+308,1.0];
try { v62.sort(v63); } catch (e) {}
new isFinite(1);
class C70 {
}
function f71() {
    return f71;
}
new Int8Array(12);
const v73 = [1.5194593916452507e+308,1.7976931348623157e+308,-655.2599062195703,383261.13963534124,-4.351354601083372];
const v74 = [-3.0767450746058422,-109930.30079491576,1.0710997738525917e+308,1e-15,-4.4029859309287245,1.2647620628346297e+308,0.6128308590917888,-1000000.0,-9.043256096114051];
const v75 = [547.1067310983665,-3.0,NaN,222205.6815515987,2.2250738585072014e-308];
function F76(a78, a79, a80) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a78;
    } catch(e81) {
    }
    try {
        class C82 {
        }
        C82.toString();
        Math.sign(-693493371);
        this.b = a80;
    } catch(e87) {
    }
    const v90 = new Int32Array(-1370868909);
    new URIError(v90);
}
new F76(isFinite, 12, v74);
new F76(v74, 5, v75);
const v95 = new F76(v73, 12, v73);
function* f96(a97, a98, a99) {
    try {
        v63.find(TypeError);
    } catch(e101) {
    }
    yield* v14;
    return BigUint64Array;
}
f96(v73, 5, v7);
v95[65536];
const o105 = {
};
gc(o105);
