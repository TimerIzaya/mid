class C3 {
    #n(a5) {
        const o6 = {
        };
        try {
            o6.c = -38905n;
        } catch(e7) {
        }
        try {
            const o8 = {
            };
            o8.c = -38905n;
            o8.a = a5;
        } catch(e9) {
        }
        try {
            const o10 = {
            };
            o10.c = -38905n;
            o10.a = a5;
            o10.b = a5;
        } catch(e11) {
        }
        try {
            const o12 = {
            };
            o12.toStringTag = -38905n;
            o12.a = a5;
            o12.f = a5;
        } catch(e13) {
        }
        return -38905n;
    }
}
let v14;
try { v14 = new C3(); } catch (e) {}
const v15 = new C3();
const v16 = v15?.constructor;
try { new v16(); } catch (e) {}
const v18 = new C3();
const v19 = new C3();
const v20 = v19?.__defineGetter__;
try { new v20(v15, v15); } catch (e) {}
new WeakMap();
new WeakSet();
function f26() {
    return v18;
}
new WeakSet();
function F29() {
    if (!new.target) { throw 'must be called with new'; }
    function f31() {
        return v14;
    }
    function f32(a33) {
        const v35 = new Uint16Array();
        class C36 {
            static #m(a38) {
            }
        }
        const v39 = new C36();
        ([v39]).map(v35);
    }
    Object.defineProperty(this, "g", { configurable: true, enumerable: true, get: f31, set: f32 });
    const v42 = this?.__lookupGetter__;
    try { new v42(this); } catch (e) {}
    -128 != -128;
    try {
        this.g = -128;
    } catch(e46) {
    }
    try {
        this.b = -128;
    } catch(e47) {
    }
}
const v48 = new F29();
new F29();
new F29();
const v53 = new Uint8ClampedArray(595);
64 >>> 64;
const v57 = new BigUint64Array(64);
0 ^ 0;
function f60() {
    return v57;
}
let [v61,v62] = v53;
const v64 = v48.__proto__?.constructor;
try { new v64(); } catch (e) {}
new Uint8Array(0);
function f68() {
    return 64;
}
f68[Symbol.iterator] = f60;
const v72 = new WeakSet();
try { v72.add(WeakMap); } catch (e) {}
2 >>> 2;
const v80 = [12];
let v82 = -1024;
v82 | v82;
function F84(a86, a87, a88, a89) {
    if (!new.target) { throw 'must be called with new'; }
    a88.name = a89;
    a89.caller = Uint8Array;
    a87 - a87;
    a88.name;
    a89.caller = a89;
}
const v92 = new F84(v82, v82, F84, F84);
const v93 = v92?.constructor;
try { new v93(v92, v80, v15, v92); } catch (e) {}
const v95 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
v95[3];
const v97 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
function F99(a101, a102) {
    if (!new.target) { throw 'must be called with new'; }
    function f103() {
        function f104(a105, a106) {
            a106?.f;
            let {"f":v108,...v109} = v72;
            return Uint32Array;
        }
        return f104;
    }
    Object.defineProperty(this, "toString", { writable: true, configurable: true, enumerable: true, get: f103 });
    const v110 = this?.constructor;
    try { new v110(a102, a102); } catch (e) {}
}
F99.a = F99;
const v112 = new F99();
v112.length = v72;
v112.length = v112;
class C113 {
}
const v115 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v116 = [601759695];
function f118(a119, a120, a121, a122) {
    a120.length;
    a121.caller;
    function f125() {
        try { ("Vre").strike(); } catch (e) {}
        let v129 = Float64Array;
        v129 = a120;
        const v130 = v95.length;
        try {
            v95.forEach(v129);
        } catch(e132) {
        }
        const v133 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v135 = Symbol.toPrimitive;
        const o141 = {
            toString(a137, a138) {
                const v139 = a122 && v129;
                a137 *= v135;
                v139 <= v133;
                return F99;
            },
        };
        ~-268435456;
        const o163 = {
            "c": -4294967297n,
            [522675525n](a145, a146) {
            },
            "c": v116,
            valueOf(a148, a149) {
            },
            [-4294967297n](a151, a152, a153, a154) {
            },
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v115,
            ...v92,
            [v135]() {
            },
            "type": C113,
            ..."Vre",
            valueOf(a157, a158) {
                return Symbol;
            },
            ..."Vre",
            4: "Vre",
            toString(a160, a161, a162) {
                return a160;
            },
            5: -4294967295,
            6: -268435456,
        };
        o163[522675525] = o163;
        try { Float32Array.apply(v135, v135); } catch (e) {}
        const v167 = new Float32Array(1334);
        try { v167.find(v167); } catch (e) {}
        v82 %= -268435456;
        const v169 = new Uint32Array(v97, v130, v135);
        function f170(a171, a172) {
            try {
                v15.length = 5;
            } catch(e174) {
            }
            return 5;
        }
        v169.constructor = f170;
        const v175 = v169?.constructor;
        try { new v175(f68, a119, f125); } catch (e) {}
        v112 - f125;
        try {
            new Float64Array(127);
        } catch(e181) {
        }
        Float64Array.length = Float64Array;
        new Float64Array(3);
        try { Uint16Array(a122, a119, Uint16Array); } catch (e) {}
        new Uint16Array(2);
    }
    function f189() {
        return Symbol;
    }
    function f190(a191) {
        ("minor").valueOf();
    }
    Object.defineProperty(f125, Symbol.toPrimitive, { enumerable: true, get: f189, set: f190 });
    f125.name;
    const v197 = f125();
    %OptimizeFunctionOnNextCall(f125);
    return v197;
}
for (let v198 = 0; v198 < 5; v198++) {
    f118(v112, F84, F99, v198);
}
for (const v200 of v80) {
    Uint8ClampedArray <= v200;
}
delete v80[0];
