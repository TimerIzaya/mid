const v3 = /\x01/gu;
v3.a = v3;
/^xxx$xyz{0,1}/gudisy;
/a\b!/guisy;
const t2 = "L";
t2.length = "L";
const v9 = [-2.982861180664193e+307,-474.1554101923107,0.5266764436369433,2.220446049250313e-16,NaN,-1.2980826520068379e+308,8.630019595245742e+307,119.75530238391661,7.838174934523002e+307,2.0];
try { v9.map(-2008052062); } catch (e) {}
const v11 = [0.462643449168024,-943.52522347554,4.0,-1.0,-1.0,1.0428403251724434e+307,-1.0011763439895003e+307,-2.2250738585072014e-308,81.03215056152703];
[-994.317277186559,-595886.9130466813];
const v18 = ("boolean")?.at;
try { new v18("xh"); } catch (e) {}
-1.0654615543745536e+308 - -1.0654615543745536e+308;
class C22 {
    static #valueOf(a24) {
        const t15 = "boolean";
        t15[-8] = a24;
        a24[5] = -1.0654615543745536e+308;
        new Float32Array(9);
        new Float32Array(2823);
        new Uint16Array(512);
        return Float32Array;
    }
}
try { new C22(); } catch (e) {}
const v35 = new C22();
const v36 = v35?.constructor;
try { new v36(); } catch (e) {}
const v38 = v35?.constructor;
try { new v38(); } catch (e) {}
try { new v38(); } catch (e) {}
const v41 = new C22();
const v42 = new C22();
const v43 = v42?.constructor;
try { new v43(); } catch (e) {}
class C45 {
    constructor(a47, a48, a49, a50) {
        const v51 = a49?.constructor;
        try { new v51(); } catch (e) {}
        const v53 = a50?.constructor;
        try { new v53(); } catch (e) {}
        const v55 = this?.__lookupGetter__;
        v55.length = v55;
        try { new v55(C45); } catch (e) {}
        try { a49.isPrototypeOf(a49); } catch (e) {}
        try { v42(); } catch (e) {}
        try {
            a50.b = a49;
        } catch(e59) {
        }
    }
    #g;
    valueOf(a61, a62, a63, a64) {
        0.6920828961713477 % 1;
        -8 && 0.6920828961713477;
        +v35;
        let v71 = -8 && -8;
        return v71++;
    }
}
try { C45.bind(-8); } catch (e) {}
new C45(C45, "boolean", v42, v42);
const v75 = new C45(v42, v41, C22, C22);
new C45(v42, C22, C45, v75);
const v77 = [-4.0,5.0,1e-15,-1000000.0];
const v78 = [4.0,1.7976931348623157e+308,-1.6746280838181564e+308,Infinity,0.02995849684218521,8.253324943521243e+307,-4.753315469426976e+307,1000000.0];
v78[7] = v78;
v78[3] = v78;
[-1.5131061856231655e+308,0.9940081941996022,-1000000000.0,-9.722353359280868,9.968489719443777e+307,-5.0,-374352.7778849256,-Infinity,1000000000.0,0.05917465816222045];
try { new Float32Array(v11, v11, v77); } catch (e) {}
const v82 = new Float32Array(Float32Array);
for (let v83 = 0; v83 < 25; v83++) {
    v83 - v83;
    function f85(a86, a87, a88, a89) {
        a86[1] = a86;
        a87 === a87;
        let v91;
        try { v91 = a86.join(v83); } catch (e) {}
        v91[1] = v91;
        a87--;
        a87 <= a87;
        const v95 = arguments?.__lookupGetter__;
        try { v95(v95, f85, a87, arguments); } catch (e) {}
        const v98 = "find" == "find";
        const v99 = v98 && v98;
        v99 || v99;
    }
    for (let v101 = 0; v101 < 10; v101++) {
        v101 % v101;
        f85(v82, v83);
    }
}
