[64,4096,-29714,-9223372036854775807];
[-31635,-65536,15,129,4294967297,8];
[9007199254740990,256,4294967295];
new Float32Array(1833);
const v8 = [];
v8.g = v8;
[v8,v8,v8,v8];
function f10() {
    const o13 = {
        m(a12) {
            return f10;
        },
    };
    o13.m();
    return o13;
}
f10();
%OptimizeFunctionOnNextCall(f10);
new Int16Array(129);
const o22 = {
    toString(a19, a20) {
        Object.defineProperty("-884841883", a19, { configurable: true, value: a20 });
        return "-884841883";
    },
    get e() {
        return Int16Array;
    },
    "apply": f10,
};
try { ("").lastIndexOf(o22); } catch (e) {}
const v27 = new Int16Array(128);
v27.h;
function f31(a32, a33, a34) {
    return a34;
}
const v37 = [Uint8Array,0];
const o38 = {
    "arguments": v37,
    "type": "function",
};
new Worker(f31, o38);
const v42 = new BigInt64Array(94);
new Uint16Array(11);
new Int16Array(129);
129 < "-884841883";
const o54 = {
    get c() {
    },
};
class C55 {
    constructor(a57, a58) {
        const v59 = this.__lookupGetter__;
        try { new v59(); } catch (e) {}
        ~a58[2];
        function f64(a65, a66, a67, a68) {
            a65.length;
            a67++;
            const o71 = {
            };
            return o71;
        }
        f64(v42, Uint8Array, f64);
        for (let v73 = 0; v73 < 625; v73++) {
            v73 >>> v73;
            f64(Uint8Array);
        }
    }
}
const v76 = new C55();
const v77 = v76.constructor;
for (let i79 = 0, i80 = v77; i79 < i80;) {
}
class C87 extends Float64Array {
    static {
        gc();
        [5,5];
        try {
            this.c = o54;
        } catch(e94) {
        }
        eval(C87);
    }
}
Math.pow(-1073741824, -Infinity);
new Int8Array(964446029);
