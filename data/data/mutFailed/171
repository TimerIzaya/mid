const v1 = new Map();
const v2 = [1056419606,-2147483647,-32770];
const v3 = [-11,10];
[-61933,10000,1000,65537,1513778442,1073741825,1073741824,-9007199254740991,-12];
const o9 = {
    [-206.79565552697056]: 352693014,
    get g() {
    },
    "g": -206.79565552697056,
};
v3[2817] = -1.0;
("async").toUpperCase();
async function* f13(a14, a15, a16) {
    return a15;
}
const o17 = {
};
new Proxy(v1, o17);
new Uint32Array(381);
const o24 = {
};
class C27 extends WeakSet {
    static #n(a29) {
        function f30(a31) {
            return a31;
        }
        class C32 extends f30 {
        }
    }
}
new Float64Array(256);
const v37 = new Int8Array(2830);
const v40 = new Int32Array(10);
function f43(a44, a45, a46) {
    const o47 = {
        ...v37,
        814452916: 129,
        "f": v40,
        ...v40,
        __proto__: a45,
        [a45]: Float64Array,
    };
    return f43;
}
f43();
new Int8Array(8);
const v56 = new Uint8ClampedArray(129);
v56 < -56166n;
Set.constructor(Set);
new Float32Array(0);
function f61() {
}
const v62 = f61();
class C63 extends f61 {
    static #h = v3;
    7;
    n(a65, a66, a67, a68) {
        let v69;
        try { v69 = new Float64Array(256, ...this, a66, this, a68); } catch (e) {}
        [a66,v2.length,v69,a66];
        return v1;
    }
    #d;
    static [v62];
    4;
    constructor(a73) {
        super();
        for (let v74 = 0; v74 < 5; v74++) {
            super.valueOf();
        }
    }
}
new C63();
new C63();
new C63();
[3,9223372036854775807,-4096,1349432497,512,65537,268435440,-2147483647];
[-1,-38052,1,9223372036854775807,-26519,1402061100,-2011084330,-19607,9,13];
[268435440,24074,158607334,1749129439,4096];
[];
function f18() {
    const o20 = {
        "c": "pR7SG",
    };
    return o20;
}
class C21 extends f18 {
    #toString(a23) {
    }
}
2759 + 2759;
Float32Array[1] = -1383363179;
const v31 = new Float32Array(2759);
v31[31] = v31;
256 / 256;
const v35 = new Uint16Array(256);
new Uint32Array(360);
class C40 {
}
new Uint16Array();
function f43() {
    [] = [NaN,1.0,1.1875413619536744e+308];
    let v45 = -11;
    --v45;
    const o49 = {
        get b() {
            super[this] = -8.233575780020734;
            return -8.233575780020734;
        },
    };
    const o50 = {
        ...o49,
    };
    return f43;
}
360 >> 9;
let v53;
try { v53 = Float32Array.of(); } catch (e) {}
Float32Array[1] = 9;
new v53(Float32Array);
v35.BYTES_PER_ELEMENT;
function f57() {
    class C58 {
        constructor(a60) {
            this.fuck(true);
        }
    }
    return C58;
}
function f65() {
    const o70 = {
        valueOf(a69) {
            return f57;
        },
        __proto__: f65,
        [-52276]: -410.8373818683839,
    };
    return o70;
}
Symbol.toPrimitive;
Object.defineProperty(Float64Array, C40, { configurable: true, enumerable: true, value: f57 });
const v72 = [-1000000000.0,1e-15,-9.803124315434264,-366.4099400694298,1000000000000.0,0.7347183727038488,-Infinity,2.0,0.3916117682859279,-461027.2128179858];
function f73() {
    return v72;
}
class C74 extends f73 {
    constructor(a76, a77, a78, a79) {
        super();
        const o81 = {
        };
        gc(o81);
        v31.constructor;
        const t74 = -2n;
        new t74();
        [-21059];
        const v87 = this.groupToMap;
        v87.d = v87;
        try { new v87(); } catch (e) {}
    }
}
const v89 = new C74();
for (let v90 = 0; v90 < 8; v90++) {
    v89.length = v90;
}
function f91(a92) {
    return Float64Array;
}
Float64Array[Symbol.toPrimitive] = f91;
