new Float64Array(257);
new Uint8Array(251);
new Float32Array(6);
new Uint8ClampedArray(251);
const v14 = new Int16Array(5);
new BigUint64Array(152);
class C19 {
}
const v21 = new C19();
Object.defineProperty(v21, "valueOf", { enumerable: true, value: Symbol });
const v22 = new v14();
const v23 = [v21];
35530n & 35530n;
new Float64Array();
try { Uint8Array.from(v23); } catch (e) {}
function f30(a31, a32) {
    a31.name;
    const v36 = v22();
    function f37() {
    }
    function f38(a39) {
        f38();
    }
    Object.defineProperty(v36, 0, { configurable: true, enumerable: true, get: f38, set: f38 });
    (6).unshift(3);
}
new BigUint64Array(f30);
