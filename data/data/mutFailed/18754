const v4 = new WeakSet();
class C5 extends WeakSet {
    static #toString(a7) {
        return "2147483647";
    }
    get b() {
        const v13 = Symbol.toPrimitive;
        const o19 = {
            [v13]() {
                super.has(-6.2155674919665564);
                return 1.0;
            },
        };
        return -1.030968290102886e+307;
    }
}
const v20 = new C5();
const v21 = new C5();
const v22 = new C5();
class C23 extends WeakSet {
    #g;
    #a = WeakSet;
    constructor(a25, a26) {
        super(a25);
        throw v22;
        -1.030968290102886e+307 <= v21;
    }
    #d = -6.2155674919665564;
    static h = -6.2155674919665564;
    e;
    #o(a29, a30) {
        delete v21?.b;
        return super[a30];
    }
}
const v36 = new C23(C5, 1.0);
const v37 = new C23(C5, 1.0);
const v38 = new C23(v4, -6.2155674919665564);
class C39 extends WeakSet {
    constructor(a41, a42, a43, a44) {
        super(a42);
        const v45 = v21.a;
        super.f ||= 1.0;
        super.g <<= 1.0;
        try {
            v20.valueOf = v45;
        } catch(e46) {
        }
    }
    #c = v4;
    h;
    static #e;
    #d = v37;
    static [v4] = WeakSet;
}
new C39(v37, v21, v36, v20);
new C39(v37, v36, v38, v37);
new C39(C5, v37, v4, v37);
function F50(a52) {
    if (!new.target) { throw 'must be called with new'; }
}
const v53 = new F50(F50);
const v54 = new F50();
const v55 = v54.constructor;
const v56 = new v55(v53, v55);
([536870912,268435441,9007199254740992,57419,129,-2147483647]).indexOf(v53, v56);
