const v2 = new BigInt64Array(3);
v2[BigInt64Array] = BigInt64Array;
new BigInt64Array(512, 3, 512);
const o5 = {
};
const v7 = new Proxy(v2, o5);
const v8 = v7?.constructor;
try { new v8(BigInt64Array, v7, 3); } catch (e) {}
const v11 = new Float32Array(512);
v11[319];
try { new Int32Array(v2, 4096, v11); } catch (e) {}
new Int32Array(4096);
new Float32Array(124);
new BigInt64Array(15);
new Int32Array(9);
const v26 = [672764770];
try { v26.every(v7); } catch (e) {}
class C28 {
}
class C29 extends C28 {
}
try { C29(); } catch (e) {}
const v31 = new C29();
Reflect.isExtensible(v31);
const v34 = [Reflect,Reflect];
v34[1] = v34;
const v35 = v34[1];
const v36 = v35?.construct;
try { new v36(C29, C29); } catch (e) {}
const v38 = v35.set(v35, v26);
v38 || v38;
