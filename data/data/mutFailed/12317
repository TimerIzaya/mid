class C3 {
    static {
        let v6;
        try { v6 = this["toString"]("toString"); } catch (e) {}
        try { v6(0.668200484372443); } catch (e) {}
        const t5 = "toString";
        t5["toString"] = 1e-15;
    }
    static get h() {
        try {
            super.valueOf(this, 1e-15, 0.668200484372443, this, 0.668200484372443);
        } catch(e10) {
        }
        this.__proto__;
        return this;
    }
}
const v12 = new C3();
new v12();
new C3();
new Uint8ClampedArray(v12);
new Uint8ClampedArray(129);
new Int32Array(255);
for (let v24 = 0; v24 < 5; v24++) {
    function f25() {
        const v27 = Symbol.for();
        const o28 = {
            [v27]: f25,
        };
        return f25;
    }
    f25();
    %OptimizeFunctionOnNextCall(f25);
}
