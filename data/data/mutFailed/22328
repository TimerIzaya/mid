function f3(a4, a5) {
    const o24 = {
        13: a4,
        "b": a5,
        [-2147483649n](a7) {
            let v8;
            try {
            const t0 = -9223372036854775807n;
            v8 = t0(this, 2147483647n, ...a5, -9223372036854775807n, -2147483649n);
            } catch (e) {}
            Object.defineProperty(this, a4++, { configurable: true, get: f3, set: f3 });
            ({"h":a5,} = a7);
            a5 in v8;
            new Set();
            v8[a7] = v8;
            v8.e **= v8;
            const v13 = a7 ** -2147483649n;
            let v15 = -1325007414;
            v15++;
            Math.sqrt(v13);
            Math.log(0.40011910757186264);
            v13 >> v13;
            Math.asin(v13);
            --f3;
            -v15;
            return a4;
        },
        [-2147483649n]: a5,
    };
    return o24;
}
const v25 = f3(-9223372036854775807n, -9223372036854775807n);
v25[13] = v25;
const v26 = f3(-2147483649n, -2147483649n);
const v27 = f3(2147483647n, -9223372036854775807n);
function f28(a29, a30, a31, a32) {
    a29[13] = a29;
    a30--;
    a31 ^ a31;
    new BigInt64Array(403);
    try { new Uint16Array(a32, a31, v25); } catch (e) {}
    new Uint16Array(1016);
    16 / -2147483649n;
    new Float64Array(Float64Array);
    const o51 = {
        "h": -2147483649n,
        "d": a30,
        "g": -2147483649n,
        "e": -9223372036854775807n,
        p(a47, a48) {
            const v49 = a29[a29];
            Object.defineProperty(v49, v26, { writable: true, configurable: true, enumerable: true, set: f3 });
            try {
                a29.toString = v49;
            } catch(e50) {
            }
            return v25;
        },
    };
    return o51;
}
f28.length = f28;
f28(v26, 2147483647n, 2147483647n, f28);
f28(v25, v27, -9223372036854775807n, v25);
f28(v27, -9223372036854775807n, -2147483649n, v25);
for (let v55 = 0; v55 < 25; v55++) {
}
gc();
[];
