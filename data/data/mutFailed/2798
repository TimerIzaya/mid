const v2 = new Float64Array(1);
const v5 = new Uint32Array(9);
const v8 = new Uint32Array(v2);
class C9 {
    static o(a11, a12) {
        new Array(10);
        Array[a12 >>= a11] = 127;
        try { v5.indexOf(v8, 1); } catch (e) {}
        return this;
    }
    static m(a18, a19, a20, a21) {
        a19 ||= a20;
        new Uint32Array(1420);
        new Uint8Array(1742);
        new Float32Array(12);
        return v8;
    }
}
const v31 = new C9();
const v32 = new C9();
new C9();
class C34 extends Uint32Array {
    constructor(a36, a37, a38, a39) {
        super(a37);
        try {
            v32.f = v32;
        } catch(e40) {
        }
    }
    static #o(a42, a43) {
        super.length;
        return -21612;
    }
    10 = v8;
}
const v48 = new C34(v32, 127, C9, 9);
new C34(v32, 127, v48, 127);
new C34(v8, 1, v31, 127);
[-0.0,3.5501749464532004,-0.0,-2.220446049250313e-16,0.7626441105891978,-585.9055525866645,1e-15,1000000.0] ** Uint32Array;
