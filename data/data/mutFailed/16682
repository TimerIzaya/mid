new BigInt64Array(9);
new Int32Array(1);
new Int8Array(7);
new Uint8Array(2109);
new Uint8ClampedArray(9);
const v19 = new BigUint64Array(256);
new Uint8Array(268435440);
const v24 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v26 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v27 = [601759695];
function f29(a30, a31, a32, a33) {
    function f34() {
        try {
            v24.forEach(a31);
        } catch(e38) {
            Object.defineProperty(e38, "f", { configurable: true, enumerable: true, value: "p" });
            e38.f = e38;
        }
        const v39 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o45 = {
            toString(a41, a42) {
                (a33 && a31) <= v39;
                return a31;
            },
        };
        let v46 = -268435456;
        v46++;
        const o50 = {
            "maxByteLength": 2694258094,
        };
        const v52 = new ArrayBuffer(2295, o50);
        new Float32Array(v52);
        const o73 = {
            "c": -4294967297n,
            [522675525n](a56, a57) {
            },
            "c": v27,
            valueOf(a59, a60) {
                return this;
            },
            [-4294967297n](a62, a63, a64, a65) {
            },
            "maxByteLength": -4294967295,
            "arguments": v26,
            ..."Vre",
            valueOf(a67, a68) {
                return a68;
            },
            4: "Vre",
            "type": "Vre",
            toString(a70, a71, a72) {
                return "Vre";
            },
            5: -4294967295,
            6: v46,
        };
        const v74 = (a75, a76, a77) => {
            f29(o73, v19, 268435440, a76) instanceof BigInt64Array;
            f29(a33, a76, 2295, v46);
            %PrepareFunctionForOptimization(f29);
            f29(a33, a76, 2295, v46);
            f29(a33, a76, 2295, v46);
            %OptimizeFunctionOnNextCall(f29);
            f29(a33, a76, 2295, v46);
            return a33;
        };
        return a30;
    }
    f34();
    %OptimizeFunctionOnNextCall(f34);
    return f34;
}
for (let v85 = 0; v85 < 5; v85++) {
    f29(-4294967297n, v24, v85, v85);
}
