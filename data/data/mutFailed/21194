const v0 = [560574742,21012,1858344764,33454,-61563,-11];
const v1 = [-2147483648,7,-464811765,-4,38501];
const v2 = [6];
const v3 = [v1];
const v4 = [v1,v1,v3,v0];
[v3,v4,v1];
class C6 {
    2920349193 = v1;
    9;
    static #n(a8, a9, a10, a11) {
        v0[a10];
        return a9;
    }
    #p(a14, a15) {
        this[0] = a15;
        try {
            super.m(v2, this);
        } catch(e17) {
        }
        return v2;
    }
}
new C6();
new v4();
new C6();
[-Infinity,-3.0];
[-557125.8713770537,4.0,-2.220446049250313e-16,-1000000000.0,-3.397772480739521];
[7.0482289407922245,1000000000.0,1000000.0,1000.0,Infinity,-800.5747867692543,1e-15];
function F24(a26) {
    if (!new.target) { throw 'must be called with new'; }
    try { a26.groupToMap(a26, a26, a26, F24, this); } catch (e) {}
    function F28(a30, a31) {
        if (!new.target) { throw 'must be called with new'; }
        try {
        } catch(e32) {
        }
        try {
        } catch(e33) {
        }
    }
}
("number").match(F24);
