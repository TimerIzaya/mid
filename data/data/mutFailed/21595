let v0 = null;
const v1 = [-9.193424165215236e+307,486.1916511950667,-1000000.0,-7.769895890931879e+306];
const v2 = [-2.220446049250313e-16];
const v3 = [1.0,-3.0];
const v5 = new WeakMap(v3);
delete v3[WeakMap];
v1[7] = v0;
v3[1000];
const o8 = {
};
try {
    o8.b = v0;
} catch(e9) {
}
try {
    const o10 = {
    };
    o10.b = v0;
    o10.g = v0;
} catch(e11) {
}
try {
    const o12 = {
    };
    o12.b = v0;
    o12.g = v0;
    o12.h = v5;
} catch(e13) {
}
try {
    const o14 = {
    };
    o14.b = v0;
    o14.g = v0;
    o14.h = v2;
} catch(e15) {
}
const v16 = WeakMap?.bind;
let v17;
try { v17 = new v16(v3); } catch (e) {}
const v18 = new WeakMap();
try { v18.has(v3); } catch (e) {}
const v23 = [-36.118685222292584,-1000000000.0,-2.2250738585072014e-308,-1.141590917643093,1000.0,1000.0,-1.6813029980571341e+308,-5.0,-1000.0];
[3.48959073062759,2.0,556013.4522966524,0.5200290803999792];
[0.5537205093616908,-935173.579085308,0.7179007365658328,1.7976931348623157e+308,0.2340523533487615,-942801.2488502611,111281.11707982887,-2.0,986592.1844110582,Infinity];
function f26() {
    return 256n;
}
const v29 = new Float64Array(129);
const v30 = v29[91];
v29[65536] = WeakMap;
let v32 = v1[v18];
function f33() {
    return v2;
}
new BigInt64Array(233);
64 >> 64;
const v39 = BigInt64Array >= 129;
function F40(a42, a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a43;
    } catch(e45) {
    }
    try {
        this.g = v29;
    } catch(e46) {
    }
}
new F40(o8, 256n, 2147483648n);
new F40(v23, 2147483648n, 256n);
new F40(v3, v30, v17);
v39 || v39;
if (v39) {
    let v54 = -v0;
    let v55 = v0++;
    --v55;
    let v57 = ++v54;
    Math.sqrt(v57);
    ++v57;
} else {
    v32 -= v0;
}
new BigInt64Array(64);
function F61() {
    if (!new.target) { throw 'must be called with new'; }
    F61 /= BigInt64Array;
    new WeakSet();
}
class C69 extends F61 {
}
class C71 extends C69 {
    set d(a73) {
        super.d = this;
    }
}
