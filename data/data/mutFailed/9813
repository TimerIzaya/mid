new WeakMap();
new Uint8ClampedArray(2);
new BigInt64Array(1183);
new Uint8Array(1);
class C17 {
}
const v18 = new C17();
new C17();
const v20 = new v18();
[v20,v18,[-1.0,v20,-48725,2119294231],C17];
[-2.2250738585072014e-308,-48725,-2.2250738585072014e-308,-5.0];
new Int8Array();
new Float32Array(1000);
new Uint8Array(58);
function F33() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v37 = Array(19793);
        v37[1052] = Array;
        for (const v38 of -2.2250738585072014e-308) {
        }
        const v39 = [v37];
        function f40() {
            return 175;
        }
        function f41(a42) {
            new Float32Array(2119294231);
            a42.indexOf();
        }
        let v46 = Symbol;
        Object.defineProperty(v39, v46.toPrimitive, { writable: true, enumerable: true, get: f40, set: f41 });
        new BigUint64Array();
        const v51 = [];
        function F52() {
            if (!new.target) { throw 'must be called with new'; }
            class C54 {
            }
            for (let i57 = this, i58 = 10;
                v46++, i57 < i58;
                (() => {
                    const v63 = [601759695];
                    const v64 = [1073741824,1073741823,1376142744,1073741825];
                    function f65(a66, a67, a68, a69) {
                        function f70() {
                            return a66;
                        }
                        function f71(a72, a73) {
                            return a72;
                        }
                        try { f71(); } catch (e) {}
                        f71(v64, C54);
                        try { v64["find"](..."find", a69, ...v63, ...v64); } catch (e) {}
                        return a69;
                    }
                    for (let v78 = 0; v78 < 10; v78++) {
                        f65(v78, f65, i57, v78);
                    }
                })()) {
            }
        }
        new F52();
        new F52();
        v51[65536] = v39;
        for (let v84 = 0; v84 < 50; v84++) {
        }
        v51[65536] %= v39;
        [v39,v39,v39];
        const v86 = [];
        v86.valueOf = v46;
        Uint16Array.valueOf = Array;
        class C89 {
            static [376363416];
            static {
                super.b = this;
                let {...v91} = this;
            }
        }
        let v92 = 536870912n;
        v92--;
        [-9223372036854775807,45087,-268435456];
        [509174734,-30078599,-1953700757,-725509519,50139,1073741825];
        [15,55234,268435441,0,9007199254740992,129];
        /\p{Script=Greek}/ds;
        /.\P{Decimal_Number}/gvds;
        /xyz{1,32}?a\nb\bc/ums;
        class C100 {
        }
        const v101 = C100.__defineSetter__;
        try { v101(); } catch (e) {}
        v86 >= Uint16Array;
    } catch(e104) {
    }
}
new F33();
new F33();
