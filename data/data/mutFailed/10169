const v3 = new Date();
const v5 = new Set();
let [v6,,...v7] = v5;
v6.getUTCMonth(v3, v3, v6, Date, v3);
class C10 {
    #d;
    static 7 = 4294967297;
    536870888;
    0 = "p";
    static 3916900823 = 4294967297;
    [4294967297];
    1855;
    g = "ignoreCase";
    static e;
    constructor(a12) {
        const v13 = super[this];
        [this,v13];
        const v17 = [10000n];
        const o18 = {
            "arguments": v17,
            "type": "function",
        };
        [this];
        const v22 = new Int32Array(8);
        v22[3] = 9007199254740991;
        [v13,"p","p",this,4294967297];
    }
}
new C10(4294967297);
const o35 = {
    __proto__: C10,
    ...C10,
    [C10](a27, a28, a29) {
        function f31() {
            return f31;
        }
        return "function";
    },
};
new C10("p");
new C10(4294967297);
function f38() {
    return 4294967297;
}
new Uint16Array(257);
new Uint8Array(3);
new Int16Array(3134);
class C51 {
    static {
        for (let i55 = 0, i56 = 10;
            i55 < i56;
            (() => {
                function f60() {
                    return f60;
                }
                const v61 = [601759695];
                const v62 = [1073741824,1073741823,1376142744,1073741825];
                function f64(a65, a66, a67, a68) {
                    function f70() {
                        return a65;
                    }
                    f60();
                    const v73 = new Int8Array();
                    function f74(a75, a76) {
                        return i56;
                    }
                    f74(f74(v62, C51));
                    v73.buffer.slice(2147483648);
                    %OptimizeFunctionOnNextCall(f70);
                    let v83;
                    try { v83 = v62["find"](..."find", a68, ...v61, ...v62, ...522675525n); } catch (e) {}
                    v83 <= a67;
                    return arguments;
                }
                for (let v85 = 0; v85 < 10; v85++) {
                    f64();
                }
                i55++;
            })()) {
        }
    }
}
const v90 = new C51();
function f91() {
    return v90;
}
function f92() {
    const o96 = {
        ...1.0,
        set b(a95) {
        },
    };
    return o96;
}
Object.defineProperty(v90, "b", { enumerable: true, get: f91 });
