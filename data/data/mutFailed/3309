const v0 = [5.773559621602828,-1.7976931348623157e+308,1.7976931348623157e+308,1000000.0];
const v1 = [-3.0,-803740.151019969,4.0,-2.3450006591162625e+306,-7.373743949078904,1000000.0,1000000000000.0,-18930.103907261742,-1000.0,Infinity];
const t1 = [-2.4077721384382356,9.122373475338335];
new t1(13);
let v6;
try { v6 = v1.indexOf(v0); } catch (e) {}
new Uint16Array(3);
try { Uint32Array.of(); } catch (e) {}
new Uint32Array(3);
~0;
const v17 = new Int8Array(4096);
v17[2117];
new Uint16Array(3);
function f22() {
    return f22;
}
const o24 = {
    [v6]() {
    },
};
const v26 = [[Uint16Array]];
function f27(a28, a29) {
    return a29;
}
const v32 = ["function",v26];
const o33 = {
    "arguments": v32,
    "type": "function",
};
new Worker(f27, o33);
try { new Int16Array(Uint32Array, 13, v0); } catch (e) {}
new Int16Array(128);
const v41 = Math.asinh();
v41 >>> v41;
Math.sin(v41);
