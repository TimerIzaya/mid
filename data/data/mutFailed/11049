new Array(2051805166);
function f9() {
    return -8;
}
function F10(a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    a13 + a13;
    a14 - a13;
    try {
        this.e = 0;
    } catch(e17) {
    }
    try {
        this.a = 4096;
    } catch(e18) {
    }
    try {
        this.f = a13;
    } catch(e19) {
    }
}
new F10(0, 2051805166, 0);
const v21 = new F10(2051805166, 0, 8);
const v22 = new F10(-8, 8, 536870912);
const v23 = v22.e;
const v24 = [520126.03439582814,827116.4087908485,-3.0];
new Int16Array();
for (let v28 = 0; v28 < 25; v28++) {
    function f29(a30, a31, a32, a33) {
        try { f29.sort(a31); } catch (e) {}
        Int8Array.prototype = Int8Array;
        new Int8Array(a31);
        class C37 {
        }
        const v38 = [-1024];
        for (let v39 = 0; v39 < 5; v39++) {
            const v40 = delete v38[v39];
            v40 || v40;
        }
        const v43 = v28 <= 0;
        const v44 = new Int8Array(v24, v28, v28);
        try { v44.toSorted(a33); } catch (e) {}
        let v46 = 0 ^ v43;
        v46++;
        function f48(a49, a50) {
        }
        f48.name;
    }
    for (let v52 = 0; v52 < 5; v52++) {
        f29(v24, v24, v28, Date);
    }
    const v54 = [601759695];
    function f55(a56, a57, a58, a59) {
        try { a56.findIndex(f55, f55); } catch (e) {}
        f29.toLocaleString();
        return v23;
    }
    const v65 = new BigUint64Array();
    for (let v66 = 0; v66 < 10; v66++) {
        f55(v54, v66);
    }
    v23(v65, 3331);
    %OptimizeFunctionOnNextCall(f9);
    f55(v65, 3331);
}
function f70(a71) {
    const v72 = `
    `;
}
f70.caller = f70;
function f74() {
    const o84 = {
        [-2147483649](a76, a77) {
        },
        valueOf(a79, a80) {
        },
        valueOf(a82, a83) {
        },
    };
}
function F85() {
    if (!new.target) { throw 'must be called with new'; }
}
class C87 {
    m(a89, a90, a91, a92) {
    }
}
C87.prototype;
function F94(a96, a97) {
    if (!new.target) { throw 'must be called with new'; }
    const o98 = {
    };
}
F94.a = F94;
class C99 {
    static {
        try {
        } catch(e101) {
        }
    }
}
class C102 {
}
C102.length = C102;
function f103(a104, a105, a106) {
    class C108 {
    }
    if (a106) {
    }
}
try { f103(f9, v21, -8); } catch (e) {}
