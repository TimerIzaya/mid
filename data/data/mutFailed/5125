const v3 = [257n,8n,257n];
[257n,v3,v3];
([8n])[0];
class C11 {
    #o(a13) {
        for (let i15 = 0; i15 < 6;) {
            const t6 = -15n;
            var c = t6(this, i15);
        }
    }
}
const v26 = Symbol.hasInstance.toString();
try { v26.match(9007199254740992); } catch (e) {}
const v28 = /(?<!)/gv;
v28.dotAll = v28;
v28.e = v28;
function F30(a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    const v34 = a33 * a33;
    v34 | v34;
    class C36 {
        constructor(a38) {
            let v39 = "atan2";
            try { a38[v39](); } catch (e) {}
            v39++;
        }
    }
    new C36(-59992);
    const v43 = this.g;
    Symbol.c = 5;
    class C48 {
        [1.7976931348623157e+308] = 23354;
        #h;
        1;
        [23354];
        [-4.055130549492246];
    }
    const v49 = new C48();
    for (const v50 in v49) {
    }
    const v55 = 2 >= 2;
    v55 && v55;
    try { new v43(this, F30, 257n); } catch (e) {}
}
Array(-59992);
C11 < C11;
const o61 = {
};
const v62 = new F30();
const v63 = v62?.constructor;
try { new v63(-1718867680n, -59992); } catch (e) {}
const t51 = v62.constructor;
const v66 = new t51();
const v67 = v66?.constructor;
try { new v67(F30, true); } catch (e) {}
