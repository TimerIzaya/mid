const v2 = new Float64Array(8);
new Uint16Array(5);
class C6 {
}
new C6();
const v9 = ("I").localeCompare();
const v10 = [1000000.0,0.218433446981681,-5.0,-919787.2036172998,872389.6270716691];
const v12 = [v9];
Reflect.apply(v10.pop, v9, v12);
const v17 = new Float64Array(16);
class C18 extends Float64Array {
    [-1];
    2050;
    static #h;
    constructor(a20, a21, a22) {
        super(v2, a21, a20);
        try {
            v2.#h;
        } catch(e24) {
        }
        super[v2] = v17;
        v2[a21];
    }
    static #f = Float64Array;
}
new C18(5, 8, 8);
new C18(8, 16, 5);
new C18(16, 8, 16);
class C55 {
}
const o56 = {
};
const v57 = [601759695];
const v58 = [427812215,61195,-2147483647,4096,-2147483647,30905];
try { v58["find"](..."find", Float64Array, ...v57, ...v58); } catch (e) {}
class C61 extends C55 {
    constructor(a63) {
        super();
        for (let v64 = 0; v64 < 25; v64++) {
            this["p" + v64] = v64;
        }
    }
}
new C61();
