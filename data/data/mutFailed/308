new Float64Array(8);
new Uint16Array(7);
const v8 = new Int32Array(855);
function f9(a10, a11, a12) {
    const o20 = {
        "g": 7,
        8: 7,
        [Float64Array]: a11,
        __proto__: v8,
        "c": 8,
        512: 855,
        "h": 8,
        2655555256: a12,
        "f": Uint16Array,
        get d() {
            Math.atanh(a12);
            Math.min(-65537);
            -65537 + -3.0;
            return -3.0;
        },
    };
    return o20;
}
f9(7, 8, 7);
f9(8, 8, 7);
f9(855, 8, 855);
new Uint8Array(8);
new Float64Array(2647);
const v32 = new BigUint64Array(41);
function f33() {
    const o38 = {
        8: 0.043152456200264866,
        get a() {
            Math.acos(0.043152456200264866);
        },
    };
    o38.toJSON = o38;
    return o38;
}
const v39 = f33();
const v40 = f33();
function F42(a44, a45, a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = 8;
    a45.toJSON = a44;
    this.d = 257;
    this.h = a45;
}
const v48 = new F42(v40, v39);
Object.defineProperty(v48, "toJSON", { configurable: true, enumerable: true, value: v32 });
function f50(a51, a52, a53) {
    function f55(a56) {
    }
    a51[1] = a53;
}
const v59 = [v48];
const o60 = {
    "arguments": v59,
    "type": "function",
};
new Worker(f50, o60);
