let v5;
try { v5 = (1.7043108577412854e+308)["log"](2.0, 2.0, 0.0753732807402252); } catch (e) {}
const t2 = "log";
t2[4] = 0.0753732807402252;
const v6 = delete v5?.[v5];
v6[v6] = "log";
0.696268692300041 * 0.696268692300041;
[536870888,-9223372036854775808,8,-4];
[26885,14,1];
const v12 = [129,2027196794];
[-0.537290172503269,711.2272436545547,1.0,-934.3498277490725,-419.4161284018503,2.220446049250313e-16,-4.384948404892838e+307];
const v14 = [1000000000.0];
~0.0753732807402252;
for (let v16 = 0; v16 < 32; v16++) {
    v12["p" + v16] = v16;
}
v14.g = v14;
const v20 = ([-413146.87231104716,-7.031511779366273,0.5502804846380683,2.0,-1.1571968381578873e+308])?.includes;
try { new v20(-2.519405190430388e+307); } catch (e) {}
class C25 {
    static #a;
    static valueOf(a27, a28) {
        const v29 = super.d;
        try { v29(); } catch (e) {}
        return 2.0;
    }
    [1];
    static [1] = 255;
    [255];
    f = 129;
}
try { C25(); } catch (e) {}
const v32 = new v14();
const v33 = new C25();
v33[255] = v33;
const v34 = new C25();
1n !== 1n;
let v37 = -65536n;
let v39;
try { v39 = v32.m(1n, 10000n, 10000n, 1); } catch (e) {}
function f40(a41, a42, a43) {
    a42++;
    let v45;
    try { v45 = v39(a42); } catch (e) {}
    v45 = a43;
    v37 >>= a43;
    v32[10] = 1n;
    v34.f;
    return v37;
}
f40(255, 255, 1n);
