const v1 = /h\x0f+/gvdis;
const v2 = /[y(a)+]/gus;
const v3 = /[\00011]/;
const v7 = new Float32Array(10, 10, 10);
function f8() {
    const v10 = [9007199254740992,-12,-65536,21712,-1,-65536,-152029754,536,-4,1193126662];
    const o11 = {
        [v10]: undefined,
    };
    return v1;
}
v7.toString = f8;
const v13 = new Float64Array();
v13[10] = v7;
const t14 = "byteOffset";
t14[4] = Float64Array;
const v14 = [-1000000.0,-4.225037326075297e+307];
const v15 = [3.0,1.673958035337828e+308,-Infinity,-0.5552166807072556,1000000000000.0,-2.0,-3.0,-593526.0705355834];
[-4.0,2.0,0.2894460957216908,51691.21331618703,-1.0,-0.7235218865024855,91908.04690942285,0.004020284866636192,2.0,674.2490346153288];
class C17 {
    set c(a19) {
        super[v14] = null;
        v2 in v14;
        const o21 = {
        };
        new Proxy(this, o21);
    }
    static toString(a25, a26) {
        a25[v2] = v14;
        let v27 = 0;
        do {
            try { this.toLowerCase("byteOffset"); } catch (e) {}
            v27++;
        } while (v27 < 10)
        a26[this] <<= a26;
        const v33 = typeof a25;
        try {
            v2.source = 10;
        } catch(e34) {
        }
        super[this] = v15;
        v33 === "string";
        return v3;
    }
}
new C17();
new C17();
new C17();
function f40() {
    return null;
}
[-4.562758933758208e+307,196.1547960793041,1e-15,-2.220446049250313e-16];
[-1e-15];
[-5.846780600417228,0.0,-3.0,1e-15,-0.0,-1.455189866873828e+308];
for (let v44 = 0; v44 < 5; v44++) {
    Math.atanh(v44);
}
