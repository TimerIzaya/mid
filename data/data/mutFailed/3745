class C2 extends WeakSet {
    m(a4) {
        Object.defineProperty(this, 10, { writable: true, enumerable: true, value: a4 });
    }
    129;
}
class C7 {
    20 = 1000.0;
    static [-2] = 1000.0;
    static set f(a9) {
        const v10 = this > "toString";
        ([-7.127262073336987e+307,9.142894664271836,5.0]).toLocaleString();
        if (v10) {
            const t13 = "toString";
            delete t13[1000.0];
        } else {
            1000000000000.0 ** this;
            ~a9;
            function F16() {
                if (!new.target) { throw 'must be called with new'; }
            }
            new F16();
            class C19 {
                static {
                    try {
                    const t0 = 1000.0;
                    t0();
                    } catch (e) {}
                }
                static f;
            }
        }
    }
    #h = 1000.0;
    static #m(a23) {
    }
    constructor(a25, a26, a27) {
        a26.#a;
    }
    static c = 1000000000000.0;
    static 65535 = "toString";
    static #d;
}
const v29 = new C7();
const v30 = new C7();
const v31 = new C7();
function f32(a33, a34, a35, a36) {
    const o60 = {
        set g(a38) {
            for (let v39 = 0; v39 < 5; v39++) {
                v39 & v39;
            }
            const t52 = ("V9t").isPrototypeOf;
            %OptimizeFunctionOnNextCall(t52());
            super.a -= a38;
            let v45 = 4294967297;
            Math.hypot(v45);
            f32(a38, v45, a33, this);
            %PrepareFunctionForOptimization(f32);
            f32(a38, v45, a33, this);
            function f50() {
                return f50;
            }
            v45 >> 8798;
            f32(a38, v45, a33, this);
            %OptimizeFunctionOnNextCall(f32);
            f32(a38, v45, a33, this);
            const v55 = C7 * 2.7579827184853813e+307;
            --v45;
            v55 - --C7;
            -v45;
        },
        __proto__: a36,
        "b": a34,
    };
    return o60;
}
const v61 = f32(v31, "toString", v30, v30);
f32(v29, v61, v61, "toString");
f32("toString", v29, 1000.0, v29);
new BigUint64Array(9);
new Uint8Array(138);
try {
    BigInt(-0.9475779989772164);
} catch(e75) {
}
new Uint32Array(3924);
const t87 = [-147676202];
t87.length = 1;
