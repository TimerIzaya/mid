class C3 {
    [19273];
    constructor(a5, a6) {
        this[19273] = this;
        a6 >>> a6;
        3768 + 3768;
        new Uint32Array(3768);
        new Int32Array(7);
        new Int8Array(5, Int32Array);
    }
}
new C3(64, 19273);
const v19 = new C3(19273, 19273);
v19[19273] = v19;
const v20 = new C3(64, 19273);
v20[19273] = v20;
new Uint16Array(0, 0);
new Int32Array(Int32Array.prototype);
161 == 161;
new Int32Array(161);
8 / 8;
let v38 = Array();
function f39(a40, a41) {
    a41 + a41;
    const o50 = {
        "b": a40,
        ...a41,
        [a40](a44, a45) {
            const v47 = WeakMap(a44);
            this.b;
            super[v47] = v38;
            function f49() {
                return a40;
            }
            return Array;
        },
    };
    return o50;
}
const v52 = f39(f39(8, 8), f39);
const v53 = f39(v52, Array);
v53.b;
const v55 = [-439900.9503882638,1.0,6.3170898061028105];
try { v55.includes(v55); } catch (e) {}
const v57 = [2.2250738585072014e-308,-642410.6561922245];
const v58 = [1000.0,-2.693837761401012];
function f59() {
    return v53;
}
function f60(a61, a62) {
    try { a61.values(); } catch (e) {}
    a62[1];
    const o75 = {
        get h() {
            4294967296 + v38--;
            ++v38;
            Math.log1p(4294967296);
            v38++;
            -698162.0562706811 % 4294967296;
            return v57;
        },
    };
    o75.d = o75;
    return v38;
}
f60.arguments = f60;
const v76 = f60(v55, v58);
const v77 = f60(v57, v55);
try { ("p").strike(); } catch (e) {}
try { v77["p"](v53, v52, v76, 8); } catch (e) {}
const o81 = {
};
o81.b = "65536";
try {
} catch(e82) {
}
try {
    const o83 = {
    };
} catch(e84) {
}
try {
    const o85 = {
    };
    o85.h = o85;
} catch(e86) {
}
try {
    const o87 = {
    };
    o87.c = o87;
} catch(e88) {
}
