const v2 = new Int32Array(13);
const v5 = new BigUint64Array(16);
const v8 = new Uint16Array(2407);
class C9 extends BigUint64Array {
    get e() {
        const v12 = new Set();
        return v12;
    }
    get h() {
        super.with(2407, 13);
        this ^ 16;
        v5 < v2;
        return 13;
    }
    static c = v8;
    [16];
    [2407];
}
new C9();
new C9();
new C9();
/(?:foo)\xf0\x9f\x92\xa9[(?:a+)*]/vims;
/(x)(x)(x)\2*/uimsy;
/A\1\2(a(?:\1(b\1\2))\2)\1DRK/vmy;
class C24 extends SharedArrayBuffer {
    static #n(a26, a27) {
        Uint16Array % this;
        super[this] = Int32Array;
        return a27;
    }
}
new C24();
