function f0() {
}
class C4 extends f0 {
    static #o(a6) {
        super.b = a6;
        const t5 = "1497964113";
        t5[C4] = "number";
        return a6;
    }
    constructor(a8, a9) {
        super();
        a8[2602495766] = 0.7210370868679143;
    }
    static valueOf(a14, a15) {
        let v18 = 65536;
        Math.ceil(f0);
        f0 >> f0;
        return ++v18;
    }
}
const v22 = new C4("1497964113", "4D");
new C4("number", v22);
new C4("number", "1497964113");
const v25 = [0.4387508944761541,0.0,-2.0];
[-2.0,-9.554380649464558e+307,4.0,0.42571391000827064,-1000.0];
[-727.6389094922488,-2.0,241094.70690361457,0.6199173385879254];
new Uint16Array(168);
new Float32Array(0);
new Float64Array(14);
function F37(a39, a40, a41, a42) {
    if (!new.target) { throw 'must be called with new'; }
    const v43 = this.constructor;
    14 >> a42;
    v43[3768629517] = v25;
    a40 - v43;
    try {
        v22.d = v25;
    } catch(e46) {
    }
    try { new v43(); } catch (e) {}
    for (const v48 in this) {
        delete this?.h;
    }
}
const v50 = new F37(F37, F37, F37, F37);
const v51 = new F37();
const v53 = new BigUint64Array(v50, v51);
for (const v54 in v53) {
}
