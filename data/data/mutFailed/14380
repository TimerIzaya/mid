const v2 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f3() {
    try {
        v2.forEach();
    } catch(e5) {
        e5.message;
        const v7 = e5.constructor();
        const o8 = {
            "execution": v7,
        };
    }
    return f3;
}
f3.call(v2, f3, v2, f3);
function f11() {
    return f11;
}
try {
    new f11();
    /Ckza\Wb?/vis;
    /Ma\W+/gudm;
} catch(e15) {
}
let v19 = 6;
const v21 = [-6.672391061426152e+307];
function f22() {
    [f22,f22,f22,f22,f22];
    v21["pop"]();
    return v21;
}
v2();
%OptimizeFunctionOnNextCall(f22);
new BigInt64Array(v19);
new Int8Array(47);
new Int8Array(Int8Array);
for (let v34 = 0; v34 < 10; v34++) {
    function* f35(a36, a37, a38) {
        return a37;
    }
    f35();
}
class C43 {
    constructor(a45, a46) {
        Object.defineProperty(this, "constructor", { writable: true, configurable: true, enumerable: true, value: Date });
        const v47 = this.constructor;
        try { new v47(-15n); } catch (e) {}
    }
}
do {
    v19++;
} while (4 < 4)
[802860232,-65536,-4,9007199254740992];
[127,4,-933964654];
