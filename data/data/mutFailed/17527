new Int32Array(1008);
new BigInt64Array(1024);
new Float64Array(255);
/[xyz{1,}]/vdy;
/A/vdiy;
/foo(?!bar)baz8H/gu;
const o16 = {
};
o16.h = o16;
const v18 = !o16;
const v19 = 1842642860 % v18;
v19 % v19;
const v21 = new WeakMap();
try { v21.delete(v18); } catch (e) {}
class C25 {
    static {
        try {
        const t0 = "boolean";
        t0(this);
        } catch (e) {}
    }
}
try { new C25(); } catch (e) {}
const v30 = ("isInteger")?.replaceAll;
const v37 = [-2147483647,64098,-9383,1024,129,-5];
[1000,-16,-38597,12,-3399,32508];
const v39 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v41 = new Uint32Array();
const v43 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v44 = [601759695];
const v45 = [1073741824,1073741823,1376142744,1073741825];
new Int8Array();
const v49 = [];
v49["concat"]();
function f52(a53, a54, a55, a56) {
    function f58() {
        let v61 = Float64Array;
        v61 = a54;
        b = v44;
        v39.length;
        try {
            v45.forEach(a54);
        } catch(e64) {
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o66 = {
        };
        const o81 = {
            "c": -4294967297n,
            "c": v44,
            valueOf(a69, a70) {
            },
            1073741824: v41,
            "maxByteLength": -268435456,
            "b": -4294967295,
            [-4294967297n](a72, a73, a74, a75) {
                class C77 extends Date {
                    static get c() {
                    }
                }
                eval();
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v43,
            256: a56,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            6: -268435456,
        };
    }
    f58();
    const v84 = new Int8Array();
    v84.buffer.slice(2147483648);
    const v90 = new Int32Array(1024);
    v90[3];
    for (let v92 = 0; v92 < 10; v92++) {
    }
    %OptimizeFunctionOnNextCall(f58);
    const v93 = [-5,2147483649,-4294967295,1,8,-4331,52354,15231];
    v93["unshift"]();
    function f97(a98, a99, a100, a101) {
        let v104;
        try { v104 = v93["find"](..."find", a101, ...v49, ...v93, ...522675525n); } catch (e) {}
        v104 <= a100;
        return arguments;
    }
    for (let v106 = 0; v106 < 5; v106++) {
        f97(v49, v106, false, v106);
    }
    let v110;
    try { v110 = v45["find"](..."find", a56, ...v44, ...v45, ...522675525n); } catch (e) {}
    v110 <= a55;
    function F112() {
        if (!new.target) { throw 'must be called with new'; }
        for (let v114 = 0; v114 < 50; v114++) {
            v114 << v114;
            for (let v116 = 0; v116 < 25; v116++) {
                this["p" + v116] = v116;
            }
        }
    }
    return arguments;
}
for (let v119 = 0; v119 < 10; v119++) {
    f52();
}
%OptimizeFunctionOnNextCall(f52);
f52();
[-50328,-14,3,128,-11,64,-65535];
class C123 {
    [v37] = -1000000.0;
    constructor(a125, a126, a127, a128) {
        %VerifyType(a128);
        super[this];
    }
    g;
    c;
    #toString(a131, a132, a133) {
    }
    1 = 257n;
}
new C123(1073741825n, 1.0, 7.589647165982214);
const v135 = new C123(411585671n, -1000000.0, -1000000.0, 1.0);
new C123(v135, -1000000.0, 1.0);
/(?:a*)+bU\u0034xyz{1,32}/udi;
/vfoo|(bar|baz)|quux/gvds;
/JO/gvy;
class C142 {
    #m(a144, a145) {
        function f146() {
            return a145;
        }
        super[a145] = "f";
        %VerifyType(a145);
        return f146;
    }
    static c;
}
try { C142(); } catch (e) {}
const v148 = new C142();
const v149 = new C142();
v149?.constructor;
const v151 = new C142();
v151?.constructor;
class C153 {
    p(a155) {
        this.g ^= this[8];
    }
    static #n(a158, a159, a160, a161) {
    }
    7 = v151;
    #a = v149;
}
const v162 = new C153();
v162[7] = v162;
const v163 = new C153();
v163[7] = v163;
const v165 = [[],"f",v151,381717.6504737276];
[v148];
function F167() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(); } catch (e) {}
}
new F167();
const v171 = new F167();
function F172(a174, a175) {
    if (!new.target) { throw 'must be called with new'; }
    const v176 = a175?.__lookupGetter__;
    try { v176(); } catch (e) {}
    try { this.constructor(F172, this); } catch (e) {}
    a174.e = a174;
}
F172.arguments = F172;
new F172(v171);
("Hyo9")[1];
const t179 = "at";
t179[1] = "at";
([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap?.constructor;
const v186 = [-4.202468609045087];
try { v186.every(v165); } catch (e) {}
[0.8434386161503777];
("4i")?.toWellFormed;
const t185 = "4i";
t185[1] = "4i";
const t189 = "RpXR";
t189[3] = "RpXR";
const t191 = "RpXR";
t191[1] = "RpXR";
("c")?.toLocaleUpperCase.length;
("Vre").fixed().codePointAt();
function f199(a200) {
    return a200;
}
class C201 {
    constructor(a203) {
        ("valueOf").localeCompare(a203, "valueOf");
    }
}
const v205 = new C201();
const t204 = v205.constructor;
new t204(C201);
try { new v30("998423439", C25); } catch (e) {}
9 >> 9;
try { Uint32Array.from(15n); } catch (e) {}
const v217 = new Uint32Array(2432);
const o218 = {
    ...v217,
};
const v220 = 9007199254740991n * 9007199254740991n;
v220 * v220;
Math.sin(-5345);
function f225() {
    const o230 = {
        [-1000000.0]: 0.0,
        set e(a229) {
        },
    };
    return f225;
}
f225.caller = f225;
const v231 = f225();
const v232 = f225();
class C233 {
    static [f225] = v232;
}
try { C233.bind(v231); } catch (e) {}
