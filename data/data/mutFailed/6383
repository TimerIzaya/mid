let v1 = -13;
class C3 {
    p(a5, a6) {
        try { a6(9007199254740991, a5, a5, 9007199254740991, v1); } catch (e) {}
        v1 *= (a5 = -9);
        typeof a5 === "function";
        return 9007199254740991;
    }
    static [9007199254740991] = -9;
    static h;
}
const v11 = new C3();
new C3();
const v13 = new C3();
class C14 extends C3 {
    static g;
    constructor(a16, a17) {
        const v18 = this.constructor;
        try { new v18(); } catch (e) {}
        const v21 = Math.atan2(this);
        v21 ** v21;
    }
    [-9];
    #n(a24, a25, a26, a27) {
        const v28 = super[9007199254740991];
        const v31 = new BigInt64Array();
        const v32 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
        let v33;
        try { v33 = v32.some(); } catch (e) {}
        const v34 = [-1.7976931348623157e+308];
        function f35(a36, a37, a38, a39) {
            const o47 = {
                toString(a41, a42, a43) {
                    try { this.toString(a42, v33, a41); } catch (e) {}
                    a42++;
                    a38[a37] = a36;
                },
            };
            return o47;
        }
        f35(v31, 129, v34);
        v13[6] = C3;
        const v50 = [a27,a27,a25,[v28,v11,a24]];
        [v50,v11,v50,v50,v28];
        return 9007199254740991;
    }
    f = v1;
}
new C14();
function f56(a57, a58) {
    const o60 = {
        [8.946504243780264e+307]: a58,
        get g() {
            return a58;
        },
    };
    return o60;
}
f56(-9.389413203732939e+306, -1000000000000.0);
new C14();
new C14();
class C64 {
}
new C64();
function F66(a68, a69, a70) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e71) {
        function f72(a73) {
            return Uint32Array;
        }
    }
    class C76 {
    }
    const v77 = new C76();
    const v78 = new C76();
    const v79 = new C76(C14);
    function F80(a82, a83, a84, a85) {
        if (!new.target) { throw 'must be called with new'; }
        const v86 = this.constructor;
        try { new v86(Date, Date, a82, Date); } catch (e) {}
        a83[2147483648] = a83;
        a85[2147483648] = a85;
    }
    new F80(C76, v78, v77, v78);
    new F80(v78, v78, v79, v77);
    [[-1e-15,-4.547098672084515,6.731189859503068,1000.0,1000.0,414.1111077300918,567.5737904015757]];
    ("by").normalize();
    class C95 {
        toString(a97) {
            super[this];
        }
    }
    const v100 = new Int8Array(1159);
    new Uint8ClampedArray();
    const v105 = [4294967296,-57202,256,48562,333990054];
    v105.length = 1957281702;
    try { Uint32Array.apply(2, v105); } catch (e) {}
    const v109 = new Uint8ClampedArray();
    for (const v110 in v100) {
        const v111 = v100[1];
        const v112 = v100[2];
        try { v109["forEach"](...v112, v111, ..."forEach"); } catch (e) {}
    }
}
new F66();
