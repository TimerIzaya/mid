let v6 = [15];
const v7 = [4294967295n,129n,v6];
[4294967295n,3n,v7];
class C9 {
    #f = 3n;
    static set e(a11) {
        v7[a11 - 696937376];
        v6 = this;
        try {
            v7.#f;
        } catch(e15) {
        }
    }
    static [15];
    static [v7] = 3n;
    static #b;
    [129n] = 15;
    static h;
}
new C9();
const v17 = new C9();
const v18 = new C9();
function f19() {
    return v17;
}
function f20(a21, a22, a23, a24) {
    const o32 = {
        get e() {
            const v28 = a22 >>> 536870888;
            a22 | 536870888;
            a21 - v28;
            return a22 << this;
        },
        __proto__: a22,
        "e": 4294967295n,
        "c": v18,
        14: v18,
        "a": a23,
        [3n]: a24,
    };
    return o32;
}
const t42 = 3n;
f20(3n, v6, t42(129n, v7, f20(4294967295n, v17, v6, 15), 15), 696937376);
const v36 = /1xyz{1,}?/gims;
const v37 = /h\p{gc=Nd}/vdy;
const v38 = /\xf0\x9f\x92\xa9a*/us;
function F42(a44, a45, a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
}
const v48 = new F42(v38, 1, -1263139894, F42);
new F42(v36, v38, -23596, v48);
const v50 = new F42(v37, F42, -23596, 1);
const v53 = v50 | F42;
let v54;
try { v54 = v37(v38, v53, v53); } catch (e) {}
if (v54) {
    let v55;
    try { v55 = ("catch").codePointAt(v54); } catch (e) {}
    [,v55] = "iterator";
} else {
    new WeakSet();
}
