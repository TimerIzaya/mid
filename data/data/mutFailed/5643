class C3 {
    e = 386020469;
    static o(a5, a6) {
        let v8;
        try { v8 = a5["sqrt"](); } catch (e) {}
        v8 = 468259.60535471304;
        return "sqrt";
    }
    static [386020469];
    #d = 468259.60535471304;
    [468259.60535471304];
}
C3[386020469];
const v10 = new C3();
const v11 = v10?.constructor;
try { new v11(); } catch (e) {}
const v13 = v10?.__defineSetter__;
try { v13.apply("bigint", "bigint"); } catch (e) {}
let v15;
try { v15 = new v13(468259.60535471304, C3); } catch (e) {}
const v16 = new C3();
v16.a = v16;
const v17 = new C3();
v17.b = v17;
class C18 extends C3 {
    static #f;
    static #valueOf(a20, a21) {
        a21[C3] = a20;
        try {
            v17.#f;
        } catch(e26) {
        }
        return a20;
    }
}
C18.prototype = C18;
const v27 = new C18();
const v28 = new C18();
v28.e = v28;
const v29 = new C18();
class C33 {
    m(a35, a36) {
        super[a36];
        a36?.[11];
        return 5.0;
    }
    constructor(a40) {
        this.b = this;
        class C41 {
            static [11] = this;
            static d = 11;
            static [this] = this;
        }
        let v42;
        try { v42 = new C41(); } catch (e) {}
        const v43 = v42?.constructor;
        try { new v43(); } catch (e) {}
        const v45 = new C41();
        try { v45.constructor(); } catch (e) {}
        const v47 = v45?.constructor;
        v47.length = v47;
        try { new v47(); } catch (e) {}
        const v49 = new C41();
        const v50 = v49?.constructor;
        try { new v50(); } catch (e) {}
        const v52 = v49?.__lookupGetter__;
        try { new v52(a40); } catch (e) {}
        const v54 = new C41();
        try { v54.constructor(); } catch (e) {}
        const v56 = v54?.constructor;
        let v57;
        try { v57 = new v56(); } catch (e) {}
        const v58 = v57?.constructor;
        try { new v58(); } catch (e) {}
    }
}
const v60 = C33?.toString;
try { new v60(); } catch (e) {}
const v62 = new C33(11);
const v63 = new C33(11);
v63.h = v63;
const v64 = new C33(-5.0);
function F65(a67, a68) {
    if (!new.target) { throw 'must be called with new'; }
    const v69 = this?.constructor;
    try { new v69(a68, F65); } catch (e) {}
    a67.f = a67;
    a68.e = a68;
    try {
        this.h = a67;
    } catch(e71) {
    }
    a68[a67] = this;
    a68 = this;
    try {
        a68.g = v29;
    } catch(e72) {
    }
}
try { new F65(11, v15); } catch (e) {}
const v74 = new F65(v62, v64);
const v75 = new F65(v63, v64);
const v76 = new F65(v74, v64);
function f77() {
    return v62;
}
new Map();
-5.0 / -5.0;
class C85 {
    constructor(a87) {
        a87.prototype = a87;
        let v89;
        try { v89 = ("search").toWellFormed(); } catch (e) {}
        try { v89.fixed(); } catch (e) {}
        const v91 = ("buffer")["search"](..."buffer", ..."search", ..."search", a87, ..."search", 52021);
        v91 + v91;
        arguments[0] = arguments;
        super.d = arguments;
    }
    static h;
    static #a;
    [-5.0] = -5.0;
    #g = "buffer";
    static #c;
    static #e = C85;
}
let v94;
try { v94 = C85.bind(386020469); } catch (e) {}
try { new v94(v76); } catch (e) {}
const v96 = new C85(C85);
try { v96.toString(); } catch (e) {}
const v98 = v96.d;
v98[0] = v98;
const v99 = new C85(v96);
const v100 = new C85(v99);
try { v100.constructor(v100); } catch (e) {}
v100.d;
try { new WeakMap(); } catch (e) {}
const v105 = new WeakMap();
try { v105.delete(v27); } catch (e) {}
try { new BigInt64Array(v100, C18, v100); } catch (e) {}
const v110 = new BigInt64Array(129, v75, BigInt64Array, v105);
try { v110.reduce(v63); } catch (e) {}
12 == 12;
new Int8Array(12);
const v117 = 1024 + 1024;
Uint32Array.prototype = Uint32Array;
Uint32Array.e = Uint32Array;
const v119 = new Uint32Array(1024);
v119[712];
const v121 = v119?.constructor;
let v122;
try { v122 = new v121(WeakMap, v62, 52021); } catch (e) {}
try { v122.entries(); } catch (e) {}
const v124 = /1xyz{1,}?/gims;
const v125 = /h\p{gc=Nd}/vdy;
v125.a = v125;
const v126 = /\xf0\x9f\x92\xa9a*/us;
let v127 = -23596;
v127 >>> v127;
v127--;
const v131 = 1 + 1;
v131 + v131;
class C134 {
    static {
        try { Symbol(); } catch (e) {}
        const v139 = this[Symbol.hasInstance];
        v139.name;
        try { v139.bind(v139); } catch (e) {}
    }
    #p() {
        let v143;
        try { v143 = this.p(undefined, this, this, this, this); } catch (e) {}
        try {
            v143.#p(undefined, v143, v143, undefined);
        } catch(e145) {
        }
        return undefined;
    }
    static #a = undefined;
    c = undefined;
}
try { new C134(); } catch (e) {}
C134.e = C134;
const v147 = new C134();
const v148 = new C134();
const v149 = v148?.constructor;
try { new v149(); } catch (e) {}
const v151 = new C134();
function f152(a153) {
    const o159 = {
        15: a153,
        valueOf(a155, a156) {
            super.h = a156;
            try { C134.stringify(a153, a153, this); } catch (e) {}
            try {
                C134.c = v147;
            } catch(e158) {
            }
            return a156;
        },
        2147483647: undefined,
        __proto__: v148,
        "c": a153,
        ...a153,
        "f": a153,
    };
    o159[965] = o159;
    return o159;
}
const v160 = f152(v119);
f152(v151);
f152(v160);
for (let i164 = 0;
    i164 & i164, 5 < 5, i164 < 5;
    (() => {
        const v170 = i164++;
        v170 >>> v170;
        const v172 = v170 - v170;
        v172 + v172;
    })()) {
    try {
    } catch(e175) {
    }
}
function F177(a179, a180, a181, a182) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.toString(); } catch (e) {}
    a180 / a180;
    a182.arguments = a182;
    const v185 = this?.__defineGetter__;
    try { new v185(a179, a180); } catch (e) {}
    const v187 = a181 === a181;
    v187 && v187;
    const v190 = a182.prototype?.constructor;
    try { new v190(12, v96, a181, -5.0); } catch (e) {}
}
const v192 = new F177(v126, 1, -1263139894, F177);
const v193 = v192?.__lookupGetter__;
try { new v193(v117); } catch (e) {}
const v195 = v192?.constructor;
try { new v195(468259.60535471304, 468259.60535471304, "buffer", 468259.60535471304); } catch (e) {}
const v197 = new F177(v124, v126, v127, v192);
const v198 = v197?.constructor;
try { new v198(v125, v147, v147, 1024); } catch (e) {}
const v200 = new F177(v125, F177, v127, 1);
const v201 = v200?.constructor;
try { new v201(v74, v200, v74, Int8Array); } catch (e) {}
const v203 = v200 | F177;
v203 | v203;
let v205;
try { v205 = v197(v126, v203, v203); } catch (e) {}
if (v205) {
} else {
}
