268435441 % 268435441;
let v5 = -2147483647;
v5++;
function F7() {
    if (!new.target) { throw 'must be called with new'; }
    function f9(a10, a11) {
        let v15 = 958.5363983537056;
        a11 * --a11;
        let v18 = 56901 >>> 3;
        !3;
        v18--;
        v15--;
    }
    new Promise(f9);
    this.h = 268435440;
}
function f25() {
    return -1.6870793609419136e+308;
}
class C27 {
    static {
        try { new this(); } catch (e) {}
        try {
            const t23 = null;
            t23.valueOf = this;
        } catch(e30) {
        }
    }
}
try { C27.call(-2.2250738585072014e-308); } catch (e) {}
Object.defineProperty(C27, "e", { enumerable: true, value: 0.6883224860628169 });
const v35 = ("boolean").split("toString");
for (let i37 = 0;
    (() => {
        const v39 = i37 < 7;
        Object.defineProperty(v35, 1667406388, { writable: true, configurable: true, enumerable: true, get: f25 });
        [536870888,512,1732007383];
        [-59987,-11218657,-9223372036854775808,-256];
        [-2,6];
        /2a??/uisy;
        /B\x0f/guy;
        /Q^xxx$+/gvisy;
        return v39;
    })();
    i37++) {
}
const v53 = [-1.6870793609419136e+308,14,14,-1.6870793609419136e+308];
const v55 = Symbol.toPrimitive;
Object.defineProperty(v53, v55, { value: f25 });
const v56 = [v53,0.6883224860628169,v5];
function f57(a58) {
    for (let v59 = 0; v59 < 5; v59++) {
        Math.asin(-3 ^ v59);
    }
    return a58;
}
v56.toString = f57;
try { v56.toString(); } catch (e) {}
[-2.2250738585072014e-308,0.6883224860628169,-2.2250738585072014e-308];
let v68 = 512;
v68++;
let v70 = 36002;
const v71 = v70--;
const v72 = [-1000.0,351.94489669740733,5.8623101046484845,-160881.40611645568,0.6390643538224362,9.13027568774574];
function f73(a74) {
    return Symbol.keyFor(v55);
}
v72[Symbol.toPrimitive] = f73;
function f79(a80) {
    return v68;
}
v72.toString = f79;
function f81(a82, a83) {
    return v68;
}
f81.arguments = f81;
try { Promise.call(0.6883224860628169); } catch (e) {}
const v86 = new Promise(f81);
v86[513] = v71;
const v87 = v86?.__defineSetter__;
try { new v87(v86, v72); } catch (e) {}
v86[v72] += v70;
new Float64Array(5);
const v93 = new Int8Array(8);
v93.byteLength;
-912662422 === -912662422;
-65537 >>> -65537;
const v99 = [749138.7740098275,-413.55890355139604,-2.0,5.0,4.0,1.7976931348623157e+308,1.0,5.956393081352694];
try { v99.map(v56); } catch (e) {}
const v102 = new Uint8Array(v99);
v102[6];
class C105 extends Int16Array {
}
C105.name;
const v109 = new Uint32Array(4);
v109.valueOf = f57;
v109[1];
const v112 = [v109];
function f113() {
    const o119 = {
        ...1.0,
        set b(a116) {
            const v117 = this?.__defineGetter__;
            try { new v117(14, 14); } catch (e) {}
        },
    };
    const v120 = o119?.__defineGetter__;
    try { new v120(o119, o119); } catch (e) {}
    o119.b = o119;
    return o119;
}
for (let v122 = 0; v122 < 5; v122++) {
    f113();
    %OptimizeFunctionOnNextCall(f113);
}
const v124 = new Int16Array(v112);
v124.g = v124;
const v127 = Array(6);
const o128 = {
    __proto__: v127,
};
