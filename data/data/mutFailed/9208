const v0 = [];
const v2 = new Set();
const v3 = [Set,v2];
const v4 = [v0,Set,v2,v3];
try { v4.entries(); } catch (e) {}
const v6 = [v4,v4,v3,Set,v3,v2];
v6[1] = v6;
class C7 {
    get h() {
        return "flags";
    }
    4202325666;
    [v6] = v4;
    n(a13, a14, a15) {
        try {
            a14.toString();
        } catch(e17) {
        }
        return Set;
    }
}
const v18 = C7?.constructor;
try { new v18(C7); } catch (e) {}
new C7();
new C7();
new C7();
const t26 = "boolean";
t26[1] = "boolean";
("string")[3];
-(-2.2250738585072014e-308);
-644024116 >>> -644024116;
const v34 = [-3,-11210,65535,268435456];
try { v34.reverse(); } catch (e) {}
const v36 = [-9223372036854775808,1415432483,1];
function f39() {
}
function f40(a41, a42) {
    const v44 = WeakSet.toPrimitive;
    Symbol.for(v44.description);
    a41[v44] = f39;
    const o52 = {
        "e": a41,
        "g": a42,
        [v44]() {
        },
        "maxByteLength": 60241,
        get d() {
        },
        "h": -1000000.0,
        ...a41,
        "b": v36,
        "d": Int16Array,
        [60241](a51) {
        },
    };
}
const v55 = new Uint8Array(268435440);
try { v55.lastIndexOf(v55); } catch (e) {}
f40(v36);
f40(v34);
