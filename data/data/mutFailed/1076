class C3 {
    toString(a5) {
        a5 != a5;
        class C7 {
            1158;
            [this] = a5;
            3;
        }
        class C9 {
            constructor(a11) {
                ("valueOf").localeCompare(a11, "valueOf");
            }
        }
        new C7();
        const v14 = [8.858723857900515,Infinity,-1.1848494944569402e+308,383427.98921984946];
        class C15 {
            set b(a17) {
                gc();
            }
        }
        const v20 = new C15();
        v20.b = v14;
        new C7();
        new C7();
        return 1000000000.0;
    }
    a = "d";
    [1000000000.0];
    static 315;
    a = 1000000000.0;
}
try { new C3(); } catch (e) {}
const v24 = new C3();
v24[1000000000] = v24;
const v25 = new C3();
v25[1000000000];
new C3();
let v29;
try { v29 = WeakMap(); } catch (e) {}
const v30 = ["aD70J"];
const v31 = [];
const v32 = [v31,v31,v31,v31,v31];
try { v31.reduce(v32); } catch (e) {}
const v35 = [Float64Array];
for (let v36 = 0; v36 < 5; v36++) {
    v35.length = 2;
}
const o38 = {
    "arguments": v30,
    "type": "aD70J",
    "d": v35,
    "b": 1000000000.0,
    "type": "aD70J",
};
o38.b = o38;
const v39 = new WeakMap();
function f40() {
    try {
        v31.length = v29;
    } catch(e41) {
    }
    return WeakMap;
}
v39.toString = f40;
1478599251 + 1478599251;
[1478599251,1478599251];
[-128];
const v48 = [v39];
623722764 / 623722764;
try { Math.round("d"); } catch (e) {}
Math.cbrt(1073741824);
class C57 extends BigUint64Array {
}
C57.length;
Math.expm1(Math);
function F60() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = this;
    this.h = 9007199254740991;
}
const v63 = new F60();
const o66 = {
    set h(a65) {
    },
    __proto__: v63,
};
const v69 = [7];
try { v69.with(v69, v69); } catch (e) {}
[14,34917];
[39028];
const v73 = [531384559];
try { v73.reduceRight(F60); } catch (e) {}
function f77() {
    let [,...v78] = v35;
    return v78;
}
BigUint64Array[Symbol.toPrimitive] = f77;
new BigUint64Array(623722764, 256);
for (let [i88, i89] = (() => {
        10 >> 10;
        return [0, 10];
    })();
    ~i88, i88 < i89;
    i89 >> i89, i88++) {
    i89 + i89;
    try { ("imul").padEnd(1073741824); } catch (e) {}
}
const v102 = [4294967297];
function f103() {
    return v102;
}
function f104(a105) {
    f77();
    %PrepareFunctionForOptimization(f77);
    f77();
    f77();
    %OptimizeFunctionOnNextCall(f77);
    f77();
}
Object.defineProperty(v102, -15, { writable: true, configurable: true, get: f103, set: f104 });
v102[0];
new Float32Array(10);
12 !== 12;
Uint8Array.prototype = Uint8Array;
const v120 = new Uint8Array(12);
try { v120.findLast(Math); } catch (e) {}
const o124 = {
};
const v126 = new Uint8Array();
let v127 = 2;
v127--;
const v130 = new Uint32Array();
function f131(a132, a133, a134, a135) {
    const o139 = {
        "f": v127,
        "b": a132,
        "c": a135,
        ...v126,
        n(a137, a138) {
            v130[a132] = v130;
        },
    };
}
f131.length;
new Uint32Array(1);
try { ("-4294967295").link(v48); } catch (e) {}
class C146 {
    static {
        super[super.b];
        v102[-15n] ^= 10;
        const v153 = BigUint64Array * 536870887;
        let v154 = v153 ** v153;
        v154--;
        +(BigUint64Array - v153);
        536870887 << BigUint64Array;
        for (const v159 of "-4294967295") {
            try { v159.fontsize(Math); } catch (e) {}
        }
    }
}
try { new C146(); } catch (e) {}
