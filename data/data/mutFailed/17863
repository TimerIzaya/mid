function f0() {
}
function f1() {
    return f0;
}
function f2(a3) {
    a3 in a3;
}
Object.defineProperty(f0, "valueOf", { get: f1, set: f2 });
class C5 extends f0 {
    #toString() {
        this[6];
        const o11 = {
            "execution": "sync",
            "type": "minor",
        };
        return gc(o11);
    }
}
function f13() {
    try {
        C5.toString = f0;
    } catch(e14) {
    }
    return f0;
}
C5.toString = f13;
const v15 = new C5();
const v16 = new C5();
const v17 = v16?.constructor;
let v18;
try { v18 = new v17(); } catch (e) {}
const v19 = v16?.constructor;
let v20;
try { v20 = new v19(); } catch (e) {}
try { new v19(); } catch (e) {}
const v22 = new C5();
function f23(a24, a25) {
    const v26 = [4.595408678590346,634.2520230005675,1.678658443574512e+308,0.03854419317902913];
    const v28 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    const v31 = new Uint32Array();
    const v33 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
    const v34 = [601759695];
    const v35 = [1073741824,1073741823,1376142744,1073741825];
    function f37(a38, a39, a40, a41) {
        function f42() {
            let v44 = Float64Array;
            v44 = a39;
            b = v34;
            const v45 = v28.length;
            try {
                v35.forEach(a39);
            } catch(e47) {
            }
            a39.b = eval;
            const o48 = {
                "apply": f42,
                "preventExtensions": eval,
                "setPrototypeOf": f37,
            };
            new Proxy(v26, o48);
            const v51 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
            Symbol.toPrimitive;
            const o57 = {
                toString(a55, a56) {
                },
            };
            const o73 = {
                toString(a60, a61) {
                },
                [522675525n](a63, a64) {
                },
                [v45](a66) {
                },
                [-1]: 2684,
                1073741824: v31,
                "arguments": v51,
                [-4294967297n](a68, a69, a70, a71) {
                    eval();
                },
                "e": -4294967295,
                "arguments": v33,
                256: a41,
                ...v34,
                6: -268435456,
            };
        }
        f42();
        eval();
        %OptimizeFunctionOnNextCall(f42);
    }
    return v15;
}
v22.constructor = f23;
const v76 = v22?.constructor;
function f77(a78) {
    const o79 = {
        "call": f2,
        "defineProperty": f13,
        "deleteProperty": f13,
        "get": f13,
        "getOwnPropertyDescriptor": f13,
        "getPrototypeOf": f1,
        "has": f0,
        "ownKeys": f1,
        "set": f23,
        "setPrototypeOf": f13,
    };
    new Proxy(C5, o79);
    return o79;
}
v76.toString = f77;
let v82;
try { v82 = new v76(); } catch (e) {}
const v83 = v22?.constructor;
function f84() {
    C5.toString %= v20;
    class C85 {
        static {
            this[Symbol.hasInstance];
        }
    }
    return f2;
}
Object.defineProperty(v83, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f84 });
let v92;
try { v92 = new v83(); } catch (e) {}
const v93 = v92?.__defineGetter__;
try { new v93(v92, f0); } catch (e) {}
function f95(a96) {
    a96.caller;
    const o105 = {
        "d": v15,
        [a96](a99, a100, a101) {
            [[C5,a99,this,a100]];
            return [f0];
        },
        "f": v15,
        "h": C5,
        "g": f0,
        [a96]: v16,
    };
    function f106() {
        Object.defineProperty(v18, 8, { configurable: true, get: f77, set: f84 });
        const v107 = [536870888,8];
        v107.concat(v107);
        return v82;
    }
    o105[Symbol.toPrimitive] = f106;
    return o105;
}
try { f95(C5); } catch (e) {}
const v112 = f95(C5);
const v113 = f95(v112);
try { v113.g(); } catch (e) {}
const v115 = f95(v16);
try { v115.g(); } catch (e) {}
const v118 = 9007199254740992 != 9007199254740992;
v118 || v118;
WeakMap.constructor = f2;
const v125 = WeakMap?.constructor;
try { new v125(C5); } catch (e) {}
try { WeakMap.apply(Int32Array, Date); } catch (e) {}
const v128 = [723200.4184824808,-1000.0,-523437.54204506474,-964793.6675249395];
for (let v129 = 0; v129 < 20; v129++) {
    let [,v130,...v131] = v128;
    try { v131.findIndex(v129); } catch (e) {}
}
const v133 = [7.554475698528474];
try { v133.every(536870889); } catch (e) {}
v133[0];
Uint8ClampedArray.BYTES_PER_ELEMENT = Uint8ClampedArray;
Object.defineProperty(Uint8ClampedArray, 1, { value: v133 });
v112[Int32Array];
var e = v115;
f0 * v19;
const v144 = new Float64Array(1073741824);
try { v144.find(v15); } catch (e) {}
