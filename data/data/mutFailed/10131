function f3(a4) {
    const o15 = {
        "g": 4,
        set h(a6) {
            a4 = -a6;
        },
        set b(a9) {
            const v11 = delete a9?.[new.target];
            v11?.e;
            throw v11;
            v11[Symbol.iterator] = 1;
        },
    };
    return o15;
}
f3(1);
f3(-9007199254740992);
f3(1);
/t[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]/gvimy;
/48jP/guim;
/ab\b\d\bcd/gvdmy;
207 + 207;
new Float32Array(207);
let v32 = 14;
v32--;
try { new Uint8ClampedArray("symbol", v32, 207); } catch (e) {}
new Uint8ClampedArray(v32);
new Uint32Array(4096);
const v41 = 220 >> 220;
const v43 = new BigUint64Array(220);
function f44() {
    const v45 = [601759695];
    const v46 = [427812215,61195,-2147483647,4096,-2147483647,30905];
    function f48(a49, a50, a51, a52) {
        function f53() {
            const o60 = {
                "h": -1073741824,
                ..."Vre",
                valueOf(a58, a59) {
                    return 522675525n;
                },
                ..."Vre",
                "c": a52,
                5: -1073741824,
                6: -268435456,
            };
            return a52;
        }
        f53();
        %OptimizeFunctionOnNextCall(f53);
        let v63;
        try { v63 = v46["find"](..."find", a52, ...v45, ...v46, ...522675525n); } catch (e) {}
        v63 <= a51;
        return a51;
    }
    return v45;
}
v43.toString = f44;
const v65 = v43[42];
const v68 = new Uint32Array(958);
v68.g = v68;
const v71 = new Int8Array(3844);
v71[372] = v71;
let v74 = -1024n;
class C75 {
    set c(a77) {
        v74 = 0n;
        a77 += 0n;
    }
    constructor(a79, a80, a81, a82) {
        C75 >>> v71;
    }
    static [v68] = v65;
    128 = "Cl";
    m(a85) {
        let v86;
        try { v86 = new this(a85, -490778482n, this); } catch (e) {}
        this.c |= v86;
        return a85;
    }
    static 1;
    static h = -490778482n;
    static #f = v74;
}
try { new C75(); } catch (e) {}
new C75();
new C75();
const v90 = new C75();
[1.7976931348623157e+308,0.15227894183030433,-2.0,259880.3330397869,0.0,-1e-15,360683.0243419355,-1e-15,1.7976931348623157e+308];
const v93 = [0.03568519099872258];
try { v93.join(v43); } catch (e) {}
const v95 = [462318.599710946,0.6123807977566038,-0.0,-108306.02593608841,Infinity,0.0,-4.0,-1000.0];
try { v95.at(4096); } catch (e) {}
class C97 {
    static {
        this.toString = f3;
        this >> "Cl";
        super[this] = v41;
    }
    [Float32Array];
    static 3518;
    static 2147483648;
    static #valueOf(a101, a102) {
        v90[null] ||= a101;
        const v103 = v93.__proto__;
        try { v103(this, a101, v74, v103, this); } catch (e) {}
        return v93;
    }
    [v74] = v74;
    2;
    static #h = null;
    constructor(a106, a107, a108) {
        new Uint8Array(1024);
        new Int32Array(2);
        new Uint16Array(2277);
    }
    #a = null;
}
new C97();
const v119 = new C97();
v119[2];
new C97();
const v124 = new Uint8Array();
try { v124.entries(); } catch (e) {}
function f126(a127, a128, a129, a130) {
    a129 === a129;
    a129++;
    const o133 = {
        ...v124,
    };
    function f134() {
    }
    function f135(a136) {
        const o137 = {
        };
    }
    function f141(a142, a143, a144) {
        const o145 = {
            "h": a144,
        };
        Object.defineProperty(o145, "toString", { writable: true, configurable: true, enumerable: true, value: f44 });
        return o145;
    }
    f141(-3.9870582640049523, -3.9870582640049523, 1000000.0);
    const v147 = f141(1000000.0, -3.9870582640049523, 1000000.0);
    f141(-3.9870582640049523, -2.2250738585072014e-308, -3.9870582640049523);
    v147["toString"]();
}
for (let v151 = 0; v151 < 500; v151++) {
    f126(Uint8Array, 2, v151);
}
