const v0 = [-4,-39794,134663664,4];
const v1 = [536870912,5];
const v2 = [1000,-1073741824,-62405];
Math.cbrt(Math);
class C6 extends Date {
}
const v9 = new Array(12);
class C10 extends Array {
    h;
    static {
        this.f -= 12;
        const v12 = Array(12);
        super[v2] = v12;
        const o33 = {
            __proto__: v12,
            [12](a17) {
            },
            get f() {
                class C19 {
                    static [-2];
                    16;
                }
                new C19();
                new C19();
            },
            "f": "k",
            o(a23) {
                return 12;
            },
            "type": "SXJb",
            p(a25, a26, a27) {
                return "SXJb";
            },
            set e(a32) {
            },
            2147483647: "__proto__",
            "g": "SXJb",
            "h": "__proto__",
        };
        for (const v34 in o33) {
        }
        Array(12);
        ([257])[12];
        const v39 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
        const v41 = new Uint32Array(v39);
        let v42 = -4294967297n;
        const v43 = v42--;
        const v44 = [601759695];
        const v45 = [1073741824,1073741823,1376142744,1073741825];
        function f47(a48, a49, a50, a51) {
            const v52 = a48?.constructor;
            try { v52(); } catch (e) {}
            function f54() {
                try { ("Vre").charAt(4096); } catch (e) {}
                const v57 = ("Vre").codePointAt();
                v57 ^ v57;
                let v59 = Float64Array;
                v59 = a49;
                b = v39;
                try {
                    v45.forEach();
                } catch(e61) {
                }
                const o72 = {
                    "c": v42,
                    valueOf(a63, a64) {
                        return v41;
                    },
                    1073741824: v41,
                    [v42](a66, a67, a68, a69) {
                        eval(a67);
                    },
                };
                return v42;
            }
            f54();
            const v76 = new Int32Array(1024);
            const v77 = v76[3];
            v77 + v77;
            1024 * v77;
            for (let v80 = 0; v80 < 5; v80++) {
            }
            %OptimizeFunctionOnNextCall(f54);
            try { v45["find"](..."find", a51, ...v44, ...v45); } catch (e) {}
            return f47;
        }
        f47();
        f47(v43, Uint32Array, 522675525n, v42);
        let v86 = 522675525n * 9007199254740991n;
        ~(v86--);
        try {
            Array(-12302);
        } catch(e92) {
        }
    }
    constructor(a94, a95) {
        super(12);
        function F96(a98, a99) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.f = v2;
            } catch(e100) {
            }
            try {
                this.d = a95;
                let v101;
                try { v101 = a99.log10(a98); } catch (e) {}
                try { a98.set(v101); } catch (e) {}
            } catch(e106) {
            }
            try {
                this.a = a95;
                c = a99 % this;
                const v109 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
                const v111 = Symbol.toPrimitive;
                const o118 = {
                    toString(a113, a114) {
                        const v115 = this && Float64Array;
                        function f116() {
                            a113 *= v111;
                            return Float64Array;
                        }
                        Object.defineProperty(v115, "valueOf", { value: f116 });
                        v115 <= v109;
                        return this;
                    },
                };
                return o118;
                Array(a94);
                %PrepareFunctionForOptimization(Array);
                Array(a94);
                Array(a94);
                %OptimizeFunctionOnNextCall(Array);
                Array(a94);
            } catch(e123) {
            }
        }
        class C126 {
            constructor(a128, a129) {
                Math.tanh("1");
                new Uint16Array(12);
                Object.defineProperty(this, "constructor", { writable: true, configurable: true, enumerable: true, value: Date });
                const v135 = this.constructor;
                try { new v135(-15n); } catch (e) {}
            }
        }
        new F96(a94, a94);
        new F96(a94, a94);
        new F96(v0, v0);
        function f140() {
            const o144 = {
                m(a143) {
                    return a143;
                },
                __proto__: 946.0676210033328,
            };
        }
        f140();
        %OptimizeFunctionOnNextCall(f140);
    }
}
new C10(v9, v9);
new C10(v2, v0);
new C10(v1, v2);
const v155 = [];
const v157 = v155.entries;
let v158;
try { v158 = new v157(v157, v155, v157, v157, null); } catch (e) {}
v158 = null;
const v159 = [601759695];
const v160 = [1073741824,1073741823,1376142744,1073741825];
function f162(a163, a164, a165, a166) {
    let v169;
    try { v169 = v160["find"](..."find", a166, ...v159, ...v160, ...522675525n); } catch (e) {}
    v169 <= a165;
    return arguments;
}
function f173(a174, a175) {
    const o177 = {
        ...a174,
        get d() {
            return this;
        },
    };
    return f173;
}
f173();
const v179 = new BigInt64Array(3216);
const v182 = new BigUint64Array(3216, 3216, 3331);
for (let v183 = 0; v183 < 5; v183++) {
    f162(v159, v183, false, v183);
}
f162(v182, 3331, v179, 3216);
