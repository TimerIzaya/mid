class C3 {
}
new C3();
class C6 {
    static #c = "bigint";
    static valueOf(a8) {
        this.#c = "bigint";
    }
}
class C9 {
    static c = "m";
    toString(a11) {
        return -4294967297n;
        class C14 {
            constructor(a16, a17) {
                try {
                    super.n(1e-15);
                } catch(e19) {
                }
                try {
                    super.getYear(a16, this);
                } catch(e21) {
                }
            }
        }
        function f22() {
            return this;
        }
        try {
            this.fuck(-799152.3774086398, [f22,"m",-799152.3774086398,a11,"object"]);
        } catch(e25) {
        }
        return "object";
    }
    static #d = "object";
    d = -799152.3774086398;
}
const v26 = new C9();
const v27 = new C9();
const v28 = new C9();
const v30 = [v27,v27,v28,v27,[v28,"m",v26,"m"]];
[v28,"m",v30,v30,v30];
new Float64Array(146);
new Int32Array(2);
new BigUint64Array(7);
const v42 = new Int8Array();
function f43(a44) {
    function F45() {
        if (!new.target) { throw 'must be called with new'; }
        function f47(a48) {
            for (let v49 = 0; v49 < 5; v49++) {
                function f50() {
                    return Math.round(f50);
                }
                f50();
                %OptimizeFunctionOnNextCall(f50);
            }
        }
        this[Symbol.toPrimitive] = f47;
    }
    return a44;
}
Object.defineProperty(f43, Symbol.species, { writable: true, value: f43 });
v42.constructor = f43;
v42.filter(Int8Array);
