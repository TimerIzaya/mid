const v5 = /a$\P{Decimal_Number}/gvdims.source;
try {
const t0 = 7;
t0(true, v5, v5, v5);
} catch (e) {}
let v9 = -2147483649 * 7;
++v9;
Math.tan(v9);
class C12 {
    static p(a14, a15) {
        let v19;
        try { v19 = a15(a15, a15); } catch (e) {}
        try { new v19(v19, v19, 331.9568922259648, a15); } catch (e) {}
        try {
            this.fuck(this, true, /a+?(?:a+)*xyz{0,1}/ui, 6);
        } catch(e24) {
        }
        class C25 {
        }
        const v26 = new C25();
        const v27 = v26.constructor;
        let v28;
        try { v28 = v27(v27, C25); } catch (e) {}
        const v30 = ("D")[0];
        try { v30.substring(v28); } catch (e) {}
        return v28;
        return 536870912;
    }
}
new C12();
new C12();
new C12();
const v35 = [-5,-44869,9007199254740991,-65537,4294967296,127,0];
[-3,2145161996,1073741825,-1,-14,725193120,9007199254740991,1,-128];
const v37 = [1024,639074864,127,-3];
class C38 {
    4;
    #f;
    #e;
    897 = v37;
    get d() {
        v35.constructor;
        const v43 = new Date(Date);
        const v44 = v43.setFullYear;
        try { v44(); } catch (e) {}
        try {
            const v50 = new Uint8ClampedArray(Uint8ClampedArray, Uint8ClampedArray, Uint8ClampedArray);
            Reflect.construct(Uint8Array, [v50]);
            const o55 = {
            };
            this.fuck(undefined, o55, /(?<a>)[1(\2)(\1)]/gvdis);
        } catch(e58) {
        }
        return this;
    }
}
new C38();
new C38();
new C38();
function F62() {
    if (!new.target) { throw 'must be called with new'; }
    function f64(a65) {
        for (let i = 0; i < 10; i++) {
            ["object"];
        }
    }
    Object.defineProperty(this, "c", { enumerable: true, set: f64 });
    this.c = -28191;
}
new F62();
