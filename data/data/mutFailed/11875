new Int16Array(Int16Array);
const v5 = new Float64Array(16);
const v6 = v5[9];
const v9 = new BigUint64Array(0);
const v10 = v6?.entries;
try { new v10(); } catch (e) {}
function f12() {
    return 256;
}
[5.868805834103126,2.2250738585072014e-308,-0.0,2.220446049250313e-16,1.7269741225522117e+308];
[1.357180376569386e+308,668.5168240803569,0.9178101840953367,-3.0,-0.3817109689840077,-966616.8514807869,1.1050852718697866e+308];
const v15 = [5.0];
try { v15.push(v9); } catch (e) {}
const v17 = [601759695];
const v18 = [1073741824,1073741823,1376142744,1073741825];
function f19(a20, a21, a22, a23) {
    a20--;
    -a20;
    a21 >>> a21;
    const v27 = a20 >>> a20;
    v27 ^ v27;
    a22[3];
    const t20 = "58572";
    t20[3] = "58572";
    try { v18["58572"](..."58572", a23, ...v17); } catch (e) {}
}
for (let v32 = 0; v32 < 10; v32++) {
    v32(v32, v32, v18);
}
