function f3(a4, a5, a6, a7) {
    const o12 = {
        toString(a9, a10, a11) {
            a6[a5] = a4;
        },
    };
    return o12;
}
class C13 {
    #d = "1946707247";
    10 = 937617723;
    a;
    get g() {
        let v15 = Symbol;
        const v16 = v15.iterator;
        const v18 = [-37672];
        function f19(a20, a21) {
            const o25 = {
                [a20](a23, a24) {
                    v18[5] = -37672;
                },
            };
            return -37672;
        }
        const o34 = {
            [v16]() {
                const o33 = {
                    next() {
                        v15--;
                        const v31 = 10 == 0;
                        const o32 = {
                            "done": v31,
                            "value": 10,
                        };
                        return o32;
                    },
                };
                return o33;
            },
        };
        return "1946707247";
    }
}
const v35 = new C13();
new C13();
new C13();
function F39(a41, a42) {
    if (!new.target) { throw 'must be called with new'; }
}
const t49 = 937617723;
const v43 = new t49();
function f44() {
    const o50 = {
        [1836424012](a47, a48, a49) {
        },
        "e": v43,
    };
    return F39;
}
function f53() {
    return v35;
}
const v56 = new Uint16Array(1024);
v56[7] = v56;
class C58 {
    [8077n];
}
new C58();
