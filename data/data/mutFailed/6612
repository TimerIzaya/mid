function f0() {
    const o8 = {
        get h() {
            this[this] = this;
            ("MAX_VALUE")["indexOf"](this, -6);
            `number`;
            return this;
        },
        58: "MAX_VALUE",
        ["MAX_VALUE"]: "MAX_VALUE",
        4: 2.0,
    };
    return o8;
}
const v9 = f0();
const v10 = f0();
const v11 = f0();
const v12 = [v11,v11,v10,v9,f0];
[v10,[v9,v12,v12]];
/[\cZ]/vdimy;
/S\P{Decimal_Number}/u;
/(xyz{0,1}[5(?:ab){4,7}+])/gvdmsy;
function F18(a20) {
    if (!new.target) { throw 'must be called with new'; }
    const v21 = this.constructor;
    const v22 = v21.bind(F18, F18, F18, F18);
    try { v22(); } catch (e) {}
    try { new v21(); } catch (e) {}
}
new F18();
new F18();
const v27 = (a28, a29) => {
    const v34 = v10 ** a29;
    a28 ** v10;
    const v36 = -v34;
    !1000;
    const v38 = !a28;
    Math.cos(v36);
    --a29;
    return v38;
};
