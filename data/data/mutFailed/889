const v0 = /\xed\xb0\x80+/uis;
const v1 = /MZ{abc/gm;
const v2 = /(l{z})/s;
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    const v6 = this?.constructor;
    try { new v6(v2); } catch (e) {}
    a5.b = a5;
    a5.dotAll;
    try {
        this.d = v2;
    } catch(e9) {
    }
    try {
        this.f = a5;
    } catch(e10) {
    }
}
const v11 = new F3(v0);
const v12 = new F3(v2);
v12.length = v12;
const v13 = new v2(v2);
v13.length = v13;
const v14 = [128,5,268435456,127,4096];
let v15;
try { v15 = v14.fill(v1); } catch (e) {}
try { v15.push(v13); } catch (e) {}
const v17 = [-185039418,1565119373,33166,29980,-4294967296,1554841923,-1646058516,-15,1,255];
try { v17.findLastIndex(v15); } catch (e) {}
const v19 = [-25685,-6,536870888,10,-1024,65537,-8,-1,3,536870888];
try { v19.map(v19); } catch (e) {}
try { Float64Array.from(v12); } catch (e) {}
const v24 = new Float64Array();
Uint8Array.h = Uint8Array;
try { Uint8Array.from(F3); } catch (e) {}
const v28 = new Uint8Array();
const v29 = v28?.constructor;
try { v29(v29, v11, F3); } catch (e) {}
let v31;
try { v31 = new v29(v14, 4, v17); } catch (e) {}
try { v31.findLastIndex(v14); } catch (e) {}
let v35 = v28[44610];
let v36;
try { v36 = v35(); } catch (e) {}
v24.toString = v36;
[3,4294967295,-49424,9007199254740991,-4,5851,-10,4096];
function f39(a40, a41) {
    try { a40.call(v36); } catch (e) {}
    a40.name = a40;
    Symbol.toPrimitive;
    3 << 3;
    const v48 = Array();
    let v52 = 1000000000.0;
    v52++;
    function f54(a55) {
        const o58 = {
            "g": v52,
            set a(a57) {
                a57.h = this;
            },
            "h": a55,
            "d": v52,
            "b": -1.1013479045636231e+308,
            2: a55,
        };
        return o58;
    }
    const v59 = f54();
    const v60 = f54();
    -(-1e-15);
    let v64 = 655864.1717298129;
    v64++;
    class C66 {
        #n(a68, a69, a70, a71) {
            super[this] = this;
            super[f54].o();
        }
        constructor(a76, a77) {
            "minor" == "minor";
            const o82 = {
                "type": "minor",
            };
            o82.b = o82;
            gc(o82);
        }
    }
    const v84 = new C66(v59, v64);
    const v85 = v84?.__defineGetter__;
    try { new v85(4, 4); } catch (e) {}
    new C66();
    const v88 = new C66();
    v52 /= -2.2250738585072014e-308;
    for (let i90 = 0; i90 < 7; i90 + i90, i90++) {
        const v97 = new C66();
        const v98 = v97?.constructor;
        try { new v98(i90, v12); } catch (e) {}
    }
    let v100;
    try { v100 = v48.every(Symbol); } catch (e) {}
    v100 || v100;
    function f102() {
        return 3;
    }
    f102.name;
    function f104(a105) {
        const v106 = a105 + a105;
        try { gc.toString(); } catch (e) {}
        let v109 = "major";
        try { ("async").replaceAll(gc, v106); } catch (e) {}
        const o112 = {
            "execution": "async",
        };
        v100 |= v60;
        v35 &&= gc;
        v109 = v88;
        Object.defineProperty(v17, 75, { enumerable: true, get: f102 });
        try {
            v14.pop().d;
        } catch(e115) {
        }
        gc();
    }
    f104.b = f104;
    Object.defineProperty(v48, 0, { configurable: true, enumerable: true, get: f102, set: f104 });
    v48.unshift(3, a40);
}
f39.e = f39;
try { Promise.toLocaleString(); } catch (e) {}
new Promise(f39);
