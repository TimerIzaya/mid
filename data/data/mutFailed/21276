const v2 = new Int8Array(129, Int8Array);
const v6 = new BigUint64Array(16);
try { WeakSet.apply(16, v6); } catch (e) {}
const v10 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
function f11(a12, a13, a14, a15) {
    const v16 = /(?:a*)+q(?<a>.)/guds;
    function f17(a18) {
        const v19 = v10.constructor;
        let v20;
        try { v20 = v19(v19, a13); } catch (e) {}
        a18.constructor;
        const v22 = [Infinity,5.072687501529128e+307,0.4093098171074484,4.0,-4.442441003635313e+306,843998.4933901483,-714.8973177887364];
        -1000000000000.0 >>> -1000000000000.0;
        try {
            v20.length = 5;
        } catch(e26) {
        }
        function f28() {
            return f28;
        }
        return WeakMap;
        15312 | v22;
    }
    for (let [i36, i37] = (() => {
            function f32(a33, a34) {
                return f11;
            }
            return [0, 255];
        })();
        i36 < i37;
        i37--) {
        for (let v44 = 0; v44 < 25; v44++) {
            f17(v16);
        }
    }
    function f46() {
        let v47 = Float64Array;
        v47 = a13;
        try {
            Int8Array(Int8Array, Int8Array, Int8Array);
        } catch(e50) {
            e50.stack;
        }
        return a13;
    }
    return f46;
}
f11();
const v53 = new Int8Array(65536);
const v54 = [];
function f55(a56, a57, a58) {
    v54.copyWithin();
    try {
        f55(-268435456, 0.6683462416314783, [-268435456]);
    } catch(e64) {
    }
    const v65 = v6 >> -268435456;
    v65 >> v6;
    return -v65;
}
new Int8Array(0);
const v71 = [65536];
const v72 = [-729574.8782662717,NaN,NaN,1.4631545214551755e+308,771.103726894627,54.21198698191802];
const v73 = [1.7976931348623157e+308,0.14033774481022865,0.764442389288067,-2.220446049250313e-16,710.5353911028728,1000000.0];
function f74(a75, a76, a77, a78) {
    const v79 = a76++;
    class C80 {
        static [v79];
    }
    return f74;
}
for (let v81 = 0; v81 < 10; v81++) {
    f74();
}
const v83 = [4294967297,9007199254740990,-536870912,-2,-39056,1073741823,-4096,536870889];
class C84 {
    1073741823 = v83;
    static #d;
    6;
    static 1224847725;
    [v72];
}
const v85 = new C84();
Uint32Array.toString();
const v90 = new Float32Array(5);
const v93 = new Uint8Array(1759);
const o94 = {
    ...v90,
    ...v93,
};
v73[4294967295] = v85;
[v71,v2,v71];
[129,129,v53];
class C97 {
}
if (C97) {
    try { v71.p(); } catch (e) {}
    for (let v99 = 0; v99 < 10; v99++) {
    }
    function F100(a102, a103, a104, a105) {
        if (!new.target) { throw 'must be called with new'; }
    }
    new F100(v71, v71, C97, 129);
}
const v107 = C97.constructor;
v107(v107, v83, v107);
function F109() {
    if (!new.target) { throw 'must be called with new'; }
}
class C111 extends F109 {
}
new C111();
