const v0 = [5.0,Infinity,-1.5488670234677414e+308,0.17049746652599362,0.5336084392269351,-2.220446049250313e-16,-1000000000.0];
const v1 = [4.0,NaN,-1000.0,0.36980395497406504,-1e-15];
const v2 = [4.296060305491308,1.0,-188.0587833338618,525.6388957578715,-8.873491199574142e+306];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = v0;
    try {
        this.c = v1;
    } catch(e6) {
    }
}
new F3(v0);
const v8 = new F3(v0);
const v9 = new F3(v8);
class C10 {
    static c;
    constructor(a12, a13) {
        let v11 = this;
        function f14(a15) {
            const o17 = {
                "c": 2.0,
            };
            function F18(a20) {
                if (!new.target) { throw 'must be called with new'; }
            }
            const v21 = new F18(o17);
            try { v21.search(a15); } catch (e) {}
            return v9;
        }
        v11.valueOf = f14;
        ++v11;
    }
    set e(a25) {
        new F3(F3);
        let o27 = {
            "d": v0,
            [-1]: F3,
        };
        o27++;
    }
    65536 = v9;
}
new C10(v2, v0);
new C10(v0, v1);
new C10(v1, v2);
new Int16Array(5);
new BigInt64Array(127);
new Int8Array(176);
new Uint8ClampedArray(15);
new Int32Array();
const v48 = new Int32Array(257);
function f49(a50, a51) {
    const o55 = {
        "execution": "sync",
        "type": "minor",
    };
    gc(o55);
    return C10;
}
v48[Symbol.toPrimitive] = f49;
function F59(a61, a62) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a62;
    } catch(e63) {
    }
}
const v64 = new F59(15, 257);
new F59(257, 512);
const v66 = new F59(15, 512);
for (const v67 in v66) {
    const v68 = /[MrN]/gudi;
    const v69 = /(x)(x)(x)\2/gvdisy;
    try {
    const t0 = 15;
    t0(v67, v68, v69, v69, v64);
    } catch (e) {}
    /YzF[\11]/gms;
    /(ab)\1[\11](?:a*)+(J\bI)+/diy;
}
v48[v48];
