const v3 = /E(?:ab)*/uiy;
const v4 = /M(x)(x)(x)\1*/gimsy;
function f5() {
    const t3 = [-24725,-9223372036854775807,268435439,-267077871,-63246,2147483647,-12];
    t3.length = 99;
    return 99;
}
v4.toString = f5;
const v8 = /xyz{1,}?/gudmsy;
const v9 = [5,-128,10,1171456538,15,-9007199254740991,-10792,-65535,14,1913327815];
function f11() {
    function f12() {
    }
    return f12;
}
function f13(a14) {
    return a14;
}
Object.defineProperty(WeakSet, Symbol.iterator, { configurable: true, enumerable: true, get: f11, set: f13 });
[-4294967295,-886597396,1073741824,-17536,1533641048];
const v20 = new Uint8ClampedArray(Date);
function F22(a24) {
    if (!new.target) { throw 'must be called with new'; }
    const v25 = this.constructor;
    v25.e = v25;
    try { new v25(); } catch (e) {}
    this.g = -1;
    this.f = a24;
    this.h = a24;
}
const v27 = [47427,-44532,2,-5,1024,-256,-2133422064];
function f28() {
    v4[v27] = 127n;
    f13 in Date;
    return v20;
}
v27.toString = f28;
function F30(a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    function f34() {
        return Symbol;
    }
    function f35(a36) {
        Math.cbrt(Math);
    }
    Object.defineProperty(a32, Symbol.toPrimitive, { writable: true, get: f34, set: f35 });
    try {
        this.h = v27;
    } catch(e41) {
    }
    try {
        this.e = a32;
    } catch(e42) {
        Math.pow(-1073741824, -Infinity);
        for (let i49 = (() => {
                0 >>> 0;
                return 0;
            })();
            (() => {
                const v51 = i49 < 9;
                !v51;
                return v51;
            })();
            i49++) {
        }
    }
}
new F30(v3, v8);
function f57(a58, a59) {
    return f57;
}
const v60 = f57(f57, f57);
class C61 extends f57 {
    constructor(a63, a64, a65) {
        super();
        const v66 = `
            try { a63(a65, v60); } catch (e) {}
        `;
        eval(v66);
    }
}
new C61(f57, C61, f57);
new F30(v3, v8);
const v72 = new F30(v4, v4);
class C73 {
    #p(a75, a76) {
        const v77 = v9.length;
        const o78 = {
            __proto__: v72,
            "e": a76,
            [a75]: v77,
            ...this,
        };
        return v72;
    }
    [v27] = v8;
    static #a = v3;
    h;
    c = 127n;
}
function F82(a84, a85) {
    if (!new.target) { throw 'must be called with new'; }
    a84 % a84;
    a85 >>> a85;
    const v88 = this.constructor;
    try { new v88(0.8735699512350641, -3.413527541634011e+307); } catch (e) {}
}
new F82(0.941857606566444, 0.941857606566444);
new C73();
const v92 = new C73();
new C73();
function f94(a95, a96) {
    function f97(a98, a99) {
        return a99;
    }
    Set.toString = f97;
    const o107 = {
        "f": v27,
        [v4](a102, a103, a104, a105) {
            super.test();
        },
        ...v92,
        ...a95,
    };
    return f94;
}
%PrepareFunctionForOptimization(f94);
const v108 = f94();
%OptimizeFunctionOnNextCall(f94);
f94(f94, v108);
new Uint8ClampedArray(129);
const o113 = {
};
