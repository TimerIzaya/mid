class C3 {
    constructor(a5) {
        if (a5 >= this) {
            65536 > 1.414966569045307e+308 ? 65536 : 1.414966569045307e+308;
        } else {
            let v9;
            try { v9 = this.trimEnd(); } catch (e) {}
            const o10 = {
            };
            try {
                o10.c = v9;
            } catch(e11) {
            }
            try {
                const o12 = {
                };
                o12.c = v9;
                o12.b = C3;
            } catch(e13) {
            }
            try {
                const o14 = {
                };
                o14.c = v9;
                o14.b = "object";
                o14.d = this;
            } catch(e15) {
            }
            try {
                const o16 = {
                };
                o16.c = v9;
                o16.b = C3;
                o16.d = C3;
            } catch(e17) {
            }
        }
        try { ("object").matchAll(a5); } catch (e) {}
        function f22() {
            const v25 = new Int32Array(512);
            (1.414966569045307e+308).constructor();
            v25.valueOf = Int32Array;
            return 65537n;
        }
    }
    static 5;
    c = "object";
    static [1.414966569045307e+308] = "object";
    #e;
    /*
    constructor(a28, a29, a30, a31) {
        new Uint16Array(4294967295);
        function F35(a37, a38, a39) {
            if (!new.target) { throw 'must be called with new'; }
            const v40 = this.constructor;
            try { new v40(); } catch (e) {}
            this.d = a37;
        }
        new F35(Uint16Array, this, C3);
    }
    */
}
new C3("object", C3);
const v44 = new C3(65536);
const v45 = new C3(v44);
const v46 = [3.9697342685412647,-1000000000000.0];
[1000000000.0,7.565549342417823e+307,-1000000.0,-2.5460078290669186,-1.7976931348623157e+308,-2.5982281373182925];
const v48 = [-1e-15,-643807.1986037579,0.397456332678093,-1000000.0,4.0,1.5769020656778581e+308,Infinity];
let v49 = "a";
const v54 = new Float32Array();
const v56 = new Uint8Array(v54, Uint8Array, Uint8Array);
v54[-1e-15] = Uint8ClampedArray;
let v59 = 0;
while (v59 < 9) {
    new WeakSet();
    v59++;
}
let v65 = 0;
while (v65 < 6) {
    const v68 = C3[10];
    const t80 = "65537";
    t80[v45] /= v68;
    v49 >>>= v68;
    v65++;
}
v48["object"];
let [...v71] = "object";
const o75 = {
};
const v76 = o75.__proto__;
for (let v77 = 0; v77 < 5; v77++) {
    v76["p" + v77] = v77;
}
const v80 = -42579 && -42579;
Math.trunc(-42579);
let v82 = v46 & v80;
(-4299) ** --v82;
class C85 extends Math {
    constructor(a87, a88, a89) {
        super(a89);
    }
}
new Math(1, v56, Float32Array);
class C92 extends v44.constructor {
    static [C3];
}
new C92();
