const v0 = [];
function f3() {
    return v0;
}
const v6 = new Uint32Array(195);
byteLength || byteLength;
const v12 = new Float64Array();
const v14 = new BigInt64Array();
try {
    v12.reduce(v14);
} catch(e16) {
}
new Float32Array(3388);
new Float32Array(255);
function f21(a22, a23, a24, a25) {
    const o43 = {
        "h": true,
        "g": a25,
        "a": a24,
        "b": v6,
        p(a27, a28, a29) {
            /((?=.)?)/guims;
            /W+/gmy;
            const v32 = /s(?=)/vi;
            [5,5];
            function f35(a36, a37) {
                return a36;
            }
            return v32;
        },
        "f": true,
        get d() {
            function f39(a40, a41, a42) {
                'use strict';
                return a40;
            }
            return this;
        },
        255: true,
        "c": 255,
        "d": v6,
        2459534291: v6,
    };
    return o43;
}
f21(255, 3388, 255, Float32Array);
Symbol.matchAll;
const v47 = [-4];
try {
    new BigUint64Array(v47);
} catch(e50) {
}
f21(195, 195, 195, Float32Array);
f21(195, 255, 3388, 255);
class C55 {
    static {
        try { this(this, 3.866732047176795e+307, this, ...this); } catch (e) {}
    }
}
Math.pow(-1073741824, -Infinity);
new Int8Array(964446029);
