function f0() {
    const o8 = {
        [-3.659198982776384]: "string",
        __proto__: "string",
        "b": f0,
        ..."string",
        2: "string",
        2147483647: 1000000000.0,
        [1000000000.0]: 1000000000.0,
        get h() {
            super[this] = "string";
            const o5 = {
            };
            new Proxy("string", o5);
            return this;
        },
        "c": "string",
        ..."string",
        "a": -3.659198982776384,
        "h": -3.659198982776384,
        1000: -3.659198982776384,
    };
    return o8;
}
const v9 = f0();
const v10 = f0();
const v11 = f0();
1.0863634003716214e+308 >> 1.0863634003716214e+308;
Uint8ClampedArray.e = Uint8ClampedArray;
const v18 = new Uint8ClampedArray(613);
new Float32Array(47);
let v22 = 255;
v22--;
try {
    v9.fuck(/([\cA]\118X(?!a)?a\1N[\011](\xed\xa0\x80(x)(x)(x)\4*))/gm, v11, true);
} catch(e28) {
}
new Uint16Array(v22);
const v30 = [-392.0576825237305,0.3449869706009556,4.447039970507995e+307,-5.063798246562485e+307,-568.9796177589394,388231.4033702491,-3.5365646375454567,0.12172568971863451,-4.474791203319841e+307];
v30[2] = v30;
const v31 = [9007199254740992,-13,1,206834672,5792,16,856414023,8,2147483648];
function f32(a33, a34, a35) {
    return f32;
}
try { f32.isPrototypeOf(1e-15); } catch (e) {}
const v39 = ["function",v31,v30];
const o40 = {
    "arguments": v39,
    "type": "function",
    ...v30,
    9: v31,
    __proto__: v18,
    "f": v10,
    ...v31,
};
try { o40.subarray(v9, v30); } catch (e) {}
new Worker(f32, o40);
