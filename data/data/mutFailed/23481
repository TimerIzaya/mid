const v2 = new Array(115);
function f3(a4) {
    const o23 = {
        set h(a6) {
            for (let v7 = 0; v7 < 32; v7++) {
                v2["p" + v7] = v7;
            }
        },
        __proto__: Array,
        p(a11) {
            const o12 = {
            };
            try {
                o12.g = 115;
            } catch(e13) {
            }
            try {
                const o14 = {
                };
                o14.g = 115;
                o14.d = a11;
            } catch(e15) {
            }
            try {
                const o16 = {
                };
                try {
                    new f3([o16,f3,a11,this,o12]);
                } catch(e19) {
                }
                o16.g = 115;
                o16.d = a11;
                o16.b = a4;
            } catch(e20) {
            }
            try {
                const o21 = {
                };
                o21.g = 115;
                o21.d = a11;
                o21.h = this;
            } catch(e22) {
            }
            return a4;
        },
    };
    return o23;
}
const v24 = f3(f3);
const v25 = f3(v24);
const v26 = f3(f3);
const v30 = [-17919,-9007199254740991,7,20225227,-4294967296,1,5,-4294967297,127,-630237878];
[10,9,-1779622808,-1073741824,128,-21243,52963,1,65536];
const v32 = [-30119,-65535,268435440,3,536870912,15,-268435456];
function f33(a34, a35) {
    const o43 = {
        __proto__: v24,
        "c": v25,
        ...v24,
        [v24](a37, a38) {
            try { v32.findIndex(a34); } catch (e) {}
            /(?:a+){0,0}(?:a*)+g/gvdmsy;
            /a\b!u((((.).).).)/vimy;
            /\cA/vms;
            return a34;
        },
        257: v26,
        ...v26,
        [1]: 1,
        ...v32,
        ...v2,
    };
    return o43;
}
f33(v25, 115);
f33(v30, v30);
f33(Array, 1);
function F47(a49, a50) {
    if (!new.target) { throw 'must be called with new'; }
}
class C52 extends Array {
    268435440;
}
const v53 = new C52();
try { v53.group(F47); } catch (e) {}
