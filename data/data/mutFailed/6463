new WeakMap();
new Int8Array(512);
const v10 = new WeakMap(1024);
new Float64Array(Float64Array);
let v15 = 10 << 10;
--v15;
let v17 = --v15;
let v18 = ++v17;
++v18;
new BigUint64Array(BigUint64Array);
function f23() {
    return [8n];
}
v10 < v10;
new BigUint64Array();
function F30() {
    if (!new.target) { throw 'must be called with new'; }
    const v32 = [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    Date();
    v32.reduce(Date)[22];
    const v40 = Array(19793);
    for (const v41 of v40) {
    }
    const v42 = [v40,v40,v40,v40];
    const v44 = new BigUint64Array();
    const v45 = v44.constructor;
    try { v45(); } catch (e) {}
    const v48 = [[v42,v42,v42]];
    v48.toSpliced(v48);
    v40 >= Uint16Array;
}
new F30();
const v61 = [-1000000.0,0.1600379490765781,-1.6243694690977962e+307,817210.0157459241,1.0,5.0,0.9202958446582343,-1.7976931348623157e+308,-382.2774365702321,-5.737866676165018e+307];
class C63 {
    static #e;
    m(a65, a66, a67, a68) {
        v61.#e;
        a66.#e = -1;
    }
}
~-4294967295;
