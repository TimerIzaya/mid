[-2.2250738585072014e-308];
[4.267211750111939e+307,201.51742791900415,1000.0,3.0,27.864614865800377];
const v2 = [1e-15,-7.872859741139633e+307,1.1395576976247825e+308,749284.0092876316];
/77S6(?<a>.)\k<a>/gvimsy;
/xyz{0,1}*/gudy;
/Ox5T(?<a>.)\k<a>*/gudimsy;
const v15 = [];
[82038618,-4096,226522314,-1558074821,-14,-1073741824];
[1777879736,-9007199254740990,6736,2145432814,2134630430,268435441,-2];
function f20(a21, a22, a23) {
    const o24 = {
        "a": a22,
        [a23]: a21,
    };
    return a22;
}
f20();
f20(v15, v15, 1073741824);
f20(f20);
const v29 = [Infinity,-686.9856326146617,0.47369378110968274,-7.24289104755818];
v29.includes(...[-1000.0,-2.2250738585072014e-308,511.99933163650917,-386.8372768814137,Infinity]);
const v33 = ("p").blink();
const v34 = v33[28];
const t22 = -1.0;
const v35 = new t22();
const v36 = v35.getPrototypeOf;
try { v36(); } catch (e) {}
let v38;
try { v38 = new v36(); } catch (e) {}
const v39 = v38?.constructor;
try { v39.call(v34); } catch (e) {}
let v41;
try { v41 = new v39(v33, v2, 4); } catch (e) {}
v41.getPrototypeOf;
const v44 = [1613217357,204598905,15977,1122227661,64,-2,-12,536870888];
[129,-1,2032761190,-9223372036854775808,-507888876,-37685,51541];
const v46 = [-1073741824,1665564361,16526,1805211777,10,-9007199254740990,4,-17063,-1];
const v47 = [-2.2250738585072014e-308,0.8014728140665155,1.4073101706157717e+308,1.4751052216559766e+308,2.0,-692.9604671107461,-2.220446049250313e-16,2.0];
const v48 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
[-1.015259194643325e+308,-Infinity,-9.825391401141273,-2.2250738585072014e-308,5.0,-2.2250738585072014e-308];
class C50 {
    constructor(a52, a53, a54, a55) {
        const v56 = this?.constructor;
        try { new v56(v48, a54, a54); } catch (e) {}
        a53 >>> a53;
        0.061410412759498656 >>> 0.061410412759498656;
        class C65 {
            9;
            [-4294967295n] = 13n;
            get g() {
                this.f >>>= -1278034229;
                const v67 = this[3360579767];
                try {
                    super.toSpliced(v67, 13n, v67, 2, -1771000438);
                } catch(e69) {
                }
                return -1771000438;
            }
        }
        new C65();
    }
    m(a72, a73, a74, a75) {
        v29.#e;
        a73.#e = 4;
    }
}
function f83(a84) {
}
C50.valueOf = f83;
const v85 = new C50(v44, 659.0540372978887, v44);
new C50(v85, 2.220446049250313e-16, v47);
new C50(v47, 2.220446049250313e-16, v46);
function f88() {
    for (const v89 in v85) {
    }
    function F91(a93, a94) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.b = a94;
        } catch(e95) {
        }
    }
    new F91(Array, F91);
}
function F97() {
    if (!new.target) { throw 'must be called with new'; }
}
new F97();
new F97();
