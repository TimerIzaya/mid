const v0 = [7,-4,2,-1,16];
const v1 = [1000];
const v2 = [-9007199254740990,536870888,-1];
class C3 {
    static b = v1;
    [v1] = v0;
    static [v0];
    static #c = v0;
    static set c(a5) {
        [49.1454314347568,2.799090313384081,-719787.1319816669,1.0,1000000000.0,4.093557724487731,-0.0,1.1999468191281273e+308,1.7080506087165096e+308];
        [419.88561083173227,-610.8671021218081,4.0,-1.7976931348623157e+308,433.424720776871,344651.89901052555,-163.84704117033812,13.828848329616108,-3.0];
        [-4.0,-1.4057905532577787e+308,4.0,289336.1469693284,-186741.44593441836,0.9662648893763731,-1.7976931348623157e+308,-4.0,-1.0027074173047656e+308];
    }
    c;
}
C3.b %= v2;
const o11 = {
    "maxByteLength": 105,
};
const v13 = new SharedArrayBuffer(10, o11);
new Uint8Array(v13);
const v16 = new C3();
function f17(a18, a19) {
    const o20 = {
    };
    new Proxy(v2, o20);
    return v0;
}
v16[Symbol.toPrimitive] = f17;
const v25 = new C3();
new C3();
function f30() {
    const v32 = [-5.0,-4.0,-1.7976931348623157e+308,-897.6003446951657,-1000000.0,1.8928166106024224e+306,-2.0,-1000000000000.0];
    function F33(a35, a36, a37, a38) {
        if (!new.target) { throw 'must be called with new'; }
        try { a36.call(); } catch (e) {}
        for (let v40 = 0; v40 < 50; v40++) {
        }
    }
    const v41 = new F33(7.090076723213673e+307, 7.090076723213673e+307, F33, 7.090076723213673e+307);
    const t40 = v41.constructor;
    new t40(v32, v41);
    new F33();
    return f30;
}
const o46 = {
    __proto__: f30,
    "g": v25,
    [v2]: o11,
    "a": v25,
    "c": Uint8Array,
    [v16]: v2,
    m() {
        return f30;
    },
};
