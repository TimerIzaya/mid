function f0() {
}
const v4 = /\1(a)*/gudmsy;
for (let v5 = 0; v5 < 5; v5++) {
}
try { v4(v4, 3.866732047176795e+307, v4, ...v4); } catch (e) {}
Math.log10(-9007199254740992);
Math.asinh(-9007199254740992);
let v12 = /[(?:ab|cde)]/vimy;
/a+bN*/us;
class C17 extends f0 {
    static get f() {
        2005658976 * this;
        v12 = v4;
        return -3943;
    }
    static #toString(a24, a25) {
        try { new a25(v4); } catch (e) {}
        let v27 = 0;
        do {
            Math.expm1(this);
            try { new BigInt64Array(3.866732047176795e+307); } catch (e) {}
            function F32(a34, a35, a36) {
                if (!new.target) { throw 'must be called with new'; }
                [8n] > 8n;
            }
            new F32(F32, F32, F32);
            v27++;
        } while ((() => {
                const v46 = [5,1436918233,13,-9223372036854775808,12,10779,268435439,-350312267,536870912];
                function f47(a48, a49, a50) {
                    function f51(a52) {
                        return v46;
                    }
                    return f47;
                }
                return v27 < 5;
            })())
        return -41010;
    }
    static {
        try {
            this.#d;
        } catch(e56) {
        }
    }
}
new C17();
new C17();
new C17();
for (const v64 in [1000.0,-1000.0,0.4309916776051478,1000000.0,-1.0,-560.6262021777798,NaN,3.0]) {
    new Int32Array();
    function f69(a70, a71, a72) {
        return f69;
    }
    Math.tan(-23394);
}
