const v0 = [-Infinity];
const v1 = [3.0,-2.0,2.4596986337087436,1000000000000.0,-2.220446049250313e-16,-929.3417671189715,3.4790354726976283e+307,0.0];
const v2 = [274761.7601025528,-1.7976931348623157e+308,0.01635947648866065,1e-15];
const v3 = [510.24042037848426,-1.7976931348623157e+308,0.04101536960864971,-2.084686373494695,-566.0585741639582];
const v4 = [-488.2734553984129,1.720765087718171e+308,-532.8641211525318];
const v5 = [534358.0478441429,-5.0,0.6500878290213199,-1e-15,2.2250738585072014e-308,333.9675141857829,3.0];
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    try { a8.map(v3); } catch (e) {}
    try { a9.toSorted(a9); } catch (e) {}
    try {
        this.d = a8;
    } catch(e12) {
    }
}
F6.arguments = F6;
const v13 = new F6(v1, v2);
const v14 = v13?.constructor;
let v15;
try { v15 = new v14(v0, F6); } catch (e) {}
new Int16Array(172);
new Int8Array(37);
new BigUint64Array(10);
new F6(v2, v2);
new F6(v4, v2);
const v29 = 257 >>> 257;
BigInt64Array.BYTES_PER_ELEMENT = BigInt64Array;
new Int8Array(628786973);
let v34 = 0;
do {
    v34++;
} while (v34 < 10)
new BigInt64Array(257);
v5[-352741132];
Math.log1p(v15);
Math.abs(5);
Math.atan(v15);
v29 * v15;
Math.sign(v15);
Math.log(v15);
-(-352741132);
const o58 = {
    [-352741132]: Math,
    set b(a56) {
    },
    get c() {
        return this;
    },
    "b": 2.220446049250313e-16,
};
class C59 {
    #c = v3;
}
C59.name = C59;
class C60 {
}
const v61 = new v2();
const v62 = v61.__defineGetter__;
try { v62(); } catch (e) {}
