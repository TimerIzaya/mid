let v0 = 1000000000.0;
let v2 = "1714329076";
class C3 {
    p(a5, a6) {
        const v7 = this[this];
        try {
            v7.length = 930;
            function F9() {
                if (!new.target) { throw 'must be called with new'; }
            }
            new F9();
            Array(930);
        } catch(e15) {
        }
        return 930;
    }
    f;
    #b;
    static {
        ++v0;
    }
    static #c = v2;
    #b;
    constructor(a21, a22) {
    }
    [v2];
}
const v23 = new C3();
const v24 = new C3();
const v25 = new C3();
class C26 extends C3 {
    #valueOf(a28, a29, a30) {
        super.p(v2, -121.5696181526447, a28);
        [] = v2;
        this[a29];
        ({"f":v2,} = a28);
        return this;
    }
    [C3] = C3;
    f;
    a = v23;
    static e = v0;
    3 = v25;
}
try { new C26(); } catch (e) {}
new C26();
const v35 = new C26();
v35[3] = v35;
new C26();
[-497548.24291920906,1000000.0];
const v38 = [-8.146081477889888,-1000.0,-1000000.0,1.7976931348623157e+308,253952.82170884823,-5.666516454637559e+307,1.1390064262378803e+308];
try { v38.toString(); } catch (e) {}
const v40 = [-4.0,-9.727157039590794e+307,1.7976931348623157e+308,-4.5081780010531,150372.8569896461,2.2250738585072014e-308,2.220446049250313e-16];
try { v40.map(v24); } catch (e) {}
const v43 = new Int32Array();
const v44 = v43?.__defineGetter__;
try { new v44(v2, v35); } catch (e) {}
try { v43.forEach(v43); } catch (e) {}
class C47 {
    constructor(a49, a50) {
        function f51(a52) {
            function f53(a54) {
            }
            const v57 = new Uint16Array(1024);
            v57[7] = v57;
            return C47;
        }
        const o60 = {
            "type": "function",
        };
        new Worker(f51, o60);
    }
}
