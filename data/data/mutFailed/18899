function F3() {
    if (!new.target) { throw 'must be called with new'; }
    for (let v5 = 0; v5 < 50; v5++) {
        const v6 = v5 << v5;
        -v6;
        for (let v8 = 0; v8 < 10; v8++) {
            v8 == v8;
            try { ("p").toWellFormed(); } catch (e) {}
            ("p").codePointAt(Uint8ClampedArray);
            ("p" + v8).localeCompare(v6);
        }
    }
}
const v15 = new F3();
const v16 = v15?.__lookupGetter__;
try { new v16(v15); } catch (e) {}
const v18 = new F3();
const v19 = v18?.constructor;
try { new v19(); } catch (e) {}
class C22 {
    static ["-9"] = "boolean";
    #b = "Cz";
    constructor(a24, a25) {
        a25[1] = a25;
        a24 = "-9";
        ("boolean")[Symbol.isConcatSpreadable];
    }
    #g = "boolean";
    [-2];
}
const v29 = new C22("-9", "-9");
const v30 = v29?.__defineGetter__;
try { new v30(Uint8ClampedArray, Uint8ClampedArray); } catch (e) {}
const v32 = new C22(C22, "-9");
const v33 = v32?.constructor;
try { new v33("Cz", Uint8ClampedArray); } catch (e) {}
new C22(C22, v32);
const v36 = [274.13119323478986,0.37023321174509605,4.548470982379373e+307,-1.7976931348623157e+308,-2.220446049250313e-16,0.3499553588691392];
try { v36.map("-9"); } catch (e) {}
const v38 = [0.005289877672969956,-9.66358096832085e+307,3.0];
try { v38.join(v36); } catch (e) {}
[543287.4121796759,-3.0,-535.738177024554,-9.335832812511317,-2.2250738585072014e-308];
208.7210663817168 >> 208.7210663817168;
4294967295 & 4294967295;
137 / 137;
let v54 = 2n;
v54--;
async function f58(a59, a60, a61) {
    for (let v62 = 0; v62 < 10; v62++) {
    }
    return "symbol";
}
f58.f = f58;
