const v0 = [];
const v2 = [1868255996,1,2,9007199254740992];
let v5;
try { v5 = v2.includes(undefined, -4934n); } catch (e) {}
function f6() {
}
new Map();
const v13 = new Float32Array();
for (let v14 = 0; v14 < 5; v14++) {
    v13[836499325] = ~v14;
}
const v22 = new Int32Array(129, 129, 129);
const v24 = new BigInt64Array();
const v25 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
v25[1] = v25;
try { v25.some(); } catch (e) {}
const v27 = [-1.7976931348623157e+308];
v27[129] = 268435441;
function f28(a29, a30, a31, a32) {
    const o38 = {
        toString(a34, a35, a36) {
            try { this.toString(); } catch (e) {}
            a31[a30] = a29;
        },
    };
    o38.valueOf = f28;
    return o38;
}
const v39 = f28(v24, 129, v27);
v39.toString();
const v41 = f28(v22, 129, v25);
function f42(a43, a44) {
    new Float32Array(3415);
    return a44;
}
v41[Symbol.toPrimitive] = f42;
v41 % v39;
[Map,268435441,Map,268435441,-2147483649];
const v53 = [-12151n,v0,-12151n,12n];
function f54(a55) {
    function f56(a57, a58, a59) {
    }
    return BigInt64Array;
}
v53.toString = f54;
const v60 = [v53,268435441,-677680267];
function f61(a62, a63) {
    function f66(a67) {
        const o73 = {
            __proto__: 2,
            "c": 2,
            "e": 536870889,
            213: a67,
            ...a67,
            "g": 2,
            p(a69, a70) {
                try {
                    this.fuck(536870889, a67);
                } catch(e72) {
                }
                return this;
            },
        };
        return o73;
    }
    f66(536870889);
    f66();
    f66();
    return a63;
}
v60[Symbol.toPrimitive] = f61;
function f79() {
    const o80 = {
    };
    const v81 = o80.__defineGetter__;
    function f82() {
        return Symbol;
    }
    function f83(a84) {
        f42 |= f82;
    }
    Object.defineProperty(v81, "toString", { writable: true, get: f82, set: f83 });
    if (v81 >= v60) {
        const o89 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o89);
    } else {
        v60[268435439] = v5;
        try {
            o80.__proto__ = o80;
        } catch(e91) {
        }
    }
    let v92;
    try { v92 = v81(); } catch (e) {}
    return v92;
}
for (let v93 = 0; v93 < 5; v93++) {
    f79();
    %OptimizeFunctionOnNextCall(f79);
}
