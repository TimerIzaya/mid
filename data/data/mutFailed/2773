class C3 {
    valueOf(a5) {
        a5[0] = a5;
        const v6 = super[this];
        new Uint8ClampedArray(10);
        const v12 = new v6(1984);
        new Uint8ClampedArray(16);
        return v12;
    }
}
const t10 = C3.name;
const v17 = new t10();
const v18 = C3?.valueOf;
let v19;
try { v19 = new v18(v17); } catch (e) {}
const v20 = new C3();
const v21 = v20?.constructor;
try { new v21(); } catch (e) {}
const v23 = v17[4294967296];
try { new v23(-4096, 4.0, v23, -4096); } catch (e) {}
const o25 = {
};
v23.f = o25;
const v27 = new Proxy(v20, o25);
const v28 = v27?.constructor;
try { new v28(); } catch (e) {}
new C3();
const v33 = Uint8ClampedArray.length;
const v34 = +v33;
v34 | v34;
const v36 = [16,27608,-4368,-1649389751,9223372036854775807,-11,-6,7];
v36[7] = v19;
[-861405150,-4294967295,1073741823,9007199254740990,64,-1451633145,-5,-9007199254740992,-436754865,-1267930982];
[-2147483649,-1113429380,536870887,-7,65535,570983690,4294967296,-13,-2];
const v42 = ~127;
const v44 = ~(v42 % v36);
v44 & v44;
Math.acos(v33) << v23;
Math.log2(v42);
const v49 = v36 + v42;
try { v49.codePointAt(v20); } catch (e) {}
Math.clz32(127);
new Uint8ClampedArray(5);
BigUint64Array.d = BigUint64Array;
new BigUint64Array(v44);
new Uint8ClampedArray(971);
-(536870912n << 536870912n);
class C62 {
    static #a;
}
try { new C62(); } catch (e) {}
