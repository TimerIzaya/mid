new Map();
[-508827477];
[-11,10];
const v4 = [512];
new Float64Array(256);
new Int8Array(8);
new Float32Array(0);
function f17() {
}
f17();
class C19 extends f17 {
    constructor(a21) {
        super(this, this);
        for (let v22 = 0; v22 < 5; v22++) {
            super.valueOf();
        }
    }
}
new C19();
new C19();
new C19(v4, v4);
new Uint32Array(145);
new Int8Array(64);
new Int8Array(1024);
class C30 {
    static {
        try {
            function f35(a36, a37) {
            }
        } catch(e39) {
        }
    }
}
function f46(a47) {
    const o48 = {
        ..."9007199254740990",
    };
    return 64;
}
const v50 = f46("9007199254740990");
const v51 = f46("9007199254740990");
const v52 = v51("9007199254740990");
function f53(a54, a55, a56, a57) {
    const o58 = {
        ...a56,
        "a": "o",
        1774: v51,
        ...2001,
        "c": 145,
        "d": a55,
    };
}
f53("o", v52, "ke5", v50);
function f67() {
}
function f75() {
}
function F76(a78) {
    if (!new.target) { throw 'must be called with new'; }
}
class C79 {
}
const o85 = {
    "execution": "async",
    "type": "minor",
};
o85(o85);
/V(?:ab)+i\x60/uyd;
const o91 = {
    "execution": Uint32Array,
};
gc(o91);
function f93() {
    class C94 {
        constructor(a96) {
        }
    }
}
function f97() {
    const o98 = {
    };
}
function f99() {
}
class C100 extends 24268 {
    constructor(a102, a103, a104, a105) {
        super();
        const o106 = {
        };
        gc(o106);
    }
}
new C100();
try {
    v51.fuck(Math, v51, "QBK");
} catch(e111) {
}
function f112(a113, a114, a115, a116) {
    const o117 = {
    };
}
for (let v118 = 0; v118 < 8; v118++) {
}
function f119(a120) {
}
