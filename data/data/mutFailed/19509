/mF()/gdisy;
/(tMEa\Bb)/gvdimy;
/WB(a\1)/gmy;
const v4 = [];
const v5 = [v4];
class C7 extends 36 {
}
const v8 = new C7(v5);
new Uint32Array(v8, v4);
new Uint16Array(v8);
function F13() {
    if (!new.target) { throw 'must be called with new'; }
    for (let v15 = 0; v15 < 5; v15++) {
        const v16 = [0.8307152163010869,1.0,0.0];
        v16[2] = v16;
        v16.length = v15;
    }
}
new F13();
const v20 = new Float32Array(4096);
function f23() {
    const o50 = {
        next() {
        },
        m(a27) {
            a27.f = a27;
            const o28 = {
            };
            function f29(a30, a31, a32) {
            }
            try {
            } catch(e33) {
            }
            try {
                const o34 = {
                };
            } catch(e35) {
            }
            try { Math.expm1(); } catch (e) {}
            let v38 = -9007199254740991;
            let v39 = v38++;
            v38 >> 1.7047100695894155e+308;
            class C41 {
            }
            C41.name;
            v20.codePointAt();
            const v46 = new Int8Array(3938);
            let v47 = 3;
            v39++;
            [...v47] = v46;
            const o49 = {
            };
        },
    };
    o50.m(o50);
}
new Int16Array(4096);
new WeakMap();
Math.log(v8);
function F60() {
    if (!new.target) { throw 'must be called with new'; }
    const v62 = F60.constructor;
    let v64 = -16n;
    function f65() {
        v64 *= -1911645276n;
        const v68 = new Date(Uint8Array);
        const v69 = [1.7976931348623157e+308,0.14033774481022865,0.764442389288067,-2.220446049250313e-16,710.5353911028728,1000000.0];
        for (let v70 = 0; v70 < 25; v70++) {
            v69[4294967295] = v68;
        }
        return F60;
    }
    const t72 = f65();
    new v62(f65, t72());
}
12204n <= -16;
function f82() {
    return f82;
}
/[^a\ScwU*]/vdsy;
