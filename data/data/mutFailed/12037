const v0 = [-2147483648,65537,27051,-65537];
const v1 = [1970546930,13,-2,7130,-387454000,1985034469];
[10000,-48631,4294967296,-4294967296,1000,10,129,536870889,-1978003659];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    const v6 = this?.constructor;
    try { new v6(F3); } catch (e) {}
    a5.length;
    try {
        this.e = a5;
    } catch(e9) {
    }
    try {
        this.g = v1;
    } catch(e10) {
    }
    try {
        this.f = a5;
    } catch(e11) {
    }
}
F3.arguments = F3;
const v13 = [4294967297,4294967297];
const v14 = v13.fill(v13);
const v15 = [927716.746385878];
const v18 = new BigUint64Array(10);
Reflect.apply(v15.indexOf, v18, v0);
const v22 = new F3(v1);
new F3(v0);
const v24 = new F3(v1);
function f25() {
    return v22;
}
const v26 = [f25,F3];
v26[1] = v26;
[[v26,f25,v26,v26],v0,v26,v24];
v13.fuck(BigUint64Array, "function");
const t35 = [0.0,-1000.0,2.557943047142931];
t35.valueOf = 4294967297;
const v33 = v13.constructor;
try { new v33(v13, v14); } catch (e) {}
-1073741824 >>> -1073741824;
Math.cos(-1073741824);
