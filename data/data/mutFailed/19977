[57912,8,268435441,888551108,-2,1807103519,1024,268435439,268435440,15835];
[-17527,1476456947,-2147483648,3,-1387908349,875742038,-1408022892];
[-11,2147483648,536870888,3089,3,8,9,268435440,-11];
const v12 = [-9007199254740991,536870888,51292,-2147483649];
const v13 = [536870912,-124426018];
const v14 = [23930,454087404,65536,-6,-1955199007,1,1073741824,14];
function f15(a16) {
    var c = a16;
    new Int16Array(1);
    return -851.5631601424436;
}
const v21 = Symbol.toPrimitive;
v14[v21] = f15;
function f22(a23) {
    a23.toString = f22;
    try { a23.map(v13); } catch (e) {}
    a23[0] = a23;
    const o29 = {
        "e": v12,
        "c": v13,
        [v14]: v14,
        "a": v14,
        [v12]: v14,
        get f() {
            let {"h":v26,"length":v27,...v28} = v14;
            this.toString = v26;
            return v28;
        },
    };
    return o29;
}
function f30(a31, a32) {
    new f15(a31, ..."rzp", a31, a31);
    try {
        ("-2").replace("1024", "fuiC");
    } catch(e37) {
    }
    return a31;
}
f22.toString = f30;
const v38 = f22?.toString;
try { new v38(); } catch (e) {}
const v40 = f22(v12);
v40.c = v40;
const v41 = f22(v13);
v41.f = v41;
f22(v14);
const v44 = 1073741824 * 1073741824;
v44 - v44;
65535 | 65535;
function F48() {
    if (!new.target) { throw 'must be called with new'; }
    const v50 = this?.constructor;
    Object.defineProperty(v50, "e", { value: this });
    v50.e = v50;
    try { new v50(); } catch (e) {}
}
function f52() {
    return v21;
}
function f53(a54) {
    const v57 = f30([1.6484091400965863e+308,-689078.0330961384,-1.7976931348623157e+308,-160341.63249327452,127.17765342927578,1000.0,2.0,614.081171374098,NaN,3.82514727368617], -8717, f30);
    try { ("then").fontsize(v57); } catch (e) {}
}
Object.defineProperty(F48, "e", { writable: true, configurable: true, get: f52, set: f53 });
F48.arguments = F48;
const v59 = new F48();
try { v59.hasOwnProperty(f22); } catch (e) {}
v59.length;
const v62 = new F48();
v62[Symbol.toPrimitive] = f22;
new F48();
const v67 = -14n ^ -14n;
try { ("object").padStart(v67); } catch (e) {}
let v72;
try {
const t0 = "object";
v72 = t0(v59, "number", F48);
} catch (e) {}
function f73(a74) {
    return v72;
}
class C75 extends f73 {
    [v62] = "E";
    [v59] = -14n;
    268435441 = -14n;
}
C75.length = C75;
const t88 = "object";
t88[v62] &= v72;
