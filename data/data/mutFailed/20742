const v5 = new Uint32Array(12);
const v8 = new Uint8Array(2);
new BigUint64Array(128);
class C12 {
    static #o(a14, a15, a16) {
        function F17(a19, a20) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                new F17();
                const v24 = -1.252027415501717e+308 | -32070;
                (-32070) ** v24;
                +v24;
            } catch(e27) {
            }
        }
        const v28 = new F17(F17, F17);
        new F17(F17, v28);
        v5.buffer;
        v8[2341320902] ||= -1;
        return this;
    }
    constructor(a32, a33) {
        try {
            this.#o();
        } catch(e35) {
        }
    }
    g = 2;
    f;
    static 3374766476;
    static 512 = 12;
}
new C12(128, 743246154);
new C12(-50754, 12);
new C12(2, 743246154);
function f40() {
    return f40;
}
const o42 = {
    "type": "function",
};
o42.arguments = 128;
const v43 = new Worker(f40, o42);
const v44 = v43.getMessage;
try { new v44(); } catch (e) {}
