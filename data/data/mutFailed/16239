const v3 = ["-3"];
const o5 = {
    "arguments": v3,
    "type": "function",
};
536870912n >> 536870912n;
function F12(a14, a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    a17 & a17;
    try {
        this.b = a16;
    } catch(e19) {
    }
}
const v20 = F12?.constructor;
try { new v20(-65535n); } catch (e) {}
const v22 = new F12(1682581462n, "bind", "-931519913", 1682581462n);
const v23 = new F12(536870912n, "bind", "-931519913", -65535n);
new F12(536870912n, "5", "-931519913", 536870912n);
function F25(a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = "-3";
}
const v29 = "bind" >>> "bind";
const v30 = v29 >>> v29;
const v31 = [];
function F32() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.constructor(); } catch (e) {}
    this.d = v31;
}
try { F32.propertyIsEnumerable(v22); } catch (e) {}
const v36 = new F32();
const v37 = new F32();
const v38 = new F32();
const v40 = new Uint8ClampedArray(v30);
try { v40.lastIndexOf(v23); } catch (e) {}
Uint16Array.length = Uint16Array;
const v43 = new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
const v45 = eval(v43);
try { v45.toReversed(); } catch (e) {}
const v48 = 2.0 >>> 2.0;
let v49 = v48 >>> v48;
v49--;
const v52 = 5.0 >>> 5.0;
let v53 = 65536n;
~(v53--);
~(-2147483649n / -2147483649n);
let v59 = 536870888n;
v59++;
const v61 = [-3.5650322397951273,1000.0,0.802460520523592,5.641883312396217e+306];
const v62 = [431.4791340196293,-3.0,125159.99825031101,21.6056810036589,1.6160148855763925e+308,1.7462069791264565e+308,5.0,1e-15,-1000.0];
try { v62.reduce(v36); } catch (e) {}
function F64() {
    if (!new.target) { throw 'must be called with new'; }
    const v66 = this?.constructor;
    try { new v66(); } catch (e) {}
}
const v68 = new F64();
function F69(a71, a72) {
    if (!new.target) { throw 'must be called with new'; }
}
F69.prototype = F69;
const v73 = new F69();
-(-37859n);
~4;
function F79() {
    if (!new.target) { throw 'must be called with new'; }
    this.toString(this, F79, F79, this)[0];
    Date.length;
    const v86 = Date.toString(F79, 9223372036854775807);
    try { v86.split(v73, Date); } catch (e) {}
    v86.replaceAll(v68, -37859n);
    const v90 = new Uint32Array(Uint32Array, Uint32Array, 4);
    try { v90.lastIndexOf(this); } catch (e) {}
    const v94 = new Set(v61);
    const v95 = v94?.__defineGetter__;
    try { new v95(v38, F25); } catch (e) {}
    const v97 = v94.add;
    try { new v97(v90); } catch (e) {}
    const v100 = v94["delete"](839612.5677247904);
    v100 || v100;
    const v102 = v100 || v100;
    !v102;
    !(v102 || v102);
    const v106 = v102 && v102;
    v106 || v106;
    const o109 = {
    };
    o109.a = o109;
    o109.b = o109;
    o109.e = 19793;
    try { Array.isArray("-3"); } catch (e) {}
    try { new Array(9223372036854775807); } catch (e) {}
    let v114;
    try { v114 = ("getPrototypeOf").blink(); } catch (e) {}
    try { v114.split(v59, v114); } catch (e) {}
    const v116 = v114[28];
    try { v116.endsWith(v30); } catch (e) {}
    const v118 = v116.strike();
    try { v118.toLocaleLowerCase(); } catch (e) {}
    const v120 = v114.strike(591114.0785999324);
    let v121;
    try { v121 = v120.replace(19793, v73); } catch (e) {}
    try { v121.localeCompare(v118); } catch (e) {}
    v121[11] = v121;
    class C124 {
        ["getPrototypeOf"] = -1.7976931348623157e+308;
    }
    class C125 extends C124 {
        ["getPrototypeOf"] = C124;
    }
    try { new C125(); } catch (e) {}
    let v127;
    try { v127 = new C125(); } catch (e) {}
    const v128 = v127?.getPrototypeOf;
    try { new v128(); } catch (e) {}
    const v130 = v127.getPrototypeOf;
    try { v130.bind(C124); } catch (e) {}
    let v132;
    try { v132 = new C125(); } catch (e) {}
    const v133 = v132?.getPrototypeOf;
    try { new v133(); } catch (e) {}
    const v135 = new C125();
    const v136 = v135?.getPrototypeOf;
    try { new v136(); } catch (e) {}
    const v138 = v135.getPrototypeOf;
    const v139 = v138?.apply;
    try { new v139(v31, Uint32Array); } catch (e) {}
    try { v138(v127); } catch (e) {}
    let v142;
    try { v142 = new v138(); } catch (e) {}
    try { v142.propertyIsEnumerable(v121); } catch (e) {}
    const v144 = v142?.constructor;
    v144.prototype;
    let v146;
    try { v146 = new v144(v114, this, 4); } catch (e) {}
    try { v146.constructor(); } catch (e) {}
    const v148 = v135.constructor;
    let v149;
    try { v149 = new v148(F79, v106); } catch (e) {}
    const v150 = v149?.getPrototypeOf;
    const v151 = v150?.apply;
    v151.name = v151;
    try { new v150(); } catch (e) {}
    for (const v154 of Array(19793)) {
    }
}
const v155 = new F79();
v155.length = v155;
const v156 = v155.constructor;
try { v156.toString(); } catch (e) {}
let v158;
try { v158 = v62.toString(); } catch (e) {}
try { v158.concat(v158); } catch (e) {}
const v160 = [-1.238631182886351e+308,1.9411414401127767e+306,5.0,-276.83656814954304,830049.9402099303,-4.0901138213923866e+307,-5.0,300.38437393340564];
try { v160.lastIndexOf(v61); } catch (e) {}
class C162 {
}
try { new C162(); } catch (e) {}
const v164 = C162.__lookupGetter__;
try { v164(v37); } catch (e) {}
const v166 = new C162();
const v167 = v166?.constructor;
try { new v167(); } catch (e) {}
const v169 = v166.isPrototypeOf(v52);
v169 && v169;
