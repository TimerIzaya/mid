new Int16Array(1024);
const v5 = new Uint8Array(4);
const v8 = new Uint32Array(926);
class C12 extends Int16Array {
    p(a14, a15) {
        super.c = Int16Array;
        try { this.at(Uint32Array); } catch (e) {}
        return [...this];
    }
    o(a19, a20, a21, a22) {
        try {
            v5.__proto__ = v8;
        } catch(e23) {
        }
        [-Infinity,1e-15,0.9491134546158522,417182.7311575229,-1.0442879372986582e+308,2.220446049250313e-16,-4.0,1.4926938269317284e+308];
        [421.5825550671925,-1.6409378370837184e+308];
        return [2.0,-1000000000.0,0.35398157931754914];
    }
}
new C12();
new C12();
const t21 = "undefined";
new t21();
function F30() {
    if (!new.target) { throw 'must be called with new'; }
}
const v33 = new Int32Array(Int32Array);
Reflect.setPrototypeOf(v33, F30);
