class C3 {
    static #d = "iterator";
    constructor(a5, a6) {
        this[2210021869] = this;
        new Uint8ClampedArray(5);
        new Float64Array(14);
        new BigInt64Array(4096);
    }
    static ["a"];
    2210021869;
}
C3.a;
const v17 = new C3(C3, C3);
const v18 = new C3(v17, C3);
v18[2210021869];
const v20 = new C3(v18, v18);
v20[2210021869];
-9223372036854775807n << -9223372036854775807n;
-9223372036854775808n >> -9223372036854775808n;
-9340 <= -9340;
1073741823 & 1073741823;
class C38 {
    constructor(a40, a41) {
        const v42 = a41.__proto__;
        try { v42.toExponential(a40); } catch (e) {}
    }
    f;
    set d(a45) {
        super.d;
        const o47 = {
        };
    }
}
C38.name = C38;
const v48 = new C38(-9340, 2147483649);
const v49 = new C38(-9340, 1073741823);
const v50 = new C38(1073741823, v48);
v50.f;
function F52(a54, a55, a56, a57) {
    if (!new.target) { throw 'must be called with new'; }
    a54.h = a54;
}
const v58 = new F52(v48, v49, 2147483649, -9340);
const v59 = v58?.__defineGetter__;
try { new v59(-9223372036854775807n, v50); } catch (e) {}
const v61 = new F52(v48, v49, 1073741823, -9340);
try { v61.constructor(v49, "a", v17, v49); } catch (e) {}
const v63 = new F52(v48, v50, -9340, 1073741823);
const v64 = v63?.constructor;
try { new v64(v63, 1073741823, 1073741823, 1073741823); } catch (e) {}
const v67 = new WeakSet();
Set.e = Set;
const v69 = new Set();
1136 | 1136;
const v73 = new Float64Array(1136);
try { v73.subarray("a", v67); } catch (e) {}
try { ("NFKC").replace(v49, -9340); } catch (e) {}
("string").normalize("NFKC");
const t57 = "string";
t57[v69] = v50;
4 != 4;
const v85 = new Int32Array(4);
try { v85.find(v85); } catch (e) {}
try { Uint32Array.from(2147483649); } catch (e) {}
new Uint32Array(48);
try {
    v61.fuck(v63, 1136);
} catch(e92) {
    e92.e = e92;
}
