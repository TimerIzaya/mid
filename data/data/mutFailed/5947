class C3 {
    d = -529761843;
    static #h;
    static set h(a5) {
        1 * this;
    }
    static set d(a8) {
        try { new a8(1, a8, 1, this); } catch (e) {}
        new Int8Array(251);
        new Float32Array(137);
        new Int16Array(0);
    }
}
let v19;
try { v19 = C3(); } catch (e) {}
new C3();
new C3();
new C3();
class C23 {
    p(a25, a26, a27, a28) {
        a28 = a26;
        const v29 = C3 instanceof a26;
        let v30;
        try { v30 = a28(v29, a28); } catch (e) {}
        try {
            C3.valueOf = v30;
        } catch(e31) {
        }
        return this;
    }
    e;
}
new C23();
new C23();
new C23();
try { new Float32Array(-529761843, C3, Float32Array); } catch (e) {}
const v38 = new Float32Array(6);
v38.fill();
let {"byteLength":v40,...v41} = v38;
typeof v19 === "object";
const o47 = {
    "maxByteLength": 16,
};
const v49 = new SharedArrayBuffer(9, o47);
new BigInt64Array(v49);
