const v2 = new BigUint64Array(3319);
const v5 = new Int16Array(2);
const t2 = 3319;
new t2(2);
[v2,BigUint64Array,[BigUint64Array,2]];
const v11 = [v5,Int16Array,BigUint64Array,Int16Array];
function f12(a13, a14, a15, a16) {
    const o28 = {
        get a() {
            return -2.153308410094821;
        },
        65537: 3319,
        "a": a16,
        get d() {
            let v22 = 0;
            while (v22 < 10) {
                try {
                    a13.length = 1;
                } catch(e26) {
                }
                v22++;
            }
            return v2;
        },
    };
    return o28;
}
f12(f12(BigUint64Array, 2, 3319, 2), 3319, 2, 3319);
f12(v11, 3319, 2, 2);
const v32 = [-Infinity,-1000000.0,-964229.7889241329];
const v33 = [1000.0,7.013617100191173,-351.0818852767976,0.6726521994945021,0.0654548428416345,0.0,357.95756141696074,-114535.71398965968];
const v34 = [1000000000.0,1.0,1.33700765354115,3.759383313252208,0.7953224416766568,9.060355110242564e+307,1.7976931348623157e+308,1.7976931348623157e+308,2.220446049250313e-16];
const v35 = [v34];
[v32,v33,v35,v35,v34];
[v33,v34,v34];
1000000000000.0 - 1000000000000.0;
let v41 = 4.9807369083218855;
v41++;
function f43() {
    return v41;
}
function F44(a46, a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    const v49 = this.constructor;
    try { new v49(a47, a46, a48); } catch (e) {}
    a48 + a48;
    try {
        this.b = v34;
    } catch(e52) {
    }
}
F44.arguments;
const v54 = new F44(1000000000000.0, v35, 0.0746389278020293);
v54.length = v54;
new F44(0.0746389278020293, v34, 0.0746389278020293);
class C56 extends F44 {
    512 = v34;
}
C56.prototype = C56;
new C56();
new C56();
new C56();
-1e-15 ^ -1e-15;
const v65 = 1073741823 & 1073741823;
v65 + v65;
