const v0 = [];
const v4 = [v0,-1];
try { v4.includes(-170722581); } catch (e) {}
[-1,-1,v4,v4,v0];
const v7 = [-128,v0,-1];
[-5.0,860328.7371617188];
[2.3693842463538353,-9.885912448967249,-2.2250738585072014e-308,-1000000.0,0.3875770496612614,1000.0,-939058.0479370387,0.5439060387240294];
[-4.0,-3.0,-5.0];
class C11 {
}
const v12 = new C11();
class C14 {
    e = C14;
    constructor(a16, a17) {
        for (let i = 0; i < 10; i++) {
            this[this];
        }
    }
}
try { C14.bind(v7); } catch (e) {}
function F20() {
    if (!new.target) { throw 'must be called with new'; }
    const v22 = this?.__lookupGetter__;
    try { new v22(v0); } catch (e) {}
}
const v24 = new F20();
v24.length;
const v26 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
try { v26.splice(F20, v7); } catch (e) {}
const v29 = 9007199254740991n * 9007199254740991n;
const v30 = [NaN,3.0];
-483497369 - -483497369;
const v34 = v30["concat"](-483497369);
v34[2] = v34;
3 | 3;
function f37(a38, a39, a40, a41) {
    try { new a38(); } catch (e) {}
    a39 & a39;
    const v44 = 3 | a39;
    v44 * v44;
    a38 / a38;
    const v47 = a39 < a38;
    a40 >>> a40;
    const o52 = {
        n(a50, a51) {
            return v47;
        },
    };
}
for (let v53 = 0; v53 < 5; v53++) {
    function f54() {
        class C55 {
            constructor(a57, a58) {
                const v59 = this?.constructor;
                try { new v59(a57, a57); } catch (e) {}
                function f61(a62) {
                    const v63 = [536870887,-42204,-17288903,-3,9007199254740991,7];
                    const v64 = [6,268435440,13,1073741825];
                    function f65(a66, a67) {
                        const o68 = {
                            "c": v64,
                        };
                        return o68;
                    }
                    f65(v63, v63);
                    let v70 = 0;
                    v70++;
                    return f61 - this;
                }
                try { f61.toString(); } catch (e) {}
                const t70 = "function";
                t70[4] = "function";
                const o76 = {
                    "type": "function",
                };
                new Worker(f61, o76);
            }
        }
        new C55();
        for (let v79 = 0; v79 < 5; v79++) {
            "p" == "p";
            let v82;
            try { v82 = ("p").substring(C14, C14); } catch (e) {}
            try { v82.sub(); } catch (e) {}
        }
        try {
            v26.forEach();
        } catch(e85) {
            class C86 {
                constructor(a88, a89) {
                    try {
                        C86++;
                    } catch(e91) {
                    }
                }
            }
            e85.a = v24;
            e85.a = e85;
        }
        const v93 = ("1073741824").constructor;
        try { new v93("1073741824"); } catch (e) {}
        v93.name = v93;
        const v95 = v93(v29);
        const v96 = v95?.search;
        try { new v96(f54); } catch (e) {}
        try { v95.replaceAll(6, v12); } catch (e) {}
        return "1073741824";
    }
    f54.prototype = f54;
    f54();
    %OptimizeFunctionOnNextCall(f54);
}
