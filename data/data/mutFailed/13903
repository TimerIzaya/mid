let v1 = "symbol";
let v2 = -53474;
class C3 {
    static get b() {
        v1[this] = v1;
        super.d = this;
        typeof this === "boolean";
        return -256;
    }
    [v2];
    constructor(a9) {
        [] = v1;
        [] = v1;
        const v10 = v1[v2];
        a9 /= a9;
        super.a = this;
        v10[v1] = this;
        ({"c":v2,"e":v1,"f":v1,...v1} = v10);
    }
}
const v11 = new v1(C3);
const v12 = new C3(v11);
const v13 = new C3(v1);
function F20(a22, a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a23;
    } catch(e26) {
    }
    try {
        this.h = C3;
    } catch(e27) {
    }
}
new F20(v2, -256, v11, v12);
const v29 = new F20(F20, 268435440, v11, v11);
new F20(50162, 268435440, v13, v29);
function f31(a32, a33) {
    function f34() {
        return f31;
    }
    Object.defineProperty(a32, "toString", { configurable: true, get: f31 });
    return a33;
}
f31(f31);
f31(f31);
