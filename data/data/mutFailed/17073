class C3 {
    11 = 1052170323;
    d = 4;
    #b;
    16 = "grow";
    3599315963;
    constructor(a5, a6) {
        this[1] = C3;
        super[4] = this;
    }
    static #d = "grow";
    2147483648;
    static c = 1052170323;
}
const v7 = C3?.apply;
let v8;
try { v8 = new v7(4, C3); } catch (e) {}
v8[v8] = 1052170323;
const v9 = v7 || C3;
const v11 = ("grow")["toUpperCase"]();
[C3,v8,4,v7];
[v7,4,v9,1052170323,[v11,4]];
class C18 {
    static {
        class C20 {
        }
    }
}
const v21 = [-0.6149395169662668,2.264458813811361e+307,-945.2801378445339];
[1000000000000.0,-1.0821679916006571e+308,4.092945393267847,1000000000.0,-822637.9284357226];
const v23 = [1000000.0,265384.07224241644,1.7976931348623157e+308,0.012515925346037848,-1e-15,-842.4349190644589,0.49749563044172784,-2.0];
class C27 {
}
const v28 = new C27();
const v29 = new C27();
function F30(a32, a33, a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    const v36 = this.constructor;
    try { new v36(a32, F30, 16, v36); } catch (e) {}
    a35[16] = a35;
}
try { (-1313166029).toString(); } catch (e) {}
new F30(v21, v29, v21, v28);
new F30(v28, v23, v21, v21);
new C3("grow", 1052170323);
const v42 = new C3(1052170323, 4);
try { v23.flat(16); } catch (e) {}
new Uint8Array(0);
new Float32Array(2518);
new Int8Array(1);
new C3("grow", "grow");
function f54() {
    return v42;
}
-11.598425871555605 >>> -11.598425871555605;
const v59 = [-39046,-886386369,-58819,6];
try { v59.toString(); } catch (e) {}
const v61 = [7850,9223372036854775807,268435441];
try { v61.reverse(); } catch (e) {}
[-1,4294967296,257,9007199254740991,14,1015028170,57876,56360,-9007199254740992,268435441];
const v66 = new Date(-118.8024069268339);
const v67 = v66.getYear();
v67 >>> v67;
