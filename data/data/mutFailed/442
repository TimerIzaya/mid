const v0 = [536870889];
const v1 = [-26707,65536,65536,956069010,9007199254740991];
const v2 = [1167783843,-32629,5];
class C3 {
    constructor(a5, a6) {
        const o10 = {
            "type": this,
        };
        o10.execution = o10;
        gc(o10);
    }
    n(a13) {
        v0.length;
        try {
            v2.valueOf = v2;
        } catch(e15) {
            const v18 = new Uint16Array(3);
            v18.indexOf();
            const v20 = [-47479,-256,-11,58632];
            const v21 = [536870888,8];
            const v22 = [2147483649,2147483649,-65537,-268435456,10,9223372036854775807];
            function f23(a24) {
                const o28 = {
                    set g(a26) {
                    },
                    get g() {
                        return a24;
                    },
                    __proto__: a24,
                    ...v21,
                    4096: v22,
                };
                return o28;
            }
            f23(v20);
            const v30 = f23(v20);
            const o31 = {
                __proto__: v30,
                "d": f23,
            };
        }
        return v1;
    }
    static #valueOf(a33, a34) {
        const v36 = new a34();
        try { a33(v2, v0, a34, v36, v36); } catch (e) {}
        return super.f;
    }
}
new C3();
let v40 = 10;
for (let i = 0; i < 10; i++) {
    const v41 = v40--;
    let v43 = v40 << v40;
    --v43;
    let v45 = --v43;
    let v46 = ++v45;
    v41.cos(++v46);
}
new C3();
const v50 = new C3();
new Set();
function f53() {
    return v50;
}
("HEkWL").localeCompare("isArray", "isArray");
