function f6(a7, a8, a9) {
    const o19 = {
        __proto__: -9720n,
        "f": -9720n,
        set g(a11) {
            const o14 = {
                "maxByteLength": 268435441,
            };
            const v16 = new SharedArrayBuffer(197, o14);
            new Int32Array(v16);
        },
    };
    return o19;
}
f6(-9720n, -1743013468n, -9720n);
f6(1281558929n, 1281558929n, 1281558929n);
f6(-1743013468n, -1743013468n, 1281558929n);
[64,-1407459256,-65537,0];
const v24 = [6,-824742451,5,-65535,633061868,4294967297,-1349069732,-4294967296,-55590845];
[-10,2147483647,64,-4294967296,-56372,-400078000,-1,255,2];
function f26() {
    const o27 = {
    };
    return o27;
}
const v28 = f26();
class C31 {
}
const v32 = new C31();
v32.BYTES_PER_ELEMENT = 1281558929n;
function f33(a34, a35) {
    a35.BYTES_PER_ELEMENT = a35;
    a34.BYTES_PER_ELEMENT;
    class C37 {
    }
    C37.length;
    let v40;
    try { v40 = ("0x2I").sup(); } catch (e) {}
    class C42 {
    }
    const v43 = C42?.call;
    try { new v43(null); } catch (e) {}
    class C45 extends C42 {
    }
    try { new C45(NaN, v32, NaN, v28); } catch (e) {}
    const v47 = a35?.propertyIsEnumerable;
    try { v47(); } catch (e) {}
    class C49 {
    }
    try { C49.call(C42); } catch (e) {}
    const v51 = [1000000000.0,2.2250738585072014e-308,-3.0,-2.2250738585072014e-308,-2.2250738585072014e-308,-6.525028373249204e+307,-7.851646360254072e+307,0.6785915059434757,-0.0];
    class C52 {
    }
    function f53(a54) {
        f26();
        %PrepareFunctionForOptimization(f26);
        f26();
        f26();
        %OptimizeMaglevOnNextCall(f26);
        return f26();
    }
    const v60 = Symbol.replace;
    C52[v60] = f53;
    try { C52.apply(1.7976931348623157e+308, f33); } catch (e) {}
    Symbol.b = Symbol;
    C52[Symbol.replace] = v51;
    const v64 = [];
    function f65() {
        function f66(a67) {
            C45[8] = v24;
            try { v40.getOwnPropertyDescriptor(C45); } catch (e) {}
            return v60;
        }
        return f66;
    }
    function f69(a70) {
        for (let v71 = 0; v71 < 5; v71++) {
            function f72() {
                const v74 = new Date(v71);
                v74.getFullYear();
                return Date;
            }
            f72();
            %OptimizeFunctionOnNextCall(f72);
        }
    }
    Object.defineProperty(v64, "valueOf", { configurable: true, get: f65, set: f69 });
    let v77;
    try { v77 = v64.with(v64); } catch (e) {}
    const v79 = new Float64Array(v64, v77);
    const v80 = new Float64Array(v79, a34, v77);
    const v81 = v80.values();
    try { v81.next(); } catch (e) {}
    return v80;
}
%PrepareFunctionForOptimization(f33);
f33(Uint16Array, v32);
%OptimizeFunctionOnNextCall(f33);
f33(v32);
new BigInt64Array();
new BigInt64Array(1073741824);
