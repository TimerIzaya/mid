function f0() {
    const o36 = {
        256: 5.0,
        __proto__: 5.0,
        m(a5, a6) {
            new Float64Array(256);
            function f11(a12) {
                const o14 = {
                    ...this,
                };
                const v15 = o14.read;
                try { v15(this); } catch (e) {}
                return a12;
            }
            new Uint32Array(8);
            Math.acosh(8);
            const v25 = new BigUint64Array(4);
            function F26(a28, a29, a30) {
                if (!new.target) { throw 'must be called with new'; }
            }
            const v31 = new F26(BigUint64Array, 4, 241);
            for (let v32 of v25) {
                v32--;
                Object.defineProperty(v31, 241, { enumerable: true, value: v32 });
            }
            const v35 = new Int8Array(11);
            return v35;
        },
    };
    return o36;
}
f0();
f0();
undefined ^ undefined;
class C41 {
}
new C41();
f0()[145073254];
new Object();
[684939.742263278,-1000000.0,717.888174278477,-394.63924128108863,-1000.0,-1000000000.0,-6.579769903828392,1000.0,1e-15];
([-9.971911899517362,-2.220446049250313e-16])[1];
const v50 = [-2.220446049250313e-16,1000.0,-1000.0,-1000000000.0,-9.154725709264681e+307,1000.0,140.17752517083477,5.96696801768508,-1000000.0];
v50.toString = f0;
class C54 {
    static [v50];
}
("setUTCMinutes").toUpperCase();
const v59 = new Int8Array();
for (let v60 = 0; v60 < 10; v60++) {
    v60 + v60;
    try { Date.now(); } catch (e) {}
    new Date(..."JmINY", "JmINY", ...v59);
}
