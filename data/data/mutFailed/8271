try { ("6Hp0").fixed(); } catch (e) {}
%VerifyType(-256);
let v5;
try {
const t0 = "6Hp0";
v5 = t0(-256, "6Hp0", -9223372036854775808, -9223372036854775808, "6Hp0");
} catch (e) {}
const v6 = [1988814172,v5,-9223372036854775808];
const v7 = ["6Hp0"];
[v7,-256,1988814172,1988814172,v6];
[-7.962483582265493,-3.0,-19238.457703210064,1000000.0];
const v15 = [1000.0,-2.220446049250313e-16,5.0,-331789.6788785282,0.5639427889544252];
try { v15.reduceRight(1988814172); } catch (e) {}
[0.5296078798512421,1000000000.0,-4.0,-1.0,0.798798741102738,-Infinity];
const v19 = ("symbol")?.toWellFormed;
try { new v19(); } catch (e) {}
const v21 = [536870888,4096,-11];
try { v21.map(v21); } catch (e) {}
try { Math.cos(v21); } catch (e) {}
--0.0;
Math.fround(1073741824);
-0.0 ^ 8587;
Math.cosh(-0.0);
const v31 = Math.min(8587);
v31 + v31;
Math.tanh(-0.0);
const v36 = [31909n];
const v37 = v21.includes;
const v38 = v37?.constructor;
try { new v38(v7); } catch (e) {}
Reflect.apply(v37, "symbol", v36);
