function f0() {
}
const v3 = f0 >>> 53;
let v4 = new f0(v3);
({"byteLength":v4,} = v4);
const v5 = f0();
const o6 = {
};
try {
    o6.b = f0;
} catch(e7) {
}
try {
    const o8 = {
    };
    o8.b = o8;
    o8.b = f0;
    o8.c = v4;
} catch(e9) {
}
try {
    const o10 = {
    };
    new Uint8Array(o10, 53, v3);
    new Uint8Array(6);
    new Uint16Array(907);
    new Float64Array(1202);
    o10.b = f0;
    o10.c = v4;
    o10.e = f0;
    const v23 = new Float64Array(231);
    v23.fill();
    function f25() {
        return ("D")[0];
    }
    %PrepareFunctionForOptimization(v4);
    f25();
    %OptimizeFunctionOnNextCall(f25);
    f25();
} catch(e30) {
}
try {
    const o31 = {
    };
    o31.e = v5;
    o31.b = f0;
    o31.c = v4;
    o31.e = Uint8Array;
} catch(e32) {
}
new Uint8Array(53);
const v36 = new Uint16Array(940);
o6.b;
o6.b;
if (o6[f0]) {
} else {
    try { o6.n(); } catch (e) {}
}
try {
    new Uint8Array(1512956428, 1512956428);
} catch(e47) {
}
new Uint16Array(6);
for (let v50 = 0; v50 < 5; v50++) {
    function f51() {
        [WeakSet,WeakSet];
        return v50;
    }
    const v54 = v5();
    %OptimizeFunctionOnNextCall(f51);
    v54[v36];
    let v56 = 235.73109948942897;
    let v59 = Math;
    let v61 = 127;
    +v61;
    const v63 = ++v59;
    v56 + 2147483648;
    ++v56;
    v59.log2(v63);
    ++v61;
}
