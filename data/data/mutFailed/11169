new Int8Array("JZ");
new BigInt64Array(2);
new BigInt64Array(2571);
const v15 = [0.0,1.0,-6.743702675363474,400.9902683003188];
[-3.942521664036782e+307,-3.942521664036782e+307,[BigInt64Array,BigInt64Array]];
[-504863.1885363821,-248378.80818527355,-147.11467188198264,-1.7039705769992093e+308] | 1;
let v21 = "string";
for (let v22 = 0; v22 < 5; v22++) {
    function f23() {
        for (let [i51, i52] = (() => {
                new f23();
                for (let v26 = 0; v26 < 10; v26++) {
                    f23(f23, v26, v26, v26);
                }
                const v28 = /(?:a*)+q(?<a>.)/guds;
                function f29(a30) {
                    a30.hasIndices = a30;
                    a30?.constructor.lastParen;
                    const o36 = {
                        set b(a34) {
                        },
                        get d() {
                            return this;
                        },
                    };
                    return o36;
                }
                for (let i39 = 0, i40 = 10; i39 < i40; i40--) {
                    for (let v47 = 0; v47 < 50; v47++) {
                        f29(v28);
                    }
                }
                10 - 10;
                return [0, 10];
            })();
            (() => {
                i52--;
                const v54 = i51 < i52;
                v54 || v54;
                return v54;
            })();
            (() => {
                const v58 = i51++;
                v58 >> v58;
            })()) {
            i52 - v22;
            for (const v63 in v15) {
                v21 *= v21;
            }
        }
        return v15;
    }
    f23();
    %OptimizeFunctionOnNextCall(f23);
}
