let v0 = 1000.0;
class C3 {
    set f(a5) {
        v0 = -614743.4972464694;
        try { a5["forEach"]("forEach", this); } catch (e) {}
    }
    constructor(a9, a10) {
        let v11;
        try { v11 = v0(3.0, v0); } catch (e) {}
        const v12 = ++v11;
        const v13 = [v12,v0,-614743.4972464694,-614743.4972464694,v12];
        [v0,this,this,-614743.4972464694,a9];
        const v16 = new Uint8Array();
        for (let v17 = 0; v17 < 625; v17++) {
            let v19 = undefined;
            const v20 = undefined ^ undefined;
            v20 * v20;
            const o25 = {
                "b": undefined,
                ...v16,
                n(a23, a24) {
                    v19 = v20;
                },
            };
        }
        [v13,this];
    }
}
new C3(-614743.4972464694, v0);
new C3(-614743.4972464694, v0);
new C3(3.0, 3.0);
class C34 {
    static #d;
    constructor(a36, a37) {
        function f38(a39) {
            function f41(a42) {
                return a42;
            }
            this.onmessage = f41;
        }
        const o45 = {
            "type": "function",
        };
        new Worker(f38, o45);
    }
    set b(a48) {
        Symbol.search;
    }
    static ["Xkz0W"] = "Xkz0W";
    8;
    d;
}
const v51 = new C34();
new Uint32Array(Uint32Array);
("Vre").constructor.raw();
const v57 = new C34();
const v58 = new C34();
class C59 extends C34 {
    static set g(a61) {
        try {
            super.keys();
        } catch(e63) {
        }
    }
    n(a65, a66) {
        v58[10] = v51;
        SharedArrayBuffer();
        Float64Array(10);
    }
}
new C59();
new C59();
new C59();
const v75 = [-Infinity,187698.93506137934,-446.4409125067523,1000000.0,-1000.0,-535.0706534930079];
try { v75(v57); } catch (e) {}
