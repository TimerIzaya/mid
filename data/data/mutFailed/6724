class C3 {
    f = 9007199254740992;
    a = 9007199254740992;
    #e = 9007199254740992;
    static {
        function f5() {
            return 1947320405n;
        }
        Object.defineProperty(this, Symbol.toPrimitive, { configurable: true, value: f5 });
        this[this] = 9007199254740992;
        super[this];
        super[-4] = this;
    }
    #d = -4;
    10 = -4;
}
function f12(a13, a14) {
    Math.cbrt();
    return Math;
}
C3[Symbol.toPrimitive] = f12;
new C3();
let v20 = new C3();
function f21() {
    const o44 = {
        valueOf(a25, a26) {
            function f27() {
                function f28(a29) {
                    new Float64Array(64);
                    new BigInt64Array(3481);
                }
                10 ^ f28(f28);
                return 1987035518;
            }
            const v41 = [];
            const o42 = {
                "arguments": v41,
                "type": "function",
            };
            new Worker(f27, o42);
            return 1987035518;
        },
    };
    return 1987035518;
}
v20.toString = f21;
const v45 = new C3();
v45[10] = v45;
const v46 = [413245.8442041746,-1000000.0,2.2250738585072014e-308,-1.3836737624045035e+308,0.0,-2.2250738585072014e-308];
function f47(a48, a49) {
    function f50() {
        let v51 = 946.0676210033328;
        v51++;
        const o53 = {
            __proto__: v51,
        };
        return f50;
    }
    return a49;
}
v46.toString = f47;
v46 <= v20;
C3 **= v20;
v20 = v45;
-(-4);
const v59 = -4 | "setFloat64";
v59 * v59;
const v61 = Math.log2("setFloat64");
v59 >> 12074;
const v63 = ~v59;
v63 - v63;
const v65 = Math.cosh(12074);
const v66 = [315.3838771878211,0.8321654879979539,1.0,-813011.8421276518];
[0.6539665749849783,1.7976931348623157e+308,1000000000.0,-8.689537094694481,-975205.0217160888,5.0,-2.220446049250313e-16];
const v68 = [];
const v69 = v68?.findLast;
try { new v69(v45); } catch (e) {}
function F72(a74, a75, a76, a77) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(-4); } catch (e) {}
    for (let v79 = 0; v79 < 100; v79++) {
        v79 * v79;
        const o83 = {
            valueOf(a82) {
                return v79;
            },
        };
        function f84(a85, a86, a87) {
            a87.length = a87;
            const o94 = {
                toString(a89, a90, a91) {
                    super[a87];
                    return a86;
                },
                "a": o83,
                "arguments": v68,
                2: undefined,
                get d() {
                    return F72;
                },
            };
            let v95 = 0;
            v95 + v95;
            while ((() => {
                    let v97 = 10;
                    v97++;
                    return v95 < v97;
                })()) {
                const v100 = v66.__proto__;
                try { v100.findLastIndex(v79); } catch (e) {}
                const v102 = delete v66[v61];
                v102 || v102;
                v95++;
            }
            return a85;
        }
        f84.toString = f21;
        const v105 = f84(f84, undefined, F72);
        this[v105];
        let [v107] = v46;
        try { v107.valueOf(); } catch (e) {}
        const v109 = [0,2147483647,9223372036854775807,9007199254740990,9007199254740990];
        v109.constructor = f47;
        try { v109.concat(v65); } catch (e) {}
        [23422];
        [-22202,-262028836,-6,-1,21270,488119579,5,-536870912];
        f84(undefined, v105, v105);
    }
}
new F72();
new F72();
