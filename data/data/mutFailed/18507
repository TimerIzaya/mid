let v2 = Date;
v2.default = v2;
let v3 = new v2();
v3.length = v3;
const v4 = [10624,733951208,4294967296,5138,14];
v4[Symbol.toPrimitive] = v2;
function f7(a8, a9) {
    v2[a8] = Uint8ClampedArray;
    try {
        v3.length = 1;
    } catch(e11) {
    }
    return a8;
}
v4[Symbol.toPrimitive] = f7;
1940694780n == v4;
new Uint8ClampedArray(1866);
new Int32Array(16);
new Int16Array(7);
let v24 = Uint8Array;
Symbol[8];
({"asyncIterator":v2,"hasInstance":v24,"toStringTag":v3,} = Symbol);
new v24(12);
new BigInt64Array(1506);
new Float32Array(512);
Math.sin(/c(?:ab)|cde/vdmy.exec());
function F41() {
    if (!new.target) { throw 'must be called with new'; }
}
class C43 extends F41 {
}
([Int32Array,Int32Array,Int32Array,Int32Array]).length;
Math.acosh(+-65537);
