new WeakSet();
const v2 = [10,-65537,2,-1925224979,-12767,-4,-5,-845652044,6,-19463];
const v3 = [-56920,-10,-2147483647,-579425663,5107,-9223372036854775807,64];
const v4 = [-1011512195,257,9007199254740992,9,129,1368511806,-9223372036854775807,-2744];
class C5 extends WeakSet {
    constructor(a7) {
        super(v2);
        try {
            v3.length = 2974502363;
        } catch(e9) {
        }
    }
    1000;
    h = v4;
    static #f = v2;
    static [v3] = v4;
}
new C5(v3);
new C5(v3);
const v12 = new C5(v2);
[4,21239,7,1024,-1016816875,-63280,4];
[1024,1000,601966900,536870887,-26938,-2,16,16,128];
[1073741825,-3,536870888,0];
new Uint32Array(8);
new Uint8ClampedArray(64);
new Uint32Array(9);
[-4294967295,-33901,-12,-65537];
[899592207];
[];
function f33(a34, a35, a36, a37) {
    9007199254740991 | a35;
    a34 / a34;
    const v40 = a35 < a34;
    typeof v12[Symbol.matchAll] === "number";
    a36 >>> a36;
    const o55 = {
        n(a49, a50) {
            try {
                const o51 = {
                };
                f33(o51, o51, -1024, a37);
            } catch(e54) {
            }
            return v40;
        },
    };
}
for (let v56 = 0; v56 < 625; v56++) {
}
