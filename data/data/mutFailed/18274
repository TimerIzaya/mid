function f0() {
}
const v1 = [-1.2031980735955404e+308,1.0,7.649543357426175,692184.0579363499,2.2250738585072014e-308,4.992672209668154];
const v2 = [1000000000000.0,-0.0,0.29887961441302235,3.0];
const v3 = [-1000000000000.0,-1000000.0,1.6689361650462598e+308];
const v4 = [v2];
const v5 = [v4,v1,v1,f0,v4];
const v6 = [v3,v3,v2,v5];
new Set();
function f14(a15, a16) {
    const o17 = {
        ...a16,
        "e": 129n,
    };
    return o17;
}
f14(v4, v2);
f14(v1, v6);
f14(v5, v5);
const v22 = [65537,268435441,63298,-5,1235122603];
const v23 = [128,215394418];
const v24 = [-2,-4294967296,4294967297];
function F25(a27, a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    const v31 = this.constructor;
    try { new v31(1024, 1024, v22, this); } catch (e) {}
    a28.caller;
    for (let v34 = 0; v34 < 100; v34++) {
        f0();
    }
    let v38 = 5;
    Math.atan(v3);
    const v40 = v22 % v3;
    Math.atan2(v40, v40);
    v38--;
    a30[1];
    f0();
    try {
        a29.valueOf = v31;
    } catch(e45) {
    }
    this.c = a29;
    const v47 = [Reflect];
    const o48 = {
        __proto__: Reflect,
        "e": v47,
    };
    this.f = a28;
}
const v49 = new F25(-714582153, F25, -714582153, v23);
new F25(9, v49, 9, v24);
