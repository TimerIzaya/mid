function f1(a2, a3) {
    return a2;
}
function F4() {
    if (!new.target) { throw 'must be called with new'; }
    this.a = this;
    try {
        this.a = 1022873702;
    } catch(e7) {
    }
}
const v9 = new Float64Array(297);
function f11(a12) {
    'use strict';
    new F4();
    const o16 = {
        "get": Symbol,
    };
    return -1179329576;
}
f11(v9);
class C20 {
    constructor(a22, a23) {
        try {
            a23.length = 5;
        } catch(e25) {
        }
    }
}
new Float64Array(1000);
new BigUint64Array(157);
[-3,11,9007199254740991,536870912,4323];
const v32 = [3,4096,-339689186,-8,1512490321,0,9223372036854775807];
[-4294967296,-58187,1073741824,-1775330715,5,17120,-18284,-9007199254740992,4096];
const v35 = new v32();
Math.pow(4, -1000000.0 & v35);
v9[0];
try {
    new Uint8ClampedArray(v32);
} catch(e43) {
}
("sync")[-5.0];
function f48(a49) {
    return -897042.7196709883;
}
class C50 extends f48 {
}
