WeakSet.d = WeakSet;
const t1 = "16";
const v4 = new t1();
const v5 = v4?.constructor;
try { new v5(); } catch (e) {}
let v7;
try { v7 = v4.delete("cause"); } catch (e) {}
!(0 == 0);
const v12 = new BigUint64Array(0);
try { v12.entries(); } catch (e) {}
let v14 = 512;
new Int32Array([64,-6,-60026,-9]);
class C18 {
}
const v19 = v14--;
const v21 = new Float32Array(v14);
try { v21.filter(v19); } catch (e) {}
try { Uint32Array("16", "16", BigUint64Array); } catch (e) {}
new Uint32Array(3);
function F27(a29) {
    if (!new.target) { throw 'must be called with new'; }
    (0).name;
    try {
        function f31(a32, a33, a34) {
            return v7;
        }
        const t26 = "function";
        t26[1] = "function";
        const o37 = {
            "type": "function",
        };
        Worker(f31, o37);
    } catch(e39) {
        try { e39.toString(); } catch (e) {}
        e39.h = e39;
    }
}
const v41 = new F27(F27);
const v42 = v41?.constructor;
try { new v42("cause"); } catch (e) {}
const v44 = v41?.constructor;
try { new v44(v41); } catch (e) {}
