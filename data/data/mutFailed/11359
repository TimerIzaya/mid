[5,1073741825,36528,-31170];
[9,-9007199254740991,55921497,12658,-1824808796,-175677683,-268435456,1,-15,1713475478];
[-509884143,8,-413489596,-9007199254740990,-536870912,-2,0];
const v7 = new Date();
new Uint16Array(3037);
const v13 = new Uint8Array(5);
new BigInt64Array(14, v13, Uint8Array, v7);
class C17 {
}
let v18 = new C17();
const v19 = new C17();
function F20() {
    if (!new.target) { throw 'must be called with new'; }
    function f22() {
        function f23(a24) {
            try { a24(a24, "4294967296"); } catch (e) {}
            function f26() {
                ("number").slice();
                return f26;
            }
            f26();
            %OptimizeFunctionOnNextCall(f26);
            return a24;
        }
        return f23;
    }
    function f30(a31) {
        [Uint16Array,a31,a31,v18];
    }
    Object.defineProperty(this, "valueOf", { writable: true, enumerable: true, get: f22, set: f30 });
    const v33 = this * this;
    v18 = this;
    v33 <= v19;
    try {
        for (let i = 0; i < 5; i++) {
        }
        new F20();
    } catch(e36) {
    }
}
new F20(v13, v18, 14);
