const v0 = [45678,-1,268435441,255,-4294967295,54235,-2,-1683363715];
[256,65536,64,-1751727891,1073741823,12202];
try {
    undefined.fuck();
} catch(e4) {
}
const v5 = [-21094,12,1073741825,-4,4294967295,65536,1000,1000];
const o6 = {
};
class C7 {
}
for (let i10 = 0, i11 = 10;
    i10++, i10 < i11;
    (() => {
        const v16 = [601759695];
        const v17 = [1073741824,1073741823,1376142744,1073741825];
        function f18(a19, a20, a21, a22) {
            a22 - a22;
            function f24() {
                return a19;
            }
            function f25(a26, a27) {
                return a26;
            }
            try { f25(); } catch (e) {}
            f25(v17, C7);
            try { v17["find"](..."find", a22, ...v16, ...v17); } catch (e) {}
            return C7;
        }
        for (let v32 = 0; v32 < 10; v32++) {
            f18(v32, f18, i10, v32);
        }
    })()) {
}
function F36(a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = a38;
    try {
        this.h = a38;
    } catch(e40) {
    }
    try {
        this.e = a38;
    } catch(e41) {
    }
}
const v42 = new F36(v5, v0);
const v43 = new F36(v5, v5);
const v44 = new F36(v0, v0);
const v45 = [v43,v42,v44];
[v0,v44];
[v0,v45,v43];
class C48 {
}
Math.expm1(Math);
-1000 ** 0.544190430081408;
for (let v55 = 0; v55 < 5; v55++) {
    const v57 = new Uint8ClampedArray(Uint8ClampedArray, Uint8ClampedArray, Uint8ClampedArray);
    for (let v58 = 0; v58 < 5; v58++) {
        function f59() {
            const o60 = {
                __proto__: v57,
                4: v58,
            };
            return f59;
        }
        f59();
        %OptimizeFunctionOnNextCall(f59);
    }
    %OptimizeFunctionOnNextCall(v55);
    new Int32Array(1024);
    const v66 = [-9.109766292519199,-1.3811947064786667e+308,0.09110445091766706,5.0,-385647.03832885576,0.2888431306471019];
    try { v66.filter(59890n); } catch (e) {}
}
