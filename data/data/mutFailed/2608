const v0 = [5,-2037827336,65535,15418,-268435456];
v0.d = v0;
const v1 = [4096,65535];
function f2() {
    /a||bc/ums;
    /M04Rta+b/gudimsy;
    /F/vis;
    return v1;
}
Object.defineProperty(v1, "toString", { writable: true, enumerable: true, value: f2 });
const v6 = [-691087906,266193600,10,4,-9223372036854775807,10];
{
    v6[v1] += 666;
}
v6[666] = v6;
let {"d":v8,"length":v9,...v10} = v0;
new Uint32Array(666);
new Int8Array(7);
new Uint8ClampedArray(3);
function f20(a21, a22) {
    arguments[0] = arguments;
    return a22;
}
f20(undefined);
for (let i27 = 0, i28 = 10;
    (() => {
        const v29 = i27 < i28;
        const v30 = 666 >> v6;
        delete v1[v30];
        c = v0;
        Reflect.construct(Uint8ClampedArray, [v30,v30], f20);
        return v29;
    })();
    i28--) {
}
