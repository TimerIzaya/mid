const v0 = [268435456,-65537,1];
const v1 = [-43246,-343618265,13,2,4096,-9223372036854775807];
function f2() {
    [1126838905];
    return v1;
}
v1.toString = f2;
const v5 = [15,-65537,18143,2108537987,1701580831];
v5.toString = f2;
let v6 = [1617863512,-536870912,30833,-12267,1532714845,-9007199254740990,65536,-2];
let v7;
try { v7 = v6.toSorted(v6); } catch (e) {}
const v8 = [65536,-9223372036854775808,-1244953926,-22407,459,14];
const v9 = [8,10,33385];
function F10(a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    a13.toString = f2;
    try { a13.fill(this); } catch (e) {}
    try {
        this.g = a12;
    } catch(e15) {
    }
    try {
        this.d = v1;
    } catch(e16) {
    }
    v8[4] %= a13;
    try { a13(...v1, ...this, this, ...v1, a12); } catch (e) {}
    this[460] = v1;
    delete v0?.length;
    v9["shift"]();
}
F10[1] = v7;
const v21 = new F10(v5, v9);
v21[Symbol.match] = f2;
new F10(v21, v1);
new F10(v6, v5);
try { new Float32Array(F10, v6, Float32Array); } catch (e) {}
new Float32Array(13);
10 << 10;
const v33 = new Float64Array(10);
v33[1];
const v37 = new Float64Array(6);
v37[5];
v21[Symbol.match];
v6++;
[] = v33;
class C44 {
    toString(a46) {
        const v47 = this?.constructor;
        try { new v47(); } catch (e) {}
        const t51 = super["bigint"];
        t51[9] = 0;
    }
}
const v51 = new C44();
const v52 = [v51,v51];
v52[1];
try {
    v52.length = v51;
} catch(e54) {
}
