function f0() {
    let v3 = -9223372036854775807;
    v3--;
    const o42 = {
        [-268435456]: -268435456,
        10: "g",
        get c() {
            class C6 {
                [-268435456];
            }
            new C6();
            new C6();
            new C6();
            if ("g") {
                const v10 = this % this;
                try { v3(v10, this); } catch (e) {}
            } else {
                Math.log(9007199254740990);
                Math.atan2("g", this);
                "g" || -268435456;
                "g" << -268435456;
                function f18() {
                    const o23 = {
                        set g(a22) {
                        },
                        ..."1k3g",
                        "g": -8.763942551219884e+307,
                    };
                }
                class C24 {
                    constructor(a26, a27, a28) {
                        for (let v29 = 0; v29 < 50; v29++) {
                            f18();
                        }
                        function F31(a33, a34) {
                            if (!new.target) { throw 'must be called with new'; }
                            const v35 = this.constructor;
                            try { new v35(); } catch (e) {}
                            a34++;
                            this.g = a33;
                        }
                        const v38 = new F31();
                        const t42 = v38.constructor;
                        new t42();
                    }
                }
                new C24();
            }
            return "g";
        },
    };
    return o42;
}
const v43 = f0();
const v44 = f0();
f0()[10];
const v48 = new WeakSet();
const v49 = [-1236785659,-1456632929,4294967295];
[2147483649,-107471756,637600078,268435456];
v49[2][1];
for (let i = 0; i < 5; i++) {
    for (let v53 = 0; v53 < 5; v53++) {
        class C54 {
        }
        for (let v55 = 0; v55 < 5; v55++) {
            v55 > v55;
        }
    }
}
[-65537,-36789,-9223372036854775807];
try { ("172196601").link(v43); } catch (e) {}
0.42342408713376245 - v48;
function f66(a67, a68, a69, a70) {
    ("find").substr(a68);
    return a67;
}
function F74(a76, a77) {
    if (!new.target) { throw 'must be called with new'; }
    const v78 = this?.constructor;
    const v80 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
    for (let i83 = 0, i84 = 10; i83 < i84; i84--) {
        const t81 = v80.constructor;
        t81(-1.0);
    }
    try { new v78("toString", this); } catch (e) {}
    a77 & a77;
    try {
        this.e = "d";
    } catch(e95) {
    }
    try {
        this.c = v44;
    } catch(e96) {
    }
}
const o98 = {
};
gc(o98);
class C100 {
}
function f101(a102, a103, a104, a105) {
    const v108 = new Int16Array(1269);
    try { C100.n(f101); } catch (e) {}
    for (const v110 in v108) {
    }
    return a103;
}
f101();
F74.caller = F74;
new F74("d", 0.42342408713376245);
const v113 = new F74("toString", 0.42342408713376245);
new F74(f0, v113);
const v115 = Promise.reject(Promise);
try { v115.then(v48, v48); } catch (e) {}
v115.then(v115);
