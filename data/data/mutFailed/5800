class C3 {
    static get h() {
        let v5;
        try { v5 = this.all(-307560.0098508138, this, -307560.0098508138); } catch (e) {}
        const v6 = v5 ** v5;
        this[v5];
        return v6;
    }
    256;
    constructor(a9) {
        a9[-307560.0098508138] = -307560.0098508138;
    }
    9;
    static #g;
    f;
    static c;
}
const v10 = new C3(-307560.0098508138);
new C3(C3);
new C3(-2.0);
const v13 = [536870887,1073741823,-2026473848,-381449811,5368,12,-3];
const v14 = [-9007199254740990,4404,7,63308,-3521,1033390020];
const v15 = [-2147483647,1073741824];
class C16 {
    static #b = v10;
    static d = v14;
    set d(a18) {
        try {
            v13.#b;
        } catch(e20) {
        }
        const o21 = {
        };
        try {
            o21.e = v15;
        } catch(e22) {
        }
        try {
            const o23 = {
            };
            o23.e = v15;
            o23.b = this;
        } catch(e24) {
        }
        try {
            const o25 = {
            };
            o25.e = v15;
            o25.b = this;
            o25.c = a18;
        } catch(e26) {
        }
        try {
            const o27 = {
            };
            o27.e = v15;
            o27.b = this;
            o27.h = v14;
        } catch(e28) {
        }
    }
}
new C16();
new C16();
new C16();
class C39 {
}
const v40 = new C39();
([Uint32Array,Uint32Array,Uint32Array,Uint32Array]).push();
function F45() {
    if (!new.target) { throw 'must be called with new'; }
}
function f55() {
    try { v40.getMinutes(arguments); } catch (e) {}
    arguments[arguments] = v40;
    return 65535;
}
