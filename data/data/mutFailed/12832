const v2 = new Uint8ClampedArray(128);
const v5 = new URIError(4096, URIError, Uint8ClampedArray);
new BigUint64Array(-4294967296);
function f9(a10, a11, a12) {
    const o19 = {
        "a": a10,
        __proto__: v2,
        get d() {
            try {
                super.m(v5, v5, BigUint64Array, 128);
            } catch(e15) {
            }
            return typeof this === "boolean";
        },
    };
    return o19;
}
f9(128, 128, 4096);
f9(-4294967296, 4096, 128, f9);
for (let v22 = 0; v22 < 5; v22++) {
    function f23() {
        [Math.atanh(v22)];
        return Math;
    }
    f23();
    %OptimizeFunctionOnNextCall(f23);
}
f9(4096, 4096, 128);
function f29() {
    const v31 = ([f29]).constructor;
    class C32 extends v31 {
    }
    const v33 = new C32();
    return v33.reverse().findIndex(v31);
}
%PrepareFunctionForOptimization(f29);
f29();
%OptimizeFunctionOnNextCall(f29);
f29();
