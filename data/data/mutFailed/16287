const v0 = [];
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v0;
    } catch(e3) {
    }
    try {
        this.g = v0;
    } catch(e4) {
    }
    try {
        this.a = v0;
    } catch(e5) {
    }
}
const v6 = new F1();
const v7 = new F1();
const v8 = new F1();
function f9() {
    function f10(a11) {
        ("boolean").normalize();
        return v8;
    }
    return f10;
}
Object.defineProperty(v8, "constructor", { get: f9 });
const v14 = v8?.constructor;
try { new v14(); } catch (e) {}
function f16(a17, a18) {
    a17.f = a17;
    a18.f;
    const o25 = {
        p(a21, a22) {
            function f23() {
                return a22;
            }
            a21 || f23;
            return a18;
        },
        "b": v0,
        "a": v6,
        ...v6,
        ...a17,
        "g": v8,
        730123565: v6,
        "e": a17,
    };
    return o25;
}
f16[Symbol.toPrimitive] = f9;
f16.g;
const v29 = f16(v8, v7);
v29[730123565] = v29;
f16(v7, v8);
f16(v6, v6);
class C32 {
    toString(a34, a35) {
        const v36 = a35.g;
        const v38 = Symbol.iterator;
        const o47 = {
            [v38]() {
                let v40 = 10;
                const o46 = {
                    next() {
                        v40--;
                        const v44 = v40 == 0;
                        const o45 = {
                            "done": v44,
                            "value": v40,
                        };
                        return o45;
                    },
                };
                return a35;
            },
        };
        return v36;
    }
}
const v48 = new C32();
new C32();
new C32(F1, v48);
[3.836595330454784e+307,-1.1402235194805368e+308];
const v55 = [991.721527488573,-290835.2265090322];
[-4.0,-4.739753632217134,-2.220446049250313e-16];
const v58 = new WeakMap();
function f59(a60, a61) {
    const o62 = {
        "apply": Symbol,
        "call": Symbol,
        "construct": f16,
        "defineProperty": f16,
        "deleteProperty": f16,
        "get": f9,
        "getOwnPropertyDescriptor": Symbol,
        "getPrototypeOf": f16,
        "has": Symbol,
        "ownKeys": f9,
        "preventExtensions": f16,
    };
    new Proxy(v6, o62);
    return a61;
}
v58.constructor = f59;
const t105 = "-1723624938";
t105[8] = "-1723624938";
const v69 = ("-1723624938").slice(9, "g").normalize();
try { v69.fontsize("5n"); } catch (e) {}
let v71;
try { v71 = v69.substring(v55, WeakMap); } catch (e) {}
try { v71.sub(); } catch (e) {}
class C73 {
    constructor(a75, a76) {
        a76.sup(v69, "-1723624938", v7, this).toLocaleLowerCase();
    }
}
try { C73.toString(); } catch (e) {}
[v55,v58];
[v58];
const v82 = [v55,v58];
let v83;
try { v83 = v82.pop(); } catch (e) {}
Object.defineProperty(v83, "constructor", { writable: true, value: Symbol });
const v84 = v83?.constructor;
try { new v84(); } catch (e) {}
const v86 = /(x)(x)(x)\1/uis;
function f87(a88, a89, a90, a91) {
    const o98 = {
        4294967295: a88,
        [v86](a93, a94, a95, a96) {
            super.test();
        },
    };
    return a89;
}
f87.name;
-8298n <= -8298n;
8.438590633230234e+306 / 8.438590633230234e+306;
f16 | 6;
const t136 = [-936145422,536870912,127,257,-36772,-15984,2];
t136.length = 6;
const v111 = [];
v111[0] = F1;
try { v111.push("toString"); } catch (e) {}
function f113() {
    const o117 = {
        toString() {
            super[this];
            return this;
        },
        ...v111,
        n() {
            return this;
        },
    };
}
f113();
f113();
gc.length;
gc.caller;
function f123() {
    function f124(a125) {
        try {
            const o126 = {
            };
        } catch(e127) {
        }
    }
    try {
    } catch(e128) {
    }
}
gc();
165 & 165;
const v133 = new Uint8Array(165);
function f134(a135, a136) {
    for (let v139 = 0; v139 < 5; v139++) {
        function f140() {
            let v141 = -4294967295;
            const v142 = v141--;
            v55.length;
            const v144 = "a" / v142;
            const o152 = {
                [-4294967297n](a146, a147, a148, a149) {
                    eval();
                },
            };
            return v144;
        }
        f140();
        %OptimizeFunctionOnNextCall(f140);
    }
    return a136;
}
v133.valueOf = f134;
v133[101] = v133;
const v154 = v133.lastIndexOf();
const v155 = v154 | v154;
v155 + v155;
const v158 = (a159, a160, a161, a162) => {
    function F163(a165, a166, a167, a168) {
        if (!new.target) { throw 'must be called with new'; }
    }
};
v158.name = v158;
try { v158(Uint8Array, v154, v154, 8.438590633230234e+306); } catch (e) {}
