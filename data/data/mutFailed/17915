[];
class C4 {
    constructor(a6) {
        Math.clz32(-4294967296n);
        const v11 = +-1469689161;
        -4294967296n + a6;
        v11 * v11;
        Math.exp(v11);
    }
}
new C4(1024n);
new C4(1024n);
new C4(1024n);
const o57 = {
    ["constructor"]: "constructor",
    2: 4.0,
    ..."rN",
    "f": "rN",
    __proto__: "rN",
    "g": 4.0,
    "h": "rN",
    m(a23, a24) {
        const v27 = new BigUint64Array(1000);
        const o28 = {
            ...v27,
        };
        a23[this] = "constructor";
        Array();
        class C34 {
            static #a;
            static n(a36, a37) {
                const v38 = super.d;
                try { v38(); } catch (e) {}
                return a36;
            }
            [1];
            static [1] = 255;
            [255];
            f = -65536;
        }
        const v40 = new C34();
        const v41 = new C34();
        let v43 = -65536n;
        let v45;
        try { v45 = v40.m(1n, 10000n, 10000n, 1); } catch (e) {}
        function f46(a47, a48, a49) {
            let v50;
            try { v50 = v45(a48); } catch (e) {}
            v50 = a49;
            v43 >>= a49;
            v40[10] = 1n;
            v41.f;
            return v43;
        }
        const v54 = ("gYPHN").normalize("NFKD");
        try {
            ("constructor").localeCompare(v54);
        } catch(e56) {
        }
        return v54;
    },
};
class C63 {
}
class C64 extends C63 {
    static set b(a66) {
        function f68(a69, a70, a71, a72) {
            a71 * a71;
            const o74 = {
            };
            o74.__proto__;
            return f68;
        }
        new Uint8Array();
        function f86(a87, a88, a89) {
        }
        f86(Int8Array, 1.0, 7);
        class C91 {
            #a;
            constructor(a93, a94, a95) {
                a94.#a;
            }
        }
        const v99 = new Float64Array(Float64Array, Float64Array, Float64Array);
        function f100() {
            v99.length = 0;
            return 0;
        }
        f100();
    }
}
