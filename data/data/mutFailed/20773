function f0() {
    const o60 = {
        get d() {
            const v6 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
            const v7 = [601759695];
            const v8 = [1073741824,1073741823,1376142744,1073741825];
            function f10(a11, a12, a13, a14) {
                function f15() {
                    v6.constructor;
                    const o19 = {
                        ..."toStringTag",
                    };
                    o19[1] = o19;
                    try {
                        v8.forEach(a12);
                    } catch(e21) {
                    }
                    const v23 = Symbol.toPrimitive;
                    const o27 = {
                        toString(a25, a26) {
                            a25 *= v23;
                            return a26;
                        },
                    };
                    const o49 = {
                        get f() {
                            return -268435456;
                        },
                        [v23]() {
                        },
                        [522675525n](a32, a33) {
                        },
                        "c": v7,
                        valueOf(a35, a36) {
                            return a12;
                        },
                        "b": -4294967295,
                        [-4294967297n](a38, a39, a40, a41) {
                        },
                        "e": -4294967295,
                        "e": -268435456,
                        "maxByteLength": -4294967295,
                        valueOf(a43, a44) {
                            return -4294967297n;
                        },
                        toString(a46, a47, a48) {
                            return v8;
                        },
                    };
                    return o49;
                }
                f15();
                %OptimizeFunctionOnNextCall(f15);
                ("find").substr(a12, Reflect);
                return v6;
            }
            this | -1000000000000.0;
            let v58;
            try {
            const t0 = -128;
            v58 = t0();
            } catch (e) {}
            try { new v58(this, -128); } catch (e) {}
            return 32776;
        },
        "b": 32776,
        3219: -1000000000000.0,
        "d": 32776,
    };
    return o60;
}
const v61 = f0();
const v62 = f0();
function f63() {
    return f63;
}
const v64 = [-9223372036854775807,-31958,-437619447,54990,9007199254740992,-9223372036854775807,8,128];
function F65() {
    if (!new.target) { throw 'must be called with new'; }
}
function F67(a69, a70) {
    if (!new.target) { throw 'must be called with new'; }
    for (let v71 = 0; v71 < 10; v71++) {
        "p" + v71;
    }
    const t85 = v64.constructor;
    new t85(F65, a69);
}
const v76 = f0();
class C77 extends f0 {
    static [v76] = v62;
    static [v61];
    2147483647;
    set a(a79) {
        v61[this] = a79;
        const o80 = {
        };
        try {
            o80.b = v62;
        } catch(e81) {
        }
        try {
            const o82 = {
            };
            o82.b = v62;
            o82.c = f0;
        } catch(e83) {
        }
        try {
            const o84 = {
            };
            /9f8\xf0\x9f\x92\xa9/diy["compile"]();
            let v90 = -25283n >> (-25283n && -25283n);
            v90--;
            ~(v90 | v90);
            o84.b = v62;
            new BigInt64Array();
            const v98 = new Uint32Array(2432);
            const o99 = {
                ...v98,
            };
            o84.c = f0;
            o84.g = this;
        } catch(e100) {
        }
        try {
            const o101 = {
            };
            o101.b = v62;
            o101.c = f0;
            o101.f = v62;
        } catch(e102) {
        }
    }
}
for (let v103 = 0; v103 < 5; v103++) {
    function f104() {
        const v105 = [-Infinity,1.7976931348623157e+308,1.0,1.7976931348623157e+308,-1.0,Infinity];
        new Uint8Array(v105, v103, v103);
        v105.length >>>= -65536;
        return -65536;
    }
    f104();
    %OptimizeFunctionOnNextCall(f104);
}
new C77();
new C77();
new C77();
function f115(a116) {
    const o120 = {
        __proto__: 2,
        ...a116,
        p(a118, a119) {
            return a119;
        },
    };
    return o120;
}
/(?:a*)+/us;
/(ab)\10N/usy;
/8\xed\xa0\x80b(?<a>.)a\fb\nc\rd\te\vf*/gd;
const v128 = new Uint16Array(3327);
const v129 = [-2038832922,-14];
("c").toUpperCase();
!-2;
const v136 = new Uint32Array(3);
for (let v137 = 0; v137 < 5; v137++) {
    v136[v137] = "c";
}
v128.set(v129);
