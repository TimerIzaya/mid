/(?:a+){0,0}/gvdisy;
/\bS[\cA]?/u;
function f5() {
    return f5;
}
const v6 = [f5,f5];
class C7 extends f5 {
}
function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    const v12 = this.constructor;
    let v13 = -6n;
    const v14 = v13--;
    const o22 = {
        [v14](a16, a17, a18, a19) {
            eval(a16);
        },
    };
    try { new v12(); } catch (e) {}
    v6[129];
    C7[2];
}
/ea\Bb/gudy;
let v28 = -9223372036854775808n;
v28 %= 45725n;
class C32 {
    ["getPrototypeOf"] = -1.7976931348623157e+308;
}
class C33 extends C32 {
    ["getPrototypeOf"] = C32;
}
try { new C33(); } catch (e) {}
class C43 extends Uint8Array {
    constructor(a45, a46) {
        a45[1] = Float64Array;
        super(a45);
    }
}
new Float64Array(5);
new Uint32Array(14);
const v53 = [];
function f55() {
    let v56 = 12;
    const v57 = v56--;
    class C58 {
        constructor(a60) {
            Uint16Array(v56);
        }
    }
    v53.constructor;
    v57.call();
    return Uint16Array;
}
new Float32Array(136);
function F66(a68, a69) {
    if (!new.target) { throw 'must be called with new'; }
    let v67 = this;
    for (let v70 = 0; v70 < 5; v70++) {
    }
    const v71 = v67.constructor;
    const t59 = "9007199254740992";
    t59["255"] &= 7;
    const v77 = new Float32Array(2);
    v77[1] = v77;
    try { new v71(); } catch (e) {}
    class C79 {
    }
    class C80 extends v6 {
        o(a82, a83) {
            v67 %= this;
            %VerifyType(super.g);
        }
    }
}
new F66();
