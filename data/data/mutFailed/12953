const v3 = [-818.0192201625083,-2.0];
[-0.41444598331928617,-5.492867693686755e+307,5.013558407335188e+307,143.9157410098535,-1000000000.0];
v3.d = 257;
let v7 = -4.380315352541508e+307;
v7 >> v3;
const v9 = [4.2150355102024335,-1.448232339299981e+308,-1000.0,-361.8832016752856,-1000000000.0,-4.025651608891998,179.70489248176887,-Infinity];
new Int8Array(v9);
new Int32Array(356);
function f22() {
    v7--;
    class C27 {
        constructor(a29) {
            const v30 = this.constructor;
            try { new v30(a29, f22); } catch (e) {}
            new Uint16Array(12, -4294967296);
        }
    }
    const v33 = new C27();
    new C27(-4294967296);
    class C35 extends 1000000000000.0 {
        [v33];
    }
    new C35();
}
new BigUint64Array(3642);
new v9();
const o40 = {
    "type": "sF",
};
function f41(a42, a43) {
    for (let v44 = 0; v44 < 50; v44++) {
        ("imul").padEnd();
        const v47 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
        [3,-6,7268,-554513674,5,4294967295,861325878,17152,2147483647,5];
        const v49 = [1073741824,1073741823,1376142744,1073741825];
        try { v49["find"](..."find", "sF", ...v47); } catch (e) {}
    }
    return a42;
}
f41(f41, f41);
new Date();
-4096;
1073741824 - 1073741824;
try { new BigInt64Array(-2147483649, Date, -1.5678520341586263e+308); } catch (e) {}
const v67 = new BigInt64Array(1073741824, BigInt64Array);
[-0.0,-2.0,-1e-15,2.0,-Infinity,2.220446049250313e-16];
const v69 = [873.3236504624783,-5.059538800838508];
v69[1] = v69;
v67["lastIndexOf"](4096, "lastIndexOf", "lastIndexOf");
const v73 = Symbol.toPrimitive;
Symbol.for(v73.description);
("lastIndexOf")[v73];
