function F1(a3, a4) {
    if (!new.target) { throw 'must be called with new'; }
    a3 % a3;
    const v6 = this.constructor;
    v6.bind(a3, F1, this, F1);
    try { new v6(); } catch (e) {}
}
const v12 = new WeakMap();
new Uint8Array(3521);
for (let i17 = 0; i17 < 10; i17++) {
    try { ("boolean").trimEnd(); } catch (e) {}
    try {
        const o25 = {
        };
    } catch(e26) {
    }
}
class C27 extends WeakMap {
    static c = 5.424099047330962e+307;
    static #b = 5.424099047330962e+307;
    #h;
    constructor(a29, a30) {
        super(v12);
        function F31(a33, a34) {
            if (!new.target) { throw 'must be called with new'; }
            const v35 = this.constructor;
            try { new v35(); } catch (e) {}
            this.c = a33;
        }
        try {
            v12.#b;
        } catch(e38) {
        }
        function F39() {
            if (!new.target) { throw 'must be called with new'; }
            try {
                new F39();
                /Ckza\Wb?/vis;
                /Ma\W+/gudm;
            } catch(e44) {
            }
        }
        new F39();
    }
    toString(a47) {
        let v46 = this;
        v46.e *= 1.6557865922985256e+308;
        v46 += v46;
        for (let v48 = 0; v48 < 10; v48++) {
            a47["p" + v48] = v48;
        }
        return 1.6557865922985256e+308;
    }
    1641 = v12;
    static 5 = 5.424099047330962e+307;
    static [1.6557865922985256e+308] = 705.9099056012099;
    f;
    [v12] = 1.6557865922985256e+308;
}
new C27(5.424099047330962e+307, 1.6557865922985256e+308);
new C27(705.9099056012099, 705.9099056012099);
new C27(1.6557865922985256e+308, 1.6557865922985256e+308);
[Uint8Array,Uint8Array];
function f62() {
    class C63 {
    }
    const v64 = new C63();
    const v65 = v64.constructor;
    const v66 = new v65(f62);
    const v67 = v66.constructor;
    const v68 = new v67();
    const v69 = v64.constructor;
    const v70 = new v69();
    const v71 = new v69(v67, f62, v70, v68, v65);
    const t74 = v71.constructor;
    const v73 = new t74();
    const t76 = v73.constructor;
    new t76();
    const v76 = new C63();
    const v77 = v76.constructor;
    const t80 = v77.valueOf(v77, v77, f62, v77);
    new t80();
    return v73;
}
class C80 {
}
C80 < "copyWithin";
