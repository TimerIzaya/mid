class C3 {
    static #h;
    constructor(a5) {
        function f6(a7) {
            const o8 = {
                3302984252: "a",
            };
            return o8;
        }
        f6(this);
        f6(a5);
        f6(this);
    }
    #b = "a";
    static d = 5;
}
const v12 = new C3("boolean");
const v13 = new C3(v12);
const v14 = new C3(C3);
function F15(a17, a18, a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a19;
    } catch(e21) {
    }
    try {
        this.e = a19;
    } catch(e22) {
    }
    try {
        this.a = 5;
    } catch(e23) {
    }
}
const v24 = new v14(v14, 5, C3, "a");
const v25 = new F15(v13, "a", v24, v14);
const v26 = new F15("a", C3, v25, v25);
[v24,v24,"a",5];
[[5],5];
function F30() {
    if (!new.target) { throw 'must be called with new'; }
}
const v32 = new F30();
const v33 = new F30();
function F34(a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    const v38 = this?.constructor;
    try { new v38(v38, F34); } catch (e) {}
    try { F15.constructor(); } catch (e) {}
    try {
        v32.h = v33;
    } catch(e41) {
    }
}
new F34(v32, v26);
