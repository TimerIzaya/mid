const v0 = [];
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = v0;
    } catch(e3) {
    }
    let v4 = 0;
    v4++;
    v0[v4] += v4;
    const o7 = {
    };
    new Proxy(this, o7);
    new Uint16Array(v0);
    Math.acosh(65535);
}
new F1();
const v15 = new F1();
const v16 = new F1();
v16.a = v16;
const v20 = new Float64Array();
const t21 = -37997n;
const v22 = new t21();
try {
    v20.reduce(v22);
} catch(e24) {
}
let v26 = 65537n;
const v27 = v26--;
7n == 7n;
class C33 {
}
F1.stack;
function f35() {
    return f35;
}
const v36 = new Int32Array();
const v38 = new BigInt64Array();
v38.BYTES_PER_ELEMENT = v38;
const v39 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
let v40;
try { v40 = v39.some(); } catch (e) {}
const v41 = [-1.7976931348623157e+308];
function f42() {
    const o50 = {
        ...1.7976931348623157e+308,
        [-2]: 1.7976931348623157e+308,
        __proto__: 256,
        [F1](a46) {
            0 < 10;
        },
    };
    return o50;
}
const v51 = f42();
class C52 extends f42 {
    3164398692 = v51;
    10000 = f42;
}
new C52();
function f54(a55, a56, a57, a58) {
    a57[0] = a57;
    const o66 = {
        toString(a60, a61, a62) {
            try { this.toString(a61, v40, a60); } catch (e) {}
            a61++;
            a57[a56] = a55;
        },
    };
    try { o66.toString(v39, o66, a58); } catch (e) {}
    return o66;
}
const v68 = f54(v38, 129, v41);
const v69 = f54(v36, 129, v39);
Symbol.toPrimitive;
new Uint8Array(1);
for (let v75 = 0; v75 < 5; v75++) {
    v69 % v68;
    v39.b = v36;
}
function F79(a81, a82) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a82;
    this.c = 1;
    this.a = a82;
    %VerifyType(a82);
    function F83(a85, a86, a87, a88) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.h = a88;
        } catch(e89) {
        }
    }
    const v90 = new F83(v27, 129, a82, v15);
    new F83(v90, 1, 1101204928n, v16);
    new F83(a82, 1, 9007199254740991n, v16);
}
