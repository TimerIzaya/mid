const v0 = [1.7976931348623157e+308,-7.740624351172684,0.7510755342830309,-2.220446049250313e-16,992176.0029714368,1.7976931348623157e+308,1000.0,-6.402650781458266e+307];
const v1 = [-721195.6363367317,-234493.5298248136,-881.6965013855021,-348933.63096079195];
const v2 = [2.0,2.0,2.4254801461937917e+307,1e-15,-2.7006683151841453e+307,3.9393461670380976,-1.7976931348623157e+308,-1.0];
function f3(a4, a5) {
    a4[0] = a4;
    const o17 = {
        "a": v2,
        ...a4,
        "e": v0,
        get c() {
            this[0];
            try { this.n(v1, this, a5, v1, this); } catch (e) {}
            return a4;
        },
        "f": f3,
        m(a10, a11) {
            super.f = a4;
            try {
                v2.f = a11;
            } catch(e12) {
            }
            let v13;
            try { v13 = new a5(a10); } catch (e) {}
            [this,v13,v1,v1,a11];
            [[v13,v0,a5,v13]];
            return a4;
        },
    };
    return o17;
}
f3(f3(v2, f3), f3);
const v20 = f3(v0, v1);
v20[7] = v20;
-(-1000000000000.0);
const v27 = -1073741824 + -1073741824;
v27 !== v27;
const v32 = new BigUint64Array(4);
try { v32.reduceRight(-2067838387); } catch (e) {}
const v36 = new BigUint64Array(14);
const v37 = v36[2];
try { Float64Array(BigUint64Array, Float64Array, BigUint64Array); } catch (e) {}
new Float64Array(1024);
-2147483648 & -2147483648;
const v45 = [];
try { v45.findLast(v45); } catch (e) {}
try { v45.findLastIndex(-2067838387); } catch (e) {}
class C48 {
    constructor(a50, a51) {
        let v52;
        try { v52 = this.toLocaleString(); } catch (e) {}
        v52[0] = v52;
        function f53() {
            return C48;
        }
        try { f53(); } catch (e) {}
        function f55(a56) {
            a56 >> a56;
            function F58(a60, a61, a62) {
                if (!new.target) { throw 'must be called with new'; }
            }
        }
        f55.length;
        try { f55(-2067383758); } catch (e) {}
        Object.defineProperty(this, -2147483648, { configurable: true, get: f53, set: f55 });
        this[-2147483648] >>>= -7;
        for (let v65 = 0; v65 < 25; v65++) {
        }
    }
}
const v66 = new C48();
try { v66.constructor(v66, v0); } catch (e) {}
const v68 = v66?.constructor;
let v69;
try { v69 = new v68(v36, f3); } catch (e) {}
const v70 = v69?.constructor;
try { new v70(-0.0, v37); } catch (e) {}
