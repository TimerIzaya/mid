new BigUint64Array(2197);
new Float64Array(200);
new Uint16Array(2579);
const v9 = /\p{Nd}\u0060*/gums;
/esexyz??/dis;
const v11 = /6/vims;
let v16 = new Map();
class C17 {
    [v16];
    constructor(a19, a20) {
        v16 += this;
        /a\fb\nc\rd\te\vf/gumsy;
        /((?!(a))\1Mja)/vy;
        /\p{Script_Extensions=Greek}/dims;
        Math.fround(-8);
        Math.tanh(1e-15);
        let v29 = v11 ^ 1e-15;
        !this;
        v29--;
        Math.floor(v11);
        const v33 = this?.constructor;
        try { new v33(); } catch (e) {}
        const v35 = /(?<!)/gv;
        v35.e = v35;
        const v36 = /(\xed\xb0\x80)\x01/gudmy;
        v36.c = v36;
        const v38 = Symbol.iterator;
        const o40 = {
            [v38]() {
            },
        };
    }
}
const v41 = new C17(Map, Map);
-3.881006246857699 in v41;
try { Float64Array(2579); } catch (e) {}
delete v9[2197];
const o47 = {
    "maxByteLength": 268435456,
};
const v49 = new ArrayBuffer(9, o47);
new BigInt64Array(v49);
const v52 = v41.constructor;
new v52();
function F54(a56, a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 2197;
    } catch(e59) {
    }
}
new F54(v52, v9, 268435456);
new F54(9, v11, 9);
new F54(v16, v52, 2579);
