const v0 = [1.0,1.2282246013488038e+308,0.5411349850032804,9.776876784422917,-0.18015290688845376];
const v1 = [-0.0,-3.0,0.06053993544088743,1e-15,-2.0];
let v2 = [2.805215723402295,-4.0233077387386256e+305];
[268435440,1874560156,-9,-65537,-50352,1985748289,10];
const v4 = [3,6];
const v5 = [-9007199254740992,-40459,-12,16,129,-2147483648,9,-1389197556];
class C6 {
    get e() {
        const v9 = (this / this)[1482688298];
        v2 *= v4;
        return v9;
    }
    set b(a11) {
        try {
            super.p(a11, v0);
        } catch(e13) {
        }
    }
    static [v0] = v0;
    [v1] = v1;
    static [v5];
}
new C6();
new v2();
new C6();
function F20(a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        a24.g = v1;
    } catch(e25) {
    }
    try {
        this.h = this;
    } catch(e26) {
    }
    try {
        this.f = v5;
    } catch(e27) {
    }
}
new F20(1073741825n, v2, 9007199254740990n);
new F20(2147483648n, v4, 1073741825n);
const v30 = new F20(9007199254740990n, v4, 1073741825n);
function F31() {
    if (!new.target) { throw 'must be called with new'; }
}
const v33 = new v30();
const v34 = new v2();
function F35(a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    const v39 = this?.constructor;
    try { new v39(v39, F35); } catch (e) {}
    try { this.constructor(); } catch (e) {}
    try {
        v33.h = v34;
    } catch(e42) {
    }
}
new F35(v33, F35);
