function f3() {
    return 40862;
}
function f5() {
    return f3;
}
3726 / 3726;
new BigUint64Array(3726, true, BigUint64Array.name, BigUint64Array);
new Int8Array(-2);
new Uint32Array(3);
function F20(a22, a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
}
function f26() {
    const v28 = new Uint8ClampedArray();
    return v28;
}
F20.valueOf = f26;
try { F20.valueOf(); } catch (e) {}
try { gc(); } catch (e) {}
const o33 = {
    "execution": "async",
};
const v34 = gc(o33);
function f35(a36) {
    new Int16Array(1670);
    new Uint16Array(9);
    const v45 = new Float32Array(8);
    return v45;
}
v34.constructor = f35;
/a\s[B{1z}(x)(x)(x)\2]/gdmy;
try { v34.finally(true); } catch (e) {}
v34.then(v34, F20);
