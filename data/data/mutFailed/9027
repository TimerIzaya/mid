const v0 = [-9.542397459459826,-1e-15,-3.0];
[0.4494465215529403,-274984.6069092436,NaN,4.0,0.8818476751967934];
const v2 = [-5.0,584974.3827929033,-449750.1313429604,-224613.57877127687,-4.4800098634650743e+307,1000000000000.0,-283796.13876827725,0.0,-694.7673099491913,0.013178129478269907];
function F4() {
    if (!new.target) { throw 'must be called with new'; }
    for (let v6 = 0; v6 < 32; v6++) {
        "p" + v6;
    }
}
const v9 = [0.0,1000.0,2.2250738585072014e-308,-7.579669032342973,1000000.0,-3.320832778713115e+307,-418604.6270540977,-1e-15];
const v10 = [-762139.197196924,-275.1292235605123,0.1637483311740212,0.7397911943313851,-1.7976931348623157e+308,-1000000000.0];
const v11 = [1.7133273154388284,649165.7143808734,-2.0,-1.7976931348623157e+308];
function F12(a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = v11;
    } catch(e16) {
    }
    try {
        this.d = a14;
    } catch(e17) {
        function f18() {
            return v9;
        }
        class C19 {
        }
    }
    try {
        this.g = a15;
    } catch(e20) {
    }
}
new F12(null, v9);
const v22 = new F12(null, v0);
const v23 = new F12(v10, v2);
v23.g;
[null,v23];
const v26 = [v10,v11,v11,v22];
[v11,v26];
const v28 = [-25552.232795396703,-1e-15,-4.0,4.0,-1000000000.0,Infinity,5.418706939384283e+306,3.0,-5.0,1.7434284636811316e+308];
try { v28.push(v28); } catch (e) {}
function F30(a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
}
function f34(a35, a36, a37) {
    return a37;
}
try { new Worker(); } catch (e) {}
const v41 = [Worker,F30,v28];
try { v41.values(); } catch (e) {}
const o43 = {
    "arguments": v41,
    "type": "function",
};
try {
    const o44 = {
    };
} catch(e45) {
}
const v46 = new Worker(f34, o43);
const v47 = v46?.constructor;
new Uint8Array(v47);
function f51() {
    -v26;
    return v10;
}
try { new v47(); } catch (e) {}
