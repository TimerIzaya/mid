[-1.7976931348623157e+308,530.866502677216,0.8177879702014579,8.761115022602624,0.0,-8.353236734349249,-1000000000.0,956011.4528475709,802731.3764239924];
[-4.0504401146314875e+307,-1000.0,0.33381627059470276,-185657.10870030336,1000.0,-0.0];
[-467.0490124140123,5.0,-474.7181496287718,-1.9910639883057003e+307,2.2250738585072014e-308,-3.0,1000000000000.0];
const v6 = [10000,257];
const v7 = [4294967295,-16,-2,7,-1399442761];
const v8 = [255,1737848962,-9007199254740990,-45412,1943672240,268435441,45067];
function f11(a12, a13) {
    const o16 = {
        "g": 1073741824,
        get d() {
            super[a12];
            return this;
        },
        "f": 3,
        ...a12,
        10: 1073741824,
    };
    return o16;
}
f11(f11);
const v20 = new BigInt64Array();
v20["flags"]();
new BigUint64Array();
const v24 = "b" + 127;
try { BigUint64Array(v8, v7, BigUint64Array); } catch (e) {}
const v27 = new BigUint64Array(127, "b");
v27.f >>>= 1;
Number.isFinite();
function f33(a34) {
    return a34;
}
new BigUint64Array(9);
64 | 64;
Array(2048);
f33();
function F43() {
    if (!new.target) { throw 'must be called with new'; }
}
new F43();
new Uint32Array(64);
new Uint32Array(/9f8\xf0\x9f\x92\xa9/diy["flags"]());
const v52 = new Uint16Array(Uint16Array);
new Int32Array(v52);
new Date();
const o58 = {
    __proto__: 127,
    [3.0]: v6,
};
v24.length;
const o61 = {
};
const o65 = {
    "h": BigUint64Array,
    __proto__: "number",
    "type": "number",
    10: 3853,
};
Int16Array.e = Int16Array;
const v66 = new Int16Array(3.0);
v66[1] = v66;
