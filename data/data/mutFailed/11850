function F5(a7, a8) {
    if (!new.target) { throw 'must be called with new'; }
    const v9 = this?.constructor;
    try { new v9("a", "a"); } catch (e) {}
    try {
    } catch(e11) {
    }
    try {
    } catch(e12) {
    }
    try {
    } catch(e13) {
    }
}
new F5("a", "-2147483648");
new F5("-2147483648", "yRMy");
function F16(a18, a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e21) {
    }
}
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
}
9 === 9;
Math.__defineSetter__;
let v35;
try {
const t0 = "a";
v35 = t0();
} catch (e) {}
const o43 = {
    m(a37, a38, a39, a40) {
        a40[Symbol.toStringTag] = a40;
        return a40;
    },
};
let v44;
try { v44 = o43.m(o43); } catch (e) {}
const v45 = -4294967297 >> -4294967297;
class C47 {
    b;
    1;
    #f;
    static {
        new ArrayBuffer(ArrayBuffer, ArrayBuffer);
        Math.log1p(5.712452742881646e+307);
        this[v45] &&= -64493;
        try {
            this.#f = v44;
        } catch(e54) {
            e54.e = e54;
        }
    }
    [9] = -4294967297;
    static 5;
}
C47.f = C47;
new o43();
new C47();
new C47();
const v59 = v35.now();
v59 - v59;
