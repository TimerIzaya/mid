const v2 = new Int16Array(3871);
const v5 = new Uint8ClampedArray(Uint8ClampedArray);
const v8 = new BigInt64Array(3871);
const v9 = /(\1a)/m;
const v10 = /Gfoo(?<=bar)baz+/gvdis;
/ip\P{scx=Greek}A/gudmsy;
const v14 = new BigUint64Array(4096);
new Uint32Array(1987);
new Uint8ClampedArray(9);
new Set();
for (let i25 = 0; i25 < 6; i25++) {
    const t11 = delete v5?.buffer;
    const v32 = delete t11?.f;
    i25 <= v32 ? i25 : v32;
}
function F36() {
    if (!new.target) { throw 'must be called with new'; }
    const v38 = v8.constructor;
    let v40 = -16n;
    function f41() {
        v40 *= -1911645276n;
        return f41;
    }
    f41();
    new v38(f41, f41());
}
v9[Set] = 9;
const o48 = {
    "execution": "async",
    "type": "major",
};
gc(o48);
const v50 = new Float64Array(80);
const v53 = /[abc+]/gvdim;
const v54 = v53.sticky;
const v55 = [v53,v53,v10,v53];
const v56 = /ka{0}/guims;
function f57(a58, a59) {
    const o60 = {
        ...v56,
        "d": v55,
        "c": a59,
        "g": a59,
        "f": v55,
        "b": v54,
        "a": a59,
    };
    return f57;
}
const v61 = f57(v55, v53);
new Int16Array(257);
let v66;
try { v66 = ("2147483648").link("2147483648"); } catch (e) {}
try { Uint8ClampedArray.normalize(); } catch (e) {}
try { v66.filter(257); } catch (e) {}
const v70 = new Int32Array(v2);
[v70,Int16Array,80,Float64Array];
const v72 = [2180];
[v72,v72,Float64Array,v50];
function f74() {
    function f75(a76, a77) {
        return f75;
    }
    const v79 = new Promise(f75);
    v79.then(f75);
    v79.then();
    return f74;
}
const o82 = {
    "h": v55,
};
Object.defineProperty("2147483648", v50, { configurable: true, get: f74, set: v61 });
v14[2180] = v8;
%PrepareFunctionForOptimization("2147483648");
f74();
%OptimizeFunctionOnNextCall(f74);
f74();
