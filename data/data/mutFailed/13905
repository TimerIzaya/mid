let v1 = "symbol";
let v2 = -53474;
class C3 {
    static get b() {
        v1[this] = v1;
        super.d = this;
        typeof this === "boolean";
        return -256;
    }
    [v2];
    constructor(a9) {
        [] = v1;
        [] = v1;
        const v10 = v1[v2];
        a9 /= a9;
        super.a = v1;
        v10[v1] = this;
        ({"c":v2,"e":v1,"f":v1,...v1} = v10);
    }
}
const v11 = new C3(C3);
new C3(v11);
const v13 = new C3(v1);
class C14 {
}
C14 < "copyWithin";
function F23(a25, a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a26;
    } catch(e29) {
    }
    try {
        this.h = C3;
    } catch(e30) {
    }
}
new F23(v2, -256, v11, v11);
const v32 = new F23(F23, 268435440, v11, v11);
new F23(50162, 268435440, v13, v32);
function f34(a35, a36) {
    function f37() {
        return f34;
    }
    Object.defineProperty(a35, "toString", { configurable: true, get: f37 });
    return a36;
}
f34(f34);
f34(f34);
