class C3 {
    constructor(a5, a6) {
        function f7(a8, a9) {
            this.constructor;
            1073741824 & 1073741824;
            return -4.0;
        }
        this.valueOf = f7;
        function f13() {
            return f7;
        }
        Object.defineProperty(a6, "toString", { get: f13 });
        a6 & a6;
        const v15 = a5?.[this];
        try { a6(a6, v15, -128); } catch (e) {}
        2n <= 2n;
    }
    c = -128;
    static #n(a22) {
        const o23 = {
        };
        try {
            o23.c = this;
        } catch(e24) {
        }
        try {
            const o25 = {
            };
            o25.c = this;
            o25.h = -128;
        } catch(e26) {
        }
        try {
            const o27 = {
            };
            o27.c = this;
            o27.h = -128;
            o27.d = this;
        } catch(e28) {
        }
        try {
            const o29 = {
            };
            o29.c = this;
            o29.h = -128;
            o29.a = this;
        } catch(e30) {
        }
        return a22;
    }
}
function f31(a32) {
    const v33 = C3.Realm;
    v33.dispose;
    return v33;
}
C3.constructor = f31;
const v35 = C3?.constructor;
let v36;
try { v36 = new v35(C3); } catch (e) {}
const v37 = new C3(C3, -4.0);
const v38 = new C3(v37, -4.0);
function f39() {
    return f31;
}
function f40(a41) {
    const v46 = v35 * 255;
    v36 + 3.0;
    v36 || v46;
}
Object.defineProperty(v38, "valueOf", { get: f39, set: f40 });
const v49 = v38?.constructor;
try { new v49(C3, v38); } catch (e) {}
const v51 = new C3(v38, v38);
const v52 = v51?.constructor;
try { new v52(v37, v51); } catch (e) {}
1000 <= 1000;
-1024 * -1024;
const v63 = new Uint8ClampedArray(9);
v63.g = v63;
new Int16Array(10);
new Uint16Array(106);
/[UMa\fb\nc\rd\te\vf]/udms;
try { ("compile").blink(); } catch (e) {}
