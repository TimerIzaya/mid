function f0() {
    const o6 = {
        "d": "-17015",
        "g": 268435439,
        6: 268435439,
        get b() {
            try {
                this.g = this;
            } catch(e5) {
            }
            return this;
        },
    };
    function f7() {
        /ba\fb\nc\rd\te\vf/vimsy;
        return f7;
    }
    try {
        f7();
    } catch(e22) {
    }
    return o6;
}
f0();
const v24 = f0();
f0();
("undefined").localeCompare("undefined", "3", "undefined");
function f34() {
    "Vre" == "Vre";
    return f34;
}
f34();
new BigInt64Array(3445);
new RangeError(1024);
new Int16Array(3919);
const v48 = Float32Array.length;
class C50 {
}
const v51 = new C50();
class C52 {
    static g = v51;
    static {
        delete this.g;
    }
}
try { C52.bind(v51); } catch (e) {}
const v59 = Symbol("bZ", v24);
[Float32Array];
function f62() {
}
[[f62,f62],f62];
try { ("5").split(127, v59); } catch (e) {}
const v73 = new Array(228);
class C74 {
    static {
        function F76(a78, a79) {
            if (!new.target) { throw 'must be called with new'; }
            const v80 = this?.constructor;
            try { new v80("yi", v48); } catch (e) {}
        }
        new F76(v73, this);
        new F76(Array, F76);
    }
}
try {
} catch(e84) {
}
let v85 = 0;
do {
    v85++;
} while ((() => {
        const v88 = v85 < 9;
        const v91 = new Uint8ClampedArray(1907);
        v91[0] = 43464885;
        return v88;
    })())
