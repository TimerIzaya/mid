[];
const v1 = [4096,37886];
[1073741823,5,1124100743];
[-13];
gc(9.539186113716877e+307);
const v13 = new Function(2);
new AggregateError(v13, 2007408104n, v1, 4096n, 797.5572046524887);
function f18() {
    const v19 = `
    `;
    ([Float32Array])["concat"]();
    return undefined;
}
function f24(a25, a26) {
    gc.atan2(gc, f24);
    return f24;
}
new Promise(f24, 2007408104n, 797.5572046524887);
const v32 = ([,]).group(f18);
class C33 {
}
function F34(a36, a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    a36 >>> a36;
    a37 - a37;
    -a38;
    const v42 = this.constructor;
    try { new v42(a38, C33); } catch (e) {}
}
v32.a = v32;
["I"];
function f46() {
    return f46;
}
const v48 = new Int16Array();
v48.filter(f46);
