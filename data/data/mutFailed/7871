const v0 = [14,9007199254740992,-2,56318,268435440,-1,-57848,535957124];
const v1 = [4,8,1310194205];
const v2 = [12,-552065122];
[7555,523060333,256,1562531752,-19821,9007199254740991,-3,0,1013714234];
const v4 = [-10,-65536,512,-11850,-128,10,1,9223372036854775807,114915857,39630];
const v5 = [10000,-65535,0,-5650664,8,8,268435440,-565729071,-765692852,129];
function f6() {
    return v0;
}
class C7 extends f6 {
    static get h() {
        function f9() {
            arguments instanceof f6;
            return arguments;
        }
        f9(f9, f9, f9);
        return this;
    }
    [v1] = v5;
    static [v2] = f6;
    #a;
    5;
}
new C7();
new v4();
new C7();
/O(a\1)+/gvdmy;
/e/gdmy;
/Bk2/gdmy;
const v22 = [-1440504730,15059,-128,65536,33714,-51192,-268435456,37915];
[10000,-13,1073741825,1602065818,65536,16];
const v24 = [9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
try { v24.sort(v24); } catch (e) {}
[901134577,512,16,-13797,-1644674640,-4];
function F27(a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    const v31 = this?.constructor;
    try { new v31(v31, a30); } catch (e) {}
    this.c = a29;
}
new F27(F27, F27);
const v34 = new F27(18074, 28602970);
v34.b = v34;
const v35 = new F27(18074, 18074);
new F27(v0, 28602970);
new Uint8Array(v24, v35, 201);
new Uint8Array(268435440);
Uint8ClampedArray.b = Uint8ClampedArray;
v24[6] = F27;
v22.__proto__;
new Uint8ClampedArray(129);
(1000).lastIndexOf();
