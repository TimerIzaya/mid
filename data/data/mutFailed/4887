function f0() {
}
class C4 {
    valueOf(a6) {
        try {
            f0();
        } catch(e8) {
        }
        return this;
    }
    static {
        this.length = this;
        this[2769597849] = this;
        try {
            this.length = 1;
        } catch(e11) {
        }
    }
}
new C4();
const v13 = new C4();
const v14 = v13?.constructor;
try { new v14(); } catch (e) {}
new C4();
const v17 = [1918646213,-4294967296,621719820,-1266287062,-16,9007199254740990,-1073741824,-2147483648,5,1024];
[871134084,-36561,5,-1,4294967296];
[5446,9,-9,6529];
[-3.8605023531436338,1000000.0,0.7554357075872085,-5.355373064713385,-1000000000.0,-4.0,5.866877237178829e+307,2.2250738585072014e-308];
([Infinity,1000000000.0,NaN,2.220446049250313e-16,9.482037153001748,-1000.0])[3];
[1.0845227255478667e+308,5.0,-567668.3225691885,1.0,580930.443597048,4.8679168603622855,2.220446049250313e-16,Infinity];
const v25 = new Set();
try { v25.add(v17); } catch (e) {}
function F27(a29, a30, a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    eval();
    function F35(a37) {
        if (!new.target) { throw 'must be called with new'; }
    }
    new F35();
}
F27.e = F27;
try { gc(); } catch (e) {}
const o41 = {
};
o41.h = o41;
gc(o41);
