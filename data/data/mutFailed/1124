new Map();
gc();
const v7 = new Date(Date);
function F8(a10) {
    if (!new.target) { throw 'must be called with new'; }
    const v11 = this.constructor;
    try { new v11(); } catch (e) {}
    this.f = v7;
}
Set.g = Set;
-1000 ** 0.544190430081408;
[-1.7976931348623157e+308,-613.7550152041111] ^ -1264607604;
new Set();
new Uint16Array(1017);
const v24 = /a\w/gudsy;
const v25 = /ka{0}/guims;
const v26 = /ab|c/udmy;
class C27 {
}
const v28 = new C27();
const v29 = new C27();
function f30(a31, a32) {
    const o33 = {
        ...v25,
        "d": v29,
        "c": a32,
        "g": a32,
        "f": a31,
        "a": v28,
        7: C27,
        __proto__: C27,
        "e": v25,
        "b": v24,
    };
    return o33;
}
f30(v26);
-2 | -2;
class C39 extends Map {
    4294967295;
    get e() {
        ~-7673;
    }
    #n(a46, a47) {
        let [v48,v49,,v50] = this;
        const o54 = {
            "execution": "sync",
            "type": "minor",
        };
        return gc(o54);
    }
    [9131];
}
const v56 = new C39();
v56[4294967295] = v56;
const v57 = new C39();
v57[4294967295] = v57;
new C39();
function f59() {
    return 9131;
}
const v60 = f59?.constructor;
try { new v60(v56); } catch (e) {}
[-1000.0,-2.220446049250313e-16,-990.2039349660698,-1000000000000.0,0.10499857858689488,-700.7492080781918,-1000000000000.0,-1.1968850321681233e+308,-644584.7286188293];
[-3.0,1000000000000.0,0.9131679499909916,-6.286998280196821,-2.2250738585072014e-308,-Infinity,3.0,-8.51666506743556,-3.0,4.0];
class C64 {
    e;
}
new Int8Array(129);
([3.0])[0];
const v70 = [];
const v71 = v70?.keys;
try { new v71(); } catch (e) {}
v70[Symbol.isConcatSpreadable] = v57;
const v76 = v70["concat"]("concat");
try { v76.map(Map); } catch (e) {}
