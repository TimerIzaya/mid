class C3 {
    constructor(a5) {
        const o8 = {
            "maxByteLength": 171,
        };
        4 >>> 4;
        const v11 = new SharedArrayBuffer(4, o8);
        v11.byteLength = v11;
        new Int32Array(v11);
    }
}
try { C3.apply(80.90975922754455, "n"); } catch (e) {}
const v15 = new C3("n");
const v16 = v15?.constructor;
try { new v16(v15); } catch (e) {}
const v18 = new C3(C3);
const v19 = v18?.constructor;
try { new v19("n"); } catch (e) {}
new C3(2.2250738585072014e-308);
function F25() {
    if (!new.target) { throw 'must be called with new'; }
    const v27 = this?.constructor;
    try { new v27(); } catch (e) {}
    19793 * 19793;
    try {
        const v32 = Array(19793);
        for (const v33 of v32) {
        }
        const v34 = [v32,v32,v32,v32,v32];
        const v35 = [v34,v34,v34];
        try { v35.reduceRight(2.2250738585072014e-308); } catch (e) {}
        const v37 = [v35];
        try { Uint16Array.of(); } catch (e) {}
        v37 >= Uint16Array;
    } catch(e41) {
    }
}
new F25();
const v43 = new F25();
v43.length;
