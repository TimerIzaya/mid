const v0 = [642650041,2147483649,256,536870912,129];
const v1 = [-1020878712,1000,1024];
const v2 = [141870074];
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v0;
    } catch(e7) {
    }
}
new F3(v2, v2);
new F3(v1, v0);
new F3(v1, v0);
/[z-\d]/gds;
const v12 = /v90/vms;
/a\u0034*/gmy;
let v14 = [0.40942238360349337,9.405201967735488e+306,-914.634335773701,5.134124740041841,-1.0,1000000000000.0,-5.0,-298.5783868000192,1000000.0];
const v16 = new Int32Array();
Date.UTC(268435456, v16, v14 %= v12);
[8.130323948768876e+307,0.13118020373782313,2.0,0.07170735392266747,440076.399542809,2.0,-7.501710709942926];
[-2.2250738585072014e-308,0.5738099096163881,-6.050788732406649,-748485.3403416045,-248.01172067785274,2.220446049250313e-16,-3.0];
[Infinity,2.0,0.37830669126813865,-1.7976931348623157e+308,-1000000000000.0,5.72980015516675,2.8597703815120277e+307];
new Uint32Array(64);
new BigUint64Array(4);
new Int32Array(1024);
const v32 = [];
function f36(a37, a38) {
    v0 >> a38;
    const v40 = -256 >>> a38;
    v40 / v40;
    return -256;
}
f36(v32, -256);
function f46() {
    return -4294967296;
}
f46.arguments;
let v50 = Infinity;
function F51(a53, a54, a55, a56) {
    if (!new.target) { throw 'must be called with new'; }
    const v57 = this?.constructor;
    try { new v57(a53, -1.0, a56, a56); } catch (e) {}
    1024 - a54;
    a56 ^ a56;
    try {
        this.g = a55;
    } catch(e61) {
    }
    try {
        try {
            new f46();
        } catch(e63) {
        }
        try {
            v32.fill(-65537n);
        } catch(e65) {
        }
        this.b = -65537n;
    } catch(e66) {
    }
}
let v67;
try { v67 = new F51(v32, v32, v50, -4294967296); } catch (e) {}
function f68(a69, a70, a71, a72) {
    a70.length;
    v50 = a72;
    const o74 = {
        "apply": f36,
    };
    try { o74.apply(a70, a71); } catch (e) {}
    new Proxy(v32, o74);
    return o74;
}
f68(925338382n, F51, 6n, 925338382n);
const v79 = new F51(-116242.81512445165, -65537n, 6n, 6n);
const v80 = new F51(v79, -65537n, 925338382n, -65537n);
v80.b = v80;
new F51(F51, 925338382n, -65537n, -65537n);
Uint8ClampedArray.prototype = v67;
const v84 = new v80(3);
class C85 {
    constructor(a87, a88, a89, a90) {
        const v91 = this?.constructor;
        try { new v91(a90, this, v84, a90); } catch (e) {}
        for (let v93 = 0; v93 < 5; v93++) {
            v93 % this;
        }
    }
}
C85.name;
const v96 = new C85();
v96.length = v96;
