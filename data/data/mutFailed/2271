let v3;
try {
const t0 = "64";
v3 = new t0(1945212525);
} catch (e) {}
const o6 = {
    "maxByteLength": 64,
};
const v8 = new SharedArrayBuffer(64, o6);
new Int16Array(v8);
class C11 {
    static {
        const v13 = -1e-15 >>> -1e-15;
        delete this?.f;
        super[v8] = v13;
        for (let v15 = 0; v15 < 32; v15++) {
            v3["p" + v15] = v15;
        }
        if (this) {
        } else {
            this && this;
        }
        const v20 = delete this[2904769270];
        let v21;
        try { v21 = this(this, this, v20, v20, v20, 1945212525, 1945212525); } catch (e) {}
        super.g **= v21;
    }
    #e = -1e-15;
    #h = "64";
    [-1e-15];
    static #b = "64";
    a;
}
new C11();
new C11();
new C11();
/(?!(a))\1/udi;
/(?:a?)+/gvds;
/a$/gum;
new Int32Array(13);
new BigInt64Array(3);
new Uint8ClampedArray(207);
-256n >> -256n;
