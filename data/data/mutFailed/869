const v3 = [65537,9645,24399,-4];
const v4 = [5,11,45901,65535];
v4.g = v4;
const v5 = [1,57143,512,11];
let v6;
try { v6 = v5.fill(v5); } catch (e) {}
try { v6.findLast(v6); } catch (e) {}
function F8(a10, a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    const v14 = this?.__lookupSetter__;
    try { new v14(a13); } catch (e) {}
    a10[2] = a10;
    a13++;
    try { a12.toLocaleString(); } catch (e) {}
    try { a11.unshift(v4); } catch (e) {}
    try { a12.map(a12); } catch (e) {}
    a13 << a13;
    this.b = this;
    const v21 = this?.__defineSetter__;
    try { new v21(v6, this); } catch (e) {}
    try { new v21(a13, a13); } catch (e) {}
    try {
        this.f = a10;
    } catch(e24) {
    }
    try {
        this.e = -9007199254740990;
    } catch(e25) {
    }
    try {
        this.b = a12;
    } catch(e26) {
    }
}
const v27 = F8?.constructor;
try { new v27(v4); } catch (e) {}
const v29 = new F8(v5, v4, v4, -12);
v29.f = v29;
const v30 = new F8(v3, v5, -9007199254740990, 9);
v30.b = v30;
const v31 = new F8(v4, v5, F8, -12);
const v32 = v31?.b;
try { new v32(v6, v6, v31, v30); } catch (e) {}
const v34 = v31.f;
try { v34.lastIndexOf(v30); } catch (e) {}
try { ("4294967296").toLocaleUpperCase(); } catch (e) {}
try { ("object").bold(); } catch (e) {}
function f41(a42, a43) {
    try { a42.map(a42); } catch (e) {}
    a43++;
    a43 ^ a43;
    a42[1] = a42;
    const o50 = {
        ...v3,
        "e": a43,
        __proto__: v29,
        ["4294967296"]: "object",
        "b": v31,
        "f": v30,
        get c() {
            try {
                a42.toString = this;
            } catch(e48) {
            }
            try { a42.map(v6, v4); } catch (e) {}
            return F8;
        },
        "d": -9007199254740990,
    };
    o50.b;
    return o50;
}
f41(v5, 9);
f41(v4, -12);
const v54 = f41(v3, -12);
v54.f = v54;
v54[1];
const v57 = [,];
const v58 = [,v57,v57];
let v59;
try { v59 = v58.values(); } catch (e) {}
try { v59.next(); } catch (e) {}
const v61 = [,v57];
try { v61.fill("4294967296"); } catch (e) {}
v61[0] = v59;
v61.g = v61;
class C63 {
    [v61] = undefined;
}
const v64 = new C63();
function f65() {
    const v67 = [Reflect,Reflect,Reflect,Reflect,Reflect];
    v67.g = v67;
    return -12;
}
try { f65.call(F8); } catch (e) {}
f65.arguments = f65;
v64.constructor = f65;
const v69 = v64?.constructor;
v69.d = v69;
v69.length;
let v71;
try { v71 = new v69(); } catch (e) {}
try { v71.constructor(); } catch (e) {}
const v73 = new v6();
try { v73.constructor(); } catch (e) {}
const v75 = v73?.constructor;
try { v75.bind(v73); } catch (e) {}
try { new v75(); } catch (e) {}
const v78 = v73?.constructor;
try { new v78(); } catch (e) {}
const v80 = v78?.constructor;
v80.length = v80;
try { new v80(v30); } catch (e) {}
let v82;
try { v82 = new v78(); } catch (e) {}
const v83 = v82?.toLocaleString;
const v84 = v83?.constructor;
try { new v84(v64); } catch (e) {}
try { new v83(); } catch (e) {}
const v87 = [13,-3,1073741824,4294967295,-910142687];
v87[3] = v87;
const v88 = [692069130,-8,-65208,65536,-48837,1766141532,256,-65537,32577,-24320];
try { v88.values(); } catch (e) {}
ArrayBuffer.prototype = ArrayBuffer;
const v92 = 1073741825 >>> 1073741825;
v92 << v92;
const o94 = {
    "maxByteLength": 1073741825,
};
const v96 = new ArrayBuffer(512, o94);
v96.resizable;
new Int16Array(v96);
v96[v57] = v87;
