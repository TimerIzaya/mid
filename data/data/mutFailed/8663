new WeakSet();
new BigInt64Array("0L");
new Uint8Array(4);
Int8Array.d = 1210;
new Int8Array(213);
new Array(5);
BigInt64Array.BYTES_PER_ELEMENT;
const v23 = new BigInt64Array(257);
try { v23.join(64); } catch (e) {}
257 != 1590;
new BigInt64Array(1590);
BigInt64Array.name = BigInt64Array;
new BigInt64Array(9);
536870888 / 536870888;
function f36() {
    return -2147483648;
}
function F37(a39) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "constructor", { writable: true, value: f36 });
    const v40 = this?.constructor;
    try { new v40(a39); } catch (e) {}
    try {
        this.f = 145253519;
    } catch(e42) {
    }
}
const t27 = 213;
new t27();
-65106n ^ -65106n;
Int8Array.d = Int8Array;
const o49 = {
    "execution": "async",
};
o49.execution;
gc(o49);
