function f3(a4) {
    const o16 = {
        valueOf(a6) {
            let v5 = this;
            v5 |= v5;
            return -596376.7058071478;
        },
        "f": -5392n,
        get d() {
            const o14 = {
                "execution": "sync",
                "type": "major",
            };
            gc(o14);
            return -5392n;
        },
    };
    return o16;
}
f3(-9223372036854775808n);
f3(-5392n);
f3(2011603960n);
new WeakSet();
const v26 = [4096,-1746469487,11136,1024,127,-994764255,273312477,9007199254740992,6,8];
const v27 = [3,38004,-14,8963,1024,9007199254740991,-11,-9223372036854775807];
const v28 = [2147483648,-12,9007199254740991,19830];
function f29() {
}
new Int8Array();
new isNaN(1000);
const v38 = new Uint8Array(58);
function F39() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        delete v27?.length;
        class C48 extends Uint16Array {
        }
        const v49 = f29();
        const v50 = Array(19793);
        for (const v51 of v50) {
            break;
            const v52 = this.e;
            Object.defineProperty(v50, "length", { configurable: true, enumerable: true, value: v49 });
            v52 ^ v26;
            new Array(9);
        }
        const v57 = [v50,v50,v50];
        new this();
        const v61 = [];
        for (let v62 = 0; v62 < 32; v62++) {
            this["p" + v62] = v62;
        }
        for (let v65 = 0; v65 < 50; v65++) {
        }
        v61[65536] %= 256;
        [v57,v57,v57];
        [v38,v28,4294967296n] >= Uint16Array;
    } catch(e70) {
    }
}
new F39();
new F39();
