new BigInt64Array(36);
const v8 = new Uint8Array(127);
class C10 {
    constructor(a12) {
        const v13 = this.constructor;
        try { new v13(); } catch (e) {}
        const v16 = new Float32Array();
        v16.entries();
    }
}
function f18(a19) {
    const o23 = {
        "maxByteLength": 21,
    };
    const v25 = new ArrayBuffer(21, o23);
    new BigUint64Array(v25);
    return BigInt64Array;
}
C10.toString = f18;
function f28() {
    Symbol.toPrimitive.description.codePointAt(C10);
    return Symbol;
}
f28();
%OptimizeFunctionOnNextCall(f28);
const v35 = new Int8Array(BigInt64Array);
function* f37(a38, a39) {
    let [v40,v41,v42,...v43] = v8;
    yield v35;
    return v43;
}
let v45 = 268435439;
v45--;
function f47() {
    class C49 {
    }
    try { new f47(); } catch (e) {}
    const v51 = new C49();
    const v52 = v51?.constructor;
    try { new v52(); } catch (e) {}
    v51[3.4890473589784586e+307] = v45;
    const o54 = {
        "call": f47,
    };
    class C55 extends C49 {
        #a;
    }
    C55.b = C55;
    C55.g = C55;
    for (let i = 0; i < 5; i++) {
        new Date();
    }
    return v45;
}
f37(325.0834377256633, 325.0834377256633);
gc();
