new Int16Array(1269);
function F8(a10, a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
}
const v13 = new F8();
function f14(a15, a16, a17, a18) {
    try { a15(v13); } catch (e) {}
    try { a17(); } catch (e) {}
    const o24 = {
        n(a22, a23) {
            return a18;
        },
    };
    return a18;
}
for (let v25 = 0; v25 < 500; v25++) {
    const t16 = -2.2250738585072014e-308;
    t16();
}
[1000000.0,-1.7976931348623157e+308,-1000000.0,9.247707303518284e+307];
const v31 = new Map();
const v32 = v31.delete(v31);
function F33(a35, a36, a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = Date;
}
const v39 = new F33();
const t27 = v39.c;
new t27(v32, Map);
[-1000000000000.0,-1000000000.0,-3.0,5.0,1000000000.0,1.0,1000000.0,-4.0,361.19877989117117,-246.63254975852783];
[-2.2250738585072014e-308,0.3144025224562942,1000000.0];
[2.220446049250313e-16,1000000000000.0,2.0376398325383244e+307,0.0,-768.2446471947968];
[2.7997433284725144,1.292845711106942,604.0527048630654,Infinity,0.852187589745308,0.977200547921346,4.0,-1.7976931348623157e+308,-795.1210830122375,-629566.2368494796];
function f47(a48, a49, a50, a51) {
    const v52 = a49 >>> a49;
    const v53 = v52 >>> v52;
    const v54 = v53 != v53;
    for (let v55 = 0; v55 < 5; v55++) {
    }
    const o56 = {
    };
    o56.b = 5n;
    o56.b = v54;
    return a50;
}
f47();
[-611.5012294764763,1e-15,-2.2250738585072014e-308,1e-15,1000000000.0,1000000000.0,0.5624263360242577,0.1338108722301471,-2.0,-736.195628491346];
function F60(a62, a63, a64, a65) {
    if (!new.target) { throw 'must be called with new'; }
}
new F60(F60, F60, F60, F60);
const v68 = new BigUint64Array();
class C69 {
}
function f70(a71, a72) {
    let v74 = 0.0;
    class C76 {
        #a = "9";
        65536;
        static h = v74;
        constructor(a78, a79) {
        }
    }
    class C80 {
        #e = C76;
        valueOf(a82, a83, a84) {
            super.f;
        }
        constructor(a87, a88, a89) {
            v74 **= v74;
            try {
            } catch(e90) {
            }
        }
    }
    const v91 = new C80("boolean", v68);
    const v92 = new C80("boolean", v91);
    const v93 = new C80(v92);
    try {
        v93[-55848n];
    } catch(e95) {
        function F96(a98, a99, a100, a101) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = e95;
            } catch(e102) {
            }
            try {
                this.b = 5n;
            } catch(e103) {
            }
            try {
            } catch(e104) {
            }
        }
    } finally {
        [] = v68;
    }
    function f105(a106) {
        return arguments;
    }
    f105(f70, a71, a71, a72);
    const o109 = {
        ...a71,
    };
    return o109;
}
f70();
f70(-1000000000.0, C69);
