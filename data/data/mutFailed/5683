let v5 = new Float64Array(3);
v5 ^= this;
[0.26414181741596765,-952275.7192307188];
[0.9847708673527913,-2.220446049250313e-16,Infinity,-5.197414490047687e+307,-437.44826154500686,-2.220446049250313e-16];
[-3.601949789089895,-1.7206982940143347e+308,1.0,-2.0,862216.3540033584,1.0,Infinity];
new Int8Array(1073741823);
Math.exp(-359.60295377780096);
new BigInt64Array(7);
new Int32Array(2);
const v25 = new SharedArrayBuffer();
for (let [v26,v27] of v25) {
}
const o32 = {
    [0.490851131893864]: -48490,
    set h(a31) {
    },
};
o32[4096] >>>= 4096;
new Float64Array(9);
Math.sinh(-3.3474037991793697);
const v40 = [-Infinity,0.32846642868810805,522897.9759496555,-Infinity,-1.7976931348623157e+308,Infinity,-91739.17504563625,-5.712078980390993,-4.0,-362.4687316307243];
function f41(a42, a43, a44) {
    a42[2];
    a43 << a43;
    let v47;
    try { v47 = a42.lastIndexOf(v40); } catch (e) {}
    v47 / v47;
    try { a44.toString(); } catch (e) {}
    const o50 = {
        [-4096]: -8717,
        "d": a43,
        __proto__: v40,
        "a": a42,
        "f": a42,
        "h": a44,
        "g": a44,
        "e": a43,
        1073741823: a43,
        "b": a42,
    };
    return o50;
}
const v51 = [127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649];
const v55 = new Int16Array(4);
try { BigUint64Array.from(v55); } catch (e) {}
const v60 = new Uint8ClampedArray(v51.toSpliced(-1148418937, -1148418937));
v60.lastIndexOf(-1148418937);
