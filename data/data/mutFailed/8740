const v2 = new BigInt64Array(217);
let v4 = Uint8ClampedArray;
new v4(154);
const v8 = new Int8Array(734);
class C9 {
    o(a11, a12) {
        super.d = v2;
        v4 |= a12;
        %VerifyType(this.a);
        return 154;
    }
    toString(a15, a16, a17) {
        try { new Int8Array(this, 217, a16, ...BigInt64Array, this); } catch (e) {}
        const v19 = a15 || v2;
        v2.buffer;
        const v23 = -(-2103205164);
        -2103205164 >>> (-2103205164 + -2103205164);
        function f26(a27, a28, a29) {
            return a27 / a29;
        }
        f26(v2, -2103205164, v19);
        C9 | -2103205164;
        return v23;
    }
}
const t25 = 217;
const v33 = new t25();
new C9();
new C9();
class C36 {
    n(a38, a39, a40) {
        const o44 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o44);
        return a38;
    }
    a = v33;
    static g = 154;
    static 6 = 217;
    static h = BigInt64Array;
}
const v46 = new C36();
new C36();
const v48 = new C36();
const v53 = C36[16] || v4;
let {"a":v54,"b":v55,"g":v56,} = v48;
4096 % v46;
const o58 = {
};
try {
    o58.f = 1635;
    for (let i60 = 0; i60 < 3; i60++) {
        function f66() {
            return i60;
        }
    }
} catch(e67) {
}
try {
    const o68 = {
    };
    o68.f = 1635;
    if (v55) {
        try {
            v8.toString = v56;
        } catch(e69) {
        }
    } else {
        o68 in o68;
    }
    o68.e = v33;
} catch(e71) {
}
try {
    const o72 = {
    };
    o72.f = 1635;
    o72.e = v33;
    o72.c = v53;
} catch(e73) {
}
try {
    const o74 = {
    };
    o74.f = 1635;
    o74.e = v33;
    o74.c = Uint16Array;
} catch(e75) {
}
function f79(a80, a81, a82) {
    (a82 && v4) instanceof C9;
    try {
        const t94 = "log1p";
        t94.g = v33;
    } catch(e86) {
    }
    class C87 {
    }
    if ("log1p") {
        try { C87.m(); } catch (e) {}
    }
    return Uint16Array;
}
