function f0() {
}
const v2 = new Uint8Array(Uint8Array, Uint8Array);
v2[Math.atan2(-988.8649474800335, 10000)] = 10000;
class C7 {
    [v2] = v2;
    8;
    constructor(a9, a10, a11) {
        super(a11);
    }
    p() {
        delete this[this];
        try {
            new f0();
        } catch(e15) {
        }
        return this;
    }
    /*
    constructor() {
        [-650319787,-1117791334,4294967297,9,1313768360,-14,5,-268435456];
        const v18 = [-128,4294967295,268435440,-972552860];
        [-65537,536870912,0,3353,-1999972312,-1];
        1000 >>> 1000;
        const v24 = [1000,f0];
        const v25 = v24?.groupToMap;
        try { new v25(1000); } catch (e) {}
        [f0,v24];
        [f0,v18,this,v24];
    }
    */
}
new C7();
const v30 = new C7();
v30.h = v30;
const v31 = new C7();
const v32 = [v31,C7,C7];
const v33 = [v32,v31,f0];
([C7,v32,f0]).length;
try { ("Vhw").indexOf(v33); } catch (e) {}
const v43 = [1,256,628003413,1732987345,1,0,-1073741824,-22053140,-2147483649,-9223372036854775807];
try { v43.with("1073741823", "1073741823"); } catch (e) {}
[10000,-65535];
([10267])[0];
const v50 = new Int32Array(2890);
const v51 = v50.lastIndexOf();
v51 != v51;
[3,9223372036854775807,-4096,1349432497,512,65537,268435440,-2147483647];
const v7 = [-1,-38052,1,9223372036854775807,-26519,1402061100,-2011084330,-19607,9,13];
[268435440,24074,158607334,1749129439,4096];
[];
function f18() {
    const o20 = {
        "c": "pR7SG",
    };
    return o20;
}
class C21 extends f18 {
    #toString(a23) {
    }
}
2759 + 2759;
Float32Array[1] = -1383363179;
const v31 = new Float32Array(2759);
v31[31] = v31;
256 / 256;
new Uint16Array(256);
try {
    f18();
} catch(e37) {
}
try { C21["n"](); } catch (e) {}
new Uint32Array(360);
class C44 {
}
new Uint16Array();
function f47() {
    [] = [NaN,1.0,1.1875413619536744e+308];
    let v49 = -11;
    --v49;
    const o53 = {
        get b() {
            super[this] = -8.233575780020734;
            return -8.233575780020734;
        },
    };
    const o54 = {
        ...o53,
    };
    return f47;
}
9 >> 9;
try { v7.of(); } catch (e) {}
Float32Array[1] = 9;
const t47 = -9007199254740991;
const v58 = new t47(Float32Array);
v58.BYTES_PER_ELEMENT;
function f61() {
    class C62 {
        constructor(a64) {
            this.fuck(true);
        }
    }
    return C62;
}
function f69() {
    const o74 = {
        valueOf(a73) {
            return this;
        },
        __proto__: f69,
        [-52276]: -410.8373818683839,
    };
    return o74;
}
Object.defineProperty(Float64Array, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f61 });
const v76 = [-1000000000.0,1e-15,-9.803124315434264,-366.4099400694298,1000000000000.0,0.7347183727038488,-Infinity,2.0,0.3916117682859279,-461027.2128179858];
function f77() {
    return v76;
}
class C78 extends f77 {
    constructor(a80, a81, a82, a83) {
        super();
        const o85 = {
        };
        const t78 = 1762760641;
        t78(o85);
        const t79 = a80.constructor;
        new t79();
        const v91 = ([-21059]).groupToMap;
        v91.d = v91;
        try { new v91(); } catch (e) {}
    }
}
const v93 = new C78();
for (let v94 = 0; v94 < 8; v94++) {
    v93.length = v94;
}
function f95(a96) {
    return Float64Array;
}
Float64Array[Symbol.toPrimitive] = f95;
