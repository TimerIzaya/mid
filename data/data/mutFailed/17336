const v0 = [365.2330566193459,0.21790503972290542,1000000.0,347.35352699549526];
const v1 = [730.3592939876648,1000000000.0,-0.0,0.6514619584112121,-1000000000.0];
const v2 = [3.7941220469421416e+306];
function f3(a4) {
    const o14 = {
        [a4]: a4,
        3: v0,
        "e": a4,
        108: v2,
        [v0]: v1,
        "b": v2,
        [v0](a6, a7) {
            const v8 = `
                /(x)(x)(x)\3*w6\xf0\x9f\x92\xa9xyz{93}/guy;
                /(\xed\xb0\x80)\x01+/uimy;
                /[\P{scx=Greek}]/guim;
            `;
            eval(v8);
            return a4;
        },
    };
    return o14;
}
const v15 = f3(v2);
const v16 = f3(v1);
const v17 = f3(v0);
function f18(a19, a20, a21) {
    const o26 = {
        [a21]: a20,
        set c(a23) {
            function f25() {
                return a21;
            }
        },
        ...v2,
        "b": v1,
        __proto__: v0,
        "a": v16,
        "f": a20,
        ...v17,
        [f3]: a20,
        "d": v15,
    };
    return o26;
}
f18(v2, v16, v2);
f18(v0, v15, v1);
f18(v0, v15, v0);
function F30(a32, a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    const v35 = this.constructor;
    try { new v35(); } catch (e) {}
}
new F30(F30, F30, F30);
const v41 = new BigUint64Array(10);
for (const v43 in v41) {
    new Float64Array(2147483647);
}
new Map();
class C48 {
    static {
        try { this["return"](); } catch (e) {}
        /[jf(\u{12345}\u{23456})]/udimy;
        /[\ca]/vmy;
        /a\W/dimy;
    }
    static #o(a56, a57, a58) {
        try {
            const v61 = new Array(255);
            f18(a57, v17, v61);
        } catch(e63) {
        }
        return Map;
    }
}
new C48();
new C48();
new C48();
class C68 extends Uint16Array {
}
