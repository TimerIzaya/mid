const v0 = [-0.0,-2.220446049250313e-16,-1000000.0,-0.0,8.176298262522923];
const v1 = [-387830.60125307855,0.38366855886456186,5.0,403813.47904422786,NaN,0.16103309617705808,-4.0,1000.0,1000000000000.0];
const v2 = [NaN,0.032178694121342666,-366446.2020441119];
class C3 {
    [v1] = v0;
    constructor(a5, a6) {
        if (a6) {
        } else {
            this || a6;
            [65537,-22156,9,127,2,-15,16];
            [5,-31767,-11009,-12,51048,8,-1085568395];
            [9007199254740991];
        }
    }
}
new C3(v2, v2);
const v15 = new C3(v2, v1);
new C3(v1, v15);
function f19(a20, a21) {
    const o24 = {
        set b(a23) {
        },
    };
    return o24;
}
let v30 = 116;
const v31 = [601759695];
const v32 = [1073741824,1073741823,1376142744,1073741825];
function f34(a35, a36, a37, a38) {
    function f40() {
        const o47 = {
            "e": -4294967295,
            ..."Vre",
            valueOf(a45, a46) {
            },
            ..."Vre",
            4: "Vre",
            "cause": -268435456,
            5: -4294967295,
            6: -268435456,
        };
        return o47;
    }
    f40();
    %OptimizeFunctionOnNextCall(f40);
    let v50;
    try { v50 = v32["find"](..."find", a38, ...v31, ...v32, ...522675525n); } catch (e) {}
    v50 <= a37;
    return arguments;
}
v30--;
const v55 = new Uint8Array(165);
v55.lastIndexOf(v55, v55, f19);
new Float32Array(v30, f19);
class C60 extends Float64Array {
    get e() {
    }
}
new C60();
new C60();
new Uint8Array();
BigInt64Array();
new Int32Array(2890);
new C60();
let v74 = 0;
v74 >>> v74;
do {
    const o77 = {
    };
    o77.c = o77;
    gc();
    v74++;
} while (v74 < 5)
