const v0 = [1000.0,-1.7976931348623157e+308,985.3888232784661,-712015.5546910492,3.0,-3.0,-209.22805742412186,-912351.0396610593,0.09380094376035941];
const v1 = [1.5078557032621175e+308];
const v2 = [407.1842125351286,1e-15,NaN,Infinity,0.0,-2.0,755407.7395665597,915.1241834637635,NaN,6.607512685120754e+307];
const v3 = /e\cAOS/gim;
const v4 = /a\W[a-zA-Z0-9]/vdims;
v4.e = v4;
const v5 = /a?(?:a*)+/umy;
class C6 {
    10;
    static 501;
    static f;
    #f = v0;
    constructor(a8, a9, a10) {
        a8.dotAll = a8;
        a10[0] = a10;
        try { a8.compile(a10, this); } catch (e) {}
        a10[0] = a10;
        a8.dotAll;
        a9.g = a9;
        let v14;
        try { v14 = Math.round(v4); } catch (e) {}
        v14++;
        v14 >>> v14;
        const v18 = 2147483647 + 2147483647;
        v18 >>> v18;
        let v21 = a10++;
        const v22 = v21 >>> v21;
        v22 - v22;
        const v24 = ++v21;
        const v25 = Math.imul(2.0, v21);
        v25 >>> v25;
        v25 << v25;
        const v28 = !v24;
        !v28;
        const v30 = ~v28;
        v30 % v30;
        a10 % v21;
        const v33 = ++a10;
        v33 >>> v33;
        v33 + v33;
    }
}
try { new C6(v0, v2, v0); } catch (e) {}
C6[501] = C6;
const v37 = new C6(v5, v4, v1);
v37[10] = v37;
v37[10] = v37;
const v38 = v37[10];
try { v38.compile(v1, v1); } catch (e) {}
const v40 = new C6(v3, v3, v1);
v40[10] = v40;
const v41 = new C6(v5, v4, v2);
v41[10] = v41;
-8 - -8;
-8 + -8;
6 + 6;
const v47 = 6 <= 6;
v47 && v47;
let v51 = 0;
v51--;
v51 / v51;
-4.0 >>> -4.0;
true || true;
class C60 {
    constructor(a62, a63) {
        const o65 = {
            84: arguments,
        };
    }
}
let v66;
try { v66 = C60.toString(); } catch (e) {}
try { v66.bold(); } catch (e) {}
