class C3 {
    constructor(a5) {
        const v6 = this.d;
        let v7;
        try { v7 = ("atan").replace(v6, v6); } catch (e) {}
        v7[this] = "m";
        for (let v8 = 0; v8 < 32; v8++) {
            v7[-591.0366507574852 + v8] = v8;
        }
    }
    static #d = "m";
    12 = "atan";
    #e;
    #c;
}
const v11 = new C3("atan");
const v12 = new C3(-591.0366507574852);
const v13 = new C3(C3);
class C14 extends C3 {
    constructor(a16, a17, a18, a19) {
        super(a17);
        function f20(a21, a22, a23, a24) {
            const o25 = {
                "e": C14,
                "b": a18,
                ...a24,
            };
            return o25;
        }
        const v26 = f20("m", v12, a18, v12);
        f20(v26, v26, this, v26);
        f20(this, v13, a18, a16);
    }
}
const v29 = new C14(v12, v12, v11, v11);
const v30 = new C14(C14, "m", v29, v29);
new C14(v11, v12, v11, v30);
for (let v35 = 0; v35 < 5; v35++) {
    function f36() {
        const v37 = [-1.5424212036356715e+308];
        try { f36.findIndex(); } catch (e) {}
        ~v37.shift();
        return v35;
    }
    f36();
    %OptimizeFunctionOnNextCall(f36);
}
