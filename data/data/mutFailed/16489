function f6(a7, a8, a9, a10) {
    function f11(a12, a13) {
        Math.log1p(2.220446049250313e-16);
        return a12;
    }
    a7.valueOf = f11;
    const o20 = {
        1000: a8,
        ...a7,
        "f": a9,
        get h() {
            let v17 = this;
            const v18 = v17++;
            let v19;
            try { v19 = new a7(a7, v18, 65537); } catch (e) {}
            return v19;
        },
        __proto__: a7,
        2721467454: a10,
    };
    Object.defineProperty(o20, Symbol.toPrimitive, { enumerable: true, value: f6 });
    return o20;
}
const v23 = f6(268435440, 42052n, 7n, 7n);
v23.valueOf = f6;
f6(v23, 7n, 42052n, 2n);
const v25 = f6(v23, 42052n, 2n, 2n);
class C29 {
    static #p(a31) {
        function f32(a33) {
            return a33;
        }
        class C34 extends f32 {
            static [-1] = 4294967296;
            static [a31];
            static 268435441;
        }
        return a31;
    }
    [0.028957958839558873];
    static 2147483648 = v23;
    static #g;
    #a;
}
const v35 = new C29();
const v36 = v35?.constructor;
try { new v36(); } catch (e) {}
const v38 = new C29();
try { v38.propertyIsEnumerable(C29); } catch (e) {}
new C29();
/[\11]/gm;
/(?:a*)*/gudm;
const v43 = /a(?!bbb|bb)c/vi;
v43.toString = f6;
const v44 = v43?.toString;
try { new v44(); } catch (e) {}
const v47 = ~117;
function f49() {
    return v25;
}
function f50(a51) {
    try {
        const t62 = "2147483649";
        t62.length = v47;
    } catch(e52) {
    }
}
Object.defineProperty(Uint16Array, 1, { get: f49, set: f50 });
const v53 = new Uint16Array(Uint16Array);
v53[1];
new Int32Array(31);
try { Uint32Array.toString(); } catch (e) {}
new Uint32Array(128);
function f62() {
    let v64 = 1000000000000.0;
    v64--;
    const o69 = {
        "e": Uint16Array,
        __proto__: 3.4890473589784586e+307,
        "g": 12,
        o(a68) {
            return a68;
        },
        ...v64,
    };
    return Int32Array;
}
%PrepareFunctionForOptimization(f62);
f62();
f62();
%OptimizeFunctionOnNextCall(f62);
f62();
