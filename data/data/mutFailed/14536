function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = -65537;
    } catch(e3) {
    }
    try {
        this.f = -65537;
    } catch(e4) {
    }
    try {
        this.a = -65537;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
new F0();
new Array(-5.0);
function f16(a17, a18, a19, a20) {
    const o29 = {
        o(a22, a23, a24) {
            a24[1073741825];
            const o26 = {
                "apply": Array,
                "call": Array,
                "construct": Array,
                "has": Infinity,
                "set": Array,
            };
            const v28 = new Proxy(a18, o26);
            return v28;
        },
        "g": a20,
    };
    return o29;
}
f16(-672.7645570061658, v6, -5.0, -5.0);
const t37 = -5.0;
t37(Infinity, v6, -672.7645570061658, -672.7645570061658);
f16(-5.0, v6, v7, Infinity);
function F33(a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    const v37 = this.constructor;
    v37.bind(F33, a35, v37, a35);
    try { new v37(); } catch (e) {}
    a36 / a36;
}
new F33();
new F33();
