const t0 = 2n;
const v6 = new t0();
delete v6.e;
const v8 = [-4294967295];
function F9() {
    if (!new.target) { throw 'must be called with new'; }
}
const v11 = new F9();
const v12 = new F9();
const o14 = {
    "h": v12,
    6: v12,
    128: undefined,
    "e": v8,
    "e": v11,
};
function F18(a20, a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    function f24(a25, a26) {
    }
    function f27(a28, a29, a30, a31) {
        const o32 = {
        };
        return o32;
    }
    function F33(a35) {
        if (!new.target) { throw 'must be called with new'; }
        const o36 = {
            "preventExtensions": f27,
            "setPrototypeOf": f24,
        };
        new Proxy(this, o36);
        const v39 = this?.constructor;
        try { new v39(); } catch (e) {}
    }
    try {
        this.e = a23;
    } catch(e41) {
    }
}
const v42 = new F18(F18, 536870889, -4n, 1024n);
new F18(-4n, -653383502, -4n, v42);
new F18(10000, 10000, 4096n, 1n);
function f49() {
    return f49;
}
const t46 = /C/gumy;
t46.constructor = f49;
function f51(a52) {
    return f51;
}
function f55(a56) {
    const o57 = {
        9: a56,
        "f": a56,
    };
    return o57;
}
const v58 = [4096];
const o59 = {
    "arguments": v58,
    "type": "function",
};
new Worker(f51, o59);
