const v0 = [];
class C4 {
    static #c;
    #g = v0;
    static #h;
    static set b(a6) {
        try {
            this.#h;
        } catch(e8) {
        }
    }
    static {
        try {
            this.b = this;
        } catch(e10) {
        }
    }
}
new C4();
new C4();
new C4();
let v16 = new Int8Array(129);
new BigInt64Array(1000);
new Uint8ClampedArray(3);
const v23 = [536870887,-42204,-17288903,-3,9007199254740991,7];
const v24 = [6,268435440,13,1073741825];
const v25 = [-15,-2147483649,-899333997,3,1455560807,-1024,-4294967297,2098301778];
const v26 = v25.reverse();
class C27 {
    constructor(a29) {
        function f30(a31, a32) {
            a31[5];
        }
        f30(v25);
        f30(v23);
        f30(a29);
    }
}
const v37 = C27.constructor;
const v38 = new C27(v24);
const v39 = new C27(v23);
const t41 = v39.constructor;
new t41(v38);
const v42 = new C27(C27);
try { v42.__defineGetter__(); } catch (e) {}
function f47() {
}
class C48 extends f47 {
    static [-145.3420418564839] = -4294967296n;
    h;
    static #d;
}
new C48();
const v52 = new BigUint64Array();
const o71 = {
    toString(a54, a55) {
        const v56 = [-9007199254740991,256,5,4294967297,1,-38452,9223372036854775807,2147483649];
        const v57 = [-4564,-541496027,-554545361,536870888];
        const v58 = [61400,-6,-1019014473,-42020,-2];
        class C59 {
            constructor(a61, a62) {
                const v63 = a62[this];
                try { v63(v63, ...a62, ...v56); } catch (e) {}
            }
        }
        new C59(v58, v56);
        new C59(v57, v58);
        const v67 = this.__lookupGetter__;
        try { new v67(); } catch (e) {}
        const v69 = a55 + a55;
        v69 >>> v69;
        v52[3408] = this;
    },
};
try { o71.toString(); } catch (e) {}
function f73(a74, a75, a76, a77) {
    try { a75.some(v37); } catch (e) {}
    const o79 = {
        __proto__: a74,
    };
    try { o79.groupToMap(); } catch (e) {}
    return o79;
}
const v82 = f73(v24).indexOf();
class C83 extends Uint8ClampedArray {
    1 = v26;
}
new C83();
new C83();
new C83();
const v87 = f73(v25, v23);
try { v87.groupToMap(v82); } catch (e) {}
const v89 = f73(v25, v25);
const o91 = {
};
try {
    gc();
} catch(e93) {
}
v16 ||= v89;
gc(o91);
