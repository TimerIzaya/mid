[1926526209,536870912,-9007199254740990];
const v4 = [23239,-268435456,268435456,-1910079548,257,-2147483648,-1,-12666];
const v5 = [1073741824];
function f6(a7, a8) {
    function f9() {
        return f9;
    }
    const v10 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    function f13() {
        ("Vre").codePointAt("Vre");
        return f9;
        const v17 = new Uint16Array();
        v17.lastIndexOf();
        const v19 = v10.length;
        const v20 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v22 = Symbol.toPrimitive;
        const o28 = {
            toString(a24, a25) {
                const v26 = undefined && undefined;
                a24 *= v22;
                return v26 <= v20;
            },
        };
        class C29 {
        }
        const o39 = {
            [v19](a31) {
            },
            [-4294967297n](a33, a34, a35, a36) {
                eval();
            },
        };
        function f40(a41, a42, a43, a44) {
            return a43;
        }
        return -53997;
    }
    f13();
    return f9;
}
v5[Symbol.toPrimitive] = f6;
v5[0];
-37997 + -37997;
let v52 = -61122;
v52++;
~v52;
const v56 = 7 - 7;
v56 > v56;
64 + 64;
class C61 {
    static [-53997] = -48332;
    [v5] = -48332;
    [7];
    #f;
    #o(a63, a64) {
        let v65 = -a63;
        super.g = 4096;
        let v70 = -9007199254740990;
        v70++;
        v70++;
        const v73 = +v65;
        v65 ** v4;
        v65--;
        return v73;
    }
}
const v76 = new C61();
v76[1073741824] = v76;
v76[1073741824] = v76;
const v77 = new C61();
const v78 = v77[1073741824];
v78 / v78;
const v80 = new C61();
v80[1073741824] = v80;
536870912 - 536870912;
!(536870912 === 536870912);
-1175613594 <= -1175613594;
let v88 = 23;
v88--;
3454 * 3454;
function f96(a97, a98, a99, a100) {
    a97 - a97;
    a100 >> a100;
    function f103() {
        "n" == "n";
        const v107 = Math.expm1(a98);
        const v108 = Math.tanh("n");
        const o109 = {
            [v108]: v107,
        };
        return 3454;
    }
    f103.name;
    const v111 = f103();
    v111 >>> v111;
    v111 > v111;
    const v115 = eval();
    %OptimizeFunctionOnNextCall(f103);
    return v115;
}
for (let v116 = 0; v116 < 5; v116++) {
    f96(v116, Uint16Array, v116, v116);
}
