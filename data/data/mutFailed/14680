const v0 = [-5.0,308.2034862565213,563.4902113893481,-3.0,553870.4956340904,1.7913025260410545e+308,0.6313216475137771];
[294.7675846868251];
const v2 = [27.07440163901083];
-Infinity;
function f12(a13, a14) {
    function f16(a17) {
        try { a17(this); } catch (e) {}
    }
    this.onmessage = f16;
    let v19 = v0[-1];
    v19 = v2;
}
const v22 = [1.0627867553717233e+308,1.0627867553717233e+308];
const o23 = {
    "arguments": v22,
    "type": "function",
};
new Worker(f12, o23);
function f25() {
    return v2;
}
new Date();
function F30(a32, a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    const o37 = {
        "b": "function",
        "a": 4294967296,
    };
    Object.defineProperty(v22, 6, { writable: true, configurable: true, get: Date, set: f12 });
    const v38 = new Int32Array(257);
    function f39(a40, a41, a42, a43) {
        let v45 = new Map();
        [...v45] = v38;
        a34 instanceof Map;
        try {
            new f12(a32, true);
        } catch(e50) {
        }
        let [...v51] = v38;
    }
    f39();
}
new F30();
const o56 = {
    "execution": "async",
};
gc(o56);
new F30();
new F30(-1734174209, 4294967296);
