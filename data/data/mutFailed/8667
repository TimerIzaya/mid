class C3 {
    static #n(a5) {
        try { this(); } catch (e) {}
        let v7 = super.f;
        v7 ||= -52731;
        delete v7?.[256];
        super.h;
        return -52731;
    }
    536870888 = -52731;
    h;
}
C3.prototype = C3;
const v10 = new C3();
const v11 = new v10();
const v12 = new C3();
const v13 = [C3];
try { v11(128, 128, v12); } catch (e) {}
new Uint16Array();
const v20 = new Uint32Array(3);
class C21 {
    constructor(a23, a24, a25, a26) {
        try { a25(); } catch (e) {}
        for (let i30 = (() => {
                0 / 0;
                return 0;
            })();
            i30 >>> i30, i30 < 9;
            (() => {
                -i30;
                const o36 = {
                };
                o36.e = o36;
                new Proxy(C3, Proxy);
                super.d;
                i30++;
            })()) {
            v20[i30] = a26;
        }
    }
    c;
}
try { C21.call(v13); } catch (e) {}
new C21();
const v44 = new C21();
const v45 = v44?.constructor;
try { new v45(2147483648, 2147483648, v12, 2147483648); } catch (e) {}
const v47 = [C3,v13,2147483648];
[v12,-8,v10,-8];
function F49() {
    if (!new.target) { throw 'must be called with new'; }
    for (let v51 = 0; v51 < 1000; v51++) {
        v51 >>> v51;
        try { ("p").strike(); } catch (e) {}
        const v56 = ("p" + v51).fontcolor();
        let v57;
        try { v57 = v56.trimLeft(this); } catch (e) {}
        const v58 = v57[12];
        try { v58.strike(); } catch (e) {}
    }
}
const v60 = new F49();
const v61 = v60?.__lookupGetter__;
let v62;
try { v62 = new v61(C21); } catch (e) {}
const v63 = new v47();
v63?.constructor;
try { new v62(); } catch (e) {}
