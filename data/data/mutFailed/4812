new WeakSet();
function f3() {
    return -536870912;
}
const o4 = {
    "defineProperty": f3,
};
new BigUint64Array(1660);
new BigInt64Array(1024);
new Uint8ClampedArray(1000);
this - this;
function f20() {
    return undefined;
}
function F21(a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    a24 * a24;
    const v26 = this.constructor;
    const o34 = {
        get a() {
            class C28 {
                constructor(a30, a31) {
                }
            }
            eval();
        },
    };
    const v38 = new Uint8Array(-536870912);
    v38[148] ||= 444;
    class C39 {
    }
    const v40 = new C39();
    function f41(a42, a43, a44) {
        const o46 = {
            get b() {
                return C39;
            },
            127: v40,
        };
        return f41;
    }
    2 >= 2;
    function f48() {
        const v49 = [f48,f48,f48,f48];
        class C51 extends v49.constructor {
        }
        const v52 = new C51();
        const v53 = v52.constructor;
        const v54 = v53.bind();
        try { v54(v54, v49, f48, v54, v53); } catch (e) {}
        return C51;
    }
    try { new v26(this); } catch (e) {}
    for (let i60 = 0, i61 = 10;
        (() => {
            const v62 = i60 < i61;
            class C63 extends Date {
            }
            return v62;
        })();
        i60++) {
    }
}
const v69 = new F21();
const t64 = v69.constructor;
new t64();
