let v0 = 86596454;
let v1 = 1000;
v1 / 4294967296;
const v8 = 4294967296 + 4294967296;
10000 != 10000;
class C12 {
    set f(a14) {
        let v15;
        try { v15 = this.p(a14, 4); } catch (e) {}
        v1 || v15;
        super[215879459];
    }
    static #g;
    #p(a19, a20) {
        --v0;
        this[236] = 4;
        new Uint8Array(1);
        new Float32Array(129);
        new Int16Array(2425);
        return 1;
    }
    #e;
    static [2147483649];
    #d;
    static #c = 2147483649;
    3554;
}
try { new C12(); } catch (e) {}
let v35;
try { v35 = C12.call(v0); } catch (e) {}
const v36 = new C12();
new C12();
const v38 = new v35();
try { v38.constructor(); } catch (e) {}
let v41;
try { v41 = Math.log10(v8); } catch (e) {}
v36 - v41;
-5493;
const v45 = 5493 >>> 5493;
-4294967296;
Math.atan2(v41, v45);
v1++;
class C3 {
    constructor(a5, a6) {
        const v7 = a5?.constructor;
        try { new v7(a5, a5); } catch (e) {}
        a5 | a5;
        a6.name;
        const v11 = super.d;
        a5?.[a6];
        try {
            a5[6] = v11;
        } catch(e13) {
            e13.b = e13;
        }
    }
    #n(a15, a16) {
        try { a15(-14, -4096); } catch (e) {}
        [1097833078,2147483648,-9,-2];
        [10000,4294967297,-8637,2,-8,-2147483647,586098144,512,38067];
        return [-385315611,-1911959463,-3,1361108052];
    }
}
const v22 = new C3(-4096, C3);
v22.length = v22;
const v23 = new C3(1000.0, v22);
const v24 = v23?.constructor;
try { new v24(v23, C3); } catch (e) {}
const v26 = new C3(C3, v23);
try { v26.constructor(-4096, 1000.0); } catch (e) {}
function F28(a30, a31, a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    const v34 = this?.propertyIsEnumerable;
    try { new v34(a30); } catch (e) {}
    a30.length = a30;
    a32.d = a32;
    a30.length = a33;
    const v36 = a33?.constructor;
    try { v36.call(v36); } catch (e) {}
    try { new v36(a30, v26); } catch (e) {}
    try {
        this.f = v26;
    } catch(e39) {
    }
}
v24.arguments = F28;
const v40 = new F28(v26, C3, v23, v23);
const v41 = new F28(v40, v23, v40, v23);
new F28(v26, v23, v41, v22);
[-20369.532191388775,-8.324676725848679e+307,5.0,-0.0,-2.0,1000000000.0,-2.2250738585072014e-308,1.0,681.1209982703347,-1000000000000.0];
const v44 = [-311373.5865096386,6.7927991845615345,5.0];
v44[2] = v44;
const v45 = [0.43093005420324215,1000.0];
try { v45.toString(); } catch (e) {}
-4294967297n - -4294967297n;
-128n | -128n;
-128n ^ -128n;
const t52 = [-9223372036854775807,1073741824,-65535,1945375758,4294967295,-9,-65537,1,-268435456];
t52[9] = "freeze";
