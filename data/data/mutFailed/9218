const v0 = [-1000.0,-2.0,2.220446049250313e-16,-1.7976931348623157e+308,251.09816983726523];
let v2 = new Uint8ClampedArray();
for (let v3 = 0; v3 < 5; v3++) {
    ~v3;
    v2[v3] = v0;
}
const v5 = [5.123755118405747,3.0];
function f7(a8) {
    return 1000.0;
}
function f9() {
    return f9;
}
const v10 = [-641194.611577804,29336.36309738038,2.0,2.2250738585072014e-308,-5.898513998260241e+307,2.0,Infinity,Infinity];
class C11 {
    e;
    set h(a13) {
        function f14() {
            return v5;
        }
    }
    constructor(a16, a17) {
        ({"h":v2,} = this);
        super[v0];
    }
    #e;
    [v0];
    static #e;
    h;
    static g = v5;
    15;
    f = v10;
}
new C11();
new C11();
new C11();
function f26() {
    new Int32Array();
    const o32 = {
        valueOf() {
            return true;
        },
    };
    async function f33(a34, a35, a36) {
        return a35;
    }
    function F37() {
        if (!new.target) { throw 'must be called with new'; }
    }
    class C40 extends F37 {
    }
    const o41 = {
        2: C40,
    };
    return f33;
}
try {
    const o42 = {
    };
} catch(e43) {
}
