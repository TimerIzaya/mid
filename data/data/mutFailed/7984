const v1 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v2 = [601759695];
const v3 = [1073741824,1073741823,1376142744,1073741825];
try { v3.map(2.220446049250313e-16); } catch (e) {}
522675525n | 522675525n;
function f7(a8, a9, a10, a11) {
    try { a9.map(522675525n); } catch (e) {}
    a8 >>= a9;
    v2[-1] = a11;
    %VerifyType(a8);
    try {
        let v14 = 16;
        v14--;
        v3.toSpliced(v14, v14, a9, 2.220446049250313e-16, a9);
    } catch(e17) {
    }
    function f18() {
        const o25 = {
            "e": -4294967295,
            ..."Vre",
            valueOf(a23, a24) {
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            5: -4294967295,
            6: -268435456,
        };
        return o25;
    }
    f18();
    %OptimizeFunctionOnNextCall(f18);
    try { ("find").toUpperCase(); } catch (e) {}
    let v29;
    try { v29 = v3["find"](..."find", a11, ...v2, ...v3, ...522675525n); } catch (e) {}
    v29 <= a10;
    return arguments;
}
f7(v2, v1, 522675525n, v1, 522675525n);
3216 >>> 3216;
try { new BigInt64Array(v1, v3, BigInt64Array); } catch (e) {}
class C40 {
    static e;
    e;
    static 3 = -5.161103313394506;
    toString(a42) {
        let v41 = this;
        v41.e *= 0.8199829542463926;
        v41 += v41;
        for (let v43 = 0; v43 < 10; v43++) {
            a42["p" + v43] = v43;
        }
        return 0.8199829542463926;
    }
}
const v46 = new BigInt64Array(3216);
v46[2191];
Int8Array.name;
new Int8Array(3331);
const v54 = new BigUint64Array(4096);
v54[3251] = v54;
function f56() {
    const o61 = {
        ["8"](a59, a60) {
        },
    };
    return o61;
}
for (let v62 = 0; v62 < 51; v62++) {
    class C64 extends v3.constructor {
        #e;
    }
    new C64();
    f7(v2, v62, false, v62);
}
const v68 = f7(v54, 3331, v46, 3216);
const v69 = v68?.callee;
try { new v69(522675525n, v54, 4n, 4n); } catch (e) {}
%PrepareFunctionForOptimization(f7);
-82.86062314585524 << -82.86062314585524;
try {
const t0 = 1000000000.0;
t0(2.220446049250313e-16, Uint8ClampedArray, ...1000000000.0, -82.86062314585524);
} catch (e) {}
f7(v54, 3331, v46, 3216);
f7(v54, 3331, v46, 3216);
%OptimizeFunctionOnNextCall(f7);
f7(v54, 3331, v46, 3216);
function f81() {
    return 36924;
}
f81.d = f81;
function f82(a83, a84, a85, a86) {
    a84 ^ a84;
    a85.caller;
    const o100 = {
        __proto__: a85,
        ...a85,
        [a85](a90, a91, a92) {
            function f94() {
                return f94;
            }
            for (let [v96,...v97] of "atan2") {
            }
            return "function";
        },
    };
    o100.name;
    return o100;
}
try { f82(v68, 4096, v68, v1); } catch (e) {}
const v104 = f82(-65536, 36924, f81)?.constructor;
try { new v104(1000000000.0); } catch (e) {}
try { ("-4294967295").fixed(); } catch (e) {}
const v113 = new WeakMap();
try { v113.get(4n); } catch (e) {}
try { new Float32Array(4n, 4n, "toString"); } catch (e) {}
new Float32Array(1554);
const v124 = new Float32Array(235);
v124[37];
new BigInt64Array(2);
("c").charAt(-4294967295).toUpperCase();
