function f6() {
    return f6;
}
["16",f6,"dotAll","o"];
const v8 = ["16"];
const v9 = [v8,"16",v8,"16","o"];
try { v9.toSorted("dotAll"); } catch (e) {}
class C11 {
}
const v12 = new C11();
const v13 = [v12,v12,v12,v12];
128 - 128;
Uint8Array.name;
const v19 = new Uint8Array(C11, 128, 128);
let v20;
try { v20 = v19.reduce(); } catch (e) {}
function f21() {
    let v22 = 1261703539;
    v22--;
    const o62 = {
        m(a26) {
            const v27 = this?.__defineGetter__;
            try { new v27(f21, -65535); } catch (e) {}
            a26.c = v12;
            try { a26.next(a26, v22); } catch (e) {}
            a26.h = a26;
            const o30 = {
            };
            o30.e = Float64Array;
            o30.h = o30;
            o30.h = -65535;
            function f31(a32, a33, a34) {
                return o30;
            }
            f31.caller = f31;
            try {
                o30.e = -65535;
            } catch(e35) {
                const v38 = new Uint8ClampedArray(o30, -65535);
                new e35(798, ...v38, o30);
            }
            try {
                const o40 = {
                };
                o40.e = o40;
                o40.e = v13;
                o40.e = v22;
            } catch(e41) {
            }
            let v43;
            try { v43 = ("EV").link(); } catch (e) {}
            let v44 = 0;
            class C45 {
            }
            try { new Int8Array(this, v22, v22); } catch (e) {}
            const t55 = "EV";
            const v49 = new t55(3938);
            let v50 = 3;
            let v51 = 0;
            let v52 = v51 >> v51;
            v52 << v52;
            for (let i = 0; i < 5; i++) {
                [...v50] = v49;
                v51++;
            }
            const o55 = {
            };
            o55.b = o55;
            try {
                let v56 = 0;
                for (let i = 0; i < 5; i++) {
                    ({"c":v20,"d":v44,...v52} = v43);
                    try {
                        o30.fuck(128, f6);
                    } catch(e58) {
                    }
                    v56++;
                }
                const o60 = {
                };
                o60.e = o60;
            } catch(e61) {
            }
        },
    };
    try { o62.m("sort"); } catch (e) {}
    o62.m(o62);
    return 128;
}
f21();
f21();
