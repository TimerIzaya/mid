const v7 = 268435441n / 268435441n;
const v11 = [[-13n,-1073741824n],-13n,-160287897n,-13n,-1751501701n];
const v12 = [-7n,-7n,v11,v11];
const v13 = v12?.values;
try { new v13(); } catch (e) {}
class C16 {
    toString(a18) {
        const v19 = this?.constructor;
        try { new v19(); } catch (e) {}
        const t9 = super["bigint"];
        t9[9] = 0;
    }
}
for (let i25 = 0, i26 = 10; i25 < i26; i25++, i26--) {
    v7 ** i25;
}
try { new C16(); } catch (e) {}
const v36 = new C16();
const v37 = v36?.constructor;
try { new v37(); } catch (e) {}
const v39 = [v36,v36];
let v40;
try { v40 = v39.find(v12); } catch (e) {}
try {
    v39.length = v36;
} catch(e41) {
    e41.message;
}
if (v37) {
    v39[-1751501701n] = -1132741578n;
} else {
    try { v40(57624529n, v36); } catch (e) {}
}
