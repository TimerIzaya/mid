class C3 {
    static get g() {
        try {
            super.exp(this, this, 12);
        } catch(e6) {
        }
        return 256;
    }
    [256] = -0.24557203129942984;
    g;
    10;
}
new C3();
new C3();
new C3();
const v15 = new Int16Array(1000);
function f18() {
    function f19(a20, a21, a22) {
        try { a20(); } catch (e) {}
        return a20;
    }
    %PrepareFunctionForOptimization(f19);
    return 1000;
}
Float64Array.valueOf = f18;
const v26 = new BigInt64Array(1000);
v26.currencySign = v15;
class C27 extends Float64Array {
    constructor(a29, a30, a31, a32) {
        super(v15);
    }
    [65] = Float64Array;
}
new C27();
v15.toLocaleString(BigInt64Array, v26);
