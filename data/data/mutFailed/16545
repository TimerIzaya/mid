function f0() {
}
class C1 extends f0 {
    static get c() {
        function f3(a4, a5) {
            let v6;
            try { v6 = a5.matchAll(a5, a5); } catch (e) {}
            return v6;
        }
        const v7 = f3(f0, f3, f0, C1);
        try {
            const v8 = [this,f0,v7,f3];
            const o9 = {
            };
            this.fuck(v8, v8, o9);
        } catch(e11) {
        }
        return C1;
    }
}
const v12 = new C1();
const v13 = new C1();
const v14 = new C1();
const v18 = [2.964612416453619,v12,-1000.0];
const v19 = [v13,v13,v14,C1];
[-1000.0];
class C21 {
    static get f() {
        v18[127] = this;
        super[this] = this;
        return this;
    }
    #e = f0;
    constructor(a24, a25, a26) {
        try {
            super.trimRight(v13, this, this);
        } catch(e28) {
        }
    }
    static 5 = v13;
    2473;
}
new C21(v19, -2.0, v12);
const v30 = new C21(v19, -2.0, C21);
new C21(v30, 2.964612416453619, v14, C1, C1);
const o33 = {
    __proto__: true,
};
const v35 = new Uint16Array(-1000.0, f0, Uint16Array);
const v38 = new Int16Array(2058);
v38[256] = 2058;
v35[9];
const o41 = {
};
gc(o41);
