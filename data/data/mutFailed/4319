function f0() {
}
[-1e-15,-189.30645693181498,-982924.000474769,-1.0,3.0,0.014353984008010023,-4.0,2.0,8.429046825189591,0.7583126956237578];
[-882673.2157017314,3.0,1e-15,2.0,0.6074151963466151,-715.3569599971072,NaN,1000000000000.0,-Infinity];
[-385.29077839356023];
const v6 = new Float32Array(257);
v6[231] = v6;
function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor;
    try { new a11("-268435456"); } catch (e) {}
    a10.prototype;
}
const v17 = new Uint32Array(4096);
v17[3132] = v17;
2147483648 !== 2147483648;
function f21(a22, a23, a24, a25) {
    const o26 = {
        "d": a25,
    };
    o26.f = o26;
    return o26;
}
try { f21.bind(Float32Array); } catch (e) {}
f21(2147483648, -11, 2147483648, 2147483648);
new Float32Array(255);
class C35 {
    static #p(a37) {
        return a37;
    }
}
C35.prototype = C35;
const v38 = new C35();
new C35(v38, "iterator");
const v40 = new C35();
const v41 = v40?.constructor;
try { new v41(); } catch (e) {}
C35.__proto__ = "iterator";
const v43 = [v38,v40];
[v43,"iterator",4.488303140222985];
const v45 = [];
-1000000000.0 >>> -1000000000.0;
Int16Array.a = Int16Array;
const v49 = new Int16Array(2147483648);
delete v49[-1000000000.0];
-4096 >> -4096;
class C55 {
    static 7;
    static [-1] = "string";
    #n(a57) {
        a57 = this;
        a57.e >>>= -11;
        const o61 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o61);
        return this;
    }
}
C55[7] = C55;
Array.prototype = Array;
const v64 = Array();
class C65 {
    #e;
    static {
        function f67(a68, a69) {
            return a68;
        }
        const o77 = {
            o(a71) {
                const v72 = a71?.valueOf;
                try { new v72(); } catch (e) {}
                const o75 = {
                };
                o75.h = o75;
                return gc(o75);
            },
        };
        const o79 = {
        };
        const v81 = new Proxy(Uint32Array, o79);
        v81.prototype = v81;
        o77["o"](o77, Uint32Array, "o", "o", v81);
        const v84 = super[this];
        try { Proxy.join(-4096, -4096, v84); } catch (e) {}
        const o86 = {
        };
        o86.e = o86;
        const v87 = /LD/vds;
        v87.dotAll = v87;
        const v89 = [v87,1000.0];
        try { v89.entries(); } catch (e) {}
    }
    static f;
    m(a92, a93) {
        const o94 = {
        };
        const o97 = {
        };
        const v99 = new Proxy(v64, o97);
        v99.d = v99;
        new Proxy(this, o94);
        class C105 {
        }
        function f106() {
            let v107 = 1000000000000.0;
            v107--;
            class C110 {
            }
            new C110();
            const v112 = new C110();
            [v112,C110];
            [257828.6336153492,v112];
            [v112];
            class C116 extends C55 {
            }
            function f117(a118, a119) {
                return f117;
            }
            Set.toString = f117;
            Set.constructor(Set).constructor;
        }
        const v123 = "string" && -4096;
        function F124(a126, a127, a128, a129) {
            if (!new.target) { throw 'must be called with new'; }
            const v130 = this.constructor;
            try { new v130(); } catch (e) {}
            typeof Float32Array;
        }
        new F124();
        new F124();
        +a93;
        Math.sqrt(v123);
        a92--;
        -509886178 << -509886178;
        return this;
    }
}
C65.name = C65;
[1828032293,v45];
const v141 = [v17];
try { v141.sort(Float32Array); } catch (e) {}
const v143 = [v38,v141,v43];
v143[1];
function f145() {
    return v143;
}
const v148 = new BigInt64Array(218);
v148.sort(f145);
