[];
const v1 = /a+?/gus;
const v2 = /DI*/vdiy;
/U/gmy;
const v9 = new Int16Array(Int16Array, Int16Array, Int16Array);
const o11 = {
    "execution": "async",
};
function F15(a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    new Int16Array();
    const v21 = [-1000000.0,0.1600379490765781,-1.6243694690977962e+307,817210.0157459241,1.0,5.0,0.9202958446582343,-1.7976931348623157e+308,-382.2774365702321,-5.737866676165018e+307];
    class C23 {
        static #e;
        m(a25, a26, a27, a28) {
            v21.#e;
            a26.#e = -2;
        }
    }
    Object.defineProperty(this, "c", { writable: true, value: a18 });
    try {
        this.callee = v2;
    } catch(e36) {
    }
    try {
        this.e = a17;
    } catch(e37) {
    }
    try {
        this.h = a18;
    } catch(e38) {
    }
}
new F15(v1, 186476959, 5.0, 1.0);
const v40 = new F15(5.0, -4294967297);
new F15(v40, -4294967297);
const o42 = {
};
function f43(a44, a45) {
    const o46 = {
    };
    return o46;
}
o42.h = f43;
for (let v48 = 0; v48 < 5; v48++) {
    const v50 = new Map(v9, Map, Map);
    v50["p" + -7] = -7;
    const o53 = {
        ...v50,
    };
}
Date[Symbol.toPrimitive] = Date;
try { new Date(Date, o42); } catch (e) {}
const v59 = new Float32Array();
for (let v60 = 0; v60 < 25; v60++) {
    function f61(a62, a63, a64, a65) {
        a62[1];
        a63--;
        a62[0] = a62;
        a63 <= a63;
        arguments[1] = arguments;
        const v70 = arguments?.__lookupGetter__;
        try { v70.constructor(v59, a64, v60, f61); } catch (e) {}
        let v72;
        try { v72 = v70(v70, f61, a63); } catch (e) {}
        return v72;
    }
    for (let v73 = 0; v73 < 10; v73++) {
        f61(v59);
    }
}
