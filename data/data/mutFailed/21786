function f0() {
}
let v2 = "gx";
const v9 = new Uint16Array(222);
const o21 = {
    valueOf() {
        Math.cos(f0);
        const v15 = 3 % v2;
        let v16 = ++v2;
        Math.round(f0);
        v15 >> f0;
        ++v16;
        Math.imul(this, v2);
        return "-1345242622";
    },
};
new Uint16Array(3624);
const v26 = new Int16Array(229);
for (let v27 = 0; v27 < 5; v27++) {
    function f28() {
        const v30 = Symbol.toPrimitive;
        function f31(a32, a33, a34) {
            function f36(a37) {
                new WeakSet();
            }
            this.onmessage = f36;
            try { a34(f28, 3624, v30, this); } catch (e) {}
        }
        const v43 = [v27,v9,"function"];
        const o44 = {
            "arguments": v43,
            "type": "function",
        };
        new Worker(f31, o44);
        const v49 = [-9223372036854775808];
        const v50 = [24526,-2147483647,-53890,1205962765,3,1597644293,4096,-128,257];
        function F51(a53, a54, a55) {
            if (!new.target) { throw 'must be called with new'; }
            this.c = a54;
            for (let v56 = 0; v56 < 5; v56++) {
            }
            this.g = 4;
        }
        new F51(v50, 9);
        new F51(v49, 4);
        new F51(v49, -1977599108);
        const v61 = v30.description.codePointAt();
        ([-1.5424212036356715e+308]).shift();
        [1073741824,1073741823,1376142744,1073741825];
        const o67 = {
            "maxByteLength": 128,
        };
        const v69 = new SharedArrayBuffer(4, o67);
        new BigUint64Array(v69);
        return v61;
    }
    f28();
    %OptimizeFunctionOnNextCall(f28);
    try {
        new f0();
    } catch(e74) {
    }
    const o75 = {
    };
    try {
        o75.h = v26;
    } catch(e76) {
    }
    try {
        const o77 = {
        };
        o77.h = v26;
        o77.a = "268435456";
    } catch(e78) {
    }
    try {
        const o79 = {
        };
        o79.h = v26;
        o79.a = "268435456";
        o79.d = v27;
    } catch(e80) {
    }
    try {
        const o81 = {
        };
        o81.h = v26;
        o81.a = "268435456";
        o81.e = o21;
    } catch(e82) {
    }
}
