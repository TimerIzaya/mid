function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = -1;
    } catch(e3) {
    }
    try {
        this.a = -1;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
const v7 = new F0();
class C8 {
    constructor(a10, a11, a12) {
        try {
            a11.#a;
        } catch(e14) {
        }
    }
    [v7] = v6;
    e;
    /*
    constructor(a16) {
        this.__proto__;
        function f18() {
            return a16;
        }
        const o19 = {
        };
        let v21 = 536870887;
        v21++;
        BigUint64Array * v21;
        try {
            const v26 = (a27, a28, a29) => {
                try { ("function")["toUpperCase"](); } catch (e) {}
                "-268435456" ^ a27;
                return a27;
            };
            v7.fuck(v6, 2.0, 2.0, 2.0);
        } catch(e35) {
        }
    }
    */
    static #n(a37, a38, a39) {
    }
}
new C8(v6);
new C8(C8);
new C8(v6);
function f47() {
    return v5;
}
[-5.0,1.632623043012467e+308,1.0];
[-3.0,-4.0,0.5739146091439589,-3.044814288003351e+307,1000000000.0,3.0,-656871.958939069,1.7976931348623157e+308,0.9962397222244552,2.2250738585072014e-308];
[0.4642413109230935,-2.220446049250313e-16,117356.18493939424,-1e-15];
Symbol.for(Symbol);
