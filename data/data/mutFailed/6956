new Float32Array(4096);
0 + 0;
const v9 = new Int8Array(0);
let v10;
try { v10 = v9.find("getSeconds"); } catch (e) {}
512 >> 512;
new Float64Array(512);
const o21 = {
};
new Proxy("536870889", o21);
new Int16Array(127);
new Uint32Array(257);
const v30 = new Float64Array(127);
class C31 {
    static b = Int16Array;
    5;
    f;
    #e = 257;
    static 2;
    static #p(a33, a34) {
        try {
            this.#e;
        } catch(e36) {
        }
        this.b;
        %VerifyType(a34);
        return v30;
    }
}
new C31();
new C31();
const v40 = new C31();
function f44() {
    function f46(a47) {
        const v48 = [v40,a47,a47,C31];
        [a47,this,this,this,Float64Array];
        [257,v48];
    }
    this.onmessage = f46;
    delete C31[7];
    try {
        this.valueOf = f46;
    } catch(e52) {
    }
}
const v55 = [];
try {
    v10.valueOf = f44;
} catch(e56) {
}
try {
    ("getSeconds").replaceAll("7", "getSeconds");
} catch(e58) {
}
const o59 = {
    "arguments": v55,
    "type": "function",
};
new Worker(f44, o59);
127 ^ 127;
function f65() {
    const v67 = ([f65,f65]).constructor;
    class C68 extends v67 {
    }
    C68.length = C68;
    const v69 = new C68();
    try { v69.reduce(v67); } catch (e) {}
    const v71 = v69.constructor;
    v71.length;
    const v73 = v71.bind();
    let v74;
    try { v74 = v73(); } catch (e) {}
    return v74;
}
%PrepareFunctionForOptimization(f65);
f65();
%OptimizeFunctionOnNextCall(f65);
f65();
