const v2 = new BigInt64Array(117);
function f5() {
    v2.byteOffset /= 1742;
    for (let v6 = 0; v6 < 32; v6++) {
        v2["p" + v6] = v6;
    }
    return Uint16Array;
}
Uint16Array.toString = f5;
try {
    v2.reduceRight(117, v2);
} catch(e10) {
}
v2[Uint16Array] %= 1742;
new Uint16Array(1742);
new Uint8ClampedArray(2);
[-1.01936167881904e+308,725394.3617536111,615.2446322431933,1e-15,592.1772759527546,-1000000.0,0.08598356961106113,1.3899471339776903e+308,-1.7976931348623157e+308,-619.3515835513376];
[-6.94499917353033e+307,832411.9362077997,1000000000000.0,NaN,-1000.0,2.784432918807571e+307,-2.0,-894283.4363532945,1.225608396959114e+308,0.2003180848377759];
[138.5728345763032,818354.2017731532,3.9104953110798846,-5.502128583471208,-1.376692428720344e+308];
const v21 = [536870887,-42204,-17288903,-3,9007199254740991,7];
const v22 = [6,268435440,13,1073741825];
const v23 = [-15,-2147483649,-899333997,3,1455560807,-1024,-4294967297,2098301778];
class C24 {
    static valueOf(a26) {
        super[a26] = this;
        v22[v23] = v23;
        super[v23];
        return v2;
    }
    constructor(a29) {
        a29.valueOf = f5;
        function f30(a31, a32) {
            a32.valueOf = f30;
            const o33 = {
                "c": v2,
                "h": a32,
            };
            return o33;
        }
        f30(f30(v23, a29), v21);
    }
}
const v36 = v23?.constructor;
let v37;
try { v37 = new v36(C24); } catch (e) {}
const v38 = new C24(v22);
const v39 = new C24(v21);
function f40(a41) {
    try {
        f5();
    } catch(e43) {
    }
    return a41;
}
v39[Symbol.toPrimitive] = f40;
const v46 = new C24(C24);
const v47 = v46?.constructor;
let v48;
try { v48 = v47(v39); } catch (e) {}
function f49(a50, a51, a52, a53) {
    a53.valueOf = f49;
    try { a50.findLast(v21); } catch (e) {}
    a51[1] = a51;
    try { a53.valueOf(); } catch (e) {}
    const o66 = {
        __proto__: a50,
        "g": a50,
        get e() {
            let v59 = 820086.9196656225;
            v59++;
            const v61 = -1;
            let v62 = Math.atanh(this);
            const v63 = 1 && v61;
            v62--;
            Math.sinh(v63);
            return v38;
        },
    };
    try { o66.indexOf(a53); } catch (e) {}
    return o66;
}
for (const v68 of v37) {
    v39[v39] ^= v48;
    try { v22.keys(); } catch (e) {}
    new WeakMap();
}
try { f49(v22, v22, v38, v22); } catch (e) {}
const v73 = f49(v22, v21, v39, v38);
v73.indexOf(f49);
const v75 = f49(v23, v21, v23, v73);
v75.valueOf = f5;
f49(v23, v23, v46, v75);
const v79 = new BigUint64Array(4083);
try { v79.set(v73); } catch (e) {}
new Uint16Array(3239);
-513;
BigInt64Array.prototype;
new BigInt64Array(513);
[5.0,-1000000000000.0];
[-3.4570322798414105e+307,169.39416483428454,-2.0,-1000.0,5.0,1.0,14338.693316202844,-1000000.0,955.167973693761,0.5696151956948133];
[-2.0,-2.0];
try { Array.call(Uint16Array); } catch (e) {}
Array();
Date.valueOf = f49;
new Date();
const v102 = Date > "undefined";
v102 || v102;
const v104 = v102 ? Date : "undefined";
try { v104.match(v104); } catch (e) {}
let v106 = 0;
do {
    ("minor")[0];
    const o111 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o111);
    v106++;
} while (v106 < 2)
