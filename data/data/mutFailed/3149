new Uint32Array(14);
new Uint32Array();
const v12 = new Set();
const v14 = v12["delete"](839612.5677247904);
class C16 {
    p(a18, a19, a20, a21) {
        const t6 = "k01jj";
        t6[this - "k01jj"] = "k01jj";
        return a20;
    }
    #c;
    static 0;
    #e = "bigint";
    static p(a24, a25, a26, a27) {
        const v29 = ["bigint",2147483647,1263666077];
        Reflect.construct(a25, v29, a25);
        super.g;
        function F32(a34, a35) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.b = a35;
            } catch(e36) {
            }
        }
        const v40 = new Float32Array(165);
        new Uint16Array(v40);
        new F32(9007199254740990, "k01jj");
        new F32("bigint", "k01jj");
        new F32(this, "bigint");
        return v29;
    }
}
new C16();
gc();
let v48 = 268435440n;
--v48;
new Int16Array(512);
new v14();
new C16();
new Uint16Array(512);
new Int32Array(3);
const v63 = [];
class C65 extends Set {
}
class C67 {
    constructor(a69, a70) {
        try {
            super.n(gc);
        } catch(e72) {
        }
        try {
            super.getYear(a69, this);
        } catch(e74) {
        }
    }
}
const o76 = {
    [v63]: v63,
    get h() {
        return this;
    },
};
new Float64Array(128);
function F78() {
    if (!new.target) { throw 'must be called with new'; }
}
class C87 extends F78 {
}
const o102 = {
    2: C87,
    ...v63,
    "e": v63,
    4294967295: Int32Array,
    "e": v12,
    get d() {
        const v89 = this != 0.003171607575499835;
        const o92 = {
            "f": "k",
            get f() {
                return this;
            },
        };
        function F93(a95, a96) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.c = "delete";
            } catch(e97) {
            }
            try {
                this.d = v89;
            } catch(e98) {
            }
        }
        const v99 = new F93("k01jj", 0.003171607575499835);
        new F93(v99, F93);
        const v101 = new F93(this, 0.003171607575499835);
        return v101;
    },
};
