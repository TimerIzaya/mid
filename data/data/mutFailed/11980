const v6 = [9007199254740991,-2,111434394,-65535];
[49451,-7];
const v8 = [536870912,2,256,65536,-2119292879,5,-16,-15,50962,9007199254740992];
const v9 = [v8];
let v10;
try { v10 = v9.toLocaleString(); } catch (e) {}
const v11 = [v10,-631027267n,-26580];
const v12 = [1,-235453143n,1,517810636,517810636];
function F13(a15, a16, a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    v6[0] = a15;
    a16[8] = a16;
    a18 & a18;
    try {
        this.d = a18;
    } catch(e20) {
    }
    try {
        this.g = 1;
    } catch(e21) {
    }
}
const v22 = new v10(v11, v8, 1, 1);
const v23 = v22.g;
const v24 = new F13(v11, v6, -26580, 1);
v24.d = v23;
const v25 = new F13(v12, v11, 517810636, -26580);
for (let v26 = 0; v26 < 5; v26++) {
    const v27 = v26 & v26;
    const v30 = 517810636 >> -18321;
    v30 - v30;
    switch (v25) {
        default:
            delete v23[1073741825];
            break;
    }
    Math.log1p(v27);
    Math.tan(-26580);
}
