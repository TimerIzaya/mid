const v2 = new Float64Array(214);
new Uint8Array(3);
const v8 = new v2(124);
let v12 = 65535;
class C15 {
    10 = 268435456;
    static #valueOf(a17) {
        super.g %= 4096;
        this[268435456] = v12;
        super[a17] = a17;
        super[this];
        return v8;
    }
    #h;
    static #p(a20, a21) {
        v12 = a21;
        a21 instanceof a21;
        try {
            super.toISOString(a20);
        } catch(e24) {
        }
        return a20;
    }
}
new C15();
new C15();
const v27 = new C15();
function F28(a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a31;
    } catch(e32) {
    }
    try {
        const v33 = [];
        class C34 {
            constructor(a36, a37, a38) {
                function f39(a40, a41, a42) {
                    v33.copyWithin();
                    try {
                        f39(-268435456, 0.6683462416314783, [-268435456]);
                    } catch(e48) {
                    }
                    const v49 = this >> -268435456;
                    v49 >> this;
                    return -v49;
                }
                f39(this, this, a36);
            }
        }
        class C53 extends C34 {
        }
        new C53();
    } catch(e55) {
    }
}
new F28(3, v27);
class C57 {
    set h(a59) {
    }
}
function f61(a62) {
    function f63(a64) {
    }
}
