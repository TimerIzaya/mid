const v3 = new Map();
class C4 {
    [v3];
    constructor(a6, a7) {
        const v8 = this?.constructor;
        try { new v8(); } catch (e) {}
        const v10 = /(?<!)/gv;
        v10.e = v10;
        const v11 = /(\xed\xb0\x80)\x01/gudmy;
        v11.c = v11;
        const v13 = Symbol.iterator;
        const o15 = {
            [v13]() {
            },
        };
    }
}
const v16 = new C4(Map, Map);
const t18 = v16.constructor;
new t18();
new Uint8ClampedArray(-14);
new Uint8Array(9, Uint8ClampedArray, Uint8ClampedArray);
new Int8Array(256, Int8Array);
new BigInt64Array(2, Uint8ClampedArray, Uint8ClampedArray);
new Int32Array(6);
new BigInt64Array(1, 1, 1, Int32Array, 256, Uint8Array, BigInt64Array);
function f35() {
    let v36 = -9223372036854775808n;
    v36 %= -8n;
    return -8n;
}
for (let v38 = 0; v38 < 5; v38++) {
    f35();
    %OptimizeFunctionOnNextCall(f35);
}
