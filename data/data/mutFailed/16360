function f6() {
    return -1542902143;
}
class C7 extends f6 {
    static [9n] = f6;
    static #m(a9, a10, a11, a12) {
        [-1932740092,2147483647];
        [10];
        [-6,-2147483648,1077380137,-7,8,2];
        %VerifyType(9n);
        super[2147483647] = this;
        [-1000.0,9.280184069697825,3.4058995325099133,0.5920060854474394,-2.220446049250313e-16,3.0,0.20936680612292535,-1000000000000.0,-1000000000000.0,-1000000000.0];
        [5.485621611243852e+307,1.5323277365934886e+308,1000000.0,2.220446049250313e-16,-4.137460220254168];
        return [-2.3608180099540554,-1000.0];
    }
    b;
    [9n];
    #b;
}
new C7();
const t20 = 2147483647;
new t20();
new C7();
function f22(a23, a24, a25, a26) {
    try {
        139837843 in "deleteProperty";
    } catch(e30) {
    }
    return a26;
}
%OptimizeFunctionOnNextCall(f22);
new WeakSet();
new BigInt64Array(257);
class C39 {
    constructor(a41, a42) {
        function F46(a48) {
            if (!new.target) { throw 'must be called with new'; }
            const v49 = this.constructor;
            try { new v49(); } catch (e) {}
        }
        new Date();
    }
}
const v53 = new C39(C39, 256);
new C39(v53, 256);
new Uint8Array(2);
const v58 = new Int8Array();
v58.buffer.slice(2147483648);
new BigInt64Array(127);
const v66 = ("-1723624938").slice(9);
class C69 {
    constructor(a71, a72) {
        const v73 = this.constructor;
        try { new v73(this, v66); } catch (e) {}
        a72.sup();
    }
}
const v76 = new C69(9, "maxByteLength");
const v77 = v76.constructor;
try { new v77(); } catch (e) {}
