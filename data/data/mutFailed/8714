const v2 = new Int32Array(3871);
const v5 = new BigUint64Array(2880);
let v6 = 1;
new Uint16Array(v6);
let v9 = Map;
const v10 = new v9();
function f11() {
}
const v13 = [3.0];
for (let v14 = 0; v14 < 10; v14++) {
    function F15(a17, a18, a19) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v20 = new F15(-725.0347156854516);
    new F15(v20, v13);
}
const v22 = [65535,-1147102321,129,-4294967296,-9007199254740990,-19104];
const v23 = [3,64525,-14917];
const v24 = [967459484,657690363,4294967297,-11];
function f25(a26, a27, a28) {
    const o41 = {
        p(a30, a31, a32) {
            v6 |= a30;
            function f33(a34, a35, a36) {
                const o37 = {
                    ...a36,
                    [f11]: a28,
                    [v10]: a28,
                    "b": a35,
                    7: v13,
                    2: v13,
                    "h": a31,
                    [v23]: a30,
                };
                return o37;
            }
            f33(a30, a28, a27);
            f33(v6, v22, v22);
            f33(2880, a30, a27);
            return this;
        },
    };
    const o42 = {
        ...v22,
    };
    Reflect.construct(a27, [Int32Array,a28,v2,a26,Reflect], f11);
    return o41;
}
f25(v22, v22, v6);
f25(v22, v24, v6);
f25(v23, v23, 3871);
new f11();
f25(v24, Uint16Array, Uint16Array);
v10 % v10;
Math.sin(v9);
--v9;
0 < -143592035;
class C60 {
}
const v61 = new C60();
v61.split;
class C65 {
    n(a67, a68) {
        super[-8n] = this;
        const o72 = {
            ...v5,
            [f11]() {
            },
            ...47,
            "maxByteLength": 47,
        };
        SharedArrayBuffer(3, o72);
        new Int8Array();
    }
}
try { Promise.bind(Promise, 47316291, Promise, Promise); } catch (e) {}
const v82 = new Int32Array(1024, f25);
const v84 = new BigUint64Array();
const o85 = {
    ...v84,
};
for (const v87 of v82) {
    class C90 {
        ["toString"];
        static #n(a92, a93) {
        }
        static p(a95, a96) {
            super.b = 536870889;
            function f97() {
                return C90;
            }
        }
    }
    const o100 = {
        "maxByteLength": 1293466293,
    };
    new SharedArrayBuffer(1796, o100);
}
