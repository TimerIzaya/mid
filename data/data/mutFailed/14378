function f3() {
    return -25019;
}
try { f3(); } catch (e) {}
new Float64Array(64);
const v10 = new BigInt64Array(1706);
const v11 = v10?.constructor;
try { new v11(BigInt64Array, v10, v10); } catch (e) {}
2 / 2;
new BigInt64Array(2);
class C18 {
    static {
        try { new this(); } catch (e) {}
        Symbol.hasInstance = Symbol;
        Symbol.hasInstance;
        this[Float64Array];
    }
    #p() {
        let v25;
        try { v25 = this.p(undefined, this, this, this, this); } catch (e) {}
        try {
            v25.#p(undefined, v25, v25, undefined);
        } catch(e27) {
        }
        return v25;
    }
    static #a = undefined;
    c = undefined;
}
C18.c = C18;
const v28 = new C18();
const v29 = new C18();
const v30 = new C18();
v30.c;
function f32(a33) {
    const o39 = {
        15: a33,
        toString(a35, a36) {
            super.h = a36;
            try { C18.stringify(a33, a33, this); } catch (e) {}
            try {
                C18.c = f32;
            } catch(e38) {
            }
            return 1575126842;
        },
        2147483647: undefined,
        __proto__: v29,
        "c": a33,
        ...a33,
        "f": BigInt64Array,
    };
    o39[2147483647] = o39;
    return o39;
}
const v40 = f32(1575126842);
f32(v28);
f32(v40);
42353n ^ 42353n;
-65482n <= -65482n;
[0.0,26.917886948179785];
[4.0,-6.418452896256084,1000000000.0,4.0,-2.220446049250313e-16,-1000000000.0];
[883.1365358956336,-266.1024094651509,-5.0,1.4118854267221805e+308,-786614.3512895996];
v40 > C18 ? v40 : C18;
for (let i54 = 0; i54 < 5; i54++) {
    i54 >>> i54;
    try {
        const v61 = new f32(v40);
        v61.d = v61;
    } catch(e62) {
    }
}
