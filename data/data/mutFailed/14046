const v2 = new Int16Array(7);
const v5 = new Int8Array(257);
const v8 = new BigInt64Array(257);
class C9 extends BigInt64Array {
    static d;
    constructor(a11, a12) {
        super(v5);
        let v13;
        try { v13 = a11(BigInt64Array, a11, 257, v2); } catch (e) {}
        super[v5] = a12;
        let v14 = this[Int8Array];
        super.every(a11);
        v8[a11] = v14;
        v14 <<= this;
        v13 ^ a12;
    }
    5;
    f;
    d;
}
const v17 = new C9(Int8Array, 257);
const v18 = new C9(257, 257);
new C9(v5, 257);
function f20(a21, a22, a23) {
    const o40 = {
        set h(a25) {
            v2[v17];
        },
        toString(a28, a29, a30) {
            let v27 = this;
            super.h = 257;
            const v31 = v27++;
            a22[4294967295] = v31;
            const o32 = {
            };
            try {
                o32.e = a30;
            } catch(e33) {
            }
            try {
                const o34 = {
                };
                o34.e = a30;
                o34.d = a30;
            } catch(e35) {
            }
            try {
                const o36 = {
                };
                o36.e = a30;
                o36.c = a30;
                o36.b = v5;
            } catch(e37) {
            }
            try {
                const o38 = {
                };
                o38.e = a30;
                o38.d = a30;
                o38.f = v31;
            } catch(e39) {
            }
            return a22;
        },
    };
    return o40;
}
f20(7, v17, 257);
f20(7, v18, 257);
f20(257, v8, 257);
function f47(a48, a49, a50, a51) {
    "valueOf" - a49;
    a48 / a49;
    const v54 = a49 >= a49;
    v54 >>> a50;
    const o59 = {
        next(a57, a58) {
            return v54;
        },
    };
}
for (let v60 = 0; v60 < 625; v60++) {
}
