function f0() {
    const o30 = {
        __proto__: "257",
        n(a5) {
            const v7 = Symbol.iterator;
            const o29 = {
                [v7]() {
                    let v9 = 10;
                    new Uint8Array(64);
                    const v15 = new BigInt64Array(4046);
                    function f16(a17, a18) {
                        a17++;
                        const v20 = a17++;
                        v20 >> v20;
                        const o22 = {
                            ...a17,
                        };
                        [,...a5] = v15;
                        return a17;
                    }
                    const o28 = {
                        next() {
                            const v24 = v9--;
                            const v26 = 64 == 0;
                            const o27 = {
                                "done": v26,
                                "value": v24,
                            };
                            return o27;
                        },
                    };
                    return o28;
                },
            };
            return a5;
        },
    };
    return o30;
}
const v31 = f0();
const v32 = f0();
let v33 = f0();
class C34 {
    static b = v31;
    toString(a36) {
        try {
            this.length = 7;
        } catch(e38) {
        }
        return this;
    }
    m(a40, a41) {
        try {
            a40.f = a41;
        } catch(e42) {
        }
        v33 = a41;
        super[a41];
        return a40;
    }
}
try { C34.isPrototypeOf(v32); } catch (e) {}
const v45 = new v33();
const v46 = new v45();
const v47 = new C34();
try { v47.m(v33, v46); } catch (e) {}
/s(x)(x)(x)\3*S(?<a>.)\k<a>*/gvdisy;
const v50 = /[x\dz]/vms;
v50.dotAll = v50;
/([x\dz])/udisy;
127 ^ 127;
try { new Int32Array(Int32Array, v33, v50); } catch (e) {}
new Int32Array(v33);
4096 <= 4096;
new Uint8ClampedArray(4096);
try { new Uint32Array(Uint8ClampedArray, v50, f0); } catch (e) {}
new Uint32Array(333);
class C65 {
    constructor(a67) {
        for (let i = 0; i < 10; i++) {
            const v68 = /[xyz{1,}(O)]/udis;
            v68.e = v68;
        }
    }
}
new C65();
