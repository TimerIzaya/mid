const v3 = [-646258.8006221732,5.0,-1000000.0,2.2250738585072014e-308,-2.2250738585072014e-308,1000000.0];
for (let i = 0; i < 5; i++) {
    v3.length = 29;
}
[0.0,-731.3023176726383,NaN,-1.9577909465754608,-1.7976931348623157e+308];
[-5.03512206840012,839374.2741586284,1000000000000.0,-818716.2348884421];
const v7 = [-0.0,1.0,0.48329002618290884,NaN,0.37853905887012196,1000.0];
const v8 = [1000000.0,1.7976931348623157e+308,-8.489325341497881e+307,553826.2125093329];
[-1.2450867137805094e+308,-8456.531466674292,2.220446049250313e-16];
[-1000.0,181.43834792783605,-2.4907450086470455e+307];
const v11 = /\u0034?/gusy;
/H/uis;
/(?<a>(?<b>(?<c>(?<d>.).).).)/guims;
function F15() {
    if (!new.target) { throw 'must be called with new'; }
    const v18 = [F15,F15];
    [v18,1141300185,F15];
    let v20 = [this];
    Math.log2(v18);
    const v24 = v20++;
    v24 ^ v24;
    Math.asinh(536870887);
    try {
        class C28 extends this.constructor {
            e = F15;
        }
        C28.caller;
        new C28();
    } catch(e31) {
    }
}
128 | 128;
new Uint8ClampedArray(128);
6 / 6;
Uint16Array.prototype = Uint16Array;
new Uint16Array(6);
new Float64Array(10);
let v42 = 3239;
class C43 {
}
const v44 = new C43();
const v46 = -4294967297n / -4294967297n;
const v47 = [601759695];
for (let v48 = 0; v48 < 5; v48++) {
    function f49() {
        "Vre" == C43;
        const o62 = {
            [-4294967297n](a54, a55, a56, a57) {
            },
            ...v47,
            ...v44,
            4: v46,
            toString(a59, a60, a61) {
                return v48;
            },
            5: -4294967295,
        };
        return f49;
    }
    f49();
    %OptimizeFunctionOnNextCall(f49);
}
v42--;
const v66 = new Int32Array(v42);
Float64Array.BYTES_PER_ELEMENT;
5 >> 5;
const v71 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v73 = new Uint32Array(5);
v73[2] = v73;
let v74 = -4294967297n;
const v75 = v74--;
[601759695];
const v77 = Float64Array?.constructor;
try { new v77(v77); } catch (e) {}
function F79(a81) {
    if (!new.target) { throw 'must be called with new'; }
}
new F79();
new Uint16Array(3225);
let v86;
try { v86 = v77(); } catch (e) {}
try { new v86(); } catch (e) {}
function f88() {
    let v90;
    try { v90 = ("Vre").charAt(128); } catch (e) {}
    try { v90.lastIndexOf(f88); } catch (e) {}
    let v92;
    try { v92 = ("Vre").codePointAt(v71); } catch (e) {}
    const v93 = v92 - v92;
    v92 ^ v92;
    let v95 = Float64Array;
    v95 = Float64Array;
    let v96 = v71.length;
    v96++;
    try {
        v8.forEach(Float64Array);
    } catch(e99) {
        e99.stack = e99;
    }
    const o113 = {
        "c": v74,
        "c": v7,
        valueOf(a101, a102) {
            return a102;
        },
        1073741824: v73,
        [v93](a104, a105, a106, a107) {
            const t107 = "Vre";
            t107(v86);
        },
        "arguments": 5,
        __proto__: v75,
        o(a111) {
            const o112 = {
            };
            o112.execution = Float64Array;
            o112.execution = this;
            return this;
        },
        256: v11,
    };
    o113[256];
}
const v116 = new Date();
function f117(a118) {
    return Date;
}
const v120 = [v116];
const o121 = {
    "arguments": v120,
    "type": "a",
};
new Worker(f117, o121);
new Float64Array(v66);
