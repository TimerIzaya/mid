function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 42094;
    } catch(e3) {
    }
    try {
        this.c = 42094;
    } catch(e4) {
    }
    try {
        this.b = 42094;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new v6();
const v8 = new F0();
[v6,[v7,v6,v6,v8],v8,F0,v7];
[F0,v8,v6,v8,v6];
function f12() {
    return v7;
}
const v17 = Array();
const v18 = [6];
const v19 = v18.copyWithin(v18, v18, Array);
v17.entries().hasOwnProperty(v19);
