const v2 = new Int16Array(9);
const v5 = new Int32Array(9);
let v6;
try { v6 = v5.toSorted(9); } catch (e) {}
const v9 = new Uint8ClampedArray(257);
4096 >> 4096;
function f14() {
    function f15(a16, a17) {
        return f14;
    }
    const v19 = new Promise(f15);
    v19.then(f14, f15);
    return Uint8ClampedArray;
}
function f21() {
    const o34 = {
        ["8"](a24, a25) {
        },
        ["8"](a27, a28) {
        },
        n(a30, a31) {
            return v2;
        },
        set c(a33) {
        },
    };
    o34[8];
    return o34;
}
%PrepareFunctionForOptimization(v6);
const t30 = 1024;
t30()[8];
%OptimizeFunctionOnNextCall(v9);
f21();
