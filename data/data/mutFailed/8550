function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = 1017828820;
    } catch(e3) {
    }
    try {
        this.d = 1017828820;
    } catch(e4) {
    }
    try {
        this.g = 1017828820;
    } catch(e5) {
    }
}
new F0();
new F0(F0);
new F0();
const v11 = Float64Array?.arguments;
try { new v11(Float64Array); } catch (e) {}
const v13 = new Float64Array(3474);
try { v13.every(v13); } catch (e) {}
new BigUint64Array(10);
new Array(-13);
4n < 4n;
function f23() {
    return 4n;
}
%OptimizeFunctionOnNextCall(f23);
const v24 = f23();
v24 << v24;
