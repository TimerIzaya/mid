const v3 = /\1(a)/um;
const v4 = /1(ab|cde)\1/ui;
const v5 = /a\fb\nc\rd\te\vf/vdiy;
function f6(a7, a8) {
    const o13 = {
        valueOf(a10, a11) {
            try {
                f6.__proto__ = v4;
            } catch(e12) {
            }
            return v3;
        },
        "d": v4,
        "h": v4,
        "g": a7,
        "e": 410990812n,
        "b": v4,
    };
    return o13;
}
f6(v5, 410990812n);
f6(v3, 410990812n);
f6(v4, -2n);
[1.0,-680.0428134152268,0.25062783195319793,-2.2250738585072014e-308,4.0];
[1.7976931348623157e+308,0.0,2.0,-1000000000.0,2.7569131855429063e+306,0.9357761033197805,0.0,-5.138191320076258];
[-899029.7787091999,3.087606844194069e+307,-4.0962091306020426e+307,1.7976931348623157e+308,0.03801808291450437,3.351448923847082,-1.4386787267809504e+308,4.0];
-33506n >> -33506n;
true && true;
const v29 = [-1.7602408547300875e+307,-5.0,6.800823572256861e+306,-1000000000000.0,2.2250738585072014e-308,681.5038956878516,-1.5358312952840025e+308,2.220446049250313e-16];
function F30() {
    if (!new.target) { throw 'must be called with new'; }
    this.g = this;
}
function F33(a35, a36, a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor;
    const o41 = {
        get b() {
        },
    };
}
new F30();
const v43 = new F30();
new F30();
const v46 = new WeakSet();
function F50(a52, a53) {
    if (!new.target) { throw 'must be called with new'; }
    const v54 = this?.constructor;
    let v55;
    try { v55 = new v54(v46); } catch (e) {}
    new Date(..."undefined");
    function F60() {
        if (!new.target) { throw 'must be called with new'; }
        this.h = true;
    }
    v55 / v43;
    try {
        new F50(undefined, undefined);
    } catch(e65) {
    }
    try {
        this.c = a52;
    } catch(e66) {
    }
    try {
        this.b = undefined;
    } catch(e67) {
    }
}
class C68 {
    static n(a70) {
        let v69 = this;
        --v69;
        v43.h = v46;
        function f73(a74, a75) {
            const o77 = {
                get g() {
                    return a75;
                },
            };
            const t80 = 5;
            const v80 = new t80(5);
            function f81() {
                return v80;
            }
        }
        for (let v82 = 0; v82 < 60; v82++) {
        }
        return -9007199254740992n;
    }
    static get c() {
        eval();
    }
    constructor(a89) {
        function* f90(a91, a92) {
            yield* v29;
            return a91;
        }
    }
    static #a;
    /*
    constructor(a94, a95) {
        try {
            false || false;
            a94.fuck(false, this);
        } catch(e99) {
            const v100 = e99?.constructor;
            try { new v100(a95); } catch (e) {}
            function f102() {
                new Int8Array(1073741823);
            }
        }
    }
    */
    static #c = F30;
    #b = F30;
    #f;
    7 = v43;
    h;
}
const v106 = new C68();
v106[7] = v106;
function f107(a108, a109) {
    return f107;
}
class C110 {
}
new C68();
255 * 255;
~14900153;
const v120 = [-1.3667473485475811e+308,1.7976931348623157e+308,5.0,-3.583919688173468e+307,-1.5320462342133301e+308,-414873.4859108749,286122.8434793174,866.7395286670867,-1000.0,-742782.9714922046];
v120[Symbol.toPrimitive] = f107;
function f124(a125, a126, a127, a128) {
    function f129(a130, a131) {
        let v132;
        try { v132 = ("-1073741824").indexOf(); } catch (e) {}
        Math.trunc(a127);
        Math.asin(a127);
        v132 && a130;
        const v138 = ~a130;
        a130 ^ v138;
        Math.max(v138);
        return a125;
    }
    a125.valueOf = f129;
    a127 * a127;
    function f142() {
        const o150 = {
            __proto__: v120,
            valueOf(a144, a145) {
                return v120;
            },
            ["-1073741824"](a147, a148, a149) {
            },
        };
        const v151 = o150.copyWithin();
        v151[6] = v151;
        return v151;
    }
    f142();
    const v153 = [];
    function F154(a156, a157, a158, a159) {
        if (!new.target) { throw 'must be called with new'; }
        const v160 = this.constructor;
        try { new v160(a159, v153); } catch (e) {}
        a157[2];
    }
    %OptimizeFunctionOnNextCall(f142);
    return a125;
}
("29753").replaceAll("29753");
const v168 = new Float32Array();
v168.length >>>= 16;
[1024,1024];
Array(3);
for (let v173 = 0; v173 < 10; v173++) {
    v173 - v173;
    f124(v120, f124, v173, v173);
}
%OptimizeFunctionOnNextCall(f124);
f124("-1073741824", v120, v120, f124);
const v177 = [-2.0733633074075275,758.551210727333,2.220446049250313e-16,-1000000000.0,2.2250738585072014e-308,4.584857663377264,0.052658458769146654,-6.7235106526199395];
[1.0,1000000000.0];
try { v177.lastIndexOf(649182.3717798681); } catch (e) {}
try { ("azp").strike(); } catch (e) {}
function F185() {
    if (!new.target) { throw 'must be called with new'; }
}
