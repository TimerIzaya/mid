class C3 {
    static set g(a5) {
        for (let v6 = 0; v6 < 32; v6++) {
            const t3 = "string";
            t3["p" + v6] = v6;
        }
    }
    static #d;
    [-4294967295] = -4294967295;
    static f = -5.0;
}
const v9 = new C3();
const v10 = new C3();
const v11 = new C3();
function F12(a14, a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = C3;
    } catch(e18) {
    }
}
const v19 = new F12(v10, v11, v9, v9);
const v20 = new F12(v10, v10, C3, v11);
new F12(v10, "string", v10, v20);
function F22() {
    if (!new.target) { throw 'must be called with new'; }
}
const v24 = new F22();
function F25(a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
}
new F25();
const v32 = [];
function F34() {
    if (!new.target) { throw 'must be called with new'; }
    const v36 = this.toString(this, F34, F34, this);
    Date.toString(F34, 9223372036854775807).replaceAll(v24, -37859n);
    const v42 = new Uint32Array(Uint32Array, Uint32Array, 4);
    const v45 = new Set(v32);
    const v46 = v45.add;
    try { new v46(v42); } catch (e) {}
    const v49 = v45["delete"](839612.5677247904);
    const v50 = v49 || v49;
    v50 || v50;
    const v52 = v50 && v50;
    const o54 = {
    };
    o54.b = o54;
    o54.e = 19793;
    try { new Array(9223372036854775807); } catch (e) {}
    let v58;
    try { v58 = ("getPrototypeOf").blink(); } catch (e) {}
    v58[28].strike();
    const v61 = v58.strike(591114.0785999324);
    let v62;
    try { v62 = v61.replace(19793, v36); } catch (e) {}
    v62[11] = v62;
    class C64 {
        [v62] = -1.7976931348623157e+308;
    }
    class C65 extends C64 {
        ["getPrototypeOf"] = C64;
    }
    let v66;
    try { v66 = new C65(); } catch (e) {}
    let v67;
    try { v67 = new C65(); } catch (e) {}
    v67.getPrototypeOf;
    let v69;
    try { v69 = new C65(); } catch (e) {}
    const v70 = v69?.getPrototypeOf;
    try { new v70(); } catch (e) {}
    const v72 = new v66();
    const v73 = v20.getPrototypeOf;
    try { v73(v67); } catch (e) {}
    let v75;
    try { v75 = new Date(); } catch (e) {}
    try { v75.propertyIsEnumerable(v62); } catch (e) {}
    const v77 = v75?.constructor;
    let v78;
    try { v78 = new v77(v58, this, 4); } catch (e) {}
    try { v78.constructor(); } catch (e) {}
    const v80 = v72.constructor;
    let v81;
    try { v81 = new v80(F34, v52); } catch (e) {}
    const v82 = v81?.getPrototypeOf;
    v82?.apply;
    try { new v82(); } catch (e) {}
    for (const v86 of Array(19793)) {
    }
}
new F34();
const v88 = new F34();
v19.constructor;
const t93 = v88.constructor;
new t93();
