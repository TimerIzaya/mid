const t0 = "symbol";
const v4 = delete t0[1];
const v6 = new v4();
v6.setUTCMinutes(1073741825, v4, v4);
class C8 {
    1334061064;
    get d() {
        const t7 = "resizable";
        t7[1059041480] = 61628;
        function f10() {
            function F11(a13) {
                if (!new.target) { throw 'must be called with new'; }
                const v14 = this.constructor;
                v14.prototype;
                try { new v14(); } catch (e) {}
            }
            const v17 = new F11(f10);
            new F11(v17);
            return f10;
        }
        let v19;
        try { v19 = ("resizable").toUpperCase(); } catch (e) {}
        const v21 = Symbol.iterator;
        const o35 = {
            [v21]() {
                let v23 = 10;
                const o34 = {
                    next() {
                        v23--;
                        const v27 = v23 == 0;
                        const o33 = {
                            "done": v27,
                            8: this,
                            "e": this,
                            "type": "resizable",
                            n(a29) {
                                const o31 = {
                                };
                                return Worker(o31);
                            },
                            "value": v23,
                        };
                        return o33;
                    },
                };
                return o34;
            },
        };
        return v19;
    }
}
function f36() {
    return f36;
}
function f37() {
    return f37;
}
const o39 = {
    [f37]() {
    },
};
const v41 = [[o39]];
function f42(a43, a44) {
    return a44;
}
const v47 = ["function",v41];
const o48 = {
    "arguments": v47,
    "type": "function",
};
new Worker(f42, o48);
const v50 = new C8();
const v51 = new C8();
const v52 = [Infinity,-1.7411766874642142e+308,-1000000.0,-1000000000000.0,-1000.0,-8.633030896336538e+307,3.4879373433419367,3.0,4.0,0.3217386216666849];
function f54(a55, a56) {
    new Int32Array(v52);
    a55();
    a56();
    return f54;
}
const v60 = new C8();
function F61(a63, a64) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a64;
        const t85 = "g";
        t85[14] &&= 14;
        const v69 = new Int32Array(2890);
        v69.lastIndexOf();
    } catch(e71) {
    }
    try {
        this.d = v50;
    } catch(e72) {
    }
    class C75 {
        static #p(a77, a78) {
        }
        #h;
    }
    const v79 = new C75();
    const v80 = new C75();
    function f81(a82, a83, a84, a85) {
        const o86 = {
            "c": -922911.6474995338,
            242: -922911.6474995338,
            "g": v79,
            [a85]: a83,
            [C75]: a83,
            "a": -747634.1081113975,
            "h": a82,
            "f": a85,
        };
        return o86;
    }
    const v88 = f81(f81(v47, v80, C75), v80, v47, v47);
    const v89 = f81(v79, v80, v88, v88);
    class C90 {
        constructor(a92, a93) {
            function f94(a95, a96) {
            }
            const v100 = [v47,v89];
            const o101 = {
                "arguments": v100,
                "type": "function",
            };
            new Worker(f94, o101);
        }
    }
}
new F61("14", v50);
const v104 = new F61(v51, v60);
new F61(v104, v60);
Math.log2(0);
