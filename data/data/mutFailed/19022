let v5 = 1224978996n;
v5--;
[2.220446049250313e-16,3.0,2.0,-3.6945559401814035e+307,7.967361890267263,-7.253616087833091e+307];
[1000000000000.0,-665017.8906632569,-4.726331251618365,418811.1124100308,0.5023752226169146,NaN,4.0,4.4919487538799613e+307];
[-3.239117706460881,-2.2250738585072014e-308,2.220446049250313e-16,0.0,-2.0,1000.0,0.15913084801238597,0.689910827784196,-332.31737236020285];
-4294967296 ^ -4294967296;
let v14 = -128n;
v14--;
function F18(a20, a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    function f24() {
        function f25() {
            const v28 = new BigInt64Array(8);
            const v31 = new Uint8Array(7);
            function f33() {
                class C37 {
                    static #m(a39) {
                    }
                }
                const v41 = new Float32Array();
                let v42;
                try { v42 = v41.entries(); } catch (e) {}
                v42.next();
                new C37();
                try { v28.reduce(Int32Array, 12); } catch (e) {}
                const v46 = new C37();
                const v47 = new C37(v42);
                [257828.6336153492,v47,v46];
                const v49 = [];
                class C50 extends BigInt64Array {
                }
                v49.constructor;
                class C52 extends v47 {
                }
                C52.a = f24;
                const o53 = {
                    [a21]: v31,
                    "h": 257828.6336153492,
                };
                return Int32Array;
            }
            return 7;
        }
        return a21;
    }
    Object.defineProperty(this, "constructor", { configurable: true, get: f24 });
    try { this.constructor(a23, 9, 9, a23); } catch (e) {}
    function F55(a57, a58) {
        if (!new.target) { throw 'must be called with new'; }
        function f59() {
            const v60 = [-Infinity,1.7976931348623157e+308,1.0,1.7976931348623157e+308,-1.0,Infinity];
            ~-65536;
            v60.length >>>= -65536;
            return v60;
        }
        const v63 = f59();
        try { v63.group(this); } catch (e) {}
        try {
            new a20(a21, a57);
        } catch(e66) {
        }
    }
    new this();
}
new F18();
