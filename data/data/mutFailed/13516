/[abc|def]/gvdm;
/i(?<!)/gdisy;
/J\b[\c!]xC\u{12345}/isy;
new Uint32Array(6);
new Float64Array(129);
new BigInt64Array(64);
function f14(a15, a16, a17) {
    return a17;
}
const v20 = [f14,4294967297,,];
const o21 = {
    "arguments": v20,
    "type": "function",
};
new Float32Array(6);
let v27 = 12;
v27--;
new Int8Array(v27);
try { new Uint8Array("GItt", v27, Uint8Array); } catch (e) {}
const v34 = new Uint8Array(135);
let v36 = 10;
v36--;
new BigUint64Array(v36);
try { new Float64Array(v34, Float64Array, "g"); } catch (e) {}
new Int8Array(4);
for (const v44 in "GItt") {
    new Float64Array(2147483647);
    /TI\u{12345}\u{23456}ab|c/uim;
    const v47 = /k/vdis;
    v47.a = v47;
}
const v49 = /a\sHa*?/v?.toString;
try { new v49(); } catch (e) {}
/(?:ab)|cde/gvis;
new Worker(f14, o21);
