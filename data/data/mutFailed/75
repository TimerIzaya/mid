const v2 = new Int32Array(9);
const v5 = new Int16Array(2540);
v2["forEach"](9, v5);
v5.length;
[-4294967297];
[-17494,8,-13,9223372036854775807,3,-474312568];
[9007199254740991,-920565537,34068,-10318,-2490,-39558,2,4294967296,-1057023211];
new BigUint64Array(3956);
new Set();
/[tlD]/vdims;
function f0() {
}
function f4(a5) {
    const o36 = {
        [a5]: 6n,
        set g(a7) {
        },
        [-595211427n]() {
        },
        "g": f0,
        [6n](a10) {
            const v11 = this != this;
            let v12 = 512n;
            const v13 = v12++;
            const v14 = [-781727972,-2,10,-14,268435456,16,341131571,-1535576263,-45048,10000];
            const v15 = [58957,51643,2147483647,-70391776,-10,-13];
            const o17 = {
                "e": v14,
                "a": a5,
                [v13]: a5,
                [v15]: 1405977585,
            };
            v11 ? this : a5;
            let v22 = 0.8673549947721082;
            this ** 65537n;
            !v22;
            this || 65537n;
            try { this.toExponential(129n); } catch (e) {}
            const o32 = {
                [4]: "function",
                set h(a31) {
                },
            };
            return o32;
            Math.tan(v22);
            Math.atan(v22);
            v22--;
            return a5;
        },
    };
    return o36;
}
f4(-595211427n);
f4(65537n);
f4(6n);
new Int32Array(3908);
function f45(a46) {
    return Float64Array;
}
function F47(a49, a50) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        function F51() {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v53 = new F51();
        function f54() {
            return this;
        }
        Object.defineProperty(v53, -1, { writable: true, enumerable: true, get: f54 });
    } catch(e55) {
    }
}
new Int32Array(512);
class C60 {
    get e() {
    }
    static [38567] = -57641.03148885199;
}
const v62 = new C60();
const v63 = new C60();
v63.toString = f45;
const v64 = [6.929526887701016,-252289.71684125415,0.0,-5.0,1000000000000.0,-1000.0];
v64[Symbol.toPrimitive] = f45;
function F67(a69, a70, a71, a72) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = v64;
    this.a = a71;
}
const v73 = new F67(v62, v64, v62);
v63.toString(-57641.03148885199, v73);
new BigUint64Array(123);
class C79 {
    constructor(a81) {
        const v83 = new Map();
        try { this.setUTCHours(a81, Map, v83); } catch (e) {}
        %VerifyType(a81);
    }
    static valueOf(a86, a87) {
        super.d = C79;
    }
}
new C79(2);
/s1(\1a)/mviy;
const v90 = /a\S\xf0\x9f\x92\xa9/msuyd;
const o91 = {
    __proto__: C60,
    268435456: 38567,
    "g": f0,
    [v64]: 38567,
    "maxByteLength": 2,
    "g": v64,
    "b": v90,
};
