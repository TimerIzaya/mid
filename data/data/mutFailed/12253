const v1 = new WeakSet();
v1[8] = WeakSet;
function f4(a5) {
    function F6() {
        if (!new.target) { throw 'must be called with new'; }
        this.h = 268435440;
    }
    const v9 = new F6();
    v9.h;
    return v1;
}
Object.defineProperty(Uint32Array, "toString", { writable: true, configurable: true, value: f4 });
const v11 = new Uint32Array(3);
3106 >>> 3106;
let v14 = Uint32Array;
v14.length = v14;
const v15 = new v14(3106);
let v16 = 7;
v16++;
const v19 = new Uint8Array(v16);
const v21 = ([-1.1280280914991145,Infinity,3.9611870039077868,-176.83488033638412,-1.7976931348623157e+308,1000000000.0,1000.0,-2.0,-0.0,-2.0])?.constructor;
let v22;
try { v22 = new v21(v15); } catch (e) {}
const v23 = [25.728654213544814];
if (v21) {
    v11[242];
} else {
    v11[1220285066] |= 3106;
}
const v25 = [689762.7092363439];
class C26 {
    [Uint8Array];
    constructor(a28, a29) {
        a28[0] = C26;
        a29.valueOf = f4;
        a29 - a29;
        const v31 = a28[0];
        v31 != v31;
        v14 %= v14;
        super[Uint32Array] = a28;
        v16 in v1;
        [-1000000000.0,0.38549423437108443,2.220446049250313e-16,2.0,-1.630406698381603e+308,0.0,-3.5939039774968577];
        ([1.7976931348623157e+308,27130.322769695544,0.6088344360246061,2.2250738585072014e-308,1.0694849295948423e+308,2.220446049250313e-16])[3];
        [1000.0];
    }
    [v16] = Uint8Array;
    static 7;
    static [Uint8Array] = v25;
    7 = Uint8Array;
    1073741825 = Uint32Array;
}
try { v11.forEach(v22, C26); } catch (e) {}
const v39 = v19[10];
new Uint8Array(v15, v39, v39);
try {
    new C26(-44754, v25);
} catch(e43) {
}
new C26(v23, 3);
const v45 = new C26(v25, v16);
v45[0] = Uint32Array;
v45[1073741825] = v45;
const v46 = new C26(v45, v16);
v46[1073741825] = v46;
Uint8ClampedArray[0] = Uint8ClampedArray;
try { ("undefined").lastIndexOf(v25); } catch (e) {}
("undefined").localeCompare("undefined");
const v53 = new Float32Array(Uint8ClampedArray, Uint8ClampedArray, Float32Array);
v53.toString = f4;
v53[0] = v53;
