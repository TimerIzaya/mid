class C1 {
    static {
        [];
        try {
            super.setInt8();
        } catch(e5) {
        }
    }
}
function F7() {
    if (!new.target) { throw 'must be called with new'; }
}
const v9 = [-1.7976931348623157e+308,1.567547754457685];
const v11 = new Uint32Array(v9, v9, Uint32Array);
const t14 = v11.constructor;
new t14(v9);
const v15 = [-256,97556949,38459,257,536870889,1000,1029231334];
[2147483648,6,-990911132,-9223372036854775808,4294967295,-6];
const v17 = [9007199254740992,2,45716,-481946537,-4096,45358,-9007199254740991,536870889];
class C18 {
    static m(a20, a21, a22) {
        this[4294967295n] ^= 3;
        super.e = this;
        Int16Array.g = -49300;
        function f31() {
            2156 | Int16Array;
            return -222991958;
        }
        class C35 {
        }
        const v36 = [-268435456,-9007199254740990,11,-25356,-536870912,4294967296,1520296454];
        function f37(a38, a39) {
            function F41(a43) {
                if (!new.target) { throw 'must be called with new'; }
                139837843 in this;
            }
            new F41();
            new F41(a39);
            const o47 = {
                __proto__: v36,
            };
            return o47;
        }
        v15.group(f37);
        return a20;
    }
    static [C18] = 1073741823;
    set d(a50) {
    }
    static 268435439 = v9;
    #o(a52, a53) {
        const v54 = super.h;
        a52 > 1073741823;
        return v54;
    }
    [v15];
}
new C18();
const v57 = new C18();
new C18();
[v17,[v57,v57],-26272];
function f61() {
    for (let v62 = 0; v62 < 5; v62++) {
        function f63() {
            return f63;
        }
        Array(36862, C18);
    }
    return C18;
}
[-26272];
Math.cbrt(Math);
