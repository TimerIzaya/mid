class C3 {
    static {
        let v6;
        try { v6 = C3["n"](this); } catch (e) {}
        try {
            super.p(512, v6, "n", v6);
        } catch(e8) {
        }
    }
    #b = 354.3221846765007;
    #c;
    static [512] = 512;
    static [C3] = -2.2250738585072014e-308;
}
const v9 = new C3();
const v10 = new C3();
const v11 = new C3();
class C12 extends C3 {
    #p(a14, a15, a16, a17) {
        this[354.3221846765007] = a15;
        try {
            super.o(v9, this, 354.3221846765007, this, C3);
        } catch(e19) {
        }
        return a16;
    }
    a = C3;
    static 7 = v10;
    d;
    static 5 = v11;
}
new C12();
new C3();
new C12();
new Int16Array(114);
new BigInt64Array(730);
new Int8Array(3631);
const v34 = new Uint8Array(128);
let v35;
try { v35 = v34.reduce(); } catch (e) {}
function f36() {
    const o96 = {
        m(a40) {
            let v41;
            try { v41 = a40.next(a40, 1261703539); } catch (e) {}
            a40.c = a40;
            a40.h = a40;
            const o42 = {
            };
            const t49 = -65535;
            t49.h = v41;
            o42.h = o42;
            function f43(a44, a45, a46) {
                return o42;
            }
            f43.caller = v41;
            try {
                o42.e = -65535;
            } catch(e47) {
                new Uint8ClampedArray(798, -65535, e47);
                new Uint8ClampedArray(798, ...114, o42);
            }
            try {
                const o52 = {
                };
                o52.e = 1261703539;
            } catch(e53) {
            }
            let v55;
            try { v55 = ("EV").link(); } catch (e) {}
            let v56 = 376363416;
            class C57 {
                static [v56];
                static {
                    super.b = this;
                    let {...v59} = this;
                }
            }
            let v60 = 0;
            class C61 {
            }
            const v64 = new Int8Array(1261703539);
            let v65 = 3;
            let v67 = 0 >> 0;
            for (let i = 0; i < 5; i++) {
                [...v65] = v64;
                v65++;
            }
            const o69 = {
            };
            try {
                for (let i = 0; i < 5; i++) {
                    ({"c":v35,"d":v60,...v67} = v55);
                    try {
                        o42.fuck(128, a40);
                    } catch(e72) {
                    }
                    v56++;
                    new Uint8Array(-65535);
                    const o77 = {
                    };
                    0 < 5;
                }
                const o80 = {
                };
                const v82 = new String(String);
                class C83 {
                    #p(a85, a86, a87, a88) {
                    }
                    constructor(a90, a91) {
                        try {
                            v82.#p();
                        } catch(e93) {
                        }
                    }
                }
                const o94 = {
                };
            } catch(e95) {
            }
            return v60;
        },
    };
    return o96.m(o96);
}
f36();
f36();
