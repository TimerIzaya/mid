class C1 {
}
const v2 = new C1();
with (v2) {
    h = C1;
}
Uint8ClampedArray.BYTES_PER_ELEMENT;
new Uint8ClampedArray(1000);
const v14 = new Int32Array(10);
1135 - 1135;
try { BigUint64Array(-12, -12, v14); } catch (e) {}
for (let v20 = 0; v20 < 10; v20++) {
    (759956410).__defineGetter__;
}
new BigUint64Array([-4]);
new BigUint64Array(1135);
0.941857606566444 + 0.941857606566444;
function F30(a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    const v34 = a32 % a32;
    v34 - v34;
    a33 >>> a33;
    const v37 = this.constructor;
    v37.length = v37;
    try { new v37(0.8735699512350641, -3.413527541634011e+307); } catch (e) {}
    const v40 = new Int32Array(1106346622);
    v40.toSorted();
    for (let v42 = 0; v42 < 5; v42++) {
        const o44 = {
        };
        gc(o44);
    }
}
new F30();
function F47(a49, a50, a51) {
    if (!new.target) { throw 'must be called with new'; }
}
const v55 = new Uint8Array(512);
v55[148] ||= 444;
new F30(0.941857606566444, 0.941857606566444);
