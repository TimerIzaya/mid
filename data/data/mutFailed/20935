const v0 = [-1.3854413828809721e+308,2.220446049250313e-16,856.7320851249292,3.0,2.220446049250313e-16];
[-Infinity,-6.076162850733392e+307];
const v2 = [-555493.2913752983,1.7976931348623157e+308,6.291304375901305,-0.0];
new Float32Array(0);
const v8 = new Int32Array(1896);
const v11 = new Uint8Array(8);
class C12 {
    static #f = v11;
    268435440;
    16 = v2;
    f;
    static {
        try {
            this.#f;
        } catch(e15) {
        }
        const v16 = this.a;
        TypeError.abs(v16);
        -13 % v16;
        TypeError.clz32(v16);
        548271634 ^ v8;
        v8 << v16;
    }
}
new C12();
const v26 = new C12();
new C12(v26, v8, C12);
function f28(a29, a30, a31) {
    function f32(a33) {
        return f32;
    }
    const o36 = {
        "type": "function",
    };
    new Worker(f32, o36);
    return f28;
}
const v38 = [427812215,61195,-2147483647,4096,-2147483647,30905];
function f39(a40, a41, a42, a43) {
    try { a42.find(a40, a42, a41, v38, a41); } catch (e) {}
    try { v38["find"](..."find", a43, v0, ...v38); } catch (e) {}
    return a40;
}
class C47 {
    #b;
    constructor(a49, a50, a51, a52) {
        function F53() {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v55 = new F53();
        const v56 = [6.345269750596144e+307,1.5426121797865451e+308,-1.0,1.0763754168130034e+308,-1.0165609707268582e+308,-2.220446049250313e-16,4.1652134965708285,Infinity,8.22884515469082e+307,-1000000000.0];
        function F57(a59, a60, a61) {
            if (!new.target) { throw 'must be called with new'; }
            const v62 = this.constructor;
            try { new v62(v55); } catch (e) {}
            a59[3] = a59;
        }
        new F57(v56);
    }
}
const v65 = new C47();
new Float32Array();
for (let v69 = 0; v69 < 5; v69++) {
    const v70 = ~v69;
    class C73 extends (472608997).constructor {
    }
    class C75 {
        constructor(a77, a78) {
            const v79 = this.constructor;
            try { new v79(); } catch (e) {}
            this[16] >>>= 16;
        }
    }
    v65[836499325] = v70;
}
const v82 = new Array();
const v85 = new Uint16Array(1896);
const v86 = v82[205];
function F87(a89, a90, a91, a92) {
    if (!new.target) { throw 'must be called with new'; }
    [586209.1308562411,9.273207833056233,-793.5051180378861,-88.02009084622205,1000.0,5.993768942190951e+307,0.6895260767593681,3.203916786355496,1.7976931348623157e+308,-1.0422896205696638e+308];
    a90 >> a90;
    a92 | a92;
    v65.dotAll = v65;
    const v96 = [-268435456,-9007199254740990,11,-25356,-536870912,4294967296,1520296454];
    function f97(a98, a99) {
        function F101(a103) {
            if (!new.target) { throw 'must be called with new'; }
            139837843 in this;
        }
        new F101();
        new F101(a99);
        const o107 = {
            __proto__: v96,
        };
        return o107;
    }
    function f108() {
        return f108;
    }
    for (const v109 of v85) {
        v86?.h;
    }
}
new F87();
new F87();
new Int8Array(628786973);
new F87();
