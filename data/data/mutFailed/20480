function f0() {
    for (let v1 = 0; v1 < 5; v1++) {
        function f2(a3) {
            return f2;
        }
    }
    const v6 = -Infinity;
    const o21 = {
        "d": v6,
        "defineProperty": f0,
        "h": "MAX_VALUE",
        1: 1e-15,
        4: "MAX_VALUE",
        "e": 1e-15,
        ..."MAX_VALUE",
        valueOf(a8, a9) {
            this[2765832126] = "MAX_VALUE";
            ~this;
            a9 |= this;
            const v12 = [1000.0,-1.7976931348623157e+308,1000000.0,1000000000000.0,-1000000000000.0,-863970.4344405974,1.7873969073744563e+308,0.0];
            new Int8Array(v12);
            const t21 = "GaY9";
            t21[v12] >>= -4.0;
            const v16 = [9,-47820,-4096,255,-24350,-65537,-9,41191,-974938014];
            [6,-1404085174,10,-2147483649,-4,2,256,65537,1073741825,-5];
            [-65537,-13013,1073741824,65537,9007199254740991,4096,-42646,-268435456,-4];
            try {
                super.o(v16);
            } catch(e20) {
            }
            return 1e-15;
        },
    };
    return o21;
}
const v22 = f0();
const v23 = f0();
const v24 = f0();
v24[5];
class C26 extends f0 {
    static 8 = v22;
    static toString(a28) {
        new Float32Array(1);
        new Uint8ClampedArray(3343);
        new BigUint64Array(1518);
        return 3343;
    }
    h = v24;
    static {
        super.b = this;
        let {...v39} = this;
        v39[8];
    }
    static #p(a42) {
        function f43() {
            return a42;
        }
    }
    static [v22] = v23;
}
new C26();
new C26();
const v46 = new C26();
v46[5] = v46;
676164046 | 676164046;
-9007199254740990 >>> -9007199254740990;
let v53 = 536870887;
class C56 {
}
new C56();
const v59 = new Int16Array();
try { Date.parse(v22); } catch (e) {}
class C62 {
    static {
        try { new this(); } catch (e) {}
        for (let v65 = 0; v65 < 25; v65++) {
            v53++;
            ([-3.0,4.0,1.7381830731777672e+308,-Infinity,0.053627216611518036])[4];
            const v71 = -3.0 | -9007199254740992;
            v71 === v71;
            function f73() {
            }
            f73.d = f73;
            function f74(a75, a76, a77, a78) {
                a76.prototype = a76;
                a77 >>> a77;
                a78.prototype = a78;
                const v80 = /8/vdiy;
                try {
                    b = v80;
                } catch(e81) {
                } finally {
                }
                const v82 = f73();
                const v84 = new Int8Array(v59);
                try { v84.entries(); } catch (e) {}
                let v86 = 4;
                v86++;
                class C88 {
                }
                try { C88(); } catch (e) {}
                const v90 = [-1024];
                for (let v91 = 0; v91 < 5; v91++) {
                    delete v90[v91];
                }
                139837843 in v59;
                const v96 = 0 <= 0;
                !v96;
                const v99 = new Int8Array(this, v65, v65);
                for (const v100 in v99) {
                    0 ^ v96;
                    Float32Array[1] = -3.0;
                    const v104 = new Uint8Array();
                    class C106 extends Float32Array {
                        constructor(a108, a109, a110) {
                            super(a110);
                        }
                    }
                    new C106(1, v104, Float32Array);
                }
                536870887 <= 536870887;
                BigUint64Array * 536870887;
                function f116(a117, a118) {
                    return v82;
                }
                const v119 = v84.buffer;
                try { v119.transferToFixedLength(); } catch (e) {}
                Object.defineProperty(v119, "constructor", { writable: true, configurable: true, value: Date });
                const v121 = new Int8Array();
                const v122 = v121?.__defineSetter__;
                try { new v122(Int8Array, Int8Array); } catch (e) {}
                return f74;
            }
            f74.name = f74;
            for (let v124 = 0; v124 < 5; v124++) {
                f74(this, this, v65, Date);
            }
        }
    }
}
