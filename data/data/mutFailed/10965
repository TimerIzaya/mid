function f0() {
}
function f1(a2) {
    const v3 = /v*/vdms;
    class C4 {
        1855;
        [v3];
    }
    const v5 = new C4();
    f0(3706, 3706, C4, v5);
    return f0;
}
f0[Symbol.toPrimitive] = f1;
class C13 {
    m(a15) {
        super[a15];
        f0 * this;
        return f0;
    }
    static {
        for (const v22 in "Q5ret") {
            try {
                f0();
            } catch(e24) {
            }
        }
    }
}
const v25 = new C13();
const v26 = new C13();
new C13();
class C28 extends C13 {
    45;
    constructor(a30, a31, a32) {
        super();
        super.e = f0;
    }
    static [f0];
    toString(a35, a36) {
        for (const v37 in C13) {
            try {
                f0();
            } catch(e39) {
            }
        }
        return a36;
    }
}
new C28("o", v26, C28);
new C28("4lzl", C13, v25);
new C28("o", C13, v25);
function f43() {
    return C28;
}
const v45 = Array();
const v46 = [6];
function f47(a48, a49) {
    try { a48.p(); } catch (e) {}
    new Int8Array(8);
    return 8;
}
v46.toString = f47;
const v54 = v46.copyWithin(v46, v46, Array);
function f55(a56, a57) {
    new f47(v25, "4lzl");
    const v59 = [8];
    Symbol(v26, v26, Symbol, v59);
    Array.e = v59;
    return f47;
}
v54.toString = f55;
v45.entries().hasOwnProperty(v54);
