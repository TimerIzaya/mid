class C3 {
    #a;
    8 = "symbol";
    constructor(a5) {
        try {
            a5.#a;
        } catch(e7) {
        }
    }
    [C3];
    h = "symbol";
    [C3];
    static #p(a9) {
        return a9;
    }
}
new C3("symbol", "symbol");
new C3("Ni6R");
new C3(-2.2250738585072014e-308);
function f19() {
    return -2.2250738585072014e-308;
}
const v21 = new Uint8ClampedArray(Uint8ClampedArray, Uint8ClampedArray);
let v23 = -2;
const v24 = v21 & v23;
v23++;
Math.cbrt(v24);
const v4 = new Map();
class C5 {
    static set h(a7) {
        let v6 = this;
        try {
            v6 = a7;
        } catch(e8) {
        }
    }
    static toString(a10) {
        return Map;
    }
    static [v4];
    e = v4;
}
const t15 = "r9se";
new t15();
const v15 = new C5();
const v16 = new C5();
function f20() {
    return 13170;
}
class C21 extends Map {
    static #o(a23, a24) {
        a24--;
        for (let v26 = 0; v26 < 32; v26++) {
            const v28 = "p" + v26;
            v28[v28] = v26;
        }
        return f20;
    }
    constructor(a30, a31, a32, a33) {
        super("r9se");
        function f34(a35, a36) {
            function f38(a39) {
                new Int8Array(2238);
                new Int8Array(4);
                new Float32Array(1000);
            }
            this.onmessage = f38;
            let v50 = -65537;
            a32--;
            const v53 = +-653891.5151603543;
            v50--;
            v53 << f20;
            Math.asinh(v50);
            !-653891.5151603543;
        }
        const v60 = ["function",a30];
        const o61 = {
            "arguments": v60,
            "type": "function",
        };
        new Worker(f34, o61);
    }
}
new C21(f20, C21, 268435440, v16);
new C21(13170, v16, v4, C21);
new C21(2127601868, v15, "e", v16);
const v67 = [null];
const v68 = [v67,v67,v67];
const v69 = [v68,v68,v68,v68,v68];
const v72 = new Float32Array(512, 512, 512);
v72[268435441] -= 512;
v68.a = v69;
