class C3 {
    static 11;
    m(a5, a6) {
        let v4 = this;
        v4 = a5;
        let v7 = delete v4?.[-1000.0];
        v7 ||= -1000.0;
        super[-9007199254740992];
        return -9007199254740992;
    }
    #f = -1000.0;
    c;
    #e = -9007199254740992;
    static #b = -9007199254740992;
    #p(a10, a11, a12, a13) {
        super.m();
    }
    static {
        [];
        try {
            super.setInt8();
        } catch(e18) {
        }
    }
    257 = 2;
    static valueOf(a20, a21, a22) {
        class C23 {
        }
        function f25() {
            return 2147483648n;
        }
        f25();
        new a22();
    }
    static 1 = -1000.0;
    static 2544510523 = -1000.0;
    static #f;
    8;
    static #a;
    static 3 = -1000.0;
    static #h = -9007199254740992;
}
const v30 = new BigInt64Array(2325);
for (const v31 in v30) {
}
const v32 = new C3();
const v33 = new C3();
const v34 = new C3();
const v35 = [v32,v34,v32,v33];
([Uint32Array,Uint32Array,Uint32Array,Uint32Array]).push();
new Uint8ClampedArray();
const v41 = [-1000.0,C3,v34,-9007199254740992,v34];
const v42 = [2,v34];
function F46(a48, a49) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -9007199254740992;
    } catch(e50) {
    }
}
new F46(-1000.0, v41);
new F46(v42, v35);
new F46(-2.0, v35);
const v54 = [12];
let v55 = 8;
"asIntN" / "number";
class C59 {
}
v55++;
v54.toLocaleString();
const o8 = {
    "c": "c",
    [0.8270476620027499]: 0.43223002794581145,
    "g": 0.8270476620027499,
    [0.8270476620027499](a7) {
    },
    [-1]: "c",
};
const v17 = [1000,-14,16,-11,-1413918991,-16,-374255446,-14,1000,10];
v17.sort();
class C19 {
}
new C19();
new Float64Array(9);
new Uint32Array(1024);
new BigInt(219);
let v28;
try { v28 = C19.n(128n, 0.43223002794581145, "c"); } catch (e) {}
function F29(a31, a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a33;
    } catch(e34) {
    }
    try {
        this.g = a32;
    } catch(e35) {
    }
    try {
        this.h = a32;
    } catch(e36) {
    }
}
new F29(1024, v17, v28);
new F29(1024, Uint32Array, 219);
new F29(1024, 0.43223002794581145, 13);
class C41 {
}
const v42 = new C41();
function f43() {
    const o48 = {
        valueOf(a47) {
        },
        __proto__: v42,
        [-52276]: -410.8373818683839,
    };
    return o48;
}
new Float32Array(64);
new Int32Array();
try {
    const t51 = 0.43223002794581145;
    t51[6] = 4294967297n;
} catch(e54) {
    e54.b = e54;
}
new Uint8Array();
gc();
for (let v61 = 0; v61 < 10; v61++) {
}
const o66 = {
    set b(a63) {
        Math.log10();
    },
};
try {
    Array(13);
} catch(e70) {
}
const v71 = new Date();
[-4294967296,2147483648,59550,-110129571,7,-13,37327,268435456,12,4294967295];
try {
    undefined.fuck(Math, undefined, "QBK");
} catch(e77) {
}
[536870889,1905422483,1,4,51721,3,61976,127,15];
try {
    gc();
} catch(e80) {
}
%VerifyType(Date);
[3];
function f82(a83, a84) {
    class C86 extends WeakSet {
        [WeakSet];
        constructor(a88) {
            const v90 = new Map();
            try { this.setUTCHours(a88, Map, v90); } catch (e) {}
            %VerifyType(a88);
        }
    }
    const v95 = new Int16Array(Int16Array);
    new Float64Array(v95);
    for (const v103 in ([128,-3.0,1345971329,-3.0]).indexOf()) {
    }
    const v106 = new Float64Array(6);
    const v107 = [-1000000000.0,8.875318016177975,-3.0,2.0,-1000000.0,-1.1495704468113836e+308];
    function f108() {
        return v107;
    }
    const t100 = [];
    t100.__proto__ = [-1.186509519390384,511705.75845111,564.6944804057682,-910.2692815793228,2.2250738585072014e-308,0.4492890111145277,-5.476170620650189];
    const t102 = "function";
    delete t102[v106];
    new BigUint64Array(128);
}
f82(128, v71);
