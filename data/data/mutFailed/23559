function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    this.length = a5;
    a5[5];
    const v7 = a5?.search;
    v7.length;
    try { new v7(a5); } catch (e) {}
    try {
        this.h = a5;
    } catch(e10) {
    }
}
const v11 = new F3("-36180");
v11.length;
const v13 = new F3("-4294967297");
function f14(a15) {
    %VerifyType("-36180");
    const v16 = /(?<a>.)\k<a>?/vdimsy;
    function f17() {
        return v16["test"]("test");
    }
    f17();
    return a15;
}
v13.constructor = f14;
const v21 = v13.h;
let v22;
try { v22 = v21.charAt("dtz60"); } catch (e) {}
const v23 = new F3("-36180");
v23.length = v23;
function f24(a25, a26, a27, a28) {
    a25.length = v21;
    const v29 = a25?.constructor;
    try { new v29(f24); } catch (e) {}
    try { a28.match(v23); } catch (e) {}
    a26.length;
    const o42 = {
        __proto__: a27,
        m(a34, a35, a36, a37) {
            class C38 extends F3 {
                #c;
                268435441;
                static 4294967296 = a34;
            }
            new C38();
            new C38();
            new C38();
            return a26;
        },
        "e": a25,
        4: a26,
    };
    return o42;
}
f24[5] = f24;
const v43 = f24(v13, v13, "-36180", "dtz60");
const v44 = f24(v13, v13, "dtz60", "-36180");
const v45 = v44[4];
function f46(a47) {
    v22 = v44;
}
Object.defineProperty(v45, "e", { writable: true, enumerable: true, set: f46 });
v45.e = v45;
const v48 = f24(v11, v11, "-36180", "-4294967297");
function f49(a50, a51) {
    a50[1] = "-4294967297";
    const o60 = {
        1073741823: v13,
        [a50](a53, a54, a55) {
            delete a54?.a;
            for (let v57 = 0; v57 < 32; v57++) {
                a50["p" + v57] = v57;
            }
            return "-4294967297";
        },
        "e": v48,
        "a": "-4294967297",
        "d": "-4294967297",
        "h": v13,
    };
    o60.h = o60;
    return o60;
}
const v61 = f49("-36180", v43);
v61[1073741823] = v61;
f49("-4294967297", v44);
f49(f49, v48);
try { new Int8Array(f49, v48, f49); } catch (e) {}
const v66 = [1000.0,-1.7976931348623157e+308,1000000.0,1000000000000.0,-1000000000000.0,-863970.4344405974,1.7873969073744563e+308,0.0];
v66[2] = v66;
const v67 = new Int8Array(v66);
try { v67.filter(v13); } catch (e) {}
const v69 = v67[5];
v69 - v69;
