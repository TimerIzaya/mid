[0.06090734366751582,-4.295716355057073e+307,1.7976931348623157e+308,-1.7524201088380417e+308];
[-5.0,-5.580032044539416,Infinity,2.220446049250313e-16,-899954.6088284521,338.014376895587,-1.0];
const v2 = [-1.7976931348623157e+308,1.1016354870041063,432712.0825182111,-0.0,-1000.0,5.0,-101.96670663858856,2.2250738585072014e-308];
class C9 {
    toString(a11, a12, a13, a14) {
        const v15 = (a16, a17, a18, a19) => {
            return -9223372036854775807;
        };
        return -9007199254740990;
    }
    #d = -4294967295;
    static #a;
    [-9007199254740990];
    static c;
    static #g;
    55;
}
const v23 = new C9();
new C9();
const v25 = new C9();
class C26 {
    static #d = -13549;
    5 = -4294967295;
    valueOf(a28, a29) {
        if (a28) {
            v2[3] = this;
        } else {
            for (let v30 = 0; v30 < 32; v30++) {
                C9["p" + v30] = v30;
            }
        }
        return v25;
    }
    a = -9223372036854775807;
}
new C26();
new C26();
const v35 = new C26();
function f37(a38, a39, a40, a41) {
    function* f42(a43, a44) {
        v2[10];
        return yield a40;
    }
    f42(a41, v23);
    return a39;
}
const v48 = f37();
let v49 = -4294967297n;
v49++;
const v52 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
v52[Symbol.toPrimitive] = f37;
const v55 = [601759695];
const v56 = [1073741824,1073741823,1376142744,1073741825];
function f58(a59, a60, a61, a62) {
    function f64(a65) {
        return a65;
    }
    Object.defineProperty(arguments, "toString", { enumerable: true, value: f64 });
    function f66() {
        const v73 = a62 << 0.28963498121041586;
        const v75 = v73 ** ~a62;
        "Vre" - v73;
        Math.sqrt(0.28963498121041586);
        -9223372036854775807 || v75;
        let v79 = -268435456;
        v79--;
        const o92 = {
            "c": v49,
            [522675525n](a82, a83) {
            },
            "maxByteLength": -128,
            "c": v55,
            "b": -4294967295,
            ...-48404n,
            __proto__: -128,
            get d() {
                return v49;
            },
            "e": v79,
            "maxByteLength": f64,
            "arguments": v52,
            ...v55,
            "type": "Vre",
            ..."Vre",
            valueOf(a86, a87) {
            },
            "c": v79,
            "type": "Vre",
            "type": "Vre",
            toString(a89, a90, a91) {
                return a90;
            },
            5: -4294967295,
            6: v79,
        };
        try { o92.valueOf(); } catch (e) {}
        return v55;
    }
    f66();
    Int8Array.a = v35;
    Int8Array.a = Int8Array;
    Math.log1p(a62);
    let v99;
    try { v99 = Reflect.defineProperty(Reflect, a59, v56); } catch (e) {}
    try { new Int8Array(a60); } catch (e) {}
    Int8Array.a = Int8Array;
    const v101 = new Int8Array(v56, a60);
    let v102;
    try { v102 = v101.findIndex(v48); } catch (e) {}
    const v103 = v101.buffer;
    function f104(a105) {
        return f104;
    }
    v99.constructor = f37;
    const v106 = f104.constructor;
    try { v106(); } catch (e) {}
    v103.constructor = f104;
    v103.slice();
    %OptimizeFunctionOnNextCall(f66);
    Math.hypot(2118178369 | -31491);
    Math.sqrt(522675525n);
    let v116;
    try { v116 = ("find").strike(v102, v106, arguments, Int8Array); } catch (e) {}
    let v117;
    try { v117 = v116.match(v52, v2); } catch (e) {}
    const o118 = {
    };
    o118.e = v52;
    o118.e = a60;
    const o119 = {
    };
    o119.g = v117;
    o119.g = v49;
    try {
        let o120 = {
        };
        function f121(a122) {
            o120 = a122;
            return a122;
        }
        Object.defineProperty(o120, "g", { set: f121 });
        o120.e = a60;
    } catch(e123) {
    }
    try {
        const o124 = {
        };
        function f125(a126) {
            return o124;
        }
        Object.defineProperty(o124, "g", { writable: true, set: f125 });
    } catch(e127) {
    }
    try { v56["find"](..."find", a62, ...v55, ...v56, ...522675525n); } catch (e) {}
    return -128;
}
for (let v129 = 0; v129 < 5; v129++) {
    f58();
}
%PrepareFunctionForOptimization(f58);
f58();
%OptimizeFunctionOnNextCall(f58);
f58();
