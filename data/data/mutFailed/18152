/L/uimsy;
const v4 = /\P{Any}/gvd;
const v5 = /abc|def|ghi+/vdisy;
const v7 = 1024 >>> 1024;
const v10 = -9223372036854775808 + -9223372036854775808;
try { new Array(1024); } catch (e) {}
v4[105] = 1024;
Array(v10);
const o19 = {
    "maxByteLength": 4016099572,
};
const v21 = new ArrayBuffer(2647, o19);
new Int16Array(v21);
for (let v25 = 0; v25 < 71; v25++) {
    delete Array[Worker];
    const o31 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o31);
}
const v33 = Array(87);
o19.maxByteLength += v7;
Uint32Array.name = Uint32Array;
const v39 = new Uint32Array();
const v40 = v39?.constructor;
try { new v40(-9223372036854775808, -9223372036854775808, 1024); } catch (e) {}
const v44 = new Float32Array(144);
const o45 = {
};
const v47 = new Proxy(Float32Array, o45);
v47.BYTES_PER_ELEMENT;
v39.subarray();
[...v39,-3.0,v5];
try {
    v39.a = Float32Array;
} catch(e54) {
}
const v55 = new Array(...v44, ...v33);
v55[v47] = Float32Array;
