const v1 = new Set();
function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a11;
    } catch(e12) {
    }
    try {
        this.d = a11;
    } catch(e13) {
    }
    try {
        this.b = a10;
    } catch(e14) {
    }
}
new F8(v1, -9);
const v16 = new F8("-2147483647", -9);
new F8(Set, -9);
class C24 {
    static #a = 5n;
    [3n];
    static c = 3n;
}
const v25 = new C24();
const v26 = new C24();
const v27 = new C24();
function F28(a30, a31, a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = a33;
    this.c = a33;
}
const v34 = new F28(41372n, v27, v25, v27);
new F28(v27, v27, v25, v16);
const v36 = new F28(v27, -9, 41372n, v34);
class C37 {
    a = -1;
    static #c;
    static #e = C24;
    static ["-2147483647"];
    h = v36;
    #f;
    6 = v34;
}
const v38 = new C37();
new C37();
new C37();
[-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v44 = [601759695];
const v46 = [];
function F47(a49, a50, a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    a49.lastIndexOf(a49, a50);
}
const v54 = new v26(v46);
const v55 = v54.constructor;
try { new v55(); } catch (e) {}
const v57 = [1073741824,1073741823,1376142744,1073741825];
function f59(a60, a61, a62, a63) {
    function f65() {
        const o88 = {
            "c": -4294967297n,
            "arguments": v44,
            [v46]: v38,
            "h": "Vre",
            ...-268435456,
            "c": -4294967295,
            [522675525n](a70, a71) {
            },
            ...-4294967295,
            "maxByteLength": -128,
            "c": v44,
            valueOf(a73, a74) {
                return a62;
            },
            "e": -268435456,
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v57,
            ...v44,
            "type": "Vre",
            ..."Vre",
            valueOf(a76, a77) {
                return a60;
            },
            get d() {
                Symbol.toPrimitive;
                const o81 = {
                };
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            toString(a83, a84, a85) {
                return a60;
            },
            m(a87) {
                return a87;
            },
            "execution": "UHH",
            "execution": "UHH",
            5: -4294967295,
            6: -268435456,
        };
    }
    f65();
    const v91 = new Int8Array();
    v91.buffer;
    a61.slice(a62);
    %OptimizeFunctionOnNextCall(f65);
    try { v57["find"](..."find", a63, ...v44, ...v57, ...522675525n); } catch (e) {}
}
for (let v97 = 0; v97 < 5; v97++) {
    f59();
}
%PrepareFunctionForOptimization(f59);
f59();
%OptimizeFunctionOnNextCall(f59);
f59();
