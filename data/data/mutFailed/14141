let v1 = -9007199254740991n;
function f3(a4) {
    a4++;
    const o10 = {
        set f(a7) {
            new Set();
            v1 = (a7 = 7n);
        },
        2530368454: v1,
        [7n]: a4,
        [a4]: a4,
        5: 129n,
    };
    return o10;
}
const v11 = f3(129n);
const v12 = f3(7n);
const v13 = f3(v12);
function f14(a15, a16) {
    new f3(f3);
    new Map();
    return v11;
}
v13[Symbol.toPrimitive] = f14;
try { v13.isPrototypeOf(f3); } catch (e) {}
function F23(a25, a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = v12;
    a27 << a27;
    try {
        this.e = a27;
    } catch(e30) {
    }
}
const v31 = new F23(v11, v12, 7n, 7n);
v31.e = v31;
new F23(v11, v11, 7n, 129n);
const v33 = new F23(v11, v13, v13, v1);
const v34 = v33.e;
/\c4a.[(x)(x)(x)\4*(x)(x)(x)\3*]/gmy;
delete v13?.f;
[61094,16,9007199254740991];
[9007199254740990,1737266674,0,256,10000,256,16944,-1981957381,-4096,1073741823];
const v40 = [9007199254740992,58582,4294967295,7,4294967295,1393857771,1166450381,-4096,7];
try { v34(v40, 129n, v40, v40); } catch (e) {}
