class C3 {
    static #p(a5, a6) {
    }
    #h;
}
const v7 = new C3();
const v8 = new C3();
const v9 = new C3();
function f10(a11, a12, a13, a14) {
    const o15 = {
        "c": -922911.6474995338,
        242: -922911.6474995338,
        "g": v8,
        [a14]: a12,
        [C3]: a12,
        "a": -747634.1081113975,
        "h": a11,
        "f": a14,
    };
    return o15;
}
const v17 = f10(f10(v7, v8, C3), v9, v7, v7);
f10(v8, v9, v17, v17);
const v21 = /(ab|cde)\1j\u{12345}/gudm;
/a{0,1}?/guy;
/a??/gvy;
gc(256);
function F27(a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
}
const v31 = new F27();
const o32 = {
    129: v31,
};
class C36 extends Float32Array {
}
const v37 = new C36();
v37.reverse;
const v40 = v21.__proto__;
function f42() {
    return ("D")[0].substring();
}
f42();
for (let i51 = (() => {
        0 >>> 0;
        return 11516;
    })();
    (() => {
        const v53 = i51 < 9;
        !v53;
        return v53;
    })();
    i51++) {
}
try {
    v40.toString = v40;
} catch(e58) {
}
const v59 = [1822426921,30784,65537,1313715380,1461058395,-12];
[1073741825,9007199254740991,-1073741824,9071,-2,0,32527,-3,12817,11];
const v62 = new gc(1777166993);
const v64 = v62.buffer;
v64.slice(v64, 5);
[-1658954348,268435441,1000,-128];
function F67(a69, a70, a71) {
    if (!new.target) { throw 'must be called with new'; }
    const v73 = new Int8Array();
    v73.buffer.slice(a70, a70).transferToFixedLength();
    v59 << 8.107975650385214e+307;
    v73 << v59;
}
new F67(F67, F67, F67);
