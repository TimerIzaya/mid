const v0 = [-1000000000000.0,-1000000000.0,534147.0760619165,170.60377455680214,-0.0,4.0,NaN,4.831092219511191];
function f1() {
    const o7 = {
        [-352741132]: -352741132,
        set b(a5) {
        },
        get c() {
            return this;
        },
        "b": 2.220446049250313e-16,
    };
    return o7;
}
v0[Symbol.toPrimitive] = f1;
const v10 = [-1000.0];
const v11 = [-1000000000000.0,-191.75766676803323,0.0849452481193862,3.0];
function F12(a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        v11.h = v11;
    } catch(e16) {
        function f17() {
            let v18 = -9223372036854775808n;
            v18 %= 45725n;
            return 45725n;
        }
        %OptimizeFunctionOnNextCall(f17);
    }
}
const v20 = new F12(F12, v11);
const v21 = new F12(F12, v11);
const v22 = new F12(v0, v10);
const v23 = [];
class C24 {
    [v23];
    set a(a26) {
        a26 === v23 ? a26 : v23;
        [v23,a26,a26,v23];
        [v23];
        [a26,v23,v23,v23,v23];
    }
    static [v23];
    #f;
    h = v23;
}
const v32 = new C24();
function f36(a37, a38) {
    const o42 = {
        "h": v22,
        "f": v11,
        "f": -965.6867948197274,
        [-965.6867948197274]: 658289.5541257409,
        "execution": v32,
        "a": a38,
        "arguments": v10,
        toString(a40, a41) {
            switch (v20) {
                case v0:
                    v22[2146] = a38;
                    break;
            }
            return F12;
        },
        [v0]: v20,
    };
    return o42;
}
f36(v21, 1.0);
function f44(a45, a46) {
    const o47 = {
    };
    return o47;
}
const v48 = f44(f44, f44);
function f49(a50) {
    v48[213];
    return a50;
}
f36(v22, -965.6867948197274);
f36(v21, 1.0);
function f57(a58, a59, a60, a61) {
    for (let v62 = 0; v62 < 5; v62++) {
        0 == 5n;
    }
    return a60;
}
for (let v65 = 0; v65 < 5; v65++) {
    f57(v65, v65, 5n, f57);
}
const v67 = new Uint8ClampedArray(3);
class C68 {
    constructor(a70, a71, a72, a73) {
        for (let v74 = 0; v74 < 5; v74++) {
            v67[v74] = a73;
        }
    }
}
new C68();
