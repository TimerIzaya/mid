const v0 = [544.1804153947983];
const v1 = [-2.413751880417147e+307,1.6230304769944248e+308,0.7527953429085357,0.0];
[1000000.0];
for (let v4 = 0; v4 < 10; v4++) {
    const v5 = [1929306256,-35796];
    try { v5["36049"](); } catch (e) {}
}
new WeakSet();
function f12(a13, a14, a15) {
    const o47 = {
        64: -42233,
        "c": v0,
        m(a17, a18, a19) {
            function f25() {
                const t14 = [];
                t14[6] = 4294967295;
                new Int32Array();
                const o40 = {
                    get b() {
                        return Int32Array;
                    },
                    "c": f25,
                    toString(a33, a34, a35) {
                        return this;
                    },
                    4294967295: Uint8ClampedArray,
                    m(a37) {
                        return 4294967295;
                    },
                    "h": 9007199254740991,
                    ...4294967295,
                    set b(a39) {
                    },
                };
            }
            %OptimizeFunctionOnNextCall(f25);
            return 8770;
        },
        "f": v1,
        "g": WeakSet,
        ...a15,
        get d() {
            this[-42233] /= -42233;
            let v43 = -908890636;
            Math.log(this & --v43);
            return this;
        },
        "h": a15,
    };
    const v48 = [63765,63765];
    class C50 extends a14 {
        [v48];
    }
    return o47;
}
f12(v0, -42233, 2147483648);
f12(v1, 2147483648, -42233);
f12(v0, 63765, 2147483648);
const v57 = new BigInt64Array(257);
[Reflect,Reflect,Reflect,v0];
class C60 {
    static #p(a62) {
        return a62;
    }
}
new C60();
new BigUint64Array(v57);
