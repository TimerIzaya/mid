let v2 = -10;
class C3 {
    get f() {
        "SR5" >>> "SR5";
        return "227331841";
    }
    constructor(a8) {
        a8 = v2;
        try { this["expm1"](); } catch (e) {}
        v2 *= a8;
        delete this[2713260503];
    }
}
const v14 = new C3("227331841");
const v15 = new C3("SR5");
const v16 = new C3(v15);
function F17(a19, a20, a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a22;
    } catch(e23) {
    }
    try {
        this.a = a22;
    } catch(e24) {
    }
    try {
        this.f = a21;
    } catch(e25) {
    }
}
const v26 = new F17(v14, v15, v16, v15);
const v27 = new F17(v14, v26, v15, v14);
new v2(v27, v26, v15, v15);
const v32 = [-9223372036854775808];
[1000,9007199254740990,4,-4294967296,-1911934186,5,-1686];
new Uint8ClampedArray(5);
function F37(a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    const v41 = this?.constructor;
    let v42;
    try { v42 = new v41(this, a40); } catch (e) {}
    this.c = v42;
}
const v43 = [-16,-2,-56243,65535,268435439,17491,-65535,4294967296];
const v47 = [-65535n,-65535n,-10n];
[v47,-10n,-65535n];
const v49 = [v43,-65535n,v43,-57761n];
[-10n,-10n,-10n];
const v51 = [v49,-57761n,v32,v47,-65535n];
[v51,v49,v51,v47];
const v53 = [3.836595330454784e+307,-1.1402235194805368e+308];
const v54 = [991.721527488573,-290835.2265090322];
try {
    v53.length = 2499;
} catch(e56) {
}
[-1.0,-1000000.0,-6.453134415503834e+307,-2.2250738585072014e-308,1e-15,-228003.00463890494,1.9400411482062907,-197.7029619198281,Infinity];
const v59 = /(?:a*)+q(?<a>.)/guds;
function f60(a61) {
    const o65 = {
        set b(a63) {
        },
        get d() {
            return a61;
        },
        __proto__: v59,
    };
    return o65;
}
f60(v59);
const v67 = new WeakMap();
const v72 = (5).slice(9, "g").normalize();
try { v72.substring(v54, WeakMap); } catch (e) {}
class C74 {
    constructor(a76, a77) {
        a77.sup(v72, a76).toLocaleLowerCase();
    }
}
const v80 = [v54,v67];
[v67];
const v82 = [v54,v67];
try { v82.pop(); } catch (e) {}
const v84 = /(x)(x)(x)\1/uis;
function f85(a86, a87, a88, a89) {
    const o96 = {
        4294967295: v80,
        [v84](a91, a92, a93, a94) {
            super.test();
        },
    };
    return a87;
}
class C98 {
}
const v101 = [295968041,[-1024,536870889,65536,65536]];
const o102 = {
    "arguments": v101,
    "type": "-1723624938",
};
-8298n <= -8298n;
8.438590633230234e+306 / 8.438590633230234e+306;
const t100 = [-936145422,536870912,127,257,-36772,-15984,2];
t100.length = 6;
const v112 = [];
function f113() {
    gc(256);
    function* f118(a119) {
        yield [9007199254740990,-4294967296,-1205995130,-12581,9];
        return -1.7570084557226905e+308;
    }
    const o125 = {
        toString() {
            super[this];
            return this;
        },
        ...v112,
        n() {
            return this;
        },
    };
}
f113();
f113();
gc.caller;
function f130() {
    function f131(a132) {
        try {
            const o133 = {
            };
        } catch(e134) {
        }
    }
    try {
    } catch(e135) {
    }
}
gc();
const v139 = new Uint8Array(165);
const v140 = v139.lastIndexOf();
v140 | v140;
const v143 = (a144, a145, a146, a147) => {
    function F148(a150, a151, a152, a153) {
        if (!new.target) { throw 'must be called with new'; }
    }
};
try { v143(Uint8Array, v140, v140, 8.438590633230234e+306); } catch (e) {}
