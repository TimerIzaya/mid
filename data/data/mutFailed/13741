const v0 = /\P{Decimal_Number}a+(\2)(\1)/vmy;
const v1 = /a(?!b)?/gvdm;
/ab|c/udims;
class C6 {
    static #e;
    a = 1000000000.0;
    static #h = v1;
    static n(a8, a9, a10, a11) {
        const o15 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o15);
        return this;
    }
}
new C6();
new C6();
const v19 = new C6();
class C20 {
    static get a() {
        try { this.toString(v0, v19, this, C6); } catch (e) {}
        const o26 = {
            "execution": "sync",
            "type": "minor",
        };
        class C30 {
            static #g;
            constructor(a32) {
                const v33 = this?.constructor;
                try { new v33(C30); } catch (e) {}
                let {"c":v35,"g":v36,"length":v37,} = "size";
                C30 & v35;
                let v39 = v36?.[7];
                [...v39] = "size";
                C30.#g **= v36;
                /a\D\c0zR(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10*/iy;
                /a\bc/vd;
                /(?:ab)|cde/uimy;
            }
            static #h;
            static #toString(a44) {
            }
            ["size"] = "size";
            static #e = 2.2250738585072014e-308;
            static #d;
        }
        try { new C30(5.0); } catch (e) {}
        function f46(a47, a48) {
            -128 >>> -128;
            return -128;
        }
        C30.toString = f46;
        const v51 = new C30(2.2250738585072014e-308);
        v51.d = v51;
        new C30("size");
        new C30(5.0);
        const v54 = [5,255,256,-14801,268435439,4,8,-65537];
        v54[3] = v54;
        [1073741825,-44170,-54367,512,10264,-12635,257,-128,512,108882882];
        const v56 = [7,1073741823];
        try { v56.every(v56); } catch (e) {}
        [-5.0,-1000000.0];
        function f59(a60, a61, a62) {
            return a62;
        }
        f59.arguments = f59;
        "function" == "function";
        const o66 = {
            [2.2250738585072014e-308]: C30,
            "type": "function",
        };
        new Worker(f59, o66);
        return gc(o26);
    }
}
new C20();
new C20();
new C20();
const v74 = -4294967296n * 9007199254740991n;
function F75(a77) {
    if (!new.target) { throw 'must be called with new'; }
    a77 ^ a77;
}
new F75(v74);
