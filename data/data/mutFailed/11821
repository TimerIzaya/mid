new Int16Array(2344);
const v3 = [2.220446049250313e-16,1000000.0,-832083.505850983,0.4718386381385684,1000.0,-5.0,9.814259698721895e+307,-659970.7982908424,-5.0];
[v3];
function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
}
const v12 = new F6();
const v13 = v12?.__defineGetter__;
try { new v13(v3, 2344); } catch (e) {}
const v15 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v16 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
let v17;
try { v17 = v16.reduce(2344); } catch (e) {}
function F19(a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
}
F19.arguments = F19;
class C23 {
}
try { C23.toString(); } catch (e) {}
const v26 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v27 = [601759695];
function f29(a30, a31, a32, a33) {
    function f34() {
        let v37 = Float64Array;
        const v39 = Array();
        function f40() {
            return f34;
        }
        function f41(a42) {
            return F19;
        }
        Object.defineProperty(v39, 0, { configurable: true, enumerable: true, get: f40, set: f41 });
        v39.unshift(-1024);
        const v45 = new Set();
        function F46(a48, a49) {
            if (!new.target) { throw 'must be called with new'; }
            F46(a49, v45);
        }
        v37 = a31;
        const v51 = v15.length;
        try {
            v15.forEach(v37);
        } catch(e53) {
        }
        const v54 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        class C56 {
        }
        const v57 = new C56();
        try {
            v57.__proto__ = F19;
            const v58 = [];
            class C59 {
            }
            function* f60(a61, a62) {
                yield* v58;
                return v58;
            }
        } catch(e63) {
        }
        const v64 = Symbol.toPrimitive;
        const o70 = {
            toString(a66, a67) {
                const v68 = a33 && v37;
                a66 *= v64;
                return v68 <= v54;
            },
        };
        const o91 = {
            "c": v37,
            [522675525n](a73, a74) {
            },
            "c": v27,
            valueOf(a76, a77) {
                return F46;
            },
            [v17](a79, a80, a81, a82) {
            },
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v26,
            ...v12,
            [o70]() {
            },
            "type": C23,
            ..."Vre",
            valueOf(a85, a86) {
            },
            ..."Vre",
            4: "Vre",
            toString(a88, a89, a90) {
                return v15;
            },
            5: -4294967295,
            6: -268435456,
        };
        new Float32Array(1334);
        a30 %= -268435456;
        new Uint32Array(v16, v51, v64);
        try {
            new Float64Array(127);
        } catch(e99) {
        }
        new Float64Array(3);
        new Uint16Array(2);
    }
    const v106 = f34();
    %OptimizeFunctionOnNextCall(f34);
    return v106;
}
f29.length;
new Uint8ClampedArray(12);
new Float64Array(2311);
64 - v17;
/\111/dmy;
/[c]/gvdisy;
/b(?:foo)/vmsy;
v13 >>> 604.4479109019192;
const v125 = [0.3083488057663979,0.3083488057663979,0.3083488057663979];
const v126 = [604.4479109019192,-2.220446049250313e-16,0.3083488057663979,0.3083488057663979];
const v127 = [0.3083488057663979,0.3083488057663979,0.3083488057663979,-2.220446049250313e-16];
class C128 {
    constructor(a130, a131) {
        const v132 = a130?.filter;
        try { new v132(a131); } catch (e) {}
        try { a131.find(C23); } catch (e) {}
        a131[2];
        const v136 = /Ia[a]/uims;
        try { v136.toString(); } catch (e) {}
        let v138 = /W(jy2)/udy;
        const v139 = v138?.toString;
        let v140;
        try { v140 = new v139(); } catch (e) {}
        v138.flags;
        const v142 = /(u4(?:a?)*)/gudimsy;
        -2;
        const v146 = new Uint8Array(v142, C128);
        const v148 = new v140();
        function f149(a150, a151, a152, a153) {
            a151 > a151;
            const o158 = {
                ...v146,
                n(a156, a157) {
                    v148[a150] = v148;
                },
            };
            const v159 = o158?.__defineSetter__;
            try { new v159(v26, v142); } catch (e) {}
            return o158;
        }
        for (let v161 = 0; v161 < 625; v161++) {
            f149(Uint8Array, 2, v161);
        }
        v138 = v142;
        for (let v163 = 0; v163 < 25; v163++) {
            v125["p" + v163] = v163;
            const o166 = {
            };
            o166.d = o166;
            1000 >>> 1000;
            const v169 = new Uint8ClampedArray(1000);
            v169.includes(undefined);
        }
    }
}
new C128(v125, v125);
const v173 = new C128(v126, v127);
v173.g = v173;
const t168 = v173.constructor;
const v175 = new t168(604.4479109019192, 0.3083488057663979);
v175.e = v175;
