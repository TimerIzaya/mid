const v0 = [-1000000000.0,-842.9098811970064,3.0,-685507.8855215888,0.979679272410542,-262265.15067214647,0.6079603597722721,-1e-15,6.470798610462644];
[1.7607924659646486e+308,2.220446049250313e-16];
[-621798.9696334077,-1.3569938873693232e+308];
-1;
-7 < -7;
18244n * 18244n;
const v12 = [64223,65537,-1024,10,-61061,9223372036854775807,7,2,1285303017];
let v13;
try { v13 = v12.entries(); } catch (e) {}
const v14 = [1,4294967295,1073741825,-1941920034,15,-16,4294967297,-987131820,-177792901];
const v15 = [1233683876,255];
try { v15.findLastIndex(v14); } catch (e) {}
class C19 extends Set {
}
C19.a = C19;
const v20 = new C19();
[-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v22 = [601759695];
const v23 = [1073741824,1073741823,1376142744,1073741825];
522675525n != 522675525n;
function f26(a27, a28, a29, a30) {
    -a27;
    a28 | a28;
    let v33 = a29--;
    v33++;
    function f36() {
        const v38 = ("Vre")?.constructor;
        let v39;
        try { v39 = v38(v20); } catch (e) {}
        let v40 = -4294967295;
        v40--;
        const o46 = {
            "e": v40,
            ...v39,
            ..."Vre",
            "c": a30,
            "f": "-1073741824",
            84: arguments,
            ...v38,
            valueOf(a44, a45) {
                return a27;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            5: v38,
            6: -268435456,
        };
    }
    f36.arguments = f36;
    try { f36(); } catch (e) {}
    f36();
    %OptimizeFunctionOnNextCall(a27);
    let v50;
    try { v50 = v0["find"](..."find", a30, ...v22, ...v23, ...522675525n); } catch (e) {}
    const v51 = v50 <= a29;
    v51 || v51;
}
const v54 = new v13();
const v57 = new BigUint64Array();
for (let v58 = 0; v58 < 10; v58++) {
    f26(v58, v58, BigUint64Array, "-1073741824");
}
f26(v57, 3331, v54);
%OptimizeFunctionOnNextCall(f26);
f26(f26, v57, C19, 3331);
