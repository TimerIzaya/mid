function f3() {
    return -2.0;
}
function f4(a5) {
    const o15 = {
        "EPSILON": -2.0,
        get ignoreCase() {
            this.__proto__;
            for (let v8 = 0; v8 < 100; v8++) {
                f3();
            }
            return -2.0;
        },
        "e": a5,
        "b": Infinity,
        [5.0](a11) {
            function f12(a13) {
                return a13;
            }
            class C14 extends f12 {
                static #g = a11;
                static MAX_SAFE_INTEGER = this;
                static 4294967296 = Infinity;
            }
            return f12;
        },
    };
    return o15;
}
const v16 = f4(Infinity);
f4(5.0);
const v18 = f4(Infinity);
class C19 {
    static #d = -2.0;
    static get h() {
        /a[^a]/usy;
        /a[a-z]/guiy;
        /abc+?(?<=)[foo(?<!bar)baz?]?/gvdimy;
        try {
            super.fromCharCode(v16, this);
        } catch(e25) {
        }
        return -2.0;
    }
    static #h;
    [-2.0] = Infinity;
    [Infinity];
    #b;
}
const v26 = new C19();
const v27 = new C19();
new C19();
function F29(a31, a32, a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a32;
    } catch(e35) {
    }
}
const v36 = new F29(5.0, v27, v18, C19);
const v37 = new F29(-2.0, v36, v36, C19);
new F29(Infinity, v26, v37, v27);
gc();
gc();
"toString" == "toString";
("boolean").split("toString");
const o47 = {
    get f() {
    },
};
