function f3(a4) {
    a4 ^ a4;
    const o23 = {
        p(a7) {
            const v8 = super.a;
            try { new v8(this, v8, a4, this); } catch (e) {}
            --a4;
            class C15 {
            }
            class C17 extends Date {
            }
            const v18 = new C17();
            v18.setMonth(C15, C17);
            v18.setUTCSeconds();
            Math.expm1(-257604840);
            Math.sinh(-257604840);
            return a7;
        },
    };
    let v24;
    try { v24 = o23.p(f3); } catch (e) {}
    return v24;
}
f3(4294967295n);
f3(-599974756n);
f3(55274n);
const v31 = [-2.14860426829137,-9.58586124400876,2.0,2.2250738585072014e-308,0.0,-3.0,Infinity,-317.1953498647964,2.0];
class C32 extends Int16Array {
    [v31];
}
const v34 = ("-28894")[1];
3585 >>> 3585;
([1,8]).fill(3);
const v41 = [-536870912,-1454443390,-11,536870887];
let v43;
try {
const t0 = 65536n;
v43 = t0(65536n);
} catch (e) {}
v41[65536n] *= v43;
v41["splice"](-650191005, -650191005, "splice");
function f47() {
    return 3585;
}
class C48 extends v34 {
    toString(a50, a51) {
        try { this.constructor(this); } catch (e) {}
        this.constructor(a50);
        -this;
    }
}
const v55 = new C48();
const v56 = v55?.constructor;
try { new v56(); } catch (e) {}
function f58(a59) {
    return 1024 <= 3585 ? 1024 : 3585;
}
try { new f58(4294967295n); } catch (e) {}
v55.constructor = f58;
try { v55.toString(f47, 3585, 3585, f47, 1024); } catch (e) {}
