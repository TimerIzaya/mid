const v3 = new BigUint64Array(0);
const v4 = [-9007199254740991,256,5,4294967297,1,-38452,9223372036854775807,2147483649];
class C5 {
    constructor(a7, a8) {
        const v9 = a8[this];
        try { v9(v9, ...a8, ...v4); } catch (e) {}
    }
}
new Date(9223372036854775807);
class C17 {
    constructor(a19, a20, a21, a22) {
        this[this] = a22;
    }
}
const v23 = v3.constructor;
try { new v23(C17, -1.0); } catch (e) {}
const v25 = [0.20272606510323266,0.6775632016548425,4.598648676924623e+307];
v25[2] = v25;
const v26 = [182.34212838607732,1000000000000.0,-284151.6113577025,-2.0,993.3605550758255,-2.2250738585072014e-308,-1e-15,-697.183102726548];
for (let v27 = 0; v27 < 5; v27++) {
    const t20 = [-Infinity,1.7976931348623157e+308,1.0,1.7976931348623157e+308,-1.0,Infinity];
    t20.length >>>= -65536;
}
let v30;
try { v30 = v26.toString(); } catch (e) {}
v30[3];
[-0.0,NaN,0.3031330616912967,-1.1607542089622523e+308,2.220446049250313e-16,2.9855141079810334e+307,-0.0,-9.287017193111984];
let v34;
try { v34 = ("2NZuv").strike(); } catch (e) {}
v34[16] = v34;
try { ("-45620").match(v26); } catch (e) {}
let v37;
try { v37 = ("-45620").strike(); } catch (e) {}
try { v37.italics(); } catch (e) {}
try { ("bigint").strike(); } catch (e) {}
let v41;
try { v41 = ("bigint").split(v30, "bigint"); } catch (e) {}
try { v41.at(v41); } catch (e) {}
try { ("bigint").toUpperCase(); } catch (e) {}
2967 & 2967;
const v47 = new Uint32Array(2967);
v47[2231] = v47;
new Int32Array(64);
const v52 = 3543 != 3543;
const v54 = new BigInt64Array(3543);
try { v54.reduce(v52); } catch (e) {}
function F56(a58, a59) {
    if (!new.target) { throw 'must be called with new'; }
    const v60 = this.constructor;
    try { new v60(); } catch (e) {}
    function f62() {
        return F56;
    }
    %PrepareFunctionForOptimization(f62);
    f62();
    %OptimizeFunctionOnNextCall(f62);
}
try { v54.values(); } catch (e) {}
9 ^ 9;
9 / 9;
const o71 = {
    "maxByteLength": 150,
};
new ArrayBuffer(9223372036854775807, o71);
const v73 = new Uint8ClampedArray(9);
v73[6] = v73;
-2147483648 ^ 8.868704382732872e+307;
new Date(64);
v73[7] = v73;
try { BigInt64Array.from(v73); } catch (e) {}
