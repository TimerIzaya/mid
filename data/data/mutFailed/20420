const v4 = new Reflect();
try { v4.add(12n); } catch (e) {}
Int16Array.name;
new Int16Array(1311);
const v12 = new Function(7570);
try { v12.slice(v12, 1n); } catch (e) {}
new Int32Array(532);
const v18 = [Date,Date];
try { v18.reduceRight(v12, v4); } catch (e) {}
class C20 {
}
const v21 = new C20();
const v22 = v21?.constructor;
try { new v22(); } catch (e) {}
const v25 = [v21];
const v26 = Date.of;
const v27 = v26?.growable;
try { new v27(Int32Array); } catch (e) {}
Reflect.apply(v26, v18, v25);
