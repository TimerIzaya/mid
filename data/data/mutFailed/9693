let v0 = 14;
let v1 = -9007199254740990;
class C3 {
    static {
        const t4 = "symbol";
        t4[this] = this;
        v1 >>= v0;
        try { new this(this, this); } catch (e) {}
        super.c.__proto__;
    }
    static {
        const v9 = [290511.96857215906,0.3003673637544756,-458526.71260649094,0.8333335605081266,16682.170944584184,0.12597720350931985];
        const v10 = [2.220446049250313e-16,-3.0,-3.117457405711452,Infinity,2.220446049250313e-16];
        const v11 = [-2.220446049250313e-16,8.380618196344006];
        class C12 {
            g;
            static charCodeAt(a14, a15) {
                return this;
            }
            static get f() {
                v11[114] <<= v9;
                return v10;
            }
        }
        C12.e = C12;
        const v17 = new C12();
        class C18 {
            static #b;
            static get matchAll() {
                v11.toString = v17;
                v9.#b = this;
                return this;
            }
        }
        C18.b = C18;
        v0 = 65536;
        const v22 = [-13939,-12,1904189168];
        function f23(a24, a25) {
            v22[11] = v9;
            return v9;
        }
        const v26 = Symbol.iterator;
        const o35 = {
            [v26]() {
                let v28 = 10;
                const o34 = {
                    next() {
                        v28--;
                        const v32 = v28 == 0;
                        const o33 = {
                            "done": v32,
                            "value": v28,
                        };
                        return o33;
                    },
                };
                return o34;
            },
        };
        class C38 {
            constructor(a40, a41) {
                const v42 = this.constructor;
                try { new v42(a40); } catch (e) {}
                a40++;
                a41 <= a41;
                const v48 = Math.atan2(this, this);
                v48 / v48;
                16 % !this;
            }
            d = -7;
        }
        new C38(-2);
    }
}
const v53 = new C3();
const v54 = new C3();
const v55 = new C3();
function f56() {
    return v54;
}
class C57 extends C3 {
    static [v53];
    static f = v53;
    static [v0];
    g = v0;
    static h;
    static [v55] = v0;
    f;
    p(a59, a60, a61, a62) {
        ("symbol")[16];
        new C3();
        return v55;
    }
    #a = C3;
}
new C57();
new C57();
new C57();
class C73 {
    141 = "9007199254740991";
}
new C73();
new C73();
new BigInt64Array();
function f83() {
    const v87 = -65535 / -65535;
    const o146 = {
        ...352326470,
        m(a89) {
            a89.c = a89;
            a89.h = a89;
            const o90 = {
            };
            o90.d = o90;
            o90.h = o90;
            const v92 = `
                Uint8Array >> v92;
            `;
            class C94 {
            }
            function f95(a96, a97, a98) {
            }
            f95.bind();
            f95.caller = f95;
            try {
                o90.e = -65535;
            } catch(e100) {
                const v104 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v104, o90);
            }
            const o106 = {
            };
            o106.g = o106;
            o106.e = 1261703539;
            let v108;
            try { v108 = Math.expm1(128); } catch (e) {}
            v108--;
            const v111 = -9007199254740991 >> -9007199254740991;
            v111 - v111;
            -Math.sin(-9007199254740991);
            try { ("EV").link(v87); } catch (e) {}
            0 != 0;
            class C119 {
                o(a121, a122, a123, a124) {
                    class C125 {
                    }
                }
            }
            C119.name = C119;
            new C119();
            const v129 = new Int8Array(3938);
            let v130 = 3;
            const v131 = v130++;
            v131 + v131;
            class C134 {
            }
            new C134();
            const v140 = [-2.0,272822757,"function"];
            v140.toString = Symbol;
            const o141 = {
                __proto__: v140,
            };
            const v142 = 0 >> 0;
            const v143 = v142 - v142;
            v143 / v143;
            [...v130] = v129;
            const o145 = {
            };
            o145.c = o145;
            return this;
        },
    };
    let v147;
    try { v147 = o146.m(o146); } catch (e) {}
    v147.m(128);
    class C150 {
    }
    new Float32Array();
}
f83();
