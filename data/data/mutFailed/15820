function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 1073741824;
    } catch(e3) {
    }
    try {
        this.h = 1073741824;
    } catch(e4) {
        const o7 = {
            "maxByteLength": 2393,
        };
        const v9 = new SharedArrayBuffer(256, o7);
        new Int32Array(v9);
    }
    try {
        this.b = 1073741824;
    } catch(e12) {
    }
}
const v13 = new F0();
const v14 = new F0();
const v15 = new F0();
function f16() {
    return v14;
}
function f17(a18, a19) {
    const o37 = {
        [f16]: f16,
        8: a19,
        toString(a21, a22, a23) {
            const v24 = v14.h;
            try { v14["toString"](a21, a22); } catch (e) {}
            Object.defineProperty(a23, "c", { configurable: true, enumerable: true, get: f16, set: f16 });
            try { a22.for(v13, a23, a18, this); } catch (e) {}
            this[3995132054] <<= v24;
            a18[a23] = a23;
            const o29 = {
                get c() {
                    return this;
                },
            };
            try {
                v13.valueOf = a22;
            } catch(e31) {
            }
            return v15;
        },
        "b": f16,
        next() {
        },
        valueOf() {
            const v35 = /gk4b*/vmsy;
            Object.defineProperty(v35, -9223372036854775808, { enumerable: true, set: gc });
            return v35;
        },
        ...a19,
        "e": a18,
        "g": v13,
        [a18]: f16,
    };
    return o37;
}
f17(v14, v13);
f17(v14, v14);
f17(v14, v13);
const v44 = [208110799,3,536870912,879614806,1662370678];
[-1024,-42353,9223372036854775807,-9007199254740991,-816532839,-9007199254740992,-44415,-60510,-5];
[4294967295,-8258,19087];
new Uint32Array(1205620854);
new Uint8Array(268435440);
function F53() {
    if (!new.target) { throw 'must be called with new'; }
}
class C55 {
    a;
    m(a57, a58, a59, a60) {
        v44.#e;
        a58.#e = 268435440;
    }
    constructor(a69, a70, a71) {
        class C73 extends a70.constructor {
            static 4294967296;
            static {
                const o75 = {
                };
                new Proxy(this, o75);
            }
        }
        new C73();
    }
}
new C55(F53, C55);
