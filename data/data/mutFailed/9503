function f0() {
}
for (let v4 = 0; v4 < 10; v4++) {
    const t3 = "f";
    t3[1073741824] = 4294967296;
}
Float32Array.prototype;
new Float32Array(165);
const v13 = new Uint32Array();
function f14(a15, a16) {
    const o24 = {
        [v13](a18, a19, a20) {
            a16?.[a18].__proto__;
        },
    };
    return a15;
}
f14.caller;
0.057701025871222056 != 0.057701025871222056;
let v31 = -1000000000000.0;
v31--;
let v33 = v31 + v31;
v33++;
function f35() {
    Math.sinh(128);
    const v39 = [1073741824,255,-93221804,1,268435440];
    try {
        v39.length = 9;
    } catch(e40) {
    }
    return -10;
}
const v41 = f35.name;
129 >>> 129;
const v45 = new Int32Array();
const v47 = new BigInt64Array();
const v48 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
const v49 = [-1.7976931348623157e+308];
function f50() {
    return f14;
}
function f51(a52) {
    const o53 = {
    };
}
Object.defineProperty(v49, "constructor", { writable: true, get: f50, set: f51 });
try { v49.splice(v41, v49); } catch (e) {}
function f55(a56, a57, a58, a59) {
    const o65 = {
        toString(a61, a62, a63) {
            a58[a57] = a56;
            return 255n;
        },
    };
    return o65;
}
f55(v47, 129, v49);
const v68 = f55(v45, 129, v48)?.toString;
try { new v68(f35, f55, "f"); } catch (e) {}
const v70 = [0.6757262687178561];
try { v70.findLastIndex("f"); } catch (e) {}
v70.h = v70;
const v72 = [v70,-10,7.739870309388294];
const v73 = [-8617,3];
const v75 = new Map();
function f76(a77) {
    try { v13.reduce(...v48, a77, a77, ...a77, a77, 0.6757262687178561); } catch (e) {}
}
Object.defineProperty(v75, "p11", { enumerable: true, set: f76 });
function f79(a80) {
    a80.toString = f14;
    const v81 = a80.toString(v75);
    class C82 extends Map {
        [v81] = f79;
    }
    const v83 = new C82();
    const o84 = {
        ...v75,
        "f": Map,
        "h": a80,
        [-2]: v75,
        ...v83,
    };
    return o84;
}
for (let v85 = 0; v85 < 32; v85++) {
    v75["p" + v85] = v85;
}
const v88 = f79(f79);
const o89 = {
    __proto__: v88,
};
o89.f = o89;
try { v73.toString(); } catch (e) {}
const o91 = {
    "h": 165,
    "b": v73,
};
const v92 = [v72,-10,f0];
v92[2] = v92;
/0\P{Any}/uimsy;
for (let i96 = 0, i97 = 10; i96 < i97; i96 === i96, i96++) {
    i96 !== i96;
    i97 / i97;
}
