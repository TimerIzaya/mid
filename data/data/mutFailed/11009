const v3 = /Oabc|def/gms;
function f4(a5) {
    try {
        a5.valueOf = a5;
    } catch(e6) {
    }
    return a5;
}
v3.valueOf = f4;
const v7 = /i/vsy;
const v8 = /(\p{General_Category=Decimal_Number})/udmy;
const v9 = [];
class C16 {
    p(a18, a19) {
        "-1210238113" - v9;
    }
}
class C21 {
    constructor(a23, a24) {
        function f25() {
            function f26() {
                function f27(a28) {
                    const o32 = {
                        ...a28,
                        get d() {
                            const v30 = this.__lookupSetter__;
                            try { v30(); } catch (e) {}
                            return f27;
                        },
                    };
                    return o32;
                }
                return a24;
            }
            return f26;
        }
        function f33(a34) {
            for (let i = 0; i < 5; i++) {
                for (let v35 = 0; v35 < 5; v35++) {
                    class C36 {
                    }
                    for (let v37 = 0; v37 < 5; v37++) {
                        v37 > v37;
                    }
                }
            }
        }
        Object.defineProperty(this, "valueOf", { writable: true, configurable: true, get: f25, set: f33 });
        for (let i40 = 0; i40 < 2; i40++) {
            try {
                v7.b = i40;
            } catch(e46) {
            }
            this[i40];
        }
    }
}
function f51() {
    return f4;
}
function f52(a53) {
    new Uint16Array();
}
Object.defineProperty(C21, Symbol.toPrimitive, { configurable: true, get: f51, set: f52 });
const v58 = new C21(v8, v3);
function f59() {
    try { v3.compile("setTime"); } catch (e) {}
    return [4];
}
v58.valueOf = f59;
new C21(v3, v8);
const v64 = new C21(v7, v3);
function F65(a67, a68, a69, a70) {
    if (!new.target) { throw 'must be called with new'; }
    function f71(a72, a73) {
        function F74(a76, a77) {
            if (!new.target) { throw 'must be called with new'; }
            const v78 = this.constructor;
            try { new v78(); } catch (e) {}
            Math.acosh();
        }
        new F74(F74, F74);
        return "-1210238113";
    }
    this.toString = f71;
    try {
        this.h = a68;
    } catch(e83) {
    }
    v64.__proto__;
    a67 << this;
    try { a68.n(a68); } catch (e) {}
    const o90 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o90);
}
new F65(v58, -39489, v58, v58);
const v93 = new F65(C21, -1, v3, v58);
new F65(v3, -1, v93, v93);
function F95() {
    if (!new.target) { throw 'must be called with new'; }
}
const v97 = new F95();
const o99 = {
    [-1]: v97,
    get b() {
        return F95;
    },
};
