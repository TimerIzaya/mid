function f0() {
}
for (let i5 = 0; i5 < 4; i5++, i5++) {
    const v13 = (i5 / i5).e;
    null ** 536870889n;
    for (let v16 = 0; v16 < 32; v16++) {
        v13["p" + v16] = v16;
    }
    try {
        const v19 = new f0();
        const v20 = v19?.propertyIsEnumerable;
        try { new v20(v19); } catch (e) {}
    } catch(e22) {
    }
}
(1000n)[WeakMap];
try {
    const v25 = new f0();
    try { v25.constructor(); } catch (e) {}
} catch(e27) {
}
new WeakMap();
-2147483647n + -2147483647n;
let v31 = -1022596642n;
v31--;
let v34 = 1521;
const v36 = new Uint32Array(v34);
try {
    const o37 = {
    };
    new Uint32Array(o37, v34, 4294967296);
} catch(e40) {
}
v36[1437] = v36;
new Uint16Array(0);
let v45 = Float32Array;
const v46 = new v45(14);
v46[0];
function f48() {
    let v49 = this;
    function f50(a51) {
        %VerifyType(10n);
        ({"b":v34,"f":v49,...v45} = a51);
    }
    v49.onmessage = f50;
    f50 instanceof f50;
}
const v55 = [];
try { v55.reverse(); } catch (e) {}
const o57 = {
    "arguments": v55,
    "type": "function",
};
new Worker(f48, o57);
const v59 = [723200.4184824808,-1000.0,-523437.54204506474,-964793.6675249395];
for (let v60 = 0; v60 < 20; v60++) {
    let [,v61,...v62] = v59;
}
