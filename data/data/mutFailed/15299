const v3 = [-4,29979811,7,1510740940,-1903989825,3,-9007199254740990];
[1000,-65537,12,268435441,-2];
const v5 = [48135,1251487266,14,3,-38677,-34598,-4294967296,-9007199254740991,-617972882];
-Infinity;
class C9 {
    static [-1000000.0];
    static set g(a11) {
        [...v3,new.target,-1000000.0,a11];
        new Array(512);
    }
    #g = v5;
    b;
}
new C9();
new C9();
const v19 = new C9();
let v20 = /a|b/vdy;
function f21() {
    function f22(a23) {
        gc();
        return gc;
    }
    return f22;
}
Object.defineProperty(v20, "toString", { writable: true, get: f21 });
let v26 = /7Z(?:a?)+/gudsy;
const v27 = /\coQ/gdy;
function f28(a29) {
    f21(Uint8Array);
    return v19;
}
v27.toString = f28;
function F32(a34) {
    if (!new.target) { throw 'must be called with new'; }
    this[Symbol.match] = f21;
    try {
        this.e = v20;
    } catch(e37) {
    }
    try {
        this.g = a34;
    } catch(e38) {
        v27.dotAll >>= e38;
        let v39;
        try { v39 = e38(e38, v26); } catch (e) {}
        v26 = v20;
        return e38;
        v20 = v39;
    }
}
const v40 = new F32(v20);
const v41 = new F32(v26);
Object.defineProperty(v41, Symbol.match, { enumerable: true, value: f21 });
const v44 = new F32(v20);
class C45 extends F32 {
    static {
        super[v44] = v20;
        let v47;
        try { v47 = v26(F32); } catch (e) {}
        super.g |= v20;
        const v49 = super[v27.exec(v47)];
        try { v49(this, v49); } catch (e) {}
        v27[4];
        const v53 = v44 === v47 ? v44 : v47;
        try {
            v47.c = this;
        } catch(e54) {
            const o55 = {
                [e54]: this,
                "f": v53,
            };
            v41[Symbol.match];
        }
    }
    #h;
    static #g;
    g = v40;
    #b;
}
const v59 = new C45();
const v60 = new C45();
new C45();
const v62 = [-1077398797,2,1671415104,4294967297];
function f63(a64, a65, a66) {
    function f68(a69) {
        ++a69;
    }
    this.onmessage = f68;
    try {
        this.fuck(v44, a65);
    } catch(e72) {
    }
}
const v75 = [C45,v41,v20];
const o76 = {
    "arguments": v75,
    "type": "function",
    [v27]: "function",
    "d": v60,
    __proto__: v60,
    [f63]: v59,
    "e": v62,
};
[-5,-65536,-65537,14311,14,255];
function f78(a79, a80) {
    a80[Symbol.toPrimitive] = f28;
    Math.imul(3, a79 % a79);
    Math.log(3);
    a80.constructor(a80);
    return f78;
}
new Promise(f78);
