let v1 = 0.0;
class C3 {
    constructor(a5, a6) {
        20731 * 20731;
        let v10 = -899657400;
        v10 - v10;
        v10--;
        --v1;
        Math.atan2(v1 << -4.0, v1);
        class C18 {
            constructor(a20, a21) {
                const v22 = this.constructor;
                try { new v22(); } catch (e) {}
                this[16] >>>= 16;
            }
        }
        new C18();
        !-4.0;
        const v26 = Math.sign(20731);
        v26 >>> v26;
        !(!v10);
    }
    static g;
    #h = -578.4257702886501;
}
C3.e = C3;
const v30 = new C3(9.204865255100418e+307, 9.204865255100418e+307);
v30?.constructor;
try {
const t0 = -578.4257702886501;
new t0(v1, v30);
} catch (e) {}
const v33 = new C3(-578.4257702886501, -578.4257702886501);
const v34 = new C3(9.204865255100418e+307, v33);
try { v34.hasOwnProperty(v1); } catch (e) {}
function F36(a38, a39, a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
    this?.__lookupGetter__;
    try {
    const t0 = -578.4257702886501;
    new t0(a39);
    } catch (e) {}
    const v44 = v1?.constructor;
    class C45 {
    }
    const v46 = new C45();
    const v47 = new v46();
    const v50 = new Int32Array(C45, 129, 129);
    const v52 = new BigInt64Array(129);
    const v53 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
    let v54;
    try { v54 = v53.some(); } catch (e) {}
    [-1.7976931348623157e+308];
    function f56(a57, a58, a59, a60) {
        const o74 = {
            toString(a62, a63, a64) {
                let v65;
                try { v65 = a57.toString(a63, v54, a62); } catch (e) {}
                function f67(a68, a69, a70) {
                    return v46 == v47 ? v46 : v47;
                }
                f67(a64, v65);
                a59[a58] = a57;
                return v54;
            },
        };
        return o74;
    }
    const v75 = f56(v52, 129, a40);
    f56(v50, 129, v53);
    for (let v77 = 0; v77 < 5; v77++) {
        v77 % v75;
    }
    try { new v44(v1, F36); } catch (e) {}
    try {
        this.g = a39;
    } catch(e80) {
    }
    try {
        this.b = v33;
    } catch(e81) {
    }
}
const v82 = new F36(v30, v33, v34, v30);
const v83 = new F36(v82, v30, v82, C3);
new F36(C3, v83, v33, v83);
function f85(a86, a87) {
    const v88 = a86?.constructor;
    try { new v88(v1, a87); } catch (e) {}
    a87.length;
    const o101 = {
        set a(a92) {
            const o93 = {
            };
            try {
                o93.c = a92;
            } catch(e94) {
            }
            try {
                const o95 = {
                };
                o95.c = a92;
                o95.g = 9.204865255100418e+307;
            } catch(e96) {
            }
            try {
                const o97 = {
                };
                o97.c = a92;
                o97.g = 9.204865255100418e+307;
                const t110 = -578.4257702886501;
                t110.a = 9.204865255100418e+307;
            } catch(e98) {
            }
            try {
                const o99 = {
                };
                o99.c = a92;
                o99.g = 9.204865255100418e+307;
                o99.a = a86;
            } catch(e100) {
            }
        },
    };
    return v34;
}
f85(v30, v83);
const v103 = f85(v83, v34);
f85(v103, v103);
let v105 = -8n;
const v106 = v105--;
const v107 = [Infinity,-1.7411766874642142e+308,-1000000.0,-1000000000000.0,-1000.0,-8.633030896336538e+307,3.4879373433419367,3.0,4.0,0.3217386216666849];
function f109(a110, a111) {
    new Int32Array(v107);
    a110();
    a111();
    return v106;
}
new Promise(f109);
const v117 = [v105];
try { v117.toReversed(); } catch (e) {}
v117.toLocaleString();
new BigUint64Array();
new Proxy([-1000.0,1000000.0,2.220446049250313e-16,614071.3005355855,-1.0,2.220446049250313e-16], v82);
