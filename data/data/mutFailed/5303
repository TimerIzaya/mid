function f2(a3, a4, a5, a6) {
    const o14 = {
        m(a8, a9, a10, a11) {
            ("ignoreCase").normalize();
            return this;
        },
    };
    return o14;
}
f2.find = f2;
const v15 = f2(-24886, -24886, f2, -24886);
try { v15.m(...-24886, f2); } catch (e) {}
class C19 {
    static set h(a21) {
        const t14 = "m";
        t14[2051539142] >>>= a21 **= -24886;
        Symbol.toPrimitive;
        ("-1141380685")[this];
    }
    c = 8;
    static 7 = "m";
    g = 8;
}
gc();
[[-1e-15,-4.547098672084515,6.731189859503068,1000.0,1000.0,414.1111077300918,567.5737904015757]];
const v30 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v31 = [601759695];
const v32 = [1073741824,1073741823,1376142744,1073741825];
function f34(a35, a36, a37, a38) {
    function f39() {
        const v41 = [1321234440,-2012385285,503280511,-65535,-50525,1929142229];
        try {
            v41.sort(-5);
        } catch(e43) {
        }
        return v41;
    }
    Object.defineProperty(a37, "toString", { configurable: true, value: f39 });
    function f45() {
        const o62 = {
            "c": -4294967297n,
            [522675525n](a50, a51) {
            },
            "c": v31,
            valueOf(a53, a54) {
            },
            "e": -4294967295,
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v30,
            ...v31,
            "type": "Vre",
            ..."Vre",
            valueOf(a56, a57) {
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": f2,
            toString(a59, a60, a61) {
                return a35;
            },
            5: -4294967295,
            6: -268435456,
        };
    }
    f45();
    const v65 = new Int8Array();
    v65.buffer.slice(2147483648);
    %OptimizeFunctionOnNextCall(f45);
    let v70;
    try { v70 = f2["find"](..."find", a38, ...v31, ...v32, ...522675525n); } catch (e) {}
    v70 <= a37;
    return arguments;
}
const v74 = new BigInt64Array();
const v77 = new BigUint64Array();
f34(v31, -24886, false);
f34(v77, 3331, v74, 3216);
new C19();
new C19();
new C19();
new Float32Array(4);
Symbol.toPrimitive;
const v91 = /\b[gW\x60]/vi;
class C92 {
    #a;
    constructor(a94, a95, a96) {
        try {
            a95.#a;
        } catch(e98) {
        }
    }
}
new C92(v91, 0n);
new Float64Array(3513);
new BigUint64Array(9);
const v105 = [-Infinity];
v105.toString = gc;
class C106 {
}
const v107 = new C106();
v105 << v107;
