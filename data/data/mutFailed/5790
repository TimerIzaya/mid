function f0() {
    const o22 = {
        "e": "c",
        toString(a5, a6) {
            function f7(a8, a9) {
                const v12 = new Float64Array(255);
                try {
                    v12.b = a5;
                } catch(e13) {
                }
                return a5;
            }
            a5.toString = f7;
            super.d ^= -8.512061904137854e+307;
            const v17 = -8.512061904137854e+307 & -8.512061904137854e+307;
            const v18 = a5 / -8.512061904137854e+307;
            Math.cos(v17);
            v18 >> 9;
            -a5;
            return a5;
        },
    };
    o22.constructor = f0;
    return o22;
}
const v23 = f0();
function f24() {
    v23 % v23;
    const o26 = {
    };
    return o26;
}
v23.constructor = f24;
const v27 = f0();
const v28 = f0();
function f29(a30, a31) {
    a30.constructor = f24;
    a31.d = v23;
    try { a30.toString(f29, f0); } catch (e) {}
    const v33 = a30?.constructor;
    try { new v33(f0); } catch (e) {}
    const o50 = {
        "a": a30,
        ...v28,
        "f": v23,
        "e": a31,
        __proto__: v28,
        set g(a36) {
            let v37 = 0;
            do {
                function F38(a40, a41) {
                    if (!new.target) { throw 'must be called with new'; }
                    try {
                        this.f = v37;
                    } catch(e42) {
                    }
                    try {
                        this.d = v27;
                    } catch(e43) {
                    }
                }
                new F38(v28, a31);
                new F38(v28, a31);
                new F38(v27, a31);
                v37++;
            } while (v37 < 0)
        },
    };
    return o50;
}
f29.prototype;
const v52 = f29(v23, v23);
function f53() {
    return f24;
}
Object.defineProperty(v52, "constructor", { writable: true, configurable: true, enumerable: true, get: f53 });
const v54 = f29(v52, v28);
const v55 = f29(v23, v28);
[v23,v55];
const v58 = [v52,[v52,v55,v54],v54];
[-1.0769880188738126e+308,-3.0,-2.0,-4.0];
const v60 = [-4.0];
let v61;
try { v61 = v60.indexOf(v58); } catch (e) {}
v61--;
const v63 = [0.16576595940245842,4.0,-1.7976931348623157e+308];
const v65 = ("1073741824")?.toLocaleUpperCase;
try { new v65(); } catch (e) {}
class C67 {
    f = "1073741824";
}
C67.name = C67;
C67.d = C67;
const v68 = new C67();
try { ("g").trimRight(); } catch (e) {}
class C72 {
    [C67];
    static 1073741825;
    static ["YZmA"] = v68;
}
C72[1073741825] = C72;
const v73 = new C72();
try { v73.toString(); } catch (e) {}
const v75 = v73?.constructor;
try { new v75(); } catch (e) {}
try { new v75(); } catch (e) {}
try { ("indexOf").toUpperCase(); } catch (e) {}
try { ("indexOf").codePointAt(v63); } catch (e) {}
const v81 = ("YZmA")["indexOf"]("g");
v81 >> v81;
const v84 = Symbol.toStringTag;
const v86 = v84.description;
try { v86.trimLeft(); } catch (e) {}
Symbol.for(Symbol.for(v86).description);
("YZmA")[v84];
const o96 = {
    "execution": "sync",
    "type": "minor",
};
gc(o96);
