const v3 = [-1000000000000.0,-2.2250738585072014e-308,-426570.1102888837,-0.0,-4.0,5.0,0.11819894662975616];
const v4 = [6.464556653447566,-1e-15,114.08965436564131,-0.0,2.220446049250313e-16,1.5067853440464928e+308];
const v5 = [2.2250738585072014e-308,-5.0,1.779371668322731e+308,-Infinity];
class C6 {
    static n(a8, a9, a10, a11) {
        this[v5] = a11;
        %VerifyType(a8);
        return this;
    }
    constructor(a13, a14) {
        super[v4] = a14;
        const v19 = -536870912 + 598.7335734907251;
        -v4;
        Math.asin(v19);
        const v22 = Math.min(4294967295);
        Math[1093] = v22;
        e = v22;
        v4 || 4294967295;
        +598.7335734907251;
    }
}
const v28 = new C6(v3, 861750740);
new C6(v4, 1598529343);
const v30 = new C6(v5, 1598529343);
function f31() {
    return v30;
}
new Uint8Array(1623);
new Uint8Array(1977);
new Uint8Array(1);
const v44 = Symbol.iterator;
const t31 = "asin";
t31[v44] = v44;
const v46 = new Uint16Array(4294967295, 4294967295);
const v51 = new Float32Array(7);
const o58 = {
    [f31]: v28,
    "arguments": v5,
    [1977](a54) {
    },
    n() {
        return this;
    },
    m() {
        const o57 = {
        };
    },
};
const v60 = new Int32Array();
function F61(a63, a64, a65) {
    if (!new.target) { throw 'must be called with new'; }
    const v66 = this?.constructor;
    try { new v66(Uint16Array, a65, a65); } catch (e) {}
    a63 * a63;
    a65++;
    this.d = a63;
    this.g = Int32Array;
}
typeof 1977 === "symbol";
try { v46.every(f31); } catch (e) {}
4294967295 % 1977;
new F61(F61, 256, 256);
const v76 = new F61(256, v60, 4294967295);
const v77 = v76.g;
new v77(Uint16Array, v51, 7, v46, v28, Uint32Array);
class C80 {
    #a;
    constructor(a82, a83, a84) {
    }
}
new F61(256, Float32Array);
Math.asinh();
typeof v77 === "string";
const v96 = new Float32Array(Float32Array, Float32Array);
v96.h = v96;
Math.sin(F61, 1598529343);
