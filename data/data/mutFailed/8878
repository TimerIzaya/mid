const v0 = [];
class C7 {
    #valueOf(a9, a10) {
        const v12 = Symbol.match;
        this[v12] = -5.605869200168339e+307;
        function f15() {
            for (const v19 of Array(4087)) {
                v19 - v19;
            }
        }
        f15();
        const v23 = super.c;
        let v24;
        try { v24 = v0.includes(v12, v23); } catch (e) {}
        v0[4] = v0;
        v24 ** a9;
        return this;
    }
    4;
    9 = -5.605869200168339e+307;
    [-2];
    c = v0;
}
new C7();
new C7();
new C7();
/dC/vdsy;
/[{12,[\d-z](?!a)?a]/gy;
/(Y(?<=a)?)/vdims;
function f32() {
    const v35 = [8n,8n,8n,8n] > 8n;
    let v36 = 0;
    for (let v37 = 0; v37 < 5; v37++) {
        Array(36862);
    }
    while (v36 < 10) {
        for (let v43 = 0; v43 < 5; v43++) {
            "n" + v43;
        }
        v36++;
    }
    return v35;
}
%PrepareFunctionForOptimization(f32);
f32();
%OptimizeFunctionOnNextCall(f32);
f32();
