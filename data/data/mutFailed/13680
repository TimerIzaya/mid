const v0 = [-35559.39397920249,-5.0,-4.0,124.44312226827924,-0.0,1.4127368795757218e+308,0.9476617731129713,-3.0,-9.867518549810898e+307,4.0];
const t0 = [-1000000000000.0,1e-15,-3.8098220522337574,-5.495444412947363,4.815507076053805e+307,1e-15,-4.0,0.2611126557115664];
new t0();
const v5 = new Uint8Array(2, 2, 2);
const v7 = new Uint32Array();
function f8(a9, a10, a11, a12) {
    const o16 = {
        "b": a9,
        ...v5,
        n(a14, a15) {
            v7[a9] = v7;
        },
    };
    return v7;
}
const v17 = [0.5762004729603679,0.8292911758752962];
function f21(a22, a23) {
}
f21();
const v27 = new Float32Array(2);
new Int32Array(v27);
const v30 = [-4.0,-6.007808521751349e+307,-1000.0,110512.26569153159,350158.5183308574,-1.7976931348623157e+308,-3.47696790117109e+307,2.2250738585072014e-308,1.0,1000000.0];
try { v30.toReversed(); } catch (e) {}
([-2080736032,-38952,129,0])[1];
const v36 = new Uint16Array(1024);
v36[7] = v36;
const v38 = v17.constructor;
try { new v38(1024, 10n, 1024); } catch (e) {}
function f40() {
}
function f41() {
    const o46 = {
        "b": f40,
        valueOf() {
            try { this.b(); } catch (e) {}
            try { this.b(); } catch (e) {}
            [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
        },
    };
    try { o46.b(); } catch (e) {}
    return o46;
}
const v48 = [1000000.0];
v48[0] = v48;
[573186.9705486132,-1000.0,0.7874624330330814,-3.0,2.220446049250313e-16];
class C50 {
    static {
        this < this;
    }
    constructor(a54, a55) {
        new Uint16Array(a54);
    }
}
[];
const v62 = v0 > 8n;
const v63 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v64 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
const v66 = v63.length;
function f69() {
    const o96 = {
        next() {
        },
        m(a73) {
            let v72 = this;
            a73.f = a73;
            const o74 = {
            };
            function f75(a76, a77, a78) {
            }
            try {
            } catch(e79) {
            }
            try {
                const o80 = {
                };
            } catch(e81) {
            }
            try { Math.expm1(); } catch (e) {}
            let v84 = -9007199254740991;
            v84++;
            v84 >> 1.7047100695894155e+308;
            class C87 {
            }
            C87.name.codePointAt();
            const v92 = new Int8Array(3938);
            let v93 = 3;
            v72++;
            [...v93] = v92;
            const o95 = {
            };
        },
    };
    o96.m(o96);
}
f69();
f69();
new Uint32Array(v64, v66, Symbol.toPrimitive);
v62 && v62;
