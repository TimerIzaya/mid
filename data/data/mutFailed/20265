let v1 = -2.0;
class C3 {
    #p(a5, a6) {
        [v1] = "string";
        let [v7,v8] = "string";
        return a6 = v7;
    }
    toString(a10) {
        for (let v12 in "string") {
            let v15 = "-2720";
            v15[v15];
            v15 = "h";
            v12 ^= v12;
        }
        function f17() {
            return "symbol";
        }
        return v1;
    }
}
const v18 = new C3();
try {
    v18.length = 1009331785;
} catch(e20) {
}
new C3();
const v22 = new C3();
function f23() {
    return C3;
}
const v24 = [v1];
[v24,v24,"string",v22];
const v26 = [v18];
v26[0] = v26;
const v29 = new Uint32Array(130);
v29[Symbol.toPrimitive] = f23;
v29[50] = v29;
257 <= 257;
new Uint32Array(257);
const v38 = new Uint8ClampedArray(1);
v38[0];
try { Reflect.set(); } catch (e) {}
