const v5 = [155533.8602852358,2.0];
function F7() {
    if (!new.target) { throw 'must be called with new'; }
    for (const v12 of Array(19793)) {
        v5[658291203] = null;
        Array.g = Math;
        Array.cbrt();
        const v16 = Array || 0.4890055133608564;
        v16 + v16;
    }
    const v18 = [19793];
    v18.g = v18;
}
const v19 = new F7();
const v21 = [v19];
const v22 = [v21,v21,5n,-9007199254740990n];
[v22];
const v26 = new BigUint64Array(68);
new Int32Array(256);
new Int16Array(2363);
function F33() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -1052649622;
        const v38 = -(-7);
        Math.tan(v38 ** v38);
        try {
            v22.length = 256;
        } catch(e41) {
        }
        Math.sinh(BigUint64Array);
        Math.atan2(~(-1826607591 >>> v26), -1052649622);
    } catch(e48) {
    }
}
function F49(a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    const v53 = this.constructor;
    try { new v53(F33, a51, F33, v53); } catch (e) {}
    new F33();
}
new F49(F33, F49);
