const v2 = new Int8Array(1024);
function f3() {
    return Int8Array;
}
Object.defineProperty(v2, Symbol.split, { writable: true, enumerable: true, value: f3 });
new Uint16Array(224);
const v14 = new Int32Array(2008);
let v15 = 4.0;
let v16 = -1.6045911067488695e+308;
const v18 = Symbol.split;
v2[v2[v18]];
let v21 = JSON;
function f22() {
    return f3;
}
function f23(a24) {
}
Object.defineProperty(v21, "valueOf", { get: f22, set: f23 });
function F27(a29, a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    let v28 = this;
    try {
        v16 = v15;
        v15 ||= v15;
        v21 &= v28;
        v28 -= v18;
        var h = -1.0;
        v28.d = a29;
    } catch(e32) {
    }
}
const v33 = new F27(v15, v16, v15);
const v34 = v33.constructor;
v34.length = v34;
const v37 = new Uint8Array(64);
const v38 = new F27(-1.0, v15, v15);
class C40 extends WeakSet {
    static #n(a42) {
        function f43(a44) {
            return a44;
        }
        Math.exp(-359.60295377780096);
        class C48 extends f43 {
        }
    }
}
new F27(-1.0, v15, v15);
class C50 {
}
function f51() {
    return v38;
}
function f52(a53) {
    delete v2?.h;
}
Object.defineProperty(C50, "g", { writable: true, configurable: true, get: f51, set: f52 });
class C55 extends C50 {
    static [v37];
    e;
    static 3;
    static 4 = 2008;
    static p(a57) {
        eval("boolean");
    }
}
function f76(a77) {
    delete a77?.[-1.0];
}
Object.defineProperty(C55, "g", { writable: true, set: f76 });
const v79 = new C55();
const v82 = new Uint8Array(2);
function f83(a84, a85, a86, a87) {
    let v88;
    try { v88 = a84(a87, a85, v79); } catch (e) {}
    const o92 = {
        ...v82,
        n(a90, a91) {
            return v88;
        },
    };
    function f93(a94, a95, a96, a97) {
        const v98 = [-9.109766292519199,-1.3811947064786667e+308,0.09110445091766706,5.0,-385647.03832885576,0.2888431306471019];
        let v99;
        try { v99 = v98.filter(); } catch (e) {}
        return v99;
    }
    %OptimizeFunctionOnNextCall(f93);
    o92[1] = o92;
    return a87;
}
try {
    C55.g = v37;
} catch(e101) {
}
v14 + Uint8Array;
[1000000.0,1000000.0];
for (const v105 in "1024") {
}
for (let v106 = 0; v106 < 500; v106++) {
    f83(v106, v106, f83, v106);
}
