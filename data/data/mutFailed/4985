const v0 = [-9223372036854775807,19265,9,-43411,65535,-2147483649,1073741824,9223372036854775807,-1394728746,420628353];
const v1 = [-1399499960,536870887,40138,-1578365149,2053847310,2,-1073741824,1073741824];
const v2 = [8,6];
function f3(a4) {
    const o12 = {
        "g": v2,
        [v2]: v2,
        p(a6, a7) {
            const v8 = super.b;
            super.d = v8;
            const o9 = {
            };
            new Proxy(a7, o9);
            return v8;
        },
        __proto__: v0,
    };
    return o12;
}
f3.arguments;
const v14 = f3(v1);
const v15 = f3(v2);
const v16 = f3(v2);
v16.constructor = f3;
const v17 = v16?.constructor;
let v18;
try { v18 = new v17(v14); } catch (e) {}
function f19() {
    return f3;
}
Object.defineProperty(v18, Symbol.toPrimitive, { writable: true, get: f19 });
try { v18.splice(v18, v14); } catch (e) {}
1000000000.0 + 1000000000.0;
-1000000000000.0 - -1000000000000.0;
255 | 255;
const v30 = ~255;
Int32Array.constructor = f3;
const v32 = new Int32Array(255);
const v33 = v32?.constructor;
const v34 = v33?.constructor;
try { new v34(v15); } catch (e) {}
try { new v33(v32, v1, v16); } catch (e) {}
try { new Float64Array(v18, v17, v30); } catch (e) {}
let v40;
try { v40 = Float64Array.from(v16); } catch (e) {}
v40[8] = v40;
const v41 = new Float64Array(186);
const v42 = v41[43];
v42 - v42;
new Uint16Array(726);
Date[-22872n] = Date;
