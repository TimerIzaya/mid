class C3 {
    static #b = "f";
    static n(a5) {
        a5[1921] = this;
        function f6(a7, a8, a9, a10) {
            function f11() {
                return f11;
            }
            const v12 = f11();
            function f13(a14, a15) {
                const o17 = {
                    get d() {
                        return this;
                    },
                };
                return v12;
            }
            return f13(f13());
        }
        for (let v20 = 0; v20 < 10; v20++) {
            f6();
        }
        %OptimizeFunctionOnNextCall(f6);
        f6();
        const v24 = Symbol.replace;
        this[v24] = -304.7179060163352;
        return v24;
    }
    static [C3];
    ["9"];
    static h = -304.7179060163352;
    #f = "9";
}
new C3();
new C3();
new C3();
function f29() {
    new Int8Array(1073741823);
    return f29;
}
function F35(a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a38;
    } catch(e39) {
    }
    try {
        this.e = "9";
    } catch(e40) {
    }
}
const v41 = new F35("f", "callee");
const v42 = new F35(-304.7179060163352, "f");
new F35(v41, "9");
const v44 = [128,5,268435456,127,4096];
const v45 = [-185039418,1565119373,33166,29980,-4294967296,1554841923,-1646058516,-15,1,255];
function f47(a48, a49) {
    const v53 = Array();
    let v54 = 1000000000.0;
    function f55(a56) {
    }
    const v57 = f55();
    f55();
    class C61 {
        constructor(a63, a64) {
            const o67 = {
                "type": "minor",
            };
            o67.b = o67;
            gc(o67);
        }
    }
    const v69 = new C61(v57, 655864.1717298129);
    const v70 = v69.__defineGetter__;
    try { v70(4, v42); } catch (e) {}
    new C61();
    const v73 = new C61();
    v54 /= -2.2250738585072014e-308;
    for (let i75 = 0; i75 < 7; i75 + i75, i75++) {
        const v82 = new C61();
        const t80 = v82.constructor;
        new t80(i75, C3);
    }
    function f85() {
        return 3;
    }
    function f86(a87) {
        let v89 = "major";
        v89 = v73;
        Object.defineProperty(v45, 75, { enumerable: true, get: f85 });
        v44.pop().d;
        gc();
    }
    Object.defineProperty(v53, 0, { configurable: true, enumerable: true, get: f85, set: f86 });
    (-304.7179060163352).unshift(3, a48);
}
const v94 = [Infinity,1.0,-1.2272545370579378e+308,-1000000.0,5.0,1.7976931348623157e+308,5.0];
function F95() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v99 = v94(19793);
        for (const v100 of v99) {
        }
        [v99,v99,v99];
        [[]] >= Uint16Array;
    } catch(e106) {
        [];
        v94.findLastIndex;
    }
}
new F95();
new Float32Array(4096);
const v113 = [601759695];
const o118 = {
    "c": v113,
    valueOf(a116, a117) {
    },
    "e": -268435456,
};
