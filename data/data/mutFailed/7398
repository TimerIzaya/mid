function f0() {
    const o11 = {
        "f": 128,
        n(a5) {
            super.e;
            %VerifyType(128);
            return this;
        },
        get b() {
            for (const v8 of "s5wJ") {
                try {
                    super.atan(v8, v8, v8, v8, this);
                } catch(e10) {
                }
            }
            return "s5wJ";
        },
    };
    return o11;
}
f0();
const v13 = f0();
const v14 = f0();
function F15(a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = f0;
    } catch(e18) {
    }
    try {
        this.h = v14;
    } catch(e19) {
    }
}
new F15(v13);
new F15(v14);
new F15(v13);
let v31 = 1000000000000.0;
class C32 {
    b = -142.577867451237;
    [v31] = -142.577867451237;
    #m(a34) {
        const v36 = Symbol.toPrimitive;
        const o58 = {
            [v36]() {
                let v38 = Math;
                const v40 = ++v31;
                const v41 = v31 ** v31;
                v38 & (15462 ** 15462);
                +Infinity;
                (15462 || 1000000000000.0) + -142.577867451237;
                v38--;
                +v31;
                v38.log(v40);
                v38.sin(v41);
                try {
                    Symbol("toDateString");
                } catch(e57) {
                }
                return -142.577867451237;
            },
        };
        return this;
    }
}
const v61 = new BigUint64Array(1000);
const o62 = {
    ...v61,
};
new C32();
new C32();
new C32();
new Uint8Array(1246);
const v71 = new Uint16Array(512);
const t74 = [];
t74[6] = 4294967295;
ReferenceError[Symbol.toPrimitive] = ReferenceError;
ReferenceError(ReferenceError);
function F80() {
    if (!new.target) { throw 'must be called with new'; }
    typeof arguments;
    gc();
}
const v86 = new F80();
const t84 = v86.constructor;
new t84();
class C89 {
}
const v91 = new Date();
const v93 = new Set();
v93.add(v91);
new Int32Array(1);
function f96() {
}
class C97 extends f96 {
}
new C97();
[0.0,1000000.0];
function f100() {
    let v101 = 0;
    do {
        const o102 = {
        };
        try {
            o102.h = f96;
        } catch(e103) {
        }
        try {
            const o104 = {
            };
            function f105() {
                return v101;
            }
            function f106(a107) {
                2147483649 ^ 0.1627516811577343;
                +-15;
                -15 ^ 0.1627516811577343;
                -15 >> 0.1627516811577343;
                0.1627516811577343 + !-2147483649;
            }
            Object.defineProperty(o104, "f", { configurable: true, get: f105, set: f106 });
            o104.h = f96;
            o104.f = Uint8Array;
        } catch(e118) {
        }
        try {
            const o119 = {
            };
            function f120(a121) {
                Math.log10(-9007199254740992);
            }
            Object.defineProperty(o119, "h", { writable: true, set: f120 });
            o119.h = f96;
            o119.f = Uint8Array;
            o119.d = f96;
        } catch(e125) {
        }
        try {
            const o126 = {
            };
            o126.h = f96;
            o126.f = Uint8Array;
            o126.d = v71;
        } catch(e127) {
        }
        v101++;
    } while (v101 < 10)
    const v133 = Array(4087);
    v133[1861] = "Aki";
    for (const v134 of v133) {
    }
    return Array;
}
f100();
f100();
