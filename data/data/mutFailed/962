function f0() {
}
const v4 = 9 - 9;
function F5(a7, a8) {
    if (!new.target) { throw 'must be called with new'; }
    a7.g = a7;
    function f9() {
        return v4;
    }
    try {
        this.fuck(1741422263, this, f9, a7);
    } catch(e11) {
    }
    const v12 = a7?.constructor;
    try { new v12(this); } catch (e) {}
    try { new a7(f0, F5); } catch (e) {}
    try {
        this.f = 9;
    } catch(e15) {
    }
}
let v16;
try { v16 = new F5(f0, 9); } catch (e) {}
v16.f = v16;
const v17 = new F5(1741422263, -15);
const v18 = v17.f;
v17.length;
const v20 = new F5(-15, -15);
v20.f = v20;
const v21 = new F5(9, -15);
const v22 = [-42.53703274599172,-4.97340138935618,-920.1699542793081,1e-15,-2.0,-Infinity,-46247.950421157526,0.0,1e-15,-8.67404250774654e+307];
v22[9] = v22;
const v23 = [1.0,1000000.0,-4.0,1000000.0];
const v24 = [0.15178917872079012,3.0,-7.573305944809041e+307,264983.7625862125,-1000000000.0,1000000000000.0,0.1536937567588148,-1e-15,9.179789292087148e+307,0.15752996863477997];
class C26 {
}
const v27 = v21?.constructor;
const v28 = v27?.__lookupSetter__;
try { new v28(v27); } catch (e) {}
try { new v27(v24); } catch (e) {}
const v31 = new C26();
const v32 = v31?.constructor;
try { new v32(); } catch (e) {}
const o34 = {
    __proto__: v31,
};
const v35 = o34?.constructor;
try { new v35(); } catch (e) {}
const v40 = -9007199254740992n | v4;
try { v16.p(v28, v40, v18, v23); } catch (e) {}
o34?.constructor;
try { new v24(); } catch (e) {}
v24[4294967295n] >>= C26;
