const v2 = new Int8Array(4);
new Int8Array(5);
new Uint32Array(4096);
function F9(a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a12;
    } catch(e14) {
    }
}
new F9(Int8Array, 5, 4096);
new F9(Uint32Array, 4096, 4);
new F9(Int8Array, 4, 5);
new Float64Array(256, v2, "getSeconds", "du");
const v29 = new Reflect();
let v36 = undefined;
const o44 = {
    ...v29,
    ...v29,
    __proto__: v29,
    [24560](a38, a39, a40) {
        super[591114.0785999324];
        v36 = Reflect;
    },
};
v36 = o44;
[v29];
function F47() {
    if (!new.target) { throw 'must be called with new'; }
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    new Date();
    new Uint32Array(5);
    new Set();
    const o61 = {
    };
    class C64 {
    }
    class C65 extends C64 {
    }
    const v66 = Array(19793);
    for (const v67 of v66) {
    }
    const v68 = [v66,v66,v66,v66,v66];
    for (let v69 = 0; v69 < 50; v69++) {
    }
    const v71 = [[v68,v68,v68]];
    function f73() {
        const o74 = {
        };
    }
    v71 >= Uint16Array;
}
new F47();
new F47();
function f78() {
    const o80 = {
        get f() {
        },
    };
    const o85 = {
        ["8"](a83, a84) {
        },
    };
}
function F86() {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e88) {
    }
}
class C89 {
}
function f90(a91, a92, a93) {
    const o94 = {
    };
}
