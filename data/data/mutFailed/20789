const v3 = [2,-11,-733237545,-3316,9];
const v4 = [4294967297,-1216890027,65536,-11690,-1,13,7836];
try { v4.pop(); } catch (e) {}
const v6 = [11,1073741824,-268435456,2,-128,54341,1,-60514,-986317634,10000];
const v7 = [10];
const v8 = [v6,v3,10,v7];
const v9 = [v4,v7];
try { v9.toLocaleString(); } catch (e) {}
class C11 {
    static 64;
    static c;
    static b = v6;
    8 = 10;
    static f = v3;
    constructor(a13, a14, a15) {
        const v16 = a15?.filter;
        try { new v16(a14); } catch (e) {}
        function f19(a20, a21) {
            a20 !== a20;
            a21.length = a21;
            const o23 = {
                [10000n]: a21,
            };
            try { o23.valueOf(); } catch (e) {}
            return o23;
        }
        f19(10000n, f19)[10000];
        const v28 = new BigInt64Array();
        const v31 = new Uint8ClampedArray(12);
        v31[6] = v31;
        let {"byteLength":v32,...v33} = v31;
        v28.valueOf = f19;
        try {
            super.log(a15);
        } catch(e35) {
        }
    }
    [-10] = v4;
}
const v36 = new C11(v8, v9, v6);
const v37 = new C11(v4, v36, v36, 10, v3, v36);
v37.e = v37;
new C11(v6, v8, v3);
const v39 = [1938815823,-2147483648,1073741825,26032,-42281,15];
const v40 = [23614,-1,-2147483648,-44119,257];
const v41 = [-4294967296,536870888,4,-9007199254740992,4294967296,129,-14276,-12381,-14453,1950241815];
try { v41.map(v8); } catch (e) {}
function f43() {
    return v41;
}
Object.defineProperty(v41, "toString", { writable: true, configurable: true, value: f43 });
class C44 {
}
const v45 = C44?.constructor;
try { new v45(v3); } catch (e) {}
const v47 = new C44();
try { v47.propertyIsEnumerable(v3); } catch (e) {}
function F49(a51, a52, a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
    try { a51.propertyIsEnumerable(a51); } catch (e) {}
    try { a52.map(v3); } catch (e) {}
    a53[9];
    a54[6];
    a52.g = a53;
    a54.stack = v41;
    a52.fill(v40);
}
F49.length = F49;
const v60 = new F49(v47, v41, v41, v41);
new F49(v60, v40, v41, v41);
const v62 = new F49(v47, v39, v40, v39, v37);
const v63 = v62?.constructor;
try { new v63(-65535, -65535, 10, v8); } catch (e) {}
