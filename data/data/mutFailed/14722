const v12 = [-256,9007199254740991,7,5,842350597,1];
const v13 = [-1408505632,-283202573,256,1073741824,2,1088560061,-1766751374,-65535,7,-2];
[-1219962303,-15391,690,3,6,-1,-1457705731,14613,-45792,2027932370];
for (let v15 = 0; v15 < 5; v15++) {
    const o19 = {
        "execution": "async",
        "type": "minor",
        "a": "forEach",
        ..."256",
        ["forEach"]: "minor",
        10: 7,
        "h": gc,
    };
    gc(o19);
    let v21 = 0;
    while (v21 < 3) {
        function F24(a26, a27, a28, a29) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.c = -12292;
            } catch(e30) {
            }
            try {
                this.e = "b";
            } catch(e31) {
            }
        }
        const v32 = new F24(300766632, 268435456, F24, v13);
        const v33 = new F24(v21, v15, v32, v13);
        new F24(300766632, v21, v33, v13);
        v21++;
    }
}
function F36(a38, a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    Reflect.construct(Int8Array, [1126838905]);
}
const t37 = "forEach";
t37[v12] <<= 268435456;
const o49 = {
};
new Proxy("E", o49);
new F36(F36, F36, F36);
