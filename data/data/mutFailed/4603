let v0 = Date;
let v1 = new v0();
const v2 = [v1,v0,v0];
let v3 = [v0];
const v4 = [v0,v2,v3,v1];
[1.0,0.9642194570905962,-181009.59828335245,-1000000.0,1.153267714795641e+308,0.0,NaN];
const v6 = [-1e-15,1000000000000.0,0.19518153499295232,-475.73626821406356,-339.0866187975589,9.281309453826423e+306];
const v7 = [-686.7146548421617,5.0,1.7976931348623157e+308,3.1713384720335627e+307];
switch (v6) {
    case v1:
        break;
}
class C11 extends v0 {
    static {
        let v12 = this;
        v3 = v12;
        new BigUint64Array(257);
        C11 = v1;
        ({"c":v0,"d":v3,"length":v12,} = v4);
        v1--;
        let v17;
        try { v17 = v7.toSorted(v0); } catch (e) {}
        9 & BigUint64Array;
        -9223372036854775808 - BigUint64Array;
        const v23 = ~9;
        Math.log1p(v17);
        BigUint64Array << v23;
        v17 / v23;
        new BigUint64Array(2069);
        new Uint16Array(2581);
    }
}
new C11();
new C11();
const v35 = new C11();
const o39 = {
    ..."44184",
    [-15]: -15,
    2480: 9,
    ..."44184",
};
v6[4294967296] = o39;
-v35;
new WeakSet();
new WeakSet();
