class C1 {
    static get e() {
        if (this === this) {
            super.g |= this;
            try {
                super.valueOf(this, undefined, undefined);
            } catch(e5) {
            }
        } else {
            super.g;
        }
        return undefined;
    }
    8;
}
new C1();
new C1();
const v9 = new C1();
v9[8] = v9;
new Float32Array(0);
Int32Array.e = Int32Array;
new Int32Array(677);
new BigInt64Array(256);
class C19 {
}
class C21 {
    static {
        try { new this(); } catch (e) {}
        for (let v24 = 0; v24 < 25; v24++) {
            function f25() {
                return f25;
            }
            try { f25(); } catch (e) {}
            const v27 = [601759695];
            const v28 = [1073741824,1073741823,1376142744,1073741825];
            function f30(a31, a32, a33, a34) {
                arguments.f = arguments;
                function f36() {
                    return a31;
                }
                try { f36(); } catch (e) {}
                for (let v38 = 0; v38 < 5; v38++) {
                    try {
                        C19.__proto__ = Date;
                    } catch(e39) {
                    }
                }
                Int8Array.d = Int8Array;
                const v41 = new Int8Array();
                const v43 = new Uint32Array();
                const v44 = [v43];
                try { v44.toReversed(); } catch (e) {}
                function f47(a48, a49) {
                    a48 + a48;
                    a49.prototype = a49;
                    return this;
                }
                f47(v24, Uint32Array);
                const v52 = v41.buffer;
                try { v52.slice(522675525n, this); } catch (e) {}
                new Int8Array(v44);
                v52.slice(a31, a33);
                %OptimizeFunctionOnNextCall(f36);
                try { v28["find"](..."find", a34, ...v27, ...v28, ...522675525n); } catch (e) {}
                f25(Symbol, BigUint64Array, this);
                return arguments;
            }
            for (let v60 = 0; v60 < 5; v60++) {
                const v61 = f30();
                v61.e = v61;
            }
        }
    }
}
