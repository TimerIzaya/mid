let v2 = -5.0;
v2--;
const v5 = new Float32Array(Float32Array);
for (let v6 = 0; v6 < 25; v6++) {
    function f7(a8, a9, a10, a11) {
        a8[1757];
        for (let v13 = 0; v13 < 5; v13++) {
        }
        a9--;
        a8[0] = a8;
        const v16 = arguments?.__lookupGetter__;
        let v17;
        try { v17 = v16.n(f7, v16, v16); } catch (e) {}
        const v18 = new Float32Array(v6, v17, a9);
        const v20 = new Int32Array();
        const v21 = v18;
        v20.fill(...v18);
        return Float32Array;
    }
    for (let v23 = 0; v23 < 10; v23++) {
        f7(v5);
    }
}
class C26 {
    getUTCMonth(a28, a29) {
        const v30 = "e";
        return a28;
    }
    constructor(a32) {
        /ka\s/vdisy.constructor.$7;
    }
    static [-4.0] = -4.0;
}
const v39 = new C26(-520.0033600894292);
new C26("e");
new C26(v39);
const v45 = [-536870912,-1454443390,-11,536870887];
let v47;
try {
const t0 = 65536n;
v47 = t0(65536n);
} catch (e) {}
v45[65536n] *= v47;
function f48() {
}
const v49 = [-0.0,-2.0,-1e-15,2.0,-Infinity,2.220446049250313e-16];
const v50 = [0.7413321115775521,436298.36999994353,-547.5300741212703,1.0,-1e-15,8.397732840452793,-1000000000.0,6.84258291941704];
const v54 = ("lastIndexOf")[Symbol.toPrimitive];
v50.toLocaleString("e", v49);
function F58(a60) {
    if (!new.target) { throw 'must be called with new'; }
    const v61 = this.constructor;
    try { v61.apply(a60); } catch (e) {}
    try { new v61(); } catch (e) {}
}
new v54();
v45["splice"](-650191005, -650191005, "splice");
