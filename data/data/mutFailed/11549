new Date();
[1e-15,1.4297115834789782,-1000000.0,1e-15];
[-391.88468246765206,-5.165236878467761,-6.121031961711926,-4.0];
[2.220446049250313e-16];
[627.1948769471683,-4.4482141721501796e+307,-8.299406950665152e+307,0.6191398714704694];
[-2.0,-0.0,7.791092616061132,2.220446049250313e-16,8.097890504425322e+307];
[0.8519508301933574,-1e-15,852942.2819265756,-2.0,2.2250738585072014e-308,-2.7727077100663664e+307,-2.0,0.5394823617540646,945141.3306798597];
[-128,1024,-2147483647,4294967295,256,4,40259];
[1073741824,10,1948323830,-4096,-65537,12089,10];
[-9007199254740991,-65535,-65536,-5,443389758];
function F17() {
    if (!new.target) { throw 'must be called with new'; }
}
const v20 = new F17();
v20.length = F17;
const v29 = [-2.220446049250313e-16,-2.220446049250313e-16];
v29[2] = 0.3083488057663979;
const v30 = [v29];
const v31 = [0.3083488057663979,0.3083488057663979];
v31.push(0.3083488057663979);
class C33 {
    constructor(a35, a36) {
        this.constructor = Date;
        const v37 = this.__lookupGetter__;
        try { new v37(); } catch (e) {}
        const v40 = ~a36[2];
        function f44(a45, a46, a47, a48) {
            a45.length = v40;
            a45.length;
            a47++;
            const o54 = {
                n(a52, a53) {
                    return v40;
                },
            };
            return o54;
        }
        function f55(a56) {
            let v57 = 3;
            const v58 = v57++;
            v58 + v58;
            return -2.220446049250313e-16;
        }
        f44.toString = f55;
        f44(v20, Uint8Array, f44);
        for (let v61 = 0; v61 < 625; v61++) {
            v61 >>> v61;
            f44(Uint8Array);
        }
    }
}
new C33(v29, v29);
const v66 = new C33(v30, v31);
v66.constructor = Date;
const t54 = v66.constructor;
new t54(604.4479109019192, 0.3083488057663979);
