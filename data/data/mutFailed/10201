function f0() {
    const o9 = {
        [-683.5890154816067]: "MAX_SAFE_INTEGER",
        "f": -1488682120,
        6: -683.5890154816067,
        "e": "MAX_SAFE_INTEGER",
        __proto__: "MAX_SAFE_INTEGER",
        [-1488682120](a5) {
            let v6 = this;
            super.c = a5;
            const v7 = this ^ "MAX_SAFE_INTEGER";
            v6 = "MAX_SAFE_INTEGER";
            ("MAX_SAFE_INTEGER").length;
            return v7;
        },
    };
    return o9;
}
const v10 = f0();
f0();
const v12 = f0();
class C13 {
    static #h;
    valueOf(a15, a16) {
        try { v12.allSettled(this, a15); } catch (e) {}
        try {
            this.fuck(-5.0, true, true, -5.0);
        } catch(e21) {
        }
        return this;
    }
}
const v22 = new C13();
v22.g = v10;
const v23 = new C13();
new C13();
v22.g >>>= 57486;
for (let v27 = 0; v27 < 32; v27++) {
    v23["p" + v27] = v27;
}
const v31 = [];
v31[Symbol.toPrimitive] = f0;
function f34() {
    const o36 = {
        p() {
            return f34;
        },
        [v31]: v31,
        "a": v31,
    };
    return v31;
}
const v37 = f34();
const v38 = f34();
function f39() {
    try {
        v12.length = 8;
    } catch(e41) {
    }
    return v22;
}
v38.toString = f39;
const v42 = f34();
[65536];
[-267,-4,-32045,-4];
[14,268435441,-9223372036854775807];
new Float64Array(14);
const v51 = new Uint8ClampedArray(0);
const v54 = new BigInt64Array(218);
let v55;
try { v55 = v54.sort(f34); } catch (e) {}
try { v55(v38, v55, v55, ...v51, v37, ...v37); } catch (e) {}
const v57 = (a58, a59) => {
    return v42 * a59;
};
