const v2 = new Int16Array(10);
new Int16Array(235);
let v9 = v2 << ("c").toLowerCase();
v9--;
v9 & v9;
new Uint8Array(1024);
function F15(a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a17;
    } catch(e20) {
    }
    function F21(a23) {
        if (!new.target) { throw 'must be called with new'; }
        this.h = this;
    }
    function f24(a25, a26) {
        function f27(a28) {
            return arguments;
        }
        const v30 = f27(f24, a25, a25, a26);
        const o31 = {
            ...v30,
        };
        return o31;
    }
    try {
        this.b = a17;
    } catch(e32) {
    }
    try {
        this.h = 10;
    } catch(e33) {
    }
    function f34(a35, a36, a37, a38) {
        return this;
    }
    new Float32Array(Float32Array);
    function f41(a42, a43) {
        return "c";
    }
}
new F15(10, 235, 235);
function F45() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -1052649622;
        Math.tan(-Math ** v2);
    } catch(e53) {
    }
}
new F15(235, 235, 235);
new F15(1024, 235, Uint16Array);
("toString").match();
