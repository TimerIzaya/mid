const v0 = /a??[xyz]/vdms;
const v1 = /abc|def|ghia{1,2}?/guisy;
const v2 = /\xe2\x81\xa3/guiy;
function f3() {
    return v2;
}
/abc+?/;
/[k[\cA]*]/gudiy;
/(bM)/i;
[680.8158687826431,0.8336718380485162,-1e-15,-2.0,0.02959907146706131,3.0,8.471818261150596e+307,-0.0,-1.6340424883846456,-936.6553934206692];
[-3.0,-2.220446049250313e-16,2.944456523402998,-2.0,-0.0,497647.5195374158,-129.97012697786033,1000000000000.0];
[5.7093235232057165,951782.453527194,2.2250738585072014e-308];
class C16 {
    c = -261.99102172609366;
    ["localeCompare"];
    static [-1.0];
    toString(a18, a19) {
        do {
            function F21(a23, a24, a25, a26) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.a = "localeCompare";
                } catch(e27) {
                }
            }
        } while (0 < 6)
    }
    static #n(a31, a32) {
        %VerifyType(-1.0);
        const o33 = {
            "apply": f3,
            "call": f3,
            "get": f3,
            "getOwnPropertyDescriptor": f3,
            "getPrototypeOf": f3,
            "has": f3,
            "isExtensible": f3,
            "ownKeys": f3,
            "preventExtensions": f3,
            "set": f3,
            "setPrototypeOf": f3,
        };
        new Proxy(v0, o33);
        return v1;
    }
}
const v36 = new C16();
const v37 = new C16();
const v38 = new C16();
function F39(a41, a42) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e43) {
    }
    try {
    } catch(e44) {
    }
}
const v45 = new F39(C16, v37);
const v48 = new Float64Array(147);
const o49 = {
};
try { new C16(...-1.0, v45, v36, v38, F39, ...v48); } catch (e) {}
const o51 = {
};
