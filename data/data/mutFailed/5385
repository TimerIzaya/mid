function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -6;
    } catch(e3) {
    }
}
const v4 = new F0();
new F0();
new F0();
[-9223372036854775808,-128];
let v8 = [-256,1073741824,65537,-1152809592];
[59183,-65535,9007199254740992,64,1073741825,-9007199254740992];
new Map();
const v18 = [-Infinity,-1000000.0,-964229.7889241329];
const v19 = [1000.0,7.013617100191173,-351.0818852767976,0.6726521994945021,0.0654548428416345,0.0,357.95756141696074,-114535.71398965968];
const v20 = [1000000000.0,1.0,1.33700765354115,3.759383313252208,0.7953224416766568,9.060355110242564e+307,1.7976931348623157e+308,1.7976931348623157e+308,2.220446049250313e-16];
const v21 = [v20];
[v18,v19,v21,v21,v20];
[v19,v20,v20];
1000000000000.0 - 1000000000000.0;
let v27 = 4.9807369083218855;
const v28 = v27++;
function f29() {
    return v27;
}
function F30(a32, a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    const v35 = this.constructor;
    try { new v35(a33, a32, a34); } catch (e) {}
    let [v37,v38,v39] = v21;
    Object.defineProperty(v8, 7, { writable: true, enumerable: true, value: null });
    a34 + a34;
    try {
        this.b = v20;
    } catch(e46) {
    }
}
F30.arguments;
const v48 = new F30(1000000000000.0, v21, 0.0746389278020293);
v48.length = v48;
new F30(0.0746389278020293, v20, 0.0746389278020293);
class C50 extends F30 {
    512 = v20;
}
C50.prototype = C50;
let v51 = new C50();
const v52 = new C50();
++v8;
(v28 instanceof v18[7]) << v52;
v51 = v4;
new C50();
-1e-15 ^ -1e-15;
const v63 = 1073741823 & 1073741823;
v63 + v63;
