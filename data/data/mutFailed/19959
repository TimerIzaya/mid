const v6 = new Uint8ClampedArray();
class C7 {
    constructor(a9, a10, a11, a12) {
        const v13 = this.constructor;
        try { new v13(a11, a12, a9, v13); } catch (e) {}
        for (let v15 = 0; v15 < 5; v15++) {
            v6[v15] = a12;
        }
    }
}
const v16 = new C7(Uint8ClampedArray, Uint8ClampedArray, Uint8ClampedArray, C7);
[536870888,7,-10,41928,-5,-62408];
const v19 = [268435456,-4294967297,-9724,-193411502,268435440];
const v20 = [38010,640396051,2147483649];
const v23 = new Int8Array(v16);
let v24 = 3;
let v25 = 0;
for (let i = 0; i < 5; i++) {
    [...v24] = v23;
    v25++;
    try {
        v19.length = 1;
    } catch(e28) {
    }
    function F29(a31) {
        if (!new.target) { throw 'must be called with new'; }
        const v33 = this.constructor.bind(F29, F29);
        try { new v33(); } catch (e) {}
    }
    new v19();
}
[4,257,-1758168261,1621418748,9007199254740991,-12,-8,-65535,42424,-1687245141];
[45685,9,64094,2147483649,9223372036854775807,1,65537,268435456];
[-6,1];
function f39(a40, a41, a42) {
    const o55 = {
        "b": v20,
        "f": a42,
        "a": a42,
        n(a44, a45, a46) {
            try {
                super.round(v6);
            } catch(e51) {
            }
            [0.26436075485138555,-1000000.0,9.669474465632966e+307,2.4449803002972956];
            [-3.0,4.0,9.973982875303577e+307,1.0579023295232315e+308,1000000.0,1000000.0,-1e-15];
            return [4.0,-147860.4134131258,0.0,3.0];
        },
    };
    return o55;
}
f39(-7, NaN, 4.52045988111999);
f39(2147483648, 4.52045988111999, 1000000.0);
f39(-7, f39, 4.52045988111999);
function F59(a61, a62, a63, a64) {
    if (!new.target) { throw 'must be called with new'; }
    const v65 = this.constructor;
    try { new v65(); } catch (e) {}
    try {
        const v69 = a63 ** 268435456;
        a63 << 268435456;
        v69 | a63;
        Math.clz32();
    } catch(e73) {
    }
}
const t66 = 1000000.0;
new t66();
new F59();
