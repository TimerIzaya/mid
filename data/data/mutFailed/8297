new Int8Array(127);
new Uint16Array(3720);
new Uint32Array(64);
new Uint8ClampedArray(202);
new BigUint64Array(2864);
new BigUint64Array(210);
new Set();
new Uint16Array(116);
new Int16Array(512);
new Int32Array(9);
class C35 {
}
function F36(a38, a39, a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
}
const v42 = new F36();
new F36(v42, F36, F36, v42);
const v44 = [7,128];
const v45 = [13,-2103725161,15240,-9223372036854775807,1077763702,256,-1024,9,1073741823,-2];
function f46() {
    function f47(a48, a49) {
        const v50 = [-5.034735835956977e+307,-385.25474675985527];
        parseInt(v50);
        return v50;
    }
    return f47;
}
Object.defineProperty(v45, Symbol.toPrimitive, { writable: true, configurable: true, enumerable: true, get: f46 });
const v55 = v45[4];
v55 | v55;
const v57 = [40213,422333454,47387,65536,-51830];
v57[2] = v57;
0 - 0;
try { gc(); } catch (e) {}
gc();
const t34 = [8.360030709333259,416819.70671931445,1000.0,-1.0513464134302462e+307,2.2250738585072014e-308,-999.1393293497049];
t34.length = 1;
const v69 = /xyz{1,32}?/gusy;
class C70 {
    268435440 = v69;
}
new BigInt64Array();
try { ("boolean").repeat(1000000.0); } catch (e) {}
const t43 = "toString";
t43[6] = "toString";
"toString" == "toString";
let [,...v78] = [1e-15,1.0,-3.0,1.43935350979979e+308,-0.0];
function f79() {
    const o83 = {
        ...1.0,
        set b(a82) {
        },
    };
    return o83;
}
f79();
("boolean").split("toString");
8 < "boolean";
const v89 = new Uint8ClampedArray();
try { v89.reduceRight(v89); } catch (e) {}
("I").localeCompare();
-256 >> -256;
function f94(a95, a96) {
    a96--;
    new Float32Array([-37102.6674218484,-969411.635186719,-1.3592557640113297e+308,0.9054806195219168,1000000000000.0,-0.0,-3.0,-0.0]);
    class C101 {
        static {
            this[Symbol.toPrimitive] = f46;
            this < this;
        }
    }
    a95 | a95;
    const o142 = {
        "c": 15135,
        "a": 15135,
        "d": a95,
        __proto__: a96,
        "g": -1628878962,
        "type": "boolean",
        "a": a95,
        set b(a108) {
        },
        "g": 15135,
        "b": a96,
        get f() {
            super[1000000.0] = this;
            Math.exp(-359.60295377780096);
            const v113 = [-503399.81061701436,0.07820891042711386,-100.04924869632453,-Infinity];
            [[[-1e-15,-4.547098672084515,6.731189859503068,1000.0,1000.0,414.1111077300918,567.5737904015757],v113,v113]];
            try {
                new Int8Array(9);
                function f120() {
                    return f120;
                }
                new Uint16Array();
                !0.8843420658768774;
                function F124() {
                    if (!new.target) { throw 'must be called with new'; }
                }
                const v127 = new F124();
                const o135 = {
                    [v127](a130, a131, a132, a133) {
                        "D2z" < a130;
                    },
                };
                const o137 = {
                    [f120]() {
                    },
                };
                [o137];
                v45.copyWithin(8, -268435456, -256);
            } catch(e141) {
            }
            return this;
        },
    };
    o142[1000000] = C101;
    o142.g = o142;
    return o142;
}
let v143;
try { v143 = f94(15135, 15135); } catch (e) {}
v143[1000000];
f94(925.1427495594241, v44);
f94(317008.8127941969, -4);
f94(1000000.0, v45);
268435441n ^ 268435441n;
268435441n - 268435441n;
const v152 = new BigUint64Array();
v152[2445191368] = 268435441n;
