function F6(a8, a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = -2.220446049250313e-16;
    } catch(e11) {
    }
    try {
        this.a = -11;
    } catch(e12) {
    }
}
const v13 = new F6(-26.504487916908033, 4294967297, -2.220446049250313e-16);
new F6(-2.220446049250313e-16, 4294967297, -2.220446049250313e-16);
new F6(-26.504487916908033, 8, -26.504487916908033);
new Map();
let v21 = 15;
const v22 = v21--;
new Int16Array(v21);
new Uint8ClampedArray(6);
new Int16Array(3699);
"2147483649" == "2147483649";
class C35 {
    static #p(a37) {
        function f38(a39) {
            return a39;
        }
        class C40 extends f38 {
            static [-1] = 8;
            static [a37];
            static 268435441;
        }
        const v41 = [];
        const v43 = /[a-zA-Z0-9]/gvisy;
        const v44 = /abc?/gvmy;
        v44[-2] ^= v43;
        v44.exec("Q8F");
        const t35 = "Q8F";
        t35[2078209647] = v41;
        return a37;
    }
    [0.028957958839558873];
    static {
        for (let v50 = 0; v50 < 32; v50++) {
        }
    }
    static 2147483648 = C35;
    static #g;
    #a;
}
function f52(a53) {
    const o54 = {
    };
    try {
        o54.a = a53;
    } catch(e55) {
    }
    try {
        const o56 = {
        };
        o56.a = a53;
        o56.g = -26.504487916908033;
    } catch(e57) {
    }
    try {
        const o58 = {
        };
        o58.a = a53;
        o58.g = -26.504487916908033;
        o58.h = v21;
    } catch(e59) {
    }
    try {
        const o60 = {
        };
        o60.a = a53;
        o60.g = -26.504487916908033;
        o60.h = v21;
    } catch(e61) {
    }
    return a53;
}
C35[Symbol.toPrimitive] = f52;
function f64() {
    const o66 = {
    };
    return gc(o66);
}
C35[Symbol.toPrimitive] = f64;
let v70;
try { v70 = C35(); } catch (e) {}
const v71 = new C35();
v71.constructor = f64;
try { BigInt64Array(BigInt64Array); } catch (e) {}
function F75(a77) {
    if (!new.target) { throw 'must be called with new'; }
    this[Symbol.unscopables] = -26.504487916908033;
    this.h = a77;
}
const v80 = new F75(-2);
v80[Symbol.unscopables] = v71;
function f84() {
    return v22;
}
function f85(a86) {
    const v87 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    const v89 = [601759695];
    const v90 = [1073741824,1073741823,1376142744,1073741825];
    function f91(a92, a93, a94, a95) {
        function f96() {
            let v99 = Float64Array;
            v99 = a93;
            v87.length;
            try {
                v90.forEach();
            } catch(e102) {
            }
            Symbol.toPrimitive;
            const o109 = {
                toString(a106, a107) {
                    return a95 && v99;
                },
            };
            const o110 = {
            };
            new Proxy(Uint8ClampedArray, o110);
            o109[9] = a92;
            const o118 = {
                [-4294967297n](a114, a115, a116, a117) {
                },
                ...v89,
                "type": "Vre",
                ..."Vre",
                4: "Vre",
                5: -4294967295,
            };
            return f91;
        }
        f96();
        %OptimizeFunctionOnNextCall(f96);
        return -4294967297n;
    }
    f91();
    %OptimizeFunctionOnNextCall(f91);
}
Object.defineProperty(Uint16Array, 0, { writable: true, enumerable: true, get: f84, set: f85 });
with (v80) {
    h = Uint16Array;
}
const v121 = v71?.constructor;
function f122() {
    return Symbol;
}
function f123(a124) {
    const v125 = [39049,-2147483647,9007199254740991,30221,268435456,-2147483647,41987];
    const v126 = [268435440,49273,-15,214837996,-12,65536,1291301446,-65535];
    try { v126.concat(v125); } catch (e) {}
}
Object.defineProperty(v121, Symbol.toPrimitive, { configurable: true, enumerable: true, get: f122, set: f123 });
v121[Symbol.toPrimitive] = f64;
let v132;
try { v132 = new v121(); } catch (e) {}
function f133(a134) {
    ("2147483649")[8];
    return 4294967297;
}
v132.constructor = f133;
const v139 = v132?.constructor;
try { new v139(); } catch (e) {}
const v141 = new C35();
let v142;
try { v142 = v141.propertyIsEnumerable(C35); } catch (e) {}
!v142;
new C35();
const v146 = /[\11]/gm.flags;
/(?:a*)*/gudm;
const v148 = /a(?!bbb|bb)c/vi;
v148.toString = Symbol;
const v149 = v148?.toString;
try { new v149(); } catch (e) {}
[4096];
const o156 = {
    "execution": "async",
    "type": "minor",
};
~117;
Uint16Array[1] = Int16Array;
Uint16Array[0] = v121;
const v159 = new Uint16Array(Uint16Array);
let v160 = v159[1];
[v146,f64,v13];
const v162 = [v139,Map,v70];
[Uint8ClampedArray,v162,F75];
Math.min(v21);
const v167 = v21 + 65537;
-65537;
const v169 = ~v167;
v21 && 65537;
Math.asinh(v169);
v160--;
Int32Array.name;
new Int32Array(31);
function f179() {
    let [] = v159;
    return Set;
}
Uint32Array.toString = f179;
let v181;
try { v181 = Uint32Array.toString(); } catch (e) {}
try { v181.small(); } catch (e) {}
const v183 = new Uint32Array(128);
v183[72];
function f185() {
    3.4890473589784586e+307 > 3.4890473589784586e+307;
    let v188 = 1000000000000.0;
    v188--;
    257828.6336153492 - 257828.6336153492;
    -4294967296 >> -4294967296;
    class C195 {
        static #m(a197) {
        }
        constructor(a199) {
            function f200() {
                return 9007199254740992;
            }
            Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f200 });
            const v201 = this?.__defineSetter__;
            try { new v201(22227, 22227); } catch (e) {}
            new Float32Array();
            typeof Uint16Array === "number";
            try {
                v162.toSorted();
            } catch(e210) {
            }
            try { Uint16Array.apply(Uint16Array, "2147483649"); } catch (e) {}
            const v212 = new Uint16Array();
            const v213 = new Float32Array(v212, -4294967296, a199);
            v213.f = v213;
        }
    }
    const v214 = new C195(C195);
    function f215() {
        return f122;
    }
    function f216(a217) {
        v141.h >>>= a217;
    }
    Object.defineProperty(v214, Symbol.toPrimitive, { writable: true, configurable: true, enumerable: true, get: f215, set: f216 });
    v214.g = v214;
    const v220 = new C195(C195);
    v220.length = -4294967296;
    v220.length;
    const v222 = new C195(-4294967296);
    const v223 = [v222,C195];
    [257828.6336153492,v222,v214,v222,v223];
    const v225 = [v222];
    class C226 extends C195 {
        [v214];
        #n(a228, a229, a230, a231) {
            function f232() {
            }
        }
    }
    C226.name = C226;
    const v233 = new C226();
    class C235 extends v225.constructor {
    }
    try { v233.m(v223); } catch (e) {}
    const o239 = {
        "e": Uint16Array,
        o(a238) {
        },
        ...v188,
    };
    return Int32Array;
}
try { f185.bind(-7); } catch (e) {}
%PrepareFunctionForOptimization(f185);
f185();
f185();
%OptimizeFunctionOnNextCall(f185);
const v243 = f185();
v243.prototype = v243;
