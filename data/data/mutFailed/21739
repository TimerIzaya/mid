const v0 = /Ura*b/uiy;
/Y()e\9+/gdms;
class C2 {
    static {
        const v4 = (a5, a6, a7, a8) => {
            return a8;
        };
    }
}
/xyz{1,32}?/gmsy;
new Float64Array(128);
function f13() {
    const v15 = Symbol.for();
    const o16 = {
        [v15]: Symbol,
    };
    return v0;
}
new v0(10);
const v22 = new Uint16Array(8);
function F24(a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    const v29 = this.constructor;
    function f30(a31, a32, a33, a34) {
        return typeof 9007199254740990n >= "object";
    }
    let v38;
    try { v38 = new v29(); } catch (e) {}
    Int32Array.bind(Int32Array, Int32Array, Int32Array);
    ~9007199254740990;
    const v43 = v22.constructor;
    v43(v43, 9007199254740990, a28, 9007199254740990, v43);
    f30(9007199254740990n, v38, v29, 8);
    %OptimizeFunctionOnNextCall(f30);
}
new F24();
