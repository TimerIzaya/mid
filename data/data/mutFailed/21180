class C3 {
    static o(a5) {
        const o6 = {
        };
        C3.c &&= C3;
        Reflect.construct(super.g, [this], C3);
        try {
            o6.e = a5;
        } catch(e11) {
        }
        try {
            const o12 = {
            };
            o12.e = a5;
            o12.c = -4294967297;
        } catch(e13) {
        }
        try {
            const o14 = {
            };
            o14.e = a5;
            o14.c = -4294967297;
            o14.d = -4294967297;
        } catch(e15) {
        }
        try {
            const o16 = {
            };
            o16.e = a5;
            o16.c = -4294967297;
            o16.d = C3;
        } catch(e17) {
        }
        Math.clz32(0.28129725742199196);
        const v22 = !-65536;
        Math.max(43962);
        const v24 = 0.28129725742199196 - -65536;
        Math.atan2(v24, v24);
        43962 ^ 43962;
        return v22;
    }
    #g = -4294967297;
    static #d;
    [-822570483] = 43962;
    valueOf(a28, a29) {
        %VerifyType(a28);
        let v31 = -16290;
        ++v31;
        class C33 {
        }
        const v34 = new C33();
        function f35(a36, a37) {
            function f38() {
            }
            class C39 extends f38 {
            }
            class C40 extends C39 {
            }
            function f41(a42, a43, a44, a45) {
                f38.a = a42;
                let v46;
                try { v46 = a42(C40); } catch (e) {}
                a43 & v46;
                const o51 = {
                    n(a49, a50) {
                    },
                };
                return o51;
            }
            for (let v52 = 0; v52 < 500; v52++) {
                f41();
            }
            return a37;
        }
        Object.defineProperty(v34, "constructor", { value: f35 });
        const t75 = v34.constructor;
        t75();
        const v56 = -a29;
        a28 && a28;
        (v31 && a28) && a29;
        -v56;
        return a29;
    }
}
const v61 = new C3();
const v62 = new C3();
const v63 = new C3();
v63.length = v62;
let v67 = 256;
v67 - v67;
function f70(a71, a72) {
    a72 = 43962;
    function F73(a75, a76, a77, a78) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.c = a77;
        } catch(e79) {
        }
    }
    const v80 = new F73(4.0, a72, a72, a72);
    const v81 = new F73(Int8Array, a71, v80, a71);
    new F73(v81, -822570483, v80, -4294967297);
    return v80;
}
Int8Array[Symbol.toPrimitive] = f70;
const v85 = new Int8Array(v67);
function f86() {
    try {
        v61.__proto__ = Symbol;
    } catch(e87) {
    }
    return C3;
}
v85.toString = f86;
try { new Uint32Array(v63, v63, v62); } catch (e) {}
new Uint32Array(1086);
v67 ^= 43962;
v63[-9007199254740990n];
const v98 = v62.c;
const v102 = -Infinity;
Math.max(v85);
v102 - 268435456;
Math.pow(268435456, v85);
Math.round(Int8Array);
Math.cos(v85);
268435456 && Int8Array;
Math.acos(v85);
new Float64Array(15);
let v114 = 1073741825;
v114++;
const o126 = {
    set b(a117) {
        function f118(a119) {
            return f118;
        }
        class C120 extends f118 {
            m(a122, a123, a124) {
                try { a117(); } catch (e) {}
                return a124;
            }
            1;
        }
    },
};
Float64Array.prototype = Float64Array;
try { new Uint8ClampedArray(v114, Uint8ClampedArray, Uint8ClampedArray); } catch (e) {}
Math.log10(1073741825);
