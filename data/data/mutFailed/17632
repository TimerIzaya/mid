class C6 {
    [-1.7976931348623157e+308];
    [-5.0];
    127;
    6 = 2.451679717843601e+307;
    get c() {
        try {
        const t0 = -5.0;
        t0(...this, 1000000000000.0, -1.7976931348623157e+308, this, this);
        } catch (e) {}
        const o9 = {
        };
        new Proxy(this, o9);
        return C6;
    }
    static [2.451679717843601e+307];
}
const v12 = new C6();
new C6();
new C6();
new Float64Array(257);
new Uint8Array(11);
new Uint32Array(256);
const o26 = {
    "maxByteLength": v12,
};
const v28 = new SharedArrayBuffer(255, 256);
const v30 = new Uint8ClampedArray(v28);
function f31(a32, a33) {
    class C34 {
        constructor(a36, a37, a38) {
            for (let v39 = 0; v39 < 25; v39++) {
                const o43 = {
                    "execution": "async",
                    "type": "minor",
                };
                gc(o43);
            }
        }
    }
    new C34(C34, C34, C34);
    return v12;
}
v30[Symbol.toPrimitive] = f31;
function f48() {
    const v49 = /[abc+]/gvdim;
    const v50 = v49.sticky;
    const v51 = [v49,v49,v49,v49];
    const v52 = /ka{0}/guims;
    function f53(a54, a55) {
        const o56 = {
            ...v52,
            "d": v51,
            "c": a55,
            "g": a55,
            "f": v51,
            "b": v50,
            "a": a55,
        };
        return f53;
    }
    %OptimizeFunctionOnNextCall(f53);
    return 256;
}
v30.valueOf = f48;
v30[185] = v30;
