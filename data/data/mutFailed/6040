const v0 = [3.0,-1.7976931348623157e+308,-3.0,2.0,-1e-15,7.370914950740936];
const v1 = [Infinity,1000.0,2.0,0.06927897981015685,-1.5978504201206346e+308];
const v2 = [-0.0,11.01269742652346,317.3752730291021,-973.1098207706015,-309796.51248511695,-1.7976931348623157e+308];
class C3 {
    constructor(a5) {
        let v6;
        try { v6 = v2(v1, v2, this, this); } catch (e) {}
        v6[1588832280] = v6 === v6;
        const o8 = {
        };
        new Proxy(a5, o8);
    }
    static #g = v0;
    1073741824 = v1;
}
new C3(v2);
new C3(v1);
const v13 = new C3(v1);
function F14(a16, a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a17;
    } catch(e19) {
    }
}
const v20 = new F14(v2, v1, v13);
const v21 = new F14(v1, v20, v0);
new F14(v2, v21, v21);
("-1073741824").localeCompare(Int32Array.bind(Int32Array, Int32Array, Int32Array, Int32Array, Int32Array));
async function* f34(a35, a36) {
    return -9223372036854775807;
}
