const v1 = new Map();
v1[18] = v1;
const v4 = 9n + 9n;
const v7 = 1000 & 1000;
v7 + v7;
BigInt64Array[0] = v4;
try { BigInt64Array.from(BigInt64Array); } catch (e) {}
const v11 = new BigInt64Array(1000);
1024 >>> 1024;
const v15 = new Int8Array(1024);
function f16(a17) {
    (a17 = v11) / v7;
    return Int8Array;
}
v15.toString = f16;
v15[834] = v15;
v4 in v1;
Math.atan2(1000, 884.2863824763599);
!(!16);
Math.sin(884.2863824763599);
const v29 = new Int8Array(10);
v29[1] = v29;
/1(?:a?)?/gvdm;
/(\9Am)/dy.dotAll;
-9223372036854775807n;
9223372036854775807n * 9223372036854775807n;
