const v6 = [-9007199254740990,536870889,-9,-9,-9];
const v7 = [-59384];
[v6,35310,v7,35310,-59384];
new Date();
[-225378.57188874378,0.25312894741141456,853901.5898820488,0.9490557341049501,1.4335820628054541e+308,1000000000000.0,-22444.16497156606];
const v12 = [2.220446049250313e-16,1.0,0.8357388642653725,1.7270378538611942e+308,-3.0,1000000.0,975.8378206792822,1000.0];
const v13 = [5.0,-5.0,474.08055557423995,-0.0];
const v15 = new Float64Array();
function f16() {
    function f17(a18, a19) {
        function F20(a22, a23, a24) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.c = v13;
            } catch(e25) {
            }
            try {
                this.a = a23;
            } catch(e26) {
            }
        }
        new F20(a19, a19, -59384);
        new F20(a18, v7, a18);
        const v29 = new F20(a18, v12, a19);
        return v29;
    }
    return f17;
}
Object.defineProperty(v15, Symbol.toPrimitive, { configurable: true, get: f16 });
function f32() {
    for (let v33 = 0; v33 < 10; v33++) {
        const v35 = Math.expm1(v15);
        v35 >> v35;
    }
}
f32();
%OptimizeFunctionOnNextCall(f32);
f32();
