let v0 = "M";
class C3 {
    static set h(a5) {
        -30833 - v0;
        const o10 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o10);
    }
    6 = "qIkex";
    d;
    3;
}
C3.c = C3;
const v12 = new C3();
v12[6];
const v14 = new C3();
const v15 = new C3();
v15[6] = v15;
const v18 = new Uint8ClampedArray(6);
v18.g = v18;
-16;
const v22 = new Uint8Array(16);
Int8Array.BYTES_PER_ELEMENT = Int8Array;
new Int8Array(1000);
const v26 = [-1.3667473485475811e+308,1.7976931348623157e+308,5.0,-3.583919688173468e+307,-1.5320462342133301e+308,-414873.4859108749,286122.8434793174,866.7395286670867,-1000.0,-742782.9714922046];
function f28(a29, a30, a31, a32) {
    a29 >>> a29;
    const v34 = a30 % a30;
    a32++;
    function f36() {
        const o41 = {
            __proto__: v26,
            [a31](a38, a39, a40) {
            },
        };
        Object.defineProperty(v14, o41, { configurable: true, get: f28 });
        Object.defineProperty(a30, 1830936161, { enumerable: true, get: f36, set: f36 });
        const v42 = 1000 && v34;
        [v0] = v22;
        const v43 = [o41,v34,a31,Uint8ClampedArray];
        [v43,v43,v34,o41,v18];
        [a29,v26,o41,a29,v42];
        o41.copyWithin(o41, o41);
        return o41;
    }
    try { f36(); } catch (e) {}
    const v48 = f36();
    v48[5] = v48;
    return v26;
}
f28.d = f28;
for (let v49 = 0; v49 < 10; v49++) {
    f28(v49, v49, v49, v49);
}
%OptimizeFunctionOnNextCall(f28);
f28("-1073741824", v26, v26);
