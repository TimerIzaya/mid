const v0 = [-1.0,-1000000000000.0,0.0,7.440192730984872,1.7549770592554283e+308,3.3555882417835147e+307,-2.2250738585072014e-308,-956243.3554065737,2.2250738585072014e-308];
const v1 = [1000000.0,4.779068490989847e+307];
const v2 = [1.7976931348623157e+308,0.5046481361334084,-407787.78690571536,2.0];
class C3 {
    65536;
    constructor(a5, a6) {
        a6[2] = a6;
        const o7 = {
        };
        o7.e = o7;
        try {
            o7.POSITIVE_INFINITY = this;
        } catch(e8) {
        }
        try {
            const o9 = {
            };
            o9.e = o9;
            o9.b = this;
            o9.g = this;
            function f10(a11, a12) {
                return a12;
            }
            const t23 = /o(\xed\xb0\x80)\x01/gudims;
            t23[Symbol.toPrimitive] = f10;
        } catch(e16) {
        }
        try {
            const o17 = {
            };
            o17.h = this;
            o17.g = this;
            o17.c = v1;
        } catch(e18) {
        }
        try {
            const o19 = {
            };
            o19.h = o19;
            o19.h = this;
            o19.g = this;
            o19.f = a6;
        } catch(e20) {
        }
        function f21(a22) {
            return Uint32Array;
        }
        new Uint16Array(6);
    }
}
const v27 = new C3(v2, v0);
const v28 = new C3(v27, v0);
const v29 = [v2,v28,v28];
const v30 = [v0];
[v30,v2,v30,v1,C3];
v29[255] -= b;
v28[65536] = v28;
new C3(v1, v28, v2);
-2;
const v40 = Uint8ClampedArray.prototype;
try { v40.at(Uint8ClampedArray, Uint8ClampedArray, v40, Uint8ClampedArray); } catch (e) {}
("MAX_SAFE_INTEGER").constructor;
const v45 = new Uint16Array(512);
new Float32Array(v45);
Int32Array.name;
const v50 = new Int32Array(2);
v50[0] = v50;
new Uint32Array(64);
try { new Uint32Array(64, 64, Uint32Array); } catch (e) {}
const v57 = new Uint32Array(512);
v57[319];
class C62 {
}
const v63 = new C62();
try { v63.toLocaleString(); } catch (e) {}
undefined ** v63;
