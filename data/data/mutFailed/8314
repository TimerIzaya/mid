class C3 {
    9 = 2;
    static get a() {
        const v5 = ~1.0;
        try {
            super.reject(v5, v5);
        } catch(e7) {
            ([0.7021385356541069,NaN,3.752300846891645,76.93522341476432,-277.4575758719999,9.404843788357361,-320.7110241266939])[Symbol.hasInstance];
            function F12(a14) {
                if (!new.target) { throw 'must be called with new'; }
            }
        }
        return 2;
    }
    o(a16) {
        a16[this] = a16;
        this[6];
        /Za*b|c/gdisy;
        /z\p{Nd}p(x)(x)(x)\1(EvQF)?/gvdms;
        return /f[\0]/gvis;
    }
}
const v21 = new C3();
const v22 = new C3();
const v23 = new C3();
("valueOf").localeCompare(-2147483647n, "valueOf");
function f34(a35, a36) {
    const o53 = {
        "g": 1073741824,
        get d() {
            function f38(a39, a40) {
                const t31 = "valueOf";
                t31[this] = 2;
                const v42 = [-48288,15,-63536,268435456];
                class C43 extends Array {
                    constructor(a45, a46, a47) {
                        super(a45);
                    }
                }
                const v48 = new C43();
                const v49 = new C43();
                v48[v42] = v49;
                return v48;
            }
            this[Symbol.toPrimitive] = f38;
            super[this];
            return this;
        },
        "f": 3,
        ...a35,
        10: 1073741824,
    };
    o53[Symbol.toPrimitive] = f34;
    return o53;
}
f34(f34(f34));
function f58(a59, a60, a61) {
    const o79 = {
        set e(a63) {
            for (const v64 of "40208") {
            }
        },
        valueOf(a69, a70, a71) {
            let v72;
            try { v72 = v23(a70, -132690403n, 41923, a61); } catch (e) {}
            let v73;
            try { v73 = new v72("40208", this); } catch (e) {}
            try {
                v73.__proto__ = v73;
            } catch(e74) {
            }
            return v73;
        },
        "h": v21,
        p(a76, a77) {
            this.toString(a77, this, 2);
            return 1.0;
        },
    };
    return o79;
}
f58(-132690403n, v22, v22);
f58(-132690403n, C3, C3);
f58(-132690403n, v23, v23);
const v84 = [-1.5424212036356715e+308];
v84.shift();
v84[536870887n] = v84;
const v87 = /0j/vds;
try { v87.compile("Di0", "Di0"); } catch (e) {}
Symbol.hasInstance.toString();
