const v3 = [256,31306,4294967297,1073741825,2147483648];
const v4 = [11,1073741823,-1024,3,4294967297,-891446373,-2506,8];
const v5 = [-37125,-14,5,-35564,15,-256,-4,9007199254740991,-1024];
let v6;
try { v6 = v5.splice(-1000000000000.0); } catch (e) {}
try {
    v3.reduceRight(0.5857678210563058, 62.17625587543853);
} catch(e8) {
}
function f9(a10, a11, a12, a13) {
    const o20 = {
        10: v5,
        "h": a10,
        3011: v4,
        __proto__: v5,
        "g": v5,
        "d": a12,
        [a10]: 0.5857678210563058,
        2: a12,
        get a() {
            try { a13(a12, this, this, a11); } catch (e) {}
            super[a12] = delete this[536870912];
            return 0.5857678210563058;
        },
    };
    return o20;
}
const v21 = f9(-1000000000000.0, -1000000000000.0, v4, 62.17625587543853);
f9(62.17625587543853, 0.5857678210563058, v4, -1000000000000.0);
const v23 = f9(0.5857678210563058, 0.5857678210563058, v4, 0.5857678210563058);
function f24() {
    return v23;
}
function F25(a27) {
    if (!new.target) { throw 'must be called with new'; }
    let v26 = this;
    v26--;
    v21[4];
    const v30 = v21.g;
    (!-1000000000000.0)?.[9];
    v26.constructor;
    try { new v30(); } catch (e) {}
    new BigInt64Array();
}
new v6();
new v6();
