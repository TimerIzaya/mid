const v0 = [-957702.2455041178,-1000000000000.0,1000000.0,-2.0,0.5421642283436707,-1.7976931348623157e+308,5.0,-2.220446049250313e-16];
const v1 = [-707214.2674380112,1000000.0,2.0,-1000000000000.0,1.0];
const v2 = [0.08681085722303172,NaN];
WeakSet.c = WeakSet;
const v4 = new WeakSet();
try { v4.delete(v4); } catch (e) {}
const v7 = -65537 >> -65537;
function F10(a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    a13 >> a13;
    try {
        let v16;
        try { v16 = Float32Array.bind(); } catch (e) {}
        v16.name = v16;
        v16.length;
        return Float32Array;
        function F19(a21, a22) {
            if (!new.target) { throw 'must be called with new'; }
            try {
            } catch(e23) {
            }
            try {
                Math.clz32();
            } catch(e25) {
            }
        }
        this.f = a13;
    } catch(e26) {
    }
    try {
        this.g = a13;
    } catch(e27) {
    }
    new Map();
    function f30(a31, a32, a33) {
        return a31;
    }
    function f35() {
        return f35;
    }
    for (let [i39, i40] = (() => {
            /Aabc|defmxyz{1,}?qMa{0,1}?/gvdis;
            return [0, 10];
        })();
        i39 < i39;
        ) {
    }
    const o47 = {
        "arguments": v1,
        "type": "function",
    };
    new Worker(f30, o47);
    try {
        15312 | [Infinity,5.072687501529128e+307,0.4093098171074484,4.0,-4.442441003635313e+306,843998.4933901483,-714.8973177887364];
        class C52 {
        }
        try { C52.m(); } catch (e) {}
        this.e = a13;
    } catch(e54) {
    }
}
F10.arguments = F10;
new F10(v2, -65537);
let v56 = new F10(v0, -65537);
v56.d = v56;
const v57 = new F10(v0, -65537);
v57.BYTES_PER_ELEMENT = v57;
v56--;
const v61 = new Uint8ClampedArray(4096);
eval();
const o64 = {
};
o64.c = o64;
class C66 {
    static {
        try {
            const t76 = null;
            t76.valueOf = this;
        } catch(e68) {
        }
    }
}
try { new C66(); } catch (e) {}
function f70(a71) {
    return Uint8ClampedArray;
}
try { new Worker(); } catch (e) {}
const v75 = [v61];
new Uint16Array(3327);
function f79() {
    let v80 = 946.0676210033328;
    v80++;
    const o82 = {
        __proto__: v80,
    };
    return f79;
}
const o96 = {
    get c() {
    },
    ...v2,
    "type": "function",
    ..."function",
    "arguments": v2,
    set g(a85) {
        function F86(a88, a89, a90) {
            if (!new.target) { throw 'must be called with new'; }
        }
    },
    toString(a92, a93, a94) {
        try { this.toString(); } catch (e) {}
        F10[v1] = 4096;
    },
    "arguments": v75,
    "type": "function",
};
const v97 = new Worker(f70, o96);
v7(parseFloat);
class C104 extends Array {
    2 = 64;
}
const v105 = new WeakMap();
try { v105.has(v61); } catch (e) {}
Int32Array.name = Int32Array;
const v108 = new Int32Array(4096);
v108.lastIndexOf(v105, -2147483647);
v97.getMessage();
