("toString").match();
const v7 = new Float32Array(4096);
v7.lastIndexOf(1.3174607869926752e+308);
new Int32Array(3825);
new Float64Array(2197);
const v16 = ("128").fontsize();
const v19 = new Uint8ClampedArray(9);
let v21;
try { v21 = BigInt64Array.from(v19); } catch (e) {}
const v22 = new Float32Array(2);
const v23 = [Int32Array,v22,3825];
[v21];
[v23,v22,v22,Float32Array];
function F28() {
    if (!new.target) { throw 'must be called with new'; }
}
const v30 = new F28();
const v32 = Array.d;
v32[v30] = v32;
const o33 = {
    "construct": v16,
    "defineProperty": Array,
    "getPrototypeOf": Array,
    "preventExtensions": Array,
    "set": v30,
};
const v38 = new Uint32Array(381);
new Float32Array(v38);
