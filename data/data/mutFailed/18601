const v3 = ["f","f","f","o","f"];
function f4(a5, a6, a7, a8) {
    for (let i11 = 0, i12 = 10;
        (() => {
            const v13 = i11 < i12;
            class C14 {
            }
            const v15 = new C14("o", a6);
            class C16 {
                static #e;
                static {
                    try {
                        v15.#e = this;
                    } catch(e18) {
                    }
                }
            }
            return v13;
        })();
        i12--) {
        i12 & i12;
    }
    return f4;
}
for (let v25 = 0; v25 < 5; v25++) {
    f4();
}
%OptimizeFunctionOnNextCall(f4);
f4("f");
[v3,"number"];
[v3];
new Float32Array(-32639);
new Uint16Array(-54222);
new BigInt64Array(1956);
function f42(a43, a44) {
    const o45 = {
        "g": a43,
        "h": "a",
    };
    return o45;
}
f42(2147483648, "a");
class C47 {
    get e() {
        let v50 = -7673;
        v50--;
    }
}
