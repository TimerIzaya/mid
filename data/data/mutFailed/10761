function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = -9223372036854775808;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
v6.d = v6;
"268435441" == "268435441";
class C14 {
    c;
    1786;
    static g;
    static a;
    p(a16, a17) {
        function f18(a19, a20, a21, a22) {
            const o23 = {
                "f": "268435441",
                "a": v5,
            };
            return o23;
        }
        const v24 = f18(-1024, v4, f18, v5);
        const v25 = f18(-1024, v5, "LXlR", v6);
        v24 + 1073741824;
        for (let v27 = 0; v27 < 32; v27++) {
            a16["p" + v27] = v27;
        }
        f18(9223372036854775807, v6, -1024, v5);
        return v25;
    }
}
const v31 = new C14();
const v32 = new C14();
v32[1786] = v32;
const v33 = new C14(v5, v31);
v33[1786] = v33;
const v34 = /2a\sc/uds;
function f35() {
    try { v34.test(v34); } catch (e) {}
    const t43 = Array(11);
    t43.length |= 113;
    return 11;
}
function f41(a42, a43) {
    const o44 = {
        "c": a42,
        "h": a42,
    };
    return o44;
}
f41(v33, 1073741824);
const v46 = f41(v32, 1073741824);
f41(v33, -1024);
const v49 = Symbol?.keyFor;
try { new v49("-10"); } catch (e) {}
v34[Symbol.toPrimitive] = f35;
const v52 = /2(x)(x)(x)\3/dim;
v52.dotAll = v52;
function f53(a54) {
    v34[0];
    let v58;
    try { v58 = ("imul").padEnd(1073741824); } catch (e) {}
    return v58;
}
v52.valueOf = f53;
const v59 = /DIxJ0a[\cA]?/udy;
function f60(a61, a62) {
    try { a61.o(a61, a62, v46, a62); } catch (e) {}
    [] = "LXlR";
    return Symbol;
}
v59.toString = f60;
try { v59.exec(v59, v59, v34, v6); } catch (e) {}
const o69 = {
    [v34](a66) {
        try {
            super.m(this);
        } catch(e68) {
        }
        return v34;
    },
};
o69[Symbol.iterator] = f35;
function f72(a73) {
    ("getBigInt64").normalize();
    return "getBigInt64";
}
o69[Symbol.iterator] = f72;
Uint8ClampedArray.BYTES_PER_ELEMENT;
const v81 = new Uint8ClampedArray(1000);
v81.valueOf = Symbol;
Object.defineProperty(v34, "g", { writable: true, enumerable: true, value: Uint8ClampedArray });
-268435456;
3 | 268435456;
const v87 = Math.ceil(v52);
const v88 = v81 ^ 3;
v88 == v88;
const v90 = v52 ^ 268435456;
const v92 = new BigUint64Array(3, "268435441");
-14;
const v96 = new Int8Array(14);
v96.toString = f35;
const v97 = v96?.constructor;
try { new v97(o69, Math, 3); } catch (e) {}
try { new Int16Array(v92, v92, Int16Array); } catch (e) {}
new Int16Array(3912, v87);
const v103 = /9f8\xf0\x9f\x92\xa9/diy;
function f104(a105, a106) {
    a105[a106] = a106;
    try {
        f35();
    } catch(e108) {
    }
    return v90;
}
v103.constructor = f104;
v96[5] = v32;
try {
    v96.toString();
} catch(e113) {
}
const v116 = +v88;
v116 | v116;
v88 >>> (v116 + -3.0);
const v120 = v103["compile"]();
v120.constructor = Symbol;
v120?.constructor;
