function f0() {
    const o16 = {
        ..."-11",
        valueOf(a5, a6) {
            a6.g &&= -9223372036854775807;
            new Uint8Array(64);
            new Int16Array(7);
            new Uint16Array(2);
            return 2;
        },
    };
    return o16;
}
f0();
f0();
f0();
const v22 = new Int8Array(129);
new Float32Array(1);
new Uint8Array(14);
class C30 {
    static #o() {
        const v32 = [-2147483648,-46456,1200954989,-4294967296,1];
        const v33 = [10,-13,-4294967297,-11,984,9,-24883,1024,5,10];
        const v34 = [23955,1426598775,2147483649];
        try {
            v33.#o(v33, v34, null, v33, v32);
        } catch(e36) {
        }
        return null;
    }
    #p() {
        const v38 = this[223];
        const v39 = super.g;
        let v40;
        try { v40 = v38.p(this, v39, v39, v39); } catch (e) {}
        this[null] = v40;
        new Map();
        return v39;
    }
    [C30];
    2646071560;
    g;
    #d = v22;
    #h = Float32Array;
}
const v43 = new C30();
const v44 = new C30();
const v45 = new C30();
class C46 {
    p(a48) {
        const v49 = null - a48;
        %VerifyType(v43);
        super[v43] = v49;
        a48?.[1858] ^ v49;
        for (let i54 = 0; i54 < 7; i54++) {
            try { v44.valueOf(i54, a48, v43, i54, i54); } catch (e) {}
        }
        const v65 = new BigUint64Array();
        v65.buffer.slice();
        Math.cos(Math);
        return C30;
    }
}
const v70 = new C46();
const v71 = new C46();
const v72 = new C46();
try {
    v22.b = -4;
} catch(e75) {
}
let v77 = -1024;
function F78(a80, a81, a82, a83) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = a82;
    try {
        this.f = C30;
    } catch(e84) {
    }
    try {
        this.e = v72;
    } catch(e85) {
    }
    try {
        this.a = a81;
    } catch(e86) {
    }
}
new F78(38767, v70, v43, v44);
new F78(38767, v72, C46, v70);
const v89 = new F78(v77, v71, v43, C30);
const v90 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v91 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
new Uint32Array(v90, 0, 0);
function F97(a99, a100) {
    if (!new.target) { throw 'must be called with new'; }
}
const v101 = new F97(v91, 0);
new F97();
class C104 {
}
let v106 = 0;
while (v106 < 3) {
    const v110 = Symbol.iterator;
    const o119 = {
        [v110]() {
            let v112 = 10;
            const o118 = {
                next() {
                    v112--;
                    const v116 = v112 == 0;
                    const o117 = {
                        "done": v116,
                        "value": v112,
                    };
                    return o117;
                },
            };
            return o118;
        },
    };
    v106++;
}
const o125 = {
    valueOf() {
        return "D2z";
    },
};
const v127 = /5*/gi;
const v128 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v129 = [601759695];
const v130 = [1073741824,1073741823,1376142744,1073741825];
const t131 = "b";
t131.e = "B";
function f133(a134, a135, a136, a137) {
    function f138() {
        let v141 = Float64Array;
        v141 = a135;
        b = v129;
        const v142 = v90.length;
        try {
            v90.forEach(v141);
        } catch(e144) {
        }
        const v145 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        let v147 = Symbol.toPrimitive;
        const o169 = {
            toString(a149, a150) {
                const v151 = a137 && v141;
                function f152() {
                    a149 *= v147;
                    return v141;
                }
                f138();
                Symbol("D2z");
                new Uint16Array(6);
                (-1.4618325192014402e+308) ** -724330360;
                class C161 {
                }
                new Float32Array(0);
                new Int32Array(153);
                return v151 <= v145;
            },
        };
        const o193 = {
            "c": -4294967297n,
            [522675525n](a172, a173) {
            },
            "c": v129,
            valueOf(a175, a176) {
                return this;
            },
            "b": -4294967295,
            [-4294967297n](a178, a179, a180, a181) {
                [-1.7976931348623157e+308,-4.047862669744725e+307,-2.2250738585072014e-308,0.790769162254034,0.024752255798642486,640440.6769019293,-2.0];
            },
            "e": -4294967295,
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v128,
            ...v89,
            __proto__: v147,
            "f": -4294967295,
            "a": f138,
            [v45]: -4294967295,
            "g": Uint32Array,
            [v147]() {
                const o185 = {
                    next() {
                        return v127;
                    },
                };
            },
            "type": C104,
            ..."Vre",
            valueOf(a187, a188) {
                return a188;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            toString(a190, a191, a192) {
            },
            5: -4294967295,
            6: -268435456,
        };
        v147 = v141;
        new Float32Array(1334);
        v77 %= -268435456;
        new Uint32Array(v91, v142, v147);
        v101 - f138;
        try {
            new Float64Array(127);
        } catch(e202) {
        }
        new Float64Array(3);
        new Uint16Array(2);
    }
    f138();
    new Int8Array();
    %OptimizeFunctionOnNextCall(f138);
    try { v130["find"]("find", a137, v129, v130, 522675525n); } catch (e) {}
}
for (let v217 = 0; v217 < 10; v217++) {
    f133();
}
%OptimizeFunctionOnNextCall(f133);
f133();
