("getBigInt64").normalize(6, "getBigInt64");
const v5 = new Uint8ClampedArray(6);
const v8 = new Uint8Array();
try { v5(-85357.59116785484, ...v8, 64, 46, -3.383486186086852e+307, ...v5); } catch (e) {}
new Int8Array(6);
new Uint32Array(9);
function f19() {
}
class C20 {
}
C20.constructor;
new Int8Array(5);
[9,4096,536870912];
function f24() {
    return f24;
}
const v25 = /(?:a*)+q(?<a>.)/guds;
function f26(a27) {
    const v28 = a27?.constructor;
    try { v28(a27, f24); } catch (e) {}
    const o31 = {
        get d() {
            return a27;
        },
        __proto__: v25,
    };
    return o31;
}
[4,268435456,1670888877,-42853,-256,536870888,-1,2147483648];
[-2147483649];
let v34 = -6.50438168344124;
v34 **= v34;
