function f0() {
}
const v4 = [2147483648,442478333,1024,268435440,64,-9007199254740992,16,2,-12,536870912];
const v5 = [4294967296,-8];
const v6 = [-9007199254740992,129,-2147483647,1000,-4,-5,1073741823,257,2147483648,8];
try { v6.sort(v4); } catch (e) {}
try { ("constructor").split(f0, "isConcatSpreadable"); } catch (e) {}
let v11;
try { v11 = ("undefined").italics(); } catch (e) {}
function f13() {
    return "a";
}
function f14(a15, a16, a17, a18) {
    a15[1] = a15;
    a16.e = a16;
    try { a18.blink(); } catch (e) {}
    const o43 = {
        "g": a17,
        ...a18,
        [a18]: v5,
        [a17]: v6,
        n(a21, a22, a23) {
            const v24 = /ya\q/gdmsy;
            /Fxyz{1,32}?/gvdm;
            const v27 = [a18,/GP(?=)/um,v24,a21];
            [-27.81163813703654,-0.0,1.530088128593599e+308,0.3112707107827619,2.1836574819517534,8.867415367815848];
            [802.6141055934465,5.0,1000.0,2.0,7.399682256358492,6.284100339299783,-1000.0,-3.0,3.882070057728807];
            const v30 = [-5.0,1.408114100771156e+308,2.460009249281594,-1e-15,597309.7217272015,-1000000000.0];
            Math.sqrt(-1.0);
            const v35 = -1.0 || 64;
            Math.hypot(v35);
            Math.round(v35);
            Math.acosh(64);
            -1.0 && v30;
            [this,a21,[a18,v27],a22];
            a21["undefined"];
            return "constructor";
        },
        __proto__: "a",
    };
    return o43;
}
f14(v5, v4, "undefined", "undefined");
const v45 = f14(v4, v6, "a", "p");
v45[0] = v45;
const v50 = -9 & "isConcatSpreadable";
Math.sqrt(v11);
const v52 = 1073741823 + v50;
+v50;
const v54 = -"a";
v50 | v52;
const v56 = f14(v5, v5, "a", "a");
~4096;
const v59 = [4096,4096,4096];
function F60(a62, a63, a64, a65) {
    if (!new.target) { throw 'must be called with new'; }
    a62 % a62;
    a63 + a63;
}
const v68 = new F60(4096, 4096, v59, v59);
const v69 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
class C70 {
}
const v71 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
try { v71.sort(v56); } catch (e) {}
for (let [,v73,v74] of v59) {
    ["boolean",[[v54],v45]];
}
const v78 = [601759695];
for (let v79 = 0; v79 < 5; v79++) {
    v79 >>> v79;
    function f81() {
        Array().unshift();
        try {
            v69.forEach(Float64Array);
        } catch(e87) {
        }
        const o88 = {
            "c": v78,
            "arguments": v71,
            ...v68,
            "type": C70,
        };
        o88.c;
        const v90 = [];
        function f91() {
        }
        try { f91(); } catch (e) {}
        v90[Symbol.toPrimitive] = f91;
        function F95(a97) {
            if (!new.target) { throw 'must be called with new'; }
        }
        class C98 extends F95 {
            valueOf(a100, a101, a102, a103) {
                const v104 = this?.constructor;
                try { new v104(); } catch (e) {}
                super[this] = F95;
            }
        }
        C98.name;
        const v107 = new C98();
        const o114 = {
            set g(a109) {
            },
            [v90](a111, a112, a113) {
            },
        };
        for (const v115 in o114) {
            let v116;
            try { v116 = v59.flat(4096); } catch (e) {}
            v116[1];
            new C70();
            try { v107.valueOf(v115); } catch (e) {}
        }
    }
    f81();
    %OptimizeFunctionOnNextCall(f81);
}
