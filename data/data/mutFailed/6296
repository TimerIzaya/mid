const v0 = [-5.556967921351712,6.816423311268748e+307,-786.0873306570995,-1.4078162484441886e+308,-841.1290680271642,-3.0,0.0];
const v1 = [-Infinity,1000000.0,-1.0,2.220446049250313e-16,-1000.0];
const v2 = [2.2250738585072014e-308,-452008.8773298629,-1000000000.0,-4.76034698076214e+307,0.47439914904093694,-534.91725915669,121.58674627215282,-1.6395553965291356e+308,-Infinity,-1000000.0];
let v4 = new WeakSet();
const v7 = new Array(129);
const v8 = new WeakSet(v7);
v4 = v8;
Array(129);
v2.length >>= 129;
let v12 = 1000;
const v14 = 9 - 9;
Math.log10(9 ** v8);
Math.sign(v14);
v14 && v8;
v12++;
Math.tanh(v12);
const v21 = [v7,WeakSet];
const v22 = [v1,v21,v21,v21,v21];
let v23 = 0;
do {
    try { Array.from(v14, Array, v1); } catch (e) {}
    v23++;
} while (v23 < 3)
[v22,v22,v22,v0,v4];
const v30 = new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
class C31 {
    #p(a33, a34, a35, a36) {
    }
    constructor(a38, a39) {
        const v40 = this.constructor;
        try { new v40(); } catch (e) {}
        try {
            v30.#p();
        } catch(e43) {
        }
    }
}
new C31(Uint16Array, v30);
