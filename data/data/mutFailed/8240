new Worker(4);
class C4 {
    constructor(a6, a7, a8, a9) {
        this[this] = a9;
    }
}
const v11 = new BigUint64Array(6);
new Uint32Array(5);
-9223372036854775808 << -9223372036854775808;
class C21 {
}
const v22 = new C21();
const o28 = {
    [v22](a24, a25, a26) {
        super[268435439];
    },
};
new Int32Array(2917);
function F32() {
    if (!new.target) { throw 'must be called with new'; }
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    new Date();
    new Uint32Array(5);
    new Set();
    const o46 = {
    };
    class C49 {
    }
    class C50 extends C49 {
    }
    const v51 = Array(19793);
    for (const v52 of v51) {
    }
    [1024,1024];
    function f60(a61, a62, a63, a64) {
        const o67 = {
            get b() {
                a64[3] = "-26733";
                for (let v66 = 0; v66 < 24; v66++) {
                }
                return a62;
            },
            "e": a64,
            "f": 1073741825,
            "a": 1073741825,
        };
        return o67;
    }
    f60(257, 1535195999, 1535195999, "9007199254740991")[1];
    const v70 = [v51,v51,v51,v51,v51];
    for (let v71 = 0; v71 < 50; v71++) {
    }
    const v73 = [[v70,v70,v70]];
    function f75() {
        const o76 = {
        };
    }
    v73 >= Uint16Array;
    [9223372036854775807,6,Array,v70];
    [Set,C49];
    [v51,Array];
    typeof C50 === "bigint";
}
new F32();
[-1.8841577903499095e+307,-1.0,-3.0,8.835563800552645,-1000000000.0,3.0,2.0880739565629125e+307,-708123.7173974065,1000.0];
[-2.2250738585072014e-308,NaN,882.0675937081389,-7.7049037617463645,-205822.94243878627,1.0,1.7976931348623157e+308,-1000.0,605.7523485857366,-7.508428368972108];
[-418749.88324757107];
class C91 {
    [C4];
    e;
    toString(a93, a94) {
        -this;
    }
    constructor(a97) {
        let v98 = "atan2";
        try { a97[v98](); } catch (e) {}
        v98++;
        new Int32Array(175);
        let v104 = 591114.0785999324;
        const v105 = v104++;
        const v107 = new BigInt64Array(v105, v104, v105);
        function f108() {
            return v107[v105];
        }
    }
}
new C91(30492);
const v111 = v11.constructor;
try { new v111(); } catch (e) {}
function f113() {
    const v116 = Array();
    v116[0] = f113;
    return v116.unshift(3);
}
