class C3 {
    constructor(a5) {
        new WeakMap();
    }
    static {
        new Float64Array(87);
        new isNaN(3);
        new BigInt64Array(2294);
    }
}
("setUTCMinutes").toUpperCase(9.737511095981233, 9.737511095981233, 0.35725608464071024);
function f21(a22, a23) {
    const o24 = {
    };
    return o24;
}
for (let v25 = 0; v25 < 25; v25++) {
    const v26 = f21();
    Object.defineProperty(v26, v25, { enumerable: true, get: f21, set: f21 });
    try { Reflect.preventExtensions(v26); } catch (e) {}
    const o30 = {
    };
    gc(o30, v26, "setUTCMinutes");
}
const v32 = new C3("-13");
const v33 = new C3(9.737511095981233);
new C3(v33);
function F35(a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = v32;
    } catch(e39) {
    }
    try {
        this.e = a38;
    } catch(e40) {
        const v42 = new Uint8ClampedArray(Uint8ClampedArray, Uint8ClampedArray, Uint8ClampedArray);
        const v43 = v42.length;
        const v45 = ("stack").normalize();
        async function f46(a47, a48, a49, a50) {
            Object.defineProperty(v45, 0, { enumerable: true, value: v43 });
            return f46;
        }
        f46();
    }
}
const v52 = new F35(v33, F35);
const v53 = new F35(v52, v33);
new F35(v32, v53);
Math.imul();
