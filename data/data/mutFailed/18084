new BigUint64Array(9);
for (let v4 = 0; v4 < 5; v4++) {
    function f5() {
        Math.atan(Math);
        return Math;
    }
    f5();
    %OptimizeFunctionOnNextCall(f5);
}
new Uint8Array(256);
const v13 = new Int32Array(64);
const v14 = [64,9,9,256];
const v15 = [9,v13,Uint8Array,Int32Array,v14];
[v14,v15,v15];
function f17() {
    return v15;
}
Int32Array.sup(("-1723624938").slice(9, "g").normalize(), "-1723624938");
const v29 = new BigInt64Array(64);
class C30 {
    static [v29];
}
const v31 = [];
class C32 {
    static get b() {
        try {
            super.getOwnPropertyNames();
        } catch(e35) {
        }
        return v31;
    }
    constructor() {
        this[v31] = this;
        this[v31] %= this;
    }
    static e;
    [v31];
}
