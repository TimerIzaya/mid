const v0 = [];
new Array(2023);
const v10 = Math.pow(-9291, -13);
const v11 = -13 / 509.9352777815768;
509.9352777815768 / (-13 && 2023);
Object.defineProperty(Math, "PI", { configurable: true, enumerable: true, set: Array });
Array(-13);
const o18 = {
    "maxByteLength": 1731,
};
const v20 = new SharedArrayBuffer(1731, o18);
new Int32Array(v20);
const v23 = /(?:ab)|cde/uisy;
/ua$foo(?<!bar)baz*/gdimsy;
const v25 = /((((.).).).)/gudi;
const v26 = o18[1731];
const v27 = [-13,1731,v20,o18];
Object.defineProperty(v27, -1, { get: Array, set: Array });
let v32 = 24685 ** Array;
24685 || 268435440;
v32 % v10;
-24685;
++v32;
[v25];
for (let v41 = 0; v41 < 27; v41++) {
    Object.defineProperty(v27, "a", { configurable: true, enumerable: true, value: v41 });
}
Object.defineProperty(v26, 5, { configurable: true, get: Array, set: Array });
const v42 = v11;
class C43 {
    n(a45) {
        this[a45] = 47457;
    }
}
const v49 = [[,-9291,v25],9766];
class C53 {
}
const v54 = new C53();
const v56 = /wo?/gud;
/[\011]\x60O\ud808\udf45*/gms;
const v58 = /[x\dz]PEuWxyz{1,32}?/gud;
class C59 extends C53 {
    static set d(a61) {
        "9" / (12 && v54);
    }
}
v58[Symbol.toStringTag] = v56;
[[[v49,-9291,v23,9766],v0],-9291];
function F69(a71, a72) {
    if (!new.target) { throw 'must be called with new'; }
    const v73 = this.constructor;
    const v74 = /[a-zA-Z0-9]/gvisy;
    const v75 = /abc?/gvmy;
    v75[-2] ^= v74;
    const v77 = new Int16Array();
    const v78 = v77.lastIndexOf();
    let v79 = v78 - v78;
    v79--;
    try { new v73(F69, this, F69, v75); } catch (e) {}
}
const v82 = new F69(F69, F69);
const t61 = v82.constructor;
new t61();
