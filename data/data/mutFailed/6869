function F1(a3, a4) {
    if (!new.target) { throw 'must be called with new'; }
    a3[4] = a3;
    const v6 = this.valueOf().constructor;
    try { new v6(); } catch (e) {}
    a3[4];
}
new BigUint64Array(1141);
Float64Array.name = Float64Array;
const v13 = new Float64Array(64);
let v16;
try { v16 = new Float32Array(Float32Array, 128, v13); } catch (e) {}
new Float32Array(128);
const v22 = 54893 << 54893;
class C24 {
}
let v25;
try { v25 = new C24(); } catch (e) {}
function F26(a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
}
try { new F26(BigInt64Array, C24); } catch (e) {}
function f31() {
    return f31;
}
function f32() {
    return f31 == f32;
}
f32.e = f32;
const v34 = new BigInt64Array();
let v37 = -128;
v37--;
const v39 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
[601759695];
function f41(a42, a43, a44, a45) {
    a42 & a42;
    a43 - a43;
    class C49 extends Float64Array {
        constructor(a51, a52) {
            super();
            const v55 = new Int8Array();
            v55.lastIndexOf();
        }
    }
    try { C49.of(); } catch (e) {}
    function f58() {
        const o85 = {
            "c": -4294967297n,
            [a43](a62, a63) {
            },
            "maxByteLength": v37,
            valueOf(a65, a66) {
                return -4294967297n;
            },
            "e": -4294967295,
            "e": -268435456,
            __proto__: v39,
            "e": v39,
            "c": v22,
            [54893](a68) {
            },
            "maxByteLength": -4294967295,
            "arguments": v39,
            ...f58,
            n() {
                return this;
            },
            "execution": "toPrimitive",
            get a() {
                class C71 {
                    constructor(a73, a74) {
                    }
                }
                eval();
            },
            valueOf(a78, a79) {
                return -268435456;
            },
            "type": "d",
            toString(a81, a82, a83) {
                f32[BigInt64Array] = a45;
                return 255n;
            },
            "c": 54893,
        };
        return o85;
    }
    f58();
    %OptimizeFunctionOnNextCall(f58);
    return arguments;
}
v25[1] = f41(v37, 1000.0, v34, v39).callee(1000.0, v34);
f41();
v16();
