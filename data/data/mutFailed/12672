new Int32Array(175);
new Uint8ClampedArray(175);
function F13(a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    this.hasOwnProperty(F13);
    this.constructor;
    try { new Uint8ClampedArray(); } catch (e) {}
}
const t8 = "-353252600";
new t8(6);
for (let i = 0; i < 10; i++) {
    class C23 {
        constructor(a25) {
            const v26 = this.constructor;
            function f28(a29, a30, a31) {
                return a30;
            }
            class C32 extends f28 {
            }
            for (let v33 = 0; v33 < 5; v33++) {
                Object.defineProperty(C32, Float32Array, { enumerable: true, get: f28 });
            }
            try {
            const t0 = 6;
            new t0();
            } catch (e) {}
            v26.g;
            let v36 = ("-353252600")?.[7];
            [...v36] = "size";
        }
    }
    new C23("size");
}
