class C3 {
    get c() {
        let v4 = this;
        for (let i6 = 0; i6 < 1;) {
            function F11(a13, a14, a15) {
                if (!new.target) { throw 'must be called with new'; }
            }
        }
        super.e;
        let v20 = 6.451336625982858;
        const v21 = --v4;
        Math.sinh(-63736);
        Math.imul(v21, 9);
        -v21;
        ++v20;
        const v27 = new Float32Array();
        for (let v28 = 0; v28 < 5; v28++) {
            v27[836499325] = ~v28;
        }
        return 9;
    }
}
const v30 = new C3();
new C3();
const t24 = -871419482;
const v34 = new t24();
const v36 = new BigInt64Array();
const v37 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
const v38 = [-1.7976931348623157e+308];
function f39(a40, a41, a42, a43) {
    const o48 = {
        toString(a45, a46, a47) {
            a42[a41] = a40;
        },
    };
    return o48;
}
f39(v36, 129, v38);
f39(v34, 129, v37);
new C3();
const v52 = [50556,10000];
const v53 = [4096,-517028876,-24883,1073741823,23433,4294967296];
const v54 = [-1515963446,16876,-13,15,-481763600,65535,1073741823,4,-392565812];
class C61 {
}
const v62 = C61.constructor;
class C63 {
}
const v64 = new C63();
const o66 = {
};
const t51 = o66.constructor;
t51(128);
const v71 = new v30();
const v74 = new BigInt64Array(256);
function F77(a79) {
    if (!new.target) { throw 'must be called with new'; }
    a79 / a79;
    const v81 = this.constructor;
    v81.name;
    try { new v81(-143547321); } catch (e) {}
}
v74.includes(undefined);
class C85 {
    constructor(a87, a88, a89, a90) {
        this.constructor;
        try { new v54(a88, v62, 42853, a88); } catch (e) {}
        for (let v93 = 0; v93 < 5; v93++) {
            ~a89;
            1000.0 >>> v93;
            v71[v93] = a90;
        }
    }
    /*
    constructor(a97, a98) {
        v54.unshift(v53, a98, [this,this]);
    }
    */
    /*
    constructor(a102, a103, a104, a105) {
        a102[7] = a102;
        a103--;
        const v107 = this?.constructor;
        try { new v107(v52, a104, a104, v54); } catch (e) {}
        a103 >>> a103;
        -0.0 >>> -0.0;
    }
    */
}
const o114 = {
};
class C115 {
}
const v116 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f117() {
    try {
        v116.forEach();
    } catch(e119) {
        e119.a = e119;
    }
    const v121 = Symbol.toPrimitive;
    Symbol.for(v121.description);
    v121.description;
    Symbol.for();
    return v121;
}
v53();
%OptimizeFunctionOnNextCall(Uint8ClampedArray);
new C85(9, C85, v64);
new C63();
