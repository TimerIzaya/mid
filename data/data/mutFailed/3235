"undefined" == "undefined";
Symbol("bZ");
function F8() {
    if (!new.target) { throw 'must be called with new'; }
    Symbol.c = this;
    -9223372036854775808 - -9223372036854775808;
}
let v12;
try { v12 = new F8(); } catch (e) {}
const v13 = new F8();
v13.c = v13;
const t11 = "-34092";
t11[1] = "-34092";
new BigUint64Array(9);
const v21 = new v12(2717);
let v24;
try { v24 = new Float64Array(10, "setFullYear", F8); } catch (e) {}
new v24(10);
function F27(a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    a29.e = a29;
    const v31 = this?.constructor;
    v31.e = v31;
    try { new v31(this); } catch (e) {}
    const t24 = "setFullYear";
    t24.c = a29;
}
new F27(18074);
const v34 = [-50.96907394271625,3.0,-570016.204056581,0.7917375798188904,5.844526521291116e+307,-1.7976931348623157e+308,-2.2250738585072014e-308,0.0,1.0];
const v35 = [-2.220446049250313e-16];
class C36 {
    static [-2];
    static {
        function f38(a39, a40) {
            return a39;
        }
        const o46 = {
            o(a42) {
                const o44 = {
                };
                gc(o44);
                return Symbol;
            },
        };
        const o48 = {
        };
        const v50 = new Proxy(Uint32Array, o48);
        o46["o"](o46, Uint32Array, "o", "o", v50);
        const v53 = super[v50];
        try { v53.join(10, 10, v53); } catch (e) {}
        const o55 = {
        };
        [/LD/vds,1000.0];
    }
    constructor(a60, a61) {
        function f62() {
            function f64(a65) {
                a65 !== v35;
            }
            this.onmessage = f64;
        }
        const v70 = [];
        const o74 = {
            "arguments": v70,
            "type": "function",
            get f() {
                return this;
            },
            get e() {
                try {
                } catch(e73) {
                }
            },
        };
        new v24(f62, o74);
    }
}
new v21(v34, v35);
