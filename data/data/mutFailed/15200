[7,-844868102,4294967297,-128,-35282,-7,52143,5];
const v1 = [-8,9223372036854775807,6,-49605];
const v2 = [1387];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a5;
    } catch(e6) {
    }
}
new F3(v2);
new F3(v1);
new F3(v1);
64 | 64;
1073741825 - 1073741825;
for (let v16 = 0; v16 < 5; v16++) {
    const o17 = {
    };
    try { Reflect.defineProperty(o17, o17, v16); } catch (e) {}
}
const o27 = {
    "maxByteLength": 9,
};
const v29 = new ArrayBuffer(3, o27);
new BigUint64Array(v29);
-2062997897 >>> -2062997897;
([-2.0,-1000000000000.0,2.0,-820.2064938681668,-1e-15,0.8162679086070171,-2.4182463911370693,-7.307764936942877e+306])[5];
[-1.1315451378975964e+308,5.0,1000000000000.0,3.0,1e-15];
[-Infinity,1000000.0,-745.8509480667769];
for (let v38 = 0; v38 < 5; v38++) {
    function f39() {
        class C40 {
            [v38];
            static #h;
        }
        new C40();
        new C40();
        new C40();
        try { ("Vre").search("Vre"); } catch (e) {}
        let v46 = ("Vre").codePointAt(v38);
        -9223372036854775807 * v46--;
        new Float64Array(1024);
        new Int16Array(3627);
        new BigInt64Array(2);
        return f39;
    }
    f39();
    %OptimizeFunctionOnNextCall(f39);
}
