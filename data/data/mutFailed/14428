new Int32Array(256);
const v4 = [-9223372036854775807];
const v5 = [-946.1982015264321,-406.6809700455609];
const v6 = [1000000000.0];
const v7 = [374.7273106587254,209221.80692563835,1.6228600269929596e+308,1.7976931348623157e+308];
const v11 = [1000.0,1000n];
[v7,v4,10n,v5];
const v13 = [v11,v11,v11];
for (let v14 = 0; v14 < 25; v14++) {
    v6["p" + v14] = v14;
}
function f17() {
    const o31 = {
        "e": -4294967295,
        ..."Vre",
        valueOf(a22, a23) {
            const v26 = new Int16Array(1269);
            for (const v27 in v26) {
            }
            function f28() {
                return f28;
            }
            const v30 = ([f28,f28,f28]).group(f28);
            v30.c = v30;
        },
        ..."Vre",
        4: "Vre",
        "c": -268435456,
        5: -4294967295,
        6: -268435456,
    };
    return o31;
}
%PrepareFunctionForOptimization(f17);
f17();
f17();
%OptimizeFunctionOnNextCall(f17);
f17();
with (v13) {
    let v36 = 0;
    while (v36 < 8) {
        v7.length;
        v36++;
    }
    new Int32Array(v6, v5, Int32Array);
}
const v45 = v4[0];
new Int16Array(4096);
new Uint32Array(3888);
new Uint8Array(255);
Int8Array.prototype = Int8Array;
Reflect.construct(f17, [], v45);
new Map();
new Int8Array(7);
new Float32Array(128);
837798151 & 837798151;
const v70 = [-554.3883745381902,874.2208688504531,0.0,1.7976931348623157e+308,1e-15];
v70[4];
v70[8] ^= -297927.3051276769;
