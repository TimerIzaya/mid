const v0 = [-9007199254740992,-65537,841855796,1000,-2];
const v1 = [1000,536870912,-175232322];
const v2 = [-56695,9007199254740990,-9007199254740991,-4294967297];
const v6 = new WeakMap();
const v7 = /8[\cA]v/uisy;
function f8(a9, a10) {
    const v11 = [v7,v7,v7,v7,v7];
    v6.set(v11, v11);
    return v7;
}
v7[Symbol.toPrimitive] = f8;
const v15 = [3480,1024,-4294967297,-1024,512,65536,29198,-9223372036854775807,-2147483647];
try {
    v15.length = v7;
} catch(e16) {
}
new BigInt64Array(1073741824);
class C21 {
    constructor(a23, a24, a25, a26) {
        let v22 = this;
        v22[2] %= "toLowerCase";
        const v27 = super[v2];
        v22 = v1;
        ([v2,...v0,...a24,v27]).__proto__;
    }
    static {
        function f31() {
            return this;
        }
        this[268435441];
        let [] = "number";
        super["o"];
    }
}
const v34 = new C21(v2, "toLowerCase", "number", v0);
const v35 = new C21(v1, v34, v34, v1);
let v36 = new C21(v34, v34, "o", v1);
class C37 extends C21 {
    ["toLowerCase"];
    set f(a39) {
        const v40 = v35 % v35;
        ("toLowerCase")[this];
        v35[v40] = "o";
        %VerifyType(v36);
        +"number";
        --v36;
    }
    [v2] = C21;
    82 = "toLowerCase";
    1;
    static 1079;
    2884466588;
    static ["toLowerCase"];
}
new C37();
new C37();
new C37();
[-4294967295,7,128,-5,-2,3,3,2,3,663869830];
[268435440,-11,268435441,-2147483648];
[416700078,3507,536870887,10];
for (let v50 = 0; v50 < 5; v50++) {
    const o54 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o54);
}
function F56(a58, a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
    Reflect.construct(Int8Array, [1126838905]);
}
new F56(F56, F56, F56);
