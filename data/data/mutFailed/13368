class C1 {
    static 2009 = true;
    static {
        this.isFrozen = true;
        class C3 {
            [this];
        }
        new C3();
        new C3();
        new C3();
        %VerifyType(this);
        delete this[this];
        this[-2] = this;
        try { this["isFrozen"]("isFrozen", this, true, "isFrozen", this); } catch (e) {}
    }
    h;
    #b;
    #f = true;
}
new C1();
const v11 = new C1();
new C1();
let v14 = -44977;
v14--;
-13392n | -13392n;
207 + 207;
new Float32Array(207);
let v30 = 14;
v30--;
try { new Uint8ClampedArray("symbol", v30, 207); } catch (e) {}
new Uint8ClampedArray(v30);
new Uint32Array(4096);
const v39 = 220 >> 220;
const v41 = new BigUint64Array(220);
const v42 = v41[42];
const v45 = new Uint32Array(958);
v45.g = v45;
const v48 = new Int8Array(3844);
function f49(a50, a51) {
    try {
        v11.g = 1489843090;
    } catch(e53) {
    }
    return a50;
}
v48[Symbol.toPrimitive] = f49;
v48[372] = v48;
let v58 = -1024n;
class C59 {
    set c(a61) {
        v58 = 0n;
        a61 += 0n;
    }
    constructor(a63, a64, a65, a66) {
        C59 >>> v48;
    }
    static [v45] = v42;
    128 = "Cl";
    m(a69) {
        let v70;
        try { v70 = new this(a69, -490778482n, this); } catch (e) {}
        this.c |= v70;
        return a69;
    }
    static 1;
    static h = -490778482n;
    static #f = v58;
}
try { new C59(); } catch (e) {}
new C59();
new C59();
const v74 = new C59();
[1.7976931348623157e+308,0.15227894183030433,-2.0,259880.3330397869,0.0,-1e-15,360683.0243419355,-1e-15,1.7976931348623157e+308];
const v77 = [0.03568519099872258];
try { v77.join(v41); } catch (e) {}
const v79 = [462318.599710946,0.6123807977566038,-0.0,-108306.02593608841,Infinity,0.0,-4.0,-1000.0];
try { v79.at(4096); } catch (e) {}
class C81 {
    static {
        this >> "Cl";
        super[this] = v39;
    }
    [Float32Array];
    static 3518;
    static 2147483648;
    static #valueOf(a85, a86) {
        v74[null] ||= a85;
        const v87 = v77.__proto__;
        try { v87(this, a85, v58, v87, this); } catch (e) {}
        return v77;
    }
    [v58] = v58;
    2;
    static #h = null;
    constructor(a90, a91, a92) {
        new Uint8Array(1024);
        new Int32Array(2);
        new Uint16Array(2277);
    }
    #a = null;
}
new C81();
const v103 = new C81();
v103[2];
new C81();
const v108 = new Uint8Array();
try { v108.entries(); } catch (e) {}
function f110(a111, a112, a113, a114) {
    a113 === a113;
    a113++;
    const o117 = {
        ...v108,
    };
    function f118() {
    }
    function f119(a120) {
        const o121 = {
        };
    }
    function f125(a126, a127, a128) {
        const o129 = {
            "h": a128,
        };
        o129.toString = Symbol;
        return o129;
    }
    f125(-3.9870582640049523, -3.9870582640049523, 1000000.0);
    const v131 = f125(1000000.0, -3.9870582640049523, 1000000.0);
    f125(-3.9870582640049523, -2.2250738585072014e-308, -3.9870582640049523);
    v131["toString"]();
}
for (let v135 = 0; v135 < 500; v135++) {
    f110(Uint8Array, 2, v135);
}
new C1();
[-13392n];
let v144 = 2147483647;
const v146 = v144++;
!true;
v144 % true;
~(+v146);
3 & 3;
-6;
const v154 = /[](?:a{5,1000000}){3,1000000}xyz{0,1}/vdm;
function f155(a156) {
    function f157() {
        const o163 = {
            "e": 12,
            __proto__: 3.4890473589784586e+307,
            "g": 12,
            o(a162) {
                return a162;
            },
            ...1000000000000.0,
        };
        return o163;
    }
}
Object.defineProperty(v154, "b", { writable: true, set: f155 });
v154.b = v154;
1 >>> 1;
6 >>> 1;
new Float64Array(64);
new Int32Array(5);
new BigUint64Array(8);
