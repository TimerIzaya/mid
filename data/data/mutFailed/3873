try { ("string").toWellFormed(); } catch (e) {}
([268435441,268435456,6,-3,1,17516])[0];
[-53846,12,2147483648,2,1097471464,4,-465051699];
const v10 = [4294967297,12,64,1653957332,-9];
v10[4];
const v15 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f16(a17, a18, a19, a20) {
    function f21() {
        let v22 = -4294967295;
        v22 === v22;
        let v24 = Float64Array;
        const v25 = v24.toString();
        try { v25.blink(); } catch (e) {}
        v24 = a18;
        const v27 = v10.length;
        const v28 = v27 >>> v27;
        (v28 / v28) & v28;
        const o35 = {
            toString(a32, a33) {
                a20 && a32;
                return a18;
            },
        };
        o35.toString();
        const v38 = v22--;
        v38 !== v38;
        const o40 = {
            "e": 5.0,
            "e": v28,
        };
        return a18;
    }
    const v41 = f16();
    %OptimizeFunctionOnNextCall(a19);
    return v41;
}
const v42 = f16();
f16(v42, v42, f16, v15);
f16();
