const v0 = /[(\1a)]/vdsy;
const v1 = /S(?:foo)/vms;
/D(?: foo )/gdmsy;
/(?:ab){4,7}*/gvs;
/ouNxyz{0,1}?/ims;
/H/gu;
function f6() {
    return v0;
}
function F10(a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v0;
    } catch(e15) {
    }
}
const v16 = new F10(154.7147519260609, 0.016624175751425052, 0.016624175751425052);
try {
    v16.h = 154.7147519260609;
} catch(e17) {
}
v1["test"]("test");
const v20 = new F10(0.6219950577384911, 154.7147519260609, 0.6219950577384911);
new F10(154.7147519260609, 154.7147519260609, 0.016624175751425052);
function F22(a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a24;
    } catch(e27) {
    }
}
const v28 = new F22(0.6219950577384911, f6, v20);
new F22(0.6219950577384911, v28, v16);
new F22(0.6219950577384911, v28, v20);
const v31 = [];
const v34 = new Array(228);
class C35 {
    [Array] = v31;
    static {
        function F37(a39, a40) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.b = a40;
            } catch(e41) {
            }
        }
        const v42 = new F37(v34, this);
        new F37(Array, F37);
        new F37(v42, v34);
    }
}
new C35();
const v46 = new C35();
const v47 = new C35();
let v50;
try { v50 = v46.o(C35, v47, -1n, v34); } catch (e) {}
try {
    const t57 = "7MU";
    t57.valueOf = v50;
} catch(e51) {
}
