[-8,536870888,-36526,9007199254740991,-2,2147483648,-13];
[1073741823,8,-1024,4294967295,4096,-4294967297];
const v5 = [-1071238090,-9223372036854775808];
class C6 {
    f = 0.7507826314508321;
    get c() {
        super[0.869005723446733];
        return C6;
    }
    [C6];
    static [v5];
    constructor(a10, a11, a12) {
        a10 << a10;
        a12 >>> a12;
        super.g;
        try {
            super.fromCharCode(a11);
        } catch(e17) {
            e17.message;
        }
    }
    d = -2.0973892460827236e+307;
}
const v19 = new C6(0.869005723446733, 0.7507826314508321, 0.869005723446733);
v19.a = v19;
new C6(-2.0973892460827236e+307, -2.0973892460827236e+307, 0.869005723446733);
const v21 = new C6(-2.0973892460827236e+307, -2.0973892460827236e+307, -2.0973892460827236e+307);
function f22(a23, a24, a25, a26) {
    a25++;
    let v28 = 4046;
    v28--;
    const v31 = new BigInt64Array(v28);
    let v32 = undefined;
    const v33 = v32++;
    v33 >> v33;
    Number.isNaN(v33 + v33);
    const v38 = v33 >> v33;
    v38 + v38;
    let o40 = {
    };
    [,...o40] = v31;
    return f22;
}
for (let v41 = 0; v41 < 5; v41++) {
    const v42 = -v41;
    f22(v41, v41, v41, v41);
    let v44 = v21.d;
    v44?.[-1];
    -f22;
    (1073741824 & v42) << v42;
    v44++;
}
