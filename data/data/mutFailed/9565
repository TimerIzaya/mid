const v1 = [155533.8602852358,2.0];
function F3() {
    if (!new.target) { throw 'must be called with new'; }
    const v5 = this?.__defineSetter__;
    let v6;
    try { v6 = new v5(v1, v5); } catch (e) {}
    for (const v10 of Array(19793)) {
        v1[658291203] = null;
        v6--;
    }
}
class C13 {
}
const v14 = new C13();
const t14 = v14.constructor;
const v16 = new t14();
class C19 {
    constructor(a21, a22) {
        const v23 = a21?.constructor;
        let v24;
        try { v24 = this.toLocaleString(this, v23, v14); } catch (e) {}
        v24.charCodeAt(v16);
        this[-2147483648] >>>= -7;
        for (let v26 = 0; v26 < 25; v26++) {
            new C13();
            for (let v29 = 0; v29 < 10; v29++) {
                const v30 = [601759695];
                const v31 = [1073741824,1073741823,1376142744,1073741825];
                try { v31["find"](..."find", undefined, ...v30, ...undefined); } catch (e) {}
            }
            const v35 = new Map(a21);
            const v37 = "p" + -7;
            const v38 = new Map(v35);
            function f39(a40, a41) {
                const o42 = {
                    [v38]: Map,
                };
                return o42;
            }
            f39(v23, this);
            v35[v37] = -7;
        }
    }
    536870887;
}
new Set();
[-1000.0,-Infinity,1.0235319888513317e+307,1.5199732281850112e+308];
[-232.64213936620683,-2.220446049250313e-16,-5.0,-1.0,-789176.8400585222];
[2.2250738585072014e-308,-1.286379981716932e+308,-4.342243958910257,-37285.964403582155,-4.0,-1.254334847385927e+308];
const v53 = new Uint32Array(26);
const v55 = /[(?:a*)+]/gudisy;
function f56() {
    const v59 = new Uint16Array(209);
    const v61 = [delete v53[v53],Uint16Array,v55,"o"];
    [v61,[v59]];
    Object.defineProperty(v61, "d", { writable: true, configurable: true, enumerable: true, value: f56 });
}
class C64 extends f56 {
}
new Uint8ClampedArray();
function F68() {
    if (!new.target) { throw 'must be called with new'; }
}
const v70 = new F68();
Array(5);
Array[v70] = v70.d;
/^a{bfoo(?!bar)bazxxyz{1,}*/imsy;
/3/gsy;
/[\cA]/guisy;
class C80 {
}
class C81 extends C80 {
}
const v82 = new C81();
const v85 = new Uint8Array(2);
const v87 = new Uint32Array(C81);
function f88(a89, a90, a91, a92) {
    try { a89.apply(); } catch (e) {}
    new a89(a92, a90, v82);
    const o98 = {
        "b": a89,
        ...v85,
        n(a96, a97) {
            v87[a89] = v87;
            return a97;
        },
    };
    o98[1] = o98;
    return a89;
}
for (let v99 = 0; v99 < 500; v99++) {
    class C100 {
    }
    class C101 {
    }
    function F102(a104, a105, a106) {
        if (!new.target) { throw 'must be called with new'; }
    }
    f88(Uint8Array);
}
