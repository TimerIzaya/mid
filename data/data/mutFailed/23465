function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 9007199254740991;
    } catch(e3) {
    }
}
new F0();
const v5 = new F0();
const v6 = new F0();
let v8 = 512n;
const v14 = [4,-4418,-1632316911,1024,30114];
[-13,1474067713,29567,-5,-9223372036854775807,-9223372036854775808,1,1587623841];
v6 | -9007199254740991n;
let v17;
try { v17 = v14.values(); } catch (e) {}
try {
    v14.length = v17;
} catch(e18) {
}
[-1182743106,-10];
const v22 = new BigInt64Array(8);
const v25 = new Uint16Array(255);
const v26 = v25?.constructor;
try { v26(v22, v25, 255); } catch (e) {}
const v29 = 512 % 512;
const v31 = new Int32Array(512);
const v32 = [BigInt64Array,BigInt64Array];
const v33 = [Int32Array,Uint16Array,Uint16Array];
const v34 = [v25,Uint16Array,512,Int32Array];
const v35 = /((((.).).).)rfoo|(bar|baz)|quux*/uims;
const v36 = v29.constructor();
switch (v35) {
    case v26:
        const v43 = 8 == v33;
        try { new v36(false, v43, false, v43, 0); } catch (e) {}
        break;
    case 0.3646761897195644:
        v8 = -4096n;
        try {
            v5.__proto__ = Math;
        } catch(e45) {
        }
        break;
    case v34:
        v35[v32];
        v31.valueOf = v36;
        break;
}
