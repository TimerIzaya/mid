const v2 = new WeakSet();
const v3 = [v2,null,WeakSet,null];
[WeakSet,v3];
const v5 = [WeakSet,null];
let v6;
try { v6 = v5.pop(); } catch (e) {}
const v7 = [-638127.280660888];
const v8 = [-3.0,-1.370380395629191e+308,-1000000000.0,-1000000000000.0,3.249200109916524,0.10754460629819729,-1e-15,0.7418865572243084];
try { v8.toLocaleString(); } catch (e) {}
const v10 = [428.8324543558015,4.0,-Infinity,-2.220446049250313e-16,-1e-15];
class C11 extends WeakSet {
    d = v7;
    o(a13, a14, a15) {
        %VerifyType(v5);
        super.h ||= a15;
        super[this];
        this[null] += v6;
        try { new a15(this, v5, v8, a15); } catch (e) {}
        try { a14(); } catch (e) {}
        try {
            new WeakSet(v10);
        } catch(e23) {
        }
        return v3;
    }
    static #c;
}
new C11();
const v25 = new C11();
const v26 = v25?.constructor;
let v27;
try { v27 = new v26(); } catch (e) {}
new C11();
7n ^ 7n;
Int16Array.name;
v27 >>>= 1304;
new Float64Array(3);
new Float32Array(13);
new Int8Array(3326);
Uint16Array.length = Uint16Array;
new Uint16Array();
Date - "sync";
let v54 = 9007199254740990;
const v55 = C11 << v54;
v26.trunc(v55);
const v57 = !v55;
Math.log1p(C11);
Math.floor(v57);
++v54;
v57 ** v57;
const o62 = {
    "type": "minor",
};
Date(o62);
