function f0() {
}
const v2 = [null];
const v3 = [v2,null];
const v4 = [null,v3,v2,null,f0];
function F5(a7, a8) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a7;
    } catch(e9) {
        const v12 = new Uint16Array(5);
        v12[3] = 1695802898;
    }
    try {
        this.a = f0;
    } catch(e14) {
        Math.cos(Math);
        let v17 = 1000.0;
        class C18 {
            static {
                ++v17;
            }
        }
    }
    try {
        this.c = a7;
    } catch(e23) {
    }
}
new F5(null, v2);
const v25 = new F5(v4, v3);
new F5(v25, v3);
[5];
[536870889,-9223372036854775808,-9007199254740991];
[-650092591,12,7,-65536,9];
class C30 {
}
function f31(a32, a33, a34) {
    'use strict';
    return a32;
}
typeof /(foo(?!bar)baz)/gis;
function f38(a39, a40, a41, a42) {
    return arguments;
}
new Uint16Array(128);
new Int8Array(4);
new Int8Array(0);
new Float64Array(Float64Array);
function F54(a56, a57) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a57;
}
function f58() {
    let v59 = -1000000000.0;
    const o67 = {
        o(a61, a62) {
            function f63(a64, a65, a66) {
                v59 |= a62;
            }
        },
    };
}
f58().g;
