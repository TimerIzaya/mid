const v0 = /u\1\2(a(?:\1(b\1\2))\2)\1xyz{1,}ly*/uis;
const v1 = /(a)\1/guiy;
const v2 = /[^(x)(x)(x)\1*]/udimy;
function f3(a4, a5) {
    const o39 = {
        "e": v1,
        256: a5,
        "d": a4,
        [a5]: a4,
        set b(a7) {
            function F9(a11, a12, a13, a14) {
                if (!new.target) { throw 'must be called with new'; }
                this.c = a11;
            }
            new F9(-2.0);
            this[127];
            const v19 = new Uint8Array(6);
            v19 ^ v19;
            return "536870889";
            "toString" == "toString";
            new Int16Array(6);
            const v29 = v2 << "toUpperCase";
            v29 ^ v29;
            const v32 = new Int32Array();
            const v34 = new Uint8ClampedArray();
            const t25 = v32.constructor;
            new t25(v34);
            new Uint8ClampedArray(127);
        },
    };
    return o39;
}
const v40 = f3(v0, v0);
[[[f3(v2, v1),f3(v2, v2),true,v2],v0,v40,v1,true],f3];
for (let v47 = 0; v47 < 5; v47++) {
    const v50 = new BigInt64Array(4046);
    function f51(a52, a53) {
        function F54(a56) {
            if (!new.target) { throw 'must be called with new'; }
        }
        class C57 extends F54 {
        }
        const v58 = new C57();
        v58.constructor;
        const o60 = {
        };
        for (const v61 in o60) {
        }
        let o62 = {
        };
        [,...o62] = v50;
        function f63(a64, a65) {
            class C66 {
                constructor(a68, a69) {
                    const o71 = {
                    };
                    gc(o71);
                }
            }
            for (let v73 = 0; v73 < 25; v73++) {
                new C66(a64, a52);
            }
            return C66;
        }
        new Promise(f63);
        return o62;
    }
    f51();
}
