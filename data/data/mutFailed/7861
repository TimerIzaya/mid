function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    const v12 = this?.constructor;
    try { new v12(a11, a10, F6, a11); } catch (e) {}
    a9[0];
    a10[2];
    a11[0] = a11;
    try {
        a8.f = a8;
        const o16 = {
        };
        o16.e = o16;
        function f17() {
            return o16;
        }
        const v18 = f17?.constructor;
        try { new v18(a8); } catch (e) {}
        function f20(a21, a22) {
            Object.defineProperty(o16, "h", { writable: true, configurable: true, enumerable: true, get: f17, set: f17 });
            return v12;
        }
        f20.caller = f20;
    } catch(e23) {
    }
    try {
        this.e = a9;
    } catch(e24) {
    }
}
const v25 = new F6(194508347n, -11n, "256", "d");
v25.f = v25;
([8,-46529,2147483648,1073741824]).includes;
try { Uint16Array.of(); } catch (e) {}
new Uint16Array(Uint16Array);
try { new Float32Array(194508347n, "d", 194508347n); } catch (e) {}
new Float32Array(Uint8ClampedArray, Uint8ClampedArray, Float32Array);
const v35 = new F6(194508347n, "d", 194508347n, "256");
new F6(v35, "d", v35, "256");
class C37 {
    set b(a39) {
        /a[a-z]/vd;
        /(6R\xed\xa0\x80)/i;
        /oGa\bc/gvim;
        function f46() {
            const v48 = ([f46,f46]).constructor;
            const v49 = new v48();
            class C50 extends v48 {
            }
            const v51 = new C50();
            try { v51.reduceRight(); } catch (e) {}
            return v49;
        }
        %OptimizeFunctionOnNextCall(f46);
    }
    static #m(a54, a55, a56) {
        function f57() {
            new Int16Array([-1.7976931348623157e+308,1000000.0,-Infinity,1000000.0,1e-15,4.0,0.05361702581874339,2.220446049250313e-16,-384803.16239734297]);
            BigInt(132.432626643787);
            class C66 {
                constructor(a68, a69) {
                    const v70 = this.constructor;
                    try { new v70(f57, C66, -7); } catch (e) {}
                    this[-2147483648] >>>= -7;
                    for (let v72 = 0; v72 < 5; v72++) {
                    }
                }
            }
            new C66();
            return -7;
        }
        class C74 {
        }
        async function f75(a76, a77, a78, a79) {
            await C74;
            return a78;
        }
        f75();
        f57();
        function f85() {
        }
        class C86 extends f85 {
            constructor(a88, a89, a90) {
                super();
                super.f = a88;
            }
        }
        Array();
        for (let v94 = 0; v94 < 5; v94++) {
        }
        const o101 = {
            m() {
                const o99 = {
                    "execution": "async",
                    "type": "minor",
                };
                gc(o99);
            },
        };
        return o101;
        -2147483647 << -7;
        try {
            super.m();
        } catch(e104) {
        }
        return 3n;
    }
}
new C37();
new C37();
const v107 = new v25();
try { v107.isPrototypeOf("n"); } catch (e) {}
try { ("a").strike(); } catch (e) {}
class C113 {
    static get g() {
        try {
            var a = super.subarray();
        } catch(e116) {
        }
    }
    static get g() {
        try {
            var a = super.subarray();
        } catch(e119) {
        }
    }
}
