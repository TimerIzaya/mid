function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 13;
    } catch(e3) {
    }
    try {
        this.b = 13;
    } catch(e4) {
    }
    try {
        this.d = 13;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
function f9() {
    return v7;
}
function f10(a11, a12) {
    const o21 = {
        ...a11,
        "f": v8,
        [v6](a14, a15) {
            a12.__proto__;
            Object.defineProperty(a11, 125, { writable: true, enumerable: true, set: f9 });
            f9();
            const v19 = a14.d;
            try {
                v19.e = a12;
            } catch(e20) {
            }
            return a12;
        },
    };
    return a12;
}
const v22 = f10(v6, v7);
f10(v8, v6);
const v24 = f10(v8, v7);
function f25() {
    return v8;
}
class C26 {
    m(a28, a29, a30, a31) {
        for (const v32 in a30) {
            v22[v32] = a31;
            try {
                a29.fuck(f25, 12198n, f10);
            } catch(e35) {
            }
        }
        return v8;
    }
    3 = v6;
    [v7];
}
new C26();
new C26();
new C26();
class C40 extends v24 {
}
