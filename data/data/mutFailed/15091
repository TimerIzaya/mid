const v3 = [30199];
class C4 {
}
for (let v5 = 0; v5 < 5; v5++) {
    function f6() {
        Symbol.toPrimitive;
        function f9() {
            const o12 = {
                m(a11) {
                    return a11;
                },
            };
        }
        const v13 = C4.description;
        v13.codePointAt(C4);
        return v13;
    }
    f6();
    %OptimizeFunctionOnNextCall(f6);
}
const v16 = [30199,268435440,268435440,v3];
const v17 = [268435440,30199,268435440,v16];
const v18 = [-Infinity,-1.7976931348623157e+308,-158.20764157179542,-1.7976931348623157e+308,1.6568743741202126e+308,2.220446049250313e-16,-628387.4333171346,0.8745744690693384,9.254356631866155e+307];
const v19 = [-220354.2971546637,2.2250738585072014e-308,2.042963594287393,2.220446049250313e-16,2.220446049250313e-16,-478718.8148202937,-1.7976931348623157e+308,-603.336895450424];
const v20 = [-162.24195867454853,-8.463627706021361,-1.7092183365449144e+308,-5.0];
class C21 {
    constructor(a23, a24, a25, a26) {
        const v27 = a26[-1073741824];
        function F28(a30, a31, a32, a33) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = v27;
            } catch(e34) {
            }
            try {
                this.b = a33;
            } catch(e35) {
            }
            try {
                this.c = a30;
            } catch(e36) {
            }
        }
        new F28(v17, this, v27, 30199);
        const v38 = new F28(v16, v19, a23, v27);
        new F28(v38, v27, 30199, -1073741824);
    }
}
new C21(30199, v20, 30199, v19);
new C21(268435440, -1073741824, -1073741824, v18);
new C21(30199, v18, -1073741824, v16);
const v46 = new BigInt64Array(3445);
class C47 {
}
try { C47.apply(undefined, v46); } catch (e) {}
