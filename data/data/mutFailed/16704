const v0 = [-128,-11,4,19587,4294967297,-4294967296,-15382,512];
const v1 = [-62365,-182508288,10000];
const v2 = [2147483647,0,-13,-8,-4294967297,-4294967297];
-5 >> -5;
9007199254740990 - 9007199254740990;
function f8() {
    return -5;
}
class C9 extends f8 {
    #valueOf(a11, a12, a13) {
        [a12,a12,v2,[f8(),a12,9007199254740990]];
        [this,a12,v2,this,9007199254740990];
        return v1;
    }
    static #g;
    o(a19, a20) {
        new f8();
        for (let [,v22] of a19) {
            const o23 = {
            };
            try {
                o23.g = v22;
            } catch(e24) {
            }
            try {
                const o25 = {
                };
                v2.g = v22;
                o25.f = v22;
            } catch(e26) {
            }
            try {
                const o27 = {
                };
                o27.g = v22;
                o27.f = v22;
                o27.a = v1;
            } catch(e28) {
            }
            try {
                const o29 = {
                };
                o29.g = v22;
                o29.f = v22;
                o29.a = 9007199254740990;
            } catch(e30) {
            }
        }
        return f8;
    }
}
new C9();
new C9();
new v1();
let v34 = -91.8930680703653;
v34--;
function f39() {
    return f39;
}
function f40() {
    const v41 = Array();
    try { v41.toReversed(); } catch (e) {}
    v41[2358] = f39;
    for (const v43 of C9) {
        const v44 = v0 - v43;
        v44 - v44;
    }
    return v41;
}
f40();
f40();
