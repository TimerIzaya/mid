1518409255n * 1518409255n;
1636422701n ^ 1636422701n;
1636422701n ^ 1636422701n;
const v9 = [9223372036854775807,5,-8,-10,2147483648,-59751,1981151326,1026815704];
const v10 = [1736427436,-536870912];
try { v10.entries(); } catch (e) {}
let v12;
try { v12 = v10.copyWithin(31465n, 31465n); } catch (e) {}
const v13 = [-65536,55146,-611106874,-2147483649,-9007199254740991];
function f14() {
    const v15 = v10 || v10;
    try { new v12(v15, v15, v15, 1636422701n); } catch (e) {}
    return -2927;
}
v13.toString = f14;
try { v13.toString(); } catch (e) {}
const v18 = [-256,127,-78342267,-1450038273,5];
[-4096,-590906338,736488608,-48206,1000,1808263062,450159859,4];
const v20 = [1754360913,127,-65537,-2147483649];
try { v20.reduceRight(v13); } catch (e) {}
const v24 = new Float64Array(9);
let v25 = 9;
v25--;
const v28 = new Float32Array(v25);
let v31;
try { v31 = new Uint16Array(v9, v10, Uint16Array); } catch (e) {}
try { v31.lastIndexOf(v18); } catch (e) {}
const v33 = new Uint16Array(10);
let v34;
try { v34 = v33.indexOf(-2927); } catch (e) {}
SyntaxError.g = v34;
SyntaxError.g = SyntaxError;
Int8Array[2] = v31;
let v37;
try { v37 = new Int8Array(v28, Int8Array, v24); } catch (e) {}
v37.toString = SyntaxError;
v37[6] = v37;
const v38 = new Int8Array(Int8Array, Int8Array);
v38.BYTES_PER_ELEMENT = v38;
function f39(a40, a41) {
    return a41;
}
f39.e = v24;
f39.e = f39;
Object.defineProperty(v38, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f39 });
const v44 = [];
v44[Symbol.toPrimitive] = f39;
class C47 {
}
const v48 = new C47();
v48.constructor = f39;
const v49 = v48?.constructor;
try { new v49(); } catch (e) {}
try { v48.constructor(); } catch (e) {}
v48.constructor = SyntaxError;
const t55 = v48.constructor;
t55(v44, Int8Array).name;
