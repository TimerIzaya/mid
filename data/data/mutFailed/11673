class C5 {
    #m(a7, a8) {
        function f9() {
            return a8;
        }
        super[a8] = "f";
        %VerifyType(a8);
        return f9;
    }
    static c;
}
try { C5(); } catch (e) {}
const v11 = new C5();
const v12 = new C5();
class C13 {
    p(a15) {
        this.g ^= this[8];
    }
    static #n(a18, a19, a20, a21) {
        class C22 {
            4;
            static a;
        }
        C22();
        C22();
        C22();
    }
    7 = v12;
    #a = v11;
}
new C13();
function f29() {
    return 24738n;
}
v12.constructor;
class C33 {
    constructor(a35) {
        for (let v36 = 0; v36 < 32; v36++) {
            "p" & v36;
            for (let v39 = 0; v39 < 5; v39++) {
                function f40() {
                    return f40;
                }
            }
            this.p16;
            try { a35(); } catch (e) {}
        }
    }
}
new C33(C33);
const v47 = new Float64Array(127);
const v50 = 5.0 >>> 5.0;
const v51 = new v11();
v51.isPrototypeOf(v50);
let v53 = [601759695];
v53++;
b = v53;
new Float64Array(2296);
class C62 {
    static 7;
    static [-1] = "string";
    #n(a64) {
        a64 = this;
        a64.e >>>= -35417;
        const o68 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o68);
        return this;
    }
}
Array();
const v72 = Array();
try { ("bigint").join(-4096, -4096, "bigint"); } catch (e) {}
function f74() {
    let v75 = 1000000000000.0;
    v75--;
    class C78 {
    }
    new C78();
    const v80 = new C78();
    [v47,C78];
    [257828.6336153492,v80];
    [v80];
    class C84 extends C62 {
    }
    function f85(a86, a87) {
        return -4096;
    }
    Set.toString = f85;
    Set.constructor(Set);
    v72.constructor;
}
new BigInt64Array(2471);
new BigUint64Array(127);
const o100 = {
    2321852491: "object",
};
const v101 = new Uint16Array(3225);
for (const v102 of v101) {
    v102[3] = 5n;
}
[7,128];
const v104 = [40213,422333454,47387,65536,-51830];
v104[2] = v104;
function f105() {
    const o112 = {
        toString(a110, a111) {
        },
        "b": "boolean",
        "c": "boolean",
        ["object"]: f105,
        ["boolean"]: 1000000000000.0,
        "h": 1000000000000.0,
    };
    return o112;
}
gc();
const o115 = {
};
