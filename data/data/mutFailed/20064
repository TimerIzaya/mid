function f0() {
}
class C1 {
    g = f0;
    static {
        const o5 = {
            "maxByteLength": 255,
        };
        const v7 = new ArrayBuffer(255, o5);
        new Int8Array(v7, 255, f0);
    }
}
const v10 = new C1(f0, f0, f0);
new C1();
new C1();
class C16 extends v10 {
    set d(a18) {
    }
    static ["u9sr"];
    get h() {
        const v22 = Symbol.iterator;
        ([2.2250738585072014e-308,0.4189623658651367,4.6387443600479035,1e-15,1000000000.0,Infinity,0.62922917662046])[8];
        function F29(a31, a32, a33, a34) {
            if (!new.target) { throw 'must be called with new'; }
            const v35 = this.constructor;
            let v36;
            try { v36 = new v35(a31, a34); } catch (e) {}
            typeof v36 === "symbol";
        }
        const v40 = new F29(65537, 1073741824, 0.19443453377416953, F29);
        new F29(Date, 0.19443453377416953, 1073741824, v40);
        const o86 = {
            [v22]() {
                const v43 = [601759695];
                const v44 = [1073741824,1073741823,1376142744,1073741825];
                function f46(a47, a48, a49, a50) {
                    const v52 = arguments.toString();
                    function f53() {
                        ("Vre").fixed("Vre");
                        const o70 = {
                            [522675525n](a58, a59) {
                            },
                            ..."Vre",
                            valueOf(a61, a62) {
                                return this;
                            },
                            ...v43,
                            ..."Vre",
                            valueOf(a64, a65) {
                                return a47;
                            },
                            ..."Vre",
                            4: "Vre",
                            toString(a67, a68, a69) {
                                return v52;
                            },
                            5: -4294967295,
                        };
                        o70.valueOf();
                        return f46;
                    }
                    f53(f46);
                    const v74 = new Int8Array();
                    v74.buffer.slice();
                    %OptimizeFunctionOnNextCall(f53);
                    let v78;
                    try { v78 = v44["find"](..."find", a50, ...v43, ...v44, ...522675525n); } catch (e) {}
                    return v78;
                }
                let v79 = 10;
                const o85 = {
                    next() {
                        v79--;
                        const v83 = v79 == 0;
                        const o84 = {
                            "done": v83,
                            "h": v79,
                        };
                        return o84;
                    },
                };
                return o85;
            },
        };
        return this;
    }
}
new C16();
const v88 = new C16();
new C16(v88, v88);
function f90(a91, a92) {
    return f90;
}
const v93 = f90(f90, f90);
class C94 extends f90 {
    constructor(a96, a97, a98) {
        super();
        const v99 = `
            try { a96(a98, v93); } catch (e) {}
        `;
        eval(v99);
    }
}
const v105 = new BigInt64Array(1);
v105[0] = v105;
[C1,C1,C1];
new C94(f90, C94, f90);
