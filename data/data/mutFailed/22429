[-4.0,1000000000.0,0.9310162202993243,-716.1407326030494,1.7976931348623157e+308];
[-Infinity];
const v2 = [-1000000000.0,5.0,-3.0,2.8547493193610833,0.4151721919284237,-3.4231882753646907,424.3255478719352,1.7976931348623157e+308,1000000.0,0.3188500631098522];
/\u{12345}*/gims;
let v7 = /Va[bc]d*/gusy;
/e(?<a>(?<b>(?<c>(?<d>.).).).)/udims;
[268435456,9007199254740991];
[1261716725,-1073741824,5,536870887,-31755];
[65535,-2,4096,-29282,-13,-2147483648];
new Float32Array(127);
const v20 = Uint8Array.name;
const v21 = new Uint8Array(1);
v21[0] = v21;
const v24 = new Float64Array(v20);
const v25 = v24?.constructor;
try { new v25(1, v21, Float32Array); } catch (e) {}
let v27 = 1089314970;
v27--;
-2 != -2;
new v2();
new BigUint64Array(4096);
new BigUint64Array(3655);
new Float32Array(129);
function f43() {
    const o72 = {
        next() {
            v7--;
            return this;
        },
        m(a48) {
            try { this.next(); } catch (e) {}
            const o50 = {
            };
            o50.b = o50;
            try {
                o50.e = -65535;
            } catch(e51) {
                const v55 = new BigUint64Array();
                const v57 = v55.__proto__;
                v57[512] %= v57;
                const v59 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v59, o50);
            }
            3938 + 3938;
            Int8Array.e = Int8Array;
            const v64 = new Int8Array(3938);
            let v65 = 3;
            let v66 = 0;
            for (let i = 0; i < 5; i++) {
                [...v65] = v64;
                -(v66++);
            }
            const o69 = {
            };
            o69.b = o69;
            try {
                const o70 = {
                };
                o70.h = o70;
            } catch(e71) {
            }
        },
    };
    return o72.m(f43, -65535, -65535);
}
f43();
const v77 = new Uint16Array(1412);
v77.lastIndexOf();
