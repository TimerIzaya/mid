function f3(a4) {
    const v5 = -(-2147483647);
    const o6 = {
        "g": 10,
        "a": -2147483647,
        "b": a4,
        ...v5,
        ...10,
        [-601619663]: -601619663,
        ...-601619663,
        __proto__: a4,
        "d": -2147483647,
        "e": -601619663,
        "c": a4,
    };
    o6[Symbol.toPrimitive] = f3;
    return o6;
}
const v9 = f3(-2147483647);
v9.a = v9;
let v10 = f3(10);
const v11 = f3(-601619663);
512 > 512;
9007199254740992 / 9007199254740992;
const v17 = /xyz??/vdimy;
/((((.).).).)/msy;
/(?<=a)/uisy.hasIndices;
let v21 = /a\sca+/uimsy;
function f22() {
    v10 %= v9;
    function F24(a26, a27) {
        if (!new.target) { throw 'must be called with new'; }
        const v28 = this.constructor;
        try { new v28(268435440n, a27); } catch (e) {}
        this.f = 268435440n;
    }
    new F24();
    return F24;
}
v21.toString = f22;
let v31 = /\1\2(a(?:\1(b\1\2))\2)\1(?:a+){0,0}o\bNe?/uy;
v31.dotAll = v31;
class C32 {
}
C32.length;
const v34 = new C32();
let v35 = new C32();
const o36 = {
};
function f37(a38) {
    v31 -= v17;
    return this;
}
o36[Symbol.toPrimitive] = f37;
function F42(a44, a45, a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(a47, "toString", { enumerable: true, value: f22 });
    for (let v48 = 0; v48 < 100; v48++) {
        v21 += a47;
        o36 in v31;
        v35 = v34;
        const o55 = {
            p(a51, a52) {
                this[F42] **= v48;
                return a52;
            },
            valueOf(a54) {
                return a54;
            },
        };
    }
}
new F42();
const v57 = new F42();
const v58 = v57?.constructor;
try { new v58(-65537, v21, -65537, v21); } catch (e) {}
const v60 = new F42(F42, v34, o36, v34);
v60.constructor = f22;
const v61 = v60?.constructor;
try { new v61(v34, 512, 512, v11); } catch (e) {}
