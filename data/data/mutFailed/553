class C3 {
    set c(a5) {
    }
    g = C3;
    [536870912];
    [0] = 1116229576;
    m(a10) {
        const v11 = a10.__proto__;
        super.a = v11;
        let v12;
        try { v12 = this.n(1116229576, 0, a10, a10); } catch (e) {}
        --v12;
        const v15 = a10.hasInstance;
        v11[v15] = v15;
        return v11;
    }
}
new C3();
new C3();
new C3();
const v20 = [455.65129493255745,-2.0,0.9790033475461002,9.88446828427424e+307,-4.0,-1e-15,0.5652592722259643,-1000000000.0];
[2.0,5.0,774693.8665604629,0.0];
[1e-15,0.5516281991713091,0.0,5.0,-1000000.0,496359.37895693234,1e-15,627133.4575099456,-2.0];
function f29() {
    return 9;
}
function F30(a32) {
    if (!new.target) { throw 'must be called with new'; }
    let v31 = this;
    const v33 = a32 >>> v31;
    try {
        v31 *= v31;
        const v34 = 139837843 in v20;
        const v37 = 0 <= 0;
        const v39 = new Int8Array(0);
        for (const v41 in v39) {
            const o42 = {
                14: v33,
            };
            Object.defineProperty(C3, "e", { set: f29 });
            o42[1] = F30;
            0 ^ v37;
            Object.defineProperty(v31, v31, { writable: true, configurable: true, enumerable: true, value: v34 });
            v31[129] = v41;
            class C47 {
                constructor(a49) {
                    typeof arguments;
                }
            }
        }
        new BigUint64Array(10);
        128 !== 0;
    } catch(e58) {
    }
    const o59 = {
    };
    function f60(a61) {
        const v64 = v20 | v20;
        Math.sqrt(6);
        6 / v64;
    }
    Object.defineProperty(o59, "d", { writable: true, set: f60 });
    try {
        o59.d = v33;
    } catch(e67) {
    }
    try {
        const o68 = {
        };
        o68.d = v33;
        o68.a = C3;
    } catch(e69) {
    }
    try {
        const o70 = {
        };
        Object.defineProperty(o70, "b", { writable: true, configurable: true, value: o70 });
        o70.d = v33;
        o70.a = C3;
        o70.b = v31;
    } catch(e71) {
    }
    try {
        const o72 = {
        };
        o72.a = v31;
        o72.d = v33;
        o72.a = C3;
        o72.b = v31;
    } catch(e73) {
    }
}
new F30(F30);
new F30(64);
