function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = 1073741825;
        class C3 {
        }
        new C3();
        function F5() {
            if (!new.target) { throw 'must be called with new'; }
            for (let v7 = 0; v7 < 32; v7++) {
                "p" + v7;
            }
        }
        new F5();
    } catch(e11) {
    }
    try {
        this.g = 1073741825;
    } catch(e12) {
    }
    try {
        this.c = 1073741825;
    } catch(e13) {
        class C14 {
            constructor(a16, a17, a18, a19) {
                const o21 = {
                };
                gc(o21);
            }
        }
    }
    function F24() {
        if (!new.target) { throw 'must be called with new'; }
        function f26(a27) {
            Object.defineProperty([58584,15,9007199254740990,2146023485], 65537, { writable: true, value: [46733,-268435456] });
        }
        Object.defineProperty(this, "b", { enumerable: true, set: f26 });
        let v30 = 1073741825;
        try {
            v30++;
            let v34 = -1e-15;
            Math.atan2(v34++, -175950080);
            this.b = v30;
        } catch(e37) {
        }
    }
    const v38 = new F24();
    v38.a = -10809n;
}
let v39 = new F0();
new F0();
new F0();
class C42 extends F0 {
    static [F0];
    constructor(a44, a45, a46, a47) {
        function f48() {
            function f50(a51) {
            }
            this.onmessage = f50;
            a46 /= a46;
        }
        [];
        const o55 = {
            "type": "function",
        };
        new Worker(f48, o55);
    }
    static get e() {
        super[this] = this;
        [-671138503,-536870912,-9007199254740991,-9007199254740992,-268435456,128,2023752111,-970019998,8839,6] | [1073741824,-46456,536870888];
        for (let v61 = 0; v61 < 25; v61++) {
        }
        this[-2];
        return v39--;
    }
    static m(a65) {
        delete a65?.b;
        let v68 = -421579818;
        function f69(a70) {
            return a70;
        }
        class C71 extends f69 {
            static h;
        }
        ([-223.21974199729607,0.6826909196761026,-7.610543209781418e+307,1000000000.0,-2.2250738585072014e-308,0.4672319347741436,-1000000.0,-3.0,-5.0,6.966874548897]).fill(-9007199254740990n, 9007199254740990);
        class C78 {
            static #m(a80) {
            }
            constructor(a82) {
                new Float32Array();
                const v86 = new Uint16Array();
                new Float32Array(v86, -4294967296, a82);
            }
        }
        const v88 = new C78(-4294967296);
        return [v88];
        const v90 = --v68;
        const v91 = v68--;
        Math.ceil(v90);
        const v93 = v68 / v91;
        v90 | v93;
        return v93 & v91;
    }
}
new C42();
const v97 = new C42();
let v98 = 2365;
new Float64Array(v98);
const v104 = new BigUint64Array(1000);
const o105 = {
    ...v104,
};
const v107 = [1000000000.0,-5.576877862296471e+307,1000000000000.0,-311382.1661484719,1000000000.0];
function f108() {
    return f108;
}
for (let i = 0; i < 5; i++) {
    Object.defineProperty(v107, "d", { configurable: true, get: f108, set: f108 });
}
new Uint32Array(219);
new Float64Array(0);
new C42();
new BigUint64Array(1209);
new Uint16Array(3);
([5,5]).concat(5);
("toString").match();
const o129 = {
    __proto__: null,
    valueOf() {
        return null;
    },
};
new Uint16Array(64);
const o132 = {
    ...v97,
};
v98 = 1073741825;
try {
    const o133 = {
    };
    const v136 = [13,-2103725161,15240,-9223372036854775807,1077763702,256,-1024,9,1073741823,-2];
    try {
        new Int8Array(9);
        function f142() {
            return f142;
        }
        new Uint16Array();
        !0.8843420658768774;
        function F146() {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v149 = new F146();
        const o157 = {
            [v149](a152, a153, a154, a155) {
                "D2z" < a152;
            },
        };
        const o159 = {
            [f142]() {
            },
        };
        [o159];
        v136.copyWithin(8, -268435456, -256);
    } catch(e163) {
    }
    new Float64Array(o133, -9007199254740992);
} catch(e165) {
}
class C166 {
}
class C167 extends C166 {
    static {
    }
    static set d(a170) {
    }
    #toString(a172, a173, a174) {
    }
}
const v175 = new C167();
const v177 = new Uint8Array();
v177.c = 1073741825;
delete v175[v177];
