const v0 = [];
function f1() {
    return v0;
}
let v2 = "valueOf";
[1866621095];
[65537,-8,268435441];
const v7 = [-1,1073741823,-4294967297,-5,-1202426099,10];
let v9 = -0.5382093140141924;
while (9 < 9) {
    ("T")["concat"](v0, "concat", "T");
    v9++;
}
2.0 * 2.0;
v7[v2] >>= 2.0;
v2 /= "c";
const v22 = -65536 && -65536;
const v23 = Math.log2(v0);
const v24 = v22 * v0;
let v25 = v23 | 177104.0236325683;
Math.abs(v24 ^ f1);
new WeakSet();
4294967296 === 4294967296;
let v32 = 0;
v32--;
const o41 = {
    get d() {
        this[v32] /= v23;
        try { Math.cos(0.5382093140141924); } catch (e) {}
        return this.log(this & --v25);
    },
};
for (let i = 0; i < 10; i++) {
    const v42 = o41.d;
    v42 ^ v42;
}
