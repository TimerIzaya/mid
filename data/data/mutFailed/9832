-65537 >>> -65537;
let v10 = 4294967296;
v10--;
-25981 << -25981;
function F15() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 3;
    } catch(e18) {
    }
}
function f19() {
    function f20() {
        const v26 = new Int8Array(-52974);
        const o35 = {
            get d() {
                this[115] /= 4046;
                let v29 = -908890636;
                return Math.log(this & --v29);
            },
            "d": -11,
            ...-11,
            get e() {
                this.d;
                return -1000000000000.0;
            },
            __proto__: v26,
            ...-1000000000000.0,
            ...BigUint64Array,
            536870888: BigInt64Array,
        };
        return BigUint64Array;
    }
    return f20;
}
Object.defineProperty(F15, "toString", { writable: true, get: f19 });
const v36 = F15?.toString;
try { new v36(); } catch (e) {}
const v39 = new BigInt64Array();
var c = v39;
const o41 = {
};
o41.h = o41;
gc();
class C43 extends F15 {
    static set d(a45) {
    }
}
try { C43.bind(F15); } catch (e) {}
/V/gdiy;
/a\b!/vmy;
/a{0,1}?/uisy;
try { new Int8Array(127, BigInt64Array, BigInt64Array); } catch (e) {}
new Int8Array(127);
const v55 = [-1.5424212036356715e+308];
v55[536870887] = gc;
try { v55.map(v55); } catch (e) {}
v55[536870887n] = v55;
-647152886 & -647152886;
new Uint8Array(6);
function f65() {
}
try { f65(); } catch (e) {}
