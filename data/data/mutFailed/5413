new BigUint64Array(16);
const v5 = new Float64Array(1024);
const v8 = new Uint8ClampedArray(3);
class C9 extends Uint8ClampedArray {
    [v5] = v8;
    [v8] = v8;
    static get b() {
    }
    10;
    #h;
    o(a12, a13) {
        [-13.783187308857464,-2.0];
        [0.21566508231368497];
        [0.2599647033383765,-1000.0,8.493839687933547e+307,0.8930301957350354,-5.099444548771368e+307,-699659.6745937276,218.18604939513102];
        return this;
    }
    [Float64Array] = 1024;
    static [v8];
    static {
        class C21 {
        }
        function f22(a23, a24, a25) {
            const o26 = {
                1073741824: C21,
            };
            return 3;
        }
    }
    [3] = BigUint64Array;
    static 9 = v8;
}
new C9();
new C9();
new C9();
Uint8Array.toString(Uint8Array, Uint8Array, Uint8Array, Uint8Array).normalize();
