let v0 = 257;
let v1 = 109771003;
class C3 {
    constructor(a5, a6) {
        v1 = v0;
        v0 >>>= a6;
    }
    static {
        let v8;
        try { v8 = this.getSeconds(v1, -306.6584956817626, v1, -306.6584956817626, this); } catch (e) {}
        let v10;
        try { v10 = v8(); } catch (e) {}
        v10[48] >>= v1;
    }
    #c;
}
const v11 = new C3(v1, C3);
new v11(v11, v11);
new C3(v0, -306.6584956817626);
function f20() {
    return Reflect.construct(Symbol, [Reflect,Reflect,Reflect,Reflect,Reflect]);
}
try { f20(); } catch (e) {}
class C3 {
    e;
    constructor(a5) {
        try {
            a5.toString = a5;
        } catch(e6) {
        }
        try {
            a5[a5] = a5;
        } catch(e7) {
            e7.message = e7;
        }
    }
    c = -3;
}
new C3(C3);
const t16 = -646.1492350075769;
const v9 = new t16(C3);
let v10 = new C3(v9);
v10.c;
-65536n == -65536n;
1073741824 - 1073741824;
let v25;
try { v25 = new Uint32Array(9n, 4096, -65536n); } catch (e) {}
new Uint32Array(4096);
Int32Array.length;
new Int32Array(9);
new Uint16Array(120);
try { Array.bind(v9); } catch (e) {}
Array();
const v40 = new Int8Array(Array, 2147483649, 485);
v40[277] = v40;
const v42 = 3666 - 3666;
v42 + v42;
let v44 = 0;
v44++;
let v46 = 1;
v46--;
const v48 = v44 < v46;
v48 && v48;
const v50 = v44++;
v50 * v50;
let v52 = BigUint64Array;
v52.length;
v25--;
const v55 = v10--;
v55 | v55;
new v52(v50, 485, 3666);
const v60 = BigInt64Array.bind();
v60.name = v60;
try { v60(); } catch (e) {}
new BigInt64Array();
const v63 = [1000,-14,16,-11,-1413918991,-16,-374255446,-14,1000,10];
let v64;
try { v64 = v63.sort(); } catch (e) {}
try { v64.sort(-65536n); } catch (e) {}
const v66 = [-2,-391505046,1239387087,-37770,536870888,8,-9007199254740991,-16204,-65536,3];
try { v66.pop(); } catch (e) {}
try { v66.toLocaleString(); } catch (e) {}
const v69 = [-9223372036854775807,1073741824,-65535,1945375758,4294967295,-9,-65537,1,-268435456];
v69.pop();
let v71;
try { v71 = v69.push(v64, v64); } catch (e) {}
v71--;
const v73 = v71 << v71;
v73 ^ v73;
let v77;
try { v77 = ("boolean").toLocaleLowerCase(); } catch (e) {}
const v78 = v77?.replaceAll;
try { new v78(485, v55); } catch (e) {}
class C81 {
}
try { C81.toString(); } catch (e) {}
const v83 = new C81();
const t74 = v83.constructor;
new t74();
const v88 = new Float32Array(1429);
BigInt64Array.g = BigInt64Array;
v88[2] = BigInt64Array;
[v52,v77] = [-5,-65535,2269];
