class C2 {
    static {
        function F4(a6, a7) {
            if (!new.target) { throw 'must be called with new'; }
            const v8 = this.constructor;
            try { new v8(); } catch (e) {}
            try { this.constructor(); } catch (e) {}
        }
        new F4();
    }
}
const v13 = /fa{z}[\011]/gdmsy;
/A(?:a?)+/udisy;
/[1a(?=b)]/gvms;
function f16() {
    return v13;
}
new BigUint64Array(129);
new BigInt64Array(16);
new Int32Array(198);
const v30 = new Uint8Array();
new gc();
const v36 = new BigUint64Array();
const v37 = /o(\xed\xb0\x80)\x01/gudims;
v37[Symbol.toPrimitive] = f16;
const v40 = /(xyz{93})/gusy;
try { v40.compile(v36, v37); } catch (e) {}
const v42 = new Uint32Array();
function f43(a44, a45, a46, a47) {
    a44 - a44;
    a46--;
    a47 >>> a47;
    const v51 = a45--;
    v51 + v51;
    a47 + a46;
    const o57 = {
        "b": a44,
        "c": a47,
        ...v30,
        n(a55, a56) {
            v42[a44] = v42;
            return a56;
        },
    };
    try { o57.n(o57, -2); } catch (e) {}
    new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
    for (let v61 = 0; v61 < 25; v61++) {
    }
    new Uint32Array([1524942359,268435439,8,1,256,-11]);
    return a46;
}
let v65 = 0;
v65++;
~v65;
const v68 = [-2051630605,509562611];
class C69 {
    0 = v68;
}
f43(2, 2, 1, 2);
for (let v71 = 0; v71 < 500; v71++) {
    f43(Uint8Array, 2, v71, 2);
}
try { WeakMap.apply(Int32Array, Date); } catch (e) {}
try {
    BigInt(-0.9475779989772164);
} catch(e80) {
}
