function f0() {
}
const t2 = 16;
const v9 = new t2(887);
new Uint16Array(1085);
const v15 = new Uint8ClampedArray(1809);
try { v15.join(1809); } catch (e) {}
let v19 = 536870889;
v19--;
const o21 = {
    "maxByteLength": v19,
};
const v22 = o21?.__lookupGetter__;
let v23;
try { v23 = new v22(75); } catch (e) {}
217 + 217;
const v26 = new v9(217, o21);
v26.growable = v26;
try { v26.grow(); } catch (e) {}
Uint8ClampedArray.h = Uint8ClampedArray;
127 - 127;
65535 >>> 65535;
function F47(a49) {
    if (!new.target) { throw 'must be called with new'; }
    const v50 = this?.constructor;
    try { new v50(Uint8ClampedArray); } catch (e) {}
}
const v52 = new v23(v19);
with (v52) {
    function F53(a55, a56, a57) {
        if (!new.target) { throw 'must be called with new'; }
        const t31 = this.__lookupSetter__;
        t31(Float64Array);
    }
    try { new F53(F53, F53, 16); } catch (e) {}
    let v61 = 10;
    v61 - v61;
    for (;
        (() => {
            const v63 = v61--;
            v63 | v63;
            v63 >>> v63;
            return v63;
        })();
        ) {
    }
}
