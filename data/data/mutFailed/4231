function F4(a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
    const v8 = this?.constructor;
    try { new v8(0.29489550717955537, a6); } catch (e) {}
    gc();
    Math.log10(-9007199254740992);
    try { this.constructor(0.6822080711934364, this); } catch (e) {}
    try {
        this.f = 3.0;
    } catch(e16) {
    }
}
const v17 = new Map();
const v18 = [-4096,-2026624196,536870888,-1631402673,1073741825,-2105411810,256,16];
[6,-128];
[-128,1971380116,4,-128,268435456,128];
/D\u{12345}a(?=a){9,10}a+/disy;
/hW(ab|cde)sMda(?=bbb|bb)c/gud;
/a\wnxyz{0,1}?/gdy;
[3.0,1.7976931348623157e+308,"c"];
class C29 extends Int32Array {
}
-4.380315352541508e+307 >> 129;
function f34() {
    return f34;
}
function f35(a36) {
    const o47 = {
        [a36](a38, a39) {
            super[f34];
            (268435456 >>> (268435456 % 268435456)) ^ -3.0;
        },
    };
    return o47;
}
new BigInt64Array();
class C50 {
}
const v52 = new v17();
const v53 = [601759695];
const v54 = [1073741824,1073741823,1376142744,1073741825];
function f56(a57, a58, a59, a60) {
    a59--;
    function f63() {
        const v65 = ("Vre")?.constructor;
        try { v65(v52); } catch (e) {}
        const o72 = {
            "e": -4294967295,
            ...v18,
            ..."Vre",
            "c": a60,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a70, a71) {
                return a57;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            5: -4294967295,
            6: -268435456,
        };
    }
    try { f63(); } catch (e) {}
    f63();
    %OptimizeFunctionOnNextCall(arguments);
    let v76;
    try { v76 = v54["find"](..."find", a60, ...v53, ...v54, ...522675525n); } catch (e) {}
    const v77 = v76 <= a59;
    v77 || v77;
}
for (let v80 = 0; v80 < 10; v80++) {
    f56(v80, v80, BigUint64Array, "-1073741824");
}
function f84(a85, a86) {
    let [v88,v89,,...v90] = arguments;
    return 48680;
}
f84(48680);
