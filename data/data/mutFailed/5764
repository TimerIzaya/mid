const v0 = [-65536,39259,0,11,1024,-1260,-14];
const v1 = [268435440,10];
const v2 = [1354185297,-1187772013,1073741823,7,-13,8,-473031863,-1332151602];
function f3() {
    function f4(a5) {
        for (let v6 = 0; v6 < 5; v6++) {
            let v9 = -2147483649 * v6;
            ++v9;
            Math.tan(v9);
        }
        return v1;
    }
    return f4;
}
function f12(a13) {
    try {
        v1.h = f3;
    } catch(e14) {
    }
}
const v16 = Symbol.toPrimitive;
Object.defineProperty(v2, v16, { writable: true, get: f3, set: f12 });
class C20 {
    toString(a22, a23) {
        const o24 = {
        };
        const v26 = new Proxy(this, o24);
        return v26;
    }
    static #o(a28, a29, a30, a31) {
        super.a = this;
        a29[a31] = this;
        function F32(a34, a35) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.c = -1.7976931348623157e+308;
            } catch(e36) {
            }
            try {
                this.e = a35;
            } catch(e37) {
            }
        }
        new F32(-1.7976931348623157e+308, a30);
        new F32(-88.53628042149933, a30);
        new F32(1e-15, -88.53628042149933);
        return a28;
    }
}
const v41 = new C20();
const v42 = new C20();
const v43 = new C20();
try { v43.constructor(); } catch (e) {}
class C45 {
    static #valueOf(a47, a48, a49) {
        try {
            v2.length = a49;
        } catch(e50) {
        }
        return this;
    }
    [1e-15];
    static #m(a52, a53, a54, a55) {
        if (v41) {
            try { a54.at(this); } catch (e) {}
            class C59 {
            }
            let [,v61,v62] = "copyWithin";
            const v63 = v41 <= v61;
            const v64 = v63 ? v41 : v61;
            try { a52.setMonth(a52, C59, v64, v62, a54); } catch (e) {}
            try {
                C59.#m(a54, a54, v63, v1, v62);
            } catch(e67) {
            }
            C59 < "copyWithin";
            a55--;
        } else {
            super.b;
        }
        return a52;
    }
    static #p(a73) {
        return a73;
    }
}
Object.defineProperty(C45, "g", { writable: true, configurable: true, enumerable: true, value: Symbol });
C45.g = C45;
const v74 = new C45();
v74.constructor = Symbol;
const v75 = v74?.constructor;
try { new v75(); } catch (e) {}
new C45();
const v78 = new C45();
const v81 = ("h").split();
try { v81.map(-1.7976931348623157e+308); } catch (e) {}
const o124 = {
    [null]() {
        super.b;
        const v86 = [];
        v86[2] = v16;
        const v87 = [0.3083488057663979,0.3083488057663979,0.3083488057663979];
        class C88 {
            constructor(a90, a91) {
                a90[2] = v16;
                try { a90.findLast(C45); } catch (e) {}
                a90[2];
                const v94 = /W(jy2)/udy;
                Uint8Array.e = Uint8Array;
                const v96 = new Uint8Array();
                try { v96.reduceRight(this); } catch (e) {}
                for (let v98 = 0; v98 < 500; v98++) {
                    v98 & v98;
                    const o115 = {
                        ...v96,
                        __proto__: "h",
                        [v2](a101, a102, a103) {
                        },
                        set a(a105) {
                            [-2.0,595551.1917530885,1000000000.0,-1000000.0,-1.0];
                            [1000000.0,Infinity,0.0,-1000000000000.0,-1000.0,0.827404095650483,0.16662757611548074,736047.8760650253,0.01904003311584923];
                            [4.0];
                        },
                        ...v98,
                        get f() {
                            super.n();
                            return isFinite;
                        },
                        n(a113, a114) {
                        },
                    };
                }
                for (let v116 = 0; v116 < 5; v116++) {
                    -v116;
                    ("p")[0];
                    v81["p" + v94] = v116;
                }
            }
        }
        C88.h = v42;
        C88.h = C88;
        const v121 = new C88(v86, v87);
        const v122 = v121?.toLocaleString;
        try { new v122(); } catch (e) {}
    },
    "d": v0,
    "e": v2,
    ...v2,
    2: v78,
    ..."h",
};
o124.b = v1;
o124.null();
o124.null();
