function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a6;
    } catch(e7) {
        function F8() {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.g = 1073741824;
            } catch(e11) {
            }
            try {
                this.f = 1073741824;
                const v12 = [-1.5645136499685964e+308,-4.455146091404086e+307,-6.885938370216613,-Infinity];
                const v13 = [-8.594679214373069e+306,-1000.0];
                const v14 = [-1.0,-3.0,1000000000000.0,0.4992460480015034,-1000000000000.0,-1.7976931348623157e+308,0.8138769867150808];
                try {
                const t0 = 1073741824;
                t0(F8, v12, v14, 1073741824, F8);
                } catch (e) {}
                [1073741824,this,1073741824,v13];
                [this,v12,[v14,F8,v13],F8];
                function F20() {
                    if (!new.target) { throw 'must be called with new'; }
                    function F22(a24, a25) {
                        if (!new.target) { throw 'must be called with new'; }
                    }
                    class C26 {
                        static get g() {
                            super.subarray();
                        }
                    }
                }
            } catch(e29) {
            }
        }
    }
    function f30(a31) {
        for (let i = 0; i < 10; i++) {
        }
    }
    let v34 = 1000000000000.0;
    const v35 = v34--;
    class C38 {
        constructor(a40) {
            const v42 = new Float32Array();
            try { v42.entries(); } catch (e) {}
            const v44 = new Uint16Array(12, -4294967296, v35);
            new Float32Array(v44, -4294967296, 268435439, v34, v44);
        }
    }
    new C38();
}
const v47 = new F3(1000.0, -1000000000.0);
const v48 = new F3(-1000000000.0, -1000000000.0);
const v49 = new F3(-1.5506600478200236e+308, 1000.0);
class C50 {
    static [v47] = F3;
    toString(a52, a53, a54, a55) {
        super[v49] = v49;
        const v56 = v49 instanceof a52;
        %VerifyType(v47);
        a = v56;
        return v56;
    }
    constructor(a58, a59, a60, a61) {
        super[a58] = this;
        const v62 = v48[512];
        return;
        super[v62];
        const o66 = {
            "maxByteLength": 4294967295,
        };
        const v68 = new SharedArrayBuffer(8, o66);
        new Uint8Array(v68);
    }
}
new C50(-1.5506600478200236e+308, -1.5506600478200236e+308, v48, v47);
const v72 = new C50(v47, 1000.0, v48, v47);
const v73 = new C50(v72, 1000.0, v49, C50);
function f74(a75, a76) {
    const o86 = {
        "c": v72,
        "a": a76,
        ...v72,
        "b": v49,
        "e": v73,
        "f": a76,
        "d": v48,
        n(a78, a79, a80, a81) {
            try {
                C50.fuck(false, /(?:ab)?/um);
            } catch(e85) {
            }
            return a80;
        },
    };
    return o86;
}
f74(v48, v48);
f74(C50, -1000000000.0);
f74(v73, v48);
([Infinity,-686.9856326146617,0.47369378110968274,-7.24289104755818]).includes(...[-1000.0,-2.2250738585072014e-308,511.99933163650917,-386.8372768814137,Infinity]);
