let v3 = [64,519484618,-61673];
let v4;
try { v4 = v3.pop(); } catch (e) {}
const v5 = [-61673];
const v6 = v5[0];
const v7 = [v5,v3,v5,519484618];
try { v7.copyWithin(519484618, 519484618); } catch (e) {}
class C9 {
    static n(a11, a12, a13) {
        v6[a13] = this;
        v7[519484618] = a13;
        super.d = 64;
        try {
            super.o(a11, this, a12, 519484618, a13);
        } catch(e15) {
        }
        return 64;
    }
    6;
}
try { new C9(); } catch (e) {}
const v17 = new C9(C9, 519484618, v3);
v17[6];
const v19 = new C9();
v19[6];
const v21 = new C9();
v21[6] = v21;
v3--;
910150418n - 910150418n;
let v29 = 1000;
v29++;
function f31(a32, a33) {
    a32 !== a32;
    const v35 = a33 >>> a33;
    v35 % v35;
    const o40 = {
        "f": a33,
        [a32]: -12,
        set e(a38) {
        },
    };
    o40[1000];
    return o40;
}
f31.name;
const v44 = f31(f31(v29, v29), v29);
class C45 extends f31 {
    static valueOf(a47, a48, a49) {
        async function* f50(a51, a52, a53, a54) {
            await v4();
            yield* [];
            return a53;
        }
    }
}
try { new C45(); } catch (e) {}
const v60 = C45.prototype?.constructor;
try { new v60(); } catch (e) {}
const v62 = new C45();
let v63;
try { v63 = (910150418n).hasOwnProperty(-12); } catch (e) {}
let v65 = -2053573105;
v65--;
v3 || v65;
const v68 = v63.log2();
v68 * v68;
Object.defineProperty(v44, 4294967296, { writable: true, configurable: true, enumerable: true, value: v62 });
gc.caller;
const o73 = {
};
o73.b = o73;
gc(o73);
