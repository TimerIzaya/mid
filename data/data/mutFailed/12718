function f0() {
}
const v1 = /(xyz??)/vm;
const v2 = /a(?!b)/vims;
/}[a-b-c]/gdimy;
function f4() {
    return v2;
}
class C5 {
    #d;
    get e() {
        super.h = this;
        return this;
    }
    static m(a8) {
        return a8;
    }
    [f0];
    5;
    #c = v1;
    [f4];
}
new C5();
new C5();
const v14 = new C5();
[2.220446049250313e-16,-1000000000000.0,-72.25149502531747,Infinity,1000000000000.0];
const v16 = [1.0];
try { v16.find(v16); } catch (e) {}
const v18 = [-624309.0457364547,-0.0,1.0,3.375255495550501];
class C19 extends f0 {
    16;
    #o(a21, a22, a23) {
        super[a22] = v14;
        for (let v24 = 0; v24 < 32; v24++) {
            v18["p" + v24] = v24;
        }
        return a22;
    }
    static #n(a28, a29) {
        const v31 = Symbol.iterator;
        const o40 = {
            [v31]() {
                let v33 = 10;
                const o39 = {
                    next() {
                        v33--;
                        const v37 = v33 == 0;
                        const o38 = {
                            "done": v37,
                            "value": v33,
                        };
                        return o38;
                    },
                };
                return o39;
            },
        };
        return f4;
    }
}
C19.e = C19;
const v41 = new C19();
v41[16] = v41;
new C19();
new C19();
class C45 {
}
try { C45.call(C45); } catch (e) {}
const v47 = new C45();
const v48 = v47?.constructor;
try { new v48(); } catch (e) {}
let v52 = v47 >>> 268435440;
v52--;
const v54 = Math.expm1();
const v55 = v54 - v54;
v55 + v55;
1 === 1;
const v59 = 1 + 1;
v59 + v59;
const v62 = new BigInt64Array(v52);
try { v62.indexOf(v55); } catch (e) {}
const v64 = v62?.set;
try { new v64(v1); } catch (e) {}
class C66 {
}
try { new C66(); } catch (e) {}
C66.length = C66;
10 + 10;
const v72 = new BigUint64Array(10);
try { v72.reduce(v54); } catch (e) {}
for (const v75 in v72) {
    let v76 = 10;
    v76 % v76;
    for (;
        (() => {
            const v78 = v76--;
            v78 > v78;
            const v80 = v78 - v78;
            v80 >> v80;
            return v78;
        })();
        ) {
    }
    new Float64Array(2147483647);
}
