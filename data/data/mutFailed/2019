const v0 = [9691,268435441,65535,256,-8,4294967296];
[1562742910,-682442616,-17834,1636347656,15];
const v2 = [-557598866,-2,52242,-4294967297,16,25386];
function f3(a4, a5) {
    new Uint16Array(8);
    return v2;
}
v2[Symbol.toPrimitive] = f3;
try { ("-1392155180").split(v0, v2); } catch (e) {}
try { ("construct").toWellFormed(); } catch (e) {}
const v16 = [9];
const v17 = [-4,268435441,4,1416841845,536870888];
const v18 = [512,65536,4001,-4096];
const v19 = v18[3];
v19 - v19;
class C21 {
    #g = v18;
    #n(a23, a24, a25, a26) {
        typeof a23 === "function";
        return a24;
    }
    3;
    #e;
    static 0 = "e";
    268435439 = v17;
}
C21.length = C21;
const v33 = new C21();
v33[268435439] = v33;
const v34 = new C21();
v34[268435439];
v34[268435439] = v34;
const v36 = new C21();
v36.reverse = v36;
v36[268435439] = v36;
const v37 = v36[268435439];
v37.reverse = v16;
try { v37.reverse(); } catch (e) {}
const v40 = -(-2n);
v40 * v40;
class C44 {
}
C44.d = "e";
C44.length = C44;
const v45 = new C44();
const v46 = v45?.constructor;
v46.d = v46;
try { new v46(); } catch (e) {}
const v48 = new C44();
const v49 = v48?.constructor;
try { new v49(); } catch (e) {}
const v51 = [-2,257,-107178159,-35269,9223372036854775807,1203530861,-32678];
v51[2] = v51;
const o52 = {
};
function f53() {
    function f54() {
        function F56(a58, a59) {
            if (!new.target) { throw 'must be called with new'; }
            const v60 = this?.constructor;
            try { new v60(); } catch (e) {}
            const o63 = {
                0: "1ya",
                162: "1ya",
            };
        }
        new F56(Map, Map);
        return Map;
    }
    return f54;
}
function f65(a66) {
    const v67 = [-1.0];
    const o68 = {
    };
    let v70 = new Proxy(v67, o68);
    ++v70;
}
Object.defineProperty(o52, "get", { configurable: true, get: f53, set: f65 });
o52.c = o52;
const v73 = new Proxy(v51, o52);
const v74 = v73?.concat;
try { new v74(v45); } catch (e) {}
v73[7] = v45;
v73.unshift(v48);
