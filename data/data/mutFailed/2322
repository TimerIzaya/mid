const v2 = new Int8Array(10);
const v5 = new Uint8Array(3375);
const v8 = new Uint8Array(10);
362261318n <= -16;
new Uint8Array();
Reflect.construct(Symbol, [Reflect,Reflect,Reflect,Reflect,Reflect]);
class C20 {
    static #g = Uint8Array;
    [-2n];
    valueOf(a22, a23, a24) {
        try {
            v5.#g = 3375;
        } catch(e25) {
        }
        return this;
    }
    [10] = v8;
    #d;
    static f = v2;
    static #c = 10;
    a = 10;
    static 14;
}
new C20();
new C20();
new C20();
function F29(a31, a32, a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    function f35() {
        return F29;
    }
    class C36 extends f35 {
        constructor(a38) {
            super();
            for (let v39 = 0; v39 < 25; v39++) {
                this["p" + "p"] = v39;
            }
        }
    }
    new C36();
}
new F29();
