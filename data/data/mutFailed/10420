[-0.3118198078428751,-Infinity];
[-0.8945924396125555,8.776066337627231];
[2.220446049250313e-16];
Array(36862);
new Int32Array(2528);
new Int8Array(10);
function f15() {
    Math.max(4.0, 4.0);
    return 4.0;
}
const v18 = new Int16Array(1165);
function f21() {
    const v25 = Symbol.toPrimitive.description.codePointAt();
    ([-1.5424212036356715e+308]).shift();
    [1073741824,1073741823,1376142744,1073741825];
    return v25;
}
f21();
%OptimizeFunctionOnNextCall(f21);
new Uint8Array(512);
for (let v31 = 0; v31 < 32; v31++) {
    v18["p" + v31] = v31;
}
const v34 = [601759695];
const v35 = [1073741824,1073741823,1376142744,1073741825];
function f37(a38, a39, a40, a41) {
    arguments.toString();
    function f44() {
        ("Vre").fixed("Vre");
        const o61 = {
            [522675525n](a49, a50) {
            },
            ...a41,
            valueOf(a52, a53) {
                return this;
            },
            ...v34,
            ..."Vre",
            valueOf(a55, a56) {
                return "Vre";
            },
            ..."Vre",
            4: "Vre",
            toString(a58, a59, a60) {
                return this;
            },
            5: -4294967295,
        };
        a39.valueOf();
        return f37;
    }
    f44();
    const v65 = new a41();
    v65.buffer.slice();
    %OptimizeFunctionOnNextCall(f44);
    function f70(a71, a72, a73, a74) {
        const o78 = {
            ["42776"](a76, a77) {
            },
        };
        return "find";
    }
    let v79;
    try { v79 = v35["find"](..."find", a41, ...v34, ...v35, ...522675525n); } catch (e) {}
    return v79;
}
function F80(a82, a83, a84, a85) {
    if (!new.target) { throw 'must be called with new'; }
    a83.propertyIsEnumerable();
}
for (let v87 = 0; v87 < 10; v87++) {
    v87.__defineGetter__;
}
for (let v89 = 0; v89 < 5; v89++) {
    f37(v34, v89, v89, v35);
}
%PrepareFunctionForOptimization(f37);
f37(f37, 522675525n, f37, v35);
%OptimizeFunctionOnNextCall(f37);
f37();
