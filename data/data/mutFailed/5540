const v3 = [-54813,8,-54813,8];
const v4 = [-54813];
const v5 = [-54813];
function f6(a7, a8, a9, a10) {
    const o19 = {
        n(a12, a13, a14, a15) {
            [-915680.8433526766,2.220446049250313e-16,-1.7976931348623157e+308,1.7976931348623157e+308];
            [-Infinity,7.850341802112235e+307,-3.29890257830787e+307,-5.846608304089251,1000000000000.0,-207756.69244479574];
            [3.0,-4.115780670234759e+307,-1.0,-3.0];
            return a10;
        },
        ...v5,
        "b": v3,
        ...a9,
        ...v5,
        129: 4,
        ...a7,
    };
    return o19;
}
let v21 = f6(v4, 8, f6(v4, v5, v3, 4), 4);
function f22(a23, a24) {
    -54813 < -54813;
    let v28;
    try { v28 = ("function")["-268435456"](); } catch (e) {}
    v28 + v28;
    return "function";
}
v21[Symbol.toPrimitive] = f22;
f6(v5, 4, 4, 4);
const v37 = /ND2/gds;
class C38 extends Map {
}
const v39 = new C38();
v39.isPrototypeOf();
function f43() {
    function f44(a45) {
        a45[a45] = -26206;
        v21 = a45;
        return -26206;
    }
    return f44;
}
function f46(a47) {
    function f48(a49, a50, a51, a52) {
        const o59 = {
            4294967295: a49,
            2: a51,
            __proto__: a52,
            [v37](a54, a55, a56, a57) {
                super.test();
            },
        };
        return a49;
    }
    f48();
}
Object.defineProperty(Date, "toString", { writable: true, get: f43, set: f46 });
class C61 {
    static {
        for (let v63 = 0; v63 < 25; v63++) {
            const v64 = [601759695];
            const v65 = [1073741824,1073741823,1376142744,1073741825];
            function f67(a68, a69, a70, a71) {
                try { new a68(); } catch (e) {}
                a70 << a70;
                arguments.e = arguments;
                try { v65.toSorted(f6); } catch (e) {}
                new Int32Array(128);
                const v81 = new Float32Array(1000);
                Object.defineProperty(v81, "constructor", { writable: true, value: f43 });
                new BigInt64Array(84);
                function f85() {
                    return a68;
                }
                class C87 extends v81.constructor {
                    static d = 522675525n;
                    #c = 84;
                    static 8;
                }
                new C87();
                const v90 = new Int8Array();
                const v93 = BigUint64Array * 536870887;
                v93 - v93;
                Number.isNaN(v93 ** v93);
                function f98(a99, a100) {
                }
                try { f98(); } catch (e) {}
                const v102 = v90.buffer;
                const v103 = v102.__defineGetter__;
                try { v103(); } catch (e) {}
                Object.defineProperty(v102, "constructor", { writable: true, configurable: true, value: a70 });
                %OptimizeFunctionOnNextCall(f85);
                let v106;
                try { v106 = v65["find"](..."find", a71, ...v64); } catch (e) {}
                const o107 = {
                    "h": 128,
                    [Date]: 128,
                    [v21]: f85,
                    __proto__: arguments,
                    ...this,
                };
                o107.e = o107;
                v106 <= a70;
                return arguments;
            }
            for (let v109 = 0; v109 < 5; v109++) {
                f67(this, v109, v109);
            }
        }
    }
}
