const v5 = new Array(4096);
class C6 {
    constructor(a8, a9, a10) {
        const o13 = {
            "maxByteLength": 3289434788,
        };
        const v15 = new ArrayBuffer(2363, o13);
        new Float32Array(v15);
    }
}
const v18 = new C6("-60585136", 4096, "-60585136");
const v19 = new C6("number", Array, v18);
new C6("lPqy", v19, "lPqy");
class C21 {
    static [-2] = v19;
    n(a23, a24) {
        try {
            C6.f = "lPqy";
        } catch(e25) {
        }
        return C6;
    }
    226;
    [v5];
    static d;
}
new C21();
new C21();
new C21();
const v30 = [1073741824,1073741823,1376142744,1073741825];
v30.g = v30;
function f31(a32, a33, a34, a35) {
    try {
        v30.forEach(a35, "lPqy");
    } catch(e37) {
    }
    const o39 = {
    };
    const v41 = new Proxy(Uint8ClampedArray, o39);
    try { v41.apply(Symbol, f31); } catch (e) {}
    return a33;
}
for (let v43 = 0; v43 < 10; v43++) {
    f31(v30, v43, f31, f31);
}
%OptimizeFunctionOnNextCall(f31);
f31();
