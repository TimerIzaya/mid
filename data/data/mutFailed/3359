const v0 = [-Infinity,0.821467251270149,576.7186473202055,-1000000000.0,6.666597810334673e+307,0.5389589059722963,0.23005827934717038,-2.0,-5.988885586228266,-0.0];
[0.7971589864364507,-3.0,-Infinity,5.229864676272097,-5.584504975962091e+307,1000.0,0.0,-5.0,-5.0,0.7802690363186338];
const v2 = [901.6791291544896,-148.61072121743814,2.2250738585072014e-308];
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = 311757121;
    } catch(e10) {
    }
    try {
        this.e = a9;
    } catch(e11) {
    }
    try {
        this.f = 6440;
    } catch(e12) {
    }
}
new F6(v0, v2);
new F6(v0, v0);
new F6(v0, 311757121);
new Set();
[770.6449551243734,-1e-15];
[-577.5612639472876,69.2534031225764,-6.339843154094879,128.44761956360003,2.220446049250313e-16,-1.7976931348623157e+308];
[-1000000000000.0,-3.0,-0.0,-341.14623216686107,0.0,4.0,1000.0,1000000000.0,0.26388804956213163,1000000000.0];
[-1440504730,15059,-128,65536,33714,-51192,-268435456,37915];
const v25 = [9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
function F26(a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    const v30 = a29.constructor;
    try { new v30(this, a29); } catch (e) {}
    this.c = a28;
}
const v32 = new F26();
const v33 = new F26();
v33.b = v32;
const v34 = new F26();
new F26(18074, 28602970);
const v39 = new Uint8Array(v25, v34, 201);
new Uint8Array(268435440);
Uint8ClampedArray.b = Uint8ClampedArray;
v25[6] = v39;
v2.__proto__;
const v46 = new Uint8ClampedArray(129);
v46.lastIndexOf();
