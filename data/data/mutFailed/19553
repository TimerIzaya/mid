class C3 {
    static toString(a5) {
        try { a5(714.0676985057119, "byteOffset", "f", "f"); } catch (e) {}
        const v11 = Symbol.iterator;
        const o29 = {
            [v11]() {
                let v13 = 10;
                const o23 = {
                    next() {
                        v13--;
                        const v17 = this == 0;
                        const o18 = {
                            "done": v17,
                            "value": v13,
                        };
                        const v21 = new Date();
                        const o22 = {
                            __proto__: Date,
                            [3.0]: v21,
                        };
                        return o18;
                    },
                };
                const v26 = new Float32Array(256);
                v26[5] ||= 6;
                return o23;
            },
            "h": 5.0,
            "execution": "byteOffset",
            get e() {
                return v11;
            },
        };
        return "object";
    }
}
C3.e = C3;
const v30 = new C3();
const v31 = v30?.constructor;
try { new v31(); } catch (e) {}
const v33 = new C3();
const v34 = v33?.constructor;
try { new v34(); } catch (e) {}
const v36 = new C3();
/(HXa(?=bbb|bb)ca[a-z])/gudsy.multiline;
/[a{z}a(?=b)c(wa(?=b)*)*]/gds;
/\u0034J/uims;
try { (1).__defineSetter__(); } catch (e) {}
for (let v44 = 0; v44 < 25; v44++) {
    Math.cosh(v44);
}
new Uint8ClampedArray(2684);
const v51 = new Uint32Array(129);
v51[44];
const v53 = [34352,4,-9223372036854775808,1092764849,-2147483647,-1162070362,-4294967297,8,-591755449];
v53[4] = v53;
const v54 = /a\sc/gm;
v54.c = v54;
function f55(a56) {
    const o59 = {
        n(a58) {
            return a58;
        },
        [a56]: a56,
    };
    return a56;
}
const v60 = f55(v54);
f55();
let v62 = 2;
v62--;
try { new BigInt64Array(v60, C3, BigInt64Array); } catch (e) {}
new BigInt64Array(v62);
const v67 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
v67.length = v67;
let v68 = -4294967297n;
function F69() {
    if (!new.target) { throw 'must be called with new'; }
    const v73 = Array(19793);
    try { v73.reduce(); } catch (e) {}
    for (const v75 of v73) {
    }
    [[v73,v73]];
    ("function")[0];
    new Set();
    const v82 = [];
    v82.toSpliced();
    v82 >= Uint16Array;
}
F69.length;
v68--;
const v88 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
try { v88.sort(v88); } catch (e) {}
const v90 = [601759695];
v90[0];
const v92 = [1073741824,1073741823,1376142744,1073741825];
function f93(a94, a95, a96, a97) {
    try { a96.fill(a95); } catch (e) {}
    a97 <= a97;
    function f100() {
        let v102;
        try { v102 = ("Vre").codePointAt(); } catch (e) {}
        v102 | v102;
        let v104 = Float64Array;
        v104 = a95;
        b = v90;
        const v105 = v67.length;
        v105 - v105;
        try {
            v92.forEach(a95);
        } catch(e108) {
            e108.name = e108;
        }
        const o119 = {
            "c": v68,
            "c": v90,
            valueOf(a110, a111) {
                return a110;
            },
            [v68](a113, a114, a115, a116) {
                eval();
            },
            "arguments": v67,
            256: a97,
        };
    }
    try { f100(); } catch (e) {}
    f100();
    function F122(a124, a125, a126, a127) {
        if (!new.target) { throw 'must be called with new'; }
    }
    function f129(a130) {
        return a130;
    }
    f129.arguments = f129;
    class C131 extends f129 {
        static [-1] = 8;
        static [a96];
        static 268435441;
    }
    C131.prototype = C131;
    %OptimizeFunctionOnNextCall(f100);
    return f93;
}
for (let v132 = 0; v132 < 5; v132++) {
    f93(v132, v36, v88, v132).prototype;
}
