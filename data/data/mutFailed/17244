function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 1856900901;
    } catch(e3) {
    }
    new F0();
    return 1856900901;
    function f5() {
        return f5;
    }
    try {
        this.f = 1856900901;
    } catch(e6) {
    }
}
new F0();
new F0();
const v9 = new F0();
const v13 = /((((.).).).)4?/dmy;
const v14 = /a(?!b)/gusy;
const v15 = /\xed\xa0\x80a+?/vdi;
class C16 {
    constructor(a18, a19) {
        a18["compile"]("compile");
    }
    n(a23, a24, a25) {
        const v26 = F0 ^ a25;
        function f27() {
            function f29(a30, a31, a32, a33) {
                const o37 = {
                    n(a35, a36) {
                        return v9;
                    },
                };
                o37.n(a33, o37, o37, a30, v9);
                return v9;
            }
            for (let v39 = 0; v39 < 25; v39++) {
                f29(v39, f27, eval, v39);
            }
            eval();
            return f27;
        }
        try {
            super.n(a23, v26, this, 4.599582878311654, v26);
        } catch(e43) {
            Uint16Array[1] = 1277001064;
            Object.defineProperty([], "h", { configurable: true, enumerable: true, set: Date });
        }
        return -221528.05096858577;
    }
}
new C16(v15, v14);
const v49 = new C16(v14, v15);
new C16(v15, v13);
function f62() {
    with (f62) {
    }
    return 26352;
}
const t61 = v49.length.constructor;
t61();
function f70(a71, a72) {
    function F73(a75, a76) {
        if (!new.target) { throw 'must be called with new'; }
        const v77 = this.constructor;
        let v78;
        try { v78 = new v77(); } catch (e) {}
        try { this.constructor(a71, f70, v78, F73); } catch (e) {}
    }
    new F73(a71, a72);
    return f70;
}
