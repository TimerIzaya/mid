class C3 {
    static set e(a5) {
        a5?.[this];
        function f7() {
            return f7;
        }
        class C8 extends f7 {
        }
        class C9 {
            constructor(a11, a12) {
                /W(jy2)/udy.flags;
                new Uint8Array();
                new Uint32Array();
                function f20(a21, a22, a23, a24) {
                    return f7;
                }
                for (let v25 = 0; v25 < 625; v25++) {
                    f20(Uint8Array, 2, v25);
                    try {
                        a11 &= C8;
                    } catch(e27) {
                    }
                }
            }
        }
        new C9(f7, C8);
    }
    static get g() {
        super.g != this;
        return -536870912;
    }
    static 1359920616 = -2.220446049250313e-16;
    4259938026;
    b = -1;
    c;
    constructor(a33, a34, a35) {
        const o38 = {
            "type": "minor",
        };
        gc(o38);
    }
    #h;
    #e;
    #g;
}
const v42 = ("-9223372036854775807").lastIndexOf(-7);
function F43() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -65536;
        let v46 = Int32Array;
        v46--;
        class C48 {
        }
        const v49 = new C48();
        function f51(a52, a53, a54, a55) {
            const o58 = {
                "g": a52,
                [-1]: C48,
                set b(a57) {
                },
                1025549261: v49,
            };
            return -5.008255649855068e+307;
        }
    } catch(e59) {
    }
    try {
        this.b = -65536;
    } catch(e60) {
    }
    try {
        this.e = -65536;
    } catch(e61) {
    }
}
const v62 = new C3();
let v63 = new C3();
const v64 = new C3();
let v66 = Array();
v66--;
++v66;
const v70 = new Uint8Array(v42);
function f71(a72, a73) {
    return f71;
}
const v76 = ["function",v70];
const o77 = {
    "arguments": v76,
    "type": "function",
};
new Worker(f71, o77);
class C79 {
    constructor(a81, a82, a83, a84) {
        super.b;
    }
    e = C3;
    get c() {
        v63 -= this;
        v63 -= -1;
        super.f = this;
        return this;
    }
}
const v90 = new C79(v64, C79, v62, -1);
const v92 = new Uint8Array();
const v94 = new Uint32Array();
function f95(a96, a97, a98, a99) {
    a96.g = a96;
    a98 % a98;
    const o104 = {
        "b": a96,
        ...v92,
        n(a102, a103) {
            v94[a96] = v94;
            return Uint8Array;
        },
    };
    return Uint8Array;
}
for (let v105 = 0; v105 < 625; v105++) {
    f95(Uint8Array);
}
const v107 = new C79(v64, -1, v90, C79);
const v108 = new C79(v90, v107, v64, C3);
class C109 extends C3 {
    constructor(a111, a112) {
        super();
        super.d = C79;
        super[a111] = v64;
    }
    #h = v108;
    #toString(a114, a115, a116, a117) {
        function f118(a119, a120) {
            try { this.all(v63); } catch (e) {}
            const v125 = -7546 + -7546;
            Math.imul(C79, -7546);
            Math.fround(v125);
            return a114;
        }
        return f118(-1, v90);
    }
}
new C109(v107, C109);
new C109(-536870912, v90);
const v131 = new F43();
v131.constructor;
("function").constructor;
new Int32Array(4096);
new C109(C79, v107);
class C140 {
    static n(a142, a143) {
    }
    static [-4096];
}
const o145 = {
    "f": -1.883023285666516,
};
class C146 {
}
const v147 = v94.constructor;
try { new v147(o145, C146); } catch (e) {}
const v149 = new C140();
new BigInt64Array(2001);
function f153(a154, a155) {
}
function f156() {
    return f156;
}
function f157(a158, a159) {
    const o160 = {
    };
    536870912n << 536870912n;
    new Date();
    const o166 = {
        ...a158,
        [v149]: a158,
        "e": C140,
        ...C140,
        "d": f156,
        get f() {
            C140[3] >>= 9;
            return a158;
        },
    };
    return o166;
}
f157(f157, C140);
f157(f157());
