class C3 {
    536870888;
    static 9 = "1024";
    a = "1024";
    o(a5) {
        return super.a;
    }
    #f = "1024";
    d = -11040915;
    85 = "1024";
    static #d = "1024";
}
const v10 = new C3();
const v11 = new C3();
const v12 = new C3();
function F13(a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v12;
    } catch(e18) {
    }
    try {
        this.d = a17;
    } catch(e19) {
    }
    try {
        this.f = a15;
    } catch(e20) {
    }
}
const v21 = new F13(C3, v11, v11);
const v22 = new F13(v11, v11, F13);
new v22(v10, v10, "1024");
class C24 {
    static #p(a26, a27, a28, a29) {
        let v33 = 11 ** 11;
        let v34 = 7 && 7;
        -a28;
        +v34 >>> v33;
        ++v33;
        v34--;
        return 7;
    }
    10 = v21;
}
new C24();
new C24();
new C24();
let v43 = [-5.034735835956977e+307,-385.25474675985527];
function F44(a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    const v49 = this.valueOf().constructor;
    try { new v49(); } catch (e) {}
    Math.imul(--v43);
    +this;
}
new F44();
new F44();
