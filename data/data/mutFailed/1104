const v5 = new Float32Array(16);
16 >>> 16;
new Uint16Array(16);
const v11 = 9 >= 9;
new Uint8Array(9);
12 != 12;
new DataView(12);
255 & 255;
12 >>> v11;
Boolean.isView(v11);
const v26 = -1829582402 ^ 215588367;
-215588367;
~-1829582402;
Boolean.log2(v26);
const v30 = new Uint8ClampedArray(255);
const v32 = 1000 % 1000;
new Float32Array(1000);
const v37 = new Uint8Array(481);
v37.indexOf(Uint8Array, 481);
try {
    v5.findLast(v32);
} catch(e40) {
}
let {"buffer":v41,"byteLength":v42,"byteOffset":v43,} = v30;
