function f0() {
    const v3 = f0.__proto__;
    const v5 = Symbol.iterator;
    const o14 = {
        [v5]() {
            let v7 = 10;
            const o13 = {
                next() {
                    v7--;
                    const v11 = v7 == 0;
                    const o12 = {
                        "done": v11,
                        "value": v7,
                    };
                    return o12;
                },
            };
            return o13;
        },
    };
    const o19 = {
        "a": 1967352557,
        ...v3,
        [v3]: -2555,
        "c": "9223372036854775807",
        "f": f0,
        ...v3,
        get f() {
            let v17;
            try { v17 = this.sign(); } catch (e) {}
            this in v17;
            return 1967352557;
        },
        536870912: "9223372036854775807",
        "h": -2555,
        "b": 1967352557,
        "f": 1967352557,
        "c": -2555,
    };
    return o19;
}
f0();
const v21 = f0();
const v22 = f0();
class C23 extends f0 {
    static set e(a25) {
        this !== this ? this : this;
        try {
            super.n(f0, this, v22);
        } catch(e29) {
        }
    }
    [v21] = v21;
    valueOf(a31) {
        return this;
    }
    21;
    static #h = v21;
}
new C23();
new C23();
new C23();
/a(?:foo)q\1(a)*/gudim;
/[(?<a>.)\k<a>v\cA]/vim;
/o/gui;
class C41 {
}
const v42 = new C41();
this.escape(v42);
