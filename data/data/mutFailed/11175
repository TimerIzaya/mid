const v1 = new WeakMap();
class C2 {
    set g(a4) {
        try {
            super.set(ArrayBuffer, this, a4, v1);
            -10 ^ -10;
            const v10 = new BigInt64Array();
            const v11 = `
                var c = v10;
            `;
        } catch(e12) {
        }
    }
    static {
        const v15 = [this];
        const v17 = [601759695];
        const v18 = [1073741824,1073741823,1376142744,1073741825];
        function f20(a21, a22, a23, a24) {
            function f25() {
                const o33 = {
                    [-4294967297n](a27, a28, a29, a30) {
                        eval(a23);
                    },
                };
                return a21;
            }
            f25();
            const v36 = new Int8Array();
            const v37 = v36.buffer;
            v37.constructor = f20;
            v37.slice(2147483648);
            %OptimizeFunctionOnNextCall(f25);
            let v41;
            try { v41 = v18["find"](..."find", a24, ...v17, ...v18, ...522675525n); } catch (e) {}
            v41 <= a23;
            return 522675525n;
        }
        for (let v43 = 0; v43 < 10; v43++) {
            f20(f20, 522675525n, f20, v43);
        }
        f20();
        Reflect.construct(WeakMap, v15, WeakMap);
    }
    #c;
}
const v47 = new C2();
const v48 = new C2();
const v49 = new C2();
function F50(a52, a53, a54, a55) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a55;
    } catch(e56) {
    }
}
new F50(v47, v47, v49, v1);
new F50(v47, v48, v47, C2);
new F50(v47, v48, v1, v48);
const v61 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v62 = [601759695];
const v63 = [1073741824,1073741823,1376142744,1073741825];
function f65(a66, a67, a68, a69) {
    function f71() {
        const o78 = {
            "e": -4294967295,
            ...v61,
            ..."Vre",
            "c": a69,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a76, a77) {
                return v63;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            5: -4294967295,
            6: -268435456,
        };
    }
    f71();
    %OptimizeFunctionOnNextCall(arguments);
    let v81;
    try { v81 = v63["find"](..."find", a69, ...v62, ...v63, ...522675525n); } catch (e) {}
    v81 <= a68;
    return arguments;
}
f65(v61, v63, "-1073741824", 522675525n);
for (let v84 = 0; v84 < 10; v84++) {
    f65();
}
const v91 = new WeakSet();
let v92 = /(w)/gvdmy;
const v93 = /((ab))/vy;
for (let v94 = 0; v94 < 25; v94++) {
    v91["p" + v94] = v94;
}
v92 >>= v93;
