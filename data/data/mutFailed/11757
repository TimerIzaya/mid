class C3 {
    h = 58419.80289701745;
    #f = 58419.80289701745;
    static valueOf(a5) {
        const v9 = new Date();
        const v11 = new Set();
        v11.add(v9);
        const o14 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o14);
        return 58419.80289701745;
    }
    static #g = -715.9902311032452;
    [-715.9902311032452] = 0.6364678518687085;
}
const v16 = new C3();
const v17 = new C3();
const v18 = new C3();
class C20 extends Date {
}
const v21 = [-65535,452354247,-2,78479092,-2147483648,1073741823,5,6528,-1024,-261130286];
const o23 = {
};
const v25 = new Proxy(v21, o23);
new Int32Array(v25);
class C27 {
    constructor(a29, a30, a31) {
        try { a31.valueOf(v16); } catch (e) {}
        const o33 = {
        };
        new Proxy(a31, o33);
    }
    static {
        delete v18?.h;
        C3 -= v16;
    }
    6 = -715.9902311032452;
    #toString(a39, a40, a41) {
    }
    static toString(a43) {
    }
    #a;
    [0.6364678518687085] = v18;
    static 4040183559 = C3;
    static e;
}
new BigInt64Array();
const v47 = Symbol.toPrimitive;
try { Symbol.apply(Symbol, v47); } catch (e) {}
const v50 = new C27(v16, 58419.80289701745, v18);
const v51 = new C27(v50, 58419.80289701745, v50);
new C27(v17, 0.6364678518687085, v51);
class C53 extends C27 {
    toString(a55, a56) {
        this in this;
        return v18;
    }
    16 = 0.6364678518687085;
    h;
    constructor(a59, a60) {
        super(a60, -715.9902311032452, a60);
        new Map();
        function f63() {
            return Map;
        }
        class C64 {
        }
        function F65() {
            if (!new.target) { throw 'must be called with new'; }
            const v68 = [F65,F65];
            [v68,1141300185,F65];
            let v70 = [this];
            Math.log2(v68);
            const v74 = v70++;
            v74 ^ v74;
            Math.asinh(536870887);
            try {
                class C78 extends this.constructor {
                    e = F65;
                }
                C78.caller;
                new C78();
            } catch(e81) {
            }
        }
    }
    [0.6364678518687085] = v51;
}
class C82 {
    #m(a84, a85, a86) {
        for (const v87 in this) {
            (delete this?.h).__proto__;
        }
    }
}
class C90 extends C82 {
    static set e(a92) {
        this > a92;
    }
}
new C53(C53, C53);
new C53(v16, v50);
new C53(v50, 0.6364678518687085);
const v99 = new String();
Object.defineProperty(v99, 7, { writable: true, configurable: true, enumerable: true, value: Int8Array });
