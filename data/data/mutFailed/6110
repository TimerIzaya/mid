function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 3;
    } catch(e3) {
    }
    try {
        this.h = 3;
    } catch(e4) {
    }
}
const v5 = new F0();
new F0();
const v7 = new F0();
const v8 = v7?.constructor;
try { new v5(); } catch (e) {}
try { new v8(); } catch (e) {}
const v13 = new v7(741);
v13[38] = v13;
v13[540] = v13;
const v16 = BigInt64Array?.constructor;
v16.name = v16;
try { new v16(3392); } catch (e) {}
new BigInt64Array(3392);
let v21;
try { v21 = new Uint16Array(741, F0, F0); } catch (e) {}
try { v21.fill(v8); } catch (e) {}
const v23 = new Uint16Array(16);
function F24(a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    const v28 = this?.constructor;
    try { new v28(a26, this); } catch (e) {}
    a26--;
    const v31 = a27--;
    v31 - v31;
    try {
        this.a = Uint16Array;
    } catch(e33) {
    }
    try {
        this.e = v23;
    } catch(e34) {
    }
}
const v35 = new F24(741, 741);
v35.b = v35;
const v36 = new F24(16, 3392);
new F24(741, v36);
const v38 = /((((.).).).)rfoo|(bar|baz)|quux*/uims;
let v39;
try { v39 = v38(); } catch (e) {}
let v40 = 817905185;
v40--;
const o54 = {
    get b() {
        this.b = this;
        const v43 = delete this[this];
        v43 || v43;
        const v45 = !v43;
        this[this] = v40;
        const v46 = [-6.8035006781971e+307,1000000.0,1000.0,-2.715046407601891];
        const v48 = Array?.constructor;
        try { new v48(v38); } catch (e) {}
        class C50 extends Array {
        }
        C50.a = C50;
        const v51 = new C50();
        try { v51.fill(v45); } catch (e) {}
        const v53 = v51.concat(v46);
        v53[3] = v53;
        return v38;
    },
};
const o55 = {
    ...o54,
};
const v56 = o55?.__defineGetter__;
try { new v56(v38, F24); } catch (e) {}
function f58(a59) {
    class C60 {
        set g(a62) {
            super.d = v39();
        }
    }
    return a59;
}
function f64(a65, a66, a67, a68) {
    !a67.ignoreCase;
    a68.g = a68;
    const o71 = {
        ...o54,
    };
    return o71;
}
const v72 = f64(f64, v39, v38, o54);
v72 - v72;
v72 >> v72;
f64(v38, v72, v72, v40);
