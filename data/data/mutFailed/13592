class C3 {
    #a = "prototype";
    constructor(a5, a6) {
        try { this.constructor(1e-15, a6); } catch (e) {}
        ~a5;
        a6.length = a6;
        this["prototype"] = 1e-15;
        let v9;
        try { v9 = this.m(a5, "prototype", 1e-15); } catch (e) {}
        try { v9("0", a5, v9); } catch (e) {}
    }
    static c = "prototype";
    toString(a12) {
        try {
            const t14 = "prototype";
            t14.a = this;
            const v15 = new Uint8Array(3346);
            const v17 = new Float64Array(3346, 3346, 3346);
            const t18 = v17.constructor;
            new t18(v15);
            const v23 = new Date(Array);
            v23.setHours(3811);
        } catch(e25) {
        }
        try { a12(1e-15, a12, 1e-15); } catch (e) {}
        return new.target;
    }
}
try { new C3("prototype", "0"); } catch (e) {}
const v29 = new C3(1e-15, C3);
const v30 = new C3("prototype", "prototype");
new C3(v29, v30);
[1842448584,-9007199254740992,65537,-39586312,15852,5,9,-30153,536870887];
[-142174523,20907,22129,-128];
[-1412656490,2147483649,-2147483648,-65536,-12,-14,-29297];
const v40 = [1.7754312477895002e+308,-5.222433190075309,-1.7976931348623157e+308,7.946171059355148,0.40414902234327965,1000.0,-103405.77967821865,-Infinity,NaN,1.7976931348623157e+308];
const v41 = [0.22970466031530812,NaN,NaN,Infinity];
class C42 {
    constructor(a44, a45) {
        super["fround"] = v41;
    }
}
try { new C42(512n, 512n); } catch (e) {}
const v47 = new C42();
function f48(a49) {
    return f48;
}
v41[10000] = v40;
try { Worker.apply(C42, "fround"); } catch (e) {}
("function").length;
const v54 = [v47];
const o55 = {
    "arguments": v54,
    "type": "function",
};
new Worker(f48, o55);
