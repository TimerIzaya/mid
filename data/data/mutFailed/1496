[2127417806,-2,16,-128,-65536,2147483649,3,942160603];
const v7 = [8,256,6,536870887,775077581,-2147483647,948243713,1,-1732518337,12];
const v8 = [4294967295,16,-2147483647,-4,-2147483648,0,14,-615274448,0,319547887];
const v18 = [7,128];
const v19 = [13,-2103725161,15240,-9223372036854775807,1077763702,256,-1024,9,1073741823,-2];
const v20 = v8[4];
v20 | v20;
const t6 = [40213,422333454,47387,65536,-51830];
t6[2] = v7;
0 - 0;
let v30;
try { v30 = gc(); } catch (e) {}
v30();
new BigInt64Array();
try { ("Sbz4h").repeat(1000000.0); } catch (e) {}
const t15 = "toString";
t15[6] = "toString";
const v37 = "toString" == "toString";
("boolean").split("toString");
-256 >> -256;
function f41(a42, a43) {
    a43-- | a42;
    const o59 = {
        "c": 15135,
        "a": 15135,
        "d": a42,
        __proto__: a43,
        "g": -1628878962,
        "type": "boolean",
        "a": a42,
        set b(a47) {
        },
        "g": v37,
        "b": a43,
        get f() {
            super[1000000.0] = this;
            try {
                new Int8Array(9);
                function f52() {
                    return f52;
                }
                const o54 = {
                    [v20]() {
                    },
                };
                [o54];
                v19.copyWithin(8, -268435456, -256);
            } catch(e58) {
            }
            return this;
        },
    };
    o59.g = o59;
    return o59;
}
let v60;
try { v60 = f41(15135, 15135); } catch (e) {}
v60[1000000];
f41(925.1427495594241, v18);
f41(317008.8127941969, -4);
f41(1000000.0, v19);
const v66 = 268435441n ^ 268435441n;
268435441n - 268435441n;
const v69 = new BigUint64Array();
v69[2445191368] = v66;
