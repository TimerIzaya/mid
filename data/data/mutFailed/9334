const v1 = new WeakMap();
class C5 extends WeakMap {
    [-286097.1626396383] = NaN;
    constructor(a7) {
        super(v1);
        const v8 = new WeakMap(v1);
        const v11 = [this];
        Reflect.apply(this.get, v8, v11);
    }
    static #a = v1;
    g = NaN;
    #g;
    static [NaN] = -983.9284896774354;
}
const v14 = new C5(-286097.1626396383);
const v15 = new C5(-983.9284896774354);
const v16 = new C5(-286097.1626396383);
function F17(a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a21;
    } catch(e22) {
    }
    try {
        this.a = a20;
    } catch(e23) {
    }
}
const v24 = new F17(v15, v16, v16);
const v25 = new F17(v16, v15, v1);
new F17(v14, v16, v14);
class C27 {
    constructor(a29, a30, a31) {
        a29[0] = v24;
        let v32 = a29 || WeakMap;
        v32 = v1;
    }
    #a;
    set e(a34) {
        class C35 {
            static #e = -983.9284896774354;
            static 167;
        }
        new C35();
        new C35();
        new C35();
    }
}
new C27(v16, v25, -983.9284896774354);
new C27(v1, v25, -286097.1626396383);
const v41 = new C27(WeakMap, v24, NaN);
function F42() {
    if (!new.target) { throw 'must be called with new'; }
    for (let v44 = 0; v44 < 500; v44++) {
        this["p" + v44] = v44;
    }
}
const o47 = {
};
try {
    o47.c = WeakMap;
} catch(e48) {
}
try {
    const o49 = {
    };
    o49.c = WeakMap;
    o49.a = v41;
} catch(e50) {
}
try {
    const o51 = {
    };
    o51.c = WeakMap;
    o51.a = v41;
    o51.e = v15;
} catch(e52) {
}
try {
    const o53 = {
    };
    o53.c = WeakMap;
    o53.a = v41;
    o53.e = F17;
} catch(e54) {
}
new F42();
