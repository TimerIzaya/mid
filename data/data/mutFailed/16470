const v0 = [-1.7976931348623157e+308,761363.7837145729,487.1092374526477,-49.78715561183901,-7.89021239528627e+307,-1000000.0,1000000000.0];
const v1 = [-1.7976931348623157e+308,-5.0,-2.2250738585072014e-308,-895111.2976929651,-1.7976931348623157e+308,513.3087535376626,-6.0632892232004725,1.2875323137345388e+308];
const v2 = [0.9950993745589004,1.5958410999308814,-1000000.0,-2.220446049250313e-16,1.7949223592569471e+308];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    a5[6];
    const v7 = F3?.constructor;
    let v8;
    try { v8 = new v7(a5); } catch (e) {}
    try { v8.includes(v1); } catch (e) {}
    this.d = this;
    try {
        this.e = a5;
        try { ("J").toString(); } catch (e) {}
        [-361897.2908411393,-9.347402951130913,5.0,5.0,2.8117692247371764,6.115662424844266e+307,-1000.0,3.348644995537855,-3.0];
    } catch(e16) {
    }
    try {
        this.d = a5;
    } catch(e17) {
    }
}
const v18 = new v2(v1);
v18.length = v18;
new F3(v0);
new F3(v0);
/q[x\dz]/i;
/XpXxyz??/vdmy;
/F(?:a+){0,0}/u;
const v24 = [-1594701762,268435439,5];
try { v24.keys(); } catch (e) {}
const v26 = [1073741824,-4294967296,268435439,42632];
v26.d = v26;
[128,-1825478461,-41358,-50484,-8,7499];
v24.d = String;
const v30 = new String();
Object.defineProperty(v30, 7, { configurable: true, enumerable: true, value: Int8Array });
