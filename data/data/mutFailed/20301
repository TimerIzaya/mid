const v2 = new Uint8Array(3695);
const v5 = new Int32Array(2796);
const v8 = new Uint8Array(1000);
class C9 extends Int32Array {
    #d = Int32Array;
    constructor(a11, a12) {
        super(a11, 3695, 2796);
        const v13 = [Int32Array,Uint8Array,a12];
        [v5,v13,v13,v13,v5];
        [a12,this];
        typeof a11 === "string";
    }
    static #h;
    2525622367;
    static e;
    static d = v8;
}
const v19 = new C9(1000, 3695);
new C9(3695, 1000);
const v21 = new C9(1000, 2796);
class C22 extends C9 {
    c = v2;
    #d = 1000;
    constructor(a24, a25) {
        super(a25, a25);
        super.buffer;
        a24 && 3695;
        let v28 = 0;
        do {
            typeof v19 === "number";
            const o35 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o35);
            const o37 = {
            };
            new Proxy(Uint8Array, o37);
            v21[v28] >>>= 3695;
            v28++;
        } while (v28 < 2)
    }
}
new C22(v5, 2796);
const o46 = {
    "maxByteLength": 1107,
};
const v48 = new SharedArrayBuffer(1107, o46);
new Int16Array(v48);
new C22(v2, 1000);
new C22(Int32Array, 2796);
Math.cbrt(1073741824);
