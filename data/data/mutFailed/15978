function f6(a7, a8, a9) {
    const o32 = {
        "c": -9007199254740992n,
        10000: 1000000000000.0,
        ...a9,
        set h(a11) {
            super.c >>>= 1000000000000.0;
            const v14 = new Int32Array(1024);
            for (const v15 of v14) {
                new SharedArrayBuffer();
            }
            let v18 = 0;
            do {
                a11 * -6.122589593991071e+307;
                v18++;
            } while (v18 < 5)
            function f24(a25, a26, a27, a28) {
                return arguments;
            }
            f24(f24(64, 1024, 64, 1024), f24);
        },
    };
    class C34 {
        constructor(a36, a37, a38, a39) {
            function F40(a42, a43, a44) {
                if (!new.target) { throw 'must be called with new'; }
                Math.trunc(a38);
                const v46 = this.constructor;
                try { new v46(); } catch (e) {}
            }
            a36 ** a7;
            -9007199254740992n == -256n ? -9007199254740992n : -256n;
            this >> -9007199254740992n;
            new F40();
        }
    }
    new C34();
    return o32;
}
const v55 = f6(-6.122589593991071e+307, 980.296880901875, -256n);
const v56 = (a57, a58, a59, a60) => {
    const v61 = a57;
    f6(980.296880901875, v61, v55);
    return a57;
};
const v63 = f6(980.296880901875, -6.122589593991071e+307, v55);
f6(980.296880901875, 1000000000000.0, 1000000000000.0);
[48616,-6,-8305,65537,62875,-1,64,-268435456];
[-40205,9,1073741824,16,129,-10,6,-1,-65536];
[-9223372036854775808,4,9,8964,22342961,-311320622];
class C68 extends f6 {
    c;
    #b = -256n;
    #d;
    [f6];
    193 = 0n;
    b;
    get c() {
        const v71 = new Set();
        super[v71];
        let v76 = -(9007199254740991 % 9007199254740991);
        v76--;
        return v63;
    }
    1480304819;
    static e;
}
new C68();
new C68();
new C68();
/(x)(x)(x)\4ca(ab)(?:foo)*/imy;
