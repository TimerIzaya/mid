-7 >> -7;
let v5 = -47247;
const v6 = v5--;
const v8 = 4294967297 >>> 4294967297;
function f9(a10, a11, a12) {
    a10--;
    -a12;
    const v15 = a12 << a12;
    const o40 = {
        [a12]: -196.90557158126046,
        p(a17, a18, a19, a20) {
            a17 - a17;
            a18 / a18;
            const v23 = typeof a18;
            try { v23.includes(a10); } catch (e) {}
            try { ("number").indexOf(v23); } catch (e) {}
            v23 === "number";
            const o30 = {
                set b(a29) {
                },
                ..."number",
                __proto__: a17,
                /*
                __proto__: this,
                */
            };
            o30.h = o30;
            const v31 = [0.021647043302781555,982.9822277058386,68.55386187204931,-3.6548181863708407e+307,0.20797002453168356,1000000.0,-569469.7761417266,-3.877892592640821,Infinity,5.0];
            const v32 = v31.toLocaleString();
            v32.toWellFormed(v32, v31, v31);
            const t29 = [Float32Array];
            t29[Symbol.isConcatSpreadable] = Float32Array;
            const v39 = new Proxy(this, o30);
            return v39;
        },
    };
    try { o40.p(o40, v15, v15, f9); } catch (e) {}
    return o40;
}
try { new f9(-196.90557158126046, -196.90557158126046, f9); } catch (e) {}
const v43 = f9(4294967297, -196.90557158126046, -692.04975139361);
const v44 = f9(v5, -692.04975139361, -960324.4171565645);
const v45 = f9(-7, -692.04975139361, -960324.4171565645);
let v46;
try { v46 = v45.p(-196.90557158126046, -692.04975139361, 4294967297, 4294967297); } catch (e) {}
try { v46.p(v6, v8, 4294967297, v6); } catch (e) {}
9 * 9;
Uint16Array.name = Uint16Array;
try { Uint16Array(f9, v45, -196.90557158126046); } catch (e) {}
const v52 = new Uint16Array(9);
BigInt64Array.e = BigInt64Array;
const v55 = new BigInt64Array();
try { v55.entries(); } catch (e) {}
let v59;
try { v59 = new Int32Array(Uint16Array, BigInt64Array, Uint16Array); } catch (e) {}
const v60 = new Int32Array(182);
[Int32Array,v52,v60,BigInt64Array];
const v62 = [9,Int32Array,v60];
v62[2] = v62;
[2086,v62,Uint16Array,v60];
class C65 {
    static c;
}
C65.length = C65;
const v66 = new C65();
let v67;
try { v67 = v66.toString(); } catch (e) {}
try { v67.replaceAll(v5, v59); } catch (e) {}
const v69 = new C65();
function f70() {
    return f70;
}
function f71(a72, a73, a74) {
    do {
    } while ((() => {
            const v77 = 2147483648 < 7;
            v77 && f70;
            return v77;
        })())
    f71();
    return f70;
}
f71(f71, f70, f71);
try { v69.propertyIsEnumerable(-692.04975139361); } catch (e) {}
const v82 = new C65();
const v83 = v82?.constructor;
try { new v83(); } catch (e) {}
try { new v83(); } catch (e) {}
class C86 {
    static #n(a88, a89, a90, a91) {
        class C92 {
            4;
            static a;
        }
        C92();
        C92();
        C92();
        function F96(a98, a99, a100, a101) {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v102 = new F96(F96, F96, F96, F96);
        %PrepareFunctionForOptimization(v102);
        return arguments;
    }
    7 = v82;
    #a = v69;
}
C86.name = C86;
const v104 = new C86();
v104[7] = v104;
v104[7];
const v106 = new C86();
v106[7] = v106;
v106[7];
new C86();
const v109 = [v82];
try { v109.findIndex(Int32Array); } catch (e) {}
v109[0] = v109;
const v111 = [v66];
function F112() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.constructor(); } catch (e) {}
}
const v115 = new F112();
const v116 = v115?.constructor;
try { new v116(); } catch (e) {}
const v118 = v115?.constructor;
let v119;
try { v119 = new v118(); } catch (e) {}
try { v119.propertyIsEnumerable(9); } catch (e) {}
const v121 = new F112();
const v122 = v121?.__lookupGetter__;
try { new v122(v55); } catch (e) {}
const v124 = new F112();
const v125 = v124?.constructor;
try { new v125(); } catch (e) {}
function F127(a129, a130) {
    if (!new.target) { throw 'must be called with new'; }
    const v131 = a129?.constructor;
    try { new v131(); } catch (e) {}
    const v133 = a130?.__lookupGetter__;
    try { v133(a129); } catch (e) {}
    try { this.constructor(F127, this); } catch (e) {}
    a129.e = a129;
}
F127.d = F127;
F127.arguments = F127;
const v136 = new F127(v124);
v136.length = v136;
const v137 = v136?.constructor;
try { new v137(182, v66); } catch (e) {}
const v139 = new F127(v136, v121);
const v140 = v139?.constructor;
v140.length;
try { new v140(v44, BigInt64Array); } catch (e) {}
v139.e = v139;
"Hyo9" == "Hyo9";
("Hyo9")[1];
const t156 = "at";
t156[1] = "at";
const v148 = ([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap;
v148.d = v148;
const v149 = v148?.constructor;
v149.name = v149;
try { v149("Hyo9"); } catch (e) {}
[-4.202468609045087];
const v152 = [0.8434386161503777];
v152[0];
try { v152.entries(); } catch (e) {}
try { v152.findLastIndex(v152); } catch (e) {}
let v157;
try { v157 = ("4i").charAt("4i"); } catch (e) {}
try { v157.toUpperCase(); } catch (e) {}
const t173 = "4i";
t173[1] = "4i";
const v159 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f160(a161, a162, a163, a164) {
    function f165() {
        let v167 = Float64Array;
        v167 = a162;
        const v168 = v159.length;
        const v169 = v168 >>> v168;
        v169 | v169;
        v169 / v169;
        const o172 = {
        };
        o172.g = o172;
        const v173 = [];
        try { v173.find(v46); } catch (e) {}
        const t189 = "concat";
        t189[5] = "concat";
        const v176 = v173["concat"]();
        try { v176.findLast(v176); } catch (e) {}
        let v178;
        try { v178 = v176.toReversed(); } catch (e) {}
        try { v178.findLast(v167); } catch (e) {}
        const v182 = new Uint8Array(105);
        v182[55];
        let v184 = -268435456;
        v184 != v184;
        const v186 = v184--;
        v186 | v186;
        const o188 = {
            "e": -4294967295,
            "e": v184,
        };
        const v189 = o188.e;
        v189 >>> v189;
    }
    const v191 = f165();
    %OptimizeFunctionOnNextCall(f165);
    return v191;
}
f160();
f160();
const t213 = "RpXR";
t213[1] = "RpXR";
const v196 = ("c")[0];
try { v196.small(); } catch (e) {}
("c")?.toLocaleUpperCase;
const v200 = ("valueOf")[2];
try { v200.strike(); } catch (e) {}
class C202 {
    constructor(a204) {
        const v205 = this?.constructor;
        try { new v205(this); } catch (e) {}
        ("valueOf").localeCompare(a204, "valueOf");
    }
}
C202.length;
const v209 = new C202();
const v210 = v209?.constructor;
try { new v210(v43); } catch (e) {}
const v212 = v209?.constructor;
try { new v212(v111); } catch (e) {}
const v214 = v209.constructor;
v214.e = v214;
v214.name = v214;
const v215 = new v214(C202);
const v216 = v215?.constructor;
try { new v216(C202); } catch (e) {}
try { new v216(v45); } catch (e) {}
