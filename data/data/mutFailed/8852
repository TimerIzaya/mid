const v0 = [];
const v5 = new WeakSet();
[-70.09751891056987,-77.76172843671384,-3.0,2.0,-0.0,3.4815068665369893,0.0,1000000000.0];
[297375.2789236198,-443987.51225980953,508345.3488382308];
const v8 = [76230.87905602017,-5.0,1.0,-2.220446049250313e-16,3.5833264779256897,-2.2250738585072014e-308,-973448.1507367719,497.4356551189819,1.7976931348623157e+308,-1000.0];
function f9() {
    return v8;
}
let v13 = Map;
const v18 = v13--;
const v19 = [-4.0,-1e-15];
v19[2] = v19;
const v20 = [-7.264687027014153e+307];
v20[0] = v5;
v20.pop();
function F24(a26, a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    a26[2] = 929;
    new Uint32Array(4);
    const t19 = [3.0,NaN,-1000000000.0,595974.7516182172,-1e-15,0.6881218471964052];
    delete t19[2.0];
    const v36 = this?.__defineGetter__;
    try { v36(undefined, undefined); } catch (e) {}
    for (let i40 = 0, i41 = 10;
        (() => {
            const v42 = i40 < i41;
            class C43 {
            }
            const v44 = C43.constructor;
            try { v42(v42, v42, i41, v44, v44); } catch (e) {}
            let v46 = 3375;
            v46++;
            const v49 = new BigUint64Array(v46);
            let [v50,,v51,...v52] = v49;
            return v42;
        })();
        i40++) {
    }
    try { a26.unshift(a27); } catch (e) {}
    a28 != a28;
    let v60;
    try { v60 = a26.toSpliced(a27, a27); } catch (e) {}
    new BigInt64Array(218);
    class C65 {
        141 = "9007199254740991";
    }
    new v0();
    const v67 = v60?.__defineSetter__;
    try { v67(); } catch (e) {}
}
const v69 = new F24(v20);
class C70 {
}
try {
    v69.d = v18;
} catch(e71) {
    let v73 = new Date();
    v73 **= v73;
}
new F24(v19, v18);
const v78 = (~9007199254740990).constructor;
v78(v78);
function f81(a82) {
    return -897042.7196709883;
}
class C83 extends f81 {
}
