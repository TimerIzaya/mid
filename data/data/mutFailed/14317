new Uint16Array(1529);
const v14 = new Int16Array(6);
const v18 = [v14,1529,1529];
Reflect.construct(Int16Array, v18, Uint16Array);
v18 > Int16Array ? v18 : Int16Array;
new Float64Array(64);
-Infinity;
const o28 = {
    "maxByteLength": 91,
};
const v30 = new SharedArrayBuffer(91, o28);
new Uint16Array(v30);
const v34 = new Map();
class C35 {
    [v34];
    constructor(a37, a38) {
        const v39 = this?.constructor;
        try { new v39(); } catch (e) {}
        const v41 = /(?<!)/gv;
        v41.e = v41;
        const v42 = /(\xed\xb0\x80)\x01/gudmy;
        v42.c = v42;
        const v44 = Symbol.iterator;
        const o46 = {
            [v44]() {
            },
        };
    }
}
const v47 = new C35(Map, Map);
const t30 = v47.constructor;
new t30();
