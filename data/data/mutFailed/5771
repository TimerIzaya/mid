class C6 {
    [-29973n] = -128n;
    static [-29973n];
    #h = -1e-15;
    constructor(a8, a9) {
        a8--;
        const v13 = new Int32Array(0);
        try { v13.entries(); } catch (e) {}
        const v17 = new BigInt64Array(7);
        v17[4] = v17;
        1 * 1;
        new Int16Array(1);
    }
}
try { C6.call(-1e-15); } catch (e) {}
const v23 = new C6(-1000000.0, C6);
new C6(-2.082594041343685e+307, -1e-15);
const v25 = new C6(-1000000.0, v23);
try { v25.constructor(C6, v23); } catch (e) {}
const v27 = [v25,v25];
const v29 = [-1000000.0,[-1e-15,v25,-1e-15,v27,v27],-29973n,-1000000.0];
try { v29.toLocaleString(); } catch (e) {}
("-4294967295")[4];
("valueOf")[0];
("byteLength")[8];
-(-2);
let v43 = -4096;
v43++;
function F45(a47, a48, a49, a50) {
    if (!new.target) { throw 'must be called with new'; }
    class C58 {
        static {
            super[this];
        }
    }
}
new BigUint64Array();
1448 <= 1448;
new BigUint64Array(1448);
function f66(a67, a68, a69) {
    a67 | a67;
}
([-1000000000000.0,-1.7976931348623157e+308,294500.85018206923,-Infinity,-0.0,-7.010036940344757e+307,1.0,-Infinity,-1000.0,-1.1645821156926988e+308]).reduce(f66);
gc();
