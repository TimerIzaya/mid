class C3 {
    static #e;
    static p(a5, a6) {
        Object.defineProperty(this, 1, { writable: true, enumerable: true, value: -1.7976931348623157e+308 });
        a5--;
        a6 * a6;
        const v9 = a6.__proto__;
        function f10(a11, a12) {
            a12[a12] &= a12;
            Array().unshift(3);
            return a12;
        }
        v9[Symbol.toPrimitive] = f10;
        v9.b = v9;
        this[1] -= v9;
        %VerifyType(-2.0);
        return -2.220446049250313e-16;
    }
    60;
    a;
    #c = -2.0;
}
C3[1] = -2.0;
let v19;
try { v19 = C3.p(-2.0, -1.7976931348623157e+308); } catch (e) {}
~v19;
new C3();
const v22 = new C3();
v22[60] = v22;
const v23 = new C3();
v23[60] = v23;
const v25 = Array.length;
new Array(170);
function F28() {
    if (!new.target) { throw 'must be called with new'; }
    const v30 = this?.constructor;
    try { new v30(); } catch (e) {}
    this.a = this;
    1022873702 + 1022873702;
    try {
        this.a = 1022873702;
    } catch(e34) {
    }
}
const v35 = new F28();
const v36 = new F28();
v36.length = Array;
v36.length = v36;
const v37 = new F28();
v37.length = v25;
v37.length = v37;
const v38 = [v37,v36,v37,F28,v35];
const v39 = [v36,F28];
try { v39.values(); } catch (e) {}
const v41 = [v39,v35,v37,v36];
try { v41.reverse(); } catch (e) {}
const v43 = [v35,v37];
v43[1] = v43;
const v44 = [v36,v37,v39,v41];
try { v44.reduceRight(v41); } catch (e) {}
[v38,F28,v37,v39];
-3.0 != -3.0;
const v49 = -3.0 >> -3.0;
v49 !== v49;
170.79545126331868 > 170.79545126331868;
170.79545126331868 >> 170.79545126331868;
const v55 = [-984503.961837067,-3.0,-984503.961837067];
[v55,v55,-984503.961837067,-3.0];
const v57 = [v36];
v57[0];
-5 + -5;
class C63 {
    n(a65, a66) {
        let v67 = 10;
        for (; v67--;) {
            -3.0 | -9007199254740992;
            try {
                v57.e = 170.79545126331868;
            } catch(e70) {
            }
        }
        return v67;
    }
}
try { new C63(); } catch (e) {}
try { C63.apply(170, 170); } catch (e) {}
new C63();
const v74 = new C63();
const v75 = v74?.constructor;
try { new v75(); } catch (e) {}
const v77 = new C63();
v77.constructor = Array;
const v78 = v77?.constructor;
try { v78.toString(); } catch (e) {}
let v80;
try { v80 = new v78(); } catch (e) {}
function f81() {
    return Array;
}
function f82(a83) {
    Math.max(1.0);
    Math.log1p(-2147483647);
    -(-2147483647);
    Math.random();
    1.0 >> -2147483647;
}
Object.defineProperty(v80, "constructor", { writable: true, configurable: true, get: f81, set: f82 });
const v93 = v80?.constructor;
try { new v93(); } catch (e) {}
const o98 = {
    "execution": "async",
    "type": "major",
};
gc(o98);
const t113 = "jUGn";
t113[1] = "jUGn";
