class C3 {
    static #toString(a5) {
        this[Symbol.unscopables];
        return this;
    }
    static #o(a10) {
        try {
            this.#toString();
        } catch(e12) {
        }
        return -9.126030226535068;
    }
}
let v13;
try { v13 = new C3(); } catch (e) {}
const v14 = new C3();
try { v14.constructor(); } catch (e) {}
const v16 = new C3();
let v17 = new C3();
function f18(a19, a20, a21) {
    a21 % a21;
    function f23(a24) {
        try { a24.fontsize(v17); } catch (e) {}
        -256;
        const v28 = [256];
        function f29(a30) {
            try { a30.p(v28); } catch (e) {}
        }
        return a21;
    }
    f23.arguments;
    a19[Symbol.toPrimitive] = f23;
    function f35(a36) {
        0 >>> 0;
        0 < 3;
        return 3;
    }
    f35.name;
    a20.toString = f35;
    const o50 = {
        "d": v16,
        valueOf(a43, a44, a45, a46) {
            for (let i = 0; i < 5; i++) {
                try {
                const t0 = 9907n;
                t0();
                } catch (e) {}
            }
            super[a43];
            v17 = v14;
            return this;
        },
        ...a19,
        "e": a20,
        [v16]: -9.126030226535068,
        __proto__: a19,
        "a": a20,
        [-1]: -9.126030226535068,
    };
    o50.e;
    return o50;
}
let v54 = 1.7088318825844057e+308;
const v55 = -v16;
Math.acosh(v14);
const v57 = --v54;
const v58 = v16 << v55;
-v58;
v58 && v54;
v57 - -9007199254740990;
f18(f18(C3, v14, -9.126030226535068), v16, 1.1837938007613041e+308);
const v64 = f18(v16, v14, -2.2250738585072014e-308);
Reflect.construct(C3, [], v13);
v64.e = v64;
new Uint8ClampedArray(64);
const v76 = new Uint8ClampedArray(4096);
for (let v78 = 0; v78 < 32; v78++) {
    v76["p" + v78] = v78;
}
new Float64Array(8);
const v83 = [20785,4096,5];
v83[536870889] = v83;
for (let v84 = 0; v84 < 25; v84++) {
}
v83[536870889];
