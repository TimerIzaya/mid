[324.359151989524,Infinity,-1000000000.0];
[0.10593347010390763,0.08710826627912527,-549732.7859054739,5.0,1000000000000.0,-8.917356035847082e+306,-1e-15];
const v2 = [1.7976931348623157e+308,7.312713675382113e+307,1000000000000.0,921290.5477888945,907109.6719787652,0.0,0.8516364437108828];
new Int16Array(16);
new BigInt64Array(127, BigInt64Array, v2, v2);
new Uint8Array(11);
function f15() {
}
class C16 extends f15 {
}
new BigInt64Array();
new C16();
class C19 {
}
function f24() {
}
const o25 = {
};
function F26() {
    if (!new.target) { throw 'must be called with new'; }
}
[-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v29 = [601759695];
const v30 = [1073741824,1073741823,1376142744,1073741825];
function f33(a34, a35, a36, a37) {
    function f39() {
        [-9007199254740992,-268435456,11,9007199254740990,96025401,-65536,12,255];
        class C43 {
            #g = 5483n;
            #e = 5483n;
            #d = 9n;
            c = 9n;
            8;
        }
        const v44 = new C43();
        [-3.555277632152693,0.8875320140334291,-0.0,1.0,-412.0963098221713,4.640011956102125e+307,-783439.9468182282,310231.27043130714,8.153989949457934,974838.3777621158];
        const v46 = [3.0,-1.5434910396300392e+308];
        const v47 = v46.entries();
        const v50 = ("1000")["toUpperCase"]();
        c = v44;
        try { v47("toUpperCase", 5483n, v50, v46); } catch (e) {}
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        arguments.toPrimitive;
    }
    f15();
    const v61 = new Int8Array();
    v61.buffer.slice();
    %OptimizeFunctionOnNextCall(f39);
    let v66;
    try { v66 = v30["find"](..."find", a37, ...v29); } catch (e) {}
    v66 <= a36;
    return arguments;
}
for (let v68 = 0; v68 < 10; v68++) {
    v68();
}
%OptimizeFunctionOnNextCall(127);
f33();
