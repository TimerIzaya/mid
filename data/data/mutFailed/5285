new Array();
const o7 = {
    get e() {
        try {
        } catch(e6) {
        }
    },
};
new Uint16Array(5);
new Int16Array(106);
new Uint8ClampedArray(81);
Promise.d = Promise;
const v19 = [];
const v20 = /a\w/gudsy;
const v21 = /ka{0}/guims;
function f22(a23, a24) {
    const o25 = {
        ...v21,
        "d": v19,
        "c": a24,
        "g": a24,
        "f": a23,
        "a": a24,
        7: Uint8ClampedArray,
        __proto__: Uint8ClampedArray,
        "e": v21,
        "b": v20,
    };
}
f22();
%OptimizeFunctionOnNextCall(f22);
const v27 = new WeakSet();
v27[-65537n] >>>= WeakSet;
v27[0n] = -65537n;
delete v27[8];
10000 + 10000;
const o34 = {
    "maxByteLength": 10000,
};
const v36 = new ArrayBuffer(3471, o34);
Uint8Array.length;
const v39 = new Uint8Array(v36);
v39[2750];
const v43 = new Date();
v43[16] = Date;
class C44 {
    get c() {
        this.h &&= WeakSet;
        Object.defineProperty(v27, 3, { enumerable: true, get: Date });
        typeof this === "symbol";
        class C49 {
        }
        const v50 = new C49();
        function f51(a52, a53) {
            const o58 = {
                [v50](a55, a56, a57) {
                },
            };
        }
        return Date;
    }
    constructor(a66, a67) {
        const v70 = new BigInt64Array(12);
        const o71 = {
            ...v70,
        };
        a66 | a66;
    }
}
Date();
-450746.69945373747 ^ -450746.69945373747;
const v81 = [601759695];
const v82 = [1073741824,1073741823,1376142744,1073741825];
function f84(a85, a86, a87, a88) {
    function f90() {
        const o97 = {
            "e": -4294967295,
            ..."Vre",
            valueOf(a95, a96) {
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            5: -4294967295,
            6: -268435456,
        };
        return o97;
    }
    f90();
    %OptimizeFunctionOnNextCall(f90);
    let v100;
    try { v100 = v82["find"](..."find", a88, ...v81, ...v82, ...522675525n); } catch (e) {}
    v100 <= a87;
    return arguments;
}
const v109 = new Uint16Array(5);
let v110 = /a|b/vdy;
let v111 = /7Z(?:a?)+/gudsy;
const v112 = /\coQ/gdy;
function F113(a115) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v110;
    } catch(e116) {
    }
    try {
        this.g = a115;
    } catch(e117) {
        v112.dotAll >>= e117;
        let v118;
        try { v118 = e117(e117, v111); } catch (e) {}
        v111 = v110;
        return e117;
        v110 = v118;
    }
}
const v119 = new F113(v111);
const v120 = new F113(v110);
const v121 = new v109();
const v122 = new v109();
const v123 = [-1077398797,2,1671415104,4294967297];
function f124(a125, a126, a127) {
    function f129(a130) {
        ++a130;
    }
    this.onmessage = f129;
    try {
        this.fuck(v120, a126);
    } catch(e133) {
    }
}
const v134 = [v109,v119,v110];
const o135 = {
    "arguments": v134,
    "type": "undefined",
    [v112]: "undefined",
    "d": v122,
    __proto__: v122,
    [f124]: v121,
    "e": v123,
};
