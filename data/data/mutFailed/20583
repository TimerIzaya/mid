class C3 {
    constructor(a5, a6) {
        a6.__proto__;
        a5?.[10];
    }
    [51950];
    static get h() {
        const v13 = super.e;
        let v14;
        try { v14 = new v13(v13, v13, v13); } catch (e) {}
        v14[0] &= v14;
        try {
            v13.length = 1;
        } catch(e16) {
        }
        return -5.0;
    }
}
new C3(51950, -536870912);
const v18 = new C3(C3, 51950);
const v19 = new C3(v18, -536870912);
new Promise(3494);
new Float32Array(256);
const v31 = new Float32Array(3973);
const v32 = [2.412578955630149,2.7008822875610345,-2.220446049250313e-16,-1.0,-1000000000.0,-1.0,3.9002388983145044e+307,-Infinity,-1e-15,-4.2464820531165003e+307];
const v33 = [-1e-15,4.0,362.9742459010415,1.488212487511409e+308,3.0];
class C34 {
    constructor(a36, a37) {
        super[v33] = v32;
        for (const v38 in v33) {
            C34.e >>>= -5.0;
        }
        try {
            a37.valueOf = a37;
        } catch(e39) {
        }
    }
}
const v40 = new C34(v32, v33, v31, v19);
function f41(a42) {
    return C34;
}
const v45 = [v40];
const o46 = {
    "arguments": v45,
    "type": "function",
};
new Worker(f41, o46);
