const v0 = [1073741825];
function f1() {
    function f2(a3) {
        ([586209.1308562411,9.273207833056233,-793.5051180378861,-88.02009084622205,1000.0,5.993768942190951e+307,0.6895260767593681,3.203916786355496,1.7976931348623157e+308,-1.0422896205696638e+308]).fill(-1073741824, -27205);
        return -27205;
    }
    return f2;
}
function f8(a9) {
    function f11() {
        return Array;
    }
}
Object.defineProperty(v0, "toString", { writable: true, configurable: true, get: f1, set: f8 });
const v12 = [-6,65535];
const v13 = [22428];
class C14 {
    #valueOf(a16) {
        try { v13.toSorted(); } catch (e) {}
        const o20 = {
            "maxByteLength": 9,
        };
        const v22 = new ArrayBuffer(6, o20);
        new Int8Array(v22);
        return a16;
    }
}
let v25;
try { v25 = new C14(); } catch (e) {}
let v26 = new C14();
v26[1073741825] = v26;
const v27 = v26?.__defineGetter__;
let v28;
try { v28 = new v27(v12, v26); } catch (e) {}
new C14();
const v30 = new C14();
const v32 = new Set();
function f33(a34, a35, a36) {
    a34[1];
    try { a36.copyWithin(f33, f33); } catch (e) {}
    const o48 = {
        __proto__: v26,
        [a36]: v30,
        get h() {
            v26 = v32;
            return this;
        },
        "c": Set,
        [a36](a41, a42) {
            C14[158] = v0;
            C14.c &= a34;
            try {
                a36.indexOf(v13, 4294967296);
            } catch(e45) {
            }
            try { v25(...C14, a36, v25, ...v28, this); } catch (e) {}
            try {
                v0.f = v26;
            } catch(e47) {
            }
            return a36;
        },
    };
    o48[1073741825] = C14;
    o48[1073741825];
    return o48;
}
const v50 = f33(v12, Set, v0);
const v51 = f33(v0, v0, v12);
const v52 = v51?.c;
try { new v52(); } catch (e) {}
const v54 = f33(v0, v51, v12);
class C55 {
    constructor(a57, a58) {
        Object.defineProperty(this, "toString", { writable: true, enumerable: true, value: f1 });
        const v59 = this?.__lookupGetter__;
        try { new v59(v0); } catch (e) {}
        for (let i = 0; i < 10; i++) {
            this[this];
        }
    }
}
let v62;
try { v62 = new C55(v12, v50); } catch (e) {}
const v63 = new C55();
function f64() {
    function f65(a66, a67) {
        a67[11] = v62;
        try { new a67(Set, v32); } catch (e) {}
        return v27;
    }
    return f65;
}
function f69(a70) {
    new Uint32Array(5);
}
Object.defineProperty(v63, "constructor", { configurable: true, enumerable: true, get: f64, set: f69 });
const v74 = v63?.constructor;
try { new v74(v30, v54); } catch (e) {}
