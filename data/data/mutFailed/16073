const v3 = [-1000000000000.0,-2.2250738585072014e-308,-426570.1102888837,-0.0,-4.0,5.0,0.11819894662975616];
const v4 = [6.464556653447566,-1e-15,114.08965436564131,-0.0,2.220446049250313e-16,1.5067853440464928e+308];
const v5 = [2.2250738585072014e-308,-5.0,1.779371668322731e+308,-Infinity];
try {
} catch(e9) {
    e9 << e9;
}
class C11 {
    static n(a13, a14, a15, a16) {
        this[v5] = a16;
        %VerifyType(a13);
        return this;
    }
    constructor(a18, a19) {
        super[v4] = a19;
        let v23 = 598.7335734907251;
        const v24 = -536870912 + v23;
        -v4;
        Uint16Array.asin(v24);
        Uint16Array.min(4294967295);
        v4 || 4294967295;
        ++v23;
    }
}
const v30 = new C11(v3, 861750740);
new C11(v4, 1598529343, C11, -65535);
const v32 = new C11(v5, 1598529343);
function f33() {
    return v32;
}
new Uint8Array(1623);
new Uint8Array(1977);
new Uint8Array(1);
const v46 = Symbol.iterator;
const t34 = "asin";
t34[v46] = v46;
const v48 = new Uint16Array(4294967295, 4294967295);
const v53 = new Float32Array(7);
const o60 = {
    [f33]: v30,
    "arguments": v5,
    [1977](a56) {
    },
    n() {
        return this;
    },
    m() {
        const o59 = {
        };
    },
};
v5.length ||= -65535;
let v61 = C11.toStringTag;
v61 = true;
v48.__proto__;
const v65 = new Int32Array();
function F66(a68, a69, a70) {
    if (!new.target) { throw 'must be called with new'; }
    const v71 = this?.constructor;
    try { new v71(Uint16Array, a70, a70); } catch (e) {}
    a68 * a68;
    a70++;
    this.d = a68;
    this.g = Int32Array;
}
new F66(F66, 256, 256);
const v76 = new F66(256, v65, 4294967295);
const t67 = v76.g;
new t67(Uint16Array, v53, 7, v48, v30, Uint32Array);
class C80 {
    #a;
    constructor(a82, a83, a84) {
    }
}
new F66(256, Float32Array);
const v88 = Float32Array.asinh();
Symbol("asin");
try {
    new C11(v88, f33);
} catch(e91) {
}
const v93 = new Float32Array(Float32Array, Float32Array);
v93.h = v93;
Float32Array.sin(F66, 1598529343);
