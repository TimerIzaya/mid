const v2 = new Array(3257);
class C3 extends Array {
    static #m(a5) {
        class C6 extends Array {
            #b = 3257;
            static 2312993610 = a5;
            static [3257] = a5;
        }
        new C6();
        new C6();
        new C6();
        return a5;
    }
    #n(a11, a12, a13, a14) {
    }
    n(a16) {
    }
    constructor(a18, a19, a20, a21) {
        arguments[0] = arguments;
    }
    1631;
    static #d;
}
const v23 = new C3();
const v24 = new C3();
Uint32Array[2] = 1;
for (let v27 = 0; v27 < 25; v27++) {
    const v28 = [601759695];
    const v29 = [1073741824,1073741823,1376142744,1073741825];
    function f30(a31, a32, a33, a34) {
        try { v29["find"](..."find", ...a34, ...v28); } catch (e) {}
        return v27;
    }
    for (let v37 = 0; v37 < 10; v37++) {
        f30(f30, v28, v37, v28);
    }
}
let v39 = new C3();
class C40 {
    constructor(a42, a43, a44, a45) {
        Object.defineProperty(v23, a43, { writable: true, configurable: true, enumerable: true, get: Array });
        super[Array] = this;
    }
    static get d() {
        const v47 = super.c;
        v39 |= v39;
        return 2;
        const t47 = 2;
        const v50 = new t47();
        for (let v51 = 0; v51 < 25; v51++) {
            const v52 = v50.g;
            try {
                v52.length = 1;
            } catch(e54) {
            }
        }
        const v55 = Symbol.iterator;
        const o64 = {
            [v55]() {
                let v57 = 10;
                const o63 = {
                    next() {
                        v57--;
                        const v61 = v57 == 0;
                        const o62 = {
                            "done": v61,
                            "value": v57,
                        };
                        return o62;
                    },
                };
                return o63;
            },
        };
        return v47;
    }
    /*
    constructor(a66) {
        typeof arguments;
    }
    */
}
const v70 = new C40(v24, v39, C40, v24);
new C40(v2, v23, v70, v24);
new C40(v70, v39, Array, v2);
/ha$\P{Decimal_Number}+/vdisy.constructor.$7;
