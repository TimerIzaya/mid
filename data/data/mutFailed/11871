[-1024,55993,-1,1,-9007199254740992];
[1,-2,-1981436539,-4848,7];
[-2,6,257,-536870912,-65537];
const v14 = new Array(255);
const v21 = [-2147483647,64098,-9383,1024,129,-5];
[1000,-16,-38597,12,-3399,32508];
const v23 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v25 = new Uint32Array();
const v27 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v28 = [601759695];
const v29 = [1073741824,1073741823,1376142744,1073741825];
function f31(a32, a33, a34, a35) {
    function f37() {
        let v40 = Float64Array;
        v40 = a33;
        b = v28;
        v23.length;
        try {
            v29.forEach(a33);
        } catch(e43) {
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o45 = {
        };
        const o60 = {
            "c": -4294967297n,
            "c": v28,
            valueOf(a48, a49) {
            },
            1073741824: v25,
            "maxByteLength": -268435456,
            "b": -4294967295,
            [-4294967297n](a51, a52, a53, a54) {
                class C56 extends Date {
                    static get c() {
                    }
                }
                eval();
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v27,
            256: a35,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            6: -268435456,
        };
    }
    f37();
    const v63 = new Int8Array();
    v63.buffer.slice(2147483648);
    const v69 = new Int32Array(1024);
    v69[3];
    for (let v71 = 0; v71 < 10; v71++) {
    }
    %OptimizeFunctionOnNextCall(f37);
    let v73;
    try { v73 = v29["find"](..."find", a35, ...v28, ...v29, ...522675525n); } catch (e) {}
    v73 <= a34;
    return arguments;
}
for (let v75 = 0; v75 < 10; v75++) {
    f31();
}
%OptimizeFunctionOnNextCall(f31);
f31();
[-50328,-14,3,128,-11,64,-65535];
class C79 {
    [v21] = -1000000.0;
    constructor(a81, a82, a83, a84) {
        %VerifyType(a84);
        super[this];
    }
    g;
    c;
    #toString(a87, a88, a89) {
    }
    1 = 257n;
}
new C79(1073741825n, 1.0, 7.589647165982214);
const v91 = new C79(411585671n, -1000000.0, -1000000.0, 1.0);
new C79(v91, -1000000.0, 1.0);
/(?:a*)+bU\u0034xyz{1,32}/udi;
/vfoo|(bar|baz)|quux/gvds;
/JO/gvy;
class C98 {
    #m(a100, a101) {
        function f102() {
            return a101;
        }
        super[a101] = "f";
        %VerifyType(a101);
        return f102;
    }
    static c;
}
let v103;
try { v103 = C98(); } catch (e) {}
const v104 = new C98();
const v105 = new C98();
v105.constructor = f31;
v105?.constructor;
const v107 = new C98();
function f108() {
    class C110 extends Float64Array {
    }
    C110();
    return C110;
}
v107.constructor = f108;
v107?.constructor;
class C113 {
    p(a115) {
        this.g ^= this[8];
    }
    static #n(a118, a119, a120, a121) {
    }
    7 = v107;
    #a = v105;
}
const v122 = new C113();
v122[7] = v122;
const v123 = new C113();
v123[7] = v123;
const v125 = [[],"f",v107,381717.6504737276];
[v104];
function F127() {
    if (!new.target) { throw 'must be called with new'; }
    this.e = this;
    try { this.propertyIsEnumerable(); } catch (e) {}
}
new F127();
const v131 = new F127();
function F132(a134, a135) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor = f108;
    const v136 = a135?.__lookupGetter__;
    try { v136(); } catch (e) {}
    try { this.constructor(F132, this); } catch (e) {}
    a134.e = a134;
}
F132.arguments = F132;
new F132(v131);
("Hyo9")[1];
const t147 = "at";
t147[1] = "at";
const v144 = ([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap;
function f145(a146) {
    const v147 = [];
    class C148 {
        static get b() {
            try {
                super.getOwnPropertyNames();
            } catch(e151) {
            }
            return v147;
        }
        constructor() {
            this[v147] = this;
            this[v147] %= this;
        }
        static e;
        [v147];
    }
    const v153 = new C148();
    class C155 {
        [-9] = v153;
        4294967296;
        5;
    }
    new C155();
    return v103;
}
v144.constructor = f145;
v144?.constructor;
const v158 = [-4.202468609045087];
try { v158.every(v125); } catch (e) {}
[0.8434386161503777];
("4i")?.toWellFormed;
const t181 = "4i";
t181[1] = "4i";
const t185 = "RpXR";
t185[3] = "RpXR";
const t187 = "RpXR";
t187[1] = "RpXR";
("c")?.toLocaleUpperCase.length;
class C168 {
    constructor(a170) {
        a170[Symbol.toPrimitive] = f108;
        ("valueOf").localeCompare(a170, "valueOf");
    }
}
function f174(a175, a176) {
    class C177 {
        set g(a179) {
            class C180 {
            }
        }
    }
    return a175;
}
C168[Symbol.toPrimitive] = f174;
const v183 = new C168();
function f184() {
    function f185(a186, a187) {
        function f189(a190) {
            return a186 ^ a187;
        }
        this.onmessage = f189;
        return this;
    }
    return v104;
}
Object.defineProperty(v183, "constructor", { configurable: true, value: f184 });
const v192 = v183.constructor;
function f193() {
    gc(v14);
    return 381717.6504737276;
}
v192[Symbol.toPrimitive] = f193;
new v192(C168);
