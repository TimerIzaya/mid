new Uint16Array(256);
const t1 = 256;
new t1(1111);
new BigInt64Array(11);
class C9 {
    static #toString(a11, a12) {
        try {
            a12.toString = a12;
        } catch(e13) {
        }
        return Uint16Array;
    }
    [11] = BigInt64Array;
    [11];
    static [11];
}
new C9();
new C9();
new C9();
function F17() {
    if (!new.target) { throw 'must be called with new'; }
}
const v19 = new Int32Array();
const v22 = [2.2250738585072014e-308,-Infinity,496645.0382158025,-621700.5175002808];
[974836.255416306,7.54270135293536,0.0,0.35539841926815563,1.385396251341163,-1000000000000.0,NaN,-1.7976931348623157e+308];
class C24 {
}
const v25 = new C24();
function f26(a27, a28, a29) {
    for (let v30 = 0; v30 < 25; v30++) {
        a29["p" + v30] = v30;
    }
    return a29;
}
f26(0.0, v19, C24);
f26(1.0, v25, v22);
