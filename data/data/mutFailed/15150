function f0() {
    let v1 = -3.0;
    const o46 = {
        "c": "toString",
        __proto__: "toString",
        "a": "toString",
        "d": v1,
        16: -1722607654,
        "f": v1,
        "g": "toString",
        valueOf(a5, a6) {
        },
        o(a8, a9) {
            function f10(a11, a12, a13) {
                v1 |= a9;
                return this;
            }
            let v14 = 3.1466442940809625;
            class C16 {
                set e(a18) {
                    const v20 = Symbol.iterator;
                    const o26 = {
                        [v20]() {
                            let v22 = 10;
                            const o25 = {
                                next() {
                                    v22--;
                                    return -1722607654;
                                },
                            };
                        },
                    };
                }
            }
            const v27 = C16();
            const v28 = C16();
            const v29 = C16();
            function f30(a31, a32) {
                const o39 = {
                    valueOf(a34, a35) {
                    },
                    "e": v28,
                    o(a37, a38) {
                        return a9;
                    },
                };
                return v27;
            }
            const v40 = f30(-1000.0, v1);
            const v41 = f30();
            let v42 = 1024n;
            try {
            } catch(e43) {
            }
            let v44 = v41[v29];
            ({"e":v42,"h":v44,...v14} = v40);
            try { v27.p(f0, v1); } catch (e) {}
            return f0;
        },
        "e": -1722607654,
        [-1722607654]: v1,
        ..."toString",
    };
    return o46;
}
const v47 = f0();
v47["o"](v47, ..."o", f0(), ..."o", f0);
try {
    f0();
} catch(e52) {
}
const v53 = f0();
function f57(a58, a59) {
    const o66 = {
        5: a58,
        "f": a58,
        "e": v47,
        get d() {
            try { this["reverse"]("reverse", this, a59, v53, 5); } catch (e) {}
            return a58;
        },
    };
    return o66;
}
f57(-277508600, v47);
f57(11170, v53);
f57(5, v53);
BigInt.toString = BigInt;
try {
    BigInt(BigInt, -277508600, 5, -277508600);
} catch(e72) {
}
