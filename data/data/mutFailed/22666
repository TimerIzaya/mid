const v0 = [-922301530,16,-65535,9007199254740990,1745481025,4294967297,6];
const v1 = [474215324,0,1073741823,-9223372036854775808,-2,-6,7,6];
const v2 = [-7,-2147483647,50962,-1848807279,-41395,2,60508,65537,536870889,14];
const v3 = [v0,v2,v0,v2];
const v4 = [v0,v1,v3,v2,v3];
const v5 = [v4,v1];
function f6() {
    const v8 = v5["with"](v4, v4);
    %VerifyType(v8);
    v3[7] = v8;
    /xyz{1,32}/ud;
    /(Kh(U(?:a?)+))/dm;
    /t(?:a+){0,0}(p)/gvsy;
    return v1;
}
new Date();
new BigInt64Array(4043);
new Int32Array(135);
let v21 = BigUint64Array;
const v22 = new Date(4043);
const v26 = v22 & 513140032;
++v21;
const v28 = !v26;
Math.atan(v26);
513140032 && v28;
new v21(4096);
class C32 {
}
const v33 = new C32();
const v34 = new C32();
const v35 = new C32();
function F37(a39, a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
    const v42 = this.constructor;
    try { new v42(this, a41, -14); } catch (e) {}
    a41.valueOf(a39, a41);
}
new F37(v34, v35, v35);
new F37(v34, v33, v33);
