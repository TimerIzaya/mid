new Uint32Array(177);
try { Float32Array.bind(Uint32Array); } catch (e) {}
const v6 = new Float32Array(2);
const v9 = new Uint8Array(8);
const v10 = /3^xxx$[\xe2\x81\xa3\u0060+]/gud;
v9.dotAll;
/\1\2(a(?:\1(b\1\2))\2)\1D/gudmsy;
/RZN/gdsy;
v10[Symbol];
const t8 = 2;
t8.LN10 = Math;
const v19 = [-2,257,-107178159,-35269,9223372036854775807,1203530861,-32678];
const o20 = {
};
const v22 = new Proxy(v19, o20);
const o23 = {
    __proto__: v22,
    "e": -683470965n,
};
const v25 = v6 ^ -6.294689110811755;
v25 >>> v25;
const v28 = Math.atan2(-237949744, +-683470965n);
try { Symbol.keyFor(v28); } catch (e) {}
function f30(a31) {
    const o35 = {
        ...a31,
        get d() {
            const v33 = this.__lookupSetter__;
            try { Math(); } catch (e) {}
            return v33;
        },
    };
    return o35;
}
f30.name;
