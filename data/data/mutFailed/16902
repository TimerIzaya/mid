function f0() {
    let v3 = 4.3514862929189053e+307;
    v3++;
    const o9 = {
        "g": -64435,
        get f() {
            const v6 = this.g;
            try { v6[-64435](); } catch (e) {}
            return v6;
        },
        "e": -64435,
        "d": 65536,
        2: f0,
        __proto__: v3,
        "c": v3,
        268435456: v3,
        "f": 65536,
        "b": 65536,
    };
    o9.length = o9;
    return o9;
}
const v10 = f0();
const v11 = f0();
v11.length = v11;
const v12 = f0();
v12[268435456] = v12;
function f13() {
    return v10;
}
-256 * -256;
-13 ^ -13;
-13 !== -13;
256 - 256;
~512;
try { new Float64Array(v11, -13, -13); } catch (e) {}
new Float64Array(512);
Float64Array.length = Float64Array;
const o33 = {
    get b() {
        eval("");
        return 16;
    },
};
const v34 = new Float64Array(12);
v34[9];
v34.BYTES_PER_ELEMENT = v34;
new Float64Array(v11);
function f39(a40, a41, a42, a43) {
    function f44() {
        const t50 = "Vre";
        t50[2] = "Vre";
        try { Math.tan(f13); } catch (e) {}
        Math.log1p(2.220446049250313e-16);
        new Date();
        const v52 = a41 ^ "Vre";
        v52 - v52;
        const v56 = new BigInt64Array(3768);
        let o57 = {
        };
        [,...o57] = v56;
        try { Math.pow(a43, v34); } catch (e) {}
        9007199254740991n * 9007199254740991n;
        const v62 = `
        `;
        class C64 {
            static {
                this.prototype = this;
                try {
                    const t69 = null;
                    t69.valueOf = this;
                } catch(e66) {
                    e66.name = e66;
                }
            }
        }
        const v68 = -(-1.632556010913421e+308);
        v68 >>> v68;
        const v70 = Math.atanh("Vre");
        v70 - v70;
        const v72 = !"Vre";
        !v72;
        v72 || v72;
        v72 | ("Vre" * -1.632556010913421e+308);
        return "Vre";
    }
    f44();
    %OptimizeFunctionOnNextCall(f44);
    return a40;
}
for (let v78 = 0; v78 < 5; v78++) {
    -v78;
    f39();
}
