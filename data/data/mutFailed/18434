function f0() {
    const o30 = {
        get c() {
            let v5;
            try { v5 = this.at(); } catch (e) {}
            function f6(a7, a8) {
                function f10(a11) {
                    let v12;
                    try { v12 = new f0(a11, a8, -724417.0985642582, ...a11, ...a11, -13); } catch (e) {}
                    ++v12;
                }
                this.onmessage = f0;
                this[Symbol.search] = f0;
            }
            const v18 = [f0,this];
            const o19 = {
                "arguments": v18,
                "type": v5,
            };
            new Worker(f6, o19);
            v5[v5] = v5;
            function F21(a23) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.f = v5;
                } catch(e24) {
                }
                try {
                    this.h = this;
                } catch(e25) {
                }
                try {
                    this.d = 3907;
                } catch(e26) {
                }
            }
            const v27 = new F21(-724417.0985642582);
            new F21(-13);
            const v29 = new F21(v27);
            return v29;
        },
    };
    return o30;
}
const v31 = f0();
const v32 = f0();
const v33 = f0();
[-4294967296,-55337,1342597014];
[463431442,-65537,-53325,3,-4362,257,-4096,1000,-1024];
const v36 = [4,-15,32228,-9,10,-1073741824,0,65537,7,0];
class C37 extends f0 {
    constructor(a39, a40, a41) {
        super();
        function f42(a43, a44, a45, a46) {
            const o47 = {
                "e": a40,
                1: v31,
            };
            return o47;
        }
        const v48 = f42(a41, v36, f0, a40);
        v48(a41, v36, v48, v32);
        f42(this, v36, v31, v32);
    }
}
new C37(v33, v31, v32);
new C37(v33, v31, C37);
new C37(v31, v31, v33);
[3,-9223372036854775808,10,-16435,740812728,-1340319245];
[1073741823,59159,0,1486815565,129];
[46734,-2,2147483647,-11165,9223372036854775807,30207,268435441,536870888];
const v59 = new Uint8ClampedArray(231);
v59["reverse"]();
