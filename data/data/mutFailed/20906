class C1 {
    #n() {
        class C3 {
            [this] = C3;
            #d = this;
            #h;
        }
        new C3();
        new C3();
        new C3();
        return C3;
    }
    8;
    268435456 = true;
    #b = true;
}
const v7 = new C1();
const v8 = new v7();
const v9 = new C1();
[true,C1,[-13,v7,true,[-37383,-13,true,v9,-13],C1],-37383,4294967296];
new BigUint64Array(578, v7, v7);
new Int32Array(0);
new Uint16Array(0);
class C25 {
}
for (let v26 = 0; v26 < 5; v26++) {
    function f27() {
        try { new Symbol(); } catch (e) {}
        const v30 = v8.toPrimitive;
        Symbol.for(v30.description);
        let v33;
        try { v33 = Symbol.bind(v26); } catch (e) {}
        const v34 = v30.description;
        const v37 = Symbol.for(Symbol.for(v34).description);
        try { Symbol.toString(); } catch (e) {}
        Symbol.for(v34.description);
        function f41() {
            const o44 = {
                p(a43) {
                    return f41;
                },
            };
        }
        try { f41(); } catch (e) {}
        const v47 = v30.description.codePointAt(v33);
        v47 - v47;
        v37 & v47;
        v47 + v47;
        return v8;
    }
    f27();
    %OptimizeFunctionOnNextCall(f27);
}
