let v1 = -256n;
class C3 {
    n(a5, a6) {
        if (!a5) {
            try { a5(); } catch (e) {}
            var d = a5;
        } else {
            try {
                super.fround(this, this);
            } catch(e9) {
            }
        }
        return 268435441n;
    }
    #f = 268435441n;
    d;
    #c;
}
const v10 = new C3();
const v11 = new C3();
let v12 = new C3();
function f13(a14, a15, a16, a17) {
    const o26 = {
        __proto__: v11,
        "a": C3,
        "d": a16,
        get e() {
            a16 & a16;
            --v12;
            v10 % v12;
            this.__proto__;
            const v24 = a16;
            return this.c;
        },
        "a": a14,
        "e": a16,
    };
    return o26;
}
const v27 = f13(v11, -792159283n, -792159283n, f13);
const v28 = f13(v27, 268435441n, 268435441n, v10);
const v29 = f13(v28, v28, v1, v12);
function F30(a32, a33, a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 268435441n;
    } catch(e36) {
    }
}
const v37 = new F30(-792159283n, v1, v27, v11);
const v38 = new F30(v1, -792159283n, v28, v37);
new F30(v1, -792159283n, v29, v38, F30, v38, v1);
v27[v10] >>= 9223372036854775807;
v1 >>>= 268435441n;
class C43 {
}
const v44 = new C43();
const v45 = [];
function f46(a47, a48, a49, a50) {
    function f51() {
        ("Vre").startsWith(a47);
        const o54 = {
            [v45]: v44,
        };
        return C43;
    }
    f51();
    %OptimizeFunctionOnNextCall(f51);
    return a48;
}
for (let v56 = 0; v56 < 5; v56++) {
    f46(f46, v45, v56, v44);
}
