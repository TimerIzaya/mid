const v2 = new Int32Array(16);
v2.p0 = v2;
4096 * 4096;
const v6 = new Int8Array(4096);
function f7() {
    function F8() {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v11 = new F8();
    const v12 = new F8();
    const v13 = new F8();
    function F14(a16, a17, a18) {
        if (!new.target) { throw 'must be called with new'; }
        const v19 = this.constructor;
        try { new v19(this, F14, a18); } catch (e) {}
        a16.c = a16;
        const v21 = a18?.constructor;
        try { new v21(); } catch (e) {}
        this.b = a18;
    }
    new F14(v12, v13, v11);
    return F14;
}
v6.toString = f7;
v6[820] = v6;
v6[319];
616 === 616;
try { new Float64Array(616, v6, Float64Array); } catch (e) {}
const v29 = new Float64Array(616);
function f30(a31, a32, a33, a34) {
    a31 - a31;
    a32 >> a32;
    a33 | a33;
    a34 >>> a34;
    const v39 = a32 - a32;
    v39 >>> v39;
    try {
        for (let v41 = 0; v41 < 50; v41++) {
            for (let v42 = 0; v42 < 25; v42++) {
                v2["p" + v42] = v42;
            }
        }
    } catch(e45) {
    }
    a33 & a33;
    a34 >> a34;
    const o67 = {
        "c": 616,
        [616]: Int32Array,
        "b": Int32Array,
        10: v6,
        "g": 616,
        [v2]: a33,
        "d": Int32Array,
        n(a49, a50) {
            4096 | v29;
            v29[110];
            let v54 = -1440192970;
            const v56 = v54--;
            v56 | v56;
            !-2;
            const o64 = {
                [1836424012](a61, a62, a63) {
                },
            };
            !v2;
            return !v54;
        },
    };
    return o67;
}
f30(4096, 616, 616, 4096);
class C70 {
    static #e;
    constructor(a72, a73) {
        try {
            a73.#e = Date;
        } catch(e74) {
        }
    }
}
const v76 = f30(4096, 4096, 16, 4096)?.d;
try { new v76(C70, Int8Array, Int32Array); } catch (e) {}
f30(16, 616, 16, 616);
Float32Array.prototype = Float32Array;
let v80;
try { v80 = Float32Array.bind(); } catch (e) {}
v80.length;
const v82 = v80.length;
v82 - v82;
gc.name;
gc();
