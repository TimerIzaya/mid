new Int32Array(14);
function F5(a7, a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
}
F5();
function f11() {
    new Int8Array(1073741823);
    return f11;
}
f11();
f11();
const v17 = new Uint32Array(16);
Math.expm1(-366687.8544616379);
class C24 extends Date {
}
new C24();
new Int32Array(131);
function F27(a29, a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a29;
    } catch(e32) {
    }
    try {
        class C36 {
            [1.7976931348623157e+308] = 23354;
            #h;
            1;
            [23354];
            [-4.055130549492246];
        }
        this.a = Int32Array;
    } catch(e37) {
    }
    try {
        this.g = a30;
    } catch(e38) {
    }
    const v39 = [1929306256,-35796];
    try { v39["36049"](); } catch (e) {}
    for (let i = 0; i < 5; i++) {
    }
}
new F27(14, 16, 16);
new F27(14, 16, 14);
new F27(14, 131, 131);
const v48 = [0.48879817238347556,2.2250738585072014e-308,1000.0,1000.0,-681.8004556870678,-1000.0,-1.5737380958439236e+306];
function F49(a51, a52, a53) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = 4411;
    const o54 = {
    };
    Date(o54);
    Reflect.construct(Int8Array, []);
    const v60 = [2.412578955630149,2.7008822875610345,-2.220446049250313e-16,-1.0,-1000000000.0,-1.0,3.9002388983145044e+307,-Infinity,-1e-15,-4.2464820531165003e+307];
    const v61 = [-1e-15,4.0,362.9742459010415,1.488212487511409e+308,3.0];
    class C62 {
        constructor(a64, a65) {
            super[v61] = v60;
        }
    }
    const v66 = new C62(v60, v61);
    function f67(a68) {
    }
    const v71 = [v66];
    const o73 = {
        "type": "function",
        __proto__: v17,
        [v71]() {
        },
        "maxByteLength": 4411,
        "arguments": v71,
        "type": "function",
    };
    new Worker(f67, o73);
}
new F49(531531810, v48, 531531810);
class C76 {
}
