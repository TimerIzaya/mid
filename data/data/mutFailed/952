const v0 = [48812,2];
function f1() {
    const v3 = new BigUint64Array();
    function f5(a6, a7) {
        return a6;
    }
    const o23 = {
        [v3](a9, a10, a11) {
            class C12 {
                static {
                    function f14() {
                        return Int8Array;
                    }
                    const v15 = f14();
                    f5(v15, v15);
                }
            }
            for (let i18 = 0; i18 < 10;) {
            }
        },
    };
    return o23;
}
v0.toString = f1;
const v24 = [-52281,198878415,4,9,64959];
const v25 = [-1721275672,4096,-9007199254740991,-1073741824,-65536,-128,-10,30712];
class C29 {
    e;
    #m(a31, a32) {
        v0.length = 3;
        const v37 = [991.721527488573,-290835.2265090322];
        const v43 = ("-1723624938").slice(9, "g").normalize();
        try { v43.substring(v37, WeakMap); } catch (e) {}
        class C45 {
            constructor(a47, a48) {
                a48.sup(v43, "-1723624938").toLocaleLowerCase();
            }
        }
        Math.atan(-1000000000.0);
        -1000000000.0 / 438825070n;
        438825070n + 438825070n;
        438825070n * -1000000000.0;
        return 51398n;
    }
    [v25] = v24;
}
const v55 = new C29();
try {
    function f56() {
        return f56;
    }
    const o60 = {
        ["536870887"]: -1000000000000.0,
        "b": -757.5759240774136,
        "a": -1000000000000.0,
        [-757.5759240774136]: "536870887",
        [-1000000000000.0]: -757.5759240774136,
        "d": "536870887",
        [-2]: -1000000000000.0,
    };
} finally {
}
const v61 = v55?.constructor;
try { new v61(); } catch (e) {}
const v63 = new C29();
const v64 = new C29();
v64.g = v64;
function f65() {
    return v64;
}
class C66 {
    #b = 51398n;
    constructor(a68, a69) {
        for (let i = 0; i < 10; i++) {
            this[this];
        }
    }
    #n(a72, a73, a74, a75) {
        let v76 = a;
        v25[v76] = v76;
        super[a73] = a72;
        ++v76;
        a72[1] = a74;
        const v79 = new Set();
        function F80(a82, a83) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = a82;
            } catch(e84) {
                for (let [v85,v86] of a82) {
                    class C87 {
                    }
                    const v88 = new C87();
                    const v89 = v88.g;
                    try {
                        v89.length = 1;
                    } catch(e91) {
                    }
                    try {
                        v79.values();
                    } catch(e93) {
                    }
                }
            }
            try {
                this.h = v79;
            } catch(e94) {
                Math.atan2(257, 257);
            }
            try {
                const v98 = v79[this];
                try {
                    new F80(v98, -2046072084n);
                } catch(e101) {
                }
                this.b = Set;
            } catch(e102) {
            }
        }
        const v103 = new F80(Set, Set);
        try {
            v103.toString = v63;
        } catch(e104) {
        }
        return f65;
    }
    [v0] = 51398n;
    #g = v63;
    a = 719903369n;
}
const v105 = new C66();
const v106 = v105?.constructor;
try { new v106(); } catch (e) {}
new C66();
const v109 = new C66();
v109.c = v109;
function F110() {
    if (!new.target) { throw 'must be called with new'; }
}
const v112 = new F110();
const v113 = new F110();
v113.constructor = f1;
let v114;
try { v114 = v113.constructor(); } catch (e) {}
const v115 = new F110();
function f116(a117) {
    a117 - v106;
    const v121 = new Int8Array([0.600959953156498,1.0,-Infinity]);
    return v121;
}
v115.toString = f116;
try { v115.toString(); } catch (e) {}
function f123(a124, a125) {
    const o161 = {
        "b": v115,
        "arguments": v0,
        toString(a127, a128, a129, a130) {
            v114 instanceof a127;
            try { a130.trimEnd(); } catch (e) {}
            return "-1024";
        },
        n(a137, a138) {
            const v140 = new Float64Array(Float64Array);
            for (const v141 in v140) {
            }
            class C142 {
                constructor(a144, a145, a146) {
                    a145.e = a145;
                    class C148 extends a145.constructor {
                    }
                    const v149 = new C148();
                    try { v149(); } catch (e) {}
                }
            }
            ([1000000000000.0,6.579220753226213e+307,2.0,-2.220446049250313e-16,NaN,-1000000.0])["findIndex"](gc);
            a124(v112, a125);
            const v158 = new Float64Array(5);
            const v159 = new Float64Array(v158);
            v158 ** v159;
            return F110;
        },
        "a": v113,
    };
    return o161;
}
new Uint8ClampedArray(127);
class C168 {
}
const v169 = new C168();
function f170() {
    return v169;
}
async function f171(a172, a173) {
    a172.name;
    %PrepareFunctionForOptimization(f123);
    const v176 = f123(a173, f123());
    const v177 = [];
    class C178 {
        static p() {
            let v180;
            try { v180 = this(this, this, this, v177, v177); } catch (e) {}
            let v181;
            try { v181 = v180(this); } catch (e) {}
            v181 = this;
            const v182 = [-719491709,-4096,38613,-1,1024,65535,129];
            [65535,268435456,65537];
            [-1319674364,836468341,127,-46522,-4294967296,742091120,3621,16,-2,268435441];
            return v182;
        }
        static g = v177;
        1073741824 = v177;
    }
    new C178();
    v176.h = v176;
    %OptimizeFunctionOnNextCall(f123);
    f123();
    new C29();
    let v188 = -1e-15;
    v188++;
    new Float64Array(203);
    return f171;
}
f171.then = f170;
f171(F110, 4294967296);
