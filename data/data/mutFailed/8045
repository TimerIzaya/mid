class C1 {
    set f(a3) {
        try { this(a3, a3); } catch (e) {}
        try {
            a3 && super.m();
            a3 ^= a3;
        } catch(e10) {
        }
    }
    static {
        const v12 = true >= true;
        C1 <= this;
        try {
            super.at(this, true, true, v12);
        } catch(e15) {
        }
    }
}
const v16 = new C1();
new v16();
const v18 = new v16();
[-1.7976931348623157e+308,-524374.4506584671,0.0,-8.154709946437892,-8.527880778556248,2.220446049250313e-16,-173131.1183706486];
[3.4521293262014873e+307,1000000000000.0,-865.0720792783598,3.0,-1.0,-4.264527467319528,-820241.9435838156];
[0.47355363104368164,0.788021926615184,0.8841975013727176,-3.986920642179771e+307,1.3108344400960483,-1e-15,0.34088958512496237,NaN];
new WeakMap();
const v30 = /5mxyz{0,1}?/gimsy;
const v32 = new Int16Array(v30);
for (let i35 = 0; i35 < 1, true; i35++) {
    v30[i35];
    for (let v42 = 0; v42 < 32; v42++) {
        v16["p" + -457954397] = v42;
    }
}
const v45 = new BigUint64Array();
const o46 = {
    __proto__: v18,
};
for (let v47 = 0; v47 < 25; v47++) {
    const v48 = v45.byteLength;
    v32[v48] += v48;
    o46[65536];
}
