const v0 = [-11630,124748071,-4096,436423816,-4294967297,36690];
const v1 = [-16,-9007199254740990];
const v2 = [128,14560278,6];
const v7 = new Set();
const v11 = new DataView(1073741825);
[9,-44107,1024,30475,619072327,2297];
const v15 = Symbol.isConcatSpreadable;
const o19 = {
    valueOf() {
        `268435456${v0}now${this !== this}undefined${Set}PY`;
        return 1073741825;
    },
};
v11[v15] = v15;
const v20 = v11[v2];
[61064,-7,129,9,-4,4096,-35422,-128];
[-9223372036854775808,-17387,-46757,3469,1024];
const v24 = new BigUint64Array();
try { v7.clear(); } catch (e) {}
for (let v28 = 0; v28 < 100; v28++) {
    DataView(v20);
}
for (const v30 of v24) {
}
v24.length;
let v35 = -256 * v1;
Math.trunc(49142);
++v35;
!-256;
for (let i = 0; i < 5; i++) {
    const o40 = {
    };
    FinalizationRegistry(o40);
}
try {
    DataView(15);
} catch(e44) {
}
