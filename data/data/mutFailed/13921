const v1 = new Date();
function F2(a4, a5) {
    if (!new.target) { throw 'must be called with new'; }
    const v6 = [1984879050,0,-8575,7,1073741825];
    function f7(a8, a9, a10, a11) {
        return ("Vre").constructor.fromCharCode(v6);
    }
    f7(v6, v6, v6, f7);
    a5.length;
    try {
        this.f = Date;
    } catch(e17) {
    }
    try {
        this.h = a4;
    } catch(e18) {
    }
    try {
        this.resizable = a4;
        const v19 = [2.412578955630149,2.7008822875610345,-2.220446049250313e-16,-1.0,-1000000000.0,-1.0,3.9002388983145044e+307,-Infinity,-1e-15,-4.2464820531165003e+307];
        const v20 = [-1e-15,4.0,362.9742459010415,1.488212487511409e+308,3.0];
        class C21 {
            constructor(a23, a24) {
                super[v20] = v19;
            }
        }
        return C21;
    } catch(e25) {
    }
    const v28 = new BigUint64Array(1000);
    v28.includes(undefined);
}
const v31 = new F2(v1, F2);
const v32 = v31?.f;
function f33(a34, a35, a36, a37) {
    const o38 = {
        [a34]: a34,
    };
    return o38;
}
Worker.toJSON = f33;
let v40;
try { v40 = new v32(Date, v31, v1, F2, Date, v31, v1); } catch (e) {}
const v41 = new F2(v40, v31);
const v42 = new F2(v1, Date);
function F43(a45, a46, a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    const v49 = v42?.f;
    try { new v49(a48, F43, v41, v41, F43, a48, a48); } catch (e) {}
    function F51(a53, a54) {
        if (!new.target) { throw 'must be called with new'; }
    }
    g?.g;
    function F57() {
        if (!new.target) { throw 'must be called with new'; }
        for (let [v60,v61,v62,v63] of F57) {
        }
    }
    const v65 = a48?.constructor;
    for (let v66 = 0; v66 < 5; v66++) {
        function f67() {
            return f67;
        }
        f67.d = v66;
        f67.d = f67;
    }
    try { new v65(Date, a48); } catch (e) {}
    try {
        this.caller = v1;
    } catch(e69) {
    }
}
F43.d = F43;
new F43(v41, F2, v31, v42);
const v71 = new F43(v31, Date, v41, v31);
const v72 = v71?.constructor;
try { new v72(v71, F43, Date, F43); } catch (e) {}
new F43(v41, v72, v31, v31);
const v77 = 5493 >>> 5493;
Math.atan2(v77, v77);
