class C4 {
    static valueOf(a6, a7) {
        const v12 = [4096n,this,-5,a7];
        const o16 = {
            [-206.79565552697056]: 352693014,
            get g() {
            },
            "g": -206.79565552697056,
        };
        Reflect.construct(v12, v12, a7);
        this | -1553n;
        return a7;
    }
    static 536870889 = 64n;
    static c = 4096n;
    4096 = 64n;
}
function F19(a21) {
    if (!new.target) { throw 'must be called with new'; }
    new.target.d = new.target;
}
const v29 = new C4();
const v30 = new C4();
const v31 = new C4();
class C35 {
    static [-256];
    2 = v31;
    static 206;
    get f() {
        const v37 = [this,C4,this,this];
        [-256,v30];
        [-1553n,-1553n];
        return v37;
    }
    c;
    static #a;
    [v29];
    [v31] = -256;
}
new C35();
new C35();
new C35();
function f43() {
}
class C44 extends f43 {
}
new C44();
new C44();
class C47 {
}
function f52() {
}
class C54 {
    static #d;
    set b(a56) {
        Symbol.search;
    }
    static ["Xkz0W"] = "Xkz0W";
    8;
    d;
}
const o59 = {
};
function F60() {
    if (!new.target) { throw 'must be called with new'; }
}
[-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v63 = [601759695];
const v64 = [1073741824,1073741823,1376142744,1073741825];
function f67(a68, a69, a70, a71) {
    function f73() {
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        arguments.toPrimitive;
    }
    arguments.c = 1163987790;
    -9223372036854775808n & -2147483647n;
    f43();
    const v87 = new Int8Array();
    const v88 = v87.buffer;
    class C91 {
        static {
            for (const v93 of "-4294967295") {
            }
        }
    }
    v88.slice();
    %OptimizeFunctionOnNextCall(f73);
    let v96;
    try { v96 = v64["find"](..."find", "find", ...v63); } catch (e) {}
    v96 <= a70;
    return arguments;
}
for (let v98 = 0; v98 < 10; v98++) {
    v98();
    try { ("function")["-268435456"](); } catch (e) {}
    Array(36862);
}
%OptimizeFunctionOnNextCall(f67);
f67();
