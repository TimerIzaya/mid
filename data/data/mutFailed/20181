const v3 = [-4.0,3.0,2.0,-82.6163857829631,-172.94922207691513,-522450.32653076184,1e-15,-1.7976931348623157e+308,-9.362101340411757,-1000000000000.0];
const v4 = [1000000000000.0,2.220446049250313e-16,569748.8579463358,-830.4800865048092,4.0,9.02176615599707e+307,-3.4796011395579507];
const v5 = v4?.find;
let v6;
try { v6 = new v5(v3); } catch (e) {}
const v7 = [486.5196273669387,330792.43392964057];
v7[-2] = v5;
v7[-2] >>>= -1049;
let v9;
try { v9 = v5(v5, v3, v5); } catch (e) {}
function f10() {
    let v11 = 0;
    while ((() => {
            const v13 = v11 < 10;
            v13 || v13;
            return v13;
        })()) {
        for (let v15 = 0; v15 < 5; v15++) {
            const v16 = [-3.0,4.0,1.7381830731777672e+308,-Infinity,0.053627216611518036];
            v16.toLocaleString(f10, v16).includes(v15);
            for (let [i22, i23] = (() => {
                    10 >>> 10;
                    return [0, 10];
                })();
                i22 < i23;
                i22++) {
            }
        }
        v11++;
    }
    return f10;
}
const v31 = f10();
f10();
const v33 = [v3];
const v34 = [v33,v4,v33,v6,v9];
[v5,128,v6,v34,v34];
const v38 = [15];
const v39 = [-40681,-9223372036854775807,-11,-12,1253158587,-256,-54654,1,-1024];
try { v39.lastIndexOf(v3); } catch (e) {}
[7,5,2,1488003288,-536870912,61948,-1852020241];
function f44() {
    const o47 = {
        129: "m",
        1: "m",
        "f": "m",
    };
    return o47;
}
f44();
const v49 = f44();
Symbol.b = 1.7976931348623157e+308;
class C53 {
}
const v54 = new C53();
function f55(a56, a57) {
    let v58 = a56.BYTES_PER_ELEMENT;
    v58++;
    class C60 {
    }
    const v61 = C60.length;
    v61 !== v61;
    try { ("0x2I").sup(); } catch (e) {}
    class C66 {
    }
    C66.toString = f10;
    try { C66(); } catch (e) {}
    const v68 = C66?.call;
    v68.length;
    try { v68(null); } catch (e) {}
    class C71 extends C66 {
        constructor(a73, a74, a75, a76) {
        }
    }
    C71.e = C71;
    let v77;
    try { v77 = C71(NaN, v54, NaN, v49); } catch (e) {}
    const v78 = a57?.propertyIsEnumerable;
    try { v78(C66); } catch (e) {}
    let v80;
    try { v80 = v78(); } catch (e) {}
    class C81 {
    }
    C81.name = C81;
    try { C81.call(); } catch (e) {}
    const v83 = [1000000000.0,2.2250738585072014e-308,-3.0,-2.2250738585072014e-308,-2.2250738585072014e-308,-6.525028373249204e+307,-7.851646360254072e+307,0.6785915059434757,-0.0];
    try { v83.includes(v80); } catch (e) {}
    class C85 {
    }
    function f86() {
        C85[2008] = v77;
        function f87() {
            return -25996;
        }
        return 10000;
    }
    C85[Symbol.replace] = f86;
    try { C85(); } catch (e) {}
    try { C85.apply(1.7976931348623157e+308, f55); } catch (e) {}
    Symbol.toPrimitive;
    Symbol.b = Symbol;
    C85[Symbol.replace] = v83;
    const v95 = [];
    try { v95.findLast(1.7976931348623157e+308); } catch (e) {}
    function f98(a99, a100) {
        const o101 = {
            "f": a100,
            [a99]: -12,
        };
        return o101;
    }
    try { f98.toString(); } catch (e) {}
    let v103;
    try { v103 = v95.with(v95, v95); } catch (e) {}
    const v105 = new Float64Array(v95, v103);
    const v106 = new Float64Array(v105, a56, v103);
    v106.values().next();
    return v106;
}
f55(Uint16Array, v54);
%OptimizeFunctionOnNextCall(f55);
const o111 = {
    "maxByteLength": 10000,
};
const v113 = new ArrayBuffer(3471, o111);
try { v113.hasOwnProperty(v38); } catch (e) {}
Uint8Array.prototype = Uint8Array;
const v116 = new Uint8Array(v113);
v116.toString = v31;
const v118 = new Date();
v118.getUTCSeconds();
[Uint32Array,Uint32Array,Uint32Array,Uint32Array];
v5[128] %= 128;
try {
    const v124 = new Float64Array(-25996);
    v124["indexOf"](4, 4);
    o111.a = 3471;
} catch(e127) {
    for (const v129 in [-65535,536870889,4096]) {
        Math.log10(v129) ** 1000000000000.0;
    }
}
v116[938] = v116;
