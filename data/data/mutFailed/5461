const v0 = [-307.9086123373082,1.092836701376856e+308];
const v1 = [-779773.1267068366,417434.779400649,-1000000.0,1e-15,-255.1774336863524,4.757570090312431e+307];
const v2 = [-2.2250738585072014e-308,1000000000.0,-1000000000.0,-0.0,5.0,-319.4037218091337,3.0,-1000000000000.0,-7.152948413915037];
class C3 {
    [v1] = v0;
    static {
        this <= v0;
        delete v0?.length;
    }
    toString(a8) {
        v2.length >>= a8;
        super[v1] = v2;
        const o12 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o12);
        return gc;
    }
}
new C3();
new C3();
new C3();
function f17() {
    return C3;
}
new Float32Array(0);
new Uint8ClampedArray(11);
function F26() {
    if (!new.target) { throw 'must be called with new'; }
    this.g = this;
    try {
        this.g = -4294967295;
    } catch(e29) {
    }
}
function F30(a32, a33, a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    const v36 = this.constructor;
    let v37;
    try { v37 = new v36(v36, a35); } catch (e) {}
    const v38 = typeof v37;
    const o41 = {
        get b() {
            return v36;
        },
    };
    v38 === "symbol";
}
new F26();
const v44 = new F26();
new F26();
const v47 = new WeakSet();
function F51(a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
    const v55 = this?.constructor;
    try { new v55(v47); } catch (e) {}
    a53 + a53;
    try {
        this.d = 1000;
    } catch(e58) {
    }
    try {
        this.c = 5;
    } catch(e59) {
    }
    try {
        this.b = undefined;
    } catch(e60) {
    }
}
class C61 {
    static n(a63) {
        let v62 = this;
        --v62;
        v44.h = v47;
        function f66(a67, a68) {
            const o70 = {
                get g() {
                    return a68;
                },
            };
        }
        for (let v71 = 0; v71 < 60; v71++) {
        }
        return -9007199254740992n;
    }
    static #a;
    constructor(a75, a76) {
        try {
            a75.fuck(false, this);
        } catch(e79) {
        }
    }
    static #c = F26;
    #b = F26;
    #f;
    7 = v44;
    h;
}
new C61();
function f81(a82, a83) {
    return f81;
}
class C84 {
}
new C61();
const v92 = [-1.3667473485475811e+308,1.7976931348623157e+308,5.0,-3.583919688173468e+307,-1.5320462342133301e+308,-414873.4859108749,286122.8434793174,866.7395286670867,-1000.0,-742782.9714922046];
function f94(a95, a96, a97, a98) {
    function f99() {
        const o107 = {
            __proto__: v92,
            valueOf(a101, a102) {
                return v92;
            },
            ["-1073741824"](a104, a105, a106) {
            },
        };
        return o107.copyWithin();
    }
    f99();
    %OptimizeFunctionOnNextCall(f99);
    return a95;
}
("29753").replaceAll("29753");
Array(3);
for (let v115 = 0; v115 < 10; v115++) {
    f94(v92, f94, v115, v115);
}
%OptimizeFunctionOnNextCall(f94);
f94("-1073741824", v92, v92, f94);
new Uint8ClampedArray(6);
new Uint32Array([-9007199254740991,536870888,52691,-1,-128,-196204265,0]);
