const v0 = /sx(?!a)?a/gims;
const v1 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
const v2 = /(?:a*)+q(?<a>.)/guds;
function f3(a4) {
    const v5 = v1.constructor;
    v5(v5);
    a4.constructor.$2;
}
f3(v2);
/a\Dt*/gudim;
const v11 = /\xed\xb0\x80/gudmy;
function f12() {
    return v11;
}
const v16 = [-90.8394708277009,NaN,99.0646906105901,Infinity,-1000.0,3.998171473044688e+307,-1000.0,367.26040311732254];
const v20 = new Uint8ClampedArray(303);
Object.defineProperty(v20, 7, { writable: true, configurable: true, enumerable: true, value: Int8Array });
const v21 = [-5.0,-6.354819019947506e+307,-1.7976931348623157e+308,-592.8717627451279,1000000000000.0,473878.42043437134,-Infinity,1000000000000.0,-365488.3801348376,2.220446049250313e-16];
const v22 = [1000000000.0,-1.7976931348623157e+308,0.0,3.0,1.7976931348623157e+308];
class C23 {
    static #p(a25, a26, a27) {
        const o28 = {
            "defineProperty": f3,
            "deleteProperty": f3,
            "getOwnPropertyDescriptor": f12,
            "isExtensible": f3,
            "set": f3,
            "setPrototypeOf": f3,
        };
        new Proxy(this, o28);
        const v31 = v16.length;
        const v33 = new WeakSet();
        try {
            v33.#p(v21, f12, v33);
        } catch(e35) {
        }
        return v31;
    }
    [9n] = v22;
    [v0];
}
Object.defineProperty(v0, "unicode", { writable: true, enumerable: true, get: f3, set: f3 });
const v39 = [v0,delete v16[4],-1n,v0];
Reflect.apply(v21.concat, v2, v39);
function f43(a44) {
    const o47 = {
        ...65536,
        5: 65536,
        __proto__: a44,
        valueOf(a46) {
        },
        "d": 4,
        "g": 65536,
        163: 4,
    };
}
f43();
new C23();
new C23();
const o56 = {
    set b(a52) {
        function f53(a54) {
            return f53;
        }
        class C55 extends f53 {
        }
    },
};
class C58 extends WeakSet {
    static #n(a60) {
        function f61(a62) {
            return a62;
        }
        class C63 extends f61 {
        }
    }
}
new C23();
const v68 = [];
function f69() {
    return v68;
}
const v70 = Uint8ClampedArray >>> Uint8ClampedArray;
v70 >>> v70;
const o80 = {
    n(a75, a76) {
        return a75;
    },
    "arguments": v68,
    "g": 477575671n,
    set e(a78) {
    },
};
