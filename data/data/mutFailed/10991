function f0() {
    const o21 = {
        ["A"](a5, a6) {
            try { a5(..."A", 6.933949564213394e+307, 37835, a6, this); } catch (e) {}
            return a5;
        },
        o(a9) {
            try {
                new BigInt64Array(4046);
                const o16 = {
                    "type": "function",
                };
                const v17 = new Worker(Date, o16);
                v17.getMessage();
                ("A").split();
            } catch(e20) {
            }
            return a9;
        },
    };
    return o21;
}
const v22 = f0();
class C27 {
    constructor(a29, a30, a31, a32) {
        this[Symbol.toPrimitive] = f0;
        this[this] = a32;
    }
}
const v35 = new C27(-1.461653635104799e+308, -1.461653635104799e+308, -1.0, -5.0);
function F36(a38, a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    function f41(a42) {
        const v44 = /Aabc|defmxyz{1,}?qMa{0,1}?/gvdis.exec();
        try { v44.shift(); } catch (e) {}
        return -3.0;
    }
    this.constructor = f41;
    a39.toString = f41;
    const v46 = this.constructor;
    try { new v46(C27, -1.0); } catch (e) {}
    const v48 = a39.constructor;
    try { new v48(a39, v35, this, a38); } catch (e) {}
}
new F36(-3.0, C27);
const v51 = f0();
f0();
/(?:a+)*\x0fEo*/visy;
const v54 = /\p{Script=Greek}/gud;
const v55 = /TE(x)(x)(x)\3*/gumy;
[[v55,"h",[v55,v54,"h",v22],"number",v51],v54,f0,"h","number"];
new Set();
const t52 = [1073741823,64,-192774235];
t52.length = 127;
Float32Array[2] = Float32Array;
Float32Array[1] = -1e-15;
const v69 = new Uint8Array();
class C71 extends Float32Array {
    constructor(a73, a74, a75) {
        function f76() {
            return f0;
        }
        Object.defineProperty(a75, Symbol.iterator, { writable: true, configurable: true, get: f76 });
        super(a75);
    }
}
new C71(1, v69, Float32Array);
