function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -2095556982;
    } catch(e3) {
    }
    try {
        this.g = -2095556982;
    } catch(e4) {
    }
    try {
        this.e = -2095556982;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
let v8;
try { v8 = v6(v6, v7, v7, v7); } catch (e) {}
typeof v8 === "number";
v8.c;
const v13 = new F0();
let v15 = -1;
class C17 {
    static [v15] = v6;
    #n(a19, a20) {
        let v21 = new F0();
        return v21 = v7;
    }
    o(a23, a24, a25) {
        a23 !== this;
        a24.g /= a25;
        v15 = a23;
        return a23;
    }
    static #a;
}
new C17();
new C17();
const v29 = new C17();
function F30(a32, a33, a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v29;
    } catch(e36) {
    }
}
new F30(-61680, v13, v29, v13);
const v38 = new F30(C17, v13, v6, C17);
new F30(v38, v13, v6, v6);
new Uint32Array(4);
new Uint16Array(12);
new Uint8Array(6);
let v49 = 1570;
new Float32Array(v49);
new Float64Array(8);
const v57 = new Uint32Array(26);
const v61 = /[(?:a*)+]/gudisy;
const v62 = /O[\cz]/gvdi;
/xyz{1,32}?S\x60+/vs;
function f64() {
    const v67 = new Uint16Array(209);
    const v69 = [delete v57[v57],Uint16Array,v61,"o"];
    [v69,[v67]];
    Object.defineProperty(v69, "d", { writable: true, configurable: true, enumerable: true, value: f64 });
}
function f72(a73) {
}
function f74(a75, a76) {
}
v61.flags ^= 4;
try {
    v62.exec("valueOf");
} catch(e78) {
}
class C79 extends f64 {
}
for (const v80 in C79) {
}
for (; v49--;) {
}
class C85 {
}
for (let v86 = 0; v86 < 10; v86++) {
    for (let v87 = 0; v87 < 32; v87++) {
    }
}
