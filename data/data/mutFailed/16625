const v0 = [NaN];
const v1 = [-1000000.0,0.05386282426845734,0.16310249706815583,764163.572966273,-652.0922641328899];
const v2 = [NaN,1.0,-3.0,818.371998795915,-1e-15];
function f3(a4) {
    %VerifyType(a4);
    const o6 = {
        "execution": "async",
    };
    return o6;
}
v2.toString = f3;
[v2,v0,v0,v2];
[v1,[v0,v1]];
const v12 = new Float64Array(257);
new Int32Array(2);
new BigUint64Array(1500);
function F19(a21, a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
}
const v25 = new F19(F19, F19, F19, F19);
const v26 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
v26[1] = v26;
class C27 {
}
const v29 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v30 = [601759695];
function f32(a33, a34, a35, a36) {
    a36 & a36;
    function f38() {
        try {
            const v42 = new Uint8Array();
            for (let v43 = 0; v43 < 500; v43++) {
                const o47 = {
                    ...v42,
                    n(a45, a46) {
                        return a45;
                    },
                };
            }
            v26.forEach(a34);
        } catch(e49) {
        }
        const v50 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v52 = Symbol.toPrimitive;
        const v53 = v52.description;
        const v54 = Symbol.for(v53);
        const o104 = {
            toString(a56, a57) {
                const v58 = a36 && a34;
                a56 *= v52;
                function f59() {
                    const o68 = {
                        toString(a64, a65) {
                            try {
                                super.getMinutes();
                            } catch(e67) {
                            }
                            return "object";
                        },
                        "b": "boolean",
                        "g": "object",
                        128: "boolean",
                        "a": 1000000000000.0,
                        "c": "boolean",
                        __proto__: "boolean",
                        "h": 1000000000000.0,
                    };
                    return o68;
                }
                const v69 = f59();
                const v70 = f59();
                const v71 = f59();
                function F72(a74) {
                    if (!new.target) { throw 'must be called with new'; }
                    a74[128] = a74;
                    try {
                        this.f = a74;
                    } catch(e75) {
                    }
                    try {
                    } catch(e76) {
                    }
                    try {
                    } catch(e77) {
                    }
                }
                F72.e = F72;
                const v78 = new F72(v70);
                function f79(a80, a81, a82) {
                    const o89 = {
                        get a() {
                            const o87 = {
                                "execution": "async",
                                "type": a80,
                            };
                            gc(o87);
                        },
                    };
                    o89[2074850330] = o89;
                    return o89;
                }
                const v90 = f79(v71, v71, v69);
                f79(v70, v70, v90);
                function F92(a94, a95, a96) {
                    if (!new.target) { throw 'must be called with new'; }
                    const v97 = this?.constructor;
                    try { new v97(F92, F92, f59); } catch (e) {}
                    a95.g = a95;
                    try {
                        this.d = a96;
                    } catch(e99) {
                    }
                    try {
                    } catch(e100) {
                    }
                }
                const v101 = new F92(v71, v69, v78);
                new F92(v71, v90, v101);
                return v58 <= v50;
            },
        };
        const o171 = {
            "c": -4294967297n,
            [522675525n](a107, a108) {
            },
            n() {
                return this;
            },
            ...-4294967295,
            "maxByteLength": 2,
            "c": v30,
            valueOf(a111, a112) {
                return -4294967295;
            },
            [-4294967297n](a114, a115, a116, a117) {
            },
            "maxByteLength": -4294967295,
            "arguments": v29,
            ...v25,
            "type": C27,
            ..."Vre",
            valueOf(a119, a120) {
                return this;
            },
            "h": v54,
            "c": 2,
            m(a122) {
                a122.f = a122;
                try { a122.next(f38); } catch (e) {}
                a122.c = a122;
                a122.h = a122;
                const o124 = {
                };
                function f125(a126, a127, a128) {
                    return f38;
                }
                try {
                } catch(e129) {
                    const v133 = new Uint8ClampedArray(512);
                    new Uint8ClampedArray(798, ...v133, o124);
                }
                try {
                    const o135 = {
                    };
                } catch(e136) {
                }
                const v138 = Math?.expm1;
                try { new v138(f125); } catch (e) {}
                let v140 = -9007199254740991;
                v140++;
                const v142 = v140 >> v140;
                function f143() {
                    return f143;
                }
                for (let v144 = 0; v144 < 5; v144++) {
                }
                arguments.constructor;
                ([])["concat"]("concat");
                class C150 {
                }
                const v151 = C150.name;
                try { v151.codePointAt(Math); } catch (e) {}
                const v155 = new Int8Array(3938);
                let v156 = 3;
                for (let i = 0; i < 5; i++) {
                    [...v156] = v155;
                }
                const o157 = {
                };
                try {
                    const o158 = {
                    };
                } catch(e159) {
                }
                return v142;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            toString(a161, a162, a163) {
                return v50;
            },
            "type": v53,
            [-4294967297n](a165, a166, a167, a168) {
                eval(a168);
            },
            5: -4294967295,
            6: -268435456,
        };
        o171[5] = o171;
    }
    f38();
    for (let [v174,...v175] of "atan2") {
    }
    let v176 = -4294967297n;
    const v177 = v176--;
    const v178 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
    const v179 = [601759695];
    const v180 = [1073741824,1073741823,1376142744,1073741825];
    for (let v181 = 0; v181 < 5; v181++) {
        function f182() {
            b = v179;
            try {
                v180.forEach(v176);
                const o185 = {
                    "execution": "async",
                };
                return o185;
            } catch(e186) {
            }
            const o202 = {
                "c": v12,
                valueOf(a188, a189) {
                    return v177;
                },
                [v176](a191, a192, a193, a194) {
                    eval(a192);
                },
                "arguments": v178,
                [v2](a198, a199, a200, a201) {
                },
            };
            return v179;
        }
        f182();
        %OptimizeFunctionOnNextCall(f182);
    }
    %OptimizeFunctionOnNextCall(f38);
    return f38;
}
for (let v204 = 0; v204 < 10; v204++) {
    f32(v204, v29, v26, v204);
}
%OptimizeFunctionOnNextCall(f32);
f32(v25, v30, 522675525n, -4294967297n);
