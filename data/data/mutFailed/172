let v0 = Map;
const v1 = new v0();
class C2 {
    set d(a4) {
        a4[this] = v0 >>>= a4;
    }
    #m(a6, a7) {
        const v8 = a7 ^ a6;
        const v9 = v0 * this;
        new BigInt64Array(1433);
        new v0(255);
        new v8(299);
        return v9;
    }
}
const v19 = new C2();
const v20 = new v19();
v20.b = v20;
const v21 = new C2();
v21.d;
function F23(a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    const v27 = this?.constructor;
    try { new v27(a25, v21); } catch (e) {}
    try {
        this.c = v1;
    } catch(e29) {
    }
}
const v30 = new F23(v21, v20);
v30.c;
new F23(v20, v20);
new F23(v19, v21);
let v36 = -319780339n;
v36--;
function f38() {
    return v36;
}
/a|bc*/udisy;
const v40 = /Q?/gud;
v40.dotAll = v40;
/[x\dz]/dms;
Math.tan(-532550611);
[3,9223372036854775807,-4096,1349432497,512,65537,268435440,-2147483647];
[-1,-38052,1,9223372036854775807,-26519,1402061100,-2011084330,-19607,9,13];
const v8 = [268435440,24074,158607334,1749129439,4096];
[];
function f18() {
    const o20 = {
        "c": "pR7SG",
    };
    return o20;
}
class C21 extends f18 {
    #toString(a23) {
    }
}
2759 + 2759;
Float32Array[1] = -1383363179;
const v31 = new Float32Array(2759);
v31[31] = v31;
256 / 256;
new Uint16Array(256);
new v8(360);
class C40 {
}
new Uint16Array();
function f43() {
    [] = [NaN,1.0,1.1875413619536744e+308];
    let v45 = -11;
    --v45;
    const o49 = {
        get b() {
            super[this] = -8.233575780020734;
            return -8.233575780020734;
        },
    };
    const o50 = {
        ...o49,
    };
    return -1383363179;
}
9 >> 9;
try { Float32Array.of(); } catch (e) {}
Float32Array[1] = 9;
const v54 = new Float32Array(0.8616420722833441);
v54.BYTES_PER_ELEMENT;
function f57() {
    class C58 {
        constructor(a60) {
            this.fuck(true);
        }
    }
    return C58;
}
function f65() {
    const o70 = {
        valueOf(a69) {
            return f65;
        },
        __proto__: f65,
        [-52276]: -410.8373818683839,
    };
    return o70;
}
Object.defineProperty(Float64Array, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f57 });
const v72 = [-1000000000.0,1e-15,-9.803124315434264,-366.4099400694298,1000000000000.0,0.7347183727038488,-Infinity,2.0,0.3916117682859279,-461027.2128179858];
function f73() {
    return v72;
}
class C74 extends f73 {
    constructor(a76, a77, a78, a79) {
        super();
        const o81 = {
        };
        gc(o81);
        const t72 = o81.constructor;
        new t72();
        const v87 = ([-21059]).groupToMap;
        v87.d = v87;
        try { new v87(); } catch (e) {}
    }
}
const v89 = new C74();
for (let v90 = 0; v90 < 8; v90++) {
    v89.length = v90;
}
function f91(a92) {
    return Float64Array;
}
Float64Array[(360).toPrimitive] = f91;
