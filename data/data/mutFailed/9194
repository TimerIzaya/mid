function f3(a4) {
    a4 * a4;
    const o12 = {
        [659693320](a7) {
            for (let v9 = 0; v9 < 32; v9++) {
                Math["getUint16" + v9] = v9;
            }
            return this;
        },
        "g": 659693320,
        "a": 14166,
    };
    o12[659693320];
    return o12;
}
const v14 = f3(14166, 14166);
const v15 = f3(-1727796812);
const v16 = f3(14166);
class C17 extends f3 {
    static #f = 659693320;
    #p(a19, a20) {
        try {
            this.g = a20;
        } catch(e21) {
        }
        return a19;
    }
    static #g = 659693320;
    3298762151 = v15;
    #c = f3;
}
try { new C17(); } catch (e) {}
new C17();
new C17();
const v25 = new C17();
class C28 {
    static #m(a30) {
    }
    constructor(a32) {
        const v33 = a32?.call;
        try { new v33(this); } catch (e) {}
        try { new Float32Array(Float32Array, this, this); } catch (e) {}
        const v37 = new Float32Array();
        try { v37.entries(); } catch (e) {}
        const v40 = new Uint16Array();
        const v41 = new Float32Array(v40, -4294967296, a32);
        try { v41.reverse(); } catch (e) {}
    }
}
const v43 = new C28(C28);
Object.defineProperty(v43, Symbol.toPrimitive, { writable: true, enumerable: true, value: f3 });
const v46 = new C28(C28);
v46.d = v46;
const v47 = new C28(-4294967296);
const v48 = [v47,C28];
[257828.6336153492,v47,v43,v47,v48,257828.6336153492,C28,v16];
const v50 = [v47];
function f51() {
    return Symbol;
}
function f52(a53) {
    try {
        v14.c = -578828680;
    } catch(e55) {
    }
}
Object.defineProperty(v50, "constructor", { configurable: true, enumerable: true, get: f51, set: f52 });
try { v50.unshift(v50); } catch (e) {}
class C57 extends C28 {
    [v43];
    #n(a59, a60, a61, a62) {
        function f63() {
            return v50;
        }
    }
    #g;
}
C57.e = C57;
const v64 = new C57();
v64.p = v25;
v64.b = v64;
const v65 = v50.constructor;
const v66 = v65?.__lookupSetter__;
try { new v66(C28); } catch (e) {}
class C68 extends v65 {
}
const v69 = new C68();
Object.defineProperty(v69, 65537, { value: v46 });
try { v64.p(v48); } catch (e) {}
