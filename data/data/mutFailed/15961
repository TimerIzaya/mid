const v1 = new Map();
class C2 {
    static #h;
    static n(a4, a5) {
        with (this) {
            a = Map;
            new Int16Array(305);
            new Date(5);
            v1 instanceof a5;
            new BigInt64Array(2544);
            new Uint8ClampedArray(2393);
            function f19() {
                const o23 = {
                    m(a22) {
                        return a22;
                    },
                    __proto__: 946.0676210033328,
                };
            }
            f19();
            new Float32Array(9);
        }
        return a4;
    }
}
new C2();
const v29 = new C2();
const v30 = new C2();
function f34() {
    return v30;
}
function f35(a36, a37, a38, a39) {
    const o54 = {
        __proto__: a38,
        o(a41, a42, a43, a44) {
            const v47 = /8[\cA]v/uisy;
            const v48 = [3480,1024,-4294967297,-1024,512,65536,29198,-9223372036854775807,-2147483647];
            v48.length = v47;
            v29(v48, v48, v29, [8]);
            const o52 = {
                "execution": "sync",
                "type": "minor",
            };
            gc(o52);
            return a39;
        },
        "h": a39,
        "b": 256,
        ...a38,
    };
    return o54;
}
const v55 = f35(256, 256, v1, 256);
f35(65536, 256, v55, 65536);
f35(65536, -60125, v55, 256);
function F61(a63, a64) {
    if (!new.target) { throw 'must be called with new'; }
    try { new a64(); } catch (e) {}
    function f66(a67, a68, a69, a70) {
        const v71 = /(?:a*)+q(?<a>.)/guds;
        for (let [i82, i83] = (() => {
                65536 < 65536;
                const v76 = [-2,257,-107178159,-35269,9223372036854775807,1203530861,-32678];
                const o77 = {
                };
                const v79 = new Proxy(v76, o77);
                const o80 = {
                    __proto__: v79,
                };
                try { o80.reduceRight(o77, Int32Array, v79, o80); } catch (e) {}
                return [0, 10];
            })();
            i82 < i83;
            i83--) {
            v71.compile(a68);
        }
        return F61;
    }
    for (let v91 = 0; v91 < 5; v91++) {
        f66(a63, f66, v91, a63);
    }
    %OptimizeFunctionOnNextCall(f66);
}
new F61(F61, F61);
