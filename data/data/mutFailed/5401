class C3 {
    constructor(a5, a6) {
        super["asUintN"] = a5;
        const o7 = {
        };
        const v9 = new Proxy(this, o7);
        try { new a5(this, v9, v9, o7, "asUintN"); } catch (e) {}
        this.e;
    }
    static {
        let v13;
        try { v13 = this(this, -5.928910853858341, this, "asUintN", this); } catch (e) {}
        function f14() {
            return v13;
        }
        super.b ||= v13;
    }
}
const v15 = new C3(-5.928910853858341, C3);
new C3(v15, -13);
const t20 = -5.928910853858341;
const v17 = new t20(-13, C3);
const v18 = /\xf0\x9f\x92\xa9/gudimsy;
const v19 = /(xyz{1,}(?:a?)?)/gvdimsy;
const v20 = /(ab|c)/gvi;
function f21(a22, a23) {
    const o30 = {
        "a": -5.928910853858341,
        "f": -5.928910853858341,
        [a22]: v20,
        [a23]: a23,
        p(a25, a26, a27, a28) {
            super[a23];
            return "asUintN";
        },
        ...v18,
        "e": v18,
        "b": "asUintN",
        "c": -5.928910853858341,
        "d": a23,
        ...v18,
    };
    return o30;
}
f21(C3, v15);
f21(v17, v20);
f21(v17, v19);
class C37 {
    static #m(a39, a40) {
        return a40;
        ("QQcMj").normalize("NFKD");
        return a39?.[179];
    }
    ["valueOf"] = "valueOf";
    b;
    13;
}
C37.name = C37;
const v45 = new C37();
const v46 = new C37();
const v47 = new C37();
v47[13] = v47;
const v48 = [0.602038268284836,-1.7976931348623157e+308,-4.211494269917182,-939259.7989376923,0.02623941368615268];
const v49 = [2.220446049250313e-16,-2.220446049250313e-16,-1000.0];
try { v49.entries(); } catch (e) {}
const v51 = [-1000000000.0,4.0,-9.792130726362629];
function F52(a54, a55, a56, a57) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.valueOf(); } catch (e) {}
    try { a54.toString(); } catch (e) {}
    a57[1];
    try {
        this.b = v46;
    } catch(e61) {
    }
    try {
        this.h = a56;
    } catch(e62) {
    }
    try {
        this.c = v48;
    } catch(e63) {
    }
}
F52.e = F52;
new F52(v51, v49, -1.7560623034267127e+308, v51);
const v65 = new F52(v48, v49, -1.7560623034267127e+308, v46);
v65.e = v65;
new F52(v48, v51, v45, -1.7560623034267127e+308);
const v68 = new BigUint64Array();
function F69() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        let v71 = 0;
        let v72 = 0;
        while (0 - 0, v72 < 0) {
            for (let v76 = 0; v76 < 5; v76++) {
            }
            v72++;
        }
        do {
            try { v68.entries(); } catch (e) {}
            const v80 = v71++;
            v80 >>> v80;
        } while (v71 < 5)
    } catch(e84) {
    }
}
try { new F69(); } catch (e) {}
new F69();
