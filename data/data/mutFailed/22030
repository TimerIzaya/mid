function f0() {
}
const v1 = [0.413357052092054,1000000000000.0,5.593960674012514,-1000000000.0,548.2992629648384];
[0.2736186104100181,1.579367421344791e+308,2.8969611688056247,3.0,1e-15,5.0,-1e-15,0.6729329582500074];
[7.156083538448239e+307];
try { v1.map(v1); } catch (e) {}
new BigInt64Array(4096);
const v9 = 255 + 255;
255 ^ 255;
const v12 = new v9(255);
v12[83];
v12[32] = v12;
try { Uint16Array(4096, 255, Uint16Array); } catch (e) {}
const v17 = new Uint16Array(4);
let v18;
try { v18 = v17.find(f0); } catch (e) {}
let v19 = -65535n;
const v20 = v19++;
127n >= 127n;
const v23 = 127n / v20;
v23 + v23;
const v26 = [-268435456,2,9007199254740992,0];
let v27;
try { v27 = v26.copyWithin(f0, Uint16Array); } catch (e) {}
v27[0] = v27;
const v28 = [2147483649,1024,-128,-256];
try { v28.map(f0); } catch (e) {}
v28[2] = v28;
const v31 = v28["join"](v26);
const v32 = (1024n)?.italics;
try { new v32(); } catch (e) {}
try { v31.strike(); } catch (e) {}
try { v18.split(v31, 4096); } catch (e) {}
