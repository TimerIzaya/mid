const v0 = [];
class C1 {
    static #valueOf() {
        super[v0];
        try { this["n"](); } catch (e) {}
        [686651247,9007199254740992,8,-1,3,1535580468];
        [-26707758,646879727,10,3,1073741825,-4263,4294967297,1845684307];
        [-4294967296,255,-31449,257,-9007199254740992,536870912,-929628197];
        return v0;
    }
    2;
    static b = v0;
    static [v0];
}
let v9 = new C1();
const v10 = new v9();
const v11 = new C1();
class C12 {
    toString(a14) {
        super[this];
    }
    static 10;
    static #m(a17) {
    }
    static #e = v9;
    constructor(a19) {
        a19[9] = this;
        for (const v20 of v0) {
            this[1];
        }
        const v23 = [];
        function f24(a25, a26) {
            function f28(a29) {
                let {"b":v30,"f":v31,"g":v32,...v33} = Reflect;
            }
            this.onmessage = f28;
            try { a19(v23, v23, v11, a19); } catch (e) {}
        }
        ["function","function"];
        const o38 = {
            "arguments": v0,
            "type": "function",
        };
        new Worker(f24, o38);
        Reflect.construct(C1, v23, Reflect);
    }
    static b;
    f;
}
new C12(C1);
const v43 = delete v11[v10];
v9 = v9;
try {
    new C1();
} catch(e45) {
}
new C12(v10);
new C12(v9);
let v49 = delete C1[[9007199254740990,-1,-2098327018,4294967295,256,1876062313,63826,-256]];
v49 = v43;
try {
    new C12("H2gZ");
} catch(e52) {
}
[-4096,127,11,1073741825,65535,255];
[1488951875,1881380322,-2060,-28337,-11077,1112498330,1073741824,12,-41734,53951];
Promise.race();
function F57(a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
    const v61 = this.constructor;
    try { new v61(); } catch (e) {}
    try { this.constructor(); } catch (e) {}
}
new F57();
