const v2 = new Int8Array(1000);
new Float64Array(128);
let v6 = 10;
const v7 = v6++;
v7 - v7;
v6++;
function f11(a12) {
    class C15 {
        static #p(a17, a18) {
        }
        toString(a20, a21, a22, a23) {
            eval("B");
        }
    }
    const v30 = new C15();
    function f31() {
        const v34 = ("unscopables")[Symbol.search];
        new v34(-1073741824, -268435456, -1073741824, -1073741824, ...v34);
        return v30;
    }
    return Int8Array;
}
Uint8Array[Symbol.toPrimitive] = f11;
Uint8Array.length = Uint8Array;
new Uint8Array(v6);
let v42 = new WeakSet();
let v43;
try { v43 = v42.delete(WeakSet); } catch (e) {}
!v43;
const v45 = [-1000000.0,-3.1923473210656557,-1.721355656202141e+308,4.0,0.3955838142797843,-3.0,1.1463753586867827e+308];
function f46() {
    function f47(a48, a49) {
        let v52 = -869521941;
        -9 && a49;
        v52++;
        const v55 = Math.floor(v52);
        v42++;
        v42 || a49;
        return v55;
    }
    return f47;
}
Object.defineProperty(v45, "valueOf", { get: f46 });
v45[4] = v45;
const v58 = v45[4];
v58[Symbol.toPrimitive] = Symbol;
function f61(a62, a63, a64, a65) {
    function f66() {
        Math.expm1();
        return f61;
    }
    f66();
    eval();
    %OptimizeFunctionOnNextCall(f66);
    return f61;
}
!(v58 == v58);
function f74(a75) {
    const o76 = {
    };
    o76[213] = v45;
    const v77 = o76[213];
    try { v77.reduce(o76); } catch (e) {}
    return v77;
}
f74.arguments = f74;
let v79;
try { v79 = new f74(f74); } catch (e) {}
v79.valueOf = f11;
try { v79.find(v2); } catch (e) {}
%PrepareFunctionForOptimization(f74);
const v81 = f74(v45);
v81[2];
try { v81.toLocaleString(); } catch (e) {}
let v84;
try { v84 = v81.sort(f74); } catch (e) {}
function f85(a86, a87) {
    const v88 = [Infinity,-1.0,334.9707523876036,1.7976931348623157e+308,-Infinity,9.222971090967075,5.837116397818294,-1.9364306250449163e+307];
    const v89 = [-686672.7285304164,-9.917362466302309e+307,2.220446049250313e-16,5.0,-795.7616940433296,0.07678289127045357,-2.2250738585072014e-308,-1.1183285484106199e+308];
    function f90(a91) {
        const o92 = {
            268435456: v88,
        };
        function f93(a94, a95, a96) {
            this[a91] += a91;
            return this;
        }
        const v100 = [f90,v89,a91];
        const o101 = {
            "arguments": v100,
            "type": "function",
        };
        new Worker(f93, o101);
        return o92;
    }
    return v89;
}
v84[Symbol.toPrimitive] = f85;
v84[6];
%OptimizeFunctionOnNextCall(f74);
function f106() {
    return f106;
}
function f107() {
    return f106 == f107;
}
const v109 = f74(v45);
function f110(a111, a112) {
    Symbol || f61;
    class C114 {
    }
    return a112;
}
v109.toString = f110;
try { v109.join(Uint8Array); } catch (e) {}
try { v109.find(1000); } catch (e) {}
let v117;
try { v117 = v109.lastIndexOf(1000); } catch (e) {}
v117 % v117;
v117--;
