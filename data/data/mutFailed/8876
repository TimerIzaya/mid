const v0 = [];
class C7 {
    #valueOf(a9, a10) {
        const v12 = Symbol.match;
        this[v12] = -5.605869200168339e+307;
        const v13 = super.c;
        let v14;
        try { v14 = v0.includes(v12, v13); } catch (e) {}
        v0[4] = v0;
        v14 ** a9;
        return this;
    }
    4;
    9 = -5.605869200168339e+307;
    [-2];
    c = v0;
}
new C7();
new C7();
new C7();
/dC/vdsy;
/[{12,[\d-z](?!a)?a]/gy;
/(Y(?<=a)?)/vdims;
function f22() {
    const v25 = [8n,8n,8n,8n] > 8n;
    let v26 = 0;
    for (let v27 = 0; v27 < 5; v27++) {
        URIError(36862);
    }
    while (v26 < 10) {
        for (let v33 = 0; v33 < 5; v33++) {
            "n" + v33;
        }
        v26++;
    }
    return v25;
}
%PrepareFunctionForOptimization(f22);
f22(-630012761n, C7, 2071201922n);
%OptimizeFunctionOnNextCall(f22);
f22();
