const v1 = new Set();
const v4 = v1[155];
const v5 = delete v1[65537];
const v6 = v5 / v4;
new Set(v5, v4, v6, v6);
const o10 = {
    "maxByteLength": 2724,
};
const v12 = new SharedArrayBuffer(4, o10);
new Float64Array(v12);
new BigUint64Array(1974);
new BigInt64Array(3);
new Int16Array(3);
new Float64Array(255);
const v27 = BigInt64Array.constructor;
Symbol.isConcatSpreadable.description.fontsize(Uint8Array).trimStart(Array);
const v36 = Array(670);
try { v36.groupToMap(v27); } catch (e) {}
new Int32Array(2659);
new Uint16Array(60);
class C46 {
    toString(a48) {
        const o49 = {
            ..."raw",
        };
        try {
            function f50() {
                return f50;
            }
            function f52() {
                Object.defineProperty(arguments, 13, { enumerable: true, set: f50 });
                return o49;
            }
            f52();
        } catch(e55) {
        }
    }
}
const v56 = new C46();
const v57 = ["raw"];
try {
    v57.length = v56;
} catch(e58) {
}
