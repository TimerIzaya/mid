class C3 {
    a = "with";
    constructor(a5, a6) {
        a5[1] = a5;
        try { a6.match(C3); } catch (e) {}
        const v8 = a6.length;
        -v8;
        try {
            a5.toString = a5;
        } catch(e10) {
        }
        try {
            ("string").padEnd(v8);
        } catch(e13) {
        }
    }
    static h;
    static #d = "HkX";
}
const v14 = new C3("with", "string");
const v15 = new C3("with", "with");
const v16 = new C3("with", "with");
v16.d = v16;
function F17(a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    const v22 = this?.constructor;
    try { new v22(this, a20, a21); } catch (e) {}
    this.c = v14;
    try {
        this.f = a21;
    } catch(e24) {
    }
    try {
        this.h = a21;
    } catch(e25) {
    }
    try {
        this.c = a21;
    } catch(e26) {
    }
}
try { new F17("with", v14, F17); } catch (e) {}
const v28 = new F17("with", "with", "string");
const v29 = new F17(C3, v16, C3);
const v30 = new F17(v15, v16, v14);
try { Math.expm1(C3); } catch (e) {}
const v35 = v15 ** 12;
v35 + v35;
!12;
const v39 = (232718750 | v35) * v35;
v39 >>> v39;
Math.trunc(12);
let v42 = 4294967296;
v42--;
const o53 = {
    get d() {
        try { this.propertyIsEnumerable(this); } catch (e) {}
        this[0] /= v42;
        let v48 = -908890636;
        const v49 = --v48;
        -v49;
        return Math.log(this & v49);
    },
};
for (let i = 0; i < 10; i++) {
    const v54 = o53.d;
    v54 >>> v54;
}
const v57 = new WeakMap();
function F58(a60, a61, a62, a63) {
    if (!new.target) { throw 'must be called with new'; }
    const v64 = this?.constructor;
    try { new v64(v15, a60, this, v15); } catch (e) {}
    a61.length;
    try {
        this.h = a62;
    } catch(e67) {
    }
    try {
        this.d = a61;
    } catch(e68) {
    }
}
const v69 = new F58(v57, v28, "HkX", "string");
new F58(v69, v29, "with", "string");
const v71 = new F58(v16, v30, "string", "string");
v71.h = v71;
const v72 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
const v73 = [3,-6,7268,-554513674,5,4294967295,861325878,17152,2147483647,5];
const v74 = [256,64];
function f78(a79, a80, a81) {
    try { a80.toLocaleString(); } catch (e) {}
    const o93 = {
        ..."-669555958",
        "e": v74,
        "c": v72,
        __proto__: a81,
        toString(a84, a85, a86, a87) {
            a81 instanceof a84;
            try { a87.trimEnd(); } catch (e) {}
            return "-1024";
        },
    };
    return a80;
}
f78(v73, v73, "848379313")[7];
const v96 = f78(v73, v72, "UZ");
f78(v73, v96, v96);
const v99 = new WeakMap();
1e-15 % 1e-15;
-1.5678520341586263e+308 * -1.5678520341586263e+308;
-2147483649 === -2147483649;
let v108 = -14540;
v108--;
const v111 = new Date();
v111.description = v99;
-4096;
-"UZ";
1073741824 - 1459564924;
BigInt64Array.prototype = BigInt64Array;
try { new BigInt64Array(4096, Date, "UZ"); } catch (e) {}
const v119 = new BigInt64Array(1073741824, BigInt64Array);
[-0.0,-2.0,-1e-15,2.0,-Infinity,2.220446049250313e-16];
const v121 = [873.3236504624783,-5.059538800838508];
try { v121.toLocaleString(); } catch (e) {}
v121[1] = v121;
v119["lastIndexOf"](4096, "lastIndexOf", "lastIndexOf");
const v126 = Symbol.toPrimitive;
Symbol.for(v126.description);
const v131 = v111.description;
try { v131.has("848379313"); } catch (e) {}
Symbol.for(Symbol.for(v131).description);
("UZ")[v126];
