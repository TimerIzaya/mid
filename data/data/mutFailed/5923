new Boolean(4);
for (const v4 of 4) {
    v4[Symbol.asyncIterator] = 4;
}
~2828;
Uint32Array.length;
const v10 = new Uint32Array(2828, Boolean);
try { v10.reverse(); } catch (e) {}
new Int8Array(2);
const v17 = [[],Boolean];
const o19 = {
};
new Proxy(Int8Array, o19);
const o22 = {
    "apply": Boolean,
    "call": Boolean,
    "construct": Boolean,
    "defineProperty": Boolean,
    "deleteProperty": Boolean,
    "get": Boolean,
    "getOwnPropertyDescriptor": Boolean,
    "getPrototypeOf": Boolean,
    "has": Boolean,
    "ownKeys": Boolean,
    "preventExtensions": Boolean,
    "set": Boolean,
    "setPrototypeOf": Boolean,
};
new Proxy(o19, o22);
new Int8Array(v17);
for (let i28 = 0, i29 = 10; i28 < i29; i28++, i29--) {
    const o40 = {
        "execution": "sync",
        "type": "major",
    };
    gc(o40);
}
