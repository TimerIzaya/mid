class C3 {
    toString(a5) {
        class C6 {
            #d;
            static 25;
        }
        new C6();
        const v8 = new C6();
        new C6();
        return v8;
    }
    #e;
    e = "7wgVv";
    #h;
    static #a;
}
const v10 = new C3();
const v11 = new C3();
const v12 = new C3();
const t19 = "7wgVv";
t19["toString"] **= "p";
function f13() {
    return "7wgVv";
}
function F14(a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a17;
    } catch(e18) {
    }
}
const v19 = new F14(C3, v11);
new F14(v10, v19);
new F14(v12, "toString");
function f22(a23, a24, a25) {
    const o26 = {
        6: a23,
        ...v11,
        "c": "p",
        5: a25,
        "e": v12,
        9: C3,
        [v12]: v11,
        "a": a25,
        ...a24,
        "d": "p",
        "g": v12,
        "f": C3,
        "h": v12,
        [a25]: "p",
    };
    return o26;
}
const v27 = f22("p", C3, "toString");
f22("p", v12, "toString");
f22("p", v10, "toString");
class C30 extends f22 {
    static #g;
    constructor(a32, a33) {
        super(a32, v10, "7wgVv");
        %VerifyType(this);
        this.e;
        [1000,512,-9007199254740991,-34940,268435456,-1,-983638451,-32555,1980491765,-1];
        [-13,-65536,54863,2147483647,10000,1370204959,6,8];
        [9007199254740991,2147483647,9,-18657,4,-7,1024,10,-998256264];
    }
    static #valueOf(a39, a40) {
        const v41 = "p" - this;
        [this,"toString","7wgVv",v41];
        [["p","toString",v27,v41,v41],this,v11,v11,v12];
        return FinalizationRegistry;
    }
}
const v46 = new C30(C3, v11);
new C30(v46, v12);
new C30(v10, v46);
const v50 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
for (let v51 = 0; v51 < 25; v51++) {
    v50["p" + v51] = v51;
}
const v55 = [601759695];
const v56 = [1073741824,1073741823,1376142744,1073741825];
function f57(a58, a59, a60, a61) {
    function f62() {
        let v65 = Float64Array;
        v65 = a59;
        v50.length;
        try {
            v56.forEach();
        } catch(e68) {
        }
        Symbol.toPrimitive;
        const o75 = {
            toString(a72, a73) {
                return a61 && v65;
            },
        };
        const o76 = {
        };
        new Proxy(Uint8ClampedArray, o76);
        o75[9] = a58;
        const o84 = {
            [-4294967297n](a80, a81, a82, a83) {
            },
            ...v55,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            5: -4294967295,
        };
        return f57;
    }
    f62();
    %OptimizeFunctionOnNextCall(f62);
    return -4294967297n;
}
for (let v86 = 0; v86 < 10; v86++) {
    f57();
}
%OptimizeFunctionOnNextCall(f57);
f57(v55, v55, v50, v50);
