function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    let v4 = this;
    a5 = -1186335189n;
    v4 <<= v4;
    v4.b >>>= v4;
    const v6 = new F3(a5);
    `o${-1186335189n}string${v6}with${v6}VHmW`;
    try {
        v4.h = a5;
    } catch(e8) {
    }
}
const v9 = new F3(-2n);
const v10 = new F3(12n);
const v11 = new F3(-2n);
class C12 extends F3 {
    constructor(a14, a15, a16, a17) {
        super(a15);
        [7.300664336256275e+307,Infinity,1000.0,-1e-15,-9.126862976973198,1000.0,1000000000.0,7.667998640394959e+306];
        [7.564956221096269e+307,0.7115784815681421,-1.2642711585801596,-1000000.0,0.46389676896406207,-829.9846278849639,1000000.0,-834386.3895157413,-447.67933839383693];
        [9.72086668411256e+307,-171286.45328314125,-0.07778083524432766,3.979791068320185e+307,2.2250738585072014e-308,533854.464855802,1e-15];
        Reflect.construct(a14, [Reflect,v9,v11,v9,a14], a14);
    }
    [v10];
    #b = F3;
    [-1186335189n] = v11;
    [v11];
}
const v24 = new C12(v11, -1186335189n, v9, v11);
let v25 = new C12(-1186335189n, -1186335189n, v24, v10);
const v26 = new C12(v11, -2n, v25, v24);
function f27() {
    return v26;
}
const v28 = [v24,-1186335189n,v9,v9];
const v29 = [v28,v28,v28,v25,-1186335189n];
[C12,12n,-2n,v10];
const v32 = new Int16Array();
v25 = v29;
new f27();
let [] = v32;
function f34() {
    return v9;
}
const v37 = new Int8Array(1);
v32[v37] = v37;
