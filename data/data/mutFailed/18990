const v2 = new BigInt64Array(127);
const v5 = new v2(1000);
220 >>> 220;
const v9 = new BigInt64Array(220);
const v11 = [-2142223495];
function f12(a13, a14) {
    let v16 = -2.0;
    v16++;
    Math.log1p(v16);
    return a14;
}
v11.toString = f12;
let v19;
try { v19 = v11.toString(); } catch (e) {}
const v20 = [2147483647,10000,-9223372036854775808,27646,-6,6514];
const v21 = v20?.filter;
try { new v21(v5); } catch (e) {}
[4,7,182382732,24972,11,-9343,-36358];
class C24 {
    static #b = v20;
    constructor(a26, a27, a28) {
        a26++;
        try { new a28(C24, C24, C24); } catch (e) {}
        try { v11.reduce(a28); } catch (e) {}
        try {
            a28.#b;
        } catch(e33) {
            e33.message;
        }
        a27[this] = a26;
        try {
            a28.#b %= BigUint64Array;
        } catch(e35) {
            e35.message = e35;
        }
    }
    static 4211059040;
    static #a = v11;
}
try { new C24(v11, BigInt64Array, BigInt64Array); } catch (e) {}
new C24(1000, C24, BigInt64Array);
new C24(127, BigInt64Array, 220);
const v39 = new C24(220, 1000, 127);
v39.constructor = f12;
const v40 = v39?.constructor;
try { new v40(v9, BigUint64Array, BigUint64Array); } catch (e) {}
const v43 = [4294967297,4294967297];
v43[4042] = v19;
v43[65537] = 4294967297;
const v44 = f12.fill(v43);
try { v44.map(BigInt64Array); } catch (e) {}
