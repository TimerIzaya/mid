class C3 {
    constructor(a5, a6) {
        this[256] = this;
        class C7 {
            constructor(a9) {
                const v11 = this.constructor.bind();
                try { new v11(); } catch (e) {}
            }
        }
        class C13 extends C7 {
        }
        a5[1];
        for (let v15 = 0; v15 < 32; v15++) {
            [-1.7976931348623157e+308,-613.7550152041111] ^ -1264607604;
            return a6;
            const v21 = [0.8307152163010869,1.0,0.0];
            v21.length = 1494907924;
            v21 instanceof -24894;
            %VerifyType(C3);
            try { ("p").strike(); } catch (e) {}
            const v25 = "p" + v15;
            try { v25.codePointAt("p"); } catch (e) {}
            this[v25] = v15;
        }
    }
    ["-2"] = "-2";
    #f;
    e = "boolean";
    static a = "-2";
    #e;
    static 256;
    [256] = C3;
}
const v27 = new C3("-2", "boolean");
const v28 = new C3(v27, C3);
const v29 = new C3(C3, C3);
const v30 = [v28,"-2",v29,v27,"-2"];
[v30,C3,v29,v30,"-2"];
const v32 = [v27];
new Set();
const v38 = [-1.7976931348623157e+308,1000000000.0];
const v39 = [4.0902151973711183e+307,-758.964951148866,1e-15,-5.261122784521454];
const v40 = [-2.2250738585072014e-308,-3.0,1000000000.0,-6.987156890700151,4.0];
try { v40.reduce(8n); } catch (e) {}
function f42() {
}
try { new f42(); } catch (e) {}
let v45;
try { v45 = ("EV").indexOf(C3); } catch (e) {}
for (let v46 = 0; v46 < 5; v46++) {
    function f47() {
        const v48 = [-Infinity,1.7976931348623157e+308,1.0,1.7976931348623157e+308,-1.0,Infinity];
        let v49 = -65536;
        v49--;
        v48.length >>>= v49;
        return f47;
    }
    f47();
    %OptimizeFunctionOnNextCall(f47);
}
class C53 {
}
function f55(a56, a57, a58, a59) {
    const o63 = {
        toString(a61, a62) {
        },
    };
}
const v64 = v45(Date);
try { v64.toString(); } catch (e) {}
C53.prototype = C53;
const v66 = new C53();
const v67 = v66?.__lookupGetter__;
try { new v67(-65535n); } catch (e) {}
function f69(a70, a71) {
    const o86 = {
        "a": v39,
        "d": a71,
        "type": "EV",
        p(a73, a74) {
        },
        get c() {
            a71[1];
            a70[v39];
            const o78 = {
            };
            ("undefined").localeCompare("undefined", o78);
            return v40;
        },
        "c": v32,
        valueOf(a84, a85) {
            return a70;
        },
        "defineProperty": v67,
    };
    const v87 = /\xf0\x9f\x92\xa9a*/us;
    try { v87.exec(o86); } catch (e) {}
    1 >>> 1;
    function F92(a94, a95, a96, a97) {
        if (!new.target) { throw 'must be called with new'; }
        class C98 {
            constructor(a100, a101, a102, a103) {
                for (const v104 in a101) {
                }
            }
        }
        const v105 = this?.constructor;
        try { new v105(a94, a94, a96, a96); } catch (e) {}
        ~a97;
    }
    try { F92(a71, a71, o86, "boolean"); } catch (e) {}
    const v109 = new F92(v87, 1, -1263139894, F92);
    v109.length;
    return C3;
}
f69(v38, v38);
const v112 = f69(v40, v40);
class C114 extends f69 {
    static #f = v112;
}
C114.name;
const v117 = new Uint8Array();
const v118 = v117?.findLast;
try { new v118(v117); } catch (e) {}
function f120(a121, a122, a123, a124) {
    a121.arguments = a121;
    a122--;
    const o126 = {
    };
    function f127() {
    }
    const o139 = {
        n(a129, a130) {
            function f132(a133, a134, a135, a136) {
                Object.defineProperty(arguments, 4, { writable: true, enumerable: true, value: -9524 });
                return a134;
            }
            f132();
        },
    };
}
f120.caller = f120;
for (let v140 = 0; v140 < 625; v140++) {
    f120(f120, v140, v117, v140);
}
