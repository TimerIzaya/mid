const t0 = "N4tyP";
t0[2] = "N4tyP";
const v7 = 13 === 13;
const t2 = "ges";
delete t2["ges"];
throw v7;
function F10(a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a12;
    } catch(e14) {
    }
}
new F10("e7gaY", 255);
new F10("ges", 255);
new F10("N4tyP", 13);
new Int32Array(13);
try { new Int16Array("e7gaY", 13, 13); } catch (e) {}
new Int16Array(74);
3 / 3;
new Uint32Array(3);
const v28 = Int32Array.bind(Int32Array, Int32Array, Int32Array, Int32Array, Int32Array);
let v29;
try { v29 = v28(); } catch (e) {}
const v32 = Symbol.toPrimitive;
const o34 = {
    [v32]() {
        let v33 = this;
        v33 >>= v29;
        return 1112306884;
    },
};
("-1073741824").localeCompare(v28);
