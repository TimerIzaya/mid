let v3 = 1000000000000.0;
v3--;
1.0 + 1.0;
const v8 = [-65537,14991,-8003,-2,9,11267];
const v9 = [4294967295,-2147483648,16,-2,-4,-46707];
const v10 = [-4294967297,-1073741824,4294967295,4];
function f11(a12, a13) {
    const o23 = {
        [Infinity]: a12,
        [1.0](a15, a16) {
            try { new v8(a15); } catch (e) {}
            v9["values"]();
            new Array(85);
            return this;
        },
    };
    o23[1];
    return o23;
}
const v25 = f11(v9, Infinity);
v25[1] = v25;
const v26 = f11(v8, v3);
f11(v9, v3);
246 >>> 246;
const v32 = new Float32Array();
function F33() {
    if (!new.target) { throw 'must be called with new'; }
}
const v35 = new F33();
const v36 = v35?.constructor;
try { new v36(); } catch (e) {}
function F38(a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
    const v42 = this?.__defineSetter__;
    try { new v42(Infinity, v10); } catch (e) {}
}
const v44 = new Infinity();
v44.h = v44;
const v47 = [591114.0785999324,591114.0785999324];
4 % 4;
function F50() {
    if (!new.target) { throw 'must be called with new'; }
    const v52 = this.toString(this, F50, F50, this);
    let v53;
    try { v53 = v52.blink(v52, v52, F50, Float32Array); } catch (e) {}
    try { v53.strike(); } catch (e) {}
    9223372036854775807 === 9223372036854775807;
    v53.toString(F50, 9223372036854775807).replaceAll(v35, -37859n)[2];
    const v62 = new Uint32Array(Uint32Array, Uint32Array, 4);
    const v65 = new Set(v47);
    v65.size;
    const v67 = v65.add;
    try { new v67(v62); } catch (e) {}
    const v70 = v65["delete"](839612.5677247904);
    v70 && v70;
    const v72 = v70 && v70;
    v72 || v72;
    const v74 = v70 || v70;
    v74 || v74;
    v74 && v74;
    !(v74 || v74);
    const v79 = v74 && v74;
    !(v79 || v79);
    const o83 = {
    };
    o83.b = o83;
    o83.e = 19793;
    let v85;
    try { v85 = new Array(v32); } catch (e) {}
    let v86;
    try { v86 = new Array(9223372036854775807); } catch (e) {}
    try { ("getPrototypeOf").codePointAt(v85); } catch (e) {}
    let v89;
    try { v89 = ("getPrototypeOf").blink(); } catch (e) {}
    v89[25];
    const v91 = v89[28];
    try { v91.codePointAt(v65); } catch (e) {}
    v91.strike();
    const v94 = v89.strike(591114.0785999324);
    try { v94.blink(); } catch (e) {}
    try { v86.charAt(128); } catch (e) {}
    let v97;
    try { v97 = v94.replace(19793, v44); } catch (e) {}
    try { v97.sup(); } catch (e) {}
    let v99;
    try { v99 = v97.codePointAt(v97); } catch (e) {}
    9223372036854775807 === v99;
    v97[11] = v97;
    class C102 {
        ["getPrototypeOf"] = -1.7976931348623157e+308;
    }
    try { new C102(); } catch (e) {}
    try { C102(); } catch (e) {}
    class C105 extends C102 {
        ["getPrototypeOf"] = v26;
    }
    let v106;
    try { v106 = new C105(); } catch (e) {}
    const v107 = v106?.constructor;
    try { new v107(); } catch (e) {}
    let v109;
    try { v109 = new C105(); } catch (e) {}
    const v110 = v109?.getPrototypeOf;
    try { new v110(v110, v65, v47, v70, v74); } catch (e) {}
    let v112;
    try { v112 = new C105(); } catch (e) {}
    const v113 = v112?.getPrototypeOf;
    try { new v113(); } catch (e) {}
    const v115 = v112?.getPrototypeOf;
    v115.name;
    let v117;
    try { v117 = new v115(); } catch (e) {}
    v117.f = v117;
    const v118 = v112?.getPrototypeOf;
    let v119;
    try { v119 = new v118(); } catch (e) {}
    const v120 = v119?.constructor;
    try { new v120(); } catch (e) {}
    v119.getPrototypeOf;
    new C105();
    const v124 = Array(19793);
    v124.f = v124;
    for (const v125 of v124) {
    }
}
F50.d = F50;
new F50();
new F50();
