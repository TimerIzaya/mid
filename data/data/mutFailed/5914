const v0 = [-362465.14770943334,7.595595746025263e+307,5.355957382427919,Infinity,4.0,-1.5411789706736758e+308];
[Infinity,4.263648628611339,1000.0,-2.220446049250313e-16,292.89935911936186,-286.75807668401785,-1.0450973169909759,0.0,-923684.1650175309];
[-1.7976931348623157e+308,-2.220446049250313e-16,-27989.291610200075];
const t1 = [-65317,-58155,536870889,976,536870889];
t1[2] = 13;
const v5 = new v0();
try { v5.__defineSetter__(v0, v5, v5, v0, v0); } catch (e) {}
8 === 8;
new Int8Array(8);
const v13 = new BigInt64Array(255);
eval("");
class C18 {
    4294967296 = 996195971n;
}
try { v13.entries(); } catch (e) {}
new Uint32Array(64);
class C24 {
    static {
        try { new this(); } catch (e) {}
        try { Symbol.bind(Symbol); } catch (e) {}
        const v30 = this[Symbol.hasInstance];
        v30.c = v30;
    }
    #p() {
        let v32;
        try { v32 = this.p(undefined, this, this, this, this); } catch (e) {}
        try {
            v32.#p(undefined, v32, v32, undefined);
        } catch(e34) {
        }
        return undefined;
    }
    static #a = undefined;
    c = undefined;
}
try { C24.bind(BigInt64Array); } catch (e) {}
const v36 = new C24();
const v37 = new C24();
const v38 = v37?.constructor;
try { new v38(); } catch (e) {}
const v40 = new C24();
function f41(a42) {
    a42.length;
    const o49 = {
        15: a42,
        toString(a45, a46) {
            super.h = a46;
            try { C24.stringify(a42, a42, this); } catch (e) {}
            try {
                C24.c = v36;
            } catch(e48) {
            }
            return a45;
        },
        2147483647: undefined,
        __proto__: v37,
        "c": a42,
        ...a42,
        "f": a42,
    };
    return o49;
}
const v50 = f41(C24);
v50[2147483647] = v50;
f41(v40)[2147483647];
f41(v50);
const v57 = [0.0,26.917886948179785];
try { v57.map(v13); } catch (e) {}
[4.0,-6.418452896256084,1000000000.0,4.0,-2.220446049250313e-16,-1000000000.0];
[883.1365358956336,-266.1024094651509,-5.0,1.4118854267221805e+308,-786614.3512895996];
v50 > C24 ? v50 : C24;
for (let i64 = 0;
    i64 < 5;
    (() => {
        const v68 = i64++;
        v68 + v68;
    })()) {
    i64++;
    try {
        new f41(v50);
    } catch(e73) {
    }
}
