const v0 = [];
let v1 = 84;
new Int32Array(v1);
let v6 = 65536;
Math.pow(v0, v0);
Math.asin(v0);
Math.sinh(v6);
Math.atan2(v0, v6);
--v6;
v0 & 7;
const v13 = Math.hypot(7);
let v16 = new Uint8Array(0);
v1 = v13;
[v16] = v0;
v0["reduce"](v16, "reduce");
const t14 = "reduce";
t14[3365] = v6;
new Uint8ClampedArray(2466);
[7393,2147483649];
[4294967295,-536870912,-25911,2790,55180,9,61449,536870889];
[-7,-2147483648,-5979,-10,-3259];
function f25(a26, a27, a28, a29) {
    const v32 = new Int32Array(a29, a26, a26);
    v32[0] %= -1073741824;
    return Int32Array;
}
%PrepareFunctionForOptimization(f25);
f25();
%OptimizeFunctionOnNextCall(f25);
f25();
