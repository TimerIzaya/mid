const v5 = new BigInt64Array(16);
new Float32Array(8);
new BigInt64Array(1982);
Uint8Array[1] = v5;
new Uint8Array(Uint8Array, Uint8Array, Uint8Array);
const v16 = ("undefined").localeCompare();
const v17 = [v16,v16,v16];
const v18 = [v16,v16,v16];
const v19 = [v17,v18,v18];
const v20 = new Float64Array(v19, Uint8Array, v19);
let v21;
try { v21 = v20.keys(); } catch (e) {}
const v22 = v21.__lookupSetter__;
let v23;
try { v23 = v22(); } catch (e) {}
let v24 = 128;
v24--;
const v27 = new Int16Array();
v27.keys();
8.423204300745166 - 8.423204300745166;
const v32 = new WeakSet();
function f33(a34, a35, a36, a37) {
    const o38 = {
    };
    return o38;
}
f33();
const v40 = v22();
v40.lastIndexOf = 536870887;
const v41 = v40[268435441];
const v42 = [-14339,735253629,4294967296,3,268435456,3,57019,268435439];
function f43(a44) {
    let v45;
    try { v45 = v21(v32, a44); } catch (e) {}
    function f46(a47, a48, a49, a50) {
    }
    return v45;
}
Object.defineProperty(v42, "toString", { writable: true, configurable: true, value: v40 });
try { v40.lastIndexOf(); } catch (e) {}
const v52 = f33();
let v54;
try { v54 = ("iterator").strike(WeakSet, v41, v17, v52); } catch (e) {}
v54.padStart(v42);
class C56 {
}
let v57;
try { v57 = C56(); } catch (e) {}
C56.prototype;
for (let i62 = 0, i63 = 10;
    (() => {
        i62 < i63;
        class C65 extends Date {
        }
        return v23;
    })();
    i62++) {
}
const v72 = new BigInt64Array(v16);
v72.BYTES_PER_ELEMENT = v57;
