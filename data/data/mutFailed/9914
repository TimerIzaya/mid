class C3 {
    n(a5, a6) {
        this.__proto__;
        super[a6];
        return this;
        let {"a":v9,"b":v10,"length":v11,...v12} = "4096";
        return this;
    }
    static o(a14, a15) {
        const v17 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
        "4096" & "4096";
        function f19(a20, a21, a22) {
            return a21;
        }
        class C23 extends f19 {
        }
        v17.__proto__ = v17;
        for (let v25 = 0; v25 < 5; v25++) {
            const v28 = new BigInt64Array(4046);
            function f29(a30, a31) {
                a30++;
                const v33 = a30++;
                v33 >> v33;
                let o35 = {
                    ...a30,
                };
                [,...o35] = v28;
                return a30;
            }
            f29();
        }
        const t31 = this(11);
        t31[65537] -= 3774;
        for (let [,...v40] of a15) {
            const o41 = {
            };
            try {
                o41.d = this;
            } catch(e42) {
            }
            try {
                const o43 = {
                };
                o43.d = this;
                o43.g = v40;
                const t45 = (2136873598).constructor;
                t45();
                function F47(a49, a50, a51, a52) {
                    if (!new.target) { throw 'must be called with new'; }
                }
            } catch(e53) {
                const v54 = /(?:a*)+q(?<a>.)/guds;
                function f55(a56) {
                    a56.hasIndices = a56;
                    a56?.constructor.lastParen;
                    const o62 = {
                        set b(a60) {
                        },
                        get d() {
                            return this;
                        },
                    };
                    return o62;
                }
                for (let i65 = 0, i66 = 10; i65 < i66; i66--) {
                    for (let v73 = 0; v73 < 50; v73++) {
                        f55(v54);
                    }
                }
            }
            try {
                const o75 = {
                };
                o75.d = this;
                o75.g = v40;
                o75.h = -1000.0;
            } catch(e76) {
            }
            try {
                const o77 = {
                };
                o77.d = this;
                o77.g = v40;
                o77.b = a15;
                class C79 extends SyntaxError {
                }
                const v81 = new Date();
                v81.toLocaleDateString();
            } catch(e83) {
            }
        }
        return a15;
    }
}
new C3();
new C3();
new C3();
[-463689914,-54565];
[-4583,64455,268435440,9007199254740991];
[10000,-3602,536870888,-1,-256,8,257,-555023354,1019996080];
[92477252,-4,-536870912,16080,257];
[-33031,2,268435441,16];
[-4520,-65535,-160397475,10000,16,52412,1];
class C97 {
    static 7;
    static [-1] = "string";
    #p(a99, a100) {
        [-4096];
        [a99,[a99,-4096,a99,a99]];
        const o104 = {
        };
        try {
            o104.g = "object";
        } catch(e105) {
        }
        try {
            const o106 = {
            };
            o106.g = "object";
            o106.d = a100;
        } catch(e107) {
        }
        try {
            const o108 = {
            };
            o108.g = "object";
            o108.d = a100;
            o108.b = "object";
        } catch(e109) {
        }
        try {
            const o110 = {
            };
            o110.g = "object";
            o110.d = a100;
            o110.b = "object";
        } catch(e111) {
        }
        return "object";
    }
    #n(a113) {
        a113 = this;
        a113.e >>>= -35417;
        const o117 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o117);
        return this;
    }
}
new C97();
Array();
Array();
class C126 {
    static 9 = 9.187362692894364;
}
for (const v127 in C126) {
}
class C128 {
    #e;
    static {
        function f130(a131, a132) {
            return Array;
        }
        const o138 = {
            o(a134) {
                const o136 = {
                };
                return gc(this);
            },
        };
        const o140 = {
        };
        const v142 = new Proxy(Uint32Array, o140);
        o138["o"](o138, Uint32Array, "o", "o", v142);
        const v145 = super[this];
        const v147 = [Reflect];
        const o148 = {
            __proto__: Reflect,
            "ignoreCase": v147,
        };
        try { v145.join(-35417, -4096, v145); } catch (e) {}
        const o150 = {
        };
        [/LD/vds,1000.0];
    }
    m(a155, a156) {
        const o157 = {
        };
        const o160 = {
        };
        new C97(o160);
        const v164 = new this();
        return v164;
        const v166 = new Proxy(Uint8Array, o160);
        v166.d = v166;
        new Proxy(this, o157);
        const v170 = a156[2];
        const v171 = [];
        const v172 = [v171,v171,v171];
        const v173 = [v172,v172];
        v173 >= Uint16Array;
        class C178 {
        }
        function f179() {
            class C181 {
            }
            new C181();
            const v183 = new C181();
            [C178,C181];
            [257828.6336153492,v183];
            class C186 extends C97 {
            }
            function f187(a188, a189) {
                return v170;
            }
            f179.toString = f187;
            a156.constructor(Set);
            v173.constructor;
        }
        const v193 = "string" && -4096;
        +a156;
        Math.sqrt(v193);
        a155--;
    }
}
const v199 = new Uint16Array(3225);
for (const v200 of v199) {
    new BigUint64Array(3375);
}
const v206 = new WeakSet();
class C208 extends v206.h {
}
class C209 {
}
function F210(a212, a213) {
    if (!new.target) { throw 'must be called with new'; }
}
for (let v214 = 0; v214 < 32; v214++) {
}
