class C6 {
    #m(a8, a9, a10, a11) {
        a11[Symbol.matchAll];
        return -1435275380n;
    }
    static toString(a16, a17) {
        Promise.race();
        const o24 = {
            "b": 1e-15,
            [3](a23) {
            },
        };
        try {
            const o26 = {
                "f": -1.883023285666516,
            };
            function f27(a28, a29, a30) {
                return f27;
            }
            super.deleteProperty(this);
        } catch(e32) {
            const v33 = [-536870912,-1454443390,-11,536870887];
            let v35;
            try {
            const t0 = 65536n;
            v35 = t0(65536n);
            } catch (e) {}
            v33[65536n] *= v35;
            v33["splice"](-650191005, -650191005, "splice");
        }
        try {
            this.b = -1201719298;
        } catch(e39) {
        }
        return this;
    }
    #h;
    constructor(a41, a42, a43, a44) {
        arguments[0] = arguments;
    }
}
522793381 ** (-1000000.0 | 522793381);
Math.atan2(-0.0, 2.0);
new C6();
const v54 = new C6();
const v55 = new C6();
[255,-15760,16,2,286466625,-4294967295];
let v57 = [-10];
const v58 = [1632718490,-9223372036854775808,7];
class C59 extends C6 {
    [-1201719298];
    static [C6] = v55;
    #e = v58;
    static set a(a61) {
        a61?.[159];
        function F63(a65, a66, a67, a68) {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v69 = new F63(F63, F63, F63, F63);
        for (let v70 = 0; v70 < 25; v70++) {
            v69["p" + v70] = v70;
        }
        v57 |= v57;
        const v78 = (v54 + 5.0) & 5.0;
        +v78;
        Math.pow(v78, -3638);
    }
}
new C59();
new C59();
new C59();
for (let v84 = 0; v84 < 50; v84++) {
}
try {
    139837843 in "deleteProperty";
} catch(e88) {
}
