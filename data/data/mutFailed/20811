const v0 = /{z}/imy;
const v1 = /[\1\2(a(?:\1(b\1\2))\2)\1*]/vs;
const v2 = /(3\u0060)/gvis;
const v3 = [v2,v0,v2,v0];
const v4 = [v1,v2,v0,v0,v2];
[v3];
const v8 = new BigUint64Array(159);
new BigUint64Array(107);
new Uint8ClampedArray(1888);
const v17 = new BigInt64Array(128);
const v19 = new Uint16Array();
const v20 = v17 > v19;
v17[14] = v20;
if (v20) {
    Reflect.construct(BigInt64Array, [107,107,107], BigInt64Array);
} else {
    let v25 = 1055506925;
    Math.trunc(v4);
    v4 | BigUint64Array;
    Math.sqrt(--v25);
    BigUint64Array * v8;
}
