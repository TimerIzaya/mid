const v2 = new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
v2[10000] = this - this;
function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    a11.trimLeft().strike();
    const v15 = this.constructor;
    try { new v15("a"); } catch (e) {}
}
new F9("a", "-2147483648");
new BigUint64Array(2172);
const v21 = [];
function f22() {
    -v21;
    return f22;
}
new Uint32Array(1416);
new Float32Array([-37102.6674218484,-969411.635186719,-1.3592557640113297e+308,0.9054806195219168,1000000000000.0,-0.0,-3.0,-0.0]);
new Date(Date);
new Uint16Array(127);
function f35() {
    function f37() {
        return f37;
    }
    const t23 = 5;
    t23.constructor = f37;
    return f35;
}
const v38 = /(?:a*)+q(?<a>.)/guds;
function f39(a40) {
    const v41 = a40.constructor;
    let v42;
    try { v42 = v41(a40, f35); } catch (e) {}
    const o44 = {
        get d() {
            return this;
        },
    };
    return v42;
}
for (let [i51, i52] = (() => {
        const t0 = /QK/gvdimy;
        t0.__proto__ = length;
        const o50 = {
            2321852491: "object",
        };
        return [0, 10];
    })();
    i51 < i52;
    (() => {
        i52--;
        const v59 = new BigInt64Array(3768);
        function f60(a61, a62) {
            const v63 = a61++;
            v63 >> v63;
            let o65 = {
            };
            [,...o65] = v59;
            return v59;
        }
        f60(BigInt64Array, v59);
    })()) {
    for (let v69 = 0; v69 < 50; v69++) {
        f39(v38);
    }
}
