const v6 = /xyz{1,32}?/gudmy;
const v7 = /x(?:a*)+/uis;
const v8 = /d[\1111]4p/dmsy;
function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = "-5932";
    try {
        this.c = a11;
    } catch(e13) {
    }
    try {
        this.f = v6;
        const o21 = {
            m(a15, a16, a17, a18) {
                ("ignoreCase").normalize();
                return this;
            },
        };
    } catch(e22) {
    }
    try {
        this.g = a11;
    } catch(e23) {
    }
}
new F9(v7, v7);
const v25 = new F9(-9223372036854775808, v6);
const v26 = new F9(v25, v8);
function f27(a28, a29, a30, a31) {
    const o36 = {
        p(a34, a35) {
        },
        10: 1073741824,
    };
    const t34 = 1073741824;
    const v40 = new t34(4046);
    function f41(a42, a43) {
        a42++;
        const v45 = a42++;
        v45 >> v45;
        let o47 = {
            "d": a42,
            ..."1024",
        };
        [,...o47] = v40;
    }
    f41();
    for (const v49 in "1024") {
    }
}
new Int32Array(9);
f27.reverse();
class C54 {
}
for (let v55 = 0; v55 < 5; v55++) {
    f27();
}
%OptimizeFunctionOnNextCall(f27);
v26();
