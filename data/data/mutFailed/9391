const v4 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
class C5 {
    constructor(a7, a8, a9, a10) {
        const v11 = this.constructor;
        try { new v11(); } catch (e) {}
        for (let v13 = 0; v13 < 5; v13++) {
            v4[v13] = a10;
        }
    }
}
const v14 = new C5(v4, Uint32Array, Uint32Array, Uint32Array);
let v15 = -505707683;
class C18 {
    static set g(a20) {
        const v22 = "reduceRight" !== this ? "reduceRight" : this;
        let v23;
        try { v23 = v22.getUTCMinutes(v22); } catch (e) {}
        super.f = a20;
        [v15,v23,v23] = "c";
    }
    constructor(a25, a26, a27, a28) {
        function f29(a30, a31) {
            a30[a25] = a30;
            a27["indexOf"]("indexOf", a26[5]);
        }
        new Promise(f29);
    }
}
const v37 = new C18(1575354321, "valueOf", "c", "c");
const v38 = new C18(v15, "valueOf", "c", C18);
const v39 = new C18(24472, "c", "c", v37);
const v42 = new Int16Array(255);
new BigUint64Array(14);
("valueOf").length;
const v50 = [v14];
const v51 = [92933486n,v38,v37,v42,v50];
["valueOf",92933486n,1796826550n];
new Uint8ClampedArray(187);
for (let v56 = 0; v56 < 25; v56++) {
    const v57 = [601759695];
    const v58 = [1073741824,1073741823,1376142744,1073741825];
    function f59(a60, a61, a62, a63) {
        let v65 = 536870887;
        v65++;
        BigUint64Array >> v65;
        try { v58["find"](..."find", a63, ...v57, ...v58); } catch (e) {}
        return v58;
    }
    for (let v70 = 0; v70 < 5; v70++) {
        v51[v70] **= 1575354321;
        v39[5];
        for (let v72 = 0; v72 < 32; v72++) {
            v50["p" + v72] = v72;
        }
        f59();
    }
}
