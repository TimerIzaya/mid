const v1 = [1024,-47657,4,2147483649,-128];
[65535,-1024,9,-9007199254740990,-2];
[-51709,25385,-16,14,13,-256,-1830010323,-1,536870887];
class C4 {
    #o(a6) {
        class C7 {
        }
        function f9(a10, a11, a12) {
            return a11;
        }
        const v15 = [10000n];
        const o16 = {
            "arguments": v15,
            "type": "function",
        };
        Worker(f9, o16);
        new Uint16Array(41);
        new Float32Array(512);
        new BigUint64Array(8);
        return 512;
    }
    h = v1;
    static #c;
}
new C4();
function F32(a34, a35, a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    const v38 = this.constructor;
    let v39;
    try { v39 = new v38(a34, a37); } catch (e) {}
    typeof v39 === "symbol";
}
const v43 = new F32(65537, 1073741824, 0.19443453377416953, F32);
new F32(Date, 0.19443453377416953, 1073741824, v43);
new C4();
function F46() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v48 = this.constructor;
        class C49 extends v48 {
            e = v48;
        }
        new C49();
    } catch(e51) {
    }
}
new C4();
[128,8,-4294967296,-2147483649,-133795483,515339938,1000];
[4096,536870887,39778,268435441,4,1073741825];
[65537,16,1575395133,40092,1,-1024];
const v56 = [-2.220446049250313e-16,0.37671065822678595,737.7865996022122,0.5637787253001044,-9.051350272861553,0.8621634937215099,NaN,0.0,0.6635739373334036,-1e-15];
[-889958.1588677347,2.220446049250313e-16];
[0.8988803288307902];
const v59 = /ORS+/gvds;
const o85 = {
    m(a61) {
        super[-4.0] = delete v59[2];
        const v65 = new ArrayBuffer(ArrayBuffer, ArrayBuffer);
        return v65;
        const v66 = /(?:a*)+q(?<a>.)/guds;
        function f67(a68) {
            const o72 = {
                set b(a70) {
                },
                get d() {
                    return a68;
                },
                __proto__: v66,
            };
            return o72;
        }
        for (let i75 = 0, i76 = 10; i75 < i76; i76--) {
            for (let v83 = 0; v83 < 50; v83++) {
                f67(v66);
            }
        }
        return -4.0;
    },
};
function F86(a88, a89) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        class C91 extends [this,this,this,this,this] {
        }
    } catch(e92) {
    }
}
const v96 = new BigUint64Array(10);
class C98 extends v56 {
}
new C98();
const o100 = {
};
try { Reflect.defineProperty(o100, o100, 1073741824); } catch (e) {}
for (const v103 in v96) {
    new Float64Array(2147483647);
}
const o107 = {
    o(a106) {
        return a106;
    },
};
o107["o"]();
