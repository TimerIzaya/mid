Uint8ClampedArray.BYTES_PER_ELEMENT = Uint8ClampedArray;
const v4 = new Uint8ClampedArray(104);
const v5 = v4.toLocaleString();
const v6 = v5?.search;
let v7;
try { v7 = new v6(v6); } catch (e) {}
const v8 = v7.toLocaleLowerCase();
const v9 = new BigUint64Array(10);
try { new Uint8ClampedArray(BigUint64Array, v8, Uint8ClampedArray); } catch (e) {}
new Uint8ClampedArray(128);
new Uint16Array(64);
1000.0 / 1000.0;
-4.0 | -4.0;
const v22 = /[\ca]/ms;
function f25(a26, a27) {
    const v28 = a27?.constructor;
    try { new v28(a27); } catch (e) {}
    function F30() {
        if (!new.target) { throw 'must be called with new'; }
        typeof arguments;
        gc();
    }
    const o58 = {
        "execution": v5,
        p(a37, a38) {
            a38 ^ this;
            return this;
        },
        get h() {
            return 4;
        },
        [a27]: 4,
        "f": v28,
        n(a43, a44) {
            new Int8Array(BigUint64Array);
            "p" + 4;
            return a43;
        },
        toString(a51, a52, a53) {
            return a52;
        },
        2778757984: a26,
        "h": 4,
        __proto__: v9,
        get d() {
        },
        [v8](a56, a57) {
        },
    };
    return 4;
}
f25(f25, f25);
f25(v22, -65535);
