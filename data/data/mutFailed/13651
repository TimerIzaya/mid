function f0() {
}
const v4 = -16 + f0;
function f5() {
    return f0;
}
const v8 = new Int8Array(31);
new Uint16Array(0);
Uint32Array.e = Uint32Array;
new Uint32Array(255);
const v16 = new Map();
let v23 = undefined;
const o39 = {
    ...v16,
    ...v16,
    __proto__: v16,
    [Int8Array](a25, a26, a27) {
        super[591114.0785999324];
        function f30(a31, a32, a33) {
            const o34 = {
                "h": v23,
                ...v8,
            };
            return o34;
        }
        f30(Int8Array(undefined, v4, f30), 1.7976931348623157e+308, -1232377648);
        f30(v8, a27, 1.7976931348623157e+308);
        v23 = Map;
    },
};
v23 = o39;
[v16];
function F42() {
    if (!new.target) { throw 'must be called with new'; }
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    const v47 = new Date();
    try { v47.setFullYear(f0, v47, F42); } catch (e) {}
    19793 + 19793;
    const o51 = {
    };
    o51.e = 19793;
    const v53 = Array(19793);
    try { v53.shift(); } catch (e) {}
    for (const v55 of v47) {
    }
    const v56 = [v53,v53,v53,v53,v53];
    new BigUint64Array();
    -256;
    const v61 = [];
    try { v61.reverse(); } catch (e) {}
    for (let v63 = 0; v63 < 50; v63++) {
    }
    [v56,v56,v56];
    const v65 = [,];
    v65[0];
    Uint16Array.length = Uint16Array;
    const v68 = v65 >= Uint16Array;
    v68 && v68;
}
const v70 = new F42();
try { v70.isPrototypeOf(-16); } catch (e) {}
const v72 = new F42();
const v73 = v72?.constructor;
try { new v73(); } catch (e) {}
