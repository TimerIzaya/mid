const v2 = new Int8Array(90);
function f3(a4) {
    try {
        v2.length = 72;
    } catch(e6) {
    }
    return 72;
}
const v7 = f3(90);
new BigInt64Array(0);
new Uint16Array(4049);
new f3([-0.0,-1000000000000.0,-1.757346421683506,5.44339036732896e+307,-7.51187281128843e+307,-3.0,-4.0,632988.1805185077,-1.4366685622047327e+308]);
const v19 = (v2 * v2) >>> -1526;
Math.min(-1526);
v19 & (4049 ** 4049);
4049 * -1526;
[-705679.1594794607,-663.4771042963772,0.8442048530040164,-2.2250738585072014e-308,1000.0,5.387701172145787e+307];
[-1.3711011324134289e+308,-1000000.0,865318.1312684296,1e-15,0.944876316084082];
class C26 extends Uint16Array {
    4294967296;
    static {
        super.length = 4049;
        super.buffer;
    }
    static e;
    static #g = Int8Array;
    n(a30, a31) {
        try {
            this.h = this;
        } catch(e32) {
        }
        return v7;
    }
    o(a34, a35, a36, a37) {
        Math.expm1(10000);
        ~a34;
        Int8Array & 10000;
        Math.fround(a34);
        return Int8Array;
    }
}
new C26();
new C26();
new C26();
try {
    BigInt(-0.9475779989772164);
} catch(e50) {
}
