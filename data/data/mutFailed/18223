/[\P{scx=Greek}]/udiy;
/el(a)\1/gusy;
/tUxyz{1,32}?/gudm;
const v5 = new Uint8Array(564);
const v8 = new Float32Array(16);
const v11 = new Uint8Array(1);
class C12 extends Uint8Array {
    static #c = v8;
    static [v5];
    o(a14, a15, a16, a17) {
        super.a = a16;
        new Uint8Array(1);
        new Float64Array(256);
        new Uint16Array(3);
        return 256;
    }
}
new C12();
new C12();
new C12();
function F30() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v32 = this[1073741824];
        v32[4040] = v32;
    } catch(e33) {
    }
}
new F30();
const v35 = new F30();
const v36 = new F30();
class C37 extends F30 {
}
const v38 = new v36();
const v39 = new C37();
const v40 = v39.constructor;
const v41 = new v40(C12, Float32Array, v11);
const v42 = new C37();
d = v41;
function f43() {
    return Float32Array;
}
const o47 = {
    "execution": "sync",
    "type": "minor",
};
gc(o47);
const v49 = v42.constructor;
if (v40) {
} else {
    "sync" / Float32Array;
}
new v49(v41, v49, v41, v36, v49);
class C55 {
    constructor(a57, a58, a59) {
        const v60 = a58.constructor;
        new v60(v60, C37, a58, a57);
        const t57 = a59.constructor;
        new t57();
    }
}
new C55(v36, v38, v35);
