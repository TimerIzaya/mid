function f6() {
    return f6;
}
new Uint16Array(f6);
const v10 = [];
function F11() {
    if (!new.target) { throw 'must be called with new'; }
    [v10,[this,this,this,this],this,arguments];
}
new Uint16Array(512);
function f20() {
    return f20;
}
class C21 extends f20 {
    constructor(a23, a24, a25, a26) {
        super();
        function f27() {
            for (const v28 in a24) {
                64 instanceof Uint16Array;
            }
            return f20;
        }
        for (let v32 = 0; v32 < 5; v32++) {
            f27();
            %OptimizeFunctionOnNextCall(f27);
        }
    }
}
new C21(f20, f20, f20, f20);
Array(-4294967297);
class C40 extends Array {
}
new Int32Array(89);
[Float32Array];
89 < 89;
Date.UTC(-4.0);
new Float64Array(816);
const v52 = new BigInt64Array(243);
try { Uint8Array.from(v52); } catch (e) {}
