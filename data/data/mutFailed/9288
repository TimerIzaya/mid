new Uint8Array(956);
Math.sin(-4294967295);
~0;
new BigInt64Array(163);
new BigInt64Array(1000);
new Date();
class C16 extends Uint8Array {
    #m(a18, a19, a20, a21) {
        Date(956);
        return 268435441;
    }
    constructor(a27, a28) {
        super(a27, a27, a27);
        this["toSorted"](Date);
        const t13 = "toSorted";
        t13[Symbol.replace] = BigInt64Array;
    }
}
new C16(163, 956);
new C16(163, 1000);
new C16(163, 956);
const v36 = /(\1a)/gums;
const v37 = /V(?:a{5,1000000}){3,1000000}/vims;
const v38 = /(?<a>.)\k<a>?/vdimsy;
for (let v39 = 0; v39 < 27; v39++) {
    v36.compile(v37).lastIndex;
}
let v42;
try { v42 = v38(v36, v37, v37, v36); } catch (e) {}
%VerifyType(v42);
const v43 = [v38,v37,v36];
v43[2] = v43;
const v44 = [v43,v37,v38,v43,v43];
v44[2] = v44;
[v38,v36,v36];
let v46 = 8;
v46--;
new BigInt64Array(v37, v36, v42);
const v50 = new BigInt64Array(v46);
new BigUint64Array(10);
const v56 = new Uint8Array(7);
const t41 = v56.constructor;
new t41(Uint8Array, v50, v50);
try { Int32Array.bind(v43); } catch (e) {}
function f62() {
    3.4890473589784586e+307 === 3.4890473589784586e+307;
    let v65 = 1000000000000.0;
    const v66 = v65--;
    -v66;
    -v44 && v44;
    class C73 {
        static #m(a75) {
        }
        constructor(a77) {
            const v79 = new Float32Array();
            let v80;
            try { v80 = v79.entries(); } catch (e) {}
            v80.next();
            const v82 = new Uint16Array(12, -4294967296, v66);
            new Float32Array(v82);
        }
    }
    new C73();
    new C73();
    Symbol.iterator;
    try { v50.reduce(Int32Array, 12); } catch (e) {}
    let v89 = 0;
    v89++;
    const v91 = new C73();
    new C73();
    const v93 = new C73(-4294967296);
    [];
    [257828.6336153492,v93,v91,v93];
    function f96(a97, a98) {
        const o99 = {
            ...a97,
        };
        return a98;
    }
    const v100 = [];
    v100[0];
    class C102 extends C73 {
    }
    new C102();
    const v104 = v100.constructor;
    try { v104.isArray(v100); } catch (e) {}
    class C106 extends v104 {
    }
    C106.a = C106;
    const v107 = new C106();
    const v108 = v107.constructor;
    try { v108.bind(); } catch (e) {}
    const o110 = {
        "e": v100,
        __proto__: v43,
        [v44]: v56,
        "h": 257828.6336153492,
    };
    try { o110.e(BigUint64Array); } catch (e) {}
    return Int32Array;
}
%PrepareFunctionForOptimization(f62);
f62();
%OptimizeFunctionOnNextCall(f62);
f62();
