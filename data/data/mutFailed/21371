function f0() {
}
function f4() {
    return 1073741823;
}
const v5 = /I+/gumsy;
/ka(?!bbb|bb)cYz+/udm;
const v7 = /[\1\2(a(?:\1(b\1\2))\2)\1]/gvy;
new BigUint64Array(1602);
new Float64Array(255);
new isNaN(197);
class C20 {
    static #valueOf(a22) {
        const t13 = "boolean";
        t13[-8] = a22;
        a22[5] = -1.0654615543745536e+308;
        new Float32Array(9);
        new Float32Array(2823);
        new Uint16Array(512);
        return Float32Array;
    }
}
const v32 = new C20();
const v33 = v32?.constructor;
try { new v33(); } catch (e) {}
const v35 = new C20();
const v36 = new C20();
class C37 {
    constructor(a39, a40, a41, a42) {
        const v43 = this?.__lookupGetter__;
        try { new v43(C37); } catch (e) {}
        try { a41.isPrototypeOf(a41); } catch (e) {}
        try { v36(); } catch (e) {}
        try {
            a42.b = a41;
        } catch(e47) {
        }
    }
    #g;
    valueOf(a49, a50, a51, a52) {
        0.6920828961713477 % 1;
        -8 && 0.6920828961713477;
        +v32;
        let v59 = (-8) ** -8;
        return v59++;
    }
}
try { C37.bind(-8); } catch (e) {}
new C37(C37, "boolean", v36, v36);
const v63 = new C37(v36, v35, C20, C20);
new C37(v36, C20, C37, v63);
[-4.0,5.0,1e-15,-1000000.0];
const v66 = [4.0,1.7976931348623157e+308,-1.6746280838181564e+308,Infinity,0.02995849684218521,8.253324943521243e+307,-4.753315469426976e+307,1000000.0];
v66[3] = v66;
[-1.5131061856231655e+308,0.9940081941996022,-1000000000.0,-9.722353359280868,9.968489719443777e+307,-5.0,-374352.7778849256,-Infinity,1000000000.0,0.05917465816222045];
const v69 = new Float32Array(Float32Array, v35, v7, v5);
for (let v70 = 0; v70 < 25; v70++) {
    function f71(a72, a73, a74, a75) {
        try { a72.join(v70); } catch (e) {}
        a73--;
        a73 <= a73;
        const v80 = arguments?.__lookupGetter__;
        try { v80(v80, f71, a73, arguments); } catch (e) {}
        const v83 = "find" == "find";
        v83 && v83;
    }
    for (let v85 = 0; v85 < 10; v85++) {
        f71(v69, v70);
    }
}
