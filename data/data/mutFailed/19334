const v0 = [];
function f1() {
    return v0;
}
v0.constructor = f1;
class C5 {
    constructor() {
        try {
            v0.pop(Error);
        } catch(e9) {
        }
    }
    static e;
    [v0];
    6;
    static #a;
}
const v10 = new C5();
const v11 = new C5();
const v12 = new C5();
class C13 extends C5 {
    static 2271 = C5;
    [C5] = v10;
    static {
        function f15() {
            return v10;
        }
        function f16(a17) {
            new Int16Array(4);
        }
        Object.defineProperty(this, "g", { writable: true, get: f15, set: f16 });
        Object.defineProperty(this, "fuck", { value: v12 });
        this[2271] = this;
        let v21;
        try { v21 = v0.flat(); } catch (e) {}
        try { v21.forEach(C13); } catch (e) {}
        super.g &= v21;
        try {
            this.fuck(this, true, v0, v21);
        } catch(e25) {
            function f26(a27) {
                new Int32Array();
                return this;
            }
            e25.constructor = f26;
            const v30 = e25?.constructor;
            try { new v30(e25); } catch (e) {}
        }
    }
}
C13.g = C13;
const v32 = new C13();
v32[6];
const v34 = new C13();
const v35 = v34?.__defineSetter__;
try { new v35(v10, v10); } catch (e) {}
new C13();
[-272255371,-40831,4,1501937813,268435441];
[257,5,-9223372036854775807,690384666,59016,12,4294967297,1183684318,-65537];
[-12,1073741825,536870912,536870889,1,-9007199254740992,-5,2065469407,2092357871,-9869];
const v41 = [1.7976931348623157e+308,2.2250738585072014e-308,928419.7587767004,-279.06139374957183,1000.0];
v41[Symbol.isConcatSpreadable] = v12;
v41[Symbol.isConcatSpreadable] = v11;
const v47 = Symbol.isConcatSpreadable;
Symbol.for(v47.description);
v41[v47] = v41;
const o51 = {
    __proto__: v41,
};
o51[2] = o51;
o51.concat();
for (let [i56, i57] = (() => {
        ~10;
        return [0, 10];
    })();
    i56 >= i56, i56 < i57;
    (() => {
        const v62 = i57--;
        v62 >>> v62;
    })()) {
    i57--;
}
