const v0 = [];
class C1 {
    [v0];
    static #d = v0;
    d;
    static #toString() {
        const v3 = v0.length;
        try {
            v0.#d = v3;
        } catch(e4) {
        }
        return v3;
    }
    #e = v0;
    static #b;
}
const v5 = new C1(C1);
new C1(v0, v5, v5);
new v0(v0);
const v9 = Object?.constructor;
try { new v9(C1); } catch (e) {}
new Object();
[-1000000000.0,2.2250738585072014e-308,-9.35538689778314,0.2320128274709532,1000000000.0,-1000000000.0,-Infinity,-0.0];
[2.0,0.9116103123649951,-743.5265468436837,Infinity,1000000000.0,-4.0,-4.0];
const v14 = [-2.220446049250313e-16,1000000000.0,8.070055576552085e+307,-8.262676552857717e+307];
const v15 = [v0];
[Object];
const v17 = [v5,v15,Object];
const v19 = [-8617,3];
v19[1] = v19;
function f20(a21, a22, a23, a24) {
    const o25 = {
        "h": a21,
        "b": v19,
    };
    return v17;
}
try { f20(v14, v14, v5, v5); } catch (e) {}
const v27 = f20(4.435972324405191e+307);
v27.b = v27;
