const v0 = [];
const v1 = [v0,v0];
const v2 = [v1,v0,v1,v0];
[v2,v2,v1,v2,v0];
-127;
const v8 = [v1];
v8[0] = v8;
[v8,v8,v0,127,127];
const v10 = [v2,127];
try { v10.group(1329201758); } catch (e) {}
new Int8Array(1024);
const v20 = new Uint8Array(3);
v20[1] = v20;
new Float64Array(2336);
new Uint8Array(128);
new Uint16Array(248);
129 % 129;
let v32 = 0;
v32 + v32;
do {
    v32++;
} while ((() => {
        let v38 = 9;
        v38++;
        const v40 = /LD/vds;
        v40[Symbol.isConcatSpreadable] = 248;
        const v44 = [v40,1000.0];
        v44[1] = v44;
        const v46 = ["object"];
        v46.constructor = Symbol;
        try { v46.concat(v40); } catch (e) {}
        [v46,v46,v46,v46,v46];
        return v32 < v38;
    })())
new Int8Array(129);
-6.515712503710309e+307 + -6.515712503710309e+307;
let v56 = -1000.0;
v56++;
let v60 = -197236662;
v60--;
let v62 = -5.0;
0.41428636270946406 ^ v62;
Math.cos(v62);
let v65 = ++v62;
v65--;
Math.fround(0.41428636270946406);
v60 && 0.41428636270946406;
Math.round();
-816409267 ^ -816409267;
-12n <= -12n;
try { (-12n).getTime(-12n, -816409267); } catch (e) {}
const v78 = new Map();
function f79() {
    function f80() {
        function f81() {
            return 536870912n;
        }
        return 127;
    }
    return f80;
}
Object.defineProperty(v78, "constructor", { configurable: true, get: f79 });
const v82 = [-65535,-19265,3,-13,65537,128];
class C84 extends v78.constructor {
    3832 = v82;
}
const v85 = new C84();
v85[3832] = v85;
const v87 = new Float32Array(6);
v87[3];
const v89 = v87.fill();
try { v89.toReversed(); } catch (e) {}
class C92 {
    #m(a94, a95, a96) {
        for (const v97 in this) {
            (delete this?.h).__proto__;
        }
    }
}
const v100 = new C92();
const v103 = -0.0 << -0.0;
const o105 = {
    [Infinity]: -0.0,
    [-16]: v103,
    "h": -16,
    ...-0.0,
    "c": Infinity,
    "e": -0.0,
};
const v106 = new C92();
function f107(a108, a109) {
    const o113 = {
        "execution": "sync",
        "type": "minor",
    };
    gc(o113);
    return v10;
}
v106.toString = f107;
const v115 = new C92();
function f116(a117, a118) {
    const v119 = a118?.constructor;
    try { new v119(); } catch (e) {}
    const v121 = [];
    try { v121.with(v121, v121); } catch (e) {}
    const v124 = new Float64Array();
    try { v124.lastIndexOf(a118); } catch (e) {}
    const v127 = ("by").normalize();
    v127[1] = v127;
    const o167 = {
        "h": v100,
        [v106](a129, a130, a131) {
            super[-9223372036854775807];
            Array(1102693041);
            switch (128) {
                default:
                    break;
            }
            new BigUint64Array();
            const v138 = /anVXYFzN(x)(x)(x)\3/gvdms;
            try { Int8Array.reduceRight(v138); } catch (e) {}
            const v140 = [536870888,8];
            const v141 = [2147483649,2147483649,-65537,-268435456,10,9223372036854775807];
            function f142(a143) {
                const o147 = {
                    set g(a145) {
                    },
                    get g() {
                        return a143;
                    },
                    __proto__: a143,
                    ...v140,
                    4096: v141,
                };
                const v149 = new BigUint64Array();
                const v150 = /anVXYFzN(x)(x)(x)\3/gvdms;
                try { v149.reduceRight(v150); } catch (e) {}
                /4H/gvisy.compile(/[m]/gvdimsy);
                return o147;
            }
        },
        set b(a156) {
            function f157(a158) {
                return this;
            }
            class C159 extends f157 {
            }
        },
        [a118]: v100,
        __proto__: C92,
        "c": 9,
        set h(a161) {
        },
        o(a163) {
            const o165 = {
            };
            gc(o165);
        },
    };
    return o167;
}
for (let v168 = 0; v168 < 25; v168++) {
    const v170 = Math.cosh(v168);
    v170 & v170;
}
class C173 {
    static #d;
    set b(a175) {
        Symbol.search;
    }
    static ["Xkz0W"] = "Xkz0W";
    8;
    d;
}
try { Uint16Array.from(2336); } catch (e) {}
%PrepareFunctionForOptimization(f116);
f116(Uint16Array, v115).h;
%OptimizeFunctionOnNextCall(f116);
f116();
