Int32Array.e ^= 16;
const t1 = 16;
t1.g &= 16;
+null;
const t3 = null;
t3[1] = Int32Array;
/(ab)/vdsy;
/i(?<!)/dm;
/1(?:a*)+(\xed\xb0\x80^)/gumy;
const v7 = new Int32Array(16);
v7.buffer >>= 1;
try {
    v7.g = 16;
} catch(e9) {
}
function F10(a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    const v14 = this?.constructor;
    try { new v14(1, a13); } catch (e) {}
    try {
        this.h = a13;
    } catch(e16) {
    }
    try {
        this.c = null;
    } catch(e17) {
    }
    try {
        this.e = a12;
    } catch(e18) {
    }
}
const v19 = new F10(1, Int32Array);
const v20 = new F10(v19, 1);
new F10(v20, 1);
let v24 = ~65432;
v24 == v24;
++v24;
+65432;
const v29 = new Uint32Array(1);
try { new BigUint64Array(Int32Array, 1, Math); } catch (e) {}
const v33 = new BigUint64Array(1);
function f34(a35, a36, a37, a38) {
    -a35;
    return arguments;
}
try { f34(null, v33, null, Math); } catch (e) {}
for (let v42 = 0; v42 < 5; v42++) {
    v42 - v42;
    const v44 = f34(v42, v42);
    v44[1] = v44;
}
const v45 = f34(65432, 1, 65432, v7);
v45[1] = v45;
const v46 = v20;
v46.d = v46;
const v48 = `B8azR${RangeError}e${F10}p${Uint32Array}S3A`;
try { v48.padStart(v7); } catch (e) {}
v19 ^ v29;
