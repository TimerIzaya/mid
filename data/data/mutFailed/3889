const v3 = /fa{z}[\011]/gdmsy;
const v4 = /A(?:a?)+/udisy;
/[1a(?=b)]/gvms;
function f6(a7, a8, a9) {
    function f11(a12) {
        v4.source &= a7;
    }
    this.onmessage = f11;
}
const v16 = ["function",v4,Worker];
const o17 = {
    "arguments": v16,
    "type": "function",
};
const v18 = new Worker(f6, o17);
function f19() {
    return v3;
}
new BigUint64Array(129);
new BigInt64Array(16);
function f27() {
    arguments[9] = v18;
    Object.defineProperty(arguments, 16, { configurable: true, enumerable: true, get: f19 });
    return arguments;
}
f27();
new Int32Array(198);
const v36 = new Uint8Array();
const v39 = new Uint32Array();
function f40(a41, a42, a43, a44) {
    a41 - a41;
    a43--;
    a44 >>> a44;
    const v48 = a42--;
    v48 + v48;
    a44 + a43;
    const o54 = {
        "b": a41,
        "c": a44,
        ...v36,
        n(a52, a53) {
            v39[a41] = v39;
            return a53;
        },
    };
    try { o54.n(o54, -2); } catch (e) {}
    return a43;
}
f40(2, 2, 1, 2);
for (let v57 = 0; v57 < 500; v57++) {
    f40(Uint8Array, 2, v57, 2);
}
