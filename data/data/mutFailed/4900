new Int32Array(Int32Array);
const o6 = {
    "execution": "async",
    "type": "major",
};
class C8 {
    594532432 = -836021551;
    constructor(a10) {
        a10["string"] = this[this];
    }
    static f;
    /*
    constructor(a16, a17, a18, a19) {
        for (const v20 in a17) {
        }
        a18.d = "major";
    }
    */
    n(a22, a23) {
        new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
        new Int8Array(-836021551);
        const v28 = [65537,268435441,63298,-5,1235122603];
        const v29 = [128,215394418];
        v29.entries();
        const v32 = ("string").trimStart();
        let v33;
        try { v33 = v32(); } catch (e) {}
        v28[v33] = v29;
        /a+?/gm;
        /[^\b8*]/vimsy;
        /nxyz{1,}?/vmy;
        return "string";
    }
}
new C8("string");
new C8("string");
new C8(-1e-15);
[-1223086764,257,268435440,1,-45256,-11118,708412779,-4096,512];
new Float64Array(127);
const v46 = new Int32Array(129, 129, 129);
const v47 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
try { v47.some(); } catch (e) {}
function f49(a50, a51, a52, a53) {
    const o59 = {
        toString(a55, a56, a57) {
            try { this.toString(); } catch (e) {}
            a52[a51] = a50;
        },
    };
    return o59;
}
f49(v46, 129, v47);
[2147483648,16,-268435456,2147483649,3644,808429743,65536,-1,1];
[-4294967297,-60788,-9223372036854775808,-9223372036854775808];
try { ("getPrototypeOf").blink(); } catch (e) {}
class C65 {
    ["getPrototypeOf"] = -1e-15;
}
class C66 extends C65 {
    ["getPrototypeOf"] = C65;
}
[-7.092710148928679e+307];
[-1.8919028156972306,-1.1327880635636917e+307];
[2.0,-4.601893170889393,Infinity,2.2250738585072014e-308,-1000000000000.0,296881.2488791719];
const v72 = Math.tan(-1);
const v75 = new Uint8Array(127);
v75.indexOf(v72);
