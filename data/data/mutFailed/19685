[387979.739001821,808.365587255734,-Infinity,-1.0,-1e-15,-Infinity,789.4830977981846,-5.0];
const v1 = [1e-15,-5.0];
[-5.170736946094268,1e-15,-2.220446049250313e-16,-1000000.0,-5.0,-3.8113762418503576];
const v5 = new Uint16Array(241);
const v6 = v5?.fill;
try { new v6(v1); } catch (e) {}
new BigInt64Array(1000);
new BigInt64Array(9);
class C14 {
    a = v5;
    static valueOf(a16, a17, a18, a19) {
        a18 = a19;
        try {
            const o23 = {
            };
            a19.filter(v1, o23);
        } catch(e25) {
        }
        return a17;
    }
}
const v26 = new C14();
v26.a = v26;
const v27 = new C14();
const v28 = new C14();
v28.a = v28;
class C32 {
    n(a34) {
        try { new a34(a34, a34, a34, 268435440, 268435440); } catch (e) {}
        const o37 = {
            "b": 256,
        };
        new gc();
        this[2] = -44363;
        const o42 = {
            "maxByteLength": 1024,
        };
        const v44 = new ArrayBuffer(1024, o42);
        new Int8Array(v44);
        return 268435440;
    }
}
try { new C32(); } catch (e) {}
const v48 = new C32();
new C32();
const v50 = new C32();
const v52 = new Date();
function f53() {
    return v52;
}
try { f53(); } catch (e) {}
try {
    v48.g = v50;
} catch(e55) {
}
function F56(a58, a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
    const v61 = this?.constructor;
    try { new v61(v28, v28, BigInt64Array); } catch (e) {}
    try {
        this.f = a58;
    } catch(e63) {
    }
    try {
        this.e = a58;
    } catch(e64) {
    }
    try {
        this.a = a58;
    } catch(e65) {
    }
}
try { new F56(1000, 1000, v5); } catch (e) {}
const v67 = new F56(C32, v52, 268435440);
const v68 = v67?.constructor;
try { new v68(C14, v27, v5); } catch (e) {}
const v70 = new F56(v67, "L", v50);
v70.g = v70;
new F56(f53, v70, -44363);
function f72(a73, a74) {
    const o76 = {
        ...a74,
        get h() {
            return this;
        },
    };
    return a74;
}
class C78 {
    static get d() {
    }
    c;
    static #e = -1000000.0;
    4294967295;
    #a;
}
const v80 = C78?.call;
try { new v80(1000); } catch (e) {}
new C78();
new C78();
const o85 = {
};
o85.h = o85;
const v87 = new Float32Array(Float32Array, Float32Array);
v87[1] = v87;
[];
[];
class C91 {
    static #p(a93, a94) {
    }
    #h;
}
const v95 = new C91();
const v96 = new C91();
const v97 = new C91();
function f98(a99, a100, a101, a102) {
    try { a100.constructor(); } catch (e) {}
    const o104 = {
        "c": -922911.6474995338,
        242: -922911.6474995338,
        "g": v96,
        [a102]: a100,
        [C91]: a100,
        "a": -747634.1081113975,
        "h": a99,
        "f": a102,
    };
    return o104;
}
const v105 = f98(v95, v97, C91);
v105[242];
const v107 = f98(v105, v97, v95, v95);
const v108 = f98(v96, v97, v107, v107);
class C109 {
    constructor(a111, a112) {
        const v113 = this?.constructor;
        try { new v113(a111, a111); } catch (e) {}
        a111.name = a111;
        function f115(a116, a117) {
            v95 >>> 9007199254740991n;
            C91.g;
        }
        const v123 = [v95,v108];
        const o124 = {
            "arguments": v123,
            "type": "function",
        };
        o124.d = o124;
        new Worker(f115, o124);
    }
}
new C109(C91, C109);
new C78();
const v128 = /ywha??/gvdim;
v128.dotAll = v128;
