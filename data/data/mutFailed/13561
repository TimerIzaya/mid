function f0() {
}
class C4 extends f0 {
    constructor(a6, a7) {
        super();
        a6[2602495766] = 0.7210370868679143;
    }
    static valueOf(a12, a13) {
        let v16 = 65536;
        Math.ceil(f0);
        f0 >> f0;
        return ++v16;
    }
}
const v20 = new C4("1497964113", "4D");
const v21 = new C4("number", v20);
const v22 = new C4("number", "1497964113");
const v23 = [0.4387508944761541,0.0,-2.0];
[-2.0,-9.554380649464558e+307,4.0,0.42571391000827064,-1000.0];
[-727.6389094922488,-2.0,241094.70690361457,0.6199173385879254];
new Uint16Array(168);
new Float32Array(0);
new Float64Array(14);
function F35(a37, a38, a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    const v41 = this.constructor;
    try { new v41(); } catch (e) {}
    for (const v43 in this) {
        delete this?.h;
    }
}
let v45 = new F35(F35, F35, F35, F35);
const v46 = new F35();
const v48 = new BigUint64Array(v45, v46);
let v49;
try { v49 = f0(...v21, ...v23, v22, Float64Array); } catch (e) {}
v23[-1] = C4 << v46;
v45 = v49;
try { v21.toString(BigUint64Array, v49, v45, BigUint64Array, "1497964113"); } catch (e) {}
for (const v52 in v48) {
}
