function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -11;
    } catch(e3) {
    }
}
const v4 = new F0();
let v5 = new F0();
const v6 = new F0();
function f8() {
    return false;
}
function f9(a10, a11, a12) {
    const o26 = {
        127: v5,
        [a10](a14, a15, a16) {
            v5[this] &= a12;
            let v20 = --a11;
            let v21 = --v20;
            -8 | F0;
            v21 || -1000000000000.0;
            --v21;
            v21--;
            return v5;
        },
        "a": v5,
    };
    return o26;
}
const v28 = f9(v4, v4, v6, f9(v4, v4, v5));
f9(v5, v6, v4);
"m" <= (v5 = v4);
parseFloat.expm1(parseFloat);
new Uint8Array(268435440);
function f42() {
    return v28;
}
[1.0,-1e-15,4.0,-0.1496400361212622,1.860499401507031,NaN];
[1000000.0,-567539.2144439192,0.14864615125157143,379.4475166270529];
[839834.0178801017,0.7897566131784728,-4.0,-7.729408347493425,1000000000000.0,311909.1948598258,-1.0];
const v49 = new Uint8Array();
class C51 {
    b = "c";
    static {
        function F53(a55, a56) {
            if (!new.target) { throw 'must be called with new'; }
            this.propertyIsEnumerable(this);
            this.constructor;
        }
    }
    static #h;
    268435439;
}
for (const v64 of Array(19793)) {
}
const v65 = new Uint32Array();
function f66(a67, a68, a69, a70) {
    const o74 = {
        "f": 2,
        "b": a67,
        "c": a70,
        ...v49,
        n(a72, a73) {
            v65[a67] = v65;
        },
    };
}
f66(2, 2, 1, 2);
for (let v76 = 0; v76 < 625; v76++) {
    f66(Uint8Array, 2, v76, 2);
    ("boolean").split("string");
    -4294967296n * 9007199254740991n;
}
