function f0() {
}
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = f0;
    } catch(e3) {
    }
    try {
        this.a = f0;
    } catch(e4) {
    }
}
const v5 = new F1();
new F1();
const v7 = new F1();
class C8 extends F1 {
    static toString(a10, a11) {
        function f12(a13, a14, a15, a16) {
            [WeakSet,WeakSet,WeakSet,WeakSet];
            class C23 {
                static ["22307"] = "AanB8";
                b;
            }
            new C23();
            arguments[Symbol.matchAll] = a16;
            return arguments;
        }
        return f12(a11, this, this, a10, f0);
    }
    b = v5;
    static 1;
    static #f = f0;
    10 = v7;
    #toString(a28, a29, a30, a31) {
    }
    10000;
    constructor(a33, a34) {
        const o48 = {
            84: arguments,
        };
    }
}
new C8();
new C8();
new C8();
new BigUint64Array(2);
new Float32Array(3);
new Int16Array(2630);
Promise.race();
