[-72315.86347079102,0.14664454655572];
const v1 = [-272785.9062925944,5.175000634327452,Infinity,587542.6513241704,-203.45698964774226,4.741804126531701,-1.0489121427380013e+308,0.6180411988819722,1000000000.0,1000.0];
const v2 = [8.625793082576424e+307,-1000000000000.0,2.2250738585072014e-308,-1e-15];
new WeakMap();
function f6(a7, a8, a9, a10) {
    function f11() {
        return f6;
    }
    class C12 extends f11 {
    }
    const v13 = new C12();
    const v14 = v13.toString();
    for (let i = 0; i < 5; i++) {
        ["object",v14,"object",v2];
    }
    return v14;
}
const v20 = new Uint16Array(null, Uint16Array, Uint16Array);
function F23(a25, a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    const v29 = this.constructor;
    try { new v29(154, a28, 154, a26); } catch (e) {}
    -a26;
    a28 <= a28;
}
const v33 = new F23(154, 129, 129, 154);
new v2(v33, v20, null, v20);
new Uint8ClampedArray(4);
new BigInt64Array(256);
new Float32Array(1000);
for (let v42 = 0; v42 < 5; v42++) {
    function f43() {
        function f44() {
            return v42;
        }
        const v45 = f44.call(v42);
        let v46 = 115;
        function f47() {
            const v50 = Math.imul(v46--);
            return v50 >> v50;
        }
        f47();
        return v45;
    }
    f43();
    %OptimizeFunctionOnNextCall(Date);
    const v59 = new Uint32Array(16);
    function f60(a61, a62) {
        const o63 = {
        };
        o63.e = f60;
        const o64 = {
        };
        o64.e = f60;
        o64.b = a62;
        const o65 = {
        };
        o65.e = f60;
        o65.b = a62;
        o65.c = a61;
        const o68 = {
            "arguments": v1,
            valueOf(a67) {
                return this;
            },
        };
        o68.e = f60;
        o68.b = a62;
        o68.d = a62;
        function f70(a71) {
            return 7;
        }
        this.onmessage = f70;
        v59.length = 1073741824;
        return o63;
    }
    %OptimizeFunctionOnNextCall(f43);
}
