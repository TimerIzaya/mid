class C3 {
    set c(a5) {
    }
    static [0.22197468916344532];
    static {
        const o10 = {
        };
        const v12 = new Proxy("9007199254740992", o10);
        try {
        const t0 = 0.22197468916344532;
        t0(v12, this);
        } catch (e) {}
    }
}
const v14 = new C3();
const v15 = new C3();
const v16 = new C3();
function F17(a19, a20, a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v14;
    } catch(e23) {
    }
    try {
        this.c = a21;
        new BigUint64Array();
        function f28(a29, a30) {
            const o32 = {
                get e() {
                },
            };
        }
        class C33 {
            static toString(a35) {
            }
            set a(a37) {
                const o38 = {
                };
                const o39 = {
                };
                const o40 = {
                };
                const o41 = {
                };
            }
        }
        function f42(a43) {
            for (let i = 0; i < 10; i++) {
            }
        }
        [-0.0,3.5501749464532004,-0.0,-2.220446049250313e-16,0.7626441105891978,-585.9055525866645,1e-15,1000000.0] ** "IxTD";
        function F47(a49, a50, a51) {
            if (!new.target) { throw 'must be called with new'; }
        }
        const o52 = {
        };
        function f53() {
        }
        const v54 = `
            try {
            } catch(e55) {
            }
        `;
    } catch(e56) {
    }
}
const v57 = new F17(v14, v16, v14, v14);
const v58 = new F17(v14, v57, v57, v15);
new F17(v58, v16, 0.22197468916344532, v16);
new BigInt64Array(11);
new Int32Array(280);
function f69() {
    let v70 = 852.2904873570058;
    const o75 = {
        m(a72, a73) {
            v70++;
            return 280;
        },
    };
    return Int32Array;
}
f69();
f69();
new Int8Array(280);
const o80 = {
};
try { ("function")["-268435456"](); } catch (e) {}
function f84() {
    return f69;
}
const v85 = /(?:a*)+q(?<a>.)/guds;
function f86(a87) {
    const o89 = {
        get d() {
            return this;
        },
    };
    return f84;
}
for (let [i95, i96] = (() => {
        const v93 = /Aabc|defmxyz{1,}?qMa{0,1}?/gvdis.exec("function");
        try { v93.shift(); } catch (e) {}
        return [0, 10];
    })();
    i95 < i95;
    ) {
    f86(v85);
}
