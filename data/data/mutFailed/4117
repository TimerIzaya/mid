const v2 = new Array(256);
[-676641.7228748141,-1000000.0,-Infinity,-2.220446049250313e-16,148519.69380805525,-636651.8891415342,4.0,1000000000.0,-577109.5870916059];
const v4 = [1000000000000.0,-148.1328255075614,51.14025244863569,5.634138390513025e+307,2.220446049250313e-16,1.5018519204783962e+308,-556.211324404788,0.2407878900715037];
const v5 = [0.48148376991660924,-417774.7539273022];
class C9 extends Array {
    #d = v5;
    [v2];
    static valueOf(a11, a12, a13, a14) {
        try {
            ("XJlD").at(256);
        } catch(e16) {
        }
        return v2;
    }
    static [v2] = "XJlD";
    2 = "symbol";
}
const v20 = new v5();
const v21 = new v20();
const v22 = new v21();
function F23(a25, a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = C9;
    } catch(e29) {
    }
    try {
        this.h = v20;
    } catch(e30) {
    }
    try {
        this.b = a26;
    } catch(e31) {
    }
}
new F23(v22, "XJlD", v4, Array);
new F23(v20, "symbol", v21, v5);
new F23(v21, "symbol", v5, C9);
const v36 = ["268435441","268435441","268435441"];
const v37 = [v36,v36];
function F38(a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
    let v42;
    try { v42 = this.propertyIsEnumerable(v36); } catch (e) {}
    v42[2];
    const v45 = this.valueOf().constructor;
    try { new v45(v4); } catch (e) {}
    a40.lastIndexOf();
}
new F38("268435441");
new F38(v37);
