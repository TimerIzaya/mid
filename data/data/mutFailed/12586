[65537,-9007199254740992];
[12,7,-2,21895,17864];
function f2(a3, a4) {
    const o7 = {
        set b(a6) {
        },
    };
    return o7;
}
const v8 = f2();
for (const v9 in v8) {
    Object.defineProperty(v8, v9, { set: f2 });
}
[5,-1];
/FBQK/gus;
/(?!\1(a\1)\1)\10a[a]/vm;
const v13 = /fexyz{0,1}5ofd/udy;
new WeakMap();
class C16 extends WeakMap {
    1024 = v13;
    static #m(a18, a19, a20) {
        let [v21,v22,v23] = a19;
        super.e = Reflect.construct(WeakMap, [this], a20);
        return v13;
    }
    static #g = WeakMap;
}
new C16();
new C16();
new C16();
class C31 {
    141 = "9007199254740991";
}
new C31();
new C31();
new BigInt64Array();
function f41() {
    const v45 = -65535 / -65535;
    const o92 = {
        ...352326470,
        m(a47) {
            a47.c = a47;
            a47.h = a47;
            const o48 = {
            };
            o48.d = o48;
            o48.h = o48;
            function f49(a50, a51, a52) {
            }
            f49.bind();
            f49.caller = f49;
            try {
                o48.e = -65535;
            } catch(e54) {
                const v58 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v58, o48);
            }
            const o60 = {
            };
            o60.g = o60;
            o60.e = 1261703539;
            let v62;
            try { v62 = Math.expm1(128); } catch (e) {}
            v62--;
            const v65 = -9007199254740991 >> -9007199254740991;
            v65 - v65;
            -Math.sin(-9007199254740991);
            try { ("EV").link(v45); } catch (e) {}
            0 != 0;
            class C73 {
                o(a75, a76, a77, a78) {
                    class C79 {
                    }
                }
            }
            C73.name = C73;
            new C73();
            const v83 = new Int8Array(3938);
            let v84 = 3;
            const v85 = v84++;
            v85 + v85;
            const v88 = 0 >> 0;
            const v89 = v88 - v88;
            v89 / v89;
            [...v84] = v83;
            const o91 = {
            };
            o91.c = o91;
            return this;
        },
    };
    let v93;
    try { v93 = o92.m(o92); } catch (e) {}
    v93.m(128);
    class C96 {
    }
    new Float32Array();
}
f41();
