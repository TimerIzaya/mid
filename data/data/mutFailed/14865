const v1 = new Map();
function f2() {
    return v1;
}
const v3 = [-525.4076224328265,756793.3384281634,1e-15,0.45579894539264076,1.7976931348623157e+308,3.0,-647.6144722579434,0.22682405063076339,0.12146382278517398,-4.0];
const v4 = [1000000000000.0,-1.0,0.16743396882967887,0.6879978073578294,-906.448703205565,-2.2250738585072014e-308,5.0,-1.3507276931763923e+308,2.0];
const v5 = [1.1432270069862812e+308,-1.7515676319286348e+307,149.37838268161022,2.0,0.8964629037495107,-1e-15,-5.807308751239169,705439.2235530457];
const v8 = new Uint8ClampedArray(Date);
try { BigInt64Array(BigInt64Array); } catch (e) {}
class C11 extends Map {
    m(a13, a14, a15) {
        try { a13.entries(); } catch (e) {}
        return a14;
        try {
            new f2();
        } catch(e18) {
        }
        return Map;
    }
    static {
        super[v5] = this;
        v4[f2];
        const o23 = {
            "maxByteLength": 220,
        };
        const v25 = new ArrayBuffer(7, o23);
        new Uint32Array(v25);
        class C31 {
            get b() {
                const v33 = ("B")[21];
                try {
                    this.e = "B";
                } catch(e34) {
                }
                return v33;
            }
            static [2.0];
            static #g;
            g = "d";
        }
        const v35 = new C31();
        const v36 = new C31();
        try { v35(1221, v35, "d", v36); } catch (e) {}
    }
}
const v39 = new C11();
const v40 = new C11();
const v41 = new C11();
function f42(a43, a44, a45, a46) {
    const o72 = {
        set b(a48) {
        },
        n(a50, a51) {
            return BigInt64Array;
        },
        valueOf(a53, a54, a55, a56) {
            function f57() {
                return a44;
            }
            a53[3783] **= a43;
            return a44;
        },
        "d": a44,
        "g": v3,
        __proto__: a43,
        ...v8,
        9: Date,
        "arguments": v3,
        "e": v40,
        [v5](a59, a60, a61, a62) {
            const v64 = v40.constructor;
            try { new v64(true, v8); } catch (e) {}
            const o68 = {
                [57144]: 4294967296,
            };
            o68.__lookupSetter__(57144);
            try {
                v41.length = 0;
            } catch(e71) {
            }
            return a46;
        },
    };
    return o72;
}
f42(f42(v5, v5, v41, v40), v5, v40, v1);
f42(v41, v3, v40, v41);
[v5,v1,v39];
const v78 = [[f2]];
const o80 = {
    __proto__: v78,
};
class C81 extends Date {
}
class C82 extends C81 {
}
function f84(a85, a86, a87, a88) {
    a85.a = a85;
    try { a85(C82, Date); } catch (e) {}
    let v90 = a86 & a86;
    v90++;
    const o95 = {
        n(a93, a94) {
            return this;
        },
    };
    return Date;
}
for (let v96 = 0; v96 < 500; v96++) {
    f84(Uint8Array);
}
class C100 {
    static set h(a102) {
        eval("VL9k");
    }
}
const v116 = new BigInt64Array(12);
const o117 = {
    ...v116,
};
function F120(a122) {
    if (!new.target) { throw 'must be called with new'; }
    a122 | a122;
    const v124 = this?.constructor;
    try { new v124(3n); } catch (e) {}
}
new F120(257);
new F120(349865170n);
