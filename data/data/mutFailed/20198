function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 536870888n;
    } catch(e6) {
    }
}
const v7 = new F3(6n);
const v8 = new F3(6n);
const v9 = new F3(-2n);
class C10 {
    p(a12, a13, a14, a15) {
        v8.h ^= a13;
        return -46642362n;
    }
    constructor(a20, a21) {
        -(-10);
        a21 | 57131;
        -(-10);
        -57131;
    }
}
new C10(v7, v7);
new C10(v8, v8);
const v31 = new C10(v9, -2n);
const v32 = [1.3513677784541618e+308,0.6494829356069739,-2.2250738585072014e-308,3.0,-1000000000000.0,549.6209362319091,1e-15,2.2250738585072014e-308,8.179559173409427,1000000000.0];
const v33 = [-938.9861004888825,4.723242291047757e+307,-191.44293621788268,605202.7673677856,-4.0];
const v34 = [110.08578364842924,2.220446049250313e-16,552.6290912030779,-1.0,570.823049665312];
function F35(a37, a38, a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v31;
    } catch(e41) {
    }
}
new F35(v32, v8, -2n, v33, v9, v34, v7);
new F35(F35, v31, F3, F35);
new F35(C10, v31, v8, -2n);
const v48 = Symbol.iterator;
const t39 = "string";
t39[v48] = v48;
new Uint16Array(4294967295, 4294967295);
const v55 = new Float32Array(7);
const o59 = {
    m() {
        const o58 = {
        };
    },
};
const v61 = new Int32Array();
function F62(a64, a65, a66) {
    if (!new.target) { throw 'must be called with new'; }
    const v67 = this?.constructor;
    try { new v67(Uint16Array, a66, a66); } catch (e) {}
    a64 * a64;
    a66++;
    this.d = a64;
    this.g = Int32Array;
}
new F62(F62, 256, 256);
const v72 = new F62(256, v61, 4294967295);
const t61 = v72.g;
new t61(Uint16Array, v55, 7);
class C76 {
    #a;
    constructor(a78, a79, a80) {
    }
}
new F62(256, Float32Array);
Math.asinh();
const v86 = new Float32Array(Float32Array, Float32Array);
v86.a = v86;
Math.sin();
