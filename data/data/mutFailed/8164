const v0 = /Nr(?:a?)+/udim;
const v1 = /q\u0034/gud;
const v2 = /S/gdsy;
const v3 = [v1,v2];
const v4 = [v2,v2,v1];
const v5 = [v4,v0,v1,v4];
function F6(a8, a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v3;
    } catch(e11) {
    }
    try {
        this.a = v5;
    } catch(e12) {
    }
}
new F6(v3, v4, v0);
new F6(v4, v5, v1);
const v15 = new F6(v3, v4, v2);
new Float64Array(v15);
const v24 = new Map();
let v31 = undefined;
const o39 = {
    ...v24,
    ...v24,
    __proto__: v24,
    [24560](a33, a34, a35) {
        super[591114.0785999324];
        v31 = Map;
    },
};
v31 = o39;
[v24];
function F42() {
    if (!new.target) { throw 'must be called with new'; }
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    new Date();
    new Map(5);
    new v0();
    const o56 = {
    };
    class C59 {
    }
    class C60 extends C59 {
    }
    const v61 = Array(19793);
    for (const v62 of v61) {
    }
    const v63 = [v61,v61,v61,v61,v61];
    for (let v64 = 0; v64 < 50; v64++) {
    }
    const v66 = [[v63,v63,v63]];
    function f68() {
        const o69 = {
        };
    }
    v66 >= Array;
}
new F42();
new v2();
function f73() {
    const o75 = {
        get f() {
        },
    };
    const o80 = {
        ["8"](a78, a79) {
        },
    };
}
function F81() {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e83) {
    }
}
class C84 {
}
function f85(a86, a87, a88) {
    const o89 = {
    };
}
