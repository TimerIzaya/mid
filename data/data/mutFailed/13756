const v1 = new Date();
function f2(a3, a4, a5, a6) {
    const v9 = new BigInt64Array(4046);
    let v10 = undefined;
    const v11 = v10++;
    v11 + v11;
    const v13 = v11 >> v11;
    v13 >>> v13;
    let o15 = {
    };
    [,...o15] = v9;
    return f2;
}
for (let v16 = 0; v16 < 5; v16++) {
    f2();
}
const v18 = [Date,v1,Date];
const v21 = new Float64Array(127);
new Uint8ClampedArray(v21);
[Date,Date,v18,v18,v1];
[v18,Date];
/(?:a{5,1000000}){3,1000000}/guy;
const v29 = new Uint8Array(165);
v29.lastIndexOf();
([2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067]).constructor;
/\u{12345}\u{23456}/gvds;
/[(?!\1(a\1)\1)\1]/udsy;
const v36 = [1000000.0,0.218433446981681,-5.0,-919787.2036172998,872389.6270716691];
const v37 = v36.pop;
try { v37(v36); } catch (e) {}
const v40 = new Uint8Array(Uint8Array, Uint8Array);
v40[Math.atan2(-988.8649474800335, 10000)] = 10000;
const v46 = /(?:a*)+q(?<a>.)/guds;
for (let i49 = 0, i50 = 10; i49 < i50; i50--) {
    v46.test(v46);
}
const o61 = {
    "maxByteLength": 201,
};
class C62 {
}
const v63 = new C62();
const v64 = new C62();
const v65 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
let v66;
try { v66 = v65.some(); } catch (e) {}
function f67(a68, a69, a70, a71) {
    const o85 = {
        toString(a73, a74, a75) {
            let v76;
            try { v76 = this.toString(a74, v66, a73); } catch (e) {}
            function f78(a79, a80, a81) {
                return v63 == v64 ? v63 : v64;
            }
            f78(255n, v76);
            a70[a69] = a68;
            return v66;
        },
    };
    return o85;
}
const v87 = new Date();
v87.setYear(2.0);
