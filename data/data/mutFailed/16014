let v2 = "apMZ";
class C3 {
    get b() {
        let v5 = 10;
        for (; v5--;) {
            const v7 = super.h;
            try { this.setFloat32(v7, v7, v7); } catch (e) {}
        }
        return v5;
    }
    [v2];
    #f = v2;
    static [0.17267988251796518] = 0.17267988251796518;
}
new C3();
new C3();
const v11 = new C3();
const v12 = [1073741823];
[4294967295];
const v14 = [-40257,-4294967296];
const v19 = new BigInt64Array(4046);
function f20(a21, a22) {
    function F23(a25) {
        if (!new.target) { throw 'must be called with new'; }
    }
    class C26 extends F23 {
    }
    const v27 = new C26();
    v27.constructor;
    const o29 = {
    };
    for (const v30 in o29) {
    }
    let o31 = {
    };
    [,...o31] = v19;
    function f32(a33, a34) {
        class C35 {
            constructor(a37, a38) {
                const o40 = {
                };
                gc(o40);
            }
        }
        for (let v42 = 0; v42 < 25; v42++) {
            new C35(a33, a21);
        }
        return C35;
    }
    new Promise(f32);
    return o31;
}
class C47 {
    constructor(a49) {
        v2.localeCompare(a49, v2);
    }
    #p(a52, a53) {
    }
    static get e() {
        v2 = "BQCZa";
        this[2];
        return v12;
    }
    536870888 = -65536n;
    7;
    1000;
    static #m(a60, a61) {
        return a61;
        ("QQcMj").normalize("NFKD");
        return a60?.[179];
    }
    1073741824 = "BQCZa";
    static #e;
    static [v14] = v14;
    [v11];
}
new C47();
new C47();
new C47();
function f70(a71, a72) {
    return a72;
}
Uint32Array.valueOf = f70;
function f73() {
    return f73;
}
function f74(a75) {
    return a75;
}
Object.defineProperty(Uint32Array, 0, { enumerable: true, get: f73, set: f74 });
