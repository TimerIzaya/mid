function F0() {
    if (!new.target) { throw 'must be called with new'; }
    [1000000000000.0,-1.1572502683633346];
    let v4 = [0.88771793967179,152098.90570815443,-1.222532650504682e+308,-5.0,8.372495634812271];
    function f5() {
        return 0.2084949846073817;
    }
    v4.valueOf = f5;
    const v9 = [-1000.0,-4.0,-4.0,2.220446049250313e-16];
    v9[Symbol.toPrimitive] = f5;
    v4 += v9;
    new Float32Array(239);
    new Uint8ClampedArray(239);
    new Float64Array(4096);
    try {
        this.a = 129;
    } catch(e21) {
    }
}
new F0();
new F0();
new F0();
[62605,-24752,-128,-1506505017,-4294967295,59144,1634167972];
[-9007199254740992,7,604583897,27685,4294967296,-1437665500,545923067,1899670784,19392,8];
[268435456,60132,-65345,958535314];
[Float32Array];
function f39(a40, a41) {
    const v42 = -a40;
    v42 >> v42;
    const o44 = {
    };
    return o44;
}
const v45 = [-1000000.0,0.1600379490765781,-1.6243694690977962e+307,817210.0157459241,1.0,5.0,0.9202958446582343,-1.7976931348623157e+308,-382.2774365702321,-5.737866676165018e+307];
function f47() {
    return f47;
}
const v49 = new Float32Array();
v49.toString = f47;
new Float32Array([v49]);
class C54 {
    static #e;
    constructor(a56) {
        function* f57(a58, a59) {
            yield* v45;
            return a58;
        }
    }
    m(a61, a62, a63, a64) {
        const v69 = new Float32Array(3531);
        v69["isFrozen"]();
        Float32Array.bind();
        v45.#e;
        const t50 = -5n;
        t50.#e = -1;
    }
}
class C78 {
}
new C78();
class C81 {
    b = "o";
}
class C82 extends C81 {
}
new C82();
