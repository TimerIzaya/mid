const v1 = new Map();
class C2 extends Map {
    o(a4, a5) {
        for (let v6 = 0; v6 < 34; v6++) {
            let v9 = -11981;
            Math.sinh(v9);
            --v9;
            v9 >> this;
        }
        return this;
    }
    #b = v1;
    static #g;
    [Map] = v1;
    static c = C2;
}
const v13 = new C2();
new C2();
const v15 = new v13();
function f16() {
    return v1;
}
[2.0,-1.106530206371189e+308,-2.220446049250313e-16];
[0.31566791489680857,-741.4237726361686,-1000.0,1000.0];
[-1.6275852744519332e+308,-5.687414211514208e+307,133.98759733704082,-4.0,1000000.0,-799.1033459991239,0.7783996329771697,-1000000000.0,-1000000000000.0];
[4294967295,-54061,62741];
[879133194,-6,-2040895922,27255,-2147483649,268435440,4294967295,48362,10];
[268435456,-65537,3,2147483649,4294967296,500080429,-128,11];
new Uint8Array(268435440, "268435440", "MIN_VALUE");
const v29 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v31 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v32 = [601759695];
function f34(a35, a36, a37, a38) {
    function f39() {
        try {
            v29.forEach(a36);
        } catch(e43) {
            C2.f = e43;
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o50 = {
            toString(a46, a47) {
                const v48 = a38 && a36;
                v48 <= v48;
                return a36;
            },
        };
        f39++;
        const o71 = {
            "c": -4294967297n,
            [522675525n](a54, a55) {
            },
            "c": v32,
            valueOf(a57, a58) {
                return this;
            },
            [-4294967297n](a60, a61, a62, a63) {
            },
            "maxByteLength": -4294967295,
            "arguments": v31,
            ..."Vre",
            valueOf(a65, a66) {
                return a66;
            },
            4: "Vre",
            "type": v15,
            toString(a68, a69, a70) {
                return "Vre";
            },
            5: -4294967295,
            6: -268435456,
        };
        return a35;
    }
    f39();
    %OptimizeFunctionOnNextCall(f39);
    return f39;
}
for (let v73 = 0; v73 < 5; v73++) {
    f34(-4294967297n, v29, v73, v73);
}
