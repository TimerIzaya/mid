const v0 = [-307.9086123373082,1.092836701376856e+308];
const v1 = [-779773.1267068366,417434.779400649,-1000000.0,1e-15,-255.1774336863524,4.757570090312431e+307];
const v2 = [-2.2250738585072014e-308,1000000000.0,-1000000000.0,-0.0,5.0,-319.4037218091337,3.0,-1000000000000.0,-7.152948413915037];
class C3 {
    [v1] = v0;
    static {
        this <= v0;
        with (this) {
        }
        delete v0?.length;
    }
    toString(a12) {
        v2.length >>= a12;
        super[v1] = v2;
        const o16 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o16);
        return gc;
    }
}
new C3();
new C3();
new C3();
function f21() {
    return C3;
}
new Float32Array(0);
const v27 = new Uint8ClampedArray(11);
new Uint8ClampedArray(6);
new Uint32Array([-9007199254740991,536870888,52691,-1,-128,-196204265,0]);
let {"byteLength":v34,"byteOffset":v35,"length":v36,...v37} = v27;
const v39 = Symbol.iterator;
const o48 = {
    [v39]() {
        let v41 = 10;
        const o47 = {
            next() {
                v41--;
                const v45 = v41 == 0;
                const o46 = {
                    "done": v45,
                    "value": v41,
                };
                return o46;
            },
        };
        return o47;
    },
};
