let v1 = -536870912;
/EF+/dims;
/ab\b\d\bcd/gudy;
const v8 = /y(x)(x)(x)\2/viy;
let v9 = 0;
do {
    v8.__proto__;
    v9++;
} while (v9 < 1)
function F14(a16, a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = a17;
    try {
        this.b = a16;
    } catch(e19) {
    }
    try {
        this.g = a18;
    } catch(e20) {
    }
}
const v21 = new F14(-2147483649, -6, v1);
new F14(-6, v21, -2147483649);
new F14(-2147483649, -6, -2147483649);
new Uint16Array(116);
new BigUint64Array(512);
const v33 = Symbol.iterator;
const o42 = {
    [v33]() {
        const o41 = {
            next() {
                v1--;
                10 == 0;
                const o40 = {
                    "done": -6,
                    "value": 10,
                };
                return o40;
            },
        };
        return v1;
    },
};
new Int8Array(185);
function f46(a47, a48) {
    return f46;
}
const o51 = {
    "type": "function",
};
new Worker(f46, o51);
function f53() {
    return o51;
}
const o55 = {
    "type": "function",
};
o55.arguments = "function";
new Worker(f53, o55);
