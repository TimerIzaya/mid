[];
[536870912,16,-9223372036854775807,-5,-1854276940,-2,1437560938,1073741823,-65536,2147483648];
[10,3165];
const v6 = [10000,1417632387];
class C7 {
    g;
    #m(a9, a10, a11) {
        const o14 = {
            "maxByteLength": 3575,
        };
        const v16 = new ArrayBuffer(3575, o14);
        new DataView(v16);
        return v6;
    }
}
const v19 = new C7();
new C7();
new C7();
[-2.3512083641844477,328043.64224226424];
[472.38858734585574,0.01047897888430005,-186.63991300924727];
[3.0,-1000000000000.0,-1.246830171025529e+308,-1.0,-1000000000000.0,0.0,1000000.0,-1e-15,0.683348180401562];
function f25(a26, a27, a28, a29) {
    function f31(a32) {
        return arguments;
    }
    Object.defineProperty(arguments, "toString", { enumerable: true, value: f31 });
    arguments.toString(a27, f25, f25);
    function f34() {
        ("Vre").fixed().normalize();
        let v38 = -268435456;
        const v39 = v38--;
        v39 << v39;
        return a28;
    }
    f34();
    %OptimizeFunctionOnNextCall(f34);
    return arguments;
}
for (let v42 = 0; v42 < 5; v42++) {
    const t39 = f25().toString;
    t39(f25, v42, f25, f25);
}
%PrepareFunctionForOptimization(f25);
f25(f25, f25, f25, f25);
%OptimizeFunctionOnNextCall(f25);
v19();
