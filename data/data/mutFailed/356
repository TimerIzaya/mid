new Uint8ClampedArray(2191);
new Int16Array(230);
Promise.race();
function F10(a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    const v14 = this.constructor;
    try { new v14(); } catch (e) {}
    try { this.constructor(); } catch (e) {}
}
new F10();
new Float64Array(6);
new Set();
Math.sinh(-3.3474037991793697);
function f24() {
}
f24();
class C26 extends f24 {
    constructor(a28) {
        super();
        class C31 {
            static {
                [];
                try {
                    super.setInt8();
                } catch(e35) {
                }
            }
        }
        const v36 = new C31();
        const t29 = [v36];
        t29[7] **= 512;
        const t31 = "NEGATIVE_INFINITY";
        t31.toString = -256;
        for (let v39 = 0; v39 < 5; v39++) {
            super.valueOf();
        }
    }
}
new C26();
new C26();
new C26();
