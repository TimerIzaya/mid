const v0 = [];
function f1() {
    const o17 = {
        "d": v0,
        "b": v0,
        "a": v0,
        set g(a3) {
            let v2 = this;
            let v4;
            try { v4 = v0.includes(v2, a3); } catch (e) {}
            for (let [v5] of a3) {
                v2 = v4;
                v5 & v5;
            }
            v4 >> v2;
            new Int8Array(257);
            new Int8Array(f1);
            new BigUint64Array(129);
        },
    };
    return o17;
}
v0();
const v19 = f1();
v19.g;
const v21 = f1();
v21.b = v21;
const v22 = /r(?:a+)+/vdms;
const v23 = /a{1,2}?/usy;
v23.e = v19;
const v24 = /a{12z}/dsy;
let v25 = -256n;
const v26 = v25--;
4n * 4n;
const v31 = [65535n,[v23,f1,v24],v22,f1];
let v32;
try { v32 = v31.map(v26); } catch (e) {}
const v33 = [4n,v32];
v0[1];
v33[1] = v33;
1073741825 == 1073741825;
const v39 = [-1024];
for (let v40 = 0; v40 < 5; v40++) {
    const v42 = !(delete v39[v40]);
    const v43 = v42 || v42;
    v43 || v43;
}
