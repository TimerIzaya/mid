const v2 = new Int32Array(256);
let v3 = 2200;
v2.__proto__;
const v5 = new Int32Array(256);
const v6 = v2.byteLength;
v3 = v6;
v2[672] = 256;
new Uint8Array(v3);
let v10 = Uint16Array;
const v11 = new v10(8);
class C12 extends Uint8Array {
    static #b = v10;
    constructor(a14, a15, a16, a17) {
        super(8);
        %VerifyType(this);
    }
    static #e = 8;
    a;
    #c;
    256 = v11;
    1 = Int32Array;
}
function f18() {
    return 8;
}
let v19 = v10--;
new Uint8Array(C12, v6, 256);
new C12(256, 256, 8, 256);
new C12(8, 8, 8, Uint8Array);
const v23 = new C12(256, v3, 256, v2);
const v25 = new gc();
let [v27,,v28,v29] = v23;
v19 <<= v19;
v5.byteLength;
eval(v25);
