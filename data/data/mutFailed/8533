const v0 = [];
const v3 = new Array(256);
class C7 extends Array {
    toString(a9, a10, a11, a12) {
        Array(a12);
        Array(1752201962);
        %PrepareFunctionForOptimization(Array);
        Array(1752201962);
        Array(1752201962);
        %OptimizeMaglevOnNextCall(Array);
        Array(1752201962);
        return v3;
    }
    16 = 4;
    268435440;
    static a = 4;
    static b = 256;
    3;
}
const v18 = new C7();
new C7();
new C7();
[-1.0];
const v22 = [-771.0507212269669,2.220446049250313e-16,-Infinity,1.2720077474407504e+308,852483.1731901865,-5.059000076058686,4.0,0.23697544009758365];
[2.220446049250313e-16,-1.0,1.1854363366023901e+308,-652.9152614694906,1.7148403690550733,381042.63877881854,-120.01088823409646,2.220446049250313e-16,198929.60621168534];
function F24(a26, a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    function f30() {
        return a26;
    }
    function f31(a32) {
    }
    Object.defineProperty(this, "a", { writable: true, enumerable: true, get: f30, set: f31 });
    try {
        this.a = a29;
    } catch(e36) {
    }
}
new F24(4, v3, 1752201962, v0);
new F24(1752201962, v18, 4, 256);
new F24(1752201962, v22, 256, v18);
function f40() {
    for (let v41 = 0; v41 < 5; v41++) {
        "p" + v41;
    }
    class C46 {
    }
    function F50(a52) {
        if (!new.target) { throw 'must be called with new'; }
        const v53 = this.constructor;
        try { new v53(); } catch (e) {}
        this.g = -1517929768;
        this.g = -1;
        this.h = a52;
    }
    const o56 = {
        "b": -1000000.0,
        "h": -1540034480,
    };
}
f40();
const v60 = f40 & -4294967296;
256 * -4294967296;
Math.ceil(f40);
v60 >>> v60;
f40();
class C65 {
}
