const v3 = ([-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0]).forEach();
const v6 = new Int8Array(9);
v6.reverse();
const v12 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v14 = new Uint32Array(v12);
let v15 = -4294967297n;
v15--;
const v17 = [601759695];
const v18 = [1073741824,1073741823,1376142744,1073741825];
function f19(a20, a21, a22, a23) {
    const v24 = a20?.constructor;
    try { v24(); } catch (e) {}
    function f26() {
        try { ("Vre").charAt(4096); } catch (e) {}
        const v29 = ("Vre").codePointAt();
        v29 ^ v29;
        let v31 = Float64Array;
        v31 = a21;
        b = v12;
        try {
            v18.forEach();
        } catch(e33) {
        }
        const o44 = {
            "c": v15,
            valueOf(a35, a36) {
                return v14;
            },
            1073741824: v14,
            [v15](a38, a39, a40, a41) {
                eval(a39);
            },
        };
        return v15;
    }
    f26();
    const v48 = new Int32Array(1024);
    const v49 = v48[3];
    v49 + v49;
    1024 * v49;
    for (let v52 = 0; v52 < 5; v52++) {
    }
    %OptimizeFunctionOnNextCall(f26);
    try { v18["find"](..."find", a23, ...v17, ...v18); } catch (e) {}
    return f19;
}
f19();
new BigInt64Array(2166);
new Uint8ClampedArray(0);
Math.__defineSetter__;
new Float64Array(1073741824);
const v67 = new Float32Array(9);
const v70 = new BigInt64Array(5);
for (let v71 = 0; v71 < 5; v71++) {
    v71 / v71;
    function f73() {
        return f73;
    }
    f73.d = f73;
}
function f74() {
    try {
        for (let v75 = 0; v75 < 25; v75++) {
        }
        for (let v76 = 0; v76 < 5; v76++) {
            const v78 = "p" + v76;
            const v79 = v78.propertyIsEnumerable;
            try { v79(v78); } catch (e) {}
        }
    } catch(e81) {
        eval("");
    }
    h = Uint16Array;
    new Date(Math);
    return "Gg";
}
v70.toString = f74;
function f90() {
    return v70;
}
try { v70.map(f90); } catch (e) {}
v67 || v3;
gc();
const v96 = new BigInt64Array();
v96["indexOf"]();
