const v2 = new Float64Array(1628);
const v5 = new Float32Array(3);
const v8 = new Int16Array(205);
function f9(a10, a11, a12, a13) {
    const o31 = {
        n(a15, a16, a17, a18) {
            let v19;
            try { v19 = a13(Float64Array, 3, Float32Array, v5, a11); } catch (e) {}
            v19 | v19;
            v19?.[-1];
            return a11;
        },
        p(a23, a24, a25, a26) {
            delete v8[a26];
            a12 >>> a25;
            try {
                v8.every(a24);
            } catch(e30) {
            }
            return a25;
        },
    };
    return o31;
}
let [v32,v33,v34,v35] = v8;
for (let v36 = 0; v36 < 32; v36++) {
    v32["p" + v36] = v36;
}
f9(1628, 3, 1628, Float64Array);
const v40 = f9(3, 1628, 1628, 3);
f9(3, 3, 205, v40);
const v43 = new Uint8ClampedArray();
new f9(205, v43 == v40, v2, v43);
Object.defineProperty(v5, "g", { writable: true, enumerable: true, set: f9 });
try {
    v43.length = -2;
} catch(e47) {
}
class C48 {
    constructor(a50, a51, a52, a53) {
        const v54 = this.constructor;
        try { new v54(a52, a53, a50, v54); } catch (e) {}
        for (let v56 = 0; v56 < 5; v56++) {
            v43[v56] = a53;
        }
    }
}
new C48(Uint8ClampedArray, Uint8ClampedArray, Uint8ClampedArray, C48);
