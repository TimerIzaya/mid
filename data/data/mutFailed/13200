function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 640237749;
    } catch(e3) {
    }
    try {
        this.c = 640237749;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
const v7 = new F0();
function f8(a9, a10) {
    const o17 = {
        "g": v6,
        65537: a10,
        [v5]: v7,
        ...v6,
        m(a12, a13) {
            [49927];
            [-65536,-2147483648,-4096];
            return [-11080,10,-1559,1073741825,-9223372036854775808,65536,127,-5984,-2147483649,16];
        },
        "h": v5,
        ...v7,
        "e": a10,
    };
    return o17;
}
const v18 = f8(v6, v6);
f8(v18, f8(F0, v18));
[f8];
const v22 = [F0];
[v22,v22,f8];
new Set(3510);
new Float32Array(5);
new BigInt64Array(0);
const v34 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v35 = [16,-28272,-128];
const v36 = [1073741824,1073741823,1376142744,1073741825];
function f38(a39, a40, a41, a42) {
    function f44() {
        const v47 = -4294967295 >>> -4294967295;
        v47 | v47;
        const o53 = {
            "e": -4294967295,
            ...v34,
            ..."Vre",
            "c": v36,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a51, a52) {
                return a51;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            5: -4294967295,
            6: -268435456,
        };
        o53[6] = o53;
    }
    f44();
    %OptimizeFunctionOnNextCall(f44);
    let v56;
    try { v56 = v36["find"](..."find", a42, ...v35, ...v36, ...522675525n); } catch (e) {}
    v56 <= a41;
    return arguments;
}
for (let v58 = 0; v58 < 10; v58++) {
    f38();
}
%OptimizeFunctionOnNextCall(f38);
f38(v34, v34, f38, v34);
