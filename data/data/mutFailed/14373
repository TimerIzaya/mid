class C3 {
    static ["c"];
    0;
    h = "c";
    static #b;
    [-1] = "c";
    valueOf(a5, a6) {
        a5[10000] = a5;
        try {
            const t9 = "c";
            t9.e = a5;
        } catch(e7) {
        }
        return "c";
    }
    toPrimitive;
    e = C3;
    static #d;
    static [-2];
    static #h = C3;
    g;
    static h = 1e-15;
    static 4 = 1e-15;
    static 257;
    static 16;
}
let v8;
try { v8 = new C3("c", "c"); } catch (e) {}
const v9 = new C3();
const v11 = Symbol.toStringTag;
let v12 = C3[v11];
v12 = "-11";
v11.description += v8;
const v13 = v9?.e;
try { new v13(); } catch (e) {}
const v15 = new C3();
const v16 = new C3(v15);
try { v16.hasOwnProperty("-11"); } catch (e) {}
try {
    v11.toString = v8;
} catch(e21) {
}
const t42 = 1e-15;
t42[2] = v12;
let v23 = -12;
v23--;
let v26 = 256;
3 >> 3;
v26 < 3;
v26++;
