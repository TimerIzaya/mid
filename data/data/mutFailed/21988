const v2 = new Uint32Array(3677);
class C5 {
}
if ("log1p") {
    try { C5.m(); } catch (e) {}
}
v2.hasIndices = v2;
const o12 = {
    o(a9) {
        gc();
        return this;
    },
};
o12["log1p"]();
const v14 = new Int8Array(64);
new Uint8Array(99);
class C18 {
    static toString(a20, a21) {
        a20?.[2714502886];
        try {
            super.sign(64, v14);
            const o32 = {
                [-4294967297n](a26, a27, a28, a29) {
                    eval();
                },
            };
        } catch(e33) {
        }
        return this;
    }
    static #c = Int8Array;
    a;
}
new C18();
const v35 = new C18();
try { v35.hasOwnProperty(C18); } catch (e) {}
new C18();
class C38 {
}
const v39 = new C38();
-1000.0 !== -1000.0;
([-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0]).fill();
function f45(a46, a47, a48) {
    try {
    } catch(e49) {
    }
}
function f50(a51, a52, a53, a54) {
    -a51;
    try {
        const v56 = /Ma\W+/gudm;
        v56.dotAll = v56;
    } catch(e57) {
    }
    const o60 = {
        "g": a51,
        [-1]: C38,
        set b(a59) {
        },
        1025549261: v39,
    };
    return -5.008255649855068e+307;
}
const v61 = f50(-1000.0);
v61 & v61;
f50(-5.008255649855068e+307);
