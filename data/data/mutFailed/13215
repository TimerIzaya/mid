new Int32Array(129);
new BigInt64Array(257);
const v11 = new BigUint64Array(45);
function f12() {
    return v11;
}
new Float32Array(129);
new Int8Array(3505);
new Uint32Array(4);
class C25 {
    n(a27) {
        try { new a27(a27, a27, a27, 268435440, 268435440); } catch (e) {}
        const o30 = {
            "b": 256,
        };
        new gc();
        this[2] = -44363;
        const o35 = {
            "maxByteLength": 1024,
        };
        const v37 = new ArrayBuffer(1024, o35);
        new Int8Array(v37);
        return 268435440;
    }
}
const v40 = new C25();
new C25();
const v42 = new C25();
const v44 = new Date();
function f45() {
    return v44;
}
try {
    v40.g = v42;
} catch(e46) {
}
function F47(a49, a50, a51) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = 257;
    try {
        this.f = a49;
    } catch(e52) {
    }
    try {
        this.e = a49;
    } catch(e53) {
    }
    try {
        this.a = a49;
    } catch(e54) {
    }
}
const v55 = new F47(C25, v44, 268435440);
const v56 = new F47(v55, "L", v42);
new F47(f45, v56, -44363);
function f58(a59, a60) {
    const o62 = {
        ...a60,
        get h() {
            return this;
        },
    };
    return a60;
}
class C64 {
    static get d() {
    }
    c;
    static #e = -1000000.0;
    4294967295;
    #a;
}
new C64();
new C64();
const o69 = {
};
new Float32Array(Float32Array, Float32Array);
[];
[];
class C75 {
    static #p(a77, a78) {
    }
    #h;
}
C75[Symbol.toPrimitive] = f58;
const v81 = new C75();
const v82 = new C75();
const v83 = new C75();
function f84(a85, a86, a87, a88) {
    a86.toJSON = v40;
    function f89(a90) {
        eval();
        return v83;
    }
    a88.toString = f89;
    const o93 = {
        "c": -922911.6474995338,
        242: -922911.6474995338,
        "g": v82,
        [a88]: a86,
        [C75]: a86,
        "a": -747634.1081113975,
        "h": a85,
        "f": a88,
    };
    function f94() {
        return f89;
    }
    Object.defineProperty(o93, Symbol.toPrimitive, { configurable: true, get: f94 });
    return o93;
}
const v98 = f84(f84(v81, v83, C75), v83, v81, v81);
const v99 = f84(v82, v83, v98, v98);
v99.toJSON = v99;
class C100 {
    constructor(a102, a103) {
        function f104(a105, a106) {
            v81 >>> 9007199254740991n;
            C75.g;
        }
        const v112 = [v81,v99];
        const o113 = {
            "arguments": v112,
            "type": "function",
        };
        new Worker(f104, o113);
    }
}
new C100(C75, C100);
new C64();
/ywha??/gvdim;
