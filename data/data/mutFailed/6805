const v0 = /(?:a?)+2foo(?!bar)baz/gvmy;
const v1 = /La\nb\bc?/gudms;
const v2 = /a.ow^xxx$*/gums;
class C3 {
    constructor(a5) {
        const v6 = /ab|c/vimy;
        /\b(?=.)a3m/vs;
        /[\c~][\cj\cJ\ci\cI\ck\cK]/dimy;
        a5 * v0;
        const v11 = [v6];
        Reflect.apply(v2.compile, v6, v11);
    }
    static [v2] = v1;
    static #g = v2;
    static 10;
    static h = v2;
    [v2];
}
const v14 = new C3(v2);
const v15 = new C3(v1);
const v16 = new C3(v14);
const v17 = [v16,v0,v0,v15,v16];
const v18 = [v17,v14,v2,v1];
[v2,v1];
class C23 extends v15 {
    static p(a25, a26, a27) {
        const v28 = v18 >= this;
        const v29 = v28 ? v18 : this;
        v29[v28] = v29;
        return this;
    }
    #c = v17;
    constructor(a31, a32, a33, a34) {
        super(a34);
        let {"g":v35,} = this;
        a33[v35];
        7 - 7;
        (v0 * v0) - 7;
    }
}
const v42 = new C23(v1, v0, v1, v14);
new C23(v16, v1, v14, v15);
new C23(v2, v0, v16, v42);
const v45 = /(?<a>.)\k<a>?/vdimsy;
let v46;
try { v46 = v45(); } catch (e) {}
const v47 = [v46,v46,v46,v46];
const v49 = new BigInt64Array();
function f51() {
    3.4890473589784586e+307 === 3.4890473589784586e+307;
    const v55 = C3--;
    let v57 = 257828.6336153492;
    const v59 = -v47;
    -(v59 && v59);
    v57--;
    class C64 {
        static #m(a66) {
        }
        constructor(a68) {
            const v70 = new Float32Array();
            v70.entries().next();
            const v73 = new Uint16Array(12, -4294967296, v55);
            new Float32Array(v73);
        }
    }
    try { new C64(); } catch (e) {}
    try { new C64(); } catch (e) {}
    const v78 = Symbol.iterator;
    Math[v78] = v78;
    try { v49.reduce(v46); } catch (e) {}
    const v80 = new C64();
    const v81 = new C64();
    try { v81.propertyIsEnumerable(v59); } catch (e) {}
    const v83 = new C64();
    const v84 = [];
    const v85 = [v83];
    v85[0];
    class C87 extends C64 {
        [v80];
        #n(a89, a90, a91, a92) {
            return v85;
        }
    }
    const v93 = new C87();
    const v94 = v85.constructor;
    new v94();
    class C96 extends v94 {
    }
    const v97 = new C96();
    v97.constructor.bind(v57);
    Object.defineProperty(v97, 65537, { value: v81 });
    try { v93.m(v84); } catch (e) {}
    return v46;
}
%PrepareFunctionForOptimization(f51);
f51();
f51();
%OptimizeFunctionOnNextCall(f51);
f51();
