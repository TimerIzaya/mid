new BigInt64Array(8);
64 & 64;
const v6 = new Int32Array(64);
new Float32Array(356);
-1000000.0 >>> -1000000.0;
1.0 != 1.0;
411585671n < 411585671n;
let v21 = 1073741825n;
v21++;
const v23 = [-2147483647,64098,-9383,1024,129,-5];
[1000,-16,-38597,12,-3399,32508];
const v25 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v27 = new Uint32Array(257n, 64);
const v29 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v30 = [601759695];
const v31 = [1073741824,1073741823,1376142744,1073741825];
function f33(a34, a35, a36, a37) {
    function f39() {
        const t18 = "Vre";
        t18[2] = "Vre";
        let v42 = Float64Array;
        v42 = a35;
        b = v30;
        v25.length;
        try {
            v31.forEach(a35);
        } catch(e45) {
            e45.e = e45;
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o47 = {
        };
        let v48 = -268435456;
        const v49 = v48++;
        const o63 = {
            "c": -4294967297n,
            "c": v30,
            valueOf(a51, a52) {
            },
            1073741824: v27,
            "maxByteLength": v48,
            "b": -4294967295,
            [-4294967297n](a54, a55, a56, a57) {
                class C59 extends Date {
                    static get c() {
                    }
                }
                eval(v49, this, Date);
            },
            "e": -4294967295,
            "e": v48,
            "arguments": v29,
            256: a37,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": v48,
            "type": "Vre",
            "type": "Vre",
            6: v48,
        };
        o63.g = o63;
    }
    f39();
    Int8Array.prototype = Int8Array;
    const v66 = new Int8Array();
    v66.buffer.slice(2147483648);
    const v72 = new Int32Array(1024);
    const v73 = v72?.constructor;
    try { new v73(BigInt64Array, v72, BigInt64Array); } catch (e) {}
    let v75 = v72[3];
    v75++;
    for (let v77 = 0; v77 < 10; v77++) {
    }
    %OptimizeFunctionOnNextCall(f39);
    let v79;
    try { v79 = v31["find"](..."find", a37, ...v30, ...v31, ...522675525n); } catch (e) {}
    const v80 = v79 <= a36;
    v80 && v80;
    return arguments;
}
for (let v82 = 0; v82 < 10; v82++) {
    f33();
}
%OptimizeFunctionOnNextCall(f33);
f33().length;
const v86 = [-50328,-14,3,128,-11,64,-65535];
try { v86.splice(v86, v86); } catch (e) {}
class C88 {
    [v23] = -1000000.0;
    constructor(a90, a91, a92, a93) {
        -a90;
        %VerifyType(a93);
        super[this];
    }
    g;
    c;
    #toString(a97, a98, a99) {
    }
    1 = 257n;
}
const v100 = new C88(v21, 1.0, 7.589647165982214);
const v101 = new C88(411585671n, -1000000.0, -1000000.0, 1.0);
new C88(v101, -1000000.0, 1.0);
/(?:a*)+bU\u0034xyz{1,32}/udi;
const v104 = /vfoo|(bar|baz)|quux/gvds;
v104.h = v104;
/JO/gvy;
class C108 {
    #m(a110, a111) {
        function f112() {
            return a111;
        }
        super[a111] = "f";
        %VerifyType(a111);
        return f112;
    }
    static c;
}
let v113;
try { v113 = C108(); } catch (e) {}
const v114 = new C108();
const v115 = v114?.__lookupSetter__;
try { new v115(f33); } catch (e) {}
const v117 = new C108();
v117?.constructor;
const v119 = new C108();
const v120 = v119?.constructor;
v120.e = v120;
class C121 {
    p(a123) {
        this.g ^= this[8];
    }
    static #n(a126, a127, a128, a129) {
    }
    7 = v119;
    #a = v117;
}
const v130 = new C121();
v130[7] = v130;
const v131 = new C121();
v131[7] = v131;
v131[7] = v131;
const v133 = [[],"f",v119,381717.6504737276];
[v114];
function F135() {
    if (!new.target) { throw 'must be called with new'; }
    let v137;
    try { v137 = this.propertyIsEnumerable(); } catch (e) {}
    !v137;
}
const v139 = new F135();
[[f33,v27,v6,v139],v114,v100];
[v113];
[4.0,-4.0,1000000000.0,0.8008894214571343,952729.1294827361,-454073.34846856666];
[0.0,-1000000000.0,1000000000000.0,1.7731585929310896e+307,1000000000.0,4.0,-1.7976931348623157e+308,-1000000000000.0,0.3919153701751137];
[-5.0];
const v146 = new F135();
const v147 = v146?.toLocaleString;
try { new v147(); } catch (e) {}
function F149(a151, a152) {
    if (!new.target) { throw 'must be called with new'; }
    const v153 = a152?.__lookupGetter__;
    try { v153(); } catch (e) {}
    try { this.constructor(F149, this); } catch (e) {}
    a151.e = a151;
}
F149.arguments = F149;
const v156 = new F149(v146);
try { v156.propertyIsEnumerable("f"); } catch (e) {}
("Hyo9")[1];
const t170 = "at";
t170[1] = "at";
const v162 = ([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap;
v162.name;
const v164 = v162?.constructor;
v164.g = v164;
const v165 = [-4.202468609045087];
v165[0];
try { v165.every(v133); } catch (e) {}
[0.8434386161503777];
("4i")[1];
("4i")?.toWellFormed;
const t180 = "4i";
t180[1] = "4i";
const t185 = "RpXR";
t185[3] = "RpXR";
const t187 = "RpXR";
t187[1] = "RpXR";
try { ("c").trim(); } catch (e) {}
-("c")?.toLocaleUpperCase.length;
class C179 {
    constructor(a181) {
        const v182 = this?.constructor;
        try { new v182(a181); } catch (e) {}
        ("valueOf").localeCompare(a181, "valueOf");
    }
}
C179.prototype = C179;
const v185 = new C179();
const v186 = v185.constructor;
v186.e = v186;
new v186(C179);
