const v0 = [34293,2147483648,24668,-12];
const v1 = [1,-497799929,-7];
const v2 = [-1622417042,-4294967297,-65535,1208580654,-4,-11,383269790];
function f6(a7, a8, a9) {
    const o23 = {
        __proto__: a7,
        [a8]: v0,
        ...v0,
        o(a11, a12, a13, a14) {
            super[a14] = a12;
            class C15 {
                [v0];
                #g = -234206583;
                static #f = 10;
            }
            new C15();
            new C15();
            const v18 = new C15();
            f6(a7, a13, a9);
            %PrepareFunctionForOptimization(f6);
            f6(a7, a13, a9);
            f6(a7, a13, a9);
            %OptimizeMaglevOnNextCall(f6);
            f6(a7, a13, a9);
            return v18;
        },
    };
    return o23;
}
f6(v1, -1073741824, 10);
f6(v2, -1073741824, -234206583);
const v26 = f6(v1, -234206583, 10);
const v27 = [-3.0,-1.0,-1.3473548952085914e+308];
const v28 = [-538.927048796251,0.0];
[-1000.0,926.1532857234492];
function f30() {
    return v0;
}
function F31(a33, a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a35;
    } catch(e36) {
    }
}
const v37 = new F31(v2, v27, v28);
new F31(v1, v37, v1);
new F31(v0, v2, v26);
const v41 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
let v42 = 2684;
v42--;
const v45 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v46 = [601759695];
const v47 = [1073741824,1073741823,1376142744,1073741825];
const o50 = {
    "maxByteLength": 536870912,
};
const v52 = new SharedArrayBuffer(43, o50);
new Int16Array(v52);
function f56(a57, a58, a59, a60) {
    function f61() {
        ("Vre").codePointAt("Vre");
        const v65 = v41.length;
        try {
            v47.forEach(a58);
        } catch(e67) {
            e67.message;
        }
        const v69 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o75 = {
            toString(a71, a72) {
                (a60 && a58) <= v69;
            },
        };
        const o89 = {
            [522675525n](a78, a79) {
            },
            "c": v46,
            [v65](a81) {
            },
            [-1]: v42,
            "b": -4294967295,
            [-4294967297n](a83, a84, a85, a86) {
            },
            "arguments": v45,
            set b(a88) {
            },
            256: a60,
            ...v46,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
        };
        try {
            f56(undefined, undefined, o50, a59);
        } catch(e92) {
        }
        return v46;
    }
    f61();
    %OptimizeFunctionOnNextCall(f61);
}
for (let v94 = 0; v94 < 5; v94++) {
    f56(v94, v42);
}
Array(12, -10);
