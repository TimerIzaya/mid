let v3 = 7;
v3++;
const v6 = new Uint16Array(v3);
const v9 = new Uint32Array(9);
try { new Uint32Array(9, 9, 8); } catch (e) {}
new Uint32Array(631);
function f14() {
}
const o15 = {
};
function F16(a18, a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    2105444095n * 2105444095n;
    const v25 = 2105444095n / 2105444095n;
    v25 << v25;
    for (let v27 = 0; v27 < 100; v27++) {
        v27 >>> v27;
        const o30 = {
            6: undefined,
            "d": undefined,
            [268435439n]: 2105444095n,
            __proto__: o15,
            "g": a20,
        };
        o30[268435439];
    }
    const o32 = {
        "getOwnPropertyDescriptor": f14,
    };
    o32.defineProperty = this;
    Object.defineProperty(Proxy, "a", { writable: true, configurable: true, value: Uint32Array });
    Proxy.a = Proxy;
    const v34 = new Proxy(this, o32);
    v34.h = Proxy;
    v34.h = v34;
}
new F16();
const v36 = new F16();
Object.defineProperty(v36, "constructor", { writable: true, configurable: true, value: f14 });
v36.h;
const v38 = v36.constructor;
try { new v38(f14, f14, v6, f14); } catch (e) {}
new v38();
const v41 = new F16();
const v42 = v41.constructor;
try { v42(F16, v9, v42, v9); } catch (e) {}
const v44 = new v42();
v44.h = v44;
