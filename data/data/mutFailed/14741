class C3 {
    #e;
    static [8n];
    constructor(a5, a6) {
    }
    set a(a11) {
        const v13 = Symbol.iterator;
        const o22 = {
            [v13]() {
                let v15 = 10;
                const o21 = {
                    next() {
                        v15--;
                        const v19 = v15 == 0;
                        const o20 = {
                            "done": v19,
                            "value": v15,
                        };
                        return o20;
                    },
                };
                return o21;
            },
        };
    }
}
new C3(8n, 2147483648n);
new C3(2147483648n, -487437514n);
const v25 = new C3(-487437514n, 8n);
function f26() {
    return 8n;
}
const v28 = new Set();
function f29() {
    function f30(a31, a32) {
        function f33() {
            -9223372036854775808n >= -9223372036854775808n;
            return f33;
        }
        f33();
        return Set;
    }
    return f30;
}
Object.defineProperty(v28, Symbol.toPrimitive, { enumerable: true, get: f29 });
function f39() {
    return v25;
}
const t48 = [-554.3883745381902,874.2208688504531,0.0,1.7976931348623157e+308,1e-15];
t48[8] ^= v28;
