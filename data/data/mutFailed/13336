-146.2547487240538 >>> -146.2547487240538;
-1.7976931348623157e+308 <= -1.7976931348623157e+308;
(-1.7976931348623157e+308) ** -1.1967894675914664e+308;
try { (-146.2547487240538).random(-1.1967894675914664e+308, 4096, -1000000000000.0); } catch (e) {}
const t4 = "minor";
t4[2] = "minor";
const v16 = ("sync")?.italics;
try { new v16(); } catch (e) {}
const o18 = {
    "execution": "sync",
    "type": "minor",
};
gc(o18);
[992412.190993668,0.5744218319672107,-917871.2485319824,1e-15,1.0701039926643787,5.0,1000000000.0,-376.5185016844546,-1.0,-353.9683134837717];
([-900852.081564937,-1.0,2.0])[1];
[NaN];
9 + 9;
Float64Array[0] = 4096;
const v28 = new Float64Array(Float64Array);
function f29(a30, a31, a32, a33) {
    a30 + a30;
    a33 << a33;
    BigInt64Array.BYTES_PER_ELEMENT;
    const v39 = new BigInt64Array(4046);
    let v40 = undefined;
    const v41 = v40++;
    const v42 = v41 >> v41;
    Number.isNaN();
    v41 >> v41;
    const v47 = [-1679361633,-1679361633,-1679361633];
    for (let i = 0; i < 5; i++) {
        Object.defineProperty(v47, 130, { value: -1679361633 });
    }
    let o48 = {
    };
    function f49(a50) {
        gc();
    }
    Object.defineProperty(o48, "g", { writable: true, configurable: true, enumerable: true, set: f49 });
    o48.g = o48;
    [,...o48] = v39;
    return v42;
}
f29.length;
for (let v54 = 0; v54 < 5; v54++) {
    f29(v54, v54, v54, v54);
}
const v56 = new Uint32Array(9);
v56.set(v28);
