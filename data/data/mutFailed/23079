[1000000.0];
const v1 = [-1000.0,-4.0,506273.0993703387,1000.0,-4.0];
const v2 = [506.5621950178827,-1.0835668368457164e+308,315.9765316862665];
const v3 = [-50277,-2,-4294967297,-1665991533,-34010,-45465,-537972387,129,-28609,9];
const o4 = {
};
new v2();
function F6() {
    if (!new.target) { throw 'must be called with new'; }
}
const v8 = [64,10000,-4294967295];
[-44431,512];
function F10(a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v1;
    } catch(e15) {
    }
}
new F10(v3, v8, v1);
new F10(v8, v1, v1);
new F10(v8, v1, v3);
const v21 = new Uint8ClampedArray(3386);
new BigInt64Array(468);
function F26() {
    if (!new.target) { throw 'must be called with new'; }
    this.g = 1469121131;
}
function f29(a30, a31, a32, a33) {
    this.readline();
    return a32;
}
for (let v36 = 0; v36 < 10; v36++) {
    f29();
}
new Uint8ClampedArray(3);
const o43 = {
};
o43.constructor;
const v45 = /[abc+]/gvdim;
const v46 = v45.sticky;
const v47 = [v45,v45,v45,v45];
const v48 = /ka{0}/guims;
function f49(a50, a51) {
    const o52 = {
        ...v48,
        "d": v47,
        "c": a51,
        "g": a51,
        "f": v47,
        "b": v46,
        "a": a51,
    };
    return f49;
}
/[a\b!]/vdmy;
new gc();
7 instanceof 128;
Math.atan2(v21);
class C64 {
}
try { C64.m(); } catch (e) {}
const v68 = -25283n >> (-25283n && -25283n);
v68 | v68;
