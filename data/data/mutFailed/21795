const v0 = [];
function f1() {
    const o2 = {
        "e": v0,
        "h": v0,
        "d": v0,
        __proto__: v0,
        "c": v0,
        "e": v0,
        "b": v0,
        3: v0,
        "g": v0,
        "f": v0,
        4: v0,
    };
    return o2;
}
f1();
f1();
f1();
new Uint16Array(10);
new Float64Array(255);
new Uint32Array(255);
function F16() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = true;
    } catch(e18) {
    }
    try {
        this.b = true;
    } catch(e19) {
    }
}
const v20 = new F16();
new F16();
const v22 = new F16();
const v23 = [1e-15,0.09547881173263595,1.7976931348623157e+308,0.6658730271969261,-1000.0];
const v24 = [-8.040080448070657e+307,3.8894071891937223,0.7715929616276889];
let v25;
try { v25 = v24.with(v22, v22); } catch (e) {}
v25[2] = v25;
const v26 = [1.6621172782957435e+308,937862.0109722319];
try { v26.find(v25); } catch (e) {}
const v29 = 3154 >>> 3154;
const v31 = new Int32Array(3154);
v31[1700] = v31;
try { BigInt64Array.bind(v29); } catch (e) {}
const v35 = new BigInt64Array(257);
const v37 = 198 === 198;
v37 && v37;
const v40 = new Int32Array(3154);
let v41;
try { v41 = v40.entries(); } catch (e) {}
try { Uint16Array.bind(v22); } catch (e) {}
const v45 = new Uint16Array();
Uint8ClampedArray.BYTES_PER_ELEMENT;
const v49 = new Uint8ClampedArray(3, v23);
class C50 {
    constructor(a52, a53, a54, a55) {
        this.e = this;
        const v56 = a54?.constructor;
        try { new v56(this); } catch (e) {}
        try {
        const t0 = 128;
        t0();
        } catch (e) {}
        for (let i60 = 0;
            (() => {
                9 != 9;
                const v63 = -257;
                v63 || v63;
                return i60 < 9;
            })();
            i60++) {
            v49[i60] = a55;
        }
    }
    c;
}
try { new C50(3, Uint8ClampedArray, Uint8ClampedArray, v45); } catch (e) {}
let v70;
try { v70 = new C50(v41, v35, Uint16Array, v22); } catch (e) {}
v70.g = v70;
const v71 = new C50(v49, Uint8ClampedArray);
const v72 = (3).c;
const v73 = new C50(v71, BigInt64Array);
try { v73.constructor(v20, v20, 198, v40); } catch (e) {}
v73.c;
const v77 = [65537,1073741825,7841,-12,13];
const v78 = [1073741823,4294967295];
v78[1] = v78;
function F79(a81, a82, a83) {
    if (!new.target) { throw 'must be called with new'; }
    const v84 = this.constructor;
    try { new v84(a81, a82, a82); } catch (e) {}
}
const v86 = new F79(v77, v78, WeakSet);
new v72(v78, v78, v86);
