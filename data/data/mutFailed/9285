new Uint8Array(956);
new BigInt64Array(163);
let v6 = 1000;
class C8 {
}
const v9 = new C8();
function F10(a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    a12[4] = a12;
    const v15 = this.valueOf().constructor;
    try { new v15(); } catch (e) {}
    a12[4];
}
new F10(v9);
new BigInt64Array(v6);
class C20 {
}
new Uint32Array();
class C24 extends Int32Array {
}
new Date();
class C27 extends Uint8Array {
    #m(a29, a30, a31, a32) {
        Date(956);
        return 268435441;
    }
    constructor(a38, a39) {
        super(a38, a38, a38);
        this["toSorted"](Date);
        const t28 = "toSorted";
        t28[Symbol.replace] = BigInt64Array;
    }
}
new C27(163, 956);
v6++;
new Date();
function f49() {
    Math.max(4.0, 4.0);
    return 4.0;
}
let v52 = f49();
new C27(163, v6);
new C27(163, 956);
const v55 = /(\1a)/gums;
const v56 = /V(?:a{5,1000000}){3,1000000}/vims;
const v57 = /(?<a>.)\k<a>?/vdimsy;
for (let v58 = 0; v58 < 27; v58++) {
    v55.compile(v56).lastIndex;
}
let v61;
try { v61 = v57(v55, v56, v56, v55); } catch (e) {}
%VerifyType(v61);
const v62 = [v57,v56,v55];
v62[2] = v62;
const v63 = [v62,v56,v57,v62,v62];
v63[2] = v63;
Array(19793);
const t56 = [3.0,NaN,-1000000000.0,595974.7516182172,-1e-15,0.6881218471964052];
delete t56[2.0];
[v57,v55,v55];
let v71 = 8;
v71--;
new BigInt64Array(v56, v55, v61);
const v75 = new BigInt64Array(v71);
new BigUint64Array(10);
const v81 = new Uint8Array(7);
const t66 = v81.constructor;
new t66(Uint8Array, v75, v75);
try { Int32Array.bind(v62); } catch (e) {}
function f87() {
    3.4890473589784586e+307 === 3.4890473589784586e+307;
    v52 += "max";
    try {
        const v91 = /Ma\W+/gudm;
        v91.dotAll = v91;
    } catch(e92) {
    }
    let v93 = 1000000000000.0;
    const v94 = v93--;
    -v94;
    this - this;
    return 19793;
    new Proxy(Uint32Array, this);
    -v63 && v63;
    class C106 {
        static #m(a108) {
        }
        constructor(a110) {
            const v112 = new Float32Array();
            let v113;
            try { v113 = v112.entries(); } catch (e) {}
            const v116 = new Map();
            const o120 = {
                set d(a118) {
                    v116.delete();
                },
            };
            o120.d /= -2147483647;
            v113.next();
            const v122 = new Uint16Array(12, -4294967296, v94);
            new Float32Array(v122);
        }
    }
    new C106();
    new C106();
    Symbol.iterator;
    try { v75.reduce(Int32Array, 12); } catch (e) {}
    let v129 = 0;
    v129++;
    const v131 = new C106();
    new C106();
    const v133 = new C106(-4294967296);
    [];
    [257828.6336153492,v133,v131,v133];
    const v136 = [];
    v136[0];
    class C138 extends C106 {
    }
    new C138();
    const v140 = v136.constructor;
    try { v140.isArray(v136); } catch (e) {}
    class C142 extends v140 {
    }
    C142.a = C142;
    const v143 = new C142();
    const v144 = v143.constructor;
    try { v144.bind(); } catch (e) {}
    const o146 = {
        "e": v136,
        __proto__: v62,
        [v63]: v81,
        "h": 257828.6336153492,
    };
    try { o146.e(BigUint64Array); } catch (e) {}
    return Int32Array;
}
%PrepareFunctionForOptimization(f87);
f87();
%OptimizeFunctionOnNextCall(f87);
f87();
