const v3 = [-4.042301465171989,1.413488893758154e+308,1000000.0,4.0];
const v4 = v3?.toReversed;
try { new v4(); } catch (e) {}
[-3.0,-469159.38051822304,0.08987179018194191,-1000000.0,1.16694313401198,-306.22751567002854];
const v7 = [0.887048693242624,0.10451033641357421];
class C8 {
    constructor(a10, a11) {
        const v12 = this?.__defineGetter__;
        try { new v12(v3, this); } catch (e) {}
        const o14 = {
        };
        try {
            o14.h = this;
        } catch(e15) {
        }
        try {
            const o16 = {
            };
            o16.a = o16;
            o16.h = this;
            o16.g = a11;
        } catch(e17) {
        }
        try {
            const o18 = {
            };
            o18.d = o18;
            o18.h = this;
            o18.g = a11;
            o18.d = this;
        } catch(e19) {
        }
        try {
            const o20 = {
            };
            o20.b = o20;
            o20.h = this;
            o20.g = a11;
            o20.c = this;
        } catch(e21) {
        }
        let v22 = /a\sca+/uimsy;
        const v23 = /\1\2(a(?:\1(b\1\2))\2)\1(?:a+){0,0}o\bNe?/uy;
        v23.dotAll = v23;
        class C24 {
        }
        const v25 = new C24();
        const v26 = v25?.constructor;
        try { new v26(); } catch (e) {}
        let v28 = new C24();
        const o29 = {
        };
        function F30(a32, a33, a34, a35) {
            if (!new.target) { throw 'must be called with new'; }
            for (let v36 = 0; v36 < 100; v36++) {
                v22 += a35;
                const v37 = o29 in v23;
                v28 = v25;
                const o43 = {
                    p(a39, a40) {
                        this[F30] **= v36;
                        return v37;
                    },
                    valueOf(a42) {
                        return a42;
                    },
                };
            }
        }
    }
}
try { C8.toString(); } catch (e) {}
const v45 = new C8(-1330281297, v3);
v45.length = v45;
const v46 = new C8(-59057, v7);
const v47 = new C8(4096, v7);
const v48 = v47?.constructor;
try { new v48(v3, v3); } catch (e) {}
/(?<!a)/gud;
/a/im;
/z/udm;
function F53() {
    if (!new.target) { throw 'must be called with new'; }
    const v56 = [F53,F53];
    [v56,1141300185,F53];
    let v58 = [this];
    Math.log2(v56);
    const v62 = v58++;
    v62 ^ v62;
    const v64 = Math.asinh(536870887);
    v64 - v64;
    try {
        const v66 = this.constructor;
        v66.caller = v66;
        class C67 extends v66 {
            e = F53;
        }
        C67.caller;
        new C67();
    } catch(e70) {
        [v46,v46];
        function f72() {
            const v73 = [f72,f72,f72,f72,f72];
            class C75 extends v73.constructor {
            }
            const v76 = new C75();
            try { v76.reduce(); } catch (e) {}
            return v73;
        }
    }
}
const v78 = F53?.constructor;
try { new v78(-59057); } catch (e) {}
new F53();
new F53();
new F53();
