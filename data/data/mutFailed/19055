function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        function F3() {
            if (!new.target) { throw 'must be called with new'; }
            Array(19793);
            for (const v8 of Array) {
            }
            const v10 = new Uint32Array(Uint32Array);
            for (let v11 = 0; v11 < 5; v11++) {
                v10[v11] = this;
            }
        }
        new F3();
        class C19 {
            constructor(a21, a22) {
                const o24 = {
                    84: arguments,
                };
            }
        }
        Infinity.g = 2126414225;
    } catch(e25) {
    }
}
const v26 = new F0();
new F0();
const v28 = new F0();
function f32() {
    return v26;
}
function F33(a35, a36, a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = "eQq";
    } catch(e39) {
        function F47(a49, a50) {
            if (!new.target) { throw 'must be called with new'; }
            class C51 {
                static {
                    if (this) {
                    }
                }
            }
        }
    }
    try {
        this.h = f32;
    } catch(e53) {
    }
}
const v54 = new F33("string", v28, f32, "string");
const t52 = "eQq";
const v55 = new t52("e", "eQq", v54, "string");
new F33("eQq", v26, v55, "e");
function f57() {
    function F58() {
        if (!new.target) { throw 'must be called with new'; }
        for (let v60 = 0; v60 < 10; v60++) {
            "p" + v60;
        }
    }
    new F58();
}
%PrepareFunctionForOptimization(f57);
v54();
%OptimizeFunctionOnNextCall(f57);
f57();
