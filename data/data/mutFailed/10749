const v0 = [-770975.1543128069,0.547773986736661];
[111287.35609739344,4.0,-1.4200983925495154e+308,2.2250738585072014e-308,908.5084692508376,-1000000.0];
const v2 = [-1.7386599508600618e+308,1000000000000.0,-2.2250738585072014e-308,133890.6659486487,-1000000000000.0,1000.0,495605.1801392725,-4.0,21608.58587025688];
class C3 {
    #b = v0;
    h = v2;
    set c(a5) {
        ~a5;
        const v7 = delete this[a5];
        this[v7] = v7;
    }
    #o(a9) {
        try {
            a9.#b;
        } catch(e11) {
        }
        return a9;
    }
    128 = v0;
}
const v12 = new C3();
const v13 = new C3();
const v14 = new v13();
class C18 extends C3 {
    #c;
    static get f() {
        new WeakMap();
        try {
            v13.#c = Number;
        } catch(e23) {
        }
        return v12;
    }
    d;
    static 6;
    3175847408 = v14;
    static [v0];
}
new C18();
new C18();
const v26 = new C18();
class C27 {
    static #c;
    1024 = v0;
    #a = v26;
    static #h = v14;
    #d = v14;
    static #g;
    e;
    static #e;
    static #f = C27;
    static #p(a29, a30, a31, a32) {
        a30 = a32;
        for (const v33 of a32) {
            function f34() {
                return v26;
            }
        }
        return v2;
    }
}
new C27();
new C27();
new C27();
try {
    const o38 = {
    };
} catch(e39) {
}
const v40 = /KvXl/udimsy;
const v41 = /[\cA](?!(a))\1/udims;
const v42 = [v41];
const v43 = [v42];
function F44(a46, a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor;
    try { new v14(v41, v42); } catch (e) {}
    a47[2] = a47;
}
new F44(v40, v43);
new F44(v41, v42);
const v55 = new Int32Array(1024);
for (const v56 of v55) {
    const o58 = {
    };
    gc(o58);
}
