const v3 = [-9007199254740991n,-9007199254740991n,2n];
class C4 {
}
class C5 {
}
function F6(a8, a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    a8 >>> a8;
    -(a9 - v3);
    const v14 = this.constructor;
    try { new v14(v14, C5); } catch (e) {}
}
[-9007199254740991n,2n,2n,-9007199254740991n];
[v3,v3,16n];
function f18() {
    Symbol.toPrimitive;
    const v22 = C4.description.codePointAt();
    return v22 >> v22;
}
new BigInt64Array(4);
class C31 extends Int8Array {
}
const v33 = C31.cos(0.8497483139616006);
class C34 {
    #a;
    valueOf(a36, a37) {
    }
    toString(a39) {
    }
    static f;
}
new Uint8Array(133);
const v44 = new v33();
v44.setUTCFullYear(Date, v44, Date);
function F46() {
    if (!new.target) { throw 'must be called with new'; }
    v33.c = 1163987790;
}
const v49 = new C34();
const o50 = {
    __proto__: C5,
    "c": v49,
};
new BigInt64Array(0);
try { (1).__defineSetter__(); } catch (e) {}
