class C3 {
    10;
    constructor(a5) {
        try {
            const o6 = {
            };
            this.fuck(this, o6);
        } catch(e8) {
        }
    }
    static a;
    0 = "boolean";
    d;
}
const v9 = new C3(C3);
const v10 = new C3("boolean");
const v11 = new C3(2.2250738585072014e-308);
const v12 = [35967,14,6,9007199254740992,-4096,9,-24709,4,-769612540,9223372036854775807];
let v13;
try { v13 = v12.reverse(); } catch (e) {}
const v14 = [7986,4,-4096,2147483649,5,9007199254740991,1916822575];
const v15 = [-9,-1117411590,-9223372036854775807,65535,-43033,6,-54411];
try { v15.groupToMap("boolean"); } catch (e) {}
function f17(a18, a19) {
    try { a18.toLocaleString(); } catch (e) {}
    const v21 = a19?.__defineGetter__;
    try { new v21(v12, v11); } catch (e) {}
    const o31 = {
        "h": a18,
        ...a19,
        "b": a19,
        [a19]: a18,
        __proto__: v14,
        valueOf(a24, a25) {
            C3 | a25;
            this[8] = a25 * a25;
            for (let v28 = 0; v28 < 32; v28++) {
                v9["p" + v28] = v28;
            }
            return this;
        },
    };
    return o31;
}
f17(v12, v11);
const v33 = f17(2.2250738585072014e-308, v10);
try { v33.concat(v33); } catch (e) {}
const v35 = f17(f17, v13);
Math.acos(-13);
Math.expm1(-13);
-13 & v35;
f17(v10, v9);
const v45 = [-1.5314324604839498e+308,-1.8081364344875581,-2.2250738585072014e-308,3.0,3.0];
const v46 = [101.2980265931285,-1.7177856293756712e+307,-1000000.0,-8.49664044843577];
v46[3] = v46;
const o50 = {
    "maxByteLength": 10000,
};
const v52 = new SharedArrayBuffer(3714, o50);
new BigUint64Array(v52);
Set.prototype = Set;
const v55 = new Set();
const v56 = v55.values();
try { v56.next(); } catch (e) {}
function f58(a59, a60, a61, a62) {
    const v63 = a59?.unshift;
    try { new v63(v14); } catch (e) {}
    a59.shift();
    a59[3] = a59;
    const o66 = {
        __proto__: v46,
    };
    o66[2];
    return o66;
}
const v68 = f58(v45);
try { v68.groupToMap(v46); } catch (e) {}
f58(v46);
f58(v46);
gc();
