new Uint16Array(4);
4 >>> 4;
new Float64Array(4);
try {
    Float64Array.__proto__ = Float64Array;
} catch(e7) {
}
try {
    -0.9475779989772164 >= -0.9475779989772164;
    BigInt(-0.9475779989772164);
} catch(e12) {
    e12.message = e12;
}
new Float64Array(257);
const v18 = new Array(114);
try { v18.reverse(); } catch (e) {}
const v22 = new Int16Array(3851);
try { v22.findIndex(4); } catch (e) {}
const v26 = new Uint16Array(2);
try {
    v26.find(Array);
    const v29 = new Date();
    try { v29.getUTCDay(); } catch (e) {}
    const o33 = {
        "maxByteLength": 268435439,
    };
    const v35 = new SharedArrayBuffer(6, o33);
    new DataView(v35);
} catch(e38) {
}
try {
    v26.length = 1000;
} catch(e40) {
}
let v41 = 0;
v41--;
new BigUint64Array(v41);
try {
const t0 = 8;
t0();
} catch (e) {}
try {
    function f47() {
        return Float64Array;
    }
} finally {
    64 >>> 64;
    const v51 = new Uint8Array(64);
    try { v51.map(v51); } catch (e) {}
    const v53 = [];
    try { v53.copyWithin(v18, v18); } catch (e) {}
    function f55(a56, a57) {
        a56 <= v53;
        return f55;
    }
    try { f55.call(v26); } catch (e) {}
}
