class C3 {
    static #toString(a5, a6) {
        try { a5.getUTCMonth(this, 679862347, this, this, a6); } catch (e) {}
        [-1000000.0,-1000000000.0,-634.7422381566905,945620.8089249588,-1000000000000.0,213814.04017900862,-1e-15,-2.2250738585072014e-308,6.354002149062725e+307];
        const v9 = [0.15396225818223686,-1000.0,-1.1833201181227544];
        [-5.7261928451691695,-1000000000.0,-92145.42838168854,-465.04564694665487];
        return v9;
    }
    512;
    5 = -858969296;
    [-1] = -858969296;
    static #a;
}
const v11 = new C3();
const v12 = new v11();
const v13 = new C3();
function f14(a15, a16, a17, a18) {
    const o28 = {
        "b": v11,
        [679862347](a20, a21) {
            a20[1] = this;
            a16--;
            const o26 = {
                "execution": "async",
                "type": "minor",
            };
            return gc(o26);
        },
    };
    return o28;
}
f14(v13, v11, 127, v12);
const v30 = f14(v11, v12, -858969296, v11);
v30(v12, v30, -858969296, v12);
function f32(a33, a34) {
    ([a33,a33]).at(a33);
    return f32;
}
%PrepareFunctionForOptimization(f32);
const v37 = f32(f32, f32);
%OptimizeFunctionOnNextCall(f32);
f32(f32, v37);
