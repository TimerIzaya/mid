function f3() {
    return -1.7976931348623157e+308;
}
let v4;
try { v4 = new f3(); } catch (e) {}
let v7;
try { v7 = new v4(-1.7976931348623157e+308, -1.7976931348623157e+308, f3); } catch (e) {}
new v7(512);
-127;
new BigInt64Array(127);
let v13 = 255;
v13--;
new Int32Array(v13);
[238301.7863946634];
[-4.914137883046981,-815.3347816723186,0.19400565927973967,-719.8108275274883];
36002 >> 36002;
const v22 = [-1000.0,351.94489669740733,5.8623101046484845,-160881.40611645568,0.6390643538224362,9.13027568774574];
function f23(a24) {
    return 512;
}
v22.toString = f23;
function f25(a26, a27) {
    try { new BigInt64Array(a26); } catch (e) {}
    try { a27(a27); } catch (e) {}
    return 512;
}
const v31 = new Promise(f25);
v31[v22] += 36002;
[0.0,1000000000.0];
Uint8ClampedArray[0] = Uint8ClampedArray;
const v34 = new Uint8ClampedArray(Uint8ClampedArray, Uint8ClampedArray, Uint8ClampedArray);
try { new Uint8Array(f25, 36002, 36002); } catch (e) {}
const v38 = [v34];
try { v38.map(Uint8Array); } catch (e) {}
const v40 = Reflect.construct(Uint8Array, v38);
try { v34.findIndex(v40); } catch (e) {}
