function f0() {
    const o17 = {
        get f() {
            const o5 = {
            };
            new Proxy(this, o5);
            new Int16Array(2614);
            new Uint8Array(16);
            new Int16Array(5);
            return 2614;
        },
    };
    o17.toString = f0;
    return o17;
}
f0.valueOf = f0;
const v18 = f0();
const v19 = f0();
const v20 = f0();
class C21 extends f0 {
    set g(a23) {
        f0(this, a23, v19, a23, f0, a23);
        [v18,v19,this,v18,v18];
        [v20,a23,a23,this,this];
        [a23,v20,v20];
    }
    360 = f0;
    static #f;
    10000 = v19;
    static f;
}
const v28 = new C21();
const v29 = new C21();
function f30() {
    try {
        f0();
    } catch(e32) {
    }
    return v29;
}
v29.valueOf = f30;
const v33 = new C21();
class C34 extends f0 {
    toString(a36, a37, a38, a39) {
        let v40;
        try { v40 = v29.log10(a36, this, a37); } catch (e) {}
        Object.defineProperty(this, a39, { configurable: true, enumerable: true, value: v28 });
        const v42 = v28;
        v19[v42] += v40;
        return Uint8Array;
    }
    static e = v28;
    [-2] = v18;
}
const v43 = new C34();
if (C34 <= v29) {
    try {
        v43.length = 0;
    } catch(e46) {
    }
} else {
    v33[2] = v20;
}
new C34();
new C34();
/95(foo(?<!bar)baz)/gvdims;
/f\b(?:a+)+/gvmy;
/d(?:ab|cde)/dmy;
