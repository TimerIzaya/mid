const v0 = [];
class C1 {
    [v0];
    static #n() {
        let v3;
        try { v3 = new v0(v0, v0, v0, v0); } catch (e) {}
        let v4;
        try { v4 = v3(v3, this, v0, v3); } catch (e) {}
        let v5;
        try { v5 = v0.splice(v4); } catch (e) {}
        super.d = v5;
        v0 * v0;
        const o10 = {
            "execution": v5,
            "type": "minor",
        };
        return gc(this);
    }
}
const v12 = new v0();
const v13 = new C1();
const v14 = new C1();
[v12,C1,[v14,v14,v14]];
[v14,v14,v13];
[-733322572,-1008538186,-452443964,-9007199254740990];
[16027,-65537,808318465];
[1073741823];
function f24() {
    for (let v25 = 0; v25 < 5; v25++) {
        v25 & v25;
    }
    try {
        f24();
    } catch(e28) {
    }
    return f24;
}
f24();
