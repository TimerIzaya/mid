class C3 {
    g;
    constructor(a5, a6) {
        const v8 = [a5,a5,-561250721,a5,-561250721];
        function F9(a11, a12, a13, a14) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = "257";
            } catch(e15) {
            }
        }
        new F9(C3, a5, F9, a5);
        const v17 = new F9(v8, v8, "257", C3);
        new F9(v17, "4294967295", v17, a5);
        Reflect.apply(("4294967295").concat, this, v8);
    }
    static #e = -561250721;
    static #h = "257";
    static c = "257";
}
let v21 = new C3("4294967295", "257");
const v22 = new C3("4294967295", C3);
let v23 = new C3(v22, "257");
class C24 extends "257" {
    static 1024;
    #toString(a26, a27, a28, a29) {
        let v30 = this[a29];
        const v31 = typeof v30;
        v31 === v31;
        -(-561250721);
        a28["4294967295"] ^= -561250721;
        v21[129] = C3;
        const v35 = `
            let [v36,v37,v38,v39] = "symbol";
            const t34 = "symbol";
            t34[v39] = v30;
            ({"c":v21,...v30} = C3);
            C3[6819] = v36;
            for (const v44 of ("257")[3048]) {
                try { v23["p"](a27); } catch (e) {}
            }
            const v50 = -37275;
            const v51 = --v23;
            Math.floor(268435440);
            +v51 << 37275;
            Math.hypot(v50);
            37275 ^ "257";
        `;
        eval(v35);
        return v22;
    }
    #h;
    [C3];
    static [C3];
    static g = v21;
}
new C24();
new C24();
new C24();
Math.pow(-1073741824, -Infinity);
const v69 = new Int8Array(964446029);
v69.buffer;
const v71 = v22[128];
function f72() {
    return v71;
}
