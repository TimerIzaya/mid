new Uint16Array(15);
const v5 = new Int32Array(3);
new BigUint64Array(3976, v5, 3, 3976);
[681.3130012333056,-257.63503059896937,-1.7976931348623157e+308,0.5980442209460562,-8.99931354294956e+307];
[3.0,-1.7976931348623157e+308,1000.0,-795.0300391711196,-268529.12369365396,6.51557210348402e+307];
const v12 = 51910 & 51910;
new Int8Array(7);
[-422.728260539536,-355.78742444300815,-376944.05964375904,0.16692854520690348,1000000000.0,0.992973226915866,-3.0];
const v17 = [0.38057796469390925,-3.0,-518688.06248081743,-2.0,107.8968501375,-400463.65452600387,-222.36741891958593,-1000.0,-5.415934286194992,1000000000000.0];
class C19 extends TypeError {
}
v12.bind();
function f24() {
    return ("Vre").split(-1.0);
}
const v27 = [-2,-2,3,-2,-2];
function f28() {
    const v29 = [-1000000.0,771279.5641904315,0.0,8.299995604235331,6.625300935335886,-820.4949035918538,-602.5256799896665,0.6342705996691437,Infinity];
    const v30 = v29.toLocaleString(f28, v29);
    v30.search(f28);
    return v30;
}
const v32 = [Int32Array,-2];
3 % 3;
-2 < 9;
const v37 = [];
class C38 {
    g = C38;
    #e = v37;
}
const v39 = new C38();
const v40 = [v39];
function F41(a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    const v45 = this.constructor;
    try { new v45(v40, v37); } catch (e) {}
    a44[1073741823] = a44;
}
v17.concat(v27, v32, true);
