let v0 = 9223372036854775807;
let v3 = /gabc+?(Axyz{0,1}[D?])/vis;
const v4 = /ab\b\d\bcd*/gu;
const v5 = /(a$abc+?)/vmy;
class C6 {
    #toString(a8, a9, a10) {
        v3 = v5;
        Math.min(-1000000000000.0);
        const v15 = v4 >>> -1000000000000.0;
        v4 ^ v4;
        return v15;
    }
    static 16 = 3;
    [536870888] = v4;
    a;
}
const v17 = new C6();
const v18 = new C6();
new C6();
/a?5/vdiy;
const v21 = /V[\11]/gm;
const v22 = /(2a\Sc3mU\u{12345}[\0]6)/vy;
function F23() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = 0;
}
class C26 extends F23 {
    #b;
    constructor(a28) {
        super();
        this.__proto__;
        --v0;
        this[v3] = v17;
        v18[128];
        try {
            super.toString(v21);
        } catch(e33) {
        }
        delete this.h;
        super.h = this;
        /\1\2(a(?:\1(b\1\2))\2)\1()l/udm;
    }
}
v3["compile"]("compile");
C6 !== v5;
function f39() {
    const o48 = {
        toString(a44, a45) {
            try {
                super.getMinutes();
            } catch(e47) {
            }
            return "object";
        },
        "b": "boolean",
        "g": "object",
        128: "boolean",
        "a": 1000000000000.0,
        "c": "boolean",
        __proto__: "boolean",
        "h": 1000000000000.0,
    };
    return o48;
}
const v49 = f39();
const v50 = f39();
const v51 = f39();
v51[128];
function F54(a56) {
    if (!new.target) { throw 'must be called with new'; }
    a56[128] = F54;
    try {
        this.f = a56;
    } catch(e57) {
    }
    try {
    } catch(e58) {
    }
    try {
    } catch(e59) {
    }
}
F54.e = F54;
new F54(v50);
new F54(v51);
const v62 = new F54(v50);
function f63(a64, a65, a66) {
    const o73 = {
        get a() {
            const o71 = {
                "execution": "async",
                "type": "major",
            };
            gc(o71);
        },
    };
    o73[2074850330] = o73;
    return o73;
}
const v74 = f63(v51, v51, v49);
f63(v74, f63(v50, v50, v74), v50);
function F77(a79, a80, a81) {
    if (!new.target) { throw 'must be called with new'; }
    const v82 = this?.constructor;
    try { new v82(F77, F77, f39); } catch (e) {}
    a80.g = a80;
    try {
        this.d = a81;
    } catch(e84) {
    }
    try {
    } catch(e85) {
    }
}
const v86 = new F77(v51, v49, v62);
new F77(v51, v74, v86);
try { Uint32Array.bind(F54); } catch (e) {}
v22[0];
Math.cbrt(166569.90515977307);
(C6 ** 128).ceil(128);
new C26(v17);
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = this;
    try {
        this.e = 3;
    } catch(e3) {
    }
    try {
        this.f = 3;
    } catch(e4) {
    }
    try {
        this.b = 3;
    } catch(e5) {
    }
}
const v6 = new F0();
v6.d = v6;
const v7 = new F0();
new F0();
function f9() {
    return v7;
}
class C10 extends F0 {
    static {
        v6.d;
        try {
            F0();
        } catch(e14) {
        }
    }
    #p(a16, a17) {
        try {
            super.valueOf(F0, a16, this, v6, v7);
        } catch(e19) {
        }
        return this;
    }
}
new C10();
new C10();
new C10();
const v29 = [1.5349310938518386,1000.0];
const v32 = [339220.6328561967,911358.6181931046,-5.0];
v32[1] = v32;
const v33 = [-1000000.0,8.679879842107336e+307,-5.0,1.0,1000000000.0,-1.0];
v33.g = -1215085369;
v33.g = v33;
[-2.220446049250313e-16,-1e-15,2.0,3.738599362175618,0.07498296521872194,0.2885798208156063,-635620.1646720967,-1.7976931348623157e+308];
[-1000000000.0,1e-15,-9.803124315434264,-366.4099400694298,1000000000000.0,0.7347183727038488,-Infinity,2.0,0.3916117682859279,-461027.2128179858];
const v44 = [1000000000000.0,-1.7976931348623157e+308,6.570844083183324,3.0,-2.0,961.6011183149949,634.9606529678199,1.6712831869744128e+308,1000000000000.0];
const v45 = [-1.0,1e-15,NaN,5.0,-1.390593919008634e+308,2.2250738585072014e-308,-3.6891891067725497e+307];
function f46() {
    const o47 = {
        "apply": Date,
        "call": f9,
        "deleteProperty": f9,
        "get": Date,
        "getOwnPropertyDescriptor": Date,
        "getPrototypeOf": f9,
        "has": Date,
        "isExtensible": Date,
        "preventExtensions": Date,
        "set": Date,
        "setPrototypeOf": Date,
    };
    new Proxy(v6, o47);
    return v29;
}
const v51 = Symbol.toPrimitive;
v45[v51] = f46;
function f52() {
}
function f53(a54, a55) {
    [-9223372036854775808,-1080874019,-9223372036854775808];
    return F0;
}
Object.defineProperty(f52, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f53 });
f52.valueOf = Date;
class C63 extends f52 {
    constructor(a65, a66, a67, a68) {
        super();
        const o70 = {
        };
        o70.execution = a66;
        gc();
    }
}
const v72 = new C63();
v72.length = v51;
new C63(v72, C63, -2147483647n);
new C63(-2147483647n, 0n, C63, v44);
class C75 extends f52 {
}
function f76(a77, a78) {
    class C79 extends v45 {
    }
    return 12938n;
}
C75.toString = f76;
new C75();
const v81 = new C75();
h = v81;
C75 << v45;
for (let v83 = 0; v83 < 8; v83++) {
    v72.length = v83;
}
const o86 = {
    "maxByteLength": 65535,
};
new SharedArrayBuffer(16);
const v90 = [1000000.0,1.7976931348623157e+308,-37.10125895907777,-353.1167935473842,-3.0,-4.0,NaN,-86450.63126464805,-2.2250738585072014e-308];
const v93 = new Float64Array();
const v96 = new Int8Array(5);
[v93,v96,Float64Array,v90];
[-65536,-1455,1486555091];
[1671616942];
const v102 = [-16478,-55579,-9223372036854775808,1000,9];
const v108 = new Float64Array(127);
v108[54];
new Uint8Array(64);
BigUint64Array.b = BigUint64Array;
const v115 = new BigUint64Array(2551);
function F116(a118, a119, a120, a121) {
    if (!new.target) { throw 'must be called with new'; }
}
new F116(64, 64, 2551, 3.0);
const v123 = new F116(127, 2551, 64, Infinity);
new F116(64, 2551, 64, 1.0);
let v125 = 253;
v125 | v125;
new Uint32Array(v125);
new Float64Array(1839);
let v132 = 242;
~v132;
const v134 = v132--;
v134 >> v134;
try { BigInt64Array.apply(Float64Array, v123); } catch (e) {}
const v138 = new BigInt64Array(v132);
v138.f = v138;
const v139 = /G?/vis;
try { v139.toString(); } catch (e) {}
/kj/iu;
const v142 = /lxyz{0,1}?/mvgisyd;
v142.b = v142;
const v150 = new Float32Array();
const o161 = {
    [v125](a157, a158, a159) {
        v150 > v115;
        v125 = 2056527154;
    },
};
try { v102(v102, 12, Float64Array, v96, Int8Array); } catch (e) {}
[255,-33812,65535,-2,-9,536870889,452232014];
let v164 = 202248641;
v164--;
12 && v164;
