function F3() {
    if (!new.target) { throw 'must be called with new'; }
    function f5(a6) {
        for (let v7 = 0; v7 < 5; v7++) {
            function f8() {
                return Math.round(f8);
            }
            f8();
            %OptimizeFunctionOnNextCall(f8);
        }
    }
    this[Symbol.toPrimitive] = f5;
}
new F3();
function f19() {
    return f19;
}
f19[Symbol.toPrimitive] = f19;
const v22 = /(?:a*)+q(?<a>.)/guds;
function f23(a24, a25) {
    return 3n;
}
v22.constructor = f23;
function f29(a30) {
    const v31 = a30?.constructor;
    let v32;
    try { v32 = v31(a30, f19); } catch (e) {}
    const o34 = {
        get d() {
            return this;
        },
    };
    return v32;
}
for (let i37 = 0, i38 = 10; i37 < i38; i38--) {
    for (let v45 = 0; v45 < 50; v45++) {
        f29(v22);
    }
}
new WeakSet();
class C48 {
    static #o(a50, a51, a52, a53) {
        return -1077250390n;
    }
    #g;
    [3n] = C48;
    static m(a58, a59, a60) {
        this[13] = -792944846n;
        try { a59(); } catch (e) {}
        return a58;
    }
    #d;
}
new WeakSet();
new C48();
new C48();
const v66 = new Date();
v66.setFullYear();
v66.getMinutes();
new Uint8Array();
function f71() {
    return -792944846n;
}
new WeakMap();
const v78 = new Uint16Array(1024);
function f79() {
    return f19;
}
Object.defineProperty(v78, "valueOf", { writable: true, enumerable: true, get: f79 });
v78[7] = v78;
function f80(a81, a82, a83, a84) {
    return f80;
}
function f85(a86, a87) {
    new Set();
    function f90() {
        function f91(a92, a93, a94, a95) {
            return a93;
        }
        f91(f91, f90, f91, f90);
        return f90;
    }
    %PrepareFunctionForOptimization(f90);
    const o97 = {
        [a86]: -792944846n,
        [a87]: -65537,
        65536: -65537,
    };
    return -65537;
}
f85(9223372036854775807, -65537);
f85(9223372036854775807, 9223372036854775807);
