new Uint16Array(2);
const v5 = new Uint8ClampedArray(10);
new Float32Array(2);
!-1802551371;
for (let v12 = 0; v12 < 5; v12++) {
    function f13() {
        const v14 = [];
        try {
            v14.some(v12);
        } catch(e16) {
        }
        return v14;
    }
    f13();
    %OptimizeFunctionOnNextCall(f13);
}
new Float64Array(0);
new Uint16Array(v5);
new Int32Array(2575);
for (let [i33, i34] = (() => {
        let v29 = new Int8Array(1024);
        v29 %= v29;
        Math.fround();
        return [0, 0];
    })();
    (() => {
        const v35 = i33 < i34;
        const v37 = Math.log();
        class C38 {
        }
        new v37();
        class C40 {
            a;
            e;
            constructor(a42, a43, a44) {
                for (let v45 = 0; v45 < 5; v45++) {
                    function f47() {
                        const o55 = {
                            [-4294967297n](a49, a50, a51, a52) {
                                eval(688);
                            },
                        };
                        return f47;
                    }
                    f47();
                    %OptimizeFunctionOnNextCall(f47);
                }
            }
        }
        function f57(a58, a59, a60, a61) {
            let v62;
            try { v62 = a59.apply(a61, a59); } catch (e) {}
            return v62;
        }
        f57(i34, C40);
        %OptimizeFunctionOnNextCall(f57);
        return v35;
    })();
    i34--) {
}
