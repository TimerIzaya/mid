function F0() {
    if (!new.target) { throw 'must be called with new'; }
    let v1 = this;
    try {
        v1.a = 1853020094;
    } catch(e3) {
    }
    v1[9] = 1853020094;
    const v4 = delete v1[115];
    v1[1853020094] = v1;
    v4 < F0;
    v1 **= v1;
    try {
        v1.f = 1853020094;
    } catch(e6) {
    }
}
const v7 = new F0();
new F0();
new F0();
function f10() {
    return v7;
}
[-8.423288404653653e+307,460.19811044552307,-1.7971213292687213e+308,-1e-15,0.8010499065604265,5.0,1.7976931348623157e+308,-4.0,0.8718051962313597];
[-0.0,-1000000.0,870.4551106487277,-5.0,-894463.0098335542,8.571026806862612];
const v13 = [-2.0,-1000.0,-1.7976931348623157e+308,Infinity,-2.0,-685.1846846322762,1.7655623420345498e+308];
new Uint8ClampedArray(8);
new Int32Array(6);
new BigInt64Array(10);
function f25() {
    return f25;
}
class C26 extends f25 {
    constructor(a28, a29, a30, a31) {
        super();
        function f32() {
            class C33 {
                static [v13] = f10;
                c = Uint8ClampedArray;
                static [-1] = v7;
            }
            const v34 = new C33();
            new C33();
            let v36 = new C33();
            const v37 = [];
            v37[6] = a30;
            a29[2] = v37;
            v36 = v34;
            try {
                a29.toString = f32;
            } catch(e38) {
            }
            return this;
        }
        for (let v39 = 0; v39 < 5; v39++) {
            f32();
            %OptimizeFunctionOnNextCall(f32);
        }
    }
}
new C26(Uint8ClampedArray, Uint8ClampedArray, 9007199254740991);
new C26();
