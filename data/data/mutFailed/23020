function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        a6.e = a5;
    } catch(e7) {
    }
}
const v8 = new F3(1073741825, -37111);
const v9 = new F3(-2, 1073741825);
const v10 = new F3(-2, 1073741825);
class C11 extends v10 {
    static 3059815192 = v9;
    7;
    static 0 = -37111;
    set e(a13) {
        new F3(-2, -60549);
    }
    m(a19, a20) {
        if (1073741825 < v8) {
            v9[15];
        } else {
            v9[v8] = v9;
        }
        return 1073741825;
    }
}
new v10();
const v24 = new C11();
new C11();
[-449.0509769957141,1000.0,-0.0,-2.220446049250313e-16,-484.93520839634584,2.1161276634320494,4.2577141045554053e+306,-7.363764383793421e+307,2.0];
[7.126659997062676e+307,-2.0,1.0,-695409.7226212921,-2.0];
[0.5226236724164258,7.0545173396863206,-1.5346462002985627e+307,-0.0,-1.4996900462770668,-9.31293744775989e+307];
new BigUint64Array(147);
new Uint8ClampedArray(3423);
new Int16Array(3354);
function F50() {
    if (!new.target) { throw 'must be called with new'; }
    function f55() {
        for (let v58 = 0; v58 < 5; v58++) {
            function f59() {
                return v24;
            }
            Date();
        }
        return this;
    }
    Worker(f55);
}
