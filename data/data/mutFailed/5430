([127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649]).toSpliced(-1148418937, -1148418937);
const v5 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f6(a7, a8, a9, a10) {
    function f11() {
        const v12 = v5.length;
        v12 & v12;
        const v16 = new Float32Array(1334);
        v16[1283] = v16;
        return a7;
    }
    f11();
    %OptimizeFunctionOnNextCall(f11);
    return a8;
}
for (let v18 = 0; v18 < 5; v18++) {
    f6();
}
class C21 {
    toString(a23, a24) {
        a24 = "d";
        return this;
    }
    static get f() {
        let v25 = this;
        v25[98] ^= v25;
        ({"g":v25,} = v25);
        const v29 = [1.0,141599.63044947106,730.845463907873,1000000.0,-4.2811873669589365e+307,0.0,3.0];
        try { v29.forEach(-5n); } catch (e) {}
        Math.sin(-9007199254740991);
        return "d";
    }
}
new C21();
new C21();
new C21();
let v41 = -1024;
function F42(a44, a45, a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
}
const v48 = new F42();
const v49 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v50 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
function F52(a54, a55) {
    if (!new.target) { throw 'must be called with new'; }
}
class C56 {
}
const v58 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v59 = [601759695];
for (let v61 = 0; v61 < 5; v61++) {
    function f63() {
        Array().unshift();
        new Set();
        function F72(a74, a75) {
            if (!new.target) { throw 'must be called with new'; }
            F72();
        }
        try {
            v49.forEach(Float64Array);
        } catch(e78) {
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        class C81 {
        }
        const v82 = new C81();
        try {
            v82.__proto__ = F52;
        } catch(e83) {
        }
        const v84 = Symbol.toPrimitive;
        const o88 = {
            toString(a86, a87) {
            },
        };
        const o114 = {
            [522675525n](a91, a92) {
            },
            "c": v59,
            valueOf(a94, a95) {
                return a95;
            },
            [-4294967297n](a97, a98, a99, a100) {
            },
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v58,
            ...v48,
            [v84]() {
            },
            "type": C56,
            valueOf(a103, a104) {
                for (let v105 = 0; v105 < 25; v105++) {
                    Math.sin(v105 ** 2);
                }
                return Symbol;
            },
            4: "Vre",
            toString(a111, a112, a113) {
                return a112;
            },
        };
        new Float32Array();
        const v121 = [272822757,272822757,272822757];
        const v122 = [-2.0,272822757,"function"];
        const o123 = {
            __proto__: v122,
        };
        function f124() {
            return f63;
        }
        function f125(a126) {
        }
        Object.defineProperty(o123, "toString", { writable: true, enumerable: true, get: f124, set: f125 });
        v121[o123] &= 272822757;
        v41 %= -268435456;
        new Uint32Array(v50);
        return undefined;
    }
    f63();
    %OptimizeFunctionOnNextCall(f63);
}
