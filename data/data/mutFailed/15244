class C3 {
    n(a5, a6) {
        try {
            this.length = 0;
        } catch(e8) {
        }
        let v9;
        try { v9 = a5(a6, -5.0, 4.0, this); } catch (e) {}
        v9[2147483648] **= 0;
        return this;
    }
    valueOf(a11, a12) {
        return "-25236";
    }
}
const v17 = Symbol.isConcatSpreadable;
C3[v17] = C3;
v17[C3.h];
const v20 = new C3();
new C3();
new C3();
function f23() {
    return C3;
}
class C24 {
    h = C3;
    static m(a26, a27, a28) {
        +4.0;
        const v35 = f23 >>> -2.220446049250313e-16;
        const v36 = Math.tan(7);
        Math.log10(f23);
        Math.random();
        Math.cosh(v35);
        Math.imul(-2.220446049250313e-16, f23);
        return v36;
    }
}
new C24();
new C24();
const v43 = new C24();
class C44 extends f23 {
    #p(a46, a47) {
        [-9007199254740991,-13,1073741823,-15,-2129170657];
        [-268435456];
        [1073741825,-1073741824,-17508128,-15,-268435456,-44041,2147483647,6,19096];
        return C3;
    }
    m(a52, a53) {
        const o56 = {
            "maxByteLength": 129,
        };
        const v58 = new SharedArrayBuffer(129, o56);
        new BigInt64Array(v58);
        let v61;
        try { v61 = C24.m(); } catch (e) {}
        try {
            a52.#p(v20, "setSeconds", "n", v43);
        } catch(e66) {
        }
        return v61;
    }
}
new C44();
new C44();
new C44();
const v72 = new Uint16Array(255);
const v74 = v72.buffer;
v74.slice(v74, 5);
