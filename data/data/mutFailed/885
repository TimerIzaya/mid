new BigInt64Array(1480);
new Uint8Array(11);
128 >>> 128;
const v9 = new Uint8ClampedArray(128);
v9[38] = v9;
[4,-17967,-298342719,3,-2606,8540,-9007199254740991,2147483648,-1,7];
const v11 = [-4,128,1779050192,4294967295];
v11.g = 11;
v11.g = v11;
const v12 = [-16,-9223372036854775807,128,2147483648,20339,-54135,-1,32860];
const v15 = new Array(45);
try { v15.findLast(v12); } catch (e) {}
const v18 = new Set();
v18[Symbol.toPrimitive] = Array;
let v21;
try { v21 = v18.has(v18); } catch (e) {}
class C22 {
    [v18];
    #d = Uint8ClampedArray;
    a = v21;
    static #a = 45;
    static #h = v15;
    #f = v12;
    static {
    }
}
try { new C22(); } catch (e) {}
function f25(a26) {
    for (let i29 = 0, i30 = 10; i29 < i30; i29++, i30--) {
        v15[a26];
        new Date();
    }
}
f25.prototype;
new C22();
