function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = this;
    try {
        this.g = 59277;
    } catch(e3) {
    }
    try {
        this.a = 59277;
    } catch(e4) {
    }
    try {
        this.h = 59277;
    } catch(e5) {
    }
}
const v6 = new F0();
function f7(a8, a9) {
    function F10(a12, a13) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.e = a9;
        } catch(e14) {
        }
    }
    const v15 = new F10(F0, a8);
    const v16 = new F10(v15, v15);
    new F10(a8, v16);
    return v15;
}
v6.toString = f7;
const v18 = new F0();
const v19 = new F0();
Object.defineProperty(v19, Symbol.toPrimitive, { value: f7 });
const v22 = [v19,F0];
const v23 = [v19,v22];
const v24 = [v23,v18,v19,v6];
v24.toString = Symbol;
const v26 = new WeakSet();
v26.toString = f7;
function f27(a28, a29, a30, a31) {
    a28[Symbol.toPrimitive] = f27;
    const o55 = {
        [v24]: v24,
        [a28]: a31,
        "c": v26,
        "e": v22,
        [a30]: v6,
        "b": a28,
        __proto__: a30,
        m(a35, a36, a37, a38) {
            function f39(a40, a41, a42) {
                Symbol.iterator;
                const o53 = {
                    [v19]() {
                        let v46 = 10;
                        const o52 = {
                            next() {
                                v46--;
                                const v50 = v6 == 0;
                                const o51 = {
                                    "done": v50,
                                    "value": v46,
                                };
                                return o51;
                            },
                        };
                        return o52;
                    },
                };
                return a28;
            }
            f39(v23, v26, a38);
            return F0;
        },
    };
    return o55;
}
f27(v23, f27(v24, v19, v24, v19), v26, v6);
f27(v22, WeakSet, v6, v19);
function F67(a69, a70, a71, a72) {
    if (!new.target) { throw 'must be called with new'; }
    const v73 = this.constructor;
    let v74;
    try { v74 = new v73(a69, a72); } catch (e) {}
    typeof v74 === "symbol";
}
const v78 = new F67(65537, 1073741824, 0.19443453377416953, F67);
new F67(Date, 0.19443453377416953, 1073741824, v78);
