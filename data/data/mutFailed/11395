function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = -4294967296;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new v4();
new v5();
[[-945030174,512,[v4],512,-13],-945030174];
const v19 = [];
function f20() {
    const o24 = {
        toString() {
            super[this];
        },
        ...v19,
        n() {
            return this;
        },
    };
    try { o24.n(); } catch (e) {}
    return v19;
}
%PrepareFunctionForOptimization(v4);
f20();
const v27 = [-536870912,-1454443390,-11,536870887];
let v29;
try {
const t0 = 65536n;
v29 = t0(65536n);
} catch (e) {}
v27[65536n] *= v29;
v27["splice"](-650191005, -650191005, "splice");
f20();
%OptimizeFunctionOnNextCall("getFloat32");
f20();
