const v0 = [];
function f1() {
    const o35 = {
        "c": v0,
        [v0]: v0,
        "a": v0,
        "b": v0,
        [v0]() {
            function f3(a4, a5, a6) {
                function f8(a9) {
                    try {
                        v0.h = this;
                    } catch(e10) {
                        function f11() {
                            const o15 = {
                                toString(a13) {
                                    return [-2.0,-1000000.0,-Infinity,0.03714003700223023,-1.0];
                                },
                            };
                            return o15;
                        }
                    }
                }
                this.onmessage = f8;
                new a4(1);
                new Float32Array(257, this, a6, a4);
                new Int8Array(3);
            }
            const v27 = ["function","function","function"];
            const o33 = {
                "arguments": v27,
                n(a29, a30) {
                },
                "e": v0,
                set b(a32) {
                },
                "type": "function",
            };
            new Worker(f3, o33);
            return o33;
        },
    };
    return o35;
}
const v36 = f1();
const v37 = f1();
const v38 = f1();
const v40 = new WeakMap();
("6Ct").normalize();
function f43() {
    return f43;
}
const v45 = new BigUint64Array();
v45.constructor = f43;
function f46(a47, a48, a49, a50) {
    a48.b = a48;
    v36.c = a49;
    v38.c = a50;
    ("undefined").localeCompare("undefined");
    new Uint8ClampedArray(Date);
    const o66 = {
        "a": a49,
        n(a57, a58) {
            %VerifyType(v40);
            a48 ** v40;
            return this;
        },
        64: v0,
        set e(a61) {
            this.__proto__;
            const o63 = {
                "isExtensible": f1,
            };
            new Proxy(a50, o63);
        },
    };
    return o66;
}
try { new f46(v0, WeakMap, v0, v40); } catch (e) {}
f46(v38, v36, v38, v36);
f46(v38, v36, v36, v37);
f46(v37, v36, v38, v36);
[-1468469640,-277222670,-60945,39668,65537,120749635,268435456,127,2147483648];
try { v40.findLastIndex(v37); } catch (e) {}
[5417,127,48164,1868753347,8,-2018552968];
[1073741823,2147483647,64,41709,13,8,-4294967297,-2147483648];
function f75() {
    for (let v76 = 0; v76 < 5; v76++) {
        function f77() {
            return v76;
        }
        f77.a = v76;
    }
    return f75;
}
const v79 = new v0();
const v82 = new Uint8Array(2);
const v84 = new Uint32Array(v0);
function f85(a86, a87, a88, a89) {
    try { a86.apply(); } catch (e) {}
    new a86(a89, a87, v79);
    const o95 = {
        "b": a86,
        ...v82,
        n(a93, a94) {
            v84[a86] = v84;
            return a94;
        },
    };
    o95[1] = o95;
    return a86;
}
for (let v96 = 0; v96 < 500; v96++) {
    f85(Uint8Array);
}
0 == 268435440n;
