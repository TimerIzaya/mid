class C3 {
    constructor(a5, a6) {
        const v7 = a6--;
        v7 >>> v7;
        function f9(a10, a11, a12) {
            a12 >> a12;
            const v14 = a10 + a10;
            v14[832] = v14;
            -a11;
            ~a12;
            const o17 = {
                ["10"]: -628198.3292161745,
                "d": a6,
                [a10]: a12,
            };
            return o17;
        }
        f9.e = f9;
        let v18;
        try { v18 = f9(C3, "10", a5); } catch (e) {}
        v18[10];
        const v20 = f9(-65536, a5, -628198.3292161745);
        v20.d = v20;
        f9(-628198.3292161745, -65536, v20);
        f9(f9, -65536, "10");
    }
    f;
}
const v23 = new C3(-628198.3292161745, -628198.3292161745);
const v24 = v23?.constructor;
try { new v24(-65536, C3); } catch (e) {}
let v26;
try { v26 = new v24(C3, C3); } catch (e) {}
v26.f = v26;
const v27 = new C3(v23, C3);
const v28 = new C3(v27, v23);
const v29 = v28?.__defineSetter__;
try { new v29(v26, v27); } catch (e) {}
[-Infinity,5.236212417491849];
const v32 = [-1000000.0,0.3841138978853982,3.0,-110537.91987089312,-5.696486292708778e+307,-1.7976931348623157e+308];
try { v32.keys(); } catch (e) {}
const v34 = [-2.2250738585072014e-308,1.4187208905711568,5.0,-8.74169473040067,599008.9582060161];
const v36 = new Map();
try { v36.set(v34, v34); } catch (e) {}
try { Set.apply(v23, v23); } catch (e) {}
new Set();
class C41 {
}
C41.length = C41;
let v42;
try { v42 = C41.bind(v27); } catch (e) {}
v42.name;
const v44 = new C41();
const v45 = v44?.constructor;
try { new v45(); } catch (e) {}
let v47;
try { v47 = new v45(); } catch (e) {}
const v48 = v47?.constructor;
try { new v48(); } catch (e) {}
const v50 = v44.__lookupGetter__;
class C51 {
}
C51.name = C51;
const v53 = new Float32Array(Float32Array);
class C54 {
}
C54.d = C54;
let v55;
try { v55 = new C54(); } catch (e) {}
const v56 = v55?.constructor;
try { new v56(); } catch (e) {}
try { C54.apply(C51, v53); } catch (e) {}
let v59;
try { v59 = v50(); } catch (e) {}
-4294967297n == -4294967297n;
const v63 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
v63.g = v63;
const v64 = [601759695];
function f66(a67, a68, a69, a70) {
    const v72 = arguments.toString();
    const v73 = v72[13];
    try { v73.trimLeft(); } catch (e) {}
    function f75() {
        const t83 = "Vre";
        t83[2] = "Vre";
        const v77 = ("Vre")?.toLocaleUpperCase;
        try { v77(); } catch (e) {}
        v77.g = v77;
        try { new v77(); } catch (e) {}
        let v80;
        try { v80 = ("Vre").fixed(); } catch (e) {}
        let v81;
        try { v81 = v80.localeCompare(v72); } catch (e) {}
        v81 & v81;
        v81 - v81;
        let v85 = -268435456;
        const v86 = v85--;
        v86 + v86;
        let v88 = v85 + v85;
        v88++;
        -v88;
        const o107 = {
            "c": -4294967297n,
            [522675525n](a92, a93) {
            },
            ..."Vre",
            "maxByteLength": -128,
            "c": v64,
            valueOf(a95, a96) {
            },
            "e": -4294967295,
            "e": v85,
            "maxByteLength": -4294967295,
            "arguments": v63,
            ...v64,
            "type": "Vre",
            ..."Vre",
            valueOf(a98, a99) {
                this[2] = this;
                a98[522675525];
                a99 | a99;
                this[4] = this;
                a98.c;
                return a99;
            },
            ..."Vre",
            4: "Vre",
            "c": v85,
            "type": "Vre",
            toString(a104, a105, a106) {
                return a106;
            },
            6: v85,
        };
        try { o107.valueOf(o107, -128); } catch (e) {}
    }
    f75();
    %OptimizeFunctionOnNextCall(f75);
    return -4294967297n;
}
for (let v110 = 0; v110 < 5; v110++) {
    const v111 = f66();
    const v112 = v111 > v111;
    v112 || v112;
}
%OptimizeFunctionOnNextCall(f66);
const v114 = f66(-4294967297n, f66, v63, v59);
v114 == v114;
