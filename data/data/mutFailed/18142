function f6() {
    return 484000235;
}
class C9 extends Array {
}
const o10 = {
};
function f13() {
    return 2;
}
function F14(a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    function f18(a19) {
        o10[a19] = a19;
    }
    Object.defineProperty(this, "b", { writable: true, configurable: true, enumerable: true, set: f18 });
    this.f = "p";
    try {
        this.b = a16;
    } catch(e20) {
        const v22 = new BigUint64Array();
        const v25 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
        const v27 = new Uint32Array();
        const v28 = [601759695];
        const v29 = [1073741824,1073741823,1376142744,1073741825];
        function f31(a32, a33, a34, a35) {
            const v36 = a32?.constructor;
            try { new v36(a32, a35, v29); } catch (e) {}
            arguments.length;
            function f40() {
                try { ("Vre").charAt(4096); } catch (e) {}
                let v43;
                try { v43 = ("Vre").codePointAt(v25); } catch (e) {}
                v43 ^ v43;
                let v45 = Float64Array;
                v45 = a33;
                b = v25;
                let v46 = v25.length;
                v46++;
                try {
                    v29.forEach(a33);
                } catch(e49) {
                }
                const o60 = {
                    "c": -1468100051n,
                    "c": v28,
                    valueOf(a51, a52) {
                        return a51;
                    },
                    1073741824: v27,
                    [Uint32Array](a54, a55, a56, a57) {
                        eval();
                    },
                    "arguments": 5,
                    256: a35,
                };
                o60[256];
            }
            f40();
            const v64 = Array();
            try { v64.findLast(v22); } catch (e) {}
            v64.unshift();
            try { Int8Array.of(); } catch (e) {}
            const v69 = new Int8Array();
            v69.buffer.slice(2147483648);
            new Int32Array(1024);
            const v76 = (5)[3];
            v76 + v76;
            1024 * v76;
            for (let v79 = 0; v79 < 5; v79++) {
            }
            %OptimizeFunctionOnNextCall(f40);
            try { v29["find"](..."find", a35, ...v28, ...v29, ...522675525n); } catch (e) {}
        }
        f31(v27);
        f31(5, v22, 522675525n, f31);
    }
    try {
        this.f = a17;
    } catch(e84) {
    }
    try {
        for (let v85 = 0; v85 < 25; v85++) {
        }
        const v88 = new BigInt64Array(5);
        function f89() {
            return v88;
        }
        this.c = a16;
    } catch(e90) {
    }
}
new F14(-1468100051n, -1468100051n);
new F14("p", -9007199254740990n);
new F14("message", 4294967295n);
const v94 = [-1000000.0,0.1600379490765781,-1.6243694690977962e+307,817210.0157459241,1.0,5.0,0.9202958446582343,-1.7976931348623157e+308,-382.2774365702321,-5.737866676165018e+307];
class C98 {
    static #e;
    m(a100, a101, a102, a103) {
        v94.#e;
        a101.#e = -1;
    }
}
