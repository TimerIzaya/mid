const v2 = new Uint8Array(129, Uint8Array, Uint8Array, Uint8Array);
const v5 = new Uint8Array(0);
class C6 {
    [C6] = v5;
    static #h = Uint8Array;
    static [129] = v5;
    h = C6;
    static 4197672832 = v2;
}
const v8 = [];
const o9 = {
    "arguments": v8,
    "type": "function",
};
new Float64Array(64);
function f13(a14, a15, a16) {
    const o27 = {
        set a(a18) {
            this | 129;
        },
        ...v5,
        [Uint8Array](a22, a23, a24) {
            this[a16];
            !v2;
            return v5;
        },
        __proto__: v2,
    };
    return o27;
}
f13(64, f13(64, 0, 64), 129);
f13(129, v5, 64);
let v32 = 0;
v32 < 8;
v32++;
for (let v38 = 0; v38 < 5; v38++) {
    v38 >= v38;
}
function f40() {
    for (const v44 of Array(4087)) {
        const v45 = `
        `;
        eval();
        function f48() {
        }
    }
}
%PrepareFunctionForOptimization(f40);
%OptimizeFunctionOnNextCall(f40);
f40();
const v51 = new SharedArrayBuffer();
v51.constructor;
new BigUint64Array(6);
