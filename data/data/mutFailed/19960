4.52045988111999 >= 4.52045988111999;
const v7 = new Uint8ClampedArray();
try { v7.entries(); } catch (e) {}
class C9 {
    constructor(a11, a12, a13, a14) {
        a11.BYTES_PER_ELEMENT = a11;
        a12.prototype;
        const v16 = this.constructor;
        try { new v16(a13, a14, a11, v16); } catch (e) {}
        for (let v18 = 0; v18 < 5; v18++) {
            v7[v18] = a14;
        }
    }
}
C9.name;
new C9(Uint8ClampedArray, Uint8ClampedArray, Uint8ClampedArray, C9);
[536870888,7,-10,41928,-5,-62408];
const v23 = [268435456,-4294967297,-9724,-193411502,268435440];
const v24 = [38010,640396051,2147483649];
const v27 = new Int8Array(3938);
let v28 = 3;
let v29 = 0;
for (let i = 0; i < 5; i++) {
    [...v28] = v27;
    v29++;
    try {
        v23.length = 1;
    } catch(e32) {
    }
    function F33(a35) {
        if (!new.target) { throw 'must be called with new'; }
        const v37 = this.constructor.bind(F33, F33);
        try { new v37(); } catch (e) {}
    }
    new F33();
}
[4,257,-1758168261,1621418748,9007199254740991,-12,-8,-65535,42424,-1687245141];
[45685,9,64094,2147483649,9223372036854775807,1,65537,268435456];
[-6,1];
function f43(a44, a45, a46) {
    const o59 = {
        "b": v24,
        "f": a46,
        "a": v24,
        n(a48, a49, a50) {
            try {
                super.round(a44);
            } catch(e55) {
            }
            [0.26436075485138555,-1000000.0,9.669474465632966e+307,2.4449803002972956];
            [-3.0,4.0,9.973982875303577e+307,1.0579023295232315e+308,1000000.0,1000000.0,-1e-15];
            return [4.0,-147860.4134131258,0.0,3.0];
        },
    };
    return o59;
}
f43(-7, NaN, 4.52045988111999);
f43(2147483648, 4.52045988111999, 1000000.0);
f43(-7, 4.52045988111999, 4.52045988111999);
function F63(a65, a66, a67, a68) {
    if (!new.target) { throw 'must be called with new'; }
    const v69 = this.constructor;
    try { new v69(); } catch (e) {}
    try {
        const v73 = a67 ** 268435456;
        a67 << 268435456;
        v73 | a67;
        Math.clz32();
    } catch(e77) {
    }
}
new F63();
new F63();
