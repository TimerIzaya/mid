const v0 = [];
class C1 {
    static #a;
    static #p(a3) {
        this.#p();
    }
    1073741824;
    static h;
    2989640501;
    constructor() {
        const v6 = [this,this,this,...v0,this];
        v6[v0] = v6;
        try {
            super.pop(C1, v6, v0, v0, v6);
        } catch(e8) {
        }
    }
}
const v9 = new C1();
const v11 = ("Vre").fixed();
function f12() {
    return f12;
}
function f13() {
    for (let v14 = 0; v14 < 5; v14++) {
        Array(36862, v11, v11 & v14);
    }
    return f12;
}
const v19 = new C1();
v19[2989640501] = v19;
new C1();
function f21() {
    return v0;
}
-9223372036854775808 & -9223372036854775808;
-1024 + -1024;
new Int32Array();
const v30 = new BigUint64Array();
try { v30.with(Map, v9); } catch (e) {}
[-1024,2147483649,2147483649,-1024,-9223372036854775808];
const v34 = [v11];
const v35 = [v34,v19,-1024,v34,v9];
let v36;
try { v36 = v35.toString(); } catch (e) {}
new v36(Uint8Array, Uint8Array, Uint8Array);
function f39(a40, a41, a42, a43) {
    let v44 = a42++;
    const v45 = v44--;
    const v46 = a40++;
    const v47 = v45 % a42;
    const o48 = {
        ...v9,
    };
    o48[2];
    try { (-9223372036854775808).n(v47, v46); } catch (e) {}
    return f21;
}
for (let v51 = 0; v51 < 500; v51++) {
    f39();
}
