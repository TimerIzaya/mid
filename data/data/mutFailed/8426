const v1 = new WeakSet();
class C2 extends WeakSet {
    [v1];
    constructor(a4) {
        super(v1);
        let v5 = this[0];
        function f6() {
            return v1;
        }
        Math.log1p(v5);
        -4294967295 | 4294967297;
        -v5;
        const v14 = !500.4487677064717;
        --v5 >>> 4294967297;
        Math.hypot(v14);
    }
}
const v18 = new C2(WeakSet);
const v19 = new C2(C2);
const v20 = new C2(WeakSet);
function f21() {
    return v18;
}
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a24;
    } catch(e26) {
    }
    try {
        this.b = WeakSet;
    } catch(e27) {
        a25 = e27;
        const v28 = --e27;
        var h = v1;
        try { this.getInt32(a25, a25); } catch (e) {}
        const v33 = +v28;
        const v34 = v33 && v33;
        f21 >>> v28;
        v34 & v33;
    }
    try {
        this.h = a24;
    } catch(e37) {
    }
}
new F22(v19, v18);
const v39 = new F22(v20, v20);
new F22(v39, v1);
new Int8Array(2627);
new BigUint64Array(6);
const v49 = new Uint32Array(14);
const v50 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v53 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v54 = [601759695];
const v55 = [1073741824,1073741823,1376142744,1073741825];
function f57(a58, a59, a60, a61) {
    function f62() {
        const v64 = `
            try {
                new F22(v18, v49);
            } catch(e66) {
            }
        `;
        eval(v64);
        const v70 = v50.length;
        try {
            v55.forEach(a59);
            -4294967295 || f62;
            let v74 = -65536;
            const v76 = ++v74;
            const v77 = f62 | v76;
            Math.max(-284711.29720351216);
            v77 << v76;
        } catch(e80) {
        }
        const v81 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v83 = Symbol.toPrimitive;
        const o89 = {
            toString(a85, a86) {
                const v87 = a61 && a59;
                a85 *= v83;
                return v87 <= v81;
            },
        };
        const o110 = {
            "c": -4294967297n,
            [522675525n](a92, a93) {
            },
            "c": v54,
            valueOf(a95, a96) {
                return "Vre";
            },
            [v70](a98) {
            },
            [-1]: 2684,
            "maxByteLength": -268435456,
            "b": -4294967295,
            [-4294967297n](a100, a101, a102, a103) {
                eval();
            },
            "e": -4294967295,
            "arguments": v53,
            set b(a107) {
            },
            256: a61,
            m(a109) {
                return a109;
            },
            ...v54,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
        };
        return a58;
    }
    f62();
    %OptimizeFunctionOnNextCall(f62);
    return 2684;
}
for (let v112 = 0; v112 < 5; v112++) {
    f57();
}
