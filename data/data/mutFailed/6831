class C3 {
    static f = 53273;
    static get a() {
        this[1000.0] /= 53273;
        const v5 = super.h;
        let v6;
        try { v6 = v5(53273, 268435439, v5, v5, this); } catch (e) {}
        let v7;
        try { v7 = new v6(v6, v5); } catch (e) {}
        const v8 = typeof v7;
        v8 === "boolean";
        const o20 = {
        };
        o20[Uint32Array] -= -2147483649;
        256 << -65535;
        +20572;
        return v8;
    }
    constructor(a26, a27) {
        super();
        try {
            a26.__proto__ = 53273;
        } catch(e28) {
        }
        const t24 = 53273;
        new t24();
    }
    static 9;
}
try { new C3(); } catch (e) {}
new C3();
const v32 = new C3();
const v33 = new C3();
const v37 = [-1440504730,15059,-128,65536,33714,-51192,-268435456,37915];
[10000,-13,1073741825,1602065818,65536,16];
const v39 = [9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
try { v39.sort(v39); } catch (e) {}
[901134577,512,16,-13797,-1644674640,-4];
function F42(a44, a45) {
    if (!new.target) { throw 'must be called with new'; }
    const v46 = this?.constructor;
    try { new v46(this, a45); } catch (e) {}
    Symbol.toPrimitive;
    class C50 {
    }
    new C50();
    this.c = a44;
}
new F42(F42, F42);
const v53 = new F42(18074, 28602970);
v53.b = v53;
const v54 = new F42(18074, 18074);
new F42(18074, 28602970);
const v59 = new Uint8Array(v39, v54, 201);
new Uint8Array(268435440);
Uint8ClampedArray.b = Uint8ClampedArray;
v39[6] = v59;
v37.__proto__;
const v66 = new Uint8ClampedArray(129);
v66.lastIndexOf();
const v68 = v33?.constructor;
try { new v68(); } catch (e) {}
try { ("m").replaceAll(v32, 1000.0); } catch (e) {}
try { ("undefined").substring(-16396, -16396); } catch (e) {}
const v79 = [-1.5424212036356715e+308];
const v80 = v79.shift();
v80 - v80;
v79[536870887n] = v79;
