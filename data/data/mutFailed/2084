const o3 = {
    "execution": "async",
    "type": "minor",
};
const v5 = new BigUint64Array(9);
let v6 = 1360;
v6--;
new Int16Array(v6);
try { ("async").toUpperCase(); } catch (e) {}
/foo(?!bar)baz/gvimy;
const v17 = /xyz?[\cz]/guy;
/((((.).).).)+/vy;
try { new Uint32Array(v5, Int16Array, 5); } catch (e) {}
new Uint32Array(5);
[-15,268435456];
[-9007199254740992,9,8,-4,-2,-3,-9223372036854775807,181636252];
let v26 = [16,1,1883010117,256,-9223372036854775807,-4,268435440];
const v27 = v26?.filter;
const v28 = [1e-15,1.0,-3.0,1.43935350979979e+308,-0.0];
v26 = v28;
v28["some"](v27, v17);
let [,...v34] = v28;
536870912n << 536870912n;
class C37 {
    get e() {
        ~-7673;
    }
}
try { new v27(BigUint64Array); } catch (e) {}
try { ("symbol").normalize(); } catch (e) {}
const v53 = new Float32Array();
let {...v54} = v53;
class C55 {
    static {
        const v57 = super[this];
        try { v57.join(C55, C55, v57); } catch (e) {}
    }
}
498375733 !== 498375733;
-4294967295 - -4294967295;
-4294967295 << -12;
