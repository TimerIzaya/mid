const v1 = [];
class C2 {
    static get c() {
        try {
            super.getOwnPropertyNames();
        } catch(e5) {
        }
        return v1;
    }
    constructor() {
        this[v1] = this;
        this[v1] %= this;
    }
    static e;
    [v1];
}
const o9 = {
};
function f10() {
}
class C12 extends Set {
}
new C12(f10, C2);
new Float64Array(370, C12, -2.220446049250313e-16, 370);
new Number(14);
new Uint8ClampedArray(-9);
const v25 = new Uint16Array(2);
const v27 = new Int32Array(v25);
v27.fill(Set);
class C30 extends TypeError {
}
function f31() {
    return -0.0;
}
f31.length = f31;
