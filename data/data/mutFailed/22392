let v1 = new WeakMap();
const v2 = /f/vim;
/(\1a)/guimy;
const v4 = /y6a\W*/vdy;
function F5(a7) {
    if (!new.target) { throw 'must be called with new'; }
    try { a7(); } catch (e) {}
    const v11 = 12 >> F5;
    Math.min(12);
    Math.tanh(12);
    v1 % v11;
    try {
        this.c = v4;
    } catch(e15) {
    }
}
const v16 = new F5(v2);
new F5(v2);
new F5(v4);
const v22 = /D(?<=)/umy;
const v23 = /va[^a]/udim;
const v24 = /U(?:a{5,1000000}){3,1000000}/vdims;
function f25() {
    v4 instanceof F5;
    v1 += v1;
    return -4.0;
}
v24.set = f25;
class C27 {
    [v22] = v24;
    static #a;
    d = v23;
    a = C27;
    #f = v16;
    static #e;
}
const v28 = new C27();
const v29 = new C27();
v29.configurable = v29;
function F30(a32, a33, a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    a35.set = f25;
    a35.e = a35;
    const o36 = {
    };
    o36.f.charCodeAt(v28, a32);
}
const v39 = new F30(v24, F30, v23, v29);
v39.e = v24;
new F30(v29, v29, v23, v39);
