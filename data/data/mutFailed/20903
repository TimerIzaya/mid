let v0 = 9;
new Int32Array(v0);
let v3 = 3724;
const v4 = v3--;
const v7 = [v3,v4,v0];
const v8 = Reflect.construct(Int32Array, v7, Int32Array);
try {
    const o9 = {
    };
    Reflect.defineProperty(o9, v4, o9);
} catch(e12) {
}
const v13 = new Uint8Array(v4);
v13.buffer >>= v8;
let v15;
try { v15 = v8(v8, 129, Uint8Array); } catch (e) {}
const v16 = v15.length;
v15[v16] = v7;
v0 *= v16;
new v8(129);
[-2.220446049250313e-16,0.5099079387676663];
const v20 = [2.2250738585072014e-308,-754599.5272807087,7.765822688839365e+307,818486.6850434267,-0.0,1000000000000.0,4.0,-1e-15,1000000.0,1000000000.0];
const o28 = {
    "execution": "sync",
    "type": v8,
};
gc(o28);
v20.g = v20;
[0.7268357110404056,-1.1186562315664088e+308,-97.67768231231798];
const v32 = v16.reject(Promise);
try { v32.catch(Int32Array); } catch (e) {}
