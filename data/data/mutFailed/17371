const v1 = new WeakSet();
[-1000000000.0,0.9074042656837779,9.658811555719218,-Infinity];
const v3 = [1000000000.0];
v3.g = v3;
const v4 = [490.63104068095913,677.7583764236686,1.7976931348623157e+308,-1000.0,0.19248736788066778,616009.9143974814];
class C5 {
    static #valueOf(a7, a8) {
        super.h /= a8[65537];
        try {
            v1.a = v1;
        } catch(e10) {
        }
        return v3;
    }
    static [WeakSet];
    static 4294967295;
    #h;
    #g;
}
let v11;
try { v11 = new C5(); } catch (e) {}
const v12 = new C5();
const v13 = v12?.__lookupGetter__;
try { new v13(WeakSet); } catch (e) {}
const v15 = new C5();
const v16 = v15?.constructor;
try { new v16(); } catch (e) {}
const v18 = new C5();
function f19() {
    return v12;
}
let v20;
try { v20 = f19.constructor(v12); } catch (e) {}
function F21(a23, a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a23;
    } catch(e27) {
    }
    try {
        this.b = a25;
    } catch(e28) {
    }
}
const v29 = new F21(v4, C5, v1, v4);
const v30 = new F21(v29, C5, v29, v29);
new F21(v12, v18, v30, v30);
[65536];
const v33 = [-694,-6,1073741824,-14,3,11,3,-7,5,-1214514770];
try { v33.map(v1); } catch (e) {}
const v35 = [1073741824,-7,-1283755539,-726309105,10,13,-4294967295,12,512,40630];
const v36 = [];
function f37() {
    -v36;
    return f37;
}
class C39 {
    static {
        const o41 = {
        };
        o41.c = o41;
        const v43 = new Proxy(this, o41);
        v43.g = v43;
        super.g &= v20;
        v11[1] = v15;
        let [,,v44] = v36;
        v44[v44] = o41;
        try {
            v1.delete(this);
        } catch(e46) {
        }
    }
    p(a48, a49) {
        let v50;
        try { v50 = new this(a49, this, a48); } catch (e) {}
        super.g = v33;
        return Reflect.construct(v50, [v33,v35], v50);
    }
    a;
}
try { C39.apply(v18, C5); } catch (e) {}
const v55 = new C39();
const v56 = new C39();
const v57 = new C39();
[-2.9700017742911022,795135.542646985,938.533418121023,-974148.680744386,-1.7976931348623157e+308,-300.6481185564369];
const v59 = [483707.38277358306];
const v60 = [2.220446049250313e-16,-Infinity,1.278332587799012,711290.6941419018,0.0,-Infinity,-1000.0,2.2250738585072014e-308];
const v61 = [v57,v35,v56];
[v60];
[v60,v59,v61,v56,v57];
2147483648 - 2147483648;
function f67() {
    let v68 = 352326470;
    v68--;
    class C71 {
    }
    let v72 = 127;
    v72--;
    const v75 = `
        try {
            new Float64Array(v72);
        } catch(e77) {
        }
    `;
    let v78 = -65535;
    const v79 = v78 * v78;
    v78 / v78;
    const o159 = {
        __proto__: v68,
        next() {
            v78--;
            const v84 = v78 == 0;
            const o85 = {
                "done": v84,
                "value": v78,
            };
            return o85;
        },
        ...v68,
        /*
        __proto__: 1261703539,
        */
        "f": v78,
        m(a87) {
            --f19;
            const v89 = [-613090157,1073741824,1083017914,49437,1205485125,-9007199254740991,2147483649];
            [65535,-9007199254740992,-256,-1633759757];
            [6];
            v1[v55] ^= v79;
            a87.h = a87;
            const o92 = {
            };
            let v93 = 10;
            for (; v93--;) {
                v89["toString"]();
            }
            function f97(a98, a99, a100) {
                function f102(a103) {
                    a99[5] ||= f67;
                }
                this.onmessage = f102;
                const v106 = new SharedArrayBuffer(35);
                new BigUint64Array(v106);
            }
            try {
                o92.e = v78;
            } catch(e109) {
                const v113 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v113, o92);
            }
            try {
                const o115 = {
                };
                o115.c = o115;
                o115.e = 1261703539;
                o115.g = a87;
            } catch(e116) {
            }
            const v119 = -9007199254740991 >> -9007199254740991;
            v119 - v119;
            Math.sin(-9007199254740991);
            class C124 {
                o(a126, a127, a128, a129) {
                    class C130 {
                        static 44 = "EV";
                    }
                    new C130();
                    new C130();
                    new C130();
                    return 0;
                }
            }
            try { new C124(); } catch (e) {}
            new C124();
            const v138 = new Int8Array(3938);
            v138[3182] = v138;
            let v139 = 3;
            const v140 = v139++;
            v140 << v140;
            const v143 = 0 >> 0;
            v143 + v143;
            for (let i = 0; i < 5; i++) {
                0 < 8;
            }
            const o147 = {
            };
            o147.h = o147;
            o147.e = 1261703539;
            try {
                const o148 = {
                };
            } catch(e149) {
                function F150(a152, a153, a154, a155) {
                    if (!new.target) { throw 'must be called with new'; }
                    a152.propertyIsEnumerable();
                }
                -3 ^ v143;
            }
        },
    };
    try { o159.m(o159); } catch (e) {}
    class C162 {
    }
    const v163 = new C162();
    const v165 = new Float32Array(v163, "nt", Float32Array);
    const t205 = "nt";
    const v166 = delete t205[v165];
    let v167;
    try { v167 = v163.floor(v166); } catch (e) {}
    for (const v168 in v167) {
    }
}
f67();
f67();
function f171(a172, a173, a174, a175) {
}
function f176(a177, a178) {
    const o181 = {
        set b(a180) {
        },
    };
}
const v182 = f176?.constructor;
try { new v182(v56); } catch (e) {}
function F184(a186, a187, a188) {
    if (!new.target) { throw 'must be called with new'; }
}
try {
} catch(e189) {
}
function F190(a192) {
    if (!new.target) { throw 'must be called with new'; }
}
