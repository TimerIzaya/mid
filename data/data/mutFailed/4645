class C3 {
    d = C3;
    static c;
    #e;
    static #b;
    e = C3;
    n(a5) {
        let v4 = this;
        let v6;
        try { v6 = a5("getOwnPropertyDescriptors", v4, "getOwnPropertyDescriptors", a5, a5); } catch (e) {}
        super[v4 = "getOwnPropertyDescriptors"];
        Object.defineProperty(v6, 2147483649, { writable: true, configurable: true, enumerable: true, value: a5 });
        v4[1878489562] <<= 1000.0;
        try {
            v4.substring(15);
        } catch(e15) {
        }
        try {
            super.m();
        } catch(e17) {
        }
        const v18 = new Array(1);
        return v18;
    }
    static #a;
    static #h;
    static #d = 1000.0;
    0;
}
new C3();
new C3();
new C3();
const v24 = new BigUint64Array(3314);
new BigUint64Array(2516);
let v28 = 1579;
new Uint32Array(v28);
function f32() {
    const v35 = Array(4087, -2.220446049250313e-16);
    v35[4037] = v35;
    return Array;
}
Uint32Array instanceof f32;
v28 |= 3314;
for (let v38 = 0; v38 < 100; v38++) {
    Symbol("getOwnPropertyDescriptors");
}
const v40 = Symbol.species;
v24[v40] = C3;
const v44 = `
    try { ("async").replace("getOwnPropertyDescriptors", "getOwnPropertyDescriptors"); } catch (e) {}
`;
eval(v44);
const o48 = {
    "h": "minor",
    __proto__: Symbol,
    ...C3,
    "d": -53843,
    "e": Uint32Array,
    "execution": "async",
    "type": "minor",
};
gc(o48);
%PrepareFunctionForOptimization(f32);
f32();
%OptimizeFunctionOnNextCall(f32);
v40[Symbol.replace] = -2.220446049250313e-16;
const v53 = new BigUint64Array(-53843, 3314);
new BigUint64Array(v53, -53843, v28);
f32();
