const v2 = new Uint8ClampedArray(127);
new v2(9);
new Int16Array(1024);
[268435440,14,218731719,-268435456,4294967295,2147483649,12616];
[-2,536870888,3,-1,1342540263,16,1131452457,1498334136,-506407344];
[-4096,128,-9007199254740992,14,65536,-58215,2147483649,-15451];
/(Rds(?<=))/gusy;
/(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10*/udim;
/(x)(x)(x)\2/dmy;
("entries").toUpperCase();
const v2 = new Float64Array(3827);
switch (Float64Array) {
    default:
        Math.expm1(9);
        Math.asinh(9);
        9 - 9;
        -9;
        break;
}
const v13 = new BigInt64Array(127);
const v16 = new Int32Array(127);
function f17(a18, a19, a20) {
    let v21 = 1421;
    const v23 = new BigUint64Array(v21);
    const v25 = new BigInt64Array(127);
    function f26(a27, a28, a29) {
        const o40 = {
            __proto__: v25,
            "a": BigInt64Array,
            "e": Int32Array,
            [v21](a31, a32, a33) {
                a29 > v23 ? a29 : v23;
                typeof v23 === "object";
                try {
                    v21 = a28;
                } catch(e39) {
                }
                return this;
            },
        };
        return o40;
    }
    const o58 = {
        1: Float64Array,
        "c": BigInt64Array,
        set h(a42) {
            try {
                v2.toString = a42;
            } catch(e43) {
                const v48 = new Uint32Array();
                async function f49(a50, a51, a52) {
                    const v53 = await v48;
                    let v54;
                    try { v54 = v53.lastIndexOf(7, 127, v53); } catch (e) {}
                    return v54;
                }
                f49(-4294967295, 127, 4);
            }
            try {
                v16.findIndex(a42);
            } catch(e57) {
            }
        },
        ...v16,
        "g": a19,
        "d": 127,
    };
    return o58;
}
const v59 = f17(3827, 127, 127);
const v60 = f17(127, 127, 127);
const v61 = f17(127, 127, 3827);
function f62(a63, a64) {
    const o82 = {
        "f": a63,
        "b": a63,
        "c": 127,
        [Int32Array]: v61,
        get b() {
            for (let v66 = 0; v66 < 36; v66++) {
            }
        },
        [127]: Int32Array,
        set a(a68) {
            try {
                new f17(1285950814, 127, 3827);
            } catch(e71) {
            }
        },
        get d() {
            this[this];
            3827 || Int32Array;
            return a64;
        },
        "g": a63,
        "e": a64,
        9: a63,
        [v60]: v61,
        ...v61,
        [v59]() {
        },
        valueOf(a77) {
        },
        __proto__: v2,
        ...v61,
        /*
        __proto__: v13,
        */
        set h(a79) {
        },
        "g": v61,
        valueOf(a81) {
        },
    };
    return o82;
}
f62(127, 127);
f62(127, 127);
f62(127, 127);
let v87 = new BigInt64Array();
let v88 = 171;
const v90 = new Int16Array(v88);
new Set();
const v93 = new v90();
for (let v94 = 0; v94 < 8; v94++) {
    v93.length = v94;
}
const v96 = new Int8Array();
try {
    v96.h = 628n;
} catch(e98) {
}
function f99() {
    return f62;
}
function f100(a101) {
    const v102 = [339220.6328561967,911358.6181931046,-5.0];
    v102[1] = v102;
}
Object.defineProperty(v96, "valueOf", { configurable: true, get: f99, set: f100 });
let v103 = -9007199254740990;
let v104 = v96 <= v103;
({"byteLength":v88,"byteOffset":v103,"e":v87,...v104} = v90);
