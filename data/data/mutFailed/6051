-6 + -6;
class C7 {
    #d = 768291592;
    [9] = 768291592;
    static n(a9, a10) {
        this.d ^= a9;
        let v11;
        try {
        const t0 = 40722;
        v11 = new t0(a9, this);
        } catch (e) {}
        let v12;
        try { v12 = new v11(a9, 9, 9); } catch (e) {}
        return v12;
    }
    static [768291592] = 42853;
    static #a;
    [-6] = 4096;
    a;
}
const t20 = (-6).length;
new t20();
new C7();
new C7();
class C17 {
    static #e;
    static e = -6;
    static {
        this.prototype;
        try {
            this.#e = this;
        } catch(e20) {
        }
        -559377378 >> -559377378;
    }
    [-6];
}
const v25 = new C17();
const v26 = v25?.constructor;
try { new v26(); } catch (e) {}
const v28 = new C17();
v28?.constructor;
try {
const t0 = 40722;
new t0();
} catch (e) {}
const v31 = new C17();
const v34 = new Uint8ClampedArray(3);
class C35 {
    constructor(a37, a38, a39, a40) {
        for (let v41 = 0; v41 < 5; v41++) {
            ~v41;
            v34[v41] = a40;
        }
    }
}
try { new C35(3, C35, v31, 3); } catch (e) {}
const v44 = new C35();
const v45 = v44?.constructor;
try { new v45(v31, C7, -6, v25); } catch (e) {}
