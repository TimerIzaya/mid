[-1440504730,15059,-128,65536,33714,-51192,-268435456,37915];
[10000,-13,1073741825,1602065818,65536,16];
[1073741825,18426,536870912];
const v6 = [-10,-10,-6,16,22303,-14,-14,536870887,-3];
const v7 = [9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
let v8;
try { v8 = v7.sort(v7); } catch (e) {}
([901134577,512,16,-13797,-1644674640,-4])[5];
function F11(a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    a13.e = a13;
    const v15 = this?.constructor;
    try { new v15(this, a14); } catch (e) {}
    ~a14;
    try {
        this.c = a13;
    } catch(e18) {
    }
}
try { new F11(F11, F11); } catch (e) {}
const v20 = new F11(28602970, 28602970);
v8.b = v20;
const v21 = new F11(18074, 18074);
const v22 = new F11(18074, 28602970);
const v25 = new Float32Array(1000);
let v28;
try { v28 = new Uint8Array(v7, v21, 268435440); } catch (e) {}
new v28(268435440);
Uint8ClampedArray.b = v8;
v7[6] = v28;
v7.__proto__;
new v28(129);
v6.lastIndexOf();
v22[6] = v25;
