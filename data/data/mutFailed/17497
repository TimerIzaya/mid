function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this[F0];
        7 && F0;
        this.d = 7;
    } catch(e8) {
    }
    try {
        this.b = F0;
    } catch(e9) {
    }
    try {
        this.f = 7;
    } catch(e10) {
    }
}
const v11 = new F0();
const v12 = new F0();
const v13 = new v11();
const v14 = [-62261,1073741824,-20732,16918,4,-65535,9,-11,-4294967295,-2];
const v15 = [12,256,-30859,8,-1024,-1819081374,-234723563,11,268435441];
[-4294967296,257,-14,5];
try {
    v15.h = v11;
} catch(e17) {
}
let v18;
try { v18 = v15.sort(v12); } catch (e) {}
new Uint8Array(868);
new Uint8Array(268);
new Float32Array(1057);
[-1.7976931348623157e+308,-1.7976931348623157e+308,v13,1.7976931348623157e+308];
[F0,1.7976931348623157e+308,5.689658896560346,v14];
[v18,F0];
[v13];
[v12,v11];
[v13,1.7976931348623157e+308,F0,v11,F0];
const o44 = {
    ...this,
    [Uint8Array](a39, a40) {
        return -256;
    },
};
