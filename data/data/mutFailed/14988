[];
function f4(a5) {
    const o20 = {
        414431637: a5,
        "d": "19255",
        "c": "-9007199254740991",
        "h": a5,
        "g": a5,
        "b": "-9007199254740992",
        "e": a5,
        toString(a7, a8) {
            try { new a5(...a8, this, this, ...a7); } catch (e) {}
            b = a5;
            super.f;
            new Int8Array(-11);
            new Uint8ClampedArray(6);
            const v19 = new Float64Array(197);
            return v19;
        },
    };
    return o20;
}
f4(f4("-9007199254740992"));
f4("-9007199254740992");
const v24 = [1073741825,5,16,-29099,-4294967297,-15,-11,-536870912,8];
[2147483647,11,-1813006319,9007199254740990,-22887,-1308916509,64,7,-9007199254740991,4294967295];
[1];
new Uint32Array(10);
new Uint8ClampedArray(512);
new Uint32Array(1);
const v38 = new Uint32Array();
Float64Array > v38;
new Float64Array(256);
const v43 = [];
function f44() {
    const o47 = {
        "f": v43,
        o() {
            return null;
        },
    };
    return v43;
}
const v48 = f44();
const v49 = f44();
f44();
[-1e-15,1000.0,-730789.5432863005,-2.220446049250313e-16,153271.45566188567,603490.3366108439,-2.2250738585072014e-308,-622.7929042352824,-1.528836716498722e+308];
const v52 = `
`;
eval(v52);
for (let v55 = 0; v55 < 5; v55++) {
    Array(36862);
}
const v59 = [NaN,1000000.0,1000.0,-1.7976931348623157e+308,-7.655222307058935,-1000000000.0,NaN];
const v60 = [1000000000000.0,1.7424201553678014];
function f64() {
    let v65 = -1000000000.0;
    const o127 = {
        o(a67, a68) {
            function f69(a70, a71, a72) {
                v65 |= a68;
                return this;
            }
            let v73 = 3.1466442940809625;
            return this;
            const v75 = new Set();
            let [v76,,...v77] = v75;
            function f78(a79, a80, a81) {
                const o83 = {
                    get d() {
                        return f78;
                    },
                };
                const v84 = o83?.__lookupSetter__;
                let v85;
                try { v85 = new v84(); } catch (e) {}
                return v85;
            }
            class C87 {
                set e(a89) {
                    const v91 = Symbol.iterator;
                    const o97 = {
                        [v91]() {
                            const o96 = {
                                next() {
                                    let v94 = this;
                                    v94--;
                                    return -886003937;
                                },
                            };
                        },
                    };
                }
            }
            const v98 = C87();
            const v99 = C87();
            const v100 = C87();
            function f101(a102, a103) {
                const o115 = {
                    valueOf(a105, a106) {
                    },
                    "type": eval,
                    o(a108) {
                        const o110 = {
                        };
                        gc(o110);
                    },
                    "e": v99,
                    o(a113, a114) {
                        return a68;
                    },
                };
                return v98;
            }
            const v116 = f101(-1000.0, v65);
            const v117 = f101();
            ("minor").valueOf();
            for (let i = 0; i < 10; i++) {
                const o122 = {
                    "a": 16n,
                    1: 16n,
                    257: undefined,
                };
            }
            let v123 = 1024n;
            try {
            } catch(e124) {
            }
            let v125 = v117[v100];
            ({"e":v123,"h":v125,...v73} = v116);
            try { v98.p(f44, v65); } catch (e) {}
            return f64;
        },
    };
    for (const v128 of v59) {
        function F129(a131, a132, a133) {
            if (!new.target) { throw 'must be called with new'; }
        }
        new F129(v128, v60, v49);
        new F129(v128, v60, v48);
    }
    return v49;
}
const v137 = v24();
f64();
const v139 = Uint8ClampedArray();
const v141 = /[\cA]?/d;
const v142 = /jU/vims;
const v143 = /a+b|c/gvdimsy;
function f144(a145, a146, a147) {
    const o151 = {
        set a(a149) {
            v137.g;
        },
    };
    return a147;
}
f144(v141, v142, v139);
f144(v143);
