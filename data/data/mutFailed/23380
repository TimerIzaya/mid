class C3 {
    static #b;
    b = "bigint";
    #h;
    valueOf(a5) {
        function f6(a7) {
            const o8 = {
                268435440: a7,
            };
            return o8;
        }
        f6(3);
        const v10 = f6(a5);
        f6(this);
        return v10;
    }
}
C3.name;
const v13 = new C3();
v13.b = v13;
new C3();
new C3();
3854 - 3854;
Int32Array.length;
new Int32Array(3854);
new Uint32Array(10);
let v27 = 0;
v27--;
BigUint64Array.name;
new BigUint64Array(v27);
[-515617499,9007199254740990,1794867738,-2147483647,4,8];
[1073741824,1155028686,-4,1022797559];
class C34 {
    #p(a36, a37, a38) {
        let v40 = 38273;
        Math.log(-1.6144030494226048e+308);
        const v43 = ++v40;
        Math.fround(this);
        Math.tanh(v43);
        v40 || v43;
        return +a36;
    }
}
[];
const v49 = [];
let v50 = Map;
v50.length;
new v50();
function F53(a55, a56) {
    if (!new.target) { throw 'must be called with new'; }
    const v57 = this.constructor;
    v57.name;
    try { new v57(); } catch (e) {}
    const o61 = {
        0: v49,
        162: "1ya",
    };
}
const v62 = new F53();
const v64 = new Int32Array();
const v68 = new Uint8ClampedArray();
const v69 = new Int32Array(3208);
const v70 = v64.constructor;
v50 - 61105;
Math.floor(61105);
Math.expm1(61105);
++v50;
new v70(v68);
Int32Array.from(v69);
const v79 = new F53(v50, v50);
new F53(v62, v79);
let v81 = 16;
v81--;
const v84 = new Int8Array(v81);
try {
    v84.some(v70);
} catch(e86) {
}
v50 && 61105;
v84.toSorted();
