function f0() {
    const o25 = {
        [30177](a5, a6) {
            function f7() {
                return a6;
            }
            return 30177;
        },
        "f": 0.8949794782760359,
        p(a9) {
            this.f;
            let v16 = -6;
            Math.min(v16);
            Math.atan2(-6, -6);
            v16++;
            -(v16 << 7.87630831216645e+307);
            Math.sqrt(-6);
            v16 << v16;
            return 2147483649;
        },
    };
    function F26() {
        if (!new.target) { throw 'must be called with new'; }
        const v28 = this.constructor;
        try { v28(); } catch (e) {}
        try { new v28(v28); } catch (e) {}
    }
    const v31 = new f0();
    const v32 = v31.constructor;
    new v32(v32, v31);
    return o25;
}
const v34 = f0();
const v35 = f0();
const v36 = f0();
class C37 {
    #p(a39) {
        new Uint16Array(64);
        let v45 = new Uint32Array(255);
        const v48 = v36[255];
        v45 &&= v45;
        [1668808317,1536372166,-21791,536870912,3,6,-4096,719472262];
        [-9007199254740990,-5,1,268435439,-1024,536870889,1000,4096,-9223372036854775807];
        class C51 {
        }
        gc();
        const o54 = {
        };
        [10];
        new v48(2064);
        return C51;
    }
    #c;
    static e = C37;
    static [v35];
    static a;
    [v35] = v35;
    static #e = v35;
    h;
}
const v57 = new C37();
const v58 = new C37();
const v59 = new C37();
function F60(a62, a63, a64, a65) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        v58.e = a63;
    } catch(e66) {
    }
    try {
        this.f = a64;
    } catch(e67) {
    }
    try {
        this.b = v58;
    } catch(e68) {
    }
}
const v69 = new F60(v34, v59, v58, v59);
const v70 = new F60(v34, v58, v58, v59);
const o74 = {
    "execution": "sync",
    "type": "minor",
};
gc(o74);
const v76 = new F60(v34, v59, v59, v59);
function f77(a78, a79, a80, a81) {
    const o96 = {
        "h": a80,
        7: a79,
        m(a83, a84, a85) {
            a85.b;
            new BigInt64Array(1);
            new Int8Array(129);
            new Uint8Array(128);
            return v59;
        },
    };
    return o96;
}
const v97 = gc(v57, v69, v34, C37);
f77(v97, v97, v34, v34);
f77(v97, v70, v34, v76);
function F100(a102, a103, a104) {
    if (!new.target) { throw 'must be called with new'; }
}
const v105 = new F100();
this.unescape(v105);
