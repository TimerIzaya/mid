class C3 {
    n(a5, a6) {
    }
    ["n"] = "n";
    valueOf(a8, a9, a10) {
    }
    valueOf(a12) {
        new Date();
        super.c = Date;
        for (let v15 = 0; v15 < 32; v15++) {
            function F18() {
                if (!new.target) { throw 'must be called with new'; }
                this.h = true;
            }
            function f20() {
                return f20;
            }
            function f21(a22, a23, a24) {
                const t18 = a22.constructor;
                return t18().toPrecision(a23);
            }
            "p" + C3;
            const t21 = "n";
            t21[-1549976730] = v15;
        }
        return -1549976730;
    }
    static #h = -111981.4270631487;
    257 = -1549976730;
    c;
}
function f29(a30, a31) {
    const o32 = {
    };
    return o32;
}
const v33 = new C3();
new C3();
new C3();
[4,37595,1412457392,8,65537,-1761338326,-1468816194];
[65536,14767,51399,-2147483648,-3417,6,536870889];
[128,65537,-256,-50370,268435439,-32968,-29321];
("29753").replaceAll("29753");
const o46 = {
};
function F47() {
    if (!new.target) { throw 'must be called with new'; }
}
new o46();
new Uint8ClampedArray(128);
for (const v56 of Array(4087, Array, Array)) {
    v56 | 10;
}
new Uint8ClampedArray(v33);
let v59 = -9223372036854775808n;
v59 %= 45725n;
for (const v61 in Array) {
    (delete Array?.h).__proto__;
}
new Uint16Array(16);
parseInt([-5.034735835956977e+307,-385.25474675985527]);
