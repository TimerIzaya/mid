[1073741823];
[11,255,-2147483647,268435440];
const v5 = [-58316,2147483647,-14,-9223372036854775807,-2,969939673,4,-1];
class C6 {
    #d = v5;
    #a = 5.229232734940098;
    valueOf(a8, a9, a10) {
        a8[v5] = a8;
        try {
            a10.e = 697060.3722495197;
        } catch(e11) {
        }
        return this;
    }
    m(a13, a14, a15) {
        const v21 = new Array(928);
        return v21;
    }
}
new C6();
new C6();
new C6();
[9007199254740991,48777,-12,12,-4294967295,12,268435439,-10];
[-9,7,13,32012,13,-34224,10,0,1445064667];
[16];
[-2.0,-2.0,-0.6478822474795649,1e-15,-11457.542930390686,1e-15];
[0.6252111934985473,7.4465365509785855,2.3187821867013274e+307,3.0,-1e-15,0.4555173788847904,0.5367039529731519];
[-3.0,1000000.0,0.47431673398927865,9.047593314625903,1.0,1000000000.0];
const v31 = [-256,13351,5138,2,-4294967295,1000,268435440];
class C32 {
    constructor(a34, a35) {
        for (const v36 in this) {
        }
        Math.atan2(v31, -4294967297);
        const v42 = new Uint8ClampedArray(129);
        const v45 = new Int32Array(1450);
        class C46 {
            [Uint8ClampedArray] = Math;
            static valueOf(a48, a49, a50) {
                new a50();
            }
            static a = v42;
        }
        const v52 = new C46();
        const v53 = new this();
        const v54 = new C46();
        try {
        const t0 = 1450;
        t0(v54, v54);
        } catch (e) {}
        function f56() {
            function f58(a59) {
                this.c = v52;
            }
            v53[2147483647] = v45 << this;
        }
        const v63 = [];
        const o64 = {
            "arguments": v63,
            "type": "function",
        };
        new Worker(f56, o64);
    }
}
new C32();
class C67 extends C32 {
}
new C67();
