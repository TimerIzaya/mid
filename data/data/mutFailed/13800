const v0 = [-7.63241280819323e+307,-1.0,-1.7976931348623157e+308,1.8108121602689843e+307,214.67845506428898,-7.6207691827789965,-869.05718830638,-1e-15];
const v1 = [-494.12031083668404,NaN,-1.0,-7.813435561410939,4.1215643920517735,-7.619629198138519e+307];
const v2 = [-9.306237114096206,-4.0];
function f3(a4, a5) {
    const o8 = {
        "maxByteLength": 104942224,
    };
    const v10 = new SharedArrayBuffer(6, o8);
    new Int16Array(v10);
    return v1;
}
v2.toString = f3;
const v16 = [v2,v2,-4294967296n];
const v17 = [-4294967296n,v0,v0,65537n,v16];
const v18 = [-4294967296n,v17,v0,536870889n,v2];
class C19 {
    #h;
    static 15 = v17;
    2536;
    7 = v1;
    static [65537n] = v1;
    [v2] = v1;
    toString(a21, a22) {
        try { this.n(536870889n, 536870889n, a21, 65537n, 65537n); } catch (e) {}
        v1 !== a21;
        const v26 = [];
        const v27 = v16.entries;
        new Float64Array(186);
        new BigUint64Array(10);
        new Uint16Array(2);
        return Reflect.apply(v27, this, v26);
    }
    static #c = v16;
    static #g;
    static [-4294967296n] = v0;
}
C19.toString = f3;
C19[65537] = C19;
const v38 = new C19();
const v39 = new C19();
v39[7] = v39;
const v40 = new C19();
v40[2536] = v40;
try { new Array(v38); } catch (e) {}
const v44 = Array(8);
v44[2147483648] = 536870889n;
v44[2147483648] <<= 8;
function f45(a46, a47) {
    const v48 = a46?.constructor;
    try { new v48(a47); } catch (e) {}
    let v50;
    try { v50 = C19.toString(a47, a46, v44, v44); } catch (e) {}
    const o51 = {
    };
    o51.h = o51;
    try {
        o51.f = v0;
    } catch(e52) {
    }
    try {
        const o53 = {
        };
        Object.defineProperty(o53, "f", { writable: true, configurable: true, value: v50 });
        o53.c = o53;
        o53.f = v0;
        o53.h = a46;
    } catch(e54) {
    }
    try {
        const o55 = {
        };
        function f56() {
            return 8;
        }
        function f57(a58) {
            v0.toString(a58, a58, a58, a58, f56, v50);
        }
        Object.defineProperty(o55, "d", { writable: true, configurable: true, get: f56, set: f57 });
        o55.f = v0;
        o55.h = a46;
        o55.d = 8;
    } catch(e60) {
    }
    try {
        const o61 = {
        };
        o61.c = o61;
        o61.f = v0;
        o61.h = a46;
        o61.c = v18;
    } catch(e62) {
    }
}
new Promise(f45);
