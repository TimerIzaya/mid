let v1 = "matchAll";
class C3 {
    static e;
    #o(a5, a6) {
        v1 = this;
        try {
            this.__proto__ = v1;
        } catch(e7) {
        }
        try { new a5(9, a5, a5, 1.2154894085608698e+308); } catch (e) {}
        try {
            v1.b = 9;
        } catch(e9) {
        }
        return v1;
    }
    static [9] = 9;
    static 2147483649 = v1;
    #n(a11) {
        %VerifyType(this);
        const o14 = {
            "maxByteLength": 2553,
        };
        const v16 = new ArrayBuffer(2553, o14);
        new DataView(v16);
        return C3;
    }
    static #c = 9;
    constructor(a20, a21) {
        let v23 = -7;
        v23++;
        -355912238 - -355912238;
        4.337854602923198 != 4.337854602923198;
        4.337854602923198 >>> 4.337854602923198;
        v23 & 4.337854602923198;
        const v31 = -v23;
        Math.min(a21);
        ~a21;
        const v34 = !v23;
        v34 && v34;
        4.337854602923198 & v31;
        const v37 = a21 || v31;
        v37 >>> v37;
        v37 % v37;
    }
    static #f;
}
const v40 = C3[2147483649];
v40[4] = v40;
const v41 = new C3();
const v42 = v41?.constructor;
const v43 = (1.2154894085608698e+308)?.constructor;
try { new v43(C3); } catch (e) {}
let v45;
try { v45 = new v42(v41, v1); } catch (e) {}
v45?.constructor;
try {
const t0 = 9;
new t0(9, v45);
} catch (e) {}
const v48 = new C3();
const v49 = v48?.constructor;
let v50;
try { v50 = new v49(9, v1); } catch (e) {}
const v51 = v48?.constructor;
let v52;
try { v52 = new v51(C3, 9); } catch (e) {}
const v53 = v52?.__lookupGetter__;
try { new v53(v51); } catch (e) {}
new v50();
const v56 = [-3.373894598486799e+307,0.6882977025386793,-227850.72377562395,864800.549599512,-647.9108504440173];
const v57 = [0.3560525868113693,1.0];
const v58 = v57?.find;
v58.length = v58;
try { new v58(v56); } catch (e) {}
const v60 = [-1e-15];
function f61() {
    return C3;
}
f61.name;
const v63 = [-41554,-4294967296,-9223372036854775807,-2147483648];
const v64 = [4,2147483648,-536870912,-9007199254740990,-65536,9,13706,53934268];
try { v64.reduceRight(f61); } catch (e) {}
[16,2147483648,9007199254740990,-1024];
Uint8ClampedArray.d = Uint8ClampedArray;
const v70 = new Uint8ClampedArray(995);
try { v70.reduce(v60); } catch (e) {}
Int8Array.name = Int8Array;
const v73 = new Int8Array(995);
const v74 = v73?.constructor;
let v75;
try { v75 = new v74(v63, 1.2154894085608698e+308, f61); } catch (e) {}
v75[3] = v48;
127 & 127;
const v79 = [9,9,9];
try { v79.reduce(1.2154894085608698e+308); } catch (e) {}
const v82 = Reflect.apply(v73.copyWithin, v70, v79);
v82[467];
try { v82.reduce(v64); } catch (e) {}
try { v70.some(v57); } catch (e) {}
