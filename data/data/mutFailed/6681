const v0 = [];
class C4 {
    constructor(a6, a7) {
        v0[1.4338749096752618e+307] = -2.470822470778513;
        let {"a":v8,"g":v9,} = this;
    }
    static 0 = 1.4338749096752618e+307;
    #f;
    f = 1.4338749096752618e+307;
    static [-2.0];
    1;
    [C4] = -2.470822470778513;
    [1.4338749096752618e+307] = 1.4338749096752618e+307;
}
const v10 = new C4(-2.470822470778513, -2.470822470778513);
new C4(1.4338749096752618e+307, -2.470822470778513);
const v12 = new C4(-2.0, v10);
class C13 extends C4 {
    toString(a15, a16, a17) {
        const v20 = Reflect.construct(-2.0, [v12,-2.0], a16);
        try { new v20(v20, a16); } catch (e) {}
        return v0;
    }
    static #f;
    #e;
    [v0] = 1.4338749096752618e+307;
    #a;
}
new C13();
new C13();
new C13();
function f25() {
}
new BigUint64Array(0);
new BigInt64Array(257);
const v41 = new Uint8ClampedArray(3);
class C42 {
    constructor(a44, a45, a46, a47) {
        const v48 = a45.constructor;
        try { new v48(3983, a47, this, this); } catch (e) {}
        for (let v50 = 0; v50 < 5; v50++) {
            v41[v50] = a47;
        }
    }
}
new C42();
