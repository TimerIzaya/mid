class C3 {
    [-2] = -555744.1464667534;
    constructor(a5, a6) {
        try {
            super.reduce(this, a5);
        } catch(e8) {
        }
        this[3] = a6;
        const v9 = ["X","33710"];
        [v9,a6,v9,"X",v9,C3,a5];
        [v9,C3,this];
    }
    0 = -555744.1464667534;
    #h = -555744.1464667534;
}
const v12 = new C3(C3, "X");
new C3(v12, C3);
new C3(-555744.1464667534, -555744.1464667534);
new BigUint64Array(3135);
new Int32Array(64);
new AggregateError(128);
let v24 = 10;
v24--;
const v28 = new Set();
function F29(a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a31;
    } catch(e33) {
        for (let [v34,v35] of a31) {
        }
    }
    try {
        const v36 = v28[this];
        const v37 = [WeakSet];
        function F38() {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v42 = new Float32Array(7);
        v42.join(F38);
        v37[1];
        new F29(v36, -268435456n);
    } catch(e47) {
    }
}
new F29();
new F29();
new F29();
