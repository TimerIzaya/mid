new Uint16Array(230);
new Uint8Array(12);
new BigUint64Array(57);
/[eg(?<=a)]/gi;
/aW/vms;
new Int8Array([[]]);
("undefined").localeCompare("undefined", "symbol", "undefined");
/[w(x)(x)(x)\3*]/gvdmsy;
function f22(a23, a24) {
    const o25 = {
        "d": a24,
        "c": -5,
    };
    return o25;
}
f22(4294967297, 4294967296);
const v27 = [-65537,-24143,-1293542190,14907,3476,-65083];
const v28 = [65537,3,-25535,268435440,-2,9007199254740990,1,-128,9007199254740990];
const v29 = [6,-536870912];
class C30 {
}
const v31 = new C30();
for (let v32 = 0; v32 < 5; v32++) {
    v31["p" + v32] = v32;
}
const v36 = new Date();
function F37(a39) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = v36;
    this.g = Date;
}
new Uint8Array(1024);
new Date();
new F37(v27);
const v46 = new F37();
class C47 {
    constructor(a49, a50) {
        function f51(a52, a53, a54, a55) {
            const o56 = {
                "deleteProperty": Date,
                "ownKeys": Date,
            };
            return v46;
        }
        f51(v28, Date);
    }
    [v29];
    g = v46;
}
new C47();
new C47();
const v61 = new Uint16Array();
const v66 = new Uint16Array(3);
v66.indexOf();
class C69 {
    4294967296 = 996195971n;
}
const v70 = new Float64Array(453);
const v71 = v70.toSorted();
const o73 = {
    "c": Float64Array,
    "f": v29,
    __proto__: v61,
    get c() {
        return this;
    },
    "type": "symbol",
    "b": 57,
};
Date();
Date.valueOf = v71;
new Uint32Array(255);
function f3(a4, a5, a6, a7) {
    return a6;
}
const o13 = {
    ..."65535",
    ["m"]: "m",
};
Symbol.for(Symbol.toPrimitive.description);
const v19 = [1000,-14,16,-11,-1413918991,-16,-374255446,-14,1000,10];
v19[7] = f3;
v19.sort();
const v21 = Symbol.toPrimitive;
const o23 = {
    [v21]() {
    },
};
new Int8Array(0);
const v30 = new Uint32Array();
let v31 = 9n;
const v32 = v31--;
function F33(a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    this.__lookupSetter__();
    const v38 = a35.__lookupGetter__;
    try { new a35(v30, a35, v32, v38, a36); } catch (e) {}
    this.a = a36;
}
new BigInt64Array(3);
function f42(a43, a44) {
    a43.constructor;
    try {
    const t0 = 581098551;
    new t0();
    } catch (e) {}
    const o47 = {
        268435456: Symbol,
    };
    return o47;
}
function F50() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 536870912;
    } catch(e53) {
    }
}
const v54 = new F50();
typeof v54;
new BigInt64Array(257);
new Int16Array();
function f60() {
    return f60;
}
new Uint8Array(v31);
Date.now();
[Date];
new Float32Array(64);
new Uint16Array(581098551);
for (let i = 0; i < 5; i++) {
    function F72(a74, a75, a76) {
        if (!new.target) { throw 'must be called with new'; }
    }
}
