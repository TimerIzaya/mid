function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.e = this;
    try {
        this.c = -47075;
    } catch(e3) {
    }
    function f4() {
        const o18 = {
            toString(a6, a7) {
                function F8(a10, a11, a12, a13) {
                    if (!new.target) { throw 'must be called with new'; }
                    try {
                        this.f |= a7;
                        a7.c;
                    } catch(e15) {
                        e15.stack;
                        Object.defineProperty(a6, 0, { writable: true, get: f4 });
                    }
                }
                new F8(this, a6, this, f4);
                return F8;
            },
        };
        return o18;
    }
    try {
        this.replace = -47075;
    } catch(e19) {
        function F20() {
            if (!new.target) { throw 'must be called with new'; }
            this.a = this;
            try {
                this.a = 1022873702;
            } catch(e23) {
            }
        }
    }
}
const v24 = new F0();
const v25 = new F0();
new v24(F0);
function f27() {
    return v25[1073741823];
}
f27();
function f31() {
    return F0;
}
const v32 = [256,62895,1323068375,1853814782];
[4294967295,-1024,35983,23001,844818306,129,128];
[-3,9007199254740990,52680];
[F0,v24];
const v36 = [F0,F0,v25,v32];
[v36,v25,v36];
new Date();
const v40 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
for (let v41 = 0; v41 < 5; v41++) {
    function f42() {
        try {
            v40.forEach();
        } catch(e44) {
            Math.sin(-9007199254740991);
            const v48 = [];
            parseInt(v48.toSpliced(v48));
            e44.a = e44;
        }
        const v53 = Symbol.toPrimitive;
        v53.description.for();
        return v53;
    }
    f42();
    class C58 {
    }
    const v59 = new v41();
    const v60 = new C58();
    const v61 = new C58();
    function f62(a63, a64) {
        const v65 = [];
        try { v65.with(); } catch (e) {}
        const o74 = {
            [v60](a68, a69, a70) {
                super[-9223372036854775807];
            },
            set b(a73) {
            },
            [a64]: v59,
        };
        return a63;
    }
    f62(Uint16Array, v61);
    %OptimizeFunctionOnNextCall(f62);
    %OptimizeFunctionOnNextCall(f42);
}
