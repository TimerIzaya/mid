const v2 = new Uint32Array(2318);
const v5 = new Int16Array(Int16Array);
new Int8Array(3775);
function F9(a11, a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a13;
    } catch(e15) {
    }
    try {
        this.h = v5;
    } catch(e16) {
    }
    try {
        this.a = v5;
    } catch(e17) {
    }
}
new F9(3775, 3775, 3, 2318);
new F9(3775, 3775, 3, 2318);
new F9(2318, 3, 2318, 2318);
class C21 {
    static #n(a23, a24) {
        this[v2] = v5;
        super[3775] = 2318;
        return a24;
    }
    static b;
    a;
    #h;
    static #m(a26, a27, a28, a29) {
        try {
            v2.__proto__ = this;
        } catch(e30) {
        }
        return a26;
    }
}
new C21();
new C21();
new C21();
for (let v34 = 0; v34 < 5; v34++) {
    function f35() {
        const v37 = f35.fixed("Vre");
        const v39 = v37.codePointAt() * v37;
        v39 >= v39;
        return f35;
    }
    f35();
    %OptimizeFunctionOnNextCall(f35);
}
