function f0() {
    const o9 = {
        [-683.5890154816067]: "MAX_SAFE_INTEGER",
        "f": -1488682120,
        6: -683.5890154816067,
        "e": "MAX_SAFE_INTEGER",
        __proto__: "MAX_SAFE_INTEGER",
        [-1488682120](a5) {
            let v6 = this;
            super.c = a5;
            const v7 = this ^ "MAX_SAFE_INTEGER";
            v6 = "MAX_SAFE_INTEGER";
            ("MAX_SAFE_INTEGER").length;
            return v7;
        },
    };
    return "MAX_SAFE_INTEGER";
}
const t18 = f0();
t18();
const v12 = f0();
class C13 {
    static #h;
    valueOf(a15, a16) {
        try { v12.allSettled(this, a15); } catch (e) {}
        try {
            this.fuck(-5.0, true, true, -5.0);
        } catch(e21) {
        }
        return this;
    }
}
const v22 = new v12();
const v23 = new C13();
new C13();
v22.g >>>= 57486;
for (let v27 = 0; v27 < 32; v27++) {
    v23["p" + v27] = v27;
}
const v31 = [];
function f32() {
    const o34 = {
        p() {
            return f32;
        },
        [v31]: v22,
        "a": v31,
    };
    return o34;
}
const v35 = f32();
const v36 = f32();
const v37 = f32();
[65536];
[-267,-4,-32045,-4];
[14,268435441,-9223372036854775807];
new Float64Array(14);
const v46 = new Uint8ClampedArray(Uint8ClampedArray);
const v49 = new BigInt64Array(218);
let v50;
try { v50 = v49.sort(f32); } catch (e) {}
try { v50(v36, v50, v50, ...v46, v35, ...v35); } catch (e) {}
const v52 = (a53, a54) => {
    v37 * a54;
    return v37;
};
