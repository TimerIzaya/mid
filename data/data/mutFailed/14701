class C3 {
    [0.2609214390477802];
    constructor(a5, a6) {
        let v4 = this;
        [8n,8n,8n,8n] > 8n;
        function F10() {
            if (!new.target) { throw 'must be called with new'; }
        }
        ({"f":v4,"length":v4,} = "toUTCString");
    }
    #toString(a13) {
        try {
            super.values(a13, this, a13, -2147483647, 0.2609214390477802);
        } catch(e15) {
        }
        return -2147483647;
    }
}
const v16 = new C3(C3, "toUTCString");
const v17 = new C3(v16, 0.2609214390477802);
-2147483647 < -2147483647;
v17();
const v20 = [601759695];
const v21 = [1073741824,1073741823,1376142744,1073741825];
function f23(a24, a25, a26, a27) {
    const v29 = arguments.toString();
    function f30() {
        ("Vre").fixed("Vre");
        const o47 = {
            [522675525n](a35, a36) {
            },
            ..."Vre",
            valueOf(a38, a39) {
                return this;
            },
            ...v20,
            ..."Vre",
            valueOf(a41, a42) {
                return a24;
            },
            ..."Vre",
            4: "Vre",
            toString(a44, a45, a46) {
                return v29;
            },
            5: -4294967295,
        };
        o47.valueOf();
        return f23;
    }
    f30();
    const v51 = new Int8Array();
    v51.buffer.slice();
    %OptimizeFunctionOnNextCall(f30);
    let v55;
    try { v55 = v21["find"](..."find", a27, ...v20, ...v21, ...522675525n); } catch (e) {}
    return v55;
}
new C3(-2147483647, v17);
class C57 {
    584 = "toUTCString";
    4294967296 = 522675525n;
    constructor(a59, a60, a61, a62) {
        super();
        function f63() {
            const v64 = [];
            v64[6] = v64;
            const o67 = {
                set b(a66) {
                },
            };
            return a62;
        }
        for (let v68 = 0; v68 < 5; v68++) {
            f63();
            %OptimizeFunctionOnNextCall(f63);
        }
    }
    f = -2147483647;
    o(a71, a72, a73, a74) {
        "toUTCString" == v16 ? "toUTCString" : v16;
        C3[10000] **= -2147483647;
        return v16;
    }
    static ["toUTCString"];
    static #d = "toUTCString";
    e;
    16 = -2147483647;
}
new C57();
new C57();
Uint16Array[1] = 1277001064;
for (let i83 = 0, i84 = 10;
    (() => {
        const v85 = i83 < i84;
        const t0 = [-4.0,-1e-15];
        t0[2] = 54004;
        const v90 = new BigUint64Array(3375);
        let [v91,,v92,...v93] = v90;
        return v85;
    })();
    i83++) {
}
new C57();
class C100 {
    constructor(a102, a103) {
        const o117 = {
            84: arguments,
        };
    }
    /*
    constructor(a123, a124) {
        try {
            this.fuck(a124, "function");
            new BigUint64Array(144);
            function F131(a133, a134, a135) {
                if (!new.target) { throw 'must be called with new'; }
                const v136 = this?.__lookupGetter__;
                try { new v136(12); } catch (e) {}
                a134 + a134;
                try { a135.find(a133); } catch (e) {}
                try {
                    this.d = a133;
                } catch(e140) {
                }
                try {
                    this.b = a135;
                } catch(e141) {
                }
            }
            F131?.constructor;
        } catch(e143) {
        }
    }
    */
}
const v144 = new C100();
"1343140951" % !v144;
