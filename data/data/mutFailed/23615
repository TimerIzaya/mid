const v0 = [-500.4964753015264,1.0,-1000000.0,-2.0,-5.0,-1.3580174709074615e+308,-402343.73467152147,4.0,1.0,2.61837286006796e+307];
const v1 = [1000000000000.0];
const v2 = [0.5139487660368681,0.070939337862995,-2.0,457081.9062500023,-1e-15,2.0,9.324789606232027,1.0];
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = v0;
    } catch(e7) {
    }
}
const v8 = new F3(F3, v1);
const o9 = {
    "d": v8,
};
const v11 = [F3,o9];
const v13 = Reflect.apply(v2.findIndex, v1, v11);
const v14 = new F3(v0, v2);
const v15 = new F3(v1, v2);
const v17 = [v0,v2,[v15,v14,v1,v1],F3,v2];
try { v8["o"](v17, "o"); } catch (e) {}
function f21(a22, a23, a24) {
    try {
        new F3(v2, a24);
    } catch(e26) {
    }
    return v1;
}
f21(v15, v13, v14);
delete v2["o"];
[] = "o";
[v15,v2];
const v35 = new BigInt64Array(65535);
class C36 {
    static [v35];
}
