function f3(a4) {
    const o24 = {
        "f": a4,
        set d(a6) {
            let v9 = -54198;
            const v10 = --v9;
            const v11 = v10 % a6;
            Math.cbrt(v9);
            v10 & v9;
            super.e = Math.atan(v11);
            super[a4] = a4 >> 9;
            try { a6(-1412104377); } catch (e) {}
            const o19 = {
                "maxByteLength": 2561198329,
            };
            const v21 = new ArrayBuffer(4096, o19);
            new BigInt64Array(v21);
        },
        64: a4,
    };
    return -1412104377;
}
const v25 = f3(-1412104377);
const v26 = f3(-1412104377);
const v27 = v26(9);
function f28(a29, a30, a31, a32) {
    const o42 = {
        "a": a29,
        [a29](a34, a35, a36) {
            v25.d;
            try { this(a35, ...v27, a31, ...a36); } catch (e) {}
            -Infinity;
            return f3;
        },
        [a30]: 9,
        [v26]: 1838628637,
        "h": a31,
    };
    return o42;
}
const v44 = f28(f28(1838628637, 1838628637, 1838628637, v25), 1838628637, 1838628637, v27);
v44(v44, -1412104377, 1838628637, v25);
[v26];
[9,v27,1838628637];
[9,f28,f3];
const v50 = [-1000000.0,1.2447871437442695e+308,2.0,-1.7099107331057683e+308,0.0];
for (let i52 = 0; i52 < 1; i52++) {
}
function F58() {
    if (!new.target) { throw 'must be called with new'; }
    const v60 = this.constructor;
    let v61;
    try { v61 = new v60("constructor", v60, v60, v60); } catch (e) {}
    const v62 = this.valueOf(F58);
    switch (v50) {
        case "constructor":
            v62 < v61;
            break;
    }
}
new F58();
new F58();
