let v1 = 4294967297;
class C3 {
    constructor(a5, a6) {
        a5 >>> (v1 += a5);
    }
    g = -268435456;
    static #c = -21044;
    static #n(a9) {
        try {
            this.fuck(undefined, 5.849972609219787);
        } catch(e13) {
        }
        const v14 = a9 > v1;
        v14 != v14;
        try {
            C3.length = 189;
        } catch(e17) {
        }
        return v1;
    }
}
Object.defineProperty(C3, "getOwnPropertySymbols", { writable: true, configurable: true, enumerable: true, value: -21044 });
new C3(-21044, v1);
const v19 = new C3(v1, v1);
const v20 = new C3(-21044, v1);
[-2147483648,-63112,127,-4294967295,8,1073741824,0,-65535,1073741823];
const v22 = [1073741823,-152654944];
const v23 = [508763855,-1312598252,49944,-56061,-1411062232];
const v24 = [-268435456,-21044,v20];
[v1,v22,[v19,v23]];
[-1.1730024841443846e+308,0.19713058020439866,3.687273144604667,548.6637550244868,7.540044801685763,-954.0830887532277];
[1.0];
const v29 = [-1.0,-4.0,-6.336882492188922e+307];
function f30() {
    const o34 = {
        __proto__: "S3KT",
        [-5900]: "S3KT",
        "f": 760977347,
        4147259639: 760977347,
        659269453: "S3KT",
        "g": 760977347,
        "h": -5900,
        [760977347]: "S3KT",
        "e": -5900,
        "c": "S3KT",
    };
    return o34;
}
function f35() {
    return f35;
}
const o37 = {
    [f35]() {
    },
};
const v38 = f30();
const v39 = f30();
const v40 = f30();
function F41(a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e45) {
    }
}
const v46 = new F41(v39, v39);
const v47 = new F41(v39, v38);
let v48;
try { v48 = C3.getOwnPropertySymbols(v23, v29, v47); } catch (e) {}
f30();
try {
    v24.findLast(v48);
} catch(e51) {
}
new F41(v40, v38);
let v58 = Int16Array;
let v61 = -1024;
function F62(a64, a65, a66, a67) {
    if (!new.target) { throw 'must be called with new'; }
}
const v68 = new F62(v61, F62, F62, F62);
[-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function F70(a72, a73) {
    if (!new.target) { throw 'must be called with new'; }
}
new F70(F70);
class C75 {
}
const v78 = new Uint32Array();
const v80 = new Map();
function f81(a82, a83) {
    a82.trim();
    let v85;
    try { v85 = a82.valueOf(a83, v80, a83); } catch (e) {}
    v85 == v85;
    class C88 extends v78.constructor {
    }
    return v85;
}
function f90() {
    function f91(a92, a93) {
        a93();
        return f91;
    }
    return -4294967297n;
}
Object.defineProperty(Symbol, Symbol.iterator, { configurable: true, value: f90 });
v80[Symbol.toPrimitive] = f81;
for (let v98 = 0; v98 < 395; v98++) {
    const o100 = {
    };
}
[] = [601759695];
Math.abs(v68);
v23 >> v23;
v23 >> -34899;
Math.exp(-34899);
function f109() {
    class C110 {
        set d(a112) {
        }
    }
    class C113 extends C110 {
    }
}
for (let v115 = 0; v115 < 5; v115++) {
    function f116() {
        let v119 = Float64Array;
        const v121 = Array();
        function f122() {
        }
        function f123(a124) {
        }
        Object.defineProperty(v121, 0, { configurable: true, enumerable: true, get: f122, set: f123 });
        const v125 = v121.unshift(v61);
        function F126(a128, a129) {
            if (!new.target) { throw 'must be called with new'; }
        }
        v119 = F62;
        const v130 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        Object.defineProperty(Symbol, Symbol.iterator, { enumerable: true, value: f123 });
        class C134 {
        }
        const v135 = new C134();
        v135.__proto__ = F70;
        const v136 = ["Vre","Vre","Vre","Vre"];
        class C137 {
        }
        function* f138(a139, a140) {
            yield* v136;
        }
        const v141 = Symbol.toPrimitive;
        Symbol.match;
        const o149 = {
            toString(a145, a146) {
                const v147 = v115 && v119;
                v58 *= v141;
                v147 <= v130;
            },
        };
        const o172 = {
            [522675525n](a152, a153) {
                new Int32Array(Int32Array);
            },
            valueOf(a159, a160) {
                return this;
            },
            [-4294967297n](a162, a163, a164, a165) {
            },
            "e": -268435456,
            "maxByteLength": -4294967295,
            ...v68,
            [v141]() {
            },
            "type": C75,
            ...v46,
            ..."Vre",
            get h() {
            },
            4: "Vre",
            toString(a169, a170, a171) {
            },
            6: -268435456,
        };
        new Float32Array();
        v61 %= -268435456;
        new Float64Array(v125, v125);
        new Uint16Array(Symbol, -268435456, -268435456);
    }
    f116();
    %OptimizeFunctionOnNextCall(f116);
    function f181() {
    }
}
