const v0 = [1];
const v1 = [12,2140881356,257,-1223136512];
const v2 = [1073741825];
const v6 = [-1000.0,-7.524005338742839e+307];
const v7 = [v6,v0,v6,v6,v1];
const v8 = [v2,-737840.7266990241,v7,v2];
function f9(a10, a11) {
    const o22 = {
        valueOf(a13, a14, a15, a16) {
            v1 > a14;
            super[this[10000]];
            a15[a16];
            return this;
        },
        get e() {
            v7[64] = -1000.0;
            v2[3832] = -737840.7266990241;
            return this;
        },
        ...v8,
        "e": v7,
    };
    return o22;
}
const v23 = f9(v6, -7.524005338742839e+307);
f9(-1000.0, v23);
f9(v7, v23);
new Map();
Math.toString = f9;
Math.expm1(Math);
function F31() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = this;
    this.h = 9007199254740991;
}
const v34 = new F31();
const o37 = {
    set h(a36) {
    },
    __proto__: v34,
};
[-4294967297,-1130849564,268435440];
[7];
[14,34917];
[39028];
[531384559];
[3.0,0.33171220343699925,4.064384707296433,1.5856273613625281e+308,-620.344995023322,0.9478652503365506,-856874.8447818598,-127.45049040971935];
function f47(a48, a49) {
    const o51 = {
        ...a48,
        get d() {
            return this;
        },
    };
    return f47;
}
f47();
f47();
new BigUint64Array();
for (let [i59, i60] = (() => {
        10 >> 10;
        return [0, 10];
    })();
    i59 < i60;
    i59++) {
}
const v69 = [4294967297];
new Float32Array(10);
new Uint8Array(12);
new Uint32Array(1);
class C85 {
    static {
        super[super.b];
        v69[-15n] ^= 10;
        const v92 = BigUint64Array * 536870887;
        v92 ** v92;
        +(BigUint64Array - v92);
        536870887 << BigUint64Array;
        for (const v97 of "-4294967295") {
        }
    }
}
