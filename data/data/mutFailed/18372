const v3 = new Date();
("getBigInt64").normalize();
const v8 = Array(1102693041);
let v9 = -1000000000000.0;
class C10 {
    #f;
    #p(a12) {
        let v13;
        try { v13 = new a12(this, v9, this, this); } catch (e) {}
        const v15 = new Float32Array(Float32Array, Float32Array, Float32Array);
        const v17 = new BigInt64Array(1102693041);
        function f18() {
            return f18;
        }
        class C19 extends f18 {
            constructor(a21, a22, a23, a24) {
                const v26 = [a22];
                Reflect.apply(v15.toLocaleString, v17, v26);
            }
        }
        try { Float64Array.from(null); } catch (e) {}
        for (let i34 = 0, i35 = 10;
            (() => {
                i35 >>> i35;
                const v37 = null < i35;
                function F41(a43, a44) {
                    if (!new.target) { throw 'must be called with new'; }
                    this.valueOf();
                    const v46 = a44.constructor;
                    try { new v46(v46, v46, v46, a44); } catch (e) {}
                    F41 instanceof BigInt64Array;
                }
                const v49 = new BigUint64Array(3375);
                let [v50,,v51,...v52] = v49;
                return v37;
            })();
            i34++) {
        }
        ({"a":v13,"f":v13,} = v13);
        new Date(Date);
        const v61 = [];
        function F62(a64) {
            if (!new.target) { throw 'must be called with new'; }
            const v65 = this.constructor;
            try { new v65(); } catch (e) {}
            a64 % a64;
            try {
                this.c = v61;
            } catch(e68) {
                -Infinity;
                const o70 = {
                    "arguments": v8,
                };
                o70.constructor;
            }
        }
        const v75 = a12 >> !this;
        --v9;
        this || v9;
        const v80 = new Int32Array(1024);
        for (const v81 of v80) {
            const o84 = {
                "maxByteLength": 1293466293,
            };
            new SharedArrayBuffer(1796, o84);
        }
        this - this;
        v75 >>> v75;
        return a12;
    }
    static valueOf(a90) {
        a90[5];
    }
}
new v3();
new C10();
new C10();
new Uint16Array(2);
new Int32Array(9);
new Float64Array(2094);
class C104 {
    #toString(a106, a107, a108) {
    }
}
new C104();
for (let v111 = 0; v111 < 10; v111++) {
    Reflect.construct(C104, [Reflect,Reflect,Reflect,Reflect], WeakSet);
    class C116 {
        [720972705n];
        #p(a118, a119, a120, a121) {
            super.m();
        }
    }
}
