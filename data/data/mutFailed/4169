let v1 = new Date();
class C2 extends Date {
    g;
    n(a4) {
        new Set();
        0 < 6;
        v1 = this;
        super[this];
        typeof Set === "function";
        const o16 = {
            "maxByteLength": 65535,
        };
        const v18 = new ArrayBuffer(4, o16);
        new Int16Array(v18);
        return a4;
    }
    static [Date];
    a;
    #g = Date;
    536870887 = v1;
}
const v22 = new C2();
const o25 = {
    "maxByteLength": 268435441,
};
const v27 = new SharedArrayBuffer(7, o25);
new Int16Array(v27);
const v30 = new C2();
const v31 = new C2();
Object.defineProperty(Date, "c", { enumerable: true, set: Date });
v1.e *= 268435441;
try {
    Date();
} catch(e33) {
}
[v1,[v31,C2,v22,v31],v30];
[v1,C2,C2];
function f40() {
    function f41(a42, a43) {
        a43(f41);
        return f41;
    }
    new Promise(f41);
    return Promise;
}
%PrepareFunctionForOptimization(f40);
f40();
%OptimizeFunctionOnNextCall(f40);
f40();
[Int8Array];
class C51 {
    #p() {
    }
}
