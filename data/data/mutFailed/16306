const v1 = [13,-256];
const v2 = [27286,6];
const v4 = ([37923,65142,10,-53794,3,-193419600,5])?.values;
try { new v4(); } catch (e) {}
const v7 = new Map();
try { v7.set(false, v2); } catch (e) {}
let v12;
try { v12 = ("2G2V").strike(); } catch (e) {}
function f13() {
    return v1;
}
const v16 = new Int8Array(1176);
v16[471] = v16;
let v18 = 256 & v12;
new BigInt64Array(256);
new v7(1);
const v27 = new Float64Array(Float64Array);
function f28(a29, a30, a31, a32) {
    a29++;
    a30 % a30;
    BigInt64Array.prototype;
    const v38 = new BigInt64Array(4046);
    const v40 = v18++;
    const v41 = v40 >> v40;
    Number.isNaN();
    v40 >> v40;
    let o45 = {
    };
    o45.e = o45;
    [,...o45] = v38;
    return v41;
}
f28.g = f28;
for (let v46 = 0; v46 < 5; v46++) {
    v46 >> v46;
    f28(v46, v46, v46, v46);
}
const v49 = new Uint32Array(9);
v49.set(v27);
