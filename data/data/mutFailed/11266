class C2 {
}
const v5 = new Int32Array(8);
v5[3] = 9007199254740991;
new BigInt64Array(128);
new Int32Array([-4563]);
const v13 = new Float64Array(Float64Array, Float64Array, Float64Array);
function f14() {
    v13.length = 0;
    return 0;
}
const v17 = [-536870912,-65537,10,-9007199254740990,-11,46376,2,6];
class C18 {
    constructor(a20, a21) {
        let {...v22} = v17;
    }
}
Uint16Array.prototype = Uint16Array;
const v23 = new Uint16Array(127);
try { new Float64Array(v23, 1, v23); } catch (e) {}
const v27 = new Float64Array(1);
new Int32Array(1024);
const v33 = new Uint32Array([2.0,-2.2250738585072014e-308,2.4617128810201834,0.8777478192033997,4.0,5.13369912480738,-0.6793749535317453]);
new Uint16Array(v33);
const v35 = [0.13956158306452437,9.879335030972174e+307,-1.4718856731435239e+308,4.0,-693490.4455538635,2.84969242776441,7.234914030790403];
try { v35.sort(v27); } catch (e) {}
(8).fromCodePoint(3.0);
function f39(a40, a41, a42, a43) {
    arguments.toString();
    return f39;
}
[-0.0,-1.0,144910.6676478798,-5.0,1000.0,4.0,-2.220446049250313e-16,-266656.8949180703,-1.297702228648754e+308];
[569.4467656793765,-4.738404066668798,-1.0,-577.6807072555139];
const v48 = [-268435456,-9007199254740990,11,-25356,-536870912,4294967296,1520296454];
const o52 = {
    toString(a50) {
        class C51 {
            static [this] = a50;
        }
        return C51;
    },
};
function f53(a54, a55) {
    const v56 = new Uint32Array();
    try { v56.entries(); } catch (e) {}
    for (let i59 = 0; i59 < 10;) {
    }
    function F65(a67) {
        if (!new.target) { throw 'must be called with new'; }
        const v68 = this?.constructor;
        try { new v68(Float64Array); } catch (e) {}
        const v70 = 139837843 in this;
        v70 && v70;
    }
    const v72 = new F65();
    v72.length;
    new F65(a55);
    const o75 = {
        __proto__: v48,
    };
    try { o75.map(v23); } catch (e) {}
    return o75;
}
const v78 = f53(v48, v48).group(f53);
v78.e = v78;
