let v0 = "bigint";
class C3 {
    #e;
    static {
        v0[-1] = -1.0;
        v0 **= this;
        function F5(a7, a8) {
            if (!new.target) { throw 'must be called with new'; }
            const v9 = this.constructor;
            v9.bind(F5, a7, v9, a7);
            try { new v9(); } catch (e) {}
            a8 / a8;
        }
        new F5();
    }
    ["536870888"];
    static 8;
    constructor(a15, a16) {
        if (this !== a15) {
            [2.220446049250313e-16,0.08012974928623817,2.5148782211863185,-1000000000.0,-367233.7647934449,1000000.0,0.3153477181345209,-2.0];
            [-1e-15,-325.8284353585925,-1.0297366593251451e+308];
            [-1000.0,854653.47545039,488.9016607860558,-7.319817061753994e+307,-8.75441207927799,813874.9781352552,0.5650155218231181];
            Array(36862);
            function F24(a26, a27, a28) {
                if (!new.target) { throw 'must be called with new'; }
                [8n] > 8n;
            }
        } else {
            function F32(a34, a35, a36) {
                if (!new.target) { throw 'must be called with new'; }
                const v37 = this.constructor;
                try { new v37(); } catch (e) {}
                a34 % a34;
            }
            ("536870888")[a16];
        }
    }
}
const v41 = new C3(C3, -1.0);
function f43() {
    return 4294967297n;
}
class C44 extends f43 {
    o(a46, a47, a48) {
        for (let v54 = 0; v54 < 32; v54++) {
            break;
        }
    }
}
const v56 = new C3(v0, "536870888");
const v57 = new C3(v56, v56);
class C58 {
    constructor(a60, a61, a62, a63) {
        super.d >>= -1.0;
        function f64() {
            return this;
        }
    }
    p(a66, a67) {
        const t59 = [-3.0];
        t59.length >>>= 213;
        return Int16Array;
        v57.h;
        return v0;
    }
    static 5;
    #h;
    80 = v56;
}
const v73 = new C58(v57, v41, v41, C58);
const v74 = new C58(v56, v73, v56, v56);
new Date();
const v79 = new BigInt64Array(11);
v79.reverse();
new C58(C58, v57, v41, v74);
[-1000.0,1.7340075410841015e+308];
[-5.0,42.83102957957067,0.672834209538599,6.110235839595717e+306,450.90840113979243,741758.7252481335];
[7.5529875611888855,1.7976931348623157e+308];
function f85(a86, a87, a88, a89) {
    function f91() {
        ("filter")["startsWith"]();
        const v95 = Math.cosh(Math);
        v95 / v95;
        return "startsWith";
    }
    const v98 = new Int32Array();
    v98[492];
    v98[3];
    return a86;
}
for (let v101 = 0; v101 < 10; v101++) {
    f85();
}
%OptimizeFunctionOnNextCall(f85);
f85(f85, f85, f85, f85);
