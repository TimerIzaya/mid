[];
function F2() {
    if (!new.target) { throw 'must be called with new'; }
    function f5(a6) {
        return F2;
    }
    this.onmessage = f5;
    const o9 = {
        "type": "function",
    };
    new Worker(F2, o9);
}
const v12 = [601759695];
function f13(a14, a15, a16, a17) {
    arguments[2] = arguments;
    function f19() {
        const o29 = {
            __proto__: a16,
            toString(a21, a22) {
                new Int32Array(1024);
                new SharedArrayBuffer();
                this?.__lookupSetter__;
            },
        };
        return arguments;
    }
    f19();
    gc();
    return v12;
}
new Uint8Array(6);
new Int8Array(257);
const v39 = /9f8\xf0\x9f\x92\xa9/diy;
const o40 = {
};
new Date(-429.3290910931888);
v39["compile"]();
new Date();
const v48 = new BigInt64Array(441);
function f49() {
    return 6;
}
/[8a(?=bbb|bb)c]/gums;
/a[a]/vdsy;
const o55 = {
    ...v48,
};
function f56(a57) {
    return a57;
}
const v58 = /M/gus;
const v63 = new Uint16Array(5);
v63[3] = 1695802898;
class C66 {
    #h = 1e-15;
    static get e() {
        function f68() {
            return 1e-15;
        }
        let v69 = 0;
        v69++;
        ("async").lastIndexOf();
        const v73 = [4.595408678590346,634.2520230005675,1.678658443574512e+308,0.03854419317902913];
        const v74 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
        const v77 = new Uint32Array();
        const v79 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
        const v80 = [601759695];
        const v81 = [1073741824,1073741823,1376142744,1073741825];
        function f83(a84, a85, a86, a87) {
            function f88() {
                let v90 = Float64Array;
                v90 = a85;
                b = v80;
                const v91 = v74.length;
                try {
                    v81.forEach(a85);
                } catch(e93) {
                }
                a85.b = f68;
                const o94 = {
                    "apply": f88,
                    "preventExtensions": f68,
                    "setPrototypeOf": f83,
                };
                new Proxy(v73, o94);
                const v97 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
                Symbol.toPrimitive;
                const o103 = {
                    toString(a101, a102) {
                    },
                };
                const o119 = {
                    toString(a106, a107) {
                    },
                    [522675525n](a109, a110) {
                    },
                    [v91](a112) {
                    },
                    [-1]: 2684,
                    1073741824: v77,
                    "arguments": v97,
                    [-4294967297n](a114, a115, a116, a117) {
                        f68();
                    },
                    "e": -4294967295,
                    "arguments": v79,
                    256: a87,
                    ...v80,
                    6: -268435456,
                };
            }
            f88();
            f68();
            %OptimizeFunctionOnNextCall(f88);
        }
        return this;
    }
    static [v58];
    set f(a123) {
        const v124 = [-504863.1885363821,-248378.80818527355,-147.11467188198264,-1.7039705769992093e+308];
        for (let v125 = 0; v125 < 5; v125++) {
            v124 | v125;
        }
        this != a123;
    }
    #g = 3.7122420217608383;
    static 65536;
}
class C128 {
    constructor(a130, a131) {
        const o132 = {
            __proto__: a131,
        };
        o132[a131] = o132;
    }
}
new C128();
const v134 = new C66();
new C66();
new C66();
new Set();
[-Infinity,Infinity,959819.665748626];
[0.881533214430694,1000000000000.0,-2.6561951388069446e+306,1e-15,-601975.7256958171,-2.0,1.0,-1000000000000.0,-5.0];
[-6.825886894231237,-1000000000.0,-7.405832553829715,-5.0];
function f148() {
    const v150 = new Date(Date);
    v150.setFullYear;
    function f152() {
    }
    let v154 = 1000000000000.0;
    const v155 = v154--;
    -v155;
    function f157(a158, a159, a160) {
        a158.fill();
        return a159;
    }
    function f162(a163, a164) {
        function f166(a167) {
            return a164;
        }
        class C170 {
            toString(a172) {
                this.e *= 0.8199829542463926;
            }
        }
        this.onmessage = f166;
        return a163;
    }
    class C177 {
        constructor(a179) {
            const v181 = new Float32Array();
            try { v181.entries(); } catch (e) {}
            const v183 = new Uint16Array(12, -4294967296, v155);
            new Float32Array(v183, -4294967296, 268435439, v154, v183);
        }
    }
    try { new C177(12); } catch (e) {}
    const v186 = new C177(257828.6336153492);
    const v187 = new v154();
    const v188 = new C177(-4294967296);
    const v189 = [v188,C177];
    [257828.6336153492,v188,v186,v188,v189];
    Date.constructor;
    function F192(a194, a195, a196, a197) {
        if (!new.target) { throw 'must be called with new'; }
        ~a195;
        a197 | a197;
        const v200 = this.constructor;
        try { new v200(); } catch (e) {}
        typeof Float32Array;
    }
    const v204 = [v188];
    class C205 extends C177 {
        [v186];
    }
    const v206 = new C205();
    const v207 = [-54486,11,9007199254740991,268435456,536870912,1073741823,255,1073741824,-2147483648,-3];
    const v208 = v134.constructor;
    try { new v208(v207, v134); } catch (e) {}
    function F211(a213) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v214 = new F211();
    const v215 = F211 >>> 536870887;
    with (v214) {
        typeof v215;
    }
    const v217 = v204.constructor;
    try { v217.isArray(v204); } catch (e) {}
    class C219 extends v217 {
    }
    C219.a = C219;
    const v220 = new C219();
    const v221 = v220?.constructor;
    try { new v221(); } catch (e) {}
    Object.defineProperty(v220, 65537, { value: v187 });
    try { v206.m(v189); } catch (e) {}
    return Int32Array;
}
const v224 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
class C225 {
    constructor(a227, a228, a229, a230) {
        const v231 = this.constructor;
        try { new v231(v224, a229, a229); } catch (e) {}
        a228 >>> a228;
        -0.0 >>> -0.0;
    }
}
%PrepareFunctionForOptimization(f148);
f148();
%OptimizeFunctionOnNextCall(f148);
f148();
