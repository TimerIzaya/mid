const v0 = [];
const v1 = [-70.86922669433977,-328552.39928824594,-7.252936407218707e+307,1.0,-1000000000000.0,-5.0,0.4640486900839027];
const v2 = [1.7976931348623157e+308,-0.8820546871087824,0.5219778802085288,Infinity,NaN,-1000000.0,-0.0,1.7976931348623157e+308,8.478848240809314e+307,-1.7976931348623157e+308];
const v3 = [-535049.8988672834];
const v4 = [-8.408471211816062,-7.228963064713758,-Infinity,2.0,-Infinity];
const v5 = [971.7326841211209,-3.238847082265222];
[-1000.0];
class C10 {
    constructor(a12, a13) {
        const t9 = "MIN_SAFE_INTEGER";
        t9["p"] %= a13;
        let v14;
        try { v14 = v0.reduceRight("p", this); } catch (e) {}
        const v15 = [a12,v0,"MIN_SAFE_INTEGER",v14,v14];
        const v16 = [this,"p",v15];
        [v16,v16,a12,v16,v15];
    }
    static #a;
    #h;
    static [v3];
    #e = v4;
}
const v18 = new C10(v1, v2);
new C10(v3, v5);
new C10(v0, v2);
function F21() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 3;
    } catch(e24) {
    }
    v0 <= 3;
    const v27 = Symbol.iterator;
    const o36 = {
        [v27]() {
            let v29 = 10;
            const o35 = {
                next() {
                    v29--;
                    const v33 = v29 == 0;
                    const o34 = {
                        "done": v33,
                        "value": v29,
                    };
                    return o34;
                },
            };
            return o35;
        },
    };
}
const v38 = new BigInt64Array();
let v39;
try { v39 = ("p").charCodeAt(C10); } catch (e) {}
v18[3] = v39;
Math.ceil(18680);
Math.sign(F21);
let v46 = !v38;
const v47 = v46++;
let v48 = +F21;
--v48 & v47;
var c = v38;
const o52 = {
};
gc();
class C54 extends F21 {
    static set d(a56) {
    }
}
/V/gdiy;
/a\b!/vmy;
/a{0,1}?/uisy;
new Int8Array(127);
const v64 = [-1.5424212036356715e+308];
v64[536870887n] = v64;
new Uint8Array(6);
function f72() {
}
