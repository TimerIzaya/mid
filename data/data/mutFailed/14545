const v0 = [57534,811488810,4294967296,2147483648,47616,-1974935120,4096,1073741825,256,4294967295];
const v1 = [-21728,-9007199254740991,1858606223];
[-904895497,9007199254740990,-65536,9007199254740992,-14,65537,-9223372036854775808,205216315];
new Uint32Array(256);
let v7 = 3;
v7--;
const v10 = new Uint16Array(v7);
const v11 = v10?.constructor;
try { new v11(false, v10, v10); } catch (e) {}
v0[v1];
const o15 = {
};
const v17 = new Proxy(v10, o15);
let v21;
try { v21 = Date.now(); } catch (e) {}
new Date(64);
5n & 5n;
for (const v25 of v10) {
    v25 % v25;
    v25 ^ v25;
    v25[3] = 5n;
    const v29 = 9007199254740991 * v25;
    const v30 = v29 | v29;
    v30 & v30;
}
class C32 extends Uint8Array {
    #a;
    [v17];
}
new C32();
new C32();
new C32();
new Uint8Array(129);
const v38 = [-8n];
v21 = v10;
try {
    v1.valueOf = v11;
} catch(e39) {
}
const v40 = v38.toLocaleString();
try { v40.link(Uint16Array); } catch (e) {}
