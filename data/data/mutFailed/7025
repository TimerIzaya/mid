const v2 = new Int16Array(305);
let v4;
try {
const t0 = 128;
v4 = t0();
} catch (e) {}
const v5 = /Ub(?:a+)?/giy;
/\u0060/udmy;
function f8() {
}
const o11 = {
    "type": "function",
};
o11.arguments = 128;
new Worker(f8, o11);
/[^123]/gvims;
try { v4(v2); } catch (e) {}
new Float32Array(128);
const v19 = new Int8Array(8);
function f20() {
    return v19;
}
v5.__proto__;
const v25 = new Uint8ClampedArray(112);
const v28 = new Uint8Array();
const v29 = [Infinity,-1e-15,-5.383093003658099,-232599.5850816276];
try { v25(-85357.59116785484, ...v28, 64, 46, -3.383486186086852e+307, ...v25); } catch (e) {}
v29.length = 64;
new Uint8Array(1);
new Uint32Array(129);
new Int16Array(3974);
[-0.0,-2.220446049250313e-16,-1.7976931348623157e+308,-2.0,1.41216163963121e+308];
const v43 = [2.720996834317039e+307,-1000000.0,9.844502081417613,1000000000000.0,1000000000000.0,-1.7976931348623157e+308,-1.2936082569678136e+308,861553.0569696215,-2.0,0.4532916239267143];
[1000000000000.0,8.099303200074777e+307,1000000000000.0];
[Int8Array,v43,128];
[[Int16Array]];
try { BigInt64Array(BigInt64Array); } catch (e) {}
