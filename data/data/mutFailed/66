new Set();
const v4 = new Int8Array(7);
65 - 65;
try { new Float32Array(7, 7, Int8Array); } catch (e) {}
const v9 = new Float32Array(7);
let v10;
try { v10 = v9.slice(v9, Set); } catch (e) {}
let v13;
try { v13 = new Map(Map, Int8Array, v4); } catch (e) {}
new Map(1000, v10, v13);
[958211.7665748822,-229250.6681847315,5.78374620458602,-822852.7176184042,-1000000000000.0,0.6093489871936428,-0.0,-636.195794077345,583.8754422663048];
[-1e-15,-839696.9760532192,0.27138614316895715,-Infinity,4.0,2.2250738585072014e-308];
[3.9671637048678043,1000000.0];
try {
const t0 = 65;
t0(Set);
} catch (e) {}
("boolean").normalize();
const t0 = -7;
const v4 = new t0();
[-3.0,-2.57320313367727e+307,0.11480153046095487];
[-5.0,0.9743144742059532,5.0,4.0,4.781941624625952e+307];
[1000000000.0,1000000000.0,NaN];
v4.tanh();
