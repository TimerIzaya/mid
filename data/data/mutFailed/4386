let v2 = 6;
class C4 {
    get b() {
        delete this?.e;
        v2 = 1664606158;
        const o8 = {
            valueOf() {
                return this;
            },
        };
    }
}
class C9 extends C4 {
    constructor(a11, a12, a13, a14) {
        super();
        super.b;
    }
}
new Float64Array(1073741824);
function f20(a21, a22) {
    function f23(a24) {
        return arguments;
    }
    const v26 = f23(f20, a21, a21, a22);
    const o27 = {
        ...v26,
    };
    return o27;
}
const v28 = f20();
const v29 = [47264];
const v30 = [1182421064,65537,-60141,5,-944424144,-1073741824,-1276885593,13,-1,-9223372036854775808];
let v31;
try { v31 = v30.copyWithin(512n, v29); } catch (e) {}
let v32;
try { v32 = v30.fill(v29); } catch (e) {}
v32[5];
let v34 = 0;
class C36 extends Int8Array {
}
class C39 extends Uint16Array {
}
class C40 extends C39 {
    constructor(a42, a43, a44, a45) {
        super();
        function f46(a47, a48, a49) {
            return a47;
        }
        const v52 = new BigUint64Array();
        const v54 = [2082,"function",this,C39,v52];
        const o55 = {
            "arguments": v54,
            "type": "function",
        };
        new Worker(f46, o55);
    }
}
v34++;
const v59 = ("p").strike("p", "p", "p", "p");
v59.search(v59);
const v61 = [7,-9223372036854775808];
const v65 = new v31();
const v66 = new v31();
let v67;
try { v67 = v66(v66, v65, -8n, ...v28); } catch (e) {}
-9932 >>> v67;
const v75 = [[-984503.961837067,-3.0,170.79545126331868]];
try {
    v75.e = 170.79545126331868;
} catch(e76) {
}
const v77 = [-8n,v61,"setUint8"];
try { v77.toLocaleString(); } catch (e) {}
try { v77.values(); } catch (e) {}
let v80;
try { v80 = v77.entries(); } catch (e) {}
const v81 = [142026.36415256164,-1000000000000.0,160593.91457975493,-1.9364523595671663,0.10652337324779793,0.4591098029687508,0.2689630899972745];
const v83 = new WeakMap();
function f84(a85, a86, a87) {
    return a86;
}
const v89 = [f84,v83,v81];
const o90 = {
    "arguments": v89,
    "type": "function",
};
let v91;
try { v91 = v80.next(); } catch (e) {}
v91.value;
const v93 = [v77,"gJf5",v30,-8n,-65537n];
const v94 = [512n,v93,v93,v77];
try { v94.entries(); } catch (e) {}
try { v94.sort(v61); } catch (e) {}
let v98;
try { v98 = new Set(); } catch (e) {}
try { v98.clear(); } catch (e) {}
Set.e = Set;
const o100 = {
    __proto__: Set,
    ...Set,
};
const v101 = o100?.bind;
v101.name;
try { new v101("flat"); } catch (e) {}
o100.length = o100;
class C105 extends Date {
    static get c() {
        eval();
    }
}
