[-960.7381643354993];
[-671.3090150871242,-1.0];
[0.9173781206367507,5.233957886943719e+307,0.12662165959368632,-921947.547929243,743.1321381303028,2.220446049250313e-16,2.2250738585072014e-308];
[0.18372866515424147,461665.2775589656,2.6563672835372962,2.0,-Infinity,1e-15,273866.66349880304];
[0.1647584749770924,0.0,281189.4702332646,-640144.185384929,-9.96248851328583,-1000000000000.0,NaN,-9.185127476558462e+307,-588.058716110192];
[8.063065675598975e+307];
[5,-1726645307,3,-22869,28097];
[-128,738741997,61681,1,-536870912,255,512];
[1326394077,3,-4096,-6,58642,8];
const v19 = [-20857,-1303616328,-1864740753,-1023402966,129,-20506,7,8229,-53914];
v19[536870912] = v19;
let v21 = undefined;
const o25 = {
    set b(a24) {
    },
};
v21 = o25;
o25.f = o25;
function F26() {
    if (!new.target) { throw 'must be called with new'; }
    const v28 = this?.constructor;
    v28.d = v28;
    try { new v28(); } catch (e) {}
}
new F26(-65536);
const t25 = 257;
const v31 = new t25();
function f32(a33, a34) {
    const o41 = {
        n(a36, a37) {
            new Int8Array(1342);
        },
        "a": v31,
    };
    return o41;
}
const v44 = new Uint16Array(257);
%PrepareFunctionForOptimization(f32);
f32().n();
%OptimizeFunctionOnNextCall(v44);
f32();
