function f0() {
    const o14 = {
        get d() {
            this | -1000000000000.0;
            let v9;
            try {
            const t0 = -128;
            v9 = t0();
            } catch (e) {}
            try { new v9(this, -128); } catch (e) {}
            return 32776;
        },
        "c": -1000000000000.0,
        valueOf(a12, a13) {
            return this;
        },
        "a": f0,
        "b": 32776,
        3219: -1000000000000.0,
        "d": 32776,
    };
    return o14;
}
const v15 = f0();
const v16 = f0();
const v17 = f0();
class C18 extends f0 {
    static [v17] = v16;
    static [v15];
    constructor(a20, a21) {
        try {
            this.fuck(a21, "function");
        } catch(e24) {
        }
    }
    2147483647;
    set a(a26) {
        v15[this] = a26;
        const o27 = {
        };
        try {
            o27.b = v16;
        } catch(e28) {
        }
        try {
            const o29 = {
            };
            o29.b = v16;
            o27.constructor;
            function F31(a33, a34, a35, a36) {
                if (!new.target) { throw 'must be called with new'; }
                const v39 = new BigInt64Array(11);
                v39.lastIndexOf(this);
            }
            o29.c = f0;
        } catch(e41) {
        }
        try {
            const o42 = {
            };
            o42.b = v16;
            o42.c = f0;
            o42.g = this;
        } catch(e43) {
            const v45 = new Date(e43);
            const v47 = new Set();
            v47.add(v45);
            let [v49,,...v50] = v47;
            let v51;
            try { v51 = v50.findLast(); } catch (e) {}
            function f52() {
                return v51;
            }
            class C53 extends f52 {
            }
        }
        for (let v54 = 0; v54 < 25; v54++) {
        }
        ([601759695]).includes(...[-1000.0,-2.2250738585072014e-308,511.99933163650917,-386.8372768814137,Infinity]);
        try {
            const o58 = {
            };
            o58.b = v16;
            o58.c = f0;
            o58.f = v16;
        } catch(e59) {
        }
    }
}
new C18();
new C18();
(3.0).toExponential(64);
("valueOf").localeCompare();
new C18();
/(?:a*)+/us;
/(ab)\10N/usy;
/8\xed\xa0\x80b(?<a>.)a\fb\nc\rd\te\vf*/gd;
const v76 = new Uint16Array(3327);
v76.set([-2038832922,-14]);
