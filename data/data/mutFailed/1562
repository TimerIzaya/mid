const v0 = /a|b/gdim;
139837843 in "deleteProperty";
const v6 = new Uint8ClampedArray([515943.2030917471,-1e-15,1.7976931348623157e+308,0.19475803117559898,-546414.0415788401,285129.04068811354]);
/\p{Script=Greek}1y?/gdiy;
const v8 = /a\Bb8mQc/d;
[0.21711709919376143,9.402655030447592e+307,979831.260942213,-1000000.0];
const v10 = [0.9452151872886827,0.2022951026918205,1.5631329853396139e+308];
const v11 = [1e-15,-Infinity];
[52553,-3,-222001890,2118034867,-2147483649,5,1073741824,9,-14];
[-10];
const v17 = [v11,0.7556184011642024,[-2147483648,43123,65536,-4294967297,16]];
new Date(-9223372036854775807, -9223372036854775807, Date, -9223372036854775807);
const v22 = new Float32Array();
[v22];
const v24 = v17[1860];
("setUTCMinutes").toUpperCase();
const v29 = WeakMap?.call;
let v30;
try { v30 = v29(9007199254740992n); } catch (e) {}
try { v30(); } catch (e) {}
function f35(a36, a37, a38, a39) {
    return arguments;
}
new Uint8ClampedArray([5.0]);
%VerifyType(v24);
v11 * v0;
function F48() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = 9007199254740991;
}
new Uint16Array(139837843);
const t31 = [-55841,536870912,65536,-1024,886617036,3];
t31.length = 1;
const v57 = new Set();
v57[v6];
const v62 = [1.506020714556427e+307,-5.0,0.03090185281437363,1000000000000.0,-2.2250738585072014e-308,-1000000000000.0,4.0,-0.0,-7.262085316788397e+307];
const v64 = gc();
v11[v64] = v8;
v10.length;
9007199254740990 | -9007199254740990;
try {
    v62.d = 19743;
} catch(e67) {
}
v64?.then;
try {
const t0 = -1714662903n;
t0();
} catch (e) {}
