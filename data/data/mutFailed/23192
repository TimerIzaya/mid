new Uint8ClampedArray(11);
11 < 11;
const v6 = new Uint32Array(3);
class C7 {
    constructor(a9, a10, a11, a12) {
        for (let v13 = 0; v13 < 5; v13++) {
            v6[v13] = a12;
        }
    }
}
new C7();
function f17(a18, a19) {
    return a18;
}
function f20() {
    return Int8Array;
}
const v21 = f20();
f17(v21, v21);
new BigInt64Array(6);
new Int32Array(246);
function F34() {
    if (!new.target) { throw 'must be called with new'; }
    const v37 = new Map();
    v37.values();
    const o39 = {
    };
    const v42 = 1842642860 % !o39;
    function f43() {
        Symbol.e = Symbol;
        return eval(Symbol);
    }
    f43();
    v42 % v42;
}
let v50 = new F34();
v50.toString = f20;
const v51 = new F34();
const v52 = new F34();
const v55 = new Float32Array(1439);
new BigUint64Array();
function f58(a59, a60) {
    return f58;
}
const o63 = {
    "type": "function",
};
const v64 = new Worker(f58, o63);
const v65 = v64.terminateAndWait();
v64.terminateAndWait(v65, Worker, v65, v65);
const v71 = new Uint16Array();
v50 |= v51;
v71.length <<= 1439;
v55[6] = v52;
function f72() {
    [-65537n,-65537n];
    v71?.constructor;
    v55.b = 6;
    function F76(a78) {
        if (!new.target) { throw 'must be called with new'; }
        0 / 0;
    }
    const o87 = {
    };
    return o87;
}
