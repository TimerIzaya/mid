let v2 = "EPSILON";
function f3() {
    return v2;
}
try { f3(); } catch (e) {}
class C5 extends f3 {
    static #b;
    constructor(a7) {
        super();
        let v8;
        try { v8 = ("1073741824").trimLeft(); } catch (e) {}
        try { v8.trimLeft(); } catch (e) {}
        let v10;
        try { v10 = v8.of("grow", a7, v8, v2, this); } catch (e) {}
        try { v10("1073741824", v10, v8, this); } catch (e) {}
        v2 = a7;
        -14 % -14;
    }
    h;
    static ["1073741824"] = "1073741824";
}
try { C5.toString(); } catch (e) {}
const v17 = new C5("grow");
function f18() {
    const o25 = {
        m() {
            const o23 = {
                "execution": "async",
                "type": this,
            };
            gc(o23);
        },
    };
    return o25;
}
const v26 = f18();
const v27 = f18();
class C28 {
}
const v29 = v26.m();
Object.defineProperty(C28, v27[f18], { enumerable: true, set: f18 });
v17.h;
new C5("1073741824");
const v33 = new C5(v2);
v33.h = v33;
new Map();
for (let v41 = 0; v41 < 10; v41++) {
    const v43 = Symbol.match;
    Symbol.for(v29.description);
    const t49 = "-4294967296";
    t49[v43] = 5.0;
}
