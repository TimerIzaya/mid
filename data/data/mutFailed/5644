const v0 = [5];
const v1 = [-9223372036854775807,1024];
[2147483649,11,16,536870889,16];
const v5 = new Float64Array(5);
let v6;
try { v6 = v5.entries(); } catch (e) {}
class C9 {
    static 5;
    static 0;
}
new C9();
const v11 = new C9();
new v11();
new Uint16Array(1388);
8 - v6;
new Uint16Array(8);
try {
    v1.b = v0;
} catch(e18) {
}
try {
    function f19() {
        const v22 = new Int8Array(1073741823);
        v22.f = v11;
        return f19;
    }
    v6();
    new Uint16Array(v1);
} catch(e25) {
    class C26 {
    }
    ("toString").match();
    gc();
}
const v33 = 8 >> -18321;
~v33;
Math.tan(v33);
const o37 = {
    "arguments": v1,
    "type": "function",
};
o37.a = o37;
-1000000.0 + -1000000.0;
const v43 = 9007199254740991n * 9007199254740991n;
v43 * v43;
