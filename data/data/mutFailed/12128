function f0() {
    const o8 = {
        "d": NaN,
        __proto__: NaN,
        set h(a5) {
            super.b <<= a5;
            try { a5.p(a5, this, this, a5); } catch (e) {}
            super[a5];
        },
        [NaN]: -1000000000000.0,
        ...64,
        [-1000000000000.0]: 64,
    };
    return o8;
}
f0();
const v10 = f0();
const v11 = f0();
class C12 extends f0 {
    #a = v11;
    static #f;
    p(a14) {
        let v15;
        try { v15 = new a14(this, this, this, v10); } catch (e) {}
        try {
            v11.#a /= v15;
        } catch(e16) {
        }
        return f0;
    }
}
new C12();
new C12();
new C12();
new Array(3088);
207 + 207;
Float32Array[Symbol.toPrimitive] = Array;
new Float32Array(207);
let v32 = 14;
v32--;
try { new Uint8ClampedArray("symbol", v32, 207); } catch (e) {}
new Uint8ClampedArray(v32);
new Uint32Array(4096);
const v41 = 220 >> 220;
const v43 = new BigUint64Array(220);
Object.defineProperty(v43, Symbol.toPrimitive, { enumerable: true, value: f0 });
const v46 = v43[42];
const v49 = new Uint32Array(958);
v49.g = v49;
const v52 = new Int8Array(3844);
function f53(a54, a55) {
    d = a55;
    let v56 = 0;
    while ((() => {
            const v58 = v56 < 10;
            v58 || v58;
            return v58;
        })()) {
        for (let v60 = 0; v60 < 5; v60++) {
            "n" + v60;
        }
        v56++;
    }
    return 3088;
}
v52.valueOf = f53;
v52[372] = v52;
let v66 = -1024n;
class C67 {
    set c(a69) {
        v66 = 0n;
        a69 += 0n;
    }
    constructor(a71, a72, a73, a74) {
        C67 >>> v52;
    }
    static [v49] = v46;
    128 = "Cl";
    m(a77) {
        let v78;
        try { v78 = new this(a77, -490778482n, this); } catch (e) {}
        this.c |= v78;
        return a77;
    }
    static 1;
    static h = -490778482n;
    static #f = v66;
}
C67.valueOf = f0;
try { new C67(); } catch (e) {}
new C67();
new C67();
const v82 = new C67();
[1.7976931348623157e+308,0.15227894183030433,-2.0,259880.3330397869,0.0,-1e-15,360683.0243419355,-1e-15,1.7976931348623157e+308];
const v85 = [0.03568519099872258];
try { v85.join(v43); } catch (e) {}
const v87 = [462318.599710946,0.6123807977566038,-0.0,-108306.02593608841,Infinity,0.0,-4.0,-1000.0];
try { v87.at(4096); } catch (e) {}
class C89 {
    static {
        this >> "Cl";
        super[this] = v41;
    }
    [Float32Array];
    static 3518;
    static 2147483648;
    static #valueOf(a93, a94) {
        v82[null] ||= a93;
        const v95 = v85.__proto__;
        try { v95(this, a93, v66, v95, this); } catch (e) {}
        return v85;
    }
    [v66] = v66;
    2;
    static #h = null;
    constructor(a98, a99, a100) {
        new Uint8Array(1024);
        new Int32Array(2);
        new Uint16Array(2277);
    }
    #a = null;
}
new C89();
const v111 = new C89();
v111[2];
new C89();
const v116 = new Uint8Array();
try { v116.entries(); } catch (e) {}
function f118(a119, a120, a121, a122) {
    a121 === a121;
    a121++;
    const o125 = {
        ...v116,
    };
    function f126() {
    }
    function f127(a128) {
        const o129 = {
        };
    }
    function f133(a134, a135, a136) {
        const o137 = {
            "h": a136,
        };
        return o137;
    }
    f133(-3.9870582640049523, -3.9870582640049523, 1000000.0);
    const v139 = f133(1000000.0, -3.9870582640049523, 1000000.0);
    function f140() {
        new Int8Array(9);
        return f127;
    }
    v139.toString = f140;
    f133(-3.9870582640049523, -2.2250738585072014e-308, -3.9870582640049523);
    v139["toString"]();
}
for (let v147 = 0; v147 < 500; v147++) {
    f118(Uint8Array, 2, v147);
}
