class C3 {
    #d;
    ["1024"] = "h";
    constructor(a5) {
        try {
            a5.__proto__ = this;
        } catch(e6) {
        }
        let [...v7] = "fCiP";
        try { v7.copyWithin("fCiP", "fCiP"); } catch (e) {}
        function F9(a11, a12, a13) {
            if (!new.target) { throw 'must be called with new'; }
            const v14 = this?.constructor;
            try { new v14(F9, a5, F9); } catch (e) {}
            a11[1024] = a11;
            try {
                this.b = a12;
            } catch(e16) {
            }
        }
        F9.name = F9;
        const v17 = new F9(this, a5, "h");
        v17.e = v17;
        new F9("1024", this, "h");
        const v19 = new F9("h", "h", a5);
        v19.b = v19;
    }
}
const v20 = new C3("h");
v20[1024];
const v22 = new C3("1024");
v22[1024];
const v24 = new C3("fCiP");
v24[1024] = v24;
[10,504348468,-1771370050,-5,1430650075,-2147483647];
[25296,-49862,4294967297,1073741824,-1100453917,536870912];
const v27 = [257,-22413,9007199254740990,10,2080590061,268435456,-2147483649,-1511383007,6,11];
try { v27.toSorted(v20); } catch (e) {}
Int16Array.prototype = Int16Array;
new Int16Array(129);
new BigInt64Array(255);
new Uint8ClampedArray(257);
const v38 = [-Infinity];
class C39 {
}
const v40 = new C39();
v38 << v40;
