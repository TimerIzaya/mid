class C3 {
    6 = 1000000000000.0;
    set d(a5) {
        for (let v7 = 0; v7 < 32; v7++) {
            a5["p" + v7] = v7;
        }
    }
    constructor(a11) {
        this.p9 = this;
        this[6] = this;
        for (let v12 = 0; v12 < 32; v12++) {
            this["p" + v12] = v12;
        }
    }
}
const v15 = new C3(C3);
const v16 = new C3(1000000000000.0);
function f17(a18, a19) {
    v16[C3] >= v15;
    return v16;
}
v16[Symbol.toPrimitive] = f17;
new C3(C3);
class C25 extends C3 {
    static f = v16;
    512;
    static #valueOf(a27, a28, a29, a30) {
        a28 <= a29;
        a29.d;
        for (let v33 = 0; v33 < 32; v33++) {
            a29["p" + v33] = v33;
        }
        return v16;
    }
    static b;
    static [v16] = -119178456;
}
C25.prototype = C25;
new C25();
const v37 = new C25();
v37.p16 = v37;
new C25();
2147483648 !== -43430;
2147483649 & 2147483649;
-2.0 - -2.0;
function F47(a49, a50, a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = -2.0;
    this.c = a49;
}
const v53 = new F47(-2.0);
const v54 = new F47(-1.093925554716035e+308);
-1.093925554716035e+308 || (v54 in v53);
