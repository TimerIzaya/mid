const v6 = [9007199254740992];
const v7 = [v6,9007199254740992,-536870912];
[v7,-9007199254740992,v6];
function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        v6.g = a12;
    } catch(e13) {
    }
}
new F9(-536870912, v7);
new F9(-9007199254740992, v7);
new F9(-1193348822, v6);
const t13 = -1193348822;
new t13(1000);
new BigInt64Array(129);
new Uint32Array(1464);
new Date("2");
function f32(a33) {
    return a33;
}
this.onmessage = f32;
new Float64Array(4);
const v37 = new Float32Array(3587);
const v40 = new BigUint64Array(1282);
const v43 = [3587,[[v37],4,3587],1282,Float64Array,v40];
function f44() {
    return f44;
}
new Float32Array(1282);
for (const v47 of v37) {
    function F48(a50, a51) {
        if (!new.target) { throw 'must be called with new'; }
        this.g = v47;
    }
    new F48();
}
class C53 extends f44 {
    constructor(a55, a56, a57, a58) {
        const v60 = ([1.479450712344466]).join();
        for (let v61 = 0; v61 < 25; v61++) {
            v60.__proto__;
        }
        super();
        function f63() {
            return a58;
        }
        class C64 {
            #valueOf(a66, a67, a68) {
            }
        }
        const o71 = {
            valueOf() {
                return true;
            },
        };
        v43.length = o71;
        for (let v72 = 0; v72 < 5; v72++) {
            const v73 = [-Infinity,2.220446049250313e-16,-1.7976931348623157e+308,2.220446049250313e-16,Infinity,38895.10169439507,0.0,-839.2678689183415,0.9830891302642997];
            for (let v74 = 0; v74 < 10; v74++) {
            }
            const v76 = new Int16Array();
            for (let v78 = 0; v78 < 25; v78++) {
                function f79() {
                }
                function f80(a81, a82, a83, a84) {
                    const v85 = f79();
                    for (let v87 = 0; v87 < 64; v87++) {
                        v87 ^ v85;
                        Math.sqrt(1024);
                        Math.log10(1024);
                    }
                    139837843 in v76;
                    new Int8Array(v73, v78, v78);
                    new Int8Array();
                    return f80;
                }
                f80(v73, v73, v78, Date);
            }
            function f98() {
                let v99 = -268435456;
                v99--;
            }
            for (let v101 = 0; v101 < 5; v101++) {
                function f102() {
                    45725n === 45725n;
                }
                f102();
            }
            function f106() {
                class C107 {
                }
            }
            class C108 extends f106 {
            }
            for (const v109 in C108) {
            }
            let v110 = 10;
            for (; v110--;) {
            }
            class C112 {
            }
            const o113 = {
            };
            class C114 {
            }
            for (let v115 = 0; v115 < 10; v115++) {
                for (let v116 = 0; v116 < 32; v116++) {
                }
            }
            f63();
            %OptimizeFunctionOnNextCall(f63);
        }
    }
}
new C53();
