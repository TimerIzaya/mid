class C3 {
    set c(a5) {
        const o6 = {
        };
        try {
            o6.e = "536870889";
        } catch(e7) {
        }
        try {
            const o8 = {
            };
            o8.e = "536870889";
            o8.c = a5;
        } catch(e9) {
        }
        try {
            const o10 = {
            };
            o10.e = "536870889";
            o10.c = a5;
            o10.a = "536870889";
        } catch(e11) {
        }
        try {
            const o12 = {
            };
            o12.e = "536870889";
            o12.c = a5;
            o12.a = a5;
        } catch(e13) {
        }
    }
}
new C3();
new C3();
new C3();
function f23() {
}
const v24 = /(?<a>(?<b>(?<c>(?<d>.).).).)/vdmsy;
const v25 = /{}(x)(x)(x)\4*a{0}a|b/msy;
const v26 = /G\8\x60/gmsy;
const v27 = [v24,v24,v26,f23,v26];
class C29 extends isNaN {
    constructor(a31, a32) {
        a32[2];
        /Ia[a]/uims;
        let v35 = /W(jy2)/udy;
        v35.flags;
        const v37 = /(u4(?:a?)*)/gudimsy;
        const v40 = new TypeError(v37, f23);
        const v42 = new Uint32Array();
        function f43(a44, a45, a46, a47) {
            const o51 = {
                ...v40,
                n(a49, a50) {
                    v42[a44] = v42;
                },
            };
            return o51;
        }
        for (let v52 = 0; v52 < 625; v52++) {
            f43(TypeError, 2, v52);
        }
        v35 = v37;
        for (let v54 = 0; v54 < 25; v54++) {
            v27["p" + v54] = v54;
        }
    }
}
([-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135]).fill();
[v26,[v24,v27,v25,v27,v24],f23];
let v61 = -9007199254740992;
v61++;
241 >>> 241;
let v66 = 4;
v66--;
const v69 = new BigUint64Array(v66);
function F70(a72, a73, a74) {
    if (!new.target) { throw 'must be called with new'; }
    var b = -2147483649n;
    function f77(a78, a79) {
        arguments.toString = a78;
        return a78;
    }
    f77(f77, 8077n);
    a73--;
    this.replace = v27;
    this.a = a73;
}
const v83 = new F70(BigUint64Array, v66, v69);
for (const v84 of v69) {
    class C85 {
    }
    const v86 = [-8617,3];
    function f87(a88, a89, a90, a91) {
        const o92 = {
            "h": a88,
            "b": v86,
        };
        return o92;
    }
    Object.defineProperty(v83, 241, { enumerable: true, value: v84 });
    const o93 = {
    };
    o93.h = o93;
    const o95 = {
    };
    o95.d = o95;
}
