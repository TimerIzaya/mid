function f0() {
}
let v1 = "0";
Math.log2(++v1);
function F7(a9) {
    if (!new.target) { throw 'must be called with new'; }
    a9 | a9;
    const v11 = this?.constructor;
    try { new v11(3n); } catch (e) {}
}
new F7(257);
function f14() {
    return f0;
}
function f15(a16) {
    a16.g = a16;
    const v19 = /9f8\xf0\x9f\x92\xa9/diy["compile"]();
    v19.b = v19;
    return [601759695];
    const o21 = {
        "h": v19,
        [f0]: a16,
        10: f0,
        __proto__: a16,
        "d": f0,
        ...a16,
        "c": a16,
        [f14]: f14,
        ...a16,
        7: f14,
        "f": f14,
    };
    return o21;
}
f15.d = f15;
const v22 = f15(f14);
const v23 = f15(v22);
let v24;
try { v24 = v23.some(f0); } catch (e) {}
function f25(a26) {
}
function f27(a28, a29, a30) {
    return a28;
}
const v31 = f15(f15);
const v32 = [v23,v22,f14,v22];
const v33 = [v23,f15,v22,v32,f14];
const v34 = [v33,v33,f15,v31];
const v36 = new WeakSet();
class C37 {
}
const v38 = new C37();
const v39 = v38?.constructor;
try { new v39(); } catch (e) {}
const v41 = new C37();
const v42 = v41?.__defineGetter__;
try { new v42(f15, v22); } catch (e) {}
const v44 = new C37();
function f45(a46, a47) {
    const v48 = [];
    const v49 = [v48,v48,v48,v48];
    v49[1];
    function f51() {
        let v52 = 852.2904873570058;
        for (let v53 = 0; v53 < 5; v53++) {
        }
        const o58 = {
            m(a55, a56) {
                v52++;
                return a56;
            },
        };
        return f51;
    }
    f51();
    const v60 = [v49,v49,v49];
    -4;
    const v65 = Promise.reject(C37);
    0.29489550717955537 + 0.29489550717955537;
    const v69 = new Uint32Array(v65, 36002, 4);
    v69[0.29489550717955537];
    const o71 = {
        __proto__: a46,
    };
    const v72 = o71?.__defineSetter__;
    try { new v72(v32, v32); } catch (e) {}
    const v75 = ("by").normalize();
    try { v75.anchor(v60); } catch (e) {}
    function f77() {
        4087 === 4087;
        const v81 = Array(4087);
        const v82 = v81?.__defineSetter__;
        try { new v82(Array, v38); } catch (e) {}
        for (const v84 of v81) {
        }
        return Array;
    }
    f77();
    return v38;
}
f45(v38);
function F87() {
    if (!new.target) { throw 'must be called with new'; }
}
class C89 {
}
new C89();
const v91 = f45(v41);
v34.escape();
function f93() {
    return f93;
}
Object.defineProperty([f93], -2, { value: f93 });
const v95 = f45(v44);
try { v95.propertyIsEnumerable(v22); } catch (e) {}
try { v91["n"](); } catch (e) {}
const v102 = -63523 >= 127 ? -63523 : 127;
v102 + v102;
const v105 = -(-63523);
const v106 = [0.021647043302781555,982.9822277058386,68.55386187204931,-3.6548181863708407e+307,0.20797002453168356,1000000.0,-569469.7761417266,-3.877892592640821,Infinity,5.0];
try { v106.entries(); } catch (e) {}
const v108 = [1073741824,1073741823,1376142744,1073741825];
try {
    v108.forEach(v39);
} catch(e110) {
}
v106.toLocaleString();
try { v24.localeCompare(v36); } catch (e) {}
127 >>> 2534;
new Float64Array(2534);
Math.asinh(v105);
Math.acosh();
