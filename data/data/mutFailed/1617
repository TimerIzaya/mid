[-3.0,1.0,1.1839660490142056e+308,-Infinity,0.17008575634109602,-1.0];
class C3 extends /nupa\Sc/vms.constructor {
}
new Int16Array(12);
[-520.3808953893325,-1000.0,0.17518041423176578,9.719480009145741,Infinity,-1000.0,0.0,3179.9499287479557,9.406032951538798];
[-7.168062670766908e+307,3.203585857901235,-756.5653788499351,301.4160980966983,1e-15,-444.03772782588317,77653.91171569191,-20.906192004333207,1e-15,3.0];
const v12 = [];
function F13(a15, a16, a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    a15.lastIndexOf(a15, a16);
}
const v20 = new F13(v12);
v20.constructor;
/0qv((\xed\xa0\x80))\x02/gvdi;
/[[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]?]/gvms;
const v24 = [155533.8602852358,2.0];
function F26() {
    if (!new.target) { throw 'must be called with new'; }
    for (const v31 of Array(19793)) {
        v24[658291203] = null;
        Math.cbrt(19793);
        Math.exp(0.4890055133608564 || 0.4890055133608564);
    }
    const v37 = [19793,19793,19793,19793];
    [v37,v37];
    [Array,Array,Array,Array] >= Uint16Array;
}
/a||bc[(ab)\1+]/uims;
new Uint8Array(129);
const o49 = {
    "type": "function",
};
function f50() {
    return o49;
}
const o52 = {
    "type": "function",
};
new Worker(f50, o52);
new Float32Array(3388);
new Int16Array(3856);
const v59 = [];
function f60(a61, a62) {
    a61 <= v59;
    return f60;
}
new Promise(f60);
for (let v66 = 0; v66 < 25; v66++) {
    Math.sin(v66 ** 2);
}
