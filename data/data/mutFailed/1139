class C3 {
    #m(a5, a6) {
        function f7() {
            return a6;
        }
        super[a6] = "f";
        %VerifyType(a6);
        try { this["lastIndexOf"](); } catch (e) {}
        return f7;
    }
    static e = "f";
    static d = "f";
    #g;
    static c;
}
const v10 = new C3();
const v11 = new C3();
const v12 = new C3();
class C13 {
    p(a15) {
        this.g ^= ("f")[8];
    }
    static #n(a19, a20, a21, a22) {
        class C24 {
            4;
            static a;
        }
        new C24();
        new C24();
        const v27 = new this();
        return v27;
    }
    static d = v10;
    7 = v12;
    #a = v11;
}
new C13();
const v29 = new C13();
new C13();
[[v12],"f",v12,381717.6504737276];
[v10,v29,v12];
function F34() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = -3;
    } catch(e37) {
    }
    try {
        this.f = -3;
    } catch(e38) {
    }
}
const v39 = new F34();
const v40 = new F34();
const v41 = new F34();
function F42(a44, a45) {
    if (!new.target) { throw 'must be called with new'; }
    const v46 = this?.__lookupGetter__;
    try { v46(a44); } catch (e) {}
    let v48;
    try { v48 = this.constructor(F42, this); } catch (e) {}
    v48.e = a44;
}
F42.arguments = F42;
const v49 = new F42(v41);
const v50 = new F42(v49, v40);
v50.e = v50;
("Hyo9")[1];
const t67 = "at";
t67[1] = "at";
const v55 = ([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap;
const v56 = v55?.constructor;
try { v56("Hyo9"); } catch (e) {}
try { v55(v39); } catch (e) {}
[-4.202468609045087];
const v60 = [0.8434386161503777];
try { v60.findLastIndex(v60); } catch (e) {}
const t77 = "4i";
t77[1] = "4i";
const t79 = "RpXR";
t79[1] = "RpXR";
("c")?.toLocaleUpperCase;
class C67 {
    constructor(a69) {
        ("valueOf").localeCompare(a69, "valueOf");
    }
}
const v71 = new C67(v41);
const t88 = v71.constructor;
new t88(C67);
