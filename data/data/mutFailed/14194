class C3 {
    static valueOf(a5, a6) {
        a5 = a6;
        let v7;
        try { v7 = a6(this, a5, 7, -8.6137776034713, a6); } catch (e) {}
        return v7;
    }
    [-8.6137776034713] = 7;
    #m(a9, a10) {
        function f11(a12) {
            return 7;
        }
        class C13 extends f11 {
            f = this;
        }
        try {
            this.fuck(4294967296, 4294967296, true);
        } catch(e17) {
        }
        return a10;
    }
}
C3.e = C3;
const v18 = new C3();
const v19 = v18?.__defineGetter__;
try { new v19(-8.6137776034713, 7); } catch (e) {}
const v21 = new C3();
const v22 = new C3();
const v23 = v22?.constructor;
try { new v23(); } catch (e) {}
class C25 {
    o(a27, a28) {
        return this;
        return 12539;
    }
    static c;
    static [-8.6137776034713];
    constructor(a33, a34) {
        const v35 = a33?.constructor;
        try { new v35(); } catch (e) {}
        C3.f ||= 7;
        function f37() {
            function f39(a40) {
                a33.__proto__;
            }
            this.onmessage = f39;
            const v42 = this[-8.6137776034713];
            v22 || (3179 ** 3179);
            Math.asin(v42);
            const v50 = -2.220446049250313e-16 >>> -2.220446049250313e-16;
            ~-849839795;
            Math.min(v50);
        }
        try { f37(); } catch (e) {}
        const v56 = [];
        const o57 = {
            "arguments": v56,
            "type": "function",
        };
        new Worker(f37, o57);
    }
}
let v59 = new C25(v22, v18);
new C25(v21, C25);
let v61 = new C25(v22, v22);
class C62 extends C3 {
    static 0;
    #n(a64, a65) {
        for (let v66 = 0; v66 < 32; v66++) {
            a65["p" + v66] = v66;
        }
        return a64;
    }
    static p(a70, a71) {
        v61 *= a70;
        const o72 = {
            "a": this,
        };
        v59 -= o72;
        Math.expm1(~0);
        Math.clz32(1073741823);
        return v18;
    }
}
const v78 = new C62();
function f79(a80) {
    try {
        new C3();
    } catch(e82) {
    }
    return v78;
}
v78.constructor = f79;
const v83 = v78?.constructor;
try { new v83(); } catch (e) {}
new C62();
new C62();
function f87() {
    const o92 = {
        [-1000000.0]: 0.0,
        set e(a91) {
        },
    };
    return f87;
}
f87.toString = f79;
const v93 = f87();
function f94(a95, a96) {
    const v97 = new f79(a96);
    let v98 = [4.55590263310031,1e-15,2.220446049250313e-16,4.0,3.0];
    v98 = v97;
    return v18;
}
Object.defineProperty(v93, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f94 });
v93.arguments = v93;
const v101 = f87();
function f102(a103, a104) {
    6 >>> 1;
    return v23;
}
v101[Symbol.toPrimitive] = f102;
const v110 = /4VL[a-zA-Z0-9]/uimy;
const v111 = /ufoo(?!bar)baz/ums;
class C112 {
    static [f87] = v101;
}
try { C112.bind(v22); } catch (e) {}
v111[-2] &&= v110;
