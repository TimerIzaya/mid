class C3 {
    m(a5, a6) {
        ("Fa1b")[C3];
        return C3;
    }
    static #h;
    set e(a9) {
        this.d *= -1815339568;
        try {
            super.o(this, "1024", this);
        } catch(e11) {
        }
        this >>> this;
    }
    static 268435439;
    1 = "Fa1b";
    #g;
}
new C3();
new C3();
new C3();
function f16() {
    return "1024";
}
new Uint16Array(64);
new Float32Array(1486);
new Int32Array(0);
let v27 = Date;
class C28 extends v27 {
}
const v29 = new C28();
v29.toGMTString();
const v31 = [155533.8602852358,2.0];
function F33() {
    if (!new.target) { throw 'must be called with new'; }
    const v35 = this?.__lookupGetter__;
    try { new v35(); } catch (e) {}
    for (const v40 of Array(19793)) {
        v31[658291203] = null;
        Math.g = Math;
        let v43 = Math.cbrt(19793);
        v43--;
        const v45 = 0.4890055133608564 || 0.4890055133608564;
        v45 + v45;
    }
    const v47 = [];
    v47.g = v47;
    const v48 = [C28,C28];
    try { v48.fill(); } catch (e) {}
    const v50 = [v47,v47,v47,v47];
    try { v50.entries(); } catch (e) {}
}
const v52 = new F33();
const v53 = (v27 = v52).b;
v52[2147483649] /= v53;
new C28();
Reflect.construct(v53, [Uint16Array,f16,Reflect,Reflect,C3], f16);
new F33();
