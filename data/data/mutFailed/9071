for (let v3 = 0; v3 < 5; v3++) {
    function f4() {
        for (let v5 = 0; v5 < 5; v5++) {
            const t3 = [-Infinity,1.7976931348623157e+308,1.0,1.7976931348623157e+308,-1.0,Infinity];
            t3.length >>>= -65536;
        }
        return f4;
    }
    f4();
    const v9 = [];
    const v10 = [v9];
    const t11 = -2.0;
    const v11 = new t11(v9, v10);
    const t13 = -2.0;
    new t13(v10, v11);
    const v14 = v9 << "toUpperCase";
    v14 ^ v14;
    %OptimizeFunctionOnNextCall(f4);
}
class C16 {
    constructor(a18, a19) {
        try {
            a19.valueOf = a18;
            const v21 = this.valueOf().constructor;
            try { new v21(); } catch (e) {}
            function f23() {
                const v25 = ("D")[0];
                return v25.concat(v25);
            }
            f23();
        } catch(e28) {
        }
    }
    static get b() {
        [-57909,1073741823,256,-905];
        const v31 = [10000,-1824914177,-24270,132821457,10,914922765];
        [-536870912];
        return v31;
    }
}
const v33 = new C16(-2.0, 0.0);
const v34 = new C16(v33, v33);
const v35 = new C16(0.0, v34);
class C36 extends C16 {
    constructor(a38, a39, a40, a41) {
        super(a41, a38);
        function f42(a43) {
            const v44 = [0.5056701084838725,-61629.798017403926,NaN,864.4381894698445,2.220446049250313e-16,783231.8077183717];
            const v47 = new BigUint64Array();
            try {
                v47[16] = v44;
            } catch(e48) {
            }
            return a38;
        }
        class C49 extends f42 {
            static 4294967295 = v33;
        }
    }
    #h;
    static #g = v34;
}
new C36(v35, v34, v35, C16);
new C36(v33, 0.0, v35, v35);
new C36(C16, -2.0, C16, C36);
class C56 {
    constructor(a58) {
        const v59 = (a60, a61, a62, a63) => {
            a62[a58] = this;
            new Uint8Array(3641);
            new BigInt64Array(3745);
            new Int16Array(1000);
            this[536870887] = a58;
            return a63;
        };
        const v77 = new Int8Array(770);
        new Uint8ClampedArray(v77);
    }
}
