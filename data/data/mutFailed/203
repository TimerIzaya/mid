const v0 = [9.263307589147377,129983.29761370574,0.6205969326178304,3.211411306835675,-4.0];
function f1() {
    class C3 extends Int8Array {
    }
    return v0;
}
v0[Symbol.toPrimitive] = f1;
const v6 = [2.0,-141.98280511767655,-0.530941087187859];
const v7 = [-1000.0,0.8163941932988626];
function f8(a9, a10) {
    try { a9.sort(v6); } catch (e) {}
    const o16 = {
        "d": a9,
        get e() {
            function f13(a14) {
                return a14;
            }
            class C15 extends f13 {
                static [this] = v0;
                #h;
                [a9];
            }
            return this;
        },
        "c": a10,
        "a": v0,
    };
    o16.h = o16;
    return o16;
}
f8.arguments = f8;
const v17 = f8(v0, f8);
const v18 = f8(v6, v0);
const v19 = f8(v0, v7);
function f20(a21, a22, a23, a24) {
    const v25 = a21?.groupToMap;
    let v26;
    try { v26 = new v25(f20); } catch (e) {}
    a23.e = a23;
    const o43 = {
        "d": v18,
        "h": a23,
        get b() {
            const v29 = new Date();
            if (v26) {
                let v32 = 129;
                let v34 = -79797.84542282543 >> v32;
                ~(--v32);
                v0 - -1067137345;
                Math.log1p(v0);
                v34--;
            } else {
                function f40() {
                    return f20;
                }
            }
            v0.length >>>= a23;
            v29 * v29;
            a21 >> v17;
            return Date;
        },
        "g": v6,
        "a": v7,
        "e": v6,
        "b": v19,
    };
    o43.length = v25;
    return o43;
}
const v44 = f20(v7, v6, v17, v6);
f20(v7, v0, v17, v7);
const v46 = f20(v7, v7, v17, v7);
v46.a;
const v51 = [-65537,-24143,-1293542190,14907,3476,-65083];
try { v51.lastIndexOf(v18); } catch (e) {}
const v53 = [65537,3,-25535,268435440,-2,9007199254740990,1,-128,9007199254740990];
const v54 = [6,-536870912];
function f55(a56, a57) {
    for (let v58 = 0; v58 < 25; v58++) {
    }
    return v44;
}
Object.defineProperty(v54, "toString", { writable: true, value: f55 });
v54[1];
const v61 = new Date();
function F62(a64) {
    if (!new.target) { throw 'must be called with new'; }
    this[4];
    const o66 = {
        "preventExtensions": f20,
        "setPrototypeOf": f8,
    };
    new Proxy(this, o66);
    const v69 = this?.constructor;
    try { new v69(v44); } catch (e) {}
    this.f = v61;
    this.g = Date;
}
F62.arguments = F62;
new F62(v51);
const v72 = new F62();
v72.a = f55;
v72.a = v72;
class C73 {
    constructor(a75, a76) {
        function f77() {
            const v79 = [1.0,141599.63044947106,730.845463907873,1000000.0,-4.2811873669589365e+307,0.0,3.0];
            try { v79.forEach(-5n); } catch (e) {}
            return -5n;
        }
        this.toString = f77;
        super[a76] = this.g;
        try {
            v46.length = 0;
        } catch(e83) {
        }
        function f84(a85, a86, a87, a88) {
            try { a85.map(v17); } catch (e) {}
            const o90 = {
                "deleteProperty": Date,
                "ownKeys": Date,
            };
            return v72;
        }
        f84(v53, Date);
    }
    [v54];
    g = v72;
}
C73.prototype = C73;
new C73();
const v93 = new C73();
try { v93.toString(); } catch (e) {}
Uint16Array[Symbol.toPrimitive] = Symbol;
const v98 = new Uint16Array();
const v99 = v98?.entries;
try { new v99(); } catch (e) {}
Float64Array.h = Float64Array;
class C104 extends v44.constructor {
    268435439 = v6;
    static #e = v99;
}
new C104();
const v106 = new Float64Array(453);
function f107() {
    return Symbol;
}
function f108(a109) {
}
Object.defineProperty(v106, "constructor", { configurable: true, enumerable: true, get: f107, set: f108 });
try { v106.subarray(v0, Uint16Array); } catch (e) {}
const v114 = v106.toSorted();
const o115 = {
    "c": Float64Array,
    "f": v54,
    __proto__: v98,
};
Date();
Date.valueOf = v114;
const v1 = new WeakSet();
[5.37981096153086e+306,0.3142188728497166,v1];
const v7 = [0.3142188728497166,5.37981096153086e+306,[WeakSet,0.3142188728497166,5.37981096153086e+306],5.37981096153086e+306,0.3142188728497166];
function f11() {
    return -12;
}
function F12(a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = v7;
    } catch(e16) {
    }
    try {
        this.a = f11;
    } catch(e17) {
    }
    try {
        this.d = 5.37981096153086e+306;
    } catch(e18) {
    }
}
new F12(31966, -16);
new F12(-12, -12);
new F12(-16, -16);
class C25 {
    e;
    constructor(a27) {
        try {
            a27.toString = a27;
        } catch(e28) {
        }
        try {
            a27[a27] = f11;
        } catch(e29) {
        }
    }
    c = -3;
}
new C25(C25);
const v31 = new C25(C25);
const v32 = new C25(-2.0);
v32.c;
-65536n == -65536n;
1073741824 - 1073741824;
try { new Uint32Array(9n, -3, -65536n); } catch (e) {}
Object.defineProperty(Array(31966), 257, { set: Array });
const t46 = 5.37981096153086e+306;
const v51 = new t46(-3, 5.37981096153086e+306);
const t48 = 5.37981096153086e+306;
const v52 = new t48(1000.0, v51);
const t50 = 5.37981096153086e+306;
const v53 = new t50(5.37981096153086e+306, v52);
function F54(a56, a57, a58, a59) {
    if (!new.target) { throw 'must be called with new'; }
    const t54 = a59.constructor;
    new t54(a56, v53);
}
new Uint32Array(4096);
Int32Array.length;
const v67 = new C25();
v67.c = v67;
const o72 = {
    set b(a69) {
        Math.log10();
    },
};
o72.b = o72;
function f73() {
    const o74 = {
        __proto__: f73,
    };
    o74.arguments;
    return WeakMap;
}
f73();
new Int32Array(9);
new Uint16Array(120);
const v84 = new Uint16Array(14);
v84[0];
new BigUint64Array();
try { Array.bind(v31); } catch (e) {}
Array();
const v93 = new Int8Array(Array, 92, 485);
v93[277] = v93;
const v95 = 3666 - 3666;
v95 + v95;
const v99 = 0 < 1;
v99 && v99;
const v105 = ([1000,-14,16,-11,-1413918991,-16,-374255446,-14,1000,10]).sort();
try { v105.sort(-65536n); } catch (e) {}
BigInt64Array.g = BigInt64Array;
