class C3 {
    static #f;
    static #g = -1770064111;
    #n(a5) {
        let v8 = -1000000000000.0;
        const v9 = v8++;
        v9 + v9;
        Math.log1p(v8);
        v8 & -2;
        return 268435439;
    }
    static [268435439] = -1770064111;
    constructor(a14, a15) {
        try {
            const t14 = "-27075";
            t14.toString = a15;
        } catch(e16) {
        }
    }
    static #b = "-27075";
}
try { new C3(); } catch (e) {}
const v18 = new C3();
const v19 = v18?.__lookupGetter__;
try { new v19(v18); } catch (e) {}
const v21 = new C3();
const v22 = new C3();
try { v22.toString(); } catch (e) {}
1809735576 >>> 1809735576;
981637649 >> 981637649;
try { new Int16Array(v21, 268435439, v21); } catch (e) {}
const v32 = new Int16Array(9);
v32[8] = v32;
for (let v34 = 0; v34 < 32; v34++) {
    v32["p" + v34] = v34;
}
new BigUint64Array(16);
Uint32Array.prototype = Uint32Array;
new Uint32Array(18);
const v45 = new Uint32Array(381);
const v46 = new Float32Array(v45);
function f47(a48, a49) {
    a49.constructor;
    Array(19793);
    return 9;
}
v46.toString = f47;
v46[352] = v46;
