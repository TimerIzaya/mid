class C3 {
    toString(a5, a6) {
        switch (254816.21397192264) {
            case a6:
                this == -1000000.0 ? a5 : -1000000.0;
                break;
        }
        return -38127;
    }
    static 16 = -1000000.0;
    #e = -1000000.0;
    static [-38127];
}
const v9 = new C3();
const v10 = new C3();
new C3();
class C12 {
    static p(a14, a15, a16) {
        a15[v9] = this;
        v10.sign(268435456);
        let v22 = 268435456 / 254816.21397192264;
        Math.asin(v22);
        Math.sqrt(254816.21397192264);
        268435456 >> -251.55638049515085;
        254816.21397192264 >>> 254816.21397192264;
        v22--;
        return C3;
    }
}
const v28 = [];
v28[6] = 4294967295;
const o38 = {
    get d() {
        this[0] /= 4294967296;
        let v34 = -908890636;
        return Math.log(this & --v34);
    },
};
for (let i = 0; i < 10; i++) {
    o38.d;
}
new v28();
new C12();
new C12();
new BigUint64Array(2);
new Uint32Array(1000);
let v50 = Float32Array;
new v50(1000);
const v52 = [-349055.72992167494,-1000000000000.0,-8.263641716323854e+307,1.050616183420453e+308,1000.0,1000.0,6.087868782871141,-1.7976931348623157e+308,3.0];
const v54 = new Int16Array(v52, v52, v52);
const v56 = [1073741824,1073741823,1376142744,1073741825];
function f57(a58, a59, a60, a61) {
    try {
        const v63 = Symbol.iterator;
        const o65 = {
            [v63]() {
            },
        };
    } catch(e66) {
    }
    function f67() {
        new Int32Array(v52, a61, v54);
        try {
            v56.forEach(a59);
        } catch(e71) {
            const v73 = /xyz{1,32}?/gusy;
            class C74 {
                268435440 = v73;
            }
            new C74();
            const v76 = new Float32Array();
            const v77 = [];
            [v77,v77,v77,v77];
            v50--;
            let v81 = "-185650492";
            const v84 = new BigUint64Array();
            const v86 = new Set();
            function F87(a89, a90) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.e = a89;
                } catch(e91) {
                    for (let [v92,v93] of a89) {
                        class C94 {
                        }
                        v81 = Int16Array;
                        v92 ^= v84;
                        C94 != a89;
                        const v96 = new C94();
                        const t89 = v96.g;
                        t89.length = 1;
                    }
                }
                try {
                    this.h = v86;
                } catch(e99) {
                    this.toString();
                    ("E")[2555];
                }
                try {
                    const v102 = v86[f57];
                    try {
                        new F87(v102, -2046072084n);
                    } catch(e105) {
                    }
                    const o107 = {
                    };
                    const v109 = new SharedArrayBuffer(1024, o107);
                    new BigInt64Array(v109);
                    this.b = Set;
                } catch(e112) {
                }
            }
            v76[2] = v76;
            function f113() {
                const o119 = {
                    "e": -38127,
                    ..."Vre",
                    valueOf(a117, a118) {
                    },
                    ..."Vre",
                    "c": f57,
                    5: -38127,
                    6: -268435456,
                };
                return Float32Array;
            }
        }
        const o127 = {
            [-4294967297n](a121, a122, a123, a124) {
                eval();
            },
        };
        return o127;
    }
    f67();
    eval();
    %OptimizeFunctionOnNextCall(f67);
    return -4294967297n;
}
for (let v131 = 0; v131 < 5; v131++) {
    f57();
}
