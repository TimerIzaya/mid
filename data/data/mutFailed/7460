const v0 = [];
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    this.g = F1;
    this.g = F1;
    this.g = this;
    const o8 = {
        [-1.1635412394243161e+308](a5) {
        },
        set b(a7) {
        },
    };
    try {
        this.g = v0;
    } catch(e9) {
    }
    try {
        this.f = v0;
        class C11 {
            toString(a13, a14) {
                const v15 = `7${this}dm${"unicode"}m`;
                function F16(a18, a19, a20) {
                    if (!new.target) { throw 'must be called with new'; }
                }
                F16(F16(), "unicode", v15);
            }
        }
    } catch(e23) {
    }
}
new F1();
new F1();
new F1();
function f35() {
    const v39 = new Array();
    const t35 = v39.constructor;
    const v41 = new t35();
    v41.constructor = Array;
    const v42 = v41.constructor;
    [v42,Map];
    const v44 = Array(4087, -2.220446049250313e-16);
    function f45() {
        return v42;
    }
    function f46(a47) {
        new Date();
    }
    Object.defineProperty(v44, 4037, { get: f45, set: f46 });
    v44[4037] = v44;
    return Array;
}
%PrepareFunctionForOptimization(f35);
new Uint8Array(268435440);
const v53 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f54(a55, a56, a57, a58) {
    function f59() {
        let v61 = Float64Array;
        v61.toString = f59;
        v61.toString();
        v61 = a56;
        const v63 = v53.length;
        const v64 = v63 >>> v63;
        v64 / v64;
        const o70 = {
            toString(a67, a68) {
                a58 && v61;
                return a56;
            },
        };
        o70.toString();
        let v72 = -268435456;
        v72--;
        const o74 = {
            "e": -4294967295,
            "e": v72,
        };
        return a56;
    }
    const v75 = f59();
    %OptimizeFunctionOnNextCall(f59);
    return v75;
}
const v76 = f54();
f54(v76, v76, f54, v53);
f35();
%OptimizeFunctionOnNextCall(f35);
f35();
