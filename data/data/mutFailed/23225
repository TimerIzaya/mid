class C3 {
    e;
    constructor(a5) {
        function f6(a7, a8) {
            const o9 = {
                3: 648554.7659093514,
            };
            return o9;
        }
        f6("getInt16", 648554.7659093514);
        f6(1829213954, this);
        f6(this, this);
    }
}
new C3("getInt16");
new C3("getInt16");
new C3(648554.7659093514);
new Int32Array(1024);
new Float64Array(10);
new Uint16Array(2489);
class C31 {
    n(a33) {
        return a33;
    }
    static #valueOf(a38) {
        %VerifyType(-7);
        try {
            const o40 = {
            };
        } catch(e41) {
        }
        return 65537;
    }
}
new C31();
const t35 = 1829213954;
new t35();
new Int16Array(2);
new Float64Array(3438);
let v55 = 10 << 10;
--C31;
--v55;
new BigUint64Array();
function F61() {
    if (!new.target) { throw 'must be called with new'; }
    const v63 = [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    (9n).reduce(Date);
    function f68() {
        function f70(a71) {
        }
    }
    Worker.constructor;
    function f75() {
        return f75;
    }
    const o77 = {
        "type": "function",
    };
    new Worker(f68, v63);
    const v79 = Array(19793);
    for (const v80 of 1024) {
    }
    const v81 = [v79,v79,v79,v79];
    [[v81,v81]] >= Uint16Array;
}
new F61();
new F61();
