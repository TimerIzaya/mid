new Int32Array(Int32Array);
new Uint16Array(174);
new Uint16Array(2152);
const v15 = [];
function F16(a18, a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    a18.lastIndexOf(a18, a19);
}
const t8 = -1392634600n;
new t8(v15);
const v24 = v15.constructor;
try { new v24(); } catch (e) {}
const v3 = [4096,-2,745478427,-50804,268899730,16,59121,-65537,-1,1155483622];
try { v3.toString(); } catch (e) {}
const v5 = [-2147483649,-4836,924585054,-3,268435439,-268435456,512,12];
try { v5.map(v3); } catch (e) {}
const v7 = [25208,268435441,2,-9223372036854775808,-268435456,-2147483649,256,4523];
class C8 {
    constructor(a10, a11, a12, a13) {
        a10[4];
        function f16() {
            const o31 = {
                valueOf(a21) {
                    try {
                        this[a21] = this;
                    } catch(e22) {
                    }
                    return this;
                },
                __proto__: "function",
                [-52276]: -410.8373818683839,
                2: -52276,
                "c": f16,
                "h": -52276,
                "e": f16,
                n(a24) {
                    try {
                    } catch(e25) {
                    }
                    (29928 + -52276) / (29928 / -410.8373818683839);
                    return -52276;
                },
            };
            o31[2] = o31;
            return o31;
        }
        const v32 = f16();
        v32[2];
        Object.defineProperty(f16(), 5, { set: f16 });
        v32.c;
        new Int8Array(5);
        new Int32Array(1024);
        15 << 15;
        new Uint32Array(15);
        9.244656323931028e+307 >> 9.244656323931028e+307;
        class C51 {
            constructor(a53) {
                try {
                    super.p(9.244656323931028e+307, f);
                } catch(e56) {
                }
            }
        }
        Symbol.name = Symbol;
        const v60 = Symbol.iterator;
        Symbol.for(v60.description);
        const o72 = {
            [v60]() {
                let v65 = 10;
                const o71 = {
                    next() {
                        v65--;
                        const v69 = v65 == 0;
                        const o70 = {
                            "done": v69,
                            "value": v65,
                        };
                        return o70;
                    },
                };
                return o71;
            },
        };
        o72.h = o72;
    }
}
C8.name;
const v74 = new C8(v3, "dotAll", v3, v5);
const v75 = v74?.__lookupGetter__;
try { new v75(v74); } catch (e) {}
const v77 = new C8(v3, "dotAll", v3, v7);
const v78 = new C8(v3, "18908684", v5, v5);
const v79 = v78?.constructor;
try { new v79(v78, v78, v77, v78); } catch (e) {}
3908 >>> 3908;
try { BigUint64Array("replace", "replace", 123); } catch (e) {}
class C96 {
    constructor(a98) {
        !1030682646;
        let v105 = +1030682646 / 1030682646;
        ++v105;
    }
}
C96.prototype = C96;
