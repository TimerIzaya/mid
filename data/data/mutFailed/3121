function f0() {
}
class C1 extends f0 {
    static 2;
    #valueOf() {
        new f0();
        return -9223372036854775807n;
    }
    #g = f0;
    static [f0];
    0;
}
new C1();
const v8 = new C1();
const v9 = new C1();
const v10 = [-0.0,2.220446049250313e-16,165.52929449982094,2.2250738585072014e-308,-2.220446049250313e-16,-1000000000000.0,1.258280417938226e+307,451122.40352873434,447403.41652876814,-4.0];
const v11 = [1000000.0,Infinity,0.8508323109329821,9.407393855467667,-2.220446049250313e-16];
const v12 = [-1.3667473485475811e+308,1.7976931348623157e+308,5.0,-3.583919688173468e+307,-1.5320462342133301e+308,-414873.4859108749,286122.8434793174,866.7395286670867,-1000.0,-742782.9714922046];
v12[9] = v12;
try {
    v12.byteLength = v11;
} catch(e15) {
}
e = v8;
-14 << -14;
try { ("-1073741824").trimLeft(); } catch (e) {}
const v20 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v21 = [601759695];
class C23 {
}
const v24 = C23();
const v25 = C23();
function f26(a27, a28) {
    const o37 = {
        [-943.3768400471749]: v25,
        [a28](a30, a31, a32) {
        },
        p(a34, a35) {
            this.toString(a35, this, v24);
            return -943.3768400471749;
        },
    };
    return o37;
}
try { v21.toString(); } catch (e) {}
const v39 = [1073741824,1073741823,1376142744,1073741825];
function f41(a42, a43, a44, a45) {
    function f47() {
        const v51 = -268435456 >>> -268435456;
        const o84 = {
            "e": -4294967295,
            ...v20,
            ..."Vre",
            "c": v39,
            "g": a42,
            __proto__: v12,
            "maxByteLength": v51,
            o(a53) {
                const o55 = {
                };
                return gc(o55);
            },
            "b": C1,
            [f0]: -4294967295,
            get a() {
                return v25;
            },
            "defineProperty": f0,
            "arguments": v10,
            "d": -268435456,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a59, a60) {
                return "-1073741824";
            },
            ..."Vre",
            4: "Vre",
            ["-1073741824"](a62, a63, a64) {
                function F65(a67, a68) {
                    if (!new.target) { throw 'must be called with new'; }
                    try {
                        this.h = a64;
                    } catch(e69) {
                        new Uint32Array(Uint32Array, Uint32Array);
                        ("async").lastIndexOf();
                        const o76 = {
                            "execution": "sync",
                            "type": "major",
                        };
                    }
                }
                new F65(this, v9);
                new F65(a63, a45);
                const v79 = [];
                /abc?/gvmy.exec("Q8F");
                const t96 = "Q8F";
                t96[2078209647] = v79;
                const v83 = new F65(f0, "-1073741824");
                return v83;
            },
            "c": -268435456,
            5: -4294967295,
            6: -268435456,
        };
        try { o84.copyWithin(522675525n, -14); } catch (e) {}
        for (const v87 in [-14339,735253629,4294967296,3,268435456,3,57019,268435439]) {
            ("-2").normalize("NFKC");
        }
    }
    f47();
    %OptimizeFunctionOnNextCall(f47);
    const t112 = "find";
    t112[1] = "find";
    let v93;
    try { v93 = v39["find"](..."find", a45, ...v21, ...v39, ...522675525n); } catch (e) {}
    v93 <= a44;
    return arguments;
}
for (let v95 = 0; v95 < 10; v95++) {
    const v96 = f41();
    v96.e = v96;
}
%OptimizeFunctionOnNextCall(f41);
function f97() {
    return f97;
}
f97.arguments = f97;
const v98 = f97();
try { v98(); } catch (e) {}
f41(v39, f41, 522675525n, v20);
