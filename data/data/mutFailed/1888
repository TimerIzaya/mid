const v2 = new Array(3649);
Array / 16;
class C7 extends Array {
    static {
        try { this(); } catch (e) {}
        const v10 = this || this;
        try { v10.bind(Array); } catch (e) {}
        const v12 = 16 in v2;
        v12 && v12;
    }
    [Array];
    9;
    m(a15, a16, a17) {
        class C18 {
            c;
            #g;
        }
        new C18();
        const v20 = new C18();
        new C18();
        return v20;
    }
}
new C7();
const v23 = new C7();
new C7();
function f30(a31, a32) {
    const v33 = a31 == a31;
    const o34 = {
        "f": a32,
    };
    o34?.__lookupSetter__;
    let v36;
    try { v36 = new v33(a31); } catch (e) {}
    return v36;
}
(128).arguments;
f30(1096487296, 1096487296);
v23(268435441, 268435441);
