const v3 = [2147483648,268435441,-9007199254740992];
const v4 = [1073741823,-18361,4294967295,536870912,1727081791,-2104];
const v5 = [4294967295,-1073741824,-9,42982];
class C9 {
    constructor(a11, a12) {
        a11?.h;
        super.g;
        const v15 = this.constructor;
        try { new v15(a11); } catch (e) {}
        Math.atan2(this, this);
    }
    /*
    constructor(a20, a21) {
        const v24 = new Array(228);
        v24.decodeURIComponent(v24);
        1.0 >>> /Mrn(?:a*)+IhCO/udimsy.__proto__;
        /W(jy2)/udy.flags;
        let v34 = v4[v5];
        v34 **= Uint8Array;
        function f35(a36, a37, a38, a39) {
            return a38;
        }
        for (let v40 = 0; v40 < 625; v40++) {
            f35(Uint8Array, 2, v40);
            try {
                a20 &= v5;
            } catch(e42) {
            }
        }
    }
    */
    a = 6n;
    static {
        this[6];
    }
    o(a46, a47) {
        a47 = -632287.8676829647;
        try {
            v3.length = 4294967296;
        } catch(e49) {
        }
        const v52 = new BigUint64Array(4096);
        v52[3408] = v5;
        const v54 = new Uint16Array(Uint16Array);
        new Int32Array(v54);
        return this;
    }
}
const v57 = new C9();
new C9();
class C61 {
    [-8n] = 106889899n;
    constructor(a63) {
        for (let v64 = 0; v64 < 32; v64++) {
            "p" + v64;
            const t54 = "E";
            t54[0] = "E";
            const v68 = /(J5a{0,1}?)/y;
            const v69 = [601759695];
            const v70 = [1073741824,1073741823,1376142744,1073741825];
            function f71(a72, a73, a74, a75) {
                ~a73;
                try { a72(); } catch (e) {}
                const v78 = a74 << a74;
                v78 % v78;
                function f80() {
                    return a72;
                }
                const v82 = new Int8Array();
                BigUint64Array.length;
                const v86 = BigUint64Array * 536870887;
                let v87 = v86 - v86;
                v87++;
                const v89 = v86 ** v86;
                try { Number(v68); } catch (e) {}
                Number.isNaN(v89);
                const v94 = v82.buffer.__defineGetter__;
                try { v94(); } catch (e) {}
                %OptimizeFunctionOnNextCall(f80);
                let v97;
                try { v97 = v70["find"](..."find", a75, ...v69); } catch (e) {}
                return v97;
            }
            for (let v98 = 0; v98 < 5; v98++) {
                f71(this, v98);
            }
            function f100() {
                for (let v101 = 0; v101 < 5; v101++) {
                }
                return f100;
            }
            f100();
        }
    }
}
new C61();
new C9();
const v106 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
try {
    v106.forEach(Float64Array);
} catch(e109) {
}
Math.asin(2.220446049250313e-16);
class C114 extends Array {
    2 = 64;
}
const v115 = [];
const v116 = [v115,v115,v115,v115];
new Int16Array(v4);
function f122(a123) {
    function f125(a126) {
        try { a123.valueOf(a126, Uint32Array, WeakSet, a126, this); } catch (e) {}
    }
    this.onmessage = f125;
}
eval();
new Float64Array(v116);
function f131() {
}
const v132 = [v116,v116,v116];
function f133() {
    return v132;
}
v57.lastIndexOf();
Math.fround();
new WeakSet();
const v139 = new BigUint64Array();
function F140(a142, a143, a144, a145) {
    if (!new.target) { throw 'must be called with new'; }
    const v146 = this.constructor;
    try { new v146(v139); } catch (e) {}
    a142.d = a142;
}
Math.__defineSetter__;
Array(16);
%OptimizeFunctionOnNextCall(f133);
f133();
