new Uint16Array(198);
-9223372036854775808n & -2147483647n;
[Reflect];
const v10 = new Int8Array(256);
const v13 = new Int8Array(1490);
class C14 extends Int8Array {
    [1490] = 1490;
    0;
    static toString(a16, a17) {
        if (Int8Array) {
            new Int32Array(1024);
            function f22() {
                return f22;
            }
        } else {
            const v25 = [];
            class C26 {
                constructor() {
                    delete v25[1073741824];
                }
            }
            this[-1];
        }
        function f30(a31, a32) {
        }
        new Float32Array([-37102.6674218484,-969411.635186719,-1.3592557640113297e+308,0.9054806195219168,1000000000000.0,-0.0,-3.0,-0.0]);
        return 256;
    }
    [198];
    static [v13] = v13;
    [Int8Array] = v10;
}
new C14();
new C14();
const v39 = Symbol.toPrimitive;
function f40(a41, a42, a43) {
}
v39 >> v39;
new C14();
[59559,-1905317847,-35158];
[1000,4294967296,1073741825,-4,268435439,8,776407821,-1073741824];
[301298953,-13,261726255,64,-1509272292,1697894177,-1125426207];
const v52 = new Int8Array(3663);
const t43 = v52[14n];
t43.__proto__ = v52;
