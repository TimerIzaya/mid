class C3 {
    static get b() {
        let v4 = this;
        ++v4;
        new Map();
        try {
            const o8 = {
            };
            new Map(o8);
        } catch(e10) {
        }
        return Map;
    }
    static 3 = 1000000000000.0;
}
const v11 = C3[3];
new C3();
const v13 = new C3();
function f14() {
    v11?.e;
    class C18 {
        [9007199254740990] = -624806.1246088534;
    }
    const v19 = new C18();
    function f20(a21, a22, a23, a24) {
        const o54 = {
            ...a24,
            "g": v13,
            m(a26) {
                a26.f = a26;
                try { a26.next(); } catch (e) {}
                a26.c = a26;
                a26.h = a26;
                const o28 = {
                };
                o28.h = o28;
                o28.h = o28;
                function f29(a30, a31, a32) {
                }
                f29.caller = f29;
                try {
                } catch(e34) {
                }
                try {
                    const o36 = {
                    };
                    o36.h = o36;
                } catch(e37) {
                }
                Math?.expm1;
                const v41 = -9007199254740991 >> -9007199254740991;
                v41 - v41;
                class C43 {
                    o(a45, a46, a47, a48) {
                    }
                }
                C43.name;
                const v52 = new Int8Array(3938);
                let v53 = 3;
                [...v53] = v52;
            },
            __proto__: v19,
        };
        return a24;
    }
    return 9007199254740990;
}
v13.constructor = f14;
const v55 = v13?.constructor;
try { new v55(); } catch (e) {}
const v57 = new C3();
v57.constructor = f14;
const v58 = v57?.constructor;
try { new v58(); } catch (e) {}
let v60 = 3562;
v60 >> v60;
const v63 = new Int16Array(v60);
gc();
const o66 = {
};
new BigInt64Array(4046);
v63[356];
new BigInt64Array(64);
Uint32Array.prototype = Uint32Array;
const v76 = new Uint32Array(4);
Uint8Array.length;
class C81 {
    constructor(a83, a84) {
        function f85(a86) {
            function f88(a89) {
                return a89;
            }
            this.onmessage = f88;
        }
        const o94 = {
            toString() {
            },
            get a() {
                v60 %= v60;
                return f14;
            },
            "type": "function",
        };
        o94.arguments = Worker;
        new Worker(f85, o94);
    }
}
new C81();
const v97 = new C81();
const v98 = v97?.__lookupGetter__;
try { new v98(v63); } catch (e) {}
const v100 = new C81();
Object.defineProperty(v100, "constructor", { writable: true, configurable: true, value: f14 });
const v101 = v100?.constructor;
try { new v101(v76, v100); } catch (e) {}
const v103 = new Uint8Array();
let v104;
try { v104 = v103.entries(); } catch (e) {}
v104.constructor(v104);
const v107 = v100.constructor;
try { new v107(v100, f14, -14); } catch (e) {}
class C109 {
}
new C109();
const o111 = {
};
