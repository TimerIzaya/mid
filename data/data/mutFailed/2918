let v0 = -1000.0;
class C3 {
    static #g = v0;
    static {
        try { new this(); } catch (e) {}
        this.e >>= v0;
        v0 ||= 7.1032758019516535;
        try {
            this.toString = this;
        } catch(e6) {
        }
    }
    [-2];
}
const t14 = 7.1032758019516535;
const v7 = new t14();
const v8 = v7?.constructor;
try { new v8(); } catch (e) {}
const v10 = new C3();
const v11 = new v10();
class C12 {
    n(a14, a15) {
        super.f;
        return v7;
        return v11;
    }
    o(a18, a19, a20, a21) {
        const v22 = [1024];
        const v23 = [29043,536870912,-1];
        function F24(a26) {
            if (!new.target) { throw 'must be called with new'; }
            this.c = v22;
        }
        const v27 = new F24();
        const v28 = new F24();
        const v29 = new F24();
        [1073741825,2147483649,-1834340010,1,9,37979,8,268435439,-3,536870888];
        const v32 = [-859764070,-1024,-58163,-4,-8624];
        v32.push();
        function F34(a36, a37, a38) {
            if (!new.target) { throw 'must be called with new'; }
            const v39 = this.constructor;
            try { new v39(a38, 10n, a38); } catch (e) {}
            a37.c = a37;
            a38.e = a38;
        }
        new F34(v29, v27, v29);
        new F34(a19, v29, v32);
        new F34(v28, v29, v22);
        new F34(v28, 268435441, v23);
        a21 * a21;
        return a21;
    }
    f;
}
C12.length;
new C3();
new C12();
new C12();
311381866 & 311381866;
const v55 = [5.0,-1000000000000.0];
[-3.4570322798414105e+307,169.39416483428454,-2.0,-1000.0,5.0,1.0,14338.693316202844,-1000000.0,955.167973693761,0.5696151956948133];
[-2.0,-2.0];
const t61 = "string";
t61.f = "string";
try { Array.isArray(-256); } catch (e) {}
-6;
const v65 = new Array();
let v66;
try { v66 = v65.findLast("F"); } catch (e) {}
const v68 = new Date();
try { v68.setFullYear(v55, 4, v55); } catch (e) {}
Array[2147483648] = v68;
const v70 = Date > "undefined";
!v70;
v70 ? Date : v66;
let v73 = 0;
do {
    const o77 = {
        "execution": "async",
        "type": "minor",
    };
    gc(v55);
    ~(v73++);
} while (v73 < 2)
