new Set();
new Uint8Array(3);
new Float64Array(3);
new Math(10);
function f14() {
    return f14;
}
class C15 extends f14 {
    constructor(a17) {
        super(a17, a17, 127);
        for (let v18 = 0; v18 < 5; v18++) {
            const v20 = "p" + v18;
            class C21 {
            }
            new Float64Array();
            [Infinity,1.0,-1.2272545370579378e+308,-1000000.0,5.0,1.7976931348623157e+308,5.0];
            try {
                const v26 = C21(19793);
                for (const v27 of v26) {
                    function f28() {
                        return f28;
                    }
                    /xyz{93}z[\11]\u{12345}+/msy;
                }
                new BigUint64Array();
                const v32 = a17.values();
                const o33 = {
                };
                o33.e;
                const v35 = v32.getOwnPropertyDescriptors(v32);
                [v26,v26,v26];
                [10];
                v35 >= Uint16Array;
            } catch(e40) {
            }
            this[v20] = v18;
        }
    }
}
new C15(Uint8Array);
