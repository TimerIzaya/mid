const v2 = new BigInt64Array(230);
function f6(a7) {
    const o8 = {
        3677: BigInt64Array,
    };
    return o8;
}
f6(-1024n);
f6();
function F11(a13, a14, a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    const v17 = this?.constructor;
    try { new v17(this, a16, a16, this); } catch (e) {}
    a14[3677];
    a15 << a15;
    a16.e = a16;
    try {
        this.e = a13;
    } catch(e21) {
    }
    try {
        this.d = f6;
    } catch(e22) {
    }
}
new Float32Array(12);
new Float64Array(230);
const v28 = [];
class C29 {
    static #g = v28;
    static d;
    static #c;
    static e;
    static {
    }
}
const v31 = [5,-16,268435441,65537,268435441,-9223372036854775807,65535,536870887];
[14731,9007199254740992,512];
[64299,-11,65536];
function F34() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        C29.a = 4;
    } catch(e37) {
    }
    try {
        this.f = 4;
        const o40 = {
        };
        o40.type = 64;
        gc(o40);
    } catch(e42) {
    }
    try {
        this.g = 4;
    } catch(e43) {
    }
    new Uint16Array([-2023,8,-5,-19182,268435441]);
    function F47() {
        if (!new.target) { throw 'must be called with new'; }
    }
    try {
        v31.fuck(v31, v31, F47);
    } catch(e50) {
    }
}
const v51 = new F34();
new F34();
new F34();
class C54 {
    set a(a56) {
        class C57 {
            static 128 = v51;
            #b;
        }
        new v2();
        new C57();
        new C57();
    }
    static o(a62) {
        a62 % this;
        super.d;
        return F34;
    }
}
const t85 = -128n;
new t85();
new C54();
new C54();
[-607177.2196757733,9.867882161988646,-0.0,3.0,-676012.8801316076,1e-15,1000000000000.0];
[3.0,633532.0914372578,0.8220211022589221,-Infinity,Infinity];
const v72 = new Uint32Array(127);
new Uint8Array(v72);
const v75 = [-2.2250738585072014e-308];
const v78 = new Float32Array(59);
new Int32Array(10);
const v83 = new Int32Array(128);
[1.7976931348623157e+308,1.1709134723669872e+308,-0.0,1.0,3.0,-5.0,367.2989632960466,661.7758659107592];
const v85 = [-288943.075893088,-5.305261585320875,193686.0922863416,8.005740932944335,2.220446049250313e-16,-833.0196519212178,0.7064019879043599,-1000000000000.0];
for (const v86 in v78) {
}
const v87 = v83[230];
try { v87(v85, Float32Array, F34, v75); } catch (e) {}
