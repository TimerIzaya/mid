new Float32Array(865);
function f10(a11, a12) {
    const o13 = {
        [a11]: a12,
        [a12]: -65537,
        65536: -65537,
    };
    return -65537;
}
f10(9223372036854775807, -65537);
new Float64Array(95);
Math.fround();
function F20(a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    a23 === a23;
    this.constructor;
}
function f27() {
    class C28 {
    }
    const v29 = new C28();
    for (let v30 = 0; v30 < 5; v30++) {
        new F20(undefined, v29);
    }
}
new Uint32Array(-9223372036854775807);
const v37 = [-489438.2192946316,0.9060845133700562,653905.7470292451,-840351.5605714591,2.0330214359356185e+307,9.8815260133035,4.157539888800496,1.4885047144769007e+308,-475.44825279677866];
let v38 = -4294967297n;
v38++;
const v40 = /(ab)\1foo(?!bar)bazPg/gdiy;
function f42() {
    return v40;
}
const v43 = [f42];
try { new Date(v43, -2147483648, v37); } catch (e) {}
const v46 = [601759695];
function f48(a49, a50, a51, a52) {
    arguments[2] = arguments;
    function f54() {
        function f57(a58, a59) {
            const o62 = {
                "g": 1073741824,
                get d() {
                    super[a58];
                    return this;
                },
                "f": 3,
                ...a58,
                10: 1073741824,
            };
            return o62;
        }
        ("Vre").fixed();
        const o66 = {
            "maxByteLength": 1814769353,
        };
        const o69 = {
            "execution": "async",
            "type": "major",
        };
        const o70 = {
            __proto__: a51,
            ..."Vre",
        };
        o70.length;
        return o70.valueOf();
    }
    const v73 = f54();
    v73[6] = v73;
    %OptimizeFunctionOnNextCall(f54);
}
for (let v74 = 0; v74 < 5; v74++) {
    f48(v46, v74, v74);
}
const o79 = {
    "execution": "async",
    "type": "minor",
};
o79.h = o79;
const v80 = [-8.56356646356005,-1000000.0,1.7425732341240199,5.61396859017832,0.7210174662462943,-245812.9717227295,1.5188574374967393e+308,7.8735763720173e+307,-2.220446049250313e-16];
try { v80.pop(); } catch (e) {}
const v82 = [134133844,-339370636,65535,-4294967295,536870888,-324130953,536870912,268435439];
function f83(a84, a85, a86, a87) {
    try { a86(a87, a86, a85); } catch (e) {}
    function f89() {
        const v90 = v82.length;
        const v91 = v90 >>> v90;
        try { WeakMap.apply(Int32Array, Date); } catch (e) {}
        new Uint8ClampedArray(4);
        const v99 = v91 % v91;
        v99 & v99;
    }
    return f89;
}
f83(v82, f83, f83, v82, -1073741824, 14n);
f83();
