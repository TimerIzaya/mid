const v1 = new Map();
let v2 = [Infinity,1e-15,0.6796370123303789,-Infinity];
const v3 = [-1000000000.0,-5.0];
v2[8] = v1;
v2 = v3;
try { v3(); } catch (e) {}
try {
    v1.clear();
} catch(e6) {
}
const v7 = [4.0,-2.220446049250313e-16,-1e-15,0.04471428582287973,3.0,8.745758862704065,5.0,3.0];
const o11 = {
    "maxByteLength": 604,
};
const v13 = new SharedArrayBuffer(6, o11);
new Float64Array(v13);
new Map();
class C17 {
    static b;
    constructor(a19, a20) {
        ++a19;
        const o24 = {
            "maxByteLength": 15,
        };
        const v26 = new ArrayBuffer(6, o24);
        new Float32Array(v26);
    }
}
const v29 = new C17(v2, v2);
new C17(v3, v29);
new C17(v7, v3);
let v32 = [-883936.0401947303,9.41640124927378e+307,0.060305085001335246];
v32 /= v32;
gc();
