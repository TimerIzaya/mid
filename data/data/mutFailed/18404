function f3(a4) {
    function f5(a6) {
        ("-4096").length;
        return (~0).constructor;
    }
    a4[Symbol.toPrimitive] = f5;
    const o33 = {
        "d": "-4096",
        "c": a4,
        ["-4096"](a14, a15) {
            Math.cos(64);
            const v20 = "object" / a4;
            new Uint32Array(1024);
            new Float32Array(7);
            new BigInt64Array(512);
            ++a4;
            64 >>> (a4 + v20);
            return a4;
        },
        [a4]: a4,
    };
    return o33;
}
f3("g3E");
const v35 = f3(f3);
f3(f3);
10600n ^ 10600n;
-27606n << -27606n;
65537n / 65537n;
("g3E")["padEnd"](1024, "padEnd");
const t30 = "object";
t30[Symbol.toPrimitive] = v35;
new Uint8Array(1024);
4 + 4;
new BigInt64Array(4);
const v56 = new Uint8Array(2376);
v56.valueOf = Symbol;
for (let i59 = 0, i60 = 10;
    (() => {
        i59 >> i59;
        const v62 = i59 < i60;
        v62 && v62;
        return v62;
    })();
    i60 % i60, i60--) {
}
function f71() {
    const o73 = {
        "c": Array,
    };
    const v74 = o73?.c;
    v74.toString = f71;
    try { new v74(f71); } catch (e) {}
    const t53 = o73.c;
    const v77 = new t53();
    v77.toString = Array;
    try { v77.slice(v77, v56); } catch (e) {}
    v77.forEach(Uint32Array);
    for (const v82 of Array(4087, Array, Array)) {
        const v83 = `
            v83 | v83;
        `;
        eval(v83);
        function f87() {
            return o73;
        }
        v82.toString = f87;
    }
}
%PrepareFunctionForOptimization(f71);
f71();
%OptimizeFunctionOnNextCall(f71);
f71();
