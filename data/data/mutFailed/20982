function f0() {
    const o8 = {
        [6]: -1467611258,
        "g": -1467611258,
        "d": 6,
        "b": f0,
        set h(a5) {
            -1467611258 * this;
            a5[7] = a5?.g;
        },
        [-2.220446049250313e-16]: -1467611258,
        __proto__: -2.220446049250313e-16,
        "a": 6,
        [-1467611258]: -1467611258,
        8: -1467611258,
        "e": 6,
    };
    return o8;
}
const v9 = f0();
const v10 = f0();
const v11 = /(\1a)/gums;
const v12 = /V(?:a{5,1000000}){3,1000000}/vims;
const v13 = /(?<a>.)\k<a>?/vdimsy;
const v14 = [v13,v12,v11];
v14[2] = v14;
const v15 = [v14,v12,v13,v14,v14];
v15[2] = v15;
let v16 = 8;
v16--;
const v19 = new BigInt64Array(v16);
const v23 = new Uint8Array(7);
function f26() {
    3.4890473589784586e+307 === 3.4890473589784586e+307;
    let v29 = 1000000000000.0;
    const v30 = v29--;
    -v30;
    -v15 && v15;
    class C37 {
        static #m(a39) {
        }
        constructor(a41) {
            const v43 = new Float32Array();
            let v44;
            try { v44 = v43.entries(); } catch (e) {}
            v44.next();
            const v46 = new Uint16Array(12, -4294967296, v30);
            new Float32Array(v46);
        }
    }
    new C37();
    new C37();
    Symbol.iterator;
    try { v19.reduce(Int32Array, 12); } catch (e) {}
    let v53 = 0;
    v53++;
    const v55 = new C37();
    new C37();
    const v57 = new C37(-4294967296);
    [];
    [257828.6336153492,v57,v55,v57];
    const v60 = [];
    v60[0];
    class C62 extends C37 {
    }
    new C62();
    const v64 = v60.constructor;
    try { v64.isArray(v60); } catch (e) {}
    class C66 extends v64 {
    }
    C66.a = C66;
    const v67 = new C66();
    const v68 = v67.constructor;
    try { v68.bind(); } catch (e) {}
    const o70 = {
        "e": v60,
        __proto__: v14,
        [v15]: v23,
        "h": 257828.6336153492,
    };
    try { o70.e(BigUint64Array); } catch (e) {}
    return Int32Array;
}
%PrepareFunctionForOptimization(f26);
const v72 = f0();
Math.atan(0.6146752851534484);
const v80 = /a$\P{Decimal_Number}/gvdims;
for (let i83 = 0, i84 = 10; i83 < i84; i84--) {
    for (let v91 = 0; v91 < 25; v91++) {
        v80.hasIndices = v80;
    }
}
const v94 = [-0.8495847182712666];
const v95 = [-5.0,-558643.7059270535,2.0,1.003918628156561e+308,-273.9431782723152,0.9234503040884897,7.77196438645843e+307];
const v96 = [-1.7406318658705082,981034.8129779545,1000000000.0,-8.594301846559695,-1.759225887947263];
v96[Symbol.toPrimitive] = f0;
function f99(a100, a101, a102) {
    a102[Symbol.toPrimitive] = f0;
    const o112 = {
        "c": a102,
        2: a102,
        __proto__: a102,
        [v94](a106, a107) {
            try {
                a101.toString = f0;
            } catch(e108) {
            }
            return this;
        },
        [v96]: "p",
        "e": v9,
    };
    return o112;
}
f99(v96, v72, v96);
f99(v95, v10, v94);
f99(v96, v10, v95);
const v118 = new Float64Array(4);
function f121() {
}
["n",v11,v11,[/xyz??/dmsy,v11,/Al(?:a+)*/dis],f121];
const v127 = new Uint8Array(256);
new Float32Array(7);
let v132 = v127[44610];
const v133 = [-4529,-56036,4294967295,256,-256];
const v134 = /((?:ab){4,7}(?:a+){0,0})/gv;
const v135 = /a\bc/umsy;
class C136 {
    constructor(a138) {
        for (let v139 = 0; v139 < 160; v139++) {
            function f140() {
                if (a138) {
                    function F141(a143, a144, a145, a146) {
                        if (!new.target) { throw 'must be called with new'; }
                    }
                    new F141(this, this, a138, v139);
                    new F141(v135, this, v134, C136);
                    new F141(a138, v133);
                } else {
                    new f140();
                }
            }
            f140();
        }
    }
}
new C136(C136);
let v153;
try { v153 = v132(7, 7, 4); } catch (e) {}
v132 = 7;
function F154(a156, a157) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = 256;
    } catch(e158) {
    }
}
new F154(44610, 44610);
try {
    v94.toString = v153;
} catch(e160) {
}
let v161;
try { v161 = v153(256, 7, Float32Array, F154); } catch (e) {}
const v162 = new F154(7, 7);
new F154(7, 7);
typeof v118 === "undefined";
const v168 = [];
for (let v169 = 0; v169 < 5; v169++) {
    v168["p" || v169] = v169;
}
const v172 = v132.toPrimitive;
const o180 = {
    [v172]() {
        v161();
        function F175(a177, a178) {
            if (!new.target) { throw 'must be called with new'; }
        }
        F175(F175, v162);
    },
};
