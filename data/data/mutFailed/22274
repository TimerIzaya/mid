const v3 = [-37053n,-37053n,-37053n,4n,-9223372036854775808n];
const v4 = [4n,-9223372036854775808n,v3,-37053n,v3];
[v3,-9223372036854775808n,-9223372036854775808n];
const v10 = new Date();
const v11 = v10?.setFullYear;
try { new v11(1.3475666905347676, 1.3475666905347676, -37053n); } catch (e) {}
new Int16Array(6);
new Float64Array(3);
new Uint8Array(127);
const v22 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
v22.length = v22;
2684 - 2684;
const v26 = new Uint32Array(v22, 2684);
const v28 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v29 = [601759695];
const v30 = [1073741824,1073741823,1376142744,1073741825];
522675525n === 522675525n;
function f33(a34, a35, a36, a37) {
    a35 >>> a35;
    function f39() {
        let v42 = Float64Array;
        v42 = a35;
        b = v29;
        const v43 = v22.length;
        -v43;
        try {
            v30.forEach(a35, v22);
        } catch(e46) {
            e46.message = e46;
        }
        const v47 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v49 = Symbol.toPrimitive;
        Symbol.for(v49.description);
        const o56 = {
            toString(a54, a55) {
                a54 *= v49;
                return v42;
            },
        };
        const o73 = {
            [522675525n](a59, a60) {
            },
            "c": v29,
            valueOf(a62, a63) {
            },
            [v43](a65) {
            },
            [-1]: 2684,
            1073741824: v26,
            "maxByteLength": -268435456,
            "b": -4294967295,
            "arguments": v47,
            [-4294967297n](a67, a68, a69, a70) {
                eval();
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v28,
            256: a37,
            ...v29,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            6: -268435456,
        };
        return o73;
    }
    try { f39(); } catch (e) {}
    const v75 = f39();
    v75[1073741824] = v75;
    try { Int8Array.from(v4); } catch (e) {}
    const v78 = new Int8Array();
    try { v78.entries(); } catch (e) {}
    const v80 = v78.buffer;
    2147483648 * 2147483648;
    eval.name = eval;
    eval("");
    Uint32Array[2] = 1;
    v80.slice(2147483648);
    %OptimizeFunctionOnNextCall(f39);
    let v89;
    try { v89 = v30["find"](..."find", a37, ...v29, ...v30, ...522675525n); } catch (e) {}
    return v89 <= a36;
}
for (let v91 = 0; v91 < 10; v91++) {
    f33(v30, v91, v91, v91);
}
%OptimizeFunctionOnNextCall(f33);
f33(f33, v28, 2684, f33);
