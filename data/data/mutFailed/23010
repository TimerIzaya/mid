const v0 = [Infinity,1.7976931348623157e+308,132725.59314215695,-2.220446049250313e-16,2.2250738585072014e-308];
const v1 = [-1000000.0,-4.0,2.1113468930189896,-Infinity,0.1345052567242051];
const v2 = [5.0,-Infinity];
const v3 = [v2,v0,v2,v1,v2];
const v4 = [v0,v3,v3];
const v5 = [v4,v3,v4];
new BigInt64Array(5);
new Uint8ClampedArray(113);
let v12 = 6;
new Float32Array(v12);
function f16() {
    let v18 = 1261703539;
    -65535 / -65535;
    const o81 = {
        next() {
            v12--;
        },
        ...352326470,
        m(a25) {
            a25.c = v3;
            a25.h = a25;
            const o26 = {
            };
            o26.h = o26;
            function f27(a28, a29, a30) {
            }
            v18 = -65535;
            let v31 = this;
            super.e;
            v31 = o26;
            f27.caller = f27;
            try {
                o26.e = -65535;
            } catch(e34) {
                const v38 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v38, o26);
            }
            const o40 = {
            };
            o40.e = v18;
            try { Math.expm1(352326470); } catch (e) {}
            -9007199254740991 - (-9007199254740991 >> -9007199254740991);
            const v46 = a25.sin(-9007199254740991);
            let v48;
            try { v48 = ("EV").link(128); } catch (e) {}
            function f49(a50) {
                return v46;
            }
            class C51 extends f49 {
                [Uint32Array] = v1;
            }
            0 != 0;
            class C54 {
                o(a56, a57, a58, a59) {
                    class C60 {
                    }
                }
            }
            C54.name = C54;
            new C54();
            const v64 = new Int8Array(3938);
            let v65 = 3;
            try {
                super.sqrt(-9007199254740991, v48, v5, f27, v2);
            } catch(e68) {
            }
            -65535 + v65++;
            let v71 = 0;
            const v72 = v71 >> v71;
            v72 - v72;
            for (let i = 0; i < 5; i++) {
                v71 < 8;
                [...v65] = v64;
                const v76 = v71++;
                v76 % v76;
            }
            const o78 = {
            };
            o78.c = o78;
            o78.e = v18;
            o78.g = a25;
            try {
                const o79 = {
                };
                o79.g = a25;
                o79.h = 352326470;
            } catch(e80) {
            }
            return this;
        },
    };
    let v82;
    try { v82 = o81.m(o81); } catch (e) {}
    v82.b = v82;
    class C84 {
    }
    const v85 = new C84();
    const v87 = new Float32Array(v85, "nt", Float32Array);
    const t98 = "nt";
    const v88 = delete t98[v87];
    let v89;
    try { v89 = v85.floor(v88); } catch (e) {}
    for (const v90 in v89) {
    }
}
f16();
f16();
f16();
function f94(a95, a96, a97, a98) {
}
function f99(a100, a101) {
    const o104 = {
        set b(a103) {
        },
    };
}
function F105(a107, a108, a109) {
    if (!new.target) { throw 'must be called with new'; }
}
try {
} catch(e110) {
}
