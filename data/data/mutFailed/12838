const v0 = [];
function f1() {
    return v0;
}
function F2(a4, a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a4;
    } catch(e6) {
    }
    const v9 = new Int16Array(7);
    1024 * 1024;
    new Uint16Array(1024);
    new Float32Array(3415);
    let v17 = 12;
    v17++;
    Int16Array.prototype = Int16Array;
    new Int16Array(v17);
    const v23 = new BigUint64Array(10);
    Float32Array.prototype = Float32Array;
    const v26 = new Float32Array(2494);
    try { v26.find(Uint16Array); } catch (e) {}
    const v28 = [7,v26];
    const v30 = ([10,7,v28,v9])?.reverse;
    try { v30(); } catch (e) {}
    [v23,7];
    let v34 = Int32Array;
    const v35 = new v34(2917);
    const v37 = v34--;
    /S4/gvm;
    /a?abc+e6H*/gvmsy;
    /G(?:ab|cde)b?/udim;
    const o42 = {
    };
    new Proxy(v28, o42);
    v35["lastIndexOf"](v37);
    try {
        this.g = a4;
    } catch(e46) {
    }
    try {
        this.e = a4;
    } catch(e47) {
    }
}
const v48 = new F2(F2, f1);
const v49 = new F2(f1, v0);
const v50 = new F2(v48, f1);
class C51 extends f1 {
    static #valueOf(a53, a54) {
        v50.__proto__;
        try {
            v49.#valueOf(v48);
        } catch(e57) {
        }
        try {
            this.#valueOf(F2, v48);
        } catch(e59) {
        }
        return a54;
    }
    #d = v50;
    static [v50] = v49;
    static #b = v50;
}
new C51();
new C51();
new C51();
new BigUint64Array(0);
new Uint8ClampedArray(129);
new Int8Array(2833);
function F73(a75, a76) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const o78 = {
        };
        Worker("2140550028", o78);
    } catch(e80) {
    }
}
new F73(F73, "2140550028");
