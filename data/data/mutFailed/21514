function f0() {
}
const v3 = new Array(3683);
try { ("n").link(f0); } catch (e) {}
const t4 = "d";
t4[0] = "d";
const t6 = "65535";
t6[2] = "65535";
function F10(a12, a13, a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    const v16 = this?.constructor;
    try { new v16(v3, a12, a13, a12); } catch (e) {}
    a13[0];
    try {
        this.b = a12;
    } catch(e19) {
    }
    try {
        this.d = Array;
    } catch(e20) {
    }
}
new F10("d", Array, "65535", "n");
const v22 = new F10(3683, "n", "n", "n");
try { v22.toString(); } catch (e) {}
new F10(false, "n", "n", "n");
function f26() {
    const v28 = Math.max(4.0, 4.0);
    4.0 / v28;
    return v28;
}
%PrepareFunctionForOptimization(f26);
f26();
%OptimizeFunctionOnNextCall(f26);
v3();
