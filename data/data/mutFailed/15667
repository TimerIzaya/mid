class C3 {
    p(a5) {
        try { this.endsWith("getSeconds"); } catch (e) {}
        const v7 = [-1073741824,399890882];
        [-5,-1,1073741823,65537,-1960609621,7,536870887,1952652169,256,65535];
        [1371824013,128,20470,-288191525];
        567164.735830083 / "getSeconds";
        const o13 = {
            "maxByteLength": 536870912,
        };
        const o15 = {
            __proto__: this,
            "a": v7,
            ...o13,
        };
        const v16 = new SharedArrayBuffer(256, o13);
        new DataView(v16);
        return a5;
    }
}
const v19 = new C3();
const v20 = new v19();
const v21 = new C3();
class C25 {
    static set d(a27) {
        let v26 = this;
        try {
            super.o(-824052123, v26);
        } catch(e29) {
        }
        const o30 = {
        };
        try {
            o30.b = v26;
            function f31(a32, a33, a34, a35) {
                v26[567164.735830083] += -1073741824;
                return v21;
            }
            f31(v20, -64514, "getSeconds", v20);
        } catch(e37) {
        }
        try {
            const o38 = {
            };
            o38.b = v26;
            o38.c = v26;
        } catch(e39) {
        }
        try {
            const o40 = {
            };
            o40.b = v26;
            o40.c = v26;
            o30 + v19;
            v26 %= o40;
            try {
                a27.length = 7;
            } catch(e43) {
            }
            o40.h = a27;
        } catch(e44) {
        }
        try {
            const o45 = {
            };
            o45.b = v26;
            o45.c = v26;
            o45.f = v20;
        } catch(e46) {
        }
    }
}
new C25();
new C25();
new C25();
function F50(a52, a53) {
    if (!new.target) { throw 'must be called with new'; }
    const v54 = this.constructor;
    try { new v54(this); } catch (e) {}
    a53++;
    this.g = a52;
}
const v57 = new F50();
const t83 = v57.constructor;
new t83();
