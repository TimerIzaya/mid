function f0() {
    const v2 = -Infinity;
    const o13 = {
        __proto__: 1000000000000.0,
        ...4,
        "e": 4,
        [4]: v2,
        get d() {
        },
        "h": 1000000000000.0,
        toString(a6, a7, a8) {
            return 4;
        },
        ...1000000000000.0,
        toString(a10) {
            super[this] = this;
            return 1000000000000.0;
        },
        "a": 1000000000000.0,
        "d": 1000000000000.0,
        "g": v2,
        set b(a12) {
        },
    };
    o13[4] = o13;
    return o13;
}
const v14 = f0();
f0();
const v16 = f0();
function F17(a19) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(F17); } catch (e) {}
    this.f = F17;
    try {
        this.e = a19;
    } catch(e21) {
    }
    try {
        this.f = f0;
    } catch(e22) {
    }
}
try { new F17(v14); } catch (e) {}
const v24 = new F17(v14);
function f25(a26) {
    function f27(a28, a29) {
        return a28;
    }
    const v31 = Symbol.toPrimitive;
    v24[v31] = f27;
    return v31;
}
try { f25(v14); } catch (e) {}
v24.toString = f25;
const v33 = new F17(v16);
function f34(a35) {
    const v38 = new Int32Array(257);
    v38[208];
    return a35;
}
v33.toString = f34;
const v40 = new F17(v14);
class C41 {
    static [v33] = F17;
    static set b(a43) {
        const v44 = v33.__proto__;
        try {
            v33.toString = v44;
            const v46 = new Int32Array(Int32Array);
            const v48 = new Map();
            try {
                v46.c = v48;
            } catch(e49) {
            }
        } catch(e50) {
        }
    }
    b = v14;
    n(a52) {
    }
    static o(a54) {
        a54 % this;
        super.d;
        return C41;
    }
    static [v24];
    static b;
    static h = F17;
}
let v57;
try { v57 = new C41(); } catch (e) {}
new v57();
new C41();
new C41();
228 % 228;
const v66 = Array(228);
try { v66.at(v66); } catch (e) {}
class C68 {
}
try { C68(); } catch (e) {}
new C68();
new C68();
try { new Uint16Array(Uint16Array, v40, "7MU"); } catch (e) {}
6 >> 6;
new Uint8Array(6);
([1000000000000.0,6.579220753226213e+307,2.0,-2.220446049250313e-16,NaN,-1000000.0])["findIndex"](gc);
