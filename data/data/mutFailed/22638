const v0 = [2995,-2,1022224964,128,-16,40113,268435440,9007199254740991];
const v1 = [-57779,-1647366411];
const v2 = [901422585,21719,-4294967297,-536870912,-65535,7,-1024];
class C3 {
    static #b;
    static #valueOf(a5) {
        this[-1] = v2;
        a5 &&= v2;
        try { a5(v2, v1); } catch (e) {}
        return -10n;
    }
    h;
    static [v1];
    static a;
    3041556850;
}
const v10 = new v1();
const v11 = new v2();
const v12 = new C3();
function f13(a14, a15, a16) {
    const o33 = {
        [v0](a18, a19, a20) {
            v10[9] = v2;
            return 2.0;
        },
        __proto__: a14,
        [v11](a25, a26) {
            let v27;
            try { v27 = a14.some(a26, a15); } catch (e) {}
            try { new v27(a25, v27, v12, v11); } catch (e) {}
            C3 ** v2;
            const v30 = delete a16[v12];
            let v31;
            try { v31 = C3.shift(v27, v30, a16, a16, a26); } catch (e) {}
            v31 << v31;
            return C3;
        },
    };
    return o33;
}
f13(f13(v10(v1, v11, v1), v12, v0), v11, v1);
function F41() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const t44 = 19793;
        for (const v45 of t44()) {
        }
    } catch(e46) {
    }
}
new F41();
