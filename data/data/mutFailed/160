const t0 = 4;
const v2 = new t0(4);
Uint8Array.prototype = 257;
new Uint8Array(Uint8ClampedArray);
193 > 193;
const v9 = new Int8Array(v2);
try { v9.lastIndexOf(Uint8ClampedArray); } catch (e) {}
1823469431 >>> 1823469431;
const t7 = "fuV";
t7[2] = "fuV";
try { (4).search(19500); } catch (e) {}
try { Math.expm1(193); } catch (e) {}
536870887 >> 536870887;
Math.atan2(1e-15, 536870887);
Math.expm1(1e-15);
let v26;
try { v26 = ("m").sup(); } catch (e) {}
try { v26.strike(); } catch (e) {}
const v31 = Int8Array?.constructor;
try { new v31(Uint8ClampedArray); } catch (e) {}
const v33 = new Int8Array(770);
Uint8Array[321] = v33;
const t22 = 770;
const v34 = new t22(v33);
try { v34.filter(v9); } catch (e) {}
new Float32Array(2686);
const v5 = new Uint8Array(255);
const o6 = {
    "f": 255,
    10: v5,
};
255 ** Uint8Array;
new Uint32Array(127);
const v14 = [2.220446049250313e-16,4.817717597327409,1e-15,-1000000000000.0,-1000000.0,2.0,-3.382353865622333e+306,134.7295617651339];
const v15 = [NaN,-5.161337834188833e+307,NaN,-984.7986985006023];
let v16;
try { v16 = v14.findLastIndex(v14, v14); } catch (e) {}
v15.constructor;
class C18 extends "number" {
}
const v19 = new C18();
v19.unshift(v16);
