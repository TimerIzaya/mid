function f0() {
}
class C1 extends f0 {
    constructor() {
        super();
        let v4 = 536870912;
        v4 - v4;
        Math.acosh(this);
        let v7 = v4--;
        const v8 = ~v4;
        ~(this << v8);
        this * this;
        v7 && v8;
        v7--;
    }
    [f0] = f0;
}
const v14 = new C1();
const v15 = new C1();
const v16 = v15?.constructor;
try { new v16(); } catch (e) {}
const v18 = new C1();
const v19 = v18?.constructor;
try { new v19(); } catch (e) {}
class C21 extends f0 {
    static {
        this.prototype = this;
        const v24 = [];
        const v26 = Reflect.construct(C1, v24, C21)?.constructor;
        try { new v26(); } catch (e) {}
        try {
            v24.includes(v15);
        } catch(e29) {
        }
        try {
            v14.c = v14;
        } catch(e30) {
        }
    }
    static c;
    [v15] = v18;
    h = v14;
    static 15;
    [C1];
    c;
}
const v32 = new C21();
v32.h = v32;
const v33 = new C21();
v33.c = v33;
new C21();
const v35 = [f0];
const v36 = [C21,v14];
[v35,v15,v36,C21,v36];
[4,-1024,129,1642212945,10];
const v39 = [-1836894688,-1543964443];
const v40 = [4096,1073741824,-56307,-268435456,-4294967296,2147483648,-1436593169,-2147483647];
try { v40.map(v14); } catch (e) {}
-2147483647 & -2147483647;
const v45 = new Map();
try { v45.set(v39, -2147483647); } catch (e) {}
const o51 = {
    set d(a48) {
        a48 & a48;
        v45.delete();
    },
};
o51.d /= -2147483647;
