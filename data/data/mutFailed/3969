function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        for (let v6 = 0; v6 < 25; v6++) {
        }
        const v7 = [];
        const v8 = [v7,v7,v7,v7];
        const t7 = [v7,v8,v8,v8];
        t7.length = 2;
        class C11 {
        }
        false.fuck();
        this.f = 26825405;
    } catch(e14) {
    }
}
new F3(26825405);
new F3(1262537806);
new F3(65536);
function f19() {
    return f19;
}
const o22 = {
    "maxByteLength": 26825405,
};
new SharedArrayBuffer(1796, 65536);
%PrepareFunctionForOptimization(F3);
%OptimizeFunctionOnNextCall(f19);
const t28 = "transfer";
const v29 = new t28();
const v32 = new Uint32Array(104);
for (const v33 in v32) {
    104 in v29;
    typeof Uint8Array;
}
const v36 = [1262537806,"toLowerCase"];
const v37 = [v36];
[v37,v37,v37];
function f39() {
    return f39;
}
class C42 {
    get b() {
        const v44 = ("2")[21];
        try {
            this.e = "2";
        } catch(e45) {
        }
        return v44;
    }
    static [2.0];
    static #g;
    g = "d";
}
const o47 = {
};
new Uint16Array();
const v50 = [-1.7976931348623157e+308,-2.2250738585072014e-308,1e-15,1.7976931348623157e+308,436.391218484674,984999.8983446106,-2.220446049250313e-16,-65664.25596205948,-568440.0637574068,0.6833182439703986];
v50.g = v50;
try { BigInt64Array(v36); } catch (e) {}
const v52 = [-536870912,-65537,10,-9007199254740990,-11,46376,2,6];
class C53 {
    constructor(a55, a56) {
        let {...v57} = v52;
    }
}
