let v0 = 16;
let v1 = 447;
let v2 = 10;
let v6;
try {
const t0 = 0.6323126452702218;
v6 = new t0(v0, -1.3003371160585824e+308, v2, -1.3003371160585824e+308);
} catch (e) {}
({"e":v2,"f":v0,...v1} = v6);
v2[0.6323126452702218] = v6;
try {
    v2.g = 0.6323126452702218;
} catch(e7) {
}
[41133,61076,4294967295];
[-1745442049];
[6,127,61296];
[536870912,4294967295,-4294967296,268435439,28183,46626,-14];
const v12 = [4294967296,8,-4294967296,-65537,256,9223372036854775807,0];
[-11,129,268435456];
function F17(a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v21 = new F17(F17, a20);
        try { this.isInteger(v6, v2, -32070); } catch (e) {}
        const v26 = new Map();
        const v27 = [v26,a19];
        [Map,-32070,v6];
        [v27,v21,a20];
        const v31 = -1.252027415501717e+308 | -32070;
        (-32070) ** v31;
        Math.log10(Math);
        +v31;
    } catch(e35) {
    }
}
new F17(v12);
new F17();
