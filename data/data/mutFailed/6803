const v0 = /(?:a?)+2foo(?!bar)baz/gvmy;
const v1 = /La\nb\bc?/gudms;
const v2 = /a.ow^xxx$*/gums;
class C3 {
    constructor(a5) {
        const v6 = /ab|c/vimy;
        /\b(?=.)a3m/vs;
        /[\c~][\cj\cJ\ci\cI\ck\cK]/dimy;
        a5 * v0;
        const v11 = [v6];
        Reflect.apply(v2.compile, v6, v11);
        function f15() {
            const o18 = {
                1678: true,
                ...true,
                "d": true,
                [true]() {
                    super.e;
                },
                1: true,
            };
            return o18;
        }
        const v19 = f15();
        const v20 = f15();
        class C22 {
            constructor(a24, a25, a26, a27) {
                try { new a27(v19); } catch (e) {}
                try {
                    new f15();
                } catch(e30) {
                }
                v20[36];
            }
            static #a;
            static {
                this.__proto__;
                try {
                    this.b = -9007199254740991;
                } catch(e34) {
                }
            }
        }
        new C22();
    }
    static [v2] = v1;
    static #g = v0;
    static 10;
    3164398692 = v0;
    static 134;
    static {
        const t51 = this.__proto__;
        t51();
    }
    static h = v2;
    [v2];
}
const v39 = new C3(v2);
const v40 = new C3(v1);
const v41 = new C3(v39);
const v42 = [v41,v0,v0,v40,v41];
const v43 = [v42,v39,v2,v1];
[v2,v1];
class C48 extends C3 {
    static p(a50, a51, a52) {
        const v53 = v43 >= this;
        const v54 = v53 ? v43 : this;
        v54[v53] = v54;
        const v56 = new Float64Array(Float64Array, Float64Array, Float64Array);
        v56[138.3846677150391] = 1000000000.0;
        return this;
    }
    #c = v42;
    constructor(a60, a61, a62, a63) {
        super(a63);
        let {"g":v64,} = this;
        a62[v64];
        function F68(a70) {
            if (!new.target) { throw 'must be called with new'; }
        }
        function f71() {
            return f71;
        }
        const v72 = /(?:a*)+q(?<a>.)/guds;
        function f73(a74) {
            const v75 = a74?.constructor;
            let v76;
            try { v76 = v75(a74, f71); } catch (e) {}
            const o78 = {
                get d() {
                    return this;
                },
            };
            return v76;
        }
        for (let i81 = 0, i82 = 10; i81 < i82; i82--) {
            for (let v89 = 0; v89 < 50; v89++) {
                f73(v72);
            }
        }
        7 - 7;
        (v0 * v0) - 7;
    }
    /*
    constructor(a95, a96) {
        const o98 = {
            84: arguments,
        };
    }
    */
}
const v99 = new C48(v1, v0, v1, v39);
new C48(v41, v1, v39, v40);
new C48(v2, v0, v41, v99);
const v102 = /(?<a>.)\k<a>?/vdimsy;
let v103;
try { v103 = v102(); } catch (e) {}
const v104 = [v103,v103,v103,v103];
const v106 = new BigInt64Array();
function f108() {
    3.4890473589784586e+307 === 3.4890473589784586e+307;
    let v111 = 1000000000000.0;
    const v112 = v111--;
    let v114 = 257828.6336153492;
    const v116 = -v104;
    -(v116 && v104);
    v114--;
    class C121 {
        static #m(a123) {
            class C124 {
                constructor(a126, a127, a128) {
                    for (let v129 = 0; v129 < 25; v129++) {
                        const o133 = {
                            "execution": "async",
                            "type": "minor",
                        };
                        gc(o133);
                    }
                }
            }
            new C124();
        }
        constructor(a137) {
            const v139 = new Float32Array();
            v139.entries().next();
            const v142 = new Uint16Array(12, -4294967296, v112);
            new Float32Array(v142);
        }
    }
    try { new C121(); } catch (e) {}
    try { new C121(); } catch (e) {}
    const v147 = Symbol.iterator;
    Math[v147] = v147;
    try { v106.reduce(v103); } catch (e) {}
    const v149 = new C121();
    const v150 = new C121();
    try { v150.propertyIsEnumerable(v116); } catch (e) {}
    const v152 = new C121();
    const v153 = [];
    const v154 = [v152];
    v154[0];
    class C156 extends C121 {
        [v149];
        #n(a158, a159, a160, a161) {
            return v154;
        }
    }
    const v162 = new C156();
    const v163 = v154.constructor;
    new v163();
    class C165 extends v163 {
    }
    const v166 = new C165();
    v166.constructor.bind(v114);
    Object.defineProperty(v166, 65537, { value: v150 });
    try { v162.m(v153); } catch (e) {}
    return v103;
}
%PrepareFunctionForOptimization(f108);
f108();
f108();
%OptimizeFunctionOnNextCall(f108);
f108();
