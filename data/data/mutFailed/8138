const t0 = 1;
const v2 = new t0(1);
const v5 = new Int32Array(159);
try {
    v5.__proto__ = v2;
} catch(e6) {
}
v2 * 1;
const v10 = new Int16Array(10);
let v12 = 0;
do {
    const v13 = delete v10?.byteLength;
    Math.cos(-65537);
    v10 || -65537;
    -v13;
    Math.atan2(v10, v10);
    v12++;
} while (v12 < 5)
new Uint8Array(3242);
/(ab|cde)\1(\P{scx=Greek}?)/dim;
/xyz{1,32}?/vms;
const v28 = /jL(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/udimsy;
const v30 = ["object"];
const v31 = [v30,v30,v30,v30,v30];
const v35 = new Float32Array(1750);
const v36 = v35 - 581587.2441596473;
try { v28.flatMap(581587.2441596473); } catch (e) {}
const t27 = v31[Symbol.iterator];
t27.c <<= v36;
var h = 1750;
