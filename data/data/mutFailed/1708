let v2 = "h";
const v7 = new WeakMap();
function f8(a9, a10) {
    const o21 = {
        [v2]: a9,
        set c(a12) {
            Math.atan2(v2, v2 || 5.0);
            ~-2147483647;
            Math.cosh(v2);
            ++v2;
        },
        "g": "boolean",
        "e": a10,
    };
    return o21;
}
f8(-727.7022311313581, "-4");
f8(-2.0, "boolean");
f8(-727.7022311313581, v2);
class C25 extends WeakMap {
    static set g(a27) {
        a27 <= v2;
    }
    #c = -6.896245354612712e+307;
    constructor(a30, a31, a32) {
        super(a32);
        let {"e":v33,...v34} = this;
        this.c = this;
        class C36 {
            b = "c";
            static #h;
            268435439;
            static #c;
        }
        new C36();
        v34.f;
        new Date();
        function F42(a44, a45) {
            if (!new.target) { throw 'must be called with new'; }
            const v46 = this.constructor;
            try { new v46(268435440n, a45); } catch (e) {}
            this.f = 268435440n;
        }
        const v48 = new F42();
        const v49 = new F42();
        function f51(a52) {
            const o55 = {
                ...65536,
                5: 65536,
                valueOf(a54) {
                    return v48;
                },
                "g": 65536,
            };
            return v49;
        }
    }
    static #a = v7;
    static #h;
}
const v56 = new C25(-2.0, -2.0, v7);
new C25(-6.896245354612712e+307, -2.0, v56);
const v61 = new Uint8Array(2707, 2707, 128);
let v62;
try { v62 = v61.findLastIndex(v61, v61); } catch (e) {}
const o63 = {
    [v62]: Uint8Array,
};
new C25(-2.0, -727.7022311313581, v56);
new Float64Array([-65536,-432658450,256]);
