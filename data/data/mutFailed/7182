class C3 {
    1 = 0.0;
    [-1000000000.0];
    [-563708641];
    constructor(a5) {
        a5++;
        a5 ** -1000000000.0;
        Reflect[-563708641] = Reflect.construct(C3, [0.0,Reflect,-1000000000.0,-563708641,C3], C3);
        try {
            a5.a = this;
        } catch(e11) {
        }
    }
    static #b;
    [0.0] = -563708641;
}
try { C3.toString(); } catch (e) {}
const v13 = new C3(-563708641);
v13[1];
const v15 = new C3(C3);
v15[1];
const v17 = new C3(C3);
class C18 {
    get f() {
        return -2147483649n;
    }
    static [-1000000000.0];
    92;
    #e = v17;
    16;
    e = v15;
}
C18.name = C18;
new C18();
new C18();
const v25 = new C18();
v25.e = v25;
try { Float32Array(v13, 4096, Float32Array); } catch (e) {}
const v30 = new Float32Array(4096);
v30[3388] = v30;
v30.lastIndexOf(1.3174607869926752e+308);
