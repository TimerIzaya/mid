function f0() {
}
function f1() {
    const o18 = {
        "d": f0,
        __proto__: f0,
        [f0]: f0,
        "b": f0,
        ...f0,
        toString() {
            this[this] &= this;
            for (let i4 = 0; i4 < 0; i4++) {
                const v12 = i4 - i4;
                const v13 = v12 % 4294967296;
                Math.cos(i4);
                4294967296 * (v13 && v12);
                Math.log2(v12);
            }
            return f0;
        },
    };
    return o18;
}
const v19 = f1();
const v20 = f1();
const v21 = f1();
class C22 {
    constructor(a24) {
        Object.defineProperty(this, v19, { enumerable: true, get: f0 });
        const o27 = {
            "maxByteLength": 4294967296,
        };
        const v29 = new ArrayBuffer(2, o27);
        new Int32Array(v29);
    }
    #g = v21;
    static 2;
    [f0] = f1;
}
const v32 = new C22(v21);
const v33 = new C22(v19);
const v34 = new C22(C22);
const v35 = [61449,827429132,4,1690563734,-4096,-422185197,6,-60054];
[10000,-2139351897,57986,-1073741824,268435440,7,257];
[5,255,-1996017976,-4294967295,63337,-14,2];
function F38(a40, a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = v32;
    } catch(e44) {
    }
    try {
        this.b = f0;
    } catch(e45) {
    }
    try {
        this.d = v21;
    } catch(e46) {
    }
}
const v47 = new F38(v33, v35, v35, v21);
new F38(v20, v47, v34, v47);
new F38(v32, v33, v35, v34);
function f51(a52, a53) {
    const o54 = {
    };
    return o54;
}
with (f51()) {
    new BigInt64Array(2147483649);
}
