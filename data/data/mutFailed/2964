const v2 = new Float64Array(1024, Float64Array, Float64Array);
const v5 = new Float64Array(63718);
function f8() {
    function f11() {
        return 9007199254740991;
    }
    class C12 extends f11 {
        constructor(a14, a15, a16, a17) {
            super();
            function f18() {
                const t10 = [];
                t10[6] = 4294967295;
                new Int32Array();
                const o33 = {
                    get b() {
                        return Int32Array;
                    },
                    "c": f18,
                    toString(a26, a27, a28) {
                        return this;
                    },
                    4294967295: Uint8ClampedArray,
                    m(a30) {
                        return 4294967295;
                    },
                    "h": 9007199254740991,
                    ...1.0,
                    set b(a32) {
                    },
                };
            }
            for (let v34 = 0; v34 < 5; v34++) {
                f18();
                %OptimizeFunctionOnNextCall(f18);
            }
        }
    }
    return Int16Array;
}
Int16Array.toString = f8;
const v36 = new Int16Array(1024);
const v37 = [Int16Array];
[v2,v37,v37];
[v2,Int16Array,v36,v36,v2];
const v40 = [];
function f41() {
    v36.__proto__;
    let [v43,v44] = v5;
    return v43;
}
v40.toString = f41;
function f45() {
    return f45;
}
class C46 extends f45 {
    constructor(a48, a49, a50, a51) {
        super();
        function f52() {
            const v53 = [];
            v53[6] = 4294967295;
            const o57 = {
                "h": v53,
                "g": a49,
                ...v36,
                6: 1024,
                "a": a48,
                set byteLength(a56) {
                },
                "arguments": v40,
            };
            return o57;
        }
        if (v37 <= v40) {
            try {
                super.p(v2, v40, Int16Array);
            } catch(e60) {
            }
        } else {
            let {"g":v61,} = this;
        }
        for (let v62 = 0; v62 < 5; v62++) {
            f52();
            %OptimizeFunctionOnNextCall(f52);
        }
    }
}
new C46();
