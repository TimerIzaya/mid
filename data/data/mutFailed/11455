const v3 = [2147483647,2147483649,46367,326653190,1116732651,-1002262811,-268435456,-536870912,268435440,1521062689];
v3[3] = v3;
[-1];
const v5 = [1608899900,48281,65537,-61013,-1930805023,-12,127,-14,-2];
let v6;
try { v6 = v5.copyWithin(-1000.0, -1000.0); } catch (e) {}
new Map();
function f12(a13, a14) {
    const v16 = f12(-1000.0, a14);
    Object.defineProperty(v6, f12, { get: f12, set: f12 });
    %VerifyType(v16);
    Reflect[5] = Map;
    const v18 = new Date();
    v18.getSeconds();
    return f12;
}
%PrepareFunctionForOptimization(f12);
const v20 = f12();
try { v20.bind(-1000.0); } catch (e) {}
%OptimizeFunctionOnNextCall(f12);
try {
    v5.splice(0);
} catch(e24) {
}
const v25 = f12();
v25.arguments = v25;
