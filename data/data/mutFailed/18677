class C3 {
    [1319674211] = "e";
    #n(a5) {
        Object.defineProperty(arguments, "c", { enumerable: true, value: this });
        return this;
    }
    static {
        try {
            super.valueOf();
        } catch(e9) {
        }
    }
}
const v10 = new C3();
const v11 = new C3();
const v12 = new C3();
class C13 extends C3 {
    [v10] = v10;
    constructor(a15, a16, a17) {
        class C19 extends Set {
        }
        new C19();
        super();
        try { v12.o(this, C3, C3); } catch (e) {}
        C3 == ("boolean" instanceof a16);
        try {
            super.at(this, "e", this);
        } catch(e25) {
        }
    }
}
const v26 = new C13("boolean", v11, "e");
new C13(C13, C3, C13);
new C13(v26, v12, C3);
try { WeakMap.apply(Int32Array, Date); } catch (e) {}
const v33 = [723200.4184824808,-1000.0,-523437.54204506474,-964793.6675249395];
for (let v34 = 0; v34 < 20; v34++) {
    let [,v35,...v36] = v33;
}
Object.defineProperty(Uint8ClampedArray, 1, { value: [7.554475698528474] });
new Float64Array(1073741824);
