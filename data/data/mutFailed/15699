const v0 = [10];
function f1() {
    for (let v2 = 0; v2 < 32; v2++) {
        v0["p" + v2] = v2;
    }
    return v0;
}
v0.toString = f1;
const v5 = [-685534406,2147483649,-4,58114];
const v6 = [-4294967296,1073741825,4294967295,-4294967295,9,-2];
class C7 {
    constructor(a9) {
        this.e = f1;
        try {
            super.toString(this, v5, this, v0, v5);
        } catch(e11) {
        }
    }
    #b = v6;
    [v0] = v0;
    static #g = v6;
    [v6] = v5;
}
const v12 = new C7(v5);
new C7(v6);
const v14 = new C7(v6);
function F15(a17, a18, a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    a19.e = a19;
    try {
        this.b = a17;
    } catch(e21) {
    }
    try {
        this.c = a20;
    } catch(e22) {
    }
    try {
        a19.e = v12;
    } catch(e23) {
    }
}
const v24 = new F15(v12, v5, v6, v14);
const v25 = new F15(v0, v6, v14, F15);
new F15(v0, v24, v14, v25);
function F27() {
    if (!new.target) { throw 'must be called with new'; }
}
class C36 extends F27 {
}
const o37 = {
    2: C36,
};
