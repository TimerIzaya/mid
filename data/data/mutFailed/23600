const v0 = /o/guisy;
const v1 = /\u0034?/gvdim;
/U\P{sc=Greek}/udi;
const v6 = [4294967296];
let v7 = [268435439];
function f8(a9, a10) {
    const v12 = Math.cbrt();
    v12 % v12;
    return v1;
}
Object.defineProperty(v7, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f8 });
v7++;
new Int8Array(3620);
new Float32Array(9);
const v25 = new Uint32Array(2034);
[v6,v7,v25,v7];
[v0,v6];
try {
    new Uint32Array(65536);
} catch(e29) {
}
[v1];
let v36 = 2147483649;
const v38 = -13 * -13;
++v36;
v38 * -13;
[v6];
Reflect[Symbol.toPrimitive] = f8;
const v46 = [2034];
v46.push(Reflect);
const v48 = [v46];
Object.defineProperty(v48, "toString", { writable: true, enumerable: true, value: Symbol });
v48.toString();
