function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 1073741824;
    } catch(e3) {
    }
    try {
        this.d = 1073741824;
    } catch(e4) {
    }
    try {
        this.e = 1073741824;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
const v9 = v8?.constructor;
try { new v9(); } catch (e) {}
class C11 extends F0 {
    constructor(a13) {
        super();
        try { new DataView(DataView); } catch (e) {}
        const v16 = this.a;
        v16 * v16;
        for (let v19 = 0; v19 < 32; v19++) {
            const t27 = "p";
            t27[0] = "p";
            this["p" + v19] = v19;
        }
        for (let v22 = 0; v22 < 32; v22++) {
            v22 - v22;
            try { ("p").codePointAt(DataView); } catch (e) {}
            const v26 = "p" + v22;
            v26[1] = v26;
            this[v26] = v22;
        }
    }
    static n(a28, a29) {
        this * F0;
        const v31 = super[v8];
        const v32 = v6;
        try {
            v32.toString = v31;
        } catch(e33) {
        }
        return this;
    }
}
C11.length;
const v35 = new C11(v7);
v35.e = v35;
new C11(C11);
const v37 = new C11(v6);
v37.g = v37;
4096 << 4096;
try { Float32Array.of(); } catch (e) {}
new Float32Array(4096);
1 >> 1;
new Uint16Array(1);
let v47 = -9223372036854775807;
v47--;
async function* f49(a50, a51) {
    return v47;
}
f49.g = f49;
let v52;
try { v52 = f49(f49, F0); } catch (e) {}
try { v52.next(v52); } catch (e) {}
const v54 = v35.DataView;
let v55;
try { v55 = new v54(); } catch (e) {}
const v57 = v35.a;
v57 + v57;
const v59 = [v35];
let v60;
try { v60 = v59.findLastIndex(1); } catch (e) {}
[v59,v6];
[F0];
new Uint32Array(214);
class C68 {
    g = v7;
    static g = v6;
    static e;
    2;
    #d = v6;
    #m(a70, a71) {
        class C72 {
            e;
        }
    }
}
try { new C68(); } catch (e) {}
const v76 = ("toString")?.slice;
try { new v76(v55, v55); } catch (e) {}
try { ("toString").match(-1.2265047599438006e+308); } catch (e) {}
const v80 = ("R5pp5")[4];
try { v80.localeCompare(v60); } catch (e) {}
const v84 = -536870889;
v84 << v84;
const o86 = {
    "maxByteLength": 536870889,
};
class C87 {
}
try { new C87(); } catch (e) {}
try { new C87(); } catch (e) {}
