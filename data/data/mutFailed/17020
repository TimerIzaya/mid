[0.44652570422082627,-1.753527133525285e+308,-5.0,-6.7932006186432385,-7.588383962984548,-0.0];
const v1 = [-1000.0,3.0];
[-931816.3350929753,8.797127486271336,-445022.78522133664,-5.0,-2.0,-Infinity,1.0,-4.0,-258551.9682195651,-1.4836492745073185e+308];
const v6 = new BigUint64Array(8);
try { v6.set(v1); } catch (e) {}
new Uint8Array(255);
new Int8Array(109);
function f17(a18, a19, a20, a21) {
    Object.defineProperty(a21, "toString", { enumerable: true, value: f17 });
    a20 + a20;
    a21 >> a21;
    const v24 = [-9.109766292519199,-1.3811947064786667e+308,0.09110445091766706,5.0,-385647.03832885576,0.2888431306471019];
    try { v24.map(255); } catch (e) {}
    let v26;
    try { v26 = v24.filter(); } catch (e) {}
    return v26;
}
f17.toString = f17;
try { f17.bind(255); } catch (e) {}
for (let v28 = 0; v28 < 10; v28++) {
    v28++;
    f17(v28, f17, v28, v28);
}
%OptimizeFunctionOnNextCall(f17);
f17(f17, f17, f17, f17);
