[-2.0];
const v1 = [0.7546720170882754,-1.6143186388949722e+308,-3.806072849683621e+307,2.0,1000000000000.0,-1000000000.0,1.7144115750165487e+308,-4.3371973197235283e+307];
[1.0,1000000000.0,0.18664837818895508,-1.7976931348623157e+308,0.5460035690253263];
4 & 4;
const v6 = new Float32Array(4);
try { new Int8Array(v1, Float32Array, Float32Array); } catch (e) {}
const v10 = new Int8Array(257);
function f11() {
    function f12(a13, a14) {
        return a14;
    }
    return f12;
}
Object.defineProperty(v10, Symbol.toPrimitive, { writable: true, enumerable: true, get: f11 });
v10[31] = v10;
try { BigUint64Array.of(); } catch (e) {}
const v23 = new BigUint64Array(256, 256, BigUint64Array, 257);
[[v23],Float32Array];
[v6,Float32Array,v1,v10];
2 >>> 2;
let v30 = Array(257, BigUint64Array);
function f31(a32, a33) {
    a32.toString = f11;
    const o41 = {
        "b": a32,
        ...a33,
        [a32](a35, a36) {
            const v38 = WeakMap(a35);
            this.b;
            super[v38] = v30;
            function f40() {
                return a32;
            }
            return a32;
        },
    };
    function f42() {
        -Float32Array;
        new BigInt64Array(5);
        return a33;
    }
    o41.toString = f42;
    return o41;
}
try { f31.call(4); } catch (e) {}
const v48 = f31(2, 2);
v48.toString = f11;
const v49 = f31(v48, f31);
const v50 = f31(v49, Array);
const v51 = [-439900.9503882638,1.0,6.3170898061028105];
const v52 = [2.2250738585072014e-308,-642410.6561922245];
v52[1];
const v54 = [1000.0,-2.693837761401012];
function f55() {
    return v50;
}
function f56(a57, a58) {
    a58[1];
    const o70 = {
        get h() {
            Math + v30--;
            ++v30;
            Math.log1p(4294967296);
            v30++;
            -698162.0562706811 % 4294967296;
            return v52;
        },
    };
    return f56;
}
const v71 = f56(v51, v54);
Object.defineProperty(v71, "p", { configurable: true, enumerable: true, value: f56 });
const v72 = f56(v52, v51);
v72.p = v48;
try { v72["p"](v50, v49, v71, 2); } catch (e) {}
const o75 = {
};
o75.g = o75;
try {
} catch(e76) {
}
try {
    const o77 = {
    };
    o77.d = o77;
} catch(e78) {
}
try {
    const o79 = {
    };
} catch(e80) {
}
try {
    const o81 = {
    };
    o81.c = o81;
} catch(e82) {
}
