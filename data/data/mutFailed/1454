const v1 = new WeakMap();
class C2 extends WeakMap {
    valueOf(a4) {
        for (let i7 = 0, i8 = 10;
            i7 < i8;
            (() => {
                v1.#e = -1;
                const v14 = [1.0,141599.63044947106,730.845463907873,1000000.0,-4.2811873669589365e+307,0.0,3.0];
                try { v14.forEach(-5n); } catch (e) {}
                i7++;
                i8--;
                function f18() {
                    return f18;
                }
                function f19() {
                    async function f21(a22, a23, a24) {
                        return a23;
                    }
                    return f21;
                }
            })()) {
        }
        return this;
    }
}
const v30 = new C2();
const v31 = new C2();
const v32 = new C2();
class C33 extends WeakMap {
    #c = v32;
    constructor(a35, a36, a37, a38) {
        super(v31);
        [-9007199254740991];
        [4294967297,-9007199254740992,-56257,-65537,12,-19666,9007199254740990,-11,-4,-4607];
        [13,2147483648,2147483647];
        function f42(a43) {
            return a43;
        }
        const o46 = {
            "type": "function",
        };
        const v47 = new Worker(f42, o46);
        v47.terminateAndWait();
        for (let v50 = 0; v50 < 32; v50++) {
            v30["p" + v50] = v50;
            function F53() {
                if (!new.target) { throw 'must be called with new'; }
            }
            new WeakSet();
            function f57() {
                return f57;
            }
            Object.defineProperty(arguments, 13, { enumerable: true, set: f57 });
        }
    }
}
const v60 = new C33(C33, v31, v31, v30);
const v61 = new C33(v1, v60, C2, v30);
new C33(v32, v31, v61, WeakMap);
class C65 {
    static e;
    e;
    static 3 = -5.161103313394506;
    toString(a67) {
        let v66 = this;
        v66.e *= 0.8199829542463926;
        v66 += v66;
        for (let v68 = 0; v68 < 10; v68++) {
            a67["p" + v68] = v68;
        }
        return 0.8199829542463926;
    }
}
C65[/1(ab)/ud];
function F73(a75, a76, a77, a78) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v32;
    } catch(e79) {
    }
}
const v80 = new F73(v32, v32, v60, v60);
new F73(v61, v60, v80, v32);
new F73(C33, C33, v32, C2);
const v84 = new Float64Array();
const v85 = v84.buffer;
try {
    v85.resize(Float64Array);
    class C87 {
    }
    new C87();
    const v89 = [-1235077344,-4096,50383815,-8476,-9007199254740991];
    class C91 extends Set {
    }
    new C91(v89);
} catch(e93) {
}
