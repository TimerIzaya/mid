const v2 = new BigUint64Array(1);
new Uint32Array(1);
new Uint8ClampedArray(4);
function F9(a11, a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = v2;
    } catch(e15) {
    }
    try {
        a11.g = a13;
    } catch(e16) {
    }
}
new F9(3425, 1, 1, 1);
new F9(4, 3425, 4, 4);
new F9(1, 4, 4, 1);
const v22 = new Int8Array(5);
const v27 = new BigUint64Array(127);
v22[v27].sin();
324308659 + 324308659;
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = a5;
    try {
        this.e = a5;
    } catch(e7) {
    }
}
const v8 = new F3("-2056606652", "-2056606652");
const v9 = new F3("message", "cosh");
new F3("message", "message");
for (let i12 = 0; i12 < 10; i12++) {
    [1000000.0,7.3895243439555145,0.761665043111583,-6.666760806445602,1000.0,1000000.0,-1.5521763690674168e+308];
    [1000000.0,0.7347772371031651,-2.220446049250313e-16,-2.0,-9.653057627356325e+307,6.06116105202987,-0.0,-1e-15,1000000000000.0];
    [311.36214965249997,1.0596814067092148e+308,-1000000000000.0,-2.2250738585072014e-308,0.7941625455014237,-1000000.0,-2.4560463922317397e+306];
}
function F21(a23, a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "b", { writable: true, configurable: true, value: a24 });
    try { a25.construct(); } catch (e) {}
    class C28 {
        4294967296;
    }
    const o29 = {
    };
    try {
        this.b = "cosh";
    } catch(e30) {
    }
}
const v32 = (-13545).constructor;
"cosh" / v9;
const v35 = -618199.1371965441 >> -618199.1371965441;
new F21("message", "-2056606652", "-2056606652", "message");
const v37 = new F21("cosh", "-2056606652", "cosh", "message");
new F21("message", "message", "-2056606652", v8);
const v42 = ("byteLength").normalize("NFC");
try { new v32(...v42, ..."-2056606652", v37, -13545, ..."NFC"); } catch (e) {}
v32?.[2649];
for (let i = 0; i < 5; i++) {
    const v48 = new Int16Array(Int16Array);
    const v49 = /s1(\1a)/mviy;
    const v50 = /a\S\xf0\x9f\x92\xa9/msuyd;
    const o51 = {
        __proto__: v49,
        "b": v50,
    };
    for (let v52 = 0; v52 < 25; v52++) {
        v48["p" + v52] = v52;
    }
    const v56 = [];
    const v57 = [v56,v56,v56];
    function f58(a59, a60, a61) {
        a61--;
        const o67 = {
            "h": a61,
            "a": a60,
            [a61](a64, a65, a66) {
            },
            "b": a61,
            "g": v57,
        };
        return o67;
    }
    f58(v56);
    const v69 = new Int16Array(Int16Array, Int16Array, Int16Array);
    v69.p1 = v69;
    const v71 = new Float64Array(v69, v69, Int16Array);
    for (let v72 = 0; v72 < 25; v72++) {
        v69["p" + v72] = v72;
    }
    const v76 = [v35];
    Reflect.apply(("byteLength").repeat, o51, v76);
    try {
        const t74 = "cosh";
        t74[-2] = 12760n;
    } catch(e79) {
    }
    v69.__proto__ = v71;
}
class C83 {
    static [-618199.1371965441];
    m(a85) {
        function f86() {
            return 1073741823;
        }
        Object.defineProperty("trim", 5, { enumerable: true, set: f86 });
    }
    o(a88, a89) {
        const t89 = a88(-8, "trim", -8, this);
        t89.f = -8 == a88;
    }
}
C83.g = C83;
const v92 = new C83();
const v93 = v92?.toLocaleString;
function f94() {
    return v93;
}
