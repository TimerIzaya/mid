class C3 {
    static #c;
    static {
        try { this.toString(); } catch (e) {}
        this.a = this;
        const v6 = typeof this;
        v6[7] = v6;
        v6 == v6;
        const v9 = v6 === "boolean";
        v9 || v9;
    }
    a = 5.0;
    constructor(a12, a13) {
        a12 >>> a12;
        this.a = this;
        try { a13.call(1.7976931348623157e+308); } catch (e) {}
        for (let i18 = (() => {
                0 | 0;
                return 0;
            })();
            (() => {
                const v20 = i18 < 3;
                !v20;
                return v20;
            })();
            i18 - i18, i18++) {
        }
    }
}
const v27 = new C3(1.7976931348623157e+308, C3);
const v28 = new C3(5.0, v27);
new C3(v28, v27);
function f30() {
    return "string";
}
const v31 = f30?.constructor;
try { new v31(v28); } catch (e) {}
-1073741824 + -1073741824;
const v36 = -1073741824 <= -1073741824;
v36 || v36;
Uint32Array.length;
new Uint32Array(1024);
127 ^ 127;
const v46 = new BigUint64Array(127);
const v47 = v46?.map;
v47.length;
let v49;
try { v49 = new v47(5.0); } catch (e) {}
3262 >>> 3262;
try { new Uint8Array(v49, 5.0, 5.0); } catch (e) {}
const v54 = new Uint8Array(3262);
v54.BYTES_PER_ELEMENT = v54;
const v55 = [-3.0,4.0,1.7381830731777672e+308,-Infinity,0.053627216611518036];
16 << 16;
function f58(a59, a60, a61, a62) {
    a60 - a60;
    try { a60.find(v28); } catch (e) {}
    const o66 = {
        get c() {
        },
    };
}
let v67;
try { v67 = new f58(16, 185187527, v27, 185187527); } catch (e) {}
try { v67.constructor(v49, f30, C3, f58); } catch (e) {}
[f58(16, v55),...v55];
