function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 64;
    } catch(e3) {
    }
    try {
        this.b = 64;
    } catch(e4) {
    }
}
let v5 = new F0();
const v6 = new F0();
const v7 = new F0();
class C8 extends F0 {
    #m(a10, a11) {
        new Int32Array(512);
        const v17 = new Int16Array(1597);
        const o22 = {
            "maxByteLength": 257,
        };
        const v24 = new ArrayBuffer(257, o22);
        new Int16Array(v24);
        new BigInt64Array(129);
        return v17;
    }
}
const v28 = new C8();
new C8();
let v30 = new C8();
v5[C8] = v30;
v7[190];
({"b":v5,"f":v30,...v5} = v5);
new Uint16Array(208);
new BigInt64Array(494);
const v43 = new Float64Array(129);
function f44() {
    return f44;
}
v5[v6] = Uint16Array;
let [v45,,v46,v47] = v43;
v47?.[6];
Object.defineProperty(v28, "a", { writable: true, configurable: true, enumerable: true, get: f44 });
const o50 = {
    __proto__: f44,
    "e": f44,
};
