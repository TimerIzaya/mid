new Uint8Array(268435440);
function f6(a7, a8, a9, a10) {
    return a7;
}
function f11(a12, a13, a14, a15) {
    function f16() {
        return f16;
    }
    const v17 = f16.d;
    const v18 = v17 + a12;
    const v20 = new Int8Array(a12);
    const v21 = v20.buffer;
    function f22(a23) {
        return f6;
    }
    f22.f = f6;
    f22.constructor;
    const v25 = v21.slice(v17, f16);
    function f26(a27) {
        v25.slice(a27, v18);
        return f11;
    }
    return 0.43836835733840307;
}
function F32(a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = f6;
    } catch(e37) {
    }
    try {
        this.b = 6.565160061153847;
    } catch(e38) {
    }
    function F39(a41, a42) {
        if (!new.target) { throw 'must be called with new'; }
        this.hasOwnProperty();
        a34.constructor;
        try { new a35(); } catch (e) {}
    }
}
new Float64Array(1073741824);
function f50(a51) {
    return a51;
}
this.onmessage = f50;
new F32(1e-15, 2.220446049250313e-16, 2.220446049250313e-16);
new F32(1e-15, 2.220446049250313e-16, -1000000.0);
const v54 = new F32(-5.0, -1000000.0, 6.565160061153847);
const v55 = [9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
delete v54[6];
new f50(256);
new f50(256);
new JSON(65536);
v55[1000.0] >>= -4.0;
new Uint8Array(v55);
