new BigUint64Array(1024);
const v5 = new BigInt64Array(256);
let v6 = 127;
new Int16Array(v6);
function F9(a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    const v14 = v5[243];
    v6 = 1024;
    this[4] ^= v14;
    const o19 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o19);
    try {
        this.f = BigUint64Array;
    } catch(e21) {
    }
}
new F9(256, 1024, 256);
new F9(256, 1024, 1024);
new F9(1024, v6, 256);
function F25() {
    if (!new.target) { throw 'must be called with new'; }
}
const v28 = new F25();
function f29(a30, a31) {
    const o35 = {
        p(a33, a34) {
            super.a = F25;
            return a30;
        },
    };
    return a30;
}
class C38 {
    static set f(a40) {
        super.c = v28;
    }
}
for (const v41 in undefined) {
    continue;
    function f42() {
        return v41;
    }
}
/1F(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10b[a\Sc]/gis;
