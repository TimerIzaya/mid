class C3 {
    static #o(a5, a6) {
        try {
            const t3 = "reduceRight";
            t3.b = -128;
        } catch(e7) {
        }
        return a5;
    }
    36 = -128;
    16 = 5.0;
    [-128];
    #a;
    static #c = 5.0;
}
new C3();
new C3();
new C3();
new Uint8Array(917);
new Float32Array(255);
new Float32Array(8);
function F20() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = this;
    } catch(e23) {
    }
}
new F20();
new F20();
new F20();
new Uint32Array(3551);
536870912n << 3551;
new BigInt64Array(1073741824);
new BigInt64Array(10);
new Float32Array(15);
const v50 = new Int16Array(2183);
new Uint8Array(255);
const v56 = new Int16Array(8);
async function f58(a59, a60, a61) {
    let [v63,v64,...v65] = delete v56[-1000000000.0];
    v50[5];
    await v64;
    return v64;
}
const o68 = {
};
try {
} catch(e69) {
}
try {
    const o70 = {
    };
} catch(e71) {
}
try {
    const o72 = {
    };
} catch(e73) {
}
try {
    const o74 = {
    };
    o74.g = Uint32Array;
} catch(e75) {
}
