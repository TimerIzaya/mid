const v0 = [];
for (let v9 = 0; v9 < 5; v9++) {
}
const v12 = new Float32Array(1000);
const v15 = new Uint8Array(201);
v15[6] = v12;
Math.sign(-693493371);
function f20(a21, a22, a23, a24) {
    a23?.constructor;
    const v26 = /(?:a*)+q(?<a>.)/guds;
    function f27(a28) {
        const v29 = v0.constructor;
        v29(v29);
        a28.constructor.$2;
    }
    for (let [i38, i39] = (() => {
            function f34(a35, a36) {
            }
            return [0, 10];
        })();
        (() => {
            const v40 = i38 < i39;
            !v40;
            return v40;
        })();
        i39--) {
        for (let v47 = 0; v47 < 25; v47++) {
            f27(v26);
        }
    }
    function f49() {
    }
    return f49;
}
f20();
class C56 {
    static #b = 1175953465;
    constructor(a58, a59) {
        try { a58.findLast(); } catch (e) {}
        a58[2];
        const v62 = /W(jy2)/udy;
        const v64 = new Uint8Array();
        try { v64.reduceRight(); } catch (e) {}
        for (let v66 = 0; v66 < 250; v66++) {
            const o73 = {
                ...v64,
                [v0](a68, a69, a70) {
                },
                get f() {
                    super.n();
                },
            };
        }
        for (let v74 = 0; v74 < 5; v74++) {
            -v74;
            ("p")[0];
            v0["p" + v62] = v74;
        }
    }
}
function F79(a81, a82) {
    if (!new.target) { throw 'must be called with new'; }
}
function f83(a84) {
    function f85() {
        return a84;
    }
}
const v90 = new Date();
function F91(a93) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = v90;
    this.g = Date;
}
const v94 = new F91();
function f95(a96, a97, a98, a99) {
    const o100 = {
        "deleteProperty": Date,
        "ownKeys": Date,
    };
    return v94;
}
f95(v0, Date);
try {
    v0.length = 10000;
} catch(e102) {
}
new C56();
new C56();
