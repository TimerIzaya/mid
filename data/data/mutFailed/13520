new Int8Array();
class C5 {
    static #a;
    static #d = "string";
    static #valueOf(a7, a8) {
        const o9 = {
        };
        try {
            o9.a = a7;
        } catch(e10) {
        }
        try {
            const o11 = {
            };
            o11.a = a7;
            o11.d = Set;
        } catch(e12) {
        }
        try {
            const o13 = {
            };
            o13.a = a7;
            o13.d = Set;
            o13.e = "string";
        } catch(e14) {
        }
        try {
            const o15 = {
            };
            o15.a = a7;
            o15.d = Set;
            o15.h = a8;
        } catch(e16) {
        }
        return this;
    }
}
class C19 {
    static g = 4.771447903803809;
    #toString(a21, a22) {
        super[-17353] = 0.5935825202042617;
        let v23;
        try { v23 = a22(this, a21, this, 0.5935825202042617, a22); } catch (e) {}
        return v23;
    }
    #n(a25, a26) {
        try { a26(); } catch (e) {}
        try {
            super.setUint16(4.771447903803809, this, a25, 4.771447903803809);
        } catch(e29) {
        }
        return 0.5935825202042617;
    }
}
new C19();
new C19();
Math.atan2(257, 257);
const v35 = /a\w/gudsy;
const v36 = /ka{0}/guims;
let v37 = /ab|c/udmy;
class C38 {
}
const v39 = new C38();
function f40(a41, a42) {
    const o43 = {
        ...v36,
        "d": v39,
        "c": a42,
        "g": a42,
        "f": a41,
        "a": Math,
        7: C38,
        __proto__: C38,
        "e": v36,
        "b": v35,
    };
    return o43;
}
f40(v37);
new C19();
try {
const t0 = -536870912;
new t0();
} catch (e) {}
function F50() {
    if (!new.target) { throw 'must be called with new'; }
}
const v52 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
class C53 {
    constructor(a55, a56, a57, a58) {
        a57[5];
        const v60 = this.constructor;
        try { new v60(v52, F50, a57); } catch (e) {}
        v52 >>> a56;
    }
}
new Float64Array(16);
new Uint32Array(6);
const v73 = new Float32Array(3531);
v73["at"]();
new Uint16Array(1000);
const o86 = {
    set b(a82) {
        function f83(a84) {
            return f83;
        }
        class C85 extends f83 {
        }
    },
};
v37 *= Symbol.toPrimitive;
("h").split(65535);
Math.log10(1073741825);
