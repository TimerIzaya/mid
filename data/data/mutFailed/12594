const v3 = /(?: foo )m/m;
const v4 = /a\q+/my;
const v5 = /9g(?<a>.)[xyz??4ma+b]*/disy;
class C6 {
    83;
    2018102263;
    static #o(a8, a9, a10, a11) {
        if (v3) {
            try {
                v5.global = a11;
            } catch(e12) {
                const v14 = new Int16Array();
                const v17 = new Int8Array(1);
                v14[v17] = v17;
            }
        } else {
            const t16 = super[v4];
            t16[63] >>= 6;
        }
        return a10;
    }
}
new C6();
new C6();
new C6();
class C22 extends C6 {
    static 4;
    static o(a24, a25, a26) {
        const o29 = {
            "maxByteLength": 3833,
        };
        const v31 = new ArrayBuffer(3833, o29);
        new Uint8Array(v31);
        return Uint8Array;
    }
}
new C22();
([-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1]).pop();
new Float64Array(216);
new C22();
new C22();
function f45() {
    return -2.220446049250313e-16;
}
new Int8Array(4);
for (const v51 in "1024") {
}
class C52 {
}
try {
} catch(e53) {
}
const v55 = new BigInt64Array(-4294967295, -4294967295, -4294967295);
const v56 = `
    var c = v55;
`;
new C52();
("1073741823").trimRight();
const v61 = [];
function f62(a63, a64) {
    class C65 {
    }
    function F72(a74, a75, a76) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v77 = new F72(3011, Uint8ClampedArray, F72);
    v77.constructor = Date;
    5.0 / -2.220446049250313e-16;
    const v82 = new Uint8Array(257);
    class C84 extends Uint16Array {
        constructor(a86, a87, a88) {
            super(v82);
        }
    }
    const v90 = new Uint8Array();
    const o91 = {
        ...v90,
    };
    Math.exp(8);
    Math.log(-23525);
    function f95() {
        return f95;
    }
}
v61.constructor = f62;
new Float32Array(v61);
/abc?/gvmy.exec("Q8F");
const v100 = /(x)(x)(x)\1/uis;
function f101(a102, a103, a104, a105) {
    const o112 = {
        2: a104,
        __proto__: a105,
        [v100](a107, a108, a109, a110) {
            super.test();
        },
    };
    return a102;
}
f101();
f101();
function F116() {
    if (!new.target) { throw 'must be called with new'; }
}
Math.cos(2);
new BigUint64Array(215);
new Int32Array(Int32Array);
new Int8Array();
const v130 = [2.2250738585072014e-308,6.427477933354486e+307,1000000000.0,0.08682825617912271,-1000000000.0,3.0,228665.3903849495,0.5660155973967917,0.8606405474237848,3.0108403245603076e+307];
const v131 = [1000000000.0,12.305595805765165,2.0862036260312724e+307,-5.0,0.3227826650028378,-Infinity,-6.013642736236817,-6.180619420937975e+307,-1000000.0];
const v132 = [881266.4750531102,900.0211844391163,-148.3543184123963,-878.1424195424157,8.23394403026903,-1000000.0,4.0,1.7976931348623157e+308,-6.700826123638565,Infinity];
function F133(a135) {
    if (!new.target) { throw 'must be called with new'; }
    const v136 = this.constructor;
    try { v136(v131); } catch (e) {}
    v132.a = v130;
}
new F133(v130);
class C141 {
    #c = "toUpperCase";
    get a() {
        const v143 = this << "toUpperCase";
        const t121 = v143 ^ v143;
        t121();
    }
}
