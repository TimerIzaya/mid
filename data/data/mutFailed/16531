new Uint8Array(10);
const t1 = 3.0;
new t1(4003);
new Uint32Array(698);
class C15 extends SharedArrayBuffer {
}
for (let v16 = 0; v16 < 25; v16++) {
}
function f18() {
    return 10;
}
f18.valueOf = f18;
function F19(a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    const v23 = this.constructor;
    try { new v23(v23, 256); } catch (e) {}
    -a21;
    this.h = a22--;
}
new F19(65537, f18);
const v29 = new gc();
65537 | v29;
const v33 = Array(19793);
const v34 = [v33,v33,v33,v33,v33];
[[v34,v34,v34]];
const v37 = new F19();
v37.toString = f18;
class C38 extends C15 {
    #h;
    3120 = F19;
    #g = Uint32Array;
    valueOf(a40, a41, a42) {
    }
    [v37] = 256;
}
new C38();
new C38();
new C38();
