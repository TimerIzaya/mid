function f0() {
}
const v3 = new Int32Array(1903);
function f4() {
    f0();
    return f0();
}
v3[Symbol.toPrimitive] = f4;
Uint32Array[Symbol.toPrimitive] = f4;
const v13 = new Uint32Array(10);
let v14 = 5;
let v15;
try { v15 = v13.some(f0); } catch (e) {}
const v16 = Uint32Array.length;
const v17 = [v13,Int32Array,1903,Uint32Array,v16];
const v18 = v15.length;
v17 | Uint32Array;
const v21 = new Int16Array(v14);
const v22 = [Uint32Array];
const v23 = [10,v22,v3,v22,Int32Array];
function f24(a25, a26) {
    var f = v16;
    function f27() {
        return f27;
    }
    const v28 = [-3,257];
    class C29 extends f27 {
        static #n(a31, a32, a33) {
            Object.defineProperty(v28, 10, { writable: true, configurable: true, enumerable: true, set: f27 });
        }
    }
    return v22;
}
v23.toString = f24;
WeakSet.toString = f0;
new WeakSet();
const v36 = delete v21[1903];
const v37 = 1903;
new f0();
let v39 = [v23,10,v3,10];
function f40(a41, a42) {
    function f43(a44, a45) {
        return Math.tanh("1");
    }
    %OptimizeFunctionOnNextCall(f43);
    return v23;
}
v39.valueOf = f40;
class C50 extends Uint16Array {
}
class C51 extends C50 {
    constructor(a53, a54, a55, a56) {
        super();
        function f57(a58, a59, a60) {
        }
        const o63 = {
            "type": "function",
            "c": v39,
            "b": v36,
            ..."function",
            "g": v36,
            ..."function",
        };
        o63.arguments = o63;
        new Worker(f57, o63);
        const o65 = {
        };
        super[WeakSet];
        const v74 = ++a55;
        v13 << -2;
        65535 << 65535;
        Math.asinh(a56);
        let v78 = a56 & v74;
        v78++;
        const v81 = new Proxy(C50, o65);
        v22 && v81;
    }
}
new C51();
v14 = 1903;
v39 &= v18;
[[1903,[Uint16Array,v37,v13,C50,WeakSet]]];
class C87 {
}
new C51();
