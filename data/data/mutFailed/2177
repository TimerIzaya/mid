-129n;
10000n + 10000n;
[-174534415n,Float64Array,2147483648n,-63890n,10000n];
const v11 = [10000n];
[-174534415n,v11,10000n,2];
v11.length &= 2;
const v13 = delete v11[67];
const v14 = new Float64Array(2);
new Int32Array(2717);
new BigUint64Array(2513);
const v22 = new Date();
const o23 = {
    "g": v22,
};
-3.5885237423067196;
function f26() {
}
let v28 = 7;
let v29 = 16;
v29++;
Int8Array.length;
new Int8Array(964446029);
let v36 = 0;
v14.byteOffset;
this[v13];
v36++;
v36 < o23;
const v46 = new Uint32Array(v29);
257 >>> 257;
const v50 = new Uint32Array(257);
v50[139];
v28 &&= 1073741824;
function f52(a53, a54) {
    const o55 = {
    };
    o55.e = f52;
    const o56 = {
    };
    o56.e = 3;
    o56.b = a54;
    const o57 = {
    };
    o57.e = f52;
    o57.b = a54;
    o57.c = a53;
    const o58 = {
    };
    o58.e = f52;
    o58.b = a54;
    o58.d = a54;
    function f60(a61) {
        new f26();
    }
    this.onmessage = f60;
    v46.length = 1073741824;
}
try {
    f26();
} catch(e65) {
}
Uint32Array || Int32Array;
const v68 = [Uint32Array,3.5885237423067196];
try { v68.find(Worker); } catch (e) {}
const o70 = {
    "arguments": v68,
    "type": 2147483648n,
};
const v71 = new Worker(f52, o70);
const v72 = v71?.constructor;
try { new v72(); } catch (e) {}
