function f0() {
    const o40 = {
        0: -13,
        __proto__: "boolean",
        set b(a5) {
        },
        set b(a7) {
        },
        [-1000000000.0]: "boolean",
        ..."boolean",
        set a(a9) {
            class C10 {
            }
            function F11(a13, a14, a15, a16) {
                if (!new.target) { throw 'must be called with new'; }
                this.f = C10;
            }
            a9 |= -1000000000.0;
            const v18 = new Uint32Array();
            function f19(a20, a21, a22, a23) {
                const o27 = {
                    n(a25, a26) {
                        v18[a20] = v18;
                    },
                };
                new Int8Array(16);
                new Date();
            }
            let v34 = 0;
            do {
                const v35 = ("boolean")[268435440];
                try { new v35(); } catch (e) {}
                super.a = v34;
                v34++;
            } while (v34 < 7)
        },
    };
    return o40;
}
const v41 = f0();
const v42 = f0();
const v43 = f0();
class C44 extends f0 {
    static c;
    f = f0;
    0;
    n(a46) {
        try {
            f0();
        } catch(e48) {
        }
        function f49() {
            return a46;
        }
        return v41;
    }
    [v43];
}
new C44();
new C44();
new C44();
class C54 extends f0 {
    static [v42];
    constructor(a56, a57, a58, a59) {
        const o61 = {
        };
        gc(o61);
    }
    static #valueOf(a64, a65) {
        Object.defineProperty(v41, "c", { writable: true, configurable: true, enumerable: true, get: f0 });
        f0();
        new Uint8ClampedArray(512);
        new BigInt64Array(16);
        "ex7" <= Uint8ClampedArray;
        new WeakSet();
        const v81 = [4294967297,4294967297];
        v81.fill(v81);
        ([607.0076449847468,-818.8860494127688])[2];
        new BigUint64Array(255);
        return f0;
    }
}
new C54();
new C54();
new C54();
class C95 {
    10000;
    valueOf(a97, a98, a99, a100) {
        const v101 = this?.constructor;
        try { new v101(); } catch (e) {}
    }
    constructor(a104) {
        this[1762774961] = this;
        a104 % a104;
        function f106() {
            return a104;
        }
        try { f106.bind(this); } catch (e) {}
    }
    static [-1e-15] = 1000.0;
    ["name"] = -1e-15;
    f;
    [-1e-15];
    a;
    1762774961 = -1e-15;
    static ["name"];
}
C95.e = C95;
const v108 = new C95(1000.0);
const v109 = new C95(v108);
const v110 = v109?.__lookupSetter__;
try { new v110("name"); } catch (e) {}
new WeakSet();
const v116 = new Int32Array(2890);
v116.lastIndexOf();
new C95(-1e-15);
function F119(a121, a122) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a122;
}
new F119();
new Float32Array(2);
try { new WeakSet(); } catch (e) {}
new WeakSet();
new Set();
let v133 = undefined;
const o134 = {
};
o134.c = o134;
const v135 = [-9007199254740991,256,5,4294967297,1,-38452,9223372036854775807,2147483649];
const v136 = [-4564,-541496027,-554545361,536870888];
const v137 = [61400,-6,-1019014473,-42020,-2];
class C138 {
    constructor(a140, a141) {
        ("minor").valueOf("minor");
        const t134 = [-37672];
        t134[5] = -37672;
        const v146 = a141[this];
        try { v146(v146, ...a141, ...v135); } catch (e) {}
    }
}
new C138(v137, v135);
new C138(v136, v137);
new C138(v136, v136);
v133 = o134;
function F151() {
    if (!new.target) { throw 'must be called with new'; }
    const v153 = this.constructor;
    try { new v153(); } catch (e) {}
    let v155 = -128;
    v155--;
    this.g = v155;
}
new F151();
new Uint8Array();
