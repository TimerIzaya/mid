new Uint16Array(256);
new Int32Array(7);
new Float64Array(13);
[-1073741824,-268435456,693735967,268435441,16,6,-268435456];
[-994460378,-278441367,8];
const v11 = [-5,65536,7,-1611916363,536870912];
new Int32Array(2);
new Uint16Array(127);
new Int16Array(622);
const v21 = [601759695];
const v22 = [427812215,61195,-2147483647,4096,-2147483647,30905];
function f24(a25, a26, a27, a28) {
    function f29() {
        const o36 = {
            "h": -1073741824,
            ..."Vre",
            valueOf(a34, a35) {
                return 522675525n;
            },
            ..."Vre",
            "c": a28,
            5: -1073741824,
            6: 13,
        };
        return a28;
    }
    Int32Array();
    %OptimizeFunctionOnNextCall(f29);
    try { v22["find"](..."find", a28, ...v21, ...v22, ...522675525n); } catch (e) {}
    a27 <= a27;
    return a25;
}
const v41 = f24(v22, v11, v21, 522675525n);
for (let v42 = 0; v42 < 5; v42++) {
    f24(v21, v42, false, v42);
}
%OptimizeFunctionOnNextCall(f24);
f24(522675525n, v21, f24, v41);
