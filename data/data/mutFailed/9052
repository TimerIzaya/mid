new Uint16Array(1890);
class C4 extends BigUint64Array {
}
const v7 = new Uint32Array(2091);
for (const v9 in v7[0]) {
}
new Int8Array(104);
const v15 = new BigUint64Array(2662);
class C16 {
    static [-1];
    static {
        [1.0,1000000000.0,-1.7976931348623157e+308,-698.8011441933257,1.0,-1.1360348631699186e+308,-513.249605766501,1.0,-824.6660755119146];
        [0.5105102061759034];
        v15[3] = [0.23099451498198242,4.0,6.337087270213353e+307,-275.16174202660636,999.8977881721169,-5.0];
    }
    #f = 1890;
    h;
    76;
    static e;
}
new C16();
new C16();
class C23 {
    get e() {
        ~-7673;
    }
}
new C16();
const v30 = [155533.8602852358,2.0];
function F32() {
    if (!new.target) { throw 'must be called with new'; }
    class C34 {
        toString(a36) {
            const t33 = this.constructor;
            new t33();
            const v39 = this.__lookupSetter__;
            try { new v39(); } catch (e) {}
            super[this];
        }
    }
    function f44() {
    }
    const v45 = [f44,f44];
    const v48 = new Int8Array(9);
    class C49 {
        [v45];
        10;
        static c = v48;
    }
    for (const v51 of Array(19793)) {
        v30[658291203] = null;
    }
    undefined ^ [this,this,this];
}
new F32();
function F56(a58, a59) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        class C61 extends [this,this,this,this,this] {
        }
    } catch(e62) {
    }
}
new F32();
