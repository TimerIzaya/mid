const v1 = new Date();
class C2 {
    536870887;
    #toString(a4, a5) {
        try {
            Date.valueOf = a4;
        } catch(e6) {
            a5.f -= a4;
            const v8 = Symbol.iterator;
            const o17 = {
                [v8]() {
                    let v10 = 10;
                    const o16 = {
                        next() {
                            v10--;
                            const v14 = v10 == 0;
                            const o15 = {
                                "done": v14,
                                "value": v10,
                            };
                            return o15;
                        },
                    };
                    return o16;
                },
            };
        }
        return v1;
    }
    constructor(a19) {
        let v18 = this;
        const o20 = {
            "d": a19,
            ...v18,
        };
        v18 <<= v18;
        const v21 = o20 || Date;
        try {
            v21.__proto__ = o20;
        } catch(e22) {
        }
    }
}
const v23 = new C2(C2);
const v24 = new C2(C2);
const v25 = new C2(C2);
-Infinity;
[v24,v1,0.8268786652291418,C2];
class C31 extends Date {
}
const v32 = new C31();
v32.setUTCSeconds();
const v34 = [v23,C2];
const v35 = [v34,v34,0.8268786652291418,v34];
const o42 = {
    "h": true,
    ...true,
    get c() {
        return this;
    },
    set d(a41) {
    },
    "d": true,
};
const v44 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
const v45 = [3,-6,7268,-554513674,5,4294967295,861325878,17152,2147483647,5];
const v46 = [256,64];
function f50(a51, a52, a53) {
    const o69 = {
        ..."-669555958",
        "e": v46,
        "c": v44,
        __proto__: a53,
        o(a55) {
            const o57 = {
            };
            return gc(o57);
        },
        toString(a60, a61, a62, a63) {
            a53 instanceof a60;
            try { a63.trimEnd(); } catch (e) {}
            return "-1024";
        },
    };
    return a52;
}
function F70() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = 268435440;
}
async function f73(a74, a75, a76) {
    return a74;
}
new BigUint64Array();
function f79(a80, a81, a82) {
    return a82;
}
f50(v45, v45, "848379313");
const v84 = new F70();
const v85 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f86() {
    try {
        v85.forEach();
    } catch(e88) {
        e88.a = e88;
        e88.a = v84;
        e88.a = e88;
    }
    const v90 = Symbol.toPrimitive;
    v90.description;
    Symbol.for();
    return v90;
}
const v93 = f50(v45, v44, "UZ");
f50(v45, v93, v93);
function f95() {
}
const v96 = [1073741824,1073741823,1376142744,1073741825];
function f97(a98, a99, a100, a101) {
    Math.sin(-268435456);
    function F106() {
        if (!new.target) { throw 'must be called with new'; }
        for (let v108 = 0; v108 < 50; v108++) {
            v108 << v108;
            for (let v110 = 0; v110 < 25; v110++) {
                this["p" + v110] = v110;
            }
        }
    }
    function f113() {
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        arguments.toPrimitive;
    }
    f95();
    const v123 = new Int8Array();
    v123.buffer.slice();
    %OptimizeFunctionOnNextCall(f113);
    let v128;
    try { v128 = v96["find"](..."find", a101, ...v44); } catch (e) {}
    v128 <= a100;
    return arguments;
}
const v131 = new WeakMap();
const v137 = v24[6];
v25[v137] = f95;
Object.defineProperty("UZ", 6, { configurable: true, enumerable: true, get: Date, set: f73 });
for (let v138 = 0; v138 < 100; v138++) {
    f97(v35, 23660n, F70, 2.8950008248603982);
}
const v142 = new Date();
v142.description = v131;
-"UZ";
1073741824 - 1459564924;
try { new BigInt64Array(4096, Date, "UZ"); } catch (e) {}
const v149 = new BigInt64Array(1073741824, BigInt64Array);
[-0.0,-2.0,-1e-15,2.0,-Infinity,2.220446049250313e-16];
const v151 = [873.3236504624783,-5.059538800838508];
v151[1] = v151;
v149["lastIndexOf"](4096, "lastIndexOf", "lastIndexOf");
const v156 = new Uint32Array();
const o168 = {
    n(a158, a159) {
        v156[Symbol] = v156;
    },
    [v137](a161, a162, a163, a164) {
        return Uint32Array;
    },
};
const v169 = Symbol.toPrimitive;
Symbol.for(v142.description);
("UZ")[v169];
