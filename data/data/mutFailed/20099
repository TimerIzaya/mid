class C3 {
    constructor(a5) {
        ("5A0").localeCompare(a5, "5A0");
    }
    d;
    #valueOf(a8, a9, a10, a11) {
    }
    ["-1073741824"] = "-1073741824";
    /*
    constructor(a13, a14) {
        try {
            522675525n << 522675525n;
            function F17(a19, a20, a21, a22) {
                if (!new.target) { throw 'must be called with new'; }
            }
            const v23 = new F17();
            const v24 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
            try {
                v24.forEach(F17);
            } catch(e26) {
                e26.charCodeAt(v23);
            }
            a13.toString = a14;
        } catch(e28) {
        }
        c = "-1073741824";
        a13.d &= a13;
    }
    */
    5;
    static #c = "-1073741824";
    static f;
}
const v29 = new C3("-1073741824", -65535);
const v30 = new C3(v29, v29);
new C3(v30, "-1073741824");
new Int16Array(4);
new Float32Array(3300);
function f43() {
    new Int8Array(1073741823);
    class C47 {
        #valueOf(a49, a50, a51, a52) {
        }
    }
    const o56 = {
        valueOf(a54, a55) {
        },
    };
}
new Uint16Array(127);
class C59 {
}
const v60 = new C59();
function F61(a63, a64, a65, a66) {
    if (!new.target) { throw 'must be called with new'; }
    const v67 = this.constructor;
    let v68;
    try { v68 = new v67(); } catch (e) {}
    this.b = 4.0;
    try {
        v68.c = v60;
    } catch(e69) {
    }
}
new F61();
for (let i73 = 0, i74 = 10;
    (() => {
        for (let [i80, i81] = (() => {
                /Aabc|defmxyz{1,}?qMa{0,1}?/gvdis.exec("function");
                return [0, 10];
            })();
            i80 < i80;
            ) {
        }
        return i73 < i74;
    })();
    i73++) {
}
new F61();
