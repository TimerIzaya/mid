const v1 = new WeakSet();
class C2 extends WeakSet {
    static {
        new WeakSet(this);
    }
    constructor(a7, a8) {
        this % a7;
        new BigInt64Array(69);
        new Uint16Array(255);
        new Uint32Array(4084);
        super(v1);
        const v19 = a7 > this;
        if (v19) {
        } else {
            this.has(this, a7, WeakSet, v19);
        }
    }
}
new C2(v1, C2);
const v25 = new C2(C2, v1);
new C2(C2, WeakSet);
const v27 = [-3.0,-873987.4800721781,8.93374006269779,-1000.0,-5.0,322.05315770746256,Infinity,-5.957769191775776e+306];
const v28 = [-5.0,-1.7976931348623157e+308,0.0,-2.220446049250313e-16,0.25654783903767353,-3.0,-2.2250738585072014e-308];
[-343.98375674372164,NaN,-6.25244490478657,-6.241344910628529e+307,0.05536724194371656,-2.220446049250313e-16,4.0];
const v30 = [-9007199254740991,-2147483648,-6];
[-128,6,3001,-2147483647,65537];
const v32 = [65537];
try {
    v25.valueOf = v25;
} catch(e33) {
}
typeof v30 === "function";
const v40 = new Date(-2, [23795,8,259058917,-256,1,-36806,4096,-9,-1,-18943]);
function f41(a42, a43, a44) {
    function f46(a47) {
        v32[a43] = a47;
    }
    this.onmessage = f46;
    try {
        v27.__proto__ = v32;
    } catch(e48) {
    }
}
const v51 = [Worker,WeakSet,v28];
const o52 = {
    "arguments": v51,
    "type": "function",
};
new Worker(f41, o52);
v40.getHours();
