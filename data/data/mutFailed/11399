class C3 {
    #b;
    e;
    static e;
    constructor(a5) {
        try {
            ("0cIQH").charAt(-1541419950);
        } catch(e8) {
        }
    }
    static [C3] = "setInt8";
}
new C3("10000");
const v10 = new C3("10000");
new C3("10000", v10);
function f15(a16, a17, a18) {
}
const v19 = f15(-257.81638943068197, -1.0, "setInt8");
const t17 = "undefined";
t17["0cIQH"] <<= 4.0;
const v29 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
[601759695];
const v31 = [1073741824,1073741823,1376142744,1073741825];
function f33(a34, a35, a36, a37) {
    class C39 {
        constructor(a41, a42, a43, a44) {
            for (const v45 in v19) {
            }
            a43.message = "8";
        }
    }
    function f47() {
        const o50 = {
        };
        return 8n;
    }
    f47();
    try { v31[a36](); } catch (e) {}
}
const v53 = [-2.220446049250313e-16,-1.2960362069804638,1000000.0];
[-1.4967617591971738,2.0,-2.2250738585072014e-308,0.30325345191391684,-1000000000.0,-471.48827446067276,0.4054223816062078,-3.1156994274492186e+307,1000.0];
Symbol.species;
+268435440;
const v61 = ["object"];
const v62 = [v61,v61,v61,v61,v61];
const v66 = new BigUint64Array(268435440);
const v67 = v66 - 581587.2441596473;
try { v61.flatMap(581587.2441596473); } catch (e) {}
const v71 = v62[Symbol.iterator];
Uint8Array.c = BigUint64Array;
f15.c <<= v67;
var h = 1750;
const v72 = Uint8Array.length;
new Uint8Array(v71);
for (let v75 = 0; v75 < 32; v75++) {
    const v78 = ("object" + v75).trim;
    try { v78(); } catch (e) {}
}
const t58 = [1000000.0,69.5407062634481,-1e-15,NaN];
t58[Symbol.asyncIterator] = v53;
new Uint8ClampedArray();
function F87(a89, a90) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        ["function",[9007199254740992,-13,1,206834672,5792,16,856414023,8,2147483648]];
        new a90();
    } catch(e95) {
    }
}
[-0.0,-1000.0,-1000000000.0,609397.4823424052,1000000000000.0,-609042.2531829935,1.7976931348623157e+308,-6.6169861811628e+307];
class C98 {
}
const v99 = new C98(v29, v72, Uint8Array);
const v100 = v99.__defineSetter__;
try { new v100(C98, 1783); } catch (e) {}
