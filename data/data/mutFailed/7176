const v2 = new Float64Array(5);
try { Float64Array.bind(5); } catch (e) {}
new Float64Array(6);
Int32Array.BYTES_PER_ELEMENT;
const v10 = new Int32Array(64);
class C11 {
    constructor(a13, a14, a15, a16) {
        a15.length = a15;
        a16 + a16;
        function f18(a19) {
            return v10;
        }
        class C20 extends f18 {
            a = 6;
            static 661371816 = a14;
            h;
        }
        C20[661371816] = C20;
    }
    static 7 = 64;
    h;
}
new C11(5, 5, C11, 5);
new C11(64, 6, Float64Array, 6);
const v23 = new C11(64, 5, v2, 6);
v23.h;
22294 + 22294;
const v29 = Float32Array.bind();
v29.name = v29;
for (let v30 = 0; v30 < 5; v30++) {
    const o32 = {
    };
    gc(o32);
}
