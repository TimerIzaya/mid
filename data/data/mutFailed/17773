class C3 {
    #p(a5) {
        new Float32Array(11);
        new Float64Array(129);
        new Float32Array(8);
        super[544562.9139466137] = this;
        Math.trunc(30771);
        const v19 = 30771 >>> 30771;
        +"0";
        const v21 = Math.random();
        Math.atan(30771);
        Math.max(v19);
        return v21;
    }
}
C3.b = C3;
const v24 = new C3();
const v25 = v24?.constructor;
try { new v25(); } catch (e) {}
const o27 = {
};
o27.d = o27;
function f28(a29, a30) {
    const o36 = {
        valueOf(a32, a33) {
            ([]).group(f28);
            return a30;
        },
    };
    return o36;
}
f28.d = f28;
const v37 = new C3();
const v38 = new C3();
let v39 = v38?.constructor;
try { new v39(); } catch (e) {}
([4.884162615487856,0.0004122856147577014,2.2250738585072014e-308,4.0,1000000000000.0,2.220446049250313e-16,-3.0,0.7017449894309344,0.8431310630695955,2.605976161915951])[2];
[1000000000000.0,3.6887938236106054e+307,1000000000000.0,676280.0425518507,-1e-15,-925159.3587531555,-1000000000.0];
const v44 = [8.161280368533592e+307,5.535987678184063e+307,-1000000.0,-555673.0415309252,-2.0,-1000000000.0];
Infinity / Infinity;
-Infinity;
class C50 extends Float64Array {
}
new C50();
Math.LN10 = Math;
0.04879611221991542 - 0.04879611221991542;
Math.log1p(0.04879611221991542);
const v56 = [748666.7832804511,3.0];
class C58 extends Float64Array {
    [v56];
}
v39 = "0";
-6.91441185199906e+306 in v44;
const o62 = {
    "maxByteLength": 74,
};
const v64 = new SharedArrayBuffer(74, o62);
new Int32Array(v64);
C58.name;
new C58();
const v72 = v37 >> 1000000000000.0;
Math.sign(v37);
1000000000000.0 | v72;
Math.sin(v37);
