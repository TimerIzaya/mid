function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 255;
    } catch(e3) {
    }
    try {
        this.d = 255;
    } catch(e4) {
    }
    try {
        this.b = 255;
    } catch(e5) {
    }
}
const v6 = new F0();
new v6();
const v8 = new F0();
[536870912];
const v10 = [16,-259371579];
try { v10.toString(); } catch (e) {}
const v12 = [14,-1231960483,-63183,-65536];
try { v12.sort(v8); } catch (e) {}
const v14 = /Hi9+/udsy;
v14.dotAll = v14;
/[^123]/viy;
const v16 = /((\xed\xa0\x80))\x02/gvs;
[350.0624141600715,-502054.44962913793,7.282416196717898e+307,0.34654278557944784,0.1527270618384684,-9.720537139962875,-580.0550696585497,-524.2337914502066,-5.0];
([1.208619914649573e+307,-328836.6326839534,1000000000000.0,1.982771332176016,1000.0])[1];
[-1e-15,0.40556145018808043];
function f21() {
    const o27 = {
        0: 549538.9552070533,
        [-6.170254254244802e+307](a25, a26) {
        },
    };
    return o27;
}
const v28 = v16();
v28[0] = v28;
const v29 = f21();
v29[0];
31995 >> 31995;
function F34(a36, a37, a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    a37[0] = a37;
    a38 & a38;
    this[0];
    a36[0];
    const v43 = this?.constructor;
    try { v43.call(v29); } catch (e) {}
    try { new v43(a36, a38, a37, a36); } catch (e) {}
    a36[0] = a36;
    a39[0] = a39;
    this.f = a36;
    this.f = v29;
}
new F34(v29, v28, -61894, v28);
new F34(v29, v28, 31995, 31995);
