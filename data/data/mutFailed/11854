function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = -60396;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
let v6 = new F0();
const v8 = new Set();
const v10 = 127 >>> 127;
const v12 = new Int8Array(127);
v12[99] = v12;
const v15 = v8[Symbol.species];
[] = v8;
const v16 = delete v6[v5];
v16 || v16;
let v18 = 194;
v18--;
const v21 = new Int16Array(v18);
5 >= 5;
v6 /= v5;
v12.byteLength /= 5;
v8[127] = Int8Array;
const v28 = new Uint16Array(5);
try { v28.toSorted(v21); } catch (e) {}
try { new Array("toString"); } catch (e) {}
const v34 = ("toString")?.toString;
let v35;
try { v35 = new v34(); } catch (e) {}
const v36 = v35 >> Array;
let v37 = "preventExtensions" * v36;
v37++;
try { ("minor").split(v15, -1.7976931348623157e+308); } catch (e) {}
const o42 = {
    "h": "toString",
    "type": "minor",
};
gc(Array);
let v45 = Array.prototype;
try { v45.fill(v5); } catch (e) {}
v45 = "toString";
new Uint8Array(256);
Float64Array.e = Float64Array;
new Float64Array(1024);
const v55 = new v10(256);
v55[200];
const v57 = new Array(1915);
try { ("893742995").fixed(); } catch (e) {}
const t50 = "toString";
const v61 = !(delete t50?.length);
v61 || v61;
try { o42.fixed(); } catch (e) {}
let v64 = -44949;
const v65 = v64--;
const v66 = v65 instanceof Uint16Array;
v66 || v66;
v57[9] = "893742995";
const v68 = o42 <= v65;
v21.at(v68, Int8Array, v36, v68, 5, v68);
const v70 = v57;
const v72 = ~-1684549676;
const v73 = [2.2250738585072014e-308,0.5522511629085187,-7.435509479805105e+307];
const v74 = v73?.toLocaleString;
try { new v74(); } catch (e) {}
v73.d = v72;
class C76 {
    #g = C76;
    constructor(a78, a79, a80, a81) {
        ~-465.2270622490096;
        Math.tan(v4);
        Math.log10(v4);
        this && v4;
    }
    static #c;
}
C76.name = C76;
