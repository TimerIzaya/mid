const v0 = [-1070695832,2,-37318,-11,9,7];
[39812,3,6,8,10,-1927925889,4];
[1,1719100730];
new Uint8Array(1024, v0);
new Int16Array(1748);
new ReferenceError(3317);
[0.3917692554960539,-674906.0645804916];
[7.924379118654414,8.971532815660825e+306];
[155533.8602852358,2.0];
1000000000.0 & 1000000000.0;
-1024;
4.0 * 4.0;
const v28 = [Infinity,1.0,-1.2272545370579378e+308,-1000000.0,5.0,1.7976931348623157e+308,5.0];
try { v28.pop(); } catch (e) {}
const v30 = [-1e-15,9.330767979388325e+307,-4.60104484756231e+307,-660449.2774246833,1000000.0,1000.0,-5.0];
v30[5] = v30;
const v31 = [-7.672768111123561e+307,-1000000000000.0];
function F32() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v36 = AggregateError(19793);
        v36[19530] = this;
        for (const v37 of v36) {
        }
        const v38 = [v36,v36,v36,v36,v36];
        [[v38,v38,v38]];
    } catch(e42) {
        [e42,this];
    }
    for (let i46 = 0, i47 = 10; i46 < i47; i46++, i47--) {
        v31[10];
    }
}
const v56 = new F32();
const v57 = v56?.__lookupSetter__;
try { new v57(15); } catch (e) {}
new v30();
