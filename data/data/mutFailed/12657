const v1 = new WeakSet();
--0.0;
class C6 {
}
const v7 = new C6();
const v8 = v7?.constructor;
try { new v8(); } catch (e) {}
const v10 = [v7,"add"];
let v11 = 10;
v11 | v11;
const v13 = v11--;
const v14 = v13 === v13;
v14 || v14;
let v16 = v11 << v11;
v16 ^ v16;
--v16;
function f20(a21) {
    const o25 = {
        __proto__: 2,
        ...a21,
        p(a23, a24) {
            return a24;
        },
    };
    return o25;
}
const v26 = f20?.constructor;
try { new v26(WeakSet); } catch (e) {}
434367.0029061097 == 434367.0029061097;
try { Date.parse(Date); } catch (e) {}
const v33 = [-1000.0,1000000.0,2.220446049250313e-16,614071.3005355855,-1.0,2.220446049250313e-16];
v33[301] = -536870912;
const v35 = new Proxy(v33, v1);
v35.e = v35;
let v36 = v35[301];
const v37 = v36--;
const v38 = new Date();
const v39 = [v38,v38,v38];
256 << 256;
const v43 = new Uint32Array(256);
const v44 = v43?.constructor;
try { new v44(v10, 434367.0029061097, v37); } catch (e) {}
function f46() {
    v43[3] = "-26733";
    return "-26733";
}
let v48;
try { v48 = new f46(); } catch (e) {}
const v49 = [v39,9.834449191247423e+307,-0.0];
try { v49.sort(-536870912); } catch (e) {}
const v51 = [v1,434367.0029061097];
let v52;
try { v52 = v51.reverse(); } catch (e) {}
try { v52.sort(-0.0); } catch (e) {}
let v54 = -207089939;
v54 >> v54;
const v56 = v54--;
v56 === v56;
1657 % 1657;
[Float32Array];
const v64 = [-147676202];
let v65;
try { v65 = v64.lastIndexOf(v64); } catch (e) {}
v65--;
-1;
let v69 = 4294967295;
const v71 = Date?.UTC;
try { new v71(v39, v39, v7, v48, v48, v39, -0.0); } catch (e) {}
try { new v71(9.834449191247423e+307, Date, v38, v38, v11, Date, v11); } catch (e) {}
function F74(a76, a77, a78) {
    if (!new.target) { throw 'must be called with new'; }
    const v79 = this.constructor;
    try { new v79(); } catch (e) {}
    a76 == a76;
    try {
        this.a = Date;
    } catch(e82) {
        v69 = F74 / v69;
    }
}
v64.length = 1;
const v85 = new Uint16Array(1657);
v85.reverse();
v10.prototype;
127 + 127;
127 >>> 127;
new Int16Array(127, 127, 127);
function F93() {
    if (!new.target) { throw 'must be called with new'; }
    9007199254740991 / 9007199254740991;
    this.h = 9007199254740991;
}
const v97 = new F93();
v97.h = v97;
const o100 = {
    set h(a99) {
    },
    __proto__: v97,
};
o100.h;
