const v0 = [];
new Int8Array(0);
const v7 = gc in [2.0,556.2622738010164,-1e-15,249331.33231149008,0.21855077137819667,1.7976931348623157e+308,1.014925745350093e+308];
const v8 = [];
const v9 = [v8,v8];
function F10(a12) {
    if (!new.target) { throw 'must be called with new'; }
}
class C13 extends F10 {
    valueOf(a15, a16, a17, a18) {
        super[this] = F10;
        const v21 = new SharedArrayBuffer(945);
        new Int16Array(v21);
    }
}
const v24 = new C13();
const o31 = {
    set g(a26) {
    },
    [v9](a28, a29, a30) {
    },
};
for (const v32 in o31) {
    try { v24.valueOf(v8, v7, v32); } catch (e) {}
}
new Int8Array(4096);
new Uint16Array(0);
/\xe2\x81\xa3+/gvdiy;
const v41 = /Nr(?=.)a./udis;
const v42 = /a(?!b)Y[IY]/uisy;
class C43 {
    set f(a45) {
        const o53 = {
            "d": v0,
            ...v9,
            toString(a47, a48, a49) {
                function f50() {
                    return a49;
                }
                Object.defineProperty(a47, Symbol.toPrimitive, { writable: true, get: f50 });
                return Symbol;
            },
            __proto__: this,
            ...this,
            "g": 7,
        };
        for (let v54 = 0; v54 < 32; v54++) {
            v41["p" + v54] = v54;
        }
    }
    3;
    static 5;
    static #b = 4096;
}
new Uint16Array();
new C43();
WeakRef.cbrt(7);
let v65 = 2.9657321242914703e+307;
function f66(a67) {
    const o70 = {
        "g": v65,
        set a(a69) {
            a69.h = this;
        },
        "h": a67,
        "d": v65,
        "b": -1.1013479045636231e+308,
        2: a67,
    };
    return o70;
}
const v71 = f66(7, v42, -1.1013479045636231e+308);
f66();
class C76 {
    #n(a78, a79, a80, a81) {
        super[this] = this;
        super[f66].o();
    }
    constructor(a86, a87) {
        const o91 = {
            "type": "minor",
        };
        gc(o91);
    }
}
new C76(v71, 655864.1717298129);
new C76();
new C76();
v65 /= -2.2250738585072014e-308;
for (let i97 = 0; i97 < 7; i97++) {
    new C76();
}
Math.tanh();
const v106 = new Int8Array();
const o111 = {
    ..."44184",
    "h": "44184",
    next() {
        return v42;
    },
    5: 7,
    [-15]: -15,
    2480: 9,
    ...v106,
};
