function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 127;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
class C7 extends F0 {
    #h;
    constructor(a9, a10) {
        const o14 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o14);
        super();
        for (const v16 of this) {
            Object.defineProperty(this, "a", { configurable: true, set: gc });
            try {
                gc();
            } catch(e18) {
            }
            const o21 = {
                "maxByteLength": 10000,
            };
            const v23 = new SharedArrayBuffer(248, o21);
            new Uint32Array(v23);
        }
    }
    9 = F0;
    static 190 = v6;
    #e;
    static [v4] = v5;
    [v4] = v5;
}
const v26 = new C7(C7, v5);
new C7(v4, v26);
new C7(v26, v6);
[-49748];
[4294967297,1235860690,-34772,4,536870888,65536,7];
[268435441,255];
class C36 {
    #d = 4096;
    static {
        try {
            this.#d;
        } catch(e39) {
        }
    }
}
