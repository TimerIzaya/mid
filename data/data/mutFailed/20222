const v3 = [-3.0];
const v4 = [1.7976931348623157e+308,1e-15,310.7496648784893,9.816818321377461,-794236.7091277596,-9.180246930453904,-2.220446049250313e-16,1.7976931348623157e+308,-740559.3456387891];
const v5 = [703.8129091780049,-1000000000.0,NaN,-7.916395962255671,990.2481831899127];
function f6(a7) {
    function f10(a11) {
        const o12 = {
            "c": a11,
            16: -4.0,
            1073741824: a11,
        };
        return o12;
    }
    const v13 = f10?.constructor;
    try { new v13(v4); } catch (e) {}
    f10();
    const v16 = f10(-5.0);
    const o17 = {
        [f10]: v5,
        "c": v16,
        ...v5,
    };
    o17[2] = o17;
    return v5;
}
f6.length;
Object.defineProperty(v5, "valueOf", { writable: true, value: f6 });
class C19 {
    #f;
    static {
        this.name = this;
        const v23 = this & v5;
        const v24 = v5 & v5;
        v24 >> v24;
        const v26 = !v23;
        v26 && v26;
        const v28 = Math.sinh(v24);
        v28 >> v28;
        let v30 = Math.log1p(v5);
        v30++;
    }
    static [-4294967297n];
    h = -4294967297n;
    177;
    static 2147483648 = v4;
    b = -4294967297n;
}
new C19();
const v33 = new C19();
new C19();
function F35(a37, a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    a38 + a38;
    -a39;
    this.f = v3;
    try {
        this.f = v33;
    } catch(e42) {
    }
    try {
        this.b = v4;
    } catch(e43) {
    }
}
new F35(v4, 1535177678n, 268435440n);
new F35(v4, -4294967297n, 1535177678n);
new F35(v4, -4294967297n, 1535177678n);
new Map();
SyntaxError.prototype = SyntaxError;
Int8Array.e = Int8Array;
const v51 = new Int8Array(Int8Array, Int8Array);
function f52(a53, a54) {
    return a54;
}
Object.defineProperty(v51, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f52 });
const v57 = [];
class C58 {
}
const v59 = new C58();
v59.constructor = SyntaxError;
const v60 = v59.constructor;
v60.length = v60;
const v61 = v60(v57, Int8Array);
const v62 = v61?.constructor;
try { new v62(v61); } catch (e) {}
