[0.2790551793277414,3.0,2.0,4.403869908283134,2.220446049250313e-16,-3.1782331905219703,-9.647514683216833,0.5423499228028351];
[-2.2250738585072014e-308,68688.90243567782,0.0];
const v2 = [0.32005965231128797,64.01133340334923,-0.0];
const v5 = new Float64Array(1000);
class C7 {
    #valueOf(a9, a10, a11) {
    }
}
class C12 {
    constructor(a14, a15) {
        function f16(a17) {
            for (let i21 = 0, i22 = 10;
                (() => {
                    const v23 = i21 < i22;
                    const v26 = ([127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649]).toSpliced(-1148418937, -1148418937);
                    v26[3] = v26;
                    let v27 = 3375;
                    const v28 = v27++;
                    v28 / v28;
                    const v30 = new BigUint64Array(v27);
                    let [v31,,v32,...v33] = v30;
                    return v23;
                })();
                ) {
            }
            return a14;
        }
        const o40 = {
            "type": "function",
        };
        o40.arguments = v5;
        new Worker(f16, o40);
    }
}
new C12(C12, C12);
new Uint8ClampedArray(0, v2, v5);
new Float32Array(1, 1);
const v53 = new Date();
v53.toLocaleString();
Date();
for (let i58 = 256n, i59 = 10; i58 < i59;) {
}
const v65 = new WeakSet();
function f66(a67) {
    const o75 = {
        "g": v65,
        "h": a67,
        __proto__: a67,
        "a": v65,
        "b": a67,
        set c(a69) {
        },
        set g(a71) {
        },
        "f": WeakSet,
        valueOf(a73, a74) {
            return a73;
        },
    };
    return o75;
}
f66(f66(WeakSet));
try { ("minor").trim(); } catch (e) {}
const o81 = {
    "execution": "async",
    "type": "minor",
};
f66(1285);
