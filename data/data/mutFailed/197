function f3() {
    return 1.0876556980522313e+308;
}
try { f3(); } catch (e) {}
-4 - -4;
function f9(a10, a11, a12) {
    a10++;
    a12 & a12;
    const o24 = {
        [0](a16, a17, a18, a19) {
            class C20 extends 9.272532085524489 {
                static [a18];
            }
            new C20();
            new C20();
            new C20();
            return 907598.0528345208;
        },
        [f3]: 0,
        "g": a12,
        "b": 9.272532085524489,
        [a10]: a10,
    };
    o24.g;
    return o24;
}
class C26 {
}
for (let i29 = 0, i30 = 10; i29 < i30; i29++, i30--) {
    new C26();
}
f9(9.272532085524489, -4, f9(907598.0528345208, 0, 0));
const v42 = f9(907598.0528345208, -4, f3);
v42.b = v42;
new Float64Array(3931);
101 >> 101;
const v49 = new Int8Array(101);
v49.byteLength;
2300 << 2300;
const t37 = "symbol";
delete t37[1];
const v57 = [Reflect];
Math.log2(0);
const v61 = new Int16Array(2300);
v61[594];
class C66 {
    1073741824 = v57;
    static p() {
        let v68;
        try { v68 = this(this, this, this, v57, v57); } catch (e) {}
        let v69;
        try { v69 = v68(this); } catch (e) {}
        v69 = this;
        const v70 = [-719491709,-4096,38613,-1,1024,65535,129];
        [65535,268435456,65537];
        [-1319674364,836468341,127,-46522,-4294967296,742091120,3621,16,-2,268435441];
        return v70;
    }
    static get h() {
        const o77 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o77);
        return 268435441;
    }
}
const v79 = new C66();
const v80 = v79?.constructor;
try { new v80(); } catch (e) {}
const v82 = new C66();
const v83 = new C66();
class C86 extends C66 {
    3;
    [v82] = v79;
    ["256"] = v79;
    static get b() {
    }
    2 = "ka";
    static #toString(a89, a90, a91) {
        try { a89("256", v83, a89, a91); } catch (e) {}
        const v93 = [4294967297,-1648241970,9,3,-2,0,-4294967296,10];
        const v94 = /QK/gvdimy;
        with (v93) {
            v94.__proto__ = length;
        }
        Math.atan(16);
        a90 ^ 16;
        function f100() {
            return f100;
        }
        const v101 = [1.4598948242971485e+307,5.0,202.50817195072136];
        Object.defineProperty(v101, v101, { enumerable: true, set: f100 });
        return Math.abs(16);
    }
}
C86.prototype;
new C86();
const v105 = new C86();
const v106 = new C86();
v106 & v49;
if (v105 <= v83) {
    function F111() {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.d = -4;
        } catch(e114) {
        }
        try {
            this.b = -4;
        } catch(e115) {
        }
    }
    const v116 = new F111();
    const v120 = new Int8Array(582);
    const v123 = new BigInt64Array(2001);
    [v116,65535,[F111,Uint8Array,582],v123,v120];
    new Uint8ClampedArray(75);
    let v128 = 6;
    v128--;
    new Int16Array(v128);
    try { new BigInt64Array(Int16Array, 907598.0528345208, v106); } catch (e) {}
    new BigInt64Array(1821);
} else {
    new C86();
}
1 - 1;
1978687589 + 1978687589;
const v8 = [1,1978687589,1978687589,1978687589];
const v9 = [v8];
[-1729796153,1978687589];
let v11 = 958610025;
v11--;
let v16 = 3n;
v16--;
628n >= 628n;
function F20(a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    function f24(a25) {
        try {
            v8.length = 536870888;
        } catch(e26) {
        }
        return a25;
    }
    a23[Symbol.toPrimitive] = f24;
    a22--;
    a22 ^ a22;
    try {
        this.h = 628n;
    } catch(e31) {
    }
    try {
        this.f = v16;
    } catch(e32) {
    }
    try {
        this.d = a23;
    } catch(e33) {
    }
}
try { new F20(v16, F20); } catch (e) {}
const v35 = new F20(v16);
const v36 = new F20(v16, v35);
const v37 = new F20(35294n, v35);
v37.h;
let v39 = 6;
-v39;
let v41 = v39--;
v41--;
new Int16Array(v39);
new Uint8ClampedArray(16);
const v50 = new Int32Array(2614);
function f51(a52) {
    class C54 {
        toString(a56, a57, a58) {
            C54();
            super.b = -2;
        }
    }
    return a52;
}
Object.defineProperty(v50, "valueOf", { configurable: true, enumerable: true, value: f51 });
v50[2135] = v50;
const v60 = [1000000000.0,-1000.0,-690.3798026183179,8.153290522672417e+306,2.0,-1000000.0,-1000000000.0];
v60[7] = 35294n;
try { v60.push(Int16Array); } catch (e) {}
[172808.41555842035,6961.648758031544,-1000000000.0,-3.0,-3.473146185040173e+307,-421.3362201856155,-879.0794661120945,-5.0,-2.4710773994464814e+307,1000000000000.0];
[2.0,67588.71976092551,987444.2991633068,0.4770197645753065,1000000.0,-212679.8858953634,-1e-15,-3.0];
let v65 = 10 >> 10;
const v67 = new ReferenceError(10);
v67.g = v50;
v67.g = v67;
Uint32Array.d = v37;
let v70;
try { v70 = Uint32Array.from(1024); } catch (e) {}
try { v70.sort(v9); } catch (e) {}
const v72 = new Uint32Array(1024);
v72[916] = v72;
let v73 = 10;
Function.length = Function;
Uint32Array.d = Uint32Array;
const v75 = new Uint32Array(v73);
try { v75.set(v65); } catch (e) {}
[-1000.0,5.0,720584.9706165395,-2.220446049250313e-16];
[1.0,-7.897761779739891];
[1000000.0,5.0,1000.0,0.5082630760435969];
try {
    const v80 = new Uint32Array(v75);
    const v81 = v80?.findLastIndex;
    try { v81(v36); } catch (e) {}
    try { new v81(); } catch (e) {}
} catch(e84) {
}
const v85 = new Uint32Array(10);
function f86(a87) {
    ({"d":v73,} = v36);
    try {
        v65 = -9007199254740991;
    } catch(e88) {
    }
    return a87;
}
v85[Symbol.toPrimitive] = f86;
class C94 {
    static #valueOf(a96) {
        const v99 = [2.220446049250313e-16,1e-15,-1000000000000.0];
        class C101 {
            constructor(a103, a104) {
                super[Int8Array] = v99;
            }
            #m(a106) {
            }
        }
    }
}
v85[6] = v85;
try { ("minor").indexOf(v35); } catch (e) {}
const o111 = {
    "execution": "hzB",
    "type": "minor",
};
