function f0() {
    const o25 = {
        p(a5) {
            [15,f0,-2.0,a5,a5];
            return [[15,a5,a5,this]];
        },
        __proto__: -1.0,
        [15](a10) {
            let v11;
            try { v11 = new a10(a10, -1.0, 15, -1.0); } catch (e) {}
            let v12;
            try { v12 = new v11(); } catch (e) {}
            const v13 = this[15];
            %VerifyType(v12);
            [-1.0,-1.0,f0,-1.0];
            new Float32Array(1438);
            new Uint32Array(3146);
            new Uint8ClampedArray(4096);
            a10?.[v13];
            return -1.0;
        },
    };
    return o25;
}
const v26 = f0();
const v27 = f0();
const v28 = v26();
const v30 = new Set();
function F34(a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -46522;
    } catch(e38) {
    }
    try {
        this.e = v27;
    } catch(e39) {
    }
    try {
        a36.f = a37;
    } catch(e40) {
    }
}
const v41 = new F34(9, v26);
new F34(-21071, v26);
new F34(-21071, v28);
class C44 extends Set {
    n(a46, a47, a48) {
        for (let v53 = 0; v53 < 32; v53++) {
            this["p" + v53] = v53;
        }
        delete this[7];
        new Set(a47);
        try {
            v41.e = a48;
        } catch(e58) {
        }
        v27 !== -21071;
        return v27;
    }
    set f(a61) {
        class C62 {
            [Set] = F34;
            2171930379;
        }
        new C62();
        new C62();
        new C62();
    }
}
new v30();
new C44();
new C44();
const v70 = new BigInt64Array();
const o71 = {
    __proto__: v70,
};
try { o71.fill(o71, BigInt64Array); } catch (e) {}
