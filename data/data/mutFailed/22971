let v0 = -468878212;
let v4 = Float32Array;
let v5;
try { v5 = new v4(v0, 129, 2147483648); } catch (e) {}
const v6 = new v4(129);
let v7 = 1649;
({"e":v4,"f":v0,...v7} = v5);
try {
    v6.a = -9223372036854775807;
} catch(e8) {
}
v7 / v7;
const v11 = new Int16Array(v7);
const v14 = new Int32Array(127);
9007199254740990 ^ 9007199254740990;
const v17 = ~9007199254740990;
const v18 = v17.constructor;
const v19 = v18();
v5 = v19;
v0[v19] = v19;
/Za+b|c*/vds;
/lAu/gum;
/h((((.).).).)(?:a{5,1000000}){3,1000000}[^(?!\1(a\1)\1)\1*]/gudy;
v19 !== v19;
v14[v18];
function f25() {
    return -9223372036854775807;
}
const v29 = v19.toPrecision(v17);
v29.length = v29;
const v31 = Symbol.iterator;
const o41 = {
    [v31]() {
        let v32 = this;
        let v33 = 10;
        ({"a":v33,"g":v32,} = v29);
        v33 /= v11;
        try {
            Symbol.toString = v4;
        } catch(e34) {
        }
        const o40 = {
            next() {
                v33--;
                const v38 = v33 == 0;
                const o39 = {
                    "done": v38,
                    "value": v33,
                };
                return o39;
            },
        };
        return o40;
    },
};
