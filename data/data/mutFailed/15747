function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.f = this;
    try {
        this.h = 39272;
    } catch(e3) {
    }
    try {
        this.f = 39272;
    } catch(e4) {
    }
}
function f5(a6, a7) {
    let v8;
    try { v8 = a6(a7, a7, F0); } catch (e) {}
    v8?.[v8];
    return F0;
}
F0[Symbol.toPrimitive] = f5;
const v12 = new F0();
const v13 = new F0();
const v14 = new F0();
class C18 extends F0 {
    [F0] = v13;
    static toString(a20, a21) {
        ("boolean").toLowerCase(..."split", v12, a21, this, v12);
        return a21;
    }
    o(a24, a25, a26) {
        try {
            a26.toString = this;
        } catch(e27) {
        }
        return v14;
    }
}
C18.name;
new C18();
const v30 = new C18();
v30.h = v30;
new C18();
9007199254740990 / 9007199254740990;
const v38 = Math.sinh(0);
v38 + v38;
