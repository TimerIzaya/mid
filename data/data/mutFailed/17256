const v2 = new Int8Array(3138);
const v5 = new Float64Array(3299);
const v8 = new Uint8Array(4048);
new WeakMap();
class C11 {
    static m(a13, a14) {
        function f15(a16, a17) {
            return AggregateError;
        }
        a13 ^ v5;
        try {
            new f15(127n, a14);
        } catch(e22) {
        }
        f15(a13, 3299);
        this.__proto__;
        super[this] = Float64Array;
        return v2;
    }
    h;
    7;
    static e;
    d = v8;
    static [3299];
}
new C11();
const v26 = new C11();
new C11();
for (let [v29] of v8) {
    v29[v26] ||= 3138;
}
try { C11.m(); } catch (e) {}
v26[3299] = 3138;
function f40() {
    return 2273;
}
for (let i45 = 0, i46 = 10;
    i45 < i45;
    (() => {
        for (let v50 = 0; v50 < 5; v50++) {
            function f51(a52) {
                return f51;
            }
        }
    })()) {
}
