class C3 {
    static ["function"] = "g";
    static h;
    c;
    #e = "L";
    #n(a5, a6) {
        const v8 = [];
        v8[44] = v8;
        let v11 = 1024;
        v11--;
        Math.atanh(v11);
        Math.tan(v11);
        Reflect.construct(this, v8, "function");
        return v8;
    }
}
const v17 = new C3();
const v18 = new C3();
const v19 = new C3();
v17[v19] <<= 1;
v18[227];
const o25 = {
    "execution": "sync",
    "type": "major",
};
gc(o25);
new BigInt64Array(1);
const v31 = new Uint16Array(600);
try { v31.reduce(v17); } catch (e) {}
3423 >> 3423;
try { BigUint64Array.from(600); } catch (e) {}
new BigUint64Array(3423);
class C38 {
}
new C38();
[5.0,1.0];
[0.9518900649308116,1e-15,5.0];
[-4096,-1073741824,65537,9007199254740990,-4096];
const v43 = [1557591051,8137,536870888,-9223372036854775808];
255 * 255;
v43 * v43;
class C48 {
}
let v49;
try { v49 = C48.bind(-16); } catch (e) {}
let v50;
try { v50 = C3.m(); } catch (e) {}
268435439 >> 268435439;
536870889 + 536870889;
class C55 {
}
const v56 = new C55();
const v57 = v56?.constructor;
try { new v57(); } catch (e) {}
function f59() {
    const v61 = ("object")?.toLocaleUpperCase;
    try { new v61(); } catch (e) {}
    return "object";
}
const v64 = f59();
const v65 = v49();
try { ("major").localeCompare(v50); } catch (e) {}
const v67 = f59();
function f68(a69, a70, a71) {
    a70 == a70;
}
const v73 = f68(v67, v67, v64);
f68(v73, f68(v65, v65, v73), v65);
const o76 = {
};
o76.d = o76;
class C78 {
}
const v79 = new C78();
const o85 = {
    [v79](a81, a82, a83) {
        super[268435439];
    },
};
v56[-16];
class C87 {
    constructor(a89, a90) {
    }
}
C87.g = C87;
for (let i = 0; i < 5; i++) {
    const o92 = {
        "type": "symbol",
    };
    gc();
}
[3.340677539286877e+307,1000000.0,-1000000000.0,1000000000000.0,-Infinity,-1e-15,-1000000000000.0,1000000000000.0];
[-5.0,-1.7976931348623157e+308];
[-249252.9325057693,-4.821883841336243e+307,-1000000000000.0,0.0,213.86389141974269,-967173.3641133569,3.758841406747806e+307,-739.0027550598055,-112.17992153099135,0.47988719491283205];
new Float32Array(257);
new Int16Array(3579);
new Int32Array(2341);
