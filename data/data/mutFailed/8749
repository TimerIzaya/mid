class C3 {
    static d = C3;
    #m(a5) {
        const t3 = "J1qJy";
        t3[687.3754602512545] = 687.3754602512545;
        this[-1] = a5;
        %VerifyType(a5);
        const o8 = {
            "maxByteLength": 185,
        };
        const v10 = new ArrayBuffer(185, o8);
        new Uint8Array(v10);
        return Uint8Array;
    }
}
new C3();
new C3();
new C3();
class C16 {
    static #valueOf(a18, a19) {
        [50509.34986595507,-3.662743465468735e+307,-1.8005876565506203,1.0,-0.0,-2.2250738585072014e-308,512.420728033223];
        [Infinity,-2.0,-1.7976931348623157e+308,-5.28472426215473,-276052.5340571054,4.0,0.5382375944381222,3.0];
        [-5.0,0.805725356896183,431470.58691802947];
        return this;
    }
    o(a24, a25) {
        const o26 = {
        };
        new Proxy(a24, o26);
        return a24;
    }
}
const v29 = new C16();
const v30 = new C16();
new v29();
function F35(a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
}
const t38 = "object";
const v39 = new t38();
function f40() {
    return f40;
}
const v41 = /{}(x)(x)(x)\4*a{0}a|b/msy;
const v44 = new BigUint64Array();
function F45(a47, a48, a49) {
    if (!new.target) { throw 'must be called with new'; }
    const v50 = this.constructor;
    try { new v50(BigUint64Array, v44, v44); } catch (e) {}
    a49[1];
    function f54(a55, a56) {
        a56 / a56;
        arguments[1];
        arguments.toString = v39;
    }
    try { f54(f40, v41); } catch (e) {}
    v30(v50, 8077n);
}
const v62 = new F45(BigUint64Array, 4, v44);
const t59 = v62.constructor;
new t59(v39, v39, v41);
