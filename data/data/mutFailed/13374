const t0 = "splice";
t0[2] = "splice";
const t2 = "object";
new t2(1);
const v11 = new Uint8ClampedArray("object");
const v14 = ("splice")?.constructor;
try { new v14(Uint16Array); } catch (e) {}
const v16 = new Int8Array(255);
try { v16.with("PI", v11); } catch (e) {}
const v20 = Math.round();
async function f21(a22, a23, a24) {
    await v20;
    const v26 = [601759695];
    try { v26.map("splice"); } catch (e) {}
    function F28() {
        if (!new.target) { throw 'must be called with new'; }
        try { this.propertyIsEnumerable(255); } catch (e) {}
        for (let v31 = 0; v31 < 1000; v31++) {
            this * v31;
            ("p" + v31).fontcolor();
        }
    }
    try { F28.call(v16); } catch (e) {}
    new v14();
    b = v26;
}
f21();
