const v2 = new Float32Array(1584);
const v5 = new Int16Array(127);
try {
    v5.length = 2;
} catch(e7) {
}
const v10 = new Uint8Array(0);
class C11 extends Float32Array {
    static [v2];
    [v2] = 127;
    [1584] = 0;
    constructor(a13, a14, a15, a16) {
        super(a16, 127);
        const v17 = super[a16];
        new Float32Array(Math);
        v2 === v17;
        const o21 = {
        };
        try {
            o21.e = v17;
        } catch(e22) {
        }
        try {
            const o23 = {
            };
            o23.e = v17;
            o23.d = Math;
        } catch(e24) {
        }
        try {
            const o25 = {
            };
            o25.e = v17;
            o25.d = Math;
            o25.f = Math;
        } catch(e26) {
        }
        try {
            const o27 = {
            };
            o27.e = v17;
            o27.d = Math;
            o27.f = Math;
        } catch(e28) {
        }
        Math.sign(15419);
        Math.cbrt(-4294967297);
        +15419;
    }
    static [-2] = Int16Array;
}
const v34 = new C11(C11, v10, Uint8Array, Int16Array);
v10[1021047473] = Uint8Array;
C11[1073741824] >>= 1584;
C11[1821] = Int16Array;
try {
    new Uint8Array(v2, 2, 536870888);
} catch(e37) {
}
const v38 = new C11(127, C11, v5, Float32Array);
new C11(127, Float32Array, v38, C11);
class C40 {
    #m(a42, a43) {
        try {
            v10.g = v10;
        } catch(e44) {
        }
        return Float32Array;
    }
    static p(a46, a47, a48) {
        %VerifyType(a46);
        [127,C11];
        [v34,a46,0];
        [this,a46,v10];
        return a47;
    }
}
new C40();
new C40();
new C40();
const v55 = [1000000000.0,2.2250738585072014e-308,-3.0,-2.2250738585072014e-308,-2.2250738585072014e-308,-6.525028373249204e+307,-7.851646360254072e+307,0.6785915059434757,-0.0];
class C56 {
}
C56[Symbol.replace] = v55;
