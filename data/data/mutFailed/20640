class C3 {
    [127n];
    constructor(a5, a6) {
        let v7;
        try { v7 = this.assign(127n, 256n, a5, 536870912n, 256n); } catch (e) {}
        v7 -= 256n;
        [];
    }
    static #h = 256n;
    8 = 127n;
    #b = 256n;
    static [127n];
}
const v9 = new C3(256n, C3);
new C3(536870912n, v9);
new C3(127n, 536870912n);
[8.194948956173999,-588.6712356816308,-Infinity,2.220446049250313e-16];
[0.0,-1000000000000.0,-479.474560720907,1000000000000.0,930634.3722076269,-593534.0903956078,-8.6143542727492,Infinity,0.9875595615085005];
[-5.188438441950386e+307,318290.0928613825,1000.0,-2.2250738585072014e-308,-3.0];
const v15 = [];
function f16(a17, a18) {
    function f19(a20, a21) {
        a21?.__lookupGetter__;
        a21?.constructor;
        return f19;
    }
    f19(f19, a17);
    %OptimizeFunctionOnNextCall(f19);
    return f16;
}
const v25 = f16();
f16(v25, v25);
class C30 {
    constructor(a32) {
        function* f33(a34, a35) {
            yield* v15;
            return a34;
        }
    }
}
