/JOF2/g;
const v1 = /(?:a+)*foo(?!bar)baz?/gvms;
const v2 = /gWa\BbkE\ud808\udf45*/gu;
class C3 {
    static a = v1;
    constructor(a5, a6) {
        const v8 = [a5 - this,v1];
        [v8];
        [a6];
        let v13 = -2268;
        Math.min(v1);
        Math.asin(v8);
        -1806476599 << v8;
        ++v13;
    }
    5;
}
const v18 = new C3(v2, v2);
const v19 = new C3(v18, v18);
new C3(v19, v18);
/a?iu/gdy;
const v22 = /Y1(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10(?:ab)?/guy;
const v23 = /(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10U/gvimy;
[-781728904,1073741824,58106,3,536870887];
[12,9223372036854775807];
[-65537,-1258327596];
-Infinity;
const v31 = new v22();
const v34 = new Uint32Array(152);
const v35 = v34.constructor;
v35.a = v35;
const v36 = new v35(v34, Uint32Array, Uint32Array);
v36?.constructor;
try { Set(v35, v36, v34); } catch (e) {}
9 >>> 9;
const v42 = new Int8Array(9);
v42[6];
try { ("n").match(v23); } catch (e) {}
function F48(a50, a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    const v53 = a50?.delete;
    try { new v53(Uint32Array); } catch (e) {}
    a51[2] = a51;
    this.a = a50;
    this.c = 152;
}
const v55 = new F48(v31, "48196", "48196");
const v56 = new F48(v55, v55, "48196");
v56.e;
new F48(152, 152, "n");
try { Float64Array(v36, Set, Float64Array); } catch (e) {}
const v62 = new Float64Array(2385);
BigInt64Array.name;
const v66 = new BigInt64Array(133);
let v67 = 1734;
v67--;
-(~v67);
let v72;
try { v72 = BigInt64Array(BigInt64Array, v62, v62); } catch (e) {}
new BigInt64Array(v67);
Int16Array.e = Int16Array;
Int16Array.BYTES_PER_ELEMENT = Int16Array;
new Int16Array(255);
Array.prototype = Array;
Array.valueOf = Array;
const v78 = [-2,1024];
let v79;
try { v79 = v23.valueOf(); } catch (e) {}
try { v79.reduce(v66); } catch (e) {}
function F81(a83, a84, a85, a86) {
    if (!new.target) { throw 'must be called with new'; }
    const v87 = this?.__defineGetter__;
    try { new v87(v67, v72); } catch (e) {}
    const v89 = this?.__lookupSetter__;
    try { new v89(BigInt64Array); } catch (e) {}
    for (let v91 = 0; v91 < 100; v91++) {
        for (let v92 = 0; v92 < 5; v92++) {
            v92 >> v92;
            function f94() {
                return v92;
            }
        }
        Array / v78.length;
    }
}
const v97 = new F81();
v97.f = v97;
new F81();
