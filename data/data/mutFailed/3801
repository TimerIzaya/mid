class C3 {
    n(a5) {
        a5++;
        const v7 = 0.9404645564899159 | this;
        for (let v8 = 0; v8 < 32; v8++) {
            this["p" + v8] = v8;
        }
        return v7;
    }
    [493.14917385128024];
    [1e-15] = 1e-15;
}
new C3();
new C3();
new C3();
let v14 = -1000000000000.0;
v14--;
1000000.0 ^ 1000000.0;
new Int8Array(257);
const v24 = new Int8Array(89);
new Uint8Array(209);
const v28 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
new Uint8Array(3521);
const t23 = /P[x\dz]*/gudmy;
t23.multiline **= 1000;
const v34 = [601759695];
const v35 = [1073741824,1073741823,1376142744,1073741825];
v35[3] = v35;
function f37(a38, a39, a40, a41) {
    a39.toString = f37;
    a41.toString = f37;
    try { a39.toString(); } catch (e) {}
    arguments[4] = arguments;
    function f44() {
        let v46 = -4294967295;
        v46++;
        const o52 = {
            "e": v46,
            "execution": "Vre",
            "execution": "Vre",
            ..."Vre",
            valueOf(a50, a51) {
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            5: v46,
            6: -268435456,
        };
        o52[5] = o52;
        return o52;
    }
    f44.prototype = f44;
    f44();
    %OptimizeFunctionOnNextCall(f44);
    let v55;
    try { v55 = v35["find"](..."find", a41, ...v34, ...v35, ...522675525n); } catch (e) {}
    v55 <= a40;
    return arguments;
}
f37(v34, v28, 522675525n, v28, 522675525n);
4n >> 4n;
268435440n & 268435440n;
class C66 {
    static e;
    e;
    static 3 = -5.161103313394506;
    toString(a68) {
        let v67 = this;
        v67.e *= 0.8199829542463926;
        v67 += v67;
        for (let v69 = 0; v69 < 10; v69++) {
            a68["p" + v69] = v69;
        }
        return 0.8199829542463926;
    }
}
C66.prototype = C66;
let v72 = new BigInt64Array(3216);
v72[Symbol.toPrimitive] = f37;
const v77 = new Int8Array(3331);
v77[1534];
const v81 = new BigUint64Array(4096);
function f83() {
    const o88 = {
        ["8"](a86, a87) {
        },
    };
    return o88;
}
try { f83.call(Uint8Array); } catch (e) {}
for (let v90 = 0; v90 < 51; v90++) {
    const v92 = f37(v34, v90, false, v90);
    const v93 = [155533.8602852358,2.0];
    function f94(a95) {
        v72--;
        Math.log2(268435439);
        Math.tan(268435439);
        Math.log1p(268435439);
        Math.exp(268435439);
        +89;
        Math.atanh(a95);
    }
    Object.defineProperty(v93, 658291203, { writable: true, configurable: true, enumerable: true, set: f94 });
    for (const v108 of v35) {
        v93[658291203] = null;
        Math.g = Math;
        let v111 = Math.cbrt();
        v111--;
        const v113 = 0.4890055133608564 || 0.4890055133608564;
        v113 + v113;
    }
    v92[4] = v92;
}
f37(v81, 3331, v72, 3216);
%PrepareFunctionForOptimization(f37);
try {
const t0 = 1000000000.0;
t0(2.220446049250313e-16, Uint8ClampedArray, ...1000000000.0, -82.86062314585524);
} catch (e) {}
const v121 = f37(v81, 3331, v72, 3216);
try { v121.isPrototypeOf(v24); } catch (e) {}
f37(v81, 3331, v72, 3216);
%OptimizeFunctionOnNextCall(f37);
f37(v81, 3331, v72, 3216);
function f126() {
    return 36924;
}
function f127(a128, a129, a130, a131) {
    a130.length;
    const o149 = {
        __proto__: a130,
        ...a130,
        [a130](a134, a135, a136) {
            function f138() {
                return f138;
            }
            new Float32Array(3);
            ("128").fontsize();
            for (let [v145,...v146] of "atan2") {
            }
            return "function";
        },
    };
    o149.caller = o149;
    return o149;
}
const v150 = f127(-65536, 36924, f126);
v150.arguments = v150;
