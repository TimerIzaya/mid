let v6;
try { v6 = ("resizable").fontsize(-4294967295); } catch (e) {}
try { v6.localeCompare(v6); } catch (e) {}
function f8() {
    return "resizable";
}
const v9 = ["object","object","10"];
const v10 = [v9,"resizable"];
const v11 = [1073741825];
v11.name = f8;
try { v11.pop(); } catch (e) {}
v11[0] = v11;
function f13() {
    return 1073741825;
}
const v14 = v11.name;
function f16(a17, a18, a19, a20) {
    Object.defineProperty(a18, "toString", { configurable: true, enumerable: true, value: f16 });
    a18.e = a18;
    a19 !== a19;
    a20 == a20;
    try { a17.includes(a19); } catch (e) {}
    const v24 = v14 - a18;
    v24 * v24;
    a20.caller = a20;
    const o33 = {
        "c": a18,
        get e() {
            try { new a20(); } catch (e) {}
            const o31 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o31);
            return -4294967295;
        },
    };
    return o33;
}
try { f16("resizable", f13, -4294967295, "resizable"); } catch (e) {}
f16(v9, -4294967295, v11, f13);
f16(v10, 4294967297, v9, f16);
const v37 = f16(v9, 1073741825, v9, 4294967297);
v37.e = v37;
try { ("object").toLocaleLowerCase(); } catch (e) {}
try { ("object").charAt("resizable"); } catch (e) {}
%PrepareFunctionForOptimization("object");
