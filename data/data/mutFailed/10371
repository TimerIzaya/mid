function f3() {
    return 1000.0;
}
function f4(a5) {
    const o19 = {
        "h": 1000.0,
        get a() {
            this.__proto__;
            for (let v8 = 0; v8 < 100; v8++) {
                f3();
            }
            return 1000.0;
        },
        "e": a5,
        "b": Infinity,
        [5.0](a11) {
            function f12(a13) {
                return a13;
            }
            class C14 extends f12 {
                static #g = a11;
                static a = this;
                static 4294967296 = Infinity;
            }
            a11[9] = this;
            1000.0 !== f3;
            -Infinity;
            return f12;
        },
    };
    return o19;
}
const v20 = f4(Infinity);
f4(5.0);
const v22 = f4(Infinity);
class C23 {
    static #d = 1000.0;
    static get h() {
        super[Infinity];
        [-2147483647,-1317621450,12,-619710343,9223372036854775807,4096];
        [-1120701435,-12,65536,-65498248,788351460,-1,-1522196503,1073741823,536870912];
        [1,1,-8600,-2,-987219298,64,10297,2];
        try {
            f3();
        } catch(e30) {
        }
        /a[^a]/usy;
        /q/sy;
        /abc+?(?<=)[foo(?<!bar)baz?]?/gvdimy;
        try {
            super.fromCharCode(v20, this);
        } catch(e35) {
        }
        return 1000.0;
    }
    static #h;
    [1000.0] = Infinity;
    [Infinity];
    #b;
}
const v36 = new C23();
const v37 = new C23();
new C23();
function F39(a41, a42, a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a42;
    } catch(e45) {
    }
}
const v46 = new F39(5.0, v37, v22, C23);
const v47 = new F39(1000.0, v46, v46, C23);
const v48 = new F39(Infinity, v36, v47, v37);
gc();
gc();
"toString" == "toString";
("boolean").split("toString");
const o57 = {
    get f() {
    },
};
new Date();
for (let v60 = 0; v60 < 32; v60++) {
    v48["p" + v60] = v60;
}
