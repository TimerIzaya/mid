const v1 = /[.ma\Sc]/vdimsy;
const v2 = /((((.).).).)rfoo|(bar|baz)|quux*/uims;
let v3;
try { v3 = v2(); } catch (e) {}
function f4(a5) {
    class C6 {
        set g(a8) {
            super.d = v3();
        }
    }
    return a5;
}
function f11(a12, a13) {
    try {
        new Int16Array(v1);
    } catch(e15) {
    }
    return v2;
}
Int16Array[Symbol.toPrimitive] = f11;
v1.exec(Int16Array);
const o20 = {
};
gc(o20);
new Date();
[-753764488,6,-29054,10000,-4,2147483647,536870888,13,397208641,-1847025700];
[-1,127,13083,129,4294967295];
[-10,2147483648,1028060343,-9223372036854775808,9007199254740992];
[-9223372036854775808,2067924475,-536870912,4294967296,46528,-13,2044244347,1024,2243,1073741823];
function F37() {
    if (!new.target) { throw 'must be called with new'; }
}
const v39 = new F37();
const v41 = [16,-268435456];
[v41,v39];
[1e-15,-1e-15,0.047987872404069876,-1e-15,3.0,-1.0,5.0];
/[^1u]/ud;
class C47 extends Int16Array {
    constructor(a49, a50, a51, a52) {
        super();
        function f53(a54) {
            let v58 = 1511 - 1511;
            typeof 0 === "string";
            ~0;
            Date.parse(([188439.8808918628,491144.33908044384,7.99804504476413,6.321598426193364e+307,-820860.9743012136,0.7234201729305241,-998514.8410675353,5.600912141333236]).toString());
            const v69 = /\c4a.[(x)(x)(x)\4*(x)(x)(x)\3*]/gmy;
            const v70 = /G(a)\1a+8?/vdimsy;
            const v72 = ([342.12300421344116,0.3998304334347528,-1.5569468467414895e+308,929110.7069466491,0.8403359879371063,928.8415619105033,5.0])?.toStringTag;
            let v73;
            try { v73 = new v72(); } catch (e) {}
            let v74 = -198895178;
            class C75 {
                static #n(a77, a78) {
                    function F79(a81, a82, a83, a84) {
                        if (!new.target) { throw 'must be called with new'; }
                    }
                    v70[243] -= v73;
                    ++v74;
                    F79(v69);
                }
            }
            0 < 7;
            v58 = 4.0;
            0 < 10;
            let v92 = undefined;
            const v93 = v92++;
            v93 + v93;
            ([-9894,-9894]).concat(-9894);
            const v98 = new RegExp(3327);
            v98.set([-2038832922,-14]);
            const v110 = new Float64Array(127);
            gc();
            const o115 = {
            };
            v110[127] = 127;
            try {
            } catch(e116) {
                function F117(a119, a120, a121, a122) {
                    if (!new.target) { throw 'must be called with new'; }
                }
                function f123(a124, a125) {
                    const o126 = {
                        ...a124,
                    };
                    return f123;
                }
                %PrepareFunctionForOptimization(f123);
                const v127 = f123();
                v127.prototype = v127;
                new F117(F117, 8, 127, v127(f123));
                const v132 = new Int8Array();
                for (const v133 of "some") {
                    v132[1];
                    let [,,,...v135] = v132;
                    const o136 = {
                    };
                    const o137 = {
                    };
                }
            }
            return Int16Array;
        }
        const o148 = {
            n(a141, a142, a143, a144) {
                [-915680.8433526766,2.220446049250313e-16,-1.7976931348623157e+308,1.7976931348623157e+308];
                [-Infinity,7.850341802112235e+307,-3.29890257830787e+307,-5.846608304089251,1000000000000.0,-207756.69244479574];
                [3.0,-4.115780670234759e+307,-1.0,-3.0];
                return 7.338375728941637e+307;
            },
            "type": "function",
        };
        function f149() {
            return 489.4277490359266;
        }
        function f150(a151) {
            v41[5] <<= a151;
        }
        Object.defineProperty(o148, "arguments", { writable: true, configurable: true, get: f149, set: f150 });
        const v153 = new Uint16Array();
        let {...v154} = v153;
        -2 | -2;
        new Worker(f53, o148);
    }
}
new C47(Int16Array, C47, C47, Int16Array);
