const v0 = [3.0,618.0597751037596,3.0,-2.0];
function f1() {
    function f2(a3) {
        const v4 = [0.8307152163010869,1.0,0.0];
        v4.length = 1494907924;
        return v4;
    }
    return f2;
}
function f6(a7) {
    function F9(a11, a12, a13, a14) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.a = "536870889";
        } catch(e15) {
        }
        try {
            this.b = a14;
        } catch(e16) {
        }
    }
}
Object.defineProperty(v0, "toString", { enumerable: true, get: f1, set: f6 });
const v17 = [-6.826796343475287,3.0,1.4114691280556442e+308,-1000000.0,3.0,362482.646503475,0.7074760855561122,0.2165727575303098,0.23757324485709685,2.0];
const v18 = [-1000000.0,-2.0,-4.0];
const v22 = [v0,v18,44927,-1373887164];
function F23() {
    if (!new.target) { throw 'must be called with new'; }
}
const v27 = new BigInt64Array(44948);
try {
    v27.findLast(F23);
} catch(e29) {
}
[v17,44948,v22,44927,44948,v22,v18];
[[-1e-15,-4.547098672084515,6.731189859503068,1000.0,1000.0,414.1111077300918,567.5737904015757]];
const o35 = {
    "maxByteLength": 3952309630,
};
new ArrayBuffer(44927, o35);
[v22,44948];
class C38 {
}
C38.__defineSetter__;
Int16Array[2] = 44927;
const v41 = new Int16Array(Int16Array, Int16Array, Int16Array);
function f42() {
    function f43(a44) {
        const t48 = "symbol";
        delete t48[1];
        return ArrayBuffer;
    }
    return f43;
}
function f47(a48) {
    new Map("268435441");
}
Object.defineProperty(v41, Symbol.toPrimitive, { writable: true, enumerable: true, get: f42, set: f47 });
const v55 = new Int32Array();
v55.toString = f42;
v41[v55 / v41];
[-65535,-1255148289];
[-15,1,77071700,-128,65536,1762585496,129];
const v61 = Math.cbrt();
v61 % v61;
("65535").lastIndexOf(128, 65536);
[268435440,2147483647,4,-1020420986];
function f71() {
    const v76 = new Uint8ClampedArray(3, [1e-15,0.09547881173263595,1.7976931348623157e+308,0.6658730271969261,-1000.0]);
    v76[1073741823] = v0;
    new Float32Array(1073741823);
}
f71();
f71();
