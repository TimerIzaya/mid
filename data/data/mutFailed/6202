const v2 = new BigInt64Array(3386);
Uint8ClampedArray.prototype = Uint8ClampedArray;
new Uint8ClampedArray(512);
const v8 = new Int8Array(255);
1.7960406929954308e+307 >> 1.7960406929954308e+307;
function F13() {
    if (!new.target) { throw 'must be called with new'; }
}
try { new F13(); } catch (e) {}
const v16 = new F13();
const v17 = v16?.constructor;
try { new v17(); } catch (e) {}
const v19 = new F13();
try { v19.isPrototypeOf(v8); } catch (e) {}
function f21(a22) {
}
f21(v19);
f21(v8);
Int8Array.prototype = Int8Array;
const v26 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v27 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
for (let v29 = 0; v29 < 25; v29++) {
    v26["p" + v29] = v29;
}
function F32(a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    try { a34.reduceRight(Int8Array); } catch (e) {}
}
F32.arguments = F32;
const v37 = new F32(v27);
const v38 = v37?.__defineGetter__;
let v39;
try { v39 = new v38(v2, v8); } catch (e) {}
class C40 {
}
const v42 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v43 = [601759695];
const v44 = [1073741824,1073741823,1376142744,1073741825];
function f46(a47, a48, a49, a50) {
    function f51() {
        let v54 = Float64Array;
        v54 = a48;
        b = -4294967295;
        const v55 = v26.length;
        v55 | v55;
        try {
            v44.forEach(v54);
        } catch(e58) {
            a50.message;
        }
        const v60 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        v60[9] = v60;
        const v62 = Symbol.toPrimitive;
        const o74 = {
            toString(a64, a65) {
                const v66 = a50 && v54;
                a64 *= v62;
                class C67 {
                }
                const v68 = new C67();
                const v69 = new C67();
                switch (v69) {
                    default:
                        C67.toString();
                        break;
                }
                try { v68["m"](); } catch (e) {}
                return v54;
                return v66 <= v60;
            },
        };
        const o94 = {
            "c": -4294967297n,
            [522675525n](a77, a78) {
            },
            "c": -4294967295,
            valueOf(a80, a81) {
            },
            "b": -4294967295,
            [-4294967297n](a83, a84, a85, a86) {
            },
            "e": -4294967295,
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v42,
            ...v43,
            "type": "Vre",
            ...a50,
            valueOf(a88, a89) {
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            toString(a91, a92, a93) {
            },
            5: -4294967295,
            6: -268435456,
        };
    }
    f51();
    Int8Array.prototype = Int8Array;
    new Int8Array();
    %OptimizeFunctionOnNextCall(f51);
    ("find")[1];
    try { v44["find"]("find", a50, v43, v44); } catch (e) {}
}
f46.e = f46;
for (let v101 = 0; v101 < 10; v101++) {
    v101 >> v39;
    f46();
}
%OptimizeFunctionOnNextCall(f46);
f46();
