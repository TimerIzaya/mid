const v0 = [];
class C1 {
    get g() {
        this[135] = this;
        try {
            v0.__proto__ = v0;
        } catch(e3) {
        }
        return v0;
    }
    set a(a5) {
        for (let i17 = (() => {
                function f7() {
                    return f7;
                }
                const v8 = f7.arguments;
                function f9() {
                    for (let v10 = 0; v10 < 5; v10++) {
                        function f11() {
                            return f11;
                        }
                        Array(36862, 36862);
                    }
                    return v8;
                }
                %PrepareFunctionForOptimization(f9);
                f9();
                %OptimizeFunctionOnNextCall(f9);
                f9();
                return 0;
            })();
            i17 < 6;
            i17++) {
            i17 &= i17;
            Object.defineProperty(this, 2147483648, { configurable: true, value: i17 });
            let v23;
            try { v23 = this.max(this, v0, i17, this); } catch (e) {}
            try {
                v23.c = v23;
            } catch(e24) {
            }
        }
    }
}
new v0();
new C1();
const v27 = new C1();
function F34(a36, a37, a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = v0;
    } catch(e40) {
    }
    try {
        this.d = v27;
    } catch(e41) {
    }
}
new F34(4294967297, "4Zk2n", "object", 4294967297);
new F34(-9, "4Zk2n", "object", -9);
new F34(4294967297, "4Zk2n", "object", -9);
function F45() {
    if (!new.target) { throw 'must be called with new'; }
}
const v47 = [-268435456,-9007199254740990,11,-25356,-536870912,4294967296,1520296454];
const o48 = {
    __proto__: v47,
};
try { o48.group(F45); } catch (e) {}
