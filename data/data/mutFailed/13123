function f0() {
}
function f1() {
    const o15 = {
        __proto__: f0,
        "d": f0,
        p() {
            Object.defineProperty(this, "h", { configurable: true, enumerable: true, get: f0 });
            for (let i4 = 0; i4 < 9; i4++) {
            }
            const o13 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o13);
            return "async";
        },
    };
    return o15;
}
try {
    const o16 = {
    };
} catch(e17) {
}
const v18 = f1();
const v19 = f1();
let v20 = f1();
class C24 {
    constructor(a26, a27) {
    }
    static {
        try {
            this.toString = f1;
        } catch(e32) {
        }
        v20 = v19;
        v18[6];
    }
    static [v19];
}
const v34 = new C24(-1641, -1641);
new C24(255, v34);
new C24(255, v34);
new Uint32Array([-620100541,-64845,-268435456,-7,-268435456,1024,-536870912]);
let v40 = 0;
v40++;
function F42(a44, a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a46;
    } catch(e47) {
    }
    try {
        this.a = v34;
    } catch(e48) {
    }
    try {
        this.b = -1641;
    } catch(e49) {
    }
    try {
        new Int8Array(-45057);
    } catch(e53) {
    }
}
new F42(-1641, v19, 38932);
new F42(38932, -1641, 255);
new F42(38932, v19, 255);
/ND2/gds;
class C59 extends Map {
}
const v60 = new C59();
v60.isPrototypeOf();
class C64 {
    static {
        for (let v66 = 0; v66 < 25; v66++) {
            const v67 = [601759695];
            const v68 = [1073741824,1073741823,1376142744,1073741825];
            function f70(a71, a72, a73, a74) {
                try { new a71(); } catch (e) {}
                a73 << a73;
                function f78() {
                    return a71;
                }
                const v80 = new Int8Array();
                const v83 = BigUint64Array * 536870887;
                v83 - v83;
                Number.isNaN(v83 ** v83);
                function f88(a89, a90) {
                }
                try { f88(); } catch (e) {}
                const v92 = v80.buffer;
                function f94(a95) {
                    const o98 = {
                        ...v66,
                        5: v66,
                        __proto__: a95,
                        valueOf(a97) {
                        },
                        "d": 4,
                        "g": v66,
                        163: 4,
                    };
                }
                %PrepareFunctionForOptimization(f94);
                const v99 = v92.__defineGetter__;
                try { v99(); } catch (e) {}
                function f101() {
                    const v104 = Symbol.iterator;
                    Math[v104] = v104;
                    return Symbol;
                }
                f101();
                Object.defineProperty(v92, "constructor", { writable: true, configurable: true, value: Date });
                %OptimizeFunctionOnNextCall(f78);
                let v107;
                try { v107 = v68["find"](..."find", a74, ...v67); } catch (e) {}
                const o108 = {
                };
                o108.e = o108;
                v107 <= a73;
                return arguments;
            }
            for (let v110 = 0; v110 < 5; v110++) {
                f70(this, v110, v110);
                class C112 {
                    #toString(a114, a115, a116) {
                    }
                }
                for (let v118 = 0; v118 < 10; v118++) {
                    Reflect.construct(C112, [Reflect,Reflect,Reflect,Reflect], WeakSet);
                }
            }
        }
    }
}
