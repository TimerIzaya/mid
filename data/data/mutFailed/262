const v2 = new Float32Array(8);
const v5 = new Float32Array(1);
const v6 = new v5();
for (const v8 of `match${v6}-20124`) {
}
("6Ct").normalize();
new Uint8ClampedArray(512);
class C14 extends Float32Array {
    static 11 = 1;
    #toString(a16, a17, a18) {
        return v2;
    }
    178;
    [v5] = v5;
    static #a;
    static [v2];
}
new C14();
new C14();
new C14();
Math.asin();
class C4 {
}
const v5 = new C4();
const v6 = new C4();
class C7 extends C4 {
    #e;
    constructor(a9, a10) {
        super();
        v6.__proto__ = v5;
        this.#e %= a10;
    }
}
new C7();
new C7();
/(?:ab|cde)*/vgd;
/[[]((\xed\xa0\x80))\x02]/vgid;
/(?:a{5,1000000}){3,1000000}/guy;
[-1.749193831953031,-0.0,-Infinity,30.31255071286273,NaN,-0.0];
[4.0,-4.0,-2.2250738585072014e-308,Infinity,-2.220446049250313e-16,-1000000000000.0];
[-3.5546996053089437];
class C27 {
    #c;
    constructor(a29, a30) {
        try {
            a30.#c /= a29;
        } catch(e31) {
        }
    }
    static 3301985676;
}
new C27(-1684921933, -990373415);
new C27(-9007199254740990, C27);
