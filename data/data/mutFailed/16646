function f0() {
    const v2 = new Int32Array();
    const v6 = new Uint8ClampedArray(129);
    const v7 = new Int32Array(3208);
    const t4 = v2.constructor;
    new t4(v6);
    Int32Array.from(v7);
    const o19 = {
        "a": -228.620897587458,
        "c": -228.620897587458,
        get f() {
            delete this[this];
            return -49837;
        },
        ..."sticky",
        __proto__: "sticky",
        "d": -228.620897587458,
        "h": -228.620897587458,
        "e": "sticky",
    };
    return o19;
}
let v20 = f0();
const v21 = f0();
function F22() {
    if (!new.target) { throw 'must be called with new'; }
    v20 <<= this;
    return this;
    for (let v24 = 0; v24 < 32; v24++) {
        this["p" + v24] = v24;
    }
    try {
        this.g = 1489843090;
    } catch(e28) {
    }
}
const v29 = new F22();
const v30 = new F22();
const v31 = new F22();
let v33;
try { v33 = v29["n"](v30); } catch (e) {}
try {
    new F22();
} catch(e35) {
}
v31.g = v31;
function F36(a38) {
    if (!new.target) { throw 'must be called with new'; }
    a38.g;
    try {
        this.a = v29;
    } catch(e40) {
    }
}
let v41;
try { v41 = new F36(F36); } catch (e) {}
const v42 = new F36(v31);
v42.a = v42;
const v43 = new F36(v33);
v43.a = v43;
const v44 = [-1335654396,-2,-9,-4294967295,-15,-16];
try { v44.reduce(v44); } catch (e) {}
let [,...v47] = [1e-15,1.0,-3.0,1.43935350979979e+308,-0.0];
try { v41.unshift(F36); } catch (e) {}
let v50;
try { v50 = ("-268435456").codePointAt(F22); } catch (e) {}
try { ("function")["-268435456"](); } catch (e) {}
[2147483647,4294967296,-7,-277691152,-616812028,-788936298];
[38857,-4294967296,1073741824,-4096,33257,2];
function F56(a58, a59) {
    if (!new.target) { throw 'must be called with new'; }
    const v60 = this.constructor;
    try { new v60("-268435456", a59); } catch (e) {}
    a58.prototype;
    a59.arguments = a59;
}
const v63 = new F56(F56, F56);
const v64 = v63?.toLocaleString;
try { new v64(); } catch (e) {}
for (let i = 0; i < 10; i++) {
    /[xyz{1,}(O)]/udis;
}
function f67() {
    return 3.5885237423067196;
}
1042950492 >> 1042950492;
function f70(a71, a72) {
    return f70;
}
const v73 = f70(f70, f70);
class C74 extends f70 {
    constructor(a76, a77, a78) {
        super();
        const v79 = `
            try { a76(a78, v73); } catch (e) {}
        `;
        v33();
    }
}
const v83 = f0();
const v84 = [-2197,129,16,536870912];
[9473,-1,12,10,-2147483649,959023586];
const v86 = [2147483648,2147483649,9007199254740990,-2147483648];
function f87(a88, a89) {
    const o102 = {
        set f(a91) {
            delete v83[this];
            let v93;
            try { v93 = v84.filter(a91, v86); } catch (e) {}
            a88[v21] %= v93;
        },
        [v84]: a89,
        m(a95, a96, a97, a98) {
            for (let v99 = 0; v99 < 100; v99++) {
                a88();
            }
            a98 = f0;
            return a89;
        },
    };
    return o102;
}
f87(v50, v20);
f87(v84, v21);
f87(v84, v21);
const v109 = [0.5056701084838725,-61629.798017403926,NaN,864.4381894698445,2.220446049250313e-16,783231.8077183717];
const v112 = new BigUint64Array();
function F113(a115, a116, a117, a118) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        v112[16] = v109;
    } catch(e119) {
    }
}
new F113(16, 16, F113, F113);
