const v1 = new Set();
new Int16Array(6);
const v7 = new Uint8ClampedArray(3);
const v10 = new Uint16Array(774);
class C11 {
    static n(a13, a14, a15, a16) {
        const v17 = v7[a15];
        return [[v10,a14,this,[v17,v17],Uint8ClampedArray]];
    }
    #o(a22, a23, a24) {
        return 23282;
    }
}
new v1();
const v29 = new C11();
new v29();
function F31() {
    if (!new.target) { throw 'must be called with new'; }
    this.d = 2;
}
new F31();
new Int32Array();
new Float64Array(256);
const v46 = [1613217357,204598905,15977,1122227661,64,-2,-12,536870888];
const v47 = [-2.2250738585072014e-308,0.8014728140665155,1.4073101706157717e+308,1.4751052216559766e+308,2.0,-692.9604671107461,-2.220446049250313e-16,2.0];
const v48 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
class C49 {
    constructor(a51, a52, a53, a54) {
        const v55 = Int16Array.constructor;
        try { new v55(v48, F31); } catch (e) {}
        v48 >>> a52;
        a53 >>> -0.0;
    }
}
const v60 = new C49(v46, 659.0540372978887, v46);
new C49(v60, 2.220446049250313e-16, v47, v48);
