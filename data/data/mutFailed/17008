let v1 = "e";
class C3 extends Int32Array {
    9;
}
const v4 = new C3();
const v5 = new C3();
v4["includes"](v5);
function f9() {
    let v10 = 0;
    do {
        function f11() {
            return v4;
        }
        v10++;
    } while (v10 < 3)
    return "search";
}
let v15 = Array;
const v16 = /xEz\xe2\x81\xa3/gumy;
function f17(a18, a19, a20) {
    return v16;
}
try { (-9007199254740992).log2(-9007199254740992); } catch (e) {}
let v24 = new v15(4);
function f25(a26, a27, a28, a29) {
    const o48 = {
        [4](a31, a32) {
            const o36 = {
                "execution": "sync",
                "type": "minor",
            };
            const v37 = gc(o36);
            let v38 = 0;
            while (v38 < 4) {
                return v5;
                v1 = a31;
                [a26,f25,a31,[f9,f25,a27],"includes"];
                [v37];
                v38++;
            }
            return a26;
        },
        ..."2147483648",
    };
    return o48;
}
const v49 = f25(f9, v24, "2147483648", v1);
f25(v1, v1, v49, "2147483648");
const v51 = f25(f25, v1, "search", "search");
let v53 = 10;
const v54 = new Array(v53);
const v59 = new Map();
function f60(a61) {
    const o73 = {
        __proto__: v59,
        "f": v59,
        ...v59,
        "e": v59,
        "a": v51,
        ...v15,
        "d": a61,
        "h": a61,
        [v59]: -6n,
        [-6n](a63, a64, a65, a66) {
            delete v59?.size;
        },
        set b(a69) {
        },
        "type": "2147483648",
        get b() {
            const v71 = Array.constructor;
            new v71(this, v51, Array, Array, v71);
            return v51;
        },
    };
    const v74 = [o73];
    [v74,f60,4,v1,v74];
    [f60];
    const o81 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o81);
    return a61;
}
v24 = v54;
({"buffer":v15,"byteOffset":C3,"d":v53,} = v4);
[] = v54;
v49[Symbol.hasInstance];
function f86(a87, a88, a89, a90) {
    const v91 = [4294967297,-1648241970,9,3,-2,0,-4294967296,10];
    const v92 = /QK/gvdimy;
    with (v91) {
        v92.__proto__ = length;
    }
    const v95 = new Int8Array();
    for (const v96 in v95) {
    }
    function F97(a99) {
        if (!new.target) { throw 'must be called with new'; }
        this.h = a99;
    }
    new F97();
}
f86();
const v102 = f60(v59);
const v103 = f60(52504n);
try { v103.m(v102, Map); } catch (e) {}
let v106 = -2.220446049250313e-16;
++v106;
Math.sin(v106);
~0n;
