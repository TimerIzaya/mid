class C4 {
    #g = "d";
    static a;
    static toString(a6, a7) {
        try {
            const t5 = "p";
            t5.#g >>= a6;
        } catch(e8) {
        }
        return a6;
    }
    #c = "d";
}
const v9 = new C4();
new C4();
new C4();
class C12 {
    static n(a14, a15, a16, a17) {
        v9 != a17;
        const o19 = {
        };
        new Proxy(a14, o19);
        return a15;
    }
    16 = "p";
    [v9] = "d";
    #g;
    constructor(a23, a24, a25) {
        super();
        const o29 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o29);
    }
}
const v32 = Symbol.toPrimitive;
const v33 = [39049,-2147483647,9007199254740991,30221,268435456,-2147483647,41987];
const v34 = [268435440,49273,-15,214837996,-12,65536,1291301446,-65535];
try { v34.concat(v33); } catch (e) {}
new C12();
new C12();
new C12();
const v41 = new Map();
let v43;
try { v43 = Map(); } catch (e) {}
const v44 = new Map();
function f45(a46, a47, a48, a49) {
    a48.arguments = a48;
    a46[3];
    a48.caller = a48;
    const o57 = {
        n(a52, a53, a54, a55) {
            for (let v56 = 0; v56 < 10; v56++) {
            }
        },
        16: a46,
        ...v44,
    };
    return o57;
}
const v58 = f45("m", "m", f45);
new Float64Array();
let v61 = 16;
v61++;
try { BigInt64Array(); } catch (e) {}
const v65 = new BigInt64Array();
new Map();
const v69 = new BigUint64Array();
function f70(a71, a72, a73) {
    return v69;
}
const v74 = ~-4294967297n;
v74 ^ v74;
const v77 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v78 = [601759695];
class C79 {
}
const v82 = new Float32Array(1024);
v82.includes(C79, 1024);
try { v78.sort(v78); } catch (e) {}
v78[0] = v78;
const v85 = [1073741824,1073741823,1376142744,1073741825];
for (let v87 = 0; v87 < 50; v87++) {
}
function f88(a89) {
    return a89;
}
function f90(a91, a92, a93, a94) {
    arguments.toString();
    function f97() {
        const v99 = ("Vre")?.toLocaleUpperCase;
        Float64Array.of();
        function f103() {
            return 3.5885237423067196;
        }
        try { new v99(); } catch (e) {}
        try { ("Vre").fixed(); } catch (e) {}
        let v107 = -268435456;
        v107--;
        class C110 extends Date {
        }
        v41.length = 5;
        -(v107 + v107);
        const o132 = {
            "c": -4294967297n,
            [522675525n](a115, a116) {
            },
            ..."Vre",
            "maxByteLength": -128,
            "c": v78,
            valueOf(a118, a119) {
            },
            "e": -4294967295,
            "e": v107,
            "maxByteLength": -4294967295,
            __proto__: v65,
            [v32]() {
            },
            set e(a122) {
            },
            "arguments": v77,
            ...v78,
            /*
            __proto__: v34,
            */
            m() {
                const o124 = {
                };
            },
            "type": "Vre",
            ..."Vre",
            valueOf(a126, a127) {
            },
            ..."Vre",
            4: "Vre",
            "c": v107,
            "type": "Vre",
            toString(a129, a130, a131) {
            },
            6: v107,
        };
        try { o132.valueOf(o132, -128); } catch (e) {}
        return "Vre";
    }
    f97.length;
    const v138 = /[KvG]/iy;
    try { v138.test(v138); } catch (e) {}
    /(E)/uis;
    /(K(?:a+)+)/guim;
    const v142 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    let v143 = 2684;
    const v144 = v143--;
    v144 != v144;
    const v147 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
    const v148 = [601759695];
    const v149 = [1073741824,1073741823,1376142744,1073741825];
    for (let i153 = 0, i154 = 10;
        (() => {
            const v155 = i153 < i154;
            class C156 {
            }
            function f157(a158, a159, a160, a161) {
                let v162;
                try { v162 = a159.apply(a161, a159); } catch (e) {}
                return v162;
            }
            f157(i154, C156);
            %OptimizeFunctionOnNextCall(f157);
            return v155;
        })();
        i154--) {
    }
    function f169(a170, a171, a172, a173) {
        a170 + a170;
        function f175() {
            "Vre" == "Vre";
            ("Vre").codePointAt("Vre");
            const v180 = v142.length;
            v180 + v180;
            try {
                v149.forEach(a171);
            } catch(e183) {
                const v184 = e183.message;
                try { v184.codePointAt(f175); } catch (e) {}
            }
            const v186 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
            const o192 = {
                toString(a188, a189) {
                    (a173 && a171) <= v186;
                },
            };
            -268435456 - -268435456;
            const o205 = {
                [522675525n](a196, a197) {
                },
                "c": v148,
                [-1]: v143,
                "b": -4294967295,
                [-4294967297n](a199, a200, a201, a202) {
                },
                "arguments": v147,
                set b(a204) {
                },
                256: a173,
                ...v148,
                "type": "Vre",
                ..."Vre",
                4: "Vre",
                "c": -268435456,
            };
            return v148;
        }
        f175.e = f175;
        const v206 = f175();
        try { v206.toLocaleString(); } catch (e) {}
        %OptimizeFunctionOnNextCall(f175);
    }
    for (let v208 = 0; v208 < 5; v208++) {
        f169(v208, v143);
    }
    -9629 - -9629;
    [1000000000.0,5.348311955597634,-5.0,-0.0,918517.0313497435,3.0];
    const v215 = [1000000000000.0,-1.3068457756022127];
    try { v215.map(v149); } catch (e) {}
    [4.62204780368929e+306,5.432009947472192];
    try { ("getPrototypeOf").blink(); } catch (e) {}
    class C223 {
        ["getPrototypeOf"] = -1.7976931348623157e+308;
    }
    class C224 extends C223 {
        ["getPrototypeOf"] = C223;
    }
    let v225;
    try { v225 = new C224(); } catch (e) {}
    const v226 = v225?.getPrototypeOf;
    try { new v226(); } catch (e) {}
    Date.length = Date;
    const v230 = new Date();
    class C232 extends Int32Array {
    }
    new C232();
    function f234() {
        class C236 {
        }
        const v237 = new C236();
        v237[3.4890473589784586e+307] = -353832814;
        const o241 = {
            __proto__: v43,
            [v32]() {
                v32["isArray"]();
            },
            "call": f234,
        };
        class C242 extends C236 {
            #a;
        }
        for (let i = 0; i < 5; i++) {
            new Date();
        }
        return -353832814;
    }
    const o245 = {
        "g": v230,
    };
    3.5885237423067196 + 3.5885237423067196;
    function f248() {
    }
    function F254() {
        if (!new.target) { throw 'must be called with new'; }
        try {
            for (let i = 0; i < 5; i++) {
            }
        } catch(e256) {
        }
    }
    function f257(a258, a259) {
        const o260 = {
        };
        const o261 = {
        };
        const o262 = {
        };
        const o263 = {
        };
        function f264(a265) {
        }
    }
    const o266 = {
    };
    f97();
    const v269 = new Int8Array();
    try { v269.findIndex(v58); } catch (e) {}
    %OptimizeFunctionOnNextCall(f97);
    ("find").strike();
    try { v85["find"](..."find", a94, ...v78, ...v85, ...522675525n); } catch (e) {}
}
for (let v274 = 0; v274 < 5; v274++) {
    f90();
}
f90();
%OptimizeFunctionOnNextCall(f90);
f90();
