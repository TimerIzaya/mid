function f1(a2, a3) {
    const o6 = {
        set b(a5) {
        },
    };
    return o6;
}
const v7 = f1();
for (const v8 in v7) {
    Object.defineProperty(v7, v8, { set: f1 });
}
class C11 {
    static {
        this || "-176972982";
    }
    #b = "-176972982";
    constructor(a18) {
        try { a18["atan2"](2.220446049250313e-16, 30492, 30492); } catch (e) {}
        super.f = 2.220446049250313e-16;
        let v24 = "atan2" ** "-176972982";
        let v25 = --v24;
        const v26 = v24 | v25;
        Math.sin("atan2");
        v25 / 4294967295;
        v25++;
        Math.cbrt(v26);
    }
}
new Uint16Array(Uint16Array, Uint16Array, C11);
C11.c = gc();
const v35 = new C11(30492);
const v36 = new C11(v35);
const v37 = new v36(C11);
for (let [v39,...v40] of v37) {
}
new Int8Array();
function f43(a44, a45) {
    new Float64Array();
    function F48(a50) {
        if (!new.target) { throw 'must be called with new'; }
        this.h = a50;
    }
    const o59 = {
        4294967296: 30492,
        "d": 30492,
        [30492]: F48,
        "type": "atan2",
        toString() {
            super[this];
        },
        "d": v36,
        [v37]: a44,
        536870888: v37,
        "g": a44,
        "h": 2.220446049250313e-16,
        ..."-176972982",
        m(a54, a55) {
            const t57 = 4;
            t57[5] = a55;
            return a45;
        },
    };
    return o59;
}
const v60 = f43(v35, v37);
const v61 = f43(C11, v60);
class C63 extends Uint16Array {
}
class C64 {
}
const v65 = f43(v35, v60);
[188,true];
Math.tanh("1");
[v65,v37,v65];
const v73 = [v35,v61,C11,f43];
[v73,v73,"-176972982",v36,f43];
/[^q\P{scx=Greek}]/udsy;
new Int16Array(5);
new Int16Array(245);
const v11 = new Uint8Array(4057);
let v13 = 1421;
const v15 = new v11(v13);
3170 + 3170;
new Int32Array(3170);
const o21 = {
};
const v23 = new Proxy(v11, o21);
try { v23.exec(-1.106369940414673e+308, Uint8Array, Int16Array, BigUint64Array); } catch (e) {}
const v26 = new BigInt64Array(5);
function f27(a28, a29, a30) {
    const o52 = {
        __proto__: v26,
        "a": BigInt64Array,
        "e": Int32Array,
        [v13](a32, a33, a34) {
            const v35 = a30 > v15;
            v35 ? a30 : v15;
            typeof v15 === "object";
            try {
                v13 = a29;
            } catch(e40) {
                let v42 = 2.220446049250313e-16;
                class C43 {
                    p(a45, a46) {
                        try { a46(a45, a29, true, a30); } catch (e) {}
                        return v35;
                    }
                    static #c = 4057;
                    constructor(a49) {
                        const o50 = {
                            ...this,
                        };
                        try {
                            v42 = -1.0;
                        } catch(e51) {
                        }
                    }
                    [v42];
                    #e = -1.0;
                }
            }
            return this;
        },
    };
    o52[1421];
    return o52;
}
const v54 = f27(5, 3170, v13);
v54[3] = v54;
f27(3170, 3170, 3170);
const v56 = f27(5, v23, v13);
v56[1] = v56;
const v57 = [-1000000000.0,1e-15,-9.803124315434264,-366.4099400694298,1000000000000.0,0.7347183727038488,-Infinity,2.0,0.3916117682859279,-461027.2128179858];
const v58 = [1000000000000.0,-1.7976931348623157e+308,6.570844083183324,3.0,-2.0,961.6011183149949,634.9606529678199,1.6712831869744128e+308,1000000000000.0];
const v59 = [-1.0,1e-15,NaN,5.0,-1.390593919008634e+308,2.2250738585072014e-308,-3.6891891067725497e+307];
v59.g = v59;
function f60(a61) {
    Date();
    return a61;
}
const v64 = -Infinity;
let v65 = 0.7066651792620507;
const v66 = v65--;
class C67 {
    static #n(a69) {
        try { this(); } catch (e) {}
        this.g;
        return v66;
    }
    static 10 = v65;
}
const v72 = C67?.__lookupSetter__;
try { new v72(v15); } catch (e) {}
const v74 = new C67();
const v75 = v74?.constructor;
try { new v75(); } catch (e) {}
v74[v64] *= v64;
v59.valueOf = f60;
function f77() {
    const v79 = Date?.UTC;
    try { new v79(f60, v57, v57, f60, Date, Date, f60); } catch (e) {}
    const v81 = Date.now();
    function F83(a85, a86, a87, a88) {
        if (!new.target) { throw 'must be called with new'; }
        const v89 = this?.constructor;
        try { new v89(-57641.03148885199, a86, a85, v81); } catch (e) {}
        const v91 = a85?.constructor;
        try { new v91(); } catch (e) {}
        const v93 = a86?.values;
        try { new v93(); } catch (e) {}
        a87 ^ a87;
        this.a = a87;
    }
    try { F83.bind(-57641.03148885199); } catch (e) {}
    return v57;
}
const v97 = f77?.bind;
try { new v97(3170); } catch (e) {}
try { v59.with(2068528752, BigInt64Array); } catch (e) {}
const o105 = {
    "maxByteLength": 536870912,
};
new Int32Array(9);
let v111 = -921345.8022253171;
v111--;
class C115 extends f77 {
    constructor(a117, a118, a119, a120) {
        super();
        const o124 = {
            ...v65,
            ...this,
            get b() {
                try {
                    super[this] = v65;
                } catch(e123) {
                }
                return this;
            },
        };
        o124.execution = a118;
        gc(o124);
    }
    /*
    constructor(a127) {
        const v140 = (-13545).constructor;
        const v141 = v140(-29376, v140, 5);
        const o142 = {
            2934394387: v141,
        };
    }
    */
}
C115.e = C115;
const v144 = new C115();
new C115(v144, C115, -2147483647n, v59);
new C115(-2147483647n, 0n, C115, v58);
class C147 extends f77 {
    [f77] = f77;
}
function f148() {
    const v150 = new Int16Array(Int16Array);
    return v150;
}
C147.valueOf = f148;
new C147();
const v152 = new C147();
h = v152;
~(v26 << v59);
for (let v155 = 0; v155 < 8; v155++) {
    v155 != v155;
    v144.length = v155;
}
const o159 = {
    "maxByteLength": 65535,
};
try { new BigUint64Array(v23, v111, C147); } catch (e) {}
class C163 extends BigUint64Array {
}
const v166 = new Uint32Array(2295);
v166[1797] = v166;
const v167 = new SharedArrayBuffer(16, o159);
new BigInt64Array(v167);
