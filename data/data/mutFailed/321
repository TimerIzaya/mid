new Uint8Array(1024);
new Int16Array(388);
new Uint32Array(4);
class C11 {
    static #b = 1175953465;
}
new BigUint64Array();
new Int16Array(1000);
function f16() {
    return f16;
}
Object.defineProperty([-3,257], 10, { writable: true, configurable: true, enumerable: true, set: f16 });
const v20 = new Float32Array(339);
new Int32Array(2649);
const v32 = new Uint8Array(225);
for (const v33 in v32) {
}
[v20,v32,v32];
const v35 = [1,40880,1,-65535,3109,268435456,0,-47552,1073741823];
const v37 = new BigUint64Array();
try { v35.map(v37); } catch (e) {}
new Float32Array(165);
[[2.220446049250313e-16,1000000.0,-832083.505850983,0.4718386381385684,1000.0,-5.0,9.814259698721895e+307,-659970.7982908424,-5.0]];
Math.atan(0.6146752851534484);
[2649];
[Int32Array,Uint8Array];
new Set();
