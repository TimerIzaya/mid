const v0 = [];
const v1 = [0.7972864617462972];
const v2 = [1000.0,3.714147252890826e+306];
const v3 = [608.3841918591909,-5.441749391009115,978.993722401209,-2.2250738585072014e-308,1.6411778753368687,2.0,92473.71594708622,NaN,-5.463956055593977e+307];
class C4 {
    #b = v3;
    set e(a6) {
        let v7;
        try { v7 = a6(a6, a6, v0, a6, this); } catch (e) {}
        const v8 = v2 + v7;
        try {
            v3.#b &&= v8;
        } catch(e9) {
        }
    }
    [v1];
    c;
    #valueOf(a11, a12, a13, a14) {
    }
    static #a = v1;
    #g = v0;
    #p(a16, a17, a18, a19) {
    }
    constructor(a21, a22, a23) {
        function f24(a25, a26) {
            return a25;
        }
        this[Symbol.toPrimitive] = f24;
        a22[4] = v1;
        for (let v29 = 0; v29 < 25; v29++) {
        }
    }
}
new C4();
new C4();
const v35 = new Uint16Array(3327);
v35.set([-2038832922,-14]);
const v38 = new C4();
function F39(a41, a42, a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a41;
    } catch(e45) {
    }
    try {
        this.d = v3;
    } catch(e46) {
    }
}
const v47 = new F39(v1, v0, v0, v2);
const v49 = new Float32Array();
v49.constructor;
const v51 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v53 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v54 = [601759695];
function f56(a57, a58, a59, a60) {
    function f61() {
        try {
            v51.forEach(a58);
        } catch(e65) {
            e65.f = e65;
        }
        const v66 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o72 = {
            toString(a68, a69) {
                return (a60 && a58) <= v66;
            },
        };
        let v73 = -268435456;
        v73++;
        const o93 = {
            "c": -4294967297n,
            [522675525n](a76, a77) {
            },
            "c": v54,
            valueOf(a79, a80) {
                return this;
            },
            [-4294967297n](a82, a83, a84, a85) {
            },
            "maxByteLength": -4294967295,
            "arguments": v53,
            ..."Vre",
            valueOf(a87, a88) {
                return this;
            },
            4: "Vre",
            "type": "Vre",
            toString(a90, a91, a92) {
                return v53;
            },
            5: -4294967295,
            6: v73,
        };
        return a57;
    }
    f61();
    %OptimizeFunctionOnNextCall(f61);
    return v54;
}
const v95 = new F39(v0, v2, v3, v47);
new F39(v3, v38, v3, C4);
const v97 = /[\cA](?!(a))\1/udims;
const v98 = v54.constructor;
try { new v98(v97, v0); } catch (e) {}
([]).entries;
const v102 = [3.0,0.33171220343699925,4.064384707296433,1.5856273613625281e+308,-620.344995023322,0.9478652503365506,-856874.8447818598,-127.45049040971935];
function f103(a104, a105) {
    const o107 = {
        ...a104,
        get c() {
            return this;
        },
    };
    const v109 = [1073741824,1073741823,1376142744,1073741825];
    function f111(a112, a113, a114, a115) {
        function f117() {
            const o124 = {
                "e": -4294967295,
                ...v0,
                ..."Vre",
                "c": a115,
                "f": "-1073741824",
                84: arguments,
                ..."Vre",
                valueOf(a122, a123) {
                    return v109;
                },
                ..."Vre",
                4: "Vre",
                "c": -268435456,
                5: -4294967295,
                6: -268435456,
            };
        }
        f117();
        %OptimizeFunctionOnNextCall(arguments);
        let v127;
        try { v127 = v109["find"](..."find", a115, ...v3, ...v109, ...522675525n); } catch (e) {}
        v127 <= a114;
        return arguments;
    }
    return v95;
}
f103();
f103(v102);
