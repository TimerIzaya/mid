const v3 = Array(11);
v3.length |= 113;
const v7 = new Int16Array(255);
new BigInt64Array();
class C11 {
}
class C12 extends C11 {
}
const v13 = new C12();
const v16 = new Uint8Array(2);
let v17;
try {
const t0 = 3;
v17 = t0(BigInt64Array, v3, v13);
} catch (e) {}
const o21 = {
    ...v16,
    n(a19, a20) {
        return v17;
    },
};
o21[1] = o21;
function f23() {
    return 113;
}
Object.defineProperty(Uint16Array, 0, { configurable: true, enumerable: true, get: f23 });
new Uint16Array(3);
new Uint16Array(Uint16Array);
function f27(a28, a29, a30, a31) {
    with ([4294967297,-1648241970,9,3,-2,0,-4294967296,10]) {
        length | length;
    }
    new Int8Array();
    const v37 = new Int8Array();
    for (const v38 in v37) {
    }
    function F39(a41) {
        if (!new.target) { throw 'must be called with new'; }
        const v42 = this.b;
        try { v42(v37); } catch (e) {}
    }
    new F39();
}
class C47 extends Float64Array {
}
function f48() {
    return f48;
}
const v49 = f48.arguments;
function f50() {
    for (let v51 = 0; v51 < 5; v51++) {
        Array(36862, v49, v51 & v51);
    }
    return f48;
}
const v56 = new Float64Array(15);
[v56,Float64Array];
[Float64Array];
const v59 = [v7];
function F61() {
    if (!new.target) { throw 'must be called with new'; }
    function f63() {
        return Uint16Array;
    }
    function f64(a65) {
        new Date("undefined");
    }
    Object.defineProperty(this, "h", { writable: true, configurable: true, enumerable: true, get: f63, set: f64 });
    this.h = true;
}
const v69 = new F61();
function f70(a71, a72) {
    const o87 = {
        ...a72,
        get h() {
            return v7;
        },
        ...v3,
        "e": Uint16Array,
        toString(a75, a76, a77) {
            let v78;
            try { v78 = this.toString(a76, Array, a75); } catch (e) {}
            function f80(a81, a82, a83) {
                return C11 == v59 ? C11 : v59;
            }
            f80(255n, v78);
            a71[C12] = a71;
            return Array;
        },
    };
    return o87;
}
f70();
f70(v69, v69);
