try { ("function")["-268435456"](); } catch (e) {}
const v8 = new Uint8ClampedArray(1322);
v8[315];
function f10(a11, a12) {
    const o19 = {
        ...10000,
        ...a12,
        [a11](a14, a15) {
            super.d;
            try { a15(a11, a15, a15, this); } catch (e) {}
            return -9007199254740991 << 10000;
        },
        [-9007199254740991]: a11,
        "g": a11,
    };
    o19[11] = o19;
    return o19;
}
const v20 = f10(11, -9007199254740991);
v20[11] = v20;
f10(-9007199254740991, 11);
const v22 = f10(10000, -9007199254740991);
v22[10000];
function F24(a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    const o28 = {
    };
    function F29(a31, a32, a33, a34) {
        if (!new.target) { throw 'must be called with new'; }
        for (let v38 = 0; v38 < 100; v38++) {
            const o42 = {
                6: undefined,
                "d": undefined,
                [268435439n]: 2105444095n,
                __proto__: o28,
                "g": a33,
                "b": -4294967296n,
                "arguments": this,
                valueOf(a41) {
                    return v22;
                },
            };
            const t42 = 268435439n;
            t42[1] = o42;
        }
        -9223372036854775808 >> -9223372036854775808;
    }
    const v54 = this?.constructor;
    try { new v54(this, this); } catch (e) {}
    try {
        this.d = v20;
    } catch(e56) {
    }
}
try { F24.toString(); } catch (e) {}
new F24(10000, -9007199254740991);
new F24(-9007199254740991, 10000);
new WeakMap();
const v62 = [];
const o63 = {
};
const v64 = o63 > v62;
const v65 = new F24(11, 10000);
const v67 = new v64();
class C68 {
    #d = Date;
    #b;
    valueOf(a70, a71) {
        Date();
        a70[509004239] = a70;
        function f76() {
            return f76;
        }
        function F77() {
            if (!new.target) { throw 'must be called with new'; }
        }
        new F77();
        const v80 = new F77();
        const v81 = new F77();
        function f84() {
            return f84;
        }
        const v85 = [f76,1073741824];
        [f76];
        [v85,v80];
        ("object")[Symbol.asyncIterator];
        for (let v91 = 0; v91 < 32; v91++) {
            const t87 = "object";
            t87["p" + v91] = v91;
        }
        f76();
        for (let v95 = 0; v95 < 5; v95++) {
            f84();
        }
        try { v81.n(); } catch (e) {}
        for (let v98 = 0; v98 < 5; v98++) {
        }
        return super[a71]?.h;
    }
    a = Date;
    2147483648 = v67;
}
try {
    v65.d = C68;
} catch(e101) {
}
try { (-12n).getTime(-12n, -816409267); } catch (e) {}
const o107 = {
    "maxByteLength": 2119,
};
const v109 = new Int16Array(20);
for (const v110 in v109) {
    Math.expm1(v110);
}
