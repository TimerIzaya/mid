const v3 = [2147483647,0,1198699144,27038,-4096,-582452917,295997801,5];
const v4 = [4462,101772290,9007199254740991,2147483647,-2147483649,4004];
[-65536,-11,3,536870887,-1729005090,1000,1981379902,4096,31914,-7];
function F9(a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a12;
    } catch(e14) {
    }
    try {
        this.g = v3;
    } catch(e15) {
    }
}
const v16 = new F9("PI", "1kLK", "PI");
const v19 = Array(16);
const o20 = {
    ...v19,
};
const v21 = new F9("eAnWT", "1kLK", "PI");
const v22 = new F9("1kLK", "eAnWT", "eAnWT");
class C23 extends F9 {
    f;
    static #d;
    #g;
    static m(a25, a26) {
        try {
            v16.#d;
        } catch(e28) {
        }
        return v4;
    }
    [F9];
    d;
    9;
    2147483648 = v21;
    static [v3];
}
new C23();
new C23();
new v22();
function F33(a35) {
    if (!new.target) { throw 'must be called with new'; }
    const v36 = this?.constructor;
    try { new v36(); } catch (e) {}
    try {
        C23.f = 145253519;
    } catch(e38) {
    }
}
function f39() {
}
const v40 = [3,1024,490145092,10,-9223372036854775807,-9223372036854775807,1441684544,-1572996615];
const v41 = [127,-65535,64,343690887,-2123787437,2,2147483649,-53151,1];
const v42 = [1342014474];
class C43 {
    toString(a45) {
        const v46 = f39();
        try { this["any"](v46); } catch (e) {}
        const v51 = new BigUint64Array(2582);
        v19 * v51;
        function* f53(a54, a55, a56) {
            return a55;
        }
        return v42;
    }
    o(a58) {
        v40["findLastIndex"](f39, this);
        return a58;
    }
    static 10000 = v41;
    static [v41];
}
const v61 = new v22();
new C43();
new C43();
const v70 = v61.b;
function f71(a72) {
    function f74(a75) {
        a72 ||= -47530;
    }
    this.onmessage = f74;
    C43 ^ v41;
    [47245,4294967296,1213575163,536870889,-15,536870888,-1855227439,2130791141];
    [129,-205176918,127,9007199254740992,-9007199254740990,-60329,-278065414];
    [-9007199254740990,-16,-536870912,10000,-2,16,1278783829,4294967297];
}
[-9007199254740992];
const o84 = {
    "arguments": v40,
    "type": v70,
};
const v87 = [[]];
try { v87.reduce(1949338968); } catch (e) {}
const v89 = [0.38057796469390925,-3.0,-518688.06248081743,-2.0,107.8968501375,-400463.65452600387,-222.36741891958593,-1000.0,-5.415934286194992,1000000000000.0];
v89.concat([-2,-2,-2,-2,-2], [v89,-2], true);
new Worker(f71, o84);
