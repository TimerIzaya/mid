const v8 = new Int32Array(94);
new Float64Array(1181);
const t2 = 94;
const v14 = new t2(128);
function f15() {
    const o29 = {
        "d": 268435440,
        [v14](a20, a21) {
            super.f = this;
            try {
                this.fuck("1073741824", undefined, 0.06053901000419182);
            } catch(e25) {
            }
            return a20;
        },
        "a": 4.0,
        __proto__: "cJ",
        "h": "cJ",
        valueOf(a27) {
            const o28 = {
                __proto__: this,
            };
        },
        "e": v8,
        "g": "cJ",
        "c": Float64Array,
        "f": 4.0,
        [Uint8Array]: -1000000.0,
        "c": "cJ",
    };
    return o29;
}
const v30 = f15();
const v31 = f15();
[f15(),v30,v31,v31];
[];
const v35 = [-54486,11,9007199254740991,268435456,536870912,1073741823,255,1073741824,-2147483648,-3];
[65535];
new Set();
function F39(a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e44) {
    }
    try {
    } catch(e45) {
    }
    this.a = a42;
}
function F46(a48, a49) {
    if (!new.target) { throw 'must be called with new'; }
    function f50(a51, a52) {
        const o53 = {
            "b": a49,
        };
        return o53;
    }
    f50(a49, -2.2250738585072014e-308);
    f50(-2.2250738585072014e-308, -2.2250738585072014e-308);
    f50(a49, -1000000.0);
    const v57 = this.constructor;
    try { new v57(v35, this); } catch (e) {}
    ++a49;
}
new F46(v14);
