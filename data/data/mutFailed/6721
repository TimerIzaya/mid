new Set();
function F2() {
    if (!new.target) { throw 'must be called with new'; }
    new Uint8Array([2,-10]);
    function F7(a9) {
        if (!new.target) { throw 'must be called with new'; }
    }
    for (let i14 = 0, i15 = 10;
        i14 < i15;
        (() => {
            i14++;
            const v26 = F7(-1263139894);
            eval();
            v26 | F7;
            ("catch").codePointAt(i15);
        })()) {
    }
    try {
        this.b = -1052649622;
        Math.tan(-532550611);
        const v43 = new Uint8Array(6);
        new Int8Array(v43);
        const v46 = -(-7);
        v46 ** v46;
    } catch(e48) {
    }
}
function F49(a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    const v53 = this.constructor;
    v53.length = v53;
    try { new v53(F2, a51, F2, v53); } catch (e) {}
    ([Infinity,-686.9856326146617,0.47369378110968274,-7.24289104755818]).includes([-1000.0,-2.2250738585072014e-308,511.99933163650917,-386.8372768814137,Infinity]);
    const v59 = ("h").split();
    const v60 = /W(jy2)/udy;
    for (let v61 = 0; v61 < 5; v61++) {
        -v61;
        ("p")[0];
        v59["p" + v60] = v61;
    }
    new F2();
}
const v67 = new F49(F2, F49);
new Uint16Array(10);
Object.defineProperty(v67, "e", { enumerable: true, value: Uint16Array });
async function* f73(a74, a75) {
    return -9223372036854775807;
}
new Uint16Array(2586);
-(536870912n << 536870912n);
for (let i83 = 0, i84 = 10;
    (() => {
        const v85 = i83 < i84;
        let v86 = 3375;
        const v88 = new BigUint64Array(v86);
        let v91 = Math.tan(--v86);
        v91--;
        let [v93,,v94,...v95] = v88;
        v93--;
        function f98(a99) {
            const o100 = {
                ..."toStringTag",
            };
            return o100;
        }
        return v85;
    })();
    i83++) {
}
new BigInt64Array(9);
function* f110(a111) {
    yield [9007199254740990,-4294967296,-1205995130,-12581,9];
    return -1.7570084557226905e+308;
}
const v114 = [10617.622628886602,-5.0,1.7976931348623157e+308,-8.220199247866622e+307,1000000000000.0,0.0,48740.75682475441,-1000000000.0,6.407443663238073,369.9978678982163];
function f116() {
    const v118 = new ArrayBuffer(ArrayBuffer, ArrayBuffer);
    new Int8Array(v118);
    return f116;
}
f116();
%OptimizeFunctionOnNextCall(f116);
function f124(a125) {
    const o131 = {
        __proto__: 2,
        "c": 2,
        "e": 536870889,
        213: a125,
        ...a125,
        "g": 2,
        p(a127, a128) {
            try {
                this.fuck(536870889, a125);
            } catch(e130) {
            }
            return this;
        },
    };
    return o131;
}
f124(536870889);
f124();
f124();
Date.parse(v114);
