function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.c = this;
    this.c = F0;
    try {
        this.e = -9252;
    } catch(e3) {
    }
    try {
        this.a = -9252;
    } catch(e4) {
    }
    try {
        this.c = -9252;
    } catch(e5) {
    }
}
F0.b = F0;
const v6 = new F0();
new F0();
const v8 = new F0();
class C12 extends F0 {
    static 2 = -91.37464683279518;
    static #n(a14, a15, a16, a17) {
        Object.defineProperty(this, this, { enumerable: true, value: v6 });
        return a17;
    }
    set b(a20) {
    }
    #toString(a22, a23, a24, a25) {
    }
    static {
        this.b = NaN;
        super.b = this;
        let {...v27} = this;
    }
    [-91.37464683279518] = -91.37464683279518;
    [NaN];
    11;
    b = F0;
    257 = v8;
    static [NaN];
}
new C12();
new C12();
new C12();
[1.0,599.5527621714318,-5.0,-1.0];
[6.930923670425387e+307,4.8035233050966925e+306,2.220446049250313e-16,NaN,-1.0,5.0];
[0.5695809230249054,1000.0,-621764.5079611922,-5.010119413418299e+307,-648.7777840523286,-7.766026818903226,-4.0,-2.0,-1e-15,-948921.241679088];
for (let i45 = (() => {
        function f35() {
            class C37 extends Date {
                constructor(a39, a40, a41, a42) {
                    super(a39);
                }
            }
            return f35;
        }
        f35.toString = f35;
        const o44 = {
            [f35]() {
            },
        };
        return 0.8037056182165817;
    })();
    (() => {
        try { (1).__defineSetter__(); } catch (e) {}
        Math.pow(-15 >> 8798, -2.220446049250313e-16);
        return i45 < 10;
    })();
    i45++) {
    [1000,1000,1000,1000,1000];
    AggregateError("4294967297");
}
