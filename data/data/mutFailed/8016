function f3() {
    return NaN;
}
class C7 {
    m(a9, a10, a11, a12) {
        const v14 = new String("reduceRight");
        "length" in v14;
        return a12;
    }
    1 = 1.0;
    constructor(a17, a18) {
        super.b = a17;
        const v20 = [this,[this,1.0,3.2971708747553515e+307,"reduceRight"],a17,f3];
        [a17,1.0,v20,a18,v20];
    }
    static #c = 1.0;
}
const v22 = new C7("length", 1.0);
const v23 = new C7("reduceRight", C7);
new C7("length", "forEach");
class C25 {
    constructor(a27, a28, a29) {
        try {
            super.n(a29, f3);
        } catch(e31) {
        }
    }
    static a = "forEach";
    get d() {
        let v33 = 0;
        while (v33 < 8) {
            super[v23] = v23;
            function f36() {
                return this;
            }
            v33++;
        }
        return v22;
    }
}
const v38 = new C25(3.2971708747553515e+307, "length", v22);
const v39 = new C25(NaN, "length", v38);
new C25(1.0, "forEach", v39);
try {
const t0 = "reduceRight";
new t0();
} catch (e) {}
const v44 = [-504863.1885363821,-248378.80818527355,-147.11467188198264,-1.7039705769992093e+308];
for (let v45 = 0; v45 < 5; v45++) {
    v44 | v45;
}
207 + 207;
new Float32Array(207);
let v52 = 14;
v52--;
-450746.69945373747 ^ -450746.69945373747;
const v57 = [1000000000.0,2.2250738585072014e-308,-3.0,-2.2250738585072014e-308,-2.2250738585072014e-308,-6.525028373249204e+307,-7.851646360254072e+307,0.6785915059434757,-0.0];
class C58 {
}
C58[Symbol.replace] = v57;
try { new Uint8ClampedArray("symbol", v52, 207); } catch (e) {}
new Uint8ClampedArray(v52);
new Uint32Array(4096);
const v67 = 220 >> 220;
const v69 = new BigUint64Array(220);
const v70 = v69[16];
const v73 = new Uint32Array(958);
v73.g = v73;
const v76 = new Int8Array(3844);
v76[372] = v76;
let v79 = -1024n;
class C80 {
    set c(a82) {
        v79 = 0n;
        a82 += 0n;
    }
    constructor(a84, a85, a86, a87) {
        C80 >>> v76;
    }
    static [v73] = v70;
    128 = "Cl";
    m(a90) {
        let v91;
        try { v91 = new this(a90, -490778482n, this); } catch (e) {}
        this.c |= v91;
        return a90;
    }
    static 1;
    static h = -490778482n;
    static #f = v79;
}
try { new C80(); } catch (e) {}
new C80();
new C80();
const v95 = new C80(Uint32Array, v52);
[1.7976931348623157e+308,0.15227894183030433,-2.0,259880.3330397869,0.0,-1e-15,360683.0243419355,-1e-15,1.7976931348623157e+308];
const v98 = [0.03568519099872258];
try { v98.join(v69); } catch (e) {}
const v100 = [462318.599710946,0.6123807977566038,-0.0,-108306.02593608841,Infinity,0.0,-4.0,-1000.0];
try { v100.at(4096); } catch (e) {}
class C102 {
    static {
        this >> "Cl";
        super[this] = v67;
    }
    [Float32Array];
    static 3518;
    static 2147483648;
    static #valueOf(a106, a107) {
        v95[null] ||= a106;
        const v108 = v98.__proto__;
        try { v108(this, a106, v79, v108, this); } catch (e) {}
        return v98;
    }
    [v79] = v79;
    2;
    static #h = null;
    constructor(a111, a112, a113) {
        new Uint8Array(1024);
        new Int32Array(2);
        new Uint16Array(2277, 2277);
    }
    #a = null;
}
new C102();
const v124 = new C102();
v124[2];
new C102();
function F129(a131, a132, a133, a134) {
    if (!new.target) { throw 'must be called with new'; }
    ~a132;
}
function f136(a137, a138, a139, a140) {
    const o145 = {
        race(a143, a144) {
        },
        10: 1073741824,
    };
    for (const v147 in "1024") {
    }
}
const v148 = new Uint8Array();
try { v148.entries(); } catch (e) {}
function f150(a151, a152, a153, a154) {
    a153 === a153;
    a153++;
    const o157 = {
        ...v148,
    };
    function f158() {
    }
    function f159(a160) {
        const o166 = {
            "execution": "length",
            set b(a162) {
                function f163(a164) {
                    return f163;
                }
                class C165 extends f163 {
                }
            },
        };
    }
    function f170(a171, a172, a173) {
        const o174 = {
            "h": a173,
        };
        return o174;
    }
    f170(-3.9870582640049523, -3.9870582640049523, 1000000.0);
    const v176 = f170(1000000.0, -3.9870582640049523, 1000000.0);
    f170(-3.9870582640049523, -2.2250738585072014e-308, -3.9870582640049523);
    v176["yX"]();
}
for (let v180 = 0; v180 < 500; v180++) {
    f150(Uint8Array, 1, v180);
}
