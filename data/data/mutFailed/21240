Date.valueOf = Date;
const v1 = new Date();
function f2(a3) {
    a3 % v1;
    /a{12z}0N*/gdis;
    /3Amxyz{0,1}/iy;
    /(?!a)?a\1(?!(a))\1/i;
    return Date;
}
v1.valueOf = f2;
function f8(a9, a10) {
    try { new a9(Date, a9); } catch (e) {}
    a10.prototype = a10;
    const o23 = {
        "b": a10,
        set a(a13) {
            Reflect.construct(a9, [Reflect], Date);
            try {
                super.trimEnd(this);
            } catch(e18) {
            }
        },
        valueOf(a20) {
            this.toString = Date;
            try {
                this.fuck(a9, a20);
            } catch(e22) {
            }
            return this;
        },
    };
    o23.fuck = v1;
    const v24 = o23?.constructor;
    try { new v24(a9); } catch (e) {}
    return o23;
}
function f26() {
    "object" + -13;
    return Date;
}
f8.toString = f26;
const v30 = f8(f8, Date);
const v31 = f8(f8, Date);
const v32 = v31?.b;
let v33;
try { v33 = new v32(f8, v1, v31, f8, f8, Date, Date); } catch (e) {}
const v34 = f8(f8, f8, v1);
class C38 extends Date {
    static valueOf(a40, a41, a42, a43) {
        const v45 = Symbol.unscopables;
        v1[v45] = v45;
        try { a42(3, f8, v34, 3); } catch (e) {}
        return a41;
    }
    [v34] = v31;
    toString(a48, a49) {
        try { a49.toString(this); } catch (e) {}
        v34[a48] = this;
        Object.defineProperty(v1, "b", { configurable: true, enumerable: true, value: this });
        super.getUTCDay();
        return this;
    }
}
const v55 = new C38();
try { v55.setUTCFullYear(v55); } catch (e) {}
const v57 = new C38();
const v58 = new C38(v33, v31, v55);
function F59(a61, a62, a63) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a61;
    } catch(e64) {
    }
    try {
        this.h = a62;
    } catch(e65) {
    }
    try {
        this.d = a63;
    } catch(e66) {
    }
}
new F59(v58, v57, 128);
const v68 = new F59(v55, 3, v30);
new F59(v58, v68, -61246);
const v70 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
function f71() {
    let v73 = -16;
    Math.cosh(2147483649);
    const v76 = v73++;
    Math.acos(f2);
    const v78 = ~v76;
    const v79 = 2147483649 + 2147483649;
    Math.log2(v76);
    return v79 >>> v78;
}
v70[Symbol.toPrimitive] = f71;
function f84(a85, a86) {
    return f84;
}
const v88 = Symbol.toPrimitive;
Symbol.for(v88.description);
v70[v88] = f84;
const v92 = [3,-6,7268,-554513674,5,4294967295,861325878,17152,2147483647,5];
v92.toString = f84;
function f93(a94, a95, a96) {
    Object.defineProperty(a94, "toString", { enumerable: true, value: f93 });
    a96.c = a96;
    try { a94.toString(); } catch (e) {}
    a95[8] = a95;
    const o98 = {
        __proto__: a96,
    };
    o98.c = o98;
    return a95;
}
const v99 = f93(v92, v70);
v99.c = v70;
try { v99.toLocaleString(); } catch (e) {}
f93(v92, v99, v99)[9];
BigInt64Array.b = BigInt64Array;
new BigInt64Array(1073741824);
