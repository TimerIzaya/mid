const v0 = [];
new Set();
-1.3835342575377473e+308 + -1.3835342575377473e+308;
-1935049427 >>> -1935049427;
let v10 = -4294967297;
v10++;
class C12 extends Set {
    static {
        switch (-1.3835342575377473e+308) {
            default:
                this[Symbol.split] = v0;
                break;
        }
    }
    static e;
    7;
    static #n(a17, a18, a19, a20) {
        try {
            C12.valueOf = C12;
        } catch(e21) {
        }
        return v10;
    }
    #g = -1.3835342575377473e+308;
    16 = -1.3835342575377473e+308;
}
const v22 = C12.name;
C12.h = C12;
const v23 = new C12();
const t29 = v23[16];
new t29();
const v26 = new C12();
v26[16] = v26;
v23[16] = v26;
class C27 {
    static valueOf(a29) {
        try { new this(); } catch (e) {}
        a29[5];
    }
}
C27.length = v22;
const v32 = new C27();
const v33 = v32?.constructor;
try { new v33(); } catch (e) {}
let v35;
try { v35 = v32.propertyIsEnumerable(C27); } catch (e) {}
v10 || v35;
try { ("uVO").blink(); } catch (e) {}
try { ("uVO").lastIndexOf(v32, C27); } catch (e) {}
