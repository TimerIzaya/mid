-Infinity;
new Float32Array(127);
const v21 = Uint8Array.name;
const v22 = new Uint8Array(1);
function f23() {
    function f24() {
        const v27 = 2 !== 2;
        new Int16Array(2);
        const v30 = new Uint16Array();
        v30[1] = v30;
        return v27;
    }
    return 9007199254740990n;
}
v22.toString = f23;
v22[0] = v22;
const v33 = new Float64Array(v21);
v33.constructor = f23;
const v34 = v33?.constructor;
try { new v34(1, v22, Float32Array); } catch (e) {}
let v36 = 1089314970;
v36--;
-2 != -2;
new WeakSet();
new BigUint64Array(4096);
new BigUint64Array(3655);
new Float32Array(129);
function f52() {
    let v53 = -65535;
    const o92 = {
        next() {
            v53--;
            return this;
        },
        m(a57) {
            try { this.next(); } catch (e) {}
            const o59 = {
            };
            o59.b = o59;
            try {
                o59.e = v53;
            } catch(e60) {
                const v64 = new BigUint64Array();
                const v66 = v64.__proto__;
                v66[512] %= v66;
                const v68 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v68, o59);
            }
            3938 + 3938;
            Int8Array.e = Int8Array;
            const v73 = new Int8Array(3938);
            let v74 = 3;
            let v75 = 0;
            for (let i = 0; i < 5; i++) {
                [...v74] = v73;
                -(v75++);
            }
            const o78 = {
            };
            o78.b = v33;
            o78.b = o78;
            try {
                const o79 = {
                };
                function f80() {
                    return 10;
                }
                function f81(a82) {
                    const v86 = (o79 * a82) & 2147483648;
                    2147483648 || o79;
                    v53 && 2147483648;
                    Math.imul(~2147483648, v86);
                }
                Object.defineProperty(o79, "h", { writable: true, enumerable: true, get: f80, set: f81 });
                o79.h = o79;
            } catch(e91) {
            }
        },
    };
    return o92.m(f52, v53, v53);
}
f52();
const v97 = new Uint16Array(1412);
v97.lastIndexOf();
