let v5 = -65331;
v5++;
function f7(a8, a9, a10, a11) {
    a10 === a10;
    a11 >>> a11;
    const v14 = a8 >>> a8;
    v14 * v14;
    Uint8ClampedArray();
    Array.prototype;
    Reflect.construct(Uint8ClampedArray, [[1.0,-6.818981069405753e+307]]);
    a9 - a9;
    a10--;
    const o30 = {
        __proto__: a11,
        588: a10,
        "b": v14,
        get e() {
            try {
                super.toString(this, 5.0, a8);
            } catch(e29) {
            }
            return 9007199254740991;
        },
        "f": a9,
    };
    return o30;
}
f7.e = f7;
try { f7(v5, 9007199254740991, 0.9076896455338038, 9007199254740991); } catch (e) {}
const v32 = f7(-711778154, v5, 0.9076896455338038, v5);
v32.c = v32;
const v33 = f7(9007199254740991, 9007199254740991, 0.9076896455338038, v32);
v33.f;
v33[588];
v5--;
f7(9007199254740991, v5, -846800.4311228807, v33);
("resizable")[6];
let v43 = -1;
v43--;
Math.tan(v43);
