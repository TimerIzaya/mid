function f0() {
    let v1 = "-1";
    const v5 = new Uint16Array(821);
    new Uint8Array(v5);
    const o22 = {
        "e": -4,
        set a(a10) {
            const v11 = v1++;
            try { new a10(this, v11, this); } catch (e) {}
            -9223372036854775808n <= 2.220446049250313e-16;
            const v16 = [];
            [v16,v16,v16,v16,v16];
        },
        get h() {
            try {
                ("toPrimitive").padStart(-141157056);
            } catch(e21) {
            }
            return "toPrimitive";
        },
    };
    return o22;
}
const v23 = f0();
const v24 = f0();
const v25 = f0();
9n in v24;
Math.asin(v24);
Math.asin(v25);
const v35 = new Float64Array();
const v37 = new BigInt64Array();
try {
    v35.reduce(v37);
} catch(e39) {
}
const v40 = Math.atanh(v25);
Math.trunc(v24);
function F43(a45, a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -4294967296n;
    } catch(e48) {
        const t42 = [8.360030709333259,416819.70671931445,1000.0,-1.0513464134302462e+307,2.2250738585072014e-308,-999.1393293497049];
        t42.length = 1;
        async function f51(a52, a53, a54) {
            return a52;
        }
    }
    function F55(a57) {
        if (!new.target) { throw 'must be called with new'; }
        function f58() {
            return f58;
        }
        try { BigInt64Array(BigInt64Array); } catch (e) {}
    }
    F55.arguments = F55;
    const v65 = this << "toUpperCase";
    const v66 = v65 ^ v65;
    let v67;
    try { v67 = v66(v66, this, v66, v66, v65, this); } catch (e) {}
    v67[v66] <<= 1.1922093890401552e+308;
    const o71 = {
        get a() {
            eval("-9007199254740990");
            return 6;
        },
    };
}
const v72 = new F43(v24, v23, v25);
const v74 = 4294967296n * 4294967296n;
v74 | v74;
function f76(a77, a78) {
}
const v79 = new F43(v23, 9n, v25);
new F43(v25, -268435456n, v24);
class C83 extends Date {
}
Date / Date;
const v85 = [-6.078081144782104,3.0,-1000.0,4.739392359408212,-1.3763335971087312e+307,5.0,0.8267200417626637,276.24411996178765,2.2250738585072014e-308];
for (let v86 = 0; v86 < 25; v86++) {
    v85["p" + v86] = v86;
}
const v93 = new Uint32Array(65536);
const v96 = new Date(Uint32Array);
v96.getSeconds();
const t84 = 824983.4173693366 === v72 ? 824983.4173693366 : v72;
t84[6] &= -3.0;
let v100 = f76(-4294967296n, v40);
let v103 = 257;
f0 + v100;
Math.abs(v79);
--v100;
Math.sinh(f0);
v103++;
Math.cos(v100);
parseInt([2.220446049250313e-16,-Infinity,NaN,-1e-15,-4.0,-2.2250738585072014e-308,-742.8087895557678,-4.0,Infinity,655658.0990783614]);
for (const v114 in v93) {
    this.escape();
}
