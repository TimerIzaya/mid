const v0 = [-150470449,10000,4294967297];
const v1 = [1073741824,4,-1458170459,-65537,1136585038,268435439,6];
const v2 = [-9223372036854775808,7,-403089244,35455,-1599094106];
class C3 {
    #g = v0;
    get f() {
        let v4 = this;
        v4 = C3;
        for (let v6 = 0; v6 < 32; v6++) {
            v1["p" + v6] = v6;
        }
        try {
            super.o(v1, v2, v4, v2);
        } catch(e10) {
        }
        try {
            v4.#g = v0;
        } catch(e11) {
        }
        return v1;
    }
}
new C3();
const v13 = new C3();
const v14 = new C3();
class C15 {
    static get a() {
        try {
            this.fuck(2, 1000.0, this, v2);
        } catch(e20) {
        }
        return v1;
    }
    static #f;
    #b = C3;
}
new C15();
const v22 = new C15();
const v23 = new v14();
function F24(a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        function f29(a30, a31, a32) {
            for (let i = 0; i < 5; i++) {
                const v34 = Symbol.unscopables;
                v14[v34] = v22;
                const v38 = ~(-Infinity);
                +this;
                -(v34 || v38);
                Math.acosh(-65537);
                const o43 = {
                };
                a26.h = this;
            }
            f29();
            return v23;
        }
        f29(F24, f29, f29);
    } catch(e46) {
        v13[5];
        try {
            new C15();
        } catch(e49) {
        }
    }
}
new F24();
