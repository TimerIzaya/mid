function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = -29076;
    } catch(e3) {
    }
    try {
        this.e = -29076;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
new v6();
function f8(a9) {
    const o14 = {
        [a9]: v6,
        __proto__: v5,
        [v6]: v6,
        ...v6,
        get a() {
            return -9007199254740992;
        },
    };
    return o14;
}
const v15 = f8(v5);
v15.d = v15;
f8(v5);
f8(v5);
new Map();
const v20 = [];
function F24(a26, a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    try { a29.strike(); } catch (e) {}
    const v31 = a26.strike();
    try { v31.strike(); } catch (e) {}
    const v33 = this.constructor;
    v33.d = v33;
    try { new v33(a29, v20, a27, a29); } catch (e) {}
    a27[2];
}
try { new F24(v20, f8, v20, F0); } catch (e) {}
new F24(F24, "pop", "ceil", "isConcatSpreadable");
