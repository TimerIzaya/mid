function f3(a4) {
    const o18 = {
        valueOf(a6) {
            let v5 = this;
            v5 |= v5;
            try {
                a4.g = a4;
            } catch(e7) {
            }
            delete a4?.[128];
            return -596376.7058071478;
        },
        "f": -5392n,
        get d() {
            const o16 = {
                "execution": "sync",
                "type": "major",
            };
            gc(o16);
            return -5392n;
        },
    };
    return o18;
}
f3(-9223372036854775808n);
f3(-5392n);
const v21 = f3(2011603960n);
new WeakSet();
const v28 = [4096,-1746469487,11136,1024,127,-994764255,273312477,9007199254740992,6,8];
const v29 = [3,38004,-14,8963,1024,9007199254740991,-11,-9223372036854775807];
[2147483648,-12,9007199254740991,19830];
function f31() {
}
new Int8Array();
const v37 = new Float32Array(1000);
const v40 = new Uint8Array(58);
v21 | v40;
try {
    v28.length = -4294967296;
} catch(e42) {
}
function F43() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        delete v29?.length;
        class C52 extends Uint16Array {
        }
        const v53 = f31();
        const v54 = Array(19793);
        for (const v55 of v54) {
            break;
            const v56 = this.e;
            Object.defineProperty(v54, "length", { configurable: true, enumerable: true, value: v53 });
            v56 ^ v28;
            new Array(9);
        }
        const v61 = [v54,v54,v54];
        new this();
        const v65 = [];
        for (let v66 = 0; v66 < 32; v66++) {
            this["p" + v66] = v66;
        }
        for (let v69 = 0; v69 < 50; v69++) {
        }
        v65[65536] %= 256;
        [v61,v61,v61];
        const v71 = [];
        try {
            v37.length = 1;
        } catch(e73) {
        }
        v71 >= Uint16Array;
    } catch(e76) {
    }
}
new F43();
new F43();
