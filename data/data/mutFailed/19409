class C3 {
    static ["undefined"] = 2.2250738585072014e-308;
    constructor(a5, a6) {
        a5.prototype = a5;
        a6 + a6;
        try {
            this.valueOf = a6;
        } catch(e8) {
        }
    }
    e;
    ["undefined"] = "undefined";
    5;
}
C3.length;
const v10 = new C3(C3, -1e-15);
const v11 = new C3("undefined", v10);
const v12 = new C3(v11, v11);
1 * 1;
const v17 = [735.0257666748869,0.8927745243580386];
function f18() {
}
const o19 = {
};
-4096 != -4096;
function F22(a24, a25, a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    268435439n ^ 268435439n;
    for (let v32 = 0; v32 < 100; v32++) {
        const o36 = {
            6: undefined,
            "d": undefined,
            [268435439n]: 2105444095n,
            __proto__: o19,
            "g": v12,
            "b": -4294967296n,
            "arguments": this,
            valueOf(a35) {
                return a35;
            },
        };
        o36[1] = o36;
    }
}
F22.caller = F22;
const v43 = new F22();
const v44 = v43?.constructor;
try { new v44(f18, F22, v17, F22); } catch (e) {}
1 >> 1;
new F22();
new F22();
const v51 = [Infinity,-2.0,2.220446049250313e-16];
[-971331.1004055343,0.6863590731415691,-1000000.0,-2.0];
-1073741825;
function f57() {
    return v17;
}
function F58(a60, a61) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a60;
    } catch(e62) {
    }
    try {
        this.c = 503467484;
    } catch(e63) {
    }
    try {
        this.d = v51;
    } catch(e64) {
    }
}
F58.caller = F58;
