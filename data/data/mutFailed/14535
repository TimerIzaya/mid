const t0 = 3377;
const v2 = new t0(3377);
4096 > 4096;
const v6 = new Uint8ClampedArray(4096);
try { v6.slice(v2, v6); } catch (e) {}
BigInt64Array.BYTES_PER_ELEMENT;
new Uint16Array(538);
/[\c!]/dms;
/Slv3/gdiy;
/\P{Any}/vi;
function F15(a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    const v20 = this.constructor;
    let v21;
    try { v21 = new v20(); } catch (e) {}
    this.e = v21;
}
function f22() {
    for (let v23 = 0; v23 < 5; v23++) {
        new F15();
    }
    return F15;
}
%PrepareFunctionForOptimization(f22);
const t24 = 3377;
t24();
%OptimizeFunctionOnNextCall(538);
f22();
