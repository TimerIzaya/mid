const v1 = new WeakMap();
Math.sinh(128);
class C6 {
}
1000.0 + 1000.0;
function f10() {
    return 0.9017302756668679;
}
function F14(a16, a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    try { a16.call(v1); } catch (e) {}
    try {
        this.f = 0.0;
    } catch(e21) {
    }
    ([-1440504730,15059,-128,65536,33714,-51192,-268435456,37915]).__proto__;
    new Float32Array(Float32Array, Float32Array, Float32Array);
    URIError(4, 9);
    try {
        this.g = a16;
    } catch(e30) {
    }
    try {
        class C33 {
            ["toString"];
            static #n(a35, a36) {
            }
            static p(a38, a39) {
                super.b = 536870889;
                function f40() {
                    return C33;
                }
            }
        }
        this.d = f10;
    } catch(e41) {
    }
}
const v42 = new F14(WeakMap, 1000.0, 0.0, 0.9017302756668679);
try { v42.d(); } catch (e) {}
new F14(v1, 1000000.0, -1e-15, 0.0);
const v45 = new F14(F14, -1e-15, 1000.0, 0.9017302756668679);
class C49 {
    set e(a51) {
        const v52 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
        function f53() {
            let v55 = Float64Array;
            v55.toString();
            v55 = a51;
            const v57 = v52.length;
            v55 ^= v1;
            const o61 = {
                "execution": "sync",
                "type": "minor",
            };
            gc(o61);
            const v63 = v57 >>> v57;
            v63 / v63;
            const o69 = {
                toString(a66, a67) {
                    F14 && v55;
                    return a51;
                },
            };
            o69.toString();
            let v71 = -268435456;
            v71--;
            const o73 = {
                "e": -4294967295,
                "e": v71,
            };
            return a51;
        }
        return f53();
        Math.fround();
        Math.ceil();
    }
    m(a79) {
    }
    e;
}
let v80;
try { v80 = C49.apply(-1000000000.0, 1000.0); } catch (e) {}
const v81 = new C49();
let v82;
try { v82 = v81.m("number"); } catch (e) {}
const v83 = new C49();
new C49();
let v85 = ["number","ignoreCase",v81];
const v86 = [v83,"number","R"];
try { v86.indexOf(C49); } catch (e) {}
[v86,C49,C49,v85];
const v92 = ("NN")["9"];
let v93;
try { v93 = v45.o(v80); } catch (e) {}
v82[v93] = C6;
const v94 = f10();
new BigUint64Array(3);
new BigUint64Array(512);
const v103 = new Float64Array(943);
C49[0] >>= v92;
let v104;
try { v104 = v92(v83, v81, "string"); } catch (e) {}
v85 = v104;
for (let i106 = 0; i106 < 7; i106++) {
    (v82 != "ignoreCase") < v94;
    v103[Symbol.asyncIterator];
}
let v121 = 0;
while ((() => {
        7 !== 7;
        const v124 = v121 < 7;
        !v124;
        return v124;
    })()) {
    v121++;
}
