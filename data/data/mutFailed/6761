const v1 = new WeakMap();
function F2(a4, a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v6 = [];
        [v6,v6,v6,v6,v6];
        function f8(a9) {
            return a9;
        }
        class C10 extends f8 {
        }
        this.a = a4;
    } catch(e11) {
        function f13() {
            return "h";
        }
        new Uint32Array();
    }
    try {
        Symbol.iterator;
        65537 == 4096n;
        this.f = v1;
    } catch(e21) {
    }
}
const v22 = new F2(WeakMap, WeakMap);
const v23 = new F2(F2, v22);
Math.LOG10E = Math;
Uint8ClampedArray.e = Uint8ClampedArray;
AggregateError("4294967297");
const v29 = new F2(WeakMap, v23);
const v32 = new Int16Array();
const v35 = new BigUint64Array(2, 256);
v32["4294967297"](v35, 256, 2);
const v37 = [v29];
const v40 = new Uint8ClampedArray(4);
const v42 = new Int8Array(v40);
v42.lastIndexOf();
[WeakMap,F2,WeakMap,v23,[v37,v37,v1,v37]];
/[a-b-c]FA*/dimy;
/a{0,1}?/gvdmy;
/((((.).).).)/gudimy;
function F49() {
    if (!new.target) { throw 'must be called with new'; }
}
const v51 = new F49();
const v52 = new F49();
new F49();
let v58;
try {
const t0 = "object";
v58 = t0(v51, "number", F49);
} catch (e) {}
function f59(a60) {
    return v58;
}
class C61 extends f59 {
    [v52] = "E";
    [v51] = -14n;
    268435441 = -14n;
}
const t61 = "object";
t61[v52] &= v58;
