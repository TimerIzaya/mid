class C3 {
    set f(a5) {
        Object.defineProperty("size", this, { writable: true, configurable: true, value: this });
        let v7;
        try { v7 = this["filter"]("filter"); } catch (e) {}
        const v10 = v7 && "size";
        Math.cosh(this);
        const v12 = this % "size";
        Math.cbrt(v10);
        Math.atan(129);
        -v12;
    }
    static 8 = 5031;
    static 4 = -9007199254740990;
}
const v16 = new C3();
new C3();
const v18 = new C3();
class C19 {
    set c(a21) {
        a21?.[0];
        new Int8Array(3491);
        new Float32Array(27);
        new Int8Array(4);
    }
    static [5031];
    [v18];
    static 4;
}
const v32 = new C19();
const v33 = new C19();
const v34 = new C19();
const v35 = [v34,5031,v32,v16];
const v36 = [C3];
[-9007199254740990,-9007199254740990,v18,v33,5031];
new Uint16Array(2341);
new Float64Array(2300);
new Float32Array(311);
const v49 = new Uint8Array(128);
let v50;
try { v50 = v49.reduce(); } catch (e) {}
function f51() {
    delete v49[2];
    const v55 = -613705910 ^ Uint16Array;
    Math.round(Uint16Array);
    let v57 = Uint16Array >> Uint16Array;
    ++v57;
    const o105 = {
        m(a62) {
            a62.c = v16;
            try { a62.next(a62, 1261703539); } catch (e) {}
            a62.c = a62;
            a62.h = a62;
            const o64 = {
            };
            o64.e = Float64Array;
            o64.h = o64;
            Object.defineProperty(o64, -613705910, { writable: true, get: f51 });
            const v65 = v35 instanceof C3;
            const o66 = {
            };
            try {
                o66.d = v65;
            } catch(e67) {
            }
            try {
                const o68 = {
                };
                o68.d = v65;
                o68.h = v55;
            } catch(e69) {
            }
            try {
                const o70 = {
                };
                o70.d = v65;
                o70.h = v55;
                o70.c = a62;
            } catch(e71) {
            }
            try {
                const o72 = {
                };
                o72.d = v65;
                o72.h = v55;
                o72.c = v65;
            } catch(e73) {
            }
            o64.h = o64;
            function f74(a75, a76, a77) {
                return o64;
            }
            f74.caller = f74;
            try {
                o64.e = -65535;
            } catch(e78) {
                const v81 = new Uint8ClampedArray(798, -65535, e78);
                new Uint8ClampedArray(798, ...v81, o64);
            }
            try {
                const o83 = {
                };
                o83.e = v36;
                o83.e = 1261703539;
            } catch(e84) {
            }
            let v86;
            try { v86 = ("EV").link(); } catch (e) {}
            let v87 = 0;
            class C88 {
            }
            const v91 = new Int8Array(3938);
            let v92 = 3;
            let v93 = 0;
            let v94 = v93 >> v93;
            for (let i = 0; i < 5; i++) {
                [...v92] = v91;
                v93++;
            }
            const o96 = {
            };
            try {
                let v97 = 0;
                for (let i = 0; i < 5; i++) {
                    ({"c":v50,"d":v87,...v94} = v86);
                    try {
                        o64.fuck(128, a62);
                    } catch(e99) {
                    }
                    v97++;
                    v97 < 5;
                }
                const o103 = {
                };
            } catch(e104) {
            }
            return Int8Array;
        },
    };
    o105.m(o105);
    return 128;
}
f51();
f51();
