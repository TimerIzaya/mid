class C3 {
    a = "-21062";
    static {
        let v4 = this;
        const o5 = {
        };
        try {
            o5.b = v4;
        } catch(e6) {
        }
        try {
            const o7 = {
            };
            o7.b = v4;
            o7.a = "bigint";
        } catch(e8) {
        }
        try {
            --v4;
            ~"-21062";
            ~(-v4);
            const o16 = {
            };
            o16.b = v4;
            o16.a = "bigint";
            o16.h = v4;
        } catch(e17) {
        }
        try {
            const o18 = {
            };
            o18.b = v4;
            o18.a = "bigint";
            o18.e = "bigint";
        } catch(e19) {
        }
    }
}
const t38 = "-21062";
const v20 = new t38();
const v22 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v23 = [601759695];
const v24 = [1073741824,1073741823,1376142744,1073741825];
function f26(a27, a28, a29, a30) {
    function f32() {
        const o58 = {
            "e": -4294967295,
            m(a37, a38, a39, a40) {
                Math.asinh(f32);
                Math.trunc(a28);
                Math.max(-2401);
                let v46 = a28 >> a39;
                Math.abs(a28);
                --v46;
                return f32 | -2401;
            },
            ...v22,
            ..."Vre",
            "c": a30,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a51, a52) {
                return v24;
            },
            ..."Vre",
            4: "Vre",
            [522675525n](a54, a55, a56) {
                return f26(-268435456, f26, a55, a54);
            },
            "b": "-1073741824",
            "c": -268435456,
            5: -4294967295,
            6: -268435456,
        };
    }
    f32();
    %OptimizeFunctionOnNextCall(arguments);
    let v61;
    try { v61 = v24["find"](..."find", a30, ...v23, ...v24, ...522675525n); } catch (e) {}
    v61 <= a29;
    return arguments;
}
const v63 = new C3();
const v64 = new C3();
class C65 extends C3 {
    [C3] = v63;
    constructor(a67, a68, a69, a70) {
        super();
        try {
            a69.b = a70;
        } catch(e71) {
        }
        try {
            new C3();
        } catch(e73) {
        }
    }
}
const v74 = new C65("bigint", v64, v20, v63);
const v75 = new C65(v63, v20, v20, v74);
new C65(C65, C65, v75, v75);
const v77 = v74[223];
try { v77.p(v74, v22, v22, v22); } catch (e) {}
class C79 {
}
const v81 = new Float64Array();
const v82 = v81.buffer;
try {
    v82.resize(Float64Array);
} catch(e84) {
}
new Date(128, 1000.0);
