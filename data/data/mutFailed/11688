let v2 = "preventExtensions";
const v3 = [-61022,-2147483649,6,55969994,-1024,8,65535];
const v4 = [-2115122926,-570653996];
const v5 = [-2147483647,-2,1875574383,-1024,660701333];
let v7 = 3;
v7++;
1373367000 >>> 1373367000;
new Set();
const o16 = {
    "execution": "async",
    "type": "minor",
};
gc(o16);
const v20 = -1073741824 >>> -1073741824;
ReferenceError(-1073741824, 9007199254740991n);
try { v20.blink(); } catch (e) {}
function f25(a26, a27, a28, a29) {
    const o33 = {
        [a26](a31, a32) {
        },
    };
    return a26;
}
const v37 = new BigInt64Array(4046);
function f38(a39, a40) {
    Math.exp([-671138503,-536870912,-9007199254740991,-9007199254740992,-268435456,128,2023752111,-970019998,8839,6] | [1073741824,-46456,536870888]);
    let o46 = {
    };
    [,...o46] = v37;
}
try { f38(v3, 1373367000); } catch (e) {}
const t31 = "minor";
new t31(16);
Symbol.for(Symbol.iterator.description);
function F58(a60, a61) {
    if (!new.target) { throw 'must be called with new'; }
    a60 >>> a60;
    a61 % a61;
    a61.__proto__.toLocaleString(F58, 1000000000.0, 1000000000.0);
}
const v66 = new F58(-2.220446049250313e-16, 1000000000.0);
const v67 = v66?.constructor;
let v68;
try { v68 = new v67(v37, v66); } catch (e) {}
const v70 = new Uint16Array(10);
v70[2];
new BigInt64Array(114);
let v75 = 0.0;
v75++;
const v77 = [v75,v75];
v77.g = v77;
const o84 = {
    "b": v5,
    "type": v2,
    "c": -11,
    [4046](a79, a80) {
    },
    [-2.220446049250313e-16](a82, a83) {
        const t58 = "42776";
        t58[v4] %= -1073741824;
        v68[BigInt64Array] -= 10;
        v2 = "42776";
        return a82;
    },
    __proto__: v77,
};
o84.push(v75);
const v86 = [-1579053531,3,9,9007199254740992,11,-463450370,-485118928];
function F87(a89) {
    if (!new.target) { throw 'must be called with new'; }
    const v91 = Array?.constructor;
    try { new v91(114); } catch (e) {}
    Array(4087);
    for (const v95 of 4087) {
    }
}
new F87(v86);
