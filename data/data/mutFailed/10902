const v1 = new Date();
function f5(a6) {
    const o13 = {
        p(a8, a9, a10, a11) {
            try { ("d").matchAll(a6); } catch (e) {}
            [a8,,a11] = a8;
            return v1;
        },
        "c": a6,
        ...a6,
        "a": "d",
        "b": a6,
        __proto__: "7dY",
        512: "d",
        ["S8c"]: "7dY",
        ..."d",
        34: "7dY",
        "e": Date,
    };
    return o13;
}
const v14 = f5(Date);
const v15 = f5(Date);
const v16 = f5(f5);
class C17 extends Date {
    static d = "7dY";
    constructor(a19, a20) {
        super("S8c");
        try {
            a19.c = this;
        } catch(e21) {
        }
    }
    ["7dY"];
    static c = f5;
}
new C17(v14, Date);
new C17(v16, v15);
new C17(v14, v14);
new Map();
new Map();
function f31(a32, a33, a34, a35) {
    const o36 = {
    };
    return o36;
}
const v37 = f31("string", "m");
const v38 = f31("m", "m");
let v41 = 129;
v41++;
new Map(v41);
try { new BigInt64Array(v38, 16, Map); } catch (e) {}
new BigInt64Array();
~-4294967297n;
const v52 = [601759695];
try { v52.sort(); } catch (e) {}
[1073741824,1073741823,1376142744,1073741825];
function f55(a56, a57, a58, a59) {
    function f61() {
        -(-268435456 + -268435456);
    }
    f61();
    new Int8Array();
    arguments.buffer;
    %OptimizeFunctionOnNextCall(f61);
    try { ("find").strike(); } catch (e) {}
    try {
    } catch(e71) {
    }
    const o72 = {
    };
    o72.g = -4294967297n;
    const o73 = {
    };
    o73.g = -4294967297n;
    o73.d = v37;
}
f55();
%PrepareFunctionForOptimization(f55);
f55();
%OptimizeFunctionOnNextCall(f55);
f55();
