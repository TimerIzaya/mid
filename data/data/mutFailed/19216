class C1 {
}
function f2() {
    for (let v3 = 0; v3 < 5; v3++) {
        v3 * v3;
        try { ("p").substring(C1); } catch (e) {}
    }
    return f2;
}
class C9 {
    constructor(a11, a12) {
        Object.defineProperty(a11, a12 in this, { writable: true, enumerable: true, value: this });
    }
    static m(a16, a17) {
        a17[a17] = 4;
        const o26 = {
            [-4294967297n](a20, a21, a22, a23) {
                eval();
            },
        };
        a16 && this;
        return -5.273824954306776;
    }
}
const v28 = new C9(-5.273824954306776, 4);
const v29 = new C9(-5.273824954306776, -5.273824954306776);
const v30 = new C9(-5.273824954306776, v29);
class C31 {
    13;
    static 788001026 = v30;
    static set d(a33) {
        function F34() {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.b = -1052649622;
                const v39 = -(-7);
                Math.tan(v39 ** v39);
            } catch(e42) {
            }
        }
        const o45 = {
            "maxByteLength": 257,
        };
        const v47 = new ArrayBuffer(6, o45);
        new DataView(v47);
    }
}
try { new f2(-12, v28, v29, C1); } catch (e) {}
Math.log1p(268435456);
const o62 = {
    valueOf(a55, a56, a57) {
        function f58(a59) {
            return a59;
        }
        Worker(f58);
        return a55;
    },
};
const v63 = [-1000.0,351.94489669740733,5.8623101046484845,-160881.40611645568,0.6390643538224362,9.13027568774574];
try { v63.slice(o62); } catch (e) {}
new C31();
new C31();
Reflect.construct(Uint8ClampedArray, [Uint8ClampedArray]);
const v71 = [2.220446049250313e-16,-2.0,9.472378156545009,0.0,1e-15,0.3751557433004281,0.0,-474740.46049005154];
const o77 = {
    set h(a73) {
    },
    __proto__: v71,
    o(a75, a76) {
        return this;
    },
};
new C31();
const v81 = new Float64Array(5);
const v82 = new Float64Array(v81);
v81 ** v82;
