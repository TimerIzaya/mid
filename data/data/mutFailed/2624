function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -15;
    } catch(e3) {
    }
    function F4(a6, a7, a8) {
        if (!new.target) { throw 'must be called with new'; }
    }
    class C9 {
    }
    async function f10(a11, a12, a13, a14) {
        await C9;
        return a13;
    }
    f10();
    try {
        this.h = -15;
    } catch(e17) {
    }
}
let v18 = new F0();
const v19 = new F0();
const v20 = new F0();
class C21 extends F0 {
    d = v20;
    set e(a23) {
        Math.fround();
        Math.ceil();
    }
    valueOf(a28) {
        let v27 = this;
        a28[a28] = v20;
        (v18 = v19).__proto__;
        v27 ||= v19;
        return -8n;
    }
    1 = v20;
    #d = v19;
}
new C21();
const v34 = new C21();
const o37 = {
    [9007199254740992n]: -43292n,
};
new C21();
[-1000000000000.0];
const v40 = [-70.94810869193986,NaN,0.6289415244693685,2.2250738585072014e-308,-5.0];
const v41 = [1e-15,2.2072137060827697e+307,-1.7976931348623157e+308,0.8877785841290337,-4.0,417180.05176488636,4.0,-4.0];
class C43 extends C21 {
    set b(a45) {
        a45++;
        let [v47,...v48] = v41;
    }
    [v34] = C21;
    set d(a50) {
        function f53(a54, a55) {
            return f53;
        }
        const o58 = {
            "type": "function",
        };
        new Worker(f53, o58);
        let v61 = "-185650492";
        const v64 = new BigUint64Array();
        const v66 = new Set();
        function F67(a69, a70) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = a69;
            } catch(e71) {
                for (let [v72,v73] of a69) {
                    class C74 {
                    }
                    v61 = e71;
                    v72 ^= v64;
                    C74 != a69;
                    const v76 = new C74();
                    const t78 = v76.g;
                    t78.length = 1;
                }
            }
            try {
                this.h = v66;
            } catch(e79) {
                this.toString();
                ("E")[2555];
            }
            try {
                const v82 = v66[this];
                try {
                    new F67(v82, -2046072084n);
                } catch(e85) {
                }
                const o87 = {
                };
                const v89 = new SharedArrayBuffer(1024, o87);
                new BigInt64Array(v89);
                this.b = Set;
            } catch(e92) {
            }
        }
        this[v34];
        super.d = this;
    }
    [v34];
    constructor(a95, a96) {
        a96[2];
        /Ia[a]/uims;
        let v99 = /W(jy2)/udy;
        v99.flags;
        const v101 = /(u4(?:a?)*)/gudimsy;
        const v104 = new Uint8Array(v101, v18);
        const v106 = new Uint32Array();
        function f107(a108, a109, a110, a111) {
            const o115 = {
                ...v104,
                n(a113, a114) {
                    v106[a108] = v106;
                },
            };
            return o115;
        }
        for (let v116 = 0; v116 < 625; v116++) {
            f107(Uint8Array, 2, v116);
        }
        v99 = v101;
        for (let v118 = 0; v118 < 25; v118++) {
            v40["p" + v118] = v118;
        }
    }
    static 1073741823;
}
new C43();
new C43();
new C43();
const v124 = [0.38057796469390925,-3.0,-518688.06248081743,-2.0,107.8968501375,-400463.65452600387,-222.36741891958593,-1000.0,-5.415934286194992,1000000000000.0];
v124.concat([-2,-2,-2,-2,-2], [v124,-2], true);
