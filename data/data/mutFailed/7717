const v1 = [null];
const v3 = [[null,v1]];
const v4 = [-128,-9007199254740990];
[-9223372036854775807,39389,23275,-8,-985386807,26866,-6070];
const v6 = [1418237443,-1111252003,-536870912,536870887,257,-61931,-268435456,64];
let v7;
try { v7 = v6.splice(v6, v1); } catch (e) {}
class C8 {
    static #m(a10, a11, a12) {
        a10 >= v1;
        let v16 = -1;
        +v16;
        v16++;
        -1000000000.0 || -1000000000.0;
        return C8;
    }
    [v4];
}
try { v7(); } catch (e) {}
new C8();
const v24 = v3?.constructor;
try { new v24(); } catch (e) {}
new C8();
new C8();
const v28 = [9007199254740991,255];
[811200109,-1507601650,10000,-1547857175,4096,14,5,10];
const v30 = [3,-1313911739,27493,-36832,1073741823,1000,-58671,-4294967295,1526361240,8];
-128n / -128n;
let v33 = 675989120n;
31702n + 31702n;
const v36 = [8.858723857900515,Infinity,-1.1848494944569402e+308,383427.98921984946];
v36[1];
1426835891n >> 1426835891n;
class C42 {
    set b(a44) {
        const v45 = this?.constructor;
        try { new v45(); } catch (e) {}
        try { v28(); } catch (e) {}
        v30();
    }
}
v33.b = C42;
const v50 = new C42();
v50.b = v36;
++v33;
