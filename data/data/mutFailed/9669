const v0 = [-1073741824,-4096,956436042,536870889,1791491987];
const v1 = [536870912,2887,-42703,-3,268435456,9007199254740991];
const v2 = [256,-1073741824,-13,268435439,65536,-8,13,9007199254740991,0,-4294967296];
function f3() {
    return f3;
}
const v4 = [f3,v0,f3,v1];
[f3,v0,v0,v4];
const v6 = [v1,v1,v4];
function f7(a8, a9, a10) {
    const o18 = {
        set c(a12) {
            const o16 = {
                "execution": "async",
                "type": a12,
            };
            gc(o16);
        },
    };
    return o18;
}
v1(v6, v4, v1);
v1(v0, v6, v6);
f7(v0, v0, v2);
function f25() {
    return 2720;
}
f25.valueOf = f25;
function F26(a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    const v30 = this.constructor;
    try { new v30(a28, 256); } catch (e) {}
    -a28;
    a29--;
    this.h = f25;
}
new F26(65537, f25);
const t37 = 256;
const v35 = new t37();
v35.toString = f25;
class C36 extends F26 {
    #h;
    3120 = v1;
    #g = v35;
    valueOf(a38, a39, a40) {
    }
    [v35] = 256;
}
new C36();
new C36();
new C36();
