class C13 {
    constructor(a15) {
        function f16() {
            function f17() {
                class C18 {
                }
                const v19 = new C18();
                class C20 extends C18 {
                    [v19];
                }
                return a15;
            }
            return f17;
        }
        function f21(a22) {
            const v23 = [];
            class C24 {
                g = C24;
                #e = v23;
            }
            const v25 = new C24();
            const v26 = [v25];
            const v27 = this.constructor;
            try { new v27(v26, v23); } catch (e) {}
        }
        Object.defineProperty(this, "constructor", { writable: true, enumerable: true, get: f16, set: f21 });
        const v29 = this.constructor;
        try { new v29(); } catch (e) {}
        ("size").c;
        const v32 = ("size").h;
        ("size").length;
        let v34 = v32?.[7];
        [...v34] = "size";
        /a\bc/vd;
    }
}
const v36 = new C13();
function f37(a38, a39, a40) {
}
const o41 = {
};
const v42 = [-1459101957,512,-10,2112556941,-2147483647,-33410];
const v43 = [1000,13,65536,-3609,536870888,536870889,268435456,9,0,-1688685946];
[-9007199254740990,-65536,16,1138915906,-8,10];
function F45(a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = v36;
    try {
        this.g = a47;
    } catch(e49) {
    }
    try {
        this.f = a48;
    } catch(e50) {
    }
}
new F45(1203685109, v42);
new F45(1203685109, v42);
new F45(127, v43);
function F57(a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
    function F61(a63, a64, a65, a66) {
        if (!new.target) { throw 'must be called with new'; }
        for (let v67 = 0; v67 < 100; v67++) {
            const o70 = {
                valueOf(a69) {
                },
            };
            function f71(a72, a73, a74) {
                const o76 = {
                    "a": o70,
                    get d() {
                    },
                };
            }
            f71(f71, undefined, F61);
        }
    }
    new F61();
}
const v79 = new F57(157382.34669750673, F57);
new F57(-1000.0, v79);
class C81 {
}
new C81();
class C83 extends C81 {
    constructor(a85, a86, a87) {
        super();
        const o91 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o91);
    }
}
new C83();
[-4.0,-187.33463400009316,266767.34688113444,551749.9695726107];
/(?:a*)+q(?<a>.)/guds;
for (let i98 = 0, i99 = 10; i98 < i99; i99--) {
}
[-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
[601759695];
function f110(a111, a112, a113, a114) {
}
new BigInt64Array();
new BigUint64Array(16, BigUint64Array);
f110();
%OptimizeFunctionOnNextCall(f110);
