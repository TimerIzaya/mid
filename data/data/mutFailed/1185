const v2 = new BigInt64Array(127);
const v5 = new Int16Array(56);
new Uint16Array(1);
class C9 {
    static #toString(a11, a12, a13) {
        [1073741824,-256,1793392668,64];
        const v15 = [-9007199254740992,4,16,4294967295,3,-1250904905,-40076,-48244];
        [6,536870888,2147483648,-16,-9,-256,6,128,732754755,-9669];
        try { v15.shift(); } catch (e) {}
        return this;
    }
    static c = Uint16Array;
    constructor(a19, a20, a21) {
        for (const v22 of a20) {
            const v23 = v22 | a20;
            Object.defineProperty(this, 34, { enumerable: true, value: a21 });
            this[v23] |= a19;
            const o24 = {
            };
            try {
                o24.e = a20;
            } catch(e25) {
                v5[1];
                let {"b":v27,"d":v28,"g":v29,} = v22;
                this[Int16Array];
                for (let v31 = 0; v31 < 32; v31++) {
                    v2["p" + v31] = v31;
                }
            }
            try {
                const o34 = {
                };
                o34.e = a20;
                o34.f = 1;
            } catch(e35) {
            }
            try {
                const o36 = {
                };
                o36.e = a20;
                o36.f = 1;
                o36.h = a21;
            } catch(e37) {
            }
            try {
                const o38 = {
                };
                o38.e = a20;
                o38.f = 1;
                o38.h = 56;
            } catch(e39) {
            }
        }
    }
}
const v40 = new C9(127, C9, C9);
const v41 = new C9(56, v2, v40);
new C9(127, v41, v40);
const v52 = [-2.14860426829137,-9.58586124400876,2.0,2.2250738585072014e-308,0.0,-3.0,Infinity,-317.1953498647964,2.0];
class C53 extends Int16Array {
    [v52];
}
