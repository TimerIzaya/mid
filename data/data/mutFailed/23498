let v2 = new Uint8ClampedArray(3790);
const v5 = new Float32Array(16);
new Uint8Array(249);
class C9 extends Uint8ClampedArray {
    5;
    m(a11, a12) {
        super.buffer;
        super.g = a12;
        return a11;
    }
    static #toString(a18, a19) {
        new Float32Array(a18, a18, 16);
        super[v2];
        super.length;
        v2 *= v2;
        return Float32Array;
    }
}
const v23 = new C9();
const v24 = new C9();
const v25 = new C9();
function f26(a27, a28) {
    const o32 = {
        [3790]: a27,
        get b() {
            const v30 = new C9();
            v30[1] = v30;
            this[this] %= v2;
            %VerifyType(v30);
            try {
                v24.__proto__ = v5;
            } catch(e31) {
            }
            return 16;
        },
        "b": a28,
        8: a28,
        [Uint8ClampedArray]: v23,
    };
    return o32;
}
f26(v25, 3790);
f26(v25, v2);
f26(v25, v2);
let v37 = undefined;
const o38 = {
};
v37 = o38;
function F42(a44, a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
    const v47 = this.constructor;
    try { new v47(a44, -1000000000000.0); } catch (e) {}
    a45 % a45;
    this.a = a44;
}
new F42(2.220446049250313e-16);
const v51 = new F42();
class C52 extends undefined {
    65537 = v37;
    7 = v51;
}
new C52();
const t62 = 249;
const v54 = new t62();
new v54();
