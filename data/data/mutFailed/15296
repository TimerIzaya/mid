class C3 {
    static o(a5) {
        try { new a5(a5, 0.13253174554254687); } catch (e) {}
        this.a;
        Math.max(a5);
        10 - a5;
        const v13 = -a5;
        new Uint16Array(257, 58091);
        const v19 = new Uint16Array(3);
        v19.indexOf();
        return v13;
    }
    d = -2147483648;
    65537 = 0.13253174554254687;
    #h = -2147483648;
    c;
}
new C3();
new C3();
new C3();
new Float64Array(3912);
new Int16Array(448);
new Uint32Array(2);
function f33(a34, a35, a36) {
    try { a34(); } catch (e) {}
    return a34;
}
%PrepareFunctionForOptimization(f33);
const o43 = {
    get b() {
        const v41 = Array.constructor;
        new v41(this, this, Array, Array, v41);
        return this;
    },
};
const o44 = {
    ...o43,
};
f33(f33, f33, f33);
%OptimizeFunctionOnNextCall(f33);
f33();
