function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 1073741824;
    } catch(e3) {
    }
    try {
        this.g = 1073741824;
    } catch(e4) {
    }
    try {
        this.c = 1073741824;
    } catch(e5) {
    }
}
new F0();
new F0();
new F0();
[9007199254740991,65535,255,-1,-6,311425347,65537,-11,14,-1944];
const v13 = [-6,-935723807,-2147483648,6,9007199254740992,12,7,-65133,6208];
[-4294967297,1073741824,2147483649,-1,9007199254740992,-9007199254740992,2,-854867974];
const v18 = (5).replaceAll("SbX");
function f19(a20, a21) {
    const o22 = {
    };
    o22[536870887] = o22;
    return o22;
}
const v25 = new Date();
Date();
const v28 = f19()[536870887];
v28.h = v28;
const v29 = f19();
v29[536870887] = -962.2176412840795;
v13[536870887] = v29;
f19();
new Set();
[-5.0,2.220446049250313e-16,0.0,-1000000.0,-6.648738442303908e+307];
[-1000000000000.0,-Infinity,-1.0,-2.2250738585072014e-308];
const v35 = [668524.4122333622,0.0,0.06954943544582737,-797266.0542893306];
try { v35.groupToMap(-4294967297); } catch (e) {}
function f37(a38, a39) {
    for (let v40 = 0; v40 < 50; v40++) {
        const v42 = ("imul")?.slice;
        let v43;
        try { v43 = v42(f37); } catch (e) {}
        const v44 = ("imul").codePointAt(a39);
        const v45 = ("imul").padEnd();
        const v46 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
        new f19(v18, a39);
        -4 * -4;
        5 >>> v44;
        Math.clz32();
        v43.max();
        const v54 = [1073741824,1073741823,1376142744,1073741825];
        try { v25.trim(); } catch (e) {}
        try { v54["find"](...v54, v45, ...v46); } catch (e) {}
    }
    return a38;
}
f37();
const v59 = f37();
try { v59.apply(v25, v25); } catch (e) {}
f37();
