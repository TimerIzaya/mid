let v3 = Set;
let v4 = 0;
while (v4 < 2) {
    v4 + "4vW";
    v4++;
}
new v3();
function F10(a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a12;
    } catch(e14) {
    }
    function f15(a16) {
        return a13;
    }
    class C17 extends f15 {
        [this] = f15;
    }
    try {
        this.d = a13;
    } catch(e18) {
    }
    try {
        a12 / this;
        try {
            const t26 = "4vW";
            t26.__proto__ = this;
        } catch(e20) {
        }
        this.b = "string";
    } catch(e21) {
    }
}
new F10("4vW", "string");
new F10("string", "string");
new F10("string", "4vW");
[1.0750181514630494e+308,1000000000000.0,1.0,4.0,1000000000000.0,9.530099930350111e+307,499367.5835872174,1e-15];
[3.0,-2.2250738585072014e-308,1000000000.0,0.0,-1000000.0,0.0,-1000000.0,-694770.6092474931,2.2250738585072014e-308,760.8505525283902];
[-1000000.0,5.162576843946658,-1.0,-9.21033896171621,521.8036145359217,-0.0,-1000000000.0,-2.2250738585072014e-308];
const v32 = Float32Array;
const v35 = v3 / v3;
v3--;
const v37 = Math.acosh(v35);
const v38 = new Float32Array(Float32Array, Float32Array, Float32Array);
function f40() {
    return 160;
}
Object.defineProperty(v38, "h", { configurable: true, enumerable: true, get: f40 });
async function f41(a42, a43, a44) {
    "getUTCMonth" in a42;
    ~(delete a43?.[a44] ** a42);
    v37 > "string";
    v38.h = v38;
    await 160;
    return f41;
}
f41(v38, v38, Float32Array);
