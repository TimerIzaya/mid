class C3 {
    static 5;
    static #g = "oi";
    constructor(a5, a6) {
        new Uint16Array(129);
        new Int16Array(16);
        function F13() {
            if (!new.target) { throw 'must be called with new'; }
        }
        new F13();
        const v16 = new F13();
        const v17 = new F13();
        const v18 = [v16];
        const v19 = [v17,v16,v17,v17];
        [v16,F13,v19,v19,v18];
        [-6];
        [15,1000,456510946,268435439,-4096,-1621925631,-536870912,4294967295,127,768050783];
        [-30837,-2147483647,11,14];
        const v26 = new Uint32Array(1000);
        new BigUint64Array(154);
        new Uint8Array(134);
        const v33 = delete v18?.length;
        try { v33["cbrt"](v26, Uint32Array, v16, v17, v33); } catch (e) {}
        const o36 = {
        };
        new Proxy(Uint8Array, o36);
        for (let v39 = 0; v39 < 5; v39++) {
        }
        new Uint16Array(6);
    }
}
const v43 = new C3("symbol", "symbol");
const v44 = new C3("function", "oi");
new C3("oi", v44);
class C49 {
    static a = v44;
    constructor(a51, a52, a53, a54) {
        var g = v44;
        c = C3;
        let v55;
        try {
        const t0 = "symbol";
        v55 = t0("MyJj");
        } catch (e) {}
        try { a51.m("-12", v55, a51, "oi", this); } catch (e) {}
    }
    static d = "oi";
    static #b = "function";
    b = "symbol";
    d;
    [v43] = "-12";
}
const v57 = new C49("function", "-12", "function", v43);
const v58 = new C49(v57, v43, "oi", "oi");
new C49(v58, "-12", v58, "oi");
const v62 = new Int16Array(7);
1024 * 1024;
new Uint16Array(1024);
new Float32Array(3415);
let v70 = 12;
v70++;
Int16Array.prototype = Int16Array;
new Int16Array(v70);
const v76 = new BigUint64Array(10);
Float32Array.prototype = Float32Array;
const v79 = new Float32Array(2494);
try { v79.find(Uint16Array); } catch (e) {}
const v81 = [7,v79];
const v83 = ([10,7,v81,v62])?.reverse;
try { v83(); } catch (e) {}
[v76,7];
let v87 = Int32Array;
const v88 = new v87(2917);
const v90 = v87--;
/S4/gvm;
/a?abc+e6H*/gvmsy;
/G(?:ab|cde)b?/udim;
const o95 = {
};
new Proxy(v81, o95);
v88["lastIndexOf"](v90);
