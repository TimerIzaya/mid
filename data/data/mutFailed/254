class C3 {
    static #toString(a5) {
        const v6 = super.g;
        let v7;
        try { v7 = new v6(); } catch (e) {}
        const o8 = {
        };
        try {
            o8.c = v7;
        } catch(e9) {
        }
        try {
            const o10 = {
            };
            o10.c = 6.45721206866272;
            o10.h = "4Wov";
        } catch(e11) {
        }
        try {
            const o12 = {
            };
            o12.c = 6.45721206866272;
            this.h = "4Wov";
            o12.f = v7;
        } catch(e13) {
        }
        try {
            const o14 = {
            };
            o14.c = 6.45721206866272;
            o14.h = "4Wov";
            v7.f = 6.45721206866272;
        } catch(e15) {
        }
        return a5;
    }
}
const v16 = new C3();
const v17 = new C3();
const v18 = new C3();
class C19 extends v17 {
    static c;
    static n(a21, a22, a23) {
        super["4Wov"];
        v18[3] = a23;
        return v17;
    }
    #m(a26, a27, a28, a29) {
        const o30 = {
        };
        try {
            o30.b = a29;
        } catch(e31) {
        }
        try {
            const o32 = {
            };
            o32.b = v16;
            o32.e = "4Wov";
        } catch(e33) {
        }
        try {
            const o34 = {
            };
            o34.b = a29;
            o34.e = v18;
            o34.g = -1000000000.0;
        } catch(e35) {
        }
        try {
            const o36 = {
            };
            o36.b = a29;
            o36.e = "4Wov";
            o36.f = a27;
        } catch(e37) {
        }
        return 6.45721206866272;
    }
}
new C3();
new v17();
new C19();
function F44(a46, a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
}
const v49 = new F44();
const v50 = new F44(F44, F44, v49);
for (let v52 = 0; v52 < 5; v52++) {
    Object.defineProperty(v49 || undefined, v50, { value: v49 });
}
undefined?.p;
class C5 {
    constructor(a7) {
        !1030682646;
        let v14 = +1030682646 / 1030682646;
        ++v14;
    }
}
class C16 {
    101;
    [268435440] = "7me";
    constructor(a18, a19) {
        try {
            a18 %= a19;
        } catch(e20) {
        }
    }
    static ["7me"];
}
const v22 = new C16(C16, "7me");
new C16(5.017677582007758, v22);
new C16(C16, "7me");
new Uint8Array(33);
new Int32Array(10);
new BigUint64Array(1058);
class C34 {
    static #e;
    constructor(a36) {
        for (let i39 = 0, i40 = 10;
            i39 < i40;
            (() => {
                function F44() {
                    if (!new.target) { throw 'must be called with new'; }
                }
                const v47 = undefined?.p;
                try { v47(); } catch (e) {}
                with ([v47,v47,v47]) {
                }
                i39++;
            })()) {
            function F53() {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.d = 536870912;
                } catch(e56) {
                }
            }
            const v57 = new F53();
            const v58 = new F53();
            class C59 extends F53 {
                f;
                static #m(a61, a62) {
                    %VerifyType(v57);
                    v58[v58];
                    return v58;
                }
                static e = v57;
                #h = v58;
                static [v58];
                static c = v58;
                2147483649;
            }
            const v67 = new C59();
            [v58,[v57,[3,680238276,9007199254740991,-62910]],C59,v67,C59];
        }
        try {
            this.#e = this;
            class C73 {
            }
            const v74 = new C73();
            v74.constructor = Date;
            v74.constructor;
        } catch(e76) {
        }
    }
    static {
    }
}
new C34();
/Na(?:b)/miud.exec();
gc();
class C90 {
    constructor(a92) {
        try {
        } catch(e93) {
        }
    }
}
function f100(a101) {
    return Float64Array;
}
new Int8Array(Int8Array, Int8Array, Int8Array);
const v106 = [];
const v107 = [v106,v106,v106];
function f108(a109, a110, a111) {
    a111--;
    const o117 = {
        "h": a111,
        "a": a110,
        [a111](a114, a115, a116) {
        },
        "b": a111,
        "g": v107,
    };
    return o117;
}
