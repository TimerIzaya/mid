const v2 = new Uint16Array(256);
const v5 = new Float64Array(10);
const v8 = new Uint16Array(512);
[10,v5,v8,v5,512];
const v11 = [Float64Array,Uint16Array,[10,512]];
[-9007199254740990,-4,21938566];
const v13 = v2 + Uint16Array;
const o16 = {
    "maxByteLength": 4294967296,
};
const v18 = new ArrayBuffer(5, o16);
new Int16Array(v18);
[8,2,-14733,1688366798,-2147483648];
[1164198281,1669934258];
v11[4206351118] >>>= 10;
const v26 = 6 | -2;
let v27 = v26 % v2;
Math.acos(v5);
Math.expm1(v5);
const v30 = --v27;
try { v26(v13, v26, v30); } catch (e) {}
try {
    v5.values();
} catch(e33) {
}
v2 % v2;
Math.log1p(268435456);
