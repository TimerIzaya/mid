function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.d = F0;
    try {
        this.c = 16;
    } catch(e3) {
    }
    try {
        this.e = 16;
    } catch(e4) {
    }
    try {
        F0.d = 16;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
v8.e;
let v11 = BigInt64Array;
new v11(2409);
const v15 = new Float32Array(176);
new Float32Array(0);
new v15();
const v21 = [-246307.25252652215];
const v22 = [0.7731808577486943,1000000000.0,-1000000000000.0,-5.027249683239967e+307,-1000000000000.0,-0.09330881686411452];
v6[536870889] = v22;
[v6,[v21,Float32Array],v11];
[v7];
v11 %= v11;
try { v22.includes(F0); } catch (e) {}
function F27(a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    const v31 = this?.constructor;
    try { new v31(a29, a29); } catch (e) {}
}
F27.d = F27;
const v33 = new F27();
class C34 extends F27 {
}
new C34();
for (let v36 = 0; v36 < 10; v36++) {
    function F37(a39, a40) {
        if (!new.target) { throw 'must be called with new'; }
        this.c = a40;
    }
    F37.prototype = F37;
    const v41 = new F37(v36, v33);
    const t49 = 2409;
    t49.length = v41;
    new F37();
}
