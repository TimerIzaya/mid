function f3(a4, a5) {
    const o16 = {
        4: a5,
        "e": "source",
        __proto__: "source",
        set c(a7) {
            d = this;
            const v8 = super["2"];
            const o11 = {
                "maxByteLength": a7,
            };
            const v13 = new ArrayBuffer(8, o11);
            new v8(v13);
        },
    };
    return o16;
}
const v17 = f3(f3, "2");
f3(f3, "d");
f3(v17, "d");
new Uint8ClampedArray(6);
new Int32Array(16);
new BigUint64Array(1655);
function f32() {
    for (const v35 of f32()) {
        v35 !== (v35 | v35);
    }
    return Uint8ClampedArray;
}
%OptimizeFunctionOnNextCall(f32);
f32();
