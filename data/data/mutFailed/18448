function f0() {
}
const v9 = new Uint8Array(3);
try { v9.values(); } catch (e) {}
3 != 3;
new Uint8ClampedArray(3);
new BigUint64Array(1);
512 >>> 512;
class C22 {
    constructor(a24, a25) {
        a25 - a25;
        function f27(a28) {
            function f30(a31) {
                a31 & a31;
            }
            this.onmessage = f30;
            this.__proto__;
        }
        try { new f27(1596523507); } catch (e) {}
        const v39 = [f27];
        v39[0] = v39;
        const o40 = {
            "arguments": v39,
            "type": "function",
        };
        new Worker(f27, o40);
    }
}
const v42 = C22?.constructor;
try { new v42(512); } catch (e) {}
const v44 = new C22(C22, -4.0);
const v45 = v44?.__defineSetter__;
try { new v45(3, 3); } catch (e) {}
const v47 = new C22(-4.0, -4.0);
const v48 = v47?.constructor;
try { new v48(512, v9); } catch (e) {}
const v50 = new C22(9007199254740992, 512);
Uint8Array.d = Uint8Array;
const v53 = new Uint8Array(0);
4096 >>> 4096;
const v57 = new Uint8Array(4096);
v57.byteOffset;
const v61 = new Uint8Array(255);
try { v61.reduce(3); } catch (e) {}
let v63;
try { v63 = v57(); } catch (e) {}
try { v63(v53, v63, v47); } catch (e) {}
C22[v61];
60483 + 60483;
let v70;
try { v70 = v50.m(0, v53); } catch (e) {}
const o71 = {
};
try {
    o71.h = v70;
} catch(e72) {
}
try {
    const o73 = {
    };
    o73.c = o73;
    o73.h = v70;
    o73.d = 512;
} catch(e74) {
}
try {
    const o75 = {
    };
    o75.h = v70;
    o75.d = 512;
    class C76 {
        n(a78, a79) {
        }
    }
    const o81 = {
    };
    o81.e = Float64Array;
    o81.h = o81;
    o75.e = v53;
} catch(e82) {
}
try {
    const o83 = {
    };
    o83.c = o83;
    o83.h = v70;
    o83.d = 512;
    o83.e = 255;
} catch(e84) {
}
