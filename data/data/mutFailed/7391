function f0() {
}
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = f0;
    } catch(e3) {
    }
    try {
        this.d = f0;
    } catch(e4) {
    }
    try {
        this.g = f0;
    } catch(e5) {
    }
}
const v6 = new F1();
const v7 = new F1();
new F1();
class C9 extends F1 {
    get f() {
        v7[268435440] = this;
        v7.e;
        Object.defineProperty(this, this, { writable: true, configurable: true, enumerable: true, get: f0 });
        this.__proto__;
        return f0;
    }
    static #valueOf(a14) {
        [64,-2147483647,-15908,-2147483649,4,-9007199254740992];
        [457517603,-8,1030366289,15,-9];
        [863631534,4294967295,10,1073741825];
        return v6;
    }
}
const v24 = new C9();
const v25 = v24?.e;
try { new v25(); } catch (e) {}
new C9();
const v28 = new C9();
const v29 = v28?.e;
try { new v29(); } catch (e) {}
function f34(a35, a36) {
    const v37 = a35?.e;
    try { new v37(); } catch (e) {}
    const o60 = {
        7: v24,
        "g": F1,
        1: v24,
        [a35](a40, a41, a42, a43) {
            for (let i46 = 0, i47 = 10; i46 < i47; i46++, i47--) {
                const o58 = {
                    "execution": "async",
                    "type": "minor",
                };
                gc(o58);
            }
            return v24;
        },
    };
    return o60;
}
f34.g = f34;
const v61 = f34(v24, v24);
v61[7] = v61;
const v62 = f34(v61, v28);
const v63 = f34(v28, v24);
512 >>> 512;
class C68 {
    constructor(a70, a71) {
        a71 * a71;
        function f73(a74) {
            function f76(a77) {
                a77 & a77;
            }
            this.onmessage = f76;
            this.__proto__;
        }
        -9340 >> -9340;
        2147483649 - 2147483649;
        class C87 {
            constructor(a89, a90) {
                this.f = this;
                a90.__proto__;
            }
            f;
            set d(a93) {
                super.d;
                const o95 = {
                };
            }
        }
        C87.length;
        const v97 = new C87(-9340, 2147483649);
        const v98 = new C87(-9340, 1073741823);
        const v99 = new C87(1073741823, v97);
        v99.c = v99;
        function F100(a102, a103, a104, a105) {
            if (!new.target) { throw 'must be called with new'; }
            a105 & a105;
        }
        new F100(v97, v98, 2147483649, -9340);
        const v108 = new F100(v97, v98, 1073741823, -9340);
        const v109 = v108?.constructor;
        try { new v109(C68, v108, v108, C68); } catch (e) {}
        const v111 = new F100(v97, v99, -9340, 1073741823);
        const v112 = v111?.constructor;
        try { new v112(3.875989432496567, a70, 3.875989432496567, a70); } catch (e) {}
        try { WeakSet.bind(C9); } catch (e) {}
        const v116 = new WeakSet();
        try { v116.delete(v99); } catch (e) {}
        new Set();
        Float64Array.length = Float64Array;
        const v122 = new Float64Array(1136);
        try { v122.entries(); } catch (e) {}
        4 + 4;
        new Int32Array(4);
        48 + 48;
        new Uint32Array(48);
        try {
            v108.fuck(v111, 1136);
        } catch(e133) {
            e133.b = e133;
        }
        ("function")[3];
        const v137 = [f73];
        const o138 = {
            "arguments": v137,
            "type": "function",
        };
        new Worker(f73, o138);
    }
}
new C68(C68, -4.0);
const v141 = new C68(-4.0, -4.0);
v141.b = v141;
const v142 = new C68(9007199254740992, 512);
const v143 = v142?.constructor;
try { new v143(v62, v62); } catch (e) {}
const v147 = new Uint8Array(0);
try { v147.entries(); } catch (e) {}
const v151 = new Uint8Array(4096);
try { v151.fill(v63); } catch (e) {}
const v155 = new Uint8Array(255);
let v156;
try { v156 = v151(); } catch (e) {}
try { v156(v147, v156, v141); } catch (e) {}
C68[v155];
let v162;
try { v162 = v142.m(0, v147); } catch (e) {}
const o163 = {
};
o163.f = o163;
try {
    o163.h = v162;
} catch(e164) {
}
try {
    const o165 = {
    };
    o165.h = v162;
    o165.d = 512;
} catch(e166) {
}
try {
    const o167 = {
    };
    o167.h = v162;
    o167.d = 512;
    o167.e = v147;
} catch(e168) {
}
("undefined").localeCompare("undefined", "symbol", "undefined");
("1")[0];
Math.tanh("1");
try {
    const o176 = {
    };
    o176.h = v162;
    o176.d = 512;
    o176.e = 255;
} catch(e177) {
}
