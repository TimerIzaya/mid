function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 536870889;
    } catch(e3) {
    }
}
new F0();
new F0();
new F0();
const v9 = new Uint8Array(2386, F0, Uint8Array);
const v12 = new Int8Array(4);
try { v12.map(4); } catch (e) {}
127 - 127;
new Uint16Array(127);
with (v9) {
    byteLength = 127;
    let v18 = v12.length;
    v18 ||= v18;
}
for (let v19 = 0; v19 < 5; v19++) {
    function f20() {
        function f21(a22, a23, a24) {
            return f21;
        }
        const t25 = "function";
        t25[3] = "function";
        const o27 = {
            "type": "function",
        };
        o27.f = o27;
        const v28 = new TypeError(f21, o27);
        try { v28.terminateAndWait(); } catch (e) {}
        return v28.terminate(f21, v28, v19);
    }
    f20();
    %OptimizeFunctionOnNextCall(f20);
}
