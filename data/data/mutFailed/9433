function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 27322925;
    } catch(e3) {
        F0 % -9007199254740991;
        Math.pow(F0, 2.220446049250313e-16);
        (2.220446049250313e-16 >> 9223372036854775807) / -9007199254740991;
        Math.cosh(-9007199254740991);
    }
}
const v13 = new F0();
const v14 = new F0();
const v15 = new F0();
v15.c = v15;
function f16(a17, a18) {
    const o30 = {
        get c() {
            const v20 = this?.c;
            try { new v20(); } catch (e) {}
            ArrayBuffer.prototype;
            const o25 = {
                "maxByteLength": 65535,
            };
            const v27 = new ArrayBuffer(257, o25);
            new DataView(v27);
            return F0;
        },
    };
    return o30;
}
try { f16.toString(); } catch (e) {}
const v32 = f16(v13, v14);
const v33 = v32?.c;
try { new v33(); } catch (e) {}
const v35 = f16(v15, v32);
const v36 = v35?.c;
try { new v36(); } catch (e) {}
const v38 = f16(v15, v35);
class C39 extends f16 {
    static e;
    toString(a41, a42) {
        var g = v14;
        let v43;
        try { v43 = v14.m(F0, F0, v15, a41, a42); } catch (e) {}
        return v43;
    }
    e;
    2638 = v32;
    static 127 = v14;
    static [F0];
    static c = f16;
    e = v35;
    d;
    static [v38] = f16;
    f;
}
try { new C39(); } catch (e) {}
try { new C39(); } catch (e) {}
const v46 = new C39();
v46[2638];
const v48 = new C39();
v48[2638];
const v50 = new C39();
const v52 = v50[2638]?.c;
try { new v52(); } catch (e) {}
-1073741824 - -1073741824;
ReferenceError.stackTraceLimit;
ReferenceError(-1073741824, 9007199254740991n);
