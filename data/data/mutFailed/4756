try { new BigUint64Array(-65135, 156, -13); } catch (e) {}
new BigUint64Array(156);
new Float32Array(12);
new Uint32Array(1000);
class C17 {
    static 7;
    static [-1] = "string";
    #n(a19) {
        a19 = this;
        a19.e >>>= -35417;
        const o23 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o23);
        return this;
    }
}
C17.f = C17;
const v25 = new C17();
const v26 = v25?.constructor;
try { new v26(); } catch (e) {}
268435440 < 268435440;
Array();
const v33 = Array();
try { v33.sort(Uint32Array); } catch (e) {}
class C36 {
    static 9 = 9.187362692894364;
}
C36.f = C36;
for (const v37 in C36) {
}
class C38 {
    #e;
    static {
        function f40(a41, a42) {
            return a41;
        }
        f40.e = f40;
        const o50 = {
            o(a44) {
                try { this.propertyIsEnumerable(this); } catch (e) {}
                try { a44.o(1000); } catch (e) {}
                const o48 = {
                };
                o48.h = o48;
                return gc(o48);
            },
        };
        const o52 = {
        };
        Proxy.length;
        const v55 = new Proxy(Uint32Array, o52);
        o50["o"](o50, Uint32Array, "o", "o", v55);
        const v58 = super[this];
        try { v58.join(-4096, -4096, v58); } catch (e) {}
        const o60 = {
        };
        o60.h = o60;
        const v61 = /LD/vds;
        v61.dotAll = v61;
        [v61,1000.0];
    }
    static f;
    m(a65, a66) {
        const o67 = {
        };
        const o70 = {
        };
        const v72 = new Proxy(Uint8Array, o70);
        v72.d = v72;
        new Proxy(this, o67);
        class C78 {
        }
        function f79() {
            let v80 = 1000000000000.0;
            v80--;
            class C83 {
            }
            new C83();
            const v85 = new C83();
            [C78,C83];
            [257828.6336153492,v85];
            [v85];
            class C89 extends C17 {
            }
            function f90(a91, a92) {
                return -4096;
            }
            Set.toString = f90;
            Set.constructor(Set);
            v33.constructor;
        }
        const v96 = "string" && -4096;
        +a66;
        Math.sqrt(v96);
        a65--;
        -509886178 << -509886178;
        return this;
    }
}
const v101 = new C17();
const v102 = v101?.constructor;
try { new v102(); } catch (e) {}
const v104 = new C38();
const v105 = v104?.constructor;
try { new v105(); } catch (e) {}
const v107 = new C38();
try { v107.m(-1, v25); } catch (e) {}
-7 & -7;
const v116 = new WeakSet();
try { v116.toLocaleString(); } catch (e) {}
const v118 = v116.constructor;
v118.e = v118;
class C119 extends v118 {
}
const v122 = new Uint16Array(512);
v122[231] = v122;
class C124 {
}
function F125(a127, a128) {
    if (!new.target) { throw 'must be called with new'; }
}
new Float32Array(v122);
