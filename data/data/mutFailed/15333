new BigUint64Array([-4]);
const v6 = new Int8Array(1159);
v6[2];
let v10 = 631817316;
let v12 = -268435456;
v12++;
class C14 {
    o(a16, a17) {
        let v15 = this;
        Math.tanh(0.3840861739144876);
        const v22 = Array(6);
        function f23(a24, a25) {
            function f27(a28, a29, a30, a31) {
                arguments[2] = arguments;
                function f33() {
                    Math.max(a30);
                    +a28;
                    return Math.ceil(a28);
                }
                f33();
                %OptimizeFunctionOnNextCall(f33);
                return f27;
            }
            function f39(a40) {
                v15 = a24;
            }
            this.onmessage = f39;
            Object.defineProperty("setPrototypeOf", 1, { configurable: true, enumerable: true, set: f39 });
            v12 %= v10;
        }
        const v43 = [v12,v12];
        const o47 = {
            "arguments": v43,
            "type": "function",
            __proto__: 0.3840861739144876,
            n(a45, a46) {
                return 1159;
            },
            ...v22,
        };
        new Worker(f23, o47);
        return "valueOf";
    }
}
C14.d = C14;
try { new C14(); } catch (e) {}
new C14();
const v51 = new C14();
const v52 = v51?.constructor;
try { new v52(); } catch (e) {}
new C14();
class C55 {
    constructor(a57) {
        function f58() {
        }
        Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f58 });
    }
    static 512;
    static #n(a60, a61, a62) {
        for (let i65 = 0, i66 = 10; i65 < i66; i65++, i66--) {
            v10 |= i66;
            "setPrototypeOf" instanceof C14;
        }
        return a60;
    }
}
const v75 = new C55();
function f76() {
    function f77() {
        return C14;
    }
    return v51;
}
v75.constructor = f76;
const v78 = v75?.constructor;
const v81 = new Float32Array();
v81["setPrototypeOf"](..."-11838");
([512n]).includes(512n);
try { new v78(); } catch (e) {}
const v87 = v75?.constructor;
try { new v87(); } catch (e) {}
const v89 = new C55();
v89.constructor = f76;
const v90 = v89?.constructor;
v90[512] = v90;
try { new v90(); } catch (e) {}
const v92 = new C55();
const v93 = v92?.constructor;
try { new v93(); } catch (e) {}
-9223372036854775808 & -9223372036854775808;
Date.length = Date;
const v100 = new Date();
const v101 = v100.getFullYear();
v101 | v101;
~(v101 + v101);
