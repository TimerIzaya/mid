const v0 = /a\s/gvdim;
const v1 = /J((((.).).).)/gudisy;
const v2 = /Lb/dis;
const v5 = new Array(2090);
try {
    v0[-1] = 2090;
} catch(e7) {
    for (let v8 = 0; v8 < 32; v8++) {
        v2["p" + v8] = v8;
    }
} finally {
    v0.compile(Array, v0, v0, v2);
}
function f13(a14, a15, a16, a17) {
    const o18 = {
        ...a17,
        6: 2090,
    };
    return o18;
}
const v19 = f13(v0, f13, v2, v2);
f13(v1, f13(v19, v19, v0, v0), v1, v0);
let v22 = 0.4733966023792746;
--v22;
try {
    v1.__proto__ = v0;
} catch(e24) {
}
const v26 = [-977.1757242537964,[v22,v2,v22,-977.1757242537964]];
const v27 = [v2,-977.1757242537964,v26,v26,2090];
class C28 {
}
for (let v29 = 0; v29 < 5; v29++) {
    function f30() {
        let v32;
        try { v32 = new Symbol(); } catch (e) {}
        const v33 = Symbol.toPrimitive;
        const v34 = v33.description;
        Symbol.for(v34);
        let v36;
        try { v36 = Symbol.bind(v29); } catch (e) {}
        const v39 = Symbol.for(v33.description).description;
        const v40 = Symbol.for(v39);
        function f41() {
            return v40;
        }
        v32?.[v34];
        try {
            C28.__proto__ = v39;
        } catch(e43) {
        }
        try { Symbol.toString(); } catch (e) {}
        const v45 = v33.description;
        Symbol.for(v45);
        function f47() {
            const o50 = {
                m(a49) {
                    return f47;
                },
            };
            const v52 = v45["padEnd"](v32, v34);
            const v53 = f41(v40, ..."padEnd", v52, ..."padEnd", v36);
            const v57 = 8 % v52;
            Math.log10(255);
            !v53;
            Math.expm1(o50);
            v57 % v53;
            v57 << 8;
        }
        try { f47(); } catch (e) {}
        const v65 = v33.description.codePointAt(C28);
        v65 - v65;
        v65 & v65;
        v65 + v65;
        return Symbol;
    }
    const v69 = v5;
    v27[10] = v69;
    try {
        new C28();
    } catch(e71) {
    }
    f30();
    const v73 = [-1235077344,-4096,50383815,-8476,-9007199254740991];
    class C75 extends Set {
    }
    new C75(v73);
    %OptimizeFunctionOnNextCall(f30);
}
