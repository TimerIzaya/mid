class C3 {
    static get e() {
        function f5() {
            return 1073741824;
        }
        this[this] = this;
        this.c /= -1000000000000.0;
        return this;
    }
    g;
    static #f = 1073741824;
    b;
}
const v6 = new C3();
let v7 = new C3();
const v8 = new C3();
function f9() {
    try { v8["p"](v8); } catch (e) {}
    return C3;
}
v8.toString = f9;
class C12 {
    a = v8;
    constructor(a14, a15, a16, a17) {
        a16.toString = f9;
        this[v8];
        v8.g;
        v7 = a16;
        [-2];
        [10000,268435441,-9007199254740992,4];
        [-65536];
    }
    h;
    g = 660.0809440504167;
    e;
    c = v6;
    static #d;
    #e = C12;
    [-1000000000000.0];
}
new C12(v8, v8, v7, v8);
new C12(v6, v6, v7, v6);
new C12(v8, v8, v8, v8);
const v26 = [4.0,-1.7976931348623157e+308];
function F27(a29, a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
}
const v32 = new F27(F27, v26, F27);
function f33() {
    function f34() {
        return f34;
    }
    const v36 = new BigUint64Array();
    v36.constructor = f34;
    return v26;
}
Object.defineProperty(v32, Symbol.replace, { writable: true, enumerable: true, value: f33 });
const v39 = new F27(v32, v32, v32);
v39.__proto__ = v26;
const v41 = Symbol.replace;
v32[v41] = v41;
