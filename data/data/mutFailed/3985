function f0() {
    const o10 = {
        set g(a5) {
            try { a5(this, this); } catch (e) {}
            this[8] = this;
            this[Symbol.matchAll];
        },
        8: 255,
        "a": 255,
        "e": 1073741824,
        "b": -347868.1885077206,
        "f": 255,
        ...-347868.1885077206,
        "g": -347868.1885077206,
        "d": -347868.1885077206,
    };
    return o10;
}
f0();
const v12 = f0();
f0();
new Array(3333);
-16n + -16n;
-128 !== -128;
257 >>> 257;
class C26 extends Array {
    o(a28, a29, a30, a31) {
        const o35 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o35);
        return -128;
    }
    818416875;
    4 = v12;
    d = 257;
    static d = f0;
}
try { new C26(); } catch (e) {}
new C26();
const v39 = new C26();
function f40(a41) {
    ("h").split(65535);
}
Object.defineProperty(v39, "a", { configurable: true, set: f40 });
v39.a = v39;
new C26();
478427087n << 478427087n;
const o51 = {
};
o51.h = 478427087n;
o51.h = o51;
const v53 = !o51;
const v54 = 1842642860 % v53;
const v55 = v54 % v54;
v55 / v55;
const v57 = new WeakMap();
try { v57.get(o51); } catch (e) {}
let v59;
try { v59 = v57.delete(v53); } catch (e) {}
const v60 = !v59;
class C63 {
    static {
        try { new this(); } catch (e) {}
        try {
        const t0 = "boolean";
        t0(this);
        } catch (e) {}
    }
}
C63.name = C63;
try { new C63(); } catch (e) {}
const v69 = ("isInteger")?.replaceAll;
-1000000.0 - -1000000.0;
const v77 = [-2147483647,64098,-9383,1024,129,-5];
function f78() {
    const o83 = {
        o(a80) {
            gc();
            return this;
        },
    };
    o83["o"]();
    return o83;
}
v77.toString = f78;
[1000,-16,-38597,12,-3399,32508];
const v87 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
v87[3];
const v90 = new Uint32Array();
try { v90.some(411585671n); } catch (e) {}
let v92 = -4294967297n;
v92--;
const v94 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v95 = [601759695];
const v96 = [1073741824,1073741823,1376142744,1073741825];
522675525n + 522675525n;
function f99(a100, a101, a102, a103) {
    arguments.length;
    function f106() {
        try { ("Vre").codePointAt("Vre"); } catch (e) {}
        let v110 = Float64Array;
        v110 = a101;
        b = v95;
        v87.length;
        try {
            v96.forEach(a101);
        } catch(e113) {
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o115 = {
        };
        o115.f = o115;
        const o130 = {
            "c": v92,
            "c": v95,
            valueOf(a118, a119) {
            },
            1073741824: v90,
            "maxByteLength": -268435456,
            "b": -4294967295,
            [v92](a121, a122, a123, a124) {
                class C126 extends Date {
                    static get c() {
                    }
                }
                eval();
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v94,
            256: a103,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            6: -268435456,
        };
    }
    f106();
    try { Int8Array.of(); } catch (e) {}
    const v134 = new Int8Array();
    const v135 = v134.buffer;
    v135.constructor = f0;
    v135.slice(2147483648);
    const v140 = new Int32Array(1024);
    const v141 = v140[3];
    v141 * v141;
    for (let v143 = 0; v143 < 10; v143++) {
    }
    %OptimizeFunctionOnNextCall(f106);
    let v145;
    try { v145 = v96["find"](..."find", a103, ...v95, ...v96, ...522675525n); } catch (e) {}
    v145 <= a102;
    return arguments;
}
for (let v147 = 0; v147 < 10; v147++) {
    f99();
}
%OptimizeFunctionOnNextCall(f99);
const v149 = f99();
v149.f = v149;
[-50328,-14,3,128,-11,64,-65535];
class C151 {
    [v77] = -1000000.0;
    constructor(a153, a154, a155, a156) {
        a154--;
        %VerifyType(a156);
        super[this];
    }
    g;
    c;
    #toString(a160, a161, a162) {
    }
    1 = 257n;
}
C151.name;
new C151(1073741825n, 1.0, 7.589647165982214);
const v165 = new C151(411585671n, -1000000.0, -1000000.0, 1.0);
v165[1];
const v167 = new C151(v165, -1000000.0, 1.0);
v167[1];
const v169 = /(?:a*)+bU\u0034xyz{1,32}/udi;
v169.dotAll = v169;
/vfoo|(bar|baz)|quux/gvds;
/JO/gvy;
class C174 {
    #m(a176, a177) {
        function f178() {
            return a177;
        }
        super[a177] = "f";
        %VerifyType(a177);
        return f178;
    }
    static c;
}
try { new C174(); } catch (e) {}
try { C174(); } catch (e) {}
const v181 = new C174();
const v182 = v181?.propertyIsEnumerable;
try { new v182(v77); } catch (e) {}
const v184 = new C174();
v184.constructor = Array;
const v185 = v184?.constructor;
v185.d = v94;
v185.d = v185;
const v186 = new C174();
const v187 = v186?.constructor;
try { new v187(); } catch (e) {}
const v189 = v186?.constructor;
v189.d = v189;
class C190 {
    p(a192) {
        this.g ^= this[8];
    }
    static #n(a195, a196, a197, a198) {
    }
    7 = v186;
    #a = v184;
}
try { new C190(); } catch (e) {}
const v200 = new C190();
v200[7] = v200;
v200[7] = v200;
const v201 = new C190();
v201[7];
v201[7] = v201;
const v204 = [[],"f",v186,381717.6504737276];
[v181];
function F206() {
    if (!new.target) { throw 'must be called with new'; }
    function f208() {
        function f209() {
            let v210 = this === v149;
            v210 = v60;
            return this;
        }
        return f209;
    }
    Object.defineProperty(this, "constructor", { configurable: true, enumerable: true, get: f208 });
    try { this.propertyIsEnumerable(); } catch (e) {}
}
new F206();
const v213 = new F206();
v213.e = v54;
function F214(a216, a217) {
    if (!new.target) { throw 'must be called with new'; }
    const v218 = this?.propertyIsEnumerable;
    try { new v218(478427087n); } catch (e) {}
    const v220 = a216?.constructor;
    try { new v220(); } catch (e) {}
    const v222 = a217?.__lookupGetter__;
    try { v222(); } catch (e) {}
    try { this.constructor(F214, this); } catch (e) {}
    a216.e = a216;
}
F214.length;
F214.arguments = F214;
new F214(v213);
("Hyo9")[1].length;
const t263 = "at";
t263[1] = "at";
const v233 = ([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap?.constructor;
try { v233.prototype(); } catch (e) {}
const v235 = [-4.202468609045087];
v235[0];
try { v235.every(v204); } catch (e) {}
[0.8434386161503777];
("4i")?.toWellFormed;
const t271 = "4i";
t271[1] = "4i";
const t275 = "RpXR";
t275[3] = "RpXR";
const t277 = "RpXR";
t277[1] = "RpXR";
try { ("c").codePointAt("boolean"); } catch (e) {}
("c")?.toLocaleUpperCase.length;
class C247 {
    constructor(a249) {
        -("valueOf").localeCompare(a249, "valueOf");
    }
}
C247.toString = f78;
try { C247.toString(); } catch (e) {}
const v253 = new C247();
const v254 = v253.constructor;
v254.toString = f0;
v254.name;
const v256 = new v254(C247);
v256[Symbol.toPrimitive] = f0;
const v259 = v256?.constructor;
try { new v259(v256); } catch (e) {}
try { new v69("998423439", C63); } catch (e) {}
9 >>> 9;
9 >> 9;
let v270;
try { v270 = Uint32Array.from(15n); } catch (e) {}
try { v270.entries(); } catch (e) {}
const v272 = new Uint32Array(2432);
const o273 = {
    ...v272,
};
let v275 = 9007199254740991n * 9007199254740991n;
v275--;
v275 * v275;
Math.sin(-5345);
function f281() {
    const o286 = {
        [-1000000.0]: 0.0,
        set e(a285) {
        },
    };
    return f281;
}
Object.defineProperty(f281, Symbol.toPrimitive, { writable: true, value: f40 });
f281.arguments;
f281.caller = f281;
const v290 = f281();
v290.toString = f281;
const v291 = f281();
class C292 {
    static [f281] = v291;
}
try { new C292(); } catch (e) {}
try { C292.bind(v290); } catch (e) {}
