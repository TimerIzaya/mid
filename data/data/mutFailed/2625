new Int16Array(1578);
new Float64Array(1);
function f14(a15, a16) {
    const o18 = {
        [8.946504243780264e+307]: a16,
        get g() {
            return a16;
        },
    };
    return o18;
}
f14(-9.389413203732939e+306, 2.0);
f14(-9.389413203732939e+306, -1000000000000.0);
new BigUint64Array(1042);
let v23 = 257;
const v25 = new BigUint64Array(v23);
let v26 = "function";
function f27() {
    return v26;
}
function f28() {
}
[[f28,f28],f28];
v25[115] /= 4046;
const v36 = "size" && "boolean";
function f37(a38, a39, a40, a41) {
    function f42() {
        Symbol.toPrimitive;
        const o50 = {
            "e": -268435456,
            valueOf(a48, a49) {
            },
            6: -268435456,
        };
    }
    f42();
    const v53 = new Int8Array();
    v53.buffer;
    %OptimizeFunctionOnNextCall(f42);
}
with ("boolean") {
    length = v36;
    ({"length":v26,} = "isExtensible");
    const v56 = [-1000.0,1000000000.0];
    const v57 = [0.0,-605.6883350474525,-2.2250738585072014e-308,2.8064173070154015e+307,-0.0,NaN,-1.7976931348623157e+308,-1.7976931348623157e+308,1.1567619127528594,2.2250738585072014e-308];
    const o60 = {
        [33062n]: 8n,
        __proto__: v57,
        [1]: f27,
        [v36]: v36,
        ...v36,
        5: v56,
        ...v56,
    };
    f27();
    new Uint32Array(5);
    const v65 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    for (let v67 = 0; v67 < 5; v67++) {
        function f69() {
            ("Vre").codePointAt("Vre");
            return f28;
            const v73 = new Uint16Array();
            v73.lastIndexOf();
            const v75 = v65.length;
            const v76 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
            const v78 = Symbol.toPrimitive;
            const o84 = {
                toString(a80, a81) {
                    const v82 = undefined && undefined;
                    a80 *= v78;
                    return v82 <= v76;
                },
            };
            class C85 {
            }
            const o95 = {
                [v75](a87) {
                },
                [-4294967297n](a89, a90, a91, a92) {
                    eval();
                },
            };
            function f96(a97, a98, a99, a100) {
                return a99;
            }
            return v67;
        }
        f69();
        %OptimizeFunctionOnNextCall(f69);
    }
}
-4294967296 >>> -4294967296;
let v105 = --v23;
let v106 = ++v105;
Math.cos(++v106);
