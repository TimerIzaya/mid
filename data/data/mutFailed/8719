class C3 {
    static b;
    static #p(a5, a6) {
        const v7 = (1e-15)[65536];
        const v8 = [v7,1.126965338334857e+307];
        const v10 = [[1000000000000.0,v7,a6]];
        C3 & 1e-15;
        try { new C3(v8, v10, a6, a5, a5); } catch (e) {}
        Math.acosh(!1e-15);
        1e-15 >> 1e-15;
        -0.4535711297047269;
        return 1.126965338334857e+307 >> 1e-15;
    }
}
const v21 = new C3();
const v22 = new C3();
new v21();
[854436.4865066204,-1000000000000.0,-76.20116331413124,1000.0,-267379.58273517375,-622.9128329533327,0.7006061523472106,0.7563499992065632];
[-1000000.0,4.0,-2.0,1000000000000.0,-4.0,1.303131793079003e+308,-1.3824745575701032e+308,259108.6046463237];
[-3.4636849471193676,-5.0,4.988365101758127];
for (let i41 = 0, i42 = 280;
    2273 < 280;
    (() => {
        for (let v46 = 0; v46 < 5; v46++) {
            function f47(a48) {
                return v46;
            }
        }
    })()) {
}
1.126965338334857e+307 >> v22;
const v53 = new Map();
v53.size -= -1073741824;
Reflect.construct(C3, [], C3);
