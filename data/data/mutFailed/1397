try {
    const t1 = "AkG";
    t1.length = 94;
} catch(e5) {
}
const v10 = new Uint8Array(4);
const v11 = v10[1];
Int8Array.BYTES_PER_ELEMENT = Int8Array;
new Int8Array(234);
new Uint8ClampedArray(1024);
const v19 = v11 * 8077n;
class C20 {
    [8077n];
}
C20.g = v19;
C20.g = C20;
const v21 = new C20();
v21[8077];
new Float32Array(4096);
function f26() {
    return f26;
}
const v27 = [601759695];
const v28 = [1073741824,1073741823,1376142744,1073741825];
function f29(a30, a31, a32, a33) {
    function f35() {
        return a30;
    }
    f26();
    const v38 = new Int8Array();
    v38.buffer.slice();
    %OptimizeFunctionOnNextCall(f35);
    let v42;
    try { v42 = v28["find"](..."symbol", a33, ...v27); } catch (e) {}
    v42 <= a32;
    return a31;
}
function f44(a45, a46) {
    arguments.toString = a45;
    return a45;
}
try { f44(723.0615512451802, 723.0615512451802); } catch (e) {}
class C50 {
    constructor(a52, a53) {
        const v54 = this.constructor;
        try { new v54(a53, a53, v54, this, v54); } catch (e) {}
        this[-2147483648] >>>= 4;
        for (let v56 = 0; v56 < 5; v56++) {
        }
    }
}
f44(f44, 8077n);
