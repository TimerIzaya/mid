new Float32Array(1000);
const v5 = new Float32Array(1000);
try { ("g").startsWith(2461); } catch (e) {}
("-1723624938").slice(9, "g").normalize();
const v14 = new BigInt64Array(2461);
try { v14.filter("-1723624938"); } catch (e) {}
function f16() {
}
function f17() {
    1000 / "g";
    b = /8/vdiy;
    return v14;
}
f16[Symbol.toPrimitive] = f17;
const v22 = [f16,f16];
v22[Symbol.toPrimitive] = f17;
Int8Array.BYTES_PER_ELEMENT = Int8Array;
const v27 = new Int8Array(9);
class C28 {
    [v22];
    10;
    static c = v27;
}
function f29() {
    return 16;
}
f29.e = 9;
f29.e = f29;
[1000];
[16,16,2461];
[f29];
function f33() {
    1000000000000.0 + 1000000000000.0;
    const o40 = {
        "e": 12,
        __proto__: 1000000000000.0,
        "g": 16,
        o(a39) {
            return a39;
        },
        ...1000000000000.0,
    };
    return o40;
}
%PrepareFunctionForOptimization(f33);
try { Math.expm1(v5); } catch (e) {}
function f43() {
    Math.max(4.0, 4.0);
    return 4.0;
}
let v46 = f43();
v46--;
f33();
const v49 = f33();
v49.e = v49;
%OptimizeFunctionOnNextCall(f33);
const v50 = [-2,1024];
function F51(a53, a54, a55, a56) {
    if (!new.target) { throw 'must be called with new'; }
    for (let v59 = 0; v59 < 100; v59++) {
        const o63 = {
            6: undefined,
            "d": undefined,
            [268435439n]: 2105444095n,
            __proto__: v50,
            "g": undefined,
            "b": 2105444095n,
            "arguments": this,
            valueOf(a62) {
            },
        };
        o63[1] = o63;
    }
}
f33();
