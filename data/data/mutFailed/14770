const v0 = [];
const v3 = new Uint16Array(1000);
for (let v4 = 0; v4 < 56; v4++) {
    v0[65535] |= v4;
}
let v5 = v3[1000];
v5 /= Uint16Array;
const v8 = new Int8Array(9);
const v10 = 672 - 672;
const v12 = new Int32Array(672);
let v19 = ("o")?.small;
9223372036854775807 ^ 9223372036854775807;
class C27 {
}
const v28 = new C27();
v19 <<= -56334n;
%VerifyType(v5);
const t17 = v28.constructor;
const v33 = new t17();
v33.constructor;
const v35 = new C27();
const t21 = v35.constructor;
new t21();
let v39;
try { v39 = new v19(); } catch (e) {}
class C41 {
    m(a43, a44) {
        0.0 ** this;
    }
    static get c() {
        let v47 = 10;
        for (; v47--;) {
            super.c = this;
            Symbol.isConcatSpreadable;
        }
    }
}
C41.h = C41;
new C41();
const v52 = new C41();
const v53 = v52?.constructor;
try { new v53(); } catch (e) {}
const v55 = new C41();
const v56 = [0.41400040521582504,-2.2250738585072014e-308,1000000000.0,1.0,-7.840812307817487,0.8468093444532201];
const v57 = [0.7320309079988974,-2.0,474241.4698858885];
try { v57.flat(); } catch (e) {}
const v59 = [-2.220446049250313e-16,-49.43730904135202,1000000000000.0];
class C61 extends C41 {
    o(a63, a64, a65) {
        Math.abs();
        Math.round(a65);
        Math.acosh();
        Math.sinh();
        return v56;
    }
    #g = C41;
    [9007199254740990n];
    #c = v3;
    #b;
    [v39] = 672;
    static 2990033134;
    static 1;
    245 = 9007199254740990n;
    [v57] = v55;
}
try { v12.every(v53, v56); } catch (e) {}
v8[7];
v59.length;
const v77 = new C61();
v77[9007199254740990];
const v79 = new C61();
v79[9007199254740990];
const v81 = v79.m();
let v82;
try { v82 = new v81(...v79, 9007199254740990n); } catch (e) {}
try { v79.o(-59239n, 0.0, v82, v10, v82); } catch (e) {}
try {
    new C27();
} catch(e88) {
}
