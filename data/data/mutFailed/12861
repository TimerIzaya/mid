const v2 = -Infinity;
class C3 {
    h = "cILxZ";
    constructor(a5) {
        function f6() {
            let v7 = 144;
            const v8 = v7++;
            function f9(a10) {
                a10[4];
                return v8;
            }
            return f9;
        }
        a5.valueOf = f6;
        a5 << a5;
        a5 - a5;
        try {
            const t17 = "cILxZ";
            t17.c = v2;
        } catch(e14) {
            e14.g = e14;
            e14.b = e14;
        }
    }
    get c() {
        let v15 = this;
        let v16;
        try { v16 = new v2(v15, "b"); } catch (e) {}
        let v17 = v15.__proto__;
        [v15,v15,v17] = "cILxZ";
        const v18 = super[v17];
        v16 = v18;
        try { v17["getUTCMinutes"](C3, "getUTCMinutes", v2, v2, v18); } catch (e) {}
        super.e = "b";
        super[v2] = v18;
        new Float32Array(3124);
        new BigUint64Array(4096);
        new BigInt64Array(3143);
        return v2;
    }
}
function f30(a31, a32) {
    const v34 = new Date();
    return v34.setFullYear(v34, Date, v34);
}
C3[Symbol.toPrimitive] = f30;
C3.length = C3;
const v38 = new C3(v2);
v38.c = v38;
const v39 = new C3(C3);
const v40 = new C3("b");
const v41 = v40.h;
try { ("NE").sup(); } catch (e) {}
function f46() {
    return "symbol";
}
class C47 {
    [v2] = "b";
    toString(a49, a50) {
        function f51(a52) {
            class C54 {
                static #c = "bigint";
                static valueOf(a56) {
                    this.#c = "bigint";
                }
            }
            return v41;
        }
        a49.constructor = f51;
        const v57 = a49?.constructor;
        try { new v57(); } catch (e) {}
        try { a50.small(); } catch (e) {}
        super[a50] = "symbol";
        d = "undefined";
        Object.defineProperty(v39, C3, { writable: true, value: C3 });
        return "undefined";
    }
    static #o(a61, a62, a63) {
        %VerifyType(v2);
        return a61;
    }
    static b = "cILxZ";
    #e;
    536870912 = "NE";
    static 2 = C47;
    h = C47;
    3325 = v40;
    ["symbol"];
    e = "cILxZ";
    static ["NE"];
}
C47.d = C47;
let v64;
try { v64 = new C47(); } catch (e) {}
const v65 = new C47();
v65.symbol;
const v67 = new C47();
v67.c = v67;
v67.symbol;
const v69 = new C47();
function f70() {
    const v71 = [-6135,-37816,1634505153,-2147483649,10];
    const v72 = [0.23449681451060211,-1.3180974566102865e+308,-2.0,-1000000000.0,0.6107310765455765];
    const v74 = new Int16Array(v72);
    function f75(a76, a77, a78, a79) {
        for (let i83 = 0, i84 = 10;
            (() => {
                const v85 = i83 < i84;
                !v85;
                return v85;
            })();
            i84--) {
            for (let v92 = 0; v92 < 10; v92++) {
                i84 - i84;
                ("number")[i83];
                "number" | v72;
                v71.length;
                v74.__proto__;
            }
        }
        return a77;
    }
    for (let v98 = 0; v98 < 10; v98++) {
        f75(v98, v98, v98, v98);
    }
    return v64;
}
v69.toString = f70;
try { v69.toString(v69, "b"); } catch (e) {}
const v102 = new BigInt64Array();
let v103;
try { v103 = v102.copyWithin("NE", v102); } catch (e) {}
const v104 = v103?.entries;
try { new v104(); } catch (e) {}
const v107 = v102.copyWithin(-9223372036854775808);
try { v107.keys(); } catch (e) {}
