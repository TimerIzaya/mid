class C3 {
    constructor(a5, a6) {
        a5 & a5;
        function f10() {
            return f10;
        }
        let v11;
        try {
        const t0 = -3.0;
        v11 = t0(a6);
        } catch (e) {}
        function f12() {
            return v11;
        }
        try { f12.toString(); } catch (e) {}
        const v15 = -f12.length;
        const v17 = f10().constructor;
        let v18;
        try { v18 = v17(); } catch (e) {}
        v18.arguments = v18;
        const v19 = v18.bind(v15, v17, v18);
        function f20() {
            return v18;
        }
        -3.0 | -9007199254740992;
        function f22() {
            for (const v23 in v19) {
            }
            return f10;
        }
        for (let i26 = 0, i27 = 10;
            (() => {
                const v28 = i26 < i27;
                const v30 = [-4.0,-1e-15];
                v30[2] = v30;
                v30[2] = 54004;
                const v33 = new BigUint64Array(3375);
                let [v34,,v35,...v36] = v33;
                return v28;
            })();
            i26++) {
        }
        a6 - a6;
        const v44 = Symbol.iterator;
        Symbol.for(v44.description);
        const o56 = {
            [v44]() {
                let v49 = 10;
                const o55 = {
                    next() {
                        v49--;
                        const v53 = v49 == 0;
                        const o54 = {
                            "done": v53,
                            "value": v49,
                        };
                        return o54;
                    },
                };
                return o55;
            },
        };
        o56.f = o56;
    }
}
const v57 = new C3(128, 1000000.0);
function f58(a59) {
    function f61(a62) {
        return 512;
    }
    return 1000000.0;
}
v57.constructor = f58;
const v63 = v57?.constructor;
function f64(a65, a66) {
    return a65;
}
const v67 = [1,40880,1,-65535,3109,268435456,0,-47552,1073741823];
const v69 = new BigUint64Array();
try { v67.map(v69); } catch (e) {}
try { new v63(128, C3); } catch (e) {}
const v72 = new C3("fround", C3);
const v73 = new C3("fround", v72);
-129;
new BigInt64Array(11);
function f79() {
    return v73;
}
const t88 = "bigint";
t88.f = "bigint";
true || true;
const o87 = {
};
v67[11] = o87;
try { Reflect.set(); } catch (e) {}
function f90(a91, a92, a93) {
    const v96 = new Int8Array();
    Int16Array.apply(128, v96);
    return f90;
}
try { f90(f90, f90, f90); } catch (e) {}
let v100 = 16;
v100--;
new Uint16Array(1000);
-(-13050);
for (let i116 = 0, i117 = 10; i116 < i117; i117--) {
}
const t107 = [0.8307152163010869,1.0,0.0];
t107.length = 1494907924;
const v127 = new Map();
function f128(a129, a130) {
    const o137 = {
        "a": a130,
        [v127]: Map,
        [129](a132, a133, a134) {
        },
        ...v127,
        [a130]: Map,
        valueOf(a136) {
        },
    };
    return a130;
}
const o142 = {
    get b() {
        eval("");
        return v100;
    },
};
