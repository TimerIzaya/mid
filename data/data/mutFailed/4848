let v6 = 8 ^ 8;
const v7 = [-2.220446049250313e-16];
const v8 = [4.0,-3.0];
let v9;
try { v9 = v8.pop(); } catch (e) {}
const v10 = [0.3378526519202183,1e-15,-1000000000.0,2.6061048335147767e+307,-1.4423486482834935,259.54793100772577,296819.9934230675,0.0,578979.9587276282,4.0];
let v11;
try { v11 = v10.reduce(8); } catch (e) {}
class C12 {
    static o(a14, a15, a16, a17) {
        let v18;
        try { v18 = this.toString(62869n, 16n, -65535); } catch (e) {}
        try { v18(this, this); } catch (e) {}
        try {
            v10.__proto__ = a15;
        } catch(e21) {
        }
        return 2;
    }
    #valueOf(a23, a24, a25) {
        try {
            a23.#valueOf(62869n, 8, a24, this, 16n);
        } catch(e27) {
        }
        return v7;
    }
}
const o41 = {
    "maxByteLength": 8,
    p(a31, a32) {
        const o33 = {
        };
        try {
            o33.d = a31;
        } catch(e34) {
        }
        try {
            const o35 = {
            };
            o35.d = a31;
            o35.a = this;
        } catch(e36) {
        }
        try {
            const o37 = {
            };
            o37.d = a31;
            o37.a = this;
            o37.g = C12;
        } catch(e38) {
        }
        try {
            const o39 = {
            };
            o39.d = a31;
            o39.a = this;
            o39.g = v6;
        } catch(e40) {
        }
        return C12;
    },
};
const v43 = new ArrayBuffer(8, o41);
const v45 = new Uint8ClampedArray(v43);
C12.prototype = C12;
const v46 = new C12();
function f47() {
    ([NaN,3.0])["concat"](-483497369);
    return -483497369;
}
v46.constructor = f47;
const v52 = v46?.constructor;
let v53;
try { v53 = v52(f47, v8, v52, v11); } catch (e) {}
Object.defineProperty(v9, v53, { configurable: true, get: f47 });
v10[0] = 8;
%VerifyType(v45);
let v55 = -2;
const v57 = ~(++v55);
Math.asinh(v55);
Math.clz32(C12);
+v55;
-v57;
try { new v52(); } catch (e) {}
new C12();
const v64 = new C12();
const v65 = v64?.__lookupGetter__;
const v66 = v65?.apply;
let v67;
try { v67 = new v66(v7, 2); } catch (e) {}
try { new v65(C12); } catch (e) {}
7.580773593797683e+307 >> 7.580773593797683e+307;
const o73 = {
};
new Proxy(v45, o73);
v6 = 8;
const v77 = ["e","e","e","e","e"];
v77.toString = f47;
const v78 = v77[4];
try { v78.blink(); } catch (e) {}
let v80 = "e" | v77;
v80 !== v80;
v80--;
new Date(v80);
try {
    v67?.d;
    typeof 3.0 === "string";
    Date("MIN_VALUE");
} catch(e94) {
}
