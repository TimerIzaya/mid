const v0 = [1073741825,30136,1832977583,1073741823,-9007199254740990,2147483649,-62920,4096,1991830722,-6];
const v1 = [-9007199254740991,127,128,61835,11042,2019290115,-57284,-1037285961,-2147483648,6];
const v2 = [16,268435441,48900,536870912,-9223372036854775807,-65535];
class C3 {
    set d(a5) {
        v2.reverse(this, a5, ...v1, a5, a5);
    }
    f;
    1;
    #d = v2;
    #b = v0;
}
const v10 = new C3(v1, v0, v0);
const v11 = v10[1];
new v10();
new v11();
-1585565830 * -1585565830;
function F18(a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = a21;
    this.d = C3;
    v2.d = a20;
    255n < v11;
    255n >> 255n;
    ~a21;
    try {
        new F18(v10, a20);
    } catch(e27) {
    }
}
F18.arguments = F18;
new F18(F18, F18);
new F18(F18, F18);
