class C3 {
    static #f;
    #a = 583856.6950860023;
    constructor(a5) {
        for (let v9 = 0; v9 < 10; v9++) {
            class C11 {
                4294967296 = 996195971n;
            }
            new C11();
        }
    }
    #c;
    static #h;
    static 2324201619;
}
const v13 = new C3(C3);
new C3(583856.6950860023);
const v15 = new C3(-1956778660);
class C16 extends v13 {
    [-1956778660];
    static d;
    static m(a18, a19, a20, a21) {
        C16[1882180277] = v15;
        new Map();
        return a18;
    }
    static e;
    [C3];
}
const v24 = new C16();
new C16();
new C16();
const v27 = [536870887,-42204,-17288903,-3,9007199254740991,7];
const v28 = [6,268435440,13,1073741825];
const v29 = [-15,-2147483649,-899333997,3,1455560807,-1024,-4294967297,2098301778];
v29.reverse();
class C31 {
    constructor(a33) {
        function f34(a35, a36) {
            v24[5];
        }
        f34(v29);
        f34(f34(v27));
    }
}
const v41 = C31.constructor;
new C31(v28);
const v43 = new C16(v27);
const t48 = v43.constructor;
const v45 = new t48(v24);
const v46 = new v45(C31);
try { v46.__defineGetter__(); } catch (e) {}
function f48(a49, a50, a51, a52) {
    try { a50.some(v41); } catch (e) {}
    const o54 = {
        __proto__: a49,
    };
    try { o54.groupToMap(); } catch (e) {}
    return o54;
}
const v57 = f48(v28).indexOf();
const v58 = f48(v29, v27);
try { v58.groupToMap(v57); } catch (e) {}
f48(v29, v29);
const o62 = {
};
gc(o62);
