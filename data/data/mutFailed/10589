class C3 {
    static #h = "MXypJ";
    set b(a5) {
        let v4 = this;
        let v6 = 0;
        do {
            v4 = a5;
            v6++;
        } while (v6 < 2)
    }
    #a = "-18958";
}
new C3();
const v11 = new C3();
const v12 = new C3();
class C13 extends C3 {
    static [C3] = v11;
    static 1535556431 = v12;
    #h = 0.5694937224232901;
    static n(a15, a16, a17) {
        try {
            this.valueOf = a15;
        } catch(e18) {
        }
        return "o";
    }
}
new C13();
new C13();
new C13();
function f28() {
    function F29(a31) {
        if (!new.target) { throw 'must be called with new'; }
        const v32 = this.constructor;
        const v33 = v32.bind(F29, F29, F29, F29);
        try { v33(v33, F29, f28, f28, a31); } catch (e) {}
        try { new v32(); } catch (e) {}
    }
    new F29();
}
const v37 = [f28];
const v38 = [v37];
const v39 = [v37,f28,v37];
new BigInt64Array(3444);
class C44 {
}
new C44();
const v47 = [];
function f48() {
    const o49 = {
        __proto__: v47,
    };
}
new Uint8Array();
new Uint8ClampedArray();
const v55 = new Date();
Object.defineProperty(v55, "toString", { writable: true, value: f48 });
const v57 = new BigUint64Array();
v57[v55] = v55;
f28(BigInt64Array, f28, ...v38, 3444, 1024, ...v39);
f28();
f28();
[0.9830880735406903,-0.6660198851192867,729.1589343121786,6.490727458123557e+307,-1.2538779643386477e+308,-1000000000.0];
[638.8226705123661,3.0,-2.2250738585072014e-308,771474.4832247959,816263.8956170448,2.220446049250313e-16,5.0];
const v63 = [8.944191192251868,-1.4998894798282654e+308,4.0,-0.0,-1000000000000.0,-5.0,-2.220446049250313e-16];
function f64(a65, a66) {
    try {
        f28();
    } catch(e68) {
    }
    return v63;
}
Object.defineProperty(v63, "toString", { writable: true, configurable: true, enumerable: true, value: f64 });
[-5.83623517593701,-1.0,-1e-15];
[692.912813481568,126686.58689393173];
function f72(a73, a74) {
    const o78 = {
        [a73](a76, a77) {
        },
    };
}
const v79 = f72(v63, 128);
/j(x)(x)(x)\2/gud;
/[\0](?:ab|cde)/vimsy;
/^xxx$/uisy;
try { v79.p(); } catch (e) {}
const v86 = new Uint8ClampedArray(104);
v86.toLocaleString().toLocaleLowerCase();
const v94 = new Array(7);
const v95 = [v94,v94,7];
try { v95.findLastIndex(v95); } catch (e) {}
[v95,v95,v94];
[Array];
let v101 = 129n;
v101--;
Set.g = Set;
Set.g = Set;
const v104 = new Set();
const v105 = [-13,-9,1,529969044,1022331071,-15,1073741825];
[-51943,-4294967297,-2680,127];
const v107 = [257,0,536870888,4924869,1073741823,-11381,-4096];
v107[0] = v107;
let v108 = 1473;
v108++;
const v111 = new Int32Array(v108);
v111[580];
151 >>> 151;
const v116 = new Int8Array(v105);
v116[2];
try { new Uint16Array(v104, v94, v104); } catch (e) {}
new Uint16Array(7);
2.2250738585072014e-308 << 2.2250738585072014e-308;
const v131 = new Int16Array(2183);
new Uint8Array(255);
const v137 = new Int16Array(8);
async function f139(a140, a141, a142) {
    a140 > a140;
    a142 + a142;
    delete v137[-1000000000.0];
    let [v146,v147,...v148] = v131;
    v146 >>> v146;
    v131[5];
    const v151 = await v147;
    v151 | v151;
    return v146;
}
+-36313;
