try {
    const t1 = -3;
    t1.e = 8;
} catch(e3) {
}
const v6 = new Uint8Array(7);
new Uint8ClampedArray(129);
let v11 = Int16Array;
const v12 = new v11(3347);
let v15 = -65537n;
let v16 = -1.0;
function F19(a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    function f24(a25, a26) {
        for (let i29 = 0, i30 = 10; i29 < i30; i29++, i30--) {
            break;
            function F38(a40, a41, a42) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.c = a25;
                } catch(e43) {
                }
                try {
                    this.g = a26;
                } catch(e44) {
                }
                try {
                    this.f = a40;
                } catch(e45) {
                }
            }
            const v46 = new F38(-5.830395732217866, -5.830395732217866, a22);
            new F38(a25, 3.0, v46);
            new F38(v46, a26, 3.0);
        }
        a26?.c;
        try {
            a22.c = -65537n;
        } catch(e50) {
        }
        return this;
    }
    this.constructor = f24;
    const v51 = this?.hasOwnProperty;
    try { new v51(-65536n); } catch (e) {}
    a22 != a22;
    try {
        this.h = a23;
    } catch(e54) {
    }
}
const v55 = new F19(-3, 3.0, 1744658125);
function f56(a57, a58) {
    try { a57["create"]("create"); } catch (e) {}
    return v55;
}
v55.constructor = f56;
let v61;
try { v61 = v55.constructor(3.0, F19, 3.0); } catch (e) {}
const v62 = new F19(1744658125, -65536n, 1744658125);
new F19(-3, v62, 8);
function f64() {
    return -65537n;
}
function f65(a66, a67) {
    ({"a":v15,"d":a66,"e":v16,} = v61);
    Reflect.construct(Date, [1024]);
    return Reflect;
}
f64.toString = f65;
const v74 = new BigInt64Array();
new Int16Array();
let v79 = -124752769;
Object.defineProperty(v6, 4, { writable: true, set: f64 });
const v80 = v12[65537];
v16 ^ -3;
-v16;
Math.log(v11);
--v11;
Math.log10(v16);
v79++;
TypeError.length = TypeError;
const v92 = TypeError();
class C93 {
    toString(a95, a96, a97, a98) {
        this.apply = -65537n;
        try { ("throw").strike(); } catch (e) {}
        try { this["throw"](); } catch (e) {}
        [-6.672391061426152e+307];
        const v106 = new Uint8Array(512);
        try { v106.join(f64); } catch (e) {}
        try { new eval(-3); } catch (e) {}
        eval.bind();
        const v111 = eval();
        1653620084 | 1653620084;
        Math.atan(1653620084);
        Math.log();
        const v117 = [17452,4294967295,64,-8];
        v117[3] = v117;
        try {
        const t0 = "throw";
        new t0(...v117, -1.6798118066934893e+307);
        } catch (e) {}
        const v120 = new Uint8ClampedArray(798, ...v106, v111);
        v120.valueOf = eval;
        v120[66] = v120;
    }
    constructor(a122, a123) {
        let v124;
        try { v124 = a122.apply(3.0, f64); } catch (e) {}
        v16 = -65536n;
        Object.defineProperty(v62, 2, { writable: true, configurable: true, enumerable: true, set: TypeError });
        let v125;
        try { v125 = a122.n(v80, this, v124, Uint8Array); } catch (e) {}
        try { v125(); } catch (e) {}
        [-1138208734,5,0,9223372036854775807,-4294967297,-1043753718,-8,-4294967295];
        [-9223372036854775807,56142,-9007199254740990,-2147483648,-1024,16,8,-1073741824,536870887];
        [11,510103592,1073741824,10696,-9007199254740990];
        try { new a122(v74, TypeError); } catch (e) {}
        for (let i = 0; i < 5; i++) {
            this[this];
        }
    }
}
const v132 = new C93(C93);
const v133 = v132?.constructor;
try { new v133(v132, v15); } catch (e) {}
class C136 extends WeakMap {
}
try { C136.apply(v92, f64); } catch (e) {}
