let v0 = 7;
let v1 = Uint32Array;
const v2 = new v1(v0);
try {
    v2.f = v1;
} catch(e4) {
}
({"buffer":v1,...v0} = v2);
const v6 = new Float32Array(10);
let v9 = new BigUint64Array(9);
v1["transfer"]();
for (let v15 = 0; v15 < 32; v15++) {
    v6["p" + v15] = v15;
}
v2[-1e-15] = v2;
v9 *= v9;
let v19;
try { v19 = v1.transfer(); } catch (e) {}
var f = 9;
v19[BigUint64Array] = v19;
function f23(a24, a25, a26, a27) {
    Object.defineProperty(arguments, 4, { writable: true, enumerable: true, value: -9524 });
    arguments[4] = arguments;
    return f23;
}
f23();
