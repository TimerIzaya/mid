const v3 = [-1273292588,-1273292588];
const v4 = [4294967295,26638,-1273292588,v3,v3];
const v5 = [v4,v4,-1273292588,v4,26638];
let v6;
try { v6 = v5.fill(v3); } catch (e) {}
let v7 = -128;
v7++;
-1 - -1;
class C12 {
    o(a14, a15) {
        const v16 = a15[4294967295];
        try {
            const o17 = {
            };
            a15.reduceRight(v16, o17);
        } catch(e19) {
        }
        return -1;
    }
    static [v6] = -1;
    static 3873232715 = v3;
    #d = -1273292588;
    static e;
}
let v20;
try { v20 = new C12(); } catch (e) {}
const v21 = new C12();
new C12();
const v23 = new C12();
v23?.__lookupGetter__;
let v25;
try { v25 = new C12(v21); } catch (e) {}
[-4.0];
[-132.45395067168795,-988.7444866922352,4.254490966813396,50343.305077594705,4.0,-1000.0];
[669113.7742800156,-2.6993920847537294e+307,-5.0];
class C29 {
}
const o32 = {
    "execution": "async",
};
v20(o32).finally(v25);
