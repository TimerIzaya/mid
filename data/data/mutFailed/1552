const v0 = [0.0,-1.7976931348623157e+308,859089.4116054764,-4.7831840224002615,0.0031369006467386606];
const v1 = [0.4622950305418947,-1000.0,1000.0];
const v2 = [-0.685155357392599,5.0];
class C3 {
    get d() {
        const o7 = {
            "maxByteLength": 2526698892,
        };
        const v9 = new ArrayBuffer(14, o7);
        const o15 = {
            [7]: 2526698892,
            get g() {
                return this;
            },
            set g(a14) {
            },
        };
        const v16 = new Uint8ClampedArray(v9);
        return v16;
    }
    static #d = v0;
    static 17;
    2 = v1;
}
const v17 = new C3();
new C3();
const v19 = new C3();
const v20 = [v0,v19,v0];
[v19,v20,v19,v20];
[v1,v20,v0,v17,C3];
new Uint32Array(8);
let v26 = 157;
const t32 = 8;
new t32(v26);
const v32 = new Uint8ClampedArray();
Float32Array in v32;
Math.cosh(-9.488890520175198e+307);
Math.atan2(9, 5);
new Uint32Array(44);
function f42(a43, a44, a45, a46) {
    const o54 = {
        m(a48, a49, a50, a51) {
            ("ignoreCase").normalize();
            return this;
        },
    };
    return o54;
}
const v58 = [65537,268435441,63298,-5,1235122603];
const v59 = [128,215394418];
try { v59.entries(); } catch (e) {}
const v61 = [-2,-4294967296,4294967297];
function F62(a64, a65, a66, a67) {
    if (!new.target) { throw 'must be called with new'; }
    const v68 = this?.constructor;
    try { new v68(1024, 1024, v58, this); } catch (e) {}
    a65.caller;
    a67[1];
    try {
        this.c = a66;
    } catch(e72) {
    }
    try {
        this.b = -714582153;
    } catch(e73) {
        v2.length &= 1;
        new Uint8ClampedArray();
        v26++;
    }
    try {
        this.f = a65;
    } catch(e78) {
    }
}
const v79 = new F62(-714582153, F62, -714582153, v59);
v79.length;
const v81 = new F62(9, v79, 9, v61);
v81.b = v81;
new F62(1024, v81, v61, v61);
try { ("string").trimStart(); } catch (e) {}
let v91 = -1;
-35417 - -35417;
class C94 {
    static {
        for (let v99 = 0; v99 < 32; v99++) {
        }
    }
    static 7;
    static [v91] = "string";
    #n(a102) {
        a102 = this;
        a102.e >>>= -35417;
        const o106 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o106);
        return this;
    }
}
let v108 = new C94();
const v109 = v108?.constructor;
try { new v109(); } catch (e) {}
const t103 = 2147483649;
const v111 = new t103();
const v112 = new C94();
const v113 = v112?.__defineGetter__;
try { new v113(v108, v59); } catch (e) {}
function f115(a116, a117) {
    let v118 = 0;
    do {
        v108 -= v111;
        v118++;
    } while (v118 < 5)
    const o132 = {
        ...a116,
        [a116](a123, a124, a125, a126) {
            [0.8549471140289917,-3.0,4.0,-5.0,-2.0,-1.7976931348623157e+308,5.31145436861636,NaN,1.2778157707013417e+308];
            [-1.7976931348623157e+308,-4.047862669744725e+307,-2.2250738585072014e-308,0.790769162254034,0.024752255798642486,640440.6769019293,-2.0];
            return [923.3408061449261,-6.350919708227568e+307,-2.220446049250313e-16,0.04850379751250988,4.009495502233909];
        },
        ...a117,
        "c": a116,
        "g": v112,
        "a": a116,
        set b(a131) {
            v91 <<= v91;
        },
    };
    return o132;
}
