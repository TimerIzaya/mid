function F0() {
    if (!new.target) { throw 'must be called with new'; }
    class C2 {
    }
    for (let i5 = 0, i6 = 10;
        i5 < i6;
        (() => {
            const v10 = [601759695];
            const v11 = [1073741824,1073741823,1376142744,1073741825];
            function f13(a14, a15, a16, a17) {
                function f18() {
                    return a14;
                }
                function f19(a20, a21) {
                    return i5;
                }
                f18(v11, C2);
                try { v11[a14](..."find", a17, ...v10, ...v11, ...522675525n); } catch (e) {}
                return a16;
            }
            for (let v25 = 0; v25 < 10; v25++) {
                f13(i6, f13, i5, v25);
            }
            i5++;
        })()) {
    }
    try {
        C2.a = 1073741825;
    } catch(e31) {
    }
    try {
        this.f = 1073741825;
    } catch(e32) {
    }
}
const v33 = new F0();
const v34 = new F0();
const v35 = new F0();
class C36 {
    42;
    get h() {
        for (let v38 = 0; v38 < 91; v38++) {
            try { v35["m"](F0, this, this, "m"); } catch (e) {}
        }
        try { v35(v34, this, v34, this, this); } catch (e) {}
        return v34;
    }
    static 2365 = v35;
    c = F0;
}
new C36();
new C36();
new C36();
function f52() {
    const v54 = new Int8Array();
    v54.buffer.slice(2147483648);
    return -45095n;
}
class C58 {
    static #m(a60, a61, a62) {
    }
    constructor(a64, a65, a66, a67) {
        --a67;
        try {
            this.#m();
        } catch(e70) {
        }
    }
}
const o71 = {
};
[];
o71.push();
const v76 = [0.3083488057663979,0.3083488057663979,0.3083488057663979];
class C77 {
    constructor(a79, a80) {
        let v81 = /W(jy2)/udy;
        const v82 = /(u4(?:a?)*)/gudimsy;
        const v84 = Uint8Array(v82, C77);
        const v86 = Uint32Array(4294967296, a79, a80);
        function f87(a88, a89, a90, a91) {
            const o95 = {
                ...v84,
                n(a93, a94) {
                    v86[a88] = v86;
                    return 4294967296;
                },
            };
            return o95;
        }
        for (let v96 = 0; v96 < 5; v96++) {
            f87(Uint8Array);
        }
        v81 = v82;
        for (let v98 = 0; v98 < 5; v98++) {
            v76["p" + v98] = v98;
        }
    }
}
new v33(9007199254740991n, 64n, 22453n, -45095n);
const v104 = new BigUint64Array(10);
v104["filter"](f52);
