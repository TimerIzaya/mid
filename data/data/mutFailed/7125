class C3 {
    constructor(a5, a6) {
        this[this != this] |= 1000000000.0;
        let v8;
        try {
        const t0 = 1000000000.0;
        v8 = new t0(a5, a6, this, 1000000000.0);
        } catch (e) {}
        v8[2524324493] = v8;
    }
    p(a10) {
        let v11;
        try { v11 = this.o(a10, a10, this, a10); } catch (e) {}
        let v12 = this[16];
        super[v11] = this;
        v12 >>> v12;
        Math.exp(v11);
        try {
            Math.e = 1000000000.0;
        } catch(e17) {
        }
        v11 >> a10;
        Math.log2(v11);
        v12++;
        return 2.220446049250313e-16;
    }
}
const v21 = new C3(2.220446049250313e-16, 2.220446049250313e-16);
const v22 = new C3(Infinity, 1000000000.0);
const v23 = new C3(2.220446049250313e-16, 2.220446049250313e-16);
function F24(a26, a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = Infinity;
    } catch(e30) {
    }
    try {
        this.b = a29;
    } catch(e31) {
    }
}
const v32 = new F24(v21, v22, v22, 1000000000.0);
const v33 = new F24(v23, v23, v32, 2.220446049250313e-16);
new F24(v32, v23, v33, Infinity);
new BigUint64Array(188);
new Int32Array(16);
new Int8Array(4024);
const v45 = new Map();
function f46(a47) {
    return a47;
}
Object.defineProperty(v45, "g", { configurable: true, enumerable: true, get: f46, set: f46 });
Math.log1p();
