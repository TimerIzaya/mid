class C3 {
    constructor(a5, a6) {
        const v11 = !-14714;
        Math.log10(5.06692226287417e+306);
        ~(C3++);
        v11 + 64;
        v11 | -14714;
    }
}
const v17 = new C3("m", C3);
const v18 = new C3(-1, -53491.73607057356);
new C3(v17, v18);
const v20 = ["m",-1,"m"];
const v21 = [v17,v20,v20,v17,v18];
[v17,v20];
const o23 = {
};
function f24(a25, a26) {
    const o27 = {
    };
    return o27;
}
f24.g = v21;
const v28 = f24();
const v29 = f24();
function F30(a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "constructor", { value: f24 });
    function f34(a35) {
        try {
            this.fuck(F30, a33, a35, this);
        } catch(e37) {
        }
    }
    Object.defineProperty(a32, "g", { set: f34 });
    a32.g = a32;
    const v38 = this?.constructor;
    try { new v38(f24, v28); } catch (e) {}
}
new F30(o23);
new F30(v29);
