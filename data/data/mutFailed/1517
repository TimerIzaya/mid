function f0() {
}
let v2 = -65535;
v2++;
const v5 = [2147483647,2147483647,-13,f0,2147483647];
const v6 = [v5,v5];
const v7 = [f0,-13];
function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try { a10.reduceRight(a11); } catch (e) {}
    a11 >>> a11;
    try {
        this.b = -13;
    } catch(e14) {
    }
    try {
        this.d = a10;
    } catch(e15) {
    }
    try {
        this.f = v6;
    } catch(e16) {
    }
}
new v2(v5, 2147483647);
const v18 = new F8(v6, 2147483647);
v18.g = v18;
new F8(v7, 2147483647);
1073741823 - 1073741823;
-1619293004 << -1619293004;
Map.d = Map;
const v26 = new Map();
function f27() {
    return v2;
}
v26.constructor = f27;
const v29 = f0.constructor;
v29.arguments = v29;
v29();
const o31 = {
    __proto__: Map,
};
function F33(a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    const v37 = o31.constructor;
    try { v37.call(a36); } catch (e) {}
    try { v37(268435440n, a36); } catch (e) {}
}
const v40 = new F33(Map, 268435440n);
const v41 = v40?.constructor;
try { new v41(v29, v26); } catch (e) {}
