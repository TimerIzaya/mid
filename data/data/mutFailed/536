class C3 {
    constructor(a5) {
        super();
        for (let v6 = 0; v6 < 25; v6++) {
            this["p" + v6] = v6;
        }
    }
    static [1000.0] = 1000.0;
    static [-1.6569134093527265e+308] = 1000.0;
    get g() {
        const v10 = -1.6569134093527265e+308 === "bigint";
        try {
            ("bigint").padEnd(1534558642);
        } catch(e13) {
        }
        return v10;
    }
    static valueOf(a15, a16) {
        this.d;
        const v21 = new BigInt64Array(2325);
        for (const v22 in v21) {
        }
        return 1000.0;
    }
    3 = "bigint";
    g;
    [-1];
}
try { new C3(); } catch (e) {}
const v26 = new C3();
const v27 = new C3();
const v28 = new C3();
let v29 = 0.7545617440094419;
v29--;
-1.0 > -1.0;
const v34 = [C3,v28,v29];
const v35 = [v26];
try { v35.fill(-1.0); } catch (e) {}
function f37() {
    const o44 = {
        "e": -4294967295,
        ..."Vre",
        valueOf(a42, a43) {
        },
        ..."Vre",
        4: "Vre",
        "c": -268435456,
        5: -4294967295,
        6: -268435456,
    };
    return o44;
}
f37();
[v34];
class C47 {
    static {
        try { C3.concat(); } catch (e) {}
        super[v28] = -1.6569134093527265e+308;
        class C51 extends Int32Array {
        }
        const v52 = new C51();
        const v53 = new C51();
        v52["includes"](v53);
    }
    static f = -1.0;
    static #h;
    set a(a57) {
        let v58 = Reflect;
        const v59 = [];
        v58.construct(C3, v59, C3);
        new C3(C3, C3, v28, v26);
        const v64 = -v58;
        const v65 = 4294967297 && 4294967297;
        Math.clz32(v59);
        Math.asinh(v58);
        Math.sqrt(v65);
        v58++;
        const t75 = 4294967297;
        t75[2] = v27;
        +v64;
    }
}
try { new C47(); } catch (e) {}
new C47();
new C47();
new C47();
const v78 = [];
class C79 {
    static p() {
        let v81;
        try { v81 = this(this, this, this, v78, v78); } catch (e) {}
        let v82;
        try { v82 = v81(this); } catch (e) {}
        v82 = this;
        const v83 = [-719491709,-4096,38613,-1,1024,65535,129];
        [65535,268435456,65537];
        [-1319674364,836468341,127,-46522,-4294967296,742091120,3621,16,-2,268435441];
        return v83;
    }
    static g = v78;
    1073741824 = v78;
}
const v86 = new C79();
const v87 = new C79();
const v88 = new C79();
v88[1073741824] = v88;
const v92 = [128,2147483648,-65537,4,-2068545948,-16,-1526633802,-2];
class C93 {
}
[-4294967296];
const v96 = [1000000.0,-1.7976931348623157e+308];
const o97 = {
    ...v96,
};
try { v92.reduce(v78); } catch (e) {}
[-3,8,-479894043];
try { v86(v87, v86, v88); } catch (e) {}
