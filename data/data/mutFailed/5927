let v3 = -4156;
v3++;
function f5() {
    return v3;
}
function f6(a7, a8) {
    a7 / a7;
    const o17 = {
        "b": undefined,
        "f": v3,
        "a": 39744,
        "e": 39744,
        __proto__: f5,
        "g": f5,
        o(a11, a12, a13, a14) {
            const v15 = delete this?.e;
            var c = a8;
            try {
                this.__proto__ = v15;
            } catch(e16) {
            }
            return this;
        },
    };
    function f18() {
        return f5;
    }
    function f19(a20) {
        const o21 = {
        };
    }
    Object.defineProperty(o17, "constructor", { writable: true, configurable: true, get: f18, set: f19 });
    a7 &&= 39744;
    v3 = 56656;
    let v22 = f5();
    v22--;
    const o24 = {
    };
    try {
        o24.d = v22;
    } catch(e25) {
    }
    try {
        const o26 = {
        };
        o26.h = v22;
        o26.h = o26;
        o26.d = v22;
        o26.a = v22;
    } catch(e27) {
    }
    try {
        const o28 = {
        };
        o28.d = v22;
        o28.a = v22;
        o28.g = f5;
    } catch(e29) {
    }
    try {
        const o30 = {
        };
        o30.d = v22;
        o30.a = v22;
        o30.g = v22;
    } catch(e31) {
    }
    return o17;
}
const v32 = f6(v3, 56656);
v32.b = v32;
const v33 = f6(56656, 56656);
function f34(a35, a36) {
    class C38 extends Map {
    }
    const v39 = new C38();
    return v39;
}
v33.constructor = f34;
f6(56656, 56656);
class C41 {
    #c = v3;
    static get f() {
        const v43 = v32 in v33;
        try {
            this.#c;
        } catch(e48) {
        }
        return v43;
    }
    static b;
    static #h = 56656;
}
const v49 = new C41();
v49.constructor = f5;
const v50 = new C41();
const v51 = v50?.constructor;
try { new v51(); } catch (e) {}
const v53 = new C41();
v53.constructor = f6;
const v54 = v53?.constructor;
try { new v54(); } catch (e) {}
function F56(a58, a59, a60, a61) {
    if (!new.target) { throw 'must be called with new'; }
    function f62(a63) {
        function f64() {
            return a63;
        }
    }
    Object.defineProperty(this, "f", { configurable: true, enumerable: true, set: f62 });
    function f65(a66) {
        const v69 = new Int32Array(7);
        return v69;
    }
    a58.constructor = f65;
    const v70 = a58?.constructor;
    try { new v70(); } catch (e) {}
    try {
        this.f = 56656;
    } catch(e72) {
    }
    try {
        this.h = a60;
    } catch(e73) {
    }
    try {
        this.a = 56656;
    } catch(e74) {
    }
}
new F56(v49, f6, 56656, v50);
new F56(v33, v33, v33, v32);
new F56(v32, undefined, f6, v53);
const v78 = [-1235077344,-4096,50383815,-8476,-9007199254740991];
class C80 extends Set {
}
const v81 = new C80(v78);
try { v81.has(v32); } catch (e) {}
