for (let i = 0; i < 5; i++) {
    try {
    const t0 = 9907n;
    t0();
    } catch (e) {}
}
const v5 = new Uint32Array();
function f6(a7, a8, a9, a10) {
    for (let i13 = 0, i14 = 10;
        (() => {
            const v15 = i13 < i14;
            v5[v15];
            return v15;
        })();
        i14--) {
    }
    return f6;
}
[536870887];
[536870887,12,1024,4096,-5,120682466,-9223372036854775807,63301,1];
let v25 = 5;
v25--;
([v25,v25]).join(v25);
const o30 = {
    "type": "function",
};
[7];
new Float32Array(2);
new Uint32Array();
const v41 = new Uint32Array(3);
class C42 {
    constructor(a44, a45, a46, a47) {
        try { a46(); } catch (e) {}
        for (let i50 = 0; i50 < 9; i50++) {
            v41[i50] = a47;
        }
    }
    c;
}
new C42();
new Int16Array(459);
new Uint16Array(2987);
Array();
new Map();
new Float32Array(2);
const v70 = /N\u0034/gumsy;
v70.b = v70;
const v71 = /Z8+/vdis;
v71.e = v71;
const v72 = /(?!\1(a\1)\1)\1/gvdi;
class C73 {
    static 1073741824 = v72;
    #toString(a75, a76, a77, a78) {
        Object.defineProperty(v71, "h", { configurable: true, enumerable: true, value: "3" });
        return v70;
    }
    static #o(a80, a81, a82) {
        this.setInt32(this, "d", v71);
        v72 >>> (a81 - v72);
        return v72;
    }
}
C73.toString = f6;
const v86 = [134133844,-339370636,65535,-4294967295,536870888,-324130953,536870912,268435439];
function f87() {
    const v88 = v86.length;
    const v89 = v88 >>> v88;
    const v90 = v89 % v89;
    v90 & v90;
}
new C73();
const v93 = new C73();
const v94 = v93?.constructor;
try { v94(); } catch (e) {}
const v96 = new C73();
const v97 = v96.__lookupGetter__;
try { v97(v96); } catch (e) {}
class C102 {
    set e(a104) {
        Math.fround();
        Math.ceil();
    }
    m(a109) {
    }
    e;
}
function f110(a111) {
    class C112 {
    }
    new C112();
}
Object.defineProperty(C102, "e", { writable: true, configurable: true, enumerable: true, set: f110 });
C102.e = C102;
function f114() {
    return C73;
}
function f115(a116) {
    class C117 {
        constructor(a119, a120, a121) {
            function f122(a123, a124, a125) {
                for (let i = 0; i < 5; i++) {
                    class C127 extends Set {
                        #m(a129, a130) {
                        }
                    }
                }
                return v72;
            }
        }
    }
    return C117;
}
Object.defineProperty(C102, 0, { configurable: true, get: f114, set: f115 });
const v131 = new C102();
const v132 = new C102();
new C102();
let v134 = ["number","ignoreCase",v131];
const v136 = [[v132,"number","R"],C102,C102,v134];
try { v136.map(v134); } catch (e) {}
"9" == "9";
try { ("string").small(); } catch (e) {}
const v143 = ("NN")["9"];
C102[0] >>= v143;
let v144;
try { v144 = v143(v132, v131, "string"); } catch (e) {}
v134 = v144;
let v145 = 0;
v145 === v145;
while (v145 < 7) {
    v145++;
}
