const v2 = new Float32Array(173);
new BigUint64Array(127);
new BigInt64Array(512);
const v9 = /70/gvdimsy;
/[(?<a>.)\k<a>]/gvmsy;
/oK((ab|cde)\1\p{gc=Nd}a+b|c[\0]+)*/udi;
const v12 = [];
class C13 {
    static get b() {
        try {
            v9[Symbol.asyncIterator] = Float32Array;
            try {
                v9.__proto__ = this;
            } catch(e17) {
            }
            super.getOwnPropertyNames();
        } catch(e19) {
        }
        return v12;
    }
    constructor() {
        this[v12] = this;
        this[v12] %= this;
    }
    static e;
    [v12];
}
const v21 = new C13();
const v22 = new C13();
class C29 {
    [-9] = v22;
    4294967296;
    5;
}
new C29();
const v31 = new C29();
new C29();
const v33 = 4294967296 !== v31;
class C34 extends C13 {
    #a;
    #c;
}
const v35 = new C34();
new C34();
new C34();
v21 << 65535;
const o42 = {
    "execution": "async",
    "type": "major",
};
gc(o42);
const t50 = -9;
t50[9] = -124726096;
if (v33) {
    v35.g;
    o42[65535];
} else {
    const v48 = [gc];
    Reflect.apply(v2.sort, "async", v48);
}
