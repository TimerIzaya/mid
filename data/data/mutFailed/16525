const v2 = new Int16Array(126);
let v3 = 6;
Float64Array[2] = v3;
let v5;
try { v5 = new Float64Array(Float64Array, v3, Float64Array); } catch (e) {}
try { v5.entries(); } catch (e) {}
const v7 = new Float64Array(v3);
const v8 = v7?.findLastIndex;
try { new v8(v3); } catch (e) {}
try { new BigUint64Array(v7, v7, v2); } catch (e) {}
const v13 = new BigUint64Array(1024);
const v14 = [-5.0,3.159970788178459,-1e-15,9.128505595831925,1000.0,7.879923322364192,-897.3749668537861,0.7986234999580641,-1000000.0,860.653274561234];
try { v14.sort(v14); } catch (e) {}
[1.4239733885049816e+308];
const v17 = [-1.0,-1.0,-4.3866432303611517e+307,205.5162164024414,0.3570635559379596,980.9221509239853,-Infinity,-2.2250738585072014e-308,0.7241879629040505];
try { v17.find(BigUint64Array); } catch (e) {}
try { Array.isArray(1024); } catch (e) {}
v3++;
class C26 extends Array {
    16 = 4;
    268435440;
}
let v27;
try { v27 = new C26(); } catch (e) {}
v27.e = v27;
new v13();
