const v0 = [];
const v3 = new Uint8Array(814, Uint8Array);
const v6 = new isNaN(3548, 814);
try { v6.values(); } catch (e) {}
const v10 = new Uint32Array(61);
v10[14];
const v12 = [Uint8Array,v3,v10,v6];
try { v12.toString(); } catch (e) {}
const v14 = [Uint32Array,v12,v0,v12,v6];
[61,814];
function f17(a18, a19) {
    const o27 = {
        valueOf(a21, a22, a23) {
            try {
                a21.f = 536870888n;
            } catch(e24) {
                const v25 = e24?.constructor;
                try { new v25(e24); } catch (e) {}
            }
            return 536870888n;
        },
    };
    return o27;
}
const v28 = f17();
try { v28.toString(v14, isNaN, v14, 61, v3); } catch (e) {}
const v31 = -f17(536870888n, v28);
v31 || v31;
v28 == v31;
