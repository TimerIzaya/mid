const v3 = [2,-11,-733237545,-3316,9];
const v4 = [4294967297,-1216890027,65536,-11690,-1,13,7836];
const v5 = [11,1073741824,-268435456,2,-128,54341,1,-60514,-986317634,10000];
const v6 = [v5];
const v7 = [v5,v3,10,v6];
const v8 = [v7,v6];
class C9 {
    static 64;
    static c;
    static b = v5;
    8 = v8;
    static f = v3;
    constructor(a11, a12, a13) {
        function f15(a16, a17) {
            const o18 = {
                [10000n]: a17,
            };
            return o18;
        }
        f15(10000n, f15);
        const v21 = new v3();
        const v24 = new Uint8ClampedArray(12);
        let {"byteLength":v25,...v26} = v24;
        v21.valueOf = f15;
        try {
            super.log(a13);
        } catch(e28) {
        }
    }
    [-10] = v4;
}
const v29 = new C9(v7, v8, v5);
const v30 = new C9(v4, v29, v29, 10, v3, v29);
new C9(v5, v7, v3);
const v32 = [1938815823,-2147483648,1073741825,26032,-42281,15];
const v33 = [23614,-1,-2147483648,-44119,257];
const v34 = [-4294967296,536870888,4,-9007199254740992,4294967296,129,-14276,-12381,-14453,1950241815];
function f35() {
    return v34;
}
Object.defineProperty(v34, "toString", { writable: true, configurable: true, value: f35 });
class C36 {
}
const v37 = new C36();
function F38(a40, a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    a41.g = a42;
    a43.stack = v34;
    a41.fill(v33);
}
const v45 = new F38(v37, v34, v34, v34);
new F38(v45, v33, v34, v34);
new F38(v37, v32, v33, v32, v30);
