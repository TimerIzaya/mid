class C3 {
    static #n(a5) {
        const o6 = {
        };
        const v8 = new Proxy(this, o6);
        [v8,v8];
        [o6,-1000.0];
        [-1000.0,-1000.0,-2,this];
        return -1000.0;
    }
    80 = -2;
    268435439;
    [-1000.0] = -1000.0;
}
new C3();
new C3();
const v14 = new C3();
const o16 = {
};
function f17(a18, a19, a20, a21) {
    const v23 = new Int8Array(a20);
    const v27 = new Int32Array(2528);
    v27[0] %= -1073741824;
    return v23.buffer;
}
let v29 = Int16Array;
new v29(6);
const v33 = new Uint8Array(2);
new Uint16Array(128);
const v37 = [];
const v38 = [v37];
class C40 extends Map {
    constructor(a42, a43) {
        super(v38);
    }
}
const v44 = new C40(v37, v38);
const v45 = new C40(v38, v44);
const v46 = new C40(v45, v44);
const v50 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v52 = new Uint32Array();
const v54 = v29--;
const v55 = [601759695];
const v56 = [1073741824,1073741823,1376142744,1073741825];
function f58(a59, a60, a61, a62) {
    try { a59.toLocaleString(); } catch (e) {}
    const v64 = a59?.constructor;
    try { v64(); } catch (e) {}
    try { v64(); } catch (e) {}
    const v68 = arguments.length;
    Object.defineProperty(v44, "e", { configurable: true, enumerable: true, value: f58 });
    const v70 = v45["entries"](a61, ...v46, BigUint64Array, ..."entries", a60, v68);
    new Float32Array();
    class C74 {
    }
    class C75 {
        constructor(a77, a78, a79, a80) {
            try { a79(...a77, "e", a80, a80, ...C74); } catch (e) {}
            return arguments;
        }
    }
    const v84 = Symbol.toStringTag;
    v45[v84] = v84;
    function f85() {
        let v87;
        try { v87 = ("Vre").charAt(4096); } catch (e) {}
        try { v87.lastIndexOf(); } catch (e) {}
        let v89;
        try { v89 = ("Vre").codePointAt(v50); } catch (e) {}
        v89 - v89;
        v89 ^ v89;
        let v92 = Float64Array;
        v92 = a60;
        let v93 = v50.length;
        v38.length;
        Object.defineProperty(v56, v92, { configurable: true, get: Symbol, set: Symbol });
        const o95 = {
            "apply": f17,
            "call": Symbol,
            "deleteProperty": f85,
            "get": f17,
            "getOwnPropertyDescriptor": f17,
            "preventExtensions": f17,
            "set": f58,
            "setPrototypeOf": f85,
        };
        const v97 = new Proxy(v84, o95);
        v93++;
        try {
            v56.forEach(a60);
        } catch(e100) {
            e100.stack = e100;
        }
        const o150 = {
            "h": -1000.0,
            268435439: v55,
            "maxByteLength": 128,
            ..."e",
            m(a102) {
                let v101 = this;
                a102.f = a102;
                const o103 = {
                };
                function f104(a105, a106, a107) {
                }
                try {
                } catch(e108) {
                }
                try {
                    const o109 = {
                    };
                } catch(e110) {
                }
                try { Math.expm1(); } catch (e) {}
                const v115 = new BigInt64Array(5);
                function f116() {
                    return v115;
                }
                try { v115.map(f116); } catch (e) {}
                let v118 = -9007199254740991;
                v118++;
                v118 >> -1000.0;
                class C121 {
                }
                C121.name.codePointAt();
                const t124 = -4294967297n;
                const v126 = new t124(3938);
                let v127 = 3;
                v101++;
                delete v14[7];
                try {
                    o103.fuck(128n, true, Uint16Array);
                } catch(e133) {
                }
                [...v127] = v126;
                const o134 = {
                };
            },
            "c": -4294967297n,
            "EPSILON": v55,
            "a": -4294967297n,
            __proto__: v33,
            "d": v52,
            255: v97,
            "e": a61,
            valueOf(a136, a137) {
                return a136;
            },
            1073741824: v52,
            "arguments": v37,
            get h() {
                return this;
            },
            [v56](a140, a141, a142) {
            },
            [-4294967297n](a144, a145, a146, a147) {
                eval();
            },
            "arguments": 5,
            256: a62,
        };
        return v93;
    }
    f85();
    const v153 = Array();
    let v154;
    try { v154 = v153.findLast(f58, v52); } catch (e) {}
    v153.unshift("entries", v70, "entries", v154);
    let v157;
    try { v157 = Int8Array.of(); } catch (e) {}
    try { v157.join(v64); } catch (e) {}
    const v159 = new Int8Array(v55);
    v159.c = v159;
    const v160 = v159.buffer;
    v160.maxByteLength;
    const v162 = v160.slice(v64);
    try { Int32Array(v162, arguments, -4294967297n); } catch (e) {}
    function f165(a166, a167, a168, a169) {
        return a169;
    }
    const v170 = new Int32Array();
    const v171 = v170[3];
    v171 + v171;
    for (let v173 = 0; v173 < 5; v173++) {
    }
    %OptimizeFunctionOnNextCall(f85);
    try { v56["find"](..."find", a62, ...v55, ...v56, ...522675525n); } catch (e) {}
    return a59;
}
for (let v176 = 0; v176 < 10; v176++) {
    f58(v52);
}
%OptimizeFunctionOnNextCall(f58);
f58(v55, v37, v54, f58);
const o182 = {
    ["536870887"]: -1000000000000.0,
    "b": -757.5759240774136,
    "a": -1000000000000.0,
    [-757.5759240774136]: "536870887",
    [-1000000000000.0]: -757.5759240774136,
    "d": "536870887",
    [-2]: -1000000000000.0,
};
