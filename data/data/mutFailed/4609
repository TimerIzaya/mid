new Int16Array(128);
new Float32Array(127);
new Int16Array(7);
const v14 = new BigInt64Array(0);
new Int8Array(1754);
new Uint8ClampedArray(83);
const v23 = new BigInt64Array(205);
const v26 = new Uint16Array(256);
const v27 = v23[205];
const v31 = new Float64Array(255);
v31.b = 0;
function F32(a34, a35, a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    a35 >> a35;
    a37 | a37;
    v31.b = a35;
    for (const v40 of v26) {
        v27?.h;
    }
}
new F32(255, 205, 255);
const v43 = new F32(255, 256, 255);
const v44 = new F32(255, 205, 256, 255);
const v45 = [-1000000000.0,5.0,872297.1015869486,-1e-15,0.2087529151028652];
function f46() {
    new Int32Array(4);
    new BigInt64Array(35);
    const v55 = new Uint32Array(1188);
    return v55;
}
v45[Symbol.toPrimitive] = f46;
function f58(a59) {
    const o60 = {
    };
    return o60;
}
v45.valueOf = f58;
function f61(a62) {
    class C63 {
    }
    const v64 = new C63();
    v64.g = v64;
    const v65 = v64.g;
    try {
        v65.length = 1;
    } catch(e67) {
    }
    return v65;
}
Object.defineProperty(v45, "toString", { configurable: true, enumerable: true, value: f61 });
const v68 = /(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/u;
const v69 = [Infinity];
const v70 = [2.2250738585072014e-308,1.949684848262672,4.0];
v70[4] = v68;
Object.defineProperty(v70, 3, { writable: true, configurable: true, enumerable: true, value: Int16Array });
const v71 = v70.push(v68);
const v72 = [342.12300421344116,0.3998304334347528,-1.5569468467414895e+308,929110.7069466491,0.8403359879371063,928.8415619105033,5.0];
v72.toStringTag = v14;
v72.toStringTag = v44;
const v73 = v72.toStringTag;
let v74;
try { v74 = v69.every(v73, v43); } catch (e) {}
const v75 = new F32(v73, v74, v74, v71);
function f76() {
    return f46;
}
Object.defineProperty(v75, "constructor", { writable: true, get: f76 });
const t67 = v75.constructor;
new t67(-9007199254740991, v45, v70);
class C79 {
}
Object.defineProperty(C79, "toString", { writable: true, value: f61 });
const v80 = C79.toString;
try { v80(); } catch (e) {}
