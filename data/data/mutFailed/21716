function F0() {
    if (!new.target) { throw 'must be called with new'; }
    function f2(a3, a4) {
        return [[-1e-15,-4.547098672084515,6.731189859503068,1000.0,1000.0,414.1111077300918,567.5737904015757]];
    }
    this.toString = f2;
    try {
        this.c = -65536;
    } catch(e8) {
    }
    try {
        this.a = -65536;
    } catch(e9) {
    }
    try {
        this.e = -65536;
    } catch(e10) {
    }
}
const v11 = new F0();
const v12 = new F0();
const v13 = new F0();
class C14 {
    #f;
    static #toString(a16) {
        if (this) {
            v12.e;
        } else {
            const v18 = v11 << a16;
            try {
                this.#f &= v18;
            } catch(e19) {
            }
        }
        return v13;
    }
    [v12] = v12;
}
const v20 = new C14();
new C14();
new C14();
[-598815.3862835572];
[-1.7976931348623157e+308,-2.220446049250313e-16,-96.66303476888993,1000000000000.0,0.10915500516904963,427.25877883176236,0.21847999078275826,705458.3188810309,-Infinity];
[-76.86679252818271,-9.151865577468022e+307,1000000.0,2.2250738585072014e-308,-3.0,1000000.0,0.7764818166353689,-1000.0,-Infinity,-6.795311748208633];
Uint16Array[1] = v20;
const v30 = new Uint16Array(Uint16Array);
class C31 {
    #p(a33, a34, a35, a36) {
    }
    constructor(a38, a39) {
        try {
            v30.#p();
        } catch(e41) {
        }
    }
}
new C31();
