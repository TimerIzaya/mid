[-5.0,-389041.89558313077,-1.0,2.2250738585072014e-308,-1.7976931348623157e+308,2.2250738585072014e-308,2.0];
const v1 = [0.22196764313881345,1.7264088473952957e+308,-503.93462972726286,-268.8562975130029,-201300.7668245819,558525.1679832768];
const v2 = [-1000000.0];
[-18479,-2147483649,1000];
[4294967296,3];
const v5 = [27678,-64682,127,256,9,-1,-40847,-65536,-4,268435440];
const v7 = new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
const v10 = new Int32Array(v7, 10);
class C11 {
    constructor(a13) {
        function f14(a15, a16) {
            return a15;
        }
        f14(v2);
        f14(v5);
    }
    static #d = 10;
    /*
    constructor(a20, a21) {
        try {
            v7.#d += v10;
        } catch(e22) {
        }
    }
    */
}
try { v5.pop(); } catch (e) {}
const v25 = [v2,v1,v5,[v5]];
try { v25.toLocaleString(); } catch (e) {}
const v27 = [v5];
try { v27.findIndex(v27); } catch (e) {}
function f32(a33, a34, a35, a36) {
    a33 + a33;
    const v38 = [-876027929,9,536870887,-1257640956];
    function f39() {
        return v38;
    }
    for (let v40 = 0; v40 < 25; v40++) {
        function f41() {
            return v40;
        }
        const v42 = [601759695];
        const v43 = [1073741824,1073741823,1376142744,1073741825];
        function f44(a45, a46, a47, a48) {
            const v49 = f41();
            [v49,v49];
            BigUint64Array * 536870887;
            let v55;
            try { v55 = v43["find"](..."find", a48, ...v42); } catch (e) {}
            return v55;
        }
        for (let v56 = 0; v56 < 10; v56++) {
            f44(v56, v56, v43, f44);
        }
    }
    ("Vre").charAt()[0];
    function f61() {
        const v65 = Symbol.toPrimitive.description.codePointAt();
        ([-1.5424212036356715e+308]).shift();
        [1073741824,1073741823,1376142744,1073741825];
        return v65;
    }
    try { Uint8Array.from(-4.0); } catch (e) {}
    const v71 = new Uint8Array(a34);
    for (let v72 = 0; v72 < 5; v72++) {
    }
    const v74 = new BigInt64Array();
    v74[0] = v74;
    ("toString").match();
    const v81 = [Array(19793)];
    const t70 = [];
    t70[65536] = v81;
    new Uint16Array(512);
    let [v85] = v71;
    class C87 {
        static #m(a89) {
        }
        set d(a91) {
            this.#m();
        }
        constructor(a94) {
            function f95() {
                return f95;
            }
            Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f95 });
        }
    }
    const v96 = new C87(-4294967296);
    class C97 extends C87 {
        [v96];
        #n(a99, a100, a101, a102) {
        }
        #g;
        constructor(a104, a105) {
            this.#b <<= "Vre";
        }
        [10];
    }
    new C97();
    return f32;
}
for (let v108 = 0; v108 < 10; v108++) {
    function f109(a110) {
        Object.defineProperty([58584,15,9007199254740990,2146023485], 65537, { writable: true, value: [46733,-268435456] });
    }
    f32(v108, v108, f32, f32);
}
%OptimizeFunctionOnNextCall(f32);
f32();
