3 & 3;
try {
    try {
        new Uint16Array(3, 1231903051, 3);
    } catch(e8) {
    }
} catch(e9) {
    try { e9.n(-9223372036854775807n, 3, -6n); } catch (e) {}
} finally {
    3 - -9223372036854775807n;
}
const v12 = new Uint16Array(3);
const v15 = new Float64Array(209);
try { v15.toString(); } catch (e) {}
new Uint16Array(968);
-9007199254740991 * -9007199254740991;
Math.sin(-9007199254740991);
for (const v24 of v12) {
    let v25;
    try { v25 = Math.cosh(Float64Array); } catch (e) {}
    try { v25(Math, -9007199254740991); } catch (e) {}
}
delete Math[8];
function f0() {
    const o11 = {
        ...308020.5220492908,
        "f": 1000.0,
        [1000.0]: 308020.5220492908,
        "b": -1000000.0,
        "d": 308020.5220492908,
        "h": 1000.0,
        [-1000000.0]: -1000000.0,
        "g": -1000000.0,
        "e": 1000.0,
        "c": -1000000.0,
        toString(a5, a6) {
            this[Symbol.toPrimitive] = f0;
            this.b;
            super.c;
            return a6;
        },
    };
    Object.defineProperty(o11, "c", { writable: true, configurable: true, value: -1000000.0 });
    return o11;
}
const v12 = f0();
const v13 = f0();
const v14 = f0();
function f16() {
    function f17() {
        const o19 = {
        };
        return gc(o19);
    }
    return f17;
}
function f21(a22) {
    let v23 = 16;
    const v28 = new Date();
    class C29 {
        constructor(a31, a32, a33) {
            const v34 = +Uint8ClampedArray;
            try {
                v23 = v34;
            } catch(e35) {
            }
        }
        10 = Date;
        static #b = Uint32Array;
        static b;
        d;
        [v28];
        #h;
    }
    C29.length = C29;
    const v36 = new C29(9, 9, v23);
    function f37() {
        -(-410.8373818683839);
        const v41 = new Int16Array(Int16Array, Int16Array, Int16Array);
        for (let v42 = 0; v42 < 25; v42++) {
            v42 >> v42;
            v41["p" + v42] = v42;
        }
        const v48 = ("function")?.toLocaleUpperCase;
        try { new v48(); } catch (e) {}
        const o60 = {
            valueOf(a51) {
                try {
                    this[a51] = this;
                } catch(e52) {
                }
                return this;
            },
            __proto__: v36,
            "c": f37,
            n(a54) {
                try {
                } catch(e55) {
                    function f56() {
                        const o59 = {
                            valueOf(a58) {
                            },
                        };
                    }
                }
            },
        };
    }
}
Object.defineProperty(WeakMap, "toString", { writable: true, configurable: true, get: f16, set: f21 });
new WeakMap();
const v62 = [v13,v13,WeakMap];
v62[Symbol.toPrimitive] = f0;
const v65 = [WeakMap,WeakMap,v62];
const v66 = [v65,v12];
function f67(a68, a69, a70, a71) {
    const o82 = {
        __proto__: v62,
        "b": f0,
        "c": a68,
        "f": v12,
        "d": WeakMap,
        [a69](a73, a74, a75, a76) {
            a75[v14] /= v12["toString"](a70, "toString", this, a73);
            return 2;
        },
        "g": WeakMap,
    };
    return o82;
}
f67(v13, v65, v13, v13);
f67(v14, v65, f67(v12, v65, v14, v14), v13);
new Uint32Array(2);
Uint8ClampedArray.valueOf = f0;
new Uint8ClampedArray(793655632);
const v94 = new BigUint64Array(6);
function f97() {
    const o100 = {
        "maxByteLength": 4028,
    };
    const v102 = new ArrayBuffer(1, o100);
    new BigUint64Array(v102);
    return o100;
}
Uint8ClampedArray.toString = f97;
new Uint8ClampedArray(255, v13);
let v106 = 16;
const v108 = new Uint32Array(v106);
try { v108.toSorted(v108); } catch (e) {}
Uint8ClampedArray.toString = Symbol;
new Uint8ClampedArray(9);
const v114 = new Date();
function f115() {
    try { v94.lastIndexOf(255); } catch (e) {}
    const v118 = new Map();
    return v118;
}
Object.defineProperty(v114, "toString", { value: f115 });
const v119 = [1000000000000.0,-1.7976931348623157e+308,6.570844083183324,3.0,-2.0,961.6011183149949,634.9606529678199,1.6712831869744128e+308,1000000000000.0];
const o120 = {
    ...v119,
    ...v66,
};
class C121 {
    constructor(a123, a124, a125) {
        const v126 = +Uint8ClampedArray;
        try {
            v106 = v126;
        } catch(e127) {
        }
    }
    10 = Date;
    static #b = Uint32Array;
    static b;
    d;
    [v114];
    #h;
}
C121.length = C121;
const v128 = new C121(9, v106, 9);
v128[10];
const v130 = new C121(9, 9, v106);
new C121(v106, 9, v106);
for (let i = 0; i < 5; i++) {
    function f132() {
        const v133 = [1073741824,1756196835,536870889,256,6,58443];
        const v134 = [NaN,-5.161337834188833e+307,NaN,-984.7986985006023];
        const v135 = v134.constructor;
        class C136 extends v135 {
            [f132] = v135;
            b = v134;
            h = v133;
        }
        try { C136(); } catch (e) {}
        -(-410.8373818683839);
        Int16Array[0] = Int16Array;
        const v141 = new Int16Array(Int16Array, Int16Array, Int16Array);
        for (let v142 = 0; v142 < 25; v142++) {
            v142 >> v142;
            v141["p" >>> v142] = v142;
        }
        const v148 = ("function")?.toLocaleUpperCase;
        try { new v148(); } catch (e) {}
        const o160 = {
            valueOf(a151) {
                try {
                    this[a151] = this;
                } catch(e152) {
                }
                return this;
            },
            __proto__: v130,
            "c": f132,
            n(a154) {
                try {
                } catch(e155) {
                    function f156() {
                        const o159 = {
                            valueOf(a158) {
                            },
                        };
                    }
                }
            },
        };
    }
    f132[Symbol.toPrimitive] = f97;
    f132();
    class C164 {
    }
    Object.defineProperty(ReferenceError, "toString", { writable: true, configurable: true, enumerable: true, value: ReferenceError });
    const v166 = ReferenceError?.constructor;
    try { v166(ReferenceError); } catch (e) {}
    class C168 {
        constructor(a170) {
            try {
            } catch(e171) {
            }
        }
    }
}
