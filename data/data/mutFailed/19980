const v2 = new BigUint64Array(64);
try { Int16Array.bind(Int16Array); } catch (e) {}
const v6 = new Int16Array(5);
let v7;
try { v7 = v6.set(v6); } catch (e) {}
const v10 = new Uint32Array(67);
const v11 = v10.byteOffset;
class C12 {
    static toString(a14, a15, a16) {
        v10.byteLength += 64;
        const v18 = [];
        Reflect.apply(v2.keys, v2, v18);
        return a14;
    }
    [Int16Array] = 64;
    static f = v11;
    10 = Uint32Array;
    static c;
}
const v21 = new C12();
v21[10] = v21;
new v7();
new C12();
([5,v2,v2])["concat"]("concat");
