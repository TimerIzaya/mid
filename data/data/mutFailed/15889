let v1 = 268435441n;
class C3 {
    toString(a5) {
        let v6;
        try { v6 = a5(); } catch (e) {}
        v1 <<= v6;
        function f8() {
            const v10 = ("Vre")?.toLocaleUpperCase;
            try { v10(); } catch (e) {}
            try { ("Vre").fixed(); } catch (e) {}
            let v13 = -268435456;
            v13--;
            -(v13 + v13);
            const o17 = {
                "c": -4294967297n,
                "e": v13,
            };
            return o17;
        }
        f8();
        %OptimizeFunctionOnNextCall(f8);
        try { v6.get(this, 8051n, v6, a5, v6); } catch (e) {}
        return -9n;
    }
    static #toString(a21, a22) {
        let v23;
        try { v23 = a22(v1, 8051n, a21, a22, a21); } catch (e) {}
        try {
            this.toString = a22;
        } catch(e24) {
        }
        try { new v23(a21, v1); } catch (e) {}
        return this;
    }
}
const v28 = new Set();
function F29(a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a31;
    } catch(e33) {
        for (let [v34,v35] of a31) {
        }
    }
    try {
        const v36 = v28[this];
        ([WeakSet,WeakSet])[1];
        new F29(v36, -268435456n);
    } catch(e41) {
    }
}
const v42 = new C3();
const v43 = new C3();
const v44 = new C3();
const v45 = /Jd(?=)a(?=b)c9xyz{93}J\b+/guimy;
const v46 = /xyz{1,32}?/vm;
/(?<=)/vm;
class C48 {
    static #d = v45;
    constructor(a50, a51) {
        try {
            this.#d = a50;
        } catch(e52) {
        }
    }
    static valueOf(a54, a55, a56, a57) {
        [a56];
        [a54,a57,[a57,C3,v46,v43],v1];
        return v1;
    }
}
new C48(v43, v42);
const v62 = new C48(v42, v44);
new C48(v62, C3);
new Int8Array(268435456);
for (let v68 = 0; v68 < 10; v68++) {
    Array(36862);
}
