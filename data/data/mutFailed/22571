function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = -2145988083;
    } catch(e3) {
    }
    try {
        this.f = -2145988083;
    } catch(e4) {
    }
}
const v5 = new F0(F0);
const v6 = new v5();
const v7 = new F0();
const v8 = [v6,v6,v7,v6];
const v9 = [v5,v8,F0,v8,F0];
let v10 = [v7];
class C11 {
    a;
    static [v10] = v6;
    constructor(a13, a14) {
        try {
            v9.f = v9;
        } catch(e15) {
        }
    }
    static [v7] = v8;
    #d = C11;
    65536;
    static #g = v7;
    static #b = v5;
    15 = C11;
    static #toString(a17, a18, a19, a20) {
        const v21 = v10.__proto__;
        v10 = v9;
        const o24 = {
            "maxByteLength": 4096,
        };
        const v26 = new SharedArrayBuffer(2, a17);
        new v21(v26);
        return this;
    }
}
const v29 = new C11(v5, v6);
new C11(C11, v29);
new C11(v9, v7);
const o40 = {
    "b": 536870888,
};
const v47 = o40.b;
let {...v48} = v47;
const v49 = (a50, a51, a52) => {
    var species = v47;
    return a52;
};
