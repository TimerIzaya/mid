const v0 = [];
class C1 {
    static a;
    static #n() {
        const v3 = delete v0[this];
        let v4 = 0;
        while (v4 < 6) {
            let {"a":v7,"c":v8,"h":v9,} = this;
            [[v0,v0,v3,v9,v4],v7,v0];
            [v9,v9];
            v4++;
        }
        return v0;
    }
}
const v14 = new C1();
new C1();
const v16 = new C1();
class C17 {
    127;
    static 1000;
    static toString(a19, a20) {
        try {
            const t23 = "MAX_SAFE_INTEGER";
            t23.__proto__ = "b";
        } catch(e24) {
        }
        return this;
    }
    #b;
    g;
    static #e = v14;
}
const v25 = new C17();
const v26 = new v25();
const v27 = new C17();
function F28(a30, a31, a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v0;
    } catch(e34) {
    }
}
new F28(C17, C1, v26, v16);
new F28(v16, C1, v27, v26);
new F28(v14, v26, v14, v27);
function f38() {
    return v25;
}
new BigInt64Array(3497);
new Uint32Array(1);
new Uint32Array(7);
3497 ^ 8.868704382732872e+307;
