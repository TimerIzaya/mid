new Set();
/j[\cz](ab|cde)/gvms;
const v3 = /j[\cA]0(x)(x)(x)\1*/gum;
v3.unicode = v3;
const v4 = /5\u{12345}/vdy;
v4.h = v4;
const v5 = [9007199254740990,9007199254740990,-2147483647,9007199254740990,-238,4294967295,-4,-1];
const v6 = [-65535];
v6[0];
[-19365,-12,-3,-2147483647,10000,-65537,1448684301,9007199254740991,268435440,268435439];
const v9 = [v4,v5];
const v10 = [v9,v9,v5];
v10[2];
const v12 = [v6,v10,v6];
const v13 = v12?.filter;
try { new v13(v3); } catch (e) {}
-1392427873n * -1392427873n;
Int32Array.d = Int32Array;
const v21 = new Int32Array(1024);
for (const v22 of v21) {
    v22 === v22;
    v22 >> v22;
    const v26 = SharedArrayBuffer?.constructor;
    try { new v26(v12); } catch (e) {}
    const o29 = {
        "maxByteLength": 1293466293,
    };
    o29.maxByteLength = o29;
    o29.c = o29;
    new SharedArrayBuffer(1796, o29);
}
