const v6 = new BigUint64Array();
for (const v7 of v6) {
}
class C8 {
    static p(a10) {
    }
}
function F11(a13, a14, a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    const v17 = this?.constructor;
    try { new v17(a13, a13); } catch (e) {}
    try { a14.isPrototypeOf(C8); } catch (e) {}
}
new BigUint64Array(156);
const v23 = new Float32Array(12);
new Uint32Array(1000);
class C31 {
    [v23];
    static {
    }
    static 7;
    static [-1] = "string";
    #n(a34) {
        a34 = this;
        a34.e >>>= -35417;
        const o38 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o38);
        return this;
    }
}
const v40 = new C31();
NaN();
const v45 = NaN();
class C47 {
    static 9 = 9.187362692894364;
}
for (const v48 in C47) {
}
class C49 {
    #e;
    static {
        function f51(a52, a53) {
            return a52;
        }
        const o59 = {
            o(a55) {
                const o57 = {
                };
                return Float32Array(o57);
            },
        };
        const o61 = {
        };
        const v63 = new Proxy(Uint32Array, o61);
        o59["o"](o59, Uint32Array, "o", "o", v63);
        const v66 = super[this];
        try { v66.join(-4096, -4096, v66); } catch (e) {}
        const o68 = {
        };
        [/LD/vds,1000.0];
    }
    static f;
    m(a73, a74) {
        const o75 = {
        };
        const o78 = {
        };
        const v80 = new Proxy(Uint8Array, o78);
        v80.d = v80;
        let v81 = 12;
        v81++;
        const v83 = [];
        const v84 = [v83,v83,v83];
        const o85 = {
        };
        const v87 = new Proxy(v84, o85);
        Object.defineProperty(v87, -1, { configurable: true, value: v83 });
        new Proxy(this, o75, Proxy, -4096);
        class C93 {
        }
        function f94() {
            let v95 = 1000000000000.0;
            v95--;
            class C98 {
            }
            const v99 = new C98();
            const v100 = new C98(v99, v95);
            [C93,C98];
            [257828.6336153492,v100];
            [v100];
            class C104 extends C31 {
            }
            function f105(a106, a107) {
                return -4096;
            }
            Set.toString = f105;
            Set.constructor(Set);
            v45.constructor;
        }
        const v111 = "string" && -4096;
        +a74;
        Math.sqrt(v111);
        a73--;
        -509886178 << -509886178;
        return this;
    }
}
new C31();
new C49();
new C49();
const v125 = new WeakSet();
class C127 extends v125.constructor {
}
const v130 = new Uint16Array(512);
class C132 {
}
function F133(a135, a136) {
    if (!new.target) { throw 'must be called with new'; }
}
try { new v40(); } catch (e) {}
function f138(a139, a140) {
}
f138(C47);
([7,7]).concat(7);
new Float32Array(v130);
