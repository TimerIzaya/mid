function f0() {
}
const v6 = new Uint32Array(255);
new Uint8ClampedArray(0);
new BigInt64Array(8);
class C16 {
    #c;
    [-0.0];
    #valueOf(a18, a19) {
        a19 = this;
        try {
            ("MAX_SAFE_INTEGER").#valueOf();
        } catch(e21) {
        }
        a19[3.2149281669993574e+307] = a18;
        return this;
    }
}
const v25 = new C16();
const v26 = new v25();
new C16();
const v29 = -Infinity;
function f31() {
    return 2.0;
}
function f33() {
    return 3.2149281669993574e+307;
}
try { v26.for(BigUint64Array, -0.0, C16, 2.0, v29); } catch (e) {}
[155533.8602852358,2.0];
function F41() {
    if (!new.target) { throw 'must be called with new'; }
    const v43 = v6.__lookupGetter__;
    v43.bind();
    try {
        Date.UTC(2.0, v29);
    } catch(e46) {
    }
    Array(v43);
    for (const v50 of this) {
    }
}
const v51 = new C16();
v51.constructor;
const t43 = "MAX_SAFE_INTEGER";
new t43();
