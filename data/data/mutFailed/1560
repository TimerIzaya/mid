class C3 {
    c;
    static #valueOf(a5, a6) {
        for (let v7 = 0; v7 < 90; v7++) {
            function f8() {
                return a5;
            }
        }
        function f9() {
            return a6;
        }
        return a6;
    }
}
let v10 = new C3();
const v11 = new C3();
const v12 = new C3();
function f13() {
    for (let v14 = 0; v14 < 85; v14++) {
    }
    try {
        const v16 = [f13,0.7036923081146014,v10,v11,2.220446049250313e-16];
        C3.fuck(f13, v12, v16, v16, v11);
    } catch(e18) {
    }
    return 0.5470756665004354;
}
class C19 {
    m(a21, a22) {
        this[7] = a22;
        v10 <<= v12;
        try { C3.n(v11, this, v11, 0.7036923081146014, a21); } catch (e) {}
        typeof this === "symbol";
        const o27 = {
            "has": f13,
        };
        const v30 = new BigInt64Array();
        let [,v31,v32] = v30;
        try { v32(); } catch (e) {}
        const v34 = new Proxy(v10, o27);
        return v34;
    }
    [-1];
    static [v10] = 0.7036923081146014;
    2801123520 = v11;
    #b = v11;
}
new C19();
new C19();
new C19();
const v39 = new Infinity();
try { v39.subarray(C3, C3); } catch (e) {}
const v41 = [-15457,-1377736853,1122653812,11,-2];
try { v41.reduceRight(v41, 0.5470756665004354, 2.220446049250313e-16, Infinity); } catch (e) {}
for (let v43 = 0; v43 < 25; v43++) {
}
v41[9] = v39;
