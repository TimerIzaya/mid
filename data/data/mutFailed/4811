class C3 {
    static {
        this.fuck = -0.4971781525336123;
        class C6 {
            static #p(a8) {
                this.#p();
            }
        }
        let v10;
        try {
        const t0 = -0.4971781525336123;
        v10 = new t0();
        } catch (e) {}
        try {
            this.fuck(v10, v10, this, this);
            let v12 = 3375;
            Math.expm1(v12);
            --v12;
            for (const v17 in "1487412280") {
            }
        } catch(e18) {
        }
    }
    get b() {
        function f20(a21) {
            [Infinity,-1000.0,-1.627692152823683e+308,-1000000.0,1000000.0,0.5222236247299535,-2.2250738585072014e-308,4.0,3.049550380122314,-924.4926118355303];
            [-Infinity,-438428.3627363428,-2.8820206376184476,5.0,0.7631291023192559,5.0,-4.921130863131404,3.0,-4.0];
            const v25 = new Date();
            class C26 {
                #d = Date;
                #b;
                valueOf(a28, a29) {
                    Date();
                    const t32 = "object";
                    t32[509004239] = a28;
                    function f34() {
                        return f34;
                    }
                    function F35() {
                        if (!new.target) { throw 'must be called with new'; }
                    }
                    new F35();
                    const v38 = new F35();
                    const v39 = new F35();
                    function f42() {
                        return f42;
                    }
                    const v43 = [F35,1073741824];
                    [f20];
                    [v43,v38];
                    this[Symbol.asyncIterator];
                    for (let v49 = 0; v49 < 32; v49++) {
                        const t52 = "object";
                        t52["p" + v49] = v49;
                    }
                    f34();
                    for (let v53 = 0; v53 < 5; v53++) {
                        f42();
                    }
                    try { v39.n(); } catch (e) {}
                    for (let v56 = 0; v56 < 5; v56++) {
                    }
                    return super[a29]?.h;
                }
                a = Date;
                2147483648 = v25;
            }
            const v59 = new C26();
            const v60 = new C26();
            function F61(a63, a64, a65, a66) {
                if (!new.target) { throw 'must be called with new'; }
                const v67 = this?.constructor;
                try { new v67(Date, Date, a63, Date); } catch (e) {}
                a64[2147483648] = a64;
                a66[2147483648] = a66;
                try {
                    Date.h = a64;
                } catch(e69) {
                }
                try {
                    this.d = C26;
                } catch(e70) {
                }
            }
            const v71 = new F61(C26, v60, v59, v60);
            v71.length = v71;
            [2.220446049250313e-16,-2.220446049250313e-16,-1.0,1.7976931348623157e+308];
            return -0.4971781525336123;
        }
        f20(-0.4971781525336123);
        return -0.4971781525336123;
    }
}
const v74 = new C3();
new v74();
new C3();
new Uint8Array(4096);
class C84 {
}
function f85(a86, a87) {
    const o90 = {
        "h": v74,
        [a87]: v74,
        set h(a89) {
        },
    };
    return f85;
}
f85(C84, f85());
const v94 = [-1.7976931348623157e+308,-0.0,-1000000000000.0,18.192610755442843,-7.676824412389783,1000000000.0,-3.0];
const o95 = {
    __proto__: v94,
};
o95.unshift();
class C100 {
}
const v101 = new C100();
function f103(a104, a105, a106, a107) {
    const o110 = {
        "g": a104,
        [-1]: C100,
        set b(a109) {
        },
        1025549261: v101,
    };
    return -5.008255649855068e+307;
}
Math.log2(0);
