class C3 {
    1 = 0.0;
    [-1000000000.0];
    [-563708641];
    constructor(a5) {
        function f6() {
            a5 / C3;
            const v9 = this.DataView;
            try { new v9(); } catch (e) {}
            return this;
        }
        a5.valueOf = f6;
        a5++;
        try {
            a5.a = this;
        } catch(e12) {
        }
    }
    static #b;
    [0.0] = -563708641;
}
function f13() {
    const v15 = new Uint8Array(Uint8Array, Uint8Array, Uint8Array);
    const o16 = {
        ...v15,
    };
    return v15;
}
C3.valueOf = f13;
try { C3.toString(); } catch (e) {}
const v18 = new C3(-563708641);
v18[1];
const v20 = new C3(C3);
v20[1];
const v22 = new C3(C3);
class C23 {
    get f() {
        return -2147483649n;
    }
    static [-1000000000.0];
    92;
    #e = v22;
    16;
    e = v20;
}
C23.name = C23;
new C23();
new C23();
const v30 = new C23();
v30.e = v30;
try { Float32Array(v18, 4096, Float32Array); } catch (e) {}
const v35 = new Float32Array(4096);
v35[3388] = v35;
v35.lastIndexOf(1.3174607869926752e+308);
