const v5 = new Int32Array(207);
const v8 = new Float32Array(128);
function f9() {
    return -2;
}
function f10(a11) {
    function f12() {
        return f12;
    }
}
Object.defineProperty(v8, "e", { writable: true, configurable: true, enumerable: true, get: f9, set: f10 });
const v15 = new Uint8Array(1323);
function f16(a17, a18) {
    const o28 = {
        __proto__: v15,
        "d": 207,
        m(a20, a21) {
            function f22(a23, a24) {
                a24 ||= v15;
                return arguments;
            }
            f22(a20, 128, a17, a20);
            return Int32Array === a18;
        },
        ...v5,
        "e": Float32Array,
        "c": a17,
    };
    try { a18.concat(-2, a17, f16); } catch (e) {}
    v5[736264487];
    a18?.e;
    Uint8Array ** Uint8Array;
    new Int32Array(9);
    return o28;
}
function f34() {
    return -2;
}
Object.defineProperty(f16, "concat", { configurable: true, enumerable: true, get: f34 });
f16(128, v8);
f16(9, f16);
f16(v5, 128);
const v39 = new Float64Array(Float64Array, Float64Array, Float64Array);
function f40() {
    v39.length = 0;
    return 0;
}
%PrepareFunctionForOptimization(f40);
f40();
%OptimizeFunctionOnNextCall(f40);
f40();
