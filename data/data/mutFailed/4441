const v2 = new Uint8ClampedArray(4096);
const v5 = new Uint8ClampedArray(30);
const v8 = new BigUint64Array(128);
class C9 extends Uint8ClampedArray {
    c;
    static get e() {
        super.filter(v5);
        const v16 = new Uint8Array(225);
        for (const v17 in v16) {
        }
        0 == 268435440n;
        const v21 = [536870887,-42204,-17288903,-3,9007199254740991,7];
        const v22 = [6,268435440,13,1073741825];
        const v23 = [-15,-2147483649,-899333997,3,1455560807,-1024,-4294967297,2098301778];
        class C24 {
            static valueOf(a26) {
                super[a26] = this;
                v22[v23] = v23;
                return super[v23];
            }
            constructor(a29) {
                function f30(a31, a32) {
                    const o33 = {
                        "c": v22,
                        "h": a32,
                    };
                    return o33;
                }
                f30(v23, a29);
                f30(v21, v21);
            }
        }
        new C24(v22);
        return [-16910,9,-268435456,10000,53294,11,16,65536,268435441,-46905];
        function f39() {
        }
        const v43 = f39();
        const v44 = f39();
        const v45 = f39();
        function f46(a47, a48, a49) {
        }
        const v50 = f46(v45, v45, v43);
        f46(v44);
        f46(v50);
        return BigUint64Array;
    }
    constructor(a54, a55, a56) {
    }
    static h;
    p(a58) {
        this.g ^= this[8];
    }
    [v2];
    static set f(a62) {
        super.c = v8;
    }
    d = 4096;
    /*
    constructor(a64, a65, a66) {
    }
    */
    /*
    constructor(a68, a69, a70) {
        super(a70);
    }
    */
}
new C9();
let v72 = 144;
const v73 = v72++;
function f74(a75) {
    return v73;
}
v2[Symbol.toPrimitive] = f74;
class C79 extends Date {
}
const v80 = new C79();
v80.setHours(C79, C79, v80, C79);
new C9();
new C9();
function F84() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        new F84();
        /Ckza\Wb?/vis;
        /Ma\W+/gudm;
    } catch(e89) {
    }
}
new F84();
new F84();
new SharedArrayBuffer(4096);
const v95 = [];
function f96(a97, a98) {
    class C99 {
    }
}
v95.constructor = f96;
Math.expm1(1e-15);
class C106 {
    set e(a108) {
        Math.fround();
        Math.ceil();
    }
    m(a113) {
    }
    static #n(a115, a116, a117, a118) {
        a117.e |= a117;
        super.d = a115;
        return this;
    }
    e;
}
const o122 = {
    set e(a120) {
    },
};
const v123 = new C106();
const v124 = new C106();
const v128 = ("NN")["9"];
try { v128(v124, v123, "string"); } catch (e) {}
v95["concat"]();
const v131 = new Uint8ClampedArray();
v131.fill(Uint16Array, 127, 1073741824);
