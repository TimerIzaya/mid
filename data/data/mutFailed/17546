function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -51084;
    } catch(e3) {
    }
    try {
        this.b = -51084;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
const v7 = new F0();
const v8 = [v7,v7,F0,v7,v6];
const v9 = [v5,v5];
const v10 = [v9,v8];
function F14(a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a16;
    } catch(e18) {
    }
    try {
        this.b = F0;
    } catch(e19) {
    }
    try {
        this.c = -1576582169;
    } catch(e20) {
    }
}
new F14(v8, v10);
new F14(v10, v9);
new F14(v8, v10);
const v24 = [536870887,-42204,-17288903,-3,9007199254740991,7];
const v25 = [6,268435440,13,1073741825];
const v26 = [-15,-2147483649,-899333997,3,1455560807,-1024,-4294967297,2098301778];
class C27 {
    static valueOf(a29) {
        super[a29] = this;
        v10[v26] = v26;
        return super[v26];
    }
    constructor(a32) {
        function f33(a34, a35) {
            const o36 = {
                "c": v25,
                "h": a35,
            };
            return o36;
        }
        f33(v26, a32);
        f33(v24, v24);
    }
}
const v39 = C27?.constructor;
try { new v39(C27); } catch (e) {}
const v41 = new C27(v25);
const v42 = new C27(v24);
const v43 = new C27(C27);
const v44 = v5?.constructor;
try { v44(v42); } catch (e) {}
function f46(a47, a48, a49, a50) {
    try { a47.findLast(v24); } catch (e) {}
    a48[1] = a48;
    try { F0.valueOf(); } catch (e) {}
    const o63 = {
        __proto__: a47,
        "g": a47,
        get e() {
            let v56 = 820086.9196656225;
            v56++;
            const v58 = -1;
            Math.atanh(this);
            let v60 = 1 && v58;
            v60--;
            Math.sinh(v60);
            return v41;
        },
    };
    let v64;
    try { v64 = o63.indexOf(a50); } catch (e) {}
    return v64;
}
try { f46(v25, v25, v41, v25); } catch (e) {}
const v66 = f46(v25, v24, v42, v41);
v66.indexOf(f46);
f46(v26, v26, v43, f46(v26, v24, v26, v66));
const v72 = new BigUint64Array(4083);
try { v72.set(v66); } catch (e) {}
new Uint16Array(3239);
-513;
BigInt64Array.prototype;
new BigInt64Array(513);
[5.0,-1000000000000.0];
[-3.4570322798414105e+307,169.39416483428454,-2.0,-1000.0,5.0,1.0,14338.693316202844,-1000000.0,955.167973693761,0.5696151956948133];
[-2.0,-2.0];
try { Array.call(Uint16Array); } catch (e) {}
Array();
new Date();
const v95 = Date > "undefined";
v95 || v95;
const v97 = v95 ? Date : "undefined";
try { v97.match(BigUint64Array); } catch (e) {}
let v99 = 0;
do {
    ("minor")[0];
    const o104 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o104);
    v99++;
} while (v99 < 2)
