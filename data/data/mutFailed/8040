function f0() {
}
const v1 = [f0];
const v2 = [v1];
const v3 = [f0];
class C4 extends f0 {
    #m(a6, a7) {
        let v5 = this;
        for (const v8 of v1) {
            super.c;
        }
        f0(255, 255, 1n);
        function F13(a15, a16, a17, a18) {
            if (!new.target) { throw 'must be called with new'; }
            const v19 = this.constructor;
            try { new v19(); } catch (e) {}
            typeof Float32Array;
        }
        new F13();
        const v24 = v5 || f0;
        try {
            let v28 = -2.2250738585072014e-308;
            v5--;
            const v30 = 60386 % v5;
            831533099 >> C4;
            v28 / v30;
            C4--;
            v28--;
            Math.round(v1);
            a7.toString = v24;
        } catch(e36) {
            function f38() {
                return -172798652;
            }
            %OptimizeFunctionOnNextCall(v1);
        }
        return v3;
    }
    static d = v2;
    static g = C4;
    #c;
}
const v39 = new C4();
new v39();
new C4();
new BigUint64Array();
const v46 = new Float32Array(2);
try {
    const o47 = {
    };
    v46.set(o47, 2147483647);
} catch(e50) {
}
[0.1382998428372384,4.0,-2.2464495704528176,-1000.0,1000000000000.0,4.0];
[96669.02095524943,0.0,3.0,268.4448116951339,0.02965435854521703,0.5782215535006818,3.298548428314167e+307];
function f53() {
    return f53;
}
function f54(a55, a56) {
    const o57 = {
        [a55]: v1,
    };
    return a56;
}
f54(f54);
f54(f53);
[4.0,-2.0];
[0.7196439996070003,0.5720503081969852,1e-15,0.0,3.306326194266271,294.07428103645793,2.220446049250313e-16,-2.220446049250313e-16,-1.7281048102581299e+308];
[-1.0490293208174443e+308,8.716234939910195e+307,-4.0,3.0];
[0.5874570833550005,-1000000000.0,1e-15,0.3056976275944824,-2.47107413133757];
Math.tanh("1");
