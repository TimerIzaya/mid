class C3 {
    #valueOf(a5) {
        try {
            a5.#valueOf(this, "number", "number");
        } catch(e7) {
        }
        return -1000000000.0;
    }
    static #c;
    9 = -1000000000.0;
    1073741824;
    [C3] = -1000000000.0;
}
const v8 = new C3();
const v9 = new C3();
const v10 = new C3();
v8[v10] = v8;
let v11;
try { v11 = v10(-1000000000.0, v9, -46723); } catch (e) {}
let v12;
try { v12 = new v11(); } catch (e) {}
const v15 = ~C3;
~C3;
Math.atan(v15);
43804 >>> 43804;
+v15;
let v20 = Math.random();
let v21 = v20++;
const v22 = [-1000000000.0,v10,C3,-46723,"number"];
const v23 = ["number",v10];
const v24 = ["number",v23,v9,C3,-1000000000.0];
function F25(a27, a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a29;
    } catch(e31) {
    }
}
const v32 = new F25(v8, v9, v23, v10);
const v33 = new F25(v8, v24, v32, v9);
new F25(v24, v33, v33, v10);
v12?.[v23];
let v40 = 821.8203827895163;
~(v21 ^ v22);
v40++;
let v44 = ++v21;
v44--;
-4.380315352541508e+307 >> 129;
class C53 {
    static #e;
    static #g;
    d = v23;
}
new C53();
new v23();
new C53();
