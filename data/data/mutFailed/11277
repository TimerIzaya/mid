function f0() {
    let v1 = -536870912;
    const v4 = /(?:a*)+q(?<a>.)/guds;
    function f5(a6) {
        a6.hasIndices = a6;
        a6?.constructor.lastParen;
        const o12 = {
            set b(a10) {
            },
            get d() {
                return this;
            },
        };
        return o12;
    }
    for (let i15 = 0, i16 = 10; i15 < i16; i16--) {
        for (let v23 = 0; v23 < 50; v23++) {
            f5(v4);
        }
    }
    const o45 = {
        235: "EPSILON",
        ["EPSILON"]: v1,
        "c": v1,
        ..."EPSILON",
        ..."EPSILON",
        o(a26) {
            const o28 = {
            };
            return gc(o28);
        },
        "g": "EPSILON",
        [v1]: v1,
        toString(a31) {
            new Float64Array(1);
            const v37 = new Uint16Array(5);
            new Uint8Array(252);
            return v37;
        },
        [v1](a42) {
        },
        set b(a44) {
            v1 <<= v1;
        },
    };
    return o45;
}
const v46 = f0();
const v47 = f0();
const v48 = v46();
class C49 extends f0 {
    f;
    #d = f0;
    static m(a51) {
        try {
            f0();
        } catch(e53) {
        }
        this[v46] = a51;
        return f0;
    }
    65536 = v47;
    static 8;
    static 1 = v48;
    static c = v48;
}
new C49();
new C49();
new C49();
const v57 = [-0.0,661522.1264273264,845.1918546135871,-7.820028235551318,-Infinity,1.276322406584874e+308,8.908064495326748e+307,-2.2250738585072014e-308,-249918.59686690615,-2.0994842947137205e+307];
[214492.33201621333,3.898710341736276,1000000000000.0,-4.0];
function F59(a61, a62) {
    if (!new.target) { throw 'must be called with new'; }
    function f64(a65, a66, a67, a68) {
        function f70() {
            for (let v71 = 0; v71 < 5; v71++) {
                arguments | v71;
            }
            return typeof 522675525n === "undefined";
        }
        f70();
        return a61;
    }
    for (let v77 = 0; v77 < 10; v77++) {
        f64(v77, v77, a62, v77);
    }
    %OptimizeFunctionOnNextCall(f64);
    f64();
}
[1.0,-6.416191472855912,-340.09810707254815,0.0665710048140844,-886.9915906864436];
-Infinity;
function F84(a86) {
    if (!new.target) { throw 'must be called with new'; }
    const v87 = this.constructor;
    const v88 = v87.bind(F84, F84, F84, F84);
    try { v88(); } catch (e) {}
    try { new v87(); } catch (e) {}
}
new F84();
new v57();
