function f0() {
}
function f4() {
    return f0;
}
new Int8Array(31);
function f10() {
    return f4;
}
Object.defineProperty(Uint16Array, "toString", { writable: true, configurable: true, get: f10 });
new Uint16Array(0);
new Uint32Array(255);
const v16 = new Map();
let v23 = undefined;
const o31 = {
    ...v16,
    ...v16,
    __proto__: v16,
    [24560](a25, a26, a27) {
        super[591114.0785999324];
        v23 = Map;
    },
};
v23 = o31;
[v16];
function F34() {
    if (!new.target) { throw 'must be called with new'; }
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    new Date();
    const o41 = {
    };
    o41.e = 19793;
    const v43 = Array(19793);
    for (const v44 of v43) {
    }
    const v45 = [v43,v43,v43,v43,v43];
    new BigUint64Array();
    [];
    for (let v50 = 0; v50 < 50; v50++) {
    }
    const v52 = [[v45,v45,v45]];
    function f53(a54, a55) {
        function f56() {
            return f56;
        }
        return this;
    }
    v52.valueOf = f53;
    v52 >= Uint16Array;
}
new F34();
new F34();
