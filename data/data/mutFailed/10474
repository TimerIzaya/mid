function f0() {
    Date.toString = f0;
    Date | f0;
    function f4() {
        64n << 64n;
        return 64n;
    }
    Date[Symbol.toPrimitive] = f4;
    const v9 = new Date(Date);
    v9.setFullYear();
}
function f11(a12, a13) {
    const v14 = [];
    let v15;
    try { v15 = v14.with(v14, v14); } catch (e) {}
    return v15;
}
const v17 = Symbol.toPrimitive;
f0[v17] = f11;
const v18 = [344.64861552632146,-4.0,1000000.0,642514.606934905,0.1807180632123203,0.10752618873097497,983.7839603476882,1000.0,1e-15];
v18.e = v17;
v18.e = v18;
class C19 {
}
function F20() {
    if (!new.target) { throw 'must be called with new'; }
}
new BigInt64Array(1);
const v30 = new Int32Array(512);
new BigInt64Array(84);
const v36 = /a|b/vdy;
try {
    v30.e = v36;
} catch(e37) {
}
const v41 = gc()?.then;
try { v41(); } catch (e) {}
const v43 = /v*/vdms;
v43[Symbol.toPrimitive] = f0;
v43[Symbol.toPrimitive] = f0;
class C48 {
    1855;
    [v43];
}
const v49 = new C48();
for (let v50 = 0; v50 < 5; v50++) {
    -23111 < 5;
    for (let v54 = 0; v54 < 22; v54++) {
        ("minor").valueOf();
        const o59 = {
            "execution": v54,
            "type": v49,
        };
        gc(o59);
    }
    Math.atanh(v50);
}
