[];
/ia*b/ui;
/4zR/gudi;
/Ba[^a]/gvms;
class C5 {
}
function f7(a8, a9, a10, a11) {
    return a9;
}
const v12 = f7();
const v15 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v16 = [601759695];
v16[0] = v16;
const v17 = [1073741824,1073741823,1376142744,1073741825];
function f19(a20, a21, a22, a23) {
    function f25(a26) {
    }
    f25.length;
    Object.defineProperty(arguments, "toString", { enumerable: true, value: f25 });
    function f28() {
        let v30;
        try { v30 = ("Vre").italics(); } catch (e) {}
        let v31 = -4294967295;
        v31--;
        let v33 = -268435456;
        v33--;
        const o47 = {
            "c": -4294967297n,
            [522675525n](a36, a37) {
            },
            "maxByteLength": -128,
            "c": v16,
            "b": v31,
            ...-48404n,
            __proto__: -128,
            get d() {
            },
            "e": v33,
            "maxByteLength": v31,
            "arguments": v15,
            ...v16,
            "type": "Vre",
            ..."Vre",
            valueOf(a40, a41) {
                v30.b;
            },
            "c": v33,
            "type": "Vre",
            "type": "Vre",
            toString(a44, a45, a46) {
                return C5;
            },
            5: v31,
            6: v33,
        };
        try { o47.valueOf(); } catch (e) {}
        return v16;
    }
    try { f28(); } catch (e) {}
    const v51 = f28()[0];
    Int8Array.a = Int8Array;
    let v54;
    try { v54 = Reflect.defineProperty(Reflect, a20); } catch (e) {}
    !v54;
    try { new Int8Array(); } catch (e) {}
    Int8Array.a = Int8Array;
    const v57 = new Int8Array(v17);
    let v58;
    try { v58 = v57.findIndex(v12); } catch (e) {}
    const v59 = v57.buffer;
    try { v59.slice(a20); } catch (e) {}
    function f61(a62) {
        return f61;
    }
    f61.prototype;
    f61.constructor = f7;
    const v64 = f61.constructor;
    let v65;
    try { v65 = v64(v64, C5); } catch (e) {}
    v65.length = v65;
    v59.constructor = v51;
    %OptimizeFunctionOnNextCall(f28);
    let v67;
    try { v67 = ("find").strike(v58, v64, arguments); } catch (e) {}
    let v68;
    try { v68 = v67.blink(); } catch (e) {}
    v68[33];
    let v70;
    try { v70 = v67.match(v15, a23); } catch (e) {}
    const o71 = {
    };
    o71.e = o71;
    o71.e = v15;
    o71.e = a21;
    const o72 = {
    };
    o72.e = o72;
    o72.e = o72;
    o72.g = v70;
    o72.g = -4294967297n;
    try {
        let o73 = {
        };
        function f74(a75) {
            o73 = a75;
            return a75;
        }
        Object.defineProperty(o73, "g", { set: f74 });
        o73.e = a21;
    } catch(e76) {
    }
    try {
        const o77 = {
        };
        o77.e = o77;
        function f78(a79) {
            return o77;
        }
        try { new f78(); } catch (e) {}
        Object.defineProperty(o77, "g", { writable: true, set: f78 });
    } catch(e81) {
        e81.g = e81;
    }
    try { v17["find"](..."find", a23, ...v16, ...v17); } catch (e) {}
    return v12;
}
f19();
%PrepareFunctionForOptimization(f19);
[-2,512,-9223372036854775808,1073741824,-30228,1073741823,-8,65535,1073741824];
[64,-2,42158,-6,5];
[38791,64,268435456];
new Uint8Array(2);
new Uint32Array(1024);
new Int8Array(2);
function f101() {
}
class C102 {
    constructor(a104, a105) {
        for (let v106 = 0; v106 < 5; v106++) {
            const v108 = "p" + v106;
            function F109() {
                if (!new.target) { throw 'must be called with new'; }
                const o111 = {
                };
                const v113 = new Proxy(this, o111);
                try {
                    with (v113) {
                        o111[b];
                    }
                } catch(e116) {
                }
            }
            this[v108] = v106;
        }
    }
}
new C102();
new C102();
class C119 extends f101 {
    constructor(a121, a122, a123) {
        super();
        super.f = a122;
    }
}
new C102();
for (let v126 = 0; v126 < 10; v126++) {
    v126 < v126;
}
