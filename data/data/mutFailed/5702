const v0 = [536870889,256];
const v1 = [11,256];
const v2 = [1737174467,2092039140,-9007199254740992,7,64,1,188976480];
function f3() {
    return v1;
}
try { f3.toString(); } catch (e) {}
let v6;
try { v6 = ("toUpperCase").toLocaleLowerCase(); } catch (e) {}
let v8 = "EPSILON";
function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a12;
    } catch(e13) {
    }
    try {
        this.c = v2;
    } catch(e14) {
    }
    try {
        this.b = v2;
    } catch(e15) {
    }
    v8[4];
    v8 = a11;
    v2["every"](a12);
    try {
        v0.values();
    } catch(e20) {
    }
}
new F9(v0, "toUpperCase");
const v22 = new F9(v2, v8);
v22.d = v22;
new F9(v0, "every");
[618766608,184284431,255,-34480,457107565,-9007199254740992];
[-456561334,-11249,-2147483647,-128,52844,-46779,536870887];
const v26 = [-1054087542,-23877,4283,-9,528519545,4294967297,1000];
try { v26.pop(); } catch (e) {}
const v32 = Reflect?.setPrototypeOf;
try { new v32(Int8Array, v6); } catch (e) {}
const v35 = Reflect.construct(Int8Array, [1126838905]);
try { v35.some(v22); } catch (e) {}
class C37 {
    [-2] = 31876;
}
new C37();
const v39 = [-20096,4294967296,-65537,-2];
try { v39.map(v39); } catch (e) {}
const v41 = [-1947047520];
v39["slice"]([[v41,v41,v41,v39]])[2];
