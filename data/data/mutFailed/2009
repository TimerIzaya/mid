class C3 {
    [9] = -7;
    2147483648 = -7;
    #e = -7;
    #n(a5, a6) {
        let v4 = this;
        v4 <<= v4;
        return v4;
    }
    c = 9;
    [268435440] = 268435440;
    2147483649;
    [-7];
}
let v7 = new C3();
const v8 = new C3();
const t16 = 9;
const v9 = new t16();
function F10(a12, a13, a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        new WeakSet();
        -268435440;
        Math.tan(-1162108574);
        const v23 = -618513.9023313043;
        v23 << 618513.9023313043;
        Math.abs(v23);
        this.f = v8;
    } catch(e26) {
    }
    try {
        this.a = a13;
    } catch(e27) {
    }
    try {
        this.b = a12;
    } catch(e28) {
    }
}
new F10(9, v9, v9, 9);
const v30 = new F10(268435440, C3, v8, -7);
C3[v30] **= v30;
v7 >> F10;
const v35 = --v7;
const v36 = v35 + v35;
v7.exp(v36);
Math.sin(v35);
!v36;
Math.max(v7);
Math.imul(1000, 1000);
new F10(-7, v8, v9, 9);
const v44 = new BigInt64Array();
v44.copyWithin(-9223372036854775808);
