const v0 = [];
const o1 = {
};
function f2() {
    return o1;
}
function f3(a4, a5) {
    Object.defineProperty(o1, "h", { writable: true, configurable: true, enumerable: true, get: f2, set: f2 });
    return o1;
}
const v6 = v0[8];
v6.__proto__;
const v8 = v0[8];
const o9 = {
};
try {
    o9.c = f2;
} catch(e10) {
}
try {
    const o11 = {
    };
    o11.c = f2;
    o11.b = v8;
} catch(e12) {
}
try {
    const o13 = {
    };
    o13.c = f2;
    o13.b = v8;
    o13.g = f2;
} catch(e14) {
}
try {
    const o15 = {
    };
    o15.c = f2;
    o15.b = v8;
    o15.g = f2;
} catch(e16) {
}
new Promise(f3);
function f19() {
    return v0;
}
function F23(a25) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = 1012120461;
    } catch(e26) {
    }
}
const v27 = new F23(4294967296);
new F23(9223372036854775807);
new F23(4294967296);
const v33 = [-1000000.0,3.0,NaN,-Infinity,202.22658662615504];
[0.7788711785888819,4.27777719274739,0.43547268265714123,0.8224513234413882,-8.045168988411108e+307];
const v35 = [-1000.0,-1000000.0,-9.954144830892317e+307,-Infinity,-3.0,1.3190160210468514e+308,-1000.0,-1000000000.0,-385.67603871736674];
let v36 = 257;
const v38 = new Uint8Array(Uint8Array);
class C40 extends Uint16Array {
    constructor(a42, a43, a44) {
        if (f2 == o9) {
            ({"g":a44,"length":v36,} = v35);
        } else {
            super[v8];
        }
        super(v38);
    }
}
[[v27,v6,Uint16Array,v36]];
const v49 = [-14,f2];
try { v49.push(v49, Uint16Array, v49); } catch (e) {}
try {
    v33.length = 2;
} catch(e51) {
}
new C40();
