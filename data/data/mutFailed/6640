class C3 {
    static toString(a5, a6) {
        let v7;
        try { v7 = a6.toString(1.3515722318336147e+308); } catch (e) {}
        try { a6.sqrt(v7, a6, a6, a6, v7); } catch (e) {}
        Math.cosh(4);
        Math.cos(this);
        Math.floor(this);
        return Math.tan(this % (!4 << 1.3515722318336147e+308));
    }
}
new C3();
const v19 = new C3();
new v19();
new Array(-1608335877);
const v28 = [-1000000.0,1.2447871437442695e+308,2.0,-1.7099107331057683e+308,0.0];
for (let i30 = 0; i30 < 1; i30++) {
}
function F36() {
    if (!new.target) { throw 'must be called with new'; }
    const v38 = this.constructor;
    let v39;
    try { v39 = new v38("constructor", "constructor", v38, v38, v19, 9223372036854775807, -65537); } catch (e) {}
    const v40 = this.valueOf(F36);
    switch (v28) {
        case "constructor":
            v40 < v39;
            break;
    }
}
const t30 = -65537;
new t30();
const t32 = 1.3515722318336147e+308;
new t32();
