let v0 = 1000000000.0;
class C3 {
    static get c() {
        super[this] = this;
        v0 <<= C3;
        -1000000000.0 > this;
        ("9007199254740992")["concat"]();
        const o8 = {
        };
        try {
            o8.g = C3;
        } catch(e9) {
        }
        try {
            const o10 = {
            };
            o10.g = C3;
            o10.e = "concat";
        } catch(e11) {
        }
        try {
            const o12 = {
            };
            o12.g = C3;
            o12.e = "concat";
            o12.b = C3;
        } catch(e13) {
        }
        try {
            const o14 = {
            };
            o14.g = C3;
            o14.e = "concat";
            o14.a = "9007199254740992";
        } catch(e15) {
        }
        const t36 = "9007199254740992";
        t36.length %= v0;
        new Array(2028);
        return "9007199254740992";
    }
    valueOf(a20) {
        try {
            a20.__proto__ = this;
        } catch(e21) {
        }
        return C3;
    }
    n(a23, a24) {
        for (const v25 of "9007199254740992") {
            a23 == v25 ? a23 : v25;
        }
        a24.__proto__;
        return v0;
    }
}
const v29 = new C3();
new C3();
new C3();
let v34 = 57195;
v34 |= 1955868440;
new Uint32Array(2618);
new Int8Array(128);
new Float64Array(15);
[15,-65535,-125063199,8,65535];
[9];
const v46 = [257,1174890453,2147483648,64,536870912,-2];
function F50(a52, a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a53;
    } catch(e55) {
    }
    try {
        this.c = v29;
    } catch(e56) {
    }
}
new F50(2123943254, 40530, 2123943254);
new F50(40530, 40530, 2123943254);
new F50(-4, 40530, 2123943254);
function F60(a62, a63) {
    if (!new.target) { throw 'must be called with new'; }
    function f64() {
        function F65() {
            if (!new.target) { throw 'must be called with new'; }
            this.d = -15;
        }
        class C68 extends F65 {
        }
        for (const v69 in C68) {
        }
        return F65;
    }
    Object.defineProperty(this, "constructor", { enumerable: true, value: f64 });
    this.hasOwnProperty(F60);
    const v71 = this.constructor;
    try { new v71(); } catch (e) {}
}
function f73() {
    function f74() {
        %VerifyType(v46);
        new Int32Array(289);
        new Float64Array(0);
        const v83 = new Int8Array(5);
        return v83;
    }
    return f74;
}
function f84(a85) {
    function f86() {
        return f86;
    }
}
Object.defineProperty(F60, "toString", { enumerable: true, get: f73, set: f84 });
const v87 = new F60();
function f88() {
    const t117 = "65537";
    t117.__proto__ = /\p{Script=Greek}(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/guy;
    return v87;
}
v87.constructor = f88;
const t122 = v87.constructor;
new t122();
