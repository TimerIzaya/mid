new Set();
let v9 = -4294967296;
[9007199254740991,10,56647,-29200,-9223372036854775807];
const o28 = {
    valueOf() {
        const v18 = Symbol.iterator;
        const o27 = {
            [v18]() {
                let v20 = 10;
                const o26 = {
                    next() {
                        v20--;
                        const v24 = v20 == 0;
                        const o25 = {
                            "done": v24,
                            "value": v20,
                        };
                        return o25;
                    },
                };
                return o26;
            },
        };
        return -9007199254740991;
    },
};
const v29 = [9223372036854775807,-9007199254740991,-1];
switch (v29) {
    case 0.3695841705542877:
        v9 = -9007199254740991;
        break;
}
let v30 = [4294967297,-4096,3];
~v30 ** -15;
v30--;
class C36 {
    static #c;
    constructor(a38, a39) {
        a39 ||= this;
        try {
            v30.concat(this, v29);
        } catch(e41) {
        }
    }
    o(a43) {
        try {
            this.#c = v30;
        } catch(e47) {
        }
    }
}
function f48(a49, a50, a51) {
    const o54 = {
        get e() {
            try {
            } catch(e53) {
            }
        },
    };
}
try {
} catch(e55) {
}
