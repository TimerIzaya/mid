const v0 = [-5.735517120721631e+307,-1000000000.0,-1000000000.0,1000000000.0,-1.1167935915272093e+308,2.2367656185496525];
const v1 = [1.7976931348623157e+308,-4.0,Infinity];
const v2 = [3.0,-2.220446049250313e-16,3.896124111700999,743.7285220714389,-5.917382063057683e+307,-1.7976931348623157e+308,666770.7986022416,-2.220446049250313e-16,1000.0];
v0[2] = -65536n;
const v7 = Symbol.split;
const v8 = v2[v7];
v0[v2] = v7;
function F9(a11, a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v1;
    } catch(e15) {
    }
    try {
        this.d = v2;
    } catch(e16) {
    }
    const v17 = new F9(v2, v2, v2, a14);
    try {
        v17.toString = v8;
    } catch(e18) {
    }
    try {
        this.b = a14;
    } catch(e19) {
    }
}
const v20 = new F9(v0, 76516438n, 76516438n, v2);
new F9(v1, -65536n, 76516438n, v0);
const v22 = new F9(v1, v1, 128n, v2);
class C23 extends F9 {
    8 = v20;
    static #o(a25, a26) {
        try {
            v2.c = a26;
        } catch(e27) {
        }
        return v20;
    }
    static get g() {
        v2[8] = v22;
        try {
            v20.#o();
        } catch(e33) {
        }
        return -34945;
    }
}
new C23();
new C23();
new C23();
function F37(a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    v0 instanceof a40;
    v20[a40];
    new Uint8Array(1024);
    new Uint16Array(1024);
    new Uint8Array(32);
    try {
        this.g = v22;
    } catch(e52) {
    }
}
new F37(v2, v1);
new F37(v2, v2);
new F37(v1, v1);
function f56(a57, a58) {
    const v59 = [1000000000.0,2.2250738585072014e-308,-3.0,-2.2250738585072014e-308,-2.2250738585072014e-308,-6.525028373249204e+307,-7.851646360254072e+307,0.6785915059434757,-0.0];
    class C60 {
    }
    C60[Symbol.replace] = v59;
    return f56;
}
%PrepareFunctionForOptimization(f56);
f56();
%OptimizeFunctionOnNextCall(f56);
f56();
