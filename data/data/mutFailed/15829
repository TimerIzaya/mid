function f0() {
    0.719320118269742 >>> 0.719320118269742;
    const o17 = {
        toString(a6, a7) {
            new Int8Array(1031);
            new Int16Array(3);
            new BigInt64Array(2);
            return 0.719320118269742;
        },
        1073741824: 0.719320118269742,
    };
    return o17;
}
const v18 = f0();
const v19 = v18();
const v20 = f0();
const v21 = [v20,v20,f0,f0];
let v22;
try { v22 = v21.map(v21); } catch (e) {}
[f0,v18,v19,v18];
const v24 = [f0,v20,v18,v21];
v24[2] = v24;
function f25() {
    return f25;
}
f25.prototype = v20;
try { Int32Array.toString(); } catch (e) {}
const v29 = new Int32Array(1024);
let v32;
try { v32 = new BigUint64Array(1024, 1024, v18); } catch (e) {}
const v33 = v32?.findLastIndex;
try { new v33(f0); } catch (e) {}
new BigUint64Array(4);
try { BigInt64Array(v21, v22, BigInt64Array); } catch (e) {}
new BigInt64Array(10);
v18.Realm;
try { v29.owner(); } catch (e) {}
