const v1 = new Date();
const v5 = [v1,Date,2.0,v1];
try { v5.pop(); } catch (e) {}
const v7 = [v5];
const v8 = [v7,2.0,v7,Date,6.051524202739139e+307];
const v9 = v8?.filter;
try { new v9(2.0); } catch (e) {}
try { v8.reduce(6.051524202739139e+307); } catch (e) {}
const v14 = new Float64Array(8);
v14[7] = v14;
let v17;
try { v17 = new Int32Array(Float64Array, 2.0, Float64Array); } catch (e) {}
try { v17.set(v14); } catch (e) {}
new Int32Array(128);
128 * 128;
const v23 = new BigInt64Array(128);
const v24 = v23[52];
v24 / v24;
function F26() {
    if (!new.target) { throw 'must be called with new'; }
    const v28 = this?.constructor;
    try { new v28(); } catch (e) {}
    try {
        this.f = 14;
    } catch(e31) {
    }
    try {
        this.a = 14;
    } catch(e32) {
    }
    try {
        this.h = 14;
    } catch(e33) {
    }
}
F26.length = F26;
try { new F26(); } catch (e) {}
const v35 = new F26();
const v36 = new F26();
const v37 = new F26();
class C38 extends F26 {
    valueOf(a40) {
        const o44 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o44);
        return gc;
    }
    e = v37;
    #d;
}
try { C38.apply(v8, Date); } catch (e) {}
const v47 = new C38();
v47.f = v47;
const v48 = new C38();
const v49 = new C38();
function f50(a51, a52) {
    const o62 = {
        [a52](a54, a55, a56, a57) {
            const v60 = typeof v48 === "boolean";
            try { a52.m(v60, a52, v60); } catch (e) {}
            return a54;
        },
        __proto__: a51,
        ...v49,
        ...v49,
        "f": v37,
        "c": v48,
        "b": C38,
    };
    return o62;
}
f50.caller = f50;
f50(v36, C38);
const v64 = f50(v36, v48);
const v65 = f50(v37, v37);
function F66(a68, a69, a70) {
    if (!new.target) { throw 'must be called with new'; }
    const v71 = this?.constructor;
    try { new v71(this, this, a68); } catch (e) {}
    a70.e = a70;
    try {
        this.f = a70;
    } catch(e73) {
    }
}
class C76 {
    static ["22307"] = "AanB8";
    b;
}
const v77 = new C76();
v77.h = v77;
new C76();
let v82 = -3.4869819310561585;
v82++;
const o88 = {
    "execution": "async",
    "type": "minor",
};
gc();
const v90 = new F66(v37, v37, v64);
const v91 = new F66(v48, v47, v90);
v91.length;
new F66(v35, v91, v65);
const v94 = [];
function f95() {
    const o97 = {
        toString() {
            return this;
        },
        3950: v94,
    };
    return o97;
}
3996 - 3996;
const v101 = new BigUint64Array(3996);
v101[1903];
v101.every(f95);
