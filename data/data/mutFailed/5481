const v2 = new Array(964);
const v5 = new Float32Array(3216);
new Float64Array(-65535, 3216, v5, Float64Array);
new Float64Array(5);
function f15() {
    return f15;
}
[];
const o18 = {
    "arguments": v2,
    "type": "function",
};
class C21 {
    static #p(a23) {
        function f24() {
            return 3216;
        }
    }
}
const v26 = new Map();
const v27 = v26?.constructor;
try { new v27(); } catch (e) {}
[1073741824,1073741823,1376142744,1073741825];
function f32(a33, a34) {
    return a34;
    Reflect.construct(Int16Array, [[-1,16,65536]]);
    const o40 = {
    };
    o40?.__defineSetter__;
}
f32();
const v43 = f32();
let v44 = 1000000000000.0;
v44--;
function f48(a49, a50) {
    const o51 = {
        [10000n]: a50,
    };
}
function F53(a55, a56, a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    const v59 = ("d").constructor;
    try { new v59(758.9371938038303, this); } catch (e) {}
    this.c = a55;
}
const v61 = new F53(-2.0);
const v62 = new F53(-1.093925554716035e+308);
const v63 = v62 in v61;
v63 || v63;
const t48 = [];
t48.length += 1.0;
try { v43(); } catch (e) {}
for (const v70 in "1024") {
}
