const v0 = /[Za(?:b)]/gviy;
const v1 = /ya\S/vms;
const v2 = /((\xed\xa0\x80))\x02a.a+/gvi;
class C3 {
    static #e = v2;
    get b() {
        function f5() {
            return v1;
        }
        return this;
    }
    set g(a7) {
    }
    static b = v0;
    #g = v2;
    f = v2;
}
const v11 = new C3();
new C3();
new C3();
class C14 {
    268435439 = C3;
    toString(a16, a17, a18) {
        try {
            v11.fuck(v11, v11);
        } catch(e20) {
        }
        return a16;
    }
    #m(a22, a23, a24) {
        new Uint8Array(4);
        new Int8Array(7);
        new Int16Array(51, v11, v11, 7);
        return v2;
    }
}
new C14();
const v35 = new C14();
new C14();
function f37() {
    return v0;
}
function f38() {
    return v35;
}
function F42(a44, a45) {
    if (!new.target) { throw 'must be called with new'; }
}
const v46 = new F42();
function f47() {
    return f47;
}
const v48 = /{}(x)(x)(x)\4*a{0}a|b/msy;
const v51 = new BigUint64Array();
function F52(a54, a55, a56) {
    if (!new.target) { throw 'must be called with new'; }
    const v57 = this.constructor;
    try { new v57(BigUint64Array, v51, v51, v35, a55); } catch (e) {}
    a56[1];
    function f61(a62, a63) {
        a63 / a63;
        arguments[1];
        arguments.toString = a62;
    }
    try { f61(f47, v48); } catch (e) {}
    f61(v57, 8077n);
}
const v69 = new F52(BigUint64Array, 4, v51);
const t68 = v69.constructor;
new t68(v46, v46, v48);
