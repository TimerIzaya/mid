function f1(a2, a3) {
    const v5 = new Date();
    v5.getSeconds();
    return f1;
}
%OptimizeFunctionOnNextCall(f1);
const v7 = new WeakMap();
v7[Symbol.toPrimitive] = f1;
class C10 extends WeakMap {
    [v7] = WeakMap;
    static #n(a12, a13) {
        const v14 = this.h;
        try {
            a13.#n(this, a13, a12, v14);
        } catch(e16) {
        }
        return v14;
    }
    12 = v7;
    #h = v7;
    d;
}
const v17 = new C10();
const v18 = new C10();
const v19 = new C10();
function f20(a21, a22, a23, a24) {
    const o35 = {
        ...a21,
        __proto__: v18,
        "d": a21,
        p(a26, a27, a28, a29) {
            a29[a24] = a24;
            +v7;
            v7 + 9;
            9 / C10;
            return a22;
        },
    };
    return o35;
}
function f36() {
}
[-4096,-1073741824,65537,9007199254740990,-4096];
const v38 = [1557591051,8137,536870888,-9223372036854775808];
Object.defineProperty(v38, Symbol.toPrimitive, { configurable: true, value: f1 });
255 * 255;
-16 <= -16;
v38 * v38;
const v46 = [];
v46.toString = f20;
try { v46.findIndex(); } catch (e) {}
const v48 = [];
v48[268435439] = Symbol;
[];
[];
[];
const v57 = ~f36;
v57 & -v46;
v57 >> 536870889;
class C62 {
}
new C62();
class C64 {
}
const v65 = new C64();
v65[594532432] = v65;
const o67 = {
};
o67.b = v19;
o67.b = o67;
v65[-16];
v48[268435439];
const v73 = ("symbol").replace("bigint");
v73.fontsize;
class C75 {
    #a = -2;
    constructor(a77, a78) {
    }
}
for (let i = 0; i < 5; i++) {
    const o80 = {
        "type": "symbol",
        "type": "symbol",
    };
    gc();
}
const v82 = f20(v18, v7, C10, v18);
f20(v19, C10, v19, v18);
f20(v19, v17, v18, C10);
const v90 = Array(1024);
v90[804] = v82;
Uint8ClampedArray[Symbol.iterator] = Symbol;
const v96 = Reflect.construct(Uint8ClampedArray, [Uint8ClampedArray]);
function f97(a98, a99) {
    new Float32Array(9);
    return v73;
}
v96.constructor = f97;
const t98 = v96.constructor;
new t98(v90);
