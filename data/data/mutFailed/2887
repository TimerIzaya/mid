class C3 {
    static #h = 257;
    static #d;
    static #o(a5) {
        try {
            a5.__proto__ = this;
        } catch(e6) {
        }
        return 5.0;
    }
    static #e;
    [257] = 5.0;
}
C3.prototype = C3;
new C3();
new C3();
const v9 = new C3();
v9[257] = v9;
class C10 {
    #d = 5.0;
    static set a(a12) {
        super.h;
        try {
            this.#d;
        } catch(e15) {
        }
    }
    static h = 257;
    static [-540349929] = v9;
    8 = v9;
}
const v16 = new C10();
const v17 = new C10();
v17[8] = v17;
const v18 = new C10();
const v19 = v18[8];
function f20() {
    return f20;
}
const v34 = `
    try {
        new Float64Array(127);
    } catch(e36) {
    }
`;
const v37 = [f20,f20,f20,f20];
const v38 = [v37];
try {
    function f39() {
        return f39;
    }
} finally {
}
const v40 = [f20,v37];
try { v40.map(v16); } catch (e) {}
class C42 extends f20 {
    [-1] = v37;
    static get c() {
    }
    static get h() {
        super.a <<= v38;
        return v38;
    }
    static 166415147 = 5.0;
    constructor(a46, a47, a48, a49) {
        super();
        super.b;
    }
}
C42.prototype;
const v52 = new C42();
v52.p = v19;
new C42();
const v54 = new C42();
v54.p = v54;
const v56 = [47831n];
[v56,v56,v56,v56];
v52.toString();
const v60 = [0.4391347154580403,257.99749453941945,-9.996237582361703,-2.2250738585072014e-308,2.0,0.22007729464719739];
try { v60.every("-1577518127"); } catch (e) {}
v54.caller = v54;
let v62 = 9;
v62--;
const v65 = new Int16Array(v62);
new Uint8ClampedArray(255);
Int32Array[0] = v38;
try { new Int32Array(Int32Array, Int32Array, v62); } catch (e) {}
v60.f >>>= 1;
("sync")[-5.0];
const v76 = new Int32Array(257);
function f77() {
    return f77;
}
const v78 = v65 && v76;
v38[3629] ||= 257;
for (const v79 of v37) {
    function f80() {
        return v52;
    }
    function f81(a82) {
        Object.defineProperty(a82, 10, { configurable: true, value: f80 });
    }
    Object.defineProperty(v79, "p", { writable: true, configurable: true, get: f80, set: f81 });
    v79.caller = v79;
    !(delete v52.e);
    !(v65 == v78);
    try { v54.p(); } catch (e) {}
}
