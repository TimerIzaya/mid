BigUint64Array.e = BigUint64Array;
new BigUint64Array(58);
BigUint64Array.e = BigUint64Array;
const v8 = new BigUint64Array(255);
v8[83];
let v12;
try { v12 = new Uint16Array(v8, "g", "g"); } catch (e) {}
new Uint16Array(2);
let v14 = 4294967295n;
v14--;
let v16 = 15873n;
v16++;
268435439n < 268435439n;
function F20() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 10137;
    } catch(e23) {
    }
    try {
        this.a = 10137;
    } catch(e24) {
    }
    try {
        this.h = 10137;
    } catch(e25) {
    }
}
new F20();
const v27 = new v12();
const v28 = v27.f;
const v29 = new F20();
new Uint8ClampedArray(v27);
0 >> 0;
new v28(0);
const v38 = new Int8Array(129);
try { v27(v38, BigInt64Array); } catch (e) {}
with (v29) {
    new Uint8Array(1);
    new BigInt64Array(10);
    new Uint16Array(1017);
}
