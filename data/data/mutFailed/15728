const v0 = /(\cAa\Bb)/guimy;
const v1 = /(?:a+)*/gdimsy;
const v2 = /\p{Script=Greek}/gudim;
function f5() {
    Array[8] = this;
    Array.__proto__ = this;
    return this;
}
f5();
function f11(a12, a13) {
    const o23 = {
        "g": -9223372036854775807,
        __proto__: v1,
        "a": 3031,
        n(a15, a16, a17, a18) {
            new WeakMap();
            return a18;
        },
        4244723502: v0,
        [a13]: v1,
        set a(a22) {
            a22.h = this;
        },
        [1417718653]: a13,
    };
    return o23;
}
f11(v0, v1);
f11(v2, v0);
f11(v1, v0);
function F30(a32, a33, a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
}
const v36 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v37 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
function f39() {
    let v40 = Float64Array;
    Array();
    v40 = F30;
    const v43 = v36.length;
    class C45 {
    }
    new C45();
    Symbol.toPrimitive;
    new Uint32Array(v37, v43);
}
function F52() {
    if (!new.target) { throw 'must be called with new'; }
    const v54 = this.toString();
    const v56 = new Set();
    const t50 = "a";
    t50.__proto__ = ("object").__proto__;
    Array.__proto__ = this;
    const o65 = {
        get b() {
            const v63 = Array.constructor;
            v63(Array, v63, v63, Array);
            return this;
        },
    };
    const o66 = {
        ...o65,
    };
    const v67 = v56.add;
    try { v67(); } catch (e) {}
    const v71 = new Int16Array(2183);
    4087 > v54;
    let [,,...v73] = v71;
    function f74(a75) {
        function f77(a78) {
            this[1] >>= 4087;
            return F52;
        }
        this.onmessage = f77;
    }
    const o81 = {
        "type": "function",
    };
    new Worker(f74, o81);
}
new F52();
new F52();
