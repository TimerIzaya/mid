function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 268435441;
    } catch(e3) {
    }
    this[this] = F0;
    this[this];
    this[Symbol.matchAll] = this;
    try {
        this.g = 268435441;
    } catch(e7) {
    }
}
const v8 = new F0();
const v9 = new F0();
new F0();
let v16 = 10;
for (;
    v16--;
    (() => {
        try {
            const t1 = "-268435456";
            t1.__proto__ = "-268435456";
        } catch(e21) {
        }
    })()) {
    v9[5];
}
/v(?:ab)|cdeVJPfoo(?<=bar)baz/iy;
/X\cA/uimsy;
/Z/gvdimy;
const v30 = [2.412578955630149,2.7008822875610345,-2.220446049250313e-16,-1.0,-1000000000.0,-1.0,3.9002388983145044e+307,-Infinity,-1e-15,-4.2464820531165003e+307];
const v31 = [-1e-15,4.0,362.9742459010415,1.488212487511409e+308,3.0];
class C32 {
    constructor(a34, a35) {
        const t36 = "c";
        t36.length >>= 856664.0260927186;
        v30 % this;
        super[v31] = v30;
        this.h;
        const t40 = "c";
        delete t40?.length;
        super[2n] = "name";
        v9[-1] = 2n;
        v8 <= "name";
    }
}
try {
    const t49 = "c";
    t49.toString = v31;
} catch(e43) {
}
const v47 = new C32(v30, v31);
function f48(a49) {
    return C32;
}
const v52 = [v47];
const o53 = {
    "arguments": v52,
    "type": "function",
};
new Worker(f48, o53);
