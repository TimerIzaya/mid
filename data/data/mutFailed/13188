const v1 = new Date();
let v4;
try { v4 = ("10").trimLeft(); } catch (e) {}
("qKYP2")["replace"](4, ..."8", v1, ..."replace", ..."10", v4);
try { v4(Date); } catch (e) {}
Date[Symbol.match];
4 >>> 4;
536870888 < 536870888;
function f17(a18, a19, a20) {
    try { a20.blink(); } catch (e) {}
    const o28 = {
        ["10"]: "8",
        8: a19,
        __proto__: Date,
        [-2]: -2,
        n(a23, a24, a25, a26) {
            try {
                const t17 = "10";
                t17.toString = a25;
            } catch(e27) {
            }
            return 536870888;
        },
        [a20]: a18,
        "a": "10",
        ..."8",
    };
    return o28;
}
const v29 = f17("8", "10", "10");
f17("10", "8", "10");
let v31 = f17("qKYP2", "10", "8");
let v32 = -29914;
function f33() {
    return f33;
}
const v35 = [3.0];
for (let v36 = 0; v36 < 10; v36++) {
    function F37(a39, a40, a41) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v42 = new F37(-725.0347156854516);
    new F37(v42, v35);
}
v32--;
-9223372036854775807 - -9223372036854775807;
let v50;
try { v50 = Math.asinh(v29); } catch (e) {}
const v51 = Math.expm1(Math);
function F52() {
    if (!new.target) { throw 'must be called with new'; }
    const v54 = this?.constructor;
    try { new v54(); } catch (e) {}
    this.h = 9007199254740991;
}
const v57 = new F52();
const o60 = {
    "h": v35,
    ..."replace",
    __proto__: "qKYP2",
    6: 623722764,
    "e": v31,
    set h(a59) {
    },
    /*
    __proto__: v57,
    */
};
let v61 = 10;
v61++;
[-4294967297,-1130849564,268435440];
const v65 = [7];
const v66 = [14,34917];
try { v66.sort(v66); } catch (e) {}
const v68 = [39028];
v68.g = v68;
const v69 = [531384559];
v69.g = v69;
[3.0,0.33171220343699925,4.064384707296433,1.5856273613625281e+308,-620.344995023322,0.9478652503365506,-856874.8447818598,-127.45049040971935];
function f72(a73, a74) {
    const o76 = {
        ...a73,
        get d() {
            return this;
        },
    };
    return f72;
}
const v77 = f72();
v77.a = v77;
const v78 = f72();
new BigUint64Array();
for (let [i84, i85] = (() => {
        10 >> 10;
        return [0, 10];
    })();
    v66 < i85;
    i84++) {
}
const v94 = [4294967297];
var f = v78;
const t101 = "qKYP2";
t101[v32] = -725.0347156854516;
let v97 = -1172480493;
-v97;
v97--;
Math.atanh(v31);
v66 << v31;
--v31;
Math.asinh(v97);
Math.cosh(v65);
-15n - -15n;
try { new Float32Array(-15n, v50, Float32Array); } catch (e) {}
new Float32Array(10);
const v116 = new Uint8Array(12);
try { v116.slice(BigUint64Array, v116); } catch (e) {}
1 >> 1;
try { Uint32Array.bind(v51); } catch (e) {}
const v122 = new Uint32Array(1);
v122[0];
("-4294967295")[3];
class C128 {
    static {
        try { this.call(10); } catch (e) {}
        super[super.b];
        v94[-15n] ^= 10;
        ~536870887;
        const v137 = BigUint64Array * 536870887;
        v137 ** v137;
        +(BigUint64Array - v137);
        536870887 << BigUint64Array;
        for (const v142 of "-4294967295") {
            try { v142.italics(); } catch (e) {}
        }
    }
}
