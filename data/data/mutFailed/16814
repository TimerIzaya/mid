const v0 = [-9223372036854775807];
[-9007199254740992,-4,256,65536,4096,257,1073741824,-15];
const v2 = [257,-36336,-9007199254740990,2147483649,127,129];
const v3 = [-4294967295,-256,1077498752,64,-29720,61085,-268435456];
const v4 = [10];
const v5 = [-65537,52838,-1164255739,238992378];
const v6 = [-42876];
const v7 = [-1320748869,722449823,-65537,0];
let v8;
try { v8 = v2(v7, v4, v7, v6, v3); } catch (e) {}
v0["some"](v8, v8);
let v11;
try { v11 = v0.sort(v8); } catch (e) {}
v11[v3] = v11;
const v12 = [-9223372036854775807,1333854053];
const v16 = [-1.3667473485475811e+308,1.7976931348623157e+308,5.0,-3.583919688173468e+307,-1.5320462342133301e+308,-414873.4859108749,286122.8434793174,866.7395286670867,-1000.0,-742782.9714922046];
function f18(a19, a20, a21, a22) {
    function f23() {
        const o28 = {
            __proto__: v16,
            "e": f23,
            ["-1073741824"]: v12,
            4: v11,
            "c": v5,
            "g": f18,
            [a21](a25, a26, a27) {
            },
        };
        o28.copyWithin(o28, o28);
        return o28;
    }
    f23();
    return v16;
}
for (let v31 = 0; v31 < 10; v31++) {
    f18(v31, v31, v31, v31);
}
[["number",v3],"some"];
([v2]).__proto__;
function f37() {
    return "number";
}
%OptimizeFunctionOnNextCall(f18);
f18("-1073741824", v16, v16);
