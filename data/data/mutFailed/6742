const v2 = new Array(629);
function f3(a4) {
    const o8 = {
        [v2]: 629,
        get b() {
            try {
                super.setTime(v2, v2, Array, v2, a4);
            } catch(e7) {
            }
            return a4;
        },
        [Array]: Array,
        "f": a4,
    };
    return o8;
}
f3(f3);
const t16 = Worker.constructor;
new t16(Array);
const o13 = {
};
f3(Array);
f3(629);
const o17 = {
};
function f18() {
    const o19 = {
    };
    o19.f = o19;
    return o19;
}
%OptimizeFunctionOnNextCall(f18);
function f21() {
    const v22 = [1000000000.0,-5.576877862296471e+307,1000000000000.0,-311382.1661484719,1000000000.0];
    function f23() {
        return f21;
    }
    for (let i = 0; i < 5; i++) {
        Object.defineProperty(v22, "d", { configurable: true, get: f23, set: f23 });
    }
    class C24 {
    }
    return f21;
}
const v25 = f21();
const v29 = new Uint16Array(2);
new Uint32Array(v29);
Array.prototype = Array;
class C33 {
}
const v34 = new C33();
const v35 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v37 = new Uint32Array();
const v39 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v40 = [1073741824,1073741823,1376142744,1073741825];
function f42() {
    const v46 = Math.expm1(v25);
    const v47 = Math.tanh(-4294967295);
    Math.hypot(v2, Math, Math, v47);
    let v49 = Float64Array;
    v49 = v25;
    b = v2;
    const v50 = v35.length;
    try {
        v40.findLast(v25, v35);
    } catch(e52) {
    }
    const v53 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
    Error.toPrimitive;
    const o67 = {
        [522675525n](a58, a59) {
        },
        "c": v2,
        [v50](a61) {
        },
        [-1]: 2684,
        1073741824: v37,
        "maxByteLength": -268435456,
        __proto__: v37,
        9: v34,
        [v47]: v46,
        ...v25,
        "arguments": v53,
        [2n](a63, a64, a65, a66) {
        },
        "e": -4294967295,
        "e": -268435456,
        "arguments": v39,
        256: Uint32Array,
        "type": "Vre",
        ..."Vre",
        4: "Vre",
        "c": -268435456,
        "type": 2n,
        "type": "Vre",
        6: -268435456,
    };
    return Uint32Array;
}
