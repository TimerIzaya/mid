new Uint16Array(11);
Array(1000);
class C9 extends Int32Array {
}
const v10 = new C9();
for (let v11 = 0; v11 < 5; v11++) {
    v10["p" + v11] = v11;
}
Math.log1p(11);
Array.__proto__ = this;
new Uint16Array(-5);
class C22 extends Float64Array {
}
class C23 {
    constructor(a25, a26) {
        Math.asin();
        this ** this;
    }
}
new Int16Array(123);
const v36 = new Uint32Array(3, Uint32Array, 1000);
for (let i38 = 0; i38 < 9; i38++) {
    v36[i38] = Int32Array;
}
Math.atan2(536870912, -9);
const v55 = [1073741824,1073741823,1376142744,1073741825];
function f57(a58, a59, a60, a61) {
    function f63() {
        const o70 = {
            "c": a61,
            valueOf(a68, a69) {
                return this;
            },
        };
        return "Vre";
    }
    f63();
    try { v55["find"](..."find", ...512n); } catch (e) {}
}
for (let v74 = 0; v74 < 10; v74++) {
    f57(522675525n, 0.5375507050396837, 0.5375507050396837, v74);
}
Math.atan2(1e-15, 536870887);
Math.expm1(1e-15);
