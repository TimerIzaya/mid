[];
new Uint32Array(16);
new Float32Array(256);
const t3 = 16;
new t3(4017);
function F10(a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 16;
    } catch(e15) {
    }
}
const v16 = new F10(16, 256, 256);
new F10(16, 4017, 4017);
new F10(256, 16, Uint32Array);
const v20 = /v*/vdms;
class C21 {
    1855;
    [v20];
}
const v22 = new C21();
function f24(a25, a26, a27, a28) {
    const o29 = {
        [a26]: a28,
        ...a27,
    };
    return a27;
}
f24(3706, v20, f24(3706, 3706, C21, v22), v22);
const v32 = ["object"];
const v33 = [v32,v32,v32,v32,v32];
const v37 = new Float32Array(1750);
const v38 = v37 - 581587.2441596473;
try { v32.flatMap(v16); } catch (e) {}
const t34 = v33[Symbol.iterator];
t34.c <<= v38;
var h = Uint32Array;
