const v0 = [0,-534042933,1874311648,-2,14];
function f1(a2, a3) {
    Math.log10(a3);
    a3 - a3;
    Math.exp(536870889);
    309284571 / 309284571;
    (309284571 - v0) % 309284571;
    return a3;
}
v0.toString = f1;
const v13 = [-1049473148];
v13[Symbol.toPrimitive] = f1;
let v16 = [109066473,255,-128,53748,4096,-2147483649,2147483648,28161,268435439];
function f17(a18) {
    v16 ||= v16;
    return a18 = Symbol;
}
v16.toString = f17;
function f19() {
    return v0;
}
const v28 = new BigUint64Array(1486);
function f29(a30, a31, a32, a33) {
    const o34 = {
        [a33]: a32,
        ...v28,
    };
    return v28;
}
function f35(a36, a37, a38, a39) {
    function f40(a41) {
        const v44 = new Uint8ClampedArray(9);
        try { BigInt64Array.from(v44); } catch (e) {}
        return Symbol;
    }
    a36[Symbol.toPrimitive] = f40;
    a39[Symbol.toPrimitive] = f1;
    const o62 = {
        [a39]: a36,
        ...v16,
        set h(a52) {
            Object.defineProperty(a36, "g", { configurable: true, enumerable: true, set: f19 });
            const v53 = a38 || a52;
            const v54 = a36.g;
            Object.defineProperty(v54, 3, { writable: true, configurable: true, value: this });
            try { this["stringify"](257n, "stringify", this); } catch (e) {}
            try {
                v53.f = v54;
            } catch(e57) {
            }
        },
        __proto__: a39,
        ...257n,
        get a() {
            return 21614n;
        },
        o(a60) {
            super.c;
            return 1486;
        },
    };
    return o62;
}
f35(v13, 1.1017848481829355e+308, 1.1017848481829355e+308, v16);
f35(v16, 1.1017848481829355e+308, NaN, v0);
f35(v0, NaN, 1.1017848481829355e+308, v13);
const v70 = new Float32Array(165);
v70[Symbol.toPrimitive] = f35;
v70[35] = v70;
new Uint16Array(v70);
function f77(a78, a79) {
    const o89 = {
        toString(a81, a82, a83) {
            try {
                a81.f = 536870888n;
            } catch(e84) {
            }
            const v85 = [-1235077344,-4096,50383815,-8476,-9007199254740991];
            class C87 extends Set {
            }
            new C87(v85);
            return 536870888n;
        },
    };
    return o89;
}
const v90 = f77();
v90.valueOf = f1;
const v91 = f77(536870888n, v90);
const v94 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v95 = [601759695];
function f97(a98, a99, a100, a101) {
    arguments[2] = arguments;
    function f103() {
        const v105 = ("Vre").toLocaleUpperCase;
        try { v105(v105, -4294967297n, a100, v0); } catch (e) {}
        const v107 = ("Vre").fixed();
        const v108 = v107.codePointAt();
        let v110 = -268435456;
        const v111 = v110--;
        const o127 = {
            "c": -4294967297n,
            [522675525n](a113, a114) {
            },
            ..."Vre",
            "maxByteLength": -128,
            "c": v95,
            [v108]: 21614n,
            "e": "Vre",
            4: "Vre",
            162: "Vre",
            "arguments": v95,
            get h() {
                return this;
            },
            __proto__: a100,
            "d": v111,
            ...a101,
            "type": "Vre",
            4: "Vre",
            5: -4294967295,
            get d() {
                return v110;
            },
            "e": -4294967295,
            "h": -128,
            valueOf(a118, a119) {
                return v107;
            },
            "e": -4294967295,
            "e": v110,
            "maxByteLength": -4294967295,
            "arguments": v94,
            ...v95,
            "type": "Vre",
            ..."Vre",
            valueOf(a121, a122) {
                return this;
            },
            ..."Vre",
            4: "Vre",
            "c": v110,
            "type": v16,
            "type": "Vre",
            toString(a124, a125, a126) {
                return -128;
            },
            5: -4294967295,
            6: v110,
        };
        o127[5] = o127;
        return o127.valueOf();
    }
    f103();
    %OptimizeFunctionOnNextCall(f103);
    return v94;
}
for (let v130 = 0; v130 < 5; v130++) {
    f97(v95, v130, v130);
}
v90 == !v91;
const v135 = new Float32Array();
const v137 = new Uint8Array(v135, Uint8Array, Uint8Array);
class C139 extends Float32Array {
    constructor(a141, a142, a143) {
        function f144(a145, a146) {
            -10 ^ -10;
            return this;
        }
        a143[Symbol.iterator] = f144;
        super(a143);
    }
}
new C139(1, v137, Float32Array);
