function f3() {
    new Int8Array(1073741823);
    return f3;
}
f3();
f3();
f3();
try { Map(); } catch (e) {}
const v16 = new Map();
const o23 = {
    n(a18, a19, a20, a21) {
        for (let v22 = 0; v22 < 10; v22++) {
        }
    },
    16: 522299695,
    ...v16,
};
new Uint16Array(4096);
new Uint16Array(1379);
const v38 = new Int8Array(2);
const v42 = new Float64Array(-1734174209);
v42[103] = v42;
const v44 = new Int16Array(v42, -1734174209, -1734174209);
const t23 = v44.constructor;
new t23(v42);
function F47(a49, a50, a51) {
    if (!new.target) { throw 'must be called with new'; }
    const v54 = new Int32Array(257);
    function f55(a56, a57, a58, a59) {
        function f61() {
            Int8Array.b = Int8Array;
            return gc();
        }
        f61();
        f61();
        let v67 = new Map();
        [...v67] = v54;
        let [...v68] = v54;
        Math.cbrt(Math);
        a51 | a51;
        function F73(a75, a76, a77) {
            if (!new.target) { throw 'must be called with new'; }
            a75 >>> a75;
            const v79 = this.constructor;
            v79.name;
            try { new v79(a75, -1000000000000.0); } catch (e) {}
            a76 % a76;
            this.a = a75;
        }
    }
    f55();
}
new F47();
const o87 = {
    "execution": "async",
};
gc(o87);
new F47();
v38.toString();
for (const v92 in "1024") {
}
function f93() {
    let v94 = 946.0676210033328;
    v94++;
    const o96 = {
        __proto__: v94,
    };
    return f93;
}
%PrepareFunctionForOptimization(f93);
new F47(-1734174209, 4294967296);
