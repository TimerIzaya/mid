const v3 = [10508,-1450641010];
const v5 = [-1450641010,v3,[268435439,v3,268435439,-1450641010],-1450641010];
[-1450641010,10508,"setUTCDate",-1450641010];
["setUTCDate",false];
[-1450641010,"E",false,v3];
const v17 = new BigUint64Array(2799);
const o18 = {
};
const t8 = o18.constructor;
t8(2799).toExponential(v17);
class C23 {
    static {
        const v25 = this.name;
        this.toString().lastIndexOf(v25);
    }
}
function f28() {
    return f28;
}
const v29 = f28();
function F30() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -65536;
    } catch(e33) {
    }
    try {
        this.b = -65536;
    } catch(e34) {
    }
    try {
        this.e = -65536;
    } catch(e35) {
    }
}
const v36 = new F30();
const v37 = new F30();
Object.defineProperty(v36, "b", { configurable: true, enumerable: true, get: f28, set: f28 });
function f38() {
    return -10;
}
let [] = "E";
new F30();
let v40 = [4294967297,-9,-9007199254740990,-43006,4294967297,2147483649,-9007199254740990,7,536870888,-16];
const v41 = [9];
const v42 = [256,9007199254740991,-2147483649,2];
class C43 {
    static e;
    16 = v42;
    e = F30;
    constructor(a45, a46) {
        try {
            v40 = v42;
            Object.defineProperty(v41, "g", { writable: true, configurable: true, enumerable: true, get: f28, set: f28 });
            f28();
            %PrepareFunctionForOptimization(f28);
            f28();
            f28();
            %OptimizeFunctionOnNextCall(f28);
            f28();
            a45.fuck(false, this);
        } catch(e53) {
        }
    }
}
const v54 = new C43(v37, v36);
const v56 = new WeakSet();
const v57 = v56[v54];
try { v57(); } catch (e) {}
const o59 = {
};
const v61 = Proxy();
const v66 = !4;
~v66;
v5 | v66;
!v66;
%VerifyType(v61);
let v70 = 0;
for (let i = 0; i < 5; i++) {
    for (let v71 = 0; v71 < 5; v71++) {
        try { ("p").indexOf(v29); } catch (e) {}
        try { ("p").fontcolor(v71); } catch (e) {}
        "p" + v71;
    }
    v70++;
}
