const v2 = new Int16Array(127);
const v5 = BigUint64Array?.constructor;
try { new BigUint64Array(Int16Array); } catch (e) {}
const v7 = new BigUint64Array(15);
const v10 = new Float32Array(188);
v10.c = v10;
-1000000000000.0 & -1000000000000.0;
function F15(a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    const v20 = v2?.constructor;
    let v21;
    try { v21 = new v20(a17, 15, v7); } catch (e) {}
    try {
        this.h = -1000000000000.0;
    } catch(e22) {
    }
    try {
        this.c = a18;
    } catch(e23) {
    }
    try {
        this.g = v21;
    } catch(e24) {
    }
}
const v25 = new F15(-1000000000000.0, 127, 188);
new F15(0.007418521995277816, 15, 188);
new F15(0.007418521995277816, 188, 127);
function f28(a29) {
    return a29;
}
f28.d = f28;
class C30 extends v5 {
}
const v31 = new v25();
const v32 = v5?.constructor;
try { new v32(); } catch (e) {}
Object.defineProperty(v31, 2075456563, { get: F15, set: f28 });
