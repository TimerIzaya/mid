const v4 = -Infinity;
Math.atan2(v4, 536870887);
const o6 = {
};
const v10 = new BigUint64Array(3273);
v10.c = WeakMap;
const v12 = [-2.220446049250313e-16,0.4010936999061169];
try {
    v12.length = -2;
} catch(e14) {
}
const v17 = new BigUint64Array(187);
const v20 = new Float64Array(2062);
class C21 extends Float64Array {
    static #g;
    n(a23, a24, a25) {
        super.b = this;
        const v28 = v20["includes"](a24, a23);
        try { v28(v28, this, v28, v28); } catch (e) {}
        new BigUint64Array(v17, 2062, 187);
        return BigUint64Array;
    }
    4 = 3273;
    #a = 9.656322642808291;
    f = v17;
    static #h;
    a = -1000.0;
    #e;
    static {
        Object.defineProperty(this, 3273, { writable: true, enumerable: true, value: this });
    }
}
new C21();
const v33 = new C21();
new C21();
const o40 = {
    "b": BigUint64Array,
    2321852491: "1p",
    "a": v33,
    [9.656322642808291](a37, a38) {
    },
    ..."1p",
    "a": 3273,
    "execution": "1p",
    [-1000.0]: v4,
    get d() {
        return this;
    },
};
const v41 = [o40,o40,o40,o40];
const v43 = 28621 + 28621;
function f44() {
    return v41;
}
const o46 = {
    ...o40,
};
o46.length = v43;
Reflect.apply(f44, v41, o46);
