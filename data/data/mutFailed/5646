const v1 = new Set();
const v3 = new Set();
function f4() {
    return v1;
}
class C5 extends Set {
    [v1];
    static valueOf(a7, a8) {
        let v9;
        try { v9 = this.min(v1, Set, v1, a8, Set); } catch (e) {}
        v9 << v9;
        v3[f4] = Set;
        super.forEach(a7, v1);
        return v3;
    }
    constructor(a13) {
        super(a13);
        const v14 = delete v1?.size;
        super[v14] = this;
        const v15 = [a13,v14];
        const v18 = [v14,v15,[[a13,a13,this,a13,v15],v3],v15];
        [this,v18,v18,a13,v18];
        [f4];
    }
}
const v21 = new C5(C5);
const v22 = new C5(C5);
new C5(v22);
[Set,Set,v22,v1,Set];
[v3,C5,f4];
const v26 = [Set];
function f27(a28, a29, a30, a31) {
    const o39 = {
        "a": v26,
        __proto__: a31,
        n(a33, a34, a35) {
            const o36 = {
                "apply": f4,
                "getPrototypeOf": f4,
                "has": f4,
                "ownKeys": f4,
                "preventExtensions": f4,
                "set": f4,
            };
            new Proxy(a35, o36);
            return a34;
        },
    };
    return o39;
}
f27(v22, f27(v3, v22, v26, v22), v26, v21);
const v42 = [290511.96857215906,0.3003673637544756,-458526.71260649094,0.8333335605081266,16682.170944584184,0.12597720350931985];
const v43 = [2.220446049250313e-16,-3.0,-3.117457405711452,Infinity,2.220446049250313e-16];
const v44 = [-2.220446049250313e-16,8.380618196344006];
class C45 {
    g;
    static charCodeAt(a47, a48) {
        return this;
    }
    static get f() {
        v44[114] <<= v42;
        return v43;
    }
}
C45.e = C45;
new C45();
const v51 = new C45();
const v52 = new C45();
class C53 {
    static #b;
    static get matchAll() {
        v44.toString = v52;
        v42.#b = this;
        return this;
    }
}
C53.b = C53;
const v55 = new C53();
const v56 = v55?.__lookupGetter__;
try { v56(v44); } catch (e) {}
const v58 = new C53();
const v59 = v58?.__lookupGetter__;
try { new v59(); } catch (e) {}
const v61 = new C53();
const v62 = v61?.constructor;
try { new v62(); } catch (e) {}
[v44,[v55,[v55,v61]],v51];
65537 + 65537;
-256;
function f72() {
    return 2720;
}
f72.arguments = f72;
f72.valueOf = f72;
function F73(a75, a76) {
    if (!new.target) { throw 'must be called with new'; }
    a75 * a75;
    const v78 = this.constructor;
    try { new v78(a75, 256); } catch (e) {}
    -a75;
    a76--;
}
F73.name;
new F73(65537, f72);
new F73();
class C85 extends F73 {
}
new C85(v42, 256);
new C85();
f27(v22, v21, v26, v3);
const v90 = new Int8Array();
v90.buffer.slice(2147483648);
