const v2 = new BigInt64Array(4096);
let v4 = 1000000000.0;
function F5(a7, a8) {
    if (!new.target) { throw 'must be called with new'; }
    a8.__proto__.toLocaleString(F5, v4, v4);
}
const v11 = new F5(-2.220446049250313e-16, v4);
const v14 = new Uint16Array(250);
const o16 = {
    ...v11,
    [4096]: BigInt64Array,
    3: Uint16Array,
    [v14]: 4096,
    [v4]: v11,
};
const v17 = [155533.8602852358,2.0];
function F19() {
    if (!new.target) { throw 'must be called with new'; }
    for (const v24 of Array(19793)) {
        v17[658291203] = null;
    }
    undefined ^ [this,this,this];
}
const v28 = new F19();
const v29 = new F19();
const v31 = new Proxy(v14, o16);
try {
    v14.a = v31;
} catch(e32) {
}
const v34 = new Uint16Array(250);
function f35(a36, a37, a38) {
    const o56 = {
        [Uint16Array](a40, a41) {
            250 % a37;
            a38[10] = v17;
            const o46 = {
                "execution": "sync",
                "type": "minor",
            };
            gc(o46);
            return v11;
        },
        "a": 250,
        "b": a37,
        1073741824: a37,
        __proto__: a38,
        ...v34,
        get e() {
            a38[2426059763];
            for (let v53 = 0; v53 < 43; v53++) {
                function f54() {
                    return v53;
                }
            }
            super[a36];
            return v2;
        },
    };
    return o56;
}
f35(v34, 12, 12);
const v58 = f35(BigInt64Array, 250, 12);
new Int32Array(1);
const v64 = new BigUint64Array(8);
new Float64Array(256);
f35(Uint16Array, 4096, 4096);
v4 -= -2.220446049250313e-16;
v11.__proto__;
Object.defineProperty(v64, "d", { writable: true, enumerable: true, get: f35 });
function F72(a74, a75) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v14;
    } catch(e76) {
    }
    try {
        this.g = a74;
    } catch(e77) {
    }
    try {
        this.c = v29;
    } catch(e78) {
    }
}
new F72(v28, 250);
new F72(12, 1785);
new F72(v58, 1785);
const v82 = new Int8Array(1785);
new Int16Array(v82);
