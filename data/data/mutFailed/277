const t0 = -1000.0;
const v7 = new t0();
[13103,1073741824,4294967296,-760323496,257,2,-1024];
[65537,9007199254740990];
[-565089232,3,-1941674300,1497249581,4096,10000,536870889,1269867163,-51686];
const v16 = new Float32Array();
const v18 = new Uint8Array(v16, Uint8Array, Uint8Array);
v16[-1e-15] = Uint8ClampedArray;
class C21 extends Float32Array {
    constructor(a23, a24, a25) {
        super(v7);
    }
}
new C21(1, v18, Float32Array);
const v0 = [];
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v0;
    } catch(e3) {
    }
    try {
        F1.f = v0;
    } catch(e4) {
    }
    try {
        this.a = v0;
    } catch(e5) {
    }
}
const v6 = new F1();
const v7 = new F1();
const v8 = new F1();
[v7,v6,[v0,"-1831242857",[v8,v6,"3F",F1],"-351045106"],F1,"-1831242857"];
new Date();
function f17() {
    return "-351045106";
}
const v19 = new Uint8ClampedArray("-1831242857");
try { v19.find(v19); } catch (e) {}
