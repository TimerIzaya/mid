const v0 = [4294967296,1,990483007,9,-2,9007199254740992,-62447,3,536870889,-50233];
const v1 = [-536870912,62511,-540,65535,536870912,1395017516,4294967296,1520418597];
const v2 = [65536,16];
class C3 {
    n(a5, a6) {
        super.f;
        return C3;
    }
    static #f = v2;
    get f() {
        super.g &= v1;
        return this[v0];
    }
}
const v10 = new C3();
let v11 = new v10();
const v12 = new C3();
let v16 = Map;
const v17 = new v16();
class C18 {
    set d(a20) {
        a20[this] = v16 >>>= a20;
    }
    #m(a22, a23) {
        let v24 = "jER";
        const v25 = [17452,4294967295,64,-8];
        [v24] = v25;
        try { new v24(...v25, -1.6798118066934893e+307); } catch (e) {}
        a23 ^ a22;
        this[6] &&= C18;
        v11 = a23;
        try {
            C3.g = v25;
        } catch(e29) {
        }
        v16 * this;
        new BigInt64Array(1433);
        const v36 = new Uint8Array(255);
        new Float32Array(299);
        return v36;
    }
}
const v40 = new C18();
const v41 = new v40();
v41.b = v41;
const v42 = new C18();
const v43 = v42.d;
function F44(a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    const v48 = this?.constructor;
    try { new v48(a46, v42); } catch (e) {}
    try {
        this.c = v17;
    } catch(e50) {
    }
}
const v51 = new v43(v42, v41);
const v52 = v51.c;
new F44(v41, v41);
new F44(v40, v42);
let v57 = -319780339n;
v57--;
function f59() {
    return v57;
}
/a|bc*/udisy;
const v61 = /Q?/gud;
try {
    v12.g = 64n;
} catch(e62) {
}
new Uint32Array(388);
new Float64Array(2025);
new Float64Array(503);
v61.dotAll = v61;
const v72 = /[x\dz]/dms;
const o76 = {
    valueOf() {
        let v75 = this;
        v72[1000] = F44;
        v75 *= v52;
        return -532550611;
    },
};
Math.tan(-532550611);
