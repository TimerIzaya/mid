const v2 = new Uint32Array(255);
new Uint8Array(256);
-5;
const v9 = new Uint8ClampedArray(5);
let v10;
try { v10 = v9.reduce(v2); } catch (e) {}
-(-8412);
v10--;
let v18 = -110.3754672304849;
v18++;
const v20 = [];
try { v20.findLast(5); } catch (e) {}
function f22() {
    const o24 = {
        ...v20,
        "c": v20,
        "e": v20,
        "f": v20,
        m() {
        },
        "h": f22,
    };
    const v29 = new Int32Array(1024);
    const v30 = v29?.with;
    try { new Uint8Array(65537, 65537); } catch (e) {}
    for (let v32 of v30) {
        v32--;
        new SharedArrayBuffer();
    }
}
f22();
f22();
for (let v38 = 0; v38 < 5; v38++) {
}
