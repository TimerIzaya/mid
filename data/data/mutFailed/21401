function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -2121814044;
    } catch(e3) {
    }
}
new F0();
let v5 = new F0();
new F0();
[7.027906040583218,-4.315230000433658,-1000000.0,-1000.0,0.8604419330065782,7.579957339074049,2.0];
[2.2250738585072014e-308,1.968588344131941e+307,1000000000.0,-8.880740478666961e+307,-1000.0];
[1000000000000.0];
const v15 = new BigUint64Array(1384);
new Uint8ClampedArray(8);
7 * 7;
try { Float32Array.from(F0); } catch (e) {}
new Float32Array(7);
for (let i26 = 0, i27 = 10;
    (() => {
        v5--;
        i26 < i27;
        let v30 = 3375;
        v30 >>> v30;
        const v32 = v30++;
        v32 >> v32;
        const v34 = v32 / v32;
        v34 >>> v34;
        const v37 = new BigUint64Array(v30);
        let v38;
        try { v38 = v37.forEach(v15); } catch (e) {}
        let [v39,,v40,...v41] = v38;
        return v39 * v39;
    })();
    (() => {
        const v45 = i26++;
        v45 === v45;
    })()) {
}
