const v0 = [-265519.0483237322];
const v1 = [-1000000000000.0,1000000.0,6.085090756182026,5.0,-1000000000000.0,820490.7351442033,-1e-15,1.0,NaN,1.0];
const v2 = [Infinity,-268346.80777938163,1000000000000.0,0.98596084856148,-3.0,0.7068932172774559,2.220446049250313e-16];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a5;
    } catch(e6) {
    }
    try {
        this.f = v1;
    } catch(e7) {
    }
    try {
        this.b = v2;
    } catch(e8) {
    }
}
new F3(v2);
new F3(v2, F3);
const v11 = new F3(v1);
function f12() {
    return v11;
}
class C13 extends f12 {
    toString(a15, a16, a17, a18) {
        try { a15.values(); } catch (e) {}
        for (let v20 = 0; v20 < 100; v20++) {
            f12();
        }
        return a16;
    }
    11 = v2;
    #e = v2;
    4;
    static g = v0;
    10 = v2;
}
new C13();
new C13();
new C13();
const v29 = new Uint8Array(47108);
for (const v30 in v29) {
}
function f33(a34, a35, a36) {
}
const v37 = f33(-9007199254740991, -4294967297, -9007199254740991);
const o38 = {
    ...f33,
};
const v39 = o38.d;
function F40() {
    if (!new.target) { throw 'must be called with new'; }
}
if (v39) {
    typeof o38 === "function";
} else {
    -9223372036854775808 === v37;
}
new F40();
f33(-9007199254740991);
f33(-4294967297, -9007199254740991);
new BigInt64Array(3);
new Int8Array(2745);
new Uint8ClampedArray(4);
const t65 = [-24725,-9223372036854775807,268435439,-267077871,-63246,2147483647,-12];
t65.match = 1;
