class C3 {
    static #d = "undefined";
    valueOf(a5, a6) {
        try { this.getOwnPropertyNames(this, this); } catch (e) {}
        super[a5];
        Array.__proto__ = this;
        return this;
    }
    8 = 297.26912893176814;
    #o(a12, a13) {
        delete a12?.[148];
        const v15 = delete this[1693806247];
        let v16;
        try { v16 = a12(a12, v15, this); } catch (e) {}
        try { new v16(); } catch (e) {}
        this[532006776] = C3;
        return v15;
    }
}
const v18 = new C3();
const v19 = new C3();
const v20 = new C3();
class C21 {
    toString(a23, a24, a25) {
        const v26 = a24 != this;
        try { C3.m(a24); } catch (e) {}
        const v32 = C3 ^ v26;
        128 >>> v32;
        const v34 = v32 + v26;
        v34 << v34;
        return a25;
    }
    #e = v20;
    static {
        this.b = C3;
        super.b = this;
    }
    valueOf(a38, a39, a40, a41) {
        super[this] = C3;
    }
}
const v42 = new C21();
const v43 = new v42();
new C21();
class C45 {
    b = v19;
    constructor(a47, a48) {
        new Uint8ClampedArray(995);
        const o54 = {
        };
        function F55(a57, a58, a59) {
            if (!new.target) { throw 'must be called with new'; }
            Math.acosh("9g9Ak");
            v19 % undefined;
            const v63 = a57.constructor;
            try { new v63(o54, 297.26912893176814); } catch (e) {}
        }
        C3 = F55;
        try {
            this.__proto__ = this;
        } catch(e65) {
        }
    }
    set e(a67) {
        let v68;
        try { v68 = this.sort(this); } catch (e) {}
        if (v68) {
            ("undefined")[2899880677];
            v18[58262245];
        } else {
            const o71 = {
            };
            new Proxy(v19, o71);
        }
    }
}
new C45(v43, v42);
const v75 = new C45(C45, C3);
new C45(v42, v75);
new Uint16Array();
function F79() {
    if (!new.target) { throw 'must be called with new'; }
    for (const v84 of Array(19793)) {
    }
    [];
    function F86() {
        if (!new.target) { throw 'must be called with new'; }
        for (let v88 = 0; v88 < 25; v88++) {
        }
    }
    const t90 = 19793;
    new t90();
}
new F79();
