const v0 = [];
function f1() {
    const o19 = {
        toString() {
            super[this];
            try {
                function F4(a6, a7) {
                    if (!new.target) { throw 'must be called with new'; }
                    const v8 = this.constructor;
                    try { new v8(); } catch (e) {}
                    a6--;
                    a6 & a6;
                }
                const v12 = [-36515,9007199254740990,904685957,1073741825,901964316,65535,8];
                const v13 = [-536870912];
                const v14 = [-9223372036854775808];
                new F4(v12, v12);
                try { v13["copyWithin"](...v14, ...f1, v12, f1, ..."copyWithin", v13); } catch (e) {}
                v0.f = this;
            } catch(e18) {
            }
            return this;
        },
        "f": v0,
        "a": v0,
        3950: v0,
    };
    function f21(a22, a23, a24) {
        const v25 = a23 !== f1;
        if (v25) {
            try { new a22(o19, v0, v25, o19, a24); } catch (e) {}
        } else {
            new Date();
        }
        const v29 = a24 >>> a24;
        (v29 - v29) - a22[1];
        return 160;
    }
    return o19;
}
const v33 = f1();
const v34 = f1();
f1();
[[3996,v0,v0,v0],3996,v0];
[3996];
v34 + v33;
try {
    v0.__proto__ = v0;
} catch(e41) {
}
const v43 = new BigUint64Array(3996);
try { v43.every(f1); } catch (e) {}
BigUint64Array.e = BigUint64Array;
const v48 = (41).constructor;
v48.f = v48;
const v49 = [-536870912,12,65535,268435440,59916,438058862,-15,1073741823,-9007199254740990];
const v50 = v49.push(v49);
v50 === v50;
class C52 {
}
const v53 = new C52();
try { v53.constructor(); } catch (e) {}
new BigUint64Array(211);
const v58 = new Int8Array(16);
v58[4] = v58;
function F59(a61, a62, a63, a64) {
    if (!new.target) { throw 'must be called with new'; }
    const v65 = this?.__defineSetter__;
    try { new v65(3996, v58); } catch (e) {}
}
const v67 = new F59(F59, F59, F59, F59);
v67.e = v67;
for (let v68 = 0; v68 < 25; v68++) {
    const v70 = "p" + v68;
    const o71 = {
    };
    const o73 = {
        get h() {
        },
    };
    try {
        const v74 = o71 << o73;
        v74 == v74;
        [-0.0,0.35331453774891175,0.0,171.67492280642023,0.015915737133018082,-390268.7701156768,-1000000000000.0,-0.0,5.0,-2.220446049250313e-16];
        const v77 = [607.0076449847468,-818.8860494127688];
        v77[0];
        v77[2];
        v77[3];
    } catch(e81) {
    }
    v67[v70] = v68;
}
