const v0 = [9,9,-65536,-12946,-24217,10,12447,255,18770,-256];
function f1(a2, a3) {
    return "4294967296";
}
v0[Symbol.toPrimitive] = f1;
const v9 = [-963406385,129,-12680,-15,-43851,5,65535,-14,536870912];
v9.toString = f1;
const v10 = [1973935856];
let v12 = -9;
function f14(a15, a16, a17) {
    function f18() {
        function f19(a20) {
            Math.atanh(-18354);
            Math.log(a20);
            const v26 = v9 || 0;
            -18354 / (v26 - -638842.7087323801);
            return v26;
        }
        return f19;
    }
    Object.defineProperty(a16, "toString", { configurable: true, get: f18 });
    const o36 = {
        [0]: 256,
        get h() {
            let v29 = this;
            v29 / a17;
            Object.defineProperty(v0, "e", { writable: true, configurable: true, enumerable: true, get: f14, set: f14 });
            ({"e":a15,"length":v29,...v12} = v0);
            new f14(v10, v29, a15);
            Symbol.toStringTag;
            v12[0];
            try {
                v29.d = 256;
            } catch(e35) {
            }
            return v29;
        },
        "d": a16,
        "b": v10,
        "a": f14,
        [v9]: v10,
        ...v0,
        "b": v12,
        3854: a16,
        "f": a15,
        [v0]: 256,
    };
    return o36;
}
f14(v9, v9, v9);
const v38 = f14(v0, v9, f14);
const v39 = f14(v0, v0, v38);
class C40 {
    static #h = 256;
    g = v9;
    static #b;
    static valueOf(a42, a43, a44, a45) {
        for (let v46 = 0; v46 < 100; v46++) {
            f14(v0, a45, a43);
        }
        try {
            v38.#b **= this;
        } catch(e48) {
        }
        return v39;
    }
}
new C40();
new C40();
new C40();
function F55(a57) {
    if (!new.target) { throw 'must be called with new'; }
    function f58() {
        try {
            Symbol("unicode");
        } catch(e61) {
        }
        return a57;
    }
    this.constructor = f58;
    a57 ^ a57;
    const v63 = this?.constructor;
    try { new v63(3n); } catch (e) {}
}
new F55(0n);
new F55(349865170n);
