const v0 = [49524,-4,-65535];
function F1() {
    if (!new.target) { throw 'must be called with new'; }
}
try {
    v0.fuck(v0, v0, F1);
} catch(e4) {
}
const v5 = [-13,1489589640];
[-48230,-30258,512,536870912,1,-268435456];
const v10 = /[(ab|cde)]/vimsy;
const v11 = /S(ab)?/gvd;
/abc|defa\fb\nc\rd\te\vf+/umy;
function f13(a14, a15, a16, a17) {
    const o30 = {
        257: a16,
        get d() {
            function f19(a20, a21, a22) {
                'use strict';
                return a20;
            }
            return this;
        },
        "a": 12,
        3: a15,
        set c(a24) {
        },
        ...v5,
        __proto__: v0,
        "f": a17,
        /*
        __proto__: v11,
        */
        "g": 12,
        268435441: v11,
        [43137](a29) {
        },
        1: a17,
        "b": 43137,
    };
    return o30;
}
function F31() {
    if (!new.target) { throw 'must be called with new'; }
}
function f33(a34, a35) {
    const o42 = {
        [a35](a37, a38, a39) {
        },
        set h(a41) {
        },
        "h": v0,
    };
    return F31;
}
f13(127, 43137, v11, v10);
Math.asinh(-10);
const v49 = new Int16Array(255);
const o50 = {
    ...v49,
};
f13(43137, 12, 12, v11);
f13(43137, 127, 12, v11);
const v54 = new WeakSet();
[v54];
function F56(a58, a59, a60, a61) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a59;
}
function F63(a65, a66) {
    if (!new.target) { throw 'must be called with new'; }
    const v67 = this.constructor;
    try { new v67(268435440n, a66); } catch (e) {}
    this.f = 268435440n;
}
const v69 = new F63();
const v70 = new F63();
let v71 = 65536;
v71--;
function f73(a74) {
    const o77 = {
        ...v71,
        5: v71,
        valueOf(a76) {
            return v69;
        },
        "g": v71,
    };
    return v70;
}
%PrepareFunctionForOptimization(f73);
class C78 extends WeakSet {
}
new C78();
const o81 = {
};
gc(o81);
