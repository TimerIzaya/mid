class C3 {
    constructor(a5) {
        a5.d = a5;
        let v6;
        try { v6 = ("undefined").repeat(a5); } catch (e) {}
        -4294967296 * -4294967296;
        ~-351424750;
        !a5;
        let o14 = {
        };
        o14.a = o14;
        const v16 = new Proxy(Math, o14);
        v16.LN10 = v16;
        "flags" !== "undefined";
        let v18 = 1.7976931348623157e+308 & 1.7976931348623157e+308;
        v18--;
        const v20 = +v18;
        v20 != v20;
        let v22 = Math.expm1(-351424750);
        v22 >>= -4294967296;
        o14 = this;
        try { v6(a5, "undefined", "undefined", this); } catch (e) {}
        const t22 = "oWCQ";
        t22[1] = "oWCQ";
        Number.isNaN(Math.log2(-351424750));
        a5 * v18;
        try { a5(a5, this, -6.488119994502856); } catch (e) {}
    }
    toString(a33, a34) {
        try { Array.isArray(Array); } catch (e) {}
        new Int32Array(2);
        -1000.0 + -1000.0;
        try { C3(Int32Array, 2); } catch (e) {}
        this.c;
        4056 & 4056;
        new Float64Array(4056);
        2915 / 2915;
        new Int32Array(2915);
        return Float64Array;
    }
}
const v54 = new C3(C3);
const v55 = new C3("flags");
const v56 = v55?.constructor;
try { new v56(v54); } catch (e) {}
const v58 = new C3("undefined");
function F59(a61, a62, a63, a64) {
    if (!new.target) { throw 'must be called with new'; }
    const v65 = this?.constructor;
    try { new v65(a64, this, a63, a63); } catch (e) {}
    const v67 = a63?.constructor;
    try { new v67(this); } catch (e) {}
    const v69 = a64?.constructor;
    try { new v69(a63); } catch (e) {}
    try {
        this.e = "undefined";
        a64 = ("flags")[F59];
        try { ("object").split(v55, v58); } catch (e) {}
        ({"length":a64,...a64} = "object");
        try {
            new C3(["flags",a64,a62,2,F59]);
        } catch(e79) {
            e79.a = e79;
        }
        try {
            this.length = 2;
        } catch(e80) {
        }
    } catch(e81) {
    }
    try {
        this.b = a62;
    } catch(e82) {
    }
    try {
        this.c = a61;
    } catch(e83) {
    }
}
const v84 = new F59(v54, v54, v54, v54);
new F59(v54, v54, v54, v54);
const v86 = new F59(v84, v54, C3, v58);
v86.e = v86;
function f90(a91, a92) {
    const o96 = {
        968: a92,
        "d": a91,
        [268435439n]: 2105444095n,
        __proto__: -4294967296n,
        valueOf(a94) {
            return 268435439n;
        },
    };
    return a91;
}
const v97 = [0.4391347154580403,257.99749453941945,-9.996237582361703,-2.2250738585072014e-308,2.0,0.22007729464719739];
[4.884917422719438e+307,-673.270676267643,1.232076168738048e+308,0.8093131303599983,Infinity,-2.220446049250313e-16,1000000000.0,-1.3047792922265835e+308,0.6482773134068259];
-45310 - -45310;
for (let v103 = 0; v103 < 100; v103++) {
    f90();
}
v97.b;
v97.length;
try { Math.expm1(Math); } catch (e) {}
9007199254740990 ** -730.1794399783898;
