new BigUint64Array(64);
let v5;
try { v5 = Int16Array.from(580); } catch (e) {}
const v6 = new Int16Array(580);
try { v6.find(v6); } catch (e) {}
const v10 = new Int16Array(2);
let v11;
try { v11 = v10.reduce(v5, Int16Array); } catch (e) {}
b = v11;
Reflect.construct(Int16Array, [2,580], Int16Array);
v5[1];
[Int16Array,2,[2],2];
const v18 = [Int16Array,Int16Array];
try { v18.toString(); } catch (e) {}
const v20 = [23795,8,259058917,-256,1,-36806,4096,-9,-1,-18943];
new Date(64, v20, v20, v20, -2);
let v24;
try { v24 = v11.getHours(); } catch (e) {}
Symbol.toPrimitive;
Symbol.for(v24.description);
