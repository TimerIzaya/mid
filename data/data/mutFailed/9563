function f0() {
}
function f1() {
    return f0;
}
const v2 = [-0.5835571311664989,-1.793771771171662e+307,-5.0,-0.0,1.5142706762284979e+308,-628.0605319742707,1.0944750539813669e+308,-1.0];
const v3 = [-5.680885113747339,0.11749730514828005,7.961129377523864,303.27248556257155,-1000000000.0,1000000000000.0];
[-9.05847949572524,-2.220446049250313e-16,1.4465015749852612e+308,-16128.945433952846,-3.955394719879929e+307];
function f8() {
    return "message";
}
new WeakSet();
function f17() {
}
function f18() {
    const o44 = {
        "b": f0,
        [f17]: f17,
        valueOf() {
            let v21 = -(-1e-15);
            try {
                v3.h = -536870912;
            } catch(e22) {
            }
            let {"b":v23,} = this;
            v21--;
            const v25 = /a\Sc?/giy;
            v25.valueOf = v25;
            try {
                f17();
            } catch(e27) {
                Symbol("bZ");
                const v31 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
                class C32 {
                    constructor(a34, a35, a36, a37) {
                        const v38 = this?.constructor;
                        try { new v38(v31, a36, a36); } catch (e) {}
                        a35 >>> a35;
                        0.061410412759498656 >>> 0.061410412759498656;
                    }
                }
            }
            try {
                this.valueOf = v2;
            } catch(e43) {
            }
            return f17;
        },
    };
    const v46 = [-1000.0,351.94489669740733,5.8623101046484845,-160881.40611645568,0.6390643538224362,9.13027568774574];
    function f47(a48, a49) {
        return f47;
    }
    const v51 = new Promise(f47);
    v51[v46] += 36002;
    return o44;
}
f18();
const v53 = f18();
const v54 = v53?.b;
try { new v54(); } catch (e) {}
new Uint8Array(268435440);
function F59() {
    if (!new.target) { throw 'must be called with new'; }
}
class C61 extends F59 {
}
Date[-22872n] = Date;
const v65 = ("function").length;
const v66 = f18();
function F67(a69, a70) {
    if (!new.target) { throw 'must be called with new'; }
    const v71 = this?.constructor;
    try { new v71(a69, a69); } catch (e) {}
    try {
        f0();
    } catch(e74) {
    }
    let {"b":v75,"f":v76,...v77} = this;
    new Uint16Array(v65);
    const v80 = [];
    const o81 = {
        ...v80,
    };
    try {
        this.b = a70;
    } catch(e82) {
    }
    try {
        this.c = a69;
    } catch(e83) {
    }
}
const v84 = new F67(v66, v66);
new F67(v53, v84);
new F67(v66, v84);
-6n * -6n;
function f92(a93, a94) {
    Math.atan2(Math, f92);
    return f92;
}
new Promise(f92);
1713234876 === 1713234876;
function f101(a102, a103) {
}
const t105 = -6n;
t105();
f101(-1748, 1713234876);
function F106(a108, a109) {
    if (!new.target) { throw 'must be called with new'; }
    const v110 = this.constructor;
    v110.f = v110;
    function f114() {
        return f114;
    }
}
