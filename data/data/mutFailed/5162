function F7(a9) {
    if (!new.target) { throw 'must be called with new'; }
    const v10 = a9 ^ a9;
    v10 * v10;
    const v12 = this.constructor;
    v12.length = v12;
    try { new v12(3n); } catch (e) {}
}
0.4500873792980049 - 0.4500873792980049;
function f15() {
    return 1.0;
}
const v20 = 3.113422507127331e+307 - 3.113422507127331e+307;
const v23 = [4096,2.315362302777773,587493.8734167742,3.113422507127331e+307,6.072393442579365e+307];
for (let i26 = 0, i27 = 10; i26 < i27; i26++) {
}
[v23,f15,-4096,-1000000000.0];
const v35 = [587493.8734167742,0.4500873792980049,2.315362302777773];
const o50 = {
    set g(a37) {
        try { a37.valueOf(); } catch (e) {}
        const v40 = new Date(Date);
        v40.setFullYear();
        function f42() {
            return f42;
        }
        const v44 = new Uint8ClampedArray();
        v44.filter(f42);
    },
    get g() {
        return v20;
    },
    "e": v35,
    p(a48, a49) {
        return this;
    },
};
o50.g = o50;
Symbol.iterator;
class C53 {
}
const v57 = new BigUint64Array(10);
Reflect.apply(F7, v57, ["db",6]);
Object.defineProperty(o50, Symbol.toStringTag, { enumerable: true, value: o50 });
