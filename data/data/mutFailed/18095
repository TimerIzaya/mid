let v4 = 4096;
const v6 = [6,-4294967297];
const v7 = [268435456];
let v8 = [-11858,2147483647,-4294967297,-53000,65537];
function f9() {
    return v8;
}
new Uint8Array(1024);
v6[Uint8ClampedArray];
new Int8Array(255);
new Uint8ClampedArray(0);
new Uint16Array(9);
new Uint8ClampedArray(4096);
const v28 = new BigUint64Array(2);
function f29() {
    const v31 = new Set();
    v4 = 4096;
    try { v31.add(Set); } catch (e) {}
    [10,-1024,1073741824];
    [1732914129,11365,0,-8];
    [-65535,29716,9007199254740992,9007199254740991,256];
}
class C36 {
    o(a38, a39) {
        const v40 = a39 - 1024;
        this[v40] = 4096;
        try { a38["m"](v6, "m"); } catch (e) {}
        ("m")["replaceAll"](0, 1024, this, v40, this);
        for (const v46 of "bigint") {
        }
        f29();
    }
}
v28[11] = v8;
new WeakSet();
f29();
v8 /= v7;
new C36();
new C36();
/(x)(x)(x)\1/uis;
[f29,[f29],C36];
function F58() {
    if (!new.target) { throw 'must be called with new'; }
    const o61 = {
    };
}
const o62 = {
};
new Float32Array(260330366);
new F58();
new Float64Array();
const v71 = [1613217357,204598905,15977,1122227661,64,-2,-12,536870888];
[NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
class C73 {
}
new C73(v71, 659.0540372978887);
("valueOf").localeCompare();
new Float32Array();
