function f0() {
    const v4 = f0();
    for (const v5 in v4) {
        Object.defineProperty(v4, v5, { set: f0 });
    }
    const v8 = new Uint32Array(9, 9, 9);
    v8.buffer;
    const o34 = {
        set g(a11) {
            a11[1.696379962768057e+308] = "valueOf";
        },
        get h() {
            1.696379962768057e+308 >> this;
            this > -65536;
            [-5.125194828982757e+306,-797.8751552621477,-1e-15,-5.2350524791244535,0.2011312440077333,-1000000.0,-1000.0];
            const v16 = [-2.7644581283794567,-2.220446049250313e-16,-1.0,8.904924195436134,1.9200275061803747e+307,1.4434449743662451e+308,2.2250738585072014e-308,-213.1070977085135,-1000.0,-2.220446049250313e-16];
            const v17 = [1000000.0,819225.1630772119,256228.24171850854,1.0,-3.0,1000000000.0,0.08558789311471204,-1.0,4.0,9.13935196401735e+306];
            v16.groupToMap;
            const v20 = new Uint32Array(4);
            const v24 = /[(?:a*)+]/gudisy;
            function f25() {
                const v28 = new Uint16Array(209);
                const v30 = [delete v8[v20],Uint16Array,v24,"o"];
                [v28];
                [v30];
                Object.defineProperty(v30, "d", { writable: true, configurable: true, enumerable: true, value: Uint32Array });
            }
            class C33 extends f25 {
            }
            return v17;
        },
        2837737814: -65536,
    };
    return o34;
}
f0();
f0();
f0();
[1073741824,58320,-488150241,7399];
[9223372036854775807,10000,-4294967295,10000,16];
const v40 = [-4294967297,4,129,3];
class C41 {
}
new C41();
[[0.38057796469390925,-3.0,-518688.06248081743,-2.0,107.8968501375,-400463.65452600387,-222.36741891958593,-1000.0,-5.415934286194992,1000000000000.0],-2];
new Int32Array(2478);
new Float64Array(648448121);
function f52() {
    const o54 = {
        get b() {
            return f52;
        },
    };
    return o54;
}
const v57 = new Uint32Array(9);
const v60 = ([6,-963441656,16,29379,4294967295,-1,-7,264333751,-1860319367]).indexOf(...[1.7976931348623157e+308,-1.2968908289000048e+307,0.402129700476598,0.9687558030639707,-3.0,-3.892783004799951,1000000000.0,NaN,-638560.6883919106,764993.5586307007]);
const v61 = v57.constructor;
try { new v61(); } catch (e) {}
new Float32Array();
function F68() {
    if (!new.target) { throw 'must be called with new'; }
    const v70 = this.toString();
    const v72 = new Set();
    const v73 = v72.add;
    try { v73(); } catch (e) {}
    const v77 = new Int16Array(2183);
    4087 > v70;
    let [,,...v79] = v77;
    function f80(a81) {
        function f83(a84) {
            this[1] >>= 4087;
            return F68;
        }
        this.onmessage = f83;
    }
    const o87 = {
        "type": "function",
    };
    new Worker(f80, o87);
}
("boolean").split("toString");
v40.message;
class C91 {
}
try {
    const o94 = {
        "type": 10,
    };
    Worker(v60, o94);
} catch(e96) {
}
