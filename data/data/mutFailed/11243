const v5 = ([636.0619904743435,-1.0,1.02880264701966e+308,-656.9941137140671,-29.012861243904695,1000000000000.0])["flat"]();
class C11 {
    9;
    [-4294967295n] = 13n;
    get g() {
        this.f >>>= 1;
        const v13 = this[3360579767];
        try {
            super.toSpliced(v13, 13n, v13, 2, -1771000438);
        } catch(e15) {
        }
        return -1771000438;
    }
}
new v5();
class C17 {
    static toString(a19, a20) {
        this.__proto__;
        Math.atan(this);
        let v25 = --a19;
        const v26 = -8 - v25;
        ++v25;
        Math.expm1(Math);
        function f30(a31) {
            const o32 = {
            };
            return o32;
        }
        const v33 = v25 ** a19;
        ++v25;
        Math.log2(v26);
        return v33;
    }
}
new C17();
new C17();
new C17();
new Float64Array(3349);
new Int8Array(2534);
new Int32Array(14);
const v50 = new BigUint64Array(2);
const o134 = {
    [v50](a54, a55, a56) {
        class C57 {
        }
        try { WeakMap.apply(Int32Array, Date); } catch (e) {}
        class C62 {
            static {
                for (let i67 = 0, i68 = 10;
                    (() => {
                        const v69 = i67 < i68;
                        class C70 extends Date {
                        }
                        const v71 = [1557591051,8137,536870888,-9223372036854775808];
                        v71 * v71;
                        v5 * 536870887;
                        const v77 = new Int16Array(4096);
                        class C78 {
                            constructor(a80, a81, a82, a83) {
                                let [v84,v85,,...v86] = v77;
                                try {
                                    class C87 {
                                        #n(a89, a90, a91, a92) {
                                            super[this] = this;
                                        }
                                    }
                                } catch(e93) {
                                }
                            }
                        }
                        return v69;
                    })();
                    i67++) {
                }
                function F100() {
                    if (!new.target) { throw 'must be called with new'; }
                    const o103 = {
                    };
                    o103.e = 19793;
                    const o104 = {
                    };
                    o104.h = 58;
                    const v106 = Array(19793);
                    for (const v107 of v106) {
                    }
                    const v108 = [v106,v106,v106,v106,v106];
                    const v110 = new BigUint64Array();
                    const v112 = [v110];
                    for (let v113 = 0; v113 < 50; v113++) {
                    }
                    v112[65536] %= 256;
                    [[v108,v108,v108]] >= Uint16Array;
                }
                new F100();
            }
        }
        for (let i120 = 0;
            (() => {
                function F123(a125, a126) {
                    if (!new.target) { throw 'must be called with new'; }
                    a125.trimLeft().strike();
                    const v129 = this.constructor;
                    try { new v129("a"); } catch (e) {}
                }
                return i120 < 10;
            })();
            ) {
        }
    },
};
