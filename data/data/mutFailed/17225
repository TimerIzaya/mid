function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a5;
    } catch(e6) {
    }
    try {
        this.g = -213505079;
        -9.541855845168355 - -9.541855845168355;
        for (let v9 = 0; v9 < 5; v9++) {
            const o13 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o13);
        }
    } catch(e15) {
    }
}
const v16 = new F3(7);
new F3(-315148103);
const v18 = new F3(7);
function F19(a21, a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 7;
        const o25 = {
        };
        const v26 = o25.constructor;
        v26.isFrozen(v26);
        new Uint8ClampedArray(268435440);
    } catch(e31) {
    }
    try {
        this.b = a24;
    } catch(e32) {
    }
    class C33 {
    }
    const v36 = new Uint8ClampedArray(1907);
    v36[7] = 43464885;
}
const v38 = new F19(-315148103, v18, -315148103, 7);
const v42 = new Uint32Array(16);
try {
    v42.length = 1073741824;
} catch(e43) {
}
const t48 = 7;
new t48(7, v16, 7, 7);
new F19(-213505079, v38, -213505079, -315148103);
[22773,-65537,536870889,33636,1478218439,-128,-559743708,16,-9223372036854775807];
[16627,25050,-65535,-268435456,2147483648,536870912,-909155128];
[56631,-1989,-65537,1000,29259];
const v51 = [-48288,15,-63536,268435456];
class C52 extends Array {
    constructor(a54, a55, a56) {
        super(a54);
    }
}
new C52(v18);
new v42();
const v59 = new C52();
for (let i = 0; i < 5; i++) {
    const t64 = 7;
    t64[v51] = v59;
}
