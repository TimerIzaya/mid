function f0() {
    const o13 = {
        "f": 8.91158275314735e+307,
        get h() {
            let v7 = 4.3710987813863213e+307;
            const v8 = v7--;
            v8 / 23093;
            Math.cos(v8);
            -v7;
            23093 << v8;
            return -1643158709;
        },
        3820489569: -1643158709,
        "b": -1643158709,
        "g": 8.91158275314735e+307,
    };
    o13.valueOf = -1643158709;
    return o13;
}
const v14 = f0();
let v15 = f0();
v15.valueOf = f0;
const v16 = f0();
let v22 = ["symbol"];
const v23 = [v14,"number",6n,"wv0",v22];
[3n,"number",v23,f0,v23];
!v15;
const v28 = v15 >>> 34500;
~f0;
const v30 = --v15;
++v22;
v30 - v28;
++v15;
class C38 {
    #d = -1692782047n;
    [3n];
    3877250747 = "1073741825";
    #h = 6n;
    static ["1073741825"] = f0;
    constructor(a40, a41, a42) {
        this.a = "m";
        this.a = -1692782047n;
        try {
            this.a = a40;
        } catch(e43) {
        }
        try { new a40(..."valueOf", this, ...a42, f0, ..."symbol"); } catch (e) {}
        try {
            new f0();
        } catch(e46) {
        }
    }
}
new C38(f0, v15, "m");
const v48 = new C38("valueOf", v16, "symbol");
new C38(v48, v14, "m");
class C51 extends Uint32Array {
}
const v52 = new C51();
function f53() {
    return f0;
}
Object.defineProperty(v52, Symbol.toPrimitive, { writable: true, get: f53 });
Math.tanh(v52);
