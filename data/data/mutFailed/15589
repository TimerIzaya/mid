let v2 = "boolean";
new Int16Array(1);
new Uint16Array(1857);
const v11 = new Uint8Array(3603);
class C12 extends Int16Array {
    constructor(a14, a15, a16) {
        super(1857, 1, 1857);
        let v20;
        try { v20 = v2(v11); } catch (e) {}
        super.includes(v11, 3603);
        try {
            a15.split("o");
            return v2;
            super[v20];
        } catch(e27) {
        }
    }
    /*
    constructor(a29, a30, a31) {
        ({"c":v2,...v2} = a30);
    }
    */
    o(a34, a35, a36, a37) {
    }
    g;
    static #b = 1;
    static f = 1857;
}
function f38() {
    Uint8ClampedArray.e = Uint8ClampedArray;
    return Uint8ClampedArray;
}
%PrepareFunctionForOptimization(f38);
new Int8Array();
for (const v43 in "9007199254740992") {
}
f38();
%OptimizeFunctionOnNextCall(f38);
f38();
const v48 = new Uint16Array(129);
v48.indexOf(129);
const o51 = {
    "maxByteLength": 150,
};
const v52 = new C12("getFloat32", v2, "getFloat32");
new C12(v2, "o", v2);
new C12(v2, "getFloat32", "o");
const v59 = new Uint8ClampedArray(Date);
const v62 = new Float64Array(1);
const v63 = Symbol.isConcatSpreadable;
const v64 = Array();
v64[267] = v63;
const v66 = [v62];
const v67 = [v66,v66];
[Array,v59];
Object.defineProperty(v52, 16, { writable: true, get: Date, set: f38 });
[...v64,1,Uint8ClampedArray,...v67];
const v70 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v71 = [601759695];
function f72(a73) {
    return a73;
}
class C74 extends f72 {
    static #b = Uint8ClampedArray;
    #f = v11;
}
const v75 = [1073741824,1073741823,1376142744,1073741825];
function f77(a78, a79, a80, a81) {
    function f83() {
        const o90 = {
            "e": -4294967295,
            ...v70,
            ..."Vre",
            "c": a81,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a88, a89) {
                return v75;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            5: -4294967295,
            6: -268435456,
        };
    }
    f83();
    %OptimizeFunctionOnNextCall(arguments);
    let v93;
    try { v93 = v75["find"](..."find", a81, ...v71, ...v75, ...522675525n); } catch (e) {}
    v93 <= a80;
    return arguments;
}
f77(v70, v75, "-1073741824", 522675525n);
for (let v96 = 0; v96 < 10; v96++) {
    f77();
}
v64["concat"]();
