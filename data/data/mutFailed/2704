const v0 = [];
const o4 = {
    get g() {
        return this;
    },
    set g(a3) {
    },
};
class C5 {
    #o() {
        this[v0] = this;
        Math.sqrt(-109912895);
        const v11 = +this;
        this % this;
        const v13 = this / this;
        Math.log1p(this);
        -109912895 >>> v13;
        return v11;
    }
    [v0] = v0;
    6;
}
const v16 = new C5();
const v17 = new C5();
const v18 = v17[6];
new C5();
const v24 = new Float32Array(255);
v18();
v24 instanceof Float32Array;
const v29 = [1432525233,-2,4,65536];
const v31 = new Uint16Array(Uint16Array);
const v34 = new Uint32Array(255);
for (let i36 = 0; i36 < 9; i36++) {
    v34[i36] = v31;
}
const v42 = [484642994,1935148001];
const v44 = new Uint8Array();
const v46 = new Uint32Array();
function f47(a48, a49, a50, a51) {
    a48.g = a48;
    const v52 = a50 % o4;
    const o56 = {
        "b": v52,
        ...v44,
        n(a54, a55) {
            v46[a48] = v46;
            return a55;
        },
    };
    return Uint8Array;
}
const v57 = [1,7,485419601,2321];
try { v57.toSpliced(v17, v18); } catch (e) {}
const v60 = new Set();
const v61 = v60?.constructor;
try { new v61(); } catch (e) {}
class C63 {
    get e() {
        new Array(11);
        try {
            const t60 = "y1dF";
            t60.length = 11;
        } catch(e68) {
        }
        return v16;
    }
    constructor(a70, a71, a72, a73) {
        a71[6];
        this[1312];
        gc?.[64];
    }
    #g = Set;
}
const v77 = new C63(v29, v16, "y1dF", v29);
new C63("function", "function", v77, v42);
new C63(v0, "function", C63, v42);
try { new Map(); } catch (e) {}
const v83 = Array(Array);
try { v83.map(Array); } catch (e) {}
for (let v85 = 0; v85 < 5; v85++) {
    const v86 = v85 || v83;
    v86 ** v86;
}
try {
    const o88 = {
    };
    new Map(o88);
} catch(e90) {
    e90.message = e90;
}
