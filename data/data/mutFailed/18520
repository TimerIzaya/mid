new BigInt64Array(2);
let v7 = Map;
const v8 = new v7();
class C9 {
    set d(a11) {
        a11[this] = v7 >>>= a11;
    }
    #m(a13, a14) {
        let v15 = "jER";
        const v16 = [17452,4294967295,64,-8];
        [v15] = v16;
        try { new v15(...v16, -1.6798118066934893e+307); } catch (e) {}
        a14 ^ a13;
        v7 * this;
        new BigInt64Array(1433);
        const v26 = new Uint8Array(255);
        new Float32Array(299);
        return v26;
    }
}
const v30 = new C9();
const v31 = new C9();
v31.b = v31;
const v32 = new C9();
v32.d;
function F34(a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    const v38 = this?.constructor;
    try { new v38(a36, v32); } catch (e) {}
    try {
        this.c = v8;
    } catch(e40) {
    }
}
const v41 = new F34(v32, v31);
v41.c;
new F34(v31, v31);
new F34(v30, v32);
let v47 = -319780339n;
v47--;
function f49() {
    return v47;
}
/a|bc*/udisy;
const v51 = /Q?/gud;
v51.dotAll = v51;
/[x\dz]/dms;
Math.tan(-532550611);
new Float32Array(256);
const v60 = new Uint16Array(16);
let v67 = 1000000000.0;
function f68(a69) {
    const o72 = {
        "g": v67,
        set a(a71) {
            a71.h = a69;
        },
        "h": a69,
        "d": -1.1013479045636231e+308,
        "b": -1.1013479045636231e+308,
        2: a69,
    };
    return o72;
}
f68();
f68();
class C78 {
    #n(a80, a81, a82, a83) {
        super[this] = this;
        super[f68].o();
    }
    constructor(a88, a89) {
        const o93 = {
            "type": "minor",
        };
        gc(o93);
    }
    [v60] = v47;
    #f = -14;
    [3n];
    static #d;
    [C78];
}
new C78(C78, 655864.1717298129);
new C78();
new C78();
v67 /= -2.2250738585072014e-308;
for (let i99 = 0; i99 < 7; i99++) {
    new C78();
}
