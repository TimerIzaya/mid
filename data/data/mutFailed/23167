const v0 = /(?:a+)?a?/ui;
const v1 = /(YU(x)(x)(x)\12a\sc*)/gvm;
const v2 = /(C[x\dz])/dmsy;
class C3 {
    [v0];
    set b(a5) {
        try {
            this.toString = a5;
        } catch(e6) {
        }
        const v9 = [[v0,this,v2,v1[613447047]]];
        [v9,v9,this,v0];
    }
    #a = v0;
}
const v11 = new C3();
const v12 = new C3();
const v13 = new C3();
new Array(218);
const v21 = new Set();
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a24;
    } catch(e26) {
        v11[a24] = e26;
        Object.defineProperty(e26, 1776, { get: Array });
        let v27;
        try { v27 = v13.isNaN(218, v12, this, e26); } catch (e) {}
        v13[this] += 65332;
        try { v27(e26); } catch (e) {}
        for (let [v29,v30] of a24) {
            try {
                v21.values();
            } catch(e32) {
            }
        }
    }
    try {
        this.h = v21;
    } catch(e33) {
    }
    try {
        const v34 = v21[this];
        try {
            new F22(v34, -268435456n);
        } catch(e37) {
        }
        this.b = Set;
    } catch(e38) {
    }
}
const v39 = new F22(Set, Set);
new F22(Set, F22);
const v41 = new F22(v39, F22);
const v45 = [65537,268435441,63298,-5,1235122603];
const v46 = [128,215394418];
const v47 = v46.entries();
const v48 = [-2,-4294967296,4294967297];
function F49(a51, a52, a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
}
const v55 = new F49(-714582153, F49, -714582153, v46);
const v57 = new F22(v41, null);
new BigUint64Array(0);
new Int32Array(1519);
v55.length;
const v65 = new F49(9, v55, 9, v48);
v65.b = v65;
const v66 = new F49(1024, v65, v48, v48);
v2[13] = 0;
try {
    new F22(v46, v13);
} catch(e72) {
}
const v76 = ("string").trimStart();
v47[3];
let v80;
try { v80 = v76(); } catch (e) {}
v45[v80] = v46;
0 ^ 9;
const v85 = -1000;
~9;
v85 >>> v85;
const v89 = ("string").length - F49;
a = v89;
v21[v65];
const v91 = v57.__proto__;
const v92 = -35417 - -35417;
let v94 = undefined;
v94 = v66;
try { v91(-581116763, Int32Array, v92, 1024); } catch (e) {}
v41[0] = v89;
let [v96,...v97] = v48;
const t94 = "string";
t94.length += v92;
new C3();
