const v0 = [7,-2,12,4096,268435456,1073741824];
const v1 = [258823739,-2147483647,2,-4096,9007199254740990,-3060,64,-1024,0];
[515396001,-27392,-9007199254740992,268435440];
new Uint32Array(2523);
const v8 = new BigUint64Array(3756);
new Uint8ClampedArray(15, v8, 15);
class C12 extends Uint8ClampedArray {
    5;
    static #d = Uint8ClampedArray;
    static #valueOf(a14, a15, a16) {
        function F17(a19, a20, a21) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = this;
            } catch(e22) {
            }
            try {
                this.f = 3756;
            } catch(e23) {
            }
        }
        new F17(a16, a16, a14);
        new F17(v1, a16, 2523);
        new F17(a16, a15, 3756);
        return v0;
    }
}
new C12();
new C12();
new C12(3756, v0, 15);
const v30 = [-Infinity];
class C31 {
}
const v32 = new C31();
v30 << v32;
