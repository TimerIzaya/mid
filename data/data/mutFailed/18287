let v2 = "toUpperCase";
class C3 {
    static set a(a5) {
        for (const v6 in "match") {
            super.a = v6;
            [[v6,v6],[a5,C3]];
            this[66];
            try {
                a5.d = this;
            } catch(e11) {
            }
        }
    }
    ["mkxlY"];
    [v2] = "mkxlY";
    ["match"];
}
const t17 = "mkxlY";
const v12 = new t17();
const v13 = new C3();
const v14 = new C3();
const v15 = v2 << v14;
("match")["match"];
try {
    v13.fuck(false, -1000000000000.0);
} catch(e20) {
}
new Uint16Array(2781);
new Uint8ClampedArray(127);
Uint8ClampedArray | Uint8Array;
v12.e -= v15;
let v31 = "match" || v15;
({"a":v31,"g":v2,} = C3);
try {
    v12.e = "mkxlY";
} catch(e32) {
}
new Uint8Array(2795);
function f34() {
    return f34;
}
const o36 = {
    [f34]() {
    },
};
const v38 = [[o36]];
function f39(a40, a41) {
    return a41;
}
["function",v38];
const o45 = {
};
const v47 = new Proxy(Worker, o45);
v47 === v47;
const o49 = {
    "arguments": Uint8ClampedArray,
    "type": 127,
};
new Worker(f39, o49);
