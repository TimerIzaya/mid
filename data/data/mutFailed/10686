new Uint8ClampedArray(145);
function F3() {
    if (!new.target) { throw 'must be called with new'; }
}
const o6 = {
    "maxByteLength": 536870889,
};
new Uint8Array(Uint8Array);
new Uint16Array(2300);
new Uint8ClampedArray(62);
new Uint32Array(385);
function F22(a24) {
    if (!new.target) { throw 'must be called with new'; }
    const v25 = this.constructor;
    try { new v25(-143547321); } catch (e) {}
    a24 - a24;
    this.g = -1517929768;
    try {
        this.g = -1517929768;
    } catch(e28) {
    }
    try {
        this.h = a24;
    } catch(e29) {
    }
}
try { F22.bind(-143547321); } catch (e) {}
new F22(-143547321);
new Float32Array(5);
const v36 = Uint8Array(ReferenceError);
function f37() {
    for (const v40 of Array()) {
        const v41 = v40 | 616;
        v41 !== v41;
    }
    return f37;
}
v36.name = v36;
const v44 = new Uint8ClampedArray();
class C45 {
}
new C45();
for (let v47 = 0; v47 < 25; v47++) {
    const v50 = new BigUint64Array(255);
    const v52 = v50.buffer.slice();
    v52.slice(v52, v47);
}
function F54(a56, a57, a58, a59) {
    if (!new.target) { throw 'must be called with new'; }
    ~a57;
    class C61 {
    }
    const v62 = new C61();
    return v62;
    function f63(a64, a65, a66, a67) {
        return a66;
    }
}
const v68 = new F54(Uint8ClampedArray, ReferenceError, Uint8ClampedArray, v36);
const v69 = v68.constructor;
const v70 = [2.2250738585072014e-308,6.427477933354486e+307,1000000000.0,0.08682825617912271,-1000000000.0,3.0,228665.3903849495,0.5660155973967917,0.8606405474237848,3.0108403245603076e+307];
const v71 = [1000000000.0,12.305595805765165,2.0862036260312724e+307,-5.0,0.3227826650028378,-Infinity,-6.013642736236817,-6.180619420937975e+307,-1000000.0];
const v72 = [881266.4750531102,900.0211844391163,-148.3543184123963,-878.1424195424157,8.23394403026903,-1000000.0,4.0,1.7976931348623157e+308,-6.700826123638565,Infinity];
function F73(a75) {
    if (!new.target) { throw 'must be called with new'; }
    const v76 = this.constructor;
    try { v76(v71); } catch (e) {}
    v72.a = v70;
}
const v78 = new F73(v71);
const t70 = v78.constructor;
new t70(v78);
try { new v69(v44, v36); } catch (e) {}
