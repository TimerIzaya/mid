class C3 {
    constructor(a5, a6) {
        let v7;
        try { v7 = a6(a5, a5, ..."b", "g8"); } catch (e) {}
        function f8() {
            return v7;
        }
    }
    UTC(a10, a11) {
        const v12 = super.f;
        try { v12(a10, a10, a10, v12); } catch (e) {}
        super.e = a11;
        ("g8")["codePointAt"]("codePointAt", v12, "codePointAt");
        return a11;
    }
}
const v16 = new C3("g8", C3);
new C3(v16, v16);
const v18 = new C3(v16, "b");
const v21 = new Float32Array(27);
const v25 = Reflect.preventExtensions(Reflect);
const v26 = [8.028650677682478,v21,v25];
const v27 = [v26,v26,v26,v26,v26,v26];
try { (8).reduce(v27); } catch (e) {}
new v25(8);
new Int8Array(1024);
const o33 = {
};
27 % !v16;
const v38 = [723200.4184824808,-1000.0,-523437.54204506474,-964793.6675249395];
for (let v39 = 0; v39 < 20; v39++) {
    let [,v40,...v41] = v38;
}
new Uint16Array(39806);
Math.log1p(27, Int8Array, v18);
