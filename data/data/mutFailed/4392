function f6(a7, a8, a9, a10) {
    const o24 = {
        "d": a10,
        "e": a7,
        get g() {
            let [] = a8;
            super["268435456"];
            "H" || "PI";
            Math.floor(-39468);
            0.12521702770505538 | -39468;
            !this;
            Math.sqrt(-39468);
            const v22 = -39468 || 0.12521702770505538;
            -39468 && 18984;
            return v22;
        },
    };
    return o24;
}
f6("g", "g", "e", "e");
f6("e", "PI", "e", "268435456");
f6("e", "e", "268435456", "e");
const v35 = new Date();
/a(?!bbb|bb)c+/gumsy;
const v37 = /7wu(?:foo)/gudmy;
v37.b = Date;
v37.b = v37;
/F/i;
new Int8Array(1024);
function f43() {
    return f43;
}
const v45 = new BigUint64Array();
try { v45.entries(); } catch (e) {}
v35 % "e";
const o50 = {
    "maxByteLength": 1073741824,
};
const v52 = new ArrayBuffer(82, o50);
new Float64Array(v52);
v45.constructor = f43;
function f55(a56, a57) {
    a57.then = f43;
    a57.then = f43;
    return a57;
}
new Promise(f55);
function F62() {
    if (!new.target) { throw 'must be called with new'; }
}
class C64 extends F62 {
}
function f65() {
    const o71 = {
        [1836424012](a68, a69, a70) {
        },
    };
}
