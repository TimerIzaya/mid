const v3 = [-18343,10,-9223372036854775808,7,-2,1266834198];
3872 >>> 3872;
new Date(16 | 16);
[65536,8,12,-2];
const v11 = [431667931];
class C12 {
    e;
    5 = -65536n;
    constructor(a14, a15, a16, a17) {
        v11[-2] %= a17;
        a17 && this;
    }
    1 = -65536n;
    [-4n] = v11;
    static b = v3;
}
const v22 = new C12(v11, -65536n, -65536n, -381137624n);
new C12(v3, -4n, -65536n, -65536n);
const v24 = new C12(v3, -4n, -4n, -4n);
function f25() {
    return v11;
}
class C26 extends C12 {
    o(a28, a29, a30) {
        try {
            v3.map(a29);
        } catch(e32) {
        }
        return v24;
    }
    constructor(a34, a35, a36, a37) {
        let v33 = this;
        super(v3, a36, a35, a35);
        v33 = a37;
        function F38(a40, a41, a42) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.b = a41;
            } catch(e43) {
            }
            try {
                this.g = -381137624n;
            } catch(e44) {
            }
        }
        new F38(-381137624n, -381137624n, a36);
        new F38(-65536n, a36, a36);
        new F38(a36, a36, a36);
    }
}
new C26(v22, -4n, -381137624n, C26);
Math.cosh(Math);
function f53() {
    let v55 = 1000000000000.0;
    v55--;
    const o60 = {
        "e": Uint16Array,
        __proto__: 3.4890473589784586e+307,
        "g": 12,
        o(a59) {
            return a59;
        },
        ...v55,
    };
    return Int32Array;
}
%PrepareFunctionForOptimization(f53);
const v61 = new C26(v24, -65536n, -65536n, v24);
new C26(C26, -4n, -381137624n, v61);
const v65 = new Uint8ClampedArray(995);
const v67 = new Int8Array(v65);
const v68 = v67.copyWithin;
try { v65.some(v68); } catch (e) {}
