function f3() {
    const o14 = {
        "e": -1781241988,
        8: -1781241988,
        "c": -1781241988,
        ..."g",
        ..."g",
        [1](a8, a9) {
            Object.defineProperty("n", "d", { writable: true, value: "n" });
            let v13;
            try { v13 = ("construct").concat(f3, Uint8ClampedArray, this); } catch (e) {}
            v13["n"] = Uint8ClampedArray;
        },
    };
    return o14;
}
const v15 = [4.0,-1000000000.0,-0.8359110591437862,396.3838934707244];
function f16() {
    const o20 = {
        "c": v15,
        valueOf(a18, a19) {
        },
    };
    try {
        f16();
    } catch(e22) {
    }
}
[0.16877261605680682,1000000.0,1.7976931348623157e+308,-3.0,8.905697849281971,-1000000.0,-6.363225643154423e+307,0.053031143781079315,-383.65252884276254];
[-795.3564155587662];
/WB5(?:ab)?/gvdiy;
class C29 {
}
const v30 = [-2051630605,509562611];
class C31 {
    0 = v30;
}
/m\xed\xa0\x80/us;
/a\Scc[((((.).).).)6[7aDh]]?/gums;
try {
    const v35 = new BigInt();
    const t41 = v35.constructor;
    new t41();
    class C38 {
    }
    let v39 = -532.4669449879644;
    const v40 = v39++;
    C38.fuck();
    for (let v42 = 0; v42 < 500; v42++) {
        f16(C38, v40, v40, v42);
    }
    BigInt(132.432626643787);
} catch(e46) {
    class C48 {
        constructor(a50) {
            let v51 = "atan2";
            try { a50[v51](); } catch (e) {}
            v51++;
        }
    }
    new C48(30492);
}
