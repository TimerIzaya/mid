const v2 = new Uint16Array(1844);
for (const v4 of "m") {
}
("undefined").localeCompare("undefined", "symbol", "undefined");
const v10 = new BigInt64Array(7);
const v13 = new Int16Array(133);
const v14 = [v13];
const v15 = [v14,7,v10];
const v16 = [7,v14,Int16Array,v13];
for (let [i28, i29] = (() => {
        try {
        } catch(e19) {
        }
        const v22 = new Worker(128);
        v22[0] = v22;
        let v24;
        try { v24 = v14["some"](..."some", ..."some", ..."some", ...BigInt64Array, ...v13); } catch (e) {}
        const v25 = [v24,v24,v24,0];
        [BigInt64Array,v25,v2,v25,v24];
        [BigInt64Array];
        return [0, 10];
    })();
    (() => {
        for (let [i35, i36] = (() => {
                const v33 = /Aabc|defmxyz{1,}?qMa{0,1}?/gvdis;
                v33.exec("function", -1073741824, v33, i28);
                return [0, -1073741824];
            })();
            (() => {
                const v37 = i35 < v10;
                const v38 = v10.byteOffset;
                function F39(a41, a42, a43) {
                    if (!new.target) { throw 'must be called with new'; }
                    try {
                        this.a = v16;
                    } catch(e44) {
                    }
                    const v45 = /EyL9/uim;
                    const v46 = [-1300791131,33477,0,5,-48254,14,4294967295,545422795];
                    function F47() {
                        if (!new.target) { throw 'must be called with new'; }
                        const v51 = [gc,v45];
                        const v52 = v46.push;
                        eval();
                        class C55 {
                        }
                        Array(4087, -2.220446049250313e-16);
                        Reflect.apply(v52, v45, v51);
                    }
                    new F47();
                }
                const v62 = new F39(F39, v15, v16);
                new F39(i36, v15, v15);
                function F64() {
                    if (!new.target) { throw 'must be called with new'; }
                    for (let v66 = 0; v66 < 500; v66++) {
                        this["p" + v66] = v66;
                    }
                }
                new F64(v38, v62, F39);
                new F39(i29, v14, v14);
                return v37;
            })();
            ) {
        }
        return i28 < i29;
    })();
    i28++) {
}
