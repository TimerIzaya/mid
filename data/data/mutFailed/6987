const v0 = [255,2147483648];
const v1 = [10,931035275,-128,1073741824,1,-4096,870567619,-2147483649,-1073741824,-4294967295];
const v2 = [4096,255,957178858];
function f3() {
    return v1;
}
f3.length = f3;
const v4 = [0,6,-42499,-7,-9007199254740990,-1035417939];
try { v4.with(v0, v4); } catch (e) {}
const v6 = [6,8,-4294967296];
try { v6.toString(); } catch (e) {}
let v8;
try { v8 = v6.fill(v2); } catch (e) {}
try { v8.toString(); } catch (e) {}
const v10 = [1033317147,-8];
function f11() {
    return v10;
}
f11.arguments = f11;
let v14 = 32301n % 32301n;
v14--;
function f17(a18, a19, a20) {
    a18 ^ a18;
    a19 << a19;
    const v23 = a20?.filter;
    try { new v23(32301n); } catch (e) {}
    a19--;
    const o34 = {
        [a18]: v1,
        "c": a18,
        2225774467: a18,
        "e": v4,
        [32301n]: v10,
        __proto__: v10,
        [v10](a27, a28, a29, a30) {
            for (let v32 = 0; v32 < 100; v32++) {
                f3();
            }
            return v6;
        },
        "f": v2,
    };
    try { o34.reduceRight(v23); } catch (e) {}
    return o34;
}
f17(-16n, 1712357308n, f17(1712357308n, -16n, v4));
f17(1712357308n, -16n, v0);
8077n ^ 8077n;
class C41 {
    [8077n];
}
try { C41.toString(); } catch (e) {}
let v43;
try { v43 = new C41(); } catch (e) {}
v43[8077];
new C41();
function f46(a47, a48) {
    a48 ^ a48;
    try { a47(a48, 1712357308n); } catch (e) {}
    arguments.toString = a47;
    return a47;
}
const v52 = f46(f46, 8077n);
let v53;
try { v53 = v52(v0, v0); } catch (e) {}
v53[1];
