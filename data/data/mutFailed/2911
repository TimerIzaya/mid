const v0 = [479.3491628176364,816816.2446007528,334995.4856523173,2.220446049250313e-16,2.220446049250313e-16,907.0767509807233,-557.8394869748877,0.16669309879224414];
[273523.97043913184,-449.88979507413296,4.0,251.64609825290313,-2.2250738585072014e-308,-2.0,3.827351602136808,-5.7831302441303585,1.014738513545383e+308];
[-1000.0,-3.0,-3.0,1e-15,1.275555877992357e+307,5.588619883522812e+307,0.1312154209747094];
new Int32Array(-1073741824);
new Uint32Array(0, Uint32Array, Uint32Array, null);
new Uint8Array(3165);
function F16() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.constructor(); } catch (e) {}
    try {
    } catch(e19) {
    }
    function F20() {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v22 = new F20();
    const v23 = v22?.__defineSetter__;
    try { v23(); } catch (e) {}
    function f25(a26, a27) {
        const o28 = {
        };
        return o28;
    }
    const v29 = f25(v23, f25);
    function f30() {
        return f30;
    }
    const v33 = new Float32Array(218, f30, v0);
    for (const v34 of v33) {
        v34 >>> v34;
        Object.defineProperty(v29, Float32Array, { configurable: true, enumerable: true, get: f25, set: f30 });
    }
}
new F16();
Array(4087);
const v41 = [3.0,-1.5434910396300392e+308];
const v42 = v41.filter();
const v45 = ("1000")["toUpperCase"]();
try { v42("toUpperCase", 5483n, v45, v41); } catch (e) {}
new F16();
new F16();
