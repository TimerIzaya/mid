function f0() {
    const o8 = {
        toString(a5) {
            this === this ? this : this;
            return this;
        },
        "d": 6.159170062430061,
        ..."-4096",
        9: "-4096",
        "h": 6.159170062430061,
        __proto__: "-4096",
        568: 6.159170062430061,
        "e": 6.159170062430061,
        "g": 6.159170062430061,
        "f": -1.0,
        "a": -1.0,
    };
    return o8;
}
f0();
f0();
const v11 = f0();
v11[4] = v11;
const v14 = new Int32Array(9);
220 !== 220;
const v18 = new Uint32Array(220);
1715 >>> 1715;
Uint32Array.BYTES_PER_ELEMENT;
new Uint32Array(1715);
class C24 {
    d;
    static 3;
    a = Uint32Array;
    static #a;
    #f;
    constructor(a26, a27, a28) {
        a28.prototype = a28;
        try {
            a28.#f ^= a26;
        } catch(e29) {
        }
        const o30 = {
        };
        try {
            o30.c = Int32Array;
        } catch(e31) {
        }
        try {
            const o32 = {
            };
            o32.e = o30;
            o32.c = Int32Array;
            o32.e = a28;
        } catch(e33) {
        }
        try {
            const o34 = {
            };
            o34.e = o34;
            o34.f = o34;
            o34.c = Int32Array;
            o34.e = a28;
            o34.f = v18;
        } catch(e35) {
        }
        try {
            const o36 = {
            };
            o36.h = o36;
            o36.c = a27;
            o36.c = Int32Array;
            o36.e = a28;
            o36.f = a27;
        } catch(e37) {
        }
    }
}
C24[3] = C24;
const v38 = new C24(v14, 220, Uint32Array);
const v39 = new C24(v38, 1715, v11);
const v40 = new C24(v39, 9, f0);
class C41 {
    constructor(a43) {
        const v44 = this?.constructor;
        try { new v44(this); } catch (e) {}
        for (let v46 = 0; v46 < 32; v46++) {
            v46 >> v46;
            v46 === v46;
            for (let v49 = 0; v49 < 50; v49++) {
                v49 / v49;
            }
            new Int8Array(520);
            for (let v54 = 0; v54 < 5; v54++) {
            }
            0 || Int8Array;
            Number.isNaN(Math.tanh());
            function f61() {
                return this;
            }
        }
    }
}
try { new C41(v40); } catch (e) {}
new C41();
new C41();
