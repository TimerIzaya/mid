const v0 = [];
[v0,true];
const v3 = [v0];
[v3,v0,v3];
/kyp/gvdy;
/a+?6(x)(x)(x)\38/vdimy;
/a+/udmy;
class C8 {
    static p(a10, a11, a12, a13) {
        v3.length;
        const v17 = Math.round();
        for (let v18 = 0; v18 < 10; v18++) {
            async function f19(a20, a21, a22) {
                await v17;
                return f19;
            }
            f19(Math, f19, v17);
            const o26 = {
            };
            gc(o26);
        }
        +-4294967296;
        Math.log1p(-4294967296);
        return Math.round(-48656);
    }
}
new C8();
new C8();
new C8();
function F37() {
    if (!new.target) { throw 'must be called with new'; }
}
class C39 {
}
const v40 = new C39();
ReferenceError.captureStackTrace(F37, v40);
