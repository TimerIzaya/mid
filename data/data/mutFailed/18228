/oabc+?(?:a+)?/gvmy;
/W/sy;
class C6 {
    2147483647 = undefined;
}
for (let v7 = 0; v7 < 25; v7++) {
    const v8 = [601759695];
    const v9 = v8.filter;
    try { v9(); } catch (e) {}
    const v11 = [1073741824,1073741823,1376142744,1073741825];
    function f12(a13, a14, a15, a16) {
        -a13;
        a14 >>> a14;
        const v19 = a13 >>> a13;
        v19 | v19;
        const v21 = a15[3];
        v21 + v21;
        ("find").codePointAt(v11);
        try { v11["find"](..."find", a16, ...v8); } catch (e) {}
        return a16;
    }
    for (let v26 = 0; v26 < 10; v26++) {
        f12(v26, v26, v11);
    }
}
/a\s[\ca]HN/gvdi;
-2n / -2n;
function F32(a34) {
    if (!new.target) { throw 'must be called with new'; }
    const v35 = this?.constructor;
    try { new v35("toString"); } catch (e) {}
    a34[5];
}
new F32("toString");
-4294967297n / -4294967297n;
-1n < -1n;
/qo\c_T(?:a+)+/gdimsy;
const o44 = {
};
const v47 = 5493 >>> 5493;
Math.atan2(v47, v47);
/foo(?<=bar)baz\p{Script=Greek}/gumsy;
/a\D(?:ab|cde)/gvmsy;
const v51 = [1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0];
const v52 = v51.groupToMap;
[10];
const o55 = {
};
function f56(a57, a58) {
    a58(a57, a57, a58, f56);
}
new Promise(f56);
try { v52(v51, v52, v51, v51, v52); } catch (e) {}
class C64 extends [o55,o55,o55,o55,o55] {
}
function f65(a66, a67, a68) {
}
