function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 128;
    } catch(e3) {
    }
    try {
        this.b = 128;
        const v4 = [-9007199254740992,-9,268435441,-1294677798];
        const v5 = [-54512,-2147483647,24944,7,268435439,4096,-6];
        class C6 {
        }
        const o8 = {
        };
        gc(o8);
        new C6();
        new C6(v4, v5);
    } catch(e13) {
    }
    try {
        this.g = 128;
    } catch(e14) {
    }
}
new F0();
new F0();
new F0();
new Int8Array(14);
new Uint16Array(2352);
new Reflect(530);
const v31 = new Int32Array();
for (let v32 = 0; v32 < 5; v32++) {
    function f33() {
        const v36 = new Float64Array();
        const v40 = new Float32Array(4096);
        const v42 = [v40,Uint32Array,[v36,Uint32Array,v40]];
        v42[v42] >>= 1000;
        RegExp.acos(v31);
    }
    f33();
    %OptimizeFunctionOnNextCall(f33);
}
