const v2 = new Int32Array(2430);
new BigUint64Array(218);
new Uint8Array(5);
const v9 = [v2];
const v10 = [Int32Array,v9,Int32Array,5,v2];
try { v10.sort(218); } catch (e) {}
[v10,v9];
9n + 9n;
const v19 = new Int32Array();
const v21 = new BigInt64Array();
const v22 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
const v23 = [-1.7976931348623157e+308];
try { v23.concat(Int32Array); } catch (e) {}
function f25() {
    return f25;
}
f25();
BigInt(132.432626643787);
function f30(a31, a32, a33, a34) {
    a33.g = a33;
    const o41 = {
        toString(a36, a37, a38) {
            try { this.toString(a37, -2147483648n, this); } catch (e) {}
            a33[a32] = a31;
            return 255n;
        },
    };
    return o41;
}
try { f30(v10, 9n, v10, 5); } catch (e) {}
const v43 = f30(v21, 129, v23);
const v44 = v43?.__defineGetter__;
try { new v44(9n, v10); } catch (e) {}
const v46 = f30(v19, 129, v22);
([Infinity,-686.9856326146617,0.47369378110968274,-7.24289104755818]).includes(...[-1000.0,-2.2250738585072014e-308,511.99933163650917,-386.8372768814137,Infinity]);
for (let [i53, i54] = (() => {
        /Aabc|defmxyz{1,}?qMa{0,1}?/gvdis;
        return [0, 10];
    })();
    i53 < i53;
    ) {
}
for (let v60 = 0; v60 < 5; v60++) {
    v60 + v60;
    const v62 = v46 % v43;
    v62 < v62;
    v22.b = v19;
}
