const v0 = [];
class C1 {
    [v0];
    static {
        for (const v3 of v0) {
            this[this] = v3;
            const t6 = this.c;
            delete t6?.f;
        }
        super.e /= v0;
    }
    2 = v0;
    h = v0;
    16;
    3;
}
const v6 = new C1();
new C1();
new C1();
[0.3028277493089938,1e-15,-620879.3928592706,3.0];
const v10 = [0.4205847100471568,0.8365002004117379,840889.1467452487,2.220446049250313e-16,-2.223728399368364e+307,27.412308405502472,-1e-15];
for (const v12 in [612713.6942626182,-544.5866073015707,-1.7976931348623157e+308,-1.0,3.1191780268122535,1000000000000.0,5.0,-8.16284229358689]) {
    const v14 = v10[v10];
}
Math.cosh(v10);
const v18 = -2147483649 && v10;
const v20 = (v18 >>> v10) * -2147483649;
!v10;
v18 | v20;
const v25 = new Uint32Array(1803);
new Float64Array(v6);
new BigInt64Array(4069);
new Map();
const v36 = 24560 ^ 24560;
const o42 = {
    "d": v25,
    "h": v36,
};
delete v0?.length;
function F45() {
    if (!new.target) { throw 'must be called with new'; }
    ([-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308]).reduce(Date());
    undefined[22];
    const v55 = Array(19793);
    for (const v56 of v55) {
    }
    const v57 = [v55,v55,v55,v55];
    const v59 = new BigUint64Array();
    const v60 = v59.constructor;
    try { v60(); } catch (e) {}
    ([[v57,v57,v57]]).toSpliced(v55);
    Uint16Array >= Uint16Array;
}
new F45();
new F45();
