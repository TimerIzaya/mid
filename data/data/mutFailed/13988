new Float32Array(9);
new Int8Array(3);
new Uint8Array(9);
class C9 extends Int8Array {
    f;
    #o(a11, a12) {
        let v16 = -2.807806256604513;
        const v17 = v16--;
        const v19 = 5 >> a12--;
        v17 && -14690;
        return v19;
    }
}
const v21 = new C9();
const v22 = new C9();
new Int8Array();
class C24 {
}
const v25 = new C24();
const v26 = [v25,v21,v22];
class C27 {
    constructor(a29, a30, a31) {
        function f32(a33, a34, a35) {
            v26.indexOf();
            try {
                f32(a35, a34, 252859902);
            } catch(e39) {
            }
            (this >> 252859902) - f32;
            return -C24;
        }
        f32();
    }
}
class C44 extends C27 {
}
new C44();
new v22(C24, C44, C24, C24);
