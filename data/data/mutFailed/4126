function f1(a2, a3) {
    const v6 = new Uint32Array(257);
    return v6;
}
Object.defineProperty(Date, "toString", { writable: true, enumerable: true, value: f1 });
const v7 = new Date();
const v11 = /(g\1\2(a(?:\1(b\1\2))\2)\1)/gudmy;
/iknifoo(?<!bar)baz*/dsy;
/A2QF/udmy;
function f14(a15, a16, a17) {
    const o32 = {
        ...v11,
        [Date]: a15,
        "f": Date,
        n(a19, a20, a21, a22) {
            var g = v7;
            v11[512] %= a21;
            super[16n] = a19;
            function F23(a25, a26) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.h = a16;
                } catch(e27) {
                }
                try {
                    this.b = 9n;
                } catch(e28) {
                }
            }
            new F23(16n, -2147483647n);
            new F23(a19, a19);
            new F23(a21, a22);
            return Date;
        },
    };
    return o32;
}
f14(16n, 16n, 9n);
f14(-2147483647n, -2147483647n, 16n);
f14(-2147483647n, 9n, 16n);
for (let v36 = 0; v36 < 5; v36++) {
    function f37() {
        const v39 = ("Vre").toLocaleUpperCase;
        let v40;
        try { v40 = new v39(); } catch (e) {}
        return v40;
    }
    f37();
    %OptimizeFunctionOnNextCall(f37);
}
