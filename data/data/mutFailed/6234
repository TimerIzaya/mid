const v8 = 64982 >>> b;
Math.acosh(v8);
Math.tan(b);
Math.asinh(16 >> 16);
Math.sign(v8);
Math.atan2(Float32Array, b);
const v15 = new Float32Array(3773);
new Float32Array(9);
const v22 = new Float64Array(Float64Array, Float64Array, Float64Array);
delete v15[4294967296];
const o26 = {
    "maxByteLength": 1024,
};
const v28 = new SharedArrayBuffer(1024, o26);
new Float32Array(v28);
function f31() {
    v22.length = 0;
    return 0;
}
new Int32Array(257);
function F34(a36, a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    a37 === a37;
    const v41 = new BigUint64Array();
    const v42 = /anVXYFzN(x)(x)(x)\3/gvdms;
    try { v41.reduceRight(v42); } catch (e) {}
    9n >> 9n;
    this.constructor;
}
function f47() {
    9 || Float64Array;
    try {
        f31();
    } catch(e50) {
    }
    class C51 {
    }
    const v52 = new C51();
    for (let v53 = 0; v53 < 5; v53++) {
        new F34(undefined, v52);
    }
}
f47();
f47();
const v62 = new f31();
let v63 = /(w)/gvdmy;
const v64 = /((ab))/vy;
for (let v65 = 0; v65 < 25; v65++) {
    v62["p" + v65] = v65;
}
v63 >>= v64;
