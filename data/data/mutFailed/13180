[-1.2516473985081347e+308,-4.317464625967663e+307,0.4954248809408466,-4.0];
[-3.0,0.8139528871116906,-2.4019056993501445e+307,-0.0,-1.7976931348623157e+308,412.6191509349169];
const v2 = [7.853665878106778,-322.27021225559315,-1000000.0,1e-15,1000000000.0,-1.3161247224348914e+308,0.0,Infinity];
class C6 {
    p(a8, a9, a10, a11) {
        a9[this];
        try {
            a10.length = 2;
        } catch(e14) {
        }
        return a9;
    }
    #d;
    static #a;
}
new C6();
new C6();
new v2();
try {
    C6.toString = C6;
} catch(e21) {
}
function f25() {
}
const v26 = [601759695];
const v27 = [-13,-47751,15,-12453,512];
function f29(a30, a31, a32, a33) {
    function f35() {
        return v26;
    }
    const v36 = f25();
    new Int8Array(a32, Int8Array);
    v36.buffer.slice(2147483648);
    %OptimizeFunctionOnNextCall(C6);
    let v43;
    try { v43 = v27["find"](..."find", a33, ...v26, ...v27, ...522675525n); } catch (e) {}
    v43 <= a32;
    return arguments;
}
for (let v45 = 0; v45 < 10; v45++) {
    f29(v45, v45, f25, 522675525n);
}
%OptimizeFunctionOnNextCall(f29);
const t43 = "splice";
t43();
