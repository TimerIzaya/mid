const v2 = new Int32Array(16);
const v5 = new Int8Array(10);
const v8 = new Uint32Array(1000);
class C9 {
    static #valueOf(a11, a12, a13, a14) {
        this[a11] ||= a14;
        super[a12] = this;
        const v15 = [-10518,-65536,853724848,-4294967295,9223372036854775807];
        [4294967296,-65536,257,-65537,29523,-30367,127,1928535750];
        [272514340,1009368210,-1,-7,-1238126923,-2,-61464];
        try {
            super.min(Int8Array);
        } catch(e19) {
        }
        return v15;
    }
    [Int8Array] = 16;
    static h;
}
let v20 = new C9();
const v21 = new C9();
const v22 = new C9();
function f23(a24, a25) {
    const o37 = {
        "d": v2,
        "b": Int8Array,
        2724: 16,
        "e": v5,
        4: Int32Array,
        "h": a24,
        "g": a24,
        set f(a27) {
            v20++;
            const o29 = {
            };
            try {
                o29.b = v21;
            } catch(e30) {
            }
            try {
                const o31 = {
                };
                o31.b = v21;
                o31.f = Uint32Array;
            } catch(e32) {
            }
            try {
                const o33 = {
                };
                o33.b = v21;
                o33.f = Uint32Array;
                o33.h = a27;
            } catch(e34) {
            }
            try {
                const o35 = {
                };
                o35.b = v21;
                o35.f = Uint32Array;
                o35.d = a25;
            } catch(e36) {
            }
        },
    };
    return o37;
}
const v38 = f23(10, v22);
f23(v38, f23(v38, v8));
const v44 = new Date();
Set.valueOf = f23;
const v47 = new Set();
v47.add(v44);
let [v49,,...v50] = v47;
v49.setUTCFullYear(v50, Set, -256);
const v52 = new Uint8ClampedArray(255);
function f54() {
    class C55 {
    }
    return C55;
}
Uint32Array.toString = f54;
v52[3] = Uint32Array;
