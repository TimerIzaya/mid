const v0 = [-1000000000.0,-2.2250738585072014e-308,2.0,882967.4836901044,1000000.0,2.167514947496536e+307,0.727665709084453,5.0,1.0];
[0.17023821654032878,0.7802200100165307,1000000000.0,0.7387157956973397,Infinity,0.9665398310636711,-1000000000000.0];
const v2 = [5.603222286607803e+307,3.0,288.86068238543317,1000.0,-491.35974953641147,4.0,-1000.0,-195946.07950815733,-1000000.0,-321331.8800602782];
[v2,v2];
const v4 = [v0,v0];
const v5 = [v4,v4,v0];
const v11 = new Uint8Array(2682);
async function f14(a15, a16) {
    return f14;
}
const v18 = ("minor").valueOf("minor", "minor", "minor", "minor");
v18.split(v18);
const v20 = new Uint32Array(0);
new BigUint64Array(4096);
Int16Array[0] = 4096;
v11.constructor;
function f26() {
    return f26;
}
const t19 = f14.constructor;
t19().toPrecision(f26);
const v30 = new Int16Array(Int16Array, Int16Array, Int16Array);
function f31() {
    return f31;
}
class C32 extends f31 {
    constructor(a34, a35, a36, a37) {
        super();
        function f38() {
            const o82 = {
                "f": a37,
                __proto__: v11,
                16: a36,
                "a": 0,
                2716103663: v20,
                [v5]() {
                },
                ...v4,
                m(a41) {
                    a41.f = a41;
                    try { a41.next(f38); } catch (e) {}
                    a41.c = a41;
                    a41.h = a41;
                    const o43 = {
                    };
                    o43.h = o43;
                    o43.h = o43;
                    function f44(a45, a46, a47) {
                        return a45;
                    }
                    f44.caller = f44;
                    try {
                        o43.e = 2682;
                    } catch(e48) {
                        const v52 = new Uint8ClampedArray(512);
                        new Uint8ClampedArray(798, ...v52, o43);
                    }
                    try {
                        const o54 = {
                        };
                        o54.h = o54;
                    } catch(e55) {
                    }
                    const v57 = Math?.expm1;
                    try { new v57(f44); } catch (e) {}
                    try { Math.expm1(2682); } catch (e) {}
                    let v60 = -9007199254740991;
                    v60++;
                    const v62 = v60 >> v60;
                    v62 - v62;
                    class C64 {
                        o(a66, a67, a68, a69) {
                        }
                    }
                    const v70 = C64.name;
                    try { v70.codePointAt(Math); } catch (e) {}
                    const v74 = new Int8Array(3938);
                    let v75 = 3;
                    let v76 = 0;
                    v76++;
                    for (let i = 0; i < 5; i++) {
                        [...v75] = v74;
                        v76++;
                    }
                    const o79 = {
                    };
                    try {
                        const o80 = {
                        };
                    } catch(e81) {
                    }
                },
                "g": a35,
                ...v30,
            };
            return C32;
        }
        function f83() {
            return Uint8Array;
        }
        for (let v87 = 0; v87 < 5; v87++) {
            f38();
            new Int16Array(6);
            new Uint8Array(64);
            class C96 {
                static #n(a98, a99, a100, a101) {
                    this[257] *= -5;
                }
            }
            new BigUint64Array(2388);
            %OptimizeFunctionOnNextCall(f38);
        }
    }
}
new C32();
