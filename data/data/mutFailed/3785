let v0 = [0.34702591728542886,-493167.5375540947,-5.587452704334313e+306,835.5444314751057,0.0];
const v1 = [3.3885111901132436,NaN];
const v2 = [-Infinity,-2.2250738585072014e-308,0.34221963600286287,-Infinity,-204396.5982758078];
class C3 {
    static #a;
    static #b = v1;
    set f(a5) {
        v0 = v2;
    }
    #c = v1;
    #p(a7, a8) {
        const o9 = {
        };
        const v13 = 16 / C3--;
        Math.acosh(C3);
        const v16 = new Proxy(this, o9);
        const v17 = this[3717];
        try { v16.valueOf(v13, v17); } catch (e) {}
        [-1000000000000.0,-3.3923202968148614];
        [-839.43966747447,-5.838292912696621,-877.3707430647735,1.7976931348623157e+308,681.1545935166455,0.7921781785120261,1.7976931348623157e+308,0.31664828351115315,-7.839755996447457];
        [1.6441671176357014e+307,2.2250738585072014e-308,0.9630537170006334];
        return v16;
    }
    static #o(a23) {
        new a23(1860);
        const v29 = new Int32Array(0);
        const v32 = new Uint8ClampedArray(257);
        try { v32.includes(Uint8Array); } catch (e) {}
        const v34 = super.d;
        try {
            super.asUintN(v34, Uint8Array, v34, 0);
        } catch(e36) {
        }
        return v29;
    }
}
let v37;
try { v37 = C3(); } catch (e) {}
const v38 = new C3();
const v39 = new C3();
const v40 = new v37();
const v41 = v40?.constructor;
try { new v41(); } catch (e) {}
try { new v37(v39, v38); } catch (e) {}
v38[2] >>>= v37;
let v45;
try { v45 = v2.join(v41); } catch (e) {}
try {
    new C3();
} catch(e47) {
}
v45 >= -1000000000000.0;
7.542065617183805 === -1000000000000.0;
[-1e-15,-5.0,0.0,9.71319250099221,-0.0,266.42000206078933,-1000.0,-1000000000.0,0.0,-2.220446049250313e-16];
[259515.41241946537,-1000000000.0,2.0,-1000.0,-2.0,0.4710450126557143];
[1e-15,-9.999282459978928e+307,0.2610183677152089,-1000000000000.0];
Uint32Array[2] = 1;
const v57 = new Uint32Array(v41);
try { v57.toReversed(); } catch (e) {}
