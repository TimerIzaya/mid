const v3 = [-222958957,2147483647,-9007199254740991,3,35830,-2124080237];
function F7(a9) {
    if (!new.target) { throw 'must be called with new'; }
    const v10 = a9 ^ a9;
    const v11 = F7?.constructor;
    try { new v11(3n, 3n, v10, F7); } catch (e) {}
}
new F7(0n);
new F7(349865170n);
[-16,-23621891,268435456,1706174893,-76994833,512,49439,1,-6,1454403283];
const v16 = [452259971,9007199254740991,-600996588,9,127,129];
class C20 {
    b = 0n;
    f = C20;
    #p(a22, a23) {
        v16[2210268258] = a23;
        a23 + a23;
        try { (-2147483647).reverse(); } catch (e) {}
        for (let v26 = 0; v26 < 32; v26++) {
            v3["p" + v26] = v26;
        }
        return a22;
    }
}
const t24 = 3n;
new t24(-2n);
new C20();
new C20();
function f32() {
    return f32;
}
function f33() {
    Object.defineProperty(arguments, 13, { enumerable: true, set: 0n });
    return arguments;
}
f33();
