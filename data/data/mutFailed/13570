function f11(a12, a13, a14, a15) {
    const v16 = [4294967297,-1648241970,9,3,-2,0,-4294967296,10];
    const v17 = /QK/gvdimy;
    with (v16) {
        v17.__proto__ = length;
    }
    const v20 = new Int8Array();
    for (const v21 in v20) {
    }
    function F22(a24) {
        if (!new.target) { throw 'must be called with new'; }
        this.h = a24;
    }
    new F22();
}
f11();
new Int8Array(36);
function F29(a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
}
const v33 = new F29(F29, F29);
~v33;
class C35 {
    static c;
}
new C35();
new Uint16Array(512);
const v41 = [9007199254740992,-12,-65536,21712,-1,-65536,-152029754,536,-4,1193126662];
const o42 = {
    [v41]: undefined,
};
new Uint32Array(26);
class C48 {
}
const v49 = new C48();
new C48();
function f53(a54, a55) {
    return f53;
}
const v56 = [1073741824,1073741823,1376142744,1073741825];
v56.forEach(v49);
for (let i61 = 0, i62 = 10;
    (() => {
        const v63 = i61 < i62;
        function f66(a67, a68) {
            const o70 = {
                get c() {
                    let v69 = this;
                    v69 += v69;
                    return a68;
                },
                "b": -65537n,
                __proto__: a67,
                ...a67,
                "a": a68,
                6: 4294967297n,
                "c": 4294967297n,
            };
            return o70;
        }
        return v63;
    })();
    (() => {
        i61++;
        try { v56.includes(undefined, -4934n); } catch (e) {}
        const v79 = (a80, a81, a82) => {
            try { ("function")["toUpperCase"](); } catch (e) {}
            "-268435456" ^ a80;
            return a80;
        };
        i62--;
    })()) {
    new C48();
}
