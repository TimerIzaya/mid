new BigUint64Array(1000);
new Int32Array(128);
new Float32Array(Int32Array);
/S\P{Decimal_Number}/gvdms;
const v16 = /ROlL/gudimy;
/3a$JP(a)\1/gus;
new BigInt64Array(1000);
const o34 = {
    m(a33) {
        return a33;
    },
    __proto__: 3.0,
};
const v36 = new Uint8ClampedArray(16);
const v39 = new Int16Array(0.3014578882514548);
for (const v40 in v36) {
    const v41 = delete v39?.buffer;
    new Date(Date);
    const v45 = [-6.8035006781971e+307,1000000.0,1000.0,-2.715046407601891];
    class C47 extends v41 {
    }
    const v48 = new C47();
    v48.concat(v45);
    new Int16Array(7);
    new Float32Array(BigUint64Array);
    new Uint8ClampedArray(2801);
    const v58 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
    [601759695];
    [1073741824,1073741823,1376142744,1073741825];
    function f64(a65, a66, a67, a68) {
        function f69() {
            const v72 = v58.length;
            try {
                o34.forEach(a66);
            } catch(e74) {
            }
            const o78 = {
                toString(a76, a77) {
                },
            };
            const o96 = {
                [522675525n](a80, a81) {
                },
                valueOf(a83, a84) {
                },
                [v72](a86) {
                },
                [-128n](a88, a89, a90, a91) {
                },
                set b(a93) {
                },
                m(a95) {
                },
            };
        }
    }
    for (let v97 = 0; v97 < 5; v97++) {
    }
}
[0.9388990264144315,-1e-15,-1.0,841561.2554243801];
class C99 {
    n(a101, a102) {
    }
    static m(a104) {
        const o105 = {
        };
    }
    static [C99] = v16;
}
try {
} catch(e106) {
}
function F107() {
    if (!new.target) { throw 'must be called with new'; }
}
function f109(a110) {
    try {
    } catch(e111) {
    }
}
const o113 = {
    get a() {
    },
};
class C114 {
}
function F115() {
    if (!new.target) { throw 'must be called with new'; }
}
class C117 {
}
class C118 {
    constructor(a120, a121, a122) {
        function f123(a124, a125, a126) {
            try {
            } catch(e127) {
            }
        }
    }
}
const o128 = {
};
try {
    const t104 = 3.0;
    const v131 = new t104(12);
    for (const v132 in v131) {
    }
} catch(e133) {
}
for (let v134 = 0; v134 < 5; v134++) {
    function f135() {
        return f135;
        function f136() {
            const o139 = {
            };
            return v36;
        }
        f135();
        for (let v141 = 0; v141 < 5; v141++) {
        }
        try {
            function f142(a143, a144) {
                f109(o34);
            }
        } catch(e146) {
            class C147 {
            }
            try {
            } catch(e148) {
            }
        }
        for (let v149 = 0; v149 < 5; v149++) {
            function f150() {
            }
        }
        function F151() {
            if (!new.target) { throw 'must be called with new'; }
            function f153(a154) {
            }
        }
    }
}
