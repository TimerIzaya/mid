function f0() {
    const o6 = {
        ...-256,
        get e() {
            const v5 = new f0();
            return v5;
        },
        "d": -256,
        ...-256,
        "e": -256,
        "c": 0.4833867783104545,
        "a": 16,
        "f": -256,
        [0.4833867783104545]: 16,
        ...0.4833867783104545,
        "h": 16,
        "g": f0,
        [-1]: f0,
        __proto__: 16,
        [0.4833867783104545]: 16,
        "d": -256,
        ...0.4833867783104545,
        "g": 16,
        [16]: 0.4833867783104545,
    };
    return o6;
}
f0();
f0();
f0();
/[a+b|c(x)(x)(x)\1*]/guisy;
/l2/gdiy;
/Y[\11]/gdm;
new Date();
[5.0,-2.2250738585072014e-308,1.0,2.2250738585072014e-308,-Infinity,-1000.0];
[-332201.49761514727,-1.041199792777631e+308,0.11282163098460884,-6.342255168503916,3.0,1000000000.0];
[0.5389580050398903,0.04382093558298772,7.540053928383269,67.72373171621325,1.7716734987282639,0.3217713547083465,1000000.0,-1000000000000.0,-4.696772403812802e+307,-0.8608234151292891];
f0();
%PrepareFunctionForOptimization(f0);
f0();
f0();
%OptimizeMaglevOnNextCall(f0);
f0();
for (let v22 = 0; v22 < 25; v22++) {
    const v23 = [601759695];
    const v24 = [1073741824,1073741823,1376142744,1073741825];
    function f26(a27, a28, a29, a30) {
        const v33 = new Uint8ClampedArray();
        Math.acosh(v33 & -2);
        let v38;
        try { v38 = v24["find"](..."find", a30, ...v23, ...v24, ...522675525n); } catch (e) {}
        return v38;
    }
    for (let v39 = 0; v39 < 5; v39++) {
        f26();
    }
}
