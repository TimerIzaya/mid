const v1 = [6,-1340283293,-11812,-1073741824,-1073741824];
try {
    v1.length = -2147483648;
} catch(e3) {
}
function f5(a6, a7, a8, a9) {
    ("find").substr(a7);
    return f5;
}
const v12 = f5();
%OptimizeFunctionOnNextCall(f5);
new Uint32Array(53);
-10;
Uint16Array.d = Uint16Array;
const v17 = new Uint16Array(10);
try { v17.filter(v1); } catch (e) {}
const v21 = new Uint8Array(2677);
const v22 = [-1.7976931348623157e+308,1000.0,-1000000000000.0,0.4342639938215549,982.4445832505555];
[-0.19241303257928877,0.0,2.5885042906000337e+307,0.25698909551435134,-1.4060445083410866e+308];
[NaN,-1.7976931348623157e+308,0.24107783051624765,1000.0,NaN,-1.2156074490967419e+308,-Infinity,1000.0,-1000000000.0,434.3437872973393];
for (let v25 = 0; v25 < 10; v25++) {
    const v28 = /(?:a*)+q(?<a>.)/guds;
    v28.constructor = v28.POSITIVE_INFINITY;
    for (let [i36, i37] = (() => {
            0 & 0;
            eval(Uint8Array, -2147483648);
            10 === 10;
            return [0, 10];
        })();
        (() => {
            const v38 = i36 < v25;
            v38 && v38;
            return v38;
        })();
        i36 - 53, i37--) {
        for (let v46 = 0; v46 < 25; v46++) {
            v46 >= v46;
            v28.constructor.$4;
        }
    }
}
function f51() {
    return f51;
}
f51.constructor = v12;
class C52 {
    constructor(a54, a55, a56) {
        this.byteLength = a54;
        class C57 {
            constructor(a59) {
                const v60 = this?.constructor;
                try { new v60("string"); } catch (e) {}
                const v63 = this >> -1073741824;
                v63 - v63;
                for (let v65 = 0; v65 < 32; v65++) {
                    for (let v67 = 0; v67 < 5; v67++) {
                    }
                }
            }
        }
        const v68 = new C57();
        const v69 = v68?.__lookupSetter__;
        try { new v69(C57); } catch (e) {}
        this.byteLength;
        function f72(a73, a74, a75, a76) {
            for (let [i80, i81] = (() => {
                    10 - 10;
                    return [0, 10];
                })();
                (() => {
                    const v82 = i80 < i81;
                    class C83 {
                    }
                    C83.name;
                    const v85 = new C83();
                    try { v85.constructor(); } catch (e) {}
                    class C87 {
                        static #e;
                        static {
                            try { new this(); } catch (e) {}
                            try {
                                v85.#e = this;
                            } catch(e90) {
                            }
                        }
                    }
                    try { new C87(); } catch (e) {}
                    return v82;
                })();
                i81--) {
                -2147483648 >>> i80;
                ~i81;
                i81 & i81;
            }
            return a74;
        }
        for (let v100 = 0; v100 < 5; v100++) {
            f72();
        }
        const t99 = f51.constructor;
        const v103 = t99("string", "string", v21);
        try { v103.call(v103); } catch (e) {}
    }
}
const v105 = new C52();
v105.c = v105;
[];
const t106 = [v22];
const v108 = delete t106[0];
v108 && v108;
for (let v110 = 0; v110 < 25; v110++) {
}
