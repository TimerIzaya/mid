const v1 = [false,false,false,false];
const v2 = [v1,v1,false];
const v3 = [false,v1,v1,v2,v2];
function f4(a5, a6) {
    const o23 = {
        "h": v2,
        [a6]: false,
        [v2]: v2,
        "d": false,
        ...v3,
        "c": a5,
        set e(a8) {
            v3.length;
        },
        7: v1,
        set f(a14) {
            class C15 {
                static 2 = false;
                static [v1] = a6;
            }
            new C15();
            new C15();
            const v18 = new C15();
            let v19;
            try { v19 = v2.unshift(v18); } catch (e) {}
            super.h >>= v19;
            [641057.9061991475,1000.0,-761587.2576369089,679020.4438558854,-1000.0,-1000000000.0];
            [-963.3064569565233,615.0876928637142,142.85326440988342,-1e-15,0.4344664475728238];
            [593830.6409122956];
        },
    };
    return o23;
}
const v24 = f4(v2, v3);
const v25 = f4(v1, f4);
const v26 = f4(v24, false);
function F27(a29, a30, a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a30;
    } catch(e33) {
    }
    try {
        this.e = a32;
    } catch(e34) {
    }
    new F27(v2, f4, v26, a29);
}
new F27(v1, v1, v26, v3);
new F27(v2, v1, v25, v2);
new F27(v2, v1, v26, v2);
class C49 extends BigInt64Array {
}
