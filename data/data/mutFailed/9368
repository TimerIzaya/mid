const v3 = -4294967296n * -4294967296n;
function F5(a7, a8) {
    if (!new.target) { throw 'must be called with new'; }
    a8--;
}
new F5(35994, v3);
let v11 = "symbol";
class C12 {
    constructor(a14, a15) {
        for (let i = 0; i < 10; i++) {
            this[this];
        }
    }
    #h;
    static #d = 20545;
    m(a18) {
        const v19 = /xyz{0,1}ja.a(?=b)/ui;
        class C20 {
        }
        const v21 = new C20();
        const v25 = new Set();
        function F26(a28, a29) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = a28;
            } catch(e30) {
                for (let [v31,v32] of a28) {
                    new Array(2);
                    new Int8Array(253);
                    new Uint32Array(16);
                    new Int16Array(0);
                    try {
                        v25.values();
                    } catch(e44) {
                    }
                }
            }
            try {
                this.h = v25;
            } catch(e45) {
            }
            var h = v19;
            try {
                a29.e = v21;
            } catch(e46) {
            }
            try {
                const v47 = v25[this];
                try {
                    new F26(v47, -268435456n);
                } catch(e50) {
                }
                this.b = Set;
            } catch(e51) {
            }
        }
        v11 = this;
        this.g;
        return 45525;
    }
    static c;
    #b;
    static [v11] = 20545;
}
new C12();
const v55 = new C12();
new C12();
const v57 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
function f59() {
    const v61 = ("1073741824").constructor;
    return v61(f59, 35994, v61, "1073741824", v61);
}
const v63 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v64 = [601759695];
function f66(a67, a68, a69, a70) {
    function f71() {
        return f71;
    }
    class C74 {
        static #g = "-4294967295";
        static 65536 = 0.9716672399743447;
    }
    const v75 = new C74();
    const v76 = new C74();
    const v78 = new f59(v57, -1.6687404191617307e+308, v75);
    new f59(v76, 0.9716672399743447, v78);
    function f80() {
        try {
            v57.forEach(a68);
        } catch(e84) {
            e84.f = e84;
        }
        const v85 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o96 = {
            toString(a87, a88) {
                const v89 = a70 && a68;
                -9223372036854775808 & -9223372036854775808;
                new Int16Array(16);
                return v89 <= v85;
            },
        };
        let v97 = -268435456;
        v97++;
        const o117 = {
            "c": -4294967297n,
            [522675525n](a100, a101) {
            },
            "c": v64,
            valueOf(a103, a104) {
                return this;
            },
            [-4294967297n](a106, a107, a108, a109) {
            },
            "maxByteLength": -4294967295,
            "arguments": v63,
            ..."Vre",
            valueOf(a111, a112) {
                return this;
            },
            4: "Vre",
            "type": "Vre",
            toString(a114, a115, a116) {
                return v63;
            },
            5: -4294967295,
            6: v97,
        };
        return a67;
    }
    f80();
    %OptimizeFunctionOnNextCall(f80);
    return v64;
}
for (let v119 = 0; v119 < 5; v119++) {
    f66();
}
class C121 {
    static #b = -4294967297n;
    constructor(a123, a124) {
    }
    static get g() {
        const v129 = super.f;
        try {
            v129.#b = v129;
        } catch(e130) {
        }
        return v55;
    }
}
const t149 = -4294967296n;
new t149(C12, v11);
new C121(C121, 45525);
new C121(v55, v55);
function F137(a139, a140) {
    if (!new.target) { throw 'must be called with new'; }
    a139 % a139;
    a140 >>> a140;
    const v143 = this.constructor;
    try { new v143(0.8735699512350641); } catch (e) {}
    this.c = a139;
    this.g = a140;
}
new F137(-3.413527541634011e+307, 0.941857606566444);
const v146 = new F137(F137, 0.941857606566444);
new F137(0.941857606566444, 0.941857606566444, 0.941857606566444, v146, v146);
class C148 {
}
const v151 = Math.log1p(-4.600007534268795);
v151 + v151;
