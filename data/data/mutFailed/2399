function f0() {
    -65535 >>> -65535;
    const o24 = {
        n(a6, a7) {
            a6.b = this;
            try { a6(a7); } catch (e) {}
            try {
                super.m("h", a6);
            } catch(e10) {
            }
            a6?.b;
            new BigInt64Array(16);
            new Uint32Array(3);
            165 / 165;
            const v21 = new Error(165);
            v21.g = v21;
            const v22 = v21?.keys;
            try { new v22(); } catch (e) {}
            return v21;
        },
    };
    return o24;
}
const v25 = f0();
const v26 = f0();
function f27() {
    return f0;
}
function f28(a29) {
    class C30 {
        constructor(a32) {
            let v33 = "atan2";
            try { a32[v33](); } catch (e) {}
            v33++;
        }
    }
}
Object.defineProperty(v26, "length", { enumerable: true, get: f27, set: f28 });
const v36 = f0();
function f37(a38) {
    let v39;
    try { v39 = a38.n(f0, v25); } catch (e) {}
    v39.g = v39;
    v39.g = v39;
    const o45 = {
        ...v26,
        ...v36,
        "POSITIVE_INFINITY": v26,
        [v26]: a38,
        9: a38,
        __proto__: v26,
        [a38](a41, a42) {
            for (let v43 = 0; v43 < 100; v43++) {
                f0();
            }
            return this;
        },
        "a": a38,
        "b": v25,
    };
    return o45;
}
f37.valueOf = f0;
f37(v25);
const v47 = f37(v26);
v47.length = f27;
v47.length;
f37(v26);
try { ("U").strike(); } catch (e) {}
try { ("h").split(v25, f37); } catch (e) {}
try { ("h").strike(); } catch (e) {}
[5,1495828238,10000,2147483647,-256,-25653,9359];
([64510,7,268435456,-1925411952,-2147483649,-17458,-4724])[2];
[-9007199254740990,-268435456,536870888,23171,65537];
1392 - 1392;
1392 - 1392;
const v64 = new Int8Array(1392, v26);
try { new Symbol(); } catch (e) {}
const o67 = {
    "get": Symbol,
};
const v68 = o67?.get;
v68.hasInstance = v68;
try { new v68(); } catch (e) {}
const v71 = new Proxy(v64, o67);
v71[Symbol.toPrimitive] = f0;
Symbol.for(v71[795].description);
