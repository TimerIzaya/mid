function F0() {
    if (!new.target) { throw 'must be called with new'; }
    class C2 {
    }
    for (let [i6, i7] = (() => {
            10 - 10;
            return [0, 10];
        })();
        (() => {
            i6++;
            const v9 = i6 < i7;
            v9 || v9;
            return v9;
        })();
        (() => {
            const v13 = [601759695];
            const v14 = [1073741824,1073741823,1376142744,1073741825];
            const v15 = v14[1];
            function f17(a18, a19, a20, a21) {
                a21 - a21;
                function f23() {
                    return a18;
                }
                function f24(a25, a26) {
                    return i6;
                }
                try { f24(f23, C2); } catch (e) {}
                const v28 = f24(v14, C2);
                v28 | v28;
                try { v14["find"](..."find", a21, ...v13, ...v14, ...522675525n); } catch (e) {}
                return v15;
            }
            for (let v32 = 0; v32 < 10; v32++) {
                f17(v32, f17, i6, v32);
            }
            const v34 = i6++;
            v34 % v34;
        })()) {
    }
    try {
        this.a = 1073741825;
    } catch(e39) {
    }
    try {
        this.f = 1073741825;
    } catch(e40) {
    }
}
new F0();
const v42 = new F0();
const v43 = new F0();
class C44 {
    42;
    get h() {
        for (let v46 = 0; v46 < 91; v46++) {
            try { v43["m"](F0, this, this, "m"); } catch (e) {}
        }
        let v49;
        try { v49 = v43(v42, this, v42, this, this); } catch (e) {}
        return v49;
    }
    static 2365 = v42;
    c = v43;
}
const v50 = new C44();
v50[42];
new C44();
const v53 = new C44();
64n === 64n;
function f62() {
    const v64 = new Int8Array();
    const v65 = v64.buffer;
    let v66 = 2147483648;
    v66--;
    const v69 = v65.slice(v66)?.constructor;
    try { new v69(v65); } catch (e) {}
    return -45095n;
}
class C71 {
    static #m(a73, a74, a75) {
    }
    constructor(a77, a78, a79, a80) {
        const v81 = this?.constructor;
        try { new v81(-7.510835271782534, -7.510835271782534, f62, a80); } catch (e) {}
        a77++;
        a80--;
        --a80;
        try {
            this.#m();
        } catch(e87) {
            e87.message = e87;
        }
    }
}
const o88 = {
};
const v90 = ([]).push();
v90 - v90;
const v94 = [0.3083488057663979,0.3083488057663979,0.3083488057663979];
class C95 {
    constructor(a97, a98) {
        let v99 = /W(jy2)/udy;
        const v100 = /(u4(?:a?)*)/gudimsy;
        const v102 = a98(v100, C95);
        const v104 = Uint32Array(4294967296, a97, a98);
        function f105(a106, a107, a108, a109) {
            const o113 = {
                ...v102,
                n(a111, a112) {
                    v104[a106] = v104;
                    return 4294967296;
                },
            };
            return o113;
        }
        for (let v114 = 0; v114 < 5; v114++) {
            f105(Uint8Array);
        }
        v99 = v100;
        for (let v116 = 0; v116 < 5; v116++) {
            v94["p" + v116] = v116;
        }
    }
}
new C71(9007199254740991n, 64n, 22453n, -45095n);
const v122 = new BigUint64Array(10);
v122["filter"](v53)[3];
