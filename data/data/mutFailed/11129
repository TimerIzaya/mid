class C3 {
    constructor(a5, a6) {
        a6.length = a6;
        a5 == a5;
        -536870889;
        try {
            a6.toString = a5;
        } catch(e12) {
            try { e12.toString(); } catch (e) {}
            e12.e = e12;
        }
    }
    [65536];
    static g;
}
try { C3.call(65536); } catch (e) {}
const v15 = new C3("split", C3);
const v16 = new C3(v15, "split");
const v17 = new C3(v16, "split");
v17[65536];
v17[65536];
~2;
new Uint8ClampedArray(2);
512 ^ 512;
Int32Array.BYTES_PER_ELEMENT = Int32Array;
new Int32Array(512);
BigUint64Array.e = BigUint64Array;
new BigUint64Array(119);
Float32Array.name = Float32Array;
const v33 = new Float32Array(14);
let v34;
try { v34 = v33.entries(); } catch (e) {}
try { v34.next(); } catch (e) {}
Uint8ClampedArray.length = Uint8ClampedArray;
Uint8ClampedArray.b = Uint8ClampedArray;
const v37 = new Uint8ClampedArray(v33);
v37[5] = v37;
