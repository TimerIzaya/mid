function f0() {
}
const v3 = new Uint8ClampedArray(3599);
7 + 7;
7 >>> 7;
const v8 = new Uint8Array(7);
v8[6] = v8;
255 / 255;
const v12 = new Uint8Array(255);
v12[119] = v12;
function f13() {
    return v8;
}
let v14;
try { v14 = f13(); } catch (e) {}
v14[4] = v14;
const v17 = new Uint8ClampedArray(3394);
v17.g = v17;
Int32Array.g = Int32Array;
Int32Array.prototype = Int32Array;
new Int32Array(0);
let v21 = 0;
v21--;
let v24;
try { v24 = new Uint8ClampedArray(v3, Uint8ClampedArray, 255); } catch (e) {}
try { v24.some(255); } catch (e) {}
new Uint8ClampedArray(v21);
try { ("15036").matchAll(0); } catch (e) {}
function f30(a31) {
    const o32 = {
        ..."toStringTag",
    };
    return o32;
}
class C33 extends f30 {
    ["15036"];
}
try { new C33(); } catch (e) {}
C33.c = C33;
const v35 = new C33();
v35[9] = v35;
v35[6];
for (const v37 in v35) {
}
