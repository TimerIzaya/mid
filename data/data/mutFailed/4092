const v0 = [65537,-65537,-1024,-2147483649,65536];
const v1 = [1203027929,-11,-9007199254740992,-2147483647,-65537,-4294967296,-2004181265,111228227];
const v2 = [-2984,-2147483648,1212853383,512,2147483648,-9007199254740992,4294967295];
class C3 {
    constructor(a5) {
        const v6 = a5[192];
        try {
            v2.d = v6;
        } catch(e7) {
        }
    }
    static get d() {
        return Reflect.construct(arguments, [v1,Reflect,arguments,v0,v2], arguments);
    }
}
const v13 = new C3(v1);
const v14 = new C3(v0);
const v15 = new C3(v14);
class C16 {
    a;
    constructor(a18, a19, a20) {
        v0[a19] = a20;
        const v21 = [a20];
        [C3,v1,v14,this];
        [v1,a20,v21];
    }
    f;
    1270509923 = v15;
    static f = C3;
    d = v15;
    [C3];
}
const v24 = new C16(C16, v15, C16);
new C16(C16, v24, v13);
new C16(C16, v0, C3);
for (let i30 = v0, i31 = 10; i30 < i31; i30++, C3--) {
    C3[0];
}
new Set();
function f44() {
}
const t41 = -6325;
new t41(58669);
new ArrayBuffer(257);
const v60 = new Uint8ClampedArray(3);
class C61 {
    constructor(a63, a64, a65, a66) {
        const v67 = this.constructor;
        try { new v67(-12, a66, this, this); } catch (e) {}
        for (let v69 = 0; v69 < 5; v69++) {
            v60[v69] = a66;
        }
    }
}
new C61();
