const v3 = [493165.28759808396,-4.0,-4.0,694207.0260885598,694207.0260885598,493165.28759808396,493165.28759808396];
const v4 = [493165.28759808396,493165.28759808396,v3,v3];
[v4,v3,v4];
const v14 = new Uint8Array();
const v16 = new Uint32Array();
function f17(a18, a19, a20, a21) {
    a18.g = a18;
    a20 % a20;
    const o26 = {
        "b": a18,
        ...v14,
        n(a24, a25) {
            v16[a18] = v16;
            return Uint8Array;
        },
    };
    return Uint8Array;
}
for (let v27 = 0; v27 < 625; v27++) {
    f17(Uint8Array);
}
v4 || -5.409142435031642;
let v33;
try { v33 = v3.with(129, 694207.0260885598); } catch (e) {}
v3[5.0] &&= 984456051;
v3["reduceRight"](5.0, v33, -256, ...v14, 129, 129);
class C38 {
    n(a40) {
        return a40;
    }
    static #valueOf(a45) {
        %VerifyType(-7);
        try {
            const o47 = {
            };
        } catch(e48) {
        }
        return 65537;
    }
}
new C38();
new C38();
new Int16Array(2);
new Float64Array(3438);
let v62 = 10 << 10;
--v62;
--v62;
new BigUint64Array();
function F68() {
    if (!new.target) { throw 'must be called with new'; }
    ([-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308]).reduce(Date);
    for (let v75 = 0; v75 < 32; v75++) {
        Date["p" + v75] = v75;
    }
    function f78() {
        function f80(a81) {
        }
    }
    Worker.constructor;
    function f85() {
        return f85;
    }
    const o87 = {
        "type": "function",
    };
    new Worker(f78, o87);
    const v89 = Array(19793);
    for (const v90 of v89) {
    }
    const v91 = [v89,v89,v89,v89];
    [[v91,v91]] >= Uint16Array;
}
new F68();
new F68();
