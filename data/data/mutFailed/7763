const v0 = [];
const v1 = [1.2930401551838888e+308];
let v2 = Reflect;
[v2,v2,v2];
function F4(a6, a7, a8) {
    if (!new.target) { throw 'must be called with new'; }
}
const v9 = new F4();
this.unescape(v9);
[-0.0,-964.8869812285487,9.268314474314508,383651.35304971854,1000.0];
with (undefined) {
}
const v17 = new Uint16Array(6);
v17.lastIndexOf(4);
const v20 = [1.0,2.220446049250313e-16,1000000000000.0,1.409792210636955e+308];
v20[4294967295] = v20;
const v23 = Symbol.toPrimitive;
function f24() {
    v2 *= v23;
    return Float64Array;
}
new Int16Array(1996);
new Int16Array(4);
function F33(a35, a36, a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    const v39 = this.constructor;
    try { new v39(a38, v0); } catch (e) {}
    a36[2];
}
new Uint16Array(908);
function f45(a46, a47) {
    const o52 = {
        "f": a47,
        get c() {
            return 1996;
        },
        [a46](a50, a51) {
            v1[5] = 1096487296;
        },
    };
    return o52;
}
f45(1096487296, 1096487296);
f45(268435441, 268435441);
