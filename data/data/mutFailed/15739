const v1 = new Date();
const v5 = [765732.0550082892,1000000000.0];
try { v5.map("VtZXJ"); } catch (e) {}
[1000000.0,-2.2250738585072014e-308,-1.3377119476090307e+307,1000000000.0,1e-15,3.1489014650047267,1.7976931348623157e+308,0.09097732286368998,2.0,-657164.7176984989];
const v8 = [-1000000000.0,-1.0,4.0,1.6906987719585076e+308,-0.0,-2.0,-6.269576635763709,NaN,-2.0];
v8[7];
class C10 extends Date {
    static n(a12, a13) {
        const v16 = new Uint8ClampedArray(995);
        new Int8Array(v16);
        try {
            a13.valueOf = Date;
        } catch(e19) {
        }
        a13["VtZXJ"];
        return "bigint";
    }
    #p(a22, a23, a24, a25) {
        a25 <= a24;
        v8[768803181];
        return v1;
    }
}
C10.length = C10;
new C10();
new C10();
new C10();
-2n << -2n;
const v35 = [];
v35[Symbol.toPrimitive] = Date;
v35.toString = [v35];
const v40 = (2136873598).constructor;
function f41(a42, a43) {
    const v45 = new Date(Date);
    v45.setUTCDate();
    return Symbol;
}
v40[Symbol.toPrimitive] = f41;
const v49 = v40(v40, v40);
try { v49.toFixed(v35); } catch (e) {}
