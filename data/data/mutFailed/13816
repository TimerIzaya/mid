class C3 {
    #g;
    static #h = 538944322;
    static [1.148427520173608e+308];
    static 0 = 1.148427520173608e+308;
    8 = -1073741824;
    constructor(a5, a6) {
        this[4] = a6;
        a6.n = 1.148427520173608e+308;
        a6 ^ a6;
        this[4];
        a6 % a6;
        try {
            this.h = this;
        } catch(e10) {
        }
        try { a6.n(this, 538944322); } catch (e) {}
        super.d **= -1073741824;
        const v13 = ("boolean")?.slice;
        try { new v13(538944322, 538944322); } catch (e) {}
    }
}
C3[0] = C3;
const v17 = new C3(-1073741824, 538944322);
function f18(a19) {
    const v24 = new Uint8ClampedArray();
    function f25(a26, a27) {
        const o32 = {
            [a26]: Float64Array,
            4: 6,
            "b": a26,
            [v24](a29, a30, a31) {
            },
        };
        return o32;
    }
    f25(2);
    %OptimizeFunctionOnNextCall(f25);
    return -1073741824;
}
v17[Symbol.toPrimitive] = f18;
v17[2147483647] = v17;
v17[4];
const v37 = new C3(C3, v17, -1073741824, -1073741824, -1073741824);
const v38 = new C3(v17, -1073741824, 538944322, 538944322, v37);
v38[4];
v38[4];
let v43;
try { v43 = ("14").trimLeft(); } catch (e) {}
try { v43.isWellFormed(); } catch (e) {}
function f47() {
    return Date;
}
function f48(a49) {
    function F50(a52, a53) {
        if (!new.target) { throw 'must be called with new'; }
        this.f = a53;
    }
    const v54 = new F50(F50, F50);
    const o56 = {
        [undefined]: undefined,
        __proto__: v54,
        256: F50,
    };
}
Object.defineProperty(Date, "toString", { configurable: true, get: f47, set: f48 });
Date.length = Date;
const v57 = Date?.f;
try { new v57(-1073741824, -1073741824, v38, v38, v57, v37, v38); } catch (e) {}
try { new v57(v17, -1073741824, "toString", v38, v38, v17, "trimEnd"); } catch (e) {}
const v60 = new Date();
v60.valueOf = Date;
try { v60.setUTCFullYear(v60, 1.148427520173608e+308, 1.148427520173608e+308); } catch (e) {}
const v63 = [[v17],Date,C3,"toString","trimEnd"];
v63.constructor = f47;
try { v63.reduceRight(538944322); } catch (e) {}
let v65;
try { v65 = v63.slice(-1073741824, Date); } catch (e) {}
try { v65.toReversed(); } catch (e) {}
const v67 = [Date];
try { v67.reduce(v37); } catch (e) {}
class C69 {
}
C69.length = C69;
const v70 = new C69();
v70.constructor = f47;
const v71 = v70?.f;
([607.0076449847468,-818.8860494127688])[3];
Array(11);
try { new v71(1.148427520173608e+308, 1.148427520173608e+308); } catch (e) {}
const v78 = v70?.constructor;
try { new v78(); } catch (e) {}
try { new v78(); } catch (e) {}
ReferenceError(v70);
ReferenceError();
