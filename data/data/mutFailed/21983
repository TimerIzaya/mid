class C3 {
    536870912;
    static ["description"] = "description";
    n(a5) {
        super.d = a5;
        delete this?.f;
        const v9 = new BigInt64Array(1);
        new Int16Array(129);
        new Uint16Array(127);
        return v9;
    }
}
new C3();
const v17 = new C3();
new C3();
function F19(a21, a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
}
new F19(F19, F19, F19, F19);
class C26 {
}
function f29() {
    const o60 = {
        m(a32) {
            a32.f = a32;
            try { a32.next(); } catch (e) {}
            a32.c = a32;
            a32.h = a32;
            const o34 = {
            };
            o34.h = o34;
            o34.h = o34;
            function f35(a36, a37, a38) {
            }
            f35.caller = f35;
            try {
            } catch(e40) {
            }
            try {
                const o42 = {
                };
                o42.h = o42;
            } catch(e43) {
            }
            Math?.expm1;
            const v47 = -9007199254740991 >> -9007199254740991;
            v47 - v47;
            class C49 {
                o(a51, a52, a53, a54) {
                }
            }
            C49.name;
            const v58 = new Int8Array(3938);
            let v59 = 3;
            [...v59] = v58;
        },
    };
    o60.m(o60);
}
f29();
const v65 = new WeakMap();
class C66 extends C3 {
    constructor(a68, a69) {
        const o70 = {
            __proto__: a69,
        };
        o70[a69] = o70;
    }
    d;
    static toString(a72, a73, a74) {
        this[this] = this;
        try {
            a74.h = v17;
        } catch(e75) {
        }
        [-373.05938478354153,-5.208280574841209,-31443.631105160923,-2.2250738585072014e-308,1.0,1000.0,673.2244936804532,2.2250738585072014e-308,0.2662924296373963];
        [519.0757541388582,-2.0,253.78395461254854,0.2518850843159771,5.0,1.0,-273.3644900130954,-5.0,-0.0];
        [-7.813809390590992e+307,1.7976931348623157e+308,0.3417111931808279,0.0,-6.256279705826948,-1.0,-1000000000.0];
        const v80 = new BigUint64Array();
        try { v80.entries(); } catch (e) {}
        function f82(a83, a84, a85) {
        }
        return a72;
    }
    16 = v65;
    /*
    constructor(a87, a88) {
        const v89 = this.constructor;
        try { new v89(); } catch (e) {}
        for (let i = 0; i < 10; i++) {
            Math.atan();
        }
    }
    */
    static e;
}
new C66();
new C66();
new C66();
let v96 = 1073741824;
const v98 = new BigUint64Array(v96, v96, v96);
function F100(a102) {
    if (!new.target) { throw 'must be called with new'; }
    function f103() {
        return f103;
    }
    try {
        class C104 extends f103 {
            #h = f103;
        }
        new C104();
        new C104();
    } catch(e107) {
    }
}
new F100(F100);
let v109 = 4096 * 4096;
function f110() {
    let v111 = 2;
    ({"byteLength":v109,"byteOffset":v111,"length":v96,} = v98);
    return v109;
}
const v114 = new Uint32Array(v96, v96, 16);
const o115 = {
    1073741824: v114,
};
for (let v116 = 0; v116 < 5; v116++) {
    f110();
    %OptimizeFunctionOnNextCall(f110);
}
