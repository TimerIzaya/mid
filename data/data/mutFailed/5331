const v0 = [0.49721834341398874];
const v1 = [-702192.1144214247,-2.220446049250313e-16,-2.220446049250313e-16,0.0];
function f2() {
    return f2;
}
function f4() {
    const v7 = Array(4087, -2.220446049250313e-16);
    v7[4037] = v7;
    return Array;
}
const v8 = [-201.9529445298698,24.757282581921572,489.2461125961588];
const v9 = [1000];
function f10() {
    try {
        v0.a = v1;
    } catch(e11) {
    }
    return v8;
}
v9.toString = f10;
const v12 = [2147483647,9,268435441,-39151,7,16,-2019446363,0,4294967295,42568];
2147483648 ^ 2147483648;
const o17 = {
};
const v18 = o17.__defineGetter__;
let v19;
try { v19 = v18(); } catch (e) {}
const v20 = new Int8Array(1342);
function f21() {
    v1[11] = v19;
    [f2];
    return -2.220446049250313e-16;
}
v20[Symbol.toPrimitive] = f21;
Object.defineProperty(v20, v9, { writable: true, enumerable: true, value: v20 });
v12.length = 1342;
const v28 = [-2147483648n,536870912n,v8];
for (let [i32, i33] = (() => {
        10 >> 10;
        return [0, 10];
    })();
    i32 < i33;
    i32++) {
}
[v28,-268435456n];
[v28,v0];
function F44() {
    if (!new.target) { throw 'must be called with new'; }
}
const v46 = new F44();
Math.tanh("1");
try {
    v20.buffer = v46;
} catch(e52) {
}
try {
    const o53 = {
    };
    new Int8Array(o53, 4294967295, 4294967295);
} catch(e56) {
}
-2147483649n + 59969n;
const t61 = "1";
t61[2307] *= -2.220446049250313e-16;
[-3,5,-1024,-4294967296,-59148,1,4096,1073741824];
[127,731630581,536870887,268435440];
[9,64,4294967296,2147483648,-65535,64,-10];
const v67 = Array(16);
const o68 = {
    ...v67,
};
