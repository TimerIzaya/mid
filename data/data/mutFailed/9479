const o9 = {
    n(a5) {
        const o7 = {
        };
        return Worker(o7);
    },
};
const v12 = [-8.617154261236049e+307,159.71702728675677,1.335194298509581,753068.0621582819,5.0,-1.7976931348623157e+308,-2.220446049250313e-16];
new Int32Array(2890);
v12.a = 12;
[-5.843918697001629e+307,0.6952349011038069,5.0,0.6457829345763154,-6.276312987357811e+307,-5.0,5.730680348871429];
[-1.0,1.7976931348623157e+308,-0.0,-1000.0,1.0,1e-15,0.0,-1000000000.0,138.21988585308304];
const v19 = /\p{Changes_When_NFKC_Casefolded}/vsy;
/r\p{Script_Extensions=Greek}P/gudis;
/oX\8/dmsy;
const v22 = [-2,257,-107178159,-35269,9223372036854775807,1203530861,-32678];
2890 < 12;
const v24 = v12.constructor;
try { new v24(v19); } catch (e) {}
const v28 = new Float32Array(99);
for (const v29 of v28) {
    function F30(a32, a33) {
        if (!new.target) { throw 'must be called with new'; }
        this.g = v29;
    }
    new F30();
}
const o35 = {
};
const v37 = new Proxy(v22, o35);
const o49 = {
    __proto__: v37,
    "a": v22,
    toString(a39, a40) {
        function F41(a43, a44, a45, a46) {
            if (!new.target) { throw 'must be called with new'; }
            let {"c":v47,} = a40;
        }
        const v48 = new F41();
        return v48;
    },
};
o49.lastIndexOf(o35, o49, o49, Proxy, v22);
