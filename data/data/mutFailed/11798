class C3 {
    static get g() {
        super.h;
        function f6(a7) {
            return a7;
        }
        class C8 extends f6 {
            constructor(a10, a11) {
                const o14 = {
                    "type": "minor",
                };
                o14.b = o14;
                gc(o14);
            }
            g = 1.0;
            1 = 1.0;
            static 1425 = f6;
        }
        return f6;
    }
    static #g = 1073741824;
    ["h"];
}
new C3();
const v17 = new C3();
const v18 = new C3();
class C19 extends C3 {
    static {
        class C22 {
            b = "c";
            static #h;
            268435439;
            static #c;
        }
        new C22();
        const v24 = v18 != 1.0;
        if (v24) {
        } else {
            const v28 = [this,this,C3];
            const v29 = [v28,C3,this,v17,v24];
            for (let i = 0; i < 5; i++) {
            }
            AggregateError("4294967297");
            [v28,v29,v29];
        }
    }
    a = 1073741824;
    [v18];
}
function f34() {
    return f34;
}
for (let v35 = 0; v35 < 5; v35++) {
    function f36() {
        const t54 = ("1073741824").constructor;
        const v40 = t54().replaceAll(f36, v35);
        return v40.toLowerCase(v40, "1073741824", v40);
    }
    f36();
    %OptimizeFunctionOnNextCall(f36);
}
const v43 = new C19();
new C19();
new C19();
const v49 = [1073741824,1073741823,1376142744,1073741825];
v49.forEach(-4294967297n);
let v51;
try { v51 = new v43(1.0, v49); } catch (e) {}
typeof v51;
const v55 = gc.constructor;
try { v55(gc); } catch (e) {}
const o59 = {
    "execution": "async",
    "type": "minor",
};
gc(o59);
new Int8Array(1073741823);
