let v1 = 512;
class C3 {
    constructor(a5) {
        function F6() {
            if (!new.target) { throw 'must be called with new'; }
            function F8() {
                if (!new.target) { throw 'must be called with new'; }
            }
        }
        const v10 = new F6();
        function f11(a12, a13) {
            const o21 = {
                n(a15, a16) {
                    class C17 {
                    }
                    new Int16Array([-1.7976931348623157e+308,1000000.0,-Infinity,1000000.0,1e-15,4.0,0.05361702581874339,2.220446049250313e-16,-384803.16239734297]);
                },
                "a": v10,
            };
            for (let v22 = 0; v22 < 100; v22++) {
                Math.random();
            }
            return o21;
        }
        let v25;
        try { v25 = a5(a5); } catch (e) {}
        function F26() {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.g = this;
            } catch(e29) {
            }
        }
        new F26();
        v1 = v25;
        new Float64Array(1896);
        16 + 16;
        let v37 = -314.9391272852571;
        Math.log2(--v37);
        Array();
        const v43 = new Uint16Array(16);
        const v44 = v43?.constructor;
        try { new v44(v1, v25, v25); } catch (e) {}
        3962 != 3962;
        try { new Uint8Array(Uint8Array, C3, Uint8Array); } catch (e) {}
        new Uint8Array(3962);
    }
}
const v51 = [];
function f52() {
    const o53 = {
        ...v51,
        "c": v51,
        "e": v51,
        "f": v51,
        "arguments": v51,
        __proto__: f52,
    };
    v51.e = o53;
    65537 == 4096n;
    const v59 = new Int32Array(1024);
    for (const v60 of v59) {
        const o63 = {
            "maxByteLength": 1293466293,
        };
        new SharedArrayBuffer(1796, o63);
    }
    return v51;
}
f52();
C3.length = C3;
for (let [v67,v68] of f52) {
}
const v71 = new Uint8Array(165);
v71.lastIndexOf();
const v73 = new C3(v1);
try { v73.hasOwnProperty(1.1732615931728108e+308); } catch (e) {}
const v75 = new C3(-1000000000000.0);
v75.length = v75;
new C3(v75);
([-1,404293594,64,-10]).unshift(1.7976931348623157e+308, -4213);
