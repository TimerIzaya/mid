const v2 = new BigInt64Array(3735);
v2[1] = 3735;
function F4(a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a6;
    } catch(e7) {
    }
    try {
        this.g = BigInt64Array;
    } catch(e8) {
    }
    try {
        this.b = BigInt64Array;
    } catch(e9) {
    }
}
const v10 = new F4(Date);
const v11 = new F4(F4);
const v12 = new F4(Date);
const v15 = new BigUint64Array(8);
Date();
v12[v11];
const v19 = 8;
delete v10[v15];
const o21 = {
    "apply": Date,
    "call": Date,
    "construct": Date,
    "defineProperty": Date,
    "deleteProperty": Date,
    "getOwnPropertyDescriptor": Date,
    "getPrototypeOf": Date,
    "isExtensible": Date,
    "ownKeys": Date,
    "preventExtensions": Date,
    "set": Date,
    "setPrototypeOf": Date,
};
new Proxy(v11, o21);
new Uint32Array(255);
new Float64Array([-65536,-432658450,256]);
