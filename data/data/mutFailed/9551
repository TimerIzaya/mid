const t0 = "at";
t0[1] = "at";
const v6 = ("29753").replaceAll("29753", "b").split("b");
try { v6.sort(v6); } catch (e) {}
class C9 {
    ["29753"] = -7739;
    n(a11, a12) {
        let v10 = this;
        let v13 = WeakSet;
        const t9 = 48857;
        new t9();
        const v15 = super[48857];
        const v16 = v10--;
        try { v16.getTimezoneOffset(v16, 48857, v15, a12); } catch (e) {}
        for (let i20 = 0, i21 = 10; i20 < i21; v13--) {
        }
        typeof 48857 === "symbol";
        function F31(a33) {
            if (!new.target) { throw 'must be called with new'; }
        }
        class C35 {
            static {
                try {
                const t0 = 0.44967380041772886;
                t0();
                } catch (e) {}
            }
            static f;
        }
        return "symbol";
    }
    static #h = 48857;
}
new C9();
const v42 = new Float32Array(165);
const v43 = new Uint16Array(v42);
new C9();
const v45 = new v43();
v45[48857] = v45;
[6,65537,65537,-1073741824,-12,-1,-1765746677,-6,1073741824,9007199254740990];
const v47 = [2147483647,234006974,-23520,-948686211];
try { v47.pop(); } catch (e) {}
const v49 = [-3,373557872,-1999843476,-9007199254740990,128,9007199254740991,1415467840,127,37789];
for (let v53 = 0; v53 < 5; v53++) {
    const o55 = {
    };
    function F56(a58, a59, a60) {
        if (!new.target) { throw 'must be called with new'; }
        a58[4294967295] = a58;
    }
    const v62 = F56.prototype?.constructor;
    try { new v62(v53, o55, v49); } catch (e) {}
    const v65 = v53 >> -18321;
    Math.log1p(v53);
    Math.tan(v65);
}
