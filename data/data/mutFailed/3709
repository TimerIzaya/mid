class C3 {
    g = -1.9630564410752207;
    #d;
    constructor(a5, a6) {
        this[-752578.6490168085];
        class C8 {
            4096;
            static 5 = -752578.6490168085;
        }
        new C8();
        new C8();
        new C3();
    }
    #g = C3;
    #b = -752578.6490168085;
}
new C3(-752578.6490168085, 1.7630225008061434e+308);
new C3(-752578.6490168085, -752578.6490168085);
const v14 = new C3(-752578.6490168085, -752578.6490168085);
function F15(a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = a17;
    this.e = -752578.6490168085;
    try {
        this.e = 1.7630225008061434e+308;
    } catch(e19) {
    }
}
new F15(v14, C3);
new F15(v14, v14);
const t30 = -752578.6490168085;
new t30(v14, C3);
const v23 = [6.938918489800134,-108.46539873669394,-525.9244663240281,0.0,0.27739710659622097,-1000.0,-1000000000.0,1000000.0,258962.84335079673];
[4.0,-1000000000000.0,1.0];
[1.0,1000.0,7.8859667211341815,8.16467104345406];
Uint8ClampedArray.valueOf = Date;
function F29(a31, a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
}
const v34 = new F29(3011, Uint8ClampedArray, F29);
function f35(a36) {
    Object.defineProperty(Date, "g", { configurable: true, enumerable: true, get: Date, set: Date });
    const o37 = {
        "construct": Date,
        "deleteProperty": F29,
        "getPrototypeOf": Date,
        "preventExtensions": Date,
        "set": Date,
    };
    new Proxy(v23, o37);
    return Date;
}
v34[(-752578.6490168085).toPrimitive] = f35;
v34[Symbol.toPrimitive] = Date;
v34.constructor = Date;
v34.constructor;
new Symbol(v34, Uint8ClampedArray, 3011);
