const v0 = [-6.163106430869498e+307,3.0,-1000000000000.0,4.0,-2.0,7.176354112112932];
const v1 = [642574.4478469647,4.0,-9.191803141484092];
let v2 = [-1e-15,-1.7976931348623157e+308,-2.2250738585072014e-308,-1.7976931348623157e+308,1000000000000.0,2.7269474924977973e+307,5.907032190213582e+307,-Infinity];
const v3 = [13];
const v4 = [-3,-1361370031];
try { v4.map(v2); } catch (e) {}
const v6 = [17591,13,-4294967297,-1024,7,16,-54146,3,-16];
const v7 = [v6,v4,v3];
const v8 = [v4,v2];
const v9 = [v1,v2,v0,v1];
let v10;
try { v10 = v9.reduce(v3); } catch (e) {}
const v12 = new Date();
try { v12.setHours(Date, v0, Date, v0); } catch (e) {}
function f14(a15, a16, a17) {
    try { a15.fill(f14); } catch (e) {}
    const o22 = {
        __proto__: v3,
        get g() {
            Object.defineProperty(v0, v9, { writable: true, value: this });
            const v20 = new Date(v2 **= a17);
            v1[v20];
            return this;
        },
        154: a16,
        "c": v1,
        [a16]: v1,
        [v7]: v9,
        "g": v12,
    };
    return v10;
}
const v23 = f14(v6, v9, v0);
const v24 = f14(v4, v0, v4);
const v25 = f14(v9, v1, v8);
try { v25.unshift(v2); } catch (e) {}
const v29 = new v24();
try { v29.find(v23); } catch (e) {}
("p").lastIndexOf(v29);
