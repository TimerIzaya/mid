let v1 = -1.9781178919006255;
let v2 = -1000.0;
const v3 = ++v2;
v3[-2] *= v1;
Object.defineProperty(v2, v2, { writable: true, configurable: true, enumerable: true, value: v3 });
const v4 = v1--;
v3[v4] = v4;
const v5 = [v2,0.5915772655504649,v1,0.5915772655504649,v2];
const v7 = [[v5,v2,v1,v5,v2],v2,0.5915772655504649];
[7.554475698528474];
[-4.721253214731447,-424.26622251821095,-1.3908840978243475,216651.86252511316,-986.9195186534472];
const v10 = [-419290.5498459947,2.2250738585072014e-308,-4.948667451967253e+307];
[v7,v2,[v7],v5,v7];
[v1,v5,v2,v10];
try { Set(Set); } catch (e) {}
("boolean").normalize();
/4/syd;
const v1 = /^xxx$/iuyd;
const v2 = /0fma+b/mvg;
const v6 = [918502315,-1073741824,-2046321892,9007199254740992,-14543,-9007199254740992,-2];
[-774070317,5,257,11];
const v8 = [-586821801,-8,-1340897576,16,-839832499,4096];
function f9() {
    function f10(a11, a12) {
        const o13 = {
        };
        try {
            o13.f = v2;
        } catch(e14) {
        }
        try {
            const o15 = {
            };
            o15.f = v2;
            o15.d = v1;
        } catch(e16) {
        }
        try {
            const o17 = {
            };
            o17.f = v2;
            o17.d = v1;
            o17.c = a11;
        } catch(e18) {
        }
        try {
            const o19 = {
            };
            o19.f = v2;
            o19.d = v1;
            o19.e = a11;
        } catch(e20) {
        }
        return o13;
    }
    return f10;
}
Object.defineProperty(v8, "toString", { configurable: true, enumerable: true, get: f9 });
class C21 {
    static a = "co2jE";
    static n(a23, a24, a25) {
        const v26 = [];
        const v27 = v1 >> "co2jE";
        try {
            super.assign(v27, v26, "65536", a23, v2);
        } catch(e29) {
        }
        try { a25(..."65536", a24, a25, v1, ...v26, ...v8); } catch (e) {}
        return v6;
    }
    static [v8];
    375 = v6;
    #b = v2;
}
new C21();
new C21();
new C21();
function f34() {
    return C21;
}
class C39 {
    static [-8.662521944722695];
    m(a41) {
        function f42() {
            return 1073741823;
        }
        Object.defineProperty("trim", 5, { enumerable: true, set: f42 });
    }
    o(a44, a45) {
        const t73 = a44(-8, "trim", -8, this);
        t73.f = -8 == a44;
    }
}
C39.g = C39;
class C48 extends C39 {
    static #a;
    5;
    4 = C39;
}
const v49 = new C48();
v49[5] = v49;
const v50 = new C48();
v50[5] = v50;
const v51 = new C48();
const v52 = new C39();
const v53 = v52?.toLocaleString;
try { new v53(); } catch (e) {}
function F55(a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
}
function f60(a61) {
    const o64 = {
        [9007199254740992](a63) {
        },
    };
    return "trim";
}
f60(1073741823);
f60(1073741823);
f60(-8);
try { Set(); } catch (e) {}
new Set();
Uint8ClampedArray.e = Uint8ClampedArray;
const v73 = new Uint8ClampedArray(1944);
const v76 = new Uint8Array(7);
-850789.2132591 | -850789.2132591;
function f82() {
    return v53;
}
f82.f = v76;
f82.f = f82;
new Float32Array(6);
function f84() {
    try { ("c").startsWith(); } catch (e) {}
    try { ("1").trimLeft(); } catch (e) {}
    let v89 = -560.0308879674441;
    const o111 = {
        [v89](a91, a92) {
            super.getYear();
        },
        ...v51,
        __proto__: "1",
        ["1"](a95) {
            /s1(\1a)/mviy;
            /a\S\xf0\x9f\x92\xa9/msuyd;
            const o98 = {
            };
            v89 = -2.0;
            let v99 = BigUint64Array;
            let v101 = ("boolean").toLocaleLowerCase(v50, f84);
            class C102 {
            }
            [v99,v101] = [-5,-65535,2269];
            let v106 = -(-5);
            !-5;
            ++v106;
            (6.0789167093475385 % -5) ^ 6.0789167093475385;
        },
    };
    o111.a = v51;
    return o111;
}
const v112 = f84();
v112.a = v73;
v112.a = v112;
function F113(a115, a116, a117) {
    if (!new.target) { throw 'must be called with new'; }
    this?.set;
    try { a117.construct(); } catch (e) {}
}
F113.arguments = F113;
const v122 = [Reflect,Reflect,Reflect];
v122[1];
Reflect.construct(F113, v122, Map);
const v127 = new BigInt64Array(301);
v127[216];
new BigUint64Array(6);
const v134 = new Int16Array(1024);
const v135 = f84();
const v136 = f84();
function F137(a139, a140) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        class C141 {
            static c;
            static #m(a143) {
            }
        }
        const v144 = new C141();
        const v145 = v144.constructor;
        v145.prototype = v145;
    } catch(e146) {
        function f147() {
            return f147;
        }
        class C148 {
            #e;
            [v134];
            static 268435440 = e146;
            #a;
        }
    }
}
new F137(v112, v112);
const v150 = new F137(v136, v135);
v150.constructor = f84;
const v151 = v150?.constructor;
try { v151(F137, v76); } catch (e) {}
new F137(v112, v135);
new BigUint64Array(1024);
let v156 = 0;
do {
    const o157 = {
    };
    v156++;
} while ((() => {
        const v160 = v156 < 3;
        !v160;
        return v160;
    })())
