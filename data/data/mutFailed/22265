[10000,-2147483648,1073741823,1073741824];
[1267304991,-268435456,-15,-1574811986,256,-980037210,356961352,9,16,476594435];
[0,2102415573,-1188721155,-1337340172,1033748773,6,-41077,1073741824,536870888];
new Uint32Array(10);
new Uint16Array(4093);
new Uint32Array(255);
class C23 {
}
const v24 = new C23();
const v25 = new C23();
const v26 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
try {
    new C23();
} catch(e28) {
}
Uint32Array || "search";
const v30 = [601759695];
const v31 = [1073741824,1073741823,1376142744,1073741825];
function f33(a34, a35, a36, a37) {
    a35[Symbol.toPrimitive] = f33;
    function f41() {
        const o50 = {
            "e": -4294967295,
            ...v26,
            84: arguments,
            "f": "Vre",
            ["Vre"]: a34,
            "h": a35,
            [a35]: "anOv",
            "d": a37,
            ..."Vre",
            set b(a45) {
            },
            ["Vre"](a47, a48) {
                super[f41];
            },
        };
        return a34;
    }
    class C52 extends Float32Array {
        constructor(a54, a55, a56) {
        }
    }
    f41();
    %OptimizeFunctionOnNextCall(f41);
    let v59;
    try { v59 = v31[a36](..."find", a37, ...v30, ...v31, ...522675525n); } catch (e) {}
    v59 <= a36;
    Object.defineProperty(this, 256, { writable: true, configurable: true, value: 255 });
    this[256] = BigUint64Array;
    return arguments;
}
for (let v64 = 0; v64 < 10; v64++) {
    f33();
}
%OptimizeFunctionOnNextCall(f33);
for (const v66 in v25) {
    const t57 = Int32Array();
    t57[3] = 9007199254740991;
    v24.p("m");
}
f33(v31, f33, 522675525n);
