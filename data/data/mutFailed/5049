function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    a5 ^ a5;
    a6--;
    const v9 = a6 << this;
    v9 >> v9;
    try {
        this.d = -13n;
    } catch(e11) {
    }
    try {
        this.f = -536870912n;
    } catch(e12) {
    }
    try {
        this.a = a6;
    } catch(e13) {
    }
}
const v14 = new F3(F3, -536870912n);
v14.f = v14;
~v14.f;
const v17 = new F3(-4294967296n, -13n);
const v18 = v17?.constructor;
try { new v18(-4294967296n, -536870912n); } catch (e) {}
new F3(-13n, -536870912n);
-10116 + -10116;
const v26 = -2 >> -2;
const v29 = 32501 & 32501;
/a(?=b)c/um;
/9(?<=)/gudis;
const v32 = /58D\p{Nd}/vmy;
v26.dotAll;
try { v32.toString(); } catch (e) {}
[16,-4294967297,6,-964090017,-2,-65537];
const v36 = [-9223372036854775808,4294967296,-268435456,4096,30054,618994789,-65536,13,1619132208];
[184791.33719420154,-2.220446049250313e-16];
[5.0,-8.518540808193055e+307,-Infinity,1000000000000.0,4.0,0.9517088715881594];
/Ee+/gsy;
Int8Array.length = Int8Array;
Int8Array.b = v36;
function f42() {
    Int8Array.length = Int8Array;
    v29.g = v26;
    gc();
    return Int8Array;
}
%PrepareFunctionForOptimization(v17);
const v46 = f42();
v46.e = v46;
try { v46(928162910, v36, 4294967297); } catch (e) {}
