[-1073741824,-10,-1024,-65536];
[-268435456,-28355];
const v2 = [-128,-1024,536870887,-1,-1699972414,-65536,-3,64,10000];
new Uint16Array(564);
new Int8Array(64);
const v10 = [Infinity];
class C11 {
    [v10];
}
new C11();
new Int16Array(-793046917);
[-1e-15,NaN,4.0,-Infinity,-4.0];
[0.8046951472855267,-1000000.0,3.7800884696736574,-2.2250738585072014e-308];
[-2.220446049250313e-16];
function f19(a20, a21, a22, a23) {
    /[.ma\Sc]/vdimsy;
    const v29 = [1000000.0,0.218433446981681,-5.0,-919787.2036172998,872389.6270716691];
    Symbol.set(v29, v29, 268435439);
    function f34() {
    }
    ([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap;
    gc();
    const v39 = /(x)(x)(x)\1/uis;
    function f40() {
        return f40;
    }
    const v42 = ([1.479450712344466]).join();
    for (let v43 = 0; v43 < 25; v43++) {
        v42.__proto__;
    }
    v39.exec(Int16Array);
    Object.defineProperty(a20, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f19 });
    const o58 = {
        toString(a49, a50) {
            new Date(a20);
            let v52 = 3;
            v52++;
            Math.hypot(v2);
            gc();
            return this;
        },
    };
    return o58;
}
const v59 = f19(Date);
try { v59.toString(); } catch (e) {}
