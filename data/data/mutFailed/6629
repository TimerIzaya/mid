const v0 = [-1000000000000.0,-1000000000.0,534147.0760619165,170.60377455680214,-0.0,4.0,NaN,4.831092219511191];
function f1(a2, a3) {
    try { a3(a2, a3, a3, ...v0); } catch (e) {}
    return v0.constructor;
}
v0[Symbol.toPrimitive] = f1;
const v8 = [-1000.0];
const v9 = [-1000000000000.0,-191.75766676803323,0.0849452481193862,3.0];
v9.h = v9;
function F10(a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        v9.h = v9;
    } catch(e14) {
        function f15() {
            let v16 = -9223372036854775808n;
            v16 %= 45725n;
            return 45725n;
        }
        %OptimizeFunctionOnNextCall(f15);
    }
}
const v18 = new F10(F10, v9);
const v19 = new F10(F10, v9);
const v20 = new F10(v0, v8);
const v21 = [];
function f22() {
    return Symbol;
}
Object.defineProperty(v21, "toString", { writable: true, configurable: true, get: f22 });
class C23 {
    [v21];
    set a(a25) {
        a25 === v21 ? a25 : v21;
        [v21,a25,a25,v21];
        [v21];
        [a25,v21,v21,v21,v21];
    }
    static [v21];
    #f;
    h = v21;
}
const v31 = new C23();
function f35(a36, a37) {
    const o41 = {
        "h": v20,
        "f": v9,
        "f": -965.6867948197274,
        [-965.6867948197274]: 658289.5541257409,
        "execution": v31,
        "a": a37,
        "arguments": v8,
        toString(a39, a40) {
            switch (v18) {
                case v0:
                    v20[2146] = a37;
                    break;
            }
            return F10;
        },
        [v0]: v18,
    };
    return o41;
}
f35(v19, 1.0);
function f43(a44, a45) {
    const o46 = {
    };
    return o46;
}
const v47 = f43(f43, f43);
function f48(a49) {
    v47[213];
    return a49;
}
f35(v20, -965.6867948197274);
f35(v19, 1.0);
function f56(a57, a58, a59, a60) {
    for (let v61 = 0; v61 < 5; v61++) {
        0 == 5n;
    }
    return a59;
}
for (let v64 = 0; v64 < 5; v64++) {
    f56(v64, v64, 5n, f56);
}
const v66 = new Uint8ClampedArray(3);
class C67 {
    constructor(a69, a70, a71, a72) {
        for (let v73 = 0; v73 < 5; v73++) {
            v66[v73] = a72;
        }
    }
}
new C67();
