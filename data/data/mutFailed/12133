const v2 = new Uint8ClampedArray(2217);
const v4 = 128 != 128;
const v5 = v4 || v4;
let v7 = new Uint32Array(128, Uint32Array, v2, 2217);
const v8 = v7?.with;
let v9;
try { v9 = new v8(Uint32Array, Uint32Array); } catch (e) {}
let v10 = v7[123];
v10++;
const v14 = new BigUint64Array(16);
v14[11];
function f16() {
    return 2217;
}
try { f16(); } catch (e) {}
class C18 {
    #d;
    static get c() {
        return Uint8ClampedArray;
    }
    [128] = 128;
    [16] = v14;
    #a;
    static g = Uint32Array;
    static #c;
    #h;
}
try { new C18(v9, v5); } catch (e) {}
C18.prototype = v5;
new C18();
const v25 = new C18();
v25[128] = v25;
v25[16][11];
const v28 = new v25();
v28[128];
function f30(a31, a32, a33, a34) {
    const v37 = new BigInt64Array(4046);
    const v39 = v7++;
    v39 % v39;
    v39 + v39;
    const v42 = v39 >> v39;
    v42 >>> v42;
    let o44 = {
    };
    [,...o44] = v37;
    return f30;
}
for (let v45 = 0; v45 < 5; v45++) {
    const v46 = f30();
    v46.a = v46;
}
