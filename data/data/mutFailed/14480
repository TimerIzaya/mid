const v2 = new Uint16Array(1024);
BigInt64Array.BYTES_PER_ELEMENT = BigInt64Array;
const v5 = new BigInt64Array(16);
2937 * 2937;
new Uint32Array(2937);
new Uint32Array(v5);
const v14 = [v2,2937,-584647474];
const v15 = Reflect.construct(Uint32Array, v14, Uint32Array);
[-23744,-12048];
[1260699246,268435439,256];
[-4294967296,1287073944,536870912,9007199254740991];
let v19 = -9223372036854775807;
v19++;
v14[6];
for (let v26 = 0; v26 < 32; v26++) {
    v14["p" + v26] = v26;
}
try { gc.call(v2); } catch (e) {}
const o32 = {
};
v2[Symbol.matchAll] = v15;
new Array(0);
o32.h = o32;
gc(o32);
