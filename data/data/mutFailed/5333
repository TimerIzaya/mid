const v4 = new Uint8Array(64);
new Int8Array(1073741823);
const v9 = new Uint16Array(v4);
const v11 = new Uint16Array(3327);
const v12 = v11.join(v9);
try { v12.concat(); } catch (e) {}
function F15(a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 354.79422861447256;
    } catch(e18) {
    }
}
const v19 = new F15(1000.0);
const v20 = new F15(354.79422861447256);
const v21 = new F15(354.79422861447256);
new Date();
const o25 = {
    "h": v21,
    9: Date,
};
v20[536870888];
class C29 {
    constructor(a31, a32) {
        let v33 = 0;
        try { this(a32); } catch (e) {}
        let v37 = 256;
        const v38 = ++v37;
        v37 ^ 2;
        Math.imul(v38, 2);
        !Math.log1p(v37);
        a32 * 2;
        do {
            const v44 = [Date,this];
            [v44];
            [v44];
            v33++;
        } while (v33 < 10)
    }
    #b = 1000.0;
    [C29];
}
const v50 = new v19("number", v19);
const v51 = new C29(v50, v50, F15, Date);
new C29(v51, v51);
class C54 extends Set {
}
new o25();
