const v3 = new Uint32Array(64);
v3.indexOf(v3, 64);
function f5(a6) {
    return a6;
}
class C9 {
    c;
    constructor(a11, a12) {
        this.c;
        -(-7);
        function F16(a18, a19, a20, a21) {
            if (!new.target) { throw 'must be called with new'; }
            const v24 = new Float64Array(1);
            v24.reverse();
        }
        new F16(F16, F16, F16, F16);
        Math.tanh(-7.268504236483766e+307);
        Math.min(692852858);
        692852858 % -7.268504236483766e+307;
        a11 * -7.268504236483766e+307;
    }
    [-1.516061710801025e+307];
    d = 2.2250738585072014e-308;
}
new C9(-7.268504236483766e+307, -1.516061710801025e+307);
new C9(-1.516061710801025e+307, -1.516061710801025e+307);
new C9(-1.516061710801025e+307, 2.2250738585072014e-308);
function F41(a43, a44, a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
    ~a44;
    a46 | a46;
    const v49 = this.constructor;
    try { new v49(); } catch (e) {}
    typeof Float32Array;
}
new F41();
let v54 = -9007199254740992;
for (let [v59,...v60] of "atan2") {
}
const v62 = new Array(v54);
class C64 extends Array {
    static n(a66, a67, a68, a69) {
        [-1.516061710801025e+307,a68,a66];
        const v71 = [1.0,Array];
        [v71,a67];
        return v71;
    }
    static [Array] = v54;
    static #n(a74, a75, a76) {
        const v77 = 1.0 == v62;
        if (v77) {
            super.at(a74);
        } else {
            new BigUint64Array(11);
            new Int16Array(1);
            new Uint16Array(1758);
        }
        return v77;
    }
}
const v88 = new C64();
const v89 = new C64();
const v90 = new C64();
function f91(a92, a93, a94, a95) {
    const o125 = {
        ...v88,
        "c": a94,
        set g(a97) {
            let [v98,v99,,v100] = v90;
            try {
                this.__proto__ = this;
                new Date(..."undefined");
                v54++;
                for (let v105 = 0; v105 < 5; v105++) {
                    const v108 = v105 >> -18321;
                    Math.log1p(v105);
                    Math.tan(v108);
                }
            } catch(e111) {
            }
            Array(a94);
            %PrepareFunctionForOptimization(Array);
            -(536870912n << 536870912n);
            class C116 {
            }
            function f117(a118, a119) {
                const o120 = {
                    "c": a119,
                    __proto__: C116,
                };
                o120.c;
                return o120;
            }
            %OptimizeFunctionOnNextCall(f117);
            Array(a94);
            Array(a94);
            %OptimizeFunctionOnNextCall(v89);
            v99(a94);
        },
    };
    return o125;
}
1000000000.0 >> 1000000000.0;
const v136 = new Uint8Array(1024);
v136.reverse();
class C140 {
    ["getPrototypeOf"] = -1.7976931348623157e+308;
}
