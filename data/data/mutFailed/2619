let v0 = Map;
const v1 = new v0();
class C2 extends v0 {
    constructor(a4, a5) {
        super(a5);
        a5[v0] = v0;
        super[a4];
        this[a5] = true;
        super.c = v0;
        v0 &&= a5;
        for (let v8 = 0; v8 < 32; v8++) {
            a5["p" + v8] = v8;
        }
    }
}
new C2(C2, C2);
const v12 = new C2(v1, v0);
new v12(v1, v1);
const v17 = [C2];
["n",[v17,v17]];
[1.5497283755562828e+308,0.03786930937778421,-3.0,419.2565361859256,-2.0,0.5862446929100771,5.0];
[0.09659919709446219,-2.220446049250313e-16,0.04732946722026887];
[0.0];
class C26 {
    get b() {
        const v28 = ("B")[21];
        try {
            const t27 = "d";
            t27.e = "B";
        } catch(e29) {
        }
        return v28;
    }
    static [2.0];
    static #g;
    g = "d";
}
new C26();
const v31 = new C26();
const v32 = new C26();
const v35 = new Uint8Array(Uint8Array);
const v38 = new BigInt64Array(1221);
let v41 = new Uint8ClampedArray(5);
try { v31(1221, v31, "d", v32); } catch (e) {}
const o43 = {
    __proto__: v35,
    "h": v35,
    "a": v38,
};
Math.clz32(-53409);
const v48 = -53409 % v41;
--v41;
-1000.0 && v48;
