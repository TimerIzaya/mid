/g\u0060/vdmy;
const v1 = /[\cZ]/gudims;
/(?:a+){0,0}/gumy;
const v5 = new BigUint64Array(39);
new Float32Array(1);
new Uint32Array(3);
function F12() {
    if (!new.target) { throw 'must be called with new'; }
}
function F14(a16) {
    if (!new.target) { throw 'must be called with new'; }
}
const v17 = new F14();
class C18 extends F12 {
}
class C21 extends v5.constructor {
    [39] = v1;
}
new C21();
function F23(a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "f", { writable: true, enumerable: true, value: a26 });
    this.f = a26;
    try {
        const v27 = [];
        class C28 {
            constructor(a30, a31, a32) {
                function f33(a34, a35, a36) {
                    v27.copyWithin();
                    let v39 = 0;
                    do {
                        const o40 = {
                        };
                        try {
                            o40.h = v17;
                        } catch(e41) {
                        }
                        try {
                            const o42 = {
                            };
                            o42.h = v17;
                            o42.e = 4096;
                        } catch(e43) {
                        }
                        const o44 = {
                        };
                        o44.h = v17;
                        o44.e = 4096;
                        o44.c = C18;
                        v39++;
                    } while (v39 < 7)
                    f33(-268435456, 0.6683462416314783, [-268435456]);
                    const v51 = this >> -268435456;
                    v51 >> this;
                    return -v51;
                }
                f33();
            }
        }
        class C55 extends C28 {
        }
        new C55();
    } catch(e57) {
    }
}
new F23();
