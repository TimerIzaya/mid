[4096,29824,-1073741824,536870889,1073741824,232102414,-1,-202470413,43815];
[-27597051,4502,128,268435439];
const v2 = [39599,-9007199254740992,268435456,-37291];
new Set();
new Int32Array(3);
new Int32Array(9);
const v16 = new BigUint64Array(16);
let v17 = -2147483648n;
class C19 {
    static m(a21) {
        ({"a":C19,"h":v17,} = this);
    }
}
const v22 = new C19();
const v23 = new C19();
class C24 {
}
function f25() {
    function f26(a27, a28) {
        [12,12];
        return v17;
    }
    return f26;
}
function f31(a32) {
    Object.defineProperty(C19, f25, { writable: true, configurable: true, value: a32 });
}
Object.defineProperty(C24, Symbol.iterator, { get: f25, set: f31 });
const o35 = {
};
o35.b = o35;
o35.b = v22;
const o36 = {
};
Object.defineProperty(o36, "b", { writable: true, value: v23 });
const v37 = new C24();
function f38(a39) {
    const o49 = {
        get b() {
        },
        toString(a42, a43, a44) {
        },
        m(a46) {
        },
        set b(a48) {
        },
    };
    return o49;
}
v37.constructor = f38;
let v50;
try { v50 = v37.constructor(); } catch (e) {}
const v51 = new C24();
const v52 = v51.__lookupGetter__;
let v53;
try { v53 = v52(); } catch (e) {}
const v54 = new C24();
const v55 = v54.constructor;
function f56() {
    return f25;
}
function f57(a58) {
    const v60 = [];
    Reflect.apply(v2.toReversed, v16, v60);
}
Object.defineProperty(v55, Symbol.iterator, { enumerable: true, get: f56, set: f57 });
new v55(C19, v50, C24, o35);
const v68 = new Float32Array();
try { v68.forEach(v53, v23); } catch (e) {}
const v72 = new BigUint64Array();
v72.constructor = f31;
let v73;
try { v73 = v72.filter(v55); } catch (e) {}
class C74 {
}
const v75 = new C74();
v75.constructor = f25;
const v76 = v75.__lookupGetter__;
try { v76(); } catch (e) {}
function f78(a79) {
    return a79;
}
const v80 = v75.constructor;
new v80(v53);
const v82 = new C74();
v82.propertyIsEnumerable(v80, v73, o36);
const v84 = new C74();
const t87 = v84.constructor;
const v86 = new t87();
const v87 = /[\11]/gm;
v87.e = Int32Array;
v87.e = v87;
const v88 = /a(?!bbb|bb)c/vi;
Object.defineProperty(v88, "toString", { value: f78 });
const v89 = v88.toString;
const v90 = new v89(BigUint64Array, 246, C19, v88, v89);
const v91 = v90.__lookupGetter__;
try { v91(); } catch (e) {}
const v94 = new Uint16Array(C24);
const v95 = v94[1];
v95 & v95;
const v99 = new Int32Array(v86, 31, 560);
v99[30];
function f101() {
    return Int32Array;
}
const v102 = f101();
function f103(a104) {
}
Object.defineProperty(v102, "e", { configurable: true, enumerable: true, set: f103 });
v102.e = v102;
const t111 = f101().e;
new t111();
