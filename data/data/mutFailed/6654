const v1 = new Date();
class C11 {
    static set c(a13) {
        -1806060647n / this;
        1.151984176728305e+308 >= -1806060647n ? 1.151984176728305e+308 : -1806060647n;
    }
    1;
    static #c = 246914.76236622757;
    static 10;
    [47159n] = "string";
    [246914.76236622757];
    static #e;
    d = "f";
    #f = 246914.76236622757;
    static [-694.9275579395614];
}
new C11();
new C11();
new C11();
[0.37122871487181996,5.153598338005542,0.06105027567675603,0.34275896408539275,-0.0,5.0];
const v22 = [-2.2250738585072014e-308];
class C26 extends WeakSet {
    static #g;
    d;
    p(a28, a29) {
        v22.toReversed();
    }
}
const v31 = new v1();
let v32 = -1.5264047652530307e+308;
let v36 = v32++;
-(--v36);
[-1.7976931348623157e+308,-2.2250738585072014e-308,1e-15,1.7976931348623157e+308,436.391218484674,984999.8983446106,-2.220446049250313e-16,-65664.25596205948,-568440.0637574068,0.6833182439703986];
gc();
110 + 110;
class C47 extends v31.constructor {
    static 257;
}
new C47();
new Int8Array("getTime");
const v51 = new Date();
const v52 = v51.getUTCDay();
v52 >>> v52;
Math.cosh();
function f56(a57, a58) {
    a57();
}
try { Promise(); } catch (e) {}
const v62 = new Promise(f56);
try { v62.then(); } catch (e) {}
const v65 = new Uint8Array();
function f66(a67, a68) {
    const o69 = {
    };
    return o69;
}
f66();
for (let v71 = 0; v71 < 25; v71++) {
    const v72 = f66();
    Object.defineProperty(v72, v71, { enumerable: true, get: f66, set: f66 });
    8 - 8;
    const v76 = new Int8Array();
    Reflect.preventExtensions(v72);
    [v76];
    v65[v72] = v72;
    gc.name = gc;
    !("sync" == "sync");
    const o84 = {
        "execution": "sync",
    };
    gc(o84);
}
