const v0 = [-9007199254740992,15,6,2147483648,-40306];
const v1 = [13,38453,1488736259,14129,-591389794,43323];
const v2 = [-54849,1073741824,-9223372036854775807,512,7,-2019034599,-536870912,-2021804392];
1266921018n << 1266921018n;
function f7(a8, a9, a10) {
    a8 >> a8;
    try { a9.push(a8); } catch (e) {}
    const o30 = {
        "h": a8,
        [v1]: v2,
        "g": -6n,
        "d": a10,
        ...a9,
        __proto__: a9,
        "a": a8,
        valueOf(a14, a15) {
            const v16 = delete this?.h;
            a14 !== v1;
            function F18(a20, a21, a22, a23) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.a = a14;
                } catch(e24) {
                }
                try {
                    this.c = a8;
                } catch(e25) {
                }
                try {
                    this.e = v2;
                } catch(e26) {
                }
            }
            new F18(1266921018n, v2, 1266921018n, a8);
            new F18(-6n, a10, 1266921018n, a8);
            new F18(a8, v16, a15, a8);
            return v16;
        },
    };
    return o30;
}
const v31 = f7(-6n, v0, v0);
const v32 = f7(-6n, v2, v0);
f7(1266921018n, v1, v1);
1000000000.0 >> 1000000000.0;
function f38() {
    return v31;
}
f38.prototype;
const v41 = new Date();
const v42 = /a(?!bbb|bb)c+/gumsy;
v42.dotAll = v42;
const v43 = /7wu(?:foo)/gudmy;
v32.b = Date;
v43.b = v43;
/F/i;
try { new Int16Array(v41, -9007199254740992n, v41); } catch (e) {}
new Int16Array(1024, v32);
function f50() {
    return f50;
}
f50.length;
const v53 = new BigUint64Array();
let v54;
try { v54 = v53.entries(); } catch (e) {}
try { v54.next(); } catch (e) {}
v53.constructor = f50;
function f56(a57, a58) {
    a57.name;
    a58.E = f50;
    a58.then = f50;
    return a58;
}
try { new Promise(v32); } catch (e) {}
new Promise(f56);
function F65() {
    if (!new.target) { throw 'must be called with new'; }
}
F65.length = F65;
class C67 extends F65 {
}
function f68() {
    const o74 = {
        [1836424012](a71, a72, a73) {
        },
    };
}
f68.length;
