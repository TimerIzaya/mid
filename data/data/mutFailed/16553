const v1 = new SharedArrayBuffer();
new BigUint64Array(8);
new NaN(227);
new Float64Array(4);
const v11 = [-5.034735835956977e+307,-385.25474675985527];
function F12(a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    const v17 = this.valueOf().constructor;
    try { new v17(v17); } catch (e) {}
    +v11;
    F12 instanceof NaN;
    try {
        v1.g = v17;
    } catch(e22) {
    }
    Int8Array.imul();
}
new F12();
new F12();
