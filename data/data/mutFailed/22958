let v1 = new Date();
function f2(a3, a4) {
    const o11 = {
        ...Date,
        __proto__: a3,
        "e": Date,
        "c": a3,
        "g": a3,
        m(a6, a7) {
            e = this;
            v1 /= a3;
            [8,411863830,7,1073741824,-128,2147483648,3,-65536,255];
            [257,2559,4,1073741824,-63160,-33416,2,-832,2,-1876436548];
            [-15,249645895,651,-6,8,6,-7065,-5320];
            return this;
        },
    };
    return o11;
}
const v12 = f2(f2, Date);
const v13 = f2(v1, v12);
const v14 = f2(Date, v13);
class C15 {
    static o(a17, a18) {
        return [] >>> v14;
    }
    constructor(a22, a23, a24, a25) {
        try {
            f2(a22, [a22,f2,v12,Date,a25]);
        } catch(e28) {
        }
    }
}
const v29 = new C15(v12, v13, v12, C15);
new C15(v1, v13, v13, Date);
new C15(v14, v13, v29, v14);
const v32 = [65536,1000,-2,-256,128,-1981575740,512,65536,129,-11];
[561614789,1,742155048,1652853268,65535,512,-1,2147483649,1];
[9007199254740992,1073741825,-15,-7219,5];
function F39() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -1052649622;
        Math.tan(v32 ** -(-7));
    } catch(e47) {
    }
}
function F48(a50, a51) {
    if (!new.target) { throw 'must be called with new'; }
    const v52 = this.constructor;
    F48.length = v52;
    try { new v52(F39, a50, F39, v52); } catch (e) {}
    new F39();
}
function f55(a56, a57, a58, a59) {
    const o60 = {
    };
}
C15(-9007199254740992);
