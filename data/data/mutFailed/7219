const v0 = [106066.97957056458,-1.4048597929636547e+308,2.0];
const v1 = [0.423198925562954,-5.0,Infinity,-1000000.0,-638.1291184099778,5.0,0.30079566995756146,3.590381067747234e+306,-1000000000.0];
const v2 = [0.21227580496600784,0.37827842403470624,1.954837946739742,NaN,0.4468298106544619,-4.08069276189436];
class C3 {
    static set e(a5) {
        let [] = v2;
        const o8 = {
            "maxByteLength": 7,
        };
        const v10 = new ArrayBuffer(5, C3);
        new Int32Array(v10);
    }
}
C3.prototype = C3;
const v13 = new C3();
new C3();
const v15 = new v13();
const v16 = v15?.constructor;
let v17;
try { v17 = new v16(); } catch (e) {}
class C18 {
    static 536870889 = v2;
    constructor(a20, a21) {
        try { this.propertyIsEnumerable(v13); } catch (e) {}
        try { a21.includes(this); } catch (e) {}
        a20[3872] = v2;
        let [] = v17;
        const o26 = {
            "maxByteLength": 536870912,
        };
        new SharedArrayBuffer(512, o26);
        try { new Float32Array(v2, v2, this); } catch (e) {}
        new Float32Array(a20);
    }
}
try { C18.bind(C3); } catch (e) {}
const v33 = new C18(C3, v2);
const v34 = v33?.constructor;
let v35;
try { v35 = new v34(C3, v13); } catch (e) {}
new C18(v33, v0);
new C18(v1, v2);
try { C18.propertyIsEnumerable(v33); } catch (e) {}
~-833400077;
function f43() {
    1073741823 - 1073741823;
    const v47 = new Int8Array(1073741823);
    try { v47.toSorted(1073741823); } catch (e) {}
    return f43;
}
const v49 = v35();
v49.name = v49;
v16();
f43();
