const v2 = new BigInt64Array(2171);
const v5 = new BigInt64Array(4046);
function f6(a7, a8) {
    a7++;
    const v10 = [];
    function F11(a13) {
        if (!new.target) { throw 'must be called with new'; }
    }
    class C14 extends F11 {
    }
    const v15 = new C14();
    const v16 = v15.constructor;
    const o17 = {
    };
    v10.length = 65535;
    for (const v19 in o17) {
    }
    let o20 = {
    };
    [,...o20] = v5;
    return v16;
}
const v23 = new Float32Array(9);
const v26 = new Float64Array(964);
function f27(a28, a29, a30) {
    const o39 = {
        "b": a28,
        m(a32, a33, a34, a35) {
            `sinh${a35}l${this}iterator`;
            return a28;
        },
        ...v2,
        __proto__: v23,
        2: Float32Array,
        [a29]: v26,
        "b": BigInt64Array,
        valueOf() {
            return [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
        },
        [2171]: a30,
        "d": a29,
    };
    return o39;
}
f27(2171, 9, 9, v26, v2, v26);
const v41 = new v23();
const v42 = [-2,257,-107178159,-35269,9223372036854775807,1203530861,-32678];
const o43 = {
};
const v45 = new Proxy(v42, o43);
v45.unshift(v41);
f27(964, 964, 964);
f27(2171, 964, 9);
const v49 = /(l{z})/s;
function F50(a52) {
    if (!new.target) { throw 'must be called with new'; }
    const v53 = this.constructor;
    try { new v53(v49); } catch (e) {}
    a52.sticky = a52;
    const t59 = [155533.8602852358,2.0];
    t59[658291203] = null;
    function F58(a60) {
        if (!new.target) { throw 'must be called with new'; }
        const v61 = this.constructor;
        try { new v61(); } catch (e) {}
        this.g = 964;
        this.g = -1;
        this.h = a60;
    }
}
new F50(v49, 964);
new F50(v49);
function f65(a66, a67) {
    class C68 {
        constructor(a70, a71) {
            const o73 = {
            };
            Float32Array(o73);
        }
    }
    for (let v75 = 0; v75 < 50; v75++) {
        new C68();
    }
    return a66;
}
new Promise(f65);
