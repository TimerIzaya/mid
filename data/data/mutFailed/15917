const v2 = new Int32Array(1351);
const v5 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v6 = [601759695];
const v7 = [1073741824,1073741823,1376142744,1073741825];
function f8(a9, a10, a11, a12) {
    const o20 = {
        ...v5,
        ..."__proto__",
        "c": a12,
        84: arguments,
        ..."__proto__",
        valueOf(a18, a19) {
            return a11;
        },
        ..."__proto__",
        4: "-1073741824",
        5: -4294967295,
        6: -268435456,
    };
    %OptimizeFunctionOnNextCall(arguments);
    try { v7["find"](..."find", a12, ...v6, ...v7); } catch (e) {}
    return a10;
}
f8();
const v25 = new Int8Array(2427);
new Int16Array(-9);
const v29 = [0.1320043234617707,-2.0,1e-15,-1000000.0,3.0,-1.7976931348623157e+308,-6125.7418824483175,-1000000000000.0];
const v30 = [811313.9411026563,0.5982341217870362];
const v31 = [1000000.0,1.0,-1000000000000.0,0.0,4.0,895.7079971154662];
const v32 = [v31,1351];
new Int8Array(16);
for (let v36 = 0; v36 < 5; v36++) {
    Math.asin(-3 ^ v36);
}
const v41 = [v32,v30,Int32Array,v2,v31];
[v25,v29,v30,v41,v2];
for (let v43 = 0; v43 < 5; v43++) {
    try { Int32Array(v30, v43, v43); } catch (e) {}
    class C47 {
    }
    C47.constructor;
    for (let [i52, i53] = (() => {
            [0.38057796469390925,-3.0,-518688.06248081743,-2.0,107.8968501375,-400463.65452600387,-222.36741891958593,-1000.0,-5.415934286194992,1000000000000.0];
            return [0, 10];
        })();
        i52 < i52;
        ) {
    }
    !v43;
    ~2427;
    Math.log2(35411);
    function f63() {
        const v65 = new Uint8ClampedArray();
        v65[2327] = v65;
        return Uint8ClampedArray;
    }
    const o66 = {
    };
    try {
        o66.f = 1351;
    } catch(e67) {
        new BigUint64Array(e67, 35411);
        class C71 {
            #o(a73) {
                for (let i75 = 0; i75 < 6;) {
                    const t65 = -15n;
                    var c = t65(this, i75);
                }
            }
        }
    }
    function f85() {
        Math.max(4.0, 4.0);
        return 4.0;
    }
    %OptimizeFunctionOnNextCall(f85);
    try {
        -9 & -9;
        const o89 = {
        };
        new Int16Array(v29, o89, v5);
        const o92 = {
        };
        o92.f = 1351;
        o92.a = v41;
    } catch(e93) {
    }
    try {
        const o94 = {
        };
        o94.f = 1351;
        o94.a = v41;
        o94.h = -33939;
    } catch(e95) {
    }
    try {
        const o96 = {
        };
        o96.f = 1351;
        o96.a = v41;
        o96.h = v30;
    } catch(e97) {
    }
    f63();
    %OptimizeFunctionOnNextCall(f63);
}
