function f0() {
    const o11 = {
        "h": "description",
        valueOf(a5, a6) {
            a5 % f0;
            const v8 = [a6];
            [a5,"Zz",-1e-15,[v8,v8,v8,this]];
            return a6;
        },
        "c": "Zz",
        "d": -1e-15,
        "b": "Zz",
    };
    function f12() {
        return f0;
    }
    Object.defineProperty(o11, "iterator", { writable: true, enumerable: true, get: f12 });
    return o11;
}
const v13 = f0();
const v14 = f0();
f0();
class C16 extends f0 {
    constructor(a18) {
        function f19() {
            function f20(a21, a22, a23, a24) {
                const o34 = {
                    __proto__: a23,
                    ...a23,
                    [a23](a26, a27, a28) {
                        function f30() {
                            return f30;
                        }
                        return "function";
                    },
                };
                return o34;
            }
            return f0;
        }
        a18[Symbol.toPrimitive] = f19;
        super();
        v13[a18];
        v13.iterator;
        const o48 = {
            [a18]() {
                let v41 = 10;
                const o47 = {
                    next() {
                        v41--;
                        const v45 = v41 == 0;
                        const o46 = {
                            "done": v45,
                            "value": v41,
                        };
                        return o46;
                    },
                };
                return o47;
            },
        };
    }
}
function f49() {
    function f50(a51) {
        Math.acosh(1073741825);
        return Math;
    }
    return f50;
}
function f55(a56) {
    new f49();
}
Object.defineProperty(C16, Symbol.toPrimitive, { get: f49, set: f55 });
const v60 = new C16(v13);
const v61 = new f0(f0);
new C16(C16);
const v63 = [v13,v13,C16,v60];
[f0,v14,v13,v61,v63];
[v63,v61,f0,v60,f0];
new Function("1532738280");
[-2,-1028678362,4,-2147483647];
const v1 = [45305,1056605501,-9007199254740990,1901290678,536870912,-2147483649,-12];
const v2 = [1073741825,301199001,-9007199254740990,1399065327,-6];
v2.p3 = v1;
v2.p3 = v2;
[-659874.4236654796,-830.5316344328239];
[-9.521760103815469,-1.0,-1000.0,-1.7976931348623157e+308,-1.1758759186308777e+308,-766.2570602550988,-79608.75736497424,9.869083486098809,-4.0];
[-1.066635636824984e+308];
[-10,-9223372036854775808,-4294967297,10,-9068,36073,-35452,321695714];
const v10 = [-1000000.0,8.679879842107336e+307,-5.0,1.0,1000000000.0,-1.0];
function f11() {
    const v13 = [-1000000000000.0,v10];
    Reflect.apply(v2.forEach, v1, v13);
    return -9.483498155934509;
}
v10.toString = f11;
v10.g = v10;
const v16 = 3.0 | v10;
v2["p" + v16] = v16;
[-729202530,65536,536870887,1078007959,512,5,129,65535,64529];
[2147483649,-3];
new Uint16Array(0);
function f24() {
    const o29 = {
        valueOf(a28) {
            return f24;
        },
        __proto__: f24,
        [-52276]: -410.8373818683839,
    };
    return o29;
}
class C32 {
    #c;
    constructor(a34, a35) {
        try {
            a35.#c /= a34;
        } catch(e37) {
        }
    }
    static 3301985676;
    static 10;
}
const v38 = new C32(-990373415, -990373415);
const v39 = new C32(-9007199254740990, C32);
let v41 = -3;
class C43 {
    static toString(a45, a46) {
        a45[1] += 6;
        a45?.[6];
        function f48(a49) {
            function f51(a52) {
                try {
                    a52.__proto__ = v38;
                    v10.concat(("fromEntries").trimRight);
                    const v59 = new BigInt64Array();
                    v59.copyWithin(0, 3779, 0);
                } catch(e61) {
                }
            }
            const v65 = new Int8Array();
            const v67 = new Set();
            const v68 = v67.delete(512);
            const v69 = new Int8Array();
            const v70 = v69[161];
            const v71 = v10.groupToMap;
            let v72;
            try { v72 = v71(); } catch (e) {}
            [288.9075242979261,,v70,[v65,v68,v72]];
            function f79(a80, a81, a82) {
                return a80;
            }
            const v83 = f79();
            class C84 extends f79 {
                static [f79];
                static 13;
                static [v83] = v83;
                static #d;
                static #h;
            }
            this.onmessage = f51;
            Object.defineProperty(v39, f51, { writable: true, configurable: true, enumerable: true, set: f51 });
            const t82 = [-2147483648,4294967295,-22931,-11,1,-763643767];
            t82[10] **= 1.0;
            class C87 {
            }
        }
        const v90 = [6];
        const o91 = {
            "arguments": v90,
            "type": "function",
        };
        new Worker(f48, o91);
        const v93 = [-2,-391505046,1239387087,-37770,536870888,8,-9007199254740991,-16204,-65536,3];
        try { v93.toLocaleString(); } catch (e) {}
        new Int8Array();
        new Uint8ClampedArray(9);
        return a45;
    }
    get e() {
        16 >> 16;
        return [-1.0,1e-15,NaN,5.0,-1.390593919008634e+308,2.2250738585072014e-308,-3.6891891067725497e+307];
        function F104(a106) {
            if (!new.target) { throw 'must be called with new'; }
        }
        -0.0 % F104;
        try {
            super.h = this;
        } catch(e109) {
        }
        try {
            v41 |= -268435456;
        } catch(e110) {
        }
        return this;
    }
}
C43.length = C43;
function f111(a112) {
    16 ^ 16;
    return 16;
}
const v115 = new C43();
v115.valueOf = f111;
const v118 = [-1000000000.0,1e-15,-9.803124315434264,-366.4099400694298,1000000000000.0,0.7347183727038488,-Infinity,2.0,0.3916117682859279,-461027.2128179858];
function f119() {
    return v118;
}
class C120 extends f119 {
    constructor(a122, a123, a124, a125) {
        super();
        const o127 = {
        };
        o127.type = f119;
        o127.execution = a123;
        gc(o127);
    }
}
const v129 = new C120();
for (let v130 = 0; v130 < 8; v130++) {
    v129.length = v130;
}
new BigInt64Array(2578);
new Uint8Array(66);
const o142 = {
    valueOf(a137) {
        const v138 = [0,0,a137,this];
        const v139 = ["65535",a137,"65535"];
        const v140 = [v139,"65535",this,v138];
        try {
            v140[0] = v140;
        } catch(e141) {
        }
        return v139;
    },
    ..."65535",
};
