const o2 = {
};
class C3 {
}
const v5 = new WeakSet();
function f6(a7) {
    const o12 = {
        set b(a9) {
            const v10 = v5.constructor;
            class C11 extends v10 {
                [a7] = a7;
                static #e = v10;
            }
        },
    };
    return a7;
}
class C14 {
    static #p(a16, a17) {
        const t19 = this.__proto__;
        delete t19?.[-8];
        this[Symbol.toPrimitive];
        return a16;
    }
    3;
    static 2;
}
const v23 = new C14();
const v25 = ([-536870912,-3592,61205]).constructor;
class C26 extends v25 {
    static 1 = v25;
}
const v27 = new C14();
new C14();
const v29 = [v27,1008180650];
const v30 = [v27,v29,v29,v23];
const t36 = /P[x\dz]*/gudmy;
t36.multiline **= 1000;
Symbol.for(Symbol);
[v30,v23];
function f36() {
    return f36;
}
class C37 extends f36 {
    constructor(a39, a40, a41, a42) {
        super();
        function f43() {
            const t47 = [];
            t47[6] = 4294967295;
            const o48 = {
                set b(a47) {
                },
                "arguments": v30,
            };
            return 4294967295;
        }
        for (let v49 = 0; v49 < 5; v49++) {
            eval();
            function f54(a55) {
                const o58 = {
                    ...65536,
                    5: 65536,
                    __proto__: a55,
                    valueOf(a57) {
                    },
                    "d": 4,
                    "g": 65536,
                    163: 4,
                };
            }
            f54.caller = f54;
            f54();
            %OptimizeFunctionOnNextCall(f54);
            f43();
            %OptimizeFunctionOnNextCall(f43);
            class C62 {
            }
            const v64 = [-1000000.0,771279.5641904315,0.0,8.299995604235331,6.625300935335886,-820.4949035918538,-602.5256799896665,0.6342705996691437,Infinity];
            const v65 = [1000000000.0,4.0,5.0,-6.555298893133851e+307];
            v65.unshift(-463330.04816285486, v64.values());
            function F68(a70, a71, a72) {
                if (!new.target) { throw 'must be called with new'; }
                a70 - a70;
                a71 == a71;
                5 >>> a70;
                a71 - a71;
                const v77 = this.constructor;
                try { new v77(a72, C62); } catch (e) {}
                a70 % a70;
                function f80(a81, a82) {
                    a81 <= v65;
                    return f80;
                }
                function F84() {
                    if (!new.target) { throw 'must be called with new'; }
                }
                const v86 = new F84();
                const v87 = new F84();
                const v88 = new F84();
                function f89(a90, a91) {
                    const o96 = {
                        "b": v88,
                        n(a93, a94) {
                            a90(v86, a91);
                            return F84;
                        },
                        "a": v87,
                    };
                    return o96;
                }
                f89();
            }
        }
    }
}
new C37();
