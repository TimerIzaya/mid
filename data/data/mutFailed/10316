function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 23643;
    } catch(e3) {
    }
    try {
        this.h = 23643;
    } catch(e4) {
    }
}
const v5 = new F0();
new F0();
const v7 = new F0();
const v8 = /8(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10p\x01+/gudm;
/((\xed\xa0\x80))\x023Bf0/vdy;
const v10 = /a*b4/vdmsy;
v10.ignoreCase;
class C12 extends F0 {
    valueOf(a14, a15) {
        F0 != v5;
        v8["exec"]("exec");
        return v7;
    }
    a = v10;
    10 = v8;
    #e = v5;
    static #h = v8;
}
const v19 = new C12();
new C12();
const v21 = new C12();
const v22 = v21[10];
const v23 = [-2,257,-107178159,-35269,9223372036854775807,1203530861,-32678];
function f24(a25) {
    v7.h;
    class C27 {
    }
    const t38 = C27.constructor;
    t38();
    return v23;
}
v23.toString = f24;
const o30 = {
};
o30.getPrototypeOf = v19;
const v32 = new Proxy(v23, o30);
function f33(a34) {
    class C36 extends Float32Array {
    }
    const v37 = new C36();
    const v39 = [v37,v37];
    return Reflect.apply(v37.reverse, v37, v39);
}
v32[Symbol.toPrimitive] = f33;
const o44 = {
    __proto__: v32,
};
function f45() {
    C12[5] ||= v22;
    return 9007199254740992n;
}
o44.toString = f45;
const v49 = o44.lastIndexOf(o30, o44, o44, Proxy, v23);
v49 <= v49;
