for (let v3 = 0; v3 < 10; v3++) {
    function f4() {
        return v3;
    }
    const v5 = [601759695];
    const v6 = [1073741824,1073741823,1376142744,1073741825];
    function f8(a9, a10, a11, a12) {
        const v14 = new Int8Array(a12);
        v6[3] = v6;
        const t9 = v14.buffer;
        t9.constructor = f4;
        try { v6["find"](..."find", a12, ...v5, ...v6, ...522675525n); } catch (e) {}
        return f4;
    }
    for (let v18 = 0; v18 < 10; v18++) {
        f8();
    }
}
new Float64Array(1239);
new BigUint64Array(4096);
function F26() {
    if (!new.target) { throw 'must be called with new'; }
    Array(19793);
}
new Uint32Array(2599);
new Uint8ClampedArray(4096);
new Int16Array(1386429407);
new Int8Array(2599);
const v48 = new Int8Array(628786973);
function F49(a51) {
    if (!new.target) { throw 'must be called with new'; }
}
const t32 = [-1024];
delete t32[4096];
const t33 = /QK/gvdimy;
t33.__proto__ = length;
new BigInt64Array(257);
let v57 = 2.220446049250313e-16;
const o62 = {
    [1239]: -352741132,
    set b(a60) {
    },
    get c() {
        return this;
    },
    "b": v57,
};
const v65 = new Float32Array(9);
new Int8Array(v65);
class C68 {
    #c = "e";
}
class C69 {
}
new C68();
const v71 = v48.__defineGetter__;
function f73() {
    class C74 {
    }
    for (let v75 = 0; v75 < 5; v75++) {
        function f76() {
            [WeakSet,WeakSet];
            return v75;
        }
        f76();
        %OptimizeFunctionOnNextCall(f76);
    }
    "p" + -13;
    return f73;
}
v57 **= v57;
new Uint16Array(96);
[,];
%PrepareFunctionForOptimization(f73);
f73();
%OptimizeFunctionOnNextCall(f73);
f73();
try { v71(); } catch (e) {}
