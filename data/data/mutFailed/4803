const v0 = [562147.1913600888,490175.7921897005,9.166622802339533e+307,0.5279368206443245,1000000000.0,471791.17784464057,-1.0];
const v1 = [327716.8072968796,-1e-15,-3.8925368788471904,0.7526738972268898,1000.0,NaN,948.1748752127073,-1000.0];
const v2 = [-1000000.0,3.504321579267614e+307,-894.3292818916697,1000.0,93118.6176662508,-1.5669995864523667,0.9070926242643491,3.6568917166452975e+307,-1.0,54.87481954488362];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = v1;
    try {
        this.d = v0;
    } catch(e6) {
    }
    try {
        this.e = a5;
    } catch(e7) {
    }
}
const v8 = new F3(v0);
new F3(v2);
new F3(v0);
[Infinity,779.5403349647165];
const v12 = [-1e-15,1000.0,0.18362188471198515,0.5326539521934216,-1e-15,1e-15,16.503260305523554,869.6105869119804,1.0];
[-639.920555786606,-1000.0,1.7976931348623157e+308];
const v20 = new BigInt64Array(205);
try { Uint16Array(205, BigInt64Array, 256); } catch (e) {}
new Uint16Array(256);
const v27 = new Float32Array(14);
const v30 = new Uint16Array(3585);
new Int32Array(9);
const v34 = v20[205];
0 >> 0;
try {
    v34.toString = v34;
} catch(e37) {
    e37.message = e37;
    v8[v12];
    const v39 = [14,65535,12,-9007199254740991,60498,9007199254740992,-772825153,30855,-5];
    [-65536,21537,2147483647,-4294967296];
    [-2147483649,-1285690769,-2,1073741824,5,285,-256];
    v39 - v39;
}
255 - 255;
Float64Array.BYTES_PER_ELEMENT;
const v47 = new Float64Array(255);
function f48(a49, a50) {
    function F51() {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v53 = new F51();
    v53.g = v53;
    return Float32Array;
}
v47.toString = f48;
function F54(a56, a57, a58, a59) {
    if (!new.target) { throw 'must be called with new'; }
    a57 >> a57;
    a59 | a59;
    try {
        v47.b = a57;
    } catch(e62) {
    }
    try {
        this.h = a56;
    } catch(e63) {
    }
}
const v64 = F54?.constructor;
try { new v64(v47); } catch (e) {}
const v66 = new F54(255, 205, 255, 205);
const v67 = new F54(255, 256, 255, 256);
new F54(255, 205, 256, 255);
const v70 = ([-Infinity,-5.577012134541006])?.filter;
try { new v70(Uint16Array); } catch (e) {}
const v72 = [-1000000000.0,5.0,872297.1015869486,-1e-15,0.2087529151028652];
[-2.220446049250313e-16,-171953.22769972356,2.220446049250313e-16,Infinity,-3.0,-4.368087235127776];
const v74 = /(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/u;
const v75 = [Infinity];
const v76 = [2.2250738585072014e-308,1.949684848262672,4.0];
Object.defineProperty(v76, 3, { enumerable: true, value: v27 });
const v77 = v76.push(v74);
const v79 = ([342.12300421344116,0.3998304334347528,-1.5569468467414895e+308,929110.7069466491,0.8403359879371063,928.8415619105033,5.0]).toStringTag;
try { v75.every(v79, v67); } catch (e) {}
v66.h >>>= v77;
v72.length;
function f83() {
    return v30;
}
Object.defineProperty(Int8Array, 1, { writable: true, enumerable: true, get: f83 });
new Int8Array(Int8Array);
const v85 = [2.220446049250313e-16,-Infinity,NaN,-1e-15,-4.0,-2.2250738585072014e-308,-742.8087895557678,-4.0,Infinity,655658.0990783614];
function f86(a87, a88) {
    class C89 {
    }
    return a88;
}
v85.toString = f86;
parseInt(v85);
