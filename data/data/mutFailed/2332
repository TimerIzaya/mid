const v0 = [-1000000.0,-2.0,-2.0,990.2547545523566,-1000000000000.0,0.4296446761349584,-977071.493082766,1.3590878591490212e+305];
const v1 = [0.7428762551506664,8.107071744029263e+307,1000000000000.0,0.0,1.4587707826130485e+308,2.2250738585072014e-308,-4.0];
const v2 = [-1e-15,-3.0,220021.4253398073,-6.843941392284524e+305];
class C3 {
    2 = v2;
    [v2] = v0;
    constructor(a5, a6) {
        super();
        try {
            a5.__proto__ = C3;
        } catch(e7) {
        }
        new C3();
    }
    static 3875531910 = v2;
    #o(a10, a11) {
        a10 - a10;
        return this;
    }
    /*
    constructor(a14, a15) {
        v2[6] >>= a14;
        super.d |= this;
        try { v2.slice(v2, this); } catch (e) {}
        class C19 {
            #d = 4096;
            static {
                this.#d;
            }
        }
    }
    */
}
const v25 = new C3(v0, v0);
new C3(v0, v2);
let v27 = new C3(v2, v25);
class C31 extends C3 {
    #e = 4294967296n;
    static a;
    constructor(a33, a34) {
        const o37 = {
            "type": "minor",
        };
        o37.b = o37;
        gc(o37);
    }
    [v0];
    static set g(a40) {
        v27 >>>= arguments;
        Math.trunc(Infinity);
        Math.floor(-1024);
        const v48 = -v1;
        const v49 = +-1024;
        v48 && v48;
        Math.expm1(-2);
        !v49;
    }
}
new C31();
new C31();
new C31();
const v58 = [-48288,15,-63536,268435456];
class C59 extends Array {
    constructor(a61, a62, a63) {
        super(a61);
    }
    static [v0];
    [15580n];
    b = 178;
    static [-1];
    #h;
}
new C59(178);
const v65 = new C59();
const v66 = new C59();
for (let i = 0; i < 5; i++) {
    v65[v58] = v66;
    -10 ^ -10;
    const v69 = [-503399.81061701436,0.07820891042711386,-100.04924869632453,-Infinity];
    const v73 = [[[-1e-15,-4.547098672084515,6.731189859503068,1000.0,1000.0,414.1111077300918,567.5737904015757],v69,v69]];
    const o74 = {
        "arguments": v73,
        "type": "function",
    };
    /a$\P{Decimal_Number}/gvdims.source;
    const v78 = new Uint8Array(178);
    let v81 = new Int32Array(Int32Array);
    const v83 = new Uint8Array(v81, v81, Int32Array);
    function f84(a85, a86, a87, a88) {
        v81++;
        const o93 = {
            "b": a85,
            ...v83,
            n(a91, a92) {
                return v81;
            },
        };
        return a87;
    }
    v78.lastIndexOf(Math.cbrt(7));
}
new Date(-9223372036854775807, -9223372036854775807, Date, -9223372036854775807);
const o100 = {
};
