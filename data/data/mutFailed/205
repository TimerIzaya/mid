let v0 = 6;
class C3 {
    constructor(a5) {
        function f6(a7, a8) {
            279493.5864913969 ** -1309462082;
            const v13 = 279493.5864913969 >> a8;
            Math.hypot(v13 & v13);
            return a5;
        }
        this.constructor = f6;
        Object.defineProperty(a5, Symbol.toPrimitive, { configurable: true, value: f6 });
        try { this.constructor("9"); } catch (e) {}
        a5 * a5;
        super["9"] = this;
        try { ("async").repeat(C3); } catch (e) {}
        const o24 = {
            "execution": "async",
            "type": "major",
        };
        gc(o24);
    }
    ["9"] = v0;
    static 4;
}
function f26(a27) {
    const v30 = new Float32Array(6);
    v30.fill();
    return v0;
}
C3[Symbol.toPrimitive] = f26;
C3.length = C3;
let v34 = new C3(949.6626913524804);
v34.valueOf = f26;
let v35 = new C3(v34);
v35[Symbol.toPrimitive] = Symbol;
const v38 = new C3("9");
v38[9] = v38;
function f39(a40, a41, a42, a43) {
    a41.valueOf = Symbol;
    a42.d = a43;
    a42.d = a42;
    const o52 = {
        "h": a41,
        __proto__: "9",
        15: v0,
        "b": v0,
        ..."9",
        "a": "9",
        ...a40,
        ..."9",
        [v35](a45, a46, a47, a48) {
            a45--;
            ({"b":v34,...v0} = this);
            const v50 = this[a41];
            v35 /= a48;
            try { new v50(a46); } catch (e) {}
            return 949.6626913524804;
        },
    };
    return o52;
}
f39.d = v0;
const v53 = f39("9", C3, f39, v35);
const v54 = f39(v35, v34, v0, v53);
v54.d = 949.6626913524804;
const v55 = f39(v54, f39, v54, v54);
v55[9];
class C57 extends C3 {
    167;
    static #d;
    a = v53;
    6 = v55;
    static #f = "9";
    set f(a59) {
        try {
            this.__proto__ = v54;
        } catch(e63) {
        }
    }
}
new C57();
new C57();
new C57();
const v70 = new Float64Array(203);
const v72 = new BigInt64Array();
v72.p21 = C3;
new Float32Array(v70);
for (let v74 = 0; v74 < 25; v74++) {
    try { ("p").big(); } catch (e) {}
    const v77 = "p" + v74;
    v77.c = v77;
    v72[v77] = v74;
}
for (let v78 = 0; v78 < 5; v78++) {
    v78 >> v78;
    v72["p" + v78] = v78;
}
const v1 = new Date();
function F2(a4, a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a4;
    } catch(e6) {
    }
}
const v7 = new F2(F2, v1);
const v8 = new F2(v1, v7);
const v9 = new F2(v7, v8);
function f10(a11, a12, a13, a14) {
    const o20 = {
        249: a14,
        "c": a14,
        n(a16, a17, a18) {
            try {
                super[a13] = a18;
            } catch(e19) {
            }
            return a12;
        },
        "h": v7,
        __proto__: a11,
        "b": a12,
        512: a13,
    };
    return o20;
}
const v21 = f10(v8, v9, v1, v1);
const v22 = f10(v9, v8, v7, v9);
[f10(v9, v1, v9, v9),v21,v22,v9,[F2]];
[v1];
const v27 = [7,3,-4294967295,-128,3,-268435456];
const o31 = {
    "execution": "async",
    "type": "minor",
};
gc(o31);
const v33 = [255,-33812,65535,-2,-9,536870889,452232014];
const v34 = [4096,5,-128,-2147483649,6];
const v35 = [v34,v34,v34,v34,v34];
const v36 = v35.groupToMap;
let v37;
try { v37 = v36(v34); } catch (e) {}
const v38 = [v27];
const v39 = [v38,v38,v33,v35];
class C40 {
    static [v33] = v39;
}
const v42 = new Int8Array();
v42[277] = v42;
let v43 = 3666;
const v44 = v43 - v43;
const v45 = v44 + v44;
let v46 = 0;
const v47 = v46++;
let v49 = BigUint64Array.length;
const v50 = v49--;
try { new Symbol(); } catch (e) {}
const v53 = new v34();
try {
    v53.__proto__ = v53;
} catch(e54) {
}
const v55 = v50 % v50;
const v56 = new BigUint64Array(v47);
const v58 = BigInt64Array.bind();
const v60 = new Set();
v60[Symbol.species] = v50;
try { v58(); } catch (e) {}
const v64 = [1000,-14,16,-11,-1413918991,-16,-374255446,-14,1000,10];
let v65;
try { v65 = v64.sort(v37); } catch (e) {}
const v66 = [-2,-391505046,1239387087,-37770,536870888,8,-9007199254740991,-16204,-65536,3];
let v67;
try { v67 = v66.toLocaleString(); } catch (e) {}
const v68 = [-9223372036854775807,1073741824,-65535,1945375758,4294967295,-9,-65537,1,-268435456];
let v69;
try { v69 = v68.push(v65); } catch (e) {}
const v70 = v69 << v69;
class C73 {
    static toString(a75, a76) {
        a75[1] += v43;
        a75?.[6];
        return a75;
    }
    get e() {
        try {
            super.h = this;
        } catch(e79) {
        }
        try {
            v43 |= -268435456;
        } catch(e80) {
        }
        return this;
    }
}
C73.length = C73;
new C73();
v70 / v70;
const t101 = "boolean";
t101[1] = "boolean";
const v84 = ("boolean").toLocaleLowerCase();
try { v84.codePointAt(); } catch (e) {}
const v87 = ("h").charAt;
try { v87(v67); } catch (e) {}
class C89 {
}
const v90 = new C89();
const t111 = v90.constructor;
const v92 = new t111(v45);
const v93 = v90.constructor;
const v95 = new Uint16Array();
v95.a = 27.69138275242267;
try { Set("defineProperty"); } catch (e) {}
const v100 = new v93(v92, v47, v93);
const t118 = v100.constructor;
new t118(v56, v55, v90, v42);
function F103(a105, a106) {
    if (!new.target) { throw 'must be called with new'; }
}
class C108 {
    #e;
    4 = "set";
}
v33[C108] = BigUint64Array;
