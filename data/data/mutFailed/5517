new WeakSet();
[536870888,536870887,1073741825,3,10000,-65536,-950257569,1000];
const v3 = [9,10,268435456];
[13238,7611,9007199254740990,-1,-256,11];
class C5 {
    static [-1] = C5;
    set g(a7) {
        function f8() {
            return a7;
        }
        this["fill"](v3, a7, a7);
    }
    static {
        this.b = this;
        const o12 = {
        };
        o12.h = o12;
        const v14 = new Proxy(this, o12);
        let v15;
        try { v15 = new v14(); } catch (e) {}
        this[3031];
        const v19 = new BigInt64Array(3);
        const v20 = v19?.some;
        try { new v20(3); } catch (e) {}
        new Uint32Array(2368);
        let v25 = 128;
        v25++;
        new v15(v25);
    }
}
try { new C5(); } catch (e) {}
const v30 = new WeakSet();
const v31 = v30?.constructor;
try { new v31(); } catch (e) {}
new C5();
new C5();
new Float32Array(7);
new Float64Array(58);
158 >= 158;
const v44 = new Int32Array(158);
268435441 + 268435441;
class C48 {
}
new C48();
7 / 4091;
const v53 = new Float32Array();
const v56 = new Float64Array(3842);
try { v56.join(v44); } catch (e) {}
class C58 {
    [9007199254740991] = v53;
}
new C58();
