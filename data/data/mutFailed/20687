class C3 {
    #c;
    static #valueOf(a5) {
        const v7 = ["-27557","-27557","raw"];
        Reflect.apply(("raw").localeCompare, a5, v7);
        super["function"] = "raw";
        function F10(a12, a13, a14) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.c = a12;
            } catch(e15) {
            }
            try {
                this.f = a14;
            } catch(e16) {
            }
        }
        new F10("-27557", a5, "-27557");
        new F10(a5, a5, a5);
        const v19 = new F10("raw", "function", this);
        return v19;
    }
}
new C3();
new C3();
new C3();
[52438,16919];
[64464,-65536,-16,512,1,-11,-1749610255,-536870912,-13,-65537];
[-65536,4294967295,-2,-15,-51531];
new Int8Array(Int8Array);
new BigUint64Array(8);
new Float64Array(2384);
function f37() {
    let v39 = 1000000000000.0;
    const v40 = v39--;
    -v40;
    let v43 = 257828.6336153492;
    v43--;
    class C46 {
        static #m(a48) {
        }
        constructor(a50) {
            const v52 = new Float32Array();
            try { v52.entries(); } catch (e) {}
            const v54 = new Uint16Array(12, -4294967296, v40);
            new Float32Array(v54, -4294967296);
        }
    }
    try { new C46(12); } catch (e) {}
    const v57 = new C46(v43);
    const v58 = new C46();
    const v59 = new C46(-4294967296);
    const v60 = [v59,C46];
    [v43,v59,v57,v59,v60];
    const v62 = [v59];
    class C63 extends C46 {
        ["raw"];
        #n(a65, a66, a67, a68) {
            return v62;
        }
    }
    const v69 = new C63();
    const v70 = v62.constructor;
    try { v70.isArray(v62); } catch (e) {}
    class C72 extends v39 {
    }
    C72.a = C72;
    const v73 = new C72();
    const v74 = v73?.constructor;
    try { new v74(); } catch (e) {}
    Object.defineProperty(v73, 65537, { value: v58 });
    try { v69.m(v60); } catch (e) {}
    const o77 = {
        "e": Uint16Array,
        __proto__: f37,
    };
    return Int32Array;
}
%PrepareFunctionForOptimization(f37);
f37();
f37();
%OptimizeFunctionOnNextCall(f37);
f37();
