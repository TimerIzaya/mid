function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    const v6 = this?.constructor;
    v6.e = v6;
    try { new a5(-143547321); } catch (e) {}
    a5 - a5;
    this.g = -1517929768;
    try {
        this.g = -1;
    } catch(e9) {
    }
    try {
        this.f = a5;
    } catch(e10) {
    }
    try {
        this.h = a5;
    } catch(e11) {
    }
}
try { F3(-143547321); } catch (e) {}
let v13;
try { v13 = F3.bind(-143547321); } catch (e) {}
try { v13(-1517929768); } catch (e) {}
const v15 = new F3(-1);
const v16 = new F3(-143547321);
v16.d = v16;
let v17 = new F3(-1);
v17.g = v17;
class C18 extends F3 {
    #p(a20, a21) {
        const v22 = a20?.[32];
        Object.defineProperty(v16, v15, { writable: true, configurable: true, value: F3 });
        try {
            a20.d = this;
        } catch(e23) {
        }
        return v22;
    }
    [-1];
    static {
        this.n = F3;
        const v25 = super[this];
        let v27;
        try { v27 = this["n"](-1517929768); } catch (e) {}
        const o28 = {
        };
        o28.e = o28;
        const v30 = new Proxy(v17, o28);
        v30.f;
        v30.e = v30;
        v17 = this;
        const o32 = {
            "e": v30,
            [-1]: v25,
            "c": v15,
            ...v27,
            65537: o28,
            __proto__: "n",
            "a": this,
            "g": this,
            ...this,
        };
    }
}
try { new C18(); } catch (e) {}
const v34 = new C18();
const v35 = new C18();
v35.g;
const v37 = new C18();
const v39 = new Map();
function f40(a41, a42, a43, a44) {
    a41 >>> a41;
    a43--;
    const o60 = {
        "c": -143547321,
        toString(a48, a49, a50, a51) {
            a49 << -1557853178;
            let v55 = a48++;
            v34.log2(v55);
            const v57 = v55++;
            Math.pow(v55, -1557853178);
            F3 ^ v57;
            return a51;
        },
        "b": v35,
        "e": v37,
        "f": a44,
    };
    try { o60.toString(v39, a41, v16, v16); } catch (e) {}
    return o60;
}
f40(-1517929768, -1517929768, F3, -1);
const v63 = f40(-1517929768, -143547321, F3, -1517929768);
v63.f;
f40(F3, -1517929768, v63, -143547321);
("HEkWL").localeCompare("isArray", "isArray");
[12,0,64,-1312994536,7496,-1564513395,-2147483649,1206343934];
[1024,-14,4097,1073741823,1296394229,65536];
[52349];
[554456.7834986853,154.70940232942576,Infinity];
[-5.0];
[-1e-15,5.0];
new Int8Array(2147483648);
new BigUint64Array(-16);
new BigInt64Array(2370);
function f18() {
    const o21 = {
        get b() {
            return -8.233575780020734;
        },
    };
    o21.undefined = -8.233575780020734;
    parseInt.EPSILON = parseInt;
    o21[parseInt.EPSILON] = f18;
    return o21;
}
const t20 = f18();
t20[Symbol.toPrimitive] = f18;
