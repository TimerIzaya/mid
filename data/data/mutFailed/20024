function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    a5[2];
    try {
        this.g = this;
    } catch(e7) {
    }
    try {
        this.d = "toStringTag";
    } catch(e8) {
    }
    try {
        this.h = "unscopables";
    } catch(e9) {
    }
}
const v10 = new F3("toStringTag");
new v10("toStringTag");
new F3("bigint");
[2,-555362455,-7,-40327,256,16,-4294967295,1684611216,-7,-65535];
([1553129872,0,-9,-53085,40055,-5388,-2147483648,1073741825,129,5])[5];
[6];
new Uint16Array(2882);
Uint8ClampedArray.d = Uint8ClampedArray;
const v22 = new Uint8ClampedArray("toStringTag");
try { v22.entries(); } catch (e) {}
new Uint16Array("toStringTag");
Array.g = Array;
function F29(a31) {
    if (!new.target) { throw 'must be called with new'; }
    function f32(a33, a34, a35) {
        function f37(a38) {
            return a33;
        }
        a34 > a31;
        f32 && a33;
        return a31;
    }
    Worker(f32);
}
-1269;
