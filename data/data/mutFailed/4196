function f0() {
    new Float64Array();
    for (const v4 in "-1") {
        const t3 = "-1";
        (delete t3?.h).__proto__;
    }
    let v8 = 0.6121357968162827;
    let [,...v10] = [1e-15,1.0,-3.0,1.43935350979979e+308,-0.0];
    v10[1] = v10;
    const t9 = "buffer";
    t9.f = "-1";
    const v11 = [-1000000.0,771279.5641904315,0.0,8.299995604235331,6.625300935335886,-820.4949035918538,-602.5256799896665,0.6342705996691437,Infinity];
    const v14 = new Uint32Array(64);
    v14.indexOf(v14, 64);
    const v16 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    function f17() {
        let v19 = Float64Array;
        const v20 = v19.toString();
        v19 = f0;
        const v21 = v16.length;
        const v22 = v21 >>> v21;
        v22 / v22;
        const o33 = {
            toString(a25, a26) {
                Reflect.construct(a25, [f17,a26,f17,f17], f0);
                let v30;
                try { v30 = ("-1").toUpperCase(); } catch (e) {}
                super[v30];
                f0 && v19;
                return f0;
            },
        };
        o33.toString();
        let v35 = -268435456;
        const v36 = v35--;
        const o37 = {
        };
        try {
            o37.g = v36;
        } catch(e38) {
        }
        try {
            const o39 = {
            };
            o39.g = v36;
            o39.e = v20;
        } catch(e40) {
        }
        try {
            const o41 = {
            };
            o41.g = v36;
            o41.e = v20;
            o41.f = f0;
        } catch(e42) {
        }
        try {
            const o43 = {
            };
            o43.g = v36;
            o43.e = v20;
            o43.f = v19;
        } catch(e44) {
        }
        const o45 = {
            "e": -4294967295,
            "e": v35,
        };
        return f0;
    }
    f17();
    try { v11.lastIndexOf(v11); } catch (e) {}
    const v48 = v11.toLocaleString();
    try { v48.search(f0); } catch (e) {}
    const o53 = {
        "b": "buffer",
        get d() {
            let v51 = super[this];
            const t78 = "-1";
            t78["-1"] = this.b;
            [v8,...v51] = "-1";
            return v51;
        },
        "f": v8,
        3: "buffer",
        140: "-1",
        "h": "-1",
    };
    return o53;
}
f0();
const v55 = f0();
f0();
class C57 {
    get b() {
        const v61 = new WeakMap();
        v61.set(Uint16Array);
        new Float32Array();
        v55.f;
        const v67 = Symbol.iterator;
        const o76 = {
            [v67]() {
                let v69 = 10;
                const o75 = {
                    next() {
                        v69--;
                        const v73 = v69 == 0;
                        const o74 = {
                            "done": v73,
                            "value": v69,
                        };
                        return o74;
                    },
                };
                return o75;
            },
        };
        return o76;
    }
}
const v77 = new C57();
new C57();
const v79 = new C57();
const v82 = v77 + v55;
C57++;
const v84 = v82 ** 1042780043;
Math.log10(v82);
~v82;
v84 & v84;
const v90 = Int16Array.prototype;
new Int16Array(1179);
new Uint16Array(6);
const v97 = new Uint8Array(1624);
v97[1044] = v97;
const o98 = {
};
o98.h = o98;
Symbol.toPrimitive;
const v101 = Symbol.isConcatSpreadable;
const v103 = new BigInt64Array();
TypeError();
try { new v90(v103, TypeError); } catch (e) {}
Object.defineProperty(o98, v101, { configurable: true, enumerable: true, value: v79 });
class C108 extends Array {
}
const v109 = new C108();
v109.concat(o98);
