class C3 {
    static {
        let v6;
        try { v6 = this["number"](-1.0, 1e-15); } catch (e) {}
        try { v6(0.668200484372443, 0.668200484372443, C3, C3); } catch (e) {}
        const t5 = "number";
        t5["number"] = 1e-15;
    }
    static get h() {
        try {
            super.valueOf(this, 1e-15, 0.668200484372443, this, -1.0);
        } catch(e10) {
        }
        this.__proto__;
        return this;
    }
}
new C3();
const v13 = new C3();
new C3(v13, v13, C3);
const v17 = new Uint8ClampedArray(1546193665);
new Uint8ClampedArray(129, 1546193665, v17, v13);
new Int32Array(255);
for (let v24 = 0; v24 < 5; v24++) {
    function f25() {
        const v27 = Symbol.keyFor();
        const o28 = {
            [v27]: f25,
        };
        return f25;
    }
    f25();
    %OptimizeFunctionOnNextCall(f25);
}
