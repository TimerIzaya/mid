const v3 = /a[bc]dT\xf0\x9f\x92\xa9/guds;
v3.length = 7;
/\c~/gdims;
const v5 = /TX/udiy;
function f6() {
    function f7() {
        const v9 = new Date(Date);
        v9.setFullYear();
        return 536870888;
    }
    return f7;
}
function f11(a12) {
    Object.defineProperty(v5, "global", { set: f6 });
}
Object.defineProperty(v5, "toString", { writable: true, configurable: true, get: f6, set: f11 });
try { v5.toString(); } catch (e) {}
new BigInt64Array(43);
BigInt64Array.BYTES_PER_ELEMENT = BigInt64Array;
new BigInt64Array(3236);
512 | 512;
try { Float32Array.from(v3); } catch (e) {}
const v24 = new Float32Array(512);
Object.defineProperty(v24, "toString", { writable: true, configurable: true, enumerable: true, value: f6 });
v24[404] = v24;
const v28 = new BigInt64Array();
function f29() {
    const v31 = v28[undefined] instanceof f29;
    const o32 = {
    };
    o32.h = o32;
    v28.h = o32;
    o32.h = v31;
    return o32;
}
%PrepareFunctionForOptimization(f29);
const o33 = {
    "apply": f29,
};
const t39 = o33.apply;
new t39();
%OptimizeFunctionOnNextCall(f29);
f29();
const v37 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v38 = [601759695];
const v39 = [1073741824,1073741823,1376142744,1073741825];
function f41(a42, a43, a44, a45) {
    a43.toString = f41;
    function f47() {
        try { ("Vre").startsWith(a43); } catch (e) {}
        const o55 = {
            "e": -4294967295,
            ...v37,
            ..."Vre",
            "c": v39,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a53, a54) {
                return "-1073741824";
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            5: -4294967295,
            6: -268435456,
        };
    }
    f47();
    %OptimizeFunctionOnNextCall(f47);
    let v58;
    try { v58 = v39["find"](..."find", a45, ...v38, ...v39, ...522675525n); } catch (e) {}
    !(v58 <= a44);
    return arguments;
}
Object.defineProperty(f41, Symbol.match, { writable: true, configurable: true, value: f11 });
for (let v63 = 0; v63 < 10; v63++) {
    f41();
}
%OptimizeFunctionOnNextCall(f41);
f41(v39, f41, 522675525n, v37);
