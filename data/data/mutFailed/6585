const v1 = new Set();
let v3 = 256;
let v4 = new Array(v3);
let v5;
try { v5 = v4.groupToMap(v4); } catch (e) {}
Object.defineProperty(v1, "d", { writable: true, configurable: true, set: Array });
let v7 = v4--;
/gos(?:a+){0,0}?/gvdsy;
const v9 = /eaHa(?:b)/gvdi;
/(?:foo)W+/gvdmy;
({"prototype":v3,...v7} = Array);
const v13 = [v4];
const v15 = Reflect.apply(v9.test, Array, v13);
function f17() {
    return v3;
}
f17.length = f17;
const v18 = [10000,1024,4294967296,1073741824,-9007199254740992,-2,9223372036854775807,-1,39998];
const v19 = [127,-42585,-53109,9,536870887,4096];
const v20 = [253504752,-128,-7,-65536,1633123449];
function f21(a22, a23) {
    a22.b = a22;
    const o33 = {
        188: a23,
        [-1]: v3,
        [v20]: a23,
        [v18]: a23,
        "c": a22,
        ...a22,
        "h": a22,
        "b": Array,
        __proto__: v18,
        [-4294967296]: v15,
        "g": v5,
        "f": a22,
        [f17](a25, a26, a27) {
            Array["isArray"]("isArray", a23, ...a25, ...v18, ...v19);
            [-128,233371624,4294967296,7833,16,-16,-1157109304,1073741824,49451,10000];
            [324108881,-20919,128,9007199254740992,-53017,-1302729609,4096,-1,1000,-4294967295];
            [44826,4294967295,0,27804,4294967295,512,-21159,38620,536870888];
            return "isArray";
        },
    };
    return o33;
}
f21(v4, 536870887);
f21(v1, -256);
f21(f21, 536870887);
42154n - 42154n;
let v40 = 1n;
v40--;
const o45 = {
    set e(a43) {
    },
};
-24886 << -24886;
