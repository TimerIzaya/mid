let v2 = 3;
class C3 {
    constructor(a5) {
        const v6 = this?.__defineSetter__;
        try { new v6(v2, 30267); } catch (e) {}
        a5--;
        let v9;
        try { v9 = this(a5); } catch (e) {}
        let v10;
        try { v10 = new v9(a5, a5, 30267, 30267, this); } catch (e) {}
        const v11 = delete this[2934];
        Math.LN10 = Math;
        Math.hypot(-1e-15);
        Math.sin(-9223372036854775807);
        const v17 = v11 + v10;
        v17 % v17;
        const v19 = v9 >> -9223372036854775807;
        v19 & v19;
    }
    #c = 268435456;
    f = 268435456;
    #a = 30267;
}
const v21 = new C3(30267);
const v22 = new C3(v2);
let v23 = ++v2;
const v24 = v23--;
try { v21.n(v23); } catch (e) {}
try { Symbol.keyFor(v24); } catch (e) {}
const v28 = Symbol.iterator;
v22[v28] = v28;
new C3(30267);
-9223372036854775808 / -9223372036854775808;
function f34() {
    return -9223372036854775808;
}
try { f34.toString(); } catch (e) {}
9007199254740991 >> 9007199254740991;
Int32Array.name;
new Int32Array(16);
Int16Array.prototype = Int16Array;
new Int16Array(188);
new Uint8Array(0);
const v52 = new Float32Array(2306);
v52.reverse();
