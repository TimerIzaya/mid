function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = -1;
    } catch(e3) {
    }
    try {
        this.h = -1;
    } catch(e4) {
    }
}
new F0();
new F0();
new F0();
const v8 = [-38686,-6,10000,-53904,-65535,48017,257,536870889];
const v9 = [-67583095,16,64];
const v10 = [-16,268435456,53406];
class C11 extends F0 {
    static set c(a13) {
        a13 ||= a13;
        class C14 {
            static 14;
            f;
            static h = v8;
        }
        const v15 = new C14();
        new v15();
        new C14();
    }
    d = v9;
    #h;
    static 128;
    #d = v9;
}
const v18 = new C11();
const v19 = new C11();
new C11();
class C21 extends C11 {
    constructor(a23, a24, a25, a26) {
        super();
        const v30 = new Int8Array(7);
        new Uint32Array(v30);
        try { new a25(v18, a25, v8); } catch (e) {}
        new Int32Array(257);
        const v38 = new Int32Array(512);
        new v38(1);
    }
    static #h = v9;
    #c = v8;
}
const v42 = new C21(v10, v19, F0, C21);
const v43 = new C21(v9, v19, v9, v42);
new C21(v9, v10, v8, v42);
let v45 = /a|b/vdy;
let v46 = /7Z(?:a?)+/gudsy;
const v47 = /\coQ/gdy;
function F48(a50) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v45;
    } catch(e51) {
    }
    try {
        this.g = a50;
    } catch(e52) {
        a50.dotAll >>= e52;
        let v53;
        try { v53 = a50(e52, v46); } catch (e) {}
        v46 = v45;
        return e52;
        v45 = v53;
    }
}
const v54 = new F48(v45);
const v55 = new F48(v46);
const v56 = new F48(v45);
class C57 extends F48 {
    static {
        super[v56] = v45;
        let v59;
        try { v59 = v46(F48); } catch (e) {}
        super.g |= v45;
        const v61 = super[v47.exec(v59)];
        try { v61(this, v61); } catch (e) {}
        v47[4];
        const v65 = v56 === v59 ? v56 : v59;
        try {
            v43.c = this;
        } catch(e66) {
            const o67 = {
                [e66]: this,
                "f": v65,
            };
            v55[Symbol.match];
        }
    }
    #h;
    static #g;
    g = v54;
    #b;
}
const v71 = new C57();
const v72 = new C57();
new C57();
[-1077398797,2,1671415104,4294967297];
function f75(a76, a77, a78) {
    function f80(a81) {
        ++a81;
    }
    this.onmessage = f80;
    try {
        this.fuck(v56, a77);
    } catch(e84) {
    }
}
const v87 = [C57,v55,v45];
const o88 = {
    "arguments": v87,
    "type": v43,
    [v47]: v87,
    "d": v72,
    __proto__: v72,
    [f75]: v71,
    "e": v45,
};
[-5,-65536,-65537,14311,14,255];
function f90(a91, a92) {
    Math.imul(3, a91 % a91).log(3);
    a92.constructor(a92);
    return f90;
}
new Promise(f90);
