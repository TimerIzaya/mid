new WeakMap();
-9007199254740991 !== -9007199254740991;
function F9(a11, a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try { a13.localeCompare("forEach"); } catch (e) {}
    a14 / a14;
    a12[3];
    try { a13.replaceAll(a12, -9007199254740991); } catch (e) {}
    a14 >>> a14;
    try {
        this.a = a13;
    } catch(e20) {
    }
    try {
        this.c = a13;
    } catch(e21) {
    }
    try {
        this.h = a11;
    } catch(e22) {
    }
}
const v23 = new F9("m", "object", "object", -21974);
v23.c = v23;
new F9("object", "m", "m", -21974);
const v25 = new F9("forEach", "object", "m", 5);
const v26 = v25.h;
const v27 = v26?.trimRight;
try { new v27(); } catch (e) {}
function f29() {
    return f29;
}
const v30 = [8.944191192251868,-1.4998894798282654e+308,4.0,-0.0,-1000000000000.0,-5.0,-2.220446049250313e-16];
v30.g = v30;
const v31 = [-5.83623517593701,-1.0,-1e-15];
const v32 = [692.912813481568,126686.58689393173];
v32.toString = f29;
-3 & -3;
-3 * -3;
let v36 = 128;
const v37 = v36--;
function f38(a39, a40) {
    function f41() {
        class C42 {
            #a;
            valueOf(a44, a45) {
            }
            toString(a47) {
            }
            static f;
        }
        const v48 = new C42();
        class C51 extends C42 {
            #n(a53, a54, a55, a56) {
                super[403343340n];
            }
            static #toString(a59, a60) {
                v48[-2126520711n] = this;
            }
        }
        return a39;
    }
    a39[Symbol.toPrimitive] = f41;
    try { a39.toLocaleString(); } catch (e) {}
    a40 & a40;
    const o70 = {
        [a39](a68, a69) {
        },
    };
    const t69 = 5;
    t69.e = o70;
    return o70;
}
try { f38(v26, v26); } catch (e) {}
const v72 = f38(v30, v36);
v72.b = v37;
v72.b = v72;
v72.e;
const v74 = f38(v32, -3);
v74.g = v74;
const v75 = f38(v31, v36);
v75.h = v75;
/j(x)(x)(x)\2/gud;
const v77 = /[\0](?:ab|cde)/vimsy;
v77.sticky = v77;
const v78 = /^xxx$/uisy;
try { v72.p(); } catch (e) {}
try { WeakMap.fontsize(-21974); } catch (e) {}
try { v75["n"](v78, "n", f38, "n"); } catch (e) {}
function f85() {
    return v75;
}
function f86(a87) {
    try { a87(v75); } catch (e) {}
}
Object.defineProperty(Uint32Array, "d", { configurable: true, get: f85, set: f86 });
Uint32Array.d = Uint32Array;
new Uint32Array(91);
4 - 4;
Int16Array.BYTES_PER_ELEMENT;
new Int16Array(4);
127 >>> 127;
const v97 = new Int16Array(127);
try { v97.reduce("object"); } catch (e) {}
