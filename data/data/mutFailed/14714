const v0 = [-9007199254740990,-1024,9007199254740992,-2147483648,-4294967295,9,1024,536870888,268435441,60544];
const v1 = [-10,6,-9007199254740991,536870888,56684,-65535,-9007199254740991,-1792208622,536870887];
[268435439,4294967296,-65537,3,-256,-50342,-536870912,61019];
const v4 = v0[v1];
try {
    v4.__proto__ = v1;
} catch(e5) {
}
-9007199254740991n !== -9007199254740991n;
5n | 5n;
const v11 = 3522 - 3522;
const v12 = v11 - v11;
Float64Array.prototype = Float64Array;
Float64Array.length = v4;
const v14 = new Float64Array(3522);
let v15;
try { v15 = v4.entries(); } catch (e) {}
const v16 = v15?.constructor;
try {
const t0 = -18525n;
new t0(v14);
} catch (e) {}
try { new v16(v15); } catch (e) {}
10 != 10;
try { new v4(v15, v15, v15); } catch (e) {}
new BigInt64Array(10);
7 << 7;
7 % 7;
new Int16Array(v12);
let v29 = 1;
v29 ^ v29;
const v31 = v29--;
v31 >> v31;
const v34 = -9513n != v29;
v34 && v34;
class C36 {
    static f;
}
C36.h = C36;
const v37 = new C36();
const v38 = v37?.constructor;
let v39;
try { v39 = new v38(); } catch (e) {}
const v40 = new v39();
v40?.constructor;
try { new v39(); } catch (e) {}
new C36();
