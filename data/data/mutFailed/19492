[-2,-14,1218694328,-3,-2060663252,268435440,6,-869828845,64];
[-4,-536870912,4294967295,4,-392617904,-756172139,-43076,9223372036854775807];
const v4 = new BigInt64Array();
const v5 = v4[205];
v5?.h;
[-4294967296,2147483648,1073741825];
const v9 = new v5();
const o13 = {
    "b": v5,
    ...v9,
    n(a11, a12) {
        return this;
    },
};
let v14 = 4294967296;
v14--;
("-9223372036854775807").lastIndexOf(-7);
const t15 = "at";
t15[1] = "at";
-0;
let v23 = -0.0;
const v24 = v23--;
v24 - v24;
0.3299354820378796 >>> 0.3299354820378796;
0.3299354820378796 >>> v14;
let v31;
try { v31 = new Array(9); } catch (e) {}
26 >>> -7;
function f34() {
    const v36 = ("D")[0];
    return v36.concat(v36);
}
const v38 = f34();
%OptimizeFunctionOnNextCall(f34);
const v39 = new Array(26);
[-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
b = v31;
const v42 = [4.0];
try { v42.some(v38); } catch (e) {}
const o46 = {
};
class C47 {
    constructor(a49) {
    }
}
new Int8Array(C47);
BigInt64Array.d = BigInt64Array;
new BigInt64Array(6);
try { Int32Array.apply(0, v24); } catch (e) {}
new Int32Array(3);
const v59 = new Uint32Array(5);
try { v59.reduce(v39); } catch (e) {}
536870912n - 536870912n;
536870912n >> 536870912n;
-(536870912n << 536870912n);
