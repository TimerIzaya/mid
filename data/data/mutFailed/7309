const v0 = [-9007199254740992,-65537,841855796,1000,-2];
const v1 = [1000,536870912,-175232322];
const v2 = [-56695,9007199254740990,-9007199254740991,-4294967297];
class C6 {
    constructor(a8, a9, a10, a11) {
        let v7 = this;
        v7[2] %= "toLowerCase";
        const v12 = super[v2];
        v7 = v1;
        ([v2,...v0,...a9,v12]).__proto__;
    }
    static {
        function f16() {
            return this;
        }
        this[268435441];
        let [] = "number";
        super["o"];
    }
}
const v19 = new C6(v2, "toLowerCase", "number", v0);
const v20 = new C6(v1, v19, v19, v1);
let v21 = new C6(v19, v19, "o", v1);
class C22 extends C6 {
    ["toLowerCase"];
    set f(a24) {
        const v25 = v20 % v20;
        ("toLowerCase")[this];
        v20[v25] = "o";
        %VerifyType(v21);
        +"number";
        --v21;
    }
    [v2] = C6;
    82 = "toLowerCase";
    1;
    static 1079;
    2884466588;
    static ["toLowerCase"];
}
new v2();
new C22();
new C22();
[-4294967295,7,128,-5,-2,3,3,2,3,663869830];
[268435440,-11,268435441,-2147483648];
[416700078,3507,536870887,10];
for (let v35 = 0; v35 < 5; v35++) {
    const o39 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o39);
}
function F41(a43, a44, a45) {
    if (!new.target) { throw 'must be called with new'; }
    Reflect.construct(Int8Array, [1126838905]);
}
new F41(F41, F41, F41);
