class C3 {
    n(a5) {
        const o6 = {
        };
        try {
            o6.c = a5;
        } catch(e7) {
        }
        try {
            const o8 = {
            };
            o8.c = a5;
            o8.b = "e";
        } catch(e9) {
        }
        try {
            const o10 = {
            };
            o10.c = a5;
            function F11() {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    const v15 = this.__proto__?.constructor;
                    try {
                    const t0 = -4;
                    new t0();
                    } catch (e) {}
                    v15[8] = this;
                    this.a = -4;
                } catch(e17) {
                }
                try {
                    this.g = -4;
                } catch(e18) {
                }
            }
            o10.b = "e";
            o10.h = this;
        } catch(e19) {
        }
        try {
            const o20 = {
            };
            this.c = a5;
            o20.b = "e";
            o20.h = a5;
        } catch(e21) {
        }
        return "e";
    }
}
const v22 = new C3();
const v23 = new C3();
const v24 = v23?.constructor;
try { new v24(); } catch (e) {}
const v26 = new C3();
function f27() {
    return v26;
}
f27.length = f27;
f27.caller = f27;
const v28 = [-0.0];
const v29 = [3.0,1.0];
let v30;
try { v30 = v29.copyWithin("m", 1239811644); } catch (e) {}
const v31 = v30?.some;
try { new v31("e"); } catch (e) {}
const v33 = v29[1];
const v34 = v33 & v33;
v34 + v34;
const v36 = [417307.7009942054,234.45612775121822];
const v38 = 2.1919234631820332e+307 | 2.1919234631820332e+307;
v38 - v38;
const v41 = NaN >>> NaN;
v41 < v41;
let v43 = 4.0;
v43--;
-4294967296 <= -4294967296;
const v49 = new Uint8Array(268435440);
function f50(a51, a52, a53, a54) {
    Set(a51);
    return v49;
}
const v57 = [1073741824,1073741823,1376142744,1073741825];
let v58;
try { v58 = v57.toSorted(f50); } catch (e) {}
let v59 = 54893;
v59--;
const v62 = new v58();
const v63 = v62?.__defineSetter__;
try { new v63(v22, v22); } catch (e) {}
const v65 = v62?.constructor;
let v66;
try { v66 = v65(BigInt64Array, v28, v43); } catch (e) {}
try { new v65(v62, v62, v23); } catch (e) {}
-1000.0;
const v71 = -4294967297n | -4294967297n;
-v71;
const v74 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
let v75 = v74[9];
v75++;
const v77 = [601759695];
const v78 = v77?.constructor;
try { new v78(v41); } catch (e) {}
let v80;
try { v80 = new v78(-128); } catch (e) {}
v77.g = v77;
function f81(a82, a83, a84, a85) {
    a82 - a82;
    a82 * a82;
    const v88 = a83 / a83;
    v88 >>> v88;
    (a82 + a82) / v63;
    const v92 = a82?.groupToMap;
    try { new v92(v59); } catch (e) {}
    function f95(a96, a97, a98) {
    }
    const o99 = {
    };
    class C101 {
        constructor(a103, a104) {
            const v105 = this.constructor;
            try { new v105(); } catch (e) {}
            this[16] >>>= 16;
        }
    }
    function f107() {
        let v108 = -4294967295;
        const v109 = v108++;
        const o120 = {
            "c": -4294967297n,
            [v109](a112, a113) {
            },
            "maxByteLength": -128,
            valueOf(a115, a116) {
                return v71;
            },
            "e": v108,
            "e": -268435456,
            "maxByteLength": v108,
            "arguments": v36,
            ...v77,
            valueOf(a118, a119) {
                return -268435456;
            },
            "c": v59,
        };
        return o120;
    }
    f107()[1000];
    %OptimizeFunctionOnNextCall(f107);
    return arguments;
}
f81.arguments = f81;
f81.h = v80;
const v123 = v66(-128, 1000.0, v62, v74);
const v124 = v123.callee(1000.0, v62);
let v125;
try { v125 = v124.isPrototypeOf(v124); } catch (e) {}
!v125;
const v127 = f81();
v127.length;
let v129;
try { v129 = v127.callee(v26, BigInt64Array, -4294967297n, v123); } catch (e) {}
v129[2] = v129;
const v130 = v129?.propertyIsEnumerable;
try { v130.apply(v36, v77); } catch (e) {}
try {
const t0 = "m";
new t0(v77);
} catch (e) {}
v124();
