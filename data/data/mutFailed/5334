function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.e = this;
    try {
        this.e = 64;
    } catch(e3) {
    }
    try {
        this.h = 64;
    } catch(e4) {
    }
    try {
        this.d = 64;
    } catch(e5) {
    }
}
new F0();
const v7 = new F0();
new F0();
[1185799620,536870887];
[536870912,37083,-4,268435456,536870887];
[2147483647,-646845111,-130364754];
new Set(59223n);
[-6028,8,34138,3,127];
const v18 = [7,9007199254740992,-4294967296];
[1757203642,-3,-4294967297,-65537,-8,-1073741824];
class C23 {
}
new C23();
new C23();
function f26() {
}
new Float32Array(1000);
new Uint8Array(58);
function F33() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v37 = Array(19793);
        for (const v38 of v37) {
        }
        const v39 = [v37,v37,v37];
        new BigUint64Array();
        const v43 = [];
        function F44() {
            if (!new.target) { throw 'must be called with new'; }
            class C46 {
            }
            for (let i49 = 0, i50 = 10;
                i49++, i49 < i50;
                (() => {
                    const v55 = [601759695];
                    function f56(a57, a58) {
                        function f59() {
                            Int8Array.b = Int8Array;
                            return f59;
                        }
                        return v7;
                    }
                    v55.valueOf = f56;
                    BigUint64Array - v55;
                    C46.__proto__;
                    const v63 = [1073741824,1073741823,1376142744,1073741825];
                    function f64(a65, a66, a67, a68) {
                        function f69() {
                            return a65;
                        }
                        function f70(a71, a72) {
                        }
                        try { f70(); } catch (e) {}
                        f70(v63, C46);
                        try { v63["find"](..."find", a68, ...v55, ...v63); } catch (e) {}
                        return C46;
                    }
                    for (let v77 = 0; v77 < 10; v77++) {
                        f64(v77, f64);
                    }
                })()) {
            }
        }
        new F44();
        new F44();
        const o83 = {
            "apply": f26,
            "call": f26,
            "construct": Array,
            "defineProperty": f26,
            "deleteProperty": f26,
            "e": Array,
            "e": f26,
            "isExtensible": Array,
            "setPrototypeOf": Array,
        };
        new Proxy(Array, o83);
        v43[65536] = v39;
        for (let v86 = 0; v86 < 50; v86++) {
        }
        const v87 = [v18,-2.2250738585072014e-308,Proxy];
        function f88() {
            return f26;
        }
        Object.defineProperty(v87, Symbol.toPrimitive, { enumerable: true, get: f88 });
        function f92(a93) {
            const o96 = {
                "maxByteLength": 65536,
            };
            const v98 = new ArrayBuffer(3, o96);
            new Uint8Array(v98);
            return 19793;
        }
        Uint16Array[Symbol.toPrimitive] = f92;
        let v103 = 536870912n;
        v103--;
        const v105 = [509174734,-30078599,-1953700757,-725509519,50139,1073741825];
        /.\P{Decimal_Number}/gvds;
        /xyz{1,32}?a\nb\bc/guy;
        class C108 {
        }
        const v109 = C108.__defineSetter__;
        try { v109(v105); } catch (e) {}
        v87 >= Uint16Array;
    } catch(e112) {
    }
}
new F33();
new F33();
