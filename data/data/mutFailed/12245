const v0 = [0,-1159553965,-14,-9007199254740992,-37316,11,1159209130,9,12];
const o1 = {
};
function f2(a3) {
    function f4() {
        return a3;
    }
}
const v5 = [4294967297,-13,12,512,2147483647,1614257240,10,64,-1073741824];
const v6 = [578157572,-16463,9007199254740992,5,65537,16,1,-1888352127,6,-1];
class C7 {
    toString(a9, a10) {
        for (let v11 = 0; v11 < 5; v11++) {
            function f12() {
                const v16 = Symbol.toPrimitive.description.codePointAt();
                ([-1.5424212036356715e+308]).shift();
                [1073741824,1073741823,1376142744,1073741825];
                return v16;
            }
            f12();
            %OptimizeFunctionOnNextCall(f12);
        }
        a10[981];
        v6.length;
        return v6;
    }
    d;
    c = v5;
    static 65537;
    static 216366636;
    3;
    static [v6];
}
const v23 = new C7();
const v24 = new C7();
const v25 = new C7();
class C26 extends C7 {
    h;
    static {
        const v28 = v23 && v23;
        function f29(a30, a31, a32, a33) {
            const o35 = {
                get c() {
                },
            };
        }
        let v36;
        try { v36 = v6(v28, this, v0); } catch (e) {}
        try { v36(v25, C7, v28, v36); } catch (e) {}
        v6 + v28;
        class C39 {
        }
        const v40 = new C39();
        function f41(a42, a43) {
            a43?.__lookupGetter__;
            a43?.constructor;
            return v40;
        }
        v6 >= v6;
    }
    2966;
    static g = v23;
    [v23];
}
new C26();
new C26();
new C26();
const v50 = /[\ca]/ms;
function f53(a54, a55) {
    const o57 = {
        get f() {
            return this;
        },
    };
    const o61 = {
        get h() {
            return a55;
        },
        [a55]: 4,
        set b(a60) {
        },
        "arguments": v5,
        ...f2,
        "d": o1,
        2778757984: a54,
        "h": 4,
    };
    return 4;
}
f53(f53, f53);
try { v23.call(-65535); } catch (e) {}
const v67 = ("536870888")[3];
const t91 = v24.constructor;
t91(128).toExponential(v67);
f53(v50, -65535);
