const v2 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
function f3() {
    function f4() {
        try {
            v2.toString = -4294967297n;
        } catch(e5) {
        }
        return -4294967297n;
    }
    return f4;
}
Object.defineProperty(v2, "valueOf", { writable: true, get: f3 });
const v6 = [601759695];
try { v6.lastIndexOf(v6); } catch (e) {}
const v8 = [1073741824,1073741823,1376142744,1073741825];
function f9() {
    return f3;
}
Object.defineProperty(v8, "toString", { configurable: true, enumerable: true, get: f9 });
try { v8.toString(); } catch (e) {}
522675525n !== 522675525n;
function f13() {
    v2.constructor;
    const o17 = {
        ..."toStringTag",
    };
    o17[1] = o17;
    try {
        v8.forEach(WeakSet);
    } catch(e19) {
    }
    const v21 = Symbol.toPrimitive;
    const o25 = {
        toString(a23, a24) {
            a23 *= v21;
            return a24;
        },
    };
    const o47 = {
        get f() {
            return -268435456;
        },
        [v21]() {
        },
        [522675525n](a30, a31) {
        },
        "c": v6,
        valueOf(a33, a34) {
            return WeakSet;
        },
        "b": -4294967295,
        [-4294967297n](a36, a37, a38, a39) {
        },
        "e": -4294967295,
        "e": -268435456,
        "maxByteLength": -4294967295,
        valueOf(a41, a42) {
            return -4294967297n;
        },
        toString(a44, a45, a46) {
            return v8;
        },
    };
    return o47;
}
%OptimizeFunctionOnNextCall(f13);
new WeakSet();
class C49 {
    constructor(a51) {
        function f52() {
            const o53 = {
                "call": f9,
                "construct": f3,
                "defineProperty": f3,
                "get": f9,
                "has": f13,
                "set": f13,
            };
            const v55 = new Proxy(this, o53);
            return v55;
        }
        Object.defineProperty(a51, "toString", { configurable: true, value: f52 });
        this[4];
        let v57;
        try { v57 = new a51(); } catch (e) {}
        function f58() {
            try { v8.toString(); } catch (e) {}
            const v62 = new Int32Array(1000);
            new Uint8ClampedArray(256);
            new Uint8Array(3001);
            return v62;
        }
        v57.toString = f58;
        const v71 = [[WeakSet,[v57,WeakSet,WeakSet,a51],this],this];
        Object.defineProperty(v71, Symbol.toPrimitive, { writable: true, configurable: true, enumerable: true, value: f52 });
        v71[1] = v71;
        let v75 = -1078666354;
        let v77 = ++v75;
        v77 >> v77;
        const v79 = Math.hypot(v71);
        v79 + v79;
        v77++;
        Math.hypot(!536870889);
    }
    4;
}
const v84 = new C49(C49);
new C49(v84);
const v86 = new C49(WeakSet);
v86[4] = v86;
2449 - 2449;
let v89 = -10;
v89++;
new Float64Array(3);
try { Math.cos(v2); } catch (e) {}
Math.log1p();
Date.valueOf = Date;
try { Date.now(); } catch (e) {}
const v100 = /7wu(?:foo)/gudmy;
v100.b = Date;
v100.b = Date;
const v103 = new Int32Array(10);
function f104(a105, a106) {
    const v108 = new WeakMap();
    const v109 = /8[\cA]v/uisy;
    function f110(a111, a112) {
        const v113 = [v109,v109,v109,v109,v109];
        v108.set(v113, v113);
        return v109;
    }
    return WeakMap;
}
v103[Symbol.toPrimitive] = f104;
v103[2] = v103;
2 < 2;
function f120() {
    return f120;
}
function f122() {
    return f13;
}
Object.defineProperty(Date, Symbol.toPrimitive, { get: f122 });
const o129 = {
    toString(a126, a127) {
        new Date(Date);
        return Date;
    },
};
o129.toString();
new Uint32Array(2);
"1532738280" == "1532738280";
new Function("1532738280");
