function F4(a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 5;
    } catch(e7) {
    }
    try {
        this.h = undefined;
    } catch(e8) {
    }
}
new F4(-2147483647);
const v10 = new F4(5);
new F4(2);
[268435439];
[-2,2147483647,57379,1869781459];
const v14 = [268435456,-922498364,536870888,-1665387569,-3,4096];
class C15 extends F4 {
    p(a17, a18) {
        function f19(a20, a21, a22, a23) {
            C15 >>> (-170673124 / -v10);
            return v10;
        }
        f19(5, a17, v14, F4);
        return f19;
    }
    c;
    #e;
    f;
}
new C15();
const v31 = new C15();
const v32 = new C15();
const v35 = new Uint16Array(209);
const v36 = 209 > Uint16Array;
try {
    v35.__proto__ = v35;
} catch(e37) {
}
let v38 = 1829;
const v40 = new undefined(v38);
Object.defineProperty(v40, v36, { writable: true, configurable: true, enumerable: true, value: v38 = 209 });
v40[8] = Uint16Array;
let v41;
try { v41 = v32(); } catch (e) {}
try { v35.forEach(v41, v41); } catch (e) {}
new Float64Array(v31);
/(\xed\xb0\x80)\x01/vdsy;
/a[a-z]/vim;
