new Array(2);
class C6 {
    valueOf(a8, a9, a10) {
        const v11 = Array.__proto__;
        a8 < 0.019313848044503756;
        Object.defineProperty(Array, Array, { configurable: true, enumerable: true, get: Array });
        const v14 = super[this]?.g;
        const o15 = {
        };
        try {
            o15.g = 2;
        } catch(e16) {
        }
        try {
            const o17 = {
            };
            o17.g = 2;
            o17.a = v14;
        } catch(e18) {
        }
        try {
            const o19 = {
            };
            o19.g = 2;
            o19.a = v14;
            a8.f = this;
        } catch(e20) {
        }
        try {
            const o21 = {
            };
            o21.g = 2;
            o21.a = v14;
            o21.f = v11;
        } catch(e22) {
        }
        return this;
    }
}
new C6();
new C6();
new C6();
[10000,-1581,-55290,-49026,-65211,-11090];
[-2,-1079736295,-2,8];
[-65537,-38876,1513,-19909];
function F32() {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, Symbol.toPrimitive, { configurable: true, enumerable: true, value: Array });
    for (let v36 = 0; v36 < 500; v36++) {
        const v38 = ("p").localeCompare();
        ("p" + v36).fontcolor(v36, v38, F32).trimLeft()[12].substring(F32, this);
    }
}
new F32();
new F32();
