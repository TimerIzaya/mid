new Map();
class C2 extends Map {
    static toString(a4, a5) {
        try {
            new Map(this);
        } catch(e7) {
        }
        const o12 = {
            "execution": "sync",
            __proto__: "sync",
            "execution": "minor",
            162: "sync",
            get c() {
                return this;
            },
            "type": "minor",
        };
        gc(o12);
        return a4;
    }
}
new C2();
new C2();
new C2();
[9007199254740992,-9223372036854775807,10,4096,-2147483649,2147483648,536870889,-839636158];
[1073741825,4096,14,1141765451,12,-9,-23243];
[-2147483649,1666690947,536870887,9223372036854775807,47499,9223372036854775807,-35740,-4294967295,6369,-65537];
class C27 {
    594532432 = -60610;
}
const v28 = new C27();
const o41 = {
    get d() {
        const v33 = Symbol.toPrimitive;
        const o40 = {
            [v33]() {
                [v28];
                for (const v39 of Array(4087)) {
                }
            },
        };
    },
};
for (let i = 0; i < 5; i++) {
    [8n];
    const t44 = [-24725,-9223372036854775807,268435439,-267077871,-63246,2147483647,-12];
    t44.length = -6;
    function f45() {
        return f45;
    }
    const v46 = /(?:a*)+q(?<a>.)/guds;
    function f47(a48) {
        const v49 = a48.constructor;
        const v51 = new Uint8ClampedArray();
        const v53 = v51 ^ 3;
        try { v49(a48, f45); } catch (e) {}
        class C55 {
        }
        return v53;
    }
    f47(v46);
    function F58(a60, a61) {
        if (!new.target) { throw 'must be called with new'; }
        const v62 = this.constructor;
        try { new v62(); } catch (e) {}
        a60--;
        a60 & a60;
    }
    const o66 = {
    };
    gc(o66);
}
