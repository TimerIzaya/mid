1 % 1;
const v7 = [-50096,4294967295,257,11570,2070802458,10,-9007199254740990];
[128];
const v9 = [-38378,-2147483649,6,61366];
const v10 = v9[1];
let v11;
try { v11 = v9.fill(129); } catch (e) {}
let v12 = 9n;
let v13 = 0;
while (v13 < 8) {
    let v16;
    try { v16 = v10(256, v9); } catch (e) {}
    try {
        v9.toString = v16;
    } catch(e17) {
    }
    v13++;
}
v12--;
1073741824n >> 1073741824n;
const v23 = 9223372036854775807n ^ 9223372036854775807n;
const o24 = {
    [v11]: 256,
    __proto__: v7,
    "h": "536870889",
};
v23 ^ v23;
let v27;
try { v27 = new WeakSet(); } catch (e) {}
try { v27.delete(v11); } catch (e) {}
new WeakSet();
for (let [v30] of v7) {
    const o31 = {
    };
    new Proxy("f", o31);
}
function f34(a35, a36) {
    try { Math.round(a36); } catch (e) {}
    try { Math.ceil(WeakSet); } catch (e) {}
    Math.tanh("536870889");
    return 256;
}
%PrepareFunctionForOptimization(f34);
f34(f34, f34);
%OptimizeFunctionOnNextCall(f34);
f34();
