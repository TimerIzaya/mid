new Float64Array(Float64Array);
if (5) {
    function F6(a8, a9) {
        if (!new.target) { throw 'must be called with new'; }
    }
    for (let v10 = 0; v10 < 5; v10++) {
        function F11(a13, a14) {
            if (!new.target) { throw 'must be called with new'; }
        }
    }
}
new Int32Array(16);
new Uint8Array(512);
let v20;
try { v20 = BigInt64Array(BigInt64Array); } catch (e) {}
const v25 = new Int16Array(1269);
for (const v26 in v25) {
}
const v29 = [];
const v30 = [];
function f31(a32, a33) {
    const o37 = {
        [-4.0]: v29,
        "h": v30,
        get e() {
            a32[1000.0] >>= -4.0;
            v20();
        },
        [227.40634637175117]: 227.40634637175117,
        [a32]: v30,
    };
    return Int32Array;
}
new Uint16Array(1471);
const v40 = [268435456,-9223372036854775807,-9111,1535857095];
const v41 = [49661,1073741824,8772,0];
v41[257] = v40;
[-14,3,4,-1201392767,4,-1930750907];
const v44 = [1000.0,-1000000000000.0,-7.943810730626244,-1.7976931348623157e+308,1.0,4.0];
try {
    v44.length = -9223372036854775808;
} catch(e45) {
}
/9f8\xf0\x9f\x92\xa9/diy;
class C52 {
    static ["22307"] = "AanB8";
    b;
}
new C52();
Float64Array["compile"]();
v41[257] *= -5;
class C57 {
    constructor(a59, a60) {
        const o63 = {
            "type": "minor",
        };
        o63.b = o63;
        gc(o63);
    }
}
