const v2 = new Set(-4294967296);
const v3 = [v2];
const v4 = v3.constructor;
try { v4.isArray(v3); } catch (e) {}
class C6 extends v4 {
}
const v7 = new Set();
const v12 = new Uint8Array(165);
v12.lastIndexOf();
("getBigInt64").normalize();
class C19 {
    g = v7;
}
new C19();
new C19();
new C19();
new BigInt64Array(66);
new Uint32Array(8);
/z/di - 101835787;
let v32 = 0;
v32++;
new Uint16Array(512);
class C35 {
}
new Set([2.220446049250313e-16,-Infinity,NaN,-1e-15,-4.0,-2.2250738585072014e-308,-742.8087895557678,-4.0,Infinity,655658.0990783614]);
function F41(a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e45) {
    }
    try {
        Math.clz32();
        new F41();
    } catch(e48) {
    }
}
new F41();
new F41();
