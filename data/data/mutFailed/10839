const v0 = /a(?=b)c/uims;
const v1 = /1/vmy;
const v2 = /q/vms;
class C6 {
    static #e = v0;
    static [v0] = 634.3856927293796;
}
new C6();
new C6();
new C6();
const v13 = [-1,-2147483647,60646,-9007199254740992,128,4096,9007199254740992,4096,34181,49785];
const v14 = [4294967296];
[21736,-2,129,17013,255087864,4096,6];
function F16(a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v2;
    } catch(e20) {
    }
    try {
        this.a = a18;
    } catch(e21) {
    }
    try {
        this.b = a18;
    } catch(e22) {
    }
}
new F16(v2, v14);
new F16(v0, v13);
const v25 = new F16(v1, v13);
v1 + (F16 + v25);
for (let v31 = 0; v31 < 5; v31++) {
    function f32() {
        const o35 = {
            "maxByteLength": 3708943833,
        };
        const v37 = new ArrayBuffer(2974, o35);
        new BigUint64Array(v37);
        const v43 = Symbol.toPrimitive.description.codePointAt();
        return v43 >> v43;
    }
    f32();
    %OptimizeFunctionOnNextCall(f32);
}
