class C3 {
    #o(a5) {
        const o6 = {
        };
        new Proxy(this, o6);
        return a5;
    }
    a;
    static #e;
    static [1.7976931348623157e+308];
    p(a10, a11) {
        try {
            a10.__proto__ = a11;
        } catch(e12) {
        }
        return a10;
    }
}
const v13 = new C3();
new C3();
const v15 = new C3();
const v19 = [v15,C3,"-331604181"];
[-4294967295,"object",-4294967295,"-331604181"];
["n",-4294967295];
class C22 {
    static #m(a24) {
    }
    set d(a26) {
        this.#m();
    }
    constructor(a29) {
        function f30() {
            return this;
        }
        Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f30 });
    }
}
const v31 = new C22();
v31.g = v31;
class C32 extends C22 {
    [v31];
    #n(a34, a35, a36, a37) {
    }
    #g;
}
const v38 = new C32();
let v39;
try { v39 = v38.m(); } catch (e) {}
class C40 {
    m(a42, a43, a44) {
        try {
            const o45 = {
            };
        } catch(e46) {
        }
    }
    static #e;
    4 = C22;
    #d = v13;
    [v39];
    g = v19;
    static 1 = -4294967295;
    #d;
    static p(a48, a49, a50) {
        try {
            a50.a = a49;
        } catch(e51) {
        }
        new Set();
        return a48;
    }
    constructor(a55, a56) {
        try {
            super.n(1.7976931348623157e+308);
        } catch(e58) {
        }
        try {
            super.getYear(a55, this);
        } catch(e60) {
        }
    }
    d;
    2497798052;
    10 = "n";
    static ["object"];
}
let v61 = new C40();
new C40();
let v63 = new C40();
const v66 = new BigInt64Array(205);
try { Uint16Array(205, BigInt64Array, 256); } catch (e) {}
new Uint16Array(256);
const v71 = v66[205];
0 >> 0;
try {
    v71.toString = v71;
} catch(e74) {
    e74.message = e74;
}
let v75 = 255;
%VerifyType(v66);
new C3();
v63 = v38;
"-331604181" >> C22;
v61 = v31;
let v78 = -7;
v78-- + 7;
function F82(a84) {
    if (!new.target) { throw 'must be called with new'; }
    0 / 0;
}
v75 - v75;
Float64Array.BYTES_PER_ELEMENT;
const v96 = new Float64Array(v75);
function F97(a99, a100, a101, a102) {
    if (!new.target) { throw 'must be called with new'; }
    const v103 = a100 >> a100;
    a102 | a102;
    try {
        v96.b = a100;
        const v106 = new WeakMap();
        const v108 = new Int8Array();
        const v110 = new Uint16Array();
        for (let i = 0; i < 5; i++) {
            if (v63 != a99) {
                Object.defineProperty(C32, "f", { value: 31146 });
                try {
                    v108.toString();
                } catch(e113) {
                }
            } else {
                v75 = v103;
            }
            [[v106,v110["values"](...v108, Int8Array, ..."values"),[]]];
        }
    } catch(e119) {
    }
    try {
        this.h = a99;
    } catch(e120) {
    }
}
const v121 = F97?.constructor;
try { new v121(v96); } catch (e) {}
const v123 = new F97(v75, 205, v75, 205);
const v124 = new F97(v75, 256, v75, 256);
new F97(v75, 205, 256, v75);
const v127 = ([-Infinity,-5.577012134541006])?.filter;
try { new v127(Uint16Array); } catch (e) {}
const v129 = [-1000000000.0,5.0,872297.1015869486,-1e-15,0.2087529151028652];
[-2.220446049250313e-16,-171953.22769972356,2.220446049250313e-16,Infinity,-3.0,-4.368087235127776];
const v131 = /(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/u;
const v132 = [Infinity];
const v134 = ([2.2250738585072014e-308,1.949684848262672,4.0]).push(v131);
const v136 = ([342.12300421344116,0.3998304334347528,-1.5569468467414895e+308,929110.7069466491,0.8403359879371063,928.8415619105033,5.0]).toStringTag;
try { v132.every(v136, v124); } catch (e) {}
v123.h >>>= v134;
v129.length;
