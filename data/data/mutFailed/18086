const v0 = [4294967297,1,-2860,-536870912,-10];
const v1 = [255,-446152002,512,1529786031,536870888,65535,9,65535,6];
const v2 = [-9223372036854775807,37725];
function f4(a5, a6, a7) {
    return true;
}
function f9() {
    return "28j";
}
Object.defineProperty(v0, v0, { writable: true, enumerable: true, value: v2 });
v1[v2] = v1;
let v13 = -12382 + -4294967297;
const v14 = (-4294967297) ** v0;
Math.abs(v13);
Math.atanh(-12382);
("D")[0].lastIndexOf("D");
const v21 = new Uint8ClampedArray(-4294967297);
v21.includes(-4294967297);
!v14;
++v13;
new Uint32Array(13);
new Uint8ClampedArray(1199);
const v33 = new Uint32Array(5);
function F34(a36, a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    this[512];
    try { a36["getUTCFullYear"](); } catch (e) {}
    ("getUTCFullYear")[!this];
    try {
        this.b = a37;
    } catch(e44) {
    }
    try {
        this.g = v1;
    } catch(e45) {
    }
    try {
        this.c = a36;
    } catch(e46) {
    }
}
new F34(v33, 1199, 13);
class C48 {
}
for (let v49 = 0; v49 < 5; v49++) {
    function f50() {
        const v52 = Symbol.toPrimitive;
        function f53() {
            const o59 = {
                m(a55) {
                    return f53;
                },
                2028393748: v52,
                "type": "28j",
                "execution": "28j",
                valueOf(a57, a58) {
                },
                0: v0,
                1064: v52,
                __proto__: C48,
                [f50]: v49,
                [-1]: 13,
            };
        }
        const v60 = [-15,-2147483649,-899333997,3,1455560807,-1024,-4294967297,2098301778];
        class C61 {
            constructor(a63) {
                function f64(a65, a66) {
                    a65[5];
                }
                f64(v60);
                f64(v0);
                f64(a63);
            }
        }
        C61.constructor;
        v52.description.codePointAt(C48);
        return Symbol;
    }
    class C75 {
        static {
            this[Symbol.hasInstance];
        }
        #p() {
            let v81;
            try { v81 = this.p(undefined, this, this, this, this); } catch (e) {}
            try {
                v81.#p(undefined, v81, v81, undefined);
            } catch(e83) {
            }
            return undefined;
        }
        static #a = undefined;
        c = undefined;
    }
    f50();
    %OptimizeFunctionOnNextCall(f50);
}
const v85 = new F34(v1, 13, 5);
new F34(v33, 5, 13);
function f88() {
    const o105 = {
        [-4294967297n](a90, a91, a92, a93) {
            function F95(a97, a98) {
                if (!new.target) { throw 'must be called with new'; }
                const v99 = this.constructor;
                try { new v99(v99); } catch (e) {}
            }
            const v101 = [1073741824,1073741823,1376142744,1073741825];
            function f102() {
                v101.forEach(a93);
            }
            eval();
        },
    };
    return f88;
}
%OptimizeFunctionOnNextCall(f88);
typeof f88(([f88,f88,f88,f88]).push(-4294967297n), /(M(?:ab|cde)VbD)/vdim) === "bigint";
v85[3];
new f88();
