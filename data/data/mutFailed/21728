function f0() {
    const o19 = {
        m(a5) {
            a5?.d;
            function f7(a8, a9) {
                function f11(a12) {
                    this[a8] = a12;
                }
                this.onmessage = f11;
                try {
                    this.__proto__ = "symbol";
                } catch(e13) {
                }
            }
            const v16 = ["symbol","function"];
            const o17 = {
                "arguments": v16,
                "type": "function",
            };
            new Worker(f7, o17);
            return o17;
        },
    };
    return o19;
}
f0();
const v21 = f0();
const v22 = f0();
class C23 {
    static valueOf(a25) {
        this[Symbol.toPrimitive] = f0;
        new f0();
        new WeakMap();
        return this;
    }
    static {
        let v31 = this;
        v31 >>>= v31;
        const v36 = 512 + v31;
        const v37 = -3.0 | v31;
        const v38 = Math.tanh(v37);
        v37 % v36;
        Math.trunc(v36);
        Math.atan2(v21, v21);
        const v42 = v21 && v21;
        v42[Symbol.toPrimitive] = f0;
        [-266.16068825974423];
        [2.220446049250313e-16,-1000000000000.0,0.9507769671509928,Infinity,1.7976931348623157e+308,-1000000000.0,632888.242234906];
        [7.906528817028757,-2.2250738585072014e-308,Infinity,-4.0,0.9958256676627999,3.321085500681926,-7.432940956656755,-1000000000.0,-3.9328430552368925,-1000000.0];
        let v50 = -4;
        const v51 = ~v38;
        v36 ** v36;
        Math.atan2(v51, v50);
        Math.sin(v42);
        const v55 = ~v50;
        v50++;
        v55 ** v38;
    }
}
new C23();
const v59 = new C23();
new C23();
function f61() {
    return v59;
}
function f65() {
    return f0;
}
class C66 extends f0 {
    static #n(a68, a69, a70, a71) {
        const v73 = new WeakMap();
        return v73;
    }
    o(a75, a76) {
        super[C23] = f0;
        const v77 = this[1];
        v22.m(f65, a76, v77, v77);
        try {
            this.c = f61;
        } catch(e79) {
        }
        return a76;
    }
    constructor(a81, a82, a83) {
        super();
        delete v21?.e;
    }
    static #h;
}
new C66();
new C66();
new C66();
function f88() {
    function f89(a90, a91) {
        a91(f89);
        return f89;
    }
    new Promise(f89);
    return Promise;
}
%PrepareFunctionForOptimization(C66);
f88();
%OptimizeFunctionOnNextCall(f88);
f88();
