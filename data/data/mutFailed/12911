const v0 = [16,7561,65535];
const v1 = [536870887,1000,-32128,4,257];
const v2 = [268435440,10,23379,30695];
function f3(a4, a5) {
    const o10 = {
        "b": v1,
        "a": a5,
        p(a7) {
            try {
                super.valueOf();
            } catch(e9) {
            }
            return this;
        },
        "g": v1,
        __proto__: v2,
        [v2]: v2,
        "e": a4,
        "d": v1,
        "f": a5,
    };
    return o10;
}
f3(v1, v0, v2, f3);
f3(v0, v0);
f3(v1, v0);
new v2(8);
const v23 = [-1727815353,-9007199254740991];
[4,13];
[45504,65537,-9007199254740992,91446022,-52533,14,11,65535,361664882,-30012];
const v29 = new Int16Array(Array);
try { v29.find(v29); } catch (e) {}
0.6822080711934364 / 0.6822080711934364;
function F36(a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    const v40 = this?.constructor;
    const v41 = v40?.constructor;
    try { new v41(v40); } catch (e) {}
    try { new v40(0.29489550717955537, a38); } catch (e) {}
    try { this.constructor(0.6822080711934364, this); } catch (e) {}
    try {
        this.f = 3.0;
    } catch(e45) {
    }
}
const v46 = F36?.constructor;
try { new v46(F36); } catch (e) {}
const v48 = new F36("string");
v48.f = v48;
let v50 = 127;
v50++;
const v52 = v50 != v50;
const v55 = new Int32Array(Int32Array);
const v56 = [];
function f57() {
    const o59 = {
        p() {
            return f57;
        },
        [v56]: v56,
        "a": v56,
    };
    const v60 = o59?.constructor;
    try { new v60(v52); } catch (e) {}
    return 8;
}
f57();
f57();
const v64 = f57();
const v65 = (a66, a67) => {
    return v64 * a67;
};
0.6058227007604853 | 0.6058227007604853;
let v71 = -Infinity;
v71++;
const v75 = new Float64Array(129);
let v76;
try { v76 = v75.entries(); } catch (e) {}
try { v76.next(); } catch (e) {}
255 - 255;
class C80 {
    static [v55] = 0.29489550717955537;
}
true || true;
const v83 = [1.6045920026493271e+308,-5.0,358.53542407847453,-4.6776659891528976,-1000.0,-Infinity];
const o85 = {
    valueOf() {
        return true;
    },
};
v83.length = o85;
class C86 {
}
const o87 = {
};
try { ("Xkz0W").split(v23, -536870912); } catch (e) {}
class C90 {
    set b(a92) {
    }
}
const v93 = new C90();
const v94 = [-Infinity,187698.93506137934,-446.4409125067523,1000000.0,-1000.0,-535.0706534930079];
try { v94(v93); } catch (e) {}
function f96(a97, a98) {
}
for (const v99 in v71) {
    function F100(a102, a103) {
        if (!new.target) { throw 'must be called with new'; }
    }
}
try {
} catch(e104) {
} finally {
}
