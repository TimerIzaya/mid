function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.a = this;
    try {
        this.a = 1022873702;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
const v7 = [v6,v5,v6,F0,v4];
const v8 = [v5,F0];
const v9 = [v8,v4,v6,v5];
[v4,v6];
[v5,v6,v8,v9];
[v7,F0,v6,v8];
const v16 = [-984503.961837067,-3.0,170.79545126331868];
[v16,v16,-984503.961837067,-3.0];
const v18 = [v16];
let v19 = -5;
class C22 {
    n(a24, a25) {
        for (; v19--;) {
            -3.0 | -9007199254740992;
            try {
                v18.e = 10;
            } catch(e29) {
            }
        }
        return v6;
    }
}
new C22();
new C22();
new v6();
const o36 = {
    "execution": "async",
    "type": "async",
};
gc(o36);
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 0;
    } catch(e3) {
    }
}
new F0();
new F0();
new F0();
function f16() {
    const o20 = {
        257: 268435439,
        "b": "o",
        "a": "bigint",
        __proto__: "o",
    };
    return o20;
}
const v21 = f16();
f16();
const v23 = f16();
const v24 = [1000.0,-5.016087683444805,NaN,-1000.0];
const v25 = [-745.7220723324123,0.21018301473003975,1.7976931348623157e+308,0.3859496770590838,-2.220446049250313e-16,-1.6133346593342317,-4.0,NaN,7.9252585356615874,-Infinity];
function f26(a27, a28, a29) {
    const o30 = {
        __proto__: v25,
    };
}
f26(v21, v21, v24);
f26(v21, v23);
f26(v23, v21);
const v35 = new Set();
const v36 = [-4294967297,-4096,512,-3,-256,-12,-55546,-1279933634,-4294967295];
const v37 = [-2147483649,-536870912,48907,-2147483647];
[-2147483647,-574757603,-41008,1073741824];
function f40() {
    return v36;
}
Date.constructor = f40;
const v44 = Date.constructor;
Date.now();
class C46 {
    c = v35;
}
new C46();
v35[Symbol.species] = C46;
Date();
new Uint16Array();
new Int8Array();
new Float64Array();
Float32Array.name = Float32Array;
const v58 = new C46();
let v60 = 0.610266531079643;
v60--;
class C64 {
    [-1248835410n] = 268435456n;
}
C64.name = C64;
function f65(a66, a67, a68) {
    const o69 = {
        "a": Date,
        [v44]: v24,
        ...Symbol,
    };
    o69[1];
}
f65(v37, v58, 0.34535591904858587);
f65(v36);
-57641.03148885199 ^ -57641.03148885199;
class C76 {
    static [38567] = -57641.03148885199;
}
const v77 = new C76();
v77.toString = Symbol;
const v78 = new C76();
[-2.0,-Infinity,1.762696690706525e+307,4.561012756948999e+307];
const v81 = [4.0,6.789772630191657e+307,1.7976931348623157e+308,1.7976931348623157e+308,-2.0,0.06136428089954615,1000000.0,-1.4205107913505,-1.730047930360128e+308,-7.329935897040107];
const v82 = [6.929526887701016,-252289.71684125415,0.0,-5.0,1000000000000.0,-1000.0];
try { v82.map(); } catch (e) {}
function F84(a86, a87, a88, a89) {
    if (!new.target) { throw 'must be called with new'; }
    a88.valueOf = f65;
    const v90 = this.constructor;
    try { new v90(-57641.03148885199, a87); } catch (e) {}
    a88 ^ a88;
}
new F84(v78, v81);
new F84(v77, v82, v77);
const o99 = {
};
gc(o99);
new Int16Array();
