function f0() {
    const o9 = {
        "e": -1000.0,
        0: 1.7976931348623157e+308,
        ...1.7976931348623157e+308,
        1: 9007199254740992,
        n(a5, a6) {
            try {
                a5.valueOf = a5;
            } catch(e7) {
            }
            a6?.[1073741823];
            return a6;
        },
        __proto__: -1000.0,
        ...9007199254740992,
    };
    return o9;
}
f0();
f0();
f0();
[-792.1748239630093,-0.6048189363040883,-3.0,2.2250738585072014e-308,1.9899573584235082,7.2290117934147595,9.606772517695646,1.2125882091771265e+308,3.0,1.7976931348623157e+308];
[37.010186222648144,-1000000000.0,0.0721431137817451,-3.328961413613987e+307,1.7976931348623157e+308,-1000000000000.0];
[-5.0,4.0,-955271.3467386123,0.22500502750267382,6.93698953880334e+307,269.76218743201866,0.0,-485.15444303182244,-3.235837997402447,559560.8038291333];
[536870912,327445256,-15,-65537,-808280510,-2100,-1450520092];
[45583,-268435456,268435440,-790838427,5,-268969394,536870888,4294967297,2147483648,-1];
[13,1073741823,1,-9223372036854775808,4096,-7];
new Uint32Array(2497);
new BigUint64Array(1095);
new Uint8Array(127);
function f29(a30) {
    new Float64Array(64);
    new Int16Array(8);
    const v39 = new Uint8ClampedArray(10);
    return v39;
}
Math[Symbol.toPrimitive] = f29;
Math.cbrt(Math);
