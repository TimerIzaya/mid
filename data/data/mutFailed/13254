function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 2147483649;
    } catch(e3) {
    }
    try {
        class C5 {
            constructor(a7, a8) {
                new Uint16Array(a7);
            }
        }
        this.b = 2147483649;
        const v12 = new Uint32Array(2091);
        for (const v14 in v12[0]) {
        }
    } catch(e15) {
    }
    try {
        this.c = 2147483649;
    } catch(e16) {
    }
}
const o20 = {
    ..."44184",
    [-15]: -15,
    2480: 9,
    ..."44184",
};
new F0();
const v22 = new F0();
new v22();
new Uint8Array(15);
16 - 16;
BigUint64Array.a;
const v31 = new BigUint64Array(16);
function F34() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        let v36 = 0;
        for (let i = 0; i < 5; i++) {
            const v37 = v36++;
            v37 + v37;
        }
        new F34();
    } catch(e40) {
    }
}
new F34();
new Float32Array(1370797479);
for (let v43 = 0; v43 < 10; v43++) {
    function F45(a47, a48) {
        if (!new.target) { throw 'must be called with new'; }
        const v49 = this?.constructor;
        try { new v49(v31, Uint8Array); } catch (e) {}
        this.b = "object";
        this.d = a48;
    }
    try { new F45(F45, 15); } catch (e) {}
    const v52 = new F45();
    const v53 = v52?.constructor;
    try { new v53(F45, 1370797479); } catch (e) {}
    const o55 = {
        ...v52,
    };
    Math.atan2(536870912, v43);
    class C59 {
        #a;
        valueOf(a61, a62) {
        }
        toString(a64) {
        }
        static f;
    }
    new C59();
}
