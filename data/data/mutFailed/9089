const v0 = [];
function f1() {
    const o8 = {
        [v0]() {
            let v6;
            try {
            const t0 = -10n;
            v6 = new t0(55118n, this, 55118n);
            } catch (e) {}
            v6[v6 ^ -10n] = v6;
            return v6;
        },
        "g": v0,
        1034076912: v0,
        "e": f1,
        "b": v0,
        ...v0,
    };
    return o8;
}
const v9 = f1();
v0();
const v11 = f1();
function F12(a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a15;
    } catch(e16) {
    }
}
const v17 = new F12(v9, F12);
new F12(v9, v17);
const v19 = new F12(v9, F12);
[v11,F12,F12,F12];
[v19,v19,v17,[v19,v0]];
[-2.220446049250313e-16,0.3280444287953729,7.214969979316258,8.551951460467052];
[-2.0,0.0,-Infinity,0.8354920688741296];
[0.21124024399976093,1.660412622135876e+308,-2.0,-5.0,-1000000000000.0,0.6137914668544792,-1000000000.0,-1000000000.0];
const v28 = new Uint8Array(165);
v28.lastIndexOf();
