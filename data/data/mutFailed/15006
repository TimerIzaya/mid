let v2 = "allSettled";
function f6() {
    return -9223372036854775807;
}
/4\p{Nd}oIa*b|c/gdiy;
const v8 = /(?!a)?a\1/ds;
const v9 = /(\xed\xb0\x80)\x01?/vdisy;
let v10;
try { v10 = v8.compile(-9223372036854775807, v9); } catch (e) {}
new BigInt64Array(4096 & v10);
const v17 = new Int32Array(90);
v17[14] = v17;
new Int32Array(90);
for (let [i25, i26] = (() => {
        0 + -9223372036854775807;
        let v23 = 10;
        v23--;
        return [1000, v23];
    })();
    (() => {
        -i25;
        const v28 = i25 < i26;
        v28 || v28;
        class C30 {
        }
        let v31;
        try { v31 = C30.call(C30); } catch (e) {}
        function f32(a33, a34, a35, a36) {
            a33 - a33;
            try { a34.apply(a36, a34); } catch (e) {}
            return 90;
        }
        v31(i26, C30);
        %OptimizeFunctionOnNextCall(v31);
        return v10;
    })();
    v2--) {
}
