const v0 = [];
class C1 {
    static toString() {
        try {
            super.m(v0, this, this, this);
        } catch(e4) {
        }
        const v5 = this[4294967295];
        try {
            v0.length = 9;
        } catch(e7) {
        }
        return v5;
    }
    a;
    [v0] = v0;
}
new C1();
new C1();
new C1();
new Int8Array(127);
new Float32Array(222);
new Uint16Array(9);
const v20 = [0.8758837218068123,-422659.698364628,-2.0,-4.194649417210787,-458.65053797119333,-351.74709265633396,1e-15,-1.7976931348623157e+308,1.4277064164988055e+308,0.29377925131953664];
[5.0,4.0,1.1471314956962098e+308,-762.4275915761169,1e-15,2.0,407.9013765618738,-1.0,1000000000000.0];
[440794.56066713086,27540.588367644697,1000000.0,-1000000000.0];
class C24 {
    #m(a26, a27) {
        function f28() {
            return a27;
        }
        super[a27] = "f";
        %VerifyType(a27);
        return f28;
    }
    static c;
}
const v29 = new C24();
const v30 = new C24();
const v31 = new C24();
class C32 {
    p(a34) {
        this.g ^= this[8];
    }
    static #n(a37, a38, a39, a40) {
        class C41 {
            4;
            static a;
        }
        C41();
        C41();
        C41();
    }
    7 = v31;
    #a = v30;
}
new C32();
new C32();
new C32();
[v31];
const v49 = [v29];
function F50() {
    if (!new.target) { throw 'must be called with new'; }
}
const v52 = new F50();
const v53 = new F50();
const v54 = new F50();
function F55(a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = v49;
    function f59(a60, a61) {
        new Float64Array(0);
        new Uint8Array(9);
        const v70 = new BigUint64Array(255);
        return v70;
    }
    Object.defineProperty(a57, Symbol.toPrimitive, { value: f59 });
    const v73 = a58?.__lookupGetter__;
    try { v73(a57); } catch (e) {}
    try { this.constructor(F55, this); } catch (e) {}
    a57.e = a57;
}
F55.arguments = F55;
const v76 = new F55(v54);
v76.e = v20;
const v77 = new F55(v76, v53);
v77.e = v52;
v77.e = v77;
("Hyo9")[1];
const t88 = 9;
t88[1] = "at";
const v82 = ([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap;
function f83(a84) {
    class C85 {
        p(a87, a88, a89, a90) {
        }
    }
    const v91 = [C85];
    const v93 = Symbol.iterator;
    v91[v93];
    return v93;
}
v82.constructor = f83;
const v95 = v82?.constructor;
try { v95(v54); } catch (e) {}
[-4.202468609045087];
const v98 = [0.8434386161503777];
try { v98.findLastIndex(v98); } catch (e) {}
const t108 = "4i";
t108[1] = "4i";
const t110 = "RpXR";
t110[1] = "RpXR";
("c")?.toLocaleUpperCase;
class C105 {
    constructor(a107) {
        Object.defineProperty(a107, "toString", { writable: true, configurable: true, value: f83 });
        ("valueOf").localeCompare(a107, "valueOf");
    }
}
const v109 = new C105();
function f110() {
    return f83;
}
function f111(a112) {
    try {
        new F55(/[^123]({)+/gds, "Hyo9");
    } catch(e115) {
    }
}
Object.defineProperty(v109, "constructor", { enumerable: true, get: f110, set: f111 });
const v116 = v109.constructor;
function f117() {
    const v118 = [-1.7976931348623157e+308,1.567547754457685];
    const v120 = new Uint32Array(v118, v118, Uint32Array);
    v120.constructor;
    return v49;
}
v116[Symbol.toPrimitive] = f117;
new v116(C105);
