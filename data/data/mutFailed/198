class C3 {
    get e() {
        return 1e-15;
    }
    static ["match"];
    3745;
    a = "match";
    static #f = "match";
    g = C3;
    static [C3];
    static 1061 = "match";
    #h = "object";
    static d = 145693.0891353658;
}
new C3();
new C3();
new C3();
[5.0,1.0];
[0.9518900649308116,1e-15,5.0];
[1.5723674266999802e+308,Infinity,4.0];
function f14() {
}
[-4096,-1073741824,65537,9007199254740990,-4096];
const v16 = [1557591051,8137,536870888,-9223372036854775808];
255 * 255;
-16 <= -16;
const v21 = v16 * v16;
const v22 = [];
try { v22.findIndex(); } catch (e) {}
const v24 = [];
[];
[];
[];
const v33 = ~f14;
v33 & -v22;
v33 >> 536870889;
class C38 {
}
new C38();
class C40 {
}
v16[13];
try { v24.flat(268435439); } catch (e) {}
v22[Symbol.search] = v21;
const v46 = new C40();
v46[594532432] = v46;
const o48 = {
};
o48.b = o48;
v46[-16];
v24[268435439];
("symbol").replace("bigint").fontsize;
class C56 {
    #a = -2;
    constructor(a58, a59) {
    }
}
for (let i = 0; i < 5; i++) {
    const o61 = {
        "type": "symbol",
        "type": "symbol",
    };
    gc();
}
1 - 1;
1978687589 + 1978687589;
const v9 = [[1,1978687589,1978687589,1978687589]];
[-1729796153,1978687589];
let v11 = 958610025;
v11--;
let v16 = 3n;
v16--;
628n >= 628n;
function F20(a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    a22--;
    a22 ^ a22;
    try {
        this.h = 628n;
    } catch(e26) {
    }
    try {
        this.f = v16;
    } catch(e27) {
    }
    try {
        this.d = a23;
    } catch(e28) {
    }
}
let v29;
try { v29 = new F20(v16, F20); } catch (e) {}
const v30 = new F20(v16);
const v31 = new F20(v16, v30);
const v32 = new F20(35294n, v30);
v32.h;
let v34 = 6;
-v34;
let v36 = v34--;
v36--;
new Int16Array(v34);
new Uint8ClampedArray(16);
const v45 = new Int32Array(2614);
function f46(a47) {
    a47 / a47;
    function f49() {
    }
    class C50 extends f49 {
        #toString(a52) {
        }
    }
    return v29;
}
v45.toString = f46;
v45[2135] = v45;
const v53 = [1000000000.0,-1000.0,-690.3798026183179,8.153290522672417e+306,2.0,-1000000.0,-1000000000.0];
try { v53.push(Int16Array); } catch (e) {}
const v55 = [172808.41555842035,6961.648758031544,-1000000000.0,-3.0,-3.473146185040173e+307,-421.3362201856155,-879.0794661120945,-5.0,-2.4710773994464814e+307,1000000000000.0];
[2.0,67588.71976092551,987444.2991633068,0.4770197645753065,1000000.0,-212679.8858953634,-1e-15,-3.0];
const v58 = 10 >> 10;
const v60 = new ReferenceError(10);
v60.g = v55;
v60.g = v60;
Uint32Array.d = v29;
let v63;
try { v63 = Uint32Array.from(1024); } catch (e) {}
try { v63.sort(v9); } catch (e) {}
const v65 = new Uint32Array(1024);
v65.toString = ReferenceError;
v65[916] = v65;
Function.length = Function;
Uint32Array.d = Uint32Array;
const v68 = new Uint32Array(10);
try { v68.set(v58); } catch (e) {}
[-1000.0,5.0,720584.9706165395,-2.220446049250313e-16];
[1.0,-7.897761779739891];
[1000000.0,5.0,1000.0,0.5082630760435969];
try {
    const v73 = new Uint32Array(v68);
    const v74 = v73?.findLastIndex;
    try { v74(v31); } catch (e) {}
    try { new v74(); } catch (e) {}
} catch(e77) {
}
const v78 = new Uint32Array(10);
v78.toString = f46;
class C82 {
    static #valueOf(a84) {
        const v87 = [2.220446049250313e-16,1e-15,-1000000000000.0];
        class C89 {
            constructor(a91, a92) {
                super[Int8Array] = v87;
            }
            #m(a94) {
            }
        }
    }
}
v78[6] = v78;
try { ("minor").indexOf(v30); } catch (e) {}
const o99 = {
    "execution": "hzB",
    "type": "minor",
};
