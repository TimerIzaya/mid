class C3 {
    ["C"] = "byteLength";
    constructor(a5, a6) {
        a5 == a5;
        try { a5["replaceAll"](); } catch (e) {}
        const o13 = {
            "execution": "async",
            "type": "minor",
        };
        const v14 = gc(o13);
        try { v14.finally(C3); } catch (e) {}
    }
}
const v16 = new C3(9007199254740990, 9007199254740990);
v16.C;
const v18 = new C3("C", 9007199254740990);
v18.C;
const v20 = new C3(v16, "C");
v20.C = v20;
-1024n ^ -1024n;
function f25(a26, a27) {
    const o28 = {
        10: a26,
        ...v20,
        "h": a27,
        [a27]: a27,
        __proto__: a26,
        ...C3,
        "c": -1024n,
        "a": 9007199254740990,
        "d": v18,
        "g": a27,
        "e": v20,
    };
    return o28;
}
f25("C", -1024n).a;
f25(C3, 14n);
const t36 = 10n;
t36(C3, 14n);
-9223372036854775808 >>> -9223372036854775808;
Uint8Array.prototype = Uint8Array;
const v38 = new Uint8Array(47108);
for (const v39 in v38) {
}
function f42(a43, a44, a45) {
    a44 & a44;
}
const v47 = f42(567768644, -4294967297, 567768644);
const o48 = {
    ...f42,
};
o48.h = o48;
const v49 = o48.d;
function F50() {
    if (!new.target) { throw 'must be called with new'; }
}
F50.e = F50;
if (v49) {
    typeof o48 === "function";
} else {
    -9223372036854775808 === v47;
}
const v56 = new F50();
const v57 = v56?.__lookupGetter__;
try { new v57(f42); } catch (e) {}
f42(567768644);
f42(-4294967297, 567768644);
const v63 = new BigInt64Array(3);
try { v63.subarray(-4294967297, v56); } catch (e) {}
const v67 = new Int8Array(2745);
v67[1112] = v67;
4 % 4;
Uint8ClampedArray.name;
new Uint8ClampedArray(4);
const v73 = [-24725,-9223372036854775807,268435439,-267077871,-63246,2147483647,-12];
v73[4];
v73.length = 99;
