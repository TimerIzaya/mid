let v2 = -15;
class C3 {
    get c() {
        ({"b":v2,} = this[-2]);
        [-1,16,-30562,-268435456,309184571,-42851,-25404];
        [12355,7558,4294967297,1972090755,64,745180604,7];
        return [-536870912];
    }
    536870889 = 48877;
    #d;
}
C3.d = 48877;
C3.d = C3;
new C3();
new C3(v2);
const v11 = new C3();
v11[536870889] = v11;
const v17 = new Array(255);
class C20 extends Array {
    static n(a22, a23, a24, a25) {
        [0.1270426937578495,a24,a22];
        const v27 = [1.0,Array];
        [v27,a23];
        return v27;
    }
    static [Array] = 255;
    static #n(a30, a31, a32) {
        const v33 = 1.0 == v17;
        if (v33) {
            super.at(a30);
        } else {
            new BigUint64Array(11);
            new Int16Array(1);
            new Uint16Array(1758);
        }
        return v33;
    }
}
const v44 = new C20();
let [v45,v46,,v47] = v44;
v46(-12);
const v53 = new Map();
function f54(a55) {
    const o62 = {
        __proto__: v53,
        "f": v53,
        ...v53,
        [v53]: -6n,
        [-6n](a57, a58, a59, a60) {
            delete v53?.size;
        },
    };
    return a55;
}
-12 | -12;
function f65(a66, a67) {
    a66 >>> a66;
    a67--;
    const o73 = {
        "f": a67,
        [a66]: -12,
        set e(a71) {
        },
    };
    return o73;
}
const v75 = f65(f65(2112393775, 2112393775), 2112393775);
const v79 = new Uint8ClampedArray(9);
new Uint8Array(v79);
class C81 extends f65 {
    static n(a83, a84, a85) {
        function f86() {
            return f86;
        }
        new Uint8Array(268435440);
        async function* f90(a91, a92, a93, a94) {
            await f65();
            yield* [];
            return a93;
        }
        new SharedArrayBuffer(35);
        let v101 = C81 & C81;
        v101++;
    }
}
C81.prototype = C81;
const v103 = new C81();
v103.b = v75;
v103.b = v103;
536870887 | 536870887;
let v107 = Math.log2();
v107--;
Object.defineProperty(v75, 4294967296, { writable: true, configurable: true, enumerable: true, value: v103 });
("o")[3];
const o112 = {
};
o112.type = 1121382760;
o112.c = o112;
gc(o112);
