function f0() {
    const v4 = [257,257,257,55852,2];
    v4.toString = f0;
    const v5 = v4[4];
    function f6(a7) {
        ("entries")["entries"]();
    }
    function f10() {
        return v5;
    }
    function f11(a12) {
        Math.atan2([], -40875);
    }
    Object.defineProperty(f6, "c", { configurable: true, get: f10, set: f11 });
    f6.c = f6;
    -2.0 >>> -2.0;
    const o39 = {
        [v4](a22, a23, a24, a25) {
            [,];
        },
        "maxByteLength": 257,
        ...-3,
        "b": -2.0,
        __proto__: -2.0,
        "e": -3,
        valueOf(a29, a30) {
            function f31() {
                return f0;
            }
            Object.defineProperty(a30, Symbol.toPrimitive, { configurable: true, enumerable: true, get: f31 });
            this.b /= a30;
            const o37 = {
                "execution": "sync",
                "type": "minor",
            };
            o37(o37);
            return -3;
        },
    };
    return o39;
}
const v40 = f0();
const v41 = f0();
const v42 = f0();
v42.e;
function f44(a45, a46) {
    a45.b = a45;
    try { a46.valueOf(a45, f44); } catch (e) {}
    const o62 = {
        __proto__: a46,
        get d() {
            new f0();
            return v42;
        },
        valueOf(a54, a55, a56) {
            delete a45[3];
            try {
                this.fuck(-1.0752072390716894e+308, -1.0752072390716894e+308, undefined, -1.0752072390716894e+308);
            } catch(e61) {
            }
            return a45;
        },
    };
    return o62;
}
function f63(a64, a65) {
    function f66() {
        for (const v70 of Array(4087, Array, Array)) {
        }
        return f66;
    }
    return a65;
}
f44.toString = f63;
const v71 = f44(v41, v42);
const v72 = f44(v41, v40);
Object.defineProperty(v72, "g", { value: v72 });
const v73 = f44(v42, v41);
new Array(447);
function F77(a79, a80) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = v72;
    a79.g = this;
    a79.b = a79;
    try {
        this.c = v40;
    } catch(e81) {
    }
    try {
        this.g = a80;
    } catch(e82) {
    }
    try {
        this.d = v72;
    } catch(e83) {
    }
}
const v84 = new F77(v72, v71);
v72.g;
new F77(v72, v71);
const v87 = new F77(v72, v73);
v87.c;
const o91 = {
    "execution": "async",
};
const v92 = gc(o91);
const o94 = {
};
Object.defineProperty(o94, "getOwnPropertyDescriptor", { enumerable: true, value: v84 });
Proxy.length;
const v97 = new Proxy(Uint8Array, o94);
v97.d = v92;
try { v97.from(Uint8Array); } catch (e) {}
v97.d = v97;
