const v3 = [10508,-1450641010];
[-1450641010,-1450641010,[268435439,v3,268435439,-1450641010],-1450641010];
[-1450641010,10508,"setUTCDate",268435439];
const v11 = ["setUTCDate",false];
[-1450641010,"E",false,v3];
new BigUint64Array(2799);
const o18 = {
};
const t8 = o18.constructor;
const v20 = t8(2799);
v20.toExponential(v20);
class C23 {
    static {
        const v25 = this.name;
        this.toString().lastIndexOf(v25);
    }
}
function f28() {
    return f28;
}
const t20 = "undefined";
const v29 = t20();
function F30() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -65536;
    } catch(e33) {
    }
    try {
        this.b = 10508;
    } catch(e34) {
    }
    try {
        this.e = -65536;
    } catch(e35) {
    }
}
const v36 = new F30();
const v37 = new v11();
new F30();
[4294967297,-9,-9007199254740990,-43006,4294967297,2147483649,-9007199254740990,7,536870888,-16];
[9];
[256,9007199254740991,-2147483649,2];
class C42 {
    static e;
    16 = -1450641010;
    e = F30;
    constructor(a44, a45) {
        try {
            a44.fuck(false, this);
        } catch(e48) {
        }
    }
}
const v49 = new C42(v37, v36);
const v51 = new WeakSet();
const v52 = v51[v49];
try { v52(); } catch (e) {}
const o54 = {
};
%VerifyType(Proxy());
let v57 = 0;
for (let i = 0; i < 5; i++) {
    for (let v58 = 0; v58 < 5; v58++) {
        try { ("p").indexOf(v29); } catch (e) {}
        try { ("p").fontcolor(v58); } catch (e) {}
        "p" + v58;
    }
    v57++;
}
