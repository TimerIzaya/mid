[945899.8986862202,-2.220446049250313e-16,9.92147116549432,-5.0,111792.7155926826,2.220446049250313e-16];
[-161681.98441573908,-0.0,-1000000000.0,-2.2250738585072014e-308,1.0,428.8742843675625];
[300821.3569476658,1000000000.0,-1e-15,-870.4567148783684,4.0,1e-15,-2.220446049250313e-16];
new Int32Array(15);
const v8 = new Int8Array(255);
const v9 = [0.00952483356421907,-3.0,2.220446049250313e-16];
function f10() {
    return f10;
}
function f11(a12) {
    return a12;
}
Object.defineProperty(v9, 1, { get: f10, set: f11 });
function f13() {
    return v9;
}
class C14 extends f13 {
}
const t18 = 15;
const v15 = new t18();
delete v15[1];
new Uint32Array(5);
const v22 = new BigInt64Array(256);
new Int8Array(1842);
const v28 = new Uint8ClampedArray(14);
class C32 {
    set e(a34) {
        Math.fround().ceil();
    }
    m(a39) {
    }
    e;
}
const v40 = new C32();
const v41 = new C32();
new C32();
let v43 = ["number","ignoreCase",v40];
[[v41,v22,"R"],C32,C32,v43];
const v49 = (1842)["9"];
C32[0] >>= v49;
let v50;
try { v50 = v49(v41, v40, "string"); } catch (e) {}
v43 = v50;
v28.buffer >>>= 15;
v8[8];
try {
    v41.e = v50;
} catch(e52) {
}
let v53 = 0;
while (v53 < 7) {
    v53++;
}
