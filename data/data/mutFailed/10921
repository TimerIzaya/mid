const v1 = new Map();
const t1 = "1768587491";
t1[7] = "1768587491";
const v7 = ("toStringTag")?.constructor;
try { v7.fromCodePoint(-1.7803405997130543e+308); } catch (e) {}
let v9;
try { v9 = new v1(Map); } catch (e) {}
try { ("n").fontcolor("n"); } catch (e) {}
[-0.5024159664209567,0.007627008852255424,213961.7999756385,-2.220446049250313e-16,-562.1847248640047,-3.0];
const v13 = [-9.41708039277316,-8.016389805234961e+307,-2.220446049250313e-16,0.788582454792234,9.996407234792947,-0.0,-5.0,2.220446049250313e-16,-407.92749138672923,8.505741506743915e+307];
const v14 = [0.4823993095428547,-5.0,1e-15,1000000000.0,236800.90396524174,-1000000000000.0,871.2830459751215,-1000.0,-386904.8300427487,Infinity];
const v15 = v14[3];
v15 == v15;
[[v14,v13,"1768587491",["toStringTag","n",-2.220446049250313e-16]],"n",-1.7803405997130543e+308,"n",-1.7803405997130543e+308];
256 - 256;
const v24 = [1000];
const v25 = [2147483647,9,268435441,-39151,7,16,-2019446363,0,4294967295,42568];
try { v25.entries(); } catch (e) {}
try { Int8Array.from("n"); } catch (e) {}
Int8Array.BYTES_PER_ELEMENT = Int8Array;
const v30 = new Int8Array(1342);
try { v30.map(v30); } catch (e) {}
Object.defineProperty(v30, v24, { writable: true, enumerable: true, value: v30 });
v9.length = 1342;
