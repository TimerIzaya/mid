const v0 = [];
let v3 = 4294967296;
v3--;
v3 >>> v3;
function f6(a7) {
    a7.valueOf = f6;
    try { a7.reduceRight(a7); } catch (e) {}
    const o14 = {
        "b": v3,
        [a7]: v3,
        ...a7,
        __proto__: a7,
        get e() {
            delete v0[8];
            const o11 = {
            };
            new Proxy(v0, o11);
            return o11;
        },
    };
    o14.toString = f6;
    return o14;
}
const v15 = f6(v0);
function f16(a17) {
    const v19 = Symbol.search;
    v0[v19] = v19;
    return a17;
}
v15.valueOf = f16;
try { v15.at(v15); } catch (e) {}
try { v15.at(v0); } catch (e) {}
const v22 = f6(536870912);
v22[536870912] = v22;
const v23 = f6(1073741824);
class C24 {
    set d(a26) {
        a26[1073741824] = this;
        %VerifyType(a26);
        %VerifyType(a26);
    }
    constructor(a28, a29) {
        function f30(a31) {
            try {
                v22.toString = a31;
            } catch(e32) {
            }
            return a31;
        }
        this.constructor = f30;
        try { this.constructor(f6, v23); } catch (e) {}
        a29 ^ a29;
        this[536870912];
        ~a28;
        !(a29 != a29);
        const v39 = a28 | a28;
        let v40 = v39 + v39;
        v40--;
        a29 = v3;
    }
    [536870912];
    static 2334775947 = v0;
    static [v23];
    static b;
}
try { new C24(v23, v0); } catch (e) {}
C24.length = C24;
const v43 = C24.name;
try { v43.sub(); } catch (e) {}
2 | 2;
const v48 = new Float32Array(2);
const v49 = v48.join(2);
v49[1] = v49;
new Uint16Array(v49);
const v52 = new C24(536870912, 1073741824);
v52[536870912] = v52;
const v53 = new C24(v3, v3);
v53[536870912];
v53[536870912] = v53;
new C24(v3, 536870912);
let v56 = -3.0;
v56++;
const v59 = -(v56 - v56);
v59 | v59;
439628.69709560834 + 439628.69709560834;
false || false;
false && false;
v56++;
const v71 = -670007143 & -670007143;
v71 - v71;
function f74() {
    return eval();
}
try { f74.bind(false); } catch (e) {}
Symbol.b = Symbol;
