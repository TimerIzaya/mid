const v1 = /LD/vds;
const v2 = /a\s/vims;
const v3 = /SO/uis;
([v1,1000.0,v2])[v3];
new BigUint64Array(1000.0);
new Uint32Array(0);
const t6 = 127;
new t6(0);
const v18 = [];
const v19 = [v18,v18];
function F20(a22) {
    if (!new.target) { throw 'must be called with new'; }
}
class C23 extends F20 {
    valueOf(a25, a26, a27, a28) {
        super[this] = F20;
        const v31 = new SharedArrayBuffer(945);
        new Int16Array(v31);
    }
}
const v34 = new C23();
const o41 = {
    set g(a36) {
    },
    [v19](a38, a39, a40) {
    },
};
v18.length = 65535;
for (const v43 in o41) {
    class C44 {
    }
    for (let v45 = 0; v45 < 5; v45++) {
        v45 * v45;
        try { ("p").substring(C44); } catch (e) {}
    }
    try { v34.valueOf(); } catch (e) {}
}
