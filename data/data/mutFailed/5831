function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 1073741824;
    } catch(e3) {
    }
    try {
        this.a = 1073741824;
    } catch(e4) {
    }
}
const v5 = new F0();
new F0();
const v7 = new F0();
const v8 = [2.3015896858188967,1000000000.0,-4.0,-0.0,-5.0,-628.4493163979861,0.7530124965463686];
const v9 = [1.0,0.9341699137680136,1.84013086413751e+307,1000000000.0,-1000000000.0];
const v10 = [7.48644009650058,0.6054442272042835,-1.5600678590602358e+308,45241.89983490622,4.408173750354168,43544.141517874086,2.2250738585072014e-308,3.0,-23.944003350040248,811.5407381193656];
v10[8] = v10;
28 + 28;
const v15 = v5 << "toUpperCase";
const v16 = v15 ^ v15;
let v17;
try { v17 = v16(v16, v5, v16, v16, v15, v5); } catch (e) {}
v17[v16] <<= 1.1922093890401552e+308;
const v19 = new Uint16Array(28);
try { v19.entries(); } catch (e) {}
Uint8ClampedArray.prototype = Uint8ClampedArray;
new Uint8ClampedArray(16);
try { new BigInt64Array(v9, v10, v8); } catch (e) {}
new BigInt64Array(2023);
let v29 = 0.3083488057663979;
v29--;
[,[,]];
const v37 = new Int8Array(1392);
v37.lastIndexOf(1392);
const v39 = [v29,v29,v29];
const v40 = [604.4479109019192,-2.220446049250313e-16,v29,v29];
const v41 = [v29,v29,v29,v29];
try { v41.push(v29); } catch (e) {}
class C43 {
    constructor(a45, a46) {
        const v47 = this?.__lookupGetter__;
        try { new v47(a45); } catch (e) {}
        ~a46[2];
        /Ia[a]/uims;
        let v52 = /W(jy2)/udy;
        v52.flags;
        const v54 = /(u4(?:a?)*)/gudimsy;
        const v57 = new Uint8Array(v54, C43);
        const v59 = new Uint32Array();
        function f60(a61, a62, a63, a64) {
            a61.length;
            a63++;
            const o70 = {
                ...v57,
                n(a68, a69) {
                    v59[a61] = v59;
                },
            };
            return o70;
        }
        try { f60(v7, Uint8Array, f60, v57); } catch (e) {}
        for (let v72 = 0; v72 < 625; v72++) {
            v72 >>> v72;
            f60(Uint8Array, 2, v72);
        }
        v52 = v54;
        for (let v75 = 0; v75 < 25; v75++) {
            v39["p" + v75] = v75;
        }
    }
}
const v78 = new C43(v39, v39);
v78.length;
const v80 = new C43(v40, v41);
v80.length;
const t75 = v80.constructor;
const v83 = new t75(604.4479109019192, v29);
const v84 = v83?.constructor;
try { new v84(v83, v78); } catch (e) {}
