class C2 {
    #g = C2;
    static #c;
}
function F3(a5, a6, a7, a8) {
    if (!new.target) { throw 'must be called with new'; }
}
const v9 = new F3(F3, F3, F3, F3);
v9.p15 = BigUint64Array;
for (let v10 = 0; v10 < 25; v10++) {
    v9["p" + v10] = v10;
}
const v13 = new BigUint64Array(1486);
new Uint8Array(129);
const v19 = new Int32Array(Int32Array);
let {...v20} = v19;
0 == 268435440n;
const v25 = new Uint8Array(204);
function f26(a27) {
    return f26;
}
function f28() {
    const v29 = [];
    v29[6] = BigUint64Array;
    let v30 = -9223372036854775808n;
    v30 %= 45725n;
    const o33 = {
        "type": "async",
    };
    v29[6] = v29;
    const o36 = {
        set b(a35) {
        },
    };
    Uint32Array[1] = 15;
    Uint16Array[1] = 204;
    Uint16Array[1] = 1486;
    return 0;
}
for (let v40 = 0; v40 < 5; v40++) {
    f28();
    %OptimizeFunctionOnNextCall(f28);
}
function f42(a43, a44, a45, a46) {
    a45.toString = f42;
    a46[Symbol.toPrimitive] = f26;
    const o78 = {
        [129]: 1486,
        n(a50, a51, a52, a53) {
            v25[a46];
            super[a43] = a50;
            function f55() {
                return f55;
            }
            function f56(a57) {
                const o73 = {
                    [a57](a59, a60) {
                        const v64 = [-2.0,272822757,"function"];
                        const o65 = {
                            __proto__: v64,
                        };
                        super[f55];
                        (268435456 >>> (268435456 % 268435456)) ^ -3.0;
                    },
                };
                return o73;
            }
            v13.byteLength;
            const o75 = {
            };
            o75.getPrototypeOf = v20;
            const v77 = new Proxy(v13, o75);
            return v77;
        },
        [a46]: a45,
        __proto__: v13,
        ...v13,
        "e": a43,
        "h": a43,
        "c": BigUint64Array,
        "f": a44,
    };
    return o78;
}
f42(1486, 204, v25, 129);
const v80 = f42(1486, 129, f42, 1486);
const v81 = f42(129, 1486, BigUint64Array, 129);
let v82 = 144;
const v83 = v82++;
v80.e;
let v85 = f42(f42, v13, v13, f42);
v85 = v81;
129 - 204;
let v87 = "n";
v81[v87](...v87, ...v87, ...v87, 204, v85, v83);
class C89 {
    constructor(a91) {
        function f92() {
            return a91;
        }
        Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f92 });
    }
    /*
    constructor(a94, a95) {
        this.propertyIsEnumerable(C89);
    }
    */
}
function f97(a98) {
    return v83;
}
const v100 = Symbol.toPrimitive;
const v101 = [-3,47741,-16128,9007199254740992,-1024,-58567,268435439,-4294967296,1807295090,-9223372036854775808];
function f102() {
    function f103() {
        return ("-4294967295").replace();
    }
    return f103;
}
function f106(a107) {
    a107 % a107;
}
Object.defineProperty(v101, "constructor", { configurable: true, get: f102, set: f106 });
v101.flat();
class C111 {
    static 9 = 9.187362692894364;
}
for (const v112 in C111) {
}
C89[v100] = f97;
const v113 = new C89();
v87 = v113;
function F114(a116, a117) {
    if (!new.target) { throw 'must be called with new'; }
    const v118 = this.constructor;
    try { new v118(); } catch (e) {}
    try { this.constructor(); } catch (e) {}
}
try {
    v100.description = "FXM3";
} catch(e124) {
}
