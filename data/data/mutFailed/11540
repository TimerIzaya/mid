let v1 = -502339166;
v1--;
let v6 = -7.754467727425789;
v6++;
const v8 = [-256,-5,-993054331,-28849];
[-11,-9223372036854775807,-817733745,9007199254740991,16,12,-16238,536870912,-4294967297,65536];
[-536870912,9007199254740991];
const v11 = [-9223372036854775808,492438848,38774,-3,-3,1073741823,1073741824,-4294967296];
[27369,768502301,-2147483649,20496,-954669128,13,1363272125,9007199254740990,1,1833996247];
[9007199254740990,-16,65536,255,536870912];
const v14 = /L/vdi;
try { v14.compile(v8, v8); } catch (e) {}
const v16 = /[^7Y[a-zA-Z0-9]?]/vdmy;
/HBa|b(EF)/vmsy;
class C18 {
}
function F20(a22, a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
}
const v26 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v27 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
for (let v29 = 0; v29 < 5; v29++) {
    -v29;
    let v31 = undefined;
    function f32() {
        let v33 = Float64Array;
        v6.a = v33;
        const v35 = v11();
        try { v35.reduceRight(v16); } catch (e) {}
        v33 = v29;
        const v37 = v26.length;
        class C39 {
        }
        const v40 = new C39();
        try { v40.constructor(); } catch (e) {}
        Symbol.toPrimitive;
        new Uint32Array(v27, v37);
        3 >>> 3;
    }
    const v47 = f32();
    %OptimizeFunctionOnNextCall(f32);
    v31 = v47;
}
