const v2 = new Float32Array(41);
const v5 = new Float64Array(93);
const v8 = v2[65537];
let v10;
try { v10 = v8["o"](v2, v8, Uint8ClampedArray); } catch (e) {}
let v11;
try { v11 = v10.some(v5); } catch (e) {}
try {
    const t8 = "o";
    t8.__proto__ = v5;
} catch(e12) {
}
const v13 = new Uint8ClampedArray(436);
function f14() {
    return v13;
}
[0.8827807505192673,-2.6005375791629586,-2.0,0.6025973945403784,593212.0973285923,-1000000000000.0,-5.498006207347624e+307];
[0.5229739254169526,-7.899293501846838e+307,4.0,850508.2393448772,682.9929209565653,-4.0,-45829.33431742678,-165.24599887336274,686.530215660991];
[5.059506236291645,-3.533690504307656,-105206.53379389388,1000000.0,-1.7976931348623157e+308];
Object.defineProperty(v13, v11, { configurable: true, enumerable: true, get: f14 });
try { ("o").trim(); } catch (e) {}
const v27 = new Int32Array(257);
[4294967296,37575,6,4294967296,3,-10];
[-4294967295,4294967297,-65537,65536];
[403781436,-26467,1024,-9007199254740990,65536];
v13["findIndex"](v13[Uint32Array]);
function f40(a41, a42, a43, a44) {
    let v46 = new Map();
    [...v46] = v27;
    let [...v47] = v27;
    return v46;
}
f40(Uint32Array, 121, v27, f40);
