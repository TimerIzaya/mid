const v3 = [0.0,0.40786030999924594,0.40786030999924594,371.0159833213204,0.40786030999924594];
const v4 = [v3];
const v5 = [0.40786030999924594,371.0159833213204,0.0];
function f6(a7, a8) {
    a7[2] = 0.40786030999924594;
    a7[2];
    const o15 = {
        9: v3,
        "a": 0.0,
        o(a11, a12) {
            v3[0];
            function f14() {
                return a7;
            }
            return a12;
        },
        [v5]: a7,
        "h": 371.0159833213204,
        "g": v3,
        ...v4,
    };
    return o15;
}
f6.g = 371.0159833213204;
f6.g = f6;
const v16 = f6(v3, 371.0159833213204);
const v17 = f6(v3, 0.0);
const v18 = f6(v4, 0.0);
function f19(a20, a21, a22) {
    a20 !== a20;
    const o29 = {
        "e": a21,
        "d": v16,
        "b": v17,
        1468: v16,
        1048: a22,
        "f": v17,
        __proto__: 0.0,
        "g": v3,
        "a": f6,
        "c": v18,
        set g(a25) {
        },
        valueOf(a27, a28) {
            return this;
        },
        232: f6,
        "h": v4,
        ...v3,
        9: a22,
    };
    return o29;
}
f19.name;
const v32 = f19(0.0, 0.0, v5)?.__lookupSetter__;
try { new v32(0.40786030999924594); } catch (e) {}
f19(0.40786030999924594, 0.40786030999924594, v4)[1468];
f19(371.0159833213204, 371.0159833213204, v5);
const v40 = Float32Array.length;
class C42 {
}
const v43 = new C42();
class C44 {
    static g = v43;
    static {
        this.d = this;
        !(delete this.g);
    }
}
function f48(a49) {
    return a49;
}
try { f48(f48); } catch (e) {}
const o53 = {
    "type": "function",
};
o53.d = o53;
const v54 = new Worker(f48, o53);
v54.terminateAndWait();
let v56;
try { v56 = C44.bind(v43); } catch (e) {}
try { v56(); } catch (e) {}
function f59() {
    return 536870912n << 536870912n;
}
BigInt64Array.toString = f59;
const v64 = Symbol("bZ");
Float64Array[Symbol.iterator] = Symbol;
const v69 = new Float64Array(Float64Array);
for (const v70 in v69) {
    try { v70.strike(); } catch (e) {}
}
class C75 {
    static {
        this || "-176972982";
    }
    #b = "-176972982";
    constructor(a82) {
        let v83 = "atan2";
        try { a82[v83](2.220446049250313e-16, 30492, 30492); } catch (e) {}
        super.f = 2.220446049250313e-16;
        4294967295 >> 4294967295;
        let v89 = v83 ** "-176972982";
        const v90 = --v89;
        const v91 = v89 | v90;
        const v92 = Math.sin(v83);
        v92 % v92;
        Number.isNaN(v90 / 4294967295);
        v83++;
        Math.cbrt(v91);
    }
}
try { new C75("-176972982"); } catch (e) {}
const v100 = new C75(30492);
Object.defineProperty(v100, "atan2", { enumerable: true, value: v40 });
v100.h = v100;
const v101 = new C75(v100);
v101.f;
try { ("atan2").blink(); } catch (e) {}
function f105(a106, a107) {
    new Float64Array();
    function F110(a112) {
        if (!new.target) { throw 'must be called with new'; }
        this.h = a112;
    }
    const o121 = {
        4294967296: 30492,
        "d": 30492,
        [30492]: F110,
        "type": "atan2",
        toString() {
            super[this];
        },
        "d": v101,
        ["function"]: a106,
        536870888: "function",
        "g": a106,
        "h": 2.220446049250313e-16,
        ..."-176972982",
        m(a116, a117) {
            const t140 = 4294967297;
            t140[5] = a117;
            return a107;
        },
    };
    return o121;
}
[Float32Array];
function f123() {
}
[[f123,f123],f123];
try { ("5").fontcolor(BigInt64Array); } catch (e) {}
try { ("5").split(127, v64); } catch (e) {}
const v135 = new Array(228);
class C136 {
    static {
        function F138(a140, a141) {
            if (!new.target) { throw 'must be called with new'; }
            function f142(a143) {
                Object.defineProperty(this, 268435440, { writable: true, configurable: true, enumerable: true, set: f6 });
                return F138;
            }
            this.constructor = f142;
            const v145 = this?.constructor;
            try { new v145("yi", v40); } catch (e) {}
        }
        new F138(v135, f48);
        new F138(Array, F138);
    }
}
try {
} catch(e149) {
}
let v150 = 0;
do {
    v150++;
    [[65535,268435439,-9007199254740990,268435440,1024,19743,5,4]];
    function F154(a156, a157) {
        if (!new.target) { throw 'must be called with new'; }
    }
    class C159 extends WeakSet {
        m(a161) {
            Object.defineProperty(this, 10, { writable: true, enumerable: true, value: a161 });
        }
        129;
    }
    new C159();
} while (v150 < 9)
