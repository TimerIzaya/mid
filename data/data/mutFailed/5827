function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = 1024;
    } catch(e3) {
    }
}
function f4(a5) {
    F0 **= F0;
    const v6 = typeof a5;
    v6 === "bigint";
    return v6;
}
Object.defineProperty(F0, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f4 });
const v11 = new F0();
const v12 = new F0();
const v13 = new F0();
536870912n | 536870912n;
-8n | -8n;
class C19 {
    static toPrimitive = v12;
    static #a = v11;
    static g = v12;
    static set h(a21) {
        v11[0] = v12;
        v11 < v11 ? v11 : v11;
        v13 | v13;
    }
    [F0] = 536870912n;
}
C19.h;
const v26 = new C19(255n);
const v27 = v26?.constructor;
try { new v27(); } catch (e) {}
const v29 = new C19(F0, v11, 255n);
new C19();
function f34() {
    -Int16Array;
    class C40 {
        static #m(a42) {
        }
        constructor(a44) {
            this[Symbol.toPrimitive] = f4;
            a44[0] = v27;
            try { this.__defineSetter__(a44, 3.4890473589784586e+307); } catch (e) {}
            function f48() {
                return f48;
            }
            f48.length;
            Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f48 });
        }
    }
    C40.name = C40;
    const v50 = new C40(C40);
    v50.g = v50;
    v50.g = v50;
    const v51 = new C40(1000000000000.0);
    v51.constructor = f34;
    const v52 = v51?.constructor;
    v52[0] = C19;
    try { new v52(1000000000000.0); } catch (e) {}
    v51.length = -4294967296;
    const v54 = v51.length;
    try { new v54(); } catch (e) {}
    const v56 = new C40(-4294967296);
    const v57 = [v56,C40];
    [257828.6336153492,v56,v50,v56,v57];
    const v59 = [v56];
    function f60(a61, a62) {
        const v65 = (a66, a67, a68) => {
            try { ("function")["toUpperCase"](); } catch (e) {}
            "-268435456" ^ a66;
            return a66;
        };
        return v29;
    }
    v59.constructor = f60;
    try { v59.toReversed(); } catch (e) {}
    class C73 extends C40 {
        [v50];
        #n(a75, a76, a77, a78) {
            return v59;
        }
        #g;
    }
    try { new C73(); } catch (e) {}
    C73.name = C73;
    const v80 = new C73();
    const v81 = v59.constructor;
    class C82 extends v81 {
    }
    try {
        const t92 = "65537";
        t92.b = v50;
    } catch(e86) {
    }
    try { C82.apply(v81, C40); } catch (e) {}
    const v88 = new C82();
    const v89 = v88?.join;
    try { new v89(v29); } catch (e) {}
    try { v88.toLocaleString(); } catch (e) {}
    Object.defineProperty(v88, 65537, { value: v51 });
    try { v80.m(v57); } catch (e) {}
    const o95 = {
        "e": Uint16Array,
        __proto__: 3.4890473589784586e+307,
        values(a94) {
            return -4294967296;
        },
        ...1000000000000.0,
    };
    try { o95.values(Uint16Array); } catch (e) {}
    return Int32Array;
}
%PrepareFunctionForOptimization(f34);
f34();
%OptimizeFunctionOnNextCall(f34);
f34();
