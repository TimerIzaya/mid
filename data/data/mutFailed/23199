const v0 = [9,9,-65536,-12946,-24217,10,12447,255,18770,-256];
const v1 = [-963406385,129,-12680,-15,-43851,5,65535,-14,536870912];
[1973935856];
function f6(a7, a8, a9) {
    const o13 = {
        [0]: 256,
        get h() {
            this / a9;
            try {
                this.d = 256;
            } catch(e12) {
            }
            return this;
        },
        "b": -9,
        3854: a8,
        "f": a7,
        [v0]: 256,
    };
    return o13;
}
f6(v1, v1, v1);
const v15 = f6(v0, v1, f6);
const v16 = f6(v0, v0, v15);
class C17 {
    static #h = 256;
    g = v1;
    static #b;
    static valueOf(a19, a20, a21, a22) {
        for (let v23 = 0; v23 < 100; v23++) {
            a19(v0, a22, a20);
        }
        try {
            v15.#b **= this;
        } catch(e25) {
        }
        return v16;
    }
}
new C17();
const v27 = new C17();
new v27();
function F32(a34) {
    if (!new.target) { throw 'must be called with new'; }
    a34 ^ a34;
    const v36 = this?.constructor;
    try { new v36(v36); } catch (e) {}
}
new F32(0n);
new F32(349865170n);
