let v0 = 8;
const v2 = new Float32Array(v0);
const v5 = new Float32Array(1);
let v6 = 512;
const v8 = new Uint8ClampedArray(v6);
({"buffer":v0,"byteOffset":v6,} = v8);
let v11 = 332216223;
let v13 = +1;
const v14 = v13--;
--v11;
class C16 extends Float32Array {
    static 11 = 1;
    #toString(a18, a19, a20) {
        return v2;
    }
    178;
    [v5] = v5;
    static #a;
    [v14];
    4;
    static [C16] = 1;
    f = v13;
    g;
    static [v2];
}
new C16();
new C16();
new C16();
Math.asin();
/(?:ab|cde)*/vgd;
/[[]((\xed\xa0\x80))\x02]/vgid;
/(?:a{5,1000000}){3,1000000}/guy;
[-1.749193831953031,-0.0,-Infinity,30.31255071286273,NaN,-0.0];
[4.0,-4.0,-2.2250738585072014e-308,Infinity,-2.220446049250313e-16,-1000000000000.0];
[-3.5546996053089437];
class C18 {
    #c;
    constructor(a20, a21) {
        try {
            a21.#c /= -681660948;
        } catch(e22) {
        }
    }
    static 3301985676;
}
new C18(-1684921933, -990373415);
new C18(0.29228836427473637, C18);
