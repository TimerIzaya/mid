for (let v2 = 0; v2 < 25; v2++) {
    const t1 = "ETw";
    t1["p" + v2] = v2;
}
const v7 = new BigUint64Array();
[v7];
function f9(a10, a11) {
    const o12 = {
        ...a10,
    };
    return f9;
}
%PrepareFunctionForOptimization(f9);
const v14 = new WeakSet();
const o19 = {
    [Infinity]: -0.0,
    [-16]: Infinity,
    "h": -16,
    ...-0.0,
    "c": Infinity,
    "e": -0.0,
};
[["boolean","ignoreCase","valueOf",v14,v14],"boolean",WeakSet];
["boolean"];
function F25() {
    if (!new.target) { throw 'must be called with new'; }
    class C27 {
    }
    for (let i30 = 0, i31 = 10;
        i30++, i30 < i31;
        (() => {
            const v36 = [601759695];
            const v38 = new Map();
            for (let v39 = 0; v39 < 32; v39++) {
                v38["p" + v39] = v39;
            }
            const v42 = [1073741824,1073741823,1376142744,1073741825];
            function f43(a44, a45, a46, a47) {
                a47 - a47;
                const v52 = new BigInt64Array(-16);
                const v53 = v52?.with;
                try { new v53(-143777.51358721592, -143777.51358721592); } catch (e) {}
                function f55() {
                    return a44;
                }
                function f56(a57, a58) {
                    return a57;
                }
                try { f56(); } catch (e) {}
                f56(v42, C27);
                try { v42["find"](..."find", a47, ...v36, ...v42); } catch (e) {}
                return C27;
            }
            for (let v63 = 0; v63 < 10; v63++) {
                f43(v63, f43, i30, v63);
            }
        })()) {
    }
}
new F25();
new F25();
