let v1 = "268435456";
/a{0}/vd;
const v4 = /a{0,1}?/gums;
const v5 = /Ba{0,1}?/vdims;
v5.e = v5;
65536n >> 65536n;
const v10 = /a\sc/gm;
function f11(a12) {
    const o15 = {
        n(a14) {
            return a14;
        },
        [a12]: a12,
    };
    return a12;
}
const v16 = f11(v10);
const v17 = f11();
WeakMap.name;
new WeakMap();
class C21 extends WeakMap {
    static #toString(a23, a24) {
        try { new a23(this, this, this, a23); } catch (e) {}
        v1 -= "P";
        new Float32Array(15);
        new Uint8ClampedArray(6);
        const v34 = new Float32Array(589);
        return v34;
    }
}
C21.a = C21;
new C21();
new C21();
new v17();
function f38() {
    268435440 - 268435440;
    const o50 = {
        "d": 268435440,
        "a": 4.0,
        __proto__: "cJ",
        "h": "cJ",
        valueOf(a44) {
            const o45 = {
                __proto__: this,
            };
        },
        toString(a47, a48, a49) {
            return v4;
        },
        "execution": "cJ",
        "call": f38,
        "c": "cJ",
    };
    return o50;
}
const v51 = f38();
const v52 = f38();
3375 >> 3375;
const v56 = new BigUint64Array(3375);
try { v56.slice(v10, v16); } catch (e) {}
const v59 = ("P")?.of;
try { new v59(); } catch (e) {}
Array(4087);
[f38(),v51,v52,v52];
[];
const v66 = [-54486,11,9007199254740991,268435456,536870912,1073741823,255,1073741824,-2147483648,-3];
try { v66.fill(3375); } catch (e) {}
const v68 = [65535];
try { v68.some(4087); } catch (e) {}
const v71 = new Set();
try { v71.add(v56); } catch (e) {}
function F73(a75, a76, a77) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        new BigUint64Array(0);
        for (let i83 = 0, i84 = 10;
            (() => {
                i83 < i84;
                const o89 = {
                    n(a87, a88) {
                        return this;
                    },
                };
                const v92 = new BigUint64Array(3375);
                const v93 = ["P","P"];
                const o94 = {
                    "arguments": v93,
                };
                [-256,13351,5138,2,-4294967295,1000,268435440];
                class C96 {
                    3164398692 = "P";
                }
                let [v97,,v98,...v99] = v92;
                return v10;
            })();
            i83++) {
        }
    } catch(e105) {
    }
    try {
    } catch(e106) {
    }
    this.a = a76;
}
F73.e = F73;
function F107(a109, a110) {
    if (!new.target) { throw 'must be called with new'; }
    const v111 = this.constructor;
    try { new v111(v66, this); } catch (e) {}
    ++a110;
}
new F107(F107);
