function f0() {
    const o22 = {
        __proto__: -0.21615739885491259,
        "c": -1.631384328552335e+308,
        "g": 1000000000000.0,
        set e(a5) {
            const v7 = [a5,Reflect];
            let v8 = Reflect.construct(a5, v7, a5);
            v8 = 1000000000000.0;
            function f10(a11, a12, a13) {
                return a12;
            }
            class C14 extends f10 {
            }
            for (let v15 = 0; v15 < 5; v15++) {
                Object.defineProperty(C14, Float32Array, { enumerable: true, get: f10 });
            }
            super.c = this;
            v7[Symbol.isConcatSpreadable];
        },
        "b": 1000000000000.0,
        toString(a20) {
            return [-2.0,-1000000.0,-Infinity,0.03714003700223023,-1.0];
        },
        "a": -0.21615739885491259,
    };
    return o22;
}
const v23 = f0();
const v24 = f0();
const v25 = f0();
class C26 extends f0 {
    constructor(a28) {
        super();
        Object.defineProperty(this, v24 % this, { enumerable: true, get: f0 });
        try {
            this.fuck(this, true, v25);
        } catch(e32) {
        }
        function f33() {
            return f33;
        }
        class C35 {
        }
        const v36 = new C35();
        ("number").slice([C35,C35,C35], v36);
        function f39(a40, a41, a42) {
            const o43 = {
                ...a42,
                268435441: v36,
            };
            return o43;
        }
    }
    #h = v23;
    [v24] = v25;
    static #e;
    static 2;
}
const v44 = new C26(v25);
const v45 = new C26(v23);
const v46 = new C26(C26);
function f47() {
    return f47;
}
function f48(a49, a50, a51) {
    const o62 = {
        set b(a53) {
        },
        "e": a49,
        [f47]: v44,
        "e": v23,
        [a49](a55, a56, a57) {
            return v24[a57()];
        },
        get b() {
            this & a50;
            return v44;
        },
        "h": v46,
        "d": a51,
        __proto__: v45,
        2: v25,
    };
    return a49;
}
f48(v23, v45, v46);
f48(v44, v44, v23);
f48(v25, v24, v23);
const v69 = [1.9600488149280893e+306,468.9269702772963];
([Infinity,-686.9856326146617,0.47369378110968274,-7.24289104755818]).includes(...v69);
