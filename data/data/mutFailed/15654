const v1 = new WeakSet();
class C2 {
    toString(a4) {
        let v5 = v1.a;
        const v9 = this >> v5--;
        super.d = Math.trunc(this);
        try {
            v1.has(this);
        } catch(e12) {
        }
        +-128;
        v9.acos(-128);
        -128 % this;
        Math.acos(v9);
        return WeakSet;
    }
}
new C2();
new C2();
new C2();
let v20 = 16;
v20--;
const v22 = v20 >> v20;
const v23 = v22 >>> v22;
Int16Array.prototype = Int16Array;
const v25 = new Int16Array(v20);
v1[7] = v25;
Float32Array.prototype = Float32Array;
const v28 = new Float32Array(13);
v28[1];
let v32 = 13 | (8 <= 8);
v32--;
try {
    v25.__proto__ = v1;
} catch(e34) {
}
new BigInt64Array(8);
const v38 = new v23();
v38.getUTCSeconds();
