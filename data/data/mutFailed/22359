function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a6;
    } catch(e7) {
    }
}
const v8 = new F3(10000n, 15n);
const v9 = new F3(10000n, 10000n);
const v10 = new F3(15n, 127n);
const v13 = new Float32Array(1000);
new Int8Array(0);
127n >>> Float32Array;
v8 < Int8Array;
new Int32Array(64);
const v25 = [1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0];
try {
    v25.unshift(/j/vdy, 151.5070015134836, [v9,v8,Int8Array,v10,v13]);
} catch(e30) {
}
const v31 = v25.groupToMap;
try { v31(v25, v31, v25, v25, v31); } catch (e) {}
