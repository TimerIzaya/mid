const v1 = new WeakMap();
function f2() {
    return v1;
}
class C3 extends f2 {
    constructor(a5, a6) {
        super();
        g = a6;
        v1[this] = f2;
        class C8 {
        }
        const v11 = new Int8Array(2830);
        const v14 = new Int32Array(10);
        function f17(a18, a19, a20) {
            const o21 = {
                ...v11,
                814452916: 129,
                "f": v14,
                ...v14,
                __proto__: a19,
                [a19]: Float64Array,
            };
            return f17;
        }
        new BigInt64Array(1);
        %PrepareFunctionForOptimization(f2);
        return Symbol.toPrimitive;
        class C27 {
            static #p(a29) {
                return a29;
            }
        }
        const v30 = new C27();
        const v31 = new C27();
        const v32 = [v30,v31];
        const v36 = [v30,[[1828032293,[]]],v32];
        function f37() {
            return v36;
        }
        new Float32Array(129);
        const v42 = [];
        const v43 = [v42,v42];
        class C45 {
            toString(a47, a48, a49) {
                const o50 = {
                };
                o50.g = "f";
                let v51 = Map;
                super.b;
                let v53 = -3;
                let v54 = 2;
                [v54,v51,,v53] = v43;
            }
        }
        new C45();
        new Int32Array(257);
    }
    static f;
}
new C3(WeakMap, f2);
new C3(WeakMap, C3);
new C3(f2, v1);
let v61 = 1073741824;
class C63 {
    constructor(a65) {
        [a65,v61] = "boolean";
    }
}
const v66 = new C63(C63);
const o67 = {
    ...f2,
    2: v66,
    268435439: C63,
};
const v76 = new Array(4);
for (let v77 = 0; v77 < 5; v77++) {
    const v80 = new BigInt64Array(4046);
    function f81(a82, a83) {
        a82++;
        function F85(a87) {
            if (!new.target) { throw 'must be called with new'; }
        }
        class C88 extends F85 {
        }
        const v89 = new C88();
        v89.constructor;
        const o91 = {
        };
        for (const v92 in o91) {
            ("-9223372036854775807").lastIndexOf(-7);
            function F97(a99, a100) {
                if (!new.target) { throw 'must be called with new'; }
                const v101 = this.constructor;
                try { new v101(a100); } catch (e) {}
                a100 == a100;
                a99 !== a99;
                this.g = a100;
            }
            new F97(F97, -418967591n);
        }
        let o112 = {
            "type": "N1",
            "e": v76,
            "type": "N1",
            toString(a107, a108) {
                function f109() {
                }
                const o110 = {
                };
                function f111() {
                }
            },
        };
        [,...o112] = v80;
        function f114() {
            return 4n;
        }
        f114();
        return 4046;
    }
    f81();
}
