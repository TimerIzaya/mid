const v0 = [];
function f1(a2) {
    const v4 = new Uint8ClampedArray();
    for (const v7 in [[v4,v4],v4]) {
    }
    return v0;
}
v0.toString = f1;
function f20(a21, a22, a23, a24) {
    a22.toString = f1;
    const o37 = {
        "f": v0,
        "a": a24,
        "d": 1000000000000.0,
        [v0](a26, a27, a28, a29) {
            let v25 = this;
            Math.sign(v25);
            v25 || 9;
            9 * (9 && ++v25);
            return a22;
        },
        13: a21,
    };
    return o37;
}
f20(-536870912n, 9.24323499442497, 9.24323499442497, -55104n);
f20(127n, 9.24323499442497, 1000000000000.0, -55104n);
f20(127n, v0, f20, -536870912n);
function F41(a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    for (let v45 = 0; v45 < 5; v45++) {
    }
    const v46 = this.constructor;
    const t32 = "9007199254740992";
    t32["255"] &= 7;
    const v52 = new Float32Array(2);
    v52[1] = v52;
    try { new v46(); } catch (e) {}
}
new F41();
