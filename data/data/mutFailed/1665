const v0 = [];
new Array(2552);
let v5;
try { v5 = ("undefined").startsWith("undefined", 2552); } catch (e) {}
Array[v0] &&= v5;
const o8 = {
    "maxByteLength": 10000,
};
const v10 = new ArrayBuffer(127, o8);
const v12 = new Int32Array(v10);
let v19 = Uint16Array;
const v20 = new v19(3869);
new Uint32Array(161);
Int32Array == "symbol";
v19 += v19;
let v26;
try { v26 = v12.indexOf("undefined"); } catch (e) {}
function f27() {
    return v26;
}
const v29 = new BigInt64Array(255);
const o30 = {
};
try {
    o30.a = v29;
} catch(e31) {
}
try {
    const o32 = {
    };
    o32.a = v29;
    o32.e = v20;
} catch(e33) {
}
try {
    const o34 = {
    };
    o34.a = v29;
    o34.e = v20;
    o34.d = 2552;
} catch(e35) {
}
try {
    const o36 = {
    };
    o36.a = v29;
    o36.e = v20;
    o36.h = NaN;
} catch(e37) {
}
const v40 = new Float64Array(5);
const v41 = new Float64Array(v40);
v40 ** v41;
