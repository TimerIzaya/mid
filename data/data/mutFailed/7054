207 + 207;
function f6(a7, a8) {
    function F9() {
        if (!new.target) { throw 'must be called with new'; }
        this.c = 1163987790;
    }
    return "symbol";
}
Float32Array.toString = f6;
new Float32Array(207);
let v13 = 14;
v13--;
try { new Uint8ClampedArray("symbol", v13, 207); } catch (e) {}
new Uint8ClampedArray(v13);
new Uint32Array(4096);
const v22 = 220 >> 220;
const v24 = new BigUint64Array(220);
v24.toString = f6;
const v25 = v24[42];
const v28 = new Uint32Array(958);
v28.g = v28;
const v31 = new Int8Array(3844);
function f32(a33) {
    const v35 = Symbol.iterator;
    const o44 = {
        [v35]() {
            let v37 = 10;
            const o43 = {
                next() {
                    v37--;
                    const v41 = v37 == 0;
                    const o42 = {
                        "done": v41,
                        "value": v37,
                    };
                    return o42;
                },
            };
            return o43;
        },
    };
    return Float32Array;
}
v31.toString = f32;
v31[372] = v31;
let v47 = -1024n;
class C48 {
    set c(a50) {
        v47 = 0n;
        a50 += 0n;
    }
    constructor(a52, a53, a54, a55) {
        C48 >>> v31;
    }
    static [v28] = v25;
    128 = "Cl";
    m(a58) {
        let v59;
        try { v59 = new this(a58, -490778482n, this); } catch (e) {}
        this.c |= v59;
        return a58;
    }
    static 1;
    static h = -490778482n;
    static #f = v47;
}
C48.valueOf = f32;
try { new C48(); } catch (e) {}
new C48();
new C48();
const v63 = new C48();
[1.7976931348623157e+308,0.15227894183030433,-2.0,259880.3330397869,0.0,-1e-15,360683.0243419355,-1e-15,1.7976931348623157e+308];
const v66 = [0.03568519099872258];
try { v66.join(v24); } catch (e) {}
const v68 = [462318.599710946,0.6123807977566038,-0.0,-108306.02593608841,Infinity,0.0,-4.0,-1000.0];
try { v68.at(4096); } catch (e) {}
class C70 {
    static {
        this >> "Cl";
        super[this] = v22;
    }
    [Float32Array];
    static 3518;
    static 2147483648;
    static #valueOf(a74, a75) {
        v63[null] ||= a74;
        const v76 = v66.__proto__;
        try { v76(this, a74, v47, v76, this); } catch (e) {}
        return v66;
    }
    [v47] = v47;
    2;
    static #h = null;
    constructor(a79, a80, a81) {
        new Uint8Array(1024);
        new Int32Array(2);
        new Uint16Array(2277);
    }
    #a = null;
}
new C70();
const v92 = new C70();
v92[2];
new C70();
const v97 = new Uint8Array();
try { v97.entries(); } catch (e) {}
function f99(a100, a101, a102, a103) {
    a102 === a102;
    a102++;
    a102++;
    const o107 = {
        ...v97,
    };
    function f108() {
    }
    function f109(a110) {
        const o111 = {
        };
    }
    function f115(a116, a117, a118) {
        const o119 = {
            "h": a118,
        };
        return o119;
    }
    const v120 = f115(-3.9870582640049523, -3.9870582640049523, 1000000.0);
    const v121 = f115(1000000.0, -3.9870582640049523, 1000000.0);
    f115(-3.9870582640049523, -2.2250738585072014e-308, -3.9870582640049523);
    v120[127] = -3.9870582640049523;
    v121["toString"]();
    Object.defineProperty(o107, "n", { enumerable: true, get: f108, set: f109 });
}
for (let v125 = 0; v125 < 500; v125++) {
    f99(Uint8Array, 2, v125);
}
