function f0() {
}
class C4 extends f0 {
    static o(a6) {
        let v7 = 0;
        while (v7 < 2) {
            try {
                f0();
            } catch(e11) {
            }
            v7++;
        }
        return 0.0;
    }
}
try { new C4(); } catch (e) {}
const v15 = ([-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0]).length;
(v15 >>> v15).forEach();
const o19 = {
};
o19.e = 1261703539;
o19.g = -1.0;
const v20 = new C4();
const v21 = v20?.constructor;
try { new v21(); } catch (e) {}
new C4();
const v24 = new C4();
const v26 = [];
v26.g = -1252925017;
v26.g = v26;
class C28 {
    static #e = "d";
    static 4;
    8;
    static h = "d";
    584 = "d";
    #a;
}
new C28();
const v30 = v24?.constructor;
try { new v30(); } catch (e) {}
function f32() {
    return v24;
}
-536870912n == "-11838";
new Uint8ClampedArray(([127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649]).toSpliced(-1148418937, -1148418937, 2.220446049250313e-16, 2.220446049250313e-16, "-4"));
9007199254740990 + 9007199254740990;
let v46 = -268435456;
v46--;
[2.2250738585072014e-308,4.0,0.5273092258854304,-8.155347998531482,53975.92355033499,209.79159556853597];
const v49 = [539725.590391079,-3.0,-8.583627322749423e+306];
const v50 = /[abc+]/gvdim;
const v51 = v50.sticky;
const v52 = [v50,v50,v50,v50];
const v53 = /ka{0}/guims;
const o54 = {
    ...v53,
    "d": v52,
    "c": v49,
    "g": v49,
    "f": v52,
    "b": v51,
    "a": v49,
};
[1000000.0,1.2528282717172656e+308,0.7043538112851869,-0.0];
function f56(a57, a58, a59) {
    return f56;
}
f56.caller = f56;
class C62 {
}
function f63(a64, a65, a66, a67) {
    const v70 = new BigInt64Array(4046);
    let v71 = undefined;
    const v72 = v71++;
    (v72 >> v72) >>> a67;
    let o75 = {
    };
    [,...o75] = v70;
    return 4046;
}
for (let v76 = 0; v76 < 5; v76++) {
    f63();
}
const o106 = {
    "type": "function",
    m(a79) {
        const v82 = new Int8Array(3938);
        let v83 = 3;
        let v84 = 0;
        v84 >> v84;
        for (let i = 0; i < 5; i++) {
            [...v83] = v82;
            v84++;
            try {
                a79.length = 1;
            } catch(e88) {
                v30[3] + 2;
                new Float32Array(128);
            }
        }
        new Int16Array(2);
        class C99 extends WeakSet {
            static #n(a101) {
                function f102(a103) {
                    return a103;
                }
                class C104 extends f102 {
                }
            }
        }
        const o105 = {
        };
    },
};
new Worker(f56, o106);
function f108() {
    class C109 {
    }
    const t119 = "function";
    t119.e = C109;
    class C113 {
        static #a;
        static n(a115, a116) {
            const v117 = super.d;
            try { v117(); } catch (e) {}
            return a115;
        }
        [1];
        static [1] = 255;
        [255];
        f = -65536;
    }
    const v119 = new C113();
    const v120 = new C113();
    let v122 = -65536n;
    let v124;
    try { v124 = v119.m(1n, 10000n, 10000n, 1); } catch (e) {}
    function f125(a126, a127, a128) {
        let v129;
        try { v129 = v124(a127); } catch (e) {}
        v129 = a128;
        v122 >>= a128;
        v119[10] = 1n;
        v120.f;
        return v122;
    }
    return o106;
}
try { ("function").trimLeft(); } catch (e) {}
const o133 = {
    "type": "function",
};
new Worker(f108, o133);
