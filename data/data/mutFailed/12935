const v2 = new Int16Array(3);
let v3 = 257;
const v5 = new Float32Array(v3);
const v8 = new Int16Array(5);
try { v8.set(Int16Array); } catch (e) {}
function f10(a11, a12, a13, a14) {
    a13 != a13;
    a14.length = a14;
    const v16 = [1000000000000.0,0.9960435535667199,1000.0,-1.6540773985510377e+308,0.3018853678306006,410.9648048644401,-6.0085450863810586,-529.8311372035074];
    v16.length = v16;
    const v17 = `
        function f18() {
            return f18;
        }
        try { f18.toString(); } catch (e) {}
        let {...v20} = v16;
        try { v20.toString(); } catch (e) {}
        try {
            v20.fuck(v20);
        } catch(e23) {
            e23.message;
        }
    `;
    try { v17.isWellFormed(); } catch (e) {}
    eval.name;
    eval(v17);
    const o49 = {
        o(a30, a31, a32) {
            const v34 = Symbol.toStringTag;
            const v35 = [268435440,8,7,1073741824,2147483647,70520590,-9223372036854775807,129,268435439,-1147002105];
            const v36 = v35.concat(v35);
            v36.flat(v36);
            function f38(a39) {
            }
            v2[v34];
            ({"a":a12,"d":a32,...v3} = this);
            return v34;
        },
        [5](a42, a43, a44, a45) {
            const o46 = {
            };
            new Proxy(this, o46);
            return Int16Array;
        },
    };
    return o49;
}
const v50 = f10(3, Int16Array, 5, v5);
try { v50.valueOf(); } catch (e) {}
const v52 = f10(v3, Int16Array, Float32Array, v2);
try { v52.o(Int16Array, Int16Array, v3); } catch (e) {}
f10(v52, 3, v52, f10);
try { Date.now(); } catch (e) {}
let v59 = 1038975308;
v59 >> v59;
try { v2.lastIndexOf(Float32Array); } catch (e) {}
class C62 extends Date {
}
try { new C62(); } catch (e) {}
const v64 = [155533.8602852358,2.0];
try { v64.toLocaleString(); } catch (e) {}
function F67() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(5); } catch (e) {}
    const v70 = this?.__lookupGetter__;
    try { new v70(); } catch (e) {}
    const v73 = [-1.3667473485475811e+308,1.7976931348623157e+308,5.0,-3.583919688173468e+307,-1.5320462342133301e+308,-414873.4859108749,286122.8434793174,866.7395286670867,-1000.0,-742782.9714922046];
    const o78 = {
        __proto__: v73,
        [-128](a75, a76, a77) {
        },
    };
    const v79 = o78?.find;
    try { new v79(this); } catch (e) {}
    const v82 = Array(19793);
    try { v82.reverse(); } catch (e) {}
    for (const v84 of v82) {
        while ((() => {
                const v86 = v59 < 5;
                v86 || v86;
                return v86;
            })()) {
            v59++;
        }
        v64[658291203] = null;
        Math.g = Math;
        let v91 = Math.cbrt();
        v91--;
        const v93 = 0.4890055133608564 || 0.4890055133608564;
        v93 + v93;
    }
    const v95 = [];
    v95.g = v95;
    const v96 = [C62,C62];
    function f99() {
        const v102 = Math.atanh("Vre");
        return v102 >> v102;
    }
    class C104 {
    }
    C104.f = C104;
    class C105 extends C104 {
        static valueOf(a107, a108) {
            super[268435441] = 1479696428;
        }
    }
    let v109;
    try { v109 = v96.fill(); } catch (e) {}
    try { v109.toReversed(); } catch (e) {}
    const v111 = [v95];
    let v112;
    try { v112 = v111.entries(); } catch (e) {}
    try { v112.next(); } catch (e) {}
    v2.c = Date;
    var b = -2147483649n;
    ([-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135]).fill();
}
new F67();
new F67();
