function F1(a3, a4, a5) {
    if (!new.target) { throw 'must be called with new'; }
    function f6() {
        const v7 = [1.7976931348623157e+308,-5.063738949828065,-1000000.0,-4.0,4.0,1.368499884638594e+307,0.0,-1.2131530743918297,-1000000000.0,-2.809909548595164];
        function f8() {
            return f8;
        }
        return v7.concat(f8, f8, v7, v7);
    }
    a3.toString = f6;
    a3 >> a3;
    a4?.__defineSetter__;
    const v12 = a4 === a4;
    v12 ** v12;
}
function f14() {
    class C15 {
    }
    const v16 = new C15();
    for (let v17 = 0; v17 < 5; v17++) {
        new F1(F1, v16, v17);
    }
    return v16;
}
f14();
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    this.name = F22;
    const v26 = this?.__lookupGetter__;
    try { new v26(F22); } catch (e) {}
    a24 / a24;
    a25 >> a25;
    try {
        for (let v30 = 0; v30 < 25; v30++) {
        }
        const v32 = new Date();
        v32.getUTCHours();
        this.a = -65536;
        const o34 = {
        };
        const v38 = new BigUint64Array(4);
        function F39(a41, a42, a43) {
            if (!new.target) { throw 'must be called with new'; }
            this.a = a42;
            this.a = a42;
        }
        const v44 = new F39(BigUint64Array, 4, v38);
        for (const v45 of v38) {
            Object.defineProperty(v44, 241, { enumerable: true, value: v45 });
            const o46 = {
            };
            o46.g = v45;
            o46.b = 241;
            const o47 = {
            };
            o47.g = v45;
            o47.d = v45;
        }
    } catch(e48) {
    }
}
const v49 = new F22(6, -268435456);
v49.g = v49;
const v50 = new F22(v49, 6);
const v51 = new F22(v49, 6);
class C52 extends F22 {
    o(a54, a55, a56) {
        {
            function F58(a60, a61, a62, a63) {
                if (!new.target) { throw 'must be called with new'; }
                a60.propertyIsEnumerable();
            }
            function f65(a66, a67) {
                return Math.tanh("1");
            }
            f65(f65, f65);
            new WeakSet();
        }
        return a55;
    }
    static 1073741824 = v50;
    #g;
    static [-65536];
    a = -65536;
}
const v76 = v49.name;
v49.toString().lastIndexOf(v76);
class C80 {
    toString(a82) {
        const o83 = {
            ..."raw",
        };
        try {
            function f84() {
                return f84;
            }
            function f86() {
                Object.defineProperty(arguments, 13, { enumerable: true, set: f84 });
                return o83;
            }
            f86();
        } catch(e89) {
        }
    }
}
new C80();
try { new C52(); } catch (e) {}
const v92 = new C52();
v92.length;
new C52();
const v95 = new C52();
try { v95.o(-65536, v51, -268435456); } catch (e) {}
const v97 = [-403784505,-9007199254740990,-14];
v97.constructor = f14;
try { v97.map(F22); } catch (e) {}
const v99 = [-9223372036854775807];
v99.g = v49;
v99.g = v99;
[-1275345317,16];
function f101() {
    Math.sinh(0);
    const o106 = {
        ..."raw",
    };
    function f107() {
        return f107;
    }
    function f109() {
        Object.defineProperty(f101, 13, { enumerable: true, set: f107 });
        return o106;
    }
    f109();
}
const v114 = [f101,5.0];
const v115 = [v114,v114,-9.82871036065143,5.0];
function f116(a117) {
    let v118;
    try { v118 = new a117(); } catch (e) {}
    try {
        v118.a = v118;
    } catch(e119) {
    }
    return f101;
}
v115.then = f116;
async function f120(a121, a122, a123, a124) {
    return await v115;
}
f120();
const v129 = new Int32Array(9);
v129.toString = f120;
new Uint32Array([-620100541,-64845,-268435456,-7,-268435456,1024,-536870912]);
