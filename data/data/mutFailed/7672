[8.277494100237899,113.6124638291592,-37679.074161296245,0.5149443586202374,1.0];
[-1.7976931348623157e+308,2.0,-1.7976931348623157e+308,-1000000000.0,-1000000000.0,-1000000000.0,-1.7976931348623157e+308,5.0,-3.386539396736672];
[1.065613492561098e+308];
[5.0,0.5617648105810088,-2.220446049250313e-16,6.636819187975984,6.373543913264018e+306];
[6.125667480140899e+307,-1.0,0.7254053342020907,2.0];
[-2.2250738585072014e-308,-18.60013046721565,-1000.0,0.40520762492879825,-1.7976931348623157e+308,-2.2250738585072014e-308];
[1e-15,214.44301947052895,1000000000.0,-1e-15,-0.0,1.0,-8.026964168678711e+305,940780.0146135376];
[7.8709630812582105,1000000000.0,659.4725490771384,-515.6028022802438];
[-1e-15,2.220446049250313e-16,0.9981026580232947,1.6288807290616361e+308,1000000000.0,-5.6457237041433554,-1000000000.0];
function F17(a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    const v21 = this?.constructor;
    try { new v21(-827.9313408818487); } catch (e) {}
    let v23 = a19.length;
    v23--;
    try { this.constructor(); } catch (e) {}
}
new F17(F17);
function f27() {
    class C28 {
        536870887;
    }
    function f30() {
        return 1511 - 1511;
    }
    Math.valueOf = f30;
    Math.atan2(-827.9313408818487, 536870887);
    let v35 = -65535;
    v35 * v35;
    const o130 = {
        next() {
            v35--;
        },
        m(a40) {
            a40.f = F17;
            a40.f = a40;
            try { a40.next(f27); } catch (e) {}
            a40.c = a40;
            a40.h = a40;
            const o42 = {
            };
            o42.h = o42;
            o42.h = o42;
            o42.h = o42;
            function f43(a44, a45, a46) {
                const v49 = ("h").split();
                const o72 = {
                    [null]() {
                        super.b;
                        const v53 = [];
                        const v54 = [0.3083488057663979,0.3083488057663979,0.3083488057663979];
                        class C55 {
                            constructor(a57, a58) {
                                a58[2];
                                /W(jy2)/udy;
                                const v62 = new Uint8Array();
                                for (let v63 = 0; v63 < 500; v63++) {
                                    const o67 = {
                                        ...v62,
                                        n(a65, a66) {
                                        },
                                    };
                                }
                                for (let v68 = 0; v68 < 5; v68++) {
                                    v49["p" + v68] = v68;
                                }
                            }
                        }
                        new C55(v53, v54);
                    },
                };
                o72.null();
                o72.null();
                return a44;
            }
            f43.caller = f43;
            try {
                o42.e = v35;
            } catch(e75) {
                const v79 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v79, o42);
            }
            try {
                const o81 = {
                };
                o81.h = o81;
            } catch(e82) {
            }
            Math.toString = f43;
            const v84 = Math?.expm1;
            try { new v84(f43); } catch (e) {}
            try { Math.expm1(128); } catch (e) {}
            let v87 = -9007199254740991;
            v87++;
            const v89 = v87 >> v87;
            [10];
            function f92() {
                return f92;
            }
            const v93 = f92();
            function f94() {
                function f95(a96) {
                    C28[Symbol.unscopables] = -827.9313408818487;
                    return f30;
                }
                return f95;
            }
            Object.defineProperty(v93, Symbol.toPrimitive, { writable: true, enumerable: true, get: f94 });
            for (let v101 = 0; v101 < 5; v101++) {
                try { ("p").indexOf(v93); } catch (e) {}
                try { ("p").fontcolor(v101); } catch (e) {}
                "p" + v101;
            }
            v89 - v89;
            arguments.constructor;
            ([])["concat"]("concat");
            class C112 {
                o(a114, a115, a116, a117) {
                }
            }
            const v118 = C112.name;
            try { v118.codePointAt(Math); } catch (e) {}
            const v122 = new Int8Array(3938);
            let v123 = 3;
            let v124 = 0;
            v124++;
            for (let i = 0; i < 5; i++) {
                [...v123] = v122;
                v124++;
            }
            const o127 = {
            };
            try {
                const o128 = {
                };
            } catch(e129) {
            }
        },
    };
    o130.m(o130);
    const v134 = new Float32Array();
    v134.toString = f27;
    const t142 = "nt";
    return delete t142[v134];
}
function F136() {
    if (!new.target) { throw 'must be called with new'; }
}
[this,this,this,this];
class C140 {
}
f27();
f27();
