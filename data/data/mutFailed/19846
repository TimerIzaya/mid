[];
new Uint8Array(4);
const v6 = new Int32Array(16);
new BigUint64Array(128);
new Uint16Array(2);
new Int8Array(2);
new Float64Array(16);
new Uint8Array(268435440);
[3.0,-533.6058053075066,-3.0,-Infinity,9.77162142398339,-6.974865860269324,0.0,-1.7976931348623157e+308,1000000.0];
const v24 = [0.7021385356541069,NaN,3.752300846891645,76.93522341476432,-277.4575758719999,9.404843788357361,-320.7110241266939];
function f25(a26) {
    const v27 = a26;
    class C31 {
        set f(a33) {
            const o34 = {
                "d": "reduce",
                "c": Date,
                "f": a33,
                "g": a33,
                "a": a33,
                597679773: a33,
            };
        }
        constructor(a39, a40) {
            const v41 = [this,Date,this];
            [v41];
            [Date,"string",v41];
            ("undefined").length;
        }
    }
    class C48 extends C31 {
        static d = 9007199254740992;
        323 = 3;
        valueOf(a50, a51, a52, a53) {
            for (let v54 = 0; v54 < 32; v54++) {
                Date["p" + v54] = v54;
            }
        }
        e;
        [9007199254740992];
    }
    C48.d;
    return Float64Array;
}
v24[Symbol.hasInstance] = f25;
[2];
[4];
[v6,2,2,2,Uint8Array];
if (v24[Symbol.hasInstance]) {
}
function F69() {
    if (!new.target) { throw 'must be called with new'; }
}
class C71 {
    constructor(a73, a74, a75) {
        a74.e = a73;
        a74.e = a74;
        class C77 extends a74.constructor {
        }
        const v78 = new C77();
        try { v78(); } catch (e) {}
    }
}
C71.constructor = Symbol;
new C71(F69, C71);
