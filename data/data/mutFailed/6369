const v0 = [268435441,-1073741824,9007199254740992,2147483649,64,536870888];
v0.g = v0;
const v1 = [536870887,507636828,8,9007199254740991,15989,-65537];
function f2(a3) {
    v1 !== a3;
    class C5 {
    }
    return v0;
}
v1[Symbol.toPrimitive] = f2;
v1[v1];
a = undefined;
try {
    v0.g = v1;
} catch(e11) {
}
const v12 = new BigInt64Array();
v12.undefined = v12;
function f13() {
    const v15 = v12[undefined] instanceof f13;
    const o16 = {
    };
    o16.h = v15;
    o16.h = v15;
    return BigInt64Array;
}
f13();
f13();
const v19 = [348877582,-4294967296,61708,10000,53374,-9007199254740991,-7484,11];
const v20 = [v19];
function f21() {
    return f13;
}
function f22(a23) {
    const o25 = {
        "execution": "async",
    };
}
Object.defineProperty(v20, Symbol.toPrimitive, { writable: true, enumerable: true, get: f21, set: f22 });
function f28(a29, a30, a31, a32) {
    const v33 = a30 >>> a30;
    v33 >>> v33;
    const v36 = new Int8Array();
    v36.entries().next();
    function f39(a40, a41) {
        a40.arguments = a40;
        return f39;
    }
    const v42 = f39(f39);
    class C44 extends Date {
    }
    const v45 = new C44();
    v45.getDay();
    return v42;
}
const v47 = [v19,v20,v19];
function f48(a49, a50) {
    class C52 {
        static get d() {
        }
        c;
        static #e = -1000000.0;
        4294967295;
        #a;
    }
    const v54 = new C52();
    return v54;
}
Object.defineProperty(v47, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f48 });
const v57 = [v20,v20,v1,v47];
v57[Symbol.toPrimitive] = f28;
new WeakMap();
v57 in v0;
let {"a":v63,"d":v64,"length":v65,} = v19;
try { f28(...v64, ...v12, f28, ...v20); } catch (e) {}
new BigUint64Array(3);
class C77 {
}
function f78() {
}
f78();
class C80 extends f78 {
    constructor(a82) {
        super();
        for (let v83 = 0; v83 < 5; v83++) {
            super.valueOf();
        }
    }
}
const v85 = new C80();
new Uint32Array(8);
new Float64Array(0);
for (let i93 = 0; i93 < 0; i93++) {
    v20[v85] = i93;
}
const v99 = [1000.0,-1.7976931348623157e+308,1000000.0,1000000000000.0,-1000000000000.0,-863970.4344405974,1.7873969073744563e+308,0.0];
Array(12, -10);
for (const v105 in "5amlK") {
    ("5amlK")[v105];
}
new Int8Array(v99);
