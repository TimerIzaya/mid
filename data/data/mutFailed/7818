const v0 = [];
class C1 {
    static {
        try { new this(this, this); } catch (e) {}
        const v5 = [601759695];
        const v6 = [1073741824,1073741823,1376142744,1073741825];
        function f7(a8, a9, a10, a11) {
            function f12() {
                v6.forEach(a9);
            }
            new Int8Array();
            for (let v16 = 0; v16 < 5; v16++) {
            }
            try { v6["find"](..."find", a11, ...v5, ...v6); } catch (e) {}
        }
        %OptimizeFunctionOnNextCall(f7);
        v0["shift"]();
    }
    static m() {
        const v21 = this.f;
        const v22 = [v0];
        [v22,v0,v22,v22];
        [v0,v21];
        return v0;
    }
}
new C1();
new Date("2");
class C31 {
    static [0];
    static #b;
    static [2.0];
}
new C31();
new C1();
new C1();
-9007199254740992 === -9007199254740992;
const v40 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
for (let v41 = 0; v41 < 5; v41++) {
    function f42() {
        try {
            v40.forEach();
        } catch(e44) {
            e44.constructor(e44, v41, f42, f42, e44);
            e44.a = e44;
            e44.a = e44;
        }
        return f42;
    }
    f42();
    %OptimizeFunctionOnNextCall(f42);
}
const t52 = 2.0;
new t52(3);
const v51 = new Float32Array(256);
v51[5] ||= 6;
class C54 {
}
const v55 = new C54();
function f56(a57, a58) {
    const o59 = {
        [a58]: v55,
    };
    return o59;
}
%PrepareFunctionForOptimization(f56);
new Uint16Array(512);
new BigInt64Array(61);
const v67 = new Int8Array(3938);
let v68 = 3;
new Float64Array();
let v71 = 0;
for (let i = 0; i < 5; i++) {
    v71 < 8;
    [...v68] = v67;
    v71++;
}
