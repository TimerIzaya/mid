const v0 = /(?:a?)+2foo(?!bar)baz/gvmy;
const v1 = /La\nb\bc?/gudms;
let v2 = /a.ow^xxx$*/gums;
class C3 {
    constructor(a5) {
        const v6 = /ab|c/vimy;
        /\b(?=.)a3m/vs;
        /[\c~][\cj\cJ\ci\cI\ck\cK]/dimy;
        a5 * v0;
        const v11 = [v6];
        Reflect.apply(v2.compile, v6, v11);
    }
    static [v2] = v1;
    static #g = v0;
    static 10;
    static h = v2;
    [v2];
}
const v14 = new C3(v2);
const v15 = new C3(v1);
let v16 = new C3(v14);
const v17 = [v16,v0,v0,v15,v16];
v16 = v17;
delete v1?.sticky;
const v22 = [v17,v14,v2,v1];
[v2,v1];
class C27 extends C3 {
    static p(a29, a30, a31) {
        const v32 = v22 >= this;
        const v33 = v32 ? v22 : this;
        try {
            this.__proto__ = v17;
        } catch(e34) {
        }
        new Uint32Array(128);
        new Uint32Array(0);
        new Int8Array(2850);
        v33[v32] = v33;
        return this;
    }
    #c = v17;
    constructor(a45, a46, a47, a48) {
        super(a48);
        let {"g":v49,} = this;
        a47[v49];
        7 - 7;
        (v0 * v0) - 7;
    }
}
const v56 = new C27(v1, v0, v1, v14);
new C27(v16, v1, v14, v15);
new C27(v2, v0, v16, v56);
const v59 = /(?<a>.)\k<a>?/vdimsy;
({"unicode":v2,} = v59);
try {
    v15.b = v16;
} catch(e60) {
}
let v61;
try { v61 = v59(); } catch (e) {}
const v62 = [v61,v61,v61,v61];
const v64 = new BigInt64Array();
function f66() {
    3.4890473589784586e+307 === 3.4890473589784586e+307;
    let v69 = 1000000000000.0;
    const v70 = v69--;
    let v72 = 257828.6336153492;
    const v74 = -v62;
    -(v74 && v62);
    v72--;
    class C79 {
        static #m(a81) {
        }
        constructor(a83) {
            const v85 = new Float32Array();
            v85.entries().next();
            const v88 = new Uint16Array(12, -4294967296, v70);
            new Float32Array(v88);
        }
    }
    try { new C79(); } catch (e) {}
    try { new C79(); } catch (e) {}
    const v93 = Symbol.iterator;
    Math[v93] = v93;
    try { v64.reduce(v61); } catch (e) {}
    const v95 = new C79();
    const v96 = new C79();
    try { v96.propertyIsEnumerable(v74); } catch (e) {}
    const v98 = new C79();
    const v99 = [];
    const v100 = [v98];
    v100[0];
    class C102 extends C79 {
        [v95];
        #n(a104, a105, a106, a107) {
            return v100;
        }
    }
    const v108 = new C102();
    const v109 = v100.constructor;
    new v109();
    class C111 extends v109 {
    }
    const v112 = new C111();
    v112.constructor.bind(v72);
    Object.defineProperty(v112, 65537, { value: v96 });
    try { v108.m(v99); } catch (e) {}
    return v61;
}
%PrepareFunctionForOptimization(f66);
f66();
f66();
%OptimizeFunctionOnNextCall(f66);
f66();
