function F0() {
    if (!new.target) { throw 'must be called with new'; }
    function f2(a3) {
    }
    Object.defineProperty(this, "g", { set: f2 });
    try {
        this.c = 256;
    } catch(e8) {
    }
    try {
        this.g = 256;
    } catch(e9) {
    }
}
new F0();
new F0();
new F0();
const v15 = new Uint32Array(5);
new Uint32Array(6);
new Uint16Array(3);
function f22(a23, a24) {
    class C25 {
    }
    const v26 = new C25();
    function f27(a28, a29) {
        function f30(a31, a32, a33, a34) {
            try { a31(f27, a32); } catch (e) {}
            let v36 = a32 & a32;
            v36 % v36;
            new Map(a32);
            -(v36++);
            const o45 = {
                n(a43, a44) {
                    return C25;
                },
            };
            return f27;
        }
        for (let v46 = 0; v46 < 500; v46++) {
            f30();
        }
        return a29;
    }
    Object.defineProperty(v15, "constructor", { value: f27 });
    const t44 = v26.constructor;
    t44(C25, a24);
    return this;
}
Object.defineProperty(f22(f22, 5), "h", { configurable: true, set: f22 });
