let v1 = 4511n;
class C3 {
    toString(a5, a6) {
        super.e &= a6;
        a6.g ^= a6;
        try {
            this.__proto__ = a6;
        } catch(e7) {
        }
        return v1;
    }
    set f(a9) {
        this.__proto__;
        [-1.7976931348623157e+308,-459.68668320206564,2.0,3.142145468739425e+306];
        [1000000000.0,-1e-15];
        [-466.26107353367604,5.336538925519735e+307,-1.0];
        v1 = 1073741824n;
    }
}
new C3();
new C3();
const v16 = new C3();
class C17 extends C3 {
    #n(a19, a20, a21, a22) {
        try { a19.toString(a21, v16); } catch (e) {}
        const o27 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o27);
        return a20;
    }
    3730274632 = 1073741824n;
    static 7 = C3;
    [v1];
}
new C17();
const v30 = new C17();
new C17();
[-0.0,6.15547571931387e+307,-6.01543036281512,9.287912107371426,1.7976931348623157e+308,1.0,-6.229030532832405,1e-15,3.552037428412888e+307];
[-574.193177513137,1.7976931348623157e+308,0.44891739601228065,2.2250738585072014e-308,5.624895316562472e+307];
[1000000000.0,5.0,-9.263538854026729,-1.7976931348623157e+308,-2.718557308789114,-571.7665889471916,-5.0,-1000.0,2.0];
function f36(a37, a38, a39, a40) {
    const o41 = {
    };
    return o41;
}
const v42 = f36(f36, f36, f36, f36);
const v45 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v46 = [601759695];
const v47 = [1073741824,1073741823,1376142744,1073741825];
function f49(a50, a51, a52, a53) {
    function f55(a56) {
        return a51;
    }
    Object.defineProperty(arguments, "toString", { enumerable: true, value: f55 });
    try { arguments.toString(); } catch (e) {}
    function f58() {
        const v60 = ("Vre")?.toLocaleUpperCase;
        try { new v60(); } catch (e) {}
        try { ("Vre").fixed(); } catch (e) {}
        let v64 = -268435456;
        v64--;
        -(v64 + v64);
        const o81 = {
            "c": -4294967297n,
            [522675525n](a69, a70) {
            },
            ..."Vre",
            "maxByteLength": -128,
            "c": v46,
            valueOf(a72, a73) {
            },
            "e": v64,
            "maxByteLength": -4294967295,
            "arguments": v45,
            ...v46,
            "type": "Vre",
            ..."Vre",
            valueOf(a75, a76) {
                return a75;
            },
            ..."Vre",
            4: "Vre",
            "c": v64,
            "type": "Vre",
            "type": "Vre",
            toString(a78, a79, a80) {
                return -4294967297n;
            },
            5: -4294967295,
            6: v64,
        };
        try { o81.valueOf(); } catch (e) {}
        return "Vre";
    }
    f58.length;
    f58();
    function f86() {
        return f36;
    }
    function f87(a88) {
    }
    Object.defineProperty(Int8Array, "a", { writable: true, configurable: true, get: f86, set: f87 });
    Int8Array.a = a53;
    Int8Array.a = Int8Array;
    const v92 = new Int8Array();
    try { v92.findIndex(v42); } catch (e) {}
    const v94 = v92.buffer;
    function f95(a96) {
        return a96;
    }
    v94.constructor = f95;
    const v98 = v94.slice(2147483648);
    %OptimizeFunctionOnNextCall(f58);
    try { ("find").strike(); } catch (e) {}
    const o101 = {
    };
    o101.e = o101;
    try {
        o101.e = a51;
    } catch(e102) {
    }
    try {
        const o103 = {
        };
        o103.e = a51;
        o103.g = -4294967297n;
    } catch(e104) {
    }
    try {
        let o105 = {
        };
        function f106(a107) {
            o105 = a107;
            return a107;
        }
        Object.defineProperty(o105, "g", { set: f106 });
        o105.e = a51;
        o105.g = -4294967297n;
    } catch(e108) {
    }
    try {
        const o109 = {
        };
        o109.c = v30;
        o109.e = o109;
        o109.e = a51;
        o109.g = -4294967297n;
        o109.c = v98;
    } catch(e110) {
    }
    let v111;
    try { v111 = v47["find"](..."find", a53, ...v46, ...v47, ...522675525n); } catch (e) {}
    v111 <= a52;
    return arguments;
}
for (let v113 = 0; v113 < 5; v113++) {
    f49();
}
%PrepareFunctionForOptimization(f49);
f49();
%OptimizeFunctionOnNextCall(f49);
f49();
