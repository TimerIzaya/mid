const v0 = [-4.0,-2.220446049250313e-16,-1.0624740081877277,-1000000000000.0,6.6606670421487735,2.0,-1.0,1.1935602073262654e+308,-1e-15,-1000000.0];
const v1 = [-2.2250738585072014e-308,-1.2734499059372313e+308,-1.0];
const v2 = [5.185779010952018e+307,0.238689671266345];
function f6(a7, a8, a9) {
    const o28 = {
        __proto__: v1,
        o(a11) {
            gc();
            return this;
        },
        "f": a9,
        ...a7,
        /*
        __proto__: v1,
        */
        valueOf(a15, a16, a17, a18) {
            function F20() {
                if (!new.target) { throw 'must be called with new'; }
                this.c = 1163987790;
            }
            Math.log1p(-2.0);
            a18[Symbol.toPrimitive];
            return a9;
        },
        "g": a7,
        "d": -268435456,
        "b": a7,
    };
    return o28;
}
f6(v0, 10102, v1);
f6(v0, 10102, v2);
f6(v2, -268435456, v0) & -268435456;
function F39(a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
}
try { v1["throw"](); } catch (e) {}
class C46 {
    static #e = -4.0;
    #valueOf(a48, a49, a50, a51) {
    }
    static #valueOf(a53, a54, a55) {
    }
    constructor(a57, a58) {
        function f59(a60) {
            const v62 = [];
            const o63 = {
                ...v62,
            };
            const o69 = {
                toString(a66, a67) {
                    new Date(this);
                    return this;
                },
            };
            function f70(a71) {
                a71 & a71;
            }
            this.onmessage = f70;
            this.__proto__;
        }
        const v78 = [f59];
        const o79 = {
            "arguments": v78,
            "type": "function",
        };
        new Worker(f59, o79);
    }
}
new C46(C46, -4.0);
const v82 = new C46(-4.0, -4.0);
const v83 = new C46(9007199254740992, 512);
const v86 = new Uint8Array(0);
const v89 = new Uint8Array(4096);
const v92 = new Uint8Array(255);
let v93;
try { v93 = v89(); } catch (e) {}
try { v93(v86, v93, v82); } catch (e) {}
C46[v92];
let v99;
try { v99 = v83.m(0, v86); } catch (e) {}
const o100 = {
};
try {
    o100.h = v99;
} catch(e101) {
}
try {
    const o102 = {
    };
    o102.h = v99;
    o102.d = 512;
} catch(e103) {
}
try {
    const o104 = {
    };
    o104.h = v99;
    o104.d = 512;
    o104.e = v86;
} catch(e105) {
}
try {
    const o106 = {
    };
    o106.h = v99;
    o106.d = 512;
    o106.e = 255;
} catch(e107) {
}
