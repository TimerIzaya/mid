const o9 = {
    get d() {
        this[0] /= 4294967296;
        let v5 = -908890636;
        return Math.log(this & --v5);
    },
};
for (let i = 0; i < 10; i++) {
    o9.d;
}
const v15 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v16 = [601759695];
const v17 = [1073741824,1073741823,1376142744,1073741825];
function f19(a20, a21, a22, a23) {
    function f25() {
        const o32 = {
            "e": -4294967295,
            ...v15,
            ..."Vre",
            "c": a23,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a30, a31) {
                return a31;
            },
            ..."Vre",
            4: "Vre",
            5: -4294967295,
            6: -268435456,
        };
        return v16;
    }
    f25();
    %OptimizeFunctionOnNextCall(f25);
    let v35;
    try { v35 = v17[a22](..."find", a23, ...v16, ...v17, ...522675525n); } catch (e) {}
    v35 <= a22;
    return arguments;
}
for (let v37 = 0; v37 < 10; v37++) {
    f19();
}
function f41() {
}
Math.log1p(0.04879611221991542);
class C46 {
    static 9 = 9.187362692894364;
}
class C49 {
    constructor(a51) {
        for (const v52 of "bigint") {
            this.c = v52;
        }
    }
    h = undefined;
}
const v53 = new C49();
const o54 = {
};
new Proxy(v53, o54);
for (const v57 in C46) {
}
const o58 = {
};
("undefined").localeCompare("undefined", "symbol", "undefined");
-9223372036854775808n - -9223372036854775808n;
const v69 = new Int8Array(-1473599876);
const v71 = new Uint8ClampedArray();
const v72 = v71.toReversed();
const v74 = [v72,v72];
Reflect.apply(v69.includes, v69, v74);
Reflect.preventExtensions(Reflect);
