const v0 = [-7.188051799780368,1.6930676811006247e+308,5.0,-31.722507875357792,4.291873424733552,-302.900729432468,-29.707047707793663,-1000000000000.0];
const v1 = [-2.2250738585072014e-308,501.73337148659016,-0.8948113808100331,4.993355393235707e+307,-5.0,-9.631983279987235e+307];
[-1000000000.0,NaN,-0.21584799174948444,-1000.0,-Infinity,1000000.0];
/[x\dz](a\1)a(?:b)/uds;
/[\u0060(x)(x)(x)\1*]/ud;
/\1(a)a|bc/um;
const v9 = new Float64Array(1000);
const v12 = new BigInt64Array(94);
try {
    v1.length = 1000;
} catch(e13) {
}
try { v12.reduceRight(v9, 94); } catch (e) {}
const v17 = new Uint32Array(104);
let v20 = -48166n;
v12[1n] *= 104;
v20 += 5n;
const v24 = new Uint16Array(3225);
const t18 = -2103019971n;
t18[2] = 104;
const v26 = [];
Reflect.apply(v17.toLocaleString, v0, v26);
for (const v29 of v24) {
    v29[3] = 5n;
    9007199254740991 * v29;
}
