function f0() {
    const o8 = {
        "a": f0,
        "h": "-866867945",
        set g(a5) {
            a5 = this;
            try {
                super.p(a5, "callee");
            } catch(e7) {
            }
        },
        "c": "callee",
        9: "c",
    };
    return o8;
}
function f9(a10, a11) {
    function f13(a14, a15, a16, a17) {
        "valueOf" | a15;
        a14 / a15;
        const v20 = a15 < a15;
        v20 >>> a16;
        const o25 = {
            n(a23, a24) {
                return v20;
            },
        };
    }
    return f9;
}
f0.toString = f9;
const v26 = f0();
const v27 = f0();
const v28 = f0();
class C29 {
    a = v27;
    constructor(a31) {
        a31.g <<= this;
        a31[Symbol.isConcatSpreadable] = v27;
    }
    static #b;
    static [f0];
    #h = f0;
    #f;
}
const v34 = new C29(v27);
const v35 = new C29(v27);
const v36 = new C29(v26);
function F37(a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = a40;
    try {
        a39.h = v35;
    } catch(e41) {
        e41[1261605918];
        try { a39.getUTCDate(a39, a39); } catch (e) {}
        Object.defineProperty(this, 1, { get: f0 });
        Object.defineProperty(this, "h", { writable: true, value: a40 });
    }
    try {
        this.e = a40;
    } catch(e45) {
    }
    try {
        this.d = v28;
    } catch(e46) {
    }
}
new F37(C29, v34);
new F37(v28, C29);
new F37(v27, v36);
for (let v50 = 0; v50 < 25; v50++) {
    Math.sin(v50 ** 2);
}
