class C3 {
    static o(a5, a6) {
        this[this] = a5;
        try {
            this.__proto__ = this;
        } catch(e8) {
        }
        return a5;
    }
    set b(a10) {
        a10[1253] &&= -2147483648;
        new Uint8Array(4096);
        new Uint16Array(123);
        new Float32Array(2751);
    }
}
const v20 = new C3();
function f21(a22) {
    C3[10];
    Math.pow(!0.8843420658768774, -60544);
    return -2147483648;
}
v20[Symbol.toPrimitive] = f21;
new C3();
const v32 = new C3();
v32.toString = Symbol;
function f33(a34, a35, a36, a37) {
    function f38(a39, a40) {
        try {
            a34.e = f21;
        } catch(e41) {
        }
        return a35;
    }
    a37[Symbol.toPrimitive] = f38;
    const o49 = {
        "g": a36,
        ..."o",
        127: a37,
        [a37]: a36,
        __proto__: a34,
        "a": C3,
        get h() {
            const v45 = a37 == this;
            if (v45) {
                C3 = this;
            } else {
                ({"b":a36,...a34} = a37);
            }
            return v45;
        },
    };
    return o49;
}
const v50 = f33(v20, C3, f33, v20);
const v51 = f33(v20, "o", v50, v32);
f33(v32, v51, v51, v20);
class C56 extends f33 {
    #m(a58, a59, a60, a61) {
        this[2] |= -2147483648;
        v32 ^ "number";
        let [] = "number";
        let v64;
        try { v64 = C3["n"](v51, "n"); } catch (e) {}
        const v68 = ~1810907860;
        const v69 = v64 & v50;
        const v70 = 186267.21614165907 ^ v64;
        !v32;
        const v72 = Math.log1p(v70);
        v32 * v69;
        v68 & v32;
        return v72;
    }
}
new C56();
new C56();
new C56();
new Int16Array(1);
new Uint16Array();
new Int16Array(386);
new Uint16Array();
new Int16Array(16);
new BigInt64Array(2);
const v97 = Symbol.iterator;
const o106 = {
    [v97]() {
        let v99 = 10;
        const o105 = {
            next() {
                v99--;
                v99 == 0;
                const o104 = {
                };
            },
        };
    },
};
