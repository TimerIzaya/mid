class C3 {
    static 9;
    toString(a5, a6) {
        a6[this] = -838461.3955403899;
        %VerifyType(this);
        [-14827879,-2147483649,-4294967295,9007199254740992,272021319,536870912,1,273654979];
        [5,15,512,45827,-1073741824,2076631338];
        [-28922,-4,-9007199254740991,21363];
        return -1.2740870627842415e+308;
    }
    a = -1.2740870627842415e+308;
    h;
}
C3.length;
const v11 = new C3();
v11.a = v11;
const v12 = new C3();
v12.g = v12;
new C3();
let v14 = 16;
v14--;
Float64Array.f = Float64Array;
new Float64Array(v14);
let v18 = 0;
v18--;
new Uint8Array(v18);
new Uint32Array(129);
function F25() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 3;
    } catch(e28) {
    }
}
try { new BigInt64Array(Uint32Array, v11, C3); } catch (e) {}
const v31 = new BigInt64Array();
var c = v31;
const o33 = {
};
o33.h = o33;
gc();
class C35 extends F25 {
    static set d(a37) {
    }
}
const v38 = /V/gdiy;
v38.b = v38;
/a\b!/vmy;
/a{0,1}?/uisy;
127 + 127;
new Int8Array(127);
const v46 = [-1.5424212036356715e+308];
try { v46.map(536870887n); } catch (e) {}
v46[536870887n] = v46;
~4;
new Uint8Array(6);
function f56() {
}
