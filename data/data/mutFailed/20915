function F0() {
    if (!new.target) { throw 'must be called with new'; }
    function f2(a3) {
        Math.sinh(F0);
        Math.sqrt(this);
        ~a3;
        a3 - 256;
        return a3 || a3;
    }
    this.toString = f2;
    try {
        this.e = -1024;
    } catch(e13) {
    }
    try {
        this.a = -1024;
    } catch(e14) {
    }
    try {
        this.b = -1024;
    } catch(e15) {
    }
}
const v16 = new F0();
const v17 = new F0();
function f18(a19, a20) {
    a20?.[208];
    return v17[v16];
}
v17.toString = f18;
const v23 = new F0();
function f27() {
    return 9;
}
function f28(a29, a30, a31, a32) {
    function f33(a34) {
        const o36 = {
        };
        gc(o36);
        return F0;
    }
    a31.toString = f33;
    const o38 = {
        ...v16,
        [9]: v16,
        ...a32,
        [v17]: v16,
        "a": a29,
        ...v17,
        7: a30,
        ...v16,
        "f": a32,
        ...a31,
        "e": F0,
        ...v16,
        __proto__: v17,
    };
    return o38;
}
f28(f28(f27, -1073741824, v17, v16), -1073741824, v17, v16);
const v41 = f28(f27, 9, v17, v23);
[2147483647,37983,-4294967297,-4096,268435456,2147483647,-1640951830,-40566,-13,-36491];
[1117189110,34476,65537,10000,536870889,63759,-2];
[1309457207];
new Int32Array(11);
for (let v48 = 0; v48 < 25; v48++) {
    const v49 = [601759695];
    v49[5] = v41;
    const v50 = [1073741824,1073741823,1376142744,1073741825];
    function f51(a52, a53, a54, a55) {
        a52[5] = v50;
        function f56(a57, a58) {
            return a52;
        }
        f56.source;
        const v60 = f56();
        v60[5];
        v60 >> v60;
        let v64;
        try { v64 = v50["find"](...v49, a55, ...v49, ...v50); } catch (e) {}
        return v64;
    }
    for (let v65 = 0; v65 < 5; v65++) {
        f51(v49, v65, v48, v65);
    }
}
