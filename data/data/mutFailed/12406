function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = -1;
    } catch(e3) {
    }
    try {
        this.h = -1;
    } catch(e4) {
    }
}
new F0();
const v6 = new F0();
new F0();
const v8 = [-38686,-6,10000,-53904,-65535,48017,257,536870889];
const v9 = [-67583095,16,64];
const v10 = [-16,268435456,53406];
class C11 extends F0 {
    static set c(a13) {
        a13 ||= a13;
        class C14 {
            static 14;
            f;
            static h = v8;
        }
        const v15 = new C14();
        new v15();
        new C14();
    }
    d = v9;
    #h;
    static 128;
    #d = v9;
}
const v18 = new C11();
const v19 = new C11();
const v20 = new C11();
throw v6;
try { v10(...v9, F0, v20, v10); } catch (e) {}
class C25 extends C11 {
    constructor(a27, a28, a29, a30) {
        super();
        const v34 = new Int8Array(7);
        new Uint32Array(v34);
        try { new a29(v18, a29, v8); } catch (e) {}
        new Int32Array(257);
        new Int32Array(512);
        new Float32Array(1);
    }
    static #h = v9;
    #c = v8;
}
const v46 = new C25(v10, v19, F0, C25);
const v47 = new C25(v9, v19, v9, v46);
new C25(v9, v10, v8, v46);
let v49 = /a|b/vdy;
let v50 = /7Z(?:a?)+/gudsy;
const v51 = /\coQ/gdy;
function F52(a54) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v49;
    } catch(e55) {
    }
    try {
        this.g = a54;
    } catch(e56) {
        a54.dotAll >>= e56;
        let v57;
        try { v57 = a54(e56, v50); } catch (e) {}
        v50 = v49;
        return e56;
        v49 = v57;
    }
}
const v58 = new F52(v49);
const v59 = new F52(v50);
const v60 = new F52(v49);
class C61 extends F52 {
    static {
        super[v60] = v49;
        let v63;
        try { v63 = v50(F52); } catch (e) {}
        super.g |= v49;
        const v65 = super[v51.exec(v63)];
        try { v65(this, v65); } catch (e) {}
        v51[4];
        const v69 = v60 === v63 ? v60 : v63;
        try {
            v47.c = this;
        } catch(e70) {
            const o71 = {
                [e70]: this,
                "f": v69,
            };
            v59[Symbol.match];
        }
    }
    #h;
    static #g;
    g = v58;
    #b;
}
const v75 = new C61();
const v76 = new C61();
new C61();
const v78 = [-1077398797,2,1671415104,4294967297];
function f79(a80, a81, a82) {
    function f84(a85) {
        ++a85;
    }
    this.onmessage = f84;
    try {
        this.fuck(v60, a81);
    } catch(e88) {
    }
}
const v91 = [C61,v59,v49];
const o92 = {
    "arguments": v91,
    "type": "function",
    [v51]: v91,
    "d": v76,
    __proto__: v76,
    [f79]: v75,
    "e": v78,
};
[-5,-65536,-65537,14311,14,255];
function f94(a95, a96) {
    Math.imul(3, a95 % a95);
    Math.log(3);
    a96.constructor(a96);
    return f94;
}
new Promise(f94);
