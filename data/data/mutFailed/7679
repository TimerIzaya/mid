[-33992,617065436,-13];
[-10,65537,402335413,-128,1974779910,-13,-2147483647,13,11];
[-1877,-1,8];
function F9(a11, a12, a13) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a11;
    } catch(e14) {
    }
}
new F9(-34893n, -58639n, -34893n);
const v16 = new F9(-34893n, 9007199254740992n, 9007199254740992n);
new F9(-58639n, -58639n, -34893n);
const v18 = [1.0663730977141727e+308,NaN,-1.1534060997380896e+308,-9.26829361922416e+307];
function f19(a20, a21) {
    function F23(a25) {
        if (!new.target) { throw 'must be called with new'; }
        const v26 = a25 ^ F23;
        let v27 = v26 * v26;
        v27--;
        const v29 = this.constructor;
        v29.length = v29;
        try { new v29(3n); } catch (e) {}
    }
    return a21;
}
v18.constructor = f19;
["function",/xEz\xe2\x81\xa3/gumy];
class C34 {
}
const v35 = new v16();
ReferenceError(v35);
const v38 = [0.3588640203078587,-1e-15,0.5938791097479088,-1000000000.0];
v18.constructor;
function f40(a41, a42) {
    return Math.tanh("1");
}
%PrepareFunctionForOptimization(f40);
const v46 = [5.453486096719857];
function F47(a49) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a49;
    try { this.push(F47); } catch (e) {}
    try {
        this.d = a49;
    } catch(e51) {
        let v53 = new Date();
        v53 **= v53;
    }
}
new F47(v18);
new F47(v38);
const v57 = new F47(v46);
v57.a = v57;
let v59 = 2086125797;
v59++;
const o62 = {
};
Math.cos(-1567809689);
256 === 256;
const v69 = new Uint16Array(Uint16Array);
new Uint8ClampedArray(v69);
function f72() {
}
class C73 extends f72 {
}
new C73();
function f76(a77, a78) {
    const o79 = {
    };
    return o79;
}
const v80 = new Set();
function F81(a83, a84) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "b", { enumerable: true, value: o62 });
    try {
        const o90 = {
            o(a86) {
                const o88 = {
                };
                return gc(o88);
            },
        };
        this.d = a83;
    } catch(e91) {
        for (let [v92,v93] of a83) {
        }
    }
    const t89 = 4294967296;
    t89.h = v80;
    ~(-256n >> a84);
    try {
        (4294967296)[this];
        try { new WeakSet(); } catch (e) {}
        const v100 = [ReferenceError];
        v100[4294967296] = a83;
        const v101 = new F81();
        this.b = v100;
        const v103 = new Map();
        v100[4294967296] = Set;
        const v104 = [v101];
        const v105 = [v104,v104,v101,v103];
        [-256n,v105,-41535,v103,v105];
    } catch(e107) {
    }
}
F81.arguments;
new F81();
