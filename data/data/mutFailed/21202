class C3 {
    e;
    static #f;
    constructor(a5, a6) {
        try { this.toJSON(); } catch (e) {}
        a5 ** a5;
        a5.b ^= 0.6166373540258894;
        const v9 = [0.0,1000000000.0,-9.821086765219384e+307,-858.0794579951759];
        const v10 = [-2.0,-1.5384788741465538,-2.0];
        const v11 = [0.9388990264144315,-1e-15,-1.0,841561.2554243801];
        class C12 {
            static a;
            n(a14, a15) {
                try { a15["push"](...v9, ...a15, ...v9, ...v10, ...this); } catch (e) {}
                return "push";
            }
            static b;
            static m(a19) {
                try { new a19(this, this, v9, this); } catch (e) {}
                v9 < v11;
                const o22 = {
                };
                new Proxy(this, o22);
                return v11;
            }
        }
        const v25 = new C12();
        class C27 {
        }
        function F28() {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v30 = new F28();
        const v31 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
        const v33 = 9007199254740991n * 9007199254740991n;
        function f34() {
            for (let v35 = 0; v35 < 5; v35++) {
                "p" == "p";
                try { ("p").substring(C27, C27); } catch (e) {}
            }
            try {
                v31.forEach();
            } catch(e40) {
                e40.a = v30;
                e40.a = e40;
            }
            const v42 = ("1073741824").constructor;
            v42.name = v42;
            const v43 = v42(v33);
            try { v43.replaceAll(6, v25); } catch (e) {}
            return "1073741824";
        }
        [] = "n";
        try { new a6(); } catch (e) {}
    }
    ["n"] = 56121;
    static [0.6166373540258894];
    static ["n"] = 0.6166373540258894;
}
const o47 = {
};
gc(o47);
function F49() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 1073741824;
    } catch(e52) {
    }
    try {
        this.f = 1073741824;
        const v53 = [-1.5645136499685964e+308,-4.455146091404086e+307,-6.885938370216613,-Infinity];
        const v54 = [-8.594679214373069e+306,-1000.0];
        const v55 = [-1.0,-3.0,1000000000000.0,0.4992460480015034,-1000000000000.0,-1.7976931348623157e+308,0.8138769867150808];
        try {
        const t0 = 1073741824;
        t0(F49, v53, v55, 1073741824, F49);
        } catch (e) {}
        [1073741824,this,1073741824,v54];
        [this,v53,[v55,F49,v54],F49];
        function F61() {
            if (!new.target) { throw 'must be called with new'; }
            function F63(a65, a66) {
                if (!new.target) { throw 'must be called with new'; }
            }
            class C67 {
                static get g() {
                    super.subarray();
                }
            }
        }
    } catch(e70) {
    }
}
const v71 = new C3(0.6166373540258894, 0.6166373540258894);
const v72 = new C3(v71, 0.6166373540258894);
new C3(v72, v72);
[6,127,0,44027,4096,9007199254740992,-7,0,59218];
const v75 = [-65536,-1];
[7476,-4294967296,924,4096,268435456,1538521022,-5,-1024];
function f77() {
    return v75;
}
[-9223372036854775807,-65537];
[-9223372036854775808,-14879,512,58376];
[64,65420,1400117362];
const v83 = new Float32Array(1);
new Uint8ClampedArray(v83);
