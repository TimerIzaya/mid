function f0() {
    const v4 = ("2147483648")?.toLocaleUpperCase;
    let v5;
    try { v5 = new v4(); } catch (e) {}
    const o13 = {
        "d": -1e-15,
        o(a7, a8) {
            const v9 = a8?.d;
            delete v9[536870887];
            a8?.d;
            v9.c -= a7;
            try {
                a8.__proto__ = this;
            } catch(e12) {
            }
            return this;
        },
    };
    return v5;
}
const v14 = f0();
const v15 = f0();
const v16 = f0();
let v17 = v16?.constructor;
let v18;
try { v18 = new v17(f0); } catch (e) {}
({"b":v17,"e":f0,} = v18);
const v25 = [f0];
let v26;
try { v26 = v25.sort(v14); } catch (e) {}
const v27 = [v15,v15];
v27[1] = v27;
for (const v28 in v25) {
    let v31 = 7;
    const v33 = +(v31--);
    Math.sign(v28);
    Math.cbrt(v33);
    Math.pow(v28, 1820649547);
    v28 + v28;
}
try { v27.map(v15); } catch (e) {}
const v39 = [v27];
let v40;
try { v40 = v39.findLastIndex(f0); } catch (e) {}
Uint16Array.f = Uint16Array;
new Uint16Array(64);
-v26;
const v47 = new Uint16Array(434);
const v48 = v47[74];
v48 >>> v48;
try { v16(v47, v40, v15, v40); } catch (e) {}
try {
    ("subarray").indexOf(14);
} catch(e54) {
}
const v56 = new Uint8ClampedArray(127);
v56[3] = v56;
try {
    ("number").repeat(506345303);
} catch(e60) {
}
