function f0() {
}
class C1 {
    [C1] = f0;
    get h() {
        const v3 = this ^ f0;
        delete this?.h;
        const v5 = this % f0;
        return Float32Array;
        v3 || v3;
        function f9() {
            for (let i12 = 0, i13 = 10;
                i12 < i13;
                (() => {
                    const v17 = i12++;
                    v17 >> v17;
                })()) {
            }
            return 15;
        }
        f9();
        new Float32Array(15);
        new Int32Array(128);
        new Int32Array(37);
        return v5;
    }
    static #c;
    1000;
}
new C1();
([0.4391347154580403,257.99749453941945,-9.996237582361703,-2.2250738585072014e-308,2.0,0.22007729464719739]).b;
+0.544190430081408;
const v36 = new Map();
v36["p" + -7] = -7;
const o39 = {
    ...v36,
};
new C1();
new C1();
new BigUint64Array(127);
new Float32Array(1000);
const o50 = {
    "maxByteLength": 10000,
};
class C52 extends Int32Array {
}
new Float64Array(181);
const v58 = new Int32Array(245);
new Float32Array(v58);
