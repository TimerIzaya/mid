const v0 = [536870887,-42204,-17288903,-3,9007199254740991,7];
class C1 {
    static valueOf(a3) {
        a3[5];
    }
}
const v5 = new C1();
const v6 = [6,268435440,13,1073741825];
const v7 = [-1920518402,10000,-16,15780,2147483647,24444];
class C8 {
    static valueOf(a10) {
        super[a10] = this;
        v6[v7] = v7;
        return super[v7];
    }
    constructor(a13) {
        function f14(a15, a16) {
            const o17 = {
                "c": v6,
                "h": a16,
            };
            return o17;
        }
        f14(v7, a13);
        f14(v0, v0);
        f14(a13, v0);
    }
}
const v21 = C8?.constructor;
try { new v21(C8); } catch (e) {}
const v23 = new C8(v6);
const v24 = new C8(v0);
const v25 = new C8(C8);
const v26 = v25?.constructor;
try { new v26(v24); } catch (e) {}
function f28(a29, a30, a31, a32) {
    try { a29.findLast(v0); } catch (e) {}
    a30[1] = a30;
    try { a32.valueOf(); } catch (e) {}
    const o46 = {
        __proto__: a29,
        "g": a29,
        "f": v24,
        get e() {
            let v37 = 1;
            let v38 = 820086.9196656225;
            v38++;
            const v40 = -v37;
            Math.atanh(this);
            let v42 = v37 && v40;
            v42--;
            v37++;
            Math.sinh(v42);
            return v23;
        },
    };
    try { o46.indexOf(a32); } catch (e) {}
    return o46;
}
try { f28(v6, v6, v23, v6); } catch (e) {}
const v49 = f28(v6, v0, v24, v23, v0, v5);
try { v49.indexOf(f28); } catch (e) {}
f28(v7, v7, v25, f28(v7, v0, v7, v49));
const v55 = new BigUint64Array(-1);
new Uint8Array(-1);
const v61 = new Int16Array(16);
v61[10] = -9007199254740992;
try { v55.set(v49, v21); } catch (e) {}
new Uint16Array(3239);
let v66 = 513;
++v66;
BigInt64Array.prototype;
new BigInt64Array(v66);
[5.0,-1000000000000.0];
[-3.4570322798414105e+307,169.39416483428454,-2.0,-1000.0,5.0,1.0,14338.693316202844,-1000000.0,955.167973693761,0.5696151956948133];
[-2.0,-2.0];
try { Array.call(Uint16Array); } catch (e) {}
const v83 = new Array();
try { v83.findLast(BigUint64Array); } catch (e) {}
const v86 = new Date();
Array[2147483648] = v86;
const v87 = Date > "undefined";
v87 || v87;
const v89 = v87 ? Date : "undefined";
try { v89.match(BigUint64Array); } catch (e) {}
let v91 = 0;
do {
    ("minor")[0];
    const o96 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o96);
    v91++;
} while (v91 < 2)
const v2 = new Float64Array(253);
64 >> 64;
new Uint8Array(64);
Uint16Array.BYTES_PER_ELEMENT = Uint16Array;
const t4 = 253;
const v9 = new t4(14);
-677215.3428691365 >>> -677215.3428691365;
[1000.0];
const v15 = [0.41951652438766707,v2,Uint8Array,253];
v15[3] = v15;
[v9];
try { new Uint8ClampedArray(Uint8ClampedArray, -677215.3428691365, -677215.3428691365); } catch (e) {}
const t12 = 1000.0;
const v20 = new t12(512);
const t14 = [-10458,-2,2147483648];
t14[512] = 512;
try {
    v20.sort(Uint8ClampedArray);
} catch(e24) {
    e24.e = e24;
}
