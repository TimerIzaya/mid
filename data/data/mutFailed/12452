class C3 {
    constructor(a5, a6) {
        a6 * a6;
        a6 >> a6;
        Math.sign(10000);
        10000 >>> 471146.13961448893;
        -Math.sqrt(a6);
    }
    #b;
    m(a16) {
        try {
            this.#b;
        } catch(e18) {
        }
        a16[this] = this;
        super[1073741825] = a16;
        let v22 = -84107.49302066129;
        const v23 = v22--;
        -1480054736 / this;
        Math.sqrt(-1480054736);
        v23 | this;
        return -1480054736 / this;
    }
}
let v28;
try { v28 = new C3(C3, -2.0); } catch (e) {}
new C3(C3, 471146.13961448893);
const v30 = new C3(1073741825, -2.0);
const v31 = new C3(1073741825, -2.0);
const v32 = v31?.constructor;
try { new v32(v30, v28); } catch (e) {}
-13 === -13;
let v40;
try { v40 = new Int8Array(1, 1, C3); } catch (e) {}
v40[0] = v40;
new Int8Array(1);
let v42 = 10;
v42--;
new Float64Array(v42);
-9223372036854775808 / -9223372036854775808;
try { new Uint16Array(v30, v30, Float64Array); } catch (e) {}
const v50 = new Uint16Array(-9223372036854775808);
v50[1001] = v50;
try { Math.tan(-9223372036854775808); } catch (e) {}
const v53 = Math.cos(Math);
v53 >>> v53;
