let v1 = 257;
class C3 {
    static g;
    constructor(a5) {
        -1.7976931348623157e+308 <= a5;
        super[1000.0] = this;
        function f7() {
            class C8 {
            }
            const v9 = new C8();
            try { v9.isPrototypeOf(v9); } catch (e) {}
            return v9;
        }
        const t13 = 1000.0;
        t13();
        const o12 = {
        };
        try {
            o12.f = v1;
        } catch(e13) {
        }
        try {
            const o14 = {
            };
            o14.f = v1;
            o14.g = 1000.0;
        } catch(e15) {
        }
        try {
            const o16 = {
            };
            o16.f = v1;
            o16.g = 1000.0;
            o16.c = a5;
        } catch(e17) {
            v1++;
            function f21(a22, a23) {
                const o26 = {
                    "g": 1073741824,
                    get d() {
                        super[a22];
                        return this;
                    },
                    "f": 3,
                    ...a22,
                    10: 1073741824,
                };
                return o26;
            }
        }
        try {
            const o27 = {
            };
            o27.f = v1;
            o27.g = 1000.0;
            o27.c = -1.7976931348623157e+308;
        } catch(e28) {
        }
    }
}
new C3(C3);
const v30 = new C3(1000.0);
const v31 = new C3(1000.0);
class C32 extends C3 {
    static #a = v30;
    m(a34, a35, a36) {
        return a36 === a35;
    }
    valueOf(a39, a40, a41) {
        try {
            super.p(v1, a39, a40, C3);
        } catch(e43) {
        }
        try {
            C3.fuck(a39, a40, a39, undefined);
        } catch(e46) {
        }
        return a39;
    }
}
const v47 = new C32();
const v48 = new C32();
const v49 = new C32();
class C50 extends C32 {
    9;
    [1000.0];
    constructor(a52, a53, a54) {
        super();
        a53 / a52;
        try {
            v30.__proto__ = v47;
        } catch(e59) {
        }
    }
    static [v1];
    static 9 = v1;
}
const v60 = new C50(v48, C32, v48);
const v61 = new C50(v60, v30, v31);
new C50(v61, v61, v49);
for (let v63 = 0; v63 < 5; v63++) {
    function f64() {
        const v67 = Math.atanh("Vre");
        v67 + v67;
        return v63;
    }
    f64();
    %OptimizeFunctionOnNextCall(f64);
}
const v72 = new BigUint64Array(4096);
v72.includes(4096);
