function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -2147483649;
    } catch(e3) {
    }
    try {
        this.h = -2147483649;
    } catch(e4) {
    }
    try {
        this.b = -2147483649;
    } catch(e5) {
    }
}
const v6 = new F0();
new v6();
const v8 = new F0();
function f10() {
    return v8;
}
new BigInt64Array(1000);
new Int32Array(BigInt64Array);
new Uint8Array(f10);
const v22 = new Int32Array(Uint8Array, 129, 129);
const v24 = new BigInt64Array();
const v25 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
v25[1] = v25;
try { (129).some(); } catch (e) {}
const v27 = [-1.7976931348623157e+308];
function f28(a29, a30, a31, a32) {
    const o38 = {
        toString(a34, a35, a36) {
            try { v6.toString(); } catch (e) {}
            a31[a30] = a29;
        },
    };
    return o38;
}
f28(v24, v22, v27).toString();
f28(v22, 2879, v25) % v27;
