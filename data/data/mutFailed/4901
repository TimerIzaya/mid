new Float32Array(1);
new Int32Array(8);
new Uint16Array(Int32Array);
class C14 {
    static #p(a16) {
        function f17() {
            return a16;
        }
    }
}
const v19 = new Map();
const v20 = v19?.constructor;
try { new v20(); } catch (e) {}
const v22 = [1073741824,1073741823,1376142744,1073741825];
function f25(a26, a27) {
    const o28 = {
    };
    o28?.__defineSetter__;
}
Float32Array();
f25();
let v32 = 1000000000000.0;
v32--;
function f36(a37, a38) {
    const o39 = {
        [10000n]: a38,
    };
}
function F41(a43, a44, a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
    const v47 = this.constructor;
    try { new v47(758.9371938038303, this); } catch (e) {}
    this.c = a43;
}
const v49 = new F41(-2.0);
const v50 = new F41(-1.093925554716035e+308);
const v52 = v22 || (v50 in v49);
const t36 = [];
t36.length += 1.0;
try { v52(); } catch (e) {}
for (const v58 in "1024") {
}
