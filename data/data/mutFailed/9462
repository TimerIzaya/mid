class C6 {
    get b() {
        ("bigint")[8];
        [839757263,-1008397618,25894,-4096,12,-828833432,-4294967297,1073741823,-9007199254740990,1];
        [7,1597322939];
        [1073741824,-63578,1073741825,9007199254740991,-2147483649,4155,-14,9223372036854775807,1073741824];
        const v12 = [-22534,5,9007199254740992,0,0,-4096,-380661665,-570002887];
        [14,-2147483648,-65536,14,-145835508,-65537,257,1977354976];
        [1105543379,255,268435440,268435456,64125,11,-4294967296,-8];
        return v12;
    }
    ["a"] = "-13698";
    b;
    static #d = "a";
    static #b;
}
let v15 = new C6();
function f16() {
    let v17;
    try {
    const t0 = "-13698";
    v17 = t0("c", "c", "bigint", "bigint", v15);
    } catch (e) {}
    let v18;
    try { v18 = new v17("zH"); } catch (e) {}
    return v18;
}
v15.toString = f16;
const v19 = new C6();
new C6();
function F21(a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = "bigint";
    function f25(a26) {
        const v27 = f16 - this;
        this[v27] = v27;
        return this;
    }
    a23[Symbol.toPrimitive] = f25;
    try {
        this.h = v19;
    } catch(e30) {
    }
    try {
        this.f = a23;
    } catch(e31) {
    }
    try {
        this.c = a24;
    } catch(e32) {
    }
}
new F21(v15, "c");
new F21(v15, v19);
const v35 = new F21(v19, "a");
function F37(a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "d", { writable: true, configurable: true, enumerable: true, value: a39 });
    this.d = a40;
    this.c = 1;
    this.a = a40;
}
let v41 = -1.0;
const v42 = v41++;
const v43 = v42 - v42;
Reflect.b = 1;
const v45 = v35.constructor;
class C46 extends v45 {
    #a = "c";
    255;
    6 = v45;
}
new C46();
try { Reflect.set(v43); } catch (e) {}
const v49 = new F37();
v49[Symbol.toPrimitive] = f16;
const o52 = {
    __proto__: v49,
    ...v49,
};
new C6();
v15 |= o52;
try {
    Reflect.b = "c";
} catch(e54) {
}
const t86 = Array(11);
t86[212] -= 3774;
