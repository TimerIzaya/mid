const v2 = new Uint16Array(1000);
try { new Worker(Worker, Uint16Array, Uint16Array); } catch (e) {}
new Worker(536870888);
const v9 = new Uint8ClampedArray(127);
v9.BYTES_PER_ELEMENT;
const v13 = new Int32Array(v2);
try { v13.indexOf(v2); } catch (e) {}
!1663;
new Float64Array(1663, 1663, Uint16Array, v9);
const v21 = new Float32Array(1604);
try { v21.find(v21); } catch (e) {}
const v23 = [];
class C25 {
    constructor(a27, a28) {
        try { a27.toReversed(this, Uint16Array); } catch (e) {}
        Date | a27;
    }
}
const v31 = new C25(v23);
try { v31.hasOwnProperty(Int32Array); } catch (e) {}
