class C3 {
    constructor(a5, a6) {
        this[1];
        super[34921] = 0.8745267631518137;
        let v8 = a5.__proto__;
        v8 = a6;
        try { new gc(); } catch (e) {}
        ("minor")[1];
        const o14 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o14);
    }
    1 = 34921;
    static 836;
}
let v16;
try { v16 = new C3(C3, 0.8745267631518137); } catch (e) {}
const v17 = new C3("split", C3);
const v18 = v17[34921];
const v19 = new C3(v17, v17);
const v20 = new C3(v17, v17);
function F21(a23, a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    a23[1] = a23;
    a24[1];
    a25++;
    function f29(a30) {
        try { a30.sub(); } catch (e) {}
        try { Math.tan(a30); } catch (e) {}
        const v36 = 1941669912 - a30;
        const v37 = 1941669912 / 255;
        a30 || v36;
        v36 && a30;
        Math.ceil(255);
        let v41 = Math.ceil(v37);
        v41--;
        return v41;
    }
    Symbol.split = Symbol;
    a24[Symbol.toPrimitive] = f29;
    v16[Symbol] = v18;
    Object.defineProperty(v16, v18, { writable: true, get: f29 });
    try {
        this.c = a24;
    } catch(e48) {
    }
    try {
        this.h = v20;
    } catch(e49) {
    }
    try {
        this.a = a23;
    } catch(e50) {
    }
}
const v51 = new F21(v20, v19, 0.8745267631518137, v17);
const v52 = new F21(v51, "split", v51, v51);
const v53 = new F21(v51, v52, v19, v52);
function f54(a55, a56) {
    try { a56.apply(C3, a55); } catch (e) {}
    const o75 = {
        [v52](a59, a60, a61) {
            this.b |= a61;
            try {
            } finally {
                for (let v66 = 0; v66 < 32; v66++) {
                    a60["p" + v66] = v66;
                }
            }
            let {"a":v71,"c":v72,"h":v73,...v74} = a56;
            %VerifyType(v72);
            super.c ||= 0.8745267631518137;
            return -1024n;
        },
        ...a55,
        ...a55,
        ...v19,
        __proto__: v20,
        "c": v51,
    };
    return o75;
}
const v76 = f54(v19, C3);
v76?.constructor;
let v78;
try { v78 = new v76(f54, v52); } catch (e) {}
const v79 = f54(v20, v76);
f54("split", v53)[7614392];
const v82 = [-65537,-24143,-1293542190,14907,3476,-65083];
const v83 = [65537,3,-25535,268435440,-2,9007199254740990,1,-128,9007199254740990];
const v84 = [6,-536870912];
const v86 = new Date();
function F87(a89) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.constructor(v82); } catch (e) {}
    this.f = v86;
    this.g = Date;
}
new F87(v82);
const v92 = new F87();
class C93 {
    constructor(a95, a96) {
        function f97(a98, a99, a100, a101) {
            const o102 = {
                "deleteProperty": Date,
                "ownKeys": Date,
            };
            return v92;
        }
        f97.prototype = f97;
        f97(v83, Date);
    }
    static 1024 = v83;
    [v52];
    [v78] = v20;
    65535 = v79;
    static c;
    [v84];
    g = v92;
}
new C93();
new C93();
Uint16Array.BYTES_PER_ELEMENT;
const v108 = new Uint16Array();
try { v108.findLast(f54); } catch (e) {}
const v112 = new Float64Array(453);
v112[437] = v16;
const v113 = v112.toSorted();
const o114 = {
    "c": Float64Array,
    "f": v84,
    __proto__: v108,
};
Date();
Date.valueOf = v113;
