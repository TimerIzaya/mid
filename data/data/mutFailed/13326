class C3 {
    static {
        this.prototype = this;
        -256 - -256;
        [4294967296,-2,6,-9007199254740992,-65536,1000,-8,0];
        const v10 = [8727,12,1073741825,1867167286,-5,-3,4096];
        try { v10.entries(); } catch (e) {}
        v10[0] = v10;
        [3,957512088,257,20184];
    }
    constructor(a14) {
        this[231] = this;
        a14[0];
        let v16;
        try { v16 = new a14(this, a14, "260045823", this, 4); } catch (e) {}
        super[v16] = "260045823";
    }
    231 = "bigint";
    static ["260045823"];
    9 = 4;
}
try { new C3("260045823"); } catch (e) {}
const v18 = new C3("bigint");
v18[9];
v18[231] = v18;
const v20 = new C3(v18);
const v21 = new C3("260045823");
v21[9] = v21;
v21[231] = v21;
function f22() {
}
function f23(a24, a25, a26) {
    function F27(a29, a30) {
        if (!new.target) { throw 'must be called with new'; }
    }
    class C31 {
    }
    try { C31.bind("bigint"); } catch (e) {}
    const v33 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
    const v34 = [601759695];
    for (let v35 = 0; v35 < 5; v35++) {
        function f36() {
            const t42 = "Vre";
            t42[2] = "Vre";
            const v38 = ("Vre").strike();
            Object.defineProperty(Array, 0, { configurable: true, value: Float64Array });
            Array.from(Array);
            const v42 = Array();
            try { v42.findLast(v38); } catch (e) {}
            v42.unshift();
            Set.length = Set;
            const v46 = new Set();
            try { v46.add(Set); } catch (e) {}
            const v48 = v46.add();
            try { v48.forEach(4); } catch (e) {}
            class C51 {
            }
            try { C51.bind(F27); } catch (e) {}
            const v53 = new C51();
            v53.__proto__ = F27;
            Symbol.toPrimitive;
            const o58 = {
                toString(a56, a57) {
                },
            };
            o58.toString();
            const o67 = {
                "c": v34,
                "arguments": v33,
                "type": C31,
                valueOf(a61, a62) {
                },
                4: "Vre",
                toString(a64, a65, a66) {
                },
            };
            o67[522675525];
            const v72 = ([272822757]).toLocaleString();
            try { v72.indexOf(f23); } catch (e) {}
            [-2.0];
            try { Math.tan(4); } catch (e) {}
            const v77 = Math.acosh();
            v77 & v77;
        }
        f36();
        %OptimizeFunctionOnNextCall(f36);
    }
}
f23();
let v83 = -4294967295;
v83++;
const v85 = v83 - v83;
v85 & v85;
const v87 = [-65535,4096,-17727,9007199254740990,256,0,16,-20810,-1731948602];
const v88 = [38777,1811964036];
const v89 = [-15,1569011618,28418,55041,268435440];
try { v89.reduce(v89); } catch (e) {}
class C91 {
    3685;
    static [v83];
    static c;
    constructor(a93, a94) {
        a94[1];
        try { a93.find("bigint"); } catch (e) {}
        super.c = v83;
        function f97() {
            return v83;
        }
        f97.d = f97;
    }
    static p(a99, a100, a101) {
        super.h;
        return this;
    }
}
C91.name = C91;
C91.g = C91;
const v106 = new C91(v89, v88);
v106[3685];
const v108 = new C91(v88, v89);
v108[3685] = v108;
new C91(v20, v87);
function f110() {
    const v111 = [1000000000.0,-5.576877862296471e+307,1000000000000.0,-311382.1661484719,1000000000.0];
    function f112() {
        return f110;
    }
    let v113;
    try { v113 = f112(); } catch (e) {}
    v113.prototype;
    for (let i = 0; i < 5; i++) {
        Object.defineProperty(v111, "d", { configurable: true, get: f112, set: f112 });
    }
    class C115 {
    }
    return f110;
}
f110.e = f110;
%PrepareFunctionForOptimization(f110);
f110();
%OptimizeFunctionOnNextCall(f110);
f110();
