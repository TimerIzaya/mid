const v0 = [];
const v2 = new Map();
const v4 = new Set();
class C5 {
    #d = v2;
    h = v2;
    0 = Map;
    constructor(a7) {
        let v8 = 10;
        for (; v8--;) {
            Map % v2;
        }
        try {
            a7.#d = a7;
        } catch(e11) {
        }
        const v12 = -this;
        if (Map < v8) {
            const v20 = !65537;
            Math.atanh(v20);
            Math.expm1(v20);
            Math.acos(65537);
            Math.cbrt(v12);
        } else {
            d = v8;
            a7?.g;
        }
        Math.sin(v0);
        Math.acosh(v4);
        +Set;
        v0 * 1.0;
    }
}
const v30 = new C5(v4);
const v31 = new C5(v30);
new C5(v31);
let v34 = -15n;
const v38 = new Uint16Array(undefined, Uint16Array, Uint16Array);
"p" + 154;
const o44 = {
    "maxByteLength": 3035,
};
function F45(a47, a48, a49, a50) {
    if (!new.target) { throw 'must be called with new'; }
    const v51 = this.constructor;
    try { new v51(154, a50, 154, a48); } catch (e) {}
    -a48;
    a50 <= a50;
}
const v55 = new F45(154, 129, 129, 154);
v34 = 8n;
try { ("p").includes(v0, 154); } catch (e) {}
let v58 = -4294967297;
--v58;
const v61 = !v58;
Math.sign(v58);
Math.sign(v61);
const t56 = v55.constructor;
new t56(v55, v38, undefined, v38);
new F45();
new F45();
