class C3 {
    static [2.571289259201948e+307];
    static #h;
    get g() {
        function f7(a8, a9) {
            return -1.2306990069287131;
        }
        Symbol();
        new Uint8ClampedArray(431);
        new Uint16Array(106);
        new Uint16Array(9);
        return "undefined";
    }
    static [-2];
}
const v20 = C3?.constructor;
try { new v20(C3); } catch (e) {}
new C3();
const v23 = new C3();
const v24 = new C3();
-4 + -4;
[-3.0,-2.0,-Infinity,9.774284934488787,1000.0,-1e-15,0.054224131730513436,2.220446049250313e-16];
[-2.0,0.3496557065730883,-198960.33057065378,1000000.0,-2.2250738585072014e-308,3.0,514.7788731719718,Infinity,-5.0,-4.0];
const v31 = [65432.22864755988,-8.772830723612176e+307,4.609878131844013,0.0,-1.0,-1.6574708308559911e+308];
try { v31.toString(); } catch (e) {}
class C33 {
    static #e = 46864;
    set b(a35) {
        let v36;
        try { v36 = a35(this, 46864, 46864, v23, v31); } catch (e) {}
        try {
            v23.e = v36;
        } catch(e37) {
        }
        for (let v38 = 0; v38 < 32; v38++) {
            const t35 = "undefined";
            t35["p" + v38] = v38;
            for (let v41 = 0; v41 < 5; v41++) {
            }
            function f43(a44, a45, a46, a47) {
                return a45;
            }
            const v48 = f43();
            const v51 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
            const v52 = [601759695];
            const v53 = [1073741824,1073741823,1376142744,1073741825];
            function f55(a56, a57, a58, a59) {
                function f61(a62) {
                    return a62;
                }
                Object.defineProperty(arguments, "toString", { enumerable: true, value: f61 });
                function f63() {
                    let v66 = -268435456;
                    v66--;
                    const o79 = {
                        "c": -4294967297n,
                        [522675525n](a69, a70) {
                        },
                        "maxByteLength": -128,
                        "c": v52,
                        "b": -4294967295,
                        ...-48404n,
                        __proto__: -128,
                        get d() {
                            return -4294967297n;
                        },
                        "e": v66,
                        "maxByteLength": -4294967295,
                        "arguments": v51,
                        ...v52,
                        "type": "Vre",
                        ..."Vre",
                        valueOf(a73, a74) {
                        },
                        "c": v66,
                        "type": "Vre",
                        "type": "Vre",
                        toString(a76, a77, a78) {
                            return a77;
                        },
                        5: -4294967295,
                        6: v66,
                    };
                    try { o79.valueOf(); } catch (e) {}
                    return v52;
                }
                f63();
                Int8Array.a = Int8Array;
                Math.log1p(a59);
                try { Reflect.defineProperty(Reflect, a56, v53); } catch (e) {}
                try { new Int8Array(a57); } catch (e) {}
                Int8Array.a = Int8Array;
                const v88 = new Int8Array(v53, a57);
                let v89;
                try { v89 = v88.findIndex(v48); } catch (e) {}
                const v90 = v88.buffer;
                function f91(a92) {
                    return f91;
                }
                f91.constructor = f43;
                const v93 = f91.constructor;
                try { v93(); } catch (e) {}
                v90.constructor = f91;
                v90.slice();
                %OptimizeFunctionOnNextCall(f63);
                let v97;
                try { v97 = ("find").strike(v89, v93, arguments, Int8Array); } catch (e) {}
                let v98;
                try { v98 = v97.match(v51, a59); } catch (e) {}
                const o99 = {
                };
                o99.e = v51;
                o99.e = a57;
                const o100 = {
                };
                o100.g = v98;
                o100.g = -4294967297n;
                try {
                    let o101 = {
                    };
                    function f102(a103) {
                        o101 = a103;
                        return a103;
                    }
                    Object.defineProperty(o101, "g", { set: f102 });
                    o101.e = a57;
                } catch(e104) {
                }
                try {
                    const o105 = {
                    };
                    function f106(a107) {
                        return o105;
                    }
                    Object.defineProperty(o105, "g", { writable: true, set: f106 });
                } catch(e108) {
                }
                try { v53["find"](..."find", a59, ...v52, ...v53, ...522675525n); } catch (e) {}
                return -128;
            }
        }
    }
    static a;
    constructor(a111, a112, a113, a114) {
        super();
        function f115() {
            const v116 = [v31,v31,v31,v31,v31];
            const v118 = new Int8Array(v116);
            const v119 = new Int8Array(v118, v31, a111);
            try {
                v119.find(v118);
            } catch(e121) {
            }
            v116[6] = a113;
            for (const v122 in a112) {
                new Float64Array(3503);
                function F127() {
                    if (!new.target) { throw 'must be called with new'; }
                }
                class C129 extends F127 {
                    #b;
                    constructor(a131) {
                        super.h = this;
                    }
                }
                new C129();
                new Uint16Array(64);
                const v136 = 64 instanceof Uint16Array;
                a112 %= v136;
                new Uint16Array(v31);
                %VerifyType(v136);
                new Uint16Array(3673);
                Math.trunc(a111);
                Math.imul(Uint16Array, a111);
                Math.log10(Uint16Array);
                Uint16Array ** a111;
            }
            return a113;
        }
        for (let v144 = 0; v144 < 5; v144++) {
            f115();
            %OptimizeFunctionOnNextCall(f115);
        }
    }
    e;
}
try { new C33(); } catch (e) {}
new C33();
const v148 = new C33();
const v149 = new C33();
v149.g = v149;
/\xed\xb0\x80qhfoo|(bar|baz)|quuxS*/uimy;
const v152 = /\xf0\x9f\x92\xa9+/gumy;
const v153 = /^tD/gv;
try { v153.compile(v24, 14); } catch (e) {}
!v153.ignoreCase;
const v157 = [268435441,-12,14985,-14,4294967295,-1073741824];
const v158 = [-9007199254740990,1582176086,5,759350219,14,257,536870888,-4294967297,65535,-9007199254740990];
const v160 = Promise.reject(Promise);
const v161 = [-392.0576825237305,0.3449869706009556,4.447039970507995e+307,-5.063798246562485e+307,-568.9796177589394,388231.4033702491,-3.5365646375454567,0.12172568971863451,-4.474791203319841e+307];
try { v161.at(v148); } catch (e) {}
const v163 = [9007199254740992,-13,1,206834672,5792,16,856414023,8,2147483648];
const v164 = v163?.every;
try { new v164(v158); } catch (e) {}
try { ("function").strike(); } catch (e) {}
const v168 = ["function",v163,v161];
v168[2];
const o170 = {
    "arguments": v168,
    "type": "function",
};
const v171 = [-57057595,-708341426,-27428,-9007199254740991];
function f172() {
    return v171;
}
const v173 = [-37935,v158,-37935,v157,v152];
let v174 = v171[2];
v174--;
const v176 = -v174;
v176 > v176;
function F178(a180) {
    if (!new.target) { throw 'must be called with new'; }
}
const v182 = [[v171,-37935,v173],v153];
try { v182.sort(v160); } catch (e) {}
-1024 - -1024;
4294967297n / 4294967297n;
~-65537n;
function f190(a191, a192) {
    const o194 = {
        get c() {
            return a192;
        },
    };
    function f195() {
    }
    return v157;
}
const v196 = f190(f190, -65537n);
new Int8Array(128);
const v200 = [];
try { v200.at(v24); } catch (e) {}
class C202 {
    static get b() {
        try {
            super.getOwnPropertyNames();
        } catch(e205) {
        }
        return v200;
    }
    constructor() {
        this[v200] = this;
        this[v200] %= this;
    }
    static e;
    [v200];
}
C202.prototype;
const v208 = f190(f190, f190);
try { v208.toString(); } catch (e) {}
class C210 extends f190 {
    set e(a212) {
        v208.h;
        let {...v214} = v208;
        Reflect.construct();
    }
}
C210.name;
const v218 = new C210();
try {
    v196.n(-65537n, v218, 4294967297n, 4294967297n, v196);
    class C220 {
    }
    const v221 = /2a\sc/uds;
    try { v221.test(v221); } catch (e) {}
    const o225 = {
        [v221](a224) {
        },
    };
} catch(e226) {
    e226.message = e226;
}
