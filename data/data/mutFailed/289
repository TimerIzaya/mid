[-5.0,2.220446049250313e-16,-1.5612483901889037e+307,-1.0,-1.6661551768199761e+308,-2.2250738585072014e-308];
[-470133.04882549995,Infinity,540120.4908215683,-5.0,9.288468939396278,1000000000.0,-5.0,839650.7929993402];
[-5.0,-0.0,-1.0,0.09875242996410727,-8.30460943479606,935.0005883130686,-2.0];
let v7 = Uint16Array;
new v7(1552);
const t5 = "bigint";
new t5(5);
Math.log2(--v7);
const t7 = 1552;
new t7(14);
[1000000.0,-1.7976931348623157e+308];
const o24 = {
    ..."bigint",
};
const v0 = [];
class C1 {
    toString() {
        v0 ** this;
        [-2041380650,-14,-1824436191,-128,-9007199254740991,4294967296,-13,9];
        [430289204,26852,10];
        return [-9007199254740991,9,1024,-9223372036854775807,9007199254740991,60473,1];
    }
    d = v0;
    static #b;
    static #c = v0;
    static 1322 = v0;
    #e;
    static 268435456;
}
const v7 = new C1();
const v8 = new C1();
v8.d = C1;
const v9 = new v8();
class C10 {
    static #n(a12, a13) {
        v7 >>> this;
        try {
            C1[4] = this;
        } catch(e15) {
        }
        return a13;
    }
    set g(a17) {
        super.a;
        try {
            v8[v0] = v7;
        } catch(e19) {
        }
    }
}
const v20 = v9.prototype;
const v21 = new C10();
new C10();
const v23 = new C10();
let v25 = 0.8127581755016274;
v25--;
function f28(a29, a30) {
    a30--;
    const o43 = {
        [a30]: C1,
        "e": v25,
        toString(a33, a34) {
            const v35 = a33 < v23;
            if (v35) {
                %VerifyType(C1);
            } else {
                v25 / a30;
                const v38 = new Int8Array();
                ([v38]).flat();
                a34();
            }
            return v35;
        },
        "a": v21,
        268435456: -1.0562658600507314e+308,
    };
    return C10;
}
f28(4.0, v25);
const v45 = f28(v23, v25);
v45[268435456] = v45;
f28(v7, -1.0562658600507314e+308);
const v47 = /(?<a>.)\k<a>/vyd;
function f48() {
    return f48;
}
v20.prototype;
const v51 = new Float64Array(v47);
try { v51.reduceRight(v7); } catch (e) {}
for (const v53 in v47) {
}
function f54(a55, a56, a57) {
    return a57;
}
new v20(2.404273109449802, f48(), ...v51, f54);
