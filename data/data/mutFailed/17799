const v3 = /NV?/vmy;
const v4 = /N[^123]a\nz(x)(x)(x)\2?/guim;
const v5 = /\1\2(a(?:\1(b\1\2))\2)\1/guds;
let v6;
try { v6 = v3(v4); } catch (e) {}
[v6,v3,-2.2250738585072014e-308,3.0,v5];
const v8 = [v5,v6];
let {"c":v10,"g":v11,"length":v12,} = [v8,v8,v8];
const t8 = -2.2250738585072014e-308;
new t8();
const v15 = [-1024,10000,65536,1,-8125,-144038269,682080592,64,840729762];
[0];
[1073741825,-21142];
const v18 = [-2023,8,-5,-19182,268435441];
v3[3.0] -= 3.0;
[4294967295,2092033320,-1119050936,268435439,-84038425,-16,-9223372036854775807,65537];
const v23 = [255];
[1260247120,5,-4294967296,-38617];
const v26 = v3.source;
try {
const t0 = "toSpliced";
t0(v26, v26);
} catch (e) {}
%VerifyType(v6);
try {
const t0 = -2.2250738585072014e-308;
t0(v23, v11, v15);
} catch (e) {}
try {
    v23.__proto__ = v23;
} catch(e29) {
}
new v10(v18);
