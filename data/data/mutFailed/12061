[];
[664759814,36432,255,-7,128,1000,65536,-55156];
[4294967296];
[-540142436,-6,-24814,8,-683073315,536870912];
512n | 512n;
[10773,-7,-6,9,3216,3];
[550556285,64,10,40180,10,1024,1024,-9223372036854775807,-2147483649,9];
[1568259842,-6555,-364827627];
function F18() {
    if (!new.target) { throw 'must be called with new'; }
}
const v20 = new F18();
const v21 = new F18();
function f22() {
    function f23(a24, a25) {
        function f27() {
            Math.cos(Math);
            return Math;
        }
        f27();
        return -17055;
    }
    return f23;
}
function f30(a31) {
    class C32 {
    }
    const v33 = new C32();
    const v34 = new C32();
    function f35(a36, a37, a38) {
        const v42 = new Uint8ClampedArray(112);
        const v45 = new Uint8Array();
        try { v42(-85357.59116785484, ...v45, 64, 46, -3.383486186086852e+307, ...v42); } catch (e) {}
        const o49 = {
            __proto__: a37,
            1073741824: v33,
        };
        return f35;
    }
    f35(f35(v34, f35, v33), v34);
}
Object.defineProperty(v21, "constructor", { writable: true, configurable: true, get: f22, set: f30 });
const v52 = v21?.constructor;
try { new v52(); } catch (e) {}
function f54(a55) {
}
f54(v21);
f54(v20);
const v59 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v60 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
v60[7] = v60;
for (let v62 = 0; v62 < 25; v62++) {
    v62 - v62;
    const t52 = "p";
    t52[0] = "p";
    const v65 = "p" + v62;
    try { v65.fixed(); } catch (e) {}
    v59[v65] = v62;
}
function F67(a69, a70) {
    if (!new.target) { throw 'must be called with new'; }
}
F67.caller = F67;
new F67(v60);
class C72 {
}
C72.length = C72;
const v74 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v75 = [601759695];
const v76 = [1073741824,1073741823,1376142744,1073741825];
v76[2] = v76;
function f78(a79, a80, a81, a82) {
    function f83() {
        try { ("Vre").split("Vre", v59); } catch (e) {}
        -4294967295 | -4294967295;
        let v88 = Float64Array;
        v88 = a80;
        b = v75;
        v59.length;
        try {
            v76.forEach(v88);
        } catch(e91) {
            e91.b = e91;
            e91.b = e91;
        }
        const v92 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v94 = Symbol.toPrimitive;
        const o100 = {
            toString(a96, a97) {
                const v98 = a82 && v88;
                a96 *= v94;
                return v88;
                return v98 <= v92;
            },
        };
        try { o100.toString(v88, 522675525n); } catch (e) {}
        const o121 = {
            "c": -4294967297n,
            [522675525n](a104, a105) {
            },
            "c": v75,
            valueOf(a107, a108) {
            },
            "b": -4294967295,
            [-4294967297n](a110, a111, a112, a113) {
            },
            "e": -4294967295,
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v74,
            ...v75,
            "type": "Vre",
            ..."Vre",
            valueOf(a115, a116) {
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            toString(a118, a119, a120) {
            },
            5: -4294967295,
            6: -268435456,
        };
    }
    f83();
    new Int8Array();
    %OptimizeFunctionOnNextCall(f83);
    try { v76["find"]("find", a82, v75, v76); } catch (e) {}
}
for (let v127 = 0; v127 < 10; v127++) {
    v127 >> v127;
    f78();
}
%OptimizeFunctionOnNextCall(f78);
f78();
