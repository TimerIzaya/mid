function f3() {
    return 54966;
}
-3.0 + -3.0;
class C8 extends f3 {
    static set h(a10) {
        this[2] = -1.7976931348623157e+308;
        this[54966];
    }
    static #o(a13, a14) {
        this[f3] |= a14;
        super.a = 0.9499501692994952;
        let v16;
        try { v16 = this.cbrt(a14); } catch (e) {}
        let v17;
        try { v17 = v16.m(5, 0.9499501692994952); } catch (e) {}
        v17?.c;
        const o19 = {
            "apply": f3,
            "call": f3,
            "deleteProperty": f3,
            "getOwnPropertyDescriptor": f3,
            "isExtensible": f3,
            "preventExtensions": f3,
            "a": f3,
        };
        new Proxy(this, o19);
        return 5;
    }
}
new C8();
const v23 = new C8();
v23.constructor = f3;
const v24 = v23?.constructor;
try { new v24(); } catch (e) {}
const v26 = new C8();
const v27 = v26?.constructor;
try { new v27(); } catch (e) {}
try { ("Kru").toWellFormed(); } catch (e) {}
[4294967295,512];
[127];
const v35 = [268435456];
const v36 = [-162.48769297345063];
function f37() {
    const v38 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    for (let v39 = 0; v39 < 5; v39++) {
        function f40() {
            let v42 = Float64Array;
            v42 = -4294967295;
            try {
                v38.forEach(v42);
            } catch(e44) {
            }
            const o49 = {
                toString(a46, a47) {
                    v39 && v42;
                    return -4294967295;
                },
            };
            return v38;
        }
        f40();
        %OptimizeFunctionOnNextCall(f40);
    }
    return v38;
}
v36[Symbol.toPrimitive] = f37;
try { new Int32Array(v35, v35, Int32Array); } catch (e) {}
const v55 = new Int32Array(v36, Int32Array, Int32Array);
Date.UTC(268435456, v55, v36);
