const v0 = [-2006556160,-65535,-143034364,54911,1073741824,3,4,7,693673404,-46857];
[-21232,9007199254740990,-62948,15];
const v2 = [257,16,8,2147483648,20649,-6,1000];
const v3 = [1e-15,-212727.8215014115,-3.0];
const v4 = [0.8258944590003743,777.2760128094662];
const v5 = [323.8196045537302,0.286076200575198,716.4460154601347,-9.276921581044938e+307,822.6859837356503,1.0,9.47295274424851];
const v9 = [-4.583356074442914,0.10313843738654738,7.080063565506396e+307,NaN,5.0,-9.803543476355958e+307];
const v10 = [1000.0,-75539.36934562481,4.0,-5.2204338686306365e+306,-1000000.0,-4.0];
[3.0,-850.079357998071,4.0,4.0,-145.03116769881626,-1000000000.0,3.0,-4.0];
class C12 {
    get a() {
        try {
            this.e = v3;
        } catch(e14) {
        }
        return v5;
    }
    n(a16, a17, a18) {
        try { v0.findLast(257); } catch (e) {}
        h = v3;
        const o20 = {
        };
        try {
            o20.b = v10;
        } catch(e21) {
        }
        try {
            const o22 = {
            };
            o22.b = v10;
            o22.a = v5;
        } catch(e23) {
        }
        try {
            const o24 = {
            };
            o24.b = v10;
            o24.a = v5;
            o24.d = a17;
        } catch(e25) {
        }
        try {
            const o26 = {
            };
            o26.b = v10;
            o26.a = v5;
            o26.d = v3;
        } catch(e27) {
        }
        return v0;
    }
}
const v29 = new Int8Array();
function f30() {
    function f31() {
        let v32 = "string";
        ({"h":v32,} = v9);
        return v10;
    }
    return f31;
}
function f33(a34) {
    Reflect.construct(Int8Array, [Reflect,257,a34], a34);
}
Object.defineProperty(v29, "constructor", { writable: true, enumerable: true, get: f30, set: f33 });
v29.filter(Int8Array);
const o39 = {
};
new C12();
new C12();
new C12();
function f43() {
    class C48 {
        [-39233] = -2127350647;
        [-117.6202672056188];
        constructor(a50) {
            -268435456 || 4.0;
            Math.sign(4.0);
            +4.0;
        }
        268435439 = -39233;
        d;
        g;
        a;
    }
    C48.p24 = -2127350647;
    const v58 = new C48(-2127350647);
    Object.defineProperty(v58, "getMinutes", { configurable: true, enumerable: true, value: v10 });
    try { v58.getMinutes(v58); } catch (e) {}
    let v60;
    try {
    const t0 = 4.0;
    v60 = t0(C48);
    } catch (e) {}
    [-117.6202672056188,[v58,v60,v4,4.0,v60]];
    const o69 = {
        "d": 268435440,
        "a": 4.0,
        __proto__: "cJ",
        "f": "cJ",
        ..."cJ",
        8: f43,
        "g": 268435440,
        "e": f43,
        "h": "cJ",
        valueOf(a66) {
            const o67 = {
                __proto__: this,
                2261555780: "cJ",
            };
            super.a;
            return this;
        },
        "c": "cJ",
    };
}
const v70 = f43();
const v71 = f43();
const v72 = f43();
const v73 = [v72,v70,v71,v71];
const v74 = [];
const v75 = [v72,v74,v74,v73];
const v76 = [-54486,11,9007199254740991,268435456,536870912,1073741823,255,1073741824,-2147483648,-3];
const v77 = [2033313755,-16,16,16,-24747,6,256];
const v78 = [65535];
const v80 = new Set();
function F81(a83, a84, a85) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a84;
}
new F81(v73, v78, v75);
new F81(v77, v73, v78);
[9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
function F89(a91, a92) {
    if (!new.target) { throw 'must be called with new'; }
    const v93 = this.constructor;
    try { new v93(v76, this); } catch (e) {}
}
new F89(F89, F89);
new F89();
const v97 = [601759695];
const v98 = [1073741824,1073741823,1376142744,1073741825];
function f99(a100, a101, a102, a103) {
    let v105;
    try { v105 = v98["find"](..."find", a103, ...v97, ...v98); } catch (e) {}
    Symbol(a102).description;
    const v110 = [-1000.0,1000000.0,2.220446049250313e-16,614071.3005355855,-1.0,2.220446049250313e-16];
    v110[301] = v2;
    v110[301] = -536870912;
    const o111 = {
    };
    function f112() {
        const v113 = a101 - v80;
        v105[v113] = a100;
        return v113;
    }
    o111.get = f112;
    const v115 = new Proxy(v110, o111);
    return v115[301];
}
f99();
new Uint8ClampedArray(268435440);
