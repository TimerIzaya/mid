class C3 {
    static toString(a5, a6) {
        try { a5(this, -2.0, a5, a5); } catch (e) {}
        let v10 = 2.6980915099717713;
        ~v10;
        const v12 = -2.0 >> -2.0;
        class C13 {
            constructor(a15, a16) {
                a16.__proto__;
            }
            f;
            set d(a19) {
                super.d;
                const o21 = {
                };
            }
        }
        Math.sin(1073741825);
        Math.acosh(v12);
        v10++;
        return this;
    }
    static 64;
    static [2.220446049250313e-16] = -1;
    297195189 = 2.220446049250313e-16;
}
const v25 = new C3();
const v26 = new C3();
const v27 = new C3();
class C28 extends C3 {
    constructor(a30, a31, a32) {
        super();
        const v33 = v25.g;
        try {
            super.resolve(a30, v26, v25, this);
        } catch(e35) {
        }
        new Int16Array(16);
        ("function").normalize();
        const v41 = C3 << v33;
        Date[Symbol.toPrimitive] = Date;
        new gc();
        try { v33(v41); } catch (e) {}
    }
    get g() {
        function f49() {
            return this;
        }
        return this;
    }
}
const v50 = new C28(C28, C3, v26);
const v51 = new C28(C28, C28, v50);
new C28(v51, v51, v27);
function f74(a75, a76, a77) {
    const o100 = {
        n(a79, a80) {
            class C89 extends Int32Array {
            }
            function F95() {
                if (!new.target) { throw 'must be called with new'; }
            }
            class C98 {
                static get b() {
                }
            }
            return a76;
        },
    };
    return a77;
}
