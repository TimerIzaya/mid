function f0() {
    4096 >>> 4096;
    const o14 = {
        [4096](a6, a7) {
            const t4 = "0eBG";
            delete t4[this];
            return "0eBG";
        },
        set a(a10) {
            return "3";
            super["3"];
            a10 = Worker;
            const t10 = "3";
            delete t10[3];
        },
    };
    return o14;
}
f0(f0, f0);
f0();
f0();
~1.1387329846992371e+308;
-656925.9057410634 >> -656925.9057410634;
const v26 = /1xyz{1,}?/gims;
const v27 = /h\p{gc=Nd}/vdy;
const v28 = /\xf0\x9f\x92\xa9a*/us;
function F32(a34, a35, a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    const v38 = this?.b;
    try { new v38(this, 1.1387329846992371e+308, -656925.9057410634, -656925.9057410634); } catch (e) {}
    a34.lastIndex = a34;
    a36 ^ a36;
}
const v41 = F32?.toString;
let v42;
try { v42 = new v41(); } catch (e) {}
const v43 = new F32(v42, 1, -1263139894, F32);
v43.length = v43;
const v44 = new F32(v26, v28, -23596, v43);
const v45 = new F32(v27, F32, -23596, 1);
const v48 = v45 | F32;
v48 >>> v48;
let v50;
try { v50 = v44(v28, v48, v48); } catch (e) {}
if (v42) {
    let v51;
    try { v51 = ("catch").codePointAt(v50); } catch (e) {}
    [,v51] = "iterator";
} else {
    WeakSet.length;
    new WeakSet();
}
