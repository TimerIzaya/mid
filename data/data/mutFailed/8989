const v3 = [2,11,-65535];
[-11,4294967295,-749296400,-536870912,5,-9007199254740991,45464,-422772121,10];
let v5 = [0,56205667,-1024];
for (let i7 = 0; i7 < 1; i7++) {
}
function f16() {
    return v3;
}
let v18 = 268435441;
new Uint8Array(83);
new Uint8Array(6);
try {
    f16();
} catch(e28) {
}
[...v18] = v3;
const v30 = new BigUint64Array(153);
const v32 = 3 != 3;
function f33(a34, a35, a36) {
    [1000,1073741824,2,60133,700660982,-25053,-38048,-536870912,536870888,10];
    [9007199254740991,16,4294967297,753533434,-6,436286586,7];
    v5 &&= [65537,536870888,944597869,4,-13,56277];
    const v41 = Symbol.iterator;
    const o50 = {
        [v41]() {
            let v43 = 10;
            const o49 = {
                next() {
                    v43--;
                    const v47 = v43 == 0;
                    const o48 = {
                        "done": v47,
                        "value": v43,
                    };
                    return o48;
                },
            };
            return o49;
        },
    };
    return f33;
}
function f52() {
    return v3;
}
function f53(a54) {
    [-25855];
}
Object.defineProperty(Worker, "toJSON", { writable: true, get: f52, set: f53 });
const v58 = [Worker];
v58[1] = v30;
v58.unshift(v32);
const o60 = {
    "arguments": v58,
    "type": "function",
};
new Worker(f33, o60);
