let v1 = 256;
const v5 = new Float64Array(85);
try {
const t0 = 4096;
t0(v5, Uint16Array);
} catch (e) {}
[-4,268435456,-2147483647,1073741825,-61627,-6,536870887,268435441];
const v10 = [2078715178,2147483649];
const t6 = [4,127,2053964415,-1,36952,-128,-1314029997,-268435456];
delete t6[170];
new Uint16Array(1000);
let v14 = 0;
do {
    v1 += 4096;
    try {
        v10.values();
    } catch(e16) {
    }
    v14++;
} while (v14 < 2)
new Uint16Array(2780);
/\u{12345}\u{23456}+/guimsy;
/a(?!b)+/gvdims;
/EXjM/gudiy;
for (let v26 = 0; v26 < 5; v26++) {
    function f27() {
        const t26 = ("1073741824").constructor;
        const v31 = t26().replaceAll(f27, v26);
        return v31.toLowerCase(v31, "1073741824", v31);
    }
    f27();
    %OptimizeFunctionOnNextCall(f27);
}
