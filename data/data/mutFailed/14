1.1660447917673544e+308 | 1.1660447917673544e+308;
0.29489550717955537 >> 3.0;
2.2250738585072014e-308 / 2.2250738585072014e-308;
function f9() {
    return 0.29489550717955537;
}
function F13(a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.constructor(0.6822080711934364, this); } catch (e) {}
    try {
        this.f = 3.0;
    } catch(e18) {
    }
}
const v19 = new F13(0.6822080711934364, "Fd");
const v20 = new F13("Fd", "buffer");
v20.f;
const v22 = new F13("string", "Fd");
const v25 = new Uint32Array(3911);
try { v25.toString(); } catch (e) {}
const v31 = ["Fd",0.6822080711934364,[v22,v19,v25[0.29489550717955537]]];
try { v31.find(f9); } catch (e) {}
[v31,F13,1.1660447917673544e+308,v31];
const v35 = ("Fd")["trimEnd"]();
const v36 = v35?.slice;
try { new v36(v35, v35); } catch (e) {}
const v38 = new Int32Array(93);
try { v38.valueOf(); } catch (e) {}
new Uint32Array(1.1660447917673544e+308);
const v44 = new Int16Array(Int16Array, Int16Array, Int16Array);
Int32Array.BYTES_PER_ELEMENT = Int32Array;
const v46 = new Int32Array();
v44[v46 / v44];
let v0 = [];
function f1() {
    return v0;
}
const v3 = new WeakSet();
class C4 {
    constructor(a6) {
        try { new a6(this); } catch (e) {}
        const v9 = new Int16Array();
        let v10 = -29376;
        [v10] = v9;
        const t11 = /(?:ab)(?:a?)?/mgiu;
        t11.valueOf = -7;
        this.g;
        new BigUint64Array(16);
        class C18 {
            static #e = 1000;
            static 536870887 = v0;
        }
        new C18();
        new C18();
        new C18();
        const t22 = /(?:ab)(?:a?)?/mgiu;
        t22.valueOf = -7;
        function F25(a27) {
            if (!new.target) { throw 'must be called with new'; }
        }
        new Uint32Array(1000);
        3666 - 3666;
        class C33 {
        }
        const v34 = new C33();
        const t32 = (-13545).constructor;
        const v37 = new t32();
        const o42 = {
            "g": C33,
            ...v37,
            0: 7n,
            255: v34,
            2934394387: v37,
            "f": v37,
            __proto__: C33,
            "f": C33,
            [7n](a39, a40, a41) {
            },
        };
        new Uint16Array(167);
    }
}
new C4(C4);
new C4(v3);
new C4(WeakSet);
const v50 = new Uint32Array();
async function f51(a52, a53, a54) {
    return await v50;
}
f51();
const v61 = new Float64Array(9);
let v67 = 2.0;
let v68 = -4 % 7;
v0--;
v68--;
++v67 * ~(v0 | v68);
new Uint8ClampedArray(9);
[] = v61;
new C4(f51);
new Int16Array(3);
function F84() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 10270;
    } catch(e87) {
    }
    try {
        this.e = 10270;
    } catch(e88) {
    }
}
new F84();
const v90 = new Float32Array(Float32Array, Float32Array, Float32Array);
const v91 = v90.constructor;
class C92 extends v91 {
}
try {
    v50.slice(2147483648);
} catch(e94) {
}
Object.defineProperty(v91, Uint8ClampedArray, { writable: true, enumerable: true, set: f51 });
new C92();
