function f0() {
}
const v1 = [f0,f0,f0,f0];
const v2 = [v1,v1,f0];
const v3 = [v2,v2,v2,f0,f0];
class C4 extends f0 {
    constructor(a6) {
        let v5 = this;
        super();
        v2[4294967296] = v3;
        for (let i9 = 0, i10 = 10;
            (() => {
                const v11 = i9 < i10;
                class C12 {
                }
                function f13(a14, a15, a16, a17) {
                    a15.bind();
                    try { a15.apply(); } catch (e) {}
                    return a16;
                }
                f13(i10, C12);
                %OptimizeFunctionOnNextCall(f13);
                return v11;
            })();
            i10--) {
        }
        let {"length":v26,...v27} = v1;
        const v31 = ++v5;
        ~-1;
        Math.pow(v31, v31);
        Math.asin(v26);
        !v31;
    }
}
gc();
6.221456434799227e+306 << 6.221456434799227e+306;
class C40 {
    #d;
}
const v41 = new C4(v2);
const v42 = new C4(v2);
const v43 = new C4(v1);
class C44 {
    static 379637634;
    constructor(a46, a47, a48, a49) {
        class C50 {
            #e;
            [this];
        }
        new C50();
        new C50();
        new C50();
    }
    static b = v41;
    static [v2] = v1;
    #a = v42;
}
new C44(v3, C44, v42, C4);
const v55 = new C44(v1, v42, v43, v42);
new C44(v3, C44, v2, v55);
new Uint8Array(2);
new Uint8Array(6);
new Uint16Array(512);
function f67() {
    [[-17291,1886,-9007199254740992,857,2,13,14,-1,536870912]];
    const v72 = new Float32Array([-37102.6674218484,-969411.635186719,-1.3592557640113297e+308,0.9054806195219168,1000000000000.0,-0.0,-3.0,-0.0]);
    new Int32Array(v72);
    return f67;
}
function f75() {
    const v76 = Array();
    v76[2358] = f67;
    for (const v77 of v76) {
        v77 - v77;
    }
    return v76;
}
f75();
f75();
