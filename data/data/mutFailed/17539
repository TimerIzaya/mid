/4(a\1)(?: foo )/udim;
const v4 = /a(?!bbb|bb)c/um;
/a\sc/ud;
Date.toString = Date;
new Date();
function F11() {
    if (!new.target) { throw 'must be called with new'; }
}
const v13 = new F11();
function F14(a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
}
const v18 = new F14();
v18.toString = Date;
const v21 = [];
function F23() {
    if (!new.target) { throw 'must be called with new'; }
    const v27 = Date.toString(F23);
    const v28 = v27[23];
    v27.replaceAll(v13, -37859n);
    Uint32Array[1] = v28;
    const v31 = new Uint32Array(Uint32Array, Uint32Array, 4);
    v31[2];
    const v35 = new Set(v21);
    const v36 = v35.add;
    Object.defineProperty(v36, "f", { configurable: true, enumerable: true, value: this });
    v36.f = v36;
    try { v36(v31); } catch (e) {}
    const v39 = v35["delete"](839612.5677247904);
    const v40 = v39 || v39;
    const v41 = v40 || v40;
    v41 && v41;
    const v43 = v40 && v40;
    v43 || v43;
    const o46 = {
    };
    o46.b = o46;
    try { Array(9223372036854775807); } catch (e) {}
    const v50 = ("getPrototypeOf").blink();
    const v51 = v50[28];
    const v52 = v51.strike();
    v52[4] = v52;
    const v54 = v50.strike(591114.0785999324).replace(19793, v18);
    v54[11] = v54;
    class C57 {
        ["getPrototypeOf"] = -1.7976931348623157e+308;
    }
    function f58() {
        return F11;
    }
    function f59(a60) {
        new F11(a60, v4, a60, a60, v28, v27);
    }
    Object.defineProperty(C57, "h", { get: f58, set: f59 });
    class C62 extends C57 {
        ["getPrototypeOf"] = C57;
    }
    new C62();
    const v64 = new C62();
    function f65() {
        function f66(a67) {
            F11 - 4;
            const v70 = new BigUint64Array();
            try { v70.entries(); } catch (e) {}
            return v39;
        }
        return f66;
    }
    function f72(a73) {
        v64[1] = a73;
    }
    Object.defineProperty(v64, "constructor", { get: f65, set: f72 });
    const t72 = v64.constructor;
    new t72();
    const v76 = new C62();
    v76.getPrototypeOf;
    BigUint64Array.of();
    const v80 = new BigUint64Array();
    new Int8Array();
    const v84 = new C62();
    const t80 = v84.getPrototypeOf;
    new t80();
    const v87 = v84.getPrototypeOf;
    v87.h = v80;
    let v88;
    try { v88 = new v87(); } catch (e) {}
    v88.getPrototypeOf = v88;
    const v89 = new C62();
    Object.defineProperty(v89, "constructor", { writable: true, configurable: true, enumerable: true, value: Date });
    const v90 = v89.getPrototypeOf;
    try { new v90(); } catch (e) {}
    try { v90(); } catch (e) {}
    let v93;
    try { v93 = new v90(); } catch (e) {}
    function f94() {
        v4 <= v18;
        return v21.push(-93227259);
    }
    v93.constructor = f94;
    try { v93.propertyIsEnumerable(v54); } catch (e) {}
    const v99 = v93?.constructor;
    let v100;
    try { v100 = v99.call(v51); } catch (e) {}
    let v101;
    try { v101 = new v99(v50, this, 4); } catch (e) {}
    v101.getPrototypeOf;
    try { v101.constructor(); } catch (e) {}
    const v104 = v89.constructor;
    let v105;
    try { v105 = new v104(F23, v43); } catch (e) {}
    Object.defineProperty(v105, "constructor", { configurable: true, value: Array });
    v105?.constructor;
    const v107 = v105?.getPrototypeOf;
    v107.h = v107;
    const v108 = Array(19793);
    v108[16474] = v100;
    for (const v109 of v108) {
    }
}
new F23();
new F23();
