function f0() {
}
function f1() {
    return f0;
}
let v4 = 65536;
v4--;
class C6 extends f0 {
    static m(a8, a9) {
        function F10(a12, a13, a14, a15) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.h = a14;
            } catch(e16) {
            }
        }
        const v17 = new F10(a8, a8, f1, a9);
        const v18 = new F10(v4, v4, v17, v4);
        new F10(a9, 1, this, v17);
        return v18;
    }
}
let v20 = new C6();
const v21 = v20?.constructor;
try { new v21(); } catch (e) {}
const v23 = new C6();
const v24 = v23?.constructor;
try { new v24(); } catch (e) {}
const v26 = new C6();
const v27 = v26?.constructor;
try { new v27(); } catch (e) {}
function f29(a30, a31, a32, a33) {
    a32 != a32;
    const o45 = {
        get g() {
            new Uint32Array(1516);
            const v41 = new Int8Array(1024);
            new Int16Array(10);
            return v41;
        },
    };
    return o45;
}
const v46 = f29(v23, 1, -4294967297, C6);
v46.g = v46;
const v47 = f29(v23, v4, v4, v20);
const v48 = f29(v47, -4294967297, -4294967297, v46);
const o61 = {
    valueOf() {
        delete v48?.g;
        v46[16] = f29;
        v20 ** -1.4419254127080627e+308;
        v20--;
        let v57 = ++v20;
        ++v57;
        Math.exp(v57);
        Math.pow(v20, v57);
        return v4;
    },
};
const v64 = [-1440504730,15059,-128,65536,33714,-51192,-268435456,37915];
const v65 = [9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
try { v65.flatMap(f0); } catch (e) {}
function F67(a69, a70) {
    if (!new.target) { throw 'must be called with new'; }
    this.__proto__ = this;
    const v71 = this.constructor;
    v71.arguments;
    -6.224424713481138 + -6.224424713481138;
    let v75 = 403172.480886691;
    a69?.[-178.59969532061132];
    v75 = a70;
    let v78;
    try { v78 = new v71(this, a70); } catch (e) {}
    const v79 = v78?.constructor;
    try { new v79(); } catch (e) {}
    this.c = a69;
}
const v81 = new F67();
v81.length = v81;
const v82 = new F67();
v82.b = v82;
const v83 = new F67();
const v84 = v65[2147483648];
function F85(a87, a88) {
    if (!new.target) { throw 'must be called with new'; }
    a87 >>> a87;
    try {
        this.b = a88;
    } catch(e90) {
    }
    try {
        this.d = a87;
    } catch(e91) {
    }
}
const v92 = new F85(-4294967297, v84);
new F85(1, v20);
new F85(18074, v92);
const v95 = new F67(18074, 28602970);
const v99 = new Uint8Array(v65, v83, 201);
const v100 = v99?.constructor;
try { new v100(v95, 1000, 28602970); } catch (e) {}
const v102 = new Uint8Array(268435440);
try { v102.reduce(-4294967297); } catch (e) {}
let v104 = 129;
v104--;
function f106(a107, a108, a109) {
    const v110 = a108?.constructor;
    try { new v110(); } catch (e) {}
    const o112 = {
        "h": v46,
    };
    o112.h;
    return o112;
}
const v115 = f106(v46, v46, f106(v47, v26, v23));
v115.h;
f106(v48, v47, v115);
Uint8ClampedArray.b = Uint8ClampedArray;
v65[6] = v99;
const v121 = v64.__proto__;
try { v121.lastIndexOf(v82); } catch (e) {}
const v123 = new Uint8ClampedArray(v104);
v123.lastIndexOf();
