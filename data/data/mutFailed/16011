[5,-9007199254740991];
[-2147483647,63137,7,-65537];
const v2 = [-1045075901,-1073741824,-3];
-28844 - -28844;
let v6 = 3;
v6--;
-1 ^ -1;
const v12 = new Float32Array(840);
try { v12.copyWithin(false, v2); } catch (e) {}
let v14 = 129;
v14++;
new Int32Array(v6);
new Uint16Array(0);
const v27 = [-2147483647,64098,-9383,1024,129,-5];
let v28;
try { v28 = v27.reverse(); } catch (e) {}
const v30 = ([1000,-16,-38597,12,-3399,32508])[2];
const v31 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v33 = new Uint32Array();
const v35 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v36 = [601759695];
const v37 = v36[0];
const v38 = [1073741824,1073741823,1376142744,1073741825];
function f40(a41, a42, a43, a44) {
    function f46() {
        let v49 = Float64Array;
        v49 = a42;
        b = v36;
        v31.length;
        try {
            v38.forEach(a42);
        } catch(e52) {
            const v53 = e52?.constructor;
            try { new v53(a41); } catch (e) {}
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o56 = {
        };
        -268435456 - -268435456;
        const o72 = {
            "c": a44,
            "c": v36,
            valueOf(a60, a61) {
            },
            1073741824: v33,
            "maxByteLength": -268435456,
            "b": -268435456,
            [-4294967297n](a63, a64, a65, a66) {
                class C68 extends Date {
                    static get c() {
                    }
                }
                eval();
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v35,
            256: a44,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            6: -268435456,
        };
        o72[256] = o72;
    }
    f46();
    const v75 = new Int8Array();
    v75.buffer;
    a42.slice(2147483648);
    new Int32Array(1024);
    let v82 = a43[3];
    v82--;
    for (let v84 = 0; v84 < 10; v84++) {
    }
    %OptimizeFunctionOnNextCall(f46);
    let v86;
    try { v86 = v38["find"](..."find", a44, ...v36, ...v38, ...522675525n); } catch (e) {}
    v86 <= a43;
    return arguments;
}
for (let v88 = 0; v88 < 10; v88++) {
    v88 !== v88;
    const v90 = f40();
    try { v90.callee(v27, v88, v28, v27); } catch (e) {}
}
%OptimizeFunctionOnNextCall(f40);
const v92 = f40();
try { v92.callee(v31, v92, 7.589647165982214, v31); } catch (e) {}
[-50328,-14,3,128,-11,64,-65535];
class C95 {
    [v27] = -1000000.0;
    constructor(a97, a98, a99, a100) {
        this[1] = this;
        a97 ^ a97;
        %VerifyType(a100);
        super[this];
    }
    g;
    c;
    #toString(a104, a105, a106) {
    }
    1 = 257n;
}
new C95(1073741825n, 1.0, 7.589647165982214);
const v108 = new C95(411585671n, -1000000.0, -1000000.0, 1.0);
v108[1] = v108;
const v109 = new C95(v108, -1000000.0, 1.0);
v109[1];
/(?:a*)+bU\u0034xyz{1,32}/udi.dotAll;
/vfoo|(bar|baz)|quux/gvds;
/JO/gvy;
class C117 {
    #m(a119, a120) {
        function f121() {
            return a120;
        }
        super[a120] = "f";
        %VerifyType(a120);
        return f121;
    }
    static c;
}
try { new C117(); } catch (e) {}
try { C117(); } catch (e) {}
const v124 = new C117();
const v125 = v124?.constructor;
try { new v125(); } catch (e) {}
const v127 = new C117();
const v128 = v127?.constructor;
try { v128(); } catch (e) {}
const v130 = new C117();
v130?.constructor;
class C132 {
    p(a134) {
        this.g ^= this[8];
    }
    static #n(a137, a138, a139, a140) {
    }
    7 = v130;
    #a = v127;
}
const v141 = new C132();
v141[7] = v141;
const v142 = new C132();
v142[7] = v142;
const v143 = [];
try { v143.reduceRight(Uint16Array); } catch (e) {}
const v145 = [v143,v37,v130,381717.6504737276];
try { v145.findLastIndex(-4294967297n); } catch (e) {}
[v124];
function F148() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(); } catch (e) {}
}
const v151 = new F148();
const v152 = v151?.constructor;
try { new v152(); } catch (e) {}
const v154 = new F148();
function F155(a157, a158) {
    if (!new.target) { throw 'must be called with new'; }
    const v159 = a158?.__lookupGetter__;
    try { v159(); } catch (e) {}
    try { this.constructor(F155, this); } catch (e) {}
    a157.e = a157;
}
F155.arguments = F155;
const v162 = new F155(v154);
const v163 = v162?.constructor;
try { new v163(C117, C117); } catch (e) {}
("Hyo9")[1][0];
const t172 = "Hyo9";
t172[1] = "at";
const t175 = "at";
t175[1] = "at";
const v170 = ([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap;
v170.name = v170;
v170?.constructor;
const v172 = [-4.202468609045087];
try { v172.every(v145); } catch (e) {}
const v174 = [0.8434386161503777];
v174.g = v174;
const v176 = ("4i")?.toWellFormed;
try { v176.toString(); } catch (e) {}
const t186 = "f";
t186[1] = "4i";
const t188 = "RpXR";
t188[3] = "RpXR";
const t190 = "RpXR";
t190[1] = "RpXR";
("c")?.toLocaleUpperCase.length;
class C183 {
    constructor(a185) {
        this.h = this;
        ("valueOf").localeCompare(a185, v30);
    }
}
try { C183.bind(-1); } catch (e) {}
const v188 = new C183();
const t201 = v188.constructor;
const v190 = new t201(C183);
v190.h;
