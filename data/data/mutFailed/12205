[-1000000.0,-9.806391732039115,1e-15,-2.7727511821881485,-1.7976931348623157e+308];
[-1.0];
[1.6970551144258878e+308,-415.9779364260561,-1000000.0,1000000000.0,-3.4910386266176303,-979.7147998485945,0.36669734143955646];
-(-55186);
-1 >>> -1;
const v11 = [3,16,536870912,-8,-10,1727591837,-9007199254740990,512,-9007199254740990,51036];
try { v11.keys(); } catch (e) {}
[1073741824];
[28261,10];
try { new BigUint64Array(-1, 65535, v11); } catch (e) {}
const v18 = new BigUint64Array(519);
try { v18.reduceRight(-1); } catch (e) {}
new BigInt64Array(1);
new Uint8Array(16);
let v28 = 42853;
v28--;
let v30 = 9;
v30++;
class C34 {
}
const v35 = C34.constructor;
v35.length = v35;
class C36 {
}
const v37 = new C36();
const v38 = v37?.__lookupGetter__;
try { new v38(v11); } catch (e) {}
Uint8ClampedArray.a = Uint8ClampedArray;
const v42 = new Uint8ClampedArray();
class C43 {
    constructor(a45, a46, a47, a48) {
        a45--;
        const v50 = this.constructor;
        v50.length = v50;
        try { new v50(a46, v35, v28, a46); } catch (e) {}
        for (let v52 = 0; v52 < 5; v52++) {
            ~a47 >>> v52;
            v42[v52] = a48;
        }
    }
}
new C43(3, C43, v37);
new C43();
