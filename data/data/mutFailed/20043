const v0 = [4096,-8,-2147483648,8,-30841,-9007199254740991,256,-1];
[65535,24825,127,-16,-47645,-2147483649,7];
const v2 = [4096,-84,4294967297,57143,186323413,1073741824,258535246,-1109599785,37186,1438585422];
const v3 = [785751370,-9223372036854775808];
[10000,1073741824,4096,2558,-1073741824,1073741824,1683663310];
const v5 = [-256,-705919459];
function f6() {
    return v3;
}
[11,4096,2,-15716,8,-12,128,-65537,10000];
[-536870912,-9223372036854775807,-268435456,7,-19584,-60591060,65536,23155];
v3 + v0;
!v5;
[1,10000,-1059243954,268435439,-256,16,55398];
const v17 = new Float32Array(64);
const v19 = v17[4096];
try {
    v19.__proto__ = v3;
} catch(e20) {
}
for (let [...v22] of v5) {
    const t21 = "description";
    t21[1073741824] = v22?.[v0];
}
Object.defineProperty(v5, v2, { configurable: true, set: f6 });
new Int16Array(4096);
new Uint8ClampedArray(4);
function f28(a29) {
    function F30(a32) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v33 = new F30(F30);
    try {
        function f34(a35, a36, a37) {
            let v38 = 0;
            do {
                const o39 = {
                };
                o39.h = v33;
                const o40 = {
                };
                v38++;
            } while (v38 < 7)
            return f34(a37, v33);
        }
        f34();
    } catch(e46) {
    }
    return a29;
}
f28();
f28();
