new Set();
const v13 = new Map();
function f14(a15, a16) {
    const o23 = {
        "a": a16,
        [a15]: v13,
        [v13]: Map,
        [2221](a18, a19, a20) {
        },
        ...v13,
        "b": a15,
        [a16]: Map,
        "h": a15,
        valueOf(a22) {
            return a22;
        },
    };
    return a16;
}
for (let v24 = 0; v24 < 395; v24++) {
    f14();
    /(?:a*)*/gvdiy;
    /3/gvdim;
    /[Mxyz{0,1}?]/guimsy;
    Object.defineProperty(v13, "b", { configurable: true, enumerable: true, get: f14, set: f14 });
    throw v24;
}
const v29 = [];
v29.toString = [v29];
const v32 = (2136873598).constructor;
class C33 {
    toString(a35, a36, a37, a38) {
        const o47 = {
            [-4294967297n](a41, a42, a43, a44) {
                eval(a44);
            },
        };
        eval();
    }
}
const v54 = v32(v32, v32);
v54 != v54;
const o56 = {
};
("undefined").localeCompare("undefined", o56);
try { v54.toFixed(v29); } catch (e) {}
new Float32Array(255);
const v64 = new BigInt64Array();
const o65 = {
    __proto__: v64,
};
