const v0 = [-517302.1046387198,1000.0,0.36712801050800425,-375981.3799534881,-1.3134453494534132e+308,738217.7512260529,-6.320671441243319e+307,0.7286299788457934,0.3681582697392075,0.10989256841004091];
new BigInt64Array(1091060517);
class C4 {
}
const v5 = [873.2530702446518,2.0,1000000.0,164047.61777008628,0.477966512376111,-1000000000000.0,0.10143501409346034];
Uint32Array[1] = BigInt64Array;
const v7 = new Uint32Array(v5);
const v8 = /Mrn(?:a*)+IhCO/udimsy;
v8.__proto__;
function F10() {
    if (!new.target) { throw 'must be called with new'; }
    this.e = v5;
    try {
        this.h = 16;
    } catch(e13) {
    }
    try {
        this.e = 16;
    } catch(e14) {
    }
}
const v15 = new F10();
try {
    const o16 = {
    };
    o16.d = BigInt64Array;
    o16.d = v0;
    o16.e = v8;
    o16.b = v15;
    o16.d = F10;
} catch(e17) {
}
const v18 = [-1.7976931348623157e+308,-2.528353892159342e+307,-651654.2986929101,-1.0,-2.5234603391151917e+307,1000000000.0,1000000.0,-5.0,-0.0,-1.7976931348623157e+308];
function F19(a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a21;
    } catch(e23) {
    }
    try {
        this.d = v0;
    } catch(e24) {
    }
}
function f25(a26) {
    const v27 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    const v29 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
    const v30 = [601759695];
    function f32() {
        try {
            v27.forEach(a26);
        } catch(e36) {
        }
        const v37 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o43 = {
            toString(a39, a40) {
                (v7 && a26) <= v37;
                return v8;
            },
        };
        const o63 = {
            "c": -4294967297n,
            [522675525n](a46, a47) {
            },
            "c": v30,
            valueOf(a49, a50) {
                return a50;
            },
            [-4294967297n](a52, a53, a54, a55) {
            },
            "maxByteLength": -4294967295,
            "arguments": v29,
            ..."Vre",
            valueOf(a57, a58) {
                return a57;
            },
            ..."Vre",
            4: "Vre",
            "type": "Vre",
            toString(a60, a61, a62) {
                return a62;
            },
            5: -4294967295,
            6: -268435456,
        };
        return C4;
    }
    f32();
    %OptimizeFunctionOnNextCall(f32);
    return Uint32Array;
}
F19[Symbol.toPrimitive] = f25;
class C67 {
}
new C67();
new Int8Array();
const v71 = new F19(v0, v0);
const v72 = new F19(v18, v18);
const v73 = new F19(v0, v18);
function f74(a75, a76) {
    const o82 = {
        1063: a75,
        "e": v73,
        [F19]: F19,
        __proto__: v5,
        "b": F19,
        toString(a78, a79, a80, a81) {
            v72[-1] -= a80;
            a81 = a76;
            return a75;
        },
        "f": F19,
        536870912: v73,
        "d": a76,
    };
    return o82;
}
f74(v72, v0);
f74(v71, v0);
f74(v71, v0);
const v91 = new Int8Array(127);
const v93 = new WeakSet();
for (const v94 in v91) {
    v93[v94] = v94;
}
Uint32Array[1] = 15;
try { BigInt64Array(BigInt64Array); } catch (e) {}
const t127 = "RpXR";
t127[3] = "RpXR";
