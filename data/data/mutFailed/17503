class C3 {
    constructor(a5) {
        const o6 = {
        };
        new Proxy("m", o6);
    }
    set e(a10) {
        const v11 = a10 ** 2.0;
        const v12 = ["-50679"];
        ["m","m",this,v12,v12];
        [2.0,this,v11];
    }
    static e = "m";
    #d;
}
const v15 = new C3("m");
new C3(v15);
new C3(v15);
[-1000000000000.0,-2.2250738585072014e-308,1.7976931348623157e+308,767292.8665979742,626714.456021969];
[-1000000.0,0.6778128659238791];
[1.7976931348623157e+308,-441.51358890416566,-Infinity,-2.0,-637805.2601193924,4.564811610708684,-1.4063297138391294e+308,9.90910647420134,-Infinity];
const v28 = [1.065613492561098e+308];
function f29() {
    const o65 = {
        m(a32) {
            a32.f = a32;
            try { a32.next(f29); } catch (e) {}
            a32.c = a32;
            a32.h = a32;
            const o34 = {
            };
            o34.h = o34;
            function f35(a36, a37, a38) {
            }
            f35.caller = a32;
            try {
                const t36 = "m";
                t36.split = -65535;
            } catch(e40) {
                const v44 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v44, o34, ...v28, ...v44);
            }
            try {
                const o46 = {
                };
            } catch(e47) {
            }
            Math?.expm1;
            let v50 = -9007199254740991;
            v50++;
            const v52 = v50 >> v50;
            for (let v53 = 0; v53 < 5; v53++) {
            }
            v52 && v52;
            class C55 {
                o(a57, a58, a59, a60) {
                }
            }
            const v63 = new Int8Array(3938);
            let v64 = 3;
            for (let i = 0; i < 5; i++) {
                [...v64] = v63;
            }
        },
    };
    o65.m(o65);
}
function F67() {
    if (!new.target) { throw 'must be called with new'; }
}
class C69 {
}
const t72 = 0.23195541559982324;
t72();
f29(f29);
