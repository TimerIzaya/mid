const v1 = new Date();
function F2(a4) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = Date;
    } catch(e5) {
    }
    try {
        this.c = a4;
    } catch(e6) {
    }
}
const v7 = new F2(v1);
const v8 = new F2(v7);
const v9 = new F2(v7);
[v8];
[v8];
[v8,v1,Date];
[-12,1221,12,35534141,1024,4294967296,2147483647,9007199254740990,-11,9007199254740991];
v9.g = F2;
const v17 = new BigUint64Array(10);
for (const v19 in v17) {
    new Float64Array(2147483647);
}
[-15,-65535,50782,-9223372036854775807,839485581,-36090,-380987895,256,9007199254740990,-9007199254740991];
[10,65537,-1991476034];
function f23() {
    return Date;
}
new BigUint64Array(10);
class C28 {
    toString(a30) {
        super[this];
    }
}
class C33 {
    #valueOf(a35, a36, a37, a38) {
        this.#valueOf();
    }
}
new Int8Array(2);
new Uint8ClampedArray(93);
new BigInt64Array(257);
("async").lastIndexOf();
class C52 {
    constructor(a54, a55, a56, a57) {
        super();
        function f58() {
            const t48 = [];
            t48[6] = 4294967295;
            new Int32Array();
            const o73 = {
                get b() {
                    return Int32Array;
                },
                "c": f58,
                toString(a66, a67, a68) {
                    return this;
                },
                4294967295: Uint8ClampedArray,
                m(a70) {
                    return 4294967295;
                },
                "h": -65537,
                ...1.0,
                set b(a72) {
                },
            };
        }
        for (let v74 = 0; v74 < 5; v74++) {
            f58();
        }
    }
    n(a77, a78) {
        function F79(a81, a82, a83) {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v84 = new F79(a77, 35066, -65537);
        const v85 = new F79("fl", F79, v84);
        F79(v85);
    }
}
const v87 = new C52();
Math.log(-23525);
const o91 = {
};
const v92 = v87?.n;
try { v92("fl", "fl"); } catch (e) {}
new C52();
new C52();
Array.prototype = Array;
class C99 {
    static #m(a101) {
    }
    constructor(a103) {
        new Float32Array();
        const v107 = new Uint16Array();
        new Float32Array(v107, -4294967296, a103);
    }
}
Array(9);
[-1000.0,-3.0,5.0,-1000000000.0,NaN,1000.0,8.243735512854116e+307,-2.0];
[-401759.74481176864,-2.2250738585072014e-308,-1000000.0,1.7976931348623157e+308,1000000000.0,1.7976931348623157e+308];
const v112 = [-846.1037981747623,2.220446049250313e-16,-Infinity,1.3619806788460808e+308,Infinity,2.220446049250313e-16,1000000000000.0];
try { v112.group("fl"); } catch (e) {}
/abc+?/im;
/ab\b\d\bcdHa\S+/gvdmsy;
