class C6 {
    static {
        try { this("findLast", "findLast", "findLast"); } catch (e) {}
    }
    static [-539739.9122084487] = "findLast";
    static set e(a10) {
        const t6 = "-9583";
        t6[3.573227383736091] = "1073741824";
        let {"length":v11,} = "findLast";
        super[v11] = v11;
        "findLast" + -539739.9122084487;
    }
}
new C6();
new C6();
new C6();
const v17 = new Set();
class C23 {
    g = v17;
}
const t20 = 66;
new t20();
const v25 = new C23();
const v26 = v25?.__defineSetter__;
try { new v26(v25, v25); } catch (e) {}
new C23();
new BigInt64Array(66);
new Uint32Array(8);
new Uint16Array(512);
class C36 {
}
try { new C36(); } catch (e) {}
[4.568313124030128,0.7635833888164534,NaN,-2.2250738585072014e-308];
[-2.220446049250313e-16,-888452.1551163687,3.0314685591545225e+307,3.974648455557304e+306,-1.7976931348623157e+308,-3.372917750993947e+307,-3.3039855198758517,0.3283790672983654];
[376.6978174352928,1.7976931348623157e+308,-1.4541504879773854e+308,4.0,-0.0,4.0,NaN,2.0];
const v45 = WeakMap?.constructor;
try { new v45(BigInt64Array); } catch (e) {}
const v48 = [2.220446049250313e-16,-Infinity,NaN,-1e-15,-4.0,-2.2250738585072014e-308,-742.8087895557678,-4.0,Infinity,655658.0990783614];
try { v48.find(512); } catch (e) {}
Set.a = Set;
const v51 = new Set(v48);
try { v51.add(v51); } catch (e) {}
function F53(a55, a56) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e57) {
    }
    try {
        Math.clz32();
    } catch(e59) {
    }
}
F53.caller = F53;
new F53();
new F53();
