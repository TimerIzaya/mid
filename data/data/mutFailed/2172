new Map();
const v2 = [1000.0,-Infinity,-1.0,681848.0884923269,1.256152859762003e+308,-5.0,-1.0,-2.0,45672.42154487956,-2.0];
[-946345318n];
function F7() {
    if (!new.target) { throw 'must be called with new'; }
}
const o11 = {
    valueOf() {
        return this;
    },
};
const t11 = -128n;
t11();
new Int8Array();
for (let i = 0; i < 10; i++) {
    const o19 = {
        "a": 16n,
        1: 16n,
        257: undefined,
    };
}
const v28 = new Int16Array(16);
const v31 = new Uint8Array(1010);
const o32 = {
    268435439: Uint8Array,
    ...v31,
};
try {
    v2.length = 2499;
} catch(e39) {
}
BigUint64Array <= 0.7221600461335677;
[-5.787673025436934,-4.0,473.11143372173683,-1.7976931348623157e+308,-Infinity,-3.0,1000.0];
[Infinity,-2.6351732646329262,3.0,866531.896098072,3.6689280658354626,4.0,0.4620187175667242,-2.0,696227.6855484075,512382.6424740469];
const t31 = -1.0;
new t31(3427);
function f48(a49) {
    return f48;
}
class C50 extends f48 {
}
new Uint8Array(64);
new Uint32Array(2);
[-227453699,2147483647,1073741825];
[45065,128,268435439,9007199254740991,-14];
[-35229,256];
/(?<=)(?:a+)?A[z-\d]?/i;
const v62 = new Uint8Array(127);
function f67() {
    const v68 = [13,-2103725161,15240,-9223372036854775807,1077763702,256,-1024,9,1073741823,-2];
    try {
        new Int8Array(9);
        function f74() {
            return f74;
        }
        const o76 = {
            [f74]() {
            },
        };
        [o76];
        v68.copyWithin(8, v28, -256);
    } catch(e80) {
    }
    return f67;
}
const o81 = {
    __proto__: f67,
    "e": f67,
};
new Uint32Array(v62);
