function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -4294967296;
    } catch(e3) {
    }
    try {
        this.b = -4294967296;
    } catch(e4) {
    }
}
class C5 {
}
let v6 = new C5();
class C7 extends C5 {
    o(a9, a10) {
        v6 %= this;
        const v11 = super.g;
        const v13 = [Reflect];
        const o14 = {
            __proto__: Reflect,
            "e": v13,
        };
        %VerifyType(v11);
    }
}
const v21 = new F0();
new F0();
const v23 = [];
class C24 {
    static p() {
        let v26;
        try { v26 = this(this, this, this, v23, v23); } catch (e) {}
        let v27;
        try { v27 = v26(this); } catch (e) {}
        const o28 = {
        };
        class C32 {
            constructor(a34, a35) {
                a35.__proto__;
            }
            f;
            set d(a38) {
                super.d;
                const o40 = {
                };
            }
        }
        const v41 = new C32(-9340, 2147483649);
        const v42 = new C32(-9340, 1073741823);
        function F43(a45, a46, a47, a48) {
            if (!new.target) { throw 'must be called with new'; }
        }
        new F43(v41, v42, 1073741823, -9340);
        v27 = this;
        const v50 = [-719491709,-4096,38613,-1,1024,65535,129];
        [65535,268435456,65537];
        [-1319674364,836468341,127,-46522,-4294967296,742091120,3621,16,-2,268435441];
        return v50;
    }
    static g = v23;
    1073741824 = v23;
}
new C24();
new F0();
[-1.0174616314637005e+308,-3.0,100754.07920439309];
[-933.148383772747,567348.1259311147,1000000000.0,-5.0,253754.40024302714,-898.7400513903434,0.0,1000000000.0,-5.003433158632278];
class C58 {
    static {
        for (let v60 = 0; v60 < 25; v60++) {
            function f61() {
            }
            const v62 = [601759695];
            const v63 = [1073741824,1073741823,1376142744,1073741825];
            const v65 = [];
            function f66() {
                const t76 = [];
                t76[6] = 4294967295;
                const o71 = {
                    set b(a70) {
                    },
                    "arguments": v65,
                };
                return o71;
            }
            for (let v72 = 0; v72 < 5; v72++) {
                f66();
                %OptimizeFunctionOnNextCall(f66);
            }
            function f74(a75, a76, a77, a78) {
                for (let i81 = 0; i81 < 2; i81++) {
                    try {
                        arguments.g = i81;
                    } catch(e87) {
                    }
                }
                function f88() {
                    return a75;
                }
                const v89 = f61();
                const v91 = new Int8Array();
                const v94 = new Uint32Array(4);
                [v94];
                const v98 = 536870887 * 536870887;
                v98 ** v98;
                function f100(a101, a102) {
                    return v89;
                }
                f100();
                const v104 = v91.buffer;
                Object.defineProperty(v104, "constructor", { writable: true, configurable: true, value: Date });
                new Int8Array();
                v104.slice(2147483648);
                %OptimizeFunctionOnNextCall(4);
                let v109;
                try { v109 = v63["find"](..."find", a78, ...v62, ...v63, ...522675525n); } catch (e) {}
                Symbol("find");
                const v113 = new Uint8ClampedArray();
                const o114 = {
                    ...v113,
                };
                v109 <= a77;
                return arguments;
            }
            for (let v116 = 0; v116 < 5; v116++) {
                f74();
            }
        }
    }
}
[-585.9101580508636,0.6092743245819283,-405.64703771598215,-1000000000.0,7.993152629767696,4.0,-2.0,5.0,0.9022173613024298,-2.2250738585072014e-308];
function f119() {
}
function f120(a121, a122, a123, a124) {
    function f125() {
    }
    f119();
    const v128 = new Int8Array();
    function f129(a130, a131) {
        const o135 = {
            p(a133, a134) {
                return this;
            },
        };
    }
    f129();
    f129();
    v128.buffer;
    let v139 = 1000000000000.0;
    v139--;
    function F143(a145, a146, a147, a148) {
        if (!new.target) { throw 'must be called with new'; }
        this.c = a145;
    }
    const v149 = new F143(-2.0);
    const v150 = new F143(-1.093925554716035e+308);
    v150 in v149;
    const t156 = [];
    t156.length += 1.0;
    %OptimizeFunctionOnNextCall(f125);
    class C156 extends Date {
        static 2544510523 = 1.0;
        1855;
    }
    try { v23["find"](); } catch (e) {}
    for (const v159 in "1024") {
    }
}
f120();
new Uint16Array(4);
new BigInt64Array(16);
new Uint32Array(0);
function f173() {
}
class C174 extends v21 {
}
const v175 = new C174();
function f176() {
    const v179 = Array(4087);
    v179[351] = v175;
    for (const v180 of v179) {
    }
    return Array;
}
function f181(a182) {
    const o183 = {
        ...a182,
        9: f119,
        5: 65536,
        536870889: a182,
        6: a182,
        [a182]: a182,
    };
    return o183;
}
f181(255);
const v185 = new Date();
v185.valueOf = Date;
v185.setFullYear(v185, Date, v185);
