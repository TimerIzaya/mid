let v2 = -28891;
function f3(a4) {
    const o27 = {
        [a4](a6, a7) {
            const v10 = -268435456;
            const v11 = !a4;
            const v12 = v11 ** v11;
            try {
                let v13;
                try { v13 = a7(v10); } catch (e) {}
                function f14() {
                    return v11;
                }
                function F15(a17, a18) {
                    if (!new.target) { throw 'must be called with new'; }
                    try {
                        this.d = v12;
                    } catch(e19) {
                    }
                    try {
                        this.g = a4;
                    } catch(e20) {
                    }
                }
                new F15(a4, v13);
                new F15(v12, a6);
                new F15(v11, f3);
                const v24 = /4*/diy;
                this.fuck(v24, v2, v24, v24);
            } catch(e26) {
            }
            return a7;
        },
        2: -2039595515,
        __proto__: a4,
        ...a4,
        ...29344,
        3: v2,
        "g": v2,
    };
    return o27;
}
const v28 = f3(-2039595515);
const v29 = f3(f3, v28, f3);
const v30 = f3(-2039595515);
v2 = -2039595515;
let v31;
try { v31 = v30.toString(v29, v2, v2); } catch (e) {}
!-2039595515;
try {
    new f3(v29);
} catch(e34) {
}
function F35(a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    const v39 = this?.__lookupGetter__;
    try { new v39(v2); } catch (e) {}
    a37[3] = a37;
    a38[3] = a38;
    try {
        this.b = a38;
    } catch(e41) {
    }
}
F35.length = F35;
const v42 = new F35(v29, v28);
v42.length = v42;
new F35(v28, v29);
new v31(v29, v30);
%VerifyType(v29);
try {
    new f3(v2);
} catch(e46) {
}
new Int32Array(868);
0 >> 0;
new BigUint64Array(0);
let v54 = 14;
v54--;
new Int8Array(v54, Int8Array, Int8Array);
const v58 = [-37102.6674218484,-969411.635186719,-1.3592557640113297e+308,0.9054806195219168,1000000000000.0,-0.0,-3.0,-0.0];
try { v58.shift(); } catch (e) {}
Float32Array.name;
new Float32Array(v58);
