function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -331174380;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
new F0();
class C10 {
    constructor(a12, a13) {
        function f14(a15) {
            function f17(a18) {
                a18 & a18;
            }
            this.onmessage = f17;
            this.__proto__;
        }
        const v25 = [f14];
        const o26 = {
            "arguments": v25,
            "type": "function",
        };
        new Worker(f14, o26);
    }
}
const v28 = new C10(-4.0, -4.0);
const v29 = new C10(9007199254740992, 512);
const v32 = new Uint8Array(0);
const v35 = new Uint8Array(4096);
let v36;
try { v36 = v35(); } catch (e) {}
try { v36(v32, v36, v28); } catch (e) {}
try { v29.m(0, v32); } catch (e) {}
const v39 = [-2,14,-9007199254740990,-11875,2147483647,15,420751521,-1024];
const v40 = /1xyz{1,}?/gims;
const v41 = /h\p{gc=Nd}/vdy;
const v42 = /\xf0\x9f\x92\xa9a*/us;
function F46(a48, a49, a50, a51) {
    if (!new.target) { throw 'must be called with new'; }
}
const v52 = new F46(v42, 1, -1263139894, F46);
const v53 = new F46(v40, v42, -23596, v52);
const v54 = new F46(v41, F46, -23596, 1);
const v57 = v54 | F46;
let v58;
try { v58 = v53(v42, v57, v57); } catch (e) {}
if (v58) {
    let v59;
    try { v59 = ("catch").codePointAt(v58); } catch (e) {}
    [,v59] = "iterator";
} else {
    new WeakSet();
}
const v62 = [10,439741399,-35553,-65536,-11,28859];
const v63 = [512,4096];
let v65 = new Date();
function f66(a67, a68, a69, a70) {
    const o92 = {
        m(a72, a73, a74) {
            function f75(a76, a77, a78, a79) {
                const v81 = new Int32Array();
                v81[492];
                v81[3];
                return a76;
            }
            super[a70] = a68;
            v4.f;
            Object.defineProperty(a67, this, { configurable: true, get: Date, set: Date });
            new F0();
            super.b = a74;
            const v89 = v65 / v65++;
            Math.acos(v89);
            Math.log1p(v89);
            return this;
        },
    };
    return o92;
}
f66(v62, f66(v39, v4, v39, v65), v39, v5);
f66(v39, v5, v63, v5);
for (let [i104, i105] = (() => {
        new Uint8Array([2,-10]);
        new Float64Array(128);
        return [0, 10];
    })();
    (() => {
        i105 >>> i105;
        function f107(a108, a109, a110, a111) {
            function f113() {
                const o121 = {
                    84: arguments,
                    set b(a116) {
                    },
                    ["Vre"](a118, a119) {
                        super[f113];
                    },
                };
                return f107;
            }
            f113();
            %OptimizeFunctionOnNextCall(f113);
            return a110;
        }
        const v123 = i104 < i105;
        let v126 = 1000000000000.0;
        new Uint16Array(9007199254740992, 0, v126--);
        function f129() {
            typeof (-(-v62 && v62)) === "number";
            return v62;
        }
        f129();
        const v138 = new BigUint64Array(3375);
        let [v139,,v140,...v141] = v138;
        return v123;
    })();
    i104++) {
}
