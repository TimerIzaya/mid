function f2() {
}
const v3 = [];
try { new f2(f2, v3, f2, f2, null); } catch (e) {}
class C7 {
    static toString(a9) {
        this << 1000000000000.0;
        super[this] = 3.0;
        for (let v11 = 0; v11 < 32; v11++) {
            "p" + v11;
            a9[3.0] = v11;
        }
        return a9;
    }
    4096 = 3.0;
    2147483649;
    static g;
    static 2147483648 = C7;
    constructor(a15, a16, a17, a18) {
        let v19 = 0;
        do {
            let v21 = 30918;
            const v22 = v21--;
            let v23 = v3 ^ v3;
            Math.random();
            Math.exp(v3);
            v22 >> v3;
            Math.ceil(v22);
            ++v23;
            v19++;
        } while (v19 < 2)
    }
}
new C7();
const v33 = new C7();
new C7();
class C35 {
    constructor(a37, a38) {
        const v39 = a38[10000];
        new Uint16Array(1657);
        function F43(a45, a46, a47) {
            if (!new.target) { throw 'must be called with new'; }
        }
        typeof v39;
        class C50 {
        }
        const v52 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
        v52.__proto__ = v52;
        a37 === "number";
        function F54(a56, a57) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = v33;
                const o59 = {
                    "execution": "sync",
                };
                WeakMap?.call;
            } catch(e62) {
            }
        }
        new C7(v39, v39);
        new F54(1000000000000.0, 1000000000000.0);
        new F54(1000000000000.0, 1000000000000.0);
    }
}
const v66 = new C35(v33, v33);
const v67 = new C35(v66, v33);
new C35(v67, C35);
let v69 = 12;
const v72 = [v69,[v69,v69]];
class C73 {
    constructor(a75, a76) {
        new Uint16Array(a75);
    }
    static {
        this.e = this;
        const v82 = v69++;
        -v82;
        ~v69;
        Math.log10(44149);
        const v86 = 44149 + v69;
        v86 >> v86;
        Math.fround(v82);
    }
}
new C73(v72);
[1024,9007199254740991,14465,-9007199254740992,7,65537,-1343154966,-32502,65535];
[7,2147483647];
[-12];
function F93() {
    if (!new.target) { throw 'must be called with new'; }
}
class C99 {
    toString(a101, a102, a103, a104) {
        let [] = "undefined";
    }
}
try { F93(..."function", 64n, 0, ...1000000000000.0); } catch (e) {}
