class C1 {
    h = false;
    get e() {
        let {"h":v3,...v4} = this;
        const v7 = v3[Symbol.toPrimitive];
        this[false] = v7;
        return v7;
    }
    #h;
}
const v8 = new C1(C1, false, C1);
const v9 = new C1();
v9.h = v9;
const v10 = new C1();
v10.h = v10;
let v11 = 127;
v11 / v11;
const v13 = v11--;
const v15 = new Uint8ClampedArray(v11);
7 - 7;
const v18 = 7 % 7;
v15 & v15;
const v23 = new Uint32Array(186);
Float64Array > v23;
const v26 = new Int16Array(7, Int16Array);
v26[2];
Float64Array.d = Float64Array;
const v30 = new Float64Array(447);
const v33 = [601759695];
const v34 = [1073741824,1073741823,1376142744,1073741825];
function f35(a36, a37, a38, a39) {
    try {
        v34.forEach(a37);
    } catch(e41) {
    }
    const v43 = new Int8Array();
    const v46 = new Int32Array(1024);
    v46[3];
    let [v48] = v43;
    try { v34["find"](..."find", a39, ...v33); } catch (e) {}
}
f35();
class C53 {
    b = "c";
    static #h;
    268435439;
    static #c;
}
C53.e = C53;
C53.prototype = C53;
C53.length = C53;
new C1();
186 < 186;
function f59(a60, a61) {
    const o63 = {
        get c() {
            let v62 = this;
            v62 += v62;
            return a61;
        },
        "b": -65537n,
        __proto__: a60,
        ...a60,
        "a": a61,
        6: 4294967297n,
        "c": 4294967297n,
    };
    return o63;
}
f59(f59, -65537n);
const v65 = f59(f59, f59);
class C66 extends f59 {
    set e(a68) {
        const v69 = v65.h;
        let {...v70} = v65;
        Reflect.construct(v69, [4294967296n]);
    }
}
new C66();
const v75 = new C53("b");
v75[268435439] = v75;
v75[268435439][118];
const v78 = new C53(v30, v75);
v78[268435439] = v78;
const v79 = new C53();
let v80 = 2.220446049250313e-16;
v80 >> v80;
const v82 = v80++;
v82 << v82;
1.7976931348623157e+308 >>> 1.7976931348623157e+308;
-(1.7976931348623157e+308 / 1.7976931348623157e+308);
const v89 = [v80,1.7976931348623157e+308,1.7976931348623157e+308];
const v91 = ([-788.7260290236088,1.7976931348623157e+308,"c"])?.filter;
try { new v91(v13); } catch (e) {}
const v93 = [-788.7260290236088,C53];
try { v93.reduce(v93); } catch (e) {}
try { Math.expm1(v18); } catch (e) {}
try { Math.pow(v89, v79); } catch (e) {}
Math.E = Math;
const v98 = Math.round();
v98 ^ v98;
for (let v100 = 0; v100 < 10; v100++) {
    const v101 = v100 >>> v100;
    v101 >> v101;
    let v103 = v100 / v100;
    v103 >> v103;
    v103--;
    async function f106(a107, a108, a109) {
        a108++;
        a108--;
        -a109;
        const v113 = a109 >>> a109;
        v113 % v113;
        let v115 = a109 >>> a109;
        v115--;
        const v117 = v115 >>> v115;
        let v118 = await v98;
        v118--;
        const v120 = v118 / v118;
        v120 + v120;
        try { new Number(v117); } catch (e) {}
        Number.isNaN(v118);
        -(-24894);
        const v127 = [0.8307152163010869,1.0,0.0];
        v127[2] = v127;
        v127.length = v100;
        %VerifyType(v127 instanceof -24894);
        return f106;
    }
    f106.name = f106;
    let v129;
    try { v129 = f106(-788.7260290236088, -1000000000.0, -1000000000.0); } catch (e) {}
    let v130 = -2;
    v130 | v130;
    function F132() {
        if (!new.target) { throw 'must be called with new'; }
    }
    function f134() {
        return f134;
    }
    const v135 = f134();
    function F136(a138, a139) {
        if (!new.target) { throw 'must be called with new'; }
        const v140 = f134.constructor;
        try { v140(this, v135); } catch (e) {}
    }
    const v142 = v129?.finally;
    try { new v142(v129); } catch (e) {}
    try { v129.then(v26, v26); } catch (e) {}
    let v145 = 48510;
    let v146 = 1073741823;
    class C147 {
        4259938026;
    }
    let v148 = new C147();
    const v149 = new C147();
    ({"a":v145,"b":v148,"c":v130,...v146} = v149);
    const v150 = f106(Math, "b", v98);
    let v151;
    try { v151 = v150.hasOwnProperty(-788.7260290236088, f106); } catch (e) {}
    const v152 = /a\w/gudsy;
    const v153 = /ka{0}/guims;
    const v154 = new v151();
    function f155() {
        gc();
        return v153;
    }
    v154.constructor = f155;
    const v158 = new v151();
    const o159 = {
        ...v153,
        "d": v158,
        "c": v26,
        "g": v26,
        "f": v8,
        "a": v154,
        7: v151,
        "e": v153,
        "b": v152,
    };
    !(v151 || v151);
}
