class C3 {
    set a(a5) {
        function f6() {
            return "valueOf";
        }
    }
    static {
        super.e *= 1.0;
        "undefined" instanceof "valueOf";
    }
    constructor(a10) {
        super[a10];
        try {
            const t13 = "valueOf";
            t13.toString = a10;
        } catch(e12) {
        }
    }
}
new C3(1.0);
new C3(C3);
new C3("undefined");
class C22 extends C3 {
    get b() {
        this.a &&= 1.0;
        try {
            super.then();
        } catch(e25) {
        }
        return 5.0;
    }
    n(a27, a28, a29) {
        function F30(a32, a33) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.d = 1000000000.0;
            } catch(e34) {
            }
            try {
                this.b = 4n;
            } catch(e35) {
            }
            try {
                this.f = a29;
            } catch(e36) {
            }
        }
        try {
        } finally {
        }
        const v40 = new Uint16Array(4096);
        v40.fill(-10);
        const v42 = new F30(a28, a27);
        new F30(4n, this);
        new F30(2n, v42);
        return F30;
    }
}
new C22();
new C22();
new C22();
function f55() {
    return 3.0;
}
const v56 = [];
-(-v56 && v56);
Array(36862);
const v63 = [1000000.0,1000000.0,1000000.0];
class C64 extends f55 {
    [-1] = v63;
    static get c() {
    }
    m(a67) {
    }
    set e(a69) {
    }
    static get h() {
    }
}
