function f0() {
}
Math.log();
function f6(a7, a8, a9, a10) {
    a8 | a8;
    const v12 = a7 / a7;
    const v13 = a8 < a8;
    let v14 = a9 >>> a9;
    v14++;
    const o19 = {
        "b": a7,
        "c": a10,
        n(a17, a18) {
            return v13;
        },
    };
    return v12;
}
f6(Uint8Array, 2);
const v23 = [-5.0,8.918538262957455];
[0.5395910829531291];
[-1000.0,-781.3840359970638];
class C26 extends f0 {
    constructor(a28, a29) {
        const v30 = a29[2];
        const v32 = new Uint8Array();
        for (let v33 = 0; v33 < 500; v33++) {
            const o37 = {
                ...v32,
                n(a35, a36) {
                    return a35;
                },
            };
        }
        for (let v38 = 0; v38 < 5; v38++) {
            v23[v30];
        }
    }
    static #p(a41, a42, a43, a44) {
        let v47 = 451.54591128971424;
        ++a44;
        function f49(a50) {
            return f49;
        }
        const v51 = new f0();
        const v52 = new f0();
        f49(Math, "8Yr");
        const v57 = f49(v52, "8Yr");
        const v58 = f49(v57, "-1024");
        function f59(a60, a61, a62) {
            const o67 = {
                "e": "bigint",
                ...v58,
                get f() {
                    class C64 {
                        static [-2];
                        16;
                    }
                    new C64();
                    new C64();
                },
            };
            return o67;
        }
        const v69 = f59(Math, f59(v57, v52, v51), v58);
        for (let i72 = 0, i73 = 10; i72 < i73; i72++) {
            v69.f;
        }
        --v47;
        const v82 = ~a42;
        Math.max(f0);
        Math.ceil(v82 | a44);
        return a42;
    }
}
new C26();
new C26();
new C26();
function f89(a90, a91, a92) {
    const o94 = {
        get d() {
            return f89;
        },
    };
    const v95 = o94?.__lookupSetter__;
    let v96;
    try { v96 = new v95(); } catch (e) {}
    return v96;
}
%PrepareFunctionForOptimization(f89);
f89();
%OptimizeFunctionOnNextCall(f89);
f89();
