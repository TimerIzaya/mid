try { Int8Array.bind("getOwnPropertyNames"); } catch (e) {}
const v6 = new Int8Array("object");
try { v6.reduce(10); } catch (e) {}
let v8 = 2382;
v8++;
let v11 = new Int32Array(v8);
v11.BYTES_PER_ELEMENT = v11;
v11--;
new Uint8Array(5);
new Int32Array(9);
Int32Array.BYTES_PER_ELEMENT;
new Int32Array(16);
new BigInt64Array(BigInt64Array);
function f26(a27, a28, a29, a30) {
    -a27;
    a29 !== a29;
    const v33 = a29++;
    v33 <= v33;
    return 10;
}
for (let v35 = 0; v35 < 10; v35++) {
    f26(v35, v35, v35);
}
%OptimizeFunctionOnNextCall(f26);
f26(f26, f26, f26, f26);
