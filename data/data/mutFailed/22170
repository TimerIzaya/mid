try { ("number").codePointAt("JFM6F"); } catch (e) {}
function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
}
const v12 = new F6(F6, F6, F6, F6);
for (let v13 = 0; v13 < 25; v13++) {
    v12["p" + v13] = v13;
}
let v16;
try { v16 = ("number").trim(); } catch (e) {}
const v17 = [];
function F19(a21, a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    const v25 = this.constructor;
    try { new v25(a24, v17); } catch (e) {}
    a22[2];
}
new F19("ceil", "ceil");
try { v16.sub(); } catch (e) {}
class C31 {
    ["hHWx"];
    static n(a33, a34) {
        for (let v35 = 0; v35 < 32; v35++) {
            const t23 = "number";
            t23["p" + v35] = v35;
        }
        return "toString";
    }
    static #c = "zqcb";
    1073741825;
    d = "split";
    static #h;
}
try { C31.apply("zqcb", "split"); } catch (e) {}
const v39 = new C31();
v39[1073741825] = v39;
v39[1073741825];
class C43 extends ([]).constructor {
}
C43.a = C43;
const v44 = new C31();
v44[1073741825] = v44;
v44[1073741825] = v44;
const v45 = new C31();
let v46 = -1073741824n;
const t45 = "number";
t45.e = v46--;
const v50 = new Map();
function f51(a52, a53) {
    const o60 = {
        "a": a53,
        [a52]: v50,
        [v50]: Map,
        [2221](a55, a56, a57) {
        },
        ...v50,
        "b": a52,
        [a53]: Map,
        "h": a52,
        valueOf(a59) {
            return a59;
        },
    };
    return a53;
}
for (let v61 = 0; v61 < 395; v61++) {
    f51();
}
29717 - 29717;
256 | 256;
9 % 9;
function f73() {
    const v75 = ("1073741824").constructor;
    return v75(f73, 9, v75, "1073741824", v75);
}
new Int16Array(4096);
function f79() {
}
let v80;
try { v80 = f79.call(256); } catch (e) {}
class C81 {
    [Int16Array];
    static valueOf(a83) {
        this.#c = "ceil";
    }
    constructor(a85, a86) {
        a86[2];
        /Ia[a]/uims;
        let v89 = /W(jy2)/udy;
        v89.flags;
        const v91 = /(u4(?:a?)*)/gudimsy;
        const v94 = new Uint8Array(v91, f73);
        const v96 = new Uint32Array();
        function f97(a98, a99, a100, a101) {
            const o105 = {
                ...v94,
                n(a103, a104) {
                    v96[a98] = v96;
                },
            };
            return o105;
        }
        for (let v106 = 0; v106 < 625; v106++) {
            f97(Uint8Array, 2, v106);
        }
        v89 = v91;
        for (let v108 = 0; v108 < 25; v108++) {
            v17["p" + v108] = v108;
        }
    }
}
const v111 = new C81();
try { v111.propertyIsEnumerable(9); } catch (e) {}
const v113 = new C81(f79, 4096, 256, 64);
try { v113.constructor(); } catch (e) {}
const v115 = v113?.constructor;
try { v115.call(v45); } catch (e) {}
let v117;
try { v117 = new v115(); } catch (e) {}
let v118 = 2;
v118++;
function f120(a121) {
    a121 === a121;
    a121 <= a121;
    const o127 = {
        __proto__: v118,
        213: a121,
        ...a121,
        "g": v118,
        p(a125, a126) {
            return f120;
        },
    };
}
f120();
try { v117.propertyIsEnumerable(v80); } catch (e) {}
