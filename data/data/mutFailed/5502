const v0 = /C(?=a){0,10}a/gims;
/C/gudimy;
/7/gumy;
new Int8Array(512);
new BigUint64Array(255);
Symbol.toPrimitive;
const v13 = [-65535,452354247,-2,78479092,-2147483648,1073741823,5,6528,-1024,-261130286];
const o15 = {
};
const v17 = new Proxy(v13, o15);
new Int32Array(v17);
new BigUint64Array(2);
new Float64Array(512);
new Symbol(256);
new Float32Array(7);
let v30 = (44610)[44610];
let v31;
try { v31 = v30(7, 7, 4); } catch (e) {}
v30 = 7;
function F32(a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        a34.b = 44610;
    } catch(e36) {
    }
}
const v37 = new F32(44610, 44610);
try {
    v37.toString = v31;
} catch(e38) {
}
let v39;
try { v39 = Int32Array(256, 7, Float32Array, F32); } catch (e) {}
const v40 = new F32(7, 7);
new F32(7, 7);
typeof v31 === "undefined";
Symbol.toPrimitive;
const o54 = {
    [v0]() {
        v39();
        function F49(a51, a52) {
            if (!new.target) { throw 'must be called with new'; }
        }
        v39(F49, v40);
    },
};
