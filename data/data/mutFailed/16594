function f0() {
    65536 & 65536;
    const o19 = {
        "h": 65536,
        "e": 65536,
        "f": 65536,
        "b": 65536,
        [1000000.0]: 65536,
        p(a6, a7) {
            const v8 = a7?.c;
            v8?.[v8];
            const v10 = super[a6];
            const o11 = {
            };
            try {
                o11.a = this;
            } catch(e12) {
            }
            try {
                const o13 = {
                };
                o13.a = this;
                o13.h = v10;
            } catch(e14) {
            }
            try {
                const o15 = {
                };
                o15.a = this;
                o15.h = v10;
                o15.f = a6;
            } catch(e16) {
            }
            try {
                const o17 = {
                };
                o17.a = this;
                o17.h = v10;
                o17.b = 65536;
            } catch(e18) {
            }
            return 1000000000000.0;
        },
    };
    return o19;
}
const v20 = f0();
f0();
const v22 = f0();
const v23 = [2.220446049250313e-16,-1000000000000.0,-3.4247885395563475,106.76136658193741,1.5699526743679027e+308,402397.26179436524,-2.2250738585072014e-308,252458.66467281873,-3.0];
const v24 = [2.2250738585072014e-308,-6.891185308592798,0.549876764956488,296.02863208117947,-61.07325088400489];
const v25 = [-75625.231149373,-1.6375709373952212,-1.1795990018129657e+308,-2.996412359043921,-3.339390340601196,-9.459057087484233,0.7565207191209081];
[v23,v22,v25,v25,v25];
const v27 = [v20,v23,v24,v22];
try { v27.findLast(v25); } catch (e) {}
const v29 = [v27];
try { v29.map(v23); } catch (e) {}
class C34 {
    constructor(a36) {
        ("buffer")["search"](..."buffer", ..."search", ..."search", a36, ..."search", 52021);
        super.d = arguments;
    }
    static h;
    static #a;
    [-5.0] = -5.0;
    #g = "buffer";
    static #c;
    static #e = C34;
}
const v40 = new C34(C34);
v40.b = v40;
const v41 = new C34(v40);
v41.d = v41;
new C34(v41);
const v44 = new Date();
new BigInt64Array(129);
function F48() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 3;
    } catch(e51) {
    }
}
const v53 = new BigInt64Array();
var c = v53;
const o55 = {
};
gc();
class C57 extends F48 {
    static set d(a59) {
    }
}
/V/gdiy;
/a\b!/vmy;
const v62 = /a{0,1}?/uisy;
v62.a = v62;
127 % 127;
try { new Int8Array(127, 129, v20); } catch (e) {}
new Int8Array(127);
const v69 = [-1.5424212036356715e+308];
v69[536870887n] = v69;
-9007199254740992;
268435456 << 268435456;
new Uint8Array(6);
function f79() {
}
12 * 12;
const v84 = new Int8Array(12);
try { v84.fill(v41); } catch (e) {}
const v88 = new Uint32Array(1024);
const v89 = /1xyz{1,}?/gims;
v89.ignoreCase = v89;
const v90 = /h\p{gc=Nd}/vdy;
const v91 = /\xf0\x9f\x92\xa9a*/us;
new Uint8Array(4056);
try { ("log1p").toLocaleLowerCase(); } catch (e) {}
class C98 {
}
try { C98(); } catch (e) {}
if ("log1p") {
    try { C98.m(); } catch (e) {}
}
class C103 {
    static {
        try { new this(); } catch (e) {}
        Symbol.split = Symbol;
        const v108 = this[Symbol.hasInstance];
        try { v108.bind(o55); } catch (e) {}
    }
    #p() {
        let v111;
        try { v111 = this.p(undefined, this, this, this, this); } catch (e) {}
        try {
            v111.#p(undefined, v111, v111, undefined);
        } catch(e113) {
        }
        return undefined;
    }
    static #a = undefined;
    c = undefined;
}
const v114 = new C103();
const v115 = new C103();
const v116 = new C103();
function f117(a118) {
    const o124 = {
        15: a118,
        toString(a120, a121) {
            super.h = a121;
            try { C103.stringify(a118, a118, this); } catch (e) {}
            try {
                C103.c = v114;
            } catch(e123) {
            }
            return a121;
        },
        2147483647: undefined,
        __proto__: v115,
        "c": a118,
        ...a118,
        "f": a118,
    };
    o124[765];
    return o124;
}
try { f117(v116); } catch (e) {}
const v127 = f117(v88);
v127[422];
const v129 = f117(v116);
v129[15] = v129;
f117(v127);
for (let i132 = 0;
    (() => {
        5 > 5;
        const v135 = i132 < 5;
        v135 && v135;
        return v135;
    })();
    i132++) {
    try {
    } catch(e140) {
    }
    -9223372036854775808n << -9223372036854775808n;
    -9223372036854775808n - -9223372036854775808n;
    const o154 = {
        toString(a145, a146) {
            const v149 = new Int32Array(1024);
            try { new SharedArrayBuffer(v149); } catch (e) {}
            new SharedArrayBuffer();
            this?.__lookupSetter__;
        },
    };
    const v155 = o154?.__defineGetter__;
    try { new v155(i132, -9223372036854775808n); } catch (e) {}
    o154.toLocaleString();
}
-1263139894 / -1263139894;
function F160(a162, a163, a164, a165) {
    if (!new.target) { throw 'must be called with new'; }
    const v166 = this?.constructor;
    try { new v166(a165, F160, a162, a165); } catch (e) {}
    a163 | a163;
    const v169 = a165?.toString;
    try { new v169(); } catch (e) {}
}
F160[Symbol.toPrimitive] = gc;
const v173 = new F160(v91, 1, -1263139894, F160);
const v174 = new F160(v89, v91, -23596, v173);
v174.d = v174;
const v175 = new F160(v90, F160, -23596, 1);
const v176 = v175?.__defineGetter__;
try { new v176(v44, v90); } catch (e) {}
v175[Symbol.toPrimitive] = f79;
const v180 = v175 | F160;
let v181;
try { v181 = v174(v91, v180, v180); } catch (e) {}
if (v181) {
} else {
}
