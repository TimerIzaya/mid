const v2 = new Uint8Array(548);
new Uint8ClampedArray(2);
new Float64Array(0);
[64,2147483649];
[5,8,-9007199254740991,-15,9,7];
const t3 = [-9223372036854775807,8,2147483647,34342,0,-256,60615,-5561];
t3[Uint8Array] = Float64Array;
try {
    v2.valueOf = 548;
} catch(e13) {
}
const v16 = /(ab|cde)\118\P{sc=Greek}+/gdims;
function f17(a18, a19) {
    try { BigInt64Array(BigInt64Array); } catch (e) {}
    return Float64Array;
}
v16[Symbol.toPrimitive] = f17;
Math.sqrt(Uint8Array);
Math.expm1(Uint8Array);
Math.max(Uint8Array);
v16.exec(v16);
