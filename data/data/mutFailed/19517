class C6 {
    static #n(a8, a9, a10) {
        try {
            this.a = a9;
        } catch(e15) {
        }
        return 65537;
    }
    4;
    e = 11;
    [11];
    static 10;
}
const v16 = new C6();
const v17 = new C6();
function f18(a19, a20) {
    class C21 {
        set e(a23) {
            class C26 {
            }
            class C27 {
                static #a = C26;
                static {
                }
            }
        }
    }
    return C6;
}
v17.toString = f18;
new C6();
class C30 {
    static 74 = -4096;
    static d = -4096;
    static [v17];
    static c;
    constructor(a32, a33) {
        a32.n = C30;
        try { a32["n"](a33, C6, this, "n"); } catch (e) {}
        a32.e;
        this[536870887];
    }
    static #n(a39, a40) {
        try {
            super.o(17789);
        } catch(e42) {
        }
        new C6();
        this > 17789 ? this : 17789;
        return C6;
    }
}
new C30(v16, -4096);
new C30(v16, 11);
new C30(v16, 17789);
[2147483648,-9223372036854775807,9223372036854775807,-10,1567482849,1073741825,9223372036854775807,-1428687189,1073741824,29568];
[-1073741824];
[-1378742177,-42696,-1,2147483647,1840353346,-29644];
const v54 = -4294967296n * 9007199254740991n;
function F55(a57) {
    if (!new.target) { throw 'must be called with new'; }
    a57 ^ a57;
}
new F55(v54);
