class C3 {
    static 109 = -1575082019;
    static #h = -268435456;
    static a = -268435456;
    n(a5) {
        try {
            this.#h = this;
        } catch(e7) {
        }
        return this;
    }
}
try { new C3(); } catch (e) {}
new C3();
const v10 = new C3();
const v11 = new C3();
const v14 = new BigUint64Array(924);
v14[825];
new Uint16Array(1001);
new Uint8Array(3521);
function f22(a23) {
    return a23;
}
259 === 259;
const v27 = new Float32Array(259);
try { v27.reduce(1001); } catch (e) {}
3.0 >> 3.0;
Date.prototype = Date;
const v32 = new Date();
try { v32.setFullYear(Date, v32, v11); } catch (e) {}
const o34 = {
    __proto__: Date,
    [3.0]: v32,
};
o34[3] = o34;
new Int16Array(o34);
function f37(a38) {
}
function F39(a41, a42, a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    const v45 = this.constructor;
    try { new v45(); } catch (e) {}
    this.d = f37;
}
try { new F39(3.0, C3, 3.0, v10); } catch (e) {}
const v50 = new Float64Array(200);
1000 / 1000;
try { Set.apply(1000, v50); } catch (e) {}
