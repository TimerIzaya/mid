const v2 = new Float64Array(50);
try { new BigUint64Array(Float64Array, 3236, 3236); } catch (e) {}
const v6 = new BigUint64Array(3236);
const v9 = new Float64Array(6);
function f10() {
}
class C12 {
    valueOf(a14) {
        try {
            f10();
        } catch(e16) {
        }
        return this;
    }
    static {
        let v17 = this;
        let v18;
        try { v18 = v17.call(6); } catch (e) {}
        v17[2769597849] = v17;
        v17 &= v17;
        C12[7] = v17;
        const v19 = [-1.3667473485475811e+308,1.7976931348623157e+308,5.0,-3.583919688173468e+307,-1.5320462342133301e+308,-414873.4859108749,286122.8434793174,866.7395286670867,-1000.0,-742782.9714922046];
        try { v19.sort(v2); } catch (e) {}
        const o25 = {
            __proto__: v19,
            [v18](a22, a23, a24) {
            },
        };
        try { o25.flatMap(Float64Array); } catch (e) {}
        super.h = -13676;
        super.e ||= 6;
        const v27 = C12.__proto__;
        try { v27.apply(Float64Array, v27); } catch (e) {}
        try { v27.call(-13676); } catch (e) {}
        try {
            v17.length = 1;
        } catch(e31) {
            e31.d = e31;
            class C32 {
            }
            C32.prototype = C32;
            try { Math.cbrt(1); } catch (e) {}
            const v36 = Math.tan(-532550611);
            v36 !== v36;
        }
    }
}
C12.name = C12;
[1000000000000.0,0.5078639201258308,-1000.0,-2.0];
const v39 = [2.2250738585072014e-308,0.9270321339051487,-5.0,0.7948815867899199,0.24977936391529443,-4.0];
const v40 = [685.5994519209523,562.1024041930364,500892.7768896271,-5.0,-161.3783022269089,Infinity,31.432688603662427,-0.0,53253.45462854719];
function f41() {
    return v9;
}
v9.includes(Float32Array);
try { ("boolean").codePointAt(6); } catch (e) {}
const v48 = ("boolean").split("toString");
v48[0] = v48;
try { ("m").normalize(); } catch (e) {}
const v55 = ("jP")?.constructor;
try { new v55(Float64Array); } catch (e) {}
function F57(a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
    a60 ^ a60;
    try {
        this.a = "Rh";
    } catch(e62) {
    }
}
let v63 = new F57("m", 50);
const v64 = new F57();
v64.a = v64;
const v67 = Array(19793);
[v67,v67,v67];
function* f69(a70, a71, a72, a73) {
    return a71;
}
v63 = v64;
v63[536870887] = v40;
v6[v63] = "jP";
8 >>> 8;
const v78 = new Uint32Array();
const o157 = {
    o(a80) {
        delete v78[5];
        const v82 = new Uint8ClampedArray();
        v82[("jP").toPrimitive];
        try {
        const t0 = 65536n;
        t0(65536n);
        } catch (e) {}
        try {
        const t0 = 1073741825n;
        t0();
        } catch (e) {}
        class C94 {
        }
        try { C94.call("268435441"); } catch (e) {}
        const v96 = Array();
        const v97 = v96?.__defineSetter__;
        try { new v97(Symbol, Symbol); } catch (e) {}
        const v99 = new C94();
        function f100(a101, a102, a103) {
            const o111 = {
                toString(a105, a106, a107) {
                    a102 < v96;
                    super[v99];
                    return a102;
                },
                get d() {
                    return a102;
                },
            };
            return o111;
        }
        f100.caller = f100;
        %PrepareFunctionForOptimization(f100);
        try {
            new Map("268435441");
        } catch(e113) {
            e113.name = e113;
        }
        const o114 = {
        };
        o114.h = o114;
        try {
            Array.g = o114;
        } catch(e115) {
        }
        try {
        } catch(e116) {
            eval("");
        }
        const v121 = v67?.constructor;
        try { new v121(v121); } catch (e) {}
        v48.propertyIsEnumerable;
        Set.name;
        class C126 extends Set {
        }
        C126.length = C126;
        const v127 = new C126();
        const v128 = [601759695];
        const v129 = [1073741824,1073741823,1376142744,1073741825];
        function f131(a132, a133, a134, a135) {
            a134--;
            function f138() {
                const v140 = ("Vre")?.constructor;
                try { v140(v127); } catch (e) {}
                const o147 = {
                    "e": -4294967295,
                    ...v39,
                    ..."Vre",
                    "c": a135,
                    "f": "m",
                    84: arguments,
                    ..."Vre",
                    valueOf(a145, a146) {
                        return a132;
                    },
                    ..."Vre",
                    4: "Vre",
                    "c": -268435456,
                    5: -4294967295,
                    6: -268435456,
                };
            }
            try { f138(); } catch (e) {}
            f138();
            %OptimizeFunctionOnNextCall(arguments);
            let v151;
            try { v151 = v129["find"](..."find", a135, ...v128, ...v129, ...522675525n); } catch (e) {}
            const v152 = v151 <= a134;
            v152 || v152;
        }
        let v154 = gc(o114);
        v154 <<= "m";
    },
};
try { o157.o(o157); } catch (e) {}
let v159 = 4096;
v159--;
const v162 = new Uint16Array(v159);
v162[2892] = v162;
v40.length = 2;
const o165 = {
};
o165.e = o165;
o165.getPrototypeOf = o165;
try { new Proxy(Array, C12); } catch (e) {}
const v168 = new Proxy(Uint32Array, o165);
function f170(a171, a172) {
    return a172[3];
}
f170.arguments = f170;
new ArrayBuffer();
o157["o"](o157, Uint32Array, "o", "o", v168);
"p" + 19793;
function f181(a182) {
    const o183 = {
    };
    return o183[213];
}
const v185 = new BigUint64Array(1);
try { v185.lastIndexOf(6); } catch (e) {}
gc();
let [] = [];
function F192(a194, a195, a196, a197) {
    if (!new.target) { throw 'must be called with new'; }
    const v198 = this?.__defineGetter__;
    try { new v198("boolean", v39); } catch (e) {}
}
const v200 = new F192();
class C201 {
}
const v203 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
try { v203.find(v40); } catch (e) {}
const v205 = [601759695];
try { ("Vre").lastIndexOf(50); } catch (e) {}
-(-4294967295);
const v212 = Symbol.toPrimitive;
const o233 = {
    [522675525n](a215, a216) {
    },
    "c": v205,
    valueOf(a218, a219) {
        return a219;
    },
    [-4294967297n](a221, a222, a223, a224) {
    },
    "e": -268435456,
    "maxByteLength": -4294967295,
    "arguments": v203,
    ...v200,
    [v212]() {
    },
    "type": C201,
    valueOf(a227, a228) {
        return Symbol;
    },
    4: "Vre",
    toString(a230, a231, a232) {
        return a231;
    },
};
const v235 = new Uint8Array(64);
v235[30] = v235;
const v237 = Array(3398);
-1;
v237.length = 1;
