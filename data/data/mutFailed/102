function f0() {
    const o20 = {
        "b": 0.05551827598925585,
        set a(a5) {
            new Map();
            [619.0076532229064,960.2247527627665,1000.0,2.220446049250313e-16];
            [630551.1492494799,1.0,213.14426023326405,73.71403451764445];
            const v10 = [-2.0103043652490822e+307,-1000000000.0,-7.811005910508395e+307,1e-15,125367.79177378002,1.7976931348623157e+308];
            const v11 = v10 > Map;
            f0();
            const o16 = {
                "call": f0,
                "has": f0,
                "set": f0,
                "setPrototypeOf": f0,
            };
            new Proxy(this, o16);
            v11 ? v10 : Map;
        },
        [0.05551827598925585]: 0.05551827598925585,
        4294967295: -47023,
        4: -47023,
    };
    o20[Symbol.toPrimitive] = f0;
    return o20;
}
const v23 = f0();
const v24 = f0();
v24.valueOf = f0;
const v25 = f0();
function f26() {
    new Uint32Array(255);
    new Int16Array(129);
    const v35 = new Uint16Array(4096);
    return v35;
}
v25.valueOf = f26;
v25[4294967295];
function f40() {
    return v24;
}
const v42 = 6 << 6;
let v43 = 1073741825;
v43--;
function F46(a48, a49, a50) {
    if (!new.target) { throw 'must be called with new'; }
    a48.valueOf = f26;
    a49.d = this;
    a49 | a49;
    a50 <= a50;
    a48[4294967295] = a48;
    a49--;
    const v54 = a50 + a50;
    v54 === v54;
    try {
        this.d = a50;
    } catch(e56) {
    }
    try {
        this.c = a50;
    } catch(e57) {
    }
}
F46[Symbol.toPrimitive] = f0;
const v60 = F46.prototype;
const v61 = v60?.constructor;
function f62() {
    function f65(a66) {
        const o69 = {
            ...65536,
            5: 65536,
            __proto__: a66,
            valueOf(a68) {
            },
            "d": 4,
            "g": 65536,
            163: 4,
        };
    }
    return f0;
}
Object.defineProperty(v61, Symbol.toPrimitive, { value: f62 });
try { new v61(6, v60, 0n); } catch (e) {}
const v73 = new F46(v25, 6, v43);
v73.toString = f62;
v73.c = v73;
const v74 = new F46(v24, v73, 6);
v74[4294967295] = 48374;
v74.d;
const v76 = new F46(v24, v24, 6);
const v77 = v76?.constructor;
function f78() {
    return f40;
}
function f79(a80) {
    a80[Symbol.asyncIterator];
}
Object.defineProperty(v77, 4294967295, { writable: true, get: f78, set: f79 });
try { new v77(v42, f40, -1024n); } catch (e) {}
const v85 = v76?.constructor;
try { new v85(F46, v60, v25); } catch (e) {}
let v87;
try { v87 = new v85(v74, v76, f40); } catch (e) {}
try { v87.d(); } catch (e) {}
Date[Symbol.toPrimitive] = f26;
try { new Date(v85, Date, v23, f0, f0, Date, Date); } catch (e) {}
try { Date.now(); } catch (e) {}
Date.UTC(268435456);
const v3 = [1e-15,1.0];
const v4 = v3?.findLastIndex;
try { new v4(v3); } catch (e) {}
const v6 = [-2.0,-435.5302692243064,2.2250738585072014e-308,-350.7751301327047,-2.220446049250313e-16,-6.511850585101728e+307,2.2250738585072014e-308,677035.949343004,3.0501208916187235];
const v7 = [1.7480100999185585e+308,-5.0,0.5199429843584729,1.0,-3.6975083145773896e+307,2.220446049250313e-16,-Infinity,-4.0,0.6497046513357677];
class C8 {
    o(a10, a11, a12, a13) {
        const v19 = new Uint8Array(9);
        const v22 = new BigUint64Array(10);
        try {
            v22.__proto__ = v19;
        } catch(e23) {
        }
        const o25 = {
            "execution": -1840849166,
            "type": "minor",
        };
        gc(o25);
        return 268435439;
    }
    #d;
}
const v27 = C8?.constructor;
try { new v27(v3); } catch (e) {}
new C8();
new C8();
const v31 = new C8();
function F32(a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    const v36 = a35?.constructor;
    try { new v36(); } catch (e) {}
    try {
        this.b = v7;
    } catch(e38) {
    }
    undefined?.p;
    const v42 = new Uint32Array();
    async function f43(a44, a45, a46) {
        await v42;
        return a46;
    }
    f43();
    try {
        this.c = a35;
    } catch(e49) {
    }
    try {
        this.e = v7;
    } catch(e50) {
        new Int8Array();
        class C55 {
            constructor(a57, a58) {
                [NaN,1.0,1.1875413619536744e+308];
            }
            static [-2] = e50;
            1073741825 = "e";
        }
    }
}
F32.b = F32;
new F32(v6, v31);
const v61 = new F32(v7, C8);
v27.b = v61;
new F32(v3, C8);
const v63 = [];
try { v63.toString(); } catch (e) {}
new Float64Array(Float64Array);
const o71 = {
    [-50127](a70) {
    },
    "f": -1790469273,
};
let v74;
try { v74 = Date(v7, v3, Date, Date, Date, v7, v7); } catch (e) {}
const v75 = new v74();
v75.toString = Date;
Date();
Object.defineProperty(v63, 2081, { configurable: true, enumerable: true, value: 2056527154 });
v75.setMonth(1);
