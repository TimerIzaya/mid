const v5 = new Uint16Array(22);
let v8;
try {
const t0 = 186;
v8 = t0(64459, Int8Array, Int8Array);
} catch (e) {}
try { v8(v8, 64459, v5, 22714, v8); } catch (e) {}
const v11 = [v8,v5];
Reflect.apply(v5.findLast, v5, v11);
Int8Array.BYTES_PER_ELEMENT = Int8Array;
const v14 = new Int8Array(186);
try { v14.toSorted(v14); } catch (e) {}
128 % 128;
new BigUint64Array(128);
function F22() {
    if (!new.target) { throw 'must be called with new'; }
    const v24 = this?.constructor;
    try { new v24(); } catch (e) {}
}
const v26 = new F22();
v26.b = v26;
function f27(a28) {
    return 1000.0;
}
v26.toString = f27;
Array.d = Array;
Array[v26] = 731894.5693476209;
