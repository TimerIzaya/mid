class C3 {
    p(a5) {
        try {
            this.c = this;
        } catch(e6) {
        }
        return "X5B11";
    }
    static 498 = "valueOf";
    8;
    2 = "symbol";
    d = C3;
}
const v7 = new C3();
const v8 = new C3();
const v9 = new v7();
function f10() {
    return v7;
}
function f11(a12, a13) {
    const o19 = {
        ...a12,
        "f": a12,
        __proto__: v8,
        "e": v9,
        set h(a15) {
            [2.220446049250313e-16,0.4862714104170719,-2.0,1000000000000.0,3.0,8.675948418390249,939.8642420118608,-3.0];
            [1.0,338.09637979624017];
            [9.067142508556916,0.7958513463717833,3.0,1000000000.0,-4.072427567942523];
        },
        "d": "symbol",
        "h": a12,
    };
    return o19;
}
f11(v9, f11(v7, v8));
C3(v8, v8);
const v23 = [];
function F24() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v26 = `
            for (let v27 = 0; v27 < 5; v27++) {
                class C28 {
                }
                const v29 = new C28();
                function f30(a31, a32) {
                    const o37 = {
                        [v29](a34, a35, a36) {
                        },
                    };
                }
            }
        `;
        const o46 = {
            set e(a45) {
            },
        };
        function f47(a48) {
            a48 === a48;
            a48 <= a48;
            const o54 = {
                ...a48,
                p(a52, a53) {
                },
            };
        }
    } catch(e55) {
    }
    try {
    } catch(e56) {
    }
    try {
    } catch(e57) {
    }
}
const v58 = new F24();
const v59 = new F24();
const v60 = new F24();
const v63 = [[v23,v60],F24,[v58,v23,v59],v23];
try { v63.flat(); } catch (e) {}
const v67 = new Int8Array(10);
try { v67.find(v60); } catch (e) {}
new Uint8ClampedArray(268435440);
function f74(a75, a76, a77, a78) {
    Object.defineProperty(a75, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f74 });
    const o85 = {
        toString(a82, a83) {
            new Date(a75);
        },
    };
}
