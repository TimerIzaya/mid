let v0 = -211738799;
class C3 {
    static get d() {
        let v5;
        try { v5 = this.m(v0, this); } catch (e) {}
        v0 = this;
        Object.defineProperty(v5, "c", { enumerable: true, set: Boolean });
        this[Symbol.matchAll] = 2.2250738585072014e-308;
        return v5;
    }
    static #d;
    static [-1280.6484172426863];
}
const v9 = new C3();
new C3();
new C3();
class C12 extends C3 {
    set e(a14) {
        try {
            C3.fuck(a14, a14, C3);
        } catch(e16) {
        }
    }
    #o(a18, a19) {
        try {
            C3.b = v9;
        } catch(e20) {
        }
        return a18;
    }
    constructor(a22, a23) {
        super();
        const o24 = {
        };
        try {
            o24.iterator = this;
        } catch(e25) {
        }
        try {
            const o26 = {
            };
            o26.f = this;
            o26.e = v0;
        } catch(e27) {
        }
        try {
            const o28 = {
            };
            o28.a = this;
            o28.e = v0;
            C12.g = a23;
        } catch(e29) {
        }
        try {
            const o30 = {
            };
            o30.f = this;
            o30.e = v0;
            o30.g = 2.2250738585072014e-308;
        } catch(e31) {
        }
    }
}
new C12();
new C12();
new C12();
new BigUint64Array(-627052561);
new Int16Array(2862);
new Int16Array(2985);
const v45 = [510.2053105196128,0.8358186694591268,1.0,0.543725476488796,-Infinity,5.0,700.6383739635098,Infinity,3.0];
function f46(a47, a48) {
    class C49 {
        #o(a51) {
        }
    }
    return -1280.6484172426863;
}
v45[Symbol.toPrimitive] = f46;
function f54(a55) {
    a55 === a55;
    function f57(a58, a59) {
        for (let v60 = 0; v60 < 50; v60++) {
            const v62 = a55.padEnd();
            const v63 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
            [3,-6,7268,-554513674,5,4294967295,861325878,17152,2147483647,5];
            const v65 = [1073741824,1073741823,1376142744,1073741825];
            try { v65["find"](..."find", v62, ...v63); } catch (e) {}
        }
        return a58;
    }
    return a55;
}
v45.toString = f54;
const v68 = v0 ^ "-792442332";
const v70 = new Date();
v70.setUTCMinutes(v68, v68);
