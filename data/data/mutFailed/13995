const v0 = [];
function F2(a4, a5) {
    if (!new.target) { throw 'must be called with new'; }
    const v6 = this?.constructor;
    try { new v6(a5, a4); } catch (e) {}
    try {
        this.c = a5;
    } catch(e8) {
    }
    try {
        this.a = a5;
    } catch(e9) {
    }
    try {
        this.h = a5;
    } catch(e10) {
    }
}
F2.caller = F2;
const v11 = new F2(null, null);
const v12 = new F2(v11, v11);
const v13 = new F2(v11, v11);
let v20;
try { v20 = ("d").strike(); } catch (e) {}
function F21() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = -536870912;
    } catch(e24) {
    }
    try {
        this.b = -536870912;
    } catch(e25) {
    }
}
const v26 = new F21();
const v27 = v26.h;
new F21();
const v29 = v27.h;
const t38 = "setTime";
const v30 = new t38();
new WeakSet();
const v33 = [1.7275324166299316e+307,0.12158949235076522,3.066792004202748,5.0,-283460.59803241875,2.2250738585072014e-308,-594.1013074164665];
v30[2147483649] >>>= v20;
try {
    v0.length = v20;
} catch(e34) {
}
[-999.9137871852444,-2.0,Infinity,3.1502982252537567e+307,-1.0,0.09732270510991547];
const v36 = [-1.7976931348623157e+308,-0.0,-965.9515950675079];
v36[2] = v36;
let v37 = -65537;
class C40 {
    static {
        let v41 = this;
        403220623 <= 2147483648;
        ({"b":v41,"h":v41,} = v26);
        v37 <<= 2147483648;
        [-1016884868,-35234,-65536,255,45698];
        [127,268435441,10,268435441,9007199254740990,-376333628];
        const v45 = [4,7,-403020323,127,1024,-3,-37669];
        v45[3] = v45;
    }
    static n(a47, a48, a49) {
        const v50 = super[this];
        const v52 = new Date();
        ([v52]).toLocaleString();
        try {
            super.preventExtensions(v33, v33, a49, v36, v50);
        } catch(e56) {
        }
        return v26;
    }
}
C40.prototype;
let v58 = new C40();
const v59 = v58?.constructor;
try { new v59(); } catch (e) {}
function f63(a64, a65, a66, a67) {
    "d" ^ a64;
    a66 / a66;
    a67 >= a67;
    function f71() {
        const o75 = {
            valueOf(a73, a74) {
                return f71;
            },
        };
        try {
            f71();
        } catch(e77) {
        }
    }
    f71.e = f71;
    f71();
}
for (let v79 = 0; v79 < 5; v79++) {
    f63(522675525n, 0.5375507050396837, 0.5375507050396837, v79);
}
v58 = v33;
try {
    const v81 = [null,512n,WeakSet,v13,v29];
    v12.fuck(512n, v81, v81);
} catch(e83) {
}
f63();
