[-9223372036854775807,14825,-2147483648,-2147483648];
[1,2147483647,-256,8758,9223372036854775807,1073741824,1073741823,-9223372036854775807,2,0];
[7,49483665,57573,1324996099,-15,6,0,6,-9223372036854775807];
const v3 = [62.04619739279701,52794.19861657475,-2.0];
function F4() {
    if (!new.target) { throw 'must be called with new'; }
}
new v3();
const v7 = [23795,8,259058917,-256,1,-36806,4096,-9,-1,-18943];
new Date(-2, v7, v7, v7, -2);
([0.3369603860708681,0.0,795.7817550281818,-1000000000.0,-1000.0,-1000000000000.0,-923178.0978949142,1.5435508650587617e+308,-1.7976931348623157e+308])[6];
[529069.165866429,4.0,3.0,-1.7976931348623157e+308,10.21866400382953,802.5135620152432];
const v15 = [-268435456,2,9007199254740992,0];
const v16 = [2147483649,1024,-128,-256];
v16["join"](...v15, ...v16);
class C19 {
}
const v20 = new C19();
function f21(a22, a23) {
    const v24 = a23?.propertyIsEnumerable;
    try { v24(); } catch (e) {}
    const v26 = [];
    let v27;
    try { v27 = v26.with(v26, v26); } catch (e) {}
    const v29 = new Float64Array(v26, v27);
    const v30 = new Float64Array(v29, a22, v27);
    v30.values();
    return v30;
}
f21(Uint16Array, v20);
f21(v20, v20);
function f37() {
    return -16;
}
4294967296n - 4294967296n;
function f40() {
    const o51 = {
        "e": -1781241988,
        8: -1781241988,
        "c": -1781241988,
        ..."g",
        ..."g",
        [1](a45, a46) {
            Object.defineProperty("n", "d", { writable: true, value: "n" });
            let v50;
            try { v50 = ("construct").concat(f40, Uint8ClampedArray, this); } catch (e) {}
            v50["n"] = Uint8ClampedArray;
        },
    };
    return o51;
}
const v54 = new Int32Array();
function f55(a56, a57, a58, a59) {
    const o60 = {
    };
    return o60;
}
f55(v54, 6406, v16);
function f63(a64, a65, a66, a67) {
    -3.942521664036782e+307 * -3.942521664036782e+307;
    const v70 = [];
    new BigInt64Array();
    Date.prototype;
    class C76 {
    }
    class C77 {
        constructor(a79, a80, a81, a82) {
            try { a81(...a79, "e", a82, a82, ...C76); } catch (e) {}
            return arguments;
        }
    }
    new C77();
    try { v70.toString(); } catch (e) {}
    [-3.942521664036782e+307,-3.942521664036782e+307,v70];
    try {
        const o88 = {
        };
    } catch(e89) {
    }
    return -3.942521664036782e+307;
}
for (let v90 = 0; v90 < 10; v90++) {
    const v91 = f63();
    v91 << v91;
}
%OptimizeFunctionOnNextCall(f63);
f63(f63, f63, f63, f63);
