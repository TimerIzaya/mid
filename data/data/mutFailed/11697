const v0 = [8,-1590992571,-2,1057311003,257,-2147483649,36821];
const v1 = [-2,127,-14,2147483649,3,-8,53121,-2,7,1073741825];
[268435456,-982,512,268435440,4,-19779,9223372036854775807];
v1 + 158;
new BigUint64Array(158);
Map.prototype;
const t5 = 158;
const v11 = new t5();
const v12 = v11.delete(v11);
v12 || v12;
function F14(a16, a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = Date;
}
const v20 = new F14();
const t15 = v20.c;
const v22 = new t15(v12, Map);
try { v22.setTime(v1); } catch (e) {}
Float64Array.length = Float64Array;
new Float64Array(129);
new Uint16Array(7);
function F34(a36, a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    const v39 = this.constructor;
    try { v39.call(-45095n); } catch (e) {}
    try { new v39("asinh", 9007199254740991n); } catch (e) {}
}
F34.arguments = F34;
const t28 = 7;
t28.BYTES_PER_ELEMENT = Uint32Array;
const t30 = 129;
const v45 = new t30(3);
class C46 {
    constructor(a48, a49, a50, a51) {
        for (let v52 = 0; v52 < 5; v52++) {
            v52 & v52;
            v45[v52] = a51;
        }
    }
}
C46.e = C46;
const v54 = new C46();
const v55 = v54?.constructor;
try { new v55(v0, v0, Date, C46); } catch (e) {}
