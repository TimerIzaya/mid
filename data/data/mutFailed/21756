function f0() {
    const o17 = {
        "a": -1000000.0,
        toString(a5) {
            this[a5] += this;
            let v6;
            try { v6 = this.m("m", a5); } catch (e) {}
            const o16 = {
                valueOf() {
                    const o8 = {
                    };
                    try {
                        o8.g = this;
                    } catch(e9) {
                    }
                    try {
                        const o10 = {
                        };
                        o10.byteLength = v6;
                        o10.f = v6;
                    } catch(e11) {
                    }
                    try {
                        const o12 = {
                        };
                        const t25 = "m";
                        t25.g = v6;
                        o12.f = v6;
                        o12.b = this;
                    } catch(e13) {
                    }
                    try {
                        const o14 = {
                        };
                        o8.g = v6;
                        o14.g = v6;
                        o14.a = this;
                    } catch(e15) {
                    }
                    return v6;
                },
            };
            return -1000000.0;
        },
    };
    return o17;
}
f0();
f0();
f0();
new BigInt64Array(0);
new Promise(3617);
new BigUint64Array(4096);
const v36 = new Uint8Array(5);
v36.includes(2011, BigInt64Array);
