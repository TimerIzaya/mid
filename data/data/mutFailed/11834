new WeakSet();
new Int8Array(268435456);
let v7 = "d";
const v9 = [-1.5424212036356715e+308];
v9[536870887n] = v9;
(536870887n).constructor;
const v15 = Math.exp(-1697 | -1982743944);
this.Realm;
Symbol.toPrimitive;
("Vre").constructor.fromCodePoint(undefined);
let v24 = 2917;
new Int32Array(v24);
const v28 = new WeakMap();
function f29() {
    return v28;
}
function f31() {
    return v9;
}
v7 /= v7;
try {
    f31();
} catch(e33) {
}
function f35() {
    let v36 = -268435456;
    const v37 = v36 % v36;
    v36--;
    const v40 = [0.3083488057663979,0.3083488057663979,0.3083488057663979,0.3083488057663979];
    for (let v41 = 0; v41 < 25; v41++) {
    }
    const v43 = new Int16Array(Int16Array, Int16Array, Int16Array);
    const v45 = new Int32Array();
    v45 / v43;
    const v47 = [601759695];
    function f48(a49, a50, a51, a52) {
        a52 ^ a52;
        try { v40["find"](..."find", a52, ...v47, ...v40); } catch (e) {}
    }
    return v37;
}
[2.0251033904811155,-1.682918283497635,518.8283096411355,2.0,-1.0,0.0072743531764229985,0.9800326383724544,1.0,-1.7976931348623157e+308];
[-0.0,-9.923190480291726,819.9483032291871,1.136630852362785,2.2250738585072014e-308,-1.8000811614224906e+306,1.7395148765594648,9.481796212799214,1.7976931348623157e+308,0.2695067030604118];
[1000000.0,-1e-15,-1.7976931348623157e+308,-1000000.0,871.2460890123277,694266.8714927414,Infinity,1.0,-2.7344708052490923];
function F63() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -4;
    } catch(e66) {
    }
    try {
        this.b = -4;
    } catch(e67) {
    }
}
const v68 = new F63();
const v69 = new F63();
const v70 = new F63();
const v74 = new Int8Array(582);
let v75 = 1073741824;
class C77 {
    constructor(a79) {
        [a79,v75] = "boolean";
    }
}
const o90 = {
    256: v15,
    "execution": "Vre",
    m(a81) {
    },
    ["268435441"](a83, a84) {
    },
    ...582,
    2: v74,
    "type": "p",
    set h(a86) {
    },
    6: v24,
    "maxByteLength": 582,
    "h": "268435441",
    next() {
        v24--;
    },
    [f29]() {
    },
    "d": WeakMap,
    "g": C77,
    "f": -38668,
    "b": 582,
    268435439: C77,
};
const v93 = new BigInt64Array(2001);
const v97 = [[v68,65535,[F63,Uint8Array,582],v93,v74],v69,Int8Array];
const v98 = `
    v70.d;
    v97.__proto__;
`;
const v102 = eval(v98);
try { v102.isExtensible(v74, Uint8Array, Int8Array); } catch (e) {}
