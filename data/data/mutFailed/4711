class C3 {
    static n(a5) {
        super.e = this;
        try {
            a5.b = -1000.0;
        } catch(e6) {
        }
        return -1000.0;
    }
    #f = "K6";
    static o(a8, a9) {
        try {
            a9.#f = a8;
        } catch(e10) {
        }
        return -2.2250738585072014e-308;
    }
}
C3.a = C3;
const v11 = new C3();
const v12 = v11?.constructor;
try { new v12(); } catch (e) {}
const v14 = new C3();
const v15 = new C3();
const v16 = v15?.constructor;
let v17;
try { v17 = new v16(); } catch (e) {}
function f18(a19, a20) {
    const o24 = {
        "c": a20,
        "f": v15,
        ...v15,
        "e": a19,
        "b": a19,
        "PI": v15,
        get a() {
            try {
                super.deref(v14, v15);
            } catch(e23) {
            }
            return v14;
        },
        "d": a20,
        "a": -1000.0,
    };
    return o24;
}
f18(v14, v14);
const v26 = f18("K6", C3);
f18(v26, v26);
const v29 = Array?.asyncIterator;
try { new v29(C3); } catch (e) {}
const v32 = new Array(229);
1000000000000.0 >>> 1000000000000.0;
205 === 205;
BigInt64Array.name = BigInt64Array;
const v40 = new BigInt64Array(205);
try { Uint16Array.of(); } catch (e) {}
let v44;
try { v44 = Uint16Array(205, BigInt64Array, 256); } catch (e) {}
new Uint16Array(256, v17, v44);
const v46 = v40[205];
0 >> 0;
try {
    v46.toString = v46;
} catch(e49) {
    e49.message = e49;
}
const v51 = -9007199254740990 - -9007199254740990;
v51 * v51;
const v54 = Float64Array.BYTES_PER_ELEMENT;
v54 + v54;
const v56 = new Float64Array(-9007199254740990);
function F57(a59, a60, a61, a62) {
    if (!new.target) { throw 'must be called with new'; }
    ~a62;
    let v64 = a60 >> a60;
    v64++;
    a62 | a62;
    try {
        v56.b = a60;
    } catch(e67) {
    }
    try {
        this.unicode = a59;
    } catch(e68) {
    }
}
F57.length = F57;
const v69 = F57?.constructor;
try { new v69(v26); } catch (e) {}
let v71;
try { v71 = new v69(v56); } catch (e) {}
v71.length = v71;
const v72 = new F57(-9007199254740990, 205, -9007199254740990, 205);
const v73 = new F57(-9007199254740990, 256, -9007199254740990, 256);
try { v73.hasOwnProperty(v32); } catch (e) {}
new F57(-9007199254740990, 205, 256, -9007199254740990);
const v77 = ([-Infinity,-5.577012134541006])?.filter;
v77.e = v77;
try { new v77(Uint16Array); } catch (e) {}
const v79 = [-1000000000.0,5.0,872297.1015869486,-1e-15,0.2087529151028652];
[-2.220446049250313e-16,-171953.22769972356,2.220446049250313e-16,Infinity,-3.0,-4.368087235127776];
const v81 = /(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/u;
const v82 = [Infinity];
const v84 = ([2.2250738585072014e-308,1.949684848262672,4.0]).push(v81);
const v86 = ([342.12300421344116,0.3998304334347528,-1.5569468467414895e+308,929110.7069466491,0.8403359879371063,928.8415619105033,5.0]).toStringTag;
try { v82.every(v86, v73); } catch (e) {}
v72.h >>>= v84;
const v88 = v79.length;
v88 !== v88;
