class C3 {
    constructor(a5, a6) {
        const t2 = "symbol";
        t2[-0.0] = a5;
        try { ("symbol").substring(..."symbol", ...-0.0, this, ..."symbol", a6, ..."symbol"); } catch (e) {}
    }
    static set g(a9) {
        const v10 = C3?.d;
        const v11 = [a9,C3,v10];
        [v11,v11,v11,v10,a9];
        [v10,v10,"symbol",this,a9];
    }
    static #o(a15) {
        this["symbol"] *= a15;
        const v16 = -0.0 != this;
        const v18 = super[v16 ? -0.0 : this];
        try { new v18(v16, v16, v18); } catch (e) {}
        return v16;
    }
    g = "symbol";
    static #d;
}
new C3(-0.0, 276175.6597058831);
const v21 = new C3(C3, -0.0);
new C3("symbol", v21);
class C29 {
    65535;
    static set d(a31) {
        try {
            delete v21["symbol"];
        } catch(e33) {
            this ** e33;
        }
    }
    valueOf(a36, a37, a38) {
        return "EqtJP";
    }
}
let v42 = new C29();
const v43 = new C29();
new C29();
class C45 {
}
const v46 = new C45();
const t44 = v46.constructor;
let v48 = new t44();
const v49 = /[\11]/gm;
function f50(a51, a52, a53) {
    v42 = v43;
    const o57 = {
        "execution": "sync",
        "type": "minor",
    };
    gc(o57);
    return v43;
}
f50(-9007199254740990n, v42, v42);
function f60() {
    return v48 >>>= f60 != v49;
}
%PrepareFunctionForOptimization(f60);
f60();
%OptimizeFunctionOnNextCall(f60);
f60();
