class C3 {
    constructor(a5, a6) {
        a5 & "KCmm";
        try { ("2147483647").trimRight(); } catch (e) {}
        let v10 = -51483;
        const v13 = -(-2123418846);
        v13 && v13;
        let v16 = v10++ || 0.792004814928642;
        +0.792004814928642;
        Math.min(this);
        v16--;
        const t8 = "2147483647";
        t8["o"] -= "2147483647";
        ("KCmm").__proto__;
    }
    #o(a22, a23) {
        let v24;
        try { v24 = ("2147483647").charAt(a23); } catch (e) {}
        Object.defineProperty(a23, a23, { writable: true, configurable: true, value: v24 });
        return a22;
    }
    g;
}
new C3("o", "o");
const v26 = new C3("KCmm", "KCmm");
new C3("o", "2147483647");
function F28(a30, a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a31;
    } catch(e33) {
    }
    try {
        const o34 = {
        };
        const v36 = new Proxy(this, o34);
        try {
            new C3(v36, [o34,this,v36,"o","KCmm"]);
        } catch(e39) {
        }
        this.h = a32;
    } catch(e40) {
    }
    try {
        this.c = v26;
    } catch(e41) {
    }
}
Reflect.construct(F28, [C3 / "o","2147483647",F28], F28);
new F28("2147483647", "KCmm", "o");
new F28(F28, "KCmm", "KCmm");
new F28("o", "o", "2147483647");
("D")[0].lastIndexOf("D");
