class C3 {
    static b;
    valueOf(a5) {
        Math.fround(a5);
        const v10 = a5 << 1190967263;
        const v11 = +v10;
        Math.acosh(248766284);
        return v10 ^ v11;
    }
    static d = 3.0;
    static h = 65535;
}
const v14 = new C3();
const v15 = v14?.__defineSetter__;
let v16;
try { v16 = new v15(C3, Infinity); } catch (e) {}
let v17 = [23795,8,259058917,-256,1,-36806,4096,-9,-1,-18943];
v17 &= v17;
class C18 {
    p(a20, a21, a22, a23) {
        let v24 = [23795,8,259058917,-256,1,-36806,4096,-9,-1,-18943];
        v24 &= v24;
        new Date(-2, v24, v24, v24, -2);
    }
}
const v28 = [C18];
new C3();
const t27 = 65535;
new t27();
class C31 {
    static #o(a33, a34, a35) {
        const v37 = Symbol.asyncIterator;
        a35[v37] = a33;
        new Map();
        const v43 = new Int8Array(8);
        Reflect.construct(Uint16Array, [v43]);
        for (let v47 = 0; v47 < 32; v47++) {
            this["p" + "p"] = v47;
        }
        return v37;
    }
    #g = 65535;
}
v16.prototype;
new C31();
const v52 = new C31();
try { v52.constructor(); } catch (e) {}
const v54 = new C31();
try {
    v28.length = 10;
} catch(e56) {
}
const v57 = v54?.constructor;
try { new v57(); } catch (e) {}
function f62() {
}
try { f62(); } catch (e) {}
%OptimizeFunctionOnNextCall(f62);
f62();
