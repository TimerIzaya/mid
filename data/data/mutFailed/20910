const v3 = new Date(Date);
v3.setDate();
for (const v6 in [1000.0,-1000.0,0.4309916776051478,1000000.0,-1.0,-560.6262021777798,NaN,3.0]) {
    Math.tan(-23394);
}
new Uint16Array(256);
"p" + 256;
for (let v13 = 0; v13 < 5; v13++) {
}
function f14(a15, a16, a17, a18) {
    try { a15.findIndex(f14, f14); } catch (e) {}
    a16.toLocaleString();
    return arguments;
}
const v24 = new Float32Array(2067);
function f25() {
}
Int32Array();
const v28 = [1073741824,1073741823,1376142744,1073741825];
function f29(a30, a31, a32, a33) {
    function f35() {
        const o42 = {
            "c": a33,
            valueOf(a40, a41) {
                return this;
            },
        };
        return "Vre";
    }
    f35();
    try { v28["find"](..."find"); } catch (e) {}
}
const v48 = new Uint8Array(4091);
class C49 {
    static [4091];
    static g;
    static 65536;
    constructor(a51, a52, a53) {
        super.d = v24[6]?.[12];
        1940694780n == [10624,733951208,4294967296,5138,14];
        const v61 = new Uint16Array(512);
        new Float32Array(v61);
        super.c = a51;
    }
    h;
    static b;
    e = v24;
    [256] = Float32Array;
    f = v48;
}
new C49(256, 256, 2067);
new C49(4091, 4091, 2067);
new C49(4091, 256, 2067);
function F70(a72, a73, a74, a75) {
    if (!new.target) { throw 'must be called with new'; }
}
const v76 = new F70(F70, F70, F70, F70);
%PrepareFunctionForOptimization(v76);
