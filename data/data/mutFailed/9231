class C3 {
    constructor(a5, a6) {
        a5[1073741823] += a5;
        (delete a6?.[a5])?.[268435439];
        try {
            ("bigint").repeat(1449285593);
        } catch(e11) {
        }
    }
    8 = 845487.0787868425;
    static #a = 2.886232157968667;
    3 = "bigint";
    #b = 845487.0787868425;
}
const v12 = new C3(C3, 845487.0787868425);
const v13 = new C3(2.886232157968667, v12);
const v14 = new C3(2.886232157968667, 845487.0787868425);
let v17 = 8320;
function f21(a22, a23, a24) {
    Promise.prototype >>>= a24;
    const v26 = Promise.__proto__;
    v17 >>= 1073741824;
    const o36 = {
        valueOf(a31, a32, a33) {
            try { a33(this, a24, a23); } catch (e) {}
            function f35() {
                return a23;
            }
            return a31;
        },
        "g": v26,
        __proto__: v13,
        "a": v14,
        "e": v26,
        1402: v17,
        "h": a22,
        "a": a23,
        [C3]: v12,
        "f": -4.0,
        ...C3,
        ["bigint"]: a24,
        /*
        __proto__: v13,
        */
    };
    return o36;
}
const v37 = f21(v13, v12, -4.0);
f21(v37, f21, 2.886232157968667);
f21(v13, v37, 3.0);
for (let v40 = 0; v40 < 25; v40++) {
    1073741823 << 1073741823;
    Math.round(v40);
    Math.log(v40);
    +1073741823;
    const v48 = "p" + v40;
    v48.match(v48);
}
try {
    Int8Array(Int8Array, Int8Array, Int8Array);
} catch(e52) {
    e52.stack;
}
