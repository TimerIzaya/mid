function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 536870888;
    } catch(e3) {
    }
    const v5 = new F0(BigUint64Array, F0);
    class C6 {
        static [v5];
    }
    try {
        this.b = 536870888;
    } catch(e7) {
    }
    try {
        this.f = 536870888;
        try {
            false.fuck();
        } catch(e10) {
        }
    } catch(e11) {
    }
}
class C12 {
    static #n(a14) {
    }
}
new C12();
const v16 = new F0();
const v17 = new F0();
const v18 = new F0();
class C19 extends F0 {
    #a = F0;
    static n(a21, a22) {
        function F23(a25, a26, a27) {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v30 = new BigInt64Array(11);
        v30.lastIndexOf();
        e = v16;
        super.b;
        return v16;
    }
    4054353957 = v16;
    static [F0];
    [v17] = v18;
    static #d;
}
new C19();
new C19();
new C19();
class C39 {
}
const v40 = new C39();
ReferenceError(v40);
ReferenceError();
