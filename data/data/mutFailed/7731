class C3 {
    static {
        try { new this(this, this, 8, this, "b"); } catch (e) {}
        try {
            super.getUint16();
        } catch(e7) {
            e7.NEGATIVE_INFINITY;
        }
    }
    constructor(a10, a11) {
        a10 & a10;
        a11 === a11;
        try { a11(a10, 8, a10, a10); } catch (e) {}
    }
}
C3.length = C3;
const v18 = new C3(0.5757791702824356, 8);
this[256] = BigUint64Array;
const v22 = new C3("b", v18);
new C3(8, v22);
class C24 extends C3 {
    static m(a26, a27) {
        try {
            super.m(0.5757791702824356, v22, v22);
        } catch(e29) {
        }
        return this;
    }
    [v18] = 0.5757791702824356;
    static h = 8;
    255;
    598 = C3;
}
const t33 = 8;
new t33();
const v31 = new C24(8, C3);
v31[255] = v31;
const v32 = new C24();
v32[255] = v32;
const v34 = [,];
try { v34.findLast(8); } catch (e) {}
([,v34]).fill()[1073741824];
