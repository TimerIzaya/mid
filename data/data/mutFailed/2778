new Uint8ClampedArray(1925);
const o8 = {
    "execution": "sync",
    "type": "minor",
};
const v9 = gc(o8);
let v10 = new Uint16Array(976);
new Uint8Array(2782);
const v14 = [1e-15,-3.0,6.955227367884131,-713.316898795392,789067.4769803251,-1000000000000.0,0.7949082175429285];
[-6.24355517843219e+307];
[-273.0157744565771];
class C17 extends Uint16Array {
    #b;
    static set b(a19) {
        super.d = 1925;
        this[65536];
        try {
            new Uint8ClampedArray(1453498651);
        } catch(e23) {
        }
    }
    4294967295;
    #a;
    #g;
    10;
}
v14[v9] ^= 976;
C17.b?.h;
C17.b;
let v28 = -65535;
Math.exp(o8);
const v30 = ++v10;
const v31 = v28++;
v30 | (v10 + v28);
v31 << v10;
new C17();
const o38 = {
    "maxByteLength": 129,
};
const v40 = new ArrayBuffer(8, o38);
new Float32Array(v40);
new C17();
new C17();
const v45 = [155533.8602852358,2.0];
function F47() {
    if (!new.target) { throw 'must be called with new'; }
    for (const v52 of Array(19793)) {
        v45[658291203] = null;
        Math.cbrt(19793);
        Math.exp(0.4890055133608564 || 0.4890055133608564);
    }
    const v58 = [19793,19793,19793,19793];
    [v58,v58];
    [Array,Array,Array,Array] >= Uint16Array;
}
new F47();
new F47();
