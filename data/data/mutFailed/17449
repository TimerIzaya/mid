let v1 = -1033766182;
class C4 {
    n(a6) {
        v1 /= 128;
        const o9 = {
            "maxByteLength": 4096,
        };
        const v11 = new ArrayBuffer(4096, o9);
        new Float32Array(v11);
        return 128;
    }
    #d;
    #c;
}
new C4();
const v15 = new C4();
function f16(a17, a18) {
    function f20(a21) {
        try { a17(true); } catch (e) {}
    }
    this.onmessage = f20;
    a17?.e;
    a18 >>> v1;
}
const v27 = [C4,"function"];
const o28 = {
    "arguments": Worker,
    "type": "function",
};
new Worker(f16, o28);
new C4();
class C37 {
    static p(a39, a40) {
        let v43 = -2 / -2;
        Math.cbrt(o28);
        let v45 = v43++;
        v45 - -2;
        Math.abs(v45);
        v45--;
        return a40;
    }
    0;
    static 521 = -12;
    f;
    static #c = 2;
}
function F49(a51, a52, a53) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v1;
    } catch(e54) {
    }
}
const v55 = new F49(v15, -4096, 13);
new F49(v27, 128, 128);
new F49(f16, v1, 9223372036854775807);
new v55();
new C37();
new C37();
const o64 = {
    "execution": "async",
    "type": "major",
};
gc(o64);
%VerifyType(Infinity());
try {
    function f68(a69, a70, a71) {
        for (let i = 0; i < 5; i++) {
            /k/gdsy;
        }
        f68();
        return f68;
    }
    f68();
} catch(e75) {
}
