gc(-6290);
new BigUint64Array(-13);
class C8 {
    f = "string";
    [-6290] = -6290;
    join(a10) {
        ("-1331879647").__proto__;
        return -6290;
    }
    5;
    ["string"];
    #f;
    static h;
}
const v15 = new C8();
const v16 = new C8();
const v17 = new C8();
class C18 {
    constructor(a20, a21) {
        let v22;
        try { v22 = a21(a20, C8, a20); } catch (e) {}
        function F24(a26, a27, a28, a29) {
            if (!new.target) { throw 'must be called with new'; }
            a26.lastIndexOf(a26, a27);
        }
        const o31 = {
        };
        -Uint8ClampedArray;
        try { v22(v17, this, v15); } catch (e) {}
        [706922913,-65537,-9007199254740991];
        [-818413052,268435456,10,-12,-9223372036854775807,-65536,-22975,4294967296,1844249248];
        [588260761,-11,4294967295,-9007199254740990,10000,9,-7];
    }
    #d;
    static ["-1331879647"];
    [v17];
    [-6290];
}
const v37 = new C18(v17, C8);
new C18(v16, v37);
new C18(v16, -6290, -13, "-1331879647");
try { Worker(); } catch (e) {}
("string")[0];
const v47 = new Date(Uint32Array);
v47.setUTCDate();
-Infinity;
-1 in [-1];
new Int8Array(520);
const v58 = new Uint32Array(3);
for (let i60 = 0; i60 < 9; i60++) {
    v58[i60] = C8;
}
