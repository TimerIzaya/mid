class C6 {
    #p(a8, a9) {
        const o12 = {
            "flags": 3,
        };
        const v14 = new ArrayBuffer(2623, o12);
        const v16 = new Uint32Array(v14);
        const o17 = {
        };
        new Proxy(v14, o17);
        const v20 = [2623,v14,-47848,ArrayBuffer];
        [641631848,o17,v20,a9,ArrayBuffer];
        [-5,3,v20,5];
        return v16;
    }
}
C6.n = C6;
const v23 = new C6();
const v24 = new C6(v23);
const v25 = new C6();
let v30;
try { v30 = C6["n"](3, v24); } catch (e) {}
let v32 = undefined;
const o33 = {
};
function f34() {
    function f35(a36) {
        for (let i39 = (() => {
                0 >>> 0;
                return 0;
            })();
            (() => {
                const v41 = i39 < 9;
                !v41;
                return v41;
            })();
            i39++) {
        }
        return 25966;
    }
    return f35;
}
function f46(a47) {
    const v48 = [-54486,11,9007199254740991,268435456,536870912,1073741823,255,1073741824,-2147483648,-3];
    function F49(a51, a52) {
        if (!new.target) { throw 'must be called with new'; }
        const v53 = this.constructor;
        try { new v53(v48, this); } catch (e) {}
    }
}
Object.defineProperty(o33, Symbol.toPrimitive, { writable: true, get: f34, set: f46 });
v32 = o33;
o33.propertyIsEnumerable;
const v60 = new Uint8Array();
function f61(a62, a63, a64, a65) {
    const v66 = a64++;
    a64 % a64;
    for (let i69 = 0; i69 < 0; i69++) {
        v24.__proto__;
    }
    const o79 = {
        "b": a62,
        ...v60,
        n(a77, a78) {
        },
        ...v32,
        "h": v60,
        ...v23,
        ...v32,
        "a": f61,
    };
    return v66;
}
for (let v80 = 0; v80 < 625; v80++) {
    const v81 = f61(Uint8Array, 2, v80);
    try { v81(v32); } catch (e) {}
}
new C6();
function F84(a86, a87, a88) {
    if (!new.target) { throw 'must be called with new'; }
    this[Symbol.toPrimitive] = f61;
    a87[Symbol.toPrimitive] = f34;
    try {
        this.c = a87;
    } catch(e93) {
    }
    let v94 = 2 & v32;
    v94 = a88;
    Math.exp(f61);
    -(0 | a88);
    f61 / 0;
    ~a88;
}
const v103 = new F84(-327651059, v24, v25);
const v104 = new F84(-47848, v103, v103);
new F84(641631848, v30, v104);
const v106 = [-876027929,9,536870887,-1257640956];
function f107() {
    return v106;
}
function f108(a109) {
    return v106;
}
Object.defineProperty(v106, "f", { configurable: true, get: f107, set: f108 });
Object.defineProperty(v106, "f", { writable: true, value: v106 });
