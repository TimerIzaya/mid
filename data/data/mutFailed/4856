const v0 = [];
const v4 = [v0,v0,v0];
const v5 = [v0,-268435456,-1096761041,v4];
const v6 = [v0,-1096761041,v5,v0];
class C7 {
    constructor(a9, a10, a11, a12) {
        for (let v13 = 0; v13 < 3; v13++) {
        }
    }
    static h = v5;
    static e = 42068;
    static #c = -268435456;
}
const v17 = new C7(42068, v4, -268435456, v0);
new C7(v17, v5, -1096761041, v4);
new C7(-1096761041, v6, -268435456, v6);
const v22 = new Uint8ClampedArray(15);
new Int32Array();
const v27 = new Int32Array(257);
function f28(a29, a30) {
    v27.b = 4.0;
    return v22;
}
v27[Symbol.toPrimitive] = f28;
function F34(a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a37;
    } catch(e38) {
    }
}
const v39 = new F34(15, 257);
new F34(257, 512);
const v41 = new F34(15, 512);
for (const v42 in v41) {
    const v43 = /[MrN]/gudi;
    const v44 = /(x)(x)(x)\2/gvdisy;
    try {
    const t0 = 15;
    t0(v42, v43, v44, v44, v39);
    } catch (e) {}
    /YzF[\11]/gms;
    /(ab)\1[\11](?:a*)+(J\bI)+/diy;
}
v27[v27];
