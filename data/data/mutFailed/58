new BigUint64Array(BigUint64Array);
new BigInt64Array(7);
const t2 = 7;
const v8 = new t2(1);
new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
const v16 = new Float64Array(3341);
new v16();
const o19 = {
    __proto__: v8,
    "g": Float64Array,
    ...v16,
    2147483647: Uint32Array,
};
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 40687;
    } catch(e3) {
    }
    try {
        this.c = 40687;
    } catch(e4) {
    }
    try {
        this.a = 40687;
    } catch(e5) {
    }
}
new F0();
new F0();
const v8 = new F0();
const v17 = [1073741824,1756196835,536870889,256,6,58443];
const v18 = [2,257,-10,2102434943,-1816686577,-15];
const v19 = [-938173549,-7,-9223372036854775807,8,-536870912,1073741825,5,257,36585,-56792];
const v20 = [2.220446049250313e-16,4.817717597327409,1e-15,-1000000000000.0,-1000000.0,2.0,-3.382353865622333e+306,134.7295617651339];
const v21 = [NaN,-5.161337834188833e+307,NaN,-984.7986985006023];
const v22 = [-1000000000.0,226.41468646930184,145.7749307686554,945.9985168168885,NaN,-2.0];
class C23 {
    constructor(a25, a26, a27) {
        try { a27.findLastIndex(v22); } catch (e) {}
        const v29 = v21.constructor;
        class C30 extends v8 {
            [a25] = v29;
            b = v21;
            h = v17;
        }
    }
    a;
    static [v22] = v19;
    h = C23;
    static 724884816 = v22;
    #a = v20;
}
const v31 = new C23(v17, v20, v22, v20, v18);
const v32 = new C23(v22, v18, v19);
v32.a;
new C23(v32, v20, v17);
v31.a;
const v36 = [10,1073741823,-2,-16,10000,0,-9007199254740992];
try { v36.groupToMap(v20); } catch (e) {}
[21416,-1145171309,658365418,-9007199254740991];
const v39 = v36.some;
let v40;
try { v40 = new v39(); } catch (e) {}
function f42() {
    const o45 = {
        get b() {
            return -8.233575780020734;
        },
    };
    o45.undefined = -8.233575780020734;
    Symbol.EPSILON = Symbol;
    o45[Symbol.EPSILON] = f42;
    return o45;
}
const t62 = v40();
t62[Symbol.toPrimitive] = f42;
