function F2(a4, a5, a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
}
new F2(F2, F2, F2, F2);
const v10 = new Float64Array(Float64Array, Float64Array, Float64Array);
v10[138.3846677150391] = 1000000000.0;
new Uint16Array(2077);
function f15(a16, a17) {
    const o20 = {
        set b(a19) {
        },
    };
    function f23() {
        let v24 = 852.2904873570058;
        const o29 = {
            m(a26, a27) {
                v24++;
                return 280;
            },
        };
        return Int32Array;
    }
    function f30() {
        return f23;
    }
    return f30;
    return o20;
}
const v31 = f15();
for (const v32 in v31) {
    Object.defineProperty(v31, v32, { set: f15 });
}
new Float32Array(64);
try {
    v31.f = 64;
    function f37(a38, a39) {
        a39.constructor(a39);
        return f37;
    }
    function F41() {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v44 = new F41();
    const v45 = new F41();
    const v48 = Symbol.toPrimitive;
    const o53 = {
        [v48]() {
            try {
                ("8").charCodeAt(1164355742);
            } catch(e52) {
            }
            return "8";
        },
    };
    class C56 extends F41 {
        b = "number";
        set g(a58) {
            let v57 = this;
            ({"c":a58,"d":v57,} = v45);
        }
        static {
            const v60 = super[this];
            ("function").substring(v60, this, v60, "function", "8", this);
            super.c;
            try {
                v44.f = v60;
            } catch(e63) {
            }
        }
    }
} catch(e64) {
}
const o67 = {
    "execution": "sync",
};
Int32Array(o67);
const v69 = new eval(64);
class C72 {
}
const o73 = {
    "c": o67,
    __proto__: C72,
};
o73.c;
new Uint8ClampedArray(1083, F2, v69, v31);
new BigUint64Array(1711);
new BigInt64Array(2);
function f82() {
    try {
        const v88 = Array(19793);
        for (const v89 of v88) {
        }
        const v90 = [v88,v88,v88,v88,v88];
        [[v90,v90,v90]];
    } catch(e94) {
        [e94,"Vre"];
    }
    const o99 = {
        "e": -4294967295,
        ..."Vre",
        valueOf(a97, a98) {
        },
        ..."Vre",
        "c": 1711,
        5: -4294967295,
        6: -268435456,
    };
}
function F100(a102, a103, a104, a105) {
    if (!new.target) { throw 'must be called with new'; }
}
const v106 = new F100(F100, F100, F100, F100);
for (let v107 = 0; v107 < 25; v107++) {
    v106["p" + v107] = v107;
}
