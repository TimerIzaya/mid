const v0 = /([\1111])/gmsy;
const v1 = /(?:ab)?/gvdimy;
const v2 = /OF/gdy;
const v3 = [v0,v2,v0,v0,v2];
function f4(a5, a6) {
    try { a5(v3, a5, a5); } catch (e) {}
    const o11 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o11);
    return v3;
}
v3.toString = f4;
const v13 = [v0,v3];
Object.defineProperty(v13, Symbol.toPrimitive, { value: f4 });
let v16 = [v13];
function f17(a18, a19, a20, a21) {
    const v23 = Symbol.toPrimitive;
    a18[v23] = Symbol;
    function f24(a25) {
        v23[3545977965];
        function f27(a28, a29) {
            const o30 = {
                ...a28,
            };
            return f27;
        }
        f27();
        return a25;
    }
    a19[Symbol.toPrimitive] = f24;
    function f34() {
        return 2664;
        return v3;
    }
    a20.toString = f34;
    const o42 = {
        "h": v0,
        [v1]: a19,
        [a18]: v13,
        2: v13,
        set d(a37) {
            v1[4185501286] = v3;
            v16 = a20;
            a37 << v13;
            try {
                this.fuck(8n, a18);
            } catch(e41) {
            }
        },
    };
    return o42;
}
f17(v3, v16, v3, v16);
f17(v13, v16, v13, v16);
const v45 = f17(v16, v3, v16, v13);
class C46 {
    static #h;
    #o(a48, a49, a50, a51) {
        try {
            a48.#h = this;
        } catch(e52) {
        }
        return v45;
    }
    get f() {
        new Int16Array(1024);
        new Int8Array(7);
        new BigUint64Array(128);
        return this;
    }
}
new C46();
new C46();
new C46();
new Int8Array();
const v71 = [-2.220446049250313e-16,-1.2960362069804638,1000000.0];
v71[Symbol.species] = f17;
v71[Symbol.species] = 8.580387257773513;
for (let v78 = 0; v78 < 5; v78++) {
    /c(?:ab)|cde/vdmy.exec();
}
0 < 9;
