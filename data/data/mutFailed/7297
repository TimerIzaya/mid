[0,56172,-28066,-828053208,127,-65536];
const v4 = [10,3,31452,-128,19758,121199508];
[90638754,9,-864558241,18723,-1,-628388327,65536];
const v6 = [2.220446049250313e-16,-2.0,9.472378156545009,0.0,1e-15,0.3751557433004281,0.0,-474740.46049005154];
const o12 = {
    set h(a8) {
    },
    __proto__: v6,
    o(a10, a11) {
        return a11;
    },
};
o12.c = v4;
class C15 extends o12 {
}
const v16 = [-504863.1885363821,-248378.80818527355,-147.11467188198264,-1.7039705769992093e+308];
for (let v17 = 0; v17 < 5; v17++) {
    v16 | v17;
}
function f20() {
}
function F21(a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    const v26 = this.constructor;
    try { new v26(); } catch (e) {}
    this.e = a25;
}
function f28() {
    class C29 {
    }
    let v30;
    try { v30 = C29(); } catch (e) {}
    const v31 = [F21];
    for (let v32 = 0; v32 < 5; v32++) {
        new F21(undefined, v30);
    }
    v31.constructor;
    return F21;
}
const v36 = f28();
%OptimizeFunctionOnNextCall(f28);
new Float32Array();
const v41 = ([9007199254740990,-16,376821973,268435456])[1];
function F42() {
    if (!new.target) { throw 'must be called with new'; }
}
const v44 = new F42();
function f45(a46, a47) {
    const o48 = {
        "e": v44,
    };
    return v36;
}
f45();
f45();
function f51() {
    return f45;
}
f51.b = v41;
Math.cbrt(11 - 11);
