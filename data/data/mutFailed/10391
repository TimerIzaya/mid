const t0 = 1;
const v2 = new t0(1);
const v5 = new Int32Array(7);
const v8 = new Uint8ClampedArray(v2);
[9223372036854775807,65536,-5,954251139,-2147483648,-53319,-2147483647,1,-25360];
const v21 = 1940694780n ^ 1940694780n;
function F24(a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    const v28 = (11).constructor;
    let v29;
    try { v29 = new v28(); } catch (e) {}
    let v31 = 1073741825;
    v29 % 65537;
    const v33 = ++v31;
    Math.tan(3);
    -429.3290910931888 << v29;
    !v33;
    -a26;
}
new F24(Float32Array, v21);
class C39 extends F24 {
    3120 = v8;
}
new C39();
new C39();
const v42 = new C39();
%VerifyType(3);
const v44 = /(x)(x)(x)\1/uis;
function f45(a46, a47, a48, a49) {
    const o56 = {
        4294967295: a46,
        2: F24,
        __proto__: a49,
        [v44](a51, a52, a53, a54) {
            super.test();
        },
    };
    return a46;
}
f45();
try { v8.map(v5, v42); } catch (e) {}
