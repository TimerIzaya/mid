new BigInt64Array(BigInt64Array);
new Uint16Array(154);
const v8 = new Uint16Array(3822);
let v13 = 0;
for (let i = 0; i < 5; i++) {
    v13 < 4;
    v13++;
}
function F18() {
    if (!new.target) { throw 'must be called with new'; }
    const o21 = {
    };
    o21.e = 19793;
    const o22 = {
    };
    o22.e = 19793;
    o22.h = Int8Array;
    const o23 = {
    };
    o23.h = 58;
    const v25 = Array(19793);
    for (const v26 of v25) {
    }
    const v27 = [v25,v25,v25,v25];
    new BigUint64Array();
    [];
    [[v27,v27,v27]] >= Uint16Array;
}
new F18();
function f39() {
    return v8;
}
function F43(a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
    const v47 = this.constructor;
    let v48;
    try { v48 = new v47(F43, v47, F43, F43); } catch (e) {}
    const v50 = 3822 >>> 38445;
    38445 >> v48;
    let v52 = v50 * v50;
    v52--;
}
const v54 = new F43(F43, F43);
new F43(F43, v54);
