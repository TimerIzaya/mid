const v0 = [-Infinity,Infinity,959819.665748626];
[0.881533214430694,1000000000000.0,-2.6561951388069446e+306,1e-15,-601975.7256958171,-2.0,1.0,-1000000000000.0,-5.0];
[-6.825886894231237,-1000000000.0,-7.405832553829715,-5.0];
function f3() {
    return v0;
}
function f15() {
    let v17 = 1000000000000.0;
    const v18 = v17--;
    -v18;
    let v21 = 257828.6336153492;
    v21--;
    class C24 {
        static #m(a26) {
        }
        constructor(a28) {
            const v30 = new Float32Array();
            try { v30.entries(); } catch (e) {}
            const v32 = new Uint16Array(12, -4294967296, v18);
            new Float32Array(v32, -4294967296, 268435439, v17, v32);
        }
    }
    try { new C24(12); } catch (e) {}
    const v35 = new C24(v21);
    function f36() {
        return f3;
    }
    Object.defineProperty(v35, "toString", { configurable: true, enumerable: true, get: f36 });
    const v37 = new C24();
    const v38 = new C24(-4294967296);
    const v39 = [v38,C24];
    [v21,v38,v35,v38,v39];
    const v41 = [v38];
    function f42(a43) {
        const o44 = {
            "f": v41,
        };
        return 65535;
    }
    v41.constructor = f42;
    class C45 extends C24 {
        [v35];
        #n(a47, a48, a49, a50) {
            return v41;
        }
    }
    const v51 = new C45();
    const v52 = v41.constructor;
    try { v52.isArray(v41); } catch (e) {}
    class C54 extends v52 {
    }
    C54.a = v38;
    C54.a = C54;
    const v55 = new C54();
    v55.constructor = f15;
    const v56 = v55?.constructor;
    try { new v56(); } catch (e) {}
    Object.defineProperty(v55, 65537, { value: v37 });
    try { v51.m(v39); } catch (e) {}
    const o59 = {
        "e": Uint16Array,
        __proto__: 3.4890473589784586e+307,
    };
    return Int32Array;
}
%PrepareFunctionForOptimization(f15);
f15();
f15();
%OptimizeFunctionOnNextCall(f15);
f15();
[-1.0,-395.4724516472661,7.367479116458831,0.418988051595485,1000000000000.0,88.85306751449184,447.4547584639806];
[0.8206744574971274,1.899717600694218e+307,-1.413113566726965,-9.70301773491576,-779764.1337149304,1000000000000.0,-8.134706998078538,-1e-15,-5.0];
[-2.2250738585072014e-308,3.7683639080697344e+307,-7.8516191979304555];
new Uint8ClampedArray(208);
new BigInt64Array(2033);
new Float32Array(106);
function f15() {
}
function f16() {
    const o17 = {
        __proto__: f15,
    };
    return o17;
}
const v18 = f16();
class C19 {
}
const t17 = 106;
const v20 = new t17();
const v21 = new C19();
function F22(a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    a24.d = a24;
    a26.constructor;
    const t23 = "-6";
    new t23();
    const v29 = v18.constructor;
    try { new v29(a25, v20, v18); } catch (e) {}
    try { a26.toString(); } catch (e) {}
    this.b = v21;
}
const v32 = new F22(f15, v18, v20);
new F22(v20, v32, C19);
