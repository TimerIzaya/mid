function f0() {
}
function f1() {
    return f0;
}
const v2 = [-1.7976931348623157e+308,-2.2250738585072014e-308,0.24435506253047246,-1e-15,878085.4906753143];
const v3 = [NaN,-5.0,837446.0429027213,-1000.0,-5.359404753490334e+307,844032.0030647765,-612596.3653756807,-707.3765904254687,-585.6464703713268];
const v4 = [9.780090102888643,2.2250738585072014e-308,3.0,4.0,Infinity];
try { v4.map(v3); } catch (e) {}
let v6;
try { v6 = v4.entries(); } catch (e) {}
try { v6.next(); } catch (e) {}
const v8 = [268435439,1536828934,-268435456,12,65537,-6,4,-29841,781464283];
v8[2] = v8;
v8["toString"]();
let v11 = f0 === f0;
v11 &&= v11;
let v13 = 1000;
v11 >>> v13;
-v3;
const v17 = ++v13;
v17 + v17;
const v19 = ++v13;
Math.tanh(v4);
const v21 = f0 & f0;
("toString").log10(v13);
const v23 = [9007199254740990,10,-536870912,8,64,10,-7466,4,-9,536870912];
try { v23.map(v19); } catch (e) {}
try { v23.map(v3); } catch (e) {}
const v26 = [-1,268435456,-34948,-1651887385,268435441,-19836,257,4294967297,-65537,5];
[1452444339,-1544710272,9223372036854775807,-6,512,3,255,5,-14710,-1682413362];
const v28 = [-9223372036854775807,129,10,3,6,-9,-3,1253202714,6,536870887];
[-10,-13649,4096];
152 <= 152;
const v33 = new Int8Array(152);
v33[126] = v33;
new Int16Array(6);
let v37 = 257;
v37 * v37;
v28[77] = Int16Array;
v2.length;
v26.length;
const v43 = v6[Symbol.toStringTag];
try { v43.localeCompare(v13); } catch (e) {}
v37--;
const v47 = new Uint32Array(v37);
try { Uint32Array.from(v21); } catch (e) {}
try { new Uint32Array(f0, v8, v47); } catch (e) {}
const v53 = Uint32Array.toString().normalize()[30];
try { v53.codePointAt(v53); } catch (e) {}
