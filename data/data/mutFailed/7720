const v0 = [-5.351880749732829,-2.220446049250313e-16,-3.0,-53666.47569277359,0.24381386902834,588289.4349625744,-4.0,-1.7976931348623157e+308,8.611946129101945];
[-1.0777545203354748e+308,1000.0];
const v2 = [0.9316383449486445];
const v6 = [v2];
Reflect.apply(v2.forEach, v0, v6);
const v9 = +v2;
new Int16Array(256);
const v13 = new BigInt64Array(30);
new BigInt64Array(4096);
[1.506020714556427e+307,-5.0,0.03090185281437363,1000000000000.0,-2.2250738585072014e-308,-1000000000000.0,4.0,-0.0,-7.262085316788397e+307];
const v20 = gc()?.then;
for (let v21 = 0; v21 < 100; v21++) {
    gc();
}
[BigInt64Array,v9];
[v9];
[v13,256,BigInt64Array,30];
try { v20(); } catch (e) {}
