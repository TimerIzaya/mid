new Float64Array(144);
const v5 = new Int16Array(512);
v5.g = 512;
v5.g = v5;
new Uint8Array(16);
class C9 {
    static o(a11, a12, a13) {
        super.f = Int16Array && a12;
        let v16 = 127;
        let v17 = 1.0;
        let v18 = v16--;
        Math.sqrt(v16);
        v18++;
        v16 ^ a12;
        !v17;
        Math.acosh(v17--);
        return a12;
    }
}
try { new C9(); } catch (e) {}
new C9();
new C9();
new C9();
function f34(a35) {
    new Uint8Array(3521);
    return Float64Array;
}
BigUint64Array.toString = f34;
try { BigUint64Array.bind(Uint8Array); } catch (e) {}
Uint8ClampedArray.BYTES_PER_ELEMENT = Uint8ClampedArray;
5 << 5;
9007199254740991 >= 9007199254740991;
-1.0 === -1.0;
BigUint64Array <= 0.7221600461335677;
