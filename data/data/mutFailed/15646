let v0 = [-1000.0,358.20469335782286,1.7976931348623157e+308,3.7383442885851305e+307,3.0,-1.0];
[-1.7239004739250761e+308,-221706.90694792033,0.8050680879447365,1.7976931348623157e+308];
const v2 = [454327.8872231785,0.7039457102036737,4.0,-1000.0,829107.6056719259,8.841717820488157,351.25757659457713,0.17062816638735123];
class C9 {
    static [1073741824n];
    static #toString(a11, a12) {
        class C13 {
            2 = 59970;
            static #c;
            [a12];
        }
        new C13();
        new C13();
        new C13();
        delete a12?.h;
        a12[undefined] &&= 59970;
        const o19 = {
        };
        new Proxy(this, o19);
        return -229493225n;
    }
    static #f = v0;
}
let v22 = new C9();
-38058 + v2;
v22 -= v2;
new C9();
new C9();
const v30 = new Int32Array();
try {
const t0 = 9007199254740992n;
t0(v30, 3n);
} catch (e) {}
try { v0.fill(1073741824n, 59970, ...v2, C9, ...1073741824n); } catch (e) {}
-1971407454 / -38058;
let v35 = 7;
Math.ceil(v35);
(-229493225n) ** v0;
~v35 ** -229493225n;
--v0;
v35--;
function F44(a46, a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        new F44();
        v30.length;
    } catch(e51) {
    }
}
new F44();
