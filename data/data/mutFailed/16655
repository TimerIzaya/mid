const v0 = [-7.166805563965837e+307,1.0700792130267747e+308,-526564.9343876166,6.773441016143297e+307,3.0];
const v1 = [3.7381567927081605,-253.65995005677576];
const v2 = [-1000000.0,1.379995983224362e+307];
let v3 = [-2147483648,6,-4294967295,-2147483648,-6,9,4294967296];
const v4 = [-380314200,1701840497,-2147483649,-1];
const v5 = [-317524262];
new Float32Array(4096);
const v10 = /(Z[-123])/gsy;
/E\u0060/gvdsy;
const v12 = /(abc+)/umsy;
const v13 = v5[v4];
for (let [,v15,v16] of v2) {
    try {
        v1.__proto__ = v1;
    } catch(e17) {
    }
}
try { v13["p"](v0, Float32Array); } catch (e) {}
new Uint32Array(7);
new Uint16Array(257);
function F24(a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
}
const v29 = new F24();
const v30 = new F24(F24, F24, v29);
function f31(a32, a33) {
    [[]];
    return a32;
}
v30[Symbol.toPrimitive] = f31;
async function f39(a40, a41) {
    v3 = v4;
    let v44 = 268435440;
    Math.atan2(a41, -1000.0);
    let v47 = ++v44;
    const v48 = -a41;
    v48 << -1000.0;
    Math.tan(v48);
    v47++;
    await Symbol;
    return v12;
}
f39(7, v10);
for (let v54 = 0; v54 < 5; v54++) {
    Object.defineProperty(v29 || undefined, v30, { value: v29 });
}
