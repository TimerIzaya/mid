class C3 {
    g = 11;
    #g = 11;
    set a(a5) {
        a5 in a5;
        [789531097,-2147483649,-31638,-20474,-1073741824,268435440,9223372036854775807];
        [812251544,256,4096,256];
        [268435456,9223372036854775807,128,-12,65535];
    }
    #valueOf(a11, a12) {
        const v15 = [5,4142,11,268435456,11,-30743,4096,268435440,1753297073];
        function f16() {
            Int8Array.b = Int8Array;
            gc();
            Object.defineProperty(v15, 1, { writable: true, enumerable: true, value: v15 });
            return Int8Array;
        }
        const v21 = this * 5;
        this.sin(v21);
        const v23 = 11 | 4096;
        5 - -9194;
        v21 && v23;
        return -2;
    }
    static b;
    static {
        let v26 = this;
        try { v26.call(-9194); } catch (e) {}
        v26[2769597849] = v26;
        v26 &= v26;
        const t30 = -9194;
        t30[7] = v26;
        super.h = 11;
        super.e ||= -9194;
        const v28 = (-9194).__proto__;
        try { v28.call(11); } catch (e) {}
        try {
            v26.length = 1;
        } catch(e31) {
        }
    }
}
new C3();
const v33 = new C3();
new C3();
let v36 = "-9223372036854775808";
try {
    v33.h = v36;
} catch(e39) {
}
v36 ** 255;
v36++;
const v46 = -39439 * v36;
v46 - 2.28613768173441e+307;
v36 << 2.28613768173441e+307;
v46 % 2.28613768173441e+307;
[-9007199254740990,-6,-2,65535,672321521,257,129,512,-7795,1];
const v53 = [-771638888,17865];
[-21301,1238077297,2147483647,-250806728,-49030,268435440,10];
const v56 = new BigUint64Array();
function f57(a58, a59) {
    v53();
    return a59;
}
v56.toString = f57;
try { v56.copyWithin("object"); } catch (e) {}
