const v0 = /e\u0034S[\p{Script_Extensions=Mongolian}&&\p{Number}]/diy;
const v1 = /Atz/udiy;
const v2 = /(\xed\xb0\x80)\x01/vm;
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    const v6 = this?.constructor;
    try { new v6(v0); } catch (e) {}
    try {
        this.b = v1;
    } catch(e8) {
    }
}
try { new F3(v0); } catch (e) {}
const v10 = new F3(v0);
function f11(a12) {
    const v15 = new Float64Array(4096);
    new BigInt64Array(13);
    new Int8Array(1);
    return v15;
}
v10.constructor = f11;
const v22 = v10?.constructor;
try { new v22(v2); } catch (e) {}
const v24 = new F3(v0);
v24.b = v24;
new F3(v2);
new Int8Array(-256);
2 - 2;
const v35 = new Float32Array(2);
v35[1];
new Uint8Array(2137);
function f41() {
    const o44 = {
        501: null,
        "a": null,
        "h": null,
        [null]() {
            super.b;
        },
        "cause": null,
        9: null,
        "e": null,
        ...null,
    };
    return o44;
}
f41();
%PrepareFunctionForOptimization(f41);
f41()[501];
%OptimizeFunctionOnNextCall(f41);
f41();
