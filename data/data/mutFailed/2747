function f0() {
}
const v1 = [f0,f0];
const v2 = [f0];
const v3 = [f0,f0,v2,v2,v2];
try { v3.map(f0); } catch (e) {}
const v5 = /oJ8/gvdms;
try { v5.compile(v1, v2); } catch (e) {}
v5.b = v5;
const v7 = /o\1(a)/umsy;
v7.e = v7;
const v8 = /{}[-\xf0\x9f\x92\xa9]+/giy;
v8.b = v8;
function f9(a10, a11) {
    a10.unicodeSets = a10;
    try { a11.exec(a11); } catch (e) {}
    class C13 {
    }
    for (let v15 = 0; v15 < 5; v15++) {
        C13.f = -4n;
    }
    const o24 = {
        m(a17, a18, a19, a20) {
            a20 = a18;
            return -6;
        },
        "d": v7,
        "b": a11,
        206: f0,
    };
    return o24;
}
f9(v7, v5)[206];
const v27 = f9(v5, v8);
v27[206] = v27;
f9(v5, v7);
const v31 = new Int8Array(1392);
let v32;
try { v32 = v31.lastIndexOf(1392); } catch (e) {}
v32--;
function f34() {
    const o38 = {
        ...1.0,
        set b(a37) {
        },
    };
    o38.e = o38;
    return o38;
}
for (let v39 = 0; v39 < 5; v39++) {
    f34();
    %OptimizeFunctionOnNextCall(f34);
}
Date.now();
class C43 extends 1392 {
}
const v44 = new C43();
function f45(a46, a47, a48) {
    return f45;
}
const v51 = [v44];
const o52 = {
    "arguments": v51,
    "type": "function",
};
new Worker(f45, o52);
const o55 = {
    "get": Symbol,
};
try { Proxy.toString(); } catch (e) {}
const v58 = new Proxy(v31, o55);
v58[529];
v58.find = v58;
const v60 = v58[795];
const o65 = {
    "b": 1e-15,
    [3](a64) {
    },
};
delete o65.b;
Symbol.for(v60.description);
