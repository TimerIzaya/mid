function f3() {
    return 61421;
}
let v5 = -371608.3960859084;
let v6 = f3();
536870912n ^ 536870912n;
536870912n << 536870912n;
var a = 536870912n;
const v10 = [];
function f11(a12, a13) {
    function F14(a16, a17, a18) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v19 = new F14(F14, v10, F14);
    const v20 = new F14(v19, v19, v19);
    v20.__proto__ = v10;
    return v19;
}
v10[Symbol.toPrimitive] = f11;
if (536870912n <= 536870912n) {
    const v24 = v6++;
    v24 - v24;
} else {
    const o29 = {
        "execution": "async",
        "type": "major",
    };
    gc(o29);
}
class C31 {
    static get b() {
        this.name;
        try {
            super.getOwnPropertyNames();
        } catch(e35) {
        }
        return v10;
    }
    constructor() {
        this[v10] = this;
        this[v10] %= this;
    }
    static e;
    [v10];
}
C31.getOwnPropertyNames = -6;
const v37 = new C31();
const v38 = v37?.constructor;
v38[Symbol.toPrimitive] = f3;
try { new v38(); } catch (e) {}
v37 << 65535;
try { ("toString").strike(); } catch (e) {}
const v49 = ("MIN_SAFE_INTEGER")?.toLocaleUpperCase;
try { new v49(); } catch (e) {}
34782 - 34782;
function F55(a57, a58, a59) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a57;
    a58.valueOf = f11;
    a57 - a57;
    a58 ^ a58;
    try {
        this.b = a58;
    } catch(e62) {
    }
    try {
        this.e = a58;
    } catch(e63) {
    }
    try {
        this.f = "toString";
    } catch(e64) {
    }
    ({"b":a57,"e":v5,} = C31);
    h = this;
    v37[6];
    a57?.["toString"];
    return C31;
}
const v67 = new F55(4294967296, v5, 34782);
v67.toString = Symbol;
v67.name;
function f70(a71, a72, a73, a74) {
    Object.defineProperty(a71, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f70 });
    const o81 = {
        toString(a78, a79) {
            new Date(a71);
            return this;
        },
    };
    return o81;
}
new F55(61421, v67, v67);
const v83 = new F55(8454, "toString", f3);
v83.name;
Int16Array[0] = -27833;
new Int16Array(Int16Array);
