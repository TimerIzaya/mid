function f0() {
    const o11 = {
        ..."mGIo",
        ["mGIo"]: -1000.0,
        "a": -1000.0,
        ["mGIo"](a5, a6) {
            const v7 = -1000.0 + a5;
            const o8 = {
            };
            new Proxy("c", o8);
            return v7;
        },
        "e": "c",
        "b": -1000.0,
    };
    return o11;
}
f0();
f0();
f0();
new Uint32Array(3248);
new Float32Array(1024);
new Uint8ClampedArray(128);
const v27 = /[KvG]/iy;
let v28;
try { v28 = v27.test(v27); } catch (e) {}
/(E)/uis;
/(K(?:a+)+)/guim;
const v31 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
let v32 = 2684;
const v33 = v32--;
v33 != v33;
[-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v37 = [601759695];
const v38 = [1073741824,1073741823,1376142744,1073741825];
function f40(a41, a42, a43, a44) {
    a41 + a41;
    function f46() {
        "Vre" == "Vre";
        ("Vre").codePointAt("Vre");
        const v51 = v31.length;
        v51 + v51;
        try {
            v38.forEach(a42);
        } catch(e54) {
            const v55 = e54.message;
            try { v55.codePointAt(e54); } catch (e) {}
        }
        const v57 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o63 = {
            toString(a59, a60) {
                (a44 && a42) <= v57;
            },
        };
        -268435456 - -268435456;
        const o76 = {
            [522675525n](a67, a68) {
            },
            "c": v37,
            [-1]: v32,
            "b": -268435456,
            [-4294967297n](a70, a71, a72, a73) {
            },
            "arguments": a43,
            set b(a75) {
            },
            256: a44,
            ...v37,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
        };
        return v37;
    }
    f46.e = f46;
    const v77 = f46();
    try { v77.toLocaleString(); } catch (e) {}
    %OptimizeFunctionOnNextCall(f46);
}
for (let v79 = 0; v79 < 5; v79++) {
    f40(v79, v32);
}
-9629 - -9629;
[1000000000.0,5.348311955597634,-5.0,-0.0,918517.0313497435,3.0];
const v86 = [1000000000000.0,-1.3068457756022127];
try { v86.map(v38); } catch (e) {}
[4.62204780368929e+306,5.432009947472192];
try { ("getPrototypeOf").blink(); } catch (e) {}
class C94 {
    ["getPrototypeOf"] = -1.7976931348623157e+308;
}
class C95 extends C94 {
    ["getPrototypeOf"] = C94;
}
let v96;
try { v96 = new C95(); } catch (e) {}
const v97 = v96?.getPrototypeOf;
try { new v97(); } catch (e) {}
Date.length = Date;
const v101 = new Date();
class C103 extends Int32Array {
}
new v28();
function f105() {
    class C107 {
    }
    new C107();
    Date[3.4890473589784586e+307] = -353832814;
    const o109 = {
        "call": f105,
    };
    class C110 extends C107 {
        #a;
    }
    for (let i = 0; i < 5; i++) {
        new Date();
    }
    return -353832814;
}
const o113 = {
    "g": v101,
};
3.5885237423067196 + 3.5885237423067196;
function f116() {
}
function F122() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        for (let i = 0; i < 5; i++) {
        }
    } catch(e124) {
    }
}
function f125(a126, a127) {
    const o128 = {
    };
    const o129 = {
    };
    const o130 = {
    };
    const o131 = {
    };
    function f132(a133) {
    }
}
const o134 = {
};
