-1.3832922122240728e+307 >> -1.3832922122240728e+307;
eval("global");
const v9 = [0.0,1.0,-6.743702675363474,400.9902683003188];
let v10 = "string";
function f11() {
    for (let i14 = 0, i15 = 10;
        i14 < i15;
        (() => {
            const v19 = i14++;
            v19 >> v19;
        })()) {
        for (const v23 in v9) {
            v10 *= v10;
        }
    }
    return v9;
}
%OptimizeFunctionOnNextCall(f11);
new Uint16Array(4);
new Uint16Array(256);
new BigInt64Array(5);
function f31() {
    for (let v32 = 0; v32 < 5; v32++) {
        function f33() {
            return f33;
        }
        f33.d = v32;
        f33.d = f33;
    }
    return f31;
}
class C41 {
}
const v42 = [9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
const v44 = new Uint8Array();
v42[268435441] = v44;
class C46 extends Uint16Array {
    static #m(a48, a49, a50, a51) {
    }
    toString(a53) {
        const t40 = super["hasInstance"];
        t40[9] = 0;
    }
}
new Uint8ClampedArray([5.0]);
try {
} catch(e59) {
    eval("");
}
