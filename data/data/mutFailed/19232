function f0() {
}
const v1 = /((\xed\xa0\x80))\x02/guim;
const v2 = /[\cAj(?:a+)?]/gudims;
const v3 = /m\cj\cJ\ci\cI\ck\cK/us;
const v4 = [v3,v3];
const v5 = [f0,v3,v3,v1];
const v6 = [v3,v5,v5,v4];
const v8 = new WeakSet();
~-9007199254740992;
const v12 = 9007199254740991n * 9007199254740991n;
class C13 {
}
class C14 extends C13 {
}
const v15 = v8?.constructor;
try { new v15(); } catch (e) {}
function F17(a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    const v22 = this?.toString;
    const o24 = {
        "execution": "async",
    };
    class C25 {
        o(a27, a28, a29, a30) {
            class C31 {
            }
        }
    }
    new C25();
    try { new v22(); } catch (e) {}
    const v34 = a20?.reduce;
    try { new v34(WeakSet); } catch (e) {}
    a21.source;
    this.h = v2;
    class C39 extends [BigUint64Array,BigUint64Array,BigUint64Array,BigUint64Array] {
    }
    const v41 = new Uint8Array(Uint8Array);
    const o42 = {
        ...v41,
    };
    try { o42.n(v12); } catch (e) {}
    try {
        this.h = a21;
    } catch(e44) {
        this[Symbol.toPrimitive];
    }
    try {
        this.f = f0;
    } catch(e51) {
    }
    try {
        this.g = v1;
    } catch(e52) {
    }
}
F17.prototype;
const v54 = new F17(v6, v4, v3);
v54.g;
const v56 = new F17(v6, v6, v3);
let v57 = new F17(v6, v5, v1);
const v58 = v57?.constructor;
try { new v58(v56, v56, v6); } catch (e) {}
-945724295 - -945724295;
v54[4] = f0;
new F17(v57, 4, v8);
v57 *= v54;
try {
    f0();
} catch(e70) {
}
const v73 = new Date();
([v73]).toLocaleString();
-8298n <= -8298n;
11 | 11;
const v83 = BigUint64Array?.constructor;
try { new v83(v54); } catch (e) {}
f0(f0).apply();
class C87 {
}
const v88 = [1073741824,1073741823,1376142744,1073741825];
function f89() {
    try {
        v88.forEach();
    } catch(e91) {
        e91.message = e91;
        const v92 = e91.message;
        v92.e = v92;
    }
    return v88;
}
f89();
/D5dq[\0]/gdmsy;
