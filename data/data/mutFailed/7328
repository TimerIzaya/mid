let v1 = 5n;
function f3(a4) {
    const o22 = {
        "h": v1,
        61: 1024n,
        ...1024n,
        "f": a4,
        "a": a4,
        512: 1024n,
        "c": 1024n,
        "g": v1,
        valueOf(a6) {
            super[a6] = this;
            try { this["toString"](); } catch (e) {}
            new Int16Array(129);
            const v14 = new Float64Array(49);
            -112686.42309355142 == a4;
            v14[a6] ^= 53;
            new Float32Array(53);
            return a4;
        },
    };
    return o22;
}
const v23 = f3(1024n);
const v24 = f3(1024n);
f3(55921n);
let v28 = -9223372036854775808;
Object.defineProperty(v23, 268435456, { writable: true, configurable: true, set: f3 });
const v31 = Symbol.iterator;
const o40 = {
    [v31]() {
        let v33 = 10;
        const o39 = {
            next() {
                v33--;
                const v37 = v33 == 0;
                const o38 = {
                    "done": v37,
                    "value": v33,
                };
                return o38;
            },
        };
        return o39;
    },
};
new BigUint64Array(13);
v28 = 7;
v1 <<= v1;
const t50 = 13;
t50[8] = v28;
try { v24.valueOf(f3); } catch (e) {}
new BigInt64Array(7);
new Uint32Array(129);
const v53 = new Int16Array(255);
const o54 = {
    ...v53,
};
