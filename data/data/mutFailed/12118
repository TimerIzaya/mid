const t0 = 2419;
new t0(2419);
const v5 = new BigInt64Array(233);
let v6 = 328;
const v8 = new Uint8ClampedArray(v6);
const v14 = new BigUint64Array(9);
new BigInt64Array(9);
new v8(5);
class C24 {
    #c = "toUpperCase";
    get a() {
        const v26 = this << "toUpperCase";
        const v27 = v26 ^ v26;
        let v28;
        try { v28 = v27(v27, this, v27, v27, v26, this); } catch (e) {}
        v28[v27] <<= 1.1922093890401552e+308;
        return "Tx";
    }
    static b;
}
const v32 = new C24();
const v33 = new C24();
const v34 = v33?.toLocaleString;
try { new v34(); } catch (e) {}
const v36 = new C24();
[v32,"toUpperCase",C24];
[v14];
const v39 = [v32];
v39[0] = v39;
v6--;
const v43 = 35530n & 35530n;
try { new Float64Array(35530n, v36, v36); } catch (e) {}
const v48 = new Float64Array();
try { v48.entries(); } catch (e) {}
const v52 = new Uint8Array();
const v55 = v52[44610];
let v56;
try { v56 = v55(); } catch (e) {}
v48.toString = v56;
[3,4294967295,-49424,9007199254740991,-4,5851,-10,4096];
function f59(a60, a61) {
    a61.name;
    Array?.of;
    try { new a60(); } catch (e) {}
    Symbol.toPrimitive;
    const v69 = v5();
    function f70() {
        return 3;
    }
    function f71(a72) {
        a72--;
        const t50 = "async";
        t50[0] = "async";
        const o77 = {
            "execution": "async",
        };
        gc();
    }
    Object.defineProperty(v69, 0, { configurable: true, enumerable: true, get: f70, set: f71 });
    a60.unshift(3, a60, v43);
}
f59.name;
new Promise(f59);
