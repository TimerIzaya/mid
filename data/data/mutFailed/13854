new Set();
const v4 = new Int16Array(131);
new Uint32Array(1);
new Uint8ClampedArray(128);
class C11 extends Int16Array {
    constructor(a13, a14, a15) {
        super(a13, a13, a14);
        v4.buffer >>>= 1;
        const v16 = this[this];
        try { new v16(Uint8ClampedArray, v16, a13); } catch (e) {}
        this[2293] = Int16Array;
    }
    static 0 = 128;
    static m(a19, a20, a21) {
        class C24 {
        }
        const v26 = [272822757,272822757,272822757];
        const v27 = [-2.0,272822757,"function"];
        const o28 = {
            __proto__: v27,
        };
        v26[o28] &= 272822757;
        const v29 = C24.__proto__;
        v29[v29];
        for (let v31 = 0; v31 < 32; v31++) {
            this["p" + v31] = v31;
        }
        return this;
    }
}
new C11(1, 131, 128);
new C11(1, 128, 131);
new C11(128, 131, 1);
([601759695]).includes(...[-1000.0,-2.2250738585072014e-308,511.99933163650917,-386.8372768814137,Infinity]);
