const v0 = [6,-8,-1,-6747,1];
const v1 = [-1685740559];
[40388,-300143986,31202,15,8];
new Map();
5 >>> 5;
const v8 = new Uint8Array(5);
const v11 = [];
const v12 = [v11,v11,v11,v11];
try { v12.group(Uint8Array); } catch (e) {}
[v11,v12,v12,v12];
const v16 = [34352,4,-9223372036854775808,1092764849,-2147483647,-1162070362,-4294967297,8,-591755449];
try { v16.groupToMap(v1); } catch (e) {}
new v0(v16);
const v19 = new Int8Array(127);
v8[81] = v19;
const v22 = [-2.220446049250313e-16,-1000000000.0,-1e-15,1000000000.0,-1.0,1000000000.0,-1000.0];
const v23 = [1000000000000.0,1e-15];
let v24;
try { v24 = v23.toString(); } catch (e) {}
const v25 = v22.fill(v23, v24);
try { v25.fill(v11); } catch (e) {}
v23[3] = -1000000.0;
delete v23[2];
new Uint8ClampedArray(1024);
let v32 = Math.asinh();
v32--;
Map.sin(3.862600614459211e+307);
