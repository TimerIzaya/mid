const v2 = new Uint8Array(10);
let v3 = 1507;
v3--;
new Float64Array(v3);
try { new Int16Array(10, 10, Int16Array); } catch (e) {}
new v2(256);
const v11 = [0.12955049652940986,-4.0,NaN,3.0,NaN,3.0,-2.0,-4.45108707566972,-2.0,1000000000.0];
v11[8] = v11;
const v12 = [1.0,-2.220446049250313e-16];
const v13 = [-Infinity,-0.0,-958.7456089520881,2.2250738585072014e-308];
try { v13.map(256); } catch (e) {}
/9foo[z]*abc|def(?:ab|cde)?/gudisy;
const v16 = /a\Sc/gvimsy;
const v17 = /\P{Decimal_Number}zj/ms;
v17.unicodeSets = v17;
const v19 = new v16();
function f20(a21) {
    a21.e = f20;
    const v22 = a21.toString(v19);
    v22[358];
    class C24 extends Map {
        [v22] = f20;
    }
    const v25 = new C24();
    const o26 = {
        ...v19,
        "f": Map,
        "h": a21,
        [-2]: v19,
        ...v25,
    };
    return o26;
}
for (let v27 = 0; v27 < 32; v27++) {
    const v29 = "p" + v27;
    try { v29.codePointAt(v12); } catch (e) {}
    v19[v29] = 10;
}
const v31 = f20(f20);
const o32 = {
    __proto__: v31,
};
o32.f = v19;
