function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.a = this;
    try {
        this.d = 1073741824;
    } catch(e3) {
    }
    try {
        this.a = 1073741824;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
let v7 = new F0();
v7.a;
class C9 {
    constructor(a11, a12) {
        const v13 = this?.__defineGetter__;
        try { new v13(a11, a11); } catch (e) {}
        a11.a;
        super.b = this;
        v7 = a11;
        SharedArrayBuffer.d = SharedArrayBuffer;
        const o18 = {
            "maxByteLength": 64,
        };
        o18.maxByteLength = o18;
        const v20 = new SharedArrayBuffer(16, o18);
        new Float64Array(v20);
    }
    static #b = v5;
}
new C9(v6, v7);
const v24 = new C9(v7, v6);
const v25 = v24?.constructor;
try { new v25(C9, v6); } catch (e) {}
const v27 = new C9(v5, v7);
v27.length = v27;
new Int16Array(5);
new Int16Array(1875);
171 - 171;
new Int16Array(171);
const v38 = [-1000.0,1000000.0,2.220446049250313e-16,614071.3005355855,-1.0,2.220446049250313e-16];
const o39 = {
};
try { Proxy.call(Int16Array); } catch (e) {}
const v42 = new Proxy(v38, o39);
v42[301];
