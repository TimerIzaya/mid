new Int16Array(15);
new Float64Array(112);
const v8 = new Int32Array(1547);
new Int32Array();
Array(4087);
class C17 extends Float64Array {
    #o(a19, a20, a21, a22) {
        new SharedArrayBuffer(35);
        function f28(a29, a30, a31) {
            const o32 = {
                "h": a31,
            };
            return o32;
        }
        f28(-3.9870582640049523, -3.9870582640049523, 1000000.0);
        try {
            function f34(a35, a36, a37) {
                'use strict';
                return a35;
            }
            class C39 {
                static get d() {
                }
                c;
                static #e = -1000000.0;
                4294967295;
                #a;
            }
            v8.#o(-1073741824n, a20, a22, 15);
            ([]).constructor.isArray();
            new BigInt64Array();
        } catch(e47) {
        }
        return 10000n;
    }
    3 = -1073741824n;
    static #c = 37156n;
    #valueOf(a49, a50) {
        let v51 = 0;
        while ((() => {
                const v53 = v51 < 8;
                const v55 = new Uint8Array();
                const v57 = new Uint32Array();
                function f58(a59, a60, a61, a62) {
                    a59.g = v57;
                    const v63 = a61 % a61;
                    const o69 = {
                        "b": a59,
                        ...v55,
                        n(a65, a66) {
                            const o68 = {
                                [a60]: Uint8Array,
                            };
                            v57[a59] = v57;
                            return v63;
                        },
                    };
                    const t17 = o69?.b;
                    const v71 = new t17(a61, v63);
                    return v71;
                }
                return v53;
            })()) {
            try {
                v8.#c;
            } catch(e73) {
            }
            v51++;
        }
        return this;
    }
}
new C17();
new C17();
new C17();
class C78 {
}
const v79 = new C78();
const v80 = [-2,257,-107178159,-35269,9223372036854775807,1203530861,-32678];
const o81 = {
};
const v83 = new Proxy(v80, o81);
v83.unshift(v79);
const v85 = [-2.220446049250313e-16];
class C86 {
    static [-2];
    constructor(a88, a89) {
        function f90() {
            function f92(a93) {
                a93 !== v85;
            }
            this.onmessage = f92;
        }
        const v98 = [];
        const o99 = {
            "arguments": v98,
            "type": "function",
        };
        new Worker(f90, o99);
    }
}
const o101 = {
    __proto__: v83,
};
([-1941710058,1389675721,-50560,-20231,1311353951,-1024,128,-25926]).constructor;
let {...v105} = [1000000000000.0,0.9960435535667199,1000.0,-1.6540773985510377e+308,0.3018853678306006,410.9648048644401,-6.0085450863810586,-529.8311372035074];
try {
    v105.fuck(v105);
} catch(e107) {
}
try { o101.reduceRight(v83); } catch (e) {}
