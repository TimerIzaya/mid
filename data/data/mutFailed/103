let v2 = -1000.0;
{
    try { (621716.887951144).n(10000); } catch (e) {}
}
const t4 = 10000;
t4[10000] = v2;
f = 10000;
function F7(a9, a10, a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a10;
    } catch(e13) {
    }
    try {
        this.f = a11;
    } catch(e14) {
    }
}
new F7(621716.887951144, 621716.887951144, 1000000000000.0, 1000000000000.0);
new F7(621716.887951144, 621716.887951144, 1000000000000.0, 621716.887951144);
const v17 = [-690.7266931086847,806.7798443733527,-Infinity];
const v18 = [910604.4532826312,2.2250738585072014e-308,-2.0,-5.0,3.0,-2.2250738585072014e-308,0.2743908544500384,1.49997878240832,9.55512563148013];
const v19 = [-642.8507171768813,3.0];
const o20 = {
};
try {
    o20.h = v18;
} catch(e21) {
}
try {
    const o22 = {
    };
    o22.h = v18;
    o22.d = 621716.887951144;
} catch(e23) {
}
try {
    const o24 = {
    };
    o24.h = v18;
    o24.d = 621716.887951144;
    o24.b = 621716.887951144;
} catch(e25) {
}
try {
    const o26 = {
    };
    o26.h = v18;
    o26.d = 621716.887951144;
    o26.b = v19;
} catch(e27) {
}
new F7(v2, 621716.887951144, 621716.887951144, v2);
new WeakMap();
new Uint16Array(64);
new Int16Array(512);
let v37;
try {
const t0 = 10000;
v37 = t0();
} catch (e) {}
new WeakMap(Int16Array, ...v17, 512, 512, -1629685370, v37);
v2 <<= v2;
new Array(10);
new BigUint64Array(255);
for (let v46 = 0; v46 < 5; v46++) {
    Math.asin(-3 ^ v46);
}
const v3 = [1e-15,1.0];
const v4 = v3?.findLastIndex;
try { new v4(v3); } catch (e) {}
const v6 = [-2.0,-435.5302692243064,2.2250738585072014e-308,-350.7751301327047,-2.220446049250313e-16,-6.511850585101728e+307,2.2250738585072014e-308,677035.949343004,3.0501208916187235];
const v7 = [1.7480100999185585e+308,-5.0,0.5199429843584729,1.0,-3.6975083145773896e+307,2.220446049250313e-16,-Infinity,-4.0,0.6497046513357677];
class C8 {
    o(a10, a11, a12, a13) {
        const v19 = new Uint8Array(9);
        const v22 = new BigUint64Array(10);
        try {
            v22.__proto__ = v19;
        } catch(e23) {
        }
        const o25 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o25);
        return 268435439;
    }
    #d;
}
const v27 = C8?.constructor;
try { new v27(v3); } catch (e) {}
new C8();
const v30 = new C8();
new WeakSet();
const v36 = -621.066308785055 & -31849;
C8--;
const v38 = +-621.066308785055;
v36 & -31849;
const v40 = v38 & -31849;
Math.cosh(v36);
const v42 = new C8();
function F43(a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
    const v47 = a46?.constructor;
    try { new v47(); } catch (e) {}
    try {
        this.b = v7;
    } catch(e49) {
    }
    const v51 = undefined?.p;
    const v53 = new Uint32Array();
    async function f54(a55, a56, a57) {
        return await v53;
    }
    f54();
    function f60(a61, a62, a63) {
        const o64 = {
            "d": f54,
            [v30]: Uint32Array,
        };
        return o64;
    }
    f60(v51, v27, v4);
    f60(v6, a46, v42);
    f60(v3, v40, v6);
    try {
        this.c = a46;
    } catch(e68) {
    }
    try {
        this.e = v7;
    } catch(e69) {
        new Int8Array();
        class C74 {
            constructor(a76, a77) {
                [NaN,1.0,1.1875413619536744e+308];
            }
            static [-2] = -2;
            1073741825 = "e";
        }
    }
}
F43.b = F43;
new F43(v6, v42);
const v80 = new F43(v7, C8);
v80.b = v80;
new F43(v3, C8);
const v82 = [];
try { v82.toString(); } catch (e) {}
new Float64Array(Float64Array);
const o90 = {
    [-50127](a89) {
    },
    "f": -1790469273,
};
try { Date(v7, v3, Date, Date, Date, v7, v7); } catch (e) {}
const v94 = new Date();
v94.toString = Date;
Date();
Object.defineProperty(v82, 2081, { configurable: true, enumerable: true, value: 2056527154 });
v94.setMonth(1);
