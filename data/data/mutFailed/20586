function f3() {
    return 1n;
}
Int32Array.e = Int32Array;
const v6 = new Int32Array(1443);
function F7(a9, a10, a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a12;
    } catch(e13) {
    }
    try {
        this.e = a10;
    } catch(e14) {
    }
    try {
        this.g = a11;
    } catch(e15) {
    }
}
try { v6.reduce(9007199254740990n); } catch (e) {}
function F18(a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
}
const v22 = new F18();
let v26;
try { v26 = ("getPrototypeOf").blink(); } catch (e) {}
const v27 = v26.strike(591114.0785999324);
let v28;
try { v28 = v27.replace(19793, v22); } catch (e) {}
v28[11] = v28;
const v30 = new Uint8Array(487);
try { v30.set(9007199254740990n); } catch (e) {}
try { v30.sort(Int32Array); } catch (e) {}
try { new Float64Array(v6, v6, Uint8Array); } catch (e) {}
const v36 = new Float64Array(128);
const v37 = v36?.findLastIndex;
try { new v37(f3); } catch (e) {}
BigInt(BigInt);
for (let i = 0; i < 5; i++) {
}
const v42 = Array(128);
const v43 = v42.unshift(128, Array, v42);
const o44 = {
};
o44[522675525] = v43;
const v45 = v36?.with;
v45.length;
try { new v45(9n, 9n); } catch (e) {}
const o60 = {
    o(a49, a50) {
        class C53 {
            static #b;
            constructor(a55, a56) {
                try {
                    a55.#b = 860736081;
                } catch(e57) {
                }
            }
        }
        new C53(512);
        class C59 {
        }
        return Int32Array;
    },
};
try { Date.bind(Uint8Array); } catch (e) {}
try { new Date(v6, Date, 487, Float64Array, Date, Float64Array, 487); } catch (e) {}
for (let [i71, i72] = (() => {
        const t0 = [-646258.8006221732,5.0,-1000000.0,2.2250738585072014e-308,-2.2250738585072014e-308,1000000.0];
        t0.length = 29;
        new Function("1532738280");
        return [0, 10];
    })();
    (() => {
        const v73 = i71 < i72;
        class C74 extends Date {
        }
        return v73;
    })();
    (() => {
        i72 ^ i72;
        const v78 = i71++;
        const v79 = v78 <= v78;
        v79 && v79;
    })()) {
    function f83(a84) {
        return a84;
    }
    [f83];
    new Date(Date);
    i71 / i71;
}
