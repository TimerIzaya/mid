function f0() {
}
let v2 = 1000n;
for (let i6 = (() => {
        -0;
        return 0;
    })();
    (() => {
        const v8 = i6 < 4;
        !v8;
        return v8;
    })();
    (() => {
        const v11 = i6++;
        v11 >>> v11;
        i6++;
    })()) {
    i6 / i6;
    try {
        const v16 = new f0();
        const v17 = v16?.propertyIsEnumerable;
        try { new v17(v16); } catch (e) {}
    } catch(e19) {
    }
}
v2[WeakMap];
try {
    const v22 = new f0();
    try { v22.constructor(); } catch (e) {}
} catch(e24) {
}
const t31 = 536870889n;
const v25 = new t31();
-2147483647n ^ -2147483647n;
-2147483647n + -2147483647n;
-1022596642n ^ -1022596642n;
v2--;
let v33 = 1521;
const v35 = new Uint32Array(v33);
try { v35.slice(v2, v25); } catch (e) {}
v35[1437] = v35;
try { Uint16Array(WeakMap, WeakMap, Uint32Array); } catch (e) {}
new Uint16Array(0);
let v42 = Float32Array;
const v43 = new v42(14);
const v44 = v43[0];
v44 ^ v44;
function f46() {
    let v47 = this;
    function f48(a49) {
        %VerifyType(10n);
        ({"b":v33,"f":v47,...v42} = a49);
    }
    const t53 = 536870889n;
    t53.onmessage = f48;
    f48 instanceof f48;
}
const t57 = "function";
t57[3] = "function";
const v53 = [];
let v54;
try { v54 = v53.reverse(); } catch (e) {}
let v55;
try { v55 = v54.every(WeakMap); } catch (e) {}
const o56 = {
    "arguments": v53,
    "type": "function",
};
new Worker(f46, o56);
const v58 = [723200.4184824808,-1000.0,-523437.54204506474,-964793.6675249395];
for (let v59 = 0; v59 < 20; v59++) {
    v59 << v59;
    let [,v61,...v62] = v58;
    v61 >>> v55;
}
