let v3 = -1073741824;
v3 >> v3;
v3++;
let v6 = 16;
const v7 = v6 / v6;
const v10 = ("0")?.toLocaleUpperCase;
try { new v10(); } catch (e) {}
try { ("function").italics(); } catch (e) {}
function f18(a19, a20, a21, a22) {
    a20--;
    (1297745164)[1];
    const v25 = a20 ^ a20;
    const o35 = {
        "f": a20,
        ..."i",
        [v7](a27, a28, a29, a30) {
            a27 + a21;
            for (let v32 = 0; v32 < 40; v32++) {
                try {
                    super.n(v25);
                } catch(e34) {
                }
            }
            return a29;
        },
        ..."0",
        __proto__: "d",
        "d": a21,
    };
    o35[0] = o35;
    o35[0];
    return o35;
}
const v38 = f18("d", f18("bigint", -1, v6, "i"), -46829, "d");
v38[0] = v38;
const v39 = f18("bigint", -46829, v3, "i");
v39.f = v39;
135 | 135;
128 + 128;
Float32Array.BYTES_PER_ELEMENT = Float32Array;
let v46 = 16;
v46--;
/p[a-zA-Z0-9]a||bc/gvm;
v6--;
1n ^ "0";
