let v8;
try { v8 = Float64Array.bind(-35381); } catch (e) {}
new Float64Array(9);
try { Float32Array.from(Float64Array); } catch (e) {}
const v13 = new v8(133);
function f14(a15, a16) {
    const t6 = "65537";
    t6.__proto__ = /\p{Script=Greek}(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/guy;
    return a15;
}
v13.toString = f14;
let v21;
try { v21 = Uint32Array(0.277570491571285, 0.277570491571285, 133); } catch (e) {}
const v22 = new v21(0);
class C23 {
    static [v13];
    static #d = 9223372036854775807;
}
C23.e = C23;
new C23();
const v25 = new v22();
const v26 = v25?.constructor;
try { new v26(); } catch (e) {}
new Float64Array();
2147483647 === 2147483647;
0.14431638380799328 >= 0.3031821725579029;
(2147483649 << v25) + 133;
