const v3 = new Float64Array();
let v5;
try { v5 = new v3("toString"); } catch (e) {}
class C6 {
    #m(a8, a9, a10) {
        for (const v11 in this) {
            (delete this?.h).__proto__;
        }
    }
}
class C14 extends C6 {
    static set e(a16) {
        this > a16;
    }
}
new Int8Array(1);
class C20 {
}
C20.toString;
const v22 = [1073741824,1073741823,1376142744,1073741825];
try { v22["find"](); } catch (e) {}
new Uint32Array(4);
new Uint8ClampedArray(1000);
function F32(a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
}
const o37 = {
    "maxByteLength": 1000,
};
new Uint16Array(79);
new Uint8ClampedArray(Uint8ClampedArray);
try {
const t0 = 1000000000.0;
t0(2.220446049250313e-16, Uint8ClampedArray, ...1000000000.0, -82.86062314585524);
} catch (e) {}
function f47() {
    const v49 = ([f47,f47]).buffer;
    const v50 = new v49();
    class C51 extends v49 {
    }
    const v52 = new v5();
    try { v52.reduceRight(); } catch (e) {}
    return v50;
}
new BigInt64Array(7);
new isNaN(4);
class C60 extends TypeError {
}
new C14(512);
new Uint8Array(1073741823);
new C60();
