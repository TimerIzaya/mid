[-1000.0];
const v1 = [-1000000000.0,1e-15,-0.0,1.0,867.5047285164317,Infinity,-580575.4794063286,-6.327341030787682e+307,7541.918252082425];
const v2 = [-3.0,-91.19235008571343,555.9741184007844,-1.7976931348623157e+308];
let v3 = 3;
v3--;
-65536 >>> -65536;
const v7 = -65536 >>> -65536;
function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    a12 - a12;
    a12--;
    const o15 = {
    };
    new Proxy(F9, o15);
    a12 = 1073741824;
    try {
        this.c = v1;
    } catch(e18) {
    }
    try {
        this.b = 1073741824;
    } catch(e19) {
    }
    try {
        this.g = v2;
    } catch(e20) {
    }
}
let v21 = 10;
for (; v21--;) {
    const o25 = {
        "maxByteLength": 3092,
    };
    const v27 = new SharedArrayBuffer(3092, o25);
    new BigInt64Array(v27);
}
try { new F9(v2, v7); } catch (e) {}
const v31 = new F9(v3, -65536);
const v32 = new F9(1073741824, -65536);
const v33 = new F9(v3, 1073741824);
const v34 = v33?.constructor;
try { new v34(v1, v31); } catch (e) {}
const v36 = [-2.216170140955498,-2.2250738585072014e-308,-643865.3403199288,NaN];
const v38 = this?.Int8Array;
try { new v38(v1, v1, v7); } catch (e) {}
const v40 = this?.ReferenceError;
let v41;
try { v41 = new v40(v32); } catch (e) {}
v41.message = v41;
const v42 = this.decodeURIComponent(v36);
v42[40];
try { v42.strike(); } catch (e) {}
