const v0 = [];
const v4 = [1073741824n,1073741824n,1073741824n,1073741824n];
Reflect.apply(v0.concat, v0, v4);
try { new v0(16); } catch (e) {}
const o15 = {
    __proto__: Reflect,
    "d": -4n,
    2: v0,
    "g": 394142370,
};
const v16 = new Float64Array(2741);
new Uint8Array(0);
const v22 = new Float64Array(14);
new Uint32Array(16);
const v27 = v22.__proto__;
try { v27(v16, v16, -4n, v16, 0); } catch (e) {}
function f29() {
    return BigUint64Array;
}
const v31 = Math.log2();
const v32 = [315.3838771878211,0.8321654879979539,1.0,-813011.8421276518];
function f33(a34, a35, a36) {
    const o38 = {
        get d() {
            return a35;
        },
    };
    for (let i = 0; i < 10; i++) {
        delete v32[v31];
    }
    return v0;
}
f33();
new BigUint64Array(256);
this.print(this, this);
const v47 = new Uint8ClampedArray(995);
const v49 = new Int8Array(v47);
const v50 = v49.copyWithin;
try { v47.some(v50); } catch (e) {}
new BigUint64Array(3563);
for (let i56 = 0, i57 = 10; i56 < i57; i56++, i57--) {
    const o67 = {
        "maxByteLength": 268435441,
    };
    const v69 = new ArrayBuffer(1, o67);
    new Uint32Array(v69);
}
new BigUint64Array(3);
const v77 = 1922 % 1922;
v77 == v77;
class C80 {
    static 44 = "EV";
}
new C80();
new Uint32Array(8);
new Uint8ClampedArray(257);
new Date();
const v92 = new Float64Array(255);
v92.join(v92);
Symbol.for(Symbol);
