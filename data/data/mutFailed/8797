function f3(a4, a5) {
    const o19 = {
        [713754322](a7) {
            this[4];
            a5 = 713754322;
            let v9 = delete this?.d;
            v9 >>= v9;
            return -6;
        },
        m(a11, a12) {
            try {
                this.fuck(a12, -9223372036854775807);
            } catch(e14) {
            }
            [a4,f];
            const v17 = [this];
            [f,v17,v17,a11];
            return a5;
        },
    };
    return o19;
}
const v21 = Symbol.isConcatSpreadable;
f3[v21];
const o23 = {
    "call": f3,
};
new Proxy(v21, o23);
const v26 = f3(713754322, -6);
const v27 = f3(-9223372036854775807, -6);
const v28 = f3(-9223372036854775807, 713754322);
const v29 = [v27,v28,v26,v28,v28];
[713754322,v29,-9223372036854775807];
[v26,-9223372036854775807,v29];
[814449.7191885232,-1.0,-1e-15];
[-1000000000000.0,9.994853474154255,994.1213107118851];
[Infinity,-392.9931101082665,2.2250738585072014e-308,-1.7976931348623157e+308];
function f38() {
    return f38;
}
const v41 = new Array(133);
try {
    v41.length = 713754322;
} catch(e42) {
}
const o44 = {
    [v26]: Uint8Array,
};
new Uint8Array(127);
class C48 extends f38 {
    constructor(a50, a51, a52, a53) {
        super();
        function f54() {
            return a53;
        }
        for (let v55 = 0; v55 < 5; v55++) {
            f54();
            %OptimizeFunctionOnNextCall(f54);
        }
    }
}
new C48();
