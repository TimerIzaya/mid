class C3 {
    constructor(a5) {
        [] = "match";
        for (const v6 of a5) {
            const v10 = -"match";
            v10 && -2;
            let v12 = "match" & C3;
            Math.asin(a5);
            v12++;
            -2 - "match";
            v10 / v10;
        }
    }
}
const v17 = new C3(622.7175238846269);
const v18 = new C3(C3);
new C3(C3);
function F20(a22, a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a22;
    } catch(e26) {
    }
    try {
        this.h = a23;
    } catch(e27) {
    }
}
const v28 = new F20("match", v18, "h", v18);
const v29 = new F20(622.7175238846269, v17, v28, "h");
const v30 = new F20(v29, C3, F20, v17);
class C31 {
    static #p(a33, a34) {
        [-1000000000000.0];
        [-110804.89203542541,1.0];
        [-7.778545000328762,-3.0,4.807675049451841,-173.64038855664978,1000000000.0,-2.2250738585072014e-308,146.97887292543032,-1000000000000.0,519719.1876568708,1.7976931348623157e+308];
        const o41 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o41);
        return F20;
    }
}
new v30();
new C31();
new v18();
new Uint8Array(257);
class C50 extends Uint16Array {
    constructor(a52, a53, a54) {
        super(C50);
    }
}
new C50();
