new Uint32Array(254);
new Int32Array(8);
Uint32Array?.call;
function f11(a12) {
    return 1000.0;
}
new Uint32Array(9);
/a+?/udis;
const v15 = /a\D/vdm;
/3Sxyz{1,32}/vdms;
const v18 = new BigUint64Array();
const v20 = [536870888,8];
const v21 = [2147483649,2147483649,-65537,-268435456,10,9223372036854775807];
const o25 = {
    set g(a23) {
    },
    get g() {
        return 8;
    },
    __proto__: 8,
    ...v20,
    4096: v21,
};
const o34 = {
    [v18](a27, a28, a29) {
        class C31 {
            #d = 4096;
            static {
                this.#d;
            }
        }
    },
};
function F36(a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    const v40 = this.constructor;
    const v42 = /[a-zA-Z0-9]/gvisy;
    const v43 = /abc?/gvmy;
    v43[84] &&= v42;
    v43.exec(F36);
    const v53 = new Uint32Array(Uint32Array);
    const o54 = {
    };
    function f55(a56, a57) {
        return BigInt64Array;
    }
    o54.set = f55;
    const t47 = "Q8F";
    new t47(v53, o54);
    /(?=a){1,10}a/ims;
    const t49 = 254;
    const v66 = new t49();
    const v67 = v66.lastIndexOf(F36, a38);
    v67 ^ v67;
    try { new v40(this, a38); } catch (e) {}
    new Uint32Array(127, v15, "Q8F");
    for (let v73 = 0; v73 < 5; v73++) {
    }
}
function F74() {
    if (!new.target) { throw 'must be called with new'; }
    class C76 {
    }
    for (let i79 = 0, i80 = 10;
        i79++, i79 < i80;
        (() => {
            const v85 = [601759695];
            const v86 = [1073741824,1073741823,1376142744,1073741825];
            function f87() {
                for (const v91 of Array(4087)) {
                }
                return 4087;
            }
            f87();
            function f93(a94, a95, a96, a97) {
                a97 - a97;
                function f99() {
                    return a94;
                }
                function f100(a101, a102) {
                    return a101;
                }
                try { f100(); } catch (e) {}
                f100(v86, C76);
                try { v86["find"](..."find", a97, ...v85, ...v86); } catch (e) {}
                return C76;
            }
            for (let v107 = 0; v107 < 10; v107++) {
                f93(v107, f93, i79, v107);
            }
        })()) {
    }
}
const v111 = new F36();
const t94 = v111.constructor;
new t94(9);
