let v1 = 1558071277;
class C3 {
    n(a5, a6) {
        const v8 = 1940694780n ^ 1940694780n;
        a6[a6] = 1940694780n;
        try { SharedArrayBuffer.setFullYear(this, this, v8); } catch (e) {}
        JSON[14] ||= -1.7976931348623157e+308;
        [-7.97364668777284,-1.8947996307466317e+307,1000000.0,0.9967534434146857,1000000000000.0,5.0,0.7698647248159438,4.0];
        [-Infinity,-3.0,8.255843065510792,-5.0,1000000000.0];
        [1000000000000.0,2.3454193769844117e+307,-2.220446049250313e-16,0.7234598154794565,2.2250738585072014e-308,-2.2250738585072014e-308,-8.62697689571815e+307];
        try { this.next(SharedArrayBuffer); } catch (e) {}
        SharedArrayBuffer?.next;
        a6[3504022701] |= a6;
        const v19 = (a6 = -1.7976931348623157e+308) && v1;
        let v21 = v1++ ^ v19;
        36244 + v1;
        return v21--;
    }
    #n(a25, a26) {
        a26 >>> this;
        return C3;
        return v1;
    }
}
const v28 = new C3();
new C3();
new C3();
const v34 = [8,-897486742,268435441,536870912,36812];
[-43838,-12,-9007199254740992,5];
[256,1996345550];
function F37() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 3872;
    } catch(e40) {
    }
}
const v41 = new F37();
const v42 = new v28();
new F37();
65537 % F37;
try {
    v34.__proto__ = v28;
} catch(e45) {
}
function F49(a51, a52, a53) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = v28;
    try {
        this.b = a52;
    } catch(e54) {
    }
}
const o58 = {
    "execution": -1.7976931348623157e+308,
    "type": "major",
};
gc(o58);
new F49(4294967295, F37, v41);
new F49(62324, F49, v42);
const v63 = Symbol.toPrimitive;
class C65 {
    constructor(a67, a68) {
        a67++;
        const v70 = this.constructor;
        try { new v70(-15n); } catch (e) {}
        a67 - a67;
    }
}
const o74 = {
    [v63]() {
    },
};
