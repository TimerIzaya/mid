class C3 {
    static ["split"] = 1000000.0;
    3;
    [536870887];
    static set g(a5) {
        try {
            super.keys();
        } catch(e7) {
        }
    }
    valueOf(a9) {
        let v10;
        try { v10 = a9(C3, "split"); } catch (e) {}
        let v11;
        try { v11 = v10.getUTCMonth(); } catch (e) {}
        let v12;
        try { v12 = v11(a9, 536870887, this); } catch (e) {}
        const v13 = v12 ^ v11;
        try {
            super.imul(a9, v13, 1000000.0, "split", v13);
        } catch(e15) {
        }
        return 1000000.0;
    }
    #g;
}
new C3("split", C3, 536870887);
new C3();
new C3();
const o28 = {
    "maxByteLength": SharedArrayBuffer,
};
const v30 = new SharedArrayBuffer(217, o28, 75);
try { v30.grow(); } catch (e) {}
function F49(a51) {
    if (!new.target) { throw 'must be called with new'; }
}
const v52 = new F49(536870889, 61277, SharedArrayBuffer);
with (v52) {
    function F53(a55, a56, a57) {
        if (!new.target) { throw 'must be called with new'; }
        const t41 = this.POSITIVE_INFINITY;
        t41(Float64Array);
    }
    let v60 = 10;
    for (;
        (() => {
            const v61 = v60--;
            v61 >>> v61;
            return v60;
        })();
        ) {
    }
}
