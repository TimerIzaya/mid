function F4(a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a6;
    } catch(e7) {
    }
}
const v8 = new F4(-65535);
const v9 = new F4(false);
const v10 = new F4(-8895);
class C11 {
    e;
    constructor(a13, a14, a15) {
        const o16 = {
        };
        try {
            o16.d = v8;
        } catch(e17) {
        }
        try {
            const o18 = {
            };
            o18.d = v8;
            o18.f = false;
        } catch(e19) {
        }
        try {
            const o20 = {
            };
            o20.d = v8;
            o20.f = false;
            o20.c = this;
        } catch(e21) {
        }
        try {
            const o22 = {
            };
            o22.d = v8;
            o22.f = false;
            o22.c = -8895;
        } catch(e23) {
        }
        const o30 = {
            set e(a28) {
                return;
            },
        };
    }
}
new C11(v8, v10, 14);
new C11(v9, v9, -65535);
new C11(v9, false, 14);
Math.cos(-1073741824);
[155533.8602852358,2.0];
function F43() {
    if (!new.target) { throw 'must be called with new'; }
    Array(19793);
    for (const v48 of v9) {
        v9[658291203] = null;
        Math.cbrt(19793);
        Math.exp(0.4890055133608564 || this);
    }
    const v54 = [19793,19793,19793,19793];
    [v54,v54];
    ("of").replaceAll("of");
    [Array,Array,Array,Array] >= Uint16Array;
}
new F43();
new F43();
