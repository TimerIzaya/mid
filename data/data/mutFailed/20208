function f3(a4, a5) {
    const o16 = {
        [a4](a7) {
            delete a7?.[-4294967297];
            return a7;
        },
        set a(a11) {
            try { a11(536870888, this); } catch (e) {}
        },
    };
    return o16;
}
f3(-4294967297, -524738165);
f3(-4294967297, -524738165);
f3(-524738165, -4294967297);
[11];
[-1745621349,-484376218,-536870912,65535,268435440,1000,2,3];
[-1073741824,65535];
const v27 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v28 = [601759695];
const o40 = {
    "c": -4294967297n,
    [2122](a32, a33) {
    },
    "maxByteLength": -128,
    valueOf(a35, a36) {
        return -4294967297n;
    },
    "e": v27,
    "e": -268435456,
    "maxByteLength": 2122,
    "arguments": v27,
    ...v28,
    valueOf(a38, a39) {
        return -268435456;
    },
    "c": 54893,
};
new Float32Array(2122);
new Int16Array(4096);
Array();
for (let v50 = 0; v50 < 10; v50++) {
    Array(36862);
}
new Uint8ClampedArray([515943.2030917471,-1e-15,1.7976931348623157e+308,0.19475803117559898,-546414.0415788401,285129.04068811354]);
function f59(a60, a61, a62, a63) {
    function f64() {
        const o68 = {
            valueOf(a66, a67) {
                return a67;
            },
        };
        o68.valueOf();
        return o68;
    }
    f64();
    f64();
    return f59;
}
function f72(a73, a74, a75, a76) {
    function f77(a78, a79, a80, a81) {
        function f82(a83, a84) {
        }
    }
    a76(2, f77, 255);
    const o89 = {
        n(a87, a88) {
            return a88;
        },
    };
    return -65535 == 0;
}
for (let v93 = 0; v93 < 625; v93++) {
    f72(Uint8Array, 2);
}
function f95() {
}
function f96(a97, a98, a99) {
}
