const v1 = -Infinity;
class C3 {
    constructor(a5, a6) {
        const v7 = this?.__defineGetter__;
        try { new v7(a6, this); } catch (e) {}
        a6.e = a6;
        ("toString").length;
    }
    #p(a14, a15) {
        function F16(a18, a19) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.h = "toString";
            } catch(e20) {
            }
            try {
                this.d = a19;
            } catch(e21) {
            }
            try {
                this.e = a18;
            } catch(e22) {
            }
        }
        new F16(a14, v1);
        const v24 = new F16("9", "9");
        new F16(v24, "toString");
        return F16;
    }
}
C3.e = C3;
const v26 = new C3(C3, C3);
v26.f = v26;
new C3("9", v26);
new C3(v26, "9");
129n != 129n;
-1265452014n | -1265452014n;
-14n * -14n;
-2147483649n ^ -2147483649n;
new Float32Array(16);
new Float32Array(1408);
new Uint32Array(256);
-13 - -13;
function f51(a52, a53, a54) {
    const o62 = {
        n(a56, a57, a58) {
            return f51;
        },
        valueOf(a60, a61) {
            return a61;
        },
    };
    return o62;
}
const v63 = f51();
const t54 = f51();
t54[-2147483649] *= -13;
for (const v65 in v63) {
}
