const v1 = new Map();
class C2 {
    constructor(a4) {
        v1[this] = Map;
        try { v1.forEach(a4); } catch (e) {}
    }
    toString(a7, a8) {
        /Zfoo|(bar|baz)|quux/dis;
        const v10 = /\xe2\x81\xa3/gudms;
        /zRxyz{93}/vm;
        return v10;
    }
}
new C2(v1);
const v14 = new C2(Map);
new C2(v14);
[11,-10,-9223372036854775808];
function F19(a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    function F24(a26, a27, a28, a29) {
        if (!new.target) { throw 'must be called with new'; }
        for (let v30 = 0; v30 < 100; v30++) {
            const o33 = {
                valueOf(a32) {
                },
            };
            function f34(a35, a36, a37) {
                const o39 = {
                    "a": o33,
                    get d() {
                    },
                };
            }
            f34(undefined);
        }
    }
    new F24();
}
new F19(157382.34669750673);
new F19();
class C44 {
}
class C45 extends C44 {
    constructor(a47, a48, a49) {
        super();
        const o51 = {
        };
        gc(o51);
    }
}
new C45();
for (let i56 = 0, i57 = 10; i56 < i57; i57--) {
}
[-2147483647,129,536870912];
[32607,-4,-6,9007199254740992,6,1073741824,1905577154,2063032835,-1024];
new Date();
function f74() {
    return "NaN";
}
class C75 {
    set f(a77) {
        const o78 = {
            "d": "reduce",
            "c": Date,
            "f": a77,
            "g": a77,
            "a": a77,
            597679773: a77,
        };
    }
    constructor(a83, a84) {
        const v85 = [this,Date,this];
        [v85];
        [Date,"string",v85];
        ("NaN").length;
    }
}
new C75("NaN", "NaN");
const v91 = new C75(f74, "reduce");
new C75("reduce", v91);
let v96 = 0;
while (v96 < 5) {
    try {
        Date();
    } catch(e100) {
    }
    Date[Date];
    /3\u0060/gvs;
    /ab|c/vdms;
    /a\w\11(?<a>.)\k<a>/gd;
    const o105 = {
    };
    v96++;
}
class C107 extends C75 {
    static d = 9007199254740992;
    323 = 3;
    valueOf(a109, a110, a111, a112) {
        for (let v113 = 0; v113 < 32; v113++) {
            Date["p" + v113] = v113;
        }
    }
    e;
    [9007199254740992];
}
C107.d;
for (let v118 = 0; v118 < 32; v118++) {
    Date["p" + v118] = v118;
}
new C107();
new C107();
("boolean").repeat(1000000.0);
function f127(a128, a129) {
    const o132 = {
        set d(a131) {
        },
    };
    const v135 = new Int8Array(268435456);
    return v135;
}
