Uint16Array.prototype = Uint16Array;
new Uint16Array(5);
const v8 = new Uint8Array(1);
403 === 403;
const v12 = new Int32Array(-256);
v12[377];
class C14 extends Int32Array {
    #toString(a16, a17, a18, a19) {
        a18[Symbol.matchAll];
        v8[4] >>>= 5;
        return 6;
    }
    valueOf(a25, a26, a27, a28) {
        try { new a26(a27); } catch (e) {}
        let [] = this;
        let v30;
        try { v30 = a26(a27); } catch (e) {}
        return v30;
    }
}
const t20 = 1;
const v31 = new t20();
try { v31.reverse(); } catch (e) {}
new C14();
new C14();
/a\s[B{1z}(x)(x)(x)\2]/gdmy;
