function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -65535;
    } catch(e3) {
    }
    try {
        this.a = -65535;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
const v7 = new v6();
const v9 = new v7();
const v13 = [F0,v7,64n,v9];
const v14 = [v13,v5,Map,Map];
[255n,v7,v6,v14,F0];
new Int16Array();
for (let v19 = 0; v19 < 32; v19++) {
    v5["p" + v19] = v19;
}
new Int8Array(628786973);
new BigInt64Array(257);
const v34 = [v6.__defineGetter__,v9];
const v36 = Reflect.apply(v13.find, v7, v34);
function f37() {
    "p" + -13;
}
%PrepareFunctionForOptimization(f37);
f37();
do {
    try { new v36(v14); } catch (e) {}
    let v43 = new F0();
    v43++;
} while (0 < 64n)
%OptimizeFunctionOnNextCall(f37);
f37();
