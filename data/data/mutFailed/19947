function f0() {
    const o9 = {
        ..."-4",
        get f() {
            const t4 = "-4";
            t4[Symbol.asyncIterator] = this;
            const v7 = "-4" * -921083.587183985;
            v7 & v7;
            return -1024;
        },
        "c": "-4",
        "g": -1024,
        "d": -921083.587183985,
        6: "-4",
        "e": -921083.587183985,
    };
    return o9;
}
f0();
f0();
f0();
new Date();
[-1250420484];
[-1639709240,3,64,4294967297,-2,7];
[-3,-6,-1024,3];
new BigInt64Array(5);
const v29 = new Int16Array(1466);
new Int32Array(2772);
class C34 {
    #valueOf(a36, a37) {
        const v39 = WeakMap();
        "m" > v39 ? "m" : v39;
        return this;
    }
    static set f(a43) {
        const o46 = {
            "maxByteLength": 129,
        };
        let v48;
        try {
        const t0 = 268435439;
        v48 = t0(129, o46, 129, 129, 129);
        } catch (e) {}
        Int16Array >> a43;
        v48?.[129];
        delete o46[o46];
        Reflect.construct(BigInt64Array, [v48], C34);
        SharedArrayBuffer();
        const t43 = "m";
        t43();
    }
}
const v57 = new C34();
const v60 = ("g").normalize("m");
v29[-932567945];
function F62(a64, a65, a66, a67) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 2772;
    } catch(e68) {
    }
    try {
        this.f = a67;
    } catch(e69) {
    }
}
new F62(-2142125243n, -2142125243n, 2772, "g");
new F62(-4294967297n, -4294967297n, 2772, "g");
new F62(215252871n, -4294967297n, 5, v60);
const v73 = new C34();
const t70 = v73.constructor;
new t70();
const v76 = v73.__lookupGetter__;
try { v76(); } catch (e) {}
const v78 = new C34();
function f79() {
    return C34;
}
f79.d = f79;
function F80(a82, a83, a84, a85) {
    if (!new.target) { throw 'must be called with new'; }
    a84.valueOf();
    a85.e = a85;
    const v87 = a82?.constructor;
    try { new v87(v73, a84, a82, F80); } catch (e) {}
    a85.toLocaleString();
}
new F80("m", C34, v78, C34);
const v91 = new C34(v57, v73, "m", v57);
new F80(v91, v91, v73, v91);
