function f0() {
    -4294967297 >>> -4294967297;
    const o15 = {
        "h": -689.6376153762385,
        p(a6, a7) {
            this.h -= -4294967297;
            return -4294967297;
        },
        "a": -5.0,
        "g": -5.0,
        3: -4294967297,
        "e": -5.0,
        o(a10, a11) {
            const o12 = {
                [-689.6376153762385]: -689.6376153762385,
                "a": this,
                "g": -4294967297,
            };
            this[Symbol.toStringTag] = this;
            return -689.6376153762385;
        },
    };
    return o15;
}
const v16 = f0();
const v17 = f0();
const v18 = f0();
let v19 = 586399890;
v19--;
const v23 = [9.544027790583012];
([-541.8700259029788,1.0,0.03689751115811557,1.0,671.8283169086039,2.0,668399.4398906992,-2.2250738585072014e-308,-1000.0])[1];
const v26 = [NaN,876057.9378059141];
function F27(a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    a29 % a29;
    try { a30.entries(); } catch (e) {}
    try {
        this.b = a29;
    } catch(e33) {
    }
}
F27.d = F27;
let v34 = new F27(1944394889, v26);
const v35 = v34?.constructor;
try { new v35(v17, v17); } catch (e) {}
new F27(512, v26);
const v38 = new F27(1944394889, v23);
v38.b;
class C40 extends f0 {
    h = v26;
    o(a42, a43, a44) {
        v16[-1] = this;
        return a42;
    }
    static set f(a49) {
        e = v16;
        delete v26?.length;
        v34 <<= this;
    }
    static 144 = v19;
    static #f = v34;
}
new C40();
new C40();
new v26();
const v54 = [0.09625845130830724,-1e-15,0.40226168662621953];
const v55 = [-700765.6455759181,-1.0,-1e-15,238.56580086181475,-6.99438605118472e+307,0.8641795299038513,1000000000000.0,0.6448161003466354];
try { v55.with(v55, v55); } catch (e) {}
const v57 = [-1.7976931348623157e+308,585278.7631767453,-1.0,-2.0];
2124 - 2124;
const v64 = Array();
function f65(a66, a67, a68, a69) {
    a66 / a66;
    a68 === a68;
    const o72 = {
        [-9007199254740991]: 512,
        [a68]: v55,
        "b": a66,
    };
}
try { f65(v19, v17, v17, v17); } catch (e) {}
f65(4294967297, f65, 4294967297, 2124);
f65(2124, v57, v54, v57);
new Uint16Array(52);
const v81 = new Uint32Array(2128);
for (let v82 = 0; v82 < 100; v82++) {
    v82 >> v82;
    f65(512, v81, v81, v64);
}
for (let v85 = 0; v85 < 32; v85++) {
    try { ("p").localeCompare(v18); } catch (e) {}
}
