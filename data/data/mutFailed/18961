const v0 = /o[x\dz]/gdimy;
function f1(a2) {
    return f1;
}
try {
    const t5 = null;
    t5.valueOf = v0;
} catch(e4) {
    e4.stack;
}
/(?:ab)+a[a-z]?/vdi;
const v7 = /(?<!)Ei(x)(x)(x)\1a\nb\bc*/gudim;
v7.b = v7;
const v8 = [-1024];
Object.defineProperty(v8, "b", { enumerable: true, value: v8 });
const v9 = [-536870912,-12,65536,-7460,12728,-10093,127,6934,-1283943197,127];
[8,5];
[1,10,-6,14,-55430,-8,-1847,10,-9,1104055629];
const v12 = [-2147483647,-57120,-9223372036854775808,127,14,-268435456,4294967295];
[9007199254740992,-36279647,-237758175,-33636,-1073741824];
class C15 {
    constructor(a17, a18, a19, a20) {
    }
    /*
    constructor(a22, a23, a24, a25) {
    }
    */
}
function F28(a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a30;
    } catch(e32) {
    }
    try {
        const v35 = new Float64Array(216);
        new Uint8Array(v35);
        a30.b = 2.0;
    } catch(e38) {
    }
}
const v39 = new F28(v7, v0);
const v40 = new F28(v39, v12);
new F28(v8, 2.0);
function f42() {
    for (let v43 = 0; v43 < 5; v43++) {
        v43++;
        v43 / v43;
        function f46() {
            return f42;
        }
    }
    return f42;
}
if (v40) {
    let v49;
    try { v49 = v9.toSorted(Array); } catch (e) {}
    v49.valueOf = Array;
    v12[3112036848] >>= v49;
} else {
    try { v40.splice(); } catch (e) {}
}
new WeakMap();
class C55 {
}
async function f56(a57, a58, a59, a60) {
    (await C55).call(8, Uint16Array);
    return a58;
}
const v63 = [-48288,15,-63536,268435456];
Object.defineProperty(v63, Symbol.toPrimitive, { enumerable: true, value: f1 });
class C66 extends Array {
    constructor(a68, a69, a70) {
        Symbol.hasInstance.toString();
        new Uint8Array(268435440);
        super(a68);
    }
}
new C66(178);
const v78 = new C66();
new Map();
const v82 = [-20096,4294967296,-65537,-2];
v82.constructor = f42;
const v84 = [[v78,v78,v78,v82]];
Object.defineProperty(v84, "valueOf", { writable: true, configurable: true, enumerable: true, value: f1 });
v82["slice"](v84);
const v89 = new C66();
for (let i = 0; i < 5; i++) {
    v78[v63] = v89;
}
