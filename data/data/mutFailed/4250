[-164630892,4294967297,60673,4,58363,131076113];
[16,2004191035];
const v5 = [4294967297,268435441,65537,536870889,-2136816085];
new Date(Uint8Array);
function F10(a12) {
    if (!new.target) { throw 'must be called with new'; }
    a12 ^ a12;
    const v14 = this?.constructor;
    try { new v14(3n); } catch (e) {}
}
function f16(a17, a18) {
    const v19 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
    (a18 && a18) <= v19;
    return a17;
}
v5.toString = f16;
try { v5.pop(); } catch (e) {}
class C24 extends 2886 {
}
const v25 = new C24();
v25.constructor;
-25283n >> (-25283n && -25283n);
2886 ^ 2886;
new Int16Array(2886);
class C33 {
}
new C33();
function f35() {
}
const v36 = [155533.8602852358,2.0];
const v40 = Array(19793);
for (const v41 of v40) {
    v36[658291203] = null;
    Math.g = Array;
    f35--;
}
const v46 = new BigUint64Array(5);
function f47() {
    const v49 = Symbol.unscopables;
    v5[v49] = v49;
    return v5;
}
v46.constructor = f47;
try { v46.slice(5, v5); } catch (e) {}
72 / 72;
new Int32Array(72);
const v56 = new f16();
const o57 = {
    ...v56,
};
Date | v40;
const v61 = new Int8Array(16);
const o63 = {
    "type": "function",
};
class C64 {
}
const v65 = new C64();
new o63(v65);
v61.toSorted();
