const v0 = [-52796];
const v1 = [1,4];
const v2 = [-4096,9007199254740992,3,64,-4294967295,-4096];
let v4 = -578534226n;
4294967297n << 4294967297n;
Set.g = Set;
const v8 = new Set();
function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    const v13 = this?.constructor;
    try { new v13(v4, this); } catch (e) {}
    a11[5] = a11;
    a12[5] = a12;
    a12.length = a12;
    try {
        this.c = a12;
        a11 = (v4 = a11);
        var d = v0;
        v8 ** 4294967297n;
        let {"length":v16,} = v1;
    } catch(e17) {
        e17.message = e17;
        e17.g = e17;
    }
}
try { new F9(v2, v2); } catch (e) {}
const v19 = new F9(v4, Set);
const v20 = new F9(479882008n, v8);
const v21 = new F9(4294967297n, v20);
function f22(a23, a24) {
    a24.c = a24;
    try { v4(a23, a23, v21, a24, a23); } catch (e) {}
    return v19;
}
const v26 = f22?.toString;
try { new v26(); } catch (e) {}
f22.arguments = f22;
f22(v0, v21);
function f29(a30, a31) {
    const v32 = [1000000000.0,2.2250738585072014e-308,-3.0,-2.2250738585072014e-308,-2.2250738585072014e-308,-6.525028373249204e+307,-7.851646360254072e+307,0.6785915059434757,-0.0];
    v32[8] = v32;
    class C33 {
    }
    let v34;
    try { v34 = C33.toString(); } catch (e) {}
    v34[15];
    const v37 = Symbol.replace;
    const v39 = v37.description;
    try { v39.toWellFormed(); } catch (e) {}
    Symbol.for(v39);
    C33[v37] = v32;
    return f29;
}
try { f29(v2, v21); } catch (e) {}
%PrepareFunctionForOptimization(f29);
const v43 = f29();
v43.arguments = v43;
const o44 = {
};
o44.h = o44;
try {
    o44.c = v20;
} catch(e45) {
}
try {
    const o46 = {
    };
    o46.g = o46;
    o46.a = o46;
    o46.c = v20;
    o46.d = v43;
} catch(e47) {
}
try {
    const o48 = {
    };
    o48.h = o48;
    o48.c = v20;
    o48.d = v43;
    o48.h = v8;
} catch(e49) {
}
try {
    const o50 = {
    };
    o50.b = o50;
    o50.c = v20;
    o50.d = v43;
    o50.h = F9;
} catch(e51) {
}
%OptimizeFunctionOnNextCall(f29);
f29();
