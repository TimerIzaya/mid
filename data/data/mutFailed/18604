const v0 = [-2.0,5.9271828063908,1.7976931348623157e+308,1000000000.0,1000000.0];
const v1 = [2.0,-515452.9895453408,-793725.9079119931,-5.0,0.3170992106413377,885358.5382692055,-475203.716097331];
const v2 = [0.17616298605177194,454.9793226161544,2.2250738585072014e-308,8.645456019492999e+307,-2.220446049250313e-16,1.187241123571492e+308];
class C3 {
    static [v2];
    static #b;
    [v1] = v2;
    constructor(a5) {
        const v7 = [427121.2083434381,0.23444690169111637,0.0,4.0,-0.0];
        [1.7752025705551677,1.0123848819844072e+308,-1.7976931348623157e+308,0.7183848869630544,4.0,4.0];
        [0.5554825283766776,-1000.0,705.8289355812792,-704.4993999184451,-1000000.0,460.167304542053,1.094229974173518e+308,2.220446049250313e-16,39.061325753032406];
        const v10 = /(\1a)/gums;
        const v11 = /V(?:a{5,1000000}){3,1000000}/vims;
        const v12 = /(?<a>.)\k<a>?/vdimsy;
        for (let v13 = 0; v13 < 27; v13++) {
            v10.compile(v11, v11, v13, v13).lastIndex;
        }
        let v16;
        try { v16 = v12(v10, v11, v11, v10); } catch (e) {}
        %VerifyType(v16);
        const v17 = [v12,v11,v10];
        v17[2] = v17;
        const v18 = [v17,v11,v12,v17,v17];
        v18[2] = v18;
        [v12,v10,v10];
        let v20 = 8;
        v20--;
        new BigInt64Array(v11, v10, v16);
        const v24 = new BigInt64Array(v20);
        new BigUint64Array(10);
        const v30 = new Uint8Array(7);
        const t31 = v30.constructor;
        new t31(Uint8Array, v24, v24);
        try { SharedArrayBuffer.bind(v17); } catch (e) {}
        function f36() {
            3.4890473589784586e+307 < 3.4890473589784586e+307;
            let v39 = 1000000000000.0;
            const v40 = v39--;
            -v40;
            -v18 && v18;
            class C47 {
                static #m(a49) {
                }
                constructor(a51) {
                    const v53 = new Float32Array();
                    let v54;
                    try { v54 = v53.entries(); } catch (e) {}
                    v54.next();
                    const v56 = new Uint16Array(12, -4294967296, v40);
                    new Float32Array(v56);
                }
            }
            new C47();
            new C47();
            Symbol.iterator;
            try { v24.reduce(SharedArrayBuffer, 12); } catch (e) {}
            let v63 = 0;
            v63++;
            const v65 = new C47();
            new C47();
            const v67 = new C47(-4294967296);
            [];
            [257828.6336153492,v67,v65,v67];
            const v70 = [];
            v70[0];
            class C72 extends C47 {
            }
            new C72();
            const v74 = v70.constructor;
            try { v74.isArray(v70); } catch (e) {}
            class C76 extends v74 {
            }
            C76.a = C76;
            const v77 = new C76();
            const v78 = v77.constructor;
            try { v78.bind(); } catch (e) {}
            const o80 = {
                "e": v70,
                __proto__: v17,
                [v18]: v30,
                "h": 257828.6336153492,
            };
            try { o80.e(BigUint64Array); } catch (e) {}
            return SharedArrayBuffer;
        }
        %PrepareFunctionForOptimization(f36);
        f36();
        %OptimizeFunctionOnNextCall(f36);
        f36();
        const o84 = {
        };
        new Proxy(v7, o84);
    }
}
const v87 = new C3(v0);
const v88 = new C3(v87);
new C3(v88);
new Int32Array(3966);
new Uint8ClampedArray(128);
new Uint32Array(3);
function f102() {
}
const v103 = /(?:a*)+q(?<a>.)/guds;
v103.constructor = f102;
function f104(a105) {
    const v106 = a105.constructor;
    new Uint8ClampedArray(1000);
    try { v106(a105, f102); } catch (e) {}
    class C111 {
    }
    return f104;
}
for (let i114 = 0, i115 = 10; i114 < i115; i115--) {
    for (let v122 = 0; v122 < 50; v122++) {
        f104(v103);
    }
}
