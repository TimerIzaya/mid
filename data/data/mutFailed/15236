class C1 {
    constructor() {
        const v3 = this.g;
        function F4(a6, a7) {
            if (!new.target) { throw 'must be called with new'; }
            a6.name = a6;
            a7 && a7;
            try {
                this.b = this;
            } catch(e9) {
            }
            try {
                this.f = this;
            } catch(e10) {
            }
        }
        F4.prototype = F4;
        const v11 = new F4(F4, false);
        Int32Array.e = Int32Array;
        const v15 = Int32Array.bind().name.normalize();
        try { v15.sup(); } catch (e) {}
        -5345 - -5345;
        Math.sin(-5345);
        new F4(v11, false);
        new F4(false, v3);
    }
}
function f23() {
    return -2147483647;
}
class C32 extends f23 {
    p(a34, a35) {
        class C42 {
            static #p(a44) {
                this.#p();
            }
        }
    }
}
C32.name;
const v47 = new C1();
const v48 = v47?.constructor;
try { new v48(); } catch (e) {}
const v50 = new C1();
const v51 = new C1();
function f52() {
    return C1;
}
class C53 extends f52 {
    9 = v47;
    static #a;
    static #m(a55, a56, a57) {
        try {
            f52();
        } catch(e59) {
        }
        function F60(a62, a63, a64, a65) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.h = a63;
            } catch(e66) {
            }
        }
        const v67 = new F60(C1, C1, a57, a55);
        const v68 = new F60(v67, v51, v47, v67);
        new F60(v67, v68, v51, f52);
        return a56;
    }
}
new C53();
const v71 = new C53();
const v72 = v71?.__defineGetter__;
try { new v72(false, false); } catch (e) {}
const v74 = new C53();
function* f78(a79, a80) {
    [["4rCT",v74,[v71,a80,f52()],v50],"4rCT","4rCT","bigint",false];
    yield* "4rCT";
    return a80;
}
const v85 = f78?.apply;
try { new v85("4rCT", v51); } catch (e) {}
f78("uU7", "4rCT");
Date.d = Date;
new Date();
const v90 = [];
function f91() {
    const o92 = {
        ...v90,
        "c": v90,
        "e": v90,
        "f": v90,
        "arguments": v90,
        __proto__: f91,
    };
    v90.e = o92;
    const v94 = [1073741824,1073741823,1376142744,1073741825];
    try {
        v94.findLast();
    } catch(e96) {
        const v97 = e96?.constructor;
        v97.e = v97;
        v97();
    }
    65537 == 4096n;
    const v103 = new Int32Array(1024);
    v103[127];
    for (const v105 of v103) {
        try { new SharedArrayBuffer(v105); } catch (e) {}
        const o109 = {
            "maxByteLength": 1293466293,
        };
        o109.maxByteLength;
        new SharedArrayBuffer(1796, o109);
    }
    return v90;
}
f91();
const v114 = f91();
try { v114.toString(); } catch (e) {}
f91();
