const v0 = /(?=a){0,10}a/gmsy;
const v1 = /2(?:a+)*Gwxyz{0,1}*/gvdis;
const v2 = /[\cZ]/uis;
class C3 {
    #valueOf(a5, a6) {
        a5[0] = v2;
        try {
            super.valueOf(v2);
        } catch(e8) {
        }
        return -32176435n;
    }
    static 2 = v2;
    6 = v1;
    [v2];
}
new C3();
const v13 = new C3();
new C3();
const v15 = [-46187,-4294967296,-4,-2,2147483647];
new Uint8ClampedArray();
const v18 = /8/vdiy;
try {
    b = v18;
} catch(e19) {
} finally {
}
const v20 = [1764954396];
[3,-926607389,-15,377072826,10];
class C25 {
    constructor(a27, a28, a29, a30) {
        const v35 = 282959.09144047904 >> 2.963855750256441e+307;
        const v36 = -8 + 2.963855750256441e+307;
        Math.imul(this, v36);
        Math.acos(v36);
        ~-2147483649;
        Math.sinh(282959.09144047904);
        -v35;
    }
    257 = 2.963855750256441e+307;
}
const v42 = new C25(v15, v2, v0, v20);
const v43 = new C25(v42, v13, v2, v1);
new C25(v42, v43, v43, v43);
const v48 = new BigInt64Array(4046);
function f51(a52, a53) {
    a52++;
    let o56 = {
        "d": a52,
        ...a52,
        get e() {
            return a53;
        },
    };
    [,...o56] = v48;
    a53[4046];
    const o60 = {
        "maxByteLength": 3035,
    };
    new ArrayBuffer();
    new Float32Array();
    return 115;
}
f51(4046, 3768);
f51(4046, 4046);
