class C3 {
    #valueOf(a5) {
        try {
            this.#valueOf(a5);
        } catch(e7) {
        }
        try {
            this.__proto__ = this;
        } catch(e8) {
        }
        function f9(a10) {
            return a10;
        }
        const v13 = new Int8Array(2509);
        new Date(..."undefined", "undefined", ...v13);
        return a5;
    }
    #g = 127;
    static #f;
}
new C3();
new C3();
function f19() {
    return f19;
}
function f20(a21, a22) {
    const o23 = {
    };
    o23.g = o23;
    return o23;
}
const v24 = new C3();
new Int32Array(64);
new BigInt64Array(16);
new Uint16Array(4038);
class C37 {
    constructor(a39, a40) {
        function F44(a46) {
            if (!new.target) { throw 'must be called with new'; }
            const v47 = this.constructor;
            try { new v47(); } catch (e) {}
            function f49(a50, a51, a52, a53) {
                for (let v54 = 0; v54 < 5; v54++) {
                    (2136873598).constructor.parseFloat(f49);
                }
                return f49;
            }
        }
        new F44();
    }
}
const v60 = new C37(C37, 256);
const v61 = new C37(v60, v60);
v61.length = v61;
try {
    BigInt(132.432626643787);
} catch(e65) {
}
new C37(v60, 256);
const v76 = new Date();
v76.getDate;
const v78 = Date.constructor;
let v79;
try { v79 = new v78(v78, v24); } catch (e) {}
typeof v79 === "symbol";
const v90 = new Date();
v90.setFullYear(Date, 3811);
Array(36862, Date.arguments, 256 & 256);
class C97 {
}
const v102 = new Uint8Array(2707, 2707, 128);
let v103;
try { v103 = v102.findLastIndex(v102, v102); } catch (e) {}
const o104 = {
    [v103]: Uint8Array,
};
function f105(a106, a107) {
    return a106;
}
const v108 = new C97();
const v109 = new C97();
-(536870912n << 536870912n);
v108[f105] >>> v109;
const v123 = /8[\cA]v/uisy;
function f124(a125, a126) {
    return 536870912;
}
v123[Symbol.toPrimitive] = f124;
