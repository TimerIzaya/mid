function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 35047;
    } catch(e3) {
    }
    try {
        this.f = 35047;
    } catch(e4) {
    }
}
new F0();
new F0();
new F0();
[5,255,-28152,127,-7,-60724];
[4294967295,4294967295,-4294967297,-65536,2088654356,-35422,-39536,325840427];
[-1463296240,1073741824,1843012852,-9658];
new Uint16Array(1637);
new Int16Array(257);
new Uint16Array(9);
[-9007199254740990,268435441];
[-37207,127,-4,-2147483649,65535,-1024,-536870912];
[4294967297,-256,8,1204244361,536870887];
[4,268435456,-1988579072,-9007199254740991,-31917];
[-1257322457,8,127,-14,39653,128,9007199254740990];
const v25 = [9007199254740990,16,-65536,7,10,9223372036854775807,16,4,1073741824];
let v26 = [29915,-9007199254740990,9];
const v27 = [39049,-2147483647,9007199254740991,30221,268435456,-2147483647,41987];
const v28 = [2147483647,-32974,7,-54836,-9,-15,10000];
const v29 = [268435440,49273,-15,214837996,-12,65536,1291301446,-65535];
try { v29.concat(v27); } catch (e) {}
if (v27 <= v28) {
    v25 ** v27;
    v26 += v28;
} else {
    var d = v28;
}
[24691,802039630,-9223372036854775808,-27820,-1112311792,-26767,1098810331];
[881994048,268435456,1,1024,39940,8242,4740,-12,1024,1073741825];
const t37 = 2931;
new t37();
const v40 = new Int32Array(1);
v40[0] = v40;
const v41 = (a42, a43, a44) => {
    let v45 = a42 & a42;
    ({"h":v45,"length":a42,...v45} = a44);
    return a44;
};
const v47 = v40 instanceof BigInt64Array;
v47 || v47;
let v49 = gc;
try { v49.bind(v29); } catch (e) {}
const v51 = v49();
const v52 = ("object").trim();
try { v52.sup(); } catch (e) {}
v49 /= v51;
