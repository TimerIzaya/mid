const v0 = [-7,-1213775189];
function f1() {
    function F2() {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.h = 268435439;
        } catch(e5) {
        }
    }
    const v6 = new F2();
    const v7 = new F2();
    const o14 = {
        __proto__: v0,
        ...v7,
        valueOf(a9) {
            return v6;
        },
        ...v0,
        "a": v0,
        "b": F2,
    };
    return o14;
}
Object.defineProperty(v0, "toString", { enumerable: true, value: f1 });
const v15 = [1,16,1073741825,268435456,-11,-1895712645,-7,128];
const v16 = [-2147483647,-9,-549589437,-2,-25824];
function f17(a18) {
    a18.toString = f1;
    const o28 = {
        "b": v16,
        [v16]: v16,
        [v15]: v15,
        "c": v15,
        ...a18,
        "h": a18,
        "g": a18,
        __proto__: v15,
        [v16](a20, a21) {
            v16[Symbol.match];
            return v16;
        },
        ...v0,
        2649: v0,
        "f": v0,
        "a": v16,
        "d": v0,
        [v0]: a18,
        7: f17,
    };
    return o28;
}
const v29 = f17(v16);
const v30 = f17(v16);
const v31 = f17(v0);
const v32 = [1e-15,-682.7322266561044,0.0,-1.0,0.007966074180853266,659432.9752778681,7.3909059021428725,7.167667112456492];
[3.0,NaN,798.5829934313979,-3.0,-1.0,1000000.0,-1000000.0,4.4784921333809673e+307,-1000.0];
const v34 = [-1.0,7.684193989067069e+307,Infinity,673328.3513413153,-2.2250738585072014e-308,-1.2938763392391086e+308];
function F35(a37, a38, a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = a37;
    try {
        this.a = v32;
    } catch(e41) {
    }
}
new F35(v31, v29, v30, v0);
new F35(v29, v30, v29, v34);
new F35(v30, v31, v29, v0);
new Set();
function F47(a49) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a49;
}
const v50 = new F47();
function F51(a53, a54, a55) {
    if (!new.target) { throw 'must be called with new'; }
    const v56 = [-700765.6455759181,-1.0,-1e-15,238.56580086181475,-6.99438605118472e+307,0.8641795299038513,1000000000000.0,0.6448161003466354];
    const v62 = new Uint32Array(2128);
    for (let v63 = 0; v63 < 100; v63++) {
        const o65 = {
            [-9007199254740991]: 512,
            [v62]: v56,
        };
    }
    [];
    [-4563];
}
new F51(v50);
