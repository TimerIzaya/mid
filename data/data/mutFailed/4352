const v0 = [3.0,-2.2250738585072014e-308,665274.1713963163,65.07593802288511,2.220446049250313e-16];
const v1 = [-864829.1968976554,-1e-15,-8.226518720658975,1e-15,3.0,5.681735720890575,-1000000.0,NaN,-1.0797100156080081e+308];
const v2 = [1.0,-1000000.0];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a5;
    } catch(e6) {
    }
    try {
        this.g = a5;
    } catch(e7) {
    }
}
v1.length;
const o11 = {
    "maxByteLength": 4294967296,
};
const v13 = new SharedArrayBuffer(166, o11);
new BigUint64Array(v13);
new F3(v1);
const v17 = new F3(v2);
const v18 = new F3(v0);
function f19() {
    return v17;
}
class C23 extends F3 {
    o(a25, a26, a27) {
        v18[a25] %= 0.4810177007597979;
        return v17;
    }
    8 = F3;
    static set e(a29) {
        [65535,7,-2147483649,3,13,-9223372036854775807];
        [16,4294967295];
        [13947,-51345,-9780,5085,6];
    }
    [v17] = v0;
    static a = 1000.0;
}
new BigInt64Array(1);
function f36(a37, a38) {
    const v40 = new Int8Array();
    const v43 = new Int32Array(3);
    v43["keys"](v40, ...v43, ..."keys");
    Math.pow(Math, f36);
}
new C23();
new C23();
new C23();
function f52() {
    function f53(a54, a55, a56, a57) {
        return a54;
    }
    f52 != f53;
    return f52;
}
%PrepareFunctionForOptimization(f52);
class C59 {
}
const v60 = new C59();
const v61 = new C59();
function F63(a65, a66, a67, a68) {
    if (!new.target) { throw 'must be called with new'; }
    const v69 = this.constructor;
    try { new v69(0, F63, F63); } catch (e) {}
    const t66 = a67.constructor;
    new t66();
}
class C73 {
    b = C73;
}
new C73();
v60?.constructor;
new F63(v60, -14, v61);
