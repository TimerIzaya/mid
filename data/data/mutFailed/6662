const v5 = new Uint8ClampedArray(7);
new Uint8Array(127);
const v11 = new Float32Array(4096);
class C12 extends Float32Array {
    constructor(a14, a15) {
        super(a15, a15, 7);
        for (const v16 in this) {
            try {
                v5.g = 4096;
            } catch(e17) {
            }
        }
    }
    a = -2147483648;
    n(a19, a20, a21, a22) {
        super[Uint8Array];
        try {
            a21.__proto__ = v11;
        } catch(e24) {
        }
        try { v11.reduceRight(C12); } catch (e) {}
        return v11;
    }
    static 10;
}
new C12(6, -2147483648);
new C12(4096, -6);
new C12(4096, 127);
const v30 = new Int16Array(Int16Array, Int16Array, Int16Array);
function f31() {
    return f31;
}
class C32 extends f31 {
    constructor(a34, a35, a36, a37) {
        super();
        function f38() {
            const o39 = {
                "g": a35,
                ...v30,
            };
            return C32;
        }
        for (let v40 = 0; v40 < 5; v40++) {
            f38();
            %OptimizeFunctionOnNextCall(f38);
        }
    }
}
new C32();
