let v2 = -3046;
class C3 {
    #p(a5) {
        super.d = v2;
        const v7 = this[this instanceof a5];
        v2 = 1000;
        function f8() {
            return v7;
        }
        return v7;
    }
    #f = 1000;
    static [1000] = v2;
    static d = v2;
}
const v9 = new C3();
let v10 = new C3();
const v11 = new C3();
let v12 = 1000;
v12 %= v12;
v10 = v11;
new Float64Array(206);
const v18 = new Int32Array(3343);
new Float32Array(2);
const v23 = new BigUint64Array(v12);
new BigInt64Array(10);
new URIError(-434699407);
for (let v30 = 0; v30 < 25; v30++) {
    const v31 = [601759695];
    const v32 = [1073741824,1073741823,1376142744,1073741825];
    function f33(a34, a35, a36, a37) {
        let v39 = 536870887;
        Math.tan(f33);
        Math.floor(f33);
        ~6.033680083936414;
        Math.round(C3);
        v39++;
        BigUint64Array >> v39;
        let v50;
        try { v50 = v32["find"](..."find", a37, ...v31, ...v32); } catch (e) {}
        return v50;
    }
    for (let v51 = 0; v51 < 5; v51++) {
        Object.defineProperty(v18, v51, { get: URIError, set: URIError });
        v23 <= v11;
        v9[3635] = v30;
        try {
            const o53 = {
            };
            f33(o53, Int32Array, 1000000000000.0, o53);
        } catch(e56) {
        }
        f33(v32, v51, v51, v51);
    }
}
