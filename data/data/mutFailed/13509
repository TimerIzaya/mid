new BigInt64Array(3388);
const v5 = new Int8Array(2468);
const v8 = new Float32Array(76);
v8[5];
0.9266772165227949 - 0.9266772165227949;
class C14 {
    static {
        let v15 = this;
        v15.name = v15;
        v15 = v5;
        const o16 = {
        };
        o16.e = o16;
        new Proxy(v15, o16);
    }
    static [-4.382205929607396] = 0.9266772165227949;
    static set a(a20) {
        this[3388] = a20;
        v8[3388] **= 2468;
        v8.byteOffset;
    }
}
new C14();
const v23 = new C14();
const v24 = v23?.constructor;
try { new v24(); } catch (e) {}
new C14();
Int8Array.d = Int8Array;
0n ^ 0n;
const v31 = [0n];
function F32(a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    const v36 = this?.constructor;
    try { new v36(BigInt64Array, a35); } catch (e) {}
    try { new Int8Array(v31); } catch (e) {}
}
const v39 = new F32();
v39.length = v39;
const o41 = {
    "type": 137722928n,
};
gc(o41);
