let v1 = "R1";
const v4 = Array?.from;
try { new v4("bigint"); } catch (e) {}
class C7 extends Array {
    constructor(a9, a10, a11) {
        super(a9);
    }
}
try { C7.from("bigint"); } catch (e) {}
const v13 = new C7(178);
class C14 {
    2677652094 = "b";
    constructor(a16) {
        a16[1];
        let v18;
        try {
        const t0 = "b";
        v18 = t0(this, this, a16, a16);
        } catch (e) {}
        function F19(a21, a22, a23) {
            if (!new.target) { throw 'must be called with new'; }
            try { this.propertyIsEnumerable(a22); } catch (e) {}
            a23[2677652094] = a23;
            try {
                this.d = a22;
            } catch(e25) {
            }
        }
        new F19(v18, v1, this);
        ([126.35858692635452,171.76053631394439,637722.086033537,-4.0,3.0,-1000000.0,1.3044045702886066e+308]).shift();
        const v29 = [607.0076449847468,-818.8860494127688];
        try { v29.reduce(178); } catch (e) {}
        v29[3];
        const v33 = Array.constructor?.constructor;
        try { new v33(C14); } catch (e) {}
        function F36(a38, a39, a40, a41) {
            if (!new.target) { throw 'must be called with new'; }
            this.c = Date;
        }
        const v42 = new F36();
        try { v42.c(this, Array, this, Array, this, Array, Array); } catch (e) {}
        const v44 = new F19(v1, this, this);
        new F19("bigint", v44, v1);
    }
}
try { C14.bind("bigint"); } catch (e) {}
const v47 = new C14(v1);
let v48 = 1073741824;
[v1,v48] = "boolean";
new Int8Array();
new C14(v47);
const v53 = new C14("bigint");
function f54(a55, a56, a57) {
    const o77 = {
        4: a56,
        set a(a59) {
            a56++;
            try {
                a59.__proto__ = v1;
            } catch(e61) {
            }
            ([-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0]).forEach();
            function F64() {
                if (!new.target) { throw 'must be called with new'; }
            }
            new F64();
        },
        ["bigint"](a68, a69, a70) {
        },
        set b(a72) {
            function f73(a74) {
                return f73;
            }
            class C75 extends f73 {
            }
        },
        ...v1,
        "a": "b",
        __proto__: a55,
        ..."bigint",
        "h": "b",
        get d() {
            return f54;
        },
        "h": C14,
    };
    return o77;
}
f54.caller = f54;
const v78 = f54(v47, v53, v47);
const v79 = f54(v78, "bigint", v53);
const v80 = f54(C14, v78, v47);
const v81 = v80?.__lookupSetter__;
try { new v81(v13); } catch (e) {}
[[v80,C14],v53];
const v85 = [v79,f54,v1];
try { v85.push(v85); } catch (e) {}
const v88 = new Set();
const v89 = [Set,Set,v88];
try { v89.findLast(C7); } catch (e) {}
function f91(a92, a93, a94) {
    return f91;
}
try {
} catch(e95) {
}
36862 + 36862;
Array(36862);
const v102 = [v89];
const o103 = {
    "arguments": v102,
    "type": "function",
};
new Worker(f91, o103);
