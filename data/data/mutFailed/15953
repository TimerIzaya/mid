30815n & 30815n;
let v6 = -25506n;
for (let [i10, i11] = (() => {
        ~10;
        return [0, 10];
    })();
    i10 + i10, i10 < i11;
    i11 * i11, i10 / i10, i11 - i11, i10++, i11--) {
    let v24 = 10;
    const v25 = v24++;
    v25 - v25;
    let v27 = -1000.0;
    const v28 = ~v27;
    --v27;
    Math.log10(v24 || v24);
    const v32 = i10 | v28;
    v32 % v32;
    ~v27;
    Math.min(v24);
}
const v36 = [10000,255,1073741824,-1024,-49519,-43629,-287922073,2444];
let v37;
try { v37 = v36.pop(); } catch (e) {}
v37 - v37;
const v39 = [-826022134,1073741825,1416306895,-536870912,-65535,10,-1024,128,1965595318];
const v40 = v39?.fill;
try { new v40(-1); } catch (e) {}
const v42 = [-4294967296,-1686158582,16,1005355771,4];
v42[1] = v42;
1 >>> 1;
const v45 = 1 + 1;
v45 != v45;
v6 = 2147483648n;
try { v6(-45482, 2147483649, -45482); } catch (e) {}
v39[2147483648n] = -45482;
const v51 = this?.ReferenceError;
let v52;
try { v52 = new v51(1); } catch (e) {}
const v53 = v52?.constructor;
let v54;
try { v54 = new v53(-1); } catch (e) {}
for (let v55 = 0; v55 < 32; v55++) {
    let v57;
    try { v57 = v54.toLocaleLowerCase(); } catch (e) {}
    try { v57.trimLeft(); } catch (e) {}
    const v59 = "p" + v55;
    v59[1] = v59;
    v39[v59] = v55;
}
1073741823n / 1073741823n;
137722928n !== 137722928n;
const v68 = [0n];
function F69(a71, a72) {
    if (!new.target) { throw 'must be called with new'; }
    const v73 = this?.constructor;
    try { new v73(v42, F69); } catch (e) {}
    try { new Int8Array(v68); } catch (e) {}
}
const v76 = new F69();
v76.e = v76;
try { new v54(); } catch (e) {}
const v80 = Symbol.iterator;
try { new Symbol(); } catch (e) {}
Symbol.for(v40.for(v80.description).description);
const o96 = {
    [v80]() {
        let v89 = 10;
        const o95 = {
            next() {
                v89--;
                const v93 = v89 == 0;
                const o94 = {
                    "done": v93,
                    "value": v89,
                };
                return o94;
            },
        };
        return o95;
    },
};
o96.g = o96;
const o97 = {
    "type": 137722928n,
};
o97.execution = o97;
gc(o97);
