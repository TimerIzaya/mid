6.17309056567488 ^ 6.17309056567488;
const v6 = 6.17309056567488 != 6.17309056567488;
v6 && v6;
let v10;
try { v10 = new WeakSet(); } catch (e) {}
try { v10.delete(WeakSet); } catch (e) {}
new WeakSet();
const v14 = [-461058851,4294967296,1,9007199254740991,-256,633978435,48835,-733821717,-2147483647];
try { v14.map(true); } catch (e) {}
const v16 = [2];
function f17() {
    return f17;
}
f17[Symbol.toPrimitive] = f17;
try { f17(); } catch (e) {}
Date[Symbol.toPrimitive] = Symbol;
try { Date.parse(v10); } catch (e) {}
const v25 = new Date(f17);
v25.setUTCMilliseconds(Date);
const v27 = [21658,129,1725992596,-2,3,1073741823,128,-32723,-9,15];
function F28(a30, a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    const v33 = this?.constructor;
    v33.length = v33;
    try { new v33(a31, a31, 1000000000000.0); } catch (e) {}
    a32 >>> a32;
    try {
        this.a = -10120;
    } catch(e36) {
    }
}
new F28(v16, v14, 6.17309056567488);
new F28(v27, v14, -1.7976931348623157e+308);
new F28(v16, v16, -1.7976931348623157e+308);
Uint8ClampedArray[2] = v10;
const v41 = new Uint8ClampedArray(Uint8ClampedArray, Uint8ClampedArray, Uint8ClampedArray);
v41.BYTES_PER_ELEMENT = v41;
for (let v42 = 0; v42 < 5; v42++) {
    function f43() {
        const o44 = {
            __proto__: v41,
            4: v42,
        };
        return f43;
    }
    try { f43(); } catch (e) {}
    f43().caller;
    %OptimizeFunctionOnNextCall(f43);
}
