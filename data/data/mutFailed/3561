const v0 = [8.561804866050454e+307,1.7976931348623157e+308,-4.0,-1.2825625401216552e+307];
const v1 = [-4.490875685819047,1000000.0,1.7976931348623157e+308,-9.631796248771104e+307,2.0,-1.3263889017943316e+307];
const v2 = [-2.2250738585072014e-308,0.6541988331981687,1000000000.0,1.569108207536766e+308,-1.0,0.6568720453868448,1.9113092653182289];
const v3 = /[\xf0\x9f\x92\xa9-\xf4\x8f\xbf\xbf]/gviy;
const v4 = /a\nb\bc/gudms;
v4.e = v4;
const v5 = /S1/gvdm;
class C6 {
    constructor(a8, a9, a10) {
        const v11 = this?.constructor;
        try { new v11(v3, v5, a10); } catch (e) {}
        a9.dotAll = a9;
        v2 in v4;
        function f14(a15, a16, a17) {
            function f19(a20) {
                try { a15(a20, a20); } catch (e) {}
                v2[-1] = a8;
            }
            this.onmessage = f19;
            f19(this);
            %PrepareFunctionForOptimization(f19);
            f19(this);
            f19(this);
            %OptimizeMaglevOnNextCall(f19);
            f19(this);
        }
        try { new f14(a9, a8, a9); } catch (e) {}
        Worker.length;
        const v30 = ["function",v1,this];
        const v31 = v30?.constructor;
        try { new v31(Worker); } catch (e) {}
        const o33 = {
            "arguments": v30,
            "type": "function",
        };
        o33.arguments = o33;
        new Worker(f14, o33);
    }
}
const v35 = new C6(v5, v3, v0);
v35.a = v35;
const v36 = new C6(v4, v3, v35);
new C6(v4, v36, v35);
4294967296 - 4294967296;
const v47 = new Uint8Array();
const v49 = Array();
const v52 = Array(670)["concat"](v49, v47);
v52.f = v52;
