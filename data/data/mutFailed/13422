let v0 = [-256,65535,-9647];
function f1(a2, a3) {
    a3[v0] = a3 instanceof a3;
    return a2;
}
const v6 = Symbol.toPrimitive;
v0[v6] = f1;
const v7 = [268435456,-17760,1615669486,-22834,-12631];
let v8 = [14874,221267999,-4294967296,268435440,-42141,-15499,23630,30668,-65535,-52037];
function F15(a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = v6;
    function f19() {
        const v21 = [Float64Array];
        for (let v22 = 0; v22 < 5; v22++) {
            v21.length = 2;
        }
        return 5;
    }
    a18.valueOf = f19;
    try {
        this.a = a18;
    } catch(e24) {
    }
}
new F15(v7, v7);
const v26 = new F15(v0, v0);
const v27 = new F15(v0, v0);
class C28 {
    static set d(a30) {
        v8 = v0;
        try {
            super.toString(a30, this);
        } catch(e32) {
        }
    }
    static #b;
    constructor(a34, a35) {
        try {
            this.b = 5;
        } catch(e36) {
        }
    }
    f = 0.08605194147545714;
}
new C28(v26, 0.08605194147545714);
new C28(v8, 69.42478215202664);
v0 ^= v0;
Math.exp(-65536);
const v42 = ++F15;
Math.floor(5);
Math.pow(-65536, C28);
const v45 = 5 & 5;
5 | 5;
const v47 = v42 + v45;
new C28(C28, 69.42478215202664);
/5*/gi;
const v51 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v52 = [601759695];
const v53 = [1073741824,1073741823,1376142744,1073741825];
function f55(a56, a57, a58, a59) {
    function f60() {
        function f61() {
            const v62 = [];
            const v63 = [-6.786788220284745e+307,3.0441372838377454,0.16607240252493405,9.1870148243921,-1.1724672307306477e+307,-1.3233810423722777e+308,0.3268930863961368];
            const v64 = [1.1232876344345233e+308,1.0,3.0,-1.7976931348623157e+308,892.6991223982873,1000000.0,0.1500507613745743,8.371259043064821,1e-15,-192.2897093527156];
            const v65 = [1000000.0,2.0511322290964932e+307];
            function f66(a67, a68) {
            }
            const v69 = f66(v64, v62);
            f66(v65, v63);
            v65 || v69;
            return v7;
        }
        return f61;
    }
    function f72(a73) {
        -(-7);
    }
    Object.defineProperty(a58, "valueOf", { writable: true, configurable: true, enumerable: true, get: f60, set: f72 });
    function f77() {
        const o94 = {
            "c": -4294967297n,
            [522675525n](a82, a83) {
            },
            "c": a57,
            valueOf(a85, a86) {
            },
            "e": -4294967295,
            "e": -268435456,
            "maxByteLength": a59,
            "arguments": v51,
            ...v52,
            "type": "Vre",
            ...a59,
            valueOf(a88, a89) {
            },
            ..."Vre",
            4: a56,
            "c": -268435456,
            "type": "Vre",
            "type": v47,
            toString(a91, a92, a93) {
                return a56;
            },
            5: -4294967295,
            6: -268435456,
            __proto__: arguments,
            ...v7,
            "h": v27,
            "a": C28,
            [arguments]: v53,
        };
    }
    f77();
    const v97 = new Int8Array();
    v97.buffer.slice(2147483648);
    %OptimizeFunctionOnNextCall(f77);
    let v102;
    try { v102 = v53["find"](..."find", a59, ...v52, ...v53, ...522675525n); } catch (e) {}
    v102 <= a58;
    return arguments;
}
const v106 = new BigInt64Array();
v106.toString = f1;
const v110 = new BigUint64Array();
for (let v111 = 0; v111 < 10; v111++) {
    f55(v52, v111, false);
}
%OptimizeFunctionOnNextCall(f55);
f55(v110, 3331, v106, 3216);
