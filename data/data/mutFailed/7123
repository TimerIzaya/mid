class C3 {
    constructor(a5, a6) {
        this[this != this] |= 1000000000.0;
        let v8;
        try {
        const t0 = 1000000000.0;
        v8 = new t0(a5, a6, this, 1000000000.0);
        } catch (e) {}
        v8[2524324493] = v8;
    }
    p(a10) {
        let v11;
        try { v11 = this.o(a10, a10, this, a10); } catch (e) {}
        let v12 = C3[16];
        super[v11] = this;
        v12 >>> v12;
        const v16 = Math.exp(v11);
        Math.log2(v11);
        v12++;
        return v16;
    }
}
const v19 = new C3(2.220446049250313e-16, 2.220446049250313e-16);
const v20 = new C3(Infinity, 1000000000.0);
const v21 = new C3(2.220446049250313e-16, 2.220446049250313e-16);
function F22(a24, a25, a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 2.220446049250313e-16;
    } catch(e28) {
    }
    try {
        this.b = a27;
    } catch(e29) {
    }
}
const v30 = new F22(v19, v20, v20, 1000000000.0);
const v31 = new F22(v21, v21, v30, 2.220446049250313e-16);
new C3(v30, v21, v31, Infinity);
new BigUint64Array(188);
new Int32Array(16);
new Int8Array(4024);
const v43 = new Map();
function f44(a45) {
    return a45;
}
Object.defineProperty(v43, "g", { configurable: true, enumerable: true, get: f44, set: f44 });
Math.log1p();
