const v0 = [-4294967295,-4294967295,-11,1073741824,-9223372036854775807,44572,-5953];
const v1 = [-3,11492,1901,-1488780647,-2147483648,-23778,9007199254740991,-2182];
const v2 = [-6,128,536870887,-7,512,5,64,-1369336406];
class C3 {
    #n(a5) {
        a5 %= a5;
        try {
            super.toString(v0);
        } catch(e7) {
            try {
                e7.d = e7;
            } catch(e8) {
            }
            function f9() {
                return e7;
            }
        }
        super.e = v2 ** this;
        return this;
    }
    static toString(a12) {
        const v13 = delete a12?.length;
        try {
            v1.indexOf(v13, -6);
        } catch(e17) {
        }
        return this;
    }
    constructor(a19, a20) {
        const o24 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o24);
    }
}
new C3();
new C3();
const v28 = new C3();
class C32 extends C3 {
    static #g = v1;
    static #m(a34, a35, a36, a37) {
        with (C3) {
            const v39 = this ^ e;
            try {
                v28.#g *= v39;
            } catch(e40) {
            }
        }
        return this;
    }
    5;
    #f = -1068270859n;
    static [-2] = v1;
}
new C32();
new C32();
new C32();
new Float64Array(1000);
new BigUint64Array(4057);
new Uint8ClampedArray(128);
const v55 = new Uint16Array(2);
new Uint32Array(v55);
