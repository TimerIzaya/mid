function f0() {
    const v4 = new Int8Array([1024,1024]);
    const t2 = [];
    t2.length += 1.0;
    const o19 = {
        1073741824: v4,
        n(a11, a12) {
            return this;
        },
        get b() {
            return 36175;
        },
        ...36175,
        __proto__: 36175,
        set f(a15) {
            const o16 = {
            };
            new Proxy(this, o16);
        },
        2541822898: 1.0,
        ...-9.58734832781484,
        [-9.58734832781484]: -0.6969410490944288,
    };
    return o19;
}
f0();
f0();
f0();
new Int8Array(1024);
let v26 = 129;
const v28 = /(?:a*)+q(?<a>.)/guds;
v28.constructor.$4;
const v32 = [1.0,141599.63044947106,730.845463907873,1000000.0,-4.2811873669589365e+307,0.0,3.0];
let v33;
try { v33 = v32.forEach(-5n); } catch (e) {}
new Int8Array(v26);
function f37() {
    return f37;
}
const v38 = f37();
let v39 = Int16Array;
function f40() {
    const v41 = v39--;
    v41 - v41;
    class C44 {
    }
    C44.length;
    const v46 = new C44();
    v46.g = v46;
    const v47 = new C44();
    v47.length = -4294967296;
    const v48 = [3480,1024,-4294967297,-1024,512,65536,29198,-9223372036854775807,-2147483647];
    try {
        v48.length = v28;
    } catch(e49) {
    }
    for (let i = 0; i < 5; i++) {
        for (let v51 = 0; v51 < 5; v51++) {
            let v53;
            try { v53 = ("p").indexOf(v38); } catch (e) {}
            try { v53.fontcolor(v51); } catch (e) {}
            "p" + v51;
        }
        v26++;
    }
    new C44(0);
    const v58 = [C44];
    try { v58.fill(); } catch (e) {}
    [v46];
    class C61 extends C44 {
        [v46];
        #n(a63, a64, a65, a66) {
        }
    }
    return 1024;
}
new Float64Array(230);
class C70 {
    static {
        const v72 = [];
        try {
            super.setInt8();
            [-4294967297n];
            v72.toLocaleString();
            !-2;
        } catch(e79) {
        }
    }
}
const v80 = new v33();
const t90 = [v80];
t90[7] **= 512;
const t92 = -256;
t92.toString = -256;
