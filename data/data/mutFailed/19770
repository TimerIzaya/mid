function f0() {
}
const v3 = new Uint8ClampedArray(3599);
v3[1830] = v3;
let v5 = 7 >>> 7;
v5--;
const v8 = new Uint8Array(7);
v8[6] = v8;
255 * 255;
new Uint8Array(255);
function f13() {
    return v8;
}
f13.arguments = f13;
let v14;
try { v14 = f13(); } catch (e) {}
try { new Uint8ClampedArray(v3, v14, v3); } catch (e) {}
const v18 = new Uint8ClampedArray(3394);
v18.g = v18;
const v21 = Int32Array?.__lookupSetter__;
try { new v21(v3); } catch (e) {}
Int32Array.prototype = Int32Array;
const v23 = new Int32Array(0);
let v26;
try { v26 = new Uint8ClampedArray(v3, Uint8ClampedArray, 255); } catch (e) {}
let v27;
try { v27 = v26.join(v23); } catch (e) {}
new Uint8ClampedArray(v27);
function f31(a32) {
    const o33 = {
        ..."toStringTag",
    };
    const t32 = 255;
    t32[8] = o33;
    return v26;
}
class C34 extends f31 {
    [C34];
}
C34.c = C34;
const t40 = "15036";
const v35 = new t40();
v35[3];
v35[6][0];
for (const v39 in v35) {
}
