try {
const t0 = 1.8503897255003885;
new t0();
} catch (e) {}
const v17 = new Uint8ClampedArray();
try {
    const o18 = {
    };
} catch(e19) {
}
class C20 {
    static p(a22) {
        const o29 = {
            valueOf() {
                super.c |= 1.8503897255003885;
                try {
                    function f24() {
                        return this;
                    }
                    const v25 = `
                    `;
                    this.fuck("d", "d", "d", "d");
                } catch(e28) {
                }
                return -128;
            },
        };
        return o29;
    }
    g;
}
try { new C20(); } catch (e) {}
const v31 = new C20();
class C33 extends "undefined" {
}
new C33();
new Float32Array();
v31.g;
new v17();
new C20();
class C40 extends C20 {
    static n(a42, a43) {
        function F45(a47, a48, a49, a50) {
            if (!new.target) { throw 'must be called with new'; }
        }
        Math.atan(1653620084);
        new Float64Array(1073741824);
        class C57 {
        }
        return -128;
    }
    #c = C40;
    valueOf(a61, a62, a63) {
        super.f;
    }
    constructor(a66, a67, a68, a69) {
        super();
        function f70() {
            const t58 = [];
            t58[6] = 4294967295;
            new Int32Array();
            const o85 = {
                get b() {
                },
                toString(a78, a79, a80) {
                },
                m(a82) {
                },
                set b(a84) {
                },
            };
        }
        for (let v86 = 0; v86 < 5; v86++) {
            f70();
            %OptimizeFunctionOnNextCall(f70);
        }
    }
    set f(a89) {
        for (const v90 of a89) {
            try {
            } catch(e91) {
            }
        }
        class C93 extends "-2" {
        }
        const o94 = {
        };
        try {
        } catch(e95) {
        }
        try {
            const o96 = {
            };
        } catch(e97) {
        }
        try {
            const o98 = {
            };
        } catch(e99) {
        }
        try {
            const o100 = {
            };
        } catch(e101) {
        }
    }
}
class C102 {
}
function f103(a104, a105, a106, a107) {
    const o113 = {
        "d": a106,
        p(a109, a110, a111) {
        },
    };
}
new C40();
for (let v115 = 0; v115 < 25; v115++) {
    Math.sin(v115 ** 2);
}
956206316 + 956206316;
[-2.0,-3.0,0.6635275380715938,1.5267625116759715e+308,2.2250738585072014e-308,648797.6103741466,764.9339560151452];
[-1.8569069513514513,-1.7976931348623157e+308,3.051119090190868];
[-96835.6485279667,2.220446049250313e-16,8.46687468460627e+306,Infinity,-0.0,-Infinity];
(-9007199254740992).length;
const v128 = [3.0,0.33171220343699925,4.064384707296433,1.5856273613625281e+308,-620.344995023322,0.9478652503365506,-856874.8447818598,-127.45049040971935];
function f129(a130, a131) {
    const o133 = {
        ...a130,
        get d() {
            return this;
        },
    };
    return f129;
}
f129();
const v135 = f129(v128);
try { v135(956206316, 956206316); } catch (e) {}
