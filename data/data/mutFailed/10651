let v2 = -4294967297;
function f6() {
    return 268435441n;
}
let v7;
try { v7 = f6(); } catch (e) {}
const v10 = new Int16Array(62);
let v11;
try { v11 = v10.find(v10); } catch (e) {}
Object.defineProperty(v11, 0, { enumerable: true, set: f6 });
v2 >>>= 1073741824;
typeof -9223372036854775807n === "function";
new Float64Array(128);
class C18 {
    static #g = 9n;
    #n(a20, a21, a22, a23) {
        v10[1073741825] = this;
        ("function")[1073741824];
        f6();
        %PrepareFunctionForOptimization(f6);
        const v26 = f6();
        f6();
        %OptimizeFunctionOnNextCall(f6);
        f6();
        return v26;
    }
}
new C18();
new C18();
new C18();
try { Int16Array(Int16Array, Int16Array, 1073741824); } catch (e) {}
const v35 = new Float64Array(8);
-132638159 & -132638159;
2 / 2;
11518 > 11518;
const v47 = [-1e-15,-4.547098672084515,6.731189859503068,1000.0,1000.0,414.1111077300918,567.5737904015757];
let v50 = new Float32Array(55);
const v53 = new Float64Array();
%VerifyType(11518);
const o54 = {
    "call": f6,
    "construct": f6,
    "defineProperty": f6,
    "deleteProperty": f6,
    "get": f6,
    "getOwnPropertyDescriptor": f6,
    "getPrototypeOf": f6,
    "has": f6,
    "isExtensible": f6,
    "ownKeys": f6,
    "preventExtensions": f6,
    "set": f6,
    "setPrototypeOf": f6,
};
new Proxy(v35, o54);
let v59 = -v7;
v59 = 50;
const v63 = new BigUint64Array(3170);
let v64;
try {
const t0 = 50;
v64 = t0();
} catch (e) {}
let v65 = new Float64Array(v50);
({"buffer":v64,"byteLength":v65,"length":v50,} = v65);
[...v53,...v63];
v64.slice(3170, 256);
v50[5] &= 3170;
[v47];
Worker.d = Worker;
