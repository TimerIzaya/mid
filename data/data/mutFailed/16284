function f3() {
    const v5 = new f3(/a|b/vdy);
    function f6(a7, a8, a9) {
        function f11(a12) {
            ++a12;
        }
        this.onmessage = f11;
        try {
            this.fuck(v5, a8);
        } catch(e15) {
        }
    }
    return -0.0;
}
-1 + -1;
-65536 + -65536;
function f21(a22, a23, a24, a25) {
    a22 + a22;
    const v27 = a24--;
    a25 % a25;
    const v31 = [-65536];
    v31.push(Reflect);
    const v33 = [v31];
    const o42 = {
        "h": a22,
        valueOf(a35, a36) {
        },
        get d() {
        },
        n(a39, a40) {
            return -65536;
        },
        __proto__: v27,
        get c() {
            return v33;
        },
        "call": f3,
        ...a24,
        "a": -361878.9300406411,
        "e": a23,
        512: a23,
        ...a24,
        "d": a24,
        ...a24,
        "b": -8.254222617953861e+307,
        "f": -65536,
        /*
        __proto__: a24,
        */
        "c": a23,
        "g": -0.0,
        [-0.0]: a22,
    };
    o42[512];
    return Worker(9);
    class C47 {
    }
    const v48 = new C47();
    function f49(a50, a51) {
        const o54 = {
            "h": v48,
            [a51]: v48,
            set h(a53) {
            },
        };
        return f49;
    }
    return o42;
}
const v55 = f21(5, 5, -65536, -8.254222617953861e+307);
const v56 = f21(-65536, -1, -65536, -0.0);
v56.g = v56;
const v57 = f21(-1, -1, v56, -8.254222617953861e+307);
class C58 {
    static f;
    #n(a60, a61, a62, a63) {
        new WeakSet();
        const v67 = a61 > v55;
        class C68 {
        }
        const o69 = {
            __proto__: C68,
        };
        return v67 << v57;
    }
    1024 = -65536;
    static 1024;
    static a;
    #e;
    [-361878.9300406411] = f3;
    constructor(a72, a73, a74) {
        super();
        const o78 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o78);
    }
}
new C58();
const v81 = new C58();
const v82 = v81?.constructor;
try { new v82(); } catch (e) {}
const v84 = new C58();
v84[1024];
const v86 = [601759695];
const v87 = [427812215,61195,-2147483647,4096,-2147483647,30905];
([-1300791131,33477,0,5,-48254,14,4294967295,545422795]).push;
-65536 - -65536;
let v92 = 0;
v92++;
function f94(a95, a96, a97, a98) {
    try { a96.groupToMap(a96); } catch (e) {}
    function f100() {
        const o111 = {
            "h": -1073741824,
            "g": v92,
            [-361878.9300406411](a105, a106) {
            },
            268435441: v87,
            get d() {
            },
            ..."Vre",
            valueOf(a109, a110) {
                return v87;
            },
            ..."Vre",
            "c": a98,
            5: -1073741824,
            6: -268435456,
        };
        return a98;
    }
    f100();
    %OptimizeFunctionOnNextCall(f100);
    let v114;
    try { v114 = v87["find"](..."find", a98, ...v86, ...v87, ...522675525n); } catch (e) {}
    function F115(a117, a118) {
        if (!new.target) { throw 'must be called with new'; }
        const v119 = this.constructor;
        try { new v119(); } catch (e) {}
        try { this.constructor(); } catch (e) {}
    }
    new F115();
    v114 <= a97;
    return a97;
}
const v124 = f94(v87, v87, v86, 522675525n);
v124.g = v124;
for (let v125 = 0; v125 < 5; v125++) {
    false || false;
    f94(v86, v125, false, v125);
}
%OptimizeFunctionOnNextCall(f94);
const v129 = f94(522675525n, v86, f94, v124);
try { v129(v124, v55, f94, f94); } catch (e) {}
