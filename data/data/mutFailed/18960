const v0 = /o[x\dz]/gdimy;
const v1 = /(?:ab)+a[a-z]?/vdi;
const v2 = /(?<!)Ei(x)(x)(x)\1a\nb\bc*/gudim;
const v3 = [-1024];
[-536870912,-12,65536,-7460,12728,-10093,127,6934,-1283943197,127];
[8,5];
[1,10,-6,14,-55430,-8,-1847,10,-9,1104055629];
const v7 = [-2147483647,-57120,-9223372036854775808,127,14,-268435456,4294967295];
[9007199254740992,-36279647,-237758175,-33636,-1073741824];
function F12(a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = a15;
    a14.b = v1;
    try {
        this.d = a14;
    } catch(e16) {
    }
    try {
        a14.b = 2.0;
    } catch(e17) {
    }
}
const v18 = new F12(v2, v0);
new F12(v18, v7);
new F12(v3, 2.0);
const v23 = [-48288,15,-63536,268435456];
function f24() {
    class C25 {
        constructor(a27, a28, a29) {
            for (let v30 = 0; v30 < 25; v30++) {
                const o34 = {
                    "execution": "async",
                    "type": "minor",
                };
                gc(o34);
            }
        }
    }
    new C25(C25, C25, C25);
    return Array;
}
Object.defineProperty(v23, Symbol.toPrimitive, { value: f24 });
class C39 extends Array {
    constructor(a41, a42, a43) {
        super(a41);
    }
}
new C39(178);
const v45 = new C39();
const v46 = new C39();
for (let i = 0; i < 5; i++) {
    v45[v23] = v46;
}
