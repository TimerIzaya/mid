function f0() {
    const o12 = {
        __proto__: "g",
        268435440: 1,
        "e": -1781241988,
        8: -1781241988,
        "c": -1781241988,
        "b": f0,
        ..."g",
        ..."g",
        [1](a5, a6) {
            Object.defineProperty("n", "d", { writable: true, value: "n" });
            let v11;
            try { v11 = ("construct").concat(1, a5, -1781241988); } catch (e) {}
            v11["n"] = Uint8ClampedArray;
            return a6;
        },
    };
    return o12;
}
const v13 = f0();
const v14 = f0();
const v15 = f0();
const v16 = [f0,v15,f0];
v16[1];
const v18 = [v16,v14];
const v19 = [v16,v18,v13,v15,v18];
function F20(a22, a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    const v26 = this?.__lookupGetter__;
    try { new v26(this); } catch (e) {}
    try { a22.every(v16); } catch (e) {}
    a24[1];
    a25[268435440];
    try {
        this.g = a23;
    } catch(e31) {
    }
}
F20?.constructor;
let v33;
try { v33 = new f0(v16); } catch (e) {}
new v16(v18, v18, v14, v14);
new F20(v16, v19, v13, v14);
const v36 = new F20(v18, v19, v14, v13);
class C37 extends f0 {
    toString(a39, a40, a41, a42) {
        v13 >> a40;
        new Int8Array(1024);
        new Uint32Array(238);
        new Uint16Array(115);
        return v19;
    }
    [v36] = v16;
}
new C37();
new C37();
new C37();
const o58 = {
    "maxByteLength": 3145,
};
const v59 = o58?.__lookupGetter__;
try { new v59(v36); } catch (e) {}
new SharedArrayBuffer(128, o58);
v33.BYTES_PER_ELEMENT = Float32Array;
const v64 = new Float32Array(v19);
-v64[0];
