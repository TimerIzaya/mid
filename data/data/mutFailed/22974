const v0 = [-2006556160,-65535,-143034364,54911,1073741824,3,4,7,693673404,-46857];
[-21232,9007199254740990,-62948,15];
[257,16,8,2147483648,20649,-6,1000];
const v3 = [1e-15,-212727.8215014115,-3.0];
const v4 = [0.8258944590003743,777.2760128094662];
const v5 = [323.8196045537302,0.286076200575198,716.4460154601347,-9.276921581044938e+307,822.6859837356503,1.0,9.47295274424851];
[-4.583356074442914,0.10313843738654738,7.080063565506396e+307,NaN,5.0,-9.803543476355958e+307];
const v10 = [1000.0,-75539.36934562481,4.0,-5.2204338686306365e+306,-1000000.0,-4.0];
const v11 = [3.0,-850.079357998071,4.0,4.0,-145.03116769881626,-1000000000.0,3.0,-4.0];
class C12 {
    get a() {
        try {
            this.e = v3;
        } catch(e14) {
        }
        return v5;
    }
    n(a16, a17, a18) {
        try { v0.findLast(257); } catch (e) {}
        h = v3;
        const o20 = {
        };
        try {
            o20.b = v10;
        } catch(e21) {
        }
        try {
            const o22 = {
            };
            o22.b = v10;
            o22.a = v5;
        } catch(e23) {
        }
        try {
            const o24 = {
            };
            o24.b = v10;
            o24.a = v5;
            o24.d = a17;
        } catch(e25) {
        }
        try {
            const o26 = {
            };
            o26.b = v10;
            o26.a = v5;
            o26.d = v3;
        } catch(e27) {
        }
        return v0;
    }
}
const v29 = new Int8Array();
v29.filter(Int8Array);
const o31 = {
};
new C12();
new C12();
new C12();
function f35() {
    try {
        v11.length = 0;
    } catch(e42) {
    }
    class C45 {
        [-39233] = -2127350647;
        [-117.6202672056188];
        constructor(a47) {
            -268435456 || 4.0;
            Math.sign(4.0);
            +4.0;
        }
        268435439 = -39233;
        d;
        g;
        a;
    }
    C45.p24 = -2127350647;
    const v55 = new C45(-2127350647);
    try { v55.getMinutes(v55); } catch (e) {}
    let v57;
    try {
    const t0 = 4.0;
    v57 = t0(C45);
    } catch (e) {}
    [-117.6202672056188,[v55,v57,v4,4.0,v57]];
    const o66 = {
        "d": 268435440,
        "a": 4.0,
        __proto__: "cJ",
        "f": "cJ",
        ..."cJ",
        8: f35,
        "g": 268435440,
        "e": f35,
        "h": "cJ",
        valueOf(a63) {
            const o64 = {
                __proto__: this,
                2261555780: "cJ",
            };
            super.a;
            return this;
        },
        "c": "cJ",
    };
}
const v67 = f35();
const v68 = f35();
const v69 = f35();
const v70 = [v69,v67,v68,v68];
const v71 = [];
const v72 = [v69,v71,v71,v70];
const v73 = [-54486,11,9007199254740991,268435456,536870912,1073741823,255,1073741824,-2147483648,-3];
const v74 = [2033313755,-16,16,16,-24747,6,256];
const v75 = [65535];
new Set();
function F78(a80, a81, a82) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = a81;
}
new F78(v70, v75, v72);
new F78(v74, v70, v75);
[9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
function F86(a88, a89) {
    if (!new.target) { throw 'must be called with new'; }
    const v90 = this.constructor;
    try { new v90(v73, this); } catch (e) {}
}
new F86(F86, F86);
new F86();
const v94 = [601759695];
const v95 = [1073741824,1073741823,1376142744,1073741825];
function f96(a97, a98, a99, a100) {
    let v102;
    try { v102 = v95["find"](..."find", a100, ...v94, ...v95); } catch (e) {}
    const v104 = Symbol(a99);
    const v105 = v104.description;
    const v107 = [-1000.0,1000000.0,2.220446049250313e-16,614071.3005355855,-1.0,2.220446049250313e-16];
    v107[301] = -536870912;
    v102 in v104;
    try {
        Symbol(v105);
    } catch(e110) {
    }
    const o111 = {
    };
    const v113 = new Proxy(v107, o111);
    return v113[301];
}
f96();
new Uint8ClampedArray(268435440);
