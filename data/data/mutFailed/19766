class C3 {
    static #valueOf(a5) {
        const o6 = {
            __proto__: this,
            "f": a5,
            "a": -1024,
            [-755182659]: this,
        };
        return -1024;
    }
    #g = -755182659;
    2 = -662221.3254993176;
    [-1] = -662221.3254993176;
}
const v7 = new C3();
const v8 = new C3();
const v9 = new C3();
const v10 = [v7,C3,v9];
const v11 = [v8,-755182659,-1024,v9,-662221.3254993176];
const v12 = [v9,v10];
function f13() {
    return v11;
}
function f14(a15, a16) {
    const o20 = {
        "d": -1024,
        get e() {
            try {
                new C3();
            } catch(e19) {
            }
            return this;
        },
        "c": -1024,
        __proto__: v8,
        "g": f14,
        "a": v12,
    };
    return o20;
}
const v22 = f14(-662221.3254993176, f14(v10, v11));
f14(v22, v22);
let v24 = Map;
const v29 = v24--;
const v30 = [-4.0,-1e-15];
const v31 = [-7.264687027014153e+307];
v31.pop();
function F35(a37, a38, a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    const v41 = this?.__defineGetter__;
    try { v41(undefined, undefined); } catch (e) {}
    try { a37.unshift(Uint8Array); } catch (e) {}
    a39 != a39;
    try { a37.toSpliced(a38, a38); } catch (e) {}
    const v46 = a37?.__defineSetter__;
    try { v46(); } catch (e) {}
}
new v7(v31);
new F35(v30, v29);
