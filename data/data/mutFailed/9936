[-10,-12,2816,-16,1073741823,54496,1073741824,21188,0];
const v1 = [-9007199254740992,14,-8192,9,268435456,9,9007199254740990,28332,-2147483648];
const v2 = [2147483647,-4294967296,-65536];
const v3 = [1000000.0,-Infinity];
[-841633.3528353828,204.86396254093188,5.0,-1.7976931348623157e+308];
try {
} catch(e5) {
}
function f6() {
    const o10 = {
        m(a9) {
            return this;
        },
        __proto__: 946.0676210033328,
    };
    return 946.0676210033328;
}
f6();
%OptimizeFunctionOnNextCall(f6);
v2.length <<= v2[10000];
const v13 = v3[v1];
try {
    function F17(a19) {
        if (!new.target) { throw 'must be called with new'; }
        const v20 = a19 ^ a19;
        v20 * v20;
        const v22 = this.constructor;
        v22.length = v22;
        try { new v22(3n); } catch (e) {}
    }
    new F17(0n);
    new F17(349865170n);
    v2.POSITIVE_INFINITY = v13;
} catch(e26) {
}
[2.4245321004682694,0.9641815783252466,-1.7976931348623157e+308,-361.9200987273492];
new Array(120);
new BigInt(0);
new BigInt64Array(2, 120);
new Int32Array(16);
class C40 {
}
const v41 = new C40();
function f42(a43, a44, a45) {
    const o47 = {
        get b() {
            return C40;
        },
        127: v41,
    };
    Array(1000).indexOf(Array);
    function f52(a53, a54) {
        return f52;
    }
    f52(f52, f52);
    return f42;
}
%PrepareFunctionForOptimization(f42);
f42();
%OptimizeFunctionOnNextCall(f42);
f42(C40, v41, v41);
