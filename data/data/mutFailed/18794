const v4 = new Float32Array(Float32Array);
function f5(a6, a7, a8, a9) {
    a6[1];
    a7--;
    a6[0] = a6;
    a7 <= a7;
    arguments[1] = arguments;
    const v14 = arguments?.__lookupGetter__;
    try { v14.constructor(); } catch (e) {}
    let v16;
    try { v16 = v14(v14, f5, a7, arguments); } catch (e) {}
    return v16;
}
for (let v17 = 0; v17 < 10; v17++) {
    f5(v4);
}
class C19 {
    [-1.3266522790944002];
    static #m(a21) {
        function F24(a26, a27, a28, a29) {
            if (!new.target) { throw 'must be called with new'; }
        }
        let v31 = new Int32Array(Int32Array);
        v31++;
        return v31;
        return -1.3266522790944002;
    }
    constructor(a35) {
        const v39 = -8.290461192848784e+307 && a35;
        try {
        const t0 = 0.44967380041772886;
        t0();
        } catch (e) {}
        for (let v42 = 0; v42 < 5; v42++) {
            function f43() {
                const v46 = ("Vre").fixed("Vre").codePointAt();
                const v47 = v46 * v46;
                v47 >= v47;
                return f43;
            }
            f43();
            %OptimizeFunctionOnNextCall(f43);
        }
        const v50 = v39 >>> v39;
        -8.290461192848784e+307 | v39;
        v50 >>> v39;
    }
}
const v53 = new C19(1073741823);
const v54 = new C19(v53);
const v55 = new C19(v54);
const v56 = [-2147483647,9007199254740992,-1,129,8,1073741824,21939,1756514470,42055,1024];
const v57 = [0,65536,-51819,10000,9,2141248639];
const v58 = [1024,-9007199254740990,-6,-9223372036854775807,-1465528305,6,2147483648,9223372036854775807,536870889];
function f59() {
    return v58;
}
class C60 {
    constructor(a62, a63, a64) {
        a63.e = a63;
        class C66 extends a63.constructor {
        }
        const v67 = new C66();
        try { v67(); } catch (e) {}
    }
    #toString(a70, a71, a72, a73) {
        try {
            this.valueOf = f59;
            return a73;
            [Float32Array];
            function f76() {
                const t71 = ("1073741824").constructor;
                const v80 = t71().replaceAll(f76, 1073741823);
                return v80.toLowerCase(v80, "1073741824", v80);
            }
        } catch(e82) {
        }
        return v53;
    }
    c = v55;
    9;
    268435456;
    /*
    constructor(a84, a85) {
        a84?.h;
        super.g;
        const v88 = this.constructor;
        try { new v88(a84); } catch (e) {}
        Math.atan2(this, this);
    }
    */
    static [-7] = C19;
    [v56];
    /*
    constructor(a93, a94, a95, a96) {
        function F97() {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v99 = new F97();
        const v100 = [6.345269750596144e+307,1.5426121797865451e+308,-1.0,1.0763754168130034e+308,-1.0165609707268582e+308,-2.220446049250313e-16,4.1652134965708285,Infinity,8.22884515469082e+307,-1000000000.0];
        function F101(a103, a104, a105) {
            if (!new.target) { throw 'must be called with new'; }
            const v106 = this.constructor;
            try { new v106(v99); } catch (e) {}
            a103[3] = a103;
        }
        new F101(v100);
    }
    */
    static #e = v57;
}
new C60();
new C60();
new C60();
function F112(a114, a115) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e116) {
        for (let [v117,v118] of a114) {
        }
    }
    ~(-256n >> -256n);
    try {
        new F112();
    } catch(e123) {
    }
}
new F112(F112, F112);
new F112();
