function f0() {
}
const v1 = [0.0,1.7226749221068722,-5.0,-0.0,-2.220446049250313e-16,1000000000000.0,0.7279116176473055];
const v2 = [-1e-15];
const v3 = [2.0,-822349.7035006415,7.441646933268181,-2.2250738585072014e-308,-4.0,-5.172459238571323,738.0703093275417,-1.7976931348623157e+308,-1.7976931348623157e+308];
function f4() {
    return v1;
}
class C5 {
    static 8;
    static #a = f4;
    #n(a7) {
        try {
            v1.#n(f4, f4, a7, a7, v3);
        } catch(e9) {
        }
        return v2;
    }
    #g;
    static e = f4;
    static #e;
}
const v10 = new C5(f4, f0);
new C5();
new C5();
function F15() {
    if (!new.target) { throw 'must be called with new'; }
}
const v17 = new F15();
const v18 = [-2.0];
function F19(a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    const v24 = this.constructor;
    try { new v24(v17); } catch (e) {}
    a21[3] = a21;
}
new F19(v18);
const v29 = ([]).MIN_VALUE;
const v31 = new Proxy(f0, v2, v2);
v31.filter(v29, F19, C5, v10);
