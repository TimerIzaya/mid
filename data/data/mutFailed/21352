let v0 = [];
function f1() {
    const o4 = {
        ...v0,
        "c": v0,
        toString() {
            ({"c":v0,} = this);
            try {
                v0.__proto__ = this;
            } catch(e3) {
            }
            return v0;
        },
        "g": v0,
        "h": v0,
        "e": v0,
        "a": v0,
    };
    return o4;
}
f1();
const v6 = v0();
const v7 = v6();
48484 ^ 48484;
[-1314072899,8,461767751];
const v13 = [9,16,1024];
try { v13.entries(); } catch (e) {}
[536870912,-4294967296,55567];
64 >>> 6753;
new Uint8ClampedArray(64);
let v22;
try { v22 = v7.bind(v7); } catch (e) {}
new Uint8Array(1118);
241 + 241;
new v6(241);
class C28 {
}
const v29 = new Int16Array();
const v30 = v29?.constructor;
try { new v30(); } catch (e) {}
`match${v29}-20124`;
for (const v33 of v22) {
    try { v33.trimLeft(); } catch (e) {}
}
