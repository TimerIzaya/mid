class C3 {
    set d(a5) {
        try {
            super.cbrt(-48243, -8, a5, this);
        } catch(e7) {
        }
    }
    8 = -48243;
    a = -48243;
    2;
    82;
    static #d = "235vt";
    #f = -48243;
}
try { C3.bind(-48243); } catch (e) {}
let v9;
try { v9 = C3.apply("235vt", -48243); } catch (e) {}
new C3();
const v11 = new C3();
const v12 = new C3();
v12[82];
const v14 = [-117692581,-1,-6513,127,-52478];
const v15 = [-5173,6,-14,1073741824,4294967297,0];
let v16;
try { v16 = v15.propertyIsEnumerable(v11); } catch (e) {}
v16 && v16;
const v18 = [4096,1073741823,1073741824,1692529669,5,268435440,8];
class C19 {
    2;
    n(a21, a22, a23) {
        new C3();
        super[v14];
        let v27 = -9007199254740991;
        v27--;
        Math.hypot(C3);
        let v31 = C3 - v27;
        Math.cosh(v31);
        v31--;
        return -442235.3921495264;
    }
}
function f34(a35, a36) {
    -8 >= a36;
    v18.__proto__;
    return a36;
}
C19.toString = f34;
try { C19.toString(); } catch (e) {}
const v40 = C19?.apply;
v40.name;
const v42 = v40?.apply;
try { new v42(v18, v42); } catch (e) {}
try { new v42(v15, -48243); } catch (e) {}
try { new v40("235vt", "235vt"); } catch (e) {}
new C19();
const v47 = new C19();
v47[2] = v47;
new C19();
("grow")[0];
369263011 >>> 369263011;
const v54 = !(369263011 ^ "grow");
v54 || v54;
const v56 = [-6.672391061426152e+307];
v56[0] = v56;
try { v56.lastIndexOf(C3); } catch (e) {}
function f58() {
    let v60;
    try { v60 = ("pop").anchor(v9); } catch (e) {}
    const v61 = v60?.localeCompare;
    try { new v61(C19); } catch (e) {}
    const v63 = v56["pop"]();
    function f64() {
        const v66 = Symbol.split;
        v60[v66] = v66;
        return v63;
    }
    v63[Symbol.toPrimitive] = f64;
    v63 >>> v63;
    v63 >> v63;
    const v72 = !(v63 <= v54);
    v72 && v72;
    return 369263011;
}
try { f58(); } catch (e) {}
%PrepareFunctionForOptimization(f58);
const v75 = f58();
v75 + v75;
%OptimizeFunctionOnNextCall(f58);
f58();
