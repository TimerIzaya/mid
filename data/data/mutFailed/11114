function f0() {
    const o9 = {
        __proto__: "string",
        ..."string",
        "a": "string",
        "g": 10,
        "f": 10,
        [10]: -59886,
        o(a5, a6) {
            super.b -= a5;
            -59886 === "string" ? -59886 : "string";
            return "string";
        },
        "h": 10,
    };
    Object.defineProperty(o9, "toString", { writable: true, value: f0 });
    return o9;
}
const v10 = f0();
const v11 = f0();
const v12 = f0();
class C13 {
    [v11] = v12;
    #a;
    o(a15, a16) {
        const v17 = super[a16];
        try {
            super.getOwnPropertyDescriptor(v17, a16, this, a16, v10);
        } catch(e19) {
        }
        return v17;
    }
    e = v12;
    8 = v11;
    b = v11;
}
const v20 = new C13();
const v21 = new C13();
new C13();
class C23 {
    #c = v10;
    a;
    static c = v12;
    static 4 = v21;
    o(a25, a26, a27) {
        Object.defineProperty(v21, this, { configurable: true, enumerable: true, set: f0 });
        return v21;
    }
    [v20];
    static b = v11;
    f = C13;
    1255616702 = C13;
    static a = f0;
}
new C23();
new C23();
new C23();
new Map();
class C34 {
    141 = "9007199254740991";
}
new C34();
new C34();
new BigInt64Array();
function f44() {
    const v48 = -65535 / -65535;
    const o95 = {
        ...352326470,
        m(a50) {
            a50.c = this;
            a50.c = a50;
            a50.h = a50;
            const o51 = {
            };
            o51.d = o51;
            o51.d = o51;
            o51.h = o51;
            function f52(a53, a54, a55) {
            }
            f52.bind();
            f52.caller = f52;
            try {
                o51.e = -65535;
            } catch(e57) {
                const v61 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v61, o51);
            }
            const o63 = {
            };
            o63.g = o63;
            o63.e = 1261703539;
            let v65;
            try { v65 = Math.expm1(128); } catch (e) {}
            v65--;
            const v68 = -9007199254740991 >> -9007199254740991;
            v68 - v68;
            -Math.sin(-9007199254740991);
            try { ("EV").link(v48); } catch (e) {}
            0 != 0;
            class C76 {
                o(a78, a79, a80, a81) {
                    class C82 {
                    }
                }
            }
            C76.name = C76;
            new C76();
            const v86 = new Int8Array(3938);
            let v87 = 3;
            const v88 = v87++;
            v88 + v88;
            const v91 = 0 >> 0;
            const v92 = v91 - v91;
            v92 / v92;
            [...v87] = v86;
            const o94 = {
            };
            o94.c = v92;
            o94.c = o94;
            return this;
        },
    };
    let v96;
    try { v96 = o95.m(o95); } catch (e) {}
    v96.m(128);
    class C99 {
    }
    new Float32Array();
}
f44();
