const v4 = (3273).h;
const v5 = v4?.h;
let v6;
try { v6 = v5(); } catch (e) {}
try { v4(3273, 3273, v6); } catch (e) {}
function f8() {
    return -1000.0;
}
new BigUint64Array(3273);
const v13 = new BigUint64Array(187);
const v16 = new Float64Array(2062);
class C17 extends Float64Array {
    static #g;
    n(a19, a20, a21) {
        super.b = this;
        const v24 = v16["includes"](a20, a19);
        try { v24(v24, this, v24, v24); } catch (e) {}
        new BigUint64Array(v13, 2062, 187);
        return BigUint64Array;
    }
    4 = 3273;
    #a = 9.656322642808291;
    f = v13;
}
new C17();
new C17();
new C17();
const o31 = {
    ..."1p",
};
const v32 = [o31,o31,o31,o31];
const v34 = 28621 + 28621;
function f35() {
    return v32;
}
const o37 = {
    ...o31,
};
o37.length = v34;
Reflect.apply(f35, v32, o37);
