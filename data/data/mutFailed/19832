const v3 = [512,512];
const v4 = [512,-2147483648];
const v5 = [v4,v4,v3,-2147483648];
const v9 = new Date();
const v11 = [Reflect,Reflect,Reflect,Reflect];
Reflect.apply(v9.getDate, v9, v11);
function f15(a16, a17) {
    const o27 = {
        "g": a16,
        p(a19, a20) {
            a16[161] = a17;
            a20[16] = a20;
            return v4;
        },
        "e": v5,
        [9007199254740990](a22, a23) {
            /l[^\x01(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\107\w|\d]/gudy;
            /9t2a(?=bbb|bb)c/gdm;
            /H(?:a{5,1000000}){3,1000000}(\2)(\1)/gvdsy;
            return a23;
        },
    };
    return o27;
}
f15(v5, 512);
f15(v5, 9007199254740990);
f15(v5, 512);
const v31 = /(?<a>.)\k<a>?/vdimsy;
let v32;
try { v32 = v31(); } catch (e) {}
const v33 = [v32,v32,v32,v32];
function f35() {
    return ([f35,f35]).constructor.isArray();
}
%PrepareFunctionForOptimization(f35);
const v39 = new BigInt64Array();
function f41() {
    3.4890473589784586e+307 === 3.4890473589784586e+307;
    let v44 = 1000000000000.0;
    const v45 = v44--;
    let v47 = 257828.6336153492;
    const v49 = -v33;
    -(v49 && v33);
    v47--;
    class C54 {
        static #m(a56) {
        }
        constructor(a58) {
            const v60 = new Float32Array();
            v60.entries().next();
            const v63 = new Uint16Array(12, -4294967296, v45);
            new Float32Array(v63);
        }
    }
    try { new C54(); } catch (e) {}
    try { new C54(); } catch (e) {}
    const v68 = Symbol.iterator;
    Math[v68] = v68;
    try { v39.reduce(v32); } catch (e) {}
    const v70 = new C54();
    const v71 = new C54();
    try { v71.propertyIsEnumerable(v49); } catch (e) {}
    function f73(a74, a75) {
        function F76(a78, a79) {
            if (!new.target) { throw 'must be called with new'; }
            const v80 = this.constructor;
            let v81;
            try { v81 = new v80(); } catch (e) {}
            try { this.constructor(a74, f73, v81, F76); } catch (e) {}
        }
        new F76(a74, a75);
        return f73;
    }
    const v84 = new C54();
    const v85 = [];
    const v86 = [v84];
    v86[0];
    class C88 extends C54 {
        [v70];
        #n(a90, a91, a92, a93) {
            return v86;
        }
    }
    const v94 = new C88();
    const v95 = v86.constructor;
    new v95();
    class C97 extends v95 {
    }
    const v98 = new C97();
    v98.constructor.bind(v47);
    Object.defineProperty(v98, 65537, { value: v71 });
    try { v94.m(v85); } catch (e) {}
    return v32;
}
%PrepareFunctionForOptimization(f41);
f41();
f41();
%OptimizeFunctionOnNextCall(f41);
f41();
