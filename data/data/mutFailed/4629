const v0 = /a(a)\1(x)(x)(x)\2*/v;
const v1 = /[\xe2\x81\xa3]foo(?<!bar)baz\c!\xf0\x9f\x92\xa9O.(?:a*)+/gdis;
const v2 = /((?:ab)+)/vds;
const v3 = [1.2134622767671212e+307,-429.60284539173847,1e-15,0.45983114026456584,-1000000000.0,-1.7976931348623157e+308,-2.2250738585072014e-308];
v0[3] = v3;
const v4 = v3[2];
v4 << v4;
const v6 = [2.220446049250313e-16,1.2750975195745166e+308,-2.2250738585072014e-308,-1.7976931348623157e+308,-941733.5938278313,-0.0];
const v7 = [2.2250738585072014e-308,-1000000000.0,4.0,880493.4725536206];
v7[3] = v7;
function F8(a10, a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    a12.source;
    let v14;
    try { v14 = a10.toString(); } catch (e) {}
    v14[2];
    a12.e = a12;
    try {
        this.f = v6;
    } catch(e16) {
    }
}
const v17 = new F8(v6, v3, v1);
const v18 = v17.f;
const v19 = new F8(v3, v17, v1);
let v20;
try { v20 = v19.hasOwnProperty(v2); } catch (e) {}
const v21 = new F8(v7, v6, v2);
class C22 {
    static set h(a24) {
        /(\x60)/vm;
        /q^yQ/vi;
        /[[z-\d](x)(x)(x)\1(a)n\u{12345}a.(x)(x)(x)\1*]/m;
        new F8(v3, v1, a24);
        v3.__proto__;
    }
    static {
        const v31 = this.name;
        v31 == v31;
        2.0 !== 2.0;
        let v38;
        try { v38 = new v18(966, v21, F8, F8, -349.36814632545315); } catch (e) {}
        let {"h":v39,} = v31;
        966 >> 966;
        new Uint8Array(966);
        const v47 = 256 >>> v20;
        v47 - v47;
        const v50 = new Uint32Array(256);
        try { v50.with(v6, v50); } catch (e) {}
        try { v50["reduce"](..."reduce", ...v31, F8, v0); } catch (e) {}
        for (let v55 = 0; v55 < 32; v55++) {
            v38["p" + v55] = v55;
        }
        new Uint8Array(128);
    }
}
let v60;
try { v60 = new C22(); } catch (e) {}
const v61 = v60?.constructor;
try { new v61(); } catch (e) {}
const v63 = new C22();
v3.f = v63;
new C22();
new C22();
Infinity >>> Infinity;
/kB^xxx$R[\cZ]/guiy;
