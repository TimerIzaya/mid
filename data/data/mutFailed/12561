class C3 {
    static set g(a5) {
        this[4];
        function F7(a9, a10, a11, a12) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.c = a11;
            } catch(e13) {
            }
        }
        const v14 = new F7(C3, a5, a5, C3);
        const v15 = new F7(this, Infinity, -13, v14);
        new F7(v15, C3, "undefined", -13);
    }
    static set g(a18) {
        const o22 = {
            valueOf() {
                this != "undefined" ? this : "undefined";
                return "undefined";
            },
        };
    }
    static {
        const o27 = {
        };
        new Proxy("getOwnPropertySymbols", o27);
    }
}
const v30 = new C3();
new C3();
new C3();
function f33() {
    return v30;
}
[9,129,64,-268435456,-1024,8,-47833,-1148184745,29829717];
[-1277079464,-14,-15,268435456,9007199254740992];
const v37 = [256,4294967297,-7,65536,-256,-9223372036854775807,-22763,27549,-9223372036854775808,-4294967295];
const o39 = {
};
try {
    o39.e = C3;
} catch(e40) {
}
try {
    const o41 = {
    };
    o41.e = C3;
    o41.f = v30;
} catch(e42) {
}
try {
    const o43 = {
    };
    o43.e = C3;
    o43.f = v30;
    o43.a = v37;
} catch(e44) {
}
try {
    const o45 = {
    };
    o45.e = C3;
    o45.f = v30;
    o45.a = "undefined";
} catch(e46) {
}
new Float64Array(129);
new Int16Array(9);
new Uint8Array(1290);
for (let v56 = 0; v56 < 5; v56++) {
    for (const v57 in "toString") {
    }
}
try {
    undefined.fuck();
} catch(e60) {
}
