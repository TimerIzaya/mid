const v0 = [573795128,14,-759071429,-4294967295,22109,7203];
const v1 = [129,1073741824,6459,417053531,-1024,615085621,4294967297,-512958009,1248276069];
const v2 = [30129,9007199254740990];
function f3() {
    return v0;
}
function f4(a5) {
    a5[2] = a5;
    const o15 = {
        "d": v1,
        "b": v1,
        p(a7, a8) {
            const v9 = this.g;
            Reflect.set(v9, [v9,v0,a5,this,Reflect], v9);
            try {
                new f3();
            } catch(e14) {
            }
            return a5;
        },
    };
    return o15;
}
const v16 = f4(v0);
const v17 = f4(v0);
v17.e = v17;
const v18 = f4(v2);
const v19 = /i[\cA]/gus;
const v20 = /[a\w((\xed\xa0\x80))\x025\P{scx=Greek}?]/udimy;
/f*/gvdim;
let v24;
try { v24 = new BigInt64Array(BigInt64Array, v19, v17); } catch (e) {}
const v25 = new BigInt64Array(1080, f3);
Float32Array.BYTES_PER_ELEMENT = Float32Array;
new Float32Array(298);
Int16Array.prototype = Int16Array;
const v31 = new Int16Array(58);
v31[36] = v31;
for (let v33 = 0; v33 < 5; v33++) {
    const v34 = v16[f4];
    let v35;
    try { v35 = new v34(v33, ...v25, f3, v18, v20, v17); } catch (e) {}
    const o36 = {
    };
    try {
        o36.a = v33;
    } catch(e37) {
    }
    try {
        const o38 = {
        };
        o38.a = v34;
        o38.f = 1080;
    } catch(e39) {
    }
    try {
        const o40 = {
        };
        o40.c = o40;
        o40.a = v34;
        o40.b = 1080;
        o40.g = BigInt64Array;
    } catch(e41) {
    }
    try {
        const o42 = {
        };
        o42.h = o42;
        o42.g = v34;
        o42.f = 1080;
        o42.callee = v31;
    } catch(e43) {
    }
    function f44() {
        const t74 = "Vre";
        t74[2] = "Vre";
        const v46 = ("Vre").charAt(v33);
        v46[0] = v46;
        v46.lastIndexOf();
        const v49 = new v35();
        function f50() {
            return v49;
        }
        const o58 = {
            [-4294967297n](a52, a53, a54, a55) {
                BigUint64Array();
            },
        };
        o58.b = o58;
        return o58;
    }
    try { f44.bind(58); } catch (e) {}
    const v60 = v24();
    v60.d = v60;
    %OptimizeFunctionOnNextCall(f44);
}
