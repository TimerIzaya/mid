class C3 {
    static ["536870887"];
    static get e() {
        return -12967n;
    }
    constructor(a9, a10) {
        this[130] = NaN;
        let v11;
        try { v11 = new a9(); } catch (e) {}
        this / v11;
        -Infinity;
    }
}
function F16() {
    if (!new.target) { throw 'must be called with new'; }
    function f19() {
        return -9007199254740992n;
    }
    class C20 {
    }
    new C20();
    this.c = 1073741823;
    const o23 = {
    };
    class C24 {
        static #b = 13897;
        static get e() {
            return 1n;
        }
    }
    const v28 = new Set();
    function F29(a31, a32) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.d = a31;
        } catch(e33) {
        }
        v28[this];
        try {
            new F29(a32, v28);
        } catch(e36) {
        }
        new Uint8ClampedArray(995);
        class C40 {
        }
        new C40();
    }
}
new F16();
new F16();
new F16();
new Float32Array(4);
new Uint32Array(2);
function F54(a56, a57, a58, a59) {
    if (!new.target) { throw 'must be called with new'; }
}
const v60 = new F54(F54, F54, F54, F54);
for (let v61 = 0; v61 < 25; v61++) {
    v60["p" + v61] = v61;
}
class C64 {
    constructor(a66, a67) {
        for (let i = 0; i < 10; i++) {
            this[this];
        }
    }
}
new C64();
function F70(a72, a73) {
    if (!new.target) { throw 'must be called with new'; }
    const t70 = [];
    t70.length = "number";
    function F78(a80) {
        if (!new.target) { throw 'must be called with new'; }
        const v81 = this.constructor;
        try { v81.apply(a80); } catch (e) {}
        try { new v81(); } catch (e) {}
    }
    const t78 = Array(11);
    t78[212] -= 3774;
    const v86 = this.constructor;
    try { new v86(this); } catch (e) {}
    const o90 = {
    };
    function F91(a93, a94, a95) {
        if (!new.target) { throw 'must be called with new'; }
        const v97 = Math.acosh("9g9Ak");
        "9g9Ak" % undefined;
        const v99 = this.constructor;
        try { new v99(o90, v97); } catch (e) {}
    }
    new F91(F91, undefined, o90);
    a73++;
}
const v103 = new F70();
const t95 = v103.constructor;
new t95();
const v106 = new C3(13897, NaN);
const v107 = new C3(NaN, NaN);
const v108 = new C3(NaN, NaN);
const v109 = ["536870887",13897,"536870887"];
const v110 = [NaN,v107];
const v111 = ["536870887",C3,v106,v110,v106];
function F112(a114, a115, a116) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = v108;
    } catch(e117) {
    }
    try {
        this.e = v111;
    } catch(e118) {
    }
    try {
        this.b = a114;
    } catch(e119) {
    }
}
new F112(v111, v109, v108);
const v121 = new F112(v110, v110, v111);
new F112(v121, v109, v111);
class C125 extends Array {
    2 = 64;
}
new C125();
