function f0() {
    const o10 = {
        ...6,
        toString(a5, a6) {
            for (let v7 = 0; v7 < 32; v7++) {
                this["p" + a6] = v7;
            }
            return a5;
        },
        "c": 0.9696473515748227,
        [-300660160]: 6,
        "d": 6,
    };
    return f0;
}
f0();
f0();
const v13 = f0();
try { v13.toString(v13, f0); } catch (e) {}
v13.b = v13;
-640192408 != -640192408;
f0.prototype = Set;
let v20;
try { v20 = new Set(); } catch (e) {}
const v21 = new v20();
let v22;
try { v22 = v21.add(Set); } catch (e) {}
try { v22.keys(); } catch (e) {}
1000000000000.0 >> 1000000000000.0;
const v28 = [1000000000.0,-1000.0];
let v29;
try { v29 = v28.lastIndexOf(8); } catch (e) {}
v29--;
function F31(a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    const v35 = this.constructor;
    v35.a = v35;
    try { new v35(); } catch (e) {}
    a33--;
    a33 & a33;
}
const t41 = 1000000000000.0;
new t41();
new f0();
