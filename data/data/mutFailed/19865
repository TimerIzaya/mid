const v5 = new Int16Array(9);
const v8 = new BigUint64Array(47);
const v9 = new BigUint64Array("boolean", 47, 9);
const v10 = v8.buffer;
try { v5(); } catch (e) {}
typeof v10 === "symbol";
new Float64Array(1);
for (let v18 = 0; v18 < 25; v18++) {
    function f19() {
        return f19;
    }
    f19();
    f19 % -315.71653938284874;
    Math.abs(f19);
    v9 / f19;
    const v27 = [601759695];
    const v28 = [1073741824,1073741823,1376142744,1073741825];
    function F29(a31) {
        if (!new.target) { throw 'must be called with new'; }
        this.constructor.arguments;
    }
    const v34 = new F29();
    function f35(a36, a37, a38, a39) {
        v28.toLocaleString();
        try { v28[f19](..."find", a39, ...v27, ...v28); } catch (e) {}
        typeof v18 === "number";
    }
    for (let v46 = 0; v46 < 5; v46++) {
        if (v34 !== v46) {
            Object.defineProperty(v28, "d", { writable: true, configurable: true, get: f19 });
        } else {
            new f35(v27, f35, f19, v46);
        }
        f35(f19, v46, v46, v28);
    }
}
