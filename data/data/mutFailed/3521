BigUint64Array.name = BigUint64Array;
const v5 = new BigUint64Array(9);
let v6 = "jER";
const v7 = [17452,4294967295,64,-8];
[v6] = v7;
const v9 = new Set();
try { v9.clear(); } catch (e) {}
3 !== 3;
const v14 = new BigInt64Array(3);
v14[0];
1523 + 1523;
const v19 = new Int32Array(1523);
function f20(a21, a22, a23) {
    a22--;
    const v25 = a22 ^ a22;
    a23 / a23;
    a21 / a21;
    const v28 = a23 === a23;
    function F29() {
        if (!new.target) { throw 'must be called with new'; }
    }
    class C31 {
    }
    const v32 = new v25();
    const v33 = v32?.constructor;
    try { new v33(); } catch (e) {}
    const v36 = ReferenceError.captureStackTrace(C31, v32);
    const o63 = {
        "c": v5,
        "arguments": v7,
        "b": 9,
        toString() {
            super[this];
        },
        ...v19,
        __proto__: v5,
        get b() {
            super[-65536 ^ a22] = this;
            const v41 = [155533.8602852358,2.0];
            function F43() {
                if (!new.target) { throw 'must be called with new'; }
                this.__lookupGetter__.bind();
                for (const v50 of Array(19793)) {
                    v41[658291203] = null;
                }
            }
            const v51 = new F43();
            const t47 = v51.constructor;
            new t47();
            new BigInt64Array(11);
            new Int16Array(256);
            new Uint8Array(7);
            return v36;
        },
    };
    return v28;
}
try { ("async").match(BigInt64Array); } catch (e) {}
("async").lastIndexOf();
let v68 = f20(3, 9, 9)[449];
v68--;
const v70 = f20(9, -65536, 1024);
try { v70.includes(-65536); } catch (e) {}
const v73 = v7.entries;
v73.name = v73;
let v74;
try { v74 = new v73(v73, v7, v73, v73, null); } catch (e) {}
const v76 = BigInt.prototype;
try { v76.toLocaleString(); } catch (e) {}
try {
    BigInt(BigInt);
} catch(e79) {
}
const v80 = f20(3, -65536, 9);
try { v80.includes(v73); } catch (e) {}
const v83 = ([-1000000.0,771279.5641904315,0.0,8.299995604235331,6.625300935335886,-820.4949035918538,-602.5256799896665,0.6342705996691437,Infinity]).toLocaleString();
try { v83.split(v74, v83); } catch (e) {}
