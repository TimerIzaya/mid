const v3 = [257,2147483648,1000];
const v4 = [-8,-72867578,268435456,1073741823,12,-13,9007199254740992,-44196,3];
const v5 = [10,8,11,-45979,1689889747,-2147483647,-9223372036854775807,-1,249181714];
try { v5.at(v3); } catch (e) {}
class C7 {
    [v3];
    [285292902n] = 10000n;
    c;
    e;
    static e;
    static #g;
    #h = 285292902n;
    static o(a9, a10, a11, a12) {
        this ** this[a9];
        [4,7,129,3,3,-2147483647,925512177,-1];
        [-49041,-10,16,681308209,1073741824,18480,1502213037,-3,-65535];
        [2,-9223372036854775807];
        return v4;
    }
    static [1073741824n];
    #c = 1073741824n;
}
new C7();
const v19 = new C7();
const v20 = v19?.constructor;
try { new v20(); } catch (e) {}
const v22 = new C7();
try { v22.hasOwnProperty(v19); } catch (e) {}
const v25 = new Date();
536870889 - 536870889;
function f30(a31) {
    const o37 = {
        __proto__: 2,
        "h": v25,
        "a": 10000n,
        5: v22,
        "d": 10000n,
        6: a31,
        "c": 2,
        "e": 536870889,
        213: a31,
        ...a31,
        "g": 2,
        p(a33, a34) {
            try {
                this.fuck(536870889, a31);
            } catch(e36) {
            }
            return this;
        },
    };
    return o37;
}
f30(536870889)[213];
f30();
f30(536870889);
-1438357195n ^ -1438357195n;
const v46 = -16n << -16n;
[1024,-2147483647,9,2,-143059550];
[-9007199254740990,-12324,-1610869293,1250817203,-1];
const v56 = (v46 - 255) ** -1;
v46 + -1;
v56 ** -1;
[-65537,127,9007199254740992,5932,536870888,64];
f30();
%PrepareFunctionForOptimization(f30);
f30();
f30();
%OptimizeFunctionOnNextCall(f30);
f30(2)[213];
