const v0 = [106066.97957056458,-1.4048597929636547e+308,2.0];
const v1 = [0.423198925562954,-5.0,Infinity,-1000000.0,-638.1291184099778,5.0,0.30079566995756146,3.590381067747234e+306,-1000000000.0];
const v2 = [0.21227580496600784,0.37827842403470624,1.954837946739742,NaN,0.4468298106544619,-4.08069276189436];
class C3 {
    static set e(a5) {
        let [] = v2;
        const o8 = {
            "maxByteLength": 7,
        };
        const v10 = new ArrayBuffer(5, o8);
        new Int32Array(v10);
    }
}
C3.prototype = C3;
const v13 = new C3();
const v14 = v13?.isPrototypeOf;
try { new v14(v0); } catch (e) {}
const v16 = new C3();
const v17 = v16?.constructor;
try { new v17(); } catch (e) {}
const v19 = new C3();
const v20 = v19?.constructor;
try { new v20(); } catch (e) {}
const v22 = v19?.constructor;
let v23;
try { v23 = new v22(); } catch (e) {}
class C24 {
    static 536870889 = v2;
    constructor(a26, a27) {
        a26.name = a26;
        a27[5];
        let v29;
        try { v29 = this.propertyIsEnumerable(v13); } catch (e) {}
        v29 || v29;
        try { a27.includes(v16); } catch (e) {}
        a26[3872] = v2;
        let [] = a27;
        const o34 = {
            "maxByteLength": 536870912,
        };
        const v36 = new SharedArrayBuffer(512, o34);
        v36.byteLength;
        try { new Float32Array(v2, v2, this); } catch (e) {}
        const v40 = new Float32Array(v36);
        v40[116] = v40;
    }
}
try { C24.bind(C3); } catch (e) {}
const v42 = new C24(C3, v2);
const v43 = v42?.constructor;
v43[536870889] = v43;
try { new v43(C3, v13); } catch (e) {}
const v45 = new C24(v42, v0);
const v46 = v45?.propertyIsEnumerable;
try { new v46(C3); } catch (e) {}
const v48 = new C24(v1, v2);
try { v48.constructor(v1, v23); } catch (e) {}
let v50;
try { v50 = v48.propertyIsEnumerable(v42); } catch (e) {}
v50 && v50;
~-833400077;
function f56() {
    1073741823 - 1073741823;
    const v60 = new Int8Array(1073741823);
    try { v60.copyWithin(v22, 1073741825); } catch (e) {}
    try { v60.toSorted(1073741823); } catch (e) {}
    return f56;
}
f56.length = f56;
const v63 = f56();
try { v63(); } catch (e) {}
v63.name = v63;
const v65 = f56();
v65.caller = v65;
f56();
