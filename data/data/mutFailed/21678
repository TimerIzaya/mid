class C3 {
    #c = 33128n;
    constructor(a5, a6) {
        a6.__proto__;
    }
    #valueOf(a9) {
        try {
            this.#c;
        } catch(e11) {
        }
        return a9;
    }
    #toString(a13) {
        const v14 = a13 && 49571n;
        let v15;
        try { v15 = v14(v14, 33128n, v14, v14, -8n); } catch (e) {}
        const v16 = v15 ** 33128n;
        super.d = v15;
        v15 >>> v14;
        super.f = this;
        [Infinity];
        [1.7976931348623157e+308,0.10098983697833741,-4.0,4.0,-1.48764158516232e+308,256.6294978560272];
        [6.441652561016971e+307,72850.08005918795,1000.0,-4.698844340112238,1.0];
        return v16;
    }
}
new C3();
new C3();
const v23 = new C3();
const v25 = new C3();
v23[33128n] = v25;
class C33 {
    static #m(a35) {
    }
    set d(a37) {
        this.#m();
    }
    constructor(a40) {
        function f41() {
            return f41;
        }
        Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f41 });
    }
}
const v42 = new C33();
([v42]).constructor;
new Int32Array(10);
const v48 = new Int32Array(0);
try { C3.setUTCMonth(v48, v23); } catch (e) {}
-5.0 >>> -1e-15;
C3 %= Int32Array;
const o51 = {
};
try {
    o51.d = v25;
} catch(e52) {
}
try {
    const v55 = new Int16Array(12);
    v55.fill();
    ("undefined").localeCompare("undefined");
    const o59 = {
    };
    const v61 = Array();
    for (let v62 = 0; v62 < 5; v62++) {
        function f63() {
            try {
                const v64 = [v61,v61,v61];
                const o65 = {
                };
                const t70 = o65 > v64;
                t70();
            } catch(e68) {
                for (let v69 = 0; v69 < 500; v69++) {
                }
            }
        }
        f63();
    }
    o59.d = v25;
    o59.g = 33128n;
} catch(e71) {
}
try {
    const o72 = {
    };
    o72.d = v25;
    o72.g = 33128n;
    function F73(a75, a76) {
        if (!new.target) { throw 'must be called with new'; }
        ~(-256n >> -256n);
        try {
            new F73(this, a75);
        } catch(e81) {
        }
    }
    o72.a = -0.0;
} catch(e82) {
}
try {
    const o83 = {
    };
    o83.d = v25;
    o83.g = 33128n;
    o83.a = C3;
} catch(e84) {
}
new Uint16Array(512);
("deleteProperty").replace("deleteProperty");
