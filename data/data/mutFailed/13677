["setFloat64","setFloat64","flags"];
const v4 = ["flags"];
const v6 = [-1000000.0,771279.5641904315,0.0,8.299995604235331,6.625300935335886,-820.4949035918538,-602.5256799896665,0.6342705996691437,Infinity];
const v7 = [1000000000.0,4.0,5.0,-6.555298893133851e+307];
for (let v8 = 0; v8 < 5; v8++) {
    v7.unshift(-463330.04816285486, v6.values());
}
[v4];
new Date();
function f16() {
}
new Int16Array(Int16Array.name);
const v22 = new Date();
v22.setFullYear();
const v27 = new TypeError(TypeError);
v27.indexOf(NaN, 7);
const v29 = [-9223372036854775808,64];
const v30 = [-4294967296,-63504,-9223372036854775807,512,24559,2];
const v31 = [-9219,-1824342407,-14,7,65537,-49368];
function F32(a34, a35, a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    const v38 = a36[1];
    try {
        with (a34) {
            F32(v38, a37);
        }
    } catch(e40) {
    }
}
eval();
const v44 = gc();
const o46 = {
    "maxByteLength": 1000,
};
new F32(v31, v30, v29, v6, v44);
function f48() {
}
class C49 extends f48 {
    constructor(a51) {
        super(Date, Int16Array);
        for (let v52 = 0; v52 < 5; v52++) {
            super.valueOf();
        }
    }
}
new C49();
