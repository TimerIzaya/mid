5 / 5;
[[5],Uint8Array];
class C9 extends BigInt64Array {
}
for (let v10 = 0; v10 < 32; v10++) {
    C9["p" + v10] = v10;
}
const v13 = /Ea|bc?/gui;
let v14 = 2.0;
v14--;
class C17 {
    static [0];
    static #b;
    static [v14];
}
const v18 = new C17();
const v19 = v18?.constructor;
try { new v19(); } catch (e) {}
const o21 = {
    ...v18,
    "e": v18,
    1073741825: C17,
    ...C17,
    4278294744: 0,
};
o21[2];
const v23 = /[x]/gui;
v23.lastIndex;
/a[^a]/gudimy;
[Uint8ClampedArray,Uint8ClampedArray];
const v30 = new Float32Array(2);
const v32 = new Int32Array(v30, 2);
class C33 {
    static {
        const v35 = super[this];
        try { v35.join(C33, C33, v35); } catch (e) {}
    }
}
C33.g = C33;
const v37 = v30;
const v38 = v32.fill(...v37);
let v39;
try { v39 = v38.lastIndexOf(v38); } catch (e) {}
v39 >>> v39;
class C41 {
    268435440 = v23;
    ["expm1"] = C9;
    #valueOf(a43, a44, a45, a46) {
        this.#valueOf();
    }
    2;
    o(a49, a50, a51, a52) {
        delete a52[349197118];
        return a49;
    }
    static #a;
    static #m(a55, a56, a57, a58) {
    }
    static {
        try { this.bind(v23); } catch (e) {}
        const v61 = this || "expm1";
        v61.g = v61;
        const t62 = "symbol";
        t62[1] = "symbol";
    }
    static [v23] = v13;
    static {
        const v66 = this?.apply;
        try { new v66(C17, v13); } catch (e) {}
        super[v23];
    }
    static e = v23;
    2387;
}
C41.e = C41;
new C41();
new C41();
const v71 = [49197,268435456,-12,-5156,35920,-45892,-667,536870888,65537,-12];
try { v71.sort("b"); } catch (e) {}
1 / 1;
try { new Uint8Array(C33, v39, v39); } catch (e) {}
const v80 = new Uint8Array();
const v83 = new Uint32Array();
function f84(a85, a86, a87, a88) {
    a85 >>> a85;
    a86 >>> a86;
    a85 - a85;
    let v92 = a87--;
    v92--;
    a88 >>> a88;
    const v95 = a86--;
    v95 + v95;
    a88 + a87;
    const o101 = {
        "b": a85,
        "c": a88,
        ...v80,
        n(a99, a100) {
            v83[a85] = v83;
            return a100;
        },
    };
    let v102;
    try { v102 = o101.n(o101, -2); } catch (e) {}
    v102 | v102;
    return a87;
}
f84.length;
const v105 = f84(2, 2, 1, 2);
v105 + v105;
for (let v107 = 0; v107 < 500; v107++) {
    v107 >> v107;
    const v109 = f84(Uint8Array, 2, v107, 2);
    v109 - v109;
}
const v111 = new Float32Array(v71);
v111[4294967295] = v111;
const o113 = {
    "maxByteLength": 1073741824,
};
new C41();
const v120 = new Int8Array();
const v121 = v120.constructor;
v121.name = v121;
Math.acosh(-64468);
const v124 = new Int32Array();
try { v124.forEach("P"); } catch (e) {}
-463330.04816285486 + -463330.04816285486;
const v128 = [1000000000.0,4.0,5.0,-6.555298893133851e+307];
v128[11] = v124;
const v129 = v128.unshift(-463330.04816285486);
v129 >>> v129;
