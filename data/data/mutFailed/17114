function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -52966;
    } catch(e3) {
    }
    try {
        function f4() {
            const o7 = {
                get c() {
                    super.m();
                },
            };
        }
        const v9 = new Int8Array();
        const t15 = v9.buffer;
        t15.constructor = f4;
        this.f = -52966;
    } catch(e11) {
    }
    try {
        this.d = -52966;
    } catch(e12) {
    }
}
const v13 = new F0();
const v14 = new F0();
const v15 = new F0();
class C16 extends F0 {
    536870887 = v13;
    static #c;
    constructor(a18, a19) {
        super();
        try {
            super.o(a18, this, F0, a19);
        } catch(e21) {
        }
        function f22(a23, a24) {
            a23++;
            return C16;
        }
        f22(C16);
        typeof this === "function";
        ([-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1]).pop();
        eval();
        function f35() {
            ("filter")["startsWith"]();
            const v39 = Math.cosh(Math);
            v39 / v39;
            return "startsWith";
        }
        %OptimizeFunctionOnNextCall(f35);
    }
    765;
    #e = v13;
}
new C16(v14, F0);
for (let v42 = 0; v42 < 5; v42++) {
    function f43() {
        let v44 = -128n;
        ++v44;
        return f43;
    }
    f43();
    %OptimizeFunctionOnNextCall(f43);
}
const v47 = new C16(v13, v13);
const v48 = new C16(v47, C16);
class C52 extends F0 {
    constructor(a54, a55, a56) {
        super();
        ~([-1.5424212036356715e+308]).shift();
        const v62 = [0.0,-2.220446049250313e-16];
        let v63;
        try {
        const t0 = 16;
        v63 = t0(16, 16);
        } catch (e) {}
        function f64() {
            return f64;
        }
        class C65 extends f64 {
        }
        class C66 {
            constructor(a68, a69) {
                let v72 = v62[v63];
                v72 **= 16;
                function f73(a74, a75, a76, a77) {
                    return 2;
                }
                for (let v78 = 0; v78 < 625; v78++) {
                    f73(Uint8Array, 2, v78);
                    try {
                        a68 &= C65;
                    } catch(e80) {
                    }
                }
            }
        }
        -9007199254740991 % 0.8899523061796202;
        Math.acosh(a56);
        Math.imul(-9007199254740991, v13);
        a56++;
        0.8899523061796202 | 0.8899523061796202;
        Math.log2(0.8899523061796202);
    }
    [v15];
    [v14];
}
new C52(v48, -2147483647n, 256n);
new C52(v47, 1073741824n, -2147483647n);
new C52(C16, 1073741824n, 1073741824n);
const v92 = [268435440,8,7,1073741824,2147483647,70520590,-9223372036854775807,129,268435439,-1147002105];
v92.concat(v92);
