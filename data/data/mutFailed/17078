/xyz??a\bcq\P{Decimal_Number}?/gudims;
const v1 = /((?<a>.)\k<a>)/gviy;
const v2 = /sa(?!b)/gvms;
const v9 = [-17059];
{
    try {
        v1.unicode = -17059;
    } catch(e10) {
    }
}
const v13 = new Float32Array(-1, -1);
const v16 = new Uint32Array(5);
let v17 = v16.byteOffset;
const v19 = new Set(v16);
function F20(a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        v17 >>= 5;
    } catch(e24) {
        for (let [v25,v26] of a22) {
        }
    }
    try {
        const v27 = v19[this];
        new F20(5, v27, v13, a22, v27);
    } catch(e29) {
    }
}
const v30 = [-17059,45638n];
for (let v31 = 0; v31 < 32; v31++) {
    "p" + v31;
    for (let v34 = 0; v34 < 5; v34++) {
        function f35() {
            return f35;
        }
        f35(f35, v1);
    }
}
[v9,v30,59714n];
const v39 = new Uint8Array(Uint8Array, Uint8Array);
v39[Math.atan2(-988.8649474800335, -17059, v2, -7, 59714n)] = 10000;
