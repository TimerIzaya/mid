class C6 {
    [-1.7976931348623157e+308];
    [C6];
    127;
    6 = 2.451679717843601e+307;
    get c() {
        try {
        const t0 = -5.0;
        t0(...this, 1000000000000.0, -1.7976931348623157e+308, this, this);
        } catch (e) {}
        const o9 = {
        };
        new Proxy(this, o9);
        return C6;
    }
    static [2.451679717843601e+307];
}
const v12 = new C6();
new C6();
new C6();
new Float64Array(257);
const v20 = new Uint8Array(11);
new Uint32Array(257);
const o26 = {
    "maxByteLength": v12,
};
const v28 = new SharedArrayBuffer(255, 256);
const v30 = new Uint8ClampedArray(v28);
function f31(a32, a33) {
    const v34 = +v20;
    const v35 = [-4294967296,536870887,1061939633,16,62421,-5,255,65536,-1440695669];
    const v36 = [4294967297,4,9007199254740992,-1073741824];
    const o37 = {
        "g": v36,
        ...v36,
        __proto__: v35,
    };
    for (const v38 in o37) {
    }
    return v34;
}
v30[Symbol.toPrimitive] = f31;
function f41() {
    const v42 = /[abc+]/gvdim;
    const v43 = v42.sticky;
    const v44 = [v42,v42,v42,v42];
    const v45 = /ka{0}/guims;
    function f46(a47, a48) {
        const o49 = {
            ...v45,
            "d": a48,
            "c": a48,
            "g": a48,
            "f": v44,
            "b": v43,
            "a": a48,
        };
        return f46;
    }
    %OptimizeFunctionOnNextCall(f46);
    return 256;
}
v30.valueOf = f41;
v30[185] = v30;
