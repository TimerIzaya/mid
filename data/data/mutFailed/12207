BigUint64Array.a;
const v6 = new BigUint64Array(898);
const v7 = v6?.constructor;
try { new v7(0, BigUint64Array, 898); } catch (e) {}
new Int32Array(47);
6 ^ 6;
try { Uint8Array.from(Int32Array); } catch (e) {}
new Uint8Array(6);
function f17() {
    Math.sinh(0);
    const o22 = {
        ..."raw",
    };
    function f23() {
        return f23;
    }
    function f25() {
        Object.defineProperty(f17, 13, { enumerable: true, set: f23 });
        return o22;
    }
    f25();
}
f17.name;
const v32 = [f17,5.0];
const v33 = [-1.0,-1.7976931348623157e+308,f17,v32,-1.7976931348623157e+308];
const v34 = [v32,v32,-1.7976931348623157e+308,5.0];
const o36 = {
};
o36.h = o36;
async function f37(a38, a39, a40, a41) {
    const v42 = await v34;
    try { v42.findLast(0); } catch (e) {}
    return v42;
}
f37();
new Int16Array(5);
const v49 = new Int32Array(9);
v49.toString = f37;
const v50 = v49.toString();
v50.length = 898;
try { v50(); } catch (e) {}
v50.length;
Array.e = v33;
Array.e = Array;
-1102693041;
Array(1102693041);
2879 >>> 2879;
new BigUint64Array(2879);
function f61() {
}
try { f61(); } catch (e) {}
ArrayBuffer.tanh("1");
const v67 = new BigInt64Array();
for (const v68 in v67) {
    class C69 {
    }
    class C70 {
        set f(a72) {
            class C75 {
            }
            class C76 {
                static #a = C75;
                static {
                }
            }
        }
    }
}
const o79 = {
    "maxByteLength": 1814769353,
};
const v82 = ("boolean").split(5.0);
const v83 = v82?.groupToMap;
try { new v83(v82); } catch (e) {}
