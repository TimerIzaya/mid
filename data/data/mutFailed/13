function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 1;
    } catch(e3) {
    }
    try {
        this.c = 1;
    } catch(e4) {
    }
    try {
        this.d = 1;
    } catch(e5) {
    }
}
function f6() {
    function f7(a8, a9, a10, a11) {
        const o13 = {
            get c() {
            },
        };
    }
    return F0;
}
Object.defineProperty(F0, "valueOf", { configurable: true, enumerable: true, value: f6 });
new F0();
const v15 = new F0();
function f16(a17) {
    function F18() {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v20 = new F18();
    let v23;
    try {
    const t0 = "object";
    v23 = t0(v20, "number", F18);
    } catch (e) {}
    function f24(a25) {
        return v23;
    }
    return f24;
}
v15[Symbol.toPrimitive] = f16;
new F0();
12 * 12;
const v34 = ([12,12])?.indexOf;
try { new v34(Int32Array); } catch (e) {}
2707 / 2707;
new Uint8Array(2707, 2707, 128);
new Int32Array(128);
Uint16Array.name;
const v45 = new Uint16Array(92);
const v48 = new Int8Array(257);
const v49 = v48?.subarray;
try { new v49(F0, 92); } catch (e) {}
function f51() {
}
try { f51(); } catch (e) {}
const v53 = [f51,f51];
Date.b = Date;
const v55 = new Date();
try { v55.setDate(F0); } catch (e) {}
try { ("getUTCMinutes").fixed(); } catch (e) {}
v55["getUTCMinutes"]();
const o61 = {
    0: "1ya",
    162: "1ya",
};
o61[162];
try { v53.includes(v53); } catch (e) {}
const v64 = [v53,f51];
v64.b = v64;
const v65 = [v64];
try { v65.pop(); } catch (e) {}
let v69;
try { v69 = ("toString").padStart(v15); } catch (e) {}
v69[6] = v69;
try { ("-1865512128").valueOf(); } catch (e) {}
const o80 = {
    toString(a74, a75, a76, a77) {
        return "preventExtensions";
    },
    get e() {
        return "-1865512128";
    },
};
try { Uint8ClampedArray.from(128); } catch (e) {}
new BigUint64Array(12);
Date[2] = Date;
Date.b = Date;
class C88 extends Date {
    static get c() {
        const v90 = `
        `;
        eval();
    }
}
new Uint8ClampedArray(3989);
try { ("Bl4").toWellFormed(); } catch (e) {}
const v98 = new BigUint64Array("Bl4");
Int32Array.name = Int32Array;
const v100 = new Int32Array();
v100.__proto__ = v98;
let v102;
try { v102 = new Int8Array(3989, v45, 3989); } catch (e) {}
function f103(a104, a105) {
    Math.expm1(-366687.8544616379);
    return 257;
}
v102.constructor = f103;
const v109 = v102?.constructor;
try { new v109(v53, v53, 128); } catch (e) {}
const v111 = new Int8Array(9);
186 << 186;
const v115 = new Int16Array(186);
v115[182];
class C117 {
    [v53];
    10;
    static c = v111;
}
C117.prototype = C117;
new C117();
const v119 = new C117();
v119[10] = v119;
const v120 = new C117();
v120[10] = v120;
const v121 = v120[10];
v121.prototype = v121;
v121.prototype;
"minor" == "minor";
try { ("async").strike(); } catch (e) {}
const o128 = {
    "execution": "async",
    "type": "minor",
};
try { new Float32Array(Date, Uint8ClampedArray, Date); } catch (e) {}
new Float32Array();
class C134 {
    static e;
    e;
    static 3 = -5.161103313394506;
    toString(a136) {
        let v135 = this;
        v135.e *= 0.8199829542463926;
        v135 += v135;
        for (let v137 = 0; v137 < 10; v137++) {
            a136["p" + v137] = v137;
        }
        return 0.8199829542463926;
    }
}
C134.name = C134;
const v140 = new C134();
const v141 = /1(ab)/ud;
v141.toString = Date;
v140.toString = C134[v141];
gc(o128);
class C3 {
    set b(a5) {
        function F6(a8) {
            if (!new.target) { throw 'must be called with new'; }
            try { a8(C3); } catch (e) {}
            const v10 = [4096,64,268435439,1073741824,925540587,65535];
            [-2147483649,-1077673407,-12,14,-12,-72,-1637851097,-1024,1,536870912];
            const v12 = [10000,257,-2029782357,62362,-135507425,-59638,1988748681,6,-9007199254740990];
            C3?.[this];
            try {
                this.e = a5;
            } catch(e14) {
            }
            try {
                v12.length >>>= a5;
                v10[-2];
                const t15 = 1000000000.0;
                delete t15?.d;
                -this;
                [217515.88484250288,-866240.7669106117,-578331.8460631794,Infinity,1000000000000.0,2.220446049250313e-16,623.1081617863497,0.6367969851684188,3.728722792378202e+307,NaN];
                [2.220446049250313e-16,2.2250738585072014e-308,2.0];
                [-4.0,0.16253577822163345,1.0,2.220446049250313e-16,0.1597760684711702,0.854249900680109,4.0,363881.69358616066,-3.0];
                this.b = a8;
            } catch(e21) {
            }
        }
        new F6(-3.0);
        new F6(-5.0);
        new F6(-5.0);
    }
}
const v25 = new C3();
const v26 = new C3();
let v27 = new C3();
const v28 = [-23092,54898];
const v29 = [55602,536870912];
const v30 = [-9223372036854775807,13,512,-10,536870888,-1227638349,-2,-1449496306,-4294967295,-16];
function f31(a32, a33) {
    const o42 = {
        [v25]: v29,
        "a": v30,
        __proto__: v26,
        "f": a33,
        p(a35, a36, a37, a38) {
            for (let v39 = 0; v39 < 32; v39++) {
                a37["p" + v39] = v39;
            }
            return a38;
        },
    };
    return a32;
}
const v43 = f31(v26, f31);
for (const v44 of v28) {
    try {
        v27 >>>= v44;
    } catch(e45) {
    }
}
f31(v26, f31(1000000000.0, v43));
function f48() {
    const o54 = {
        "c": "c",
        [0.8270476620027499]: 0.43223002794581145,
        "g": 0.8270476620027499,
        [0.8270476620027499](a53) {
        },
        [-1]: "c",
    };
    return o54;
}
const v55 = f48();
class C56 extends f48 {
    #toString(a58) {
    }
    a;
    [f48] = f48;
    o(a60, a61, a62, a63) {
        v27[a63];
        return a63.length;
    }
}
new v28();
const o67 = {
    __proto__: v55,
    "g": f48,
};
