class C6 {
    constructor(a8, a9, a10, a11) {
        let v15 = -2.2250738585072014e-308 + -249970.56405354012;
        Math.random();
        Math.random();
        +-249970.56405354012;
        ++v15;
        Math.clz32(-2.2250738585072014e-308);
        const v24 = new Uint32Array();
        Object.defineProperty(v24, "constructor", { writable: true, configurable: true, enumerable: true, value: Symbol });
        let v25 = -4294967297n;
        const v26 = v25--;
        function f27(a28, a29, a30, a31) {
            const v32 = a28.keys;
            try { v32(); } catch (e) {}
            function f34() {
                return f34;
            }
            a28.constructor = f34;
            const t19 = a28?.constructor;
            const v36 = t19();
            const o44 = {
                [v25](a38, a39, a40, a41) {
                    eval();
                },
            };
            new Array(v36);
            const v48 = new Int8Array();
            const v50 = v48.buffer.slice(v32, v36);
            try { v50.slice(v26); } catch (e) {}
            return f34;
        }
        for (let v52 = 0; v52 < 10; v52++) {
            f27(v24);
        }
        %OptimizeFunctionOnNextCall(f27);
        f27(5);
    }
    #f;
    static 8;
    #e;
    static 9;
}
const v55 = new C6(-10135.549513699487, 0.15470162566696022, 2895n, -9007199254740991n);
const v56 = new C6(1073741823n, v55, 0.15470162566696022, 1073741823n);
new C6(-10135.549513699487, v56, -10135.549513699487, 2895n);
new Uint16Array(66);
new Int32Array(1831);
new BigInt64Array(0);
let v70 = 15;
v70--;
new Int16Array(v70);
new Uint8ClampedArray(6);
new Int16Array(3699);
"2147483649" == "2147483649";
class C84 {
    static #p(a86) {
        function f87(a88) {
            return a88;
        }
        class C89 extends f87 {
            static [-1] = 8;
            static [a86];
            static 268435441;
        }
        const v90 = [];
        const v92 = /[a-zA-Z0-9]/gvisy;
        const v93 = /abc?/gvmy;
        v93[-2] ^= v92;
        v93.exec("Q8F");
        const t69 = "Q8F";
        t69[2078209647] = v90;
        return a86;
    }
    [0.028957958839558873];
    static {
        for (let v99 = 0; v99 < 32; v99++) {
        }
    }
    static 2147483648 = C84;
    static #g;
    #a;
}
function f101() {
    const o103 = {
    };
    return gc(o103);
}
C84[Symbol.toPrimitive] = f101;
try { C84(); } catch (e) {}
const v108 = new C84();
v108.constructor = f101;
try { BigInt64Array(BigInt64Array); } catch (e) {}
function F112(a114) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = a114;
}
const v115 = new F112(-2);
with (v115) {
    h = Uint16Array;
}
const v117 = v108?.constructor;
v117[Symbol.toPrimitive] = f101;
let v120;
try { v120 = new v117(); } catch (e) {}
const v121 = v120?.constructor;
try { new v121(); } catch (e) {}
const v123 = new C84();
let v124;
try { v124 = v123.propertyIsEnumerable(C84); } catch (e) {}
!v124;
new C84();
/[\11]/gm.flags;
/(?:a*)*/gudm;
const v130 = /a(?!bbb|bb)c/vi;
v130.toString = Symbol;
const v131 = v130?.toString;
try { new v131(); } catch (e) {}
[4096];
const o138 = {
    "execution": "async",
    "type": "minor",
};
~117;
Uint16Array[0] = v117;
const v141 = new Uint16Array(Uint16Array);
let v142 = v141[1];
v142--;
Int32Array.name;
new Int32Array(31);
let v150;
try { v150 = Uint32Array.toString(); } catch (e) {}
try { v150.small(); } catch (e) {}
const v152 = new Uint32Array(128);
v152[72];
function f154() {
    3.4890473589784586e+307 > 3.4890473589784586e+307;
    let v157 = 1000000000000.0;
    v157--;
    257828.6336153492 - 257828.6336153492;
    -4294967296 >> -4294967296;
    class C164 {
        static #m(a166) {
        }
        constructor(a168) {
            function f169() {
                return 9007199254740992;
            }
            Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f169 });
            const v170 = this?.__defineSetter__;
            try { new v170(22227, 22227); } catch (e) {}
            new Float32Array();
            try { Uint16Array.apply(Uint16Array, "2147483649"); } catch (e) {}
            const v176 = new Uint16Array();
            const v177 = new Float32Array(v176, -4294967296, a168);
            v177.f = v177;
        }
    }
    const v178 = new C164(C164);
    v178.g = v178;
    const v179 = new C164(C164);
    v179.length = -4294967296;
    v179.length;
    const v181 = new C164(-4294967296);
    const v182 = [v181,C164];
    [257828.6336153492,v181,v178,v181,v182];
    const v184 = [v181];
    class C185 extends C164 {
        [v178];
        #n(a187, a188, a189, a190) {
            function f191() {
            }
        }
    }
    C185.name = C185;
    const v192 = new C185();
    class C194 extends v184.constructor {
    }
    try { v192.m(v182); } catch (e) {}
    const o198 = {
        "e": Uint16Array,
        o(a197) {
        },
        ...v157,
    };
    return Int32Array;
}
try { f154.bind(-7); } catch (e) {}
%PrepareFunctionForOptimization(f154);
f154();
f154();
%OptimizeFunctionOnNextCall(f154);
const v202 = f154();
v202.prototype = v202;
