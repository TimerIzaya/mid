class C3 {
    constructor(a5) {
        new WeakMap();
    }
    #g = "-13";
    p(a9) {
        this.g ^= this[8];
    }
    static {
        new Float64Array(87);
        const v18 = new Int8Array(520);
        v18.includes;
        function f20() {
            return f20;
        }
        Float64Array(10);
        function f25(a26) {
            Reflect.preventExtensions(Reflect);
            return a26;
        }
        new BigInt64Array(3);
        new BigInt64Array(2294);
    }
}
("setUTCMinutes").toUpperCase();
function f37(a38, a39) {
    const o40 = {
    };
    return o40;
}
for (let v41 = 0; v41 < 25; v41++) {
    const v42 = f37();
    Object.defineProperty(v42, v41, { enumerable: true, get: f37, set: f37 });
    try { Reflect.preventExtensions(v42); } catch (e) {}
    const o46 = {
    };
    gc(o46);
}
const o49 = {
    2321852491: "object",
};
~-754089042n;
const v52 = new C3("-13");
const v53 = new C3(-241416.9659184988);
new C3(v53);
function F55(a57, a58) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = v52;
    } catch(e59) {
    }
    try {
        this.e = a58;
    } catch(e60) {
    }
}
function F61() {
    if (!new.target) { throw 'must be called with new'; }
}
class C63 {
}
function f64() {
    return f64;
}
const v65 = f64();
let v66 = Int16Array;
v66--;
function f68() {
    const v69 = v66--;
    v69 - v69;
    class C72 {
    }
    C72.length;
    const v74 = new C72();
    v74.g = v74;
    const v75 = new C72();
    v75.length = -4294967296;
    let v76 = 0;
    for (let i = 0; i < 5; i++) {
        for (let v77 = 0; v77 < 5; v77++) {
            try { ("p").indexOf(v65); } catch (e) {}
            try { ("p").fontcolor(v77); } catch (e) {}
            "p" + v77;
        }
        v76++;
    }
    const v83 = new C72(v76);
    const v84 = [C72];
    try { v84.fill(); } catch (e) {}
    [v83];
    class C87 extends C72 {
        [v74];
        #n(a89, a90, a91, a92) {
        }
    }
    return -4294967296;
}
f68();
%OptimizeFunctionOnNextCall(f68);
const v94 = new F55(v53, F55);
const v95 = new F55(v94, v53);
new F55(v52, v95);
Math.tanh();
