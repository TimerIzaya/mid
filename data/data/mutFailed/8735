function f0() {
    const o10 = {
        "h": f0,
        "f": 8,
        [127]: 127,
        "g": f0,
        __proto__: f0,
        "d": 208458690,
        [127](a5, a6) {
            let v7 = this.d;
            v7 = 8;
            try {
                super.valueOf(this, 127);
            } catch(e9) {
            }
            return 208458690;
        },
        "e": 127,
    };
    o10[127];
    return o10;
}
f0(f0, f0());
const v14 = f0();
[-1.6627499946440031e+308,-2.220446049250313e-16,Infinity,0.3911309842627768,-1000000.0,6.80841020721714,0.9276642301162606,-8.037374160885215e+307,90366.43182016793,773.1649534962728];
[-2.0,2.0,-1000000000.0,0.21277414688287433,-1000000000.0,NaN,1000000000.0,908385.7098567991,-1.7976931348623157e+308];
[Infinity,0.4511473871925117,6.270671829473535,0.4777127399859932,-Infinity,0.6190981061925481,934614.9576200547];
-8 >> -8;
1024n ^ 1024n;
for (let v27 = 0; v27 < 32; v27++) {
    -v27;
    const t30 = "p";
    t30[0] = "p";
    const v30 = "p" + v27;
    try { v30.padStart(1024n); } catch (e) {}
    v30[0] = v30;
    v14[v30] = v27;
}
BigUint64Array.prototype = BigUint64Array;
new BigUint64Array(-8);
const v36 = new Uint16Array(3);
v36.a = v36;
v36[1] = v36;
127 < 127;
try { new Symbol(); } catch (e) {}
const v42 = ("7")[Symbol.match];
try { ("8").trimStart(); } catch (e) {}
const t47 = "8";
t47[0] = "8";
try { BigUint64Array(3, Symbol, BigUint64Array); } catch (e) {}
new BigUint64Array(127);
try { new BigUint64Array(47380n, v42, BigUint64Array); } catch (e) {}
const v53 = new BigUint64Array(7);
try { DataView.apply(7, v53); } catch (e) {}
