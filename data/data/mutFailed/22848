function f3() {
    return 0.633907993060083;
}
class C4 extends f3 {
    static #valueOf(a6) {
        f3();
        const v8 = new f3();
        return v8;
    }
    static n(a10, a11) {
        this[0.633907993060083] = a11;
        for (let v12 = 0; v12 < 32; v12++) {
            this["p" + v12] = v12;
        }
        return a10;
    }
}
const v15 = new C4();
const v16 = new C4();
new C4();
class C18 extends f3 {
    a;
    [v16];
    static m(a20, a21, a22, a23) {
        v16[8];
        return a23;
    }
    0 = v15;
    static #e;
    g;
    f = f3;
}
const v25 = new C18();
new C18();
new C18();
const v28 = [2.2250738585072014e-308,6.427477933354486e+307,1000000000.0,0.08682825617912271,-1000000000.0,3.0,228665.3903849495,0.5660155973967917,0.8606405474237848,3.0108403245603076e+307];
const v29 = [1000000000.0,12.305595805765165,2.0862036260312724e+307,-5.0,0.3227826650028378,-Infinity,-6.013642736236817,-6.180619420937975e+307,-1000000.0];
const v30 = [881266.4750531102,900.0211844391163,-148.3543184123963,-878.1424195424157,8.23394403026903,-1000000.0,4.0,1.7976931348623157e+308,-6.700826123638565,Infinity];
v30.a = v30;
function F31(a33) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor = f3;
    const v34 = this.constructor;
    try { v34(v29); } catch (e) {}
    v30.a = v28;
}
const v36 = new F31(v29);
const t47 = v36.constructor;
new t47(v36);
new F31(v28);
const v43 = /((?<=a))/gudm;
const v44 = /gk4b*/vmsy;
function f46(a47, a48) {
    const v50 = new Date();
    v50.getSeconds();
    return f46;
}
%PrepareFunctionForOptimization(7.611925438711783);
const t58 = -1000000.0;
t58();
%OptimizeFunctionOnNextCall(f46);
f46();
let v54;
try {
const t0 = 1e-15;
v54 = t0(v25);
} catch (e) {}
for (let v55 = 0; v55 < 5; v55++) {
    try { v54(v43, -6, v44, v55, -4); } catch (e) {}
}
