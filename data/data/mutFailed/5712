function f0() {
    const o12 = {
        "c": "object",
        valueOf(a5, a6) {
            try { a5(-251.90968424136486, ...arguments, -251.90968424136486, ...arguments); } catch (e) {}
            -251.90968424136486 && -251.90968424136486;
            ("object")[9];
            return 1.2933697361086498;
        },
        "d": "object",
        "buffer": -251.90968424136486,
        0: "object",
    };
    return o12;
}
const v13 = f0();
f0();
f0();
new Int32Array(3277);
const v21 = new Int8Array(5);
let v24;
try { v24 = new BigInt64Array(v13, BigInt64Array, BigInt64Array); } catch (e) {}
new BigInt64Array(8);
new Uint8ClampedArray();
function f28() {
    return v24;
}
f28.EPSILON = f28;
for (let i = 0; i < 5; i++) {
    const v29 = Int8Array();
    %OptimizeFunctionOnNextCall(f28);
    const v30 = [v24,f28,v29];
    parseInt(v30.toSpliced(v30));
    v21 < f28 ? v21 : f28;
    [];
    class C41 {
        p(a43, a44) {
            "-1210238113" - v30;
        }
    }
}
