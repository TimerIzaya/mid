new Float64Array(2312);
new Float64Array(256);
new Uint8Array(128);
new Int8Array(8);
new Float32Array(3);
const v23 = new BigInt64Array();
const o24 = {
    __proto__: v23,
};
try { o24.fill(o24, BigInt64Array); } catch (e) {}
const v27 = new Float32Array(0);
class C28 {
    constructor(a30) {
        for (let v31 = 0; v31 < 32; v31++) {
            v31 === v31;
            for (let v33 = 0; v33 < 50; v33++) {
            }
            new v27(520);
            for (let v37 = 0; v37 < 5; v37++) {
            }
            0 || Int8Array;
            Math.tanh();
            function f42() {
                return 4294967297n;
            }
        }
    }
}
const o43 = {
};
const t30 = Float32Array & Float32Array;
new t30();
