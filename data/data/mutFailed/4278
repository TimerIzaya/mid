function f3(a4, a5) {
    const v6 = [];
    v6.entries;
    12204n <= -16;
    const o28 = {
        "d": a5,
        valueOf(a12) {
            function F13(a15, a16, a17, a18) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.f = a17;
                } catch(e19) {
                }
            }
            new F13(a4, 10000, 10000, a5);
            new F13(a5, 10000, 10000, a12);
            const v22 = new F13(a12, 35486, 35486, a5);
            function f23() {
                return f23;
            }
            for (let v24 = 0; v24 < 50; v24++) {
                for (let v25 = 0; v25 < 25; v25++) {
                    v6["p" + v25] = v25;
                }
            }
            return v22;
        },
    };
    return o28;
}
f3(10000, 10000);
f3(10000, 35486);
f3(10000, 35486);
/k7/v;
/\u{12345}+/giy;
/(?<a>.)/udm;
const v39 = new Float64Array(Float64Array, Float64Array, Float64Array);
function f40() {
    return f40;
}
f40.arguments = f40;
const v41 = [f40];
v41[0] = v41;
const v46 = [Int8Array];
v39[138.3846677150391] = 1000000000.0;
v46.length += 172;
