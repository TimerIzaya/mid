const v0 = [];
const v1 = [v0,v0];
const v2 = [v1,v0,v1];
const v3 = [v1,v1,v1,v1];
const v4 = [v3,v3];
const v5 = [v1,v3,v4,v4];
59817n < undefined;
const v9 = new v0();
v9.b;
[v4,v3,v0,v2,v2];
[6,-256,536870889,-34358,-65537,10,-65537,38234];
[13,512,268435440,-3,61890,10000,65537];
[-1425160600,0,536870887,-128];
function F17(a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    const v21 = ("async").constructor;
    v21.raw(v21);
}
const v24 = new BigUint64Array(1000);
new BigUint64Array(3768);
const v31 = new BigInt64Array(4046);
const v33 = new Int8Array();
for (const v34 in v33) {
}
const v36 = new Uint8ClampedArray(Uint8ClampedArray, Uint8ClampedArray, Uint8ClampedArray);
function f37() {
    const o38 = {
        __proto__: v36,
        4: 1000,
    };
    return f37;
}
f37();
%OptimizeFunctionOnNextCall(f37);
const v42 = new Int8Array(3768);
function f43(a44, a45) {
    a44++;
    let o64 = {
        get d() {
            this[115] /= 4046;
            let v49 = -908890636;
            return Math.log(this & --v49);
        },
        toString(a54, a55) {
            new Int32Array(1024);
            new SharedArrayBuffer();
            this?.__lookupSetter__;
        },
        "d": a44,
        ...a44,
        get e() {
            this.d;
            return a45;
        },
        __proto__: v42,
        ...a45,
        ...BigUint64Array,
        536870888: BigInt64Array,
    };
    [,...o64] = v31;
    const v66 = Symbol.iterator;
    const o80 = {
        [v66]() {
            let v68 = 10;
            const o79 = {
                next() {
                    v68--;
                    const v72 = v68 == 0;
                    const o73 = {
                        "done": v72,
                        "value": v68,
                    };
                    return o73;
                },
                get f() {
                    super.n();
                },
                __proto__: v36,
                [59817n](a77, a78) {
                },
            };
            return o79;
        },
    };
    o80[2974] = v5;
    a45?.[4046];
    try {
        v2.__proto__ = v42;
    } catch(e82) {
    }
    o80[2974] = f43;
    const o85 = {
        "maxByteLength": 3035,
    };
    const v87 = new ArrayBuffer(512, o85);
    new Float32Array(v87);
    return a44;
}
f43(115, 3768);
[16,-1073741824n];
new Float64Array(Uint32Array);
f43(4046, 3768);
const v98 = f43(4046, 4046);
v98 + v98;
Date[3] = BigUint64Array;
const v101 = (115)?.UTC;
try { new v101(v101, 4046, 4046, Date, BigUint64Array, BigUint64Array, Date); } catch (e) {}
Uint8ClampedArray.length = Uint8ClampedArray;
const v104 = new Uint8ClampedArray(Date);
function f105() {
    return f105;
}
const v107 = new Date(f105);
v107.setUTCMilliseconds(Date);
v104[2];
v24.includes(undefined);
