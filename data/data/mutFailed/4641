class C3 {
    c;
    static {
        let v5 = 0;
        do {
            const t5 = "4294967296";
            t5[v5] = -3.0;
            v5 / this;
            new Date();
            class C9 {
            }
            const v10 = new C9();
            const v13 = new Uint32Array(4);
            try { ("4294967296").apply(v10, v13); } catch (e) {}
            v5++;
        } while ((() => {
                const v18 = Array(19793);
                [v18,v18,v18];
                ([1.7976931348623157e+308,-5.063738949828065,-1000000.0,-4.0,4.0,1.368499884638594e+307,0.0,-1.2131530743918297,-1000000000.0,-2.809909548595164]).concat();
                return v5 < 5;
            })())
    }
}
new C3();
new C3();
new C3();
new Uint16Array(609);
let v30 = -2.0;
v30++;
const v32 = [];
function f33() {
    const o40 = {
        ...v32,
        __proto__: v32,
        valueOf() {
            new Array(15);
            const v39 = new WeakMap();
            return v39;
        },
        "h": v32,
        [v32]: v32,
    };
    return o40;
}
f33();
const v42 = f33();
const v43 = [4294967297,-36743,-2147483648,-256,1777836255,-13,1073741824,64,1947646334];
v43[2] = v43;
const v44 = [v42,f33];
[v43,v44,v44,v32,v44];
new BigInt64Array(3);
new Int16Array(7);
class C53 extends SharedArrayBuffer {
}
new C53();
