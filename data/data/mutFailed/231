const v0 = [0,536870912,257,-6,9007199254740991,-2068039903,-14744,-128,268435441];
const v1 = [1,5,10,2147483649,-716553541,-38650,9223372036854775807,-10,2147483648,9];
function f2(a3) {
    Object.defineProperty([], "h", { configurable: true, enumerable: true, set: Date });
    return v0;
}
v1[Symbol.toPrimitive] = f2;
const v8 = [1073741825,-65537,43478,41083,1024,16,536870912,8];
const v9 = [v1,v0];
let v10 = [v8,v1];
const v11 = [v8,v1,v8,v0];
const v12 = [v1,v10,v1,v9];
const v13 = [v1,v1];
[v12,v8,v13,v10];
class C15 {
    3694713621 = v0;
    static 1364 = v11;
    static set b(a17) {
        const o21 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o21);
    }
    static #a = v8;
    #h = v12;
}
const v23 = new C15();
new C15();
const v25 = new C15();
function f26(a27, a28) {
    function f29() {
        const v34 = new Float64Array(127);
        class C35 {
            static b = Int16Array;
            5;
            f;
            #e = 257;
            static 2;
            static #p(a37, a38) {
                try {
                    this.#e;
                } catch(e40) {
                }
                this.b;
                %VerifyType(a38);
                return v34;
            }
        }
        const v42 = new C35();
        function f44(a45) {
            const v46 = [v42,a45,a45,C35];
            [a45,this,this,this,Float64Array];
            [257,v46];
        }
        this.onmessage = f44;
        return Int16Array;
    }
    Object.defineProperty(a27, Symbol.toPrimitive, { configurable: true, value: f29 });
    const o61 = {
        [v1]: v13,
        __proto__: v1,
        n(a52, a53, a54) {
            const v55 = new C15();
            let v56;
            try { v56 = a27(v55, a52); } catch (e) {}
            a27?.[v56];
            (v10 = v23)[Symbol.match];
            return v55;
        },
        "h": a27,
        [a27]: v12,
    };
    return o61;
}
const v62 = f26(v25, v10);
function f63() {
    try {
        new C15();
    } catch(e65) {
    }
    return v11;
}
v62.toString = f63;
f26(v62, v10);
f26(v1, v25);
class C68 {
}
const v69 = new C68();
const v70 = new C68();
const o71 = {
};
o71.b = v69;
const o72 = {
};
Object.defineProperty(o72, "b", { writable: true, value: v70 });
const v2 = new Map();
const v4 = new Float64Array(Float64Array, Float64Array);
const o7 = {
    "d": 127,
};
const o9 = {
    [127]: Int32Array,
    get d() {
        return Float64Array;
    },
    __proto__: v4,
    ...o7,
};
class C10 {
    static #f = false;
    constructor(a12, a13) {
        try {
            a13 = v2;
        } catch(e14) {
        }
    }
    #toString(a16) {
        this[a16];
        Reflect.construct(a16, [Map,a16,v2,Reflect,v2], a16);
        try {
            Reflect.#f = v2;
        } catch(e21) {
        }
        return Reflect;
    }
}
new C10(o9, false);
const v23 = new C10(false, C10);
new C10(v23, v2);
new BigInt64Array(4096);
new Uint16Array(2934);
new Uint32Array(196);
class C37 {
    [-256];
    static get b() {
        try {
            super[16] = -256;
        } catch(e39) {
        }
        return 16;
    }
    2 = -128;
    536870888;
    [-128];
    [16] = -256;
    static 1073741824 = -128;
    static #g;
    static #h;
    static 65536;
    90;
    static f = 16;
}
const v40 = new C37();
const v41 = new C37();
v41[16];
const v45 = new Array(8);
class C46 extends v2 {
    n(a48, a49) {
        const v50 = v45[3499145331];
        try { v50(a48, a48, a49, Uint16Array); } catch (e) {}
        return v45;
    }
    static get e() {
        const v55 = v40 << this;
        let v56 = this >>> 715084368;
        v55 & 715084368;
        const v58 = ++v56;
        v56 >>> 715084368;
        Math.acosh(v56);
        v56 + v58;
        return v56;
    }
}
const v62 = new C46();
const t79 = 196;
const v63 = new t79();
let v64;
try { v64 = v63.copyWithin(v62, v45); } catch (e) {}
v64?.copyWithin;
new C37();
class C67 {
    [v41] = -128;
    [v40];
    [-256];
    static [C37];
    constructor(a69, a70, a71) {
        a71 ^ a71;
        try {
            this[7] = C37;
        } catch(e73) {
        }
        const v74 = v41;
        v74[2] = v74;
        try {
            new C37();
        } catch(e76) {
        }
    }
}
try { C67.call(C67); } catch (e) {}
const v78 = new C67(-256, C37, -128);
const v79 = new C67(16, v78, -256);
new C67(-128, v79, -128);
const t108 = "jO";
t108.length = "jO";
1000.0 === 1000.0;
function f86() {
    return -256;
}
for (let v87 = 0; v87 < 32; v87++) {
    const v89 = "p" + v87;
    try { v89.toLowerCase(); } catch (e) {}
    v41[v89] = v87;
}
try {
    let v92 = f86();
    Math.tanh();
    const o97 = {
        "c": "-4096",
        [0.8270476620027499]: 0.43223002794581145,
        "g": 0.8270476620027499,
        [-1]: "-4096",
    };
    v92--;
} catch(e99) {
}
v79[10];
class C102 {
    constructor(a104, a105) {
        const v106 = this?.constructor;
        v106.e = v106;
        try { new v106(a104, a104); } catch (e) {}
        a104 | a104;
        a105.name;
        super.replace;
    }
}
const v111 = new C102(-4096, C102);
const v112 = new C102(1000.0, v111);
v112.constructor;
class C115 {
    [Set];
    4;
}
const v116 = new C102(C102, v112);
function F117(a119, a120, a121, a122) {
    if (!new.target) { throw 'must be called with new'; }
    a121.d = a121;
    const t153 = a122.constructor;
    new t153(a119, v116);
}
const v125 = new F117(v116, C102, v112, v112);
new F117(v125, v112, v125, v112, v125);
([0.43093005420324215,1000.0]).toString();
const t158 = [-9223372036854775807,1073741824,-65535,1945375758,4294967295,-9,-65537,1,-268435456];
t158[268435439] = "freeze";
