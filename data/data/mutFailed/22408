class C3 {
    set c(a5) {
        new Float64Array(1730);
        new BigInt64Array(-1597694050);
        new BigInt64Array(2055);
    }
    [-1597694050];
    163;
    static [1000.0] = 3;
}
new C3();
const t11 = 3;
new t11();
new C3();
[65537,268435456,10000,268435456,1014766533,-1073741824,1259306795,-805434095,-2113379625,10];
[268435439,1073741824,2147483648,2125110695,-2145833024];
[750547802,-1829149481,-1915573138,9223372036854775807,-2147483648,4,-16,-9223372036854775808,1024,-2];
new Uint16Array(512);
new Uint8Array(10);
new Uint32Array(13);
class C33 {
    static 3143;
    static ["-2"];
    #f = "-2";
    static #a;
    #c;
    #valueOf(a35, a36) {
        const v37 = C33 == a36;
        v37 ? a36 : a36;
        const v39 = ["-2",this,"setMonth",a35,"-2"];
        [v39,v39,this,this];
        [v37,"-2","4X",a35];
        return a35;
    }
    10 = "4X";
    #g = "-2";
}
new C33();
new C33();
new C33();
try { new WeakSet(); } catch (e) {}
new WeakSet();
-536870912 ^ -536870912;
[-256,-256,5,-9007199254740991,-128,1073741825,-11,-49255];
[35577,123452243,-2,65305,268435441,11,-58686];
const v54 = [1506147375,1598671956,64,-23009,-512929497,-1432178736,4];
try { v54.sort("-2"); } catch (e) {}
6 | 6;
function F63(a65, a66) {
    if (!new.target) { throw 'must be called with new'; }
    Number.isFinite(Number);
    const v69 = this.constructor;
    try { new v69(); } catch (e) {}
}
new F63();
new F63();
class C74 {
    constructor(a76) {
        const v77 = this.constructor;
        v77.d = v77;
        try { new v77(); } catch (e) {}
        ("size").c;
        const v80 = ("size").g;
        ("size").length;
        let v82 = v80?.[7];
        [...v82] = "size";
        /a\bc/vd;
    }
}
function f84(a85, a86, a87) {
}
const o88 = {
};
class C89 {
    static #n(a91) {
    }
}
new C89();
new C89();
let v94 = Int16Array;
try {
} catch(e95) {
}
v94 = v94;
