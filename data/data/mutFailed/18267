const v2 = new Float32Array(670);
const v5 = new Uint8ClampedArray(64);
const v8 = new Uint8ClampedArray(Float32Array);
const v9 = v8?.forEach;
try { new v9(64); } catch (e) {}
class C11 {
    valueOf(a13, a14, a15) {
        for (const v16 of v2) {
            super.f = v5;
        }
        v5.byteOffset;
        delete this[1];
        const v22 = +Uint8ClampedArray;
        ~(Uint8ClampedArray - 64);
        Math.log1p(v22);
        return 2712;
    }
}
let v26;
try { v26 = new C11(); } catch (e) {}
const v27 = new v26();
try { v27.valueOf(Uint8ClampedArray, v27, Uint8ClampedArray); } catch (e) {}
new C11(670, v27, v5);
new C11();
new Uint16Array([-2023,8,-5,-19182,268435441]);
v27[1];
