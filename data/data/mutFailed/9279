function f1(a2) {
    class C3 {
        constructor(a5, a6, a7) {
            for (let v8 = 0; v8 < 25; v8++) {
                const o12 = {
                    "execution": "async",
                    "type": "minor",
                };
                gc(o12);
            }
        }
    }
    return WeakMap;
}
WeakMap.toString = f1;
const v14 = new WeakMap();
const v15 = [-54017,128,536870887,-1,0];
const v16 = [268435440,6,519616105,9007199254740991];
const v17 = [-9223372036854775807,50426,-61371];
function F18(a20) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v14;
    } catch(e21) {
    }
}
const v22 = new F18(v14);
function f23() {
    return f1;
}
function f24(a25) {
}
Object.defineProperty(v22, "toString", { get: f23, set: v17 });
new F18(v15);
const v28 = new F18(v17);
class C29 {
    constructor(a31, a32, a33) {
        function f34() {
            return f24;
        }
        function f35(a36) {
            const v38 = new Date();
            v38.setUTCFullYear();
        }
        Object.defineProperty(a31, "toString", { configurable: true, enumerable: true, get: f34, set: f35 });
        try { this.propertyIsEnumerable(a32); } catch (e) {}
        a31[0] = a31;
        %VerifyType(F18);
        -(-128);
        try { Math.expm1(WeakMap); } catch (e) {}
        let v47 = 5;
        let v48 = 4096;
        v48--;
        let v50 = 1.0921116632242459e+308;
        v47++;
        v16 || v16;
        const v53 = v16 >> v16;
        v53 - v53;
        Math.atanh(v16);
        ++v50;
    }
}
const v57 = new C29(v17, v28, v15);
v57.toString = f1;
const v58 = v57?.constructor;
try { new v58(v14, v57, v17); } catch (e) {}
const v60 = new C29(v17, v28, v57);
try { v60.__defineGetter__(v16, C29); } catch (e) {}
new C29(v16, v22, v57);
class C63 {
    [v28];
    p(a65, a66, a67, a68) {
        return v16;
    }
    static d = F18;
    get c() {
        let v72 = this;
        ({"d":v72,"f":v72,} = v72);
        let v74 = 7;
        let v76 = 1.4049317205967e+308;
        let v77 = --v74;
        v76 * v17;
        v77--;
        v76--;
        return v60;
    }
}
const v81 = new C63();
new v81();
const v83 = new C63();
v83.constructor = f24;
const v84 = v83?.constructor;
try { new v84(); } catch (e) {}
function F86() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        let v88 = 0;
        do {
            v88++;
        } while ((() => {
                5 !== 5;
                const v92 = v88 < 5;
                v92 && v92;
                return v92;
            })())
        new F86();
    } catch(e95) {
    }
}
new F86();
