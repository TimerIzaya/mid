function F0() {
    if (!new.target) { throw 'must be called with new'; }
    function F3(a5, a6, a7, a8) {
        if (!new.target) { throw 'must be called with new'; }
        const v9 = this?.__defineGetter__;
        try { new v9(F0, 1024); } catch (e) {}
    }
    const v11 = new F3();
    try { v11.propertyIsEnumerable(this); } catch (e) {}
    const v13 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    v13[3];
    class C15 {
    }
    const v16 = C15?.apply;
    try { new v16(1024, v11); } catch (e) {}
    const v19 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
    const v20 = [601759695];
    function f22() {
        let v25 = Float64Array;
        v25 = 1024;
        b = v20;
        v13.length;
        try {
            v13.forEach(1024);
        } catch(e28) {
        }
        const v29 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        let v31 = Symbol.toPrimitive;
        const o37 = {
            toString(a33, a34) {
                const v35 = this && 1024;
                a33 *= v31;
                v35 <= v29;
                return f22;
            },
        };
        const o58 = {
            "c": -4294967297n,
            [522675525n](a40, a41) {
            },
            "c": v20,
            valueOf(a43, a44) {
                return a43;
            },
            "b": -4294967295,
            [-4294967297n](a46, a47, a48, a49) {
            },
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v19,
            ...v11,
            [v31]() {
            },
            "type": C15,
            ..."Vre",
            valueOf(a52, a53) {
                return this;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            toString(a55, a56, a57) {
                return C15;
            },
            5: -4294967295,
            6: -268435456,
        };
        v31 = v25;
        new Float32Array(1334);
        new Float64Array(3);
        function f67() {
            ("Vre").length;
            new Float32Array(v11);
            return F0;
        }
        Uint16Array[Symbol.toPrimitive] = f67;
        new Uint16Array(2);
    }
    try { f22(); } catch (e) {}
    try {
        this.b = 1024;
    } catch(e74) {
        for (let v75 = 0; v75 < 25; v75++) {
            v20["p" + v75] = v75;
        }
    }
}
new F0();
new F0();
new F0();
const v84 = new Int32Array(1);
const v85 = v84 instanceof BigInt64Array;
v85 || v85;
19793 / 19793;
const v91 = Array(19793);
try { v91.slice(Int32Array, v91); } catch (e) {}
const v93 = [v91,v91,v91,v91];
v93[1];
const v95 = [v93,v93,v93];
v95[Symbol.toPrimitive] = Array;
const v98 = [v95];
Uint16Array.toString = Symbol;
v98 >= Uint16Array;
-2n;
12n >> 12n;
const v107 = new Uint8ClampedArray(512);
v107[404] = v107;
const v110 = new Uint8ClampedArray(0);
function f111() {
    const o112 = {
        "construct": Symbol,
        "defineProperty": Symbol,
        "get": Array,
        "getOwnPropertyDescriptor": Symbol,
        "has": Array,
        "set": Array,
    };
    const v114 = new Proxy(v110, o112);
    return v114;
}
v110[Symbol.toPrimitive] = f111;
try { v110.lastIndexOf(Array); } catch (e) {}
new Uint32Array(10);
let v121 = 1024;
v121--;
const v124 = new Uint16Array(v121);
try { ("Rh").padStart(v110); } catch (e) {}
try {
    v124.a = "Rh";
} catch(e127) {
}
v124[7] = v124;
