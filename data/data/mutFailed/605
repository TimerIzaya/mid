const v3 = [380.8169599245373,-720.3117510829104,8.858999512336315,-1000000000.0,-1000000000000.0];
function f4(a5, a6) {
    class C7 {
    }
    const v8 = new C7();
    with (v8) {
        h = C7;
    }
    return v8;
}
v3[Symbol.toPrimitive] = f4;
const v11 = [-0.0,-1.0];
v11.toString = Symbol;
[-1000000.0,9.254169716734125e+307,1e-15,2.2250738585072014e-308,NaN,1000000000000.0,Infinity,464.1642064246762,-760.594031501934,-456.80755637214145];
(v3 & (v11 || 1000)) >> 1073741824;
function f20() {
    return "buffer";
}
[48940,-4294967296,2147483649,20170,128,127];
const v22 = [9223372036854775807,39236,-3,-52134,2147483647,268435439,2147483649,1599128557,65536];
v22.toString = f4;
[-1228148740,1073741823,4,65535,-54086];
function f24() {
    return v3;
}
[178445.9222035366,9.63875732573102];
[-141.80926047386276,-973832.9458047785,-2.220446049250313e-16,-2.220446049250313e-16,1.4653534881646203e+308,-1.7976931348623157e+308];
const v27 = [1e-15,6.03377153010459e+307,-972.5278850110258,-1.7903051997210322e+308,1.0,Infinity,4.0,0.8722139806008752,3.289845964427805e+307];
class C31 {
    static #o(a33) {
        this.g **= -1e-15;
        try {
            ("-2147483648").normalize();
        } catch(e35) {
        }
        return 268435456;
    }
    a = -1e-15;
    static 27 = 268435456;
    static f;
}
try { new C31(); } catch (e) {}
const v37 = new C31();
v37.a = v37;
new C31();
const v39 = new C31();
const v41 = v22[4096];
"buffer" / v41;
try { v27.some(v41, Uint32Array); } catch (e) {}
const v45 = [-0.0,-4.708760029222967];
[-1000.0,4.0,-4.0,1000000000.0,620.8218181802779,1.7976931348623157e+308,800.925089717337,2.0,5.0];
[-1.3665053175531434e+308];
8 - 8;
let v52 = -15;
const v54 = 344.61638667171496 & -11;
Math.sqrt(-11);
const v56 = Math.floor(v54);
v52--;
const v58 = new Int32Array(8);
try { v58.constructor(v39, -1e-15, 8); } catch (e) {}
new Uint32Array(2950);
28 | 28;
const v66 = new Uint32Array(28);
let v67 = 0;
v3 || Uint32Array;
let v72 = 36453;
const v73 = Math.random();
Math.acos(v72);
++v72;
v72 + v72;
class C77 {
    #b = v67;
    g = 1.1408591040999836e+308;
    static {
        this.e = this;
        const v82 = v67++;
        -v82;
        ~v67;
        Math.log10(44149);
        const v86 = 44149 + v67;
        super.d;
        Math <= f24;
        try {
            this.fuck(Math, -1e-15, -9007199254740992n, "buffer");
        } catch(e91) {
        }
        v86 >> v86;
        Math.fround(v82);
    }
}
const v94 = new C77();
v94.g;
new C77();
try {
    v45.copyWithin(-2147483649, -2147483649);
} catch(e99) {
}
const v101 = -Infinity;
v101 << v101;
const t98 = "h";
t98.length *= v56;
new Float32Array(1024);
new Uint32Array(255);
new Int16Array(8);
C77.g ^= -1e-15;
const o126 = {
    "execution": "async",
    set e(a119) {
        let {"a":v120,"e":v121,"execution":v122,} = this;
        try {
            new Int32Array(53099, 53099, 53099);
        } catch(e125) {
        }
    },
    "type": "major",
};
o126.constructor = f20;
const v127 = o126?.constructor;
const v130 = v73 && v22;
const v131 = v73 >> v130;
Math.acos(-3);
Math.tanh(v130);
Math.expm1(v131);
try { new v127(v66); } catch (e) {}
gc(o126);
const t124 = "major";
t124[108] /= -1e-15;
