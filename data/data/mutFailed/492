function f3() {
    return 0.12266903984784461;
}
WeakSet[Symbol.toPrimitive] = f3;
const v7 = new WeakSet();
let v8 = 0;
while (v8 < 10) {
    const v11 = f3();
    let v12;
    try { v12 = v7.has(v11); } catch (e) {}
    const v13 = [v12,v12,v12,1000000000000.0];
    [8.182497759396847e+307,8.182497759396847e+307,[WeakSet,v13],v13];
    v8++;
}
function f17() {
    return WeakSet;
}
f17.toString = f3;
const v18 = [WeakSet,8.182497759396847e+307,WeakSet,f17,8.182497759396847e+307];
function f19() {
    function f20(a21) {
        class C22 {
        }
        return Symbol;
    }
    return f20;
}
function f23(a24) {
    Symbol.match;
}
Object.defineProperty(v18, Symbol.toPrimitive, { writable: true, enumerable: true, get: f19, set: f23 });
const v28 = [1000000000000.0,WeakSet,0.12266903984784461,v18,1000000000000.0];
function f29() {
    try {
        Symbol.valueOf = Symbol;
    } catch(e30) {
    }
    return v18;
}
v28.toString = f29;
[v18,v7,v18,8.182497759396847e+307,v28];
class C32 {
    [v28] = WeakSet;
    static #g = f3;
    254;
    [v7];
    static o(a34, a35) {
        delete this[8.182497759396847e+307];
        f17 instanceof f3;
        Math.sign(a35);
        const v41 = a34 & a35;
        a35--;
        !v41;
        return this;
    }
}
new C32();
const o49 = {
    valueOf() {
        return 1000000000000.0;
    },
};
new C32();
new C32();
const v55 = new Uint16Array(821);
new Uint8Array(v55);
