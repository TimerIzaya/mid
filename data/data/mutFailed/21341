class C3 {
    static c;
    constructor(a5) {
        try {
            this.fuck("hM", "hM", 10000n);
        } catch(e9) {
            try { e9.toString(); } catch (e) {}
        }
        try {
            super.tanh(884947.5658104189, a5, 1000, a5);
        } catch(e12) {
        }
    }
    c;
    [884947.5658104189];
    static [1000];
    e = 1073741824;
    #d = 884947.5658104189;
    get g() {
        [1.5422749153434429e+308,-6.548235057238281,-2.2250738585072014e-308,2.718452096299448e+307,-1000000000000.0,7.782782545722636e+307];
        [-244.1359171744773,0.2071477871442391,-1000000.0,0.0,2.432627098615894];
        return [-4.38355979639756,-342.558089878759,-1000.0,-1000.0,-660916.8219749477];
    }
}
const v17 = new C3(C3);
const v18 = new C3(1000);
const v19 = new C3(884947.5658104189);
class C20 {
    static #m(a22, a23, a24, a25) {
        new C3(a24);
        C3[a23] ||= a23;
        return 884947.5658104189;
    }
    set g(a28) {
        let v29 = 0;
        do {
            let v32 = 10000;
            let v34 = -736447.222407779;
            Math.fround(v34);
            const v36 = v32 ** 4294967297;
            4294967297 % 4294967297;
            ++v32;
            +v32;
            Math.log(v36);
            --v34;
            v29++;
        } while (v29 < 6)
        new C3(1073741824);
        super[C3] = v18;
        v19.g;
        try { this.getUint16(1073741824, 1000); } catch (e) {}
        try {
            v19.fuck(C20, v17);
        } catch(e49) {
        }
    }
    static 5 = v17;
    static [v17] = C3;
    static #e;
    [1000] = v18;
}
new C20();
new C20();
new C20();
-268435456 >>> -268435456;
const v59 = new Uint16Array(undefined, Uint16Array, Uint16Array);
function F62(a64, a65, a66, a67) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = this;
    a64 >> a64;
    a65 === a65;
    a67 - a67;
    const v71 = this.constructor;
    let v72;
    try { v72 = new v71(154, a67, 154, a65); } catch (e) {}
    try { v72.valueOf(); } catch (e) {}
    if (a64) {
        const v74 = typeof F62;
        try { v74.localeCompare(v74); } catch (e) {}
        "object" == "object";
        const v78 = v74 === "object";
        v78 && v78;
    } else {
        const o80 = {
        };
        o80.g = o80;
        try {
            o80.a = v71;
        } catch(e81) {
        }
        try {
            const o82 = {
            };
            o82.a = v71;
            o82.d = 1000;
        } catch(e83) {
        }
        try {
            const o84 = {
            };
            o84.a = v71;
            o84.d = 1000;
            o84.b = 154;
        } catch(e85) {
        }
        try {
            const o86 = {
            };
            o86.a = v71;
            o86.d = 1000;
            o86.h = v19;
        } catch(e87) {
        }
    }
    -a65;
    a67 <= a67;
}
F62.prototype = F62;
const v90 = new F62(154, 129, 129, 154);
v90.g = v90;
const v91 = v90.constructor;
try { new v91(v17); } catch (e) {}
new v91(v90, v59, undefined, v59);
const v94 = new F62();
v94.h = v94;
const v95 = new F62();
v95.h = v95;
