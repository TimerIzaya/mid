const v1 = new WeakMap();
const v2 = [8218212];
const v3 = [65536,8,25963,536870888,-1689902942,10,-25235,-11,268435441];
try { v3.some(v2); } catch (e) {}
const v5 = [-268435456,24885,-65536,580175046,-12,-65535,-1030,-61689,-4096,-7];
const v6 = v5?.filter;
try { v6(v1); } catch (e) {}
try { new v6(v1); } catch (e) {}
class C9 {
    static #f = v3;
    static get b() {
        function f13(a14) {
            const o15 = {
                ...-11,
                163: -11,
            };
            -o15[163];
            return f13;
        }
        f13(f13);
        let v21 = v3 + -v1;
        const v22 = ++v21;
        v3 - v3;
        Math.asinh(v1);
        return v22;
    }
    751 = WeakMap;
    set d(a26) {
        this.#m();
    }
    constructor(a29, a30) {
        const t31 = /((((.).).).)p\P{scx=Greek}\xed\xa0\x80/vim;
        t31.toString = a29;
    }
    static 9 = v1;
    static c;
}
C9[9] = C9;
let v32;
try { v32 = new C9(); } catch (e) {}
v32[751];
new C9();
const v35 = new C9();
v35[751] = v35;
new C9();
class C37 extends WeakMap {
    static n(a39, a40, a41) {
        super.e >>>= WeakMap;
        this.a;
        return a41;
    }
    static d;
    get g() {
        const v44 = v2[v2];
        class C45 {
            f = v5;
            static 8;
            #e = v44;
            static #a;
        }
        new C45();
        new C45();
        new C45();
        return this;
    }
}
try { C37.n(v2, v2, v32); } catch (e) {}
const v50 = new C37();
v50.c = v50;
const v51 = new C37();
const v52 = v51?.constructor;
try { new v52(); } catch (e) {}
v51.c = v51;
const v54 = new C37();
const v55 = v54?.constructor;
try { new v55(); } catch (e) {}
for (const v58 in "5amlK") {
    ("5amlK")[v58];
}
function f60(a61, a62) {
    for (let v64 in [-65535,536870889,4096]) {
        v64--;
    }
    for (let v66 = 0; v66 < 25; v66++) {
    }
}
f60();
let v68 = -24894;
v68--;
-48044;
const v73 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
for (let v74 = 0; v74 < 5; v74++) {
    v74 - v74;
    function f76() {
        let v78 = Float64Array;
        v78 = -4294967295;
        try {
            v73.forEach(v78);
        } catch(e80) {
            [3.4890473589784586e+307 === Uint8Array];
            const o85 = {
            };
        }
        const o90 = {
            toString(a87, a88) {
                v74 && v78;
                return -4294967295;
            },
        };
        return v73;
    }
    const v91 = f76();
    try { v91.toReversed(); } catch (e) {}
    %OptimizeFunctionOnNextCall(f76);
    const o93 = {
    };
    delete v5.length;
    try { ("function")["-268435456"](); } catch (e) {}
}
