const v3 = [-2,-2,-2];
const v4 = [-2,1073741825];
const v5 = v3[1];
v4.h = -2;
const v6 = [];
try { v3.findLast(v3); } catch (e) {}
const v10 = Math.atan2(v6, -40875);
const v12 = [1073741825,v4,v4,v10 >> v10];
v12[3] = v12;
/(9\1111)/dms;
const v14 = /[(?!(a))\1]/dm;
const v15 = /a\w/gims;
v15.ignoreCase;
let v17;
try { v17 = v15.compile(v15); } catch (e) {}
v12[v4] &&= -2;
class C18 {
    c = v3;
    valueOf(a20, a21, a22, a23) {
        const v24 = a21 * -2;
        try {
            a22.h = v24;
            const v28 = Math.cbrt(1073741824);
            const v29 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
            (a23 && v28) <= v29;
        } catch(e32) {
        }
        return v4;
    }
    #b;
    static #c = 1073741825;
    #a = v4;
}
v5.a = C18;
const v33 = new Math();
const v34 = new v33();
v34.b = v34;
const v35 = new v17();
v35.c = v35;
new WeakSet();
const v42 = new Uint32Array(256);
v42[194] = v42;
function f43() {
    v42[3] = "-26733";
    return "-26733";
}
%PrepareFunctionForOptimization(f43);
-256n / -256n;
class C47 {
}
const v48 = new C47();
const v49 = v48?.constructor;
try { new v49(); } catch (e) {}
const v51 = v14?.constructor;
try { new v51(); } catch (e) {}
try { new v51(); } catch (e) {}
for (const v54 in v48) {
}
