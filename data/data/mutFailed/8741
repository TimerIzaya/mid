const v2 = new BigInt64Array(217);
let v4 = Uint8ClampedArray;
new v4(154);
const v8 = new Int8Array(734);
class C9 {
    o(a11, a12) {
        super.d = v2;
        v4 |= a12;
        %VerifyType(this.a);
        return 154;
    }
    toString(a15, a16, a17) {
        try { new Int8Array(this, 217, a16, ...BigInt64Array, this); } catch (e) {}
        const v19 = a15 || v2;
        v2.buffer;
        const v23 = -(-2103205164);
        -2103205164 >>> (-2103205164 + -2103205164);
        function f26(a27, a28, a29) {
            return a27 / a29;
        }
        f26(v2, -2103205164, v19);
        v23 | -2103205164;
        return v23;
    }
}
function f33(a34) {
    try {
        a34.length = 128;
    } catch(e36) {
    }
    return Int8Array;
}
Object.defineProperty(C9, "constructor", { writable: true, configurable: true, enumerable: true, value: f33 });
const v37 = C9?.constructor;
try { new v37(217); } catch (e) {}
const v39 = new C9();
function f40(a41, a42) {
    function f44(a45, a46, a47, a48) {
        const o49 = {
            "e": a46,
            [a47]: 1000,
        };
        return f44;
    }
    return v2;
}
v39.constructor = f40;
new C9();
new C9();
class C52 {
    n(a54, a55, a56) {
        const o60 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o60);
        return a54;
    }
    a = v39;
    static g = 154;
    static 6 = 217;
    static h = BigInt64Array;
}
C52[6] = C52;
const v62 = new C52();
function f63() {
    return f33;
}
Object.defineProperty(v62, "toString", { configurable: true, enumerable: true, get: f63 });
const v64 = new C52();
v64.a;
const v66 = new C52();
v66.a;
Uint16Array.length;
1635 == 1635;
const v74 = C52[16] || v4;
let {"a":v75,"b":v76,"g":v77,} = v66;
v75.constructor = f40;
const v78 = v75?.constructor;
try { new v78(); } catch (e) {}
4096 % v62;
const o81 = {
};
o81.b = o81;
try {
    o81.f = 1635;
    for (let i83 = 0;
        i83 < 3;
        (() => {
            const v87 = i83++;
            v87 & v87;
        })()) {
        i83 * i83;
        function f91() {
            return i83;
        }
    }
} catch(e92) {
}
try {
    const o93 = {
    };
    o93.f = 1635;
    if (v76) {
        try {
            v8.toString = v77;
        } catch(e94) {
        }
    } else {
        o93 in o93;
    }
    o93.e = v39;
} catch(e96) {
}
try {
    const o97 = {
    };
    o97.h = o97;
    o97.f = 1635;
    o97.e = v39;
    o97.c = v74;
} catch(e98) {
}
try {
    const o99 = {
    };
    o99.f = o99;
    o99.a = o99;
    o99.f = 1635;
    o99.e = v39;
    o99.c = Uint16Array;
} catch(e100) {
}
Int16Array.d = Int16Array;
function f104(a105, a106) {
    /X\11+/gd;
    /DiE/udis;
    /36[^123]?/udy;
    return a105;
}
Int16Array[Symbol.iterator] = f104;
function f112(a113, a114, a115) {
    (a115 && v4) instanceof C9;
    try {
        const t144 = "log1p";
        t144.g = v39;
    } catch(e119) {
    }
    class C120 {
    }
    if ("log1p") {
        try { C120.m(); } catch (e) {}
    }
    return Uint16Array;
}
try { ("function").trimStart(); } catch (e) {}
-64;
try { new BigUint64Array(Int16Array, v75, Int16Array); } catch (e) {}
Worker.length;
