function f3(a4, a5) {
    const o25 = {
        set f(a7) {
            super.h -= a7;
        },
        get e() {
            try {
                const v10 = Symbol.iterator;
                ("g8tKg")[v10];
                try {
                    const t10 = "p";
                    t10.__proto__ = v10;
                } catch(e12) {
                }
                a4.__proto__ = this;
            } catch(e13) {
                const v16 = Array();
                function f17() {
                    return 3;
                }
                function f18(a19) {
                    const o23 = {
                        "execution": "async",
                    };
                    gc();
                }
                Object.defineProperty(v16, 0, { configurable: true, enumerable: true, get: f17, set: f18 });
            }
            return a5;
        },
    };
    return o25;
}
f3("-9007199254740992", "g8tKg");
f3("p", "p");
f3("p", "p");
const v31 = new Array(3339);
f3(1024, "g8tKg");
try {
    const t39 = "p";
    t39.valueOf = f3;
} catch(e40) {
}
v31 && Int16Array;
function F44() {
    if (!new.target) { throw 'must be called with new'; }
}
const v46 = new F44();
const v47 = v46?.__defineSetter__;
function f48(a49, a50) {
    const o51 = {
    };
    return o51;
}
const v52 = f48(v47, f48);
function f53() {
    return f53;
}
const v56 = new Float32Array(218);
for (const v57 of v56) {
    v57 >>> v57;
    Object.defineProperty(v52, Float32Array, { configurable: true, enumerable: true, get: f48, set: f53 });
}
for (let v60 = 0; v60 < 5; v60++) {
    function f62() {
        return Math.fround(Math);
    }
    try {
        Object.defineProperty("g8tKg", "length", { configurable: true, get: f62 });
        try {
            ("unicode").padStart(-1, "0");
        } catch(e68) {
        }
    } finally {
    }
}
