const v0 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v1 = [601759695];
const v2 = [1073741824,1073741823,1376142744,1073741825];
function f4(a5, a6, a7, a8) {
    let v11;
    try { v11 = v2["find"](..."find", "find", ...v1, ...v2, ...522675525n); } catch (e) {}
    v11 <= a7;
    return a6;
}
f4(v1, v0, 522675525n, v0, 522675525n);
const v18 = new BigInt64Array(3216);
new Int8Array(3331);
const v24 = new BigUint64Array(4096);
for (let v26 = 0; v26 < 51; v26++) {
    f4(v1, v26, false, v26);
}
f4(v24, 3331, v18, 3216);
%PrepareFunctionForOptimization(f4);
BigInt64Array(v24, 3331, v18, 3216);
f4(v24, 3331, v18, 3216);
%OptimizeFunctionOnNextCall(f4);
f4(v24, 3331, v18, 3216);
function f34() {
    return 36924;
}
function f35(a36, a37, a38, a39) {
    const o47 = {
        __proto__: a38,
        ...a36,
        [a38](a41, a42, a43) {
            return "function";
        },
    };
    return o47;
}
f35(-65536, 36924, f34);
const v4 = new Map();
class C5 {
    static set h(a7) {
        let v6 = this;
        try {
            v6 = a7;
        } catch(e8) {
        }
    }
    static toString(a10) {
        return Map;
    }
    static [v4];
    e = v4;
}
const v14 = new C5();
const v15 = new C5();
const v16 = new C5();
function f20() {
    return 13170;
}
class C21 extends Map {
    static #o(a23, a24) {
        a24--;
        for (let v26 = 0; v26 < 32; v26++) {
            v14["p" + v26] = v26;
        }
        return f20;
    }
    constructor(a30, a31, a32, a33) {
        super("r9se");
        function f34(a35, a36) {
            function f38(a39) {
                new Int8Array(2238);
                new Int8Array(4);
                new Float32Array(1000);
            }
            this.onmessage = f38;
            let v50 = -65537;
            f20--;
            const v53 = +-653891.5151603543;
            v50--;
            v53 << f20;
            Math.asinh(v50);
            !-653891.5151603543;
        }
        const v60 = ["function",a30];
        const o61 = {
            "arguments": v60,
            "type": "function",
        };
        new Float64Array(1519);
        const v67 = new Float64Array();
        const v70 = new Uint8ClampedArray(512);
        let v71 = 61340885;
        let v74;
        try {
        const t0 = 536870887;
        v74 = t0(-47543);
        } catch (e) {}
        try { new v74(v74, v74); } catch (e) {}
        while (0 < 5) {
            let v79 = v67 + v74;
            [v71,v79] = v70;
            v79.__proto__;
            break;
        }
        new Worker(f34, o61);
    }
}
new C21(f20, C21, 268435440, v16);
new C21(13170, v16, v4, C21);
new C21(2127601868, v15, "e", v16);
const v86 = [null];
const v87 = [v86,v86,v86];
const v88 = [v87,v87,v87,v87,v87];
const v91 = new Float32Array(512, 512, 512);
v91[268435441] -= 512;
v87.a = v88;
