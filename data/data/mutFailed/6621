function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = 2062564485;
    } catch(e3) {
    }
    try {
        this.c = 2062564485;
    } catch(e4) {
    }
    try {
        this.g = 2062564485;
    } catch(e5) {
    }
}
const v6 = new F0();
new F0();
const v8 = new F0();
v8.b = v8;
const v10 = 1 !== 1;
const v12 = new Uint8Array(1);
try { v12.reduceRight(v6); } catch (e) {}
try { parseFloat.from(v8, F0, parseFloat, v10); } catch (e) {}
new parseFloat(0);
const v20 = new BigInt64Array(256);
v20[52];
try { new Uint8ClampedArray(v6, v20, v20, 1); } catch (e) {}
new Uint8ClampedArray(129);
new BigInt64Array(1024);
try { new Int32Array(v12, BigInt64Array, v12); } catch (e) {}
new Int32Array(4096);
function F37() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -1052649622;
        const v42 = -(-7);
        Math.tan(v42 ** v42);
    } catch(e45) {
    }
}
function F46(a48, a49) {
    if (!new.target) { throw 'must be called with new'; }
    const v50 = this.constructor;
    v50.length = v50;
    try { new v50(F37, a48, F37, v50); } catch (e) {}
    new F37(a48, a49);
}
function f53(a54, a55, a56, a57) {
    const o58 = {
    };
}
f53(-9007199254740992);
