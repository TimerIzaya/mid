function f0() {
    -2147483648 >>> -2147483648;
    const o17 = {
        m(a6, a7) {
            new Uint8Array(15);
            new Uint32Array(128);
            const v16 = new Uint8ClampedArray(512);
            return v16;
        },
    };
    function f18() {
        const v19 = [Infinity,-2.0,2.220446049250313e-16];
        function F21(a23, a24) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.b = a23;
            } catch(e25) {
            }
            try {
                this.c = 503467484;
            } catch(e26) {
            }
            try {
                this.d = v19;
            } catch(e27) {
            }
        }
        return F21;
    }
    Object.defineProperty(o17, Symbol.toPrimitive, { value: f18 });
    return o17;
    const o30 = {
    };
    function F31(a33, a34, a35, a36) {
        if (!new.target) { throw 'must be called with new'; }
        ~a34;
        a36 | a36;
        const v39 = this.constructor;
        try { new v39(); } catch (e) {}
        typeof Float32Array;
    }
    return o17;
}
f0.toString = f0;
const v43 = f0();
const v44 = f0();
const v45 = f0();
v45[Symbol.toPrimitive] = f0;
function f48(a49) {
    try { a49.m(f0, v43); } catch (e) {}
    const o56 = {
        get g() {
            (a49 instanceof f0) >= f0;
            function f55() {
                return arguments;
            }
            return arguments;
        },
        4294967295: v45,
        0: f0,
        "c": f0,
    };
    Object.defineProperty(o56, "toString", { enumerable: true, value: f48 });
    o56[0] = o56;
    return o56;
}
const v57 = f48(v45);
const v58 = f48(v43);
const v59 = f48(v45);
v59.toString = f48;
v59[0] = v59;
const v60 = [-1000000.0,-1000.0,0.01008311014806551,-1.785432975129591e+308,1.7976931348623157e+308,0.0,1000000000.0,-9.079621757123235,5.0,-3.0];
v60.e = v44;
const v61 = [-5.0,1000000000000.0,9.195140606114403,-957.4693716192567];
try { v61.splice(v59, v58); } catch (e) {}
const v63 = [194.82053658170867,-Infinity,1.639797299371803e+308,NaN,0.757538567367741];
function f64(a65, a66) {
    a65.e = a65;
    a66.toString = Symbol;
    a65.e = a65;
    try { a66.m(v45, a66); } catch (e) {}
    const o85 = {
        763144478: f48,
        __proto__: a66,
        "e": a65,
        "f": f0,
        ...v44,
        6: v45,
        [v45]: a66,
        ...a66,
        "h": v59,
        "g": f48,
        ...a65,
        "arguments": v63,
        "d": v57,
        m(a69, a70, a71, a72) {
            ("ignoreCase").normalize();
            return this;
        },
        [v45](a76, a77, a78, a79) {
            const o83 = {
                "execution": "async",
                "type": "minor",
            };
            return gc(o83);
        },
    };
    const v86 = o85?.__lookupSetter__;
    try { new v86(a66); } catch (e) {}
    return o85;
}
f64(f64, v43);
f64(v57, v44)[763144478];
const v91 = f64(v60, v45);
v91[763144478];
v59[1073741824] = v44;
f64(v91, v45);
Math.sign(847.3894826373787);
const v101 = ~(65537 >> 847.3894826373787);
const o108 = {
    [57144]: 4294967296,
    "h": 847.3894826373787,
    toString(a104, a105) {
        (-1073741824 && v101) <= v60;
    },
};
o108[57144];
o108.__lookupSetter__(57144);
