function f0() {
}
const v4 = new Uint8Array(Uint8Array);
const o5 = {
    ...v4,
};
function f9(a10) {
    const o11 = {
        "g": "-185650492",
        "f": a10,
        "h": "E",
    };
}
f9();
try {
    const v16 = Array(19793);
    for (const v17 of v16) {
    }
    const v18 = [v16];
    new BigUint64Array();
    const v22 = [];
    function F23() {
        if (!new.target) { throw 'must be called with new'; }
        class C25 {
        }
        for (let i28 = 0, i29 = C25;
            i28++, i28 < i29;
            (() => {
                const v34 = [601759695];
                const v35 = [1073741824,1073741823,1376142744,1073741825];
                function f36(a37, a38, a39, a40) {
                    function f41() {
                        return a37;
                    }
                    function f42(a43, a44) {
                        return a43;
                    }
                    try { f42(); } catch (e) {}
                    f42(v35, C25);
                    try { v35["find"](..."find", a40, ...v34, ...v35); } catch (e) {}
                    return C25;
                }
                for (let v49 = 0; v49 < 10; v49++) {
                    f36(v49, f36, i28, v49);
                }
            })()) {
        }
    }
    new F23();
    new F23();
    v22[65536] = v18;
    for (let v55 = 0; v55 < 50; v55++) {
    }
    class C57 {
        b = "o";
    }
    class C58 extends C57 {
    }
    const v59 = new C58();
    function f60(a61, a62, a63) {
        return f60;
    }
    const v66 = [v59];
    const o67 = {
        "arguments": v66,
        "type": C57,
    };
    new Worker(f60, o67);
    v22[65536] %= 256;
    [v18,v18,v18];
    const v70 = [];
    Uint16Array.valueOf = Array;
    class C73 {
        static [376363416];
        static {
            super.b = this;
            let {...v75} = this;
        }
    }
    class C77 {
    }
    v70 >= Uint16Array;
} catch(e79) {
}
new WeakMap();
new Int8Array(512);
new Float64Array(1486);
const t87 = "-185650492";
t87();
for (let v90 = 0; v90 < 5; v90++) {
    function f91() {
        const t91 = ("1073741824").constructor;
        return t91().replaceAll().toLowerCase();
    }
    f91();
    %OptimizeFunctionOnNextCall(f91);
}
new Int8Array(3573);
const v101 = /0j/vds;
try { v101.compile("Di0", "Di0"); } catch (e) {}
