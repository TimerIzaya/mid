function f4(a5) {
    const o9 = {
        "c": 2,
        "e": -1,
        213: a5,
        ...a5,
        "g": 2,
        p(a7, a8) {
        },
    };
    return o9;
}
f4();
const o12 = {
    "e": -256,
    "h": -1,
};
o12.e /= 9007199254740991;
try {
    o12.__proto__ = o12;
} catch(e16) {
}
const v19 = new Array(1070);
v19[1069] = v19;
const v21 = new Uint8ClampedArray(64);
v21.valueOf = f4;
new Uint8Array(4);
new Int8Array(4);
class C29 {
}
C29.toString = Array;
try {
    const o30 = {
    };
    function f31(a32, a33) {
        a32 += 1070;
        class C36 extends Array {
            2 = 64;
        }
        return a32;
    }
    o30[Symbol.iterator] = f31;
    new Int8Array(o30);
} catch(e40) {
}
const v41 = new C29();
v41.e = -279.4876994050941;
const v42 = new C29();
function f43(a44) {
    const o47 = {
        "maxByteLength": 1784,
    };
    const v49 = new ArrayBuffer(720, o47);
    new Int8Array(v49);
}
Object.defineProperty(v42, "d", { writable: true, enumerable: true, set: f43 });
const v52 = new C29();
function f53(a54) {
    const v57 = new Int32Array(2890);
    v57.lastIndexOf();
    return Uint8ClampedArray;
}
v52.valueOf = f53;
function f59() {
}
v19.f = /a\q5(?:(?=a))a\11\P{gc=Decimal_Number}/gis;
const v63 = new BigInt64Array(256);
v63.includes(undefined);
function F66(a68, a69, a70, a71) {
    if (!new.target) { throw 'must be called with new'; }
    let v67 = this;
    a68.e = a68;
    Object.defineProperty(a70, 721284977, { configurable: true, enumerable: true, value: a69 });
    a71.e = f4;
    const v72 = delete a70?.[a70];
    v21[a69];
    try { v72(64, v19, a68); } catch (e) {}
    try {
        let v75;
        try { v75 = v19.findLastIndex(Array, a69); } catch (e) {}
        let v78 = "string";
        for (let i81 = 0, i82 = 10;
            i81 < i82;
            (() => {
                const v86 = i81++;
                v86 >> v86;
            })()) {
            v78 *= v78;
        }
        Math.atan(v21);
        v75 + -536870912;
        const v94 = (-1.0260449385651748e+308) ** -536870912;
        -536870912 - v21;
        Math.max(v94);
        const v98 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
        const v100 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
        const v101 = [601759695];
        function f103() {
            let v106 = Float64Array;
            b = v106 = -279.4876994050941;
            v98.length;
            try {
                v19.forEach(v106);
            } catch(e109) {
            }
            const v110 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
            const v112 = Symbol.toPrimitive;
            const o118 = {
                toString(a114, a115) {
                    const v116 = Math && v106;
                    a114 *= v112;
                    return v116 <= v110;
                },
            };
            const o138 = {
                "c": -4294967297n,
                [522675525n](a121, a122) {
                },
                "c": v101,
                valueOf(a124, a125) {
                    return v72;
                },
                "b": -4294967295,
                [-4294967297n](a127, a128, a129, a130) {
                },
                "e": -4294967295,
                "e": -268435456,
                "maxByteLength": -4294967295,
                "arguments": v100,
                ...v101,
                "type": "Vre",
                ..."Vre",
                valueOf(a132, a133) {
                    return v110;
                },
                ..."Vre",
                4: "Vre",
                "c": -268435456,
                "type": "Vre",
                "type": "Vre",
                toString(a135, a136, a137) {
                    return Math;
                },
                5: -4294967295,
                6: -268435456,
            };
        }
        f103();
        %OptimizeFunctionOnNextCall(f103);
        Array(10000);
    } catch(e141) {
    }
    try { a70.valueOf(); } catch (e) {}
    a70?.[721284977];
    v67 = a69;
    a71.e = a71;
    const v147 = v67?.constructor;
    let v148;
    try { v148 = new v147(v42, a70, a68); } catch (e) {}
    a70[0];
    try { a71.toLocaleString(); } catch (e) {}
    try {
        v67.d = f59;
    } catch(e151) {
        C29[[11,-268435456,-2147483648,9007199254740991,-2,536870889,-51277,-9809]] = v148;
    }
}
new F66("m", C29, v52, C29);
new F66(v41, v42, "m", v41);
function F155(a157) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = -1.626179407870862e+307;
}
