[15,1073741823,-9223372036854775808,-8822,48355,-2092869747,5,-12,494201622,268435441];
const v1 = [26615];
[-536870912,-24517,-106963848,6,595913502,-15719,1000];
let v5 = 1928848390n;
let v10 = -14n;
function f12() {
    return f12;
}
const v13 = [f12,f12,f12,f12];
v5 = -1349141673n;
const v14 = v1 <= -1.0878635386974625e+308;
v14 % 268435439n;
const o19 = {
    "execution": "sync",
    "type": "minor",
};
gc(o19);
const v21 = [v13];
const v22 = [f12,v13];
class C23 extends f12 {
    [-1] = v13;
    static get c() {
    }
    static get h() {
        super.a <<= v21;
        return v21;
    }
}
const v26 = new C23();
new C23();
const v28 = new C23();
const v31 = new Int16Array(9);
const v34 = new Uint8ClampedArray(255);
delete v34[246];
[240929.17048747814,v14];
["sync"];
[v22,v10];
v10 <<= v5;
const v41 = new Int32Array(257);
function f42() {
    return f42;
}
const v43 = v26 && v41;
v43[3629] ||= 257;
for (const v44 of v13) {
    delete v26.e;
    v31 == v43;
    try { v28.p(); } catch (e) {}
}
