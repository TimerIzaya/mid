function f0() {
    const o38 = {
        "type": "sticky",
        "call": f0,
        "c": -536870912,
        valueOf(a5, a6, a7) {
            function f8(a9) {
                for (let v12 = 0; v12 < 100; v12++) {
                }
                return this;
            }
            Worker(f8);
            return Worker;
        },
        "d": "sticky",
        "a": -536870912,
        "h": -536870912,
        toString(a17) {
            class C18 {
                static [this] = a17;
            }
            return C18;
        },
        __proto__: "sticky",
        "h": 4.0,
        "apply": f0,
        "type": "sticky",
        set b(a20) {
        },
        "b": -536870912,
        [-536870912](a22, a23) {
            let v24;
            try { v24 = a23(this, a22, a23, a23, this); } catch (e) {}
            const o25 = {
            };
            try {
                o25.e = this;
            } catch(e26) {
            }
            try {
                const o27 = {
                };
                o27.e = this;
                o27.g = "sticky";
            } catch(e28) {
            }
            try {
                const o29 = {
                };
                o29.e = this;
                o29.g = "sticky";
                o29.d = this;
            } catch(e30) {
            }
            try {
                const o35 = {
                    ["sticky"]: "toString",
                    set e(a33) {
                    },
                    get e() {
                        return "sticky";
                    },
                };
                const o36 = {
                };
                o36.e = this;
                o36.g = "sticky";
                o36.b = v24;
            } catch(e37) {
            }
            return 4.0;
        },
    };
    o38.length = o38;
    return o38;
}
const v39 = f0();
f0();
const v41 = f0();
v41.length = v41;
class C42 extends f0 {
    #b;
    #n(a44, a45) {
        a44[v39] = a44;
        a45 = a44;
        %VerifyType(this);
        this / this;
        return v39;
    }
    static g = v41;
    static b;
    [f0];
    static 9;
    static {
    }
    static {
        function F49(a51, a52) {
            if (!new.target) { throw 'must be called with new'; }
            function f53(a54) {
                try { new a51(a54); } catch (e) {}
                return f0;
            }
            this.constructor = f53;
            const v57 = this.constructor;
            try { new v57(); } catch (e) {}
            try { this.constructor(); } catch (e) {}
        }
        new F49();
    }
}
new C42();
new Float32Array(v41, "nt", Float32Array);
class C67 extends /nupa\Sc/vms.constructor {
}
new C42();
const v69 = new C42();
function f70() {
    return v69;
}
const v71 = [];
v71[0] = v71;
new BigInt64Array(v71);
class C74 {
}
Float32Array.bind();
for (let v82 = 0; v82 < 5; v82++) {
    const o84 = {
    };
    gc(o84);
}
