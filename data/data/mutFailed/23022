function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 1024;
    } catch(e3) {
    }
    try {
        this.a = 1024;
    } catch(e4) {
    }
    try {
        this.f = this;
        let v5 = 0;
        v5++;
        const o8 = {
            "maxByteLength": 3952309630,
        };
        return Uint8Array;
        class C11 {
        }
        class C12 extends C11 {
        }
        const v14 = new WeakMap();
        v14.set(C12);
        function f16(a17, a18) {
            const v19 = [a17];
            v19.findLast;
            const v21 = v14.set(v19);
            v21.set(v21);
            return ([-0.0,0.4808419851382937,521.265446647358,1000.0,1000000000.0,0.342521651011362,100.12242715110574,-1000000.0])["findIndex"](gc);
        }
        f16.apply();
        Uint8ClampedArray[1] = 14;
        new Float32Array(Uint8ClampedArray);
    } catch(e31) {
    }
}
new F0();
const v33 = new F0();
new F0();
[-4.0,-1000.0,-1000000.0,1e-15,1000.0,-Infinity,-4.0,1000.0];
[-201.99074862725206,1000000000000.0,0.0,1.795627598901627e+308,3500.6437979965704];
[2.220446049250313e-16,-5.0,1000000000000.0,16298.270460199914,2.1557291292858523,-9.062896646838205,-1.7976931348623157e+308,3.0,106.01781778792065];
[-4096,-11,-14270,268435456,10,-56735];
const v39 = [1533198120,9007199254740991,-1358328648,2018712142,0,2193];
[-2,-31210,1073741824,2];
new Float32Array(756);
new Int16Array(1446);
new v39(129);
for (let v50 = 0; v50 < 5; v50++) {
    function f51(a52, a53, a54, a55) {
        Object.defineProperty([58584,15,9007199254740990,2146023485], 65537, { writable: true, value: [46733,-268435456] });
        class C60 {
            [9007199254740990] = -624806.1246088534;
        }
        const v61 = new C60();
        function f62(a63, a64, a65, a66) {
            const o67 = {
                ...a66,
                __proto__: v61,
            };
            return a66;
        }
        return a52;
    }
    f51();
    const v69 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    let v70 = -4294967297n;
    v70--;
    const v72 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
    const v73 = [601759695];
    const v74 = [1073741824,1073741823,1376142744,1073741825];
    function f75() {
        try { ("Vre").codePointAt(); } catch (e) {}
        let v78 = Float64Array;
        v78 = F0;
        b = v73;
        v69.length;
        try {
            v74.forEach(F0);
        } catch(e81) {
        }
        const o92 = {
            "c": v70,
            "c": v73,
            valueOf(a83, a84) {
                return a83;
            },
            [v70](a86, a87, a88, a89) {
                eval();
            },
            "arguments": v72,
            256: v33,
        };
    }
    %OptimizeFunctionOnNextCall(F0);
}
for (let i95 = 0, i96 = 10;
    i95 < i96;
    (() => {
        for (let i102 = 0, i103 = 10;
            (() => {
                eval();
                class C106 {
                }
                function f107(a108, a109) {
                    return f107;
                }
                const v110 = i102 < i103;
                const v113 = new BigUint64Array(3375);
                let [v114,,v115,...v116] = v113;
                v114--;
                return v110;
            })();
            i102++) {
        }
        i96--;
    })()) {
}
for (let [i137, i138] = (() => {
        function f127(a128, a129, a130, a131) {
            const v133 = new Int8Array();
            const v134 = v133.buffer;
            v134.g = v134;
            return Int8Array;
        }
        F0();
        %OptimizeFunctionOnNextCall(f127);
        return [0, 10];
    })();
    i137 < i138;
    i138--) {
}
