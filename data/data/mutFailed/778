new BigInt64Array(1091060517);
[1024,1024];
class C8 {
    static m(a10, a11) {
        this.c;
        let v13 = this.d;
        a11++;
        0 < 1091060517;
        class C20 {
            constructor(a22, a23) {
                try {
                    this.fuck(a23, "function");
                } catch(e26) {
                }
            }
        }
        const v27 = --v13;
        Math.tan(1091060517);
        ("1866165091").normalize();
        const o33 = {
            "f": "k",
            get f() {
                return C8;
            },
        };
        const v34 = v27 & -9223372036854775807;
        Math.cos(v13);
        Math.acos(v13);
        return +v34;
    }
    #f = 1091060517;
    static f;
    static [-346941.73904971965];
    [-331224021];
}
C8.e = C8;
const v38 = new C8();
const v39 = new v38();
const v40 = v39?.constructor;
try { new v40(); } catch (e) {}
const v42 = new C8();
const v43 = v42?.constructor;
let v44;
try { v44 = new v43(); } catch (e) {}
let v46;
try { v46 = WeakSet.toString(); } catch (e) {}
new WeakSet();
const v49 = [4096,1000,17593,14,569949084,536870888,3,4];
const v52 = new Uint32Array(9, 9, 9);
const v53 = v52.buffer;
v49[1855803377] = v53;
v44--;
const v61 = new Int8Array(770);
const v62 = v61?.find;
try { new v62(-346941.73904971965); } catch (e) {}
new Uint8ClampedArray(v61);
313.8605067837666 >>> 313.8605067837666;
class C68 {
    static #p(a70) {
        return a70;
    }
}
BigInt64Array.length;
const v72 = new C68();
const v73 = v72?.__defineGetter__;
try { new v73(v53, C8); } catch (e) {}
const v75 = new C68();
[v72,v75];
const v77 = [1.7976931348623157e+308,-5.063738949828065,-1000000.0,-4.0,4.0,1.368499884638594e+307,0.0,-1.2131530743918297,-1000000000.0,-2.809909548595164];
function f78() {
    return f78;
}
v77.constructor = f78;
const v79 = v77.concat(f78, f78, v77, v46);
try { v79.map(v49); } catch (e) {}
