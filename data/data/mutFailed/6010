function F0() {
    if (!new.target) { throw 'must be called with new'; }
    new Int8Array(6);
    function f5() {
        const o10 = {
            "b": 1e-15,
            [3](a9) {
            },
        };
        o10[3] = o10;
        return o10;
    }
    const v11 = f5();
    v11[3] = v11;
    -55301 + -55301;
    Uint8Array.toString = f5;
    new Uint8Array(6);
    class C19 {
        constructor(a21, a22) {
            function f23(a24, a25) {
                return "dotAll";
            }
            a22.constructor = f23;
            function f29(a30, a31) {
                try { a31.replaceAll(f29, this); } catch (e) {}
                return a31[3];
            }
            function f34(a35, a36) {
                const v37 = a35 * a35;
                function f38() {
                    return f38;
                }
                class C39 extends f38 {
                }
                return v37;
            }
            f29[Symbol.replace] = f34;
            const v42 = f29(a22, a21);
            try { v42.strike(); } catch (e) {}
            f29("e", "e");
            const v45 = f29("wNzDt", a21);
            try { v45.fontsize(Uint8Array); } catch (e) {}
        }
    }
    C19.b = F0;
    C19.prototype = C19;
    const v47 = new C19("dotAll");
    const v48 = v47?.constructor;
    try { new v48(6, v47); } catch (e) {}
    const v50 = v47.constructor;
    v50.b = v50;
    try {
        this.e = -55301;
    } catch(e51) {
    }
    try {
        this.b = -55301;
    } catch(e52) {
    }
}
const v53 = new F0();
const v54 = new F0();
const v55 = new F0();
function f57() {
    return v53;
}
function f58() {
    return v54;
}
function f59() {
    return f57;
}
Object.defineProperty(f59, "g", { writable: true, enumerable: true, value: v55 });
f59.g = f59;
[-1.0907640958226839e+308,-2.2250738585072014e-308,789.0962672663811,NaN,3.0,5.0,-1.7976931348623157e+308,-688.8093528913639,1000000000.0];
const v61 = [-2.220446049250313e-16,-6.314087141191578,2.5207042803454023,-5.0];
const v62 = v61?.join;
try { new v62(v61); } catch (e) {}
[-725250.803427798,937.6527229052951,8.016789996013361e+307,1.2586870063166546e+308,-3.537120746437082e+307,4.0,-1.4866038234164512e+308];
class C65 {
}
C65.then = f58;
async function f66(a67, a68, a69, a70) {
    const v71 = await C65;
    v71.d = v71;
    return v71.call();
}
const v73 = f66.call(C65, C65, f66, f66, f66);
v73.constructor = f57;
try { v73.finally(f66); } catch (e) {}
v73.then(f66, v73, v73, v73, v73);
