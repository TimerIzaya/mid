function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = 64;
    } catch(e6) {
    }
    try {
        this.a = a5;
    } catch(e7) {
    }
    try {
        this.e = a5;
    } catch(e8) {
    }
}
const v9 = new F3(9);
const v10 = new F3(1024);
const v11 = new F3(1024);
function f12(a13, a14, a15, a16) {
    const o24 = {
        "c": v10,
        "e": 1024,
        "c": 1024,
        valueOf(a18, a19) {
            return a19;
        },
        [F3](a21, a22) {
            a21 = v11;
            try {
                a21.e = a21;
            } catch(e23) {
            }
            return a14;
        },
        "e": a13,
        __proto__: v10,
        16: a13,
        "d": a15,
        "g": a13,
        ...a13,
        "h": F3,
    };
    return o24;
}
const v25 = f12(1024, 1024, v10, v11);
const v26 = f12(v11, 1024, v11, v10);
const v27 = f12(v9, 9, v9, v11);
[64];
[1997980531,-65535];
const v30 = [1,-9223372036854775807,-4294967295];
class C31 {
    constructor(a33, a34, a35, a36) {
        f12(a36, 64, a36, v9);
        %PrepareFunctionForOptimization(f12);
        f12(a36, 64, a36, v9);
        f12(a36, 64, a36, v26);
        %OptimizeFunctionOnNextCall(f12);
        f12(a36, 64, a36, v9);
        new v26();
        function f42() {
            0 < 9;
            const v51 = new Int16Array(16);
            v51[10] = -9007199254740992;
            const o88 = {
                ["constructor"]: "constructor",
                2: 4.0,
                ..."rN",
                "f": "rN",
                __proto__: "rN",
                "g": 4.0,
                "h": "rN",
                m(a54, a55) {
                    const v58 = new BigUint64Array(1000);
                    const o59 = {
                        ...v58,
                    };
                    a54[this] = "constructor";
                    Array();
                    class C65 {
                        static #a;
                        static n(a67, a68) {
                            const v69 = super.d;
                            try { v69(); } catch (e) {}
                            return a67;
                        }
                        [1];
                        static [1] = 255;
                        [255];
                        f = -65536;
                    }
                    const v71 = new C65();
                    const v72 = new C65();
                    let v74 = -65536n;
                    let v76;
                    try { v76 = v71.m(1n, 10000n, 10000n, 1); } catch (e) {}
                    function f77(a78, a79, a80) {
                        let v81;
                        try { v81 = v76(a79); } catch (e) {}
                        v81 = a80;
                        v74 >>= a80;
                        v71[10] = 1n;
                        v72.f;
                        return v74;
                    }
                    const v85 = ("gYPHN").normalize("NFKD");
                    try {
                        ("constructor").localeCompare(v85);
                    } catch(e87) {
                    }
                    return v85;
                },
            };
            return o88;
        }
        const v89 = f42();
        const v90 = f42();
        const v91 = f42();
        class C92 {
            #h = v89;
            static #e;
            constructor(a94, a95) {
                for (let i97 = 0; i97 < 9; i97++) {
                    Object.defineProperty(v91, f42, { set: f42 });
                    v90[i97] **= a94;
                }
            }
        }
    }
    3 = v27;
    4294967295 = 1024;
    static #d;
    static #g = v30;
    a;
    230 = f12;
    static f;
}
new C31(v25, 9, v25, v10);
new C31(v11, 1024, v27, v10);
new C31(1024, 9, v25, v10);
const v106 = [3.0,0.33171220343699925,4.064384707296433,1.5856273613625281e+308,-620.344995023322,0.9478652503365506,-856874.8447818598,-127.45049040971935];
function f107(a108, a109) {
    const o116 = {
        ...a108,
        get d() {
            return this;
        },
        set b(a112) {
            function f113(a114) {
                return f113;
            }
            class C115 extends f113 {
            }
        },
    };
    return f107;
}
f107();
f107(v106);
