function F0() {
    if (!new.target) { throw 'must be called with new'; }
    let v2 = 9007199254740992;
    try {
        for (let v3 = 0; v3 < 96; v3++) {
            v2 *= v3;
        }
        const o4 = {
        };
        try {
            o4.f = this;
        } catch(e5) {
        }
        try {
            const o6 = {
            };
            o6.f = this;
            o6.a = v2;
        } catch(e7) {
        }
        try {
            const o8 = {
            };
            o8.f = this;
            o8.a = v2;
            o8.h = F0;
        } catch(e9) {
        }
        try {
            const o10 = {
            };
            o10.f = this;
            o10.a = v2;
            o10.b = F0;
        } catch(e11) {
        }
        this.g = v2;
    } catch(e12) {
    }
    try {
        this.e = v2;
    } catch(e13) {
    }
}
const v14 = new F0();
const v15 = new F0();
const v16 = new F0();
class C17 {
    #c = F0;
    constructor(a19, a20) {
        super[a19] = v14;
        super.b;
        try {
            a19.#c;
        } catch(e23) {
        }
    }
    static g = v16;
    #e = v14;
    d;
    7 = C17;
    g;
    static #f;
    #f = v15;
    129;
}
const v24 = new C17(C17, v14);
new C17(v15, C17);
new C17(v14, v14);
class C30 extends F0 {
    get g() {
        function f32(a33) {
            return this;
        }
        class C34 extends f32 {
            [-1] = C17;
            [F0] = v24;
        }
        return "random";
    }
    static [C17] = C17;
    ["random"] = "2";
}
new C30();
new C30();
new C30();
class C38 {
}
new C38();
new C38();
const v41 = new C38();
class C42 extends C38 {
    constructor(a44, a45) {
        super();
        try {
            a44.__proto__ = C38;
        } catch(e46) {
        }
        new C38();
    }
}
const v48 = new C42(v41);
new C42(v48, v48);
new C42();
new C38();
