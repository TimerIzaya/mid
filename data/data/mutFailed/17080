const v5 = new Int16Array(94);
v5[65];
new Int32Array(6);
new Uint32Array(0);
function f13(a14, a15, a16, a17) {
    arguments.length = arguments;
    function f19() {
        return arguments;
    }
    const v21 = new URIError();
    v21.b = v21;
    v21.g;
    %OptimizeFunctionOnNextCall(f19);
    ("find").codePointAt(f13);
    return arguments;
}
f13.toString = f13;
for (let v25 = 0; v25 < 10; v25++) {
    v25 & v25;
    const v28 = f13()?.callee;
    function f29(a30) {
        const v31 = [-11,65536,65537];
        function f32(a33, a34, a35, a36) {
            v31[1428717040];
            return a36;
        }
        %OptimizeFunctionOnNextCall(f32);
        return a30;
    }
    v28.valueOf = f29;
    try { new v28(v5, Int32Array, -1.7976931348623157e+308, v5); } catch (e) {}
}
%OptimizeFunctionOnNextCall(f13);
f13();
