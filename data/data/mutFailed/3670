class C3 {
    toString(a5, a6) {
        do {
            function F8(a10, a11, a12, a13) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.a = "e";
                } catch(e14) {
                }
            }
        } while (0 < 6)
    }
    constructor(a18, a19) {
        try {
            super.o("e", a19, a18, this, this);
        } catch(e21) {
        }
        /S?/udimy;
        /abc+?/uims;
        /U/gvsy;
    }
    static #g;
    3 = 1073741825;
    4;
    ["undefined"];
}
const v25 = new C3(C3, C3);
class C26 {
    static {
        for (let i30 = 0, i31 = 10;
            i30 < i31;
            (() => {
                function f35() {
                    return f35;
                }
                const v36 = [601759695];
                const v37 = [1073741824,1073741823,1376142744,1073741825];
                function f39(a40, a41, a42, a43) {
                    function f45() {
                        return a40;
                    }
                    f35();
                    const v48 = new Int8Array();
                    -536870912n == "-11838";
                    function F52() {
                        if (!new.target) { throw 'must be called with new'; }
                    }
                    new F52();
                    function f55(a56, a57) {
                        return i31;
                    }
                    f55(f55(v37, C26));
                    v48.buffer.slice(2147483648);
                    %OptimizeFunctionOnNextCall(f45);
                    let v64;
                    try { v64 = v37["find"](..."find", a43, ...v36, ...v37, ...522675525n); } catch (e) {}
                    v64 <= a42;
                    return arguments;
                }
                for (let v66 = 0; v66 < 10; v66++) {
                    f39();
                }
                i30++;
            })()) {
            [[-1e-15,-4.547098672084515,6.731189859503068,1000.0,1000.0,414.1111077300918,567.5737904015757]];
            new i30();
            const v75 = new Map();
            function f76(a77, a78) {
                const o84 = {
                    "a": a78,
                    [a77]: v75,
                    [v75]: Map,
                    ...v75,
                    "b": a77,
                    [a78]: Map,
                    "h": a77,
                    146: v75,
                    valueOf(a80) {
                        this || this;
                        this.__proto__;
                        new Map(this);
                        return this;
                    },
                };
                return o84;
            }
            const v85 = f76(v75, f76);
            const v87 = f76(f76(v85, Map), v85);
            for (let v88 = 0; v88 < 79; v88++) {
                for (let v89 = 0; v89 < 100; v89++) {
                    f76(v88, v88);
                }
                v87[512] = v88;
                [-0.0,1000000000000.0,737115.9869501861,NaN];
                [0.7909963851033462,-1000.0,0.6110844995665646,-0.0,-5.022618029066237,-113.75300559900211];
                [0.17979151957751893,-2.0,1000000000.0,1.0,-2.220446049250313e-16,-2.220446049250313e-16,1000000000000.0];
            }
        }
    }
}
const v94 = new C3(v25, C3);
new C3(1073741825, v94);
new Array(1999);
new Int8Array(-45057);
("boolean").split("toString");
("by").normalize();
