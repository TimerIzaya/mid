function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = 4294967296;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
class C7 {
    [v6] = v5;
    static m(a9, a10) {
        new Float32Array(2);
        new Uint8ClampedArray(257);
        const v19 = new Uint16Array(370);
        return v19;
    }
    [v4] = v4;
}
new C7();
function f21(a22) {
    return a22;
}
class C23 extends f21 {
    [C7];
}
const v24 = new C7();
new C7();
/(?:ab){4,7}/giy;
/a[a]/vdms;
/[^QkpFaxyz??]/dim;
C7 <<= v24;
%VerifyType(8);
const o34 = {
    "maxByteLength": 13,
};
const v36 = new SharedArrayBuffer(6, o34);
new Float64Array(v36);
for (let v39 = 0; v39 < 5; v39++) {
    function f40() {
        function f42(a43, a44, a45, a46) {
            const o50 = {
                n(a48, a49) {
                    return v39;
                },
            };
            o50.n(a46, o50, o50, a43, v39);
            return v39;
        }
        for (let v52 = 0; v52 < 25; v52++) {
            f42(v52, f40, eval, v52);
        }
        eval();
        return f40;
    }
    f40();
    %OptimizeFunctionOnNextCall(f40);
}
