class C3 {
    static set g(a5) {
        for (let v6 = 0; v6 < 32; v6++) {
            const t3 = "string";
            t3["p" + v6] = v6;
        }
    }
    static #d;
    [-4294967295] = -4294967295;
    static f = -5.0;
}
const v9 = new C3();
const v10 = new C3();
const v11 = new C3();
function F12(a14, a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = C3;
    } catch(e18) {
    }
}
new F12(v10, v11, v9, v9);
const v20 = new F12(v10, v10, C3, v11);
new F12(v10, "string", v10, v20);
function F22() {
    if (!new.target) { throw 'must be called with new'; }
}
const v24 = new F22();
function F25(a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    v10[v9];
    F25 <<= C3;
    a27[129] = -4294967295;
    this["string"];
    v9.__proto__;
}
const v32 = new F25();
const v35 = [];
function F37() {
    if (!new.target) { throw 'must be called with new'; }
    this.toString(this, F37, F37, this);
    Date.toString(F37, 9223372036854775807).replaceAll(v24, -37859n);
    const v45 = new Uint32Array(Uint32Array, Uint32Array, 4);
    const v48 = new Set(v35);
    const v49 = v48.add;
    try { new v49(v45); } catch (e) {}
    const v52 = v48["delete"](839612.5677247904);
    const v53 = v52 || v52;
    for (let v57 = 0; v57 < 32; v57++) {
        v35["p" + v57] = v57;
    }
    v53 || v53;
    const v61 = v53 && v53;
    const o63 = {
    };
    o63.b = o63;
    o63.e = 19793;
    try { new Array(9223372036854775807); } catch (e) {}
    let v67;
    try { v67 = ("getPrototypeOf").blink(); } catch (e) {}
    v67[28].strike();
    const v70 = v67.strike(591114.0785999324);
    let v71;
    try { v71 = v70.replace(19793, v32); } catch (e) {}
    v71[11] = v71;
    class C73 {
        ["getPrototypeOf"] = -1.7976931348623157e+308;
    }
    class C74 extends C73 {
        ["getPrototypeOf"] = C73;
    }
    try { new C74(); } catch (e) {}
    let v76;
    try { v76 = new C74(); } catch (e) {}
    v76.getPrototypeOf;
    let v78;
    try { v78 = new C74(); } catch (e) {}
    const v79 = v78?.getPrototypeOf;
    try { new v79(); } catch (e) {}
    const v81 = new C74();
    const v82 = v81.getPrototypeOf;
    try { v82(v76); } catch (e) {}
    let v84;
    try { v84 = new v82(); } catch (e) {}
    try { v84.propertyIsEnumerable(v71); } catch (e) {}
    const v86 = v84?.constructor;
    let v87;
    try { v87 = new v86(v67, this, 4); } catch (e) {}
    try { v87.constructor(); } catch (e) {}
    const v89 = v81.constructor;
    let v90;
    try { v90 = new v89(F37, v61); } catch (e) {}
    const v91 = v90?.getPrototypeOf;
    v91?.apply;
    try { new v91(); } catch (e) {}
    for (const v95 of Array(19793)) {
    }
}
new F37();
const v97 = new F37();
v97.constructor;
const t100 = v97.constructor;
new t100();
