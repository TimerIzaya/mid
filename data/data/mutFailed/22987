function f3() {
    const o5 = {
        valueOf() {
            return this;
        },
    };
    return 268435440n;
}
class C6 {
}
const v7 = new C6();
undefined ** v7;
f3.d = f3;
-65537n;
new Uint8ClampedArray(303);
class C20 extends Date {
    constructor(a22, a23, a24, a25) {
        super(a23);
        this.setYear(189);
    }
}
10n * 10n;
const v28 = 10n + 10n;
new Float32Array([49197,268435456,-12,-5156,35920,-45892,-667,536870888,65537,-12]);
function f33() {
    new Int8Array(1073741823);
    return f33;
}
const v38 = [268435456n,268435440n];
try { v38.fill(65537n); } catch (e) {}
const v40 = [8n,65537n,10n,f3,-10n];
const v41 = [-65537n,v40,268435456n];
try { v41.push(v28); } catch (e) {}
class C43 {
    toString(a45, a46) {
        this.constructor(a45);
        -this;
    }
    toString(a50, a51, a52) {
        const o53 = {
        };
        const o54 = {
        };
        Int16Array[0] = 8;
    }
    constructor(a58) {
        const v59 = this?.__lookupGetter__;
        try { new v59(2n); } catch (e) {}
        for (let v61 = 0; v61 < 5; v61++) {
            -v61;
            let v64;
            try { v64 = ("p").padStart("p"); } catch (e) {}
            v64[0];
            const v66 = "p" + v61;
            try { v66.matchAll(C43); } catch (e) {}
        }
    }
}
C43.length;
const v71 = new Uint32Array(3);
for (let v72 = 0; v72 < 5; v72++) {
    v71[v72] = -65537n;
}
const v73 = new C43();
const v74 = v73?.hasOwnProperty;
try { v74(f3); } catch (e) {}
try { new v74(v40); } catch (e) {}
