class C2 extends Int32Array {
}
const v3 = new C2();
[v3,v3];
const v6 = new Float32Array(2);
const v9 = new Reflect(129);
new BigInt64Array(7, 2, v3, Int32Array);
const v15 = new Float64Array(5);
const v16 = new Float64Array(v15);
const v17 = v15 ** v16;
class C18 {
    get d() {
        this >>> 129;
        try {
            super.getDate(this);
        } catch(e22) {
        }
        const v23 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
        function f24(a25, a26, a27, a28) {
            a26 & a26;
            try {
                v23.forEach(a26);
            } catch(e31) {
            }
            return f24;
        }
        return 129;
    }
    static a;
    h = v9;
}
function f32() {
    return v6;
}
C2.a >>= v17;
try {
    v15.toString = f32;
} catch(e33) {
}
new C18();
new C18(v3, Reflect, Float64Array);
new C18();
BigUint64Array.expm1(1000.0);
