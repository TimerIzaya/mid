let v2 = -2.1657623955247987e+306;
class C3 {
    get b() {
        try {
            const t4 = "c";
            t4.__proto__ = this;
        } catch(e5) {
            super[e5] = "d";
            super[this] = e5;
            super.c;
            try {
                const t11 = "d";
                t11.g = e5;
            } catch(e7) {
            }
        }
        v2 **= v2;
        return this;
    }
    10;
    b = v2;
    h;
    a;
}
const v8 = new C3();
const v9 = new C3();
const v10 = new C3();
function f11(a12, a13, a14, a15) {
    const o36 = {
        [f11](a17, a18, a19, a20) {
            function f21() {
                return v2;
            }
            return f21;
        },
        [v9](a23, a24, a25) {
            Object.defineProperty(eval, "e", { enumerable: true, get: eval });
            new BigInt64Array(1);
            const t38 = "d";
            new t38(90);
            new Uint8Array(9);
            return eval;
        },
    };
    return o36;
}
f11(C3, f11(v9, C3, C3, v10), C3, v8);
f11(v9, v9, v9, C3);
function f43() {
    let v45 = ("-536870912").normalize;
    ("-536870912").g;
    const v49 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    for (let v50 = 0; v50 < 5; v50++) {
        function f51() {
            try {
                v49.forEach();
            } catch(e53) {
                e53.a = e53;
            }
            const v55 = Symbol.toPrimitive;
            Symbol.for(v55.description);
            v55.description;
            Symbol.for();
            return v55;
        }
        f51();
        %OptimizeFunctionOnNextCall(f51);
    }
    v45 = v49;
    try {
        ("c").repeat(209);
    } catch(e63) {
    }
    new Uint16Array(209);
}
[140693.55968437064,-1.1852842353837545,1.7976931348623157e+308,0.2891882798796017,1000000.0,-405533.57654950966,-476160.9672552756,-1.2913968641498632e+308,-1.7976931348623157e+308,1000000.0];
[0.0,2.439947332797196];
const v67 = [3.554050204802966,2.0,-0.9893540922478827,835.4687088452995,1.0,-1000000000000.0,537.8799696886636,-129821.05993193889];
Object.defineProperty(v67, "valueOf", { writable: true, value: f43 });
const v69 = v67 <= "Z";
v69 && v69;
36002 % 36002;
const v73 = [-1000.0,351.94489669740733,5.8623101046484845,-160881.40611645568,0.6390643538224362,9.13027568774574];
function f74(a75) {
    a75 ^ a75;
    return 36002;
}
function f77(a78, a79) {
    a79.length;
    return f74;
}
const v82 = new Promise(f77);
v82[v73] += 36002;
const v85 = new BigInt64Array();
new BigUint64Array(127);
class C91 extends f43 {
}
for (const v92 in C91) {
}
new Int16Array(3);
let v96 = 10;
for (; v96--;) {
}
const v99 = [];
function* f100(a101, a102) {
    yield* v99;
    return a101;
}
const v103 = new Int8Array();
try { v103.entries(); } catch (e) {}
try { new Array(v85); } catch (e) {}
for (let v107 = 0; v107 < 10; v107++) {
    3811 >>> 3811;
    const v111 = Float64Array.of();
    const v112 = v111?.set;
    try { new v112(3811); } catch (e) {}
    v111.toString = f43;
    new Date();
    const v117 = v111(36862);
    try { v117.sort(36862); } catch (e) {}
}
