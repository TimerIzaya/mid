let v0 = -14;
class C3 {
    m(a5) {
        [4294967297,-2147483649,206694247,2,1073741825];
        function f7() {
            delete arguments.callee;
            return arguments;
        }
        f7();
        const v11 = [-2147483647,-4294967295,6,-268435456,-247690258,19837];
        [129,-15,268435456,-1479943491,60382,-7,0];
        super.b = v11;
        new Array(4096);
        return v11;
    }
    constructor(a17) {
        BigInt64Array.name = BigInt64Array;
        const v23 = [181.0767075529559,[-3.0]];
        const o24 = {
            "arguments": v23,
            "type": "function",
        };
        try {
            a17.length = 2;
        } catch(e25) {
        }
        new BigUint64Array(64);
        function F29(a31, a32) {
            if (!new.target) { throw 'must be called with new'; }
        }
    }
    /*
    constructor(a34, a35) {
        const v36 = [v0,a35,this];
        let v37 = ["caller"];
        v37.constructor;
        const v42 = !(369263011 ^ "grow");
        const v43 = [-6.672391061426152e+307];
        function f44() {
            v43["pop"]() <= v42;
            return 369263011;
        }
        f44();
        %OptimizeFunctionOnNextCall(f44);
        const v49 = [v37,v36,v37,v37,a34];
        v37 = v36;
        v36["copyWithin"](C3, ...v49, a35, v0, this);
        try {
            v49.indexOf("copyWithin");
        } catch(e53) {
        }
        v36[Symbol.hasInstance] = v0;
    }
    */
}
const v56 = new C3("caller", "caller");
new C3(-467.83153699436934, v56);
let v58 = new C3(-467.83153699436934, v56);
const v61 = new BigInt64Array(16);
Symbol.toPrimitive;
[this,this,this,this];
const v68 = new Map();
v68.delete();
const v71 = new Uint8Array(583);
%VerifyType(v71);
v0 += v0;
[-331175414];
[1073741823,9007199254740990,-9223372036854775808,1973337946,-4,2,7,-4294967296,1073741824];
[46541];
v58 = C3;
for (let v76 = 0; v76 < 32; v76++) {
    v61["p" + v76] = v76;
}
new BigUint64Array(3);
const v83 = new Int8Array(2830);
const v86 = new Int32Array(10);
function f89(a90, a91, a92) {
    const o93 = {
        ...v83,
        814452916: 129,
        "f": v86,
        ...v86,
        __proto__: a91,
        [a91]: Float64Array,
    };
    return f89;
}
%PrepareFunctionForOptimization(f89);
f89();
f89(-25269, v83);
