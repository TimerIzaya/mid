function f0() {
    const o4 = {
        "f": -2102029848,
        "d": -2102029848,
        "h": "call",
        "g": 296.8844113061841,
        __proto__: "call",
        "e": "call",
        7: 296.8844113061841,
        "c": -2102029848,
        "b": "call",
        "a": "call",
        2836: "call",
    };
    return o4;
}
f0();
const v6 = f0();
const v7 = f0();
class C8 extends f0 {
    static #d;
    constructor(a10, a11) {
        super();
        try { this.flat(a10, a10, a11, a11, this); } catch (e) {}
        try {
            f0();
        } catch(e14) {
        }
    }
    13 = v7;
    221;
}
const v15 = new C8(v6, v7);
new C8(v7, v15);
new C8(C8, v6);
new WeakMap();
[-1e-15,-1000.0,-1.7197891975819863e+308];
[6.760310914003092,8.213961861061096e+307,0.03166234697515169,676426.6393337266,0.8531785947528798,1e-15,-4.0];
[-134.27332601337685,2.220446049250313e-16,0.3715439209542707,1e-15,-2.220446049250313e-16,-130434.69705469836];
const v25 = new BigInt64Array(205);
let v28;
try { v28 = Uint16Array(205, BigInt64Array, 256); } catch (e) {}
const v29 = new v28(256);
const v30 = v25[205];
0 >> 0;
try {
    v30.toString = v30;
} catch(e33) {
    e33.message = e33;
}
255 - 255;
const v37 = Float64Array.BYTES_PER_ELEMENT;
const v38 = new Float64Array(255);
function f39() {
    const o41 = {
        0: "1ya",
        162: "1ya",
    };
    return v29;
}
v38[Symbol.toPrimitive] = f39;
function F44(a46, a47, a48, a49) {
    if (!new.target) { throw 'must be called with new'; }
    F44 >> a47;
    a49 | a49;
    try {
        v38.b = a47;
    } catch(e52) {
    }
    try {
        this.h = a46;
    } catch(e53) {
    }
}
f39.constructor = f39;
const v54 = F44?.constructor;
let v55;
try { v55 = new v54(v38); } catch (e) {}
const v56 = new F44(255, 205, 255, 205);
new F44(255, 256, 255, 256);
new F44(255, v55, 256, 255);
const v60 = ([-Infinity,-5.577012134541006])?.filter;
try { new v60(Uint16Array); } catch (e) {}
const v62 = [-1000000000.0,5.0,872297.1015869486,-1e-15,0.2087529151028652];
const v63 = [-2.220446049250313e-16,-171953.22769972356,2.220446049250313e-16,Infinity,-3.0,-4.368087235127776];
const v64 = /(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/u;
const v65 = [Infinity];
const t84 = [2.2250738585072014e-308,1.949684848262672,4.0];
t84[3] = v30;
const v67 = v37.push(v64);
const t89 = [342.12300421344116,0.3998304334347528,-1.5569468467414895e+308,929110.7069466491,0.8403359879371063,928.8415619105033,5.0];
t89.toStringTag = v62;
const v69 = v63.toStringTag;
try { v65.every(v69, v15); } catch (e) {}
v56.h >>>= v67;
v62.length;
