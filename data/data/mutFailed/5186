const v0 = [-34637,855851346,64,-9007199254740991,-1636893642,9007199254740990,-9223372036854775808];
const v1 = [2,-2147483648,-1428072075,-49240,9223372036854775807];
const v2 = [-1259423607,8,9007199254740992,2142811740,-1024];
const v5 = new Uint16Array(50);
const v8 = new Int8Array(512);
const v12 = new Float32Array(165);
v12[35] = v12;
new Uint16Array(v12);
const v16 = new BigInt64Array(256);
class C17 extends Uint16Array {
    #n(a19, a20, a21, a22) {
        v16[268435439];
        a19[v0] = v8;
        let {"e":v24,"length":v25,} = v0;
        a21 = 256;
        return a19;
    }
    constructor(a28, a29, a30, a31) {
        super(256, a30);
        super.byteLength = 512;
        new Set();
        [159524002];
        [-54830091,-58888,127,4294967296,-38948,-2147483648];
        [4,15,536870912,1073741824,1073741823,3617,-57401,3,-256];
        try {
            a28.length = 256;
        } catch(e37) {
        }
    }
}
new C17(v0, 50, 512, Int8Array);
new C17(v1, v5, 256, v5);
new C17(v1, v2, 512, C17);
let [] = [];
