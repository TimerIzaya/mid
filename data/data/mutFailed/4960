function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 321962689;
    } catch(e3) {
    }
    [this,this];
    321962689 ** 321962689;
    new Uint8ClampedArray(995);
}
const v9 = new F0();
const v10 = new F0();
const v11 = new F0();
[1000000000000.0];
const v13 = [1e-15,-72780.0426452969,-869.5305581989414,-1000.0,0.3672309572712946,-9.941687319966054,0.5212223260286835,-2.220446049250313e-16];
const v14 = [-656.5166192865477,1.0,-1000000000.0,1000.0,4.0,4.0,1000000000.0,-1e-15];
class C15 extends F0 {
    constructor(a17, a18) {
        let v16 = this;
        return v14;
        const t20 = [];
        t20[6] = 4294967295;
        const v21 = /(?:a*)+q(?<a>.)/guds;
        function f22(a23) {
            const o27 = {
                set b(a25) {
                },
                get d() {
                    return a23;
                },
                __proto__: v21,
            };
            return o27;
        }
        super();
        v16 = a18;
        function* f28(a29, a30, a31) {
            const v32 = /b\x0f/guimy;
            /((x)(x)(x)\2(I))/gudisy;
            /f^/gvimsy;
            const v36 = new BigUint64Array();
            const v37 = /anVXYFzN(x)(x)(x)\3/gvdms;
            try { v36.reduceRight(v37); } catch (e) {}
            const v39 = v10.constructor;
            v39.prototype = v39;
            yield v11;
            return v32;
        }
        f28(a17, v13, v9);
    }
    static [v14] = v10;
    static 203;
    #c = v14;
}
const v42 = new C15(v11, v9);
const v43 = new C15(v9, C15);
new C15(v43, v43);
v14[3.2149281669993574e+307] = v42;
function F47(a49, a50) {
    if (!new.target) { throw 'must be called with new'; }
    a49.trimLeft().strike();
    const v53 = this.constructor;
    try { new v53("a"); } catch (e) {}
}
[-4.00875209314862,-1e-15,99774.13543443684,1.574834012689156e+307,1.7976931348623157e+308,NaN,-1.0,-1.1408596058573283e+308,-8.848106537810969e+306,0.7338903342112758];
[420273.4127466616,-861502.4633025147,1.0];
[-1e-15,-1.0385013861320701e+307,7.152882313381387];
function F62(a64, a65) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        function F67() {
            if (!new.target) { throw 'must be called with new'; }
            const v69 = this?.propertyIsEnumerable;
            try { new v69(-30326n); } catch (e) {}
            this.a = this;
            3872 >>> 3872;
            try {
                this.a = 3872;
            } catch(e73) {
            }
        }
        const v75 = new Uint8ClampedArray(2147483647);
        new Int8Array(268435456);
        Math.atan2(-988.8649474800335, 10000);
        function f83(a84) {
            return f83;
        }
        const v87 = [v75];
        const v89 = new Float64Array();
        const v92 = new BigUint64Array(3170);
        [...v89,...v92];
        const o94 = {
            "arguments": v87,
            "type": "function",
        };
        Worker(f83, o94);
    } catch(e96) {
    }
}
new F62();
