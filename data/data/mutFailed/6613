function f0() {
    const o14 = {
        get h() {
            this[this] = this;
            const t4 = "MAX_VALUE";
            const v5 = new t4();
            const v6 = [5];
            const v8 = [];
            Reflect.apply(v6.fill, v5, v8);
            ("MAX_VALUE")["indexOf"](this, -6);
            `number`;
            return this;
        },
        58: "MAX_VALUE",
        ["MAX_VALUE"]: "MAX_VALUE",
        4: 2.0,
    };
    return o14;
}
const v15 = f0();
const v16 = /((((.).).).)rfoo|(bar|baz)|quux*/uims;
try { v16(); } catch (e) {}
const o21 = {
    get b() {
        delete this[this];
        this[this] = 817905185;
        return v16;
    },
};
const v22 = f0();
function f24(a25, a26, a27) {
    const o29 = {
        [a27]: a26,
        "g": 65536n,
        get a() {
            return a25;
        },
        "a": a27,
    };
    return f24;
}
const v30 = f0();
const v31 = [v30,v30,v22,v15,f0];
[v22,[v15,v31,v31]];
/[\cZ]/vdimy;
/S\P{Decimal_Number}/u;
([-5,2147483649,-4294967295,1,8,-4331,52354,15231])["unshift"]();
const v39 = [-1.0];
const o40 = {
};
let v42 = new Proxy(v39, o40);
++v42;
/(xyz{0,1}[5(?:ab){4,7}+])/gvdmsy;
function F45(a47) {
    if (!new.target) { throw 'must be called with new'; }
    const v48 = this.constructor;
    const v49 = v48.bind(F45, F45, F45, F45);
    try { v49(); } catch (e) {}
    try { new v48(); } catch (e) {}
}
new F45();
new F45();
let v57;
try { v57 = ("getPrototypeOf").blink(); } catch (e) {}
try { v57.strike(591114.0785999324); } catch (e) {}
const v60 = new BigInt64Array();
function f61() {
    const v63 = v60[undefined] instanceof f61;
    const o64 = {
    };
    o64.g = o64;
    const o65 = {
    };
    o65.h = o65;
    try {
        const o66 = {
        };
        o66.h = o66;
        o66.a = 591114.0785999324;
        o66.h = v63;
    } catch(e67) {
    }
    -12n << -12n;
    return undefined;
}
const o70 = {
    "apply": f61,
};
o70.apply;
