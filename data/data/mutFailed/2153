class C3 {
    static #valueOf(a5, a6) {
        try {
            ("padEnd").#valueOf("e", this);
        } catch(e8) {
        }
        return a5;
    }
    static 1;
    constructor(a10) {
        function f11(a12) {
            a12.name = a12;
            let [v13,v14] = "padEnd";
            const o15 = {
            };
            o15.a = o15;
            try {
                o15.c = 836028.7999128257;
            } catch(e16) {
            }
            try {
                const o17 = {
                };
                o17.c = 836028.7999128257;
                o17.e = a10;
            } catch(e18) {
            }
            try {
                const o19 = {
                };
                o19.h = o19;
                o19.e = o19;
                o19.c = 836028.7999128257;
                o19.e = a10;
                o19.d = v14;
            } catch(e20) {
            }
            try {
                const o21 = {
                };
                o21.h = o21;
                o21.f = this;
                o21.c = 836028.7999128257;
                o21.e = a10;
                o21.f = a10;
            } catch(e22) {
            }
            return v13;
        }
        f11(f11);
    }
}
const v24 = new C3(C3);
try { v24.propertyIsEnumerable(v24); } catch (e) {}
const v26 = new C3(836028.7999128257);
const v27 = v26?.constructor;
try { new v27(836028.7999128257); } catch (e) {}
const v29 = new C3(C3);
const v30 = v29?.propertyIsEnumerable;
try { new v30(C3); } catch (e) {}
10 >>> 10;
15645 % 15645;
function F40(a42, a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    a42 * a42;
    a44 << a44;
    try {
        this.d = v26;
    } catch(e47) {
    }
}
const v48 = new F40(2, -5.0, 15645);
new F40(10, v48, 10);
new F40(2, 836028.7999128257, 15645);
try { new Uint8ClampedArray(Uint8ClampedArray, 15645, v26); } catch (e) {}
const v53 = Uint8ClampedArray.prototype;
try { v53.at(836028.7999128257); } catch (e) {}
try { v53.at(Uint8ClampedArray, Uint8ClampedArray, v53, Uint8ClampedArray); } catch (e) {}
