let v3 = 0;
while (v3 < 3) {
    Object.defineProperty("string", 3491907367, { writable: true, value: "string" });
    v3++;
}
const t5 = "string";
delete t5[0];
try {
    const t8 = "getInt8";
    t8.length = 0;
} catch(e10) {
}
class C13 {
    set d(a15) {
        const v16 = -1887399528 || "f";
        try { new a15(); } catch (e) {}
        const v18 = "f" === -1887399528;
        try {
            super.n(-2147483649, "getInt8", v18, v16);
        } catch(e20) {
        }
    }
    2604777487;
    static ["getInt8"] = "f";
    0 = 1000;
    static e = "getInt8";
    10;
    #a = "string";
}
new C13();
new C13();
const v23 = new C13();
new Int8Array(3474);
new BigUint64Array(2);
new Int16Array(4);
let v33 = -7;
class C35 {
    constructor(a37, a38) {
        const v39 = this.constructor;
        try { new v39(v39); } catch (e) {}
        this[-2147483648] >>>= v33;
        let v41 = 0;
        while (v41 < 1) {
            const v46 = v33--;
            Math.atan();
            v33 * 7;
            Math.floor();
            const v50 = v46 + 7;
            v50 * v50;
            const v52 = v41++;
            v52 - v52;
        }
    }
}
const v54 = new C35();
const t55 = v54.constructor;
new t55(v54);
function F57(a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = a60;
    } catch(e61) {
    }
    try {
        this.h = 1000;
    } catch(e62) {
    }
    try {
        this.d = v23;
    } catch(e63) {
    }
}
new F57(2, -2147483649);
new F57(v33, 3474);
new F57(0, 2);
