function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = F0;
    } catch(e3) {
    }
    try {
        this.c = 256;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
const v7 = new F0();
function f8(a9) {
    const o14 = {
        "h": F0,
        "f": a9,
        "d": a9,
        __proto__: v7,
        [v6]: f8,
        "e": v5,
        valueOf(a11) {
            try {
                super.toString(this);
            } catch(e13) {
            }
            return this;
        },
    };
    return o14;
}
const v15 = v5(v7);
const v16 = f8(v5);
const v17 = f8(v7);
function f18() {
    return v6;
}
function f19() {
    return v15;
}
function F20(a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a23;
    } catch(e25) {
    }
    try {
        this.e = f8;
    } catch(e26) {
    }
    try {
        this.b = F0;
    } catch(e27) {
    }
}
new F20(v16, v6, v5);
new F20(v16, v7, F20);
new F20(v17, v5, f19);
Object.defineProperty(Uint8ClampedArray, 1, { value: [7.554475698528474] });
new Uint8ClampedArray(Uint8ClampedArray);
