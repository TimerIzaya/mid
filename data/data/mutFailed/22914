const v0 = [1000000000.0,2.0,0.2219224979654375,-3.0,4.8334915186259195,1e-15];
const v1 = [937355.9641529783,0.023617067748840648,-1.3678764484421217e+308,6.502826044729616,-3.0,-0.0,Infinity];
const v2 = [0.2788382121765882,-Infinity];
class C3 {
    static n(a5, a6) {
        super.f = a6;
        v2[Symbol.hasInstance];
        return a6;
    }
    #valueOf(a11) {
        let v12 = 0;
        do {
            v2[618] = v1;
            try {
                v0.valueOf = v1;
            } catch(e13) {
            }
            v12++;
        } while (v12 < 4)
        return this;
    }
}
new C3();
const v18 = new C3();
const v19 = new C3();
function f20(a21, a22) {
    const o38 = {
        ...a22,
        __proto__: a22,
        "e": a22,
        "h": v0,
        "b": C3,
        ...a21,
        [a21](a24, a25, a26, a27) {
            a24 / a25;
            a22.d;
            try {
                const o33 = {
                };
                a26.fuck(o33, a21, [a21,a25,a22,o33,v19], /U\xed\xb0\x80/gvdsy);
            } catch(e37) {
            }
            return a24;
        },
    };
    return o38;
}
const v39 = f20(v0, C3);
const v40 = f20(v39, v39);
const v41 = f20(v40, v18);
async function f44(a45, a46) {
    new Int16Array(112);
    new Int32Array(162);
    new Uint16Array(10);
    await v39;
    return 10;
}
f44(v39, v0);
class C59 {
    static #p(a61, a62, a63) {
        try { v40["valueOf"](v0, v41, v39); } catch (e) {}
        return v2;
    }
    #valueOf(a67, a68) {
        try { a68["asinh"](v2, "asinh", this); } catch (e) {}
        const v71 = f20 instanceof f20;
        for (let v72 = 0; v72 < 32; v72++) {
            let v74;
            try { v74 = new C59(); } catch (e) {}
            let v76 = 2312;
            -v71;
            let v79 = --v76;
            +v74;
            let v81 = ++v79;
            v81 >> -1.2589654467693644e+308;
            v81++;
            a67["p" + v72] = v72;
        }
        return -536870912n;
    }
}
new C59();
new C59();
new C59();
for (let i91 = 0, i92 = 10; i91 < i92; i92--) {
}
class C99 {
    #o(a101, a102) {
        const o106 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o106);
        return o106;
    }
}
function F108(a110, a111, a112) {
    if (!new.target) { throw 'must be called with new'; }
    48979n instanceof C99;
    const v114 = a111 === a111;
    const v115 = v114 ** v114;
    v115 - v115;
}
function f117() {
    for (let v118 = 0; v118 < 5; v118++) {
        new F108(f117, f117, v118);
    }
}
f117();
f117();
%OptimizeFunctionOnNextCall(f117);
f117();
