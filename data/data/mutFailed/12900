const v1 = new WeakSet();
function f2(a3) {
    const o9 = {
        ...a3,
        "b": a3,
        "g": a3,
        p(a5) {
            return v1;
            [2.2250738585072014e-308,Infinity,0.9781824607607672,1000000.0,-1000.0,0.5091809819350668,2.473122602406793,-1000000.0,NaN,5.883227995736558];
            [-159.8355914824001,2.220446049250313e-16,931.0691016697913,-722.0781514910666,0.07329320352654911,331.2150789463394];
            [2.0,-954803.4661335703,-97718.18964085006,4.0,1.0,2.220446049250313e-16,791.9513348498481,1e-15];
            return WeakSet;
        },
        "h": v1,
    };
    return o9;
}
const v10 = f2(v1);
v10.h = v10;
v10.g = v10;
f2(v10);
const v12 = f2(v1);
try { v12.p(WeakSet); } catch (e) {}
let v16 = 1 - 1;
v16--;
-2 >>> -2;
-(-2);
-1n == v12;
const v25 = 4294967297n + 4294967297n;
const v30 = new Float64Array(1);
const v32 = f2?.construct;
try { new v32(Int8Array, -4294967297n); } catch (e) {}
const v35 = v25.construct(Int8Array, [v30]);
v35[0];
v35[0] = v35;
