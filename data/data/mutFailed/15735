const v0 = [];
const v1 = [v0,v0,v0,v0];
const v3 = [[v1,v1,v0]];
v3[0] = v3;
let v6 = new BigUint64Array(129);
const v9 = new Uint16Array(14);
function f10() {
    const o17 = {
        o(a13) {
            const o15 = {
            };
            gc(o15);
            return BigUint64Array;
        },
    };
    return o17["o"]();
}
v9[Symbol.toPrimitive] = f10;
v9[6] = v9;
799 >>> 799;
v6 &= v6;
const v29 = new Float32Array(799);
function f33(a34, a35, a36) {
    function f38(a39) {
        new Uint16Array(a39, a39);
    }
    this.onmessage = f38;
    Object.defineProperty(v29, BigUint64Array, { configurable: true, enumerable: true, set: f38 });
}
function f41() {
    return 2;
    return 2;
}
f33[Symbol.toPrimitive] = f41;
Worker.constructor = Symbol;
const v46 = Worker?.constructor;
try { new v46(f33); } catch (e) {}
const v49 = [-11,"function",14];
const o50 = {
    "arguments": v49,
    "type": "function",
};
o50.arguments;
new Worker(f33, o50);
/a|b((\xed\xa0\x80))\x02foo|(bar|baz)|quux/vds;
/5xyz{1,32}1\p{gc=Nd}+/visy;
9 - 9;
