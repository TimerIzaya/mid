const v2 = new Float64Array(6);
const v4 = [-9.109766292519199,-1.3811947064786667e+308,0.09110445091766706,5.0,-385647.03832885576,0.2888431306471019];
let v5;
try { v5 = v4.filter(59890n); } catch (e) {}
const v7 = /a$\P{Decimal_Number}/gvdims;
function f8(a9, a10) {
    let v11;
    try { v11 = a9(6, a9, v7, a10, v7); } catch (e) {}
    try { new v11(true, v11, v11, v11); } catch (e) {}
    return v11;
}
v7[Symbol.toPrimitive] = f8;
const v15 = v7[v7];
const v16 = v7.source;
let v17;
try { v17 = v15(true, v16, v16, v16); } catch (e) {}
Math.log(v17 + true);
let v21 = 5;
new Int8Array(v21);
const v26 = new Int8Array(1628);
const v27 = [v21,v26];
const v28 = [Int8Array,6,v2];
[Float64Array,v27,v21,Float64Array,v21];
function f30() {
    ("-1723624938").slice(9, "g");
    const v35 = v15.normalize();
    class C38 {
        constructor(a40, a41) {
            a41.sup(v35, "-1723624938").toLocaleLowerCase();
        }
    }
    new C38(9, "maxByteLength");
    return v28;
}
function f46() {
}
const v48 = new v5(Uint16Array);
function f50() {
    const o56 = {
        "e": Uint16Array,
        __proto__: 3.4890473589784586e+307,
        "g": 12,
        o(a55) {
            return v48;
        },
        ...1000000000000.0,
    };
    return Int32Array;
}
f50();
do {
    const o64 = {
    };
    o64.type = v27;
    gc(o64);
    const o72 = {
        n(a68, a69) {
            Math.ceil(64n);
            return 6;
        },
    };
    v21++;
} while (0 < 5, true)
