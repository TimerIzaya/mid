const v4 = new WeakMap();
class C5 {
    constructor(a7) {
        new Date();
    }
    m(a11) {
        this.g *= 0;
        [this];
        [this,0];
        [this];
        new BigUint64Array();
        ("D")[0].match();
        try {
            super.sort();
        } catch(e21) {
        }
        return 43002892;
    }
}
new C5(v4);
try {
    const t21 = null;
    t21.valueOf = v4;
} catch(e24) {
    e24.stack;
}
new C5(0);
new C5(C5);
new Date();
[0.9224645824359266,-618521.6986551229,3.0,-1.7976931348623157e+308,626415.9107558681,1.747184102079606,856479.999123123,-4.0];
[3.0,-5.0,608537.8410633693,6.23837941038493,-97396.8482209146,1.7090998589039437e+308,-1000000.0];
const v32 = [893011.0188507575,-7.347146561637789,8.345496483850443,-771570.9791720371,-1000000.0,0.3427979177430851,Infinity,-282.2844979537613];
for (let v33 = 0; v33 < 25; v33++) {
    WeakMap["p" + 43002892] = 43002892;
}
new Map();
const v40 = new Float32Array(9);
v40.fill();
function f42(a43, a44, a45, a46) {
    const v47 = a44 >>> a44;
    v47 >>> v47;
    const v50 = new Int8Array();
    v50.entries();
    v32.next();
    function f53(a54, a55) {
        a54.arguments = a54;
        return f53;
    }
    const v56 = f53(f53);
    class C58 extends Date {
    }
    const v59 = new C58();
    v59.getDay();
    return v56;
}
for (let v61 = 0; v61 < 10; v61++) {
    f42(9, v61, v61, 9);
}
%OptimizeFunctionOnNextCall(f42);
f42(9, Float32Array, v40, f42);
