class C3 {
    f;
    #a;
    [1];
    constructor(a5, a6) {
        Object.defineProperty(this, 127, { value: this });
        const v10 = [a5,"2",a5];
        ["2",v10,this,v10,"2","2"];
        ["length"];
    }
    static #d = "2";
}
new C3(C3, 1, 1);
const v14 = new C3(33543, 33543);
new C3(v14, 1);
function f16() {
    return 33543;
}
function f18() {
    return f18;
}
const o20 = {
    [f18]() {
    },
};
new WeakSet();
class C22 extends WeakSet {
    static set h(a24) {
        let {"b":v25,"c":v26,} = "2";
        super.f;
        try {
            v25();
        } catch(e29) {
        }
    }
    valueOf(a31, a32) {
        const v33 = f16 / v14;
        Symbol.isConcatSpreadable;
        for (let v36 = 0; v36 < 5; v36++) {
            f16();
        }
        return super[v33];
    }
}
new C22();
new C22();
new C22(WeakSet);
%VerifyType(Infinity());
try {
    function f44(a45, a46, a47) {
        for (let i = 0; i < 5; i++) {
            /k/gdsy;
        }
        f44();
    }
    f44(f44, f44, f44);
} catch(e51) {
}
