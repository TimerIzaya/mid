function f3(a4, a5) {
    a5 ^ a5;
    const o13 = {
        __proto__: 4n,
        [a5]: a4,
        "f": 536870912n,
        toString(a8, a9) {
            return -1e-15;
        },
        "c": -7n,
        "g": 536870912n,
        [-1]: 4n,
        "b": -7n,
        "a": 4n,
    };
    o13[4] = o13;
    return o13;
}
f3(536870912n, 4n);
const v15 = f3(4n, 4n);
v15.g = v15;
const v16 = f3(536870912n, -7n);
function f17() {
    return v15;
}
~3959;
const v21 = new Int32Array(3959);
try { new Uint16Array(4n, 4n, v21); } catch (e) {}
const v25 = new Uint16Array(2);
42 >> 42;
const v29 = new BigUint64Array(42);
v29[41] = v29;
const v32 = new Uint8ClampedArray();
try { new Int16Array(v16, v25, Uint8ClampedArray); } catch (e) {}
const v35 = new Int16Array();
const v37 = new Float32Array();
for (let v38 = 0; v38 < 25; v38++) {
    Float32Array[6] = v32;
    v37[v38];
}
v35.length -= 857;
