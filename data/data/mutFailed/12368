new Int8Array(260);
new Float32Array(4096);
new BigInt64Array(52);
new Uint8Array(78);
new Uint8Array(1);
new Float64Array(64);
function F22(a24) {
    if (!new.target) { throw 'must be called with new'; }
    new.target.d = new.target;
}
const v40 = [601759695];
const v41 = [1073741824,1073741823,1376142744,1073741825];
function f44(a45, a46, a47, a48) {
    function f50() {
        return v41;
    }
    a45.d = 1163987790;
    -9223372036854775808n & -2147483647n;
    new Int8Array();
    const v62 = a46.buffer;
    class C65 {
        static {
            for (const v67 of "-4294967295") {
            }
        }
    }
    v62.slice();
    %OptimizeFunctionOnNextCall(f50);
    let v70;
    try { v70 = v41["find"](..."find", a48, ...v40); } catch (e) {}
    v70 > a47;
    return arguments;
}
for (let v72 = 0; v72 < 10; v72++) {
    f44(-25283n, 522675525n, -1553n, v72);
}
%OptimizeFunctionOnNextCall(f44);
f44(null, -256, -9223372036854775808n, "B");
