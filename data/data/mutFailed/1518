function f0() {
}
let v3 = -13;
v3++;
const v5 = [2147483647,2147483647,v3,f0,2147483647];
const v6 = [v5,v5];
const v7 = [f0,v3];
function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    this.f = v6;
    try { a10.reduceRight(a10); } catch (e) {}
    a11 >>> a11;
    try {
        this.b = v3;
    } catch(e14) {
    }
    try {
        this.d = a10;
    } catch(e15) {
    }
    try {
        this.f = v6;
    } catch(e16) {
    }
}
new F8(v5, 2147483647);
const v18 = new F8(v6, 2147483647);
function f19(a20, a21) {
    new Uint16Array(16);
    new Uint32Array(1024);
    new Int32Array(129);
    return a20;
}
v18.constructor = f19;
v18.g = v18;
v18.g = v18;
new F8(v7, 2147483647);
1073741823 - 1073741823;
-1619293004 << -1619293004;
Map.d = v6;
Map.d = Map;
const v38 = new Map();
function f39() {
    return Int32Array;
}
v38.constructor = f39;
const v41 = v38.constructor;
v41.arguments = v41;
const v42 = v41();
v42.constructor = f39;
const o43 = {
    __proto__: v42,
};
function f44() {
    function f45(a46) {
        Object.defineProperty(v38, o43, { writable: true, value: 1073741823 });
        const v49 = new Uint32Array(4);
        return v49;
    }
    return f45;
}
Object.defineProperty(o43, "constructor", { writable: true, configurable: true, enumerable: true, get: f44 });
function F51(a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
    const v55 = o43.constructor;
    try { v55.call(a54); } catch (e) {}
    try { v55(268435440n, a54); } catch (e) {}
}
const v58 = new F51(Map, 268435440n);
function f59() {
    const v62 = v18.constructor;
    let v63;
    try { v63 = new v62(268435440n, d); } catch (e) {}
    return v63;
}
v58.constructor = f59;
const v64 = v58?.constructor;
try { new v64(v41, v38); } catch (e) {}
