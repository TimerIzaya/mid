class C3 {
    e = 1.263848426042065;
}
const v4 = new C3();
function F5(a7, a8) {
    if (!new.target) { throw 'must be called with new'; }
    a7.e;
    Number.isFinite();
    function F12(a14, a15, a16) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.a = a15;
        } catch(e17) {
        }
        try {
            this.h = Number;
        } catch(e18) {
        }
        try {
            this.c = a16;
        } catch(e19) {
        }
    }
    new F12(a8, 1.263848426042065, C3);
    const v21 = new F12(F5, a7, v4);
    new F12(v4, v21, v4);
    const v23 = this.constructor;
    try { new v23(v4); } catch (e) {}
}
new BigUint64Array(2179);
new Int16Array(0);
new Uint8ClampedArray(3637);
new Float64Array(3614);
new Float32Array(1);
function f40() {
    Int8Array.b = Int8Array;
    Int8Array.b = Int8Array;
    class C42 {
    }
    const v43 = new C42();
    try {
        v43.f = v43;
    } catch(e44) {
    }
    ~3281;
    return v43;
}
const v46 = f40();
new Float64Array(3281);
function f48() {
    new Float32Array(64);
    const o57 = {
        o(a53) {
            const o55 = {
            };
            return gc(o55);
        },
    };
    return f48;
}
function f58(a59) {
    return v46;
}
f48[Symbol.iterator] = f58;
const v66 = new Uint16Array(f48);
v66.constructor = f40;
v66["filter"](f48);
