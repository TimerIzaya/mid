const v0 = [Infinity,-1.0,334.9707523876036,1.7976931348623157e+308,-Infinity,9.222971090967075,5.837116397818294,-1.9364306250449163e+307];
[Infinity];
const v2 = [-686672.7285304164,-9.917362466302309e+307,2.220446049250313e-16,5.0,-795.7616940433296,0.07678289127045357,-2.2250738585072014e-308,-1.1183285484106199e+308];
function f3(a4) {
    const o15 = {
        268435456: v0,
        0: v2,
        "c": f3,
        "g": f3,
        "e": f3,
        "d": a4,
        "h": a4,
        [a4](a6, a7) {
            const o10 = {
                "maxByteLength": 268435439,
            };
            const v12 = new ArrayBuffer(1597, o10);
            new Int32Array(v12);
            return a4;
        },
        ...a4,
        __proto__: v0,
        "b": f3,
        "a": a4,
        "f": f3,
    };
    function f16(a17, a18, a19) {
        function f21(a22) {
            this.c;
        }
        this.onmessage = f21;
        this[a4] += a4;
    }
    [f3,v2,a4];
    const o27 = {
        "arguments": v2,
        "type": "function",
    };
    new Worker(f16, o27);
    return o15;
}
const v29 = f3(v0);
f3(v29);
f3(v2);
for (let [v36,...v37] of f3) {
}
const o42 = {
    o(a39) {
        gc();
        return this;
    },
};
new v29();
const v47 = new Float64Array(Float64Array, Float64Array, Float64Array);
const v49 = new BigUint64Array();
const o58 = {
    toString(a51, a52) {
        const v53 = ~a52;
        const v54 = this.__lookupGetter__;
        try { new v54(v47); } catch (e) {}
        const v56 = a52 + a52;
        v56 >>> v56;
        v49[3408] = this;
        return v53;
    },
};
o42["o"]();
