function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.b = this;
    try {
        this.e = 4;
    } catch(e3) {
    }
    try {
        this.a = 4;
    } catch(e4) {
    }
}
new F0();
const v6 = new F0();
const v7 = new F0();
v7.b = v6;
v7.b = v7;
Float32Array.name;
new Float32Array(256);
Float32Array.name;
new Float32Array(257);
new BigUint64Array(256);
const v20 = new Map();
~-2147483647;
let v24 = 24560;
v24--;
let v29 = undefined;
const o37 = {
    ...v20,
    ...v20,
    __proto__: v20,
    [v24](a31, a32, a33) {
        super[591114.0785999324];
        v29 = Map;
    },
};
const v38 = o37?.keys;
try { new v38(); } catch (e) {}
v29 = o37;
[v20];
function F42() {
    if (!new.target) { throw 'must be called with new'; }
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    const v47 = new Date();
    try { v47.getMinutes(); } catch (e) {}
    const o50 = {
    };
    o50.e = 19793;
    const v52 = Array(19793);
    for (const v53 of v52) {
    }
    const v54 = [v52,v52,v52,v52,v52];
    v54[3] = v54;
    BigUint64Array.name = BigUint64Array;
    new BigUint64Array();
    [];
    for (let v59 = 0; v59 < 50; v59++) {
    }
    const v60 = [v54,v54,v54];
    function f61(a62) {
        Date(-1000000000000.0);
        %PrepareFunctionForOptimization(Date);
        Date(-1000000000000.0);
        Date(-1000000000000.0);
        %OptimizeFunctionOnNextCall(Date);
        Date(-1000000000000.0);
        return Float32Array;
    }
    v60.toString = f61;
    const v67 = [v60];
    v67[0];
    !(v67 >= Uint16Array);
}
const v72 = new F42();
const v73 = v72?.constructor;
try { new v73(); } catch (e) {}
new F42();
