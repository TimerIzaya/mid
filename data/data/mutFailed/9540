/^xxx$?/gudi;
/a+b/vd;
/([\ca]*)/udy;
function F6(a8) {
    if (!new.target) { throw 'must be called with new'; }
}
class C9 extends F6 {
    valueOf(a11, a12, a13, a14) {
    }
}
function f16() {
    const o17 = {
    };
    return o17;
}
function f19(a20, a21) {
    const o27 = {
        valueOf(a23, a24) {
            ([]).group(f19);
            return a21;
        },
    };
    return o27;
}
new Array(10);
class C29 extends Array {
    #p(a31, a32, a33) {
        try { a32.test(-16); } catch (e) {}
        ++a31;
        let {...v40} = [];
        function f41() {
            const o44 = {
            };
            return v40;
        }
        f41();
        const o46 = {
            "execution": "sync",
            "type": "major",
        };
        for (let v47 = 0; v47 < 10; v47++) {
            const v49 = new Int8Array();
            try { v49.find(); } catch (e) {}
            for (const v54 of Array()) {
            }
            /nfoo|(bar|baz)|quux[a.a\qVk[\cZ]]/di;
        }
        return gc(o46);
    }
}
new C29();
new C29();
new C29();
([-8n]).toLocaleString();
