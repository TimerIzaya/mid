class C3 {
    get a() {
        for (let v5 = 0; v5 < 21; v5++) {
        }
        try { this["filter"]("filter"); } catch (e) {}
        return this;
    }
    static {
        new C3();
    }
    3825183078 = "NaN";
}
const v14 = new C3();
const v15 = new C3();
const v16 = new C3();
function F20(a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = v16;
    } catch(e25) {
    }
}
let v26 = new F20(v16, -175477367n, 1442662807n);
new F20(v15, 1024n, 1442662807n);
const v28 = new F20(v14, -175477367n, -175477367n);
class C29 extends C3 {
    [1024n] = "NaN";
    static get f() {
        super.b = v16;
        Reflect.construct(C3, [], C3);
        return -5.740444654920427;
    }
    valueOf(a35, a36, a37) {
        v15[6];
        super[a35] = a36;
        v26 = v28;
        v16.a;
        a35.a instanceof C3;
        return -175477367n;
    }
}
const v42 = new C29();
new C29();
const t43 = "NaN";
new t43();
let v45 = 116;
v45--;
new Float32Array(v45);
class C50 extends Float64Array {
    get e() {
    }
}
new C50();
new C50();
new v42();
let v57 = 0;
v57 >>> v57;
do {
    const o60 = {
    };
    o60.c = o60;
    gc();
    v57++;
} while (v57 < 5)
