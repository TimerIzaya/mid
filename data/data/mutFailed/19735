const v0 = /[^123][\c!]/giy;
const v1 = /X58[x\dz]a\w/gdms;
const v2 = /V(x)(x)(x)\2/gdisy;
const v5 = new Uint8ClampedArray(128);
function f6() {
    function f7() {
        return f7;
    }
    return f7;
}
v5[Symbol.toPrimitive] = f6;
new Float32Array(246);
const v15 = new Uint16Array(29);
function f16(a17, a18, a19, a20) {
    const o31 = {
        ...v15,
        toString(a22, a23, a24) {
            246 ** Uint8ClampedArray;
            Reflect.construct(Float32Array, [Reflect], Uint16Array);
            a18["test"]("test");
            return "test";
        },
        [v5]: v1,
        "e": a19,
        "g": a20,
    };
    return o31;
}
f16(246, v2, v1, 29);
f16(128, v2, v2, 128);
f16(29, v0, v0, 246);
function F35() {
    if (!new.target) { throw 'must be called with new'; }
}
const v37 = new F35();
function F38(a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
}
const v42 = new F38();
v42[Symbol.toPrimitive] = f16;
const v47 = [];
function F49() {
    if (!new.target) { throw 'must be called with new'; }
    this.toString(this, F49, F49, this);
    Date.toString(F49, 9223372036854775807).replaceAll(v37, -37859n);
    const v57 = new Uint32Array(Uint32Array, Uint32Array, 4);
    const v60 = new Set(v47);
    const v61 = v60.add;
    try { new v61(v57); } catch (e) {}
    const v64 = v60["delete"](839612.5677247904);
    const v65 = v64 || v64;
    v65 || v65;
    const v67 = v65 && v65;
    const o69 = {
    };
    o69.b = o69;
    o69.b = o69;
    o69.e = 19793;
    try { new Array(9223372036854775807); } catch (e) {}
    let v73;
    try { v73 = ("getPrototypeOf").blink(); } catch (e) {}
    v73[28].strike();
    const v76 = v73.strike(591114.0785999324);
    let v77;
    try { v77 = v76.replace(19793, v42); } catch (e) {}
    v77[11] = v77;
    class C79 {
        ["getPrototypeOf"] = -1.7976931348623157e+308;
    }
    class C80 extends C79 {
        ["getPrototypeOf"] = C79;
    }
    try { new C80(); } catch (e) {}
    let v82;
    try { v82 = new C80(); } catch (e) {}
    v82.getPrototypeOf;
    let v84;
    try { v84 = new C80(); } catch (e) {}
    const v85 = v84?.getPrototypeOf;
    try { new v85(); } catch (e) {}
    const v87 = new C80();
    const v88 = v87.getPrototypeOf;
    try { v88(v82); } catch (e) {}
    let v90;
    try { v90 = new v88(); } catch (e) {}
    try { v90.propertyIsEnumerable(v77); } catch (e) {}
    const v92 = v90?.constructor;
    let v93;
    try { v93 = new v92(v73, this, 4); } catch (e) {}
    try { v93.constructor(); } catch (e) {}
    const v95 = v87.constructor;
    let v96;
    try { v96 = new v95(F49, v67); } catch (e) {}
    const v97 = v96?.getPrototypeOf;
    v97?.apply;
    try { new v97(); } catch (e) {}
    for (const v101 of Array(19793)) {
    }
}
new F49();
const v103 = new F49();
v103.constructor = Symbol;
v103.constructor;
const t102 = v103.constructor;
new t102();
