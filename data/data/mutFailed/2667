10000n ^ 10000n;
class C7 {
    static #h = -65535n;
    static #a;
    static #g;
    static 4;
    static #b;
    static [-5n];
    e;
    7;
    #o(a9, a10, a11) {
        [4294967297,512,2147483649,257,65536,536870889,-9007199254740992,5,127,-14];
        [128,9223372036854775807];
        [9007199254740991,-504003394,1073741823,-24947,-9223372036854775808,-1,58793,-13,528536219,11714];
        try {
            this.g = this;
        } catch(e15) {
        }
        return 4294967297n;
    }
    static #b;
}
new C7();
const v17 = new C7();
const v18 = v17?.constructor;
try { new v18(); } catch (e) {}
const v20 = new C7();
const v21 = v20?.constructor;
try { new v21(); } catch (e) {}
let v23 = 11;
const v24 = v23--;
3 != 3;
const v31 = [-13063,230037640,0,-1717935321,257,0,1073741825];
const v32 = [-2051630605,509562611];
let v33 = 0;
while (v33 < 7) {
    try {
        v32.length = v24;
    } catch(e36) {
    }
    v33++;
}
v32.g = v32;
v17[203344506] = -5n;
new Int16Array(138);
new Uint16Array(2);
new Uint32Array(15);
class C47 {
    0 = v32;
}
const v48 = new C47();
v48[0] = v48;
const v50 = new Float32Array(v31);
try { v32.sort(v50); } catch (e) {}
Object.defineProperty(v48, 7, { configurable: true, value: v31 });
