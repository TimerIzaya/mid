const v0 = [-5.0,1.2436773797697744e+308,6.746762605267655,0.3251929711328124];
const v1 = [-3.99310372517977e+307,-1.7976931348623157e+308,512873.40780161927,1000.0,2.2250738585072014e-308,-221798.39204447367,-1000000.0,1000000000000.0];
const v2 = [0.9388673253551432,-8.603814299679836,5.948536974213548,-3.124027526851533e+307,-325.9029986737862,-2.2250738585072014e-308];
v0[128];
const v6 = v0[65535];
const o11 = {
    "maxByteLength": 3280125241,
};
const v13 = new ArrayBuffer(23, o11);
new Int16Array(v13);
v6 * 1000;
Math.cos(v2);
v6 >>> v6;
[-17992,v2];
[-48198,11582404,11582404,11582404,v1];
[128];
new Array(2);
class C29 {
}
const v32 = new Int8Array(C29, Int8Array, Int8Array);
v32.reverse();
const v34 = v32.buffer;
for (let i38 = (() => {
        const v35 = v32[4];
        v35[9] = 268435441;
        Object.defineProperty(v35, Math, { writable: true, configurable: true, get: Array, set: Array });
        v1[Math] >>= 1000;
        return 0;
    })();
    i38 < 1;
    i38++) {
}
try { v34.slice(C29, 522675525n); } catch (e) {}
