new Set();
[-10,-9007199254740991,-920980841,-9,-14,16];
[16,4294967297,-16];
[5,-536870912,5,257,15,12518,-43408,-9223372036854775808];
[104762.14753807266,-279097.1642774454,5.0,1.0];
const v12 = [2.220446049250313e-16,0.4676436969349189,1.5179111745363469e+308,-1000.0,-2.220446049250313e-16,-1000000000000.0,4.0,4.587029279807309,-0.0];
const v17 = new Uint8Array(22);
const v20 = new Int32Array(3289);
const v22 = [v20];
const v23 = v22.join;
Reflect.apply(v23, v17, v22);
class C25 extends v23 {
    [Set] = true;
    [v12];
}
new Set();
const v2 = new Float64Array(145);
let v4;
try { v4 = new Float64Array(145, ...145, ...v2, 237, 145, Float64Array); } catch (e) {}
const v7 = new Math(3);
new Uint8Array(257);
new BigInt64Array(8);
new Int32Array(237);
let v19;
try { v19 = v7.lastIndexOf(7, 145, v7); } catch (e) {}
class C20 {
}
new Date();
const v23 = new Float64Array(1, v19, Float64Array);
function F24(a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = this;
    try {
        this.byteLength = 237;
    } catch(e28) {
    }
    try {
        this.d = v2;
    } catch(e29) {
    }
    function f30() {
        const o35 = {
            valueOf(a34) {
                return f30;
            },
            __proto__: f30,
            [-52276]: -410.8373818683839,
        };
        return o35;
    }
    const o36 = {
        ...v4,
        __proto__: v23,
        ...this,
    };
    function f38() {
        return "p";
    }
    Array(3);
}
new F24(237, 237);
new F24(1, 1);
new F24(1, 1);
[-2];
[1444506438,9007199254740991,-46124];
const t47 = /(?:ab)(?:a?)?/mgiu;
t47.valueOf = -2;
