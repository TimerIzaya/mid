function f0() {
    const o8 = {
        set d(a5) {
            ~4;
            try {
                a5.h = this;
            } catch(e7) {
            }
        },
        __proto__: "f",
        ..."f",
        "g": 4,
        "a": "f",
        [4]: 4,
        ..."f",
        6: 4,
        "f": "f",
    };
    return o8;
}
f0();
f0();
f0();
function f12() {
    return f0;
}
[-328855320,-3,2,2,154023101,10,-65535,-2,1000];
[-1073741824,1148946304,13,-1600534738,-233632509,-8,47726,-15,8];
[-2038453358,129,1,-1554619444,256,4294967295,536870912,43680];
/[\0](?<!a)/gvims;
/Wj9/gui;
/[^123]e/vsy;
const v28 = new Uint32Array();
Object.defineProperty(v28, "constructor", { writable: true, configurable: true, enumerable: true, value: Symbol });
let v29 = -4294967297n;
const v30 = v29--;
function f31(a32, a33, a34, a35) {
    const v36 = a32.__proto__;
    try {
    const t0 = -830831045;
    t0();
    } catch (e) {}
    function f38() {
        return f38;
    }
    a32.constructor = f38;
    const t46 = a32?.constructor;
    const v40 = t46();
    const o48 = {
        [v29](a42, a43, a44, a45) {
            eval();
        },
    };
    new Array(v40);
    const v52 = new Int8Array();
    const v54 = v52.buffer.slice(v36, v40);
    try { v54.slice(v30); } catch (e) {}
    return f38;
}
for (let v56 = 0; v56 < 10; v56++) {
    f31(v28, v29, v28, v56);
}
%OptimizeFunctionOnNextCall(f31);
f31(5);
