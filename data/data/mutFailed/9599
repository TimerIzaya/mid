const v2 = new Float32Array(163);
class C5 {
    static #o(a7, a8) {
    }
}
const v9 = new C5();
v9.constructor;
const v11 = new BigInt64Array(167);
const v14 = new Uint8Array();
function f15(a16, a17, a18, a19) {
    const v20 = a18 ^ a18;
    const o24 = {
        "b": a16,
        "c": a19,
        ...v14,
        n(a22, a23) {
            return v20;
        },
    };
    return v20;
}
new Uint8ClampedArray(4);
new Int32Array();
const o29 = {
};
new BigInt64Array(2001);
const v32 = [-8.046012156146725e+306,-155341.56338130776,1000000000000.0];
const v33 = [-1e-15,3.0,2.0];
const v34 = [-2.0,-Infinity,-959.3478988930655,NaN,154075.64665685943,0.947659516524693,-1.1436342077503824e+308];
class C35 extends BigInt64Array {
    constructor(a37, a38, a39, a40) {
        super(4, 163);
        throw Float32Array;
        v2 << v34;
        new Uint8Array(48);
        new Int32Array(8);
        new Float64Array(257);
    }
}
const v51 = new C35(v33, v11, 163, v34);
new C35(v33, v51, 163, v32);
new C35(v33, 163, 167, v34);
Math.asinh();
Math.sin(3.862600614459211e+307);
