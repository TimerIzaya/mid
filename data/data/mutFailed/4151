const v4 = [-Infinity,-608.1248641197274,1.7148482472770025e+308,-Infinity];
try { v4.copyWithin(11n, true); } catch (e) {}
const v6 = [89.09019868939504,248.3632769398148,Infinity,0.7516022777528613,8.7874375469469,239.7521322672112,1.0,-4.0,-2.2250738585072014e-308];
const v7 = v6[7];
v7 << v7;
const v9 = v6[7];
v9 >>> v9;
const v11 = [274928.6170416954,-1e-15,0.0,1000000000.0];
try { v11.lastIndexOf(v9); } catch (e) {}
class C13 {
    static m(a15, a16, a17) {
        const v22 = 15542137 - a17;
        v22 - v22;
        ~a17;
        11n & 0.7838515390533698;
        --a16;
        return 2147483649;
    }
    #g = true;
    static #c = v4;
    2587;
    h = 536870889n;
}
try { C13.m(536870889n, 54738n, v7); } catch (e) {}
try { C13.m(v4, C13, v4); } catch (e) {}
const v29 = new C13();
v29[2587];
v29[2587] = v29;
const v31 = new C13();
v31.h = v31;
const v32 = new C13();
v32[2587];
v32[2587] = v31;
256 != 256;
try { BigUint64Array(536870889n, BigUint64Array, v9); } catch (e) {}
const v38 = new BigUint64Array(256);
try { v38.values(); } catch (e) {}
3 | 3;
const v42 = v29 - 3;
v42 * v42;
const v45 = BigUint64Array.name;
try { v45.split(v11, v6); } catch (e) {}
const v47 = new BigUint64Array(3);
v47[2] = v47;
try { new Int16Array(BigUint64Array, Int16Array, BigUint64Array); } catch (e) {}
new Int16Array(127);
("puWUt")[3];
class C56 {
}
C56.length;
C56.length;
class C59 extends C56 {
    m(a61, a62, a63) {
        for (let [v64,v65] of "puWUt") {
        }
    }
}
try { C59.call(v42); } catch (e) {}
C59.prototype = C59;
