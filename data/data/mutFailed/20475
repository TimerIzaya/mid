const v0 = [34177,48506,-256,127,3,65537,-34207,-1024,-2];
const v1 = [-14,-7,3,7,3,-65537,34305,1730265955,1073741823];
[1200139104];
const v3 = [0.3667904168427565,-218.54794150897328,-694.7607799048369,-2.220446049250313e-16,-1000000.0,-0.0];
const v4 = [253.6494715094609,1.7976931348623157e+308,1000000000.0,0.0,-573.8056275749606,0.1531848258317703,-2.2250738585072014e-308];
const v5 = [-948.9339898018951,-2.220446049250313e-16,-1.0,-1.0];
function F9(a11, a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 4294967297n;
    } catch(e15) {
    }
    try {
        this.c = a14;
    } catch(e16) {
    }
    try {
        this.h = v4;
    } catch(e17) {
    }
}
const v18 = new F9(v1, -13n, v4, -13n);
const o21 = {
    "maxByteLength": 268435439,
};
const v23 = new SharedArrayBuffer(129, o21);
const v25 = new BigUint64Array(v23);
new F9(F9, 4294967297n, v18, 4n);
new F9(v4, 4n, v5, 4n);
class C29 {
    141 = "9007199254740991";
}
new C29();
new C29();
new C29();
try {
const t0 = -13n;
t0(v3, v0, v25);
} catch (e) {}
Math.atanh(1617);
!4.648129933446143;
Math.atanh(-536870912);
Math.log1p(F9);
1617 << -536870912;
new BigInt64Array();
function f50() {
    const v54 = -65535 / -65535;
    const o101 = {
        ...352326470,
        m(a56) {
            a56.c = a56;
            a56.h = a56;
            const o57 = {
            };
            o57.d = o57;
            o57.h = o57;
            function f58(a59, a60, a61) {
            }
            f58.bind();
            f58.caller = f58;
            try {
                o57.e = -65535;
            } catch(e63) {
                const v67 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v67, o57);
            }
            const o69 = {
            };
            o69.g = o69;
            o69.e = 1261703539;
            let v71;
            try { v71 = Math.expm1(128); } catch (e) {}
            v71--;
            const v74 = -9007199254740991 >> -9007199254740991;
            v74 - v74;
            -Math.sin(-9007199254740991);
            try { ("EV").link(v54); } catch (e) {}
            0 != 0;
            class C82 {
                o(a84, a85, a86, a87) {
                    class C88 {
                    }
                }
            }
            C82.name = C82;
            new C82();
            const v92 = new Int8Array(3938);
            let v93 = 3;
            const v94 = v93++;
            v94 + v94;
            const v97 = 0 >> 0;
            const v98 = v97 - v97;
            v98 / v98;
            [...v93] = v92;
            const o100 = {
            };
            o100.c = o100;
            return this;
        },
    };
    let v102;
    try { v102 = o101.m(o101); } catch (e) {}
    v102.m(128);
    class C105 {
    }
    new Float32Array();
}
f50();
