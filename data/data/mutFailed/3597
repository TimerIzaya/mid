let v1 = Uint16Array;
let v2 = new v1(10);
[v1,v2] = v2;
const v3 = v1?.d;
const v7 = Math.sin(536870889);
Math.abs(v1);
Math.min(v1);
v3 ^ 536870889;
const v11 = -v3;
let v15 = -8.280565779793089e+307;
v15 = v7;
new Uint8Array(Uint8Array);
new Uint8ClampedArray(0);
new Uint8ClampedArray(256);
new Float32Array(256);
new Uint8Array(2);
const v35 = new Int8Array(180);
const v37 = v35.byteOffset;
const o44 = {
    "execution": "async",
    "type": "minor",
};
gc(o44);
class C50 {
    n(a52, a53) {
        super[-8n] = this;
        const o56 = {
            "maxByteLength": 47,
        };
        SharedArrayBuffer(3, o56);
        new Int8Array();
    }
}
try { Map.bind(Map, v11, Map, Map); } catch (e) {}
new Int32Array(1024);
for (const v68 of 2147483649n) {
    const o71 = {
        "maxByteLength": 1293466293,
    };
    new SharedArrayBuffer(1796, o71);
}
v35[v37] = 5;
