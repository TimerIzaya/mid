const v0 = [];
const v1 = [-65536,-37258,7,1150383913,1249979106,1128086379,4096,14,-604745739];
const v2 = [256,-24970,9007199254740991,-536870912,1073741824,-31968,2147483649,-9007199254740992,0,4096];
[9007199254740991,-1073741824,-1893183875,-2,392722854,-431346731,-21378,4294967296,4294967295];
class C7 {
    constructor(a9, a10, a11, a12) {
        this[1276125173] = v2.every(this, this, a12, a12, a9, ...v2);
        super.f;
        let v18 = 4.61636394404693e+307;
        const v19 = --v18;
        const v20 = !-8;
        Math.exp(v19);
        Math.cos(v20);
    }
}
new C7(-4096, -4096, -4096, -4096);
const v24 = new C7(-4096, -4096, -65537, -4096);
try {
    new C7(true, v0, -256n, -256n);
} catch(e28) {
}
new C7(-65535, -65535, -65535, -65535);
const v30 = /(?<a>.)\k<a>?/vdimsy;
let v31;
try { v31 = v30(); } catch (e) {}
const v32 = [v31,v31,v31];
function f33() {
    const v34 = -v32;
    function f35(a36, a37, a38, a39) {
        let v40;
        try { v40 = v31(); } catch (e) {}
        try { v30.compile(v40); } catch (e) {}
        return v34;
    }
    f35(v24, C7, v1, v0);
    const t34 = v34 && v32;
    t34[v34] &= v31;
    return v30;
}
%PrepareFunctionForOptimization(f33);
f33();
const o45 = {
};
try {
    o45.d = v24;
} catch(e46) {
}
try {
    const o47 = {
    };
    o47.d = v24;
    o47.b = v30;
} catch(e48) {
}
try {
    const o49 = {
    };
    o49.d = v24;
    o49.b = v30;
    o49.a = -65535;
} catch(e50) {
}
try {
    const o51 = {
    };
    o51.d = v24;
    o51.b = v30;
    o51.a = f33;
} catch(e52) {
}
%OptimizeFunctionOnNextCall(f33);
f33();
