function f0() {
    const o9 = {
        [-2]: 429.90034011864213,
        "a": -1000000.0,
        __proto__: "NEGATIVE_INFINITY",
        [429.90034011864213]: -1000000.0,
        "h": "NEGATIVE_INFINITY",
        ["NEGATIVE_INFINITY"]: f0,
        "d": -1000000.0,
        get g() {
            let v5;
            try { v5 = this.random(-1000000.0, this, this, -1000000.0); } catch (e) {}
            [0.7090249100993226,476252.8750221059,-127.15571477455967,1.0,-5.703109072521673,0.8063576123600882,-988358.4692777041];
            [-1000.0,1.5218331009401784e+308,0.8147819391927709,-527.5593693338215];
            [-3.0,4.0];
            return v5;
        },
    };
    function f10(a11, a12) {
        Object.defineProperty(o9, a11, { configurable: true, enumerable: true, set: f0 });
        ("NEGATIVE_INFINITY").__proto__;
        return f0;
    }
    o9.valueOf = f10;
    o9.h = o9;
    return o9;
}
const v14 = f0();
const v15 = f0();
const v16 = f0();
[-65535,127,-4294967297,-794486271,128,20907,-3,2147483649];
const v18 = [-1406361962,20931,512,1840157088];
const v19 = [16];
v19[0];
function f21(a22, a23, a24, a25) {
    a24.h = a24;
    a25.d = a25;
    const o31 = {
        "c": v14,
        [a23]: a23,
        3775181929: v19,
        [v18]: a24,
        set a(a27) {
            v19.length;
            Object.defineProperty(super.a, Uint8Array, { configurable: true, enumerable: true, get: f0, set: f0 });
        },
        1073741824: v16,
        __proto__: a25,
        10: v18,
        "e": a22,
    };
    o31.toString = f0;
    return o31;
}
f21[Symbol.toPrimitive] = f21;
const v34 = f21(v19, f21, v16, v15);
v34[Symbol.toPrimitive] = Symbol;
const v37 = f21(v19, v19, v14, v16);
const v38 = f21(v19, v16, v14, v16);
function F39(a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    function f44() {
        return a42;
    }
    function f45(a46) {
        for (let v47 = 0; v47 < 5; v47++) {
            const t66 = "9007199254740992";
            t66["255"] &= 7;
            for (const v51 in "9007199254740992") {
            }
        }
    }
    Object.defineProperty(this, "f", { configurable: true, enumerable: true, get: f44, set: f45 });
    a42[Symbol.toPrimitive] = f21;
    const v54 = this?.__defineGetter__;
    try { new v54(f0, a43); } catch (e) {}
    const v56 = v38?.__lookupSetter__;
    try { new v56(a42); } catch (e) {}
    a43[3775181929];
    try {
        this.f = v18;
    } catch(e59) {
    }
}
const v60 = new F39(v37, v14, v38);
new F39(v38, v15, v38);
new F39(v38, v14, v38);
try { ("get").italics(); } catch (e) {}
let v67;
try { v67 = ("get").toString(); } catch (e) {}
try { v67.padEnd(v34); } catch (e) {}
const v69 = ("get")[2];
const v70 = v69[0];
let v71;
try { v71 = v70.match(v70); } catch (e) {}
let v72;
try { v72 = v69.italics(); } catch (e) {}
v72[7] = "2147483648";
let v74;
try { v74 = ("2147483648").link("2147483648"); } catch (e) {}
v74[29] = v74;
%VerifyType("get");
let v76;
try { v76 = new String(String); } catch (e) {}
function f77() {
    v71 &= 0.3747980658252631;
    function f78() {
    }
    return f78;
}
v76.toString = f77;
try { v76.codePointAt(v69); } catch (e) {}
const v80 = new String("get");
try { v80.trimRight(); } catch (e) {}
let v82;
try { v82 = v74.normalize(); } catch (e) {}
const v83 = v82[2];
v83.e = v83;
const v84 = 0.3747980658252631 in v80;
!v84;
const v86 = v84 && v84;
%VerifyType(2.174525112539174e+307);
let v87 = v80 + "get";
832 / 832;
function f91() {
    function f92() {
        Reflect.construct(F39, [Int16Array,Reflect,Reflect], String);
        return Reflect;
    }
    return f92;
}
function f96(a97) {
    const o100 = {
        "maxByteLength": 78,
    };
    const v102 = new SharedArrayBuffer(2, o100);
    new Int16Array(v102);
}
Object.defineProperty(Int16Array, Symbol.toPrimitive, { configurable: true, get: f91, set: f96 });
let v107;
try { v107 = new Int16Array("get", "get", v15); } catch (e) {}
let v108;
try { v108 = new Int16Array("get", "get", v74); } catch (e) {}
try { v108.findLastIndex(v108); } catch (e) {}
let v110;
try { v110 = new Int16Array(String, Int16Array, 2.174525112539174e+307); } catch (e) {}
v110[0];
const v112 = v84?.findLastIndex;
try { new v112(v80); } catch (e) {}
const v114 = new Int16Array(832);
v114.toString = f21;
const v115 = v114?.constructor;
v115.toString = f77;
try { new v115(v82, 2.174525112539174e+307, v86); } catch (e) {}
v114[561] = v114;
const v118 = 0 === 0;
const v119 = 0 >>> 0;
const v120 = v119 <= v119;
v120 || v120;
Object.defineProperty(Float64Array, 0, { configurable: true, enumerable: true, value: v107 });
try { Float64Array.apply(Int16Array, v80); } catch (e) {}
const v124 = new Float64Array(0);
257 - v115;
257 | 257;
try { new Uint16Array(v114, 832, v60); } catch (e) {}
new Uint16Array("2147483648");
try { v74.filter(257); } catch (e) {}
const v133 = Int8Array.name;
try { v133.search("2147483648"); } catch (e) {}
v133[4] = v133;
new Int8Array(v67);
127 >>> 127;
const v138 = 127 >> 127;
v138 >> v138;
v138 + v112;
Int16Array.a = Int16Array;
const v141 = new Int16Array(127);
const o143 = {
};
o143.h = o143;
try { Proxy.revocable(v60, v141); } catch (e) {}
const v146 = new Proxy(Float64Array, o143);
try { new v146(v146, v110, v118); } catch (e) {}
v87 = v84;
try { new BigUint64Array(v124, 2.174525112539174e+307, 2.174525112539174e+307); } catch (e) {}
new BigUint64Array(1690);
const v152 = ("D")[0];
let v153;
try { v153 = v152.codePointAt(v152); } catch (e) {}
v153--;
v152[0] = v152;
const v155 = v152 == v152;
v155 && v155;
let v157 = v152.lastIndexOf("D");
v157--;
const v159 = v157 + v157;
v159 - v159;
const v161 = v159 + v159;
v161 >> v161;
