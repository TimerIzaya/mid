new Date();
function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a10;
    } catch(e12) {
    }
}
const v13 = new F8(764513663n, Date);
new F8(-1467223430n, -3);
const v15 = new F8(10n, -3);
v15.valueOf = Date;
Math.expm1(Math);
function F19() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = 9007199254740991;
}
const v22 = new F19();
const o35 = {
    set h(a24) {
        function F26(a28, a29) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.c = a24;
            } catch(e30) {
            }
            try {
                this.a = a24;
            } catch(e31) {
            }
        }
        new F26(F26, 10n);
        const v33 = new F26(Uint8Array, 764513663n);
        new F26(v33, -1467223430n);
    },
    __proto__: v22,
};
const v38 = [7];
[14,34917];
[39028];
[531384559];
BigUint64Array[Symbol.toPrimitive] = Date;
new BigUint64Array(623722764, 256);
for (let [i50, i51] = (() => {
        10 >> 10;
        return [19603, 10];
    })();
    i50 === i51;
    +i50) {
}
const v60 = [4294967297];
v60[-15] = v38;
new Float32Array(10);
new Set(12, 9007199254740990n);
new Function(1);
class C76 {
    static {
        super[super.b];
        v60[-15n] ^= 10;
        const v83 = BigUint64Array * 536870887;
        v83 | v83;
        +(BigUint64Array - v83);
        536870887 << BigUint64Array;
        for (const v88 of "-4294967295") {
            if (v15 <= v88) {
                v13 instanceof F19;
            } else {
                continue;
            }
        }
    }
}
