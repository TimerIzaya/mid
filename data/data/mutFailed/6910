const v0 = /h/gvdsy;
/[s(a)\1]/uy;
/\P{Decimal_Number}0a(?!bbb|bb)c+/vmsy;
function f6(a7, a8, a9) {
    const o20 = {
        "f": 544661246,
        set g(a11) {
            (a11 = this)[a11];
        },
        m(a14, a15, a16) {
            return this;
        },
        9: -204894336,
        8: a7,
    };
    return o20;
}
function F21(a23, a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
}
new BigInt64Array(257);
f6(64517, 544661246, v0);
let v30 = 10;
v30--;
class C33 extends Uint16Array {
}
class C34 extends C33 {
    constructor(a36, a37, a38, a39) {
        super();
        function f40(a41, a42, a43) {
        }
        const o46 = {
            "type": "function",
        };
        new Worker(f40, o46);
    }
}
new C34();
f6(544661246, 544661246, v0);
f6(544661246, 544661246, v0);
const v52 = [601759695];
const v53 = [1073741824,1073741823,1376142744,1073741825];
function f54(a55, a56, a57, a58) {
    function f59() {
        return a57;
    }
    try { v53["find"](..."find", a58, ...v52); } catch (e) {}
    BigInt64Array.constructor.call(f59);
    return a57;
}
f54();
const o74 = {
    set e(a72) {
    },
};
for (const v78 in "1024") {
}
function f79(a80, a81) {
    return Math.tanh("1");
}
