class C3 {
    constructor(a5, a6) {
        this[546508306] = this;
        a6 + a6;
        const v10 = new Int16Array(12);
        v10.fill();
        a5[-14233] = 8.45083107656204;
        try { Math.exp(a5); } catch (e) {}
        -1e-15 / -1e-15;
        let v18 = a5 && (-128 >> a6);
        v18 & v18;
        v18++;
    }
    [-1000000.0] = 8.45083107656204;
    546508306 = C3;
    b;
}
C3.e = C3;
const v21 = new C3(C3, -14233);
const v22 = new C3(v21, v21);
new C3(v22, v22);
class C24 {
    static #h = v22;
    #e = -1000000.0;
    static 9;
    static #f;
    [v22] = v21;
    #g;
    [8.45083107656204];
    get g() {
        try {
            C3.e;
        } catch(e27) {
            ++C3;
            let v32 = Math.log(255);
            --v32;
            Math.sinh(-C3);
        }
        return this;
    }
}
new C24();
const v37 = new C3();
new C24();
const v39 = [-1170871325,5,1,-8,16962,127,536870887,1797638862];
try { v39.concat(v37); } catch (e) {}
[-12,-3,-15067,6,1670347149,-16,6,2,-4096,-2130];
try { C24.entries(); } catch (e) {}
([-4294967295,2147483648,4294967296])[1];
let v46 = 16;
v46--;
const v48 = Array(v46);
const o49 = {
    ...v48,
};
