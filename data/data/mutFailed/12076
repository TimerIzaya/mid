let v2 = "getUTCSeconds";
new WeakSet();
const v5 = [3.0,-1000.0,-Infinity,1.0,281.2708616047162,5.490082604438836];
const v6 = [0.725525194496337,-4.0];
function f7() {
    return v2;
}
Object.defineProperty(v6, "h", { configurable: true, get: f7 });
const v8 = [0.0];
const v10 = [601759695];
const v11 = [1073741824,1073741823,1376142744,1073741825];
function f12(a13, a14, a15, a16) {
    -a13;
    a15[3] + 2;
    try { v11["58572"](..."58572", a16, ...v10); } catch (e) {}
}
class C22 {
    c = v5;
    m(a24, a25) {
        v2 = "g";
        a25 instanceof WeakSet;
        return this;
    }
    constructor(a28, a29, a30) {
        a28.h = v10;
        try { a28.sort(this); } catch (e) {}
        try {
            const t27 = "129";
            t27.b = "g";
        } catch(e32) {
            e32.name;
        }
        let {"h":v34,"length":v35,...v36} = v6;
        v36[1];
        RegExp(RegExp);
        function f41() {
            return f41;
        }
        const v42 = [-9223372036854775808,58777,2];
        v42.constructor = f41;
        Int16Array[Symbol.isConcatSpreadable] = Int16Array;
        Int16Array[Symbol.isConcatSpreadable] = f41;
        const v49 = new Int16Array(v42, 8, 8);
        v49[Symbol.isConcatSpreadable] = ArrayBuffer;
        v42.concat(8, v49, Int16Array);
        const o54 = {
            "maxByteLength": 1024,
        };
        o54.maxByteLength;
        const v57 = new ArrayBuffer(1024, o54);
        try { new Float64Array(v35, this, ArrayBuffer); } catch (e) {}
        new Float64Array(v57);
    }
}
const v61 = new C22(v8, v8, "129");
const v62 = new C22(v8, v61, "129");
v62.c;
new C22(v6, "129", "129");
-Infinity;
828.0823486904994 / 828.0823486904994;
1957281702 & 1957281702;
const v71 = [4294967296,-57202,256,48562,333990054];
v71.length = 1957281702;
try { Uint32Array.apply(2, v71); } catch (e) {}
