let v2 = -14n;
function f6(a7, a8, a9) {
    const o19 = {
        [a9](a11, a12, a13) {
            v2 ^= v2;
            return v2;
        },
        65536: f6,
        set a(a15) {
            this[2147483647n] <<= a8;
        },
        "a": a8,
    };
    return o19;
}
const v21 = f6(-536870912n, f6(2147483647n, -536870912n, 2147483647n), 257n);
const v22 = f6(-1n, v21, -536870912n);
function F26(a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    new BigInt64Array(1091060517);
}
const v33 = new F26(F26, F26);
new F26(F26, v33);
class C35 {
}
function f36() {
    return v21[0].substring().charCodeAt();
}
%PrepareFunctionForOptimization(f36);
f36();
%OptimizeFunctionOnNextCall(v22);
f36();
