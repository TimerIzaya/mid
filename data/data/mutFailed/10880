12884n / 12884n;
new Int32Array(0);
const v13 = new BigInt64Array(1129);
v13[805] = v13;
new Uint8Array(1024);
class C17 {
}
const v18 = new C17();
const v19 = v18?.constructor;
try { new v19(); } catch (e) {}
const v21 = new C17();
function f22(a23, a24, a25) {
    const v26 = a25?.constructor;
    try { new v26(); } catch (e) {}
    let v28 = 64;
    v28--;
    112 !== 112;
    const v33 = new Uint8ClampedArray(112);
    try { v33.keys(); } catch (e) {}
    try { Uint8Array.bind(true); } catch (e) {}
    const v38 = new Uint8Array();
    try { v33(-85357.59116785484, ...v38, v28, 46, -3.383486186086852e+307, ...v33); } catch (e) {}
    const o42 = {
        __proto__: a24,
        1073741824: v18,
    };
    return f22;
}
f22.d = f22;
f22(f22(v21, f22, v18), v21);
