const v0 = [];
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = v0;
    } catch(e3) {
    }
    try {
        this.g = v0;
    } catch(e4) {
    }
}
const v5 = new F1();
const v6 = new F1();
const v7 = new F1();
const v9 = new Set();
function f10(a11) {
    v6 - a11;
    const v15 = new Int16Array(41);
    return v15;
}
v9.toString = f10;
const v16 = [v7];
const v17 = [v7,v7,v16,Set,v9];
const v18 = [v17,v6,v16,F1,v5];
function f22(a23, a24) {
    const o35 = {
        [v9]: v17,
        get h() {
            v9.size;
            const o27 = {
            };
            try {
                o27.c = this;
            } catch(e28) {
            }
            try {
                const o29 = {
                };
                o29.c = this;
                o29.e = v0;
            } catch(e30) {
            }
            try {
                const o31 = {
                };
                o31.c = this;
                o31.e = v0;
                o31.g = 9707;
            } catch(e32) {
            }
            try {
                const o33 = {
                };
                o33.c = this;
                o33.e = v0;
                o33.g = a23;
            } catch(e34) {
            }
            return o27;
        },
    };
    return o35;
}
f22(1034246150, v16);
f22(-758951061, v0);
f22(-758951061, v18);
const v39 = [2.0,-1e-15,1.7976931348623157e+308];
function f40(a41, a42) {
    const v44 = new f22(-758951061 < 9707, f22);
    return v44;
}
v39.constructor = f40;
const v47 = new Int16Array(1371);
v39.flat(1351);
v47.lastIndexOf(1371, 1351);
