const v0 = [65535,256650505,2,-1610482240,-1399267861,64];
const v1 = [9007199254740991,-2147483649,64535,9007199254740990,3,331622610,-1,-15,-12385];
const v2 = [-15,64228841,14,202275985,11417];
class C3 {
    static set f(a5) {
    }
    static {
        Reflect.construct(this, [Reflect,this != v0], v0);
    }
    c = v2;
}
const v14 = new C3();
const v15 = new C3();
new C3();
class C20 extends C3 {
    p(a22, a23, a24, a25) {
        const o26 = {
        };
        new Proxy(v15, o26);
        return v2;
    }
    set e(a30) {
        %VerifyType(this);
        C3 >= v2;
    }
    static 127 = v15;
    static e;
    [v2] = C3;
    p(a33, a34, a35) {
        v14[245] = v14;
        typeof -1000.0 === "undefined";
        return v0;
    }
}
new C20();
new C20();
new C20();
function F42() {
    if (!new.target) { throw 'must be called with new'; }
    Array(19793);
    function F47() {
        if (!new.target) { throw 'must be called with new'; }
        class C49 {
        }
        for (let v50 = 0; v50 < 25; v50++) {
            const v51 = [1073741824,1073741823,1376142744,1073741825];
            function f52(a53, a54, a55, a56) {
                try { v51["find"](); } catch (e) {}
                return C49;
            }
            for (let v59 = 0; v59 < 5; v59++) {
                f52(v59, f52);
            }
        }
    }
    v0 >> 19793;
    try {
        Array.prototype = Array;
    } catch(e62) {
    }
    new F47();
    const o64 = {
    };
    for (let v65 = 0; v65 < 5; v65++) {
    }
    [];
    function f67(a68) {
        const o69 = {
        };
    }
    class C70 {
    }
}
const o71 = {
};
new Proxy(v1, o71);
v1 << v0;
new F42();
