Math.expm1(Math);
const v6 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
function f7(a8, a9, a10, a11) {
    try {
        f7(true, Int8Array, undefined, f7);
    } catch(e15) {
    }
    function f16(a17) {
        v6.constructor;
        return f7;
    }
    for (let i21 = 0, i22 = 10; i21 < i22; i22--) {
        Int8Array();
        a11.valueOf = a11;
    }
    return v6;
}
function F30(a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a33;
    } catch(e34) {
    }
    try {
        this.g = 9n;
    } catch(e35) {
    }
    try {
        this.f = Math;
        function f37(a38, a39) {
            const o41 = {
                get h() {
                    return a39;
                },
                [a39]: 4,
                2778757984: Int8Array,
                "h": 4,
            };
            return 4;
        }
    } catch(e42) {
    }
}
function f43() {
    for (let v44 = 0; v44 < 5; v44++) {
        v44 / v44++;
        function f47() {
            return f43;
        }
    }
    return f43;
}
new F30(9n, F30);
const v49 = new F30(9n, 25369n);
class C50 {
    static #c;
    n(a52, a53) {
    }
    #b;
    static {
        super.b = 9n;
        let {...v55} = this;
    }
}
try {
    v49.__proto__ = C50;
} catch(e56) {
}
const v59 = [4096];
const o60 = {
    "arguments": v59,
    "type": "function",
};
new F30(25369n, 25369n);
function F68(a70, a71, a72, a73) {
    if (!new.target) { throw 'must be called with new'; }
}
const o76 = {
    "execution": "async",
};
const v77 = gc(Math);
try {
    BigInt(BigInt);
} catch(e81) {
}
new BigInt64Array([-65537n,-65537n]);
v77.then(v77, F68);
