const v1 = [5,4142,11,268435456,11,-30743,4096,268435440,1753297073];
function f2() {
    Int8Array.b = Int8Array;
    gc();
    Object.defineProperty(v1, 1, { writable: true, enumerable: true, value: v1 });
    return Int8Array;
}
const v9 = new Uint16Array();
const v10 = v9?.entries;
try { new v10(); } catch (e) {}
let {...v12} = v9;
v12.h = v12;
v12.d = v12;
class C13 {
}
C13.c = C13;
C13.e = C13;
class C14 {
    toString(a16) {
        const v17 = this.e;
        [a16] = "c";
        try {
            super.m(a16, v17, "c", v17);
        } catch(e19) {
        }
        return "c";
    }
    9 = 21816;
    static get c() {
        eval();
    }
    [-1];
    ["c"] = 21816;
    2 = 21816;
    #b = 21816;
}
try { new C14(); } catch (e) {}
let v24;
try { v24 = new C14(); } catch (e) {}
v24[9];
let v26 = v24[9];
v26++;
new C14();
const v29 = new C14();
v29[9];
const v31 = new C14();
const v32 = v31?.__defineGetter__;
try { new v32(v26, f2); } catch (e) {}
const v35 = 253 / 253;
v35 != v35;
Int32Array.e = Int32Array;
const v38 = new Int32Array(253);
const v39 = v38[207];
v39 <= v39;
const v41 = v38[109];
v41 >> v41;
new Float64Array(7);
const v47 = ReferenceError.captureStackTrace(f2);
const o48 = {
};
o48.h = o48;
268435439n + 268435439n;
let v51 = 2105444095n;
v51--;
const v53 = v51 + v51;
v53 << v53;
const o59 = {
    968: undefined,
    [268435439n]: v51,
    __proto__: o48,
    "g": v29,
    "b": -4294967296n,
    "f": C14,
    valueOf(a58) {
        return 253;
    },
};
o59[268435439] = o59;
let v60 = 5;
v60++;
Float32Array.prototype;
let v64;
try { v64 = new Float32Array(v38, Float32Array, Float32Array); } catch (e) {}
v64[86] = v64;
const v65 = new Float32Array(v60);
const v66 = [23795,8,259058917,-256,1,-36806,4096,-9,-1,-18943];
let v67;
try { v67 = v66.fill(v47); } catch (e) {}
try { v67.sort(v67); } catch (e) {}
let v69;
try { v69 = v67.map(v65); } catch (e) {}
const v71 = -(-2);
v71 >> v71;
try { Date.now(); } catch (e) {}
Date.prototype;
let v76;
try { v76 = new Date(C14, C14, Date, C14, C14, Int32Array, Int32Array); } catch (e) {}
const v77 = v76?.setFullYear;
try { new v77(v51, v31, v39); } catch (e) {}
const v79 = new Date(-2, v66);
const v80 = v79?.setFullYear;
try { new v80(v47, -2, v29); } catch (e) {}
class C82 {
}
const v83 = C82?.constructor;
try { new v83(v24); } catch (e) {}
try { C82.call(v79); } catch (e) {}
const v86 = [0.0,-5.0,-1.0,-Infinity,897329.7015312992,0.4973125219659831,764165.2446988621,2.2250738585072014e-308,0.6108619969059673];
try { v86.toLocaleString(); } catch (e) {}
v86[2147483647] = v86;
const v89 = new Int8Array(v60);
try { v89.find(v69); } catch (e) {}
Date.length = Date;
Date();
class C93 extends Date {
}
C93.e = C93;
const v94 = C93.length;
v94 >>> v94;
const v96 = [2147483647,9,9007199254740990,268435439,2,536870888];
const v97 = v86.pop();
try { v97.every(v89); } catch (e) {}
v97.d = v97;
v86[2147483647] = v96;
