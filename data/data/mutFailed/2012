class C3 {
    ["51KmX"];
    get h() {
        this + this;
        return "search";
    }
    static [-2] = "51KmX";
    static {
        new WeakMap();
    }
}
new C3();
function f13(a14) {
    return a14;
}
const o17 = {
};
o17[Uint32Array] -= -2147483649;
new C3();
new C3();
class C20 extends C3 {
    #o(a22) {
    }
    constructor(a24, a25, a26) {
        super();
        const o30 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o30);
    }
    o(a33, a34, a35) {
        try { new b(a34); } catch (e) {}
        this.__proto__;
        super.h;
        for (let v41 = 0; v41 < 32; v41++) {
            a33["p" + v41] = v41;
        }
        return "search";
    }
}
new C20();
new C20();
new C20();
new Float32Array(3);
new Int16Array(12);
new Int8Array(9);
Math.expm1(Math);
function F59() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = 9007199254740991;
}
const v62 = new F59();
const o65 = {
    set h(a64) {
    },
    __proto__: v62,
};
[7];
[14,34917];
try {
} catch(e70) {
    eval("");
}
[39028];
[531384559];
new BigUint64Array(623722764, 256);
for (let [i83, i84] = (() => {
        10 >> 10;
        return [0, 10];
    })();
    i83 < i84;
    i83++) {
}
const v93 = [4294967297];
new Float32Array(10);
new Uint8Array(12);
function F103() {
    if (!new.target) { throw 'must be called with new'; }
    for (let v105 = 0; v105 < 32; v105++) {
        "p" + v105;
    }
}
const v108 = new F103();
const v109 = v108[-1];
const v112 = new BigInt64Array(7);
v112[v112] = v109;
new Uint32Array(1);
class C119 {
    static {
        const v121 = super.b;
        const v126 = new Uint16Array(3);
        v126.reverse();
        const v130 = new Uint16Array(512);
        new Float32Array(v130);
        class C134 {
            get b() {
                const v136 = ("B")[21];
                try {
                    this.e = "B";
                } catch(e137) {
                }
                return v136;
            }
            static [2.0];
            static #g;
            g = "d";
        }
        new C134();
        const v139 = new C134();
        const v140 = new C134();
        class C142 {
        }
        class C143 extends C142 {
        }
        const v144 = /8[\cA]v/uisy;
        const t116 = [3480,1024,-4294967297,-1024,512,65536,29198,-9223372036854775807,-2147483647];
        t116.length = v144;
        const v147 = new Uint8Array(7);
        const v150 = new BigInt64Array(1221);
        let v153 = new Uint8ClampedArray(5);
        try { v139(1221, v139, "d", v140); } catch (e) {}
        const o155 = {
            __proto__: v147,
            "h": v147,
            "a": v150,
        };
        Math.clz32(-53409);
        const v160 = -53409 % v153;
        --v153;
        -1000.0 && v160;
        super[v121];
        v93[-15n] ^= 10;
        const v167 = BigUint64Array * 536870887;
        v167 ** v167;
        +(BigUint64Array - v167);
        536870887 << BigUint64Array;
        for (const v172 of "-4294967295") {
        }
    }
}
