let v0 = 2147483648n;
let v3 = 4;
let v4 = v3--;
const v6 = new Float32Array(v3);
let v8;
try {
const t0 = 1073741824n;
v8 = t0(v0, 3);
} catch (e) {}
v8[7] = 1073741824n;
[v0,v4,v0] = v6;
const v9 = new Float32Array(v4);
3 >> 3;
new Uint32Array(3);
new Uint32Array(144);
4046 === 4046;
try { new BigInt64Array(Uint32Array, BigInt64Array, BigInt64Array); } catch (e) {}
const v27 = new BigInt64Array(4046);
115 != 115;
function f31(a32, a33) {
    a33++;
    const v35 = a32++;
    let o37 = {
        "h": 10n,
        [10n]: v9,
        "e": v35,
        "g": BigInt64Array,
        4096: -290057152,
        "d": a32,
        ...a32,
        get e() {
            return a33;
        },
    };
    [,...o37] = v27;
    a33[4046];
    const o41 = {
        "maxByteLength": 3035,
    };
    const v43 = new ArrayBuffer();
    v43.d = v43;
    const v45 = new Float32Array();
    try { v45.reduceRight(o41); } catch (e) {}
    return 115;
}
f31(4046, 3768);
f31(4046, 4046);
try { new Uint8ClampedArray(3, 4046, -290057152); } catch (e) {}
