const v0 = /\cA\xe2\x81\xa3/guims;
const v1 = /L?/gdisy;
const v2 = /(ab|cde)/gudmy;
let v4 = 46621;
const v6 = 4 >>> 4;
class C8 {
    static {
        try { new this(); } catch (e) {}
        const v11 = [this,this,v2,this,v0];
        try { v11.fill(v11); } catch (e) {}
        const v13 = [v11,v11,this,,];
        try { v13.findLast(4); } catch (e) {}
        [v0,-929976049,v13,-929976049,v11];
    }
    [4];
    static p(a17, a18) {
        a17 <<= 4;
        for (let i20 = 0; i20 < 3; i20++) {
            super.a = a18 = this;
        }
        for (const v26 in v0) {
            this[a17] ^= a17;
            try {
                v0.__proto__ = v26;
            } catch(e27) {
            }
        }
        return a17;
    }
}
try { new C8(); } catch (e) {}
const v29 = new C8();
const v30 = new C8();
v30[4] = v30;
const v31 = new C8();
let v32 = v31[4];
class C33 {
    constructor(a35, a36) {
        const v37 = this?.constructor;
        try { new v37(undefined, v29); } catch (e) {}
        for (let v39 = 0; v39 < 34; v39++) {
            2 | 2;
            try {
                this.length = 2;
            } catch(e42) {
            }
        }
    }
    #toString(a44, a45, a46) {
        super[a44] = v1;
        v4 = -929976049;
        const o50 = {
            "execution": "sync",
            "type": "minor",
        };
        gc(o50);
        return "sync";
    }
}
const v52 = new C33(v4, v0);
const v53 = new C33(v29, v30);
const v54 = new C33(v53, C8);
v54.length;
let v57 = Uint8ClampedArray;
v57 |= C8;
v32 = v6;
new Int8Array(233);
new Int32Array(3478);
new Float32Array(11);
try { v57(v57, 4, v52); } catch (e) {}
new v57([1,17,[v57,v57]]);
