const v3 = Math.log10();
try { new URIError(4); } catch (e) {}
const v7 = URIError(4, 16, v3, Math, v3);
function f8() {
    return URIError;
}
Object.defineProperty(v7, Symbol.toPrimitive, { enumerable: true, get: f8 });
let v12 = -2114572618;
v12++;
let v15 = 6;
v15 ^ v15;
const v17 = [1.0,1000000.0,1000000.0,172.7872329650745,540.9282040249288];
v17[0];
const v19 = [1.0,3.0,-4.300359785779049,-372.2633337167929,-674139.7022544353];
const v20 = [3.6120051170841982,258.98591716454644];
function f21(a22, a23) {
    const o39 = {
        m(a25) {
            return a25;
        },
        "d": a22,
        "e": 268435456,
        [a22]: a22,
        "f": a22,
        [v15]: a23,
        o(a27, a28, a29) {
            const v30 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
            function f31() {
                try {
                    v30.forEach();
                } catch(e33) {
                }
                return f31;
            }
            const v36 = v20 - v20;
            v20 || v20;
            2 || v36;
            return 268435456;
        },
        "e": a22,
    };
    o39.e = o39;
    return o39;
}
const v40 = f21(v12, v17);
v40[6] = v40;
f21(2, v19);
const v42 = f21(-36625, v17);
class C44 {
    constructor(a46) {
        function f47(a48) {
            v15 &= a48 & a48;
            return a48;
        }
        this.constructor = f47;
        try { this.constructor(v19); } catch (e) {}
        try {
            const o56 = {
                set d(a52) {
                    for (let v53 = 0; v53 < 25; v53++) {
                    }
                },
                get d() {
                    return this;
                },
                get a() {
                    return this;
                },
            };
            Object.defineProperty(o56, "b", { writable: true, enumerable: true, value: C44 });
            o56.b = o56;
            o56.a = "byteLength";
        } catch(e57) {
            e57.message = e57;
        }
        const v59 = new Int8Array();
        const o60 = {
            ...v59,
        };
        o60.g = o60;
    }
}
C44.h = C44;
function f61(a62, a63, a64, a65) {
    const o70 = {
        [f61](a67, a68, a69) {
        },
    };
    o70.g = o70;
    o70.g = o70;
    return a65;
}
f61.toString = f61;
let v71;
try { v71 = f61.toString(); } catch (e) {}
try { v71.startsWith(v7); } catch (e) {}
f61();
const v74 = new C44(C44);
const v75 = v74?.propertyIsEnumerable;
try { new v75(v42); } catch (e) {}
const v77 = [1000000000000.0,6.579220753226213e+307,2.0,-2.220446049250313e-16,NaN,-1000000.0];
const t100 = "findIndex";
t100[8] = "findIndex";
const t103 = "findIndex";
t103[5] = "findIndex";
v77["findIndex"](gc);
try { Uint16Array.of(); } catch (e) {}
8 + 8;
class C85 {
}
try { new C85(v15, f61, v17); } catch (e) {}
async function f87(a88, a89, a90, a91) {
    try { new a89(a91); } catch (e) {}
    try { a90.codePointAt("findIndex"); } catch (e) {}
    const v94 = await C85;
    const v95 = v94?.constructor;
    try { new v95(v71); } catch (e) {}
    let v97;
    try { v97 = new v95(v15); } catch (e) {}
    v97.e = v97;
    v94.call(8, Uint16Array);
    return a89;
}
let v99;
try { v99 = f87(2, C44, "findIndex", 2); } catch (e) {}
try { v99.then("byteLength", "byteLength"); } catch (e) {}
