const v0 = [12,-2147483649,-65535];
const v1 = [536870888,257,-65537];
const v2 = [52719,6];
class C3 {
    [C3] = C3;
    [v1];
    static f = C3;
    static g;
    static #g;
    [-1];
    static 4;
    [v1];
    [v0];
    static m(a5, a6) {
        try {
            this.d = this;
        } catch(e7) {
        }
        try { v1.toSpliced(a6, a6, a6, a5, a5, v2); } catch (e) {}
        return v0;
    }
    static [v1] = v0;
    #a;
}
C3[4];
const v10 = new C3();
const v11 = v10?.constructor;
try { new v11(); } catch (e) {}
new C3();
new C3();
const v17 = ("J")?.big;
try { new v17(); } catch (e) {}
("Jpk4")[1];
const v27 = [-50.96907394271625,3.0,-570016.204056581,0.7917375798188904,5.844526521291116e+307,-1.7976931348623157e+308,-2.2250738585072014e-308,0.0,1.0];
let v28;
try { v28 = v27.every(4.0); } catch (e) {}
const o29 = {
};
try {
    o29.g = v0;
} catch(e30) {
}
try {
    const o31 = {
    };
    o31.g = v0;
    o31.a = v27;
} catch(e32) {
}
try {
    const o33 = {
    };
    o33.g = v0;
    o33.a = v27;
    o33.b = v28;
} catch(e34) {
}
try {
    const o35 = {
    };
    o35.g = v0;
    o35.a = v27;
    o35.h = v2;
} catch(e36) {
}
const v37 = [-2.220446049250313e-16];
try { v37.reverse(); } catch (e) {}
class C39 {
    static [-2];
    constructor(a41, a42) {
        a41[3] = a41;
        try { a42.findLastIndex(v37); } catch (e) {}
        function f44() {
            function f46(a47) {
                a47 == v37;
            }
            this.onmessage = f46;
            [49923,-1917810282,-9007199254740992,-1699253997,-52225,-3,117961961,30566];
            [-1626228309];
            let {"b":v52,"length":v53,...v54} = [757181911,-4294967295,0,1073741824,536870912,-1354441452,13875,-1936295132,919860559];
            v11 << a41;
        }
        const v59 = [];
        const o60 = {
            "arguments": v59,
            "type": "function",
        };
        new Worker(f44, o60);
    }
}
const v62 = new C39(v27, v37, v1);
const v63 = v62?.__defineGetter__;
try { new v63(v0, v0); } catch (e) {}
