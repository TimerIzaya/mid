const v0 = [];
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    for (let v3 = 0; v3 < 36; v3++) {
        F1 &&= F1;
        let v8 = v0 && -575.817256312281;
        238355020 - (238355020 * -575.817256312281);
        --v8;
    }
    try {
        this.c = v0;
    } catch(e12) {
    }
}
const v13 = new v0();
new F1();
const v15 = new v13();
const v18 = new Float64Array(11);
v18[9] = v18;
const v21 = ~127 && v0;
const v22 = v15[F1];
const v23 = /(ab|cde)\118\P{sc=Greek}+/gdims;
v23.exec(v23);
let v25;
try { v25 = new v22(F1); } catch (e) {}
let v27 = 9007199254740990;
Math.sqrt(-1000.0 % v21, v25, v25);
v27++;
Math.log2(v27);
~F1;
Math.acosh(v13, Float64Array);
Uint16Array.a = Uint16Array;
new Uint16Array(127);
new Int8Array(256);
function F40() {
    if (!new.target) { throw 'must be called with new'; }
    this.a = this;
    try {
    } catch(e43) {
    }
}
class C44 {
    n(a46, a47) {
        let v48 = 10;
        for (; v48--;) {
            try {
            } catch(e50) {
            }
        }
    }
}
gc.e = gc;
const o53 = {
    "execution": "async",
};
const t55 = "async";
t55(o53);
