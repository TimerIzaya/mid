function f0() {
}
const v2 = new BigUint64Array();
const v4 = new Int16Array();
[] = v4;
v2 && BigUint64Array;
let v7;
try {
const t0 = 6;
v7 = t0();
} catch (e) {}
const v8 = /(ab)/us;
v8.b = v8;
const v9 = /Ha+b/diy;
v9.dotAll = v9;
const v10 = /4a\w/vmsy;
let v11;
try { v11 = v10.valueOf(); } catch (e) {}
const v12 = [-4294967297,1222745515,61248];
const v13 = [-11];
let v14;
try { v14 = v11.fill(v13); } catch (e) {}
const v15 = [62254,2147483648,512,-34982,268435439,1073741824,45881,3,512];
class C16 extends f0 {
    c;
    static get h() {
        const o18 = {
            "apply": f0,
            "call": C16,
            "defineProperty": f0,
            "deleteProperty": f0,
            "get": f0,
            "getOwnPropertyDescriptor": v2,
            "has": f0,
            "isExtensible": f0,
            "ownKeys": v11,
            "preventExtensions": f0,
            "set": v14,
            "setPrototypeOf": f0,
        };
        new Proxy(v15, o18);
        return o18;
    }
}
C16.h = C16;
const v21 = new C16();
v21.e = v21;
const v22 = new C16();
const v23 = new v22();
function f24(a25, a26, a27) {
    const o31 = {
        get d() {
            try {
                super.n(a25, v15);
            } catch(e30) {
            }
            return a25;
        },
        [a27]: f0,
        __proto__: v15,
        9: a27,
    };
    let v32;
    try { v32 = v7.push(a26); } catch (e) {}
    return v32;
}
f24(v21, v12, v21);
f24(v23, v13, v23);
f24(v23, v15, v23);
Math.atan(Math);
