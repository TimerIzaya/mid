class C3 {
    n(a5) {
        const v7 = new String("d");
        "CasPz" in v7;
        return C3;
    }
    get a() {
        const o10 = {
        };
        try {
            o10.e = "CasPz";
        } catch(e11) {
        }
        try {
            const o12 = {
            };
            o12.e = "CasPz";
            o12.c = "d";
        } catch(e13) {
        }
        try {
            function F14(a16, a17) {
                if (!new.target) { throw 'must be called with new'; }
            }
            const v18 = /(\1a)/gums;
            const v19 = /V(?:a{5,1000000}){3,1000000}/vims;
            for (let v20 = 0; v20 < 27; v20++) {
                v18.compile(v19).lastIndex;
            }
            const o23 = {
            };
            o23.e = "CasPz";
            o23.c = "d";
            o23.h = "CasPz";
        } catch(e24) {
        }
        try {
            const o25 = {
            };
            o25.e = "CasPz";
            o25.c = "d";
            o25.d = this;
        } catch(e26) {
        }
        return "CasPz";
    }
}
const v27 = new C3();
function f28() {
    const v30 = new Int8Array(Int8Array);
    const v31 = new Int8Array();
    v31.find(v30);
    return Int8Array;
}
v27[Symbol.toPrimitive] = f28;
const v35 = new C3();
function f36() {
    const v38 = [];
    const v39 = ("CasPz").toLowerCase;
    Reflect.apply(v39, "CasPz", v38);
    return v39;
}
v35[Symbol.toPrimitive] = f36;
const v43 = new C3();
class C44 extends C3 {
    [v27] = v27;
    #o(a46, a47, a48) {
        try {
            v43.a = v43;
        } catch(e49) {
        }
        ("d").length;
        return a48;
    }
    constructor(a52, a53, a54) {
        super();
        const o55 = {
        };
        o55.g = o55;
        try {
            o55.g = C3;
        } catch(e56) {
        }
        try {
            const o57 = {
            };
            o55.g = C3;
            o57.h = v43;
        } catch(e58) {
        }
        try {
            const o59 = {
            };
            o59.g = C3;
            o59.h = v43;
            o59.b = "d";
        } catch(e60) {
        }
        try {
            const o61 = {
            };
            o61.b = C44;
            o61.g = C3;
            o61.h = v43;
            o61.b = a52;
        } catch(e62) {
        }
    }
}
new C44(C3, v35, C44);
const v64 = new C44(v35, v43, C3);
const v65 = new C44(C3, v64, v27);
function f66() {
    return C3;
}
v65.toString = f66;
function f70(a71, a72, a73, a74) {
    const o87 = {
        "f": "CasPz",
        n(a76, a77, a78, a79) {
            try { ("d").toUpperCase(); } catch (e) {}
            [-4294967297,11,-1,0,584057064,128];
            [-4,1650072872,-6,-1824077023,9223372036854775807];
            [-591777859,484834410,-1073741824,2147483649,2087614020,-1771113866,35920,-65537];
            return C3;
        },
        [C44]: a71,
        [a71]: v35,
        [v65]: a71,
        ...v35,
    };
    return o87;
}
const v88 = f70(v27, v43, v65, v27);
f70(v35, v27, v43, C44);
f70(v35, 9223372036854775807, v27, v64);
class C94 {
    set e(a96) {
        Math.fround();
        Math.ceil();
    }
    m(a101) {
    }
    e;
}
const v102 = new C94();
const v103 = new C94();
new C94();
let v105 = ["number","ignoreCase",v102];
[[v103,"number","R"],v88,C94,v105];
const v111 = ("NN")["9"];
C94[0] >>= v111;
let v112;
try { v112 = v111(v103, v102, "string"); } catch (e) {}
v105 = v112;
let v113 = 0;
while (v113 < 7) {
    v113++;
}
