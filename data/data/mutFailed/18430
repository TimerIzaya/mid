function f0() {
    try { ("number").valueOf(); } catch (e) {}
    const o9 = {
        set d(a6) {
            function f7() {
                return 0.7570450065087951;
            }
            let v8 = this;
            v8 = "m";
        },
        "h": "m",
        "f": "number",
        "g": "m",
    };
    return o9;
}
const v10 = f0();
const v11 = f0();
const v12 = f0();
class C13 {
    constructor(a15) {
        a15.d;
        function f17(a18, a19, a20, a21) {
            a19.h;
            a20.h;
            return a21 = a18;
        }
        try { f17(C13, C13, a15, C13); } catch (e) {}
        f17(v10, a15, v12, a15);
    }
    #g = v12;
    static d;
    static [f0];
}
C13.prototype = C13;
new C13(v11);
const v27 = new C13(v12);
const v28 = v27?.constructor;
try { new v28(v11); } catch (e) {}
const v30 = new C13(v11);
const v31 = v30?.constructor;
try { new v31(v27); } catch (e) {}
function f33() {
    return v30;
}
[-536870912,65537,1052053689,8,135480217,-8];
[-6612,-128,16,4294967296,-1174770367];
[-128];
class C37 {
}
C37.name = C37;
const v38 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
v38.g = v38;
const v42 = [];
const v43 = [];
const v44 = [0.3083488057663979,0.3083488057663979,0.3083488057663979];
class C45 {
    constructor(a47, a48) {
        const v49 = a48?.flatMap;
        try { new v49(604.4479109019192); } catch (e) {}
        const v51 = a47?.filter;
        try { new v51(); } catch (e) {}
        try { a48.find(C37); } catch (e) {}
        a48[2];
        const v55 = /Ia[a]/uims;
        let v56;
        try { v56 = v55.toString(); } catch (e) {}
        try { v56.trimLeft(); } catch (e) {}
        const v58 = /W(jy2)/udy;
        try { v58.toString(); } catch (e) {}
        const v60 = v58?.toString;
        v60.name;
        try { new v60(); } catch (e) {}
        v58.flags;
        const v64 = /(u4(?:a?)*)/gudimsy;
        const v67 = new Uint8Array(v64, C45);
        const v69 = new Uint32Array();
        function f70(a71, a72, a73, a74) {
            a71.prototype = a71;
            a72 / a72;
            a73 - a73;
            const o80 = {
                ...v67,
                n(a78, a79) {
                    v69[a71] = v69;
                },
            };
            const v81 = o80.__defineSetter__;
            try { v81(v38, v64); } catch (e) {}
        }
        f70.prototype;
        for (let v84 = 0; v84 < 500; v84++) {
            v84 | v84;
            f70(Uint8Array, 2, v84);
        }
        for (let v87 = 0; v87 < 5; v87++) {
            v42["p" + v87] = v87;
            const o90 = {
            };
            o90.d = o90;
            1000 / 1000;
            const v93 = new Uint8ClampedArray(1000);
            v93.includes(undefined);
        }
    }
}
try { new C45(v42, v42); } catch (e) {}
new C45(v42, v42);
const v98 = new C45(v43, v44);
const v99 = v98.constructor;
try { new v99(v42, v42); } catch (e) {}
