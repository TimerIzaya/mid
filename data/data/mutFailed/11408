function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -9007199254740991;
    } catch(e3) {
    }
}
const v4 = new F0();
const v5 = new F0();
const v6 = new F0();
class C10 extends v6 {
    [F0] = 33750n;
    m(a12, a13) {
        try {
            new F0();
        } catch(e15) {
        }
        return v6;
    }
    constructor(a17, a18) {
        super();
        try { a18(33750n, a18, a17, ...this, this, a17); } catch (e) {}
        for (let v20 = 0; v20 < 32; v20++) {
            v20 + v20;
            v5[v20] = v20;
        }
    }
}
new F0(-128n, v6);
const v24 = new C10(127n, v4);
new v6(-128n, v24);
for (let v29 = 0; v29 < 5; v29++) {
    for (let [i38, i39] = (() => {
            const v32 = eval(v29);
            function f33() {
                for (let v34 = 0; v34 < 5; v34++) {
                    [-Infinity,1.7976931348623157e+308,1.0,1.7976931348623157e+308,-1.0,Infinity];
                }
                return v32;
            }
            f33();
            %OptimizeFunctionOnNextCall(f33);
            return [0, 10];
        })();
        i38 < i39;
        i39--) {
    }
}
