[];
new Float64Array(147);
const v6 = [];
function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    const v12 = (147)?.constructor;
    try { new v12(); } catch (e) {}
    this.c = Map;
    try {
        this.e = v6;
    } catch(e14) {
    }
    try {
        this.a = a10;
    } catch(e15) {
    }
    new Int32Array(9);
    Int32Array.reverse();
}
new F8();
new F8();
new Int32Array(920);
new Float32Array(2042);
/wa\b![^a*b|cH*]/uis;
/M[m]/gvdms;
/0y/vis;
class C32 {
    toString(a34, a35) {
        const v36 = `7${this}dm${"unicode"}m`;
        function F37(a39, a40, a41) {
            if (!new.target) { throw 'must be called with new'; }
        }
        F37(F37(), "unicode", v36);
    }
}
