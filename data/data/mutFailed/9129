const v0 = [];
class C1 {
    1073741823;
    static #b = v0;
    static {
        let v2 = this;
        v0.sort(...v0, v2 &= v0, v2, C1);
        v0[v0] = C1;
        try {
            v0.#b ^= v2;
        } catch(e4) {
        }
        v0 >>> v2;
    }
    constructor() {
        const o7 = {
        };
        new Proxy(this, o7);
    }
}
const v10 = new C1();
const v11 = new C1();
new C1();
function f17() {
    return v11;
}
class C18 extends f17 {
    #o(a20, a21, a22) {
        try {
            this.toString = f17;
        } catch(e23) {
        }
        return a20;
    }
    #a;
    static [v10] = v11;
    #f;
    static [1.0] = 1.0;
}
new C18();
new C18();
new C18();
const o48 = {
    valueOf(a35, a36) {
        const v37 = (a38, a39, a40, a41) => {
            function F42(a44, a45, a46, a47) {
                if (!new.target) { throw 'must be called with new'; }
            }
            return Int8Array;
        };
        return 155;
    },
};
