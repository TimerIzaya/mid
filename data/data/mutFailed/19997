const v2 = new BigInt64Array(64);
const v5 = new Uint8ClampedArray(3);
const v8 = new Uint8ClampedArray(894);
v8[735] = v8;
class C9 {
    static #a;
    static get a() {
        try { this.o(this, this, BigInt64Array, v2); } catch (e) {}
        super.h = Uint8ClampedArray;
        return Uint8ClampedArray;
    }
    n(a13, a14) {
        function f15(a16, a17, a18, a19) {
            this >>> -9;
            -9 << this;
            return +this;
        }
        const o26 = {
        };
        new Proxy(f15, o26);
        for (let v29 = 0; v29 < 32; v29++) {
            v2["p" + v29] = v29;
        }
        f15(a13, a14, v2, 3);
        return BigInt64Array;
    }
}
let v33;
try { v33 = new C9(); } catch (e) {}
const v34 = new C9();
const v35 = new C9();
const v36 = new C9();
function f37(a38, a39, a40, a41) {
    let v42 = a38?.propertyIsEnumerable;
    [,v42,v42,...f37] = v2;
    v33 && f37;
    a39++;
    let v46 = 49627;
    const v49 = v46 % Uint8ClampedArray;
    +-5;
    Math.max(v46);
    --v46;
    v49 >> v46++;
    Uint8ClampedArray / -5;
    try { new v42(a40); } catch (e) {}
    const v57 = a39?.__lookupGetter__;
    try { new v57(a41); } catch (e) {}
    const o75 = {
        ...a39,
        "h": a41,
        n(a60, a61, a62, a63) {
            let v64 = 0;
            try {
                super.toString();
            } catch(e66) {
            }
            try {
                v5.a = v64;
            } catch(e67) {
            }
            while (v64 < 3) {
                v34.g;
                [-128,10,-948048758,41139,-913122109];
                [9007199254740992,129,2013981549,50234,1073741823,-2096302109,-65537,2147483647];
                [4,-4294967296,-65536];
                v64++;
            }
            return a61;
        },
    };
    return o75;
}
f37.caller = f37;
const v76 = f37(v35, v35, v36, v2);
f37(v76, v35, f37(C9, v36, v76, f37), Uint8ClampedArray);
const v81 = new Date(Date);
try { v81.getUTCHours(); } catch (e) {}
try { v81.setUTCMinutes(-26635n); } catch (e) {}
