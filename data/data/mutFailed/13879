[2.2250738585072014e-308,1000000.0,-3.0,0.9301155797361128];
const v1 = [4.0,0.7235522904186396,-1.7976931348623157e+308];
const v2 = [1000.0,-2.125809189747375e+306,-1.0,Infinity,1000000000000.0];
[0.7073975508226777,63484.092624977,0.8319621191497446,5.417103850634103,-1000000000.0,-Infinity,-1.2499939271364109e+308,-4.197240907793301e+307,104841.98887450411,-1.0];
const v4 = [7.448118819994317,-1000000.0,-0.0,-3.0];
function f5(a6) {
    Reflect.construct(a6, [Reflect,v1], a6);
}
Object.defineProperty(v4, "g", { writable: true, enumerable: true, set: f5 });
v4.g = v4;
[7.7870922057741225,Infinity,-2.2250738585072014e-308,2.2250738585072014e-308,-0.0,-931500.1123185465,300.5828087687685];
8 >>> 8;
new Float64Array(8);
const v17 = new Float64Array(0);
try { v17.reduceRight(0); } catch (e) {}
try { new Uint8ClampedArray(v2, 0, v2); } catch (e) {}
new Uint8ClampedArray(90);
function f23(a24, a25) {
    for (let v27 in [-65535,536870889,4096]) {
        v27--;
    }
    for (let v29 = 0; v29 < 25; v29++) {
        v29 * v29;
    }
}
f23();
%OptimizeFunctionOnNextCall(f23);
f23();
