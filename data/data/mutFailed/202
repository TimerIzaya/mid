function f3() {
    return 2.8223598585315823;
}
class C4 extends f3 {
    toString(a6) {
        const o8 = {
            "get": f3,
        };
        const v9 = [-6.741855211610779,553.594505585577,1.0637276618206825e+308];
        class C10 {
            static [v9];
        }
        const v11 = [];
        function f12(a13) {
            const o17 = {
                ...v11,
                ...v11,
                "f": a13,
                set c(a15) {
                    a13[this != a15] <<= a15;
                },
            };
            return o17;
        }
        f12();
        new Proxy("raw", o8);
        try { this["raw"](f3, 2.8223598585315823, this, this, a6); } catch (e) {}
        const o25 = {
            ..."44184",
            [-15]: -15,
            2480: 9,
            ..."44184",
        };
        return "raw";
    }
    constructor(a27, a28) {
        try {
            a27.fuck(false, this);
        } catch(e31) {
        }
    }
    d = f3;
    /*
    constructor(a33, a34) {
        super();
        this[1303873293] &= 2.8223598585315823;
        let v35 = 2147483647n;
        v35 &&= 1024n;
        function f38() {
            return a34;
        }
    }
    */
    static [-2];
}
new C4(-1.3857378017016066e+308, 399.7725468078338);
new C4(-1.3857378017016066e+308, 399.7725468078338);
new C4(2.8223598585315823, -1.3857378017016066e+308);
this.__proto__;
[-10,15384,-268435456,1325747662,9007199254740990,129,674335274];
[10,-1996468755,127,-2147483648,13,268435440,512,3568,17337];
[-256,9007199254740991,4294967296,-4294967297];
new Date();
const t63 = "toString";
t63["toString"] = 3;
("65535").lastIndexOf(128, 3);
("toString").match();
const v1 = new WeakSet();
[5.37981096153086e+306,0.3142188728497166,v1];
const v7 = [0.3142188728497166,5.37981096153086e+306,[WeakSet,0.3142188728497166,5.37981096153086e+306],5.37981096153086e+306,0.3142188728497166];
function f11() {
    return -12;
}
function F12(a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = v7;
    } catch(e16) {
    }
    try {
        this.a = f11;
    } catch(e17) {
    }
    try {
        this.d = 0.3142188728497166;
    } catch(e18) {
    }
}
new F12(31966, -16);
new F12(-12, -12);
new F12(-16, -16);
class C25 {
    e;
    constructor(a27) {
        try {
            a27.toString = a27;
        } catch(e28) {
        }
        try {
            a27[a27] = f11;
        } catch(e29) {
        }
    }
    c = -3;
}
new C25(C25);
const v31 = new C25(C25);
const v32 = new C25(-2.0);
v32.c;
-65536n == -65536n;
1073741824 - 1073741824;
let v47;
try { v47 = new Uint32Array(9n, -3, -65536n); } catch (e) {}
new Uint32Array(4096);
v47.length;
const v53 = new C25();
v53.c = v53;
const o58 = {
    set b(a55) {
        Math.log10();
    },
};
o58.b = o58;
function f59() {
    const o60 = {
        __proto__: f59,
    };
    o60.arguments;
    return WeakMap;
}
f59();
new Int32Array(9);
new Uint16Array(120);
try { Array.bind(v31); } catch (e) {}
Array();
const v73 = new Int8Array(Array, 92, 485);
v73[277] = v73;
const v75 = 3666 - 3666;
v75 + v75;
const v79 = 0 < 1;
v79 && v79;
const v85 = ([1000,-14,16,-11,-1413918991,-16,-374255446,-14,1000,10]).sort();
try { v85.sort(-65536n); } catch (e) {}
BigInt64Array.g = BigInt64Array;
