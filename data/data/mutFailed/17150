Int32Array.length;
const v6 = new Int32Array(68);
v6[22];
67 | 67;
new Int32Array(67);
const v14 = new Int32Array(-65537);
v14[52] = v14;
Array.length;
new Array(4091);
10000 ^ 10000;
function F22() {
    if (!new.target) { throw 'must be called with new'; }
}
function f24(a25, a26) {
    function f27() {
    }
    /(u4(?:a?)*)/gudimsy;
    let v31;
    try { v31 = new Uint8Array(f24, Int32Array, Int32Array); } catch (e) {}
    const v32 = new Uint8Array(v31, f27);
    v32?.keys;
    try { new a25(); } catch (e) {}
    const v36 = new Uint32Array();
    for (let v37 = 0; v37 < 625; v37++) {
        const o45 = {
            ...v32,
            n(a41, a42) {
                v36[F22] = v36;
            },
            "b": f27,
            "maxByteLength": 10000,
            "g": Uint8Array,
            toString(a44) {
            },
        };
    }
    const o46 = {
    };
}
async function f48(a49, a50) {
    -a50;
    function F52() {
        if (!new.target) { throw 'must be called with new'; }
    }
    /2a\sc/uds;
    f24();
}
f48(F22, 4294967296);
