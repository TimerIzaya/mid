[-12152,-16,9,14,536870912];
const v1 = [-9223372036854775807,10,4096,-4,-962895904,46023];
[[772310621,-2147483647,4294967295,1024,536870889],[-50318],v1];
[9007199254740992];
new Int8Array(1446);
new Float64Array(1879);
new Float32Array(129);
class C20 {
}
async function f21(a22, a23, a24, a25) {
    await C20;
    return a24;
}
f21();
const v32 = [-2147483647,64098,-9383,1024,129,-5];
function f33(a34, a35) {
    new Date();
    return v1;
}
Object.defineProperty(v32, Symbol.toPrimitive, { writable: true, enumerable: true, value: f33 });
[1000,-16,-38597,12,-3399,32508];
const v41 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v43 = new Uint32Array();
new Uint8Array([749138.7740098275,-413.55890355139604,-2.0,5.0,4.0,1.7976931348623157e+308,1.0,5.956393081352694]);
Date.valueOf = f21;
const v48 = new Date(Date);
const v50 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v51 = [601759695];
const v52 = [1073741824,1073741823,1376142744,1073741825];
function f54(a55, a56, a57, a58) {
    function f60() {
        let v63 = Float64Array;
        v63 = a56;
        b = v51;
        v41.length;
        try {
            v52.forEach(a56);
        } catch(e66) {
        }
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o68 = {
        };
        const o83 = {
            "c": -4294967297n,
            "c": v51,
            valueOf(a71, a72) {
            },
            1073741824: v43,
            "maxByteLength": -268435456,
            "b": -4294967295,
            [-4294967297n](a74, a75, a76, a77) {
                class C79 extends Date {
                    static get c() {
                    }
                }
                eval();
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v50,
            256: a58,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            6: -268435456,
        };
    }
    f60();
    const v86 = new Int8Array();
    v86.buffer.slice(2147483648);
    const v92 = new Int32Array(1024);
    v92[3];
    for (let v94 = 0; v94 < 10; v94++) {
    }
    %OptimizeFunctionOnNextCall(f60);
    let v96;
    try { v96 = v52["find"](..."find", a58, ...v51, ...v52, ...522675525n); } catch (e) {}
    v96 <= a57;
    return arguments;
}
for (let v98 = 0; v98 < 10; v98++) {
    f54();
}
%OptimizeFunctionOnNextCall(f54);
f54();
[-50328,-14,3,128,-11,64,-65535];
class C102 {
    [v32] = -1000000.0;
    constructor(a104, a105, a106, a107) {
        this.toString = f54;
        %VerifyType(a107);
        super[this];
    }
    g;
    c;
    #toString(a110, a111, a112) {
    }
    1 = 257n;
}
new C102(1073741825n, 1.0, 7.589647165982214);
const v114 = new C102(411585671n, -1000000.0, -1000000.0, 1.0);
new C102(v114, -1000000.0, 1.0);
/(?:a*)+bU\u0034xyz{1,32}/udi;
/vfoo|(bar|baz)|quux/gvds;
/JO/gvy;
class C121 {
    #m(a123, a124) {
        function f125() {
            return a124;
        }
        super[a124] = "f";
        %VerifyType(a124);
        return f125;
    }
    static c;
}
try { C121(); } catch (e) {}
const v127 = new C121();
const v128 = new C121();
v128?.constructor;
const v130 = new C121();
function f131() {
    v48[8] = v32;
    function f133(a134, a135, a136) {
        return null;
    }
    return v43;
}
v130.constructor = f131;
v130?.constructor;
class C138 {
    p(a140) {
        this.g ^= this[8];
    }
    static #n(a143, a144, a145, a146) {
    }
    7 = v130;
    #a = v128;
}
const v147 = new C138();
v147[7] = v147;
const v148 = new C138();
v148[7] = v148;
const v150 = [[],"f",v130,381717.6504737276];
const v152 = [Float32Array];
v152[Symbol.isConcatSpreadable] = v152;
v152["concat"]().includes(Float32Array);
[v127];
function F159() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.propertyIsEnumerable(); } catch (e) {}
}
new F159();
const v163 = new F159();
function F164(a166, a167) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor = f33;
    const v168 = a167?.__lookupGetter__;
    try { v168(); } catch (e) {}
    try { this.constructor(F164, this); } catch (e) {}
    a166.e = a166;
}
F164.arguments = F164;
new F164(v163);
("Hyo9")[1];
const t167 = "at";
t167[1] = "at";
const v176 = ([1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0])?.groupToMap;
function f177() {
    new Uint32Array(Uint32Array, Uint32Array);
    return Uint32Array;
}
v176.constructor = f177;
v176?.constructor;
const v181 = [-4.202468609045087];
try { v181.every(v150); } catch (e) {}
[0.8434386161503777];
("4i")?.toWellFormed;
const t179 = "4i";
t179[1] = "4i";
const t183 = "RpXR";
t183[3] = "RpXR";
const t185 = "RpXR";
t185[1] = "RpXR";
("c")?.toLocaleUpperCase.length;
class C191 {
    constructor(a193) {
        ("valueOf").localeCompare(a193, "valueOf");
    }
}
const v195 = new C191();
v195.constructor = f131;
const t195 = v195.constructor;
new t195(C191);
