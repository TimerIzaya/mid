const v1 = new WeakSet();
-40059 - -40059;
-40059 >>> -40059;
536870889 * 536870889;
let v10 = -13n;
const v11 = v10--;
const v13 = new Set();
try { v13.add(536870889); } catch (e) {}
[-5.0,-1000000000.0,0.2461606996340573,-5.517053818735165,-2.2250738585072014e-308,5.0];
const v16 = [667.2535654340415,7.053930656862704,-296588.7496568777,0.3128318634042514,-1000.0,6.124436878515944];
try { v16.lastIndexOf(v11); } catch (e) {}
const v19 = ([5.0,7.912230543773959e+307,-3.0,1000000000.0])[3];
v19 + v19;
const v22 = [-1024,536870889,65536,65536];
v22[3] = v22;
try { v22.copyWithin(v22, v1); } catch (e) {}
function f24(a25, a26) {
    return a25;
}
const v29 = [295968041,v22];
const o30 = {
    "arguments": v29,
    "type": "function",
};
const v31 = new Worker(f24, o30);
try { v31.terminateAndWait(); } catch (e) {}
