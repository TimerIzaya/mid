class C3 {
    16;
    static {
        this.g = this;
        let v5;
        try { v5 = this.bind(2.2250738585072014e-308); } catch (e) {}
        v5.name;
        let v7;
        try { v7 = new this(NaN, "5"); } catch (e) {}
        const v9 = this != this;
        [10];
        [255];
        const v12 = [-3189,-14];
        super.d;
        try { ("minor").toLocaleUpperCase(); } catch (e) {}
        const t15 = "async";
        t15[2] = "async";
        const o17 = {
            "execution": "async",
            "type": "minor",
        };
        const v18 = o17?.__lookupSetter__;
        v18.length = v18;
        let v19;
        try { v19 = new v18(v7); } catch (e) {}
        const v20 = gc(o17);
        let v21;
        try { v21 = v20.then(v12, v9); } catch (e) {}
        try { v21.finally(v19); } catch (e) {}
    }
    ["5"];
    [2.2250738585072014e-308] = 2.2250738585072014e-308;
}
C3.prototype = C3;
C3.prototype = C3;
const v23 = new C3();
v23[16] = v23;
const v24 = new C3();
v24[16];
v24[16] = v24;
const v26 = new C3();
v26[16];
function F28(a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    a31[0] = a31;
    try {
        this.a = a31;
    } catch(e32) {
    }
    try {
        this.g = C3;
    } catch(e33) {
    }
}
const v34 = new F28("5", "5");
const v35 = v34?.g;
try { new v35(); } catch (e) {}
const v37 = new F28(v26, v24);
const v38 = v37?.g;
try { new v38(); } catch (e) {}
const v40 = v37?.g;
try { new v40(); } catch (e) {}
try { v37.codePointAt(v37, v37, v26); } catch (e) {}
C3[v24];
v37 === v37;
C3.e;
const v47 = new F28(v26, v24);
const v48 = v47?.__defineGetter__;
try { new v48(v34, v23); } catch (e) {}
-9223372036854775808 / -9223372036854775808;
const v58 = "o" == "o";
v58 && v58;
const o77 = {
    get f() {
        try {
            new C3();
        } catch(e65) {
            function F66(a68, a69, a70) {
                if (!new.target) { throw 'must be called with new'; }
                const v72 = new Int8Array();
                v72.buffer.slice(a69, a69).transferToFixedLength();
            }
        }
        this.b -= NaN;
        super.n();
        return isFinite;
    },
};
o77.a = o77;
e = 4984;
