const v2 = new Uint8ClampedArray(1503);
new Float64Array(127);
v2[5] &&= Uint8ClampedArray ** Uint8ClampedArray;
const v8 = [-1844428175,-268435456,-49321,-2147483649,129,65537,64,2147483647];
const v9 = [7,-43596,-590764396,-9007199254740991,-2037696641,-987791512];
[-9223372036854775807,-1024,7,6,-14,4,1583143544,4294967297];
const v12 = new Int8Array(204);
let v17;
try { v17 = ("60ZAE").search(v2); } catch (e) {}
try { v17(v2, 127, v17, ..."object"); } catch (e) {}
let v19 = new v17();
const v23 = [2147483649,-62399];
const v25 = Symbol.unscopables;
v19 ||= v19;
const o26 = {
};
try {
    try { v25.m(Int8Array, v8, v19, v25, -780660258); } catch (e) {}
    const o31 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o31);
    o26.a = 1503;
} catch(e33) {
}
let v34 = 268435440n;
~v34;
--v34;
try {
    const o42 = {
        n(a38, a39, a40, a41) {
            super[a38] = a41;
            return this;
        },
        [v17]: Set,
    };
    o42.a = 1503;
    o42.g = v9;
} catch(e43) {
}
try {
    const o44 = {
    };
    o44.a = 1503;
    o44.g = v9;
    o44.d = v12;
} catch(e45) {
}
try {
    const o46 = {
    };
    o46.a = 1503;
    o46.g = v9;
    o46.d = v19;
} catch(e47) {
}
v23[v25] = v23;
