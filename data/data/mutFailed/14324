class C1 {
}
new C1();
const v6 = new Float64Array(6);
v6["toLocaleString"](Int32Array, 6);
const v11 = [-0.6149395169662668,2.264458813811361e+307,-945.2801378445339];
const v12 = [1000000.0,265384.07224241644,1.7976931348623157e+308,0.012515925346037848,-1e-15,-842.4349190644589,0.49749563044172784,-2.0];
class C13 {
}
const v14 = new C13();
new C1(v14, v12, v11, v11);
new Uint8ClampedArray(6);
new Date();
new Uint8ClampedArray(14);
new BigInt64Array(16);
class C25 {
}
function f26(a27, a28, a29) {
    do {
    } while ((() => {
            const v32 = 2147483648 < 7;
            !v32;
            return v32;
        })())
    f26();
    return a27;
}
const v38 = new f26();
function f39(a40, a41, a42, a43) {
    const o46 = {
        "e": v38,
        ...a40,
        "d": a40,
        [v38]: a43,
        "g": 579720983,
        256: "getInt32",
        set b(a45) {
        },
        "b": a42,
        ...v38,
        "f": a42,
        "c": f26,
    };
    return o46;
}
f39(f39());
f39();
BigInt64Array.prototype = BigInt64Array;
const v51 = new BigInt64Array(16);
let v52 = "valueOf";
const v53 = [-2080736032,-38952,129,0];
const v55 = new Uint8Array(Uint8Array);
function f56(a57, a58, a59, a60) {
    v52++;
    const o62 = {
        ...v55,
    };
    o62[2] = o62;
    const v63 = v53[1];
    try { o62.n(v63, a60, a60, v63, a60); } catch (e) {}
    return o62;
}
for (let v65 = 0; v65 < 500; v65++) {
    f56();
}
v51.BYTES_PER_ELEMENT = v51;
Symbol.unscopables;
Symbol.for(Symbol);
