const v3 = [3,-4294967296,255,-10,10];
const v4 = [-6,65535];
[268435441,-1894462686,9007199254740990,-993764000,-5,206889513];
const v6 = [268435441,-268435456,-1374625560,-7,-9007199254740991,0,-4294967296,129];
const v8 = new Float64Array(Float64Array, Float64Array, Float64Array);
new Uint8Array(1010);
let v12;
try { v12 = v8.filter(v8); } catch (e) {}
const o13 = {
    268435439: Uint8Array,
    ...v12,
};
[13,-9223372036854775808];
const v15 = [-250687858,9223372036854775807,-824385371,-11492,1779472960,1073741824,2147483648,663533914,1359976805,-1];
new Array(44);
const v19 = [9223372036854775807,v15,Array,44,-428824916];
[-9007199254740991,v4,v19,v15];
[v12,v19];
function F22(a24, a25, a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    const v28 = v3.constructor;
    try { new v28(v28, a27); } catch (e) {}
    for (const v31 in v6) {
    }
}
new v12();
