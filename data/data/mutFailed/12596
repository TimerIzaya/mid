let v0 = 4;
new BigInt64Array(v0);
const v4 = 16 << 16;
new Int8Array(16);
const v9 = new BigInt64Array(128);
class C10 {
    n(a12, a13, a14) {
        -v9;
        !v0;
        let v19 = ~128;
        ~128;
        v0--;
        +v0;
        v19++;
        return 16;
    }
}
new C10();
new C10();
new C10();
function f27() {
    const o33 = {
        8: 0.043152456200264866,
        get a() {
            this[8];
            Math.acos(0.043152456200264866);
        },
    };
    return o33;
}
const v34 = f27();
const v35 = f27();
function F37(a39, a40, a41, a42) {
    if (!new.target) { throw 'must be called with new'; }
    a40[8];
    this.d = 257;
    this.h = a40;
    function f44(a45, a46, a47, a48) {
        Object.defineProperty(arguments, 4, { writable: true, enumerable: true, value: 16 });
        arguments[4] = arguments;
        return f44;
    }
}
function f50() {
    function f51() {
        class C52 {
            static get g() {
                try {
                    var a = super.subarray();
                } catch(e55) {
                }
            }
        }
        return v4;
    }
    return f51;
}
Object.defineProperty(F37, "valueOf", { get: f50 });
F37.caller = F37;
const v56 = new F37(v35, v34);
function f57() {
    return BigInt64Array;
}
function f58(a59) {
    [-1e-15,-4.0,407869.0148525499,-110.1836724588137,-731.205380943286,6.9304599334371275,768.913757967746,-3.0,-7.124696305918674e+307];
    [0.8750902189110089,1.0,5.434372875188318,3.9409831980083836e+307,1000000000000.0,NaN];
    [-6.69676943787386,-2.2250738585072014e-308,-3.0];
}
Object.defineProperty(v56, "toJSON", { writable: true, get: f57, set: f58 });
function f64(a65, a66, a67) {
    function f69(a70) {
    }
    a65[1] = a67;
}
Worker.e = Worker;
try { ("function").split("function", F37); } catch (e) {}
const v74 = [v56];
const o75 = {
    "arguments": v74,
    "type": "function",
};
const v76 = new Worker(f64, o75);
try { v76.terminateAndWait(); } catch (e) {}
