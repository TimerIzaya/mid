class C3 {
    static {
        const t2 = "number";
        t2[6] *= 40929;
        const v5 = ("number").__proto__;
        function f6() {
            return v5;
        }
    }
    [-510.64625407657394] = 40929;
    #b = 40929;
    static 4 = -510.64625407657394;
}
new C3();
new C3();
new C3();
class C10 {
    valueOf(a12, a13, a14, a15) {
        C3 * this;
        const v17 = new C3();
        let v18;
        try { v18 = v17.p(); } catch (e) {}
        a15[8] += -510.64625407657394;
        try { new v18(a15, C3, a14, a13); } catch (e) {}
        return a15;
    }
    #d;
    static f;
}
new C10();
function F21(a23, a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
}
const v27 = new F21(F21, F21, F21, F21);
const v30 = -1.7976931348623157e+308 & -1.7976931348623157e+308;
function f31() {
    const v33 = new Uint8ClampedArray("minor", v30, v30);
    v33[1];
    return v27;
    const v35 = [Uint8ClampedArray,Uint8ClampedArray];
    for (let i37 = 0; i37 < 2;) {
    }
    class C43 extends v35.constructor {
        constructor(a45, a46, a47, a48) {
        }
        /*
        constructor(a50) {
            "atan2" ** "minor";
        }
        */
    }
    return -1.7976931348623157e+308;
}
%PrepareFunctionForOptimization(f31);
f31();
%OptimizeFunctionOnNextCall(f31);
f31();
new C10();
new C10();
const v58 = [0.6962759092984843];
let v59 = [4.55590263310031,1e-15,2.220446049250313e-16,4.0,3.0];
class C60 {
    constructor(a62, a63, a64, a65) {
        v59 = a63;
    }
}
const v66 = new C60(v58, C60, C60, v58);
new C60(v58, v58);
class C68 {
    constructor(a70, a71) {
        v59.unshift(v66, a71, [this,this]);
    }
}
new C68();
new C68();
