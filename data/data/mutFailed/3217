const v2 = new BigInt64Array(221);
let v3 = 10;
v3++;
Float64Array.length;
const v7 = new Float64Array(v3);
const v8 = v7?.constructor;
try { new v8(v7, v2, Float64Array); } catch (e) {}
new Float64Array(3);
function f19() {
    const o31 = {
        m(a21) {
            3938 & 3938;
            Int8Array.name = Int8Array;
            const v25 = new Int8Array(3938);
            let v26 = 3;
            let v27 = 0;
            v27 >> Float64Array;
            for (let i = 0; i < 5; i++) {
                [...v26] = v25;
                v27++;
            }
            const o30 = {
            };
            o30.h = o30;
        },
    };
    o31.m(o31, o31, o31, f19, f19);
    return o31;
}
const v34 = f19()?.m;
try { new v34(v2); } catch (e) {}
const t31 = 4096n;
t31();
try {
const t0 = 6;
t0(6, 6);
} catch (e) {}
