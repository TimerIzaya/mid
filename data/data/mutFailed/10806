const v0 = [];
function f4() {
    return 4096;
}
new Uint8ClampedArray(2);
const v10 = new Uint32Array(4);
const v13 = new Uint8ClampedArray(128);
const v14 = [];
let v16 = -13;
let v17 = -1000000000000.0;
--v17;
const v19 = v16++;
v19 >>> v19;
const v21 = v13 & v16;
v16 * v19;
class C23 {
    #g = v0;
    g;
    static 3 = v13;
    10 = v21;
    static [v21] = Uint32Array;
}
const v24 = new C23();
const v25 = /\xf0\x9f\x92\xa9a*/us;
try {
    v10.__proto__ = v14;
} catch(e27) {
}
/(?:a+)*/vy;
/[a-zA-Z0-9][aBca??(x)(x)(x)\1*]/udsy;
/K[\ca]/gus;
function F32(a34, a35, a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    const v38 = this?.constructor;
    try { new v38(a35, v14, -1263139894, a35); } catch (e) {}
    const v40 = a37?.constructor;
    try { new v40(v24); } catch (e) {}
}
new F32(v25, 1, -1263139894, F32);
new F32();
