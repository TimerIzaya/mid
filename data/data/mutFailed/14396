let v2 = "-256";
class C3 {
    valueOf(a5, a6) {
        const v7 = [-4.0,-187.33463400009316,266767.34688113444,551749.9695726107];
        function f8() {
            return v7;
        }
        v7.constructor = f8;
        const v9 = /(?:a*)+q(?<a>.)/guds;
        function f10() {
            new Int16Array([-1.7976931348623157e+308,1000000.0,-Infinity,1000000.0,1e-15,4.0,0.05361702581874339,2.220446049250313e-16,-384803.16239734297]);
            return this;
        }
        v9.constructor = f10;
        function f14(a15) {
            a15.constructor;
            class C17 {
            }
            return f14;
        }
        for (let v18 = 0; v18 < 50; v18++) {
            const t21 = f14(v9);
            t21(v7);
        }
        return Reflect.construct(a5, [this,-4,a6,v2,f14,v2], a5);
    }
    static #g;
    static #c;
    n(a25, a26) {
        function f27(a28) {
            const v30 = new Float64Array();
            function f31() {
                for (let v32 = 0; v32 < 10; v32++) {
                    const v34 = Math.expm1(v30);
                    v34 >> v34;
                }
            }
            f31();
            return f31;
        }
        a26[Symbol.toPrimitive] = f27;
        const v39 = delete this[2];
        super[a26] = v39;
        const v40 = [-1000.0,1000000000.0];
        const v41 = [0.0,-605.6883350474525,-2.2250738585072014e-308,2.8064173070154015e+307,-0.0,NaN,-1.7976931348623157e+308,-1.7976931348623157e+308,1.1567619127528594,2.2250738585072014e-308];
        function f46(a47, a48) {
            function f49(a50) {
                function f51() {
                    const v54 = Array();
                    v54[0] = f51;
                    return v54.unshift(3);
                }
                f51();
                return a48;
            }
            a48.constructor = f49;
            const o57 = {
                [1026562184n]: 8n,
                __proto__: v41,
                [37369]: a48,
                [a47]: a47,
                ...a47,
                5: v40,
                ...v40,
            };
            return o57;
        }
        f46(26724, C3);
        try {
            v2.toString = a25;
        } catch(e59) {
        }
        return v39;
    }
}
const v60 = new C3();
function f61(a62, a63) {
    return v60;
}
v60.constructor = f61;
try { v60.valueOf(-1309427400, v2); } catch (e) {}
const v68 = new C3();
try { v68.n(v68, v60); } catch (e) {}
const v70 = new C3();
function f71(a72) {
    return -(delete a72?.[a72]);
}
v70[Symbol.toPrimitive] = f71;
function f83(a84, a85) {
    function f86(a87) {
        const v91 = --v2;
        const v92 = !f61;
        f61 % a87;
        v91 - v92;
        return 16266n;
    }
    a84.toString = f86;
    function f95(a96) {
        const o99 = {
            "maxByteLength": 2183704445,
        };
        const v101 = new SharedArrayBuffer(13, o99);
        const v103 = new Int16Array(v101);
        return v103;
    }
    a85.toString = f95;
    a84--;
    const v105 = a85?.constructor;
    try { new v105(); } catch (e) {}
    const o121 = {
        "e": a85,
        [v70](a108, a109, a110, a111) {
            C3[9] &= 9;
            let {"e":v112,} = this;
            super[9007199254740990n];
            [-1,473188698,6,-9007199254740991,2147483648,-2,-5300,1016918525,2416];
            [12,-9223372036854775807,-1073741824,64,4];
            [0,4,640289515];
            return -1309427400;
        },
        "c": -4,
        10: a85,
        "f": a85,
        "d": 268435441,
        "a": 16266n,
        o(a118, a119) {
            class C120 {
            }
            return v2;
        },
        "b": a84,
    };
    return o121;
}
function f122() {
    return -1000000.0;
}
f83.valueOf = f122;
try { f83(268435441, v60); } catch (e) {}
f83(268435441, v70);
f83(1073741823n, C3);
f83(f83, v60);
12 | 12;
try { new Array(Array); } catch (e) {}
function f135() {
    const v136 = [f135,f135];
    v136.constructor = Symbol;
    const v137 = v136.constructor;
    const v138 = new v137();
    class C139 extends v137 {
    }
    try { new C139(); } catch (e) {}
    const v141 = new C139();
    try { v141.reduceRight(); } catch (e) {}
    return v138;
}
f135();
Array(12, -10);
