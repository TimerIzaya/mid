new Uint16Array(256);
new Float64Array(0);
new Uint8Array(127);
function f9() {
    return Uint16Array;
}
new Array(3);
new Map();
new Map();
function f19(a20, a21, a22, a23) {
    const o24 = {
    };
    return o24;
}
f19("string", "string");
const v26 = f19("m", "m");
let v29 = 129;
v29++;
new Float32Array(v29);
try { new BigInt64Array(v26, 16, Map); } catch (e) {}
new BigInt64Array();
~-4294967297n;
const v40 = [601759695];
let v41;
try { v41 = v40.sort(); } catch (e) {}
[1073741824,1073741823,1376142744,1073741825];
function f43(a44, a45, a46, a47) {
    function f49() {
        -268435456 + 256;
        -a44;
    }
    const v53 = v41();
    const v55 = new Int8Array();
    v55.buffer;
    %OptimizeFunctionOnNextCall(f49);
    try { v53.strike(); } catch (e) {}
    try {
    } catch(e59) {
    }
    const o60 = {
    };
    o60.g = -4294967297n;
    const o61 = {
    };
    o61.g = -4294967297n;
    o61.d = a47;
}
f43();
%PrepareFunctionForOptimization(f43);
f43();
%OptimizeFunctionOnNextCall(f43);
f43();
