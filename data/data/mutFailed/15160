function f0() {
    ([127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649]).toSpliced();
    for (let [v6] of "Opx24") {
    }
    const o13 = {
        [-1.6790300553283598e+308](a9) {
            for (let v10 = 0; v10 < 32; v10++) {
                this["p" + v10] = v10;
            }
            return this;
        },
        "g": 267.99927928782427,
        "c": 267.99927928782427,
        "e": -1.6790300553283598e+308,
        [-1.6790300553283598e+308]: -1.6790300553283598e+308,
        "d": 47854,
        "h": 47854,
    };
    function f14() {
        function f15(a16, a17) {
            for (let v18 = 0; v18 < 500; v18++) {
                class C20 {
                }
                const v23 = new Int32Array(v18, v18, 257);
                let v25 = new Map();
                [...v25] = v23;
            }
            return 267.99927928782427;
        }
        return f15;
    }
    Object.defineProperty(o13, Symbol.toPrimitive, { get: f14 });
    const v28 = [1073741824,1073741823,1376142744,1073741825];
    function f29(a30, a31, a32, a33) {
        function f34() {
            try {
                v28.forEach();
            } catch(e36) {
                const v39 = 26577 ^ a33;
                Math.expm1();
                !v39;
            }
            return f29;
        }
        f34();
        for (let i45 = 0, i46 = 10; i45 < i46; i46--) {
        }
        eval();
        %OptimizeFunctionOnNextCall(f34);
        return v28;
    }
    for (let v55 = 0; v55 < 5; v55++) {
        f29();
    }
    return o13;
}
const v57 = f0();
const v58 = f0();
const v59 = f0();
const v63 = [2.012316431710463];
const v64 = [v57,f0,v59,v63];
const v65 = [v64,v59];
function f66(a67, a68, a69, a70) {
    const o79 = {
        get d() {
            try {
                const v72 = [v57,v65,2.012316431710463,v63,a70];
                class C73 {
                }
                const t69 = [C73];
                t69.length = 18074;
                this.fuck(a67, v65, v72);
            } catch(e77) {
            }
            this[v57];
            Object.defineProperty(this, this, { configurable: true, enumerable: true, set: f0 });
            return v65;
        },
        __proto__: a70,
        "g": a70,
        "c": v65,
        ...a70,
    };
    return o79;
}
const v80 = f66(v64, v65, 1000000000000.0, v59);
const v81 = f66(v64, v63, 1000000000000.0, v58);
v81.toString = f0;
f66(v65, v64, 0.058679779235704776, v57);
function f83() {
}
let v84 = 1000.0;
class C85 {
    static {
        ++v84;
    }
    static set g(a91) {
        v80[v63] **= 0.058679779235704776;
    }
    [v81];
    16;
}
new BigUint64Array(0);
new BigInt64Array(257);
function f103(a104) {
    return f103;
}
class C105 {
    static {
        try { f103(...this); } catch (e) {}
    }
    static 4294967296;
}
const t113 = /P[x\dz]*/gudmy;
t113.multiline **= 1000;
Math.tanh();
const v116 = new Uint8ClampedArray(3);
class C117 {
    constructor(a119, a120, a121, a122) {
        function f123(a124) {
            const v125 = [1868255996,1,2,9007199254740992];
            try { v125.includes(undefined, -4934n); } catch (e) {}
            return Uint8ClampedArray;
        }
        a122[Symbol.toPrimitive] = f123;
        this.g;
        try {
            new f103(2147483648);
        } catch(e134) {
        }
        const v135 = this.constructor;
        try { new v135(3983, a122, this, this); } catch (e) {}
        for (let v137 = 0; v137 < 5; v137++) {
            v116[v137] = a122;
        }
    }
}
new C117();
