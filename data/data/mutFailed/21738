function f0() {
    let v1 = 9.261870135034783e+307;
    v1[2147483648] = v1;
    const v4 = Array(4087);
    const o11 = {
        set b(a6) {
        },
        toString(a8, a9) {
            return a8;
        },
        get d() {
            return v4;
        },
    };
    let v12 = -1.4843729150458373e+308;
    let v13 = 1;
    const o30 = {
        [v13]: v12,
        "e": v13,
        "f": v12,
        9: v12,
        "b": v1,
        2: v1,
        "h": v12,
        [v13](a15, a16) {
            a16[536870887] = 32668;
            ({"b":v1,"f":v12,} = this);
            let v20;
            try { v20 = v12(v1, v12, v1, 7); } catch (e) {}
            return v20;
        },
        toString(a22, a23, a24) {
            return 4087;
        },
        next() {
            v13--;
            const v28 = v13 == 0;
            const o29 = {
                "done": v28,
                "value": v13,
            };
            return o29;
        },
    };
    return o30;
}
f0();
f0();
const v33 = f0();
v33[Symbol.toPrimitive] = f0;
const v36 = /IIa\bc/gud;
Object.defineProperty(v36, Symbol.toPrimitive, { value: f0 });
const v39 = /[W[\0]*]/dsy;
const v40 = /(?<=a)(\xed\xb0\x80)\x01?/vdy;
class C41 extends f0 {
    constructor(a43, a44, a45, a46) {
        super();
        v33 * f0;
    }
    [v36];
    c;
    65537;
    static 3259 = f0;
    [v33];
    /*
    constructor(a52, a53) {
        function f54(a55) {
            function f57(a58) {
                return a58;
            }
            this.onmessage = f57;
        }
        const o61 = {
            "type": "function",
        };
        new Worker(f54, o61);
    }
    */
}
new Map();
for (let v65 = 0; v65 < 25; v65++) {
    const v68 = new Int8Array();
    for (const v69 in v68) {
    }
}
const v70 = new C41(v39, C41, v40, v39);
const v71 = new C41(v40, v33, v36, v70);
new C41(v39, v36, v36, v71);
[-2.220446049250313e-16,459.0521021055172,-225.02178437319878,6.703052263267946,-3.7248003553907,-0.0,-0.7759647474037212,-1.846119699618409e+307];
[0.7705178048501183,1.0,1.0];
[-688765.1070886262,0.9332259532770705,0.7130638932005243];
function f76(a77) {
    return a77;
}
function F78() {
    if (!new.target) { throw 'must be called with new'; }
}
const v84 = new Int8Array(9);
v84.indexOf(-9);
