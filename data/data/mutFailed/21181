function f0() {
    -885508275 - -885508275;
    for (let v7 = 0; v7 < 32; v7++) {
        const v9 = "p" + v7;
        v9.length;
        const t4 = "0J";
        t4[v9] = v7;
    }
    65537 === 65537;
    65537 / 65537;
    const o14 = {
        "c": "0J",
        ["0J"]: "3",
        "g": 65537,
        __proto__: "0J",
        "e": 65537,
        ..."3",
        "a": "3",
        "f": 65537,
        3: f0,
        "h": "3",
        "b": -5,
        5: "3",
        ..."0J",
        "b": "3",
        [65537]: "0J",
    };
    o14.0J;
    o14[3];
    return o14;
}
const v17 = f0();
f0();
f0();
try { ("transfer").trimStart(); } catch (e) {}
try { ("e").trimLeft(); } catch (e) {}
let v25;
try { v25 = ("o").trimRight(); } catch (e) {}
const v26 = v25?.constructor;
try { new v26(v25); } catch (e) {}
function F28(a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    a31[1] = a31;
    const v32 = a30?.search;
    const v33 = v32?.__lookupGetter__;
    try { new v33(v25); } catch (e) {}
    try { new v32(f0); } catch (e) {}
    a31.b = a31;
    try {
        this.a = a31;
    } catch(e36) {
    }
    try {
        this.d = a31;
    } catch(e37) {
    }
    try {
        this.b = v17;
    } catch(e38) {
    }
}
F28.d = F28;
new F28("e", v17);
const v40 = new F28(F28, v17);
new F28(v40, v17);
for (let v42 = 0; v42 < 25; v42++) {
    ~v42;
    function f44(a45, a46, a47, a48) {
        let v49 = 10;
        for (;
            (() => {
                const v50 = v49--;
                v50 % v50;
                return v50;
            })();
            ) {
        }
    }
    for (let v52 = 0; v52 < 10; v52++) {
        f44();
    }
}
