class C3 {
    static [0];
    static [4092] = 0;
    e;
    167;
    constructor(a5, a6) {
        const v7 = a5?.[0];
        const v8 = v7?.b;
        v7?.f;
        let {"f":v10,...v11} = v8;
        a5[Symbol.replace];
    }
}
const v15 = new C3(0, 4092);
const v16 = new C3(v15, 1024);
new C3(0, 4092);
function f18(a19, a20) {
    const o25 = {
        [v15](a22, a23) {
            try {
                a23.e = a23;
            } catch(e24) {
            }
            return this;
        },
        "d": a19,
        "h": a20,
        "g": a19,
        "f": C3,
    };
    return o25;
}
f18(v16, 0);
f18(v16, 0);
f18(v16, 1024);
const v30 = new Float32Array(Float32Array);
for (let v31 = 0; v31 < 25; v31++) {
    const v32 = [1073741824,1073741823,1376142744,1073741825];
    function f33(a34, a35, a36, a37) {
        function f39() {
            return Float32Array;
        }
        try { f39(); } catch (e) {}
        const v43 = new Int8Array(v30, a36, v31);
        function f44(a45, a46) {
            return v30;
        }
        f44(v32, a36);
        v43.buffer;
        %OptimizeFunctionOnNextCall(f39);
        try { v32["find"](); } catch (e) {}
        return arguments;
    }
    for (let v51 = 0; v51 < 10; v51++) {
        f33(v30, v31, v51, Float32Array);
    }
}
