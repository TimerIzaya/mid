class C3 {
    #n(a5, a6) {
        const v8 = super[a5]?.c;
        try {
            v8.valueOf = v8;
        } catch(e9) {
        }
        return v8;
    }
    [55820] = 10;
}
const v10 = new C3();
const v11 = new C3();
const v12 = new C3();
class C13 {
    static #p(a15, a16, a17, a18) {
        [a16,v12,a15,v10];
        const v20 = [a16,this];
        [C3,a18,v20,v20,55820];
        return v11;
    }
    static #toString(a23, a24) {
        return a23;
    }
    a;
    static #h = C3;
    10;
    static #g = v11;
}
new C13();
new C13();
new C13();
const v31 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v34 = new Uint32Array();
const v36 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v37 = [601759695];
const v38 = [1073741824,1073741823,1376142744,1073741825];
function f40(a41, a42, a43, a44) {
    class C47 extends a43.constructor {
        static f = 55820;
    }
    new C47();
    function f49() {
        a44 = f49;
        [0.03918998882888891,-5.659615927590211,1.2811946526468621e+308,4.0,-1000.0,910.8957891725017,0.12055288903213313,2.0];
        [-7.879116122013964e+307,-Infinity];
        arguments == [-2.2250738585072014e-308,1000000000000.0,0.0,2.220446049250313e-16,0.1817493037725736,452.152189468954,5.0,-341.61154733451247];
        let v56 = Float64Array;
        v56 = a42;
        b = v37;
        const v57 = v31.length;
        try {
            v38.forEach(a42);
        } catch(e59) {
        }
        const v60 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        Symbol.toPrimitive;
        const v63 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
        const o64 = {
            ...v63,
        };
        function f65() {
            const v67 = new ArrayBuffer(ArrayBuffer, ArrayBuffer);
            return v67;
        }
        %OptimizeFunctionOnNextCall(f49);
        const o73 = {
            toString(a69, a70) {
                const v71 = a44 && a42;
                a69 *= a70;
                v71 <= v60;
            },
        };
        const o98 = {
            "c": -4294967297n,
            [522675525n](a76, a77) {
            },
            "c": v37,
            valueOf(a79, a80) {
            },
            [v57](a82) {
            },
            [-1]: 2684,
            1073741824: v34,
            "maxByteLength": -268435456,
            "b": -4294967295,
            [v56](a84, a85, a86, a87) {
                class C89 extends Date {
                    static get c() {
                        eval();
                    }
                }
                for (let v93 = 0; v93 < 5; v93++) {
                    continue;
                }
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v36,
            set b(a95) {
            },
            256: a44,
            m(a97) {
            },
            ...v37,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": v11,
            "type": "Vre",
            5: -4294967295,
            6: 55820,
        };
    }
    f49();
    const v101 = new C3();
    v101.buffer.slice(2147483648);
    %OptimizeFunctionOnNextCall(f49);
    let v106;
    try { v106 = v38["find"](..."find", a44, ...v37, ...v38, ...522675525n); } catch (e) {}
    v106 <= a43;
    return arguments;
}
for (let v108 = 0; v108 < 10; v108++) {
    f40();
}
%OptimizeFunctionOnNextCall(f40);
f40();
