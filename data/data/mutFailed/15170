function f0() {
    const o38 = {
        n(a5) {
            -7.435119635398658e+307 >>> -5529;
            function F7(a9, a10, a11, a12) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.d = "valueOf";
                } catch(e13) {
                }
                try {
                    this.b = a12;
                    const v15 = new BigUint64Array();
                    try { v15.fill(); } catch (e) {}
                    return 4;
                } catch(e18) {
                }
                try {
                    this.e = a5;
                } catch(e19) {
                }
            }
            const v20 = new F7("valueOf", "valueOf", F7, -7.435119635398658e+307);
            new F7(F7, v20, this, -5529);
            const v22 = [Infinity,1.0,-1.2272545370579378e+308,-1000000.0,5.0,1.7976931348623157e+308,5.0];
            function F23() {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    const v27 = Array(19793);
                    for (const v28 of v27) {
                    }
                    [v27,v27,v27];
                    [[]] >= Uint16Array;
                } catch(e34) {
                    [];
                    v22.findLastIndex;
                }
            }
            new F7(-7.435119635398658e+307, "valueOf", -5529, v20);
            return "valueOf";
        },
    };
    return o38;
}
const v39 = f0();
f0();
f0();
class C48 extends f0 {
    [-519829720] = 0.057012659466511906;
    constructor(a50, a51, a52, a53) {
        super();
        super.n();
        super.f = 0.057012659466511906;
        g = v39;
        new Uint32Array(Uint32Array);
        function f59(a60, a61) {
            ("DaoN3").startsWith(0);
            return "DaoN3";
        }
    }
    static 6 = -53767;
    static 1073741824;
    h;
    #a = -53767;
    1945742751;
}
new C48(-53767, 5, 5, -1.7976931348623157e+308);
const v64 = new C48(5, -519829720, 5, -1.7976931348623157e+308);
new C48(-53767, -519829720, -53767, v64);
function f67() {
    const v70 = [3.4890473589784586e+307 === Uint8Array];
    v70.constructor.isArray(v70);
    return f67;
}
%PrepareFunctionForOptimization(f67);
f67();
%OptimizeFunctionOnNextCall(f67);
f67();
