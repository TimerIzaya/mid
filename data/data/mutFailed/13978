function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.c = this;
    try {
        const v5 = new Uint8Array(9);
        v5.lastIndexOf(Math.cbrt(7));
        this.e = 1481796755;
    } catch(e10) {
    }
    try {
        this.c = 1481796755;
    } catch(e11) {
    }
}
const v12 = new F0();
v12 && v12;
Math.cos(-1073741824);
new Int16Array();
const v19 = new F0();
const v20 = new F0();
function f22() {
    let v23 = -268435456;
    v23--;
}
class C26 {
    get b() {
        this in this;
        try { ("JbyK").localeCompare("JbyK"); } catch (e) {}
        return this;
    }
    static #n(a31, a32) {
        function f33(a34) {
            return a32;
        }
        class C35 extends f33 {
            ["matchAll"] = a32;
            static #e;
            #h = f33;
        }
        return "matchAll";
    }
}
new v12();
Float32Array.from([-3.942521664036782e+307,-3.942521664036782e+307,[-3.942521664036782e+307,-3.942521664036782e+307,-3.942521664036782e+307]]);
class C50 extends F0 {
    constructor(a52, a53, a54, a55) {
        super();
        const v56 = [134133844,-339370636,65535,-4294967295,536870888,-324130953,536870912,268435439];
        function f57(a58, a59, a60, a61) {
            function f62() {
                const v63 = v56.length;
                const v65 = 0.0 % (v63 >>> v63);
                v65 & v65;
                return f57;
            }
            f62();
            %OptimizeFunctionOnNextCall(f62);
            return f62;
        }
        [4294967295,-7554,-9007199254740991,256,-2147483647,-9007199254740990,270065662,-12,-1083098993];
        [1024,536870888,-6731];
        const v70 = [268435441,129,14,181124961,-1];
        Math.sin(-4294967295);
        let v74 = -314.9391272852571;
        --v74;
        try {
        const t0 = 1.0367481644555791e+308;
        t0(v70, a55, v70);
        } catch (e) {}
        try {
            a54.__proto__ = v20;
        } catch(e77) {
        }
    }
    2147483647;
    d = F0;
    ["string"];
}
const v78 = new C50(v20, "function", v20, "string");
new C50(v78, "isSealed", v19, "j");
new C50(v78, "matchAll", v78, "909039183");
let v81 = 268435440n;
~v81;
--v81;
