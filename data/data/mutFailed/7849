const v0 = [];
const v1 = [v0];
const v2 = [v0];
function f3(a4) {
    class C5 {
        constructor(a7, a8) {
            for (let i = 0; i < 10; i++) {
                this[this];
            }
        }
    }
    return a4;
}
v2.toString = f3;
const v10 = [v0,v0];
v10[1] = v10;
const v11 = [-65536,-268435456];
const v12 = [-9007199254740990,2147483649,-65535,4294967296,1059455100,13875,512,-2147483647,1000,15355];
const v13 = [32175,24422,-3728,10,1024,-36232,-898089558,16];
const v15 = -99260.82828229736 - -99260.82828229736;
for (let v16 = 0; v16 < 22; v16++) {
    !(v12 != v12);
}
let v19;
try { v19 = v0.toReversed(); } catch (e) {}
v19.valueOf = f3;
let v20;
try { v20 = v19.at(v19); } catch (e) {}
+v19;
function f24(a25, a26) {
    a26[0] = a26;
    const o35 = {
        "c": v13,
        o(a28, a29) {
            try {
                a28.length = a28;
            } catch(e30) {
            }
            a29 | v10;
            return a28;
        },
        2147483649: v12,
        n(a33, a34) {
            return a26;
        },
        ...a26,
        "arguments": v0,
        __proto__: v11,
        ...v1,
        [a26]: 0.6820665334633094,
    };
    o35[2147483649] = o35;
    return o35;
}
f24(v11, v2);
f24(v2, v11);
f24(v10, v2);
let v41 = -9223372036854775807;
function f42(a43) {
    a43.valueOf = f42;
    a43 & a43;
    function F45(a47) {
        if (!new.target) { throw 'must be called with new'; }
    }
    try { new F45(F45); } catch (e) {}
    function F49(a51, a52) {
        if (!new.target) { throw 'must be called with new'; }
        const o59 = {
            set d(a54) {
                for (let v55 = 0; v55 < 10; v55++) {
                    class C57 {
                        4294967296 = 996195971n;
                    }
                    new C57();
                }
            },
        };
        class C60 {
            constructor(a62) {
                o59.d = a62;
            }
        }
        new C60();
    }
    F49.d = -536870912;
    F49.d = F49;
    const o81 = {
        valueOf(a65, a66) {
            function f67(a68) {
                v41 /= v15;
                return -99260.82828229736;
            }
            a66.valueOf = f67;
            function F70(a72, a73, a74, a75) {
                if (!new.target) { throw 'must be called with new'; }
                this.f = a73;
                Object.defineProperty(a74, "toString", { writable: true, value: f42 });
                try {
                    this.f = a74;
                } catch(e76) {
                }
                try {
                    this.h = v41;
                } catch(e77) {
                }
            }
            const v78 = new F70(a65, a43, a43, a66);
            new F70(v78, -12, v41, v41);
            new F70(-12, -12, v78, v78);
            return -536870912;
        },
    };
    o81[Symbol.toPrimitive] = f42;
    return o81;
}
const v84 = f42(v41);
try { v84.valueOf(v19, v0); } catch (e) {}
const v86 = f42(v84);
function f87() {
    new Int16Array(-536870912);
    return v20;
}
v86[Symbol.toPrimitive] = f87;
const v92 = v86?.__defineGetter__;
try { new v92(v2, v2); } catch (e) {}
f42(v86);
/aI/udimy;
const v99 = /abc|def|ghivKg(\1a)/gimy;
v99.valueOf = f42;
const v100 = /Dpa\Bb(ab|cde)\1/vdm;
v99[16] = "5";
%PrepareFunctionForOptimization(f42);
const v101 = f42(v99);
try { v101.valueOf(v100, v99); } catch (e) {}
f42(v99);
%OptimizeFunctionOnNextCall(f42);
f42(v99);
