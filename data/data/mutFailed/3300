function f0() {
}
const v1 = [f0,f0,f0,f0];
const v2 = [v1,f0];
const v3 = [f0];
function f4(a5) {
    const o7 = {
        [a5]: a5,
        "c": a5,
        "g": f0,
        get d() {
            a5[1] = this;
            return v3;
        },
        "a": v2,
        __proto__: a5,
        "h": a5,
        "b": a5,
        "a": v3,
        "f": v3,
    };
    return o7;
}
const v8 = f4(v3);
const v9 = f4(v1);
const v10 = f4(v3);
function f14(a15, a16, a17, a18) {
    const o38 = {
        ...v9,
        0: v9,
        get d() {
            return this;
        },
        p() {
            return f0;
        },
        "e": a17,
        "h": a15,
        set g(a22) {
            v3[v9];
            const v24 = a18?.[30];
            try { a22(v1, v3, v24, v24); } catch (e) {}
            this.h;
            function F27(a29) {
                if (!new.target) { throw 'must be called with new'; }
                0 / 0;
            }
        },
        "a": "object",
        "c": a17,
    };
    return o38;
}
f14(v10, v3, v9, f14(v8, v3, v8, "function"));
f14(v10, v3, v8, v2);
function F43() {
    if (!new.target) { throw 'must be called with new'; }
}
const v48 = new BigInt64Array(6);
v48.findLast(F43);
const v50 = 9007199254740991n * 9007199254740991n;
v50 * v50;
