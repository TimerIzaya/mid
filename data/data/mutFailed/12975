function f0() {
}
const v1 = [1000000000.0,-4.0,-1.0,0.7625072561749102,4.991525786566157,-2.1647885504441895,1000.0,-1.0898948377764426e+308,-1000000.0];
const v2 = [-187.6610254841122,1000.0,0.04010182011743946,0.6597845480895619,3.8960488281778325,297438.80732924887,NaN];
const v3 = [484002.1045984749];
class C4 {
    static #c;
    b = v1;
    static #n(a6) {
        super[this] = f0;
        a6["concat"]("concat", f0, v3, v2[13]);
        try {
            new f0();
        } catch(e11) {
        }
        return v3;
    }
    #d;
    [v2] = v3;
}
C4.length;
new C4();
new C4();
const v15 = new C4();
const v16 = v15?.constructor;
try { new v16(); } catch (e) {}
const t26 = "iT5yt";
t26[4] = "iT5yt";
512 * 512;
[1.506020714556427e+307,-5.0,0.03090185281437363,1000000000000.0,-2.2250738585072014e-308,-1000000000000.0,4.0,-0.0,-7.262085316788397e+307];
const v30 = gc();
const v31 = v30?.then;
try { v31(); } catch (e) {}
const v33 = [-1719195867,54251,2147483647,-5,655428922,40090,1073741824,-12];
try { v33.entries(); } catch (e) {}
[-9007199254740991];
try { (4).push(v30); } catch (e) {}
([9007199254740991,65536,3,65537,2007257226,349524703,2])[2];
try { v1.copyWithin(59656, v31, ...f0, 512, 4, -9007199254740991); } catch (e) {}
const t39 = "sync";
t39[1] = "sync";
const o43 = {
    "execution": "sync",
    "type": "minor",
};
o43(o43);
