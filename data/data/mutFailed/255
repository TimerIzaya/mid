class C3 {
    static #toString(a5) {
        const v6 = super.g;
        let v7;
        try { v7 = new v6(); } catch (e) {}
        const o8 = {
        };
        new Uint8Array([749138.7740098275,-413.55890355139604,-2.0,5.0,4.0,1.7976931348623157e+308,1.0,5.956393081352694]);
        const o12 = {
        };
        try {
            o12.c = 6.45721206866272;
        } catch(e13) {
            new Float32Array();
            ~-1073741824;
            Array(4087);
        }
        try {
            const o21 = {
            };
            o21.c = 6.45721206866272;
            o21.h = "4Wov";
        } catch(e22) {
        }
        try {
            const o23 = {
            };
            o23.c = 6.45721206866272;
            const v24 = [-3.0,4.0,1.7381830731777672e+308,-Infinity,0.053627216611518036];
            function f26(a27, a28, a29, a30) {
                const o32 = {
                    get c() {
                    },
                };
            }
            f26(16, v24);
            o23.h = "4Wov";
            o23.f = v7;
        } catch(e34) {
        }
        try {
            const o35 = {
            };
            o35.c = 6.45721206866272;
            o35.h = "4Wov";
            o35.f = 6.45721206866272;
        } catch(e36) {
        }
        return a5;
    }
}
try { C3.call(C3); } catch (e) {}
const v38 = new C3();
const v39 = v38?.constructor;
try { new v39(); } catch (e) {}
const v41 = new C3();
const v42 = new C3();
class C43 extends C3 {
    #toString(a45, a46, a47, a48) {
    }
    static {
        try {
            this.#d;
        } catch(e51) {
        }
    }
    static c;
    static n(a53, a54, a55) {
        super["4Wov"];
        v42[3] = a55;
        return a53;
    }
    #m(a58, a59, a60, a61) {
        const o62 = {
        };
        const v64 = Symbol.iterator;
        const o73 = {
            "type": "4Wov",
            "type": "4Wov",
            [v64]() {
                let v66 = 10;
                const o72 = {
                    next() {
                        v66--;
                        const v70 = v66 == 0;
                        const o71 = {
                            "done": v70,
                            "value": v66,
                        };
                        return o71;
                    },
                };
                return o72;
            },
        };
        try {
            o62.b = a61;
        } catch(e74) {
        }
        try {
            const o75 = {
            };
            o75.b = a61;
            o75.e = "4Wov";
        } catch(e76) {
        }
        try {
            const o77 = {
            };
            o77.b = a61;
            o77.e = "4Wov";
            o77.g = -1000000000.0;
        } catch(e78) {
        }
        try {
            const o79 = {
            };
            o79.b = a61;
            o79.e = "4Wov";
            o79.f = a59;
        } catch(e80) {
        }
        return 6.45721206866272;
    }
}
try { C43.n(C43, -1000000000.0, v42); } catch (e) {}
new C43();
new C43();
const v84 = new C43();
try { v84.constructor(); } catch (e) {}
try { ("ndU").link("-54693"); } catch (e) {}
function F90(a92, a93, a94) {
    if (!new.target) { throw 'must be called with new'; }
}
const v95 = new F90();
const v96 = new F90(F90, F90, v95);
try { v96.constructor(v41, "ndU", "ndU"); } catch (e) {}
"size" && "boolean";
new Float64Array(127);
for (let v105 = 0; v105 < 5; v105++) {
    Object.defineProperty(v95 || undefined, v96, { value: v95 });
}
class C107 {
}
const v108 = new C107();
const v110 = new Int16Array(127);
v110["includes"](v108);
class C3 {
    101;
    [268435440] = "7me";
    static [268435440] = 5.017677582007758;
    a;
    constructor(a5, a6, a7, a8) {
        super();
        const o10 = {
        };
        gc(o10);
    }
    /*
    constructor(a13, a14) {
        try {
            a13 %= a14;
        } catch(e15) {
        }
    }
    */
    static ["7me"];
}
const v17 = new C3(C3, "7me");
new C3(5.017677582007758, v17);
new C3(C3, "7me");
const t24 = 268435440;
t24.b = 268435440;
function f21() {
}
function f22() {
    const o23 = {
        __proto__: f21,
    };
    return o23;
}
const v24 = f22();
class C25 {
}
const v26 = new C25();
const v27 = new C25();
function F28(a30, a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    a30.d = a30;
    const v33 = a32.constructor;
    const v34 = [];
    const o37 = {
        set g(a36) {
        },
        "g": v34,
    };
    new v33();
    const v39 = this.constructor;
    try { new v39(a31, v26, v24); } catch (e) {}
    try { a32.toString(); } catch (e) {}
    this.b = v27;
}
const v42 = new F28(f21, v24, v26);
new F28(v26, v42, C25);
new Uint8Array(33);
new Int32Array(10);
new BigUint64Array(1058);
class C52 {
    static #e;
    constructor(a54) {
        for (let i57 = 0, i58 = 10; i57 < i58; i57++) {
            function F65(a67, a68, a69, a70) {
                if (!new.target) { throw 'must be called with new'; }
                const v71 = this.__defineGetter__;
                function f72(a73) {
                    return v71;
                }
                v71[Symbol.toPrimitive] = f72;
                const v76 = v71.constructor;
                try { v76(v71); } catch (e) {}
            }
        }
        try {
            this.#e = this;
            function f80(a81) {
                return Float64Array;
            }
            const v82 = [3.5180879686894713,-1.0,0.4936880651140271,-1e-15,0.44921266463214093,3.3329185806248454,-151363.3911276788];
            const o84 = {
                [v82]: Uint16Array,
            };
        } catch(e85) {
        }
    }
    /*
    constructor(a87, a88, a89, a90) {
        super();
        const o92 = {
        };
        gc(o92);
    }
    */
    static {
    }
}
new C52();
