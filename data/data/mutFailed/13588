("vZa2U").normalize("p");
for (let v5 = 0; v5 < 5; v5++) {
}
const v7 = Array();
class C8 {
    #n(a10, a11) {
        a11[Symbol.split] = -9223372036854775808;
        return a11;
    }
    #d = "p";
    static get e() {
        for (let v15 = 0; v15 < 10; v15++) {
            const v18 = /(?:a*)+q(?<a>.)/guds;
            for (let [i23, i24] = (() => {
                    eval();
                    return [0, 10];
                })();
                i23 < i24;
                i24--) {
                for (let v31 = 0; v31 < 25; v31++) {
                    v18.constructor.$4;
                }
            }
        }
        let v34 = 0;
        while ((() => {
                [-671138503,-536870912,-9007199254740991,-9007199254740992,-268435456,128,2023752111,-970019998,8839,6] | v7;
                let v38 = 536870912n;
                v38--;
                v34 < 9;
                return v34 < 4;
            })()) {
            let v43;
            try {
            const t0 = "p";
            v43 = t0(this);
            } catch (e) {}
            try { v43.m(); } catch (e) {}
            v34++;
        }
        return 1178035953;
    }
}
C8.prototype;
const v47 = new C8();
const v48 = v47?.constructor;
try { new v48(); } catch (e) {}
const v50 = new C8();
const v51 = v50?.__lookupGetter__;
try { new v51(v47); } catch (e) {}
new C8();
const v55 = [-0.685155357392599,5.0];
function F56(a58, a59, a60, a61) {
    if (!new.target) { throw 'must be called with new'; }
    const v62 = this.constructor;
    try { new v62(); } catch (e) {}
    v55.length &= 1;
}
new F56(F56, v55, v55, v55);
new F56();
let v68 = 4294967295;
v68--;
try { ("5").padStart(1178035953); } catch (e) {}
const v74 = [5293,1073741825,-519841664];
try { v74.lastIndexOf("f"); } catch (e) {}
const v76 = [268435456,-1024,-536870912,0,1000,-9007199254740992];
v76[5] = v76;
const v80 = new Set();
function f81(a82) {
    a82 > a82;
    const o95 = {
        "h": a82,
        "f": 22675,
        "b": 9,
        "a": a82,
        "e": 9,
        set f(a85) {
            var a = v80;
            delete a85?.[3189];
            a85?.e;
            Math.imul(1979208194, 22675);
            Math.sin(1979208194);
            22675 >>> -9223372036854775808;
        },
        2773432668: 22675,
        28: 22675,
        256: a82,
        "c": f81,
        "g": a82,
    };
    return o95;
}
function f97(a98, a99) {
    const o100 = {
        ...a98,
    };
    try {
    } catch(e101) {
    }
}
f97(f81(26724));
const v104 = [268435441,57404,1024,65536,-268435456,51911,2147483647,297580089,4294967295,1676368296];
try { v104.flat(); } catch (e) {}
function f106(a107, a108, a109, a110) {
    a107 >> a107;
    a108++;
}
class C114 {
    static {
        try { this(); } catch (e) {}
        for (let v117 = 0; v117 < 25; v117++) {
            const v118 = [601759695];
            const v119 = [1073741824,1073741823,1376142744,1073741825];
            function f120(a121, a122, a123, a124) {
                let v126;
                try { v126 = v119.toSorted(f106); } catch (e) {}
                try { v126.entries(); } catch (e) {}
                const v130 = new Float32Array(this, a124, a121);
                function f132() {
                    return a121;
                }
                const v133 = v130.constructor;
                try { v133(v119, v119, v118); } catch (e) {}
                class C135 extends v133 {
                    #c = 84;
                }
                function f136(a137, a138) {
                    return C114;
                }
                let v139;
                try { v139 = f136(f120, a124); } catch (e) {}
                try { new v139(); } catch (e) {}
                %OptimizeFunctionOnNextCall(f132);
                try { v119["find"](..."find", a124, ...v118); } catch (e) {}
                const o143 = {
                    [Date]: 128,
                    __proto__: arguments,
                };
                return f132;
            }
            try { f120(this, v118, "5", "f"); } catch (e) {}
            for (let v145 = 0; v145 < 5; v145++) {
                f120();
            }
        }
    }
}
try { C114.call(C8); } catch (e) {}
