const v0 = [-8.248156221247807e+307,-1.0,1.0,-749.3322453434359,-415930.5606660055,-2.220446049250313e-16,1.0,388510.29046519427,-3.2650212645059202];
const v1 = [1000.0,1.7976931348623157e+308,682.7184278013447,-2.8118881023232785,-1000000000000.0];
let v2 = [3.0,-432.06664668976975,-3.0,NaN,4.0,-0.0,1000.0,-6.770518644317891];
class C3 {
    static d = v2;
    h;
    static #d;
    g;
    f = v0;
    static [v0];
    static p(a5, a6) {
        try {
            this.c = v1;
        } catch(e7) {
        }
        if (a6 <= v2) {
            try { C3(a5, a6, this, this, v0); } catch (e) {}
        } else {
            let v11 = 967744181;
            Math.ceil(++v11 ** v11);
            Math.max(v11);
        }
        return v2;
    }
}
let v17;
try { v17 = C3.p(v1, v2); } catch (e) {}
v1[C3] -= v17;
C3 = v17;
v0 >= v0;
v2 = v0;
const v20 = Symbol.iterator;
const o29 = {
    [v20]() {
        let v22 = 10;
        const o28 = {
            next() {
                v22--;
                const v26 = v22 == 0;
                const o27 = {
                    "done": v26,
                    "value": v22,
                };
                return o27;
            },
        };
        return o28;
    },
};
const v30 = new C3();
try { v30.isPrototypeOf(C3); } catch (e) {}
v30.f = v30;
new C3();
const v33 = new C3();
v33.d = v33;
const v36 = [v2,[[v0,v33],v0,v0,v33,C3],v2];
v36.g = v36;
try { v36.some(v36); } catch (e) {}
([0.021647043302781555,982.9822277058386,68.55386187204931,-3.6548181863708407e+307,0.20797002453168356,1000000.0,-569469.7761417266,-3.877892592640821,Infinity,5.0]).toLocaleString();
