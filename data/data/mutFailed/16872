Date[Symbol.toPrimitive] = Date;
try { new Date(Date, 138.71266428444414, 0.876383704495181, 3.0, Date, 138.71266428444414, 0.876383704495181); } catch (e) {}
new Date();
741218464 >>> Date;
const v12 = [0,1024,-1782358490,-2144477601,1405957164];
[536870889,-1873845040,43217,512];
[1295084822,11,-256,0,-2126,4294967297,896847946,0];
function f15(a16) {
}
const v17 = f15(v12);
const t9 = f15();
const v19 = t9();
function F20(a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
}
F20.arguments = F20;
new F20(v17);
for (let v26 = 0; v26 < 25; v26++) {
    const v27 = [601759695];
    try { v27.pop(); } catch (e) {}
    const v29 = [1073741824,1073741823,1376142744,1073741825];
    function f30(a31, a32, a33, a34) {
        let v36;
        try { v36 = v29["find"](..."find", a34, ...f15); } catch (e) {}
        v36 = v19;
        138.71266428444414 || v26;
    }
    for (let v38 = 0; v38 < 5; v38++) {
        f30();
    }
}
