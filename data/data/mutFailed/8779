[536870912,12668,-9,-128,-1792933140,-325269391];
const v1 = [-1294541509,442605235,36326,268435441,-61538];
[1181802959,888430905,-9007199254740990,536870912,-2462,-1024,-1953525769,1073741824,1709658169,1081888084];
-12010n / -12010n;
class C7 {
    static #n(a9, a10, a11) {
        try { new this(this, -12010n, ...a11, ...a10, ...a9); } catch (e) {}
        try {
            a9.h = 1073741825n;
        } catch(e16) {
        }
        return a10;
    }
    64 = -928865210n;
}
new C7();
new C7();
const v19 = new C7();
const v20 = v19[64];
new Uint32Array(129);
256 & 256;
const v27 = new Float32Array(256);
function f28(a29, a30) {
    Math.abs(v20 + +v20);
    return v1;
}
v27.toString = f28;
v27[231] = v27;
new Float64Array(98);
class C39 {
}
const v40 = new C39();
function f41(a42, a43, a44) {
    const o46 = {
        get b() {
            return C39;
        },
        127: v40,
    };
    return f41;
}
%PrepareFunctionForOptimization(f41);
const v47 = f41();
try { new v47(v47, C7, C7); } catch (e) {}
%OptimizeFunctionOnNextCall(f41);
f41(C39, v40, v40);
