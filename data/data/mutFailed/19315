[0.515529910611609,2.220446049250313e-16,-4.0,-47.34024509265498,1.741992023517946e+308,-2.6993866793204574e+307,1000000.0];
[0.2902155651403029,-1.7976931348623157e+308,-657.2645108343,-3.0,-0.5063371536417076,7.304082999609023e+307,-1000000000.0,NaN,7.908614381093312];
[1.1142291857112175e+308];
[0.8098270025378325,0.4155162600953881,0.7875012968786648,-2.9276445417088547e+307,-1000000000.0,-505815.79307954264];
[2.220446049250313e-16,0.45668550755748283,731558.9801476845,-36.29190764988891,-1.2521183070265367e+308,4.400954647997031,2.0,-0.0];
[-1e-15,-2.2250738585072014e-308,-3.0,0.8502003991597455,-569.2031346280886,-Infinity];
function f9() {
    return 4;
}
const o10 = {
};
const v11 = o10.constructor;
for (let v12 = 0; v12 < 25; v12++) {
    function f13() {
        return f13;
    }
    function f14(a15, a16, a17, a18) {
        let v19;
        try { v19 = a16.hasOwn(); } catch (e) {}
        let v20;
        try { v20 = v19(); } catch (e) {}
        try { v20.isPrototypeOf(); } catch (e) {}
        try { new a17(); } catch (e) {}
        o10.freeze();
        const v24 = a18 + a18;
        function f25() {
            return v20;
        }
        let v26;
        try { v26 = f25(); } catch (e) {}
        const v27 = f25.length;
        const v28 = -v27;
        f13();
        const v30 = v26.constructor;
        try { v30.prototype(); } catch (e) {}
        let v32;
        try { v32 = v30(); } catch (e) {}
        try { v32(); } catch (e) {}
        function f34() {
            return v32;
        }
        const v35 = f34();
        try { v35.null(); } catch (e) {}
        f34();
        const v38 = typeof f25;
        const v39 = v38.italics(v38, v28);
        try { v39.match(f13, o10, a18, f13, v39); } catch (e) {}
        const v42 = new f14();
        const v45 = [v12,v42.entries().next(v27),v12,v12,v12];
        try { v45.reverse(); } catch (e) {}
        try { ("find").trimRight(); } catch (e) {}
        const v50 = ("find").blink().replaceAll;
        try { v50(f14, v24); } catch (e) {}
        return v11;
    }
    for (let v52 = 0; v52 < 5; v52++) {
        f14(v52, v11);
    }
}
