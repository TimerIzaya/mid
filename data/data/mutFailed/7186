const v3 = [-5.856629555452177e+307,945.7092607483178,229.61671747878722];
255 | 255;
try { new BigUint64Array(v3, 544674607, -1391511947); } catch (e) {}
const v8 = new BigUint64Array(255);
const v9 = v8.buffer;
try { v9.slice(544674607, BigUint64Array); } catch (e) {}
SharedArrayBuffer.name = SharedArrayBuffer;
const o13 = {
    "maxByteLength": 268435439,
};
new SharedArrayBuffer(6, o13);
const v16 = [-3.0639189330006787e+307,1.0763110285484118e+308];
try { v16.lastIndexOf(6); } catch (e) {}
const v18 = [-3.0,-6.598134698496785,-5.0,1000000.0];
-6478 - -6478;
try { new Date(o13, 544674607, 4294967297, 544674607, -6907, 544674607, 544674607); } catch (e) {}
const v24 = new Date();
v24.getUTCFullYear();
const v27 = new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
v27.buffer;
function F30(a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    const v34 = this?.constructor;
    try { new v34(v16, v16); } catch (e) {}
    a32 % a32;
    a33[1];
    try {
        this.h = a33;
    } catch(e38) {
    }
    function f40() {
        return undefined;
    }
    function F41(a43, a44) {
        if (!new.target) { throw 'must be called with new'; }
        const v45 = this.constructor;
        try { new v45(); } catch (e) {}
        const o48 = {
            0: "1ya",
            162: "1ya",
        };
    }
    try {
        this.d = a32;
    } catch(e49) {
    }
    try {
        this.b = a33;
    } catch(e50) {
    }
}
new F30(-6907, v3);
new F30(544674607, v18);
new F30(-6478, v18);
-75882196 - -75882196;
function f59() {
    return -536870912;
}
class C60 extends f59 {
    static {
        this.caller = this;
        const o62 = {
            "defineProperty": f59,
        };
        const v64 = new Date();
        try { v64.toDateString(); } catch (e) {}
        const v66 = v64.toJSON();
        try { v66.isWellFormed(); } catch (e) {}
        const v71 = [601759695];
        function f73(a74, a75, a76, a77) {
            a74.g = a74;
            a76--;
            arguments[2] = arguments;
            function f80() {
                const v82 = ("Vre").toLocaleUpperCase;
                try { v82(v82, -4294967297n, a76, v18); } catch (e) {}
                const v84 = ("Vre").fixed();
                const v85 = v84.codePointAt();
                v85 >>> v85;
                -(-4294967295);
                let v89 = -268435456;
                const v90 = v89--;
                const o104 = {
                    "c": -4294967297n,
                    [522675525n](a92, a93) {
                    },
                    ..."Vre",
                    "maxByteLength": -128,
                    "c": v71,
                    [v85]: -1547267477n,
                    __proto__: a76,
                    "d": v90,
                    "e": -4294967295,
                    "h": -128,
                    valueOf(a95, a96) {
                        return v84;
                    },
                    "e": -4294967295,
                    "e": v89,
                    "maxByteLength": -4294967295,
                    "arguments": v16,
                    ...v71,
                    "type": "Vre",
                    ..."Vre",
                    valueOf(a98, a99) {
                        this.d = this;
                        return this;
                    },
                    ..."Vre",
                    4: "Vre",
                    "c": v89,
                    "type": "Vre",
                    "type": "Vre",
                    toString(a101, a102, a103) {
                        return -128;
                    },
                    5: -4294967295,
                    6: v89,
                };
                o104[5] = o104;
                return o104.valueOf();
            }
            const v106 = f80?.constructor;
            try { new v106(BigUint64Array); } catch (e) {}
            f80();
            %OptimizeFunctionOnNextCall(f80);
            return v16;
        }
        for (let v109 = 0; v109 < 5; v109++) {
            f73(v71, v109, v109);
        }
        const v112 = new Proxy(this, o62);
        v112.arguments;
        v112.b = v112;
    }
}
