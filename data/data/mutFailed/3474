class C3 {
    static {
        let v4 = this;
        v4 -= "getSeconds";
        super.c <<= 653378.9502061049;
        const v6 = ("getSeconds")["trimStart"]();
        try { v6.toUpperCase(); } catch (e) {}
    }
    static #n(a9, a10) {
        a10 - "getSeconds";
        a10[653378.9502061049] &&= 653378.9502061049;
        try {
            this.fuck("message", a10, "message", a10);
        } catch(e16) {
        }
        new Int16Array(16);
        new Uint8ClampedArray(16);
        new Float64Array(2);
        return Int16Array;
    }
}
const v24 = new C3();
try { v24.propertyIsEnumerable(v24); } catch (e) {}
const v26 = new C3();
const v27 = v26?.constructor;
let v28;
try { v28 = new v27(); } catch (e) {}
const v29 = new v28();
try { ("n").match("n"); } catch (e) {}
function f34() {
    return v29;
}
function f35(a36, a37) {
    const o56 = {
        valueOf(a39, a40, a41, a42) {
            super.h = a41;
            const v43 = v26.a;
            a40[a37];
            const v46 = v28.iterator;
            const o55 = {
                [v46]() {
                    let v48 = 10;
                    const o54 = {
                        next() {
                            v48--;
                            const v52 = v48 == 0;
                            const o53 = {
                                "done": v43,
                                "value": v52,
                            };
                            return o53;
                        },
                    };
                    return o54;
                },
            };
            return o55;
        },
    };
    return o56;
}
const v57 = f35(C3, v26);
try { v57.valueOf("object", "object", "getSeconds", "getSeconds"); } catch (e) {}
f35(C3, "description");
const v60 = f35(v29, C3);
try { v60.hasOwnProperty(v60); } catch (e) {}
const v62 = [-1235077344,-4096,50383815,-8476,-9007199254740991];
try { v62.slice("n", v60); } catch (e) {}
try { new v28(); } catch (e) {}
class C66 extends Set {
}
const v67 = new C66(v27);
const v68 = v67?.constructor;
try { new v68(); } catch (e) {}
