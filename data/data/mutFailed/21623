new Set();
new Uint32Array(7);
new Int8Array(229);
new Uint32Array(-13431);
class C23 {
}
const v24 = new C23("a");
const v25 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v28 = new Uint32Array();
const v30 = [601759695];
const v31 = [1073741824,1073741823,1376142744,1073741825];
function f33(a34, a35, a36, a37) {
    function f38() {
        const t13 = "Vre";
        t13[1] = "Vre";
        try { Math.expm1(Math); } catch (e) {}
        const v43 = Math.expm1();
        const v44 = Math.floor();
        Math.hypot(a36, Math);
        Float64Array.BYTES_PER_ELEMENT = Float64Array;
        a = v30;
        v25.length;
        try {
            v31.findLast();
        } catch(e49) {
            e49.a = 2684;
            e49.a = e49;
        }
        const v50 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const o60 = {
            [522675525n](a53, a54) {
            },
            "c": v30,
            [-1]: 2684,
            1073741824: v28,
            "maxByteLength": -268435456,
            __proto__: v28,
            9: v24,
            [v44]: v43,
            ...a35,
            "arguments": v50,
            [2n](a56, a57, a58, a59) {
            },
            "e": -4294967295,
            "arguments": Float64Array,
            256: a37,
            4: "Vre",
            "c": -268435456,
        };
        return -4294967295;
    }
    f38();
    eval(a35);
    %OptimizeFunctionOnNextCall(f38);
    return 2n;
}
for (let v64 = 0; v64 < 5; v64++) {
    f33(v64, v30, v64, v64);
}
