const v0 = [];
const v1 = [-14,-65537,9007199254740990];
const v2 = [-60144];
const v3 = [-9007199254740992,16,9007199254740991,-29995];
const v4 = v2[1];
function f5(a6, a7) {
    try { a6.find(a6); } catch (e) {}
    const o17 = {
        0: v1,
        [v3]: v3,
        "h": v2,
        [v2]: v1,
        "a": v3,
        "e": a7,
        o(a10, a11, a12, a13) {
            const v14 = a10 === v3;
            v14 == a6 ? v14 : a6;
            return v0;
        },
    };
    return v4;
}
const v19 = f5(v3, v0)?.__lookupSetter__;
try { new v19(v0); } catch (e) {}
const v21 = f5(v0, v1);
f5(v2, v2);
"f" == "f";
const v28 = ([38309,-1,-1857688895,-536870912,913294327,0])?.values;
try { new v28(); } catch (e) {}
[-413394689,-9223372036854775808,12,-9007199254740992,-65535];
[751619908,56733];
const v32 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v33 = [1073741824,1073741823,1376142744,1073741825];
function f34(a35, a36, a37, a38) {
    function f39() {
        try {
            v33.forEach(a36, v32);
        } catch(e41) {
        }
        return a36;
    }
    f39();
    eval.d = f39;
    v21();
    %OptimizeFunctionOnNextCall(f39);
    return v33;
}
f34.d = f34;
for (let v45 = 0; v45 < 5; v45++) {
    f34();
}
function f48() {
    return Array;
}
try { new f48(); } catch (e) {}
function f50() {
    const v51 = v21();
    v51[1460] = v51;
    v51[2358] = f48;
    for (const v52 of v51) {
    }
    return v51;
}
v28();
f50();
