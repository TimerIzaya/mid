function f0() {
    const o19 = {
        "c": 0.8541600845733378,
        p(a5, a6) {
            a6 < a6;
            a5 = 0.8541600845733378;
            class C8 {
            }
            const v9 = new C8();
            const v10 = [5];
            const v12 = [];
            Reflect.apply(v10.fill, v9, v12);
            try { new a6(a6, a6, 0.8541600845733378); } catch (e) {}
            return 0.8541600845733378;
        },
        [0.8541600845733378]: 0.8541600845733378,
        ..."10000",
        __proto__: "10000",
        "e": "10000",
    };
    return o19;
}
const v20 = f0();
const v21 = f0();
const v22 = f0();
function F23(a25) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a25;
    } catch(e26) {
    }
    try {
        this.b = v20;
        if (v21 != v21) {
            function f28() {
                return F23;
            }
        } else {
            const o29 = {
            };
            try {
                o29.a = v20;
            } catch(e30) {
            }
            try {
                const o31 = {
                };
                o31.a = v20;
                o31.d = F23;
            } catch(e32) {
            }
            return o29;
            new Int8Array(16);
            const v38 = new Int16Array(195);
            let v39 = 3375;
            Math.expm1(v39, Math, v38);
            Math.tan(--v39);
            try {
                const o44 = {
                };
                o44.a = v20;
                o44.d = F23;
                o44.e = v22;
            } catch(e45) {
            }
            try {
                const o46 = {
                };
                o46.a = v20;
                o46.d = F23;
                o46.e = v20;
            } catch(e47) {
            }
        }
    } catch(e48) {
    }
}
new F23(v20);
new F23(v21);
new F23(v20);
[4];
class C57 {
}
try {
} catch(e58) {
}
new Uint16Array(8);
new Uint8Array(4096);
Int32Array();
new Uint8Array(6);
new Float64Array(0);
const v72 = [-1000000.0,771279.5641904315,0.0,8.299995604235331,6.625300935335886,-820.4949035918538,-602.5256799896665,0.6342705996691437,Infinity];
const v73 = [1000000000.0,4.0,5.0,-6.555298893133851e+307];
for (let v74 = 0; v74 < 5; v74++) {
    v73.unshift(-463330.04816285486, v72.values());
}
