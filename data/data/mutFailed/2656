function f1(a2) {
    const v3 = [127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649];
    v3.toSpliced(-1148418937, -1148418937, 2.220446049250313e-16, 2.220446049250313e-16, "-4");
    return v3;
}
WeakSet.toString = f1;
const v8 = new WeakSet();
function F12(a14) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = this;
    try {
        this.b = a14;
    } catch(e15) {
    }
    try {
        this.a = v8;
    } catch(e16) {
    }
    try {
        this.g = a14;
    } catch(e17) {
        try { e17(0.23791389786988937); } catch (e) {}
        e17?.[2147483649];
    }
}
const v23 = new F12(-9007199254740991);
const v24 = new F12(-23402);
new F12(-23402);
class C26 {
    get g() {
        let v27 = this;
        const v29 = new Set();
        delete v27[7];
        v27 = v29;
        return Set;
    }
    #h;
    static e = v24;
    [WeakSet] = WeakSet;
    536870887 = v23;
}
new C26();
const v32 = new C26();
const v33 = new C26();
function f34() {
    return C26;
    try {
    const t0 = -1.3832922122240728e+307;
    t0(2);
    } catch (e) {}
    return 2;
}
Object.defineProperty(v33, Symbol.toPrimitive, { value: f34 });
function f40() {
    let v41 = 1000000000000.0;
    const v42 = v41--;
    class C44 {
    }
    try {
        v24.a = -9007199254740991;
    } catch(e45) {
    }
    v32 << v32;
    const v47 = new C44();
    const v48 = new C44();
    function f49(a50, a51, a52, a53) {
        +(+v33);
        Math.random();
        return a51;
    }
    f49(v23, v24, v42, v47);
    [v48,C44];
    [257828.6336153492,v48];
    const v64 = [v48];
    class C65 extends C44 {
    }
    function f66(a67, a68) {
        return a67;
    }
    Object.defineProperty(Set, "constructor", { configurable: true, value: f66 });
    Set.toString = f66;
    Set.constructor(Set);
    v64.constructor;
}
%PrepareFunctionForOptimization(f40);
f40();
%OptimizeFunctionOnNextCall(f40);
f40();
