const v2 = new BigUint64Array(10);
new BigInt64Array(188);
new Float64Array(0);
function f9() {
    return BigInt64Array;
}
class C10 {
    static 1000;
    static m(a12, a13, a14, a15) {
        this[0];
        return 0;
    }
    [C10] = Float64Array;
    #c;
    n(a18, a19, a20, a21) {
        const v22 = 188 || a21;
        f9 << v2;
        try {
            f9();
        } catch(e25) {
        }
        const v27 = Symbol.iterator;
        const o36 = {
            [v27]() {
                let v29 = 10;
                const o35 = {
                    next() {
                        v29--;
                        const v33 = v29 == 0;
                        const o34 = {
                            "done": v33,
                            "value": v29,
                        };
                        return o34;
                    },
                };
                return o35;
            },
        };
        v2[Symbol.toPrimitive];
        return v22;
    }
    1 = f9;
    #h;
}
const v40 = new C10();
new C10();
new C10();
try {
    f9();
} catch(e45) {
}
v40[2147483649] = C10;
const v46 = new Map();
function f47(a48, a49) {
    const o50 = {
        [a48]: v46,
        146: v46,
    };
    o50[146];
    return Map;
}
for (let v52 = 0; v52 < 790; v52++) {
    f47();
}
