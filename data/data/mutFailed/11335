const v4 = 1877 <= 1877;
v4 || v4;
Uint32Array.a = Uint32Array;
new Uint32Array(1877);
try { Int32Array.from(9); } catch (e) {}
new Int32Array(9);
new Uint16Array(2614);
try { ("socq").link("socq"); } catch (e) {}
let v17;
try { v17 = ("socq").toLocaleLowerCase(); } catch (e) {}
const v18 = v17[2];
let v20;
try { v20 = ("object").normalize(); } catch (e) {}
try { v20.localeCompare(Uint32Array); } catch (e) {}
function f23() {
    let v24 = -1000000000.0;
    const o32 = {
        o(a26, a27) {
            function f28(a29, a30, a31) {
                v24 |= a27;
            }
        },
    };
}
f23.b = f23;
f23.name = f23;
const v33 = f23();
f23();
const v35 = v18();
const v37 = -(-52627n);
v37 % v37;
const v39 = /[\cA]?/d;
const v40 = /jU/vims;
const v41 = /a+b|c/gvdimsy;
function f42(a43, a44, a45) {
    a44.dotAll = v17;
    a43.dotAll;
    a44.dotAll = a44;
    const o51 = {
        set a(a48) {
            v33.g;
            super.toString();
        },
    };
}
const v52 = f42(v39, v40, v35);
const v53 = f42(v41, v41);
const v54 = f42(v40, v39, v52);
const v55 = /a\S/gudsy;
const v56 = /\u{12345}\u{23456}/vsy;
v56.e = v56;
try { v56.compile(v56, v56); } catch (e) {}
/f}L/gdis;
try {
    const v59 = [v56,v54,v40,v55,-52627n];
    !false;
    v53.fuck(v59, false);
} catch(e63) {
    e63.message = e63;
}
/[Fa\b!]/gimy;
/\u{12345}leqkLU[\c!]/gs;
