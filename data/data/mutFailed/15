class C3 {
    8;
    set f(a5) {
        const t3 = "stack";
        t3[9007199254740991] = 1;
    }
    static [1];
    static #c;
    [1];
}
class C9 {
    static d;
    3;
    6;
}
new C9();
new C9();
new C9();
const v13 = new C3();
const v14 = new C3();
const v15 = new C3();
function F17(a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = v14;
    } catch(e22) {
    }
    try {
        this.a = v13;
    } catch(e23) {
    }
}
const v24 = new F17(v13, v15, v15);
const v25 = new F17(v14, v13, v15);
const v26 = new F17(v14, v15, v15);
const v27 = /1xyz{1,}?/gims;
const v28 = [-1868814416,-2,-58067,18422,-1033741301,34203,-811081569];
const v29 = [268435456,3,-9007199254740990,1728557546,1920132119,-893480616,-1916389284];
const v30 = [-65535,-21329,-23690,6,8];
function F31(a33, a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v25;
    } catch(e37) {
    }
    try {
        this.c = a33;
    } catch(e38) {
    }
}
new F31(F31, v26, v24, v25);
new F31(v14, v26, v28, v26);
new F31(v29, v25, v30, v24, v30, v13);
const v42 = /h\p{gc=Nd}/vdy;
const v43 = /\xf0\x9f\x92\xa9a*/us;
const o44 = {
};
new Proxy(v42, o44);
const o50 = {
    "execution": "sync",
    "type": "major",
};
gc(o50);
function F55(a57, a58, a59, a60) {
    if (!new.target) { throw 'must be called with new'; }
}
const v61 = new F55(v43, 1, -1263139894, F55);
const v62 = new F55(v27, v43, -23596, v61);
const v63 = new F55(v42, F55, -23596, 1);
let v66 = 0;
while (v66 < 10) {
    v30.length;
    v66++;
}
const v71 = v63 | F55;
let v72;
try { v72 = v62(v43, v71, v71); } catch (e) {}
if (v72) {
    let v73;
    try { v73 = ("catch").codePointAt(v72); } catch (e) {}
    [,v73] = "iterator";
} else {
    new Symbol();
}
let v0 = [];
function f1() {
    return v0;
}
const v3 = new WeakSet();
class C4 {
    constructor(a6) {
        try { new a6(this); } catch (e) {}
        const v9 = new Int16Array();
        let v10 = -29376;
        [v10] = v9;
        const t11 = /(?:ab)(?:a?)?/mgiu;
        t11.valueOf = -7;
        this.g;
        new BigUint64Array(16);
        class C18 {
            static #e = 1000;
            static 536870887 = v9;
        }
        new C18();
        new C18();
        const v21 = new C18();
        const t22 = /(?:ab)(?:a?)?/mgiu;
        t22.valueOf = -7;
        function F25(a27) {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v28 = new Uint32Array(1000);
        3666 - 3666;
        class C33 {
        }
        const v34 = new C33();
        const t32 = (-13545).constructor;
        const v37 = new t32();
        const o42 = {
            "g": C33,
            ...v37,
            0: 7n,
            255: v34,
            2934394387: v21,
            "f": v37,
            __proto__: C33,
            "f": v28,
            [7n](a39, a40, a41) {
            },
        };
        new Uint16Array(167);
    }
}
new C4(C4);
new C4(v3);
new C4(WeakSet);
const v50 = new Uint32Array();
async function f51(a52, a53, a54) {
    return await v50;
}
f51();
new Float64Array(9);
let v67 = 2.0;
let v68 = -4 % 7;
v0--;
v68--;
const v71 = ++v67;
v0 | v68;
v71 * ~Math;
new Uint8ClampedArray(9);
new Int16Array(3);
function F80() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 10270;
    } catch(e83) {
    }
    try {
        this.e = 10270;
    } catch(e84) {
    }
}
new v3();
const v86 = new Float32Array(Float32Array, Float32Array, Float32Array);
class C88 extends v86.constructor {
}
new C88();
