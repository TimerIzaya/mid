let v2 = -7;
const v3 = /foo(?!bar)baz/gim;
/a\fb\nc\rd\te\vf/i;
const v5 = /a{0,1}?Qa?/udim;
const v8 = new Int8Array(2355);
let v9;
try { v9 = v5.toSorted(v8); } catch (e) {}
-0;
const v12 = [463.9400796507225,-817277.383202182,1000000000000.0,-1000.0,-3.7709175395875434,-5.0,474926.54484071373];
const v13 = [-1000000.0,1.2867075557594588e+308,-479414.3748478368,1.6716443563653101e+308,-1.7976931348623157e+308,Infinity,0.16903136940297836];
const v14 = [0.0,-1.1386633753690293e+308];
try { v9(0, v2, v2, v3); } catch (e) {}
[,...v2] = v12;
let v17 = new Int8Array(0);
for (let [v18,v19,...v20] of v8) {
    v8[-909457454] = v13;
    ({"length":v17,} = v8);
}
v14[774] >>>= v2;
BigInt64Array.b = BigInt64Array;
new BigInt64Array(v5);
try { ArrayBuffer.call(2355); } catch (e) {}
const o27 = {
    "maxByteLength": 2355,
};
o27.f = o27;
const v29 = new ArrayBuffer(4, o27);
const v31 = new Int8Array(v29);
v31[2] = v31;
