const v1 = new Map();
function f2() {
    return v1;
}
const v3 = [-525.4076224328265,756793.3384281634,1e-15,0.45579894539264076,1.7976931348623157e+308,3.0,-647.6144722579434,0.22682405063076339,0.12146382278517398,-4.0];
const v4 = [1000000000000.0,-1.0,0.16743396882967887,0.6879978073578294,-906.448703205565,-2.2250738585072014e-308,5.0,-1.3507276931763923e+308,2.0];
const v5 = [1.1432270069862812e+308,-1.7515676319286348e+307,149.37838268161022,2.0,0.8964629037495107,-1e-15,-5.807308751239169,705439.2235530457];
class C6 extends Map {
    m(a8, a9, a10) {
        try { a8.entries(); } catch (e) {}
        return a9;
        try {
            new f2();
        } catch(e13) {
        }
        return Map;
    }
    static {
        super[v5] = this;
        v4[f2];
        const o18 = {
            "maxByteLength": 220,
        };
        const v20 = new ArrayBuffer(7, o18);
        new Uint32Array(v20);
    }
}
const v23 = new C6();
const v24 = new C6();
const v25 = new C6();
function f26(a27, a28, a29, a30) {
    const o45 = {
        valueOf(a32, a33, a34, a35) {
            function f36() {
                return a28;
            }
            a32[3783] **= a27;
            return a28;
        },
        "d": a28,
        "e": v24,
        [v5](a38, a39, a40, a41) {
            try {
                v25.length = 0;
            } catch(e44) {
            }
            return a30;
        },
    };
    return o45;
}
f26(f26(v5, v5, v25, v24), v5, v24, v1);
f26(v25, v3, v24, v25);
[v5,v1,v23];
[[f2]];
class C55 {
    static set h(a57) {
        eval("VL9k");
    }
}
function F71(a73) {
    if (!new.target) { throw 'must be called with new'; }
    a73 | a73;
    const v75 = Map?.constructor;
    try { new v75(3n); } catch (e) {}
}
new F71(257);
new F71(349865170n);
