const v2 = new Uint32Array(2927);
const v5 = new BigInt64Array(96);
const v8 = new Date();
try { v8.setFullYear(v2, v2, BigInt64Array); } catch (e) {}
const v11 = new BigUint64Array();
try { v11.reduceRight(v5); } catch (e) {}
v11[v8] = v8;
Uint8Array.f = Uint8Array;
const v14 = new Uint8Array(2);
v14[0] = v14;
function f15(a16, a17, a18) {
    a18--;
    a17 != a17;
    a18 !== a18;
    new BigInt64Array(9);
    class C25 {
    }
    const v26 = C25.length;
    v26 >>> v26;
    const o35 = {
        "g": v14,
        ...v14,
        m(a29, a30, a31) {
            super.b = this;
            this[Symbol.species];
            return a18;
        },
        "d": v14,
        10: v5,
        8: Uint32Array,
        "h": v5,
        3012: a18,
        [2]: v5,
    };
    o35.d = o35;
    return o35;
}
f15(v5, 2, 2);
const v37 = f15(Uint8Array, 96, 96);
v37[2];
1545846986 - 1545846986;
let v43 = 1545846986 - 2;
v43 + v43;
v43++;
(-692708377) ** v43;
f15(96, 2927, 2927)[0];
const v49 = [0,9,-13119,1024,-5,14528,16];
try { v49.toSorted(96); } catch (e) {}
[536870912,9,255,10,-37862,9007199254740991,129];
[10,3,-4,-11,-27729];
const v54 = [0.0,-2.220446049250313e-16];
let v55;
try {
const t0 = 16;
v55 = t0(16, 16);
} catch (e) {}
function f56() {
    return f56;
}
try { new f56(); } catch (e) {}
for (let v58 = 0; v58 < 10; v58++) {
    try { ("some").toLocaleLowerCase(); } catch (e) {}
    3816 % 3816;
    const v64 = new Int8Array();
    for (const v65 of "some") {
        let [,,,...v66] = v64;
        try { v66.findLast(v66); } catch (e) {}
        const o68 = {
        };
    }
}
class C69 extends f56 {
}
class C70 {
    constructor(a72, a73) {
        const v74 = this?.__defineGetter__;
        try { new v74(this, a72); } catch (e) {}
        -(a72 | a72);
        2 * 2;
        Uint8Array.h = Uint8Array;
        const v81 = Uint8Array?.constructor;
        try { new v81(Uint8Array); } catch (e) {}
        let v83 = v54[v55];
        v83 **= 16;
        function f84(a85, a86, a87, a88) {
            a85.name = a85;
            const v89 = a86 - a86;
            v89 + v89;
            return 2;
        }
        for (let v91 = 0; v91 < 625; v91++) {
            const v92 = f84(Uint8Array, 2, v91);
            v92 == v92;
            try {
                a72 &= C69;
            } catch(e94) {
                for (let v95 = 0; v95 < 5; v95++) {
                    function f96() {
                        const v99 = Symbol.toPrimitive.description;
                        const o100 = {
                        };
                        const v101 = v99.constructor;
                        let v102;
                        try { v102 = v101.raw(o100); } catch (e) {}
                        return v102;
                    }
                    f96();
                    %OptimizeFunctionOnNextCall(f96);
                }
            }
        }
    }
}
try { C70.toString(); } catch (e) {}
let v105;
try { v105 = new C70(v37, v37); } catch (e) {}
const v106 = v105?.constructor;
try { new v106(v14, v5); } catch (e) {}
const v108 = new C70(16, f56);
const v109 = v108?.__defineSetter__;
try { new v109(v11, 16); } catch (e) {}
const v111 = v108.length;
v111 * v111;
const v113 = new C70();
v113.length;
