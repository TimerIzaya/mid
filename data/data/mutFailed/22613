let v1 = new Date();
function f5(a6, a7) {
    try {
        Date.d = -1000000000.0;
    } catch(e8) {
    }
    let v10;
    try {
    const t0 = 0.44967380041772886;
    v10 = t0();
    } catch (e) {}
    const o19 = {
        [-0.0](a12, a13, a14, a15) {
            d = this;
            return a14;
        },
        "d": -0.0,
        ...v1,
        "e": Date,
    };
    try { a6(a6, a7, a6, f5); } catch (e) {}
    let {"b":v21,"f":v22,} = v10;
    v1 = v21;
    const v23 = +Date;
    try { new v22(f5, Date, v23, v23); } catch (e) {}
    return o19;
}
try {
    Date.prototype = v1;
} catch(e25) {
}
try {
    Date.a = v1;
} catch(e26) {
}
f5(v1, -0.0).e;
const v31 = new BigInt64Array(128);
new Uint8Array(158);
new Int8Array(3587);
f5(v1, -0.0);
[0.0,Infinity];
[0.11028757262918765,-2.2250738585072014e-308,0.651006563147647,1000000000.0,-0.0,291391.61860347725,0.2732467938713805,0.8558966746870933,-6.768146815285996,-1000000000000.0];
[1.7976931348623157e+308,8.814416274326817,457.9200551963211,7.14725908509881,1000000000000.0,1000000000.0,0.027002235448988166,-53398.940626333584,0.4791512653657626,0.20039281311303436];
for (let v42 = 0; v42 < 32; v42++) {
    ("function").length;
    const v45 = new Date();
    class C46 {
        set a(a48) {
            class C49 {
                static 128 = v45;
                #b;
            }
            new C49();
            new C49();
            new C49();
        }
        static o(a54) {
            a54 % this;
            return super.d;
        }
    }
    new C46();
    v31["p" + v42] = v42;
}
f5(-0.0, -1000000000.0);
const v63 = new Int8Array(16);
new Uint8Array(2692);
new BigInt64Array(4);
let v70 = -2147483648n;
class C72 {
    static m(a74) {
        ({"a":C72,"h":v70,} = this);
    }
}
const v75 = new C72();
const v76 = new C72();
f5();
v63.constructor;
URIError(Float64Array);
class C82 {
}
const o83 = {
};
o83.b = v75;
const o84 = {
};
Object.defineProperty(o84, "b", { writable: true, value: v76 });
const v85 = new C82();
let v86;
try { v86 = v85.constructor(); } catch (e) {}
const v87 = new C82();
const v88 = v87.__lookupGetter__;
let v89;
try { v89 = v88(); } catch (e) {}
const v90 = new C82();
const v91 = v90.constructor;
new v91(C72, v86, C82, o83);
const v95 = new Float32Array();
try { v95.forEach(v89, v76); } catch (e) {}
function F98(a100, a101) {
    if (!new.target) { throw 'must be called with new'; }
}
new F98();
function f103() {
    return 16;
}
const v108 = 129 >> 129;
let v109 = v108 * v108;
v109--;
const v111 = new BigUint64Array();
let v112;
try { v112 = v111.filter(v91); } catch (e) {}
class C113 {
}
const v114 = new C113();
const v115 = v114.__lookupGetter__;
try { v115(); } catch (e) {}
function f117(a118) {
    return a118;
}
const v119 = v114.constructor;
new v119(v89);
const v121 = new C113();
v121.propertyIsEnumerable(v119, v112, o84);
const v123 = new C113();
const t125 = v123.constructor;
const v125 = new t125();
const v126 = /[\11]/gm;
v126.e = v126;
const v127 = /a(?!bbb|bb)c/vi;
Object.defineProperty(v127, "toString", { value: f117 });
const v128 = v127.toString;
const v129 = new v128(BigUint64Array, 246, C72, v127, v128);
const v130 = v129.__lookupGetter__;
try { v130(); } catch (e) {}
const v133 = new Uint16Array(C82);
const v134 = v133[1];
const v135 = v134 & v134;
const v138 = new Int32Array(v125, 31, 560);
v138[30];
function f140() {
    return Int32Array;
}
const v141 = f140();
v141.e = v141;
const v143 = f140().e;
function F144(a146, a147, a148) {
    if (!new.target) { throw 'must be called with new'; }
    a147 === a147;
    this.constructor;
}
class C151 {
}
const v152 = new C151();
with (v127) {
    flags = v135;
    const v156 = v152 ** 255;
    Math.exp(v76);
    v156 << v76;
}
new F144(undefined, v152);
new v143();
