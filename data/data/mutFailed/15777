const v0 = [-65536,-1073741824,-106203397];
const v1 = [-8,30311,3,128];
const v2 = [9,-7,4];
function f3(a4) {
    const o19 = {
        "h": v1,
        8: v0,
        ...v0,
        [v1](a6) {
            a6.length;
            let v9 = Math;
            const v12 = 1019742121 >> 1019742121;
            v9.abs(this);
            ~-12;
            let v15 = +v12;
            --v15;
            v12 && v15;
            --v9;
            return -12;
        },
    };
    return o19;
}
const v20 = f3(v1);
f3(v0);
const v22 = f3(v0);
const v26 = ["valueOf",v0,v2];
const v27 = [v22,v26];
[v27,v20];
[2147483648];
const v31 = /(l{z})/s;
function F32(a34) {
    if (!new.target) { throw 'must be called with new'; }
    const v35 = this.constructor;
    try { new v35(v31); } catch (e) {}
    a34.b = v27;
}
new F32(v31);
new F32(v31);
function f39(a40, a41) {
    class C42 {
        constructor(a44, a45) {
        }
    }
    const o47 = {
    };
    const t46 = "symbol";
    t46(o47);
    for (let v49 = 0; v49 < 50; v49++) {
        new C42();
    }
}
new v26(f39);
class C53 {
}
const v54 = new C53();
const v55 = [v54];
try { Uint8Array.from(v55); } catch (e) {}
function f58(a59, a60) {
    function f61() {
    }
    function f62(a63) {
    }
}
new Promise(f58);
