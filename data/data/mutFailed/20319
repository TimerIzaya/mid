let v2 = 220725.27653592709;
class C3 {
    e;
    o(a5) {
        const t4 = this.__proto__;
        t4[a5] **= a5;
        return this;
    }
    constructor(a8, a9) {
        const v10 = this.o(this, v2, -1000000.0, this, -1000000.0);
        try { v10(a8, a9); } catch (e) {}
    }
    [C3] = 3.3535744171763475e+307;
    c = v2;
    static get c() {
    }
    static #f;
    /*
    constructor(a14, a15) {
        try {
            v2++;
        } catch(e17) {
        }
    }
    */
    [-1] = 3.3535744171763475e+307;
    static #c;
    a;
}
const v20 = new Uint8ClampedArray(995);
try {
    v20.c = 995;
    for (let v21 = 0; v21 < 5; v21++) {
        function f22() {
            const v23 = [1000000.0,0.218433446981681,-5.0,-919787.2036172998,872389.6270716691];
            const v24 = v23.pop;
            let v25;
            try { v25 = v24(v23); } catch (e) {}
            return v25;
        }
        f22();
        %OptimizeFunctionOnNextCall(f22);
    }
} catch(e27) {
}
const v28 = new C3();
const v29 = new C3();
const v30 = new C3();
class C31 {
    9 = v30;
    static #toString(a33, a34, a35, a36) {
        return 995;
    }
    #h = -1000000.0;
    constructor(a39, a40, a41) {
        Object.defineProperty(this, 512, { enumerable: true, value: -1000000.0 });
    }
    static [v30];
    1116601172 = v29;
    #c;
    get a() {
    }
    /*
    constructor(a44) {
        super();
        for (let v45 = 0; v45 < 25; v45++) {
            this["p" + "p"] = v45;
        }
    }
    */
    a = -1000000.0;
    3553105781 = v29;
    static [C3];
    static #a;
}
new C31(v29, v2, 3.3535744171763475e+307);
new C31(v28, v2, -1000000.0);
new C31(v29, v2, -1000000.0, v29, v28);
function F51(a53, a54, a55, a56) {
    if (!new.target) { throw 'must be called with new'; }
    const v57 = this.constructor;
    let v58;
    try { v58 = new v57(a54, v2, -1000000.0); } catch (e) {}
    typeof v58 === "a";
}
new F51(F51, F51, F51, F51);
new F51();
