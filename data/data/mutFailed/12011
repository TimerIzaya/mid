class C3 {
    #e;
    constructor(a5, a6) {
        a6[Symbol.matchAll] = a5;
    }
    static #d;
    ["matchAll"] = "matchAll";
    #h = 65535;
    1024 = 357.68066537066534;
}
const v9 = new C3(C3, 357.68066537066534);
const v10 = new C3(v9, 357.68066537066534);
const v11 = new C3(65535, v9);
function F12(a14, a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v10;
    } catch(e17) {
    }
}
const v18 = (a19, a20) => {
    a19[-v11] <<= 65535;
    return "matchAll";
};
const v22 = new F12(C3, v9, C3);
new F12(v11, v10, v9);
new F12("matchAll", C3, v22);
const v25 = /\xed\xb0\x80+/uis;
/MZ{abc/gm;
const v27 = /(l{z})/s;
function F28(a30) {
    if (!new.target) { throw 'must be called with new'; }
    const v31 = this.constructor;
    try { new v31(v27); } catch (e) {}
    a30.b = a30;
    a30.dotAll;
}
const v34 = new F28(v25);
const v35 = new F28(v27);
new F28(v27);
const v37 = [128,5,268435456,127,4096];
const v38 = [-185039418,1565119373,33166,29980,-4294967296,1554841923,-1646058516,-15,1,255];
Uint8Array.h = Uint8Array;
const v42 = new Uint8Array();
const v43 = v42.constructor;
try { v43(v43, v34); } catch (e) {}
try { new v43(); } catch (e) {}
v42[44610];
function f48(a49, a50) {
    const v54 = Array();
    let v55 = 1000000000.0;
    new Float32Array(3);
    new Uint32Array(13);
    new Int16Array(554);
    function f65(a66) {
    }
    const v67 = f65();
    f65();
    class C71 {
        constructor(a73, a74) {
            const o77 = {
                "type": "minor",
            };
            o77.b = o77;
            gc(o77);
        }
    }
    const v79 = new C71(v67, 655864.1717298129);
    const v80 = v79.__defineGetter__;
    try { v80(4, 4); } catch (e) {}
    new C71();
    const v83 = new C71();
    v55 /= -2.2250738585072014e-308;
    for (let i85 = 0; i85 < 7; i85 + i85, i85++) {
        const v92 = new C71();
        const t75 = v92.constructor;
        new t75(i85, v35);
    }
    function f95() {
        return 3;
    }
    function f96(a97) {
        let v99 = "major";
        v99 = v83;
        Object.defineProperty(v38, 75, { enumerable: true, get: f95 });
        v37.pop().d;
        gc();
    }
    Object.defineProperty(v54, 0, { configurable: true, enumerable: true, get: f95, set: f96 });
    v54.unshift(3, a49);
}
f48.e = f48;
new Promise(f48);
