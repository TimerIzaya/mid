function f0() {
}
const v3 = new Int8Array(1285);
v3[653];
let v5;
try { v5 = v3.entries(); } catch (e) {}
-16059 << -16059;
const v9 = new BigInt64Array(-16059);
1 / 1;
1 - 1285;
Int16Array.d = Int16Array;
const v14 = new Int16Array(1);
try { v14.filter(1285); } catch (e) {}
function f16(a17, a18, a19) {
    a19++;
    a17--;
    a18.g = a18;
    const o27 = {
        set d(a23) {
            super.g <<= 1285;
            /U9V/u;
            /foo[z]*/vimsy;
            /\cAkSxyz?/gudmy;
        },
        ...v9,
        "f": Int16Array,
        __proto__: v9,
        "b": 1285,
        ...v5,
    };
    return o27;
}
const v28 = f16(1, Int16Array, 1);
f16(1, v28, 1285);
const v30 = f16(1285, Int8Array, -16059, 1, v9);
class C31 {
}
C31.length = C31;
const v32 = new C31();
class C33 {
    constructor(a35, a36, a37) {
        const v38 = a35?.constructor;
        const v39 = v38?.d;
        try { new v39(BigInt64Array, C31); } catch (e) {}
        try { new v38(); } catch (e) {}
        for (let v42 = 0; v42 < 32; v42++) {
            v42 ^ v42;
            ("p")[0];
            a35["p" + v42] = a37;
        }
    }
}
C33.name = C33;
try { new v30(C31, v28, v30); } catch (e) {}
const v48 = new C33(v32);
v48.g = v48;
-C31.length;
const v53 = new Uint16Array(3225);
for (const v54 of v53) {
    v54 > v54;
}
const o56 = {
    __proto__: v32,
};
o56.p21;
v14.p31 >>> v3;
