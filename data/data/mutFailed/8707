function f0() {
    const v4 = 0.9647042188956556 - 0.9647042188956556;
    const o13 = {
        __proto__: "multiline",
        [1.5716867833615152e+308](a6) {
            for (let v10 = 0; v10 < 32; v10++) {
                this["p" + v10] = v10;
            }
            return "multiline";
        },
    };
    function f14() {
        var f = v4;
        return ("multiline")[v4];
    }
    o13[Symbol.toPrimitive] = f14;
    return o13;
}
const v18 = f0();
const v19 = f0();
const v20 = f0();
v20.c = v18;
v20.c = v20;
const v22 = ~536870889;
const v25 = Array(1000);
class C26 {
    static #n(a28) {
    }
}
const v31 = /o/gviy;
v31.c = v22;
v31.c = v31;
const v32 = /n7+/udm;
function f33() {
    return f0;
}
Object.defineProperty(v32, "toString", { configurable: true, enumerable: true, get: f33 });
try { v32.toString(); } catch (e) {}
const v35 = /N\u0034\P{sc=Greek}/gvimsy;
function f36() {
    return Uint8ClampedArray;
    return C26;
}
v35[Symbol.toPrimitive] = f36;
function f40(a41, a42, a43) {
    Object.defineProperty(a42, "toString", { configurable: true, enumerable: true, value: f33 });
    const o106 = {
        __proto__: a42,
        o(a45, a46, a47) {
            const o48 = {
            };
            try {
                Object.defineProperty(Uint8ClampedArray, 1, { value: [7.554475698528474] });
                -9223372036854775808n <= 2.220446049250313e-16;
                o48.c = v31;
            } catch(e54) {
            }
            try {
                const o55 = {
                };
                o55.c = v31;
                o55.f = v32;
            } catch(e56) {
            }
            try {
                const o57 = {
                    "b": this,
                    "g": C26,
                    "e": v25,
                    "e": v22,
                    65537: v18,
                };
                o57.c = v31;
                o57.f = v32;
                o57.d = a45;
            } catch(e58) {
            }
            let v59 = 1000.0;
            class C60 {
                toString(a62, a63, a64, a65) {
                    try { this["throw"](); } catch (e) {}
                    const v71 = new Uint8ClampedArray(512);
                    eval.bind();
                    const v75 = new Uint8ClampedArray(798, ...v71, eval());
                    v75[521] = v75;
                }
                constructor(a77, a78) {
                    for (let i = 0; i < 10; i++) {
                        this[this];
                    }
                }
            }
            new C60();
            /jsa\D/guisy;
            class C84 {
                static {
                    ++v59;
                }
            }
            try {
                const o89 = {
                };
                o89.c = v31;
                o89.f = v32;
                o89.d = v18;
                function f90() {
                    return f90;
                }
                new Int32Array(3239);
            } catch(e94) {
            }
            return a45;
        },
        [v32](a96, a97, a98, a99) {
            super.test();
        },
        toString(a102, a103, a104) {
            v19[v19] = a42;
            return 255n;
        },
    };
    return o106;
}
f40(v31, v18, f40(v31, v31, v18));
f40(v35, v35, v19);
const v112 = new Uint32Array(13);
v112[8] = v112;
for (const v113 in v112) {
    try { v113.repeat(v35); } catch (e) {}
    try { this.ReferenceError(v20); } catch (e) {}
    const v117 = this.escape(v113);
    try { v117.toLocaleUpperCase(); } catch (e) {}
}
