const t0 = "bigint";
new t0();
function F5() {
    if (!new.target) { throw 'must be called with new'; }
}
class C7 {
    constructor(a9, a10, a11) {
        a10.constructor = gc;
        class C13 extends a10.constructor {
        }
        new C13();
    }
}
const v15 = new C7(F5, C7);
const v19 = new Int16Array(1371);
v19.lastIndexOf(1371, 1351);
const v22 = ["symbol","symbol","symbol"];
const v23 = ["bigint",v22,"bigint"];
const v25 = [3.0];
const v26 = v15?.constructor;
try { new v26(Map, v25); } catch (e) {}
function f29() {
    return 3;
}
const v30 = ["bigint","bigint",v22,"bigint",v23];
function F31(a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        class C36 extends [a34,this,this,this,this] {
        }
    } catch(e37) {
    }
}
function f38() {
    return v30;
}
function F42(a44) {
    if (!new.target) { throw 'must be called with new'; }
    const v45 = this.constructor;
    const v47 = new Uint8Array();
    v47.__proto__;
    const v49 = /((?<=a))/gudm;
    v49.b = v49;
    try { new v45(a44); } catch (e) {}
    try {
        function f51(a52, a53) {
            return a52;
        }
        class C54 {
        }
        a44 % 257;
    } catch(e57) {
    }
}
new F42(F42);
new F42();
