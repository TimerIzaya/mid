function f3(a4) {
    const o20 = {
        [-1.0](a6, a7) {
        },
        m(a9) {
            return a9;
        },
        o(a11) {
            a11?.a;
            try {
                a11.valueOf = a11;
            } catch(e13) {
            }
            ~-296748170;
            ++a4;
            return Math.tan(a4);
        },
        ...a4,
    };
    function F22(a24) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v25 = new F22(4);
    try {
        function f26(a27, a28, a29) {
            let v30 = 0;
            do {
                const o31 = {
                };
                o31.h = v25;
                const o32 = {
                };
                o31.e = 4;
                v30++;
            } while (v30 < 7)
            f26(a29, v25, f26);
            return f26;
        }
        f26(f26, F22, f26);
    } catch(e38) {
    }
    return 4;
}
const t43 = 2.2250738585072014e-308;
const v39 = t43(2.2250738585072014e-308);
const v40 = f3(2.2250738585072014e-308);
f3(-1.0);
function f42() {
    return f42;
}
function f43(a44, a45, a46, a47) {
    const v51 = Math.sign(-693493371);
    Math.expm1(8.608858314865234e+307);
    Math.pow(12, v51);
    Math.atanh(v51);
    const o67 = {
        [a44]: 8.608858314865234e+307,
        m(a57) {
            return this;
        },
        "ownKeys": f42,
        "maxByteLength": 12,
        "e": a44,
        __proto__: a47,
        [2.2250738585072014e-308](a59, a60, a61, a62) {
            super.d = 8.608858314865234e+307;
            new f3(a61);
            delete a47[this];
            a59 **= 2.2250738585072014e-308;
            try {
                new f42();
            } catch(e66) {
            }
            return a46;
        },
        ...a44,
    };
    return o67;
}
f43(v39, f43, -1.0, v40);
f43(v40, f43(v40, f3, 8.608858314865234e+307, v40), 8.608858314865234e+307, v40);
~Infinity;
function f73() {
}
class C74 extends f73 {
    constructor(a76, a77, a78) {
        super();
        super.f = a76;
    }
}
function f82() {
    return f82;
}
function f83() {
    Object.defineProperty(arguments, 13, { enumerable: true, set: f82 });
    return arguments;
}
const t97 = 2.2250738585072014e-308;
t97();
function f86() {
    return Math.min();
}
