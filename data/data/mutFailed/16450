const v0 = /(?:(?=a))a\1\q{12,/gmsy;
9007199254740991n * 9007199254740991n;
const v4 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v5 = [601759695];
const v6 = [1073741824,1073741823,1376142744,1073741825];
function f8(a9, a10, a11, a12) {
    function f14() {
        const o21 = {
            "e": -4294967295,
            ...v4,
            ..."Vre",
            "c": a12,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a19, a20) {
                return a20;
            },
            ..."Vre",
            4: "Vre",
            5: -4294967295,
            6: -268435456,
        };
        return v5;
    }
    f14();
    %OptimizeFunctionOnNextCall(f14);
    let v24;
    try { v24 = v6[a11](..."find", a12, ...v5, ...v6, ...522675525n); } catch (e) {}
    v24 <= a11;
    return arguments;
}
const v26 = /1/gv;
v26.toString = f8;
/foo(?=bar)baz/vims;
class C28 {
    toString(a30, a31) {
        try { new a31(v26, v0); } catch (e) {}
        try {
            v0.test("KtQUw");
        } catch(e35) {
        }
        return a31;
    }
    e;
    static [v26] = v0;
}
const v36 = new C28();
const v37 = new C28();
function f39() {
    "Vre" - (undefined << 0.28963498121041586);
    return f39;
}
%OptimizeFunctionOnNextCall(f39);
const v44 = new C28();
function f48(a49, a50) {
    const o56 = {
        "f": a49,
        set g(a52) {
            -a50;
            Object.defineProperty(C28, "a", { value: a52 });
            try { a49["getFullYear"](a50, "getFullYear", a49, "getFullYear"); } catch (e) {}
        },
        ...v44,
        1601561911: v36,
        "e": v37,
        "b": a49,
    };
    return o56;
}
const v57 = f48(43963, 13);
f48(v57, v57);
const v59 = f48(v37, v37);
new BigInt64Array(15);
const o67 = {
    m(a66) {
        return a66;
    },
    __proto__: 946.0676210033328,
};
const v69 = new Uint8ClampedArray(16);
const v72 = new Int16Array(8);
for (const v73 in v69) {
    delete v72?.buffer;
    new Int16Array(7);
    new Float32Array(2801);
    new Uint8ClampedArray(3070);
}
const o89 = {
    "execution": "sync",
    "type": "minor",
};
gc(o89);
const v91 = new Array(3457);
const v92 = [0.0,1000000000.0,-9.821086765219384e+307,-858.0794579951759];
const v93 = [-2.0,-1.5384788741465538,-2.0];
const v94 = [0.9388990264144315,-1e-15,-1.0,841561.2554243801];
class C95 {
    static a;
    n(a97, a98) {
        try { a98["push"](...v92, ...a98, ...v92, ...v93, ...this); } catch (e) {}
        return "push";
    }
    static b;
    static m(a102) {
        try { new a102(this, this, v92, this); } catch (e) {}
        v92 < v94;
        const o105 = {
        };
        new Proxy(this, o105);
        return v94;
    }
    static #a = 3457;
    static [v91];
    #h;
    static [v94] = BigInt64Array;
    static #g;
}
new C95();
let v109 = new C95();
const v110 = v109?.constructor;
function f111(a112) {
    for (let v113 = 0; v113 < 25; v113++) {
        a112["p" + v113] = v113;
    }
    return 43963;
}
v110.toString = f111;
try { new v110(); } catch (e) {}
new C95();
const v121 = Array["of"](C95, C95);
try {
    v91.pop();
} catch(e123) {
}
Float64Array.e = Float64Array;
new Float64Array(257);
const v127 = new Uint32Array(6);
v127.constructor = f8;
function F130() {
    if (!new.target) { throw 'must be called with new'; }
}
const v132 = new F130();
const v133 = [F130,F130,F130];
function f134(a135) {
    try {
        v133.some();
    } catch(e137) {
        e137.stack;
    }
    return a135;
}
v133.toString = f134;
const o140 = {
    __proto__: v133,
    "e": v132,
    get a() {
        return this;
    },
};
const v141 = new Float32Array(706);
try { v141.every(Uint32Array); } catch (e) {}
class C143 {
}
const v145 = Symbol.toPrimitive;
function f146() {
    for (let v147 = 0; v147 < 5; v147++) {
        v147++;
        v147 / v147;
        function f150() {
            return f146;
        }
    }
    return f146;
}
C143[v145] = f134;
function F151() {
    if (!new.target) { throw 'must be called with new'; }
}
F151.a = "-1073741824";
F151.a = F151;
const v153 = new F151();
v153.constructor = f134;
const o154 = {
};
try {
    const v157 = new Int32Array(12);
    for (const v158 in v157) {
    }
} catch(e159) {
}
const v160 = v153?.constructor;
v109 |= o140;
Symbol(v121);
try { v127.slice(16, 257); } catch (e) {}
try { v145.o(16, v132); } catch (e) {}
delete v69[56];
try { new v160(); } catch (e) {}
const v166 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
let v168 = 9007199254740991n * 9007199254740991n;
v168--;
for (let v170 = 0; v170 < 5; v170++) {
    function f171() {
        for (let v172 = 0; v172 < 5; v172++) {
            "p" == "p";
            try { ("p").substring(C143, C143); } catch (e) {}
        }
        try {
            function f176(a177, a178) {
                f134(o67);
                return v109;
            }
            f176(6, 9007199254740991n);
            v166.forEach();
            const v183 = /efoo(?=bar)baz/usy;
            v183.sticky;
            let {"length":v185,"toString":v186,} = v133;
            /\1112/d;
            /(ab)6a(?:b)/gvd;
            try { arguments["every"]("every", v183); } catch (e) {}
        } catch(e194) {
            e194.a = 706;
            e194.a = v153;
            const v195 = [-14,13665,14];
            [-256,-59478,4294967296,1073741825,1000];
            const v197 = [-1];
            try {
                v197.valueOf = Symbol;
            } catch(e198) {
            }
            e194.a = e194;
            const v200 = f171 == e194 ? f171 : e194;
            const o201 = {
            };
            o201.e = 257;
            try {
                o201.e = v195;
            } catch(e202) {
            }
            try {
                const o203 = {
                };
                function f204() {
                    return v59;
                }
                function f205(a206) {
                    const o208 = {
                        get e() {
                            return this;
                        },
                    };
                }
                Object.defineProperty(o203, "h", { get: f204, set: f205 });
                o203.e = v195;
                o203.h = v200;
            } catch(e209) {
            }
            try {
                const o210 = {
                };
                o210.e = v195;
                o210.h = v200;
                o210.c = 6;
            } catch(e211) {
            }
            try {
                const o212 = {
                };
                o212.c = o212;
                o212.e = v195;
                o212.h = v200;
                o212.c = v93;
            } catch(e213) {
            }
        }
        const v215 = ("stack").trimStart();
        for (let v216 = 0; v216 < 5; v216++) {
            function f217() {
                v215.length;
                return v215;
            }
            f217.call();
            %OptimizeFunctionOnNextCall(f217);
        }
        const v221 = ("1073741824").constructor;
        v221.name = v221;
        function F222() {
            if (!new.target) { throw 'must be called with new'; }
            function f224(a225) {
                Object.defineProperty([58584,15,9007199254740990,2146023485], 65537, { writable: true, value: [46733,-268435456] });
            }
        }
        const v228 = v221(v168);
        try { v228.replaceAll(6, v109); } catch (e) {}
        return "1073741824";
    }
    f171();
    %OptimizeFunctionOnNextCall(f171);
}
