function f0() {
}
-974182.1913034478 << -974182.1913034478;
class C8 {
    static toString(a10, a11) {
        for (let i13 = 0; i13 < -974182.1913034478; i13++) {
            Math.exp(-9007199254740992n);
            let v23 = +7n;
            this.asin(-974182.1913034478);
            const v27 = new BigUint64Array(2799);
            const o28 = {
            };
            const t12 = o28.constructor;
            t12(2799).toExponential(v27);
            v23++;
            7n && (-1073741824 * 7n);
        }
        return f0;
    }
}
const v35 = new C8();
function f36(a37, a38) {
    ReferenceError(ReferenceError);
    return a38;
}
v35.constructor = f36;
const v41 = v35?.constructor;
try { new v41(); } catch (e) {}
const v43 = new v35();
v43.constructor = f0;
const v44 = v43?.constructor;
try { new v44(); } catch (e) {}
new C8();
function f47() {
    return -9007199254740992n;
}
const v48 = f47?.__lookupGetter__;
try { new v48(f47); } catch (e) {}
[1374369399,7,30802,-2,1818079908,481520317,-1951738099,-9,219];
[536870887,-16,-1800145516,-1,2];
[12];
const o58 = {
    n(a54) {
        Worker.arguments = Worker;
        const o56 = {
        };
        o56.e = o56;
        return Worker(o56);
    },
};
try { o58.n(); } catch (e) {}
