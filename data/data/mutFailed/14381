function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -268435456;
    } catch(e3) {
    }
    try {
        this.d = -268435456;
    } catch(e4) {
    }
}
let v5 = new F0();
const v6 = new F0();
v5 = v6;
[-41116,7,-9,256,15532];
[-548694799,65535,1,-1073741824,-2045476478,4294967296,663729408];
[4,1373614933,9,1073741823,512,65535,-2500106,-11,43722];
new Uint8Array(256);
new BigUint64Array(481);
const v18 = new Int32Array(95);
const v19 = new F0();
function f20(a21, a22) {
    function f23(a24, a25) {
        for (let v26 = 0; v26 < 5; v26++) {
            const v28 = ("imul").padEnd();
            const v29 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
            const v30 = [1073741824,1073741823,1376142744,1073741825];
            try { v30["find"](..."find", v28, ...v29); } catch (e) {}
        }
        return a24;
    }
    return v18;
}
v19.toString = f20;
function f33() {
    return v19;
}
function f34(a35, a36) {
    const o58 = {
        m(a38, a39, a40, a41) {
            delete v5[a35];
            const v44 = new Uint8ClampedArray();
            Float32Array[6] = v44;
            function f46() {
                class C47 {
                    constructor(a49) {
                        function f50() {
                            return a49;
                        }
                        Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f50 });
                    }
                }
                new C47();
                const v52 = new C47(f46);
                v52.length;
                return f46;
            }
            f46();
            try {
                f33();
            } catch(e56) {
            }
            a38 / a41;
            return a35;
        },
        __proto__: a36,
        [a36]: v6,
        "c": a36,
        "a": a35,
        "f": v5,
    };
    return o58;
}
const v59 = f34(f33, v5);
const v60 = f34(v6, v5);
const v61 = f34(f33, v19);
class C62 {
    p(a64, a65, a66) {
        a65 = f33 ^ v59;
        new F0();
        return a66;
    }
    static #a;
    static set b(a70) {
        Reflect[Reflect] = a70;
        v6.b;
        for (let v73 = 0; v73 < 32; v73++) {
            this["p" + v73] = v73;
        }
        Reflect.construct(f34, [a70,a70], f33);
        const o78 = {
            "apply": f34,
            "call": f34,
            "construct": f33,
            "defineProperty": f33,
            "deleteProperty": f34,
            "get": f34,
            "getOwnPropertyDescriptor": f33,
            "getPrototypeOf": f34,
            ...v61,
            1472320226: a70,
            "h": this,
            "b": 95,
            __proto__: v18,
            "isExtensible": f34,
            "ownKeys": f34,
            "preventExtensions": f34,
            "set": f34,
            "setPrototypeOf": f33,
        };
        new Proxy(v60, o78);
    }
}
new C62();
new C62();
new C62();
[6,-268435456,21177,10,9007199254740991];
[1513016092,-9223372036854775808,-65536,-6158,10920];
[-15];
for (let v88 = 0; v88 < 25; v88++) {
}
const v89 = new Float32Array();
v89[4294967295] = v89;
