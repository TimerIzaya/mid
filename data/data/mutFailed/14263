const v0 = [-2,5,5];
const v1 = [9];
const v2 = [-1416222556,536870887,129,-1858166111,-9007199254740991,-9007199254740992,10000,-65537,1494050996,64];
try {
    v0.slice();
} catch(e4) {
}
const v5 = v1.__proto__;
try { v5.values(); } catch (e) {}
class C7 {
    constructor(a9) {
        const v10 = this?.constructor;
        try { new v10(a9); } catch (e) {}
        function F12(a14, a15) {
            if (!new.target) { throw 'must be called with new'; }
            try { a15.keys(); } catch (e) {}
            this.b = a9;
            try {
                this.b = a9;
            } catch(e17) {
            }
            try {
                this.d = a14;
            } catch(e18) {
            }
        }
        F12.name = F12;
        const v19 = new F12(v0, v2);
        const v20 = v19?.b;
        try { new v20(F12); } catch (e) {}
        new F12(v2, v2);
        const v23 = new F12(v0, v0);
        v23.d;
    }
}
C7.d = C7;
const v25 = new C7(C7);
v25.length = v25;
const v26 = new C7(v1);
v26.length;
const v28 = new C7(v1);
v28.length = v28;
[-530160093,6];
const v30 = [-4294967297,1024,-9223372036854775807];
[-1268738455,479950551,4096,48152,7,15581,-268435456];
const v34 = new Int8Array(128);
4096 >>> 4096;
new Float32Array(4096);
let v41 = new Int32Array(512);
v41[442] = v41;
v41 ||= v26;
v30[4] ^= 512;
try {
    C7.__proto__ = v34;
} catch(e42) {
}
for (let v43 = 0; v43 < 5; v43++) {
    -268435456 !== -268435456;
    Math.atan2(-268435456, v43);
}
