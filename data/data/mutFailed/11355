class C3 {
}
const v4 = Array();
const v5 = new C3();
function f6(a7, a8, a9) {
    const o17 = {
        toString(a11, a12, a13) {
            a8 < v4;
            super[v5];
            return a8;
        },
        get d() {
            return a8;
        },
    };
    return o17;
}
function f19(a20, a21) {
    try { a20.fixed(); } catch (e) {}
    const o50 = {
        "c": "JtM",
        __proto__: "1306105111",
        ...v4,
        ..."JtM",
        m(a24) {
            const v27 = new Int8Array(3938);
            let v28 = 3;
            let v29 = 0;
            v29 >> v29;
            for (let i = 0; i < 5; i++) {
                [...v28] = v27;
                v29++;
                try {
                    a24.length = 1;
                } catch(e33) {
                }
            }
            const o34 = {
            };
        },
        get h() {
            try { this(); } catch (e) {}
            const o37 = {
                "d": "toString",
            };
            new Proxy(a20, o37);
            function f40(a41, a42) {
            }
            class C43 {
                set h(a45) {
                    eval();
                }
            }
            return o37;
        },
    };
    o50.c;
    return o50;
}
f19.caller = f19;
function F52() {
    if (!new.target) { throw 'must be called with new'; }
    [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
    new Date();
    new Uint32Array(5);
    new Set();
    const o66 = {
    };
    class C69 {
    }
    class C70 extends C69 {
    }
    const v71 = Array(19793);
    for (const v72 of v71) {
    }
    const v73 = [v71,v71,v71,v71,v71];
    for (let v74 = 0; v74 < 50; v74++) {
    }
    const v75 = [v73,v73,v73];
    function f76() {
        return f6;
    }
    Object.defineProperty(v75, "toString", { writable: true, configurable: true, get: f76 });
    const v77 = [v75];
    Uint16Array.toString = f6;
    function f79() {
        const o80 = {
        };
    }
    v77 >= Uint16Array;
}
new F52();
f19("toString", "JtM");
f19("1306105111", "toString");
const v85 = f19("toString", "1306105111");
Object.defineProperty(v85, "valueOf", { configurable: true, value: Array });
try { v85.valueOf(); } catch (e) {}
const o90 = {
};
function F91(a93, a94, a95, a96) {
    if (!new.target) { throw 'must be called with new'; }
    for (let v100 = 0; v100 < 100; v100++) {
        const o104 = {
            6: undefined,
            "d": undefined,
            [268435439n]: 2105444095n,
            __proto__: o90,
            "g": a95,
            "b": -4294967296n,
            "arguments": this,
            valueOf(a103) {
                return v100;
            },
        };
        o104[1] = o104;
    }
    -9223372036854775808 >> -9223372036854775808;
}
async function f116(a117, a118, a119) {
    return a117;
}
function f120(a121, a122) {
    try {
        C3.c = f6;
    } catch(e123) {
    }
    return a121;
}
f116.constructor = f120;
const v124 = f116.constructor;
v124.prototype = v124;
const v125 = v124();
try { v125(); } catch (e) {}
