[536870912,2,20715,-1118212914];
[-916123051];
const v8 = [-7132,747969671,2147483649,-646665993,0,6,3,-16];
let v11 = 50376;
Math.min(9007199254740990n - (-4294967297 & 9007199254740990n));
new BigUint64Array(255, 255, 255);
class C22 {
}
const v23 = new C22();
const v24 = new BigUint64Array();
function F25(a27, a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    const v31 = this.constructor;
    let v32;
    try { v32 = new v31(v24, 6, 6); } catch (e) {}
    const v33 = a27[9];
    a30--;
    v11 = -4294967297;
    try { this.normalize("string", v8); } catch (e) {}
    const t19 = -1024n;
    t19[7] = a27;
    v32 = v33;
}
const v37 = new F25(v23);
new F25(v37);
