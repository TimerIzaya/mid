const v2 = new Int16Array(4);
new Int16Array(3918);
new Int32Array(128);
[949898.4532607691,1.2389944423378445,318072.1079003783,9.080760346898206,1000000000.0,-502.0061569458614,Infinity,-2.220446049250313e-16];
[-330996.3129837747,2.2250738585072014e-308,0.2710647641363054,-350243.81674916996,-153942.09098970622,1000000000000.0,-1000000000000.0,NaN,0.0];
[-514.3190749682802,0.09775867222701096,-413.67840608894755,299.4869820509955,3.0,0.34731645131078615,0.0,NaN,-1000.0,-4.0];
const v13 = new Map();
class C14 {
}
128 == Int16Array ? 128 : Int16Array;
const v20 = 4294967295 % 4294967295;
~4096;
v20 | 128;
Math.expm1(Int16Array);
128 ^ 4294967295;
const v25 = new C14();
const v26 = new C14();
v26.__proto__;
var g = 4;
try {
    v13.length = 1;
} catch(e29) {
}
function F30(a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    const v34 = this?.constructor;
    if (v34 < v13) {
        Object.defineProperty(this, 7, { writable: true, value: v2 });
    } else {
        v2["reduce"](a33, "reduce");
    }
    try { new v34(a32, v26); } catch (e) {}
}
new F30(v26, v25);
new F30(v25, v25);
function f41() {
}
