class C3 {
    constructor(a5, a6) {
        const v7 = this?.__defineGetter__;
        try { new v7(1000.0, a5); } catch (e) {}
        a6[5] = a6;
        try {
            const v9 = /(?:ab)?k(?<!)/vd;
            v9.dotAll = v9;
            ("4294967297").replace(v9, "4294967297");
        } catch(e11) {
        }
    }
    #c = -404297.52545349754;
    static #m(a13) {
        this[1465073056];
        const o20 = {
            "maxByteLength": 2592,
        };
        const v22 = new SharedArrayBuffer(2592, o20);
        new Float32Array(v22);
        return this;
    }
}
C3.name;
const v26 = new C3("4294967297", "4294967297");
const v27 = new C3("4294967297", "4294967297");
const v28 = v27?.__defineSetter__;
try { new v28("4294967297", v27); } catch (e) {}
new C3(v27, v26);
const v32 = Set?.call;
try { new v32(v27); } catch (e) {}
new Set();
new Uint32Array(1861);
BigUint64Array.length;
new BigUint64Array(8);
Float64Array.e = Float64Array;
const v44 = new Float64Array(3140);
v44[207];
function F46(a48, a49, a50, a51) {
    if (!new.target) { throw 'must be called with new'; }
    this.b = this;
    const v52 = this.toString();
    try { v52.toLocaleLowerCase(); } catch (e) {}
    const v54 = this.constructor;
    let v55;
    try { v55 = new v54(); } catch (e) {}
    typeof v55 === "symbol";
}
new F46();
new F46();
