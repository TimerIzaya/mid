function f0() {
    const o13 = {
        "h": -2,
        ...-692421.1806673002,
        "f": -8.225742092733125,
        set c(a5) {
            typeof this === "undefined";
        },
        ...-692421.1806673002,
        1667: -8.225742092733125,
        o(a10) {
            try { this["now"](this, a10); } catch (e) {}
            return -2;
        },
    };
    return o13;
}
const v14 = f0();
const v15 = f0();
const v16 = f0();
[v15,v16,v14];
const v18 = [v15,v16,v16,v16,v15];
const v19 = [v14,v18,v18,v16,v16];
let v20;
try { v20 = v19.forEach(v16); } catch (e) {}
const v21 = [5,50334,1440662013,-1609170610,9007199254740990,-9223372036854775808,-40021,-5];
const v22 = [2147483648,-9223372036854775808,-9007199254740991,1073741824];
try { v22.map(f0); } catch (e) {}
const v26 = [1613217357,204598905,15977,1122227661,64,-2,-12,536870888];
[-1073741824,1665564361,16526,1805211777,10,-9007199254740990,4,-17063,-1];
const v28 = [-2.2250738585072014e-308,0.8014728140665155,1.4073101706157717e+308,1.4751052216559766e+308,2.0,-692.9604671107461,-2.220446049250313e-16,2.0];
try {
    f0();
} catch(e30) {
}
f0 != v21;
const v32 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
class C33 {
    constructor(a35, a36, a37, a38) {
        function f39() {
            return a35;
        }
        const o42 = {
            "maxByteLength": 955,
        };
        const v44 = new ArrayBuffer(391, o42);
        new Float32Array(v44);
        const v47 = this.constructor;
        try { new v47(v32, a37, a37); } catch (e) {}
        a36 >>> a36;
        -0.0 >>> -0.0;
    }
}
const v52 = new C33(v26, 659.0540372978887, v26);
new C33(v52, 2.220446049250313e-16, v28, v32);
const v54 = [];
v54[0] = v54;
const v55 = [-105919376,628818157];
try { v55.toString(); } catch (e) {}
const v57 = [0.9246669478526222,Infinity,-741074.1790113398,3.396409177328767,-538316.2591867184];
try { v57.group(f0); } catch (e) {}
const v59 = [1.7976931348623157e+308,4.363186469360279];
try { v59.toLocaleString(); } catch (e) {}
const v61 = [0.0,8.887351107033382e+307];
v61.g = v61;
BigUint64Array.prototype = BigUint64Array;
new BigUint64Array(2064);
new BigUint64Array(4096);
16 >>> v20;
new Float32Array(16);
try {
} catch(e78) {
    const v79 = [10,-536870912,129,-64336];
    [-9223372036854775807];
    [-13,4];
    try { v21.reduceRight(e78, e78); } catch (e) {}
    try {
        v79.flat();
    } catch(e84) {
    }
} finally {
}
