const v0 = [2.0];
[1000000000.0,1.7976931348623157e+308,-7.577908590707838,NaN,-4.0,-1.2965222782345005e+307,1.3107994153453953e+308,1000000000000.0];
[2.220446049250313e-16];
let v3 = 3977;
new Int8Array();
const o11 = {
    [0.490851131893864]: -48490,
    set h(a10) {
    },
};
const v12 = new Uint32Array(v3);
new Float32Array(7);
new Float32Array(201);
class C19 extends Float32Array {
    static {
        try { this(this, 0.490851131893864, this, ...this); } catch (e) {}
    }
    1;
    set d(a23) {
        const v26 = --v3;
        -this;
        Math.random();
        +v26;
        super.byteOffset = this;
    }
    127 = v3;
    [v12] = v0;
    d;
    a;
}
new C19();
new C19();
new C19();
("h").split(65535);
function f36() {
    return f36;
}
const v37 = [1.4598948242971485e+307,5.0,202.50817195072136];
Object.defineProperty(v37, v37, { enumerable: true, set: f36 });
const v42 = new Uint8Array();
const v45 = new BigUint64Array();
const v46 = /anVXYFzN(x)(x)(x)\3/gvdms;
try { v45.reduceRight(v46); } catch (e) {}
([20785,4096,5])[536870889];
const v51 = new Uint32Array();
function f52(a53, a54, a55, a56) {
    a53 - a53;
    for (let v58 = 0; v58 < 5; v58++) {
        const o62 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o62);
    }
    a55--;
    a56 >>> a56;
    const v66 = a54--;
    v66 + v66;
    a56 + a55;
    const o72 = {
        "b": a53,
        "c": a56,
        ...v42,
        n(a70, a71) {
            v51[a53] = v51;
            return a71;
        },
    };
    ([-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0]).forEach();
    function f75() {
        const o76 = {
        };
        o76.f = o76;
        return o76;
    }
    try { o72.n(o72, -2); } catch (e) {}
    return a55;
}
f52(2, 2, 1, 2);
for (let v79 = 0; v79 < 500; v79++) {
    f52(Uint8Array, 2, v79, 2);
}
