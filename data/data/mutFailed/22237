class C3 {
    #e = -1000000000000.0;
    static {
    }
    constructor(a6, a7) {
        function f8(a9) {
            Object.defineProperty(a6, f8, { value: this[this]() * a6 });
            return Uint8Array;
        }
    }
    m(a25) {
        a25["RlN9W"] = this;
        let v26 = 1073741824;
        class C28 {
            constructor(a30) {
                [a30,v26] = "boolean";
            }
        }
        const v31 = new C28();
        const o32 = {
            ...a25,
            2: v31,
            268435439: C28,
        };
        %VerifyType(-892979.5328229741);
        try {
            this.fuck(null, a25, -892979.5328229741, -892979.5328229741);
        } catch(e35) {
        }
        return "RlN9W";
    }
    b;
    #g = "RlN9W";
    #d;
    #f;
    static #m(a37) {
    }
    3599519383 = "RlN9W";
    #f = "RlN9W";
}
const v38 = new C3();
const v39 = new C3();
const v40 = new C3();
function f41(a42, a43) {
    function F44() {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.g = -3;
        } catch(e47) {
        }
        try {
            this.f = -3;
        } catch(e48) {
        }
    }
    const o90 = {
        "g": v39,
        [-1000000000000.0](a50, a51, a52, a53) {
            try {
                a42.toString = a51;
            } catch(e54) {
                class C55 {
                    e;
                    a;
                    static {
                        for (let v61 = 0; v61 < 50; v61++) {
                            v61 < v61;
                            class C63 extends Date {
                            }
                            [601759695];
                            [1073741824,1073741823,1376142744,1073741825];
                            function F67(a69, a70) {
                                if (!new.target) { throw 'must be called with new'; }
                                this.a = a70;
                            }
                            new F67(522675525n);
                            new F67(522675525n);
                            for (let v73 = 0; v73 < 10; v73++) {
                            }
                            v61++;
                        }
                    }
                }
            }
            return -892979.5328229741;
        },
        get f() {
            this[a43] = v38;
            a43 * a43;
            a = Infinity;
            function f78(a79, a80, a81, a82) {
                a79.length;
                a81++;
                const o85 = {
                };
                return o85;
            }
            super[Infinity];
            return typeof a43 === "string";
        },
    };
    return o90;
}
const v91 = f41(v38, v39);
const v92 = f41(v39, v38);
const v93 = f41(v40, v39);
function f97(a98, a99) {
    const o113 = {
        202722455: -9007199254740991n,
        "f": a99,
        set a(a101) {
            this[-2] /= -1000000000000.0;
            for (let v102 = 0; v102 < 20; v102++) {
                class C105 {
                    constructor(a107) {
                        for (const v108 of "bigint") {
                            this.c = v108;
                        }
                    }
                    h = undefined;
                }
                new C105();
                for (let v110 = 0; v110 < 32; v110++) {
                    v93["p" + v110] = v110;
                }
            }
        },
        __proto__: v93,
        [v40]: f41,
        "e": v40,
    };
    return o113;
}
f97(v93, -9007199254740991n);
f97(v91, -642959696n);
f97(v92, -642959696n);
for (let v117 = 0; v117 < 5; v117++) {
    function f118() {
        function f119(a120, a121, a122) {
            return a122;
        }
        const o125 = {
            "type": "function",
        };
        const v126 = new Worker(f119, o125);
        v126.terminateAndWait();
        v126.terminate();
        return o125;
    }
    f118();
    %OptimizeFunctionOnNextCall(f118);
}
