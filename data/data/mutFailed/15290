function f0() {
    const o22 = {
        [0.23527283837587043]: "536870888",
        "d": 0.23527283837587043,
        2: "toPrimitive",
        "f": f0,
        "g": "536870888",
        "c": "536870888",
        "e": f0,
        ["toPrimitive"]: f0,
        o(a5) {
            const v7 = new Date();
            super[v7];
            const v9 = (a5 = "536870888")[f0];
            [f0,Date];
            const v11 = [v9];
            [v11,v11,a5,v9,v11];
            v7["setUTCSeconds"](..."setUTCSeconds", a5, ..."toPrimitive", this, Date);
            const v17 = --f0;
            Math.cos(v17);
            v17 * "536870888";
            +v17;
            Math.trunc(0.23527283837587043);
            return v7;
        },
    };
    return o22;
}
f0();
const v24 = f0();
v24();
[-26731,-268435456,4294967295,536870888,4943,-256,10000];
[-4,2147483647,268435439,1466707209,-1674487745,65535,9007199254740990,268435456];
[-980920091,1073741824,1073741825,-542020807,1765029785,536870887,-578744133];
new v24();
/a\sc[x]kra(?=b)/vi;
/(ab|cde)\1a|bc/uis;
/(?<=a)/gvmsy;
function F37() {
    if (!new.target) { throw 'must be called with new'; }
    function f39() {
        const o40 = {
        };
        return o40;
    }
    const v41 = f39();
    const v42 = f39();
    const v44 = [Uint8Array];
    v44["indexOf"](v41, v42);
    const v47 = v44.constructor;
    try { new v47(); } catch (e) {}
}
new F37();
