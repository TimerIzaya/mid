[1073741824,64,4294967296,-53786,14,-1597261436];
[5,35504,-12];
const v2 = [-17496,-2147483649,-54045,3,2147483647,9];
const t3 = 3220;
t3.d = Int8Array;
new Int8Array(3220);
const v8 = new Uint8ClampedArray(v2);
try { v8.reduce(v2); } catch (e) {}
const t8 = 3220;
new t8(4010);
const t10 = 1.0 >= 1.0;
const v19 = new t10([749138.7740098275,-413.55890355139604,-2.0,5.0,4.0,1.7976931348623157e+308,1.0,5.956393081352694]);
v19[7];
const v1 = new Map();
const v2 = [4,-35306,7136,-2147483648,1073741825,-65535,10000,-19550868,-64946];
const v3 = [0,-60290,9007199254740991];
let v4;
try { v4 = v3.findLastIndex(v2); } catch (e) {}
[-1929214021];
class C6 extends Map {
    static #p(a8, a9) {
        const v10 = this.constructor;
        class C11 extends v10 {
            static 6;
            static 127 = v10;
            #g = v1;
        }
        new C11();
        return a8;
    }
}
const v13 = new C6();
const v14 = new C6();
function f15() {
    return Map;
}
try {
    C6[7] = v2;
} catch(e16) {
}
const v17 = new C6();
const v18 = v17?.has;
try { v18.call(v17); } catch (e) {}
try { new v18(v4); } catch (e) {}
const v22 = -4n;
const v24 = 10n === 10n;
v24 || v24;
const v27 = 19322n / 19322n;
const v28 = v27 % v27;
const v29 = [1073741824,1756196835,536870889,256,6,58443];
let v30;
try { v30 = v29.toSorted(19322n); } catch (e) {}
const v31 = [2,257,-10,2102434943,-1816686577,-15];
v31.g = v31;
const v32 = [-938173549,-7,-9223372036854775807,8,-536870912,1073741825,5,257,36585,-56792];
const v33 = v32?.groupToMap;
try { new v33(v1); } catch (e) {}
const v35 = [2.220446049250313e-16,4.817717597327409,1e-15,-1000000000000.0,-1000000.0,2.0,-3.382353865622333e+306,134.7295617651339];
try { v35.splice(10n, v17); } catch (e) {}
const v37 = [NaN,-5.161337834188833e+307,NaN,-984.7986985006023];
try { v37.indexOf(v22); } catch (e) {}
const v39 = [-1000000000.0,226.41468646930184,145.7749307686554,945.9985168168885,NaN,-2.0];
v39[3];
v39.c = v39;
v39[5] = v39;
class C41 {
    constructor(a43, a44, a45) {
        try { a45.toSorted(a43); } catch (e) {}
        this.b = this;
        try { a43.map(v13); } catch (e) {}
        let v48;
        try { v48 = a44.some(v32); } catch (e) {}
        this.f = this;
        const v49 = a45[3];
        v49 + v49;
        const v51 = ~v49;
        v51 - v51;
        let v53;
        try { v53 = v35.findLastIndex(v39); } catch (e) {}
        const v54 = v37.constructor;
        v54.prototype = v54;
        v54.d = v54;
        try { v54.from(C41); } catch (e) {}
        class C56 extends v54 {
            b = v37;
            h = v29;
        }
        let v57;
        try { v57 = new C56(); } catch (e) {}
        function f58() {
            return v57;
        }
        v57[3] >>= v57;
        function F59(a61, a62, a63, a64) {
            if (!new.target) { throw 'must be called with new'; }
            const v65 = this?.constructor;
            try { new v65(v30, a62, v48, a62); } catch (e) {}
            a61--;
            try { a63.groupToMap(this); } catch (e) {}
            try {
                this.e = a61;
            } catch(e69) {
            }
            try {
                this.g = f58;
            } catch(e70) {
            }
            try {
                this.f = C6;
            } catch(e71) {
            }
        }
        F59.b = F59;
        new F59(4n, v14, v57, v1);
        new F59(v48, v53, v22, v14);
        new F59(a45, v48, a43, v1);
        let v75;
        try { v75 = v57.unshift(v53); } catch (e) {}
        v75 / v75;
    }
    a;
    static [v39] = v32;
    h = v31;
    static 724884816 = v39;
    #a = v35;
}
C41.length = C41;
C41.length = C41;
new C41(v29, v31, v39, v35, v31);
const v78 = new C41(v39, v31, v32);
v78.h;
v78.a;
if (v4 <= v3) {
    Object.defineProperty(v3, "b", { enumerable: true, get: f15, set: f15 });
} else {
    const o82 = {
    };
    o82.h = o82;
    try {
        o82.d = v28;
    } catch(e83) {
    }
    try {
        const o84 = {
        };
        o84.d = v28;
        o84.b = C41;
    } catch(e85) {
    }
    try {
        const o86 = {
        };
        o86.d = v28;
        o86.b = C41;
        o86.e = v29;
    } catch(e87) {
    }
    try {
        const o88 = {
        };
        o88.f = o88;
        o88.d = v28;
        o88.b = C41;
        o88.g = v29;
    } catch(e89) {
    }
}
const v90 = new C41(v78, v35, v29);
v90.f = v90;
v90.a;
