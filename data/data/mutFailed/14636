function f0() {
}
class C1 {
    static 2 = C1;
    static h;
    static get e() {
        const v4 = new C1();
        ~WeakSet;
        v4[v4] = f0;
        super[v4];
        new Int16Array(1);
        new Int32Array(16);
        new Int32Array(16);
        return 1;
    }
}
const v16 = new C1();
const v17 = new C1();
const v18 = new C1();
function f19(a20, a21) {
    const o29 = {
        "b": v17,
        "c": a20,
        o(a23, a24) {
            typeof a20 === v16;
            v16.__proto__;
            a24[3556391396] /= a23;
            return v17;
        },
        1698: v16,
        "h": v18,
        "e": v17,
        __proto__: C1,
    };
    return o29;
}
const v30 = f19(C1, v16);
f19(v17, v30);
f19(v18, v18);
function F36(a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a39;
    } catch(e40) {
    }
}
const v41 = new F36(v30, 279.18977069408766);
new F36(v41, -376.86959783982195);
new F36(v18, -376.86959783982195);
new Array(5);
const t50 = BigInt64Array.BYTES_PER_ELEMENT;
const v53 = new t50(257);
try { v53.join(64); } catch (e) {}
257 != 1590;
new BigInt64Array(1590);
BigInt64Array.name = BigInt64Array;
new BigInt64Array(9);
536870888 / 145253519;
function f66() {
    return -2147483648;
}
function F67(a69) {
    if (!new.target) { throw 'must be called with new'; }
    const v70 = this?.constructor;
    try { new v70(a69); } catch (e) {}
    try {
        this.f = 145253519;
    } catch(e72) {
    }
}
new F67();
-65106n ^ -65106n;
Int8Array.d = Int8Array;
const o79 = {
    "execution": "async",
};
o79.execution;
gc(o79);
