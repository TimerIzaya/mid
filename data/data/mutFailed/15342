const v0 = /Iabc|def|ghi/vims;
const v1 = /abc|defnka?/vm;
const v2 = /GX1a8+/udiy;
function f3() {
    return v2;
}
let v6 = 9.165479364544835e+307;
let v7 = 670;
const v9 = Array(v7);
function f10(a11, a12, a13, a14) {
    const v17 = new Date(a11);
    const v19 = new Set();
    const v20 = v19.add(v17);
    let [v21,,...v22] = v19;
    let v23;
    try { v23 = v22.findLast(); } catch (e) {}
    const v24 = v21.setUTCHours(v20, Float64Array, v22);
    const o26 = {
        __proto__: v19,
    };
    function f27() {
        return v23;
    }
    const v28 = f27();
    class C29 extends f27 {
    }
    const v31 = new Int32Array(v28);
    Number.isNaN(v24);
    return v21.setUTCFullYear(v31, f10, f10, v21);
}
function f34(a35, a36) {
    f34 -= f3;
    function f37() {
        return v6;
    }
    try { a35["n"](); } catch (e) {}
    const o54 = {
        ...a36,
        "e": a35,
        "a": v2,
        ...v0,
        [f3]: -4.0,
        valueOf(a41, a42, a43) {
            function f44(a45, a46) {
            }
            f44();
            ("Vre").toLocaleUpperCase;
            const v50 = this[-2];
            const v51 = [a42,a36,f3];
            let v52;
            try { v52 = v50(v51, a41); } catch (e) {}
            return 0.7843752680668801 ^ v52;
        },
    };
    return o54;
}
f34(v0, v0);
f34(v0, v0);
f34(v1, v1);
let v59 = "max";
const v61 = [601759695];
const v62 = [1073741824,1073741823,1376142744,1073741825];
function f64(a65, a66, a67, a68) {
    const v71 = new Uint8ClampedArray();
    Math.acosh(v71 & -2);
    let v76;
    try { v76 = v62["find"](..."find", a68, ...v61, ...v62, ...522675525n); } catch (e) {}
    return v76;
}
f64();
class C80 {
    set a(a82) {
        v59 = this;
        v7--;
        new Uint8ClampedArray();
        -5 == 0n;
        const o89 = {
        };
        o89.g = v59;
        const o90 = {
        };
        new Int32Array(-5);
        const v93 = [4.0];
        try { v93.some(a); } catch (e) {}
        o90.g = v59;
        const o96 = {
        };
        o96.g = v59;
        const o97 = {
        };
        o97.g = v59;
    }
}
const v98 = new C80();
v98[f10] = v9;
v6 -= -4.0;
try {
    new Array(65536);
} catch(e100) {
}
const v101 = new C80(v98, v59, 0.7843752680668801);
new C80();
function F103(a105, a106, a107) {
    if (!new.target) { throw 'must be called with new'; }
}
let v108 = BigUint64Array;
new v108();
const v111 = new Uint8Array();
~v59;
C80[Symbol.toPrimitive] = v7;
const v117 = v108--;
v117 & v108;
-(-1676849574) / -1676849574;
Math.sin(v117);
-1676849574 % (v117 ** v108);
const v124 = v101 ^ v101;
const o128 = {
    "b": F103,
    ...v111,
    n(a126, a127) {
        return v124;
    },
};
new F103(1073741824, F103, v98);
const v130 = new F103(1073741824, v59, v59);
new F103(65536, "NapmW", v98);
const t126 = "NapmW";
t126[v130] = "h";
try {
    v101.fuck(v59, "h");
} catch(e133) {
}
C80 += v59;
new F103(65536, F103, v98);
[-1.0,-2.2250738585072014e-308,2.0,-3.0,5.832977280432409,1e-15];
[1000000000000.0,-213862.531301692,3.0,242.58489644386714,-Infinity,-8.01478763060209,-4.3475874202234617e+307,NaN,-1000000.0];
[6.578674051799194e+307,-1e-15,-3.0,0.6097660113731397,-1000.0,-1000000000000.0,1000.0,Infinity];
