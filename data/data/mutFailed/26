function f0() {
    const o6 = {
        "e": 449111004,
        m(a5) {
            const t4 = "getFloat32";
            t4[a5] = this;
            return 2.220446049250313e-16;
        },
        ..."getFloat32",
        "f": 449111004,
        "b": 2.220446049250313e-16,
        4: 449111004,
        ["getFloat32"]: 449111004,
    };
    return o6;
}
const v7 = f0();
f0();
const v9 = f0();
let v10 = -378.5903240105147;
let v11 = 3.0;
v11--;
v10++;
function F15(a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.toString(); } catch (e) {}
    a17[9] = a17;
    try {
        this.c = a18;
    } catch(e20) {
    }
    try {
        this.g = v10;
    } catch(e21) {
    }
}
const v22 = new F15(v7, v7);
new F15(v7, v9);
new F15(v9, v7);
4096 % 4096;
let v27 = 9;
v27++;
let v30;
try { v30 = new BigInt64Array(v22, v11, v22); } catch (e) {}
const v31 = new BigInt64Array(v27);
const v32 = [-0.0,-2.0,-1e-15,2.0,-Infinity,2.220446049250313e-16];
const v33 = [0.7413321115775521,436298.36999994353,-547.5300741212703,1.0,-1e-15,8.397732840452793,-1000000000.0,6.84258291941704];
v31["lastIndexOf"](4096);
const v37 = Symbol.toPrimitive;
v30.for(v37.description);
v33.toLocaleString(("lastIndexOf")[v37], v32);
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = 10;
    } catch(e7) {
    }
    try {
        this.g = 7;
    } catch(e8) {
    }
}
const v9 = new F3(10, -26087);
const v10 = new F3(v9, -26087);
const v11 = new F3(F3, -26087);
[-937340.816947376,2.2250738585072014e-308,1000000.0,1000000.0,881141.5194375152,824.6670256321509,-259.9491716108415,-1.6397861268200822e+308];
[2.220446049250313e-16];
[-1000000000.0,-5.0];
function F15(a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    function f19(a20) {
        try { a20.toSpliced(F15, this); } catch (e) {}
    }
    Object.defineProperty(this, "e", { writable: true, configurable: true, set: f19 });
    try {
        this.f = a18;
    } catch(e22) {
    }
    try {
        this.e = a17;
    } catch(e23) {
    }
    try {
        this.d = a17;
    } catch(e24) {
    }
}
new F15(v10, v11);
new F15(v11, v11);
new F15(v11, v9);
function f28() {
    const o43 = {
        valueOf(a33) {
            try {
                this[a33] = this;
            } catch(e34) {
            }
            return this;
        },
        __proto__: "function",
        [-52276]: -410.8373818683839,
        2: -52276,
        "c": f28,
        "h": -52276,
        "e": f28,
        n(a36) {
            try {
            } catch(e37) {
            }
            (29928 + -52276) / (29928 / -410.8373818683839);
            return -52276;
        },
    };
    return o43;
}
const v44 = f28();
Object.defineProperty(f28(), 5, { set: f28 });
v44.c;
new Int8Array(5);
new Int32Array(1024);
new Uint32Array(15);
class C60 {
    constructor(a62) {
        try {
            super.p(9.244656323931028e+307, f);
        } catch(e65) {
        }
    }
}
