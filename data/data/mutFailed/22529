const v0 = [13,1565615391,8,-1073741824];
const v1 = [51484,-9007199254740990,-9223372036854775807];
const v2 = [1210653892,-8,1599057885,4,512,1485636149,-2132277830,4];
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a5;
    } catch(e7) {
    }
    try {
        this.g = v2;
    } catch(e8) {
    }
    try {
        this.d = v0;
    } catch(e9) {
    }
}
new F3(v2, v1);
new F3(v2, v0);
const v12 = new F3(F3, v1);
function f20(a21) {
    v2 - -1024;
    return -1024;
}
Int32Array[Symbol.iterator] = f20;
const v26 = new Int32Array(Int32Array, Int32Array, Int32Array);
const o31 = {
    toString(a28, a29, a30) {
        Object.defineProperty(v26, 2143681708, { value: -84495433 });
        return a28;
    },
};
function F33() {
    if (!new.target) { throw 'must be called with new'; }
}
F33.p3 = v26;
const v35 = new F33();
try {
    Date.now();
} catch(e37) {
}
try {
    Date.__proto__ = v1;
} catch(e38) {
}
v12.constructor = Date;
const v39 = v35.constructor;
for (let v40 = 0; v40 < 32; v40++) {
    v39["p" + v40] = v40;
}
const v43 = new v39();
try { v43.setFullYear(v43); } catch (e) {}
