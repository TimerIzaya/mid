-1258446880n / -1258446880n;
let v11 = 0;
do {
    v11++;
} while (v11 < 9)
const o22 = {
};
new Proxy(Map, o22);
-38454 ^ -1024n;
new Map();
new BigUint64Array(239);
new Uint32Array(135);
new Uint32Array(3772);
function f36(a37, a38, a39, a40) {
    function f42(a43) {
        return arguments;
    }
    Object.defineProperty(arguments, "toString", { enumerable: true, value: f42 });
    arguments.toString(a38, f36, f36);
    function f45() {
        ("Vre").fixed().normalize();
        let v49 = -268435456;
        const v50 = v49--;
        v50 << v50;
        return a39;
    }
    f45();
    %OptimizeFunctionOnNextCall(f45);
    return arguments;
}
for (let v53 = 0; v53 < 5; v53++) {
    const t31 = f36().toString;
    t31(f36, v53, f36, f36);
}
%PrepareFunctionForOptimization(f36);
f36(f36, f36, f36, f36);
%OptimizeFunctionOnNextCall(f36);
f36();
