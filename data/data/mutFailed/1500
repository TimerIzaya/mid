const o14 = {
    get d() {
        this[0] /= 4294967296;
        !this;
        +3n;
        let v10 = -908890636;
        return Math.log(this & --v10);
    },
};
for (let i = 0; i < 10; i++) {
    o14.d;
}
new Array(16);
const v19 = new Set();
function F20(a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a22;
    } catch(e24) {
        for (let [v25,v26] of a22) {
            try {
            } catch(e27) {
            }
        }
    }
    try {
    } catch(e28) {
    }
    const v29 = v19[this];
    try {
        new F20(v29);
    } catch(e31) {
    }
}
try {
} catch(e33) {
}
function F34() {
    if (!new.target) { throw 'must be called with new'; }
}
new WeakMap();
function F40() {
    if (!new.target) { throw 'must be called with new'; }
}
const v44 = new Uint16Array(3);
v44.reverse();
[10];
[1073741824];
[-1447246871,10,-11,-642874085,-29322];
([974836.255416306,7.54270135293536,0.0,0.35539841926815563,1.385396251341163,-1000000000000.0,NaN,-1.7976931348623157e+308]).toLocaleString();
o14[o14];
const o54 = {
};
gc(o54);
const t53 = "symbol";
delete t53[1];
const o57 = {
};
new Set();
new Float32Array([-37102.6674218484,-969411.635186719,-1.3592557640113297e+308,0.9054806195219168,1000000000000.0,-0.0,-3.0,-0.0]);
