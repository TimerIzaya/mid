const v3 = [250.2764403337619,4.833625943864233,0.9316787036577939,1000.0,-2.2250738585072014e-308,0.17766304136443145,-9.598730745998825e+307,0.0];
[2.220446049250313e-16,1e-15,0.08826116956762498,-Infinity,443185.5625604056,4.736326687565699e+307,-4.0];
[1.0];
[-2.220446049250313e-16,-60.38444516413222,1000000000000.0,1000000.0,644.9036134741327,0.7722523132390402,-2.2250738585072014e-308,540.6411638375971,-3.049941411412325,-2.220446049250313e-16];
const v7 = [-1000000000000.0,-3.0,Infinity];
const v8 = [1000000000.0,353822.73628110415];
function f9(a10, a11, a12) {
    a10[Symbol.toPrimitive] = f9;
    const o34 = {
        m(a16, a17, a18) {
            super.c;
            return a17;
        },
        [a10](a21, a22, a23, a24) {
            new Int16Array(10);
            new Uint16Array(929);
            const v33 = new Uint8Array(0);
            return v33;
        },
    };
    return o34;
}
f9(v3, v7, f9(v3, v3, -14932n));
f9(f9, v3, v8);
function F39(a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
}
class C44 {
    static get g() {
        try {
            var a = super.subarray();
        } catch(e47) {
        }
    }
}
new Map();
for (const v51 in [-14339,735253629,4294967296,3,268435456,3,57019,268435439]) {
    ("-2").normalize("NFKC");
}
new Map();
class C60 extends WeakMap {
    536870887;
}
const v63 = new Int32Array(2917);
v63["lastIndexOf"](10);
gc();
try {
} catch(e72) {
}
function F73(a75, a76) {
    if (!new.target) { throw 'must be called with new'; }
}
function F77(a79, a80) {
    if (!new.target) { throw 'must be called with new'; }
}
