const v6 = /(?:ab)?/udimy;
const v7 = /[i5\cj\cJ\ci\cI\ck\cK]/udy;
const v8 = /a*bO/umsy;
const v9 = /hx\p{Changes_When_NFKC_Casefolded}/vdy;
function f10() {
    let v11;
    try { v11 = v6.compile(-1073741824); } catch (e) {}
    return v6 instanceof v11;
}
v9.toString = f10;
const v13 = /V/vds;
const v14 = /g[]/vimy;
v14.valueOf = f10;
class C15 {
    constructor(a17, a18) {
        this.f = -528825626;
        function f19(a20, a21) {
            function F23() {
                if (!new.target) { throw 'must be called with new'; }
            }
            return a20;
        }
        a17[Symbol.toPrimitive] = f19;
        if (v9 >= a17) {
            v8.test(v7, v9, v13, -27098, -1073741824);
            try {
                this.f = a18;
            } catch(e29) {
            }
        } else {
            super.f;
        }
    }
    h;
}
new C15(v14, -27098);
new C15(v14, 62350);
new C15(v6, -528825626);
class C37 {
    set h(a39) {
        eval();
    }
}
const v44 = [1342014474];
function f70(a71) {
    class C72 {
        static #h = a71;
        [a71] = 62350;
    }
    new C72();
    new C72();
    new C72();
    function f77(a78) {
        a71 ||= -47530;
    }
    this.onmessage = f77;
    6 !== v44 ? 6 : v44;
    return Uint32Array;
}
Int32Array < -528825626;
Object.defineProperty(C15, "d", { configurable: true, enumerable: true, value: 2950 });
