const t0 = "Q8F";
t0[2078209647] = [];
let v5 = 0;
class C6 {
    o(a8, a9, a10, a11) {
        class C12 {
            static 44 = "EV";
        }
        new C12();
        new C12();
        new C12();
        return v5;
    }
    static #f = v5;
}
new C6();
class C18 {
    #n(a20) {
        try {
            super.getMinutes(a20, 1.0, a20, -1.0, -1.0);
        } catch(e22) {
            function f23(a24, a25) {
                return a25;
            }
            new Int16Array(2308);
        }
        return 173.78194205195837;
    }
    65535 = -1.0;
    static get b() {
        v5++;
        for (let v31 = 0; v31 < 5; v31++) {
            function f32() {
                const v33 = [];
                try {
                    v33.some();
                } catch(e35) {
                    function F37(a39, a40) {
                        if (!new.target) { throw 'must be called with new'; }
                    }
                    function f42(a43, a44, a45, a46) {
                        Uint8Array / a43;
                        a44 < F37;
                        const o52 = {
                            n(a50, a51) {
                                return v31;
                            },
                        };
                        return v31;
                    }
                    for (let v53 = 0; v53 < 500; v53++) {
                        f42();
                    }
                    eval(e35);
                }
                return f32;
            }
            f32();
            %OptimizeFunctionOnNextCall(f32);
        }
        delete this[1598167990];
        const o60 = {
            "maxByteLength": 144,
        };
        const v62 = new SharedArrayBuffer(3, o60);
        new Uint16Array(v62);
        return o60;
    }
}
const v65 = new C18();
new C18();
new C18();
const v68 = [1024,-9007199254740990,1000,16,-1024,268435456];
[-10361];
const v70 = [-1576123793,-65537];
const t75 = [155533.8602852358,2.0];
t75[658291203] = null;
function f76(a77, a78, a79, a80) {
    %VerifyType(a79);
    return ("-536870912")[Symbol.asyncIterator];
}
f76(v65, "E", v70, 1.0);
const v86 = new C18(C18);
const v87 = new v86();
const v89 = v87[16];
let v91;
try { v91 = v89["valueOf"](); } catch (e) {}
const v92 = [-2147483648,536870887,1073741825];
const v93 = v70[-2];
try { new v91(v92, v93, ..."valueOf", 256); } catch (e) {}
[Reflect];
class C96 {
    static set b(a98) {
        const v100 = [-1000.0,1000000000.0];
        const v101 = [0.0,-605.6883350474525,-2.2250738585072014e-308,2.8064173070154015e+307,-0.0,NaN,-1.7976931348623157e+308,-1.7976931348623157e+308,1.1567619127528594,2.2250738585072014e-308];
        function f105(a106, a107) {
            const o108 = {
                [33062n]: 8n,
                __proto__: v101,
                [37369]: a107,
                [a106]: a106,
                ...a106,
                5: v100,
                ...v100,
            };
            return o108;
        }
        const o111 = {
            "execution": "async",
            "type": "minor",
        };
        for (let v112 = 0; v112 < 32; v112++) {
            o111["p" + v112] = v112;
        }
        gc(o111);
    }
    #n(a117, a118, a119) {
        let v122 = 0;
        while ((() => {
                const v124 = v122 < 7;
                const v126 = new WeakSet();
                let v128 = 5;
                v128++;
                function F130(a132, a133) {
                    if (!new.target) { throw 'must be called with new'; }
                    const v134 = this?.constructor;
                    try { new v134(v126); } catch (e) {}
                    a132 + a132;
                    try {
                        this.d = 1000;
                    } catch(e137) {
                    }
                    try {
                        this.c = v128;
                    } catch(e138) {
                    }
                    try {
                        this.b = null;
                    } catch(e139) {
                    }
                }
                return v124;
            })()) {
            try {
                a118.length = 1073741825;
            } catch(e141) {
            }
            v122++;
        }
        v68["sort"](a119);
        return a118;
    }
}
new C96();
new C96();
new C96();
Math.asin(2.220446049250313e-16);
