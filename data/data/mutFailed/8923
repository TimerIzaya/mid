const v0 = [];
function f1() {
    return v0;
}
const v3 = new WeakMap();
function f4(a5, a6) {
    new Int16Array(386);
    class C10 {
    }
    const v11 = new C10();
    function f12(a13, a14) {
        a14?.__lookupGetter__;
        a14?.constructor;
        return v11;
    }
    f12(Uint16Array, v11);
    %OptimizeFunctionOnNextCall(f12);
    const o28 = {
        __proto__: v0,
        "e": a5,
        ...a6,
        "d": a5,
        [-2]: a6,
        268435456: v3,
        [v0](a20, a21, a22) {
            this.__proto__;
            a20 = v0;
            return f1;
        },
    };
    function f29() {
        return f29;
    }
    Int16Array[Symbol.isConcatSpreadable] = f29;
    return o28;
}
new Float64Array(6);
const v38 = Array(19793);
const v39 = f4(v0, WeakMap);
Object.defineProperty(v0, 0, { value: v38 });
const v42 = new Int16Array(1311);
new Uint8ClampedArray(13);
new BigInt64Array(5);
const v49 = f4(v0, f1);
f4(v3, v39);
let v53 = 10000;
v53 ^= 4096;
const v54 = f4(v42, v39);
const v56 = Symbol.iterator;
const o65 = {
    [v56]() {
        let v58 = 10;
        const o64 = {
            next() {
                v58--;
                const v62 = v58 == 0;
                const o63 = {
                    "done": v62,
                    "value": v58,
                };
                return o63;
            },
        };
        return o64;
    },
};
class C66 extends -1 {
    static f = v39;
    static #e;
    static n(a68, a69, a70, a71) {
        Object.defineProperty(a69, f1, { writable: true, get: f4 });
        return f4;
    }
    #n(a73, a74, a75, a76) {
        if (a76) {
        } else {
            let v78;
            try { v78 = a76(a75, WeakMap, a75, f1); } catch (e) {}
            try {
                v3.#e **= v78;
            } catch(e79) {
            }
        }
        return v39;
    }
}
new C66();
new C66();
new C66();
/(x)(x)(x)\4ca(ab)(?:foo)*/imy;
const v88 = v49[v54[10]];
try {
    v88.h = -725.0347156854516;
} catch(e89) {
}
