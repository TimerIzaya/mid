function f0() {
}
const v2 = new Date();
class C3 extends Date {
    c = f0;
    static [C3];
    f;
    [f0] = Date;
    static [v2] = v2;
    p(a5) {
        class C7 extends this.constructor {
            static e = f0;
            [this] = Date;
            static b = a5;
        }
        new C7();
        return a5;
    }
}
new C3();
const v10 = new C3();
new C3();
new Map();
function F23(a25, a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor;
    const v30 = [1630629478,9,2034969337];
    for (let v31 = 0; v31 < 10; v31++) {
        v30.__proto__;
    }
    Math.log2(0);
    try {
    const t0 = 925338382n;
    new t0(a25, -1.0, a28, a28);
    } catch (e) {}
    a26 - a26;
    a28 ^ a28;
    try {
        this.g = a27;
    } catch(e38) {
        function f39(a40) {
        }
        let v41 = 10;
        for (; v41--;) {
        }
    }
    try {
        [-1];
        -1 in -1;
        this.b = -65537n;
    } catch(e46) {
    }
}
new F23(6n, -65537n, -116242.81512445165, F23);
const v48 = new F23(-116242.81512445165, -65537n, C3, 6n, Date, v10);
const v49 = new F23(v48, -65537n, 925338382n, -65537n);
v49.b = v49;
new C3();
