const o9 = {
    "execution": "async",
    "type": "minor",
};
gc(o9);
let v12 = new Uint8Array();
v12 &= this;
function f14(a15, a16, a17, a18) {
    return a18;
}
[-2.0,-628.7969742856723];
const v23 = [2.030535720202217e+307,2.030535720202217e+307,-1000.0,-628.7969742856723];
const v24 = [v23,0.25392962976935707,v23,-628.7969742856723];
class C25 {
    [-832267.262043573];
    static #n(a27, a28, a29) {
        class C32 {
            #c = "toUpperCase";
            get a() {
                const v34 = this << "toUpperCase";
                const v35 = v34 ^ v34;
                let v36;
                try { v36 = v35(v35, this, v35, v35, v34, this); } catch (e) {}
                v36[v35] <<= 1.1922093890401552e+308;
                return "Tx";
            }
            static b;
        }
        const v40 = new C32();
        const v41 = [v40];
        v41[0] = v41;
        -1000.0 instanceof b;
        return this;
    }
    g = v24;
    static h;
    constructor(a48) {
        super();
        for (let v49 = 0; v49 < 5; v49++) {
            super.valueOf();
        }
    }
}
new C25();
new C25();
new C25();
const v54 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
function f55(a56, a57) {
    return f55;
}
function f60(a61, a62) {
    const o66 = {
        "f": a62,
        [a61]: -12,
        set e(a64) {
        },
    };
    return o66;
}
f60(1000, 1000);
v54[Symbol.toPrimitive] = f55;
const v70 = [3,-6,7268,-554513674,5,4294967295,861325878,17152,2147483647,5];
function f71(a72, a73, a74) {
    a73[8] = a73;
    const t64 = [-936145422,536870912,127,257,-36772,-15984,2];
    t64.length = 6;
    function f77(a78, a79, a80, a81) {
        return arguments;
    }
    f77(-12, -12);
    const o84 = {
        __proto__: a74,
    };
    return a73;
}
const v85 = f71(v70, v54);
f71(v70, v85, v85);
new BigInt64Array(1073741824);
