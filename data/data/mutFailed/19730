const v0 = [];
class C1 {
    static {
        let v2 = this;
        try { v0(v2, v0, v2); } catch (e) {}
        const v5 = Symbol.isConcatSpreadable;
        v2[v5];
        v5 % v2;
        v5 >>> v2;
        Math.fround(v0);
        v2++;
        +v2;
        Math.max(v2);
    }
}
new C1();
new C1();
new C1();
new Float32Array(1);
const v29 = [2.0,0.2901658812472846,-8.880306076496956e+307,943883.9104739067];
for (let i32 = 0, i33 = 10; i32 < i33; i33--) {
    const t21 = v29.constructor;
    t21(-1.0);
}
new Int16Array(13);
new BigUint64Array(0);
try {
    BigInt(132.432626643787);
} catch(e51) {
}
