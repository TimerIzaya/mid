const v2 = -Infinity;
const v4 = new WeakMap();
class C5 extends WeakMap {
    valueOf(a7, a8) {
        v4.__proto__;
        a8[7] = a8;
        [-3.320935444634852,-510302.29451012076,1.0,1000000.0,1000.0,5.0,-0.0,-1.7976931348623157e+308,-6.0163957768232805,-2.0];
        [1000000000000.0,-1000.0,720296.1688902297,189.39113310425523,70.10925904730766,0.6414560252119048,1.5643716706796838e+308,-0.852668341651242];
        [6.05290565236857e+307];
        %VerifyType(Math);
        +-1000000000.0;
        const v17 = +268435441;
        Math.trunc(-1000000000.0);
        ~a7;
        -1000000000.0 >>> v17;
        return v17;
    }
    static 5;
}
const v21 = new C5();
let v22 = new C5();
const v23 = new C5();
class C24 {
    static [C24];
    h = v22;
    #b = v2;
    constructor(a26, a27, a28) {
        v22 = v23;
        v22[-2] = super[this];
    }
    static 7;
    a;
}
new C24(v21, v2, NaN);
const v34 = new C24(v21, 0.9079419502947954, NaN);
const v35 = new C24(v21, NaN, 0.9079419502947954);
function F36() {
    if (!new.target) { throw 'must be called with new'; }
}
const v38 = new F36();
function F39(a41, a42) {
    if (!new.target) { throw 'must be called with new'; }
}
const v43 = new F39();
let v45 = 591114.0785999324;
const v46 = [];
function F48() {
    if (!new.target) { throw 'must be called with new'; }
    const v52 = Date.toString(F48);
    v52[23];
    v52.replaceAll(v38, -37859n);
    const v56 = new Uint32Array(Uint32Array, Uint32Array, 4);
    v56[2];
    const v60 = new Set(v46);
    const v61 = v60.add;
    v61.f = v61;
    try { v61(v56); } catch (e) {}
    const v64 = v60["delete"](839612.5677247904);
    Object.defineProperty(v34, "a", { configurable: true, set: Date });
    new Set();
    try {
        Date(NaN);
    } catch(e68) {
    }
    const v69 = v64 || v64;
    const v70 = v69 || v69;
    const v72 = v69 && (v70 && v70);
    v72 || v72;
    const o75 = {
    };
    o75.b = o75;
    try { Array(9223372036854775807); } catch (e) {}
    const v79 = ("getPrototypeOf").blink();
    const v80 = v79[28];
    const v81 = v80.strike();
    v81[4] = v81;
    const v82 = v79.strike(v45);
    const v83 = v82.replace(19793, v43);
    v83[11] = v83;
    class C86 {
        ["getPrototypeOf"] = -1.7976931348623157e+308;
    }
    /JQ/guiy;
    /WHabc\p{gc=Nd}/gvdmsy;
    /Od(?<!)(yy)/gviy;
    try {
        v82.h = C5;
    } catch(e90) {
    }
    class C91 extends C86 {
        ["getPrototypeOf"] = C86;
    }
    new C91();
    const v93 = new C91();
    const t94 = v93.constructor;
    new t94();
    const v96 = new C91();
    v96.getPrototypeOf;
    const v99 = BigUint64Array.of();
    new BigUint64Array();
    new Int8Array();
    const v104 = new C91();
    const t102 = v99.getPrototypeOf;
    new t102();
    v104.getPrototypeOf;
    let v108;
    try { v108 = new Int8Array(); } catch (e) {}
    v108.getPrototypeOf = v108;
    const v109 = new C91();
    const v110 = v109.getPrototypeOf;
    try { new v21(); } catch (e) {}
    try { v110(); } catch (e) {}
    let v113;
    try { v113 = new v110(); } catch (e) {}
    try { v113.propertyIsEnumerable(v83); } catch (e) {}
    const v115 = v113?.constructor;
    try { v115.call(v80); } catch (e) {}
    let v117;
    try { v117 = new v115(v79, this, 4); } catch (e) {}
    v117.getPrototypeOf;
    let v119;
    try { v119 = v117.constructor(); } catch (e) {}
    const v120 = v119.constructor;
    let v121;
    try { v121 = new v120(F48, v72); } catch (e) {}
    v121?.constructor;
    const v123 = v121?.getPrototypeOf;
    v123.h = v123;
    for (const v125 of Array(19793)) {
    }
}
try {
    C5.fuck(v35, v23, v23, F39);
} catch(e127) {
}
v45 %= 0.9079419502947954;
new F48();
new F48();
