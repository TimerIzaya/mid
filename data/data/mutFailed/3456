let v1 = 3375;
--v1;
const v3 = /\p{Script_Extensions=Greek}/vis;
const v4 = /a$\P{Decimal_Number}/gvdims;
v3[Infinity] = v4[v4];
const t5 = "-6";
new t5([8]);
const v11 = Number.isFinite();
const v12 = v11 && v11;
let v14;
try { v14 = Int32Array.of(); } catch (e) {}
let v15;
try { v15 = v14.entries(); } catch (e) {}
const v16 = v15.next(v12, v11);
const v19 = new Int8Array();
new Uint32Array(v19, v14, v16);
new Date();
new Float64Array(6);
const v29 = [];
function f30() {
    return v29;
}
class C31 extends f30 {
}
new Int8Array(1);
new Uint32Array(16);
new Int32Array(7);
/Ra\s.?/guimy;
/[^J(?:ab)+]/isy;
/(?<a>.)\k<a>(?:a{5,1000000}){3,1000000}*/gv;
Uint8Array.toString(Uint8Array, Uint8Array, Uint8Array, Uint8Array).normalize();
