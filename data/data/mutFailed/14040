function f3() {
    return 8;
}
const v6 = new Int8Array(128);
const v7 = v6.__proto__;
try {
    f3();
} catch(e9) {
}
const v12 = new Uint32Array(128);
let v15 = v7?.[v12];
v15 %= Int8Array;
Object.defineProperty(v12, 3849, { writable: true, configurable: true, get: f3, set: f3 });
Object.defineProperty(v6, v15, { enumerable: true, get: f3 });
v6[Float64Array] |= 128;
new Float64Array(512);
function F17(a19, a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    const v22 = this.constructor;
    try { new v22(); } catch (e) {}
}
new F17();
class C25 extends F17 {
}
new C25();
