function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    function f6(a7) {
        function f8(a9) {
            const o10 = {
                9: a9,
                "f": a9,
            };
            return o10;
        }
    }
    Object.defineProperty(this, "f", { enumerable: true, set: f6 });
    try {
        this.f = 3n;
    } catch(e11) {
    }
}
new F3(9223372036854775807n);
new F3(9223372036854775807n);
new F3(6n);
const v15 = [4,64,2147483649,-9007199254740990,127,-11,-2147483648,255,256,-452784016];
const v16 = [1480,9,65535,1074963795,9,9007199254740992,11,174470493,9223372036854775807,-56269];
switch (v16) {
    default:
        delete v16?.length;
}
[-4294967297,1073741825];
const v23 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v24 = [601759695];
const o36 = {
    "c": -4294967297n,
    [65537](a28, a29) {
    },
    "maxByteLength": -128,
    valueOf(a31, a32) {
        return -4294967297n;
    },
    "e": v23,
    [3n]: -268435456,
    "a": -128,
    "h": -4294967295,
    "g": v24,
    "b": 6n,
    "e": -268435456,
    "maxByteLength": 65537,
    "arguments": v23,
    ...v24,
    valueOf(a34, a35) {
        return -268435456;
    },
    "c": 54893,
};
new Float32Array(65537);
new Int16Array(4096);
function f45(a46, a47) {
    ("p").localeCompare([]);
    return Array;
}
Array[Symbol.toPrimitive] = f45;
Array();
for (let v54 = 0; v54 < 10; v54++) {
    Array(36862);
}
const v59 = new Uint8ClampedArray([-883576.7854612069,-6.2966492479589276,37455.66986228654,1000000.0,-1000000000000.0,0.0,364.6037817904796]);
function f63(a64, a65, a66, a67) {
    function f68() {
        const o72 = {
            valueOf(a70, a71) {
                return f63;
            },
        };
        o72.valueOf();
        return a67;
    }
    f68();
    f68(v15, a65);
    return f63;
}
function f76(a77, a78, a79, a80) {
    function f81(a82, a83, a84, a85) {
        [-171542.4304423296,-2.0,1000.0,-Infinity,655865.6864843727,5.843189196201459,-1000000.0];
        [NaN,-7.746218069895708,3.0,-1.419920901988906,-0.0];
        [-546.0163061476667,0.8647544217003064,-2.2250738585072014e-308,-1000000000000.0,Infinity,-8.650945916436878,-1000000000000.0];
        const v89 = Array * v59;
        f63(v89, v89, f81, a83);
        function f91(a92, a93) {
        }
    }
    f81(-13, f81, 255);
    const o98 = {
        n(a96, a97) {
            return a97;
        },
    };
    return -65535 == 0;
}
for (let v102 = 0; v102 < 625; v102++) {
    f76(Uint8Array, -13);
}
function f104() {
    class C105 {
    }
    const v106 = new C105();
    function f107() {
        return f107;
    }
    const v108 = f107.arguments;
    function f109() {
        for (let v110 = 0; v110 < 5; v110++) {
            const v114 = Array(36862, v108).reverse();
            try { v114.copyWithin(v106); } catch (e) {}
        }
        return f107;
    }
    %PrepareFunctionForOptimization(f109);
    f109();
    %OptimizeFunctionOnNextCall(f109);
    f109();
}
function f118(a119, a120, a121) {
}
