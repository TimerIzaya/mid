const v1 = [781.07704246415,0.8626814847812243,407.71701353132335,1e-15];
[2.220446049250313e-16];
const v3 = [5.656235655259596e+307,-1.7514494090361685e+308,-314187.7088873313,-419651.164683962,3.0,-1000000.0,975.343839078211,0.9733929798118277,-0.612589824144802];
try { v3.map(v3); } catch (e) {}
const v5 = v3[7];
const v7 = 16 >> 16;
const v9 = Uint8Array.prototype;
const v12 = new Uint8Array(16);
const v16 = new Uint8ClampedArray();
class C17 extends Uint8ClampedArray {
    constructor(a19, a20, a21, a22) {
        super(v12);
        try { a20(); } catch (e) {}
        `1073741824${8}c`;
        super[v16] = 520;
    }
}
const v25 = new v12();
try { v9.at(v1); } catch (e) {}
new Uint8Array(16);
3 >>> 3;
3 * 3;
new Uint8ClampedArray(3);
try { Float64Array.from(0); } catch (e) {}
new Float64Array(0);
function F37() {
    if (!new.target) { throw 'must be called with new'; }
    const v39 = this?.constructor;
    try { new v39(); } catch (e) {}
}
const v41 = new F37();
const v42 = v41?.constructor;
try { new v42(); } catch (e) {}
const v44 = new F37();
try { v44.constructor(); } catch (e) {}
v5.length;
const v47 = new F37();
const v48 = v47?.constructor;
try { new v48(); } catch (e) {}
const v50 = v25.length;
class C52 {
    static get b() {
    }
    static 182 = F37;
    static g;
    static #b = true;
}
let v54;
try { v54 = new C52(); } catch (e) {}
const v55 = v54?.__lookupGetter__;
try { new v55(v50); } catch (e) {}
const v57 = new C52();
try { v7.toString(); } catch (e) {}
const v59 = v57?.constructor;
let v60;
try { v60 = new v59(); } catch (e) {}
const v61 = v60?.constructor;
try { new v61(); } catch (e) {}
new C52();
const v64 = new C52();
try {
    v47.b = v64;
} catch(e65) {
}
const v66 = 6.921221993207333e+307 != C52;
!Uint8ClampedArray;
v66 ? 6.921221993207333e+307 : C52;
let v69;
try { v69 = C52(); } catch (e) {}
try { v69(); } catch (e) {}
