const v2 = -Infinity;
-(-1n);
-1n << -9518;
let v9 = -9518 >>> -1n;
(-1n) ** v9;
v9++;
-14n / -14n;
let v17 = 1000000000.0;
v17--;
function f19(a20, a21) {
    a20++;
    const o28 = {
        __proto__: 405.14024742449965,
        [a20](a24, a25) {
            try {
                this.f = -750599.4300158086;
            } catch(e26) {
            }
            try {
                this.toString = this;
            } catch(e27) {
            }
            return f19;
        },
        "e": -14n,
    };
    return o28;
}
const v29 = f19(v2, v17);
f19(1.7976931348623157e+308, v2);
const v31 = f19(1.7976931348623157e+308, 1.7976931348623157e+308);
for (let [i35, i36] = (() => {
        0 * 0;
        return [0, 10];
    })();
    (() => {
        i35 >>> i35;
        const v38 = i35 < i36;
        class C39 {
        }
        const v40 = C39?.call;
        try { new v40(C39); } catch (e) {}
        class C42 {
        }
        try { C42.call(C42); } catch (e) {}
        const v44 = new C42();
        function f46(a47, a48, a49, a50) {
            const v51 = a48 >>> a48;
            let v52 = v51 >>> v51;
            v52--;
            const o56 = {
                "maxByteLength": 65536,
            };
            const v58 = new ArrayBuffer(257, o56);
            new Uint32Array(v58);
            for (let v61 = 0; v61 < 5; v61++) {
                try { new C39(v44, v61, Float32Array, ...v61); } catch (e) {}
            }
            return v52;
        }
        const v63 = f46?.__lookupSetter__;
        try { new v63(C42); } catch (e) {}
        f46();
        %OptimizeFunctionOnNextCall(f46);
        return v38;
    })();
    i36--) {
    v31[16n];
    const o75 = {
    };
    new Proxy(v29, o75);
}
