const v5 = new Uint8Array(2638);
const v7 = [6,536870912,65535,-1312161065,623441854,15337,-2147483649,-14,-265371105];
[64];
[128,-650350371,4];
new Uint8Array(v7);
new Float32Array(10);
const v16 = new Uint8ClampedArray(4);
class C17 extends Float32Array {
    m(a19, a20, a21) {
        for (const v22 in v5) {
            let v23;
            try { v23 = a21(v22); } catch (e) {}
            new Float32Array(v23);
            v23 * 2638;
        }
        a21--;
        try {
            v16.__proto__ = v16;
        } catch(e27) {
        }
        return 2638;
    }
    #h;
    a;
    b;
    static [4] = -41605;
    [-41605];
}
new C17();
new C17();
new C17();
("boolean").split("toString");
