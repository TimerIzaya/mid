const v2 = new Uint16Array(3166);
function f5(a6) {
    const v8 = [1000.0,-1000000000000.0,-7.943810730626244,-1.7976931348623157e+308,1.0,4.0];
    try {
        v8.length = -9223372036854775808;
    } catch(e9) {
    }
    return -9223372036854775808;
}
BigUint64Array[Symbol.iterator] = f5;
const v12 = new BigUint64Array(1202);
const v14 = 289 >>> 289;
[512n];
function F18(a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
}
const o23 = {
    __proto__: Set,
    ...Set,
};
const v24 = new Uint8Array(289);
v24.valueOf = f5;
v24[51] = v24;
function f25(a26, a27) {
    const o76 = {
        4: Uint8Array,
        "d": a26,
        [a27](a29, a30, a31, a32) {
            const v35 = new Uint16Array(3225);
            for (const v36 of v35) {
                v36[3] = 5n;
                9007199254740991 * v36;
            }
            try {
                super.charCodeAt(this, a27, a31);
            } catch(e40) {
            }
            return a31;
        },
        set a(a42) {
            const v45 = [-9.109766292519199,-1.3811947064786667e+308,0.09110445091766706,5.0,-385647.03832885576,0.2888431306471019];
            try { v45.filter(59890n); } catch (e) {}
            class C48 {
                static {
                    try {
                    const t0 = 529940173;
                    t0(this, this);
                    } catch (e) {}
                    Math.cos(1000);
                    Math.tan(1000);
                }
            }
            function f56(a57, a58, a59) {
                const o63 = {
                    __proto__: a58,
                    [a59]: -2147483648,
                    [a58](a61, a62) {
                    },
                    "c": 529940173,
                    1073741824: C48,
                };
                return o63;
            }
            ([1000000000000.0,6.579220753226213e+307,2.0,-2.220446049250313e-16,NaN,-1000000.0])["findIndex"](gc);
            const o72 = {
                [Infinity]: -0.0,
                [-16]: Infinity,
                "h": -16,
                ...-0.0,
                "c": Infinity,
                "e": -0.0,
            };
            const o74 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o74);
        },
    };
    return o76;
}
const v77 = f25(289, 289);
f25(f25(v2, 289), 289);
function f80() {
    return v24;
}
const v82 = new Int8Array(v14);
const v84 = new WeakSet();
for (const v85 in v82) {
    v84[v85] = v85;
}
f80.caller = f80;
f80.arguments = f80;
const v86 = [Uint16Array,BigUint64Array,v12,Uint8Array];
let v87;
try { v87 = v86.entries(); } catch (e) {}
const v88 = v87?.__lookupGetter__;
try { new v88(f80); } catch (e) {}
const v90 = [v2,v77,BigUint64Array,BigUint64Array,Uint8Array];
v90[4];
let v92;
try { v92 = v90.flatMap(f80); } catch (e) {}
try { v92.map(289); } catch (e) {}
v82[v82];
function F95() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v99 = this.__proto__?.constructor;
        try { new v99(); } catch (e) {}
        F95[8] = this;
        this.a = -4;
    } catch(e101) {
    }
    try {
        this.g = -4;
    } catch(e102) {
    }
}
const v103 = [v2,v90,3166,v90,v12];
try { v103.includes(v103); } catch (e) {}
BigUint64Array[0] = v77;
new Int8Array(BigUint64Array);
