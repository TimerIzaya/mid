const v1 = new WeakMap();
const v2 = [-69499.2547006061,-677.0059270826712,-3.0,-4.0,-2.5521615300376226,-2.220446049250313e-16,3.0,654681.5680330754];
const v3 = [1.7976931348623157e+308,-6.326961667997358,490397.9031021565,-1000000000.0,-2.220446049250313e-16,Infinity,3.0,5.0];
try { v3.includes(v3); } catch (e) {}
const v5 = [NaN,0.7408755217975108,-558021.8900238967,-2.2250738585072014e-308,Infinity,0.0,-2.220446049250313e-16,1e-15,379331.3238270078];
let v6;
try { v6 = v5.lastIndexOf(WeakMap); } catch (e) {}
const v8 = 4294967296n * 4294967296n;
const v9 = v8 | v8;
const v11 = [1000000000000.0,6.579220753226213e+307,2.0,-2.220446049250313e-16,NaN,-1000000.0];
try { new v6(v1, ...v5, BigUint64Array, ...v3, v9, v6); } catch (e) {}
const o16 = {
    "maxByteLength": 2297877430,
};
const v18 = new ArrayBuffer(9, o16);
new Int16Array(v18);
try { gc(); } catch (e) {}
let v24 = 5;
Math.atan(40.95574606098603);
v5 ^ 40.95574606098603;
v24 - v5;
v24--;
~"findIndex";
v11["findIndex"](gc);
const v32 = new BigUint64Array();
try { v32.values(); } catch (e) {}
function F34(a36, a37) {
    if (!new.target) { throw 'must be called with new'; }
    function f38() {
        try { v32.toLocaleLowerCase(this, "NFKD", BigUint64Array, BigUint64Array); } catch (e) {}
        try { ("NFKD").localeCompare(this); } catch (e) {}
        return a36;
    }
    Object.defineProperty(this, Symbol.toPrimitive, { writable: true, value: f38 });
}
[v5,[[v2,v1,v5,v2]],v2,WeakMap,v2];
-45686 + -45686;
2 >= 2;
9n & 9n;
9n >> 9n;
let v58 = 9;
v58--;
try { Uint16Array.bind(2); } catch (e) {}
new Uint16Array(v58);
/xyz?T9E\c/gdmy;
function f64(a65, a66, a67, a68) {
    const o78 = {
        __proto__: a67,
        ...a67,
        [a67](a70, a71, a72) {
            function f74() {
                return f74;
            }
            return "function";
        },
    };
    return o78;
}
let v82 = 4294967297n;
v82++;
