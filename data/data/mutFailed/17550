const v0 = /a(?!b)/gisy;
const v1 = /K\xe2\x81\xa3*/gdis;
const v2 = /8(\1a)/gvdis;
const v3 = [v1,v2,v0,v1];
const v4 = [v3,v3,v0,v2];
const v5 = [v4,v0,v2];
function f6() {
    return v3;
}
class C7 extends f6 {
    constructor(a9, a10, a11, a12) {
        super();
        let v13 = 0;
        while ((() => {
                const v15 = v13 < 1;
                function f16(a17, a18) {
                    return f16;
                }
                f16(f16, f16);
                function f20(a21, a22, a23, a24) {
                    const o32 = {
                        m(a26, a27, a28, a29) {
                            ("ignoreCase").normalize();
                            return this;
                        },
                    };
                    return o32;
                }
                const v33 = f20(1, 1, f20, 1);
                try { v33.m(...1, f20); } catch (e) {}
                return v15;
            })()) {
            a11 = v13;
            const o35 = {
            };
            try {
                o35.a = v4;
            } catch(e36) {
            }
            try {
                const o37 = {
                };
                o37.a = v4;
                o37.f = v5;
            } catch(e38) {
            }
            new Uint8Array(255);
            function F44(a46, a47) {
                if (!new.target) { throw 'must be called with new'; }
                const v48 = this?.constructor;
                try { new v48(this, 6); } catch (e) {}
                let v50;
                try { v50 = this.isPrototypeOf(2917); } catch (e) {}
                !v50;
            }
            F44.arguments = F44;
            const v52 = new F44();
            v52?.constructor;
            try {
                const o54 = {
                };
                o54.a = v4;
                o54.f = v5;
                o54.b = v13;
            } catch(e55) {
            }
            class C57 extends Set {
            }
            Math.expm1(Math);
            try {
                const o60 = {
                };
                o60.a = v4;
                o60.f = v5;
                o60.c = v4;
            } catch(e61) {
            }
            v13++;
        }
    }
}
const v63 = new C7(v0, v3, v2, v4);
const v64 = new C7(v0, v63, v5, v5);
new C7(v2, v5, v64, v63);
new Date();
const v72 = new SharedArrayBuffer(62);
v72.slice();
new Array(9);
class C81 {
    b = "c";
    static #h;
    268435439;
    static #c;
}
const v82 = new C81();
new C81();
new C81();
[2.220446049250313e-16,1.7976931348623157e+308,1.7976931348623157e+308];
[-788.7260290236088,1.7976931348623157e+308,"c"];
[-788.7260290236088,C81];
function f93() {
    (623782.6377989235).constructor();
    return 623782.6377989235;
}
Math.E = Math;
const v95 = Math.round();
for (let v96 = 0; v96 < 10; v96++) {
    v96 / v96;
    async function f98(a99, a100, a101) {
        a101 >>> a101;
        Number.isNaN(await v95);
        const v107 = [0.8307152163010869,1.0,0.0];
        v107[2] = v107;
        v107.length = v96;
        v107 instanceof -24894;
        %VerifyType(v82);
        function f109(a110) {
            return f109;
        }
        let v111 = -65535;
        v111--;
        return f98;
    }
    try { f98(-788.7260290236088, -1000000000.0, -1000000000.0); } catch (e) {}
    const v114 = f98(Math, "b", v95);
    try { v114.hasOwnProperty(-788.7260290236088); } catch (e) {}
}
