function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 42094;
    } catch(e3) {
    }
    const t6 = this[F0];
    t6[8] = F0;
    let v6 = 4294967296;
    0.3582570298394683 && v6;
    Math.min(0.3582570298394683);
    v6--;
    try {
        this.c = 42094;
    } catch(e11) {
    }
    try {
        this.b = 42094;
    } catch(e12) {
    }
}
const v13 = new F0();
const v14 = new F0();
const v15 = new F0();
[v13,[v14,v13,v13,v15],v15,F0,v14];
[F0,v15,v13,F0,v13];
function f19() {
    return v14;
}
const v24 = Array();
const v25 = [6];
const v26 = v25.copyWithin(v25, v25, Array);
v24.entries().hasOwnProperty(v26);
