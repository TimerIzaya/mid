const v1 = new Date();
const v2 = [61691.13313238043,1000.0,0.7224819315249409,1e-15,7.120548059150508,3.0,8.537438163139175,-8.532655659575984e+307,1000000.0,2.0];
const v3 = [2.2250738585072014e-308,NaN,-2.1837666140773955,1.4011816282918603e+306,4.0,0.05652835114393362];
const v4 = [2.2250738585072014e-308,757.3040351006955,1000.0,-560.4492499226603,-8.303430965457428,2.2250738585072014e-308,0.3163088739605858,0.7640181853416561,-0.0,572515.5518559748];
class C5 extends Date {
    #p(a7, a8) {
        Object.defineProperty(v3, v1, { writable: true, enumerable: true, get: Date, set: Date });
        super.getUTCDay();
        for (let v10 = 0; v10 < 32; v10++) {
            v4["p" + v10] = v10;
        }
        return v2;
    }
    toString(a14, a15) {
        this[2026];
        return Date;
    }
    65536;
    251;
    d;
    #d;
    #f;
}
C5.a = C5;
new C5();
const v18 = new C5();
new C5();
const v20 = v18[251];
let v21 = /\xe2\x81\xa3/vsy;
const v22 = /(?!(a))\1/gudiy;
/2g(\1a)?/gviy;
let v27;
try { v27 = v3["copyWithin"](...v1, v1, v20, v22); } catch (e) {}
const v31 = 536870888 + v21;
536870888 * 1.0535026979869178e+308;
v21++;
1.0535026979869178e+308 - (536870888 && v31);
let v36 = -65536n;
v36--;
class C41 {
    static #p(a43) {
        return a43;
    }
}
const v44 = new C41();
new C41(v44, "iterator");
const v46 = new v27();
try { v46.hasOwnProperty(v21); } catch (e) {}
C41.__proto__ = "iterator";
const v48 = [v44,v46];
try { v48.toString(); } catch (e) {}
([v48,"iterator",4.488303140222985])[2];
const v52 = [];
const v53 = v52?.lastIndexOf;
try { new v53(v44); } catch (e) {}
const v56 = [[1828032293,v52]];
try { v56.reduce(-1374287970n); } catch (e) {}
const v58 = [v44,v56,v48];
function f59() {
    return v58;
}
BigInt64Array.prototype;
const v63 = new BigInt64Array(218);
v63.sort(f59);
