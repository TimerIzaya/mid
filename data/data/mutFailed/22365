const v0 = [];
const v1 = [-14,-65537,9007199254740990];
const v2 = [-60144];
const v3 = [-9007199254740992,16,9007199254740991,-29995];
function f4(a5, a6) {
    const o15 = {
        0: v1,
        [v3]: v3,
        "h": a5,
        [v2]: v1,
        "a": v3,
        "d": a6,
        o(a8, a9, a10, a11) {
            const v12 = a8 === v3;
            v12 == a5 ? v12 : a5;
            return v0;
        },
    };
    return o15;
}
f4(v3, v0);
const v17 = f4(v0, v1);
f4(v0, v2);
[38309,-1,-1857688895,-536870912,913294327,0];
[-413394689,-9223372036854775808,12,-9007199254740992,-65535];
const v24 = [751619908,56733];
const v25 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v26 = [1073741824,1073741823,1376142744,1073741825];
function f27(a28, a29, a30, a31) {
    function f32() {
        try {
            v26.forEach(a29, v25);
        } catch(e34) {
        }
        return a29;
    }
    f32();
    eval();
    %OptimizeFunctionOnNextCall(f32);
    return v26;
}
for (let v38 = 0; v38 < 5; v38++) {
    f27(v38, v38);
}
function f41() {
    return Map;
}
function f42() {
    const v43 = Map();
    v43[1460] = v43;
    v43[3751222183] = f41;
    for (const v44 of v43) {
    }
    return v43;
}
f42(v24, v17);
f42();
