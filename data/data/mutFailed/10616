[-536870912,878724855,10,-11,65535,-781539425,717937481,2263];
[13,2,-4096,65535,-7,44700];
[-11,-1];
function f16() {
}
class C17 extends f16 {
}
new C17();
new C17();
class C20 {
}
function f25() {
}
const o26 = {
};
function F27() {
    if (!new.target) { throw 'must be called with new'; }
}
[-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v30 = [601759695];
const v31 = [1073741824,1073741823,1376142744,1073741825];
function f34(a35, a36, a37, a38) {
    function f40() {
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        a38.toPrimitive;
    }
    f16();
    new Int8Array();
    a36.buffer.slice();
    %OptimizeFunctionOnNextCall(f40);
    try { v31[a35](..."find", a38, ...v30); } catch (e) {}
    -9223372036854775808n <= a37;
    return arguments;
}
for (let v57 = 0; v57 < 10; v57++) {
    f34();
}
%OptimizeFunctionOnNextCall(f34);
F27();
