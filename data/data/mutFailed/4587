const v0 = [];
function f1() {
    const o4 = {
        "e": v0,
        "h": v0,
        "a": v0,
        "b": v0,
        p() {
            const v3 = super.d;
            super[v3] = v0;
            return v3;
        },
        3158430996: v0,
        3: v0,
        2: v0,
    };
    return o4;
}
const v5 = f1();
f1();
v5[2] = v5;
let v7;
try { v7 = new f1(v5, ...v5, f1, f1); } catch (e) {}
const v8 = v5[v7];
try {
    v5.toString = v8;
} catch(e9) {
}
f1();
/a{1,2}?[t(x)(x)(x)\3*]?/udmy;
/(?:a{5,1000000}){3,1000000}/gvis;
/\ud808\udf45*/vdims;
new BigInt64Array(3394);
new Uint8ClampedArray(0);
new Uint8ClampedArray(145);
class C23 {
}
const v24 = new C23();
const v25 = v24.constructor;
let v26;
try { v26 = v25(v25, C23); } catch (e) {}
function f27() {
    const v29 = ("D")[0];
    try { v29.substring(v26); } catch (e) {}
    return v26;
}
%PrepareFunctionForOptimization(f27);
f27();
function f32(a33, a34) {
    function f36(a37) {
        let {"c":v38,...v39} = this;
        function f40() {
            return v26;
        }
    }
    this.onmessage = f36;
    try {
        this.valueOf = a33;
    } catch(e41) {
    }
}
const v44 = [v24,Worker];
const o45 = {
    "arguments": v44,
    "type": "function",
};
new Worker(f32, o45);
%OptimizeFunctionOnNextCall(f27);
f27();
