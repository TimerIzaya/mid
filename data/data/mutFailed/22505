new Array(3260);
function f9() {
    return Array;
}
new Float64Array(1);
new Uint8Array(1);
new Int32Array(3608);
function f19() {
    let v20 = 0;
    while ((() => {
            const v22 = v20 < 10;
            v22 || v22;
            return v22;
        })()) {
        for (let v24 = 0; v24 < 5; v24++) {
            const v25 = [-3.0,4.0,1.7381830731777672e+308,-Infinity,0.053627216611518036];
            v25.roundingMode = 1;
            v25.toLocaleString(f19, v25).includes(v24);
            for (let [i31, i32] = (() => {
                    10 >>> 10;
                    return [0, 10];
                })();
                i31 < i32;
                i31++) {
            }
        }
        v20++;
    }
    return f19;
}
f19();
%OptimizeFunctionOnNextCall(f19);
f19();
