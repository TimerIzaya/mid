class C3 {
    16 = "MIN_VALUE";
    static 127 = 9;
    o(a5, a6) {
        super.e = a5;
        try {
            super.getUTCSeconds(9);
        } catch(e8) {
        }
        return 9;
    }
}
new C3();
new C3();
new C3();
[-489438.2192946316,0.9060845133700562,653905.7470292451,-840351.5605714591,2.0330214359356185e+307,9.8815260133035,4.157539888800496,1.4885047144769007e+308,-475.44825279677866];
let v19 = -4294967297n;
v19++;
const v21 = [601759695];
function f23(a24, a25, a26, a27) {
    arguments[2] = arguments;
    function f29() {
        ("Vre").fixed();
        const o32 = {
            __proto__: a26,
            ..."Vre",
        };
        function f33() {
            return f29;
        }
        function f34(a35) {
            try { arguments.resolve(a35); } catch (e) {}
        }
        Object.defineProperty(o32, "valueOf", { writable: true, configurable: true, enumerable: true, get: f33, set: f34 });
        o32.length;
        const v38 = o32.valueOf();
        v38[6] = v38;
        return v38;
    }
    const v39 = f29();
    v39[6] = v39;
    %OptimizeFunctionOnNextCall(f29);
}
for (let v40 = 0; v40 < 5; v40++) {
    f23(v21, v40, v40);
}
const o45 = {
    "execution": "async",
    "type": "minor",
};
function f46(a47) {
    Object.defineProperty([58584,15,9007199254740990,2146023485], 65537, { writable: true, value: [46733,-268435456] });
}
Object.defineProperty(o45, "h", { writable: true, set: f46 });
o45.h = o45;
const v50 = [-8.56356646356005,-1000000.0,1.7425732341240199,5.61396859017832,0.7210174662462943,-245812.9717227295,1.5188574374967393e+308,7.8735763720173e+307,-2.220446049250313e-16];
try { v50.map(); } catch (e) {}
const v52 = [134133844,-339370636,65535,-4294967295,536870888,-324130953,536870912,268435439];
function f53(a54, a55, a56, a57) {
    try { a56(a57, a56, a55); } catch (e) {}
    function f59() {
        const v60 = v52.length;
        const v61 = v60 >>> v60;
        const v62 = v61 % v61;
        v62 & v62;
    }
    return f59;
}
f53(v52, f53, f53, v52);
f53();
