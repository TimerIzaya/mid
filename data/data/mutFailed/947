new Int8Array(10);
const v5 = new Int16Array(1);
const v10 = new WeakMap(4);
const v12 = [v10];
new Int16Array(v12, v10, 4, v12);
new Int8Array(1878);
const v15 = [Int8Array];
const v16 = [v15,Int16Array,10,1878];
const v17 = [Int8Array,Int8Array,10,v15];
function F18(a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 1;
        class C23 extends Uint32Array {
        }
        const v24 = new C23();
        Math.tanh(v24);
    } catch(e27) {
    }
}
new F18(1878, v17);
new F18(v5, v15);
function F30() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        new F30();
        /Ckza\Wb?/vis;
        /Ma\W+/gvdis;
    } catch(e35) {
    }
}
new F30();
new F18(v16, v17);
const o39 = {
    __proto__: true,
};
const v41 = new Uint16Array();
[-0.0,3.5501749464532004,-0.0,-2.220446049250313e-16,0.7626441105891978,-585.9055525866645,1e-15,1000000.0] ** "IxTD";
let v47 = -14;
class C48 {
}
function f49(a50, a51, a52, a53) {
    return a53;
}
({"b":f49,"f":v47,} = C48);
const v54 = new Int16Array(2058);
v54[256] = 2058;
v41[9];
const o57 = {
};
gc(o57, true, F30);
