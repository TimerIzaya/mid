function f3() {
    return -747.1642632261087;
}
const v4 = [6,9,44629,-2147483647];
const v5 = [-10,11,-163873476,-1169364168,26908,-4294967295,10,-128,-9223372036854775807,1];
const v6 = [-4294967297,536870912,-967007768,-49970,536870887,1381913145,-9007199254740990,-9223372036854775807];
const v7 = /(hLj)/vims;
/NO(?:ab)|cde/gudim;
/(?:a+)+Y4/gudimsy;
const v10 = [v7,v4,v5,v5];
[v10,v5,v7,v10,v6];
[f3,v7,v4,734673.9162719995,v10];
class C13 {
}
const v14 = new C13();
function f15(a16, a17) {
    function f18() {
    }
    function f19() {
        return 1000000000000.0;
    }
    function f20(a21) {
        const v23 = [65537,268435441,63298,-5,1235122603];
        const v24 = [-2,-4294967296,4294967297];
        function F25(a27, a28, a29, a30) {
            if (!new.target) { throw 'must be called with new'; }
            const v31 = this.constructor;
            try { v31(1024, 1024, v23); } catch (e) {}
        }
        const v33 = new F25(1024, v5, v24, v24);
        function f35(a36, a37, a38, a39) {
            return v33;
        }
        f35(-9007199254740991, a21);
    }
    Object.defineProperty(f18, "a", { writable: true, enumerable: true, get: f19, set: f20 });
    class C41 extends f18 {
    }
    class C42 extends C41 {
    }
    function f43(a44, a45, a46, a47) {
        f18.a = a44;
        let v48;
        try { v48 = a44(C42); } catch (e) {}
        a45 & v48;
        const o53 = {
            n(a51, a52) {
            },
        };
        return o53;
    }
    for (let v54 = 0; v54 < 500; v54++) {
        f43();
    }
    return a17;
}
Object.defineProperty(v14, "constructor", { value: f15 });
const t57 = v14.constructor;
t57();
