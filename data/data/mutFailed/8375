const v0 = [];
function f1() {
    return v0;
}
class C2 extends f1 {
    static #o(a4) {
        (a4 += f1) ^ this;
        return v0;
    }
    #f = f1;
    static #h;
}
new C2();
const v10 = new C2();
const v11 = new C2();
const v14 = [1073741824,1073741823,1376142744,1073741825];
try {
    v14.forEach(v11);
} catch(e16) {
}
function F18(a20, a21) {
    if (!new.target) { throw 'must be called with new'; }
    function f23(a24, a25, a26, a27) {
        const o28 = {
            "e": a25,
            [a26]: 1000,
        };
        return f23;
    }
    try {
        this.a = "1073741824";
    } catch(e29) {
    }
    try {
        this.f = a21;
        class C30 {
        }
        class C31 {
        }
        const v32 = [601759695];
        function f33() {
            b = v32;
            const o34 = {
                "c": v32,
            };
            return o34;
        }
        %OptimizeFunctionOnNextCall(f33);
    } catch(e35) {
    }
    try {
        this.d = v10;
    } catch(e36) {
    }
}
new F18("1073741824", "1073741824");
new F18("1073741824", "-43077");
new F18("-43077", "1073741824");
const o41 = {
    "execution": "1073741824",
    "h": "1073741824",
    "d": "1073741824",
    4: "m",
    "type": "-43077",
    0: "1ya",
    162: "1ya",
};
