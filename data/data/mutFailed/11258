const v0 = [1024,-44000,-9223372036854775808,536870889,-322122206,-4294967297,9012,65537,-2147483647,268435456];
const v1 = [-65537,678947086,-994256667,10,3612,3,61254,-5,512,-470141256];
[-65537];
class C3 {
    m(a5, a6) {
        for (let [v7,v8,,v9] of v0) {
            try {
                v0.c = v8;
            } catch(e10) {
            }
        }
        return a5;
    }
    3 = v0;
    a;
    #h;
}
const v11 = new C3();
const v12 = new C3();
const v13 = C3?.constructor;
let v14;
try { v14 = new v13(); } catch (e) {}
v14.length;
const v16 = new v12();
v16[3];
119.11113534990363 + 119.11113534990363;
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    a25[3] = a25;
    const v26 = a24 - this;
    try {
        this.b = v11;
    } catch(e27) {
    }
    try {
        v26.e = a25;
    } catch(e28) {
    }
    try {
        this.a = v1;
    } catch(e29) {
    }
}
const v30 = new F22(0.7501036545090809, v11);
const v31 = v30?.constructor;
try { new v31(82.53394988899095, F22); } catch (e) {}
new F22(0.7501036545090809, C3);
const v34 = new F22(119.11113534990363, v11);
v34.b;
class C36 {
    toString(a38) {
        super[this];
    }
}
v34.length;
const v41 = new C36();
const v42 = v41?.constructor;
try { new v42(); } catch (e) {}
const v44 = [C36,C36,C36,C36,v11];
v44[3] = v44;
try {
    v44.length = v41;
} catch(e45) {
    e45.message = e45;
}
