const v1 = new Set();
let v2 = "search";
function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = a11;
    try {
        this.c = a11;
    } catch(e12) {
    }
    try {
        this.d = a11;
    } catch(e13) {
    }
    try {
        this.b = a10;
    } catch(e14) {
    }
}
const v15 = new F8(v1, -9);
new F8("-2147483647", -9);
new F8(Set, -9);
let v20 = "tKv";
class C24 {
    static #a = 5n;
    [3n];
    static c = 3n;
}
const v25 = new C24();
new C24();
const v27 = new C24();
function f28(a29) {
    ({"c":a29,"d":v2,...v20} = v15);
    return a29;
}
v27[Symbol.toPrimitive] = f28;
function F33(a35, a36, a37, a38) {
    if (!new.target) { throw 'must be called with new'; }
    function f39() {
        return "-2147483647";
    }
    function f40(a41) {
        function f42() {
            -9223372036854775808n >= -9223372036854775808n;
            return f42;
        }
    }
    Object.defineProperty(this, "e", { configurable: true, get: f39, set: f40 });
    function f45(a46, a47) {
        new Uint8ClampedArray(104);
        return v1;
    }
    a38[Symbol.toPrimitive] = f45;
    this.e = a38;
    this.c = a38;
}
const v53 = new F33(41372n, v27, v25, v27);
new F33(v27, v27, v25, v27);
const v55 = new F33(v27, -9, 41372n, v53);
class C56 {
    a = -1;
    static #c;
    static #e = C24;
    static [v27];
    h = v55;
    #f;
    6 = v53;
}
const v57 = new C56();
new C56();
new C56();
const v62 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v63 = [601759695];
const v65 = [];
function F66(a68, a69, a70, a71) {
    if (!new.target) { throw 'must be called with new'; }
    a68.toString = f28;
    a68.lastIndexOf(a68, a69);
}
const v73 = new F66(v65);
v73.constructor = f28;
const v74 = v73.constructor;
try { new v74(); } catch (e) {}
const v76 = [1073741824,1073741823,1376142744,1073741825];
function f78(a79, a80, a81, a82) {
    function f84() {
        const o107 = {
            "c": -4294967297n,
            "arguments": v63,
            [v65]: v57,
            "h": "Vre",
            ...-4294967295,
            "c": -4294967295,
            [522675525n](a89, a90) {
            },
            ...-4294967295,
            "maxByteLength": -128,
            "c": v63,
            valueOf(a92, a93) {
                return a81;
            },
            "e": -268435456,
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v62,
            ...v63,
            "type": "Vre",
            ..."Vre",
            valueOf(a95, a96) {
                return a79;
            },
            get d() {
                Symbol.toPrimitive;
                const o100 = {
                };
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            toString(a102, a103, a104) {
                return a79;
            },
            m(a106) {
                return a106;
            },
            "execution": "UHH",
            "execution": "UHH",
            5: -4294967295,
            6: -268435456,
        };
    }
    f84();
    const v110 = new Int8Array();
    v110.buffer.slice(a81);
    %OptimizeFunctionOnNextCall(f84);
    try { v76["find"](..."find", a82, ...v63, ...v76, ...522675525n); } catch (e) {}
}
for (let v116 = 0; v116 < 5; v116++) {
    f78();
}
%PrepareFunctionForOptimization(f78);
f78();
%OptimizeFunctionOnNextCall(f78);
f78();
