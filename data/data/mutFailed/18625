Int8Array.e = Int8Array;
const v5 = new Int8Array(65);
v5[63] = v5;
const v7 = 3 - 3;
const v9 = new BigUint64Array(3);
const v10 = v7 <= v9;
Object.defineProperty(v9, v10, { writable: true, configurable: true, value: v10 });
v9[v7] >>= -1.0;
v9[65] = -4.864590576380124;
try { v9.copyWithin(65, 3); } catch (e) {}
Float32Array.c = Float32Array;
const v14 = new Float32Array(1);
-9n;
const v21 = new Uint8Array(3521);
"lastIndexOf" === BigUint64Array ? "lastIndexOf" : BigUint64Array;
v21["lastIndexOf"](0) >> v14;
