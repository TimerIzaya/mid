const v1 = new Date();
class C2 {
    set g(a4) {
        const o5 = {
        };
        try {
            o5.e = this;
        } catch(e6) {
        }
        try {
            const o7 = {
            };
            o7.e = this;
            o7.h = Date;
        } catch(e8) {
        }
        try {
            const o9 = {
            };
            o9.e = this;
            o9.c = Date;
            o9.f = Date;
        } catch(e10) {
        }
        try {
            const o11 = {
            };
            o11.e = this;
            o11.h = Date;
            o11.f = a4;
        } catch(e12) {
        }
    }
}
const v13 = new C2();
function f14() {
    Float32Array.bind();
    return Float32Array;
}
v13[Symbol.toPrimitive] = f14;
const v19 = new C2();
const v20 = new C2(Date);
v20[Symbol.toPrimitive] = Symbol;
class C23 {
    getUint16(a25, a26, a27, a28) {
        Date[2] = a27;
        [-4294967296,268435440,10,4,11966,1248607948];
        [1073741824,-441307739,462547958,17670,512,-1,1,3318];
        [2];
        return v13;
    }
    d = v1;
    h;
    6;
    10000;
}
const v32 = new C23();
const v33 = new C23();
function f34() {
    function f35(a36, a37) {
        function f39() {
            return 256;
        }
        return a37;
    }
    return f35;
}
Object.defineProperty(v33, Symbol.toPrimitive, { writable: true, configurable: true, get: f34 });
const v42 = new C23();
function f43(a44, a45, a46, a47) {
    function f48() {
        return f14;
    }
    function f49(a50) {
        new f48(a50, a47, a50, a45, v20);
    }
    Object.defineProperty(a44, "toString", { writable: true, enumerable: true, get: f48, set: f49 });
    Object.defineProperty(a46, Symbol.toPrimitive, { writable: true, configurable: true, value: f48 });
    const o67 = {
        4: v1,
        __proto__: a46,
        [a46]: a46,
        toString(a55, a56, a57, a58) {
            try { new a56(a46, a56, a57, v19, v13); } catch (e) {}
            v33 ** -2147483648;
            -2147483648 >>> v33;
            const v64 = --a44;
            Math.tan(a44);
            Math.cbrt(v64);
            return v42;
        },
    };
    return o67;
}
const v68 = f43(v20, C23, v33, v20);
f43(C2, Date, v20, v13);
f43(v20, v32, v13, v68);
const v72 = new Date();
v72.setUTCMilliseconds(285215976);
