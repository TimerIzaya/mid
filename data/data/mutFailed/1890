function f0() {
}
class C4 {
    constructor(a6) {
        let v7;
        try { v7 = f0(...282796184, f0, this, this, ...a6, this); } catch (e) {}
        f0 >>> v7;
    }
    static #o(a10) {
        try {
            this.valueOf = f0;
        } catch(e11) {
        }
        try {
            this.c = f0;
        } catch(e12) {
        }
        return -4294967297;
    }
}
const v13 = new C4(-4294967297);
new C4(282796184);
new C4(64);
const v16 = [-21258,268435440,-9007199254740992,2147483649,-2925,9007199254740990,-128,-2147483647];
[-7,3617,536870888,-45945,1073741823,1024];
[-65536,-1];
function F19(a21, a22, a23, a24) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a21;
    } catch(e25) {
    }
    try {
        this.a = 282796184;
    } catch(e26) {
    }
    try {
        this.d = f0;
    } catch(e27) {
    }
}
const v28 = new F19(v16, f0, 282796184, v13);
const v29 = new F19(-4294967297, v13, 282796184, v28);
new F19(282796184, v29, -4294967297, v28);
function f31() {
    const o34 = {
        get b() {
            super[this] = "b";
            return f31;
        },
        ..."b",
    };
    return o34;
}
const v35 = v29();
try { v35.assign(); } catch (e) {}
let v37 = 0;
while (v37 < 7) {
    v37++;
}
