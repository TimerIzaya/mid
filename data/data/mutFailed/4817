const v3 = new eval(129);
try { v3.indexOf(129, v3); } catch (e) {}
new BigUint64Array(256);
new BigUint64Array(6);
function F14(a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    a16.arguments = a16;
    function f18() {
        try { ("NFKD").toLocaleLowerCase(); } catch (e) {}
        try { ("NFKD").localeCompare(this); } catch (e) {}
    }
    try { f18.bind(2); } catch (e) {}
    Object.defineProperty(this, Symbol.toPrimitive, { writable: true, value: f18 });
}
try { new F14(-47082, BigUint64Array, false, 6); } catch (e) {}
const v26 = new F14(F14, F14);
const v27 = v26?.g;
try { new v27(2, v26); } catch (e) {}
class C29 {
    static [v26];
}
