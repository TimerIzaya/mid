const v3 = [636.0619904743435,-1.0,1.02880264701966e+308,-656.9941137140671,-29.012861243904695,1000000000000.0];
function f4() {
    return Reflect.construct(-9007199254740991n, [Reflect,-9007199254740991n], 9223372036854775807n);
}
v3.constructor = f4;
const v9 = v3["flat"]();
class C15 {
    9;
    [-4294967295n] = 13n;
    get g() {
        this.f >>>= 1;
        const v17 = this[3360579767];
        try {
            super.toSpliced(v17, 13n, v17, 2, -1771000438);
        } catch(e19) {
        }
        return -1771000438;
    }
}
const v20 = new C15();
class C21 {
    static toString(a23, a24) {
        this.__proto__;
        const v28 = Math.atan(this);
        super.a = v28;
        function F29(a31, a32) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.f = a32;
            } catch(e33) {
            }
        }
        new F29(v9, v28);
        new F29(this, v20);
        new F29(v28, 65537n);
        let v37 = --a23;
        const v38 = -8 - v37;
        ++v37;
        Math.expm1(Math);
        function f42(a43) {
            const o44 = {
            };
            return o44;
        }
        const v45 = v37 ** a23;
        ++v37;
        Math.log2(v38);
        return v45;
    }
}
new C21();
new C21();
new C21();
new Float64Array(3349);
new Int8Array(2534);
new Int32Array(14);
const v62 = new BigUint64Array(2);
v62[Symbol.toPrimitive] = f4;
const o160 = {
    [v62](a68, a69, a70) {
        class C71 {
        }
        try { WeakMap.apply(Int32Array, Date); } catch (e) {}
        class C76 {
            constructor(a78, a79) {
            }
            static {
                for (let i87 = 0, i88 = 10;
                    (() => {
                        const v89 = i87 < i88;
                        class C90 extends Date {
                        }
                        const v91 = [1557591051,8137,536870888,-9223372036854775808];
                        v91 * v91;
                        BigUint64Array * 536870887;
                        const v97 = new Int16Array(4096);
                        class C98 {
                            constructor(a100, a101, a102, a103) {
                                let [v104,v105,,...v106] = v97;
                                try {
                                    class C107 {
                                        #n(a109, a110, a111, a112) {
                                            super[this] = this;
                                        }
                                    }
                                } catch(e113) {
                                }
                            }
                        }
                        return v89;
                    })();
                    i87++) {
                }
                function F120() {
                    if (!new.target) { throw 'must be called with new'; }
                    const o123 = {
                    };
                    o123.e = 19793;
                    const o124 = {
                    };
                    o124.h = 58;
                    const v126 = Array(19793);
                    for (const v127 of v126) {
                    }
                    const v128 = [v126,v126,v126,v126,v126];
                    const v130 = new BigUint64Array();
                    const v132 = [v130];
                    for (let v133 = 0; v133 < 50; v133++) {
                    }
                    v132[65536] %= 256;
                    [[v128,v128,v128]] >= Uint16Array;
                    const v138 = [1178537094,10,-1679472472];
                    [-16980,536870888];
                    v3[[-14,26189,536870888,268435440,-65536,1914946345,127,-43185,1,-2]] <<= 1045;
                    [this,C21];
                    [58,[Date,v138,Int8Array,-4294967295n],Int8Array,BigUint64Array];
                }
                new F120();
            }
        }
        for (let i146 = 0;
            (() => {
                function F149(a151, a152) {
                    if (!new.target) { throw 'must be called with new'; }
                    a151.trimLeft().strike();
                    const v155 = this.constructor;
                    try { new v155("a"); } catch (e) {}
                }
                return i146 < 10;
            })();
            ) {
        }
    },
};
