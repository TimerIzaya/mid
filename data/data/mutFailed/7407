function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -9007199254740990;
    } catch(e3) {
    }
    const o7 = {
        "execution": "sync",
        "type": "major",
    };
    gc(o7);
    try {
        this.b = -9007199254740990;
        let v9 = 0;
        do {
            v9++;
        } while (v9 < 9)
    } catch(e13) {
    }
    try {
        this.f = -9007199254740990;
    } catch(e14) {
    }
}
const v15 = new F0();
let v16 = new F0();
const v17 = new F0();
const v18 = [];
const o20 = {
    [v18]: v18,
    get h() {
        return this;
    },
};
for (const v21 in o20) {
}
class C22 {
    n(a24, a25) {
        return 861830309;
    }
    static [F0];
    static #a = v17;
    static #valueOf(a30, a31) {
        v16 = a31;
        const v32 = a31 / a30;
        a31 >> a30;
        try {
            v15.#valueOf();
            const v35 = [-128,-204399241,1126169676,-39466,-37076,268435456,9223372036854775807,536870888,15798,-1632967117];
            const o38 = {
                get c() {
                    return v35;
                },
                get d() {
                    return v35;
                },
            };
        } catch(e39) {
        }
        return v32;
    }
    static p(a41) {
        eval("boolean");
    }
}
new C22();
new C22();
const v62 = new C22();
const v63 = [v15,v15,F0,F0];
try {
} catch(e64) {
    const v66 = Float32Array();
    class C68 extends Float64Array {
    }
    const v69 = C68();
    try { v69(v66); } catch (e) {}
}
[v16,v62,[v63]];
class C73 extends F0 {
    p(a75, a76, a77) {
        function f78(a79, a80, a81) {
            let v82;
            try { v82 = a79(); } catch (e) {}
            a79 === v82;
            const o86 = {
                "maxByteLength": 2027,
            };
            const v88 = new a80(512, o86);
            new Float32Array(v88);
            return 512;
        }
        f78(a76, a77, this);
        return f78;
    }
}
new C73();
new C73();
new v15();
[-515617499,9007199254740990,1794867738,-2147483647,4,8];
[1073741824,1155028686,-4,1022797559];
class C97 {
}
[];
const v99 = [];
new Map();
function F102(a104, a105) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor;
    try { new this(); } catch (e) {}
    const o110 = {
        0: v99,
        "a": o20,
        "arguments": v99,
        "execution": "1ya",
        __proto__: Map,
        get d() {
        },
        162: "1ya",
    };
}
const v111 = new F102();
const v113 = new Int32Array();
class C118 extends Int8Array {
}
const v119 = new C118();
for (const v120 in v119) {
}
const v121 = new Uint8ClampedArray();
const v122 = new Int32Array(3208);
const t129 = v113.constructor;
new t129(v121);
new Int32Array();
v113[492];
const o128 = {
    "type": "minor",
};
Int32Array.from(v122);
const v130 = new F102(Map, Map);
new F102(v111, v130);
let v132 = 16;
v132--;
const v135 = new Int8Array(v132);
const v139 = new Float64Array(1000);
v139.includes(5);
v135.toSorted();
