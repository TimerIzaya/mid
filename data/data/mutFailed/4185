const v0 = /[(\1a)]/vdsy;
/S(?:foo)/vms;
/D(?: foo )/gdmsy;
/(?:ab){4,7}*/gvs;
const v4 = /ouNxyz{0,1}?/ims;
/H/gu;
function f6() {
    return v0;
}
function F10(a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v0;
    } catch(e15) {
    }
}
const v16 = new F10(154.7147519260609, 0.016624175751425052, 0.016624175751425052);
const v17 = new F10(0.6219950577384911, 154.7147519260609, 0.6219950577384911);
typeof v4 === "number";
new F10(154.7147519260609, 154.7147519260609, 0.016624175751425052);
function F25(a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a27;
    } catch(e30) {
    }
}
const v31 = new F25(0.6219950577384911, f6, v17);
new F25(0.6219950577384911, v31, v16);
new F25(0.6219950577384911, v31, v17);
const v34 = [];
const v37 = new Array(228);
class C38 {
    [Array] = v34;
    static {
        function F40(a42, a43) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.b = a43;
            } catch(e44) {
            }
        }
        const v45 = new F40(v37, this);
        new F40(Array, F40);
        try {
            v16.valueOf = f6;
        } catch(e47) {
        }
        super.b;
        new F40(v45, v37);
    }
}
new C38();
const v51 = new C38();
const v52 = new C38();
class C54 extends C38 {
    static #e = -1n;
    #b = v0;
}
new C54();
new C54();
new C54();
let v59;
try { v59 = v51.o(C38, v52, -1n, v37); } catch (e) {}
try {
    const t65 = "7MU";
    t65.valueOf = v59;
} catch(e60) {
}
