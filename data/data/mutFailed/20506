const v0 = [];
try { ("valueOf").fontcolor(v0); } catch (e) {}
9007199254740992 == 9007199254740992;
try { ("o").strike(); } catch (e) {}
new Uint32Array(3);
try { new Uint8Array(Uint8Array, -51267, Uint8Array); } catch (e) {}
const v22 = new Uint8Array(3);
v22[2] = Uint32Array;
try { Uint16Array(3, -698136822, v0); } catch (e) {}
const v26 = new Uint16Array(3);
v26[1] = v26;
for (let v27 = 0; v27 < 5; v27++) {
    function f28() {
        for (let [i32, i33] = (() => {
                switch (f28) {
                }
                10 + 10;
                return [0, 10];
            })();
            i32 % 8, i32 < i32, i32;
            i32++, i33--) {
        }
        return f28;
    }
    const v42 = v27();
    try { v42.toString(); } catch (e) {}
    %OptimizeFunctionOnNextCall(f28);
}
