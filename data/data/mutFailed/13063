function f0() {
}
function f1() {
    const o17 = {
        __proto__: f0,
        get f() {
            const v3 = super[this];
            super[v3] = f0;
            Math.hypot(Symbol, 2.220446049250313e-16, 2.220446049250313e-16);
            function F9(a11) {
                if (!new.target) { throw 'must be called with new'; }
                const v12 = this.constructor;
                try { new v12("toString"); } catch (e) {}
                a11[5];
            }
            f0 ^ this;
            super[this];
            return v3;
        },
        [f0]: f0,
        "g": f0,
        "b": f0,
        "d": f0,
    };
    return o17;
}
const v18 = f1();
const v19 = f1();
v19[v19] = f0;
v18[v19] >>>= v18;
let v20 = new f1();
try {
    new f1();
} catch(e22) {
}
const v23 = f1();
function f27(a28, a29, a30, a31) {
    const o47 = {
        toString(a33, a34, a35) {
            throw f1;
            "256" << v23;
            const v40 = 10 - 10;
            const v41 = a29 - 2.220446049250313e-16;
            Math.asin(v41);
            const v43 = v40 ** v41;
            v43 * a29;
            Math.atan(v43);
            Math.acosh(v41);
            return a34;
        },
    };
    v20 = o47;
    a31[-1] -= a28;
    o47[9] = a30;
    new Set();
    return o47;
}
f27(v23, v18, v19, "256");
f27(v19, v19, v18, "5eoW");
f27(v23, v18, v19, "9");
const o55 = {
    "maxByteLength": 257,
};
const v57 = new ArrayBuffer(203, o55);
v57.slice();
