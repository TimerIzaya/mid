let v1 = Infinity;
class C3 {
    static #toString(a5) {
        let v6;
        try { v6 = a5(a5, v1); } catch (e) {}
        super.g;
        return v6;
    }
    constructor(a9, a10) {
        let v8 = this;
        const v11 = v8[2];
        try {
            v11.#toString(v8, 2, 2, a9);
        } catch(e13) {
        }
        v8 = a9;
        const v17 = ++v1;
        const v18 = ~v1;
        const v19 = v18 - v18;
        Math.expm1(v1);
        const v21 = v19 & v18;
        Math.asin(v17);
        -13 * v21;
    }
}
const v27 = new C3(C3, v1);
new C3(2, v27);
new C3(0.679615422263825, C3);
function f39(a40, a41, a42) {
    return f39;
}
const o45 = {
    "type": "function",
};
o45.arguments = "p";
new Worker(f39, o45);
function f47() {
    return o45;
}
const o49 = {
    "type": "function",
};
new Worker(f47, o49);
