const v2 = new Uint32Array(193);
const v5 = new Uint16Array(178);
try { v5.slice(v5, v2); } catch (e) {}
3152 >>> 3152;
const v10 = new Float32Array(3152);
const v12 = [v5,v5,Uint32Array,true];
v12[1] = v12;
const v13 = [v2,Uint32Array,Float32Array,Float32Array];
(178)[1];
[Uint32Array,v12,3152];
function f16(a17, a18, a19) {
    a17 - a17;
    a19[3] = a19;
    const o29 = {
        __proto__: a19,
        [a18]: a18,
        "c": a19,
        [3152]: a17,
        "d": 3152,
        ...a19,
        valueOf(a22, a23, a24, a25) {
            return a18;
        },
        "e": v10,
        "f": true,
        "a": a19,
    };
    return o29;
}
f16(v13, 178, v12);
f16(193, 193, v13);
f16(3152, 193, v12);
v5[3];
const v35 = v13(ReferenceError);
v35.stack = v35;
