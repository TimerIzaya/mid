new Array(1927);
new Array(315);
[-4917,1024,-21209,16,-9223372036854775808,13,-65535,-295656771,1887073883];
[65535,13,268435439,500596616];
[14,0,7,-5,-7];
const v12 = [-Infinity,-7.230945278929126,2.220446049250313e-16,-1.7976931348623157e+308,-1000.0,-1.0,5.002169598915335,1e-15,-5.0,-4.0];
[2.0];
const v14 = [-113.88577577875685,NaN,-138.72295990426278,-725973.0177101751,1.0];
1000000.0 % 1000000.0;
const v23 = ([-698004.1950483839,2.2250738585072014e-308,-658.5488403472419,1.7976931348623157e+308])?.groupToMap;
let v24;
try { v24 = new v23(-8516); } catch (e) {}
const v25 = [-1.7976931348623157e+308,-2.2250738585072014e-308,1e-15,1.7976931348623157e+308,436.391218484674,984999.8983446106,-2.220446049250313e-16,-65664.25596205948,-568440.0637574068,0.6833182439703986];
v14.g = "m";
v25.g = v12;
[1.4550120056683328e+308,-1.0772967663163728e+308,186061.78370046848,-1.7976931348623157e+308,-5.0,-Infinity,0.03200553966660591];
const v32 = new BigInt64Array(14);
4096 / 4096;
Uint8Array.d = v24;
Uint8Array.prototype = Uint8Array;
const v36 = new Uint8Array(4096);
const v41 = this.decodeURIComponent([-2.216170140955498,-2.2250738585072014e-308,-643865.3403199288,NaN]);
let v42 = 127;
const v43 = v42++;
function f44(a45, a46) {
    return a45;
}
const v48 = new Promise(v41);
function f49() {
    function F50(a52, a53, a54, a55) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v56 = new F50(F50, F50, F50, v24);
    v56["p" + -4096] = -4096;
    return 4096;
}
v48.constructor = f49;
let v59;
try { v59 = v48.then(v32, v43); } catch (e) {}
try { v59.then(v25, v36); } catch (e) {}
function f61(a62, a63) {
    const o64 = {
    };
    return o64;
}
for (let v65 = 0; v65 < 25; v65++) {
    const v66 = f61();
    Object.defineProperty(v66, v65, { enumerable: true, get: f61, set: f61 });
    try { Reflect.preventExtensions(v66); } catch (e) {}
    const o70 = {
    };
    o70.execution = "asIntN";
    gc(o70);
}
