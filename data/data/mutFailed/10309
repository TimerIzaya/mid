const v3 = /Y(x)(x)(x)\3/us;
const v4 = /vfoo(?=bar)baz/gvsy;
const v5 = /(\2)(\1)foo(?<!bar)bazrG/gumy;
function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        F6.b = a8;
    } catch(e12) {
    }
}
const v13 = new F6(v4, v5, v5, v4);
const v14 = new F6(2.2250738585072014e-308, v5, v4, v5);
const t12 = 592930.4955683709;
new t12(592930.4955683709, 2.2250738585072014e-308, v4, v3);
[592930.4955683709,"b",v4];
[v14,v3,v4,v5];
[v3,v5,v5,v13];
const v25 = new Int8Array(268435456);
const v27 = new Float32Array();
function F28(a30, a31, a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    const v34 = this.constructor;
    try { new v34(v27, a32, 2); } catch (e) {}
    this.h = a31;
}
new F28(v25, Int8Array, F28, v27);
function f37(a38, a39, a40) {
}
[f37];
const o44 = {
    "arguments": v5,
    "type": "function",
};
new Worker(f37, o44);
