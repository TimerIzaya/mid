[1000000000.0];
const v4 = [0.4789817458782716,3.0,-1.0,-1000000000000.0,1.0];
let v5;
try { v5 = v4.fill(-256); } catch (e) {}
const v6 = [421.7981189248403,-2.0,-Infinity,-7.840501196508753e+307,8.382593370801558e+307,-687.8393229571766,2.8157713257483437,0.035561096558242467,810956.0383162913,1e-15];
v4.length;
var h = v5;
268435439 | 268435439;
const v10 = [v5];
const v11 = v6.sort;
Reflect.apply(v11, v4, v10);
const v16 = [3.070114008252518e+307,-1e-15];
try { v16.fill("H"); } catch (e) {}
const v18 = [0.3033162308746924,1000000.0,-169.25277302037784,-563035.9832029827];
try { v18.toString(); } catch (e) {}
const v20 = [2.2250738585072014e-308,1000000.0,-707630.4435131436,-769490.202103054,3.0,0.9513460005081867,-715136.8468099177];
function f21() {
    Uint8ClampedArray.e = Uint8ClampedArray;
    return Uint8ClampedArray;
}
%PrepareFunctionForOptimization(f21);
const v23 = f21();
try {
    v20.__proto__ = v16;
} catch(e24) {
}
try { v16.findLast(v11, v10); } catch (e) {}
v23.b = v23;
%OptimizeFunctionOnNextCall(f21);
f21();
