let v1 = 2136414864;
v1 = -8783;
try { ("u").trimLeft(); } catch (e) {}
function F10(a12, a13, a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = "16";
    try {
        this.d = a15;
    } catch(e16) {
    }
    try {
        this.e = -13;
        a12 &= this;
        try { ("16").startsWith(a14, a13); } catch (e) {}
        const t14 = "u";
        const v18 = delete t14[a13];
        function F19(a21, a22) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.g = a22;
            } catch(e23) {
            }
            try {
                this.f = 268435441n;
            } catch(e24) {
            }
            try {
                this.b = a12;
            } catch(e25) {
            }
        }
        new F19(-8783, v18);
        new F19(a12, v1);
        new F19(-8783, a15);
    } catch(e29) {
    }
}
new F10("L9", -13, -8783, "u");
new F10("16", -13, v1, "L9");
new F10("16", v1, -8783, "L9");
[1883768706,0,-3];
[4,662550048,-1073741824,256,127,-9007199254740991];
[4,128,16];
const v36 = [1354185297,-1187772013,1073741823,7,-13,8,-473031863,-1332151602];
const o50 = {
    [null]() {
        for (let v39 = 0; v39 < 500; v39++) {
            const o44 = {
                [v36](a41, a42, a43) {
                },
                ...v39,
            };
        }
        64n | "u";
        this.__proto__;
    },
};
"u" > -2147483647n ? "u" : -2147483647n;
[0.7797391287621346,Infinity,6.536975134012792];
[1000000000000.0,1000.0,-135.78403019997268,1000000000000.0,0.281304873331953,863409.2375698839,42711.81961763953,-Infinity,2.2250738585072014e-308];
[9.92943871849705,-1.5987595631683849e+308,-0.0,0.3728668311259937,-1000.0,0.13490286868681745,1.7853394871496025e+306,0.9816834823587086,341009.1510117706,-1.7976931348623157e+308];
const v56 = o50.null(null);
o50.null(v56, v56, v36, o50, o50);
