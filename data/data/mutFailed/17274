const v1 = new WeakSet();
const v3 = [null,WeakSet,v1,v1,null];
const v4 = [v1,v1];
const v5 = [null,WeakSet];
function F6(a8, a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v1;
    } catch(e11) {
    }
}
const v12 = new F6(v3, v3, v5);
const v13 = new F6(v3, v3, v5);
const v14 = new F6(v3, v3, v5);
function f15() {
    return v3;
}
function f16(a17, a18, a19, a20) {
    const o36 = {
        set d(a22) {
            v1 === a17;
            a18 ^ v12;
            a18[F6];
        },
        "f": a19,
        [a19](a27, a28, a29) {
            function* f30(a31, a32) {
                let [v33,...v34] = v3;
                Object.defineProperty(v14, "b", { enumerable: true, get: f15, set: f15 });
                yield* v3;
                return this;
            }
            f30(a18, v1);
            return WeakSet;
        },
    };
    return o36;
}
f16(v3, v13, v3, v5);
f16(v4, v14, v5, WeakSet);
f16(v5, v12, v14, v4);
class C43 {
    toString(a45, a46) {
        super.g = "-9223372036854775808";
        new Uint8ClampedArray(3);
        function f50() {
            return C43;
        }
        return f50;
    }
    n(a52) {
    }
}
const v53 = new C43();
function f54(a55, a56, a57) {
}
v4.length;
function F59() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v63 = Array(19793);
        for (const v64 of v63) {
        }
        const v65 = [v63,v63,v63,v63,v63];
        [[v65,v65,v65]];
    } catch(e69) {
        [e69,this];
    }
}
new F59();
const v72 = /(?: foo )/vdm;
const v73 = /zP/gud;
v53 > "-9223372036854775808";
Object.defineProperty(v53, 129, { configurable: true, set: f54 });
v72.__proto__ = v73;
Object.defineProperty(v73, "source", { configurable: true, enumerable: true, get: f54, set: f54 });
const o78 = {
    "execution": "async",
    "type": "major",
};
gc(o78);
