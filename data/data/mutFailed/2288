let v2 = "14";
const v7 = 9007199254740990 | -9007199254740990;
const v10 = new Uint16Array(8);
const o11 = {
    ...v10,
};
new Uint16Array(9);
new BigUint64Array(3);
new Int8Array(45);
class C20 extends Int32Array {
}
const v21 = new C20();
function f22() {
    const o23 = {
        "apply": f22,
        "call": f22,
        "construct": f22,
        "defineProperty": f22,
        "deleteProperty": f22,
        "getOwnPropertyDescriptor": f22,
        "has": f22,
        "isExtensible": f22,
        "preventExtensions": f22,
        "set": f22,
        "setPrototypeOf": f22,
    };
    new Proxy("species", o23);
    return "object";
}
const v28 = f22();
const v29 = f22();
const v30 = f22();
function f31(a32, a33, a34) {
    switch (a33) {
        case v7:
            Math.clz32("species");
            Math.log10(-2147483647);
            -2147483647 ^ -2147483647;
            break;
    }
}
const v41 = f31(v30, v30, v28);
f31(v41, f31(v29, v29, v41), v29);
const v44 = new C20();
({"c":v2,...v2} = v21["includes"](v44));
const v47 = [23795,8,259058917,-256,1,-36806,4096,-9,-1,-18943];
new Date(-2, v47, v47, v47, -2);
