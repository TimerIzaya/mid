const v3 = [-1000.0,-1000.0,3.0];
const v5 = [65537,268435441,63298,-5,1235122603];
function F6(a8, a9, a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    const v12 = this.constructor;
    try { new v12(1024, 1024, v5, this); } catch (e) {}
    a9.caller;
    a11[1];
    this.c = a10;
    const v17 = [Reflect];
    const o18 = {
        __proto__: Reflect,
        "e": v17,
    };
    this.f = a9;
}
const v19 = [v3];
const v20 = [-1000.0,v3];
[[3.0,v3,v19],-1000.0];
function F26(a28) {
    if (!new.target) { throw 'must be called with new'; }
}
const v29 = [1000000.0,4.0,877990.5497759602,-506457.5906391711,1.5877136832764825e+308,-5.0,0.37988723353754195];
const v30 = [-2.2250738585072014e-308,4.258971338651328e+307];
class C32 {
    #valueOf(a34, a35) {
    }
    static #a = v30;
    #g = 536870887n;
    static #f = v29;
    #b;
}
[v20,v3,830.9433377139194,830.9433377139194];
const v39 = new Map();
Object.defineProperty(v39, "p31", { writable: true, value: v29 });
function f40(a41) {
    a41.toString = f40;
    const v42 = a41.toString(v39);
    class C43 extends Map {
        [v42] = f40;
    }
    const v44 = new C43();
    for (const v46 in "1024") {
    }
    Reflect.construct(Date, [1024]);
    const o52 = {
        ...v39,
        "f": Map,
        "h": a41,
        [-2]: v39,
        ...v44,
    };
    return o52;
}
function f53() {
    return f40;
}
Object.defineProperty(f40, "toString", { configurable: true, enumerable: true, get: f53 });
for (let v54 = 0; v54 < 32; v54++) {
    v39["p" + v54] = v54;
}
const v57 = f40(f40);
const o58 = {
    __proto__: v57,
};
o58.f = o58;
