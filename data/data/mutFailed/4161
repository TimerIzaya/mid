class C3 {
    static g = 2.220446049250313e-16;
    static [-2.0] = -467624.7621037004;
    constructor(a5) {
        super.a = this;
        let {"h":v6,} = this;
    }
    3;
    g;
    get h() {
        const t10 = -2.0;
        t10[8] = this;
        this[this] = this in this;
        let v11 = new Float32Array(55);
        let v15;
        try {
        const t0 = 50;
        v15 = t0();
        } catch (e) {}
        let v16 = new Float64Array(v11);
        ({"buffer":v15,"byteLength":v16,"length":v11,} = v16);
        v15.slice(3170, 256);
        function f19() {
            return 2.220446049250313e-16;
        }
        return this;
    }
}
const v23 = new C3(-467624.7621037004);
new C3(2.220446049250313e-16);
const v25 = new C3(2.220446049250313e-16);
for (let v29 = 0; v29 < 25; v29++) {
}
const t33 = 0.06333210951326884;
const v31 = new t33(0.06333210951326884);
const t35 = 0.06333210951326884;
const v32 = new t35(-4294967296);
const v33 = [v32];
class C34 extends 0.06333210951326884 {
    [v31];
    #n(a36, a37, a38, a39) {
        function f40() {
            return v33;
        }
    }
    #g;
}
new C34();
const v42 = [C3,-0.0,-467624.7621037004,-0.0,v25];
function F43(a45, a46, a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a45;
}
const v50 = ([8,-46529,2147483648,1073741824]).includes;
try { v50(); } catch (e) {}
[v23,2.220446049250313e-16,-0.0,v42,v42];
[v25,v23,v25,0.06333210951326884];
const v58 = [601759695];
const v59 = [1073741824,1073741823,1376142744,1073741825];
function f61(a62, a63, a64, a65) {
    function f67() {
        try {
            v59.forEach();
        } catch(e71) {
        }
        function f72() {
            new Float64Array();
            const o76 = {
                "execution": "async",
            };
            return f72;
        }
        const v77 = f72();
        const o101 = {
            [522675525n](a79, a80) {
            },
            valueOf(a82, a83) {
                return a83;
            },
            [-4294967297n](a85, a86, a87, a88) {
            },
            "e": -4294967295,
            ...v58,
            "type": "Vre",
            valueOf(a90, a91) {
                return a91;
            },
            ..."Vre",
            valueOf() {
                return this;
            },
            4: "Vre",
            toString(a94, a95, a96) {
                return a94;
            },
            162: "Vre",
            toString(a98, a99, a100) {
                return a100;
            },
        };
        return v77;
    }
    f67();
    %OptimizeFunctionOnNextCall(f67);
    class C105 extends Int32Array {
    }
    const v106 = new C105();
    const v107 = new C105();
    v106["includes"](v107);
    try { v59["find"](..."find", a65, ...v58, ...v59); } catch (e) {}
    return arguments;
}
for (let v111 = 0; v111 < 10; v111++) {
    f61(v111, v111, -4294967297n, 522675525n);
    const v114 = new Map();
    function f115(a116) {
        const v117 = a116.toString(v114);
        class C118 extends Map {
            [v117] = f115;
        }
        const v119 = new C118();
        const o120 = {
            ...v114,
            "f": Map,
            "h": a116,
            [-2]: v114,
            ...v119,
        };
        return o120;
    }
}
%OptimizeFunctionOnNextCall(f61);
f61();
