const v0 = [];
function f1(a2, a3) {
    const v4 = a3?.[v0];
    v4?.[v4];
    return v0;
}
v0.toString = f1;
function f6() {
    return v0;
}
function f7(a8, a9) {
    a9[Symbol.toPrimitive] = f1;
    const o20 = {
        [v0]: f6,
        8: v0,
        "c": v0,
        "b": a9,
        "e": v0,
        __proto__: a9,
        "d": a9,
        n(a13, a14) {
            try {
                v0.concat(a13, this, a14, f6);
            } catch(e19) {
            }
            return a9;
        },
    };
    for (let v21 = 0; v21 < 50; v21++) {
        Array(36862);
    }
    return o20;
}
f7(v0, v0);
const v26 = f7(v0, v0);
f7(v26, v26);
[1.2795174831095926e+308];
[4.606211177040156e+307];
const v30 = [4.4340990345007665,0.42131793001065576,-1000000000.0,-1.0,-1000000000000.0,0.7594687243190561];
function f31() {
    return v30;
}
[170.5693191913865,Infinity,-697884.4080770259,-0.7411372508113452,0.22235217782548955];
[0.22027227282161876];
[1.0,-365.1745564298135,-1000000.0,1000000000.0,0.4941319014014032,4.959851389941138e+307,1000000000000.0];
const v35 = [-991034.5596759731,179.71649176762253,115582.55190338776,-1000000.0];
async function f38(a39, a40) {
    'use strict';
    a40[9] = v35;
    return -21133.120743932668;
}
f38("h", -21133.120743932668);
