const v3 = [-17001n,-17001n];
try { v3.map(-17001n); } catch (e) {}
function f5() {
    const o7 = {
        "c": Array,
    };
    const t6 = o7.c;
    new t6();
    for (const v12 of Array(4087, Array, Array)) {
        v12 | v12;
    }
    return f5;
}
%PrepareFunctionForOptimization(f5);
const v14 = [65537n];
const v15 = [-268435456n,v14,v3];
function f16() {
    return -17001n;
}
let v17;
try { v17 = f16(); } catch (e) {}
class C18 {
    set e(a20) {
        a20 <= 65537n;
        [-1.5216458828263529e+308,0.5110487320488007,1e-15,-1.2848390061380066e+308,-469.4777344751333];
        [1000.0];
        [-1000000000000.0,2.0,-7.165186377685043,-1000000000000.0,447915.35253179725,-1000000000.0,-3.0,2.220446049250313e-16,-1.0];
    }
    11;
    e;
    #b = -17001n;
    f = 65537n;
    [f5];
    #f = 65537n;
    3708478240 = -268435456n;
    static #d;
    #h = v15;
}
new C18();
new C18();
new C18();
let v29 = -63447;
--v29;
!v29;
!v29;
const v33 = /(J5a{0,1}?)/y;
class C34 {
    static {
        try { new this(); } catch (e) {}
        for (let v37 = 0; v37 < 25; v37++) {
            const v38 = [601759695];
            v38[0];
            const v40 = [1073741824,1073741823,1376142744,1073741825];
            const v41 = v40[1];
            function f42(a43, a44, a45, a46) {
                a44 - a44;
                let v48 = ~a44;
                v48--;
                try { a43(); } catch (e) {}
                const v51 = a45 << a45;
                let v52 = v51 % v51;
                const v53 = v52--;
                function f54() {
                    const o59 = {
                        [-1000000.0]: 0.0,
                        set e(a58) {
                        },
                    };
                    return f54;
                }
                function f60() {
                    return a43;
                }
                const v62 = new Int8Array();
                C18[7] |= v41;
                v17 - v41;
                [] = v14;
                v53 && v14;
                Object.defineProperty(v38, "h", { configurable: true, value: this });
                const v67 = new Int32Array(v37);
                v67.indexOf();
                for (let i = 0; i < 5; i++) {
                    /k/gdsy;
                }
                BigUint64Array.length;
                let v72 = BigUint64Array * 536870887;
                v72--;
                let v74 = v72 - v72;
                v74++;
                const v76 = v72 ** v72;
                try { Number(v33); } catch (e) {}
                Number.isNaN(v76);
                const v80 = v62.buffer;
                v80.maxByteLength;
                const v82 = v80.__defineGetter__;
                v82.a = v82;
                try { v82(); } catch (e) {}
                %OptimizeFunctionOnNextCall(f60);
                let v85;
                try { v85 = v40["find"](..."find", a46, ...v38); } catch (e) {}
                return v85;
            }
            for (let v86 = 0; v86 < 5; v86++) {
                f42(this, v86);
            }
        }
    }
}
try { new C34(); } catch (e) {}
