[-37380,-9007199254740991,-20419,-4,2,22077,-443165255,-1526737673,257];
[22770,3,10000,6088,23651156,-855305290];
[57687,-14,-9223372036854775807,-6,536870887,1];
const v6 = [0.0,-1.0,287753.19507263904,8.075459196972147,-1.1799605622146885,-3.0,6.419684399342985e+307];
const v7 = [1.2633192516166992e+308,463.9161900976633,-1e-15,-1.0,387259.68635593797,-3.0,1.212651139953275e+308];
[-6.561235847613604e+307,198.9818966610551,1000000000.0,-1.618392932023601e+308,0.3378861174058667,1000000000000.0,2.220446049250313e-16,-2.0,-304.1530361406333];
-747634.1081113975 != -747634.1081113975;
class C16 {
    static #p(a18, a19) {
    }
    #h;
}
try { C16.call(v7); } catch (e) {}
const v21 = new C16();
const v22 = v21?.constructor;
try { new v22(); } catch (e) {}
const v24 = new C16();
const v25 = new C16();
const v26 = v25?.constructor;
try { new v26(); } catch (e) {}
const v29 = Math.round();
async function f30(a31, a32, a33) {
    await v29;
    return f30;
}
function f35(a36, a37, a38, a39) {
    const v40 = a36?.constructor;
    try { new v40(); } catch (e) {}
    const v42 = a37?.__defineGetter__;
    try { new v42(v6, a36); } catch (e) {}
    const v44 = a38?.constructor;
    try { new v44(a39); } catch (e) {}
    const o54 = {
        "c": -922911.6474995338,
        242: -922911.6474995338,
        "g": v24,
        [a39]: a37,
        [C16]: a37,
        "a": -747634.1081113975,
        set h(a47) {
        },
        m() {
            const o52 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o52);
        },
        "h": a36,
        "f": a39,
    };
    o54[242] = o54;
    return o54;
}
const v56 = f35(f35(v21, v25, C16), v25, v21, v21);
v56[242] = v56;
const v57 = f35(v24, v25, v56, v56);
class C58 {
    constructor(a60, a61) {
        try { this.propertyIsEnumerable(a61); } catch (e) {}
        try { new a60(); } catch (e) {}
        function f64(a65, a66) {
        }
        try { f64.apply(0.19058899192664802, f64); } catch (e) {}
        0.1720098570652283 >> 0.1720098570652283;
        const v72 = new Date();
        v72.setUTCDate(0.1720098570652283);
        try { Date.call(-922911.6474995338); } catch (e) {}
        let v76 = new Date();
        v76 **= v76;
        const v79 = [v21,v57];
        v79[1] = v79;
        const o85 = {
            set d(a81) {
                this.cos = a81;
                for (let v82 = 0; v82 < 25; v82++) {
                }
                try { this["cos"](); } catch (e) {}
            },
            "arguments": v79,
            "type": "function",
        };
        o85.arguments;
        new Worker(f64, o85);
    }
}
new C58(C16, C58);
