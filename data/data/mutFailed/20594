const v0 = [];
function f1() {
    return v0;
}
let v4 = -56045;
v4++;
1582463097n << 1582463097n;
/ea(?=b)/umy;
/daxyz??/viy;
/6((?:a+)?)/is;
function F16(a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    const v20 = this?.propertyIsEnumerable;
    try { new v20(this); } catch (e) {}
    try {
        const o22 = {
            "apply": f1,
            "call": f1,
            "construct": a19,
            "getOwnPropertyDescriptor": f1,
            "getPrototypeOf": F16,
            "isExtensible": f1,
            "set": a19,
            "setPrototypeOf": a18,
        };
        o22.construct;
        const v25 = new Proxy(v0, o22);
        const v26 = [9007199254740992,-13,1,206834672,5792,16,856414023,8,2147483648];
        try { v26.filter(o22); } catch (e) {}
        try { ("function").replace(-14, v25); } catch (e) {}
        [a19,v26];
        new f1();
    } catch(e32) {
    }
}
new F16();
