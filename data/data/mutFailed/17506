class C3 {
    constructor(a5) {
        const o6 = {
        };
        new Proxy("m", o6);
    }
    set e(a10) {
        const v11 = a10 ** 2.0;
        const v12 = ["-50679"];
        ["m","m",this,v12,v12];
        [2.0,this,v11];
        function f15(a16, a17, a18, a19) {
            a17 === a17;
        }
        class C21 {
        }
        const v22 = new C21();
        const v24 = -4294967297n / -4294967297n;
        const v25 = [601759695];
        for (let v26 = 0; v26 < 5; v26++) {
            function f27() {
                "Vre" == C21;
                const o40 = {
                    [-4294967297n](a32, a33, a34, a35) {
                    },
                    ...v25,
                    ...v22,
                    4: v24,
                    toString(a37, a38, a39) {
                        return v26;
                    },
                    5: -4294967295,
                };
                return f27;
            }
            f27();
            %OptimizeFunctionOnNextCall(f27);
        }
    }
    static e = "m";
    #d;
}
const v42 = new C3("m");
new C3(v42);
new C3(v42);
[-1000000000000.0,-2.2250738585072014e-308,1.7976931348623157e+308,767292.8665979742,626714.456021969];
[-1000000.0,0.6778128659238791];
[1.7976931348623157e+308,-441.51358890416566,-Infinity,-2.0,-637805.2601193924,4.564811610708684,-1.4063297138391294e+308,9.90910647420134,-Infinity];
const v55 = [1.065613492561098e+308];
function f56() {
    const o97 = {
        m(a59) {
            a59.f = a59;
            try { a59.next(f56); } catch (e) {}
            a59.c = a59;
            a59.h = a59;
            const o61 = {
            };
            o61.h = o61;
            function f62(a63, a64, a65) {
            }
            f62.caller = f62;
            try {
                o61.split = -65535;
            } catch(e67) {
                const v71 = new Uint32Array(256);
                function f72() {
                    v71[3] = "-26733";
                    return "-26733";
                }
                %PrepareFunctionForOptimization(f72);
                const v76 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v76, o61, ...v55, ...v76);
            }
            try {
                const o78 = {
                };
            } catch(e79) {
            }
            Math?.expm1;
            let v82 = -9007199254740991;
            v82++;
            const v84 = v82 >> v82;
            for (let v85 = 0; v85 < 5; v85++) {
            }
            v84 && v84;
            class C87 {
                o(a89, a90, a91, a92) {
                }
            }
            const v95 = new Int8Array(3938);
            let v96 = 3;
            for (let i = 0; i < 5; i++) {
                [...v96] = v95;
            }
        },
    };
    o97.m(o97);
}
function F99() {
    if (!new.target) { throw 'must be called with new'; }
}
class C101 {
}
f56();
f56(f56);
