let v1 = -267.39964720990827;
let v2 = 1.0;
function f3(a4) {
    Number.isFinite(a4);
    const o20 = {
        7: a4,
        p(a8, a9) {
            const v13 = 37748 + this;
            const v14 = v2 << 37748;
            v2 ** v13;
            let v16 = v14 | v2;
            --v2;
            --v16;
            +37748;
            return 37748;
        },
    };
    o20[7] = o20;
    return o20;
}
try { new f3(f3); } catch (e) {}
const v22 = f3(Infinity);
v22[7];
const v24 = f3(v2);
v24[7];
const v26 = f3(v24);
48656 > 48656;
536870887 + 536870887;
-536870912 <= -536870912;
function f33(a34, a35, a36, a37) {
    a34.toString = f3;
    try { a34.toString(); } catch (e) {}
    -a36;
    const o57 = {
        ...a34,
        set b(a41) {
            let v40 = this;
            v40 = a41;
        },
        [a36]: a35,
        "g": v26,
        "h": Infinity,
        get c() {
            let v43 = this;
            v43 ^= a37;
            v1 |= Infinity;
            const v44 = /8[\cA]v/uisy;
            const v45 = [3480,1024,-4294967297,-1024,512,65536,29198,-9223372036854775807,-2147483647];
            try {
                v45.length = v44;
            } catch(e46) {
            }
            const v50 = --a35;
            Math.cosh(f3);
            const v52 = v50 - a35;
            Math.fround(v50);
            let v54 = v52 | a35;
            --v54;
            return Math.asin(4);
        },
    };
    return o57;
}
try { f33(-536870912, -536870912, v24, 48656); } catch (e) {}
f33(v26, -536870912, -536870912, v24);
const v60 = f33(536870887, 48656, -536870912, v22);
v60.valueOf = f3;
const v61 = v60?.valueOf;
try { new v61(); } catch (e) {}
f33(Infinity, -536870912, 48656, v22);
function F64() {
    if (!new.target) { throw 'must be called with new'; }
    try { this.valueOf(); } catch (e) {}
}
const v67 = new F64();
const v68 = v67?.constructor;
try { new v68(); } catch (e) {}
const v70 = new F64();
const v71 = new F64();
class C73 {
    static get b() {
    }
    static 182 = F64;
    static g;
    static #b = v70;
}
Object.defineProperty(C73, "valueOf", { enumerable: true, value: f33 });
const v75 = new C73();
Object.defineProperty(v75, "constructor", { writable: true, configurable: true, enumerable: true, value: f33 });
const v76 = v75?.constructor;
v76[Symbol.toPrimitive] = f33;
try { new v76(); } catch (e) {}
new C73();
const v81 = new C73();
const v82 = v81?.constructor;
try { new v82(); } catch (e) {}
try {
    v71.b = v81;
} catch(e84) {
}
6.921221993207333e+307 != C73 ? 6.921221993207333e+307 : C73;
let v87;
try { v87 = C73(); } catch (e) {}
try { v87(); } catch (e) {}
