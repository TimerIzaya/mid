function f0() {
    const o13 = {
        valueOf(a5, a6) {
            let v7;
            try { v7 = a6(a6); } catch (e) {}
            const v8 = delete a5?.[v7];
            let v9;
            try { v9 = new v8(this); } catch (e) {}
            Reflect.construct(a5, [], v9);
            return a6;
        },
        "b": -61079,
        __proto__: 23362,
        ...23362,
        "e": 193.06485642453117,
        64: -61079,
    };
    o13[64];
    return o13;
}
const v15 = f0();
const v16 = f0();
f0();
function f18() {
    return v15;
}
const v19 = [v16,v16,f18,f0];
v19[3] = v19;
const v20 = [f18,v16,f18];
[v20,f0];
class C22 extends f18 {
    3832 = v20;
    constructor(a24, a25) {
        for (let i = 0; i < 10; i++) {
            this[this];
        }
    }
    static #toString(a28, a29, a30) {
        super.f = v16;
        const v31 = this >> this;
        new Int16Array(210);
        new Uint32Array(3);
        new BigUint64Array(7);
        return v31;
    }
}
C22.e = C22;
const v41 = new C22();
Array(1102693041);
new Uint16Array(Uint16Array, Uint16Array, Uint16Array);
v41[64];
new C22();
new C22();
2174 & 2174;
new Int8Array(2174);
3817 - 3817;
new BigInt64Array(3817);
new Int32Array(128);
const v61 = [];
try { v61.toSorted(Int32Array); } catch (e) {}
function f63() {
    const o67 = {
        toString() {
            super[this];
            return this;
        },
        ...v61,
        n() {
            return this;
        },
    };
}
f63.a = f63;
%PrepareFunctionForOptimization(f63);
f63();
f63();
%OptimizeFunctionOnNextCall(f63);
f63();
const v2 = new BigInt64Array(2);
const v5 = new BigInt64Array(69);
const v8 = new Uint32Array(4);
let v10 = -4294967296n;
delete v8[687];
try {
    v10 &&= 127n;
} catch(e13) {
}
try {
    v5.toString = 1839;
} catch(e17) {
}
try {
    v2.valueOf = v2;
} catch(e18) {
}
const v22 = /lxyz{0,1}?/mvgisyd;
function f23() {
    class C25 {
        static 644701911 = 268435456;
    }
    return 127n;
}
v22[Symbol.toPrimitive] = f23;
const v36 = 16 ^ 16;
new Set([1000,-14,16,-11,-1413918991,-16,-374255446,-14,1000,10]);
const v42 = [v36];
const v47 = [2.220446049250313e-16,4.276454155698374];
function f48() {
    return f23;
}
Object.defineProperty(v47, "toString", { enumerable: true, get: f48 });
const v49 = [v47,v47,2.220446049250313e-16,v47];
const v50 = [242];
function f51(a52, a53, a54) {
    function f55(a56, a57) {
        const v59 = new Float32Array(Float32Array, Float32Array, Float32Array);
        class C61 extends v59.constructor {
        }
        new C61();
        return Float32Array;
    }
    a52[Symbol.toPrimitive] = f55;
    const o69 = {
        [a52](a66, a67, a68) {
        },
        1942: v50,
        ...v42,
    };
    function f70() {
        return Uint32Array;
    }
    o69.valueOf = f70;
    return o69;
}
f51(v22, BigInt64Array, v22);
const o75 = {
    ...v2,
};
v49.toSorted(f51);
Object.defineProperty(v49, 2081, { configurable: true, enumerable: true, value: 2056527154 });
