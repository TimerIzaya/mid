const v0 = [0.010147515702783494,0.3274047277112121,-5.0];
const v1 = [-4096,-4096,-1073741824,4096,-2];
const o2 = {
    __proto__: v0,
    ...v1,
};
o2.pop(o2, v1);
[-1e-15,0.7660976773760881,771.2695052686151];
const v5 = [1000.0,8.980069165445207e+307,-1e-15,-842785.4002893191,-457.2730346963558,1.0,-237.49407770096843,-0.0];
class C6 {
    2147483648;
    static [v5];
    #toString(a8) {
        a8[705] = this;
        [3.0,-1000000000000.0,1000.0,1000.0,0.5802651683322066,963.8834358316922];
        const v10 = [1000000.0,5.0,1000000000000.0,5.25906956536037,-1000000000000.0,-3.0,-3.3071646290148187e+307,3.568119496928354];
        [-9.40608270653052,4.503752921753984e+307];
        delete this[4];
        const o15 = {
            "maxByteLength": v10,
        };
        const v17 = new SharedArrayBuffer(1024, o15);
        new DataView(v17);
        return v10;
    }
}
const v20 = new o2();
v20[2147483648];
const v22 = new C6();
v22[2147483648] = v22;
const v23 = new C6();
C6[2147483648];
10 === 10;
v23.prototype = Uint32Array;
new Uint32Array(10);
let v29 = 2480;
const v30 = v29--;
new Uint16Array(v29);
new BigInt64Array(128);
try { gc(); } catch (e) {}
const t40 = v30();
t40();
("toString")[6];
"toString" == "toString";
("boolean").split("toString");
const o46 = {
    get f() {
    },
};
