function f3() {
    return "getTime";
}
const v4 = /v(x)(x)(x)\1/gudms;
let v5;
try { v5 = v4.toString(); } catch (e) {}
/h/gvdimsy;
/0(?:ab)xyz?/umy;
/(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10/gudi;
/a[a-z]/gvs;
/U[\ca]*/uimsy;
new Int8Array(3922);
const v16 = new Int16Array(4063);
v16[1252] = v16;
const v18 = 4072 >>> 4072;
function f19(a20, a21, a22, a23) {
    function f24() {
        function f25(a26) {
            return f19;
        }
        f25(f25);
        return a21;
    }
    f24();
    f24();
    %OptimizeFunctionOnNextCall(f24);
    return a21;
}
f19();
f19();
const v33 = Int32Array.name;
function F34(a36, a37, a38, a39) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = "getTime";
    } catch(e40) {
    }
    try {
        this.e = 4063;
    } catch(e41) {
    }
    try {
        this.c = f3;
    } catch(e42) {
    }
}
const v43 = new F34("-59830", v33, Int32Array, 4072);
new F34("-59830", "getTime", "getTime", 4072);
new F34(v5, v5, F34, v33);
new Int32Array(4072);
let v47 = 0;
while (v47 < 8) {
    try {
        const o52 = {
            "execution": "async",
            "type": "minor",
        };
        v43.fuck(-5.0, v33, undefined);
    } catch(e56) {
    }
    gc();
    class C59 {
    }
    const o60 = {
        "type": "NUfd",
    };
    v47++;
}
const v63 = BigInt64Array.constructor;
670 * 670;
Symbol.hasInstance = Symbol;
const v71 = Int16Array.isConcatSpreadable.description.fontsize(Uint8Array);
function f72(a73, a74) {
}
const v76 = 9007199254740991n * 9007199254740991n;
const o77 = {
};
v71.trimStart(Array);
let v79 = 0;
while (v79 < 4) {
    let v83 = -10;
    --v83;
    const v86 = +v83;
    Math.cosh(v18);
    +v83;
    function f89() {
        const o93 = {
            ...1.0,
            set b(a92) {
            },
        };
        o93.b = o93;
        return o93;
    }
    %OptimizeFunctionOnNextCall(f89);
    Math.tan(v86);
    +-2147483648;
    Math.cosh(-2147483648);
    v79++;
}
try { v76.fixed(); } catch (e) {}
const v99 = Array(670);
try { v99.groupToMap(v63); } catch (e) {}
