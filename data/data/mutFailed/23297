[];
new Uint8ClampedArray(0);
const v6 = new Uint8ClampedArray(5);
const v9 = new Uint32Array(35);
class C10 extends Uint32Array {
    get h() {
        let v12;
        try { v12 = this.values(); } catch (e) {}
        try {
            v9.reduceRight(v12, Uint8ClampedArray);
        } catch(e14) {
        }
        super.buffer;
        return v6;
    }
    [-2] = Uint8ClampedArray;
    268435440 = C10;
    static [Uint8ClampedArray];
}
new C10();
new Uint32Array();
new Uint32Array();
try {
    function f19(a20, a21, a22) {
        do {
        } while ((() => {
                const v25 = 7 < 7;
                const v26 = !v25;
                v26 && v26;
                return v25;
            })())
        f19(2147483648, f19, 2147483648);
        return 2147483648;
    }
    f19(f19, f19, f19);
} catch(e30) {
}
