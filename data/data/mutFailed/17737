const v0 = [1699604941,2,2147483647,-65536];
const v1 = [921799053,-52162];
const v2 = [64,128,-63335,212633518];
const v7 = [v1,1987589038,-53364,[v0,1987589038,v2,5,v0],1987589038];
class C11 {
    n(a13, a14) {
        function F15(a17, a18, a19) {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v20 = new F15(a13, 35066, -65537);
        const v21 = new F15("fl", F15, v20);
        F15(v21);
    }
}
[v2,v7,v7,v7,v0];
[394317.51531898975,Infinity,319.7949886785989,124.86401414900774];
[1e-15,5.0,0.0,-1000000.0,-616.9967088932885,981.7712864928546,0.8474229610695129,-1.0,-1000000000.0,1.7976931348623157e+308];
[-2.220446049250313e-16,5.355618434848631e+307,2.220446049250313e-16];
class C27 {
}
for (let v29 = 0; v29 < 25; v29++) {
    const v30 = [1073741824,1073741823,1376142744,1073741825];
    function f31(a32, a33, a34, a35) {
        function f37() {
            return C27;
        }
        for (let v38 = 0; v38 < 5; v38++) {
            try {
                C27.__proto__ = Date;
            } catch(e39) {
            }
        }
        const v41 = new Int8Array();
        const v43 = "toString" == "toString";
        Symbol.replace;
        const v46 = new v43();
        for (const v47 in v46) {
        }
        try { v41.map(f37, v41); } catch (e) {}
        function f49(a50, a51) {
            return v29;
        }
        f49(v41, C27);
        v41.buffer;
        %OptimizeFunctionOnNextCall(f37);
        try { v30["find"](); } catch (e) {}
        function F57(a59, a60, a61, a62) {
            if (!new.target) { throw 'must be called with new'; }
            try { a60.call(a32, v29, v30); } catch (e) {}
            for (let v64 = 0; v64 < 25; v64++) {
            }
        }
        new F57(7.090076723213673e+307, 7.090076723213673e+307);
        function F66() {
            if (!new.target) { throw 'must be called with new'; }
        }
        const v69 = new F66();
        class C70 {
            static set f(a72) {
                super.c = v69;
            }
        }
        return arguments;
    }
    for (let v73 = 0; v73 < 5; v73++) {
        f31();
    }
}
