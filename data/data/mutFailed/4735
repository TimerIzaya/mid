const v2 = new BigInt64Array(256);
try { new BigInt64Array(BigInt64Array, 5, BigInt64Array); } catch (e) {}
const v6 = new v2(5);
try { v6.map(BigInt64Array); } catch (e) {}
Int32Array.g = Int32Array;
new Int32Array(5);
3073 * 3073;
const v14 = Float64Array.BYTES_PER_ELEMENT;
v14 & v14;
new Float64Array(3073);
~187;
try { new BigUint64Array(187, 3073, 187); } catch (e) {}
try { new BigUint64Array(BigUint64Array, Float64Array, BigUint64Array); } catch (e) {}
new BigUint64Array(187);
const t14 = 3073;
new t14(512);
9.187362692894364 <= 9.187362692894364;
class C28 {
    static 9 = BigUint64Array;
}
C28.name = C28;
C28.length = C28;
for (const v29 in BigInt64Array) {
    v29[0] = 3073;
}
