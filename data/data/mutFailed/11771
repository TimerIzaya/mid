-Infinity;
const v8 = new String(String);
class C9 {
    #p(a11, a12, a13, a14) {
    }
    constructor(a16, a17) {
        try {
            v8.#p();
        } catch(e19) {
        }
    }
}
const v21 = new Uint8ClampedArray(3869);
new Int16Array(261);
new Int16Array(4);
class C28 {
}
const v29 = new Int16Array();
function f30(a31, a32) {
    const v33 = v21?.propertyIsEnumerable;
    try { v33(); } catch (e) {}
    const v35 = [];
    let v36;
    try { v36 = v35.with(v35, v35); } catch (e) {}
    new Uint8ClampedArray(512);
    new a32();
    const v42 = new Set();
    v42[C9];
    const v45 = new Float64Array(v35, v36);
    const v46 = new Float64Array(v45, a31, v36);
    v46.values();
    return v33;
}
%PrepareFunctionForOptimization(f30);
const v49 = f30(Uint16Array, v29);
%OptimizeFunctionOnNextCall(f30);
String.c = 15;
function f51(a52, a53, a54, a55) {
    v49.round();
    return Math;
}
%OptimizeFunctionOnNextCall(f51);
f30(v29, v29);
