function F0() {
    if (!new.target) { throw 'must be called with new'; }
    const v3 = -983604065 <= this;
    if (v3) {
        this[v3] = this;
        try {
            this.__proto__ = this;
        } catch(e4) {
        }
    } else {
        this[F0];
    }
    try {
        const t13 = -983604065;
        t13.h = -983604065;
    } catch(e6) {
    }
}
const v7 = new F0();
const v8 = new F0();
const v9 = new F0();
function f13() {
    return 11n;
}
class C14 {
    constructor(a16, a17) {
        %VerifyType(this);
        super[this] = v7;
        const v19 = Symbol.toStringTag;
        a16[v19] = f13;
        let v20;
        try { v20 = v19.getMilliseconds(10n); } catch (e) {}
        this[v20];
        /z0LK/gvdim;
        /L*/uis;
        /a(?!bbb|bb)c/ums;
    }
    static #b = C14;
    257 = v8;
    static [v9];
    static c;
    static #f = v9;
    static [v7] = v7;
    12 = 11n;
    #d;
}
new C14(v8, 11n);
const v26 = new C14(v8, 10n);
new v26(v8, 10n);
function f28() {
    return 10n;
}
[-2.220446049250313e-16];
[0.5776053994163061,4.0,1000000000000.0,-1000000.0,-1.4595150280728434e+308,-577.7044194648096];
[1000000000000.0];
for (let v32 = 0; v32 < 25; v32++) {
}
const o36 = {
    __proto__: v7,
    [this]: C14,
};
Object.defineProperty(v26, v8, { configurable: true, get: f13 });
this[628786973] = BigUint64Array;
