new Uint32Array(2899);
let v3 = 260;
const v5 = new Int16Array(v3);
const v8 = new Float64Array(64);
class C9 extends Uint32Array {
    static m(a11, a12, a13, a14) {
        this[Uint32Array];
        function f16() {
            return 64;
        }
        Float64Array && this;
        return 64;
    }
    6;
    [-2] = v8;
    static {
        for (const v19 in v5) {
            v5[2899] += 2899;
            v3 %= 2899;
            const o20 = {
            };
            new Proxy(this, o20);
        }
    }
}
new C9();
new C9();
new C9();
new Uint8Array(24);
new Float64Array(631);
new Int8Array(24);
function F36() {
    if (!new.target) { throw 'must be called with new'; }
}
new Int8Array(268435456);
[F36,Uint8Array];
