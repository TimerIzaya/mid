const v2 = new Uint16Array(113);
new Uint16Array(127);
new Float64Array(153);
function F9(a11, a12, a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a13;
    } catch(e15) {
    }
    try {
        this.d = a14;
    } catch(e16) {
    }
    try {
        this.e = Float64Array;
    } catch(e17) {
    }
}
new F9(113, Uint16Array, 113, 113);
new F9(113, v2, 113, 127);
new F9(127, Float64Array, 127, 113);
[-9,-28027,1073741823,-9,10,268435441];
const v22 = [-28956,-212889621,-4294967297,268435440,268435441,-15,536870887,9007199254740992];
[1073741824,25435,1024,-3338,-4294967297,8,1000,-65535];
const v25 = new BigUint64Array();
v25.useGrouping = v22;
const v27 = new BigUint64Array(1448);
function f28(a29, a30, a31) {
    return a31;
}
v27.toLocaleString(([-1000000000000.0,-1.7976931348623157e+308,294500.85018206923,-Infinity,-0.0,-7.010036940344757e+307,1.0,-Infinity,-1000.0,-1.1645821156926988e+308]).reduce(f28), v25);
