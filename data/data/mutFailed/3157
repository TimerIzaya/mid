class C4 extends Array {
}
try { (-12n).getTime(-12n, 46621); } catch (e) {}
const v10 = Array.prototype;
const v11 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v14 = new Uint32Array();
const v15 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v16 = [601759695];
const v17 = [1073741824,1073741823,1376142744,1073741825];
function f19(a20, a21, a22, a23) {
    function f25() {
        let v28 = Float64Array;
        v28 = a21;
        b = v16;
        const v29 = v11.length;
        try {
            v17.forEach(a21);
        } catch(e31) {
        }
        const v32 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v34 = Symbol.toPrimitive;
        const o40 = {
            toString(a36, a37) {
                const v38 = a23 && a21;
                a36 *= v34;
                v38 <= v32;
            },
        };
        const o65 = {
            "c": -12n,
            [522675525n](a43, a44) {
            },
            "c": v16,
            valueOf(a46, a47) {
            },
            [v29](a49) {
            },
            [-1]: 2684,
            1073741824: v14,
            "maxByteLength": -268435456,
            "b": -4294967295,
            [-12n](a51, a52, a53, a54) {
                class C56 extends Date {
                    static get c() {
                        eval();
                    }
                }
                for (let v60 = 0; v60 < 5; v60++) {
                    continue;
                }
            },
            "e": -4294967295,
            "e": -268435456,
            "arguments": v15,
            set b(a62) {
            },
            256: a23,
            m(a64) {
            },
            ...v16,
            "type": "Vre",
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            5: -4294967295,
            6: -268435456,
        };
    }
    f25();
    const v68 = new Int8Array();
    v68.buffer.slice(2147483648);
    %OptimizeFunctionOnNextCall(f25);
    let v73;
    try { v73 = v17["find"](..."find", a23, ...v16, ...v17, ...522675525n); } catch (e) {}
    v73 <= a22;
    return arguments;
}
new Float32Array(223);
let v76 = 1157;
new Uint32Array(4);
let v81 = Array();
v81--;
++v81;
const v84 = v76++;
const v86 = new Uint32Array(v76);
function F89(a91) {
    if (!new.target) { throw 'must be called with new'; }
}
function* f92(a93, a94, a95, a96) {
    return v86;
}
Float64Array.length = F89;
const v97 = new Float64Array(127);
function f98() {
    return v97;
}
new Uint16Array(Uint16Array);
[gc,/EyL9/uim];
function F107(a109, a110, a111, a112) {
    if (!new.target) { throw 'must be called with new'; }
    const v113 = this.constructor;
    let v114;
    try { v114 = new v113(v113, a112); } catch (e) {}
    const v115 = typeof v114;
    const o118 = {
        get b() {
            return v113;
        },
    };
    v115 === "symbol";
}
const v120 = [12];
try { v120.pop(); } catch (e) {}
let v122 = 8;
class C123 {
}
const v124 = Array.constructor;
try { new v124(v122, C123); } catch (e) {}
new v10();
v122 === v122;
const v128 = v122++;
this == this;
for (let [v134,...v135] of "atan2") {
}
-1697 | -1982743944;
Math.exp(v76);
v128 & v128;
v84.toLocaleString();
