[10,536870912,-908723154,-1024,3154,16,4];
const v1 = [-65537,-12,-2147483649,5,10032,17229,-2,-39674];
const v2 = [2,536870888];
function F6(a8, a9) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 0.6594118996517957;
    } catch(e10) {
    }
    try {
        this.f = v1;
    } catch(e11) {
    }
}
const v12 = new F6(v2, 0.6594118996517957);
const v13 = new F6(v12, v2);
new F6(v13, 172.87142829897243);
new Int8Array(2300);
new Int32Array(-1835934143);
new BigUint64Array(6);
const v25 = new Float32Array();
for (let v26 = 0; v26 < 25; v26++) {
    function f27(a28, a29, a30, a31) {
        a28[1];
        a29--;
        a28[0] = a28;
        a29 <= a29;
        arguments[1] = arguments;
        const v36 = arguments?.__lookupGetter__;
        try { v36.constructor(v25, a30, v26, f27); } catch (e) {}
        let v38;
        try { v38 = v36(v36, f27, a29); } catch (e) {}
        return v38;
    }
    for (let v39 = 0; v39 < 10; v39++) {
        f27(v25);
    }
}
