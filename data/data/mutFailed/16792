const v0 = [];
const v1 = [v0];
const t2 = [4294967296,-256];
const v6 = delete t2.length;
function f7(a8, a9, a10, a11) {
    function f12(a13, a14, a15, a16) {
        try { a14(Uint8Array, Uint8Array, a11); } catch (e) {}
        return a13;
    }
    f12(2);
    const o19 = {
    };
    try { o19.cos(BigUint64Array, v6); } catch (e) {}
    return f12;
}
for (let v21 = 0; v21 < 500; v21++) {
    f7();
    const v25 = +v21;
    129 ^ 129;
    129 | v21;
    Math.exp(v25);
    !v21;
    Math.sign(v25);
    Math.tanh(v21);
}
const v33 = [v1,[v1,v0,v0,v1,v0]];
[1.7976931348623157e+308,-6.705692104426637,-1000000000000.0,766.9171628516917,-817627.2788698642,9.731900876977259e+306];
[-734.9471971919695];
const v36 = [-1000000.0,-4.0,-360344.4550618173,-Infinity,0.509233399028284,117.33794893028653,617677.2921503107,1000000000.0];
new Uint8Array(5);
new Int16Array(2793);
const v45 = new BigInt64Array(624);
class C47 {
    e;
}
const v48 = v33.constructor;
const v49 = v48(1.2999975716279065e+308);
const v50 = new C47();
v50.c = v50;
new C47();
new C47();
function F56() {
    if (!new.target) { throw 'must be called with new'; }
    typeof arguments;
    gc();
}
const v62 = new F56();
function f63(a64) {
    const o69 = {
        "f": v49,
        "d": v36,
        1272303575: 5,
        __proto__: v48,
        "h": a64,
        valueOf() {
            return this;
        },
        [Uint8Array](a67, a68) {
            a64[5] = v50;
            v50[8] = a64;
            return a68;
        },
    };
    return o69;
}
Object.defineProperty(v62, "constructor", { writable: true, value: f63 });
v62.constructor;
new v45();
