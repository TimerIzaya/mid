[-11,-9007199254740990,-9007199254740992,-9007199254740990,-1201306443,-1018687595,6172,-9007199254740990];
const v2 = [1073741823,12125,2147483648,-268435456,-59052,9007199254740990,-1776100355];
[-10,-1440163224];
const v6 = new BigUint64Array(210);
new Int16Array(53);
new Int16Array(v2);
function f16(a17, a18, a19, a20) {
}
class C22 {
    static {
        for (let v24 = 0; v24 < 25; v24++) {
            const v25 = [601759695];
            const v26 = [1073741824,1073741823,1376142744,1073741825];
            function f27(a28, a29, a30, a31) {
                try { v26.toSorted(f16); } catch (e) {}
                const v36 = new Float32Array(this, a31, arguments);
                function f38() {
                    return v24;
                }
                class C40 extends v36.constructor {
                    #c = 84;
                }
                function f41(a42, a43) {
                    return C22;
                }
                try { f41(Int16Array, a31); } catch (e) {}
                %OptimizeFunctionOnNextCall(f38);
                try { v26["find"](..."find", a31, ...v25); } catch (e) {}
                const o47 = {
                    [Date]: 0,
                    __proto__: arguments,
                };
                return f38;
            }
            for (let v48 = 0; v48 < 5; v48++) {
                v6();
            }
        }
    }
}
