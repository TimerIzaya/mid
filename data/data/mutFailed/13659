const v5 = new Int16Array(-65537);
new Uint16Array(2030);
const v11 = new Uint32Array(512);
class C12 extends Uint16Array {
    constructor(a14, a15, a16, a17) {
        super(33061);
        this[a14] ^= a16;
        function f18() {
            return 8;
        }
        delete v11[this];
    }
    10;
    static [1] = Int16Array;
    1444263538;
    [1] = Int16Array;
    static #h = v11;
}
new C12(Uint32Array, v5, -65537, 8);
new C12(-65537, 512, 1, 2030);
new C12(C12, C12, 1, 2030);
function F25() {
    if (!new.target) { throw 'must be called with new'; }
}
function f27(a28, a29) {
    function f30() {
    }
    new Uint8Array(/(u4(?:a?)*)/gudimsy, f30);
    const v36 = new Uint32Array();
    for (let v37 = 0; v37 < 625; v37++) {
        const o45 = {
            ...a29,
            n(a41, a42) {
                v36[Uint8Array] = v36;
            },
            "b": 64,
            "maxByteLength": 10000,
            "g": Uint8Array,
            toString(a44) {
            },
        };
    }
    const o46 = {
    };
}
async function f48(a49, a50) {
    function F51() {
        if (!new.target) { throw 'must be called with new'; }
    }
    /2a\sc/uds;
    f27();
}
f48(F25, 4294967296);
