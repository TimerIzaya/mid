class C3 {
    static g = 0.37905138066469646;
    c;
    constructor(a5) {
        const t4 = 5.0;
        t4[5] = 5.0;
        try {
            super.o(a5, a5);
        } catch(e7) {
        }
    }
    [-1];
    static f;
    d = C3;
}
const v8 = new C3(5.0);
new C3(C3);
new C3(0.37905138066469646);
function F11(a13, a14) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = v8;
    } catch(e15) {
    }
}
new F11(0.37905138066469646, -307.0712737313821);
new F11(0.37905138066469646, 0.37905138066469646);
new F11(0.37905138066469646, -307.0712737313821);
[-7.941002572646787,4.068792076996049,1.7976931348623157e+308,4.0,-3.0,Infinity,-9.492394649562432e+307,-9.377598726075185e+307,590.0999579227607];
[-2.0,2.0];
[1.6102897835825871,-1.7976931348623157e+308,2.220446049250313e-16];
const v22 = /R/uimsy;
const v25 = ("string").split(/(?:a?)+/dis, v22);
function f26(a27, a28, a29, a30) {
    const v31 = /(?:a*)+q(?<a>.)/guds;
    for (let [i39, i40] = (() => {
            const o38 = {
                ["8"](a36, a37) {
                },
            };
            return [0, 10];
        })();
        (() => {
            const v41 = i39 < i40;
            function f42(a43, a44) {
                return i39;
            }
            const t4 = f42.constructor;
            t4();
            return v41;
        })();
        i40--) {
        for (let v52 = 0; v52 < 25; v52++) {
            v52 === v52;
            v31.hasIndices = v31;
        }
    }
    return a27;
}
for (let v54 = 0; v54 < 10; v54++) {
    f26(v54, v54, f26, v54);
}
%OptimizeFunctionOnNextCall(f26);
f26(f26, "string", v25, v22);
