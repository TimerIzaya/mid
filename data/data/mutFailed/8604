new Float32Array(-51736);
new Int32Array(3705);
let v7 = BigInt64Array;
new v7(12);
Math.pow(-1000000000.0, v7);
!v7;
const v16 = v7++;
const v17 = Math.acos(-1000000000.0);
const v18 = -1000000000.0 * v16;
const v19 = Math.asin(3);
for (let i32 = (() => {
        Math.log1p(0.04879611221991542);
        new Uint8ClampedArray();
        return 0;
    })();
    i32 < -0.0;
    i32++) {
    [[v19,v17,-0.0,[i32,i32,i32]],i32];
}
9223372036854775807 ^ 9223372036854775807;
function F42(a44, a45, a46, a47) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = v18;
    } catch(e48) {
    }
}
const v49 = new F42(-2.220446049250313e-16, -0.0, 12, -2.220446049250313e-16);
new F42(3, v49, 3, -2.220446049250313e-16);
new F42(v19, 9223372036854775807, -51736, -1000000000.0);
class C53 {
}
const v54 = new C53();
const t33 = v54.constructor;
const v56 = new t33();
v56.constructor;
try { Map(); } catch (e) {}
new Map(v17, Float32Array, v19);
class C63 {
    static #p(a65, a66) {
    }
    #h;
}
const v67 = new C63();
const v68 = new C63();
const v69 = new C63();
function f70(a71, a72, a73, a74) {
    const o75 = {
        "c": -922911.6474995338,
        242: -922911.6474995338,
        "f": v68,
        [a74]: a72,
        [C63]: a72,
        "a": -747634.1081113975,
        "h": a71,
        "f": a74,
    };
    return o75;
}
const v77 = f70(f70(v67, v69, C63), v69, v67, v67);
const v78 = f70(v68, v69, v77, v77);
class C79 {
    constructor(a81, a82) {
        function f83(a84, a85) {
        }
        const v89 = [v67,v78];
        const o90 = {
            "arguments": v89,
            "type": "function",
        };
        new Worker(f83, o90);
    }
}
const v92 = new C53();
const t74 = v92.constructor;
new t74();
