class C3 {
    #b = 1000000000000.0;
    static get d() {
        return "ignoreCase";
        new BigInt64Array();
        const o12 = {
            toString(a9, a10) {
                return "ignoreCase" && Float64Array;
            },
        };
        const v13 = super.a;
        try { v13("ignoreCase", "ignoreCase", v13, 1000000000000.0, 715859028); } catch (e) {}
        class C15 {
            constructor(a17) {
                function f18() {
                    return Float64Array;
                }
                Object.defineProperty(this, "length", { configurable: true, enumerable: true, get: f18 });
            }
        }
        const v19 = new v13();
        const v21 = new C15(v19.length(v19, C15));
        v21.length();
        try {
            this.#b;
            const o24 = {
            };
            async function* f25(a26, a27) {
                return a27;
            }
            f25.constructor();
        } catch(e29) {
        }
        return C3;
    }
}
const v30 = new C3();
new v30();
const v32 = new C3();
Math.cos(0.8497483139616006);
for (let i39 = 256n, i40 = 10; i39 < i40;) {
}
function f48() {
    const o52 = {
        m(a51) {
            return C3;
        },
        __proto__: 946.0676210033328,
    };
}
f48();
%PrepareFunctionForOptimization(f48);
new Int8Array(715859028);
[v30];
Reflect.construct(Uint16Array, v32);
