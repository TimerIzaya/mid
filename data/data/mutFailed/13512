class C3 {
    #m(a5, a6) {
        const t2 = "536870888";
        delete t2["536870888"];
        a5 & -57592699;
        try {
            const t6 = "536870888";
            t6.length = 0;
        } catch(e11) {
        }
        new BigUint64Array(0);
        const v15 = new Uint8Array(5);
        new Uint32Array(64);
        return v15;
    }
    static get a() {
        this.__proto__;
        return "536870888";
    }
    g = 5.276292203143472e+307;
}
const v21 = new C3();
new C3();
new C3();
/[x\dz]/gvy;
/6e(?: foo )/gudmsy;
/D\P{gc=Decimal_Number}/vdim;
const v31 = new Uint8Array(Uint8Array, Uint8Array, Uint8Array);
function f32(a33, a34, a35, a36) {
    if (-65535 !== a33) {
        const o40 = {
            "maxByteLength": 512,
        };
        const v42 = new SharedArrayBuffer(1, o40);
        new Uint16Array(v42);
    } else {
        const v45 = [5.276292203143472e+307,-65535,v21,9,5.276292203143472e+307];
        const v46 = [-25379,a35,v45,v45];
        [a36,a36,v46,v46];
    }
    a35++;
    const v49 = a35++;
    const v50 = a35 % a35;
    const o51 = {
        ...v31,
    };
    let v52;
    try { v52 = o51.n(v50, v49); } catch (e) {}
    return v52;
}
for (let v53 = 0; v53 < 500; v53++) {
    f32();
}
