new Date();
try { Date.toString(); } catch (e) {}
for (let i13 = 0, i14 = 10;
    (() => {
        const v15 = i13 < i14;
        v15 || v15;
        return v15;
    })();
    ) {
    let v21 = i13++;
    const v22 = v21++;
    v22 !== v22;
}
function F29() {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor = Date;
    try {
        const v31 = this[1073741824];
        v31[4040] = v31;
    } catch(e32) {
        const v34 = Array();
        Set.toString();
        const v37 = new Set(this, this);
        try { v37.add(v34); } catch (e) {}
    }
    const v39 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    function f40() {
        const v42 = -v39.length;
        const o43 = {
            5: v42,
        };
        return v39;
    }
    f40();
}
new F29();
const v46 = new F29();
const v47 = new F29();
class C48 extends F29 {
}
const v49 = new C48();
const v50 = new C48();
const t42 = v50.constructor;
const v52 = new t42();
const v53 = new C48();
v53.constructor = Date;
const v54 = v53.constructor;
Math.sin(-1068159412);
const v60 = new Int32Array(7);
new Uint16Array(v60);
new v54(v52, v54, v52, v47, v54);
class C64 {
    constructor(a66, a67, a68) {
        a67.constructor = Date;
        const v69 = a67.constructor;
        new v69(v69, C48, a67, a66);
        const t56 = a68.constructor;
        new t56();
    }
}
new C64(v47, v49, v46);
