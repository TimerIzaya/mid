const v1 = [-2147483647];
const v2 = [-2147483647,-268435456,62351];
const v3 = [14942,-868461281,5,-2147483648,4294967297,256,-249511439,16982,8,4096];
function f4() {
    return f4;
}
const v5 = [];
function f6(a7, a8, a9, a10) {
    function f11() {
        return f6;
    }
    class C12 extends f6 {
    }
    const v13 = new a7();
    const v14 = v13.toString();
    for (let i = 0; i < 5; i++) {
        ["object",v14,"object",v5];
    }
    return C12;
}
class C17 {
    #e = v5;
    constructor(a19) {
        class C22 extends Int8Array {
            [9];
        }
        try { new C22(); } catch (e) {}
        try { a19.filter(null, a19); } catch (e) {}
        -14819 * Math.hypot(-14819);
        try { C17.set(); } catch (e) {}
        class C32 {
        }
        const v33 = [601759695];
        const v34 = [427812215,61195,-2147483647,4096,-2147483647,30905];
        function f35(a36, a37, a38, a39) {
            try { a38.find(a36, a38, a37, v34, f35); } catch (e) {}
            try { v34["find"](..."find", a39, ...v33, ...v34); } catch (e) {}
            return a38;
        }
        f35(v33, 9, false);
        -14819 ^ 1e-15;
    }
    b = C17;
    [v2];
}
new C17(v1);
new C17(v3);
new C17(v2);
("valueOf").localeCompare(v5, "valueOf");
const v53 = gc.constructor;
let v54;
try { v54 = v53(gc); } catch (e) {}
const o57 = {
    "execution": "async",
    "type": "minor",
};
f6(o57);
new Int8Array(110);
new Int16Array(v54);
new Float32Array(4);
const v69 = new Uint16Array(96);
new Float64Array(v69);
