class C3 {
    static #a = "40241";
    15 = "40241";
    static #n(a5, a6) {
        let v4 = this;
        try {
            super.f = v4 ^= "40241";
            let {"b":v7,"c":v8,"length":v9,} = "40241";
            super[v9];
            a5?.[16];
            ("40241").#n(a5, v4, v4, -2.220446049250313e-16, a6);
        } catch(e13) {
        }
        return -2147483649;
    }
    a;
}
const v14 = C3?.MIN_SAFE_INTEGER;
let v15;
try { v15 = new v14(-2147483649); } catch (e) {}
new C3();
const v17 = new C3();
try { v17.isPrototypeOf(C3); } catch (e) {}
new C3();
let v22 = 1;
const v23 = v22--;
let v24 = -2.220446049250313e-16;
v24--;
v24 >> v24;
let v28;
try { v28 = v23.sup(); } catch (e) {}
try { v28.sup(); } catch (e) {}
class C31 {
}
try { C31.apply(C3, v22); } catch (e) {}
const v33 = new C31();
try { v33.propertyIsEnumerable(v33); } catch (e) {}
const v35 = [v33,v33,v33];
const v36 = [C31,C31,C31];
const v37 = [v24,v36];
try { v15.push(8); } catch (e) {}
const v39 = ("number").slice(v36, v33);
try { ("trimEnd").fixed(); } catch (e) {}
("trimEnd")[4];
const v43 = C3["trimEnd"]();
const v44 = v14?.toLocaleUpperCase;
try { new v44(); } catch (e) {}
v43 == v43;
function f47(a48, a49, a50) {
    try { a49.toString(); } catch (e) {}
    try { a49.match("1G"); } catch (e) {}
    const v53 = a50?.flat;
    try { new v53(); } catch (e) {}
    try { C31.toLocaleString(); } catch (e) {}
    const o56 = {
        ...a50,
        268435441: v33,
    };
    o56[2] = o56;
    return o56;
}
const v57 = f47?.constructor;
try { new v57(v17); } catch (e) {}
try { new v57(v17); } catch (e) {}
const v60 = f47(v35, v39, v37);
v60[2597153494] = v60;
const v61 = f47(v43, v43, v60);
v61[2597153494] = v61;
try { v61.propertyIsEnumerable(f47); } catch (e) {}
