function f0() {
    function F1(a3, a4, a5) {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v6 = new F1();
    new F1(F1, F1, v6);
    ("128").fontsize();
    const o17 = {
        "g": "race",
        "c": "name",
        4: "race",
        "h": "race",
        get e() {
            this.toString = f0;
            this[this] = "race";
            return ("name")[Symbol.split];
        },
        "type": "128",
        __proto__: 0.9604406093582539,
        ...F1,
        8: "race",
        /*
        __proto__: "name",
        */
        "b": "race",
        ["race"]: f0,
        "a": f0,
    };
    function f18() {
        return f0;
    }
    Object.defineProperty(o17, Symbol.toPrimitive, { enumerable: true, get: f18 });
    return o17;
}
const v21 = f0();
const v22 = f0();
const o23 = {
    [v22]: v22,
    ...v22,
};
const v24 = delete v21.h;
const v25 = f0();
function F26(a28) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = this;
    try {
        this.h = v25;
    } catch(e29) {
    }
}
const v30 = new F26(v21);
const v31 = new F26(v30);
const v32 = new F26(v22);
function f33(a34, a35) {
    const o41 = {
        __proto__: a34,
        p(a37, a38) {
            48752008 ^ this;
            return this;
        },
    };
    return o41;
}
f33.toString = f0;
const v42 = f33(f33);
Object.defineProperty(v42, "toString", { writable: true, configurable: true, enumerable: true, value: f0 });
try { v42.p(); } catch (e) {}
[f0,[v32,v30,F26,v32,v31]];
[v21];
function f47() {
    return f47;
}
const v48 = [f47,f47,f47,f47];
function f49(a50) {
    class C51 {
    }
    const v52 = new C51();
    const o53 = {
    };
    new Proxy(v52, o53);
    return v52;
}
v48.constructor = f49;
const o57 = {
    "maxByteLength": 201,
};
function f58(a59) {
    v48[v24];
}
Object.defineProperty(o57, "a", { writable: true, configurable: true, enumerable: true, set: f58 });
try {
    o57.a = 10137;
} catch(e62) {
}
v48.flatMap(f47);
function f0() {
}
function f1() {
    const o8 = {
        n() {
            let v4 = [];
            Reflect.construct(f0, v4, f0);
            try {
                v4 = this;
            } catch(e6) {
            }
            return v4 - f0;
        },
        ...f0,
        "g": f1,
        __proto__: f0,
        [f1]: f0,
    };
    return o8;
}
let v9 = f1();
const v10 = f1();
const v11 = f1();
function f12() {
    const o13 = {
    };
    new Proxy(f12, o13);
    try {
        v9 -= v9;
    } catch(e16) {
    }
    return v11;
}
64 * 64;
new Uint8Array(64);
const v24 = new Float64Array(5);
v24[0] = v24;
~1;
new Int16Array(1);
const v32 = [2.220446049250313e-16,4.276454155698374];
function f33(a34, a35, a36) {
    function f37() {
        return Float64Array;
    }
    return f12;
}
f33(64, 1, 5);
const v39 = [v32,v32,2.220446049250313e-16,v32];
try { v39.sort(4.276454155698374); } catch (e) {}
const v41 = [2.220446049250313e-16,-409.5445341345936];
function f42(a43, a44, a45) {
    const v46 = a44--;
    a45 - a45;
    const o52 = {
        "h": a45,
        "a": a44,
        [a45](a49, a50, a51) {
        },
        "c": v46,
        __proto__: v10,
        "b": true,
        "f": v46,
        ...v32,
        [a45]: -409.5445341345936,
        "b": a45,
        1942: v41,
        "g": v41,
        ...v39,
    };
    o52[1942] = o52;
    try {
        const o53 = {
        };
        v32.filter(f33, o53);
    } catch(e55) {
    }
    return o52;
}
const v56 = f42(v39, -409.5445341345936, -409.5445341345936);
v56.g = v56;
const v57 = f42(v32, v41, 2.220446049250313e-16);
const v58 = f42(v39, 4.276454155698374, 4.276454155698374);
function f59(a60, a61, a62, a63) {
    a60[1] = a60;
    a62[3];
    class C66 extends v56.constructor {
        [64];
        #f;
        static [v56] = f42;
    }
    new C66();
    const o70 = {
        __proto__: v56,
        126: a63,
        set b(a69) {
        },
        ...v58,
        ...v56,
    };
    o70.b;
    return o70;
}
f59(v57, 2.220446049250313e-16, v56)[3];
for (let i = 0; i < 10; i++) {
    let v74;
    try { v74 = v39.findIndex(f42); } catch (e) {}
    v74 | v74;
}
