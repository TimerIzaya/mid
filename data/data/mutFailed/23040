const v0 = /(\xed\xb0\x80)\x01a{1,2}?gIxyz{1,}+/gvd;
const v1 = /a\D/vdsy;
const v2 = /H/gvdisy;
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = a5;
    } catch(e6) {
    }
    try {
        const v7 = [-504863.1885363821,-248378.80818527355,-147.11467188198264,-1.7039705769992093e+308];
        for (let v8 = 0; v8 < 5; v8++) {
            v7 | v8;
        }
        ~9007199254740990;
        this.b = a5;
    } catch(e12) {
    }
}
new F3(v2);
const v14 = new F3(v1);
const v15 = new F3(v2);
class C16 extends F3 {
    toString(a18) {
        return v1;
    }
    constructor(a20) {
        super.h = this;
    }
    static #a = v15;
    static 10 = v15;
    /*
    constructor(a22, a23, a24) {
        super(a24);
        try {
            v14.#a;
        } catch(e26) {
        }
    }
    */
    static #e = v14;
    g;
}
const v27 = new C16(v0, v1, v14);
new C16(v1, v1, v27);
new C16(v2, v1, F3);
const v31 = [Symbol,Symbol,Symbol];
("getBigInt64").normalize();
new Int8Array(9);
const v37 = Symbol.toPrimitive;
let v38 = 1073741824;
class C40 {
    constructor(a42) {
        [a42,v38] = "boolean";
    }
}
const v43 = new C40(C40);
const o44 = {
    ...v2,
    2: v43,
    268435439: C40,
};
v31[v37] = Symbol;
function f45() {
    return f45;
}
[f45,f45,f45,f45];
for (const v50 of Array(19793)) {
    Math.tanh(-1000.0);
    function f54() {
        return f54;
    }
    f54();
    %OptimizeFunctionOnNextCall(f54);
}
const o70 = {
    [9]: 9,
    [C16](a57, a58) {
    },
    "maxByteLength": 19793,
    set b(a60) {
        function f61(a62) {
            return f61;
        }
        class C63 extends f61 {
        }
    },
    set g(a65) {
    },
    [v31](a67, a68, a69) {
    },
};
for (const v71 in o70) {
}
