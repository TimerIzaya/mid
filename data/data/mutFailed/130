const v0 = [];
class C1 {
    get e() {
        let v5 = new Set();
        v5 /= v5;
        v0.length;
        super.a >>= this;
        try {
            this.a = v0;
        } catch(e7) {
        }
        return this;
    }
    constructor() {
        const v10 = [[v0]];
        v10[0] = v10;
        [v0];
    }
    e;
    a;
}
function f12(a13, a14) {
    class C15 {
    }
    const v16 = new C15();
    Reflect.apply(a14, v16, []);
    return C15;
}
C1[Symbol.toPrimitive] = f12;
const v22 = new C1();
const v23 = new C1();
Object.defineProperty(v23, Symbol.toPrimitive, { configurable: true, enumerable: true, value: Symbol });
let v26 = new C1();
class C27 {
    static get c() {
        const v30 = new WeakSet();
        v30[7] = v30;
        try {
            v30.__proto__ = C1;
        } catch(e31) {
            let [] = v0;
            let v32;
            try { v32 = C1.n(v30); } catch (e) {}
            try {
                v32.d = v23;
            } catch(e33) {
            }
        }
        return this;
    }
    static 7 = v0;
    [C1] = v23;
    static 1407 = C1;
    e;
    [v23];
}
C27[1407] = C27;
new C1();
const v35 = new C1();
v35.e;
const v37 = new C27();
-65535 >>> -65535;
65535 + 65535;
function f43(a44, a45, a46, a47) {
    a46.b = a46;
    const o63 = {
        n(a49, a50) {
            let v48 = this;
            [v48,a49] = v0;
            let v51;
            try { v51 = v48(a44, v22, v23, ...v48, a50); } catch (e) {}
            v51 % v37;
            v26 = C1;
            Math.tan(a46 % a46);
            const v58 = ~a46;
            Math.sqrt(C1);
            C1 / 0.7165199963900419;
            --a47;
            !v58;
            return a44;
        },
    };
    return v23;
}
const v66 = f43(v22, 65535, f43(v22, 9007199254740990, f43(v35, 65535, v23, v0), v26), f43);
v66.a = v66;
4096 >>> 4096;
const v70 = new Uint32Array(4096);
v70[6] = 35.31700069890553;
[-1359476291,8,536870912,478271363,-9223372036854775807,4096,536870888,-1193938476,-65535];
[-4294967297,5,-14];
[-15695,-4];
const v12 = [339220.6328561967,911358.6181931046,-5.0];
v12[1] = v12;
const v13 = [-1000000.0,8.679879842107336e+307,-5.0,1.0,1000000000.0,-1.0];
v13.g = v13;
[-2.220446049250313e-16,-1e-15,2.0,3.738599362175618,0.07498296521872194,0.2885798208156063,-635620.1646720967,-1.7976931348623157e+308];
const v16 = [5.0];
-(-618199.1371965441);
async function* f20(a21, a22, a23) {
    'use strict';
    4.387531868078238 | v13;
    await Math.atan2(-618199.1371965441, false);
    yield* v16;
    return -618199.1371965441;
}
f20(4.387531868078238, 4.387531868078238, false);
let v36 = 3908;
v36++;
512 == 512;
Int32Array.prototype = Int32Array;
const v45 = [-1000000000.0,1e-15,-9.803124315434264,-366.4099400694298,1000000000000.0,0.7347183727038488,-Infinity,2.0,0.3916117682859279,-461027.2128179858];
const v46 = [1000000000000.0,-1.7976931348623157e+308,6.570844083183324,3.0,-2.0,961.6011183149949,634.9606529678199,1.6712831869744128e+308,1000000000000.0];
const v47 = [-1.0,1e-15,NaN,5.0,-1.390593919008634e+308,2.2250738585072014e-308,-3.6891891067725497e+307];
function f48() {
    return v45;
}
class C52 extends f48 {
    constructor(a54, a55, a56, a57) {
        super();
        const o59 = {
        };
        gc(o59);
    }
}
const v61 = new C52();
const v62 = new C52(v61, C52, -2147483647n, v47);
new C52(-2147483647n, 0n, C52, v46);
class C64 extends f48 {
    [f48] = f48;
}
new C64();
const v66 = new C64();
h = v66;
C64 << v47;
for (let v68 = 0; v68 < 8; v68++) {
    v61.length = v68;
}
const v69 = C64;
Object.defineProperty(v13, v62, { writable: true, configurable: true, get: Date });
try { C64.random(-1024, -32687, 4.387531868078238, f20); } catch (e) {}
try {
    v45.reduceRight(f20);
} catch(e72) {
}
const o75 = {
    "maxByteLength": 65535,
};
const v77 = new SharedArrayBuffer(16, o75);
new BigInt64Array(v77);
38567 >>> 38567;
try { BigUint64Array(f20, v36, -32687); } catch (e) {}
