const v2 = new Array(1075);
class C3 {
    [Array];
    p(a5, a6) {
        v2 / this;
        return Array;
    }
    5;
    #d;
    257 = v2;
    [1075];
    static {
        const o11 = {
            "maxByteLength": 3960,
        };
        const v13 = new ArrayBuffer(2, o11);
        new Float64Array(v13);
    }
}
const v16 = new C3();
5.0 / -2.220446049250313e-16;
const v20 = /[r(?<!)]/uim;
function f21(a22, a23, a24, a25) {
    const o31 = {
        set a(a27) {
            let v26 = this;
            [-910865.3408997525,626.3279856071824,-234.8554751364569];
            [-3.0,5.0,0.030403066145865854,-2.2250738585072014e-308,-1e-15];
            const t26 = [0.0,-2.0,-4.4315495470280674e+307,2.220446049250313e-16,1.176246364365651e+307,-6.320855532259336e+307,2.0];
            t26[6] = v20;
            v26 = a22;
        },
        "e": v20,
        "d": a25,
        ...a23,
        "a": a23,
    };
    return o31;
}
const v32 = new C3();
const v33 = new C3();
function f37() {
    return v16;
}
function F38(a40, a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = v32;
    } catch(e44) {
    }
    try {
        this.g = v32;
    } catch(e45) {
    }
    try {
        this.f = a43;
    } catch(e46) {
    }
}
const v47 = new F38(1075, 1760004394, 1760004394, v32);
new F38(9007199254740992, 7, 1760004394, v47);
new F38(9007199254740992, 1760004394, 9007199254740992, v33);
const v52 = new Int16Array(3);
let v53 = 257;
const v55 = new Float32Array(v53);
new Int16Array(5);
function f59(a60, a61, a62, a63) {
    const v64 = [1000000000000.0,0.9960435535667199,1000.0,-1.6540773985510377e+308,0.3018853678306006,410.9648048644401,-6.0085450863810586,-529.8311372035074];
    const v65 = `
        function f66() {
            return f66;
        }
        let {...v67} = v64;
        try {
            v67.fuck(v67);
        } catch(e69) {
        }
    `;
    eval(v65);
    const o92 = {
        o(a73, a74, a75) {
            const v77 = Symbol.toStringTag;
            const v78 = [268435440,8,7,1073741824,2147483647,70520590,-9223372036854775807,129,268435439,-1147002105];
            const v79 = v78.concat(v78);
            v79.flat(v79);
            function f81(a82) {
            }
            v52[v77];
            ({"a":a61,"d":a75,...v53} = this);
            return v77;
        },
        [5](a85, a86, a87, a88) {
            const o89 = {
            };
            new Proxy(this, o89);
            return Int16Array;
        },
    };
}
f59(3, Int16Array, 5, v55);
f59(v53, Int16Array, Float32Array, v52);
try { Date.now(); } catch (e) {}
let v99 = 1038975308;
class C100 extends Date {
}
const v101 = [155533.8602852358,2.0];
function F103() {
    if (!new.target) { throw 'must be called with new'; }
    const v105 = this?.__lookupGetter__;
    try { new v105(); } catch (e) {}
    [-1.3667473485475811e+308,1.7976931348623157e+308,5.0,-3.583919688173468e+307,-1.5320462342133301e+308,-414873.4859108749,286122.8434793174,866.7395286670867,-1000.0,-742782.9714922046];
    const o113 = {
        [-128](a110, a111, a112) {
        },
    };
    for (const v116 of Array(19793)) {
        while (v99 < 5) {
            v99++;
        }
        v101[658291203] = null;
        let v122 = Math.cbrt();
        v122--;
        const v124 = 0.4890055133608564 || 0.4890055133608564;
        v124 + v124;
    }
    const v126 = [];
    v126.g = v126;
    const v127 = [C100,C100];
    function f130() {
        const v133 = Math.atanh("Vre");
        return v133 >> v133;
    }
    class C135 {
    }
    class C136 extends C135 {
        static valueOf(a138, a139) {
        }
    }
    try { v127.fill(); } catch (e) {}
    v52.c = Date;
    ([-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135]).fill();
}
new F103();
