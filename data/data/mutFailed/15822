class C3 {
    #m(a5) {
        const v6 = delete a5?.[1000];
        function F7(a9, a10, a11, a12) {
            if (!new.target) { throw 'must be called with new'; }
            const v13 = [a11,0.29627644123110264,-9.972338190439384,F7,-9.972338190439384];
            const v15 = [[v13,v6,v13],-9.972338190439384,this];
            const v16 = v6 & a12;
            try {
                v16.e = v16;
            } catch(e17) {
            }
            try {
                this.e = a9;
            } catch(e18) {
            }
            this[Symbol.asyncIterator] = v15;
            v13[2] %= v6;
            const o23 = {
                "maxByteLength": a12,
            };
            const v25 = new SharedArrayBuffer(8, o23);
            new Uint16Array(v25);
            try {
                this.f = a5;
            } catch(e28) {
            }
            try {
                this.h = 0.29627644123110264;
            } catch(e29) {
            }
        }
        const v30 = new F7(this, v6, this, F7);
        const v31 = new F7(-9.972338190439384, this, -8, F7);
        new F7(0.29627644123110264, v31, v30, -9.972338190439384);
        return F7;
    }
}
const v33 = new C3();
new v33();
new C3();
[1939651836,4,1073741825,9223372036854775807,268435456,2147483649,268435440,536870887];
[-1,-2114115980,1073741824];
[260365641];
/(?<a>(?<b>(?<c>(?<d>.).).).)+/gvimsy;
