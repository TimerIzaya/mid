const v2 = new Array(9);
const v3 = [0.932933327443049,-5.2958205918331025,5.034776395793826e+305,945342.5428368915,1000000.0,0.23909854371883343,-247.11634251773341];
const v4 = [0.9054755049966756,-3.554871225521502e+307,NaN,0.0,-1.7976931348623157e+308,-1000000.0,0.2124916725482323,5.0];
v4.toString = Array;
const v5 = [0.28436149648551,-1000000000000.0];
class C6 {
    static #n(a8, a9) {
        a8 = v5;
        Reflect.construct(super[v4], [Array,a8,a9], Array);
        a8 = this;
        return v2;
    }
    static #f = Array;
    static 6;
    [v4] = Array;
    static f;
}
const v14 = new C6();
const v15 = new C6();
const v16 = new C6();
function f17(a18, a19, a20) {
    const o30 = {
        ...v15,
        get g() {
            const o22 = {
            };
            try {
                o22.f = v3;
            } catch(e23) {
            }
            try {
                const o24 = {
                };
                o24.f = v3;
                o24.d = v14;
            } catch(e25) {
            }
            try {
                const o26 = {
                };
                o26.f = v3;
                o26.d = v14;
                o26.b = v5;
            } catch(e27) {
            }
            try {
                const o28 = {
                };
                o28.f = v3;
                o28.d = v14;
                o28.h = this;
            } catch(e29) {
            }
            return o22;
        },
    };
    return o30;
}
f17(f17(v16, Array, v15), f17(v5, v4, v16), v14);
function F36(a38, a39, a40, a41) {
    if (!new.target) { throw 'must be called with new'; }
    const v42 = a40.constructor;
    try { new v42(a39); } catch (e) {}
}
new F36(undefined, undefined, -128n);
