function f3(a4, a5) {
    a5 == a5;
    const o21 = {
        "h": "number",
        "b": a4,
        __proto__: "expm1",
        [-1]: "number",
        ..."expm1",
        ...a5,
        ["expm1"](a8, a9) {
            const v10 = super.g;
            try {
                super.push(v10, "number");
            } catch(e12) {
            }
            try {
                this.fuck(a5, a8);
            } catch(e14) {
                const v17 = new Int8Array(5);
                const v19 = new Int16Array(v17);
                v19.indexOf();
            }
            return a9;
        },
    };
    return o21;
}
const v22 = f3("1073741823", "1073741823");
v22[1];
const v24 = f3("1073741823", "number");
const v25 = f3("1073741823", "expm1");
function F26(a28, a29, a30) {
    if (!new.target) { throw 'must be called with new'; }
    a28[2];
    a29[1] = a29;
    let v32;
    try { v32 = a30.strike(); } catch (e) {}
    try { v32.strike(); } catch (e) {}
    try {
        this.h = "1073741823";
        class C34 {
        }
        class C35 extends C34 {
        }
        const v36 = new C35();
        const v37 = v36?.constructor;
        try { new v37(); } catch (e) {}
        const v41 = new Uint8Array(a29);
        v41.BYTES_PER_ELEMENT = v41;
        let v42;
        try { v42 = a29(a29, v32, v36); } catch (e) {}
        const o46 = {
            ...v41,
            n(a44, a45) {
                return v42;
            },
        };
    } catch(e47) {
        function f48() {
            const v51 = Array();
            v51[0] = f48;
            return v51.unshift(3);
        }
        f48();
    }
    try {
        this.g = a30;
    } catch(e54) {
    }
    try {
        this.d = v22;
        ("c").toUpperCase();
        const o57 = {
        };
        o57.h = o57;
        class C60 {
            static ["22307"] = "AanB8";
            b;
        }
    } catch(e61) {
    }
}
const v62 = new F26(v24, v22, "expm1");
v62.d;
v62.h = v62;
const v64 = new F26(v62, v22, "expm1");
v64.length = v64;
const v65 = new F26(v64, v22, "expm1");
const v66 = v65.h;
v66[0];
const v70 = new Float32Array(257);
let v71 = v70[61];
v71--;
Int16Array.length = "number";
const t94 = "1073741823";
const v75 = new t94(127);
try { v75.some(v70); } catch (e) {}
210 <= 210;
const v79 = 210 >>> 210;
v79 * v79;
try { new BigUint64Array(v66, v25, v66); } catch (e) {}
new BigUint64Array(210);
const v86 = 3409 - 3409;
v86 >>> v86;
const v89 = new Uint8Array(4096);
let v90;
try { v90 = v89.lastIndexOf(v64); } catch (e) {}
v89.includes(v90);
const v92 = [-768400.1657361139];
class C93 {
}
const v94 = new C93();
const v95 = v24?.constructor;
try { new v95(); } catch (e) {}
function F97(a99, a100, a101) {
    if (!new.target) { throw 'must be called with new'; }
    const v102 = this.constructor;
    try { new v102(a100, a101); } catch (e) {}
    -a99;
    a101 | a101;
    try {
        this.e = v94;
    } catch(e106) {
        a101 - v92;
    }
}
const v110 = new Uint16Array(96);
new Float64Array(v110);
try { new F97(v92, v94, 3409); } catch (e) {}
