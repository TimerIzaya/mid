new Float64Array(216);
class C6 {
    #o(a8) {
    }
}
class C9 {
    set e(a11) {
        let v10 = this;
        function f13(a14) {
            return 1000.0;
        }
        for (let v17 = 0; v17 < 10; v17++) {
            const t12 = "f";
            t12[1073741824] = 4294967296;
        }
        Math.expm1(-4.0);
        v10++ ^ v10;
    }
    #d = 0.2667789708327448;
    static #g = 83858348;
    static d;
    #n(a26, a27, a28, a29) {
        function f30() {
        }
    }
    #valueOf(a32, a33, a34, a35) {
    }
    #b;
}
new C9();
new C9();
const v38 = new C9();
const v40 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v41 = [601759695];
const v42 = [1073741824,1073741823,1376142744,1073741825];
function f44(a45, a46, a47, a48) {
    function f50() {
        const o57 = {
            "e": -4294967295,
            ...v40,
            ..."Vre",
            "c": v42,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a55, a56) {
                return "-1073741824";
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            5: -4294967295,
            6: -268435456,
        };
    }
    f50();
    %OptimizeFunctionOnNextCall(f50);
    let v60;
    try { v60 = v42["find"](..."find", a48, ...v41, ...v42, ...522675525n); } catch (e) {}
    v60 <= a47;
    return arguments;
}
function f69(a70, a71) {
    const o77 = {
        toString(a73, a74, a75) {
            try {
                a73.f = 536870888n;
            } catch(e76) {
            }
            return 536870888n;
        },
    };
    return o77;
}
const v78 = f69();
v78 == !f69(536870888n, v78);
const v84 = new Uint8ClampedArray(104);
v84.toLocaleString();
new v38();
