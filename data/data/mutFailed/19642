class C3 {
    h;
    static p(a5, a6) {
        const v8 = Symbol.isConcatSpreadable;
        const t4 = "2115972667";
        t4[v8] = -4.0;
        v8 - v8;
        super.h = a6;
        try { a6(this, 0.0, "2115972667", this); } catch (e) {}
        function F11(a13, a14) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.c = a13;
            } catch(e15) {
            }
            try {
                this.b = a5;
            } catch(e16) {
            }
        }
        new F11(a6, v8);
        new F11(-4.0, this);
        new F11(-4.0, "2115972667");
        return "2115972667";
    }
}
function f20(a21, a22) {
    f = a21;
    function F23(a25, a26) {
        if (!new.target) { throw 'must be called with new'; }
        this.b = "2115972667";
        this.d = a26;
    }
    const v27 = new F23();
    const v28 = new F23(v27, v27);
    const o29 = {
        ...v28,
        __proto__: v27,
    };
    for (const v30 in o29) {
    }
    return a21;
}
C3.toString = f20;
const v31 = new C3();
const v32 = new C3();
new C3();
function f34() {
    return -4.0;
}
class C38 extends f34 {
    constructor(a40, a41, a42, a43) {
        Object.defineProperty(a41, "toString", { writable: true, value: f20 });
        super();
        Math.random();
        ++a42;
        Math.atanh(1e-15);
        try { ("2115972667").concat(a40, 0.0, a41, a43); } catch (e) {}
    }
    [-1000000000000.0] = 0.0;
    g;
    [f34] = f34;
    #e = v32;
}
new C38(1000000000.0, -4.0, -4.0, -1000000000000.0);
const v53 = new C38(-1000000000000.0, C3, 0.0, 0.0, -1000000000000.0, v31, v32);
v53.toString = f34;
new C38(0.0, v53, -1000000000000.0, -1000000000000.0);
for (let v58 = 0; v58 < 5; v58++) {
    v58 < v58;
    v58++;
}
for (let v61 = 0; v61 < 10; v61++) {
    const o73 = {
        m(a65) {
            let v66 = -9007199254740991;
            v66++;
            v66 >> v66;
            const v71 = new Int8Array();
            let v72 = 3;
            for (let i = 0; i < 5; i++) {
                [...v72] = v71;
            }
            return v66;
        },
    };
    o73.m(o73);
}
