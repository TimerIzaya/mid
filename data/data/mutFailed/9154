let v1 = 2146202321;
const v3 = [172035.90175285982,3.0,2.0,1.7976931348623157e+308,2.220446049250313e-16,-1.0,-342.9341807311972,-9.964711044291892,-1.0];
function f4(a5) {
    let v6;
    try { v6 = a5.getMinutes(a5, a5, a5); } catch (e) {}
    return v6 || -8;
}
v3[Symbol.toPrimitive] = f4;
const v10 = [-1000000.0,-1.0,-7.70802581086008e+307,-1000.0,-926601.2340512759,2.220446049250313e-16,313445.0620252618,NaN,5.669044196442124e+306];
try { v10.find(-8); } catch (e) {}
const v12 = [214.83550679176255,1000000000000.0,0.0,2.220446049250313e-16,2.0,-365.49861490240426,989966.3226702102,808.9791995382498,670.3588274659703];
function F13(a15, a16, a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.constructor(a16, this, -8, a16); } catch (e) {}
    a15[2] = a15;
    try { a17.with(a17, a17); } catch (e) {}
    try { a18.toSpliced(v1, v1); } catch (e) {}
    try {
        this.f = v12;
    } catch(e22) {
    }
    try {
        this.c = v10;
    } catch(e23) {
    }
    try {
        this.e = a16;
    } catch(e24) {
    }
}
new F13(v12, v10, v3, v10);
new F13(v10, v3, v10, v10);
new F13(v10, v10, v10, v3);
const v28 = [-7.101963206917832,-1.4319813069884422e+308,2.0,-2.220446049250313e-16,-841.6379509600135,-1000000000.0,-1000000000.0];
function F29(a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
}
class C33 extends F29 {
}
const v34 = [-460.307183313349,116746.1734742194,2.0,0.7612507062467385,-1.7352454748688924e+308];
v34[Symbol.toPrimitive] = f4;
function f37(a38) {
    Reflect.preventExtensions(Reflect);
    return a38;
}
v34[Symbol.toPrimitive] = f37;
function f43(a44, a45) {
    function f46(a47, a48) {
        return a47;
    }
    return a45;
}
f43.d = v28;
f43.d = f43;
const v50 = Symbol.toPrimitive;
Symbol.for(v50.description);
v34[v50] = f43;
const v54 = [618.1593022982238,-670.4331556988014,-598.8215888934105,1e-15,0.6439103075146282,996419.0616454568,-1.0,-1000000000.0,1e-15,-566.0187654378863];
function f55() {
    function f56() {
        ++v1;
        function f58() {
        }
        return -1;
    }
    return f56;
}
function f59(a60) {
    try {
        C33.a = a60;
    } catch(e61) {
    }
}
Object.defineProperty(v54, Symbol.toPrimitive, { writable: true, configurable: true, get: f55, set: f59 });
v54[Symbol.toPrimitive] = Symbol;
const v66 = [0.38491475396310426,1.7976931348623157e+308,-1e-15,924251.5567374192,NaN,1.5098751561946018e+308,-1.1124820518145282e+308,-3.0,-0.0,-467.0550866857337];
class C67 {
    valueOf(a69) {
        let v70;
        try { v70 = v66(a69, this, this, a69, this); } catch (e) {}
        try { v70(v54, v70, v70); } catch (e) {}
        return v34;
    }
    1000;
    static #d = v54;
    static [v34] = v66;
    static #a;
    [v34] = v66;
    static [v54];
    static #e = v66;
}
new C67();
[-2.220446049250313e-16,0.3294809085890621,-5.0,-1000000000000.0,-783.0907112060413,-1000.0,1000000.0];
const v74 = [-2.0];
try { v74.pop(); } catch (e) {}
function f76() {
    const v79 = new Date();
    v79.toLocaleDateString();
    new Uint16Array(3);
    try { ("8").blink(); } catch (e) {}
    const o88 = {
        ["8"](a86, a87) {
        },
    };
    o88[8];
    function f90(a91) {
        ("8")[213];
        return a91;
    }
    f90(f37);
    %OptimizeFunctionOnNextCall(f90);
    return o88;
}
%PrepareFunctionForOptimization(f76);
f76();
new Uint32Array(104);
[,];
const v100 = f76();
v100[8] = v100;
%OptimizeFunctionOnNextCall(f76);
f76()[8];
