function f0() {
    const o4 = {
        ...-256,
        ...-256,
        "e": -256,
        "c": 0.4833867783104545,
        "a": 16,
        4: -256,
        "f": -256,
        __proto__: 0.4833867783104545,
        6: f0,
        [f0]: f0,
        "f": -256,
        /*
        __proto__: 16,
        */
        [0.4833867783104545]: 16,
        "d": -256,
        ...0.4833867783104545,
        "g": 16,
        [16]: 0.4833867783104545,
    };
    return o4;
}
f0();
f0();
f0();
/[a+b|c(x)(x)(x)\1*]/guisy;
/l2/gdiy;
/Y[\11]/gdm;
new Date();
[5.0,-2.2250738585072014e-308,1.0,2.2250738585072014e-308,-Infinity,-1000.0];
[-332201.49761514727,-1.041199792777631e+308,0.11282163098460884,-6.342255168503916,3.0,1000000000.0];
[0.5389580050398903,0.04382093558298772,7.540053928383269,67.72373171621325,1.7716734987282639,0.3217713547083465,1000000.0,-1000000000000.0,-4.696772403812802e+307,-0.8608234151292891];
for (let v16 = 0; v16 < 25; v16++) {
    const v17 = [601759695];
    const v18 = [1073741824,1073741823,1376142744,1073741825];
    function f20(a21, a22, a23, a24) {
        const v27 = new Uint8ClampedArray();
        Math.acosh(v27 & -2);
        let v32;
        try { v32 = v18["find"](..."find", a24, ...v17, ...v18, ...522675525n); } catch (e) {}
        return v32;
    }
    for (let v33 = 0; v33 < 5; v33++) {
        f20();
    }
}
