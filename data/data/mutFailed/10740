class C3 {
    set b(a5) {
        a5 !== this;
        const v7 = this.__proto__;
        v7[197] /= v7;
    }
    constructor(a9, a10) {
        e = "c7";
        const t8 = "1315269206";
        t8[268435456] &= a10;
    }
    ["c7"];
    static #f = "c7";
}
new C3("c7", "c7");
new C3("c7", "b");
new C3("b", "b");
let v17 = -1024;
function F18(a20, a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
}
const v24 = new F18();
const v25 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v26 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
function F28(a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
}
class C32 {
}
const v34 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v35 = [601759695];
function f37(a38, a39, a40, a41) {
    function f42() {
        let v45 = Float64Array;
        const v47 = Array();
        function f48() {
            return f42;
        }
        function f49(a50) {
            return F28;
        }
        Object.defineProperty(v47, 0, { configurable: true, enumerable: true, get: f48, set: f49 });
        v47.unshift(v17);
        const v53 = new Set();
        function F54(a56, a57) {
            if (!new.target) { throw 'must be called with new'; }
            F54(a57, v53);
        }
        v45 = a39;
        const v59 = v25.length;
        try {
            v25.forEach(v45);
        } catch(e61) {
        }
        const v62 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        class C64 {
        }
        const v65 = new C64();
        try {
            v65.__proto__ = F28;
            const v66 = [];
            class C67 {
            }
            function* f68(a69, a70) {
                yield* v66;
                return v66;
            }
        } catch(e71) {
        }
        const v72 = Symbol.toPrimitive;
        const o78 = {
            toString(a74, a75) {
                const v76 = a41 && v45;
                a74 *= v72;
                return v76 <= v62;
            },
        };
        const o99 = {
            "c": -4294967297n,
            [522675525n](a81, a82) {
            },
            "c": v35,
            valueOf(a84, a85) {
                return F54;
            },
            [-4294967297n](a87, a88, a89, a90) {
            },
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v34,
            ...v24,
            [v72]() {
            },
            "type": C32,
            ..."Vre",
            valueOf(a93, a94) {
            },
            ..."Vre",
            4: "Vre",
            toString(a96, a97, a98) {
                return v25;
            },
            5: -4294967295,
            6: -268435456,
        };
        new Float32Array(1334);
        v17 %= -268435456;
        new Uint32Array(v26, v59, v72);
        try {
            new Float64Array(127);
        } catch(e107) {
        }
        new Float64Array(3);
        new Uint16Array(2);
    }
    const v114 = f42();
    %OptimizeFunctionOnNextCall(f42);
    return v114;
}
for (let v115 = 0; v115 < 5; v115++) {
    f37();
}
[753530.6018386413,862628.7603060333,3.2923038706169265];
[-3.0,-199687.9376179413,-1e-15,-1.0,-Infinity,-Infinity,-3681.6743838381954,-796.525852816842,-1.2476320340729333e+308];
[-3.724298073764024e+307,0.3603946139410207,-3.974245384195312e+307,1000000000.0,-922578.566755982,1000000000000.0,-1000.0];
class C126 {
}
const v127 = new C126();
function f128(a129, a130) {
    const o133 = {
        "h": v127,
        [a130]: v127,
        set h(a132) {
        },
    };
    return f128;
}
%PrepareFunctionForOptimization(f128);
const v134 = f128();
%OptimizeFunctionOnNextCall(f128);
f128(C126, v134);
