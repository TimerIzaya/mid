class C3 {
    static p(a5) {
        const t2 = super.g;
        delete t2?.[205];
        typeof 1024n === "boolean";
        return 9007199254740991n;
    }
    static 1166;
    e;
    static g;
}
let v14;
try { v14 = C3.toString(); } catch (e) {}
const v15 = new C3();
const v16 = new C3();
function f17() {
    new Int32Array([0.40942238360349337,9.405201967735488e+306,-914.634335773701,5.134124740041841,-1.0,1000000000000.0,-5.0,-298.5783868000192,1000000.0], Int32Array, Int32Array);
    return v14;
}
v16.constructor = f17;
const v21 = new C3();
function F22(a24, a25, a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(a25, "constructor", { writable: true, configurable: true, value: f17 });
    const v28 = this?.propertyIsEnumerable;
    try { new v28(F22); } catch (e) {}
    const v30 = a25?.constructor;
    v30[Symbol.toPrimitive] = f17;
    try { new v30(); } catch (e) {}
    a27.e;
    try {
        this.f = a25;
    } catch(e35) {
    }
    try {
        this.c = C3;
    } catch(e36) {
    }
}
const v37 = new F22(-18594, v21, v16, v16);
const v38 = new F22(v37, v16, v21, v15);
function f39(a40) {
    new Int8Array();
    return Int8Array;
}
v38[Symbol.toPrimitive] = f39;
v38.e = v38;
const v45 = new F22(v16, v16, v16, v16);
v45.toString = f39;
v45.f;
function f47(a48, a49, a50, a51) {
    a49.c = F22;
    a50.h = C3;
    const v52 = a48?.c;
    v52.toString = Symbol;
    try { new v52(); } catch (e) {}
    a50.h = a50;
    const o69 = {
        536870888: a49,
        [a50]: a50,
        [a49](a55, a56) {
            const v60 = v15.e;
            const o61 = {
            };
            try {
                o61.f = v60;
            } catch(e62) {
            }
            try {
                const o63 = {
                };
                o63.f = v60;
                o63.d = v45;
            } catch(e64) {
            }
            try {
                const o65 = {
                };
                o65.f = v60;
                o65.d = v45;
                o65.e = v60;
            } catch(e66) {
            }
            try {
                const o67 = {
                };
                o67.f = v60;
                o67.d = v45;
                o67.g = 0;
            } catch(e68) {
            }
            return a48;
        },
    };
    return o69;
}
const v70 = f47(v45, v45, v37, f47);
v70[536870888] = v70;
const v71 = f47(v38, C3, v37, v37);
v71.toString = Symbol;
const v72 = f47(v71, v71, v38, v71);
const v73 = [0,1593815803];
[16,536870889,-536870912,-2,-30389,604649447,-65537];
let v75 = 9223372036854775807;
9007199254740992 >>> 9007199254740992;
let v79 = Array;
function f80(a81) {
    const v84 = new Float64Array(3045);
    v84["toReversed"](1.0, ...v84, ..."toReversed");
    return 65536;
}
v79.toString = f80;
let v88 = 1049;
v88++;
const v90 = v79(v88);
try { v90.reduce(v72); } catch (e) {}
class C92 extends v79 {
    n(a94, a95) {
    }
    static #a = 65536;
    #d;
    static [v90] = v73;
}
C92.prototype;
v75 = 65536;
++v79;
const v99 = new C92();
const v100 = new C92();
Object.defineProperty(v100, Symbol.isConcatSpreadable, { configurable: true, value: v99 });
try { v100.concat(v15); } catch (e) {}
1000000000.0 - 1000000000.0;
const v108 = v73;
[-2.575460385290415e+307,0.8947674897012107,3.791183925828106,1000000000000.0,431.3443950365104,-1.5895387754722096e+308,0.6612248920706111,2.2250738585072014e-308,-0.0];
const v110 = [-9.578589124662172e+307,0.5803164764357316,1e-15];
v110.valueOf = Symbol;
1000000000.0 * v110;
