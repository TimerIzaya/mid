new WeakSet();
const v2 = [-57501,-4704,1325624801];
const v3 = [-2,-2,512,-1917507103,-128,61915,8,257];
const v4 = v3?.group;
try { new v4(WeakSet); } catch (e) {}
const v6 = [10,10000,7205,9007199254740991,257,29106,-1024,-1,2147483648,53229];
function f7() {
    return v3;
}
function f8() {
    return f7;
}
function f9(a10) {
    const v13 = new BigInt64Array(4046);
    function f14(a15, a16) {
        a15++;
        const v18 = [];
        function F19(a21) {
            if (!new.target) { throw 'must be called with new'; }
        }
        class C22 extends F19 {
        }
        const v23 = new C22();
        const v24 = v23.constructor;
        const o25 = {
        };
        v18.length = 65535;
        for (const v27 in o25) {
        }
        let o28 = {
        };
        [,...o28] = v13;
        return v24;
    }
}
Object.defineProperty(f7, Symbol.toPrimitive, { writable: true, configurable: true, get: f8, set: f9 });
try { f7(); } catch (e) {}
function F32(a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
    this.e = v6;
    a35[4];
    try {
        this.e = f7;
    } catch(e38) {
    }
}
F32.caller = F32;
const v39 = new F32(v2, v6, F32);
const v40 = new F32(v2, v2, v39);
v40.toString = f7;
try { v40.toLocaleString(); } catch (e) {}
new F32(v2, v6, v39);
/xyz{0,1}?/gvimsy;
const v44 = /(?:ab)kX(?<a>(?<b>(?<c>(?<d>.).).).)/gvdy;
v44.a = v44;
/A(x)(x)(x)\3*/gvdisy;
let v47 = -2147483647n;
v47--;
%VerifyType(544948.2768085275);
const v54 = ("we3R")["padEnd"](f7, "padEnd")?.toLocaleUpperCase;
try { new v54(); } catch (e) {}
new Int32Array(1);
new Int8Array(127);
let v62 = 1024;
v62++;
new Uint8Array(v62);
const t66 = "we3R";
t66[544948.2768085275] = -1.187102817546368e+308;
-9223372036854775808n & v47;
