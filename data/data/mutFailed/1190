new Uint8Array(2);
const v5 = new Uint16Array(6);
let v8;
try { v8 = new Int8Array(10, 10, v5); } catch (e) {}
const v9 = new Int8Array(10);
let v11;
try { v11 = new Map(); } catch (e) {}
const v12 = new Map();
const v15 = new Uint8ClampedArray(6);
function f16(a17, a18) {
    const o21 = {
        "type": "function",
    };
    function f22() {
        return o21;
    }
    const o24 = {
        "type": "function",
    };
    new Worker(f22, o24);
    return a17;
}
v15.constructor = f16;
Int16Array.d = 6;
Int16Array.d = Int16Array;
const v28 = new Int16Array(5);
const v29 = Uint8Array | Uint16Array;
try { v28.findLast(v8); } catch (e) {}
try { v15.slice(v29); } catch (e) {}
delete v28?.byteLength;
v9[Uint8Array];
Int16Array.length;
new Int16Array(3969);
-9223372036854775807 / -9223372036854775807;
let v42 = 4294967296;
v42--;
function f44(a45, a46) {
    a45 < a45;
    const o48 = {
        "d": a46,
        "c": -5,
    };
    function f49(a50) {
        a50 = v12;
        class C53 {
            static ["22307"] = "AanB8";
            b;
        }
        return v11;
    }
    o48.toString = f49;
    return o48;
}
const v54 = f44(4294967297, v42);
const v56 = f44(v54, f44)?.__lookupSetter__;
try { new v56(Uint8Array); } catch (e) {}
v54.c = -9223372036854775807;
