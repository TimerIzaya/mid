const v0 = [-394212488,10000,1,4294967295,3,-9];
v0.g = v0 <= 0.7221600461335677;
v0.b = 1073741825;
[25832,-1,10,-1,232751384,40484];
const v6 = [-2,2147483649,42706635,-31658];
let v7 = -1024;
v7++;
-1969237648 * -1969237648;
new Map();
[];
const o19 = {
    ..."raw",
};
function f20() {
    return f20;
}
function f22() {
    Object.defineProperty(arguments, 13, { enumerable: true, set: f20 });
    return o19;
}
const v26 = new BigUint64Array(v6);
try { v26.join(v7); } catch (e) {}
new Uint8ClampedArray(127);
for (const v31 in 0.7221600461335677) {
    try { v31.blink(); } catch (e) {}
    try { (55165).filter(); } catch (e) {}
}
