new BigInt64Array(6);
64 | 64;
let v6 = 1;
Math.hypot(v6);
const v9 = Math.pow(v6, 995.6721021057779);
v9 + v9;
v6--;
const v13 = new Uint16Array(64);
let v14;
try { v14 = v13.filter(BigInt64Array); } catch (e) {}
v14.e = Uint8Array;
new Uint8Array(9);
654915120 !== 654915120;
for (let v25 = 0; v25 < 5; v25++) {
    function f26() {
        let v28 = ("Vre").codePointAt(v25);
        v28--;
        -(v28 ^ v28--);
        return BigInt64Array;
    }
    v14();
    %OptimizeFunctionOnNextCall(f26);
}
