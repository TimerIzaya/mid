[-65537];
[8];
[4,-7848,7];
[-Infinity,0.47935396828240273,0.5142376497307811,-1000000.0,-Infinity,-1e-15,-1.7869653603987052e+307];
const v4 = [-1000.0,1000.0,639.1557906138667,-0.0,770.9799282804793,-1000000000000.0,NaN,139180.43813095125,Infinity,1000000000.0];
[-305294.2157676468,-5.0,-1.2174449990080163,5.895722697344963,-729.5353537328888];
new Uint8Array(512);
new Float32Array(8);
const t8 = 512;
new t8(3614);
const v16 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v17 = [601759695];
const v18 = [1073741824,1073741823,1376142744,1073741825];
function f20(a21, a22, a23, a24) {
    function f26() {
        const o33 = {
            "e": Float32Array,
            ...v16,
            ..."Vre",
            "c": a24,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a31, a32) {
                return v18;
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            5: -4294967295,
            6: -268435456,
        };
    }
    a22();
    %OptimizeFunctionOnNextCall(arguments);
    let v36;
    try { v36 = v18["find"](..."find", a24, ...v17, ...v18, ...522675525n); } catch (e) {}
    v36 <= a23;
    return 8;
}
f20(v4, v18, "-1073741824", 522675525n);
for (let v39 = 0; v39 < 10; v39++) {
    f20();
}
%OptimizeFunctionOnNextCall(f20);
f20(v16, 522675525n, v18, v18);
