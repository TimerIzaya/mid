function f1() {
    return undefined;
}
function f2(a3, a4) {
    const v5 = delete a4?.a;
    Uint8ClampedArray.prototype;
    return v5;
}
const v9 = Symbol.toPrimitive;
f1[v9] = f2;
const v11 = /[\cA]/gud;
/[a*b|c?]/u;
/Qa\b!/gmy;
const v14 = v9 < f2;
try {
    Symbol.c = v14;
} catch(e15) {
}
class C18 extends f1 {
    static {
        this[Symbol.toPrimitive] = f1;
        this[3] = this;
        const v23 = super[undefined];
        v11[v23] = undefined;
        Object.defineProperty(v23, v23, { get: Symbol });
        Symbol["keyFor"](..."keyFor", v11, Symbol, ..."keyFor", ..."keyFor");
        this[Symbol.toPrimitive] = -2;
        Object.defineProperty(this, "d", { configurable: true, get: f1 });
    }
    #g;
    c;
    [undefined] = 4096;
    static c;
    f = -2;
}
new C18();
new C18();
new C18();
[2147483649,1883,-26599,-9007199254740992,1556655572,15,4096,-1,65535,7];
[-7,899780330,49430,2147483648,-1,-4294967295,16];
[-1566774738];
-256n >> -256n;
