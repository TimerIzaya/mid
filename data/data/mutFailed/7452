class C3 {
    static 10;
    static f = -58962;
    static h;
    #h = 1000000.0;
    [1000000.0] = -58962;
    static {
        SharedArrayBuffer.construct(this, [], this);
    }
    static b;
    [-58962];
}
new C3();
new C3();
new C3();
[256,-536870912,-25515,536870912,-23176];
[2147483648];
[2,1807425731];
const v17 = /(l{z})/s;
function F18(a20) {
    if (!new.target) { throw 'must be called with new'; }
    const v21 = this.constructor;
    try { new v21(v17); } catch (e) {}
    a20.b = a20;
}
new F18(v17);
new F18(v17);
function f25(a26, a27) {
    class C28 {
        constructor(a30, a31) {
            const o33 = {
            };
            gc(o33);
        }
    }
    for (let v35 = 0; v35 < 50; v35++) {
        new C28();
    }
    return a26;
}
new Promise(f25);
