class C3 {
    constructor(a5) {
        !1503488172;
        const v9 = -a5;
        (a5 ^ a5) << v9;
    }
    static 2147483647;
    [-1.7976931348623157e+308];
    static [-1.7976931348623157e+308];
    static #d;
}
const v12 = new C3("endsWith");
const v13 = new C3(-1.7976931348623157e+308);
new Date();
function F16(a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    const v20 = this.constructor;
    try { new v20(); } catch (e) {}
    -a18;
}
class C23 extends F16 {
    3120 = F16;
}
const v24 = new C3(6.97852158974999e+307);
function f28(a29, a30, a31) {
    const o37 = {
        "f": a30,
        ...C3,
        [a30]: a31,
        "a": v12,
        o(a33) {
            return a33;
        },
        p(a35, a36) {
        },
        [v13]: -6,
        "c": v13,
        "d": v24,
        __proto__: C3,
        "e": a29,
        "g": a30,
        [a29]: 6.97852158974999e+307,
        "b": -1.7976931348623157e+308,
    };
    return o37;
}
f28(f28("endsWith", v24, v24), C3, f28(v13, v12, C3));
new Uint8Array();
for (let v43 = 0; v43 < 5; v43++) {
    function f44() {
        const v46 = Symbol.for();
        const o47 = {
            [v46]: f44,
        };
        return f44;
    }
    f44();
    %OptimizeFunctionOnNextCall(f44);
}
class C50 {
}
const v51 = new C50();
const v54 = v51 >>> 268435440;
Math.expm1();
1 + 1;
new BigInt64Array(v54);
class C60 {
}
const v64 = new BigUint64Array(10);
for (const v66 in v64) {
    let v67 = 10;
    for ((() => {
            const o68 = {
            };
            new BigUint64Array(4096);
        })();
        (() => {
            const v72 = v67--;
            function f75(a76) {
                const o79 = {
                    "g": 1000000000.0,
                    set a(a78) {
                        a78.h = this;
                    },
                    "h": a76,
                    "d": 1000000000.0,
                    "b": -1.1013479045636231e+308,
                    2: a76,
                };
                return o79;
            }
            class C80 {
                #n(a82, a83, a84, a85) {
                    super[this] = this;
                    super[f75].o();
                }
                constructor(a90, a91) {
                    const o95 = {
                        "type": "minor",
                    };
                    gc(o95);
                }
            }
            new C80();
            v72 - v72;
            return v72;
        })();
        ) {
    }
    new Float64Array(2147483647);
}
function f100() {
}
class C101 extends v24 {
}
new C101();
