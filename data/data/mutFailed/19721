function f0() {
    const t1 = "21SR";
    t1[1] = "21SR";
    const o6 = {
        "d": "21SR",
        ..."21SR",
        [f0]: -226803.52098922268,
        get h() {
            try {
                const t9 = "21SR";
                t9.length = -471681061;
            } catch(e5) {
            }
            return "21SR";
        },
    };
    return o6;
}
const v7 = f0();
f0();
const v9 = f0();
class C10 {
    static #m(a12) {
        f0[2] = v7;
        return f0;
    }
    static 8;
    toString(a14, a15) {
        v9[a15] **= this;
        this[268435456];
        return a14;
    }
}
C10.prototype = C10;
new C10();
new C10();
new C10();
new Date();
function f23() {
    352326470 - 352326470;
    let v28 = -65535;
    const v29 = v28 ^ v28;
    const v30 = v28 / v28;
    const o90 = {
        next() {
            v28--;
        },
        ...352326470,
        m(a34) {
            try { a34.next(); } catch (e) {}
            a34.c = a34;
            a34.h = a34;
            const o36 = {
            };
            o36.f = o36;
            o36.h = o36;
            function f37(a38, a39, a40) {
            }
            f37.caller = f37;
            try {
                o36.e = v28;
            } catch(e41) {
                const v45 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v45, o36);
            }
            const o47 = {
            };
            o47.e = 1261703539;
            try { Math.random(); } catch (e) {}
            let v50;
            try { v50 = Math.expm1(128); } catch (e) {}
            v50 & v50;
            const v53 = -9007199254740991 >> -9007199254740991;
            const v54 = v53 - v53;
            v54 >>> v54;
            Math.sin(-9007199254740991);
            try { ("EV").link(v30); } catch (e) {}
            0 != 0;
            class C61 {
                o(a63, a64, a65, a66) {
                    class C67 {
                    }
                }
            }
            C61.name = C61;
            const v68 = new C61();
            3938 * 3938;
            const v72 = new Int8Array(3938);
            try { v72.join(C61); } catch (e) {}
            let v74 = 3;
            const v75 = v74++;
            const v76 = v75 + v75;
            v76 - v76;
            let v78 = 0;
            v78 === v78;
            const v80 = v78 >> v78;
            const v81 = v80 - v80;
            v81 < v81;
            for (let i = 0; i < 5; i++) {
                v78 < 8;
                [...v74] = v29;
                const v85 = v78++;
                v85 % v85;
            }
            const o87 = {
            };
            o87.h = o87;
            o87.c = o87;
            o87.e = 1261703539;
            o87.g = a34;
            try {
                const o88 = {
                };
                o88.c = o88;
                o88.g = a34;
                v68.h = 352326470;
            } catch(e89) {
            }
            return this;
        },
    };
    let v91;
    try { v91 = o90.m(o90); } catch (e) {}
    v91.b = v91;
    class C93 {
    }
    try { new C93(); } catch (e) {}
    const v95 = new C93();
    const v96 = v95?.constructor;
    try { new v96(); } catch (e) {}
    const v99 = new Float32Array(v95, "nt", Float32Array);
    const t131 = "nt";
    const v100 = delete t131[v99];
    let v101;
    try { v101 = v95.floor(v100); } catch (e) {}
    for (const v102 in v101) {
    }
}
f23.length = f23;
f23();
f23();
f23();
function f106(a107, a108, a109, a110) {
}
f106.caller;
function f112(a113, a114) {
    const o117 = {
        set b(a116) {
        },
    };
}
function F118(a120, a121, a122) {
    if (!new.target) { throw 'must be called with new'; }
}
try {
} catch(e123) {
}
