class C3 {
    ["-268435456"];
    0;
    constructor(a5, a6) {
        Object.defineProperty(a6, a6, { enumerable: true, value: -1.3957419244235538 });
        try { new a6(-1.3957419244235538, this, ..."-268435456", -1.3957419244235538, a5); } catch (e) {}
        super.f = a6;
        a5 ||= 10000;
    }
    n(a9, a10) {
        let {"length":v11,} = "-268435456";
        [a10];
        super[h] = this ** v11;
        try {
            a9.__proto__ = this;
        } catch(e15) {
        }
        return a10;
    }
}
const v16 = new C3("-268435456", C3);
const v17 = new C3(v16, -1.3957419244235538);
const v18 = new C3(-1.3957419244235538, C3);
function F19(a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = a21;
    } catch(e24) {
    }
}
new F19(v16, v17, -1.3957419244235538);
const v26 = new F19(v18, v16, C3);
new F19(v26, v26, C3);
const v34 = [];
function F35() {
    if (!new.target) { throw 'must be called with new'; }
    const v37 = this.constructor;
    try { new v37(); } catch (e) {}
    try {
        v26.d = v34;
    } catch(e39) {
        const v41 = new Set();
        v41[v41];
        function f43(a44) {
            return f43;
        }
    }
}
new F35();
new F35();
