function f0() {
}
const v1 = [f0];
[v1,v1];
const v3 = [f0];
class C6 extends f0 {
    #b;
    #e;
}
new C6();
const v8 = new C6();
new C6();
const v10 = new Int16Array(2);
new Uint8ClampedArray(162);
const v16 = new Int32Array(3441);
function F17(a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    const v21 = this.constructor;
    let v22 = -6n;
    const v23 = v22--;
    const o31 = {
        [v23](a25, a26, a27, a28) {
            eval(v8);
        },
    };
    try { new v21(); } catch (e) {}
    Math.acosh();
    v3[129];
    v10[C6[2]] = v10;
    Math.asinh(~a19);
    ~-12;
    -12 >> this;
}
new F17(F17, F17);
function F45(a47, a48, a49) {
    if (!new.target) { throw 'must be called with new'; }
    return arguments;
}
new Int16Array(Int16Array);
new F17();
for (const v54 of v16) {
    v3[v54] = 3441;
    v16[v54] = Symbol.iterator;
}
