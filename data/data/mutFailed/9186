const v3 = [3.3260889228666723,-3.0,2.6799670580890673,-7.864904233713634e+307];
v3[1] = v3;
const v4 = [-576.2374837362427,-0.11904838829139841,-2.220446049250313e-16,-3.0,-7.390443754016368e+307,5.0];
const v5 = [1000000000.0,5.0,1000000000.0,-1.0,-195466.27982473024,-0.0];
function f6() {
    const o7 = {
        ...v5,
        "c": v5,
        "e": v5,
        "f": v5,
        "arguments": v5,
        __proto__: f6,
    };
    v5.e = o7;
    65537 == 4096n;
    const v13 = new Int32Array(1024);
    for (const v14 of v13) {
        const o17 = {
            "maxByteLength": 1293466293,
        };
        new SharedArrayBuffer(1796, o17);
    }
    return v5;
}
2147483647n % 2147483647n;
function F24(a26, a27, a28, a29) {
    if (!new.target) { throw 'must be called with new'; }
    const v31 = 9007199254740991n * 9007199254740991n;
    v31 * v31;
    const v35 = new BigUint64Array(255);
    const v36 = v35.buffer;
    const o37 = {
        __proto__: v5,
        "b": v5,
        ...v5,
    };
    v36.slice();
    o37 >> 10000n;
    v35.__proto__;
    new Int32Array(1840);
    new BigInt64Array(404);
    new Uint8Array(2);
    try { a27.fill(v5); } catch (e) {}
    a28[0] = a28;
    try {
        this.e = a29;
    } catch(e51) {
    }
    try {
        this.h = a27;
    } catch(e52) {
    }
    for (const v54 in [-14339,735253629,4294967296,3,268435456,3,57019,268435439]) {
        ("-2").normalize("NFKC");
    }
}
function F58(a60, a61) {
    if (!new.target) { throw 'must be called with new'; }
}
function f62() {
    const v64 = -v3 && v3;
    -v64;
    return v64;
}
const v66 = new F24(2147483647n, v5, v4, 10000n);
new Uint32Array(v3, v3, Uint32Array);
function F69(a71, a72) {
    if (!new.target) { throw 'must be called with new'; }
    let v73;
    try { v73 = this.propertyIsEnumerable(v3); } catch (e) {}
    v73[2];
    const v76 = this.valueOf().constructor;
    try { new v76(a71); } catch (e) {}
    a71.lastIndexOf();
}
new F24(v66, v3, v4, 0n);
new F24(v66, v3, v4, 0n);
Math.c = Math;
const v86 = Math.pow(-15 >> 8798, -3.0);
v86 !== v86;
