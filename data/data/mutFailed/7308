const v0 = [-9007199254740992,-65537,841855796,1000,-2];
const v1 = [1000,536870912,-175232322];
const v2 = [-56695,9007199254740990,-9007199254740991,-4294967297];
class C6 {
    constructor(a8, a9, a10, a11) {
        let v7 = this;
        v7[2] %= "toLowerCase";
        const v12 = super[v2];
        v7 = v1;
        ([v2,...v0,...a9,v12]).__proto__;
    }
    static {
        function f16() {
            for (let i18 = 0; i18 < 2; i18++) {
                i18 - i18;
            }
            return this;
        }
        this[268435441];
        let [] = "number";
        super["o"];
    }
}
const v27 = new C6(v2, "toLowerCase", "number", v0);
const v28 = new C6(v1, v27, v27, v1);
let v29 = new C6(v27, v27, "o", v1);
class C30 extends C6 {
    ["toLowerCase"];
    set f(a32) {
        const v33 = v28 % v28;
        ("toLowerCase")[this];
        v28[v33] = "o";
        %VerifyType(v29);
        +"number";
        --v29;
    }
    [v2] = C6;
    82 = "toLowerCase";
    1;
    static 1079;
    2884466588;
    static ["toLowerCase"];
}
new C30();
new C30();
const v39 = new C30();
try {
    v39.fuck("toLowerCase", /(?<!a)/uim);
} catch(e42) {
}
[-4294967295,7,128,-5,-2,3,3,2,3,663869830];
[268435440,-11,268435441,-2147483648];
[416700078,3507,536870887,10];
for (let v46 = 0; v46 < 5; v46++) {
    const o50 = {
        "execution": "async",
        "type": "minor",
    };
    gc(o50);
}
function F52(a54, a55, a56) {
    if (!new.target) { throw 'must be called with new'; }
    function f57(a58) {
        return this;
    }
    class C59 extends f57 {
        static [C30] = this;
        #e = a54;
    }
    Reflect.construct(Int8Array, [1126838905]);
}
new F52(F52, F52, F52);
