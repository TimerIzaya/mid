[-2.318856509310776,1000000.0,-859.7730879144092,3.0,-2.7408310461990233,470.76130840509336,-2.220446049250313e-16,-1.5215946190044325e+308,143.6916542648064];
[-1e-15,-1.0,-4.0,-991865.2983276796,-617.3986385522547];
const v2 = [4.379808458162458,-5.163125463957668,-0.0,Infinity,3.174887704852896];
new Float64Array(8);
new Uint8Array(3);
const v11 = new Int32Array(2598);
[Uint8Array,Uint8Array];
[Float64Array,Uint8Array,Int32Array];
[Uint8Array];
const v18 = [1613217357,204598905,15977,1122227661,64,-2,-12,536870888];
const v19 = [12,-256,-4096,2,7,8,21956,46111,11,10];
v19[4] = v19;
const v20 = [-1073741824,1665564361,16526,1805211777,10,-9007199254740990,4,-17063,-1];
const v21 = [-2.2250738585072014e-308,0.8014728140665155,1.4073101706157717e+308,1.4751052216559766e+308,2.0,-692.9604671107461,-2.220446049250313e-16,2.0];
const v22 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
const v23 = [-1.015259194643325e+308,-Infinity,-9.825391401141273,-2.2250738585072014e-308,5.0,-2.2250738585072014e-308];
class C24 {
    constructor(a26, a27, a28, a29) {
        const v30 = this?.constructor;
        try { new v30(v22, a28, a28, v18); } catch (e) {}
        a27 >>> a27;
        -0.0 >>> -0.0;
    }
    /*
    constructor(a38, a39, a40, a41) {
        const o47 = {
            "maxByteLength": 2240,
        };
        const v49 = new ArrayBuffer(2240, a39);
        new Uint8ClampedArray(v49);
        this[268435456];
        v21 && this;
        try {
            v21.length = v23;
        } catch(e54) {
        }
    }
    */
    static 268435439 = v20;
    valueOf(a56, a57, a58, a59) {
        a58.setMilliseconds();
    }
    static #n(a62, a63, a64) {
        const v65 = -2.2250738585072014e-308 == v21;
        if (v65) {
            super.at(a62);
        } else {
            new BigUint64Array(11);
            new Int16Array(1);
            new Uint16Array(1758);
        }
        return v65;
    }
    #c = -2.2250738585072014e-308;
    static 832209355 = 2.220446049250313e-16;
}
C24[832209355] = C24;
gc();
v11 >>> v11;
const v79 = [];
function f80(a81, a82, a83) {
    v79.copyWithin();
    try {
        f80(-268435456, 0.6683462416314783, [-268435456]);
    } catch(e89) {
    }
    const v90 = v2 >> -268435456;
    v90 >> v2;
    return -v90;
}
function f93(a94) {
    const o120 = {
        m(a97) {
            const o98 = {
            };
            class C99 {
            }
            const v100 = [9007199254740990,12,13,1073741825,-9223372036854775807,2147483649,-320466038];
            v100[2] = v100;
            try {
                const o104 = {
                    "maxByteLength": 1000,
                };
                new ArrayBuffer(10000, o104);
            } catch(e106) {
            }
            o98.e = Float64Array;
            const o107 = {
                "f": this,
            };
            Object.defineProperty(o107, "e", { configurable: true, value: o107 });
            const v110 = new Int8Array(3938);
            const v111 = [-6.672391061426152e+307];
            function f112() {
                let v113 = 8n;
                v113++;
                [v113];
                return ~v111["pop"]();
            }
            %PrepareFunctionForOptimization(f112);
            let v119 = 3;
            [...v119] = v110;
            return v110;
        },
    };
    new C24(...v20, a94, ...v22, ...v23);
    new Float64Array();
    return -2.2250738585072014e-308;
}
C24.valueOf = f93;
const v124 = new C24(v18, 659.0540372978887, v18, v18);
new BigUint64Array();
let [,v128,...v129] = [723200.4184824808,-1000.0,-523437.54204506474,-964793.6675249395];
const v130 = /8/vdiy;
try {
    b = v130;
} catch(e131) {
} finally {
}
const v132 = new C24(v124, 2.220446049250313e-16, v21, v23);
const v133 = v132?.constructor;
try { new v133(v21, 2.220446049250313e-16, 2.220446049250313e-16, v132); } catch (e) {}
new C24(v132, v132, 659.0540372978887, v18);
try {
    v19.length = C24;
} catch(e136) {
}
const v137 = new C24(v21, 2.220446049250313e-16, v20, v23);
v137.length = v137;
function f138() {
    return f138;
}
f138.arguments = f138;
function F139() {
    if (!new.target) { throw 'must be called with new'; }
    function f141() {
        return f141;
    }
    const v142 = [8.944191192251868,-1.4998894798282654e+308,4.0,-0.0,-1000000000000.0,-5.0,-2.220446049250313e-16];
    const v143 = [-5.83623517593701,-1.0,-1e-15];
    const v144 = [692.912813481568,126686.58689393173];
    function f147(a148, a149) {
        const o153 = {
            [a148](a151, a152) {
            },
        };
        return o153;
    }
    const v154 = f147(v142, 128);
    f147(v144, -3);
    const v156 = f147(v143, 128);
    /j(x)(x)(x)\2/gud;
    const o159 = {
        "type": "function",
    };
    ("n").split("n", 2147483647);
    /[\0](?:ab|cde)/vimsy;
    const v164 = /^xxx$/uisy;
    try { v154.p(); } catch (e) {}
    try { v156["n"](v164, "n", f147, "n"); } catch (e) {}
    try {
        const o170 = {
        };
    } catch(e171) {
    }
    new Uint32Array(91);
    new Int16Array(4);
    new Int16Array(127);
    const v178 = this?.__lookupGetter__;
    try { new v178(this); } catch (e) {}
}
new F139();
const v181 = new F139();
v181.b = v181;
const v182 = new F139();
function f185() {
    Proxy();
    v124.constructor;
    const v190 = new Date(659.0540372978887);
    v190.getYear();
}
try { new f185(); } catch (e) {}
const v193 = [16,1073741824];
const v194 = [f138];
v194[0] = v194;
[v193,v181];
const v196 = f138();
try { v196(); } catch (e) {}
for (let v198 = 0; v198 < 5; v198++) {
    f185();
}
try { v182.n(); } catch (e) {}
for (let v201 = 0; v201 < 5; v201++) {
}
