function f0() {
    const o19 = {
        ["-802834079"](a5, a6) {
            super.b *= f0;
            ("-802834079")[268435439];
            return 256;
        },
        __proto__: "-802834079",
        [256](a9, a10) {
            function f11(a12, a13, a14) {
                'use strict';
                let v16;
                try { v16 = a13["fromCharCode"](a10); } catch (e) {}
                try { v16(...v16, a14, ..."fromCharCode", ..."fromCharCode", ...a14); } catch (e) {}
                return a12;
            }
            f11(a10, this, f11);
            return a10;
        },
    };
    return o19;
}
f0();
f0();
const v22 = f0();
new BigUint64Array(76);
new Uint16Array(193);
new Float64Array(4);
function f35() {
    const v37 = ("-536870912").normalize;
    ("-536870912").g;
    const v41 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
    for (let v42 = 0; v42 < 5; v42++) {
        function f43() {
            try {
                v41.forEach();
            } catch(e45) {
                e45.a = e45;
            }
            const v47 = Symbol.toPrimitive;
            Symbol.for(v47.description);
            v47.description;
            Symbol.for();
            return v47;
        }
        v37();
        %OptimizeFunctionOnNextCall(f43);
    }
    new Uint16Array(209);
}
[140693.55968437064,-1.1852842353837545,1.7976931348623157e+308,0.2891882798796017,1000000.0,-405533.57654950966,-476160.9672552756,-1.2913968641498632e+308,-1.7976931348623157e+308,1000000.0];
[0.0,2.439947332797196];
const v57 = [3.554050204802966,2.0,-0.9893540922478827,835.4687088452995,1.0,-1000000000000.0,537.8799696886636,-129821.05993193889];
Object.defineProperty(v57, "valueOf", { writable: true, value: f35 });
const v59 = v57 <= v22;
v59 && v59;
36002 % 36002;
const v63 = [-1000.0,351.94489669740733,5.8623101046484845,-160881.40611645568,0.6390643538224362,9.13027568774574];
function f64(a65) {
    a65 ^ a65;
    return 36002;
}
function f67(a68, a69) {
    a69.length;
    return f64;
}
const v72 = new v22(f67);
v72[v63] += 36002;
const v75 = new BigInt64Array();
new BigUint64Array(127);
class C81 extends f35 {
}
for (const v82 in C81) {
}
new Int16Array(9223372036854775807);
let v86 = 10;
for (; v86--;) {
}
const v89 = [];
function* f90(a91, a92) {
    yield* v89;
    return BigUint64Array;
}
const v93 = new Int8Array();
try { v93.entries(); } catch (e) {}
let v96;
try { v96 = new Array(v75); } catch (e) {}
for (let v97 = 0; v97 < 10; v97++) {
    3811 >>> 3811;
    const v101 = Float64Array.of();
    const v102 = v101?.set;
    try { new v102(3811); } catch (e) {}
    v101.toString = f35;
    new Date();
    Array(36862);
    try { v96.sort(36862); } catch (e) {}
}
