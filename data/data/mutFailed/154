let v0 = [];
function f1() {
    ([Uint32Array,Uint32Array,Uint32Array,Uint32Array]).push();
    this.decodeURIComponent([-2.216170140955498,-2.2250738585072014e-308,-643865.3403199288,NaN]);
    const v9 = new Int32Array(Int32Array, Int32Array, Int32Array);
    Math.expm1(~v9);
    return Math;
}
v0.valueOf = f1;
function f13() {
    return v0;
}
class C14 {
    [v0] = f13;
    #toString(a16, a17) {
        try {
            f13();
        } catch(e19) {
        }
        return a16;
    }
    #h;
    static f = v0;
}
const v20 = new C14();
const v21 = new C14();
const v22 = new C14();
class C23 {
    constructor(a25, a26, a27, a28) {
        --v0;
        try {
            v0.valueOf = a25;
        } catch(e30) {
        }
    }
    f = v22;
    static #d = v0;
    9;
}
new C23(v22, v22, C14, v21);
new C23(v22, v20, v20, v0);
const v33 = [0.0,1000000000.0,168.7956281727238,-575464.6142395872,-1000000000.0,938.6271876998214];
const v36 = new Float64Array(64);
const v38 = [v36,v33];
const o39 = {
    "arguments": v38,
    "type": "function",
};
function F41(a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
}
let v45 = new F41();
class C46 {
    constructor(a48, a49, a50) {
        ({"c":v45,...v45} = a49);
        class C51 {
            set b(a53) {
                gc();
            }
        }
    }
}
new C23(C23, v21, v21, v22);
class C59 {
    #m(a61, a62) {
        let [v64,v65,,v66] = this;
    }
    static valueOf(a68) {
        this.#c = "function";
    }
    toString(a70) {
        new Uint8Array();
        const o74 = {
            "b": 129,
        };
        const v75 = o74.b;
        const v76 = (a77, a78, a79) => {
            var h = v75;
            return a79;
        };
        const v81 = super[this];
        for (let v83 in [-65535,536870889,4096]) {
            v83--;
            Math.log10(v83);
            v83 ** 1000000000000.0;
        }
        v81[9] = 0;
    }
}
const v89 = new C59();
const v90 = [v89,v89];
try {
    v90.length = v89;
} catch(e91) {
}
2068904912 >>> 2068904912;
function f10() {
    return 20150;
}
const v12 = true && true;
const v13 = [268435439,2];
const v14 = [255,-21514,-65537,1073741825,-4294967295,4294967297,1073741824,65535,-13,-821707999];
v14[4];
const v16 = [480169418,24652,-51918,-38132,-1,1073741824,64];
function F17(a19, a20, a21, a22) {
    if (!new.target) { throw 'must be called with new'; }
    this.a = v12;
    try { this.propertyIsEnumerable(a20); } catch (e) {}
    a20 >>> a20;
    try { a21.map(a20); } catch (e) {}
    try {
        this.a = a21;
    } catch(e26) {
    }
    try {
        this.e = v13;
    } catch(e27) {
    }
}
const v28 = new F17(v13, -62985205, v13, -261720650);
v28.a;
new F17(v13, 129, v13, 2068904912);
const v31 = /(?:a+){0,0}[x\dz]\u0034ha(?=bbb|bb)c/gsud;
v31.toString = f10;
const v32 = v31.sticky;
!v32;
Float64Array.d = true;
Float64Array.d = Float64Array;
Float64Array[0] = v31;
Object.defineProperty(Float64Array, 1, { writable: true, value: v32 });
function f35() {
}
new F17(v14, -261720650, v16, -8);
[-226.62978771750693,-6.95156271016547e+307,-2.1330291148611114,-552342.4510641485,1.0,-2.2250738585072014e-308];
-618199.1371965441 >> -618199.1371965441;
/(Q[^123])/misd;
/(?:a+){0,0}[x\dz]\u0034ha(?=bbb|bb)c/gsud;
-595211427n + -595211427n;
6n - 6n;
Float64Array[Symbol.iterator] = f10;
try { new Float64Array(Float64Array, Float64Array, f10); } catch (e) {}
38567 >>> 38567;
Float64Array[Symbol.iterator] = f10;
new Float64Array(Float64Array);
BigInt64Array.g = BigInt64Array;
BigInt64Array.constructor;
class C69 {
    constructor(a71, a72) {
        C69 = 4294967296;
    }
}
try { C69.call(512); } catch (e) {}
