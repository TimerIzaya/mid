const v3 = [489824.15306105604,1.5694810765531122e+308,-9.723978234735762,-1000000000000.0];
const v4 = [1.7976931348623157e+308,-23120.79622795561,2.4622718210750865,-1e-15,0.13544331824624456,-1.7976931348623157e+308,4.837489773603425,-1.8083533151039457e+307,-5.0];
const v5 = [0.5554829610461205,1000000000000.0,981.2879415151899,3.140430997705692e+306,5.0,0.836305200857127];
class C6 {
    set e(a8) {
        try { a8(v3, v3, 5n); } catch (e) {}
        /xyz{0,1}?/udmsy;
        /[a{0}]/vims;
        new Date(64);
        let v16 = -(-1e-15);
        v16--;
        /6(?:a?)?/gvdm;
    }
    #h = 5n;
    static toString(a20, a21) {
        const v23 = super[a21];
        try {
            delete this[v23];
            this[v5];
        } catch(e26) {
        }
    }
    static set f(a28) {
        try {
            super.reject(v4, this);
        } catch(e30) {
        }
    }
}
new C6();
const v32 = new C6();
new C6();
class C34 {
    constructor(a36, a37) {
        const v38 = this.__lookupGetter__;
        try { new v38(); } catch (e) {}
        const v41 = ~a37[2];
        function f45(a46, a47, a48, a49) {
            a46.length;
            a48++;
            const o55 = {
                n(a53, a54) {
                    return v41;
                },
            };
            return o55;
        }
        f45(v32, Uint8Array, f45);
        for (let v57 = 0; v57 < 625; v57++) {
            v57 >>> v57;
            f45(Uint8Array);
        }
    }
    #valueOf(a62, a63, a64) {
        new Int8Array(5);
        new Int32Array(10);
        new Uint8Array(257);
        return C6;
    }
    /*
    constructor(a76) {
        for (let v78 = 0; v78 < 32; v78++) {
            "p" & v78;
            for (let v81 = 0; v81 < 5; v81++) {
                function f82() {
                    return f82;
                }
            }
            const o85 = {
                "execution": "sync",
            };
            gc(o85);
        }
    }
    */
}
new C34();
const v88 = new C34();
new C34();
function f90() {
    return f90;
}
class C91 {
    constructor(a93, a94) {
        function f95(a96) {
            const v97 = [536870887,-42204,-17288903,-3,9007199254740991,7];
            const v98 = [6,268435440,13,1073741825];
            function f99(a100, a101) {
                const o102 = {
                    "c": v98,
                };
                return o102;
            }
            f99(v97, v97);
            let v104 = 0;
            v104++;
            return f95 - this;
        }
        const o109 = {
            "type": "function",
        };
        new Worker(f95, o109);
    }
}
const v112 = new Int8Array(Int8Array);
class C114 {
    constructor(a116, a117, a118, a119) {
        this[this] = a119;
    }
}
function F120(a122, a123, a124) {
    if (!new.target) { throw 'must be called with new'; }
    const v125 = this.constructor;
    try { new v125(C114, -1.0); } catch (e) {}
    const v127 = a123.constructor;
    try { new v127(a123, v88, this, a122); } catch (e) {}
}
const v129 = new Int8Array();
try {
    v129.find(v112);
} catch(e131) {
    new C6();
    function F133(a135, a136) {
        if (!new.target) { throw 'must be called with new'; }
        a135.e = a135;
        const v137 = this?.constructor;
        try { new v137(this); } catch (e) {}
        this.c = a135;
    }
}
