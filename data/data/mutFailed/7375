class C3 {
    b = 536870887;
    [-293696.6066073823] = -293696.6066073823;
    static n(a5, a6) {
        a6?.[a5];
        a6 = 536870887;
        super.d;
        return "5T";
    }
    static b;
}
const v12 = new C3();
~v12.b;
const v15 = new C3();
v15.b;
const v17 = new C3();
try { v17.hasOwnProperty(v15); } catch (e) {}
v17.b = v17;
let v20 = -44516;
v20--;
const v24 = new BigInt64Array();
let [,v25,v26] = v24;
try { v26(); } catch (e) {}
function F28() {
    if (!new.target) { throw 'must be called with new'; }
}
class C30 {
    constructor(a32, a33, a34, a35) {
        const v36 = this?.__lookupSetter__;
        try { new v36(C3); } catch (e) {}
        a32 << a32;
        a34 >>> a34;
        a35.length;
        function f41(a42, a43) {
            new Float64Array([]);
            function F48() {
                if (!new.target) { throw 'must be called with new'; }
                this.c = 1163987790;
            }
            ["4294967296"];
            return this;
        }
        this.constructor = f41;
        this.g = this;
        let v52 = 268435440;
        v52--;
        ([0.7021385356541069,NaN,3.752300846891645,76.93522341476432,-277.4575758719999,9.404843788357361,-320.7110241266939])[Symbol.hasInstance];
        new Float64Array(-1);
        8 & 8;
    }
    set g(a64) {
        a64.f = a64;
        try {
            v15.fuck(-1, -9, true, a64);
            function f67() {
                const v70 = Array(4087);
                v70[1959] = v17;
                for (const v71 of v70) {
                }
                return 4087;
            }
            %PrepareFunctionForOptimization(f67);
        } catch(e72) {
        }
    }
}
let v73;
try { v73 = new C30(-293696.6066073823, 536870887, 536870887, C30); } catch (e) {}
const v74 = v73?.constructor;
try { new v74(-1, v73); } catch (e) {}
const v76 = new C30(-9, C30, v12, v12);
function f77(a78) {
    const v80 = new Uint32Array();
    try { v80.map(v80); } catch (e) {}
    new BigInt64Array();
    const v84 = delete C3?.b;
    let v85;
    try { v85 = v17.getYear(v84, a78, v84, v84); } catch (e) {}
    return v85;
}
Object.defineProperty(v76, "constructor", { configurable: true, enumerable: true, value: f77 });
const v86 = v76?.constructor;
try { v86.call(v15); } catch (e) {}
try { new v86(v76, v17, v12, v15); } catch (e) {}
const v89 = new C30(-9, C3, v17, C3);
v89.constructor = f77;
const v90 = v89?.constructor;
~(-256n >> -256n);
let v94 = 129;
v94++;
const v96 = v90?.apply;
try { new v96(536870887, v20); } catch (e) {}
try { new v90(536870887, 536870887, C30, 536870887); } catch (e) {}
new C30(-1, v17, -1, C3);
const v100 = [10,-9007199254740991,512,7];
function f101(a102) {
    const o103 = {
        ...v100,
    };
    o103[1] = o103;
    o103[3] = o103;
    return f101;
}
try { f101(-1); } catch (e) {}
let v105 = /a\Sc?/giy;
v105.hasIndices = v105;
v100[Symbol.split] = f101;
v105.valueOf = f101;
v105 >>= v105;
