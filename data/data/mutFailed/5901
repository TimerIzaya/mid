Math.tan(9007199254740992);
new Float64Array();
const v8 = [-1.0,-460.7859343857692,2.325221215248936e+307,-9.739130666057004e+307,2.7505981805941193];
const v9 = [992.3663829507939,-0.0];
const v10 = [1.4882604549475774e+308,-1e-15,-5.0,0.28666277436525367,-1.7976931348623157e+308];
parseFloat(parseFloat);
class C15 {
}
function f17(a18, a19) {
    return 512;
}
class C23 extends Int8Array {
    [12];
}
function F24(a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 1073741824;
    } catch(e29) {
    }
}
new F24("-11", v9, "number");
new F24("-11", v9, "-11");
new F24("-11", v10, "f");
2147483649 << 2147483649;
const v36 = new Map();
const v37 = new v9();
const o38 = {
    ...v36,
    "f": Map,
    "h": v8,
    [-2]: v36,
    ...v37,
};
const v40 = new WeakMap();
function F41(a43) {
    if (!new.target) { throw 'must be called with new'; }
    const v44 = this?.constructor;
    try { new v44(v40); } catch (e) {}
    try {
        this.c = WeakMap;
    } catch(e46) {
    }
}
const v47 = `
`;
const v48 = [-15,-2147483649,-899333997,3,1455560807,-1024,-4294967297,2098301778];
class C49 {
    constructor(a51) {
        function f52(a53, a54) {
            return a53;
        }
        f52(v48);
        f52(v8);
    }
}
new F41(v40);
Date("2");
class C61 {
    #valueOf(a63, a64, a65, a66) {
        this.#valueOf();
    }
    constructor(a69, a70, a71, a72) {
        for (const v73 in a70) {
        }
        a71.d = "2";
    }
}
for (let v74 = 0; v74 < 25; v74++) {
    let [v75,v76,v77,...v78] = v8;
    continue;
    [4294967295,-9223372036854775807,-53752402,-10,2147483648,536870889,-2,16];
    [14719,-4294967296,1073741824,-1865923346];
    [268435439,-1024,9007199254740990,6,1813209896,40964,-713474339];
}
