let v2 = 2;
const v3 = [0.0,691.7985330792658,-575163.8615160859,0.3416433904008266,-362968.35072738444,Infinity,-637760.5004738114,2.2250738585072014e-308,0.233781132392066];
function f4(a5, a6) {
    const o7 = {
    };
    new Proxy(v3, o7);
    return v2;
}
v3.toString = f4;
const v10 = [-9.445486872465633,0.7369474372393203];
const v11 = [-5.0,-2.763765231818798,885390.3868192625,-151.20015334000584,0.2934424075889881,-1e-15,-2.2250738585072014e-308,751151.6469927805,389.88445076983885];
let v12 = [-3724,v3,-3724,v2];
function f13(a14, a15) {
    class C16 {
    }
    return v11;
}
Object.defineProperty(v12, Symbol.toPrimitive, { configurable: true, enumerable: true, value: f13 });
[-3724,[v12,v12,v12,-1575856089]];
v12 >>= v11;
v2--;
delete v10[242];
try { v3.flatMap(1073741824, v11); } catch (e) {}
v12 |= v12;
("async").lastIndexOf();
const v2 = new Array(406);
const v3 = [4936,-536870912,14630,-1251732546,16,10];
const v4 = [-2147483649,-9223372036854775807,65537,2147483649,256];
const v5 = [2,9007199254740992,257,536870889,0,-9223372036854775808,1751486596,-4294967295,13,-59861];
Object.defineProperty(v2, "c", { get: Array, set: Array });
let v6;
try { v6 = v4.forEach(Array); } catch (e) {}
let v7;
try { v7 = v2.findIndex(Array, v3); } catch (e) {}
let v8;
try { v8 = new v6(v6, v7, 406); } catch (e) {}
try {
    v4.h = v8;
} catch(e9) {
}
new Int32Array(4096);
const t16 = 4096;
new t16(127);
new v5(512);
for (let i = 0; i < 5; i++) {
    const v19 = /s1(\1a)/mviy;
    /a\S\xf0\x9f\x92\xa9/msuyd;
    const o21 = {
        __proto__: v19,
        "b": v19,
    };
    for (let v22 = 0; v22 < 10; v22++) {
    }
    function f23(a24, a25, a26) {
    }
    try {
        o21[3] = Array;
    } catch(e27) {
    }
    v19.unicode /= 127;
}
try {
    Array(-10);
} catch(e30) {
}
