let v0 = false;
class C1 {
    static #n() {
        this + this;
        try {
            C1.h = v0;
        } catch(e4) {
        }
        class C5 {
        }
        new C5();
        const o12 = {
            __proto__: this,
            p(a8, a9) {
                48752008 ^ this;
                return this;
            },
        };
        const v14 = [this,v0,this,this,Reflect];
        Reflect.construct(v0, v14, this);
        v14.length;
        v0 %= v0;
        try { this.asUintN(v14); } catch (e) {}
        return Reflect;
    }
    static #a = v0;
    f;
    static g;
    static #b;
    static c;
}
const v18 = new v0();
let v19 = new C1();
function f20() {
    return f20;
}
const o21 = {
};
for (const v22 in o21) {
}
const v23 = new C1();
v23.a = v23;
class C24 extends C1 {
    8;
    o(a26) {
        this | a26;
        const o29 = {
        };
        try {
            o29.c = v0;
        } catch(e30) {
        }
        try {
            const o31 = {
            };
            o31.c = v0;
            o31.e = this;
            let v32 = 0;
            while (v32 < 10) {
                for (let v35 = 0; v35 < 5; v35++) {
                    "n" + v35;
                }
                v32++;
            }
        } catch(e39) {
        }
        try {
            const o40 = {
            };
            o40.c = v0;
            o40.e = this;
            o40.b = a26;
        } catch(e41) {
        }
        try {
            const o42 = {
            };
            o42.c = v0;
            o42.e = this;
            o42.h = v19;
        } catch(e43) {
        }
        return v0;
    }
}
let v44 = new C24();
new C24();
const v46 = new C24();
v46[8] = v46;
function f47() {
    const v49 = f47 != v44 ? f47 : v44;
    v23[1];
    v49[C24] = v0;
    v44 = v23;
    function F52(a54, a55) {
        if (!new.target) { throw 'must be called with new'; }
        const v56 = this?.constructor;
        try { new v56(this, this); } catch (e) {}
        try {
            this.c = 15;
        } catch(e58) {
        }
    }
    return v0;
}
f47.prototype;
let v62 = 255n;
v62--;
v19 |= C1;
function F68() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v72 = Array(19793);
        for (const v73 of v72) {
        }
        const v74 = [v72,v72,v72,v72,v72];
        [[v74,v74,v74]] >= Uint16Array;
    } catch(e79) {
    }
}
class C80 {
    4011 = v19;
    static #p(a82, a83, a84, a85) {
        function f86() {
            return v62;
        }
        try {
            C1.c = v19;
        } catch(e87) {
        }
        return v46;
    }
    4;
    static h = v18;
    [v46] = v62;
}
C80.length = C80;
new v19();
const v89 = new C80();
v89[4011] = v89;
function F91(a93, a94, a95, a96) {
    if (!new.target) { throw 'must be called with new'; }
    const v97 = this.constructor;
    try { new v97(v97, a95, v97, Uint8Array, v97); } catch (e) {}
    const v99 = [this,this,this];
    const o100 = {
        "e": v99,
    };
}
const v101 = new C80();
v101[4011] = v101;
for (let v102 = 0; v102 < 25; v102++) {
}
/xyz?/gudms;
