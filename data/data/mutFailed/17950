new Date();
[-1000000000.0,2.2250738585072014e-308,-4.596195445051691,-652.8840935493789,5.144706760397487e+307,404857.78265117155,6.933661013412461,-1000.0];
[-543.6427047366068,907376.6572746714,2.220446049250313e-16];
[927.4828367338766,-1.1775991446002674e+308,-4.0,3.3390931695215017e+307];
for (let v8 = 0; v8 < 5; v8++) {
    function f9() {
        const v11 = new NaN();
        v11[2327] = v11;
        return NaN;
    }
    f9(v8, f9, f9);
    %OptimizeFunctionOnNextCall(f9);
}
[3.965395492910659,NaN,-1000000.0,-117737.41746338166,1.7976931348623157e+308,3.109531305563822,-1.550764564514627e+308,1000.0];
const v16 = new Uint32Array(8);
const o17 = {
};
const v18 = [-0.0,-779.5849417858784,1000000.0,-1e-15,88.78710783320321];
[4.0,484944.6476899313,1000000000000.0,-5.0,2.2250738585072014e-308,-2.0,-149485.82873460546,1.1102364989888457e+308,-1.3969242906145468e+308,455.06220444991163];
for (const v20 in v16) {
}
v18.constructor;
function F22() {
    if (!new.target) { throw 'must be called with new'; }
}
function F24(a26) {
    if (!new.target) { throw 'must be called with new'; }
}
const v27 = new F24();
class C28 extends F22 {
}
class C29 {
}
const v30 = new C29();
function F31(a33, a34) {
    if (!new.target) { throw 'must be called with new'; }
    const v35 = [a34,a34,a34,a34,a34];
    class C36 {
        constructor(a38, a39, a40) {
            function f41(a42, a43, a44) {
                v35.findLast();
                let v47 = 0;
                for (let i = 0; i < 25; i++) {
                    try {
                        const o48 = {
                        };
                        o48.c = C28;
                    } catch(e49) {
                    }
                    try {
                        const o50 = {
                        };
                        o50.constructor = v27;
                        o50.f = v30;
                    } catch(e51) {
                    }
                    v47++;
                }
                try {
                    f41(a39, a40, [-268435456]);
                } catch(e55) {
                }
                this >> -268435456;
                return -268435456;
            }
            f41();
        }
    }
    class C58 extends C36 {
    }
    new C58();
}
const v62 = new Float32Array(11);
v62.lastIndexOf();
function f64() {
    function f65(a66, a67) {
    }
    const v69 = new Promise(f65);
    v69.constructor = f64;
    const v70 = v69.constructor;
    let v71;
    try { v71 = v70(v69, v70, v70, f64, v69); } catch (e) {}
    return v71;
}
f64();
f64();
