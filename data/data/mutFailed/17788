function f0() {
    const o14 = {
        ...f0,
        "b": -1000000.0,
        get a() {
            return f0;
        },
        "e": -1000000.0,
        "b": "string",
        "d": "string",
        "g": -1000000.0,
        __proto__: "string",
        ["string"](a6, a7) {
            function f9() {
                const o10 = {
                };
                return o10;
            }
            Reflect.construct(a, [], a);
            return "string";
        },
        ..."string",
        3: "string",
        "a": -1000000.0,
    };
    return o14;
}
f0();
f0();
function f17(a18, a19) {
    const v20 = [1000000000.0,2.2250738585072014e-308,-3.0,-2.2250738585072014e-308,-2.2250738585072014e-308,-6.525028373249204e+307,-7.851646360254072e+307,0.6785915059434757,-0.0];
    class C21 {
    }
    const v23 = Symbol.replace;
    C21[v23] = v20;
    try {
        v20.valueOf = Symbol;
    } catch(e24) {
    }
    delete v23[2];
    return a19;
}
f17();
const v27 = f0();
new Int32Array(9);
const v33 = new Uint32Array(13);
const v34 = [];
v34.length = 2147483647;
let {...v36} = v34;
let v37 = [601759695];
const v38 = [1073741824,1073741823,1376142744,1073741825];
function f39(a40, a41, a42, a43) {
    try { v38["find"](..."find", a43, ...v37, ...v38); } catch (e) {}
    const v48 = Symbol.isConcatSpreadable;
    const v49 = v48.description;
    const v50 = Array(a42);
    try { v50.groupToMap(v48, v49, f39, v50, v48); } catch (e) {}
    return v37;
}
const v52 = Uint32Array !== v38;
v33[1282368335] = v27;
v37 <<= v34;
new f17(Int32Array, v52);
for (let v57 = 0; v57 < 5; v57++) {
    f39();
}
class C63 extends Date {
    constructor(a65, a66, a67, a68) {
        super(a66);
        this.setYear(189);
    }
}
new Uint32Array(512);
f0();
Array().entries();
Symbol.isConcatSpreadable;
function f77(a78) {
    function f80(a81) {
    }
    this.onmessage = f80;
    return f77;
}
const o84 = {
    "type": "function",
};
new Worker(f77, o84);
let v87 = ("D")[0];
v87.substring().charCodeAt();
function F93(a95, a96) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        function f97() {
            const v98 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
            for (let v99 = 0; v99 < 5; v99++) {
                function f100() {
                    try {
                        v98.forEach();
                    } catch(e102) {
                    }
                    return f100;
                }
                f100.f = f100;
                f100();
                %OptimizeFunctionOnNextCall(f100);
            }
            return v98;
        }
        %PrepareFunctionForOptimization(f97);
    } catch(e104) {
        class C107 {
            static n(a109, a110) {
            }
            static toString(a112, a113) {
                v87 = a113;
                const v114 = v34[65535];
                for (let v115 = 0; v115 < 32; v115++) {
                    v114["p" + v115] = v115;
                }
                return v27;
            }
            static [-4096];
        }
        const v118 = new C107();
        function f119() {
            return f119;
        }
        function f120(a121, a122) {
            const o124 = {
                ...a121,
                [v118]: a121,
                "e": C107,
                ...C107,
                "d": f119,
                get f() {
                    C107[3] >>= 9;
                    return a121;
                },
            };
            return o124;
        }
        f120(f120, C107);
        const o126 = {
        };
        const v128 = [601759695];
        function f129() {
            ("Vre").toLocaleUpperCase;
            ("Vre").fixed();
            const o138 = {
                "c": v128,
                valueOf(a136, a137) {
                },
                "e": -268435456,
            };
            const v139 = o138.valueOf();
            v139 * v139;
        }
        new Uint8ClampedArray(798);
        for (let [v143,v144] of a95) {
        }
    }
    new Date(Math);
    for (let i151 = 0, i152 = 10; i151 < i152; i152--) {
    }
    const v159 = -256n >> -256n;
    v159 + v159;
    const v161 = ~v159;
    v161 + v161;
    try {
        new F93();
    } catch(e164) {
    }
    const o170 = {
        "e": 12,
        __proto__: 3.4890473589784586e+307,
        "g": 12,
        o(a169) {
            return a169;
        },
        ...1000000000000.0,
    };
    return o170;
}
const v171 = new F93(F93, F93);
new F93(v171, F93);
