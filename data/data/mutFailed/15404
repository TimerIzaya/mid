class C3 {
    constructor(a5, a6) {
        const t2 = "function";
        t2[4] &= a5;
        const v7 = super.h;
        try {
            v7.toString = a5;
        } catch(e8) {
        }
    }
    c;
    static #c;
    static #h = -9007199254740990;
    get g() {
        C3?.[this];
        return -3096;
    }
    static #a;
    g;
}
try {
    const t21 = "function";
    t21.f = -9007199254740990;
} catch(e11) {
}
const v14 = new Int16Array(4096);
const v17 = new Uint8ClampedArray(15);
new Uint16Array(16);
const v21 = new C3("function", C3);
new C3("function", v21);
new C3(C3, -3096);
new Float64Array(4096);
try { v17.lastIndexOf(-9007199254740990, -9007199254740990); } catch (e) {}
v14[-9007199254740990];
const o29 = {
};
try {
    o29.f = 4096;
} catch(e30) {
}
try {
    const o31 = {
    };
    o31.f = 4096;
    o31.h = Float64Array;
} catch(e32) {
}
try {
    const o33 = {
    };
    o33.f = 4096;
    o33.h = Float64Array;
    o33.d = v14;
} catch(e34) {
}
try {
    const o35 = {
    };
    o35.f = 4096;
    o35.h = Float64Array;
    o35.d = v17;
} catch(e36) {
}
new Uint8ClampedArray(4);
new Uint8Array(6);
const v43 = /(x)(x)(x)\1/uis;
function f44(a45, a46, a47, a48) {
    const o55 = {
        2: a47,
        __proto__: a48,
        [v43](a50, a51, a52, a53) {
            super.test();
        },
    };
    return a45;
}
%PrepareFunctionForOptimization(f44);
f44();
f44();
%OptimizeFunctionOnNextCall(f44);
f44();
