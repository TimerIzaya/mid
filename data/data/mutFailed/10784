let v3 = 10;
v3--;
const v6 = new Uint8Array(v3);
v6[4];
new Int32Array(10);
let v13;
try { v13 = new Int16Array(1000, 10, 10000); } catch (e) {}
new Int16Array(1000);
!true;
function f17() {
    const o20 = {
        1678: 10,
        ...Int16Array,
        "d": true,
        [true]() {
            super.e;
        },
        1: v13,
    };
    return o20;
}
f17.caller = f17;
const v21 = Uint8Array();
v21[1] = v21;
const t24 = 1000;
let v22 = t24();
let v24 = 9;
class C27 {
    constructor(a29, a30, a31, a32) {
        try { new a32(v21); } catch (e) {}
        try {
            new f17();
        } catch(e35) {
        }
        v22[36];
    }
    static #a;
    static {
        try { this.constructor(-9007199254740991); } catch (e) {}
        v13.__proto__;
        try {
            this.b = -9007199254740991;
        } catch(e40) {
        }
    }
}
C27.d = C27;
const v41 = new C27();
const v42 = new C27(-2147483649, v21, v22);
const v43 = v42?.__lookupGetter__;
try { new v43(f17); } catch (e) {}
({"c":v22,"h":v24,} = v41);
v41[8] **= -5;
const o45 = {
};
new Proxy(v41, o45);
