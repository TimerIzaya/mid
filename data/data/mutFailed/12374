[6,-1072198991,18093,268435456,3,3,1024,-1267891115,-33212,32071];
const v1 = [0,-4294967297,65536,4,11,257,1449235558,-4294967297];
[4294967296,65535,-256,-3,1790214042];
new Float32Array(4);
const v14 = new Uint32Array(10);
new Uint32Array(1639);
class C21 {
    7 = 1e-15;
    #toString(a23, a24) {
        for (let v25 = 0; v25 < 32; v25++) {
            a23["p" + v25] = v25;
        }
        64 in this;
        new Float64Array(16);
        new Int8Array(1330);
        const v37 = new Int32Array(47, Int32Array, Int32Array, v1);
        return v37;
    }
}
const v38 = C21?.constructor;
try { new v38(64); } catch (e) {}
const v40 = new C21();
v40[7] = v40;
const v41 = new C21();
v41[7] = v41;
const v42 = new C21();
function F43(a45, a46, a47, a48) {
    if (!new.target) { throw 'must be called with new'; }
    const v49 = this?.hasInstance;
    try { new v49(v41, this, this, v41); } catch (e) {}
    a48[7];
    try {
        this.a = a48;
    } catch(e52) {
        const v55 = new Int32Array();
        const v57 = new BigInt64Array();
        const v58 = [-2.2250738585072014e-308,3.392499338451276e+307,-747.2945132947244,0.9386986579024902,570.3429467836224,-2.2250738585072014e-308,-2.5986211042998715,0.7677312292190223];
        const v59 = [-1.7976931348623157e+308];
        function f60(a61, a62, a63, a64) {
            const o70 = {
                toString(a66, a67, a68) {
                    a63[a62] = a61;
                    return 255n;
                },
            };
            return o70;
        }
        const v71 = f60(v57, 129, v59);
        const v72 = f60(v55, 129, v58);
        for (let v73 = 0; v73 < 5; v73++) {
            v72 % v71;
            v58.b = v55;
        }
    }
    try {
    } catch(e75) {
    }
}
const v76 = new F43(C21, v40, v41, v40);
const v77 = new F43(v76, v76, v41, v42);
new F43(v77, v76, v76, v77);
function f79() {
}
class C81 extends Float64Array {
}
const v82 = new C81(-4294967296, v14, v1);
v82.reverse();
