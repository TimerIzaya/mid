function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -9007199254740991;
    } catch(e3) {
    }
    try {
        this.MAX_VALUE = -9007199254740991;
    } catch(e4) {
    }
}
const v5 = new F0(F0, F0);
new F0();
const v7 = new F0();
function f11() {
    return v7;
}
try {
    v5.valueOf = f11;
} catch(e13) {
}
Object.defineProperty(v7, v5, { configurable: true, get: f11 });
const v15 = new Uint8ClampedArray(3838);
v15.toString = f11;
new Float32Array(3773);
const v21 = new Int16Array(64);
v21.e = f11;
function f22() {
    for (let v23 = 0; v23 < 5; v23++) {
        "p" + v23;
    }
    class C28 {
    }
    function F32(a34) {
        if (!new.target) { throw 'must be called with new'; }
        v15.constructor;
        try {
        const t0 = -1517929768;
        new t0();
        } catch (e) {}
        this.g = 64;
        this.g = -1;
        this.h = a34;
    }
    const o38 = {
        "b": 1000000000.0,
        "h": -1517929768,
    };
}
f22();
f22(v7, f11);
v15[1609184825] = v15;
try {
    v21.e = F0;
} catch(e41) {
}
class C42 {
}
