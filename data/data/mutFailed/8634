const v0 = [-1.7976931348623157e+308,1.1157429865707252e+308,-4.0];
const v1 = [0.9985063731052279,1000000000000.0];
const v2 = [NaN,-74.37152765575729,-3.0,-1.0];
[65535,-4294967295,1,-59778,-10,-65535,65537,10000,-2147483647];
const v7 = [2147483648,2147483649,-268435456,-268435456];
[-195528957,40988,10,255,979058904,1084986025,-438669943,-4];
v1[4] = v7;
for (let v9 = 0; v9 < 32; v9++) {
    v0["p" + v9] = v9;
}
class C12 {
    #m(a14, a15, a16, a17) {
        this ** v0;
        return a15;
    }
    static #b;
    static d = v0;
    8 = v0;
    static 1378 = -13n;
    static c;
}
const t21 = -13n;
new t21();
const v23 = new C12();
new C12();
function f25() {
    const v27 = ([v2,f25]).constructor;
    const v28 = new v27();
    class C29 extends v27 {
    }
    const v30 = new v23();
    try { v30.reduceRight(); } catch (e) {}
    return v28;
}
%PrepareFunctionForOptimization(f25);
f25();
%OptimizeFunctionOnNextCall(f25);
f25();
