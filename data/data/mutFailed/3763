function f0() {
    const o15 = {
        set f(a5) {
            const v6 = super.g;
            const o7 = {
            };
            try {
                o7.a = v6;
            } catch(e8) {
            }
            try {
                const o9 = {
                };
                o9.a = v6;
                o9.g = this;
            } catch(e10) {
            }
            try {
                const o11 = {
                };
                o11.a = v6;
                o11.g = this;
                o11.e = 9;
            } catch(e12) {
            }
            try {
                const o13 = {
                };
                o13.a = v6;
                o13.g = v6;
                o13.d = 9;
            } catch(e14) {
            }
        },
    };
    return o15;
}
const v16 = f0();
const v17 = f0();
const v18 = f0();
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v17;
    } catch(e26) {
    }
    try {
        this.b = f0;
    } catch(e27) {
    }
    try {
        this.d = a25;
    } catch(e28) {
    }
}
const v29 = new F22(v17, 4);
const t56 = 2029726607;
const v30 = new t56(v16, 2029726607);
const v31 = new F22(v30, 128);
class C32 extends v31 {
    o(a34, a35, a36) {
        F22 <= v18;
        super.e = v18;
        a36[251] = a34;
        return v18;
    }
    constructor(a39, a40, a41) {
        super(a40, 4);
        a41 = v18;
        this["o"](4, v29, ..."o", 4);
    }
    a;
    #h = v29;
}
const v44 = new C32(128, 4, 4);
new C32(2029726607, 4, v44);
new C32(4, 128, v16);
const v47 = [-14339,735253629,4294967296,3,268435456,3,57019,268435439];
for (const v49 in [1959699296,-1,9007199254740991,9007199254740992,2147483649,-4096,-9223372036854775808]) {
}
for (const v50 in v47) {
    ("-2").normalize("NFKC");
}
