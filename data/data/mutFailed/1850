function f0() {
}
function f1() {
    return f0;
}
let v3 = 0;
do {
    const v4 = v3.__proto__;
    try { v4.setTime(f1); } catch (e) {}
    try {
        f1();
    } catch(e7) {
    }
    v3++;
} while (v3 < 4)
const v13 = [274138073,-2147483649,-536870912,2147483647];
const v14 = [268435439,127,-11,4096];
const v15 = [16196,-256,-50655,-65313,24500,-1937231847,-2147483649,-2];
function F16(a18, a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
    try { a18.sin(f1, this, a19, this); } catch (e) {}
    ("128").fontsize();
    class C25 {
    }
    class C26 {
        constructor(a28, a29, a30, a31) {
            try { a30(...a28, "e", a31, a31, ...C25); } catch (e) {}
            return arguments;
        }
    }
    new C26();
    try {
        this.h = v3;
    } catch(e35) {
    }
    try {
        this.c = a19;
    } catch(e36) {
    }
}
new F16(v15, v15, 1000000000000.0);
function f38(a39) {
}
Math.acosh(1073741825);
const v43 = new F16(v13, v14, -465817.17650274944);
const v44 = new F16(v15, v14, 1000000000000.0);
function F45(a47) {
    if (!new.target) { throw 'must be called with new'; }
    let v49 = 0;
    do {
        v43[v14];
        v49++;
    } while (v49 < 3)
    const o57 = {
        "b": 1e-15,
    };
    delete o57.b;
}
new F45(F45);
function F60() {
    if (!new.target) { throw 'must be called with new'; }
}
const v62 = new F60();
[v62];
const v64 = [1073741824,1073741823,1376142744,1073741825];
let v65 = Float64Array;
v64.forEach(v65 = v15);
const v67 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
(v44 && v65) <= v67;
new F45();
