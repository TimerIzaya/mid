function f0() {
}
function f1() {
    return f0;
}
[-0.5835571311664989,-1.793771771171662e+307,-5.0,-0.0,1.5142706762284979e+308,-628.0605319742707,1.0944750539813669e+308,-1.0];
[-5.680885113747339,0.11749730514828005,7.961129377523864,303.27248556257155,-1000000000.0,1000000000000.0];
[-9.05847949572524,-2.220446049250313e-16,1.4465015749852612e+308,-16128.945433952846,-3.955394719879929e+307];
function f8() {
    return "message";
}
new WeakSet();
function f17() {
}
function f18() {
    const o42 = {
        "b": f17,
        [f17]: f17,
        valueOf() {
            let v21 = -(-1e-15);
            const v22 = v21--;
            const v23 = /a\Sc?/giy;
            v23.valueOf = f17;
            try {
                v22();
            } catch(e25) {
                Symbol("bZ");
                const v29 = [NaN,1000.0,8.951106279668121,-3.0,-Infinity,1.7976931348623157e+308,-4.0,243.50965730660823,0.0];
                class C30 {
                    constructor(a32, a33, a34, a35) {
                        const v36 = this?.constructor;
                        try { new v36(v29, a34, a34); } catch (e) {}
                        a33 >>> a33;
                        0.061410412759498656 >>> 0.061410412759498656;
                    }
                }
            }
            try {
                this.valueOf = v23;
            } catch(e41) {
            }
            return f17;
        },
    };
    return o42;
}
f18();
const t46 = "message";
const v44 = t46();
const v45 = v44?.b;
try { new v45(); } catch (e) {}
new Uint8Array(268435440);
function F50() {
    if (!new.target) { throw 'must be called with new'; }
}
class C52 extends F50 {
}
Date[-22872n] = Date;
("function").length;
const v57 = f18();
function F58(a60, a61) {
    if (!new.target) { throw 'must be called with new'; }
    const v62 = this?.constructor;
    try { new v62(a60, a60); } catch (e) {}
    new Uint16Array("2103650046");
    const v66 = [];
    const o67 = {
        ...v66,
    };
    try {
        const t70 = 2147483648;
        t70.b = a61;
    } catch(e68) {
    }
    try {
        this.c = a60;
    } catch(e69) {
    }
}
const v70 = new F58(v57, v57);
new F58(v44, v70);
new F58(v57, v70);
-6n * -6n;
function f78(a79, a80) {
    Math.atan2(Math, f78);
    return C52;
}
new Promise(f78);
1713234876 === 1713234876;
function f87(a88, a89) {
}
f87();
f87(-1748, 1713234876);
function F92(a94, a95) {
    if (!new.target) { throw 'must be called with new'; }
    const v96 = this.constructor;
    v96.f = v96;
    function f100() {
        return f100;
    }
}
