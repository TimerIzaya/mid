new Uint16Array(Uint16Array);
const v5 = ("is").constructor;
try { new v5(); } catch (e) {}
new BigInt64Array(11);
class C10 {
    static c = "is";
    static [0];
    constructor(a12, a13, a14, a15) {
        %VerifyType(a15);
        super[this];
    }
    toString(a18) {
        super[this];
    }
    n(a21) {
        const v22 = [-249238.17072289705,-1.0,6.693714092738485,-107.43788576314148,-1.7976931348623157e+308,1.0,120.2856343783908,845.8137339170103,-171324.74904345046];
        const v24 = [4294967295,268435439,2,-57458847];
        try {
        const t0 = -699732237;
        t0(4.0, -973.3909000330103, 4.0, v24, 0.5551566747899912);
        } catch (e) {}
        const v30 = [0.49203380837431954,3.0,-868.5800375183363,-2.2250738585072014e-308,837.1252135353145,459879.7155111127,-0.0,0.0724582113206651,NaN];
        const v31 = [-1000000.0,-1.0,952.4163692749257,41232.51719836402,-2.220446049250313e-16,869.918809614255,0.6566814488589754,-2.299816654271874,1000000000.0];
        const v33 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
        const v34 = [601759695];
        const v36 = delete v30?.length;
        function f37() {
            try {
                v22.forEach(this);
            } catch(e41) {
                const v43 = new Date(Date);
                v43.setFullYear();
                ("async").lastIndexOf();
                e41.b = e41;
                e41.f = v36;
                e41.f = e41;
            }
            const v47 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
            const o53 = {
                toString(a49, a50) {
                    (222869.01448962814 && this) <= v47;
                    return this;
                },
            };
            let v54 = -268435456;
            v54++;
            const v56 = new WeakMap();
            v56.delete(v56);
            const v60 = new Int16Array(2058);
            v60[256] = 2058;
            const o85 = {
                "c": -4294967297n,
                [522675525n](a62, a63) {
                },
                "c": v34,
                valueOf(a65, a66) {
                    return this;
                },
                [-4294967297n](a68, a69, a70, a71) {
                },
                "maxByteLength": -4294967295,
                "arguments": v33,
                ..."Vre",
                valueOf(a73, a74) {
                    return a74;
                },
                4: "Vre",
                valueOf(a76, a77) {
                },
                __proto__: v31,
                p(a79, a80) {
                    super.a = f37;
                    return -973.3909000330103;
                },
                "type": "Vre",
                toString(a82, a83, a84) {
                    return "Vre";
                },
            };
        }
        [-6.130654133520357,517862.77441887534];
        ([-2.2250738585072014e-308,0.11568722934895703,3.0,0.5553048465902836,-5.356606005429565])[149];
        return this;
    }
    static toString(a90) {
        let v91 = 0;
        do {
            super[super.c];
            v91++;
        } while (v91 < 8)
        return "is";
    }
}
new C10();
new C10();
new C10();
function f103(a104, a105) {
    const v108 = Array();
    function f109() {
        return f103;
    }
    function f110(a111) {
        const o114 = {
            "execution": "async",
        };
        gc(o114);
        return a111;
    }
    Object.defineProperty(v108, 0, { configurable: true, enumerable: true, get: f109, set: f110 });
    v108.unshift(3);
    return a104;
}
new Promise(f103);
function f122() {
    return 2.0;
}
class C126 {
    get b() {
        const v128 = ("B")[21];
        try {
            this.e = "B";
        } catch(e129) {
        }
        return v128;
    }
    static [2.0];
    static #g;
    g = "d";
}
new C126();
const v131 = new C126();
const v132 = new C126();
const v135 = new Uint8Array(7);
try {
    f122();
} catch(e139) {
}
2147483648 >>> "is";
const v141 = new BigInt64Array(1221);
let v144 = new Uint8ClampedArray(5);
try { v131(1221, v131, "d", v132); } catch (e) {}
const o146 = {
    __proto__: v135,
    "h": v135,
    "a": v141,
};
new C126();
function f151() {
    for (const v155 of Array(4087)) {
    }
    return 4087;
}
f151();
Math.clz32(-53409);
const v158 = -53409 % v144;
--v144;
-1000.0 && v158;
