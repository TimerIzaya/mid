const v0 = [-1024,42583,268435440,10000,2147483647,4294967296,2147483647,37462];
let v1 = [6,1126315913,-1,-1000993575,-10236,9,-268435456,-30140,45509,1250841245];
const v2 = [9007199254740990,-128,6,1,14];
v1 = v2[v1][4];
try { v0.values(); } catch (e) {}
const v7 = v2["toReversed"]();
new Uint32Array(2);
new Uint8ClampedArray(16);
try {
    const t9 = "toReversed";
    t9.valueOf = v7;
} catch(e22) {
}
try {
    new Uint8ClampedArray(-221755768, -16, -55066);
} catch(e25) {
}
new Int32Array(1065);
const v30 = new Uint8Array(3745);
class C31 extends Int32Array {
}
const v32 = new C31();
let v33 = v30[64];
[,,...v33] = v30;
for (let v34 = 0; v34 < 5; v34++) {
    v32["p" + v34] = v34;
}
function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = -353747556;
    } catch(e3) {
    }
    try {
        this.h = -353747556;
    } catch(e4) {
    }
    try {
        this.c = -353747556;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
v8.h;
function f10() {
    return v7;
}
class C11 {
    static #c;
    o(a13) {
        try {
            a13 = this;
        } catch(e14) {
        }
        return a13;
    }
    7;
    #d = v8;
    h;
}
C11.e = C11;
const v15 = new C11();
const v16 = new C11();
const v17 = new C11();
v17[7];
const v20 = [[v16,C11],v17];
const v21 = [v20,v16,v15,v20];
function f25(a26, a27) {
    const o99 = {
        __proto__: 16,
        "f": 16,
        [a27]: a27,
        "c": 9007199254740991,
        ...a27,
        "d": a26,
        2147483649: 9007199254740991,
        "h": 12306,
        "g": 9007199254740991,
        "a": a26,
        get b() {
            try { new a27(16, this, this, this); } catch (e) {}
            for (let v30 = 0; v30 < 10; v30++) {
                const v32 = 12306 ** 9007199254740991;
                function f33() {
                    new Date();
                    const o38 = {
                        "c": "pR7SG",
                    };
                    const v41 = 4.276454155698374 >> 4.276454155698374;
                    try { this.m(v16, v41); } catch (e) {}
                    const o43 = {
                        "construct": f25,
                        "get": f33,
                        "getOwnPropertyDescriptor": Date,
                        "has": f10,
                        "isExtensible": f33,
                        "ownKeys": f33,
                        "setPrototypeOf": f33,
                    };
                    new Proxy("pR7SG", o43);
                    -2.220446049250313e-16;
                    const v48 = [2.220446049250313e-16,2.220446049250313e-16,2.220446049250313e-16];
                    const v49 = [v48,v48,2.220446049250313e-16,v48];
                    const v50 = [v49];
                    const o56 = {
                        "h": undefined,
                        "a": undefined,
                        "b": 2.220446049250313e-16,
                        [4.276454155698374](a53, a54) {
                        },
                        get b() {
                            return this;
                        },
                        1942: v50,
                        ...v50,
                    };
                    f33[0];
                    const o58 = {
                        ...o56,
                    };
                    const o67 = {
                        __proto__: "pR7SG",
                        [57616]: o56,
                        255: v50,
                        p(a60, a61) {
                            super[arguments] = arguments;
                            return a61;
                        },
                        set f(a64) {
                            57616 || 57616;
                            super.e;
                        },
                        "f": 3.9648408087192717,
                        "h": 3.9648408087192717,
                        "a": 57616,
                        ...3.9648408087192717,
                        ..."pR7SG",
                        "g": 57616,
                    };
                    return v49;
                }
                Math.hypot(12306);
                Math.sqrt(v32);
                Math.sin(v32);
            }
            return 9007199254740991;
        },
    };
    o99.c = o99;
    return o99;
}
const v100 = f25(16, 12306);
const v101 = f25(9007199254740991, 16);
const v102 = f25(9007199254740991, 16);
function f103(a104, a105, a106, a107) {
    a104 + a104;
    a105 - a105;
    a107 - a107;
    const o124 = {
        2838184983: f25,
        m(a112, a113, a114) {
            try {
                super.map(f25, 16, a112, a105);
            } catch(e116) {
            }
            try { a112["valueOf"](a105); } catch (e) {}
            super.g &= a113;
            const o122 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o122);
            Object.defineProperty(a113, 5, { writable: true, configurable: true, get: f25, set: f25 });
            return a113;
        },
        [v100]: a105,
        0: v102,
        "c": v101,
    };
    return o124;
}
f103(16, 16, v100, 9007199254740991);
const v126 = f103(12306, v101, v102, f103);
f103(9007199254740991, 16, v102, 12306);
class C128 extends f25 {
    static a;
    static #h;
    [9007199254740991] = 9007199254740991;
    constructor(a130, a131) {
        super(16, 12306);
        new f25(9007199254740991, 12306);
        function f133() {
            return this;
        }
        f133.length = f133;
        f103(a131, v102, v100, f103);
        [-253508233];
        const v136 = [4294967296,-46087,8,536870912,-15,-3];
        try { v136.some(v6); } catch (e) {}
        const v138 = [10,-35275,147615337,65536,1073741823,-1205430876,-2,63316,28010];
        try { v138.entries(); } catch (e) {}
    }
}
const v140 = new C128(v100, 12306);
const v141 = new C128(v100, 16);
v141.c = v141;
new C128(v141, 9007199254740991);
new Uint32Array(253);
let v146 = 1839;
const v148 = new Float64Array(v146);
let v149 = 242;
v149 * v149;
v149--;
const v153 = new BigInt64Array(v149);
v153.f = v153;
const v154 = /G?/vis;
v154.e = v154;
const v155 = /kj/iu;
const v156 = /lxyz{0,1}?/mvgisyd;
v156.dotAll = v156;
class C157 {
    valueOf() {
    }
    o() {
        this.valueOf(this);
    }
}
try { C157.apply(9007199254740991, v21); } catch (e) {}
try { new Uint8ClampedArray(C157, C157, v140); } catch (e) {}
const v165 = new Uint8ClampedArray(1203);
try { v165.reduce(F0); } catch (e) {}
const v168 = new BigInt64Array(8);
2 & 2;
const v171 = new Float64Array(2);
try { v171.join(1203); } catch (e) {}
v171[1] = v171;
function f174() {
    return "next";
}
16 >>> 16;
const v177 = 16 ^ 16;
const v178 = [1000,-14,16,-11,-1413918991,-16,-374255446,-14,1000,10];
const v179 = v178.sort();
const v181 = new Float32Array();
v181.constructor;
const v184 = Symbol.toPrimitive;
Symbol.for(v184.description);
const o199 = {
    [v184]() {
    },
    get e() {
        super[2] = v148;
        function F190(a192, a193, a194, a195) {
            if (!new.target) { throw 'must be called with new'; }
            this.g = a195;
        }
        new F190(this, v100, v178, 2);
        new F190(2, v140, v178, "next");
        new F190(v101, v155, v178, v155);
        return v178;
    },
};
try { v179.toSpliced(v154, Uint8ClampedArray); } catch (e) {}
const v202 = new Set(v178);
let v203 = undefined;
v203 = v202;
[-9223372036854775807,1073741824,-65535,1945375758,4294967295,-9,-65537,1,-268435456];
9007199254740992n << 9007199254740992n;
const v207 = [];
const v208 = v207?.find;
let v209;
try { v209 = new v208(v202); } catch (e) {}
const v210 = v207.groupToMap;
v210.length = v210;
let v211;
try { v211 = new v210(); } catch (e) {}
try {
    v126[512] = v168;
} catch(e212) {
}
[-16,1,1975585935,-256];
[1073741825,268435441];
[-65537,-14,-4294967295,-11341,6,21477,65535,1,5,2147483649];
const v216 = [9007199254740992n,f174];
let v217;
try { v217 = v216.entries(); } catch (e) {}
const v218 = v217?.__lookupSetter__;
try { new v218(Float32Array); } catch (e) {}
const v220 = [v177];
try { v220.includes(v209); } catch (e) {}
function f224() {
    const o225 = {
        "c": f224,
    };
    const v227 = Array(16);
    class C228 {
        [16] = v227;
        h = 16;
    }
    return o225;
}
try { f224(); } catch (e) {}
const v230 = -409.5445341345936 + -409.5445341345936;
v230 | v230;
const v234 = 2.220446049250313e-16 - 2.220446049250313e-16;
const v235 = [2.220446049250313e-16,4.276454155698374];
try { v235.copyWithin(v234, v234); } catch (e) {}
const v237 = [v235,v235,2.220446049250313e-16];
v146--;
const o239 = {
    ...v237,
};
const o240 = {
    "d": v211,
};
try { o240.toString(); } catch (e) {}
Object.defineProperty(v220, 2081, { configurable: true, enumerable: true, value: 2056527154 });
