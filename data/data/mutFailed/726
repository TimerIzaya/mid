function f0() {
}
class C1 extends f0 {
    constructor(a3, a4) {
        function f5(a6) {
            function f8(a9) {
                a9 & a9;
            }
            this.onmessage = f8;
            this.__proto__;
        }
        const v16 = [f5];
        const o17 = {
            "arguments": v16,
            "type": "function",
        };
        new Worker(f5, o17);
    }
    static 7 = f0;
    static [f0] = f0;
    static o() {
        const v23 = [1557591051,8137,536870888,-9223372036854775808];
        v23 * v23;
        for (let v25 = 0; v25 < 24; v25++) {
        }
        -4294967295 << 13036;
        13036 >> Math;
        const v29 = Math();
        try { C1.ownKeys(v29); } catch (e) {}
        super.f;
        Math.atan(518.4128345379615);
        Math.imul(13036, this);
        518.4128345379615 && this;
        return Math.trunc(this);
    }
}
const v37 = new C1();
const v38 = new C1();
new C1();
[-20937,255,4,-1900196774,1073741823,1474746071,64,64,1073741825,-2];
let [,v42,...v43] = [723200.4184824808,-1000.0,-523437.54204506474,-964793.6675249395];
const v45 = new Float32Array();
let {...v46} = v45;
const v47 = [-1293903576,945,54435,-65536,9,8,-1,-65535];
[1073741824,994532882,-1720,-65537,1073741824,-729,-1048151815,-9223372036854775808,257];
v38[v38] = v47;
try { v37["at"](v46, v45, v45); } catch (e) {}
new Uint8Array(13);
new BigUint64Array(417);
/abc?/gvmy.exec("Q8F");
function F66() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = 9007199254740991;
}
const v69 = new F66();
const o72 = {
    set h(a71) {
    },
    __proto__: v69,
};
for (const v73 in o72) {
}
new Float32Array(3411);
new Uint8ClampedArray();
const v80 = [-2.220446049250313e-16];
function f81() {
    ([1630629478,9,2034969337]).__proto__;
    new Uint32Array(Uint32Array);
    let v87 = 0;
    class C89 {
        #b = v87;
        g = 1.1408591040999836e+308;
        static {
            this.e = this;
            const v94 = v87++;
            -v94;
            ~v87;
            Math.log10(44149);
            const v98 = 44149 + v87;
            v98 >> v98;
            Math.fround(v94);
        }
    }
    function f101(a102) {
        a102 !== v80;
        function f104() {
        }
        ([-5,2147483649,-4294967295,1,8,-4331,52354,15231])["Q8F"]();
        class C107 {
            #m(a109, a110) {
            }
            [-1];
        }
    }
    this.onmessage = f101;
}
const v114 = [];
const v117 = new Int32Array(127);
function f118(a119, a120) {
    return v117.toSorted();
}
new Promise(f118);
const o124 = {
    "arguments": v114,
    "type": "function",
};
new Worker(f81, o124);
Math.cos(-1567809689);
new Float32Array(4061, 4061);
const v133 = new Int16Array(255);
const o134 = {
    ...v133,
};
