function f3() {
    return 268435439;
}
[-65535,-65535];
const v5 = [3,268435439];
const v6 = [f3];
class C7 {
    constructor(a9, a10, a11, a12) {
        try {
            super.n(-65535, a11);
        } catch(e14) {
        }
    }
    [268435439];
    static #g = v5;
    static e;
    2611;
}
new C7(v5, 3, v6, 268435439);
const v16 = new C7(v6, 268435439, v6, 3);
new C7(v16, 3, v6, 268435439);
const v18 = [601759695];
const v19 = [427812215,61195,-2147483647,4096,-2147483647,30905];
function f21(a22, a23, a24, a25) {
    function f26(a27) {
        const v29 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
        const v30 = [601759695];
        const v31 = [1073741824,1073741823,1376142744,1073741825];
        function f33(a34, a35, a36, a37) {
            function f39() {
                const o46 = {
                    "e": -4294967295,
                    ...v29,
                    ..."Vre",
                    "c": v31,
                    "f": "-1073741824",
                    84: arguments,
                    ..."Vre",
                    valueOf(a44, a45) {
                        return "-1073741824";
                    },
                    ..."Vre",
                    4: "Vre",
                    "c": -268435456,
                    5: -4294967295,
                    6: -268435456,
                };
            }
            f39();
            %OptimizeFunctionOnNextCall(f39);
            let v49;
            try { v49 = v31["find"](..."find", a37, ...v30, ...v31, ...522675525n); } catch (e) {}
            v49 <= a36;
            return arguments;
        }
        return a24;
    }
    a24.toString = f26;
    function f51() {
        const o58 = {
            "h": -1073741824,
            ..."Vre",
            valueOf(a56, a57) {
                return 522675525n;
            },
            ..."Vre",
            "c": a25,
            5: -1073741824,
            6: -268435456,
        };
        return a25;
    }
    f51();
    %OptimizeFunctionOnNextCall(f51);
    let v61;
    try { v61 = v19["find"](..."find", a25, ...v18, ...v19, ...522675525n); } catch (e) {}
    v61 <= a24;
    return a24;
}
f21.valueOf = f21;
const v63 = f21(v19, v19, v18, 522675525n);
for (let v64 = 0; v64 < 5; v64++) {
    f21(v18, v64, false, v64);
}
%OptimizeFunctionOnNextCall(f21);
f21(522675525n, v18, f21, v63);
