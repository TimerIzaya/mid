class C3 {
    static {
        const o5 = {
        };
        try {
            o5.c = "5";
        } catch(e6) {
        }
        try {
            const o7 = {
            };
            o7.c = "5";
            o7.f = this;
        } catch(e8) {
        }
        try {
            const o9 = {
            };
            o9.c = "5";
            o9.f = this;
            o9.h = "5";
            o5[C3];
            [-489.68385299857675,0.4027103229974356,3.0,-0.0,-3.0,5.0,0.3273781736592527,1.1490020174790868e+308,1e-15,543.9262662609419];
            [-6.617065326198293,-1000000.0,1000000000.0,-738.48732974731,949347.3007115081,0.2463715108311847,8.572483430397671,1000000000.0];
            [1e-15,-Infinity,5.0,-2.2250738585072014e-308,1000000000.0,NaN,-495412.2713732754];
            C3++;
        } catch(e15) {
        }
        try {
            const o16 = {
            };
            o16.c = "5";
            o16.f = this;
            o16.g = this;
        } catch(e17) {
        }
    }
}
const v18 = new C3();
const v19 = new C3();
const v20 = new C3();
class C21 extends C3 {
    static set c(a23) {
        const v24 = new C3();
        try { a23(); } catch (e) {}
        try { v24.catch(); } catch (e) {}
    }
    o(a28, a29, a30) {
        "5" && v19;
        a30[v18] ||= a29;
        return a30;
    }
    static #e = "5";
    3;
    constructor(a33, a34, a35) {
        super();
        a33 = v18;
        try { a34.toString(); } catch (e) {}
    }
}
const v40 = new C21(v20, v19, v18);
let v41 = new C21(C3, C21, C21);
const v42 = new C21(v41, v19, v20);
function f43(a44, a45, a46) {
    const o51 = {
        get d() {
            return 8;
        },
        ...v42,
        "c": a44,
        __proto__: C21,
        [v19]: "5",
        ["5"]: -944.0010040664015,
        [C21]: v20,
    };
    return o51;
}
f43(v42, f43(v42, v18, v41), f43);
f43(v41, v20, v41);
const v55 = [-9223372036854775808,-12];
class C57 {
}
[12];
for (let i = 0; i < 25; i++) {
    if (Int32Array) {
        v40 >> Float64Array;
    } else {
        v41 *= f43;
    }
    new Uint8ClampedArray(129);
}
const v74 = new C57();
const v75 = new C57();
const v76 = new C57();
function F78(a80) {
    if (!new.target) { throw 'must be called with new'; }
    const v81 = this.constructor;
    try { new v81(); } catch (e) {}
    const v84 = new Int8Array();
    v84.length = 415075273;
}
new F78();
function F87(a89, a90, a91) {
    if (!new.target) { throw 'must be called with new'; }
    const v92 = this.constructor;
    try { new v92(this, a91, -14); } catch (e) {}
    a91.valueOf(a89, a91);
}
new F87(v75, v76, v76);
const v96 = new F87(v75, v74, v74);
new v96(v55);
