const v0 = [];
function f1() {
    const o10 = {
        "g": v0,
        ...v0,
        "c": v0,
        [v0]: v0,
        "f": v0,
        toString() {
            function F3(a5) {
                if (!new.target) { throw 'must be called with new'; }
                try {
                    this.b = v0;
                } catch(e6) {
                }
            }
            const v7 = new F3(this);
            new F3(v7);
            const v9 = new F3(F3);
            return v9;
        },
    };
    return o10;
}
f1();
const v12 = f1();
let v13 = f1();
const v15 = new WeakSet();
const v19 = /a\bc^(?:ab)|cde(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\106q?/v;
/a?E(?:a+)?7(?<!a)/vdimsy;
const v21 = /27/vs;
class C22 extends WeakSet {
    constructor(a24, a25, a26, a27) {
        super(a25);
        try {
            new f1();
        } catch(e29) {
        }
        const v32 = a27?.b;
        super[v32] = v32;
        new BigInt64Array(2282);
        new Int8Array(453);
        new BigInt64Array(2731);
    }
    static h;
    static f = v21;
    static #g;
    static #h;
    d;
}
const v43 = new C22(-2147483648, v21, -880634351, v21);
new C22(-880634351, -881251668, v43, v19);
new C22(-2147483648, v43, v15, v19);
const v47 = new Set();
class C48 {
    [v47];
    static {
        try { v15.add(f1); } catch (e) {}
        v13 = v12;
        v21 instanceof f1;
        new f1();
        v47[3553534096];
    }
}
function f54(a55) {
}
new C48();
