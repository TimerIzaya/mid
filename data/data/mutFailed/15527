[-1000.0];
const v1 = [-1000000000.0,1e-15,-0.0,1.0,867.5047285164317,Infinity,-580575.4794063286,-6.327341030787682e+307,7541.918252082425];
const v2 = [-3.0,-91.19235008571343,555.9741184007844,-1.7976931348623157e+308];
let v3 = 3;
v3--;
-65536 >>> -65536;
const v7 = -65536 >>> -65536;
function F9(a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "b", { writable: true, value: a12 });
    function f13(a14, a15) {
        return Math.cbrt(7);
    }
    Object.defineProperty(a12, "valueOf", { configurable: true, enumerable: true, value: f13 });
    a12 - a12;
    a12--;
    try {
        this.c = v1;
    } catch(e22) {
    }
    try {
        this.b = 1073741824;
    } catch(e23) {
    }
    try {
        this.g = v2;
    } catch(e24) {
    }
}
try { new F9(v2, v7); } catch (e) {}
const v26 = new F9(v3, -65536);
const v27 = new F9(1073741824, -65536);
const v28 = new F9(v3, 1073741824);
const v29 = v28?.constructor;
try { new v29(v1, v26); } catch (e) {}
const v31 = [-2.216170140955498,-2.2250738585072014e-308,-643865.3403199288,NaN];
const v33 = this?.Int8Array;
try { new v33(v1, v1, v7); } catch (e) {}
const v35 = this?.ReferenceError;
let v36;
try { v36 = new v35(v27); } catch (e) {}
v36.message = v36;
const v37 = this.decodeURIComponent(v31);
v37[40];
try { v37.strike(); } catch (e) {}
