function f3() {
    return -2.0;
}
const t3 = -2.2250738585072014e-308;
t3();
const v5 = [-946.1982015264321,-406.6809700455609];
const v6 = [1000000000.0];
const v9 = [1000.0,1000n];
with ([v9,v9,v9]) {
    new Int32Array(v6, v5, Int32Array);
}
class C14 {
}
function F15() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 4;
    } catch(e18) {
    }
    try {
        this.f = 4;
    } catch(e19) {
    }
    try {
        this.g = 4;
    } catch(e20) {
    }
}
const v21 = new F15();
const v22 = [-2.2250738585072014e-308];
const v24 = v5[v21];
try { v24(v5, Float32Array, F15, v22); } catch (e) {}
new WeakSet();
-Infinity;
class C29 {
}
new Int8Array(268435456);
/a|b\p{Script=Greek}/gudis;
/a{0}/vm;
new Uint32Array(64);
Symbol.iterator;
/(?:a?)*\u0060/isy;
268435456 - 268435456;
function f44(a45, a46) {
    const o52 = {
        toString(a48, a49, a50) {
            try {
                a48.f = 536870888n;
            } catch(e51) {
            }
            return 536870888n;
        },
    };
    return o52;
}
!f44(536870888n, f44());
try {
const t0 = 1000000000.0;
t0(2.220446049250313e-16, Uint8ClampedArray, ...1000000000.0, -82.86062314585524);
} catch (e) {}
