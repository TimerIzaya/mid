const v0 = [0.9293185735284208,2.7209749138129417e+306,0.3483187975515727,-3.220177979672134,32505.35732942715,-0.7310081432062194];
const v1 = [-1000000.0,737.1429360922041,487217.4369639929,5.0,-579.5694638546379];
const v2 = [-1.1309886838335034e+308,0.6508914303056326];
function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    function f6() {
        return this;
    }
    function f7(a8) {
        v1[this] >>>= a5;
    }
    Object.defineProperty(this, "a", { writable: true, enumerable: true, get: f6, set: f7 });
    try {
        this.g = v0;
    } catch(e9) {
    }
    try {
        this.b = v2;
    } catch(e10) {
    }
    try {
        this.a = a5;
    } catch(e11) {
    }
}
const v12 = new F3(v1);
new F3(v1);
const v14 = new F3(v0);
[v14,v0,v14,F3];
const v16 = [v0,v12,v0];
[v0,v16,v16];
new Int16Array(4096);
function f24() {
}
class C25 {
    [Int16Array];
}
new C25();
new C25(f24, 4096, 256, 64);
