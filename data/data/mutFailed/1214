/\p{Script=Greek}/ms;
const v1 = /8a.c/vdmy;
const v2 = /(pwT)/gudmy;
class C6 {
    static toString(a8, a9, a10) {
        const v11 = this[3];
        super[v11] = v11;
        super.a = this[7];
        function f13() {
            return 128n;
        }
        super[a9];
        v2.__proto__;
        a9 = v11;
        v2[5];
        return v1;
    }
    static #g;
    f = 128n;
}
new C6();
new C6();
new C6();
const v26 = [0.48879817238347556,2.2250738585072014e-308,1000.0,1000.0,-681.8004556870678,-1000.0,-1.5737380958439236e+306];
function F27(a29, a30, a31) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = 4411;
    const v32 = [2.412578955630149,2.7008822875610345,-2.220446049250313e-16,-1.0,-1000000000.0,-1.0,3.9002388983145044e+307,-Infinity,-1e-15,-4.2464820531165003e+307];
    const v33 = [-1e-15,4.0,362.9742459010415,1.488212487511409e+308,3.0];
    class C34 {
        constructor(a36, a37) {
            const v38 = super.e;
            const v41 = Reflect.construct(v38, [a31], v38);
            try {
                Reflect.valueOf = v41;
            } catch(e42) {
            }
            super[v33] = v32;
        }
        get e() {
            return F27;
        }
    }
    const v47 = new C34(v32, v33);
    function f48(a49) {
    }
    const v52 = [v47];
    const o53 = {
        "arguments": v52,
        "type": "function",
    };
    new Worker(f48, o53);
}
new F27(531531810, v26, 531531810);
class C56 {
}
