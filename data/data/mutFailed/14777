const t0 = [-65317,-58155,536870889,976,536870889];
t0[2] = 13;
("p").localeCompare([]);
new Uint8Array(17533n);
function F13(a15, a16) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a16;
    } catch(e17) {
    }
}
new BigInt64Array(1741);
("128").fontsize();
function f23() {
    const o28 = {
        ["8"](a26, a27) {
        },
    };
    o28[8] = o28;
    return o28;
}
f23();
const t21 = "128";
t21();
%OptimizeFunctionOnNextCall(f23);
new Uint32Array(176);
const o35 = {
    "execution": "async",
    "type": "minor",
};
const t30 = 13;
t30(o35);
const v43 = [];
v43.lastIndexOf(v43);
("128").fontsize();
const v50 = new Uint32Array(256);
v50.indexOf(-65537);
class C53 extends TypeError {
}
new C53();
const o55 = {
    "maxByteLength": o35,
};
const v57 = new ArrayBuffer(2, o55);
v57.resize(9);
