-Infinity;
const v5 = new Uint8ClampedArray(257);
function f8() {
    return Float32Array;
}
let v9;
try { v9 = v5.indexOf(f8, 2); } catch (e) {}
const v13 = new Float32Array(2);
new Uint16Array(129);
function f17() {
    return 1000000.0;
}
const v24 = [65537,268435441,63298,-5,1235122603];
const v25 = [128,215394418];
let v26;
try { v26 = v25.entries(); } catch (e) {}
try { v26.next(); } catch (e) {}
const v30 = new Float32Array(4096);
function F31() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 3872;
    } catch(e34) {
    }
    for (const v35 in v9) {
        try { v13.indexOf(this); } catch (e) {}
    }
    delete v30[3872];
    Object.defineProperty(v30, 3872, { enumerable: true, get: f17, set: f8 });
}
const v38 = new F31();
function F39(a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a42;
    } catch(e44) {
    }
}
new F39(4096, F31, v38);
const v46 = [-2,-4294967296,4294967297];
function F47(a49, a50, a51, a52) {
    if (!new.target) { throw 'must be called with new'; }
    try { a52.valueOf(); } catch (e) {}
    const v54 = this?.constructor;
    try { new v54(1024, 1024, v24, this); } catch (e) {}
    a50.caller;
    a52[1];
    try {
        this.c = a51;
    } catch(e58) {
    }
    try {
        this.b = -714582153;
    } catch(e59) {
    }
    try {
        this.f = a50;
    } catch(e60) {
    }
}
const v61 = new F47(-714582153, F47, -714582153, v25);
Object.defineProperty(v38, 2147483648, { enumerable: true, get: f17 });
129 instanceof Float32Array;
let v64 = -2147483649;
1000000.0 | 1000000.0;
Math.log(v64);
let v67 = v64--;
v64 * v64;
--v67;
v61.length;
const v71 = new F47(9, v61, 9, v46);
new F47(1024, v71, v46, v46);
Math.atan(Math);
let v80;
try { v80 = ("string").trimStart(); } catch (e) {}
-35417 - -35417;
class C83 {
    #n(a85) {
        const o87 = {
            "execution": "sync",
        };
    }
}
const v88 = new C83();
v88?.constructor;
function f90(a91, a92, a93, a94) {
    try { a91.filter("string", a91); } catch (e) {}
}
f90(-9007199254740991, v80, 1024, "string");
const o97 = {
};
const v98 = new C83();
const v99 = v98?.__defineGetter__;
try { new v99(v88, v25); } catch (e) {}
function f101(a102, a103) {
    do {
    } while (0 < 5)
    const o119 = {
        [a102](a108, a109, a110, a111) {
            function f112(a113, a114) {
            }
            return [923.3408061449261,-6.350919708227568e+307,-2.220446049250313e-16,0.04850379751250988,4.009495502233909];
        },
        set b(a117) {
            try {
            } catch(e118) {
            }
        },
    };
}
const v121 = new Float64Array();
v121.buffer;
try {
} catch(e123) {
}
