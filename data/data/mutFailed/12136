const v2 = new Array(128);
function f3() {
    return Array;
}
-9007199254740991n <= -9007199254740991n;
-2147483647n << -2147483647n;
const v12 = [-7.141796164082641];
v2.g = v12;
const v13 = [488.1924089505544,1000000.0,-914.800482892963];
let v14;
try { v14 = v13.sort(9n); } catch (e) {}
const v15 = [-1000000000.0,0.9528874867910675,-Infinity,2.220446049250313e-16,-3.0,-3.0];
class C17 {
    static {
        try {
            const t15 = null;
            t15.valueOf = this;
        } catch(e19) {
            const v20 = e19.stack;
            try { v20.concat(v2); } catch (e) {}
        }
    }
    m(a23, a24, a25, a26) {
        v13 < "c";
        return "cbrt";
    }
}
let v31;
try { v31 = C17.call(C17); } catch (e) {}
[v31,null];
function f33() {
    -v12;
    new v14();
    -(v2 && v15);
    return C17;
}
%PrepareFunctionForOptimization(f33);
f33();
%OptimizeFunctionOnNextCall(9n);
v14();
