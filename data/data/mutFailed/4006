const v0 = [9];
const v1 = [-2147483648,4294967295,375323464,9007199254740990,64,-9223372036854775808];
const v2 = [65535,-44940,129,6,-2147483647,-37504093,-65535];
const v4 = new WeakSet();
class C5 extends WeakSet {
    m(a7, a8, a9, a10) {
        const v11 = super[a7];
        try { v11.toString(this, v0, v1, WeakSet); } catch (e) {}
        return a9;
    }
    #p(a14) {
        return a14[Symbol.isConcatSpreadable];
    }
    f;
    d = v4;
    e = v2;
    static #g = v4;
}
const v18 = new C5();
const v19 = new C5();
let v20 = new C5();
class C21 {
    constructor(a23, a24) {
        const v25 = delete v2?.length;
        super.g >>= v25;
        function f26() {
            return v1;
        }
        try { new a24(C21); } catch (e) {}
        try {
            f26();
        } catch(e29) {
        }
        v2[-1] = v4;
        v19[WeakSet] = v25;
        ({"c":v20,"length":v20,...a23} = v1);
    }
    [v18];
    static [v20] = v0;
    static [v2];
}
new C21(v1, v4);
new C21(v20, v19);
new C21(v20, v19);
const v36 = new BigInt64Array(257);
new BigUint64Array(v36);
