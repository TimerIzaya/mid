for (let v1 = 0; v1 < 5; v1++) {
}
const v3 = ("1073741823").trimRight();
const v6 = new BigInt64Array(3329);
const v8 = [v6];
const o9 = {
    "arguments": v8,
    "type": "function",
};
o9.b = o9;
const v11 = [798019179,-9007199254740992,-8195,-4294967297,1420574578,9007199254740991,-1493424054,-2147483649,8,47842];
try { o9.at(BigInt64Array); } catch (e) {}
try { new Float32Array(BigInt64Array, 160, 160); } catch (e) {}
new Float32Array(v11);
class C16 {
    static get b() {
        super.getOwnPropertyNames();
    }
}
const v19 = new Uint16Array(160);
Uint32Array.d = Uint32Array;
new Uint32Array(0);
new v19(376);
65536n - 65536n;
const o34 = {
    ["536870889"]: "toString",
    set e(a32) {
    },
    get e() {
        return "536870889";
    },
};
const v37 = 2147483649 >> 2147483649;
2147483649 << 2147483649;
const v40 = this?.ReferenceError;
try { new v40(0); } catch (e) {}
function f42(a43) {
    return v11;
}
this.onmessage = f42;
try { v37.trimRight(); } catch (e) {}
const t41 = "IxTD";
t41[2] = "IxTD";
const v46 = [-0.0,3.5501749464532004,-0.0,-2.220446049250313e-16,0.7626441105891978,-585.9055525866645,1e-15,1000000.0];
class C48 extends Uint16Array {
}
class C49 {
}
try { C49(); } catch (e) {}
try { v46.map(v3); } catch (e) {}
const v52 = C16 ** "IxTD";
v52 >>> v52;
!Number.isNaN(v52);
