const v0 = [5.0,4.0,5.537017977407441,1000000.0];
[1000000.0,7.728475330764912e+306,-1e-15,-592.8386493111068];
[3.5608435572799523e+306,615.1227606520858,1.1454860559553233e+308,2.0];
const v3 = /xyz{0,1}*/umy;
/a$*/vdi;
/OYoa\w/v;
[65536,0,9223372036854775807];
[-4684];
[-1167324746,5,47792,536870912];
const v12 = /((((.).).).)rfoo|(bar|baz)|quux*/uims;
function F13() {
    if (!new.target) { throw 'must be called with new'; }
    const o16 = {
    };
}
new F13();
const v18 = /[(?:a*)*]/u;
switch (v12) {
    default:
        let v19;
        try { v19 = v12(); } catch (e) {}
        try { v19(); } catch (e) {}
        break;
    case v18:
        function f21(a22, a23, a24, a25) {
        }
        for (let v27 = 0; v27 < 25; v27++) {
            const v28 = [601759695];
            const v29 = [1073741824,1073741823,1376142744,1073741825];
            function f30(a31, a32, a33, a34) {
                try { v29.toSorted(f21); } catch (e) {}
                const v39 = new Float32Array(v0, a34, a31);
                function f41() {
                    return a31;
                }
                class C43 extends v39.constructor {
                    #c = 84;
                }
                function f44(a45, a46) {
                    return v3;
                }
                try { f44(f30, a34); } catch (e) {}
                %OptimizeFunctionOnNextCall(f41);
                try { v29["find"](..."find", a34, ...v28); } catch (e) {}
                const o50 = {
                    [Date]: 128,
                    __proto__: arguments,
                };
                return f41;
            }
            for (let v51 = 0; v51 < 5; v51++) {
                f30();
            }
        }
}
