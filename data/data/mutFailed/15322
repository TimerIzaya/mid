const v0 = [1975588084,65535,62349,-65536,255,16,-26448,-5532,-31036,536870889];
const v1 = [944298835,6655,-268435456,-9223372036854775808,5,61212,-1276009485];
const v2 = [9564,512,10,-128,13];
const v4 = new Date();
function f5(a6) {
    const o14 = {
        "f": v0,
        [v0](a8, a9, a10, a11) {
            try {
                super.n(Date, this);
            } catch(e13) {
            }
            return v1;
        },
        "c": a6,
        "b": a6,
        "h": a6,
        [v1]: a6,
        ...v4,
    };
    return o14;
}
f5(v2);
const v16 = f5(v1);
f5(v2);
new Float32Array(1024);
new BigInt64Array(-1764426912);
new Float64Array(2734);
const v28 = new Date();
v28.setUTCFullYear();
const v31 = new Set();
const v32 = v31.add(v28);
let [v33,,...v34] = v31;
v33.setUTCHours(v32);
for (let i38 = 0, i39 = 10; i38 < i39; i38++, i39--) {
    break;
    function F47(a49, a50, a51, a52) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.c = Date;
        } catch(e53) {
        }
        try {
            this.b = a51;
        } catch(e54) {
        }
    }
    const v55 = new F47(v0, v16, v0, v4);
    const v56 = new F47(v0, v55, v2, v28);
    new F47(v1, v56, v0, v56);
}
