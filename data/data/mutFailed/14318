class C3 {
    static {
        this.length;
        function f6(a7, a8) {
            try { a7(); } catch (e) {}
            delete arguments[2];
            try {
                this.valueOf = a7;
            } catch(e12) {
            }
            return arguments;
        }
        f6(this, this, -1.7976931348623157e+308, this);
    }
    static c = -1.7976931348623157e+308;
    static #d = 758.338088926366;
    g = -1.7976931348623157e+308;
}
try { new C3(); } catch (e) {}
const v15 = new C3();
const v16 = v15?.constructor;
try { new v16(); } catch (e) {}
new C3();
const v19 = new C3();
v19.h = v19;
const v22 = new Uint8Array(268435440);
function F23() {
    if (!new.target) { throw 'must be called with new'; }
}
class C25 {
    constructor(a27, a28, a29) {
        a27.length = a27;
        class C31 extends a28.constructor {
        }
        try { new C31(); } catch (e) {}
        const v33 = new C31();
        const v34 = v33?.constructor;
        try { new v34(); } catch (e) {}
    }
}
C25.prototype;
new C25(F23, C25);
/a$a|bc/gim;
/(?<a>(?<b>(?<c>(?<d>.).).).)ab\b\d\bcdAH/gvdimy;
/(Dc{12,3b*)/ms;
try { ("b").toWellFormed(); } catch (e) {}
-Infinity;
1.7976931348623157e+308 < 1.7976931348623157e+308;
const v50 = [865030.0072136207,-1000000000000.0,-1.2335898302795516e+308,-123.52161477757932,0.8230465364846693,-141113.64897402772,-196.5981128122221,151.59178734474358,0.667472981056507,-0.0];
class C51 extends Set {
}
C51.length;
const v53 = new C51();
try { v53.forEach(-2.0); } catch (e) {}
function f55(a56) {
    try { BigInt64Array(-2.0, 758.338088926366, v22); } catch (e) {}
    const v59 = new BigInt64Array(a56, a56, a56);
    const v60 = `
        var c = v59;
    `;
    return eval(v60);
}
try { f55(C51); } catch (e) {}
v53.toString = f55;
v50[v53];
