const v0 = [9007199254740991,-9,10000,127,3,-1530162875,-833884721,6,-25361049,15];
const v1 = [536870887,843979888,-1073741824,698838935,-128];
const v2 = [200387720,-9223372036854775808,-8,-13,-27891,4,-1];
const v4 = [[v0,v2],v0,v0,v0,v2];
const v5 = [v4,v1,v4,v1];
class C6 {
    static [v4] = v2;
    valueOf(a8, a9, a10) {
        try {
            super.round(v2, v2, a8);
        } catch(e12) {
        }
        return this;
    }
    static a;
    c;
    h = v0;
}
new v2();
new C6();
new C6();
new BigUint64Array(1);
new Int8Array(v5);
new Int32Array(7);
function F28(a30, a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
}
const v33 = new F28(3011, Uint8ClampedArray, F28);
v33.constructor = Date;
const t29 = v33.constructor;
new t29(v33, Uint8ClampedArray, 3011);
