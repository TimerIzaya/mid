[];
new Date();
let v3 = 10;
v3++;
Uint8Array.length;
const v7 = new Uint8Array(v3);
const v10 = new Float32Array(0);
Uint16Array.name;
new Uint16Array(15);
v10[1024];
let [] = v7;
Uint32Array.prototype;
const v20 = new Uint32Array(208);
function f21() {
    return Date;
}
function f22(a23) {
    for (let v24 = 0; v24 < 32; v24++) {
        v10["p" + v24] = v24;
    }
}
Object.defineProperty(v20, "valueOf", { writable: true, configurable: true, get: f21, set: f22 });
v20[132] = v20;
Int8Array.d = Int8Array;
new Int8Array(3);
const v32 = new BigInt64Array(127);
try { v32.reduce(v32); } catch (e) {}
new Uint32Array(1024);
new Int16Array(1000);
new Float64Array(9);
const v42 = [];
v42[0] = 9;
const v44 = new Date();
try { v44.valueOf(); } catch (e) {}
v42[0];
-512n;
-2.2250738585072014e-308 >>> -2.2250738585072014e-308;
Object.defineProperty(v42, "h", { configurable: true, enumerable: true, set: Date });
try { Promise.bind(Date); } catch (e) {}
