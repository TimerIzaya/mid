const v0 = /(?:a+)+{1z}/gdm;
const v1 = /mF[^123]*/gvdimy;
const v2 = /[\cz]\w|\da(?!(a))\1/visy;
const v4 = [true,v1];
const v5 = [v4,true,v2];
const v6 = [v5,v1,v0,v5];
function f7(a8, a9, a10) {
    const o21 = {
        ...v6,
        ...v6,
        __proto__: v4,
        "b": v5,
        get f() {
            const v14 = new Uint8ClampedArray(257);
            new Float32Array(1);
            new Uint8ClampedArray(10);
            return v14;
        },
    };
    return o21;
}
const v22 = f7(v6, v5, v1);
const v23 = f7(v6, v6, v2);
const v24 = f7(v5, v5, v2);
function f25(a26, a27, a28) {
    const o41 = {
        "f": a27,
        "h": a26,
        ...a26,
        "a": a28,
        set c(a30) {
            this[4] = a28;
            super[this];
            try {
                const v37 = new Array(65535);
                f7(v37, v37, /w.M[xyz]/dims);
            } catch(e40) {
            }
        },
    };
    return o41;
}
f25(v0, v0, v22);
f25(v1, v2, v24);
f25(v1, v1, v23);
const v45 = [6,16];
const v48 = Date.constructor;
const o56 = {
    [v45](a50, a51, a52, a53) {
        [,];
    },
};
const v57 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
const v58 = [3,-6,7268,-554513674,5,4294967295,861325878,17152,2147483647,5];
function f60(a61, a62, a63) {
    try { a62.groupToMap(v48); } catch (e) {}
    return a63;
}
const v65 = f60(v58, v57);
v65.fill();
f60(v45, v65);
