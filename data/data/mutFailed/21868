function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    this.d = this;
    try {
        this.g = a5;
    } catch(e7) {
    }
    try {
        this.d = a5;
    } catch(e8) {
    }
    try {
        this.f = -268435456;
    } catch(e9) {
    }
}
const v10 = new F3(16, -268435456);
new v10(-268435456, -268435456);
new F3(16, -22940);
[-3.0,952.1054171388887,404324.27216332033,-1000000000000.0,1.7976931348623157e+308,-2.0,Infinity,2.0];
function f21(a22, a23) {
    for (let v25 in F3) {
        v25 -= v25;
        try { new a22(...v25, -6.441557670402009, v25); } catch (e) {}
    }
}
[];
const o31 = {
    "type": "function",
};
new Worker(f21, o31);
const o34 = {
};
let v37 = 10;
for (; v37--;) {
    for (let v39 = 0; v39 < 32; v39++) {
        "p" + v39;
    }
}
[-6.695596969959072];
[0.03568519099872258];
function f46(a47, a48, a49, a50) {
}
