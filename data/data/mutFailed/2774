new Uint8ClampedArray(1925);
new Uint16Array(976);
new Uint8Array(2782);
[1e-15,-3.0,6.955227367884131,-713.316898795392,789067.4769803251,-1000000000000.0,0.7949082175429285];
[-6.24355517843219e+307];
[-273.0157744565771];
class C12 extends Uint16Array {
    #b;
    static set b(a14) {
        class C17 {
        }
        const v18 = new C17();
        const v19 = new C17();
        const v20 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
        const v21 = [601759695];
        const v22 = [1073741824,1073741823,1376142744,1073741825];
        function f24(a25, a26, a27, a28) {
            function f30() {
                const o39 = {
                    "e": -4294967295,
                    ...v20,
                    84: arguments,
                    ..."Vre",
                    set b(a34) {
                    },
                    ["Vre"](a36, a37) {
                        super[f30];
                    },
                };
                return a25;
            }
            class C41 extends Float32Array {
                constructor(a43, a44, a45) {
                }
            }
            f30();
            %OptimizeFunctionOnNextCall(f30);
            let v48;
            try { v48 = v22[a27](..."find", a28, ...v21, ...v22, ...522675525n); } catch (e) {}
            v48 <= a27;
            return arguments;
        }
        for (let v50 = 0; v50 < 10; v50++) {
            f24();
        }
        %OptimizeFunctionOnNextCall(f24);
        for (const v52 in v19) {
            const t47 = Int32Array();
            t47[3] = 9007199254740991;
            v18.p("m");
        }
        f24(v22, f24, 522675525n);
        super.d = 1925;
        this[65536];
        try {
            new Uint8ClampedArray(1453498651);
        } catch(e61) {
        }
    }
    4294967295;
    #a;
    #g;
    10;
}
new C12();
new C12();
new C12();
const v65 = [155533.8602852358,2.0];
function F67() {
    if (!new.target) { throw 'must be called with new'; }
    for (const v72 of Array(19793)) {
        v65[658291203] = null;
        Math.cbrt(19793);
        Math.exp(0.4890055133608564 || 0.4890055133608564);
    }
    const v78 = [19793,19793,19793,19793];
    [v78,v78];
    [Array,Array,Array,Array] >= Uint16Array;
}
new F67();
new F67();
