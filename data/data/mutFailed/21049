const v2 = new Int16Array(4);
128 >> 128;
new BigInt64Array(128);
64 + 64;
new Uint8ClampedArray(64);
function f11() {
    return v2;
}
for (let v13 = 0; v13 < 32; v13++) {
    v2["p" + v13] = v13;
}
5 >> 5;
let v17 = -15;
v17--;
const v20 = [723.7929036737096,-1.7976931348623157e+308,-600.8221434718189,300.34554048893665,-1.0,3.0,0.3604916805537314,1000.0];
f11();
%PrepareFunctionForOptimization(f11);
f11();
f11();
%OptimizeMaglevOnNextCall(f11);
f11();
function f26(a27, a28) {
    v20.length %= 2136873598;
    return a27;
}
%PrepareFunctionForOptimization(f26);
const v29 = f26(2136873598, 2136873598);
v29 * v29;
%OptimizeFunctionOnNextCall(f26);
const o33 = {
    "maxByteLength": 3932,
};
const v35 = new SharedArrayBuffer(1701, o33);
new BigInt64Array(v35);
const v38 = f26(v29, v20);
v38 - v38;
