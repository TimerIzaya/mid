new Map();
let v5;
try { v5 = Uint8Array.toString(); } catch (e) {}
let v6;
try { v6 = v5.toLowerCase(); } catch (e) {}
new Uint8Array(8);
79 & 79;
let v11;
try { v11 = new BigInt64Array(8, 8, 8); } catch (e) {}
const v12 = v11[3];
const v13 = new BigInt64Array(79);
let v16;
try { v16 = new Uint16Array(5, 8, v13); } catch (e) {}
const v17 = new v12(5);
v17[4] = v17;
class C18 extends v6 {
    static {
        this.g = this;
        const o20 = {
        };
        o20.h = o20;
        try {
            o20.g = Uint8Array;
        } catch(e21) {
        }
        try {
            const o22 = {
            };
            o22.h = o22;
            o22.c = o22;
            o22.g = v12;
            this.f = this;
        } catch(e23) {
        }
        try {
            const o24 = {
            };
            o24.g = Uint8Array;
            o24.f = this;
            o24.c = 5;
        } catch(e25) {
        }
        try {
            const o26 = {
            };
            o26.g = Uint8Array;
            o26.f = this;
            o26.c = Uint8Array;
        } catch(e27) {
        }
    }
}
try { new C18(); } catch (e) {}
new C18();
new C18();
new v16();
!(-5063 === -5063);
let v35 = -645202507;
const v36 = v35++;
v36 - v36;
~v35;
/Ckza\Wb?/vis;
