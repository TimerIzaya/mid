[];
const v2 = new WeakMap();
let v4 = 2.220446049250313e-16;
let v7;
try {
const t0 = 1000000000.0;
v7 = t0(v4, Uint8ClampedArray, ...1000000000.0, -82.86062314585524);
} catch (e) {}
[4294967295,59710,9007199254740990,219711539];
const v9 = [-2031072467,268435439,9007199254740992,-510223911,10000,-4096,-51197,268435439];
let v10;
try { v10 = v9.groupToMap(v9); } catch (e) {}
v7[268435439] ||= v10;
v2[1000000000.0] = WeakMap;
v4 / WeakMap;
v9[6];
for (let v13 = 0; v13 < 32; v13++) {
    v9["p" + v13] = v13;
}
[255,-1073741824,1073741824,129,-3,-12,1000,15];
v4--;
-12 * -12;
([1000000000.0,-1000000.0,1.24360602069514e+308,-466050.99214737606,-5.0,2.220446049250313e-16,-1.450734662252993e+308,0.0,5.532464256924747])[5];
[1000000.0,-4.0,-1000000000.0,1.0,1000.0];
const v27 = new BigUint64Array(208);
function f28(a29, a30) {
    v27.filter(a29);
    return f28;
}
[0.8882557348116763,2.220446049250313e-16];
for (let v33 = 0; v33 < 5; v33++) {
    function f34() {
        "Vre" == "Vre";
        let v37 = ("Vre").codePointAt(v33);
        ([-833.5530374606573,-46757.76096849947,-2.220446049250313e-16,-1000000.0,0.0,1.0,0.042648320103989557,1.4570589756852907,145338.1606694283]).groupToMap;
        const o40 = {
        };
        const o41 = {
        };
        return o41;
        const v43 = v37 * v37--;
        return v43 / v43;
    }
    f34();
    %OptimizeFunctionOnNextCall(f34);
}
