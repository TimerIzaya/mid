function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 128;
    } catch(e3) {
    }
    try {
        this.c = 128;
        function f4() {
            const o5 = {
            };
            const v6 = o5.__defineGetter__;
            let v7;
            try { v7 = v6(); } catch (e) {}
            return v7;
        }
        f4();
    } catch(e9) {
    }
    const v12 = Math.tan(-1);
    const v15 = new Uint8Array(127);
    v15.indexOf(v12);
    try {
        this.f = 128;
    } catch(e17) {
    }
}
const v18 = new F0();
const v19 = new F0();
const v20 = new F0();
class C21 {
}
const v22 = new C21();
const v24 = -4294967297n / -4294967297n;
const v25 = [601759695];
for (let v26 = 0; v26 < 5; v26++) {
    function f27() {
        "Vre" == C21;
        const o40 = {
            [-4294967297n](a32, a33, a34, a35) {
            },
            ...v25,
            ...v22,
            4: v24,
            toString(a37, a38, a39) {
                return v26;
            },
            5: -4294967295,
        };
        return f27;
    }
    f27();
    %OptimizeFunctionOnNextCall(f27);
}
const v43 = new WeakSet();
[-1717367034,-45360,9007199254740992,257,536870889,1,3156];
class C45 {
}
new WeakMap();
function f48(a49) {
    const o50 = {
    };
    return o50;
}
class C51 extends f48 {
}
const v52 = [1,-2147483648,6,-128,512,65537];
const v53 = [10,4294967295,-15956,-13];
class C57 extends WeakSet {
    #h = 85.36719577258077;
    constructor(a59, a60) {
        super(a60);
        function F61(a63, a64) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = F0;
            } catch(e65) {
            }
        }
        new F61(v20, a60);
        new F61(v43, v52);
        new F61(v19, v52);
    }
    1024;
}
const v69 = new C57(v18, v52);
new C57(v69, v53);
new C57(v20, v53);
const o77 = {
    get h() {
    },
    1073741824: v18,
    valueOf(a74, a75) {
        return v43;
    },
    get d() {
        return v53;
    },
};
function F78(a80, a81, a82) {
    if (!new.target) { throw 'must be called with new'; }
    const v83 = this.constructor;
    try { new v83(); } catch (e) {}
    o77.h = o77;
    try {
        this << o77;
        [-0.0,0.35331453774891175,0.0,171.67492280642023,0.015915737133018082,-390268.7701156768,-1000000000000.0,-0.0,5.0,-2.220446049250313e-16];
        const v87 = [607.0076449847468,-818.8860494127688];
        v87[0];
        v87[2];
        v87[3];
    } catch(e91) {
    }
}
new F78();
new F78();
