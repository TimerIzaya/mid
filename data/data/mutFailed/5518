const v1 = new WeakSet();
const v2 = [536870888,536870887,1073741825,3,10000,-65536,-950257569,1000];
let v3 = [9,10,268435456];
try { v3.reduceRight(v1); } catch (e) {}
const v5 = [13238,7611,9007199254740990,-1,-256,11];
class C6 {
    static [-1] = WeakSet;
    constructor(a8, a9) {
        v3 = a9;
    }
    static #a;
    set g(a12) {
        function f13() {
            return a12;
        }
        v2["fill"](v3, a12, a12);
    }
    static {
        this.g = this;
        this.b = this;
        const o17 = {
        };
        o17.c = o17;
        o17.h = o17;
        Proxy.name;
        const v20 = new Proxy(this, o17);
        try { new v20(Proxy, Proxy); } catch (e) {}
        let v22;
        try { v22 = new v20(); } catch (e) {}
        this[3031];
        BigInt64Array.length = BigInt64Array;
        const v26 = new BigInt64Array(3);
        class C28 {
            9 = 6;
        }
        function f31(a32) {
            function f34(a35) {
                try { a32.valueOf(a35, Uint32Array, WeakSet, a35, this); } catch (e) {}
            }
            this.onmessage = f34;
        }
        const v39 = ["function"];
        const o40 = {
            "arguments": v39,
            "type": "function",
        };
        const v41 = new Worker(f31, o40);
        const v42 = v26?.some;
        try { new v42(3); } catch (e) {}
        Uint32Array.BYTES_PER_ELEMENT = Uint32Array;
        new Uint32Array(2368);
        let v47 = 128;
        v47++;
        const v50 = new Uint16Array(v47);
        const v51 = v50?.constructor;
        try { new v51(v41, v22, v2); } catch (e) {}
    }
}
let v53;
try { v53 = new C6(); } catch (e) {}
const v54 = v53?.constructor;
try { new v54(v53, v53); } catch (e) {}
const v56 = new C6();
const v57 = v56?.constructor;
try { new v57(v1, v1); } catch (e) {}
class C59 {
    constructor(a61, a62) {
        for (let i = 0; i < 10; i++) {
            this[this];
        }
    }
}
C59.length = C59;
const v64 = v56?.constructor;
let v65;
try { v65 = new v64(); } catch (e) {}
const v66 = v65?.constructor;
try { new v66(v65, v65); } catch (e) {}
new C6();
new C6();
try { new Float32Array(v1, v1, Float32Array); } catch (e) {}
const v73 = new Float32Array(7);
v73[4] = v73;
const v76 = new Float64Array(58);
let v77 = 158;
v77 >>> v77;
let v79 = v77 >= v77;
let v80 = Int32Array;
const v81 = new v80(v77);
const v83 = 268435441 + 268435441;
v83 === v83;
9007199254740991 / 9007199254740991;
let v87 = v73[58];
[v77,v79] = v76;
const v89 = Symbol.iterator;
const o98 = {
    [v89]() {
        let v91 = 10;
        const o97 = {
            next() {
                v91--;
                const v95 = v91 == 0;
                const o96 = {
                    "done": v95,
                    "value": v91,
                };
                return o96;
            },
        };
        return o97;
    },
};
o98.b = o98;
class C99 {
}
new C99();
4091 / 4091;
const v104 = new Float32Array();
Math.atan2(536870912, -9);
const v111 = ([1000000.0,0.218433446981681,-5.0,-919787.2036172998,872389.6270716691]).pop;
try { v111.toString(); } catch (e) {}
try { new Float64Array(Symbol, Float32Array, 58); } catch (e) {}
const v115 = new Float64Array(3842);
try { v115.join(v81); } catch (e) {}
class C117 {
    [9007199254740991] = v104;
    static m(a119) {
        gc();
    }
    constructor(a123, a124) {
        this[9007199254740991] = this;
        const o127 = {
            "type": "minor",
        };
        o127.h = o127;
        o127.b = o127;
        gc(o127);
    }
}
const v129 = new C117();
v129[9007199254740991] = v129;
({"d":v80,"length":v87,} = v5);
o98[128] = eval >> Float64Array;
v5[2] &= v87;
