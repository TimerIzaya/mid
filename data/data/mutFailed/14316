5 & 5;
-11 & -11;
1529 >> 1529;
try { Uint16Array.call(-11); } catch (e) {}
new Uint16Array(1529);
new Int16Array(6);
new Float64Array(64);
const v23 = new Map();
try { v23.forEach(6); } catch (e) {}
class C25 {
    [v23];
    constructor(a27, a28) {
        const v29 = this?.constructor;
        v29.length = v29;
        try { new v29(); } catch (e) {}
        const v31 = /(?<!)/gv;
        v31.e = v31;
        const v32 = /(\xed\xb0\x80)\x01/gudmy;
        v32.c = v32;
        const v34 = Symbol.iterator;
        const o36 = {
            [v34]() {
            },
        };
    }
}
try { C25.call(1028061057n); } catch (e) {}
const v38 = new C25(Map, Map);
const t28 = v38.constructor;
new t28();
