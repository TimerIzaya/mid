function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        try {
            this.fuck(F0, [F0,-52966,this], /a\w/udsy);
        } catch(e6) {
        }
        this.b = -52966;
    } catch(e7) {
    }
    try {
        this.f = -52966;
    } catch(e8) {
    }
    try {
        this.d = -52966;
    } catch(e9) {
    }
}
const v10 = new F0();
const v11 = new F0();
const v12 = new F0();
class C13 extends F0 {
    536870887 = v10;
    static #c;
    constructor(a15, a16) {
        super();
        try {
            super.o(a15, this, F0, a16);
        } catch(e18) {
            v12[536870912] **= a15;
            C13[195] >>= e18;
            super.b <<= e18;
            e18[Symbol.hasInstance] = v12;
        }
        const v21 = typeof this;
        this[255] /= a16;
        a16[a15] &= a16;
        C13?.c;
        try {
            a15.#c = v12;
        } catch(e23) {
        }
        v21 === "function";
    }
    765;
    #e = v10;
}
new C13(v11, F0);
const v27 = new C13(v10, v10);
const v28 = new C13(v27, C13);
class C32 extends F0 {
    constructor(a34, a35, a36) {
        super();
        -9007199254740991 % 0.8899523061796202;
        Math.acosh(a36);
        Math.imul(-9007199254740991, v10);
        a36++;
        0.8899523061796202 | 0.8899523061796202;
        Math.log2(0.8899523061796202);
    }
    [v12];
    [v11];
}
new C32(v28, -2147483647n, 256n);
new C32(v27, 1073741824n, -2147483647n);
new C32(C13, 1073741824n, 1073741824n);
const v49 = [268435440,8,7,1073741824,2147483647,70520590,-9223372036854775807,129,268435439,-1147002105];
v49.concat(v49);
