const v0 = [259885.12295151642];
const v1 = [0.11051722600191383,1.7976931348623157e+308,-570795.9038146604,4.010496951297874,-2.220446049250313e-16];
const v2 = [-731592.8317237655,1e-15,-8.641780238966065e+307,-0.0,-176.2553616257734,263.98210790432313,2.2250738585072014e-308,1.0,-9.797081163220625e+307,-0.0];
class C3 {
    constructor(a5, a6) {
        delete a5?.length;
        const v10 = Symbol.iterator;
        const o32 = {
            [v10]() {
                let v12 = 10;
                const o31 = {
                    next() {
                        v12--;
                        const v18 = new Date(Uint32Array);
                        v18.getSeconds();
                        const v20 = [-10,255];
                        const v22 = new Uint8ClampedArray();
                        v20 * v22;
                        const v24 = v12 == 0;
                        new Uint8Array(3745);
                        try { BigInt64Array(BigInt64Array); } catch (e) {}
                        const o30 = {
                            "done": v24,
                            "value": v12,
                        };
                        return o30;
                    },
                };
                return o31;
            },
        };
    }
}
new C3(v0, v1);
new C3(v2, v1);
new C3(v1, v0);
const v39 = new BigInt64Array(9);
v39.includes(1151276981n);
new Uint8Array(82);
const v49 = new Int32Array(245);
new Float32Array(v49);
new Int16Array(12);
new BigUint64Array(16);
/G\8\x60/gmsy;
class C59 {
    static toString(a61) {
        delete this[this];
    }
}
try { C59.toString(); } catch (e) {}
