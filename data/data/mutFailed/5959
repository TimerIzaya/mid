function f0() {
    const o22 = {
        [-3.0](a5) {
            let v6;
            try { v6 = a5(this, a5, this, 268435456); } catch (e) {}
            v6?.[1974];
            return a5;
        },
        ...16,
        "f": -3.0,
        [-3.0]: -3.0,
        toString(a9) {
            let v8 = this;
            a9 <<= 268435456;
            try {
                v8.f = a9;
            } catch(e10) {
            }
            super.h = -3.0;
            let v14 = 936679.2025986146;
            const v15 = v8 << v14;
            !255;
            const v17 = v8 | v15;
            v8++;
            ~v17;
            const v20 = v14--;
            Math.log1p(v15);
            return v20;
        },
    };
    return o22;
}
f0();
f0();
f0();
const v27 = new WeakMap();
[2.2250738585072014e-308,1000000.0];
[1000.0,-2.220446049250313e-16,0.01892270083275438];
[-351.08752723491693,1e-15];
new WeakSet();
const v36 = /(\1a)/gums;
const v37 = /V(?:a{5,1000000}){3,1000000}/vims;
const v38 = /(?<a>.)\k<a>?/vdimsy;
for (let v39 = 0; v39 < 27; v39++) {
    v36.compile(v37).lastIndex;
}
let v42;
try { v42 = v38(v36, v37, v37, v36); } catch (e) {}
%VerifyType(v42);
const v43 = [v38,v37,v36];
v43[2] = v43;
const v44 = [v43,v37,v38,v43,v43];
v44[2] = v44;
[v38,v36,v36];
let v46 = 8;
v46--;
new BigInt64Array(v37, v36, v42);
const v50 = new BigInt64Array(v46);
%VerifyType(v44);
new WeakMap(v27);
new BigUint64Array(10);
const v60 = new Uint8Array(7);
const t62 = v60.constructor;
const v62 = new t62(Uint8Array, v50, v50);
try { Int32Array.bind(v43); } catch (e) {}
function f66() {
    3.4890473589784586e+307 === 3.4890473589784586e+307;
    let v69 = 1000000000000.0;
    const v70 = v69--;
    -v70;
    const o72 = {
    };
    new Proxy(v62, o72);
    [9,268435440,-1073741824,532077685,16,-1957801169,-9007199254740990,1990731479,-16];
    [9007199254740992];
    [-14,56166,-5,275911661,65536,10,-9007199254740992,160731478];
    -v44 && v44;
    class C83 {
        static #m(a85) {
        }
        constructor(a87) {
            const v89 = new Float32Array();
            let v90;
            try { v90 = v89.entries(); } catch (e) {}
            v90.next();
            const v92 = new Uint16Array(12, -4294967296, v70);
            new Float32Array(v92);
        }
    }
    new C83();
    new C83();
    Symbol.iterator;
    try { v50.reduce(Int32Array, 12); } catch (e) {}
    let v99 = 0;
    v99++;
    const v101 = new C83();
    new C83();
    const v103 = new C83(-4294967296);
    [];
    [257828.6336153492,v103,v101,v103];
    const v106 = [];
    v106[0];
    class C108 extends C83 {
    }
    new C108();
    const v110 = v106.constructor;
    try { v110.isArray(v106); } catch (e) {}
    class C112 extends v110 {
    }
    C112.a = C112;
    const v113 = new C112();
    const v114 = v113.constructor;
    try { v114.bind(); } catch (e) {}
    const o116 = {
        "e": v106,
        __proto__: v43,
        [v44]: v60,
        "h": 257828.6336153492,
    };
    try { o116.e(BigUint64Array); } catch (e) {}
    return Int32Array;
}
%PrepareFunctionForOptimization(f66);
f66();
%OptimizeFunctionOnNextCall(f66);
f66();
