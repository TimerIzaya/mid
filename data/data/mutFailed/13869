const v1 = new WeakSet();
function F2(a4, a5) {
    if (!new.target) { throw 'must be called with new'; }
    let v6 = this.g;
    v6 = this;
    try { a4(); } catch (e) {}
    try { a5(); } catch (e) {}
    try {
        this.d = v1;
    } catch(e12) {
    }
}
let v13;
try { v13 = new F2(WeakSet, F2); } catch (e) {}
const v14 = new F2(F2, v13);
const v15 = new F2(v1, v1);
v15.a = v15;
new F2(v14, v1);
const v17 = [2.762114554889976,1.3854713743647276e+308,1.7976931348623157e+308,0.9899368279833595];
const v18 = [Infinity,23.00233291475638,-1000.0,1000000.0,-1.0,819.9926167353756];
try { v18.groupToMap(v18); } catch (e) {}
const v20 = [-789.503228925273,-9.469490375094761,9.448266622275058e+307,6.276224971994122,3.492359490643949e+307,682.652121433543,431.88778435021345,-960.9197966957679];
try { v20.sort(v17); } catch (e) {}
const v22 = [-7.81855846888522];
[514910.1987104702,2.220446049250313e-16,7.982509915363018,1.2037483639849242e+308,1000000.0,-1000000.0,Infinity,-2.2250738585072014e-308];
[9.921772178443348,2.082436508486982,1.3508503511915885e+308,8.054696314925355e+307,1e-15,1000000.0,2.551078111376735e+307,978141.1599549353];
const v25 = [6,16];
function f27() {
    v15 ** WeakSet;
    try {
        v17.entries();
    } catch(e30) {
    }
    const v31 = v1 + v1;
    function F32() {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.d = v22;
        } catch(e34) {
        }
    }
    const v35 = new F32();
    function f36(a37, a38) {
        const o47 = {
            "h": v35,
            199: a37,
            "b": F32,
            "a": v22,
            n(a40, a41, a42) {
                try {
                } catch(e46) {
                }
            },
        };
    }
    return v31;
}
WeakMap[Symbol.toPrimitive] = f27;
let v50;
try { v50 = new WeakMap(); } catch (e) {}
Date.constructor = Symbol;
const v52 = Date.constructor;
try { v52.prototype(); } catch (e) {}
const o61 = {
    [v25](a55, a56, a57, a58) {
        [,];
    },
};
const v62 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
function f63(a64, a65) {
    return arguments;
    return v50;
}
v62.constructor = f63;
new Uint32Array(2);
new Uint8Array(68);
new BigUint64Array(5);
const v76 = [3,-6,7268,-554513674,5,4294967295,861325878,17152,2147483647,5];
function f78(a79, a80, a81) {
    a80[2];
    try { a80.groupToMap(v52); } catch (e) {}
    return a80;
}
const v84 = f78(v76, v62);
function f85() {
    return Symbol;
}
function f86(a87) {
}
Object.defineProperty(v84, "constructor", { configurable: true, enumerable: true, get: f85, set: f86 });
const v91 = v84.fill();
try { v91.slice(v84, WeakMap); } catch (e) {}
const v94 = f78(v76, v84)?.groupToMap;
let v95;
try { v95 = new v94(v52); } catch (e) {}
v95?.[v91];
Object.defineProperty(v17, v84, { writable: true, configurable: true, enumerable: true, get: f63, set: Symbol });
