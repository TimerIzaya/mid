function f3(a4) {
    const o10 = {
        __proto__: 16,
        "f": -45020,
        "c": a4,
        65537: 65536,
        ...a4,
        16: 16,
        "d": 16,
        5: 65536,
        "b": a4,
        [16]: a4,
        536870912: 65536,
        [a4](a6, a7) {
            var d = 16;
            super.c;
            super.a;
            return -45020;
        },
        6: a4,
        ...16,
    };
    return o10;
}
const v11 = f3(65536);
const v12 = f3(16);
v12[Symbol.toPrimitive] = f3;
f3(16);
[16];
const v18 = [65536,v12,65536];
function f19(a20, a21) {
    new Uint8ClampedArray(Uint8ClampedArray);
    return v11;
}
v18[Symbol.toPrimitive] = f19;
[16,16];
let v29 = -4.0;
const v30 = !-10;
Math.sinh(v29);
++v29;
v29 >> v30;
+v30;
v18 | v30;
function F41() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -65536;
    } catch(e44) {
    }
    try {
        this.b = -65536;
    } catch(e45) {
    }
    try {
        this.e = -65536;
    } catch(e46) {
    }
}
const v47 = new F41();
const v48 = new F41();
v48.fuck = v18;
new F41();
[4294967297,-9,-9007199254740990,-43006,4294967297,2147483649,-9007199254740990,7,536870888,-16];
const o53 = {
    "maxByteLength": 1000,
};
const v55 = new ArrayBuffer(1000, o53);
new Uint8Array(v55);
[9];
const v59 = [256,9007199254740991,-2147483649,2];
class C60 {
    static e;
    16 = v59;
    e = F41;
    constructor(a62, a63) {
        try {
            a62.fuck(false, this);
        } catch(e66) {
        }
    }
}
const v67 = new C60(v48, v47);
const v69 = new WeakSet();
const v70 = v69[v67];
try { v70(); } catch (e) {}
const o72 = {
};
%VerifyType(Proxy());
