function f6(a7, a8, a9) {
    const o25 = {
        n(a11, a12, a13, a14) {
            let v15;
            try { v15 = new a14(...a11, -546220245n, ...a11, ...a11, a8, a13); } catch (e) {}
            v15.b += v15;
            return a13;
        },
        ...a7,
        4294967296: a8,
        "d": 268435441n,
        get e() {
            try {
            const t0 = "HPKR";
            t0();
            } catch (e) {}
            Math.floor(-536870912);
            const v22 = +a8;
            v22 << v22;
            -536870912 << a8;
            return -546220245n;
        },
    };
    return o25;
}
f6("1163035831", -546220245n, 8n);
f6("HPKR", -546220245n, -546220245n);
f6("1163035831", -546220245n, -546220245n);
const t25 = 268435441n;
new t25(1000);
new Float64Array(2867);
new Uint8ClampedArray(10);
function f41() {
    function F43(a45) {
        if (!new.target) { throw 'must be called with new'; }
        const v46 = this.constructor;
        v46.e = v46;
        try {
        const t0 = 10;
        new t0();
        } catch (e) {}
        F43.g = -1;
    }
    new F43();
    const v49 = new F43(-1);
    class C50 extends F43 {
        [-1];
    }
    new C50();
    return v49;
}
%PrepareFunctionForOptimization(f41);
f41();
%OptimizeFunctionOnNextCall(1);
f41();
