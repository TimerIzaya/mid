class C3 {
    get e() {
        this.a -= this;
        "byteOffset" << this;
        return "string";
    }
    constructor(a7) {
        function f8() {
            return Date.parse([10617.622628886602,-5.0,1.7976931348623157e+308,-8.220199247866622e+307,1000000000000.0,0.0,48740.75682475441,-1000000000.0,6.407443663238073,369.9978678982163]);
        }
        a7[Symbol.toPrimitive] = f8;
        const v14 = ("string")[a7];
        "byteOffset" >>> v14;
        Symbol.iterator;
        const o26 = {
            [v14]() {
                let v19 = 10;
                const o25 = {
                    next() {
                        v19--;
                        const v23 = v19 == a7;
                        const o24 = {
                            "done": v23,
                            "value": v19,
                        };
                        return o24;
                    },
                };
                return o25;
            },
        };
        const v27 = o26?.isPrototypeOf;
        try { new v27(o26); } catch (e) {}
    }
}
const v29 = new C3(C3);
function f30() {
    Math.cbrt(v29);
    268435456 || 5652;
    Math.exp("fill");
    return v29 ^ 5652;
}
Object.defineProperty(v29, Symbol.toPrimitive, { writable: true, enumerable: true, value: f30 });
const v40 = new C3(C3);
const v41 = v40?.constructor;
v41.toString = Symbol;
try { new v41(v29); } catch (e) {}
const v43 = new C3("string");
function f44(a45) {
    C3[7];
    const t49 = "string";
    return delete t49[256];
}
v43.constructor = f44;
const v48 = v43?.constructor;
try { new v48(C3); } catch (e) {}
const v53 = [-284268.6699357943,C3,v43];
try { v53.toLocaleString(); } catch (e) {}
const v55 = ["byteOffset",-4.0,-4.0];
const v56 = [-284268.6699357943,v55,v55];
try { v56.reduce(C3); } catch (e) {}
const o58 = {
};
o58.a = o58;
let v59 = -128n;
v59++;
try { o58.p(o58, ...-9n, v59); } catch (e) {}
