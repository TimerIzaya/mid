function f3(a4, a5, a6) {
    function f8(a9) {
        [512,-2147483649,16268,-2112814554];
        [14,5,127,1165780463,1623381910,255,41570,1905420770,10,9007199254740991];
        [36549039,16,-536870912,1000,-1734274613,255,513420864,4,7,2];
    }
    this.onmessage = f8;
}
const v16 = ["function","global","function"];
const o17 = {
    "arguments": v16,
    "NEGATIVE_INFINITY": "function",
};
new Worker(f3, o17);
[-9844];
const v20 = [1073741825,64,64,-2];
const t16 = [298054943,4294967295,-268435456,31288,2147483649,-1024,-1073741824,-8358,268435439,2147483647];
t16[5] = v20;
try { ("number").trim(); } catch (e) {}
try {
    ("number").trimEnd();
} catch(e27) {
}
let v28 = 7;
v28--;
function f32() {
    return v20;
}
const v33 = [v20,"number",-34562,v20];
[v33,v28,v33];
[v20,v33,"function","global",-34562];
for (let v36 = 0; v36 < 5; v36++) {
    function f37() {
        return f37;
    }
    const o38 = {
    };
    new Proxy(f37, o38);
    let [] = v16;
    f37.arguments = f37;
    const o43 = {
        "type": "function",
    };
    const v44 = new Worker(f37, o43);
    try { v44.terminateAndWait(v36, v44); } catch (e) {}
}
