[2.2250738585072014e-308,Infinity,-4.470992717301188,-1.0,1e-15];
const v1 = [0.8505875828654256,-20203.643876168993,0.6149008776572658];
[1000.0,2.220446049250313e-16,0.2892658778503595,5.0,74570.0616099392];
let v3 = -65537;
function f5() {
}
const v7 = new Uint16Array();
function f8() {
    const o15 = {
        "e": -4294967295,
        ..."Vre",
        valueOf(a13, a14) {
        },
        ..."Vre",
        "c": v7,
        5: -4294967295,
        6: -268435456,
    };
}
let v16 = 1561254620;
let v17 = [9,4];
const v18 = [-65511,1024,1981850259,-775274519,20763,-1073741824,65537,-256,14];
const v19 = [24991,2,50030,-49416,-2147483648,-12,-2147483649,64,30938,-339635160];
const v20 = [1095462861];
const v21 = [-9409,9007199254740990,9007199254740991,65537,6,7378,-21282];
[-65537,1528021203,-233317846,4,-1];
new Int16Array(1024);
const v28 = new Int16Array(128);
let v29;
try { v29 = v1.entries(); } catch (e) {}
let v31 = -1342005142;
let v32 = 65535;
const v33 = --v32;
const v34 = ++v3;
++v31;
const v36 = Math.min(v33);
v3 && v34;
new Uint32Array(1413);
v17 = v19;
v16 ^= v36;
try { v29(...v28, 1024, 1024, Int16Array, v34); } catch (e) {}
let {"c":v43,"length":v44,} = v17;
try {
    v32.__proto__ = v20;
} catch(e45) {
}
function F46() {
    if (!new.target) { throw 'must be called with new'; }
}
function f48() {
    const v51 = Array(4087);
    v51[351] = v18;
    for (const v52 of v51) {
    }
    return Array;
}
f48();
f48();
[];
class C57 {
    constructor(a59, a60) {
        this[-2147483648] >>>= -7;
        for (let v61 = 0; v61 < 25; v61++) {
        }
    }
}
v19.b = v21;
new Int8Array();
(1413).buffer.slice(Int16Array);
new C57();
