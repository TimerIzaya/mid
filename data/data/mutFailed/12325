const t0 = 3683;
const v2 = new t0(3683);
const v5 = new Float32Array(43);
let v7;
try {
const t0 = 1;
v7 = t0();
} catch (e) {}
const v8 = v7 === 43;
typeof v7 === Uint8Array;
const v13 = new Uint32Array(1);
function f14() {
    return v5;
}
function F15(a17, a18, a19) {
    if (!new.target) { throw 'must be called with new'; }
    if (v8) {
        f14 -= a17;
        v2[4];
    } else {
        function F21(a23, a24, a25) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.g = this;
            } catch(e26) {
            }
        }
        const v27 = new F21(F21, a17, F21);
        new F21(v5, 1, a19);
        new F21(v27, 43, f14);
    }
    try {
        this.c = 43;
    } catch(e30) {
    }
    try {
        this.d = v13;
    } catch(e31) {
    }
}
new F15(43, 1, 43);
const v33 = new F15(43, "object", Float32Array);
new F15(1, 3683, v33);
class C36 extends f14 {
}
