function f0() {
}
const v2 = new WeakMap();
function f3() {
    return v2;
}
function f5(a6, a7) {
    const o8 = {
        __proto__: v2,
    };
    return o8;
}
const v9 = f5(v2, f5);
f5(v9, v9);
f5(Math, v2);
const v14 = v2 * 2.2250738585072014e-308;
~Math.sin(f0);
~v2;
const v18 = WeakMap * v14;
const v19 = --f0;
Math.expm1(v18);
function f21() {
    return f21;
}
function f24(a25, a26, a27) {
    return f24;
}
class C28 {
}
new Float64Array();
class C33 {
    toString(a35) {
        const t32 = super["bigint"];
        t32[9] = 0;
    }
}
const v38 = new C33();
const t37 = [v38,v38];
t37.length = v38;
f21 != WeakMap;
if (Infinity) {
    v2 < v19[WeakMap];
} else {
    Math.PI;
}
const v47 = [2147483647,42180,1000,-4294967296];
[881597666,7];
[-1690487979];
function f50(a51, a52, a53, a54) {
    ("Vre").charAt();
    new Int8Array(Int8Array);
    const o68 = {
        m(a61) {
            const o62 = {
            };
            o62.e = Float64Array;
            const o63 = {
                "f": this,
            };
            Object.defineProperty(o63, "e", { configurable: true, value: o63 });
            const v66 = new Int8Array(3938);
            let v67 = 3;
            [...v67] = v66;
            return v66;
        },
    };
    const v70 = new Uint8Array(a52);
    for (let v71 = 0; v71 < 5; v71++) {
        try {
            const o73 = {
            };
            new Map(o73);
        } catch(e75) {
        }
    }
    let [v76] = v70;
    return f50;
}
for (let v77 = 0; v77 < 10; v77++) {
    f50(v77, v77, f50, f50);
}
%OptimizeFunctionOnNextCall(f50);
f50();
Array();
class C82 {
}
class C83 extends C82 {
    [v47];
}
