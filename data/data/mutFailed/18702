class C3 {
    static [4096] = 4096;
    constructor(a5) {
        function f6(a7) {
            const v10 = [601759695];
            const v11 = [1073741824,1073741823,1376142744,1073741825];
            function f12(a13, a14, a15, a16) {
                a15 >= a15;
                try { v11["has"](..."has", a16, ...v10, ...v11); } catch (e) {}
                WeakMap / 536870887;
                return 4096;
            }
            for (let v21 = 0; v21 < 5; v21++) {
                f12(4096, v10, 536870887);
            }
            return this;
        }
        a5.valueOf = f6;
        super.b %= a5;
        ("min")["replace"]("min", "replace");
    }
    m(a26, a27) {
        a26 = this;
        const o28 = {
        };
        try {
            o28.g = 1.0;
        } catch(e29) {
        }
        try {
            const o30 = {
            };
            o30.g = 1.0;
            this.d = "min";
        } catch(e31) {
        }
        try {
            const o32 = {
            };
            o32.g = 1.0;
            o32.d = "min";
            o32.e = a26;
        } catch(e33) {
        }
        try {
            const o34 = {
            };
            o34.g = 1.0;
            o34.d = "min";
            o34.e = a27;
        } catch(e35) {
        }
        return o28;
    }
}
function f36(a37) {
    let v39 = -11;
    let v41 = ++v39;
    Math.cos(-57135);
    -57135 * v41;
    v41 >>> v39;
    C3++;
    return ++v41;
}
C3.valueOf = f36;
const v47 = new C3(C3);
const v48 = new C3(v47);
function f49() {
    return f36;
}
function f50(a51) {
    Array(11);
}
Object.defineProperty(v48, "toString", { writable: true, configurable: true, enumerable: true, get: f49, set: f50 });
new C3(v48);
new Uint8Array(11);
new Float64Array(255);
Uint32Array[2] = "setUTCSeconds";
const v68 = new Uint32Array(128);
Object.defineProperty(Uint32Array, 2, { enumerable: true, value: v68 });
const v71 = new Uint32Array(Uint32Array, Uint8Array);
v71[0.29489550717955537];
new Int16Array(Int16Array);
