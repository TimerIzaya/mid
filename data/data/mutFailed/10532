function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = 404394727;
    } catch(e3) {
        const o4 = {
        };
        function F5(a7, a8, a9, a10) {
            if (!new.target) { throw 'must be called with new'; }
            268435439n ^ 268435439n;
            for (let v15 = 0; v15 < 100; v15++) {
                v15 >> v15;
                const o20 = {
                    6: undefined,
                    "d": undefined,
                    [268435439n]: 2105444095n,
                    __proto__: o4,
                    "g": a9,
                    "b": -4294967296n,
                    valueOf(a19) {
                        return v15;
                    },
                };
            }
        }
    }
    try {
        this.f = 404394727;
    } catch(e21) {
    }
    try {
        this.a = 404394727;
    } catch(e22) {
    }
    class C24 extends Date {
    }
    function f25() {
        for (let i27 = 0; i27 < 1;) {
            function F32(a34, a35, a36) {
                if (!new.target) { throw 'must be called with new'; }
            }
        }
        return f25;
    }
}
const v37 = new F0();
const v38 = new F0();
const v39 = new F0();
function f40() {
    return v39;
}
function f42() {
    for (let i44 = 0, i45 = 3;
        (() => {
            class C46 extends f42 {
            }
            return i44 < 3;
        })();
        i44 % i44, i44++) {
    }
    return f42;
}
function F54(a56, a57) {
    if (!new.target) { throw 'must be called with new'; }
    try { this(this, a57, a57, this, v39, v39); } catch (e) {}
    class C60 {
        #o(a62) {
        }
    }
    a57.e = a57;
    try {
        this.d = v39;
    } catch(e63) {
    }
}
new F54(v39, v38);
const v65 = new F54(v39, v37);
try { v65.d(); } catch (e) {}
new F54(v39, v37);
Int8Array.e = Int8Array;
new Int8Array(2541);
new BigUint64Array(6);
const v76 = new Float64Array(6);
v76[3];
class C79 {
    4294967296 = 996195971n;
}
try { v38.constructor(0); } catch (e) {}
const v81 = new C79();
const v82 = v81[4294967296];
function f83() {
    const o104 = {
        valueOf(a88) {
            let v89;
            try { v89 = ("split").padEnd(a88, v82); } catch (e) {}
            function f90(a91, a92) {
                v89.g = f83;
                return f90;
            }
            try {
            } catch(e93) {
                const v95 = Symbol.isConcatSpreadable;
                try { e93(v95); } catch (e) {}
            }
            function f103() {
                return a88;
            }
            return F0;
        },
    };
    return f83;
}
BigUint64Array();
f40();
const v107 = f83();
let v110 = 536870888;
const v111 = -10000;
f83();
++v110;
f83[v111];
c = 536870888;
/(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10[Ca\nb\bc?]/vim;
try {
    v107.length = 3425;
} catch(e117) {
}
