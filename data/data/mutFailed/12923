class C3 {
    static #e = "5";
    static #h = "string";
    static 2147483649 = "string";
    6;
    static #b;
    c;
    constructor(a5, a6) {
        ["string" instanceof a5,a5,"-58458",this];
        [[this]];
    }
}
new C3("-58458", "string");
new C3("-58458", "-58458");
new C3("5", "5");
[-1e-15,0.09665934044331337,-1.9819941763612893e+307];
[1.7976931348623157e+308,2.0];
[-7.640609194073269,-1000000000.0,-2.0,1000000.0,764266.1150283988,-0.0,4.508173322878285e+307,2.0,Infinity,1000000000000.0];
class C23 {
    static get h() {
        const o28 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o28);
        return 268435441;
    }
}
const v30 = new C23();
const v31 = new C23();
const v32 = new C23();
class C35 extends C23 {
    3;
    [v31] = v30;
    ["256"] = v30;
    static #toString(a37, a38, a39) {
        try { a37("256", v32, a37, a39); } catch (e) {}
        Math.atan(16);
        a38 ^ 16;
        const v47 = new Uint16Array(3);
        v47.reverse();
        function F49() {
            if (!new.target) { throw 'must be called with new'; }
            try {
                const v51 = this.constructor;
                class C52 extends v51 {
                    e = v51;
                }
                new C52();
            } catch(e54) {
            }
        }
        return Math.abs(16);
    }
}
new C35();
const v57 = new C35();
const v58 = new C35();
v58 & v30;
if (v57 <= v32) {
    new Uint8ClampedArray(75);
    new Int16Array(6);
    new BigInt64Array(1821);
} else {
    new C35();
}
