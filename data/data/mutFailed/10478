const v0 = [254248.30598820723,-3.120796898184432,814573.241759734,3.0,-5.4423281386154665,Infinity];
const v1 = [-112.22820704250626,-1.44923357976823e+308,0.14897528960844564,-446742.4704718066,-2.0,2.2250738585072014e-308,2.94155019305266e+307,1e-15];
function f2(a3) {
    new Uint8Array(255);
    return v0;
}
Object.defineProperty(v1, "toString", { configurable: true, enumerable: true, value: f2 });
v1[8] = v1;
const v7 = [1000000000000.0,575.5995105611801,-1.3477248102907454e+308];
function f8() {
    return v1;
}
class C12 {
    constructor(a14, a15, a16, a17) {
        let [v18,...v19] = v0;
        v0.length;
        v1[8] = a15;
    }
    [v1];
    static #e = 12n;
    static [62379n];
    0 = 12n;
}
const v24 = new C12(62379n, 62379n, v1, 62379n);
const v25 = new C12(-60839n, 62379n, v7, 12n);
const v26 = new C12(12n, -60839n, v1, 62379n);
function F27(a29, a30, a31, a32) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = this;
    try {
        this.c = a31;
    } catch(e33) {
    }
}
const v34 = new F27(62379n, v7, v1, v24);
const v35 = new F27(12n, v1, v26, v34);
new F27(v35, v0, v25, v1);
const v41 = [-5,null,536870889,-1055048739,-1055048739];
[536870889];
[v41,-1055048739,v41,536870889];
[-9.735515399340533e+307,163470.27825054666,8.355421851275215e+307,-7.141423016921272e+307,-486.05440736004505,1.6461069750642172e+308,1000.0,-1e-15];
[-394794.8057064981,379960.7389405947,2.220446049250313e-16,-3.0,-8.57088526932401,0.0];
const v49 = [913972.2113151569,-1000000.0,-837.2084454107498,-9.199548421707273e+307,-1000000000.0,0.0];
function F53() {
    if (!new.target) { throw 'must be called with new'; }
    this.c = F53;
    this.c = this;
    try {
        this.c = 19793;
        let v57;
        try { v57 = Array.of(); } catch (e) {}
        const v58 = Array(19793);
        function f59() {
            return v57;
        }
        Object.defineProperty(v58, 11197, { writable: true, configurable: true, get: f59 });
        try { v58.map(this); } catch (e) {}
        for (const v61 of v58) {
        }
        const v62 = [];
        function f63(a64, a65) {
            class C66 {
                constructor(a68, a69) {
                }
            }
            return 19793;
        }
        v62[Symbol.toPrimitive] = f63;
        const v73 = Symbol.toPrimitive;
        v62[v73] = Array;
        const v74 = [v62,v62,v62];
        v74[Symbol.toPrimitive] = Symbol;
        try { Symbol.apply(Symbol, v73); } catch (e) {}
        v74[Symbol.toPrimitive] = Symbol;
        [v74,v74];
        Uint16Array.toString = Array;
    } catch(e82) {
    }
    try {
        this.b = 19793;
    } catch(e83) {
    }
}
new F53();
class C85 {
    set b(a87) {
    }
}
function f89(a90, a91, a92, a93) {
    const o103 = {
        toString(a95, a96) {
        },
        valueOf(a98, a99) {
            a99 + v49;
            try {
                new C85();
            } catch(e102) {
            }
            return a99;
        },
    };
}
const v104 = f89(Date);
try { v104.toString(); } catch (e) {}
