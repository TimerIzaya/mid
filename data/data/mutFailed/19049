const v0 = /GI/gims;
const v1 = /1ZPa[bc]da+b/umsy;
const v2 = /[^3]/ud;
class C3 {
    #g = v2;
    constructor(a5, a6) {
        C3[v2];
        Symbol.iterator;
        const o18 = {
            [a6]() {
                const o17 = {
                    next() {
                        C3--;
                        10 == 0;
                        const o16 = {
                            "done": 10,
                            "value": 10,
                        };
                        return o16;
                    },
                };
                return o17;
            },
        };
    }
}
const v19 = new C3(C3, v2);
new C3(v19, v19);
new C3(v1, v2);
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a25;
    } catch(e26) {
    }
    try {
        this.g = v19;
    } catch(e27) {
    }
}
const v28 = new F22(v2, v19);
new F22(v1, v28);
const v30 = new F22(v1, v0);
function f34(a35) {
}
function f36() {
    return ([-1000000.0,771279.5641904315,0.0,8.299995604235331,6.625300935335886,-820.4949035918538,-602.5256799896665,0.6342705996691437,Infinity]).toLocaleString(f36, v28).search(f36);
}
f36.toString = f34;
v30();
