function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = -3;
    } catch(e3) {
    }
    try {
        this.e = -3;
    } catch(e4) {
    }
    try {
        this.f = -3;
    } catch(e5) {
    }
}
const v6 = new F0();
new F0();
const v8 = new F0();
for (const v9 of v8) {
    v9?.[v9];
    Math.atan(512);
    Math.acos(512 ** -4096);
    const v18 = ~512;
    Math.log(-4096);
    v18 % v6;
}
const v21 = [1.1298821900600513e+307,4.51108822438454,-2.0,-9.836931041430116,-6.004183923510072e+307,0.11339310332229924,9.20395834970024,0.16252717156726304,-1.0];
const v22 = [1.113978235477969];
[-0.0,-454444.0798349909,1000000.0,0.46340694182593756,-2.220446049250313e-16,0.371103284477168];
let v24 = [-9007199254740991,512,257,-4294967295];
const v25 = [6986];
[-151468126,268435440,-65537,1];
try { v22.some(v24, -9007199254740991n); } catch (e) {}
try {
    v8.fuck(-1401796193, v6);
} catch(e33) {
}
function f36() {
    return v25;
}
const v37 = v8 == v21;
if (v37) {
} else {
    v24 ^= v21;
    v6 >>> v37;
}
const t46 = [[]];
delete t46[0];
