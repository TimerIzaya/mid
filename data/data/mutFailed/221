class C3 {
    static {
        const o5 = {
        };
        try {
            o5.f = -3.0;
        } catch(e6) {
        }
        try {
            const o7 = {
            };
            o7.f = -3.0;
            o7.b = this;
        } catch(e8) {
        }
        try {
            const o9 = {
            };
            o9.f = -3.0;
            o9.b = this;
            o9.a = this;
        } catch(e10) {
        }
        try {
            const o11 = {
            };
            o11.f = -3.0;
            o11.b = this;
            o11.a = -3.0;
        } catch(e12) {
        }
    }
}
const v13 = new C3();
const v14 = new C3();
const v15 = new C3();
const v17 = new Map();
new Map();
function f20() {
    return v13;
}
class C21 {
    static 2;
    constructor(a23, a24, a25) {
        Object.defineProperty(a24, "a", { writable: true, configurable: true, enumerable: true, get: f20, set: f20 });
        let v27;
        try { v27 = v17["entries"](..."entries", v14, ...a25, a25, f20); } catch (e) {}
        var f = -1989198876;
        try {
            a25.valueOf = v27;
        } catch(e28) {
        }
    }
    static #h;
    #c = "bigint";
    static 3967 = "bigint";
}
new C21(v14, C21, v17);
const v30 = new C21("bigint", v17, v15);
new C21(v30, C21, v30);
function f33() {
    return 2147483648n;
}
%OptimizeFunctionOnNextCall(f33);
f33();
class C35 {
}
const v36 = new C35();
const v37 = new C35();
const v38 = new C35();
function f39(a40, a41) {
    const o42 = {
        __proto__: a40,
    };
    return v36;
}
f39(v36);
const v44 = f39(v37);
f39(v38);
try { v44["n"](); } catch (e) {}
-63523 >= 127 ? -63523 : 127;
Math.asinh(-(-63523));
Math.acosh();
class C3 {
    static p(a5) {
        for (const v6 in "callee") {
            try {
                super["callee"] = a5;
            } catch(e7) {
            }
        }
        ("boolean").length;
        return "boolean";
    }
    set d(a10) {
        const o13 = {
            "maxByteLength": 95,
        };
        const v15 = new ArrayBuffer(255, o13);
        new BigUint64Array(v15);
    }
}
new C3();
new C3();
new C3();
[828705.2102230175,9.782512527258554,-497749.8302422023,2.2250738585072014e-308,1.780864044343074e+308,-0.0,3.0,-1000000000.0,-926279.4305257334,-921.4523400888568];
[1.7976931348623157e+308,312920.01533012814,-2.0,1.1983521468628719e+308,-1.0,-2.2250738585072014e-308,1000000000.0,4.060050178666639,1000000.0,1e-15];
[958.8808400202181];
[64,268435456,-65536,11,536870889,255,13508,-1500979228,7,129];
[-2102271705,49581,-751862503,9,512];
[4,-1853532376,127];
let v32 = "163558485";
const v33 = [-7,127,13,-2];
[-1238491077];
-3 >> -3;
const v38 = v32--;
class C40 {
    e;
    constructor(a42) {
        function f43() {
            const v45 = Symbol.iterator;
            const o54 = {
                [v45]() {
                    let v47 = 10;
                    const o53 = {
                        next() {
                            v47--;
                            const v51 = v47 == 0;
                            const o52 = {
                                "done": v51,
                                "value": v47,
                            };
                            return o52;
                        },
                    };
                    return o53;
                },
            };
            return o54;
        }
        a42[Symbol.iterator] = f43;
        try {
            a42.toString = a42;
        } catch(e57) {
        }
        try {
            a42[a42] = a42;
        } catch(e58) {
        }
    }
    c = v38;
}
function f59(a60) {
    const o63 = {
        "maxByteLength": 268435441,
    };
    const v65 = new SharedArrayBuffer(1, o63);
    const v67 = new Uint32Array(v65);
    return v67;
}
Object.defineProperty(C40, Symbol.toPrimitive, { configurable: true, value: f59 });
C40.prototype;
new C40(C40);
const v72 = new C40(C40);
const v73 = new C40(-2.0);
v73.c;
9n | 9n;
65537n + 65537n;
const v79 = [-781727972,-2,10,-14,268435456,16,341131571,-1535576263,-45048,10000];
const v80 = [-5280];
v80.toString = f59;
function f83(a84, a85) {
    function f86(a87, a88) {
        new Set();
        return a87;
    }
    a85.toString = f86;
    const o91 = {
        "e": v79,
        "a": a84,
        [a85]: a84,
        [v80]: 1405977585,
    };
    return a85;
}
f83(1405977585);
f83(-41022, v80);
~-768129381n;
-65536n == -65536n;
2147483649 >>> 2147483649;
const v104 = 1073741824 - 1073741824;
v104 >>> v104;
const v108 = Uint32Array.name;
try { new Uint32Array(9n, 4096, -65536n); } catch (e) {}
const v110 = new Uint32Array(4096);
let v111 = 9;
const v112 = v111--;
try { new Int32Array(v110, v110, -2.0); } catch (e) {}
const v115 = Int32Array.length;
v115 - v115;
new Int32Array(v111);
try { new Uint16Array(C40, Uint32Array, 2147483649); } catch (e) {}
new Uint16Array(120);
let v123;
try { v123 = Array.bind(v72); } catch (e) {}
let v124;
try { v124 = v123(Int32Array); } catch (e) {}
const v126 = Array();
v126.a = v126;
const v129 = new Int8Array(Array, 92, 485);
v129[277] = v129;
const v131 = 3666 - 3666;
const v132 = v131 + v131;
v132 >>> v132;
const v136 = 0 < 1;
v136 || v136;
v136 && v136;
BigInt64Array.name;
const v144 = ([1000,-14,16,-11,-1413918991,-16,-374255446,-14,1000,10]).sort();
try { v144.sort(-65536n); } catch (e) {}
BigInt64Array.g = BigInt64Array;
[-65535,2147483648,257,255,-25075,2403];
-2.0 | -2.0;
["p",4.260409396049164e+307,v33,1000000.0];
[v32,[1000000.0],v33,v32,"function"];
Object.defineProperty(v124, 2, { configurable: true, get: Array });
try {
    v111 = v112;
} catch(e157) {
}
new Uint8Array(1);
class C163 {
    constructor(a165, a166) {
        this.toString = f59;
        a165 << a165;
        const v168 = this.constructor;
        try { new v168(); } catch (e) {}
        a165?.[a166];
    }
    #n(a172, a173) {
    }
}
const v174 = new C163(-65536n);
function f175(a176) {
    try {
        new f59(v108);
    } catch(e178) {
    }
    return a176;
}
v174.toString = f175;
new C163(1000.0, v174);
new C163();
