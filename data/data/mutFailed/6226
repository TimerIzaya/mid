function f0() {
    const o4 = {
        __proto__: "S3KT",
        [-5900]: "S3KT",
        "f": 760977347,
        4147259639: 760977347,
        659269453: "S3KT",
        "b": -5900,
        "g": 760977347,
        "h": -5900,
        ..."S3KT",
        [760977347]: "S3KT",
        "e": -5900,
        "c": "S3KT",
        ["S3KT"]: "S3KT",
    };
    return o4;
}
const v5 = f0();
const v6 = f0();
const v7 = f0();
function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a11;
    try {
        this.b = a11;
    } catch(e12) {
    }
    try {
        this.e = v5;
    } catch(e13) {
    }
    try {
        this.c = a10;
    } catch(e14) {
    }
}
new F8(v6, v6);
new F8(v6, v5);
new F8(v7, v5);
new Int16Array(252);
new Int16Array(2662);
new Int8Array(6);
let v30 = -1024;
function F31(a33, a34, a35, a36) {
    if (!new.target) { throw 'must be called with new'; }
}
const v37 = new F31(v30, F31, F31, F31);
const v38 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v39 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
function F41(a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
}
const v45 = new F41(F41, F41);
v45.toString = f0;
class C46 {
}
const v48 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v49 = [601759695];
for (let v51 = 0; v51 < 5; v51++) {
    function f52() {
        let v55 = Float64Array;
        const v57 = Array();
        v57[1] = Array;
        function f58() {
            return v55;
        }
        function f59(a60) {
            return -4294967297n;
        }
        Object.defineProperty(v57, 0, { configurable: true, enumerable: true, get: f58, set: f59 });
        const v61 = v57.unshift(v30);
        const v63 = new Set();
        function F64(a66, a67) {
            if (!new.target) { throw 'must be called with new'; }
            F64(a67, v63);
        }
        v55 = F31;
        v38.length;
        try {
            v38.forEach(v55);
        } catch(e71) {
        }
        const v72 = [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        class C74 {
        }
        const v75 = new C74();
        try {
            v75.__proto__ = F41;
            const v76 = ["Vre","Vre","Vre","Vre"];
            class C77 {
            }
            function* f78(a79, a80) {
                yield* v76;
                return F41;
            }
        } catch(e81) {
        }
        const v82 = Symbol.toPrimitive;
        try {
            Symbol();
        } catch(e84) {
        }
        Symbol.match;
        const o92 = {
            toString(a88, a89) {
                const v90 = v51 && v55;
                a88 *= v82;
                v90 <= v72;
                return a89;
            },
        };
        const o114 = {
            "c": -4294967297n,
            [522675525n](a95, a96) {
            },
            "c": v49,
            valueOf(a98, a99) {
                return this;
            },
            [-4294967297n](a101, a102, a103, a104) {
            },
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v48,
            ...v37,
            [v82]() {
            },
            "type": C46,
            ..."Vre",
            valueOf(a107, a108) {
                return a108;
            },
            ..."Vre",
            get h() {
                return f52;
            },
            4: "Vre",
            toString(a111, a112, a113) {
                return v51;
            },
            5: -4294967295,
            6: -268435456,
        };
        new Float32Array(v75, v30, v51);
        v30 %= -268435456;
        new Uint32Array(v39);
        v45 - f52;
        try {
            new Float64Array();
        } catch(e121) {
        }
        new Float64Array(v61, v61);
        new Uint16Array(Symbol, -268435456, -268435456);
        return f59;
    }
    f52();
    %OptimizeFunctionOnNextCall(f52);
}
