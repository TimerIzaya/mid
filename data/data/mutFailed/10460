[];
[-65537,7,-2147483649,-65537,536870912,9,2107693829,8561,1073741824,-2147483648];
const v5 = [65537,63909,-397206604,-9223372036854775807,16];
[15,1734675318,-1587936588,257,-2147483649,8];
new Int8Array(9);
new Int32Array(16);
new Uint8Array(Int32Array);
let v16 = Uint8Array;
function f17(a18) {
    class C20 {
        static {
            if (-4.092259470322528 <= -4.092259470322528) {
            }
        }
    }
    return -4.092259470322528;
}
v5.toString = f17;
class C26 {
}
const t20 = 4;
const v27 = new t20();
v27[Symbol.toPrimitive] = f17;
v27.valueOf = f17;
function f31() {
    const v34 = v16--;
    Math.min();
    v16 ** 6;
    -4294967296 >>> v27;
    return v34 - v27;
}
for (let v39 = 0; v39 < 5; v39++) {
    f31();
    %OptimizeFunctionOnNextCall(f31);
}
