const v0 = [-2.0,-4.0,0.43072890312942236,0.7398746411879376,1000.0,5.0,1000000.0,1000000.0,9.690039653749654e+306,2.0];
const o2 = {
    "f": -1.883023285666516,
};
const v5 = 3 >>> 3;
const v6 = Array();
let v7;
try { v7 = v6.findLast(v5); } catch (e) {}
const v8 = v6.unshift(v7);
const v9 = [-1000000000.0,NaN,0.7062795398592916,5.0,1.7976931348623157e+308];
const v10 = [-0.0,1000.0,8.775980423192454];
const v11 = [v9,v0,v9,v0];
const v12 = [v11];
try { v9.pop(); } catch (e) {}
const v14 = [v10,v12,v9,v10,v0];
v0[4];
const v18 = BigInt64Array?.constructor;
try { new v18(1518); } catch (e) {}
new BigInt64Array(1518);
class C23 {
}
async function f24(a25, a26, a27, a28) {
    a25.d = a25;
    a26.length = a26;
    (await C23).call(C23, f24, f24, C23);
    return f24;
}
const v31 = f24.call(C23, C23, f24);
let v32;
try { v32 = v31.then(v14, v12); } catch (e) {}
const v33 = new BigUint64Array(v32);
v33.byteLength = v33;
const v35 = new v31();
function f36(a37, a38, a39, a40) {
    a38--;
    let v42 = a37++;
    const v43 = v42++;
    v42--;
    const v45 = a39 % a39;
    const o46 = {
        ...v35,
    };
    o46.h = o46;
    let v47;
    try { v47 = o46.n(v45, v43); } catch (e) {}
    return v47;
}
f36(Uint8Array, 3, v8);
159 - 159;
Math.exp(10000);
Math.log(-23525);
const v58 = [-2.220446049250313e-16,-1000000000.0,-1e-15,1000000000.0,-1.0,1000000000.0,-1000.0];
const v59 = [1000000000000.0,1e-15];
const v60 = v58.fill(v59, v58);
v59[3] = -1000000.0;
const v61 = new Int32Array(159);
try { v61.reduceRight(v11); } catch (e) {}
const v63 = [];
try { v63.toString(); } catch (e) {}
-1518;
const v68 = new Float32Array(4061, 4061);
try { v68.filter(v9); } catch (e) {}
let v70 = v68[3437];
v70--;
const v72 = v63.constructor;
v72.length = v72;
class C73 extends v72 {
    [4061] = v68;
    3;
}
const v74 = new C73();
v74.f = v74;
function f75(a76, a77) {
    const o78 = {
    };
    return o78;
}
function f79(a80) {
    2 & 2;
    return v9;
}
const v85 = f79?.constructor;
try { new v85(v31); } catch (e) {}
v74.constructor = f79;
const v87 = v74?.constructor;
try { v87(v60); } catch (e) {}
try { new v87(); } catch (e) {}
