new WeakMap();
const v2 = [-4294967296,10000,-56108,-2147483649];
const v3 = [-1024,-63037,16];
const v4 = [847614055,-15451,4,2100788319,-2];
class C8 extends WeakMap {
    static c = v2;
    valueOf(a10, a11, a12) {
        return 3;
    }
    constructor(a17, a18, a19, a20) {
        super(v3);
        this[3] = 9007199254740990;
        super.b;
        a20[Symbol.unscopables] = a19;
    }
}
new C8(9007199254740990, -9007199254740992, -9007199254740992, v2);
new C8(-15, -15, 9007199254740990, v3);
new C8(-15, 9007199254740990, -15, v4);
function f30() {
}
function f31() {
    class C33 {
        static {
            this[Symbol.hasInstance];
        }
        #p() {
            let v39;
            try { v39 = this.p(undefined, this, this, this, this); } catch (e) {}
            try {
                v39.#p(undefined, v39, v39, undefined);
            } catch(e41) {
            }
            return undefined;
        }
        static #a = undefined;
        c = undefined;
    }
    const v42 = new C33();
    const v43 = new C33();
    const v44 = new C33();
    function f45(a46) {
        const o52 = {
            15: a46,
            toString(a48, a49) {
                super.h = a49;
                try { C33.stringify(a46, a46, this); } catch (e) {}
                try {
                    C33.c = v42;
                } catch(e51) {
                }
                return a48;
            },
            2147483647: undefined,
            __proto__: v43,
            "c": a46,
            ...a46,
            "f": a46,
        };
        return o52;
    }
    const v53 = f45(C33);
    f45(v44);
    f45(v53);
    [0.0,26.917886948179785];
    [4.0,-6.418452896256084,1000000000.0,4.0,-2.220446049250313e-16,-1000000000.0];
    [883.1365358956336,-266.1024094651509,-5.0,1.4118854267221805e+308,-786614.3512895996];
    v53 > C33 ? v53 : C33;
    for (let i65 = 0; i65 < 5; i65++) {
        try {
            new f45(v53);
        } catch(e72) {
        }
    }
    return f30;
}
-520531413 >> -520531413;
-65536n + -65536n;
Map.prototype;
const v83 = new Map();
try { v83.set(Map, 512n); } catch (e) {}
try { new BigInt64Array(-9513n, f30, -9513n); } catch (e) {}
const v88 = new BigInt64Array(0);
let v89 = 1024;
let v90 = v89--;
v90++;
try { Int32Array.from(512n); } catch (e) {}
new Int32Array(v89);
const v96 = -9513n != 1;
v96 || v96;
if (v96) {
    try {
        new BigInt64Array(127);
    } catch(e100) {
    }
} else {
    var h = v96;
}
5 ^ 5;
const v107 = new BigUint64Array(5);
let v108;
try { v108 = v107.join(v89); } catch (e) {}
try { v108.replace(Int32Array, f30); } catch (e) {}
Int32Array.length;
-f30;
try {
    v88.f = 0;
} catch(e114) {
}
const v115 = new Int32Array(1);
v115[0];
v115[0] = v115;
new Int8Array(12);
const v120 = [1.5194593916452507e+308,1.7976931348623157e+308,-655.2599062195703,383261.13963534124,-4.351354601083372];
const v121 = [-3.0767450746058422,-109930.30079491576,1.0710997738525917e+308,1e-15,-4.4029859309287245,1.2647620628346297e+308,0.6128308590917888,-1000000.0,-9.043256096114051];
const v122 = [547.1067310983665,-3.0,NaN,222205.6815515987,2.2250738585072014e-308];
try { v122.join(-65536n); } catch (e) {}
function F124(a126, a127, a128) {
    if (!new.target) { throw 'must be called with new'; }
    const v129 = this?.__lookupGetter__;
    try { new v129(12); } catch (e) {}
    a127 + a127;
    try { a128.find(a126); } catch (e) {}
    try {
        this.d = a126;
    } catch(e133) {
    }
    try {
        this.b = a128;
    } catch(e134) {
    }
}
const v135 = F124?.constructor;
v135.length = v135;
let v136;
try { v136 = new v135(12); } catch (e) {}
v136.arguments;
new F124(Int32Array, 12, v121);
const v139 = new F124(v121, 5, v122);
v139.length;
const v141 = new F124(v120, 12, v120);
v141[65536];
const o144 = {
};
for (let v145 = 0; v145 < 25; v145++) {
}
