const v0 = [-1000000000.0,-0.0,-692.3516846228231,2.220446049250313e-16];
const v1 = [110.97028029170951,2.220446049250313e-16,-1.7976931348623157e+308];
function f2(a3, a4) {
    Math.sinh(1 && -1);
    return a3;
}
v1[Symbol.toPrimitive] = f2;
const v12 = [694155.9436030921,-1.805232258308969,1000000000000.0,636.9903668906002,0.0,-406551.8121934177,-3.0];
v12.toString = Symbol;
class C13 {
    4 = v12;
    static b = v0;
    8;
    [v12] = v1;
    9 = v12;
    static #f;
    [v1] = v12;
    static #m(a15, a16) {
        super.h = v12;
        a16[v0];
        super.c = v0;
        return 65537n;
    }
}
const v21 = new C13();
const v22 = new C13();
new v22();
function f24() {
    return v21;
}
[-268435456,24272,-1292555816,-9223372036854775808,65535,5,-843243251,129];
[7,10,127,41282];
const v30 = [1249922515,-31174,37670,-53646,512];
class C31 extends f24 {
    static o(a33, a34) {
        a34 ^ delete ArrayBuffer[a33];
        function f38() {
            return v30;
        }
        return v0;
    }
    static #p(a40, a41) {
        const v43 = Symbol.iterator;
        const o52 = {
            [v43]() {
                let v45 = 10;
                const o51 = {
                    next() {
                        v45--;
                        const v49 = v45 == 0;
                        const o50 = {
                            "done": v49,
                            "value": v45,
                        };
                        return o50;
                    },
                };
                return o51;
            },
        };
        return C13;
    }
}
new C31();
new C31();
new C31();
class C56 {
}
const v57 = new C56();
function f58(a59, a60) {
    Symbol(a60);
    const v63 = new SharedArrayBuffer();
    const v65 = v63.constructor;
    try { new v65(-15); } catch (e) {}
    return f2;
}
v57.constructor = f58;
function f67(a68, a69) {
    const v70 = a69?.__lookupGetter__;
    a69?.constructor;
    return v70;
}
%PrepareFunctionForOptimization(f67);
f67(Uint16Array, v57);
%OptimizeFunctionOnNextCall(f67);
f67();
