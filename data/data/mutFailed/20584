new Float64Array(-860970621);
const v5 = new Int32Array(16);
const v6 = v5?.with;
try { new v6(v5, v5); } catch (e) {}
BigInt64Array.prototype = BigInt64Array;
const v10 = new BigInt64Array(-4294967296);
let v12 = -9.31745980328391e+307;
v12--;
[16];
[-10];
const v17 = [-2,1478996456,10000,-4096,-9223372036854775807,-4294967295,7736,1460527516,-256];
try { v17.with(v17, v17); } catch (e) {}
const v20 = new BigInt64Array(Int32Array, -4294967296, BigInt64Array);
const v21 = /[\ca]/ms;
function f24(a25, a26) {
    try { a26.reduceRight(v10); } catch (e) {}
    const o29 = {
        get h() {
            return this;
        },
        [4]: 4,
        2778757984: Int32Array,
        "h": a25,
    };
    return f24;
}
f24(BigInt64Array, v20, f24.name, v21).prototype;
f24(v21, -65535);
