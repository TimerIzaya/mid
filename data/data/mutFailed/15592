class C3 {
    3;
    e;
    get b() {
        let v6 = -4294967295;
        const v8 = -1000000.0 + -1e-15;
        Math.trunc(C3);
        Math.cbrt(-1e-15);
        ~-1000000.0;
        v6--;
        return v8;
    }
}
try { C3.call(1e-15); } catch (e) {}
const v14 = new C3();
const v15 = new C3();
const v16 = v15[3];
const v17 = new C3();
new Uint16Array(2);
v16[1];
([]).length;
const v24 = [v17,-1000000.0,v14,v17,-1000000.0];
const v26 = [[v14,C3,v24,v24,v24],-1000000.0,1e-15,1e-15];
try { v26.entries(); } catch (e) {}
for (let v28 = 0; v28 < 5; v28++) {
    function f30() {
        Math.cos(Math);
        return Math;
    }
    f30();
    %OptimizeFunctionOnNextCall(f30);
}
