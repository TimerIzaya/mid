const v2 = -Infinity;
class C3 {
    static 94;
    ["-268435456"];
    constructor(a5, a6, a7, a8) {
        super();
        function f9() {
            return a8;
        }
        for (let v10 = 0; v10 < 5; v10++) {
            f9();
            %OptimizeFunctionOnNextCall(f9);
        }
    }
    #p(a13, a14) {
        a13 || this;
        const v17 = [65537,1073741825,7841,-12,13];
        const v18 = [1073741823,4294967295];
        function F19(a21, a22, a23) {
            if (!new.target) { throw 'must be called with new'; }
            const v24 = this.constructor;
            try { new v24(a21, a22, a22); } catch (e) {}
            a21.pop();
            a23.g = a23;
        }
        new F19(v17, v18, WeakSet);
        var b = v2;
        const v28 = [-7007,-1570795747,8];
        [1073741824,9];
        [26416,-536870912,1073741824,1073741825,-30459,8,-1,9007199254740990,4294967295];
        return v28;
    }
    b = "-268435456";
}
C3.name;
const v32 = new C3("-268435456", "-268435456");
v32.b = v32;
const v33 = new C3();
function f34(a35, a36) {
    a35 != v32;
    const v39 = [1000.0,-1000000000000.0,-7.943810730626244,-1.7976931348623157e+308,1.0,4.0];
    try {
        v39.length = -9223372036854775808;
    } catch(e40) {
    }
    return v33;
}
v33.constructor = f34;
for (let v41 = 0; v41 < 5; v41++) {
    for (let v42 = 0; v42 < 500; v42++) {
        const v44 = "p" + v42;
        v44 == v44;
    }
}
const v46 = v33?.constructor;
try { new v46(); } catch (e) {}
const v48 = new C3();
v48.d = v48;
class C53 {
    static {
        function f55(a56, a57) {
            const v59 = delete arguments[2];
            v59 && v59;
            return v59;
        }
        f55(this, this, -1.7976931348623157e+308, this);
    }
}
try { new C53(); } catch (e) {}
268435440 >>> 268435440;
new Uint8Array(268435440);
const v68 = [865030.0072136207,-1000000000000.0,-1.2335898302795516e+308,-123.52161477757932,0.8230465364846693,-141113.64897402772,-196.5981128122221,151.59178734474358,0.667472981056507,-0.0];
class C69 extends Set {
}
const v70 = new C69();
function f71(a72) {
    const v74 = new BigInt64Array();
    const v75 = `
        [-3.942521664036782e+307,-3.942521664036782e+307,[BigInt64Array,BigInt64Array]];
        new Float64Array();
        var c = v74;
        Math.asinh();
        const v83 = [];
        [C53,v83,v83,v83,v83];
        Uint8ClampedArray.prototype = Uint8ClampedArray;
        const v87 = new Uint8ClampedArray(3);
        class C88 {
            constructor(a90, a91, a92, a93) {
                const v94 = this?.constructor;
                try { new v94(a93, this, v87, a93); } catch (e) {}
                for (let v96 = 0; v96 < 5; v96++) {
                    v96 % v96;
                }
            }
        }
    `;
    function f98(a99, a100) {
        a100(f98);
        return f98;
    }
    return f98;
    eval(v75);
}
v70.resizable = f71;
v68[v70];
