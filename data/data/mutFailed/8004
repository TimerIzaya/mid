[5,-536870912,6,-1024,128,-871315271,16,11,-65535,8];
[-65537,27406,-15,-27399];
const v4 = new Uint8Array(1);
Float32Array.from(v4);
const v7 = [9007199254740990,4096,-4294967296];
("b").constructor;
const v12 = new Int32Array(3);
v12.indexOf();
("c").toUpperCase();
class C17 extends SharedArrayBuffer {
}
-450746.69945373747 ^ -450746.69945373747;
class C20 {
}
new C20();
new Map();
function f24() {
    return f24;
}
function f25(a26, a27, a28, a29) {
    const o41 = {
        __proto__: a28,
        ...a28,
        [a28](a31, a32, a33) {
            function f35() {
                return f35;
            }
            for (let [v37,...v38] of "atan2") {
            }
            return "function";
        },
    };
    return o41;
}
class C42 {
}
function f44(a45, a46) {
    const o47 = {
        [a45]: a46,
        [a46]: -65537,
        65536: -65537,
    };
    return -65537;
}
new Uint8Array(1073741823);
class C52 extends Date {
}
v7.pop();
eval("boolean");
Math.atan2(0.8830596320071384, 0.8830596320071384);
function f60(a61, a62, a63) {
    return a63;
}
new Int32Array(5);
9007199254740990 | -9007199254740990;
new Date(128, 1000.0);
new Uint32Array(0);
("function").length;
