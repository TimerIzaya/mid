const v1 = new Set();
class C2 {
    n(a4, a5) {
        this.__proto__;
        new Uint8Array(225);
        for (const v10 in Uint8Array) {
        }
        a5?.e;
        return 225;
    }
    2151022540 = Set;
    #c = v1;
}
const v15 = new C2();
const v16 = new C2();
new C2();
function f18(a19, a20, a21) {
    return v16;
}
function F22(a24) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor.bind(F22, F22).length;
}
new v16(F22);
const v29 = [5,2,2147483648,536870912,-14,53189,536870912,-9007199254740991,53255,39445];
const v30 = [-2,-16,-1328787798,-53252,4];
[4294967296];
const v33 = [C2,v29,C2,[v30,C2,v15],v16];
[v33,v15,v15,v30];
function f35(a36, a37) {
    return Math.tanh("1");
}
%PrepareFunctionForOptimization(f35);
v33(f35, f35);
%OptimizeFunctionOnNextCall(f35);
function F44(a46, a47, a48, a49) {
    if (!new.target) { throw 'must be called with new'; }
    const v50 = a48.constructor;
    try { new v50(a47); } catch (e) {}
}
new F44(undefined, undefined, -128n);
f35();
