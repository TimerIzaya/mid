class C3 {
    static #c = 968392.4960140814;
    constructor(a5) {
        do {
            try {
                ("b").#c;
            } catch(e8) {
            }
            a5++;
        } while ((() => {
                const o64 = {
                    valueOf() {
                        const o14 = {
                            "maxByteLength": 129,
                        };
                        const v16 = new SharedArrayBuffer(129, o14);
                        try {
                            this.c = 15;
                        } catch(e18) {
                        }
                        function f20() {
                        }
                        const v21 = [1073741824,1073741823,1376142744,1073741825];
                        function f22(a23, a24, a25, a26) {
                            function f27() {
                            }
                            f20();
                            const v30 = new Int8Array();
                            function f31(a32, a33) {
                                const o37 = {
                                    p(a35, a36) {
                                        return this;
                                    },
                                };
                            }
                            f31();
                            f31();
                            v30.buffer;
                            let v41 = 1000000000000.0;
                            v41--;
                            function F45(a47, a48, a49, a50) {
                                if (!new.target) { throw 'must be called with new'; }
                                this.c = a47;
                            }
                            const v51 = new F45(-2.0);
                            const v52 = new F45(-1.093925554716035e+308);
                            v52 in v51;
                            const t36 = [];
                            t36.length += 1.0;
                            %OptimizeFunctionOnNextCall(f27);
                            class C58 extends Date {
                                static 2544510523 = 1.0;
                                1855;
                            }
                            try { v21["find"](); } catch (e) {}
                            for (const v61 in "1024") {
                            }
                        }
                        f22();
                        new Float32Array(v16);
                        return 968392.4960140814;
                    },
                };
                return 0 < 0;
            })())
    }
}
class C67 extends Date {
}
C67.constructor;
class C70 extends Date {
}
new C70();
new C3(968392.4960140814);
const t74 = [-3.0];
t74[2] = 3.0;
function f75() {
    return f75;
}
new C3(C3);
const v77 = new C3("b");
/\xf0\x9f\x92\xa9/gvims;
const v79 = /6a*b?/gvi;
/B3a\n/gui;
new WeakSet();
const v85 = new Float64Array(16);
new Int32Array(168);
v79[Uint8ClampedArray] = v77;
v85.byteLength |= 968392.4960140814;
new Uint8ClampedArray(168);
function f95() {
    return f95;
}
class C96 extends f95 {
    constructor(a98, a99, a100, a101) {
        super();
        function f102() {
            const v103 = [];
            Math.log10(([]).length);
            new Float32Array(116);
            v103[6] = 4294967295;
            class C112 {
            }
            const t103 = "undefined";
            t103["p" + 16] = 16;
            const o118 = {
                set b(a117) {
                },
            };
            return 4294967295;
        }
        for (let v119 = 0; v119 < 5; v119++) {
            f102();
            %OptimizeFunctionOnNextCall(C96);
        }
    }
}
new C96();
