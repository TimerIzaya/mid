const v0 = [-1000000000.0,-1e-15];
const v1 = [0.41206821791156667,0.4938926273116344,-587.9774165683327,-1e-15,5.0,9.330172950041376];
function f2() {
    const v3 = /(x)(x)(x)\1/uis;
    function f4(a5, a6, a7, a8) {
        const o15 = {
            2: a7,
            __proto__: a8,
            [v3](a10, a11, a12, a13) {
                super.test();
            },
        };
        return a5;
    }
    return f4;
}
Object.defineProperty(v1, Symbol.toPrimitive, { configurable: true, value: f2 });
[-872322.287999868,-121488.32136507437,0.5975408070736453,-3.8546830649980235,563.7001005384307,2.220446049250313e-16,0.24916352319793444,-1000000.0];
const v24 = new Int16Array(3348);
try { v24.join(v1); } catch (e) {}
Int8Array.length;
const v29 = new Int8Array(257);
v29[185];
const v33 = new Float64Array(129);
v33[112] = v33;
function F34() {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "f", { writable: true, value: this });
    try {
        this.g = -3;
    } catch(e37) {
    }
    try {
        this.f = -3;
    } catch(e38) {
    }
}
const v39 = new F34();
const v40 = new F34();
const v41 = new F34();
function F42(a44, a45) {
    if (!new.target) { throw 'must be called with new'; }
    this.g = v41;
    const v46 = this?.__defineGetter__;
    try { new v46(a45, a45); } catch (e) {}
    a44.g = a44;
    const v48 = v39?.__lookupGetter__;
    try { v48(a44); } catch (e) {}
    try { this.constructor(F42, this); } catch (e) {}
    a44.e = a44;
}
F42.arguments = F42;
const v51 = new F42(v41);
v51.g = 257;
try { v51.hasOwnProperty(Float64Array); } catch (e) {}
const v53 = new F42(v51, v40);
v53.e = v53;
try { ("Hyo9").padEnd(3348); } catch (e) {}
("Hyo9")[1];
const t58 = "at";
t58[1] = "at";
const v58 = [1000000000000.0,-554312.8659911777,-85520.97552967619,116.33808524187589,-1.4876365942841e+308,-4.0,-1.0,643243.7601277845,0.5743499435706315,4.0];
const v59 = v58?.filter;
try { new v59(v40); } catch (e) {}
const v61 = v58?.groupToMap;
v61.constructor = Symbol;
const v62 = v61?.constructor;
let v63;
try { v63 = new v62(v41); } catch (e) {}
let v64;
try { v64 = v62("Hyo9"); } catch (e) {}
v64.d = v64;
try { v61(v39); } catch (e) {}
([-4.202468609045087])[0];
const v68 = [0.8434386161503777];
try { v68.findLastIndex(v68); } catch (e) {}
const t76 = "4i";
t76[1] = "4i";
const t78 = 129;
t78[1] = "RpXR";
const v73 = ("c")?.toLocaleUpperCase;
try { v73(); } catch (e) {}
class C76 {
    constructor(a78) {
        ("valueOf").localeCompare(a78, "valueOf");
    }
}
const v80 = new C76(v41);
const v81 = v80.constructor;
function f82(a83) {
    v0[9];
    try { new v63(v1); } catch (e) {}
    return v40;
}
v81[Symbol.toPrimitive] = f82;
v81.length;
const v89 = new v81(C76);
const v90 = v89?.constructor;
try { new v90(v89); } catch (e) {}
