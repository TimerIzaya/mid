function f2(a3) {
    ("1866165091").normalize();
    return "1866165091";
}
Int16Array.valueOf = f2;
new Int16Array(512);
const v9 = new Uint32Array(168);
new BigInt64Array(1000);
let v13 = 1060;
function f15(a16, a17) {
    try { a16.cosh(512, a17, Int16Array, BigInt64Array, BigInt64Array); } catch (e) {}
    const v21 = new Array(5);
    const v24 = new Int8Array(181);
    function f25(a26) {
        return a26;
    }
    class C27 extends f25 {
        static [v21];
        d;
        g;
    }
    return C27.fuck(v21, -65536, v24, -65536);
}
Int16Array[Symbol.toPrimitive] = f15;
const v32 = new Int16Array(v13);
Int16Array.valueOf = f15;
const v35 = new Int16Array(1797);
function f36() {
    const o39 = {
        "execution": "async",
        "type": "minor",
    };
    return Int16Array;
}
v35.toString = f36;
let v40 = Int16Array & v35;
v40 |= (v13 >>>= v40);
v9[BigInt64Array];
new Int32Array(10);
function f51(a52) {
    const o53 = {
        "c": a52,
        16: -4.0,
        1073741824: a52,
    };
    return o53;
}
f51.toString = f15;
Object.defineProperty(v32, "a", { enumerable: true, value: Int32Array });
new Uint8ClampedArray(1376);
new Uint8ClampedArray(1000);
new BigInt64Array(5);
const v63 = f51();
const v64 = f51(-5.0);
function f65(a66, a67, a68, a69) {
    const o70 = {
        [f51]: a68,
        "c": v64,
        592: BigInt64Array,
        [a67]: -814523734,
        __proto__: v64,
        [-4.0]: v40,
        "f": a66,
        ...a69,
    };
    return f65;
}
f65(v63, -5.0, -4.0, v64);
f65(v63, -4.0, -869.5873935050056, v64);
Math.cos(11);
Math.sin(51284);
