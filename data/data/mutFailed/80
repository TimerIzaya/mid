const v0 = [];
const v1 = [v0,v0,v0,v0];
const v2 = [v0];
[v0,v1,v2,v2];
[-9223372036854775807,7];
const v5 = [2,-256,3];
[-14,-803213058,-256,-1501197711,129,2008562098,1094738072,10,-256];
function f7() {
    return v1;
}
const v11 = /a\w/gudsy;
const v12 = /ka{0}/guims;
const v13 = /ab|c/udmy;
class C14 {
}
function F15(a17, a18, a19, a20) {
    if (!new.target) { throw 'must be called with new'; }
}
const v23 = new v5(16);
const v27 = new Uint8ClampedArray();
class C28 extends Uint8ClampedArray {
    constructor(a30, a31, a32, a33) {
        super(v23);
        try { a31(); } catch (e) {}
        `1073741824${8}c`;
        super[v27] = 520;
    }
}
const t28 = 4n;
const v36 = new t28();
const v37 = new C14();
new C14();
function f39(a40, a41) {
    const o42 = {
        ...v12,
        "d": v36,
        "c": a41,
        "g": v5,
        "f": a40,
        "a": v37,
        7: a41,
        __proto__: C14,
        "e": a41,
        "b": v11,
    };
    return o42;
}
%PrepareFunctionForOptimization(f39);
f39(v13);
const v44 = f39(v13);
%OptimizeFunctionOnNextCall(f39);
f39(v44, v13);
/4/syd;
const v1 = /^xxx$/iuyd;
const v2 = /0fma+b/mvg;
const v6 = [918502315,-1073741824,-2046321892,9007199254740992,-14543,-9007199254740992,-2];
[-774070317,5,257,11];
const v8 = [-586821801,-8,-1340897576,16,-839832499,4096];
class C9 {
    static a = "co2jE";
    static n(a11, a12, a13) {
        const v14 = [];
        const v15 = v1 >> "co2jE";
        try {
            super.assign(v15, v14, "65536", a11, v2);
        } catch(e17) {
        }
        try { a13(..."65536", a12, a13, v1, ...v14, ...v8); } catch (e) {}
        return v6;
    }
    static [v8];
    375 = v6;
    #b = v2;
}
new C9();
const v20 = new C9();
new C9();
function f22() {
    return C9;
}
class C27 {
    static [-8.662521944722695];
    m(a29) {
        function f30() {
            return 1073741823;
        }
        Object.defineProperty("trim", 5, { enumerable: true, set: f30 });
    }
    o(a32, a33) {
        const t37 = a32(-8, "trim", -8, this);
        t37.f = -8 == a32;
    }
}
C27.g = C27;
class C36 extends C27 {
    static #a;
    5;
    4 = C27;
}
const v37 = new C36();
v37[0] = v37;
const v38 = new C36();
v38[5] = v38;
const v39 = new C36();
const v40 = new C27(v20, v38, "defineProperty");
const v41 = v40?.toLocaleString;
try { new v41(); } catch (e) {}
function F43(a45, a46) {
    if (!new.target) { throw 'must be called with new'; }
}
function f48(a49) {
    const o52 = {
        [9007199254740992](a51) {
        },
    };
    return "trim";
}
f48(1073741823);
f48(1073741823);
f48(-8, -8.662521944722695, v1);
try { Set(); } catch (e) {}
new Set(1073741823);
Uint8ClampedArray.e = Uint8ClampedArray;
new Uint8ClampedArray(1944);
const v64 = new Uint8Array(7);
-850789.2132591 | -850789.2132591;
function f70() {
    return v41;
}
f70.f = f70;
new Float32Array(6);
function f72() {
    try { ("c").startsWith(); } catch (e) {}
    try { ("1").trimLeft(); } catch (e) {}
    let v77 = -560.0308879674441;
    const o99 = {
        [v77](a79, a80) {
            super.getYear();
        },
        ...v39,
        __proto__: "1",
        ["1"](a83) {
            /s1(\1a)/mviy;
            /a\S\xf0\x9f\x92\xa9/msuyd;
            const o86 = {
            };
            v77 = -2.0;
            let v87 = BigUint64Array;
            let v89 = ("boolean").toLocaleLowerCase(v38, f72);
            class C90 {
            }
            [v87,v89] = [-5,-65535,2269];
            let v94 = -(-5);
            !-5;
            ++v94;
            (6.0789167093475385 % -5) ^ 6.0789167093475385;
        },
    };
    return o99;
}
const v100 = f72();
v100.a = v100;
function F101(a103, a104, a105) {
    if (!new.target) { throw 'must be called with new'; }
    this?.set;
    try { a105.construct(); } catch (e) {}
}
F101.arguments = F101;
const v110 = [Reflect,Reflect,Reflect];
v110[1];
Reflect.construct(F101, v110, Map);
const v115 = new BigInt64Array(301);
v115[216];
new BigUint64Array(6);
const v122 = new Int16Array(1024);
const v123 = f72();
const v124 = f72();
function F125(a127, a128) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        class C129 {
            static c;
            static #m(a131) {
            }
        }
        const v132 = new C129();
        const v133 = v132.constructor;
        v133.prototype = v133;
    } catch(e134) {
        function f135() {
            return f135;
        }
        class C136 {
            #e;
            [v122];
            static 268435440 = e134;
            #a;
        }
    }
}
new F125(v100, v100);
const v138 = new F125(v124, v123);
const v139 = v138?.constructor;
try { v139(F125, v64); } catch (e) {}
new F125(v100, v123);
new BigUint64Array(1024);
let v144 = 0;
do {
    const o145 = {
    };
    v144++;
} while ((() => {
        const v148 = v144 < 3;
        !v148;
        return v148;
    })())
