const v0 = [];
class C1 {
    a = v0;
    [v0] = v0;
    static #n() {
        const v3 = [this,this,v0,this];
        const v4 = ~this;
        const v5 = v3[C1];
        try {
            v3.valueOf = v5;
        } catch(e6) {
        }
        let v7;
        try { v7 = v3(v3, this, this); } catch (e) {}
        v7[v0] = v0;
        v0[v4] = v7;
        return v0;
    }
    #h;
}
const v8 = new C1();
const v9 = new C1();
const v10 = new C1();
function f11() {
    return v10;
}
class C12 extends f11 {
    #p(a14, a15, a16, a17) {
        a17 = C1;
        try {
            super.toString(v9, a16, v8, this);
        } catch(e19) {
        }
        a17[4] = v0;
        const v20 = new C1();
        [-2.0,965590.0836755796,-636.4354706106772,-0.0,-1e-15];
        function f22(a23) {
            return v20;
        }
        class C24 extends f22 {
            static b;
            static #g;
            [C1] = v8;
        }
        [-1.7976931348623157e+308,5.680378697553811,-665415.2488586096,1.7976931348623157e+308,0.3547606336045579,Infinity,2.0];
        [-2.2250738585072014e-308,-1000000000.0,1000000000.0];
        return C1;
    }
    static a;
    e;
    c;
}
new C12();
new C12();
new C12();
/[]/um;
/a{0}/gudi;
/e0(?:ab)/guis;
class C34 {
}
const v35 = new C34();
const t61 = [v35,"add"];
t61.length &= 1;
