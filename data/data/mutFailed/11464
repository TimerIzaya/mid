function f3(a4, a5) {
    const o6 = {
        "d": a4,
        "f": -1982167464,
        "c": a5,
        [a4]: 1729396409,
        [1729396409]: a4,
        [9223372036854775807]: a5,
        "a": a4,
        "h": 9223372036854775807,
        [a5]: 9223372036854775807,
        1: 1729396409,
        ...a5,
    };
    return o6;
}
class C7 {
    #h;
}
const v10 = [601759695];
const v11 = [1073741824,1073741823,1376142744,1073741825];
function f12(a13, a14, a15, a16) {
    function f17() {
        const o21 = {
            toString(a19, a20) {
                return a13;
            },
        };
        o21.toString();
        const o30 = {
            [-4294967297n](a24, a25, a26, a27) {
                eval();
            },
        };
        return o30;
    }
    a13();
    try { ("").charCodeAt(Map); } catch (e) {}
    %OptimizeFunctionOnNextCall(eval(a16));
    try { a14["find"](..."find", a16, ...v10, ...v11); } catch (e) {}
    return a15;
}
for (let v38 = 0; v38 < 10; v38++) {
    f12(-4294967297n, -4294967297n, v38, v38);
}
f3(1729396409, 9223372036854775807);
f3(9223372036854775807, -1982167464);
f3(-1982167464, 9223372036854775807);
new Map();
[-1000000000000.0,1.0,-0.0,-2.220446049250313e-16,2.2250738585072014e-308,-8.821690390498304,7.362650064143782,-1000.0];
[-0.0,-2.220446049250313e-16,-0.0];
[-296.88036073249793,1000.0,-1e-15,-928.9226390654901,-238691.86227512732,1.134620081630412e+308,-3.2893365786940247,-424.36132082034203];
const v51 = new Int8Array(770);
const v52 = [286977509,536870889,-380982641,1073741825,-14496,-9223372036854775807];
const v53 = [64918,-21903,65536,-65537,-9007199254740991,268435440];
function f54(a55, a56, a57, a58) {
    const v59 = /(?:a*)+q(?<a>.)/guds;
    function f60(a61) {
        return a55;
    }
    for (let [i69, i70] = (() => {
            v52.toLocaleString(f54);
            for (let v64 = 0; v64 < 5; v64++) {
                v53[a56];
                v59["exec"]();
            }
            return [0, 10];
        })();
        (() => {
            const v71 = i69 < i70;
            !v71;
            return v71;
        })();
        (() => {
            i69--;
            const v77 = Symbol.toPrimitive;
            const o79 = {
                [v77]() {
                },
            };
        })()) {
        for (let v82 = 0; v82 < 5; v82++) {
        }
    }
    return a56;
}
for (let v83 = 0; v83 < 5; v83++) {
    f54();
}
new Uint8ClampedArray(v51);
let v86 = Float64Array;
v86 = Map;
const v87 = `
`;
class C88 {
}
const v89 = new Map();
[v89];
