[-652789797];
[578582648,-1423555019,-1199201626,268435440,296];
[4294967295];
const v3 = /jP?/vs;
v3.source = /4[\11]/giy;
const v5 = /uYa/u;
new Float32Array(1899);
class C11 {
    static {
        const v13 = this[6];
        v13[5] = v13;
    }
}
const v15 = /l/dsy;
const v16 = /L(?:ab)+/udsy;
v16.g = v16;
let v17 = /vElk/gsy;
const v19 = Math.round();
for (let v20 = 0; v20 < 10; v20++) {
    async function f21(a22, a23, a24) {
        let v25;
        try { v25 = a22.acosh(v3); } catch (e) {}
        let v27;
        try { v27 = a24["isArray"](a24); } catch (e) {}
        try { v25(a24, v20, Float32Array, v17, v5); } catch (e) {}
        v17 **= v27;
        try {
            ("isArray").endsWith("isArray", 1899);
        } catch(e30) {
        }
        try { a23(v3, v3, v15); } catch (e) {}
        await v19;
        return f21;
    }
    const v33 = f21?.constructor;
    try { new v33(v20); } catch (e) {}
    function f35() {
        const t37 = ("p").__proto__;
        t37[1478] = f35;
        return "match";
    }
    f35();
    f21(Math, f21, v17);
    try { gc(); } catch (e) {}
    const o42 = {
    };
    o42.h = o42;
    gc(o42);
}
