function f0() {
}
const v1 = [f0,f0];
v1.toString = f0;
const v3 = [v1,f0,[v1,v1],v1,v1];
class C4 extends f0 {
    3664490423;
    static [v1];
    static a;
    static {
        function f6() {
            function f7(a8, a9) {
                class C11 {
                    static #p(a13, a14) {
                    }
                    toString(a16, a17, a18, a19) {
                        eval("B");
                    }
                }
                return v1;
            }
            return f7;
        }
        function f26(a27) {
            class C30 extends [BigUint64Array,BigUint64Array,BigUint64Array,BigUint64Array] {
            }
        }
        Object.defineProperty(this, "toString", { writable: true, configurable: true, get: f6, set: f26 });
        const v31 = (a32, a33) => {
            try { a33(a33, this, a32, a33, this); } catch (e) {}
            return a32;
        };
        try {
            super.toString(this, this, v3);
        } catch(e37) {
        }
    }
}
new C4();
new C4();
new C4();
class C47 {
}
const v48 = new C47();
function F49() {
    if (!new.target) { throw 'must be called with new'; }
    const v52 = new Uint32Array();
    for (let v53 = 0; v53 < 5; v53++) {
        v52[v53] = v48;
    }
    try {
        const v54 = this.constructor;
        const o56 = {
            get e() {
                return v54;
            },
        };
        Math.atanh(0.033437543729764596);
        class C60 extends v54 {
            e = F49;
        }
        new C60();
    } catch(e62) {
    }
}
new F49();
new F49();
