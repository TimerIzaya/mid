const v0 = [257,4294967295,6];
let v1 = [4628,65535,-37523,1436119217];
const v2 = [2147483648];
const v4 = this[3];
v1 &&= this;
const v6 = v0.length;
try { this.p(v2, 1.6746427908319532, v0, v4, v6); } catch (e) {}
try {
    v1.__proto__ = v0;
} catch(e8) {
}
-Infinity;
let v11 = 16;
function f12(a13, a14, a15) {
    const v19 = !187763120;
    Math.exp(v4 % v19);
    Math.min(187763120);
    return v19 || 187763120;
}
f12(-2.0, v2, 1.6746427908319532);
v11++;
new Uint32Array(v11);
let v28 = 6;
const v29 = v28--;
let v31 = new Int16Array(v28);
let v33 = Uint16Array;
[536870912,-14,8,-608806145];
const v35 = [0,40220,-536870912,268435440,65459774,8,1989754432,2147483647,-1755722129,7];
let v36 = [47234,4,7,2060788968];
[,v36,v33] = v36;
const v39 = v31[Symbol.asyncIterator];
const v40 = new v33(3677);
v40[162];
v31 = v39;
let v42;
try { v42 = v4(v29); } catch (e) {}
v31[v2] = v4;
try {
    v35.lastIndexOf(v42, 3677);
} catch(e44) {
}
const v46 = [-8617,3];
function f47(a48, a49, a50, a51) {
    a48 + a48;
    const o53 = {
        "h": v28,
        "b": v46,
    };
    return o53;
}
f47(4.435972324405191e+307).h;
