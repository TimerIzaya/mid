class C3 {
    static {
        const o7 = {
            "maxByteLength": 3858,
        };
        const v9 = new SharedArrayBuffer(3858, o7);
        new Uint32Array(v9);
    }
    static [-5.39461664930641] = 4.379791082555775;
    static g;
}
new C3();
new C3();
new C3();
new BigUint64Array(11);
new Uint32Array(5);
new Uint8Array(10);
function f26(a27, a28) {
    const o29 = {
        [a27]: a28,
        65536: a28,
    };
    return f26;
}
f26("-354330605");
f26("-354330605", 2);
const v35 = [65537,268435441,63298,-5,1235122603];
const v36 = [128,215394418];
const v37 = [-2,-4294967296,4294967297];
function F38(a40, a41, a42, a43) {
    if (!new.target) { throw 'must be called with new'; }
    const v44 = this.constructor;
    try { v44(1024, 1024, v35); } catch (e) {}
}
const v46 = new F38(-714582153, F38, -714582153, v36);
const v47 = new F38(9, v46, 9, v37);
v47.b = v47;
const v48 = new F38(1024, v47, v37, v37);
let v51;
try { v51 = ("string").trimStart(); } catch (e) {}
function f52(a53, a54, a55, a56) {
    return v48;
}
f52(-9007199254740991, v51);
