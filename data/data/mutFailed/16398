const v3 = [1,1247262133];
const v4 = [1247262133,1,v3,1];
const v5 = [-9007199254740990,v4,v3];
class C6 {
    get a() {
        const v8 = delete v5[9];
        this instanceof v8;
        return v8;
    }
    static valueOf(a11, a12, a13, a14) {
        const v15 = super.a;
        const o16 = {
        };
        try {
            a11.d = v4;
        } catch(e17) {
        }
        try {
            const o18 = {
            };
            o18.d = v4;
            o18.c = v15;
        } catch(e19) {
        }
        try {
            const o20 = {
            };
            o20.d = v4;
            o20.c = v15;
            o20.a = v15;
        } catch(e21) {
        }
        try {
            const o22 = {
            };
            o22.d = v4;
            o22.c = v15;
            o22.h = v15;
        } catch(e23) {
        }
        return a14;
    }
}
new C6();
new C6();
new C6();
const t46 = -9007199254740990;
new t46(128);
new C6(1609);
new Int8Array(8);
function F36(a38, a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    function f41(a42) {
        const v45 = new Int32Array(1024);
        v45[3];
        return this;
    }
    Object.defineProperty(this, "constructor", { value: -9007199254740990 });
    a39 === a39;
    this.constructor;
}
function f49() {
    class C50 {
    }
    const v51 = new C50();
    for (let v52 = 0; v52 < 5; v52++) {
        new F36(undefined, v51);
    }
}
%PrepareFunctionForOptimization(f49);
f49();
%OptimizeFunctionOnNextCall(f49);
C6();
