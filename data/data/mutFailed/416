const v0 = /a?a\fb\nc\rd\te\vf/uisy;
/(?:ab|cde)/gdims;
/abc+/gvds;
let v3 = 0;
while (v3 < 7) {
    v3++;
}
BigUint64Array.e = BigUint64Array;
new BigUint64Array(64);
Float32Array.length;
const v13 = new Float32Array(4);
for (let v16 = 0; v16 < 32; v16++) {
    v0["p" + v16] = v16;
}
new BigUint64Array(3841);
const v21 = new Int32Array(Int32Array, Int32Array, Int32Array);
try { v21.join(v13); } catch (e) {}
const v24 = ~v21;
v24 - v24;
class C27 extends Int32Array {
}
const v28 = [9,1073741825,-4096,10,1,4294967297,911296943,-9223372036854775808,-53393,16];
([2147483648,-9223372036854775808,1073741823,-5827,17147,6507,0,255,61798])["some"](BigUint64Array, v28);
Math.expm1(v24);
