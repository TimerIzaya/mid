const v0 = [1939762116,-13725,-47041,1024,1000,-4294967297,-1811753039,1073741824];
const o1 = {
};
const o2 = {
};
v0.fill(9223372036854775807);
const v5 = [-226518762,585315277,-43788,-36338];
const v6 = [-65536,4294967297];
function f7() {
    return f7;
}
const v8 = /(?:a*)+q(?<a>.)/guds;
function f9() {
    return f7;
}
Object.defineProperty(v8, "constructor", { writable: true, enumerable: true, get: f9 });
function f10(a11) {
    const v12 = a11?.constructor;
    try { v12(a11, f7); } catch (e) {}
    const o15 = {
        get d() {
            return a11;
        },
        __proto__: v8,
    };
    return o15;
}
for (let i18 = 0, i19 = 10; i18 < i19; i19--) {
    for (let v26 = 0; v26 < 50; v26++) {
        f10(v8);
    }
}
new Date();
v5.length += 1.0;
v6 <= 9223372036854775807;
function f40() {
    return f40;
}
let v41 = -4294967297n;
v41--;
function f44() {
    Int8Array.b = Int8Array;
    Int8Array.b = Int8Array;
    return f44;
}
%PrepareFunctionForOptimization(f44);
f44();
%OptimizeFunctionOnNextCall(f44);
f44();
