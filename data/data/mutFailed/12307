class C3 {
    #toString(a5) {
        for (let v6 = 0; v6 < 32; v6++) {
            this["p" + v6] = v6;
        }
        return typeof "number" === "number";
    }
    static #g;
    #h;
    static #a = "n";
}
const v12 = new C3();
const t12 = "-13871";
const v13 = new t12();
const v14 = new v12();
function f18(a19, a20, a21) {
    const o30 = {
        [-2]: v12,
        "e": a19,
        "c": v12,
        "f": v12,
        m(a23, a24, a25) {
            super.d;
            [19320,9,22173,8];
            [-402780272,60605,-1,-9,-256];
            [-9619,-1203071154,9223372036854775807,30423,268435441,12];
            return v14;
        },
        "b": "n",
        "h": v13,
        "a": "n",
    };
    return o30;
}
f18("number", -1024n, f18("n", "n", "n"));
f18("number", C3, "number");
class C35 {
}
const v36 = new C35();
let v38;
try {
const t0 = "number";
v38 = t0();
} catch (e) {}
let v39;
try { v39 = v36(); } catch (e) {}
function F40(a42, a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
    class C45 {
    }
    function F46(a48, a49, a50, a51) {
        if (!new.target) { throw 'must be called with new'; }
        C45.d = v39;
        "p" + 11;
        const v54 = this.constructor;
        try { new v54(); } catch (e) {}
    }
    new F46(a44, v36, C45, undefined);
    new F46();
}
const t60 = 4294967297n;
new t60(undefined, F40, v38);
