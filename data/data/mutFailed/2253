const v2 = new Uint8ClampedArray(-1);
for (let v3 = 0; v3 < 5; v3++) {
    v2[v3] = -1;
}
const v7 = new Date();
try { v7.getUTCHours(); } catch (e) {}
const v10 = Math.cbrt();
v10 % v10;
const v12 = [9223372036854775807,-9007199254740991,-1];
const v13 = [4294967297,-4096,3];
class C14 {
    static #c;
    constructor(a16, a17) {
        a17 ||= this;
        try {
            v13.concat(this, v12);
        } catch(e19) {
        }
    }
    o(a21) {
        try {
            this.#c = v13;
        } catch(e25) {
        }
    }
}
try { Float32Array.bind(-1); } catch (e) {}
new Float32Array(22);
class C31 {
    [720972705n];
    #p(a33, a34, a35, a36) {
        super.m();
    }
}
new C31();
let v39 = 512;
new Int8Array(v39);
const v44 = new Int8Array(3);
v44[1];
class C47 {
    static {
        try { this.bind(22); } catch (e) {}
        const v51 = Symbol.hasInstance;
        Symbol.for(v51.description);
        this[v51];
    }
    #p() {
        let v57;
        try { v57 = this.p(undefined, this, this, this, this); } catch (e) {}
        try {
            class C58 {
            }
            ([-2.0,-1.0,-5.0,-5.429610213896366,-2.2074967697332255,76807.25242455839,1.7976931348623157e+308]).toLocaleString();
            const v63 = [,[,]];
            class C64 {
                [v63] = undefined;
            }
            new C64();
            v57.#p(undefined, v57, v57, undefined);
        } catch(e67) {
        }
        return undefined;
    }
    static #a = undefined;
    c = undefined;
}
C47.length;
const v69 = new C47();
const v70 = new C47();
const v71 = new C47();
v71.c;
function f73(a74) {
    const v77 = new BigInt64Array(5);
    function F81(a83) {
        if (!new.target) { throw 'must be called with new'; }
        const v84 = this.constructor;
        try { new v84(-143547321); } catch (e) {}
        a83 - a83;
        this.g = -1517929768;
        try {
            this.g = -1;
        } catch(e87) {
        }
        try {
            this.h = a83;
        } catch(e88) {
        }
    }
    const v89 = new F81(-1);
    const v90 = new F81(-143547321);
    class C91 extends F81 {
        #p(a93, a94) {
            const v95 = a93?.[32];
            Object.defineProperty(v90, v89, { writable: true, configurable: true, value: F81 });
            return v95;
        }
        [-1];
        static {
            let v98;
            try { v98 = this["n"](-1517929768); } catch (e) {}
            const o99 = {
            };
            const o100 = {
                "c": v89,
                ...v98,
                65537: o99,
                __proto__: this,
                "a": this,
                "g": this,
                ...this,
            };
        }
    }
    try { C91(); } catch (e) {}
    const v102 = new C91();
    const v104 = new Map();
    function f105(a106, a107, a108, a109) {
        a106 >>> a106;
        a109--;
        const o125 = {
            "c": -143547321,
            toString(a113, a114, a115, a116) {
                let v112 = this;
                a114 << -1557853178;
                let v120 = v112++;
                Math.log2(v120);
                const v122 = v120++;
                Math.pow(v120, -1557853178);
                F81 ^ v122;
                return a116;
            },
            "b": v102,
        };
        try { o125.toString(v104, a106, v90, v90); } catch (e) {}
        return o125;
    }
    f105(-1517929768, -1517929768, F81, -1);
    f105(-1517929768, -143547321, F81, -1517929768);
    return v77;
    class C130 {
        constructor(a132, a133, a134) {
        }
    }
    new Uint32Array(C130);
    const o141 = {
        15: a74,
        toString(a137, a138) {
            super.h = a138;
            try { C47.stringify(a74, a74, this); } catch (e) {}
            try {
                C47.c = v69;
            } catch(e140) {
            }
            return a137;
        },
        2147483647: undefined,
        __proto__: v70,
        "c": a74,
        ...a74,
        "f": a74,
    };
    return o141;
}
const v142 = f73(C47);
f73(v71);
f73(v142);
[0.0,26.917886948179785];
[4.0,-6.418452896256084,1000000000.0,4.0,-2.220446049250313e-16,-1000000000.0];
v39--;
try { Array.of(); } catch (e) {}
("constructor").localeCompare(("gYPHN").normalize("NFKD"));
const v158 = [883.1365358956336,-266.1024094651509,-5.0,1.4118854267221805e+308,-786614.3512895996];
new C47(-1);
function f161(a162, a163, a164) {
    const v168 = new Uint8ClampedArray(112);
    const v171 = new Uint8Array(64);
    try { v168(-85357.59116785484, ...v171, 64, 46, -3.383486186086852e+307, ...v168); } catch (e) {}
    const o177 = {
        set e(a176) {
        },
    };
    const t181 = [7.134431132944798e+307];
    t181[4] = WeakMap;
    const t183 = "constructor";
    t183();
    (64).prototype;
    o177.e;
    return a162;
}
f161(f161, undefined, f161);
try { v158.push(Float32Array); } catch (e) {}
(v142 > C47 ? v142 : C47).prototype;
for (let i190 = (() => {
        let v188 = 0;
        v188++;
        return v188;
    })();
    (() => {
        let v191 = 5;
        v191--;
        return i190 < v191;
    })();
    -i190, i190++) {
    try {
        new f73(v142);
        function F199(a201, a202, a203) {
            if (!new.target) { throw 'must be called with new'; }
        }
        F199();
        URIError(Float64Array);
    } catch(e208) {
        const v209 = [-991034.5596759731,179.71649176762253,115582.55190338776,-1000000.0];
        async function f211(a212, a213) {
            'use strict';
            a213[9] = v209;
            return -21133.120743932668;
        }
    }
}
