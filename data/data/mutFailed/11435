class C3 {
    get d() {
        this[7] |= 1073741825;
        1073741825 & this;
        C3.a = C3;
        const o10 = {
            "b": 1e-15,
            [3](a9) {
            },
        };
        delete o10.b;
        return 11716;
    }
    static m(a13) {
        super.d;
        return -11;
    }
}
const v18 = new C3();
const v19 = new C3();
const v20 = new C3();
class C21 extends C3 {
    static [v18] = v20;
    constructor(a23, a24, a25) {
        super();
        C3 |= a24;
        super.d = v18;
        try {
            v19.fuck(this, a25, a24);
        } catch(e27) {
        }
    }
    /*
    constructor(a29) {
        ("uM").localeCompare(a29, "uM");
    }
    */
    /*
    constructor(a32) {
    }
    */
    ["uM"] = C3;
    static 184;
}
const v34 = new C21(v18, v19, v18);
const v35 = new C21(C21, v20, v19);
new C21(v35, v34, v18);
function f37() {
    return v18;
}
const v48 = new Int8Array(1159);
v48[2];
function F50(a52, a53, a54) {
    if (!new.target) { throw 'must be called with new'; }
}
try {
    class C57 extends [BigUint64Array,BigUint64Array,BigUint64Array,BigUint64Array] {
    }
} catch(e58) {
}
