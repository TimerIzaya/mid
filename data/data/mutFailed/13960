function F0() {
    if (!new.target) { throw 'must be called with new'; }
    this.h = F0;
    try {
        this.a = 3;
    } catch(e3) {
    }
    try {
        this.h = 3;
    } catch(e4) {
    }
}
new F0();
new F0(F0);
const v7 = new F0();
v7.b = v7;
v7.b = v7;
new BigUint64Array(15);
const v13 = Uint8Array?.b;
try { new v13(Uint8Array); } catch (e) {}
new Uint8Array(203, 203, 203, 15);
~-5;
BigUint64Array.length = BigUint64Array;
new BigUint64Array(-5);
function F20() {
    if (!new.target) { throw 'must be called with new'; }
}
const v22 = new F20();
const v23 = new F20();
const v24 = v23?.constructor;
try { new v24(); } catch (e) {}
const v26 = new F20();
function f27(a28, a29) {
    const o34 = {
        "b": v26,
        valueOf(a31, a32) {
            a28(v22, a29);
            return F20;
        },
        "a": v23,
    };
    o34.g = o34;
    return o34;
}
~4294967296;
async function f39(a40, a41) {
    a41 === a41;
    %PrepareFunctionForOptimization(f27);
    f27(a41, f27());
    %OptimizeFunctionOnNextCall(f27);
    f27();
    return f39;
}
f39(F20, 4294967296);
