new Uint8ClampedArray(4);
new BigUint64Array(4);
new Uint8Array(4096);
[-4.0,0.0,924088.1268969947,-1.324231975501173e+308,-743.30408712836];
let v10 = [-1000.0,0.36241001393480954,3.846708076807896e+307,-5.813098241515238,-1e-15,-5.0,-1000000000.0];
[0.24445495696411068,1e-15,-5.681929574396478,-988.6348073199945,-9.37113361983269,3.0];
const v16 = new Float32Array();
for (let v17 = 0; v17 < 25; v17++) {
    function f18(a19, a20, a21, a22) {
        let v23 = a19[1];
        v23--;
        v17[0] = a19;
        const o27 = {
            1073741825: "MIN_VALUE",
        };
        const o28 = {
            __proto__: o27,
        };
        const v29 = a21.__lookupGetter__;
        try { v29.constructor(v16, a21, v17); } catch (e) {}
        return v29;
    }
    for (let v31 = 0; v31 < 10; v31++) {
        f18(v16);
    }
}
function f33(a34, a35, a36) {
    const v37 = [1073741824,1073741823,1376142744,1073741825];
    function f38(a39, a40, a41, a42) {
        function f43() {
            return a42;
        }
        class C44 extends f43 {
        }
        for (let v45 = 0; v45 < 5; v45++) {
            try {
                v10 &= C44;
            } catch(e46) {
            }
        }
        return Float32Array;
    }
    for (let v47 = 0; v47 < 5; v47++) {
        f38(f33, a36, v47, v37);
    }
    %OptimizeFunctionOnNextCall(a36);
    return a35;
}
f33(f33, f33, f33(Float32Array, v16, v16));
