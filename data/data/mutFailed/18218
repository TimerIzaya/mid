class C3 {
    64 = "36561";
    static n(a5) {
        let v6 = super.h;
        v6 = "then";
        ("then")[29] / "unscopables";
        [-1143313757,4294967296,4];
        [-4294967297,14,-256];
        [-1483203576,268435441,-9007199254740992,-2,2147483647];
        return v6;
    }
}
new C3();
const v13 = new C3();
const v14 = new C3();
function F15(a17, a18) {
    if (!new.target) { throw 'must be called with new'; }
    function f19() {
        return v13;
    }
    function f20(a21) {
        new BigInt64Array(4094);
        new Uint16Array(0);
        new Uint8Array(66);
    }
    Object.defineProperty(this, "f", { writable: true, enumerable: true, get: f19, set: f20 });
    try {
        this.f = C3;
    } catch(e31) {
    }
    try {
        this.d = "then";
    } catch(e32) {
    }
    try {
        this.b = a18;
    } catch(e33) {
    }
}
const v34 = new F15("36561", "36561");
new F15(v14, v34);
new F15("36561", C3);
function f37() {
    function f38(a39, a40) {
        return a40;
    }
    const v42 = new Promise(f38);
    v42.constructor = f37;
    v42.catch();
    return f37;
}
%PrepareFunctionForOptimization(f37);
f37();
%OptimizeFunctionOnNextCall(f37);
f37();
