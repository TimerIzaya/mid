let v2 = -1;
class C3 {
    f;
    constructor(a5) {
        let v4 = this;
        v4 = a5;
        const t6 = "valueOf";
        t6["valueOf"] = v2;
        try {
            v4 = a5;
            delete C3?.["valueOf"];
            super.g;
            new Set();
            v4.d = v2;
        } catch(e10) {
        }
    }
    toString(a12, a13) {
        try {
            this.f = a12;
        } catch(e14) {
        }
        return a13;
    }
}
const v15 = new C3("valueOf");
const v16 = new C3(v2);
new C3(v15);
class C21 extends C3 {
    n(a23, a24, a25) {
        v2 >>>= v2;
        class C26 {
            static [a25] = "valueOf";
            162 = this;
            16;
        }
        new C26();
        new C26();
        new C26();
        return C26;
    }
    e = v16;
    static 0;
    h;
    3;
    8 = v2;
    c = v2;
    [v16] = v16;
    ["object"];
}
const v30 = new C21();
const v31 = new C21();
new C21();
class C33 extends C21 {
    static [-2];
    p(a35, a36, a37, a38) {
        a35["toString"](a35, a35, a36, C21, a36);
        const v41 = v31[1];
        C21 <= a35;
        super.e;
        const v46 = a36 - a37;
        let v47 = a37--;
        +a37;
        "-2" | v41;
        const t62 = -9007199254740992;
        t62[0] = "valueOf";
        super.a = "-2";
        ("toString").length;
        const v52 = [a37];
        Reflect.apply(("toString").slice, Math, v52);
        ~v47;
        Math.cosh(v46);
        ++v47;
        --v47;
        return v30;
    }
}
new C33();
new C33();
new C33();
const v62 = [268435440,8,7,1073741824,2147483647,70520590,-9223372036854775807,129,268435439,-1147002105];
const v63 = v62.concat(v62);
v63.flat(v63);
