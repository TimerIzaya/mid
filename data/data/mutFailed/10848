[2.220446049250313e-16];
[-5.0,848.838796078662,359362.84126361436,-1.7976931348623157e+308];
[-1000.0,-4.0,-2.054213049142004,5.0];
new Uint8ClampedArray(100);
new Int8Array(3174);
new Int8Array(227);
const v12 = [-Infinity,-1000000.0,-964229.7889241329];
const v13 = [1000.0,7.013617100191173,-351.0818852767976,0.6726521994945021,0.0654548428416345,0.0,357.95756141696074,-114535.71398965968];
const v14 = [1000000000.0,1.0,1.33700765354115,3.759383313252208,0.7953224416766568,9.060355110242564e+307,1.7976931348623157e+308,1.7976931348623157e+308,2.220446049250313e-16];
const v15 = [v13];
[v12,v13,v15,Uint8ClampedArray,v14];
[v13,v14,v14];
1000000000000.0 - 1000000000000.0;
let v21 = 4.9807369083218855;
v21++;
function f23() {
    return v21;
}
function F24(a26, a27, a28) {
    if (!new.target) { throw 'must be called with new'; }
    const v29 = a27.constructor;
    try { new v29(a27, a26, a28); } catch (e) {}
    a28 + a28;
    try {
        this.b = v14;
    } catch(e32) {
    }
}
const v33 = (100).arguments;
const v34 = new F24(1000000000000.0, v15, 0.0746389278020293);
v34.length = v34;
new F24(Uint8ClampedArray, v14, 0.0746389278020293);
class C36 extends F24 {
    512 = v14;
}
C36.prototype = C36;
new v33();
new C36();
new C36();
-1e-15 ^ -1e-15;
(1073741823 & 1073741823) + 227;
