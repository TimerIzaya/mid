let v0 = [];
function f1(a2) {
    function F3(a5, a6) {
        if (!new.target) { throw 'must be called with new'; }
        const v7 = this.constructor;
        const v11 = new Int16Array();
        v11.lastIndexOf(1.8023018568192065e+307);
        try { new v7(this, a5); } catch (e) {}
        a6++;
        this.g = a5;
    }
    return F3;
}
v0.toString = f1;
class C15 {
    static a = v0;
    static [v0];
    #toString() {
        v0++;
        Math.clz32(v0);
        return Math.clz32(-1424120414);
    }
    static #g = v0;
    static #h = v0;
    [v0] = v0;
}
const v24 = new C15();
v24.toString = f1;
const v25 = new C15();
try { v25.isPrototypeOf(v25); } catch (e) {}
const v27 = new C15();
const v28 = [C15,v27,v0,v24,v24];
v28.p17 = v28;
const v29 = [v24];
function f30(a31) {
    class C34 {
        constructor(a36) {
            ("valueOf").localeCompare(a36, "valueOf");
        }
    }
    new C34("c");
    return C34;
}
v29.toString = f30;
const v39 = [v25,v29,v24];
v39[1] = v39;
function f40() {
    return v29;
}
let v41;
try { v41 = f40.call(f40); } catch (e) {}
v41.toString = f30;
1747359506 >>> 1747359506;
function f46(a47, a48) {
    a47[Symbol.toPrimitive] = f40;
    const v51 = a48 - a48;
    const o71 = {
        [v41]: a47,
        "c": v51,
        2887730959: v41,
        "f": f40,
        "b": f40,
        "a": 268435439,
        "d": v24,
        get h() {
            function f54(a55, a56) {
                try { v39.some(f46, a55); } catch (e) {}
                const o60 = {
                    "maxByteLength": 1767,
                };
                const v62 = new ArrayBuffer(1767, o60);
                new Float64Array(v62);
            }
            new Promise(f54);
            const o69 = {
                "execution": "async",
                "type": "major",
            };
            return gc(o69);
        },
        "g": C15,
        ...a47,
    };
    return o71;
}
const v72 = f46(v39, 268435440);
v72[2] = v72;
for (let v73 = 0; v73 < 32; v73++) {
    v28["p" + v73] = v73;
}
f46(v28, 268435440);
f46(v29, 1747359506);
let v78 = 12;
v78--;
Int32Array.name = Int32Array;
const v81 = new Int32Array(v78);
for (const v82 in v81) {
}
