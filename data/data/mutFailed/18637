[536870889,128,-19696,-1908276623,-901120091,-4294967297,-1154,2041485674,27417];
[1397001116,-2147483649,10,268435440,-268435456,-65537,-15,10];
[-9223372036854775807,1073741823,920418469,-30179,-8596,10,47887];
new Uint32Array(9);
function f7() {
    class C8 {
    }
    const v9 = new C8();
    try { v9.isPrototypeOf(v9); } catch (e) {}
    return v9;
}
%OptimizeFunctionOnNextCall(f7);
new Int32Array(1000);
new Uint32Array(552);
function f16(a17) {
    function F19(a21, a22) {
        if (!new.target) { throw 'must be called with new'; }
    }
    function f24(a25, a26, a27, a28) {
        Uint8Array / a25;
        a26 < F19;
        const o34 = {
            n(a32, a33) {
                return 552;
            },
        };
        return 552;
    }
    class C35 {
    }
    new C35();
    const v39 = new Uint8ClampedArray();
    const v41 = eval();
    const v42 = new Uint8ClampedArray(v41, ...v39, v41);
    v42.findLastIndex;
    function F44() {
        if (!new.target) { throw 'must be called with new'; }
        for (let v46 = 0; v46 < 250; v46++) {
            const v50 = new Uint8ClampedArray(3269);
            const v51 = new Uint8ClampedArray(v50);
            new Uint16Array(v51);
            const v54 = "p" + v46;
            const v55 = v54.fontcolor("f", "p", v54, this);
            v55.localeCompare(v55);
        }
    }
    new a17();
    new F44();
    return C35;
}
f16();
const v60 = f16();
f16();
class C62 extends f16 {
}
const v65 = new Date();
v65.setUTCSeconds(-482.72039968688557);
function f69(a70, a71, a72, a73) {
    function f74() {
        const o78 = {
            valueOf(a76, a77) {
                return f74;
            },
        };
        try {
            f74();
        } catch(e80) {
        }
    }
    f74();
}
f69(522675525n, 0.5375507050396837, 0.5375507050396837, 9);
new v60();
