class C3 {
    536870887 = 4096;
    #p(a5, a6) {
        const v7 = -a5;
        try {
            this.c = a5;
        } catch(e8) {
        }
        return v7;
    }
    static {
        let v10 = this.a;
        v10 <<= -2147483647;
    }
}
const v14 = new C3();
const v15 = new C3();
const v16 = new v15();
function f17() {
    return v14;
}
function f19(a20, a21, a22) {
    const o31 = {
        [a22]: -2147483647,
        "a": a22,
        "b": 4096,
        n(a24, a25, a26) {
            delete a24[1024];
            const o28 = {
                "construct": f17,
                "isExtensible": f17,
                "setPrototypeOf": f17,
            };
            new Proxy(a26, o28);
            return v16;
        },
        "c": a22,
    };
    return o31;
}
f19(null, -2147483647, f19(v16, -2147483647, 59239));
f19(-2147483647, 59239, f17);
[920.2965962956621,-3.0,-Infinity,-1.0,0.6009365175141178,381291.7568479108,-575082.4115795925];
[-1000000000000.0,-2.2250738585072014e-308,1e-15,-6.244621909428685,454.2844021744927];
[1000.0,-1.7429508833232713e+308,-1.7976931348623157e+308,0.9760500161871694,-210.92890791773812,465.7721540038142,-1.7976931348623157e+308,-1e-15];
class C44 {
    set h(a46) {
        a46[-12] = 0;
        0 instanceof a46;
        this !== this;
        let v49 = ~-9200;
        v49 = 129;
        const t51 = this[5];
        const v51 = delete t51?.[12];
        try {
        } catch(e52) {
        }
        const v55 = new v51(520);
        for (let v56 = 0; v56 < 5; v56++) {
            v55.indexOf(v56);
        }
        super.g = v51;
    }
    h;
    6;
    #a;
    f = -4;
    8;
    [-12];
}
new C44();
new C44();
new C44();
gc();
function F63(a65, a66) {
    if (!new.target) { throw 'must be called with new'; }
    try {
    } catch(e67) {
    }
}
class C68 extends C44 {
    static {
    }
}
const o70 = {
};
for (let i = 0; i < 10; i++) {
    /[xyz{1,}(O)]/udis;
}
try {
    function f74() {
    }
} catch(e75) {
}
const o76 = {
};
try {
    const o77 = {
    };
} catch(e78) {
    function f79(a80, a81, a82, a83) {
        const o87 = {
            n(a85, a86) {
            },
        };
    }
}
try {
    const o88 = {
    };
} catch(e89) {
}
try {
} catch(e90) {
    function f91(a92, a93, a94, a95) {
    }
}
