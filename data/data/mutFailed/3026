const v0 = [374.8771056153478,-1.041998425827944e+308,NaN,4.0,-1000000000000.0,720391.1488558841,4.0];
const v1 = [NaN,1000000000000.0,-5.254056888636547,1.760124751666385e+308,-243.49500069525538,-2.0,1.4780181313145906e+308];
[1000000000.0];
const v6 = /abc|def*/uimsy;
/r(\xed\xb0\x80)\x01/gvmy;
let v8 = Float64Array;
new v8();
new Date(Date);
const v13 = new Float32Array();
[v13];
const o15 = {
};
class C16 {
}
/(\2)(\1)/gusy;
function F18(a20, a21, a22, a23) {
    if (!new.target) { throw 'must be called with new'; }
    class C24 extends F18 {
        #a = v8;
        [a20] = a21;
    }
    new C24();
    new C24();
    new C24();
    try {
        this.d = v6;
    } catch(e28) {
    }
    function* f29(a30) {
        return f29;
    }
    return v1;
    const o31 = {
    };
}
const v32 = new F18(v1, "global", "952412110", "global");
++v8;
2147483649 << 2147483649;
SharedArrayBuffer - "952412110";
try { v0.concat(v13); } catch (e) {}
const o43 = {
    "maxByteLength": 1293466293,
};
new SharedArrayBuffer(1796, o43);
new F18(v32, "global", "global", "952412110");
new F18(v32, "callee", "global", "global");
const v49 = new Date();
new Int16Array(Int16Array);
59817n < undefined;
v49.toLocaleDateString();
