const v1 = new WeakSet();
const v3 = new v1();
function f4(a5, a6) {
    const o24 = {
        get a() {
            gc(v1, a5, this);
            delete this?.length;
            class C12 {
            }
            a5[a5] = WeakSet;
            [-464.83218138782,-632841.7069260154,-814233.1539916245,2.0,4.102722776609614,4.0,-205.4767726818145,-1e-15,1000000000000.0];
            [2.2250738585072014e-308,-353.60487959783575,3.0,1000000000000.0,477264.8607123636,-275424.6173460082];
            function f15(a16, a17, a18, a19) {
                const v22 = new Int32Array(a17);
                v22[0] %= -1073741824;
                return v22;
            }
            %PrepareFunctionForOptimization(f15);
            [-221.26764901732804,-1000.0,-0.0];
            return a5;
        },
        "g": v3,
        "e": v1,
        "d": WeakSet,
        "a": v1,
    };
    return o24;
}
const v25 = f4(f4, f4);
f4(WeakSet, WeakSet);
f4(v1, v25);
const v30 = new WeakSet();
const v31 = v30.constructor;
class C32 extends v31 {
    [Date] = Date;
    static #e = v31;
}
new Date();
const v36 = new Float64Array(9);
new Uint8ClampedArray(94, v36);
new Uint32Array(2350);
const o43 = {
};
function F44(a46, a47, a48, a49) {
    if (!new.target) { throw 'must be called with new'; }
    268435439n ^ 268435439n;
    for (let v54 = 0; v54 < 100; v54++) {
        const v55 = v54 >> v54;
        const o65 = {
            __proto__: 9,
            get f() {
            },
            "apply": f4,
            ...v25,
            6: undefined,
            "d": undefined,
            [268435439n]: 2105444095n,
            /*
            __proto__: o43,
            */
            "g": a48,
            "b": -4294967296n,
            valueOf(a59) {
                return v54;
            },
            ...this,
            [v55]: v55,
            p(a61, a62, a63) {
            },
        };
    }
}
const v66 = new F44(F44, F44, o43, F44);
const v67 = v66.constructor;
new v67(v67, v67, o43);
new F44(F44, o43, o43, F44);
