function f0() {
    class C4 {
    }
    function F6(a8) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.f = 145253519;
        } catch(e9) {
        }
    }
    const o18 = {
        [-926136.4177981104]: -9007199254740991,
        [-9007199254740991]: -9007199254740991,
        "d": -2147483648,
        valueOf(a11, a12) {
            try {
                a11.__proto__ = a12;
            } catch(e13) {
            }
            try {
                this.fuck(1.3113057631007745, [1.3113057631007745,a11,-9007199254740991,-2147483648,a12], -2147483648, this);
            } catch(e17) {
            }
            return this;
        },
    };
    return o18;
}
const v19 = f0();
let v20 = f0();
f0();
function f22(a23) {
    const o34 = {
        toString(a25) {
            const o29 = {
                "execution": "async",
                "type": "minor",
            };
            gc(o29);
            const v31 = a25 && v20;
            v31 & v31;
            this[v19] = a25;
            return v31[4096];
        },
        [a23]: v19,
        __proto__: v20,
        6: v20,
        "b": a23,
        "h": a23,
        ...v20,
    };
    return o34;
}
f22(f22(f22));
f22(v20);
[-1.7976931348623157e+308,-798.1331098461952,811.8312748615715,4.0,-211.22813935368572,4.0,-9.083275689592961e+307,107336.02559891925,-6.3701554209668165,3.1573834053196865];
[6.379420748309273e+307,-1.3683608657676444e+308,Infinity,-4.0];
[0.9762562845783719,5.0,-2.4663995677124584,0.0];
class C41 {
    static m(a43, a44, a45) {
        for (let [v46,v47] of a43) {
            v20--;
            v20 << ~v20;
            Math.cos(-3828);
        }
        return a43;
    }
    static #e;
}
new C41();
const t70 = "GaY9";
t70[[1.3080204387628154,-2.2250738585072014e-308,NaN,-341334.9766939094,-4.720661350098792e+307,-698576.696052423]] >>= -4.0;
("65535").lastIndexOf(128, 65536);
new C41();
new C41();
new Uint8ClampedArray(256);
new BigInt64Array(24);
const v73 = Uint8Array?.constructor;
try { new v73(Uint8ClampedArray); } catch (e) {}
new Uint8Array(4);
-9223372036854775807n | -9223372036854775807n;
-(-30326n);
class C85 extends (-30326n).constructor {
}
const v88 = new Int16Array(1269);
for (const v89 in v88) {
}
function F90() {
    if (!new.target) { throw 'must be called with new'; }
    const v92 = this?.propertyIsEnumerable;
    try { new v92(-30326n); } catch (e) {}
    this.a = this;
    3872 >>> 3872;
    try {
        this.a = 3872;
    } catch(e96) {
    }
}
const v97 = new F90();
const v98 = new F90();
v98.length;
new F90();
62324 & 62324;
4294967295 * 4294967295;
function F106(a108, a109, a110) {
    if (!new.target) { throw 'must be called with new'; }
    try { new a109(); } catch (e) {}
    a110.f = a110;
    try {
        this.b = a109;
    } catch(e112) {
    }
}
class C115 {
    toString(a117, a118, a119, a120) {
        function f121(a122) {
        }
        class C123 extends f121 {
            a = -65535n;
        }
        return -2074262259n;
    }
}
const v124 = new C115();
for (let i = 0; i < 5; i++) {
    v124 + v124;
}
new F106(4294967295, F90, v97);
new F106(62324, F106, v98);
const v129 = Symbol.toPrimitive;
const o131 = {
    [v129]() {
    },
};
