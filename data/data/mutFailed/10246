const v0 = [];
class C1 {
    c = v0;
    static valueOf() {
        return null;
    }
    m() {
        let v5;
        try { v5 = new this(this); } catch (e) {}
        function f6(a7) {
        }
        const v9 = new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
        const v12 = new Float64Array(3341);
        const v14 = new Int8Array();
        const o15 = {
            __proto__: v9,
            "g": Float64Array,
            ...v12,
            2147483647: v14,
        };
        v0.length;
        for (const v20 of Array(19793)) {
        }
        try {
            this.__proto__ = v5;
        } catch(e21) {
        }
        return v0;
    }
}
for (let i23 = 4294967295; i23 < 9;) {
}
new C1();
new C1();
const v30 = new C1();
/ba*?[[^123]\P{Decimal_Number}]+/uimy;
/Rzabc|def|ghi/gudims;
/MJ{12,?/gd;
const v37 = [C1,C1,C1,"object"];
[v30,v37,v37,"536870889"];
[v37,C1];
const v40 = [];
const v41 = [v40,v40,v40,v40,v40];
try { v40.reduce(v41); } catch (e) {}
gc(128n);
class C48 {
    static get h() {
        const o53 = {
            "execution": "sync",
            "type": "major",
        };
        gc(o53);
        return 268435441;
    }
}
const v55 = new C48();
const v56 = new C48();
class C57 extends C48 {
    3;
    ["object"] = v55;
    ["256"] = v55;
    static #toString(a59, a60, a61) {
        try { a59("256", v56, a59, a61); } catch (e) {}
        Math.atan(16);
        a60 ^ 16;
        return Math.abs(16);
    }
}
const v68 = new C57();
if (v68 <= v56) {
    new Uint8ClampedArray(75);
    new Int16Array(6);
    new BigInt64Array(1821);
} else {
    new C57();
}
