const v2 = new Int32Array(-66765468);
const v5 = new Uint8Array(-21755);
const v8 = new Uint8Array(127);
function f9(a10, a11, a12, a13) {
    const o22 = {
        "h": 127,
        [Uint8Array](a15, a16, a17, a18) {
            new Object();
            try { v5.reduceRight(Uint8Array, a18); } catch (e) {}
            return v2;
        },
        ...v8,
        ...v5,
        "e": a13,
    };
    return o22;
}
f9(-66765468, -66765468, 127, 127);
f9(-66765468, 127, -66765468, 127);
f9(-66765468, 127, -21755, 127);
const v28 = new Array(5);
const v31 = new Int8Array(181);
new Uint8Array(64, -66765468);
new Uint8Array(6);
class C38 {
}
function f39(a40) {
    return a40;
}
class C41 extends f39 {
    static [v28];
    d;
    unicode;
}
const v43 = new WeakMap();
class C44 extends C38 {
    static 1 = v43;
    10000;
}
new Int8Array();
const o49 = {
    "execution": "async",
    "type": "minor",
};
gc(o49);
v43.h |= 6;
new Date();
try {
    C41.fuck(v28, -65536, v31, -65536);
} catch(e55) {
}
gc();
