const v0 = [-3,-1234225968,384443187,2093814514,-7,9,-6278];
const v1 = [1578,4294967297,-268435456,6492,1073452077,-128,-268435456,9223372036854775807,13];
const v2 = [-6,964790481,-781059139,-2,404171521,1000,129,47140,-2147483649,-4294967295];
function f6() {
    return v1;
}
class C7 extends f6 {
    static {
        try {
            const t9 = "Us";
            t9.b = this;
        } catch(e9) {
        }
    }
    constructor(a11, a12, a13, a14) {
        super();
        d = "Us";
        super.length >>>= a14;
        this["find"](a14, a11);
    }
}
const v20 = new C7(v2, v0, v1, v1);
const v21 = new C7(v20, v20, v0, v20);
new C7(v0, v21, v2, v21);
[-34,536870887,268435440,14525];
const v24 = [6,127,-128,13,65537,-13];
const v25 = [-536870912,-4608,-9223372036854775808,15];
try { ("object").substring(v24, v25); } catch (e) {}
try { ("has").matchAll("object"); } catch (e) {}
const v33 = new Int8Array(2);
8 & 8;
new Int16Array(8);
const v41 = new Uint16Array(3225);
v41[877];
for (const v43 of v41) {
    v43 ^ v43;
    v43[3] = 5n;
    const v46 = 9007199254740991 * v43;
    v46 | v46;
}
const v50 = new Int32Array(23);
v50[1];
1000000.0 >>> 1000000.0;
const v56 = [7,128];
const v57 = [13,-2103725161,15240,-9223372036854775807,1077763702,256,-1024,9,1073741823,-2];
v57[4];
const v59 = v57[4];
const v60 = v59 | v59;
v60 / v60;
const v62 = [40213,422333454,47387,65536,-51830];
v62[2] = v62;
0 - 0;
0 - 0;
let v66 = 15135;
const v67 = v66--;
try { gc(); } catch (e) {}
gc();
v25[v67] ||= 2;
try {
    v0.__proto__ = v57;
} catch(e75) {
}
const v76 = new BigInt64Array();
try { v76.entries(); } catch (e) {}
try { ("boolean").slice(v41, v33); } catch (e) {}
let v80;
try { v80 = ("boolean").repeat(1000000.0); } catch (e) {}
v80[1322328];
const t67 = "toString";
t67[6] = "toString";
"toString" == "toString";
("boolean").split("toString");
const v86 = -256 >> -256;
v86 ^ v86;
function f88(a89, a90) {
    a90++;
    const v92 = a90--;
    v92 | v92;
    a89 | a89;
    const o111 = {
        "c": v66,
        "a": v66,
        "d": a89,
        __proto__: a90,
        "g": -1628878962,
        "type": "boolean",
        "a": a89,
        set b(a96) {
        },
        "g": v66,
        "b": a90,
        get f() {
            super[1000000.0] = this;
            try {
                new Int8Array(9);
                function f101() {
                    return f101;
                }
                const o103 = {
                    [f101]() {
                    },
                };
                [o103];
                v57.copyWithin(8, -268435456, -256);
            } catch(e107) {
            }
            try {
                new Int8Array(this, 4096);
            } catch(e110) {
            }
            return this;
        },
    };
    o111.g = o111;
    return o111;
}
let v112;
try { v112 = f88(v66, v66); } catch (e) {}
v112[1000000];
f88(925.1427495594241, v56);
f88(317008.8127941969, -4);
f88(1000000.0, v57);
268435441n ^ 268435441n;
268435441n - 268435441n;
const v121 = new BigUint64Array();
v121[2445191368] = 268435441n;
