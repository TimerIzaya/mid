class C3 {
    static toString(a5, a6) {
        try { a5(a6, ..."hxm", ..."hxm", a5); } catch (e) {}
        super[this] = 0.5486352285003137;
        this[Symbol.replace] = "number";
        return 0.5486352285003137;
    }
    #g;
    e = 0.5486352285003137;
    2178637830 = 0.5486352285003137;
}
try { new C3(); } catch (e) {}
const v11 = new C3(0.5486352285003137);
const v12 = new C3();
v12[2178637830] = v12;
const v13 = new C3();
try { new Float32Array(-128, -128, Float32Array); } catch (e) {}
new Float32Array(-128);
3185 & 3185;
const v21 = new isNaN(3185, v13, Float32Array, C3);
try { v21.findLastIndex(v11); } catch (e) {}
new Int32Array(7);
const v27 = [Array,Array];
class C28 {
}
C28.length = C28;
const v29 = new C28();
const v31 = [v29];
Reflect.apply(Array.of, v27, v31)[8];
