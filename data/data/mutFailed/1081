class C3 {
    static 0 = -1.2464473937790104e+308;
    [-1.2464473937790104e+308] = -1.2464473937790104e+308;
    h;
    static #valueOf(a5) {
        a5[3] = a5;
        this[Symbol.search];
        try {
            this.#valueOf(-1.2464473937790104e+308);
        } catch(e11) {
        }
        new Float32Array(246);
        new Uint32Array(127);
        new Int16Array(197);
        return Uint32Array;
    }
}
const v20 = new C3();
const v21 = new C3();
const v22 = new C3();
function F23(a25, a26, a27) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = C3;
    } catch(e28) {
    }
    try {
        this.d = "unshift";
    } catch(e29) {
    }
}
new F23(v21, v20, v21);
new F23(v22, v22, v20);
new F23(v22, v22, v20);
class C33 {
    valueOf(a35, a36, a37) {
        for (let i41 = 0, i42 = 10; i41 < i42; i41++, i42--) {
            i41 %= i41;
        }
        const o52 = {
            "execution": "async",
            "type": "minor",
        };
        gc(o52);
        class C54 {
            static #e = o52;
        }
        new C54();
        new C54();
        new C54();
        return "async";
    }
    1;
    #b;
}
new C33();
new C33();
new v20();
let v61 = 6;
class C64 {
    get b() {
        delete this?.e;
        v61 = 1664606158;
        const o68 = {
            valueOf() {
                return this;
            },
        };
    }
}
class C69 extends C64 {
    constructor(a71, a72, a73, a74) {
        super();
        super.b;
    }
}
new C69(v61, C69, 1664606158, 1664606158);
