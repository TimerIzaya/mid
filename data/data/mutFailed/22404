let v5 = -54206 + -54206;
v5++;
const v7 = [127,506635944,-9223372036854775808,5,-536870912,-12000821,2147483649];
try { v7.filter(536870888); } catch (e) {}
("-4")[1];
const v12 = -1148418937 / -1148418937;
v12 / v12;
2.220446049250313e-16 >> 2.220446049250313e-16;
v7.toSpliced(-1148418937, -1148418937, 2.220446049250313e-16, 2.220446049250313e-16, "-4");
65536 == 65536;
const v20 = 268435441 << 268435441;
v20 >> v20;
const v25 = 64 >>> 64;
const v26 = v25 - v25;
v26 === v26;
const o36 = {
    [-4294967297n](a30, a31, a32, a33) {
        eval();
    },
};
o36.g = o36;
o36.a = -2004854758;
const o41 = {
    set b(a40) {
    },
};
o41.b = o41;
false || false;
!(!false);
const v47 = new WeakSet();
const v48 = v47?.has;
try { v48(2.220446049250313e-16); } catch (e) {}
try { new v48(2.220446049250313e-16); } catch (e) {}
const v51 = v47?.__defineGetter__;
v51.e = v51;
try { new v51(-1000000000.0, -1000000000.0); } catch (e) {}
try { o41.findLast(); } catch (e) {}
const v54 = [101.2980265931285,-1.7177856293756712e+307,-1000000.0,-8.49664044843577];
const o55 = {
    __proto__: v54,
};
o55[3] = o55;
try { Proxy.toString(); } catch (e) {}
let v58;
try { v58 = new Proxy(Proxy, Proxy); } catch (e) {}
let v59 = v58.length;
v59++;
function F61(a63, a64) {
    if (!new.target) { throw 'must be called with new'; }
}
class C65 extends F61 {
    #d;
    static {
        const v67 = this.name;
        v67[2] = v67;
        for (let v68 = 0; v68 < 25; v68++) {
        }
        this.e = this;
        ("Vre").codePointAt(2147483647);
        class C71 {
        }
        try { C71.bind(v54); } catch (e) {}
        try {
            try { ("9g9Ak").codePointAt("9g9Ak"); } catch (e) {}
            "9g9Ak" % undefined;
            function f77() {
                const o85 = {
                    [-4294967297n](a79, a80, a81, a82) {
                        eval();
                    },
                };
                return f77;
            }
            try { f77.bind(v20); } catch (e) {}
            try { f77.apply(-4294967297n, C65); } catch (e) {}
            const v89 = ([f77,f77,f77,f77]).push(-4294967297n);
            v89 >>> v89;
            v89 + v89;
            v89 & v89;
            const v93 = /(M(?:ab|cde)VbD)/vdim;
            v93.b = v93;
            f77(v89, v93);
            this.#d = Proxy;
        } catch(e95) {
            e95.d = e95;
        }
        Uint8Array.BYTES_PER_ELEMENT;
        function f98() {
            const v99 = [f98,f98];
            let v100;
            try { v100 = v99.includes(v99); } catch (e) {}
            !v100;
            let v103;
            try { v103 = Reflect.get(v99, Uint8Array); } catch (e) {}
            return v103;
        }
        f98();
    }
}
try { new C65(); } catch (e) {}
try { C65(); } catch (e) {}
