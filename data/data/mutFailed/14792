function F3(a5) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = a5;
    } catch(e6) {
    }
    try {
        this.c = 695.0189445331848;
    } catch(e7) {
    }
}
new F3(F3);
const v9 = new F3(-1e-15);
const v10 = new F3(v9);
function f17(a18, a19, a20) {
    const o35 = {
        "c": 9007199254740991n,
        "g": a20,
        [F3](a22, a23, a24) {
            return typeof a24 === "bigint";
        },
        p(a29, a30) {
            super.b = a29;
            let v31;
            try { v31 = v10.o(11n, this); } catch (e) {}
            v10.h;
            try {
                super.toString(v31, v10, 256n, a29);
            } catch(e34) {
            }
            return a19;
        },
    };
    return o35;
}
f17(695.0189445331848, 695.0189445331848, 256n);
f17(695.0189445331848, -1e-15, 9223372036854775807n);
f17(-4.0, -1e-15, 11n);
class C40 {
}
new C40();
new C40();
const v43 = new C40();
class C44 extends C40 {
}
const v45 = new C44(C40, v43, C40);
new C44("b", v45, C40);
new C44(C40, v43);
[-128,-204399241,1126169676,-39466,-37076,268435456,9223372036854775807,536870888,15798,-1632967117];
"D2z" < 32952n;
/5*/gi;
const v53 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v54 = [601759695];
const v55 = [1073741824,1073741823,1376142744,1073741825];
const t54 = "b";
t54.e = "B";
function f58(a59, a60, a61, a62) {
    function f64() {
        [-2.220446049250313e-16,0.9798105418016166,-4.830267035271884,-435.7279193107944,864333.2303131514,-3.553417885466287e+306,-1000000000000.0,-1000000000.0,990180.6241720289,-1000000.0];
        const v70 = Symbol.toPrimitive;
        const o77 = {
            toString(a72, a73) {
                const v74 = a62 && Float64Array;
                function f75() {
                    a72 *= v70;
                    return Float64Array;
                }
                Object.defineProperty(v74, "valueOf", { value: f75 });
                v74 <= v9;
                return this;
            },
        };
        const o100 = {
            "c": -4294967297n,
            [522675525n](a80, a81) {
            },
            "c": v54,
            valueOf(a83, a84) {
            },
            "b": -4294967295,
            [-4294967297n](a86, a87, a88, a89) {
                [0.8549471140289917,-3.0,4.0,-5.0,-2.0,-1.7976931348623157e+308,5.31145436861636,NaN,1.2778157707013417e+308];
                [-1.7976931348623157e+308,-4.047862669744725e+307,-2.2250738585072014e-308,0.790769162254034,0.024752255798642486,640440.6769019293,-2.0];
                return [923.3408061449261,-6.350919708227568e+307,-2.220446049250313e-16,0.04850379751250988,4.009495502233909];
            },
            "e": "D2z",
            "e": 9007199254740991n,
            "maxByteLength": -4294967295,
            "arguments": v53,
            ...v54,
            "type": "Vre",
            ..."Vre",
            valueOf(a94, a95) {
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            "type": "Vre",
            "type": "Vre",
            toString(a97, a98, a99) {
                return a59;
            },
            5: -4294967295,
            6: -268435456,
        };
    }
    f64();
    const v103 = new Int8Array();
    v103.buffer;
    v9.slice(2147483648);
    %OptimizeFunctionOnNextCall(f64);
    let v108;
    try { v108 = v55["find"](..."find", a62, ...v54, ...v55, ...522675525n); } catch (e) {}
    v108 <= a61;
    return -4294967297n;
}
for (let v110 = 0; v110 < 10; v110++) {
    f58();
}
%OptimizeFunctionOnNextCall(f58);
f58();
function F113() {
    if (!new.target) { throw 'must be called with new'; }
}
