[2.0,-733.0826767959802,1000.0,1.0,9.59665294926221,-2.220446049250313e-16,NaN,-458562.2152700821,5.611978015149791e+307,1.0];
const v1 = [0.9805256480765043,-1000000000000.0,0.853704797233025,1000000000.0,-1000000.0,1e-15,9.981182602907106e+307,-1000000000000.0];
[1000000.0,2.0,-1.1534008992061954e+308,-1000000000000.0];
new WeakMap();
function f5() {
    return v1;
}
f5.caller = f5;
2147483648 !== 2147483648;
1073741824n + 1073741824n;
-1 + -1;
class C17 {
    static {
        try { new this(); } catch (e) {}
        try {
        const t0 = 529940173;
        t0(this, this);
        } catch (e) {}
        Math.cos(1000);
        Math.tan(1000);
    }
}
const v25 = new C17();
-5 & -5;
function f29(a30, a31, a32) {
    const o36 = {
        __proto__: a31,
        [a32]: -2147483648,
        [a31](a34, a35) {
        },
        "c": 529940173,
        1073741824: C17,
    };
    o36.valueOf = f5;
    let v38 = -2.0;
    v38++;
    Math.log1p(v38);
    return o36;
}
const v41 = f29?.bind;
try { new v41(-2141415510); } catch (e) {}
const v43 = f29();
v43[Symbol.toStringTag] = 1073741824n;
v43[1073741824] = v43;
const v46 = f29(-1, v43);
v46.toString = Symbol;
const v47 = f29(-2147483648, v25);
let v48 = -5 << v46;
v48++;
v47[Symbol.isConcatSpreadable] = v48;
