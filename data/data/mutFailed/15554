516607913n * 516607913n;
const v10 = [-268435456,-1198632705,1,-12,1073741823,-1299849732,796628371,667850922,-8805];
v10[4] = v10;
const v11 = [9007199254740991,48455,-15500,1272456716,65535,1073741825,-261194928,-1669271232,-27654];
try { v11.map(-8n); } catch (e) {}
[9,1073741825,703315913,-1053571993];
new BigUint64Array(127);
let v19 = 8;
new Int16Array(v19);
new Int8Array(4096);
v19 = -38763;
new BigUint64Array(16, 5, -38763);
try { ("536870888").strike(); } catch (e) {}
const v33 = ("536870888")[3];
try { v33.blink(); } catch (e) {}
const o35 = {
};
function f36() {
    function F37(a39, a40) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            const v41 = `
            `;
            eval(v41);
        } catch(e44) {
        }
    }
    new F37();
    return F37;
}
o35.constructor = f36;
const t31 = o35.constructor;
const v47 = t31(128);
try { v47.valueOf(); } catch (e) {}
const v49 = v47.toExponential(v33);
try { v49.isWellFormed(); } catch (e) {}
