function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = 268435439;
    } catch(e3) {
    }
}
const v4 = new F0();
let v5 = new F0();
new F0();
const v7 = /g[\d-\d]/gds;
const v8 = /(?:a{5,1000000}){3,1000000}?/gudimy;
v8.dotAll;
const v10 = /p\p{General_Category=Decimal_Number}/gvm;
v10.a = v10;
class C11 {
    4294967296 = v7;
    static m(a13, a14, a15) {
        a13[127];
        try {
            new F0();
        } catch(e18) {
        }
        return F0;
    }
    get d() {
        super.e = v8;
        v5 %= v5;
        const v20 = v5 * this;
        try {
            this.e = v20;
        } catch(e21) {
        }
        return v4;
    }
}
const v22 = new C11();
const v23 = new v22();
v23[4294967296] = v23;
const v24 = new v5();
v24[4294967296] = v24;
const v26 = [v22,[v23],v23];
try { v26.values(); } catch (e) {}
[v5,v26,v10,C11];
const v30 = [104762.14753807266,-279097.1642774454,5.0,1.0];
const v34 = new Uint8Array(22);
const v37 = new Int32Array(3289);
const v39 = [v37];
const v41 = Reflect.apply(v30.join, v34, v39);
const v42 = v41?.substr;
try { new v42(v37, v34); } catch (e) {}
class C44 extends Int32Array {
}
const v45 = C44.from(v41);
try { v45.fill(v7); } catch (e) {}
