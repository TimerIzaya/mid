let v1 = -611262.6147620976;
function F3(a5, a6, a7, a8) {
    if (!new.target) { throw 'must be called with new'; }
}
F3.g = F3;
const v9 = [-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0];
const v10 = [2.0,7.10011887634696e+307,5.04629902085264,-235569.90430342825,1000000000000.0,426535.30541040236,-734908.2544538898,-780.4792630242589,NaN,0.9523787688077121];
Uint32Array.prototype = Uint32Array;
function f12() {
    let v13 = Float64Array;
    Array();
    v13 = F3;
    const v16 = v9.length;
    class C18 {
    }
    new C18();
    Symbol.toPrimitive;
    new Uint32Array(v10, v16);
}
const v24 = [-268435456,-2095];
try { v24.toReversed(); } catch (e) {}
const v26 = [-1402161017,128,12,7,-18710,1828,-1300227194,5,-5];
const v27 = [11,-326671650,177495660];
const v29 = new Date();
[v29,v27];
const v31 = [v27,5.7810813831761365];
const v32 = [v1,v31];
let v34 = -33839;
v34--;
28337 === 28337;
try { ("c").charAt(v32); } catch (e) {}
try {
    const t32 = "c";
    t32.valueOf = Date;
} catch(e40) {
}
try {
    v24.length = 536870888;
} catch(e41) {
}
-1000000000.0 - -1000000000.0;
class C45 {
    static #h;
}
C45.prototype = C45;
new C45();
const v47 = new C45();
const v48 = v47?.constructor;
try { new v48(); } catch (e) {}
2.220446049250313e-16 - 2.220446049250313e-16;
[-788.7260290236088];
const v56 = Math.round();
for (let v57 = 0; v57 < 10; v57++) {
    const v59 = new Uint8ClampedArray();
    let v60;
    try { v60 = v59.reduceRight(v59); } catch (e) {}
    function f61(a62, a63, a64, a65) {
        v48 / a62;
        Object.defineProperty(v59, 0, { writable: true, configurable: true, enumerable: true, value: v56 });
        return v26;
    }
    f61("c", v60, v57, v31);
    const v71 = v57 / v57;
    class C72 {
    }
    v1 = 5.7810813831761365;
    const o76 = {
        "execution": "sync",
        "type": "minor",
    };
    gc(o76);
    try { C72.constructor(Uint8ClampedArray); } catch (e) {}
    const v79 = new C72();
    const v80 = v79?.constructor;
    try { new v80(); } catch (e) {}
    this.__proto__ = v79;
    async function f83(a84, a85, a86) {
        ("b")[a86];
        const v88 = "c" ** f83;
        4096 >> 4096;
        try { new BigInt64Array(v88, a85, Math); } catch (e) {}
        const v93 = new BigInt64Array(4096);
        v93[1087];
        for (let i = 0; i < 5; i++) {
            for (let v96 = 0; v96 < 5; v96++) {
                class C97 {
                }
                C97.name = C97;
                for (let v98 = 0; v98 < 5; v98++) {
                    v98 > v98;
                }
            }
        }
        await v56;
        1371 - 1371;
        new Int16Array(1371);
        const v105 = [-788.7260290236088,-788.7260290236088];
        const o106 = {
            __proto__: v105,
        };
    }
    try { f83(v79, v60, v71); } catch (e) {}
    f83();
    const o110 = {
    };
    gc(o110);
    class C112 {
        static set h(a114) {
            eval("c");
        }
    }
}
