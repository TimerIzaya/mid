function f3() {
    return 1000000000000.0;
}
new Int8Array(848);
new Uint8ClampedArray(3362);
new Float64Array(4);
const v24 = new Float32Array(1300);
new Uint8Array(9);
new Int32Array(2);
const v31 = [];
v31.constructor = f3;
function F35(a37, a38, a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    this.h = v24;
    this.c = this;
    try {
        this.c = -1.0;
    } catch(e41) {
    }
    try {
        this.h = 268435456;
    } catch(e42) {
    }
}
new F35(577.0551734781736, 2, 1300, 0.8608765439494004);
new F35(-797.9067053044535, 129, 268435456, 1000000000000.0);
new F35(577.0551734781736, 9, 4, -1.0);
const v46 = v31.constructor;
const v48 = new Float32Array();
function f49(a50) {
    return v31;
    const v51 = [-1e-15,-2.0,4.0];
    const v52 = [-5.0,-2.0,-1.5942587568933252e+308,1.0730723170600494e+307,0.0,-2.2250738585072014e-308,-446.9921213911738];
    class C53 {
        [v52] = v31;
        static #c;
        #o(a55, a56) {
            Symbol.search;
        }
        set e(a60) {
            this[this] = v51;
            SharedArrayBuffer();
            Uint8ClampedArray();
        }
    }
    return C53;
}
Object.defineProperty(f49, Symbol.species, { configurable: true, enumerable: true, value: f49 });
Object.defineProperty(v48, "constructor", { writable: true, configurable: true, enumerable: true, value: f49 });
v48.filter(v46);
