const v0 = [0.0,507460.29162706714,0.946209905689127,-9.51419541684566];
const v1 = [2.220446049250313e-16,-1.297280007099627e+308,-3.0,-1000000.0,-7.873364431934113e+307,0.13197982652943774];
const v2 = [-4.0,225.7193955664029,0.2555280581976275,1000.0,745739.8025274912,-8.74732216557727];
const v5 = new Uint16Array(222);
const v8 = new Uint8ClampedArray(2573);
const v11 = new Float64Array(3);
function f12() {
    function f13(a14, a15) {
        var e = v0;
        /(?!(a))\1*/vmy.compile(/k/gdsy);
        return v5;
    }
    return f13;
}
function f19(a20) {
    v2[1024];
}
Object.defineProperty(v11, "valueOf", { writable: true, enumerable: true, get: f12, set: f19 });
function F22(a24, a25, a26) {
    if (!new.target) { throw 'must be called with new'; }
    Object.defineProperty(this, "a", { enumerable: true, value: a26 });
    this.d = v0;
    try {
        this.a = a26;
    } catch(e27) {
    }
    try {
        this.f = v8;
    } catch(e28) {
    }
    try {
        this.d = 3;
    } catch(e29) {
    }
}
function f30() {
    this.fuck(this, this, this, this, this);
    return this;
    return v1;
}
F22.valueOf = f30;
const v33 = new F22(v8, 222, 2573);
const v34 = new F22(v33, 222, Float64Array);
new F22(v34, 3, 3);
const v37 = new Uint32Array();
function F38() {
    if (!new.target) { throw 'must be called with new'; }
}
const v40 = new F38();
function F41(a43, a44) {
    if (!new.target) { throw 'must be called with new'; }
}
const v45 = new F41();
const v48 = [v37,v37,v37,v37];
function F50() {
    if (!new.target) { throw 'must be called with new'; }
    const v54 = Date.toString(F50);
    v54[23];
    class C56 {
    }
    Object.defineProperty(C56, "m", { writable: true, configurable: true, enumerable: true, value: C56 });
    try { C56.m(); } catch (e) {}
    const v58 = v37.constructor;
    const v61 = new Float32Array(6);
    const v62 = v61.fill();
    v54.replaceAll(v40, -37859n);
    const v64 = new Uint32Array(Uint32Array, Uint32Array, 4);
    v64[2];
    const v68 = new Set(v48);
    for (let i71 = 0, i72 = 10;
        (() => {
            const v73 = i71 < i72;
            class C74 extends Date {
            }
            return v73;
        })();
        i71++) {
    }
    const v80 = v68.add;
    v80.f = Uint8ClampedArray;
    v80.f = v80;
    try { v80(); } catch (e) {}
    const v83 = v68["delete"](839612.5677247904);
    const v84 = v83 || v83;
    const v85 = v84 || v84;
    v85 && v85;
    const v87 = v84 && v84;
    v87 || v87;
    const o90 = {
    };
    o90.b = o90;
    try { Array(9223372036854775807); } catch (e) {}
    const v94 = ("getPrototypeOf").blink();
    const v95 = v94[28];
    function f96() {
        return F41;
    }
    Object.defineProperty(this, "onmessage", { writable: true, enumerable: true, value: v58 });
    function f98(a99) {
        f96();
        return v83;
    }
    this.onmessage = f98;
    const v101 = v95.strike();
    v101[4] = v101;
    const v103 = v94.strike(591114.0785999324).replace(19793, v45);
    v103[11] = v103;
    class C105 {
        ["getPrototypeOf"] = -1.7976931348623157e+308;
    }
    class C106 extends C105 {
        static {
        }
        65537 = v62;
        ["getPrototypeOf"] = C105;
    }
    const v108 = new C106();
    v108[Symbol.iterator] = f12;
    v108.length = F22;
    const v111 = new C106();
    const t120 = v111.constructor;
    new t120(v64, v40, 839612.5677247904);
    const v114 = new C106();
    v114.getPrototypeOf;
    const v117 = BigUint64Array.of();
    new BigUint64Array(v108, v117, v117);
    new Int8Array();
    const v121 = new C106();
    const t128 = v121.getPrototypeOf;
    new t128();
    const v124 = v121.getPrototypeOf;
    let v125;
    try { v125 = new v124(-37859n); } catch (e) {}
    v125.getPrototypeOf = v125;
    new C106();
    const v128 = new String();
    Object.defineProperty(v128, 7, { configurable: true, enumerable: true, value: Int8Array });
    const v129 = Array(19793);
    v129[18222] = F38;
    Object.defineProperty(v129, 7898, { writable: true, configurable: true, enumerable: true, value: v108 });
    for (const v130 of v129) {
    }
    class C131 {
        static get b() {
        }
    }
}
new F50();
new F50();
function f136(a137) {
    return Reflect.construct(Uint16Array, [2573,a137,2573], f19);
}
Object.defineProperty(Int16Array, Symbol.iterator, { writable: true, configurable: true, enumerable: true, value: f136 });
Int16Array[2] = v11;
const v143 = new Int16Array(Int16Array, Int16Array, Int16Array);
function f144() {
    return f144;
}
class C145 extends f144 {
    constructor(a147, a148, a149, a150) {
        super();
        function f151() {
            const o152 = {
                "g": a148,
                ...v143,
            };
            return C145;
        }
        for (let v153 = 0; v153 < 5; v153++) {
            f151();
            %OptimizeFunctionOnNextCall(f151);
        }
    }
}
new C145();
