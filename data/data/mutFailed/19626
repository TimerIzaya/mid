const v0 = /la\bc+/gvimsy;
const v1 = /(a\1)02[\cz]/gims;
let v2 = /\xe2\x81\xa3/gvds;
v2 = v2;
function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = a5;
    } catch(e7) {
    }
}
new F3(v0, F3);
new F3(v2, F3);
new F3(v2, v0);
let v11 = [v2,v2,v1,v0,v2];
const v12 = [v0,v2,v11,v11,v0];
[v1,v12,v0];
new Int32Array(128);
let v17 = 3234;
let v18 = Int8Array;
if (v0) {
    v11[1073741824];
    !v17;
} else {
    v12.__proto__;
}
const v22 = new v18(v17);
const v25 = new Int16Array(16);
let v26 = v25[v25];
({"b":v26,"byteLength":v18,"length":v26,} = v22);
[v11] = v25;
v17 %= Int32Array;
function F33(a35) {
    if (!new.target) { throw 'must be called with new'; }
    a35--;
    v2 ^ a35;
    const v38 = this.constructor;
    try { new v38(3n); } catch (e) {}
}
const t39 = 128;
new t39();
new F33(349865170n);
