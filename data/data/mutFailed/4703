const v0 = [10617.622628886602,-5.0,1.7976931348623157e+308,-8.220199247866622e+307,1000000000000.0,0.0,48740.75682475441,-1000000000.0,6.407443663238073,369.9978678982163];
function f1() {
    function f2() {
        function f4() {
            const v15 = async (a16, a17, a18) => {
                return Uint32Array;
            };
            return 109;
        }
        return f4;
    }
    return f2;
}
function f21(a22) {
    a22[a22] = f1;
}
Object.defineProperty(v0, "toString", { writable: true, get: f1, set: f21 });
const v23 = [-2.2250738585072014e-308,-Infinity,-290858.7675095957,1000000000000.0,2.2250738585072014e-308,116358.20965276193,-1000000000.0,0.484153835917395];
const v24 = [0.4944195345916852,-0.0,3.0];
const v25 = [v24];
const v26 = [v23,v25,v23,v24];
const v27 = [v0];
v27[Symbol.toPrimitive] = f21;
class C30 {
    static get f() {
        let v32;
        try { v32 = new this(v24, v25, v25, this, this); } catch (e) {}
        try {
            v27.toString = v32;
        } catch(e33) {
        }
        return this;
    }
    constructor(a35, a36) {
        new Date();
    }
    f;
    [v27];
    static f = v24;
}
new C30(v25, v0);
new C30(v25, v25);
new C30(v26, v25);
[[-1e-15,-4.547098672084515,6.731189859503068,1000.0,1000.0,414.1111077300918,567.5737904015757]];
