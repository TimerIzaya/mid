function f0() {
}
const v1 = [f0,f0,f0,f0,f0];
const v2 = [v1,v1,v1,f0,v1];
const v3 = [v1,v2];
function F4(a6, a7) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = a6;
    } catch(e8) {
    }
    try {
        this.f = a6;
    } catch(e9) {
        Math.acos(1);
        function f15(a16, a17, a18) {
            const o19 = {
            };
            return o19;
        }
        f15(9, 9, 9);
        function f21(a22, a23, a24, a25) {
            const v26 = /(?:a*)+q(?<a>.)/guds;
            function f27(a28) {
                a28.dotAll;
                a28.hasIndices = a28;
                const v30 = a28?.constructor;
                v30.$_;
                v30.lastParen;
                const o34 = {
                    get d() {
                    },
                };
                return v26;
            }
            for (let [i38, i39] = (() => {
                    let v35 = 0;
                    v35++;
                    return [v35, 10];
                })();
                (() => {
                    const v40 = 9 < i39;
                    v40 || v40;
                    return v40;
                })();
                i39--) {
                f27(v26);
            }
            return f21;
        }
        for (let v48 = 0; v48 < 10; v48++) {
            f21();
        }
    }
    try {
        this.h = a7;
    } catch(e50) {
    }
}
new F4(v3, v3);
const v52 = new F4(v3, v1);
const v53 = new F4(v2, v3);
class C57 extends F4 {
    static {
        with ([this,...v2]) {
            v53[2147483648] /= length;
            for (let v61 = 0; v61 < 100; v61++) {
                f0();
            }
        }
    }
    static 2699 = v52;
    #g;
    [v53] = v52;
    g;
}
new C57();
new C57();
new C57();
Math.cbrt(1073741824);
