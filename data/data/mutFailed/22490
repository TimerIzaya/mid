function f3(a4) {
    const v5 = a4--;
    const o33 = {
        valueOf(a7, a8) {
            function f9(a10) {
                function f12(a13) {
                    try {
                        a13.valueOf = a13;
                    } catch(e14) {
                    }
                }
                this.onmessage = v5;
                h = this;
            }
            const v17 = [a4];
            const o31 = {
                toString(a19, a20, a21, a22) {
                    let v18 = this;
                    a20 << -1557853178;
                    let v26 = v18++;
                    Math.log2(v26);
                    const v28 = v26++;
                    Math.pow(v26, -1557853178);
                    f9 ^ v28;
                    return a22;
                },
                "arguments": v17,
                "type": "Yn",
            };
            new Worker(f9, o31);
            return o31;
        },
    };
    const v34 = o33?.__lookupGetter__;
    try { new v34(4); } catch (e) {}
    return o33;
}
const v36 = f3(5);
const v37 = f3(5);
const v38 = f3(v37);
function f39() {
    return v36;
}
const v40 = [v38];
const v41 = [v40,v37,4,5,2];
const v42 = [v36,5,v40,4];
v42[3] = v42;
function f46() {
    class C48 {
    }
    async function f49(a50, a51, a52, a53) {
        return (await C48).call(C48, f49, f49, C48);
    }
    const t53 = "boolean";
    t53[3] = "boolean";
    const o67 = {
        toString(a59, a60) {
            try {
                super.getMinutes(5, 2, v40);
            } catch(e62) {
            }
            return "object";
        },
        "b": "boolean",
        "g": "object",
        get d() {
        },
        1: 2,
        p(a65, a66) {
        },
        128: v41,
        "a": 1000000000000.0,
        "c": "boolean",
        __proto__: "boolean",
        "h": 1000000000000.0,
    };
    return o67;
}
const v68 = f46();
const v69 = f46();
const v70 = f46();
v70[128];
function F73(a75) {
    if (!new.target) { throw 'must be called with new'; }
    const v76 = this?.constructor;
    try { new v76(v42); } catch (e) {}
    a75[128] = a75;
    try {
        this.f = a75;
    } catch(e78) {
    }
    try {
    } catch(e79) {
    }
    try {
    } catch(e80) {
    }
}
F73.e = F73;
const v81 = new F73(v69);
v81.length = v81;
const v82 = new F73(v69);
v82.f;
const v84 = new F73(v69, v82);
function f85() {
    return f85;
}
const v87 = new Date(f85);
v87.setUTCMilliseconds(Date);
function f89(a90, a91, a92) {
    a91[128] = a91;
    const o99 = {
        get a() {
            const o97 = {
                "execution": a92,
                "type": "major",
            };
            gc(o97);
        },
    };
    o99[2074850330] = o99;
    return o99;
}
const v100 = f89(v70, v70, v68, v81, v70, v41);
v100[2074850330] = v100;
const v101 = f89(v69, v69, v100);
f89(v100, v101, v69);
function F103(a105, a106, a107) {
    if (!new.target) { throw 'must be called with new'; }
    a105.g = a105;
    const v108 = this?.constructor;
    v108.length = v108;
    try { new v108(F103, F103, f46); } catch (e) {}
    a106.e = a106;
    try {
        this.d = a107;
    } catch(e110) {
    }
    try {
    } catch(e111) {
    }
}
const v112 = new F103(v70, v68, v84);
v112.b = v112;
new F103(v70, v100, v112, v101, F103, v37);
try { Uint32Array.bind(F73); } catch (e) {}
