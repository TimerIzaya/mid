function f0() {
}
function f1() {
    try {
        f0.d = f0;
    } catch(e2) {
    }
    return f0;
}
Object.defineProperty(f0, "toString", { writable: true, configurable: true, value: f1 });
function F3() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = f0;
    } catch(e5) {
    }
    try {
        this.e = f0;
    } catch(e6) {
    }
    try {
        this.c = f0;
    } catch(e7) {
    }
}
const v8 = new F3();
v8.valueOf = f1;
v8 >> f0;
let v13 = ~13;
++v13;
+v13;
new F3();
new F3();
new Array(237);
gc(128n);
