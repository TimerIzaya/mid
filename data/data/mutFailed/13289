function F0() {
    if (!new.target) { throw 'must be called with new'; }
    [-Infinity,-2.2250738585072014e-308,-1000000000000.0,-2.2250738585072014e-308];
    [0.8181189748763854,2.2250738585072014e-308,0.2936348602383967,0.29477887141840975,-5.0,-1.9886477787329664,-1000.0,0.179102179611208,917.0970792554538,-831416.9644958007];
    ([127017.96474636975,4.0])["at"](1000);
    try {
        this.e = 1000;
    } catch(e8) {
    }
    try {
        this.h = 1000;
    } catch(e9) {
    }
}
new F0();
const v11 = new F0();
const v12 = new F0();
v12.e = v12;
-1000000000000.0 - -1000000000000.0;
7 >> 7;
7 ^ 7;
const v22 = [46911,1073741824,-34943,-6,4294967297,-536870912,-43334,20773,12];
try { v22.map(2.0); } catch (e) {}
[-128];
const v25 = [0,-128];
let v26 = -1.7976931348623157e+308;
v26--;
for (let [v30,v31] of v22) {
    const o35 = {
        "execution": "async",
        "type": "major",
    };
    gc(o35);
}
-2147483649 * -2147483649;
class C38 {
    constructor(a40) {
        let v41;
        try { v41 = this.isInteger(a40, -2147483649, -7.693050480934223, a40, a40); } catch (e) {}
        function F42(a44, a45, a46) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.h = this;
            } catch(e47) {
            }
            try {
                this.c = a40;
            } catch(e48) {
            }
        }
        const v49 = new F42(F42, v26, v41);
        new F42(v49, v26);
    }
}
C38.b = C38;
function F51(a53, a54, a55, a56) {
    if (!new.target) { throw 'must be called with new'; }
    const v57 = this?.constructor;
    try { new v57(v11, v11, -1000000000000.0, v11); } catch (e) {}
    a53 >>> a53;
    a56 + a56;
}
try { new F51(-13730, -1000000000000.0, v25, -13730); } catch (e) {}
const v62 = new F51();
try { v62(); } catch (e) {}
let v64 = 0;
do {
    v64++;
} while ((() => {
        const v67 = v64 < 5;
        v67 || v67;
        return v67;
    })())
