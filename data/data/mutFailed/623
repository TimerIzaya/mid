function F3(a5, a6) {
    if (!new.target) { throw 'must be called with new'; }
    function f7(a8, a9) {
        const o14 = {
            [-352741132]: -352741132,
            set b(a13) {
            },
            "b": 2.220446049250313e-16,
        };
        return -352741132;
    }
    Object.defineProperty(this, Symbol.toPrimitive, { writable: true, configurable: true, enumerable: true, value: f7 });
    this.d = "Rh";
    try {
        this.a = "Rh";
    } catch(e17) {
    }
    try {
        this.c = "Rh";
    } catch(e18) {
    }
    try {
        this.d = a6;
    } catch(e19) {
    }
}
let v20 = new F3("m", "Rh");
const v21 = new F3("m", "m");
function f22(a23, a24) {
    class C27 extends Int8Array {
        [12];
    }
    try { new C27(); } catch (e) {}
    return 12;
}
v21[Symbol.toPrimitive] = f22;
v20 = v21;
v20[536870887] = "jP";
v20[v20] = "jP";
("jP")[182];
function f32() {
    return "jP";
}
const v33 = new F3("m", "Rh");
function f34() {
    return v33;
}
function f35() {
    return "jP";
}
new f34(2117);
const v41 = new Uint32Array(8);
const o59 = {
    o(a43) {
        a43.toString = f34;
        delete v41[5];
        const v45 = new Uint8ClampedArray(v20, a43);
        v45[Symbol.toPrimitive];
        const o50 = {
        };
        const v51 = gc(o50);
        a43 <<= "m";
        const o54 = {
            "maxByteLength": 128,
        };
        const v56 = new ArrayBuffer(3, o54);
        new Int8Array(v56);
        return v51;
    },
};
const o61 = {
};
o61.getPrototypeOf = o61;
const v63 = new Proxy(Uint32Array, o61);
o59["o"](o59, Uint32Array, "o", "o", v63);
new BigUint64Array(1);
const v71 = Array(3398);
for (const v72 in v71) {
}
v71.length = 1;
