const v0 = [1,536870912,268435441,1150044608,-965310995];
[0,-1325740339,9007199254740991];
const v2 = [536870912,2147483648,-128,65536,-15,1024];
function f3() {
    return v0;
}
class C4 extends f3 {
    d = v2;
    #toString(a6) {
        try {
            f3();
        } catch(e8) {
        }
        const v10 = Symbol.iterator;
        const o19 = {
            [v10]() {
                let v12 = 10;
                const o18 = {
                    next() {
                        v12--;
                        const v16 = v12 == 0;
                        const o17 = {
                            "done": v16,
                            "value": v12,
                        };
                        return o17;
                    },
                };
                return o18;
            },
        };
        return f3;
    }
}
const v20 = new C4();
let v21 = new C4();
const v22 = new C4();
const v23 = [v2];
const v24 = [v23,v23,v2,v0];
[f3,v23,v21,v24];
const o27 = {
    "a": -7498n,
};
const o33 = {
    n(a29) {
        const o31 = {
        };
        return Worker(o31);
    },
};
const v38 = /0j/vds;
try { v38.compile("Di0", "Di0"); } catch (e) {}
Int8Array.prototype;
class C42 {
    #d;
    constructor(a44, a45) {
        a45[2];
        /W(jy2)/udy;
        const v49 = new Uint8Array();
        for (let v50 = 0; v50 < 500; v50++) {
            const o54 = {
                ...v49,
                n(a52, a53) {
                },
            };
        }
        for (let v55 = 0; v55 < 5; v55++) {
            v20["p" + v55] = v55;
        }
    }
    valueOf(a59, a60, a61) {
        const v62 = a60[-1];
        v24[f3] *= a59;
        v21 <<= a60;
        g = a59;
        a60["-65537"] = v24;
        const v63 = [-6.672391061426152e+307];
        function f64() {
            return v63["pop"]();
        }
        f64();
        super.h -= v62;
        return a60;
    }
    [v21];
    [v22] = "object";
    [v20];
    [v24] = C4;
    static 255 = v21;
    static set d(a69) {
    }
}
new C42();
new BigInt64Array(257);
const o76 = {
    get c() {
        super.m();
    },
};
new C42();
new C42();
const v81 = Float64Array.of();
const v83 = new Date(Date);
v83.setFullYear(v81, 3811);
