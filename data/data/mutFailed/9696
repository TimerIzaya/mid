let v1 = -9007199254740990;
class C3 {
    static {
        const t3 = "symbol";
        t3[this] = this;
        v1 >>= 14;
        try { new this(this, this); } catch (e) {}
        super.c.__proto__;
    }
    static {
        const v10 = Symbol.iterator;
        const o19 = {
            [v10]() {
                let v12 = 10;
                const o18 = {
                    next() {
                        v12--;
                        const v16 = v12 == 0;
                        const o17 = {
                            "done": v16,
                            "value": v12,
                        };
                        return o17;
                    },
                };
                return o18;
            },
        };
    }
}
const v20 = new C3();
const v21 = new C3();
const v22 = new C3();
function f23() {
    return v21;
}
class C24 extends C3 {
    static [v20];
    static f = v20;
    static [14];
    g = 14;
    static h;
    static [v22] = 14;
    f;
    p(a26, a27, a28, a29) {
        ("symbol")[16];
        new C3();
        return v22;
    }
    #a = C3;
}
new C24();
new C24();
new C24();
class C40 {
    141 = "9007199254740991";
}
new C40();
new C40();
new BigInt64Array();
function f50() {
    const v54 = -65535 / -65535;
    const o106 = {
        ...352326470,
        m(a56) {
            a56.c = a56;
            a56.h = a56;
            const o57 = {
            };
            o57.d = o57;
            o57.h = o57;
            function f58(a59, a60, a61) {
            }
            const v64 = Array().join();
            for (let v65 = 0; v65 < 25; v65++) {
                v64.__proto__;
            }
            f58.bind();
            f58.caller = f58;
            try {
                o57.e = -65535;
            } catch(e68) {
                const v72 = new Uint8ClampedArray(512);
                new Uint8ClampedArray(798, ...v72, o57);
            }
            const o74 = {
            };
            o74.g = o74;
            o74.e = 1261703539;
            let v76;
            try { v76 = Math.expm1(128); } catch (e) {}
            v76--;
            const v79 = -9007199254740991 >> -9007199254740991;
            v79 - v79;
            -Math.sin(-9007199254740991);
            try { ("EV").link(v54); } catch (e) {}
            0 != 0;
            class C87 {
                o(a89, a90, a91, a92) {
                    class C93 {
                    }
                }
            }
            C87.name = C87;
            new C87();
            const v97 = new Int8Array(3938);
            let v98 = 3;
            const v99 = v98++;
            v99 + v99;
            const v102 = 0 >> 0;
            const v103 = v102 - v102;
            v103 / v103;
            [...v98] = v97;
            const o105 = {
            };
            o105.c = o105;
            return this;
        },
    };
    let v107;
    try { v107 = o106.m(o106); } catch (e) {}
    v107.m(128);
    class C110 {
    }
    new Float32Array();
}
f50();
