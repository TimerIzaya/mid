function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 1073741823;
    } catch(e3) {
    }
    try {
        this.e = 1073741823;
    } catch(e4) {
    }
    try {
        this.g = 1073741823;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
const v9 = v8?.constructor;
let v10;
try { v10 = new v9(); } catch (e) {}
class C11 extends F0 {
    #o(a13, a14) {
        try { a14.forEach(C11, this, a13, v9, v6); } catch (e) {}
        try {
            super.valueOf(v8, v10);
        } catch(e17) {
        }
        return this;
    }
    [F0] = v7;
    static #o(a19) {
        super[this];
        v8 ^ v7;
        v8[a19] = this;
        return F0;
    }
    f;
    #g = v6;
    #h = v8;
    static [v9];
    #f;
    static [v7] = v9;
    static 1095840988 = C11;
    [v10] = F0;
    719;
    static 200;
    #a;
    static [v7] = v9;
}
new C11();
const v23 = new C11();
v23[719] = v7;
new C11();
-16660 !== -16660;
function f29() {
    return F0;
}
-3n == -3n;
v10 * F0;
new Uint8Array(255);
new Uint8ClampedArray(1);
new Float64Array(7);
const v46 = new Date(-429.3290910931888);
v46.setMilliseconds(-429.3290910931888);
