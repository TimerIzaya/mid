function f0() {
}
const v1 = [129];
const v2 = [4294967297,584,1073741825,47634,4,0,65535,3,58154,15];
const v3 = [1497859724,2147483648,7,-9007199254740992,3,14,3758,4294967295,-9];
class C4 {
    set(a6) {
        v2[5] >>= a6;
        this[v1] = v1;
        try {
            v2.toString(a6, a6, C4);
        } catch(e8) {
        }
        return a6;
    }
    h = v3;
}
const v9 = new C4();
const v10 = new v9();
new v3();
function F12(a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = f0;
    } catch(e16) {
    }
    try {
        this.f = v10;
    } catch(e17) {
    }
}
const v18 = new F12(C4, v3);
const v19 = new F12(C4, v18);
new F12(v19, v2);
class C21 {
}
const v22 = new C21();
const v23 = new C21();
class C24 {
    static #a = C21;
    static g = v23;
    static {
        delete this.g;
    }
}
delete v22[512];
