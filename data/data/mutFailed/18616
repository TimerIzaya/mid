const v4 = new Uint8Array(-65294);
v4[148] ||= 444;
([-7.127262073336987e+307,9.142894664271836,5.0]).toLocaleString();
function f8(a9, a10) {
    a9--;
    function F12() {
        if (!new.target) { throw 'must be called with new'; }
    }
    const v14 = new F12();
    const v15 = new F12();
    const v16 = new F12();
    function f17(a18, a19) {
        const o24 = {
            "b": v16,
            n(a21, a22) {
                a18(v14, a19);
                return F12;
            },
            "a": v15,
        };
        return o24;
    }
    a10 >>> a10;
    const o37 = {
        __proto__: a10,
        [-21056]: a9,
        [a9](a27, a28) {
            ("6Ct").normalize();
            const v34 = [-1e-15,-4.547098672084515,6.731189859503068,1000.0,1000.0,414.1111077300918,567.5737904015757];
            const v35 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
            v35.fill(v35, v34);
            return a9;
        },
        [a10]: a9,
        "a": a9,
        "g": 268435439,
        "b": a9,
        "d": a10,
    };
    o37.b = o37;
    return o37;
}
f8(268435439, -21056);
f8(-65294, -65294);
f8(-65294, -65294);
const v44 = new Date(Date);
v44.setFullYear();
new Date(-429.3290910931888);
try { ("toJSON").toLocaleLowerCase(); } catch (e) {}
"658068690" == "658068690";
function F53() {
    if (!new.target) { throw 'must be called with new'; }
}
ReferenceError.captureStackTrace(F53);
536870912n << 536870912n;
-1 / -1;
function f63(a64, a65) {
    function f67(a68) {
        return a64 ^ a65;
    }
    this.onmessage = f67;
}
function f70() {
    function f71() {
    }
    return f71;
}
function f72(a73) {
    return a73;
}
f72.a = f72;
Symbol.b = Symbol;
Object.defineProperty(WeakSet, Symbol.iterator, { configurable: true, enumerable: true, get: f70, set: f72 });
try { new BigInt64Array(WeakSet); } catch (e) {}
