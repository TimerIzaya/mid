const v1 = new WeakMap();
const v6 = new Uint32Array(127);
new Uint8Array(v6);
let v11 = ("Vre").codePointAt(1951970829);
v11--;
function F13(a15) {
    if (!new.target) { throw 'must be called with new'; }
}
class C16 {
    constructor(a18) {
        try {
            a18.toString = a18;
        } catch(e19) {
        }
    }
    g = 4;
    static g = 4;
    static #o(a21, a22) {
        [-935.1704411833082,32.97628044877183,965.5657376164079,0.5380151291168286];
        [-110.8595204377907,1.7976931348623157e+308,5.0];
        [0.7105406073166725,0.4665986369349966,-2.2250738585072014e-308];
        const v27 = a21 <= v1 ? a21 : v1;
        let v28;
        try { v28 = a22(a21, a21, a21, v27); } catch (e) {}
        return v28;
    }
}
const v29 = new C16(v1);
const v30 = new C16(v29);
const v31 = new C16(v30);
class C32 extends WeakMap {
    static n(a34, a35, a36) {
        const v39 = new Uint8ClampedArray();
        let v46 = new WeakMap();
        class C47 {
            constructor(a49, a50) {
                super[a49]?.[1];
            }
            c = "U2pI";
            static 268435439;
            static get d() {
                v46 ||= this;
                return [-679038690,7,-65536,3,1461677839,9];
            }
            static d = WeakMap;
        }
        const v55 = new C47("-19084", 5);
        let v56;
        try { v56 = v39("function", 14); } catch (e) {}
        function f57(a58, a59) {
            v56(v55);
            [Float64Array,Float64Array,Float64Array,v56,a59];
            [[5],Uint8Array];
        }
        const v66 = new Set();
        return v66;
    }
    [v30];
    static set d(a68) {
        super.h;
        try {
            v29.g = v30;
        } catch(e70) {
        }
    }
    [WeakMap] = v31;
    static #a;
}
new C32();
new C32();
new C32();
[256];
[-65535,687469369,-15,129,2017079663,1103788761,6,129,-128];
[15];
class C78 {
}
new C78();
class C81 extends Set {
}
const t79 = C81.constructor;
t79(C81);
let v84 = 0.3050534209767637;
new Uint16Array(9);
BigUint64Array <= 0.7221600461335677;
v84--;
class C92 {
    set e(a94) {
        class C97 {
        }
        class C98 {
            static #a = C97;
            static {
            }
        }
    }
}
new WeakMap();
const v103 = [BigUint64Array];
function f105(a106, a107) {
    const o111 = {
        [122188848n](a109, a110) {
        },
    };
    return o111;
}
f105();
v103.pop();
const v115 = Math.__defineSetter__;
try { v115(); } catch (e) {}
Math >>> Math;
function f118() {
}
/ha$\P{Decimal_Number}+/vdisy.constructor.$7;
Math.sinh();
const o123 = {
};
if (5) {
    function F124(a126, a127) {
        if (!new.target) { throw 'must be called with new'; }
    }
    for (let v128 = 0; v128 < 5; v128++) {
        function F129(a131, a132) {
            if (!new.target) { throw 'must be called with new'; }
        }
    }
}
const o133 = {
    ...v103,
};
