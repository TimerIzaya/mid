const v0 = [6.243367099684338,270.00261021353367,4.0,0.8233954142412799,0.8588707815102019,-1.7976931348623157e+308,-1000000000.0];
const v1 = [Infinity,1000000000.0,1000000.0,3.0,573.8972776749979,-9.52171323014897e+306];
const v2 = [0.3852025216965925];
function f3() {
    return v0;
}
class C4 extends f3 {
    f;
    constructor(a6, a7) {
        a7[2];
        /Ia[a]/uims;
        let v10 = /W(jy2)/udy;
        v10.flags;
        const v12 = /(u4(?:a?)*)/gudimsy;
        const v15 = new Uint8Array(v12, C4);
        const v17 = new Uint32Array();
        function f18(a19, a20, a21, a22) {
            const o26 = {
                ...v15,
                n(a24, a25) {
                    v17[a19] = v17;
                },
            };
            return o26;
        }
        for (let v27 = 0; v27 < 625; v27++) {
            f18(Uint8Array, 2, v27);
        }
        v10 = v12;
        for (let v29 = 0; v29 < 25; v29++) {
            v2["p" + v29] = v29;
        }
    }
    static get f() {
        for (let v33 = 0; v33 < 100; v33++) {
            f3();
        }
        return this;
    }
    static #f = v2;
    c = v1;
    #a;
    [-1];
}
const v35 = new C4();
new C4();
new C4();
class C38 extends f3 {
    #p(a40, a41) {
        let v39 = this;
        const v42 = [-950834992,-268435456,536870912,2,-4294967295,12846,1000,38663,1841996067,721870135];
        const v43 = [3,-6,7268,-554513674,5,4294967295,861325878,17152,2147483647,5];
        function f44(a45, a46, a47) {
            a45.fill();
            return a46;
        }
        f44(v43, v42);
        v39 = a41;
        return v2;
    }
    [v0];
    h;
    static [f3] = f3;
    [v35] = f3;
}
new C38();
function f55(a56, a57, a58, a59) {
    return arguments;
}
const v61 = f55(118, f55, 118, 118);
f55(v61, f55, v61, 118);
new C38();
new C38();
const v65 = [1000000.0,4.0,877990.5497759602,-506457.5906391711,1.5877136832764825e+308,-5.0,0.37988723353754195];
const v66 = [-2.2250738585072014e-308,4.258971338651328e+307];
for (let i70 = 0, i71 = 10;
    (() => {
        const v72 = i70 < i71;
        class C73 extends Date {
        }
        return v72;
    })();
    i70++) {
}
v0[v0];
new Date();
function f85(a86, a87, a88, a89) {
    const v92 = new Date(a86);
    const v94 = new Set();
    const v95 = v94.add(v92);
    let [v96,,...v97] = v94;
    let v98;
    try { v98 = v97.findLast(); } catch (e) {}
    const v99 = v96.setUTCHours(v95, Float64Array, v97);
    const o101 = {
        __proto__: v94,
    };
    function f102() {
        return v98;
    }
    const v103 = f102();
    class C104 extends f102 {
    }
    const v106 = new Int32Array(v103);
    Number.isNaN(v99);
    return v96.setUTCFullYear(v106, f85, f85, v96);
}
for (let v109 = 0; v109 < 25; v109++) {
    const v110 = [1073741824,1073741823,1376142744,1073741825];
    for (let v111 = 0; v111 < 5; v111++) {
        v110.toSorted(f85);
    }
}
class C113 {
    #valueOf(a115, a116) {
    }
    static #a = v66;
    #g = 536870887n;
    static #f = v65;
    #b;
}
