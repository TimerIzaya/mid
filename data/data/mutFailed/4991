-Infinity;
const v3 = [601759695];
v3[0] = v3;
const o4 = {
    "c": v3,
};
o4.c = o4;
const v7 = "getInt32" == "getInt32";
class C8 {
}
const v9 = new C8();
function f10(a11, a12) {
    Float32Array.from([-3.942521664036782e+307,-3.942521664036782e+307,[o4,o4]]);
    return Float32Array;
}
v9.constructor = "getInt32";
v9?.constructor;
try {
const t0 = 2.1735896253194898e+307;
new t0();
} catch (e) {}
function f20(a21, a22, a23, a24) {
    const o27 = {
        "e": v9,
        ...a21,
        "d": a21,
        [v9]: a21,
        "g": 579720983,
        256: "getInt32",
        set b(a26) {
        },
        "b": a23,
        ...v9,
        "f": a23,
        "c": C8,
    };
    o27[256] = o27;
    return o27;
}
f20();
const v34 = new Float64Array(163);
v34[127];
const v37 = 256 < 256;
const v39 = new Uint32Array(256);
new Uint16Array(3446);
function f43() {
    return f43;
}
function f44(a45) {
    a45--;
    new Uint32Array(Uint32Array, Uint32Array, Uint32Array);
    return v37;
}
Object.defineProperty(f43, "toString", { writable: true, value: f44 });
const v50 = [23795,8,259058917,-256,1,-36806,4096,-9,-1,-18943];
function f51() {
    v34.byteLength *= f51;
    v3[v7] = v34;
    return "bigint";
}
Object.defineProperty("bigint", "valueOf", { configurable: true, value: f51 });
Date.UTC(f43, f43, "string");
const v55 = new Date(-2, v50);
try { v39.getYear(); } catch (e) {}
v55.toTimeString();
