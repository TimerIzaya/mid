const v1 = [20728,12328,-15553,-1590643568,512,3,3];
const v2 = [2087168392,-4096,17528,58367,9007199254740992,-65537,257,536870912,9126];
const v3 = [34303,65537];
class C4 {
    constructor(a6) {
        super.c += this;
        Object.defineProperty(a6, "length", { writable: true, value: a6 });
        super[v1] = v3;
    }
    static #m(a8, a9) {
        try {
            v1.g = a9;
        } catch(e10) {
        }
        return v2;
    }
}
const v11 = new C4(v1);
new C4(v3);
new C4(v1);
new Uint8ClampedArray(6);
new Float64Array(555);
new Float64Array(3);
class C26 {
    set e(a28) {
        Math.fround();
        Math.ceil();
    }
    m(a33) {
    }
    e;
}
const v34 = new C26();
const v35 = new C26();
new C26();
let v37 = ["number","ignoreCase",v34];
[[v35,"number","R"],C26,C26,v37];
const v43 = ("NN")["9"];
C26[0] >>= v43;
let v44;
try { v44 = v43(v35, v34, "string"); } catch (e) {}
Math.sign(5);
Math.sinh(-2147483649);
Math.atanh(v44);
v11 >> v44;
~4.0;
v37 = v44;
let v57 = 0;
while (v57 < 7) {
    v57++;
}
