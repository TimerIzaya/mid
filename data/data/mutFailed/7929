const v2 = new Float32Array(2);
const v5 = [1000.0,-1.7976931348623157e+308,1000000.0,1000000000000.0,-1000000000000.0,-863970.4344405974,1.7873969073744563e+308,0.0];
new Int8Array(v5);
new Uint8Array(1829);
const v11 = new Uint8ClampedArray(2);
function f14() {
    const v16 = ([f14,f14]).constructor;
    const t6 = 1829;
    const v17 = new t6();
    class C18 extends v16 {
    }
    const v19 = new C18();
    try { v19.reduceRight(); } catch (e) {}
    return v17;
}
const v24 = new Map();
function f25(a26, a27) {
    const o34 = {
        "a": a27,
        [v24]: a27,
        [2221](a29, a30, a31) {
        },
        ...v24,
        [a27]: Map,
        valueOf(a33) {
        },
    };
    return a27;
}
for (let v35 = 0; v35 < 395; v35++) {
    f25();
}
const v37 = new Uint16Array(3225);
for (const v38 of v37) {
    v2[3] = 5n;
    function F39() {
        if (!new.target) { throw 'must be called with new'; }
    }
    class C41 extends v38 {
    }
    class C42 {
    }
    const v43 = new C42();
    const v44 = [1829,1829,1829,1829,1829];
    function f45(a46, a47, a48) {
        v44.copyWithin();
        let v51 = 0;
        for (let i = 0; i < 25; i++) {
            try {
                const o52 = {
                };
                o52.c = C41;
            } catch(e53) {
            }
            try {
                const o54 = {
                };
                o54.h = v2;
                o54.f = v43;
            } catch(e55) {
            }
            v51++;
        }
        try {
            f45(v5, v11, [-268435456]);
        } catch(e59) {
        }
        v11 >> -268435456;
        return -268435456;
    }
    9007199254740991 * v38;
}
const v64 = new Uint8ClampedArray(10);
for (let i67 = 256n, i68 = 10; i67 < i68;) {
}
function f76() {
    function f77(a78, a79, a80, a81) {
        return a79;
    }
    f77(f77, f76, f77, f76);
    return f76;
}
%OptimizeFunctionOnNextCall(f76);
const v83 = new Int8Array(7);
[v83,[Int8Array,[v83,v83,v64],Int8Array],v2];
const v88 = new Float32Array();
let {...v89} = v88;
