function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = -9007199254740991;
    } catch(e3) {
    }
    try {
        this.d = -9007199254740991;
    } catch(e4) {
    }
    try {
        ({"d":F0,"e":F0,} = this);
        --F0;
        const v6 = -9007199254740991 !== F0;
        try { v6(); } catch (e) {}
        [-1894866930,0,3,-2027146390,-9007199254740991];
        [-1073741824,9,644425537,473072249,-1974972040,2147483649,4,16,-1052897241,-1363078833];
        [-56769,10215,-14];
        this.c = -9007199254740991;
    } catch(e11) {
    }
}
new F0();
new F0();
new F0();
function f18() {
    return F0;
}
new Int16Array(4);
new Uint8ClampedArray(8);
new Int32Array(1);
const v31 = [-11,65536,65537];
function f32(a33, a34, a35, a36) {
    v31[1428717040];
    return a36;
}
%OptimizeFunctionOnNextCall(f32);
f32();
