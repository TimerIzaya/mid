const v0 = [10000,15926958,268435439,1073741824,8,404617871,64,65536];
const v1 = [58201];
const v2 = [1073741823,-1266321275,-2,1303795068,1000,4];
const v5 = Float32Array?.constructor;
let v6;
try { v6 = new v5(v2); } catch (e) {}
const v7 = new Float32Array(3669);
const v10 = new v0(6);
v10.BYTES_PER_ELEMENT = v10;
const v13 = new Uint8ClampedArray(5);
v13[1];
let v16;
try { v16 = Date.toString(); } catch (e) {}
let v17;
try { v17 = v16.strike(); } catch (e) {}
const v18 = new Date();
try { v18.setFullYear(v18, Uint16Array, Uint16Array); } catch (e) {}
const v20 = v18?.valueOf;
async function* f21(a22, a23) {
    'use strict';
    v17 *= a23;
    try {
        v1.length = 3669;
    } catch(e25) {
    }
    await Uint8ClampedArray;
    try {
        yield v20;
    } catch(e28) {
    }
    return v6;
}
const v29 = f21(Date, 5);
v20.length;
try { new v20(); } catch (e) {}
const v32 = [-1000.0,2.0,6.498411136794167e+307,1.5301115680028905e+308,-1.0240581174585665e+308,-73553.73579822388,-474.34134439650745,2.300981674378132,-816063.8647013834,-1.2620665326245469e+308];
try { v32.find(v6); } catch (e) {}
const v34 = [];
try { v34.findLast(v0); } catch (e) {}
const v36 = [];
function f37(a38, a39) {
    const o49 = {
        129: v34,
        __proto__: v32,
        o(a41, a42, a43, a44) {
            [a38];
            Reflect.apply(a42.reduce, a39);
            return a39;
        },
        "f": v7,
        "e": Date,
        [v16]: v29,
        [Date]: a39,
        "h": Uint8ClampedArray,
        "f": v36,
        "e": v18,
        ...a39,
    };
    return o49;
}
let v50;
try { v50 = f37(v2, 6); } catch (e) {}
f37();
try {
    f21(v16, 3669);
} catch(e53) {
}
Date.prototype;
%PrepareFunctionForOptimization(f37);
f37(v32, v36);
%OptimizeFunctionOnNextCall(f37);
const t71 = f37(f37, v34);
t71[129] = v50;
