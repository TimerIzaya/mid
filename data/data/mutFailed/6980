const v5 = new Float64Array(23);
function f6() {
    function f7(a8, a9) {
        const o15 = {
            get a() {
                eval("-9007199254740990");
                return 6;
            },
        };
        return o15;
    }
    return f7;
}
Object.defineProperty(v5, "toString", { writable: true, configurable: true, get: f6 });
v5[8] = v5;
try { Float32Array(-1.3359727585663176e+308, -1.3359727585663176e+308, 1); } catch (e) {}
const v19 = new Float32Array(1);
const v20 = v19?.with;
try { new v20(-1000000000.0, -1000000000.0); } catch (e) {}
BigInt64Array.name = BigInt64Array;
const v24 = new BigInt64Array(512);
v24[200];
-Infinity;
function f29(a30, a31, a32, a33) {
    return a30;
}
const v34 = f29();
const v37 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v38 = [601759695];
v38[0] = v38;
const v39 = [1073741824,1073741823,1376142744,1073741825];
function f41(a42, a43, a44, a45) {
    a43 >>> a43;
    a44 & a44;
    function f49(a50, a51) {
        const o54 = {
            "type": "minor",
        };
        return gc(o54);
    }
    Object.defineProperty(arguments, "toString", { enumerable: true, value: f49 });
    const v56 = arguments.toString();
    function f57() {
        const t43 = "Vre";
        t43[1] = "Vre";
        const v59 = ("Vre").toLocaleUpperCase;
        try { v59(); } catch (e) {}
        try { new v59(v59, -4294967297n, a44, v39); } catch (e) {}
        ("Vre").fixed(f41);
        let v64 = -268435456;
        const v65 = v64--;
        v65 - v65;
        const v68 = -(v64 + v64);
        v68 + v68;
        const o83 = {
            "c": v37,
            [522675525n](a71, a72) {
            },
            ..."Vre",
            "maxByteLength": -128,
            "c": v38,
            valueOf(a74, a75) {
                return a74;
            },
            "e": -4294967295,
            "e": v64,
            "maxByteLength": -4294967295,
            "arguments": v37,
            ...v38,
            "type": "Vre",
            ..."Vre",
            valueOf(a77, a78) {
                return -4294967295;
            },
            ..."Vre",
            4: "Vre",
            "c": v64,
            "type": "Vre",
            "type": "Vre",
            toString(a80, a81, a82) {
                return a80;
            },
            5: -4294967295,
            6: v64,
        };
        o83.valueOf();
        return f41;
    }
    try { f57(); } catch (e) {}
    f57.length;
    f57();
    Int8Array.a = v56;
    Int8Array.a = Int8Array;
    const v89 = new Int8Array();
    try { v89.entries(); } catch (e) {}
    try { v89.findIndex(v34); } catch (e) {}
    v89.buffer.slice();
    %OptimizeFunctionOnNextCall(f57);
    ("find").strike();
    try { v39["find"](..."find", a45, ...v38, ...v39, ...522675525n); } catch (e) {}
    return v39;
}
for (let v97 = 0; v97 < 5; v97++) {
    f41(v38, v97, v97, v39);
}
%PrepareFunctionForOptimization(f41);
const v99 = f41();
%OptimizeFunctionOnNextCall(f41);
f41(v99, f41, -128, v34);
