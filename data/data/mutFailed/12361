function f0() {
    const o4 = {
        10: 53119,
        __proto__: "t",
        "g": -7.110850340399929e+307,
        "hasInstance": "t",
        11: 53119,
        "f": "t",
        [53119]: -7.110850340399929e+307,
        "h": -7.110850340399929e+307,
        1: "t",
        "e": -7.110850340399929e+307,
        1073741823: -7.110850340399929e+307,
        [-7.110850340399929e+307]: -7.110850340399929e+307,
        "f": -7.110850340399929e+307,
        "a": 53119,
        "c": "t",
    };
    return o4;
}
f0();
f0();
f0();
const v8 = [1024,1024,536870912,8588,-2147483648,-9007199254740992,-22010];
function f10() {
    return "28j";
}
f10.constructor;
[-60807,-37513,536870912,25727];
function F13() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.message = -4;
    } catch(e16) {
    }
    try {
        this.b = -4;
    } catch(e17) {
    }
}
[4,13,268435439,16069];
const v21 = [-13368780,12,1000,-57594,-816003280,-9,1963106300,9007199254740990];
const v22 = [601759695];
const v23 = [1073741824,1073741823,1376142744,1073741825];
function f25(a26, a27, a28, a29) {
    function f31() {
        const o38 = {
            "e": -4294967295,
            ...v21,
            ..."Vre",
            "c": v23,
            "f": "-1073741824",
            84: arguments,
            ..."Vre",
            valueOf(a36, a37) {
                return "-1073741824";
            },
            ..."Vre",
            4: "Vre",
            "c": -268435456,
            5: -4294967295,
            6: -268435456,
        };
    }
    f31();
    %OptimizeFunctionOnNextCall(f31);
    let v41;
    try { v41 = v23["find"](..."find", a29, ...v22, ...v23, ...522675525n); } catch (e) {}
    v41 != a28;
    return arguments;
}
for (let v43 = 0; v43 < 10; v43++) {
    f25();
}
new Array(386);
parseInt([-5.034735835956977e+307,-385.25474675985527]);
const o50 = {
};
new BigUint64Array(191);
const v56 = new Int16Array(2979);
function f58(a59, a60) {
    a60[0] = v8;
    191 + v56;
}
new BigInt(f58);
new Int32Array(0, BigInt);
function F67(a69, a70) {
    if (!new.target) { throw 'must be called with new'; }
    const v71 = a70.constructor;
    try { v71("-268435456", a70); } catch (e) {}
    function f73(a74) {
        for (let i = 0; i < 10; i++) {
            ["object"];
        }
    }
    Object.defineProperty(this, "c", { enumerable: true, set: f73 });
}
new F67(F67, F67);
