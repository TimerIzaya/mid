const v3 = /1Efoo(?<=bar)baz(ab|cde)\1/gumy;
const v4 = /[^123]n(ab|cde)(?:a+)+do2*/gudim;
const v5 = /[a\b!nd.a|bc]/guimy;
function f6(a7, a8) {
    function F10(a12, a13, a14, a15) {
        if (!new.target) { throw 'must be called with new'; }
        const v16 = this.constructor;
        try { new v16(); } catch (e) {}
        typeof Float32Array;
    }
    new F10(F10, 536870889, F10, 536870889);
    return "o";
}
v5[Symbol.toPrimitive] = f6;
const v23 = ["string",v5,"p"];
function f24() {
    const v25 = [1.0,-880481.6395920017];
    Object.defineProperty(v4, "h", { writable: true, configurable: true, value: v25 });
    return v25;
}
v23[Symbol.toPrimitive] = f24;
const v28 = ["string","o"];
function f29() {
    function f30() {
        for (let v31 = 0; v31 < 10; v31++) {
            const v37 = Math.ceil(("-52043" + 15) || 15);
            v37 | v37;
        }
    }
    f30();
    %OptimizeFunctionOnNextCall(f30);
    return v5;
}
v28.toString = f29;
const v40 = [v28];
function f44(a45, a46) {
    const o61 = {
        "e": v40,
        "d": v3,
        "g": a45,
        valueOf(a48, a49) {
            super[a48];
            return "Slf";
        },
        [a45](a55, a56, a57) {
            let v59 = 65536;
            v59 = 2032842477;
            let [] = a56;
            return 2032842477;
        },
    };
    return o61;
}
f44(v23, "p");
f44(v28, "string");
f44(v40, "p");
class C65 {
}
const v66 = new C65();
v66.constructor = f6;
const t60 = v66.constructor;
const v68 = new t60();
function f69() {
    return f44;
}
function f70(a71) {
    !a71;
    ~-111153843;
    +v23;
}
Object.defineProperty(v68, "valueOf", { writable: true, enumerable: true, get: f69, set: f70 });
class C80 {
    constructor(a82, a83) {
        Object.defineProperty(this, -2147483648, { writable: true, configurable: true, value: this });
        const v84 = a82?.constructor;
        let v85;
        try { v85 = this.toLocaleString(this, v84, v66); } catch (e) {}
        v85.charCodeAt(v68);
        this[-2147483648] >>>= -7;
        for (let v87 = 0; v87 < 25; v87++) {
            new C65();
            for (let v90 = 0; v90 < 10; v90++) {
                const v91 = [601759695];
                const v92 = [1073741824,1073741823,1376142744,1073741825];
                try { v92["find"](..."find", undefined, ...v91, ...undefined); } catch (e) {}
            }
            const v96 = new Map(a82);
            const v98 = "p" + -7;
            const v99 = new Map(v96);
            function f100(a101, a102) {
                const o103 = {
                    [v99]: Map,
                };
                return o103;
            }
            f100(v84, this);
            v96[v98] = -7;
        }
    }
    536870887;
}
new C80();
new C80();
