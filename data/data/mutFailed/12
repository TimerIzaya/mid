class C3 {
    static #p(a5) {
        function f6(a7) {
            return a7;
        }
        class C8 extends f6 {
            static [-1] = 8;
            static [a5];
            static 268435441;
        }
        return a5;
    }
    [0.028957958839558873];
    static 2147483648 = C3;
    static #g;
    #a;
}
new C3();
new C3();
const v11 = new C3();
/[\11]/gm;
/(?:a*)*/gudm;
/a(?!bbb|bb)c/vi;
function f17(a18) {
    "2147483649" * a18;
    function F20(a22, a23) {
        if (!new.target) { throw 'must be called with new'; }
    }
    return v11;
}
Uint16Array[Symbol.iterator] = f17;
new Uint16Array(Uint16Array);
new Int32Array(31);
new Uint32Array(128);
function f33() {
    const o39 = {
        "e": Uint16Array,
        __proto__: 3.4890473589784586e+307,
        "g": 12,
        o(a38) {
            return a38;
        },
        ...1000000000000.0,
    };
    return Int32Array;
}
%PrepareFunctionForOptimization(f33);
f33();
f33();
%OptimizeFunctionOnNextCall(f33);
f33();
class C3 {
    set b(a5) {
        function F6(a8) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = a5;
            } catch(e9) {
            }
            try {
                this.b = a5;
            } catch(e10) {
            }
        }
        new F6(-3.0);
        new F6(-5.0);
        new F6(-5.0);
    }
}
const v14 = new C3();
function f15() {
    let v16 = 9n;
    const v17 = v16--;
    class C18 {
    }
    const v19 = new C18();
    function F20(a22, a23) {
        if (!new.target) { throw 'must be called with new'; }
        this.__lookupSetter__();
        const v25 = a22.__lookupGetter__;
        try { new v25(v19, a22, v17, v25, a23); } catch (e) {}
        this.a = a23;
    }
    return C18;
}
Object.defineProperty(v14, Symbol.toPrimitive, { writable: true, value: f15 });
const v29 = new C3();
new C3();
const v31 = [-23092,54898];
const v32 = [55602,536870912];
const v33 = [-9223372036854775807,13,512,-10,536870888,-1227638349,-2,-1449496306,-4294967295,-16];
function f34(a35, a36) {
    const o45 = {
        [v14]: v32,
        "a": v33,
        __proto__: v29,
        "f": a36,
        p(a38, a39, a40, a41) {
            for (let v42 = 0; v42 < 32; v42++) {
                a40["p" + v42] = v42;
            }
            return a41;
        },
    };
    return o45;
}
const v46 = f34(v29, f34);
f34(v29, f34(v29, v46));
function f49() {
    const o55 = {
        "c": "c",
        [0.8270476620027499]: 0.43223002794581145,
        "g": 0.8270476620027499,
        [0.8270476620027499](a54) {
        },
        [-1]: "c",
    };
    return o55;
}
function f56() {
    v46[v31] >>>= v33 ^ -5.0;
    return v31;
}
f49.toString = f56;
const v58 = f49();
class C59 extends f49 {
    #toString(a61) {
    }
    a;
    [f49] = f49;
}
new C59();
const o63 = {
    __proto__: v58,
    "g": f49,
};
