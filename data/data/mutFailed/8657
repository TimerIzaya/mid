function f1() {
}
function f2(a3) {
    return f2;
}
const o6 = {
    "type": "function",
};
new Worker(f2, o6);
[1.214689286847312,-74.23414383091017,909.4827054556979,0.7262701564350498,3.6477140778585166];
const v11 = [-1000000000.0];
[-0.33219208922098,-1.1140890980849814e+308];
const v16 = new BigUint64Array(1486);
function f17(a18, a19, a20, a21) {
    const o22 = {
        [a21]: a20,
        ...v16,
    };
    return v16;
}
try { ("function").localeCompare("function"); } catch (e) {}
[0.894102059902855];
[2.2250738585072014e-308,-5.0,479.8839398502673];
[0.04566290666595041,1000000.0,-409.4244722562546,0.09026436784739122,-1000000000.0,-41634.083762034774];
const v29 = [592816.2885933237,-786412.2197068606,0.4924424548257581,-4.0,-0.009515481905818746,5.129937957041004e+307,1000000.0,-533422.8783987722,1e-15,2.0];
[1.262917986872716e+308,-1000000.0,0.25534045024969576,-2.2250738585072014e-308,339.2064981766282,-1000.0];
const v31 = [-3.0,1.0,3.0,0.5224481279420721];
try { v31.map(v29); } catch (e) {}
BigInt64Array.length = BigInt64Array;
const v36 = new BigInt64Array(4046);
let v37 = 115;
v37++;
Int8Array.BYTES_PER_ELEMENT = Int8Array;
function f40(a41, a42) {
    a41 | a41;
    let v44 = a41++;
    v44++;
    const v47 = new Float64Array();
    v47.buffer.resize(Float64Array);
    class C50 {
    }
    const v51 = new C50();
    v51.g = v51;
    let o53 = {
        "d": a41,
        ...a41,
        get e() {
            return a42;
        },
    };
    [,...o53] = v36;
    a42[4046];
    class C60 {
        static #g;
        constructor(a62) {
            const v63 = this?.constructor;
            try { new v63(C60); } catch (e) {}
            let {"c":v65,"g":v66,"length":v67,} = "size";
            C60 & v65;
            let v69 = v66?.[7];
            [...v69] = "size";
            C60.#g **= v66;
            /a\D\c0zR(x)(x)(x)(x)(x)(x)(x)(x)(x)(x)\10*/iy;
            /a\bc/vd;
            /(?:ab)|cde/uimy;
        }
        static #h;
        static #toString(a74) {
        }
        ["size"] = "size";
        static #e = 2.2250738585072014e-308;
        static #d;
    }
    try { new C60(5.0); } catch (e) {}
    const o76 = {
        "maxByteLength": 3035,
    };
    const v78 = new ArrayBuffer();
    try { v78.slice(v31, v11); } catch (e) {}
    Float32Array.prototype = Float32Array;
    const v81 = new Float32Array();
    const v82 = v81?.constructor;
    try { new v82("function", v36, "function"); } catch (e) {}
    return v37;
}
f40(4046, 3768);
f40(4046, 4046);
const v88 = [Infinity,-686.9856326146617,0.47369378110968274,-7.24289104755818];
v88.includes(...v88);
!0.8843420658768774;
([]).copyWithin();
