let v1 = Uint8ClampedArray;
const v2 = new v1(243);
let v3 = 5;
function f5(a6) {
    ({"g":v1,} = a6);
    v3 = 243;
    return a6;
}
Object.defineProperty(BigUint64Array, Symbol.toPrimitive, { writable: true, configurable: true, enumerable: true, value: f5 });
new BigUint64Array(v3);
class C14 {
    n(a16) {
        try { new a16(a16, a16, a16, 268435440, 268435440); } catch (e) {}
        const o19 = {
            "b": 256,
        };
        new gc();
        this[2] = -44363;
        const o24 = {
            "maxByteLength": 1024,
        };
        const v26 = new ArrayBuffer(1024, o24);
        new Int8Array(v26);
        return 268435440;
    }
}
const v29 = new C14();
new C14();
const v31 = new C14();
const v33 = new Date();
function f34() {
    return v33;
}
try {
    v29.g = v31;
} catch(e35) {
}
function F36(a38, a39, a40) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a38;
    } catch(e41) {
    }
    try {
        this.e = a38;
    } catch(e42) {
    }
    try {
        this.a = a38;
    } catch(e43) {
    }
}
const v44 = new F36(C14, v33, 268435440);
const v45 = new F36(v44, "L", v31);
new F36(f34, v45, -44363);
function f47(a48, a49) {
    const o51 = {
        ...a49,
        get h() {
            return this;
        },
    };
    return a49;
}
class C53 {
    static get d() {
    }
    c;
    static #e = -1000000.0;
    4294967295;
    #a;
}
new C53();
new C53();
const o58 = {
};
new Float32Array(Float32Array, Float32Array);
[];
[];
class C64 {
    static #p(a66, a67) {
    }
    #h;
}
const v68 = new C64();
const v69 = new C64();
const v70 = new C64();
v70.toJSON = -1000000.0;
function f71(a72, a73, a74, a75) {
    Object.defineProperty(a73, "toJSON", { writable: true, configurable: true, value: a74 });
    const o76 = {
        "c": -922911.6474995338,
        242: -922911.6474995338,
        "g": v69,
        [a75]: a73,
        [C64]: a73,
        "a": -747634.1081113975,
        "h": a72,
        "f": a75,
    };
    o76.toJSON = v2;
    return o76;
}
const v78 = f71(f71(v68, v70, C64), v70, v68, v68);
function f79() {
    return 1;
}
Object.defineProperty(v78, "toJSON", { writable: true, configurable: true, get: f79 });
const v80 = f71(v69, v70, v78, v78);
class C81 {
    constructor(a83, a84) {
        function f85(a86, a87) {
            v68 >>> 9007199254740991n;
            C64.g;
        }
        const v93 = [v68,v80];
        const o94 = {
            "arguments": v93,
            "type": "function",
        };
        new Worker(f85, o94);
    }
}
new C81(C64, C81);
new C53();
/ywha??/gvdim;
const v100 = new Float64Array(1);
class C101 {
    5 = 1;
    [v3];
    #g;
    [Float64Array];
    toString(a103, a104, a105, a106) {
        v100[this] = a103;
        for (let v107 = 0; v107 < 32; v107++) {
            v100["p" + v107] = v107;
        }
        return this;
    }
    [BigUint64Array];
    static 268435456;
}
new C101();
new C101();
new C101();
new WeakMap();
class C116 {
    static {
        try {
            const t149 = null;
            t149.valueOf = this;
        } catch(e118) {
            e118.stack;
        }
    }
}
