let v0 = -2147483648n;
try { new Uint8Array(Uint8Array, v0, 65535n); } catch (e) {}
new Uint8Array(9);
new Int32Array(501);
const t4 = 65535n;
new t4(2596);
const v14 = new WeakSet();
const v17 = v0++;
v17 + v17;
1449111164 + 1449111164;
function F22(a24, a25) {
    if (!new.target) { throw 'must be called with new'; }
    try { a24.delete(a25); } catch (e) {}
    const v27 = this?.constructor;
    v27.prototype;
    try { new v27(v14); } catch (e) {}
    F22 + v27;
    try {
        this.d = 1000;
    } catch(e31) {
    }
    try {
        this.c = Uint8Array;
    } catch(e32) {
    }
    try {
        this.b = undefined;
    } catch(e33) {
    }
}
new F22(v14, v14);
const v35 = new F22(5, 1449111164);
v35.c = v35;
const v36 = new F22(Uint8Array, 5);
new F22(v36, 5);
-1024 - -1024;
0.0 / 0.0;
-4294967295 & -4294967295;
-1 >>> -1;
let v56 = [-883936.0401947303,9.41640124927378e+307,0.060305085001335246];
v56 /= v56;
function f59() {
    delete arguments.callee;
    return arguments;
}
f59();
gc();
