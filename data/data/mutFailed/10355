/(?<=a)/gdiy;
/(?<!a)Y{z}/gdy;
/f(?<!a)/guimsy;
const v3 = [NaN,3.0];
const v4 = v3[1];
try { ("concat").valueOf(); } catch (e) {}
const v8 = v3[v4](-483497369);
try { v8.groupToMap(v3); } catch (e) {}
const v10 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
try { v10.pop(); } catch (e) {}
function f13(a14, a15, a16, a17) {
    a16 === a16;
    arguments[4] = v8;
    return a16;
}
f13(v3, v10, 522675525n, v10, 522675525n);
477499716 & 477499716;
[];
const v25 = /a\w/gudsy;
v25.hasIndices;
const v27 = /ka{0}/guims;
class C28 {
}
function f29(a30, a31) {
    const o32 = {
        ...v27,
        "d": v3,
        "c": a31,
        "g": a31,
        "f": a30,
        "a": a31,
        7: C28,
        __proto__: v8,
        "e": v27,
        "b": v25,
    };
}
f29.g = f29;
-Infinity;
-6552.656124953181 << -6552.656124953181;
function F41() {
    if (!new.target) { throw 'must be called with new'; }
}
v3.reverse();
function F45(a47, a48, a49) {
    if (!new.target) { throw 'must be called with new'; }
    const v50 = this.constructor;
    try { new v50(); } catch (e) {}
}
class C52 extends F45 {
}
C52.length;
function f59() {
    return 4294967297n;
}
const v64 = new Int16Array(242);
const o67 = {
};
const o82 = {
    "maxByteLength": 477499716,
    2: v8,
    4294967295: 268435441,
    "f": 6,
    toString(a70, a71, a72) {
        let v73;
        try { v73 = this.toString(a71, -9007199254740990, a70); } catch (e) {}
        function f75(a76, a77, a78) {
            return v64 == o67 ? v64 : o67;
        }
        f75(255n, v73);
        const t69 = 268435441;
        t69[Uint8ClampedArray] = -9007199254740990;
        return a71;
    },
};
const v85 = new Float32Array(-9007199254740990);
1122 - 1122;
Int16Array.name = Int16Array;
const v89 = new Int16Array(1122);
v89.BYTES_PER_ELEMENT = v89;
"p" + -9007199254740990;
v85[35] = v85;
new Uint16Array(v85);
