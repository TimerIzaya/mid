const v0 = [];
function f1() {
    return v0;
}
class C11 {
    constructor(a13, a14, a15) {
        let v16 = 0;
        do {
            a13[v16] = 1024;
            /j[\0][\c~]?/gdmy;
            /Id(?:a?)?/gudim;
            /a\nb\bc/gudims;
            v16++;
        } while (v16 < 1)
    }
}
const v23 = new C11(f1, -175725568n, 297204880n);
new C11(1024, 9007199254740990n, -1);
new C11(1933673283, 9007199254740990n, v0);
let v26 = 1024;
for (let i30 = 0, i31 = 10;
    (() => {
        const v32 = i30 < i31;
        class C33 extends Date {
        }
        return v32;
    })();
    (() => {
        function F36(a38, a39, a40, a41) {
            if (!new.target) { throw 'must be called with new'; }
            try {
                this.e = 1855263167;
            } catch(e42) {
            }
            try {
                this.d = a41;
            } catch(e43) {
            }
            try {
                this.g = a39;
            } catch(e44) {
            }
        }
        const v45 = new F36(F36, v23, i31, i31);
        new F36(-4096, v45, i30, -4096);
        new F36(F36, C11, i31, i30);
        i30++;
    })()) {
}
Int32Array[2] = Int32Array;
new Int32Array(v26);
new Uint8ClampedArray(2698);
new Uint32Array(204);
class C59 {
    static #m(a61, a62, a63) {
    }
    constructor(a65, a66, a67, a68) {
        this.#m();
    }
}
[-6.672391061426152e+307];
new Int32Array(Int32Array);
function f76(a77, a78, a79, a80) {
    const o81 = {
    };
}
class C82 {
    static get c() {
        const v84 = `
        `;
    }
}
function F86(a88, a89, a90, a91) {
    if (!new.target) { throw 'must be called with new'; }
    a91[1];
}
for (let v94 = 0; v94 < 10; v94++) {
}
for (let v95 = 0; v95 < 25; v95++) {
    Array(36862);
    v26++;
    ([-833.5530374606573,-46757.76096849947,-2.220446049250313e-16,-1000000.0,0.0,1.0,0.042648320103989557,1.4570589756852907,145338.1606694283]).groupToMap;
}
