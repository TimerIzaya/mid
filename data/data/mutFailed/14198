function f0() {
    let v4 = Map;
    class C5 extends v4 {
    }
    const v6 = new f0();
    function f7(a8, a9, a10, a11) {
        v6.get(f7);
        for (let v13 = 0; v13 < 5; v13++) {
        }
        return v6;
    }
    for (let v14 = 0; v14 < 5; v14++) {
        f7(v6, v14, f7, f0);
    }
    %OptimizeFunctionOnNextCall(f7);
    f7();
    const o23 = {
        [152.85595237212624](a18, a19) {
            let v20;
            try { v20 = a18.getUTCSeconds(a19, -474.3734420339616); } catch (e) {}
            this[81] = v20;
            const v21 = super.a;
            try { a18(v20); } catch (e) {}
            v4 >>>= "7CS";
            super[v21] = a18;
            return -474.3734420339616;
        },
        [-474.3734420339616]: 152.85595237212624,
        "g": 152.85595237212624,
        "b": -474.3734420339616,
    };
    return o23;
}
const v24 = f0();
v24();
f0();
function F27(a29) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.b = a29;
    } catch(e30) {
    }
}
new F27(f0);
new F27(f0);
new F27(v24);
new Int32Array(2);
new Int32Array(129);
new Int8Array(6);
const v43 = [-1024];
for (let v44 = 0; v44 < 5; v44++) {
    delete v43[v44];
}
