function f3(a4) {
    const o12 = {
        "size": a4,
        3448353293: 15n,
        m(a6, a7) {
            for (const v9 of this.g) {
                const v10 = v9?.[a4];
                try {
                    v10.__proto__ = v9;
                } catch(e11) {
                }
            }
            return this;
        },
        [1073741824n]: 3n,
        "d": 3n,
    };
    o12[1073741824];
    return o12;
}
const v14 = f3.length;
const v15 = f3(3n);
v15[128];
class C17 extends f3 {
    static #f = 3n;
    static 1073741823 = 15n;
    static [v15];
}
const v18 = new C17();
v18[1073741824] = v18;
new C17();
new C17();
f3(3n);
const v22 = f3(1073741824n);
function f23(a24) {
    v14 instanceof v14;
}
Object.defineProperty(v22, "p4", { enumerable: true, set: f23 });
let v28 = -881.8227658619442;
v28++;
try { BigUint64Array(C17, 1000000.0, BigUint64Array); } catch (e) {}
new BigUint64Array(1000);
let v37 = 512;
v37--;
const v40 = new Set();
for (let v41 = 0; v41 < 32; v41++) {
    const v43 = "p" + v41;
    v43[0] = v43;
    v22[v43] = v41;
}
const v45 = new Uint8ClampedArray(v37);
v45[351] = v45;
let v46 = 7;
v46--;
new BigUint64Array(v46, v40, 1.4296444184702902e+308, BigUint64Array);
3 && 3;
const v58 = new Uint8Array();
const o64 = {
    n(a62, a63) {
    },
};
const v65 = new Uint32Array();
function f66(a67, a68, a69, a70) {
    a67.a = -1.0080822992137041e+308;
    a67.a = a67;
    Object.defineProperty(a67, "g", { value: a68 });
    a67.g = BigUint64Array;
    a69 % a69;
    const o80 = {
        "b": a67,
        ...v58,
        "b": a68,
        __proto__: o64,
        set b(a73) {
            function f74(a75) {
            }
            class C76 extends f74 {
            }
        },
        n(a78, a79) {
            a69[a67] = v65;
        },
    };
    return Uint8Array;
}
for (let v81 = 0; v81 < 500; v81++) {
    v81++;
    f66(Uint8Array);
}
