let v1 = -5.069395110104431;
class C3 {
    get h() {
        try { this(); } catch (e) {}
        new Int32Array(3186);
        new Int8Array(10);
        new Uint32Array(128);
        return -1528418797;
    }
    static #c;
}
new C3();
const v16 = new C3();
const v17 = new C3();
function f19() {
    return -1528418797;
}
class C20 extends C3 {
    static get d() {
        let v23 = 2002697842;
        Math.log10(v23);
        ++v23;
        +f19;
        Math.cbrt(1166352481);
        Math.acosh(f19);
        v1++;
        return v17;
    }
    static [null];
}
new C20();
new C20();
new C20();
const v39 = [null,null,null];
class C42 extends v16 {
}
class C43 extends C42 {
    constructor(a45, a46, a47, a48) {
        super();
        function f49(a50, a51, a52) {
            return a45;
        }
        const v55 = new BigUint64Array();
        const v57 = [2082,"function",this,C42,v55];
        const o58 = {
            "arguments": v57,
            "type": "function",
        };
        new Worker(f49, o58);
    }
}
[v39];
const v61 = [-268435456,1000];
function f62(a63) {
    class C65 {
        static #b;
        constructor(a67, a68) {
            try {
                a67.#b = 860736081;
            } catch(e69) {
            }
        }
    }
    return a63;
}
v61.valueOf = f62;
let v71 = 30918;
const v72 = v71--;
Math.exp(v61);
Math.ceil(v72);
const v75 = [null];
new Set();
/(?:ab|cde)H[^123]*/vsy;
/a|bGxyz{93}a{0}\p{Script=Greek}/udis;
/(?:a+){0,0}/vdimy;
const v85 = new BigInt64Array();
Math.log1p(268435456);
function f90(a91, a92) {
    return -4096;
}
const o93 = {
    __proto__: v85,
};
const v102 = [];
function f103(a104) {
    v71 instanceof C42;
    return ([-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0]).length;
}
v102.constructor = f103;
let v108;
try { v108 = v102.flat(4096); } catch (e) {}
v108[1];
function F110(a112) {
    if (!new.target) { throw 'must be called with new'; }
}
function F114(a116, a117) {
    if (!new.target) { throw 'must be called with new'; }
    Number.isFinite(Number);
    const v120 = this.constructor;
    ([586209.1308562411,9.273207833056233,-793.5051180378861,-88.02009084622205,1000.0,5.993768942190951e+307,0.6895260767593681,3.203916786355496,1.7976931348623157e+308,-1.0422896205696638e+308]).fill(268435456, -27205);
    let v124 = 0;
    do {
        typeof v124 === "string";
        v124++;
    } while (v124 < 7)
    try { new v120(); } catch (e) {}
}
const v132 = new Int16Array(2183);
new Uint8Array(Uint8Array);
const v138 = new Int16Array(8);
async function f140(a141, a142, a143) {
    delete v138[-1000000000.0];
    function F146(a148, a149) {
        if (!new.target) { throw 'must be called with new'; }
        this.b = "b";
        this.d = a149;
    }
    const v150 = new F146();
    new F146(v150, v150);
    const o152 = {
        ...C42,
        __proto__: v150,
    };
    for (const v153 in o152) {
    }
    let [v154,v155,...v156] = v132;
    v132[5];
    const o158 = {
    };
    for (let v160 = 0; v160 < 500; v160++) {
        class C162 {
        }
        new Int32Array(v160, v160, 257);
        new Map();
    }
    const v170 = new Uint16Array(5);
    function f171(a172, a173) {
        const o177 = {
            set g(a175) {
            },
            39: v170,
        };
    }
    f171("message", 5);
    await "message";
    return Uint8Array;
}
const o180 = {
};
const v182 = new Proxy(v75, o180);
try {
    with (v182) {
        o180[b];
    }
} catch(e185) {
}
f140(8, 8, 948737.12760097);
+-36313 || (135.68951961804942 / (-36313 + 135.68951961804942));
