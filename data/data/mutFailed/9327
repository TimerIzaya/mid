Date.a = Date;
const v1 = new Date();
v1[Symbol.iterator] = Date;
const v4 = [61691.13313238043,1000.0,0.7224819315249409,1e-15,7.120548059150508,3.0,8.537438163139175,-8.532655659575984e+307,1000000.0,2.0];
const v5 = [2.2250738585072014e-308,NaN,-2.1837666140773955,1.4011816282918603e+306,4.0,0.05652835114393362];
const v6 = [2.2250738585072014e-308,757.3040351006955,1000.0,-560.4492499226603,-8.303430965457428,2.2250738585072014e-308,0.3163088739605858,0.7640181853416561,-0.0,572515.5518559748];
class C7 extends Date {
    #p(a9, a10) {
        Object.defineProperty(v5, v1, { writable: true, enumerable: true, get: Date, set: Date });
        super.getUTCDay();
        for (let v12 = 0; v12 < 32; v12++) {
            v6["p" + v12] = v12;
        }
        return v4;
    }
    toString(a16, a17) {
        this[2026];
        return Date;
    }
    65536;
    251;
    d;
    #d;
    #f;
}
C7.a = C7;
new C7();
new C7();
const v21 = new C7();
const v22 = v21[251];
let v23 = /\xe2\x81\xa3/vsy;
function f24() {
    function f25() {
        const t33 = "toString";
        t33[6] = "toString";
        return "toString" == "toString";
    }
    return f25;
}
Object.defineProperty(v23, "toString", { writable: true, configurable: true, enumerable: true, get: f24 });
const v28 = /(?!(a))\1/gudiy;
/2g(\1a)?/gviy;
try { v5["copyWithin"](...v1, v1, v22, v28); } catch (e) {}
const v37 = 536870888 + v23;
536870888 * 1.0535026979869178e+308;
v23++;
1.0535026979869178e+308 - (536870888 && v37);
let v42 = -65536n;
v42--;
let v44 = "iterator";
class C47 {
    static #p(a49) {
        return a49;
    }
}
const v50 = new C47();
new C47(v50, v44);
const v52 = new C47();
function f53() {
    function f54() {
        v44 <<= v6.__proto__;
        return v42;
    }
    return f54;
}
Object.defineProperty(v52, Symbol.toPrimitive, { configurable: true, enumerable: true, get: f53 });
try { v52.hasOwnProperty(v23); } catch (e) {}
C47.__proto__ = v44;
const v59 = [v50,v52];
v59.toString = Date;
try { v59.toString(); } catch (e) {}
([v59,v44,4.488303140222985])[2];
const v63 = [];
const v64 = v63?.lastIndexOf;
try { new v64(v50); } catch (e) {}
const v66 = [1828032293,v63];
v66.toString = f53;
const v67 = [v66];
try { v67.reduce(-1374287970n); } catch (e) {}
const v69 = [v50,v67,v59];
function f70() {
    return v69;
}
BigInt64Array.prototype;
const v74 = new BigInt64Array(218);
v74.sort(f70);
