[9.915277953785619,3.0,761.5434037988502,0.1049218106549108,666.0033383653392,-999.7748235862716];
[22.24677584663914,0.09768044519138064,0.22644231342530063,0.9611694333098779,-4.0,-343679.08179842704,-1.7976931348623157e+308,8.295663133076157];
[254.20620991027613,629.04047754255,0.2934734290701676,2.220446049250313e-16];
try { ("u").sup(); } catch (e) {}
const v6 = ("set")?.toLocaleUpperCase;
try { new v6(); } catch (e) {}
const v11 = new Uint32Array(5);
let v12;
try { v12 = v11.findIndex("c"); } catch (e) {}
new Uint32Array(128);
new Int32Array(157);
const v20 = 536870912 | 536870912;
new Int32Array(201);
new Uint32Array(9);
new BigInt64Array(257);
class C32 {
    #c = "e";
    #p(a34, a35) {
        [536870912];
        [a34,[a34,v20,a34,a34]];
        const o39 = {
        };
        try {
            o39.g = "e";
        } catch(e40) {
        }
        try {
            const o41 = {
            };
            o41.g = "e";
            o41.d = a35;
        } catch(e42) {
        }
        try {
            const o43 = {
            };
            o43.g = "e";
            o43.d = a35;
            o43.b = "e";
        } catch(e44) {
        }
        try {
            const o45 = {
            };
            o45.g = "e";
            o45.d = a35;
            o45.b = "string";
        } catch(e46) {
        }
        return "e";
    }
}
const v47 = C32.prototype;
new C32();
const v49 = new C32();
const v50 = new C32();
const v51 = v50?.constructor;
try { new v51(); } catch (e) {}
const v54 = new Set();
class C55 {
    static #a;
    static #d = "string";
    static #valueOf(a57, a58) {
        const o59 = {
        };
        try {
            o59.a = a57;
        } catch(e60) {
        }
        try {
            const o61 = {
            };
            o61.a = a57;
            o61.d = Set;
        } catch(e62) {
        }
        try {
            const o63 = {
            };
            o63.a = a57;
            o63.d = Set;
            o63.e = "string";
        } catch(e64) {
        }
        try {
            const o65 = {
            };
            o65.a = a57;
            o65.d = Set;
            o65.h = a58;
        } catch(e66) {
        }
        return this;
    }
}
const v67 = new C55();
new C55();
let v69 = new C55();
for (let i71 = 0; i71 < 0; i71++) {
    let {"b":v77,...v78} = v47;
    v67[8];
}
const v80 = v69?.__defineGetter__;
try { new v80(v69, "u"); } catch (e) {}
v12[2] *= 536870912;
new C55("e", v50, v69, v69, v49);
try { v69.p(v54); } catch (e) {}
++v69;
