class C3 {
    #o(a5) {
        try { a5.setUTCDate(); } catch (e) {}
        this[-1] = -8;
        this[129] = a5;
        return 1073741823;
    }
    static {
        for (let v8 = 0; v8 < 32; v8++) {
            this["p" + v8] = v8;
        }
    }
    #e = -9007199254740991;
    12 = -8;
}
function f11() {
    BigUint64Array <= 0.7221600461335677;
    return C3;
}
C3[Symbol.toPrimitive] = f11;
new C3();
const v18 = new C3();
const v19 = new C3();
class C23 {
    static #n(a25, a26, a27) {
        let v28 = 10;
        for (; v28--;) {
            try {
            const t0 = 257;
            t0(257, this);
            } catch (e) {}
        }
        return -4294967295;
    }
    static 124;
    #f;
    130;
    [-4294967295] = v19;
}
new C23();
new C23();
new C23();
function f34(a35, a36) {
    const o46 = {
        "a": a36,
        [C3](a38, a39, a40) {
            try { v18.o(a40); } catch (e) {}
            try {
                a38.fuck(a38, 1, -2.2250738585072014e-308);
            } catch(e45) {
            }
            return a36;
        },
        "f": v18,
        [a35]: v19,
        2462: 1073741823,
        ...v18,
    };
    return o46;
}
f34(1073741823, 257);
f34(1073741823, 1073741823);
f34(-4294967295, -9007199254740990);
const v54 = [/D[\p{Script_Extensions=Mongolian}&&\p{Number}]*/udisy];
function f55(a56) {
    Math.log10(57802);
    const v61 = f34 / 57802;
    Math.max(11 + v61);
    +v61;
    Math.cosh(f34);
    Math.tanh(f34);
    return -4294967295;
}
v54[Symbol.toPrimitive] = f55;
const v69 = [v54];
function f70(a71, a72) {
    new BigUint64Array(4035);
    new Uint8Array(1000);
    new Uint32Array(3675);
    return 1000;
}
v69[Symbol.toPrimitive] = f70;
const v84 = ["-536870912","replace",v54,1,v69];
const v86 = [];
Reflect.apply(("-536870912").normalize, v84, v86);
