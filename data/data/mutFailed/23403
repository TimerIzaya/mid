function f2() {
    return f2;
}
class C3 extends 268435441n {
    #o(a5, a6, a7) {
    }
}
try { Float64Array(268435441n, Float64Array, Float64Array); } catch (e) {}
new C3(0);
const v16 = new Uint8Array(256);
v16.join(256);
for (let v18 = 0; v18 < 5; v18++) {
    function f19() {
        Number.isNaN(Math.atanh() + v18);
        return f19;
    }
    f19.length = f19;
    f19();
    %OptimizeFunctionOnNextCall(f19);
}
new Float32Array(256);
~100;
new v16(100);
-1;
Uint16Array.e = Uint16Array;
new Uint16Array(1);
const v36 = 256 < 0;
const v37 = [10000];
const v38 = new Float32Array(v37);
try { v38.entries(); } catch (e) {}
const v42 = Uint8Array.toString(Uint8Array, Uint8Array, Uint8Array, Uint8Array).normalize();
try { v42.replaceAll(9007199254740992n, v37); } catch (e) {}
const v46 = new Uint32Array(255);
v46[178];
512 | 512;
new Int8Array(512);
const v53 = this?.RangeError;
try { new v53(255); } catch (e) {}
this.printErr();
try { Int32Array.from(Int8Array); } catch (e) {}
new Int32Array();
/(x)(x)(x)\1/uis;
v36.exec(Int16Array);
