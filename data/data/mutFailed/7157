class C3 {
    #p(a5, a6) {
        Object.defineProperty(this, "a", { writable: true, configurable: true, value: this });
        a5?.[a6];
        const t3 = "-27411";
        t3[9007199254740990] **= 257;
        let [v11] = "-27411";
        257 != 2.220446049250313e-16;
        return "-27411";
    }
    static d;
    static g;
    static ["-27411"] = 2.220446049250313e-16;
    h;
}
const v13 = new C3();
new C3();
const v15 = new C3();
class C16 {
    static b;
    static n(a18, a19, a20, a21) {
        try { v13.m(this, a20, a20); } catch (e) {}
        (C3 >>>= a19) / "-27411";
        return a19;
    }
    ["-27411"] = v15;
    constructor(a25, a26) {
    }
    /*
    constructor(a29, a30, a31, a32) {
        function F33() {
            if (!new.target) { throw 'must be called with new'; }
        }
        new F33();
        const v36 = [6.345269750596144e+307,1.5426121797865451e+308,-1.0,1.0763754168130034e+308,-1.0165609707268582e+308,-2.220446049250313e-16,4.1652134965708285,Infinity,8.22884515469082e+307,-1000000000.0];
        function F37(a39, a40, a41) {
            if (!new.target) { throw 'must be called with new'; }
            const v42 = this.constructor;
            try { new v42(a40); } catch (e) {}
            a39[3] = a39;
        }
        new F37(v36);
    }
    */
    268435456;
    #f = C3;
    static d;
    p(a46, a47, a48, a49) {
        const v51 = new Float32Array(C3, a47, this);
        v51.constructor;
        gc();
        ("-27411").length;
        const o58 = {
            "maxByteLength": 1842216027,
        };
        const v60 = new ArrayBuffer(4096, o58);
        new Uint8ClampedArray(v60);
        return a48;
    }
}
new C16();
new C16();
new C16();
const v68 = new BigUint64Array();
const o69 = {
    __proto__: v68,
};
function F73(a75, a76) {
    if (!new.target) { throw 'must be called with new'; }
}
class C77 extends 735140.994023684 {
    #d;
    static {
        for (let v79 = 0; v79 < 25; v79++) {
        }
        try {
            this.#d = C3;
        } catch(e80) {
        }
    }
}
new Uint8ClampedArray([1,17,[Uint8ClampedArray,Uint8ClampedArray]]);
