const o5 = {
    set b(a3) {
    },
    get d() {
        return this;
    },
};
const v7 = /(J5a{0,1}?)/y;
const v8 = [601759695];
const v9 = [1073741824,1073741823,1376142744,1073741825];
function f10(a11, a12, a13, a14) {
    ~a12;
    try { a11(); } catch (e) {}
    const v17 = a13 << a13;
    v17 % v17;
    function f19() {
    }
    const v21 = new Int8Array();
    BigUint64Array.length;
    const v25 = BigUint64Array * 536870887;
    let v26 = v25 - v25;
    v26++;
    v25 ** v25;
    try { Number(v7); } catch (e) {}
    const v32 = v21.buffer.__defineGetter__;
    try { v32(); } catch (e) {}
    try { v9["find"](..."find", a14, ...v8); } catch (e) {}
}
class C36 {
    static #p(a38) {
        const v39 = this + (a38 = this);
        try {
            super.o("1119517597", a38, v39, "1119517597", a38);
        } catch(e41) {
        }
        return "1119517597";
    }
    constructor(a43, a44) {
        "1119517597" >> "1119517597";
        Reflect.construct(a43, [], a43);
        "IB0g" instanceof a44;
        super.h = "IB0g";
        this[a43];
    }
}
const v51 = new C36("1119517597", "1119517597");
new C36(v51, "IB0g");
new C36(v51, "1119517597");
new WeakSet();
new Float64Array(127);
function F61(a63, a64) {
    if (!new.target) { throw 'must be called with new'; }
    const v65 = a63.constructor;
    try { v65(a63); } catch (e) {}
    class C67 {
    }
}
new BigUint64Array(14);
new Int8Array(7);
9223372036854775807 ^ 9223372036854775807;
class C79 {
}
const v80 = new C79();
const t63 = v80.constructor;
const v82 = new t63();
v82.constructor;
const v84 = new C79();
const t67 = v84.constructor;
new t67();
