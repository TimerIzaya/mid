let v0 = [0.17123309124660457,0.07126584579398909,-1000.0,-1000.0,-1000000000000.0,-3.0,0.4578473183672087];
const v1 = [-45056.77965890209,5.3617799720817665,-4.0,1.255000381607523e+308,-120485.19120619283,-1000000000000.0,4.0,-1.0,-2.220446049250313e-16];
const v2 = [9.37718062482821,-6.987434328744948,-293.4020158271551,-9.557166629754875,-1.7976931348623157e+308,1000000.0,-6.224596130418504e+307,1.7976931348623157e+308];
let v3 = 6;
-268435456 - -268435456;
const o12 = {
    "e": -4294967295,
    ..."Vre",
    valueOf(a10, a11) {
    },
    ..."Vre",
    4: "Vre",
    "c": -268435456,
    5: -4294967295,
    6: -268435456,
};
class C14 {
    static #c = v3;
    constructor(a16, a17) {
        try { a17.concat(C14); } catch (e) {}
        const v19 = [a17,a17];
        const v20 = [a16,v19,v19,a16];
        ([v20,v3,this,v20])[3];
        super[this] = a17;
        const v24 = (2136873598).constructor;
        v24.MAX_VALUE = v24;
        new v24();
        -9223372036854775808 & -9223372036854775808;
    }
    #n(a29, a30, a31) {
        try {
            a30.#c = v0;
        } catch(e32) {
        }
        const v33 = ++v0;
        const v35 = Symbol.iterator;
        try {
            v2.#c;
        } catch(e37) {
        }
        try { new C14(a30, v33, Symbol); } catch (e) {}
        v1[v35];
        return a30;
    }
}
try { new C14(v3, v3); } catch (e) {}
const v41 = new C14(v0, v2);
const v42 = new C14(v2, v0);
const v43 = new C14(v41, v2);
const v44 = v43?.constructor;
try { new v44(36505, v1); } catch (e) {}
const v46 = [9007199254740990,13,4,1073741824,1162470085,194373368,-922136972,-7];
try { v46.push(v43); } catch (e) {}
const v48 = [536870912,1073741823,-9223372036854775808,268435439];
try { v48.toString(); } catch (e) {}
const v50 = [3,-12,-7,-9007199254740990];
try { v50.find(v46); } catch (e) {}
const v53 = ["4294967296"];
try { v53.values(); } catch (e) {}
try {
    new Int8Array(-45057);
} catch(e58) {
}
function f59() {
    return v46;
}
function f60(a61, a62) {
    a61.g = a61;
    const o100 = {
        __proto__: a62,
        "e": v0,
        next() {
            v3--;
        },
        /*
        __proto__: v46,
        */
        set d(a66) {
        },
        valueOf(a68, a69, a70) {
            function f71(a72) {
                for (let v75 = 0; v75 < 100; v75++) {
                }
                return this;
            }
            Worker(f71);
            return Worker;
        },
        toString(a80, a81) {
            new Uint8ClampedArray(4);
            const v85 = a80 ^ a61;
            const o86 = {
            };
            try {
                o86.h = v85;
            } catch(e87) {
            }
            try {
                const o88 = {
                };
                o88.h = v85;
                o88.g = a61;
            } catch(e89) {
            }
            try {
                const o90 = {
                };
                o90.h = v85;
                o90.g = a61;
                o90.d = a61;
            } catch(e91) {
            }
            try {
                const o92 = {
                };
                o92.h = v85;
                o92.g = a61;
                o92.d = v42;
            } catch(e93) {
            }
            new Float64Array(1000);
            new Int32Array(4096);
            return a62;
        },
        2944: a62,
        "c": a61,
        "h": a61,
    };
    o100[2944];
    return o100;
}
f60(v48, f60(v48, v46))[2944];
const v105 = f60(v46, v2);
try { v105.toSpliced(v0, v0); } catch (e) {}
65536 < 65536;
Math.log2(v46);
let v112 = 65536 >>> 36505;
const v113 = -3.0 >>> v46;
const v114 = v46 + -3.0;
Math.hypot(v113);
v112++ / v114;
const v118 = [-2.220446049250313e-16,-6.9960895637188125,4.1724406514239416e+307,0.22217900637554078,1000000000.0,-1e-15,1000000000.0,0.39864764958879706,1000000.0,2.2250738585072014e-308];
v118[3] = v118;
let v119 = 9223372036854775807;
v119--;
new Date(v119);
v118[792746597] ||= v118.reduce(Date);
