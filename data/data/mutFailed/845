const v0 = [];
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v0;
    } catch(e3) {
    }
}
const v4 = new F1();
const v5 = new F1();
const v6 = new F1();
function f11() {
    return true;
}
class C12 extends f11 {
    constructor(a14, a15, a16, a17) {
        super();
        let v18;
        try { v18 = a16.trunc(v6, a15, v4, F1, a14); } catch (e) {}
        %VerifyType(v0);
        function f19() {
            return v18;
        }
    }
    [v5] = f11;
    get d() {
        this[128] = v0;
        true || v6;
        return F1;
    }
    #h;
}
const v22 = new C12(8, 8, v6, C12);
new C12(1073741824, 2, v6, v22);
new C12(2, 8, v6, 8);
class C30 {
}
const t37 = 2;
const v31 = new t37();
([-2099226038,1000000000.0,v31,Array]).sort();
typeof F1;
