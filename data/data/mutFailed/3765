function f0() {
    let v3 = 514100069;
    const o25 = {
        set f(a5) {
            const v6 = super.g;
            const o7 = {
            };
            try {
                o7.a = v6;
            } catch(e8) {
            }
            try {
                const o9 = {
                };
                o9.a = v6;
                o9.g = this;
            } catch(e10) {
            }
            try {
                const o11 = {
                };
                o11.a = v6;
                o11.g = this;
                o11.e = 9;
            } catch(e12) {
            }
            try {
                v3 *= a5;
                super[9];
                new Uint8Array(228);
                new Uint16Array(256);
                new Int8Array(3373);
                const o23 = {
                };
                o23.a = v6;
                o23.g = this;
                o23.d = 9;
            } catch(e24) {
            }
        },
    };
    return o25;
}
const v26 = f0();
const v27 = f0();
const v28 = f0();
function F32(a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.e = v27;
    } catch(e36) {
    }
    try {
        this.b = f0;
    } catch(e37) {
    }
    try {
        this.d = a35;
    } catch(e38) {
    }
}
const v39 = new F32(v27, 4);
const v40 = new F32(v26, 2029726607);
new F32(v40, 128);
class C42 extends F32 {
    o(a44, a45, a46) {
        F32 <= v28;
        super.e = v28;
        a46[251] = a44;
        return v28;
    }
    constructor(a49, a50, a51) {
        super(a50, 4);
        a51 = v28;
        this["o"](4, v39, ..."o", 4);
    }
    a;
    #h = v39;
}
const v54 = new C42(128, 4, 4);
new C42(2029726607, 4, v54);
new C42(4, 128, v26);
const v57 = [-14339,735253629,4294967296,3,268435456,3,57019,268435439];
for (const v59 in [1959699296,-1,9007199254740991,9007199254740992,2147483649,-4096,-9223372036854775808]) {
}
for (const v60 in v57) {
    ("-2").normalize("NFKC");
}
