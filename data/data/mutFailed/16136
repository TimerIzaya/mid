const v1 = new Set();
function f2() {
    return Set;
}
function f3(a4) {
    class C5 {
    }
    const v6 = new C5();
    const v8 = -4294967297n / -4294967297n;
    const v9 = [601759695];
    for (let v10 = 0; v10 < 5; v10++) {
        function f11() {
            "Vre" == C5;
            const o24 = {
                [-4294967297n](a16, a17, a18, a19) {
                },
                ...v9,
                ...v6,
                4: v8,
                toString(a21, a22, a23) {
                    return v10;
                },
                5: -4294967295,
            };
            return f11;
        }
        f11();
        %OptimizeFunctionOnNextCall(f11);
    }
}
Object.defineProperty(v1, "length", { writable: true, configurable: true, enumerable: true, get: f2, set: f3 });
let v28;
try { v28 = ("Nh").fixed(); } catch (e) {}
let v30;
try { v30 = ("qrN4").valueOf(); } catch (e) {}
v30[1] = v30;
255 | 255;
const v34 = new Uint32Array(255);
let v35;
try { v35 = v34.set(v1); } catch (e) {}
try { new Uint8ClampedArray(v28, v28, v1); } catch (e) {}
[Uint32Array];
const v41 = [536870887,-42204,-17288903,-3,9007199254740991,7];
const v42 = [-15,-2147483649,-899333997,3,1455560807,-1024,-4294967297,2098301778];
class C43 {
    constructor(a45) {
        function f46(a47, a48) {
            return a47;
        }
        f46(v42);
        f46(v41);
    }
}
const v51 = new C43(C43);
let v52;
try { v52 = v51.__defineGetter__(); } catch (e) {}
const o53 = {
    "d": v52,
};
const v54 = new Uint8ClampedArray(256);
try { v54.find(v34); } catch (e) {}
Math.atanh("Vre");
function f60(a61, a62, a63, a64) {
    return 45725n;
}
f60();
let v68;
try { v68 = Uint8ClampedArray.from("qrN4"); } catch (e) {}
const v69 = [2.220446049250313e-16,-Infinity,NaN,-1e-15,-4.0,-2.2250738585072014e-308,-742.8087895557678,-4.0,Infinity,655658.0990783614];
function f70(a71, a72) {
    for (let [i75, i76] = (() => {
            switch (f2) {
            }
            return [0, 10];
        })();
        i75 < i76;
        i76--) {
    }
    return a71;
}
v69.toString = f70;
parseInt(v69);
("f").charAt(-4294967295);
v68.g = v68;
const v87 = new Uint8ClampedArray(632);
v87[314] = v87;
const v89 = [-3.0];
v89[2] = v35;
v89[2] = 3.0;
2 - 2;
Math.sinh();
const v94 = Math.cos(2);
v94 ^ v94;
