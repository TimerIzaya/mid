function f0() {
}
const v3 = new Array(7);
function f4(a5) {
    const o11 = {
        [a5]: Array,
        "d": f0,
        ...a5,
        __proto__: a5,
        [7](a7) {
            return "bigint";
        },
        "c": f0,
        "f": Array,
    };
    return o11;
}
class C12 extends f4 {
    static 1000;
}
new C12();
const v14 = new C12();
const v15 = new C12();
const v16 = f4(Array);
const v17 = f4(v16);
const v18 = f4(f0);
function f19(a20, a21) {
    let [] = v3;
    try { v16.toString(v15); } catch (e) {}
    v17[1] = a21;
    try { a20(); } catch (e) {}
    try {
        a20.length = 8;
    } catch(e25) {
    }
    const o33 = {
        o(a27, a28, a29, a30) {
            for (let v31 = 0; v31 < 100; v31++) {
                Array(a29);
            }
            return a30;
        },
        [8]: f4,
        2138: v14,
        "e": f0,
        "g": v15,
        "h": v17,
        "c": v18,
        [a20]: 7,
        0: v3,
        "h": v17,
        512: f4,
        4: v17,
    };
    return o33;
}
f19(f19(f19(v3, v18), v16), v17);
const v39 = new Int8Array(3938);
let v40 = 3;
new Float64Array();
let v43 = 0;
for (let i = 0; i < 5; i++) {
    v43 < 8;
    [...v40] = v39;
    v43++;
}
