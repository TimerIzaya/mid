const v0 = [-1.0,910355.0340570656];
const v1 = [3.590870487211988e+307,2.0];
const v2 = [-4.0,1000000.0,5.0,1.7976931348623157e+308,1.1700955760939436e+308,-1000.0,-226.97912623621858];
function f3() {
    return v2;
}
f3.d = f3;
class C4 extends f3 {
    static set a(a6) {
        v1[v1] <<= v2 << this;
    }
    static {
        this.prototype = this;
        let v9;
        try { v9 = new this(); } catch (e) {}
        let v10;
        try { v10 = v9.unshift(v0); } catch (e) {}
        v10 >> v10;
        this[8] = f3;
        const v12 = v1.__proto__;
        try { v12.findIndex(C4); } catch (e) {}
        try { v12.lastIndexOf(this); } catch (e) {}
        this >>> v0;
        let v17 = 1366797624;
        69636.38082236401 >> 69636.38082236401;
        const v21 = -v1;
        const v23 = ~(v21 >>> v21);
        v23 - v23;
        const v25 = ++v17;
        v25 % v25;
        v17 ** v1;
        let v28 = v1 % v17;
        v28++;
        v1 >> v1;
    }
}
let v31;
try { v31 = new C4(); } catch (e) {}
try { v31.unshift(f3); } catch (e) {}
const v33 = new C4();
let v34;
try { v34 = v33.groupToMap(v0); } catch (e) {}
const v35 = new C4();
try { v35.toSorted(v34); } catch (e) {}
new C4();
-8836n - -8836n;
!(-8836n != -8836n);
2025n - 2025n;
new Set();
class C48 {
    f = "1073741824";
}
const v49 = new C48();
v49.f;
v49.f;
v49.b = v49;
try { ("g").strike(); } catch (e) {}
const v55 = ("YZmA")[1];
class C56 {
    [C48];
    static 1073741825;
    static ["YZmA"] = v49;
}
C56.length;
let v58;
try { v58 = new C56(); } catch (e) {}
const v59 = v58?.__lookupGetter__;
try { new v59("1073741824"); } catch (e) {}
const v61 = new C56();
const v62 = v61?.constructor;
try { new v62(); } catch (e) {}
const v64 = v61?.constructor;
try { new v64(); } catch (e) {}
try { new v64(); } catch (e) {}
try { ("indexOf").replace(v55, 14n); } catch (e) {}
const v69 = ("YZmA")["indexOf"]("g");
v69 << v69;
v69 - v69;
Symbol.g = Symbol;
let v73;
try { v73 = Symbol.for(Symbol); } catch (e) {}
Symbol.for(v73.description);
Symbol.for(Symbol.for(v73.description).description);
("YZmA")[Symbol.toStringTag];
gc.length;
let v88;
try { v88 = ("minor").startsWith("YZmA"); } catch (e) {}
!v88;
const v91 = ("sync")?.indexOf;
try { new v91("sync"); } catch (e) {}
let v93;
try { v93 = ("sync").toLocaleLowerCase(); } catch (e) {}
try { v93.sup(); } catch (e) {}
const o95 = {
    "execution": "sync",
    "type": "minor",
};
gc(o95);
