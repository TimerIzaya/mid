function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.a = 133775117;
    } catch(e3) {
    }
    try {
        this.c = 133775117;
    } catch(e4) {
    }
}
const v5 = new F0();
const v6 = new F0();
const v7 = new F0(v5);
const v9 = Date?.constructor;
try { new v9(v6); } catch (e) {}
const v11 = new Date();
let v12;
try { v12 = v11.getUTCMilliseconds(); } catch (e) {}
function F13(a15, a16, a17) {
    if (!new.target) { throw 'must be called with new'; }
    a17.b = a17;
    try {
        this.e = v11;
    } catch(e18) {
    }
    try {
        this.h = v11;
    } catch(e19) {
    }
    try {
        this.b = Date;
    } catch(e20) {
    }
}
const v21 = new F13(v7, v7, v6);
v21.d = v21;
new F13(F0, v11, v5);
const v23 = new F13(F13, v6, v5);
for (const v24 of v9) {
    new Date();
}
const o27 = {
};
try {
    o27.g = v21;
} catch(e28) {
}
try {
    const o29 = {
    };
    o29.g = v21;
    o29.e = F13;
} catch(e30) {
}
try {
    const o31 = {
    };
    o31.g = v21;
    o31.e = F13;
    o31.b = v7;
} catch(e32) {
}
try {
    const o33 = {
    };
    o33.g = v21;
    o33.e = F13;
    o33.b = v12;
} catch(e34) {
}
v23.POSITIVE_INFINITY = v23;
const v41 = -15 === -15;
const t72 = "44184";
t72[4] = "44184";
const o43 = {
    ..."44184",
    [-15]: -15,
    ..."44184",
};
class C45 {
}
try { C45.bind(); } catch (e) {}
try { new C45("-322171011"); } catch (e) {}
new C45("-322171011", v23, v41);
function f49() {
    for (const v53 of Array(4087)) {
        let v54 = v53 - v53;
        const v58 = new Set();
        v58["delete"](839612.5677247904);
        new Float64Array(127);
        (127).constructor;
        function F66(a68, a69) {
            if (!new.target) { throw 'must be called with new'; }
        }
        ("29753").replaceAll("29753", "b").split("b");
        ("boolean").split("toString");
        function f77(a78, a79, a80) {
        }
        function f81(a82, a83, a84, a85) {
        }
        v54++;
    }
}
try { new f49(); } catch (e) {}
function F89() {
    if (!new.target) { throw 'must be called with new'; }
    function f92(a93, a94, a95, a96) {
        a95++;
        const o98 = {
        };
        a95[536870887] %= 668437165;
        o98[2] = o98;
        const v99 = o98[2];
        v99[1] = v99;
        v99[1] = 1211267280;
        return f92;
    }
    for (let v100 = 0; v100 < 500; v100++) {
        f92(F89, v100, 668437165, F89);
        o43.a;
        [4294967297];
        [-34923,127];
        [7];
        +v100;
    }
}
function f107(a108, a109, a110, a111) {
    'use strict';
    function f112(a113) {
    }
    function F114(a116, a117, a118, a119) {
        if (!new.target) { throw 'must be called with new'; }
    }
}
f107.length = f107;
for (let v120 = 0; v120 < 5; v120++) {
    function f121() {
        function F122(a124) {
            if (!new.target) { throw 'must be called with new'; }
        }
        class C126 {
        }
        const o127 = {
        };
        const v128 = new C126();
        const o135 = {
            [v128](a130, a131, a132) {
            },
            set b(a134) {
            },
        };
    }
}
