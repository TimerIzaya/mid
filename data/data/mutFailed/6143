function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.g = 1105832587;
    } catch(e3) {
    }
}
const v4 = new F0();
new F0();
const v6 = new F0();
function f7() {
    return v6;
}
[-9,1073741824,-9007199254740991,-4294967295,-35992,1073741824,-10,16];
[4294967296,10874,-151417977,589968390,788147706,4294967297,9223372036854775807];
[-13,129,36768,-65536,1341427183,-9007199254740992];
function f17() {
    function F18(a20) {
        if (!new.target) { throw 'must be called with new'; }
        const v21 = this.constructor;
        const v22 = v21.bind(F18, F18, F18, F18);
        try { v22(v22, F18, f17, f17, a20); } catch (e) {}
        try { new v21(); } catch (e) {}
    }
    new F18();
}
const v26 = [f17];
const v27 = [v26];
const v28 = [v26,f17,v26];
new BigInt64Array(3444);
class C33 {
}
new C33();
const v36 = [];
function f37() {
    const o38 = {
        __proto__: v36,
    };
}
new v4();
new Uint8ClampedArray();
const v44 = new Date();
const v46 = new BigUint64Array();
v46[v44] = v44;
f17(BigInt64Array, f17, ...v27, 3444, 1024, ...v28);
f17();
f17();
[0.9830880735406903,-0.6660198851192867,729.1589343121786,6.490727458123557e+307,-1.2538779643386477e+308,-1000000000.0];
[638.8226705123661,3.0,-2.2250738585072014e-308,771474.4832247959,816263.8956170448,2.220446049250313e-16,5.0];
const v52 = [8.944191192251868,-1.4998894798282654e+308,4.0,-0.0,-1000000000000.0,-5.0,-2.220446049250313e-16];
[-5.83623517593701,-1.0,-1e-15];
[692.912813481568,126686.58689393173];
function f56(a57, a58) {
    const o62 = {
        [a57](a60, a61) {
        },
    };
}
const v63 = f56(v52, 128);
/j(x)(x)(x)\2/gud;
/[\0](?:ab|cde)/vimsy;
/^xxx$/uisy;
try { v63.p(); } catch (e) {}
