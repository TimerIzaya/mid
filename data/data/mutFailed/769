function f0() {
}
const v2 = new WeakSet();
const v4 = [9.64246076776908,2.220446049250313e-16,-2.220446049250313e-16,-5.0,4.0,-0.0,1000.0,-1.0];
class C5 {
    static [v4];
}
Math.cbrt(Math);
let v9 = 60119;
function f10() {
    const v11 = [9007199254740990,16,-65536,7,10,9223372036854775807,16,4,1073741824];
    let v12 = [29915,-9007199254740990,9];
    const v13 = [39049,-2147483647,9007199254740991,30221,268435456,-2147483647,41987];
    const v14 = [2147483647,-32974,7,-54836,-9,-15,10000];
    if (v13 <= v14) {
        v11 ** v13;
        v12 += v14;
    } else {
        var f = v14;
    }
    return WeakSet;
}
[WeakSet,-2147483649];
const v19 = new Uint8ClampedArray();
v19.fill(Uint16Array, 127, v9);
[v2];
[v9,f0,v9];
v9 *= -2147483649;
new WeakSet(41);
("getBigInt64").normalize();
RangeError.pow(-15 >> 8798, -3.0);
new Float32Array(146);
new Uint32Array(13);
const v43 = new Uint16Array(Uint16Array);
function f45() {
    const v47 = [39049,-2147483647,9007199254740991,30221,268435456,-2147483647,41987];
    const v48 = [-268435456,-4294967295,-268435456,-335032419,-9007199254740991];
    try { v48.concat(v47); } catch (e) {}
    function f50() {
        return f50;
    }
    const o55 = {
        "e": Uint16Array,
        __proto__: 3.4890473589784586e+307,
        "g": 12,
        o(a54) {
            return v43;
        },
        ...1000000000000.0,
    };
    return Int32Array;
}
const v57 = `
    try {
        new Float64Array(41, Uint32Array, f45);
    } catch(e59) {
    }
`;
%PrepareFunctionForOptimization(f45);
f45();
f45();
%OptimizeFunctionOnNextCall(f45);
f45();
