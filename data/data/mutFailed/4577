const v4 = new BigInt64Array();
function f5(a6) {
    new BigUint64Array(-4096);
    return BigInt64Array;
}
Object.defineProperty(v4, "toString", { configurable: true, enumerable: true, value: f5 });
try { v4.entries(); } catch (e) {}
128 > 128;
new Date(128, 1000.0);
try { new Uint8ClampedArray(54893, Uint8ClampedArray, Uint8ClampedArray); } catch (e) {}
const v18 = new Uint8ClampedArray(127);
const v19 = v18?.constructor;
try { new v19(v18, Uint8ClampedArray, 6); } catch (e) {}
for (let v22 = 0; v22 < 10; v22++) {
    const v23 = [601759695];
    const v24 = [1073741824,1073741823,1376142744,1073741825];
    try { ("find").link(v23); } catch (e) {}
    try { v24["find"](..."find", undefined, ...v23, ...undefined); } catch (e) {}
}
new Int16Array(129);
const v33 = new Float64Array(777);
v33[Symbol.toPrimitive] = f5;
v33[2] = v33;
const v38 = [-8,-9007199254740991,-2,5,-710979536,-16743,-722516666,-14817,1352913669,1];
const v39 = v38?.concat;
try { new v39(Int16Array); } catch (e) {}
const v41 = [601759695];
const v42 = [1073741824,1073741823,1376142744,1073741825];
function f44(a45, a46, a47, a48) {
    function f49(a50) {
        const v51 = new v38();
        new f44(v51);
        return a47;
    }
    a46.toString = f49;
    function f53() {
        new Uint8ClampedArray(70);
        new Int16Array(1524);
        new Float32Array(3207);
        return f44;
    }
    a47[Symbol.toPrimitive] = f53;
    function f66(a67, a68) {
        return -2.2250738585072014e-308;
    }
    arguments[Symbol.toPrimitive] = f66;
    function f74() {
        const o91 = {
            "c": -4294967297n,
            [a46](a79, a80) {
                try {
                } finally {
                }
            },
            ..."Vre",
            "maxByteLength": -128,
            "c": v41,
            valueOf(a82, a83) {
                return a47;
            },
            "e": -4294967295,
            "e": -268435456,
            "maxByteLength": -4294967295,
            "arguments": v38,
            ...v41,
            "type": "Vre",
            ..."Vre",
            valueOf(a85, a86) {
                return a86;
            },
            ..."Vre",
            4: "Vre",
            "c": 54893,
            "type": "Vre",
            "type": "Vre",
            toString(a88, a89, a90) {
                return a45;
            },
            5: -4294967295,
            6: -128,
        };
        return "Vre";
    }
    f74();
    const v94 = new Int8Array();
    try { v94.entries(); } catch (e) {}
    const v96 = v94.buffer;
    v96.constructor = f44;
    v96.slice(2147483648);
    %OptimizeFunctionOnNextCall(f74);
    try { ("find").fixed(); } catch (e) {}
    let v101;
    try { v101 = v42["find"](..."find", a48, ...v41, ...v42, ...522675525n); } catch (e) {}
    !(v101 <= a47);
    return arguments;
}
const v104 = f44();
try { v104.callee(1000.0, v4, v104, v104); } catch (e) {}
f44();
%OptimizeFunctionOnNextCall(f44);
gc();
