function f0() {
}
const v3 = new WeakSet();
let v5 = 5;
v5++;
function F8(a10, a11) {
    if (!new.target) { throw 'must be called with new'; }
    const v12 = this?.constructor;
    try { new v12(v3); } catch (e) {}
    a10 + a10;
    try {
        this.d = 1000;
    } catch(e15) {
    }
    try {
        this.c = v5;
    } catch(e16) {
    }
    try {
        this.b = undefined;
    } catch(e17) {
    }
}
class C18 {
    set e(a20) {
        4294967296 | 4294967296;
        const t25 = [-147676202];
        t25.length = 1;
        /(?:a?)+/gvdmsy;
        /FRurNab\b\d\bcd/vimy;
        const v27 = /ZC\p{General_Category=Decimal_Number}[[\cA]foo(?!bar)baz+]+/gvdis;
        try { v27.exec(a20); } catch (e) {}
    }
    constructor(a30, a31) {
        a31[a31] = a30;
    }
    3053 = false;
    static #m(a33) {
        class C34 {
        }
        const v35 = new C34();
        [v35];
        const v37 = this.constructor;
        class C39 extends Date {
        }
        const v40 = new C39();
        v40.setUTCSeconds(v37, this);
        const v45 = this || this;
        const v46 = 9223372036854775807 / 9223372036854775807;
        5.0 / -2.220446049250313e-16;
        new Function("1532738280");
        !v46;
        function F56(a58) {
            if (!new.target) { throw 'must be called with new'; }
            const v59 = this.constructor;
            try { new v59(64); } catch (e) {}
            a58 - a58;
            this.g = -1517929768;
            try {
                this.g = -1;
            } catch(e62) {
            }
            try {
                this.h = a58;
            } catch(e63) {
            }
        }
        try { F56.bind(64); } catch (e) {}
        const v65 = new F56(-1);
        const v66 = new F56(64);
        class C67 extends F56 {
            #p(a69, a70) {
                const v71 = a69?.[32];
                Object.defineProperty(v66, v65, { writable: true, configurable: true, value: F56 });
                return v71;
            }
            [-1];
            static {
                let v74;
                try { v74 = this["n"](-1517929768); } catch (e) {}
                const o75 = {
                };
                const o76 = {
                    "c": v65,
                    ...v74,
                    65537: o75,
                    __proto__: this,
                    "a": this,
                    "g": this,
                    ...this,
                };
            }
        }
        try { C67(); } catch (e) {}
        const v78 = new C67();
        v78.g;
        64 || v46;
        return v45;
    }
}
const v81 = new C18(C18, f0);
new C18(C18, v81);
new C18(f0, v81);
new Float32Array(2319);
new Float64Array(229);
new Int16Array(2708);
const v95 = new BigUint64Array(512);
const v97 = new Int16Array();
v95.includes(v97);
