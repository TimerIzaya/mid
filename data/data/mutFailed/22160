function f0() {
    const o6 = {
        ["1073741824"]: "lQ5TG",
        138: "lQ5TG",
        ..."lQ5TG",
        get c() {
            const o5 = {
                __proto__: this,
                ["1073741824"]: this,
                "a": -6.148084410838246,
                10: this,
            };
            return this;
        },
    };
    return o6;
}
f0();
f0();
const v9 = f0();
class C10 extends f0 {
    #valueOf(a12, a13) {
        super.c = f0;
        return v9;
    }
    set h(a15) {
        let v14 = this;
        v14 = f0;
        f0 * a15;
        const v18 = Symbol.iterator;
        const o27 = {
            [v18]() {
                let v20 = 10;
                const o26 = {
                    next() {
                        v20--;
                        const v24 = v20 == 0;
                        const o25 = {
                            "done": v24,
                            "value": v20,
                        };
                        return o25;
                    },
                };
                return o26;
            },
        };
    }
}
new C10();
new C10();
new C10();
function F34() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.d = -65535;
    } catch(e37) {
        30895 ** -7;
        function F41(a43, a44, a45, a46) {
            if (!new.target) { throw 'must be called with new'; }
            ~a44;
            a46 | a46;
            const v49 = this.constructor;
            try { new v49(); } catch (e) {}
            typeof Float32Array;
        }
    }
    try {
        this.a = -65535;
    } catch(e53) {
    }
}
const t72 = 1000000.0;
const v54 = new t72();
const v55 = new F34();
const v56 = new F34();
try {
    Int8Array();
} catch(e59) {
    e59.name;
}
v56.length = F34;
const v62 = new Map();
const v66 = [F34,v56,64n,v62];
const v67 = [v66,v54,Map,Map];
[255n,v67,v55,v67,F34];
let v69 = 1386429407;
new Float64Array(1073741824);
function f75() {
    return f75;
}
const t91 = 5;
t91.constructor = f75;
new Int16Array();
for (let v77 = 0; v77 < 32; v77++) {
    v54["p" + v77] = v77;
}
const v84 = new Int8Array(628786973);
new BigInt64Array(257);
const v86 = v84.__defineGetter__;
v69--;
class C92 {
}
new C92();
(2136873598).constructor;
const v97 = [v86,v62];
const v99 = Reflect.apply(v66.find, v56, v97);
function f100() {
    "p" + -13;
}
%PrepareFunctionForOptimization(f100);
f100();
("h").split(65535);
const o108 = {
    "execution": "async",
};
let v109 = 0;
do {
    try { new v99(v67); } catch (e) {}
    new F34();
    v109++;
} while (v109 < 1)
%OptimizeFunctionOnNextCall(f100);
f100();
