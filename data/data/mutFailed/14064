class C9 {
    toString(a11, a12, a13) {
        let v14;
        try { v14 = new this(); } catch (e) {}
        super.e;
        try { new a12("setUint16", 43156); } catch (e) {}
        let {"b":v17,"g":v18,"h":v19,} = v14;
        this[2147483648] %= 3;
        const t8 = "setUint16";
        t8[v14] ||= 43156;
        super.a;
        ("h").__proto__ > 3;
        return a13[4294967297];
    }
    ["1"] = -48797;
    constructor(a25, a26) {
        super.g = this;
        try { ("1").search(C9); } catch (e) {}
        super[a25];
        const v33 = Symbol.iterator;
        const o42 = {
            [v33]() {
                let v35 = 10;
                const o41 = {
                    next() {
                        v35--;
                        const v39 = v35 == 0;
                        const o40 = {
                            "done": v39,
                            "value": v35,
                        };
                        return o40;
                    },
                };
                return o41;
            },
        };
    }
}
function f43() {
    return "1";
}
C9[Symbol.search] = f43;
const v49 = new C9(3, -48797);
new C9(4294967297, v49);
const v51 = new C9(3, "h");
function F52(a54, a55, a56) {
    if (!new.target) { throw 'must be called with new'; }
    this.c = a55;
    try {
        this.d = a54;
    } catch(e57) {
    }
    try {
        this.c = a54;
    } catch(e58) {
    }
}
const v59 = new F52("setUint16", -48797, 4294967297);
new F52("setUint16", 43156, -1073741824);
new F52("setUint16", 4294967297, 10);
function F62() {
    if (!new.target) { throw 'must be called with new'; }
    this.c = this;
    function f65() {
        return -9007199254740992n;
    }
    class C66 {
    }
    new C66();
    this.c = 1073741823;
    const o69 = {
    };
    class C70 {
    }
    const v72 = new Set();
    function F73(a75, a76) {
        if (!new.target) { throw 'must be called with new'; }
        try {
            this.d = a75;
        } catch(e77) {
        }
        v72[this];
        try {
            new F73(a76, v72);
        } catch(e80) {
        }
    }
}
new F62();
new F62();
new F62();
const o87 = {
};
o87.deleteProperty = v51;
const v89 = new Proxy(v59, o87);
delete v89?.g;
new Float32Array(4);
new Uint32Array(2);
function F97(a99, a100, a101, a102) {
    if (!new.target) { throw 'must be called with new'; }
}
const v103 = new F97(F97, F97, F97, F97);
v103.p14 = v103;
for (let v104 = 0; v104 < 25; v104++) {
    v103["p" + v104] = v104;
}
class C107 {
    constructor(a109, a110) {
        for (let i = 0; i < 10; i++) {
            this[this];
        }
    }
}
new C107();
function F113(a115, a116) {
    if (!new.target) { throw 'must be called with new'; }
    this.constructor = Symbol;
    const t118 = Array(11);
    t118[212] -= 3774;
    const v121 = this.constructor;
    try { new v121(this); } catch (e) {}
    a116++;
}
const v124 = new F113();
const t125 = v124.constructor;
new t125();
