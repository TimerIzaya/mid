const v0 = /xyz{1,32}?/ums;
const v3 = new Int16Array(2183);
v3[0];
class C5 {
}
const v6 = new C5();
const v8 = -4294967297n / -4294967297n;
const v9 = [601759695];
function f10() {
    "Vre" == C5;
    const o23 = {
        [-4294967297n](a15, a16, a17, a18) {
        },
        ...v9,
        ...v6,
        4: v8,
        toString(a20, a21, a22) {
            return 2183;
        },
        5: -4294967295,
    };
    return f10;
}
const v24 = /B/usy;
new f10(65537, f10);
const v28 = new BigInt64Array();
v28.copyWithin(-9223372036854775808);
const v31 = /(?<!a)*/gdsy;
function F32(a34, a35) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = a35;
    } catch(e36) {
        const v38 = new Int8Array();
        v38.buffer;
        async function* f41(a42, a43) {
            return -9223372036854775807;
        }
    }
    try {
        function F44() {
            if (!new.target) { throw 'must be called with new'; }
            try {
            } catch(e46) {
            }
        }
        const v47 = new F44();
        v47.constructor;
        this.b = a35;
    } catch(e49) {
    }
    try {
        this.h = a34;
    } catch(e50) {
    }
}
const v51 = new F32(v0, v24);
const v52 = new F32(v24, v31);
const v53 = new F32(v31, v0);
class C54 {
    #toString(a56, a57) {
        new Int8Array(2);
        new BigInt64Array(56);
        new Float32Array(257);
        return 257;
    }
    [-2] = v0;
    constructor(a68, a69, a70, a71) {
        super.e;
        /J9/udiy;
        /a|bxyz{0,1}?/vdis;
        /[\p{Script_Extensions=Greek}]/gusy;
    }
    d = v0;
    f;
    #b = v0;
    static 64 = v31;
}
new C54(v0, v53, v52, v51);
new C54(v24, v52, v53, v51);
new C54(v31, v51, v51, v52);
const v79 = [];
const v81 = new BigInt64Array(v79);
function f82() {
    return f82;
}
Object.defineProperty(v81, v79, { enumerable: true, get: f82 });
