const v2 = new Array(3257);
class C3 extends Array {
    static #m(a5) {
        class C6 extends Array {
            #b = 3257;
            static 2312993610 = a5;
            static [3257] = a5;
        }
        new C6();
        new C6(this, this);
        new C6();
        return a5;
    }
    6;
    static #d;
}
const v10 = new C3(v2, Array);
const v11 = new C3();
let v12 = new C3();
class C13 {
    constructor(a15, a16, a17, a18) {
        Object.defineProperty(v10, a16, { writable: true, configurable: true, enumerable: true, get: Array });
        super[Array] = this;
    }
    static get d() {
        const v20 = super.g;
        v12 |= v12;
        const v22 = Symbol.iterator;
        const o31 = {
            [v22]() {
                let v24 = 10;
                const o30 = {
                    next() {
                        v24--;
                        const v28 = v24 == 0;
                        const o29 = {
                            "done": v28,
                            "value": v24,
                        };
                        return o29;
                    },
                };
                return o30;
            },
        };
        return v20;
    }
}
const v32 = new C13(v11, v12, C13, v11);
new C13(v2, v10, v32, v11);
new C13(v32, v12, Array, v2);
/ha$\P{Decimal_Number}+/vdisy.constructor.$7;
