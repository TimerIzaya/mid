const v2 = new Float32Array(1024);
let v5;
try { v5 = v2.find(v2, v2); } catch (e) {}
const v6 = v5 < v5;
function f7() {
    return v5;
}
const v8 = new Int32Array(2332);
const v9 = [1024,1024];
[v9,1024,1024];
[v6];
try {
    v9.length = 2;
} catch(e13) {
}
new BigUint64Array(0);
for (let v22 = 0; v22 < 100; v22++) {
    f7();
}
v5 = v8;
const v24 = 4096;
function F29(a31) {
    if (!new.target) { throw 'must be called with new'; }
    function f32() {
        return f7;
    }
    Object.defineProperty(a31, "toString", { configurable: true, enumerable: true, get: f32 });
    const v34 = (a31 ^ a31)?.constructor;
    try { new v34(a31); } catch (e) {}
}
const v36 = new F29(0n);
new F29(v36);
