let v1 = "bQQ";
function f2() {
    const o8 = {
        0: 549538.9552070533,
        [549538.9552070533](a6, a7) {
        },
    };
    return o8;
}
const v9 = f2();
function F10(a12, a13, a14, a15) {
    if (!new.target) { throw 'must be called with new'; }
    a12[0];
    const v17 = this?.constructor;
    try { v17.call(v17); } catch (e) {}
    try { new v17(a12, a14, a13, a12); } catch (e) {}
    a12[0] = a12;
    a13[0] = a15;
    this.f = a12;
    this.f = v9;
}
-Infinity;
[1126838905];
let v24 = -1000.0;
function f25(a26) {
    return a26;
}
f25.caller = f25;
let v27 = -1000000.0;
class C28 {
    static g = v27;
    #c = v24;
    #e;
    static set a(a30) {
        v24 ^= 2.2250738585072014e-308;
        ({"b":v24,"c":a30,"g":v27,} = a30);
    }
    get f() {
        const v32 = v27 % v24;
        const v34 = Symbol.replace;
        2.2250738585072014e-308 || 2.2250738585072014e-308;
        try {
            v34.#e;
        } catch(e37) {
            return [923.3408061449261,-6.350919708227568e+307,-2.220446049250313e-16,0.04850379751250988,4.009495502233909];
            ([134133844,-339370636,65535,-4294967295,536870888,-324130953,536870912,268435439]).length;
        }
        return v32;
    }
}
const v41 = new C28();
const v42 = new C28();
const v43 = [v42,v42,v41];
const v44 = [v42,v43];
const v45 = [2.2250738585072014e-308];
function F46(a48, a49, a50) {
    if (!new.target) { throw 'must be called with new'; }
    a49.prototype;
    try { a50.groupToMap(f25); } catch (e) {}
    this.a = a48;
    let v54 = 536870912;
    v54 = 210;
    function F55(a57, a58, a59) {
        if (!new.target) { throw 'must be called with new'; }
    }
    try {
        this.f = a50;
    } catch(e60) {
    }
}
const v61 = new F46(2.2250738585072014e-308, F46, v44);
const v62 = new F46(v43, v61, v45);
v62?.__lookupGetter__;
class C64 {
    static get b() {
        v1[this] = v1;
        v1 &= C64;
        v42.__proto__;
        new Float64Array(1906);
        new BigInt64Array(9);
        new Uint16Array(1840);
        return Float64Array;
    }
}
const v78 = new Int32Array(1024);
[v78];
const t85 = (2136873598).constructor;
t85();
new Int32Array();
new v1();
function F86(a88, a89) {
    if (!new.target) { throw 'must be called with new'; }
    const v90 = this?.constructor;
    try { new v90(this, this); } catch (e) {}
    try {
        this.c = 15;
    } catch(e92) {
    }
}
new C64();
class C95 {
    static {
        for (const v97 of this) {
        }
    }
}
new Array(8);
new WeakSet();
try {
    Array(-12302);
} catch(e106) {
}
