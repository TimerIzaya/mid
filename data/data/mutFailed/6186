function f0() {
}
eval();
~-1.2032034612141183e+308;
function F6(a8, a9, a10) {
    if (!new.target) { throw 'must be called with new'; }
    const t6 = this.__lookupSetter__;
    t6(Float64Array);
}
for (let i19 = 0, i20 = 10;
    (() => {
        const v21 = i19 < i20;
        class C22 extends Date {
        }
        return v21;
    })();
    i19++) {
}
new Date(Array, Float64Array.of());
const v36 = new Date(Date);
v36.setFullYear;
class C38 extends f0 {
    #n(a40, a41, a42, a43) {
    }
    constructor(a45, a46, a47) {
        super();
        this["11"] **= a45;
        new BigInt64Array(129);
        new Int8Array(1796);
        const o55 = {
        };
        const v56 = [4294967296,-57202,256,48562,333990054];
        try { Uint32Array.apply(2, v56); } catch (e) {}
        new Int16Array(2);
        ("65535").lastIndexOf(128, 65536);
        class C66 {
        }
        function F67(a69, a70, a71, a72) {
            if (!new.target) { throw 'must be called with new'; }
            const v73 = this.__defineGetter__;
            let v74;
            try { v74 = v73(); } catch (e) {}
            try {
                let v75 = C66.g;
                let {"c":v76,"g":v77,...v78} = v75 = v74;
            } catch(e79) {
            }
        }
    }
}
new C38(9007199254740991n, "11", 15n);
new C38(9007199254740991n, "11", 9007199254740991n);
new C38(9007199254740991n, "h", 9007199254740991n);
("h").split(65535);
