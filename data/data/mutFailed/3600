const v2 = new BigInt64Array(BigInt64Array);
1 & 2;
Float32Array.d = Float32Array;
const v6 = Float32Array.length;
let v7 = v6 & v6;
const v8 = v6 >> v6;
const v9 = new Float32Array(1);
try { v9.with(Float32Array, Float32Array); } catch (e) {}
257 >>> 257;
new Float64Array(257);
v7--;
const v18 = new Int32Array(6);
const v19 = v18?.with;
try { new v19(Float64Array, Float64Array); } catch (e) {}
2549 !== 2549;
const v23 = 2549 << 2549;
const v24 = v23 * v23;
-v24;
try { new BigUint64Array(BigUint64Array, v24, Float64Array); } catch (e) {}
let v28;
try { v28 = new BigUint64Array(v2, BigUint64Array, v2); } catch (e) {}
new BigUint64Array(2549);
try { new Int8Array(v8, v8, v28); } catch (e) {}
let v33;
try { v33 = new Int8Array(Int8Array, Int8Array, Int8Array); } catch (e) {}
v33.byteOffset = v33;
const v34 = new Int8Array(13);
try { v34.filter(v28); } catch (e) {}
const v36 = [-3.0];
213 / 213;
v36.length >>>= 213;
let v41 = Math.sin(4294967295);
v41++;
