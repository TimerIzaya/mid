const v1 = [null,null,null];
class C4 extends Uint16Array {
}
class C5 extends C4 {
    constructor(a7, a8, a9, a10) {
        super();
        function f11(a12, a13, a14) {
            return a7;
        }
        const v17 = new BigUint64Array();
        const v19 = [2082,"function",this,C4,v17];
        const o20 = {
            "arguments": v19,
            "type": "function",
        };
        new Worker(f11, o20);
    }
}
[v1];
const v23 = [-268435456,1000];
function f24(a25, a26) {
    [-504863.1885363821,-248378.80818527355,-147.11467188198264,-1.7039705769992093e+308] | 2082;
    return C5;
}
v23.toString = f24;
let v30 = 30918;
const v31 = v30--;
const v32 = Math.exp(v23);
Math.ceil(v31);
const v34 = [null];
function f35() {
    return v1;
}
function f36(a37) {
    v23["join"]("join");
}
Object.defineProperty(v34, "b", { writable: true, enumerable: true, get: f35, set: f36 });
new Set();
/(?:ab|cde)H[^123]*/vsy;
/a|bGxyz{93}a{0}\p{Script=Greek}/udis;
/(?:a+){0,0}/vdimy;
const v49 = new BigInt64Array();
Math.log1p(268435456);
function f54(a55, a56) {
    return -4096;
}
const o57 = {
    __proto__: v49,
};
const v66 = [];
v66.constructor = f36;
let v67;
try { v67 = v66.flat(4096); } catch (e) {}
v67[1];
function F69(a71) {
    if (!new.target) { throw 'must be called with new'; }
}
function F73(a75, a76) {
    if (!new.target) { throw 'must be called with new'; }
    Number.isFinite(Number);
    const v79 = this.constructor;
    ([586209.1308562411,9.273207833056233,-793.5051180378861,-88.02009084622205,1000.0,5.993768942190951e+307,0.6895260767593681,3.203916786355496,1.7976931348623157e+308,-1.0422896205696638e+308]).fill(268435456, -27205);
    let v83 = 0;
    do {
        typeof v83 === "string";
        v83++;
    } while (v83 < 7)
    try { new v79(); } catch (e) {}
}
const v91 = new Int16Array(2183);
Uint8Array[1] = v32;
new Uint8Array(Uint8Array);
const v97 = new Int16Array(8);
async function f99(a100, a101, a102) {
    delete v97[-1000000000.0];
    function F105(a107, a108) {
        if (!new.target) { throw 'must be called with new'; }
        this.b = this;
        this.b = "b";
        this.d = a108;
    }
    const v109 = new F105();
    const v110 = new F105(v109, v109);
    const o111 = {
        ...v110,
        __proto__: v109,
    };
    for (const v112 in o111) {
    }
    let [v113,v114,...v115] = v91;
    v91[5];
    const o117 = {
    };
    for (let v119 = 0; v119 < 500; v119++) {
        class C121 {
        }
        const v124 = new Int32Array(v119, v119, 257);
        let v126 = new Map();
        [...v126] = v124;
    }
    const v129 = new Uint16Array(5);
    function f130(a131, a132) {
        const o136 = {
            "c": v115,
            set g(a134) {
            },
            39: v129,
        };
    }
    f130("message", 5);
    await "message";
    return Uint8Array;
}
const o139 = {
};
const v141 = new Proxy(v34, o139);
v141.o129 = Set;
try {
    with (v141) {
        o139[b];
    }
} catch(e144) {
}
f99(8, 8, 948737.12760097);
+-36313 || (135.68951961804942 / (-36313 + 135.68951961804942));
