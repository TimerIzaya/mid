4096 - 4096;
const t0 = 4087;
const v5 = t0(4087);
const o7 = {
    "type": "minor",
};
const v8 = new Int32Array(4096);
new Uint16Array(8);
new BigInt64Array(257);
new v5();
const v19 = new Int32Array(Int32Array, Int32Array, Int32Array);
~v19;
let v21 = Float64Array;
v21 = 8;
new BigInt64Array(8);
new BigInt64Array(2886);
new Int32Array(536);
new Float32Array(4096);
const v38 = new Uint16Array(255);
const v39 = v38?.constructor;
try { v39(4096, v38, 255); } catch (e) {}
const v42 = 512 % 512;
let [] = [];
const v44 = [1000000.0,-1.7976931348623157e+308];
const o45 = {
    ...v44,
};
new Int8Array(2830);
const v52 = new Int32Array(10);
function f55(a56, a57, a58) {
    class C59 {
        static #g;
        #b;
        [v8];
    }
    new C59();
    const v61 = new C59();
    new C59();
    const o63 = {
        ...a56,
        814452916: 129,
        "f": v52,
        ...v52,
        __proto__: a57,
        [a57]: Float64Array,
    };
    let v64;
    try { v64 = o63.p(v61, C59, o63, v61, v21); } catch (e) {}
    v64 | v64;
    Array(4096);
    %PrepareFunctionForOptimization(Array);
    Array(4096);
    Array(4096);
    %OptimizeFunctionOnNextCall(Array);
    Array(4096);
    return f55;
}
const v70 = new Int32Array(512);
const v71 = [BigInt64Array,BigInt64Array];
[Int32Array,Uint16Array,Uint16Array];
const v73 = [v38,Uint16Array,512,Int32Array];
const v74 = /((((.).).).)rfoo|(bar|baz)|quux*/uims;
const v75 = v42.constructor();
class C78 {
}
const v79 = new C78();
function F80(a82, a83) {
    if (!new.target) { throw 'must be called with new'; }
    const v84 = BigInt64Array?.__lookupSetter__;
    try { new v84(a82, ...v84, -534568.6902183883, this); } catch (e) {}
    try {
        v79.__proto__ = a82;
    } catch(e86) {
    }
    try { v84(v19); } catch (e) {}
    a83[2147483648] = a83;
    const v89 = new Int8Array();
    for (const v90 in v89) {
    }
}
const v95 = [-2,257,-107178159,-35269,9223372036854775807,1203530861,-32678];
const o96 = {
};
new Proxy(v95, o96);
switch (v74) {
    case v73:
        v74[v71];
        v70.valueOf = v75;
        break;
}
