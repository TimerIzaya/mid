const v0 = /m1/vimy;
const v1 = /(?:a?)*/vdm;
const v2 = /[\0]/gui;
[-65535,-45014,-7,255];
const v4 = [-9007199254740991,4,-9];
const v5 = v4?.values;
try { new v5(); } catch (e) {}
const v7 = [-16,1073741824,-7,-1988884830,17465,-128];
try { v7.map(v0); } catch (e) {}
v7[5] = v7;
const v10 = [512,4294967297];
v10[1] = v10;
const v11 = [-8,-378253963,-4,-13801,4294967295,1];
[50251,-9007199254740992,-5283,-430424507,1,63112,-52415,-536870912,-1024,-9];
function f13(a14, a15) {
    a15[4] = a15;
    let v16;
    try { v16 = a15.values(); } catch (e) {}
    const v17 = v16?.constructor;
    try { new v17(v11); } catch (e) {}
    const o32 = {
        __proto__: v1,
        p(a20, a21) {
            const v25 = !this;
            const v26 = 1 << v25;
            this >>> -143444826;
            v26 << v11;
            1 | v26;
            parseInt.max(this);
            parseInt.tan(v25);
            return v2;
        },
        "b": v7,
    };
    const v35 = this?.Function;
    try { new v35(v11); } catch (e) {}
    Array.__proto__ = this;
    const o42 = {
        get b() {
            this.c = this;
            const v38 = Array.constructor;
            try { v38(); } catch (e) {}
            const v40 = new v38(this, this, Array, Array, v38);
            try { v40.write(); } catch (e) {}
            return this;
        },
    };
    const o43 = {
        ...o42,
    };
    try { o32.test(a14); } catch (e) {}
    return o32;
}
const v45 = f13(v2, v11);
try { v45.p(v11, f13); } catch (e) {}
f13(v45, v4);
f13(f13, v11);
const v51 = new WeakRef(4096);
v51[233];
v51[1271];
const v56 = new Int32Array(10);
const v59 = new Int8Array(7, v56, v56);
const v60 = v59[5];
v60 & v60;
1.8023018568192065e+307 | 1.8023018568192065e+307;
let v64 = 2;
v64--;
v64--;
const v68 = new Int16Array(v64);
let v69 = v68.lastIndexOf(1.8023018568192065e+307);
v69++;
v69 + v69;
