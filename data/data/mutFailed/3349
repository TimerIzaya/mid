let v3 = 4294967297;
v3 + v3;
const v5 = v3++;
v5 >>> v5;
let v8 = 35852;
function f9(a10, a11, a12, a13) {
    a11 != a11;
    a13 >> a13;
    a10 === a10;
    a11 * a11;
    a12 != a12;
    a13 - a13;
    const o34 = {
        ...a10,
        [a13]: v3,
        "b": a11,
        "e": a13,
        "d": 0,
        "h": -1731428639,
        ...a13,
        "a": a12,
        get g() {
            this[536870889] = this;
            try { Math.expm1(0); } catch (e) {}
            Math.hypot(v8);
            Math.expm1(2099922018);
            const v28 = this - ++v8;
            const v29 = v28 ^ v28;
            v29 <= v29;
            !(!v28);
            v28 / v28;
            return a10;
        },
    };
    o34[536870889] = o34;
    return o34;
}
f9(v3, 536870889, v8, f9(v3, -4294967295, 536870889, 536870889));
const v37 = f9(f9, 0, v3, -1731428639);
const v38 = [-4294967295,f9,f9,536870889];
const v39 = [v3];
try { v39.entries(); } catch (e) {}
const v41 = [v39,-4294967295,v38];
v41.g = v41;
255 ^ 255;
-5 - -5;
8 >>> 8;
const v48 = [];
try { v48.groupToMap(v37); } catch (e) {}
const v50 = [v48,v48,v48,v48,v48];
class C51 {
    constructor(a53, a54) {
        try { this.constructor(a53, 8); } catch (e) {}
        a53 >>> a53;
        try { a54.join(-1731428639); } catch (e) {}
        function F58(a60, a61) {
            if (!new.target) { throw 'must be called with new'; }
            try { this.constructor(F58, a53); } catch (e) {}
            a60.prototype;
            a60.g = a60;
            const v64 = this?.constructor;
            v64.length = v64;
            const v65 = v64.length;
            v65 % v65;
            try { new v64(v50, this); } catch (e) {}
            a61 ^ a61;
            this.b = v48;
        }
        new F58(C51, v48);
        new F58(v48, v50);
        new F58(C51, v48);
    }
}
try { new C51(v8, v41); } catch (e) {}
new C51();
new C51();
new C51(v50, v48);
