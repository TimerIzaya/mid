4 | 4;
~11;
function F8(a10, a11, a12) {
    if (!new.target) { throw 'must be called with new'; }
    a12 ^ a12;
    try {
        this.h = a11;
    } catch(e14) {
    }
}
const v15 = new F8(4, "prototype", 4, F8, 4);
const v16 = v15?.constructor;
try { new v16(11, 11, 11); } catch (e) {}
const v18 = new F8(v15, "cR", "512", "prototype", "cR", "cR");
const v19 = new F8(v18, "prototype", "prototype");
switch ("512") {
    default:
        v18[v19];
        break;
}
const v21 = [268435440,8,7,1073741824,2147483647,70520590,-9223372036854775807,129,268435439,-1147002105];
v21.concat(v21);
class C23 {
    static [v15];
    2321718505 = -1023834993;
    #c = 4;
}
const t27 = 11;
const v24 = new t27();
v24[2321718505] = v24;
const v25 = new C23();
v25[268435439];
const v27 = new C23();
v27[2321718505];
