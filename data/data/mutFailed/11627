new WeakMap();
const v4 = new Float64Array(1000);
const v7 = new BigInt64Array(1000);
try { v7.entries(); } catch (e) {}
Int32Array.BYTES_PER_ELEMENT;
new Int32Array(BigInt64Array);
const v13 = [];
class C14 {
    static get b() {
        try {
            super.getOwnPropertyNames();
        } catch(e17) {
        }
        return v13;
    }
    constructor() {
        this[v13] = this;
        this[v13] %= this;
    }
    static e;
    [v13];
}
const v19 = C14?.toString;
try { new v19(); } catch (e) {}
const v21 = new C14();
const t25 = 1000;
const v22 = new t25();
const v23 = v22?.constructor;
try { new v23(); } catch (e) {}
~4294967296;
1795241225 == v4;
class C33 {
    [-9] = v22;
    4294967296;
    5;
}
C33.prototype = C33;
C33.e = C33;
const v34 = new C33();
v34[4294967296];
const v36 = new C33();
v36[4294967296] = v36;
const v37 = new C33();
v37[4294967296] = v37;
const v38 = 4294967296 !== v36;
v38 || v38;
const v40 = v21 << 65535;
v40 + v40;
const v43 = gc?.constructor;
try { new v43(C14); } catch (e) {}
const t50 = "async";
t50[3] = "async";
const o47 = {
    "execution": "async",
    "type": "major",
};
gc(o47);
const v49 = v23?.constructor;
try { new v49(C14); } catch (e) {}
const t59 = -9;
t59[9] = -124726096;
10 >>> 10;
-10;
8342 - 8342;
8342 >>> 8342;
