function f0() {
    const o8 = {
        4: 10000,
        "d": 112.05999995545699,
        253: 18545,
        "h": 18545,
        "b": 10000,
        set g(a5) {
            const v6 = this[1];
            try {
                v6.f = v6;
            } catch(e7) {
            }
        },
    };
    o8[253] = o8;
    return o8;
}
function f9(a10) {
    new BigUint64Array(127);
    new BigInt64Array(3);
    const v19 = new Uint8ClampedArray(15);
    return v19;
}
f0.toString = f9;
const v20 = f0();
function f21() {
    return f0;
}
Object.defineProperty(v20, "toString", { writable: true, get: f21 });
const v22 = f0();
let v23 = 0;
do {
    const o24 = {
    };
    o24.a = f21;
    o24.a = v23;
    try {
        o24.a = f0;
    } catch(e25) {
    }
    try {
        const o26 = {
        };
        o26.a = f0;
        o26.a = o26;
        o26.a = f0;
        o26.e = f0;
    } catch(e27) {
    }
    try {
        const o28 = {
        };
        o28.h = o28;
        let v31 = -9007199254740990;
        Math.ceil(!o28);
        const v34 = Math.atan(o24);
        const v35 = ~1928348201;
        Math.asin(v31);
        v35 << o28;
        ++v31;
        o28.e = v22;
        const v43 = !(v20 >>> 17611);
        v20 && v34;
        ~v43;
        17611 | v20;
        o28.a = f0;
        o28.e = f0;
        o28.f = v23;
    } catch(e47) {
    }
    try {
        const o48 = {
        };
        o48.d = o48;
        o48.d = v20;
        o48.a = f0;
        o48.e = f0;
        o48.d = f0;
    } catch(e49) {
    }
    let v50 = v23++;
    v50++;
} while (v23 < 10)
f0 ^ f0;
const v55 = v20.d;
Object.defineProperty(v20, "b", { get: f0, set: f0 });
try { new v55(v22, v22, v22, v22, v20); } catch (e) {}
new Uint32Array(1268);
new BigInt64Array(135);
new Int16Array(1000);
const v66 = f0();
3843 >>> 3843;
new Int8Array(3843);
new BigInt64Array(512);
const o76 = {
    "e": v66,
    "d": v23,
};
/pWT/vim;
const v78 = /\u{12345}+/gvdy;
v78.lastIndex = v78;
/[xyz]/imsy;
new BigUint64Array(7);
try { ("K8gA").blink(); } catch (e) {}
class C85 {
    static #c = "bigint";
    static valueOf(a87) {
        this.#c = "bigint";
    }
}
C85.length = C85;
-8 << -8;
4294967295 - 4294967295;
