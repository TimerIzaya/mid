function f0() {
}
function F1() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.h = f0;
    } catch(e3) {
    }
    try {
        this.d = f0;
    } catch(e4) {
    }
    try {
        this.a = f0;
    } catch(e5) {
    }
}
const v6 = new F1();
const v7 = new F1();
const v8 = new F1();
function f9() {
    return f0;
}
function f10(a11, a12, a13, a14) {
    const o20 = {
        ...a14,
        [a11]: v7,
        [a13]: a11,
        __proto__: v6,
        toString(a16, a17, a18) {
            f9();
            return F1;
        },
        [v8]: f0,
        "f": a11,
        ...v6,
    };
    return o20;
}
const v21 = f10(f10, v7, v6, v8);
%PrepareFunctionForOptimization(Array);
new Uint8Array(268435440);
const v26 = f10(v7, v6, v6, v7);
f10(v21, v7, v6, v7);
function F28(a30, a31, a32, a33) {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.f = v8;
    } catch(e34) {
    }
    try {
        this.c = a32;
    } catch(e35) {
    }
}
const v36 = new F28(v21, v26, v6, v8);
const v37 = new F28(v26, v21, v7, v26);
new F28(v36, v21, v6, v37);
function f39() {
    let v40 = "boolean";
    const o80 = {
        "e": -2147483647,
        [-2147483647]: 8.80579417534662,
        0: -2147483647,
        set a(a44) {
            Math.round(1531487198);
            ++v40;
            Math.sinh(-268435456);
            let v51 = ~1531487198;
            const v52 = [748666.7832804511,3.0];
            class C54 extends Float64Array {
                [v52];
            }
            let v55 = 6;
            class C57 {
                get b() {
                    delete this?.e;
                    v55 = 1664606158;
                    const o61 = {
                        valueOf() {
                            return this;
                        },
                    };
                }
            }
            class C62 extends C57 {
                constructor(a64, a65, a66, a67) {
                    super();
                    super.b;
                }
            }
            new C54();
            !(v51++);
            let v72;
            try { v72 = a44(a44, a44); } catch (e) {}
            ([-207.12380510118123,-982114.0356244294,0.9612192807513333,-3.0,-1000.0,1.0]).length;
            const v77 = new Uint32Array(4);
            v77.fill();
            v72?.[-2147483647];
        },
        "h": -2147483647,
        4294967296: 8.80579417534662,
        __proto__: v40,
    };
    return o80;
}
f39();
class C84 extends Array {
}
new C84();
const v89 = new BigUint64Array(10);
class C90 {
}
const o94 = {
    "maxByteLength": 150,
};
const v96 = new ArrayBuffer(127, o94);
const v98 = new Uint8ClampedArray(v96);
v98[-65536n] = v98;
v89.g = v89;
for (const v100 in v89) {
    new Float64Array(2147483647);
}
const v105 = new BigUint64Array(116);
const o108 = {
};
for (let v109 = 0; v109 < 5; v109++) {
    for (let v110 = 0; v110 < 5; v110++) {
        const t128 = [0.8307152163010869,1.0,0.0];
        t128.length = v110;
    }
}
new BigInt64Array(v105, 116, 116);
const t133 = f39();
delete t133?.e;
new Float32Array(2427);
Math.atan(Math);
const o121 = {
    "maxByteLength": 150,
};
const v122 = /[\cA](?!(a))\1/udims;
[v122,v122,v122,v122,v122];
eval(2147483647);
const v126 = new v8();
const v127 = [0.602038268284836,-1.7976931348623157e+308,-4.211494269917182,-939259.7989376923,0.02623941368615268];
function F128(a130, a131, a132, a133) {
    if (!new.target) { throw 'must be called with new'; }
    try { this.valueOf(); } catch (e) {}
    try { a130.toString(); } catch (e) {}
    a133[1];
    try {
        this.b = v126;
    } catch(e137) {
    }
    try {
        this.h = a132;
    } catch(e138) {
    }
    try {
        this.c = v127;
    } catch(e139) {
    }
}
new BigInt64Array(7);
new Int32Array(1024);
function f144() {
    new Uint16Array(209);
    return 209;
}
new Int8Array(268435456);
const v153 = Float64Array.of();
v153.toString = f144;
[];
new Date(Array, v153);
