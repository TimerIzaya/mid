const v0 = [536870887,1035894389,3,-9223372036854775808,-18980,-1073741824,5,-1221961149,1073741824];
function f1(a2) {
    a2 >>> a2;
    function f4() {
        return f4;
    }
    class C5 extends f4 {
    }
    class C6 extends C5 {
    }
    try { v0(C6, f4); } catch (e) {}
    return f4;
    return a2;
}
v0.toString = f1;
[512,-65535,-4096,16396,268435441,1314964874,4294967296,1908890949,-203812039,-1734646584];
const v9 = [-9007199254740991,536870912,-7,65536,-268435456,458760028,0];
const v10 = [0.0,0.0,698412.6481580001,-567443.2171608295,-1e-15,0.15676580615483737];
const v11 = [196.39760182723217,-1.0,3.1782842137138516,NaN];
const v12 = [-561034.1824199299,0.9057163304169688,-6.105355322190245,9.944731107882166e+307,1000000000.0,3.0,0.5800824750052597,1.7976931348623157e+308];
const v13 = /Jnd/guy;
/O*/gvdimy;
const v15 = /x[\1111]/dis;
class C16 {
    static get f() {
        let v18;
        try { v18 = new this(...v12, ...this, this, ...v10, ...v12); } catch (e) {}
        try { v18.o(v10); } catch (e) {}
        this != v15 ? this : v15;
        v13["exec"]("exec");
        return v18;
    }
    #h = v11;
    #a;
    [v0] = v10;
    c = v9;
}
new C16(v12);
new C16();
new C16();
function f33(a34, a35, a36, a37) {
    try { a34(); } catch (e) {}
    a35 & a35;
    const v40 = 3 | a35;
    v40 || v40;
    a34 ^ a34;
    a35 < a34;
    const o47 = {
        n(a45, a46) {
            return a46;
        },
    };
    return Int8Array;
}
for (let v48 = 0; v48 < 500; v48++) {
    f33(Int8Array);
}
