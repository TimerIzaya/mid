function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        const v5 = new Int32Array();
        const v7 = new BigInt64Array();
        const v8 = [0.8873874325255258,NaN,3.0,2.2491700839340325,5.0];
        let v9;
        try { v9 = v8.some(); } catch (e) {}
        const v10 = [-1.7976931348623157e+308];
        function f11(a12, a13, a14, a15) {
            const o23 = {
                toString(a17, a18, a19) {
                    try { this.toString(a18, v9, a17); } catch (e) {}
                    a18++;
                    a14[a13] = a12;
                },
            };
            return o23;
        }
        const v24 = f11(v7, 129, v10);
        const v25 = f11(v5, 129, v8);
        for (let v26 = 0; v26 < 5; v26++) {
            v25 % v24;
            v8.unicode = v5;
        }
        const t25 = -244047336;
        t25.isConcatSpreadable = -244047336;
    } catch(e29) {
    }
    try {
        this.g = -244047336;
    } catch(e30) {
    }
    try {
        this.c = -244047336;
    } catch(e31) {
    }
}
const v32 = new F0();
const v33 = new F0();
const v34 = new F0();
class C35 {
    3918843671 = v33;
    toString(a37, a38) {
        super[v34];
        this[2147483649];
        try {
            new F0();
        } catch(e42) {
        }
        return a38;
    }
    0 = v32;
    static #b = v33;
    static #g = F0;
}
new C35();
const v44 = new C35();
new C35();
["m",F0,C35];
[v44,v33,[C35]];
function f52(a53, a54, a55, a56) {
    const v59 = new SharedArrayBuffer(a53);
    const v61 = new Set();
    const v62 = v61.add(v59);
    let [v63,,...v64] = v61;
    let v65;
    try { v65 = v64.findLast(); } catch (e) {}
    const v66 = v63.setUTCHours(v62, Float64Array, v64);
    const o68 = {
        __proto__: F0,
    };
    function f69() {
        return v65;
    }
    const v70 = f69();
    class C71 extends f69 {
    }
    const v73 = new Int32Array(v70, f52, Int32Array);
    Number.isNaN(v66);
    Math.exp(-Infinity);
    return v63.setUTCFullYear(v73, f52, f52, v63);
}
for (let v79 = 0; v79 < 25; v79++) {
    const v80 = [1073741824,1073741823,1376142744,1073741825];
    for (let v81 = 0; v81 < 5; v81++) {
        v80.toSorted(f52);
    }
}
