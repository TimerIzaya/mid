[];
const v3 = new Float64Array(3);
const v6 = new Uint32Array(16);
const v9 = new Int8Array(2);
const v12 = v9[Symbol.unscopables];
try {
    v6[v3] = v9;
} catch(e13) {
}
let v14;
try { v14 = v9.reduceRight(v12); } catch (e) {}
v14[6] = Uint32Array;
try {
    v14 = Int8Array;
} catch(e15) {
}
new Int8Array(257);
const v8 = new Uint8ClampedArray(64);
new BigUint64Array(1024);
Object.defineProperty("o", 257, { writable: true, configurable: true, enumerable: true, value: "string" });
/Co/vgyd;
/\118/sy;
/Q(?:ab|cde)3+/mvgd;
class C18 extends Int8Array {
    constructor(a20, a21) {
        super(v8, 257, 257);
        new BigUint64Array(64, 64);
        try {
            const o23 = {
            };
            new Int8Array(o23);
        } catch(e25) {
        }
    }
}
new C18(NaN, v8);
const v27 = new C18(NaN, v8);
new C18(0.03562848096743498, v27);
