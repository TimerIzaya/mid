function F0() {
    if (!new.target) { throw 'must be called with new'; }
    try {
        this.c = 1073741825;
    } catch(e3) {
    }
    try {
        this.f = 1073741825;
    } catch(e4) {
    }
    try {
        this.d = 1073741825;
    } catch(e5) {
    }
}
const v6 = new F0();
const v7 = new F0();
const v8 = new F0();
class C9 extends F0 {
    constructor(a11, a12) {
        let v10 = this;
        super();
        %VerifyType(F0);
        a12 - v7;
        try {
            v10 ^= a11;
        } catch(e15) {
        }
    }
    static [F0] = v6;
    [v6];
    [F0] = F0;
}
const v16 = new C9(v7, v7);
const v17 = new C9(v16, v16);
const v18 = new C9(v16, v17);
class C19 extends F0 {
    constructor(a21, a22) {
        super();
        try {
            v8.__proto__ = v7;
        } catch(e23) {
        }
        delete a21[v16];
    }
    #m(a26, a27, a28) {
        try {
            a27 = a28;
        } catch(e29) {
        }
        try {
            super.a = C9;
        } catch(e30) {
        }
        return v6;
    }
}
const v31 = new C19(v6, v6);
new C19(v31, v18);
const v33 = new C19(v31, v16);
try { C9(v33, v33); } catch (e) {}
try {
    new F0();
} catch(e37) {
}
v18 / v17;
[-16,8,-29422,9007199254740990,127,1024];
[-268435456,65536,-9223372036854775808,-128,1073741824,8];
[1073741824,129,127,5,1227381157,16,-988948974,0,570128567,8];
